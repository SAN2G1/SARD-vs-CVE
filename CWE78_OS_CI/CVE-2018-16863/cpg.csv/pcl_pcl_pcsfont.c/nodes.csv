command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8088052	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pcl_pcsfont.c								
ANR	8088053	ClassDef	<unnamed>	50:8:1451:1551							
ANR	8088054	DeclStmt									
ANR	8088055	Decl									pcl_character_format
ANR	8088056	Function	pcl_delete_soft_font	61:0:1738:3026							
ANR	8088057	FunctionDef	"pcl_delete_soft_font (pcl_state_t * pcs , const byte * key , uint ksize , void * value)"		8088056	0					
ANR	8088058	CompoundStatement		64:0:1853:3026	8088056	0					
ANR	8088059	IfStatement	if ( value == NULL )		8088056	0					
ANR	8088060	Condition	value == NULL	65:8:1863:1875	8088056	0	True				
ANR	8088061	EqualityExpression	value == NULL		8088056	0		==			
ANR	8088062	Identifier	value		8088056	0					
ANR	8088063	Identifier	NULL		8088056	1					
ANR	8088064	CompoundStatement		2:23:24:24	8088056	1					
ANR	8088065	IfStatement	"if ( ! pl_dict_find_no_stack ( & pcs -> soft_fonts , key , ksize , & value ) )"		8088056	0					
ANR	8088066	Condition	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , key , ksize , & value )"	66:12:1892:1951	8088056	0	True				
ANR	8088067	UnaryOperationExpression	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , key , ksize , & value )"		8088056	0					
ANR	8088068	UnaryOperator	!		8088056	0					
ANR	8088069	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , key , ksize , & value )"		8088056	1					
ANR	8088070	Callee	pl_dict_find_no_stack		8088056	0					
ANR	8088071	Identifier	pl_dict_find_no_stack		8088056	0					
ANR	8088072	ArgumentList	& pcs -> soft_fonts		8088056	1					
ANR	8088073	Argument	& pcs -> soft_fonts		8088056	0					
ANR	8088074	UnaryOperationExpression	& pcs -> soft_fonts		8088056	0					
ANR	8088075	UnaryOperator	&		8088056	0					
ANR	8088076	PtrMemberAccess	pcs -> soft_fonts		8088056	1					
ANR	8088077	Identifier	pcs		8088056	0					
ANR	8088078	Identifier	soft_fonts		8088056	1					
ANR	8088079	Argument	key		8088056	1					
ANR	8088080	Identifier	key		8088056	0					
ANR	8088081	Argument	ksize		8088056	2					
ANR	8088082	Identifier	ksize		8088056	0					
ANR	8088083	Argument	& value		8088056	3					
ANR	8088084	UnaryOperationExpression	& value		8088056	0					
ANR	8088085	UnaryOperator	&		8088056	0					
ANR	8088086	Identifier	value		8088056	1					
ANR	8088087	ReturnStatement	return 0 ;	67:12:1966:1974	8088056	1	True				
ANR	8088088	PrimaryExpression	0		8088056	0					
ANR	8088089	CompoundStatement		7:8:179:219	8088056	1					
ANR	8088090	IdentifierDeclStatement	pl_font_t * plfontp = ( pl_font_t * ) value ;	70:8:2033:2073	8088056	0	True				
ANR	8088091	IdentifierDecl	* plfontp = ( pl_font_t * ) value		8088056	0					
ANR	8088092	IdentifierDeclType	pl_font_t *		8088056	0					
ANR	8088093	Identifier	plfontp		8088056	1					
ANR	8088094	AssignmentExpression	* plfontp = ( pl_font_t * ) value		8088056	2		=			
ANR	8088095	Identifier	plfontp		8088056	0					
ANR	8088096	CastExpression	( pl_font_t * ) value		8088056	1					
ANR	8088097	CastTarget	pl_font_t *		8088056	0					
ANR	8088098	Identifier	value		8088056	1					
ANR	8088099	IfStatement	if ( pcs -> font_selection [ 0 ] . font == plfontp )		8088056	1					
ANR	8088100	Condition	pcs -> font_selection [ 0 ] . font == plfontp	72:12:2088:2125	8088056	0	True				
ANR	8088101	EqualityExpression	pcs -> font_selection [ 0 ] . font == plfontp		8088056	0		==			
ANR	8088102	MemberAccess	pcs -> font_selection [ 0 ] . font		8088056	0					
ANR	8088103	ArrayIndexing	pcs -> font_selection [ 0 ]		8088056	0					
ANR	8088104	PtrMemberAccess	pcs -> font_selection		8088056	0					
ANR	8088105	Identifier	pcs		8088056	0					
ANR	8088106	Identifier	font_selection		8088056	1					
ANR	8088107	PrimaryExpression	0		8088056	1					
ANR	8088108	Identifier	font		8088056	1					
ANR	8088109	Identifier	plfontp		8088056	1					
ANR	8088110	ExpressionStatement	pcs -> font_selection [ 0 ] . font = 0	73:12:2140:2171	8088056	1	True				
ANR	8088111	AssignmentExpression	pcs -> font_selection [ 0 ] . font = 0		8088056	0		=			
ANR	8088112	MemberAccess	pcs -> font_selection [ 0 ] . font		8088056	0					
ANR	8088113	ArrayIndexing	pcs -> font_selection [ 0 ]		8088056	0					
ANR	8088114	PtrMemberAccess	pcs -> font_selection		8088056	0					
ANR	8088115	Identifier	pcs		8088056	0					
ANR	8088116	Identifier	font_selection		8088056	1					
ANR	8088117	PrimaryExpression	0		8088056	1					
ANR	8088118	Identifier	font		8088056	1					
ANR	8088119	PrimaryExpression	0		8088056	1					
ANR	8088120	IfStatement	if ( pcs -> font_selection [ 1 ] . font == plfontp )		8088056	2					
ANR	8088121	Condition	pcs -> font_selection [ 1 ] . font == plfontp	74:12:2185:2222	8088056	0	True				
ANR	8088122	EqualityExpression	pcs -> font_selection [ 1 ] . font == plfontp		8088056	0		==			
ANR	8088123	MemberAccess	pcs -> font_selection [ 1 ] . font		8088056	0					
ANR	8088124	ArrayIndexing	pcs -> font_selection [ 1 ]		8088056	0					
ANR	8088125	PtrMemberAccess	pcs -> font_selection		8088056	0					
ANR	8088126	Identifier	pcs		8088056	0					
ANR	8088127	Identifier	font_selection		8088056	1					
ANR	8088128	PrimaryExpression	1		8088056	1					
ANR	8088129	Identifier	font		8088056	1					
ANR	8088130	Identifier	plfontp		8088056	1					
ANR	8088131	ExpressionStatement	pcs -> font_selection [ 1 ] . font = 0	75:12:2237:2268	8088056	1	True				
ANR	8088132	AssignmentExpression	pcs -> font_selection [ 1 ] . font = 0		8088056	0		=			
ANR	8088133	MemberAccess	pcs -> font_selection [ 1 ] . font		8088056	0					
ANR	8088134	ArrayIndexing	pcs -> font_selection [ 1 ]		8088056	0					
ANR	8088135	PtrMemberAccess	pcs -> font_selection		8088056	0					
ANR	8088136	Identifier	pcs		8088056	0					
ANR	8088137	Identifier	font_selection		8088056	1					
ANR	8088138	PrimaryExpression	1		8088056	1					
ANR	8088139	Identifier	font		8088056	1					
ANR	8088140	PrimaryExpression	0		8088056	1					
ANR	8088141	IfStatement	if ( plfontp -> storage & pcds_permanent )		8088056	3					
ANR	8088142	Condition	plfontp -> storage & pcds_permanent	78:12:2372:2404	8088056	0	True				
ANR	8088143	BitAndExpression	plfontp -> storage & pcds_permanent		8088056	0		&			
ANR	8088144	PtrMemberAccess	plfontp -> storage		8088056	0					
ANR	8088145	Identifier	plfontp		8088056	0					
ANR	8088146	Identifier	storage		8088056	1					
ANR	8088147	Identifier	pcds_permanent		8088056	1					
ANR	8088148	IfStatement	"if ( pjl_proc_register_permanent_soft_font_deletion ( pcs -> pjls , plfontp -> params . pjl_font_number ) > 0 )"		8088056	1					
ANR	8088149	Condition	"pjl_proc_register_permanent_soft_font_deletion ( pcs -> pjls , plfontp -> params . pjl_font_number ) > 0"	79:16:2423:2723	8088056	0	True				
ANR	8088150	RelationalExpression	"pjl_proc_register_permanent_soft_font_deletion ( pcs -> pjls , plfontp -> params . pjl_font_number ) > 0"		8088056	0		>			
ANR	8088151	CallExpression	"pjl_proc_register_permanent_soft_font_deletion ( pcs -> pjls , plfontp -> params . pjl_font_number )"		8088056	0					
ANR	8088152	Callee	pjl_proc_register_permanent_soft_font_deletion		8088056	0					
ANR	8088153	Identifier	pjl_proc_register_permanent_soft_font_deletion		8088056	0					
ANR	8088154	ArgumentList	pcs -> pjls		8088056	1					
ANR	8088155	Argument	pcs -> pjls		8088056	0					
ANR	8088156	PtrMemberAccess	pcs -> pjls		8088056	0					
ANR	8088157	Identifier	pcs		8088056	0					
ANR	8088158	Identifier	pjls		8088056	1					
ANR	8088159	Argument	plfontp -> params . pjl_font_number		8088056	1					
ANR	8088160	MemberAccess	plfontp -> params . pjl_font_number		8088056	0					
ANR	8088161	PtrMemberAccess	plfontp -> params		8088056	0					
ANR	8088162	Identifier	plfontp		8088056	0					
ANR	8088163	Identifier	params		8088056	1					
ANR	8088164	Identifier	pjl_font_number		8088056	1					
ANR	8088165	PrimaryExpression	0		8088056	1					
ANR	8088166	CompoundStatement		21:16:890:938	8088056	1					
ANR	8088167	IdentifierDeclStatement	int code = pcl_set_current_font_environment ( pcs ) ;	84:16:2744:2792	8088056	0	True				
ANR	8088168	IdentifierDecl	code = pcl_set_current_font_environment ( pcs )		8088056	0					
ANR	8088169	IdentifierDeclType	int		8088056	0					
ANR	8088170	Identifier	code		8088056	1					
ANR	8088171	AssignmentExpression	code = pcl_set_current_font_environment ( pcs )		8088056	2		=			
ANR	8088172	Identifier	code		8088056	0					
ANR	8088173	CallExpression	pcl_set_current_font_environment ( pcs )		8088056	1					
ANR	8088174	Callee	pcl_set_current_font_environment		8088056	0					
ANR	8088175	Identifier	pcl_set_current_font_environment		8088056	0					
ANR	8088176	ArgumentList	pcs		8088056	1					
ANR	8088177	Argument	pcs		8088056	0					
ANR	8088178	Identifier	pcs		8088056	0					
ANR	8088179	IfStatement	if ( code < 0 )		8088056	1					
ANR	8088180	Condition	code < 0	86:20:2815:2822	8088056	0	True				
ANR	8088181	RelationalExpression	code < 0		8088056	0		<			
ANR	8088182	Identifier	code		8088056	0					
ANR	8088183	PrimaryExpression	0		8088056	1					
ANR	8088184	ReturnStatement	return code ;	87:20:2845:2856	8088056	1	True				
ANR	8088185	Identifier	code		8088056	0					
ANR	8088186	ExpressionStatement	pcs -> font = pcs -> font_selection [ pcs -> font_selected ] . font	89:8:2880:2936	8088056	4	True				
ANR	8088187	AssignmentExpression	pcs -> font = pcs -> font_selection [ pcs -> font_selected ] . font		8088056	0		=			
ANR	8088188	PtrMemberAccess	pcs -> font		8088056	0					
ANR	8088189	Identifier	pcs		8088056	0					
ANR	8088190	Identifier	font		8088056	1					
ANR	8088191	MemberAccess	pcs -> font_selection [ pcs -> font_selected ] . font		8088056	1					
ANR	8088192	ArrayIndexing	pcs -> font_selection [ pcs -> font_selected ]		8088056	0					
ANR	8088193	PtrMemberAccess	pcs -> font_selection		8088056	0					
ANR	8088194	Identifier	pcs		8088056	0					
ANR	8088195	Identifier	font_selection		8088056	1					
ANR	8088196	PtrMemberAccess	pcs -> font_selected		8088056	1					
ANR	8088197	Identifier	pcs		8088056	0					
ANR	8088198	Identifier	font_selected		8088056	1					
ANR	8088199	Identifier	font		8088056	1					
ANR	8088200	ExpressionStatement	"pl_dict_undef_purge_synonyms ( & pcs -> soft_fonts , key , ksize )"	90:8:2946:3004	8088056	5	True				
ANR	8088201	CallExpression	"pl_dict_undef_purge_synonyms ( & pcs -> soft_fonts , key , ksize )"		8088056	0					
ANR	8088202	Callee	pl_dict_undef_purge_synonyms		8088056	0					
ANR	8088203	Identifier	pl_dict_undef_purge_synonyms		8088056	0					
ANR	8088204	ArgumentList	& pcs -> soft_fonts		8088056	1					
ANR	8088205	Argument	& pcs -> soft_fonts		8088056	0					
ANR	8088206	UnaryOperationExpression	& pcs -> soft_fonts		8088056	0					
ANR	8088207	UnaryOperator	&		8088056	0					
ANR	8088208	PtrMemberAccess	pcs -> soft_fonts		8088056	1					
ANR	8088209	Identifier	pcs		8088056	0					
ANR	8088210	Identifier	soft_fonts		8088056	1					
ANR	8088211	Argument	key		8088056	1					
ANR	8088212	Identifier	key		8088056	0					
ANR	8088213	Argument	ksize		8088056	2					
ANR	8088214	Identifier	ksize		8088056	0					
ANR	8088215	ReturnStatement	return 0 ;	92:4:3016:3024	8088056	2	True				
ANR	8088216	PrimaryExpression	0		8088056	0					
ANR	8088217	ReturnType	static int		8088056	1					
ANR	8088218	Identifier	pcl_delete_soft_font		8088056	2					
ANR	8088219	ParameterList	"pcl_state_t * pcs , const byte * key , uint ksize , void * value"		8088056	3					
ANR	8088220	Parameter	pcl_state_t * pcs	62:21:1770:1786	8088056	0	True				
ANR	8088221	ParameterType	pcl_state_t *		8088056	0					
ANR	8088222	Identifier	pcs		8088056	1					
ANR	8088223	Parameter	const byte * key	62:40:1789:1804	8088056	1	True				
ANR	8088224	ParameterType	const byte *		8088056	0					
ANR	8088225	Identifier	key		8088056	1					
ANR	8088226	Parameter	uint ksize	62:58:1807:1816	8088056	2	True				
ANR	8088227	ParameterType	uint		8088056	0					
ANR	8088228	Identifier	ksize		8088056	1					
ANR	8088229	Parameter	void * value	63:21:1840:1850	8088056	3	True				
ANR	8088230	ParameterType	void *		8088056	0					
ANR	8088231	Identifier	value		8088056	1					
ANR	8088232	CFGEntryNode	ENTRY		8088056		True				
ANR	8088233	CFGExitNode	EXIT		8088056		True				
ANR	8088234	Symbol	& value		8088056						
ANR	8088235	Symbol	code		8088056						
ANR	8088236	Symbol	pcs -> pjls		8088056						
ANR	8088237	Symbol	plfontp -> params		8088056						
ANR	8088238	Symbol	pcs -> font_selection [ 1 ] . font		8088056						
ANR	8088239	Symbol	pcl_set_current_font_environment		8088056						
ANR	8088240	Symbol	* pcs		8088056						
ANR	8088241	Symbol	plfontp -> storage		8088056						
ANR	8088242	Symbol	pcs -> font		8088056						
ANR	8088243	Symbol	plfontp		8088056						
ANR	8088244	Symbol	& pcs -> soft_fonts		8088056						
ANR	8088245	Symbol	pcs -> font_selection [ 0 ] . font		8088056						
ANR	8088246	Symbol	plfontp -> params . pjl_font_number		8088056						
ANR	8088247	Symbol	pcds_permanent		8088056						
ANR	8088248	Symbol	value		8088056						
ANR	8088249	Symbol	key		8088056						
ANR	8088250	Symbol	pcs		8088056						
ANR	8088251	Symbol	NULL		8088056						
ANR	8088252	Symbol	pjl_proc_register_permanent_soft_font_deletion		8088056						
ANR	8088253	Symbol	pcs -> font_selection		8088056						
ANR	8088254	Symbol	* pcs -> font_selection		8088056						
ANR	8088255	Symbol	* pcs -> font_selected		8088056						
ANR	8088256	Symbol	* * pcs		8088056						
ANR	8088257	Symbol	ksize		8088056						
ANR	8088258	Symbol	pl_dict_find_no_stack		8088056						
ANR	8088259	Symbol	pcs -> font_selection [ pcs -> font_selected ] . font		8088056						
ANR	8088260	Symbol	pcs -> font_selected		8088056						
ANR	8088261	Symbol	* plfontp		8088056						
ANR	8088262	Function	pcl_assign_font_id	97:0:3059:3334							
ANR	8088263	FunctionDef	"pcl_assign_font_id (pcl_args_t * pargs , pcl_state_t * pcs)"		8088262	0					
ANR	8088264	CompoundStatement		99:0:3170:3334	8088262	0					
ANR	8088265	IdentifierDeclStatement	uint id = uint_arg ( pargs ) ;	100:4:3176:3201	8088262	0	True				
ANR	8088266	IdentifierDecl	id = uint_arg ( pargs )		8088262	0					
ANR	8088267	IdentifierDeclType	uint		8088262	0					
ANR	8088268	Identifier	id		8088262	1					
ANR	8088269	AssignmentExpression	id = uint_arg ( pargs )		8088262	2		=			
ANR	8088270	Identifier	id		8088262	0					
ANR	8088271	CallExpression	uint_arg ( pargs )		8088262	1					
ANR	8088272	Callee	uint_arg		8088262	0					
ANR	8088273	Identifier	uint_arg		8088262	0					
ANR	8088274	ArgumentList	pargs		8088262	1					
ANR	8088275	Argument	pargs		8088262	0					
ANR	8088276	Identifier	pargs		8088262	0					
ANR	8088277	ExpressionStatement	"id_set_value ( pcs -> font_id , id )"	102:4:3208:3238	8088262	1	True				
ANR	8088278	CallExpression	"id_set_value ( pcs -> font_id , id )"		8088262	0					
ANR	8088279	Callee	id_set_value		8088262	0					
ANR	8088280	Identifier	id_set_value		8088262	0					
ANR	8088281	ArgumentList	pcs -> font_id		8088262	1					
ANR	8088282	Argument	pcs -> font_id		8088262	0					
ANR	8088283	PtrMemberAccess	pcs -> font_id		8088262	0					
ANR	8088284	Identifier	pcs		8088262	0					
ANR	8088285	Identifier	font_id		8088262	1					
ANR	8088286	Argument	id		8088262	1					
ANR	8088287	Identifier	id		8088262	0					
ANR	8088288	ExpressionStatement	pcs -> font_id_type = numeric_id	104:4:3288:3318	8088262	2	True				
ANR	8088289	AssignmentExpression	pcs -> font_id_type = numeric_id		8088262	0		=			
ANR	8088290	PtrMemberAccess	pcs -> font_id_type		8088262	0					
ANR	8088291	Identifier	pcs		8088262	0					
ANR	8088292	Identifier	font_id_type		8088262	1					
ANR	8088293	Identifier	numeric_id		8088262	1					
ANR	8088294	ReturnStatement	return 0 ;	105:4:3324:3332	8088262	3	True				
ANR	8088295	PrimaryExpression	0		8088262	0					
ANR	8088296	ReturnType	static int		8088262	1					
ANR	8088297	Identifier	pcl_assign_font_id		8088262	2					
ANR	8088298	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8088262	3					
ANR	8088299	Parameter	pcl_args_t * pargs	98:19:3131:3148	8088262	0	True				
ANR	8088300	ParameterType	pcl_args_t *		8088262	0					
ANR	8088301	Identifier	pargs		8088262	1					
ANR	8088302	Parameter	pcl_state_t * pcs	98:39:3151:3167	8088262	1	True				
ANR	8088303	ParameterType	pcl_state_t *		8088262	0					
ANR	8088304	Identifier	pcs		8088262	1					
ANR	8088305	CFGEntryNode	ENTRY		8088262		True				
ANR	8088306	CFGExitNode	EXIT		8088262		True				
ANR	8088307	Symbol	pcs		8088262						
ANR	8088308	Symbol	pcs -> font_id_type		8088262						
ANR	8088309	Symbol	numeric_id		8088262						
ANR	8088310	Symbol	pargs		8088262						
ANR	8088311	Symbol	* pcs		8088262						
ANR	8088312	Symbol	id		8088262						
ANR	8088313	Symbol	uint_arg		8088262						
ANR	8088314	Symbol	pcs -> font_id		8088262						
ANR	8088315	Function	pcl_make_resident_font_copy	112:0:3525:4476							
ANR	8088316	FunctionDef	pcl_make_resident_font_copy (pcl_state_t * pcs)		8088315	0					
ANR	8088317	CompoundStatement		114:0:3583:4476	8088315	0					
ANR	8088318	IdentifierDeclStatement	pl_dict_enum_t dictp ;	115:4:3589:3609	8088315	0	True				
ANR	8088319	IdentifierDecl	dictp		8088315	0					
ANR	8088320	IdentifierDeclType	pl_dict_enum_t		8088315	0					
ANR	8088321	Identifier	dictp		8088315	1					
ANR	8088322	IdentifierDeclStatement	gs_const_string key ;	116:4:3615:3634	8088315	1	True				
ANR	8088323	IdentifierDecl	key		8088315	0					
ANR	8088324	IdentifierDeclType	gs_const_string		8088315	0					
ANR	8088325	Identifier	key		8088315	1					
ANR	8088326	IdentifierDeclStatement	void * value ;	117:4:3640:3651	8088315	2	True				
ANR	8088327	IdentifierDecl	* value		8088315	0					
ANR	8088328	IdentifierDeclType	void *		8088315	0					
ANR	8088329	Identifier	value		8088315	1					
ANR	8088330	IdentifierDeclStatement	bool found = false ;	118:4:3657:3675	8088315	3	True				
ANR	8088331	IdentifierDecl	found = false		8088315	0					
ANR	8088332	IdentifierDeclType	bool		8088315	0					
ANR	8088333	Identifier	found		8088315	1					
ANR	8088334	AssignmentExpression	found = false		8088315	2		=			
ANR	8088335	Identifier	false		8088315	0					
ANR	8088336	Identifier	false		8088315	1					
ANR	8088337	IfStatement	"if ( pl_dict_lookup ( & pcs -> built_in_fonts , current_font_id , current_font_id_size , & value , false , ( pl_dict_t * * ) 0 ) )"		8088315	4					
ANR	8088338	Condition	"pl_dict_lookup ( & pcs -> built_in_fonts , current_font_id , current_font_id_size , & value , false , ( pl_dict_t * * ) 0 )"	121:8:3748:3873	8088315	0	True				
ANR	8088339	CallExpression	"pl_dict_lookup ( & pcs -> built_in_fonts , current_font_id , current_font_id_size , & value , false , ( pl_dict_t * * ) 0 )"		8088315	0					
ANR	8088340	Callee	pl_dict_lookup		8088315	0					
ANR	8088341	Identifier	pl_dict_lookup		8088315	0					
ANR	8088342	ArgumentList	& pcs -> built_in_fonts		8088315	1					
ANR	8088343	Argument	& pcs -> built_in_fonts		8088315	0					
ANR	8088344	UnaryOperationExpression	& pcs -> built_in_fonts		8088315	0					
ANR	8088345	UnaryOperator	&		8088315	0					
ANR	8088346	PtrMemberAccess	pcs -> built_in_fonts		8088315	1					
ANR	8088347	Identifier	pcs		8088315	0					
ANR	8088348	Identifier	built_in_fonts		8088315	1					
ANR	8088349	Argument	current_font_id		8088315	1					
ANR	8088350	Identifier	current_font_id		8088315	0					
ANR	8088351	Argument	current_font_id_size		8088315	2					
ANR	8088352	Identifier	current_font_id_size		8088315	0					
ANR	8088353	Argument	& value		8088315	3					
ANR	8088354	UnaryOperationExpression	& value		8088315	0					
ANR	8088355	UnaryOperator	&		8088315	0					
ANR	8088356	Identifier	value		8088315	1					
ANR	8088357	Argument	false		8088315	4					
ANR	8088358	Identifier	false		8088315	0					
ANR	8088359	Argument	( pl_dict_t * * ) 0		8088315	5					
ANR	8088360	CastExpression	( pl_dict_t * * ) 0		8088315	0					
ANR	8088361	CastTarget	pl_dict_t * *		8088315	0					
ANR	8088362	PrimaryExpression	0		8088315	1					
ANR	8088363	IfStatement	"if ( pl_dict_undef ( & pcs -> built_in_fonts , current_font_id , current_font_id_size ) == false )"		8088315	1					
ANR	8088364	Condition	"pl_dict_undef ( & pcs -> built_in_fonts , current_font_id , current_font_id_size ) == false"	124:12:3888:3996	8088315	0	True				
ANR	8088365	EqualityExpression	"pl_dict_undef ( & pcs -> built_in_fonts , current_font_id , current_font_id_size ) == false"		8088315	0		==			
ANR	8088366	CallExpression	"pl_dict_undef ( & pcs -> built_in_fonts , current_font_id , current_font_id_size )"		8088315	0					
ANR	8088367	Callee	pl_dict_undef		8088315	0					
ANR	8088368	Identifier	pl_dict_undef		8088315	0					
ANR	8088369	ArgumentList	& pcs -> built_in_fonts		8088315	1					
ANR	8088370	Argument	& pcs -> built_in_fonts		8088315	0					
ANR	8088371	UnaryOperationExpression	& pcs -> built_in_fonts		8088315	0					
ANR	8088372	UnaryOperator	&		8088315	0					
ANR	8088373	PtrMemberAccess	pcs -> built_in_fonts		8088315	1					
ANR	8088374	Identifier	pcs		8088315	0					
ANR	8088375	Identifier	built_in_fonts		8088315	1					
ANR	8088376	Argument	current_font_id		8088315	1					
ANR	8088377	Identifier	current_font_id		8088315	0					
ANR	8088378	Argument	current_font_id_size		8088315	2					
ANR	8088379	Identifier	current_font_id_size		8088315	0					
ANR	8088380	Identifier	false		8088315	1					
ANR	8088381	ReturnStatement	return - 1 ;	128:12:4044:4053	8088315	1	True				
ANR	8088382	UnaryOperationExpression	- 1		8088315	0					
ANR	8088383	UnaryOperator	-		8088315	0					
ANR	8088384	PrimaryExpression	1		8088315	1					
ANR	8088385	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> built_in_fonts , & dictp )"	131:4:4095:4143	8088315	5	True				
ANR	8088386	CallExpression	"pl_dict_enum_begin ( & pcs -> built_in_fonts , & dictp )"		8088315	0					
ANR	8088387	Callee	pl_dict_enum_begin		8088315	0					
ANR	8088388	Identifier	pl_dict_enum_begin		8088315	0					
ANR	8088389	ArgumentList	& pcs -> built_in_fonts		8088315	1					
ANR	8088390	Argument	& pcs -> built_in_fonts		8088315	0					
ANR	8088391	UnaryOperationExpression	& pcs -> built_in_fonts		8088315	0					
ANR	8088392	UnaryOperator	&		8088315	0					
ANR	8088393	PtrMemberAccess	pcs -> built_in_fonts		8088315	1					
ANR	8088394	Identifier	pcs		8088315	0					
ANR	8088395	Identifier	built_in_fonts		8088315	1					
ANR	8088396	Argument	& dictp		8088315	1					
ANR	8088397	UnaryOperationExpression	& dictp		8088315	0					
ANR	8088398	UnaryOperator	&		8088315	0					
ANR	8088399	Identifier	dictp		8088315	1					
ANR	8088400	WhileStatement	"while ( pl_dict_enum_next ( & dictp , & key , & value ) )"		8088315	6					
ANR	8088401	Condition	"pl_dict_enum_next ( & dictp , & key , & value )"	132:11:4156:4194	8088315	0	True				
ANR	8088402	CallExpression	"pl_dict_enum_next ( & dictp , & key , & value )"		8088315	0					
ANR	8088403	Callee	pl_dict_enum_next		8088315	0					
ANR	8088404	Identifier	pl_dict_enum_next		8088315	0					
ANR	8088405	ArgumentList	& dictp		8088315	1					
ANR	8088406	Argument	& dictp		8088315	0					
ANR	8088407	UnaryOperationExpression	& dictp		8088315	0					
ANR	8088408	UnaryOperator	&		8088315	0					
ANR	8088409	Identifier	dictp		8088315	1					
ANR	8088410	Argument	& key		8088315	1					
ANR	8088411	UnaryOperationExpression	& key		8088315	0					
ANR	8088412	UnaryOperator	&		8088315	0					
ANR	8088413	Identifier	key		8088315	1					
ANR	8088414	Argument	& value		8088315	2					
ANR	8088415	UnaryOperationExpression	& value		8088315	0					
ANR	8088416	UnaryOperator	&		8088315	0					
ANR	8088417	Identifier	value		8088315	1					
ANR	8088418	IfStatement	if ( ( void * ) ( pcs -> font ) == value )		8088315	1					
ANR	8088419	Condition	( void * ) ( pcs -> font ) == value	133:12:4209:4236	8088315	0	True				
ANR	8088420	EqualityExpression	( void * ) ( pcs -> font ) == value		8088315	0		==			
ANR	8088421	CastExpression	( void * ) ( pcs -> font )		8088315	0					
ANR	8088422	CastTarget	void *		8088315	0					
ANR	8088423	PtrMemberAccess	pcs -> font		8088315	1					
ANR	8088424	Identifier	pcs		8088315	0					
ANR	8088425	Identifier	font		8088315	1					
ANR	8088426	Identifier	value		8088315	1					
ANR	8088427	CompoundStatement		20:42:655:655	8088315	1					
ANR	8088428	ExpressionStatement	found = true	134:12:4253:4265	8088315	0	True				
ANR	8088429	AssignmentExpression	found = true		8088315	0		=			
ANR	8088430	Identifier	found		8088315	0					
ANR	8088431	Identifier	true		8088315	1					
ANR	8088432	BreakStatement	break ;	135:12:4279:4284	8088315	1	True				
ANR	8088433	IfStatement	if ( found == false )		8088315	7					
ANR	8088434	Condition	found == false	137:8:4304:4317	8088315	0	True				
ANR	8088435	EqualityExpression	found == false		8088315	0		==			
ANR	8088436	Identifier	found		8088315	0					
ANR	8088437	Identifier	false		8088315	1					
ANR	8088438	ReturnStatement	return - 1 ;	138:8:4328:4337	8088315	1	True				
ANR	8088439	UnaryOperationExpression	- 1		8088315	0					
ANR	8088440	UnaryOperator	-		8088315	0					
ANR	8088441	PrimaryExpression	1		8088315	1					
ANR	8088442	ReturnStatement	"return pl_dict_put_synonym ( & pcs -> built_in_fonts , key . data , key . size , current_font_id , current_font_id_size ) ;"	139:4:4343:4474	8088315	8	True				
ANR	8088443	CallExpression	"pl_dict_put_synonym ( & pcs -> built_in_fonts , key . data , key . size , current_font_id , current_font_id_size )"		8088315	0					
ANR	8088444	Callee	pl_dict_put_synonym		8088315	0					
ANR	8088445	Identifier	pl_dict_put_synonym		8088315	0					
ANR	8088446	ArgumentList	& pcs -> built_in_fonts		8088315	1					
ANR	8088447	Argument	& pcs -> built_in_fonts		8088315	0					
ANR	8088448	UnaryOperationExpression	& pcs -> built_in_fonts		8088315	0					
ANR	8088449	UnaryOperator	&		8088315	0					
ANR	8088450	PtrMemberAccess	pcs -> built_in_fonts		8088315	1					
ANR	8088451	Identifier	pcs		8088315	0					
ANR	8088452	Identifier	built_in_fonts		8088315	1					
ANR	8088453	Argument	key . data		8088315	1					
ANR	8088454	MemberAccess	key . data		8088315	0					
ANR	8088455	Identifier	key		8088315	0					
ANR	8088456	Identifier	data		8088315	1					
ANR	8088457	Argument	key . size		8088315	2					
ANR	8088458	MemberAccess	key . size		8088315	0					
ANR	8088459	Identifier	key		8088315	0					
ANR	8088460	Identifier	size		8088315	1					
ANR	8088461	Argument	current_font_id		8088315	3					
ANR	8088462	Identifier	current_font_id		8088315	0					
ANR	8088463	Argument	current_font_id_size		8088315	4					
ANR	8088464	Identifier	current_font_id_size		8088315	0					
ANR	8088465	ReturnType	static int		8088315	1					
ANR	8088466	Identifier	pcl_make_resident_font_copy		8088315	2					
ANR	8088467	ParameterList	pcl_state_t * pcs		8088315	3					
ANR	8088468	Parameter	pcl_state_t * pcs	113:28:3564:3580	8088315	0	True				
ANR	8088469	ParameterType	pcl_state_t *		8088315	0					
ANR	8088470	Identifier	pcs		8088315	1					
ANR	8088471	CFGEntryNode	ENTRY		8088315		True				
ANR	8088472	CFGExitNode	EXIT		8088315		True				
ANR	8088473	Symbol	pcs		8088315						
ANR	8088474	Symbol	& key		8088315						
ANR	8088475	Symbol	current_font_id_size		8088315						
ANR	8088476	Symbol	& value		8088315						
ANR	8088477	Symbol	key . data		8088315						
ANR	8088478	Symbol	pl_dict_put_synonym		8088315						
ANR	8088479	Symbol	dictp		8088315						
ANR	8088480	Symbol	false		8088315						
ANR	8088481	Symbol	pl_dict_undef		8088315						
ANR	8088482	Symbol	* pcs		8088315						
ANR	8088483	Symbol	key . size		8088315						
ANR	8088484	Symbol	pl_dict_enum_next		8088315						
ANR	8088485	Symbol	pcs -> font		8088315						
ANR	8088486	Symbol	found		8088315						
ANR	8088487	Symbol	current_font_id		8088315						
ANR	8088488	Symbol	true		8088315						
ANR	8088489	Symbol	& dictp		8088315						
ANR	8088490	Symbol	pl_dict_lookup		8088315						
ANR	8088491	Symbol	value		8088315						
ANR	8088492	Symbol	& pcs -> built_in_fonts		8088315						
ANR	8088493	Symbol	key		8088315						
ANR	8088494	Function	pcl_font_control	143:0:4479:9210							
ANR	8088495	FunctionDef	"pcl_font_control (pcl_args_t * pargs , pcl_state_t * pcs)"		8088494	0					
ANR	8088496	CompoundStatement		145:0:4593:9210	8088494	0					
ANR	8088497	IdentifierDeclStatement	int code = 0 ;	146:4:4599:4611	8088494	0	True				
ANR	8088498	IdentifierDecl	code = 0		8088494	0					
ANR	8088499	IdentifierDeclType	int		8088494	0					
ANR	8088500	Identifier	code		8088494	1					
ANR	8088501	AssignmentExpression	code = 0		8088494	2		=			
ANR	8088502	Identifier	code		8088494	0					
ANR	8088503	PrimaryExpression	0		8088494	1					
ANR	8088504	IdentifierDeclStatement	gs_const_string key ;	147:4:4617:4636	8088494	1	True				
ANR	8088505	IdentifierDecl	key		8088494	0					
ANR	8088506	IdentifierDeclType	gs_const_string		8088494	0					
ANR	8088507	Identifier	key		8088494	1					
ANR	8088508	IdentifierDeclStatement	void * value ;	148:4:4642:4653	8088494	2	True				
ANR	8088509	IdentifierDecl	* value		8088494	0					
ANR	8088510	IdentifierDeclType	void *		8088494	0					
ANR	8088511	Identifier	value		8088494	1					
ANR	8088512	IdentifierDeclStatement	pl_dict_enum_t denum ;	149:4:4659:4679	8088494	3	True				
ANR	8088513	IdentifierDecl	denum		8088494	0					
ANR	8088514	IdentifierDeclType	pl_dict_enum_t		8088494	0					
ANR	8088515	Identifier	denum		8088494	1					
ANR	8088516	SwitchStatement	switch ( uint_arg ( pargs ) )		8088494	4					
ANR	8088517	Condition	uint_arg ( pargs )	151:12:4694:4708	8088494	0	True				
ANR	8088518	CallExpression	uint_arg ( pargs )		8088494	0					
ANR	8088519	Callee	uint_arg		8088494	0					
ANR	8088520	Identifier	uint_arg		8088494	0					
ANR	8088521	ArgumentList	pargs		8088494	1					
ANR	8088522	Argument	pargs		8088494	0					
ANR	8088523	Identifier	pargs		8088494	0					
ANR	8088524	CompoundStatement		7:29:117:117	8088494	1					
ANR	8088525	Label	case 0 :	152:8:4721:4727	8088494	0	True				
ANR	8088526	ExpressionStatement	pcs -> font = pcs -> font_selection [ pcs -> font_selected ] . font	154:12:4782:4838	8088494	1	True				
ANR	8088527	AssignmentExpression	pcs -> font = pcs -> font_selection [ pcs -> font_selected ] . font		8088494	0		=			
ANR	8088528	PtrMemberAccess	pcs -> font		8088494	0					
ANR	8088529	Identifier	pcs		8088494	0					
ANR	8088530	Identifier	font		8088494	1					
ANR	8088531	MemberAccess	pcs -> font_selection [ pcs -> font_selected ] . font		8088494	1					
ANR	8088532	ArrayIndexing	pcs -> font_selection [ pcs -> font_selected ]		8088494	0					
ANR	8088533	PtrMemberAccess	pcs -> font_selection		8088494	0					
ANR	8088534	Identifier	pcs		8088494	0					
ANR	8088535	Identifier	font_selection		8088494	1					
ANR	8088536	PtrMemberAccess	pcs -> font_selected		8088494	1					
ANR	8088537	Identifier	pcs		8088494	0					
ANR	8088538	Identifier	font_selected		8088494	1					
ANR	8088539	Identifier	font		8088494	1					
ANR	8088540	ExpressionStatement	"pl_dict_enum_stack_begin ( & pcs -> soft_fonts , & denum , false )"	155:12:4852:4909	8088494	2	True				
ANR	8088541	CallExpression	"pl_dict_enum_stack_begin ( & pcs -> soft_fonts , & denum , false )"		8088494	0					
ANR	8088542	Callee	pl_dict_enum_stack_begin		8088494	0					
ANR	8088543	Identifier	pl_dict_enum_stack_begin		8088494	0					
ANR	8088544	ArgumentList	& pcs -> soft_fonts		8088494	1					
ANR	8088545	Argument	& pcs -> soft_fonts		8088494	0					
ANR	8088546	UnaryOperationExpression	& pcs -> soft_fonts		8088494	0					
ANR	8088547	UnaryOperator	&		8088494	0					
ANR	8088548	PtrMemberAccess	pcs -> soft_fonts		8088494	1					
ANR	8088549	Identifier	pcs		8088494	0					
ANR	8088550	Identifier	soft_fonts		8088494	1					
ANR	8088551	Argument	& denum		8088494	1					
ANR	8088552	UnaryOperationExpression	& denum		8088494	0					
ANR	8088553	UnaryOperator	&		8088494	0					
ANR	8088554	Identifier	denum		8088494	1					
ANR	8088555	Argument	false		8088494	2					
ANR	8088556	Identifier	false		8088494	0					
ANR	8088557	WhileStatement	"while ( pl_dict_enum_next ( & denum , & key , & value ) )"		8088494	3					
ANR	8088558	Condition	"pl_dict_enum_next ( & denum , & key , & value )"	156:19:4930:4968	8088494	0	True				
ANR	8088559	CallExpression	"pl_dict_enum_next ( & denum , & key , & value )"		8088494	0					
ANR	8088560	Callee	pl_dict_enum_next		8088494	0					
ANR	8088561	Identifier	pl_dict_enum_next		8088494	0					
ANR	8088562	ArgumentList	& denum		8088494	1					
ANR	8088563	Argument	& denum		8088494	0					
ANR	8088564	UnaryOperationExpression	& denum		8088494	0					
ANR	8088565	UnaryOperator	&		8088494	0					
ANR	8088566	Identifier	denum		8088494	1					
ANR	8088567	Argument	& key		8088494	1					
ANR	8088568	UnaryOperationExpression	& key		8088494	0					
ANR	8088569	UnaryOperator	&		8088494	0					
ANR	8088570	Identifier	key		8088494	1					
ANR	8088571	Argument	& value		8088494	2					
ANR	8088572	UnaryOperationExpression	& value		8088494	0					
ANR	8088573	UnaryOperator	&		8088494	0					
ANR	8088574	Identifier	value		8088494	1					
ANR	8088575	CompoundStatement		12:60:377:377	8088494	1					
ANR	8088576	ExpressionStatement	"code = pcl_delete_soft_font ( pcs , key . data , key . size , value )"	157:16:4989:5048	8088494	0	True				
ANR	8088577	AssignmentExpression	"code = pcl_delete_soft_font ( pcs , key . data , key . size , value )"		8088494	0		=			
ANR	8088578	Identifier	code		8088494	0					
ANR	8088579	CallExpression	"pcl_delete_soft_font ( pcs , key . data , key . size , value )"		8088494	1					
ANR	8088580	Callee	pcl_delete_soft_font		8088494	0					
ANR	8088581	Identifier	pcl_delete_soft_font		8088494	0					
ANR	8088582	ArgumentList	pcs		8088494	1					
ANR	8088583	Argument	pcs		8088494	0					
ANR	8088584	Identifier	pcs		8088494	0					
ANR	8088585	Argument	key . data		8088494	1					
ANR	8088586	MemberAccess	key . data		8088494	0					
ANR	8088587	Identifier	key		8088494	0					
ANR	8088588	Identifier	data		8088494	1					
ANR	8088589	Argument	key . size		8088494	2					
ANR	8088590	MemberAccess	key . size		8088494	0					
ANR	8088591	Identifier	key		8088494	0					
ANR	8088592	Identifier	size		8088494	1					
ANR	8088593	Argument	value		8088494	3					
ANR	8088594	Identifier	value		8088494	0					
ANR	8088595	IfStatement	if ( code < 0 )		8088494	1					
ANR	8088596	Condition	code < 0	158:20:5070:5077	8088494	0	True				
ANR	8088597	RelationalExpression	code < 0		8088494	0		<			
ANR	8088598	Identifier	code		8088494	0					
ANR	8088599	PrimaryExpression	0		8088494	1					
ANR	8088600	ReturnStatement	return code ;	159:20:5100:5111	8088494	1	True				
ANR	8088601	Identifier	code		8088494	0					
ANR	8088602	ExpressionStatement	"pl_dict_enum_stack_begin ( & pcs -> soft_fonts , & denum , false )"	165:16:5483:5540	8088494	2	True				
ANR	8088603	CallExpression	"pl_dict_enum_stack_begin ( & pcs -> soft_fonts , & denum , false )"		8088494	0					
ANR	8088604	Callee	pl_dict_enum_stack_begin		8088494	0					
ANR	8088605	Identifier	pl_dict_enum_stack_begin		8088494	0					
ANR	8088606	ArgumentList	& pcs -> soft_fonts		8088494	1					
ANR	8088607	Argument	& pcs -> soft_fonts		8088494	0					
ANR	8088608	UnaryOperationExpression	& pcs -> soft_fonts		8088494	0					
ANR	8088609	UnaryOperator	&		8088494	0					
ANR	8088610	PtrMemberAccess	pcs -> soft_fonts		8088494	1					
ANR	8088611	Identifier	pcs		8088494	0					
ANR	8088612	Identifier	soft_fonts		8088494	1					
ANR	8088613	Argument	& denum		8088494	1					
ANR	8088614	UnaryOperationExpression	& denum		8088494	0					
ANR	8088615	UnaryOperator	&		8088494	0					
ANR	8088616	Identifier	denum		8088494	1					
ANR	8088617	Argument	false		8088494	2					
ANR	8088618	Identifier	false		8088494	0					
ANR	8088619	ExpressionStatement	pl_dict_release ( & pcs -> soft_fonts )	167:12:5568:5601	8088494	4	True				
ANR	8088620	CallExpression	pl_dict_release ( & pcs -> soft_fonts )		8088494	0					
ANR	8088621	Callee	pl_dict_release		8088494	0					
ANR	8088622	Identifier	pl_dict_release		8088494	0					
ANR	8088623	ArgumentList	& pcs -> soft_fonts		8088494	1					
ANR	8088624	Argument	& pcs -> soft_fonts		8088494	0					
ANR	8088625	UnaryOperationExpression	& pcs -> soft_fonts		8088494	0					
ANR	8088626	UnaryOperator	&		8088494	0					
ANR	8088627	PtrMemberAccess	pcs -> soft_fonts		8088494	1					
ANR	8088628	Identifier	pcs		8088494	0					
ANR	8088629	Identifier	soft_fonts		8088494	1					
ANR	8088630	BreakStatement	break ;	168:12:5615:5620	8088494	5	True				
ANR	8088631	Label	case 1 :	169:8:5630:5636	8088494	6	True				
ANR	8088632	ExpressionStatement	"pl_dict_enum_stack_begin ( & pcs -> soft_fonts , & denum , false )"	171:12:5701:5758	8088494	7	True				
ANR	8088633	CallExpression	"pl_dict_enum_stack_begin ( & pcs -> soft_fonts , & denum , false )"		8088494	0					
ANR	8088634	Callee	pl_dict_enum_stack_begin		8088494	0					
ANR	8088635	Identifier	pl_dict_enum_stack_begin		8088494	0					
ANR	8088636	ArgumentList	& pcs -> soft_fonts		8088494	1					
ANR	8088637	Argument	& pcs -> soft_fonts		8088494	0					
ANR	8088638	UnaryOperationExpression	& pcs -> soft_fonts		8088494	0					
ANR	8088639	UnaryOperator	&		8088494	0					
ANR	8088640	PtrMemberAccess	pcs -> soft_fonts		8088494	1					
ANR	8088641	Identifier	pcs		8088494	0					
ANR	8088642	Identifier	soft_fonts		8088494	1					
ANR	8088643	Argument	& denum		8088494	1					
ANR	8088644	UnaryOperationExpression	& denum		8088494	0					
ANR	8088645	UnaryOperator	&		8088494	0					
ANR	8088646	Identifier	denum		8088494	1					
ANR	8088647	Argument	false		8088494	2					
ANR	8088648	Identifier	false		8088494	0					
ANR	8088649	WhileStatement	"while ( pl_dict_enum_next ( & denum , & key , & value ) )"		8088494	8					
ANR	8088650	Condition	"pl_dict_enum_next ( & denum , & key , & value )"	172:19:5779:5817	8088494	0	True				
ANR	8088651	CallExpression	"pl_dict_enum_next ( & denum , & key , & value )"		8088494	0					
ANR	8088652	Callee	pl_dict_enum_next		8088494	0					
ANR	8088653	Identifier	pl_dict_enum_next		8088494	0					
ANR	8088654	ArgumentList	& denum		8088494	1					
ANR	8088655	Argument	& denum		8088494	0					
ANR	8088656	UnaryOperationExpression	& denum		8088494	0					
ANR	8088657	UnaryOperator	&		8088494	0					
ANR	8088658	Identifier	denum		8088494	1					
ANR	8088659	Argument	& key		8088494	1					
ANR	8088660	UnaryOperationExpression	& key		8088494	0					
ANR	8088661	UnaryOperator	&		8088494	0					
ANR	8088662	Identifier	key		8088494	1					
ANR	8088663	Argument	& value		8088494	2					
ANR	8088664	UnaryOperationExpression	& value		8088494	0					
ANR	8088665	UnaryOperator	&		8088494	0					
ANR	8088666	Identifier	value		8088494	1					
ANR	8088667	IfStatement	if ( ( ( pl_font_t * ) value ) -> storage == pcds_temporary )		8088494	1					
ANR	8088668	Condition	( ( pl_font_t * ) value ) -> storage == pcds_temporary	173:20:5840:5887	8088494	0	True				
ANR	8088669	EqualityExpression	( ( pl_font_t * ) value ) -> storage == pcds_temporary		8088494	0		==			
ANR	8088670	PtrMemberAccess	( ( pl_font_t * ) value ) -> storage		8088494	0					
ANR	8088671	CastExpression	( pl_font_t * ) value		8088494	0					
ANR	8088672	CastTarget	pl_font_t *		8088494	0					
ANR	8088673	Identifier	value		8088494	1					
ANR	8088674	Identifier	storage		8088494	1					
ANR	8088675	Identifier	pcds_temporary		8088494	1					
ANR	8088676	CompoundStatement		29:70:1296:1296	8088494	1					
ANR	8088677	ExpressionStatement	"code = pcl_delete_soft_font ( pcs , key . data , key . size , value )"	174:20:5912:5971	8088494	0	True				
ANR	8088678	AssignmentExpression	"code = pcl_delete_soft_font ( pcs , key . data , key . size , value )"		8088494	0		=			
ANR	8088679	Identifier	code		8088494	0					
ANR	8088680	CallExpression	"pcl_delete_soft_font ( pcs , key . data , key . size , value )"		8088494	1					
ANR	8088681	Callee	pcl_delete_soft_font		8088494	0					
ANR	8088682	Identifier	pcl_delete_soft_font		8088494	0					
ANR	8088683	ArgumentList	pcs		8088494	1					
ANR	8088684	Argument	pcs		8088494	0					
ANR	8088685	Identifier	pcs		8088494	0					
ANR	8088686	Argument	key . data		8088494	1					
ANR	8088687	MemberAccess	key . data		8088494	0					
ANR	8088688	Identifier	key		8088494	0					
ANR	8088689	Identifier	data		8088494	1					
ANR	8088690	Argument	key . size		8088494	2					
ANR	8088691	MemberAccess	key . size		8088494	0					
ANR	8088692	Identifier	key		8088494	0					
ANR	8088693	Identifier	size		8088494	1					
ANR	8088694	Argument	value		8088494	3					
ANR	8088695	Identifier	value		8088494	0					
ANR	8088696	IfStatement	if ( code < 0 )		8088494	1					
ANR	8088697	Condition	code < 0	175:24:5997:6004	8088494	0	True				
ANR	8088698	RelationalExpression	code < 0		8088494	0		<			
ANR	8088699	Identifier	code		8088494	0					
ANR	8088700	PrimaryExpression	0		8088494	1					
ANR	8088701	ReturnStatement	return code ;	176:24:6031:6042	8088494	1	True				
ANR	8088702	Identifier	code		8088494	0					
ANR	8088703	BreakStatement	break ;	178:12:6074:6079	8088494	9	True				
ANR	8088704	Label	case 2 :	179:8:6089:6095	8088494	10	True				
ANR	8088705	ExpressionStatement	"code = pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"	181:12:6155:6265	8088494	11	True				
ANR	8088706	AssignmentExpression	"code = pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8088494	0		=			
ANR	8088707	Identifier	code		8088494	0					
ANR	8088708	CallExpression	"pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8088494	1					
ANR	8088709	Callee	pcl_delete_soft_font		8088494	0					
ANR	8088710	Identifier	pcl_delete_soft_font		8088494	0					
ANR	8088711	ArgumentList	pcs		8088494	1					
ANR	8088712	Argument	pcs		8088494	0					
ANR	8088713	Identifier	pcs		8088494	0					
ANR	8088714	Argument	current_font_id		8088494	1					
ANR	8088715	Identifier	current_font_id		8088494	0					
ANR	8088716	Argument	current_font_id_size		8088494	2					
ANR	8088717	Identifier	current_font_id_size		8088494	0					
ANR	8088718	Argument	NULL		8088494	3					
ANR	8088719	Identifier	NULL		8088494	0					
ANR	8088720	ExpressionStatement	"pcl_decache_font ( pcs , - 1 , true )"	184:12:6356:6387	8088494	12	True				
ANR	8088721	CallExpression	"pcl_decache_font ( pcs , - 1 , true )"		8088494	0					
ANR	8088722	Callee	pcl_decache_font		8088494	0					
ANR	8088723	Identifier	pcl_decache_font		8088494	0					
ANR	8088724	ArgumentList	pcs		8088494	1					
ANR	8088725	Argument	pcs		8088494	0					
ANR	8088726	Identifier	pcs		8088494	0					
ANR	8088727	Argument	- 1		8088494	1					
ANR	8088728	UnaryOperationExpression	- 1		8088494	0					
ANR	8088729	UnaryOperator	-		8088494	0					
ANR	8088730	PrimaryExpression	1		8088494	1					
ANR	8088731	Argument	true		8088494	2					
ANR	8088732	Identifier	true		8088494	0					
ANR	8088733	BreakStatement	break ;	186:12:6402:6407	8088494	13	True				
ANR	8088734	Label	case 3 :	187:8:6417:6423	8088494	14	True				
ANR	8088735	IfStatement	"if ( pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value ) )"		8088494	15					
ANR	8088736	Condition	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"	189:16:6503:6622	8088494	0	True				
ANR	8088737	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"		8088494	0					
ANR	8088738	Callee	pl_dict_find_no_stack		8088494	0					
ANR	8088739	Identifier	pl_dict_find_no_stack		8088494	0					
ANR	8088740	ArgumentList	& pcs -> soft_fonts		8088494	1					
ANR	8088741	Argument	& pcs -> soft_fonts		8088494	0					
ANR	8088742	UnaryOperationExpression	& pcs -> soft_fonts		8088494	0					
ANR	8088743	UnaryOperator	&		8088494	0					
ANR	8088744	PtrMemberAccess	pcs -> soft_fonts		8088494	1					
ANR	8088745	Identifier	pcs		8088494	0					
ANR	8088746	Identifier	soft_fonts		8088494	1					
ANR	8088747	Argument	current_font_id		8088494	1					
ANR	8088748	Identifier	current_font_id		8088494	0					
ANR	8088749	Argument	current_font_id_size		8088494	2					
ANR	8088750	Identifier	current_font_id_size		8088494	0					
ANR	8088751	Argument	& value		8088494	3					
ANR	8088752	UnaryOperationExpression	& value		8088494	0					
ANR	8088753	UnaryOperator	&		8088494	0					
ANR	8088754	Identifier	value		8088494	1					
ANR	8088755	ExpressionStatement	"pl_font_remove_glyph ( ( pl_font_t * ) value , pcs -> character_code )"	192:16:6641:6740	8088494	1	True				
ANR	8088756	CallExpression	"pl_font_remove_glyph ( ( pl_font_t * ) value , pcs -> character_code )"		8088494	0					
ANR	8088757	Callee	pl_font_remove_glyph		8088494	0					
ANR	8088758	Identifier	pl_font_remove_glyph		8088494	0					
ANR	8088759	ArgumentList	( pl_font_t * ) value		8088494	1					
ANR	8088760	Argument	( pl_font_t * ) value		8088494	0					
ANR	8088761	CastExpression	( pl_font_t * ) value		8088494	0					
ANR	8088762	CastTarget	pl_font_t *		8088494	0					
ANR	8088763	Identifier	value		8088494	1					
ANR	8088764	Argument	pcs -> character_code		8088494	1					
ANR	8088765	PtrMemberAccess	pcs -> character_code		8088494	0					
ANR	8088766	Identifier	pcs		8088494	0					
ANR	8088767	Identifier	character_code		8088494	1					
ANR	8088768	ReturnStatement	return 0 ;	194:12:6754:6762	8088494	16	True				
ANR	8088769	PrimaryExpression	0		8088494	0					
ANR	8088770	BreakStatement	break ;	196:12:6777:6782	8088494	17	True				
ANR	8088771	Label	case 4 :	197:8:6792:6798	8088494	18	True				
ANR	8088772	IfStatement	"if ( pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value ) )"		8088494	19					
ANR	8088773	Condition	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"	199:16:6870:6989	8088494	0	True				
ANR	8088774	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"		8088494	0					
ANR	8088775	Callee	pl_dict_find_no_stack		8088494	0					
ANR	8088776	Identifier	pl_dict_find_no_stack		8088494	0					
ANR	8088777	ArgumentList	& pcs -> soft_fonts		8088494	1					
ANR	8088778	Argument	& pcs -> soft_fonts		8088494	0					
ANR	8088779	UnaryOperationExpression	& pcs -> soft_fonts		8088494	0					
ANR	8088780	UnaryOperator	&		8088494	0					
ANR	8088781	PtrMemberAccess	pcs -> soft_fonts		8088494	1					
ANR	8088782	Identifier	pcs		8088494	0					
ANR	8088783	Identifier	soft_fonts		8088494	1					
ANR	8088784	Argument	current_font_id		8088494	1					
ANR	8088785	Identifier	current_font_id		8088494	0					
ANR	8088786	Argument	current_font_id_size		8088494	2					
ANR	8088787	Identifier	current_font_id_size		8088494	0					
ANR	8088788	Argument	& value		8088494	3					
ANR	8088789	UnaryOperationExpression	& value		8088494	0					
ANR	8088790	UnaryOperator	&		8088494	0					
ANR	8088791	Identifier	value		8088494	1					
ANR	8088792	ExpressionStatement	( ( pl_font_t * ) value ) -> storage = pcds_temporary	202:16:7008:7055	8088494	1	True				
ANR	8088793	AssignmentExpression	( ( pl_font_t * ) value ) -> storage = pcds_temporary		8088494	0		=			
ANR	8088794	PtrMemberAccess	( ( pl_font_t * ) value ) -> storage		8088494	0					
ANR	8088795	CastExpression	( pl_font_t * ) value		8088494	0					
ANR	8088796	CastTarget	pl_font_t *		8088494	0					
ANR	8088797	Identifier	value		8088494	1					
ANR	8088798	Identifier	storage		8088494	1					
ANR	8088799	Identifier	pcds_temporary		8088494	1					
ANR	8088800	BreakStatement	break ;	204:12:7070:7075	8088494	20	True				
ANR	8088801	Label	case 5 :	205:8:7085:7091	8088494	21	True				
ANR	8088802	IfStatement	"if ( pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value ) )"		8088494	22					
ANR	8088803	Condition	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"	207:16:7163:7282	8088494	0	True				
ANR	8088804	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"		8088494	0					
ANR	8088805	Callee	pl_dict_find_no_stack		8088494	0					
ANR	8088806	Identifier	pl_dict_find_no_stack		8088494	0					
ANR	8088807	ArgumentList	& pcs -> soft_fonts		8088494	1					
ANR	8088808	Argument	& pcs -> soft_fonts		8088494	0					
ANR	8088809	UnaryOperationExpression	& pcs -> soft_fonts		8088494	0					
ANR	8088810	UnaryOperator	&		8088494	0					
ANR	8088811	PtrMemberAccess	pcs -> soft_fonts		8088494	1					
ANR	8088812	Identifier	pcs		8088494	0					
ANR	8088813	Identifier	soft_fonts		8088494	1					
ANR	8088814	Argument	current_font_id		8088494	1					
ANR	8088815	Identifier	current_font_id		8088494	0					
ANR	8088816	Argument	current_font_id_size		8088494	2					
ANR	8088817	Identifier	current_font_id_size		8088494	0					
ANR	8088818	Argument	& value		8088494	3					
ANR	8088819	UnaryOperationExpression	& value		8088494	0					
ANR	8088820	UnaryOperator	&		8088494	0					
ANR	8088821	Identifier	value		8088494	1					
ANR	8088822	CompoundStatement		65:26:2691:2691	8088494	1					
ANR	8088823	ExpressionStatement	( ( pl_font_t * ) value ) -> storage = pcds_permanent	210:16:7303:7350	8088494	0	True				
ANR	8088824	AssignmentExpression	( ( pl_font_t * ) value ) -> storage = pcds_permanent		8088494	0		=			
ANR	8088825	PtrMemberAccess	( ( pl_font_t * ) value ) -> storage		8088494	0					
ANR	8088826	CastExpression	( pl_font_t * ) value		8088494	0					
ANR	8088827	CastTarget	pl_font_t *		8088494	0					
ANR	8088828	Identifier	value		8088494	1					
ANR	8088829	Identifier	storage		8088494	1					
ANR	8088830	Identifier	pcds_permanent		8088494	1					
ANR	8088831	ExpressionStatement	( ( pl_font_t * ) value ) -> params . pjl_font_number = pjl_proc_register_permanent_soft_font_addition ( pcs -> pjls )	211:16:7368:7493	8088494	1	True				
ANR	8088832	AssignmentExpression	( ( pl_font_t * ) value ) -> params . pjl_font_number = pjl_proc_register_permanent_soft_font_addition ( pcs -> pjls )		8088494	0		=			
ANR	8088833	MemberAccess	( ( pl_font_t * ) value ) -> params . pjl_font_number		8088494	0					
ANR	8088834	PtrMemberAccess	( ( pl_font_t * ) value ) -> params		8088494	0					
ANR	8088835	CastExpression	( pl_font_t * ) value		8088494	0					
ANR	8088836	CastTarget	pl_font_t *		8088494	0					
ANR	8088837	Identifier	value		8088494	1					
ANR	8088838	Identifier	params		8088494	1					
ANR	8088839	Identifier	pjl_font_number		8088494	1					
ANR	8088840	CallExpression	pjl_proc_register_permanent_soft_font_addition ( pcs -> pjls )		8088494	1					
ANR	8088841	Callee	pjl_proc_register_permanent_soft_font_addition		8088494	0					
ANR	8088842	Identifier	pjl_proc_register_permanent_soft_font_addition		8088494	0					
ANR	8088843	ArgumentList	pcs -> pjls		8088494	1					
ANR	8088844	Argument	pcs -> pjls		8088494	0					
ANR	8088845	PtrMemberAccess	pcs -> pjls		8088494	0					
ANR	8088846	Identifier	pcs		8088494	0					
ANR	8088847	Identifier	pjls		8088494	1					
ANR	8088848	BreakStatement	break ;	214:12:7521:7526	8088494	23	True				
ANR	8088849	Label	case 6 :	215:8:7536:7542	8088494	24	True				
ANR	8088850	CompoundStatement		72:12:2962:2962	8088494	25					
ANR	8088851	IfStatement	if ( pcs -> font == 0 )		8088494	0					
ANR	8088852	Condition	pcs -> font == 0	217:20:7578:7591	8088494	0	True				
ANR	8088853	EqualityExpression	pcs -> font == 0		8088494	0		==			
ANR	8088854	PtrMemberAccess	pcs -> font		8088494	0					
ANR	8088855	Identifier	pcs		8088494	0					
ANR	8088856	Identifier	font		8088494	1					
ANR	8088857	PrimaryExpression	0		8088494	1					
ANR	8088858	CompoundStatement		73:36:3000:3000	8088494	1					
ANR	8088859	ExpressionStatement	"code = pcl_recompute_font ( pcs , false )"	218:20:7616:7653	8088494	0	True				
ANR	8088860	AssignmentExpression	"code = pcl_recompute_font ( pcs , false )"		8088494	0		=			
ANR	8088861	Identifier	code		8088494	0					
ANR	8088862	CallExpression	"pcl_recompute_font ( pcs , false )"		8088494	1					
ANR	8088863	Callee	pcl_recompute_font		8088494	0					
ANR	8088864	Identifier	pcl_recompute_font		8088494	0					
ANR	8088865	ArgumentList	pcs		8088494	1					
ANR	8088866	Argument	pcs		8088494	0					
ANR	8088867	Identifier	pcs		8088494	0					
ANR	8088868	Argument	false		8088494	1					
ANR	8088869	Identifier	false		8088494	0					
ANR	8088870	IfStatement	if ( code < 0 )		8088494	1					
ANR	8088871	Condition	code < 0	219:24:7679:7686	8088494	0	True				
ANR	8088872	RelationalExpression	code < 0		8088494	0		<			
ANR	8088873	Identifier	code		8088494	0					
ANR	8088874	PrimaryExpression	0		8088494	1					
ANR	8088875	ReturnStatement	return code ;	220:24:7713:7724	8088494	1	True				
ANR	8088876	Identifier	code		8088494	0					
ANR	8088877	IfStatement	if ( pcs -> font -> storage == pcds_internal )		8088494	1					
ANR	8088878	Condition	pcs -> font -> storage == pcds_internal	222:20:7764:7798	8088494	0	True				
ANR	8088879	EqualityExpression	pcs -> font -> storage == pcds_internal		8088494	0		==			
ANR	8088880	PtrMemberAccess	pcs -> font -> storage		8088494	0					
ANR	8088881	PtrMemberAccess	pcs -> font		8088494	0					
ANR	8088882	Identifier	pcs		8088494	0					
ANR	8088883	Identifier	font		8088494	1					
ANR	8088884	Identifier	storage		8088494	1					
ANR	8088885	Identifier	pcds_internal		8088494	1					
ANR	8088886	CompoundStatement		78:57:3207:3207	8088494	1					
ANR	8088887	ReturnStatement	return pcl_make_resident_font_copy ( pcs ) ;	223:20:7823:7862	8088494	0	True				
ANR	8088888	CallExpression	pcl_make_resident_font_copy ( pcs )		8088494	0					
ANR	8088889	Callee	pcl_make_resident_font_copy		8088494	0					
ANR	8088890	Identifier	pcl_make_resident_font_copy		8088494	0					
ANR	8088891	ArgumentList	pcs		8088494	1					
ANR	8088892	Argument	pcs		8088494	0					
ANR	8088893	Identifier	pcs		8088494	0					
ANR	8088894	ElseStatement	else		8088494	0					
ANR	8088895	CompoundStatement		81:20:3315:3502	8088494	0					
ANR	8088896	IdentifierDeclStatement	"pl_font_t * plfont = pl_clone_font ( pcs -> font , pcs -> memory , ""pcl_font_control()"" ) ;"	225:20:7909:8096	8088494	0	True				
ANR	8088897	IdentifierDecl	"* plfont = pl_clone_font ( pcs -> font , pcs -> memory , ""pcl_font_control()"" )"		8088494	0					
ANR	8088898	IdentifierDeclType	pl_font_t *		8088494	0					
ANR	8088899	Identifier	plfont		8088494	1					
ANR	8088900	AssignmentExpression	"* plfont = pl_clone_font ( pcs -> font , pcs -> memory , ""pcl_font_control()"" )"		8088494	2		=			
ANR	8088901	Identifier	plfont		8088494	0					
ANR	8088902	CallExpression	"pl_clone_font ( pcs -> font , pcs -> memory , ""pcl_font_control()"" )"		8088494	1					
ANR	8088903	Callee	pl_clone_font		8088494	0					
ANR	8088904	Identifier	pl_clone_font		8088494	0					
ANR	8088905	ArgumentList	pcs -> font		8088494	1					
ANR	8088906	Argument	pcs -> font		8088494	0					
ANR	8088907	PtrMemberAccess	pcs -> font		8088494	0					
ANR	8088908	Identifier	pcs		8088494	0					
ANR	8088909	Identifier	font		8088494	1					
ANR	8088910	Argument	pcs -> memory		8088494	1					
ANR	8088911	PtrMemberAccess	pcs -> memory		8088494	0					
ANR	8088912	Identifier	pcs		8088494	0					
ANR	8088913	Identifier	memory		8088494	1					
ANR	8088914	Argument	"""pcl_font_control()"""		8088494	2					
ANR	8088915	PrimaryExpression	"""pcl_font_control()"""		8088494	0					
ANR	8088916	IfStatement	if ( plfont == 0 )		8088494	1					
ANR	8088917	Condition	plfont == 0	229:24:8123:8133	8088494	0	True				
ANR	8088918	EqualityExpression	plfont == 0		8088494	0		==			
ANR	8088919	Identifier	plfont		8088494	0					
ANR	8088920	PrimaryExpression	0		8088494	1					
ANR	8088921	CompoundStatement		85:37:3542:3542	8088494	1					
ANR	8088922	ExpressionStatement	"dmprintf ( pcs -> memory , ""pcsfont.c clone font FIXME\\n"" )"	230:24:8162:8215	8088494	0	True				
ANR	8088923	CallExpression	"dmprintf ( pcs -> memory , ""pcsfont.c clone font FIXME\\n"" )"		8088494	0					
ANR	8088924	Callee	dmprintf		8088494	0					
ANR	8088925	Identifier	dmprintf		8088494	0					
ANR	8088926	ArgumentList	pcs -> memory		8088494	1					
ANR	8088927	Argument	pcs -> memory		8088494	0					
ANR	8088928	PtrMemberAccess	pcs -> memory		8088494	0					
ANR	8088929	Identifier	pcs		8088494	0					
ANR	8088930	Identifier	memory		8088494	1					
ANR	8088931	Argument	"""pcsfont.c clone font FIXME\\n"""		8088494	1					
ANR	8088932	PrimaryExpression	"""pcsfont.c clone font FIXME\\n"""		8088494	0					
ANR	8088933	ReturnStatement	return 0 ;	231:24:8241:8249	8088494	1	True				
ANR	8088934	PrimaryExpression	0		8088494	0					
ANR	8088935	ExpressionStatement	"code = gs_definefont ( pcs -> font_dir , plfont -> pfont )"	233:20:8293:8343	8088494	2	True				
ANR	8088936	AssignmentExpression	"code = gs_definefont ( pcs -> font_dir , plfont -> pfont )"		8088494	0		=			
ANR	8088937	Identifier	code		8088494	0					
ANR	8088938	CallExpression	"gs_definefont ( pcs -> font_dir , plfont -> pfont )"		8088494	1					
ANR	8088939	Callee	gs_definefont		8088494	0					
ANR	8088940	Identifier	gs_definefont		8088494	0					
ANR	8088941	ArgumentList	pcs -> font_dir		8088494	1					
ANR	8088942	Argument	pcs -> font_dir		8088494	0					
ANR	8088943	PtrMemberAccess	pcs -> font_dir		8088494	0					
ANR	8088944	Identifier	pcs		8088494	0					
ANR	8088945	Identifier	font_dir		8088494	1					
ANR	8088946	Argument	plfont -> pfont		8088494	1					
ANR	8088947	PtrMemberAccess	plfont -> pfont		8088494	0					
ANR	8088948	Identifier	plfont		8088494	0					
ANR	8088949	Identifier	pfont		8088494	1					
ANR	8088950	IfStatement	if ( code < 0 )		8088494	3					
ANR	8088951	Condition	code < 0	234:24:8369:8376	8088494	0	True				
ANR	8088952	RelationalExpression	code < 0		8088494	0		<			
ANR	8088953	Identifier	code		8088494	0					
ANR	8088954	PrimaryExpression	0		8088494	1					
ANR	8088955	ReturnStatement	return code ;	235:24:8403:8414	8088494	1	True				
ANR	8088956	Identifier	code		8088494	0					
ANR	8088957	IfStatement	if ( plfont -> scaling_technology == plfst_TrueType )		8088494	4					
ANR	8088958	Condition	plfont -> scaling_technology == plfst_TrueType	236:24:8440:8483	8088494	0	True				
ANR	8088959	EqualityExpression	plfont -> scaling_technology == plfst_TrueType		8088494	0		==			
ANR	8088960	PtrMemberAccess	plfont -> scaling_technology		8088494	0					
ANR	8088961	Identifier	plfont		8088494	0					
ANR	8088962	Identifier	scaling_technology		8088494	1					
ANR	8088963	Identifier	plfst_TrueType		8088494	1					
ANR	8088964	ExpressionStatement	"code = pl_fapi_passfont ( plfont , 0 , NULL , NULL , NULL , 0 )"	237:24:8510:8565	8088494	1	True				
ANR	8088965	AssignmentExpression	"code = pl_fapi_passfont ( plfont , 0 , NULL , NULL , NULL , 0 )"		8088494	0		=			
ANR	8088966	Identifier	code		8088494	0					
ANR	8088967	CallExpression	"pl_fapi_passfont ( plfont , 0 , NULL , NULL , NULL , 0 )"		8088494	1					
ANR	8088968	Callee	pl_fapi_passfont		8088494	0					
ANR	8088969	Identifier	pl_fapi_passfont		8088494	0					
ANR	8088970	ArgumentList	plfont		8088494	1					
ANR	8088971	Argument	plfont		8088494	0					
ANR	8088972	Identifier	plfont		8088494	0					
ANR	8088973	Argument	0		8088494	1					
ANR	8088974	PrimaryExpression	0		8088494	0					
ANR	8088975	Argument	NULL		8088494	2					
ANR	8088976	Identifier	NULL		8088494	0					
ANR	8088977	Argument	NULL		8088494	3					
ANR	8088978	Identifier	NULL		8088494	0					
ANR	8088979	Argument	NULL		8088494	4					
ANR	8088980	Identifier	NULL		8088494	0					
ANR	8088981	Argument	0		8088494	5					
ANR	8088982	PrimaryExpression	0		8088494	0					
ANR	8088983	IfStatement	if ( code < 0 )		8088494	5					
ANR	8088984	Condition	code < 0	238:24:8591:8598	8088494	0	True				
ANR	8088985	RelationalExpression	code < 0		8088494	0		<			
ANR	8088986	Identifier	code		8088494	0					
ANR	8088987	PrimaryExpression	0		8088494	1					
ANR	8088988	ReturnStatement	return code ;	239:24:8625:8636	8088494	1	True				
ANR	8088989	Identifier	code		8088494	0					
ANR	8088990	ExpressionStatement	"code = pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"	241:20:8659:8777	8088494	6	True				
ANR	8088991	AssignmentExpression	"code = pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8088494	0		=			
ANR	8088992	Identifier	code		8088494	0					
ANR	8088993	CallExpression	"pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8088494	1					
ANR	8088994	Callee	pcl_delete_soft_font		8088494	0					
ANR	8088995	Identifier	pcl_delete_soft_font		8088494	0					
ANR	8088996	ArgumentList	pcs		8088494	1					
ANR	8088997	Argument	pcs		8088494	0					
ANR	8088998	Identifier	pcs		8088494	0					
ANR	8088999	Argument	current_font_id		8088494	1					
ANR	8089000	Identifier	current_font_id		8088494	0					
ANR	8089001	Argument	current_font_id_size		8088494	2					
ANR	8089002	Identifier	current_font_id_size		8088494	0					
ANR	8089003	Argument	NULL		8088494	3					
ANR	8089004	Identifier	NULL		8088494	0					
ANR	8089005	IfStatement	if ( code < 0 )		8088494	7					
ANR	8089006	Condition	code < 0	243:24:8803:8810	8088494	0	True				
ANR	8089007	RelationalExpression	code < 0		8088494	0		<			
ANR	8089008	Identifier	code		8088494	0					
ANR	8089009	PrimaryExpression	0		8088494	1					
ANR	8089010	ReturnStatement	return code ;	244:24:8837:8848	8088494	1	True				
ANR	8089011	Identifier	code		8088494	0					
ANR	8089012	ExpressionStatement	plfont -> storage = pcds_temporary	245:20:8870:8902	8088494	8	True				
ANR	8089013	AssignmentExpression	plfont -> storage = pcds_temporary		8088494	0		=			
ANR	8089014	PtrMemberAccess	plfont -> storage		8088494	0					
ANR	8089015	Identifier	plfont		8088494	0					
ANR	8089016	Identifier	storage		8088494	1					
ANR	8089017	Identifier	pcds_temporary		8088494	1					
ANR	8089018	ExpressionStatement	plfont -> data_are_permanent = false	246:20:8924:8958	8088494	9	True				
ANR	8089019	AssignmentExpression	plfont -> data_are_permanent = false		8088494	0		=			
ANR	8089020	PtrMemberAccess	plfont -> data_are_permanent		8088494	0					
ANR	8089021	Identifier	plfont		8088494	0					
ANR	8089022	Identifier	data_are_permanent		8088494	1					
ANR	8089023	Identifier	false		8088494	1					
ANR	8089024	ExpressionStatement	"code = pl_dict_put ( & pcs -> soft_fonts , current_font_id , current_font_id_size , plfont )"	247:20:8980:9095	8088494	10	True				
ANR	8089025	AssignmentExpression	"code = pl_dict_put ( & pcs -> soft_fonts , current_font_id , current_font_id_size , plfont )"		8088494	0		=			
ANR	8089026	Identifier	code		8088494	0					
ANR	8089027	CallExpression	"pl_dict_put ( & pcs -> soft_fonts , current_font_id , current_font_id_size , plfont )"		8088494	1					
ANR	8089028	Callee	pl_dict_put		8088494	0					
ANR	8089029	Identifier	pl_dict_put		8088494	0					
ANR	8089030	ArgumentList	& pcs -> soft_fonts		8088494	1					
ANR	8089031	Argument	& pcs -> soft_fonts		8088494	0					
ANR	8089032	UnaryOperationExpression	& pcs -> soft_fonts		8088494	0					
ANR	8089033	UnaryOperator	&		8088494	0					
ANR	8089034	PtrMemberAccess	pcs -> soft_fonts		8088494	1					
ANR	8089035	Identifier	pcs		8088494	0					
ANR	8089036	Identifier	soft_fonts		8088494	1					
ANR	8089037	Argument	current_font_id		8088494	1					
ANR	8089038	Identifier	current_font_id		8088494	0					
ANR	8089039	Argument	current_font_id_size		8088494	2					
ANR	8089040	Identifier	current_font_id_size		8088494	0					
ANR	8089041	Argument	plfont		8088494	3					
ANR	8089042	Identifier	plfont		8088494	0					
ANR	8089043	BreakStatement	break ;	251:12:9141:9146	8088494	26	True				
ANR	8089044	Label	default :	252:8:9156:9163	8088494	27	True				
ANR	8089045	Identifier	default		8088494	0					
ANR	8089046	ReturnStatement	return 0 ;	253:12:9177:9185	8088494	28	True				
ANR	8089047	PrimaryExpression	0		8088494	0					
ANR	8089048	ReturnStatement	return code ;	255:4:9197:9208	8088494	5	True				
ANR	8089049	Identifier	code		8088494	0					
ANR	8089050	ReturnType	static int		8088494	1					
ANR	8089051	Identifier	pcl_font_control		8088494	2					
ANR	8089052	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8088494	3					
ANR	8089053	Parameter	pcl_args_t * pargs	144:17:4554:4571	8088494	0	True				
ANR	8089054	ParameterType	pcl_args_t *		8088494	0					
ANR	8089055	Identifier	pargs		8088494	1					
ANR	8089056	Parameter	pcl_state_t * pcs	144:37:4574:4590	8088494	1	True				
ANR	8089057	ParameterType	pcl_state_t *		8088494	0					
ANR	8089058	Identifier	pcs		8088494	1					
ANR	8089059	CFGEntryNode	ENTRY		8088494		True				
ANR	8089060	CFGExitNode	EXIT		8088494		True				
ANR	8089061	Symbol	pl_fapi_passfont		8088494						
ANR	8089062	Symbol	plfont -> scaling_technology		8088494						
ANR	8089063	Symbol	& value		8088494						
ANR	8089064	Symbol	* pcs		8088494						
ANR	8089065	Symbol	pjl_proc_register_permanent_soft_font_addition		8088494						
ANR	8089066	Symbol	plfont		8088494						
ANR	8089067	Symbol	plfont -> data_are_permanent		8088494						
ANR	8089068	Symbol	pcs -> font		8088494						
ANR	8089069	Symbol	gs_definefont		8088494						
ANR	8089070	Symbol	& denum		8088494						
ANR	8089071	Symbol	pargs		8088494						
ANR	8089072	Symbol	& pcs -> soft_fonts		8088494						
ANR	8089073	Symbol	pcs -> memory		8088494						
ANR	8089074	Symbol	pcds_permanent		8088494						
ANR	8089075	Symbol	( ( pl_font_t * ) value ) -> storage		8088494						
ANR	8089076	Symbol	current_font_id_size		8088494						
ANR	8089077	Symbol	NULL		8088494						
ANR	8089078	Symbol	pcds_internal		8088494						
ANR	8089079	Symbol	plfont -> storage		8088494						
ANR	8089080	Symbol	( ( pl_font_t * ) value ) -> params . pjl_font_number		8088494						
ANR	8089081	Symbol	pl_clone_font		8088494						
ANR	8089082	Symbol	pcs -> font_selection		8088494						
ANR	8089083	Symbol	pcl_recompute_font		8088494						
ANR	8089084	Symbol	* * pcs		8088494						
ANR	8089085	Symbol	pcs -> font_selected		8088494						
ANR	8089086	Symbol	current_font_id		8088494						
ANR	8089087	Symbol	true		8088494						
ANR	8089088	Symbol	pcs -> font -> storage		8088494						
ANR	8089089	Symbol	plfst_TrueType		8088494						
ANR	8089090	Symbol	pl_dict_put		8088494						
ANR	8089091	Symbol	pcl_make_resident_font_copy		8088494						
ANR	8089092	Symbol	& key		8088494						
ANR	8089093	Symbol	pcs -> font_dir		8088494						
ANR	8089094	Symbol	code		8088494						
ANR	8089095	Symbol	pcs -> pjls		8088494						
ANR	8089096	Symbol	key . size		8088494						
ANR	8089097	Symbol	pcl_delete_soft_font		8088494						
ANR	8089098	Symbol	denum		8088494						
ANR	8089099	Symbol	value		8088494						
ANR	8089100	Symbol	key		8088494						
ANR	8089101	Symbol	pcs		8088494						
ANR	8089102	Symbol	key . data		8088494						
ANR	8089103	Symbol	false		8088494						
ANR	8089104	Symbol	* pcs -> font_selection		8088494						
ANR	8089105	Symbol	* pcs -> font_selected		8088494						
ANR	8089106	Symbol	( ( pl_font_t * ) value ) -> params		8088494						
ANR	8089107	Symbol	* pcs -> font		8088494						
ANR	8089108	Symbol	uint_arg		8088494						
ANR	8089109	Symbol	pl_dict_enum_next		8088494						
ANR	8089110	Symbol	pcds_temporary		8088494						
ANR	8089111	Symbol	plfont -> pfont		8088494						
ANR	8089112	Symbol	pcs -> font_selection [ pcs -> font_selected ] . font		8088494						
ANR	8089113	Symbol	pl_dict_find_no_stack		8088494						
ANR	8089114	Symbol	* value		8088494						
ANR	8089115	Symbol	pcs -> character_code		8088494						
ANR	8089116	Symbol	* plfont		8088494						
ANR	8089117	Function	pcl_font_header	258:0:9213:19378							
ANR	8089118	FunctionDef	"pcl_font_header (pcl_args_t * pargs , pcl_state_t * pcs)"		8089117	0					
ANR	8089119	CompoundStatement		260:0:9324:19378	8089117	0					
ANR	8089120	IdentifierDeclStatement	uint count = uint_arg ( pargs ) ;	261:4:9330:9358	8089117	0	True				
ANR	8089121	IdentifierDecl	count = uint_arg ( pargs )		8089117	0					
ANR	8089122	IdentifierDeclType	uint		8089117	0					
ANR	8089123	Identifier	count		8089117	1					
ANR	8089124	AssignmentExpression	count = uint_arg ( pargs )		8089117	2		=			
ANR	8089125	Identifier	count		8089117	0					
ANR	8089126	CallExpression	uint_arg ( pargs )		8089117	1					
ANR	8089127	Callee	uint_arg		8089117	0					
ANR	8089128	Identifier	uint_arg		8089117	0					
ANR	8089129	ArgumentList	pargs		8089117	1					
ANR	8089130	Argument	pargs		8089117	0					
ANR	8089131	Identifier	pargs		8089117	0					
ANR	8089132	IdentifierDeclStatement	const byte * data = arg_data ( pargs ) ;	262:4:9364:9398	8089117	1	True				
ANR	8089133	IdentifierDecl	* data = arg_data ( pargs )		8089117	0					
ANR	8089134	IdentifierDeclType	const byte *		8089117	0					
ANR	8089135	Identifier	data		8089117	1					
ANR	8089136	AssignmentExpression	* data = arg_data ( pargs )		8089117	2		=			
ANR	8089137	Identifier	data		8089117	0					
ANR	8089138	CallExpression	arg_data ( pargs )		8089117	1					
ANR	8089139	Callee	arg_data		8089117	0					
ANR	8089140	Identifier	arg_data		8089117	0					
ANR	8089141	ArgumentList	pargs		8089117	1					
ANR	8089142	Argument	pargs		8089117	0					
ANR	8089143	Identifier	pargs		8089117	0					
ANR	8089144	IdentifierDeclStatement	pcl_font_header_t * pfh = ( pcl_font_header_t * ) data ;	263:4:9404:9455	8089117	2	True				
ANR	8089145	IdentifierDecl	* pfh = ( pcl_font_header_t * ) data		8089117	0					
ANR	8089146	IdentifierDeclType	pcl_font_header_t *		8089117	0					
ANR	8089147	Identifier	pfh		8089117	1					
ANR	8089148	AssignmentExpression	* pfh = ( pcl_font_header_t * ) data		8089117	2		=			
ANR	8089149	Identifier	pfh		8089117	0					
ANR	8089150	CastExpression	( pcl_font_header_t * ) data		8089117	1					
ANR	8089151	CastTarget	pcl_font_header_t *		8089117	0					
ANR	8089152	Identifier	data		8089117	1					
ANR	8089153	IdentifierDeclStatement	uint desc_size ;	264:4:9461:9475	8089117	3	True				
ANR	8089154	IdentifierDecl	desc_size		8089117	0					
ANR	8089155	IdentifierDeclType	uint		8089117	0					
ANR	8089156	Identifier	desc_size		8089117	1					
ANR	8089157	IdentifierDeclStatement	pl_font_scaling_technology_t fst ;	265:4:9481:9513	8089117	4	True				
ANR	8089158	IdentifierDecl	fst		8089117	0					
ANR	8089159	IdentifierDeclType	pl_font_scaling_technology_t		8089117	0					
ANR	8089160	Identifier	fst		8089117	1					
ANR	8089161	IdentifierDeclStatement	gs_memory_t * mem = pcs -> memory ;	266:4:9519:9549	8089117	5	True				
ANR	8089162	IdentifierDecl	* mem = pcs -> memory		8089117	0					
ANR	8089163	IdentifierDeclType	gs_memory_t *		8089117	0					
ANR	8089164	Identifier	mem		8089117	1					
ANR	8089165	AssignmentExpression	* mem = pcs -> memory		8089117	2		=			
ANR	8089166	Identifier	mem		8089117	0					
ANR	8089167	PtrMemberAccess	pcs -> memory		8089117	1					
ANR	8089168	Identifier	pcs		8089117	0					
ANR	8089169	Identifier	memory		8089117	1					
ANR	8089170	IdentifierDeclStatement	pl_font_t * plfont ;	267:4:9555:9572	8089117	6	True				
ANR	8089171	IdentifierDecl	* plfont		8089117	0					
ANR	8089172	IdentifierDeclType	pl_font_t *		8089117	0					
ANR	8089173	Identifier	plfont		8089117	1					
ANR	8089174	IdentifierDeclStatement	byte * header ;	268:4:9578:9590	8089117	7	True				
ANR	8089175	IdentifierDecl	* header		8089117	0					
ANR	8089176	IdentifierDeclType	byte *		8089117	0					
ANR	8089177	Identifier	header		8089117	1					
ANR	8089178	IdentifierDeclStatement	int code ;	269:4:9596:9604	8089117	8	True				
ANR	8089179	IdentifierDecl	code		8089117	0					
ANR	8089180	IdentifierDeclType	int		8089117	0					
ANR	8089181	Identifier	code		8089117	1					
ANR	8089182	IdentifierDeclStatement	bool has_checksum ;	270:4:9610:9627	8089117	9	True				
ANR	8089183	IdentifierDecl	has_checksum		8089117	0					
ANR	8089184	IdentifierDeclType	bool		8089117	0					
ANR	8089185	Identifier	has_checksum		8089117	1					
ANR	8089186	IfStatement	if ( gs_debug_c ( 'i' ) )		8089117	10					
ANR	8089187	Condition	gs_debug_c ( 'i' )	273:8:9651:9665	8089117	0	True				
ANR	8089188	CallExpression	gs_debug_c ( 'i' )		8089117	0					
ANR	8089189	Callee	gs_debug_c		8089117	0					
ANR	8089190	Identifier	gs_debug_c		8089117	0					
ANR	8089191	ArgumentList	'i'		8089117	1					
ANR	8089192	Argument	'i'		8089117	0					
ANR	8089193	PrimaryExpression	'i'		8089117	0					
ANR	8089194	CompoundStatement		14:25:343:343	8089117	1					
ANR	8089195	ExpressionStatement	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"	274:8:9678:9744	8089117	0	True				
ANR	8089196	CallExpression	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"		8089117	0					
ANR	8089197	Callee	pcl_debug_dump_data		8089117	0					
ANR	8089198	Identifier	pcl_debug_dump_data		8089117	0					
ANR	8089199	ArgumentList	pcs -> memory		8089117	1					
ANR	8089200	Argument	pcs -> memory		8089117	0					
ANR	8089201	PtrMemberAccess	pcs -> memory		8089117	0					
ANR	8089202	Identifier	pcs		8089117	0					
ANR	8089203	Identifier	memory		8089117	1					
ANR	8089204	Argument	arg_data ( pargs )		8089117	1					
ANR	8089205	CallExpression	arg_data ( pargs )		8089117	0					
ANR	8089206	Callee	arg_data		8089117	0					
ANR	8089207	Identifier	arg_data		8089117	0					
ANR	8089208	ArgumentList	pargs		8089117	1					
ANR	8089209	Argument	pargs		8089117	0					
ANR	8089210	Identifier	pargs		8089117	0					
ANR	8089211	Argument	uint_arg ( pargs )		8089117	2					
ANR	8089212	CallExpression	uint_arg ( pargs )		8089117	0					
ANR	8089213	Callee	uint_arg		8089117	0					
ANR	8089214	Identifier	uint_arg		8089117	0					
ANR	8089215	ArgumentList	pargs		8089117	1					
ANR	8089216	Argument	pargs		8089117	0					
ANR	8089217	Identifier	pargs		8089117	0					
ANR	8089218	IfStatement	if ( count < 64 && pfh -> HeaderFormat != pcfh_bitmap )		8089117	11					
ANR	8089219	Condition	count < 64 && pfh -> HeaderFormat != pcfh_bitmap	278:8:9768:9813	8089117	0	True				
ANR	8089220	AndExpression	count < 64 && pfh -> HeaderFormat != pcfh_bitmap		8089117	0		&&			
ANR	8089221	RelationalExpression	count < 64		8089117	0		<			
ANR	8089222	Identifier	count		8089117	0					
ANR	8089223	PrimaryExpression	64		8089117	1					
ANR	8089224	EqualityExpression	pfh -> HeaderFormat != pcfh_bitmap		8089117	1		!=			
ANR	8089225	PtrMemberAccess	pfh -> HeaderFormat		8089117	0					
ANR	8089226	Identifier	pfh		8089117	0					
ANR	8089227	Identifier	HeaderFormat		8089117	1					
ANR	8089228	Identifier	pcfh_bitmap		8089117	1					
ANR	8089229	ReturnStatement	return e_Range ;	279:8:9824:9838	8089117	1	True				
ANR	8089230	Identifier	e_Range		8089117	0					
ANR	8089231	ExpressionStatement	desc_size = ( pfh -> FontDescriptorSize [ 0 ] << 8 ) + pfh -> FontDescriptorSize [ 1 ]	280:4:9929:10011	8089117	12	True				
ANR	8089232	AssignmentExpression	desc_size = ( pfh -> FontDescriptorSize [ 0 ] << 8 ) + pfh -> FontDescriptorSize [ 1 ]		8089117	0		=			
ANR	8089233	Identifier	desc_size		8089117	0					
ANR	8089234	AdditiveExpression	( pfh -> FontDescriptorSize [ 0 ] << 8 ) + pfh -> FontDescriptorSize [ 1 ]		8089117	1		+			
ANR	8089235	ShiftExpression	pfh -> FontDescriptorSize [ 0 ] << 8		8089117	0		<<			
ANR	8089236	ArrayIndexing	pfh -> FontDescriptorSize [ 0 ]		8089117	0					
ANR	8089237	PtrMemberAccess	pfh -> FontDescriptorSize		8089117	0					
ANR	8089238	Identifier	pfh		8089117	0					
ANR	8089239	Identifier	FontDescriptorSize		8089117	1					
ANR	8089240	PrimaryExpression	0		8089117	1					
ANR	8089241	PrimaryExpression	8		8089117	1					
ANR	8089242	ArrayIndexing	pfh -> FontDescriptorSize [ 1 ]		8089117	1					
ANR	8089243	PtrMemberAccess	pfh -> FontDescriptorSize		8089117	0					
ANR	8089244	Identifier	pfh		8089117	0					
ANR	8089245	Identifier	FontDescriptorSize		8089117	1					
ANR	8089246	PrimaryExpression	1		8089117	1					
ANR	8089247	SwitchStatement	switch ( pfh -> HeaderFormat )		8089117	13					
ANR	8089248	Condition	pfh -> HeaderFormat	283:12:10066:10082	8089117	0	True				
ANR	8089249	PtrMemberAccess	pfh -> HeaderFormat		8089117	0					
ANR	8089250	Identifier	pfh		8089117	0					
ANR	8089251	Identifier	HeaderFormat		8089117	1					
ANR	8089252	CompoundStatement		24:31:760:760	8089117	1					
ANR	8089253	Label	case pcfh_bitmap :	284:8:10095:10111	8089117	0	True				
ANR	8089254	Identifier	pcfh_bitmap		8089117	0					
ANR	8089255	Label	case pcfh_resolution_bitmap :	285:8:10121:10148	8089117	1	True				
ANR	8089256	Identifier	pcfh_resolution_bitmap		8089117	0					
ANR	8089257	ExpressionStatement	fst = plfst_bitmap	286:12:10162:10180	8089117	2	True				
ANR	8089258	AssignmentExpression	fst = plfst_bitmap		8089117	0		=			
ANR	8089259	Identifier	fst		8089117	0					
ANR	8089260	Identifier	plfst_bitmap		8089117	1					
ANR	8089261	ExpressionStatement	has_checksum = false	287:12:10194:10214	8089117	3	True				
ANR	8089262	AssignmentExpression	has_checksum = false		8089117	0		=			
ANR	8089263	Identifier	has_checksum		8089117	0					
ANR	8089264	Identifier	false		8089117	1					
ANR	8089265	BreakStatement	break ;	288:12:10228:10233	8089117	4	True				
ANR	8089266	Label	case pcfh_intellifont_bound :	289:8:10243:10270	8089117	5	True				
ANR	8089267	Identifier	pcfh_intellifont_bound		8089117	0					
ANR	8089268	Label	case pcfh_intellifont_unbound :	290:8:10280:10309	8089117	6	True				
ANR	8089269	Identifier	pcfh_intellifont_unbound		8089117	0					
ANR	8089270	ExpressionStatement	fst = plfst_Intellifont	291:12:10323:10346	8089117	7	True				
ANR	8089271	AssignmentExpression	fst = plfst_Intellifont		8089117	0		=			
ANR	8089272	Identifier	fst		8089117	0					
ANR	8089273	Identifier	plfst_Intellifont		8089117	1					
ANR	8089274	ExpressionStatement	has_checksum = false	297:12:10663:10683	8089117	8	True				
ANR	8089275	AssignmentExpression	has_checksum = false		8089117	0		=			
ANR	8089276	Identifier	has_checksum		8089117	0					
ANR	8089277	Identifier	false		8089117	1					
ANR	8089278	BreakStatement	break ;	298:12:10697:10702	8089117	9	True				
ANR	8089279	Label	case pcfh_truetype :	299:8:10712:10730	8089117	10	True				
ANR	8089280	Identifier	pcfh_truetype		8089117	0					
ANR	8089281	Label	case pcfh_truetype_large :	300:8:10740:10764	8089117	11	True				
ANR	8089282	Identifier	pcfh_truetype_large		8089117	0					
ANR	8089283	ExpressionStatement	fst = plfst_TrueType	301:12:10778:10798	8089117	12	True				
ANR	8089284	AssignmentExpression	fst = plfst_TrueType		8089117	0		=			
ANR	8089285	Identifier	fst		8089117	0					
ANR	8089286	Identifier	plfst_TrueType		8089117	1					
ANR	8089287	ExpressionStatement	has_checksum = true	302:12:10812:10831	8089117	13	True				
ANR	8089288	AssignmentExpression	has_checksum = true		8089117	0		=			
ANR	8089289	Identifier	has_checksum		8089117	0					
ANR	8089290	Identifier	true		8089117	1					
ANR	8089291	BreakStatement	break ;	303:12:10845:10850	8089117	14	True				
ANR	8089292	Label	default :	304:8:10860:10867	8089117	15	True				
ANR	8089293	Identifier	default		8089117	0					
ANR	8089294	ReturnStatement	return 0 ;	306:12:10923:10931	8089117	16	True				
ANR	8089295	PrimaryExpression	0		8089117	0					
ANR	8089296	IfStatement	if ( has_checksum )		8089117	14					
ANR	8089297	Condition	has_checksum	318:8:11300:11311	8089117	0	True				
ANR	8089298	Identifier	has_checksum		8089117	0					
ANR	8089299	CompoundStatement		61:8:2022:2027	8089117	1					
ANR	8089300	IdentifierDeclStatement	ulong sum = 0 ;	319:8:11324:11337	8089117	0	True				
ANR	8089301	IdentifierDecl	sum = 0		8089117	0					
ANR	8089302	IdentifierDeclType	ulong		8089117	0					
ANR	8089303	Identifier	sum		8089117	1					
ANR	8089304	AssignmentExpression	sum = 0		8089117	2		=			
ANR	8089305	Identifier	sum		8089117	0					
ANR	8089306	PrimaryExpression	0		8089117	1					
ANR	8089307	IdentifierDeclStatement	int i ;	320:8:11347:11352	8089117	1	True				
ANR	8089308	IdentifierDecl	i		8089117	0					
ANR	8089309	IdentifierDeclType	int		8089117	0					
ANR	8089310	Identifier	i		8089117	1					
ANR	8089311	ForStatement	for ( i = count - 1 ; i >= 64 ; i -- )		8089117	2					
ANR	8089312	ForInit	i = count - 1 ;	322:13:11368:11381	8089117	0	True				
ANR	8089313	AssignmentExpression	i = count - 1		8089117	0		=			
ANR	8089314	Identifier	i		8089117	0					
ANR	8089315	AdditiveExpression	count - 1		8089117	1		-			
ANR	8089316	Identifier	count		8089117	0					
ANR	8089317	PrimaryExpression	1		8089117	1					
ANR	8089318	Condition	i >= 64	322:28:11383:11389	8089117	1	True				
ANR	8089319	RelationalExpression	i >= 64		8089117	0		>=			
ANR	8089320	Identifier	i		8089117	0					
ANR	8089321	PrimaryExpression	64		8089117	1					
ANR	8089322	PostIncDecOperationExpression	i --	322:37:11392:11394	8089117	2	True				
ANR	8089323	Identifier	i		8089117	0					
ANR	8089324	IncDec	--		8089117	1					
ANR	8089325	CompoundStatement		63:42:2072:2072	8089117	3					
ANR	8089326	ExpressionStatement	sum += data [ i ]	323:12:11411:11425	8089117	0	True				
ANR	8089327	AssignmentExpression	sum += data [ i ]		8089117	0		+=			
ANR	8089328	Identifier	sum		8089117	0					
ANR	8089329	ArrayIndexing	data [ i ]		8089117	1					
ANR	8089330	Identifier	data		8089117	0					
ANR	8089331	Identifier	i		8089117	1					
ANR	8089332	ExpressionStatement	sum %= 256	324:12:11439:11449	8089117	1	True				
ANR	8089333	AssignmentExpression	sum %= 256		8089117	0		%=			
ANR	8089334	Identifier	sum		8089117	0					
ANR	8089335	PrimaryExpression	256		8089117	1					
ANR	8089336	IfStatement	if ( sum != 0 )		8089117	3					
ANR	8089337	Condition	sum != 0	327:12:11474:11481	8089117	0	True				
ANR	8089338	EqualityExpression	sum != 0		8089117	0		!=			
ANR	8089339	Identifier	sum		8089117	0					
ANR	8089340	PrimaryExpression	0		8089117	1					
ANR	8089341	CompoundStatement		68:22:2159:2159	8089117	1					
ANR	8089342	ExpressionStatement	"dmprintf1 ( pcs -> memory , ""corrupt font sum=%ld\\n"" , sum )"	328:12:11498:11551	8089117	0	True				
ANR	8089343	CallExpression	"dmprintf1 ( pcs -> memory , ""corrupt font sum=%ld\\n"" , sum )"		8089117	0					
ANR	8089344	Callee	dmprintf1		8089117	0					
ANR	8089345	Identifier	dmprintf1		8089117	0					
ANR	8089346	ArgumentList	pcs -> memory		8089117	1					
ANR	8089347	Argument	pcs -> memory		8089117	0					
ANR	8089348	PtrMemberAccess	pcs -> memory		8089117	0					
ANR	8089349	Identifier	pcs		8089117	0					
ANR	8089350	Identifier	memory		8089117	1					
ANR	8089351	Argument	"""corrupt font sum=%ld\\n"""		8089117	1					
ANR	8089352	PrimaryExpression	"""corrupt font sum=%ld\\n"""		8089117	0					
ANR	8089353	Argument	sum		8089117	2					
ANR	8089354	Identifier	sum		8089117	0					
ANR	8089355	ExpressionStatement	return_error ( gs_error_invalidfont )	329:12:11565:11599	8089117	1	True				
ANR	8089356	CallExpression	return_error ( gs_error_invalidfont )		8089117	0					
ANR	8089357	Callee	return_error		8089117	0					
ANR	8089358	Identifier	return_error		8089117	0					
ANR	8089359	ArgumentList	gs_error_invalidfont		8089117	1					
ANR	8089360	Argument	gs_error_invalidfont		8089117	0					
ANR	8089361	Identifier	gs_error_invalidfont		8089117	0					
ANR	8089362	ExpressionStatement	"code = pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"	333:4:11670:11747	8089117	15	True				
ANR	8089363	AssignmentExpression	"code = pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8089117	0		=			
ANR	8089364	Identifier	code		8089117	0					
ANR	8089365	CallExpression	"pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8089117	1					
ANR	8089366	Callee	pcl_delete_soft_font		8089117	0					
ANR	8089367	Identifier	pcl_delete_soft_font		8089117	0					
ANR	8089368	ArgumentList	pcs		8089117	1					
ANR	8089369	Argument	pcs		8089117	0					
ANR	8089370	Identifier	pcs		8089117	0					
ANR	8089371	Argument	current_font_id		8089117	1					
ANR	8089372	Identifier	current_font_id		8089117	0					
ANR	8089373	Argument	current_font_id_size		8089117	2					
ANR	8089374	Identifier	current_font_id_size		8089117	0					
ANR	8089375	Argument	NULL		8089117	3					
ANR	8089376	Identifier	NULL		8089117	0					
ANR	8089377	IfStatement	if ( code < 0 )		8089117	16					
ANR	8089378	Condition	code < 0	334:8:11757:11764	8089117	0	True				
ANR	8089379	RelationalExpression	code < 0		8089117	0		<			
ANR	8089380	Identifier	code		8089117	0					
ANR	8089381	PrimaryExpression	0		8089117	1					
ANR	8089382	ReturnStatement	return code ;	335:8:11775:11786	8089117	1	True				
ANR	8089383	Identifier	code		8089117	0					
ANR	8089384	ExpressionStatement	"plfont = pl_alloc_font ( mem , ""pcl_font_header(pl_font_t)"" )"	337:4:11839:11896	8089117	17	True				
ANR	8089385	AssignmentExpression	"plfont = pl_alloc_font ( mem , ""pcl_font_header(pl_font_t)"" )"		8089117	0		=			
ANR	8089386	Identifier	plfont		8089117	0					
ANR	8089387	CallExpression	"pl_alloc_font ( mem , ""pcl_font_header(pl_font_t)"" )"		8089117	1					
ANR	8089388	Callee	pl_alloc_font		8089117	0					
ANR	8089389	Identifier	pl_alloc_font		8089117	0					
ANR	8089390	ArgumentList	mem		8089117	1					
ANR	8089391	Argument	mem		8089117	0					
ANR	8089392	Identifier	mem		8089117	0					
ANR	8089393	Argument	"""pcl_font_header(pl_font_t)"""		8089117	1					
ANR	8089394	PrimaryExpression	"""pcl_font_header(pl_font_t)"""		8089117	0					
ANR	8089395	ExpressionStatement	"header = gs_alloc_bytes ( mem , count , ""pcl_font_header(header)"" )"	338:4:11902:11964	8089117	18	True				
ANR	8089396	AssignmentExpression	"header = gs_alloc_bytes ( mem , count , ""pcl_font_header(header)"" )"		8089117	0		=			
ANR	8089397	Identifier	header		8089117	0					
ANR	8089398	CallExpression	"gs_alloc_bytes ( mem , count , ""pcl_font_header(header)"" )"		8089117	1					
ANR	8089399	Callee	gs_alloc_bytes		8089117	0					
ANR	8089400	Identifier	gs_alloc_bytes		8089117	0					
ANR	8089401	ArgumentList	mem		8089117	1					
ANR	8089402	Argument	mem		8089117	0					
ANR	8089403	Identifier	mem		8089117	0					
ANR	8089404	Argument	count		8089117	1					
ANR	8089405	Identifier	count		8089117	0					
ANR	8089406	Argument	"""pcl_font_header(header)"""		8089117	2					
ANR	8089407	PrimaryExpression	"""pcl_font_header(header)"""		8089117	0					
ANR	8089408	IfStatement	if ( plfont == 0 || header == 0 )		8089117	19					
ANR	8089409	Condition	plfont == 0 || header == 0	339:8:11974:11999	8089117	0	True				
ANR	8089410	OrExpression	plfont == 0 || header == 0		8089117	0		||			
ANR	8089411	EqualityExpression	plfont == 0		8089117	0		==			
ANR	8089412	Identifier	plfont		8089117	0					
ANR	8089413	PrimaryExpression	0		8089117	1					
ANR	8089414	EqualityExpression	header == 0		8089117	1		==			
ANR	8089415	Identifier	header		8089117	0					
ANR	8089416	PrimaryExpression	0		8089117	1					
ANR	8089417	ExpressionStatement	return_error ( e_Memory )	340:8:12010:12032	8089117	1	True				
ANR	8089418	CallExpression	return_error ( e_Memory )		8089117	0					
ANR	8089419	Callee	return_error		8089117	0					
ANR	8089420	Identifier	return_error		8089117	0					
ANR	8089421	ArgumentList	e_Memory		8089117	1					
ANR	8089422	Argument	e_Memory		8089117	0					
ANR	8089423	Identifier	e_Memory		8089117	0					
ANR	8089424	ExpressionStatement	"memcpy ( header , data , count )"	341:4:12038:12065	8089117	20	True				
ANR	8089425	CallExpression	"memcpy ( header , data , count )"		8089117	0					
ANR	8089426	Callee	memcpy		8089117	0					
ANR	8089427	Identifier	memcpy		8089117	0					
ANR	8089428	ArgumentList	header		8089117	1					
ANR	8089429	Argument	header		8089117	0					
ANR	8089430	Identifier	header		8089117	0					
ANR	8089431	Argument	data		8089117	1					
ANR	8089432	Identifier	data		8089117	0					
ANR	8089433	Argument	count		8089117	2					
ANR	8089434	Identifier	count		8089117	0					
ANR	8089435	ExpressionStatement	plfont -> storage = pcds_temporary	342:4:12071:12103	8089117	21	True				
ANR	8089436	AssignmentExpression	plfont -> storage = pcds_temporary		8089117	0		=			
ANR	8089437	PtrMemberAccess	plfont -> storage		8089117	0					
ANR	8089438	Identifier	plfont		8089117	0					
ANR	8089439	Identifier	storage		8089117	1					
ANR	8089440	Identifier	pcds_temporary		8089117	1					
ANR	8089441	ExpressionStatement	plfont -> data_are_permanent = false	343:4:12109:12143	8089117	22	True				
ANR	8089442	AssignmentExpression	plfont -> data_are_permanent = false		8089117	0		=			
ANR	8089443	PtrMemberAccess	plfont -> data_are_permanent		8089117	0					
ANR	8089444	Identifier	plfont		8089117	0					
ANR	8089445	Identifier	data_are_permanent		8089117	1					
ANR	8089446	Identifier	false		8089117	1					
ANR	8089447	IfStatement	if ( fst == plfst_Intellifont )		8089117	23					
ANR	8089448	Condition	fst == plfst_Intellifont	344:8:12153:12176	8089117	0	True				
ANR	8089449	EqualityExpression	fst == plfst_Intellifont		8089117	0		==			
ANR	8089450	Identifier	fst		8089117	0					
ANR	8089451	Identifier	plfst_Intellifont		8089117	1					
ANR	8089452	CompoundStatement		85:34:2854:2854	8089117	1					
ANR	8089453	IfStatement	if ( pfh -> HeaderFormat != pcfh_intellifont_bound )		8089117	0					
ANR	8089454	Condition	pfh -> HeaderFormat != pcfh_intellifont_bound	345:12:12193:12235	8089117	0	True				
ANR	8089455	EqualityExpression	pfh -> HeaderFormat != pcfh_intellifont_bound		8089117	0		!=			
ANR	8089456	PtrMemberAccess	pfh -> HeaderFormat		8089117	0					
ANR	8089457	Identifier	pfh		8089117	0					
ANR	8089458	Identifier	HeaderFormat		8089117	1					
ANR	8089459	Identifier	pcfh_intellifont_bound		8089117	1					
ANR	8089460	CompoundStatement		86:57:2913:2913	8089117	1					
ANR	8089461	ExpressionStatement	"memcpy ( plfont -> character_complement , & data [ 78 ] , 8 )"	347:12:12312:12362	8089117	0	True				
ANR	8089462	CallExpression	"memcpy ( plfont -> character_complement , & data [ 78 ] , 8 )"		8089117	0					
ANR	8089463	Callee	memcpy		8089117	0					
ANR	8089464	Identifier	memcpy		8089117	0					
ANR	8089465	ArgumentList	plfont -> character_complement		8089117	1					
ANR	8089466	Argument	plfont -> character_complement		8089117	0					
ANR	8089467	PtrMemberAccess	plfont -> character_complement		8089117	0					
ANR	8089468	Identifier	plfont		8089117	0					
ANR	8089469	Identifier	character_complement		8089117	1					
ANR	8089470	Argument	& data [ 78 ]		8089117	1					
ANR	8089471	UnaryOperationExpression	& data [ 78 ]		8089117	0					
ANR	8089472	UnaryOperator	&		8089117	0					
ANR	8089473	ArrayIndexing	data [ 78 ]		8089117	1					
ANR	8089474	Identifier	data		8089117	0					
ANR	8089475	PrimaryExpression	78		8089117	1					
ANR	8089476	Argument	8		8089117	2					
ANR	8089477	PrimaryExpression	8		8089117	0					
ANR	8089478	ExpressionStatement	plfont -> header = header	350:4:12384:12407	8089117	24	True				
ANR	8089479	AssignmentExpression	plfont -> header = header		8089117	0		=			
ANR	8089480	PtrMemberAccess	plfont -> header		8089117	0					
ANR	8089481	Identifier	plfont		8089117	0					
ANR	8089482	Identifier	header		8089117	1					
ANR	8089483	Identifier	header		8089117	1					
ANR	8089484	ExpressionStatement	plfont -> header_size = count	351:4:12413:12440	8089117	25	True				
ANR	8089485	AssignmentExpression	plfont -> header_size = count		8089117	0		=			
ANR	8089486	PtrMemberAccess	plfont -> header_size		8089117	0					
ANR	8089487	Identifier	plfont		8089117	0					
ANR	8089488	Identifier	header_size		8089117	1					
ANR	8089489	Identifier	count		8089117	1					
ANR	8089490	ExpressionStatement	plfont -> is_xl_format = false	352:4:12446:12474	8089117	26	True				
ANR	8089491	AssignmentExpression	plfont -> is_xl_format = false		8089117	0		=			
ANR	8089492	PtrMemberAccess	plfont -> is_xl_format		8089117	0					
ANR	8089493	Identifier	plfont		8089117	0					
ANR	8089494	Identifier	is_xl_format		8089117	1					
ANR	8089495	Identifier	false		8089117	1					
ANR	8089496	ExpressionStatement	plfont -> scaling_technology = fst	353:4:12480:12512	8089117	27	True				
ANR	8089497	AssignmentExpression	plfont -> scaling_technology = fst		8089117	0		=			
ANR	8089498	PtrMemberAccess	plfont -> scaling_technology		8089117	0					
ANR	8089499	Identifier	plfont		8089117	0					
ANR	8089500	Identifier	scaling_technology		8089117	1					
ANR	8089501	Identifier	fst		8089117	1					
ANR	8089502	ExpressionStatement	plfont -> font_type = ( pl_font_type_t ) pfh -> FontType	354:4:12518:12568	8089117	28	True				
ANR	8089503	AssignmentExpression	plfont -> font_type = ( pl_font_type_t ) pfh -> FontType		8089117	0		=			
ANR	8089504	PtrMemberAccess	plfont -> font_type		8089117	0					
ANR	8089505	Identifier	plfont		8089117	0					
ANR	8089506	Identifier	font_type		8089117	1					
ANR	8089507	CastExpression	( pl_font_type_t ) pfh -> FontType		8089117	1					
ANR	8089508	CastTarget	pl_font_type_t		8089117	0					
ANR	8089509	PtrMemberAccess	pfh -> FontType		8089117	1					
ANR	8089510	Identifier	pfh		8089117	0					
ANR	8089511	Identifier	FontType		8089117	1					
ANR	8089512	ExpressionStatement	plfont -> font_file = ( char * ) 0	355:4:12574:12603	8089117	29	True				
ANR	8089513	AssignmentExpression	plfont -> font_file = ( char * ) 0		8089117	0		=			
ANR	8089514	PtrMemberAccess	plfont -> font_file		8089117	0					
ANR	8089515	Identifier	plfont		8089117	0					
ANR	8089516	Identifier	font_file		8089117	1					
ANR	8089517	CastExpression	( char * ) 0		8089117	1					
ANR	8089518	CastTarget	char *		8089117	0					
ANR	8089519	PrimaryExpression	0		8089117	1					
ANR	8089520	ExpressionStatement	"code = pl_font_alloc_glyph_table ( plfont , 256 , mem , ""pcl_font_header(char table)"" )"	356:4:12609:12727	8089117	30	True				
ANR	8089521	AssignmentExpression	"code = pl_font_alloc_glyph_table ( plfont , 256 , mem , ""pcl_font_header(char table)"" )"		8089117	0		=			
ANR	8089522	Identifier	code		8089117	0					
ANR	8089523	CallExpression	"pl_font_alloc_glyph_table ( plfont , 256 , mem , ""pcl_font_header(char table)"" )"		8089117	1					
ANR	8089524	Callee	pl_font_alloc_glyph_table		8089117	0					
ANR	8089525	Identifier	pl_font_alloc_glyph_table		8089117	0					
ANR	8089526	ArgumentList	plfont		8089117	1					
ANR	8089527	Argument	plfont		8089117	0					
ANR	8089528	Identifier	plfont		8089117	0					
ANR	8089529	Argument	256		8089117	1					
ANR	8089530	PrimaryExpression	256		8089117	0					
ANR	8089531	Argument	mem		8089117	2					
ANR	8089532	Identifier	mem		8089117	0					
ANR	8089533	Argument	"""pcl_font_header(char table)"""		8089117	3					
ANR	8089534	PrimaryExpression	"""pcl_font_header(char table)"""		8089117	0					
ANR	8089535	IfStatement	if ( code < 0 )		8089117	31					
ANR	8089536	Condition	code < 0	358:8:12737:12744	8089117	0	True				
ANR	8089537	RelationalExpression	code < 0		8089117	0		<			
ANR	8089538	Identifier	code		8089117	0					
ANR	8089539	PrimaryExpression	0		8089117	1					
ANR	8089540	ReturnStatement	return code ;	359:8:12755:12766	8089117	1	True				
ANR	8089541	Identifier	code		8089117	0					
ANR	8089542	SwitchStatement	switch ( fst )		8089117	32					
ANR	8089543	Condition	fst	361:12:12814:12816	8089117	0	True				
ANR	8089544	Identifier	fst		8089117	0					
ANR	8089545	CompoundStatement		102:17:3494:3494	8089117	1					
ANR	8089546	Label	case plfst_bitmap :	362:8:12829:12846	8089117	0	True				
ANR	8089547	Identifier	plfst_bitmap		8089117	0					
ANR	8089548	CompoundStatement		105:16:3553:3572	8089117	1					
ANR	8089549	IdentifierDeclStatement	gs_font_base * pfont ;	364:16:12878:12897	8089117	0	True				
ANR	8089550	IdentifierDecl	* pfont		8089117	0					
ANR	8089551	IdentifierDeclType	gs_font_base *		8089117	0					
ANR	8089552	Identifier	pfont		8089117	1					
ANR	8089553	Label	bitmap :	366:14:12914:12920	8089117	1	True				
ANR	8089554	Identifier	bitmap		8089117	0					
ANR	8089555	ExpressionStatement	"pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" )"	366:21:12921:13053	8089117	2	True				
ANR	8089556	AssignmentExpression	"pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" )"		8089117	0		=			
ANR	8089557	Identifier	pfont		8089117	0					
ANR	8089558	CallExpression	"gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" )"		8089117	1					
ANR	8089559	Callee	gs_alloc_struct		8089117	0					
ANR	8089560	Identifier	gs_alloc_struct		8089117	0					
ANR	8089561	ArgumentList	mem		8089117	1					
ANR	8089562	Argument	mem		8089117	0					
ANR	8089563	Identifier	mem		8089117	0					
ANR	8089564	Argument	gs_font_base		8089117	1					
ANR	8089565	Identifier	gs_font_base		8089117	0					
ANR	8089566	Argument	& st_gs_font_base		8089117	2					
ANR	8089567	UnaryOperationExpression	& st_gs_font_base		8089117	0					
ANR	8089568	UnaryOperator	&		8089117	0					
ANR	8089569	Identifier	st_gs_font_base		8089117	1					
ANR	8089570	Argument	"""pcl_font_header(bitmap font)"""		8089117	3					
ANR	8089571	PrimaryExpression	"""pcl_font_header(bitmap font)"""		8089117	0					
ANR	8089572	IfStatement	if ( pfont == 0 )		8089117	3					
ANR	8089573	Condition	pfont == 0	369:20:13076:13085	8089117	0	True				
ANR	8089574	EqualityExpression	pfont == 0		8089117	0		==			
ANR	8089575	Identifier	pfont		8089117	0					
ANR	8089576	PrimaryExpression	0		8089117	1					
ANR	8089577	ExpressionStatement	return_error ( e_Memory )	370:20:13108:13130	8089117	1	True				
ANR	8089578	CallExpression	return_error ( e_Memory )		8089117	0					
ANR	8089579	Callee	return_error		8089117	0					
ANR	8089580	Identifier	return_error		8089117	0					
ANR	8089581	ArgumentList	e_Memory		8089117	1					
ANR	8089582	Argument	e_Memory		8089117	0					
ANR	8089583	Identifier	e_Memory		8089117	0					
ANR	8089584	ExpressionStatement	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"	371:16:13148:13290	8089117	4	True				
ANR	8089585	AssignmentExpression	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"		8089117	0		=			
ANR	8089586	Identifier	code		8089117	0					
ANR	8089587	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"		8089117	1					
ANR	8089588	Callee	pl_fill_in_font		8089117	0					
ANR	8089589	Identifier	pl_fill_in_font		8089117	0					
ANR	8089590	ArgumentList	( gs_font * ) pfont		8089117	1					
ANR	8089591	Argument	( gs_font * ) pfont		8089117	0					
ANR	8089592	CastExpression	( gs_font * ) pfont		8089117	0					
ANR	8089593	CastTarget	gs_font *		8089117	0					
ANR	8089594	Identifier	pfont		8089117	1					
ANR	8089595	Argument	plfont		8089117	1					
ANR	8089596	Identifier	plfont		8089117	0					
ANR	8089597	Argument	pcs -> font_dir		8089117	2					
ANR	8089598	PtrMemberAccess	pcs -> font_dir		8089117	0					
ANR	8089599	Identifier	pcs		8089117	0					
ANR	8089600	Identifier	font_dir		8089117	1					
ANR	8089601	Argument	mem		8089117	3					
ANR	8089602	Identifier	mem		8089117	0					
ANR	8089603	Argument	"""nameless_font"""		8089117	4					
ANR	8089604	PrimaryExpression	"""nameless_font"""		8089117	0					
ANR	8089605	IfStatement	if ( code < 0 )		8089117	5					
ANR	8089606	Condition	code < 0	374:20:13312:13319	8089117	0	True				
ANR	8089607	RelationalExpression	code < 0		8089117	0		<			
ANR	8089608	Identifier	code		8089117	0					
ANR	8089609	PrimaryExpression	0		8089117	1					
ANR	8089610	ReturnStatement	return code ;	375:20:13342:13353	8089117	1	True				
ANR	8089611	Identifier	code		8089117	0					
ANR	8089612	ExpressionStatement	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"	376:16:13371:13421	8089117	6	True				
ANR	8089613	CallExpression	"pl_fill_in_bitmap_font ( pfont , gs_next_ids ( mem , 1 ) )"		8089117	0					
ANR	8089614	Callee	pl_fill_in_bitmap_font		8089117	0					
ANR	8089615	Identifier	pl_fill_in_bitmap_font		8089117	0					
ANR	8089616	ArgumentList	pfont		8089117	1					
ANR	8089617	Argument	pfont		8089117	0					
ANR	8089618	Identifier	pfont		8089117	0					
ANR	8089619	Argument	"gs_next_ids ( mem , 1 )"		8089117	1					
ANR	8089620	CallExpression	"gs_next_ids ( mem , 1 )"		8089117	0					
ANR	8089621	Callee	gs_next_ids		8089117	0					
ANR	8089622	Identifier	gs_next_ids		8089117	0					
ANR	8089623	ArgumentList	mem		8089117	1					
ANR	8089624	Argument	mem		8089117	0					
ANR	8089625	Identifier	mem		8089117	0					
ANR	8089626	Argument	1		8089117	1					
ANR	8089627	PrimaryExpression	1		8089117	0					
ANR	8089628	IfStatement	if ( pfh -> HeaderFormat == pcfh_resolution_bitmap )		8089117	7					
ANR	8089629	Condition	pfh -> HeaderFormat == pcfh_resolution_bitmap	378:20:13506:13548	8089117	0	True				
ANR	8089630	EqualityExpression	pfh -> HeaderFormat == pcfh_resolution_bitmap		8089117	0		==			
ANR	8089631	PtrMemberAccess	pfh -> HeaderFormat		8089117	0					
ANR	8089632	Identifier	pfh		8089117	0					
ANR	8089633	Identifier	HeaderFormat		8089117	1					
ANR	8089634	Identifier	pcfh_resolution_bitmap		8089117	1					
ANR	8089635	CompoundStatement		119:65:4226:4226	8089117	1					
ANR	8089636	Statement	define	379:1:13554:13559	8089117	0	True				
ANR	8089637	Statement	pfhx	379:8:13561:13564	8089117	1	True				
ANR	8089638	Statement	(	379:13:13566:13566	8089117	2	True				
ANR	8089639	Statement	(	379:14:13567:13567	8089117	3	True				
ANR	8089640	Statement	const	379:15:13568:13572	8089117	4	True				
ANR	8089641	Statement	pcl_resolution_bitmap_header_t	379:21:13574:13603	8089117	5	True				
ANR	8089642	Statement	*	379:52:13605:13605	8089117	6	True				
ANR	8089643	Statement	)	379:53:13606:13606	8089117	7	True				
ANR	8089644	Statement	pfh	379:54:13607:13609	8089117	8	True				
ANR	8089645	Statement	)	379:57:13610:13610	8089117	9	True				
ANR	8089646	ExpressionStatement	plfont -> resolution . x = pl_get_uint16 ( pfhx -> XResolution )	380:20:13632:13687	8089117	10	True				
ANR	8089647	AssignmentExpression	plfont -> resolution . x = pl_get_uint16 ( pfhx -> XResolution )		8089117	0		=			
ANR	8089648	MemberAccess	plfont -> resolution . x		8089117	0					
ANR	8089649	PtrMemberAccess	plfont -> resolution		8089117	0					
ANR	8089650	Identifier	plfont		8089117	0					
ANR	8089651	Identifier	resolution		8089117	1					
ANR	8089652	Identifier	x		8089117	1					
ANR	8089653	CallExpression	pl_get_uint16 ( pfhx -> XResolution )		8089117	1					
ANR	8089654	Callee	pl_get_uint16		8089117	0					
ANR	8089655	Identifier	pl_get_uint16		8089117	0					
ANR	8089656	ArgumentList	pfhx -> XResolution		8089117	1					
ANR	8089657	Argument	pfhx -> XResolution		8089117	0					
ANR	8089658	PtrMemberAccess	pfhx -> XResolution		8089117	0					
ANR	8089659	Identifier	pfhx		8089117	0					
ANR	8089660	Identifier	XResolution		8089117	1					
ANR	8089661	ExpressionStatement	plfont -> resolution . y = pl_get_uint16 ( pfhx -> YResolution )	381:20:13709:13764	8089117	11	True				
ANR	8089662	AssignmentExpression	plfont -> resolution . y = pl_get_uint16 ( pfhx -> YResolution )		8089117	0		=			
ANR	8089663	MemberAccess	plfont -> resolution . y		8089117	0					
ANR	8089664	PtrMemberAccess	plfont -> resolution		8089117	0					
ANR	8089665	Identifier	plfont		8089117	0					
ANR	8089666	Identifier	resolution		8089117	1					
ANR	8089667	Identifier	y		8089117	1					
ANR	8089668	CallExpression	pl_get_uint16 ( pfhx -> YResolution )		8089117	1					
ANR	8089669	Callee	pl_get_uint16		8089117	0					
ANR	8089670	Identifier	pl_get_uint16		8089117	0					
ANR	8089671	ArgumentList	pfhx -> YResolution		8089117	1					
ANR	8089672	Argument	pfhx -> YResolution		8089117	0					
ANR	8089673	PtrMemberAccess	pfhx -> YResolution		8089117	0					
ANR	8089674	Identifier	pfhx		8089117	0					
ANR	8089675	Identifier	YResolution		8089117	1					
ANR	8089676	Statement	undef	382:1:13767:13771	8089117	12	True				
ANR	8089677	Statement	pfhx	382:7:13773:13776	8089117	13	True				
ANR	8089678	ElseStatement	else		8089117	0					
ANR	8089679	IfStatement	if ( pfh -> HeaderFormat == pcfh_bitmap )		8089117	0					
ANR	8089680	Condition	pfh -> HeaderFormat == pcfh_bitmap	389:25:14167:14198	8089117	0	True				
ANR	8089681	EqualityExpression	pfh -> HeaderFormat == pcfh_bitmap		8089117	0		==			
ANR	8089682	PtrMemberAccess	pfh -> HeaderFormat		8089117	0					
ANR	8089683	Identifier	pfh		8089117	0					
ANR	8089684	Identifier	HeaderFormat		8089117	1					
ANR	8089685	Identifier	pcfh_bitmap		8089117	1					
ANR	8089686	ExpressionStatement	plfont -> resolution . x = plfont -> resolution . y = 300	390:20:14221:14270	8089117	1	True				
ANR	8089687	AssignmentExpression	plfont -> resolution . x = plfont -> resolution . y = 300		8089117	0		=			
ANR	8089688	MemberAccess	plfont -> resolution . x		8089117	0					
ANR	8089689	PtrMemberAccess	plfont -> resolution		8089117	0					
ANR	8089690	Identifier	plfont		8089117	0					
ANR	8089691	Identifier	resolution		8089117	1					
ANR	8089692	Identifier	x		8089117	1					
ANR	8089693	AssignmentExpression	plfont -> resolution . y = 300		8089117	1		=			
ANR	8089694	MemberAccess	plfont -> resolution . y		8089117	0					
ANR	8089695	PtrMemberAccess	plfont -> resolution		8089117	0					
ANR	8089696	Identifier	plfont		8089117	0					
ANR	8089697	Identifier	resolution		8089117	1					
ANR	8089698	Identifier	y		8089117	1					
ANR	8089699	PrimaryExpression	300		8089117	1					
ANR	8089700	CompoundStatement		136:20:5142:5334	8089117	8					
ANR	8089701	IdentifierDeclStatement	ulong pitch_1024th_dots = ( ( ulong ) pl_get_uint16 ( pfh -> Pitch ) << 8 ) + pfh -> PitchExtended ;	392:20:14310:14445	8089117	0	True				
ANR	8089702	IdentifierDecl	pitch_1024th_dots = ( ( ulong ) pl_get_uint16 ( pfh -> Pitch ) << 8 ) + pfh -> PitchExtended		8089117	0					
ANR	8089703	IdentifierDeclType	ulong		8089117	0					
ANR	8089704	Identifier	pitch_1024th_dots		8089117	1					
ANR	8089705	AssignmentExpression	pitch_1024th_dots = ( ( ulong ) pl_get_uint16 ( pfh -> Pitch ) << 8 ) + pfh -> PitchExtended		8089117	2		=			
ANR	8089706	Identifier	pitch_1024th_dots		8089117	0					
ANR	8089707	AdditiveExpression	( ( ulong ) pl_get_uint16 ( pfh -> Pitch ) << 8 ) + pfh -> PitchExtended		8089117	1		+			
ANR	8089708	ShiftExpression	( ulong ) pl_get_uint16 ( pfh -> Pitch ) << 8		8089117	0		<<			
ANR	8089709	CastExpression	( ulong ) pl_get_uint16 ( pfh -> Pitch )		8089117	0					
ANR	8089710	CastTarget	ulong		8089117	0					
ANR	8089711	CallExpression	pl_get_uint16 ( pfh -> Pitch )		8089117	1					
ANR	8089712	Callee	pl_get_uint16		8089117	0					
ANR	8089713	Identifier	pl_get_uint16		8089117	0					
ANR	8089714	ArgumentList	pfh -> Pitch		8089117	1					
ANR	8089715	Argument	pfh -> Pitch		8089117	0					
ANR	8089716	PtrMemberAccess	pfh -> Pitch		8089117	0					
ANR	8089717	Identifier	pfh		8089117	0					
ANR	8089718	Identifier	Pitch		8089117	1					
ANR	8089719	PrimaryExpression	8		8089117	1					
ANR	8089720	PtrMemberAccess	pfh -> PitchExtended		8089117	1					
ANR	8089721	Identifier	pfh		8089117	0					
ANR	8089722	Identifier	PitchExtended		8089117	1					
ANR	8089723	IdentifierDeclStatement	double pitch_cp = ( double ) ( pitch_1024th_dots / 1024.0 / plfont -> resolution . x * 7200.0 ) ;	395:20:14467:14659	8089117	1	True				
ANR	8089724	IdentifierDecl	pitch_cp = ( double ) ( pitch_1024th_dots / 1024.0 / plfont -> resolution . x * 7200.0 )		8089117	0					
ANR	8089725	IdentifierDeclType	double		8089117	0					
ANR	8089726	Identifier	pitch_cp		8089117	1					
ANR	8089727	AssignmentExpression	pitch_cp = ( double ) ( pitch_1024th_dots / 1024.0 / plfont -> resolution . x * 7200.0 )		8089117	2		=			
ANR	8089728	Identifier	pitch_cp		8089117	0					
ANR	8089729	CastExpression	( double ) ( pitch_1024th_dots / 1024.0 / plfont -> resolution . x * 7200.0 )		8089117	1					
ANR	8089730	CastTarget	double		8089117	0					
ANR	8089731	MultiplicativeExpression	pitch_1024th_dots / 1024.0 / plfont -> resolution . x * 7200.0		8089117	1		/			
ANR	8089732	Identifier	pitch_1024th_dots		8089117	0					
ANR	8089733	MultiplicativeExpression	1024.0 / plfont -> resolution . x * 7200.0		8089117	1		/			
ANR	8089734	PrimaryExpression	1024.0		8089117	0					
ANR	8089735	MultiplicativeExpression	plfont -> resolution . x * 7200.0		8089117	1		*			
ANR	8089736	MemberAccess	plfont -> resolution . x		8089117	0					
ANR	8089737	PtrMemberAccess	plfont -> resolution		8089117	0					
ANR	8089738	Identifier	plfont		8089117	0					
ANR	8089739	Identifier	resolution		8089117	1					
ANR	8089740	Identifier	x		8089117	1					
ANR	8089741	PrimaryExpression	7200.0		8089117	1					
ANR	8089742	ExpressionStatement	"pl_fp_set_pitch_cp ( & plfont -> params , pitch_cp )"	400:20:14682:14727	8089117	2	True				
ANR	8089743	CallExpression	"pl_fp_set_pitch_cp ( & plfont -> params , pitch_cp )"		8089117	0					
ANR	8089744	Callee	pl_fp_set_pitch_cp		8089117	0					
ANR	8089745	Identifier	pl_fp_set_pitch_cp		8089117	0					
ANR	8089746	ArgumentList	& plfont -> params		8089117	1					
ANR	8089747	Argument	& plfont -> params		8089117	0					
ANR	8089748	UnaryOperationExpression	& plfont -> params		8089117	0					
ANR	8089749	UnaryOperator	&		8089117	0					
ANR	8089750	PtrMemberAccess	plfont -> params		8089117	1					
ANR	8089751	Identifier	plfont		8089117	0					
ANR	8089752	Identifier	params		8089117	1					
ANR	8089753	Argument	pitch_cp		8089117	1					
ANR	8089754	Identifier	pitch_cp		8089117	0					
ANR	8089755	CompoundStatement		144:20:5460:5513	8089117	9					
ANR	8089756	IdentifierDeclStatement	uint height_quarter_dots = pl_get_uint16 ( pfh -> Height ) ;	403:20:14785:14838	8089117	0	True				
ANR	8089757	IdentifierDecl	height_quarter_dots = pl_get_uint16 ( pfh -> Height )		8089117	0					
ANR	8089758	IdentifierDeclType	uint		8089117	0					
ANR	8089759	Identifier	height_quarter_dots		8089117	1					
ANR	8089760	AssignmentExpression	height_quarter_dots = pl_get_uint16 ( pfh -> Height )		8089117	2		=			
ANR	8089761	Identifier	height_quarter_dots		8089117	0					
ANR	8089762	CallExpression	pl_get_uint16 ( pfh -> Height )		8089117	1					
ANR	8089763	Callee	pl_get_uint16		8089117	0					
ANR	8089764	Identifier	pl_get_uint16		8089117	0					
ANR	8089765	ArgumentList	pfh -> Height		8089117	1					
ANR	8089766	Argument	pfh -> Height		8089117	0					
ANR	8089767	PtrMemberAccess	pfh -> Height		8089117	0					
ANR	8089768	Identifier	pfh		8089117	0					
ANR	8089769	Identifier	Height		8089117	1					
ANR	8089770	ExpressionStatement	plfont -> params . height_4ths = ( uint ) ( floor ( ( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5 ) )	405:20:14861:15041	8089117	1	True				
ANR	8089771	AssignmentExpression	plfont -> params . height_4ths = ( uint ) ( floor ( ( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5 ) )		8089117	0		=			
ANR	8089772	MemberAccess	plfont -> params . height_4ths		8089117	0					
ANR	8089773	PtrMemberAccess	plfont -> params		8089117	0					
ANR	8089774	Identifier	plfont		8089117	0					
ANR	8089775	Identifier	params		8089117	1					
ANR	8089776	Identifier	height_4ths		8089117	1					
ANR	8089777	CastExpression	( uint ) ( floor ( ( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5 ) )		8089117	1					
ANR	8089778	CastTarget	uint		8089117	0					
ANR	8089779	CallExpression	floor ( ( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5 )		8089117	1					
ANR	8089780	Callee	floor		8089117	0					
ANR	8089781	Identifier	floor		8089117	0					
ANR	8089782	ArgumentList	( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5		8089117	1					
ANR	8089783	Argument	( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5		8089117	0					
ANR	8089784	AdditiveExpression	( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x ) + 0.5		8089117	0		+			
ANR	8089785	MultiplicativeExpression	( double ) height_quarter_dots * 72.0 / ( double ) ( plfont -> resolution . x )		8089117	0		*			
ANR	8089786	CastExpression	( double ) height_quarter_dots		8089117	0					
ANR	8089787	CastTarget	double		8089117	0					
ANR	8089788	Identifier	height_quarter_dots		8089117	1					
ANR	8089789	MultiplicativeExpression	72.0 / ( double ) ( plfont -> resolution . x )		8089117	1		/			
ANR	8089790	PrimaryExpression	72.0		8089117	0					
ANR	8089791	CastExpression	( double ) ( plfont -> resolution . x )		8089117	1					
ANR	8089792	CastTarget	double		8089117	0					
ANR	8089793	MemberAccess	plfont -> resolution . x		8089117	1					
ANR	8089794	PtrMemberAccess	plfont -> resolution		8089117	0					
ANR	8089795	Identifier	plfont		8089117	0					
ANR	8089796	Identifier	resolution		8089117	1					
ANR	8089797	Identifier	x		8089117	1					
ANR	8089798	PrimaryExpression	0.5		8089117	1					
ANR	8089799	BreakStatement	break ;	409:16:15077:15082	8089117	10	True				
ANR	8089800	Label	case plfst_TrueType :	411:8:15106:15125	8089117	2	True				
ANR	8089801	Identifier	plfst_TrueType		8089117	0					
ANR	8089802	CompoundStatement		155:16:5833:5854	8089117	3					
ANR	8089803	IdentifierDeclStatement	gs_font_type42 * pfont ;	414:16:15158:15179	8089117	0	True				
ANR	8089804	IdentifierDecl	* pfont		8089117	0					
ANR	8089805	IdentifierDeclType	gs_font_type42 *		8089117	0					
ANR	8089806	Identifier	pfont		8089117	1					
ANR	8089807	CompoundStatement		158:27:5902:6012	8089117	1					
ANR	8089808	Statement	static	417:20:15220:15225	8089117	0	True				
ANR	8089809	IdentifierDeclStatement	"const pl_font_offset_errors_t errors = { gs_error_invalidfont , 0 } ;"	417:27:15227:15337	8089117	1	True				
ANR	8089810	IdentifierDecl	"errors = { gs_error_invalidfont , 0 }"		8089117	0					
ANR	8089811	IdentifierDeclType	const pl_font_offset_errors_t		8089117	0					
ANR	8089812	Identifier	errors		8089117	1					
ANR	8089813	AssignmentExpression	"errors = { gs_error_invalidfont , 0 }"		8089117	2		=			
ANR	8089814	Identifier	errors		8089117	0					
ANR	8089815	InitializerList	gs_error_invalidfont		8089117	1					
ANR	8089816	Identifier	gs_error_invalidfont		8089117	0					
ANR	8089817	PrimaryExpression	0		8089117	1					
ANR	8089818	ExpressionStatement	"code = pl_font_scan_segments ( mem , plfont , 70 , desc_size , ( ulong ) count - 2 , pfh -> HeaderFormat == pcfh_truetype_large , & errors )"	420:20:15359:15647	8089117	2	True				
ANR	8089819	AssignmentExpression	"code = pl_font_scan_segments ( mem , plfont , 70 , desc_size , ( ulong ) count - 2 , pfh -> HeaderFormat == pcfh_truetype_large , & errors )"		8089117	0		=			
ANR	8089820	Identifier	code		8089117	0					
ANR	8089821	CallExpression	"pl_font_scan_segments ( mem , plfont , 70 , desc_size , ( ulong ) count - 2 , pfh -> HeaderFormat == pcfh_truetype_large , & errors )"		8089117	1					
ANR	8089822	Callee	pl_font_scan_segments		8089117	0					
ANR	8089823	Identifier	pl_font_scan_segments		8089117	0					
ANR	8089824	ArgumentList	mem		8089117	1					
ANR	8089825	Argument	mem		8089117	0					
ANR	8089826	Identifier	mem		8089117	0					
ANR	8089827	Argument	plfont		8089117	1					
ANR	8089828	Identifier	plfont		8089117	0					
ANR	8089829	Argument	70		8089117	2					
ANR	8089830	PrimaryExpression	70		8089117	0					
ANR	8089831	Argument	desc_size		8089117	3					
ANR	8089832	Identifier	desc_size		8089117	0					
ANR	8089833	Argument	( ulong ) count - 2		8089117	4					
ANR	8089834	AdditiveExpression	( ulong ) count - 2		8089117	0		-			
ANR	8089835	CastExpression	( ulong ) count		8089117	0					
ANR	8089836	CastTarget	ulong		8089117	0					
ANR	8089837	Identifier	count		8089117	1					
ANR	8089838	PrimaryExpression	2		8089117	1					
ANR	8089839	Argument	pfh -> HeaderFormat == pcfh_truetype_large		8089117	5					
ANR	8089840	EqualityExpression	pfh -> HeaderFormat == pcfh_truetype_large		8089117	0		==			
ANR	8089841	PtrMemberAccess	pfh -> HeaderFormat		8089117	0					
ANR	8089842	Identifier	pfh		8089117	0					
ANR	8089843	Identifier	HeaderFormat		8089117	1					
ANR	8089844	Identifier	pcfh_truetype_large		8089117	1					
ANR	8089845	Argument	& errors		8089117	6					
ANR	8089846	UnaryOperationExpression	& errors		8089117	0					
ANR	8089847	UnaryOperator	&		8089117	0					
ANR	8089848	Identifier	errors		8089117	1					
ANR	8089849	IfStatement	if ( code < 0 )		8089117	3					
ANR	8089850	Condition	code < 0	425:24:15673:15680	8089117	0	True				
ANR	8089851	RelationalExpression	code < 0		8089117	0		<			
ANR	8089852	Identifier	code		8089117	0					
ANR	8089853	PrimaryExpression	0		8089117	1					
ANR	8089854	ReturnStatement	return code ;	426:24:15707:15718	8089117	1	True				
ANR	8089855	Identifier	code		8089117	0					
ANR	8089856	IfStatement	if ( ( pfh -> HeaderFormat == pcfh_truetype_large ) && ( plfont -> scaling_technology == plfst_bitmap ) )		8089117	4					
ANR	8089857	Condition	( pfh -> HeaderFormat == pcfh_truetype_large ) && ( plfont -> scaling_technology == plfst_bitmap )	429:24:15853:15966	8089117	0	True				
ANR	8089858	AndExpression	( pfh -> HeaderFormat == pcfh_truetype_large ) && ( plfont -> scaling_technology == plfst_bitmap )		8089117	0		&&			
ANR	8089859	EqualityExpression	pfh -> HeaderFormat == pcfh_truetype_large		8089117	0		==			
ANR	8089860	PtrMemberAccess	pfh -> HeaderFormat		8089117	0					
ANR	8089861	Identifier	pfh		8089117	0					
ANR	8089862	Identifier	HeaderFormat		8089117	1					
ANR	8089863	Identifier	pcfh_truetype_large		8089117	1					
ANR	8089864	EqualityExpression	plfont -> scaling_technology == plfst_bitmap		8089117	1		==			
ANR	8089865	PtrMemberAccess	plfont -> scaling_technology		8089117	0					
ANR	8089866	Identifier	plfont		8089117	0					
ANR	8089867	Identifier	scaling_technology		8089117	1					
ANR	8089868	Identifier	plfst_bitmap		8089117	1					
ANR	8089869	GotoStatement	goto bitmap ;	431:24:15993:16004	8089117	1	True				
ANR	8089870	Identifier	bitmap		8089117	0					
ANR	8089871	ExpressionStatement	"pfont = gs_alloc_struct ( mem , gs_font_type42 , & st_gs_font_type42 , ""pcl_font_header(truetype font)"" )"	434:16:16041:16195	8089117	2	True				
ANR	8089872	AssignmentExpression	"pfont = gs_alloc_struct ( mem , gs_font_type42 , & st_gs_font_type42 , ""pcl_font_header(truetype font)"" )"		8089117	0		=			
ANR	8089873	Identifier	pfont		8089117	0					
ANR	8089874	CallExpression	"gs_alloc_struct ( mem , gs_font_type42 , & st_gs_font_type42 , ""pcl_font_header(truetype font)"" )"		8089117	1					
ANR	8089875	Callee	gs_alloc_struct		8089117	0					
ANR	8089876	Identifier	gs_alloc_struct		8089117	0					
ANR	8089877	ArgumentList	mem		8089117	1					
ANR	8089878	Argument	mem		8089117	0					
ANR	8089879	Identifier	mem		8089117	0					
ANR	8089880	Argument	gs_font_type42		8089117	1					
ANR	8089881	Identifier	gs_font_type42		8089117	0					
ANR	8089882	Argument	& st_gs_font_type42		8089117	2					
ANR	8089883	UnaryOperationExpression	& st_gs_font_type42		8089117	0					
ANR	8089884	UnaryOperator	&		8089117	0					
ANR	8089885	Identifier	st_gs_font_type42		8089117	1					
ANR	8089886	Argument	"""pcl_font_header(truetype font)"""		8089117	3					
ANR	8089887	PrimaryExpression	"""pcl_font_header(truetype font)"""		8089117	0					
ANR	8089888	IfStatement	if ( pfont == 0 )		8089117	3					
ANR	8089889	Condition	pfont == 0	437:20:16217:16226	8089117	0	True				
ANR	8089890	EqualityExpression	pfont == 0		8089117	0		==			
ANR	8089891	Identifier	pfont		8089117	0					
ANR	8089892	PrimaryExpression	0		8089117	1					
ANR	8089893	ExpressionStatement	return_error ( e_Memory )	438:20:16249:16271	8089117	1	True				
ANR	8089894	CallExpression	return_error ( e_Memory )		8089117	0					
ANR	8089895	Callee	return_error		8089117	0					
ANR	8089896	Identifier	return_error		8089117	0					
ANR	8089897	ArgumentList	e_Memory		8089117	1					
ANR	8089898	Argument	e_Memory		8089117	0					
ANR	8089899	Identifier	e_Memory		8089117	0					
ANR	8089900	CompoundStatement		182:20:6987:7032	8089117	4					
ANR	8089901	IdentifierDeclStatement	uint num_chars = pl_get_uint16 ( pfh -> LastCode ) ;	441:20:16312:16357	8089117	0	True				
ANR	8089902	IdentifierDecl	num_chars = pl_get_uint16 ( pfh -> LastCode )		8089117	0					
ANR	8089903	IdentifierDeclType	uint		8089117	0					
ANR	8089904	Identifier	num_chars		8089117	1					
ANR	8089905	AssignmentExpression	num_chars = pl_get_uint16 ( pfh -> LastCode )		8089117	2		=			
ANR	8089906	Identifier	num_chars		8089117	0					
ANR	8089907	CallExpression	pl_get_uint16 ( pfh -> LastCode )		8089117	1					
ANR	8089908	Callee	pl_get_uint16		8089117	0					
ANR	8089909	Identifier	pl_get_uint16		8089117	0					
ANR	8089910	ArgumentList	pfh -> LastCode		8089117	1					
ANR	8089911	Argument	pfh -> LastCode		8089117	0					
ANR	8089912	PtrMemberAccess	pfh -> LastCode		8089117	0					
ANR	8089913	Identifier	pfh		8089117	0					
ANR	8089914	Identifier	LastCode		8089117	1					
ANR	8089915	IfStatement	if ( num_chars < 20 )		8089117	1					
ANR	8089916	Condition	num_chars < 20	443:24:16384:16397	8089117	0	True				
ANR	8089917	RelationalExpression	num_chars < 20		8089117	0		<			
ANR	8089918	Identifier	num_chars		8089117	0					
ANR	8089919	PrimaryExpression	20		8089117	1					
ANR	8089920	ExpressionStatement	num_chars = 20	444:24:16424:16438	8089117	1	True				
ANR	8089921	AssignmentExpression	num_chars = 20		8089117	0		=			
ANR	8089922	Identifier	num_chars		8089117	0					
ANR	8089923	PrimaryExpression	20		8089117	1					
ANR	8089924	ElseStatement	else		8089117	0					
ANR	8089925	IfStatement	if ( num_chars > 300 )		8089117	0					
ANR	8089926	Condition	num_chars > 300	445:29:16469:16483	8089117	0	True				
ANR	8089927	RelationalExpression	num_chars > 300		8089117	0		>			
ANR	8089928	Identifier	num_chars		8089117	0					
ANR	8089929	PrimaryExpression	300		8089117	1					
ANR	8089930	ExpressionStatement	num_chars = 300	446:24:16510:16525	8089117	1	True				
ANR	8089931	AssignmentExpression	num_chars = 300		8089117	0		=			
ANR	8089932	Identifier	num_chars		8089117	0					
ANR	8089933	PrimaryExpression	300		8089117	1					
ANR	8089934	ExpressionStatement	"code = pl_tt_alloc_char_glyphs ( plfont , num_chars , mem , ""pcl_font_header(char_glyphs)"" )"	447:20:16547:16684	8089117	2	True				
ANR	8089935	AssignmentExpression	"code = pl_tt_alloc_char_glyphs ( plfont , num_chars , mem , ""pcl_font_header(char_glyphs)"" )"		8089117	0		=			
ANR	8089936	Identifier	code		8089117	0					
ANR	8089937	CallExpression	"pl_tt_alloc_char_glyphs ( plfont , num_chars , mem , ""pcl_font_header(char_glyphs)"" )"		8089117	1					
ANR	8089938	Callee	pl_tt_alloc_char_glyphs		8089117	0					
ANR	8089939	Identifier	pl_tt_alloc_char_glyphs		8089117	0					
ANR	8089940	ArgumentList	plfont		8089117	1					
ANR	8089941	Argument	plfont		8089117	0					
ANR	8089942	Identifier	plfont		8089117	0					
ANR	8089943	Argument	num_chars		8089117	1					
ANR	8089944	Identifier	num_chars		8089117	0					
ANR	8089945	Argument	mem		8089117	2					
ANR	8089946	Identifier	mem		8089117	0					
ANR	8089947	Argument	"""pcl_font_header(char_glyphs)"""		8089117	3					
ANR	8089948	PrimaryExpression	"""pcl_font_header(char_glyphs)"""		8089117	0					
ANR	8089949	IfStatement	if ( code < 0 )		8089117	3					
ANR	8089950	Condition	code < 0	449:24:16710:16717	8089117	0	True				
ANR	8089951	RelationalExpression	code < 0		8089117	0		<			
ANR	8089952	Identifier	code		8089117	0					
ANR	8089953	PrimaryExpression	0		8089117	1					
ANR	8089954	ReturnStatement	return code ;	450:24:16744:16755	8089117	1	True				
ANR	8089955	Identifier	code		8089117	0					
ANR	8089956	ExpressionStatement	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"	452:16:16791:16933	8089117	5	True				
ANR	8089957	AssignmentExpression	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"		8089117	0		=			
ANR	8089958	Identifier	code		8089117	0					
ANR	8089959	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"		8089117	1					
ANR	8089960	Callee	pl_fill_in_font		8089117	0					
ANR	8089961	Identifier	pl_fill_in_font		8089117	0					
ANR	8089962	ArgumentList	( gs_font * ) pfont		8089117	1					
ANR	8089963	Argument	( gs_font * ) pfont		8089117	0					
ANR	8089964	CastExpression	( gs_font * ) pfont		8089117	0					
ANR	8089965	CastTarget	gs_font *		8089117	0					
ANR	8089966	Identifier	pfont		8089117	1					
ANR	8089967	Argument	plfont		8089117	1					
ANR	8089968	Identifier	plfont		8089117	0					
ANR	8089969	Argument	pcs -> font_dir		8089117	2					
ANR	8089970	PtrMemberAccess	pcs -> font_dir		8089117	0					
ANR	8089971	Identifier	pcs		8089117	0					
ANR	8089972	Identifier	font_dir		8089117	1					
ANR	8089973	Argument	mem		8089117	3					
ANR	8089974	Identifier	mem		8089117	0					
ANR	8089975	Argument	"""nameless_font"""		8089117	4					
ANR	8089976	PrimaryExpression	"""nameless_font"""		8089117	0					
ANR	8089977	IfStatement	if ( code < 0 )		8089117	6					
ANR	8089978	Condition	code < 0	455:20:16955:16962	8089117	0	True				
ANR	8089979	RelationalExpression	code < 0		8089117	0		<			
ANR	8089980	Identifier	code		8089117	0					
ANR	8089981	PrimaryExpression	0		8089117	1					
ANR	8089982	ReturnStatement	return code ;	456:20:16985:16996	8089117	1	True				
ANR	8089983	Identifier	code		8089117	0					
ANR	8089984	ExpressionStatement	"code = pl_fill_in_tt_font ( pfont , NULL , gs_next_ids ( mem , 1 ) )"	457:16:17014:17073	8089117	7	True				
ANR	8089985	AssignmentExpression	"code = pl_fill_in_tt_font ( pfont , NULL , gs_next_ids ( mem , 1 ) )"		8089117	0		=			
ANR	8089986	Identifier	code		8089117	0					
ANR	8089987	CallExpression	"pl_fill_in_tt_font ( pfont , NULL , gs_next_ids ( mem , 1 ) )"		8089117	1					
ANR	8089988	Callee	pl_fill_in_tt_font		8089117	0					
ANR	8089989	Identifier	pl_fill_in_tt_font		8089117	0					
ANR	8089990	ArgumentList	pfont		8089117	1					
ANR	8089991	Argument	pfont		8089117	0					
ANR	8089992	Identifier	pfont		8089117	0					
ANR	8089993	Argument	NULL		8089117	1					
ANR	8089994	Identifier	NULL		8089117	0					
ANR	8089995	Argument	"gs_next_ids ( mem , 1 )"		8089117	2					
ANR	8089996	CallExpression	"gs_next_ids ( mem , 1 )"		8089117	0					
ANR	8089997	Callee	gs_next_ids		8089117	0					
ANR	8089998	Identifier	gs_next_ids		8089117	0					
ANR	8089999	ArgumentList	mem		8089117	1					
ANR	8090000	Argument	mem		8089117	0					
ANR	8090001	Identifier	mem		8089117	0					
ANR	8090002	Argument	1		8089117	1					
ANR	8090003	PrimaryExpression	1		8089117	0					
ANR	8090004	IfStatement	if ( code < 0 )		8089117	8					
ANR	8090005	Condition	code < 0	458:20:17095:17102	8089117	0	True				
ANR	8090006	RelationalExpression	code < 0		8089117	0		<			
ANR	8090007	Identifier	code		8089117	0					
ANR	8090008	PrimaryExpression	0		8089117	1					
ANR	8090009	ReturnStatement	return code ;	459:20:17125:17136	8089117	1	True				
ANR	8090010	Identifier	code		8089117	0					
ANR	8090011	CompoundStatement		202:20:7851:7991	8089117	9					
ANR	8090012	IdentifierDeclStatement	uint pitch_cp = ( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / pfont -> data . unitsPerEm ) ;	461:20:17176:17316	8089117	0	True				
ANR	8090013	IdentifierDecl	pitch_cp = ( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / pfont -> data . unitsPerEm )		8089117	0					
ANR	8090014	IdentifierDeclType	uint		8089117	0					
ANR	8090015	Identifier	pitch_cp		8089117	1					
ANR	8090016	AssignmentExpression	pitch_cp = ( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / pfont -> data . unitsPerEm )		8089117	2		=			
ANR	8090017	Identifier	pitch_cp		8089117	0					
ANR	8090018	CastExpression	( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / pfont -> data . unitsPerEm )		8089117	1					
ANR	8090019	CastTarget	uint		8089117	0					
ANR	8090020	MultiplicativeExpression	pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / pfont -> data . unitsPerEm		8089117	1		*			
ANR	8090021	CallExpression	pl_get_uint16 ( pfh -> Pitch )		8089117	0					
ANR	8090022	Callee	pl_get_uint16		8089117	0					
ANR	8090023	Identifier	pl_get_uint16		8089117	0					
ANR	8090024	ArgumentList	pfh -> Pitch		8089117	1					
ANR	8090025	Argument	pfh -> Pitch		8089117	0					
ANR	8090026	PtrMemberAccess	pfh -> Pitch		8089117	0					
ANR	8090027	Identifier	pfh		8089117	0					
ANR	8090028	Identifier	Pitch		8089117	1					
ANR	8090029	MultiplicativeExpression	1000.0 / pfont -> data . unitsPerEm		8089117	1		/			
ANR	8090030	PrimaryExpression	1000.0		8089117	0					
ANR	8090031	MemberAccess	pfont -> data . unitsPerEm		8089117	1					
ANR	8090032	PtrMemberAccess	pfont -> data		8089117	0					
ANR	8090033	Identifier	pfont		8089117	0					
ANR	8090034	Identifier	data		8089117	1					
ANR	8090035	Identifier	unitsPerEm		8089117	1					
ANR	8090036	ExpressionStatement	"pl_fp_set_pitch_cp ( & plfont -> params , pitch_cp )"	464:20:17338:17383	8089117	1	True				
ANR	8090037	CallExpression	"pl_fp_set_pitch_cp ( & plfont -> params , pitch_cp )"		8089117	0					
ANR	8090038	Callee	pl_fp_set_pitch_cp		8089117	0					
ANR	8090039	Identifier	pl_fp_set_pitch_cp		8089117	0					
ANR	8090040	ArgumentList	& plfont -> params		8089117	1					
ANR	8090041	Argument	& plfont -> params		8089117	0					
ANR	8090042	UnaryOperationExpression	& plfont -> params		8089117	0					
ANR	8090043	UnaryOperator	&		8089117	0					
ANR	8090044	PtrMemberAccess	plfont -> params		8089117	1					
ANR	8090045	Identifier	plfont		8089117	0					
ANR	8090046	Identifier	params		8089117	1					
ANR	8090047	Argument	pitch_cp		8089117	1					
ANR	8090048	Identifier	pitch_cp		8089117	0					
ANR	8090049	BreakStatement	break ;	467:12:17429:17434	8089117	4	True				
ANR	8090050	Label	case plfst_Intellifont :	468:8:17444:17466	8089117	5	True				
ANR	8090051	Identifier	plfst_Intellifont		8089117	0					
ANR	8090052	CompoundStatement		211:16:8173:8335	8089117	6					
ANR	8090053	IdentifierDeclStatement	"gs_font_base * pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" ) ;"	470:16:17498:17660	8089117	0	True				
ANR	8090054	IdentifierDecl	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" )"		8089117	0					
ANR	8090055	IdentifierDeclType	gs_font_base *		8089117	0					
ANR	8090056	Identifier	pfont		8089117	1					
ANR	8090057	AssignmentExpression	"* pfont = gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" )"		8089117	2		=			
ANR	8090058	Identifier	pfont		8089117	0					
ANR	8090059	CallExpression	"gs_alloc_struct ( mem , gs_font_base , & st_gs_font_base , ""pcl_font_header(bitmap font)"" )"		8089117	1					
ANR	8090060	Callee	gs_alloc_struct		8089117	0					
ANR	8090061	Identifier	gs_alloc_struct		8089117	0					
ANR	8090062	ArgumentList	mem		8089117	1					
ANR	8090063	Argument	mem		8089117	0					
ANR	8090064	Identifier	mem		8089117	0					
ANR	8090065	Argument	gs_font_base		8089117	1					
ANR	8090066	Identifier	gs_font_base		8089117	0					
ANR	8090067	Argument	& st_gs_font_base		8089117	2					
ANR	8090068	UnaryOperationExpression	& st_gs_font_base		8089117	0					
ANR	8090069	UnaryOperator	&		8089117	0					
ANR	8090070	Identifier	st_gs_font_base		8089117	1					
ANR	8090071	Argument	"""pcl_font_header(bitmap font)"""		8089117	3					
ANR	8090072	PrimaryExpression	"""pcl_font_header(bitmap font)"""		8089117	0					
ANR	8090073	IfStatement	if ( pfont == 0 )		8089117	1					
ANR	8090074	Condition	pfont == 0	474:20:17683:17692	8089117	0	True				
ANR	8090075	EqualityExpression	pfont == 0		8089117	0		==			
ANR	8090076	Identifier	pfont		8089117	0					
ANR	8090077	PrimaryExpression	0		8089117	1					
ANR	8090078	ExpressionStatement	return_error ( e_Memory )	475:20:17715:17737	8089117	1	True				
ANR	8090079	CallExpression	return_error ( e_Memory )		8089117	0					
ANR	8090080	Callee	return_error		8089117	0					
ANR	8090081	Identifier	return_error		8089117	0					
ANR	8090082	ArgumentList	e_Memory		8089117	1					
ANR	8090083	Argument	e_Memory		8089117	0					
ANR	8090084	Identifier	e_Memory		8089117	0					
ANR	8090085	ExpressionStatement	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"	476:16:17755:17897	8089117	2	True				
ANR	8090086	AssignmentExpression	"code = pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"		8089117	0		=			
ANR	8090087	Identifier	code		8089117	0					
ANR	8090088	CallExpression	"pl_fill_in_font ( ( gs_font * ) pfont , plfont , pcs -> font_dir , mem , ""nameless_font"" )"		8089117	1					
ANR	8090089	Callee	pl_fill_in_font		8089117	0					
ANR	8090090	Identifier	pl_fill_in_font		8089117	0					
ANR	8090091	ArgumentList	( gs_font * ) pfont		8089117	1					
ANR	8090092	Argument	( gs_font * ) pfont		8089117	0					
ANR	8090093	CastExpression	( gs_font * ) pfont		8089117	0					
ANR	8090094	CastTarget	gs_font *		8089117	0					
ANR	8090095	Identifier	pfont		8089117	1					
ANR	8090096	Argument	plfont		8089117	1					
ANR	8090097	Identifier	plfont		8089117	0					
ANR	8090098	Argument	pcs -> font_dir		8089117	2					
ANR	8090099	PtrMemberAccess	pcs -> font_dir		8089117	0					
ANR	8090100	Identifier	pcs		8089117	0					
ANR	8090101	Identifier	font_dir		8089117	1					
ANR	8090102	Argument	mem		8089117	3					
ANR	8090103	Identifier	mem		8089117	0					
ANR	8090104	Argument	"""nameless_font"""		8089117	4					
ANR	8090105	PrimaryExpression	"""nameless_font"""		8089117	0					
ANR	8090106	IfStatement	if ( code < 0 )		8089117	3					
ANR	8090107	Condition	code < 0	479:20:17919:17926	8089117	0	True				
ANR	8090108	RelationalExpression	code < 0		8089117	0		<			
ANR	8090109	Identifier	code		8089117	0					
ANR	8090110	PrimaryExpression	0		8089117	1					
ANR	8090111	ReturnStatement	return code ;	480:20:17949:17960	8089117	1	True				
ANR	8090112	Identifier	code		8089117	0					
ANR	8090113	ExpressionStatement	"pl_fill_in_intelli_font ( pfont , gs_next_ids ( mem , 1 ) )"	481:16:17978:18029	8089117	4	True				
ANR	8090114	CallExpression	"pl_fill_in_intelli_font ( pfont , gs_next_ids ( mem , 1 ) )"		8089117	0					
ANR	8090115	Callee	pl_fill_in_intelli_font		8089117	0					
ANR	8090116	Identifier	pl_fill_in_intelli_font		8089117	0					
ANR	8090117	ArgumentList	pfont		8089117	1					
ANR	8090118	Argument	pfont		8089117	0					
ANR	8090119	Identifier	pfont		8089117	0					
ANR	8090120	Argument	"gs_next_ids ( mem , 1 )"		8089117	1					
ANR	8090121	CallExpression	"gs_next_ids ( mem , 1 )"		8089117	0					
ANR	8090122	Callee	gs_next_ids		8089117	0					
ANR	8090123	Identifier	gs_next_ids		8089117	0					
ANR	8090124	ArgumentList	mem		8089117	1					
ANR	8090125	Argument	mem		8089117	0					
ANR	8090126	Identifier	mem		8089117	0					
ANR	8090127	Argument	1		8089117	1					
ANR	8090128	PrimaryExpression	1		8089117	0					
ANR	8090129	CompoundStatement		224:20:8744:8836	8089117	5					
ANR	8090130	IdentifierDeclStatement	uint pitch_cp = ( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / 8782.0 ) ;	483:20:18069:18161	8089117	0	True				
ANR	8090131	IdentifierDecl	pitch_cp = ( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / 8782.0 )		8089117	0					
ANR	8090132	IdentifierDeclType	uint		8089117	0					
ANR	8090133	Identifier	pitch_cp		8089117	1					
ANR	8090134	AssignmentExpression	pitch_cp = ( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / 8782.0 )		8089117	2		=			
ANR	8090135	Identifier	pitch_cp		8089117	0					
ANR	8090136	CastExpression	( uint ) ( pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / 8782.0 )		8089117	1					
ANR	8090137	CastTarget	uint		8089117	0					
ANR	8090138	MultiplicativeExpression	pl_get_uint16 ( pfh -> Pitch ) * 1000.0 / 8782.0		8089117	1		*			
ANR	8090139	CallExpression	pl_get_uint16 ( pfh -> Pitch )		8089117	0					
ANR	8090140	Callee	pl_get_uint16		8089117	0					
ANR	8090141	Identifier	pl_get_uint16		8089117	0					
ANR	8090142	ArgumentList	pfh -> Pitch		8089117	1					
ANR	8090143	Argument	pfh -> Pitch		8089117	0					
ANR	8090144	PtrMemberAccess	pfh -> Pitch		8089117	0					
ANR	8090145	Identifier	pfh		8089117	0					
ANR	8090146	Identifier	Pitch		8089117	1					
ANR	8090147	MultiplicativeExpression	1000.0 / 8782.0		8089117	1		/			
ANR	8090148	PrimaryExpression	1000.0		8089117	0					
ANR	8090149	PrimaryExpression	8782.0		8089117	1					
ANR	8090150	ExpressionStatement	"pl_fp_set_pitch_cp ( & plfont -> params , pitch_cp )"	485:20:18183:18228	8089117	1	True				
ANR	8090151	CallExpression	"pl_fp_set_pitch_cp ( & plfont -> params , pitch_cp )"		8089117	0					
ANR	8090152	Callee	pl_fp_set_pitch_cp		8089117	0					
ANR	8090153	Identifier	pl_fp_set_pitch_cp		8089117	0					
ANR	8090154	ArgumentList	& plfont -> params		8089117	1					
ANR	8090155	Argument	& plfont -> params		8089117	0					
ANR	8090156	UnaryOperationExpression	& plfont -> params		8089117	0					
ANR	8090157	UnaryOperator	&		8089117	0					
ANR	8090158	PtrMemberAccess	plfont -> params		8089117	1					
ANR	8090159	Identifier	plfont		8089117	0					
ANR	8090160	Identifier	params		8089117	1					
ANR	8090161	Argument	pitch_cp		8089117	1					
ANR	8090162	Identifier	pitch_cp		8089117	0					
ANR	8090163	BreakStatement	break ;	487:16:18264:18269	8089117	6	True				
ANR	8090164	Label	default :	489:8:18293:18300	8089117	7	True				
ANR	8090165	Identifier	default		8089117	0					
ANR	8090166	ExpressionStatement	return_error ( gs_error_invalidfont )	490:12:18314:18348	8089117	8	True				
ANR	8090167	CallExpression	return_error ( gs_error_invalidfont )		8089117	0					
ANR	8090168	Callee	return_error		8089117	0					
ANR	8090169	Identifier	return_error		8089117	0					
ANR	8090170	ArgumentList	gs_error_invalidfont		8089117	1					
ANR	8090171	Argument	gs_error_invalidfont		8089117	0					
ANR	8090172	Identifier	gs_error_invalidfont		8089117	0					
ANR	8090173	ExpressionStatement	plfont -> params . symbol_set = pl_get_uint16 ( pfh -> SymbolSet )	493:4:18437:18494	8089117	33	True				
ANR	8090174	AssignmentExpression	plfont -> params . symbol_set = pl_get_uint16 ( pfh -> SymbolSet )		8089117	0		=			
ANR	8090175	MemberAccess	plfont -> params . symbol_set		8089117	0					
ANR	8090176	PtrMemberAccess	plfont -> params		8089117	0					
ANR	8090177	Identifier	plfont		8089117	0					
ANR	8090178	Identifier	params		8089117	1					
ANR	8090179	Identifier	symbol_set		8089117	1					
ANR	8090180	CallExpression	pl_get_uint16 ( pfh -> SymbolSet )		8089117	1					
ANR	8090181	Callee	pl_get_uint16		8089117	0					
ANR	8090182	Identifier	pl_get_uint16		8089117	0					
ANR	8090183	ArgumentList	pfh -> SymbolSet		8089117	1					
ANR	8090184	Argument	pfh -> SymbolSet		8089117	0					
ANR	8090185	PtrMemberAccess	pfh -> SymbolSet		8089117	0					
ANR	8090186	Identifier	pfh		8089117	0					
ANR	8090187	Identifier	SymbolSet		8089117	1					
ANR	8090188	IfStatement	if ( pfh -> Spacing > 1 )		8089117	34					
ANR	8090189	Condition	pfh -> Spacing > 1	494:8:18504:18519	8089117	0	True				
ANR	8090190	RelationalExpression	pfh -> Spacing > 1		8089117	0		>			
ANR	8090191	PtrMemberAccess	pfh -> Spacing		8089117	0					
ANR	8090192	Identifier	pfh		8089117	0					
ANR	8090193	Identifier	Spacing		8089117	1					
ANR	8090194	PrimaryExpression	1		8089117	1					
ANR	8090195	ExpressionStatement	return_error ( e_Range )	495:8:18530:18551	8089117	1	True				
ANR	8090196	CallExpression	return_error ( e_Range )		8089117	0					
ANR	8090197	Callee	return_error		8089117	0					
ANR	8090198	Identifier	return_error		8089117	0					
ANR	8090199	ArgumentList	e_Range		8089117	1					
ANR	8090200	Argument	e_Range		8089117	0					
ANR	8090201	Identifier	e_Range		8089117	0					
ANR	8090202	ExpressionStatement	plfont -> params . proportional_spacing = pfh -> Spacing	496:4:18557:18607	8089117	35	True				
ANR	8090203	AssignmentExpression	plfont -> params . proportional_spacing = pfh -> Spacing		8089117	0		=			
ANR	8090204	MemberAccess	plfont -> params . proportional_spacing		8089117	0					
ANR	8090205	PtrMemberAccess	plfont -> params		8089117	0					
ANR	8090206	Identifier	plfont		8089117	0					
ANR	8090207	Identifier	params		8089117	1					
ANR	8090208	Identifier	proportional_spacing		8089117	1					
ANR	8090209	PtrMemberAccess	pfh -> Spacing		8089117	1					
ANR	8090210	Identifier	pfh		8089117	0					
ANR	8090211	Identifier	Spacing		8089117	1					
ANR	8090212	ExpressionStatement	plfont -> params . style = ( pfh -> StyleMSB << 8 ) + pfh -> StyleLSB	497:4:18613:18672	8089117	36	True				
ANR	8090213	AssignmentExpression	plfont -> params . style = ( pfh -> StyleMSB << 8 ) + pfh -> StyleLSB		8089117	0		=			
ANR	8090214	MemberAccess	plfont -> params . style		8089117	0					
ANR	8090215	PtrMemberAccess	plfont -> params		8089117	0					
ANR	8090216	Identifier	plfont		8089117	0					
ANR	8090217	Identifier	params		8089117	1					
ANR	8090218	Identifier	style		8089117	1					
ANR	8090219	AdditiveExpression	( pfh -> StyleMSB << 8 ) + pfh -> StyleLSB		8089117	1		+			
ANR	8090220	ShiftExpression	pfh -> StyleMSB << 8		8089117	0		<<			
ANR	8090221	PtrMemberAccess	pfh -> StyleMSB		8089117	0					
ANR	8090222	Identifier	pfh		8089117	0					
ANR	8090223	Identifier	StyleMSB		8089117	1					
ANR	8090224	PrimaryExpression	8		8089117	1					
ANR	8090225	PtrMemberAccess	pfh -> StyleLSB		8089117	1					
ANR	8090226	Identifier	pfh		8089117	0					
ANR	8090227	Identifier	StyleLSB		8089117	1					
ANR	8090228	ExpressionStatement	plfont -> params . stroke_weight = ( int ) ( pfh -> StrokeWeight ^ 0x80 ) - 0x80	498:4:18678:18778	8089117	37	True				
ANR	8090229	AssignmentExpression	plfont -> params . stroke_weight = ( int ) ( pfh -> StrokeWeight ^ 0x80 ) - 0x80		8089117	0		=			
ANR	8090230	MemberAccess	plfont -> params . stroke_weight		8089117	0					
ANR	8090231	PtrMemberAccess	plfont -> params		8089117	0					
ANR	8090232	Identifier	plfont		8089117	0					
ANR	8090233	Identifier	params		8089117	1					
ANR	8090234	Identifier	stroke_weight		8089117	1					
ANR	8090235	AdditiveExpression	( int ) ( pfh -> StrokeWeight ^ 0x80 ) - 0x80		8089117	1		-			
ANR	8090236	CastExpression	( int ) ( pfh -> StrokeWeight ^ 0x80 )		8089117	0					
ANR	8090237	CastTarget	int		8089117	0					
ANR	8090238	ExclusiveOrExpression	pfh -> StrokeWeight ^ 0x80		8089117	1		^			
ANR	8090239	PtrMemberAccess	pfh -> StrokeWeight		8089117	0					
ANR	8090240	Identifier	pfh		8089117	0					
ANR	8090241	Identifier	StrokeWeight		8089117	1					
ANR	8090242	PrimaryExpression	0x80		8089117	1					
ANR	8090243	PrimaryExpression	0x80		8089117	1					
ANR	8090244	ExpressionStatement	plfont -> params . typeface_family = ( pfh -> TypefaceMSB << 8 ) + pfh -> TypefaceLSB	500:4:18784:18867	8089117	38	True				
ANR	8090245	AssignmentExpression	plfont -> params . typeface_family = ( pfh -> TypefaceMSB << 8 ) + pfh -> TypefaceLSB		8089117	0		=			
ANR	8090246	MemberAccess	plfont -> params . typeface_family		8089117	0					
ANR	8090247	PtrMemberAccess	plfont -> params		8089117	0					
ANR	8090248	Identifier	plfont		8089117	0					
ANR	8090249	Identifier	params		8089117	1					
ANR	8090250	Identifier	typeface_family		8089117	1					
ANR	8090251	AdditiveExpression	( pfh -> TypefaceMSB << 8 ) + pfh -> TypefaceLSB		8089117	1		+			
ANR	8090252	ShiftExpression	pfh -> TypefaceMSB << 8		8089117	0		<<			
ANR	8090253	PtrMemberAccess	pfh -> TypefaceMSB		8089117	0					
ANR	8090254	Identifier	pfh		8089117	0					
ANR	8090255	Identifier	TypefaceMSB		8089117	1					
ANR	8090256	PrimaryExpression	8		8089117	1					
ANR	8090257	PtrMemberAccess	pfh -> TypefaceLSB		8089117	1					
ANR	8090258	Identifier	pfh		8089117	0					
ANR	8090259	Identifier	TypefaceLSB		8089117	1					
ANR	8090260	ExpressionStatement	plfont -> params . pjl_font_number = pcs -> pjl_dlfont_number ++	502:4:18873:18930	8089117	39	True				
ANR	8090261	AssignmentExpression	plfont -> params . pjl_font_number = pcs -> pjl_dlfont_number ++		8089117	0		=			
ANR	8090262	MemberAccess	plfont -> params . pjl_font_number		8089117	0					
ANR	8090263	PtrMemberAccess	plfont -> params		8089117	0					
ANR	8090264	Identifier	plfont		8089117	0					
ANR	8090265	Identifier	params		8089117	1					
ANR	8090266	Identifier	pjl_font_number		8089117	1					
ANR	8090267	PostIncDecOperationExpression	pcs -> pjl_dlfont_number ++		8089117	1					
ANR	8090268	PtrMemberAccess	pcs -> pjl_dlfont_number		8089117	0					
ANR	8090269	Identifier	pcs		8089117	0					
ANR	8090270	Identifier	pjl_dlfont_number		8089117	1					
ANR	8090271	IncDec	++		8089117	1					
ANR	8090272	ExpressionStatement	"code = pl_dict_put ( & pcs -> soft_fonts , current_font_id , current_font_id_size , plfont )"	504:4:18941:19040	8089117	40	True				
ANR	8090273	AssignmentExpression	"code = pl_dict_put ( & pcs -> soft_fonts , current_font_id , current_font_id_size , plfont )"		8089117	0		=			
ANR	8090274	Identifier	code		8089117	0					
ANR	8090275	CallExpression	"pl_dict_put ( & pcs -> soft_fonts , current_font_id , current_font_id_size , plfont )"		8089117	1					
ANR	8090276	Callee	pl_dict_put		8089117	0					
ANR	8090277	Identifier	pl_dict_put		8089117	0					
ANR	8090278	ArgumentList	& pcs -> soft_fonts		8089117	1					
ANR	8090279	Argument	& pcs -> soft_fonts		8089117	0					
ANR	8090280	UnaryOperationExpression	& pcs -> soft_fonts		8089117	0					
ANR	8090281	UnaryOperator	&		8089117	0					
ANR	8090282	PtrMemberAccess	pcs -> soft_fonts		8089117	1					
ANR	8090283	Identifier	pcs		8089117	0					
ANR	8090284	Identifier	soft_fonts		8089117	1					
ANR	8090285	Argument	current_font_id		8089117	1					
ANR	8090286	Identifier	current_font_id		8089117	0					
ANR	8090287	Argument	current_font_id_size		8089117	2					
ANR	8090288	Identifier	current_font_id_size		8089117	0					
ANR	8090289	Argument	plfont		8089117	3					
ANR	8090290	Identifier	plfont		8089117	0					
ANR	8090291	IfStatement	if ( code < 0 )		8089117	41					
ANR	8090292	Condition	code < 0	506:8:19050:19057	8089117	0	True				
ANR	8090293	RelationalExpression	code < 0		8089117	0		<			
ANR	8090294	Identifier	code		8089117	0					
ANR	8090295	PrimaryExpression	0		8089117	1					
ANR	8090296	ReturnStatement	return code ;	507:8:19068:19079	8089117	1	True				
ANR	8090297	Identifier	code		8089117	0					
ANR	8090298	ExpressionStatement	plfont -> pfont -> procs . define_font = gs_no_define_font	508:4:19085:19137	8089117	42	True				
ANR	8090299	AssignmentExpression	plfont -> pfont -> procs . define_font = gs_no_define_font		8089117	0		=			
ANR	8090300	MemberAccess	plfont -> pfont -> procs . define_font		8089117	0					
ANR	8090301	PtrMemberAccess	plfont -> pfont -> procs		8089117	0					
ANR	8090302	PtrMemberAccess	plfont -> pfont		8089117	0					
ANR	8090303	Identifier	plfont		8089117	0					
ANR	8090304	Identifier	pfont		8089117	1					
ANR	8090305	Identifier	procs		8089117	1					
ANR	8090306	Identifier	define_font		8089117	1					
ANR	8090307	Identifier	gs_no_define_font		8089117	1					
ANR	8090308	IfStatement	"if ( ( code = gs_definefont ( pcs -> font_dir , plfont -> pfont ) ) != 0 )"		8089117	43					
ANR	8090309	Condition	"( code = gs_definefont ( pcs -> font_dir , plfont -> pfont ) ) != 0"	510:8:19148:19204	8089117	0	True				
ANR	8090310	EqualityExpression	"( code = gs_definefont ( pcs -> font_dir , plfont -> pfont ) ) != 0"		8089117	0		!=			
ANR	8090311	AssignmentExpression	"code = gs_definefont ( pcs -> font_dir , plfont -> pfont )"		8089117	0		=			
ANR	8090312	Identifier	code		8089117	0					
ANR	8090313	CallExpression	"gs_definefont ( pcs -> font_dir , plfont -> pfont )"		8089117	1					
ANR	8090314	Callee	gs_definefont		8089117	0					
ANR	8090315	Identifier	gs_definefont		8089117	0					
ANR	8090316	ArgumentList	pcs -> font_dir		8089117	1					
ANR	8090317	Argument	pcs -> font_dir		8089117	0					
ANR	8090318	PtrMemberAccess	pcs -> font_dir		8089117	0					
ANR	8090319	Identifier	pcs		8089117	0					
ANR	8090320	Identifier	font_dir		8089117	1					
ANR	8090321	Argument	plfont -> pfont		8089117	1					
ANR	8090322	PtrMemberAccess	plfont -> pfont		8089117	0					
ANR	8090323	Identifier	plfont		8089117	0					
ANR	8090324	Identifier	pfont		8089117	1					
ANR	8090325	PrimaryExpression	0		8089117	1					
ANR	8090326	CompoundStatement		251:67:9882:9882	8089117	1					
ANR	8090327	ReturnStatement	return ( code ) ;	511:8:19217:19230	8089117	0	True				
ANR	8090328	Identifier	code		8089117	0					
ANR	8090329	IfStatement	if ( plfont -> scaling_technology == plfst_TrueType )		8089117	44					
ANR	8090330	Condition	plfont -> scaling_technology == plfst_TrueType	514:8:19247:19290	8089117	0	True				
ANR	8090331	EqualityExpression	plfont -> scaling_technology == plfst_TrueType		8089117	0		==			
ANR	8090332	PtrMemberAccess	plfont -> scaling_technology		8089117	0					
ANR	8090333	Identifier	plfont		8089117	0					
ANR	8090334	Identifier	scaling_technology		8089117	1					
ANR	8090335	Identifier	plfst_TrueType		8089117	1					
ANR	8090336	ExpressionStatement	"code = pl_fapi_passfont ( plfont , 0 , NULL , NULL , NULL , 0 )"	515:8:19301:19356	8089117	1	True				
ANR	8090337	AssignmentExpression	"code = pl_fapi_passfont ( plfont , 0 , NULL , NULL , NULL , 0 )"		8089117	0		=			
ANR	8090338	Identifier	code		8089117	0					
ANR	8090339	CallExpression	"pl_fapi_passfont ( plfont , 0 , NULL , NULL , NULL , 0 )"		8089117	1					
ANR	8090340	Callee	pl_fapi_passfont		8089117	0					
ANR	8090341	Identifier	pl_fapi_passfont		8089117	0					
ANR	8090342	ArgumentList	plfont		8089117	1					
ANR	8090343	Argument	plfont		8089117	0					
ANR	8090344	Identifier	plfont		8089117	0					
ANR	8090345	Argument	0		8089117	1					
ANR	8090346	PrimaryExpression	0		8089117	0					
ANR	8090347	Argument	NULL		8089117	2					
ANR	8090348	Identifier	NULL		8089117	0					
ANR	8090349	Argument	NULL		8089117	3					
ANR	8090350	Identifier	NULL		8089117	0					
ANR	8090351	Argument	NULL		8089117	4					
ANR	8090352	Identifier	NULL		8089117	0					
ANR	8090353	Argument	0		8089117	5					
ANR	8090354	PrimaryExpression	0		8089117	0					
ANR	8090355	ReturnStatement	return ( code ) ;	517:4:19363:19376	8089117	45	True				
ANR	8090356	Identifier	code		8089117	0					
ANR	8090357	ReturnType	static int		8089117	1					
ANR	8090358	Identifier	pcl_font_header		8089117	2					
ANR	8090359	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8089117	3					
ANR	8090360	Parameter	pcl_args_t * pargs	259:16:9285:9302	8089117	0	True				
ANR	8090361	ParameterType	pcl_args_t *		8089117	0					
ANR	8090362	Identifier	pargs		8089117	1					
ANR	8090363	Parameter	pcl_state_t * pcs	259:36:9305:9321	8089117	1	True				
ANR	8090364	ParameterType	pcl_state_t *		8089117	0					
ANR	8090365	Identifier	pcs		8089117	1					
ANR	8090366	CFGEntryNode	ENTRY		8089117		True				
ANR	8090367	CFGExitNode	EXIT		8089117		True				
ANR	8090368	Symbol	* * pfh		8089117						
ANR	8090369	Symbol	plfont -> header		8089117						
ANR	8090370	Symbol	plfont		8089117						
ANR	8090371	Symbol	plfont -> data_are_permanent		8089117						
ANR	8090372	Symbol	gs_next_ids		8089117						
ANR	8090373	Symbol	pfh -> Height		8089117						
ANR	8090374	Symbol	gs_definefont		8089117						
ANR	8090375	Symbol	pargs		8089117						
ANR	8090376	Symbol	& pcs -> soft_fonts		8089117						
ANR	8090377	Symbol	pfh -> FontType		8089117						
ANR	8090378	Symbol	pcs -> memory		8089117						
ANR	8090379	Symbol	pfont -> data . unitsPerEm		8089117						
ANR	8090380	Symbol	plfont -> font_type		8089117						
ANR	8090381	Symbol	* pfhx		8089117						
ANR	8090382	Symbol	plfont -> params . proportional_spacing		8089117						
ANR	8090383	Symbol	* pfh -> FontDescriptorSize		8089117						
ANR	8090384	Symbol	current_font_id_size		8089117						
ANR	8090385	Symbol	plfont -> storage		8089117						
ANR	8090386	Symbol	plfont -> params . stroke_weight		8089117						
ANR	8090387	Symbol	plfont -> character_complement		8089117						
ANR	8090388	Symbol	pfh -> FontDescriptorSize		8089117						
ANR	8090389	Symbol	pfh		8089117						
ANR	8090390	Symbol	current_font_id		8089117						
ANR	8090391	Symbol	plfont -> resolution . x		8089117						
ANR	8090392	Symbol	plfont -> resolution . y		8089117						
ANR	8090393	Symbol	plfst_Intellifont		8089117						
ANR	8090394	Symbol	pl_alloc_font		8089117						
ANR	8090395	Symbol	pcfh_truetype_large		8089117						
ANR	8090396	Symbol	pfh -> StrokeWeight		8089117						
ANR	8090397	Symbol	fst		8089117						
ANR	8090398	Symbol	pfh -> LastCode		8089117						
ANR	8090399	Symbol	sum		8089117						
ANR	8090400	Symbol	pitch_cp		8089117						
ANR	8090401	Symbol	pfh -> StyleLSB		8089117						
ANR	8090402	Symbol	pfh -> HeaderFormat		8089117						
ANR	8090403	Symbol	pl_fill_in_tt_font		8089117						
ANR	8090404	Symbol	pcfh_intellifont_bound		8089117						
ANR	8090405	Symbol	e_Memory		8089117						
ANR	8090406	Symbol	plfont -> font_file		8089117						
ANR	8090407	Symbol	* pfh		8089117						
ANR	8090408	Symbol	gs_error_invalidfont		8089117						
ANR	8090409	Symbol	pl_font_alloc_glyph_table		8089117						
ANR	8090410	Symbol	e_Range		8089117						
ANR	8090411	Symbol	& plfont -> params		8089117						
ANR	8090412	Symbol	height_quarter_dots		8089117						
ANR	8090413	Symbol	pcfh_bitmap		8089117						
ANR	8090414	Symbol	i		8089117						
ANR	8090415	Symbol	pfont -> data		8089117						
ANR	8090416	Symbol	pl_fill_in_font		8089117						
ANR	8090417	Symbol	uint_arg		8089117						
ANR	8090418	Symbol	pcds_temporary		8089117						
ANR	8090419	Symbol	pfhx -> XResolution		8089117						
ANR	8090420	Symbol	& st_gs_font_type42		8089117						
ANR	8090421	Symbol	plfont -> params . pjl_font_number		8089117						
ANR	8090422	Symbol	* data		8089117						
ANR	8090423	Symbol	gs_no_define_font		8089117						
ANR	8090424	Symbol	pl_fapi_passfont		8089117						
ANR	8090425	Symbol	plfont -> scaling_technology		8089117						
ANR	8090426	Symbol	plfont -> params . height_4ths		8089117						
ANR	8090427	Symbol	data		8089117						
ANR	8090428	Symbol	* plfont -> pfont		8089117						
ANR	8090429	Symbol	* pcs		8089117						
ANR	8090430	Symbol	pfh -> StyleMSB		8089117						
ANR	8090431	Symbol	gs_font_base		8089117						
ANR	8090432	Symbol	pfh -> Spacing		8089117						
ANR	8090433	Symbol	pfhx -> YResolution		8089117						
ANR	8090434	Symbol	pfh -> TypefaceMSB		8089117						
ANR	8090435	Symbol	pcs -> pjl_dlfont_number		8089117						
ANR	8090436	Symbol	has_checksum		8089117						
ANR	8090437	Symbol	gs_debug_c		8089117						
ANR	8090438	Symbol	& st_gs_font_base		8089117						
ANR	8090439	Symbol	NULL		8089117						
ANR	8090440	Symbol	plfont -> header_size		8089117						
ANR	8090441	Symbol	* * plfont		8089117						
ANR	8090442	Symbol	count		8089117						
ANR	8090443	Symbol	plfont -> is_xl_format		8089117						
ANR	8090444	Symbol	& errors		8089117						
ANR	8090445	Symbol	pitch_1024th_dots		8089117						
ANR	8090446	Symbol	desc_size		8089117						
ANR	8090447	Symbol	pfhx		8089117						
ANR	8090448	Symbol	plfont -> params . style		8089117						
ANR	8090449	Symbol	pl_tt_alloc_char_glyphs		8089117						
ANR	8090450	Symbol	true		8089117						
ANR	8090451	Symbol	header		8089117						
ANR	8090452	Symbol	plfst_TrueType		8089117						
ANR	8090453	Symbol	pfh -> SymbolSet		8089117						
ANR	8090454	Symbol	pl_dict_put		8089117						
ANR	8090455	Symbol	errors		8089117						
ANR	8090456	Symbol	pcs -> font_dir		8089117						
ANR	8090457	Symbol	code		8089117						
ANR	8090458	Symbol	plfont -> pfont -> procs . define_font		8089117						
ANR	8090459	Symbol	plfst_bitmap		8089117						
ANR	8090460	Symbol	gs_alloc_struct		8089117						
ANR	8090461	Symbol	pfh -> TypefaceLSB		8089117						
ANR	8090462	Symbol	pcl_delete_soft_font		8089117						
ANR	8090463	Symbol	mem		8089117						
ANR	8090464	Symbol	plfont -> pfont -> procs		8089117						
ANR	8090465	Symbol	pfh -> Pitch		8089117						
ANR	8090466	Symbol	plfont -> params . typeface_family		8089117						
ANR	8090467	Symbol	floor		8089117						
ANR	8090468	Symbol	pfh -> PitchExtended		8089117						
ANR	8090469	Symbol	pcs		8089117						
ANR	8090470	Symbol	pcfh_resolution_bitmap		8089117						
ANR	8090471	Symbol	pl_font_scan_segments		8089117						
ANR	8090472	Symbol	gs_alloc_bytes		8089117						
ANR	8090473	Symbol	pl_get_uint16		8089117						
ANR	8090474	Symbol	plfont -> params . symbol_set		8089117						
ANR	8090475	Symbol	pfont		8089117						
ANR	8090476	Symbol	false		8089117						
ANR	8090477	Symbol	plfont -> resolution		8089117						
ANR	8090478	Symbol	* pfont		8089117						
ANR	8090479	Symbol	* i		8089117						
ANR	8090480	Symbol	plfont -> pfont		8089117						
ANR	8090481	Symbol	arg_data		8089117						
ANR	8090482	Symbol	plfont -> params		8089117						
ANR	8090483	Symbol	* plfont		8089117						
ANR	8090484	Symbol	num_chars		8089117						
ANR	8090485	Symbol	gs_font_type42		8089117						
ANR	8090486	Function	pcl_character_code	520:0:19381:19558							
ANR	8090487	FunctionDef	"pcl_character_code (pcl_args_t * pargs , pcl_state_t * pcs)"		8090486	0					
ANR	8090488	CompoundStatement		522:0:19499:19558	8090486	0					
ANR	8090489	ExpressionStatement	pcs -> character_code = uint_arg ( pargs )	523:4:19505:19542	8090486	0	True				
ANR	8090490	AssignmentExpression	pcs -> character_code = uint_arg ( pargs )		8090486	0		=			
ANR	8090491	PtrMemberAccess	pcs -> character_code		8090486	0					
ANR	8090492	Identifier	pcs		8090486	0					
ANR	8090493	Identifier	character_code		8090486	1					
ANR	8090494	CallExpression	uint_arg ( pargs )		8090486	1					
ANR	8090495	Callee	uint_arg		8090486	0					
ANR	8090496	Identifier	uint_arg		8090486	0					
ANR	8090497	ArgumentList	pargs		8090486	1					
ANR	8090498	Argument	pargs		8090486	0					
ANR	8090499	Identifier	pargs		8090486	0					
ANR	8090500	ReturnStatement	return 0 ;	524:4:19548:19556	8090486	1	True				
ANR	8090501	PrimaryExpression	0		8090486	0					
ANR	8090502	ReturnType	static int		8090486	1					
ANR	8090503	Identifier	pcl_character_code		8090486	2					
ANR	8090504	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8090486	3					
ANR	8090505	Parameter	pcl_args_t * pargs	521:19:19460:19477	8090486	0	True				
ANR	8090506	ParameterType	pcl_args_t *		8090486	0					
ANR	8090507	Identifier	pargs		8090486	1					
ANR	8090508	Parameter	pcl_state_t * pcs	521:39:19480:19496	8090486	1	True				
ANR	8090509	ParameterType	pcl_state_t *		8090486	0					
ANR	8090510	Identifier	pcs		8090486	1					
ANR	8090511	CFGEntryNode	ENTRY		8090486		True				
ANR	8090512	CFGExitNode	EXIT		8090486		True				
ANR	8090513	Symbol	pcs		8090486						
ANR	8090514	Symbol	pargs		8090486						
ANR	8090515	Symbol	pcs -> character_code		8090486						
ANR	8090516	Symbol	* pcs		8090486						
ANR	8090517	Symbol	uint_arg		8090486						
ANR	8090518	Function	pcl_character_data	527:0:19561:29058							
ANR	8090519	FunctionDef	"pcl_character_data (pcl_args_t * pargs , pcl_state_t * pcs)"		8090518	0					
ANR	8090520	CompoundStatement		529:0:19675:29058	8090518	0					
ANR	8090521	IdentifierDeclStatement	uint count = uint_arg ( pargs ) ;	530:4:19681:19709	8090518	0	True				
ANR	8090522	IdentifierDecl	count = uint_arg ( pargs )		8090518	0					
ANR	8090523	IdentifierDeclType	uint		8090518	0					
ANR	8090524	Identifier	count		8090518	1					
ANR	8090525	AssignmentExpression	count = uint_arg ( pargs )		8090518	2		=			
ANR	8090526	Identifier	count		8090518	0					
ANR	8090527	CallExpression	uint_arg ( pargs )		8090518	1					
ANR	8090528	Callee	uint_arg		8090518	0					
ANR	8090529	Identifier	uint_arg		8090518	0					
ANR	8090530	ArgumentList	pargs		8090518	1					
ANR	8090531	Argument	pargs		8090518	0					
ANR	8090532	Identifier	pargs		8090518	0					
ANR	8090533	IdentifierDeclStatement	uint font_data_size = count ;	531:4:19715:19742	8090518	1	True				
ANR	8090534	IdentifierDecl	font_data_size = count		8090518	0					
ANR	8090535	IdentifierDeclType	uint		8090518	0					
ANR	8090536	Identifier	font_data_size		8090518	1					
ANR	8090537	AssignmentExpression	font_data_size = count		8090518	2		=			
ANR	8090538	Identifier	count		8090518	0					
ANR	8090539	Identifier	count		8090518	1					
ANR	8090540	IdentifierDeclStatement	const byte * data = arg_data ( pargs ) ;	532:4:19748:19782	8090518	2	True				
ANR	8090541	IdentifierDecl	* data = arg_data ( pargs )		8090518	0					
ANR	8090542	IdentifierDeclType	const byte *		8090518	0					
ANR	8090543	Identifier	data		8090518	1					
ANR	8090544	AssignmentExpression	* data = arg_data ( pargs )		8090518	2		=			
ANR	8090545	Identifier	data		8090518	0					
ANR	8090546	CallExpression	arg_data ( pargs )		8090518	1					
ANR	8090547	Callee	arg_data		8090518	0					
ANR	8090548	Identifier	arg_data		8090518	0					
ANR	8090549	ArgumentList	pargs		8090518	1					
ANR	8090550	Argument	pargs		8090518	0					
ANR	8090551	Identifier	pargs		8090518	0					
ANR	8090552	IdentifierDeclStatement	void * value ;	533:4:19788:19799	8090518	3	True				
ANR	8090553	IdentifierDecl	* value		8090518	0					
ANR	8090554	IdentifierDeclType	void *		8090518	0					
ANR	8090555	Identifier	value		8090518	1					
ANR	8090556	IdentifierDeclStatement	pl_font_t * plfont ;	534:4:19805:19822	8090518	4	True				
ANR	8090557	IdentifierDecl	* plfont		8090518	0					
ANR	8090558	IdentifierDeclType	pl_font_t *		8090518	0					
ANR	8090559	Identifier	plfont		8090518	1					
ANR	8090560	IdentifierDeclStatement	pcl_font_header_format_t format ;	535:4:19828:19859	8090518	5	True				
ANR	8090561	IdentifierDecl	format		8090518	0					
ANR	8090562	IdentifierDeclType	pcl_font_header_format_t		8090518	0					
ANR	8090563	Identifier	format		8090518	1					
ANR	8090564	IdentifierDeclStatement	byte * char_data = 0 ;	536:4:19865:19884	8090518	6	True				
ANR	8090565	IdentifierDecl	* char_data = 0		8090518	0					
ANR	8090566	IdentifierDeclType	byte *		8090518	0					
ANR	8090567	Identifier	char_data		8090518	1					
ANR	8090568	AssignmentExpression	* char_data = 0		8090518	2		=			
ANR	8090569	Identifier	char_data		8090518	0					
ANR	8090570	PrimaryExpression	0		8090518	1					
ANR	8090571	IdentifierDeclStatement	int code ;	537:4:19890:19898	8090518	7	True				
ANR	8090572	IdentifierDecl	code		8090518	0					
ANR	8090573	IdentifierDeclType	int		8090518	0					
ANR	8090574	Identifier	code		8090518	1					
ANR	8090575	IfStatement	if ( gs_debug_c ( 'i' ) )		8090518	8					
ANR	8090576	Condition	gs_debug_c ( 'i' )	540:8:19922:19936	8090518	0	True				
ANR	8090577	CallExpression	gs_debug_c ( 'i' )		8090518	0					
ANR	8090578	Callee	gs_debug_c		8090518	0					
ANR	8090579	Identifier	gs_debug_c		8090518	0					
ANR	8090580	ArgumentList	'i'		8090518	1					
ANR	8090581	Argument	'i'		8090518	0					
ANR	8090582	PrimaryExpression	'i'		8090518	0					
ANR	8090583	CompoundStatement		12:25:263:263	8090518	1					
ANR	8090584	ExpressionStatement	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"	541:8:19949:20015	8090518	0	True				
ANR	8090585	CallExpression	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"		8090518	0					
ANR	8090586	Callee	pcl_debug_dump_data		8090518	0					
ANR	8090587	Identifier	pcl_debug_dump_data		8090518	0					
ANR	8090588	ArgumentList	pcs -> memory		8090518	1					
ANR	8090589	Argument	pcs -> memory		8090518	0					
ANR	8090590	PtrMemberAccess	pcs -> memory		8090518	0					
ANR	8090591	Identifier	pcs		8090518	0					
ANR	8090592	Identifier	memory		8090518	1					
ANR	8090593	Argument	arg_data ( pargs )		8090518	1					
ANR	8090594	CallExpression	arg_data ( pargs )		8090518	0					
ANR	8090595	Callee	arg_data		8090518	0					
ANR	8090596	Identifier	arg_data		8090518	0					
ANR	8090597	ArgumentList	pargs		8090518	1					
ANR	8090598	Argument	pargs		8090518	0					
ANR	8090599	Identifier	pargs		8090518	0					
ANR	8090600	Argument	uint_arg ( pargs )		8090518	2					
ANR	8090601	CallExpression	uint_arg ( pargs )		8090518	0					
ANR	8090602	Callee	uint_arg		8090518	0					
ANR	8090603	Identifier	uint_arg		8090518	0					
ANR	8090604	ArgumentList	pargs		8090518	1					
ANR	8090605	Argument	pargs		8090518	0					
ANR	8090606	Identifier	pargs		8090518	0					
ANR	8090607	IfStatement	"if ( ! pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value ) )"		8090518	9					
ANR	8090608	Condition	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"	545:8:20039:20156	8090518	0	True				
ANR	8090609	UnaryOperationExpression	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"		8090518	0					
ANR	8090610	UnaryOperator	!		8090518	0					
ANR	8090611	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , current_font_id , current_font_id_size , & value )"		8090518	1					
ANR	8090612	Callee	pl_dict_find_no_stack		8090518	0					
ANR	8090613	Identifier	pl_dict_find_no_stack		8090518	0					
ANR	8090614	ArgumentList	& pcs -> soft_fonts		8090518	1					
ANR	8090615	Argument	& pcs -> soft_fonts		8090518	0					
ANR	8090616	UnaryOperationExpression	& pcs -> soft_fonts		8090518	0					
ANR	8090617	UnaryOperator	&		8090518	0					
ANR	8090618	PtrMemberAccess	pcs -> soft_fonts		8090518	1					
ANR	8090619	Identifier	pcs		8090518	0					
ANR	8090620	Identifier	soft_fonts		8090518	1					
ANR	8090621	Argument	current_font_id		8090518	1					
ANR	8090622	Identifier	current_font_id		8090518	0					
ANR	8090623	Argument	current_font_id_size		8090518	2					
ANR	8090624	Identifier	current_font_id_size		8090518	0					
ANR	8090625	Argument	& value		8090518	3					
ANR	8090626	UnaryOperationExpression	& value		8090518	0					
ANR	8090627	UnaryOperator	&		8090518	0					
ANR	8090628	Identifier	value		8090518	1					
ANR	8090629	ReturnStatement	return 0 ;	547:8:20167:20175	8090518	1	True				
ANR	8090630	PrimaryExpression	0		8090518	0					
ANR	8090631	ExpressionStatement	plfont = ( ( pl_font_t * ) value )	549:4:20217:20247	8090518	10	True				
ANR	8090632	AssignmentExpression	plfont = ( ( pl_font_t * ) value )		8090518	0		=			
ANR	8090633	Identifier	plfont		8090518	0					
ANR	8090634	CastExpression	( pl_font_t * ) value		8090518	1					
ANR	8090635	CastTarget	pl_font_t *		8090518	0					
ANR	8090636	Identifier	value		8090518	1					
ANR	8090637	IfStatement	if ( count < 4 || data [ 2 ] > count - 2 )		8090518	11					
ANR	8090638	Condition	count < 4 || data [ 2 ] > count - 2	551:8:20258:20289	8090518	0	True				
ANR	8090639	OrExpression	count < 4 || data [ 2 ] > count - 2		8090518	0		||			
ANR	8090640	RelationalExpression	count < 4		8090518	0		<			
ANR	8090641	Identifier	count		8090518	0					
ANR	8090642	PrimaryExpression	4		8090518	1					
ANR	8090643	RelationalExpression	data [ 2 ] > count - 2		8090518	1		>			
ANR	8090644	ArrayIndexing	data [ 2 ]		8090518	0					
ANR	8090645	Identifier	data		8090518	0					
ANR	8090646	PrimaryExpression	2		8090518	1					
ANR	8090647	AdditiveExpression	count - 2		8090518	1		-			
ANR	8090648	Identifier	count		8090518	0					
ANR	8090649	PrimaryExpression	2		8090518	1					
ANR	8090650	ReturnStatement	return e_Range ;	552:8:20300:20314	8090518	1	True				
ANR	8090651	Identifier	e_Range		8090518	0					
ANR	8090652	IfStatement	if ( data [ 1 ] )		8090518	12					
ANR	8090653	Condition	data [ 1 ]	553:8:20324:20330	8090518	0	True				
ANR	8090654	ArrayIndexing	data [ 1 ]		8090518	0					
ANR	8090655	Identifier	data		8090518	0					
ANR	8090656	PrimaryExpression	1		8090518	1					
ANR	8090657	CompoundStatement		25:17:657:657	8090518	1					
ANR	8090658	IfStatement	if ( ( pcs -> soft_font_char_data == 0 ) )		8090518	0					
ANR	8090659	Condition	pcs -> soft_font_char_data == 0	558:12:20612:20642	8090518	0	True				
ANR	8090660	EqualityExpression	pcs -> soft_font_char_data == 0		8090518	0		==			
ANR	8090661	PtrMemberAccess	pcs -> soft_font_char_data		8090518	0					
ANR	8090662	Identifier	pcs		8090518	0					
ANR	8090663	Identifier	soft_font_char_data		8090518	1					
ANR	8090664	PrimaryExpression	0		8090518	1					
ANR	8090665	ReturnStatement	return e_Range ;	559:12:20657:20671	8090518	1	True				
ANR	8090666	Identifier	e_Range		8090518	0					
ANR	8090667	IfStatement	if ( data [ 0 ] != pccd_bitmap && data [ 3 ] != 1 )		8090518	1					
ANR	8090668	Condition	data [ 0 ] != pccd_bitmap && data [ 3 ] != 1	563:12:20862:20899	8090518	0	True				
ANR	8090669	AndExpression	data [ 0 ] != pccd_bitmap && data [ 3 ] != 1		8090518	0		&&			
ANR	8090670	EqualityExpression	data [ 0 ] != pccd_bitmap		8090518	0		!=			
ANR	8090671	ArrayIndexing	data [ 0 ]		8090518	0					
ANR	8090672	Identifier	data		8090518	0					
ANR	8090673	PrimaryExpression	0		8090518	1					
ANR	8090674	Identifier	pccd_bitmap		8090518	1					
ANR	8090675	EqualityExpression	data [ 3 ] != 1		8090518	1		!=			
ANR	8090676	ArrayIndexing	data [ 3 ]		8090518	0					
ANR	8090677	Identifier	data		8090518	0					
ANR	8090678	PrimaryExpression	3		8090518	1					
ANR	8090679	PrimaryExpression	1		8090518	1					
ANR	8090680	CompoundStatement		35:52:1226:1226	8090518	1					
ANR	8090681	ExpressionStatement	"dmprintf ( pcs -> memory , ""continuation not implemented for this font type\\n"" )"	564:12:20916:21011	8090518	0	True				
ANR	8090682	CallExpression	"dmprintf ( pcs -> memory , ""continuation not implemented for this font type\\n"" )"		8090518	0					
ANR	8090683	Callee	dmprintf		8090518	0					
ANR	8090684	Identifier	dmprintf		8090518	0					
ANR	8090685	ArgumentList	pcs -> memory		8090518	1					
ANR	8090686	Argument	pcs -> memory		8090518	0					
ANR	8090687	PtrMemberAccess	pcs -> memory		8090518	0					
ANR	8090688	Identifier	pcs		8090518	0					
ANR	8090689	Identifier	memory		8090518	1					
ANR	8090690	Argument	"""continuation not implemented for this font type\\n"""		8090518	1					
ANR	8090691	PrimaryExpression	"""continuation not implemented for this font type\\n"""		8090518	0					
ANR	8090692	ReturnStatement	return e_Unimplemented ;	566:12:21025:21047	8090518	1	True				
ANR	8090693	Identifier	e_Unimplemented		8090518	0					
ANR	8090694	IfStatement	"if ( pcs -> soft_font_count + count - 2 > gs_object_size ( pcs -> memory , pcs -> soft_font_char_data ) )"		8090518	2					
ANR	8090695	Condition	"pcs -> soft_font_count + count - 2 > gs_object_size ( pcs -> memory , pcs -> soft_font_char_data )"	569:12:21110:21197	8090518	0	True				
ANR	8090696	RelationalExpression	"pcs -> soft_font_count + count - 2 > gs_object_size ( pcs -> memory , pcs -> soft_font_char_data )"		8090518	0		>			
ANR	8090697	AdditiveExpression	pcs -> soft_font_count + count - 2		8090518	0		+			
ANR	8090698	PtrMemberAccess	pcs -> soft_font_count		8090518	0					
ANR	8090699	Identifier	pcs		8090518	0					
ANR	8090700	Identifier	soft_font_count		8090518	1					
ANR	8090701	AdditiveExpression	count - 2		8090518	1		-			
ANR	8090702	Identifier	count		8090518	0					
ANR	8090703	PrimaryExpression	2		8090518	1					
ANR	8090704	CallExpression	"gs_object_size ( pcs -> memory , pcs -> soft_font_char_data )"		8090518	1					
ANR	8090705	Callee	gs_object_size		8090518	0					
ANR	8090706	Identifier	gs_object_size		8090518	0					
ANR	8090707	ArgumentList	pcs -> memory		8090518	1					
ANR	8090708	Argument	pcs -> memory		8090518	0					
ANR	8090709	PtrMemberAccess	pcs -> memory		8090518	0					
ANR	8090710	Identifier	pcs		8090518	0					
ANR	8090711	Identifier	memory		8090518	1					
ANR	8090712	Argument	pcs -> soft_font_char_data		8090518	1					
ANR	8090713	PtrMemberAccess	pcs -> soft_font_char_data		8090518	0					
ANR	8090714	Identifier	pcs		8090518	0					
ANR	8090715	Identifier	soft_font_char_data		8090518	1					
ANR	8090716	ReturnStatement	return e_Range ;	570:12:21212:21226	8090518	1	True				
ANR	8090717	Identifier	e_Range		8090518	0					
ANR	8090718	ExpressionStatement	"memcpy ( pcs -> soft_font_char_data + pcs -> soft_font_count , data + 2 , count - 2 )"	573:8:21289:21380	8090518	3	True				
ANR	8090719	CallExpression	"memcpy ( pcs -> soft_font_char_data + pcs -> soft_font_count , data + 2 , count - 2 )"		8090518	0					
ANR	8090720	Callee	memcpy		8090518	0					
ANR	8090721	Identifier	memcpy		8090518	0					
ANR	8090722	ArgumentList	pcs -> soft_font_char_data + pcs -> soft_font_count		8090518	1					
ANR	8090723	Argument	pcs -> soft_font_char_data + pcs -> soft_font_count		8090518	0					
ANR	8090724	AdditiveExpression	pcs -> soft_font_char_data + pcs -> soft_font_count		8090518	0		+			
ANR	8090725	PtrMemberAccess	pcs -> soft_font_char_data		8090518	0					
ANR	8090726	Identifier	pcs		8090518	0					
ANR	8090727	Identifier	soft_font_char_data		8090518	1					
ANR	8090728	PtrMemberAccess	pcs -> soft_font_count		8090518	1					
ANR	8090729	Identifier	pcs		8090518	0					
ANR	8090730	Identifier	soft_font_count		8090518	1					
ANR	8090731	Argument	data + 2		8090518	1					
ANR	8090732	AdditiveExpression	data + 2		8090518	0		+			
ANR	8090733	Identifier	data		8090518	0					
ANR	8090734	PrimaryExpression	2		8090518	1					
ANR	8090735	Argument	count - 2		8090518	2					
ANR	8090736	AdditiveExpression	count - 2		8090518	0		-			
ANR	8090737	Identifier	count		8090518	0					
ANR	8090738	PrimaryExpression	2		8090518	1					
ANR	8090739	ExpressionStatement	pcs -> soft_font_count += ( count - 2 )	576:8:21434:21469	8090518	4	True				
ANR	8090740	AssignmentExpression	pcs -> soft_font_count += ( count - 2 )		8090518	0		+=			
ANR	8090741	PtrMemberAccess	pcs -> soft_font_count		8090518	0					
ANR	8090742	Identifier	pcs		8090518	0					
ANR	8090743	Identifier	soft_font_count		8090518	1					
ANR	8090744	AdditiveExpression	count - 2		8090518	1		-			
ANR	8090745	Identifier	count		8090518	0					
ANR	8090746	PrimaryExpression	2		8090518	1					
ANR	8090747	ReturnStatement	return 0 ;	577:8:21479:21487	8090518	5	True				
ANR	8090748	PrimaryExpression	0		8090518	0					
ANR	8090749	ElseStatement	else		8090518	0					
ANR	8090750	CompoundStatement		50:11:1824:1824	8090518	0					
ANR	8090751	ExpressionStatement	pcs -> soft_font_count = 0	579:8:21510:21534	8090518	0	True				
ANR	8090752	AssignmentExpression	pcs -> soft_font_count = 0		8090518	0		=			
ANR	8090753	PtrMemberAccess	pcs -> soft_font_count		8090518	0					
ANR	8090754	Identifier	pcs		8090518	0					
ANR	8090755	Identifier	soft_font_count		8090518	1					
ANR	8090756	PrimaryExpression	0		8090518	1					
ANR	8090757	ExpressionStatement	pcs -> soft_font_char_data = 0	580:8:21544:21572	8090518	1	True				
ANR	8090758	AssignmentExpression	pcs -> soft_font_char_data = 0		8090518	0		=			
ANR	8090759	PtrMemberAccess	pcs -> soft_font_char_data		8090518	0					
ANR	8090760	Identifier	pcs		8090518	0					
ANR	8090761	Identifier	soft_font_char_data		8090518	1					
ANR	8090762	PrimaryExpression	0		8090518	1					
ANR	8090763	ExpressionStatement	format = ( pcl_font_header_format_t ) ( ( const pcl_font_header_t * ) plfont -> header ) -> HeaderFormat	582:4:21584:21685	8090518	13	True				
ANR	8090764	AssignmentExpression	format = ( pcl_font_header_format_t ) ( ( const pcl_font_header_t * ) plfont -> header ) -> HeaderFormat		8090518	0		=			
ANR	8090765	Identifier	format		8090518	0					
ANR	8090766	CastExpression	( pcl_font_header_format_t ) ( ( const pcl_font_header_t * ) plfont -> header ) -> HeaderFormat		8090518	1					
ANR	8090767	CastTarget	pcl_font_header_format_t		8090518	0					
ANR	8090768	PtrMemberAccess	( ( const pcl_font_header_t * ) plfont -> header ) -> HeaderFormat		8090518	1					
ANR	8090769	CastExpression	( const pcl_font_header_t * ) plfont -> header		8090518	0					
ANR	8090770	CastTarget	const pcl_font_header_t *		8090518	0					
ANR	8090771	PtrMemberAccess	plfont -> header		8090518	1					
ANR	8090772	Identifier	plfont		8090518	0					
ANR	8090773	Identifier	header		8090518	1					
ANR	8090774	Identifier	HeaderFormat		8090518	1					
ANR	8090775	SwitchStatement	switch ( data [ 0 ] )		8090518	14					
ANR	8090776	Condition	data [ 0 ]	584:12:21699:21705	8090518	0	True				
ANR	8090777	ArrayIndexing	data [ 0 ]		8090518	0					
ANR	8090778	Identifier	data		8090518	0					
ANR	8090779	PrimaryExpression	0		8090518	1					
ANR	8090780	CompoundStatement		56:21:2032:2032	8090518	1					
ANR	8090781	Label	case pccd_bitmap :	585:8:21718:21734	8090518	0	True				
ANR	8090782	Identifier	pccd_bitmap		8090518	0					
ANR	8090783	CompoundStatement		59:16:2090:2108	8090518	1					
ANR	8090784	IdentifierDeclStatement	"uint width , height ;"	587:16:21766:21784	8090518	0	True				
ANR	8090785	IdentifierDecl	width		8090518	0					
ANR	8090786	IdentifierDeclType	uint		8090518	0					
ANR	8090787	Identifier	width		8090518	1					
ANR	8090788	IdentifierDecl	height		8090518	1					
ANR	8090789	IdentifierDeclType	uint		8090518	0					
ANR	8090790	Identifier	height		8090518	1					
ANR	8090791	IfStatement	if ( data [ 2 ] != 14 || ( format != pcfh_bitmap && format != pcfh_resolution_bitmap && format != pcfh_truetype_large ) )		8090518	1					
ANR	8090792	Condition	data [ 2 ] != 14 || ( format != pcfh_bitmap && format != pcfh_resolution_bitmap && format != pcfh_truetype_large )	589:20:21807:21977	8090518	0	True				
ANR	8090793	OrExpression	data [ 2 ] != 14 || ( format != pcfh_bitmap && format != pcfh_resolution_bitmap && format != pcfh_truetype_large )		8090518	0		||			
ANR	8090794	EqualityExpression	data [ 2 ] != 14		8090518	0		!=			
ANR	8090795	ArrayIndexing	data [ 2 ]		8090518	0					
ANR	8090796	Identifier	data		8090518	0					
ANR	8090797	PrimaryExpression	2		8090518	1					
ANR	8090798	PrimaryExpression	14		8090518	1					
ANR	8090799	AndExpression	format != pcfh_bitmap && format != pcfh_resolution_bitmap && format != pcfh_truetype_large		8090518	1		&&			
ANR	8090800	EqualityExpression	format != pcfh_bitmap		8090518	0		!=			
ANR	8090801	Identifier	format		8090518	0					
ANR	8090802	Identifier	pcfh_bitmap		8090518	1					
ANR	8090803	AndExpression	format != pcfh_resolution_bitmap && format != pcfh_truetype_large		8090518	1		&&			
ANR	8090804	EqualityExpression	format != pcfh_resolution_bitmap		8090518	0		!=			
ANR	8090805	Identifier	format		8090518	0					
ANR	8090806	Identifier	pcfh_resolution_bitmap		8090518	1					
ANR	8090807	EqualityExpression	format != pcfh_truetype_large		8090518	1		!=			
ANR	8090808	Identifier	format		8090518	0					
ANR	8090809	Identifier	pcfh_truetype_large		8090518	1					
ANR	8090810	ReturnStatement	return e_Range ;	594:20:22021:22035	8090518	1	True				
ANR	8090811	Identifier	e_Range		8090518	0					
ANR	8090812	ExpressionStatement	width = pl_get_uint16 ( data + 10 )	596:16:22054:22086	8090518	2	True				
ANR	8090813	AssignmentExpression	width = pl_get_uint16 ( data + 10 )		8090518	0		=			
ANR	8090814	Identifier	width		8090518	0					
ANR	8090815	CallExpression	pl_get_uint16 ( data + 10 )		8090518	1					
ANR	8090816	Callee	pl_get_uint16		8090518	0					
ANR	8090817	Identifier	pl_get_uint16		8090518	0					
ANR	8090818	ArgumentList	data + 10		8090518	1					
ANR	8090819	Argument	data + 10		8090518	0					
ANR	8090820	AdditiveExpression	data + 10		8090518	0		+			
ANR	8090821	Identifier	data		8090518	0					
ANR	8090822	PrimaryExpression	10		8090518	1					
ANR	8090823	IfStatement	if ( width < 1 || width > 16384 )		8090518	3					
ANR	8090824	Condition	width < 1 || width > 16384	597:20:22108:22133	8090518	0	True				
ANR	8090825	OrExpression	width < 1 || width > 16384		8090518	0		||			
ANR	8090826	RelationalExpression	width < 1		8090518	0		<			
ANR	8090827	Identifier	width		8090518	0					
ANR	8090828	PrimaryExpression	1		8090518	1					
ANR	8090829	RelationalExpression	width > 16384		8090518	1		>			
ANR	8090830	Identifier	width		8090518	0					
ANR	8090831	PrimaryExpression	16384		8090518	1					
ANR	8090832	ReturnStatement	return e_Range ;	598:20:22156:22170	8090518	1	True				
ANR	8090833	Identifier	e_Range		8090518	0					
ANR	8090834	ExpressionStatement	height = pl_get_uint16 ( data + 12 )	599:16:22188:22221	8090518	4	True				
ANR	8090835	AssignmentExpression	height = pl_get_uint16 ( data + 12 )		8090518	0		=			
ANR	8090836	Identifier	height		8090518	0					
ANR	8090837	CallExpression	pl_get_uint16 ( data + 12 )		8090518	1					
ANR	8090838	Callee	pl_get_uint16		8090518	0					
ANR	8090839	Identifier	pl_get_uint16		8090518	0					
ANR	8090840	ArgumentList	data + 12		8090518	1					
ANR	8090841	Argument	data + 12		8090518	0					
ANR	8090842	AdditiveExpression	data + 12		8090518	0		+			
ANR	8090843	Identifier	data		8090518	0					
ANR	8090844	PrimaryExpression	12		8090518	1					
ANR	8090845	IfStatement	if ( height < 1 || height > 16384 )		8090518	5					
ANR	8090846	Condition	height < 1 || height > 16384	600:20:22243:22270	8090518	0	True				
ANR	8090847	OrExpression	height < 1 || height > 16384		8090518	0		||			
ANR	8090848	RelationalExpression	height < 1		8090518	0		<			
ANR	8090849	Identifier	height		8090518	0					
ANR	8090850	PrimaryExpression	1		8090518	1					
ANR	8090851	RelationalExpression	height > 16384		8090518	1		>			
ANR	8090852	Identifier	height		8090518	0					
ANR	8090853	PrimaryExpression	16384		8090518	1					
ANR	8090854	ReturnStatement	return e_Range ;	601:20:22293:22307	8090518	1	True				
ANR	8090855	Identifier	e_Range		8090518	0					
ANR	8090856	CompoundStatement		77:20:2786:2796	8090518	6					
ANR	8090857	IdentifierDeclStatement	"int toff , loff ;"	604:20:22426:22440	8090518	0	True				
ANR	8090858	IdentifierDecl	toff		8090518	0					
ANR	8090859	IdentifierDeclType	int		8090518	0					
ANR	8090860	Identifier	toff		8090518	1					
ANR	8090861	IdentifierDecl	loff		8090518	1					
ANR	8090862	IdentifierDeclType	int		8090518	0					
ANR	8090863	Identifier	loff		8090518	1					
ANR	8090864	IdentifierDeclStatement	int deltax ;	605:20:22462:22472	8090518	1	True				
ANR	8090865	IdentifierDecl	deltax		8090518	0					
ANR	8090866	IdentifierDeclType	int		8090518	0					
ANR	8090867	Identifier	deltax		8090518	1					
ANR	8090868	ExpressionStatement	loff = pl_get_int16 ( data + 6 )	607:20:22495:22524	8090518	2	True				
ANR	8090869	AssignmentExpression	loff = pl_get_int16 ( data + 6 )		8090518	0		=			
ANR	8090870	Identifier	loff		8090518	0					
ANR	8090871	CallExpression	pl_get_int16 ( data + 6 )		8090518	1					
ANR	8090872	Callee	pl_get_int16		8090518	0					
ANR	8090873	Identifier	pl_get_int16		8090518	0					
ANR	8090874	ArgumentList	data + 6		8090518	1					
ANR	8090875	Argument	data + 6		8090518	0					
ANR	8090876	AdditiveExpression	data + 6		8090518	0		+			
ANR	8090877	Identifier	data		8090518	0					
ANR	8090878	PrimaryExpression	6		8090518	1					
ANR	8090879	IfStatement	if ( ( - 16384 > loff ) || ( loff > 16384 ) )		8090518	3					
ANR	8090880	Condition	( - 16384 > loff ) || ( loff > 16384 )	608:24:22550:22582	8090518	0	True				
ANR	8090881	OrExpression	( - 16384 > loff ) || ( loff > 16384 )		8090518	0		||			
ANR	8090882	RelationalExpression	- 16384 > loff		8090518	0		>			
ANR	8090883	UnaryOperationExpression	- 16384		8090518	0					
ANR	8090884	UnaryOperator	-		8090518	0					
ANR	8090885	PrimaryExpression	16384		8090518	1					
ANR	8090886	Identifier	loff		8090518	1					
ANR	8090887	RelationalExpression	loff > 16384		8090518	1		>			
ANR	8090888	Identifier	loff		8090518	0					
ANR	8090889	PrimaryExpression	16384		8090518	1					
ANR	8090890	ReturnStatement	return e_Range ;	609:24:22609:22623	8090518	1	True				
ANR	8090891	Identifier	e_Range		8090518	0					
ANR	8090892	ExpressionStatement	toff = pl_get_int16 ( data + 8 )	610:20:22645:22674	8090518	4	True				
ANR	8090893	AssignmentExpression	toff = pl_get_int16 ( data + 8 )		8090518	0		=			
ANR	8090894	Identifier	toff		8090518	0					
ANR	8090895	CallExpression	pl_get_int16 ( data + 8 )		8090518	1					
ANR	8090896	Callee	pl_get_int16		8090518	0					
ANR	8090897	Identifier	pl_get_int16		8090518	0					
ANR	8090898	ArgumentList	data + 8		8090518	1					
ANR	8090899	Argument	data + 8		8090518	0					
ANR	8090900	AdditiveExpression	data + 8		8090518	0		+			
ANR	8090901	Identifier	data		8090518	0					
ANR	8090902	PrimaryExpression	8		8090518	1					
ANR	8090903	IfStatement	if ( ( - 16384 > toff ) || ( toff > 16384 ) )		8090518	5					
ANR	8090904	Condition	( - 16384 > toff ) || ( toff > 16384 )	611:24:22700:22732	8090518	0	True				
ANR	8090905	OrExpression	( - 16384 > toff ) || ( toff > 16384 )		8090518	0		||			
ANR	8090906	RelationalExpression	- 16384 > toff		8090518	0		>			
ANR	8090907	UnaryOperationExpression	- 16384		8090518	0					
ANR	8090908	UnaryOperator	-		8090518	0					
ANR	8090909	PrimaryExpression	16384		8090518	1					
ANR	8090910	Identifier	toff		8090518	1					
ANR	8090911	RelationalExpression	toff > 16384		8090518	1		>			
ANR	8090912	Identifier	toff		8090518	0					
ANR	8090913	PrimaryExpression	16384		8090518	1					
ANR	8090914	ReturnStatement	return e_Range ;	612:24:22759:22773	8090518	1	True				
ANR	8090915	Identifier	e_Range		8090518	0					
ANR	8090916	ExpressionStatement	deltax = pl_get_int16 ( data + 14 )	613:20:22795:22827	8090518	6	True				
ANR	8090917	AssignmentExpression	deltax = pl_get_int16 ( data + 14 )		8090518	0		=			
ANR	8090918	Identifier	deltax		8090518	0					
ANR	8090919	CallExpression	pl_get_int16 ( data + 14 )		8090518	1					
ANR	8090920	Callee	pl_get_int16		8090518	0					
ANR	8090921	Identifier	pl_get_int16		8090518	0					
ANR	8090922	ArgumentList	data + 14		8090518	1					
ANR	8090923	Argument	data + 14		8090518	0					
ANR	8090924	AdditiveExpression	data + 14		8090518	0		+			
ANR	8090925	Identifier	data		8090518	0					
ANR	8090926	PrimaryExpression	14		8090518	1					
ANR	8090927	IfStatement	if ( ( - 32768 > deltax ) || ( deltax > 32767 ) )		8090518	7					
ANR	8090928	Condition	( - 32768 > deltax ) || ( deltax > 32767 )	614:24:22853:22889	8090518	0	True				
ANR	8090929	OrExpression	( - 32768 > deltax ) || ( deltax > 32767 )		8090518	0		||			
ANR	8090930	RelationalExpression	- 32768 > deltax		8090518	0		>			
ANR	8090931	UnaryOperationExpression	- 32768		8090518	0					
ANR	8090932	UnaryOperator	-		8090518	0					
ANR	8090933	PrimaryExpression	32768		8090518	1					
ANR	8090934	Identifier	deltax		8090518	1					
ANR	8090935	RelationalExpression	deltax > 32767		8090518	1		>			
ANR	8090936	Identifier	deltax		8090518	0					
ANR	8090937	PrimaryExpression	32767		8090518	1					
ANR	8090938	ReturnStatement	return e_Range ;	615:24:22916:22930	8090518	1	True				
ANR	8090939	Identifier	e_Range		8090518	0					
ANR	8090940	IfStatement	if ( ( width * height / 8 ) > 1024 * 1024 )		8090518	8					
ANR	8090941	Condition	( width * height / 8 ) > 1024 * 1024	617:24:23031:23064	8090518	0	True				
ANR	8090942	RelationalExpression	( width * height / 8 ) > 1024 * 1024		8090518	0		>			
ANR	8090943	MultiplicativeExpression	width * height / 8		8090518	0		*			
ANR	8090944	Identifier	width		8090518	0					
ANR	8090945	MultiplicativeExpression	height / 8		8090518	1		/			
ANR	8090946	Identifier	height		8090518	0					
ANR	8090947	PrimaryExpression	8		8090518	1					
ANR	8090948	MultiplicativeExpression	1024 * 1024		8090518	1		*			
ANR	8090949	PrimaryExpression	1024		8090518	0					
ANR	8090950	PrimaryExpression	1024		8090518	1					
ANR	8090951	ReturnStatement	return e_Range ;	618:24:23091:23105	8090518	1	True				
ANR	8090952	Identifier	e_Range		8090518	0					
ANR	8090953	SwitchStatement	switch ( data [ 3 ] )		8090518	7					
ANR	8090954	Condition	data [ 3 ]	621:24:23150:23156	8090518	0	True				
ANR	8090955	ArrayIndexing	data [ 3 ]		8090518	0					
ANR	8090956	Identifier	data		8090518	0					
ANR	8090957	PrimaryExpression	3		8090518	1					
ANR	8090958	CompoundStatement		93:33:3483:3483	8090518	1					
ANR	8090959	Label	case 1 :	622:20:23181:23187	8090518	0	True				
ANR	8090960	ExpressionStatement	font_data_size = 16 + ( ( ( width + 7 ) >> 3 ) * height )	623:24:23242:23293	8090518	1	True				
ANR	8090961	AssignmentExpression	font_data_size = 16 + ( ( ( width + 7 ) >> 3 ) * height )		8090518	0		=			
ANR	8090962	Identifier	font_data_size		8090518	0					
ANR	8090963	AdditiveExpression	16 + ( ( ( width + 7 ) >> 3 ) * height )		8090518	1		+			
ANR	8090964	PrimaryExpression	16		8090518	0					
ANR	8090965	MultiplicativeExpression	( ( width + 7 ) >> 3 ) * height		8090518	1		*			
ANR	8090966	ShiftExpression	( width + 7 ) >> 3		8090518	0		>>			
ANR	8090967	AdditiveExpression	width + 7		8090518	0		+			
ANR	8090968	Identifier	width		8090518	0					
ANR	8090969	PrimaryExpression	7		8090518	1					
ANR	8090970	PrimaryExpression	3		8090518	1					
ANR	8090971	Identifier	height		8090518	1					
ANR	8090972	BreakStatement	break ;	624:24:23319:23324	8090518	2	True				
ANR	8090973	Label	case 2 :	625:20:23346:23352	8090518	3	True				
ANR	8090974	CompoundStatement		103:28:3981:3990	8090518	4					
ANR	8090975	IdentifierDeclStatement	uint y = 0 ;	627:28:23435:23445	8090518	0	True				
ANR	8090976	IdentifierDecl	y = 0		8090518	0					
ANR	8090977	IdentifierDeclType	uint		8090518	0					
ANR	8090978	Identifier	y		8090518	1					
ANR	8090979	AssignmentExpression	y = 0		8090518	2		=			
ANR	8090980	Identifier	y		8090518	0					
ANR	8090981	PrimaryExpression	0		8090518	1					
ANR	8090982	IdentifierDeclStatement	const byte * src = data + 16 ;	628:28:23475:23502	8090518	1	True				
ANR	8090983	IdentifierDecl	* src = data + 16		8090518	0					
ANR	8090984	IdentifierDeclType	const byte *		8090518	0					
ANR	8090985	Identifier	src		8090518	1					
ANR	8090986	AssignmentExpression	* src = data + 16		8090518	2		=			
ANR	8090987	Identifier	src		8090518	0					
ANR	8090988	AdditiveExpression	data + 16		8090518	1		+			
ANR	8090989	Identifier	data		8090518	0					
ANR	8090990	PrimaryExpression	16		8090518	1					
ANR	8090991	IdentifierDeclStatement	const byte * end = data + count ;	629:28:23532:23562	8090518	2	True				
ANR	8090992	IdentifierDecl	* end = data + count		8090518	0					
ANR	8090993	IdentifierDeclType	const byte *		8090518	0					
ANR	8090994	Identifier	end		8090518	1					
ANR	8090995	AssignmentExpression	* end = data + count		8090518	2		=			
ANR	8090996	Identifier	end		8090518	0					
ANR	8090997	AdditiveExpression	data + count		8090518	1		+			
ANR	8090998	Identifier	data		8090518	0					
ANR	8090999	Identifier	count		8090518	1					
ANR	8091000	IdentifierDeclStatement	uint width_bytes = ( width + 7 ) >> 3 ;	630:28:23592:23627	8090518	3	True				
ANR	8091001	IdentifierDecl	width_bytes = ( width + 7 ) >> 3		8090518	0					
ANR	8091002	IdentifierDeclType	uint		8090518	0					
ANR	8091003	Identifier	width_bytes		8090518	1					
ANR	8091004	AssignmentExpression	width_bytes = ( width + 7 ) >> 3		8090518	2		=			
ANR	8091005	Identifier	width_bytes		8090518	0					
ANR	8091006	ShiftExpression	( width + 7 ) >> 3		8090518	1		>>			
ANR	8091007	AdditiveExpression	width + 7		8090518	0		+			
ANR	8091008	Identifier	width		8090518	0					
ANR	8091009	PrimaryExpression	7		8090518	1					
ANR	8091010	PrimaryExpression	3		8090518	1					
ANR	8091011	IdentifierDeclStatement	byte * row ;	631:28:23657:23666	8090518	4	True				
ANR	8091012	IdentifierDecl	* row		8090518	0					
ANR	8091013	IdentifierDeclType	byte *		8090518	0					
ANR	8091014	Identifier	row		8090518	1					
ANR	8091015	ExpressionStatement	font_data_size = 16 + width_bytes * height	633:28:23697:23739	8090518	5	True				
ANR	8091016	AssignmentExpression	font_data_size = 16 + width_bytes * height		8090518	0		=			
ANR	8091017	Identifier	font_data_size		8090518	0					
ANR	8091018	AdditiveExpression	16 + width_bytes * height		8090518	1		+			
ANR	8091019	PrimaryExpression	16		8090518	0					
ANR	8091020	MultiplicativeExpression	width_bytes * height		8090518	1		*			
ANR	8091021	Identifier	width_bytes		8090518	0					
ANR	8091022	Identifier	height		8090518	1					
ANR	8091023	ExpressionStatement	"char_data = gs_alloc_bytes ( pcs -> memory , font_data_size , ""pcl_character_data(compressed bitmap)"" )"	635:28:23770:23992	8090518	6	True				
ANR	8091024	AssignmentExpression	"char_data = gs_alloc_bytes ( pcs -> memory , font_data_size , ""pcl_character_data(compressed bitmap)"" )"		8090518	0		=			
ANR	8091025	Identifier	char_data		8090518	0					
ANR	8091026	CallExpression	"gs_alloc_bytes ( pcs -> memory , font_data_size , ""pcl_character_data(compressed bitmap)"" )"		8090518	1					
ANR	8091027	Callee	gs_alloc_bytes		8090518	0					
ANR	8091028	Identifier	gs_alloc_bytes		8090518	0					
ANR	8091029	ArgumentList	pcs -> memory		8090518	1					
ANR	8091030	Argument	pcs -> memory		8090518	0					
ANR	8091031	PtrMemberAccess	pcs -> memory		8090518	0					
ANR	8091032	Identifier	pcs		8090518	0					
ANR	8091033	Identifier	memory		8090518	1					
ANR	8091034	Argument	font_data_size		8090518	1					
ANR	8091035	Identifier	font_data_size		8090518	0					
ANR	8091036	Argument	"""pcl_character_data(compressed bitmap)"""		8090518	2					
ANR	8091037	PrimaryExpression	"""pcl_character_data(compressed bitmap)"""		8090518	0					
ANR	8091038	IfStatement	if ( char_data == 0 )		8090518	7					
ANR	8091039	Condition	char_data == 0	639:32:24026:24039	8090518	0	True				
ANR	8091040	EqualityExpression	char_data == 0		8090518	0		==			
ANR	8091041	Identifier	char_data		8090518	0					
ANR	8091042	PrimaryExpression	0		8090518	1					
ANR	8091043	ExpressionStatement	return_error ( e_Memory )	640:32:24074:24096	8090518	1	True				
ANR	8091044	CallExpression	return_error ( e_Memory )		8090518	0					
ANR	8091045	Callee	return_error		8090518	0					
ANR	8091046	Identifier	return_error		8090518	0					
ANR	8091047	ArgumentList	e_Memory		8090518	1					
ANR	8091048	Argument	e_Memory		8090518	0					
ANR	8091049	Identifier	e_Memory		8090518	0					
ANR	8091050	ExpressionStatement	"memcpy ( char_data , data , 16 )"	641:28:24126:24153	8090518	8	True				
ANR	8091051	CallExpression	"memcpy ( char_data , data , 16 )"		8090518	0					
ANR	8091052	Callee	memcpy		8090518	0					
ANR	8091053	Identifier	memcpy		8090518	0					
ANR	8091054	ArgumentList	char_data		8090518	1					
ANR	8091055	Argument	char_data		8090518	0					
ANR	8091056	Identifier	char_data		8090518	0					
ANR	8091057	Argument	data		8090518	1					
ANR	8091058	Identifier	data		8090518	0					
ANR	8091059	Argument	16		8090518	2					
ANR	8091060	PrimaryExpression	16		8090518	0					
ANR	8091061	ExpressionStatement	"memset ( char_data + 16 , 0 , width_bytes * height )"	642:28:24183:24230	8090518	9	True				
ANR	8091062	CallExpression	"memset ( char_data + 16 , 0 , width_bytes * height )"		8090518	0					
ANR	8091063	Callee	memset		8090518	0					
ANR	8091064	Identifier	memset		8090518	0					
ANR	8091065	ArgumentList	char_data + 16		8090518	1					
ANR	8091066	Argument	char_data + 16		8090518	0					
ANR	8091067	AdditiveExpression	char_data + 16		8090518	0		+			
ANR	8091068	Identifier	char_data		8090518	0					
ANR	8091069	PrimaryExpression	16		8090518	1					
ANR	8091070	Argument	0		8090518	1					
ANR	8091071	PrimaryExpression	0		8090518	0					
ANR	8091072	Argument	width_bytes * height		8090518	2					
ANR	8091073	MultiplicativeExpression	width_bytes * height		8090518	0		*			
ANR	8091074	Identifier	width_bytes		8090518	0					
ANR	8091075	Identifier	height		8090518	1					
ANR	8091076	ExpressionStatement	row = char_data + 16	643:28:24260:24280	8090518	10	True				
ANR	8091077	AssignmentExpression	row = char_data + 16		8090518	0		=			
ANR	8091078	Identifier	row		8090518	0					
ANR	8091079	AdditiveExpression	char_data + 16		8090518	1		+			
ANR	8091080	Identifier	char_data		8090518	0					
ANR	8091081	PrimaryExpression	16		8090518	1					
ANR	8091082	WhileStatement	while ( src < end && y < height )		8090518	11					
ANR	8091083	Condition	src < end && y < height	644:35:24317:24339	8090518	0	True				
ANR	8091084	AndExpression	src < end && y < height		8090518	0		&&			
ANR	8091085	RelationalExpression	src < end		8090518	0		<			
ANR	8091086	Identifier	src		8090518	0					
ANR	8091087	Identifier	end		8090518	1					
ANR	8091088	RelationalExpression	y < height		8090518	1		<			
ANR	8091089	Identifier	y		8090518	0					
ANR	8091090	Identifier	height		8090518	1					
ANR	8091091	CompoundStatement		119:32:4825:4843	8090518	1					
ANR	8091092	IdentifierDeclStatement	uint x ;	645:32:24414:24420	8090518	0	True				
ANR	8091093	IdentifierDecl	x		8090518	0					
ANR	8091094	IdentifierDeclType	uint		8090518	0					
ANR	8091095	Identifier	x		8090518	1					
ANR	8091096	IdentifierDeclStatement	int color = 0 ;	646:32:24454:24467	8090518	1	True				
ANR	8091097	IdentifierDecl	color = 0		8090518	0					
ANR	8091098	IdentifierDeclType	int		8090518	0					
ANR	8091099	Identifier	color		8090518	1					
ANR	8091100	AssignmentExpression	color = 0		8090518	2		=			
ANR	8091101	Identifier	color		8090518	0					
ANR	8091102	PrimaryExpression	0		8090518	1					
ANR	8091103	IdentifierDeclStatement	uint reps = * src ++ ;	647:32:24501:24519	8090518	2	True				
ANR	8091104	IdentifierDecl	reps = * src ++		8090518	0					
ANR	8091105	IdentifierDeclType	uint		8090518	0					
ANR	8091106	Identifier	reps		8090518	1					
ANR	8091107	AssignmentExpression	reps = * src ++		8090518	2		=			
ANR	8091108	Identifier	reps		8090518	0					
ANR	8091109	UnaryOperationExpression	* src ++		8090518	1					
ANR	8091110	UnaryOperator	*		8090518	0					
ANR	8091111	PostIncDecOperationExpression	src ++		8090518	1					
ANR	8091112	Identifier	src		8090518	0					
ANR	8091113	IncDec	++		8090518	1					
ANR	8091114	ForStatement	for ( x = 0 ; src < end && x < width ; color ^= 1 )		8090518	3					
ANR	8091115	ForInit	x = 0 ;	649:37:24559:24564	8090518	0	True				
ANR	8091116	AssignmentExpression	x = 0		8090518	0		=			
ANR	8091117	Identifier	x		8090518	0					
ANR	8091118	PrimaryExpression	0		8090518	1					
ANR	8091119	Condition	src < end && x < width	649:44:24566:24587	8090518	1	True				
ANR	8091120	AndExpression	src < end && x < width		8090518	0		&&			
ANR	8091121	RelationalExpression	src < end		8090518	0		<			
ANR	8091122	Identifier	src		8090518	0					
ANR	8091123	Identifier	end		8090518	1					
ANR	8091124	RelationalExpression	x < width		8090518	1		<			
ANR	8091125	Identifier	x		8090518	0					
ANR	8091126	Identifier	width		8090518	1					
ANR	8091127	AssignmentExpression	color ^= 1	649:68:24590:24599	8090518	2	True	^=			
ANR	8091128	Identifier	color		8090518	0					
ANR	8091129	PrimaryExpression	1		8090518	1					
ANR	8091130	CompoundStatement		122:36:4995:5013	8090518	3					
ANR	8091131	IdentifierDeclStatement	uint rlen = * src ++ ;	650:36:24671:24689	8090518	0	True				
ANR	8091132	IdentifierDecl	rlen = * src ++		8090518	0					
ANR	8091133	IdentifierDeclType	uint		8090518	0					
ANR	8091134	Identifier	rlen		8090518	1					
ANR	8091135	AssignmentExpression	rlen = * src ++		8090518	2		=			
ANR	8091136	Identifier	rlen		8090518	0					
ANR	8091137	UnaryOperationExpression	* src ++		8090518	1					
ANR	8091138	UnaryOperator	*		8090518	0					
ANR	8091139	PostIncDecOperationExpression	src ++		8090518	1					
ANR	8091140	Identifier	src		8090518	0					
ANR	8091141	IncDec	++		8090518	1					
ANR	8091142	IfStatement	if ( rlen > width - x )		8090518	1					
ANR	8091143	Condition	rlen > width - x	652:40:24732:24747	8090518	0	True				
ANR	8091144	RelationalExpression	rlen > width - x		8090518	0		>			
ANR	8091145	Identifier	rlen		8090518	0					
ANR	8091146	AdditiveExpression	width - x		8090518	1		-			
ANR	8091147	Identifier	width		8090518	0					
ANR	8091148	Identifier	x		8090518	1					
ANR	8091149	ReturnStatement	return e_Range ;	653:40:24790:24804	8090518	1	True				
ANR	8091150	Identifier	e_Range		8090518	0					
ANR	8091151	IfStatement	if ( color )		8090518	2					
ANR	8091152	Condition	color	654:40:24864:24868	8090518	0	True				
ANR	8091153	Identifier	color		8090518	0					
ANR	8091154	CompoundStatement		127:40:5272:5296	8090518	1					
ANR	8091155	IdentifierDeclStatement	char * data = ( char * ) row ;	655:40:24948:24972	8090518	0	True				
ANR	8091156	IdentifierDecl	* data = ( char * ) row		8090518	0					
ANR	8091157	IdentifierDeclType	char *		8090518	0					
ANR	8091158	Identifier	data		8090518	1					
ANR	8091159	AssignmentExpression	* data = ( char * ) row		8090518	2		=			
ANR	8091160	Identifier	data		8090518	0					
ANR	8091161	CastExpression	( char * ) row		8090518	1					
ANR	8091162	CastTarget	char *		8090518	0					
ANR	8091163	Identifier	row		8090518	1					
ANR	8091164	WhileStatement	while ( rlen -- )		8090518	1					
ANR	8091165	Condition	rlen --	657:47:25022:25027	8090518	0	True				
ANR	8091166	PostIncDecOperationExpression	rlen --		8090518	0					
ANR	8091167	Identifier	rlen		8090518	0					
ANR	8091168	IncDec	--		8090518	1					
ANR	8091169	CompoundStatement		129:55:5354:5354	8090518	1					
ANR	8091170	ExpressionStatement	data [ x >> 3 ] |= ( 128 >> ( x & 7 ) )	658:44:25076:25108	8090518	0	True				
ANR	8091171	AssignmentExpression	data [ x >> 3 ] |= ( 128 >> ( x & 7 ) )		8090518	0		|=			
ANR	8091172	ArrayIndexing	data [ x >> 3 ]		8090518	0					
ANR	8091173	Identifier	data		8090518	0					
ANR	8091174	ShiftExpression	x >> 3		8090518	1		>>			
ANR	8091175	Identifier	x		8090518	0					
ANR	8091176	PrimaryExpression	3		8090518	1					
ANR	8091177	ShiftExpression	128 >> ( x & 7 )		8090518	1		>>			
ANR	8091178	PrimaryExpression	128		8090518	0					
ANR	8091179	BitAndExpression	x & 7		8090518	1		&			
ANR	8091180	Identifier	x		8090518	0					
ANR	8091181	PrimaryExpression	7		8090518	1					
ANR	8091182	ExpressionStatement	x ++	659:44:25154:25157	8090518	1	True				
ANR	8091183	PostIncDecOperationExpression	x ++		8090518	0					
ANR	8091184	Identifier	x		8090518	0					
ANR	8091185	IncDec	++		8090518	1					
ANR	8091186	ElseStatement	else		8090518	0					
ANR	8091187	ExpressionStatement	x += rlen	662:40:25284:25293	8090518	0	True				
ANR	8091188	AssignmentExpression	x += rlen		8090518	0		+=			
ANR	8091189	Identifier	x		8090518	0					
ANR	8091190	Identifier	rlen		8090518	1					
ANR	8091191	ExpressionStatement	row += width_bytes	664:32:25361:25379	8090518	4	True				
ANR	8091192	AssignmentExpression	row += width_bytes		8090518	0		+=			
ANR	8091193	Identifier	row		8090518	0					
ANR	8091194	Identifier	width_bytes		8090518	1					
ANR	8091195	ExpressionStatement	++ y	665:32:25413:25416	8090518	5	True				
ANR	8091196	UnaryExpression	++ y		8090518	0					
ANR	8091197	IncDec	++		8090518	0					
ANR	8091198	Identifier	y		8090518	1					
ANR	8091199	ForStatement	"for ( ; reps > 0 && y < height ; -- reps , ++ y , row += width_bytes )"		8090518	6					
ANR	8091200	Condition	reps > 0 && y < height	667:39:25524:25545	8090518	0	True				
ANR	8091201	AndExpression	reps > 0 && y < height		8090518	0		&&			
ANR	8091202	RelationalExpression	reps > 0		8090518	0		>			
ANR	8091203	Identifier	reps		8090518	0					
ANR	8091204	PrimaryExpression	0		8090518	1					
ANR	8091205	RelationalExpression	y < height		8090518	1		<			
ANR	8091206	Identifier	y		8090518	0					
ANR	8091207	Identifier	height		8090518	1					
ANR	8091208	Expression	"-- reps , ++ y , row += width_bytes"	668:37:25585:25615	8090518	1	True				
ANR	8091209	UnaryExpression	-- reps		8090518	0					
ANR	8091210	IncDec	--		8090518	0					
ANR	8091211	Identifier	reps		8090518	1					
ANR	8091212	Expression	"++ y , row += width_bytes"		8090518	1					
ANR	8091213	UnaryExpression	++ y		8090518	0					
ANR	8091214	IncDec	++		8090518	0					
ANR	8091215	Identifier	y		8090518	1					
ANR	8091216	AssignmentExpression	row += width_bytes		8090518	1		+=			
ANR	8091217	Identifier	row		8090518	0					
ANR	8091218	Identifier	width_bytes		8090518	1					
ANR	8091219	ExpressionStatement	"memcpy ( row , row - width_bytes , width_bytes )"	669:36:25654:25740	8090518	2	True				
ANR	8091220	CallExpression	"memcpy ( row , row - width_bytes , width_bytes )"		8090518	0					
ANR	8091221	Callee	memcpy		8090518	0					
ANR	8091222	Identifier	memcpy		8090518	0					
ANR	8091223	ArgumentList	row		8090518	1					
ANR	8091224	Argument	row		8090518	0					
ANR	8091225	Identifier	row		8090518	0					
ANR	8091226	Argument	row - width_bytes		8090518	1					
ANR	8091227	AdditiveExpression	row - width_bytes		8090518	0		-			
ANR	8091228	Identifier	row		8090518	0					
ANR	8091229	Identifier	width_bytes		8090518	1					
ANR	8091230	Argument	width_bytes		8090518	2					
ANR	8091231	Identifier	width_bytes		8090518	0					
ANR	8091232	BreakStatement	break ;	673:24:25822:25827	8090518	5	True				
ANR	8091233	Label	default :	674:20:25849:25856	8090518	6	True				
ANR	8091234	Identifier	default		8090518	0					
ANR	8091235	ReturnStatement	return e_Range ;	675:24:25882:25896	8090518	7	True				
ANR	8091236	Identifier	e_Range		8090518	0					
ANR	8091237	BreakStatement	break ;	678:12:25942:25947	8090518	2	True				
ANR	8091238	Label	case pccd_intellifont :	679:8:25957:25978	8090518	3	True				
ANR	8091239	Identifier	pccd_intellifont		8090518	0					
ANR	8091240	IfStatement	if ( data [ 2 ] != 2 || ( format != pcfh_intellifont_bound && format != pcfh_intellifont_unbound ) )		8090518	4					
ANR	8091241	Condition	data [ 2 ] != 2 || ( format != pcfh_intellifont_bound && format != pcfh_intellifont_unbound )	680:16:25996:26116	8090518	0	True				
ANR	8091242	OrExpression	data [ 2 ] != 2 || ( format != pcfh_intellifont_bound && format != pcfh_intellifont_unbound )		8090518	0		||			
ANR	8091243	EqualityExpression	data [ 2 ] != 2		8090518	0		!=			
ANR	8091244	ArrayIndexing	data [ 2 ]		8090518	0					
ANR	8091245	Identifier	data		8090518	0					
ANR	8091246	PrimaryExpression	2		8090518	1					
ANR	8091247	PrimaryExpression	2		8090518	1					
ANR	8091248	AndExpression	format != pcfh_intellifont_bound && format != pcfh_intellifont_unbound		8090518	1		&&			
ANR	8091249	EqualityExpression	format != pcfh_intellifont_bound		8090518	0		!=			
ANR	8091250	Identifier	format		8090518	0					
ANR	8091251	Identifier	pcfh_intellifont_bound		8090518	1					
ANR	8091252	EqualityExpression	format != pcfh_intellifont_unbound		8090518	1		!=			
ANR	8091253	Identifier	format		8090518	0					
ANR	8091254	Identifier	pcfh_intellifont_unbound		8090518	1					
ANR	8091255	ReturnStatement	return e_Range ;	684:16:26152:26166	8090518	1	True				
ANR	8091256	Identifier	e_Range		8090518	0					
ANR	8091257	SwitchStatement	switch ( data [ 3 ] )		8090518	5					
ANR	8091258	Condition	data [ 3 ]	685:20:26188:26194	8090518	0	True				
ANR	8091259	ArrayIndexing	data [ 3 ]		8090518	0					
ANR	8091260	Identifier	data		8090518	0					
ANR	8091261	PrimaryExpression	3		8090518	1					
ANR	8091262	CompoundStatement		157:29:6521:6521	8090518	1					
ANR	8091263	Label	case 3 :	686:16:26215:26221	8090518	0	True				
ANR	8091264	IfStatement	if ( count < 14 )		8090518	1					
ANR	8091265	Condition	count < 14	688:24:26359:26368	8090518	0	True				
ANR	8091266	RelationalExpression	count < 14		8090518	0		<			
ANR	8091267	Identifier	count		8090518	0					
ANR	8091268	PrimaryExpression	14		8090518	1					
ANR	8091269	ReturnStatement	return e_Range ;	689:24:26395:26409	8090518	1	True				
ANR	8091270	Identifier	e_Range		8090518	0					
ANR	8091271	CompoundStatement		163:24:6781:6821	8090518	2					
ANR	8091272	IdentifierDeclStatement	uint data_size = pl_get_uint16 ( data + 4 ) ;	691:24:26457:26497	8090518	0	True				
ANR	8091273	IdentifierDecl	data_size = pl_get_uint16 ( data + 4 )		8090518	0					
ANR	8091274	IdentifierDeclType	uint		8090518	0					
ANR	8091275	Identifier	data_size		8090518	1					
ANR	8091276	AssignmentExpression	data_size = pl_get_uint16 ( data + 4 )		8090518	2		=			
ANR	8091277	Identifier	data_size		8090518	0					
ANR	8091278	CallExpression	pl_get_uint16 ( data + 4 )		8090518	1					
ANR	8091279	Callee	pl_get_uint16		8090518	0					
ANR	8091280	Identifier	pl_get_uint16		8090518	0					
ANR	8091281	ArgumentList	data + 4		8090518	1					
ANR	8091282	Argument	data + 4		8090518	0					
ANR	8091283	AdditiveExpression	data + 4		8090518	0		+			
ANR	8091284	Identifier	data		8090518	0					
ANR	8091285	PrimaryExpression	4		8090518	1					
ANR	8091286	IfStatement	if ( data_size != count - 6 )		8090518	1					
ANR	8091287	Condition	data_size != count - 6	695:28:26679:26700	8090518	0	True				
ANR	8091288	EqualityExpression	data_size != count - 6		8090518	0		!=			
ANR	8091289	Identifier	data_size		8090518	0					
ANR	8091290	AdditiveExpression	count - 6		8090518	1		-			
ANR	8091291	Identifier	count		8090518	0					
ANR	8091292	PrimaryExpression	6		8090518	1					
ANR	8091293	ReturnStatement	return e_Range ;	696:28:26731:26745	8090518	1	True				
ANR	8091294	Identifier	e_Range		8090518	0					
ANR	8091295	BreakStatement	break ;	698:20:26789:26794	8090518	3	True				
ANR	8091296	Label	case 4 :	699:16:26812:26818	8090518	4	True				
ANR	8091297	IfStatement	if ( count < 8 )		8090518	5					
ANR	8091298	Condition	count < 8	702:24:26989:26997	8090518	0	True				
ANR	8091299	RelationalExpression	count < 8		8090518	0		<			
ANR	8091300	Identifier	count		8090518	0					
ANR	8091301	PrimaryExpression	8		8090518	1					
ANR	8091302	ReturnStatement	return e_Range ;	703:24:27024:27038	8090518	1	True				
ANR	8091303	Identifier	e_Range		8090518	0					
ANR	8091304	CompoundStatement		177:24:7410:7439	8090518	6					
ANR	8091305	IdentifierDeclStatement	uint num_components = data [ 6 ] ;	705:24:27086:27115	8090518	0	True				
ANR	8091306	IdentifierDecl	num_components = data [ 6 ]		8090518	0					
ANR	8091307	IdentifierDeclType	uint		8090518	0					
ANR	8091308	Identifier	num_components		8090518	1					
ANR	8091309	AssignmentExpression	num_components = data [ 6 ]		8090518	2		=			
ANR	8091310	Identifier	num_components		8090518	0					
ANR	8091311	ArrayIndexing	data [ 6 ]		8090518	1					
ANR	8091312	Identifier	data		8090518	0					
ANR	8091313	PrimaryExpression	6		8090518	1					
ANR	8091314	IfStatement	if ( count != 8 + num_components * 6 + 2 )		8090518	1					
ANR	8091315	Condition	count != 8 + num_components * 6 + 2	707:28:27146:27180	8090518	0	True				
ANR	8091316	EqualityExpression	count != 8 + num_components * 6 + 2		8090518	0		!=			
ANR	8091317	Identifier	count		8090518	0					
ANR	8091318	AdditiveExpression	8 + num_components * 6 + 2		8090518	1		+			
ANR	8091319	PrimaryExpression	8		8090518	0					
ANR	8091320	AdditiveExpression	num_components * 6 + 2		8090518	1		+			
ANR	8091321	MultiplicativeExpression	num_components * 6		8090518	0		*			
ANR	8091322	Identifier	num_components		8090518	0					
ANR	8091323	PrimaryExpression	6		8090518	1					
ANR	8091324	PrimaryExpression	2		8090518	1					
ANR	8091325	ReturnStatement	return e_Range ;	708:28:27211:27225	8090518	1	True				
ANR	8091326	Identifier	e_Range		8090518	0					
ANR	8091327	BreakStatement	break ;	710:20:27269:27274	8090518	7	True				
ANR	8091328	Label	default :	711:16:27292:27299	8090518	8	True				
ANR	8091329	Identifier	default		8090518	0					
ANR	8091330	ReturnStatement	return e_Range ;	712:20:27321:27335	8090518	9	True				
ANR	8091331	Identifier	e_Range		8090518	0					
ANR	8091332	BreakStatement	break ;	714:12:27363:27368	8090518	6	True				
ANR	8091333	Label	case pccd_truetype :	715:8:27378:27396	8090518	7	True				
ANR	8091334	Identifier	pccd_truetype		8090518	0					
ANR	8091335	IfStatement	if ( format != pcfh_truetype && format != pcfh_truetype_large )		8090518	8					
ANR	8091336	Condition	format != pcfh_truetype && format != pcfh_truetype_large	716:16:27414:27469	8090518	0	True				
ANR	8091337	AndExpression	format != pcfh_truetype && format != pcfh_truetype_large		8090518	0		&&			
ANR	8091338	EqualityExpression	format != pcfh_truetype		8090518	0		!=			
ANR	8091339	Identifier	format		8090518	0					
ANR	8091340	Identifier	pcfh_truetype		8090518	1					
ANR	8091341	EqualityExpression	format != pcfh_truetype_large		8090518	1		!=			
ANR	8091342	Identifier	format		8090518	0					
ANR	8091343	Identifier	pcfh_truetype_large		8090518	1					
ANR	8091344	ReturnStatement	return e_Range ;	717:16:27488:27502	8090518	1	True				
ANR	8091345	Identifier	e_Range		8090518	0					
ANR	8091346	BreakStatement	break ;	718:12:27516:27521	8090518	9	True				
ANR	8091347	Label	default :	719:8:27531:27538	8090518	10	True				
ANR	8091348	Identifier	default		8090518	0					
ANR	8091349	ReturnStatement	return e_Range ;	720:12:27552:27566	8090518	11	True				
ANR	8091350	Identifier	e_Range		8090518	0					
ANR	8091351	IfStatement	if ( char_data == 0 )		8090518	15					
ANR	8091352	Condition	char_data == 0	726:8:27763:27776	8090518	0	True				
ANR	8091353	EqualityExpression	char_data == 0		8090518	0		==			
ANR	8091354	Identifier	char_data		8090518	0					
ANR	8091355	PrimaryExpression	0		8090518	1					
ANR	8091356	CompoundStatement		198:24:8103:8103	8090518	1					
ANR	8091357	ExpressionStatement	"char_data = gs_alloc_bytes ( pcs -> memory , font_data_size , ""pcl_character_data"" )"	727:8:27789:27901	8090518	0	True				
ANR	8091358	AssignmentExpression	"char_data = gs_alloc_bytes ( pcs -> memory , font_data_size , ""pcl_character_data"" )"		8090518	0		=			
ANR	8091359	Identifier	char_data		8090518	0					
ANR	8091360	CallExpression	"gs_alloc_bytes ( pcs -> memory , font_data_size , ""pcl_character_data"" )"		8090518	1					
ANR	8091361	Callee	gs_alloc_bytes		8090518	0					
ANR	8091362	Identifier	gs_alloc_bytes		8090518	0					
ANR	8091363	ArgumentList	pcs -> memory		8090518	1					
ANR	8091364	Argument	pcs -> memory		8090518	0					
ANR	8091365	PtrMemberAccess	pcs -> memory		8090518	0					
ANR	8091366	Identifier	pcs		8090518	0					
ANR	8091367	Identifier	memory		8090518	1					
ANR	8091368	Argument	font_data_size		8090518	1					
ANR	8091369	Identifier	font_data_size		8090518	0					
ANR	8091370	Argument	"""pcl_character_data"""		8090518	2					
ANR	8091371	PrimaryExpression	"""pcl_character_data"""		8090518	0					
ANR	8091372	IfStatement	if ( char_data == 0 )		8090518	1					
ANR	8091373	Condition	char_data == 0	729:12:27915:27928	8090518	0	True				
ANR	8091374	EqualityExpression	char_data == 0		8090518	0		==			
ANR	8091375	Identifier	char_data		8090518	0					
ANR	8091376	PrimaryExpression	0		8090518	1					
ANR	8091377	ExpressionStatement	return_error ( e_Memory )	730:12:27943:27965	8090518	1	True				
ANR	8091378	CallExpression	return_error ( e_Memory )		8090518	0					
ANR	8091379	Callee	return_error		8090518	0					
ANR	8091380	Identifier	return_error		8090518	0					
ANR	8091381	ArgumentList	e_Memory		8090518	1					
ANR	8091382	Argument	e_Memory		8090518	0					
ANR	8091383	Identifier	e_Memory		8090518	0					
ANR	8091384	ExpressionStatement	"memset ( char_data , 0 , font_data_size )"	731:8:27975:28011	8090518	2	True				
ANR	8091385	CallExpression	"memset ( char_data , 0 , font_data_size )"		8090518	0					
ANR	8091386	Callee	memset		8090518	0					
ANR	8091387	Identifier	memset		8090518	0					
ANR	8091388	ArgumentList	char_data		8090518	1					
ANR	8091389	Argument	char_data		8090518	0					
ANR	8091390	Identifier	char_data		8090518	0					
ANR	8091391	Argument	0		8090518	1					
ANR	8091392	PrimaryExpression	0		8090518	0					
ANR	8091393	Argument	font_data_size		8090518	2					
ANR	8091394	Identifier	font_data_size		8090518	0					
ANR	8091395	ExpressionStatement	"memcpy ( char_data , data , min ( count , font_data_size ) )"	733:8:28083:28134	8090518	3	True				
ANR	8091396	CallExpression	"memcpy ( char_data , data , min ( count , font_data_size ) )"		8090518	0					
ANR	8091397	Callee	memcpy		8090518	0					
ANR	8091398	Identifier	memcpy		8090518	0					
ANR	8091399	ArgumentList	char_data		8090518	1					
ANR	8091400	Argument	char_data		8090518	0					
ANR	8091401	Identifier	char_data		8090518	0					
ANR	8091402	Argument	data		8090518	1					
ANR	8091403	Identifier	data		8090518	0					
ANR	8091404	Argument	"min ( count , font_data_size )"		8090518	2					
ANR	8091405	CallExpression	"min ( count , font_data_size )"		8090518	0					
ANR	8091406	Callee	min		8090518	0					
ANR	8091407	Identifier	min		8090518	0					
ANR	8091408	ArgumentList	count		8090518	1					
ANR	8091409	Argument	count		8090518	0					
ANR	8091410	Identifier	count		8090518	0					
ANR	8091411	Argument	font_data_size		8090518	1					
ANR	8091412	Identifier	font_data_size		8090518	0					
ANR	8091413	IfStatement	if ( data [ 0 ] == pccd_bitmap && data [ 3 ] == 1 && font_data_size > count )		8090518	4					
ANR	8091414	Condition	data [ 0 ] == pccd_bitmap && data [ 3 ] == 1 && font_data_size > count	735:12:28228:28291	8090518	0	True				
ANR	8091415	AndExpression	data [ 0 ] == pccd_bitmap && data [ 3 ] == 1 && font_data_size > count		8090518	0		&&			
ANR	8091416	EqualityExpression	data [ 0 ] == pccd_bitmap		8090518	0		==			
ANR	8091417	ArrayIndexing	data [ 0 ]		8090518	0					
ANR	8091418	Identifier	data		8090518	0					
ANR	8091419	PrimaryExpression	0		8090518	1					
ANR	8091420	Identifier	pccd_bitmap		8090518	1					
ANR	8091421	AndExpression	data [ 3 ] == 1 && font_data_size > count		8090518	1		&&			
ANR	8091422	EqualityExpression	data [ 3 ] == 1		8090518	0		==			
ANR	8091423	ArrayIndexing	data [ 3 ]		8090518	0					
ANR	8091424	Identifier	data		8090518	0					
ANR	8091425	PrimaryExpression	3		8090518	1					
ANR	8091426	PrimaryExpression	1		8090518	1					
ANR	8091427	RelationalExpression	font_data_size > count		8090518	1		>			
ANR	8091428	Identifier	font_data_size		8090518	0					
ANR	8091429	Identifier	count		8090518	1					
ANR	8091430	CompoundStatement		208:14:8663:8663	8090518	1					
ANR	8091431	ExpressionStatement	pcs -> soft_font_char_data = char_data	737:12:28353:28389	8090518	0	True				
ANR	8091432	AssignmentExpression	pcs -> soft_font_char_data = char_data		8090518	0		=			
ANR	8091433	PtrMemberAccess	pcs -> soft_font_char_data		8090518	0					
ANR	8091434	Identifier	pcs		8090518	0					
ANR	8091435	Identifier	soft_font_char_data		8090518	1					
ANR	8091436	Identifier	char_data		8090518	1					
ANR	8091437	ExpressionStatement	pcs -> soft_font_count = count	738:12:28403:28431	8090518	1	True				
ANR	8091438	AssignmentExpression	pcs -> soft_font_count = count		8090518	0		=			
ANR	8091439	PtrMemberAccess	pcs -> soft_font_count		8090518	0					
ANR	8091440	Identifier	pcs		8090518	0					
ANR	8091441	Identifier	soft_font_count		8090518	1					
ANR	8091442	Identifier	count		8090518	1					
ANR	8091443	ElseStatement	else		8090518	0					
ANR	8091444	CompoundStatement		211:15:8772:8772	8090518	0					
ANR	8091445	ExpressionStatement	pcs -> soft_font_char_data = 0	740:12:28462:28490	8090518	0	True				
ANR	8091446	AssignmentExpression	pcs -> soft_font_char_data = 0		8090518	0		=			
ANR	8091447	PtrMemberAccess	pcs -> soft_font_char_data		8090518	0					
ANR	8091448	Identifier	pcs		8090518	0					
ANR	8091449	Identifier	soft_font_char_data		8090518	1					
ANR	8091450	PrimaryExpression	0		8090518	1					
ANR	8091451	ExpressionStatement	pcs -> soft_font_count = 0	741:12:28504:28528	8090518	1	True				
ANR	8091452	AssignmentExpression	pcs -> soft_font_count = 0		8090518	0		=			
ANR	8091453	PtrMemberAccess	pcs -> soft_font_count		8090518	0					
ANR	8091454	Identifier	pcs		8090518	0					
ANR	8091455	Identifier	soft_font_count		8090518	1					
ANR	8091456	PrimaryExpression	0		8090518	1					
ANR	8091457	CompoundStatement		218:8:8928:8992	8090518	16					
ANR	8091458	IdentifierDeclStatement	pcl_font_header_t * header = ( pcl_font_header_t * ) plfont -> header ;	746:8:28604:28668	8090518	0	True				
ANR	8091459	IdentifierDecl	* header = ( pcl_font_header_t * ) plfont -> header		8090518	0					
ANR	8091460	IdentifierDeclType	pcl_font_header_t *		8090518	0					
ANR	8091461	Identifier	header		8090518	1					
ANR	8091462	AssignmentExpression	* header = ( pcl_font_header_t * ) plfont -> header		8090518	2		=			
ANR	8091463	Identifier	header		8090518	0					
ANR	8091464	CastExpression	( pcl_font_header_t * ) plfont -> header		8090518	1					
ANR	8091465	CastTarget	pcl_font_header_t *		8090518	0					
ANR	8091466	PtrMemberAccess	plfont -> header		8090518	1					
ANR	8091467	Identifier	plfont		8090518	0					
ANR	8091468	Identifier	header		8090518	1					
ANR	8091469	ExpressionStatement	plfont -> orient = header -> Orientation	748:8:28679:28715	8090518	1	True				
ANR	8091470	AssignmentExpression	plfont -> orient = header -> Orientation		8090518	0		=			
ANR	8091471	PtrMemberAccess	plfont -> orient		8090518	0					
ANR	8091472	Identifier	plfont		8090518	0					
ANR	8091473	Identifier	orient		8090518	1					
ANR	8091474	PtrMemberAccess	header -> Orientation		8090518	1					
ANR	8091475	Identifier	header		8090518	0					
ANR	8091476	Identifier	Orientation		8090518	1					
ANR	8091477	ExpressionStatement	"code = pl_font_add_glyph ( plfont , pcs -> character_code , char_data , font_data_size )"	750:4:28727:28807	8090518	17	True				
ANR	8091478	AssignmentExpression	"code = pl_font_add_glyph ( plfont , pcs -> character_code , char_data , font_data_size )"		8090518	0		=			
ANR	8091479	Identifier	code		8090518	0					
ANR	8091480	CallExpression	"pl_font_add_glyph ( plfont , pcs -> character_code , char_data , font_data_size )"		8090518	1					
ANR	8091481	Callee	pl_font_add_glyph		8090518	0					
ANR	8091482	Identifier	pl_font_add_glyph		8090518	0					
ANR	8091483	ArgumentList	plfont		8090518	1					
ANR	8091484	Argument	plfont		8090518	0					
ANR	8091485	Identifier	plfont		8090518	0					
ANR	8091486	Argument	pcs -> character_code		8090518	1					
ANR	8091487	PtrMemberAccess	pcs -> character_code		8090518	0					
ANR	8091488	Identifier	pcs		8090518	0					
ANR	8091489	Identifier	character_code		8090518	1					
ANR	8091490	Argument	char_data		8090518	2					
ANR	8091491	Identifier	char_data		8090518	0					
ANR	8091492	Argument	font_data_size		8090518	3					
ANR	8091493	Identifier	font_data_size		8090518	0					
ANR	8091494	IfStatement	if ( code < 0 )		8090518	18					
ANR	8091495	Condition	code < 0	751:8:28817:28824	8090518	0	True				
ANR	8091496	RelationalExpression	code < 0		8090518	0		<			
ANR	8091497	Identifier	code		8090518	0					
ANR	8091498	PrimaryExpression	0		8090518	1					
ANR	8091499	ReturnStatement	return code ;	752:8:28835:28846	8090518	1	True				
ANR	8091500	Identifier	code		8090518	0					
ANR	8091501	IfStatement	if ( data [ 0 ] == pccd_truetype )		8090518	19					
ANR	8091502	Condition	data [ 0 ] == pccd_truetype	754:8:28886:28909	8090518	0	True				
ANR	8091503	EqualityExpression	data [ 0 ] == pccd_truetype		8090518	0		==			
ANR	8091504	ArrayIndexing	data [ 0 ]		8090518	0					
ANR	8091505	Identifier	data		8090518	0					
ANR	8091506	PrimaryExpression	0		8090518	1					
ANR	8091507	Identifier	pccd_truetype		8090518	1					
ANR	8091508	ExpressionStatement	"code = pl_font_disable_composite_metrics ( plfont , pcs -> character_code )"	755:8:28920:28989	8090518	1	True				
ANR	8091509	AssignmentExpression	"code = pl_font_disable_composite_metrics ( plfont , pcs -> character_code )"		8090518	0		=			
ANR	8091510	Identifier	code		8090518	0					
ANR	8091511	CallExpression	"pl_font_disable_composite_metrics ( plfont , pcs -> character_code )"		8090518	1					
ANR	8091512	Callee	pl_font_disable_composite_metrics		8090518	0					
ANR	8091513	Identifier	pl_font_disable_composite_metrics		8090518	0					
ANR	8091514	ArgumentList	plfont		8090518	1					
ANR	8091515	Argument	plfont		8090518	0					
ANR	8091516	Identifier	plfont		8090518	0					
ANR	8091517	Argument	pcs -> character_code		8090518	1					
ANR	8091518	PtrMemberAccess	pcs -> character_code		8090518	0					
ANR	8091519	Identifier	pcs		8090518	0					
ANR	8091520	Identifier	character_code		8090518	1					
ANR	8091521	ReturnStatement	return code ;	757:4:29031:29042	8090518	20	True				
ANR	8091522	Identifier	code		8090518	0					
ANR	8091523	Statement	undef	758:1:29045:29049	8090518	21	True				
ANR	8091524	Statement	plfont	758:7:29051:29056	8090518	22	True				
ANR	8091525	ReturnType	static int		8090518	1					
ANR	8091526	Identifier	pcl_character_data		8090518	2					
ANR	8091527	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8090518	3					
ANR	8091528	Parameter	pcl_args_t * pargs	528:19:19636:19653	8090518	0	True				
ANR	8091529	ParameterType	pcl_args_t *		8090518	0					
ANR	8091530	Identifier	pargs		8090518	1					
ANR	8091531	Parameter	pcl_state_t * pcs	528:39:19656:19672	8090518	1	True				
ANR	8091532	ParameterType	pcl_state_t *		8090518	0					
ANR	8091533	Identifier	pcs		8090518	1					
ANR	8091534	CFGEntryNode	ENTRY		8090518		True				
ANR	8091535	CFGExitNode	EXIT		8090518		True				
ANR	8091536	Symbol	e_Unimplemented		8090518						
ANR	8091537	Symbol	* x		8090518						
ANR	8091538	Symbol	& value		8090518						
ANR	8091539	Symbol	data		8090518						
ANR	8091540	Symbol	plfont -> header		8090518						
ANR	8091541	Symbol	pcfh_truetype		8090518						
ANR	8091542	Symbol	* pcs		8090518						
ANR	8091543	Symbol	plfont		8090518						
ANR	8091544	Symbol	plfont -> orient		8090518						
ANR	8091545	Symbol	pccd_truetype		8090518						
ANR	8091546	Symbol	pargs		8090518						
ANR	8091547	Symbol	& pcs -> soft_fonts		8090518						
ANR	8091548	Symbol	* plfont -> header		8090518						
ANR	8091549	Symbol	pl_get_int16		8090518						
ANR	8091550	Symbol	gs_debug_c		8090518						
ANR	8091551	Symbol	pcs -> memory		8090518						
ANR	8091552	Symbol	height		8090518						
ANR	8091553	Symbol	data_size		8090518						
ANR	8091554	Symbol	pl_font_disable_composite_metrics		8090518						
ANR	8091555	Symbol	current_font_id_size		8090518						
ANR	8091556	Symbol	* * plfont		8090518						
ANR	8091557	Symbol	deltax		8090518						
ANR	8091558	Symbol	count		8090518						
ANR	8091559	Symbol	format		8090518						
ANR	8091560	Symbol	* header		8090518						
ANR	8091561	Symbol	pccd_bitmap		8090518						
ANR	8091562	Symbol	loff		8090518						
ANR	8091563	Symbol	current_font_id		8090518						
ANR	8091564	Symbol	* src ++		8090518						
ANR	8091565	Symbol	pl_font_add_glyph		8090518						
ANR	8091566	Symbol	header		8090518						
ANR	8091567	Symbol	font_data_size		8090518						
ANR	8091568	Symbol	code		8090518						
ANR	8091569	Symbol	reps		8090518						
ANR	8091570	Symbol	pcfh_truetype_large		8090518						
ANR	8091571	Symbol	color		8090518						
ANR	8091572	Symbol	width_bytes		8090518						
ANR	8091573	Symbol	header -> Orientation		8090518						
ANR	8091574	Symbol	gs_object_size		8090518						
ANR	8091575	Symbol	toff		8090518						
ANR	8091576	Symbol	min		8090518						
ANR	8091577	Symbol	pcfh_intellifont_bound		8090518						
ANR	8091578	Symbol	e_Memory		8090518						
ANR	8091579	Symbol	rlen		8090518						
ANR	8091580	Symbol	end		8090518						
ANR	8091581	Symbol	row		8090518						
ANR	8091582	Symbol	value		8090518						
ANR	8091583	Symbol	e_Range		8090518						
ANR	8091584	Symbol	pcs		8090518						
ANR	8091585	Symbol	pcfh_resolution_bitmap		8090518						
ANR	8091586	Symbol	pl_get_uint16		8090518						
ANR	8091587	Symbol	gs_alloc_bytes		8090518						
ANR	8091588	Symbol	pcs -> soft_font_count		8090518						
ANR	8091589	Symbol	pcfh_bitmap		8090518						
ANR	8091590	Symbol	src		8090518						
ANR	8091591	Symbol	num_components		8090518						
ANR	8091592	Symbol	char_data		8090518						
ANR	8091593	Symbol	uint_arg		8090518						
ANR	8091594	Symbol	pl_dict_find_no_stack		8090518						
ANR	8091595	Symbol	arg_data		8090518						
ANR	8091596	Symbol	pcs -> character_code		8090518						
ANR	8091597	Symbol	* plfont		8090518						
ANR	8091598	Symbol	width		8090518						
ANR	8091599	Symbol	x		8090518						
ANR	8091600	Symbol	pcfh_intellifont_unbound		8090518						
ANR	8091601	Symbol	y		8090518						
ANR	8091602	Symbol	pcs -> soft_font_char_data		8090518						
ANR	8091603	Symbol	( ( const pcl_font_header_t * ) plfont -> header ) -> HeaderFormat		8090518						
ANR	8091604	Symbol	* data		8090518						
ANR	8091605	ClassDef	alphanumeric_data_s	762:8:29112:29207							
ANR	8091606	DeclStmt									
ANR	8091607	Decl							byte	byte	operation
ANR	8091608	DeclStmt									
ANR	8091609	Decl							byte	byte [ 512 ]	string_id
ANR	8091610	DeclStmt									
ANR	8091611	Decl							alphanumeric_data_s	alphanumeric_data_s	alphanumeric_data_t
ANR	8091612	ClassDef	resource_type_enum	768:8:29218:29299							
ANR	8091613	DeclStmt									
ANR	8091614	Decl							resource_type_enum	resource_type_enum	resource_type_t
ANR	8091615	Function	pcl_find_resource	778:0:29431:32458							
ANR	8091616	FunctionDef	"pcl_find_resource (pcl_state_t * pcs , const byte sid [ ] , int sid_size , resource_type_t resource_type)"		8091615	0					
ANR	8091617	CompoundStatement		782:0:29578:32458	8091615	0					
ANR	8091618	IdentifierDeclStatement	void * value = NULL ;	784:4:29589:29607	8091615	0	True				
ANR	8091619	IdentifierDecl	* value = NULL		8091615	0					
ANR	8091620	IdentifierDeclType	void *		8091615	0					
ANR	8091621	Identifier	value		8091615	1					
ANR	8091622	AssignmentExpression	* value = NULL		8091615	2		=			
ANR	8091623	Identifier	NULL		8091615	0					
ANR	8091624	Identifier	NULL		8091615	1					
ANR	8091625	IdentifierDeclStatement	char alphaname [ 512 + 1 ] ;	785:4:29613:29636	8091615	1	True				
ANR	8091626	IdentifierDecl	alphaname [ 512 + 1 ]		8091615	0					
ANR	8091627	IdentifierDeclType	char [ 512 + 1 ]		8091615	0					
ANR	8091628	Identifier	alphaname		8091615	1					
ANR	8091629	AdditiveExpression	512 + 1		8091615	2		+			
ANR	8091630	PrimaryExpression	512		8091615	0					
ANR	8091631	PrimaryExpression	1		8091615	1					
ANR	8091632	IdentifierDeclStatement	long int size ;	786:4:29642:29655	8091615	2	True				
ANR	8091633	IdentifierDecl	size		8091615	0					
ANR	8091634	IdentifierDeclType	long int		8091615	0					
ANR	8091635	Identifier	size		8091615	1					
ANR	8091636	IdentifierDeclStatement	int c ;	787:4:29661:29666	8091615	3	True				
ANR	8091637	IdentifierDecl	c		8091615	0					
ANR	8091638	IdentifierDeclType	int		8091615	0					
ANR	8091639	Identifier	c		8091615	1					
ANR	8091640	IdentifierDeclStatement	int code = 0 ;	788:4:29672:29684	8091615	4	True				
ANR	8091641	IdentifierDecl	code = 0		8091615	0					
ANR	8091642	IdentifierDeclType	int		8091615	0					
ANR	8091643	Identifier	code		8091615	1					
ANR	8091644	AssignmentExpression	code = 0		8091615	2		=			
ANR	8091645	Identifier	code		8091615	0					
ANR	8091646	PrimaryExpression	0		8091615	1					
ANR	8091647	ForStatement	for ( c = 0 ; c < sid_size && c < 512 ; c ++ )		8091615	5					
ANR	8091648	ForInit	c = 0 ;	791:9:29767:29772	8091615	0	True				
ANR	8091649	AssignmentExpression	c = 0		8091615	0		=			
ANR	8091650	Identifier	c		8091615	0					
ANR	8091651	PrimaryExpression	0		8091615	1					
ANR	8091652	Condition	c < sid_size && c < 512	791:16:29774:29796	8091615	1	True				
ANR	8091653	AndExpression	c < sid_size && c < 512		8091615	0		&&			
ANR	8091654	RelationalExpression	c < sid_size		8091615	0		<			
ANR	8091655	Identifier	c		8091615	0					
ANR	8091656	Identifier	sid_size		8091615	1					
ANR	8091657	RelationalExpression	c < 512		8091615	1		<			
ANR	8091658	Identifier	c		8091615	0					
ANR	8091659	PrimaryExpression	512		8091615	1					
ANR	8091660	PostIncDecOperationExpression	c ++	791:41:29799:29801	8091615	2	True				
ANR	8091661	Identifier	c		8091615	0					
ANR	8091662	IncDec	++		8091615	1					
ANR	8091663	ExpressionStatement	alphaname [ c ] = sid [ c ]	792:8:29812:29833	8091615	3	True				
ANR	8091664	AssignmentExpression	alphaname [ c ] = sid [ c ]		8091615	0		=			
ANR	8091665	ArrayIndexing	alphaname [ c ]		8091615	0					
ANR	8091666	Identifier	alphaname		8091615	0					
ANR	8091667	Identifier	c		8091615	1					
ANR	8091668	ArrayIndexing	sid [ c ]		8091615	1					
ANR	8091669	Identifier	sid		8091615	0					
ANR	8091670	Identifier	c		8091615	1					
ANR	8091671	ExpressionStatement	alphaname [ c ] = '\\0'	793:4:29839:29858	8091615	6	True				
ANR	8091672	AssignmentExpression	alphaname [ c ] = '\\0'		8091615	0		=			
ANR	8091673	ArrayIndexing	alphaname [ c ]		8091615	0					
ANR	8091674	Identifier	alphaname		8091615	0					
ANR	8091675	Identifier	c		8091615	1					
ANR	8091676	PrimaryExpression	'\\0'		8091615	1					
ANR	8091677	ExpressionStatement	"size = pjl_proc_get_named_resource_size ( pcs -> pjls , alphaname )"	795:4:29865:29926	8091615	7	True				
ANR	8091678	AssignmentExpression	"size = pjl_proc_get_named_resource_size ( pcs -> pjls , alphaname )"		8091615	0		=			
ANR	8091679	Identifier	size		8091615	0					
ANR	8091680	CallExpression	"pjl_proc_get_named_resource_size ( pcs -> pjls , alphaname )"		8091615	1					
ANR	8091681	Callee	pjl_proc_get_named_resource_size		8091615	0					
ANR	8091682	Identifier	pjl_proc_get_named_resource_size		8091615	0					
ANR	8091683	ArgumentList	pcs -> pjls		8091615	1					
ANR	8091684	Argument	pcs -> pjls		8091615	0					
ANR	8091685	PtrMemberAccess	pcs -> pjls		8091615	0					
ANR	8091686	Identifier	pcs		8091615	0					
ANR	8091687	Identifier	pjls		8091615	1					
ANR	8091688	Argument	alphaname		8091615	1					
ANR	8091689	Identifier	alphaname		8091615	0					
ANR	8091690	IfStatement	if ( size == 0 )		8091615	8					
ANR	8091691	Condition	size == 0	797:8:29965:29973	8091615	0	True				
ANR	8091692	EqualityExpression	size == 0		8091615	0		==			
ANR	8091693	Identifier	size		8091615	0					
ANR	8091694	PrimaryExpression	0		8091615	1					
ANR	8091695	ReturnStatement	return 0 ;	798:8:29984:29992	8091615	1	True				
ANR	8091696	PrimaryExpression	0		8091615	0					
ANR	8091697	ExpressionStatement	"value = gs_alloc_bytes ( pcs -> memory , size + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) , ""resource"" )"	802:4:30133:30357	8091615	9	True				
ANR	8091698	AssignmentExpression	"value = gs_alloc_bytes ( pcs -> memory , size + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) , ""resource"" )"		8091615	0		=			
ANR	8091699	Identifier	value		8091615	0					
ANR	8091700	CallExpression	"gs_alloc_bytes ( pcs -> memory , size + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) , ""resource"" )"		8091615	1					
ANR	8091701	Callee	gs_alloc_bytes		8091615	0					
ANR	8091702	Identifier	gs_alloc_bytes		8091615	0					
ANR	8091703	ArgumentList	pcs -> memory		8091615	1					
ANR	8091704	Argument	pcs -> memory		8091615	0					
ANR	8091705	PtrMemberAccess	pcs -> memory		8091615	0					
ANR	8091706	Identifier	pcs		8091615	0					
ANR	8091707	Identifier	memory		8091615	1					
ANR	8091708	Argument	size + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 )		8091615	1					
ANR	8091709	AdditiveExpression	size + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 )		8091615	0		+			
ANR	8091710	Identifier	size		8091615	0					
ANR	8091711	ConditionalExpression	resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0		8091615	1					
ANR	8091712	Condition	resource_type == macro_resource		8091615	0					
ANR	8091713	EqualityExpression	resource_type == macro_resource		8091615	0		==			
ANR	8091714	Identifier	resource_type		8091615	0					
ANR	8091715	Identifier	macro_resource		8091615	1					
ANR	8091716	SizeofExpression	sizeof ( pcl_macro_t )		8091615	1					
ANR	8091717	Sizeof	sizeof		8091615	0					
ANR	8091718	SizeofOperand	pcl_macro_t		8091615	1					
ANR	8091719	PrimaryExpression	0		8091615	2					
ANR	8091720	Argument	"""resource"""		8091615	2					
ANR	8091721	PrimaryExpression	"""resource"""		8091615	0					
ANR	8091722	IfStatement	if ( value == NULL )		8091615	10					
ANR	8091723	Condition	value == NULL	808:8:30376:30388	8091615	0	True				
ANR	8091724	EqualityExpression	value == NULL		8091615	0		==			
ANR	8091725	Identifier	value		8091615	0					
ANR	8091726	Identifier	NULL		8091615	1					
ANR	8091727	ExpressionStatement	return_error ( gs_error_Fatal )	809:8:30399:30427	8091615	1	True				
ANR	8091728	CallExpression	return_error ( gs_error_Fatal )		8091615	0					
ANR	8091729	Callee	return_error		8091615	0					
ANR	8091730	Identifier	return_error		8091615	0					
ANR	8091731	ArgumentList	gs_error_Fatal		8091615	1					
ANR	8091732	Argument	gs_error_Fatal		8091615	0					
ANR	8091733	Identifier	gs_error_Fatal		8091615	0					
ANR	8091734	IfStatement	"if ( pjl_proc_get_named_resource ( pcs -> pjls , alphaname , ( byte * ) value + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) ) < 0 )"		8091615	11					
ANR	8091735	Condition	"pjl_proc_get_named_resource ( pcs -> pjls , alphaname , ( byte * ) value + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) ) < 0"	812:8:30443:30694	8091615	0	True				
ANR	8091736	RelationalExpression	"pjl_proc_get_named_resource ( pcs -> pjls , alphaname , ( byte * ) value + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) ) < 0"		8091615	0		<			
ANR	8091737	CallExpression	"pjl_proc_get_named_resource ( pcs -> pjls , alphaname , ( byte * ) value + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 ) )"		8091615	0					
ANR	8091738	Callee	pjl_proc_get_named_resource		8091615	0					
ANR	8091739	Identifier	pjl_proc_get_named_resource		8091615	0					
ANR	8091740	ArgumentList	pcs -> pjls		8091615	1					
ANR	8091741	Argument	pcs -> pjls		8091615	0					
ANR	8091742	PtrMemberAccess	pcs -> pjls		8091615	0					
ANR	8091743	Identifier	pcs		8091615	0					
ANR	8091744	Identifier	pjls		8091615	1					
ANR	8091745	Argument	alphaname		8091615	1					
ANR	8091746	Identifier	alphaname		8091615	0					
ANR	8091747	Argument	( byte * ) value + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 )		8091615	2					
ANR	8091748	AdditiveExpression	( byte * ) value + ( resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0 )		8091615	0		+			
ANR	8091749	CastExpression	( byte * ) value		8091615	0					
ANR	8091750	CastTarget	byte *		8091615	0					
ANR	8091751	Identifier	value		8091615	1					
ANR	8091752	ConditionalExpression	resource_type == macro_resource ? sizeof ( pcl_macro_t ) : 0		8091615	1					
ANR	8091753	Condition	resource_type == macro_resource		8091615	0					
ANR	8091754	EqualityExpression	resource_type == macro_resource		8091615	0		==			
ANR	8091755	Identifier	resource_type		8091615	0					
ANR	8091756	Identifier	macro_resource		8091615	1					
ANR	8091757	SizeofExpression	sizeof ( pcl_macro_t )		8091615	1					
ANR	8091758	Sizeof	sizeof		8091615	0					
ANR	8091759	SizeofOperand	pcl_macro_t		8091615	1					
ANR	8091760	PrimaryExpression	0		8091615	2					
ANR	8091761	PrimaryExpression	0		8091615	1					
ANR	8091762	CompoundStatement		34:72:1118:1118	8091615	1					
ANR	8091763	ExpressionStatement	"gs_free_object ( pcs -> memory , value , ""resource"" )"	816:8:30707:30753	8091615	0	True				
ANR	8091764	CallExpression	"gs_free_object ( pcs -> memory , value , ""resource"" )"		8091615	0					
ANR	8091765	Callee	gs_free_object		8091615	0					
ANR	8091766	Identifier	gs_free_object		8091615	0					
ANR	8091767	ArgumentList	pcs -> memory		8091615	1					
ANR	8091768	Argument	pcs -> memory		8091615	0					
ANR	8091769	PtrMemberAccess	pcs -> memory		8091615	0					
ANR	8091770	Identifier	pcs		8091615	0					
ANR	8091771	Identifier	memory		8091615	1					
ANR	8091772	Argument	value		8091615	1					
ANR	8091773	Identifier	value		8091615	0					
ANR	8091774	Argument	"""resource"""		8091615	2					
ANR	8091775	PrimaryExpression	"""resource"""		8091615	0					
ANR	8091776	ExpressionStatement	return_error ( gs_error_Fatal )	817:8:30763:30791	8091615	1	True				
ANR	8091777	CallExpression	return_error ( gs_error_Fatal )		8091615	0					
ANR	8091778	Callee	return_error		8091615	0					
ANR	8091779	Identifier	return_error		8091615	0					
ANR	8091780	ArgumentList	gs_error_Fatal		8091615	1					
ANR	8091781	Argument	gs_error_Fatal		8091615	0					
ANR	8091782	Identifier	gs_error_Fatal		8091615	0					
ANR	8091783	IfStatement	if ( resource_type == font_resource )		8091615	12					
ANR	8091784	Condition	resource_type == font_resource	823:8:30952:30981	8091615	0	True				
ANR	8091785	EqualityExpression	resource_type == font_resource		8091615	0		==			
ANR	8091786	Identifier	resource_type		8091615	0					
ANR	8091787	Identifier	font_resource		8091615	1					
ANR	8091788	CompoundStatement		44:8:1445:1469	8091615	1					
ANR	8091789	IdentifierDeclStatement	stream_cursor_read r ;	824:8:30994:31014	8091615	0	True				
ANR	8091790	IdentifierDecl	r		8091615	0					
ANR	8091791	IdentifierDeclType	stream_cursor_read		8091615	0					
ANR	8091792	Identifier	r		8091615	1					
ANR	8091793	IdentifierDeclStatement	pcl_parser_state_t state ;	825:8:31024:31048	8091615	1	True				
ANR	8091794	IdentifierDecl	state		8091615	0					
ANR	8091795	IdentifierDeclType	pcl_parser_state_t		8091615	0					
ANR	8091796	Identifier	state		8091615	1					
ANR	8091797	ExpressionStatement	r . ptr = ( byte * ) value - 1	827:8:31071:31096	8091615	2	True				
ANR	8091798	AssignmentExpression	r . ptr = ( byte * ) value - 1		8091615	0		=			
ANR	8091799	MemberAccess	r . ptr		8091615	0					
ANR	8091800	Identifier	r		8091615	0					
ANR	8091801	Identifier	ptr		8091615	1					
ANR	8091802	AdditiveExpression	( byte * ) value - 1		8091615	1		-			
ANR	8091803	CastExpression	( byte * ) value		8091615	0					
ANR	8091804	CastTarget	byte *		8091615	0					
ANR	8091805	Identifier	value		8091615	1					
ANR	8091806	PrimaryExpression	1		8091615	1					
ANR	8091807	ExpressionStatement	r . limit = r . ptr + size	828:8:31106:31128	8091615	3	True				
ANR	8091808	AssignmentExpression	r . limit = r . ptr + size		8091615	0		=			
ANR	8091809	MemberAccess	r . limit		8091615	0					
ANR	8091810	Identifier	r		8091615	0					
ANR	8091811	Identifier	limit		8091615	1					
ANR	8091812	AdditiveExpression	r . ptr + size		8091615	1		+			
ANR	8091813	MemberAccess	r . ptr		8091615	0					
ANR	8091814	Identifier	r		8091615	0					
ANR	8091815	Identifier	ptr		8091615	1					
ANR	8091816	Identifier	size		8091615	1					
ANR	8091817	ExpressionStatement	state . definitions = pcs -> pcl_commands	829:8:31138:31175	8091615	4	True				
ANR	8091818	AssignmentExpression	state . definitions = pcs -> pcl_commands		8091615	0		=			
ANR	8091819	MemberAccess	state . definitions		8091615	0					
ANR	8091820	Identifier	state		8091615	0					
ANR	8091821	Identifier	definitions		8091615	1					
ANR	8091822	PtrMemberAccess	pcs -> pcl_commands		8091615	1					
ANR	8091823	Identifier	pcs		8091615	0					
ANR	8091824	Identifier	pcl_commands		8091615	1					
ANR	8091825	ExpressionStatement	pcl_process_init ( & state )	830:8:31185:31209	8091615	5	True				
ANR	8091826	CallExpression	pcl_process_init ( & state )		8091615	0					
ANR	8091827	Callee	pcl_process_init		8091615	0					
ANR	8091828	Identifier	pcl_process_init		8091615	0					
ANR	8091829	ArgumentList	& state		8091615	1					
ANR	8091830	Argument	& state		8091615	0					
ANR	8091831	UnaryOperationExpression	& state		8091615	0					
ANR	8091832	UnaryOperator	&		8091615	0					
ANR	8091833	Identifier	state		8091615	1					
ANR	8091834	ExpressionStatement	"code = pcl_process ( & state , pcs , & r )"	831:8:31219:31254	8091615	6	True				
ANR	8091835	AssignmentExpression	"code = pcl_process ( & state , pcs , & r )"		8091615	0		=			
ANR	8091836	Identifier	code		8091615	0					
ANR	8091837	CallExpression	"pcl_process ( & state , pcs , & r )"		8091615	1					
ANR	8091838	Callee	pcl_process		8091615	0					
ANR	8091839	Identifier	pcl_process		8091615	0					
ANR	8091840	ArgumentList	& state		8091615	1					
ANR	8091841	Argument	& state		8091615	0					
ANR	8091842	UnaryOperationExpression	& state		8091615	0					
ANR	8091843	UnaryOperator	&		8091615	0					
ANR	8091844	Identifier	state		8091615	1					
ANR	8091845	Argument	pcs		8091615	1					
ANR	8091846	Identifier	pcs		8091615	0					
ANR	8091847	Argument	& r		8091615	2					
ANR	8091848	UnaryOperationExpression	& r		8091615	0					
ANR	8091849	UnaryOperator	&		8091615	0					
ANR	8091850	Identifier	r		8091615	1					
ANR	8091851	IfStatement	if ( code < 0 )		8091615	7					
ANR	8091852	Condition	code < 0	832:12:31268:31275	8091615	0	True				
ANR	8091853	RelationalExpression	code < 0		8091615	0		<			
ANR	8091854	Identifier	code		8091615	0					
ANR	8091855	PrimaryExpression	0		8091615	1					
ANR	8091856	CompoundStatement		51:22:1699:1699	8091615	1					
ANR	8091857	ExpressionStatement	"gs_free_object ( pcs -> memory , value , ""resource"" )"	833:12:31292:31338	8091615	0	True				
ANR	8091858	CallExpression	"gs_free_object ( pcs -> memory , value , ""resource"" )"		8091615	0					
ANR	8091859	Callee	gs_free_object		8091615	0					
ANR	8091860	Identifier	gs_free_object		8091615	0					
ANR	8091861	ArgumentList	pcs -> memory		8091615	1					
ANR	8091862	Argument	pcs -> memory		8091615	0					
ANR	8091863	PtrMemberAccess	pcs -> memory		8091615	0					
ANR	8091864	Identifier	pcs		8091615	0					
ANR	8091865	Identifier	memory		8091615	1					
ANR	8091866	Argument	value		8091615	1					
ANR	8091867	Identifier	value		8091615	0					
ANR	8091868	Argument	"""resource"""		8091615	2					
ANR	8091869	PrimaryExpression	"""resource"""		8091615	0					
ANR	8091870	ExpressionStatement	return_error ( code )	834:12:31352:31370	8091615	1	True				
ANR	8091871	CallExpression	return_error ( code )		8091615	0					
ANR	8091872	Callee	return_error		8091615	0					
ANR	8091873	Identifier	return_error		8091615	0					
ANR	8091874	ArgumentList	code		8091615	1					
ANR	8091875	Argument	code		8091615	0					
ANR	8091876	Identifier	code		8091615	0					
ANR	8091877	IfStatement	if ( resource_type == macro_resource )		8091615	13					
ANR	8091878	Condition	resource_type == macro_resource	841:8:31603:31633	8091615	0	True				
ANR	8091879	EqualityExpression	resource_type == macro_resource		8091615	0		==			
ANR	8091880	Identifier	resource_type		8091615	0					
ANR	8091881	Identifier	macro_resource		8091615	1					
ANR	8091882	CompoundStatement		60:41:2057:2057	8091615	1					
ANR	8091883	ExpressionStatement	"code = pl_dict_put ( & pcs -> macros , current_macro_id , current_macro_id_size , value )"	842:8:31646:31726	8091615	0	True				
ANR	8091884	AssignmentExpression	"code = pl_dict_put ( & pcs -> macros , current_macro_id , current_macro_id_size , value )"		8091615	0		=			
ANR	8091885	Identifier	code		8091615	0					
ANR	8091886	CallExpression	"pl_dict_put ( & pcs -> macros , current_macro_id , current_macro_id_size , value )"		8091615	1					
ANR	8091887	Callee	pl_dict_put		8091615	0					
ANR	8091888	Identifier	pl_dict_put		8091615	0					
ANR	8091889	ArgumentList	& pcs -> macros		8091615	1					
ANR	8091890	Argument	& pcs -> macros		8091615	0					
ANR	8091891	UnaryOperationExpression	& pcs -> macros		8091615	0					
ANR	8091892	UnaryOperator	&		8091615	0					
ANR	8091893	PtrMemberAccess	pcs -> macros		8091615	1					
ANR	8091894	Identifier	pcs		8091615	0					
ANR	8091895	Identifier	macros		8091615	1					
ANR	8091896	Argument	current_macro_id		8091615	1					
ANR	8091897	Identifier	current_macro_id		8091615	0					
ANR	8091898	Argument	current_macro_id_size		8091615	2					
ANR	8091899	Identifier	current_macro_id_size		8091615	0					
ANR	8091900	Argument	value		8091615	3					
ANR	8091901	Identifier	value		8091615	0					
ANR	8091902	IfStatement	if ( code == 0 )		8091615	1					
ANR	8091903	Condition	code == 0	843:12:31740:31748	8091615	0	True				
ANR	8091904	EqualityExpression	code == 0		8091615	0		==			
ANR	8091905	Identifier	code		8091615	0					
ANR	8091906	PrimaryExpression	0		8091615	1					
ANR	8091907	ExpressionStatement	"code = pl_dict_put_synonym ( & pcs -> macros , current_macro_id , current_macro_id_size , sid , sid_size )"	844:12:31763:31898	8091615	1	True				
ANR	8091908	AssignmentExpression	"code = pl_dict_put_synonym ( & pcs -> macros , current_macro_id , current_macro_id_size , sid , sid_size )"		8091615	0		=			
ANR	8091909	Identifier	code		8091615	0					
ANR	8091910	CallExpression	"pl_dict_put_synonym ( & pcs -> macros , current_macro_id , current_macro_id_size , sid , sid_size )"		8091615	1					
ANR	8091911	Callee	pl_dict_put_synonym		8091615	0					
ANR	8091912	Identifier	pl_dict_put_synonym		8091615	0					
ANR	8091913	ArgumentList	& pcs -> macros		8091615	1					
ANR	8091914	Argument	& pcs -> macros		8091615	0					
ANR	8091915	UnaryOperationExpression	& pcs -> macros		8091615	0					
ANR	8091916	UnaryOperator	&		8091615	0					
ANR	8091917	PtrMemberAccess	pcs -> macros		8091615	1					
ANR	8091918	Identifier	pcs		8091615	0					
ANR	8091919	Identifier	macros		8091615	1					
ANR	8091920	Argument	current_macro_id		8091615	1					
ANR	8091921	Identifier	current_macro_id		8091615	0					
ANR	8091922	Argument	current_macro_id_size		8091615	2					
ANR	8091923	Identifier	current_macro_id_size		8091615	0					
ANR	8091924	Argument	sid		8091615	3					
ANR	8091925	Identifier	sid		8091615	0					
ANR	8091926	Argument	sid_size		8091615	4					
ANR	8091927	Identifier	sid_size		8091615	0					
ANR	8091928	IfStatement	if ( code < 0 )		8091615	2					
ANR	8091929	Condition	code < 0	846:12:31912:31919	8091615	0	True				
ANR	8091930	RelationalExpression	code < 0		8091615	0		<			
ANR	8091931	Identifier	code		8091615	0					
ANR	8091932	PrimaryExpression	0		8091615	1					
ANR	8091933	CompoundStatement		65:22:2343:2343	8091615	1					
ANR	8091934	ExpressionStatement	"gs_free_object ( pcs -> memory , value , ""resource"" )"	847:12:31936:31982	8091615	0	True				
ANR	8091935	CallExpression	"gs_free_object ( pcs -> memory , value , ""resource"" )"		8091615	0					
ANR	8091936	Callee	gs_free_object		8091615	0					
ANR	8091937	Identifier	gs_free_object		8091615	0					
ANR	8091938	ArgumentList	pcs -> memory		8091615	1					
ANR	8091939	Argument	pcs -> memory		8091615	0					
ANR	8091940	PtrMemberAccess	pcs -> memory		8091615	0					
ANR	8091941	Identifier	pcs		8091615	0					
ANR	8091942	Identifier	memory		8091615	1					
ANR	8091943	Argument	value		8091615	1					
ANR	8091944	Identifier	value		8091615	0					
ANR	8091945	Argument	"""resource"""		8091615	2					
ANR	8091946	PrimaryExpression	"""resource"""		8091615	0					
ANR	8091947	ExpressionStatement	return_error ( code )	848:12:31996:32014	8091615	1	True				
ANR	8091948	CallExpression	return_error ( code )		8091615	0					
ANR	8091949	Callee	return_error		8091615	0					
ANR	8091950	Identifier	return_error		8091615	0					
ANR	8091951	ArgumentList	code		8091615	1					
ANR	8091952	Argument	code		8091615	0					
ANR	8091953	Identifier	code		8091615	0					
ANR	8091954	ElseStatement	else		8091615	0					
ANR	8091955	CompoundStatement		69:11:2458:2458	8091615	0					
ANR	8091956	ExpressionStatement	"code = pl_dict_put_synonym ( & pcs -> soft_fonts , current_font_id , current_font_id_size , sid , sid_size )"	851:8:32047:32180	8091615	0	True				
ANR	8091957	AssignmentExpression	"code = pl_dict_put_synonym ( & pcs -> soft_fonts , current_font_id , current_font_id_size , sid , sid_size )"		8091615	0		=			
ANR	8091958	Identifier	code		8091615	0					
ANR	8091959	CallExpression	"pl_dict_put_synonym ( & pcs -> soft_fonts , current_font_id , current_font_id_size , sid , sid_size )"		8091615	1					
ANR	8091960	Callee	pl_dict_put_synonym		8091615	0					
ANR	8091961	Identifier	pl_dict_put_synonym		8091615	0					
ANR	8091962	ArgumentList	& pcs -> soft_fonts		8091615	1					
ANR	8091963	Argument	& pcs -> soft_fonts		8091615	0					
ANR	8091964	UnaryOperationExpression	& pcs -> soft_fonts		8091615	0					
ANR	8091965	UnaryOperator	&		8091615	0					
ANR	8091966	PtrMemberAccess	pcs -> soft_fonts		8091615	1					
ANR	8091967	Identifier	pcs		8091615	0					
ANR	8091968	Identifier	soft_fonts		8091615	1					
ANR	8091969	Argument	current_font_id		8091615	1					
ANR	8091970	Identifier	current_font_id		8091615	0					
ANR	8091971	Argument	current_font_id_size		8091615	2					
ANR	8091972	Identifier	current_font_id_size		8091615	0					
ANR	8091973	Argument	sid		8091615	3					
ANR	8091974	Identifier	sid		8091615	0					
ANR	8091975	Argument	sid_size		8091615	4					
ANR	8091976	Identifier	sid_size		8091615	0					
ANR	8091977	ExpressionStatement	"gs_free_object ( pcs -> memory , value , ""resource"" )"	856:8:32333:32379	8091615	1	True				
ANR	8091978	CallExpression	"gs_free_object ( pcs -> memory , value , ""resource"" )"		8091615	0					
ANR	8091979	Callee	gs_free_object		8091615	0					
ANR	8091980	Identifier	gs_free_object		8091615	0					
ANR	8091981	ArgumentList	pcs -> memory		8091615	1					
ANR	8091982	Argument	pcs -> memory		8091615	0					
ANR	8091983	PtrMemberAccess	pcs -> memory		8091615	0					
ANR	8091984	Identifier	pcs		8091615	0					
ANR	8091985	Identifier	memory		8091615	1					
ANR	8091986	Argument	value		8091615	1					
ANR	8091987	Identifier	value		8091615	0					
ANR	8091988	Argument	"""resource"""		8091615	2					
ANR	8091989	PrimaryExpression	"""resource"""		8091615	0					
ANR	8091990	IfStatement	if ( code < 0 )		8091615	2					
ANR	8091991	Condition	code < 0	857:12:32393:32400	8091615	0	True				
ANR	8091992	RelationalExpression	code < 0		8091615	0		<			
ANR	8091993	Identifier	code		8091615	0					
ANR	8091994	PrimaryExpression	0		8091615	1					
ANR	8091995	ExpressionStatement	return_error ( code )	858:12:32415:32433	8091615	1	True				
ANR	8091996	CallExpression	return_error ( code )		8091615	0					
ANR	8091997	Callee	return_error		8091615	0					
ANR	8091998	Identifier	return_error		8091615	0					
ANR	8091999	ArgumentList	code		8091615	1					
ANR	8092000	Argument	code		8091615	0					
ANR	8092001	Identifier	code		8091615	0					
ANR	8092002	ReturnStatement	return code ;	860:4:32445:32456	8091615	14	True				
ANR	8092003	Identifier	code		8091615	0					
ANR	8092004	ReturnType	static int		8091615	1					
ANR	8092005	Identifier	pcl_find_resource		8091615	2					
ANR	8092006	ParameterList	"pcl_state_t * pcs , const byte sid [ ] , int sid_size , resource_type_t resource_type"		8091615	3					
ANR	8092007	Parameter	pcl_state_t * pcs	779:18:29460:29476	8091615	0	True				
ANR	8092008	ParameterType	pcl_state_t *		8091615	0					
ANR	8092009	Identifier	pcs		8091615	1					
ANR	8092010	Parameter	const byte sid [ ]	780:18:29497:29512	8091615	1	True				
ANR	8092011	ParameterType	const byte [ ]		8091615	0					
ANR	8092012	Identifier	sid		8091615	1					
ANR	8092013	Parameter	int sid_size	781:18:29533:29544	8091615	2	True				
ANR	8092014	ParameterType	int		8091615	0					
ANR	8092015	Identifier	sid_size		8091615	1					
ANR	8092016	Parameter	resource_type_t resource_type	781:32:29547:29575	8091615	3	True				
ANR	8092017	ParameterType	resource_type_t		8091615	0					
ANR	8092018	Identifier	resource_type		8091615	1					
ANR	8092019	CFGEntryNode	ENTRY		8091615		True				
ANR	8092020	CFGExitNode	EXIT		8091615		True				
ANR	8092021	Symbol	alphaname		8091615						
ANR	8092022	Symbol	code		8091615						
ANR	8092023	Symbol	pcs -> pjls		8091615						
ANR	8092024	Symbol	& state		8091615						
ANR	8092025	Symbol	* pcs		8091615						
ANR	8092026	Symbol	pjl_proc_get_named_resource		8091615						
ANR	8092027	Symbol	sid		8091615						
ANR	8092028	Symbol	& pcs -> soft_fonts		8091615						
ANR	8092029	Symbol	pcs -> memory		8091615						
ANR	8092030	Symbol	state		8091615						
ANR	8092031	Symbol	value		8091615						
ANR	8092032	Symbol	gs_error_Fatal		8091615						
ANR	8092033	Symbol	pcs		8091615						
ANR	8092034	Symbol	gs_alloc_bytes		8091615						
ANR	8092035	Symbol	NULL		8091615						
ANR	8092036	Symbol	c		8091615						
ANR	8092037	Symbol	current_font_id_size		8091615						
ANR	8092038	Symbol	& pcs -> macros		8091615						
ANR	8092039	Symbol	macro_resource		8091615						
ANR	8092040	Symbol	font_resource		8091615						
ANR	8092041	Symbol	pl_dict_put_synonym		8091615						
ANR	8092042	Symbol	r . limit		8091615						
ANR	8092043	Symbol	resource_type		8091615						
ANR	8092044	Symbol	* c		8091615						
ANR	8092045	Symbol	* alphaname		8091615						
ANR	8092046	Symbol	current_macro_id		8091615						
ANR	8092047	Symbol	r		8091615						
ANR	8092048	Symbol	current_macro_id_size		8091615						
ANR	8092049	Symbol	size		8091615						
ANR	8092050	Symbol	pcs -> pcl_commands		8091615						
ANR	8092051	Symbol	current_font_id		8091615						
ANR	8092052	Symbol	r . ptr		8091615						
ANR	8092053	Symbol	sid_size		8091615						
ANR	8092054	Symbol	* sid		8091615						
ANR	8092055	Symbol	& r		8091615						
ANR	8092056	Symbol	pjl_proc_get_named_resource_size		8091615						
ANR	8092057	Symbol	pcl_process		8091615						
ANR	8092058	Symbol	pl_dict_put		8091615						
ANR	8092059	Symbol	state . definitions		8091615						
ANR	8092060	Function	pcl_alphanumeric_id_data	863:0:32461:39383							
ANR	8092061	FunctionDef	"pcl_alphanumeric_id_data (pcl_args_t * pargs , pcl_state_t * pcs)"		8092060	0					
ANR	8092062	CompoundStatement		865:0:32604:39383	8092060	0					
ANR	8092063	IdentifierDeclStatement	uint count = uint_arg ( pargs ) ;	866:4:32610:32638	8092060	0	True				
ANR	8092064	IdentifierDecl	count = uint_arg ( pargs )		8092060	0					
ANR	8092065	IdentifierDeclType	uint		8092060	0					
ANR	8092066	Identifier	count		8092060	1					
ANR	8092067	AssignmentExpression	count = uint_arg ( pargs )		8092060	2		=			
ANR	8092068	Identifier	count		8092060	0					
ANR	8092069	CallExpression	uint_arg ( pargs )		8092060	1					
ANR	8092070	Callee	uint_arg		8092060	0					
ANR	8092071	Identifier	uint_arg		8092060	0					
ANR	8092072	ArgumentList	pargs		8092060	1					
ANR	8092073	Argument	pargs		8092060	0					
ANR	8092074	Identifier	pargs		8092060	0					
ANR	8092075	IdentifierDeclStatement	const alphanumeric_data_t * alpha_data = ( const alphanumeric_data_t * ) arg_data ( pargs ) ;	868:4:32645:32737	8092060	1	True				
ANR	8092076	IdentifierDecl	* alpha_data = ( const alphanumeric_data_t * ) arg_data ( pargs )		8092060	0					
ANR	8092077	IdentifierDeclType	const alphanumeric_data_t *		8092060	0					
ANR	8092078	Identifier	alpha_data		8092060	1					
ANR	8092079	AssignmentExpression	* alpha_data = ( const alphanumeric_data_t * ) arg_data ( pargs )		8092060	2		=			
ANR	8092080	Identifier	alpha_data		8092060	0					
ANR	8092081	CastExpression	( const alphanumeric_data_t * ) arg_data ( pargs )		8092060	1					
ANR	8092082	CastTarget	const alphanumeric_data_t *		8092060	0					
ANR	8092083	CallExpression	arg_data ( pargs )		8092060	1					
ANR	8092084	Callee	arg_data		8092060	0					
ANR	8092085	Identifier	arg_data		8092060	0					
ANR	8092086	ArgumentList	pargs		8092060	1					
ANR	8092087	Argument	pargs		8092060	0					
ANR	8092088	Identifier	pargs		8092060	0					
ANR	8092089	IdentifierDeclStatement	int string_id_size = ( count - 1 ) ;	871:4:32744:32776	8092060	2	True				
ANR	8092090	IdentifierDecl	string_id_size = ( count - 1 )		8092060	0					
ANR	8092091	IdentifierDeclType	int		8092060	0					
ANR	8092092	Identifier	string_id_size		8092060	1					
ANR	8092093	AssignmentExpression	string_id_size = ( count - 1 )		8092060	2		=			
ANR	8092094	Identifier	string_id_size		8092060	0					
ANR	8092095	AdditiveExpression	count - 1		8092060	1		-			
ANR	8092096	Identifier	count		8092060	0					
ANR	8092097	PrimaryExpression	1		8092060	1					
ANR	8092098	IfStatement	if ( gs_debug_c ( 'i' ) )		8092060	3					
ANR	8092099	Condition	gs_debug_c ( 'i' )	874:8:32846:32860	8092060	0	True				
ANR	8092100	CallExpression	gs_debug_c ( 'i' )		8092060	0					
ANR	8092101	Callee	gs_debug_c		8092060	0					
ANR	8092102	Identifier	gs_debug_c		8092060	0					
ANR	8092103	ArgumentList	'i'		8092060	1					
ANR	8092104	Argument	'i'		8092060	0					
ANR	8092105	PrimaryExpression	'i'		8092060	0					
ANR	8092106	CompoundStatement		10:25:258:258	8092060	1					
ANR	8092107	ExpressionStatement	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"	875:8:32873:32939	8092060	0	True				
ANR	8092108	CallExpression	"pcl_debug_dump_data ( pcs -> memory , arg_data ( pargs ) , uint_arg ( pargs ) )"		8092060	0					
ANR	8092109	Callee	pcl_debug_dump_data		8092060	0					
ANR	8092110	Identifier	pcl_debug_dump_data		8092060	0					
ANR	8092111	ArgumentList	pcs -> memory		8092060	1					
ANR	8092112	Argument	pcs -> memory		8092060	0					
ANR	8092113	PtrMemberAccess	pcs -> memory		8092060	0					
ANR	8092114	Identifier	pcs		8092060	0					
ANR	8092115	Identifier	memory		8092060	1					
ANR	8092116	Argument	arg_data ( pargs )		8092060	1					
ANR	8092117	CallExpression	arg_data ( pargs )		8092060	0					
ANR	8092118	Callee	arg_data		8092060	0					
ANR	8092119	Identifier	arg_data		8092060	0					
ANR	8092120	ArgumentList	pargs		8092060	1					
ANR	8092121	Argument	pargs		8092060	0					
ANR	8092122	Identifier	pargs		8092060	0					
ANR	8092123	Argument	uint_arg ( pargs )		8092060	2					
ANR	8092124	CallExpression	uint_arg ( pargs )		8092060	0					
ANR	8092125	Callee	uint_arg		8092060	0					
ANR	8092126	Identifier	uint_arg		8092060	0					
ANR	8092127	ArgumentList	pargs		8092060	1					
ANR	8092128	Argument	pargs		8092060	0					
ANR	8092129	Identifier	pargs		8092060	0					
ANR	8092130	IfStatement	if ( count == 0 )		8092060	4					
ANR	8092131	Condition	count == 0	879:8:32963:32972	8092060	0	True				
ANR	8092132	EqualityExpression	count == 0		8092060	0		==			
ANR	8092133	Identifier	count		8092060	0					
ANR	8092134	PrimaryExpression	0		8092060	1					
ANR	8092135	ReturnStatement	return 0 ;	880:8:32983:32991	8092060	1	True				
ANR	8092136	PrimaryExpression	0		8092060	0					
ANR	8092137	IfStatement	if ( count < 1 || count > 512 )		8092060	5					
ANR	8092138	Condition	count < 1 || count > 512	881:8:33001:33024	8092060	0	True				
ANR	8092139	OrExpression	count < 1 || count > 512		8092060	0		||			
ANR	8092140	RelationalExpression	count < 1		8092060	0		<			
ANR	8092141	Identifier	count		8092060	0					
ANR	8092142	PrimaryExpression	1		8092060	1					
ANR	8092143	RelationalExpression	count > 512		8092060	1		>			
ANR	8092144	Identifier	count		8092060	0					
ANR	8092145	PrimaryExpression	512		8092060	1					
ANR	8092146	ReturnStatement	return e_Range ;	882:8:33035:33049	8092060	1	True				
ANR	8092147	Identifier	e_Range		8092060	0					
ANR	8092148	SwitchStatement	switch ( alpha_data -> operation )		8092060	6					
ANR	8092149	Condition	alpha_data -> operation	883:12:33063:33083	8092060	0	True				
ANR	8092150	PtrMemberAccess	alpha_data -> operation		8092060	0					
ANR	8092151	Identifier	alpha_data		8092060	0					
ANR	8092152	Identifier	operation		8092060	1					
ANR	8092153	CompoundStatement		19:35:481:481	8092060	1					
ANR	8092154	Label	case 0 :	884:8:33096:33102	8092060	0	True				
ANR	8092155	CompoundStatement		23:16:595:752	8092060	1					
ANR	8092156	IdentifierDeclStatement	"char * new_id = ( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" ) ;"	887:16:33200:33357	8092060	0	True				
ANR	8092157	IdentifierDecl	"* new_id = ( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8092060	0					
ANR	8092158	IdentifierDeclType	char *		8092060	0					
ANR	8092159	Identifier	new_id		8092060	1					
ANR	8092160	AssignmentExpression	"* new_id = ( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8092060	2		=			
ANR	8092161	Identifier	new_id		8092060	0					
ANR	8092162	CastExpression	"( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8092060	1					
ANR	8092163	CastTarget	char *		8092060	0					
ANR	8092164	CallExpression	"gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8092060	1					
ANR	8092165	Callee	gs_alloc_bytes		8092060	0					
ANR	8092166	Identifier	gs_alloc_bytes		8092060	0					
ANR	8092167	ArgumentList	pcs -> memory		8092060	1					
ANR	8092168	Argument	pcs -> memory		8092060	0					
ANR	8092169	PtrMemberAccess	pcs -> memory		8092060	0					
ANR	8092170	Identifier	pcs		8092060	0					
ANR	8092171	Identifier	memory		8092060	1					
ANR	8092172	Argument	string_id_size		8092060	1					
ANR	8092173	Identifier	string_id_size		8092060	0					
ANR	8092174	Argument	"""pcl_alphanumeric_id_data"""		8092060	2					
ANR	8092175	PrimaryExpression	"""pcl_alphanumeric_id_data"""		8092060	0					
ANR	8092176	IfStatement	if ( new_id == 0 )		8092060	1					
ANR	8092177	Condition	new_id == 0	891:20:33380:33390	8092060	0	True				
ANR	8092178	EqualityExpression	new_id == 0		8092060	0		==			
ANR	8092179	Identifier	new_id		8092060	0					
ANR	8092180	PrimaryExpression	0		8092060	1					
ANR	8092181	ExpressionStatement	return_error ( e_Memory )	892:20:33413:33435	8092060	1	True				
ANR	8092182	CallExpression	return_error ( e_Memory )		8092060	0					
ANR	8092183	Callee	return_error		8092060	0					
ANR	8092184	Identifier	return_error		8092060	0					
ANR	8092185	ArgumentList	e_Memory		8092060	1					
ANR	8092186	Argument	e_Memory		8092060	0					
ANR	8092187	Identifier	e_Memory		8092060	0					
ANR	8092188	IfStatement	if ( pcs -> alpha_font_id . id )		8092060	2					
ANR	8092189	Condition	pcs -> alpha_font_id . id	894:20:33517:33537	8092060	0	True				
ANR	8092190	MemberAccess	pcs -> alpha_font_id . id		8092060	0					
ANR	8092191	PtrMemberAccess	pcs -> alpha_font_id		8092060	0					
ANR	8092192	Identifier	pcs		8092060	0					
ANR	8092193	Identifier	alpha_font_id		8092060	1					
ANR	8092194	Identifier	id		8092060	1					
ANR	8092195	ExpressionStatement	"gs_free_object ( pcs -> memory , pcs -> alpha_font_id . id , ""pcl_free_string_id"" )"	895:20:33560:33702	8092060	1	True				
ANR	8092196	CallExpression	"gs_free_object ( pcs -> memory , pcs -> alpha_font_id . id , ""pcl_free_string_id"" )"		8092060	0					
ANR	8092197	Callee	gs_free_object		8092060	0					
ANR	8092198	Identifier	gs_free_object		8092060	0					
ANR	8092199	ArgumentList	pcs -> memory		8092060	1					
ANR	8092200	Argument	pcs -> memory		8092060	0					
ANR	8092201	PtrMemberAccess	pcs -> memory		8092060	0					
ANR	8092202	Identifier	pcs		8092060	0					
ANR	8092203	Identifier	memory		8092060	1					
ANR	8092204	Argument	pcs -> alpha_font_id . id		8092060	1					
ANR	8092205	MemberAccess	pcs -> alpha_font_id . id		8092060	0					
ANR	8092206	PtrMemberAccess	pcs -> alpha_font_id		8092060	0					
ANR	8092207	Identifier	pcs		8092060	0					
ANR	8092208	Identifier	alpha_font_id		8092060	1					
ANR	8092209	Identifier	id		8092060	1					
ANR	8092210	Argument	"""pcl_free_string_id"""		8092060	2					
ANR	8092211	PrimaryExpression	"""pcl_free_string_id"""		8092060	0					
ANR	8092212	ExpressionStatement	"memcpy ( new_id , alpha_data -> string_id , string_id_size )"	899:16:33775:33828	8092060	3	True				
ANR	8092213	CallExpression	"memcpy ( new_id , alpha_data -> string_id , string_id_size )"		8092060	0					
ANR	8092214	Callee	memcpy		8092060	0					
ANR	8092215	Identifier	memcpy		8092060	0					
ANR	8092216	ArgumentList	new_id		8092060	1					
ANR	8092217	Argument	new_id		8092060	0					
ANR	8092218	Identifier	new_id		8092060	0					
ANR	8092219	Argument	alpha_data -> string_id		8092060	1					
ANR	8092220	PtrMemberAccess	alpha_data -> string_id		8092060	0					
ANR	8092221	Identifier	alpha_data		8092060	0					
ANR	8092222	Identifier	string_id		8092060	1					
ANR	8092223	Argument	string_id_size		8092060	2					
ANR	8092224	Identifier	string_id_size		8092060	0					
ANR	8092225	ExpressionStatement	pcs -> alpha_font_id . id = ( byte * ) new_id	901:16:33888:33927	8092060	4	True				
ANR	8092226	AssignmentExpression	pcs -> alpha_font_id . id = ( byte * ) new_id		8092060	0		=			
ANR	8092227	MemberAccess	pcs -> alpha_font_id . id		8092060	0					
ANR	8092228	PtrMemberAccess	pcs -> alpha_font_id		8092060	0					
ANR	8092229	Identifier	pcs		8092060	0					
ANR	8092230	Identifier	alpha_font_id		8092060	1					
ANR	8092231	Identifier	id		8092060	1					
ANR	8092232	CastExpression	( byte * ) new_id		8092060	1					
ANR	8092233	CastTarget	byte *		8092060	0					
ANR	8092234	Identifier	new_id		8092060	1					
ANR	8092235	ExpressionStatement	pcs -> alpha_font_id . size = string_id_size	902:16:33945:33985	8092060	5	True				
ANR	8092236	AssignmentExpression	pcs -> alpha_font_id . size = string_id_size		8092060	0		=			
ANR	8092237	MemberAccess	pcs -> alpha_font_id . size		8092060	0					
ANR	8092238	PtrMemberAccess	pcs -> alpha_font_id		8092060	0					
ANR	8092239	Identifier	pcs		8092060	0					
ANR	8092240	Identifier	alpha_font_id		8092060	1					
ANR	8092241	Identifier	size		8092060	1					
ANR	8092242	Identifier	string_id_size		8092060	1					
ANR	8092243	ExpressionStatement	pcs -> font_id_type = string_id	904:16:34065:34094	8092060	6	True				
ANR	8092244	AssignmentExpression	pcs -> font_id_type = string_id		8092060	0		=			
ANR	8092245	PtrMemberAccess	pcs -> font_id_type		8092060	0					
ANR	8092246	Identifier	pcs		8092060	0					
ANR	8092247	Identifier	font_id_type		8092060	1					
ANR	8092248	Identifier	string_id		8092060	1					
ANR	8092249	BreakStatement	break ;	906:12:34122:34127	8092060	2	True				
ANR	8092250	Label	case 1 :	907:8:34137:34143	8092060	3	True				
ANR	8092251	CompoundStatement		47:16:1681:1692	8092060	4					
ANR	8092252	IdentifierDeclStatement	void * value ;	911:16:34286:34297	8092060	0	True				
ANR	8092253	IdentifierDecl	* value		8092060	0					
ANR	8092254	IdentifierDeclType	void *		8092060	0					
ANR	8092255	Identifier	value		8092060	1					
ANR	8092256	IfStatement	"if ( pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value ) )"		8092060	1					
ANR	8092257	Condition	"pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"	913:20:34383:34468	8092060	0	True				
ANR	8092258	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"		8092060	0					
ANR	8092259	Callee	pl_dict_find_no_stack		8092060	0					
ANR	8092260	Identifier	pl_dict_find_no_stack		8092060	0					
ANR	8092261	ArgumentList	& pcs -> soft_fonts		8092060	1					
ANR	8092262	Argument	& pcs -> soft_fonts		8092060	0					
ANR	8092263	UnaryOperationExpression	& pcs -> soft_fonts		8092060	0					
ANR	8092264	UnaryOperator	&		8092060	0					
ANR	8092265	PtrMemberAccess	pcs -> soft_fonts		8092060	1					
ANR	8092266	Identifier	pcs		8092060	0					
ANR	8092267	Identifier	soft_fonts		8092060	1					
ANR	8092268	Argument	alpha_data -> string_id		8092060	1					
ANR	8092269	PtrMemberAccess	alpha_data -> string_id		8092060	0					
ANR	8092270	Identifier	alpha_data		8092060	0					
ANR	8092271	Identifier	string_id		8092060	1					
ANR	8092272	Argument	string_id_size		8092060	2					
ANR	8092273	Identifier	string_id_size		8092060	0					
ANR	8092274	Argument	& value		8092060	3					
ANR	8092275	UnaryOperationExpression	& value		8092060	0					
ANR	8092276	UnaryOperator	&		8092060	0					
ANR	8092277	Identifier	value		8092060	1					
ANR	8092278	CompoundStatement		49:108:1866:1866	8092060	1					
ANR	8092279	ReturnStatement	"return pl_dict_put_synonym ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , current_font_id , current_font_id_size ) ;"	914:20:34493:34709	8092060	0	True				
ANR	8092280	CallExpression	"pl_dict_put_synonym ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , current_font_id , current_font_id_size )"		8092060	0					
ANR	8092281	Callee	pl_dict_put_synonym		8092060	0					
ANR	8092282	Identifier	pl_dict_put_synonym		8092060	0					
ANR	8092283	ArgumentList	& pcs -> soft_fonts		8092060	1					
ANR	8092284	Argument	& pcs -> soft_fonts		8092060	0					
ANR	8092285	UnaryOperationExpression	& pcs -> soft_fonts		8092060	0					
ANR	8092286	UnaryOperator	&		8092060	0					
ANR	8092287	PtrMemberAccess	pcs -> soft_fonts		8092060	1					
ANR	8092288	Identifier	pcs		8092060	0					
ANR	8092289	Identifier	soft_fonts		8092060	1					
ANR	8092290	Argument	alpha_data -> string_id		8092060	1					
ANR	8092291	PtrMemberAccess	alpha_data -> string_id		8092060	0					
ANR	8092292	Identifier	alpha_data		8092060	0					
ANR	8092293	Identifier	string_id		8092060	1					
ANR	8092294	Argument	string_id_size		8092060	2					
ANR	8092295	Identifier	string_id_size		8092060	0					
ANR	8092296	Argument	current_font_id		8092060	3					
ANR	8092297	Identifier	current_font_id		8092060	0					
ANR	8092298	Argument	current_font_id_size		8092060	4					
ANR	8092299	Identifier	current_font_id_size		8092060	0					
ANR	8092300	ElseStatement	else		8092060	0					
ANR	8092301	CompoundStatement		53:23:2129:2129	8092060	0					
ANR	8092302	ReturnStatement	"return pcl_find_resource ( pcs , alpha_data -> string_id , string_id_size , font_resource ) ;"	919:20:34829:34957	8092060	0	True				
ANR	8092303	CallExpression	"pcl_find_resource ( pcs , alpha_data -> string_id , string_id_size , font_resource )"		8092060	0					
ANR	8092304	Callee	pcl_find_resource		8092060	0					
ANR	8092305	Identifier	pcl_find_resource		8092060	0					
ANR	8092306	ArgumentList	pcs		8092060	1					
ANR	8092307	Argument	pcs		8092060	0					
ANR	8092308	Identifier	pcs		8092060	0					
ANR	8092309	Argument	alpha_data -> string_id		8092060	1					
ANR	8092310	PtrMemberAccess	alpha_data -> string_id		8092060	0					
ANR	8092311	Identifier	alpha_data		8092060	0					
ANR	8092312	Identifier	string_id		8092060	1					
ANR	8092313	Argument	string_id_size		8092060	2					
ANR	8092314	Identifier	string_id_size		8092060	0					
ANR	8092315	Argument	font_resource		8092060	3					
ANR	8092316	Identifier	font_resource		8092060	0					
ANR	8092317	BreakStatement	break ;	923:12:35003:35008	8092060	5	True				
ANR	8092318	Label	case 2 :	924:8:35018:35024	8092060	6	True				
ANR	8092319	CompoundStatement		66:16:2676:2733	8092060	7					
ANR	8092320	IdentifierDeclStatement	void * value ;	929:16:35252:35263	8092060	0	True				
ANR	8092321	IdentifierDecl	* value		8092060	0					
ANR	8092322	IdentifierDeclType	void *		8092060	0					
ANR	8092323	Identifier	value		8092060	1					
ANR	8092324	IdentifierDeclStatement	pcl_font_selection_t * pfs = & pcs -> font_selection [ primary ] ;	930:16:35281:35338	8092060	1	True				
ANR	8092325	IdentifierDecl	* pfs = & pcs -> font_selection [ primary ]		8092060	0					
ANR	8092326	IdentifierDeclType	pcl_font_selection_t *		8092060	0					
ANR	8092327	Identifier	pfs		8092060	1					
ANR	8092328	AssignmentExpression	* pfs = & pcs -> font_selection [ primary ]		8092060	2		=			
ANR	8092329	Identifier	pfs		8092060	0					
ANR	8092330	UnaryOperationExpression	& pcs -> font_selection [ primary ]		8092060	1					
ANR	8092331	UnaryOperator	&		8092060	0					
ANR	8092332	ArrayIndexing	pcs -> font_selection [ primary ]		8092060	1					
ANR	8092333	PtrMemberAccess	pcs -> font_selection		8092060	0					
ANR	8092334	Identifier	pcs		8092060	0					
ANR	8092335	Identifier	font_selection		8092060	1					
ANR	8092336	Identifier	primary		8092060	1					
ANR	8092337	IfStatement	"if ( ! pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value ) )"		8092060	2					
ANR	8092338	Condition	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"	932:20:35361:35533	8092060	0	True				
ANR	8092339	UnaryOperationExpression	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"		8092060	0					
ANR	8092340	UnaryOperator	!		8092060	0					
ANR	8092341	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"		8092060	1					
ANR	8092342	Callee	pl_dict_find_no_stack		8092060	0					
ANR	8092343	Identifier	pl_dict_find_no_stack		8092060	0					
ANR	8092344	ArgumentList	& pcs -> soft_fonts		8092060	1					
ANR	8092345	Argument	& pcs -> soft_fonts		8092060	0					
ANR	8092346	UnaryOperationExpression	& pcs -> soft_fonts		8092060	0					
ANR	8092347	UnaryOperator	&		8092060	0					
ANR	8092348	PtrMemberAccess	pcs -> soft_fonts		8092060	1					
ANR	8092349	Identifier	pcs		8092060	0					
ANR	8092350	Identifier	soft_fonts		8092060	1					
ANR	8092351	Argument	alpha_data -> string_id		8092060	1					
ANR	8092352	PtrMemberAccess	alpha_data -> string_id		8092060	0					
ANR	8092353	Identifier	alpha_data		8092060	0					
ANR	8092354	Identifier	string_id		8092060	1					
ANR	8092355	Argument	string_id_size		8092060	2					
ANR	8092356	Identifier	string_id_size		8092060	0					
ANR	8092357	Argument	& value		8092060	3					
ANR	8092358	UnaryOperationExpression	& value		8092060	0					
ANR	8092359	UnaryOperator	&		8092060	0					
ANR	8092360	Identifier	value		8092060	1					
ANR	8092361	ReturnStatement	return 1 ;	935:20:35556:35564	8092060	1	True				
ANR	8092362	PrimaryExpression	1		8092060	0					
ANR	8092363	ExpressionStatement	"pcl_set_id_parameters ( pcs , pfs , ( pl_font_t * ) value , 0 )"	937:16:35613:35668	8092060	3	True				
ANR	8092364	CallExpression	"pcl_set_id_parameters ( pcs , pfs , ( pl_font_t * ) value , 0 )"		8092060	0					
ANR	8092365	Callee	pcl_set_id_parameters		8092060	0					
ANR	8092366	Identifier	pcl_set_id_parameters		8092060	0					
ANR	8092367	ArgumentList	pcs		8092060	1					
ANR	8092368	Argument	pcs		8092060	0					
ANR	8092369	Identifier	pcs		8092060	0					
ANR	8092370	Argument	pfs		8092060	1					
ANR	8092371	Identifier	pfs		8092060	0					
ANR	8092372	Argument	( pl_font_t * ) value		8092060	2					
ANR	8092373	CastExpression	( pl_font_t * ) value		8092060	0					
ANR	8092374	CastTarget	pl_font_t *		8092060	0					
ANR	8092375	Identifier	value		8092060	1					
ANR	8092376	Argument	0		8092060	3					
ANR	8092377	PrimaryExpression	0		8092060	0					
ANR	8092378	ExpressionStatement	"pcl_decache_font ( pcs , - 1 , true )"	938:16:35686:35717	8092060	4	True				
ANR	8092379	CallExpression	"pcl_decache_font ( pcs , - 1 , true )"		8092060	0					
ANR	8092380	Callee	pcl_decache_font		8092060	0					
ANR	8092381	Identifier	pcl_decache_font		8092060	0					
ANR	8092382	ArgumentList	pcs		8092060	1					
ANR	8092383	Argument	pcs		8092060	0					
ANR	8092384	Identifier	pcs		8092060	0					
ANR	8092385	Argument	- 1		8092060	1					
ANR	8092386	UnaryOperationExpression	- 1		8092060	0					
ANR	8092387	UnaryOperator	-		8092060	0					
ANR	8092388	PrimaryExpression	1		8092060	1					
ANR	8092389	Argument	true		8092060	2					
ANR	8092390	Identifier	true		8092060	0					
ANR	8092391	BreakStatement	break ;	940:12:35745:35750	8092060	8	True				
ANR	8092392	Label	case 3 :	941:8:35760:35766	8092060	9	True				
ANR	8092393	CompoundStatement		81:16:3283:3342	8092060	10					
ANR	8092394	IdentifierDeclStatement	void * value ;	944:16:35859:35870	8092060	0	True				
ANR	8092395	IdentifierDecl	* value		8092060	0					
ANR	8092396	IdentifierDeclType	void *		8092060	0					
ANR	8092397	Identifier	value		8092060	1					
ANR	8092398	IdentifierDeclStatement	pcl_font_selection_t * pfs = & pcs -> font_selection [ secondary ] ;	945:16:35888:35947	8092060	1	True				
ANR	8092399	IdentifierDecl	* pfs = & pcs -> font_selection [ secondary ]		8092060	0					
ANR	8092400	IdentifierDeclType	pcl_font_selection_t *		8092060	0					
ANR	8092401	Identifier	pfs		8092060	1					
ANR	8092402	AssignmentExpression	* pfs = & pcs -> font_selection [ secondary ]		8092060	2		=			
ANR	8092403	Identifier	pfs		8092060	0					
ANR	8092404	UnaryOperationExpression	& pcs -> font_selection [ secondary ]		8092060	1					
ANR	8092405	UnaryOperator	&		8092060	0					
ANR	8092406	ArrayIndexing	pcs -> font_selection [ secondary ]		8092060	1					
ANR	8092407	PtrMemberAccess	pcs -> font_selection		8092060	0					
ANR	8092408	Identifier	pcs		8092060	0					
ANR	8092409	Identifier	font_selection		8092060	1					
ANR	8092410	Identifier	secondary		8092060	1					
ANR	8092411	IfStatement	"if ( ! pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value ) )"		8092060	2					
ANR	8092412	Condition	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"	947:20:35970:36142	8092060	0	True				
ANR	8092413	UnaryOperationExpression	"! pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"		8092060	0					
ANR	8092414	UnaryOperator	!		8092060	0					
ANR	8092415	CallExpression	"pl_dict_find_no_stack ( & pcs -> soft_fonts , alpha_data -> string_id , string_id_size , & value )"		8092060	1					
ANR	8092416	Callee	pl_dict_find_no_stack		8092060	0					
ANR	8092417	Identifier	pl_dict_find_no_stack		8092060	0					
ANR	8092418	ArgumentList	& pcs -> soft_fonts		8092060	1					
ANR	8092419	Argument	& pcs -> soft_fonts		8092060	0					
ANR	8092420	UnaryOperationExpression	& pcs -> soft_fonts		8092060	0					
ANR	8092421	UnaryOperator	&		8092060	0					
ANR	8092422	PtrMemberAccess	pcs -> soft_fonts		8092060	1					
ANR	8092423	Identifier	pcs		8092060	0					
ANR	8092424	Identifier	soft_fonts		8092060	1					
ANR	8092425	Argument	alpha_data -> string_id		8092060	1					
ANR	8092426	PtrMemberAccess	alpha_data -> string_id		8092060	0					
ANR	8092427	Identifier	alpha_data		8092060	0					
ANR	8092428	Identifier	string_id		8092060	1					
ANR	8092429	Argument	string_id_size		8092060	2					
ANR	8092430	Identifier	string_id_size		8092060	0					
ANR	8092431	Argument	& value		8092060	3					
ANR	8092432	UnaryOperationExpression	& value		8092060	0					
ANR	8092433	UnaryOperator	&		8092060	0					
ANR	8092434	Identifier	value		8092060	1					
ANR	8092435	ReturnStatement	return 1 ;	950:20:36165:36173	8092060	1	True				
ANR	8092436	PrimaryExpression	1		8092060	0					
ANR	8092437	ExpressionStatement	"pcl_set_id_parameters ( pcs , pfs , ( pl_font_t * ) value , 0 )"	952:16:36222:36277	8092060	3	True				
ANR	8092438	CallExpression	"pcl_set_id_parameters ( pcs , pfs , ( pl_font_t * ) value , 0 )"		8092060	0					
ANR	8092439	Callee	pcl_set_id_parameters		8092060	0					
ANR	8092440	Identifier	pcl_set_id_parameters		8092060	0					
ANR	8092441	ArgumentList	pcs		8092060	1					
ANR	8092442	Argument	pcs		8092060	0					
ANR	8092443	Identifier	pcs		8092060	0					
ANR	8092444	Argument	pfs		8092060	1					
ANR	8092445	Identifier	pfs		8092060	0					
ANR	8092446	Argument	( pl_font_t * ) value		8092060	2					
ANR	8092447	CastExpression	( pl_font_t * ) value		8092060	0					
ANR	8092448	CastTarget	pl_font_t *		8092060	0					
ANR	8092449	Identifier	value		8092060	1					
ANR	8092450	Argument	0		8092060	3					
ANR	8092451	PrimaryExpression	0		8092060	0					
ANR	8092452	ExpressionStatement	"pcl_decache_font ( pcs , - 1 , true )"	953:16:36295:36326	8092060	4	True				
ANR	8092453	CallExpression	"pcl_decache_font ( pcs , - 1 , true )"		8092060	0					
ANR	8092454	Callee	pcl_decache_font		8092060	0					
ANR	8092455	Identifier	pcl_decache_font		8092060	0					
ANR	8092456	ArgumentList	pcs		8092060	1					
ANR	8092457	Argument	pcs		8092060	0					
ANR	8092458	Identifier	pcs		8092060	0					
ANR	8092459	Argument	- 1		8092060	1					
ANR	8092460	UnaryOperationExpression	- 1		8092060	0					
ANR	8092461	UnaryOperator	-		8092060	0					
ANR	8092462	PrimaryExpression	1		8092060	1					
ANR	8092463	Argument	true		8092060	2					
ANR	8092464	Identifier	true		8092060	0					
ANR	8092465	BreakStatement	break ;	955:12:36354:36359	8092060	11	True				
ANR	8092466	Label	case 4 :	956:8:36369:36375	8092060	12	True				
ANR	8092467	CompoundStatement		95:16:3867:4024	8092060	13					
ANR	8092468	IdentifierDeclStatement	"char * new_id = ( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" ) ;"	959:16:36472:36629	8092060	0	True				
ANR	8092469	IdentifierDecl	"* new_id = ( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8092060	0					
ANR	8092470	IdentifierDeclType	char *		8092060	0					
ANR	8092471	Identifier	new_id		8092060	1					
ANR	8092472	AssignmentExpression	"* new_id = ( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8092060	2		=			
ANR	8092473	Identifier	new_id		8092060	0					
ANR	8092474	CastExpression	"( char * ) gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8092060	1					
ANR	8092475	CastTarget	char *		8092060	0					
ANR	8092476	CallExpression	"gs_alloc_bytes ( pcs -> memory , string_id_size , ""pcl_alphanumeric_id_data"" )"		8092060	1					
ANR	8092477	Callee	gs_alloc_bytes		8092060	0					
ANR	8092478	Identifier	gs_alloc_bytes		8092060	0					
ANR	8092479	ArgumentList	pcs -> memory		8092060	1					
ANR	8092480	Argument	pcs -> memory		8092060	0					
ANR	8092481	PtrMemberAccess	pcs -> memory		8092060	0					
ANR	8092482	Identifier	pcs		8092060	0					
ANR	8092483	Identifier	memory		8092060	1					
ANR	8092484	Argument	string_id_size		8092060	1					
ANR	8092485	Identifier	string_id_size		8092060	0					
ANR	8092486	Argument	"""pcl_alphanumeric_id_data"""		8092060	2					
ANR	8092487	PrimaryExpression	"""pcl_alphanumeric_id_data"""		8092060	0					
ANR	8092488	IfStatement	if ( new_id == 0 )		8092060	1					
ANR	8092489	Condition	new_id == 0	963:20:36652:36662	8092060	0	True				
ANR	8092490	EqualityExpression	new_id == 0		8092060	0		==			
ANR	8092491	Identifier	new_id		8092060	0					
ANR	8092492	PrimaryExpression	0		8092060	1					
ANR	8092493	ExpressionStatement	return_error ( e_Memory )	964:20:36685:36707	8092060	1	True				
ANR	8092494	CallExpression	return_error ( e_Memory )		8092060	0					
ANR	8092495	Callee	return_error		8092060	0					
ANR	8092496	Identifier	return_error		8092060	0					
ANR	8092497	ArgumentList	e_Memory		8092060	1					
ANR	8092498	Argument	e_Memory		8092060	0					
ANR	8092499	Identifier	e_Memory		8092060	0					
ANR	8092500	IfStatement	if ( pcs -> alpha_macro_id . id )		8092060	2					
ANR	8092501	Condition	pcs -> alpha_macro_id . id	966:20:36789:36810	8092060	0	True				
ANR	8092502	MemberAccess	pcs -> alpha_macro_id . id		8092060	0					
ANR	8092503	PtrMemberAccess	pcs -> alpha_macro_id		8092060	0					
ANR	8092504	Identifier	pcs		8092060	0					
ANR	8092505	Identifier	alpha_macro_id		8092060	1					
ANR	8092506	Identifier	id		8092060	1					
ANR	8092507	ExpressionStatement	"gs_free_object ( pcs -> memory , pcs -> alpha_macro_id . id , ""pcl_free_string_id"" )"	967:20:36833:36976	8092060	1	True				
ANR	8092508	CallExpression	"gs_free_object ( pcs -> memory , pcs -> alpha_macro_id . id , ""pcl_free_string_id"" )"		8092060	0					
ANR	8092509	Callee	gs_free_object		8092060	0					
ANR	8092510	Identifier	gs_free_object		8092060	0					
ANR	8092511	ArgumentList	pcs -> memory		8092060	1					
ANR	8092512	Argument	pcs -> memory		8092060	0					
ANR	8092513	PtrMemberAccess	pcs -> memory		8092060	0					
ANR	8092514	Identifier	pcs		8092060	0					
ANR	8092515	Identifier	memory		8092060	1					
ANR	8092516	Argument	pcs -> alpha_macro_id . id		8092060	1					
ANR	8092517	MemberAccess	pcs -> alpha_macro_id . id		8092060	0					
ANR	8092518	PtrMemberAccess	pcs -> alpha_macro_id		8092060	0					
ANR	8092519	Identifier	pcs		8092060	0					
ANR	8092520	Identifier	alpha_macro_id		8092060	1					
ANR	8092521	Identifier	id		8092060	1					
ANR	8092522	Argument	"""pcl_free_string_id"""		8092060	2					
ANR	8092523	PrimaryExpression	"""pcl_free_string_id"""		8092060	0					
ANR	8092524	ExpressionStatement	"memcpy ( new_id , alpha_data -> string_id , string_id_size )"	971:16:37049:37102	8092060	3	True				
ANR	8092525	CallExpression	"memcpy ( new_id , alpha_data -> string_id , string_id_size )"		8092060	0					
ANR	8092526	Callee	memcpy		8092060	0					
ANR	8092527	Identifier	memcpy		8092060	0					
ANR	8092528	ArgumentList	new_id		8092060	1					
ANR	8092529	Argument	new_id		8092060	0					
ANR	8092530	Identifier	new_id		8092060	0					
ANR	8092531	Argument	alpha_data -> string_id		8092060	1					
ANR	8092532	PtrMemberAccess	alpha_data -> string_id		8092060	0					
ANR	8092533	Identifier	alpha_data		8092060	0					
ANR	8092534	Identifier	string_id		8092060	1					
ANR	8092535	Argument	string_id_size		8092060	2					
ANR	8092536	Identifier	string_id_size		8092060	0					
ANR	8092537	ExpressionStatement	pcs -> alpha_macro_id . id = ( byte * ) new_id	973:16:37162:37202	8092060	4	True				
ANR	8092538	AssignmentExpression	pcs -> alpha_macro_id . id = ( byte * ) new_id		8092060	0		=			
ANR	8092539	MemberAccess	pcs -> alpha_macro_id . id		8092060	0					
ANR	8092540	PtrMemberAccess	pcs -> alpha_macro_id		8092060	0					
ANR	8092541	Identifier	pcs		8092060	0					
ANR	8092542	Identifier	alpha_macro_id		8092060	1					
ANR	8092543	Identifier	id		8092060	1					
ANR	8092544	CastExpression	( byte * ) new_id		8092060	1					
ANR	8092545	CastTarget	byte *		8092060	0					
ANR	8092546	Identifier	new_id		8092060	1					
ANR	8092547	ExpressionStatement	pcs -> alpha_macro_id . size = string_id_size	974:16:37220:37261	8092060	5	True				
ANR	8092548	AssignmentExpression	pcs -> alpha_macro_id . size = string_id_size		8092060	0		=			
ANR	8092549	MemberAccess	pcs -> alpha_macro_id . size		8092060	0					
ANR	8092550	PtrMemberAccess	pcs -> alpha_macro_id		8092060	0					
ANR	8092551	Identifier	pcs		8092060	0					
ANR	8092552	Identifier	alpha_macro_id		8092060	1					
ANR	8092553	Identifier	size		8092060	1					
ANR	8092554	Identifier	string_id_size		8092060	1					
ANR	8092555	ExpressionStatement	pcs -> macro_id_type = string_id	976:16:37341:37371	8092060	6	True				
ANR	8092556	AssignmentExpression	pcs -> macro_id_type = string_id		8092060	0		=			
ANR	8092557	PtrMemberAccess	pcs -> macro_id_type		8092060	0					
ANR	8092558	Identifier	pcs		8092060	0					
ANR	8092559	Identifier	macro_id_type		8092060	1					
ANR	8092560	Identifier	string_id		8092060	1					
ANR	8092561	BreakStatement	break ;	978:12:37399:37404	8092060	14	True				
ANR	8092562	Label	case 5 :	979:8:37414:37420	8092060	15	True				
ANR	8092563	CompoundStatement		118:16:4923:4934	8092060	16					
ANR	8092564	IdentifierDeclStatement	void * value ;	982:16:37528:37539	8092060	0	True				
ANR	8092565	IdentifierDecl	* value		8092060	0					
ANR	8092566	IdentifierDeclType	void *		8092060	0					
ANR	8092567	Identifier	value		8092060	1					
ANR	8092568	IfStatement	"if ( pl_dict_find_no_stack ( & pcs -> macros , alpha_data -> string_id , string_id_size , & value ) )"		8092060	1					
ANR	8092569	Condition	"pl_dict_find_no_stack ( & pcs -> macros , alpha_data -> string_id , string_id_size , & value )"	984:20:37628:37709	8092060	0	True				
ANR	8092570	CallExpression	"pl_dict_find_no_stack ( & pcs -> macros , alpha_data -> string_id , string_id_size , & value )"		8092060	0					
ANR	8092571	Callee	pl_dict_find_no_stack		8092060	0					
ANR	8092572	Identifier	pl_dict_find_no_stack		8092060	0					
ANR	8092573	ArgumentList	& pcs -> macros		8092060	1					
ANR	8092574	Argument	& pcs -> macros		8092060	0					
ANR	8092575	UnaryOperationExpression	& pcs -> macros		8092060	0					
ANR	8092576	UnaryOperator	&		8092060	0					
ANR	8092577	PtrMemberAccess	pcs -> macros		8092060	1					
ANR	8092578	Identifier	pcs		8092060	0					
ANR	8092579	Identifier	macros		8092060	1					
ANR	8092580	Argument	alpha_data -> string_id		8092060	1					
ANR	8092581	PtrMemberAccess	alpha_data -> string_id		8092060	0					
ANR	8092582	Identifier	alpha_data		8092060	0					
ANR	8092583	Identifier	string_id		8092060	1					
ANR	8092584	Argument	string_id_size		8092060	2					
ANR	8092585	Identifier	string_id_size		8092060	0					
ANR	8092586	Argument	& value		8092060	3					
ANR	8092587	UnaryOperationExpression	& value		8092060	0					
ANR	8092588	UnaryOperator	&		8092060	0					
ANR	8092589	Identifier	value		8092060	1					
ANR	8092590	CompoundStatement		120:104:5107:5107	8092060	1					
ANR	8092591	ReturnStatement	"return pl_dict_put_synonym ( & pcs -> macros , alpha_data -> string_id , string_id_size , current_macro_id , current_macro_id_size ) ;"	985:20:37734:37948	8092060	0	True				
ANR	8092592	CallExpression	"pl_dict_put_synonym ( & pcs -> macros , alpha_data -> string_id , string_id_size , current_macro_id , current_macro_id_size )"		8092060	0					
ANR	8092593	Callee	pl_dict_put_synonym		8092060	0					
ANR	8092594	Identifier	pl_dict_put_synonym		8092060	0					
ANR	8092595	ArgumentList	& pcs -> macros		8092060	1					
ANR	8092596	Argument	& pcs -> macros		8092060	0					
ANR	8092597	UnaryOperationExpression	& pcs -> macros		8092060	0					
ANR	8092598	UnaryOperator	&		8092060	0					
ANR	8092599	PtrMemberAccess	pcs -> macros		8092060	1					
ANR	8092600	Identifier	pcs		8092060	0					
ANR	8092601	Identifier	macros		8092060	1					
ANR	8092602	Argument	alpha_data -> string_id		8092060	1					
ANR	8092603	PtrMemberAccess	alpha_data -> string_id		8092060	0					
ANR	8092604	Identifier	alpha_data		8092060	0					
ANR	8092605	Identifier	string_id		8092060	1					
ANR	8092606	Argument	string_id_size		8092060	2					
ANR	8092607	Identifier	string_id_size		8092060	0					
ANR	8092608	Argument	current_macro_id		8092060	3					
ANR	8092609	Identifier	current_macro_id		8092060	0					
ANR	8092610	Argument	current_macro_id_size		8092060	4					
ANR	8092611	Identifier	current_macro_id_size		8092060	0					
ANR	8092612	ElseStatement	else		8092060	0					
ANR	8092613	CompoundStatement		124:23:5368:5368	8092060	0					
ANR	8092614	ReturnStatement	"return pcl_find_resource ( pcs , alpha_data -> string_id , string_id_size , macro_resource ) ;"	990:20:38069:38198	8092060	0	True				
ANR	8092615	CallExpression	"pcl_find_resource ( pcs , alpha_data -> string_id , string_id_size , macro_resource )"		8092060	0					
ANR	8092616	Callee	pcl_find_resource		8092060	0					
ANR	8092617	Identifier	pcl_find_resource		8092060	0					
ANR	8092618	ArgumentList	pcs		8092060	1					
ANR	8092619	Argument	pcs		8092060	0					
ANR	8092620	Identifier	pcs		8092060	0					
ANR	8092621	Argument	alpha_data -> string_id		8092060	1					
ANR	8092622	PtrMemberAccess	alpha_data -> string_id		8092060	0					
ANR	8092623	Identifier	alpha_data		8092060	0					
ANR	8092624	Identifier	string_id		8092060	1					
ANR	8092625	Argument	string_id_size		8092060	2					
ANR	8092626	Identifier	string_id_size		8092060	0					
ANR	8092627	Argument	macro_resource		8092060	3					
ANR	8092628	Identifier	macro_resource		8092060	0					
ANR	8092629	BreakStatement	break ;	994:12:38244:38249	8092060	17	True				
ANR	8092630	Label	case 20 :	995:8:38259:38266	8092060	18	True				
ANR	8092631	IfStatement	if ( pcs -> font_id_type == string_id )		8092060	19					
ANR	8092632	Condition	pcs -> font_id_type == string_id	997:16:38360:38389	8092060	0	True				
ANR	8092633	EqualityExpression	pcs -> font_id_type == string_id		8092060	0		==			
ANR	8092634	PtrMemberAccess	pcs -> font_id_type		8092060	0					
ANR	8092635	Identifier	pcs		8092060	0					
ANR	8092636	Identifier	font_id_type		8092060	1					
ANR	8092637	Identifier	string_id		8092060	1					
ANR	8092638	ReturnStatement	"return pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL ) ;"	998:16:38408:38522	8092060	1	True				
ANR	8092639	CallExpression	"pcl_delete_soft_font ( pcs , current_font_id , current_font_id_size , NULL )"		8092060	0					
ANR	8092640	Callee	pcl_delete_soft_font		8092060	0					
ANR	8092641	Identifier	pcl_delete_soft_font		8092060	0					
ANR	8092642	ArgumentList	pcs		8092060	1					
ANR	8092643	Argument	pcs		8092060	0					
ANR	8092644	Identifier	pcs		8092060	0					
ANR	8092645	Argument	current_font_id		8092060	1					
ANR	8092646	Identifier	current_font_id		8092060	0					
ANR	8092647	Argument	current_font_id_size		8092060	2					
ANR	8092648	Identifier	current_font_id_size		8092060	0					
ANR	8092649	Argument	NULL		8092060	3					
ANR	8092650	Identifier	NULL		8092060	0					
ANR	8092651	BreakStatement	break ;	1000:12:38536:38541	8092060	20	True				
ANR	8092652	Label	case 21 :	1001:8:38551:38558	8092060	21	True				
ANR	8092653	IfStatement	if ( pcs -> macro_id_type == string_id )		8092060	22					
ANR	8092654	Condition	pcs -> macro_id_type == string_id	1003:16:38655:38685	8092060	0	True				
ANR	8092655	EqualityExpression	pcs -> macro_id_type == string_id		8092060	0		==			
ANR	8092656	PtrMemberAccess	pcs -> macro_id_type		8092060	0					
ANR	8092657	Identifier	pcs		8092060	0					
ANR	8092658	Identifier	macro_id_type		8092060	1					
ANR	8092659	Identifier	string_id		8092060	1					
ANR	8092660	ExpressionStatement	"pl_dict_undef ( & pcs -> macros , current_macro_id , current_macro_id_size )"	1004:16:38704:38802	8092060	1	True				
ANR	8092661	CallExpression	"pl_dict_undef ( & pcs -> macros , current_macro_id , current_macro_id_size )"		8092060	0					
ANR	8092662	Callee	pl_dict_undef		8092060	0					
ANR	8092663	Identifier	pl_dict_undef		8092060	0					
ANR	8092664	ArgumentList	& pcs -> macros		8092060	1					
ANR	8092665	Argument	& pcs -> macros		8092060	0					
ANR	8092666	UnaryOperationExpression	& pcs -> macros		8092060	0					
ANR	8092667	UnaryOperator	&		8092060	0					
ANR	8092668	PtrMemberAccess	pcs -> macros		8092060	1					
ANR	8092669	Identifier	pcs		8092060	0					
ANR	8092670	Identifier	macros		8092060	1					
ANR	8092671	Argument	current_macro_id		8092060	1					
ANR	8092672	Identifier	current_macro_id		8092060	0					
ANR	8092673	Argument	current_macro_id_size		8092060	2					
ANR	8092674	Identifier	current_macro_id_size		8092060	0					
ANR	8092675	BreakStatement	break ;	1006:12:38816:38821	8092060	23	True				
ANR	8092676	Label	case 100 :	1007:8:38831:38839	8092060	24	True				
ANR	8092677	CompoundStatement		151:16:6539:6577	8092060	25					
ANR	8092678	IdentifierDeclStatement	int code = pcl_end_page_if_marked ( pcs ) ;	1015:16:39144:39182	8092060	0	True				
ANR	8092679	IdentifierDecl	code = pcl_end_page_if_marked ( pcs )		8092060	0					
ANR	8092680	IdentifierDeclType	int		8092060	0					
ANR	8092681	Identifier	code		8092060	1					
ANR	8092682	AssignmentExpression	code = pcl_end_page_if_marked ( pcs )		8092060	2		=			
ANR	8092683	Identifier	code		8092060	0					
ANR	8092684	CallExpression	pcl_end_page_if_marked ( pcs )		8092060	1					
ANR	8092685	Callee	pcl_end_page_if_marked		8092060	0					
ANR	8092686	Identifier	pcl_end_page_if_marked		8092060	0					
ANR	8092687	ArgumentList	pcs		8092060	1					
ANR	8092688	Argument	pcs		8092060	0					
ANR	8092689	Identifier	pcs		8092060	0					
ANR	8092690	IfStatement	if ( code < 0 )		8092060	1					
ANR	8092691	Condition	code < 0	1016:20:39204:39211	8092060	0	True				
ANR	8092692	RelationalExpression	code < 0		8092060	0		<			
ANR	8092693	Identifier	code		8092060	0					
ANR	8092694	PrimaryExpression	0		8092060	1					
ANR	8092695	ReturnStatement	return code ;	1017:20:39234:39245	8092060	1	True				
ANR	8092696	Identifier	code		8092060	0					
ANR	8092697	ExpressionStatement	pcl_home_cursor ( pcs )	1018:16:39263:39283	8092060	2	True				
ANR	8092698	CallExpression	pcl_home_cursor ( pcs )		8092060	0					
ANR	8092699	Callee	pcl_home_cursor		8092060	0					
ANR	8092700	Identifier	pcl_home_cursor		8092060	0					
ANR	8092701	ArgumentList	pcs		8092060	1					
ANR	8092702	Argument	pcs		8092060	0					
ANR	8092703	Identifier	pcs		8092060	0					
ANR	8092704	BreakStatement	break ;	1020:12:39311:39316	8092060	26	True				
ANR	8092705	Label	default :	1021:8:39326:39333	8092060	27	True				
ANR	8092706	Identifier	default		8092060	0					
ANR	8092707	ReturnStatement	return e_Range ;	1022:12:39347:39361	8092060	28	True				
ANR	8092708	Identifier	e_Range		8092060	0					
ANR	8092709	ReturnStatement	return 0 ;	1024:4:39373:39381	8092060	7	True				
ANR	8092710	PrimaryExpression	0		8092060	0					
ANR	8092711	ReturnType	static int		8092060	1					
ANR	8092712	Identifier	pcl_alphanumeric_id_data		8092060	2					
ANR	8092713	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8092060	3					
ANR	8092714	Parameter	pcl_args_t * pargs	864:25:32565:32582	8092060	0	True				
ANR	8092715	ParameterType	pcl_args_t *		8092060	0					
ANR	8092716	Identifier	pargs		8092060	1					
ANR	8092717	Parameter	pcl_state_t * pcs	864:45:32585:32601	8092060	1	True				
ANR	8092718	ParameterType	pcl_state_t *		8092060	0					
ANR	8092719	Identifier	pcs		8092060	1					
ANR	8092720	CFGEntryNode	ENTRY		8092060		True				
ANR	8092721	CFGExitNode	EXIT		8092060		True				
ANR	8092722	Symbol	pcl_find_resource		8092060						
ANR	8092723	Symbol	pcs -> font_id_type		8092060						
ANR	8092724	Symbol	& value		8092060						
ANR	8092725	Symbol	code		8092060						
ANR	8092726	Symbol	alpha_data		8092060						
ANR	8092727	Symbol	* alpha_data		8092060						
ANR	8092728	Symbol	pcs -> macro_id_type		8092060						
ANR	8092729	Symbol	* pcs		8092060						
ANR	8092730	Symbol	pcl_delete_soft_font		8092060						
ANR	8092731	Symbol	pargs		8092060						
ANR	8092732	Symbol	e_Memory		8092060						
ANR	8092733	Symbol	& pcs -> soft_fonts		8092060						
ANR	8092734	Symbol	gs_debug_c		8092060						
ANR	8092735	Symbol	pcs -> memory		8092060						
ANR	8092736	Symbol	pcs -> alpha_macro_id . id		8092060						
ANR	8092737	Symbol	value		8092060						
ANR	8092738	Symbol	e_Range		8092060						
ANR	8092739	Symbol	pcs		8092060						
ANR	8092740	Symbol	new_id		8092060						
ANR	8092741	Symbol	gs_alloc_bytes		8092060						
ANR	8092742	Symbol	pcs -> alpha_font_id		8092060						
ANR	8092743	Symbol	alpha_data -> operation		8092060						
ANR	8092744	Symbol	current_font_id_size		8092060						
ANR	8092745	Symbol	NULL		8092060						
ANR	8092746	Symbol	string_id_size		8092060						
ANR	8092747	Symbol	alpha_data -> string_id		8092060						
ANR	8092748	Symbol	& pcs -> macros		8092060						
ANR	8092749	Symbol	pl_dict_put_synonym		8092060						
ANR	8092750	Symbol	font_resource		8092060						
ANR	8092751	Symbol	macro_resource		8092060						
ANR	8092752	Symbol	count		8092060						
ANR	8092753	Symbol	pcs -> font_selection		8092060						
ANR	8092754	Symbol	pcs -> alpha_macro_id		8092060						
ANR	8092755	Symbol	pcl_end_page_if_marked		8092060						
ANR	8092756	Symbol	uint_arg		8092060						
ANR	8092757	Symbol	current_macro_id		8092060						
ANR	8092758	Symbol	secondary		8092060						
ANR	8092759	Symbol	current_macro_id_size		8092060						
ANR	8092760	Symbol	pcs -> alpha_font_id . id		8092060						
ANR	8092761	Symbol	pl_dict_find_no_stack		8092060						
ANR	8092762	Symbol	current_font_id		8092060						
ANR	8092763	Symbol	arg_data		8092060						
ANR	8092764	Symbol	true		8092060						
ANR	8092765	Symbol	pcs -> alpha_macro_id . size		8092060						
ANR	8092766	Symbol	pfs		8092060						
ANR	8092767	Symbol	pcs -> alpha_font_id . size		8092060						
ANR	8092768	Symbol	string_id		8092060						
ANR	8092769	Symbol	primary		8092060						
ANR	8092770	Function	pcsfont_do_registration	1028:0:39407:40497							
ANR	8092771	FunctionDef	"pcsfont_do_registration (pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem)"		8092770	0					
ANR	8092772	CompoundStatement		1031:0:39524:40497	8092770	0					
ANR	8092773	Statement	DEFINE_CLASS	1032:4:39584:39595	8092770	0	True				
ANR	8092774	Statement	(	1032:16:39596:39596	8092770	1	True				
ANR	8092775	Statement	'*'	1032:17:39597:39599	8092770	2	True				
ANR	8092776	Statement	)	1032:20:39600:39600	8092770	3	True				
ANR	8092777	CompoundStatement		2:22:77:77	8092770	4					
ANR	8092778	Statement	'c'	1033:4:39608:39610	8092770	0	True				
ANR	8092779	Statement	","	1033:7:39611:39611	8092770	1	True				
ANR	8092780	Statement	'D'	1033:9:39613:39615	8092770	2	True				
ANR	8092781	Statement	","	1033:12:39616:39616	8092770	3	True				
ANR	8092782	Statement	PCL_COMMAND	1034:12:39630:39640	8092770	4	True				
ANR	8092783	Statement	(	1034:23:39641:39641	8092770	5	True				
ANR	8092784	Statement	"""Assign Font ID"""	1034:24:39642:39657	8092770	6	True				
ANR	8092785	Statement	","	1034:40:39658:39658	8092770	7	True				
ANR	8092786	Statement	pcl_assign_font_id	1034:42:39660:39677	8092770	8	True				
ANR	8092787	Statement	","	1034:60:39678:39678	8092770	9	True				
ANR	8092788	Statement	pca_neg_error	1035:28:39708:39720	8092770	10	True				
ANR	8092789	Statement	|	1035:42:39722:39722	8092770	11	True				
ANR	8092790	Statement	pca_big_error	1035:44:39724:39736	8092770	12	True				
ANR	8092791	Statement	)	1035:57:39737:39737	8092770	13	True				
ANR	8092792	Statement	","	1035:59:39739:39739	8092770	5	True				
ANR	8092793	CompoundStatement		5:61:216:216	8092770	6					
ANR	8092794	Statement	'c'	1036:4:39747:39749	8092770	0	True				
ANR	8092795	Statement	","	1036:7:39750:39750	8092770	1	True				
ANR	8092796	Statement	'F'	1036:9:39752:39754	8092770	2	True				
ANR	8092797	Statement	","	1036:12:39755:39755	8092770	3	True				
ANR	8092798	Statement	PCL_COMMAND	1037:12:39769:39779	8092770	4	True				
ANR	8092799	Statement	(	1037:23:39780:39780	8092770	5	True				
ANR	8092800	Statement	"""Font Control"""	1037:24:39781:39794	8092770	6	True				
ANR	8092801	Statement	","	1037:38:39795:39795	8092770	7	True				
ANR	8092802	Statement	pcl_font_control	1037:40:39797:39812	8092770	8	True				
ANR	8092803	Statement	","	1037:56:39813:39813	8092770	9	True				
ANR	8092804	Statement	pca_neg_error	1038:28:39843:39855	8092770	10	True				
ANR	8092805	Statement	|	1038:42:39857:39857	8092770	11	True				
ANR	8092806	Statement	pca_big_error	1038:44:39859:39871	8092770	12	True				
ANR	8092807	Statement	)	1038:57:39872:39872	8092770	13	True				
ANR	8092808	Statement	","	1038:59:39874:39874	8092770	7	True				
ANR	8092809	Statement	END_CLASS	1039:8:39884:39892	8092770	8	True				
ANR	8092810	Statement	DEFINE_CLASS_COMMAND_ARGS	1040:8:39902:39926	8092770	9	True				
ANR	8092811	Statement	(	1040:33:39927:39927	8092770	10	True				
ANR	8092812	Statement	')'	1040:34:39928:39930	8092770	11	True				
ANR	8092813	Statement	","	1040:37:39931:39931	8092770	12	True				
ANR	8092814	Statement	's'	1040:39:39933:39935	8092770	13	True				
ANR	8092815	Statement	","	1040:42:39936:39936	8092770	14	True				
ANR	8092816	Statement	'W'	1040:44:39938:39940	8092770	15	True				
ANR	8092817	Statement	","	1040:47:39941:39941	8092770	16	True				
ANR	8092818	Statement	"""Font Header"""	1040:49:39943:39955	8092770	17	True				
ANR	8092819	Statement	","	1040:62:39956:39956	8092770	18	True				
ANR	8092820	Statement	pcl_font_header	1041:34:39992:40006	8092770	19	True				
ANR	8092821	Statement	","	1041:49:40007:40007	8092770	20	True				
ANR	8092822	Statement	pca_bytes	1041:51:40009:40017	8092770	21	True				
ANR	8092823	Statement	)	1041:60:40018:40018	8092770	22	True				
ANR	8092824	Statement	DEFINE_CLASS_COMMAND_ARGS	1042:8:40028:40052	8092770	23	True				
ANR	8092825	Statement	(	1042:33:40053:40053	8092770	24	True				
ANR	8092826	Statement	'*'	1042:34:40054:40056	8092770	25	True				
ANR	8092827	Statement	","	1042:37:40057:40057	8092770	26	True				
ANR	8092828	Statement	'c'	1042:39:40059:40061	8092770	27	True				
ANR	8092829	Statement	","	1042:42:40062:40062	8092770	28	True				
ANR	8092830	Statement	'E'	1042:44:40064:40066	8092770	29	True				
ANR	8092831	Statement	","	1042:47:40067:40067	8092770	30	True				
ANR	8092832	Statement	"""Character Code"""	1042:49:40069:40084	8092770	31	True				
ANR	8092833	Statement	","	1042:65:40085:40085	8092770	32	True				
ANR	8092834	Statement	pcl_character_code	1043:34:40121:40138	8092770	33	True				
ANR	8092835	Statement	","	1043:52:40139:40139	8092770	34	True				
ANR	8092836	Statement	pca_neg_error	1044:34:40175:40187	8092770	35	True				
ANR	8092837	Statement	|	1044:48:40189:40189	8092770	36	True				
ANR	8092838	Statement	pca_big_ok	1044:50:40191:40200	8092770	37	True				
ANR	8092839	Statement	)	1044:60:40201:40201	8092770	38	True				
ANR	8092840	Statement	DEFINE_CLASS_COMMAND_ARGS	1045:8:40211:40235	8092770	39	True				
ANR	8092841	Statement	(	1045:33:40236:40236	8092770	40	True				
ANR	8092842	Statement	'('	1045:34:40237:40239	8092770	41	True				
ANR	8092843	Statement	","	1045:37:40240:40240	8092770	42	True				
ANR	8092844	Statement	's'	1045:39:40242:40244	8092770	43	True				
ANR	8092845	Statement	","	1045:42:40245:40245	8092770	44	True				
ANR	8092846	Statement	'W'	1045:44:40247:40249	8092770	45	True				
ANR	8092847	Statement	","	1045:47:40250:40250	8092770	46	True				
ANR	8092848	Statement	"""Character Data"""	1045:49:40252:40267	8092770	47	True				
ANR	8092849	Statement	","	1045:65:40268:40268	8092770	48	True				
ANR	8092850	Statement	pcl_character_data	1046:34:40304:40321	8092770	49	True				
ANR	8092851	Statement	","	1046:52:40322:40322	8092770	50	True				
ANR	8092852	Statement	pca_bytes	1046:54:40324:40332	8092770	51	True				
ANR	8092853	Statement	)	1046:63:40333:40333	8092770	52	True				
ANR	8092854	Statement	DEFINE_CLASS_COMMAND_ARGS	1047:8:40343:40367	8092770	53	True				
ANR	8092855	Statement	(	1047:33:40368:40368	8092770	54	True				
ANR	8092856	Statement	'&'	1047:34:40369:40371	8092770	55	True				
ANR	8092857	Statement	","	1047:37:40372:40372	8092770	56	True				
ANR	8092858	Statement	'n'	1047:39:40374:40376	8092770	57	True				
ANR	8092859	Statement	","	1047:42:40377:40377	8092770	58	True				
ANR	8092860	Statement	'W'	1047:44:40379:40381	8092770	59	True				
ANR	8092861	Statement	","	1047:47:40382:40382	8092770	60	True				
ANR	8092862	Statement	"""Alphanumeric ID Data"""	1047:49:40384:40405	8092770	61	True				
ANR	8092863	Statement	","	1047:71:40406:40406	8092770	62	True				
ANR	8092864	Statement	pcl_alphanumeric_id_data	1048:34:40442:40465	8092770	63	True				
ANR	8092865	Statement	","	1048:58:40466:40466	8092770	64	True				
ANR	8092866	Statement	pca_bytes	1048:60:40468:40476	8092770	65	True				
ANR	8092867	Statement	)	1048:69:40477:40477	8092770	66	True				
ANR	8092868	ReturnStatement	return 0 ;	1049:8:40487:40495	8092770	67	True				
ANR	8092869	PrimaryExpression	0		8092770	0					
ANR	8092870	ReturnType	static int		8092770	1					
ANR	8092871	Identifier	pcsfont_do_registration		8092770	2					
ANR	8092872	ParameterList	"pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem"		8092770	3					
ANR	8092873	Parameter	pcl_parser_state_t * pcl_parser_state	1029:24:39442:39478	8092770	0	True				
ANR	8092874	ParameterType	pcl_parser_state_t *		8092770	0					
ANR	8092875	Identifier	pcl_parser_state		8092770	1					
ANR	8092876	Parameter	gs_memory_t * mem	1030:24:39505:39521	8092770	1	True				
ANR	8092877	ParameterType	gs_memory_t *		8092770	0					
ANR	8092878	Identifier	mem		8092770	1					
ANR	8092879	CFGEntryNode	ENTRY		8092770		True				
ANR	8092880	CFGExitNode	EXIT		8092770		True				
ANR	8092881	Symbol	mem		8092770						
ANR	8092882	Symbol	pcl_parser_state		8092770						
ANR	8092883	Function	pcsfont_do_reset	1051:0:40499:41337							
ANR	8092884	FunctionDef	"pcsfont_do_reset (pcl_state_t * pcs , pcl_reset_type_t type)"		8092883	0					
ANR	8092885	CompoundStatement		1053:0:40569:41337	8092883	0					
ANR	8092886	IfStatement	if ( type & ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay ) )		8092883	0					
ANR	8092887	Condition	type & ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay )	1054:8:40579:40644	8092883	0	True				
ANR	8092888	BitAndExpression	type & ( pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay )		8092883	0		&			
ANR	8092889	Identifier	type		8092883	0					
ANR	8092890	InclusiveOrExpression	pcl_reset_initial | pcl_reset_printer | pcl_reset_overlay		8092883	1		|			
ANR	8092891	Identifier	pcl_reset_initial		8092883	0					
ANR	8092892	InclusiveOrExpression	pcl_reset_printer | pcl_reset_overlay		8092883	1		|			
ANR	8092893	Identifier	pcl_reset_printer		8092883	0					
ANR	8092894	Identifier	pcl_reset_overlay		8092883	1					
ANR	8092895	CompoundStatement		2:76:77:77	8092883	1					
ANR	8092896	ExpressionStatement	pcs -> soft_font_char_data = 0	1055:8:40657:40685	8092883	0	True				
ANR	8092897	AssignmentExpression	pcs -> soft_font_char_data = 0		8092883	0		=			
ANR	8092898	PtrMemberAccess	pcs -> soft_font_char_data		8092883	0					
ANR	8092899	Identifier	pcs		8092883	0					
ANR	8092900	Identifier	soft_font_char_data		8092883	1					
ANR	8092901	PrimaryExpression	0		8092883	1					
ANR	8092902	ExpressionStatement	pcs -> soft_font_count = 0	1056:8:40695:40719	8092883	1	True				
ANR	8092903	AssignmentExpression	pcs -> soft_font_count = 0		8092883	0		=			
ANR	8092904	PtrMemberAccess	pcs -> soft_font_count		8092883	0					
ANR	8092905	Identifier	pcs		8092883	0					
ANR	8092906	Identifier	soft_font_count		8092883	1					
ANR	8092907	PrimaryExpression	0		8092883	1					
ANR	8092908	ExpressionStatement	"id_set_value ( pcs -> font_id , 0 )"	1057:8:40729:40758	8092883	2	True				
ANR	8092909	CallExpression	"id_set_value ( pcs -> font_id , 0 )"		8092883	0					
ANR	8092910	Callee	id_set_value		8092883	0					
ANR	8092911	Identifier	id_set_value		8092883	0					
ANR	8092912	ArgumentList	pcs -> font_id		8092883	1					
ANR	8092913	Argument	pcs -> font_id		8092883	0					
ANR	8092914	PtrMemberAccess	pcs -> font_id		8092883	0					
ANR	8092915	Identifier	pcs		8092883	0					
ANR	8092916	Identifier	font_id		8092883	1					
ANR	8092917	Argument	0		8092883	1					
ANR	8092918	PrimaryExpression	0		8092883	0					
ANR	8092919	ExpressionStatement	pcs -> character_code = 0	1058:8:40768:40791	8092883	3	True				
ANR	8092920	AssignmentExpression	pcs -> character_code = 0		8092883	0		=			
ANR	8092921	PtrMemberAccess	pcs -> character_code		8092883	0					
ANR	8092922	Identifier	pcs		8092883	0					
ANR	8092923	Identifier	character_code		8092883	1					
ANR	8092924	PrimaryExpression	0		8092883	1					
ANR	8092925	ExpressionStatement	pcs -> font_id_type = numeric_id	1059:8:40801:40831	8092883	4	True				
ANR	8092926	AssignmentExpression	pcs -> font_id_type = numeric_id		8092883	0		=			
ANR	8092927	PtrMemberAccess	pcs -> font_id_type		8092883	0					
ANR	8092928	Identifier	pcs		8092883	0					
ANR	8092929	Identifier	font_id_type		8092883	1					
ANR	8092930	Identifier	numeric_id		8092883	1					
ANR	8092931	IfStatement	if ( ( type & pcl_reset_printer ) != 0 )		8092883	5					
ANR	8092932	Condition	( type & pcl_reset_printer ) != 0	1060:12:40845:40875	8092883	0	True				
ANR	8092933	EqualityExpression	( type & pcl_reset_printer ) != 0		8092883	0		!=			
ANR	8092934	BitAndExpression	type & pcl_reset_printer		8092883	0		&			
ANR	8092935	Identifier	type		8092883	0					
ANR	8092936	Identifier	pcl_reset_printer		8092883	1					
ANR	8092937	PrimaryExpression	0		8092883	1					
ANR	8092938	CompoundStatement		10:12:348:363	8092883	1					
ANR	8092939	IdentifierDeclStatement	int code = 0 ;	1061:12:40892:40904	8092883	0	True				
ANR	8092940	IdentifierDecl	code = 0		8092883	0					
ANR	8092941	IdentifierDeclType	int		8092883	0					
ANR	8092942	Identifier	code		8092883	1					
ANR	8092943	AssignmentExpression	code = 0		8092883	2		=			
ANR	8092944	Identifier	code		8092883	0					
ANR	8092945	PrimaryExpression	0		8092883	1					
ANR	8092946	IdentifierDeclStatement	pcl_args_t args ;	1062:12:40918:40933	8092883	1	True				
ANR	8092947	IdentifierDecl	args		8092883	0					
ANR	8092948	IdentifierDeclType	pcl_args_t		8092883	0					
ANR	8092949	Identifier	args		8092883	1					
ANR	8092950	ExpressionStatement	"arg_set_uint ( & args , 1 )"	1064:12:40948:40970	8092883	2	True				
ANR	8092951	CallExpression	"arg_set_uint ( & args , 1 )"		8092883	0					
ANR	8092952	Callee	arg_set_uint		8092883	0					
ANR	8092953	Identifier	arg_set_uint		8092883	0					
ANR	8092954	ArgumentList	& args		8092883	1					
ANR	8092955	Argument	& args		8092883	0					
ANR	8092956	UnaryOperationExpression	& args		8092883	0					
ANR	8092957	UnaryOperator	&		8092883	0					
ANR	8092958	Identifier	args		8092883	1					
ANR	8092959	Argument	1		8092883	1					
ANR	8092960	PrimaryExpression	1		8092883	0					
ANR	8092961	ExpressionStatement	"code = pcl_font_control ( & args , pcs )"	1065:12:41017:41052	8092883	3	True				
ANR	8092962	AssignmentExpression	"code = pcl_font_control ( & args , pcs )"		8092883	0		=			
ANR	8092963	Identifier	code		8092883	0					
ANR	8092964	CallExpression	"pcl_font_control ( & args , pcs )"		8092883	1					
ANR	8092965	Callee	pcl_font_control		8092883	0					
ANR	8092966	Identifier	pcl_font_control		8092883	0					
ANR	8092967	ArgumentList	& args		8092883	1					
ANR	8092968	Argument	& args		8092883	0					
ANR	8092969	UnaryOperationExpression	& args		8092883	0					
ANR	8092970	UnaryOperator	&		8092883	0					
ANR	8092971	Identifier	args		8092883	1					
ANR	8092972	Argument	pcs		8092883	1					
ANR	8092973	Identifier	pcs		8092883	0					
ANR	8092974	IfStatement	if ( pcs -> alpha_font_id . id != 0 )		8092883	4					
ANR	8092975	Condition	pcs -> alpha_font_id . id != 0	1066:16:41070:41095	8092883	0	True				
ANR	8092976	EqualityExpression	pcs -> alpha_font_id . id != 0		8092883	0		!=			
ANR	8092977	MemberAccess	pcs -> alpha_font_id . id		8092883	0					
ANR	8092978	PtrMemberAccess	pcs -> alpha_font_id		8092883	0					
ANR	8092979	Identifier	pcs		8092883	0					
ANR	8092980	Identifier	alpha_font_id		8092883	1					
ANR	8092981	Identifier	id		8092883	1					
ANR	8092982	PrimaryExpression	0		8092883	1					
ANR	8092983	ExpressionStatement	"gs_free_object ( pcs -> memory , pcs -> alpha_font_id . id , ""pcsfont_do_reset"" )"	1067:16:41114:41215	8092883	1	True				
ANR	8092984	CallExpression	"gs_free_object ( pcs -> memory , pcs -> alpha_font_id . id , ""pcsfont_do_reset"" )"		8092883	0					
ANR	8092985	Callee	gs_free_object		8092883	0					
ANR	8092986	Identifier	gs_free_object		8092883	0					
ANR	8092987	ArgumentList	pcs -> memory		8092883	1					
ANR	8092988	Argument	pcs -> memory		8092883	0					
ANR	8092989	PtrMemberAccess	pcs -> memory		8092883	0					
ANR	8092990	Identifier	pcs		8092883	0					
ANR	8092991	Identifier	memory		8092883	1					
ANR	8092992	Argument	pcs -> alpha_font_id . id		8092883	1					
ANR	8092993	MemberAccess	pcs -> alpha_font_id . id		8092883	0					
ANR	8092994	PtrMemberAccess	pcs -> alpha_font_id		8092883	0					
ANR	8092995	Identifier	pcs		8092883	0					
ANR	8092996	Identifier	alpha_font_id		8092883	1					
ANR	8092997	Identifier	id		8092883	1					
ANR	8092998	Argument	"""pcsfont_do_reset"""		8092883	2					
ANR	8092999	PrimaryExpression	"""pcsfont_do_reset"""		8092883	0					
ANR	8093000	IfStatement	if ( code < 0 )		8092883	5					
ANR	8093001	Condition	code < 0	1069:16:41233:41240	8092883	0	True				
ANR	8093002	RelationalExpression	code < 0		8092883	0		<			
ANR	8093003	Identifier	code		8092883	0					
ANR	8093004	PrimaryExpression	0		8092883	1					
ANR	8093005	ReturnStatement	return code ;	1070:16:41259:41270	8092883	1	True				
ANR	8093006	Identifier	code		8092883	0					
ANR	8093007	ExpressionStatement	pcs -> alpha_font_id . id = 0	1072:8:41290:41315	8092883	6	True				
ANR	8093008	AssignmentExpression	pcs -> alpha_font_id . id = 0		8092883	0		=			
ANR	8093009	MemberAccess	pcs -> alpha_font_id . id		8092883	0					
ANR	8093010	PtrMemberAccess	pcs -> alpha_font_id		8092883	0					
ANR	8093011	Identifier	pcs		8092883	0					
ANR	8093012	Identifier	alpha_font_id		8092883	1					
ANR	8093013	Identifier	id		8092883	1					
ANR	8093014	PrimaryExpression	0		8092883	1					
ANR	8093015	ReturnStatement	return 0 ;	1074:4:41327:41335	8092883	1	True				
ANR	8093016	PrimaryExpression	0		8092883	0					
ANR	8093017	ReturnType	static int		8092883	1					
ANR	8093018	Identifier	pcsfont_do_reset		8092883	2					
ANR	8093019	ParameterList	"pcl_state_t * pcs , pcl_reset_type_t type"		8092883	3					
ANR	8093020	Parameter	pcl_state_t * pcs	1052:17:40527:40543	8092883	0	True				
ANR	8093021	ParameterType	pcl_state_t *		8092883	0					
ANR	8093022	Identifier	pcs		8092883	1					
ANR	8093023	Parameter	pcl_reset_type_t type	1052:36:40546:40566	8092883	1	True				
ANR	8093024	ParameterType	pcl_reset_type_t		8092883	0					
ANR	8093025	Identifier	type		8092883	1					
ANR	8093026	CFGEntryNode	ENTRY		8092883		True				
ANR	8093027	CFGExitNode	EXIT		8092883		True				
ANR	8093028	Symbol	pcs		8092883						
ANR	8093029	Symbol	pcs -> font_id_type		8092883						
ANR	8093030	Symbol	pcs -> alpha_font_id		8092883						
ANR	8093031	Symbol	code		8092883						
ANR	8093032	Symbol	numeric_id		8092883						
ANR	8093033	Symbol	pcs -> soft_font_count		8092883						
ANR	8093034	Symbol	pcl_reset_printer		8092883						
ANR	8093035	Symbol	* pcs		8092883						
ANR	8093036	Symbol	type		8092883						
ANR	8093037	Symbol	args		8092883						
ANR	8093038	Symbol	pcs -> alpha_font_id . id		8092883						
ANR	8093039	Symbol	pcs -> character_code		8092883						
ANR	8093040	Symbol	pcl_font_control		8092883						
ANR	8093041	Symbol	pcl_reset_overlay		8092883						
ANR	8093042	Symbol	pcs -> soft_font_char_data		8092883						
ANR	8093043	Symbol	pcs -> memory		8092883						
ANR	8093044	Symbol	pcl_reset_initial		8092883						
ANR	8093045	Symbol	pcs -> font_id		8092883						
ANR	8093046	Symbol	& args		8092883						
ANR	8093047	Function	pcsfont_do_copy	1076:0:41339:41662							
ANR	8093048	FunctionDef	"pcsfont_do_copy (pcl_state_t * psaved , const pcl_state_t * pcs , pcl_copy_operation_t operation)"		8093047	0					
ANR	8093049	CompoundStatement		1079:0:41461:41662	8093047	0					
ANR	8093050	IfStatement	if ( operation & pcl_copy_after )		8093047	0					
ANR	8093051	Condition	operation & pcl_copy_after	1080:8:41471:41496	8093047	0	True				
ANR	8093052	BitAndExpression	operation & pcl_copy_after		8093047	0		&			
ANR	8093053	Identifier	operation		8093047	0					
ANR	8093054	Identifier	pcl_copy_after		8093047	1					
ANR	8093055	CompoundStatement		2:36:37:37	8093047	1					
ANR	8093056	ExpressionStatement	psaved -> soft_fonts = pcs -> soft_fonts	1081:8:41550:41586	8093047	0	True				
ANR	8093057	AssignmentExpression	psaved -> soft_fonts = pcs -> soft_fonts		8093047	0		=			
ANR	8093058	PtrMemberAccess	psaved -> soft_fonts		8093047	0					
ANR	8093059	Identifier	psaved		8093047	0					
ANR	8093060	Identifier	soft_fonts		8093047	1					
ANR	8093061	PtrMemberAccess	pcs -> soft_fonts		8093047	1					
ANR	8093062	Identifier	pcs		8093047	0					
ANR	8093063	Identifier	soft_fonts		8093047	1					
ANR	8093064	ExpressionStatement	psaved -> built_in_fonts = pcs -> built_in_fonts	1082:8:41596:41640	8093047	1	True				
ANR	8093065	AssignmentExpression	psaved -> built_in_fonts = pcs -> built_in_fonts		8093047	0		=			
ANR	8093066	PtrMemberAccess	psaved -> built_in_fonts		8093047	0					
ANR	8093067	Identifier	psaved		8093047	0					
ANR	8093068	Identifier	built_in_fonts		8093047	1					
ANR	8093069	PtrMemberAccess	pcs -> built_in_fonts		8093047	1					
ANR	8093070	Identifier	pcs		8093047	0					
ANR	8093071	Identifier	built_in_fonts		8093047	1					
ANR	8093072	ReturnStatement	return 0 ;	1084:4:41652:41660	8093047	1	True				
ANR	8093073	PrimaryExpression	0		8093047	0					
ANR	8093074	ReturnType	static int		8093047	1					
ANR	8093075	Identifier	pcsfont_do_copy		8093047	2					
ANR	8093076	ParameterList	"pcl_state_t * psaved , const pcl_state_t * pcs , pcl_copy_operation_t operation"		8093047	3					
ANR	8093077	Parameter	pcl_state_t * psaved	1077:16:41366:41385	8093047	0	True				
ANR	8093078	ParameterType	pcl_state_t *		8093047	0					
ANR	8093079	Identifier	psaved		8093047	1					
ANR	8093080	Parameter	const pcl_state_t * pcs	1077:38:41388:41410	8093047	1	True				
ANR	8093081	ParameterType	const pcl_state_t *		8093047	0					
ANR	8093082	Identifier	pcs		8093047	1					
ANR	8093083	Parameter	pcl_copy_operation_t operation	1078:16:41429:41458	8093047	2	True				
ANR	8093084	ParameterType	pcl_copy_operation_t		8093047	0					
ANR	8093085	Identifier	operation		8093047	1					
ANR	8093086	CFGEntryNode	ENTRY		8093047		True				
ANR	8093087	CFGExitNode	EXIT		8093047		True				
ANR	8093088	Symbol	pcs		8093047						
ANR	8093089	Symbol	pcs -> built_in_fonts		8093047						
ANR	8093090	Symbol	pcs -> soft_fonts		8093047						
ANR	8093091	Symbol	* psaved		8093047						
ANR	8093092	Symbol	psaved		8093047						
ANR	8093093	Symbol	pcl_copy_after		8093047						
ANR	8093094	Symbol	psaved -> soft_fonts		8093047						
ANR	8093095	Symbol	psaved -> built_in_fonts		8093047						
ANR	8093096	Symbol	* pcs		8093047						
ANR	8093097	Symbol	operation		8093047						
ANR	8093098	DeclStmt									
ANR	8093099	Decl							const pcl_init_t	const pcl_init_t	pcsfont_init
