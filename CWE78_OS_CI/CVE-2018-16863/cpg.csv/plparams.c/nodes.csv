command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8466610	File	data/converged/CVE-2018-16863_ghostpdl/plparams.c								
ANR	8466611	DeclStmt									
ANR	8466612	Decl							int	"int ( gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p )"	pjl_dist_process_dict
ANR	8466613	DeclStmt									
ANR	8466614	Decl							int	int ( char * p )	count_tokens
ANR	8466615	DeclStmt									
ANR	8466616	Decl							int	"int ( gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p )"	pjl_dist_process_dict_or_hexstring
ANR	8466617	DeclStmt									
ANR	8466618	Decl							int	"int ( gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p )"	pjl_dist_process_string
ANR	8466619	DeclStmt									
ANR	8466620	Decl							int	"int ( gs_param_list * , char * * )"	pjl_dist_add_tokens_to_list
ANR	8466621	DeclStmt									
ANR	8466622	Decl							int	"int ( gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p )"	pjl_dist_process_number
ANR	8466623	DeclStmt									
ANR	8466624	Decl							int	"int ( gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p )"	pjl_dist_process_array
ANR	8466625	DeclStmt									
ANR	8466626	Decl							int	"int ( gs_memory_t * mem , gs_c_param_list * plist , gs_param_name * key , char * * p )"	pjl_dist_process_name
ANR	8466627	Function	pdfmark_write_list	44:0:1873:2842							
ANR	8466628	FunctionDef	"pdfmark_write_list (gs_memory_t * mem , gx_device * device , gs_param_string_array * array_list)"		8466627	0					
ANR	8466629	CompoundStatement		45:0:1975:2842	8466627	0					
ANR	8466630	IdentifierDeclStatement	gs_c_param_list list ;	46:4:1981:2001	8466627	0	True				
ANR	8466631	IdentifierDecl	list		8466627	0					
ANR	8466632	IdentifierDeclType	gs_c_param_list		8466627	0					
ANR	8466633	Identifier	list		8466627	1					
ANR	8466634	IdentifierDeclStatement	int code ;	47:4:2007:2015	8466627	1	True				
ANR	8466635	IdentifierDecl	code		8466627	0					
ANR	8466636	IdentifierDeclType	int		8466627	0					
ANR	8466637	Identifier	code		8466627	1					
ANR	8466638	ExpressionStatement	"gs_c_param_list_write ( & list , mem )"	50:4:2077:2110	8466627	2	True				
ANR	8466639	CallExpression	"gs_c_param_list_write ( & list , mem )"		8466627	0					
ANR	8466640	Callee	gs_c_param_list_write		8466627	0					
ANR	8466641	Identifier	gs_c_param_list_write		8466627	0					
ANR	8466642	ArgumentList	& list		8466627	1					
ANR	8466643	Argument	& list		8466627	0					
ANR	8466644	UnaryOperationExpression	& list		8466627	0					
ANR	8466645	UnaryOperator	&		8466627	0					
ANR	8466646	Identifier	list		8466627	1					
ANR	8466647	Argument	mem		8466627	1					
ANR	8466648	Identifier	mem		8466627	0					
ANR	8466649	ExpressionStatement	"gs_param_list_set_persistent_keys ( ( gs_param_list * ) & list , false )"	54:4:2240:2305	8466627	3	True				
ANR	8466650	CallExpression	"gs_param_list_set_persistent_keys ( ( gs_param_list * ) & list , false )"		8466627	0					
ANR	8466651	Callee	gs_param_list_set_persistent_keys		8466627	0					
ANR	8466652	Identifier	gs_param_list_set_persistent_keys		8466627	0					
ANR	8466653	ArgumentList	( gs_param_list * ) & list		8466627	1					
ANR	8466654	Argument	( gs_param_list * ) & list		8466627	0					
ANR	8466655	CastExpression	( gs_param_list * ) & list		8466627	0					
ANR	8466656	CastTarget	gs_param_list *		8466627	0					
ANR	8466657	UnaryOperationExpression	& list		8466627	1					
ANR	8466658	UnaryOperator	&		8466627	0					
ANR	8466659	Identifier	list		8466627	1					
ANR	8466660	Argument	false		8466627	1					
ANR	8466661	Identifier	false		8466627	0					
ANR	8466662	ExpressionStatement	gs_c_param_list_write_more ( & list )	57:4:2385:2418	8466627	4	True				
ANR	8466663	CallExpression	gs_c_param_list_write_more ( & list )		8466627	0					
ANR	8466664	Callee	gs_c_param_list_write_more		8466627	0					
ANR	8466665	Identifier	gs_c_param_list_write_more		8466627	0					
ANR	8466666	ArgumentList	& list		8466627	1					
ANR	8466667	Argument	& list		8466627	0					
ANR	8466668	UnaryOperationExpression	& list		8466627	0					
ANR	8466669	UnaryOperator	&		8466627	0					
ANR	8466670	Identifier	list		8466627	1					
ANR	8466671	ExpressionStatement	"code = param_write_string_array ( ( gs_param_list * ) & list , ""pdfmark"" , array_list )"	60:4:2474:2552	8466627	5	True				
ANR	8466672	AssignmentExpression	"code = param_write_string_array ( ( gs_param_list * ) & list , ""pdfmark"" , array_list )"		8466627	0		=			
ANR	8466673	Identifier	code		8466627	0					
ANR	8466674	CallExpression	"param_write_string_array ( ( gs_param_list * ) & list , ""pdfmark"" , array_list )"		8466627	1					
ANR	8466675	Callee	param_write_string_array		8466627	0					
ANR	8466676	Identifier	param_write_string_array		8466627	0					
ANR	8466677	ArgumentList	( gs_param_list * ) & list		8466627	1					
ANR	8466678	Argument	( gs_param_list * ) & list		8466627	0					
ANR	8466679	CastExpression	( gs_param_list * ) & list		8466627	0					
ANR	8466680	CastTarget	gs_param_list *		8466627	0					
ANR	8466681	UnaryOperationExpression	& list		8466627	1					
ANR	8466682	UnaryOperator	&		8466627	0					
ANR	8466683	Identifier	list		8466627	1					
ANR	8466684	Argument	"""pdfmark"""		8466627	1					
ANR	8466685	PrimaryExpression	"""pdfmark"""		8466627	0					
ANR	8466686	Argument	array_list		8466627	2					
ANR	8466687	Identifier	array_list		8466627	0					
ANR	8466688	IfStatement	if ( code < 0 )		8466627	6					
ANR	8466689	Condition	code < 0	61:8:2562:2569	8466627	0	True				
ANR	8466690	RelationalExpression	code < 0		8466627	0		<			
ANR	8466691	Identifier	code		8466627	0					
ANR	8466692	PrimaryExpression	0		8466627	1					
ANR	8466693	ReturnStatement	return code ;	62:8:2580:2591	8466627	1	True				
ANR	8466694	Identifier	code		8466627	0					
ANR	8466695	ExpressionStatement	gs_c_param_list_read ( & list )	65:4:2684:2711	8466627	7	True				
ANR	8466696	CallExpression	gs_c_param_list_read ( & list )		8466627	0					
ANR	8466697	Callee	gs_c_param_list_read		8466627	0					
ANR	8466698	Identifier	gs_c_param_list_read		8466627	0					
ANR	8466699	ArgumentList	& list		8466627	1					
ANR	8466700	Argument	& list		8466627	0					
ANR	8466701	UnaryOperationExpression	& list		8466627	0					
ANR	8466702	UnaryOperator	&		8466627	0					
ANR	8466703	Identifier	list		8466627	1					
ANR	8466704	ExpressionStatement	"code = gs_putdeviceparams ( device , ( gs_param_list * ) & list )"	68:4:2765:2822	8466627	8	True				
ANR	8466705	AssignmentExpression	"code = gs_putdeviceparams ( device , ( gs_param_list * ) & list )"		8466627	0		=			
ANR	8466706	Identifier	code		8466627	0					
ANR	8466707	CallExpression	"gs_putdeviceparams ( device , ( gs_param_list * ) & list )"		8466627	1					
ANR	8466708	Callee	gs_putdeviceparams		8466627	0					
ANR	8466709	Identifier	gs_putdeviceparams		8466627	0					
ANR	8466710	ArgumentList	device		8466627	1					
ANR	8466711	Argument	device		8466627	0					
ANR	8466712	Identifier	device		8466627	0					
ANR	8466713	Argument	( gs_param_list * ) & list		8466627	1					
ANR	8466714	CastExpression	( gs_param_list * ) & list		8466627	0					
ANR	8466715	CastTarget	gs_param_list *		8466627	0					
ANR	8466716	UnaryOperationExpression	& list		8466627	1					
ANR	8466717	UnaryOperator	&		8466627	0					
ANR	8466718	Identifier	list		8466627	1					
ANR	8466719	ReturnStatement	return code ;	70:4:2829:2840	8466627	9	True				
ANR	8466720	Identifier	code		8466627	0					
ANR	8466721	ReturnType	static int		8466627	1					
ANR	8466722	Identifier	pdfmark_write_list		8466627	2					
ANR	8466723	ParameterList	"gs_memory_t * mem , gx_device * device , gs_param_string_array * array_list"		8466627	3					
ANR	8466724	Parameter	gs_memory_t * mem	44:30:1903:1918	8466627	0	True				
ANR	8466725	ParameterType	gs_memory_t *		8466627	0					
ANR	8466726	Identifier	mem		8466627	1					
ANR	8466727	Parameter	gx_device * device	44:48:1921:1937	8466627	1	True				
ANR	8466728	ParameterType	gx_device *		8466627	0					
ANR	8466729	Identifier	device		8466627	1					
ANR	8466730	Parameter	gs_param_string_array * array_list	44:67:1940:1972	8466627	2	True				
ANR	8466731	ParameterType	gs_param_string_array *		8466627	0					
ANR	8466732	Identifier	array_list		8466627	1					
ANR	8466733	CFGEntryNode	ENTRY		8466627		True				
ANR	8466734	CFGExitNode	EXIT		8466627		True				
ANR	8466735	Symbol	array_list		8466627						
ANR	8466736	Symbol	code		8466627						
ANR	8466737	Symbol	mem		8466627						
ANR	8466738	Symbol	gs_putdeviceparams		8466627						
ANR	8466739	Symbol	& list		8466627						
ANR	8466740	Symbol	false		8466627						
ANR	8466741	Symbol	list		8466627						
ANR	8466742	Symbol	device		8466627						
ANR	8466743	Symbol	param_write_string_array		8466627						
ANR	8466744	Function	process_pdfmark	77:0:3025:10049							
ANR	8466745	FunctionDef	"process_pdfmark (gs_memory_t * mem , gx_device * device , char * pdfmark)"		8466744	0					
ANR	8466746	CompoundStatement		78:0:3104:10049	8466744	0					
ANR	8466747	IdentifierDeclStatement	"char * p , * start , * copy , * stream_data = 0L ;"	79:4:3110:3151	8466744	0	True				
ANR	8466748	IdentifierDecl	* p		8466744	0					
ANR	8466749	IdentifierDeclType	char *		8466744	0					
ANR	8466750	Identifier	p		8466744	1					
ANR	8466751	IdentifierDecl	* start		8466744	1					
ANR	8466752	IdentifierDeclType	char *		8466744	0					
ANR	8466753	Identifier	start		8466744	1					
ANR	8466754	IdentifierDecl	* copy		8466744	2					
ANR	8466755	IdentifierDeclType	char *		8466744	0					
ANR	8466756	Identifier	copy		8466744	1					
ANR	8466757	IdentifierDecl	* stream_data = 0L		8466744	3					
ANR	8466758	IdentifierDeclType	char *		8466744	0					
ANR	8466759	Identifier	stream_data		8466744	1					
ANR	8466760	AssignmentExpression	* stream_data = 0L		8466744	2		=			
ANR	8466761	Identifier	stream_data		8466744	0					
ANR	8466762	PrimaryExpression	0L		8466744	1					
ANR	8466763	IdentifierDeclStatement	"int tokens = 0 , code = 0 ;"	80:4:3157:3181	8466744	1	True				
ANR	8466764	IdentifierDecl	tokens = 0		8466744	0					
ANR	8466765	IdentifierDeclType	int		8466744	0					
ANR	8466766	Identifier	tokens		8466744	1					
ANR	8466767	AssignmentExpression	tokens = 0		8466744	2		=			
ANR	8466768	Identifier	tokens		8466744	0					
ANR	8466769	PrimaryExpression	0		8466744	1					
ANR	8466770	IdentifierDecl	code = 0		8466744	1					
ANR	8466771	IdentifierDeclType	int		8466744	0					
ANR	8466772	Identifier	code		8466744	1					
ANR	8466773	AssignmentExpression	code = 0		8466744	2		=			
ANR	8466774	Identifier	code		8466744	0					
ANR	8466775	PrimaryExpression	0		8466744	1					
ANR	8466776	IdentifierDeclStatement	gs_param_string * parray ;	81:4:3187:3210	8466744	2	True				
ANR	8466777	IdentifierDecl	* parray		8466744	0					
ANR	8466778	IdentifierDeclType	gs_param_string *		8466744	0					
ANR	8466779	Identifier	parray		8466744	1					
ANR	8466780	IdentifierDeclStatement	gs_param_string_array array_list ;	82:4:3216:3248	8466744	3	True				
ANR	8466781	IdentifierDecl	array_list		8466744	0					
ANR	8466782	IdentifierDeclType	gs_param_string_array		8466744	0					
ANR	8466783	Identifier	array_list		8466744	1					
ANR	8466784	IdentifierDeclStatement	bool putdict = false ;	83:4:3254:3274	8466744	4	True				
ANR	8466785	IdentifierDecl	putdict = false		8466744	0					
ANR	8466786	IdentifierDeclType	bool		8466744	0					
ANR	8466787	Identifier	putdict		8466744	1					
ANR	8466788	AssignmentExpression	putdict = false		8466744	2		=			
ANR	8466789	Identifier	false		8466744	0					
ANR	8466790	Identifier	false		8466744	1					
ANR	8466791	ExpressionStatement	"copy = ( char * ) gs_alloc_bytes ( mem , strlen ( pdfmark ) + 1 , ""working buffer for pdfmark processing"" )"	86:4:3382:3478	8466744	5	True				
ANR	8466792	AssignmentExpression	"copy = ( char * ) gs_alloc_bytes ( mem , strlen ( pdfmark ) + 1 , ""working buffer for pdfmark processing"" )"		8466744	0		=			
ANR	8466793	Identifier	copy		8466744	0					
ANR	8466794	CastExpression	"( char * ) gs_alloc_bytes ( mem , strlen ( pdfmark ) + 1 , ""working buffer for pdfmark processing"" )"		8466744	1					
ANR	8466795	CastTarget	char *		8466744	0					
ANR	8466796	CallExpression	"gs_alloc_bytes ( mem , strlen ( pdfmark ) + 1 , ""working buffer for pdfmark processing"" )"		8466744	1					
ANR	8466797	Callee	gs_alloc_bytes		8466744	0					
ANR	8466798	Identifier	gs_alloc_bytes		8466744	0					
ANR	8466799	ArgumentList	mem		8466744	1					
ANR	8466800	Argument	mem		8466744	0					
ANR	8466801	Identifier	mem		8466744	0					
ANR	8466802	Argument	strlen ( pdfmark ) + 1		8466744	1					
ANR	8466803	AdditiveExpression	strlen ( pdfmark ) + 1		8466744	0		+			
ANR	8466804	CallExpression	strlen ( pdfmark )		8466744	0					
ANR	8466805	Callee	strlen		8466744	0					
ANR	8466806	Identifier	strlen		8466744	0					
ANR	8466807	ArgumentList	pdfmark		8466744	1					
ANR	8466808	Argument	pdfmark		8466744	0					
ANR	8466809	Identifier	pdfmark		8466744	0					
ANR	8466810	PrimaryExpression	1		8466744	1					
ANR	8466811	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8466812	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8466813	IfStatement	if ( copy == 0 )		8466744	6					
ANR	8466814	Condition	copy == 0	87:8:3488:3496	8466744	0	True				
ANR	8466815	EqualityExpression	copy == 0		8466744	0		==			
ANR	8466816	Identifier	copy		8466744	0					
ANR	8466817	PrimaryExpression	0		8466744	1					
ANR	8466818	ReturnStatement	return - 1 ;	88:8:3507:3516	8466744	1	True				
ANR	8466819	UnaryOperationExpression	- 1		8466744	0					
ANR	8466820	UnaryOperator	-		8466744	0					
ANR	8466821	PrimaryExpression	1		8466744	1					
ANR	8466822	ExpressionStatement	"strcpy ( copy , pdfmark )"	89:4:3522:3543	8466744	7	True				
ANR	8466823	CallExpression	"strcpy ( copy , pdfmark )"		8466744	0					
ANR	8466824	Callee	strcpy		8466744	0					
ANR	8466825	Identifier	strcpy		8466744	0					
ANR	8466826	ArgumentList	copy		8466744	1					
ANR	8466827	Argument	copy		8466744	0					
ANR	8466828	Identifier	copy		8466744	0					
ANR	8466829	Argument	pdfmark		8466744	1					
ANR	8466830	Identifier	pdfmark		8466744	0					
ANR	8466831	ExpressionStatement	start = copy + 1	91:4:3550:3566	8466744	8	True				
ANR	8466832	AssignmentExpression	start = copy + 1		8466744	0		=			
ANR	8466833	Identifier	start		8466744	0					
ANR	8466834	AdditiveExpression	copy + 1		8466744	1		+			
ANR	8466835	Identifier	copy		8466744	0					
ANR	8466836	PrimaryExpression	1		8466744	1					
ANR	8466837	IfStatement	if ( * pdfmark != '[' )		8466744	9					
ANR	8466838	Condition	* pdfmark != '['	92:8:3576:3590	8466744	0	True				
ANR	8466839	EqualityExpression	* pdfmark != '['		8466744	0		!=			
ANR	8466840	UnaryOperationExpression	* pdfmark		8466744	0					
ANR	8466841	UnaryOperator	*		8466744	0					
ANR	8466842	Identifier	pdfmark		8466744	1					
ANR	8466843	PrimaryExpression	'['		8466744	1					
ANR	8466844	CompoundStatement		15:25:488:488	8466744	1					
ANR	8466845	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	93:8:3603:3669	8466744	0	True				
ANR	8466846	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8466744	0					
ANR	8466847	Callee	gs_free_object		8466744	0					
ANR	8466848	Identifier	gs_free_object		8466744	0					
ANR	8466849	ArgumentList	mem		8466744	1					
ANR	8466850	Argument	mem		8466744	0					
ANR	8466851	Identifier	mem		8466744	0					
ANR	8466852	Argument	copy		8466744	1					
ANR	8466853	Identifier	copy		8466744	0					
ANR	8466854	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8466855	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8466856	ReturnStatement	return - 1 ;	94:8:3679:3688	8466744	1	True				
ANR	8466857	UnaryOperationExpression	- 1		8466744	0					
ANR	8466858	UnaryOperator	-		8466744	0					
ANR	8466859	PrimaryExpression	1		8466744	1					
ANR	8466860	ExpressionStatement	p = start	97:4:3701:3710	8466744	10	True				
ANR	8466861	AssignmentExpression	p = start		8466744	0		=			
ANR	8466862	Identifier	p		8466744	0					
ANR	8466863	Identifier	start		8466744	1					
ANR	8466864	WhileStatement	while ( * p != 0x00 )		8466744	11					
ANR	8466865	Condition	* p != 0x00	98:11:3723:3732	8466744	0	True				
ANR	8466866	EqualityExpression	* p != 0x00		8466744	0		!=			
ANR	8466867	UnaryOperationExpression	* p		8466744	0					
ANR	8466868	UnaryOperator	*		8466744	0					
ANR	8466869	Identifier	p		8466744	1					
ANR	8466870	PrimaryExpression	0x00		8466744	1					
ANR	8466871	CompoundStatement		21:22:629:629	8466744	1					
ANR	8466872	IfStatement	if ( * p == '(' )		8466744	0					
ANR	8466873	Condition	* p == '('	99:11:3747:3755	8466744	0	True				
ANR	8466874	EqualityExpression	* p == '('		8466744	0		==			
ANR	8466875	UnaryOperationExpression	* p		8466744	0					
ANR	8466876	UnaryOperator	*		8466744	0					
ANR	8466877	Identifier	p		8466744	1					
ANR	8466878	PrimaryExpression	'('		8466744	1					
ANR	8466879	CompoundStatement		22:22:653:653	8466744	1					
ANR	8466880	WhileStatement	while ( * p != ')' && * p != 0x00 )		8466744	0					
ANR	8466881	Condition	* p != ')' && * p != 0x00	100:19:3779:3801	8466744	0	True				
ANR	8466882	AndExpression	* p != ')' && * p != 0x00		8466744	0		&&			
ANR	8466883	EqualityExpression	* p != ')'		8466744	0		!=			
ANR	8466884	UnaryOperationExpression	* p		8466744	0					
ANR	8466885	UnaryOperator	*		8466744	0					
ANR	8466886	Identifier	p		8466744	1					
ANR	8466887	PrimaryExpression	')'		8466744	1					
ANR	8466888	EqualityExpression	* p != 0x00		8466744	1		!=			
ANR	8466889	UnaryOperationExpression	* p		8466744	0					
ANR	8466890	UnaryOperator	*		8466744	0					
ANR	8466891	Identifier	p		8466744	1					
ANR	8466892	PrimaryExpression	0x00		8466744	1					
ANR	8466893	CompoundStatement		23:44:699:699	8466744	1					
ANR	8466894	IfStatement	if ( * p == '\\\\' )		8466744	0					
ANR	8466895	Condition	* p == '\\\\'	101:20:3826:3835	8466744	0	True				
ANR	8466896	EqualityExpression	* p == '\\\\'		8466744	0		==			
ANR	8466897	UnaryOperationExpression	* p		8466744	0					
ANR	8466898	UnaryOperator	*		8466744	0					
ANR	8466899	Identifier	p		8466744	1					
ANR	8466900	PrimaryExpression	'\\\\'		8466744	1					
ANR	8466901	ExpressionStatement	p ++	102:20:3858:3861	8466744	1	True				
ANR	8466902	PostIncDecOperationExpression	p ++		8466744	0					
ANR	8466903	Identifier	p		8466744	0					
ANR	8466904	IncDec	++		8466744	1					
ANR	8466905	ExpressionStatement	p ++	103:16:3879:3882	8466744	1	True				
ANR	8466906	PostIncDecOperationExpression	p ++		8466744	0					
ANR	8466907	Identifier	p		8466744	0					
ANR	8466908	IncDec	++		8466744	1					
ANR	8466909	IfStatement	if ( * p != ')' )		8466744	1					
ANR	8466910	Condition	* p != ')'	105:16:3914:3922	8466744	0	True				
ANR	8466911	EqualityExpression	* p != ')'		8466744	0		!=			
ANR	8466912	UnaryOperationExpression	* p		8466744	0					
ANR	8466913	UnaryOperator	*		8466744	0					
ANR	8466914	Identifier	p		8466744	1					
ANR	8466915	PrimaryExpression	')'		8466744	1					
ANR	8466916	CompoundStatement		28:27:820:820	8466744	1					
ANR	8466917	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	106:16:3943:4009	8466744	0	True				
ANR	8466918	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8466744	0					
ANR	8466919	Callee	gs_free_object		8466744	0					
ANR	8466920	Identifier	gs_free_object		8466744	0					
ANR	8466921	ArgumentList	mem		8466744	1					
ANR	8466922	Argument	mem		8466744	0					
ANR	8466923	Identifier	mem		8466744	0					
ANR	8466924	Argument	copy		8466744	1					
ANR	8466925	Identifier	copy		8466744	0					
ANR	8466926	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8466927	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8466928	ReturnStatement	return - 1 ;	107:16:4027:4036	8466744	1	True				
ANR	8466929	UnaryOperationExpression	- 1		8466744	0					
ANR	8466930	UnaryOperator	-		8466744	0					
ANR	8466931	PrimaryExpression	1		8466744	1					
ANR	8466932	ElseStatement	else		8466744	0					
ANR	8466933	CompoundStatement		32:15:962:962	8466744	0					
ANR	8466934	IfStatement	if ( * p == ' ' )		8466744	0					
ANR	8466935	Condition	* p == ' '	110:16:4085:4093	8466744	0	True				
ANR	8466936	EqualityExpression	* p == ' '		8466744	0		==			
ANR	8466937	UnaryOperationExpression	* p		8466744	0					
ANR	8466938	UnaryOperator	*		8466744	0					
ANR	8466939	Identifier	p		8466744	1					
ANR	8466940	PrimaryExpression	' '		8466744	1					
ANR	8466941	CompoundStatement		33:27:991:991	8466744	1					
ANR	8466942	ExpressionStatement	tokens ++	111:16:4114:4122	8466744	0	True				
ANR	8466943	PostIncDecOperationExpression	tokens ++		8466744	0					
ANR	8466944	Identifier	tokens		8466744	0					
ANR	8466945	IncDec	++		8466744	1					
ANR	8466946	ExpressionStatement	p ++	114:8:4156:4159	8466744	1	True				
ANR	8466947	PostIncDecOperationExpression	p ++		8466744	0					
ANR	8466948	Identifier	p		8466744	0					
ANR	8466949	IncDec	++		8466744	1					
ANR	8466950	IfStatement	if ( * ( p - 1 ) != ' ' )		8466744	12					
ANR	8466951	Condition	* ( p - 1 ) != ' '	117:8:4176:4188	8466744	0	True				
ANR	8466952	EqualityExpression	* ( p - 1 ) != ' '		8466744	0		!=			
ANR	8466953	UnaryOperationExpression	* ( p - 1 )		8466744	0					
ANR	8466954	UnaryOperator	*		8466744	0					
ANR	8466955	AdditiveExpression	p - 1		8466744	1		-			
ANR	8466956	Identifier	p		8466744	0					
ANR	8466957	PrimaryExpression	1		8466744	1					
ANR	8466958	PrimaryExpression	' '		8466744	1					
ANR	8466959	ExpressionStatement	tokens ++	118:8:4199:4207	8466744	1	True				
ANR	8466960	PostIncDecOperationExpression	tokens ++		8466744	0					
ANR	8466961	Identifier	tokens		8466744	0					
ANR	8466962	IncDec	++		8466744	1					
ANR	8466963	ExpressionStatement	tokens ++	121:4:4261:4269	8466744	13	True				
ANR	8466964	PostIncDecOperationExpression	tokens ++		8466744	0					
ANR	8466965	Identifier	tokens		8466744	0					
ANR	8466966	IncDec	++		8466744	1					
ANR	8466967	ExpressionStatement	"parray = ( gs_param_string * ) gs_alloc_bytes ( mem , tokens * sizeof ( gs_param_string ) , ""temporary pdfmark array"" )"	123:4:4276:4384	8466744	14	True				
ANR	8466968	AssignmentExpression	"parray = ( gs_param_string * ) gs_alloc_bytes ( mem , tokens * sizeof ( gs_param_string ) , ""temporary pdfmark array"" )"		8466744	0		=			
ANR	8466969	Identifier	parray		8466744	0					
ANR	8466970	CastExpression	"( gs_param_string * ) gs_alloc_bytes ( mem , tokens * sizeof ( gs_param_string ) , ""temporary pdfmark array"" )"		8466744	1					
ANR	8466971	CastTarget	gs_param_string *		8466744	0					
ANR	8466972	CallExpression	"gs_alloc_bytes ( mem , tokens * sizeof ( gs_param_string ) , ""temporary pdfmark array"" )"		8466744	1					
ANR	8466973	Callee	gs_alloc_bytes		8466744	0					
ANR	8466974	Identifier	gs_alloc_bytes		8466744	0					
ANR	8466975	ArgumentList	mem		8466744	1					
ANR	8466976	Argument	mem		8466744	0					
ANR	8466977	Identifier	mem		8466744	0					
ANR	8466978	Argument	tokens * sizeof ( gs_param_string )		8466744	1					
ANR	8466979	MultiplicativeExpression	tokens * sizeof ( gs_param_string )		8466744	0		*			
ANR	8466980	Identifier	tokens		8466744	0					
ANR	8466981	SizeofExpression	sizeof ( gs_param_string )		8466744	1					
ANR	8466982	Sizeof	sizeof		8466744	0					
ANR	8466983	SizeofOperand	gs_param_string		8466744	1					
ANR	8466984	Argument	"""temporary pdfmark array"""		8466744	2					
ANR	8466985	PrimaryExpression	"""temporary pdfmark array"""		8466744	0					
ANR	8466986	IfStatement	if ( ! parray )		8466744	15					
ANR	8466987	Condition	! parray	124:8:4394:4400	8466744	0	True				
ANR	8466988	UnaryOperationExpression	! parray		8466744	0					
ANR	8466989	UnaryOperator	!		8466744	0					
ANR	8466990	Identifier	parray		8466744	1					
ANR	8466991	CompoundStatement		47:17:1298:1298	8466744	1					
ANR	8466992	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	125:8:4413:4479	8466744	0	True				
ANR	8466993	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8466744	0					
ANR	8466994	Callee	gs_free_object		8466744	0					
ANR	8466995	Identifier	gs_free_object		8466744	0					
ANR	8466996	ArgumentList	mem		8466744	1					
ANR	8466997	Argument	mem		8466744	0					
ANR	8466998	Identifier	mem		8466744	0					
ANR	8466999	Argument	copy		8466744	1					
ANR	8467000	Identifier	copy		8466744	0					
ANR	8467001	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8467002	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8467003	ReturnStatement	return - 1 ;	126:8:4489:4498	8466744	1	True				
ANR	8467004	UnaryOperationExpression	- 1		8466744	0					
ANR	8467005	UnaryOperator	-		8466744	0					
ANR	8467006	PrimaryExpression	1		8466744	1					
ANR	8467007	ExpressionStatement	tokens = 0	129:4:4511:4521	8466744	16	True				
ANR	8467008	AssignmentExpression	tokens = 0		8466744	0		=			
ANR	8467009	Identifier	tokens		8466744	0					
ANR	8467010	PrimaryExpression	0		8466744	1					
ANR	8467011	WhileStatement	while ( * start == ' ' )		8466744	17					
ANR	8467012	Condition	* start == ' '	130:11:4534:4546	8466744	0	True				
ANR	8467013	EqualityExpression	* start == ' '		8466744	0		==			
ANR	8467014	UnaryOperationExpression	* start		8466744	0					
ANR	8467015	UnaryOperator	*		8466744	0					
ANR	8467016	Identifier	start		8466744	1					
ANR	8467017	PrimaryExpression	' '		8466744	1					
ANR	8467018	ExpressionStatement	start ++	131:8:4557:4564	8466744	1	True				
ANR	8467019	PostIncDecOperationExpression	start ++		8466744	0					
ANR	8467020	Identifier	start		8466744	0					
ANR	8467021	IncDec	++		8466744	1					
ANR	8467022	ExpressionStatement	p = start	132:4:4570:4579	8466744	18	True				
ANR	8467023	AssignmentExpression	p = start		8466744	0		=			
ANR	8467024	Identifier	p		8466744	0					
ANR	8467025	Identifier	start		8466744	1					
ANR	8467026	WhileStatement	while ( * p != 0x00 )		8466744	19					
ANR	8467027	Condition	* p != 0x00	134:11:4593:4602	8466744	0	True				
ANR	8467028	EqualityExpression	* p != 0x00		8466744	0		!=			
ANR	8467029	UnaryOperationExpression	* p		8466744	0					
ANR	8467030	UnaryOperator	*		8466744	0					
ANR	8467031	Identifier	p		8466744	1					
ANR	8467032	PrimaryExpression	0x00		8466744	1					
ANR	8467033	CompoundStatement		57:22:1499:1499	8466744	1					
ANR	8467034	IfStatement	if ( * p == '(' )		8466744	0					
ANR	8467035	Condition	* p == '('	135:11:4617:4625	8466744	0	True				
ANR	8467036	EqualityExpression	* p == '('		8466744	0		==			
ANR	8467037	UnaryOperationExpression	* p		8466744	0					
ANR	8467038	UnaryOperator	*		8466744	0					
ANR	8467039	Identifier	p		8466744	1					
ANR	8467040	PrimaryExpression	'('		8466744	1					
ANR	8467041	CompoundStatement		58:22:1523:1523	8466744	1					
ANR	8467042	WhileStatement	while ( * p != ')' && * p != 0x00 )		8466744	0					
ANR	8467043	Condition	* p != ')' && * p != 0x00	136:19:4649:4671	8466744	0	True				
ANR	8467044	AndExpression	* p != ')' && * p != 0x00		8466744	0		&&			
ANR	8467045	EqualityExpression	* p != ')'		8466744	0		!=			
ANR	8467046	UnaryOperationExpression	* p		8466744	0					
ANR	8467047	UnaryOperator	*		8466744	0					
ANR	8467048	Identifier	p		8466744	1					
ANR	8467049	PrimaryExpression	')'		8466744	1					
ANR	8467050	EqualityExpression	* p != 0x00		8466744	1		!=			
ANR	8467051	UnaryOperationExpression	* p		8466744	0					
ANR	8467052	UnaryOperator	*		8466744	0					
ANR	8467053	Identifier	p		8466744	1					
ANR	8467054	PrimaryExpression	0x00		8466744	1					
ANR	8467055	CompoundStatement		59:44:1569:1569	8466744	1					
ANR	8467056	IfStatement	if ( * p == '\\\\' )		8466744	0					
ANR	8467057	Condition	* p == '\\\\'	137:20:4696:4705	8466744	0	True				
ANR	8467058	EqualityExpression	* p == '\\\\'		8466744	0		==			
ANR	8467059	UnaryOperationExpression	* p		8466744	0					
ANR	8467060	UnaryOperator	*		8466744	0					
ANR	8467061	Identifier	p		8466744	1					
ANR	8467062	PrimaryExpression	'\\\\'		8466744	1					
ANR	8467063	ExpressionStatement	p ++	138:20:4728:4731	8466744	1	True				
ANR	8467064	PostIncDecOperationExpression	p ++		8466744	0					
ANR	8467065	Identifier	p		8466744	0					
ANR	8467066	IncDec	++		8466744	1					
ANR	8467067	ExpressionStatement	p ++	139:16:4749:4752	8466744	1	True				
ANR	8467068	PostIncDecOperationExpression	p ++		8466744	0					
ANR	8467069	Identifier	p		8466744	0					
ANR	8467070	IncDec	++		8466744	1					
ANR	8467071	IfStatement	if ( * p != ')' )		8466744	1					
ANR	8467072	Condition	* p != ')'	141:16:4784:4792	8466744	0	True				
ANR	8467073	EqualityExpression	* p != ')'		8466744	0		!=			
ANR	8467074	UnaryOperationExpression	* p		8466744	0					
ANR	8467075	UnaryOperator	*		8466744	0					
ANR	8467076	Identifier	p		8466744	1					
ANR	8467077	PrimaryExpression	')'		8466744	1					
ANR	8467078	CompoundStatement		64:27:1690:1690	8466744	1					
ANR	8467079	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	142:16:4813:4879	8466744	0	True				
ANR	8467080	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8466744	0					
ANR	8467081	Callee	gs_free_object		8466744	0					
ANR	8467082	Identifier	gs_free_object		8466744	0					
ANR	8467083	ArgumentList	mem		8466744	1					
ANR	8467084	Argument	mem		8466744	0					
ANR	8467085	Identifier	mem		8466744	0					
ANR	8467086	Argument	copy		8466744	1					
ANR	8467087	Identifier	copy		8466744	0					
ANR	8467088	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8467089	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8467090	ReturnStatement	return - 1 ;	143:16:4897:4906	8466744	1	True				
ANR	8467091	UnaryOperationExpression	- 1		8466744	0					
ANR	8467092	UnaryOperator	-		8466744	0					
ANR	8467093	PrimaryExpression	1		8466744	1					
ANR	8467094	ElseStatement	else		8466744	0					
ANR	8467095	CompoundStatement		68:15:1832:1832	8466744	0					
ANR	8467096	IfStatement	if ( * p == ' ' )		8466744	0					
ANR	8467097	Condition	* p == ' '	146:16:4955:4963	8466744	0	True				
ANR	8467098	EqualityExpression	* p == ' '		8466744	0		==			
ANR	8467099	UnaryOperationExpression	* p		8466744	0					
ANR	8467100	UnaryOperator	*		8466744	0					
ANR	8467101	Identifier	p		8466744	1					
ANR	8467102	PrimaryExpression	' '		8466744	1					
ANR	8467103	CompoundStatement		69:27:1861:1861	8466744	1					
ANR	8467104	IfStatement	"if ( strncmp ( start , ""<<"" , 2 ) == 0 )"		8466744	0					
ANR	8467105	Condition	"strncmp ( start , ""<<"" , 2 ) == 0"	147:20:4988:5015	8466744	0	True				
ANR	8467106	EqualityExpression	"strncmp ( start , ""<<"" , 2 ) == 0"		8466744	0		==			
ANR	8467107	CallExpression	"strncmp ( start , ""<<"" , 2 )"		8466744	0					
ANR	8467108	Callee	strncmp		8466744	0					
ANR	8467109	Identifier	strncmp		8466744	0					
ANR	8467110	ArgumentList	start		8466744	1					
ANR	8467111	Argument	start		8466744	0					
ANR	8467112	Identifier	start		8466744	0					
ANR	8467113	Argument	"""<<"""		8466744	1					
ANR	8467114	PrimaryExpression	"""<<"""		8466744	0					
ANR	8467115	Argument	2		8466744	2					
ANR	8467116	PrimaryExpression	2		8466744	0					
ANR	8467117	PrimaryExpression	0		8466744	1					
ANR	8467118	CompoundStatement		70:50:1913:1913	8466744	1					
ANR	8467119	ExpressionStatement	putdict = true	148:20:5040:5054	8466744	0	True				
ANR	8467120	AssignmentExpression	putdict = true		8466744	0		=			
ANR	8467121	Identifier	putdict		8466744	0					
ANR	8467122	Identifier	true		8466744	1					
ANR	8467123	ElseStatement	else		8466744	0					
ANR	8467124	CompoundStatement		72:23:1974:1974	8466744	0					
ANR	8467125	IfStatement	"if ( strncmp ( start , "">>"" , 2 ) != 0 )"		8466744	0					
ANR	8467126	Condition	"strncmp ( start , "">>"" , 2 ) != 0"	150:24:5105:5132	8466744	0	True				
ANR	8467127	EqualityExpression	"strncmp ( start , "">>"" , 2 ) != 0"		8466744	0		!=			
ANR	8467128	CallExpression	"strncmp ( start , "">>"" , 2 )"		8466744	0					
ANR	8467129	Callee	strncmp		8466744	0					
ANR	8467130	Identifier	strncmp		8466744	0					
ANR	8467131	ArgumentList	start		8466744	1					
ANR	8467132	Argument	start		8466744	0					
ANR	8467133	Identifier	start		8466744	0					
ANR	8467134	Argument	""">>"""		8466744	1					
ANR	8467135	PrimaryExpression	""">>"""		8466744	0					
ANR	8467136	Argument	2		8466744	2					
ANR	8467137	PrimaryExpression	2		8466744	0					
ANR	8467138	PrimaryExpression	0		8466744	1					
ANR	8467139	CompoundStatement		73:54:2030:2030	8466744	1					
ANR	8467140	ExpressionStatement	* p = 0x00	151:24:5161:5170	8466744	0	True				
ANR	8467141	AssignmentExpression	* p = 0x00		8466744	0		=			
ANR	8467142	UnaryOperationExpression	* p		8466744	0					
ANR	8467143	UnaryOperator	*		8466744	0					
ANR	8467144	Identifier	p		8466744	1					
ANR	8467145	PrimaryExpression	0x00		8466744	1					
ANR	8467146	ExpressionStatement	parray [ tokens ] . data = ( const byte * ) start	152:24:5196:5237	8466744	1	True				
ANR	8467147	AssignmentExpression	parray [ tokens ] . data = ( const byte * ) start		8466744	0		=			
ANR	8467148	MemberAccess	parray [ tokens ] . data		8466744	0					
ANR	8467149	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467150	Identifier	parray		8466744	0					
ANR	8467151	Identifier	tokens		8466744	1					
ANR	8467152	Identifier	data		8466744	1					
ANR	8467153	CastExpression	( const byte * ) start		8466744	1					
ANR	8467154	CastTarget	const byte *		8466744	0					
ANR	8467155	Identifier	start		8466744	1					
ANR	8467156	ExpressionStatement	parray [ tokens ] . size = strlen ( start )	153:24:5263:5298	8466744	2	True				
ANR	8467157	AssignmentExpression	parray [ tokens ] . size = strlen ( start )		8466744	0		=			
ANR	8467158	MemberAccess	parray [ tokens ] . size		8466744	0					
ANR	8467159	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467160	Identifier	parray		8466744	0					
ANR	8467161	Identifier	tokens		8466744	1					
ANR	8467162	Identifier	size		8466744	1					
ANR	8467163	CallExpression	strlen ( start )		8466744	1					
ANR	8467164	Callee	strlen		8466744	0					
ANR	8467165	Identifier	strlen		8466744	0					
ANR	8467166	ArgumentList	start		8466744	1					
ANR	8467167	Argument	start		8466744	0					
ANR	8467168	Identifier	start		8466744	0					
ANR	8467169	ExpressionStatement	parray [ tokens ++ ] . persistent = false	154:24:5324:5359	8466744	3	True				
ANR	8467170	AssignmentExpression	parray [ tokens ++ ] . persistent = false		8466744	0		=			
ANR	8467171	MemberAccess	parray [ tokens ++ ] . persistent		8466744	0					
ANR	8467172	ArrayIndexing	parray [ tokens ++ ]		8466744	0					
ANR	8467173	Identifier	parray		8466744	0					
ANR	8467174	PostIncDecOperationExpression	tokens ++		8466744	1					
ANR	8467175	Identifier	tokens		8466744	0					
ANR	8467176	IncDec	++		8466744	1					
ANR	8467177	Identifier	persistent		8466744	1					
ANR	8467178	Identifier	false		8466744	1					
ANR	8467179	ExpressionStatement	start = ++ p	157:16:5417:5428	8466744	1	True				
ANR	8467180	AssignmentExpression	start = ++ p		8466744	0		=			
ANR	8467181	Identifier	start		8466744	0					
ANR	8467182	UnaryExpression	++ p		8466744	1					
ANR	8467183	IncDec	++		8466744	0					
ANR	8467184	Identifier	p		8466744	1					
ANR	8467185	ElseStatement	else		8466744	0					
ANR	8467186	ExpressionStatement	p ++	159:16:5465:5468	8466744	0	True				
ANR	8467187	PostIncDecOperationExpression	p ++		8466744	0					
ANR	8467188	Identifier	p		8466744	0					
ANR	8467189	IncDec	++		8466744	1					
ANR	8467190	IfStatement	if ( * ( p - 1 ) != ' ' )		8466744	20					
ANR	8467191	Condition	* ( p - 1 ) != ' '	162:8:5494:5506	8466744	0	True				
ANR	8467192	EqualityExpression	* ( p - 1 ) != ' '		8466744	0		!=			
ANR	8467193	UnaryOperationExpression	* ( p - 1 )		8466744	0					
ANR	8467194	UnaryOperator	*		8466744	0					
ANR	8467195	AdditiveExpression	p - 1		8466744	1		-			
ANR	8467196	Identifier	p		8466744	0					
ANR	8467197	PrimaryExpression	1		8466744	1					
ANR	8467198	PrimaryExpression	' '		8466744	1					
ANR	8467199	CompoundStatement		85:23:2404:2404	8466744	1					
ANR	8467200	ExpressionStatement	parray [ tokens ] . data = ( const byte * ) start	163:8:5519:5560	8466744	0	True				
ANR	8467201	AssignmentExpression	parray [ tokens ] . data = ( const byte * ) start		8466744	0		=			
ANR	8467202	MemberAccess	parray [ tokens ] . data		8466744	0					
ANR	8467203	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467204	Identifier	parray		8466744	0					
ANR	8467205	Identifier	tokens		8466744	1					
ANR	8467206	Identifier	data		8466744	1					
ANR	8467207	CastExpression	( const byte * ) start		8466744	1					
ANR	8467208	CastTarget	const byte *		8466744	0					
ANR	8467209	Identifier	start		8466744	1					
ANR	8467210	ExpressionStatement	parray [ tokens ] . size = strlen ( start )	164:8:5570:5605	8466744	1	True				
ANR	8467211	AssignmentExpression	parray [ tokens ] . size = strlen ( start )		8466744	0		=			
ANR	8467212	MemberAccess	parray [ tokens ] . size		8466744	0					
ANR	8467213	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467214	Identifier	parray		8466744	0					
ANR	8467215	Identifier	tokens		8466744	1					
ANR	8467216	Identifier	size		8466744	1					
ANR	8467217	CallExpression	strlen ( start )		8466744	1					
ANR	8467218	Callee	strlen		8466744	0					
ANR	8467219	Identifier	strlen		8466744	0					
ANR	8467220	ArgumentList	start		8466744	1					
ANR	8467221	Argument	start		8466744	0					
ANR	8467222	Identifier	start		8466744	0					
ANR	8467223	ExpressionStatement	parray [ tokens ++ ] . persistent = false	165:8:5615:5650	8466744	2	True				
ANR	8467224	AssignmentExpression	parray [ tokens ++ ] . persistent = false		8466744	0		=			
ANR	8467225	MemberAccess	parray [ tokens ++ ] . persistent		8466744	0					
ANR	8467226	ArrayIndexing	parray [ tokens ++ ]		8466744	0					
ANR	8467227	Identifier	parray		8466744	0					
ANR	8467228	PostIncDecOperationExpression	tokens ++		8466744	1					
ANR	8467229	Identifier	tokens		8466744	0					
ANR	8467230	IncDec	++		8466744	1					
ANR	8467231	Identifier	persistent		8466744	1					
ANR	8467232	Identifier	false		8466744	1					
ANR	8467233	ExpressionStatement	parray [ tokens ] . data = parray [ tokens - 1 ] . data	169:4:5736:5781	8466744	21	True				
ANR	8467234	AssignmentExpression	parray [ tokens ] . data = parray [ tokens - 1 ] . data		8466744	0		=			
ANR	8467235	MemberAccess	parray [ tokens ] . data		8466744	0					
ANR	8467236	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467237	Identifier	parray		8466744	0					
ANR	8467238	Identifier	tokens		8466744	1					
ANR	8467239	Identifier	data		8466744	1					
ANR	8467240	MemberAccess	parray [ tokens - 1 ] . data		8466744	1					
ANR	8467241	ArrayIndexing	parray [ tokens - 1 ]		8466744	0					
ANR	8467242	Identifier	parray		8466744	0					
ANR	8467243	AdditiveExpression	tokens - 1		8466744	1		-			
ANR	8467244	Identifier	tokens		8466744	0					
ANR	8467245	PrimaryExpression	1		8466744	1					
ANR	8467246	Identifier	data		8466744	1					
ANR	8467247	ExpressionStatement	parray [ tokens ] . size = parray [ tokens - 1 ] . size	170:4:5787:5832	8466744	22	True				
ANR	8467248	AssignmentExpression	parray [ tokens ] . size = parray [ tokens - 1 ] . size		8466744	0		=			
ANR	8467249	MemberAccess	parray [ tokens ] . size		8466744	0					
ANR	8467250	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467251	Identifier	parray		8466744	0					
ANR	8467252	Identifier	tokens		8466744	1					
ANR	8467253	Identifier	size		8466744	1					
ANR	8467254	MemberAccess	parray [ tokens - 1 ] . size		8466744	1					
ANR	8467255	ArrayIndexing	parray [ tokens - 1 ]		8466744	0					
ANR	8467256	Identifier	parray		8466744	0					
ANR	8467257	AdditiveExpression	tokens - 1		8466744	1		-			
ANR	8467258	Identifier	tokens		8466744	0					
ANR	8467259	PrimaryExpression	1		8466744	1					
ANR	8467260	Identifier	size		8466744	1					
ANR	8467261	ExpressionStatement	parray [ tokens ] . persistent = parray [ tokens - 1 ] . persistent	171:4:5838:5895	8466744	23	True				
ANR	8467262	AssignmentExpression	parray [ tokens ] . persistent = parray [ tokens - 1 ] . persistent		8466744	0		=			
ANR	8467263	MemberAccess	parray [ tokens ] . persistent		8466744	0					
ANR	8467264	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467265	Identifier	parray		8466744	0					
ANR	8467266	Identifier	tokens		8466744	1					
ANR	8467267	Identifier	persistent		8466744	1					
ANR	8467268	MemberAccess	parray [ tokens - 1 ] . persistent		8466744	1					
ANR	8467269	ArrayIndexing	parray [ tokens - 1 ]		8466744	0					
ANR	8467270	Identifier	parray		8466744	0					
ANR	8467271	AdditiveExpression	tokens - 1		8466744	1		-			
ANR	8467272	Identifier	tokens		8466744	0					
ANR	8467273	PrimaryExpression	1		8466744	1					
ANR	8467274	Identifier	persistent		8466744	1					
ANR	8467275	ExpressionStatement	"parray [ tokens - 1 ] . data = ( const byte * ) ""[0 0 0 0 0 0]"""	172:4:5901:5956	8466744	24	True				
ANR	8467276	AssignmentExpression	"parray [ tokens - 1 ] . data = ( const byte * ) ""[0 0 0 0 0 0]"""		8466744	0		=			
ANR	8467277	MemberAccess	parray [ tokens - 1 ] . data		8466744	0					
ANR	8467278	ArrayIndexing	parray [ tokens - 1 ]		8466744	0					
ANR	8467279	Identifier	parray		8466744	0					
ANR	8467280	AdditiveExpression	tokens - 1		8466744	1		-			
ANR	8467281	Identifier	tokens		8466744	0					
ANR	8467282	PrimaryExpression	1		8466744	1					
ANR	8467283	Identifier	data		8466744	1					
ANR	8467284	CastExpression	"( const byte * ) ""[0 0 0 0 0 0]"""		8466744	1					
ANR	8467285	CastTarget	const byte *		8466744	0					
ANR	8467286	PrimaryExpression	"""[0 0 0 0 0 0]"""		8466744	1					
ANR	8467287	ExpressionStatement	parray [ tokens - 1 ] . size = 13	173:4:5962:5990	8466744	25	True				
ANR	8467288	AssignmentExpression	parray [ tokens - 1 ] . size = 13		8466744	0		=			
ANR	8467289	MemberAccess	parray [ tokens - 1 ] . size		8466744	0					
ANR	8467290	ArrayIndexing	parray [ tokens - 1 ]		8466744	0					
ANR	8467291	Identifier	parray		8466744	0					
ANR	8467292	AdditiveExpression	tokens - 1		8466744	1		-			
ANR	8467293	Identifier	tokens		8466744	0					
ANR	8467294	PrimaryExpression	1		8466744	1					
ANR	8467295	Identifier	size		8466744	1					
ANR	8467296	PrimaryExpression	13		8466744	1					
ANR	8467297	ExpressionStatement	parray [ tokens - 1 ] . persistent = false	174:4:5996:6033	8466744	26	True				
ANR	8467298	AssignmentExpression	parray [ tokens - 1 ] . persistent = false		8466744	0		=			
ANR	8467299	MemberAccess	parray [ tokens - 1 ] . persistent		8466744	0					
ANR	8467300	ArrayIndexing	parray [ tokens - 1 ]		8466744	0					
ANR	8467301	Identifier	parray		8466744	0					
ANR	8467302	AdditiveExpression	tokens - 1		8466744	1		-			
ANR	8467303	Identifier	tokens		8466744	0					
ANR	8467304	PrimaryExpression	1		8466744	1					
ANR	8467305	Identifier	persistent		8466744	1					
ANR	8467306	Identifier	false		8466744	1					
ANR	8467307	IfStatement	if ( parray [ tokens ] . data [ 0 ] != '/' )		8466744	27					
ANR	8467308	Condition	parray [ tokens ] . data [ 0 ] != '/'	179:8:6209:6237	8466744	0	True				
ANR	8467309	EqualityExpression	parray [ tokens ] . data [ 0 ] != '/'		8466744	0		!=			
ANR	8467310	ArrayIndexing	parray [ tokens ] . data [ 0 ]		8466744	0					
ANR	8467311	MemberAccess	parray [ tokens ] . data		8466744	0					
ANR	8467312	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467313	Identifier	parray		8466744	0					
ANR	8467314	Identifier	tokens		8466744	1					
ANR	8467315	Identifier	data		8466744	1					
ANR	8467316	PrimaryExpression	0		8466744	1					
ANR	8467317	PrimaryExpression	'/'		8466744	1					
ANR	8467318	CompoundStatement		102:39:3135:3135	8466744	1					
ANR	8467319	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	180:8:6250:6316	8466744	0	True				
ANR	8467320	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8466744	0					
ANR	8467321	Callee	gs_free_object		8466744	0					
ANR	8467322	Identifier	gs_free_object		8466744	0					
ANR	8467323	ArgumentList	mem		8466744	1					
ANR	8467324	Argument	mem		8466744	0					
ANR	8467325	Identifier	mem		8466744	0					
ANR	8467326	Argument	copy		8466744	1					
ANR	8467327	Identifier	copy		8466744	0					
ANR	8467328	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8467329	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8467330	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	181:8:6326:6380	8466744	1	True				
ANR	8467331	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8466744	0					
ANR	8467332	Callee	gs_free_object		8466744	0					
ANR	8467333	Identifier	gs_free_object		8466744	0					
ANR	8467334	ArgumentList	mem		8466744	1					
ANR	8467335	Argument	mem		8466744	0					
ANR	8467336	Identifier	mem		8466744	0					
ANR	8467337	Argument	parray		8466744	1					
ANR	8467338	Identifier	parray		8466744	0					
ANR	8467339	Argument	"""temporary pdfmark array"""		8466744	2					
ANR	8467340	PrimaryExpression	"""temporary pdfmark array"""		8466744	0					
ANR	8467341	ReturnStatement	return - 1 ;	182:8:6390:6399	8466744	2	True				
ANR	8467342	UnaryOperationExpression	- 1		8466744	0					
ANR	8467343	UnaryOperator	-		8466744	0					
ANR	8467344	PrimaryExpression	1		8466744	1					
ANR	8467345	ElseStatement	else		8466744	0					
ANR	8467346	CompoundStatement		106:11:3307:3307	8466744	0					
ANR	8467347	ExpressionStatement	parray [ tokens ] . data ++	184:8:6422:6443	8466744	0	True				
ANR	8467348	PostIncDecOperationExpression	parray [ tokens ] . data ++		8466744	0					
ANR	8467349	MemberAccess	parray [ tokens ] . data		8466744	0					
ANR	8467350	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467351	Identifier	parray		8466744	0					
ANR	8467352	Identifier	tokens		8466744	1					
ANR	8467353	Identifier	data		8466744	1					
ANR	8467354	IncDec	++		8466744	1					
ANR	8467355	ExpressionStatement	parray [ tokens ] . size --	185:8:6453:6474	8466744	1	True				
ANR	8467356	PostIncDecOperationExpression	parray [ tokens ] . size --		8466744	0					
ANR	8467357	MemberAccess	parray [ tokens ] . size		8466744	0					
ANR	8467358	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467359	Identifier	parray		8466744	0					
ANR	8467360	Identifier	tokens		8466744	1					
ANR	8467361	Identifier	size		8466744	1					
ANR	8467362	IncDec	--		8466744	1					
ANR	8467363	IfStatement	"if ( putdict && strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUT"" , 3 ) == 0 )"		8466744	28					
ANR	8467364	Condition	"putdict && strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUT"" , 3 ) == 0"	191:8:6611:6680	8466744	0	True				
ANR	8467365	AndExpression	"putdict && strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUT"" , 3 ) == 0"		8466744	0		&&			
ANR	8467366	Identifier	putdict		8466744	0					
ANR	8467367	EqualityExpression	"strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUT"" , 3 ) == 0"		8466744	1		==			
ANR	8467368	CallExpression	"strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUT"" , 3 )"		8466744	0					
ANR	8467369	Callee	strncmp		8466744	0					
ANR	8467370	Identifier	strncmp		8466744	0					
ANR	8467371	ArgumentList	( const char * ) ( parray [ tokens ] . data )		8466744	1					
ANR	8467372	Argument	( const char * ) ( parray [ tokens ] . data )		8466744	0					
ANR	8467373	CastExpression	( const char * ) ( parray [ tokens ] . data )		8466744	0					
ANR	8467374	CastTarget	const char *		8466744	0					
ANR	8467375	MemberAccess	parray [ tokens ] . data		8466744	1					
ANR	8467376	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467377	Identifier	parray		8466744	0					
ANR	8467378	Identifier	tokens		8466744	1					
ANR	8467379	Identifier	data		8466744	1					
ANR	8467380	Argument	"""PUT"""		8466744	1					
ANR	8467381	PrimaryExpression	"""PUT"""		8466744	0					
ANR	8467382	Argument	3		8466744	2					
ANR	8467383	PrimaryExpression	3		8466744	0					
ANR	8467384	PrimaryExpression	0		8466744	1					
ANR	8467385	CompoundStatement		114:80:3578:3578	8466744	1					
ANR	8467386	ExpressionStatement	"parray [ tokens ] . data = ( const byte * ) "".PUTDICT"""	192:8:6693:6739	8466744	0	True				
ANR	8467387	AssignmentExpression	"parray [ tokens ] . data = ( const byte * ) "".PUTDICT"""		8466744	0		=			
ANR	8467388	MemberAccess	parray [ tokens ] . data		8466744	0					
ANR	8467389	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467390	Identifier	parray		8466744	0					
ANR	8467391	Identifier	tokens		8466744	1					
ANR	8467392	Identifier	data		8466744	1					
ANR	8467393	CastExpression	"( const byte * ) "".PUTDICT"""		8466744	1					
ANR	8467394	CastTarget	const byte *		8466744	0					
ANR	8467395	PrimaryExpression	""".PUTDICT"""		8466744	1					
ANR	8467396	ExpressionStatement	parray [ tokens ] . size = 8	193:8:6749:6772	8466744	1	True				
ANR	8467397	AssignmentExpression	parray [ tokens ] . size = 8		8466744	0		=			
ANR	8467398	MemberAccess	parray [ tokens ] . size		8466744	0					
ANR	8467399	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467400	Identifier	parray		8466744	0					
ANR	8467401	Identifier	tokens		8466744	1					
ANR	8467402	Identifier	size		8466744	1					
ANR	8467403	PrimaryExpression	8		8466744	1					
ANR	8467404	ExpressionStatement	parray [ tokens ] . persistent = false	194:8:6782:6815	8466744	2	True				
ANR	8467405	AssignmentExpression	parray [ tokens ] . persistent = false		8466744	0		=			
ANR	8467406	MemberAccess	parray [ tokens ] . persistent		8466744	0					
ANR	8467407	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467408	Identifier	parray		8466744	0					
ANR	8467409	Identifier	tokens		8466744	1					
ANR	8467410	Identifier	persistent		8466744	1					
ANR	8467411	Identifier	false		8466744	1					
ANR	8467412	IfStatement	"if ( strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUTFILE"" , 7 ) == 0 )"		8466744	29					
ANR	8467413	Condition	"strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUTFILE"" , 7 ) == 0"	200:8:7086:7148	8466744	0	True				
ANR	8467414	EqualityExpression	"strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUTFILE"" , 7 ) == 0"		8466744	0		==			
ANR	8467415	CallExpression	"strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUTFILE"" , 7 )"		8466744	0					
ANR	8467416	Callee	strncmp		8466744	0					
ANR	8467417	Identifier	strncmp		8466744	0					
ANR	8467418	ArgumentList	( const char * ) ( parray [ tokens ] . data )		8466744	1					
ANR	8467419	Argument	( const char * ) ( parray [ tokens ] . data )		8466744	0					
ANR	8467420	CastExpression	( const char * ) ( parray [ tokens ] . data )		8466744	0					
ANR	8467421	CastTarget	const char *		8466744	0					
ANR	8467422	MemberAccess	parray [ tokens ] . data		8466744	1					
ANR	8467423	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467424	Identifier	parray		8466744	0					
ANR	8467425	Identifier	tokens		8466744	1					
ANR	8467426	Identifier	data		8466744	1					
ANR	8467427	Argument	"""PUTFILE"""		8466744	1					
ANR	8467428	PrimaryExpression	"""PUTFILE"""		8466744	0					
ANR	8467429	Argument	7		8466744	2					
ANR	8467430	PrimaryExpression	7		8466744	0					
ANR	8467431	PrimaryExpression	0		8466744	1					
ANR	8467432	CompoundStatement		126:8:4097:4106	8466744	1					
ANR	8467433	IdentifierDeclStatement	FILE * f ;	201:8:7161:7168	8466744	0	True				
ANR	8467434	IdentifierDecl	* f		8466744	0					
ANR	8467435	IdentifierDeclType	FILE *		8466744	0					
ANR	8467436	Identifier	f		8466744	1					
ANR	8467437	IdentifierDeclStatement	char * filename ;	202:8:7178:7192	8466744	1	True				
ANR	8467438	IdentifierDecl	* filename		8466744	0					
ANR	8467439	IdentifierDeclType	char *		8466744	0					
ANR	8467440	Identifier	filename		8466744	1					
ANR	8467441	IdentifierDeclStatement	int bytes ;	203:8:7202:7211	8466744	2	True				
ANR	8467442	IdentifierDecl	bytes		8466744	0					
ANR	8467443	IdentifierDeclType	int		8466744	0					
ANR	8467444	Identifier	bytes		8466744	1					
ANR	8467445	IfStatement	if ( parray [ tokens - 2 ] . data [ 0 ] != '(' )		8466744	3					
ANR	8467446	Condition	parray [ tokens - 2 ] . data [ 0 ] != '('	205:12:7226:7258	8466744	0	True				
ANR	8467447	EqualityExpression	parray [ tokens - 2 ] . data [ 0 ] != '('		8466744	0		!=			
ANR	8467448	ArrayIndexing	parray [ tokens - 2 ] . data [ 0 ]		8466744	0					
ANR	8467449	MemberAccess	parray [ tokens - 2 ] . data		8466744	0					
ANR	8467450	ArrayIndexing	parray [ tokens - 2 ]		8466744	0					
ANR	8467451	Identifier	parray		8466744	0					
ANR	8467452	AdditiveExpression	tokens - 2		8466744	1		-			
ANR	8467453	Identifier	tokens		8466744	0					
ANR	8467454	PrimaryExpression	2		8466744	1					
ANR	8467455	Identifier	data		8466744	1					
ANR	8467456	PrimaryExpression	0		8466744	1					
ANR	8467457	PrimaryExpression	'('		8466744	1					
ANR	8467458	CompoundStatement		128:47:4156:4156	8466744	1					
ANR	8467459	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	206:12:7275:7341	8466744	0	True				
ANR	8467460	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8466744	0					
ANR	8467461	Callee	gs_free_object		8466744	0					
ANR	8467462	Identifier	gs_free_object		8466744	0					
ANR	8467463	ArgumentList	mem		8466744	1					
ANR	8467464	Argument	mem		8466744	0					
ANR	8467465	Identifier	mem		8466744	0					
ANR	8467466	Argument	copy		8466744	1					
ANR	8467467	Identifier	copy		8466744	0					
ANR	8467468	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8467469	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8467470	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	207:12:7355:7409	8466744	1	True				
ANR	8467471	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8466744	0					
ANR	8467472	Callee	gs_free_object		8466744	0					
ANR	8467473	Identifier	gs_free_object		8466744	0					
ANR	8467474	ArgumentList	mem		8466744	1					
ANR	8467475	Argument	mem		8466744	0					
ANR	8467476	Identifier	mem		8466744	0					
ANR	8467477	Argument	parray		8466744	1					
ANR	8467478	Identifier	parray		8466744	0					
ANR	8467479	Argument	"""temporary pdfmark array"""		8466744	2					
ANR	8467480	PrimaryExpression	"""temporary pdfmark array"""		8466744	0					
ANR	8467481	ReturnStatement	return - 1 ;	208:12:7423:7432	8466744	2	True				
ANR	8467482	UnaryOperationExpression	- 1		8466744	0					
ANR	8467483	UnaryOperator	-		8466744	0					
ANR	8467484	PrimaryExpression	1		8466744	1					
ANR	8467485	ExpressionStatement	filename = ( char * ) & ( parray [ tokens - 2 ] . data [ 1 ] )	210:8:7452:7500	8466744	4	True				
ANR	8467486	AssignmentExpression	filename = ( char * ) & ( parray [ tokens - 2 ] . data [ 1 ] )		8466744	0		=			
ANR	8467487	Identifier	filename		8466744	0					
ANR	8467488	CastExpression	( char * ) & ( parray [ tokens - 2 ] . data [ 1 ] )		8466744	1					
ANR	8467489	CastTarget	char *		8466744	0					
ANR	8467490	UnaryOperationExpression	& ( parray [ tokens - 2 ] . data [ 1 ] )		8466744	1					
ANR	8467491	UnaryOperator	&		8466744	0					
ANR	8467492	ArrayIndexing	parray [ tokens - 2 ] . data [ 1 ]		8466744	1					
ANR	8467493	MemberAccess	parray [ tokens - 2 ] . data		8466744	0					
ANR	8467494	ArrayIndexing	parray [ tokens - 2 ]		8466744	0					
ANR	8467495	Identifier	parray		8466744	0					
ANR	8467496	AdditiveExpression	tokens - 2		8466744	1		-			
ANR	8467497	Identifier	tokens		8466744	0					
ANR	8467498	PrimaryExpression	2		8466744	1					
ANR	8467499	Identifier	data		8466744	1					
ANR	8467500	PrimaryExpression	1		8466744	1					
ANR	8467501	ExpressionStatement	filename [ strlen ( filename ) - 1 ] = 0x00	211:8:7510:7547	8466744	5	True				
ANR	8467502	AssignmentExpression	filename [ strlen ( filename ) - 1 ] = 0x00		8466744	0		=			
ANR	8467503	ArrayIndexing	filename [ strlen ( filename ) - 1 ]		8466744	0					
ANR	8467504	Identifier	filename		8466744	0					
ANR	8467505	AdditiveExpression	strlen ( filename ) - 1		8466744	1		-			
ANR	8467506	CallExpression	strlen ( filename )		8466744	0					
ANR	8467507	Callee	strlen		8466744	0					
ANR	8467508	Identifier	strlen		8466744	0					
ANR	8467509	ArgumentList	filename		8466744	1					
ANR	8467510	Argument	filename		8466744	0					
ANR	8467511	Identifier	filename		8466744	0					
ANR	8467512	PrimaryExpression	1		8466744	1					
ANR	8467513	PrimaryExpression	0x00		8466744	1					
ANR	8467514	ExpressionStatement	"f = gp_fopen ( ( const char * ) filename , ""rb"" )"	213:8:7558:7600	8466744	6	True				
ANR	8467515	AssignmentExpression	"f = gp_fopen ( ( const char * ) filename , ""rb"" )"		8466744	0		=			
ANR	8467516	Identifier	f		8466744	0					
ANR	8467517	CallExpression	"gp_fopen ( ( const char * ) filename , ""rb"" )"		8466744	1					
ANR	8467518	Callee	gp_fopen		8466744	0					
ANR	8467519	Identifier	gp_fopen		8466744	0					
ANR	8467520	ArgumentList	( const char * ) filename		8466744	1					
ANR	8467521	Argument	( const char * ) filename		8466744	0					
ANR	8467522	CastExpression	( const char * ) filename		8466744	0					
ANR	8467523	CastTarget	const char *		8466744	0					
ANR	8467524	Identifier	filename		8466744	1					
ANR	8467525	Argument	"""rb"""		8466744	1					
ANR	8467526	PrimaryExpression	"""rb"""		8466744	0					
ANR	8467527	IfStatement	if ( ! f )		8466744	7					
ANR	8467528	Condition	! f	214:12:7614:7615	8466744	0	True				
ANR	8467529	UnaryOperationExpression	! f		8466744	0					
ANR	8467530	UnaryOperator	!		8466744	0					
ANR	8467531	Identifier	f		8466744	1					
ANR	8467532	CompoundStatement		137:16:4513:4513	8466744	1					
ANR	8467533	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	215:12:7632:7698	8466744	0	True				
ANR	8467534	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8466744	0					
ANR	8467535	Callee	gs_free_object		8466744	0					
ANR	8467536	Identifier	gs_free_object		8466744	0					
ANR	8467537	ArgumentList	mem		8466744	1					
ANR	8467538	Argument	mem		8466744	0					
ANR	8467539	Identifier	mem		8466744	0					
ANR	8467540	Argument	copy		8466744	1					
ANR	8467541	Identifier	copy		8466744	0					
ANR	8467542	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8467543	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8467544	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	216:12:7712:7766	8466744	1	True				
ANR	8467545	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8466744	0					
ANR	8467546	Callee	gs_free_object		8466744	0					
ANR	8467547	Identifier	gs_free_object		8466744	0					
ANR	8467548	ArgumentList	mem		8466744	1					
ANR	8467549	Argument	mem		8466744	0					
ANR	8467550	Identifier	mem		8466744	0					
ANR	8467551	Argument	parray		8466744	1					
ANR	8467552	Identifier	parray		8466744	0					
ANR	8467553	Argument	"""temporary pdfmark array"""		8466744	2					
ANR	8467554	PrimaryExpression	"""temporary pdfmark array"""		8466744	0					
ANR	8467555	ReturnStatement	return - 1 ;	217:12:7780:7789	8466744	2	True				
ANR	8467556	UnaryOperationExpression	- 1		8466744	0					
ANR	8467557	UnaryOperator	-		8466744	0					
ANR	8467558	PrimaryExpression	1		8466744	1					
ANR	8467559	IfStatement	"if ( gp_fseek_64 ( f , 0 , SEEK_END ) != 0 )"		8466744	8					
ANR	8467560	Condition	"gp_fseek_64 ( f , 0 , SEEK_END ) != 0"	220:12:7814:7845	8466744	0	True				
ANR	8467561	EqualityExpression	"gp_fseek_64 ( f , 0 , SEEK_END ) != 0"		8466744	0		!=			
ANR	8467562	CallExpression	"gp_fseek_64 ( f , 0 , SEEK_END )"		8466744	0					
ANR	8467563	Callee	gp_fseek_64		8466744	0					
ANR	8467564	Identifier	gp_fseek_64		8466744	0					
ANR	8467565	ArgumentList	f		8466744	1					
ANR	8467566	Argument	f		8466744	0					
ANR	8467567	Identifier	f		8466744	0					
ANR	8467568	Argument	0		8466744	1					
ANR	8467569	PrimaryExpression	0		8466744	0					
ANR	8467570	Argument	SEEK_END		8466744	2					
ANR	8467571	Identifier	SEEK_END		8466744	0					
ANR	8467572	PrimaryExpression	0		8466744	1					
ANR	8467573	CompoundStatement		143:46:4743:4743	8466744	1					
ANR	8467574	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	221:12:7862:7928	8466744	0	True				
ANR	8467575	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8466744	0					
ANR	8467576	Callee	gs_free_object		8466744	0					
ANR	8467577	Identifier	gs_free_object		8466744	0					
ANR	8467578	ArgumentList	mem		8466744	1					
ANR	8467579	Argument	mem		8466744	0					
ANR	8467580	Identifier	mem		8466744	0					
ANR	8467581	Argument	copy		8466744	1					
ANR	8467582	Identifier	copy		8466744	0					
ANR	8467583	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8467584	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8467585	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	222:12:7942:7996	8466744	1	True				
ANR	8467586	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8466744	0					
ANR	8467587	Callee	gs_free_object		8466744	0					
ANR	8467588	Identifier	gs_free_object		8466744	0					
ANR	8467589	ArgumentList	mem		8466744	1					
ANR	8467590	Argument	mem		8466744	0					
ANR	8467591	Identifier	mem		8466744	0					
ANR	8467592	Argument	parray		8466744	1					
ANR	8467593	Identifier	parray		8466744	0					
ANR	8467594	Argument	"""temporary pdfmark array"""		8466744	2					
ANR	8467595	PrimaryExpression	"""temporary pdfmark array"""		8466744	0					
ANR	8467596	ExpressionStatement	fclose ( f )	223:12:8010:8019	8466744	2	True				
ANR	8467597	CallExpression	fclose ( f )		8466744	0					
ANR	8467598	Callee	fclose		8466744	0					
ANR	8467599	Identifier	fclose		8466744	0					
ANR	8467600	ArgumentList	f		8466744	1					
ANR	8467601	Argument	f		8466744	0					
ANR	8467602	Identifier	f		8466744	0					
ANR	8467603	ReturnStatement	return - 1 ;	224:12:8033:8042	8466744	3	True				
ANR	8467604	UnaryOperationExpression	- 1		8466744	0					
ANR	8467605	UnaryOperator	-		8466744	0					
ANR	8467606	PrimaryExpression	1		8466744	1					
ANR	8467607	ExpressionStatement	bytes = gp_ftell_64 ( f )	226:8:8062:8084	8466744	9	True				
ANR	8467608	AssignmentExpression	bytes = gp_ftell_64 ( f )		8466744	0		=			
ANR	8467609	Identifier	bytes		8466744	0					
ANR	8467610	CallExpression	gp_ftell_64 ( f )		8466744	1					
ANR	8467611	Callee	gp_ftell_64		8466744	0					
ANR	8467612	Identifier	gp_ftell_64		8466744	0					
ANR	8467613	ArgumentList	f		8466744	1					
ANR	8467614	Argument	f		8466744	0					
ANR	8467615	Identifier	f		8466744	0					
ANR	8467616	IfStatement	if ( bytes < 0 )		8466744	10					
ANR	8467617	Condition	bytes < 0	227:12:8098:8106	8466744	0	True				
ANR	8467618	RelationalExpression	bytes < 0		8466744	0		<			
ANR	8467619	Identifier	bytes		8466744	0					
ANR	8467620	PrimaryExpression	0		8466744	1					
ANR	8467621	CompoundStatement		150:23:5004:5004	8466744	1					
ANR	8467622	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	228:12:8123:8189	8466744	0	True				
ANR	8467623	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8466744	0					
ANR	8467624	Callee	gs_free_object		8466744	0					
ANR	8467625	Identifier	gs_free_object		8466744	0					
ANR	8467626	ArgumentList	mem		8466744	1					
ANR	8467627	Argument	mem		8466744	0					
ANR	8467628	Identifier	mem		8466744	0					
ANR	8467629	Argument	copy		8466744	1					
ANR	8467630	Identifier	copy		8466744	0					
ANR	8467631	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8467632	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8467633	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	229:12:8203:8257	8466744	1	True				
ANR	8467634	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8466744	0					
ANR	8467635	Callee	gs_free_object		8466744	0					
ANR	8467636	Identifier	gs_free_object		8466744	0					
ANR	8467637	ArgumentList	mem		8466744	1					
ANR	8467638	Argument	mem		8466744	0					
ANR	8467639	Identifier	mem		8466744	0					
ANR	8467640	Argument	parray		8466744	1					
ANR	8467641	Identifier	parray		8466744	0					
ANR	8467642	Argument	"""temporary pdfmark array"""		8466744	2					
ANR	8467643	PrimaryExpression	"""temporary pdfmark array"""		8466744	0					
ANR	8467644	ExpressionStatement	fclose ( f )	230:12:8271:8280	8466744	2	True				
ANR	8467645	CallExpression	fclose ( f )		8466744	0					
ANR	8467646	Callee	fclose		8466744	0					
ANR	8467647	Identifier	fclose		8466744	0					
ANR	8467648	ArgumentList	f		8466744	1					
ANR	8467649	Argument	f		8466744	0					
ANR	8467650	Identifier	f		8466744	0					
ANR	8467651	ReturnStatement	return - 1 ;	231:12:8294:8303	8466744	3	True				
ANR	8467652	UnaryOperationExpression	- 1		8466744	0					
ANR	8467653	UnaryOperator	-		8466744	0					
ANR	8467654	PrimaryExpression	1		8466744	1					
ANR	8467655	ExpressionStatement	"parray [ tokens - 2 ] . data = ( const byte * ) gs_alloc_bytes ( mem , bytes , ""PJL pdfmark, stream"" )"	234:8:8336:8425	8466744	11	True				
ANR	8467656	AssignmentExpression	"parray [ tokens - 2 ] . data = ( const byte * ) gs_alloc_bytes ( mem , bytes , ""PJL pdfmark, stream"" )"		8466744	0		=			
ANR	8467657	MemberAccess	parray [ tokens - 2 ] . data		8466744	0					
ANR	8467658	ArrayIndexing	parray [ tokens - 2 ]		8466744	0					
ANR	8467659	Identifier	parray		8466744	0					
ANR	8467660	AdditiveExpression	tokens - 2		8466744	1		-			
ANR	8467661	Identifier	tokens		8466744	0					
ANR	8467662	PrimaryExpression	2		8466744	1					
ANR	8467663	Identifier	data		8466744	1					
ANR	8467664	CastExpression	"( const byte * ) gs_alloc_bytes ( mem , bytes , ""PJL pdfmark, stream"" )"		8466744	1					
ANR	8467665	CastTarget	const byte *		8466744	0					
ANR	8467666	CallExpression	"gs_alloc_bytes ( mem , bytes , ""PJL pdfmark, stream"" )"		8466744	1					
ANR	8467667	Callee	gs_alloc_bytes		8466744	0					
ANR	8467668	Identifier	gs_alloc_bytes		8466744	0					
ANR	8467669	ArgumentList	mem		8466744	1					
ANR	8467670	Argument	mem		8466744	0					
ANR	8467671	Identifier	mem		8466744	0					
ANR	8467672	Argument	bytes		8466744	1					
ANR	8467673	Identifier	bytes		8466744	0					
ANR	8467674	Argument	"""PJL pdfmark, stream"""		8466744	2					
ANR	8467675	PrimaryExpression	"""PJL pdfmark, stream"""		8466744	0					
ANR	8467676	IfStatement	if ( ! parray [ tokens - 2 ] . data )		8466744	12					
ANR	8467677	Condition	! parray [ tokens - 2 ] . data	235:12:8439:8462	8466744	0	True				
ANR	8467678	UnaryOperationExpression	! parray [ tokens - 2 ] . data		8466744	0					
ANR	8467679	UnaryOperator	!		8466744	0					
ANR	8467680	MemberAccess	parray [ tokens - 2 ] . data		8466744	1					
ANR	8467681	ArrayIndexing	parray [ tokens - 2 ]		8466744	0					
ANR	8467682	Identifier	parray		8466744	0					
ANR	8467683	AdditiveExpression	tokens - 2		8466744	1		-			
ANR	8467684	Identifier	tokens		8466744	0					
ANR	8467685	PrimaryExpression	2		8466744	1					
ANR	8467686	Identifier	data		8466744	1					
ANR	8467687	CompoundStatement		158:38:5360:5360	8466744	1					
ANR	8467688	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	236:12:8479:8545	8466744	0	True				
ANR	8467689	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8466744	0					
ANR	8467690	Callee	gs_free_object		8466744	0					
ANR	8467691	Identifier	gs_free_object		8466744	0					
ANR	8467692	ArgumentList	mem		8466744	1					
ANR	8467693	Argument	mem		8466744	0					
ANR	8467694	Identifier	mem		8466744	0					
ANR	8467695	Argument	copy		8466744	1					
ANR	8467696	Identifier	copy		8466744	0					
ANR	8467697	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8467698	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8467699	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	237:12:8559:8613	8466744	1	True				
ANR	8467700	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8466744	0					
ANR	8467701	Callee	gs_free_object		8466744	0					
ANR	8467702	Identifier	gs_free_object		8466744	0					
ANR	8467703	ArgumentList	mem		8466744	1					
ANR	8467704	Argument	mem		8466744	0					
ANR	8467705	Identifier	mem		8466744	0					
ANR	8467706	Argument	parray		8466744	1					
ANR	8467707	Identifier	parray		8466744	0					
ANR	8467708	Argument	"""temporary pdfmark array"""		8466744	2					
ANR	8467709	PrimaryExpression	"""temporary pdfmark array"""		8466744	0					
ANR	8467710	ExpressionStatement	fclose ( f )	238:12:8627:8636	8466744	2	True				
ANR	8467711	CallExpression	fclose ( f )		8466744	0					
ANR	8467712	Callee	fclose		8466744	0					
ANR	8467713	Identifier	fclose		8466744	0					
ANR	8467714	ArgumentList	f		8466744	1					
ANR	8467715	Argument	f		8466744	0					
ANR	8467716	Identifier	f		8466744	0					
ANR	8467717	ReturnStatement	return - 1 ;	239:12:8650:8659	8466744	3	True				
ANR	8467718	UnaryOperationExpression	- 1		8466744	0					
ANR	8467719	UnaryOperator	-		8466744	0					
ANR	8467720	PrimaryExpression	1		8466744	1					
ANR	8467721	ExpressionStatement	stream_data = ( char * ) ( parray [ tokens - 2 ] . data )	241:8:8679:8726	8466744	13	True				
ANR	8467722	AssignmentExpression	stream_data = ( char * ) ( parray [ tokens - 2 ] . data )		8466744	0		=			
ANR	8467723	Identifier	stream_data		8466744	0					
ANR	8467724	CastExpression	( char * ) ( parray [ tokens - 2 ] . data )		8466744	1					
ANR	8467725	CastTarget	char *		8466744	0					
ANR	8467726	MemberAccess	parray [ tokens - 2 ] . data		8466744	1					
ANR	8467727	ArrayIndexing	parray [ tokens - 2 ]		8466744	0					
ANR	8467728	Identifier	parray		8466744	0					
ANR	8467729	AdditiveExpression	tokens - 2		8466744	1		-			
ANR	8467730	Identifier	tokens		8466744	0					
ANR	8467731	PrimaryExpression	2		8466744	1					
ANR	8467732	Identifier	data		8466744	1					
ANR	8467733	IfStatement	"if ( gp_fseek_64 ( f , 0 , SEEK_SET ) != 0 )"		8466744	14					
ANR	8467734	Condition	"gp_fseek_64 ( f , 0 , SEEK_SET ) != 0"	243:12:8741:8772	8466744	0	True				
ANR	8467735	EqualityExpression	"gp_fseek_64 ( f , 0 , SEEK_SET ) != 0"		8466744	0		!=			
ANR	8467736	CallExpression	"gp_fseek_64 ( f , 0 , SEEK_SET )"		8466744	0					
ANR	8467737	Callee	gp_fseek_64		8466744	0					
ANR	8467738	Identifier	gp_fseek_64		8466744	0					
ANR	8467739	ArgumentList	f		8466744	1					
ANR	8467740	Argument	f		8466744	0					
ANR	8467741	Identifier	f		8466744	0					
ANR	8467742	Argument	0		8466744	1					
ANR	8467743	PrimaryExpression	0		8466744	0					
ANR	8467744	Argument	SEEK_SET		8466744	2					
ANR	8467745	Identifier	SEEK_SET		8466744	0					
ANR	8467746	PrimaryExpression	0		8466744	1					
ANR	8467747	CompoundStatement		166:46:5670:5670	8466744	1					
ANR	8467748	ExpressionStatement	"gs_free_object ( mem , stream_data , ""PJL pdfmark, stream"" )"	244:12:8789:8844	8466744	0	True				
ANR	8467749	CallExpression	"gs_free_object ( mem , stream_data , ""PJL pdfmark, stream"" )"		8466744	0					
ANR	8467750	Callee	gs_free_object		8466744	0					
ANR	8467751	Identifier	gs_free_object		8466744	0					
ANR	8467752	ArgumentList	mem		8466744	1					
ANR	8467753	Argument	mem		8466744	0					
ANR	8467754	Identifier	mem		8466744	0					
ANR	8467755	Argument	stream_data		8466744	1					
ANR	8467756	Identifier	stream_data		8466744	0					
ANR	8467757	Argument	"""PJL pdfmark, stream"""		8466744	2					
ANR	8467758	PrimaryExpression	"""PJL pdfmark, stream"""		8466744	0					
ANR	8467759	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	245:12:8858:8924	8466744	1	True				
ANR	8467760	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8466744	0					
ANR	8467761	Callee	gs_free_object		8466744	0					
ANR	8467762	Identifier	gs_free_object		8466744	0					
ANR	8467763	ArgumentList	mem		8466744	1					
ANR	8467764	Argument	mem		8466744	0					
ANR	8467765	Identifier	mem		8466744	0					
ANR	8467766	Argument	copy		8466744	1					
ANR	8467767	Identifier	copy		8466744	0					
ANR	8467768	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8467769	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8467770	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	246:12:8938:8992	8466744	2	True				
ANR	8467771	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8466744	0					
ANR	8467772	Callee	gs_free_object		8466744	0					
ANR	8467773	Identifier	gs_free_object		8466744	0					
ANR	8467774	ArgumentList	mem		8466744	1					
ANR	8467775	Argument	mem		8466744	0					
ANR	8467776	Identifier	mem		8466744	0					
ANR	8467777	Argument	parray		8466744	1					
ANR	8467778	Identifier	parray		8466744	0					
ANR	8467779	Argument	"""temporary pdfmark array"""		8466744	2					
ANR	8467780	PrimaryExpression	"""temporary pdfmark array"""		8466744	0					
ANR	8467781	ExpressionStatement	fclose ( f )	247:12:9006:9015	8466744	3	True				
ANR	8467782	CallExpression	fclose ( f )		8466744	0					
ANR	8467783	Callee	fclose		8466744	0					
ANR	8467784	Identifier	fclose		8466744	0					
ANR	8467785	ArgumentList	f		8466744	1					
ANR	8467786	Argument	f		8466744	0					
ANR	8467787	Identifier	f		8466744	0					
ANR	8467788	ReturnStatement	return gs_note_error ( gs_error_ioerror ) ;	248:12:9029:9067	8466744	4	True				
ANR	8467789	CallExpression	gs_note_error ( gs_error_ioerror )		8466744	0					
ANR	8467790	Callee	gs_note_error		8466744	0					
ANR	8467791	Identifier	gs_note_error		8466744	0					
ANR	8467792	ArgumentList	gs_error_ioerror		8466744	1					
ANR	8467793	Argument	gs_error_ioerror		8466744	0					
ANR	8467794	Identifier	gs_error_ioerror		8466744	0					
ANR	8467795	ExpressionStatement	"code = fread ( stream_data , 1 , bytes , f )"	250:8:9087:9125	8466744	15	True				
ANR	8467796	AssignmentExpression	"code = fread ( stream_data , 1 , bytes , f )"		8466744	0		=			
ANR	8467797	Identifier	code		8466744	0					
ANR	8467798	CallExpression	"fread ( stream_data , 1 , bytes , f )"		8466744	1					
ANR	8467799	Callee	fread		8466744	0					
ANR	8467800	Identifier	fread		8466744	0					
ANR	8467801	ArgumentList	stream_data		8466744	1					
ANR	8467802	Argument	stream_data		8466744	0					
ANR	8467803	Identifier	stream_data		8466744	0					
ANR	8467804	Argument	1		8466744	1					
ANR	8467805	PrimaryExpression	1		8466744	0					
ANR	8467806	Argument	bytes		8466744	2					
ANR	8467807	Identifier	bytes		8466744	0					
ANR	8467808	Argument	f		8466744	3					
ANR	8467809	Identifier	f		8466744	0					
ANR	8467810	IfStatement	if ( code != bytes )		8466744	16					
ANR	8467811	Condition	code != bytes	251:12:9139:9151	8466744	0	True				
ANR	8467812	EqualityExpression	code != bytes		8466744	0		!=			
ANR	8467813	Identifier	code		8466744	0					
ANR	8467814	Identifier	bytes		8466744	1					
ANR	8467815	CompoundStatement		174:27:6049:6049	8466744	1					
ANR	8467816	ExpressionStatement	"gs_free_object ( mem , stream_data , ""PJL pdfmark, stream"" )"	252:12:9168:9223	8466744	0	True				
ANR	8467817	CallExpression	"gs_free_object ( mem , stream_data , ""PJL pdfmark, stream"" )"		8466744	0					
ANR	8467818	Callee	gs_free_object		8466744	0					
ANR	8467819	Identifier	gs_free_object		8466744	0					
ANR	8467820	ArgumentList	mem		8466744	1					
ANR	8467821	Argument	mem		8466744	0					
ANR	8467822	Identifier	mem		8466744	0					
ANR	8467823	Argument	stream_data		8466744	1					
ANR	8467824	Identifier	stream_data		8466744	0					
ANR	8467825	Argument	"""PJL pdfmark, stream"""		8466744	2					
ANR	8467826	PrimaryExpression	"""PJL pdfmark, stream"""		8466744	0					
ANR	8467827	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	253:12:9237:9303	8466744	1	True				
ANR	8467828	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8466744	0					
ANR	8467829	Callee	gs_free_object		8466744	0					
ANR	8467830	Identifier	gs_free_object		8466744	0					
ANR	8467831	ArgumentList	mem		8466744	1					
ANR	8467832	Argument	mem		8466744	0					
ANR	8467833	Identifier	mem		8466744	0					
ANR	8467834	Argument	copy		8466744	1					
ANR	8467835	Identifier	copy		8466744	0					
ANR	8467836	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8467837	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8467838	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	254:12:9317:9371	8466744	2	True				
ANR	8467839	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8466744	0					
ANR	8467840	Callee	gs_free_object		8466744	0					
ANR	8467841	Identifier	gs_free_object		8466744	0					
ANR	8467842	ArgumentList	mem		8466744	1					
ANR	8467843	Argument	mem		8466744	0					
ANR	8467844	Identifier	mem		8466744	0					
ANR	8467845	Argument	parray		8466744	1					
ANR	8467846	Identifier	parray		8466744	0					
ANR	8467847	Argument	"""temporary pdfmark array"""		8466744	2					
ANR	8467848	PrimaryExpression	"""temporary pdfmark array"""		8466744	0					
ANR	8467849	ExpressionStatement	fclose ( f )	255:12:9385:9394	8466744	3	True				
ANR	8467850	CallExpression	fclose ( f )		8466744	0					
ANR	8467851	Callee	fclose		8466744	0					
ANR	8467852	Identifier	fclose		8466744	0					
ANR	8467853	ArgumentList	f		8466744	1					
ANR	8467854	Argument	f		8466744	0					
ANR	8467855	Identifier	f		8466744	0					
ANR	8467856	ReturnStatement	return gs_note_error ( gs_error_ioerror ) ;	256:12:9408:9446	8466744	4	True				
ANR	8467857	CallExpression	gs_note_error ( gs_error_ioerror )		8466744	0					
ANR	8467858	Callee	gs_note_error		8466744	0					
ANR	8467859	Identifier	gs_note_error		8466744	0					
ANR	8467860	ArgumentList	gs_error_ioerror		8466744	1					
ANR	8467861	Argument	gs_error_ioerror		8466744	0					
ANR	8467862	Identifier	gs_error_ioerror		8466744	0					
ANR	8467863	ExpressionStatement	fclose ( f )	258:8:9466:9475	8466744	17	True				
ANR	8467864	CallExpression	fclose ( f )		8466744	0					
ANR	8467865	Callee	fclose		8466744	0					
ANR	8467866	Identifier	fclose		8466744	0					
ANR	8467867	ArgumentList	f		8466744	1					
ANR	8467868	Argument	f		8466744	0					
ANR	8467869	Identifier	f		8466744	0					
ANR	8467870	ExpressionStatement	parray [ tokens - 2 ] . size = bytes	259:8:9485:9516	8466744	18	True				
ANR	8467871	AssignmentExpression	parray [ tokens - 2 ] . size = bytes		8466744	0		=			
ANR	8467872	MemberAccess	parray [ tokens - 2 ] . size		8466744	0					
ANR	8467873	ArrayIndexing	parray [ tokens - 2 ]		8466744	0					
ANR	8467874	Identifier	parray		8466744	0					
ANR	8467875	AdditiveExpression	tokens - 2		8466744	1		-			
ANR	8467876	Identifier	tokens		8466744	0					
ANR	8467877	PrimaryExpression	2		8466744	1					
ANR	8467878	Identifier	size		8466744	1					
ANR	8467879	Identifier	bytes		8466744	1					
ANR	8467880	ExpressionStatement	"parray [ tokens ] . data = ( const byte * ) "".PUTSTREAM"""	261:8:9527:9575	8466744	19	True				
ANR	8467881	AssignmentExpression	"parray [ tokens ] . data = ( const byte * ) "".PUTSTREAM"""		8466744	0		=			
ANR	8467882	MemberAccess	parray [ tokens ] . data		8466744	0					
ANR	8467883	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467884	Identifier	parray		8466744	0					
ANR	8467885	Identifier	tokens		8466744	1					
ANR	8467886	Identifier	data		8466744	1					
ANR	8467887	CastExpression	"( const byte * ) "".PUTSTREAM"""		8466744	1					
ANR	8467888	CastTarget	const byte *		8466744	0					
ANR	8467889	PrimaryExpression	""".PUTSTREAM"""		8466744	1					
ANR	8467890	ExpressionStatement	parray [ tokens ] . size = 10	262:8:9585:9609	8466744	20	True				
ANR	8467891	AssignmentExpression	parray [ tokens ] . size = 10		8466744	0		=			
ANR	8467892	MemberAccess	parray [ tokens ] . size		8466744	0					
ANR	8467893	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467894	Identifier	parray		8466744	0					
ANR	8467895	Identifier	tokens		8466744	1					
ANR	8467896	Identifier	size		8466744	1					
ANR	8467897	PrimaryExpression	10		8466744	1					
ANR	8467898	ExpressionStatement	parray [ tokens ] . persistent = false	263:8:9619:9652	8466744	21	True				
ANR	8467899	AssignmentExpression	parray [ tokens ] . persistent = false		8466744	0		=			
ANR	8467900	MemberAccess	parray [ tokens ] . persistent		8466744	0					
ANR	8467901	ArrayIndexing	parray [ tokens ]		8466744	0					
ANR	8467902	Identifier	parray		8466744	0					
ANR	8467903	Identifier	tokens		8466744	1					
ANR	8467904	Identifier	persistent		8466744	1					
ANR	8467905	Identifier	false		8466744	1					
ANR	8467906	ExpressionStatement	array_list . data = parray	266:4:9665:9689	8466744	30	True				
ANR	8467907	AssignmentExpression	array_list . data = parray		8466744	0		=			
ANR	8467908	MemberAccess	array_list . data		8466744	0					
ANR	8467909	Identifier	array_list		8466744	0					
ANR	8467910	Identifier	data		8466744	1					
ANR	8467911	Identifier	parray		8466744	1					
ANR	8467912	ExpressionStatement	array_list . persistent = 0	267:4:9695:9720	8466744	31	True				
ANR	8467913	AssignmentExpression	array_list . persistent = 0		8466744	0		=			
ANR	8467914	MemberAccess	array_list . persistent		8466744	0					
ANR	8467915	Identifier	array_list		8466744	0					
ANR	8467916	Identifier	persistent		8466744	1					
ANR	8467917	PrimaryExpression	0		8466744	1					
ANR	8467918	ExpressionStatement	array_list . size = ++ tokens	268:4:9726:9752	8466744	32	True				
ANR	8467919	AssignmentExpression	array_list . size = ++ tokens		8466744	0		=			
ANR	8467920	MemberAccess	array_list . size		8466744	0					
ANR	8467921	Identifier	array_list		8466744	0					
ANR	8467922	Identifier	size		8466744	1					
ANR	8467923	UnaryExpression	++ tokens		8466744	1					
ANR	8467924	IncDec	++		8466744	0					
ANR	8467925	Identifier	tokens		8466744	1					
ANR	8467926	ExpressionStatement	"code = pdfmark_write_list ( mem , device , & array_list )"	270:4:9759:9810	8466744	33	True				
ANR	8467927	AssignmentExpression	"code = pdfmark_write_list ( mem , device , & array_list )"		8466744	0		=			
ANR	8467928	Identifier	code		8466744	0					
ANR	8467929	CallExpression	"pdfmark_write_list ( mem , device , & array_list )"		8466744	1					
ANR	8467930	Callee	pdfmark_write_list		8466744	0					
ANR	8467931	Identifier	pdfmark_write_list		8466744	0					
ANR	8467932	ArgumentList	mem		8466744	1					
ANR	8467933	Argument	mem		8466744	0					
ANR	8467934	Identifier	mem		8466744	0					
ANR	8467935	Argument	device		8466744	1					
ANR	8467936	Identifier	device		8466744	0					
ANR	8467937	Argument	& array_list		8466744	2					
ANR	8467938	UnaryOperationExpression	& array_list		8466744	0					
ANR	8467939	UnaryOperator	&		8466744	0					
ANR	8467940	Identifier	array_list		8466744	1					
ANR	8467941	IfStatement	if ( stream_data )		8466744	34					
ANR	8467942	Condition	stream_data	272:8:9821:9831	8466744	0	True				
ANR	8467943	Identifier	stream_data		8466744	0					
ANR	8467944	ExpressionStatement	"gs_free_object ( mem , stream_data , ""PJL pdfmark, stream"" )"	273:8:9842:9897	8466744	1	True				
ANR	8467945	CallExpression	"gs_free_object ( mem , stream_data , ""PJL pdfmark, stream"" )"		8466744	0					
ANR	8467946	Callee	gs_free_object		8466744	0					
ANR	8467947	Identifier	gs_free_object		8466744	0					
ANR	8467948	ArgumentList	mem		8466744	1					
ANR	8467949	Argument	mem		8466744	0					
ANR	8467950	Identifier	mem		8466744	0					
ANR	8467951	Argument	stream_data		8466744	1					
ANR	8467952	Identifier	stream_data		8466744	0					
ANR	8467953	Argument	"""PJL pdfmark, stream"""		8466744	2					
ANR	8467954	PrimaryExpression	"""PJL pdfmark, stream"""		8466744	0					
ANR	8467955	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	274:4:9903:9969	8466744	35	True				
ANR	8467956	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8466744	0					
ANR	8467957	Callee	gs_free_object		8466744	0					
ANR	8467958	Identifier	gs_free_object		8466744	0					
ANR	8467959	ArgumentList	mem		8466744	1					
ANR	8467960	Argument	mem		8466744	0					
ANR	8467961	Identifier	mem		8466744	0					
ANR	8467962	Argument	copy		8466744	1					
ANR	8467963	Identifier	copy		8466744	0					
ANR	8467964	Argument	"""working buffer for pdfmark processing"""		8466744	2					
ANR	8467965	PrimaryExpression	"""working buffer for pdfmark processing"""		8466744	0					
ANR	8467966	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	275:4:9975:10029	8466744	36	True				
ANR	8467967	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8466744	0					
ANR	8467968	Callee	gs_free_object		8466744	0					
ANR	8467969	Identifier	gs_free_object		8466744	0					
ANR	8467970	ArgumentList	mem		8466744	1					
ANR	8467971	Argument	mem		8466744	0					
ANR	8467972	Identifier	mem		8466744	0					
ANR	8467973	Argument	parray		8466744	1					
ANR	8467974	Identifier	parray		8466744	0					
ANR	8467975	Argument	"""temporary pdfmark array"""		8466744	2					
ANR	8467976	PrimaryExpression	"""temporary pdfmark array"""		8466744	0					
ANR	8467977	ReturnStatement	return code ;	277:4:10036:10047	8466744	37	True				
ANR	8467978	Identifier	code		8466744	0					
ANR	8467979	ReturnType	static int		8466744	1					
ANR	8467980	Identifier	process_pdfmark		8466744	2					
ANR	8467981	ParameterList	"gs_memory_t * mem , gx_device * device , char * pdfmark"		8466744	3					
ANR	8467982	Parameter	gs_memory_t * mem	77:27:3052:3067	8466744	0	True				
ANR	8467983	ParameterType	gs_memory_t *		8466744	0					
ANR	8467984	Identifier	mem		8466744	1					
ANR	8467985	Parameter	gx_device * device	77:45:3070:3086	8466744	1	True				
ANR	8467986	ParameterType	gx_device *		8466744	0					
ANR	8467987	Identifier	device		8466744	1					
ANR	8467988	Parameter	char * pdfmark	77:64:3089:3101	8466744	2	True				
ANR	8467989	ParameterType	char *		8466744	0					
ANR	8467990	Identifier	pdfmark		8466744	1					
ANR	8467991	CFGEntryNode	ENTRY		8466744		True				
ANR	8467992	CFGExitNode	EXIT		8466744		True				
ANR	8467993	Symbol	* ( p - 1 )		8466744						
ANR	8467994	Symbol	array_list . size		8466744						
ANR	8467995	Symbol	* start		8466744						
ANR	8467996	Symbol	parray [ tokens - 1 ] . persistent		8466744						
ANR	8467997	Symbol	pdfmark		8466744						
ANR	8467998	Symbol	strlen		8466744						
ANR	8467999	Symbol	strncmp		8466744						
ANR	8468000	Symbol	* * tokens		8466744						
ANR	8468001	Symbol	parray [ tokens ] . data		8466744						
ANR	8468002	Symbol	gp_fopen		8466744						
ANR	8468003	Symbol	gp_fseek_64		8466744						
ANR	8468004	Symbol	* tokens		8466744						
ANR	8468005	Symbol	* * parray		8466744						
ANR	8468006	Symbol	fread		8466744						
ANR	8468007	Symbol	filename		8466744						
ANR	8468008	Symbol	pdfmark_write_list		8466744						
ANR	8468009	Symbol	putdict		8466744						
ANR	8468010	Symbol	true		8466744						
ANR	8468011	Symbol	array_list . data		8466744						
ANR	8468012	Symbol	device		8466744						
ANR	8468013	Symbol	parray [ tokens - 2 ] . size		8466744						
ANR	8468014	Symbol	parray		8466744						
ANR	8468015	Symbol	code		8466744						
ANR	8468016	Symbol	parray [ tokens ] . size		8466744						
ANR	8468017	Symbol	* pdfmark		8466744						
ANR	8468018	Symbol	array_list . persistent		8466744						
ANR	8468019	Symbol	parray [ tokens - 1 ] . size		8466744						
ANR	8468020	Symbol	& array_list		8466744						
ANR	8468021	Symbol	parray [ tokens ++ ] . persistent		8466744						
ANR	8468022	Symbol	mem		8466744						
ANR	8468023	Symbol	tokens		8466744						
ANR	8468024	Symbol	copy		8466744						
ANR	8468025	Symbol	parray [ tokens ] . persistent		8466744						
ANR	8468026	Symbol	parray [ tokens - 2 ] . data		8466744						
ANR	8468027	Symbol	parray [ tokens - 1 ] . data		8466744						
ANR	8468028	Symbol	SEEK_SET		8466744						
ANR	8468029	Symbol	gs_alloc_bytes		8466744						
ANR	8468030	Symbol	f		8466744						
ANR	8468031	Symbol	* parray [ tokens - 2 ] . data		8466744						
ANR	8468032	Symbol	start		8466744						
ANR	8468033	Symbol	false		8466744						
ANR	8468034	Symbol	gs_error_ioerror		8466744						
ANR	8468035	Symbol	* parray [ tokens ] . data		8466744						
ANR	8468036	Symbol	SEEK_END		8466744						
ANR	8468037	Symbol	gp_ftell_64		8466744						
ANR	8468038	Symbol	p		8466744						
ANR	8468039	Symbol	gs_note_error		8466744						
ANR	8468040	Symbol	stream_data		8466744						
ANR	8468041	Symbol	array_list		8466744						
ANR	8468042	Symbol	* filename		8466744						
ANR	8468043	Symbol	* strlen		8466744						
ANR	8468044	Symbol	bytes		8466744						
ANR	8468045	Symbol	* p		8466744						
ANR	8468046	Symbol	* parray		8466744						
ANR	8468047	Function	pcl_pjl_pdfmark	280:0:10052:10860							
ANR	8468048	FunctionDef	"pcl_pjl_pdfmark (gs_memory_t * mem , gx_device * device , char * pdfmark)"		8468047	0					
ANR	8468049	CompoundStatement		281:0:10124:10860	8468047	0					
ANR	8468050	IdentifierDeclStatement	"char * pdfmark_start , * token_start , end , * p ;"	282:4:10130:10172	8468047	0	True				
ANR	8468051	IdentifierDecl	* pdfmark_start		8468047	0					
ANR	8468052	IdentifierDeclType	char *		8468047	0					
ANR	8468053	Identifier	pdfmark_start		8468047	1					
ANR	8468054	IdentifierDecl	* token_start		8468047	1					
ANR	8468055	IdentifierDeclType	char *		8468047	0					
ANR	8468056	Identifier	token_start		8468047	1					
ANR	8468057	IdentifierDecl	end		8468047	2					
ANR	8468058	IdentifierDeclType	char		8468047	0					
ANR	8468059	Identifier	end		8468047	1					
ANR	8468060	IdentifierDecl	* p		8468047	3					
ANR	8468061	IdentifierDeclType	char *		8468047	0					
ANR	8468062	Identifier	p		8468047	1					
ANR	8468063	IdentifierDeclStatement	int code ;	283:4:10178:10186	8468047	1	True				
ANR	8468064	IdentifierDecl	code		8468047	0					
ANR	8468065	IdentifierDeclType	int		8468047	0					
ANR	8468066	Identifier	code		8468047	1					
ANR	8468067	ExpressionStatement	p = token_start = pdfmark_start = pdfmark + 1	285:4:10193:10238	8468047	2	True				
ANR	8468068	AssignmentExpression	p = token_start = pdfmark_start = pdfmark + 1		8468047	0		=			
ANR	8468069	Identifier	p		8468047	0					
ANR	8468070	AssignmentExpression	token_start = pdfmark_start = pdfmark + 1		8468047	1		=			
ANR	8468071	Identifier	token_start		8468047	0					
ANR	8468072	AssignmentExpression	pdfmark_start = pdfmark + 1		8468047	1		=			
ANR	8468073	Identifier	pdfmark_start		8468047	0					
ANR	8468074	AdditiveExpression	pdfmark + 1		8468047	1		+			
ANR	8468075	Identifier	pdfmark		8468047	0					
ANR	8468076	PrimaryExpression	1		8468047	1					
ANR	8468077	DoStatement	do		8468047	3					
ANR	8468078	CompoundStatement		7:7:123:123	8468047	0					
ANR	8468079	WhileStatement	"while ( * p != ' ' && * p != '""' && * p != 0x00 )"		8468047	0					
ANR	8468080	Condition	"* p != ' ' && * p != '""' && * p != 0x00"	288:15:10265:10300	8468047	0	True				
ANR	8468081	AndExpression	"* p != ' ' && * p != '""' && * p != 0x00"		8468047	0		&&			
ANR	8468082	EqualityExpression	* p != ' '		8468047	0		!=			
ANR	8468083	UnaryOperationExpression	* p		8468047	0					
ANR	8468084	UnaryOperator	*		8468047	0					
ANR	8468085	Identifier	p		8468047	1					
ANR	8468086	PrimaryExpression	' '		8468047	1					
ANR	8468087	AndExpression	"* p != '""' && * p != 0x00"		8468047	1		&&			
ANR	8468088	EqualityExpression	"* p != '""'"		8468047	0		!=			
ANR	8468089	UnaryOperationExpression	* p		8468047	0					
ANR	8468090	UnaryOperator	*		8468047	0					
ANR	8468091	Identifier	p		8468047	1					
ANR	8468092	PrimaryExpression	"'""'"		8468047	1					
ANR	8468093	EqualityExpression	* p != 0x00		8468047	1		!=			
ANR	8468094	UnaryOperationExpression	* p		8468047	0					
ANR	8468095	UnaryOperator	*		8468047	0					
ANR	8468096	Identifier	p		8468047	1					
ANR	8468097	PrimaryExpression	0x00		8468047	1					
ANR	8468098	ExpressionStatement	p ++	289:12:10315:10318	8468047	1	True				
ANR	8468099	PostIncDecOperationExpression	p ++		8468047	0					
ANR	8468100	Identifier	p		8468047	0					
ANR	8468101	IncDec	++		8468047	1					
ANR	8468102	IfStatement	"if ( ( p - token_start ) != 7 || strncmp ( token_start , ""pdfmark"" , 7 ) != 0 )"		8468047	1					
ANR	8468103	Condition	"( p - token_start ) != 7 || strncmp ( token_start , ""pdfmark"" , 7 ) != 0"	290:11:10331:10395	8468047	0	True				
ANR	8468104	OrExpression	"( p - token_start ) != 7 || strncmp ( token_start , ""pdfmark"" , 7 ) != 0"		8468047	0		||			
ANR	8468105	EqualityExpression	( p - token_start ) != 7		8468047	0		!=			
ANR	8468106	AdditiveExpression	p - token_start		8468047	0		-			
ANR	8468107	Identifier	p		8468047	0					
ANR	8468108	Identifier	token_start		8468047	1					
ANR	8468109	PrimaryExpression	7		8468047	1					
ANR	8468110	EqualityExpression	"strncmp ( token_start , ""pdfmark"" , 7 ) != 0"		8468047	1		!=			
ANR	8468111	CallExpression	"strncmp ( token_start , ""pdfmark"" , 7 )"		8468047	0					
ANR	8468112	Callee	strncmp		8468047	0					
ANR	8468113	Identifier	strncmp		8468047	0					
ANR	8468114	ArgumentList	token_start		8468047	1					
ANR	8468115	Argument	token_start		8468047	0					
ANR	8468116	Identifier	token_start		8468047	0					
ANR	8468117	Argument	"""pdfmark"""		8468047	1					
ANR	8468118	PrimaryExpression	"""pdfmark"""		8468047	0					
ANR	8468119	Argument	7		8468047	2					
ANR	8468120	PrimaryExpression	7		8468047	0					
ANR	8468121	PrimaryExpression	0		8468047	1					
ANR	8468122	CompoundStatement		10:77:272:272	8468047	1					
ANR	8468123	IfStatement	if ( * p != 0x00 )		8468047	0					
ANR	8468124	Condition	* p != 0x00	291:16:10415:10424	8468047	0	True				
ANR	8468125	EqualityExpression	* p != 0x00		8468047	0		!=			
ANR	8468126	UnaryOperationExpression	* p		8468047	0					
ANR	8468127	UnaryOperator	*		8468047	0					
ANR	8468128	Identifier	p		8468047	1					
ANR	8468129	PrimaryExpression	0x00		8468047	1					
ANR	8468130	ExpressionStatement	token_start = ++ p	292:16:10443:10460	8468047	1	True				
ANR	8468131	AssignmentExpression	token_start = ++ p		8468047	0		=			
ANR	8468132	Identifier	token_start		8468047	0					
ANR	8468133	UnaryExpression	++ p		8468047	1					
ANR	8468134	IncDec	++		8468047	0					
ANR	8468135	Identifier	p		8468047	1					
ANR	8468136	ElseStatement	else		8468047	0					
ANR	8468137	BreakStatement	break ;	294:16:10495:10500	8468047	0	True				
ANR	8468138	ElseStatement	else		8468047	0					
ANR	8468139	CompoundStatement		15:15:392:392	8468047	0					
ANR	8468140	ExpressionStatement	token_start --	296:12:10531:10544	8468047	0	True				
ANR	8468141	PostIncDecOperationExpression	token_start --		8468047	0					
ANR	8468142	Identifier	token_start		8468047	0					
ANR	8468143	IncDec	--		8468047	1					
ANR	8468144	ExpressionStatement	end = * token_start	297:12:10558:10576	8468047	1	True				
ANR	8468145	AssignmentExpression	end = * token_start		8468047	0		=			
ANR	8468146	Identifier	end		8468047	0					
ANR	8468147	UnaryOperationExpression	* token_start		8468047	1					
ANR	8468148	UnaryOperator	*		8468047	0					
ANR	8468149	Identifier	token_start		8468047	1					
ANR	8468150	ExpressionStatement	* token_start = 0x00	298:12:10590:10609	8468047	2	True				
ANR	8468151	AssignmentExpression	* token_start = 0x00		8468047	0		=			
ANR	8468152	UnaryOperationExpression	* token_start		8468047	0					
ANR	8468153	UnaryOperator	*		8468047	0					
ANR	8468154	Identifier	token_start		8468047	1					
ANR	8468155	PrimaryExpression	0x00		8468047	1					
ANR	8468156	ExpressionStatement	"code = process_pdfmark ( mem , device , pdfmark_start )"	299:12:10623:10673	8468047	3	True				
ANR	8468157	AssignmentExpression	"code = process_pdfmark ( mem , device , pdfmark_start )"		8468047	0		=			
ANR	8468158	Identifier	code		8468047	0					
ANR	8468159	CallExpression	"process_pdfmark ( mem , device , pdfmark_start )"		8468047	1					
ANR	8468160	Callee	process_pdfmark		8468047	0					
ANR	8468161	Identifier	process_pdfmark		8468047	0					
ANR	8468162	ArgumentList	mem		8468047	1					
ANR	8468163	Argument	mem		8468047	0					
ANR	8468164	Identifier	mem		8468047	0					
ANR	8468165	Argument	device		8468047	1					
ANR	8468166	Identifier	device		8468047	0					
ANR	8468167	Argument	pdfmark_start		8468047	2					
ANR	8468168	Identifier	pdfmark_start		8468047	0					
ANR	8468169	IfStatement	if ( code < 0 )		8468047	4					
ANR	8468170	Condition	code < 0	300:16:10691:10698	8468047	0	True				
ANR	8468171	RelationalExpression	code < 0		8468047	0		<			
ANR	8468172	Identifier	code		8468047	0					
ANR	8468173	PrimaryExpression	0		8468047	1					
ANR	8468174	ReturnStatement	return code ;	301:16:10717:10728	8468047	1	True				
ANR	8468175	Identifier	code		8468047	0					
ANR	8468176	ExpressionStatement	* token_start = end	303:12:10743:10761	8468047	5	True				
ANR	8468177	AssignmentExpression	* token_start = end		8468047	0		=			
ANR	8468178	UnaryOperationExpression	* token_start		8468047	0					
ANR	8468179	UnaryOperator	*		8468047	0					
ANR	8468180	Identifier	token_start		8468047	1					
ANR	8468181	Identifier	end		8468047	1					
ANR	8468182	ExpressionStatement	token_start = pdfmark_start = ++ p	304:12:10775:10808	8468047	6	True				
ANR	8468183	AssignmentExpression	token_start = pdfmark_start = ++ p		8468047	0		=			
ANR	8468184	Identifier	token_start		8468047	0					
ANR	8468185	AssignmentExpression	pdfmark_start = ++ p		8468047	1		=			
ANR	8468186	Identifier	pdfmark_start		8468047	0					
ANR	8468187	UnaryExpression	++ p		8468047	1					
ANR	8468188	IncDec	++		8468047	0					
ANR	8468189	Identifier	p		8468047	1					
ANR	8468190	Condition	* p != 0x00	306:13:10833:10842	8468047	1	True				
ANR	8468191	EqualityExpression	* p != 0x00		8468047	0		!=			
ANR	8468192	UnaryOperationExpression	* p		8468047	0					
ANR	8468193	UnaryOperator	*		8468047	0					
ANR	8468194	Identifier	p		8468047	1					
ANR	8468195	PrimaryExpression	0x00		8468047	1					
ANR	8468196	ReturnStatement	return 0 ;	307:4:10850:10858	8468047	4	True				
ANR	8468197	PrimaryExpression	0		8468047	0					
ANR	8468198	ReturnType	int		8468047	1					
ANR	8468199	Identifier	pcl_pjl_pdfmark		8468047	2					
ANR	8468200	ParameterList	"gs_memory_t * mem , gx_device * device , char * pdfmark"		8468047	3					
ANR	8468201	Parameter	gs_memory_t * mem	280:20:10072:10087	8468047	0	True				
ANR	8468202	ParameterType	gs_memory_t *		8468047	0					
ANR	8468203	Identifier	mem		8468047	1					
ANR	8468204	Parameter	gx_device * device	280:38:10090:10106	8468047	1	True				
ANR	8468205	ParameterType	gx_device *		8468047	0					
ANR	8468206	Identifier	device		8468047	1					
ANR	8468207	Parameter	char * pdfmark	280:57:10109:10121	8468047	2	True				
ANR	8468208	ParameterType	char *		8468047	0					
ANR	8468209	Identifier	pdfmark		8468047	1					
ANR	8468210	CFGEntryNode	ENTRY		8468047		True				
ANR	8468211	CFGExitNode	EXIT		8468047		True				
ANR	8468212	Symbol	p		8468047						
ANR	8468213	Symbol	pdfmark		8468047						
ANR	8468214	Symbol	strncmp		8468047						
ANR	8468215	Symbol	token_start		8468047						
ANR	8468216	Symbol	pdfmark_start		8468047						
ANR	8468217	Symbol	code		8468047						
ANR	8468218	Symbol	mem		8468047						
ANR	8468219	Symbol	* token_start		8468047						
ANR	8468220	Symbol	process_pdfmark		8468047						
ANR	8468221	Symbol	end		8468047						
ANR	8468222	Symbol	* p		8468047						
ANR	8468223	Symbol	device		8468047						
ANR	8468224	Function	pjl_dist_process_dict	316:0:11170:12621							
ANR	8468225	FunctionDef	"pjl_dist_process_dict (gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p)"		8468224	0					
ANR	8468226	CompoundStatement		317:0:11274:12621	8468224	0					
ANR	8468227	IdentifierDeclStatement	gs_param_dict dict ;	318:4:11280:11298	8468224	0	True				
ANR	8468228	IdentifierDecl	dict		8468224	0					
ANR	8468229	IdentifierDeclType	gs_param_dict		8468224	0					
ANR	8468230	Identifier	dict		8468224	1					
ANR	8468231	IdentifierDeclStatement	"int code , tokens , nested = 0 ;"	319:4:11304:11332	8468224	1	True				
ANR	8468232	IdentifierDecl	code		8468224	0					
ANR	8468233	IdentifierDeclType	int		8468224	0					
ANR	8468234	Identifier	code		8468224	1					
ANR	8468235	IdentifierDecl	tokens		8468224	1					
ANR	8468236	IdentifierDeclType	int		8468224	0					
ANR	8468237	Identifier	tokens		8468224	1					
ANR	8468238	IdentifierDecl	nested = 0		8468224	2					
ANR	8468239	IdentifierDeclType	int		8468224	0					
ANR	8468240	Identifier	nested		8468224	1					
ANR	8468241	AssignmentExpression	nested = 0		8468224	2		=			
ANR	8468242	Identifier	nested		8468224	0					
ANR	8468243	PrimaryExpression	0		8468224	1					
ANR	8468244	IdentifierDeclStatement	"char * p1 = * p , * start = * p ;"	320:4:11338:11364	8468224	2	True				
ANR	8468245	IdentifierDecl	* p1 = * p		8468224	0					
ANR	8468246	IdentifierDeclType	char *		8468224	0					
ANR	8468247	Identifier	p1		8468224	1					
ANR	8468248	AssignmentExpression	* p1 = * p		8468224	2		=			
ANR	8468249	Identifier	p1		8468224	0					
ANR	8468250	UnaryOperationExpression	* p		8468224	1					
ANR	8468251	UnaryOperator	*		8468224	0					
ANR	8468252	Identifier	p		8468224	1					
ANR	8468253	IdentifierDecl	* start = * p		8468224	1					
ANR	8468254	IdentifierDeclType	char *		8468224	0					
ANR	8468255	Identifier	start		8468224	1					
ANR	8468256	AssignmentExpression	* start = * p		8468224	2		=			
ANR	8468257	Identifier	start		8468224	0					
ANR	8468258	UnaryOperationExpression	* p		8468224	1					
ANR	8468259	UnaryOperator	*		8468224	0					
ANR	8468260	Identifier	p		8468224	1					
ANR	8468261	DoStatement	do		8468224	3					
ANR	8468262	CompoundStatement		7:7:146:146	8468224	0					
ANR	8468263	IfStatement	if ( * p1 != '>' && * p1 != 0x00 )		8468224	0					
ANR	8468264	Condition	* p1 != '>' && * p1 != 0x00	324:12:11435:11459	8468224	0	True				
ANR	8468265	AndExpression	* p1 != '>' && * p1 != 0x00		8468224	0		&&			
ANR	8468266	EqualityExpression	* p1 != '>'		8468224	0		!=			
ANR	8468267	UnaryOperationExpression	* p1		8468224	0					
ANR	8468268	UnaryOperator	*		8468224	0					
ANR	8468269	Identifier	p1		8468224	1					
ANR	8468270	PrimaryExpression	'>'		8468224	1					
ANR	8468271	EqualityExpression	* p1 != 0x00		8468224	1		!=			
ANR	8468272	UnaryOperationExpression	* p1		8468224	0					
ANR	8468273	UnaryOperator	*		8468224	0					
ANR	8468274	Identifier	p1		8468224	1					
ANR	8468275	PrimaryExpression	0x00		8468224	1					
ANR	8468276	CompoundStatement		8:39:187:187	8468224	1					
ANR	8468277	IfStatement	if ( * p1 == '<' && * ( p1 + 1 ) == '<' )		8468224	0					
ANR	8468278	Condition	* p1 == '<' && * ( p1 + 1 ) == '<'	325:16:11480:11509	8468224	0	True				
ANR	8468279	AndExpression	* p1 == '<' && * ( p1 + 1 ) == '<'		8468224	0		&&			
ANR	8468280	EqualityExpression	* p1 == '<'		8468224	0		==			
ANR	8468281	UnaryOperationExpression	* p1		8468224	0					
ANR	8468282	UnaryOperator	*		8468224	0					
ANR	8468283	Identifier	p1		8468224	1					
ANR	8468284	PrimaryExpression	'<'		8468224	1					
ANR	8468285	EqualityExpression	* ( p1 + 1 ) == '<'		8468224	1		==			
ANR	8468286	UnaryOperationExpression	* ( p1 + 1 )		8468224	0					
ANR	8468287	UnaryOperator	*		8468224	0					
ANR	8468288	AdditiveExpression	p1 + 1		8468224	1		+			
ANR	8468289	Identifier	p1		8468224	0					
ANR	8468290	PrimaryExpression	1		8468224	1					
ANR	8468291	PrimaryExpression	'<'		8468224	1					
ANR	8468292	CompoundStatement		9:48:237:237	8468224	1					
ANR	8468293	ExpressionStatement	nested ++	326:16:11530:11538	8468224	0	True				
ANR	8468294	PostIncDecOperationExpression	nested ++		8468224	0					
ANR	8468295	Identifier	nested		8468224	0					
ANR	8468296	IncDec	++		8468224	1					
ANR	8468297	ExpressionStatement	p1 += 2	327:16:11556:11563	8468224	1	True				
ANR	8468298	AssignmentExpression	p1 += 2		8468224	0		+=			
ANR	8468299	Identifier	p1		8468224	0					
ANR	8468300	PrimaryExpression	2		8468224	1					
ANR	8468301	ElseStatement	else		8468224	0					
ANR	8468302	ExpressionStatement	p1 ++	329:16:11600:11604	8468224	0	True				
ANR	8468303	PostIncDecOperationExpression	p1 ++		8468224	0					
ANR	8468304	Identifier	p1		8468224	0					
ANR	8468305	IncDec	++		8468224	1					
ANR	8468306	ElseStatement	else		8468224	0					
ANR	8468307	CompoundStatement		14:15:346:346	8468224	0					
ANR	8468308	IfStatement	if ( * ( p1 + 1 ) != '>' && * ( p1 + 1 ) != 0x00 )		8468224	0					
ANR	8468309	Condition	* ( p1 + 1 ) != '>' && * ( p1 + 1 ) != 0x00	331:16:11639:11675	8468224	0	True				
ANR	8468310	AndExpression	* ( p1 + 1 ) != '>' && * ( p1 + 1 ) != 0x00		8468224	0		&&			
ANR	8468311	EqualityExpression	* ( p1 + 1 ) != '>'		8468224	0		!=			
ANR	8468312	UnaryOperationExpression	* ( p1 + 1 )		8468224	0					
ANR	8468313	UnaryOperator	*		8468224	0					
ANR	8468314	AdditiveExpression	p1 + 1		8468224	1		+			
ANR	8468315	Identifier	p1		8468224	0					
ANR	8468316	PrimaryExpression	1		8468224	1					
ANR	8468317	PrimaryExpression	'>'		8468224	1					
ANR	8468318	EqualityExpression	* ( p1 + 1 ) != 0x00		8468224	1		!=			
ANR	8468319	UnaryOperationExpression	* ( p1 + 1 )		8468224	0					
ANR	8468320	UnaryOperator	*		8468224	0					
ANR	8468321	AdditiveExpression	p1 + 1		8468224	1		+			
ANR	8468322	Identifier	p1		8468224	0					
ANR	8468323	PrimaryExpression	1		8468224	1					
ANR	8468324	PrimaryExpression	0x00		8468224	1					
ANR	8468325	CompoundStatement		15:55:403:403	8468224	1					
ANR	8468326	ExpressionStatement	p1 ++	332:16:11696:11700	8468224	0	True				
ANR	8468327	PostIncDecOperationExpression	p1 ++		8468224	0					
ANR	8468328	Identifier	p1		8468224	0					
ANR	8468329	IncDec	++		8468224	1					
ANR	8468330	ElseStatement	else		8468224	0					
ANR	8468331	CompoundStatement		17:19:446:446	8468224	0					
ANR	8468332	IfStatement	if ( nested )		8468224	0					
ANR	8468333	Condition	nested	334:20:11743:11748	8468224	0	True				
ANR	8468334	Identifier	nested		8468224	0					
ANR	8468335	ExpressionStatement	nested --	335:20:11771:11779	8468224	1	True				
ANR	8468336	PostIncDecOperationExpression	nested --		8468224	0					
ANR	8468337	Identifier	nested		8468224	0					
ANR	8468338	IncDec	--		8468224	1					
ANR	8468339	ElseStatement	else		8468224	0					
ANR	8468340	BreakStatement	break ;	337:20:11822:11827	8468224	0	True				
ANR	8468341	ExpressionStatement	p1 += 2	338:16:11845:11852	8468224	1	True				
ANR	8468342	AssignmentExpression	p1 += 2		8468224	0		+=			
ANR	8468343	Identifier	p1		8468224	0					
ANR	8468344	PrimaryExpression	2		8468224	1					
ANR	8468345	Condition	1	341:12:11890:11890	8468224	1	True				
ANR	8468346	PrimaryExpression	1		8468224	0					
ANR	8468347	IfStatement	if ( * p1 == 0x00 )		8468224	4					
ANR	8468348	Condition	* p1 == 0x00	343:8:11903:11913	8468224	0	True				
ANR	8468349	EqualityExpression	* p1 == 0x00		8468224	0		==			
ANR	8468350	UnaryOperationExpression	* p1		8468224	0					
ANR	8468351	UnaryOperator	*		8468224	0					
ANR	8468352	Identifier	p1		8468224	1					
ANR	8468353	PrimaryExpression	0x00		8468224	1					
ANR	8468354	ReturnStatement	return - 1 ;	344:8:11924:11933	8468224	1	True				
ANR	8468355	UnaryOperationExpression	- 1		8468224	0					
ANR	8468356	UnaryOperator	-		8468224	0					
ANR	8468357	PrimaryExpression	1		8468224	1					
ANR	8468358	ExpressionStatement	* p1 ++ = 0x00	347:4:11984:11996	8468224	5	True				
ANR	8468359	AssignmentExpression	* p1 ++ = 0x00		8468224	0		=			
ANR	8468360	UnaryOperationExpression	* p1 ++		8468224	0					
ANR	8468361	UnaryOperator	*		8468224	0					
ANR	8468362	PostIncDecOperationExpression	p1 ++		8468224	1					
ANR	8468363	Identifier	p1		8468224	0					
ANR	8468364	IncDec	++		8468224	1					
ANR	8468365	PrimaryExpression	0x00		8468224	1					
ANR	8468366	IfStatement	if ( * p1 == 0x00 )		8468224	6					
ANR	8468367	Condition	* p1 == 0x00	348:8:12006:12016	8468224	0	True				
ANR	8468368	EqualityExpression	* p1 == 0x00		8468224	0		==			
ANR	8468369	UnaryOperationExpression	* p1		8468224	0					
ANR	8468370	UnaryOperator	*		8468224	0					
ANR	8468371	Identifier	p1		8468224	1					
ANR	8468372	PrimaryExpression	0x00		8468224	1					
ANR	8468373	ReturnStatement	return - 1 ;	349:8:12027:12036	8468224	1	True				
ANR	8468374	UnaryOperationExpression	- 1		8468224	0					
ANR	8468375	UnaryOperator	-		8468224	0					
ANR	8468376	PrimaryExpression	1		8468224	1					
ANR	8468377	ExpressionStatement	* p1 = 0x00	350:4:12042:12052	8468224	7	True				
ANR	8468378	AssignmentExpression	* p1 = 0x00		8468224	0		=			
ANR	8468379	UnaryOperationExpression	* p1		8468224	0					
ANR	8468380	UnaryOperator	*		8468224	0					
ANR	8468381	Identifier	p1		8468224	1					
ANR	8468382	PrimaryExpression	0x00		8468224	1					
ANR	8468383	ExpressionStatement	* p = p1 + 1	355:4:12176:12187	8468224	8	True				
ANR	8468384	AssignmentExpression	* p = p1 + 1		8468224	0		=			
ANR	8468385	UnaryOperationExpression	* p		8468224	0					
ANR	8468386	UnaryOperator	*		8468224	0					
ANR	8468387	Identifier	p		8468224	1					
ANR	8468388	AdditiveExpression	p1 + 1		8468224	1		+			
ANR	8468389	Identifier	p1		8468224	0					
ANR	8468390	PrimaryExpression	1		8468224	1					
ANR	8468391	ExpressionStatement	p1 = start	357:4:12194:12204	8468224	9	True				
ANR	8468392	AssignmentExpression	p1 = start		8468224	0		=			
ANR	8468393	Identifier	p1		8468224	0					
ANR	8468394	Identifier	start		8468224	1					
ANR	8468395	ExpressionStatement	tokens = count_tokens ( p1 )	359:4:12211:12236	8468224	10	True				
ANR	8468396	AssignmentExpression	tokens = count_tokens ( p1 )		8468224	0		=			
ANR	8468397	Identifier	tokens		8468224	0					
ANR	8468398	CallExpression	count_tokens ( p1 )		8468224	1					
ANR	8468399	Callee	count_tokens		8468224	0					
ANR	8468400	Identifier	count_tokens		8468224	0					
ANR	8468401	ArgumentList	p1		8468224	1					
ANR	8468402	Argument	p1		8468224	0					
ANR	8468403	Identifier	p1		8468224	0					
ANR	8468404	ExpressionStatement	dict . size = tokens	360:4:12242:12260	8468224	11	True				
ANR	8468405	AssignmentExpression	dict . size = tokens		8468224	0		=			
ANR	8468406	MemberAccess	dict . size		8468224	0					
ANR	8468407	Identifier	dict		8468224	0					
ANR	8468408	Identifier	size		8468224	1					
ANR	8468409	Identifier	tokens		8468224	1					
ANR	8468410	ExpressionStatement	"code = param_begin_write_dict ( ( gs_param_list * ) plist , key , & dict , false )"	362:4:12267:12339	8468224	12	True				
ANR	8468411	AssignmentExpression	"code = param_begin_write_dict ( ( gs_param_list * ) plist , key , & dict , false )"		8468224	0		=			
ANR	8468412	Identifier	code		8468224	0					
ANR	8468413	CallExpression	"param_begin_write_dict ( ( gs_param_list * ) plist , key , & dict , false )"		8468224	1					
ANR	8468414	Callee	param_begin_write_dict		8468224	0					
ANR	8468415	Identifier	param_begin_write_dict		8468224	0					
ANR	8468416	ArgumentList	( gs_param_list * ) plist		8468224	1					
ANR	8468417	Argument	( gs_param_list * ) plist		8468224	0					
ANR	8468418	CastExpression	( gs_param_list * ) plist		8468224	0					
ANR	8468419	CastTarget	gs_param_list *		8468224	0					
ANR	8468420	Identifier	plist		8468224	1					
ANR	8468421	Argument	key		8468224	1					
ANR	8468422	Identifier	key		8468224	0					
ANR	8468423	Argument	& dict		8468224	2					
ANR	8468424	UnaryOperationExpression	& dict		8468224	0					
ANR	8468425	UnaryOperator	&		8468224	0					
ANR	8468426	Identifier	dict		8468224	1					
ANR	8468427	Argument	false		8468224	3					
ANR	8468428	Identifier	false		8468224	0					
ANR	8468429	IfStatement	if ( code < 0 )		8468224	13					
ANR	8468430	Condition	code < 0	363:8:12349:12356	8468224	0	True				
ANR	8468431	RelationalExpression	code < 0		8468224	0		<			
ANR	8468432	Identifier	code		8468224	0					
ANR	8468433	PrimaryExpression	0		8468224	1					
ANR	8468434	ReturnStatement	return code ;	364:8:12367:12378	8468224	1	True				
ANR	8468435	Identifier	code		8468224	0					
ANR	8468436	ExpressionStatement	"gs_param_list_set_persistent_keys ( dict . list , false )"	366:4:12385:12436	8468224	14	True				
ANR	8468437	CallExpression	"gs_param_list_set_persistent_keys ( dict . list , false )"		8468224	0					
ANR	8468438	Callee	gs_param_list_set_persistent_keys		8468224	0					
ANR	8468439	Identifier	gs_param_list_set_persistent_keys		8468224	0					
ANR	8468440	ArgumentList	dict . list		8468224	1					
ANR	8468441	Argument	dict . list		8468224	0					
ANR	8468442	MemberAccess	dict . list		8468224	0					
ANR	8468443	Identifier	dict		8468224	0					
ANR	8468444	Identifier	list		8468224	1					
ANR	8468445	Argument	false		8468224	1					
ANR	8468446	Identifier	false		8468224	0					
ANR	8468447	ExpressionStatement	"code = pjl_dist_add_tokens_to_list ( dict . list , & p1 )"	368:4:12443:12493	8468224	15	True				
ANR	8468448	AssignmentExpression	"code = pjl_dist_add_tokens_to_list ( dict . list , & p1 )"		8468224	0		=			
ANR	8468449	Identifier	code		8468224	0					
ANR	8468450	CallExpression	"pjl_dist_add_tokens_to_list ( dict . list , & p1 )"		8468224	1					
ANR	8468451	Callee	pjl_dist_add_tokens_to_list		8468224	0					
ANR	8468452	Identifier	pjl_dist_add_tokens_to_list		8468224	0					
ANR	8468453	ArgumentList	dict . list		8468224	1					
ANR	8468454	Argument	dict . list		8468224	0					
ANR	8468455	MemberAccess	dict . list		8468224	0					
ANR	8468456	Identifier	dict		8468224	0					
ANR	8468457	Identifier	list		8468224	1					
ANR	8468458	Argument	& p1		8468224	1					
ANR	8468459	UnaryOperationExpression	& p1		8468224	0					
ANR	8468460	UnaryOperator	&		8468224	0					
ANR	8468461	Identifier	p1		8468224	1					
ANR	8468462	IfStatement	if ( code < 0 )		8468224	16					
ANR	8468463	Condition	code < 0	369:8:12503:12510	8468224	0	True				
ANR	8468464	RelationalExpression	code < 0		8468224	0		<			
ANR	8468465	Identifier	code		8468224	0					
ANR	8468466	PrimaryExpression	0		8468224	1					
ANR	8468467	ReturnStatement	return code ;	370:8:12521:12532	8468224	1	True				
ANR	8468468	Identifier	code		8468224	0					
ANR	8468469	ExpressionStatement	"code = param_end_write_dict ( ( gs_param_list * ) plist , key , & dict )"	372:4:12539:12602	8468224	17	True				
ANR	8468470	AssignmentExpression	"code = param_end_write_dict ( ( gs_param_list * ) plist , key , & dict )"		8468224	0		=			
ANR	8468471	Identifier	code		8468224	0					
ANR	8468472	CallExpression	"param_end_write_dict ( ( gs_param_list * ) plist , key , & dict )"		8468224	1					
ANR	8468473	Callee	param_end_write_dict		8468224	0					
ANR	8468474	Identifier	param_end_write_dict		8468224	0					
ANR	8468475	ArgumentList	( gs_param_list * ) plist		8468224	1					
ANR	8468476	Argument	( gs_param_list * ) plist		8468224	0					
ANR	8468477	CastExpression	( gs_param_list * ) plist		8468224	0					
ANR	8468478	CastTarget	gs_param_list *		8468224	0					
ANR	8468479	Identifier	plist		8468224	1					
ANR	8468480	Argument	key		8468224	1					
ANR	8468481	Identifier	key		8468224	0					
ANR	8468482	Argument	& dict		8468224	2					
ANR	8468483	UnaryOperationExpression	& dict		8468224	0					
ANR	8468484	UnaryOperator	&		8468224	0					
ANR	8468485	Identifier	dict		8468224	1					
ANR	8468486	ReturnStatement	return code ;	373:4:12608:12619	8468224	18	True				
ANR	8468487	Identifier	code		8468224	0					
ANR	8468488	ReturnType	static int		8468224	1					
ANR	8468489	Identifier	pjl_dist_process_dict		8468224	2					
ANR	8468490	ParameterList	"gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p"		8468224	3					
ANR	8468491	Parameter	gs_memory_t * mem	316:33:11203:11218	8468224	0	True				
ANR	8468492	ParameterType	gs_memory_t *		8468224	0					
ANR	8468493	Identifier	mem		8468224	1					
ANR	8468494	Parameter	gs_c_param_list * plist	316:51:11221:11242	8468224	1	True				
ANR	8468495	ParameterType	gs_c_param_list *		8468224	0					
ANR	8468496	Identifier	plist		8468224	1					
ANR	8468497	Parameter	gs_param_name key	316:75:11245:11261	8468224	2	True				
ANR	8468498	ParameterType	gs_param_name		8468224	0					
ANR	8468499	Identifier	key		8468224	1					
ANR	8468500	Parameter	char * * p	316:94:11264:11271	8468224	3	True				
ANR	8468501	ParameterType	char * *		8468224	0					
ANR	8468502	Identifier	p		8468224	1					
ANR	8468503	CFGEntryNode	ENTRY		8468224		True				
ANR	8468504	CFGExitNode	EXIT		8468224		True				
ANR	8468505	Symbol	p1		8468224						
ANR	8468506	Symbol	code		8468224						
ANR	8468507	Symbol	* p1		8468224						
ANR	8468508	Symbol	count_tokens		8468224						
ANR	8468509	Symbol	start		8468224						
ANR	8468510	Symbol	* p1 ++		8468224						
ANR	8468511	Symbol	false		8468224						
ANR	8468512	Symbol	dict . list		8468224						
ANR	8468513	Symbol	& p1		8468224						
ANR	8468514	Symbol	nested		8468224						
ANR	8468515	Symbol	dict . size		8468224						
ANR	8468516	Symbol	p		8468224						
ANR	8468517	Symbol	plist		8468224						
ANR	8468518	Symbol	mem		8468224						
ANR	8468519	Symbol	* ( p1 + 1 )		8468224						
ANR	8468520	Symbol	pjl_dist_add_tokens_to_list		8468224						
ANR	8468521	Symbol	dict		8468224						
ANR	8468522	Symbol	tokens		8468224						
ANR	8468523	Symbol	* p		8468224						
ANR	8468524	Symbol	& dict		8468224						
ANR	8468525	Symbol	param_end_write_dict		8468224						
ANR	8468526	Symbol	key		8468224						
ANR	8468527	Symbol	param_begin_write_dict		8468224						
ANR	8468528	Function	pjl_dist_process_dict_or_hexstring	376:0:12624:13849							
ANR	8468529	FunctionDef	"pjl_dist_process_dict_or_hexstring (gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p)"		8468528	0					
ANR	8468530	CompoundStatement		377:0:12741:13849	8468528	0					
ANR	8468531	IdentifierDeclStatement	"char * p1 = * p , * src , * dest , data ;"	378:4:12747:12779	8468528	0	True				
ANR	8468532	IdentifierDecl	* p1 = * p		8468528	0					
ANR	8468533	IdentifierDeclType	char *		8468528	0					
ANR	8468534	Identifier	p1		8468528	1					
ANR	8468535	AssignmentExpression	* p1 = * p		8468528	2		=			
ANR	8468536	Identifier	p1		8468528	0					
ANR	8468537	UnaryOperationExpression	* p		8468528	1					
ANR	8468538	UnaryOperator	*		8468528	0					
ANR	8468539	Identifier	p		8468528	1					
ANR	8468540	IdentifierDecl	* src		8468528	1					
ANR	8468541	IdentifierDeclType	char *		8468528	0					
ANR	8468542	Identifier	src		8468528	1					
ANR	8468543	IdentifierDecl	* dest		8468528	2					
ANR	8468544	IdentifierDeclType	char *		8468528	0					
ANR	8468545	Identifier	dest		8468528	1					
ANR	8468546	IdentifierDecl	data		8468528	3					
ANR	8468547	IdentifierDeclType	char		8468528	0					
ANR	8468548	Identifier	data		8468528	1					
ANR	8468549	IdentifierDeclStatement	int i ;	379:4:12785:12790	8468528	1	True				
ANR	8468550	IdentifierDecl	i		8468528	0					
ANR	8468551	IdentifierDeclType	int		8468528	0					
ANR	8468552	Identifier	i		8468528	1					
ANR	8468553	IdentifierDeclStatement	gs_param_string ps ;	380:4:12796:12814	8468528	2	True				
ANR	8468554	IdentifierDecl	ps		8468528	0					
ANR	8468555	IdentifierDeclType	gs_param_string		8468528	0					
ANR	8468556	Identifier	ps		8468528	1					
ANR	8468557	IfStatement	if ( p1 [ 1 ] == '<' )		8468528	3					
ANR	8468558	Condition	p1 [ 1 ] == '<'	382:8:12825:12836	8468528	0	True				
ANR	8468559	EqualityExpression	p1 [ 1 ] == '<'		8468528	0		==			
ANR	8468560	ArrayIndexing	p1 [ 1 ]		8468528	0					
ANR	8468561	Identifier	p1		8468528	0					
ANR	8468562	PrimaryExpression	1		8468528	1					
ANR	8468563	PrimaryExpression	'<'		8468528	1					
ANR	8468564	CompoundStatement		6:22:97:97	8468528	1					
ANR	8468565	ExpressionStatement	* p += 2	383:8:12849:12856	8468528	0	True				
ANR	8468566	AssignmentExpression	* p += 2		8468528	0		+=			
ANR	8468567	UnaryOperationExpression	* p		8468528	0					
ANR	8468568	UnaryOperator	*		8468528	0					
ANR	8468569	Identifier	p		8468528	1					
ANR	8468570	PrimaryExpression	2		8468528	1					
ANR	8468571	ReturnStatement	"return pjl_dist_process_dict ( mem , plist , key , p ) ;"	384:8:12866:12914	8468528	1	True				
ANR	8468572	CallExpression	"pjl_dist_process_dict ( mem , plist , key , p )"		8468528	0					
ANR	8468573	Callee	pjl_dist_process_dict		8468528	0					
ANR	8468574	Identifier	pjl_dist_process_dict		8468528	0					
ANR	8468575	ArgumentList	mem		8468528	1					
ANR	8468576	Argument	mem		8468528	0					
ANR	8468577	Identifier	mem		8468528	0					
ANR	8468578	Argument	plist		8468528	1					
ANR	8468579	Identifier	plist		8468528	0					
ANR	8468580	Argument	key		8468528	2					
ANR	8468581	Identifier	key		8468528	0					
ANR	8468582	Argument	p		8468528	3					
ANR	8468583	Identifier	p		8468528	0					
ANR	8468584	ExpressionStatement	src = dest = p1	387:4:12927:12942	8468528	4	True				
ANR	8468585	AssignmentExpression	src = dest = p1		8468528	0		=			
ANR	8468586	Identifier	src		8468528	0					
ANR	8468587	AssignmentExpression	dest = p1		8468528	1		=			
ANR	8468588	Identifier	dest		8468528	0					
ANR	8468589	Identifier	p1		8468528	1					
ANR	8468590	WhileStatement	while ( * src != 0x00 && * src != '>' )		8468528	5					
ANR	8468591	Condition	* src != 0x00 && * src != '>'	388:11:12955:12981	8468528	0	True				
ANR	8468592	AndExpression	* src != 0x00 && * src != '>'		8468528	0		&&			
ANR	8468593	EqualityExpression	* src != 0x00		8468528	0		!=			
ANR	8468594	UnaryOperationExpression	* src		8468528	0					
ANR	8468595	UnaryOperator	*		8468528	0					
ANR	8468596	Identifier	src		8468528	1					
ANR	8468597	PrimaryExpression	0x00		8468528	1					
ANR	8468598	EqualityExpression	* src != '>'		8468528	1		!=			
ANR	8468599	UnaryOperationExpression	* src		8468528	0					
ANR	8468600	UnaryOperator	*		8468528	0					
ANR	8468601	Identifier	src		8468528	1					
ANR	8468602	PrimaryExpression	'>'		8468528	1					
ANR	8468603	CompoundStatement		12:40:242:242	8468528	1					
ANR	8468604	ExpressionStatement	data = 0	389:8:12994:13002	8468528	0	True				
ANR	8468605	AssignmentExpression	data = 0		8468528	0		=			
ANR	8468606	Identifier	data		8468528	0					
ANR	8468607	PrimaryExpression	0		8468528	1					
ANR	8468608	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		8468528	1					
ANR	8468609	ForInit	i = 0 ;	390:13:13017:13020	8468528	0	True				
ANR	8468610	AssignmentExpression	i = 0		8468528	0		=			
ANR	8468611	Identifier	i		8468528	0					
ANR	8468612	PrimaryExpression	0		8468528	1					
ANR	8468613	Condition	i < 2	390:17:13021:13023	8468528	1	True				
ANR	8468614	RelationalExpression	i < 2		8468528	0		<			
ANR	8468615	Identifier	i		8468528	0					
ANR	8468616	PrimaryExpression	2		8468528	1					
ANR	8468617	PostIncDecOperationExpression	i ++	390:21:13025:13027	8468528	2	True				
ANR	8468618	Identifier	i		8468528	0					
ANR	8468619	IncDec	++		8468528	1					
ANR	8468620	CompoundStatement		14:26:288:288	8468528	3					
ANR	8468621	IfStatement	if ( * src >= '0' && * src <= '9' )		8468528	0					
ANR	8468622	Condition	* src >= '0' && * src <= '9'	391:15:13047:13072	8468528	0	True				
ANR	8468623	AndExpression	* src >= '0' && * src <= '9'		8468528	0		&&			
ANR	8468624	RelationalExpression	* src >= '0'		8468528	0		>=			
ANR	8468625	UnaryOperationExpression	* src		8468528	0					
ANR	8468626	UnaryOperator	*		8468528	0					
ANR	8468627	Identifier	src		8468528	1					
ANR	8468628	PrimaryExpression	'0'		8468528	1					
ANR	8468629	RelationalExpression	* src <= '9'		8468528	1		<=			
ANR	8468630	UnaryOperationExpression	* src		8468528	0					
ANR	8468631	UnaryOperator	*		8468528	0					
ANR	8468632	Identifier	src		8468528	1					
ANR	8468633	PrimaryExpression	'9'		8468528	1					
ANR	8468634	CompoundStatement		15:43:333:333	8468528	1					
ANR	8468635	ExpressionStatement	data = ( data << 4 )	392:16:13093:13111	8468528	0	True				
ANR	8468636	AssignmentExpression	data = ( data << 4 )		8468528	0		=			
ANR	8468637	Identifier	data		8468528	0					
ANR	8468638	ShiftExpression	data << 4		8468528	1		<<			
ANR	8468639	Identifier	data		8468528	0					
ANR	8468640	PrimaryExpression	4		8468528	1					
ANR	8468641	ExpressionStatement	data += ( * src - '0' )	393:16:13129:13149	8468528	1	True				
ANR	8468642	AssignmentExpression	data += ( * src - '0' )		8468528	0		+=			
ANR	8468643	Identifier	data		8468528	0					
ANR	8468644	AdditiveExpression	* src - '0'		8468528	1		-			
ANR	8468645	UnaryOperationExpression	* src		8468528	0					
ANR	8468646	UnaryOperator	*		8468528	0					
ANR	8468647	Identifier	src		8468528	1					
ANR	8468648	PrimaryExpression	'0'		8468528	1					
ANR	8468649	ElseStatement	else		8468528	0					
ANR	8468650	CompoundStatement		18:19:428:428	8468528	0					
ANR	8468651	IfStatement	if ( * src >= 'A' && * src <= 'F' )		8468528	0					
ANR	8468652	Condition	* src >= 'A' && * src <= 'F'	395:20:13192:13217	8468528	0	True				
ANR	8468653	AndExpression	* src >= 'A' && * src <= 'F'		8468528	0		&&			
ANR	8468654	RelationalExpression	* src >= 'A'		8468528	0		>=			
ANR	8468655	UnaryOperationExpression	* src		8468528	0					
ANR	8468656	UnaryOperator	*		8468528	0					
ANR	8468657	Identifier	src		8468528	1					
ANR	8468658	PrimaryExpression	'A'		8468528	1					
ANR	8468659	RelationalExpression	* src <= 'F'		8468528	1		<=			
ANR	8468660	UnaryOperationExpression	* src		8468528	0					
ANR	8468661	UnaryOperator	*		8468528	0					
ANR	8468662	Identifier	src		8468528	1					
ANR	8468663	PrimaryExpression	'F'		8468528	1					
ANR	8468664	CompoundStatement		19:48:478:478	8468528	1					
ANR	8468665	ExpressionStatement	data = ( data << 4 )	396:20:13242:13260	8468528	0	True				
ANR	8468666	AssignmentExpression	data = ( data << 4 )		8468528	0		=			
ANR	8468667	Identifier	data		8468528	0					
ANR	8468668	ShiftExpression	data << 4		8468528	1		<<			
ANR	8468669	Identifier	data		8468528	0					
ANR	8468670	PrimaryExpression	4		8468528	1					
ANR	8468671	ExpressionStatement	data += ( * src - 'A' + 10 )	397:20:13282:13307	8468528	1	True				
ANR	8468672	AssignmentExpression	data += ( * src - 'A' + 10 )		8468528	0		+=			
ANR	8468673	Identifier	data		8468528	0					
ANR	8468674	AdditiveExpression	* src - 'A' + 10		8468528	1		-			
ANR	8468675	UnaryOperationExpression	* src		8468528	0					
ANR	8468676	UnaryOperator	*		8468528	0					
ANR	8468677	Identifier	src		8468528	1					
ANR	8468678	AdditiveExpression	'A' + 10		8468528	1		+			
ANR	8468679	PrimaryExpression	'A'		8468528	0					
ANR	8468680	PrimaryExpression	10		8468528	1					
ANR	8468681	ElseStatement	else		8468528	0					
ANR	8468682	CompoundStatement		22:23:590:590	8468528	0					
ANR	8468683	IfStatement	if ( * src >= 'a' && * src <= 'f' )		8468528	0					
ANR	8468684	Condition	* src >= 'a' && * src <= 'f'	399:24:13358:13383	8468528	0	True				
ANR	8468685	AndExpression	* src >= 'a' && * src <= 'f'		8468528	0		&&			
ANR	8468686	RelationalExpression	* src >= 'a'		8468528	0		>=			
ANR	8468687	UnaryOperationExpression	* src		8468528	0					
ANR	8468688	UnaryOperator	*		8468528	0					
ANR	8468689	Identifier	src		8468528	1					
ANR	8468690	PrimaryExpression	'a'		8468528	1					
ANR	8468691	RelationalExpression	* src <= 'f'		8468528	1		<=			
ANR	8468692	UnaryOperationExpression	* src		8468528	0					
ANR	8468693	UnaryOperator	*		8468528	0					
ANR	8468694	Identifier	src		8468528	1					
ANR	8468695	PrimaryExpression	'f'		8468528	1					
ANR	8468696	CompoundStatement		23:52:644:644	8468528	1					
ANR	8468697	ExpressionStatement	data = ( data << 4 )	400:24:13412:13430	8468528	0	True				
ANR	8468698	AssignmentExpression	data = ( data << 4 )		8468528	0		=			
ANR	8468699	Identifier	data		8468528	0					
ANR	8468700	ShiftExpression	data << 4		8468528	1		<<			
ANR	8468701	Identifier	data		8468528	0					
ANR	8468702	PrimaryExpression	4		8468528	1					
ANR	8468703	ExpressionStatement	data += ( * src - 'a' + 10 )	401:24:13456:13481	8468528	1	True				
ANR	8468704	AssignmentExpression	data += ( * src - 'a' + 10 )		8468528	0		+=			
ANR	8468705	Identifier	data		8468528	0					
ANR	8468706	AdditiveExpression	* src - 'a' + 10		8468528	1		-			
ANR	8468707	UnaryOperationExpression	* src		8468528	0					
ANR	8468708	UnaryOperator	*		8468528	0					
ANR	8468709	Identifier	src		8468528	1					
ANR	8468710	AdditiveExpression	'a' + 10		8468528	1		+			
ANR	8468711	PrimaryExpression	'a'		8468528	0					
ANR	8468712	PrimaryExpression	10		8468528	1					
ANR	8468713	ElseStatement	else		8468528	0					
ANR	8468714	CompoundStatement		26:27:768:768	8468528	0					
ANR	8468715	ReturnStatement	return - 1 ;	403:24:13536:13545	8468528	0	True				
ANR	8468716	UnaryOperationExpression	- 1		8468528	0					
ANR	8468717	UnaryOperator	-		8468528	0					
ANR	8468718	PrimaryExpression	1		8468528	1					
ANR	8468719	ExpressionStatement	src ++	407:12:13613:13618	8468528	1	True				
ANR	8468720	PostIncDecOperationExpression	src ++		8468528	0					
ANR	8468721	Identifier	src		8468528	0					
ANR	8468722	IncDec	++		8468528	1					
ANR	8468723	ExpressionStatement	* dest ++ = data	409:8:13638:13652	8468528	2	True				
ANR	8468724	AssignmentExpression	* dest ++ = data		8468528	0		=			
ANR	8468725	UnaryOperationExpression	* dest ++		8468528	0					
ANR	8468726	UnaryOperator	*		8468528	0					
ANR	8468727	PostIncDecOperationExpression	dest ++		8468528	1					
ANR	8468728	Identifier	dest		8468528	0					
ANR	8468729	IncDec	++		8468528	1					
ANR	8468730	Identifier	data		8468528	1					
ANR	8468731	ExpressionStatement	* dest = 0x00	411:4:13664:13676	8468528	6	True				
ANR	8468732	AssignmentExpression	* dest = 0x00		8468528	0		=			
ANR	8468733	UnaryOperationExpression	* dest		8468528	0					
ANR	8468734	UnaryOperator	*		8468528	0					
ANR	8468735	Identifier	dest		8468528	1					
ANR	8468736	PrimaryExpression	0x00		8468528	1					
ANR	8468737	ExpressionStatement	* p = dest + 1	413:4:13683:13696	8468528	7	True				
ANR	8468738	AssignmentExpression	* p = dest + 1		8468528	0		=			
ANR	8468739	UnaryOperationExpression	* p		8468528	0					
ANR	8468740	UnaryOperator	*		8468528	0					
ANR	8468741	Identifier	p		8468528	1					
ANR	8468742	AdditiveExpression	dest + 1		8468528	1		+			
ANR	8468743	Identifier	dest		8468528	0					
ANR	8468744	PrimaryExpression	1		8468528	1					
ANR	8468745	ExpressionStatement	ps . data = ( const byte * ) p1	415:4:13703:13729	8468528	8	True				
ANR	8468746	AssignmentExpression	ps . data = ( const byte * ) p1		8468528	0		=			
ANR	8468747	MemberAccess	ps . data		8468528	0					
ANR	8468748	Identifier	ps		8468528	0					
ANR	8468749	Identifier	data		8468528	1					
ANR	8468750	CastExpression	( const byte * ) p1		8468528	1					
ANR	8468751	CastTarget	const byte *		8468528	0					
ANR	8468752	Identifier	p1		8468528	1					
ANR	8468753	ExpressionStatement	ps . size = strlen ( p1 )	416:4:13735:13755	8468528	9	True				
ANR	8468754	AssignmentExpression	ps . size = strlen ( p1 )		8468528	0		=			
ANR	8468755	MemberAccess	ps . size		8468528	0					
ANR	8468756	Identifier	ps		8468528	0					
ANR	8468757	Identifier	size		8468528	1					
ANR	8468758	CallExpression	strlen ( p1 )		8468528	1					
ANR	8468759	Callee	strlen		8468528	0					
ANR	8468760	Identifier	strlen		8468528	0					
ANR	8468761	ArgumentList	p1		8468528	1					
ANR	8468762	Argument	p1		8468528	0					
ANR	8468763	Identifier	p1		8468528	0					
ANR	8468764	ExpressionStatement	ps . persistent = false	417:4:13761:13782	8468528	10	True				
ANR	8468765	AssignmentExpression	ps . persistent = false		8468528	0		=			
ANR	8468766	MemberAccess	ps . persistent		8468528	0					
ANR	8468767	Identifier	ps		8468528	0					
ANR	8468768	Identifier	persistent		8468528	1					
ANR	8468769	Identifier	false		8468528	1					
ANR	8468770	ReturnStatement	"return param_write_string ( ( gs_param_list * ) plist , key , & ps ) ;"	418:4:13788:13847	8468528	11	True				
ANR	8468771	CallExpression	"param_write_string ( ( gs_param_list * ) plist , key , & ps )"		8468528	0					
ANR	8468772	Callee	param_write_string		8468528	0					
ANR	8468773	Identifier	param_write_string		8468528	0					
ANR	8468774	ArgumentList	( gs_param_list * ) plist		8468528	1					
ANR	8468775	Argument	( gs_param_list * ) plist		8468528	0					
ANR	8468776	CastExpression	( gs_param_list * ) plist		8468528	0					
ANR	8468777	CastTarget	gs_param_list *		8468528	0					
ANR	8468778	Identifier	plist		8468528	1					
ANR	8468779	Argument	key		8468528	1					
ANR	8468780	Identifier	key		8468528	0					
ANR	8468781	Argument	& ps		8468528	2					
ANR	8468782	UnaryOperationExpression	& ps		8468528	0					
ANR	8468783	UnaryOperator	&		8468528	0					
ANR	8468784	Identifier	ps		8468528	1					
ANR	8468785	ReturnType	static int		8468528	1					
ANR	8468786	Identifier	pjl_dist_process_dict_or_hexstring		8468528	2					
ANR	8468787	ParameterList	"gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p"		8468528	3					
ANR	8468788	Parameter	gs_memory_t * mem	376:46:12670:12685	8468528	0	True				
ANR	8468789	ParameterType	gs_memory_t *		8468528	0					
ANR	8468790	Identifier	mem		8468528	1					
ANR	8468791	Parameter	gs_c_param_list * plist	376:64:12688:12709	8468528	1	True				
ANR	8468792	ParameterType	gs_c_param_list *		8468528	0					
ANR	8468793	Identifier	plist		8468528	1					
ANR	8468794	Parameter	gs_param_name key	376:88:12712:12728	8468528	2	True				
ANR	8468795	ParameterType	gs_param_name		8468528	0					
ANR	8468796	Identifier	key		8468528	1					
ANR	8468797	Parameter	char * * p	376:107:12731:12738	8468528	3	True				
ANR	8468798	ParameterType	char * *		8468528	0					
ANR	8468799	Identifier	p		8468528	1					
ANR	8468800	CFGEntryNode	ENTRY		8468528		True				
ANR	8468801	CFGExitNode	EXIT		8468528		True				
ANR	8468802	Symbol	p1		8468528						
ANR	8468803	Symbol	ps		8468528						
ANR	8468804	Symbol	data		8468528						
ANR	8468805	Symbol	* p1		8468528						
ANR	8468806	Symbol	src		8468528						
ANR	8468807	Symbol	* dest		8468528						
ANR	8468808	Symbol	ps . size		8468528						
ANR	8468809	Symbol	ps . persistent		8468528						
ANR	8468810	Symbol	false		8468528						
ANR	8468811	Symbol	i		8468528						
ANR	8468812	Symbol	pjl_dist_process_dict		8468528						
ANR	8468813	Symbol	dest		8468528						
ANR	8468814	Symbol	& ps		8468528						
ANR	8468815	Symbol	* src		8468528						
ANR	8468816	Symbol	p		8468528						
ANR	8468817	Symbol	strlen		8468528						
ANR	8468818	Symbol	plist		8468528						
ANR	8468819	Symbol	mem		8468528						
ANR	8468820	Symbol	ps . data		8468528						
ANR	8468821	Symbol	* p		8468528						
ANR	8468822	Symbol	* dest ++		8468528						
ANR	8468823	Symbol	param_write_string		8468528						
ANR	8468824	Symbol	key		8468528						
ANR	8468825	Function	pjl_dist_process_name	421:0:13852:14406							
ANR	8468826	FunctionDef	"pjl_dist_process_name (gs_memory_t * mem , gs_c_param_list * plist , gs_param_name * key , char * * p)"		8468825	0					
ANR	8468827	CompoundStatement		422:0:13957:14406	8468825	0					
ANR	8468828	IdentifierDeclStatement	char * start = * p + 1 ;	423:4:13963:13983	8468825	0	True				
ANR	8468829	IdentifierDecl	* start = * p + 1		8468825	0					
ANR	8468830	IdentifierDeclType	char *		8468825	0					
ANR	8468831	Identifier	start		8468825	1					
ANR	8468832	AssignmentExpression	* start = * p + 1		8468825	2		=			
ANR	8468833	Identifier	start		8468825	0					
ANR	8468834	AdditiveExpression	* p + 1		8468825	1		+			
ANR	8468835	UnaryOperationExpression	* p		8468825	0					
ANR	8468836	UnaryOperator	*		8468825	0					
ANR	8468837	Identifier	p		8468825	1					
ANR	8468838	PrimaryExpression	1		8468825	1					
ANR	8468839	IdentifierDeclStatement	gs_param_string ps ;	424:4:13989:14007	8468825	1	True				
ANR	8468840	IdentifierDecl	ps		8468825	0					
ANR	8468841	IdentifierDeclType	gs_param_string		8468825	0					
ANR	8468842	Identifier	ps		8468825	1					
ANR	8468843	WhileStatement	while ( * * p != ' ' && * * p != 0x00 )		8468825	2					
ANR	8468844	Condition	* * p != ' ' && * * p != 0x00	426:11:14021:14045	8468825	0	True				
ANR	8468845	AndExpression	* * p != ' ' && * * p != 0x00		8468825	0		&&			
ANR	8468846	EqualityExpression	* * p != ' '		8468825	0		!=			
ANR	8468847	UnaryOperationExpression	* * p		8468825	0					
ANR	8468848	UnaryOperator	*		8468825	0					
ANR	8468849	UnaryOperationExpression	* p		8468825	1					
ANR	8468850	UnaryOperator	*		8468825	0					
ANR	8468851	Identifier	p		8468825	1					
ANR	8468852	PrimaryExpression	' '		8468825	1					
ANR	8468853	EqualityExpression	* * p != 0x00		8468825	1		!=			
ANR	8468854	UnaryOperationExpression	* * p		8468825	0					
ANR	8468855	UnaryOperator	*		8468825	0					
ANR	8468856	UnaryOperationExpression	* p		8468825	1					
ANR	8468857	UnaryOperator	*		8468825	0					
ANR	8468858	Identifier	p		8468825	1					
ANR	8468859	PrimaryExpression	0x00		8468825	1					
ANR	8468860	ExpressionStatement	( * p ) ++	427:8:14056:14062	8468825	1	True				
ANR	8468861	PostIncDecOperationExpression	( * p ) ++		8468825	0					
ANR	8468862	UnaryOperationExpression	* p		8468825	0					
ANR	8468863	UnaryOperator	*		8468825	0					
ANR	8468864	Identifier	p		8468825	1					
ANR	8468865	IncDec	++		8468825	1					
ANR	8468866	IfStatement	if ( * * p != 0x00 )		8468825	3					
ANR	8468867	Condition	* * p != 0x00	429:8:14073:14083	8468825	0	True				
ANR	8468868	EqualityExpression	* * p != 0x00		8468825	0		!=			
ANR	8468869	UnaryOperationExpression	* * p		8468825	0					
ANR	8468870	UnaryOperator	*		8468825	0					
ANR	8468871	UnaryOperationExpression	* p		8468825	1					
ANR	8468872	UnaryOperator	*		8468825	0					
ANR	8468873	Identifier	p		8468825	1					
ANR	8468874	PrimaryExpression	0x00		8468825	1					
ANR	8468875	CompoundStatement		8:21:128:128	8468825	1					
ANR	8468876	ExpressionStatement	* * p = 0x00	430:8:14096:14106	8468825	0	True				
ANR	8468877	AssignmentExpression	* * p = 0x00		8468825	0		=			
ANR	8468878	UnaryOperationExpression	* * p		8468825	0					
ANR	8468879	UnaryOperator	*		8468825	0					
ANR	8468880	UnaryOperationExpression	* p		8468825	1					
ANR	8468881	UnaryOperator	*		8468825	0					
ANR	8468882	Identifier	p		8468825	1					
ANR	8468883	PrimaryExpression	0x00		8468825	1					
ANR	8468884	ExpressionStatement	( * p ) ++	431:8:14116:14122	8468825	1	True				
ANR	8468885	PostIncDecOperationExpression	( * p ) ++		8468825	0					
ANR	8468886	UnaryOperationExpression	* p		8468825	0					
ANR	8468887	UnaryOperator	*		8468825	0					
ANR	8468888	Identifier	p		8468825	1					
ANR	8468889	IncDec	++		8468825	1					
ANR	8468890	IfStatement	if ( * key == NULL )		8468825	4					
ANR	8468891	Condition	* key == NULL	434:8:14139:14150	8468825	0	True				
ANR	8468892	EqualityExpression	* key == NULL		8468825	0		==			
ANR	8468893	UnaryOperationExpression	* key		8468825	0					
ANR	8468894	UnaryOperator	*		8468825	0					
ANR	8468895	Identifier	key		8468825	1					
ANR	8468896	Identifier	NULL		8468825	1					
ANR	8468897	ExpressionStatement	* key = ( gs_param_name ) start	435:8:14161:14188	8468825	1	True				
ANR	8468898	AssignmentExpression	* key = ( gs_param_name ) start		8468825	0		=			
ANR	8468899	UnaryOperationExpression	* key		8468825	0					
ANR	8468900	UnaryOperator	*		8468825	0					
ANR	8468901	Identifier	key		8468825	1					
ANR	8468902	CastExpression	( gs_param_name ) start		8468825	1					
ANR	8468903	CastTarget	gs_param_name		8468825	0					
ANR	8468904	Identifier	start		8468825	1					
ANR	8468905	ElseStatement	else		8468825	0					
ANR	8468906	CompoundStatement		15:9:241:241	8468825	0					
ANR	8468907	ExpressionStatement	ps . data = ( const byte * ) start	437:8:14209:14238	8468825	0	True				
ANR	8468908	AssignmentExpression	ps . data = ( const byte * ) start		8468825	0		=			
ANR	8468909	MemberAccess	ps . data		8468825	0					
ANR	8468910	Identifier	ps		8468825	0					
ANR	8468911	Identifier	data		8468825	1					
ANR	8468912	CastExpression	( const byte * ) start		8468825	1					
ANR	8468913	CastTarget	const byte *		8468825	0					
ANR	8468914	Identifier	start		8468825	1					
ANR	8468915	ExpressionStatement	ps . size = strlen ( start )	438:8:14248:14271	8468825	1	True				
ANR	8468916	AssignmentExpression	ps . size = strlen ( start )		8468825	0		=			
ANR	8468917	MemberAccess	ps . size		8468825	0					
ANR	8468918	Identifier	ps		8468825	0					
ANR	8468919	Identifier	size		8468825	1					
ANR	8468920	CallExpression	strlen ( start )		8468825	1					
ANR	8468921	Callee	strlen		8468825	0					
ANR	8468922	Identifier	strlen		8468825	0					
ANR	8468923	ArgumentList	start		8468825	1					
ANR	8468924	Argument	start		8468825	0					
ANR	8468925	Identifier	start		8468825	0					
ANR	8468926	ExpressionStatement	ps . persistent = false	439:8:14281:14302	8468825	2	True				
ANR	8468927	AssignmentExpression	ps . persistent = false		8468825	0		=			
ANR	8468928	MemberAccess	ps . persistent		8468825	0					
ANR	8468929	Identifier	ps		8468825	0					
ANR	8468930	Identifier	persistent		8468825	1					
ANR	8468931	Identifier	false		8468825	1					
ANR	8468932	ExpressionStatement	"param_write_name ( ( gs_param_list * ) plist , * key , & ps )"	440:8:14312:14363	8468825	3	True				
ANR	8468933	CallExpression	"param_write_name ( ( gs_param_list * ) plist , * key , & ps )"		8468825	0					
ANR	8468934	Callee	param_write_name		8468825	0					
ANR	8468935	Identifier	param_write_name		8468825	0					
ANR	8468936	ArgumentList	( gs_param_list * ) plist		8468825	1					
ANR	8468937	Argument	( gs_param_list * ) plist		8468825	0					
ANR	8468938	CastExpression	( gs_param_list * ) plist		8468825	0					
ANR	8468939	CastTarget	gs_param_list *		8468825	0					
ANR	8468940	Identifier	plist		8468825	1					
ANR	8468941	Argument	* key		8468825	1					
ANR	8468942	UnaryOperationExpression	* key		8468825	0					
ANR	8468943	UnaryOperator	*		8468825	0					
ANR	8468944	Identifier	key		8468825	1					
ANR	8468945	Argument	& ps		8468825	2					
ANR	8468946	UnaryOperationExpression	& ps		8468825	0					
ANR	8468947	UnaryOperator	&		8468825	0					
ANR	8468948	Identifier	ps		8468825	1					
ANR	8468949	ExpressionStatement	* key = NULL	441:8:14373:14384	8468825	4	True				
ANR	8468950	AssignmentExpression	* key = NULL		8468825	0		=			
ANR	8468951	UnaryOperationExpression	* key		8468825	0					
ANR	8468952	UnaryOperator	*		8468825	0					
ANR	8468953	Identifier	key		8468825	1					
ANR	8468954	Identifier	NULL		8468825	1					
ANR	8468955	ReturnStatement	return 0 ;	443:4:14396:14404	8468825	5	True				
ANR	8468956	PrimaryExpression	0		8468825	0					
ANR	8468957	ReturnType	static int		8468825	1					
ANR	8468958	Identifier	pjl_dist_process_name		8468825	2					
ANR	8468959	ParameterList	"gs_memory_t * mem , gs_c_param_list * plist , gs_param_name * key , char * * p"		8468825	3					
ANR	8468960	Parameter	gs_memory_t * mem	421:33:13885:13900	8468825	0	True				
ANR	8468961	ParameterType	gs_memory_t *		8468825	0					
ANR	8468962	Identifier	mem		8468825	1					
ANR	8468963	Parameter	gs_c_param_list * plist	421:51:13903:13924	8468825	1	True				
ANR	8468964	ParameterType	gs_c_param_list *		8468825	0					
ANR	8468965	Identifier	plist		8468825	1					
ANR	8468966	Parameter	gs_param_name * key	421:75:13927:13944	8468825	2	True				
ANR	8468967	ParameterType	gs_param_name *		8468825	0					
ANR	8468968	Identifier	key		8468825	1					
ANR	8468969	Parameter	char * * p	421:95:13947:13954	8468825	3	True				
ANR	8468970	ParameterType	char * *		8468825	0					
ANR	8468971	Identifier	p		8468825	1					
ANR	8468972	CFGEntryNode	ENTRY		8468825		True				
ANR	8468973	CFGExitNode	EXIT		8468825		True				
ANR	8468974	Symbol	ps		8468825						
ANR	8468975	Symbol	NULL		8468825						
ANR	8468976	Symbol	ps . size		8468825						
ANR	8468977	Symbol	start		8468825						
ANR	8468978	Symbol	ps . persistent		8468825						
ANR	8468979	Symbol	false		8468825						
ANR	8468980	Symbol	* key		8468825						
ANR	8468981	Symbol	& ps		8468825						
ANR	8468982	Symbol	p		8468825						
ANR	8468983	Symbol	strlen		8468825						
ANR	8468984	Symbol	plist		8468825						
ANR	8468985	Symbol	mem		8468825						
ANR	8468986	Symbol	ps . data		8468825						
ANR	8468987	Symbol	* p		8468825						
ANR	8468988	Symbol	* * p		8468825						
ANR	8468989	Symbol	key		8468825						
ANR	8468990	Function	pjl_dist_process_string	446:0:14409:14847							
ANR	8468991	FunctionDef	"pjl_dist_process_string (gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p)"		8468990	0					
ANR	8468992	CompoundStatement		447:0:14515:14847	8468990	0					
ANR	8468993	IdentifierDeclStatement	char * start = * p + 1 ;	448:4:14521:14541	8468990	0	True				
ANR	8468994	IdentifierDecl	* start = * p + 1		8468990	0					
ANR	8468995	IdentifierDeclType	char *		8468990	0					
ANR	8468996	Identifier	start		8468990	1					
ANR	8468997	AssignmentExpression	* start = * p + 1		8468990	2		=			
ANR	8468998	Identifier	start		8468990	0					
ANR	8468999	AdditiveExpression	* p + 1		8468990	1		+			
ANR	8469000	UnaryOperationExpression	* p		8468990	0					
ANR	8469001	UnaryOperator	*		8468990	0					
ANR	8469002	Identifier	p		8468990	1					
ANR	8469003	PrimaryExpression	1		8468990	1					
ANR	8469004	IdentifierDeclStatement	gs_param_string ps ;	449:4:14547:14565	8468990	1	True				
ANR	8469005	IdentifierDecl	ps		8468990	0					
ANR	8469006	IdentifierDeclType	gs_param_string		8468990	0					
ANR	8469007	Identifier	ps		8468990	1					
ANR	8469008	WhileStatement	while ( * * p != ')' && * * p != 0x00 )		8468990	2					
ANR	8469009	Condition	* * p != ')' && * * p != 0x00	451:11:14579:14603	8468990	0	True				
ANR	8469010	AndExpression	* * p != ')' && * * p != 0x00		8468990	0		&&			
ANR	8469011	EqualityExpression	* * p != ')'		8468990	0		!=			
ANR	8469012	UnaryOperationExpression	* * p		8468990	0					
ANR	8469013	UnaryOperator	*		8468990	0					
ANR	8469014	UnaryOperationExpression	* p		8468990	1					
ANR	8469015	UnaryOperator	*		8468990	0					
ANR	8469016	Identifier	p		8468990	1					
ANR	8469017	PrimaryExpression	')'		8468990	1					
ANR	8469018	EqualityExpression	* * p != 0x00		8468990	1		!=			
ANR	8469019	UnaryOperationExpression	* * p		8468990	0					
ANR	8469020	UnaryOperator	*		8468990	0					
ANR	8469021	UnaryOperationExpression	* p		8468990	1					
ANR	8469022	UnaryOperator	*		8468990	0					
ANR	8469023	Identifier	p		8468990	1					
ANR	8469024	PrimaryExpression	0x00		8468990	1					
ANR	8469025	ExpressionStatement	( * p ) ++	452:8:14614:14620	8468990	1	True				
ANR	8469026	PostIncDecOperationExpression	( * p ) ++		8468990	0					
ANR	8469027	UnaryOperationExpression	* p		8468990	0					
ANR	8469028	UnaryOperator	*		8468990	0					
ANR	8469029	Identifier	p		8468990	1					
ANR	8469030	IncDec	++		8468990	1					
ANR	8469031	IfStatement	if ( * * p != ')' )		8468990	3					
ANR	8469032	Condition	* * p != ')'	454:8:14631:14640	8468990	0	True				
ANR	8469033	EqualityExpression	* * p != ')'		8468990	0		!=			
ANR	8469034	UnaryOperationExpression	* * p		8468990	0					
ANR	8469035	UnaryOperator	*		8468990	0					
ANR	8469036	UnaryOperationExpression	* p		8468990	1					
ANR	8469037	UnaryOperator	*		8468990	0					
ANR	8469038	Identifier	p		8468990	1					
ANR	8469039	PrimaryExpression	')'		8468990	1					
ANR	8469040	ReturnStatement	return - 1 ;	455:8:14651:14660	8468990	1	True				
ANR	8469041	UnaryOperationExpression	- 1		8468990	0					
ANR	8469042	UnaryOperator	-		8468990	0					
ANR	8469043	PrimaryExpression	1		8468990	1					
ANR	8469044	ExpressionStatement	* * p = 0x00	457:4:14667:14676	8468990	4	True				
ANR	8469045	AssignmentExpression	* * p = 0x00		8468990	0		=			
ANR	8469046	UnaryOperationExpression	* * p		8468990	0					
ANR	8469047	UnaryOperator	*		8468990	0					
ANR	8469048	UnaryOperationExpression	* p		8468990	1					
ANR	8469049	UnaryOperator	*		8468990	0					
ANR	8469050	Identifier	p		8468990	1					
ANR	8469051	PrimaryExpression	0x00		8468990	1					
ANR	8469052	ExpressionStatement	( * p ) ++	458:4:14682:14688	8468990	5	True				
ANR	8469053	PostIncDecOperationExpression	( * p ) ++		8468990	0					
ANR	8469054	UnaryOperationExpression	* p		8468990	0					
ANR	8469055	UnaryOperator	*		8468990	0					
ANR	8469056	Identifier	p		8468990	1					
ANR	8469057	IncDec	++		8468990	1					
ANR	8469058	ExpressionStatement	ps . data = ( const byte * ) start	460:4:14695:14724	8468990	6	True				
ANR	8469059	AssignmentExpression	ps . data = ( const byte * ) start		8468990	0		=			
ANR	8469060	MemberAccess	ps . data		8468990	0					
ANR	8469061	Identifier	ps		8468990	0					
ANR	8469062	Identifier	data		8468990	1					
ANR	8469063	CastExpression	( const byte * ) start		8468990	1					
ANR	8469064	CastTarget	const byte *		8468990	0					
ANR	8469065	Identifier	start		8468990	1					
ANR	8469066	ExpressionStatement	ps . size = strlen ( start )	461:4:14730:14753	8468990	7	True				
ANR	8469067	AssignmentExpression	ps . size = strlen ( start )		8468990	0		=			
ANR	8469068	MemberAccess	ps . size		8468990	0					
ANR	8469069	Identifier	ps		8468990	0					
ANR	8469070	Identifier	size		8468990	1					
ANR	8469071	CallExpression	strlen ( start )		8468990	1					
ANR	8469072	Callee	strlen		8468990	0					
ANR	8469073	Identifier	strlen		8468990	0					
ANR	8469074	ArgumentList	start		8468990	1					
ANR	8469075	Argument	start		8468990	0					
ANR	8469076	Identifier	start		8468990	0					
ANR	8469077	ExpressionStatement	ps . persistent = false	462:4:14759:14780	8468990	8	True				
ANR	8469078	AssignmentExpression	ps . persistent = false		8468990	0		=			
ANR	8469079	MemberAccess	ps . persistent		8468990	0					
ANR	8469080	Identifier	ps		8468990	0					
ANR	8469081	Identifier	persistent		8468990	1					
ANR	8469082	Identifier	false		8468990	1					
ANR	8469083	ReturnStatement	"return param_write_string ( ( gs_param_list * ) plist , key , & ps ) ;"	463:4:14786:14845	8468990	9	True				
ANR	8469084	CallExpression	"param_write_string ( ( gs_param_list * ) plist , key , & ps )"		8468990	0					
ANR	8469085	Callee	param_write_string		8468990	0					
ANR	8469086	Identifier	param_write_string		8468990	0					
ANR	8469087	ArgumentList	( gs_param_list * ) plist		8468990	1					
ANR	8469088	Argument	( gs_param_list * ) plist		8468990	0					
ANR	8469089	CastExpression	( gs_param_list * ) plist		8468990	0					
ANR	8469090	CastTarget	gs_param_list *		8468990	0					
ANR	8469091	Identifier	plist		8468990	1					
ANR	8469092	Argument	key		8468990	1					
ANR	8469093	Identifier	key		8468990	0					
ANR	8469094	Argument	& ps		8468990	2					
ANR	8469095	UnaryOperationExpression	& ps		8468990	0					
ANR	8469096	UnaryOperator	&		8468990	0					
ANR	8469097	Identifier	ps		8468990	1					
ANR	8469098	ReturnType	static int		8468990	1					
ANR	8469099	Identifier	pjl_dist_process_string		8468990	2					
ANR	8469100	ParameterList	"gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p"		8468990	3					
ANR	8469101	Parameter	gs_memory_t * mem	446:35:14444:14459	8468990	0	True				
ANR	8469102	ParameterType	gs_memory_t *		8468990	0					
ANR	8469103	Identifier	mem		8468990	1					
ANR	8469104	Parameter	gs_c_param_list * plist	446:53:14462:14483	8468990	1	True				
ANR	8469105	ParameterType	gs_c_param_list *		8468990	0					
ANR	8469106	Identifier	plist		8468990	1					
ANR	8469107	Parameter	gs_param_name key	446:77:14486:14502	8468990	2	True				
ANR	8469108	ParameterType	gs_param_name		8468990	0					
ANR	8469109	Identifier	key		8468990	1					
ANR	8469110	Parameter	char * * p	446:96:14505:14512	8468990	3	True				
ANR	8469111	ParameterType	char * *		8468990	0					
ANR	8469112	Identifier	p		8468990	1					
ANR	8469113	CFGEntryNode	ENTRY		8468990		True				
ANR	8469114	CFGExitNode	EXIT		8468990		True				
ANR	8469115	Symbol	ps		8468990						
ANR	8469116	Symbol	ps . size		8468990						
ANR	8469117	Symbol	start		8468990						
ANR	8469118	Symbol	ps . persistent		8468990						
ANR	8469119	Symbol	false		8468990						
ANR	8469120	Symbol	& ps		8468990						
ANR	8469121	Symbol	p		8468990						
ANR	8469122	Symbol	strlen		8468990						
ANR	8469123	Symbol	plist		8468990						
ANR	8469124	Symbol	mem		8468990						
ANR	8469125	Symbol	ps . data		8468990						
ANR	8469126	Symbol	* p		8468990						
ANR	8469127	Symbol	* * p		8468990						
ANR	8469128	Symbol	param_write_string		8468990						
ANR	8469129	Symbol	key		8468990						
ANR	8469130	Function	count_tokens	467:0:14917:17884							
ANR	8469131	FunctionDef	count_tokens (char * p)		8469130	0					
ANR	8469132	CompoundStatement		468:0:14950:17884	8469130	0					
ANR	8469133	IdentifierDeclStatement	int tokens = 0 ;	469:4:14956:14970	8469130	0	True				
ANR	8469134	IdentifierDecl	tokens = 0		8469130	0					
ANR	8469135	IdentifierDeclType	int		8469130	0					
ANR	8469136	Identifier	tokens		8469130	1					
ANR	8469137	AssignmentExpression	tokens = 0		8469130	2		=			
ANR	8469138	Identifier	tokens		8469130	0					
ANR	8469139	PrimaryExpression	0		8469130	1					
ANR	8469140	WhileStatement	while ( * p != 0x00 )		8469130	1					
ANR	8469141	Condition	* p != 0x00	471:11:14984:14993	8469130	0	True				
ANR	8469142	EqualityExpression	* p != 0x00		8469130	0		!=			
ANR	8469143	UnaryOperationExpression	* p		8469130	0					
ANR	8469144	UnaryOperator	*		8469130	0					
ANR	8469145	Identifier	p		8469130	1					
ANR	8469146	PrimaryExpression	0x00		8469130	1					
ANR	8469147	CompoundStatement		4:22:44:44	8469130	1					
ANR	8469148	SwitchStatement	switch ( * p )		8469130	0					
ANR	8469149	Condition	* p	472:16:15013:15014	8469130	0	True				
ANR	8469150	UnaryOperationExpression	* p		8469130	0					
ANR	8469151	UnaryOperator	*		8469130	0					
ANR	8469152	Identifier	p		8469130	1					
ANR	8469153	CompoundStatement		5:20:66:66	8469130	1					
ANR	8469154	Label	case ' ' :	473:12:15031:15039	8469130	0	True				
ANR	8469155	ExpressionStatement	p ++	474:16:15057:15060	8469130	1	True				
ANR	8469156	PostIncDecOperationExpression	p ++		8469130	0					
ANR	8469157	Identifier	p		8469130	0					
ANR	8469158	IncDec	++		8469130	1					
ANR	8469159	BreakStatement	break ;	475:16:15078:15083	8469130	2	True				
ANR	8469160	Label	case 'f' :	476:12:15097:15105	8469130	3	True				
ANR	8469161	IfStatement	"if ( strncmp ( p , ""false"" , 5 ) == 0 )"		8469130	4					
ANR	8469162	Condition	"strncmp ( p , ""false"" , 5 ) == 0"	477:20:15127:15153	8469130	0	True				
ANR	8469163	EqualityExpression	"strncmp ( p , ""false"" , 5 ) == 0"		8469130	0		==			
ANR	8469164	CallExpression	"strncmp ( p , ""false"" , 5 )"		8469130	0					
ANR	8469165	Callee	strncmp		8469130	0					
ANR	8469166	Identifier	strncmp		8469130	0					
ANR	8469167	ArgumentList	p		8469130	1					
ANR	8469168	Argument	p		8469130	0					
ANR	8469169	Identifier	p		8469130	0					
ANR	8469170	Argument	"""false"""		8469130	1					
ANR	8469171	PrimaryExpression	"""false"""		8469130	0					
ANR	8469172	Argument	5		8469130	2					
ANR	8469173	PrimaryExpression	5		8469130	0					
ANR	8469174	PrimaryExpression	0		8469130	1					
ANR	8469175	CompoundStatement		10:49:205:205	8469130	1					
ANR	8469176	ExpressionStatement	p += 5	478:20:15178:15184	8469130	0	True				
ANR	8469177	AssignmentExpression	p += 5		8469130	0		+=			
ANR	8469178	Identifier	p		8469130	0					
ANR	8469179	PrimaryExpression	5		8469130	1					
ANR	8469180	ExpressionStatement	tokens ++	479:20:15206:15214	8469130	1	True				
ANR	8469181	PostIncDecOperationExpression	tokens ++		8469130	0					
ANR	8469182	Identifier	tokens		8469130	0					
ANR	8469183	IncDec	++		8469130	1					
ANR	8469184	ElseStatement	else		8469130	0					
ANR	8469185	CompoundStatement		13:23:288:288	8469130	0					
ANR	8469186	ReturnStatement	return - 1 ;	481:20:15261:15270	8469130	0	True				
ANR	8469187	UnaryOperationExpression	- 1		8469130	0					
ANR	8469188	UnaryOperator	-		8469130	0					
ANR	8469189	PrimaryExpression	1		8469130	1					
ANR	8469190	BreakStatement	break ;	483:16:15306:15311	8469130	5	True				
ANR	8469191	Label	case 't' :	484:12:15325:15333	8469130	6	True				
ANR	8469192	IfStatement	"if ( strncmp ( p , ""true"" , 4 ) == 0 )"		8469130	7					
ANR	8469193	Condition	"strncmp ( p , ""true"" , 4 ) == 0"	485:20:15355:15380	8469130	0	True				
ANR	8469194	EqualityExpression	"strncmp ( p , ""true"" , 4 ) == 0"		8469130	0		==			
ANR	8469195	CallExpression	"strncmp ( p , ""true"" , 4 )"		8469130	0					
ANR	8469196	Callee	strncmp		8469130	0					
ANR	8469197	Identifier	strncmp		8469130	0					
ANR	8469198	ArgumentList	p		8469130	1					
ANR	8469199	Argument	p		8469130	0					
ANR	8469200	Identifier	p		8469130	0					
ANR	8469201	Argument	"""true"""		8469130	1					
ANR	8469202	PrimaryExpression	"""true"""		8469130	0					
ANR	8469203	Argument	4		8469130	2					
ANR	8469204	PrimaryExpression	4		8469130	0					
ANR	8469205	PrimaryExpression	0		8469130	1					
ANR	8469206	CompoundStatement		18:48:432:432	8469130	1					
ANR	8469207	ExpressionStatement	p += 4	486:20:15405:15411	8469130	0	True				
ANR	8469208	AssignmentExpression	p += 4		8469130	0		+=			
ANR	8469209	Identifier	p		8469130	0					
ANR	8469210	PrimaryExpression	4		8469130	1					
ANR	8469211	ExpressionStatement	tokens ++	487:20:15433:15441	8469130	1	True				
ANR	8469212	PostIncDecOperationExpression	tokens ++		8469130	0					
ANR	8469213	Identifier	tokens		8469130	0					
ANR	8469214	IncDec	++		8469130	1					
ANR	8469215	ElseStatement	else		8469130	0					
ANR	8469216	CompoundStatement		21:23:515:515	8469130	0					
ANR	8469217	ReturnStatement	return - 1 ;	489:20:15488:15497	8469130	0	True				
ANR	8469218	UnaryOperationExpression	- 1		8469130	0					
ANR	8469219	UnaryOperator	-		8469130	0					
ANR	8469220	PrimaryExpression	1		8469130	1					
ANR	8469221	BreakStatement	break ;	491:16:15533:15538	8469130	8	True				
ANR	8469222	Label	case '<' :	492:12:15552:15560	8469130	9	True				
ANR	8469223	IfStatement	if ( p [ 1 ] == '>' )		8469130	10					
ANR	8469224	Condition	p [ 1 ] == '>'	493:20:15582:15592	8469130	0	True				
ANR	8469225	EqualityExpression	p [ 1 ] == '>'		8469130	0		==			
ANR	8469226	ArrayIndexing	p [ 1 ]		8469130	0					
ANR	8469227	Identifier	p		8469130	0					
ANR	8469228	PrimaryExpression	1		8469130	1					
ANR	8469229	PrimaryExpression	'>'		8469130	1					
ANR	8469230	CompoundStatement		27:20:666:681	8469130	1					
ANR	8469231	IdentifierDeclStatement	int nesting = 0 ;	494:20:15617:15632	8469130	0	True				
ANR	8469232	IdentifierDecl	nesting = 0		8469130	0					
ANR	8469233	IdentifierDeclType	int		8469130	0					
ANR	8469234	Identifier	nesting		8469130	1					
ANR	8469235	AssignmentExpression	nesting = 0		8469130	2		=			
ANR	8469236	Identifier	nesting		8469130	0					
ANR	8469237	PrimaryExpression	0		8469130	1					
ANR	8469238	ExpressionStatement	p += 2	496:20:15655:15659	8469130	1	True				
ANR	8469239	AssignmentExpression	p += 2		8469130	0		+=			
ANR	8469240	Identifier	p		8469130	0					
ANR	8469241	PrimaryExpression	2		8469130	1					
ANR	8469242	WhileStatement	while ( * p != 0x00 )		8469130	2					
ANR	8469243	Condition	* p != 0x00	497:27:15688:15697	8469130	0	True				
ANR	8469244	EqualityExpression	* p != 0x00		8469130	0		!=			
ANR	8469245	UnaryOperationExpression	* p		8469130	0					
ANR	8469246	UnaryOperator	*		8469130	0					
ANR	8469247	Identifier	p		8469130	1					
ANR	8469248	PrimaryExpression	0x00		8469130	1					
ANR	8469249	CompoundStatement		30:39:749:749	8469130	1					
ANR	8469250	IfStatement	if ( * p == '>' && p [ 1 ] == '>' )		8469130	0					
ANR	8469251	Condition	* p == '>' && p [ 1 ] == '>'	498:28:15730:15753	8469130	0	True				
ANR	8469252	AndExpression	* p == '>' && p [ 1 ] == '>'		8469130	0		&&			
ANR	8469253	EqualityExpression	* p == '>'		8469130	0		==			
ANR	8469254	UnaryOperationExpression	* p		8469130	0					
ANR	8469255	UnaryOperator	*		8469130	0					
ANR	8469256	Identifier	p		8469130	1					
ANR	8469257	PrimaryExpression	'>'		8469130	1					
ANR	8469258	EqualityExpression	p [ 1 ] == '>'		8469130	1		==			
ANR	8469259	ArrayIndexing	p [ 1 ]		8469130	0					
ANR	8469260	Identifier	p		8469130	0					
ANR	8469261	PrimaryExpression	1		8469130	1					
ANR	8469262	PrimaryExpression	'>'		8469130	1					
ANR	8469263	CompoundStatement		31:54:805:805	8469130	1					
ANR	8469264	IfStatement	if ( nesting == 0 )		8469130	0					
ANR	8469265	Condition	nesting == 0	499:32:15790:15801	8469130	0	True				
ANR	8469266	EqualityExpression	nesting == 0		8469130	0		==			
ANR	8469267	Identifier	nesting		8469130	0					
ANR	8469268	PrimaryExpression	0		8469130	1					
ANR	8469269	CompoundStatement		32:46:853:853	8469130	1					
ANR	8469270	ExpressionStatement	p ++	500:32:15838:15841	8469130	0	True				
ANR	8469271	PostIncDecOperationExpression	p ++		8469130	0					
ANR	8469272	Identifier	p		8469130	0					
ANR	8469273	IncDec	++		8469130	1					
ANR	8469274	BreakStatement	break ;	501:32:15875:15880	8469130	1	True				
ANR	8469275	ExpressionStatement	p ++	503:28:15940:15943	8469130	1	True				
ANR	8469276	PostIncDecOperationExpression	p ++		8469130	0					
ANR	8469277	Identifier	p		8469130	0					
ANR	8469278	IncDec	++		8469130	1					
ANR	8469279	ElseStatement	else		8469130	0					
ANR	8469280	IfStatement	if ( * p == '<' && p [ 1 ] == '<' )		8469130	0					
ANR	8469281	Condition	* p == '<' && p [ 1 ] == '<'	505:32:16008:16031	8469130	0	True				
ANR	8469282	AndExpression	* p == '<' && p [ 1 ] == '<'		8469130	0		&&			
ANR	8469283	EqualityExpression	* p == '<'		8469130	0		==			
ANR	8469284	UnaryOperationExpression	* p		8469130	0					
ANR	8469285	UnaryOperator	*		8469130	0					
ANR	8469286	Identifier	p		8469130	1					
ANR	8469287	PrimaryExpression	'<'		8469130	1					
ANR	8469288	EqualityExpression	p [ 1 ] == '<'		8469130	1		==			
ANR	8469289	ArrayIndexing	p [ 1 ]		8469130	0					
ANR	8469290	Identifier	p		8469130	0					
ANR	8469291	PrimaryExpression	1		8469130	1					
ANR	8469292	PrimaryExpression	'<'		8469130	1					
ANR	8469293	CompoundStatement		38:58:1083:1083	8469130	1					
ANR	8469294	ExpressionStatement	p += 2	506:32:16068:16074	8469130	0	True				
ANR	8469295	AssignmentExpression	p += 2		8469130	0		+=			
ANR	8469296	Identifier	p		8469130	0					
ANR	8469297	PrimaryExpression	2		8469130	1					
ANR	8469298	ExpressionStatement	nesting ++	507:32:16108:16117	8469130	1	True				
ANR	8469299	PostIncDecOperationExpression	nesting ++		8469130	0					
ANR	8469300	Identifier	nesting		8469130	0					
ANR	8469301	IncDec	++		8469130	1					
ANR	8469302	ElseStatement	else		8469130	0					
ANR	8469303	ExpressionStatement	p ++	509:32:16186:16189	8469130	0	True				
ANR	8469304	PostIncDecOperationExpression	p ++		8469130	0					
ANR	8469305	Identifier	p		8469130	0					
ANR	8469306	IncDec	++		8469130	1					
ANR	8469307	IfStatement	if ( * p == 0x00 )		8469130	3					
ANR	8469308	Condition	* p == 0x00	511:24:16237:16246	8469130	0	True				
ANR	8469309	EqualityExpression	* p == 0x00		8469130	0		==			
ANR	8469310	UnaryOperationExpression	* p		8469130	0					
ANR	8469311	UnaryOperator	*		8469130	0					
ANR	8469312	Identifier	p		8469130	1					
ANR	8469313	PrimaryExpression	0x00		8469130	1					
ANR	8469314	ReturnStatement	return - 1 ;	512:24:16273:16282	8469130	1	True				
ANR	8469315	UnaryOperationExpression	- 1		8469130	0					
ANR	8469316	UnaryOperator	-		8469130	0					
ANR	8469317	PrimaryExpression	1		8469130	1					
ANR	8469318	ExpressionStatement	tokens ++	513:20:16304:16312	8469130	4	True				
ANR	8469319	PostIncDecOperationExpression	tokens ++		8469130	0					
ANR	8469320	Identifier	tokens		8469130	0					
ANR	8469321	IncDec	++		8469130	1					
ANR	8469322	ExpressionStatement	p ++	514:20:16334:16337	8469130	5	True				
ANR	8469323	PostIncDecOperationExpression	p ++		8469130	0					
ANR	8469324	Identifier	p		8469130	0					
ANR	8469325	IncDec	++		8469130	1					
ANR	8469326	ElseStatement	else		8469130	0					
ANR	8469327	CompoundStatement		48:23:1411:1411	8469130	0					
ANR	8469328	WhileStatement	while ( * p != 0x00 && * p != '>' )		8469130	0					
ANR	8469329	Condition	* p != 0x00 && * p != '>'	516:27:16391:16413	8469130	0	True				
ANR	8469330	AndExpression	* p != 0x00 && * p != '>'		8469130	0		&&			
ANR	8469331	EqualityExpression	* p != 0x00		8469130	0		!=			
ANR	8469332	UnaryOperationExpression	* p		8469130	0					
ANR	8469333	UnaryOperator	*		8469130	0					
ANR	8469334	Identifier	p		8469130	1					
ANR	8469335	PrimaryExpression	0x00		8469130	1					
ANR	8469336	EqualityExpression	* p != '>'		8469130	1		!=			
ANR	8469337	UnaryOperationExpression	* p		8469130	0					
ANR	8469338	UnaryOperator	*		8469130	0					
ANR	8469339	Identifier	p		8469130	1					
ANR	8469340	PrimaryExpression	'>'		8469130	1					
ANR	8469341	CompoundStatement		49:52:1465:1465	8469130	1					
ANR	8469342	ExpressionStatement	p ++	517:24:16442:16445	8469130	0	True				
ANR	8469343	PostIncDecOperationExpression	p ++		8469130	0					
ANR	8469344	Identifier	p		8469130	0					
ANR	8469345	IncDec	++		8469130	1					
ANR	8469346	IfStatement	if ( * p == 0x00 )		8469130	1					
ANR	8469347	Condition	* p == 0x00	519:24:16493:16502	8469130	0	True				
ANR	8469348	EqualityExpression	* p == 0x00		8469130	0		==			
ANR	8469349	UnaryOperationExpression	* p		8469130	0					
ANR	8469350	UnaryOperator	*		8469130	0					
ANR	8469351	Identifier	p		8469130	1					
ANR	8469352	PrimaryExpression	0x00		8469130	1					
ANR	8469353	ReturnStatement	return - 1 ;	520:24:16529:16538	8469130	1	True				
ANR	8469354	UnaryOperationExpression	- 1		8469130	0					
ANR	8469355	UnaryOperator	-		8469130	0					
ANR	8469356	PrimaryExpression	1		8469130	1					
ANR	8469357	ExpressionStatement	tokens ++	521:20:16560:16568	8469130	2	True				
ANR	8469358	PostIncDecOperationExpression	tokens ++		8469130	0					
ANR	8469359	Identifier	tokens		8469130	0					
ANR	8469360	IncDec	++		8469130	1					
ANR	8469361	ExpressionStatement	p ++	522:20:16590:16593	8469130	3	True				
ANR	8469362	PostIncDecOperationExpression	p ++		8469130	0					
ANR	8469363	Identifier	p		8469130	0					
ANR	8469364	IncDec	++		8469130	1					
ANR	8469365	BreakStatement	break ;	524:16:16629:16634	8469130	11	True				
ANR	8469366	Label	case '/' :	525:12:16648:16656	8469130	12	True				
ANR	8469367	WhileStatement	while ( * p != 0x00 && * p != ' ' )		8469130	13					
ANR	8469368	Condition	* p != 0x00 && * p != ' '	526:23:16681:16703	8469130	0	True				
ANR	8469369	AndExpression	* p != 0x00 && * p != ' '		8469130	0		&&			
ANR	8469370	EqualityExpression	* p != 0x00		8469130	0		!=			
ANR	8469371	UnaryOperationExpression	* p		8469130	0					
ANR	8469372	UnaryOperator	*		8469130	0					
ANR	8469373	Identifier	p		8469130	1					
ANR	8469374	PrimaryExpression	0x00		8469130	1					
ANR	8469375	EqualityExpression	* p != ' '		8469130	1		!=			
ANR	8469376	UnaryOperationExpression	* p		8469130	0					
ANR	8469377	UnaryOperator	*		8469130	0					
ANR	8469378	Identifier	p		8469130	1					
ANR	8469379	PrimaryExpression	' '		8469130	1					
ANR	8469380	CompoundStatement		59:48:1755:1755	8469130	1					
ANR	8469381	ExpressionStatement	p ++	527:20:16728:16731	8469130	0	True				
ANR	8469382	PostIncDecOperationExpression	p ++		8469130	0					
ANR	8469383	Identifier	p		8469130	0					
ANR	8469384	IncDec	++		8469130	1					
ANR	8469385	ExpressionStatement	tokens ++	529:16:16767:16775	8469130	14	True				
ANR	8469386	PostIncDecOperationExpression	tokens ++		8469130	0					
ANR	8469387	Identifier	tokens		8469130	0					
ANR	8469388	IncDec	++		8469130	1					
ANR	8469389	BreakStatement	break ;	530:16:16793:16798	8469130	15	True				
ANR	8469390	Label	case '(' :	531:12:16812:16820	8469130	16	True				
ANR	8469391	WhileStatement	while ( * p != 0x00 && * p != ')' )		8469130	17					
ANR	8469392	Condition	* p != 0x00 && * p != ')'	532:23:16845:16867	8469130	0	True				
ANR	8469393	AndExpression	* p != 0x00 && * p != ')'		8469130	0		&&			
ANR	8469394	EqualityExpression	* p != 0x00		8469130	0		!=			
ANR	8469395	UnaryOperationExpression	* p		8469130	0					
ANR	8469396	UnaryOperator	*		8469130	0					
ANR	8469397	Identifier	p		8469130	1					
ANR	8469398	PrimaryExpression	0x00		8469130	1					
ANR	8469399	EqualityExpression	* p != ')'		8469130	1		!=			
ANR	8469400	UnaryOperationExpression	* p		8469130	0					
ANR	8469401	UnaryOperator	*		8469130	0					
ANR	8469402	Identifier	p		8469130	1					
ANR	8469403	PrimaryExpression	')'		8469130	1					
ANR	8469404	CompoundStatement		65:48:1919:1919	8469130	1					
ANR	8469405	ExpressionStatement	p ++	533:20:16892:16895	8469130	0	True				
ANR	8469406	PostIncDecOperationExpression	p ++		8469130	0					
ANR	8469407	Identifier	p		8469130	0					
ANR	8469408	IncDec	++		8469130	1					
ANR	8469409	IfStatement	if ( * p == 0x00 )		8469130	18					
ANR	8469410	Condition	* p == 0x00	535:20:16935:16944	8469130	0	True				
ANR	8469411	EqualityExpression	* p == 0x00		8469130	0		==			
ANR	8469412	UnaryOperationExpression	* p		8469130	0					
ANR	8469413	UnaryOperator	*		8469130	0					
ANR	8469414	Identifier	p		8469130	1					
ANR	8469415	PrimaryExpression	0x00		8469130	1					
ANR	8469416	ReturnStatement	return - 1 ;	536:20:16967:16976	8469130	1	True				
ANR	8469417	UnaryOperationExpression	- 1		8469130	0					
ANR	8469418	UnaryOperator	-		8469130	0					
ANR	8469419	PrimaryExpression	1		8469130	1					
ANR	8469420	ExpressionStatement	p ++	537:16:16994:16997	8469130	19	True				
ANR	8469421	PostIncDecOperationExpression	p ++		8469130	0					
ANR	8469422	Identifier	p		8469130	0					
ANR	8469423	IncDec	++		8469130	1					
ANR	8469424	ExpressionStatement	tokens ++	538:16:17015:17023	8469130	20	True				
ANR	8469425	PostIncDecOperationExpression	tokens ++		8469130	0					
ANR	8469426	Identifier	tokens		8469130	0					
ANR	8469427	IncDec	++		8469130	1					
ANR	8469428	BreakStatement	break ;	539:16:17041:17046	8469130	21	True				
ANR	8469429	Label	case '[' :	540:12:17060:17068	8469130	22	True				
ANR	8469430	WhileStatement	while ( * p != 0x00 && * p != ']' )		8469130	23					
ANR	8469431	Condition	* p != 0x00 && * p != ']'	541:23:17093:17115	8469130	0	True				
ANR	8469432	AndExpression	* p != 0x00 && * p != ']'		8469130	0		&&			
ANR	8469433	EqualityExpression	* p != 0x00		8469130	0		!=			
ANR	8469434	UnaryOperationExpression	* p		8469130	0					
ANR	8469435	UnaryOperator	*		8469130	0					
ANR	8469436	Identifier	p		8469130	1					
ANR	8469437	PrimaryExpression	0x00		8469130	1					
ANR	8469438	EqualityExpression	* p != ']'		8469130	1		!=			
ANR	8469439	UnaryOperationExpression	* p		8469130	0					
ANR	8469440	UnaryOperator	*		8469130	0					
ANR	8469441	Identifier	p		8469130	1					
ANR	8469442	PrimaryExpression	']'		8469130	1					
ANR	8469443	CompoundStatement		74:48:2167:2167	8469130	1					
ANR	8469444	ExpressionStatement	p ++	542:20:17140:17143	8469130	0	True				
ANR	8469445	PostIncDecOperationExpression	p ++		8469130	0					
ANR	8469446	Identifier	p		8469130	0					
ANR	8469447	IncDec	++		8469130	1					
ANR	8469448	IfStatement	if ( * p == 0x00 )		8469130	24					
ANR	8469449	Condition	* p == 0x00	544:20:17183:17192	8469130	0	True				
ANR	8469450	EqualityExpression	* p == 0x00		8469130	0		==			
ANR	8469451	UnaryOperationExpression	* p		8469130	0					
ANR	8469452	UnaryOperator	*		8469130	0					
ANR	8469453	Identifier	p		8469130	1					
ANR	8469454	PrimaryExpression	0x00		8469130	1					
ANR	8469455	ReturnStatement	return - 1 ;	545:20:17215:17224	8469130	1	True				
ANR	8469456	UnaryOperationExpression	- 1		8469130	0					
ANR	8469457	UnaryOperator	-		8469130	0					
ANR	8469458	PrimaryExpression	1		8469130	1					
ANR	8469459	ExpressionStatement	p ++	546:16:17242:17245	8469130	25	True				
ANR	8469460	PostIncDecOperationExpression	p ++		8469130	0					
ANR	8469461	Identifier	p		8469130	0					
ANR	8469462	IncDec	++		8469130	1					
ANR	8469463	ExpressionStatement	tokens ++	547:16:17263:17271	8469130	26	True				
ANR	8469464	PostIncDecOperationExpression	tokens ++		8469130	0					
ANR	8469465	Identifier	tokens		8469130	0					
ANR	8469466	IncDec	++		8469130	1					
ANR	8469467	BreakStatement	break ;	548:16:17289:17294	8469130	27	True				
ANR	8469468	Label	case '0' :	549:12:17308:17316	8469130	28	True				
ANR	8469469	Label	case '1' :	550:12:17330:17338	8469130	29	True				
ANR	8469470	Label	case '2' :	551:12:17352:17360	8469130	30	True				
ANR	8469471	Label	case '3' :	552:12:17374:17382	8469130	31	True				
ANR	8469472	Label	case '4' :	553:12:17396:17404	8469130	32	True				
ANR	8469473	Label	case '5' :	554:12:17418:17426	8469130	33	True				
ANR	8469474	Label	case '6' :	555:12:17440:17448	8469130	34	True				
ANR	8469475	Label	case '7' :	556:12:17462:17470	8469130	35	True				
ANR	8469476	Label	case '8' :	557:12:17484:17492	8469130	36	True				
ANR	8469477	Label	case '9' :	558:12:17506:17514	8469130	37	True				
ANR	8469478	Label	case '.' :	559:12:17528:17536	8469130	38	True				
ANR	8469479	WhileStatement	while ( * p != 0x00 && * p != ' ' )		8469130	39					
ANR	8469480	Condition	* p != 0x00 && * p != ' '	560:23:17561:17583	8469130	0	True				
ANR	8469481	AndExpression	* p != 0x00 && * p != ' '		8469130	0		&&			
ANR	8469482	EqualityExpression	* p != 0x00		8469130	0		!=			
ANR	8469483	UnaryOperationExpression	* p		8469130	0					
ANR	8469484	UnaryOperator	*		8469130	0					
ANR	8469485	Identifier	p		8469130	1					
ANR	8469486	PrimaryExpression	0x00		8469130	1					
ANR	8469487	EqualityExpression	* p != ' '		8469130	1		!=			
ANR	8469488	UnaryOperationExpression	* p		8469130	0					
ANR	8469489	UnaryOperator	*		8469130	0					
ANR	8469490	Identifier	p		8469130	1					
ANR	8469491	PrimaryExpression	' '		8469130	1					
ANR	8469492	CompoundStatement		93:48:2635:2635	8469130	1					
ANR	8469493	IfStatement	if ( ( * p < 0x30 || * p > 0x39 ) && * p != '.' )		8469130	0					
ANR	8469494	Condition	( * p < 0x30 || * p > 0x39 ) && * p != '.'	561:24:17612:17648	8469130	0	True				
ANR	8469495	AndExpression	( * p < 0x30 || * p > 0x39 ) && * p != '.'		8469130	0		&&			
ANR	8469496	OrExpression	* p < 0x30 || * p > 0x39		8469130	0		||			
ANR	8469497	RelationalExpression	* p < 0x30		8469130	0		<			
ANR	8469498	UnaryOperationExpression	* p		8469130	0					
ANR	8469499	UnaryOperator	*		8469130	0					
ANR	8469500	Identifier	p		8469130	1					
ANR	8469501	PrimaryExpression	0x30		8469130	1					
ANR	8469502	RelationalExpression	* p > 0x39		8469130	1		>			
ANR	8469503	UnaryOperationExpression	* p		8469130	0					
ANR	8469504	UnaryOperator	*		8469130	0					
ANR	8469505	Identifier	p		8469130	1					
ANR	8469506	PrimaryExpression	0x39		8469130	1					
ANR	8469507	EqualityExpression	* p != '.'		8469130	1		!=			
ANR	8469508	UnaryOperationExpression	* p		8469130	0					
ANR	8469509	UnaryOperator	*		8469130	0					
ANR	8469510	Identifier	p		8469130	1					
ANR	8469511	PrimaryExpression	'.'		8469130	1					
ANR	8469512	ReturnStatement	return - 1 ;	562:24:17675:17684	8469130	1	True				
ANR	8469513	UnaryOperationExpression	- 1		8469130	0					
ANR	8469514	UnaryOperator	-		8469130	0					
ANR	8469515	PrimaryExpression	1		8469130	1					
ANR	8469516	ExpressionStatement	p ++	563:20:17706:17709	8469130	1	True				
ANR	8469517	PostIncDecOperationExpression	p ++		8469130	0					
ANR	8469518	Identifier	p		8469130	0					
ANR	8469519	IncDec	++		8469130	1					
ANR	8469520	ExpressionStatement	tokens ++	565:16:17745:17753	8469130	40	True				
ANR	8469521	PostIncDecOperationExpression	tokens ++		8469130	0					
ANR	8469522	Identifier	tokens		8469130	0					
ANR	8469523	IncDec	++		8469130	1					
ANR	8469524	BreakStatement	break ;	566:16:17771:17776	8469130	41	True				
ANR	8469525	Label	default :	567:12:17790:17797	8469130	42	True				
ANR	8469526	Identifier	default		8469130	0					
ANR	8469527	ReturnStatement	return - 1 ;	568:16:17815:17824	8469130	43	True				
ANR	8469528	UnaryOperationExpression	- 1		8469130	0					
ANR	8469529	UnaryOperator	-		8469130	0					
ANR	8469530	PrimaryExpression	1		8469130	1					
ANR	8469531	BreakStatement	break ;	569:16:17842:17847	8469130	44	True				
ANR	8469532	ReturnStatement	return tokens ;	572:4:17869:17882	8469130	2	True				
ANR	8469533	Identifier	tokens		8469130	0					
ANR	8469534	ReturnType	static int		8469130	1					
ANR	8469535	Identifier	count_tokens		8469130	2					
ANR	8469536	ParameterList	char * p		8469130	3					
ANR	8469537	Parameter	char * p	467:24:14941:14947	8469130	0	True				
ANR	8469538	ParameterType	char *		8469130	0					
ANR	8469539	Identifier	p		8469130	1					
ANR	8469540	CFGEntryNode	ENTRY		8469130		True				
ANR	8469541	CFGExitNode	EXIT		8469130		True				
ANR	8469542	Symbol	p		8469130						
ANR	8469543	Symbol	strncmp		8469130						
ANR	8469544	Symbol	tokens		8469130						
ANR	8469545	Symbol	* p		8469130						
ANR	8469546	Symbol	nesting		8469130						
ANR	8469547	Function	pjl_dist_process_array	593:0:18795:31089							
ANR	8469548	FunctionDef	"pjl_dist_process_array (gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p)"		8469547	0					
ANR	8469549	CompoundStatement		594:0:18900:31089	8469547	0					
ANR	8469550	IdentifierDeclStatement	"int tokens = 0 , nested = 0 , index = 0 , code = 0 ;"	595:4:18906:18953	8469547	0	True				
ANR	8469551	IdentifierDecl	tokens = 0		8469547	0					
ANR	8469552	IdentifierDeclType	int		8469547	0					
ANR	8469553	Identifier	tokens		8469547	1					
ANR	8469554	AssignmentExpression	tokens = 0		8469547	2		=			
ANR	8469555	Identifier	tokens		8469547	0					
ANR	8469556	PrimaryExpression	0		8469547	1					
ANR	8469557	IdentifierDecl	nested = 0		8469547	1					
ANR	8469558	IdentifierDeclType	int		8469547	0					
ANR	8469559	Identifier	nested		8469547	1					
ANR	8469560	AssignmentExpression	nested = 0		8469547	2		=			
ANR	8469561	Identifier	nested		8469547	0					
ANR	8469562	PrimaryExpression	0		8469547	1					
ANR	8469563	IdentifierDecl	index = 0		8469547	2					
ANR	8469564	IdentifierDeclType	int		8469547	0					
ANR	8469565	Identifier	index		8469547	1					
ANR	8469566	AssignmentExpression	index = 0		8469547	2		=			
ANR	8469567	Identifier	index		8469547	0					
ANR	8469568	PrimaryExpression	0		8469547	1					
ANR	8469569	IdentifierDecl	code = 0		8469547	3					
ANR	8469570	IdentifierDeclType	int		8469547	0					
ANR	8469571	Identifier	code		8469547	1					
ANR	8469572	AssignmentExpression	code = 0		8469547	2		=			
ANR	8469573	Identifier	code		8469547	0					
ANR	8469574	PrimaryExpression	0		8469547	1					
ANR	8469575	IdentifierDeclStatement	gs_param_type array_type = gs_param_type_null ;	596:4:18959:19004	8469547	1	True				
ANR	8469576	IdentifierDecl	array_type = gs_param_type_null		8469547	0					
ANR	8469577	IdentifierDeclType	gs_param_type		8469547	0					
ANR	8469578	Identifier	array_type		8469547	1					
ANR	8469579	AssignmentExpression	array_type = gs_param_type_null		8469547	2		=			
ANR	8469580	Identifier	gs_param_type_null		8469547	0					
ANR	8469581	Identifier	gs_param_type_null		8469547	1					
ANR	8469582	IdentifierDeclStatement	"char * start = * p + 1 , * p1 = start ;"	597:4:19010:19043	8469547	2	True				
ANR	8469583	IdentifierDecl	* start = * p + 1		8469547	0					
ANR	8469584	IdentifierDeclType	char *		8469547	0					
ANR	8469585	Identifier	start		8469547	1					
ANR	8469586	AssignmentExpression	* start = * p + 1		8469547	2		=			
ANR	8469587	Identifier	start		8469547	0					
ANR	8469588	AdditiveExpression	* p + 1		8469547	1		+			
ANR	8469589	UnaryOperationExpression	* p		8469547	0					
ANR	8469590	UnaryOperator	*		8469547	0					
ANR	8469591	Identifier	p		8469547	1					
ANR	8469592	PrimaryExpression	1		8469547	1					
ANR	8469593	IdentifierDecl	* p1 = start		8469547	1					
ANR	8469594	IdentifierDeclType	char *		8469547	0					
ANR	8469595	Identifier	p1		8469547	1					
ANR	8469596	AssignmentExpression	* p1 = start		8469547	2		=			
ANR	8469597	Identifier	start		8469547	0					
ANR	8469598	Identifier	start		8469547	1					
ANR	8469599	IdentifierDeclStatement	gs_param_string * parray = 0L ;	598:4:19049:19077	8469547	3	True				
ANR	8469600	IdentifierDecl	* parray = 0L		8469547	0					
ANR	8469601	IdentifierDeclType	gs_param_string *		8469547	0					
ANR	8469602	Identifier	parray		8469547	1					
ANR	8469603	AssignmentExpression	* parray = 0L		8469547	2		=			
ANR	8469604	Identifier	parray		8469547	0					
ANR	8469605	PrimaryExpression	0L		8469547	1					
ANR	8469606	IdentifierDeclStatement	char * array_data = 0x00 ;	599:4:19083:19106	8469547	4	True				
ANR	8469607	IdentifierDecl	* array_data = 0x00		8469547	0					
ANR	8469608	IdentifierDeclType	char *		8469547	0					
ANR	8469609	Identifier	array_data		8469547	1					
ANR	8469610	AssignmentExpression	* array_data = 0x00		8469547	2		=			
ANR	8469611	Identifier	array_data		8469547	0					
ANR	8469612	PrimaryExpression	0x00		8469547	1					
ANR	8469613	IdentifierDeclStatement	gs_param_string_array string_array ;	600:4:19112:19146	8469547	5	True				
ANR	8469614	IdentifierDecl	string_array		8469547	0					
ANR	8469615	IdentifierDeclType	gs_param_string_array		8469547	0					
ANR	8469616	Identifier	string_array		8469547	1					
ANR	8469617	IdentifierDeclStatement	gs_param_int_array int_array ;	601:4:19152:19180	8469547	6	True				
ANR	8469618	IdentifierDecl	int_array		8469547	0					
ANR	8469619	IdentifierDeclType	gs_param_int_array		8469547	0					
ANR	8469620	Identifier	int_array		8469547	1					
ANR	8469621	IdentifierDeclStatement	gs_param_float_array float_array ;	602:4:19186:19218	8469547	7	True				
ANR	8469622	IdentifierDecl	float_array		8469547	0					
ANR	8469623	IdentifierDeclType	gs_param_float_array		8469547	0					
ANR	8469624	Identifier	float_array		8469547	1					
ANR	8469625	DoStatement	do		8469547	8					
ANR	8469626	CompoundStatement		12:7:375:375	8469547	0					
ANR	8469627	WhileStatement	while ( * p1 != ']' && * p1 != 0x00 )		8469547	0					
ANR	8469628	Condition	* p1 != ']' && * p1 != 0x00	606:15:19293:19317	8469547	0	True				
ANR	8469629	AndExpression	* p1 != ']' && * p1 != 0x00		8469547	0		&&			
ANR	8469630	EqualityExpression	* p1 != ']'		8469547	0		!=			
ANR	8469631	UnaryOperationExpression	* p1		8469547	0					
ANR	8469632	UnaryOperator	*		8469547	0					
ANR	8469633	Identifier	p1		8469547	1					
ANR	8469634	PrimaryExpression	']'		8469547	1					
ANR	8469635	EqualityExpression	* p1 != 0x00		8469547	1		!=			
ANR	8469636	UnaryOperationExpression	* p1		8469547	0					
ANR	8469637	UnaryOperator	*		8469547	0					
ANR	8469638	Identifier	p1		8469547	1					
ANR	8469639	PrimaryExpression	0x00		8469547	1					
ANR	8469640	CompoundStatement		13:42:419:419	8469547	1					
ANR	8469641	IfStatement	if ( * p1 == '[' )		8469547	0					
ANR	8469642	Condition	* p1 == '['	607:16:19338:19347	8469547	0	True				
ANR	8469643	EqualityExpression	* p1 == '['		8469547	0		==			
ANR	8469644	UnaryOperationExpression	* p1		8469547	0					
ANR	8469645	UnaryOperator	*		8469547	0					
ANR	8469646	Identifier	p1		8469547	1					
ANR	8469647	PrimaryExpression	'['		8469547	1					
ANR	8469648	ExpressionStatement	nested ++	608:16:19366:19374	8469547	1	True				
ANR	8469649	PostIncDecOperationExpression	nested ++		8469547	0					
ANR	8469650	Identifier	nested		8469547	0					
ANR	8469651	IncDec	++		8469547	1					
ANR	8469652	ExpressionStatement	p1 ++	609:12:19388:19392	8469547	1	True				
ANR	8469653	PostIncDecOperationExpression	p1 ++		8469547	0					
ANR	8469654	Identifier	p1		8469547	0					
ANR	8469655	IncDec	++		8469547	1					
ANR	8469656	Condition	nested --	611:12:19416:19423	8469547	1	True				
ANR	8469657	PostIncDecOperationExpression	nested --		8469547	0					
ANR	8469658	Identifier	nested		8469547	0					
ANR	8469659	IncDec	--		8469547	1					
ANR	8469660	IfStatement	if ( * p1 == 0x00 )		8469547	9					
ANR	8469661	Condition	* p1 == 0x00	613:8:19436:19446	8469547	0	True				
ANR	8469662	EqualityExpression	* p1 == 0x00		8469547	0		==			
ANR	8469663	UnaryOperationExpression	* p1		8469547	0					
ANR	8469664	UnaryOperator	*		8469547	0					
ANR	8469665	Identifier	p1		8469547	1					
ANR	8469666	PrimaryExpression	0x00		8469547	1					
ANR	8469667	ReturnStatement	return - 1 ;	614:8:19457:19466	8469547	1	True				
ANR	8469668	UnaryOperationExpression	- 1		8469547	0					
ANR	8469669	UnaryOperator	-		8469547	0					
ANR	8469670	PrimaryExpression	1		8469547	1					
ANR	8469671	ExpressionStatement	* p1 = 0x00	616:4:19473:19483	8469547	10	True				
ANR	8469672	AssignmentExpression	* p1 = 0x00		8469547	0		=			
ANR	8469673	UnaryOperationExpression	* p1		8469547	0					
ANR	8469674	UnaryOperator	*		8469547	0					
ANR	8469675	Identifier	p1		8469547	1					
ANR	8469676	PrimaryExpression	0x00		8469547	1					
ANR	8469677	ExpressionStatement	p1 = start	617:4:19489:19499	8469547	11	True				
ANR	8469678	AssignmentExpression	p1 = start		8469547	0		=			
ANR	8469679	Identifier	p1		8469547	0					
ANR	8469680	Identifier	start		8469547	1					
ANR	8469681	ExpressionStatement	tokens = count_tokens ( start )	619:4:19506:19534	8469547	12	True				
ANR	8469682	AssignmentExpression	tokens = count_tokens ( start )		8469547	0		=			
ANR	8469683	Identifier	tokens		8469547	0					
ANR	8469684	CallExpression	count_tokens ( start )		8469547	1					
ANR	8469685	Callee	count_tokens		8469547	0					
ANR	8469686	Identifier	count_tokens		8469547	0					
ANR	8469687	ArgumentList	start		8469547	1					
ANR	8469688	Argument	start		8469547	0					
ANR	8469689	Identifier	start		8469547	0					
ANR	8469690	WhileStatement	while ( * p1 != 0x00 && code == 0 )		8469547	13					
ANR	8469691	Condition	* p1 != 0x00 && code == 0	621:11:19548:19571	8469547	0	True				
ANR	8469692	AndExpression	* p1 != 0x00 && code == 0		8469547	0		&&			
ANR	8469693	EqualityExpression	* p1 != 0x00		8469547	0		!=			
ANR	8469694	UnaryOperationExpression	* p1		8469547	0					
ANR	8469695	UnaryOperator	*		8469547	0					
ANR	8469696	Identifier	p1		8469547	1					
ANR	8469697	PrimaryExpression	0x00		8469547	1					
ANR	8469698	EqualityExpression	code == 0		8469547	1		==			
ANR	8469699	Identifier	code		8469547	0					
ANR	8469700	PrimaryExpression	0		8469547	1					
ANR	8469701	CompoundStatement		28:36:672:672	8469547	1					
ANR	8469702	SwitchStatement	switch ( * p1 )		8469547	0					
ANR	8469703	Condition	* p1	622:16:19591:19593	8469547	0	True				
ANR	8469704	UnaryOperationExpression	* p1		8469547	0					
ANR	8469705	UnaryOperator	*		8469547	0					
ANR	8469706	Identifier	p1		8469547	1					
ANR	8469707	CompoundStatement		29:21:695:695	8469547	1					
ANR	8469708	Label	case ' ' :	623:12:19610:19618	8469547	0	True				
ANR	8469709	ExpressionStatement	p1 ++	624:16:19636:19640	8469547	1	True				
ANR	8469710	PostIncDecOperationExpression	p1 ++		8469547	0					
ANR	8469711	Identifier	p1		8469547	0					
ANR	8469712	IncDec	++		8469547	1					
ANR	8469713	BreakStatement	break ;	625:16:19658:19663	8469547	2	True				
ANR	8469714	Label	case 'f' :	627:12:19678:19686	8469547	3	True				
ANR	8469715	IfStatement	if ( array_type != gs_param_type_null && array_type != gs_param_type_string_array )		8469547	4					
ANR	8469716	Condition	array_type != gs_param_type_null && array_type != gs_param_type_string_array	628:20:19708:19783	8469547	0	True				
ANR	8469717	AndExpression	array_type != gs_param_type_null && array_type != gs_param_type_string_array		8469547	0		&&			
ANR	8469718	EqualityExpression	array_type != gs_param_type_null		8469547	0		!=			
ANR	8469719	Identifier	array_type		8469547	0					
ANR	8469720	Identifier	gs_param_type_null		8469547	1					
ANR	8469721	EqualityExpression	array_type != gs_param_type_string_array		8469547	1		!=			
ANR	8469722	Identifier	array_type		8469547	0					
ANR	8469723	Identifier	gs_param_type_string_array		8469547	1					
ANR	8469724	CompoundStatement		35:98:885:885	8469547	1					
ANR	8469725	ExpressionStatement	code = gs_error_typecheck	629:20:19808:19833	8469547	0	True				
ANR	8469726	AssignmentExpression	code = gs_error_typecheck		8469547	0		=			
ANR	8469727	Identifier	code		8469547	0					
ANR	8469728	Identifier	gs_error_typecheck		8469547	1					
ANR	8469729	BreakStatement	break ;	630:20:19855:19860	8469547	1	True				
ANR	8469730	IfStatement	if ( array_type == gs_param_type_null )		8469547	5					
ANR	8469731	Condition	array_type == gs_param_type_null	632:20:19900:19931	8469547	0	True				
ANR	8469732	EqualityExpression	array_type == gs_param_type_null		8469547	0		==			
ANR	8469733	Identifier	array_type		8469547	0					
ANR	8469734	Identifier	gs_param_type_null		8469547	1					
ANR	8469735	CompoundStatement		39:54:1033:1033	8469547	1					
ANR	8469736	ExpressionStatement	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"	633:20:19956:20071	8469547	0	True				
ANR	8469737	AssignmentExpression	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	0		=			
ANR	8469738	Identifier	array_data		8469547	0					
ANR	8469739	CastExpression	"( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8469740	CastTarget	char *		8469547	0					
ANR	8469741	CallExpression	"gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8469742	Callee	gs_alloc_bytes		8469547	0					
ANR	8469743	Identifier	gs_alloc_bytes		8469547	0					
ANR	8469744	ArgumentList	mem		8469547	1					
ANR	8469745	Argument	mem		8469547	0					
ANR	8469746	Identifier	mem		8469547	0					
ANR	8469747	Argument	sizeof ( gs_param_string ) * tokens		8469547	1					
ANR	8469748	MultiplicativeExpression	sizeof ( gs_param_string ) * tokens		8469547	0		*			
ANR	8469749	SizeofExpression	sizeof ( gs_param_string )		8469547	0					
ANR	8469750	Sizeof	sizeof		8469547	0					
ANR	8469751	SizeofOperand	gs_param_string		8469547	1					
ANR	8469752	Identifier	tokens		8469547	1					
ANR	8469753	Argument	"""param string array in distillerparams"""		8469547	2					
ANR	8469754	PrimaryExpression	"""param string array in distillerparams"""		8469547	0					
ANR	8469755	IfStatement	if ( array_data == NULL )		8469547	1					
ANR	8469756	Condition	array_data == NULL	634:24:20097:20114	8469547	0	True				
ANR	8469757	EqualityExpression	array_data == NULL		8469547	0		==			
ANR	8469758	Identifier	array_data		8469547	0					
ANR	8469759	Identifier	NULL		8469547	1					
ANR	8469760	CompoundStatement		41:43:1215:1215	8469547	1					
ANR	8469761	ExpressionStatement	code = gs_error_VMerror	635:24:20142:20165	8469547	0	True				
ANR	8469762	AssignmentExpression	code = gs_error_VMerror		8469547	0		=			
ANR	8469763	Identifier	code		8469547	0					
ANR	8469764	Identifier	gs_error_VMerror		8469547	1					
ANR	8469765	BreakStatement	break ;	636:24:20191:20196	8469547	1	True				
ANR	8469766	ExpressionStatement	array_type = gs_param_type_string_array	638:20:20240:20279	8469547	2	True				
ANR	8469767	AssignmentExpression	array_type = gs_param_type_string_array		8469547	0		=			
ANR	8469768	Identifier	array_type		8469547	0					
ANR	8469769	Identifier	gs_param_type_string_array		8469547	1					
ANR	8469770	IfStatement	"if ( strncmp ( p1 , ""false"" , 5 ) == 0 )"		8469547	6					
ANR	8469771	Condition	"strncmp ( p1 , ""false"" , 5 ) == 0"	640:20:20319:20346	8469547	0	True				
ANR	8469772	EqualityExpression	"strncmp ( p1 , ""false"" , 5 ) == 0"		8469547	0		==			
ANR	8469773	CallExpression	"strncmp ( p1 , ""false"" , 5 )"		8469547	0					
ANR	8469774	Callee	strncmp		8469547	0					
ANR	8469775	Identifier	strncmp		8469547	0					
ANR	8469776	ArgumentList	p1		8469547	1					
ANR	8469777	Argument	p1		8469547	0					
ANR	8469778	Identifier	p1		8469547	0					
ANR	8469779	Argument	"""false"""		8469547	1					
ANR	8469780	PrimaryExpression	"""false"""		8469547	0					
ANR	8469781	Argument	5		8469547	2					
ANR	8469782	PrimaryExpression	5		8469547	0					
ANR	8469783	PrimaryExpression	0		8469547	1					
ANR	8469784	CompoundStatement		47:50:1448:1448	8469547	1					
ANR	8469785	ExpressionStatement	parray = ( gs_param_string * ) array_data	641:20:20371:20409	8469547	0	True				
ANR	8469786	AssignmentExpression	parray = ( gs_param_string * ) array_data		8469547	0		=			
ANR	8469787	Identifier	parray		8469547	0					
ANR	8469788	CastExpression	( gs_param_string * ) array_data		8469547	1					
ANR	8469789	CastTarget	gs_param_string *		8469547	0					
ANR	8469790	Identifier	array_data		8469547	1					
ANR	8469791	ExpressionStatement	parray [ index ] . data = ( const byte * ) p1	642:20:20431:20468	8469547	1	True				
ANR	8469792	AssignmentExpression	parray [ index ] . data = ( const byte * ) p1		8469547	0		=			
ANR	8469793	MemberAccess	parray [ index ] . data		8469547	0					
ANR	8469794	ArrayIndexing	parray [ index ]		8469547	0					
ANR	8469795	Identifier	parray		8469547	0					
ANR	8469796	Identifier	index		8469547	1					
ANR	8469797	Identifier	data		8469547	1					
ANR	8469798	CastExpression	( const byte * ) p1		8469547	1					
ANR	8469799	CastTarget	const byte *		8469547	0					
ANR	8469800	Identifier	p1		8469547	1					
ANR	8469801	ExpressionStatement	p1 += 5	643:20:20490:20497	8469547	2	True				
ANR	8469802	AssignmentExpression	p1 += 5		8469547	0		+=			
ANR	8469803	Identifier	p1		8469547	0					
ANR	8469804	PrimaryExpression	5		8469547	1					
ANR	8469805	ExpressionStatement	* p1 ++ = 0x00	644:20:20519:20531	8469547	3	True				
ANR	8469806	AssignmentExpression	* p1 ++ = 0x00		8469547	0		=			
ANR	8469807	UnaryOperationExpression	* p1 ++		8469547	0					
ANR	8469808	UnaryOperator	*		8469547	0					
ANR	8469809	PostIncDecOperationExpression	p1 ++		8469547	1					
ANR	8469810	Identifier	p1		8469547	0					
ANR	8469811	IncDec	++		8469547	1					
ANR	8469812	PrimaryExpression	0x00		8469547	1					
ANR	8469813	ExpressionStatement	parray [ index ] . size = 5	645:20:20553:20575	8469547	4	True				
ANR	8469814	AssignmentExpression	parray [ index ] . size = 5		8469547	0		=			
ANR	8469815	MemberAccess	parray [ index ] . size		8469547	0					
ANR	8469816	ArrayIndexing	parray [ index ]		8469547	0					
ANR	8469817	Identifier	parray		8469547	0					
ANR	8469818	Identifier	index		8469547	1					
ANR	8469819	Identifier	size		8469547	1					
ANR	8469820	PrimaryExpression	5		8469547	1					
ANR	8469821	ExpressionStatement	parray [ index ++ ] . persistent = false	646:20:20597:20631	8469547	5	True				
ANR	8469822	AssignmentExpression	parray [ index ++ ] . persistent = false		8469547	0		=			
ANR	8469823	MemberAccess	parray [ index ++ ] . persistent		8469547	0					
ANR	8469824	ArrayIndexing	parray [ index ++ ]		8469547	0					
ANR	8469825	Identifier	parray		8469547	0					
ANR	8469826	PostIncDecOperationExpression	index ++		8469547	1					
ANR	8469827	Identifier	index		8469547	0					
ANR	8469828	IncDec	++		8469547	1					
ANR	8469829	Identifier	persistent		8469547	1					
ANR	8469830	Identifier	false		8469547	1					
ANR	8469831	ElseStatement	else		8469547	0					
ANR	8469832	CompoundStatement		54:23:1755:1755	8469547	0					
ANR	8469833	ExpressionStatement	code = gs_error_typecheck	648:20:20678:20703	8469547	0	True				
ANR	8469834	AssignmentExpression	code = gs_error_typecheck		8469547	0		=			
ANR	8469835	Identifier	code		8469547	0					
ANR	8469836	Identifier	gs_error_typecheck		8469547	1					
ANR	8469837	BreakStatement	break ;	649:20:20725:20730	8469547	1	True				
ANR	8469838	BreakStatement	break ;	651:16:20766:20771	8469547	7	True				
ANR	8469839	Label	case 't' :	653:12:20786:20794	8469547	8	True				
ANR	8469840	IfStatement	if ( array_type != gs_param_type_null && array_type != gs_param_type_string_array )		8469547	9					
ANR	8469841	Condition	array_type != gs_param_type_null && array_type != gs_param_type_string_array	654:20:20816:20891	8469547	0	True				
ANR	8469842	AndExpression	array_type != gs_param_type_null && array_type != gs_param_type_string_array		8469547	0		&&			
ANR	8469843	EqualityExpression	array_type != gs_param_type_null		8469547	0		!=			
ANR	8469844	Identifier	array_type		8469547	0					
ANR	8469845	Identifier	gs_param_type_null		8469547	1					
ANR	8469846	EqualityExpression	array_type != gs_param_type_string_array		8469547	1		!=			
ANR	8469847	Identifier	array_type		8469547	0					
ANR	8469848	Identifier	gs_param_type_string_array		8469547	1					
ANR	8469849	CompoundStatement		61:98:1993:1993	8469547	1					
ANR	8469850	ExpressionStatement	code = gs_error_typecheck	655:20:20916:20941	8469547	0	True				
ANR	8469851	AssignmentExpression	code = gs_error_typecheck		8469547	0		=			
ANR	8469852	Identifier	code		8469547	0					
ANR	8469853	Identifier	gs_error_typecheck		8469547	1					
ANR	8469854	BreakStatement	break ;	656:20:20963:20968	8469547	1	True				
ANR	8469855	IfStatement	if ( array_type == gs_param_type_null )		8469547	10					
ANR	8469856	Condition	array_type == gs_param_type_null	658:20:21008:21039	8469547	0	True				
ANR	8469857	EqualityExpression	array_type == gs_param_type_null		8469547	0		==			
ANR	8469858	Identifier	array_type		8469547	0					
ANR	8469859	Identifier	gs_param_type_null		8469547	1					
ANR	8469860	CompoundStatement		65:54:2141:2141	8469547	1					
ANR	8469861	ExpressionStatement	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"	659:20:21064:21179	8469547	0	True				
ANR	8469862	AssignmentExpression	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	0		=			
ANR	8469863	Identifier	array_data		8469547	0					
ANR	8469864	CastExpression	"( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8469865	CastTarget	char *		8469547	0					
ANR	8469866	CallExpression	"gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8469867	Callee	gs_alloc_bytes		8469547	0					
ANR	8469868	Identifier	gs_alloc_bytes		8469547	0					
ANR	8469869	ArgumentList	mem		8469547	1					
ANR	8469870	Argument	mem		8469547	0					
ANR	8469871	Identifier	mem		8469547	0					
ANR	8469872	Argument	sizeof ( gs_param_string ) * tokens		8469547	1					
ANR	8469873	MultiplicativeExpression	sizeof ( gs_param_string ) * tokens		8469547	0		*			
ANR	8469874	SizeofExpression	sizeof ( gs_param_string )		8469547	0					
ANR	8469875	Sizeof	sizeof		8469547	0					
ANR	8469876	SizeofOperand	gs_param_string		8469547	1					
ANR	8469877	Identifier	tokens		8469547	1					
ANR	8469878	Argument	"""param string array in distillerparams"""		8469547	2					
ANR	8469879	PrimaryExpression	"""param string array in distillerparams"""		8469547	0					
ANR	8469880	IfStatement	if ( array_data == NULL )		8469547	1					
ANR	8469881	Condition	array_data == NULL	660:24:21205:21222	8469547	0	True				
ANR	8469882	EqualityExpression	array_data == NULL		8469547	0		==			
ANR	8469883	Identifier	array_data		8469547	0					
ANR	8469884	Identifier	NULL		8469547	1					
ANR	8469885	CompoundStatement		67:43:2323:2323	8469547	1					
ANR	8469886	ExpressionStatement	code = gs_error_VMerror	661:24:21250:21273	8469547	0	True				
ANR	8469887	AssignmentExpression	code = gs_error_VMerror		8469547	0		=			
ANR	8469888	Identifier	code		8469547	0					
ANR	8469889	Identifier	gs_error_VMerror		8469547	1					
ANR	8469890	BreakStatement	break ;	662:24:21299:21304	8469547	1	True				
ANR	8469891	ExpressionStatement	array_type = gs_param_type_string_array	664:20:21348:21387	8469547	2	True				
ANR	8469892	AssignmentExpression	array_type = gs_param_type_string_array		8469547	0		=			
ANR	8469893	Identifier	array_type		8469547	0					
ANR	8469894	Identifier	gs_param_type_string_array		8469547	1					
ANR	8469895	IfStatement	"if ( strncmp ( p1 , ""true"" , 4 ) == 0 )"		8469547	11					
ANR	8469896	Condition	"strncmp ( p1 , ""true"" , 4 ) == 0"	666:20:21427:21453	8469547	0	True				
ANR	8469897	EqualityExpression	"strncmp ( p1 , ""true"" , 4 ) == 0"		8469547	0		==			
ANR	8469898	CallExpression	"strncmp ( p1 , ""true"" , 4 )"		8469547	0					
ANR	8469899	Callee	strncmp		8469547	0					
ANR	8469900	Identifier	strncmp		8469547	0					
ANR	8469901	ArgumentList	p1		8469547	1					
ANR	8469902	Argument	p1		8469547	0					
ANR	8469903	Identifier	p1		8469547	0					
ANR	8469904	Argument	"""true"""		8469547	1					
ANR	8469905	PrimaryExpression	"""true"""		8469547	0					
ANR	8469906	Argument	4		8469547	2					
ANR	8469907	PrimaryExpression	4		8469547	0					
ANR	8469908	PrimaryExpression	0		8469547	1					
ANR	8469909	CompoundStatement		73:49:2555:2555	8469547	1					
ANR	8469910	ExpressionStatement	parray = ( gs_param_string * ) array_data	667:20:21478:21516	8469547	0	True				
ANR	8469911	AssignmentExpression	parray = ( gs_param_string * ) array_data		8469547	0		=			
ANR	8469912	Identifier	parray		8469547	0					
ANR	8469913	CastExpression	( gs_param_string * ) array_data		8469547	1					
ANR	8469914	CastTarget	gs_param_string *		8469547	0					
ANR	8469915	Identifier	array_data		8469547	1					
ANR	8469916	ExpressionStatement	parray [ index ] . data = ( const byte * ) p1	668:20:21538:21575	8469547	1	True				
ANR	8469917	AssignmentExpression	parray [ index ] . data = ( const byte * ) p1		8469547	0		=			
ANR	8469918	MemberAccess	parray [ index ] . data		8469547	0					
ANR	8469919	ArrayIndexing	parray [ index ]		8469547	0					
ANR	8469920	Identifier	parray		8469547	0					
ANR	8469921	Identifier	index		8469547	1					
ANR	8469922	Identifier	data		8469547	1					
ANR	8469923	CastExpression	( const byte * ) p1		8469547	1					
ANR	8469924	CastTarget	const byte *		8469547	0					
ANR	8469925	Identifier	p1		8469547	1					
ANR	8469926	ExpressionStatement	p1 += 4	669:20:21597:21604	8469547	2	True				
ANR	8469927	AssignmentExpression	p1 += 4		8469547	0		+=			
ANR	8469928	Identifier	p1		8469547	0					
ANR	8469929	PrimaryExpression	4		8469547	1					
ANR	8469930	ExpressionStatement	* p1 ++ = 0x00	670:20:21626:21638	8469547	3	True				
ANR	8469931	AssignmentExpression	* p1 ++ = 0x00		8469547	0		=			
ANR	8469932	UnaryOperationExpression	* p1 ++		8469547	0					
ANR	8469933	UnaryOperator	*		8469547	0					
ANR	8469934	PostIncDecOperationExpression	p1 ++		8469547	1					
ANR	8469935	Identifier	p1		8469547	0					
ANR	8469936	IncDec	++		8469547	1					
ANR	8469937	PrimaryExpression	0x00		8469547	1					
ANR	8469938	ExpressionStatement	parray [ index ] . size = 4	671:20:21660:21682	8469547	4	True				
ANR	8469939	AssignmentExpression	parray [ index ] . size = 4		8469547	0		=			
ANR	8469940	MemberAccess	parray [ index ] . size		8469547	0					
ANR	8469941	ArrayIndexing	parray [ index ]		8469547	0					
ANR	8469942	Identifier	parray		8469547	0					
ANR	8469943	Identifier	index		8469547	1					
ANR	8469944	Identifier	size		8469547	1					
ANR	8469945	PrimaryExpression	4		8469547	1					
ANR	8469946	ExpressionStatement	parray [ index ++ ] . persistent = false	672:20:21704:21738	8469547	5	True				
ANR	8469947	AssignmentExpression	parray [ index ++ ] . persistent = false		8469547	0		=			
ANR	8469948	MemberAccess	parray [ index ++ ] . persistent		8469547	0					
ANR	8469949	ArrayIndexing	parray [ index ++ ]		8469547	0					
ANR	8469950	Identifier	parray		8469547	0					
ANR	8469951	PostIncDecOperationExpression	index ++		8469547	1					
ANR	8469952	Identifier	index		8469547	0					
ANR	8469953	IncDec	++		8469547	1					
ANR	8469954	Identifier	persistent		8469547	1					
ANR	8469955	Identifier	false		8469547	1					
ANR	8469956	ElseStatement	else		8469547	0					
ANR	8469957	CompoundStatement		80:23:2862:2862	8469547	0					
ANR	8469958	ExpressionStatement	code = gs_error_typecheck	674:20:21785:21810	8469547	0	True				
ANR	8469959	AssignmentExpression	code = gs_error_typecheck		8469547	0		=			
ANR	8469960	Identifier	code		8469547	0					
ANR	8469961	Identifier	gs_error_typecheck		8469547	1					
ANR	8469962	BreakStatement	break ;	675:20:21832:21837	8469547	1	True				
ANR	8469963	BreakStatement	break ;	677:16:21873:21878	8469547	12	True				
ANR	8469964	Label	case '<' :	679:12:21893:21901	8469547	13	True				
ANR	8469965	IfStatement	if ( array_type != gs_param_type_null && array_type != gs_param_type_string_array )		8469547	14					
ANR	8469966	Condition	array_type != gs_param_type_null && array_type != gs_param_type_string_array	680:20:21923:21998	8469547	0	True				
ANR	8469967	AndExpression	array_type != gs_param_type_null && array_type != gs_param_type_string_array		8469547	0		&&			
ANR	8469968	EqualityExpression	array_type != gs_param_type_null		8469547	0		!=			
ANR	8469969	Identifier	array_type		8469547	0					
ANR	8469970	Identifier	gs_param_type_null		8469547	1					
ANR	8469971	EqualityExpression	array_type != gs_param_type_string_array		8469547	1		!=			
ANR	8469972	Identifier	array_type		8469547	0					
ANR	8469973	Identifier	gs_param_type_string_array		8469547	1					
ANR	8469974	CompoundStatement		87:98:3100:3100	8469547	1					
ANR	8469975	ExpressionStatement	code = gs_error_typecheck	681:20:22023:22048	8469547	0	True				
ANR	8469976	AssignmentExpression	code = gs_error_typecheck		8469547	0		=			
ANR	8469977	Identifier	code		8469547	0					
ANR	8469978	Identifier	gs_error_typecheck		8469547	1					
ANR	8469979	BreakStatement	break ;	682:20:22070:22075	8469547	1	True				
ANR	8469980	IfStatement	if ( array_type == gs_param_type_null )		8469547	15					
ANR	8469981	Condition	array_type == gs_param_type_null	684:20:22115:22146	8469547	0	True				
ANR	8469982	EqualityExpression	array_type == gs_param_type_null		8469547	0		==			
ANR	8469983	Identifier	array_type		8469547	0					
ANR	8469984	Identifier	gs_param_type_null		8469547	1					
ANR	8469985	CompoundStatement		91:54:3248:3248	8469547	1					
ANR	8469986	ExpressionStatement	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"	685:20:22171:22286	8469547	0	True				
ANR	8469987	AssignmentExpression	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	0		=			
ANR	8469988	Identifier	array_data		8469547	0					
ANR	8469989	CastExpression	"( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8469990	CastTarget	char *		8469547	0					
ANR	8469991	CallExpression	"gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8469992	Callee	gs_alloc_bytes		8469547	0					
ANR	8469993	Identifier	gs_alloc_bytes		8469547	0					
ANR	8469994	ArgumentList	mem		8469547	1					
ANR	8469995	Argument	mem		8469547	0					
ANR	8469996	Identifier	mem		8469547	0					
ANR	8469997	Argument	sizeof ( gs_param_string ) * tokens		8469547	1					
ANR	8469998	MultiplicativeExpression	sizeof ( gs_param_string ) * tokens		8469547	0		*			
ANR	8469999	SizeofExpression	sizeof ( gs_param_string )		8469547	0					
ANR	8470000	Sizeof	sizeof		8469547	0					
ANR	8470001	SizeofOperand	gs_param_string		8469547	1					
ANR	8470002	Identifier	tokens		8469547	1					
ANR	8470003	Argument	"""param string array in distillerparams"""		8469547	2					
ANR	8470004	PrimaryExpression	"""param string array in distillerparams"""		8469547	0					
ANR	8470005	IfStatement	if ( array_data == NULL )		8469547	1					
ANR	8470006	Condition	array_data == NULL	686:24:22312:22329	8469547	0	True				
ANR	8470007	EqualityExpression	array_data == NULL		8469547	0		==			
ANR	8470008	Identifier	array_data		8469547	0					
ANR	8470009	Identifier	NULL		8469547	1					
ANR	8470010	CompoundStatement		93:43:3430:3430	8469547	1					
ANR	8470011	ExpressionStatement	code = gs_error_VMerror	687:24:22357:22380	8469547	0	True				
ANR	8470012	AssignmentExpression	code = gs_error_VMerror		8469547	0		=			
ANR	8470013	Identifier	code		8469547	0					
ANR	8470014	Identifier	gs_error_VMerror		8469547	1					
ANR	8470015	BreakStatement	break ;	688:24:22406:22411	8469547	1	True				
ANR	8470016	ExpressionStatement	array_type = gs_param_type_string_array	690:20:22455:22494	8469547	2	True				
ANR	8470017	AssignmentExpression	array_type = gs_param_type_string_array		8469547	0		=			
ANR	8470018	Identifier	array_type		8469547	0					
ANR	8470019	Identifier	gs_param_type_string_array		8469547	1					
ANR	8470020	IfStatement	if ( * ( p1 + 1 ) == '<' )		8469547	16					
ANR	8470021	Condition	* ( p1 + 1 ) == '<'	692:20:22534:22547	8469547	0	True				
ANR	8470022	EqualityExpression	* ( p1 + 1 ) == '<'		8469547	0		==			
ANR	8470023	UnaryOperationExpression	* ( p1 + 1 )		8469547	0					
ANR	8470024	UnaryOperator	*		8469547	0					
ANR	8470025	AdditiveExpression	p1 + 1		8469547	1		+			
ANR	8470026	Identifier	p1		8469547	0					
ANR	8470027	PrimaryExpression	1		8469547	1					
ANR	8470028	PrimaryExpression	'<'		8469547	1					
ANR	8470029	CompoundStatement		99:36:3649:3649	8469547	1					
ANR	8470030	ExpressionStatement	code = gs_error_typecheck	693:20:22572:22597	8469547	0	True				
ANR	8470031	AssignmentExpression	code = gs_error_typecheck		8469547	0		=			
ANR	8470032	Identifier	code		8469547	0					
ANR	8470033	Identifier	gs_error_typecheck		8469547	1					
ANR	8470034	BreakStatement	break ;	694:20:22619:22624	8469547	1	True				
ANR	8470035	ElseStatement	else		8469547	0					
ANR	8470036	CompoundStatement		106:20:3911:3916	8469547	0					
ANR	8470037	IdentifierDeclStatement	"char * src , * dest ;"	697:20:22739:22755	8469547	0	True				
ANR	8470038	IdentifierDecl	* src		8469547	0					
ANR	8470039	IdentifierDeclType	char *		8469547	0					
ANR	8470040	Identifier	src		8469547	1					
ANR	8470041	IdentifierDecl	* dest		8469547	1					
ANR	8470042	IdentifierDeclType	char *		8469547	0					
ANR	8470043	Identifier	dest		8469547	1					
ANR	8470044	IdentifierDeclStatement	char data = 0 ;	698:20:22777:22790	8469547	1	True				
ANR	8470045	IdentifierDecl	data = 0		8469547	0					
ANR	8470046	IdentifierDeclType	char		8469547	0					
ANR	8470047	Identifier	data		8469547	1					
ANR	8470048	AssignmentExpression	data = 0		8469547	2		=			
ANR	8470049	Identifier	data		8469547	0					
ANR	8470050	PrimaryExpression	0		8469547	1					
ANR	8470051	IdentifierDeclStatement	int i ;	699:20:22812:22817	8469547	2	True				
ANR	8470052	IdentifierDecl	i		8469547	0					
ANR	8470053	IdentifierDeclType	int		8469547	0					
ANR	8470054	Identifier	i		8469547	1					
ANR	8470055	ExpressionStatement	parray = ( gs_param_string * ) array_data	701:20:22840:22878	8469547	3	True				
ANR	8470056	AssignmentExpression	parray = ( gs_param_string * ) array_data		8469547	0		=			
ANR	8470057	Identifier	parray		8469547	0					
ANR	8470058	CastExpression	( gs_param_string * ) array_data		8469547	1					
ANR	8470059	CastTarget	gs_param_string *		8469547	0					
ANR	8470060	Identifier	array_data		8469547	1					
ANR	8470061	ExpressionStatement	src = dest = ++ p1	702:20:22900:22917	8469547	4	True				
ANR	8470062	AssignmentExpression	src = dest = ++ p1		8469547	0		=			
ANR	8470063	Identifier	src		8469547	0					
ANR	8470064	AssignmentExpression	dest = ++ p1		8469547	1		=			
ANR	8470065	Identifier	dest		8469547	0					
ANR	8470066	UnaryExpression	++ p1		8469547	1					
ANR	8470067	IncDec	++		8469547	0					
ANR	8470068	Identifier	p1		8469547	1					
ANR	8470069	ExpressionStatement	parray [ index ] . data = ( const byte * ) p1	703:20:22939:22976	8469547	5	True				
ANR	8470070	AssignmentExpression	parray [ index ] . data = ( const byte * ) p1		8469547	0		=			
ANR	8470071	MemberAccess	parray [ index ] . data		8469547	0					
ANR	8470072	ArrayIndexing	parray [ index ]		8469547	0					
ANR	8470073	Identifier	parray		8469547	0					
ANR	8470074	Identifier	index		8469547	1					
ANR	8470075	Identifier	data		8469547	1					
ANR	8470076	CastExpression	( const byte * ) p1		8469547	1					
ANR	8470077	CastTarget	const byte *		8469547	0					
ANR	8470078	Identifier	p1		8469547	1					
ANR	8470079	WhileStatement	while ( * src != 0x00 && * src != '>' )		8469547	6					
ANR	8470080	Condition	* src != 0x00 && * src != '>'	704:27:23005:23031	8469547	0	True				
ANR	8470081	AndExpression	* src != 0x00 && * src != '>'		8469547	0		&&			
ANR	8470082	EqualityExpression	* src != 0x00		8469547	0		!=			
ANR	8470083	UnaryOperationExpression	* src		8469547	0					
ANR	8470084	UnaryOperator	*		8469547	0					
ANR	8470085	Identifier	src		8469547	1					
ANR	8470086	PrimaryExpression	0x00		8469547	1					
ANR	8470087	EqualityExpression	* src != '>'		8469547	1		!=			
ANR	8470088	UnaryOperationExpression	* src		8469547	0					
ANR	8470089	UnaryOperator	*		8469547	0					
ANR	8470090	Identifier	src		8469547	1					
ANR	8470091	PrimaryExpression	'>'		8469547	1					
ANR	8470092	CompoundStatement		111:56:4133:4133	8469547	1					
ANR	8470093	ExpressionStatement	data = 0	705:24:23060:23068	8469547	0	True				
ANR	8470094	AssignmentExpression	data = 0		8469547	0		=			
ANR	8470095	Identifier	data		8469547	0					
ANR	8470096	PrimaryExpression	0		8469547	1					
ANR	8470097	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		8469547	1					
ANR	8470098	ForInit	i = 0 ;	706:29:23099:23102	8469547	0	True				
ANR	8470099	AssignmentExpression	i = 0		8469547	0		=			
ANR	8470100	Identifier	i		8469547	0					
ANR	8470101	PrimaryExpression	0		8469547	1					
ANR	8470102	Condition	i < 2	706:33:23103:23105	8469547	1	True				
ANR	8470103	RelationalExpression	i < 2		8469547	0		<			
ANR	8470104	Identifier	i		8469547	0					
ANR	8470105	PrimaryExpression	2		8469547	1					
ANR	8470106	PostIncDecOperationExpression	i ++	706:37:23107:23109	8469547	2	True				
ANR	8470107	Identifier	i		8469547	0					
ANR	8470108	IncDec	++		8469547	1					
ANR	8470109	CompoundStatement		113:42:4211:4211	8469547	3					
ANR	8470110	IfStatement	if ( * src >= '0' && * src <= '9' )		8469547	0					
ANR	8470111	Condition	* src >= '0' && * src <= '9'	707:31:23145:23170	8469547	0	True				
ANR	8470112	AndExpression	* src >= '0' && * src <= '9'		8469547	0		&&			
ANR	8470113	RelationalExpression	* src >= '0'		8469547	0		>=			
ANR	8470114	UnaryOperationExpression	* src		8469547	0					
ANR	8470115	UnaryOperator	*		8469547	0					
ANR	8470116	Identifier	src		8469547	1					
ANR	8470117	PrimaryExpression	'0'		8469547	1					
ANR	8470118	RelationalExpression	* src <= '9'		8469547	1		<=			
ANR	8470119	UnaryOperationExpression	* src		8469547	0					
ANR	8470120	UnaryOperator	*		8469547	0					
ANR	8470121	Identifier	src		8469547	1					
ANR	8470122	PrimaryExpression	'9'		8469547	1					
ANR	8470123	CompoundStatement		114:59:4272:4272	8469547	1					
ANR	8470124	ExpressionStatement	data = ( data << 4 )	708:32:23207:23225	8469547	0	True				
ANR	8470125	AssignmentExpression	data = ( data << 4 )		8469547	0		=			
ANR	8470126	Identifier	data		8469547	0					
ANR	8470127	ShiftExpression	data << 4		8469547	1		<<			
ANR	8470128	Identifier	data		8469547	0					
ANR	8470129	PrimaryExpression	4		8469547	1					
ANR	8470130	ExpressionStatement	data += ( * src - '0' )	709:32:23259:23279	8469547	1	True				
ANR	8470131	AssignmentExpression	data += ( * src - '0' )		8469547	0		+=			
ANR	8470132	Identifier	data		8469547	0					
ANR	8470133	AdditiveExpression	* src - '0'		8469547	1		-			
ANR	8470134	UnaryOperationExpression	* src		8469547	0					
ANR	8470135	UnaryOperator	*		8469547	0					
ANR	8470136	Identifier	src		8469547	1					
ANR	8470137	PrimaryExpression	'0'		8469547	1					
ANR	8470138	ElseStatement	else		8469547	0					
ANR	8470139	CompoundStatement		117:35:4415:4415	8469547	0					
ANR	8470140	IfStatement	if ( * src >= 'A' && * src <= 'F' )		8469547	0					
ANR	8470141	Condition	* src >= 'A' && * src <= 'F'	711:36:23354:23379	8469547	0	True				
ANR	8470142	AndExpression	* src >= 'A' && * src <= 'F'		8469547	0		&&			
ANR	8470143	RelationalExpression	* src >= 'A'		8469547	0		>=			
ANR	8470144	UnaryOperationExpression	* src		8469547	0					
ANR	8470145	UnaryOperator	*		8469547	0					
ANR	8470146	Identifier	src		8469547	1					
ANR	8470147	PrimaryExpression	'A'		8469547	1					
ANR	8470148	RelationalExpression	* src <= 'F'		8469547	1		<=			
ANR	8470149	UnaryOperationExpression	* src		8469547	0					
ANR	8470150	UnaryOperator	*		8469547	0					
ANR	8470151	Identifier	src		8469547	1					
ANR	8470152	PrimaryExpression	'F'		8469547	1					
ANR	8470153	CompoundStatement		118:64:4481:4481	8469547	1					
ANR	8470154	ExpressionStatement	data = ( data << 4 )	712:36:23420:23438	8469547	0	True				
ANR	8470155	AssignmentExpression	data = ( data << 4 )		8469547	0		=			
ANR	8470156	Identifier	data		8469547	0					
ANR	8470157	ShiftExpression	data << 4		8469547	1		<<			
ANR	8470158	Identifier	data		8469547	0					
ANR	8470159	PrimaryExpression	4		8469547	1					
ANR	8470160	ExpressionStatement	data += ( * src - 'A' + 10 )	713:36:23476:23501	8469547	1	True				
ANR	8470161	AssignmentExpression	data += ( * src - 'A' + 10 )		8469547	0		+=			
ANR	8470162	Identifier	data		8469547	0					
ANR	8470163	AdditiveExpression	* src - 'A' + 10		8469547	1		-			
ANR	8470164	UnaryOperationExpression	* src		8469547	0					
ANR	8470165	UnaryOperator	*		8469547	0					
ANR	8470166	Identifier	src		8469547	1					
ANR	8470167	AdditiveExpression	'A' + 10		8469547	1		+			
ANR	8470168	PrimaryExpression	'A'		8469547	0					
ANR	8470169	PrimaryExpression	10		8469547	1					
ANR	8470170	ElseStatement	else		8469547	0					
ANR	8470171	CompoundStatement		121:39:4641:4641	8469547	0					
ANR	8470172	IfStatement	if ( * src >= 'a' && * src <= 'f' )		8469547	0					
ANR	8470173	Condition	* src >= 'a' && * src <= 'f'	715:40:23584:23609	8469547	0	True				
ANR	8470174	AndExpression	* src >= 'a' && * src <= 'f'		8469547	0		&&			
ANR	8470175	RelationalExpression	* src >= 'a'		8469547	0		>=			
ANR	8470176	UnaryOperationExpression	* src		8469547	0					
ANR	8470177	UnaryOperator	*		8469547	0					
ANR	8470178	Identifier	src		8469547	1					
ANR	8470179	PrimaryExpression	'a'		8469547	1					
ANR	8470180	RelationalExpression	* src <= 'f'		8469547	1		<=			
ANR	8470181	UnaryOperationExpression	* src		8469547	0					
ANR	8470182	UnaryOperator	*		8469547	0					
ANR	8470183	Identifier	src		8469547	1					
ANR	8470184	PrimaryExpression	'f'		8469547	1					
ANR	8470185	CompoundStatement		122:68:4711:4711	8469547	1					
ANR	8470186	ExpressionStatement	data = ( data << 4 )	716:40:23654:23672	8469547	0	True				
ANR	8470187	AssignmentExpression	data = ( data << 4 )		8469547	0		=			
ANR	8470188	Identifier	data		8469547	0					
ANR	8470189	ShiftExpression	data << 4		8469547	1		<<			
ANR	8470190	Identifier	data		8469547	0					
ANR	8470191	PrimaryExpression	4		8469547	1					
ANR	8470192	ExpressionStatement	data += ( * src - 'a' + 10 )	717:40:23714:23739	8469547	1	True				
ANR	8470193	AssignmentExpression	data += ( * src - 'a' + 10 )		8469547	0		+=			
ANR	8470194	Identifier	data		8469547	0					
ANR	8470195	AdditiveExpression	* src - 'a' + 10		8469547	1		-			
ANR	8470196	UnaryOperationExpression	* src		8469547	0					
ANR	8470197	UnaryOperator	*		8469547	0					
ANR	8470198	Identifier	src		8469547	1					
ANR	8470199	AdditiveExpression	'a' + 10		8469547	1		+			
ANR	8470200	PrimaryExpression	'a'		8469547	0					
ANR	8470201	PrimaryExpression	10		8469547	1					
ANR	8470202	ElseStatement	else		8469547	0					
ANR	8470203	CompoundStatement		125:43:4883:4883	8469547	0					
ANR	8470204	ReturnStatement	return - 1 ;	719:40:23826:23835	8469547	0	True				
ANR	8470205	UnaryOperationExpression	- 1		8469547	0					
ANR	8470206	UnaryOperator	-		8469547	0					
ANR	8470207	PrimaryExpression	1		8469547	1					
ANR	8470208	ExpressionStatement	src ++	723:28:23967:23972	8469547	1	True				
ANR	8470209	PostIncDecOperationExpression	src ++		8469547	0					
ANR	8470210	Identifier	src		8469547	0					
ANR	8470211	IncDec	++		8469547	1					
ANR	8470212	ExpressionStatement	* dest ++ = data	725:24:24024:24038	8469547	2	True				
ANR	8470213	AssignmentExpression	* dest ++ = data		8469547	0		=			
ANR	8470214	UnaryOperationExpression	* dest ++		8469547	0					
ANR	8470215	UnaryOperator	*		8469547	0					
ANR	8470216	PostIncDecOperationExpression	dest ++		8469547	1					
ANR	8470217	Identifier	dest		8469547	0					
ANR	8470218	IncDec	++		8469547	1					
ANR	8470219	Identifier	data		8469547	1					
ANR	8470220	ExpressionStatement	* dest = 0x00	727:20:24082:24094	8469547	7	True				
ANR	8470221	AssignmentExpression	* dest = 0x00		8469547	0		=			
ANR	8470222	UnaryOperationExpression	* dest		8469547	0					
ANR	8470223	UnaryOperator	*		8469547	0					
ANR	8470224	Identifier	dest		8469547	1					
ANR	8470225	PrimaryExpression	0x00		8469547	1					
ANR	8470226	ExpressionStatement	parray [ index ] . size = strlen ( ( char * ) ( parray [ index ] . data ) )	728:20:24116:24173	8469547	8	True				
ANR	8470227	AssignmentExpression	parray [ index ] . size = strlen ( ( char * ) ( parray [ index ] . data ) )		8469547	0		=			
ANR	8470228	MemberAccess	parray [ index ] . size		8469547	0					
ANR	8470229	ArrayIndexing	parray [ index ]		8469547	0					
ANR	8470230	Identifier	parray		8469547	0					
ANR	8470231	Identifier	index		8469547	1					
ANR	8470232	Identifier	size		8469547	1					
ANR	8470233	CallExpression	strlen ( ( char * ) ( parray [ index ] . data ) )		8469547	1					
ANR	8470234	Callee	strlen		8469547	0					
ANR	8470235	Identifier	strlen		8469547	0					
ANR	8470236	ArgumentList	( char * ) ( parray [ index ] . data )		8469547	1					
ANR	8470237	Argument	( char * ) ( parray [ index ] . data )		8469547	0					
ANR	8470238	CastExpression	( char * ) ( parray [ index ] . data )		8469547	0					
ANR	8470239	CastTarget	char *		8469547	0					
ANR	8470240	MemberAccess	parray [ index ] . data		8469547	1					
ANR	8470241	ArrayIndexing	parray [ index ]		8469547	0					
ANR	8470242	Identifier	parray		8469547	0					
ANR	8470243	Identifier	index		8469547	1					
ANR	8470244	Identifier	data		8469547	1					
ANR	8470245	ExpressionStatement	parray [ index ++ ] . persistent = false	729:20:24195:24229	8469547	9	True				
ANR	8470246	AssignmentExpression	parray [ index ++ ] . persistent = false		8469547	0		=			
ANR	8470247	MemberAccess	parray [ index ++ ] . persistent		8469547	0					
ANR	8470248	ArrayIndexing	parray [ index ++ ]		8469547	0					
ANR	8470249	Identifier	parray		8469547	0					
ANR	8470250	PostIncDecOperationExpression	index ++		8469547	1					
ANR	8470251	Identifier	index		8469547	0					
ANR	8470252	IncDec	++		8469547	1					
ANR	8470253	Identifier	persistent		8469547	1					
ANR	8470254	Identifier	false		8469547	1					
ANR	8470255	BreakStatement	break ;	731:16:24265:24270	8469547	17	True				
ANR	8470256	Label	case '/' :	733:12:24285:24293	8469547	18	True				
ANR	8470257	IfStatement	if ( array_type != gs_param_type_null && array_type != gs_param_type_string_array )		8469547	19					
ANR	8470258	Condition	array_type != gs_param_type_null && array_type != gs_param_type_string_array	734:20:24315:24390	8469547	0	True				
ANR	8470259	AndExpression	array_type != gs_param_type_null && array_type != gs_param_type_string_array		8469547	0		&&			
ANR	8470260	EqualityExpression	array_type != gs_param_type_null		8469547	0		!=			
ANR	8470261	Identifier	array_type		8469547	0					
ANR	8470262	Identifier	gs_param_type_null		8469547	1					
ANR	8470263	EqualityExpression	array_type != gs_param_type_string_array		8469547	1		!=			
ANR	8470264	Identifier	array_type		8469547	0					
ANR	8470265	Identifier	gs_param_type_string_array		8469547	1					
ANR	8470266	CompoundStatement		141:98:5492:5492	8469547	1					
ANR	8470267	ExpressionStatement	code = gs_error_typecheck	735:20:24415:24440	8469547	0	True				
ANR	8470268	AssignmentExpression	code = gs_error_typecheck		8469547	0		=			
ANR	8470269	Identifier	code		8469547	0					
ANR	8470270	Identifier	gs_error_typecheck		8469547	1					
ANR	8470271	BreakStatement	break ;	736:20:24462:24467	8469547	1	True				
ANR	8470272	IfStatement	if ( array_type == gs_param_type_null )		8469547	20					
ANR	8470273	Condition	array_type == gs_param_type_null	738:20:24507:24538	8469547	0	True				
ANR	8470274	EqualityExpression	array_type == gs_param_type_null		8469547	0		==			
ANR	8470275	Identifier	array_type		8469547	0					
ANR	8470276	Identifier	gs_param_type_null		8469547	1					
ANR	8470277	CompoundStatement		145:54:5640:5640	8469547	1					
ANR	8470278	ExpressionStatement	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"	739:20:24563:24678	8469547	0	True				
ANR	8470279	AssignmentExpression	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	0		=			
ANR	8470280	Identifier	array_data		8469547	0					
ANR	8470281	CastExpression	"( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8470282	CastTarget	char *		8469547	0					
ANR	8470283	CallExpression	"gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8470284	Callee	gs_alloc_bytes		8469547	0					
ANR	8470285	Identifier	gs_alloc_bytes		8469547	0					
ANR	8470286	ArgumentList	mem		8469547	1					
ANR	8470287	Argument	mem		8469547	0					
ANR	8470288	Identifier	mem		8469547	0					
ANR	8470289	Argument	sizeof ( gs_param_string ) * tokens		8469547	1					
ANR	8470290	MultiplicativeExpression	sizeof ( gs_param_string ) * tokens		8469547	0		*			
ANR	8470291	SizeofExpression	sizeof ( gs_param_string )		8469547	0					
ANR	8470292	Sizeof	sizeof		8469547	0					
ANR	8470293	SizeofOperand	gs_param_string		8469547	1					
ANR	8470294	Identifier	tokens		8469547	1					
ANR	8470295	Argument	"""param string array in distillerparams"""		8469547	2					
ANR	8470296	PrimaryExpression	"""param string array in distillerparams"""		8469547	0					
ANR	8470297	IfStatement	if ( array_data == NULL )		8469547	1					
ANR	8470298	Condition	array_data == NULL	740:24:24704:24721	8469547	0	True				
ANR	8470299	EqualityExpression	array_data == NULL		8469547	0		==			
ANR	8470300	Identifier	array_data		8469547	0					
ANR	8470301	Identifier	NULL		8469547	1					
ANR	8470302	CompoundStatement		147:43:5822:5822	8469547	1					
ANR	8470303	ExpressionStatement	code = gs_error_VMerror	741:24:24749:24772	8469547	0	True				
ANR	8470304	AssignmentExpression	code = gs_error_VMerror		8469547	0		=			
ANR	8470305	Identifier	code		8469547	0					
ANR	8470306	Identifier	gs_error_VMerror		8469547	1					
ANR	8470307	BreakStatement	break ;	742:24:24798:24803	8469547	1	True				
ANR	8470308	ExpressionStatement	array_type = gs_param_type_string_array	744:20:24847:24886	8469547	2	True				
ANR	8470309	AssignmentExpression	array_type = gs_param_type_string_array		8469547	0		=			
ANR	8470310	Identifier	array_type		8469547	0					
ANR	8470311	Identifier	gs_param_type_string_array		8469547	1					
ANR	8470312	ExpressionStatement	parray = ( gs_param_string * ) array_data	746:16:24922:24960	8469547	21	True				
ANR	8470313	AssignmentExpression	parray = ( gs_param_string * ) array_data		8469547	0		=			
ANR	8470314	Identifier	parray		8469547	0					
ANR	8470315	CastExpression	( gs_param_string * ) array_data		8469547	1					
ANR	8470316	CastTarget	gs_param_string *		8469547	0					
ANR	8470317	Identifier	array_data		8469547	1					
ANR	8470318	ExpressionStatement	parray [ index ] . data = ( const byte * ) p1	747:16:24978:25015	8469547	22	True				
ANR	8470319	AssignmentExpression	parray [ index ] . data = ( const byte * ) p1		8469547	0		=			
ANR	8470320	MemberAccess	parray [ index ] . data		8469547	0					
ANR	8470321	ArrayIndexing	parray [ index ]		8469547	0					
ANR	8470322	Identifier	parray		8469547	0					
ANR	8470323	Identifier	index		8469547	1					
ANR	8470324	Identifier	data		8469547	1					
ANR	8470325	CastExpression	( const byte * ) p1		8469547	1					
ANR	8470326	CastTarget	const byte *		8469547	0					
ANR	8470327	Identifier	p1		8469547	1					
ANR	8470328	WhileStatement	while ( * p1 != ' ' && * p1 != 0x00 )		8469547	23					
ANR	8470329	Condition	* p1 != ' ' && * p1 != 0x00	748:23:25040:25064	8469547	0	True				
ANR	8470330	AndExpression	* p1 != ' ' && * p1 != 0x00		8469547	0		&&			
ANR	8470331	EqualityExpression	* p1 != ' '		8469547	0		!=			
ANR	8470332	UnaryOperationExpression	* p1		8469547	0					
ANR	8470333	UnaryOperator	*		8469547	0					
ANR	8470334	Identifier	p1		8469547	1					
ANR	8470335	PrimaryExpression	' '		8469547	1					
ANR	8470336	EqualityExpression	* p1 != 0x00		8469547	1		!=			
ANR	8470337	UnaryOperationExpression	* p1		8469547	0					
ANR	8470338	UnaryOperator	*		8469547	0					
ANR	8470339	Identifier	p1		8469547	1					
ANR	8470340	PrimaryExpression	0x00		8469547	1					
ANR	8470341	ExpressionStatement	p1 ++	749:20:25087:25091	8469547	1	True				
ANR	8470342	PostIncDecOperationExpression	p1 ++		8469547	0					
ANR	8470343	Identifier	p1		8469547	0					
ANR	8470344	IncDec	++		8469547	1					
ANR	8470345	IfStatement	if ( * p1 == 0x00 )		8469547	24					
ANR	8470346	Condition	* p1 == 0x00	750:20:25113:25123	8469547	0	True				
ANR	8470347	EqualityExpression	* p1 == 0x00		8469547	0		==			
ANR	8470348	UnaryOperationExpression	* p1		8469547	0					
ANR	8470349	UnaryOperator	*		8469547	0					
ANR	8470350	Identifier	p1		8469547	1					
ANR	8470351	PrimaryExpression	0x00		8469547	1					
ANR	8470352	ReturnStatement	return - 1 ;	751:20:25146:25155	8469547	1	True				
ANR	8470353	UnaryOperationExpression	- 1		8469547	0					
ANR	8470354	UnaryOperator	-		8469547	0					
ANR	8470355	PrimaryExpression	1		8469547	1					
ANR	8470356	ExpressionStatement	* p1 ++ = 0x00	752:16:25173:25185	8469547	25	True				
ANR	8470357	AssignmentExpression	* p1 ++ = 0x00		8469547	0		=			
ANR	8470358	UnaryOperationExpression	* p1 ++		8469547	0					
ANR	8470359	UnaryOperator	*		8469547	0					
ANR	8470360	PostIncDecOperationExpression	p1 ++		8469547	1					
ANR	8470361	Identifier	p1		8469547	0					
ANR	8470362	IncDec	++		8469547	1					
ANR	8470363	PrimaryExpression	0x00		8469547	1					
ANR	8470364	ExpressionStatement	parray [ index ] . size = strlen ( ( char * ) ( parray [ index ] . data ) )	753:16:25203:25260	8469547	26	True				
ANR	8470365	AssignmentExpression	parray [ index ] . size = strlen ( ( char * ) ( parray [ index ] . data ) )		8469547	0		=			
ANR	8470366	MemberAccess	parray [ index ] . size		8469547	0					
ANR	8470367	ArrayIndexing	parray [ index ]		8469547	0					
ANR	8470368	Identifier	parray		8469547	0					
ANR	8470369	Identifier	index		8469547	1					
ANR	8470370	Identifier	size		8469547	1					
ANR	8470371	CallExpression	strlen ( ( char * ) ( parray [ index ] . data ) )		8469547	1					
ANR	8470372	Callee	strlen		8469547	0					
ANR	8470373	Identifier	strlen		8469547	0					
ANR	8470374	ArgumentList	( char * ) ( parray [ index ] . data )		8469547	1					
ANR	8470375	Argument	( char * ) ( parray [ index ] . data )		8469547	0					
ANR	8470376	CastExpression	( char * ) ( parray [ index ] . data )		8469547	0					
ANR	8470377	CastTarget	char *		8469547	0					
ANR	8470378	MemberAccess	parray [ index ] . data		8469547	1					
ANR	8470379	ArrayIndexing	parray [ index ]		8469547	0					
ANR	8470380	Identifier	parray		8469547	0					
ANR	8470381	Identifier	index		8469547	1					
ANR	8470382	Identifier	data		8469547	1					
ANR	8470383	ExpressionStatement	parray [ index ++ ] . persistent = false	754:16:25278:25312	8469547	27	True				
ANR	8470384	AssignmentExpression	parray [ index ++ ] . persistent = false		8469547	0		=			
ANR	8470385	MemberAccess	parray [ index ++ ] . persistent		8469547	0					
ANR	8470386	ArrayIndexing	parray [ index ++ ]		8469547	0					
ANR	8470387	Identifier	parray		8469547	0					
ANR	8470388	PostIncDecOperationExpression	index ++		8469547	1					
ANR	8470389	Identifier	index		8469547	0					
ANR	8470390	IncDec	++		8469547	1					
ANR	8470391	Identifier	persistent		8469547	1					
ANR	8470392	Identifier	false		8469547	1					
ANR	8470393	BreakStatement	break ;	755:16:25330:25335	8469547	28	True				
ANR	8470394	Label	case '(' :	757:12:25350:25358	8469547	29	True				
ANR	8470395	IfStatement	if ( array_type != gs_param_type_null && array_type != gs_param_type_string_array )		8469547	30					
ANR	8470396	Condition	array_type != gs_param_type_null && array_type != gs_param_type_string_array	758:20:25380:25455	8469547	0	True				
ANR	8470397	AndExpression	array_type != gs_param_type_null && array_type != gs_param_type_string_array		8469547	0		&&			
ANR	8470398	EqualityExpression	array_type != gs_param_type_null		8469547	0		!=			
ANR	8470399	Identifier	array_type		8469547	0					
ANR	8470400	Identifier	gs_param_type_null		8469547	1					
ANR	8470401	EqualityExpression	array_type != gs_param_type_string_array		8469547	1		!=			
ANR	8470402	Identifier	array_type		8469547	0					
ANR	8470403	Identifier	gs_param_type_string_array		8469547	1					
ANR	8470404	CompoundStatement		165:98:6557:6557	8469547	1					
ANR	8470405	ExpressionStatement	code = gs_error_typecheck	759:20:25480:25505	8469547	0	True				
ANR	8470406	AssignmentExpression	code = gs_error_typecheck		8469547	0		=			
ANR	8470407	Identifier	code		8469547	0					
ANR	8470408	Identifier	gs_error_typecheck		8469547	1					
ANR	8470409	BreakStatement	break ;	760:20:25527:25532	8469547	1	True				
ANR	8470410	IfStatement	if ( array_type == gs_param_type_null )		8469547	31					
ANR	8470411	Condition	array_type == gs_param_type_null	762:20:25572:25603	8469547	0	True				
ANR	8470412	EqualityExpression	array_type == gs_param_type_null		8469547	0		==			
ANR	8470413	Identifier	array_type		8469547	0					
ANR	8470414	Identifier	gs_param_type_null		8469547	1					
ANR	8470415	CompoundStatement		169:54:6705:6705	8469547	1					
ANR	8470416	ExpressionStatement	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"	763:20:25628:25743	8469547	0	True				
ANR	8470417	AssignmentExpression	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	0		=			
ANR	8470418	Identifier	array_data		8469547	0					
ANR	8470419	CastExpression	"( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8470420	CastTarget	char *		8469547	0					
ANR	8470421	CallExpression	"gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8470422	Callee	gs_alloc_bytes		8469547	0					
ANR	8470423	Identifier	gs_alloc_bytes		8469547	0					
ANR	8470424	ArgumentList	mem		8469547	1					
ANR	8470425	Argument	mem		8469547	0					
ANR	8470426	Identifier	mem		8469547	0					
ANR	8470427	Argument	sizeof ( gs_param_string ) * tokens		8469547	1					
ANR	8470428	MultiplicativeExpression	sizeof ( gs_param_string ) * tokens		8469547	0		*			
ANR	8470429	SizeofExpression	sizeof ( gs_param_string )		8469547	0					
ANR	8470430	Sizeof	sizeof		8469547	0					
ANR	8470431	SizeofOperand	gs_param_string		8469547	1					
ANR	8470432	Identifier	tokens		8469547	1					
ANR	8470433	Argument	"""param string array in distillerparams"""		8469547	2					
ANR	8470434	PrimaryExpression	"""param string array in distillerparams"""		8469547	0					
ANR	8470435	IfStatement	if ( array_data == NULL )		8469547	1					
ANR	8470436	Condition	array_data == NULL	764:24:25769:25786	8469547	0	True				
ANR	8470437	EqualityExpression	array_data == NULL		8469547	0		==			
ANR	8470438	Identifier	array_data		8469547	0					
ANR	8470439	Identifier	NULL		8469547	1					
ANR	8470440	CompoundStatement		171:43:6887:6887	8469547	1					
ANR	8470441	ExpressionStatement	code = gs_error_VMerror	765:24:25814:25837	8469547	0	True				
ANR	8470442	AssignmentExpression	code = gs_error_VMerror		8469547	0		=			
ANR	8470443	Identifier	code		8469547	0					
ANR	8470444	Identifier	gs_error_VMerror		8469547	1					
ANR	8470445	BreakStatement	break ;	766:24:25863:25868	8469547	1	True				
ANR	8470446	ExpressionStatement	array_type = gs_param_type_string_array	768:20:25912:25951	8469547	2	True				
ANR	8470447	AssignmentExpression	array_type = gs_param_type_string_array		8469547	0		=			
ANR	8470448	Identifier	array_type		8469547	0					
ANR	8470449	Identifier	gs_param_type_string_array		8469547	1					
ANR	8470450	ExpressionStatement	parray = ( gs_param_string * ) array_data	770:16:25987:26025	8469547	32	True				
ANR	8470451	AssignmentExpression	parray = ( gs_param_string * ) array_data		8469547	0		=			
ANR	8470452	Identifier	parray		8469547	0					
ANR	8470453	CastExpression	( gs_param_string * ) array_data		8469547	1					
ANR	8470454	CastTarget	gs_param_string *		8469547	0					
ANR	8470455	Identifier	array_data		8469547	1					
ANR	8470456	ExpressionStatement	parray [ index ] . data = ( const byte * ) p1	771:16:26043:26080	8469547	33	True				
ANR	8470457	AssignmentExpression	parray [ index ] . data = ( const byte * ) p1		8469547	0		=			
ANR	8470458	MemberAccess	parray [ index ] . data		8469547	0					
ANR	8470459	ArrayIndexing	parray [ index ]		8469547	0					
ANR	8470460	Identifier	parray		8469547	0					
ANR	8470461	Identifier	index		8469547	1					
ANR	8470462	Identifier	data		8469547	1					
ANR	8470463	CastExpression	( const byte * ) p1		8469547	1					
ANR	8470464	CastTarget	const byte *		8469547	0					
ANR	8470465	Identifier	p1		8469547	1					
ANR	8470466	WhileStatement	while ( * p1 != ')' && * p1 != 0x00 )		8469547	34					
ANR	8470467	Condition	* p1 != ')' && * p1 != 0x00	772:23:26105:26129	8469547	0	True				
ANR	8470468	AndExpression	* p1 != ')' && * p1 != 0x00		8469547	0		&&			
ANR	8470469	EqualityExpression	* p1 != ')'		8469547	0		!=			
ANR	8470470	UnaryOperationExpression	* p1		8469547	0					
ANR	8470471	UnaryOperator	*		8469547	0					
ANR	8470472	Identifier	p1		8469547	1					
ANR	8470473	PrimaryExpression	')'		8469547	1					
ANR	8470474	EqualityExpression	* p1 != 0x00		8469547	1		!=			
ANR	8470475	UnaryOperationExpression	* p1		8469547	0					
ANR	8470476	UnaryOperator	*		8469547	0					
ANR	8470477	Identifier	p1		8469547	1					
ANR	8470478	PrimaryExpression	0x00		8469547	1					
ANR	8470479	ExpressionStatement	p1 ++	773:20:26152:26156	8469547	1	True				
ANR	8470480	PostIncDecOperationExpression	p1 ++		8469547	0					
ANR	8470481	Identifier	p1		8469547	0					
ANR	8470482	IncDec	++		8469547	1					
ANR	8470483	IfStatement	if ( * p1 == 0x00 )		8469547	35					
ANR	8470484	Condition	* p1 == 0x00	774:20:26178:26188	8469547	0	True				
ANR	8470485	EqualityExpression	* p1 == 0x00		8469547	0		==			
ANR	8470486	UnaryOperationExpression	* p1		8469547	0					
ANR	8470487	UnaryOperator	*		8469547	0					
ANR	8470488	Identifier	p1		8469547	1					
ANR	8470489	PrimaryExpression	0x00		8469547	1					
ANR	8470490	ReturnStatement	return - 1 ;	775:20:26211:26220	8469547	1	True				
ANR	8470491	UnaryOperationExpression	- 1		8469547	0					
ANR	8470492	UnaryOperator	-		8469547	0					
ANR	8470493	PrimaryExpression	1		8469547	1					
ANR	8470494	ExpressionStatement	* p1 ++ = 0x00	776:16:26238:26250	8469547	36	True				
ANR	8470495	AssignmentExpression	* p1 ++ = 0x00		8469547	0		=			
ANR	8470496	UnaryOperationExpression	* p1 ++		8469547	0					
ANR	8470497	UnaryOperator	*		8469547	0					
ANR	8470498	PostIncDecOperationExpression	p1 ++		8469547	1					
ANR	8470499	Identifier	p1		8469547	0					
ANR	8470500	IncDec	++		8469547	1					
ANR	8470501	PrimaryExpression	0x00		8469547	1					
ANR	8470502	ExpressionStatement	parray [ index ] . size = strlen ( ( char * ) ( parray [ index ] . data ) )	777:16:26268:26325	8469547	37	True				
ANR	8470503	AssignmentExpression	parray [ index ] . size = strlen ( ( char * ) ( parray [ index ] . data ) )		8469547	0		=			
ANR	8470504	MemberAccess	parray [ index ] . size		8469547	0					
ANR	8470505	ArrayIndexing	parray [ index ]		8469547	0					
ANR	8470506	Identifier	parray		8469547	0					
ANR	8470507	Identifier	index		8469547	1					
ANR	8470508	Identifier	size		8469547	1					
ANR	8470509	CallExpression	strlen ( ( char * ) ( parray [ index ] . data ) )		8469547	1					
ANR	8470510	Callee	strlen		8469547	0					
ANR	8470511	Identifier	strlen		8469547	0					
ANR	8470512	ArgumentList	( char * ) ( parray [ index ] . data )		8469547	1					
ANR	8470513	Argument	( char * ) ( parray [ index ] . data )		8469547	0					
ANR	8470514	CastExpression	( char * ) ( parray [ index ] . data )		8469547	0					
ANR	8470515	CastTarget	char *		8469547	0					
ANR	8470516	MemberAccess	parray [ index ] . data		8469547	1					
ANR	8470517	ArrayIndexing	parray [ index ]		8469547	0					
ANR	8470518	Identifier	parray		8469547	0					
ANR	8470519	Identifier	index		8469547	1					
ANR	8470520	Identifier	data		8469547	1					
ANR	8470521	ExpressionStatement	parray [ index ++ ] . persistent = false	778:16:26343:26377	8469547	38	True				
ANR	8470522	AssignmentExpression	parray [ index ++ ] . persistent = false		8469547	0		=			
ANR	8470523	MemberAccess	parray [ index ++ ] . persistent		8469547	0					
ANR	8470524	ArrayIndexing	parray [ index ++ ]		8469547	0					
ANR	8470525	Identifier	parray		8469547	0					
ANR	8470526	PostIncDecOperationExpression	index ++		8469547	1					
ANR	8470527	Identifier	index		8469547	0					
ANR	8470528	IncDec	++		8469547	1					
ANR	8470529	Identifier	persistent		8469547	1					
ANR	8470530	Identifier	false		8469547	1					
ANR	8470531	BreakStatement	break ;	779:16:26395:26400	8469547	39	True				
ANR	8470532	Label	case '[' :	780:12:26414:26422	8469547	40	True				
ANR	8470533	ExpressionStatement	code = gs_error_typecheck	782:16:26491:26516	8469547	41	True				
ANR	8470534	AssignmentExpression	code = gs_error_typecheck		8469547	0		=			
ANR	8470535	Identifier	code		8469547	0					
ANR	8470536	Identifier	gs_error_typecheck		8469547	1					
ANR	8470537	BreakStatement	break ;	783:16:26534:26539	8469547	42	True				
ANR	8470538	Label	case '0' :	784:12:26553:26561	8469547	43	True				
ANR	8470539	Label	case '1' :	785:12:26575:26583	8469547	44	True				
ANR	8470540	Label	case '2' :	786:12:26597:26605	8469547	45	True				
ANR	8470541	Label	case '3' :	787:12:26619:26627	8469547	46	True				
ANR	8470542	Label	case '4' :	788:12:26641:26649	8469547	47	True				
ANR	8470543	Label	case '5' :	789:12:26663:26671	8469547	48	True				
ANR	8470544	Label	case '6' :	790:12:26685:26693	8469547	49	True				
ANR	8470545	Label	case '7' :	791:12:26707:26715	8469547	50	True				
ANR	8470546	Label	case '8' :	792:12:26729:26737	8469547	51	True				
ANR	8470547	Label	case '9' :	793:12:26751:26759	8469547	52	True				
ANR	8470548	Label	case '.' :	794:12:26773:26781	8469547	53	True				
ANR	8470549	IfStatement	if ( array_type == gs_param_type_string_array )		8469547	54					
ANR	8470550	Condition	array_type == gs_param_type_string_array	795:20:26803:26842	8469547	0	True				
ANR	8470551	EqualityExpression	array_type == gs_param_type_string_array		8469547	0		==			
ANR	8470552	Identifier	array_type		8469547	0					
ANR	8470553	Identifier	gs_param_type_string_array		8469547	1					
ANR	8470554	CompoundStatement		202:62:7944:7944	8469547	1					
ANR	8470555	ExpressionStatement	code = gs_error_typecheck	796:20:26867:26892	8469547	0	True				
ANR	8470556	AssignmentExpression	code = gs_error_typecheck		8469547	0		=			
ANR	8470557	Identifier	code		8469547	0					
ANR	8470558	Identifier	gs_error_typecheck		8469547	1					
ANR	8470559	BreakStatement	break ;	797:20:26914:26919	8469547	1	True				
ANR	8470560	ElseStatement	else		8469547	0					
ANR	8470561	CompoundStatement		209:20:8171:8183	8469547	0					
ANR	8470562	IdentifierDeclStatement	int integer = 1 ;	799:20:26966:26981	8469547	0	True				
ANR	8470563	IdentifierDecl	integer = 1		8469547	0					
ANR	8470564	IdentifierDeclType	int		8469547	0					
ANR	8470565	Identifier	integer		8469547	1					
ANR	8470566	AssignmentExpression	integer = 1		8469547	2		=			
ANR	8470567	Identifier	integer		8469547	0					
ANR	8470568	PrimaryExpression	1		8469547	1					
ANR	8470569	IdentifierDeclStatement	char * c = p1 ;	800:20:27003:27015	8469547	1	True				
ANR	8470570	IdentifierDecl	* c = p1		8469547	0					
ANR	8470571	IdentifierDeclType	char *		8469547	0					
ANR	8470572	Identifier	c		8469547	1					
ANR	8470573	AssignmentExpression	* c = p1		8469547	2		=			
ANR	8470574	Identifier	p1		8469547	0					
ANR	8470575	Identifier	p1		8469547	1					
ANR	8470576	IdentifierDeclStatement	float * floats ;	801:20:27037:27050	8469547	2	True				
ANR	8470577	IdentifierDecl	* floats		8469547	0					
ANR	8470578	IdentifierDeclType	float *		8469547	0					
ANR	8470579	Identifier	floats		8469547	1					
ANR	8470580	IdentifierDeclStatement	"int * ints , i ;"	802:20:27072:27084	8469547	3	True				
ANR	8470581	IdentifierDecl	* ints		8469547	0					
ANR	8470582	IdentifierDeclType	int *		8469547	0					
ANR	8470583	Identifier	ints		8469547	1					
ANR	8470584	IdentifierDecl	i		8469547	1					
ANR	8470585	IdentifierDeclType	int		8469547	0					
ANR	8470586	Identifier	i		8469547	1					
ANR	8470587	ExpressionStatement	integer = 1	804:20:27107:27118	8469547	4	True				
ANR	8470588	AssignmentExpression	integer = 1		8469547	0		=			
ANR	8470589	Identifier	integer		8469547	0					
ANR	8470590	PrimaryExpression	1		8469547	1					
ANR	8470591	WhileStatement	while ( * p1 != 0x00 && ( ( * p1 >= '0' && * p1 <= '9' ) || * p1 == '.' ) )		8469547	5					
ANR	8470592	Condition	* p1 != 0x00 && ( ( * p1 >= '0' && * p1 <= '9' ) || * p1 == '.' )	805:27:27147:27203	8469547	0	True				
ANR	8470593	AndExpression	* p1 != 0x00 && ( ( * p1 >= '0' && * p1 <= '9' ) || * p1 == '.' )		8469547	0		&&			
ANR	8470594	EqualityExpression	* p1 != 0x00		8469547	0		!=			
ANR	8470595	UnaryOperationExpression	* p1		8469547	0					
ANR	8470596	UnaryOperator	*		8469547	0					
ANR	8470597	Identifier	p1		8469547	1					
ANR	8470598	PrimaryExpression	0x00		8469547	1					
ANR	8470599	OrExpression	( * p1 >= '0' && * p1 <= '9' ) || * p1 == '.'		8469547	1		||			
ANR	8470600	AndExpression	* p1 >= '0' && * p1 <= '9'		8469547	0		&&			
ANR	8470601	RelationalExpression	* p1 >= '0'		8469547	0		>=			
ANR	8470602	UnaryOperationExpression	* p1		8469547	0					
ANR	8470603	UnaryOperator	*		8469547	0					
ANR	8470604	Identifier	p1		8469547	1					
ANR	8470605	PrimaryExpression	'0'		8469547	1					
ANR	8470606	RelationalExpression	* p1 <= '9'		8469547	1		<=			
ANR	8470607	UnaryOperationExpression	* p1		8469547	0					
ANR	8470608	UnaryOperator	*		8469547	0					
ANR	8470609	Identifier	p1		8469547	1					
ANR	8470610	PrimaryExpression	'9'		8469547	1					
ANR	8470611	EqualityExpression	* p1 == '.'		8469547	1		==			
ANR	8470612	UnaryOperationExpression	* p1		8469547	0					
ANR	8470613	UnaryOperator	*		8469547	0					
ANR	8470614	Identifier	p1		8469547	1					
ANR	8470615	PrimaryExpression	'.'		8469547	1					
ANR	8470616	CompoundStatement		212:86:8305:8305	8469547	1					
ANR	8470617	IfStatement	if ( * p1 == '.' )		8469547	0					
ANR	8470618	Condition	* p1 == '.'	806:28:27236:27245	8469547	0	True				
ANR	8470619	EqualityExpression	* p1 == '.'		8469547	0		==			
ANR	8470620	UnaryOperationExpression	* p1		8469547	0					
ANR	8470621	UnaryOperator	*		8469547	0					
ANR	8470622	Identifier	p1		8469547	1					
ANR	8470623	PrimaryExpression	'.'		8469547	1					
ANR	8470624	ExpressionStatement	integer = 0	807:28:27276:27287	8469547	1	True				
ANR	8470625	AssignmentExpression	integer = 0		8469547	0		=			
ANR	8470626	Identifier	integer		8469547	0					
ANR	8470627	PrimaryExpression	0		8469547	1					
ANR	8470628	ExpressionStatement	p1 ++	808:24:27313:27317	8469547	1	True				
ANR	8470629	PostIncDecOperationExpression	p1 ++		8469547	0					
ANR	8470630	Identifier	p1		8469547	0					
ANR	8470631	IncDec	++		8469547	1					
ANR	8470632	IfStatement	if ( * p1 == 0x00 )		8469547	6					
ANR	8470633	Condition	* p1 == 0x00	810:24:27365:27375	8469547	0	True				
ANR	8470634	EqualityExpression	* p1 == 0x00		8469547	0		==			
ANR	8470635	UnaryOperationExpression	* p1		8469547	0					
ANR	8470636	UnaryOperator	*		8469547	0					
ANR	8470637	Identifier	p1		8469547	1					
ANR	8470638	PrimaryExpression	0x00		8469547	1					
ANR	8470639	ReturnStatement	return - 1 ;	811:24:27402:27411	8469547	1	True				
ANR	8470640	UnaryOperationExpression	- 1		8469547	0					
ANR	8470641	UnaryOperator	-		8469547	0					
ANR	8470642	PrimaryExpression	1		8469547	1					
ANR	8470643	ExpressionStatement	* p1 ++ = 0x00	812:20:27433:27445	8469547	7	True				
ANR	8470644	AssignmentExpression	* p1 ++ = 0x00		8469547	0		=			
ANR	8470645	UnaryOperationExpression	* p1 ++		8469547	0					
ANR	8470646	UnaryOperator	*		8469547	0					
ANR	8470647	PostIncDecOperationExpression	p1 ++		8469547	1					
ANR	8470648	Identifier	p1		8469547	0					
ANR	8470649	IncDec	++		8469547	1					
ANR	8470650	PrimaryExpression	0x00		8469547	1					
ANR	8470651	IfStatement	if ( array_type == gs_param_type_null )		8469547	8					
ANR	8470652	Condition	array_type == gs_param_type_null	814:24:27472:27503	8469547	0	True				
ANR	8470653	EqualityExpression	array_type == gs_param_type_null		8469547	0		==			
ANR	8470654	Identifier	array_type		8469547	0					
ANR	8470655	Identifier	gs_param_type_null		8469547	1					
ANR	8470656	CompoundStatement		221:58:8605:8605	8469547	1					
ANR	8470657	IfStatement	if ( integer )		8469547	0					
ANR	8470658	Condition	integer	815:28:27536:27542	8469547	0	True				
ANR	8470659	Identifier	integer		8469547	0					
ANR	8470660	CompoundStatement		222:37:8644:8644	8469547	1					
ANR	8470661	ExpressionStatement	"ints = ( int * ) gs_alloc_bytes ( mem , sizeof ( int ) * tokens , ""param string array in distillerparams"" )"	816:28:27575:27671	8469547	0	True				
ANR	8470662	AssignmentExpression	"ints = ( int * ) gs_alloc_bytes ( mem , sizeof ( int ) * tokens , ""param string array in distillerparams"" )"		8469547	0		=			
ANR	8470663	Identifier	ints		8469547	0					
ANR	8470664	CastExpression	"( int * ) gs_alloc_bytes ( mem , sizeof ( int ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8470665	CastTarget	int *		8469547	0					
ANR	8470666	CallExpression	"gs_alloc_bytes ( mem , sizeof ( int ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8470667	Callee	gs_alloc_bytes		8469547	0					
ANR	8470668	Identifier	gs_alloc_bytes		8469547	0					
ANR	8470669	ArgumentList	mem		8469547	1					
ANR	8470670	Argument	mem		8469547	0					
ANR	8470671	Identifier	mem		8469547	0					
ANR	8470672	Argument	sizeof ( int ) * tokens		8469547	1					
ANR	8470673	MultiplicativeExpression	sizeof ( int ) * tokens		8469547	0		*			
ANR	8470674	SizeofExpression	sizeof ( int )		8469547	0					
ANR	8470675	Sizeof	sizeof		8469547	0					
ANR	8470676	SizeofOperand	int		8469547	1					
ANR	8470677	Identifier	tokens		8469547	1					
ANR	8470678	Argument	"""param string array in distillerparams"""		8469547	2					
ANR	8470679	PrimaryExpression	"""param string array in distillerparams"""		8469547	0					
ANR	8470680	IfStatement	if ( ints == NULL )		8469547	1					
ANR	8470681	Condition	ints == NULL	817:32:27705:27716	8469547	0	True				
ANR	8470682	EqualityExpression	ints == NULL		8469547	0		==			
ANR	8470683	Identifier	ints		8469547	0					
ANR	8470684	Identifier	NULL		8469547	1					
ANR	8470685	CompoundStatement		224:45:8817:8817	8469547	1					
ANR	8470686	ExpressionStatement	code = gs_error_VMerror	818:32:27752:27775	8469547	0	True				
ANR	8470687	AssignmentExpression	code = gs_error_VMerror		8469547	0		=			
ANR	8470688	Identifier	code		8469547	0					
ANR	8470689	Identifier	gs_error_VMerror		8469547	1					
ANR	8470690	BreakStatement	break ;	819:32:27809:27814	8469547	1	True				
ANR	8470691	ExpressionStatement	array_type = gs_param_type_int_array	821:28:27874:27910	8469547	2	True				
ANR	8470692	AssignmentExpression	array_type = gs_param_type_int_array		8469547	0		=			
ANR	8470693	Identifier	array_type		8469547	0					
ANR	8470694	Identifier	gs_param_type_int_array		8469547	1					
ANR	8470695	ExpressionStatement	array_data = ( char * ) ints	822:28:27940:27965	8469547	3	True				
ANR	8470696	AssignmentExpression	array_data = ( char * ) ints		8469547	0		=			
ANR	8470697	Identifier	array_data		8469547	0					
ANR	8470698	CastExpression	( char * ) ints		8469547	1					
ANR	8470699	CastTarget	char *		8469547	0					
ANR	8470700	Identifier	ints		8469547	1					
ANR	8470701	ElseStatement	else		8469547	0					
ANR	8470702	CompoundStatement		230:31:9097:9097	8469547	0					
ANR	8470703	ExpressionStatement	"floats = ( float * ) gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"	824:28:28028:28130	8469547	0	True				
ANR	8470704	AssignmentExpression	"floats = ( float * ) gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"		8469547	0		=			
ANR	8470705	Identifier	floats		8469547	0					
ANR	8470706	CastExpression	"( float * ) gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8470707	CastTarget	float *		8469547	0					
ANR	8470708	CallExpression	"gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8470709	Callee	gs_alloc_bytes		8469547	0					
ANR	8470710	Identifier	gs_alloc_bytes		8469547	0					
ANR	8470711	ArgumentList	mem		8469547	1					
ANR	8470712	Argument	mem		8469547	0					
ANR	8470713	Identifier	mem		8469547	0					
ANR	8470714	Argument	sizeof ( float ) * tokens		8469547	1					
ANR	8470715	MultiplicativeExpression	sizeof ( float ) * tokens		8469547	0		*			
ANR	8470716	SizeofExpression	sizeof ( float )		8469547	0					
ANR	8470717	Sizeof	sizeof		8469547	0					
ANR	8470718	SizeofOperand	float		8469547	1					
ANR	8470719	Identifier	tokens		8469547	1					
ANR	8470720	Argument	"""param string array in distillerparams"""		8469547	2					
ANR	8470721	PrimaryExpression	"""param string array in distillerparams"""		8469547	0					
ANR	8470722	IfStatement	if ( floats == NULL )		8469547	1					
ANR	8470723	Condition	floats == NULL	825:32:28164:28177	8469547	0	True				
ANR	8470724	EqualityExpression	floats == NULL		8469547	0		==			
ANR	8470725	Identifier	floats		8469547	0					
ANR	8470726	Identifier	NULL		8469547	1					
ANR	8470727	CompoundStatement		232:47:9278:9278	8469547	1					
ANR	8470728	ExpressionStatement	code = gs_error_VMerror	826:32:28213:28236	8469547	0	True				
ANR	8470729	AssignmentExpression	code = gs_error_VMerror		8469547	0		=			
ANR	8470730	Identifier	code		8469547	0					
ANR	8470731	Identifier	gs_error_VMerror		8469547	1					
ANR	8470732	BreakStatement	break ;	827:32:28270:28275	8469547	1	True				
ANR	8470733	ExpressionStatement	array_type = gs_param_type_float_array	829:28:28335:28373	8469547	2	True				
ANR	8470734	AssignmentExpression	array_type = gs_param_type_float_array		8469547	0		=			
ANR	8470735	Identifier	array_type		8469547	0					
ANR	8470736	Identifier	gs_param_type_float_array		8469547	1					
ANR	8470737	ExpressionStatement	array_data = ( char * ) floats	830:28:28403:28430	8469547	3	True				
ANR	8470738	AssignmentExpression	array_data = ( char * ) floats		8469547	0		=			
ANR	8470739	Identifier	array_data		8469547	0					
ANR	8470740	CastExpression	( char * ) floats		8469547	1					
ANR	8470741	CastTarget	char *		8469547	0					
ANR	8470742	Identifier	floats		8469547	1					
ANR	8470743	IfStatement	if ( array_type == gs_param_type_int_array && ! integer )		8469547	9					
ANR	8470744	Condition	array_type == gs_param_type_int_array && ! integer	833:24:28504:28552	8469547	0	True				
ANR	8470745	AndExpression	array_type == gs_param_type_int_array && ! integer		8469547	0		&&			
ANR	8470746	EqualityExpression	array_type == gs_param_type_int_array		8469547	0		==			
ANR	8470747	Identifier	array_type		8469547	0					
ANR	8470748	Identifier	gs_param_type_int_array		8469547	1					
ANR	8470749	UnaryOperationExpression	! integer		8469547	1					
ANR	8470750	UnaryOperator	!		8469547	0					
ANR	8470751	Identifier	integer		8469547	1					
ANR	8470752	CompoundStatement		240:75:9654:9654	8469547	1					
ANR	8470753	ExpressionStatement	ints = ( int * ) array_data	834:24:28581:28605	8469547	0	True				
ANR	8470754	AssignmentExpression	ints = ( int * ) array_data		8469547	0		=			
ANR	8470755	Identifier	ints		8469547	0					
ANR	8470756	CastExpression	( int * ) array_data		8469547	1					
ANR	8470757	CastTarget	int *		8469547	0					
ANR	8470758	Identifier	array_data		8469547	1					
ANR	8470759	ExpressionStatement	"floats = ( float * ) gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"	835:24:28631:28733	8469547	1	True				
ANR	8470760	AssignmentExpression	"floats = ( float * ) gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"		8469547	0		=			
ANR	8470761	Identifier	floats		8469547	0					
ANR	8470762	CastExpression	"( float * ) gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8470763	CastTarget	float *		8469547	0					
ANR	8470764	CallExpression	"gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"		8469547	1					
ANR	8470765	Callee	gs_alloc_bytes		8469547	0					
ANR	8470766	Identifier	gs_alloc_bytes		8469547	0					
ANR	8470767	ArgumentList	mem		8469547	1					
ANR	8470768	Argument	mem		8469547	0					
ANR	8470769	Identifier	mem		8469547	0					
ANR	8470770	Argument	sizeof ( float ) * tokens		8469547	1					
ANR	8470771	MultiplicativeExpression	sizeof ( float ) * tokens		8469547	0		*			
ANR	8470772	SizeofExpression	sizeof ( float )		8469547	0					
ANR	8470773	Sizeof	sizeof		8469547	0					
ANR	8470774	SizeofOperand	float		8469547	1					
ANR	8470775	Identifier	tokens		8469547	1					
ANR	8470776	Argument	"""param string array in distillerparams"""		8469547	2					
ANR	8470777	PrimaryExpression	"""param string array in distillerparams"""		8469547	0					
ANR	8470778	IfStatement	if ( floats == NULL )		8469547	2					
ANR	8470779	Condition	floats == NULL	836:28:28763:28776	8469547	0	True				
ANR	8470780	EqualityExpression	floats == NULL		8469547	0		==			
ANR	8470781	Identifier	floats		8469547	0					
ANR	8470782	Identifier	NULL		8469547	1					
ANR	8470783	CompoundStatement		243:43:9877:9877	8469547	1					
ANR	8470784	ExpressionStatement	code = gs_error_VMerror	837:28:28808:28831	8469547	0	True				
ANR	8470785	AssignmentExpression	code = gs_error_VMerror		8469547	0		=			
ANR	8470786	Identifier	code		8469547	0					
ANR	8470787	Identifier	gs_error_VMerror		8469547	1					
ANR	8470788	BreakStatement	break ;	838:28:28861:28866	8469547	1	True				
ANR	8470789	ExpressionStatement	array_type = gs_param_type_float_array	840:24:28918:28956	8469547	3	True				
ANR	8470790	AssignmentExpression	array_type = gs_param_type_float_array		8469547	0		=			
ANR	8470791	Identifier	array_type		8469547	0					
ANR	8470792	Identifier	gs_param_type_float_array		8469547	1					
ANR	8470793	ForStatement	for ( i = 0 ; i < index ; i ++ )		8469547	4					
ANR	8470794	ForInit	i = 0 ;	841:29:28987:28990	8469547	0	True				
ANR	8470795	AssignmentExpression	i = 0		8469547	0		=			
ANR	8470796	Identifier	i		8469547	0					
ANR	8470797	PrimaryExpression	0		8469547	1					
ANR	8470798	Condition	i < index	841:33:28991:28997	8469547	1	True				
ANR	8470799	RelationalExpression	i < index		8469547	0		<			
ANR	8470800	Identifier	i		8469547	0					
ANR	8470801	Identifier	index		8469547	1					
ANR	8470802	PostIncDecOperationExpression	i ++	841:41:28999:29001	8469547	2	True				
ANR	8470803	Identifier	i		8469547	0					
ANR	8470804	IncDec	++		8469547	1					
ANR	8470805	CompoundStatement		248:45:10102:10102	8469547	3					
ANR	8470806	ExpressionStatement	floats [ i ] = ( float ) ( ints [ i ] )	842:28:29033:29061	8469547	0	True				
ANR	8470807	AssignmentExpression	floats [ i ] = ( float ) ( ints [ i ] )		8469547	0		=			
ANR	8470808	ArrayIndexing	floats [ i ]		8469547	0					
ANR	8470809	Identifier	floats		8469547	0					
ANR	8470810	Identifier	i		8469547	1					
ANR	8470811	CastExpression	( float ) ( ints [ i ] )		8469547	1					
ANR	8470812	CastTarget	float		8469547	0					
ANR	8470813	ArrayIndexing	ints [ i ]		8469547	1					
ANR	8470814	Identifier	ints		8469547	0					
ANR	8470815	Identifier	i		8469547	1					
ANR	8470816	ExpressionStatement	"gs_free_object ( mem , ints , ""param string array in distillerparams"" )"	844:24:29113:29179	8469547	5	True				
ANR	8470817	CallExpression	"gs_free_object ( mem , ints , ""param string array in distillerparams"" )"		8469547	0					
ANR	8470818	Callee	gs_free_object		8469547	0					
ANR	8470819	Identifier	gs_free_object		8469547	0					
ANR	8470820	ArgumentList	mem		8469547	1					
ANR	8470821	Argument	mem		8469547	0					
ANR	8470822	Identifier	mem		8469547	0					
ANR	8470823	Argument	ints		8469547	1					
ANR	8470824	Identifier	ints		8469547	0					
ANR	8470825	Argument	"""param string array in distillerparams"""		8469547	2					
ANR	8470826	PrimaryExpression	"""param string array in distillerparams"""		8469547	0					
ANR	8470827	ExpressionStatement	array_data = ( char * ) floats	845:24:29205:29232	8469547	6	True				
ANR	8470828	AssignmentExpression	array_data = ( char * ) floats		8469547	0		=			
ANR	8470829	Identifier	array_data		8469547	0					
ANR	8470830	CastExpression	( char * ) floats		8469547	1					
ANR	8470831	CastTarget	char *		8469547	0					
ANR	8470832	Identifier	floats		8469547	1					
ANR	8470833	IfStatement	if ( array_type == gs_param_type_int_array )		8469547	10					
ANR	8470834	Condition	array_type == gs_param_type_int_array	847:24:29280:29316	8469547	0	True				
ANR	8470835	EqualityExpression	array_type == gs_param_type_int_array		8469547	0		==			
ANR	8470836	Identifier	array_type		8469547	0					
ANR	8470837	Identifier	gs_param_type_int_array		8469547	1					
ANR	8470838	CompoundStatement		254:63:10418:10418	8469547	1					
ANR	8470839	ExpressionStatement	ints = ( int * ) array_data	848:24:29345:29369	8469547	0	True				
ANR	8470840	AssignmentExpression	ints = ( int * ) array_data		8469547	0		=			
ANR	8470841	Identifier	ints		8469547	0					
ANR	8470842	CastExpression	( int * ) array_data		8469547	1					
ANR	8470843	CastTarget	int *		8469547	0					
ANR	8470844	Identifier	array_data		8469547	1					
ANR	8470845	ExpressionStatement	ints [ index ++ ] = ( int ) atoi ( c )	849:24:29395:29423	8469547	1	True				
ANR	8470846	AssignmentExpression	ints [ index ++ ] = ( int ) atoi ( c )		8469547	0		=			
ANR	8470847	ArrayIndexing	ints [ index ++ ]		8469547	0					
ANR	8470848	Identifier	ints		8469547	0					
ANR	8470849	PostIncDecOperationExpression	index ++		8469547	1					
ANR	8470850	Identifier	index		8469547	0					
ANR	8470851	IncDec	++		8469547	1					
ANR	8470852	CastExpression	( int ) atoi ( c )		8469547	1					
ANR	8470853	CastTarget	int		8469547	0					
ANR	8470854	CallExpression	atoi ( c )		8469547	1					
ANR	8470855	Callee	atoi		8469547	0					
ANR	8470856	Identifier	atoi		8469547	0					
ANR	8470857	ArgumentList	c		8469547	1					
ANR	8470858	Argument	c		8469547	0					
ANR	8470859	Identifier	c		8469547	0					
ANR	8470860	ElseStatement	else		8469547	0					
ANR	8470861	CompoundStatement		257:27:10551:10551	8469547	0					
ANR	8470862	ExpressionStatement	floats = ( float * ) array_data	851:24:29478:29506	8469547	0	True				
ANR	8470863	AssignmentExpression	floats = ( float * ) array_data		8469547	0		=			
ANR	8470864	Identifier	floats		8469547	0					
ANR	8470865	CastExpression	( float * ) array_data		8469547	1					
ANR	8470866	CastTarget	float *		8469547	0					
ANR	8470867	Identifier	array_data		8469547	1					
ANR	8470868	ExpressionStatement	floats [ index ++ ] = ( float ) atof ( c )	852:24:29532:29564	8469547	1	True				
ANR	8470869	AssignmentExpression	floats [ index ++ ] = ( float ) atof ( c )		8469547	0		=			
ANR	8470870	ArrayIndexing	floats [ index ++ ]		8469547	0					
ANR	8470871	Identifier	floats		8469547	0					
ANR	8470872	PostIncDecOperationExpression	index ++		8469547	1					
ANR	8470873	Identifier	index		8469547	0					
ANR	8470874	IncDec	++		8469547	1					
ANR	8470875	CastExpression	( float ) atof ( c )		8469547	1					
ANR	8470876	CastTarget	float		8469547	0					
ANR	8470877	CallExpression	atof ( c )		8469547	1					
ANR	8470878	Callee	atof		8469547	0					
ANR	8470879	Identifier	atof		8469547	0					
ANR	8470880	ArgumentList	c		8469547	1					
ANR	8470881	Argument	c		8469547	0					
ANR	8470882	Identifier	c		8469547	0					
ANR	8470883	BreakStatement	break ;	855:16:29622:29627	8469547	55	True				
ANR	8470884	Label	default :	856:12:29641:29648	8469547	56	True				
ANR	8470885	Identifier	default		8469547	0					
ANR	8470886	ExpressionStatement	code = gs_error_typecheck	857:16:29666:29691	8469547	57	True				
ANR	8470887	AssignmentExpression	code = gs_error_typecheck		8469547	0		=			
ANR	8470888	Identifier	code		8469547	0					
ANR	8470889	Identifier	gs_error_typecheck		8469547	1					
ANR	8470890	BreakStatement	break ;	858:16:29709:29714	8469547	58	True				
ANR	8470891	SwitchStatement	switch ( array_type )		8469547	14					
ANR	8470892	Condition	array_type	865:11:29889:29898	8469547	0	True				
ANR	8470893	Identifier	array_type		8469547	0					
ANR	8470894	CompoundStatement		272:23:11000:11000	8469547	1					
ANR	8470895	Label	case gs_param_type_string_array :	866:8:29911:29942	8469547	0	True				
ANR	8470896	Identifier	gs_param_type_string_array		8469547	0					
ANR	8470897	ExpressionStatement	string_array . data = ( const gs_param_string * ) array_data	867:12:29956:30011	8469547	1	True				
ANR	8470898	AssignmentExpression	string_array . data = ( const gs_param_string * ) array_data		8469547	0		=			
ANR	8470899	MemberAccess	string_array . data		8469547	0					
ANR	8470900	Identifier	string_array		8469547	0					
ANR	8470901	Identifier	data		8469547	1					
ANR	8470902	CastExpression	( const gs_param_string * ) array_data		8469547	1					
ANR	8470903	CastTarget	const gs_param_string *		8469547	0					
ANR	8470904	Identifier	array_data		8469547	1					
ANR	8470905	ExpressionStatement	string_array . persistent = 0	868:12:30025:30052	8469547	2	True				
ANR	8470906	AssignmentExpression	string_array . persistent = 0		8469547	0		=			
ANR	8470907	MemberAccess	string_array . persistent		8469547	0					
ANR	8470908	Identifier	string_array		8469547	0					
ANR	8470909	Identifier	persistent		8469547	1					
ANR	8470910	PrimaryExpression	0		8469547	1					
ANR	8470911	ExpressionStatement	string_array . size = tokens	869:12:30066:30092	8469547	3	True				
ANR	8470912	AssignmentExpression	string_array . size = tokens		8469547	0		=			
ANR	8470913	MemberAccess	string_array . size		8469547	0					
ANR	8470914	Identifier	string_array		8469547	0					
ANR	8470915	Identifier	size		8469547	1					
ANR	8470916	Identifier	tokens		8469547	1					
ANR	8470917	ExpressionStatement	"code = param_write_string_array ( ( gs_param_list * ) plist , key , & string_array )"	870:12:30106:30181	8469547	4	True				
ANR	8470918	AssignmentExpression	"code = param_write_string_array ( ( gs_param_list * ) plist , key , & string_array )"		8469547	0		=			
ANR	8470919	Identifier	code		8469547	0					
ANR	8470920	CallExpression	"param_write_string_array ( ( gs_param_list * ) plist , key , & string_array )"		8469547	1					
ANR	8470921	Callee	param_write_string_array		8469547	0					
ANR	8470922	Identifier	param_write_string_array		8469547	0					
ANR	8470923	ArgumentList	( gs_param_list * ) plist		8469547	1					
ANR	8470924	Argument	( gs_param_list * ) plist		8469547	0					
ANR	8470925	CastExpression	( gs_param_list * ) plist		8469547	0					
ANR	8470926	CastTarget	gs_param_list *		8469547	0					
ANR	8470927	Identifier	plist		8469547	1					
ANR	8470928	Argument	key		8469547	1					
ANR	8470929	Identifier	key		8469547	0					
ANR	8470930	Argument	& string_array		8469547	2					
ANR	8470931	UnaryOperationExpression	& string_array		8469547	0					
ANR	8470932	UnaryOperator	&		8469547	0					
ANR	8470933	Identifier	string_array		8469547	1					
ANR	8470934	BreakStatement	break ;	871:12:30195:30200	8469547	5	True				
ANR	8470935	Label	case gs_param_type_int_array :	872:8:30210:30238	8469547	6	True				
ANR	8470936	Identifier	gs_param_type_int_array		8469547	0					
ANR	8470937	ExpressionStatement	int_array . data = ( const int * ) array_data	873:12:30252:30292	8469547	7	True				
ANR	8470938	AssignmentExpression	int_array . data = ( const int * ) array_data		8469547	0		=			
ANR	8470939	MemberAccess	int_array . data		8469547	0					
ANR	8470940	Identifier	int_array		8469547	0					
ANR	8470941	Identifier	data		8469547	1					
ANR	8470942	CastExpression	( const int * ) array_data		8469547	1					
ANR	8470943	CastTarget	const int *		8469547	0					
ANR	8470944	Identifier	array_data		8469547	1					
ANR	8470945	ExpressionStatement	int_array . persistent = 0	874:12:30306:30330	8469547	8	True				
ANR	8470946	AssignmentExpression	int_array . persistent = 0		8469547	0		=			
ANR	8470947	MemberAccess	int_array . persistent		8469547	0					
ANR	8470948	Identifier	int_array		8469547	0					
ANR	8470949	Identifier	persistent		8469547	1					
ANR	8470950	PrimaryExpression	0		8469547	1					
ANR	8470951	ExpressionStatement	int_array . size = tokens	875:12:30344:30367	8469547	9	True				
ANR	8470952	AssignmentExpression	int_array . size = tokens		8469547	0		=			
ANR	8470953	MemberAccess	int_array . size		8469547	0					
ANR	8470954	Identifier	int_array		8469547	0					
ANR	8470955	Identifier	size		8469547	1					
ANR	8470956	Identifier	tokens		8469547	1					
ANR	8470957	ExpressionStatement	"code = param_write_int_array ( ( gs_param_list * ) plist , key , & int_array )"	876:12:30381:30450	8469547	10	True				
ANR	8470958	AssignmentExpression	"code = param_write_int_array ( ( gs_param_list * ) plist , key , & int_array )"		8469547	0		=			
ANR	8470959	Identifier	code		8469547	0					
ANR	8470960	CallExpression	"param_write_int_array ( ( gs_param_list * ) plist , key , & int_array )"		8469547	1					
ANR	8470961	Callee	param_write_int_array		8469547	0					
ANR	8470962	Identifier	param_write_int_array		8469547	0					
ANR	8470963	ArgumentList	( gs_param_list * ) plist		8469547	1					
ANR	8470964	Argument	( gs_param_list * ) plist		8469547	0					
ANR	8470965	CastExpression	( gs_param_list * ) plist		8469547	0					
ANR	8470966	CastTarget	gs_param_list *		8469547	0					
ANR	8470967	Identifier	plist		8469547	1					
ANR	8470968	Argument	key		8469547	1					
ANR	8470969	Identifier	key		8469547	0					
ANR	8470970	Argument	& int_array		8469547	2					
ANR	8470971	UnaryOperationExpression	& int_array		8469547	0					
ANR	8470972	UnaryOperator	&		8469547	0					
ANR	8470973	Identifier	int_array		8469547	1					
ANR	8470974	BreakStatement	break ;	877:12:30464:30469	8469547	11	True				
ANR	8470975	Label	case gs_param_type_float_array :	878:8:30479:30509	8469547	12	True				
ANR	8470976	Identifier	gs_param_type_float_array		8469547	0					
ANR	8470977	ExpressionStatement	float_array . data = ( const float * ) array_data	879:12:30523:30567	8469547	13	True				
ANR	8470978	AssignmentExpression	float_array . data = ( const float * ) array_data		8469547	0		=			
ANR	8470979	MemberAccess	float_array . data		8469547	0					
ANR	8470980	Identifier	float_array		8469547	0					
ANR	8470981	Identifier	data		8469547	1					
ANR	8470982	CastExpression	( const float * ) array_data		8469547	1					
ANR	8470983	CastTarget	const float *		8469547	0					
ANR	8470984	Identifier	array_data		8469547	1					
ANR	8470985	ExpressionStatement	float_array . persistent = 0	880:12:30581:30607	8469547	14	True				
ANR	8470986	AssignmentExpression	float_array . persistent = 0		8469547	0		=			
ANR	8470987	MemberAccess	float_array . persistent		8469547	0					
ANR	8470988	Identifier	float_array		8469547	0					
ANR	8470989	Identifier	persistent		8469547	1					
ANR	8470990	PrimaryExpression	0		8469547	1					
ANR	8470991	ExpressionStatement	float_array . size = tokens	881:12:30621:30646	8469547	15	True				
ANR	8470992	AssignmentExpression	float_array . size = tokens		8469547	0		=			
ANR	8470993	MemberAccess	float_array . size		8469547	0					
ANR	8470994	Identifier	float_array		8469547	0					
ANR	8470995	Identifier	size		8469547	1					
ANR	8470996	Identifier	tokens		8469547	1					
ANR	8470997	ExpressionStatement	"code = param_write_float_array ( ( gs_param_list * ) plist , key , & float_array )"	882:12:30660:30733	8469547	16	True				
ANR	8470998	AssignmentExpression	"code = param_write_float_array ( ( gs_param_list * ) plist , key , & float_array )"		8469547	0		=			
ANR	8470999	Identifier	code		8469547	0					
ANR	8471000	CallExpression	"param_write_float_array ( ( gs_param_list * ) plist , key , & float_array )"		8469547	1					
ANR	8471001	Callee	param_write_float_array		8469547	0					
ANR	8471002	Identifier	param_write_float_array		8469547	0					
ANR	8471003	ArgumentList	( gs_param_list * ) plist		8469547	1					
ANR	8471004	Argument	( gs_param_list * ) plist		8469547	0					
ANR	8471005	CastExpression	( gs_param_list * ) plist		8469547	0					
ANR	8471006	CastTarget	gs_param_list *		8469547	0					
ANR	8471007	Identifier	plist		8469547	1					
ANR	8471008	Argument	key		8469547	1					
ANR	8471009	Identifier	key		8469547	0					
ANR	8471010	Argument	& float_array		8469547	2					
ANR	8471011	UnaryOperationExpression	& float_array		8469547	0					
ANR	8471012	UnaryOperator	&		8469547	0					
ANR	8471013	Identifier	float_array		8469547	1					
ANR	8471014	BreakStatement	break ;	883:12:30747:30752	8469547	17	True				
ANR	8471015	Label	default :	885:8:30763:30770	8469547	18	True				
ANR	8471016	Identifier	default		8469547	0					
ANR	8471017	BreakStatement	break ;	886:12:30784:30789	8469547	19	True				
ANR	8471018	ExpressionStatement	"gs_free_object ( mem , array_data , ""param string array in distillerparams"" )"	890:4:30886:30958	8469547	15	True				
ANR	8471019	CallExpression	"gs_free_object ( mem , array_data , ""param string array in distillerparams"" )"		8469547	0					
ANR	8471020	Callee	gs_free_object		8469547	0					
ANR	8471021	Identifier	gs_free_object		8469547	0					
ANR	8471022	ArgumentList	mem		8469547	1					
ANR	8471023	Argument	mem		8469547	0					
ANR	8471024	Identifier	mem		8469547	0					
ANR	8471025	Argument	array_data		8469547	1					
ANR	8471026	Identifier	array_data		8469547	0					
ANR	8471027	Argument	"""param string array in distillerparams"""		8469547	2					
ANR	8471028	PrimaryExpression	"""param string array in distillerparams"""		8469547	0					
ANR	8471029	ExpressionStatement	* p = p1 + 1	893:4:31058:31069	8469547	16	True				
ANR	8471030	AssignmentExpression	* p = p1 + 1		8469547	0		=			
ANR	8471031	UnaryOperationExpression	* p		8469547	0					
ANR	8471032	UnaryOperator	*		8469547	0					
ANR	8471033	Identifier	p		8469547	1					
ANR	8471034	AdditiveExpression	p1 + 1		8469547	1		+			
ANR	8471035	Identifier	p1		8469547	0					
ANR	8471036	PrimaryExpression	1		8469547	1					
ANR	8471037	ReturnStatement	return code ;	895:4:31076:31087	8469547	17	True				
ANR	8471038	Identifier	code		8469547	0					
ANR	8471039	ReturnType	static int		8469547	1					
ANR	8471040	Identifier	pjl_dist_process_array		8469547	2					
ANR	8471041	ParameterList	"gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p"		8469547	3					
ANR	8471042	Parameter	gs_memory_t * mem	593:34:18829:18844	8469547	0	True				
ANR	8471043	ParameterType	gs_memory_t *		8469547	0					
ANR	8471044	Identifier	mem		8469547	1					
ANR	8471045	Parameter	gs_c_param_list * plist	593:52:18847:18868	8469547	1	True				
ANR	8471046	ParameterType	gs_c_param_list *		8469547	0					
ANR	8471047	Identifier	plist		8469547	1					
ANR	8471048	Parameter	gs_param_name key	593:76:18871:18887	8469547	2	True				
ANR	8471049	ParameterType	gs_param_name		8469547	0					
ANR	8471050	Identifier	key		8469547	1					
ANR	8471051	Parameter	char * * p	593:95:18890:18897	8469547	3	True				
ANR	8471052	ParameterType	char * *		8469547	0					
ANR	8471053	Identifier	p		8469547	1					
ANR	8471054	CFGEntryNode	ENTRY		8469547		True				
ANR	8471055	CFGExitNode	EXIT		8469547		True				
ANR	8471056	Symbol	& float_array		8469547						
ANR	8471057	Symbol	gs_param_type_null		8469547						
ANR	8471058	Symbol	data		8469547						
ANR	8471059	Symbol	* ints		8469547						
ANR	8471060	Symbol	gs_param_type_float_array		8469547						
ANR	8471061	Symbol	* index		8469547						
ANR	8471062	Symbol	* p1 ++		8469547						
ANR	8471063	Symbol	integer		8469547						
ANR	8471064	Symbol	dest		8469547						
ANR	8471065	Symbol	nested		8469547						
ANR	8471066	Symbol	* src		8469547						
ANR	8471067	Symbol	strncmp		8469547						
ANR	8471068	Symbol	strlen		8469547						
ANR	8471069	Symbol	* dest ++		8469547						
ANR	8471070	Symbol	int_array . size		8469547						
ANR	8471071	Symbol	float_array . size		8469547						
ANR	8471072	Symbol	* floats		8469547						
ANR	8471073	Symbol	float_array . persistent		8469547						
ANR	8471074	Symbol	float_array		8469547						
ANR	8471075	Symbol	NULL		8469547						
ANR	8471076	Symbol	floats		8469547						
ANR	8471077	Symbol	index		8469547						
ANR	8471078	Symbol	parray [ index ++ ] . persistent		8469547						
ANR	8471079	Symbol	string_array . persistent		8469547						
ANR	8471080	Symbol	param_write_float_array		8469547						
ANR	8471081	Symbol	float_array . data		8469547						
ANR	8471082	Symbol	parray [ index ] . data		8469547						
ANR	8471083	Symbol	p1		8469547						
ANR	8471084	Symbol	string_array . data		8469547						
ANR	8471085	Symbol	parray		8469547						
ANR	8471086	Symbol	code		8469547						
ANR	8471087	Symbol	* dest		8469547						
ANR	8471088	Symbol	int_array		8469547						
ANR	8471089	Symbol	count_tokens		8469547						
ANR	8471090	Symbol	param_write_string_array		8469547						
ANR	8471091	Symbol	plist		8469547						
ANR	8471092	Symbol	gs_error_typecheck		8469547						
ANR	8471093	Symbol	mem		8469547						
ANR	8471094	Symbol	ints		8469547						
ANR	8471095	Symbol	param_write_int_array		8469547						
ANR	8471096	Symbol	tokens		8469547						
ANR	8471097	Symbol	array_type		8469547						
ANR	8471098	Symbol	gs_param_type_int_array		8469547						
ANR	8471099	Symbol	key		8469547						
ANR	8471100	Symbol	parray [ index ] . size		8469547						
ANR	8471101	Symbol	atoi		8469547						
ANR	8471102	Symbol	& int_array		8469547						
ANR	8471103	Symbol	gs_alloc_bytes		8469547						
ANR	8471104	Symbol	array_data		8469547						
ANR	8471105	Symbol	c		8469547						
ANR	8471106	Symbol	* p1		8469547						
ANR	8471107	Symbol	src		8469547						
ANR	8471108	Symbol	atof		8469547						
ANR	8471109	Symbol	start		8469547						
ANR	8471110	Symbol	false		8469547						
ANR	8471111	Symbol	int_array . persistent		8469547						
ANR	8471112	Symbol	i		8469547						
ANR	8471113	Symbol	& string_array		8469547						
ANR	8471114	Symbol	string_array		8469547						
ANR	8471115	Symbol	p		8469547						
ANR	8471116	Symbol	gs_error_VMerror		8469547						
ANR	8471117	Symbol	* i		8469547						
ANR	8471118	Symbol	* ( p1 + 1 )		8469547						
ANR	8471119	Symbol	gs_param_type_string_array		8469547						
ANR	8471120	Symbol	int_array . data		8469547						
ANR	8471121	Symbol	* p		8469547						
ANR	8471122	Symbol	* parray		8469547						
ANR	8471123	Symbol	string_array . size		8469547						
ANR	8471124	Function	pjl_dist_process_number	898:0:31092:31716							
ANR	8471125	FunctionDef	"pjl_dist_process_number (gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p)"		8471124	0					
ANR	8471126	CompoundStatement		899:0:31198:31716	8471124	0					
ANR	8471127	IdentifierDeclStatement	char * start = * p ;	900:4:31204:31220	8471124	0	True				
ANR	8471128	IdentifierDecl	* start = * p		8471124	0					
ANR	8471129	IdentifierDeclType	char *		8471124	0					
ANR	8471130	Identifier	start		8471124	1					
ANR	8471131	AssignmentExpression	* start = * p		8471124	2		=			
ANR	8471132	Identifier	start		8471124	0					
ANR	8471133	UnaryOperationExpression	* p		8471124	1					
ANR	8471134	UnaryOperator	*		8471124	0					
ANR	8471135	Identifier	p		8471124	1					
ANR	8471136	IdentifierDeclStatement	bool integer = true ;	901:4:31226:31245	8471124	1	True				
ANR	8471137	IdentifierDecl	integer = true		8471124	0					
ANR	8471138	IdentifierDeclType	bool		8471124	0					
ANR	8471139	Identifier	integer		8471124	1					
ANR	8471140	AssignmentExpression	integer = true		8471124	2		=			
ANR	8471141	Identifier	true		8471124	0					
ANR	8471142	Identifier	true		8471124	1					
ANR	8471143	IdentifierDeclStatement	int code = 0 ;	902:4:31251:31263	8471124	2	True				
ANR	8471144	IdentifierDecl	code = 0		8471124	0					
ANR	8471145	IdentifierDeclType	int		8471124	0					
ANR	8471146	Identifier	code		8471124	1					
ANR	8471147	AssignmentExpression	code = 0		8471124	2		=			
ANR	8471148	Identifier	code		8471124	0					
ANR	8471149	PrimaryExpression	0		8471124	1					
ANR	8471150	WhileStatement	while ( * * p != ' ' && * * p != 0x00 )		8471124	3					
ANR	8471151	Condition	* * p != ' ' && * * p != 0x00	904:11:31277:31301	8471124	0	True				
ANR	8471152	AndExpression	* * p != ' ' && * * p != 0x00		8471124	0		&&			
ANR	8471153	EqualityExpression	* * p != ' '		8471124	0		!=			
ANR	8471154	UnaryOperationExpression	* * p		8471124	0					
ANR	8471155	UnaryOperator	*		8471124	0					
ANR	8471156	UnaryOperationExpression	* p		8471124	1					
ANR	8471157	UnaryOperator	*		8471124	0					
ANR	8471158	Identifier	p		8471124	1					
ANR	8471159	PrimaryExpression	' '		8471124	1					
ANR	8471160	EqualityExpression	* * p != 0x00		8471124	1		!=			
ANR	8471161	UnaryOperationExpression	* * p		8471124	0					
ANR	8471162	UnaryOperator	*		8471124	0					
ANR	8471163	UnaryOperationExpression	* p		8471124	1					
ANR	8471164	UnaryOperator	*		8471124	0					
ANR	8471165	Identifier	p		8471124	1					
ANR	8471166	PrimaryExpression	0x00		8471124	1					
ANR	8471167	CompoundStatement		6:38:105:105	8471124	1					
ANR	8471168	IfStatement	if ( * * p == '.' )		8471124	0					
ANR	8471169	Condition	* * p == '.'	905:12:31318:31327	8471124	0	True				
ANR	8471170	EqualityExpression	* * p == '.'		8471124	0		==			
ANR	8471171	UnaryOperationExpression	* * p		8471124	0					
ANR	8471172	UnaryOperator	*		8471124	0					
ANR	8471173	UnaryOperationExpression	* p		8471124	1					
ANR	8471174	UnaryOperator	*		8471124	0					
ANR	8471175	Identifier	p		8471124	1					
ANR	8471176	PrimaryExpression	'.'		8471124	1					
ANR	8471177	ExpressionStatement	integer = false	906:12:31342:31357	8471124	1	True				
ANR	8471178	AssignmentExpression	integer = false		8471124	0		=			
ANR	8471179	Identifier	integer		8471124	0					
ANR	8471180	Identifier	false		8471124	1					
ANR	8471181	ExpressionStatement	( * p ) ++	908:8:31368:31374	8471124	1	True				
ANR	8471182	PostIncDecOperationExpression	( * p ) ++		8471124	0					
ANR	8471183	UnaryOperationExpression	* p		8471124	0					
ANR	8471184	UnaryOperator	*		8471124	0					
ANR	8471185	Identifier	p		8471124	1					
ANR	8471186	IncDec	++		8471124	1					
ANR	8471187	IfStatement	if ( * * p != 0x00 )		8471124	4					
ANR	8471188	Condition	* * p != 0x00	911:8:31391:31401	8471124	0	True				
ANR	8471189	EqualityExpression	* * p != 0x00		8471124	0		!=			
ANR	8471190	UnaryOperationExpression	* * p		8471124	0					
ANR	8471191	UnaryOperator	*		8471124	0					
ANR	8471192	UnaryOperationExpression	* p		8471124	1					
ANR	8471193	UnaryOperator	*		8471124	0					
ANR	8471194	Identifier	p		8471124	1					
ANR	8471195	PrimaryExpression	0x00		8471124	1					
ANR	8471196	CompoundStatement		13:21:205:205	8471124	1					
ANR	8471197	ExpressionStatement	* * p = 0x00	912:8:31414:31424	8471124	0	True				
ANR	8471198	AssignmentExpression	* * p = 0x00		8471124	0		=			
ANR	8471199	UnaryOperationExpression	* * p		8471124	0					
ANR	8471200	UnaryOperator	*		8471124	0					
ANR	8471201	UnaryOperationExpression	* p		8471124	1					
ANR	8471202	UnaryOperator	*		8471124	0					
ANR	8471203	Identifier	p		8471124	1					
ANR	8471204	PrimaryExpression	0x00		8471124	1					
ANR	8471205	ExpressionStatement	( * p ) ++	913:8:31434:31440	8471124	1	True				
ANR	8471206	PostIncDecOperationExpression	( * p ) ++		8471124	0					
ANR	8471207	UnaryOperationExpression	* p		8471124	0					
ANR	8471208	UnaryOperator	*		8471124	0					
ANR	8471209	Identifier	p		8471124	1					
ANR	8471210	IncDec	++		8471124	1					
ANR	8471211	IfStatement	if ( ! integer )		8471124	5					
ANR	8471212	Condition	! integer	916:8:31457:31464	8471124	0	True				
ANR	8471213	UnaryOperationExpression	! integer		8471124	0					
ANR	8471214	UnaryOperator	!		8471124	0					
ANR	8471215	Identifier	integer		8471124	1					
ANR	8471216	CompoundStatement		19:8:278:306	8471124	1					
ANR	8471217	IdentifierDeclStatement	float f = ( float ) atof ( start ) ;	917:8:31477:31505	8471124	0	True				
ANR	8471218	IdentifierDecl	f = ( float ) atof ( start )		8471124	0					
ANR	8471219	IdentifierDeclType	float		8471124	0					
ANR	8471220	Identifier	f		8471124	1					
ANR	8471221	AssignmentExpression	f = ( float ) atof ( start )		8471124	2		=			
ANR	8471222	Identifier	f		8471124	0					
ANR	8471223	CastExpression	( float ) atof ( start )		8471124	1					
ANR	8471224	CastTarget	float		8471124	0					
ANR	8471225	CallExpression	atof ( start )		8471124	1					
ANR	8471226	Callee	atof		8471124	0					
ANR	8471227	Identifier	atof		8471124	0					
ANR	8471228	ArgumentList	start		8471124	1					
ANR	8471229	Argument	start		8471124	0					
ANR	8471230	Identifier	start		8471124	0					
ANR	8471231	ExpressionStatement	"code = param_write_float ( ( gs_param_list * ) plist , key , ( float * ) & f )"	918:8:31515:31581	8471124	1	True				
ANR	8471232	AssignmentExpression	"code = param_write_float ( ( gs_param_list * ) plist , key , ( float * ) & f )"		8471124	0		=			
ANR	8471233	Identifier	code		8471124	0					
ANR	8471234	CallExpression	"param_write_float ( ( gs_param_list * ) plist , key , ( float * ) & f )"		8471124	1					
ANR	8471235	Callee	param_write_float		8471124	0					
ANR	8471236	Identifier	param_write_float		8471124	0					
ANR	8471237	ArgumentList	( gs_param_list * ) plist		8471124	1					
ANR	8471238	Argument	( gs_param_list * ) plist		8471124	0					
ANR	8471239	CastExpression	( gs_param_list * ) plist		8471124	0					
ANR	8471240	CastTarget	gs_param_list *		8471124	0					
ANR	8471241	Identifier	plist		8471124	1					
ANR	8471242	Argument	key		8471124	1					
ANR	8471243	Identifier	key		8471124	0					
ANR	8471244	Argument	( float * ) & f		8471124	2					
ANR	8471245	CastExpression	( float * ) & f		8471124	0					
ANR	8471246	CastTarget	float *		8471124	0					
ANR	8471247	UnaryOperationExpression	& f		8471124	1					
ANR	8471248	UnaryOperator	&		8471124	0					
ANR	8471249	Identifier	f		8471124	1					
ANR	8471250	ElseStatement	else		8471124	0					
ANR	8471251	CompoundStatement		22:8:405:425	8471124	0					
ANR	8471252	IdentifierDeclStatement	long i = atol ( start ) ;	920:8:31604:31624	8471124	0	True				
ANR	8471253	IdentifierDecl	i = atol ( start )		8471124	0					
ANR	8471254	IdentifierDeclType	long		8471124	0					
ANR	8471255	Identifier	i		8471124	1					
ANR	8471256	AssignmentExpression	i = atol ( start )		8471124	2		=			
ANR	8471257	Identifier	i		8471124	0					
ANR	8471258	CallExpression	atol ( start )		8471124	1					
ANR	8471259	Callee	atol		8471124	0					
ANR	8471260	Identifier	atol		8471124	0					
ANR	8471261	ArgumentList	start		8471124	1					
ANR	8471262	Argument	start		8471124	0					
ANR	8471263	Identifier	start		8471124	0					
ANR	8471264	ExpressionStatement	"code = param_write_long ( ( gs_param_list * ) plist , key , & i )"	921:8:31634:31690	8471124	1	True				
ANR	8471265	AssignmentExpression	"code = param_write_long ( ( gs_param_list * ) plist , key , & i )"		8471124	0		=			
ANR	8471266	Identifier	code		8471124	0					
ANR	8471267	CallExpression	"param_write_long ( ( gs_param_list * ) plist , key , & i )"		8471124	1					
ANR	8471268	Callee	param_write_long		8471124	0					
ANR	8471269	Identifier	param_write_long		8471124	0					
ANR	8471270	ArgumentList	( gs_param_list * ) plist		8471124	1					
ANR	8471271	Argument	( gs_param_list * ) plist		8471124	0					
ANR	8471272	CastExpression	( gs_param_list * ) plist		8471124	0					
ANR	8471273	CastTarget	gs_param_list *		8471124	0					
ANR	8471274	Identifier	plist		8471124	1					
ANR	8471275	Argument	key		8471124	1					
ANR	8471276	Identifier	key		8471124	0					
ANR	8471277	Argument	& i		8471124	2					
ANR	8471278	UnaryOperationExpression	& i		8471124	0					
ANR	8471279	UnaryOperator	&		8471124	0					
ANR	8471280	Identifier	i		8471124	1					
ANR	8471281	ReturnStatement	return code ;	924:4:31703:31714	8471124	6	True				
ANR	8471282	Identifier	code		8471124	0					
ANR	8471283	ReturnType	static int		8471124	1					
ANR	8471284	Identifier	pjl_dist_process_number		8471124	2					
ANR	8471285	ParameterList	"gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p"		8471124	3					
ANR	8471286	Parameter	gs_memory_t * mem	898:35:31127:31142	8471124	0	True				
ANR	8471287	ParameterType	gs_memory_t *		8471124	0					
ANR	8471288	Identifier	mem		8471124	1					
ANR	8471289	Parameter	gs_c_param_list * plist	898:53:31145:31166	8471124	1	True				
ANR	8471290	ParameterType	gs_c_param_list *		8471124	0					
ANR	8471291	Identifier	plist		8471124	1					
ANR	8471292	Parameter	gs_param_name key	898:77:31169:31185	8471124	2	True				
ANR	8471293	ParameterType	gs_param_name		8471124	0					
ANR	8471294	Identifier	key		8471124	1					
ANR	8471295	Parameter	char * * p	898:96:31188:31195	8471124	3	True				
ANR	8471296	ParameterType	char * *		8471124	0					
ANR	8471297	Identifier	p		8471124	1					
ANR	8471298	CFGEntryNode	ENTRY		8471124		True				
ANR	8471299	CFGExitNode	EXIT		8471124		True				
ANR	8471300	Symbol	param_write_float		8471124						
ANR	8471301	Symbol	code		8471124						
ANR	8471302	Symbol	f		8471124						
ANR	8471303	Symbol	atof		8471124						
ANR	8471304	Symbol	start		8471124						
ANR	8471305	Symbol	false		8471124						
ANR	8471306	Symbol	i		8471124						
ANR	8471307	Symbol	integer		8471124						
ANR	8471308	Symbol	& f		8471124						
ANR	8471309	Symbol	& i		8471124						
ANR	8471310	Symbol	p		8471124						
ANR	8471311	Symbol	plist		8471124						
ANR	8471312	Symbol	mem		8471124						
ANR	8471313	Symbol	true		8471124						
ANR	8471314	Symbol	* p		8471124						
ANR	8471315	Symbol	* * p		8471124						
ANR	8471316	Symbol	atol		8471124						
ANR	8471317	Symbol	key		8471124						
ANR	8471318	Symbol	param_write_long		8471124						
ANR	8471319	Function	pjl_dist_add_tokens_to_list	930:0:31812:34316							
ANR	8471320	FunctionDef	"pjl_dist_add_tokens_to_list (gs_param_list * plist , char * * p)"		8471319	0					
ANR	8471321	CompoundStatement		931:0:31883:34316	8471319	0					
ANR	8471322	IdentifierDeclStatement	char * p1 = * p ;	932:4:31889:31902	8471319	0	True				
ANR	8471323	IdentifierDecl	* p1 = * p		8471319	0					
ANR	8471324	IdentifierDeclType	char *		8471319	0					
ANR	8471325	Identifier	p1		8471319	1					
ANR	8471326	AssignmentExpression	* p1 = * p		8471319	2		=			
ANR	8471327	Identifier	p1		8471319	0					
ANR	8471328	UnaryOperationExpression	* p		8471319	1					
ANR	8471329	UnaryOperator	*		8471319	0					
ANR	8471330	Identifier	p		8471319	1					
ANR	8471331	IdentifierDeclStatement	int code = 0 ;	933:4:31908:31920	8471319	1	True				
ANR	8471332	IdentifierDecl	code = 0		8471319	0					
ANR	8471333	IdentifierDeclType	int		8471319	0					
ANR	8471334	Identifier	code		8471319	1					
ANR	8471335	AssignmentExpression	code = 0		8471319	2		=			
ANR	8471336	Identifier	code		8471319	0					
ANR	8471337	PrimaryExpression	0		8471319	1					
ANR	8471338	IdentifierDeclStatement	gs_param_name key = NULL ;	934:4:31926:31950	8471319	2	True				
ANR	8471339	IdentifierDecl	key = NULL		8471319	0					
ANR	8471340	IdentifierDeclType	gs_param_name		8471319	0					
ANR	8471341	Identifier	key		8471319	1					
ANR	8471342	AssignmentExpression	key = NULL		8471319	2		=			
ANR	8471343	Identifier	NULL		8471319	0					
ANR	8471344	Identifier	NULL		8471319	1					
ANR	8471345	WhileStatement	while ( * p1 != 0x00 )		8471319	3					
ANR	8471346	Condition	* p1 != 0x00	936:11:31964:31974	8471319	0	True				
ANR	8471347	EqualityExpression	* p1 != 0x00		8471319	0		!=			
ANR	8471348	UnaryOperationExpression	* p1		8471319	0					
ANR	8471349	UnaryOperator	*		8471319	0					
ANR	8471350	Identifier	p1		8471319	1					
ANR	8471351	PrimaryExpression	0x00		8471319	1					
ANR	8471352	CompoundStatement		6:23:92:92	8471319	1					
ANR	8471353	SwitchStatement	switch ( * p1 )		8471319	0					
ANR	8471354	Condition	* p1	937:16:31994:31996	8471319	0	True				
ANR	8471355	UnaryOperationExpression	* p1		8471319	0					
ANR	8471356	UnaryOperator	*		8471319	0					
ANR	8471357	Identifier	p1		8471319	1					
ANR	8471358	CompoundStatement		7:21:115:115	8471319	1					
ANR	8471359	Label	case ' ' :	938:12:32013:32021	8471319	0	True				
ANR	8471360	ExpressionStatement	p1 ++	939:16:32039:32043	8471319	1	True				
ANR	8471361	PostIncDecOperationExpression	p1 ++		8471319	0					
ANR	8471362	Identifier	p1		8471319	0					
ANR	8471363	IncDec	++		8471319	1					
ANR	8471364	BreakStatement	break ;	940:16:32061:32066	8471319	2	True				
ANR	8471365	Label	case 'f' :	941:12:32080:32088	8471319	3	True				
ANR	8471366	IfStatement	"if ( strncmp ( p1 , ""false"" , 5 ) == 0 )"		8471319	4					
ANR	8471367	Condition	"strncmp ( p1 , ""false"" , 5 ) == 0"	942:20:32110:32137	8471319	0	True				
ANR	8471368	EqualityExpression	"strncmp ( p1 , ""false"" , 5 ) == 0"		8471319	0		==			
ANR	8471369	CallExpression	"strncmp ( p1 , ""false"" , 5 )"		8471319	0					
ANR	8471370	Callee	strncmp		8471319	0					
ANR	8471371	Identifier	strncmp		8471319	0					
ANR	8471372	ArgumentList	p1		8471319	1					
ANR	8471373	Argument	p1		8471319	0					
ANR	8471374	Identifier	p1		8471319	0					
ANR	8471375	Argument	"""false"""		8471319	1					
ANR	8471376	PrimaryExpression	"""false"""		8471319	0					
ANR	8471377	Argument	5		8471319	2					
ANR	8471378	PrimaryExpression	5		8471319	0					
ANR	8471379	PrimaryExpression	0		8471319	1					
ANR	8471380	CompoundStatement		13:20:278:292	8471319	1					
ANR	8471381	IdentifierDeclStatement	bool t = false ;	943:20:32162:32176	8471319	0	True				
ANR	8471382	IdentifierDecl	t = false		8471319	0					
ANR	8471383	IdentifierDeclType	bool		8471319	0					
ANR	8471384	Identifier	t		8471319	1					
ANR	8471385	AssignmentExpression	t = false		8471319	2		=			
ANR	8471386	Identifier	false		8471319	0					
ANR	8471387	Identifier	false		8471319	1					
ANR	8471388	ExpressionStatement	"code = param_write_bool ( ( gs_param_list * ) plist , key , & t )"	944:20:32198:32254	8471319	1	True				
ANR	8471389	AssignmentExpression	"code = param_write_bool ( ( gs_param_list * ) plist , key , & t )"		8471319	0		=			
ANR	8471390	Identifier	code		8471319	0					
ANR	8471391	CallExpression	"param_write_bool ( ( gs_param_list * ) plist , key , & t )"		8471319	1					
ANR	8471392	Callee	param_write_bool		8471319	0					
ANR	8471393	Identifier	param_write_bool		8471319	0					
ANR	8471394	ArgumentList	( gs_param_list * ) plist		8471319	1					
ANR	8471395	Argument	( gs_param_list * ) plist		8471319	0					
ANR	8471396	CastExpression	( gs_param_list * ) plist		8471319	0					
ANR	8471397	CastTarget	gs_param_list *		8471319	0					
ANR	8471398	Identifier	plist		8471319	1					
ANR	8471399	Argument	key		8471319	1					
ANR	8471400	Identifier	key		8471319	0					
ANR	8471401	Argument	& t		8471319	2					
ANR	8471402	UnaryOperationExpression	& t		8471319	0					
ANR	8471403	UnaryOperator	&		8471319	0					
ANR	8471404	Identifier	t		8471319	1					
ANR	8471405	ExpressionStatement	p1 += 5	945:20:32276:32283	8471319	2	True				
ANR	8471406	AssignmentExpression	p1 += 5		8471319	0		+=			
ANR	8471407	Identifier	p1		8471319	0					
ANR	8471408	PrimaryExpression	5		8471319	1					
ANR	8471409	ExpressionStatement	key = NULL	946:20:32305:32315	8471319	3	True				
ANR	8471410	AssignmentExpression	key = NULL		8471319	0		=			
ANR	8471411	Identifier	key		8471319	0					
ANR	8471412	Identifier	NULL		8471319	1					
ANR	8471413	ElseStatement	else		8471319	0					
ANR	8471414	CompoundStatement		17:23:456:456	8471319	0					
ANR	8471415	ReturnStatement	return - 1 ;	948:20:32362:32371	8471319	0	True				
ANR	8471416	UnaryOperationExpression	- 1		8471319	0					
ANR	8471417	UnaryOperator	-		8471319	0					
ANR	8471418	PrimaryExpression	1		8471319	1					
ANR	8471419	BreakStatement	break ;	950:16:32407:32412	8471319	5	True				
ANR	8471420	Label	case 't' :	951:12:32426:32434	8471319	6	True				
ANR	8471421	IfStatement	"if ( strncmp ( p1 , ""true"" , 4 ) == 0 )"		8471319	7					
ANR	8471422	Condition	"strncmp ( p1 , ""true"" , 4 ) == 0"	952:20:32456:32482	8471319	0	True				
ANR	8471423	EqualityExpression	"strncmp ( p1 , ""true"" , 4 ) == 0"		8471319	0		==			
ANR	8471424	CallExpression	"strncmp ( p1 , ""true"" , 4 )"		8471319	0					
ANR	8471425	Callee	strncmp		8471319	0					
ANR	8471426	Identifier	strncmp		8471319	0					
ANR	8471427	ArgumentList	p1		8471319	1					
ANR	8471428	Argument	p1		8471319	0					
ANR	8471429	Identifier	p1		8471319	0					
ANR	8471430	Argument	"""true"""		8471319	1					
ANR	8471431	PrimaryExpression	"""true"""		8471319	0					
ANR	8471432	Argument	4		8471319	2					
ANR	8471433	PrimaryExpression	4		8471319	0					
ANR	8471434	PrimaryExpression	0		8471319	1					
ANR	8471435	CompoundStatement		23:20:623:636	8471319	1					
ANR	8471436	IdentifierDeclStatement	bool t = true ;	953:20:32507:32520	8471319	0	True				
ANR	8471437	IdentifierDecl	t = true		8471319	0					
ANR	8471438	IdentifierDeclType	bool		8471319	0					
ANR	8471439	Identifier	t		8471319	1					
ANR	8471440	AssignmentExpression	t = true		8471319	2		=			
ANR	8471441	Identifier	true		8471319	0					
ANR	8471442	Identifier	true		8471319	1					
ANR	8471443	ExpressionStatement	"code = param_write_bool ( ( gs_param_list * ) plist , key , & t )"	954:20:32542:32598	8471319	1	True				
ANR	8471444	AssignmentExpression	"code = param_write_bool ( ( gs_param_list * ) plist , key , & t )"		8471319	0		=			
ANR	8471445	Identifier	code		8471319	0					
ANR	8471446	CallExpression	"param_write_bool ( ( gs_param_list * ) plist , key , & t )"		8471319	1					
ANR	8471447	Callee	param_write_bool		8471319	0					
ANR	8471448	Identifier	param_write_bool		8471319	0					
ANR	8471449	ArgumentList	( gs_param_list * ) plist		8471319	1					
ANR	8471450	Argument	( gs_param_list * ) plist		8471319	0					
ANR	8471451	CastExpression	( gs_param_list * ) plist		8471319	0					
ANR	8471452	CastTarget	gs_param_list *		8471319	0					
ANR	8471453	Identifier	plist		8471319	1					
ANR	8471454	Argument	key		8471319	1					
ANR	8471455	Identifier	key		8471319	0					
ANR	8471456	Argument	& t		8471319	2					
ANR	8471457	UnaryOperationExpression	& t		8471319	0					
ANR	8471458	UnaryOperator	&		8471319	0					
ANR	8471459	Identifier	t		8471319	1					
ANR	8471460	ExpressionStatement	p1 += 4	955:20:32620:32627	8471319	2	True				
ANR	8471461	AssignmentExpression	p1 += 4		8471319	0		+=			
ANR	8471462	Identifier	p1		8471319	0					
ANR	8471463	PrimaryExpression	4		8471319	1					
ANR	8471464	ExpressionStatement	key = NULL	956:20:32649:32659	8471319	3	True				
ANR	8471465	AssignmentExpression	key = NULL		8471319	0		=			
ANR	8471466	Identifier	key		8471319	0					
ANR	8471467	Identifier	NULL		8471319	1					
ANR	8471468	ElseStatement	else		8471319	0					
ANR	8471469	CompoundStatement		27:23:800:800	8471319	0					
ANR	8471470	ReturnStatement	return - 1 ;	958:20:32706:32715	8471319	0	True				
ANR	8471471	UnaryOperationExpression	- 1		8471319	0					
ANR	8471472	UnaryOperator	-		8471319	0					
ANR	8471473	PrimaryExpression	1		8471319	1					
ANR	8471474	BreakStatement	break ;	960:16:32751:32756	8471319	8	True				
ANR	8471475	Label	case '<' :	961:12:32770:32778	8471319	9	True				
ANR	8471476	IfStatement	if ( key == NULL )		8471319	10					
ANR	8471477	Condition	key == NULL	962:20:32800:32810	8471319	0	True				
ANR	8471478	EqualityExpression	key == NULL		8471319	0		==			
ANR	8471479	Identifier	key		8471319	0					
ANR	8471480	Identifier	NULL		8471319	1					
ANR	8471481	CompoundStatement		32:33:929:929	8471319	1					
ANR	8471482	ReturnStatement	return - 1 ;	963:20:32835:32844	8471319	0	True				
ANR	8471483	UnaryOperationExpression	- 1		8471319	0					
ANR	8471484	UnaryOperator	-		8471319	0					
ANR	8471485	PrimaryExpression	1		8471319	1					
ANR	8471486	ExpressionStatement	"code = pjl_dist_process_dict_or_hexstring ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"	965:16:32880:32972	8471319	11	True				
ANR	8471487	AssignmentExpression	"code = pjl_dist_process_dict_or_hexstring ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8471319	0		=			
ANR	8471488	Identifier	code		8471319	0					
ANR	8471489	CallExpression	"pjl_dist_process_dict_or_hexstring ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8471319	1					
ANR	8471490	Callee	pjl_dist_process_dict_or_hexstring		8471319	0					
ANR	8471491	Identifier	pjl_dist_process_dict_or_hexstring		8471319	0					
ANR	8471492	ArgumentList	plist -> memory		8471319	1					
ANR	8471493	Argument	plist -> memory		8471319	0					
ANR	8471494	PtrMemberAccess	plist -> memory		8471319	0					
ANR	8471495	Identifier	plist		8471319	0					
ANR	8471496	Identifier	memory		8471319	1					
ANR	8471497	Argument	( gs_c_param_list * ) plist		8471319	1					
ANR	8471498	CastExpression	( gs_c_param_list * ) plist		8471319	0					
ANR	8471499	CastTarget	gs_c_param_list *		8471319	0					
ANR	8471500	Identifier	plist		8471319	1					
ANR	8471501	Argument	key		8471319	2					
ANR	8471502	Identifier	key		8471319	0					
ANR	8471503	Argument	& p1		8471319	3					
ANR	8471504	UnaryOperationExpression	& p1		8471319	0					
ANR	8471505	UnaryOperator	&		8471319	0					
ANR	8471506	Identifier	p1		8471319	1					
ANR	8471507	ExpressionStatement	key = NULL	966:16:32990:33000	8471319	12	True				
ANR	8471508	AssignmentExpression	key = NULL		8471319	0		=			
ANR	8471509	Identifier	key		8471319	0					
ANR	8471510	Identifier	NULL		8471319	1					
ANR	8471511	BreakStatement	break ;	967:16:33018:33023	8471319	13	True				
ANR	8471512	Label	case '/' :	968:12:33037:33045	8471319	14	True				
ANR	8471513	ExpressionStatement	"code = pjl_dist_process_name ( plist -> memory , ( gs_c_param_list * ) plist , & key , & p1 )"	969:16:33063:33143	8471319	15	True				
ANR	8471514	AssignmentExpression	"code = pjl_dist_process_name ( plist -> memory , ( gs_c_param_list * ) plist , & key , & p1 )"		8471319	0		=			
ANR	8471515	Identifier	code		8471319	0					
ANR	8471516	CallExpression	"pjl_dist_process_name ( plist -> memory , ( gs_c_param_list * ) plist , & key , & p1 )"		8471319	1					
ANR	8471517	Callee	pjl_dist_process_name		8471319	0					
ANR	8471518	Identifier	pjl_dist_process_name		8471319	0					
ANR	8471519	ArgumentList	plist -> memory		8471319	1					
ANR	8471520	Argument	plist -> memory		8471319	0					
ANR	8471521	PtrMemberAccess	plist -> memory		8471319	0					
ANR	8471522	Identifier	plist		8471319	0					
ANR	8471523	Identifier	memory		8471319	1					
ANR	8471524	Argument	( gs_c_param_list * ) plist		8471319	1					
ANR	8471525	CastExpression	( gs_c_param_list * ) plist		8471319	0					
ANR	8471526	CastTarget	gs_c_param_list *		8471319	0					
ANR	8471527	Identifier	plist		8471319	1					
ANR	8471528	Argument	& key		8471319	2					
ANR	8471529	UnaryOperationExpression	& key		8471319	0					
ANR	8471530	UnaryOperator	&		8471319	0					
ANR	8471531	Identifier	key		8471319	1					
ANR	8471532	Argument	& p1		8471319	3					
ANR	8471533	UnaryOperationExpression	& p1		8471319	0					
ANR	8471534	UnaryOperator	&		8471319	0					
ANR	8471535	Identifier	p1		8471319	1					
ANR	8471536	BreakStatement	break ;	970:16:33161:33166	8471319	16	True				
ANR	8471537	Label	case '(' :	971:12:33180:33188	8471319	17	True				
ANR	8471538	IfStatement	if ( key == NULL )		8471319	18					
ANR	8471539	Condition	key == NULL	972:20:33210:33220	8471319	0	True				
ANR	8471540	EqualityExpression	key == NULL		8471319	0		==			
ANR	8471541	Identifier	key		8471319	0					
ANR	8471542	Identifier	NULL		8471319	1					
ANR	8471543	CompoundStatement		42:33:1339:1339	8471319	1					
ANR	8471544	ReturnStatement	return - 1 ;	973:20:33245:33254	8471319	0	True				
ANR	8471545	UnaryOperationExpression	- 1		8471319	0					
ANR	8471546	UnaryOperator	-		8471319	0					
ANR	8471547	PrimaryExpression	1		8471319	1					
ANR	8471548	ExpressionStatement	"code = pjl_dist_process_string ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"	975:16:33290:33371	8471319	19	True				
ANR	8471549	AssignmentExpression	"code = pjl_dist_process_string ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8471319	0		=			
ANR	8471550	Identifier	code		8471319	0					
ANR	8471551	CallExpression	"pjl_dist_process_string ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8471319	1					
ANR	8471552	Callee	pjl_dist_process_string		8471319	0					
ANR	8471553	Identifier	pjl_dist_process_string		8471319	0					
ANR	8471554	ArgumentList	plist -> memory		8471319	1					
ANR	8471555	Argument	plist -> memory		8471319	0					
ANR	8471556	PtrMemberAccess	plist -> memory		8471319	0					
ANR	8471557	Identifier	plist		8471319	0					
ANR	8471558	Identifier	memory		8471319	1					
ANR	8471559	Argument	( gs_c_param_list * ) plist		8471319	1					
ANR	8471560	CastExpression	( gs_c_param_list * ) plist		8471319	0					
ANR	8471561	CastTarget	gs_c_param_list *		8471319	0					
ANR	8471562	Identifier	plist		8471319	1					
ANR	8471563	Argument	key		8471319	2					
ANR	8471564	Identifier	key		8471319	0					
ANR	8471565	Argument	& p1		8471319	3					
ANR	8471566	UnaryOperationExpression	& p1		8471319	0					
ANR	8471567	UnaryOperator	&		8471319	0					
ANR	8471568	Identifier	p1		8471319	1					
ANR	8471569	ExpressionStatement	key = NULL	976:16:33389:33399	8471319	20	True				
ANR	8471570	AssignmentExpression	key = NULL		8471319	0		=			
ANR	8471571	Identifier	key		8471319	0					
ANR	8471572	Identifier	NULL		8471319	1					
ANR	8471573	BreakStatement	break ;	977:16:33417:33422	8471319	21	True				
ANR	8471574	Label	case '[' :	978:12:33436:33444	8471319	22	True				
ANR	8471575	IfStatement	if ( key == NULL )		8471319	23					
ANR	8471576	Condition	key == NULL	979:20:33466:33476	8471319	0	True				
ANR	8471577	EqualityExpression	key == NULL		8471319	0		==			
ANR	8471578	Identifier	key		8471319	0					
ANR	8471579	Identifier	NULL		8471319	1					
ANR	8471580	CompoundStatement		49:33:1595:1595	8471319	1					
ANR	8471581	ReturnStatement	return - 1 ;	980:20:33501:33510	8471319	0	True				
ANR	8471582	UnaryOperationExpression	- 1		8471319	0					
ANR	8471583	UnaryOperator	-		8471319	0					
ANR	8471584	PrimaryExpression	1		8471319	1					
ANR	8471585	ExpressionStatement	"code = pjl_dist_process_array ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"	982:16:33546:33626	8471319	24	True				
ANR	8471586	AssignmentExpression	"code = pjl_dist_process_array ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8471319	0		=			
ANR	8471587	Identifier	code		8471319	0					
ANR	8471588	CallExpression	"pjl_dist_process_array ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8471319	1					
ANR	8471589	Callee	pjl_dist_process_array		8471319	0					
ANR	8471590	Identifier	pjl_dist_process_array		8471319	0					
ANR	8471591	ArgumentList	plist -> memory		8471319	1					
ANR	8471592	Argument	plist -> memory		8471319	0					
ANR	8471593	PtrMemberAccess	plist -> memory		8471319	0					
ANR	8471594	Identifier	plist		8471319	0					
ANR	8471595	Identifier	memory		8471319	1					
ANR	8471596	Argument	( gs_c_param_list * ) plist		8471319	1					
ANR	8471597	CastExpression	( gs_c_param_list * ) plist		8471319	0					
ANR	8471598	CastTarget	gs_c_param_list *		8471319	0					
ANR	8471599	Identifier	plist		8471319	1					
ANR	8471600	Argument	key		8471319	2					
ANR	8471601	Identifier	key		8471319	0					
ANR	8471602	Argument	& p1		8471319	3					
ANR	8471603	UnaryOperationExpression	& p1		8471319	0					
ANR	8471604	UnaryOperator	&		8471319	0					
ANR	8471605	Identifier	p1		8471319	1					
ANR	8471606	ExpressionStatement	key = NULL	983:16:33644:33654	8471319	25	True				
ANR	8471607	AssignmentExpression	key = NULL		8471319	0		=			
ANR	8471608	Identifier	key		8471319	0					
ANR	8471609	Identifier	NULL		8471319	1					
ANR	8471610	BreakStatement	break ;	984:16:33672:33677	8471319	26	True				
ANR	8471611	Label	case '0' :	985:12:33691:33699	8471319	27	True				
ANR	8471612	Label	case '1' :	986:12:33713:33721	8471319	28	True				
ANR	8471613	Label	case '2' :	987:12:33735:33743	8471319	29	True				
ANR	8471614	Label	case '3' :	988:12:33757:33765	8471319	30	True				
ANR	8471615	Label	case '4' :	989:12:33779:33787	8471319	31	True				
ANR	8471616	Label	case '5' :	990:12:33801:33809	8471319	32	True				
ANR	8471617	Label	case '6' :	991:12:33823:33831	8471319	33	True				
ANR	8471618	Label	case '7' :	992:12:33845:33853	8471319	34	True				
ANR	8471619	Label	case '8' :	993:12:33867:33875	8471319	35	True				
ANR	8471620	Label	case '9' :	994:12:33889:33897	8471319	36	True				
ANR	8471621	Label	case '.' :	995:12:33911:33919	8471319	37	True				
ANR	8471622	IfStatement	if ( key == NULL )		8471319	38					
ANR	8471623	Condition	key == NULL	996:20:33941:33951	8471319	0	True				
ANR	8471624	EqualityExpression	key == NULL		8471319	0		==			
ANR	8471625	Identifier	key		8471319	0					
ANR	8471626	Identifier	NULL		8471319	1					
ANR	8471627	CompoundStatement		66:33:2070:2070	8471319	1					
ANR	8471628	ReturnStatement	return - 1 ;	997:20:33976:33985	8471319	0	True				
ANR	8471629	UnaryOperationExpression	- 1		8471319	0					
ANR	8471630	UnaryOperator	-		8471319	0					
ANR	8471631	PrimaryExpression	1		8471319	1					
ANR	8471632	ExpressionStatement	"code = pjl_dist_process_number ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"	999:16:34021:34102	8471319	39	True				
ANR	8471633	AssignmentExpression	"code = pjl_dist_process_number ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8471319	0		=			
ANR	8471634	Identifier	code		8471319	0					
ANR	8471635	CallExpression	"pjl_dist_process_number ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8471319	1					
ANR	8471636	Callee	pjl_dist_process_number		8471319	0					
ANR	8471637	Identifier	pjl_dist_process_number		8471319	0					
ANR	8471638	ArgumentList	plist -> memory		8471319	1					
ANR	8471639	Argument	plist -> memory		8471319	0					
ANR	8471640	PtrMemberAccess	plist -> memory		8471319	0					
ANR	8471641	Identifier	plist		8471319	0					
ANR	8471642	Identifier	memory		8471319	1					
ANR	8471643	Argument	( gs_c_param_list * ) plist		8471319	1					
ANR	8471644	CastExpression	( gs_c_param_list * ) plist		8471319	0					
ANR	8471645	CastTarget	gs_c_param_list *		8471319	0					
ANR	8471646	Identifier	plist		8471319	1					
ANR	8471647	Argument	key		8471319	2					
ANR	8471648	Identifier	key		8471319	0					
ANR	8471649	Argument	& p1		8471319	3					
ANR	8471650	UnaryOperationExpression	& p1		8471319	0					
ANR	8471651	UnaryOperator	&		8471319	0					
ANR	8471652	Identifier	p1		8471319	1					
ANR	8471653	ExpressionStatement	key = NULL	1000:16:34120:34130	8471319	40	True				
ANR	8471654	AssignmentExpression	key = NULL		8471319	0		=			
ANR	8471655	Identifier	key		8471319	0					
ANR	8471656	Identifier	NULL		8471319	1					
ANR	8471657	BreakStatement	break ;	1001:16:34148:34153	8471319	41	True				
ANR	8471658	Label	default :	1002:12:34167:34174	8471319	42	True				
ANR	8471659	Identifier	default		8471319	0					
ANR	8471660	ReturnStatement	return - 1 ;	1003:16:34192:34201	8471319	43	True				
ANR	8471661	UnaryOperationExpression	- 1		8471319	0					
ANR	8471662	UnaryOperator	-		8471319	0					
ANR	8471663	PrimaryExpression	1		8471319	1					
ANR	8471664	BreakStatement	break ;	1004:16:34219:34224	8471319	44	True				
ANR	8471665	IfStatement	if ( code < 0 )		8471319	1					
ANR	8471666	Condition	code < 0	1006:12:34248:34255	8471319	0	True				
ANR	8471667	RelationalExpression	code < 0		8471319	0		<			
ANR	8471668	Identifier	code		8471319	0					
ANR	8471669	PrimaryExpression	0		8471319	1					
ANR	8471670	CompoundStatement		76:22:2374:2374	8471319	1					
ANR	8471671	ReturnStatement	return code ;	1007:12:34272:34283	8471319	0	True				
ANR	8471672	Identifier	code		8471319	0					
ANR	8471673	ReturnStatement	return 0 ;	1011:4:34306:34314	8471319	4	True				
ANR	8471674	PrimaryExpression	0		8471319	0					
ANR	8471675	ReturnType	static int		8471319	1					
ANR	8471676	Identifier	pjl_dist_add_tokens_to_list		8471319	2					
ANR	8471677	ParameterList	"gs_param_list * plist , char * * p"		8471319	3					
ANR	8471678	Parameter	gs_param_list * plist	930:39:31851:31870	8471319	0	True				
ANR	8471679	ParameterType	gs_param_list *		8471319	0					
ANR	8471680	Identifier	plist		8471319	1					
ANR	8471681	Parameter	char * * p	930:61:31873:31880	8471319	1	True				
ANR	8471682	ParameterType	char * *		8471319	0					
ANR	8471683	Identifier	p		8471319	1					
ANR	8471684	CFGEntryNode	ENTRY		8471319		True				
ANR	8471685	CFGExitNode	EXIT		8471319		True				
ANR	8471686	Symbol	p1		8471319						
ANR	8471687	Symbol	pjl_dist_process_array		8471319						
ANR	8471688	Symbol	& key		8471319						
ANR	8471689	Symbol	code		8471319						
ANR	8471690	Symbol	NULL		8471319						
ANR	8471691	Symbol	* p1		8471319						
ANR	8471692	Symbol	* plist		8471319						
ANR	8471693	Symbol	pjl_dist_process_number		8471319						
ANR	8471694	Symbol	false		8471319						
ANR	8471695	Symbol	& p1		8471319						
ANR	8471696	Symbol	p		8471319						
ANR	8471697	Symbol	pjl_dist_process_string		8471319						
ANR	8471698	Symbol	strncmp		8471319						
ANR	8471699	Symbol	param_write_bool		8471319						
ANR	8471700	Symbol	plist		8471319						
ANR	8471701	Symbol	t		8471319						
ANR	8471702	Symbol	true		8471319						
ANR	8471703	Symbol	pjl_dist_process_name		8471319						
ANR	8471704	Symbol	* p		8471319						
ANR	8471705	Symbol	& t		8471319						
ANR	8471706	Symbol	pjl_dist_process_dict_or_hexstring		8471319						
ANR	8471707	Symbol	plist -> memory		8471319						
ANR	8471708	Symbol	key		8471319						
ANR	8471709	Function	pcl_pjl_setdistillerparams	1014:0:34319:36290							
ANR	8471710	FunctionDef	"pcl_pjl_setdistillerparams (gs_memory_t * mem , gx_device * device , char * distillerparams)"		8471709	0					
ANR	8471711	CompoundStatement		1015:0:34410:36290	8471709	0					
ANR	8471712	IdentifierDeclStatement	"char * p , * start , * copy ;"	1016:4:34416:34438	8471709	0	True				
ANR	8471713	IdentifierDecl	* p		8471709	0					
ANR	8471714	IdentifierDeclType	char *		8471709	0					
ANR	8471715	Identifier	p		8471709	1					
ANR	8471716	IdentifierDecl	* start		8471709	1					
ANR	8471717	IdentifierDeclType	char *		8471709	0					
ANR	8471718	Identifier	start		8471709	1					
ANR	8471719	IdentifierDecl	* copy		8471709	2					
ANR	8471720	IdentifierDeclType	char *		8471709	0					
ANR	8471721	Identifier	copy		8471709	1					
ANR	8471722	IdentifierDeclStatement	int code = 0 ;	1017:4:34444:34456	8471709	1	True				
ANR	8471723	IdentifierDecl	code = 0		8471709	0					
ANR	8471724	IdentifierDeclType	int		8471709	0					
ANR	8471725	Identifier	code		8471709	1					
ANR	8471726	AssignmentExpression	code = 0		8471709	2		=			
ANR	8471727	Identifier	code		8471709	0					
ANR	8471728	PrimaryExpression	0		8471709	1					
ANR	8471729	IdentifierDeclStatement	gs_c_param_list * plist ;	1018:4:34462:34484	8471709	2	True				
ANR	8471730	IdentifierDecl	* plist		8471709	0					
ANR	8471731	IdentifierDeclType	gs_c_param_list *		8471709	0					
ANR	8471732	Identifier	plist		8471709	1					
ANR	8471733	ExpressionStatement	"plist = gs_c_param_list_alloc ( mem , ""temp C param list for PJL distillerparams"" )"	1020:4:34491:34570	8471709	3	True				
ANR	8471734	AssignmentExpression	"plist = gs_c_param_list_alloc ( mem , ""temp C param list for PJL distillerparams"" )"		8471709	0		=			
ANR	8471735	Identifier	plist		8471709	0					
ANR	8471736	CallExpression	"gs_c_param_list_alloc ( mem , ""temp C param list for PJL distillerparams"" )"		8471709	1					
ANR	8471737	Callee	gs_c_param_list_alloc		8471709	0					
ANR	8471738	Identifier	gs_c_param_list_alloc		8471709	0					
ANR	8471739	ArgumentList	mem		8471709	1					
ANR	8471740	Argument	mem		8471709	0					
ANR	8471741	Identifier	mem		8471709	0					
ANR	8471742	Argument	"""temp C param list for PJL distillerparams"""		8471709	1					
ANR	8471743	PrimaryExpression	"""temp C param list for PJL distillerparams"""		8471709	0					
ANR	8471744	IfStatement	if ( plist == NULL )		8471709	4					
ANR	8471745	Condition	plist == NULL	1021:8:34580:34592	8471709	0	True				
ANR	8471746	EqualityExpression	plist == NULL		8471709	0		==			
ANR	8471747	Identifier	plist		8471709	0					
ANR	8471748	Identifier	NULL		8471709	1					
ANR	8471749	ReturnStatement	return - 1 ;	1022:8:34603:34612	8471709	1	True				
ANR	8471750	UnaryOperationExpression	- 1		8471709	0					
ANR	8471751	UnaryOperator	-		8471709	0					
ANR	8471752	PrimaryExpression	1		8471709	1					
ANR	8471753	ExpressionStatement	"gs_c_param_list_write ( plist , mem )"	1023:4:34618:34651	8471709	5	True				
ANR	8471754	CallExpression	"gs_c_param_list_write ( plist , mem )"		8471709	0					
ANR	8471755	Callee	gs_c_param_list_write		8471709	0					
ANR	8471756	Identifier	gs_c_param_list_write		8471709	0					
ANR	8471757	ArgumentList	plist		8471709	1					
ANR	8471758	Argument	plist		8471709	0					
ANR	8471759	Identifier	plist		8471709	0					
ANR	8471760	Argument	mem		8471709	1					
ANR	8471761	Identifier	mem		8471709	0					
ANR	8471762	ExpressionStatement	"gs_param_list_set_persistent_keys ( ( gs_param_list * ) plist , false )"	1024:4:34657:34722	8471709	6	True				
ANR	8471763	CallExpression	"gs_param_list_set_persistent_keys ( ( gs_param_list * ) plist , false )"		8471709	0					
ANR	8471764	Callee	gs_param_list_set_persistent_keys		8471709	0					
ANR	8471765	Identifier	gs_param_list_set_persistent_keys		8471709	0					
ANR	8471766	ArgumentList	( gs_param_list * ) plist		8471709	1					
ANR	8471767	Argument	( gs_param_list * ) plist		8471709	0					
ANR	8471768	CastExpression	( gs_param_list * ) plist		8471709	0					
ANR	8471769	CastTarget	gs_param_list *		8471709	0					
ANR	8471770	Identifier	plist		8471709	1					
ANR	8471771	Argument	false		8471709	1					
ANR	8471772	Identifier	false		8471709	0					
ANR	8471773	ExpressionStatement	gs_c_param_list_write_more ( plist )	1025:4:34728:34761	8471709	7	True				
ANR	8471774	CallExpression	gs_c_param_list_write_more ( plist )		8471709	0					
ANR	8471775	Callee	gs_c_param_list_write_more		8471709	0					
ANR	8471776	Identifier	gs_c_param_list_write_more		8471709	0					
ANR	8471777	ArgumentList	plist		8471709	1					
ANR	8471778	Argument	plist		8471709	0					
ANR	8471779	Identifier	plist		8471709	0					
ANR	8471780	ExpressionStatement	"copy = ( char * ) gs_alloc_bytes ( mem , strlen ( distillerparams ) + 1 , ""working buffer for distillerparams processing"" )"	1028:4:34869:34981	8471709	8	True				
ANR	8471781	AssignmentExpression	"copy = ( char * ) gs_alloc_bytes ( mem , strlen ( distillerparams ) + 1 , ""working buffer for distillerparams processing"" )"		8471709	0		=			
ANR	8471782	Identifier	copy		8471709	0					
ANR	8471783	CastExpression	"( char * ) gs_alloc_bytes ( mem , strlen ( distillerparams ) + 1 , ""working buffer for distillerparams processing"" )"		8471709	1					
ANR	8471784	CastTarget	char *		8471709	0					
ANR	8471785	CallExpression	"gs_alloc_bytes ( mem , strlen ( distillerparams ) + 1 , ""working buffer for distillerparams processing"" )"		8471709	1					
ANR	8471786	Callee	gs_alloc_bytes		8471709	0					
ANR	8471787	Identifier	gs_alloc_bytes		8471709	0					
ANR	8471788	ArgumentList	mem		8471709	1					
ANR	8471789	Argument	mem		8471709	0					
ANR	8471790	Identifier	mem		8471709	0					
ANR	8471791	Argument	strlen ( distillerparams ) + 1		8471709	1					
ANR	8471792	AdditiveExpression	strlen ( distillerparams ) + 1		8471709	0		+			
ANR	8471793	CallExpression	strlen ( distillerparams )		8471709	0					
ANR	8471794	Callee	strlen		8471709	0					
ANR	8471795	Identifier	strlen		8471709	0					
ANR	8471796	ArgumentList	distillerparams		8471709	1					
ANR	8471797	Argument	distillerparams		8471709	0					
ANR	8471798	Identifier	distillerparams		8471709	0					
ANR	8471799	PrimaryExpression	1		8471709	1					
ANR	8471800	Argument	"""working buffer for distillerparams processing"""		8471709	2					
ANR	8471801	PrimaryExpression	"""working buffer for distillerparams processing"""		8471709	0					
ANR	8471802	IfStatement	if ( copy == 0 )		8471709	9					
ANR	8471803	Condition	copy == 0	1029:8:34991:34999	8471709	0	True				
ANR	8471804	EqualityExpression	copy == 0		8471709	0		==			
ANR	8471805	Identifier	copy		8471709	0					
ANR	8471806	PrimaryExpression	0		8471709	1					
ANR	8471807	ReturnStatement	return - 1 ;	1030:8:35010:35019	8471709	1	True				
ANR	8471808	UnaryOperationExpression	- 1		8471709	0					
ANR	8471809	UnaryOperator	-		8471709	0					
ANR	8471810	PrimaryExpression	1		8471709	1					
ANR	8471811	ExpressionStatement	"strcpy ( copy , distillerparams )"	1031:4:35025:35054	8471709	10	True				
ANR	8471812	CallExpression	"strcpy ( copy , distillerparams )"		8471709	0					
ANR	8471813	Callee	strcpy		8471709	0					
ANR	8471814	Identifier	strcpy		8471709	0					
ANR	8471815	ArgumentList	copy		8471709	1					
ANR	8471816	Argument	copy		8471709	0					
ANR	8471817	Identifier	copy		8471709	0					
ANR	8471818	Argument	distillerparams		8471709	1					
ANR	8471819	Identifier	distillerparams		8471709	0					
ANR	8471820	IfStatement	"if ( * copy == '""' )"		8471709	11					
ANR	8471821	Condition	"* copy == '""'"	1033:8:35065:35076	8471709	0	True				
ANR	8471822	EqualityExpression	"* copy == '""'"		8471709	0		==			
ANR	8471823	UnaryOperationExpression	* copy		8471709	0					
ANR	8471824	UnaryOperator	*		8471709	0					
ANR	8471825	Identifier	copy		8471709	1					
ANR	8471826	PrimaryExpression	"'""'"		8471709	1					
ANR	8471827	CompoundStatement		19:22:668:668	8471709	1					
ANR	8471828	ExpressionStatement	start = copy + 1	1034:8:35089:35105	8471709	0	True				
ANR	8471829	AssignmentExpression	start = copy + 1		8471709	0		=			
ANR	8471830	Identifier	start		8471709	0					
ANR	8471831	AdditiveExpression	copy + 1		8471709	1		+			
ANR	8471832	Identifier	copy		8471709	0					
ANR	8471833	PrimaryExpression	1		8471709	1					
ANR	8471834	ExpressionStatement	copy [ strlen ( copy ) - 1 ] = 0x00	1035:8:35115:35144	8471709	1	True				
ANR	8471835	AssignmentExpression	copy [ strlen ( copy ) - 1 ] = 0x00		8471709	0		=			
ANR	8471836	ArrayIndexing	copy [ strlen ( copy ) - 1 ]		8471709	0					
ANR	8471837	Identifier	copy		8471709	0					
ANR	8471838	AdditiveExpression	strlen ( copy ) - 1		8471709	1		-			
ANR	8471839	CallExpression	strlen ( copy )		8471709	0					
ANR	8471840	Callee	strlen		8471709	0					
ANR	8471841	Identifier	strlen		8471709	0					
ANR	8471842	ArgumentList	copy		8471709	1					
ANR	8471843	Argument	copy		8471709	0					
ANR	8471844	Identifier	copy		8471709	0					
ANR	8471845	PrimaryExpression	1		8471709	1					
ANR	8471846	PrimaryExpression	0x00		8471709	1					
ANR	8471847	ElseStatement	else		8471709	0					
ANR	8471848	ExpressionStatement	start = copy	1038:8:35169:35181	8471709	0	True				
ANR	8471849	AssignmentExpression	start = copy		8471709	0		=			
ANR	8471850	Identifier	start		8471709	0					
ANR	8471851	Identifier	copy		8471709	1					
ANR	8471852	IfStatement	if ( * start != '<' || start [ 1 ] != '<' )		8471709	12					
ANR	8471853	Condition	* start != '<' || start [ 1 ] != '<'	1040:8:35192:35223	8471709	0	True				
ANR	8471854	OrExpression	* start != '<' || start [ 1 ] != '<'		8471709	0		||			
ANR	8471855	EqualityExpression	* start != '<'		8471709	0		!=			
ANR	8471856	UnaryOperationExpression	* start		8471709	0					
ANR	8471857	UnaryOperator	*		8471709	0					
ANR	8471858	Identifier	start		8471709	1					
ANR	8471859	PrimaryExpression	'<'		8471709	1					
ANR	8471860	EqualityExpression	start [ 1 ] != '<'		8471709	1		!=			
ANR	8471861	ArrayIndexing	start [ 1 ]		8471709	0					
ANR	8471862	Identifier	start		8471709	0					
ANR	8471863	PrimaryExpression	1		8471709	1					
ANR	8471864	PrimaryExpression	'<'		8471709	1					
ANR	8471865	CompoundStatement		26:42:815:815	8471709	1					
ANR	8471866	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for distillerparams processing"" )"	1041:8:35236:35310	8471709	0	True				
ANR	8471867	CallExpression	"gs_free_object ( mem , copy , ""working buffer for distillerparams processing"" )"		8471709	0					
ANR	8471868	Callee	gs_free_object		8471709	0					
ANR	8471869	Identifier	gs_free_object		8471709	0					
ANR	8471870	ArgumentList	mem		8471709	1					
ANR	8471871	Argument	mem		8471709	0					
ANR	8471872	Identifier	mem		8471709	0					
ANR	8471873	Argument	copy		8471709	1					
ANR	8471874	Identifier	copy		8471709	0					
ANR	8471875	Argument	"""working buffer for distillerparams processing"""		8471709	2					
ANR	8471876	PrimaryExpression	"""working buffer for distillerparams processing"""		8471709	0					
ANR	8471877	ReturnStatement	return - 1 ;	1042:8:35320:35329	8471709	1	True				
ANR	8471878	UnaryOperationExpression	- 1		8471709	0					
ANR	8471879	UnaryOperator	-		8471709	0					
ANR	8471880	PrimaryExpression	1		8471709	1					
ANR	8471881	ExpressionStatement	start += 2	1044:4:35341:35351	8471709	13	True				
ANR	8471882	AssignmentExpression	start += 2		8471709	0		+=			
ANR	8471883	Identifier	start		8471709	0					
ANR	8471884	PrimaryExpression	2		8471709	1					
ANR	8471885	IfStatement	if ( copy [ strlen ( copy ) - 1 ] != '>' || copy [ strlen ( copy ) - 2 ] != '>' )		8471709	14					
ANR	8471886	Condition	copy [ strlen ( copy ) - 1 ] != '>' || copy [ strlen ( copy ) - 2 ] != '>'	1046:8:35362:35423	8471709	0	True				
ANR	8471887	OrExpression	copy [ strlen ( copy ) - 1 ] != '>' || copy [ strlen ( copy ) - 2 ] != '>'		8471709	0		||			
ANR	8471888	EqualityExpression	copy [ strlen ( copy ) - 1 ] != '>'		8471709	0		!=			
ANR	8471889	ArrayIndexing	copy [ strlen ( copy ) - 1 ]		8471709	0					
ANR	8471890	Identifier	copy		8471709	0					
ANR	8471891	AdditiveExpression	strlen ( copy ) - 1		8471709	1		-			
ANR	8471892	CallExpression	strlen ( copy )		8471709	0					
ANR	8471893	Callee	strlen		8471709	0					
ANR	8471894	Identifier	strlen		8471709	0					
ANR	8471895	ArgumentList	copy		8471709	1					
ANR	8471896	Argument	copy		8471709	0					
ANR	8471897	Identifier	copy		8471709	0					
ANR	8471898	PrimaryExpression	1		8471709	1					
ANR	8471899	PrimaryExpression	'>'		8471709	1					
ANR	8471900	EqualityExpression	copy [ strlen ( copy ) - 2 ] != '>'		8471709	1		!=			
ANR	8471901	ArrayIndexing	copy [ strlen ( copy ) - 2 ]		8471709	0					
ANR	8471902	Identifier	copy		8471709	0					
ANR	8471903	AdditiveExpression	strlen ( copy ) - 2		8471709	1		-			
ANR	8471904	CallExpression	strlen ( copy )		8471709	0					
ANR	8471905	Callee	strlen		8471709	0					
ANR	8471906	Identifier	strlen		8471709	0					
ANR	8471907	ArgumentList	copy		8471709	1					
ANR	8471908	Argument	copy		8471709	0					
ANR	8471909	Identifier	copy		8471709	0					
ANR	8471910	PrimaryExpression	2		8471709	1					
ANR	8471911	PrimaryExpression	'>'		8471709	1					
ANR	8471912	CompoundStatement		32:72:1015:1015	8471709	1					
ANR	8471913	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for distillerparams processing"" )"	1047:8:35436:35510	8471709	0	True				
ANR	8471914	CallExpression	"gs_free_object ( mem , copy , ""working buffer for distillerparams processing"" )"		8471709	0					
ANR	8471915	Callee	gs_free_object		8471709	0					
ANR	8471916	Identifier	gs_free_object		8471709	0					
ANR	8471917	ArgumentList	mem		8471709	1					
ANR	8471918	Argument	mem		8471709	0					
ANR	8471919	Identifier	mem		8471709	0					
ANR	8471920	Argument	copy		8471709	1					
ANR	8471921	Identifier	copy		8471709	0					
ANR	8471922	Argument	"""working buffer for distillerparams processing"""		8471709	2					
ANR	8471923	PrimaryExpression	"""working buffer for distillerparams processing"""		8471709	0					
ANR	8471924	ReturnStatement	return - 1 ;	1048:8:35520:35529	8471709	1	True				
ANR	8471925	UnaryOperationExpression	- 1		8471709	0					
ANR	8471926	UnaryOperator	-		8471709	0					
ANR	8471927	PrimaryExpression	1		8471709	1					
ANR	8471928	ExpressionStatement	copy [ strlen ( copy ) - 2 ] = 0x00	1050:4:35541:35570	8471709	15	True				
ANR	8471929	AssignmentExpression	copy [ strlen ( copy ) - 2 ] = 0x00		8471709	0		=			
ANR	8471930	ArrayIndexing	copy [ strlen ( copy ) - 2 ]		8471709	0					
ANR	8471931	Identifier	copy		8471709	0					
ANR	8471932	AdditiveExpression	strlen ( copy ) - 2		8471709	1		-			
ANR	8471933	CallExpression	strlen ( copy )		8471709	0					
ANR	8471934	Callee	strlen		8471709	0					
ANR	8471935	Identifier	strlen		8471709	0					
ANR	8471936	ArgumentList	copy		8471709	1					
ANR	8471937	Argument	copy		8471709	0					
ANR	8471938	Identifier	copy		8471709	0					
ANR	8471939	PrimaryExpression	2		8471709	1					
ANR	8471940	PrimaryExpression	0x00		8471709	1					
ANR	8471941	WhileStatement	while ( * start == ' ' )		8471709	16					
ANR	8471942	Condition	* start == ' '	1052:11:35584:35596	8471709	0	True				
ANR	8471943	EqualityExpression	* start == ' '		8471709	0		==			
ANR	8471944	UnaryOperationExpression	* start		8471709	0					
ANR	8471945	UnaryOperator	*		8471709	0					
ANR	8471946	Identifier	start		8471709	1					
ANR	8471947	PrimaryExpression	' '		8471709	1					
ANR	8471948	ExpressionStatement	start ++	1053:8:35607:35614	8471709	1	True				
ANR	8471949	PostIncDecOperationExpression	start ++		8471709	0					
ANR	8471950	Identifier	start		8471709	0					
ANR	8471951	IncDec	++		8471709	1					
ANR	8471952	ExpressionStatement	p = start	1054:4:35620:35629	8471709	17	True				
ANR	8471953	AssignmentExpression	p = start		8471709	0		=			
ANR	8471954	Identifier	p		8471709	0					
ANR	8471955	Identifier	start		8471709	1					
ANR	8471956	ExpressionStatement	"code = pjl_dist_add_tokens_to_list ( ( gs_param_list * ) plist , & p )"	1057:4:35697:35759	8471709	18	True				
ANR	8471957	AssignmentExpression	"code = pjl_dist_add_tokens_to_list ( ( gs_param_list * ) plist , & p )"		8471709	0		=			
ANR	8471958	Identifier	code		8471709	0					
ANR	8471959	CallExpression	"pjl_dist_add_tokens_to_list ( ( gs_param_list * ) plist , & p )"		8471709	1					
ANR	8471960	Callee	pjl_dist_add_tokens_to_list		8471709	0					
ANR	8471961	Identifier	pjl_dist_add_tokens_to_list		8471709	0					
ANR	8471962	ArgumentList	( gs_param_list * ) plist		8471709	1					
ANR	8471963	Argument	( gs_param_list * ) plist		8471709	0					
ANR	8471964	CastExpression	( gs_param_list * ) plist		8471709	0					
ANR	8471965	CastTarget	gs_param_list *		8471709	0					
ANR	8471966	Identifier	plist		8471709	1					
ANR	8471967	Argument	& p		8471709	1					
ANR	8471968	UnaryOperationExpression	& p		8471709	0					
ANR	8471969	UnaryOperator	&		8471709	0					
ANR	8471970	Identifier	p		8471709	1					
ANR	8471971	IfStatement	if ( code < 0 )		8471709	19					
ANR	8471972	Condition	code < 0	1058:8:35769:35776	8471709	0	True				
ANR	8471973	RelationalExpression	code < 0		8471709	0		<			
ANR	8471974	Identifier	code		8471709	0					
ANR	8471975	PrimaryExpression	0		8471709	1					
ANR	8471976	CompoundStatement		44:18:1368:1368	8471709	1					
ANR	8471977	ExpressionStatement	gs_c_param_list_release ( plist )	1059:8:35789:35819	8471709	0	True				
ANR	8471978	CallExpression	gs_c_param_list_release ( plist )		8471709	0					
ANR	8471979	Callee	gs_c_param_list_release		8471709	0					
ANR	8471980	Identifier	gs_c_param_list_release		8471709	0					
ANR	8471981	ArgumentList	plist		8471709	1					
ANR	8471982	Argument	plist		8471709	0					
ANR	8471983	Identifier	plist		8471709	0					
ANR	8471984	ReturnStatement	return code ;	1060:8:35829:35840	8471709	1	True				
ANR	8471985	Identifier	code		8471709	0					
ANR	8471986	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for distillerparams processing"" )"	1064:4:35902:35976	8471709	20	True				
ANR	8471987	CallExpression	"gs_free_object ( mem , copy , ""working buffer for distillerparams processing"" )"		8471709	0					
ANR	8471988	Callee	gs_free_object		8471709	0					
ANR	8471989	Identifier	gs_free_object		8471709	0					
ANR	8471990	ArgumentList	mem		8471709	1					
ANR	8471991	Argument	mem		8471709	0					
ANR	8471992	Identifier	mem		8471709	0					
ANR	8471993	Argument	copy		8471709	1					
ANR	8471994	Identifier	copy		8471709	0					
ANR	8471995	Argument	"""working buffer for distillerparams processing"""		8471709	2					
ANR	8471996	PrimaryExpression	"""working buffer for distillerparams processing"""		8471709	0					
ANR	8471997	ExpressionStatement	gs_c_param_list_read ( plist )	1067:4:36029:36056	8471709	21	True				
ANR	8471998	CallExpression	gs_c_param_list_read ( plist )		8471709	0					
ANR	8471999	Callee	gs_c_param_list_read		8471709	0					
ANR	8472000	Identifier	gs_c_param_list_read		8471709	0					
ANR	8472001	ArgumentList	plist		8471709	1					
ANR	8472002	Argument	plist		8471709	0					
ANR	8472003	Identifier	plist		8471709	0					
ANR	8472004	ExpressionStatement	"code = gs_putdeviceparams ( device , ( gs_param_list * ) plist )"	1070:4:36122:36179	8471709	22	True				
ANR	8472005	AssignmentExpression	"code = gs_putdeviceparams ( device , ( gs_param_list * ) plist )"		8471709	0		=			
ANR	8472006	Identifier	code		8471709	0					
ANR	8472007	CallExpression	"gs_putdeviceparams ( device , ( gs_param_list * ) plist )"		8471709	1					
ANR	8472008	Callee	gs_putdeviceparams		8471709	0					
ANR	8472009	Identifier	gs_putdeviceparams		8471709	0					
ANR	8472010	ArgumentList	device		8471709	1					
ANR	8472011	Argument	device		8471709	0					
ANR	8472012	Identifier	device		8471709	0					
ANR	8472013	Argument	( gs_param_list * ) plist		8471709	1					
ANR	8472014	CastExpression	( gs_param_list * ) plist		8471709	0					
ANR	8472015	CastTarget	gs_param_list *		8471709	0					
ANR	8472016	Identifier	plist		8471709	1					
ANR	8472017	ExpressionStatement	gs_c_param_list_release ( plist )	1073:4:36241:36271	8471709	23	True				
ANR	8472018	CallExpression	gs_c_param_list_release ( plist )		8471709	0					
ANR	8472019	Callee	gs_c_param_list_release		8471709	0					
ANR	8472020	Identifier	gs_c_param_list_release		8471709	0					
ANR	8472021	ArgumentList	plist		8471709	1					
ANR	8472022	Argument	plist		8471709	0					
ANR	8472023	Identifier	plist		8471709	0					
ANR	8472024	ReturnStatement	return code ;	1074:4:36277:36288	8471709	24	True				
ANR	8472025	Identifier	code		8471709	0					
ANR	8472026	ReturnType	int		8471709	1					
ANR	8472027	Identifier	pcl_pjl_setdistillerparams		8471709	2					
ANR	8472028	ParameterList	"gs_memory_t * mem , gx_device * device , char * distillerparams"		8471709	3					
ANR	8472029	Parameter	gs_memory_t * mem	1014:31:34350:34365	8471709	0	True				
ANR	8472030	ParameterType	gs_memory_t *		8471709	0					
ANR	8472031	Identifier	mem		8471709	1					
ANR	8472032	Parameter	gx_device * device	1014:49:34368:34384	8471709	1	True				
ANR	8472033	ParameterType	gx_device *		8471709	0					
ANR	8472034	Identifier	device		8471709	1					
ANR	8472035	Parameter	char * distillerparams	1014:68:34387:34407	8471709	2	True				
ANR	8472036	ParameterType	char *		8471709	0					
ANR	8472037	Identifier	distillerparams		8471709	1					
ANR	8472038	CFGEntryNode	ENTRY		8471709		True				
ANR	8472039	CFGExitNode	EXIT		8471709		True				
ANR	8472040	Symbol	distillerparams		8471709						
ANR	8472041	Symbol	gs_alloc_bytes		8471709						
ANR	8472042	Symbol	code		8471709						
ANR	8472043	Symbol	NULL		8471709						
ANR	8472044	Symbol	gs_putdeviceparams		8471709						
ANR	8472045	Symbol	* start		8471709						
ANR	8472046	Symbol	start		8471709						
ANR	8472047	Symbol	false		8471709						
ANR	8472048	Symbol	gs_c_param_list_alloc		8471709						
ANR	8472049	Symbol	p		8471709						
ANR	8472050	Symbol	strlen		8471709						
ANR	8472051	Symbol	plist		8471709						
ANR	8472052	Symbol	mem		8471709						
ANR	8472053	Symbol	* strlen		8471709						
ANR	8472054	Symbol	* copy		8471709						
ANR	8472055	Symbol	& p		8471709						
ANR	8472056	Symbol	pjl_dist_add_tokens_to_list		8471709						
ANR	8472057	Symbol	copy		8471709						
ANR	8472058	Symbol	device		8471709						
