command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	443525	File	data/converged/CVE-2018-16863_ghostpdl/base_gsbitops.h								
ANR	443526	Function	sample_load_next8	46:18:1621:2093							
ANR	443527	FunctionDef	"sample_load_next8 (uint * value , const byte * * sptr , int * sbit , int sbpv)"		443526	0					
ANR	443528	CompoundStatement		47:0:1692:2093	443526	0					
ANR	443529	SwitchStatement	switch ( sbpv >> 2 )		443526	0					
ANR	443530	Condition	sbpv >> 2	48:13:1707:1715	443526	0	True				
ANR	443531	ShiftExpression	sbpv >> 2		443526	0		>>			
ANR	443532	Identifier	sbpv		443526	0					
ANR	443533	PrimaryExpression	2		443526	1					
ANR	443534	CompoundStatement		2:25:26:26	443526	1					
ANR	443535	Label	case 0 :	49:8:1729:1735	443526	0	True				
ANR	443536	ExpressionStatement	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )	50:12:1749:1801	443526	1	True				
ANR	443537	AssignmentExpression	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		443526	0		=			
ANR	443538	UnaryOperationExpression	* value		443526	0					
ANR	443539	UnaryOperator	*		443526	0					
ANR	443540	Identifier	value		443526	1					
ANR	443541	BitAndExpression	( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		443526	1		&			
ANR	443542	ShiftExpression	* * sptr >> ( 8 - * sbit - sbpv )		443526	0		>>			
ANR	443543	UnaryOperationExpression	* * sptr		443526	0					
ANR	443544	UnaryOperator	*		443526	0					
ANR	443545	UnaryOperationExpression	* sptr		443526	1					
ANR	443546	UnaryOperator	*		443526	0					
ANR	443547	Identifier	sptr		443526	1					
ANR	443548	AdditiveExpression	8 - * sbit - sbpv		443526	1		-			
ANR	443549	PrimaryExpression	8		443526	0					
ANR	443550	AdditiveExpression	* sbit - sbpv		443526	1		-			
ANR	443551	UnaryOperationExpression	* sbit		443526	0					
ANR	443552	UnaryOperator	*		443526	0					
ANR	443553	Identifier	sbit		443526	1					
ANR	443554	Identifier	sbpv		443526	1					
ANR	443555	InclusiveOrExpression	sbpv | 1		443526	1		|			
ANR	443556	Identifier	sbpv		443526	0					
ANR	443557	PrimaryExpression	1		443526	1					
ANR	443558	BreakStatement	break ;	51:12:1815:1820	443526	2	True				
ANR	443559	Label	case 1 :	52:8:1830:1836	443526	3	True				
ANR	443560	ExpressionStatement	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf	53:12:1850:1888	443526	4	True				
ANR	443561	AssignmentExpression	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf		443526	0		=			
ANR	443562	UnaryOperationExpression	* value		443526	0					
ANR	443563	UnaryOperator	*		443526	0					
ANR	443564	Identifier	value		443526	1					
ANR	443565	BitAndExpression	( * * sptr >> ( 4 - * sbit ) ) & 0xf		443526	1		&			
ANR	443566	ShiftExpression	* * sptr >> ( 4 - * sbit )		443526	0		>>			
ANR	443567	UnaryOperationExpression	* * sptr		443526	0					
ANR	443568	UnaryOperator	*		443526	0					
ANR	443569	UnaryOperationExpression	* sptr		443526	1					
ANR	443570	UnaryOperator	*		443526	0					
ANR	443571	Identifier	sptr		443526	1					
ANR	443572	AdditiveExpression	4 - * sbit		443526	1		-			
ANR	443573	PrimaryExpression	4		443526	0					
ANR	443574	UnaryOperationExpression	* sbit		443526	1					
ANR	443575	UnaryOperator	*		443526	0					
ANR	443576	Identifier	sbit		443526	1					
ANR	443577	PrimaryExpression	0xf		443526	1					
ANR	443578	BreakStatement	break ;	54:12:1902:1907	443526	5	True				
ANR	443579	Label	case 2 :	55:8:1917:1923	443526	6	True				
ANR	443580	ExpressionStatement	* value = * * sptr	56:12:1937:1952	443526	7	True				
ANR	443581	AssignmentExpression	* value = * * sptr		443526	0		=			
ANR	443582	UnaryOperationExpression	* value		443526	0					
ANR	443583	UnaryOperator	*		443526	0					
ANR	443584	Identifier	value		443526	1					
ANR	443585	UnaryOperationExpression	* * sptr		443526	1					
ANR	443586	UnaryOperator	*		443526	0					
ANR	443587	UnaryOperationExpression	* sptr		443526	1					
ANR	443588	UnaryOperator	*		443526	0					
ANR	443589	Identifier	sptr		443526	1					
ANR	443590	BreakStatement	break ;	57:12:1966:1971	443526	8	True				
ANR	443591	Label	default :	58:8:1981:1988	443526	9	True				
ANR	443592	Identifier	default		443526	0					
ANR	443593	ReturnStatement	return - 1 ;	59:12:2002:2011	443526	10	True				
ANR	443594	UnaryOperationExpression	- 1		443526	0					
ANR	443595	UnaryOperator	-		443526	0					
ANR	443596	PrimaryExpression	1		443526	1					
ANR	443597	ExpressionStatement	* sbit += sbpv	61:4:2023:2036	443526	1	True				
ANR	443598	AssignmentExpression	* sbit += sbpv		443526	0		+=			
ANR	443599	UnaryOperationExpression	* sbit		443526	0					
ANR	443600	UnaryOperator	*		443526	0					
ANR	443601	Identifier	sbit		443526	1					
ANR	443602	Identifier	sbpv		443526	1					
ANR	443603	ExpressionStatement	* sptr += * sbit >> 3	62:4:2042:2061	443526	2	True				
ANR	443604	AssignmentExpression	* sptr += * sbit >> 3		443526	0		+=			
ANR	443605	UnaryOperationExpression	* sptr		443526	0					
ANR	443606	UnaryOperator	*		443526	0					
ANR	443607	Identifier	sptr		443526	1					
ANR	443608	ShiftExpression	* sbit >> 3		443526	1		>>			
ANR	443609	UnaryOperationExpression	* sbit		443526	0					
ANR	443610	UnaryOperator	*		443526	0					
ANR	443611	Identifier	sbit		443526	1					
ANR	443612	PrimaryExpression	3		443526	1					
ANR	443613	ExpressionStatement	* sbit &= 7	63:4:2067:2077	443526	3	True				
ANR	443614	AssignmentExpression	* sbit &= 7		443526	0		&=			
ANR	443615	UnaryOperationExpression	* sbit		443526	0					
ANR	443616	UnaryOperator	*		443526	0					
ANR	443617	Identifier	sbit		443526	1					
ANR	443618	PrimaryExpression	7		443526	1					
ANR	443619	ReturnStatement	return 0 ;	64:4:2083:2091	443526	4	True				
ANR	443620	PrimaryExpression	0		443526	0					
ANR	443621	Identifier	sample_load_next8		443526	1					
ANR	443622	ParameterList	"uint * value , const byte * * sptr , int * sbit , int sbpv"		443526	2					
ANR	443623	Parameter	uint * value	46:36:1639:1649	443526	0	True				
ANR	443624	ParameterType	uint *		443526	0					
ANR	443625	Identifier	value		443526	1					
ANR	443626	Parameter	const byte * * sptr	46:49:1652:1668	443526	1	True				
ANR	443627	ParameterType	const byte * *		443526	0					
ANR	443628	Identifier	sptr		443526	1					
ANR	443629	Parameter	int * sbit	46:68:1671:1679	443526	2	True				
ANR	443630	ParameterType	int *		443526	0					
ANR	443631	Identifier	sbit		443526	1					
ANR	443632	Parameter	int sbpv	46:79:1682:1689	443526	3	True				
ANR	443633	ParameterType	int		443526	0					
ANR	443634	Identifier	sbpv		443526	1					
ANR	443635	CFGEntryNode	ENTRY		443526		True				
ANR	443636	CFGExitNode	EXIT		443526		True				
ANR	443637	Symbol	sbpv		443526						
ANR	443638	Symbol	* sbit		443526						
ANR	443639	Symbol	* sptr		443526						
ANR	443640	Symbol	* value		443526						
ANR	443641	Symbol	* * sptr		443526						
ANR	443642	Symbol	value		443526						
ANR	443643	Symbol	sptr		443526						
ANR	443644	Symbol	sbit		443526						
ANR	443645	Function	sample_load_next12	66:18:2113:2742							
ANR	443646	FunctionDef	"sample_load_next12 (uint * value , const byte * * sptr , int * sbit , int sbpv)"		443645	0					
ANR	443647	CompoundStatement		67:0:2185:2742	443645	0					
ANR	443648	SwitchStatement	switch ( sbpv >> 2 )		443645	0					
ANR	443649	Condition	sbpv >> 2	68:13:2200:2208	443645	0	True				
ANR	443650	ShiftExpression	sbpv >> 2		443645	0		>>			
ANR	443651	Identifier	sbpv		443645	0					
ANR	443652	PrimaryExpression	2		443645	1					
ANR	443653	CompoundStatement		2:25:26:26	443645	1					
ANR	443654	Label	case 0 :	69:8:2222:2228	443645	0	True				
ANR	443655	ExpressionStatement	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )	70:12:2242:2294	443645	1	True				
ANR	443656	AssignmentExpression	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		443645	0		=			
ANR	443657	UnaryOperationExpression	* value		443645	0					
ANR	443658	UnaryOperator	*		443645	0					
ANR	443659	Identifier	value		443645	1					
ANR	443660	BitAndExpression	( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		443645	1		&			
ANR	443661	ShiftExpression	* * sptr >> ( 8 - * sbit - sbpv )		443645	0		>>			
ANR	443662	UnaryOperationExpression	* * sptr		443645	0					
ANR	443663	UnaryOperator	*		443645	0					
ANR	443664	UnaryOperationExpression	* sptr		443645	1					
ANR	443665	UnaryOperator	*		443645	0					
ANR	443666	Identifier	sptr		443645	1					
ANR	443667	AdditiveExpression	8 - * sbit - sbpv		443645	1		-			
ANR	443668	PrimaryExpression	8		443645	0					
ANR	443669	AdditiveExpression	* sbit - sbpv		443645	1		-			
ANR	443670	UnaryOperationExpression	* sbit		443645	0					
ANR	443671	UnaryOperator	*		443645	0					
ANR	443672	Identifier	sbit		443645	1					
ANR	443673	Identifier	sbpv		443645	1					
ANR	443674	InclusiveOrExpression	sbpv | 1		443645	1		|			
ANR	443675	Identifier	sbpv		443645	0					
ANR	443676	PrimaryExpression	1		443645	1					
ANR	443677	BreakStatement	break ;	71:12:2308:2313	443645	2	True				
ANR	443678	Label	case 1 :	72:8:2323:2329	443645	3	True				
ANR	443679	ExpressionStatement	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf	73:12:2343:2381	443645	4	True				
ANR	443680	AssignmentExpression	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf		443645	0		=			
ANR	443681	UnaryOperationExpression	* value		443645	0					
ANR	443682	UnaryOperator	*		443645	0					
ANR	443683	Identifier	value		443645	1					
ANR	443684	BitAndExpression	( * * sptr >> ( 4 - * sbit ) ) & 0xf		443645	1		&			
ANR	443685	ShiftExpression	* * sptr >> ( 4 - * sbit )		443645	0		>>			
ANR	443686	UnaryOperationExpression	* * sptr		443645	0					
ANR	443687	UnaryOperator	*		443645	0					
ANR	443688	UnaryOperationExpression	* sptr		443645	1					
ANR	443689	UnaryOperator	*		443645	0					
ANR	443690	Identifier	sptr		443645	1					
ANR	443691	AdditiveExpression	4 - * sbit		443645	1		-			
ANR	443692	PrimaryExpression	4		443645	0					
ANR	443693	UnaryOperationExpression	* sbit		443645	1					
ANR	443694	UnaryOperator	*		443645	0					
ANR	443695	Identifier	sbit		443645	1					
ANR	443696	PrimaryExpression	0xf		443645	1					
ANR	443697	BreakStatement	break ;	74:12:2395:2400	443645	5	True				
ANR	443698	Label	case 2 :	75:8:2410:2416	443645	6	True				
ANR	443699	ExpressionStatement	* value = * * sptr	76:12:2430:2445	443645	7	True				
ANR	443700	AssignmentExpression	* value = * * sptr		443645	0		=			
ANR	443701	UnaryOperationExpression	* value		443645	0					
ANR	443702	UnaryOperator	*		443645	0					
ANR	443703	Identifier	value		443645	1					
ANR	443704	UnaryOperationExpression	* * sptr		443645	1					
ANR	443705	UnaryOperator	*		443645	0					
ANR	443706	UnaryOperationExpression	* sptr		443645	1					
ANR	443707	UnaryOperator	*		443645	0					
ANR	443708	Identifier	sptr		443645	1					
ANR	443709	BreakStatement	break ;	77:12:2459:2464	443645	8	True				
ANR	443710	Label	case 3 :	78:8:2474:2480	443645	9	True				
ANR	443711	ExpressionStatement	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )	79:12:2494:2603	443645	10	True				
ANR	443712	AssignmentExpression	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )		443645	0		=			
ANR	443713	UnaryOperationExpression	* value		443645	0					
ANR	443714	UnaryOperator	*		443645	0					
ANR	443715	Identifier	value		443645	1					
ANR	443716	ConditionalExpression	* sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		443645	1					
ANR	443717	Condition	* sbit		443645	0					
ANR	443718	UnaryOperationExpression	* sbit		443645	0					
ANR	443719	UnaryOperator	*		443645	0					
ANR	443720	Identifier	sbit		443645	1					
ANR	443721	InclusiveOrExpression	( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ]		443645	1		|			
ANR	443722	ShiftExpression	( * * sptr & 0xf ) << 8		443645	0		<<			
ANR	443723	BitAndExpression	* * sptr & 0xf		443645	0		&			
ANR	443724	UnaryOperationExpression	* * sptr		443645	0					
ANR	443725	UnaryOperator	*		443645	0					
ANR	443726	UnaryOperationExpression	* sptr		443645	1					
ANR	443727	UnaryOperator	*		443645	0					
ANR	443728	Identifier	sptr		443645	1					
ANR	443729	PrimaryExpression	0xf		443645	1					
ANR	443730	PrimaryExpression	8		443645	1					
ANR	443731	ArrayIndexing	( * sptr ) [ 1 ]		443645	1					
ANR	443732	UnaryOperationExpression	* sptr		443645	0					
ANR	443733	UnaryOperator	*		443645	0					
ANR	443734	Identifier	sptr		443645	1					
ANR	443735	PrimaryExpression	1		443645	1					
ANR	443736	InclusiveOrExpression	( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		443645	2		|			
ANR	443737	ShiftExpression	* * sptr << 4		443645	0		<<			
ANR	443738	UnaryOperationExpression	* * sptr		443645	0					
ANR	443739	UnaryOperator	*		443645	0					
ANR	443740	UnaryOperationExpression	* sptr		443645	1					
ANR	443741	UnaryOperator	*		443645	0					
ANR	443742	Identifier	sptr		443645	1					
ANR	443743	PrimaryExpression	4		443645	1					
ANR	443744	ShiftExpression	( * sptr ) [ 1 ] >> 4		443645	1		>>			
ANR	443745	ArrayIndexing	( * sptr ) [ 1 ]		443645	0					
ANR	443746	UnaryOperationExpression	* sptr		443645	0					
ANR	443747	UnaryOperator	*		443645	0					
ANR	443748	Identifier	sptr		443645	1					
ANR	443749	PrimaryExpression	1		443645	1					
ANR	443750	PrimaryExpression	4		443645	1					
ANR	443751	BreakStatement	break ;	81:10:2615:2620	443645	11	True				
ANR	443752	Label	default :	82:8:2630:2637	443645	12	True				
ANR	443753	Identifier	default		443645	0					
ANR	443754	ReturnStatement	return - 1 ;	83:12:2651:2660	443645	13	True				
ANR	443755	UnaryOperationExpression	- 1		443645	0					
ANR	443756	UnaryOperator	-		443645	0					
ANR	443757	PrimaryExpression	1		443645	1					
ANR	443758	ExpressionStatement	* sbit += sbpv	85:4:2672:2685	443645	1	True				
ANR	443759	AssignmentExpression	* sbit += sbpv		443645	0		+=			
ANR	443760	UnaryOperationExpression	* sbit		443645	0					
ANR	443761	UnaryOperator	*		443645	0					
ANR	443762	Identifier	sbit		443645	1					
ANR	443763	Identifier	sbpv		443645	1					
ANR	443764	ExpressionStatement	* sptr += * sbit >> 3	86:4:2691:2710	443645	2	True				
ANR	443765	AssignmentExpression	* sptr += * sbit >> 3		443645	0		+=			
ANR	443766	UnaryOperationExpression	* sptr		443645	0					
ANR	443767	UnaryOperator	*		443645	0					
ANR	443768	Identifier	sptr		443645	1					
ANR	443769	ShiftExpression	* sbit >> 3		443645	1		>>			
ANR	443770	UnaryOperationExpression	* sbit		443645	0					
ANR	443771	UnaryOperator	*		443645	0					
ANR	443772	Identifier	sbit		443645	1					
ANR	443773	PrimaryExpression	3		443645	1					
ANR	443774	ExpressionStatement	* sbit &= 7	87:4:2716:2726	443645	3	True				
ANR	443775	AssignmentExpression	* sbit &= 7		443645	0		&=			
ANR	443776	UnaryOperationExpression	* sbit		443645	0					
ANR	443777	UnaryOperator	*		443645	0					
ANR	443778	Identifier	sbit		443645	1					
ANR	443779	PrimaryExpression	7		443645	1					
ANR	443780	ReturnStatement	return 0 ;	88:4:2732:2740	443645	4	True				
ANR	443781	PrimaryExpression	0		443645	0					
ANR	443782	Identifier	sample_load_next12		443645	1					
ANR	443783	ParameterList	"uint * value , const byte * * sptr , int * sbit , int sbpv"		443645	2					
ANR	443784	Parameter	uint * value	66:37:2132:2142	443645	0	True				
ANR	443785	ParameterType	uint *		443645	0					
ANR	443786	Identifier	value		443645	1					
ANR	443787	Parameter	const byte * * sptr	66:50:2145:2161	443645	1	True				
ANR	443788	ParameterType	const byte * *		443645	0					
ANR	443789	Identifier	sptr		443645	1					
ANR	443790	Parameter	int * sbit	66:69:2164:2172	443645	2	True				
ANR	443791	ParameterType	int *		443645	0					
ANR	443792	Identifier	sbit		443645	1					
ANR	443793	Parameter	int sbpv	66:80:2175:2182	443645	3	True				
ANR	443794	ParameterType	int		443645	0					
ANR	443795	Identifier	sbpv		443645	1					
ANR	443796	CFGEntryNode	ENTRY		443645		True				
ANR	443797	CFGExitNode	EXIT		443645		True				
ANR	443798	Symbol	sbpv		443645						
ANR	443799	Symbol	* sbit		443645						
ANR	443800	Symbol	* sptr		443645						
ANR	443801	Symbol	* value		443645						
ANR	443802	Symbol	* * sptr		443645						
ANR	443803	Symbol	value		443645						
ANR	443804	Symbol	sptr		443645						
ANR	443805	Symbol	sbit		443645						
ANR	443806	Function	sample_load16	90:18:2762:3391							
ANR	443807	FunctionDef	"sample_load16 (uint * value , const byte * sptr , int sbit , int sbpv)"		443806	0					
ANR	443808	CompoundStatement		91:0:2827:3391	443806	0					
ANR	443809	SwitchStatement	switch ( sbpv >> 2 )		443806	0					
ANR	443810	Condition	sbpv >> 2	92:12:2841:2849	443806	0	True				
ANR	443811	ShiftExpression	sbpv >> 2		443806	0		>>			
ANR	443812	Identifier	sbpv		443806	0					
ANR	443813	PrimaryExpression	2		443806	1					
ANR	443814	CompoundStatement		2:24:25:25	443806	1					
ANR	443815	Label	case 0 :	93:8:2863:2869	443806	0	True				
ANR	443816	ExpressionStatement	* value = ( * sptr >> ( 8 - sbit - sbpv ) ) & ( sbpv | 1 )	94:12:2883:2933	443806	1	True				
ANR	443817	AssignmentExpression	* value = ( * sptr >> ( 8 - sbit - sbpv ) ) & ( sbpv | 1 )		443806	0		=			
ANR	443818	UnaryOperationExpression	* value		443806	0					
ANR	443819	UnaryOperator	*		443806	0					
ANR	443820	Identifier	value		443806	1					
ANR	443821	BitAndExpression	( * sptr >> ( 8 - sbit - sbpv ) ) & ( sbpv | 1 )		443806	1		&			
ANR	443822	ShiftExpression	* sptr >> ( 8 - sbit - sbpv )		443806	0		>>			
ANR	443823	UnaryOperationExpression	* sptr		443806	0					
ANR	443824	UnaryOperator	*		443806	0					
ANR	443825	Identifier	sptr		443806	1					
ANR	443826	AdditiveExpression	8 - sbit - sbpv		443806	1		-			
ANR	443827	PrimaryExpression	8		443806	0					
ANR	443828	AdditiveExpression	sbit - sbpv		443806	1		-			
ANR	443829	Identifier	sbit		443806	0					
ANR	443830	Identifier	sbpv		443806	1					
ANR	443831	InclusiveOrExpression	sbpv | 1		443806	1		|			
ANR	443832	Identifier	sbpv		443806	0					
ANR	443833	PrimaryExpression	1		443806	1					
ANR	443834	BreakStatement	break ;	95:12:2947:2952	443806	2	True				
ANR	443835	Label	case 1 :	96:8:2962:2968	443806	3	True				
ANR	443836	ExpressionStatement	* value = ( * sptr >> ( 4 - sbit ) ) & 0xf	97:12:2982:3018	443806	4	True				
ANR	443837	AssignmentExpression	* value = ( * sptr >> ( 4 - sbit ) ) & 0xf		443806	0		=			
ANR	443838	UnaryOperationExpression	* value		443806	0					
ANR	443839	UnaryOperator	*		443806	0					
ANR	443840	Identifier	value		443806	1					
ANR	443841	BitAndExpression	( * sptr >> ( 4 - sbit ) ) & 0xf		443806	1		&			
ANR	443842	ShiftExpression	* sptr >> ( 4 - sbit )		443806	0		>>			
ANR	443843	UnaryOperationExpression	* sptr		443806	0					
ANR	443844	UnaryOperator	*		443806	0					
ANR	443845	Identifier	sptr		443806	1					
ANR	443846	AdditiveExpression	4 - sbit		443806	1		-			
ANR	443847	PrimaryExpression	4		443806	0					
ANR	443848	Identifier	sbit		443806	1					
ANR	443849	PrimaryExpression	0xf		443806	1					
ANR	443850	BreakStatement	break ;	98:12:3032:3037	443806	5	True				
ANR	443851	Label	case 2 :	99:8:3047:3053	443806	6	True				
ANR	443852	ExpressionStatement	* value = * sptr	100:12:3067:3081	443806	7	True				
ANR	443853	AssignmentExpression	* value = * sptr		443806	0		=			
ANR	443854	UnaryOperationExpression	* value		443806	0					
ANR	443855	UnaryOperator	*		443806	0					
ANR	443856	Identifier	value		443806	1					
ANR	443857	UnaryOperationExpression	* sptr		443806	1					
ANR	443858	UnaryOperator	*		443806	0					
ANR	443859	Identifier	sptr		443806	1					
ANR	443860	BreakStatement	break ;	101:12:3095:3100	443806	8	True				
ANR	443861	Label	case 3 :	102:8:3110:3116	443806	9	True				
ANR	443862	ExpressionStatement	* value = ( sbit ? ( ( * sptr & 0xf ) << 8 ) | sptr [ 1 ] : ( * sptr << 4 ) | ( sptr [ 1 ] >> 4 ) )	103:12:3130:3230	443806	10	True				
ANR	443863	AssignmentExpression	* value = ( sbit ? ( ( * sptr & 0xf ) << 8 ) | sptr [ 1 ] : ( * sptr << 4 ) | ( sptr [ 1 ] >> 4 ) )		443806	0		=			
ANR	443864	UnaryOperationExpression	* value		443806	0					
ANR	443865	UnaryOperator	*		443806	0					
ANR	443866	Identifier	value		443806	1					
ANR	443867	ConditionalExpression	sbit ? ( ( * sptr & 0xf ) << 8 ) | sptr [ 1 ] : ( * sptr << 4 ) | ( sptr [ 1 ] >> 4 )		443806	1					
ANR	443868	Condition	sbit		443806	0					
ANR	443869	Identifier	sbit		443806	0					
ANR	443870	InclusiveOrExpression	( ( * sptr & 0xf ) << 8 ) | sptr [ 1 ]		443806	1		|			
ANR	443871	ShiftExpression	( * sptr & 0xf ) << 8		443806	0		<<			
ANR	443872	BitAndExpression	* sptr & 0xf		443806	0		&			
ANR	443873	UnaryOperationExpression	* sptr		443806	0					
ANR	443874	UnaryOperator	*		443806	0					
ANR	443875	Identifier	sptr		443806	1					
ANR	443876	PrimaryExpression	0xf		443806	1					
ANR	443877	PrimaryExpression	8		443806	1					
ANR	443878	ArrayIndexing	sptr [ 1 ]		443806	1					
ANR	443879	Identifier	sptr		443806	0					
ANR	443880	PrimaryExpression	1		443806	1					
ANR	443881	InclusiveOrExpression	( * sptr << 4 ) | ( sptr [ 1 ] >> 4 )		443806	2		|			
ANR	443882	ShiftExpression	* sptr << 4		443806	0		<<			
ANR	443883	UnaryOperationExpression	* sptr		443806	0					
ANR	443884	UnaryOperator	*		443806	0					
ANR	443885	Identifier	sptr		443806	1					
ANR	443886	PrimaryExpression	4		443806	1					
ANR	443887	ShiftExpression	sptr [ 1 ] >> 4		443806	1		>>			
ANR	443888	ArrayIndexing	sptr [ 1 ]		443806	0					
ANR	443889	Identifier	sptr		443806	0					
ANR	443890	PrimaryExpression	1		443806	1					
ANR	443891	PrimaryExpression	4		443806	1					
ANR	443892	BreakStatement	break ;	105:12:3244:3249	443806	11	True				
ANR	443893	Label	case 4 :	106:8:3259:3265	443806	12	True				
ANR	443894	ExpressionStatement	* value = ( * sptr << 8 ) | sptr [ 1 ]	107:12:3279:3310	443806	13	True				
ANR	443895	AssignmentExpression	* value = ( * sptr << 8 ) | sptr [ 1 ]		443806	0		=			
ANR	443896	UnaryOperationExpression	* value		443806	0					
ANR	443897	UnaryOperator	*		443806	0					
ANR	443898	Identifier	value		443806	1					
ANR	443899	InclusiveOrExpression	( * sptr << 8 ) | sptr [ 1 ]		443806	1		|			
ANR	443900	ShiftExpression	* sptr << 8		443806	0		<<			
ANR	443901	UnaryOperationExpression	* sptr		443806	0					
ANR	443902	UnaryOperator	*		443806	0					
ANR	443903	Identifier	sptr		443806	1					
ANR	443904	PrimaryExpression	8		443806	1					
ANR	443905	ArrayIndexing	sptr [ 1 ]		443806	1					
ANR	443906	Identifier	sptr		443806	0					
ANR	443907	PrimaryExpression	1		443806	1					
ANR	443908	BreakStatement	break ;	108:12:3324:3329	443806	14	True				
ANR	443909	Label	default :	109:8:3339:3346	443806	15	True				
ANR	443910	Identifier	default		443806	0					
ANR	443911	ReturnStatement	return - 1 ;	110:12:3360:3369	443806	16	True				
ANR	443912	UnaryOperationExpression	- 1		443806	0					
ANR	443913	UnaryOperator	-		443806	0					
ANR	443914	PrimaryExpression	1		443806	1					
ANR	443915	ReturnStatement	return 0 ;	112:4:3381:3389	443806	1	True				
ANR	443916	PrimaryExpression	0		443806	0					
ANR	443917	Identifier	sample_load16		443806	1					
ANR	443918	ParameterList	"uint * value , const byte * sptr , int sbit , int sbpv"		443806	2					
ANR	443919	Parameter	uint * value	90:32:2776:2786	443806	0	True				
ANR	443920	ParameterType	uint *		443806	0					
ANR	443921	Identifier	value		443806	1					
ANR	443922	Parameter	const byte * sptr	90:45:2789:2804	443806	1	True				
ANR	443923	ParameterType	const byte *		443806	0					
ANR	443924	Identifier	sptr		443806	1					
ANR	443925	Parameter	int sbit	90:63:2807:2814	443806	2	True				
ANR	443926	ParameterType	int		443806	0					
ANR	443927	Identifier	sbit		443806	1					
ANR	443928	Parameter	int sbpv	90:73:2817:2824	443806	3	True				
ANR	443929	ParameterType	int		443806	0					
ANR	443930	Identifier	sbpv		443806	1					
ANR	443931	CFGEntryNode	ENTRY		443806		True				
ANR	443932	CFGExitNode	EXIT		443806		True				
ANR	443933	Symbol	sbpv		443806						
ANR	443934	Symbol	* sptr		443806						
ANR	443935	Symbol	* value		443806						
ANR	443936	Symbol	value		443806						
ANR	443937	Symbol	sptr		443806						
ANR	443938	Symbol	sbit		443806						
ANR	443939	Function	sample_load_next16	114:18:3411:4129							
ANR	443940	FunctionDef	"sample_load_next16 (ushort * value , const byte * * sptr , int * sbit , int sbpv)"		443939	0					
ANR	443941	CompoundStatement		115:0:3486:4129	443939	0					
ANR	443942	SwitchStatement	switch ( sbpv >> 2 )		443939	0					
ANR	443943	Condition	sbpv >> 2	116:13:3501:3509	443939	0	True				
ANR	443944	ShiftExpression	sbpv >> 2		443939	0		>>			
ANR	443945	Identifier	sbpv		443939	0					
ANR	443946	PrimaryExpression	2		443939	1					
ANR	443947	CompoundStatement		2:25:26:26	443939	1					
ANR	443948	Label	case 0 :	117:8:3523:3529	443939	0	True				
ANR	443949	ExpressionStatement	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )	118:12:3543:3595	443939	1	True				
ANR	443950	AssignmentExpression	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		443939	0		=			
ANR	443951	UnaryOperationExpression	* value		443939	0					
ANR	443952	UnaryOperator	*		443939	0					
ANR	443953	Identifier	value		443939	1					
ANR	443954	BitAndExpression	( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		443939	1		&			
ANR	443955	ShiftExpression	* * sptr >> ( 8 - * sbit - sbpv )		443939	0		>>			
ANR	443956	UnaryOperationExpression	* * sptr		443939	0					
ANR	443957	UnaryOperator	*		443939	0					
ANR	443958	UnaryOperationExpression	* sptr		443939	1					
ANR	443959	UnaryOperator	*		443939	0					
ANR	443960	Identifier	sptr		443939	1					
ANR	443961	AdditiveExpression	8 - * sbit - sbpv		443939	1		-			
ANR	443962	PrimaryExpression	8		443939	0					
ANR	443963	AdditiveExpression	* sbit - sbpv		443939	1		-			
ANR	443964	UnaryOperationExpression	* sbit		443939	0					
ANR	443965	UnaryOperator	*		443939	0					
ANR	443966	Identifier	sbit		443939	1					
ANR	443967	Identifier	sbpv		443939	1					
ANR	443968	InclusiveOrExpression	sbpv | 1		443939	1		|			
ANR	443969	Identifier	sbpv		443939	0					
ANR	443970	PrimaryExpression	1		443939	1					
ANR	443971	BreakStatement	break ;	119:12:3609:3614	443939	2	True				
ANR	443972	Label	case 1 :	120:8:3624:3630	443939	3	True				
ANR	443973	ExpressionStatement	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf	121:12:3644:3682	443939	4	True				
ANR	443974	AssignmentExpression	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf		443939	0		=			
ANR	443975	UnaryOperationExpression	* value		443939	0					
ANR	443976	UnaryOperator	*		443939	0					
ANR	443977	Identifier	value		443939	1					
ANR	443978	BitAndExpression	( * * sptr >> ( 4 - * sbit ) ) & 0xf		443939	1		&			
ANR	443979	ShiftExpression	* * sptr >> ( 4 - * sbit )		443939	0		>>			
ANR	443980	UnaryOperationExpression	* * sptr		443939	0					
ANR	443981	UnaryOperator	*		443939	0					
ANR	443982	UnaryOperationExpression	* sptr		443939	1					
ANR	443983	UnaryOperator	*		443939	0					
ANR	443984	Identifier	sptr		443939	1					
ANR	443985	AdditiveExpression	4 - * sbit		443939	1		-			
ANR	443986	PrimaryExpression	4		443939	0					
ANR	443987	UnaryOperationExpression	* sbit		443939	1					
ANR	443988	UnaryOperator	*		443939	0					
ANR	443989	Identifier	sbit		443939	1					
ANR	443990	PrimaryExpression	0xf		443939	1					
ANR	443991	BreakStatement	break ;	122:12:3696:3701	443939	5	True				
ANR	443992	Label	case 2 :	123:8:3711:3717	443939	6	True				
ANR	443993	ExpressionStatement	* value = * * sptr	124:12:3731:3746	443939	7	True				
ANR	443994	AssignmentExpression	* value = * * sptr		443939	0		=			
ANR	443995	UnaryOperationExpression	* value		443939	0					
ANR	443996	UnaryOperator	*		443939	0					
ANR	443997	Identifier	value		443939	1					
ANR	443998	UnaryOperationExpression	* * sptr		443939	1					
ANR	443999	UnaryOperator	*		443939	0					
ANR	444000	UnaryOperationExpression	* sptr		443939	1					
ANR	444001	UnaryOperator	*		443939	0					
ANR	444002	Identifier	sptr		443939	1					
ANR	444003	BreakStatement	break ;	125:12:3760:3765	443939	8	True				
ANR	444004	Label	case 3 :	126:8:3775:3781	443939	9	True				
ANR	444005	ExpressionStatement	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )	127:12:3795:3904	443939	10	True				
ANR	444006	AssignmentExpression	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )		443939	0		=			
ANR	444007	UnaryOperationExpression	* value		443939	0					
ANR	444008	UnaryOperator	*		443939	0					
ANR	444009	Identifier	value		443939	1					
ANR	444010	ConditionalExpression	* sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		443939	1					
ANR	444011	Condition	* sbit		443939	0					
ANR	444012	UnaryOperationExpression	* sbit		443939	0					
ANR	444013	UnaryOperator	*		443939	0					
ANR	444014	Identifier	sbit		443939	1					
ANR	444015	InclusiveOrExpression	( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ]		443939	1		|			
ANR	444016	ShiftExpression	( * * sptr & 0xf ) << 8		443939	0		<<			
ANR	444017	BitAndExpression	* * sptr & 0xf		443939	0		&			
ANR	444018	UnaryOperationExpression	* * sptr		443939	0					
ANR	444019	UnaryOperator	*		443939	0					
ANR	444020	UnaryOperationExpression	* sptr		443939	1					
ANR	444021	UnaryOperator	*		443939	0					
ANR	444022	Identifier	sptr		443939	1					
ANR	444023	PrimaryExpression	0xf		443939	1					
ANR	444024	PrimaryExpression	8		443939	1					
ANR	444025	ArrayIndexing	( * sptr ) [ 1 ]		443939	1					
ANR	444026	UnaryOperationExpression	* sptr		443939	0					
ANR	444027	UnaryOperator	*		443939	0					
ANR	444028	Identifier	sptr		443939	1					
ANR	444029	PrimaryExpression	1		443939	1					
ANR	444030	InclusiveOrExpression	( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		443939	2		|			
ANR	444031	ShiftExpression	* * sptr << 4		443939	0		<<			
ANR	444032	UnaryOperationExpression	* * sptr		443939	0					
ANR	444033	UnaryOperator	*		443939	0					
ANR	444034	UnaryOperationExpression	* sptr		443939	1					
ANR	444035	UnaryOperator	*		443939	0					
ANR	444036	Identifier	sptr		443939	1					
ANR	444037	PrimaryExpression	4		443939	1					
ANR	444038	ShiftExpression	( * sptr ) [ 1 ] >> 4		443939	1		>>			
ANR	444039	ArrayIndexing	( * sptr ) [ 1 ]		443939	0					
ANR	444040	UnaryOperationExpression	* sptr		443939	0					
ANR	444041	UnaryOperator	*		443939	0					
ANR	444042	Identifier	sptr		443939	1					
ANR	444043	PrimaryExpression	1		443939	1					
ANR	444044	PrimaryExpression	4		443939	1					
ANR	444045	BreakStatement	break ;	129:12:3918:3923	443939	11	True				
ANR	444046	Label	case 4 :	130:8:3933:3939	443939	12	True				
ANR	444047	ExpressionStatement	* value = ( * * sptr << 8 ) | ( * sptr ) [ 1 ]	131:12:3953:3988	443939	13	True				
ANR	444048	AssignmentExpression	* value = ( * * sptr << 8 ) | ( * sptr ) [ 1 ]		443939	0		=			
ANR	444049	UnaryOperationExpression	* value		443939	0					
ANR	444050	UnaryOperator	*		443939	0					
ANR	444051	Identifier	value		443939	1					
ANR	444052	InclusiveOrExpression	( * * sptr << 8 ) | ( * sptr ) [ 1 ]		443939	1		|			
ANR	444053	ShiftExpression	* * sptr << 8		443939	0		<<			
ANR	444054	UnaryOperationExpression	* * sptr		443939	0					
ANR	444055	UnaryOperator	*		443939	0					
ANR	444056	UnaryOperationExpression	* sptr		443939	1					
ANR	444057	UnaryOperator	*		443939	0					
ANR	444058	Identifier	sptr		443939	1					
ANR	444059	PrimaryExpression	8		443939	1					
ANR	444060	ArrayIndexing	( * sptr ) [ 1 ]		443939	1					
ANR	444061	UnaryOperationExpression	* sptr		443939	0					
ANR	444062	UnaryOperator	*		443939	0					
ANR	444063	Identifier	sptr		443939	1					
ANR	444064	PrimaryExpression	1		443939	1					
ANR	444065	BreakStatement	break ;	132:12:4002:4007	443939	14	True				
ANR	444066	Label	default :	133:8:4017:4024	443939	15	True				
ANR	444067	Identifier	default		443939	0					
ANR	444068	ReturnStatement	return - 1 ;	134:12:4038:4047	443939	16	True				
ANR	444069	UnaryOperationExpression	- 1		443939	0					
ANR	444070	UnaryOperator	-		443939	0					
ANR	444071	PrimaryExpression	1		443939	1					
ANR	444072	ExpressionStatement	* sbit += sbpv	136:4:4059:4072	443939	1	True				
ANR	444073	AssignmentExpression	* sbit += sbpv		443939	0		+=			
ANR	444074	UnaryOperationExpression	* sbit		443939	0					
ANR	444075	UnaryOperator	*		443939	0					
ANR	444076	Identifier	sbit		443939	1					
ANR	444077	Identifier	sbpv		443939	1					
ANR	444078	ExpressionStatement	* sptr += * sbit >> 3	137:4:4078:4097	443939	2	True				
ANR	444079	AssignmentExpression	* sptr += * sbit >> 3		443939	0		+=			
ANR	444080	UnaryOperationExpression	* sptr		443939	0					
ANR	444081	UnaryOperator	*		443939	0					
ANR	444082	Identifier	sptr		443939	1					
ANR	444083	ShiftExpression	* sbit >> 3		443939	1		>>			
ANR	444084	UnaryOperationExpression	* sbit		443939	0					
ANR	444085	UnaryOperator	*		443939	0					
ANR	444086	Identifier	sbit		443939	1					
ANR	444087	PrimaryExpression	3		443939	1					
ANR	444088	ExpressionStatement	* sbit &= 7	138:4:4103:4113	443939	3	True				
ANR	444089	AssignmentExpression	* sbit &= 7		443939	0		&=			
ANR	444090	UnaryOperationExpression	* sbit		443939	0					
ANR	444091	UnaryOperator	*		443939	0					
ANR	444092	Identifier	sbit		443939	1					
ANR	444093	PrimaryExpression	7		443939	1					
ANR	444094	ReturnStatement	return 0 ;	139:4:4119:4127	443939	4	True				
ANR	444095	PrimaryExpression	0		443939	0					
ANR	444096	Identifier	sample_load_next16		443939	1					
ANR	444097	ParameterList	"ushort * value , const byte * * sptr , int * sbit , int sbpv"		443939	2					
ANR	444098	Parameter	ushort * value	114:38:3431:3443	443939	0	True				
ANR	444099	ParameterType	ushort *		443939	0					
ANR	444100	Identifier	value		443939	1					
ANR	444101	Parameter	const byte * * sptr	114:53:3446:3462	443939	1	True				
ANR	444102	ParameterType	const byte * *		443939	0					
ANR	444103	Identifier	sptr		443939	1					
ANR	444104	Parameter	int * sbit	114:72:3465:3473	443939	2	True				
ANR	444105	ParameterType	int *		443939	0					
ANR	444106	Identifier	sbit		443939	1					
ANR	444107	Parameter	int sbpv	114:83:3476:3483	443939	3	True				
ANR	444108	ParameterType	int		443939	0					
ANR	444109	Identifier	sbpv		443939	1					
ANR	444110	CFGEntryNode	ENTRY		443939		True				
ANR	444111	CFGExitNode	EXIT		443939		True				
ANR	444112	Symbol	sbpv		443939						
ANR	444113	Symbol	* sbit		443939						
ANR	444114	Symbol	* sptr		443939						
ANR	444115	Symbol	* value		443939						
ANR	444116	Symbol	* * sptr		443939						
ANR	444117	Symbol	value		443939						
ANR	444118	Symbol	sptr		443939						
ANR	444119	Symbol	sbit		443939						
ANR	444120	Function	sample_load_next32	141:18:4149:5102							
ANR	444121	FunctionDef	"sample_load_next32 (uint32_t * value , const byte * * sptr , int * sbit , int sbpv)"		444120	0					
ANR	444122	CompoundStatement		142:0:4225:5102	444120	0					
ANR	444123	SwitchStatement	switch ( sbpv >> 2 )		444120	0					
ANR	444124	Condition	sbpv >> 2	143:13:4240:4248	444120	0	True				
ANR	444125	ShiftExpression	sbpv >> 2		444120	0		>>			
ANR	444126	Identifier	sbpv		444120	0					
ANR	444127	PrimaryExpression	2		444120	1					
ANR	444128	CompoundStatement		2:25:26:26	444120	1					
ANR	444129	Label	case 0 :	144:8:4262:4268	444120	0	True				
ANR	444130	ExpressionStatement	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )	145:12:4282:4334	444120	1	True				
ANR	444131	AssignmentExpression	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		444120	0		=			
ANR	444132	UnaryOperationExpression	* value		444120	0					
ANR	444133	UnaryOperator	*		444120	0					
ANR	444134	Identifier	value		444120	1					
ANR	444135	BitAndExpression	( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		444120	1		&			
ANR	444136	ShiftExpression	* * sptr >> ( 8 - * sbit - sbpv )		444120	0		>>			
ANR	444137	UnaryOperationExpression	* * sptr		444120	0					
ANR	444138	UnaryOperator	*		444120	0					
ANR	444139	UnaryOperationExpression	* sptr		444120	1					
ANR	444140	UnaryOperator	*		444120	0					
ANR	444141	Identifier	sptr		444120	1					
ANR	444142	AdditiveExpression	8 - * sbit - sbpv		444120	1		-			
ANR	444143	PrimaryExpression	8		444120	0					
ANR	444144	AdditiveExpression	* sbit - sbpv		444120	1		-			
ANR	444145	UnaryOperationExpression	* sbit		444120	0					
ANR	444146	UnaryOperator	*		444120	0					
ANR	444147	Identifier	sbit		444120	1					
ANR	444148	Identifier	sbpv		444120	1					
ANR	444149	InclusiveOrExpression	sbpv | 1		444120	1		|			
ANR	444150	Identifier	sbpv		444120	0					
ANR	444151	PrimaryExpression	1		444120	1					
ANR	444152	BreakStatement	break ;	146:12:4348:4353	444120	2	True				
ANR	444153	Label	case 1 :	147:8:4363:4369	444120	3	True				
ANR	444154	ExpressionStatement	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf	148:12:4383:4421	444120	4	True				
ANR	444155	AssignmentExpression	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf		444120	0		=			
ANR	444156	UnaryOperationExpression	* value		444120	0					
ANR	444157	UnaryOperator	*		444120	0					
ANR	444158	Identifier	value		444120	1					
ANR	444159	BitAndExpression	( * * sptr >> ( 4 - * sbit ) ) & 0xf		444120	1		&			
ANR	444160	ShiftExpression	* * sptr >> ( 4 - * sbit )		444120	0		>>			
ANR	444161	UnaryOperationExpression	* * sptr		444120	0					
ANR	444162	UnaryOperator	*		444120	0					
ANR	444163	UnaryOperationExpression	* sptr		444120	1					
ANR	444164	UnaryOperator	*		444120	0					
ANR	444165	Identifier	sptr		444120	1					
ANR	444166	AdditiveExpression	4 - * sbit		444120	1		-			
ANR	444167	PrimaryExpression	4		444120	0					
ANR	444168	UnaryOperationExpression	* sbit		444120	1					
ANR	444169	UnaryOperator	*		444120	0					
ANR	444170	Identifier	sbit		444120	1					
ANR	444171	PrimaryExpression	0xf		444120	1					
ANR	444172	BreakStatement	break ;	149:12:4435:4440	444120	5	True				
ANR	444173	Label	case 2 :	150:8:4450:4456	444120	6	True				
ANR	444174	ExpressionStatement	* value = * * sptr	151:12:4470:4485	444120	7	True				
ANR	444175	AssignmentExpression	* value = * * sptr		444120	0		=			
ANR	444176	UnaryOperationExpression	* value		444120	0					
ANR	444177	UnaryOperator	*		444120	0					
ANR	444178	Identifier	value		444120	1					
ANR	444179	UnaryOperationExpression	* * sptr		444120	1					
ANR	444180	UnaryOperator	*		444120	0					
ANR	444181	UnaryOperationExpression	* sptr		444120	1					
ANR	444182	UnaryOperator	*		444120	0					
ANR	444183	Identifier	sptr		444120	1					
ANR	444184	BreakStatement	break ;	152:12:4499:4504	444120	8	True				
ANR	444185	Label	case 3 :	153:8:4514:4520	444120	9	True				
ANR	444186	ExpressionStatement	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )	154:12:4534:4645	444120	10	True				
ANR	444187	AssignmentExpression	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )		444120	0		=			
ANR	444188	UnaryOperationExpression	* value		444120	0					
ANR	444189	UnaryOperator	*		444120	0					
ANR	444190	Identifier	value		444120	1					
ANR	444191	ConditionalExpression	* sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		444120	1					
ANR	444192	Condition	* sbit		444120	0					
ANR	444193	UnaryOperationExpression	* sbit		444120	0					
ANR	444194	UnaryOperator	*		444120	0					
ANR	444195	Identifier	sbit		444120	1					
ANR	444196	InclusiveOrExpression	( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ]		444120	1		|			
ANR	444197	ShiftExpression	( * * sptr & 0xf ) << 8		444120	0		<<			
ANR	444198	BitAndExpression	* * sptr & 0xf		444120	0		&			
ANR	444199	UnaryOperationExpression	* * sptr		444120	0					
ANR	444200	UnaryOperator	*		444120	0					
ANR	444201	UnaryOperationExpression	* sptr		444120	1					
ANR	444202	UnaryOperator	*		444120	0					
ANR	444203	Identifier	sptr		444120	1					
ANR	444204	PrimaryExpression	0xf		444120	1					
ANR	444205	PrimaryExpression	8		444120	1					
ANR	444206	ArrayIndexing	( * sptr ) [ 1 ]		444120	1					
ANR	444207	UnaryOperationExpression	* sptr		444120	0					
ANR	444208	UnaryOperator	*		444120	0					
ANR	444209	Identifier	sptr		444120	1					
ANR	444210	PrimaryExpression	1		444120	1					
ANR	444211	InclusiveOrExpression	( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		444120	2		|			
ANR	444212	ShiftExpression	* * sptr << 4		444120	0		<<			
ANR	444213	UnaryOperationExpression	* * sptr		444120	0					
ANR	444214	UnaryOperator	*		444120	0					
ANR	444215	UnaryOperationExpression	* sptr		444120	1					
ANR	444216	UnaryOperator	*		444120	0					
ANR	444217	Identifier	sptr		444120	1					
ANR	444218	PrimaryExpression	4		444120	1					
ANR	444219	ShiftExpression	( * sptr ) [ 1 ] >> 4		444120	1		>>			
ANR	444220	ArrayIndexing	( * sptr ) [ 1 ]		444120	0					
ANR	444221	UnaryOperationExpression	* sptr		444120	0					
ANR	444222	UnaryOperator	*		444120	0					
ANR	444223	Identifier	sptr		444120	1					
ANR	444224	PrimaryExpression	1		444120	1					
ANR	444225	PrimaryExpression	4		444120	1					
ANR	444226	BreakStatement	break ;	156:12:4659:4664	444120	11	True				
ANR	444227	Label	case 4 :	157:8:4674:4680	444120	12	True				
ANR	444228	ExpressionStatement	* value = ( * * sptr << 8 ) | ( * sptr ) [ 1 ]	158:12:4694:4729	444120	13	True				
ANR	444229	AssignmentExpression	* value = ( * * sptr << 8 ) | ( * sptr ) [ 1 ]		444120	0		=			
ANR	444230	UnaryOperationExpression	* value		444120	0					
ANR	444231	UnaryOperator	*		444120	0					
ANR	444232	Identifier	value		444120	1					
ANR	444233	InclusiveOrExpression	( * * sptr << 8 ) | ( * sptr ) [ 1 ]		444120	1		|			
ANR	444234	ShiftExpression	* * sptr << 8		444120	0		<<			
ANR	444235	UnaryOperationExpression	* * sptr		444120	0					
ANR	444236	UnaryOperator	*		444120	0					
ANR	444237	UnaryOperationExpression	* sptr		444120	1					
ANR	444238	UnaryOperator	*		444120	0					
ANR	444239	Identifier	sptr		444120	1					
ANR	444240	PrimaryExpression	8		444120	1					
ANR	444241	ArrayIndexing	( * sptr ) [ 1 ]		444120	1					
ANR	444242	UnaryOperationExpression	* sptr		444120	0					
ANR	444243	UnaryOperator	*		444120	0					
ANR	444244	Identifier	sptr		444120	1					
ANR	444245	PrimaryExpression	1		444120	1					
ANR	444246	BreakStatement	break ;	159:12:4743:4748	444120	14	True				
ANR	444247	Label	case 6 :	160:8:4758:4764	444120	15	True				
ANR	444248	ExpressionStatement	* value = ( * * sptr << 16 ) | ( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]	161:12:4778:4834	444120	16	True				
ANR	444249	AssignmentExpression	* value = ( * * sptr << 16 ) | ( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]		444120	0		=			
ANR	444250	UnaryOperationExpression	* value		444120	0					
ANR	444251	UnaryOperator	*		444120	0					
ANR	444252	Identifier	value		444120	1					
ANR	444253	InclusiveOrExpression	( * * sptr << 16 ) | ( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]		444120	1		|			
ANR	444254	ShiftExpression	* * sptr << 16		444120	0		<<			
ANR	444255	UnaryOperationExpression	* * sptr		444120	0					
ANR	444256	UnaryOperator	*		444120	0					
ANR	444257	UnaryOperationExpression	* sptr		444120	1					
ANR	444258	UnaryOperator	*		444120	0					
ANR	444259	Identifier	sptr		444120	1					
ANR	444260	PrimaryExpression	16		444120	1					
ANR	444261	InclusiveOrExpression	( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]		444120	1		|			
ANR	444262	ShiftExpression	( * sptr ) [ 1 ] << 8		444120	0		<<			
ANR	444263	ArrayIndexing	( * sptr ) [ 1 ]		444120	0					
ANR	444264	UnaryOperationExpression	* sptr		444120	0					
ANR	444265	UnaryOperator	*		444120	0					
ANR	444266	Identifier	sptr		444120	1					
ANR	444267	PrimaryExpression	1		444120	1					
ANR	444268	PrimaryExpression	8		444120	1					
ANR	444269	ArrayIndexing	( * sptr ) [ 2 ]		444120	1					
ANR	444270	UnaryOperationExpression	* sptr		444120	0					
ANR	444271	UnaryOperator	*		444120	0					
ANR	444272	Identifier	sptr		444120	1					
ANR	444273	PrimaryExpression	2		444120	1					
ANR	444274	BreakStatement	break ;	162:12:4848:4853	444120	17	True				
ANR	444275	Label	case 8 :	163:8:4863:4869	444120	18	True				
ANR	444276	ExpressionStatement	* value = ( * * sptr << 24 ) | ( ( * sptr ) [ 1 ] << 16 ) | ( ( * sptr ) [ 2 ] << 8 ) | ( * sptr ) [ 3 ]	164:12:4883:4960	444120	19	True				
ANR	444277	AssignmentExpression	* value = ( * * sptr << 24 ) | ( ( * sptr ) [ 1 ] << 16 ) | ( ( * sptr ) [ 2 ] << 8 ) | ( * sptr ) [ 3 ]		444120	0		=			
ANR	444278	UnaryOperationExpression	* value		444120	0					
ANR	444279	UnaryOperator	*		444120	0					
ANR	444280	Identifier	value		444120	1					
ANR	444281	InclusiveOrExpression	( * * sptr << 24 ) | ( ( * sptr ) [ 1 ] << 16 ) | ( ( * sptr ) [ 2 ] << 8 ) | ( * sptr ) [ 3 ]		444120	1		|			
ANR	444282	ShiftExpression	* * sptr << 24		444120	0		<<			
ANR	444283	UnaryOperationExpression	* * sptr		444120	0					
ANR	444284	UnaryOperator	*		444120	0					
ANR	444285	UnaryOperationExpression	* sptr		444120	1					
ANR	444286	UnaryOperator	*		444120	0					
ANR	444287	Identifier	sptr		444120	1					
ANR	444288	PrimaryExpression	24		444120	1					
ANR	444289	InclusiveOrExpression	( ( * sptr ) [ 1 ] << 16 ) | ( ( * sptr ) [ 2 ] << 8 ) | ( * sptr ) [ 3 ]		444120	1		|			
ANR	444290	ShiftExpression	( * sptr ) [ 1 ] << 16		444120	0		<<			
ANR	444291	ArrayIndexing	( * sptr ) [ 1 ]		444120	0					
ANR	444292	UnaryOperationExpression	* sptr		444120	0					
ANR	444293	UnaryOperator	*		444120	0					
ANR	444294	Identifier	sptr		444120	1					
ANR	444295	PrimaryExpression	1		444120	1					
ANR	444296	PrimaryExpression	16		444120	1					
ANR	444297	InclusiveOrExpression	( ( * sptr ) [ 2 ] << 8 ) | ( * sptr ) [ 3 ]		444120	1		|			
ANR	444298	ShiftExpression	( * sptr ) [ 2 ] << 8		444120	0		<<			
ANR	444299	ArrayIndexing	( * sptr ) [ 2 ]		444120	0					
ANR	444300	UnaryOperationExpression	* sptr		444120	0					
ANR	444301	UnaryOperator	*		444120	0					
ANR	444302	Identifier	sptr		444120	1					
ANR	444303	PrimaryExpression	2		444120	1					
ANR	444304	PrimaryExpression	8		444120	1					
ANR	444305	ArrayIndexing	( * sptr ) [ 3 ]		444120	1					
ANR	444306	UnaryOperationExpression	* sptr		444120	0					
ANR	444307	UnaryOperator	*		444120	0					
ANR	444308	Identifier	sptr		444120	1					
ANR	444309	PrimaryExpression	3		444120	1					
ANR	444310	BreakStatement	break ;	165:12:4974:4979	444120	20	True				
ANR	444311	Label	default :	166:8:4989:4996	444120	21	True				
ANR	444312	Identifier	default		444120	0					
ANR	444313	ReturnStatement	return - 1 ;	167:12:5010:5019	444120	22	True				
ANR	444314	UnaryOperationExpression	- 1		444120	0					
ANR	444315	UnaryOperator	-		444120	0					
ANR	444316	PrimaryExpression	1		444120	1					
ANR	444317	ExpressionStatement	* sbit += sbpv	169:4:5031:5044	444120	1	True				
ANR	444318	AssignmentExpression	* sbit += sbpv		444120	0		+=			
ANR	444319	UnaryOperationExpression	* sbit		444120	0					
ANR	444320	UnaryOperator	*		444120	0					
ANR	444321	Identifier	sbit		444120	1					
ANR	444322	Identifier	sbpv		444120	1					
ANR	444323	ExpressionStatement	* sptr += * sbit >> 3	170:4:5050:5069	444120	2	True				
ANR	444324	AssignmentExpression	* sptr += * sbit >> 3		444120	0		+=			
ANR	444325	UnaryOperationExpression	* sptr		444120	0					
ANR	444326	UnaryOperator	*		444120	0					
ANR	444327	Identifier	sptr		444120	1					
ANR	444328	ShiftExpression	* sbit >> 3		444120	1		>>			
ANR	444329	UnaryOperationExpression	* sbit		444120	0					
ANR	444330	UnaryOperator	*		444120	0					
ANR	444331	Identifier	sbit		444120	1					
ANR	444332	PrimaryExpression	3		444120	1					
ANR	444333	ExpressionStatement	* sbit &= 7	171:4:5075:5085	444120	3	True				
ANR	444334	AssignmentExpression	* sbit &= 7		444120	0		&=			
ANR	444335	UnaryOperationExpression	* sbit		444120	0					
ANR	444336	UnaryOperator	*		444120	0					
ANR	444337	Identifier	sbit		444120	1					
ANR	444338	PrimaryExpression	7		444120	1					
ANR	444339	ReturnStatement	return - 1 ;	172:4:5091:5100	444120	4	True				
ANR	444340	UnaryOperationExpression	- 1		444120	0					
ANR	444341	UnaryOperator	-		444120	0					
ANR	444342	PrimaryExpression	1		444120	1					
ANR	444343	Identifier	sample_load_next32		444120	1					
ANR	444344	ParameterList	"uint32_t * value , const byte * * sptr , int * sbit , int sbpv"		444120	2					
ANR	444345	Parameter	uint32_t * value	141:37:4168:4182	444120	0	True				
ANR	444346	ParameterType	uint32_t *		444120	0					
ANR	444347	Identifier	value		444120	1					
ANR	444348	Parameter	const byte * * sptr	141:54:4185:4201	444120	1	True				
ANR	444349	ParameterType	const byte * *		444120	0					
ANR	444350	Identifier	sptr		444120	1					
ANR	444351	Parameter	int * sbit	141:73:4204:4212	444120	2	True				
ANR	444352	ParameterType	int *		444120	0					
ANR	444353	Identifier	sbit		444120	1					
ANR	444354	Parameter	int sbpv	141:84:4215:4222	444120	3	True				
ANR	444355	ParameterType	int		444120	0					
ANR	444356	Identifier	sbpv		444120	1					
ANR	444357	CFGEntryNode	ENTRY		444120		True				
ANR	444358	CFGExitNode	EXIT		444120		True				
ANR	444359	Symbol	sbpv		444120						
ANR	444360	Symbol	* sbit		444120						
ANR	444361	Symbol	* sptr		444120						
ANR	444362	Symbol	* value		444120						
ANR	444363	Symbol	* * sptr		444120						
ANR	444364	Symbol	value		444120						
ANR	444365	Symbol	sptr		444120						
ANR	444366	Symbol	sbit		444120						
ANR	444367	Function	sample_load_next64	174:18:5122:7908							
ANR	444368	FunctionDef	"sample_load_next64 (uint64_t * value , const byte * * sptr , int * sbit , int sbpv)"		444367	0					
ANR	444369	CompoundStatement		175:0:5198:7908	444367	0					
ANR	444370	SwitchStatement	switch ( sbpv >> 2 )		444367	0					
ANR	444371	Condition	sbpv >> 2	176:13:5213:5221	444367	0	True				
ANR	444372	ShiftExpression	sbpv >> 2		444367	0		>>			
ANR	444373	Identifier	sbpv		444367	0					
ANR	444374	PrimaryExpression	2		444367	1					
ANR	444375	CompoundStatement		2:25:26:26	444367	1					
ANR	444376	Label	case 0 :	177:8:5235:5241	444367	0	True				
ANR	444377	ExpressionStatement	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )	178:12:5255:5307	444367	1	True				
ANR	444378	AssignmentExpression	* value = ( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		444367	0		=			
ANR	444379	UnaryOperationExpression	* value		444367	0					
ANR	444380	UnaryOperator	*		444367	0					
ANR	444381	Identifier	value		444367	1					
ANR	444382	BitAndExpression	( * * sptr >> ( 8 - * sbit - sbpv ) ) & ( sbpv | 1 )		444367	1		&			
ANR	444383	ShiftExpression	* * sptr >> ( 8 - * sbit - sbpv )		444367	0		>>			
ANR	444384	UnaryOperationExpression	* * sptr		444367	0					
ANR	444385	UnaryOperator	*		444367	0					
ANR	444386	UnaryOperationExpression	* sptr		444367	1					
ANR	444387	UnaryOperator	*		444367	0					
ANR	444388	Identifier	sptr		444367	1					
ANR	444389	AdditiveExpression	8 - * sbit - sbpv		444367	1		-			
ANR	444390	PrimaryExpression	8		444367	0					
ANR	444391	AdditiveExpression	* sbit - sbpv		444367	1		-			
ANR	444392	UnaryOperationExpression	* sbit		444367	0					
ANR	444393	UnaryOperator	*		444367	0					
ANR	444394	Identifier	sbit		444367	1					
ANR	444395	Identifier	sbpv		444367	1					
ANR	444396	InclusiveOrExpression	sbpv | 1		444367	1		|			
ANR	444397	Identifier	sbpv		444367	0					
ANR	444398	PrimaryExpression	1		444367	1					
ANR	444399	BreakStatement	break ;	179:12:5321:5326	444367	2	True				
ANR	444400	Label	case 1 :	180:8:5336:5342	444367	3	True				
ANR	444401	ExpressionStatement	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf	181:12:5356:5394	444367	4	True				
ANR	444402	AssignmentExpression	* value = ( * * sptr >> ( 4 - * sbit ) ) & 0xf		444367	0		=			
ANR	444403	UnaryOperationExpression	* value		444367	0					
ANR	444404	UnaryOperator	*		444367	0					
ANR	444405	Identifier	value		444367	1					
ANR	444406	BitAndExpression	( * * sptr >> ( 4 - * sbit ) ) & 0xf		444367	1		&			
ANR	444407	ShiftExpression	* * sptr >> ( 4 - * sbit )		444367	0		>>			
ANR	444408	UnaryOperationExpression	* * sptr		444367	0					
ANR	444409	UnaryOperator	*		444367	0					
ANR	444410	UnaryOperationExpression	* sptr		444367	1					
ANR	444411	UnaryOperator	*		444367	0					
ANR	444412	Identifier	sptr		444367	1					
ANR	444413	AdditiveExpression	4 - * sbit		444367	1		-			
ANR	444414	PrimaryExpression	4		444367	0					
ANR	444415	UnaryOperationExpression	* sbit		444367	1					
ANR	444416	UnaryOperator	*		444367	0					
ANR	444417	Identifier	sbit		444367	1					
ANR	444418	PrimaryExpression	0xf		444367	1					
ANR	444419	BreakStatement	break ;	182:12:5408:5413	444367	5	True				
ANR	444420	Label	case 2 :	183:8:5423:5429	444367	6	True				
ANR	444421	ExpressionStatement	* value = * * sptr	184:12:5443:5458	444367	7	True				
ANR	444422	AssignmentExpression	* value = * * sptr		444367	0		=			
ANR	444423	UnaryOperationExpression	* value		444367	0					
ANR	444424	UnaryOperator	*		444367	0					
ANR	444425	Identifier	value		444367	1					
ANR	444426	UnaryOperationExpression	* * sptr		444367	1					
ANR	444427	UnaryOperator	*		444367	0					
ANR	444428	UnaryOperationExpression	* sptr		444367	1					
ANR	444429	UnaryOperator	*		444367	0					
ANR	444430	Identifier	sptr		444367	1					
ANR	444431	BreakStatement	break ;	185:12:5472:5477	444367	8	True				
ANR	444432	Label	case 3 :	186:8:5487:5493	444367	9	True				
ANR	444433	ExpressionStatement	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )	187:12:5507:5618	444367	10	True				
ANR	444434	AssignmentExpression	* value = ( * sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 ) )		444367	0		=			
ANR	444435	UnaryOperationExpression	* value		444367	0					
ANR	444436	UnaryOperator	*		444367	0					
ANR	444437	Identifier	value		444367	1					
ANR	444438	ConditionalExpression	* sbit ? ( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ] : ( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		444367	1					
ANR	444439	Condition	* sbit		444367	0					
ANR	444440	UnaryOperationExpression	* sbit		444367	0					
ANR	444441	UnaryOperator	*		444367	0					
ANR	444442	Identifier	sbit		444367	1					
ANR	444443	InclusiveOrExpression	( ( * * sptr & 0xf ) << 8 ) | ( * sptr ) [ 1 ]		444367	1		|			
ANR	444444	ShiftExpression	( * * sptr & 0xf ) << 8		444367	0		<<			
ANR	444445	BitAndExpression	* * sptr & 0xf		444367	0		&			
ANR	444446	UnaryOperationExpression	* * sptr		444367	0					
ANR	444447	UnaryOperator	*		444367	0					
ANR	444448	UnaryOperationExpression	* sptr		444367	1					
ANR	444449	UnaryOperator	*		444367	0					
ANR	444450	Identifier	sptr		444367	1					
ANR	444451	PrimaryExpression	0xf		444367	1					
ANR	444452	PrimaryExpression	8		444367	1					
ANR	444453	ArrayIndexing	( * sptr ) [ 1 ]		444367	1					
ANR	444454	UnaryOperationExpression	* sptr		444367	0					
ANR	444455	UnaryOperator	*		444367	0					
ANR	444456	Identifier	sptr		444367	1					
ANR	444457	PrimaryExpression	1		444367	1					
ANR	444458	InclusiveOrExpression	( * * sptr << 4 ) | ( ( * sptr ) [ 1 ] >> 4 )		444367	2		|			
ANR	444459	ShiftExpression	* * sptr << 4		444367	0		<<			
ANR	444460	UnaryOperationExpression	* * sptr		444367	0					
ANR	444461	UnaryOperator	*		444367	0					
ANR	444462	UnaryOperationExpression	* sptr		444367	1					
ANR	444463	UnaryOperator	*		444367	0					
ANR	444464	Identifier	sptr		444367	1					
ANR	444465	PrimaryExpression	4		444367	1					
ANR	444466	ShiftExpression	( * sptr ) [ 1 ] >> 4		444367	1		>>			
ANR	444467	ArrayIndexing	( * sptr ) [ 1 ]		444367	0					
ANR	444468	UnaryOperationExpression	* sptr		444367	0					
ANR	444469	UnaryOperator	*		444367	0					
ANR	444470	Identifier	sptr		444367	1					
ANR	444471	PrimaryExpression	1		444367	1					
ANR	444472	PrimaryExpression	4		444367	1					
ANR	444473	BreakStatement	break ;	189:12:5632:5637	444367	11	True				
ANR	444474	Label	case 4 :	190:8:5647:5653	444367	12	True				
ANR	444475	ExpressionStatement	* value = ( * * sptr << 8 ) | ( * sptr ) [ 1 ]	191:12:5667:5702	444367	13	True				
ANR	444476	AssignmentExpression	* value = ( * * sptr << 8 ) | ( * sptr ) [ 1 ]		444367	0		=			
ANR	444477	UnaryOperationExpression	* value		444367	0					
ANR	444478	UnaryOperator	*		444367	0					
ANR	444479	Identifier	value		444367	1					
ANR	444480	InclusiveOrExpression	( * * sptr << 8 ) | ( * sptr ) [ 1 ]		444367	1		|			
ANR	444481	ShiftExpression	* * sptr << 8		444367	0		<<			
ANR	444482	UnaryOperationExpression	* * sptr		444367	0					
ANR	444483	UnaryOperator	*		444367	0					
ANR	444484	UnaryOperationExpression	* sptr		444367	1					
ANR	444485	UnaryOperator	*		444367	0					
ANR	444486	Identifier	sptr		444367	1					
ANR	444487	PrimaryExpression	8		444367	1					
ANR	444488	ArrayIndexing	( * sptr ) [ 1 ]		444367	1					
ANR	444489	UnaryOperationExpression	* sptr		444367	0					
ANR	444490	UnaryOperator	*		444367	0					
ANR	444491	Identifier	sptr		444367	1					
ANR	444492	PrimaryExpression	1		444367	1					
ANR	444493	BreakStatement	break ;	192:12:5716:5721	444367	14	True				
ANR	444494	Label	case 6 :	193:8:5731:5737	444367	15	True				
ANR	444495	ExpressionStatement	* value = ( * * sptr << 16 ) | ( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]	194:12:5751:5807	444367	16	True				
ANR	444496	AssignmentExpression	* value = ( * * sptr << 16 ) | ( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]		444367	0		=			
ANR	444497	UnaryOperationExpression	* value		444367	0					
ANR	444498	UnaryOperator	*		444367	0					
ANR	444499	Identifier	value		444367	1					
ANR	444500	InclusiveOrExpression	( * * sptr << 16 ) | ( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]		444367	1		|			
ANR	444501	ShiftExpression	* * sptr << 16		444367	0		<<			
ANR	444502	UnaryOperationExpression	* * sptr		444367	0					
ANR	444503	UnaryOperator	*		444367	0					
ANR	444504	UnaryOperationExpression	* sptr		444367	1					
ANR	444505	UnaryOperator	*		444367	0					
ANR	444506	Identifier	sptr		444367	1					
ANR	444507	PrimaryExpression	16		444367	1					
ANR	444508	InclusiveOrExpression	( ( * sptr ) [ 1 ] << 8 ) | ( * sptr ) [ 2 ]		444367	1		|			
ANR	444509	ShiftExpression	( * sptr ) [ 1 ] << 8		444367	0		<<			
ANR	444510	ArrayIndexing	( * sptr ) [ 1 ]		444367	0					
ANR	444511	UnaryOperationExpression	* sptr		444367	0					
ANR	444512	UnaryOperator	*		444367	0					
ANR	444513	Identifier	sptr		444367	1					
ANR	444514	PrimaryExpression	1		444367	1					
ANR	444515	PrimaryExpression	8		444367	1					
ANR	444516	ArrayIndexing	( * sptr ) [ 2 ]		444367	1					
ANR	444517	UnaryOperationExpression	* sptr		444367	0					
ANR	444518	UnaryOperator	*		444367	0					
ANR	444519	Identifier	sptr		444367	1					
ANR	444520	PrimaryExpression	2		444367	1					
ANR	444521	BreakStatement	break ;	195:12:5821:5826	444367	17	True				
ANR	444522	Label	case 8 :	196:8:5836:5842	444367	18	True				
ANR	444523	ExpressionStatement	* value = ( ( uint64_t ) ( * * sptr ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 16 ) | ( ( ( uint64_t ) ( * sptr ) [ 2 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 3 ] )	197:12:5856:5981	444367	19	True				
ANR	444524	AssignmentExpression	* value = ( ( uint64_t ) ( * * sptr ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 16 ) | ( ( ( uint64_t ) ( * sptr ) [ 2 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 3 ] )		444367	0		=			
ANR	444525	UnaryOperationExpression	* value		444367	0					
ANR	444526	UnaryOperator	*		444367	0					
ANR	444527	Identifier	value		444367	1					
ANR	444528	InclusiveOrExpression	( ( uint64_t ) ( * * sptr ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 16 ) | ( ( ( uint64_t ) ( * sptr ) [ 2 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 3 ] )		444367	1		|			
ANR	444529	ShiftExpression	( uint64_t ) ( * * sptr ) << 24		444367	0		<<			
ANR	444530	CastExpression	( uint64_t ) ( * * sptr )		444367	0					
ANR	444531	CastTarget	uint64_t		444367	0					
ANR	444532	UnaryOperationExpression	* * sptr		444367	1					
ANR	444533	UnaryOperator	*		444367	0					
ANR	444534	UnaryOperationExpression	* sptr		444367	1					
ANR	444535	UnaryOperator	*		444367	0					
ANR	444536	Identifier	sptr		444367	1					
ANR	444537	PrimaryExpression	24		444367	1					
ANR	444538	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 16 ) | ( ( ( uint64_t ) ( * sptr ) [ 2 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 3 ] )		444367	1		|			
ANR	444539	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 1 ] ) << 16		444367	0		<<			
ANR	444540	CastExpression	( uint64_t ) ( ( * sptr ) [ 1 ] )		444367	0					
ANR	444541	CastTarget	uint64_t		444367	0					
ANR	444542	ArrayIndexing	( * sptr ) [ 1 ]		444367	1					
ANR	444543	UnaryOperationExpression	* sptr		444367	0					
ANR	444544	UnaryOperator	*		444367	0					
ANR	444545	Identifier	sptr		444367	1					
ANR	444546	PrimaryExpression	1		444367	1					
ANR	444547	PrimaryExpression	16		444367	1					
ANR	444548	InclusiveOrExpression	( ( ( uint64_t ) ( * sptr ) [ 2 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 3 ] )		444367	1		|			
ANR	444549	ShiftExpression	( ( uint64_t ) ( * sptr ) [ 2 ] ) << 8		444367	0		<<			
ANR	444550	CastExpression	( uint64_t ) ( * sptr ) [ 2 ]		444367	0					
ANR	444551	CastTarget	uint64_t		444367	0					
ANR	444552	ArrayIndexing	( * sptr ) [ 2 ]		444367	1					
ANR	444553	UnaryOperationExpression	* sptr		444367	0					
ANR	444554	UnaryOperator	*		444367	0					
ANR	444555	Identifier	sptr		444367	1					
ANR	444556	PrimaryExpression	2		444367	1					
ANR	444557	PrimaryExpression	8		444367	1					
ANR	444558	CastExpression	( uint64_t ) ( ( * sptr ) [ 3 ] )		444367	1					
ANR	444559	CastTarget	uint64_t		444367	0					
ANR	444560	ArrayIndexing	( * sptr ) [ 3 ]		444367	1					
ANR	444561	UnaryOperationExpression	* sptr		444367	0					
ANR	444562	UnaryOperator	*		444367	0					
ANR	444563	Identifier	sptr		444367	1					
ANR	444564	PrimaryExpression	3		444367	1					
ANR	444565	BreakStatement	break ;	198:12:5995:6000	444367	20	True				
ANR	444566	Label	case 10 :	199:8:6010:6017	444367	21	True				
ANR	444567	ExpressionStatement	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 4 ] )"	200:12:6031:6303	444367	22	True				
ANR	444568	AssignmentExpression	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 4 ] )"		444367	0		=			
ANR	444569	UnaryOperationExpression	* value		444367	0					
ANR	444570	UnaryOperator	*		444367	0					
ANR	444571	Identifier	value		444367	1					
ANR	444572	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 4 ] )"		444367	1		|			
ANR	444573	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		444367	0		<<			
ANR	444574	CastExpression	( uint64_t ) ( ( * sptr ) [ 0 ] )		444367	0					
ANR	444575	CastTarget	uint64_t		444367	0					
ANR	444576	ArrayIndexing	( * sptr ) [ 0 ]		444367	1					
ANR	444577	UnaryOperationExpression	* sptr		444367	0					
ANR	444578	UnaryOperator	*		444367	0					
ANR	444579	Identifier	sptr		444367	1					
ANR	444580	PrimaryExpression	0		444367	1					
ANR	444581	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		444367	1					
ANR	444582	Callee	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444583	Identifier	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444584	ArgumentList	* value		444367	1					
ANR	444585	Argument	* value		444367	0					
ANR	444586	UnaryOperationExpression	* value		444367	0					
ANR	444587	UnaryOperator	*		444367	0					
ANR	444588	Identifier	value		444367	1					
ANR	444589	Argument	32		444367	1					
ANR	444590	PrimaryExpression	32		444367	0					
ANR	444591	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 4 ] )		444367	1		|			
ANR	444592	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 1 ] ) << 24		444367	0		<<			
ANR	444593	CastExpression	( uint64_t ) ( ( * sptr ) [ 1 ] )		444367	0					
ANR	444594	CastTarget	uint64_t		444367	0					
ANR	444595	ArrayIndexing	( * sptr ) [ 1 ]		444367	1					
ANR	444596	UnaryOperationExpression	* sptr		444367	0					
ANR	444597	UnaryOperator	*		444367	0					
ANR	444598	Identifier	sptr		444367	1					
ANR	444599	PrimaryExpression	1		444367	1					
ANR	444600	PrimaryExpression	24		444367	1					
ANR	444601	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 4 ] )		444367	1		|			
ANR	444602	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 2 ] ) << 16		444367	0		<<			
ANR	444603	CastExpression	( uint64_t ) ( ( * sptr ) [ 2 ] )		444367	0					
ANR	444604	CastTarget	uint64_t		444367	0					
ANR	444605	ArrayIndexing	( * sptr ) [ 2 ]		444367	1					
ANR	444606	UnaryOperationExpression	* sptr		444367	0					
ANR	444607	UnaryOperator	*		444367	0					
ANR	444608	Identifier	sptr		444367	1					
ANR	444609	PrimaryExpression	2		444367	1					
ANR	444610	PrimaryExpression	16		444367	1					
ANR	444611	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 4 ] )		444367	1		|			
ANR	444612	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 3 ] ) << 8		444367	0		<<			
ANR	444613	CastExpression	( uint64_t ) ( ( * sptr ) [ 3 ] )		444367	0					
ANR	444614	CastTarget	uint64_t		444367	0					
ANR	444615	ArrayIndexing	( * sptr ) [ 3 ]		444367	1					
ANR	444616	UnaryOperationExpression	* sptr		444367	0					
ANR	444617	UnaryOperator	*		444367	0					
ANR	444618	Identifier	sptr		444367	1					
ANR	444619	PrimaryExpression	3		444367	1					
ANR	444620	PrimaryExpression	8		444367	1					
ANR	444621	CastExpression	( uint64_t ) ( ( * sptr ) [ 4 ] )		444367	1					
ANR	444622	CastTarget	uint64_t		444367	0					
ANR	444623	ArrayIndexing	( * sptr ) [ 4 ]		444367	1					
ANR	444624	UnaryOperationExpression	* sptr		444367	0					
ANR	444625	UnaryOperator	*		444367	0					
ANR	444626	Identifier	sptr		444367	1					
ANR	444627	PrimaryExpression	4		444367	1					
ANR	444628	BreakStatement	break ;	205:12:6317:6322	444367	23	True				
ANR	444629	Label	case 12 :	206:8:6332:6339	444367	24	True				
ANR	444630	ExpressionStatement	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )"	207:12:6353:6708	444367	25	True				
ANR	444631	AssignmentExpression	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )"		444367	0		=			
ANR	444632	UnaryOperationExpression	* value		444367	0					
ANR	444633	UnaryOperator	*		444367	0					
ANR	444634	Identifier	value		444367	1					
ANR	444635	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )"		444367	1		|			
ANR	444636	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 )"		444367	0		<<			
ANR	444637	CastExpression	( uint64_t ) ( ( * sptr ) [ 0 ] )		444367	0					
ANR	444638	CastTarget	uint64_t		444367	0					
ANR	444639	ArrayIndexing	( * sptr ) [ 0 ]		444367	1					
ANR	444640	UnaryOperationExpression	* sptr		444367	0					
ANR	444641	UnaryOperator	*		444367	0					
ANR	444642	Identifier	sptr		444367	1					
ANR	444643	PrimaryExpression	0		444367	1					
ANR	444644	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 40 )"		444367	1					
ANR	444645	Callee	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444646	Identifier	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444647	ArgumentList	* value		444367	1					
ANR	444648	Argument	* value		444367	0					
ANR	444649	UnaryOperationExpression	* value		444367	0					
ANR	444650	UnaryOperator	*		444367	0					
ANR	444651	Identifier	value		444367	1					
ANR	444652	Argument	40		444367	1					
ANR	444653	PrimaryExpression	40		444367	0					
ANR	444654	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )"		444367	1		|			
ANR	444655	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		444367	0		<<			
ANR	444656	CastExpression	( uint64_t ) ( ( * sptr ) [ 1 ] )		444367	0					
ANR	444657	CastTarget	uint64_t		444367	0					
ANR	444658	ArrayIndexing	( * sptr ) [ 1 ]		444367	1					
ANR	444659	UnaryOperationExpression	* sptr		444367	0					
ANR	444660	UnaryOperator	*		444367	0					
ANR	444661	Identifier	sptr		444367	1					
ANR	444662	PrimaryExpression	1		444367	1					
ANR	444663	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		444367	1					
ANR	444664	Callee	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444665	Identifier	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444666	ArgumentList	* value		444367	1					
ANR	444667	Argument	* value		444367	0					
ANR	444668	UnaryOperationExpression	* value		444367	0					
ANR	444669	UnaryOperator	*		444367	0					
ANR	444670	Identifier	value		444367	1					
ANR	444671	Argument	32		444367	1					
ANR	444672	PrimaryExpression	32		444367	0					
ANR	444673	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )		444367	1		|			
ANR	444674	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 2 ] ) << 24		444367	0		<<			
ANR	444675	CastExpression	( uint64_t ) ( ( * sptr ) [ 2 ] )		444367	0					
ANR	444676	CastTarget	uint64_t		444367	0					
ANR	444677	ArrayIndexing	( * sptr ) [ 2 ]		444367	1					
ANR	444678	UnaryOperationExpression	* sptr		444367	0					
ANR	444679	UnaryOperator	*		444367	0					
ANR	444680	Identifier	sptr		444367	1					
ANR	444681	PrimaryExpression	2		444367	1					
ANR	444682	PrimaryExpression	24		444367	1					
ANR	444683	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )		444367	1		|			
ANR	444684	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 3 ] ) << 16		444367	0		<<			
ANR	444685	CastExpression	( uint64_t ) ( ( * sptr ) [ 3 ] )		444367	0					
ANR	444686	CastTarget	uint64_t		444367	0					
ANR	444687	ArrayIndexing	( * sptr ) [ 3 ]		444367	1					
ANR	444688	UnaryOperationExpression	* sptr		444367	0					
ANR	444689	UnaryOperator	*		444367	0					
ANR	444690	Identifier	sptr		444367	1					
ANR	444691	PrimaryExpression	3		444367	1					
ANR	444692	PrimaryExpression	16		444367	1					
ANR	444693	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 5 ] )		444367	1		|			
ANR	444694	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 4 ] ) << 8		444367	0		<<			
ANR	444695	CastExpression	( uint64_t ) ( ( * sptr ) [ 4 ] )		444367	0					
ANR	444696	CastTarget	uint64_t		444367	0					
ANR	444697	ArrayIndexing	( * sptr ) [ 4 ]		444367	1					
ANR	444698	UnaryOperationExpression	* sptr		444367	0					
ANR	444699	UnaryOperator	*		444367	0					
ANR	444700	Identifier	sptr		444367	1					
ANR	444701	PrimaryExpression	4		444367	1					
ANR	444702	PrimaryExpression	8		444367	1					
ANR	444703	CastExpression	( uint64_t ) ( ( * sptr ) [ 5 ] )		444367	1					
ANR	444704	CastTarget	uint64_t		444367	0					
ANR	444705	ArrayIndexing	( * sptr ) [ 5 ]		444367	1					
ANR	444706	UnaryOperationExpression	* sptr		444367	0					
ANR	444707	UnaryOperator	*		444367	0					
ANR	444708	Identifier	sptr		444367	1					
ANR	444709	PrimaryExpression	5		444367	1					
ANR	444710	BreakStatement	break ;	213:12:6722:6727	444367	26	True				
ANR	444711	Label	case 14 :	214:8:6737:6744	444367	27	True				
ANR	444712	ExpressionStatement	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )"	215:12:6758:7196	444367	28	True				
ANR	444713	AssignmentExpression	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )"		444367	0		=			
ANR	444714	UnaryOperationExpression	* value		444367	0					
ANR	444715	UnaryOperator	*		444367	0					
ANR	444716	Identifier	value		444367	1					
ANR	444717	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )"		444367	1		|			
ANR	444718	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 )"		444367	0		<<			
ANR	444719	CastExpression	( uint64_t ) ( ( * sptr ) [ 0 ] )		444367	0					
ANR	444720	CastTarget	uint64_t		444367	0					
ANR	444721	ArrayIndexing	( * sptr ) [ 0 ]		444367	1					
ANR	444722	UnaryOperationExpression	* sptr		444367	0					
ANR	444723	UnaryOperator	*		444367	0					
ANR	444724	Identifier	sptr		444367	1					
ANR	444725	PrimaryExpression	0		444367	1					
ANR	444726	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 48 )"		444367	1					
ANR	444727	Callee	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444728	Identifier	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444729	ArgumentList	* value		444367	1					
ANR	444730	Argument	* value		444367	0					
ANR	444731	UnaryOperationExpression	* value		444367	0					
ANR	444732	UnaryOperator	*		444367	0					
ANR	444733	Identifier	value		444367	1					
ANR	444734	Argument	48		444367	1					
ANR	444735	PrimaryExpression	48		444367	0					
ANR	444736	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )"		444367	1		|			
ANR	444737	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 )"		444367	0		<<			
ANR	444738	CastExpression	( uint64_t ) ( ( * sptr ) [ 1 ] )		444367	0					
ANR	444739	CastTarget	uint64_t		444367	0					
ANR	444740	ArrayIndexing	( * sptr ) [ 1 ]		444367	1					
ANR	444741	UnaryOperationExpression	* sptr		444367	0					
ANR	444742	UnaryOperator	*		444367	0					
ANR	444743	Identifier	sptr		444367	1					
ANR	444744	PrimaryExpression	1		444367	1					
ANR	444745	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 40 )"		444367	1					
ANR	444746	Callee	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444747	Identifier	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444748	ArgumentList	* value		444367	1					
ANR	444749	Argument	* value		444367	0					
ANR	444750	UnaryOperationExpression	* value		444367	0					
ANR	444751	UnaryOperator	*		444367	0					
ANR	444752	Identifier	value		444367	1					
ANR	444753	Argument	40		444367	1					
ANR	444754	PrimaryExpression	40		444367	0					
ANR	444755	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )"		444367	1		|			
ANR	444756	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		444367	0		<<			
ANR	444757	CastExpression	( uint64_t ) ( ( * sptr ) [ 2 ] )		444367	0					
ANR	444758	CastTarget	uint64_t		444367	0					
ANR	444759	ArrayIndexing	( * sptr ) [ 2 ]		444367	1					
ANR	444760	UnaryOperationExpression	* sptr		444367	0					
ANR	444761	UnaryOperator	*		444367	0					
ANR	444762	Identifier	sptr		444367	1					
ANR	444763	PrimaryExpression	2		444367	1					
ANR	444764	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		444367	1					
ANR	444765	Callee	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444766	Identifier	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444767	ArgumentList	* value		444367	1					
ANR	444768	Argument	* value		444367	0					
ANR	444769	UnaryOperationExpression	* value		444367	0					
ANR	444770	UnaryOperator	*		444367	0					
ANR	444771	Identifier	value		444367	1					
ANR	444772	Argument	32		444367	1					
ANR	444773	PrimaryExpression	32		444367	0					
ANR	444774	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )		444367	1		|			
ANR	444775	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 3 ] ) << 24		444367	0		<<			
ANR	444776	CastExpression	( uint64_t ) ( ( * sptr ) [ 3 ] )		444367	0					
ANR	444777	CastTarget	uint64_t		444367	0					
ANR	444778	ArrayIndexing	( * sptr ) [ 3 ]		444367	1					
ANR	444779	UnaryOperationExpression	* sptr		444367	0					
ANR	444780	UnaryOperator	*		444367	0					
ANR	444781	Identifier	sptr		444367	1					
ANR	444782	PrimaryExpression	3		444367	1					
ANR	444783	PrimaryExpression	24		444367	1					
ANR	444784	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )		444367	1		|			
ANR	444785	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 4 ] ) << 16		444367	0		<<			
ANR	444786	CastExpression	( uint64_t ) ( ( * sptr ) [ 4 ] )		444367	0					
ANR	444787	CastTarget	uint64_t		444367	0					
ANR	444788	ArrayIndexing	( * sptr ) [ 4 ]		444367	1					
ANR	444789	UnaryOperationExpression	* sptr		444367	0					
ANR	444790	UnaryOperator	*		444367	0					
ANR	444791	Identifier	sptr		444367	1					
ANR	444792	PrimaryExpression	4		444367	1					
ANR	444793	PrimaryExpression	16		444367	1					
ANR	444794	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 6 ] )		444367	1		|			
ANR	444795	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 5 ] ) << 8		444367	0		<<			
ANR	444796	CastExpression	( uint64_t ) ( ( * sptr ) [ 5 ] )		444367	0					
ANR	444797	CastTarget	uint64_t		444367	0					
ANR	444798	ArrayIndexing	( * sptr ) [ 5 ]		444367	1					
ANR	444799	UnaryOperationExpression	* sptr		444367	0					
ANR	444800	UnaryOperator	*		444367	0					
ANR	444801	Identifier	sptr		444367	1					
ANR	444802	PrimaryExpression	5		444367	1					
ANR	444803	PrimaryExpression	8		444367	1					
ANR	444804	CastExpression	( uint64_t ) ( ( * sptr ) [ 6 ] )		444367	1					
ANR	444805	CastTarget	uint64_t		444367	0					
ANR	444806	ArrayIndexing	( * sptr ) [ 6 ]		444367	1					
ANR	444807	UnaryOperationExpression	* sptr		444367	0					
ANR	444808	UnaryOperator	*		444367	0					
ANR	444809	Identifier	sptr		444367	1					
ANR	444810	PrimaryExpression	6		444367	1					
ANR	444811	BreakStatement	break ;	222:12:7210:7215	444367	29	True				
ANR	444812	Label	case 16 :	223:8:7225:7232	444367	30	True				
ANR	444813	ExpressionStatement	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 56 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )"	224:12:7246:7767	444367	31	True				
ANR	444814	AssignmentExpression	"* value = ( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 56 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )"		444367	0		=			
ANR	444815	UnaryOperationExpression	* value		444367	0					
ANR	444816	UnaryOperator	*		444367	0					
ANR	444817	Identifier	value		444367	1					
ANR	444818	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 56 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )"		444367	1		|			
ANR	444819	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 0 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 56 )"		444367	0		<<			
ANR	444820	CastExpression	( uint64_t ) ( ( * sptr ) [ 0 ] )		444367	0					
ANR	444821	CastTarget	uint64_t		444367	0					
ANR	444822	ArrayIndexing	( * sptr ) [ 0 ]		444367	1					
ANR	444823	UnaryOperationExpression	* sptr		444367	0					
ANR	444824	UnaryOperator	*		444367	0					
ANR	444825	Identifier	sptr		444367	1					
ANR	444826	PrimaryExpression	0		444367	1					
ANR	444827	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 56 )"		444367	1					
ANR	444828	Callee	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444829	Identifier	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444830	ArgumentList	* value		444367	1					
ANR	444831	Argument	* value		444367	0					
ANR	444832	UnaryOperationExpression	* value		444367	0					
ANR	444833	UnaryOperator	*		444367	0					
ANR	444834	Identifier	value		444367	1					
ANR	444835	Argument	56		444367	1					
ANR	444836	PrimaryExpression	56		444367	0					
ANR	444837	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )"		444367	1		|			
ANR	444838	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 1 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 48 )"		444367	0		<<			
ANR	444839	CastExpression	( uint64_t ) ( ( * sptr ) [ 1 ] )		444367	0					
ANR	444840	CastTarget	uint64_t		444367	0					
ANR	444841	ArrayIndexing	( * sptr ) [ 1 ]		444367	1					
ANR	444842	UnaryOperationExpression	* sptr		444367	0					
ANR	444843	UnaryOperator	*		444367	0					
ANR	444844	Identifier	sptr		444367	1					
ANR	444845	PrimaryExpression	1		444367	1					
ANR	444846	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 48 )"		444367	1					
ANR	444847	Callee	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444848	Identifier	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444849	ArgumentList	* value		444367	1					
ANR	444850	Argument	* value		444367	0					
ANR	444851	UnaryOperationExpression	* value		444367	0					
ANR	444852	UnaryOperator	*		444367	0					
ANR	444853	Identifier	value		444367	1					
ANR	444854	Argument	48		444367	1					
ANR	444855	PrimaryExpression	48		444367	0					
ANR	444856	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )"		444367	1		|			
ANR	444857	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 2 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 40 )"		444367	0		<<			
ANR	444858	CastExpression	( uint64_t ) ( ( * sptr ) [ 2 ] )		444367	0					
ANR	444859	CastTarget	uint64_t		444367	0					
ANR	444860	ArrayIndexing	( * sptr ) [ 2 ]		444367	1					
ANR	444861	UnaryOperationExpression	* sptr		444367	0					
ANR	444862	UnaryOperator	*		444367	0					
ANR	444863	Identifier	sptr		444367	1					
ANR	444864	PrimaryExpression	2		444367	1					
ANR	444865	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 40 )"		444367	1					
ANR	444866	Callee	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444867	Identifier	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444868	ArgumentList	* value		444367	1					
ANR	444869	Argument	* value		444367	0					
ANR	444870	UnaryOperationExpression	* value		444367	0					
ANR	444871	UnaryOperator	*		444367	0					
ANR	444872	Identifier	value		444367	1					
ANR	444873	Argument	40		444367	1					
ANR	444874	PrimaryExpression	40		444367	0					
ANR	444875	InclusiveOrExpression	"( ( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 ) ) | ( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )"		444367	1		|			
ANR	444876	ShiftExpression	"( uint64_t ) ( ( * sptr ) [ 3 ] ) << SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		444367	0		<<			
ANR	444877	CastExpression	( uint64_t ) ( ( * sptr ) [ 3 ] )		444367	0					
ANR	444878	CastTarget	uint64_t		444367	0					
ANR	444879	ArrayIndexing	( * sptr ) [ 3 ]		444367	1					
ANR	444880	UnaryOperationExpression	* sptr		444367	0					
ANR	444881	UnaryOperator	*		444367	0					
ANR	444882	Identifier	sptr		444367	1					
ANR	444883	PrimaryExpression	3		444367	1					
ANR	444884	CallExpression	"SAMPLE_BOUND_SHIFT ( ( * value ) , 32 )"		444367	1					
ANR	444885	Callee	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444886	Identifier	SAMPLE_BOUND_SHIFT		444367	0					
ANR	444887	ArgumentList	* value		444367	1					
ANR	444888	Argument	* value		444367	0					
ANR	444889	UnaryOperationExpression	* value		444367	0					
ANR	444890	UnaryOperator	*		444367	0					
ANR	444891	Identifier	value		444367	1					
ANR	444892	Argument	32		444367	1					
ANR	444893	PrimaryExpression	32		444367	0					
ANR	444894	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24 ) | ( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )		444367	1		|			
ANR	444895	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 4 ] ) << 24		444367	0		<<			
ANR	444896	CastExpression	( uint64_t ) ( ( * sptr ) [ 4 ] )		444367	0					
ANR	444897	CastTarget	uint64_t		444367	0					
ANR	444898	ArrayIndexing	( * sptr ) [ 4 ]		444367	1					
ANR	444899	UnaryOperationExpression	* sptr		444367	0					
ANR	444900	UnaryOperator	*		444367	0					
ANR	444901	Identifier	sptr		444367	1					
ANR	444902	PrimaryExpression	4		444367	1					
ANR	444903	PrimaryExpression	24		444367	1					
ANR	444904	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16 ) | ( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )		444367	1		|			
ANR	444905	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 5 ] ) << 16		444367	0		<<			
ANR	444906	CastExpression	( uint64_t ) ( ( * sptr ) [ 5 ] )		444367	0					
ANR	444907	CastTarget	uint64_t		444367	0					
ANR	444908	ArrayIndexing	( * sptr ) [ 5 ]		444367	1					
ANR	444909	UnaryOperationExpression	* sptr		444367	0					
ANR	444910	UnaryOperator	*		444367	0					
ANR	444911	Identifier	sptr		444367	1					
ANR	444912	PrimaryExpression	5		444367	1					
ANR	444913	PrimaryExpression	16		444367	1					
ANR	444914	InclusiveOrExpression	( ( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8 ) | ( uint64_t ) ( ( * sptr ) [ 7 ] )		444367	1		|			
ANR	444915	ShiftExpression	( uint64_t ) ( ( * sptr ) [ 6 ] ) << 8		444367	0		<<			
ANR	444916	CastExpression	( uint64_t ) ( ( * sptr ) [ 6 ] )		444367	0					
ANR	444917	CastTarget	uint64_t		444367	0					
ANR	444918	ArrayIndexing	( * sptr ) [ 6 ]		444367	1					
ANR	444919	UnaryOperationExpression	* sptr		444367	0					
ANR	444920	UnaryOperator	*		444367	0					
ANR	444921	Identifier	sptr		444367	1					
ANR	444922	PrimaryExpression	6		444367	1					
ANR	444923	PrimaryExpression	8		444367	1					
ANR	444924	CastExpression	( uint64_t ) ( ( * sptr ) [ 7 ] )		444367	1					
ANR	444925	CastTarget	uint64_t		444367	0					
ANR	444926	ArrayIndexing	( * sptr ) [ 7 ]		444367	1					
ANR	444927	UnaryOperationExpression	* sptr		444367	0					
ANR	444928	UnaryOperator	*		444367	0					
ANR	444929	Identifier	sptr		444367	1					
ANR	444930	PrimaryExpression	7		444367	1					
ANR	444931	BreakStatement	break ;	232:12:7781:7786	444367	32	True				
ANR	444932	Label	default :	233:8:7796:7803	444367	33	True				
ANR	444933	Identifier	default		444367	0					
ANR	444934	ReturnStatement	return - 1 ;	234:12:7817:7826	444367	34	True				
ANR	444935	UnaryOperationExpression	- 1		444367	0					
ANR	444936	UnaryOperator	-		444367	0					
ANR	444937	PrimaryExpression	1		444367	1					
ANR	444938	ExpressionStatement	* sbit += sbpv	236:4:7838:7851	444367	1	True				
ANR	444939	AssignmentExpression	* sbit += sbpv		444367	0		+=			
ANR	444940	UnaryOperationExpression	* sbit		444367	0					
ANR	444941	UnaryOperator	*		444367	0					
ANR	444942	Identifier	sbit		444367	1					
ANR	444943	Identifier	sbpv		444367	1					
ANR	444944	ExpressionStatement	* sptr += * sbit >> 3	237:4:7857:7876	444367	2	True				
ANR	444945	AssignmentExpression	* sptr += * sbit >> 3		444367	0		+=			
ANR	444946	UnaryOperationExpression	* sptr		444367	0					
ANR	444947	UnaryOperator	*		444367	0					
ANR	444948	Identifier	sptr		444367	1					
ANR	444949	ShiftExpression	* sbit >> 3		444367	1		>>			
ANR	444950	UnaryOperationExpression	* sbit		444367	0					
ANR	444951	UnaryOperator	*		444367	0					
ANR	444952	Identifier	sbit		444367	1					
ANR	444953	PrimaryExpression	3		444367	1					
ANR	444954	ExpressionStatement	* sbit &= 7	238:4:7882:7892	444367	3	True				
ANR	444955	AssignmentExpression	* sbit &= 7		444367	0		&=			
ANR	444956	UnaryOperationExpression	* sbit		444367	0					
ANR	444957	UnaryOperator	*		444367	0					
ANR	444958	Identifier	sbit		444367	1					
ANR	444959	PrimaryExpression	7		444367	1					
ANR	444960	ReturnStatement	return 0 ;	239:4:7898:7906	444367	4	True				
ANR	444961	PrimaryExpression	0		444367	0					
ANR	444962	Identifier	sample_load_next64		444367	1					
ANR	444963	ParameterList	"uint64_t * value , const byte * * sptr , int * sbit , int sbpv"		444367	2					
ANR	444964	Parameter	uint64_t * value	174:37:5141:5155	444367	0	True				
ANR	444965	ParameterType	uint64_t *		444367	0					
ANR	444966	Identifier	value		444367	1					
ANR	444967	Parameter	const byte * * sptr	174:54:5158:5174	444367	1	True				
ANR	444968	ParameterType	const byte * *		444367	0					
ANR	444969	Identifier	sptr		444367	1					
ANR	444970	Parameter	int * sbit	174:73:5177:5185	444367	2	True				
ANR	444971	ParameterType	int *		444367	0					
ANR	444972	Identifier	sbit		444367	1					
ANR	444973	Parameter	int sbpv	174:84:5188:5195	444367	3	True				
ANR	444974	ParameterType	int		444367	0					
ANR	444975	Identifier	sbpv		444367	1					
ANR	444976	CFGEntryNode	ENTRY		444367		True				
ANR	444977	CFGExitNode	EXIT		444367		True				
ANR	444978	Symbol	sbpv		444367						
ANR	444979	Symbol	SAMPLE_BOUND_SHIFT		444367						
ANR	444980	Symbol	* sbit		444367						
ANR	444981	Symbol	* sptr		444367						
ANR	444982	Symbol	* value		444367						
ANR	444983	Symbol	* * sptr		444367						
ANR	444984	Symbol	value		444367						
ANR	444985	Symbol	sptr		444367						
ANR	444986	Symbol	sbit		444367						
ANR	444987	Function	sample_store_next8	243:18:7976:8669							
ANR	444988	FunctionDef	"sample_store_next8 (uint value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte)"		444987	0					
ANR	444989	CompoundStatement		244:0:8055:8669	444987	0					
ANR	444990	SwitchStatement	switch ( dbpv >> 2 )		444987	0					
ANR	444991	Condition	dbpv >> 2	245:12:8069:8077	444987	0	True				
ANR	444992	ShiftExpression	dbpv >> 2		444987	0		>>			
ANR	444993	Identifier	dbpv		444987	0					
ANR	444994	PrimaryExpression	2		444987	1					
ANR	444995	CompoundStatement		2:24:25:25	444987	1					
ANR	444996	Label	case 0 :	246:8:8091:8097	444987	0	True				
ANR	444997	IfStatement	if ( ( * dbit += dbpv ) == 8 )		444987	1					
ANR	444998	Condition	( * dbit += dbpv ) == 8	247:17:8116:8135	444987	0	True				
ANR	444999	EqualityExpression	( * dbit += dbpv ) == 8		444987	0		==			
ANR	445000	AssignmentExpression	* dbit += dbpv		444987	0		+=			
ANR	445001	UnaryOperationExpression	* dbit		444987	0					
ANR	445002	UnaryOperator	*		444987	0					
ANR	445003	Identifier	dbit		444987	1					
ANR	445004	Identifier	dbpv		444987	1					
ANR	445005	PrimaryExpression	8		444987	1					
ANR	445006	CompoundStatement		4:40:83:83	444987	1					
ANR	445007	ExpressionStatement	* ( * dptr ) ++ = * dbbyte | ( byte ) value	248:15:8156:8190	444987	0	True				
ANR	445008	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( byte ) value		444987	0		=			
ANR	445009	UnaryOperationExpression	* ( * dptr ) ++		444987	0					
ANR	445010	UnaryOperator	*		444987	0					
ANR	445011	PostIncDecOperationExpression	( * dptr ) ++		444987	1					
ANR	445012	UnaryOperationExpression	* dptr		444987	0					
ANR	445013	UnaryOperator	*		444987	0					
ANR	445014	Identifier	dptr		444987	1					
ANR	445015	IncDec	++		444987	1					
ANR	445016	InclusiveOrExpression	* dbbyte | ( byte ) value		444987	1		|			
ANR	445017	UnaryOperationExpression	* dbbyte		444987	0					
ANR	445018	UnaryOperator	*		444987	0					
ANR	445019	Identifier	dbbyte		444987	1					
ANR	445020	CastExpression	( byte ) value		444987	1					
ANR	445021	CastTarget	byte		444987	0					
ANR	445022	Identifier	value		444987	1					
ANR	445023	ExpressionStatement	* dbbyte = 0	249:15:8207:8218	444987	1	True				
ANR	445024	AssignmentExpression	* dbbyte = 0		444987	0		=			
ANR	445025	UnaryOperationExpression	* dbbyte		444987	0					
ANR	445026	UnaryOperator	*		444987	0					
ANR	445027	Identifier	dbbyte		444987	1					
ANR	445028	PrimaryExpression	0		444987	1					
ANR	445029	ExpressionStatement	* dbit = 0	250:15:8235:8244	444987	2	True				
ANR	445030	AssignmentExpression	* dbit = 0		444987	0		=			
ANR	445031	UnaryOperationExpression	* dbit		444987	0					
ANR	445032	UnaryOperator	*		444987	0					
ANR	445033	Identifier	dbit		444987	1					
ANR	445034	PrimaryExpression	0		444987	1					
ANR	445035	ElseStatement	else		444987	0					
ANR	445036	ExpressionStatement	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )	253:16:8293:8332	444987	0	True				
ANR	445037	AssignmentExpression	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )		444987	0		|=			
ANR	445038	UnaryOperationExpression	* dbbyte		444987	0					
ANR	445039	UnaryOperator	*		444987	0					
ANR	445040	Identifier	dbbyte		444987	1					
ANR	445041	CastExpression	( byte ) ( value << ( 8 - * dbit ) )		444987	1					
ANR	445042	CastTarget	byte		444987	0					
ANR	445043	ShiftExpression	value << ( 8 - * dbit )		444987	1		<<			
ANR	445044	Identifier	value		444987	0					
ANR	445045	AdditiveExpression	8 - * dbit		444987	1		-			
ANR	445046	PrimaryExpression	8		444987	0					
ANR	445047	UnaryOperationExpression	* dbit		444987	1					
ANR	445048	UnaryOperator	*		444987	0					
ANR	445049	Identifier	dbit		444987	1					
ANR	445050	BreakStatement	break ;	254:12:8346:8351	444987	2	True				
ANR	445051	Label	case 1 :	255:8:8361:8367	444987	3	True				
ANR	445052	IfStatement	if ( * dbit ^= 4 )		444987	4					
ANR	445053	Condition	* dbit ^= 4	256:17:8386:8395	444987	0	True				
ANR	445054	AssignmentExpression	* dbit ^= 4		444987	0		^=			
ANR	445055	UnaryOperationExpression	* dbit		444987	0					
ANR	445056	UnaryOperator	*		444987	0					
ANR	445057	Identifier	dbit		444987	1					
ANR	445058	PrimaryExpression	4		444987	1					
ANR	445059	ExpressionStatement	* dbbyte = ( byte ) ( value << 4 )	257:16:8415:8443	444987	1	True				
ANR	445060	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		444987	0		=			
ANR	445061	UnaryOperationExpression	* dbbyte		444987	0					
ANR	445062	UnaryOperator	*		444987	0					
ANR	445063	Identifier	dbbyte		444987	1					
ANR	445064	CastExpression	( byte ) ( value << 4 )		444987	1					
ANR	445065	CastTarget	byte		444987	0					
ANR	445066	ShiftExpression	value << 4		444987	1		<<			
ANR	445067	Identifier	value		444987	0					
ANR	445068	PrimaryExpression	4		444987	1					
ANR	445069	ElseStatement	else		444987	0					
ANR	445070	ExpressionStatement	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )	259:16:8478:8514	444987	0	True				
ANR	445071	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )		444987	0		=			
ANR	445072	UnaryOperationExpression	* ( * dptr ) ++		444987	0					
ANR	445073	UnaryOperator	*		444987	0					
ANR	445074	PostIncDecOperationExpression	( * dptr ) ++		444987	1					
ANR	445075	UnaryOperationExpression	* dptr		444987	0					
ANR	445076	UnaryOperator	*		444987	0					
ANR	445077	Identifier	dptr		444987	1					
ANR	445078	IncDec	++		444987	1					
ANR	445079	InclusiveOrExpression	* dbbyte | ( ( byte ) value )		444987	1		|			
ANR	445080	UnaryOperationExpression	* dbbyte		444987	0					
ANR	445081	UnaryOperator	*		444987	0					
ANR	445082	Identifier	dbbyte		444987	1					
ANR	445083	CastExpression	( byte ) value		444987	1					
ANR	445084	CastTarget	byte		444987	0					
ANR	445085	Identifier	value		444987	1					
ANR	445086	BreakStatement	break ;	260:12:8529:8534	444987	5	True				
ANR	445087	Label	case 2 :	261:8:8544:8550	444987	6	True				
ANR	445088	ExpressionStatement	* ( * dptr ) ++ = ( byte ) value	262:12:8564:8588	444987	7	True				
ANR	445089	AssignmentExpression	* ( * dptr ) ++ = ( byte ) value		444987	0		=			
ANR	445090	UnaryOperationExpression	* ( * dptr ) ++		444987	0					
ANR	445091	UnaryOperator	*		444987	0					
ANR	445092	PostIncDecOperationExpression	( * dptr ) ++		444987	1					
ANR	445093	UnaryOperationExpression	* dptr		444987	0					
ANR	445094	UnaryOperator	*		444987	0					
ANR	445095	Identifier	dptr		444987	1					
ANR	445096	IncDec	++		444987	1					
ANR	445097	CastExpression	( byte ) value		444987	1					
ANR	445098	CastTarget	byte		444987	0					
ANR	445099	Identifier	value		444987	1					
ANR	445100	BreakStatement	break ;	263:12:8602:8607	444987	8	True				
ANR	445101	Label	default :	264:8:8617:8624	444987	9	True				
ANR	445102	Identifier	default		444987	0					
ANR	445103	ReturnStatement	return - 1 ;	265:12:8638:8647	444987	10	True				
ANR	445104	UnaryOperationExpression	- 1		444987	0					
ANR	445105	UnaryOperator	-		444987	0					
ANR	445106	PrimaryExpression	1		444987	1					
ANR	445107	ReturnStatement	return 0 ;	267:4:8659:8667	444987	1	True				
ANR	445108	PrimaryExpression	0		444987	0					
ANR	445109	Identifier	sample_store_next8		444987	1					
ANR	445110	ParameterList	"uint value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte"		444987	2					
ANR	445111	Parameter	uint value	243:37:7995:8004	444987	0	True				
ANR	445112	ParameterType	uint		444987	0					
ANR	445113	Identifier	value		444987	1					
ANR	445114	Parameter	byte * * dptr	243:49:8007:8017	444987	1	True				
ANR	445115	ParameterType	byte * *		444987	0					
ANR	445116	Identifier	dptr		444987	1					
ANR	445117	Parameter	int * dbit	243:62:8020:8028	444987	2	True				
ANR	445118	ParameterType	int *		444987	0					
ANR	445119	Identifier	dbit		444987	1					
ANR	445120	Parameter	int dbpv	243:73:8031:8038	444987	3	True				
ANR	445121	ParameterType	int		444987	0					
ANR	445122	Identifier	dbpv		444987	1					
ANR	445123	Parameter	byte * dbbyte	243:83:8041:8052	444987	4	True				
ANR	445124	ParameterType	byte *		444987	0					
ANR	445125	Identifier	dbbyte		444987	1					
ANR	445126	CFGEntryNode	ENTRY		444987		True				
ANR	445127	CFGExitNode	EXIT		444987		True				
ANR	445128	Symbol	dbbyte		444987						
ANR	445129	Symbol	* dbit		444987						
ANR	445130	Symbol	* ( * dptr ) ++		444987						
ANR	445131	Symbol	dptr		444987						
ANR	445132	Symbol	dbit		444987						
ANR	445133	Symbol	dbpv		444987						
ANR	445134	Symbol	* dbbyte		444987						
ANR	445135	Symbol	value		444987						
ANR	445136	Symbol	* dptr		444987						
ANR	445137	Function	sample_store_next_12	270:19:8691:8954							
ANR	445138	FunctionDef	"sample_store_next_12 (uint value , byte * * dptr , int * dbit , byte * dbbyte)"		445137	0					
ANR	445139	CompoundStatement		271:0:8763:8954	445137	0					
ANR	445140	IfStatement	if ( * dbit ^= 4 )		445137	0					
ANR	445141	Condition	* dbit ^= 4	272:9:8774:8783	445137	0	True				
ANR	445142	AssignmentExpression	* dbit ^= 4		445137	0		^=			
ANR	445143	UnaryOperationExpression	* dbit		445137	0					
ANR	445144	UnaryOperator	*		445137	0					
ANR	445145	Identifier	dbit		445137	1					
ANR	445146	PrimaryExpression	4		445137	1					
ANR	445147	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"	273:8:8795:8856	445137	1	True				
ANR	445148	Expression	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"		445137	0					
ANR	445149	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 4 )		445137	0		=			
ANR	445150	UnaryOperationExpression	* ( * dptr ) ++		445137	0					
ANR	445151	UnaryOperator	*		445137	0					
ANR	445152	PostIncDecOperationExpression	( * dptr ) ++		445137	1					
ANR	445153	UnaryOperationExpression	* dptr		445137	0					
ANR	445154	UnaryOperator	*		445137	0					
ANR	445155	Identifier	dptr		445137	1					
ANR	445156	IncDec	++		445137	1					
ANR	445157	CastExpression	( byte ) ( value >> 4 )		445137	1					
ANR	445158	CastTarget	byte		445137	0					
ANR	445159	ShiftExpression	value >> 4		445137	1		>>			
ANR	445160	Identifier	value		445137	0					
ANR	445161	PrimaryExpression	4		445137	1					
ANR	445162	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		445137	1		=			
ANR	445163	UnaryOperationExpression	* dbbyte		445137	0					
ANR	445164	UnaryOperator	*		445137	0					
ANR	445165	Identifier	dbbyte		445137	1					
ANR	445166	CastExpression	( byte ) ( value << 4 )		445137	1					
ANR	445167	CastTarget	byte		445137	0					
ANR	445168	ShiftExpression	value << 4		445137	1		<<			
ANR	445169	Identifier	value		445137	0					
ANR	445170	PrimaryExpression	4		445137	1					
ANR	445171	ElseStatement	else		445137	0					
ANR	445172	ExpressionStatement	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) ( value ) , * dptr += 2"	275:6:8873:8952	445137	0	True				
ANR	445173	Expression	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) ( value ) , * dptr += 2"		445137	0					
ANR	445174	AssignmentExpression	* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 )		445137	0		=			
ANR	445175	UnaryOperationExpression	* ( * dptr )		445137	0					
ANR	445176	UnaryOperator	*		445137	0					
ANR	445177	UnaryOperationExpression	* dptr		445137	1					
ANR	445178	UnaryOperator	*		445137	0					
ANR	445179	Identifier	dptr		445137	1					
ANR	445180	InclusiveOrExpression	* dbbyte | ( byte ) ( value >> 8 )		445137	1		|			
ANR	445181	UnaryOperationExpression	* dbbyte		445137	0					
ANR	445182	UnaryOperator	*		445137	0					
ANR	445183	Identifier	dbbyte		445137	1					
ANR	445184	CastExpression	( byte ) ( value >> 8 )		445137	1					
ANR	445185	CastTarget	byte		445137	0					
ANR	445186	ShiftExpression	value >> 8		445137	1		>>			
ANR	445187	Identifier	value		445137	0					
ANR	445188	PrimaryExpression	8		445137	1					
ANR	445189	Expression	"( * dptr ) [ 1 ] = ( byte ) ( value ) , * dptr += 2"		445137	1					
ANR	445190	AssignmentExpression	( * dptr ) [ 1 ] = ( byte ) ( value )		445137	0		=			
ANR	445191	ArrayIndexing	( * dptr ) [ 1 ]		445137	0					
ANR	445192	UnaryOperationExpression	* dptr		445137	0					
ANR	445193	UnaryOperator	*		445137	0					
ANR	445194	Identifier	dptr		445137	1					
ANR	445195	PrimaryExpression	1		445137	1					
ANR	445196	CastExpression	( byte ) ( value )		445137	1					
ANR	445197	CastTarget	byte		445137	0					
ANR	445198	Identifier	value		445137	1					
ANR	445199	AssignmentExpression	* dptr += 2		445137	1		+=			
ANR	445200	UnaryOperationExpression	* dptr		445137	0					
ANR	445201	UnaryOperator	*		445137	0					
ANR	445202	Identifier	dptr		445137	1					
ANR	445203	PrimaryExpression	2		445137	1					
ANR	445204	Identifier	sample_store_next_12		445137	1					
ANR	445205	ParameterList	"uint value , byte * * dptr , int * dbit , byte * dbbyte"		445137	2					
ANR	445206	Parameter	uint value	270:41:8713:8722	445137	0	True				
ANR	445207	ParameterType	uint		445137	0					
ANR	445208	Identifier	value		445137	1					
ANR	445209	Parameter	byte * * dptr	270:53:8725:8735	445137	1	True				
ANR	445210	ParameterType	byte * *		445137	0					
ANR	445211	Identifier	dptr		445137	1					
ANR	445212	Parameter	int * dbit	270:66:8738:8746	445137	2	True				
ANR	445213	ParameterType	int *		445137	0					
ANR	445214	Identifier	dbit		445137	1					
ANR	445215	Parameter	byte * dbbyte	270:77:8749:8760	445137	3	True				
ANR	445216	ParameterType	byte *		445137	0					
ANR	445217	Identifier	dbbyte		445137	1					
ANR	445218	CFGEntryNode	ENTRY		445137		True				
ANR	445219	CFGExitNode	EXIT		445137		True				
ANR	445220	Symbol	* * dptr		445137						
ANR	445221	Symbol	dbbyte		445137						
ANR	445222	Symbol	* dbit		445137						
ANR	445223	Symbol	* ( * dptr ) ++		445137						
ANR	445224	Symbol	dptr		445137						
ANR	445225	Symbol	* ( * dptr )		445137						
ANR	445226	Symbol	dbit		445137						
ANR	445227	Symbol	* dbbyte		445137						
ANR	445228	Symbol	value		445137						
ANR	445229	Symbol	* dptr		445137						
ANR	445230	Function	sample_store_next12	277:18:8974:9785							
ANR	445231	FunctionDef	"sample_store_next12 (uint value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte)"		445230	0					
ANR	445232	CompoundStatement		278:0:9054:9785	445230	0					
ANR	445233	SwitchStatement	switch ( dbpv >> 2 )		445230	0					
ANR	445234	Condition	dbpv >> 2	279:12:9068:9076	445230	0	True				
ANR	445235	ShiftExpression	dbpv >> 2		445230	0		>>			
ANR	445236	Identifier	dbpv		445230	0					
ANR	445237	PrimaryExpression	2		445230	1					
ANR	445238	CompoundStatement		2:24:25:25	445230	1					
ANR	445239	Label	case 0 :	280:4:9086:9092	445230	0	True				
ANR	445240	IfStatement	if ( ( * dbit += dbpv ) == 8 )		445230	1					
ANR	445241	Condition	( * dbit += dbpv ) == 8	281:12:9106:9125	445230	0	True				
ANR	445242	EqualityExpression	( * dbit += dbpv ) == 8		445230	0		==			
ANR	445243	AssignmentExpression	* dbit += dbpv		445230	0		+=			
ANR	445244	UnaryOperationExpression	* dbit		445230	0					
ANR	445245	UnaryOperator	*		445230	0					
ANR	445246	Identifier	dbit		445230	1					
ANR	445247	Identifier	dbpv		445230	1					
ANR	445248	PrimaryExpression	8		445230	1					
ANR	445249	ExpressionStatement	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"	282:12:9141:9199	445230	1	True				
ANR	445250	Expression	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"		445230	0					
ANR	445251	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( byte ) value		445230	0		=			
ANR	445252	UnaryOperationExpression	* ( * dptr ) ++		445230	0					
ANR	445253	UnaryOperator	*		445230	0					
ANR	445254	PostIncDecOperationExpression	( * dptr ) ++		445230	1					
ANR	445255	UnaryOperationExpression	* dptr		445230	0					
ANR	445256	UnaryOperator	*		445230	0					
ANR	445257	Identifier	dptr		445230	1					
ANR	445258	IncDec	++		445230	1					
ANR	445259	InclusiveOrExpression	* dbbyte | ( byte ) value		445230	1		|			
ANR	445260	UnaryOperationExpression	* dbbyte		445230	0					
ANR	445261	UnaryOperator	*		445230	0					
ANR	445262	Identifier	dbbyte		445230	1					
ANR	445263	CastExpression	( byte ) value		445230	1					
ANR	445264	CastTarget	byte		445230	0					
ANR	445265	Identifier	value		445230	1					
ANR	445266	Expression	"* dbbyte = 0 , * dbit = 0"		445230	1					
ANR	445267	AssignmentExpression	* dbbyte = 0		445230	0		=			
ANR	445268	UnaryOperationExpression	* dbbyte		445230	0					
ANR	445269	UnaryOperator	*		445230	0					
ANR	445270	Identifier	dbbyte		445230	1					
ANR	445271	PrimaryExpression	0		445230	1					
ANR	445272	AssignmentExpression	* dbit = 0		445230	1		=			
ANR	445273	UnaryOperationExpression	* dbit		445230	0					
ANR	445274	UnaryOperator	*		445230	0					
ANR	445275	Identifier	dbit		445230	1					
ANR	445276	PrimaryExpression	0		445230	1					
ANR	445277	ElseStatement	else		445230	0					
ANR	445278	ExpressionStatement	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )	284:12:9226:9265	445230	0	True				
ANR	445279	AssignmentExpression	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )		445230	0		|=			
ANR	445280	UnaryOperationExpression	* dbbyte		445230	0					
ANR	445281	UnaryOperator	*		445230	0					
ANR	445282	Identifier	dbbyte		445230	1					
ANR	445283	CastExpression	( byte ) ( value << ( 8 - * dbit ) )		445230	1					
ANR	445284	CastTarget	byte		445230	0					
ANR	445285	ShiftExpression	value << ( 8 - * dbit )		445230	1		<<			
ANR	445286	Identifier	value		445230	0					
ANR	445287	AdditiveExpression	8 - * dbit		445230	1		-			
ANR	445288	PrimaryExpression	8		445230	0					
ANR	445289	UnaryOperationExpression	* dbit		445230	1					
ANR	445290	UnaryOperator	*		445230	0					
ANR	445291	Identifier	dbit		445230	1					
ANR	445292	BreakStatement	break ;	285:8:9275:9280	445230	2	True				
ANR	445293	Label	case 1 :	286:4:9286:9292	445230	3	True				
ANR	445294	IfStatement	if ( * dbit ^= 4 )		445230	4					
ANR	445295	Condition	* dbit ^= 4	287:13:9307:9316	445230	0	True				
ANR	445296	AssignmentExpression	* dbit ^= 4		445230	0		^=			
ANR	445297	UnaryOperationExpression	* dbit		445230	0					
ANR	445298	UnaryOperator	*		445230	0					
ANR	445299	Identifier	dbit		445230	1					
ANR	445300	PrimaryExpression	4		445230	1					
ANR	445301	ExpressionStatement	* dbbyte = ( byte ) ( value << 4 )	288:12:9332:9360	445230	1	True				
ANR	445302	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		445230	0		=			
ANR	445303	UnaryOperationExpression	* dbbyte		445230	0					
ANR	445304	UnaryOperator	*		445230	0					
ANR	445305	Identifier	dbbyte		445230	1					
ANR	445306	CastExpression	( byte ) ( value << 4 )		445230	1					
ANR	445307	CastTarget	byte		445230	0					
ANR	445308	ShiftExpression	value << 4		445230	1		<<			
ANR	445309	Identifier	value		445230	0					
ANR	445310	PrimaryExpression	4		445230	1					
ANR	445311	ElseStatement	else		445230	0					
ANR	445312	ExpressionStatement	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )	290:12:9387:9423	445230	0	True				
ANR	445313	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )		445230	0		=			
ANR	445314	UnaryOperationExpression	* ( * dptr ) ++		445230	0					
ANR	445315	UnaryOperator	*		445230	0					
ANR	445316	PostIncDecOperationExpression	( * dptr ) ++		445230	1					
ANR	445317	UnaryOperationExpression	* dptr		445230	0					
ANR	445318	UnaryOperator	*		445230	0					
ANR	445319	Identifier	dptr		445230	1					
ANR	445320	IncDec	++		445230	1					
ANR	445321	InclusiveOrExpression	* dbbyte | ( ( byte ) value )		445230	1		|			
ANR	445322	UnaryOperationExpression	* dbbyte		445230	0					
ANR	445323	UnaryOperator	*		445230	0					
ANR	445324	Identifier	dbbyte		445230	1					
ANR	445325	CastExpression	( byte ) value		445230	1					
ANR	445326	CastTarget	byte		445230	0					
ANR	445327	Identifier	value		445230	1					
ANR	445328	BreakStatement	break ;	291:8:9433:9438	445230	5	True				
ANR	445329	Label	case 3 :	292:4:9444:9450	445230	6	True				
ANR	445330	IfStatement	if ( * dbit ^= 4 )		445230	7					
ANR	445331	Condition	* dbit ^= 4	293:13:9465:9474	445230	0	True				
ANR	445332	AssignmentExpression	* dbit ^= 4		445230	0		^=			
ANR	445333	UnaryOperationExpression	* dbit		445230	0					
ANR	445334	UnaryOperator	*		445230	0					
ANR	445335	Identifier	dbit		445230	1					
ANR	445336	PrimaryExpression	4		445230	1					
ANR	445337	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"	294:12:9490:9551	445230	1	True				
ANR	445338	Expression	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"		445230	0					
ANR	445339	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 4 )		445230	0		=			
ANR	445340	UnaryOperationExpression	* ( * dptr ) ++		445230	0					
ANR	445341	UnaryOperator	*		445230	0					
ANR	445342	PostIncDecOperationExpression	( * dptr ) ++		445230	1					
ANR	445343	UnaryOperationExpression	* dptr		445230	0					
ANR	445344	UnaryOperator	*		445230	0					
ANR	445345	Identifier	dptr		445230	1					
ANR	445346	IncDec	++		445230	1					
ANR	445347	CastExpression	( byte ) ( value >> 4 )		445230	1					
ANR	445348	CastTarget	byte		445230	0					
ANR	445349	ShiftExpression	value >> 4		445230	1		>>			
ANR	445350	Identifier	value		445230	0					
ANR	445351	PrimaryExpression	4		445230	1					
ANR	445352	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		445230	1		=			
ANR	445353	UnaryOperationExpression	* dbbyte		445230	0					
ANR	445354	UnaryOperator	*		445230	0					
ANR	445355	Identifier	dbbyte		445230	1					
ANR	445356	CastExpression	( byte ) ( value << 4 )		445230	1					
ANR	445357	CastTarget	byte		445230	0					
ANR	445358	ShiftExpression	value << 4		445230	1		<<			
ANR	445359	Identifier	value		445230	0					
ANR	445360	PrimaryExpression	4		445230	1					
ANR	445361	ElseStatement	else		445230	0					
ANR	445362	ExpressionStatement	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"	296:10:9576:9653	445230	0	True				
ANR	445363	Expression	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		445230	0					
ANR	445364	AssignmentExpression	* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 )		445230	0		=			
ANR	445365	UnaryOperationExpression	* ( * dptr )		445230	0					
ANR	445366	UnaryOperator	*		445230	0					
ANR	445367	UnaryOperationExpression	* dptr		445230	1					
ANR	445368	UnaryOperator	*		445230	0					
ANR	445369	Identifier	dptr		445230	1					
ANR	445370	InclusiveOrExpression	* dbbyte | ( byte ) ( value >> 8 )		445230	1		|			
ANR	445371	UnaryOperationExpression	* dbbyte		445230	0					
ANR	445372	UnaryOperator	*		445230	0					
ANR	445373	Identifier	dbbyte		445230	1					
ANR	445374	CastExpression	( byte ) ( value >> 8 )		445230	1					
ANR	445375	CastTarget	byte		445230	0					
ANR	445376	ShiftExpression	value >> 8		445230	1		>>			
ANR	445377	Identifier	value		445230	0					
ANR	445378	PrimaryExpression	8		445230	1					
ANR	445379	Expression	"( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		445230	1					
ANR	445380	AssignmentExpression	( * dptr ) [ 1 ] = ( byte ) value		445230	0		=			
ANR	445381	ArrayIndexing	( * dptr ) [ 1 ]		445230	0					
ANR	445382	UnaryOperationExpression	* dptr		445230	0					
ANR	445383	UnaryOperator	*		445230	0					
ANR	445384	Identifier	dptr		445230	1					
ANR	445385	PrimaryExpression	1		445230	1					
ANR	445386	CastExpression	( byte ) value		445230	1					
ANR	445387	CastTarget	byte		445230	0					
ANR	445388	Identifier	value		445230	1					
ANR	445389	AssignmentExpression	* dptr += 2		445230	1		+=			
ANR	445390	UnaryOperationExpression	* dptr		445230	0					
ANR	445391	UnaryOperator	*		445230	0					
ANR	445392	Identifier	dptr		445230	1					
ANR	445393	PrimaryExpression	2		445230	1					
ANR	445394	BreakStatement	break ;	297:8:9663:9668	445230	8	True				
ANR	445395	Label	case 2 :	298:4:9674:9680	445230	9	True				
ANR	445396	ExpressionStatement	* ( * dptr ) ++ = ( byte ) value	299:8:9690:9714	445230	10	True				
ANR	445397	AssignmentExpression	* ( * dptr ) ++ = ( byte ) value		445230	0		=			
ANR	445398	UnaryOperationExpression	* ( * dptr ) ++		445230	0					
ANR	445399	UnaryOperator	*		445230	0					
ANR	445400	PostIncDecOperationExpression	( * dptr ) ++		445230	1					
ANR	445401	UnaryOperationExpression	* dptr		445230	0					
ANR	445402	UnaryOperator	*		445230	0					
ANR	445403	Identifier	dptr		445230	1					
ANR	445404	IncDec	++		445230	1					
ANR	445405	CastExpression	( byte ) value		445230	1					
ANR	445406	CastTarget	byte		445230	0					
ANR	445407	Identifier	value		445230	1					
ANR	445408	BreakStatement	break ;	300:8:9724:9729	445230	11	True				
ANR	445409	Label	default :	301:4:9735:9742	445230	12	True				
ANR	445410	Identifier	default		445230	0					
ANR	445411	ReturnStatement	return - 1 ;	302:10:9754:9763	445230	13	True				
ANR	445412	UnaryOperationExpression	- 1		445230	0					
ANR	445413	UnaryOperator	-		445230	0					
ANR	445414	PrimaryExpression	1		445230	1					
ANR	445415	ReturnStatement	return 0 ;	304:4:9775:9783	445230	1	True				
ANR	445416	PrimaryExpression	0		445230	0					
ANR	445417	Identifier	sample_store_next12		445230	1					
ANR	445418	ParameterList	"uint value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte"		445230	2					
ANR	445419	Parameter	uint value	277:38:8994:9003	445230	0	True				
ANR	445420	ParameterType	uint		445230	0					
ANR	445421	Identifier	value		445230	1					
ANR	445422	Parameter	byte * * dptr	277:50:9006:9016	445230	1	True				
ANR	445423	ParameterType	byte * *		445230	0					
ANR	445424	Identifier	dptr		445230	1					
ANR	445425	Parameter	int * dbit	277:63:9019:9027	445230	2	True				
ANR	445426	ParameterType	int *		445230	0					
ANR	445427	Identifier	dbit		445230	1					
ANR	445428	Parameter	int dbpv	277:74:9030:9037	445230	3	True				
ANR	445429	ParameterType	int		445230	0					
ANR	445430	Identifier	dbpv		445230	1					
ANR	445431	Parameter	byte * dbbyte	277:84:9040:9051	445230	4	True				
ANR	445432	ParameterType	byte *		445230	0					
ANR	445433	Identifier	dbbyte		445230	1					
ANR	445434	CFGEntryNode	ENTRY		445230		True				
ANR	445435	CFGExitNode	EXIT		445230		True				
ANR	445436	Symbol	* * dptr		445230						
ANR	445437	Symbol	dbbyte		445230						
ANR	445438	Symbol	* dbit		445230						
ANR	445439	Symbol	* ( * dptr ) ++		445230						
ANR	445440	Symbol	dptr		445230						
ANR	445441	Symbol	* ( * dptr )		445230						
ANR	445442	Symbol	dbit		445230						
ANR	445443	Symbol	dbpv		445230						
ANR	445444	Symbol	* dbbyte		445230						
ANR	445445	Symbol	value		445230						
ANR	445446	Symbol	* dptr		445230						
ANR	445447	Function	sample_store_next16	307:18:9806:10799							
ANR	445448	FunctionDef	"sample_store_next16 (uint value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte)"		445447	0					
ANR	445449	CompoundStatement		308:0:9886:10799	445447	0					
ANR	445450	SwitchStatement	switch ( dbpv >> 2 )		445447	0					
ANR	445451	Condition	dbpv >> 2	309:12:9900:9908	445447	0	True				
ANR	445452	ShiftExpression	dbpv >> 2		445447	0		>>			
ANR	445453	Identifier	dbpv		445447	0					
ANR	445454	PrimaryExpression	2		445447	1					
ANR	445455	CompoundStatement		2:24:25:25	445447	1					
ANR	445456	Label	case 0 :	310:8:9922:9928	445447	0	True				
ANR	445457	IfStatement	if ( ( * dbit += dbpv ) == 8 )		445447	1					
ANR	445458	Condition	( * dbit += dbpv ) == 8	311:17:9947:9966	445447	0	True				
ANR	445459	EqualityExpression	( * dbit += dbpv ) == 8		445447	0		==			
ANR	445460	AssignmentExpression	* dbit += dbpv		445447	0		+=			
ANR	445461	UnaryOperationExpression	* dbit		445447	0					
ANR	445462	UnaryOperator	*		445447	0					
ANR	445463	Identifier	dbit		445447	1					
ANR	445464	Identifier	dbpv		445447	1					
ANR	445465	PrimaryExpression	8		445447	1					
ANR	445466	ExpressionStatement	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"	312:15:9985:10043	445447	1	True				
ANR	445467	Expression	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"		445447	0					
ANR	445468	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( byte ) value		445447	0		=			
ANR	445469	UnaryOperationExpression	* ( * dptr ) ++		445447	0					
ANR	445470	UnaryOperator	*		445447	0					
ANR	445471	PostIncDecOperationExpression	( * dptr ) ++		445447	1					
ANR	445472	UnaryOperationExpression	* dptr		445447	0					
ANR	445473	UnaryOperator	*		445447	0					
ANR	445474	Identifier	dptr		445447	1					
ANR	445475	IncDec	++		445447	1					
ANR	445476	InclusiveOrExpression	* dbbyte | ( byte ) value		445447	1		|			
ANR	445477	UnaryOperationExpression	* dbbyte		445447	0					
ANR	445478	UnaryOperator	*		445447	0					
ANR	445479	Identifier	dbbyte		445447	1					
ANR	445480	CastExpression	( byte ) value		445447	1					
ANR	445481	CastTarget	byte		445447	0					
ANR	445482	Identifier	value		445447	1					
ANR	445483	Expression	"* dbbyte = 0 , * dbit = 0"		445447	1					
ANR	445484	AssignmentExpression	* dbbyte = 0		445447	0		=			
ANR	445485	UnaryOperationExpression	* dbbyte		445447	0					
ANR	445486	UnaryOperator	*		445447	0					
ANR	445487	Identifier	dbbyte		445447	1					
ANR	445488	PrimaryExpression	0		445447	1					
ANR	445489	AssignmentExpression	* dbit = 0		445447	1		=			
ANR	445490	UnaryOperationExpression	* dbit		445447	0					
ANR	445491	UnaryOperator	*		445447	0					
ANR	445492	Identifier	dbit		445447	1					
ANR	445493	PrimaryExpression	0		445447	1					
ANR	445494	ElseStatement	else		445447	0					
ANR	445495	ExpressionStatement	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )	314:16:10078:10117	445447	0	True				
ANR	445496	AssignmentExpression	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )		445447	0		|=			
ANR	445497	UnaryOperationExpression	* dbbyte		445447	0					
ANR	445498	UnaryOperator	*		445447	0					
ANR	445499	Identifier	dbbyte		445447	1					
ANR	445500	CastExpression	( byte ) ( value << ( 8 - * dbit ) )		445447	1					
ANR	445501	CastTarget	byte		445447	0					
ANR	445502	ShiftExpression	value << ( 8 - * dbit )		445447	1		<<			
ANR	445503	Identifier	value		445447	0					
ANR	445504	AdditiveExpression	8 - * dbit		445447	1		-			
ANR	445505	PrimaryExpression	8		445447	0					
ANR	445506	UnaryOperationExpression	* dbit		445447	1					
ANR	445507	UnaryOperator	*		445447	0					
ANR	445508	Identifier	dbit		445447	1					
ANR	445509	BreakStatement	break ;	315:12:10131:10136	445447	2	True				
ANR	445510	Label	case 1 :	316:8:10146:10152	445447	3	True				
ANR	445511	IfStatement	if ( * dbit ^= 4 )		445447	4					
ANR	445512	Condition	* dbit ^= 4	317:17:10171:10180	445447	0	True				
ANR	445513	AssignmentExpression	* dbit ^= 4		445447	0		^=			
ANR	445514	UnaryOperationExpression	* dbit		445447	0					
ANR	445515	UnaryOperator	*		445447	0					
ANR	445516	Identifier	dbit		445447	1					
ANR	445517	PrimaryExpression	4		445447	1					
ANR	445518	ExpressionStatement	* dbbyte = ( byte ) ( value << 4 )	318:16:10200:10228	445447	1	True				
ANR	445519	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		445447	0		=			
ANR	445520	UnaryOperationExpression	* dbbyte		445447	0					
ANR	445521	UnaryOperator	*		445447	0					
ANR	445522	Identifier	dbbyte		445447	1					
ANR	445523	CastExpression	( byte ) ( value << 4 )		445447	1					
ANR	445524	CastTarget	byte		445447	0					
ANR	445525	ShiftExpression	value << 4		445447	1		<<			
ANR	445526	Identifier	value		445447	0					
ANR	445527	PrimaryExpression	4		445447	1					
ANR	445528	ElseStatement	else		445447	0					
ANR	445529	ExpressionStatement	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )	320:16:10263:10299	445447	0	True				
ANR	445530	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )		445447	0		=			
ANR	445531	UnaryOperationExpression	* ( * dptr ) ++		445447	0					
ANR	445532	UnaryOperator	*		445447	0					
ANR	445533	PostIncDecOperationExpression	( * dptr ) ++		445447	1					
ANR	445534	UnaryOperationExpression	* dptr		445447	0					
ANR	445535	UnaryOperator	*		445447	0					
ANR	445536	Identifier	dptr		445447	1					
ANR	445537	IncDec	++		445447	1					
ANR	445538	InclusiveOrExpression	* dbbyte | ( ( byte ) value )		445447	1		|			
ANR	445539	UnaryOperationExpression	* dbbyte		445447	0					
ANR	445540	UnaryOperator	*		445447	0					
ANR	445541	Identifier	dbbyte		445447	1					
ANR	445542	CastExpression	( byte ) value		445447	1					
ANR	445543	CastTarget	byte		445447	0					
ANR	445544	Identifier	value		445447	1					
ANR	445545	BreakStatement	break ;	321:12:10313:10318	445447	5	True				
ANR	445546	Label	case 3 :	322:8:10328:10334	445447	6	True				
ANR	445547	IfStatement	if ( * dbit ^= 4 )		445447	7					
ANR	445548	Condition	* dbit ^= 4	323:17:10353:10362	445447	0	True				
ANR	445549	AssignmentExpression	* dbit ^= 4		445447	0		^=			
ANR	445550	UnaryOperationExpression	* dbit		445447	0					
ANR	445551	UnaryOperator	*		445447	0					
ANR	445552	Identifier	dbit		445447	1					
ANR	445553	PrimaryExpression	4		445447	1					
ANR	445554	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"	324:16:10382:10443	445447	1	True				
ANR	445555	Expression	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"		445447	0					
ANR	445556	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 4 )		445447	0		=			
ANR	445557	UnaryOperationExpression	* ( * dptr ) ++		445447	0					
ANR	445558	UnaryOperator	*		445447	0					
ANR	445559	PostIncDecOperationExpression	( * dptr ) ++		445447	1					
ANR	445560	UnaryOperationExpression	* dptr		445447	0					
ANR	445561	UnaryOperator	*		445447	0					
ANR	445562	Identifier	dptr		445447	1					
ANR	445563	IncDec	++		445447	1					
ANR	445564	CastExpression	( byte ) ( value >> 4 )		445447	1					
ANR	445565	CastTarget	byte		445447	0					
ANR	445566	ShiftExpression	value >> 4		445447	1		>>			
ANR	445567	Identifier	value		445447	0					
ANR	445568	PrimaryExpression	4		445447	1					
ANR	445569	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		445447	1		=			
ANR	445570	UnaryOperationExpression	* dbbyte		445447	0					
ANR	445571	UnaryOperator	*		445447	0					
ANR	445572	Identifier	dbbyte		445447	1					
ANR	445573	CastExpression	( byte ) ( value << 4 )		445447	1					
ANR	445574	CastTarget	byte		445447	0					
ANR	445575	ShiftExpression	value << 4		445447	1		<<			
ANR	445576	Identifier	value		445447	0					
ANR	445577	PrimaryExpression	4		445447	1					
ANR	445578	ElseStatement	else		445447	0					
ANR	445579	ExpressionStatement	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"	326:14:10476:10553	445447	0	True				
ANR	445580	Expression	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		445447	0					
ANR	445581	AssignmentExpression	* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 )		445447	0		=			
ANR	445582	UnaryOperationExpression	* ( * dptr )		445447	0					
ANR	445583	UnaryOperator	*		445447	0					
ANR	445584	UnaryOperationExpression	* dptr		445447	1					
ANR	445585	UnaryOperator	*		445447	0					
ANR	445586	Identifier	dptr		445447	1					
ANR	445587	InclusiveOrExpression	* dbbyte | ( byte ) ( value >> 8 )		445447	1		|			
ANR	445588	UnaryOperationExpression	* dbbyte		445447	0					
ANR	445589	UnaryOperator	*		445447	0					
ANR	445590	Identifier	dbbyte		445447	1					
ANR	445591	CastExpression	( byte ) ( value >> 8 )		445447	1					
ANR	445592	CastTarget	byte		445447	0					
ANR	445593	ShiftExpression	value >> 8		445447	1		>>			
ANR	445594	Identifier	value		445447	0					
ANR	445595	PrimaryExpression	8		445447	1					
ANR	445596	Expression	"( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		445447	1					
ANR	445597	AssignmentExpression	( * dptr ) [ 1 ] = ( byte ) value		445447	0		=			
ANR	445598	ArrayIndexing	( * dptr ) [ 1 ]		445447	0					
ANR	445599	UnaryOperationExpression	* dptr		445447	0					
ANR	445600	UnaryOperator	*		445447	0					
ANR	445601	Identifier	dptr		445447	1					
ANR	445602	PrimaryExpression	1		445447	1					
ANR	445603	CastExpression	( byte ) value		445447	1					
ANR	445604	CastTarget	byte		445447	0					
ANR	445605	Identifier	value		445447	1					
ANR	445606	AssignmentExpression	* dptr += 2		445447	1		+=			
ANR	445607	UnaryOperationExpression	* dptr		445447	0					
ANR	445608	UnaryOperator	*		445447	0					
ANR	445609	Identifier	dptr		445447	1					
ANR	445610	PrimaryExpression	2		445447	1					
ANR	445611	BreakStatement	break ;	327:12:10567:10572	445447	8	True				
ANR	445612	Label	case 4 :	328:8:10582:10588	445447	9	True				
ANR	445613	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 8 )	329:12:10602:10633	445447	10	True				
ANR	445614	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 8 )		445447	0		=			
ANR	445615	UnaryOperationExpression	* ( * dptr ) ++		445447	0					
ANR	445616	UnaryOperator	*		445447	0					
ANR	445617	PostIncDecOperationExpression	( * dptr ) ++		445447	1					
ANR	445618	UnaryOperationExpression	* dptr		445447	0					
ANR	445619	UnaryOperator	*		445447	0					
ANR	445620	Identifier	dptr		445447	1					
ANR	445621	IncDec	++		445447	1					
ANR	445622	CastExpression	( byte ) ( value >> 8 )		445447	1					
ANR	445623	CastTarget	byte		445447	0					
ANR	445624	ShiftExpression	value >> 8		445447	1		>>			
ANR	445625	Identifier	value		445447	0					
ANR	445626	PrimaryExpression	8		445447	1					
ANR	445627	Label	case 2 :	331:8:10674:10680	445447	11	True				
ANR	445628	ExpressionStatement	* ( * dptr ) ++ = ( byte ) value	332:12:10694:10718	445447	12	True				
ANR	445629	AssignmentExpression	* ( * dptr ) ++ = ( byte ) value		445447	0		=			
ANR	445630	UnaryOperationExpression	* ( * dptr ) ++		445447	0					
ANR	445631	UnaryOperator	*		445447	0					
ANR	445632	PostIncDecOperationExpression	( * dptr ) ++		445447	1					
ANR	445633	UnaryOperationExpression	* dptr		445447	0					
ANR	445634	UnaryOperator	*		445447	0					
ANR	445635	Identifier	dptr		445447	1					
ANR	445636	IncDec	++		445447	1					
ANR	445637	CastExpression	( byte ) value		445447	1					
ANR	445638	CastTarget	byte		445447	0					
ANR	445639	Identifier	value		445447	1					
ANR	445640	BreakStatement	break ;	333:12:10732:10737	445447	13	True				
ANR	445641	Label	default :	334:8:10747:10754	445447	14	True				
ANR	445642	Identifier	default		445447	0					
ANR	445643	ReturnStatement	return - 1 ;	335:12:10768:10777	445447	15	True				
ANR	445644	UnaryOperationExpression	- 1		445447	0					
ANR	445645	UnaryOperator	-		445447	0					
ANR	445646	PrimaryExpression	1		445447	1					
ANR	445647	ReturnStatement	return 0 ;	337:4:10789:10797	445447	1	True				
ANR	445648	PrimaryExpression	0		445447	0					
ANR	445649	Identifier	sample_store_next16		445447	1					
ANR	445650	ParameterList	"uint value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte"		445447	2					
ANR	445651	Parameter	uint value	307:38:9826:9835	445447	0	True				
ANR	445652	ParameterType	uint		445447	0					
ANR	445653	Identifier	value		445447	1					
ANR	445654	Parameter	byte * * dptr	307:50:9838:9848	445447	1	True				
ANR	445655	ParameterType	byte * *		445447	0					
ANR	445656	Identifier	dptr		445447	1					
ANR	445657	Parameter	int * dbit	307:63:9851:9859	445447	2	True				
ANR	445658	ParameterType	int *		445447	0					
ANR	445659	Identifier	dbit		445447	1					
ANR	445660	Parameter	int dbpv	307:74:9862:9869	445447	3	True				
ANR	445661	ParameterType	int		445447	0					
ANR	445662	Identifier	dbpv		445447	1					
ANR	445663	Parameter	byte * dbbyte	307:84:9872:9883	445447	4	True				
ANR	445664	ParameterType	byte *		445447	0					
ANR	445665	Identifier	dbbyte		445447	1					
ANR	445666	CFGEntryNode	ENTRY		445447		True				
ANR	445667	CFGExitNode	EXIT		445447		True				
ANR	445668	Symbol	* * dptr		445447						
ANR	445669	Symbol	dbbyte		445447						
ANR	445670	Symbol	* dbit		445447						
ANR	445671	Symbol	* ( * dptr ) ++		445447						
ANR	445672	Symbol	dptr		445447						
ANR	445673	Symbol	* ( * dptr )		445447						
ANR	445674	Symbol	dbit		445447						
ANR	445675	Symbol	dbpv		445447						
ANR	445676	Symbol	* dbbyte		445447						
ANR	445677	Symbol	value		445447						
ANR	445678	Symbol	* dptr		445447						
ANR	445679	Function	sample_store_next32	340:18:10820:11959							
ANR	445680	FunctionDef	"sample_store_next32 (uint32_t value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte)"		445679	0					
ANR	445681	CompoundStatement		341:0:10904:11959	445679	0					
ANR	445682	SwitchStatement	switch ( dbpv >> 2 )		445679	0					
ANR	445683	Condition	dbpv >> 2	342:12:10918:10926	445679	0	True				
ANR	445684	ShiftExpression	dbpv >> 2		445679	0		>>			
ANR	445685	Identifier	dbpv		445679	0					
ANR	445686	PrimaryExpression	2		445679	1					
ANR	445687	CompoundStatement		2:24:25:25	445679	1					
ANR	445688	Label	case 0 :	343:8:10940:10946	445679	0	True				
ANR	445689	IfStatement	if ( ( * dbit += dbpv ) == 8 )		445679	1					
ANR	445690	Condition	( * dbit += dbpv ) == 8	344:17:10966:10985	445679	0	True				
ANR	445691	EqualityExpression	( * dbit += dbpv ) == 8		445679	0		==			
ANR	445692	AssignmentExpression	* dbit += dbpv		445679	0		+=			
ANR	445693	UnaryOperationExpression	* dbit		445679	0					
ANR	445694	UnaryOperator	*		445679	0					
ANR	445695	Identifier	dbit		445679	1					
ANR	445696	Identifier	dbpv		445679	1					
ANR	445697	PrimaryExpression	8		445679	1					
ANR	445698	ExpressionStatement	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"	345:15:11004:11062	445679	1	True				
ANR	445699	Expression	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"		445679	0					
ANR	445700	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( byte ) value		445679	0		=			
ANR	445701	UnaryOperationExpression	* ( * dptr ) ++		445679	0					
ANR	445702	UnaryOperator	*		445679	0					
ANR	445703	PostIncDecOperationExpression	( * dptr ) ++		445679	1					
ANR	445704	UnaryOperationExpression	* dptr		445679	0					
ANR	445705	UnaryOperator	*		445679	0					
ANR	445706	Identifier	dptr		445679	1					
ANR	445707	IncDec	++		445679	1					
ANR	445708	InclusiveOrExpression	* dbbyte | ( byte ) value		445679	1		|			
ANR	445709	UnaryOperationExpression	* dbbyte		445679	0					
ANR	445710	UnaryOperator	*		445679	0					
ANR	445711	Identifier	dbbyte		445679	1					
ANR	445712	CastExpression	( byte ) value		445679	1					
ANR	445713	CastTarget	byte		445679	0					
ANR	445714	Identifier	value		445679	1					
ANR	445715	Expression	"* dbbyte = 0 , * dbit = 0"		445679	1					
ANR	445716	AssignmentExpression	* dbbyte = 0		445679	0		=			
ANR	445717	UnaryOperationExpression	* dbbyte		445679	0					
ANR	445718	UnaryOperator	*		445679	0					
ANR	445719	Identifier	dbbyte		445679	1					
ANR	445720	PrimaryExpression	0		445679	1					
ANR	445721	AssignmentExpression	* dbit = 0		445679	1		=			
ANR	445722	UnaryOperationExpression	* dbit		445679	0					
ANR	445723	UnaryOperator	*		445679	0					
ANR	445724	Identifier	dbit		445679	1					
ANR	445725	PrimaryExpression	0		445679	1					
ANR	445726	ElseStatement	else		445679	0					
ANR	445727	ExpressionStatement	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )	347:16:11098:11137	445679	0	True				
ANR	445728	AssignmentExpression	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )		445679	0		|=			
ANR	445729	UnaryOperationExpression	* dbbyte		445679	0					
ANR	445730	UnaryOperator	*		445679	0					
ANR	445731	Identifier	dbbyte		445679	1					
ANR	445732	CastExpression	( byte ) ( value << ( 8 - * dbit ) )		445679	1					
ANR	445733	CastTarget	byte		445679	0					
ANR	445734	ShiftExpression	value << ( 8 - * dbit )		445679	1		<<			
ANR	445735	Identifier	value		445679	0					
ANR	445736	AdditiveExpression	8 - * dbit		445679	1		-			
ANR	445737	PrimaryExpression	8		445679	0					
ANR	445738	UnaryOperationExpression	* dbit		445679	1					
ANR	445739	UnaryOperator	*		445679	0					
ANR	445740	Identifier	dbit		445679	1					
ANR	445741	BreakStatement	break ;	348:12:11151:11156	445679	2	True				
ANR	445742	Label	case 1 :	349:8:11166:11172	445679	3	True				
ANR	445743	IfStatement	if ( * dbit ^= 4 )		445679	4					
ANR	445744	Condition	* dbit ^= 4	350:17:11191:11200	445679	0	True				
ANR	445745	AssignmentExpression	* dbit ^= 4		445679	0		^=			
ANR	445746	UnaryOperationExpression	* dbit		445679	0					
ANR	445747	UnaryOperator	*		445679	0					
ANR	445748	Identifier	dbit		445679	1					
ANR	445749	PrimaryExpression	4		445679	1					
ANR	445750	ExpressionStatement	* dbbyte = ( byte ) ( value << 4 )	351:16:11220:11248	445679	1	True				
ANR	445751	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		445679	0		=			
ANR	445752	UnaryOperationExpression	* dbbyte		445679	0					
ANR	445753	UnaryOperator	*		445679	0					
ANR	445754	Identifier	dbbyte		445679	1					
ANR	445755	CastExpression	( byte ) ( value << 4 )		445679	1					
ANR	445756	CastTarget	byte		445679	0					
ANR	445757	ShiftExpression	value << 4		445679	1		<<			
ANR	445758	Identifier	value		445679	0					
ANR	445759	PrimaryExpression	4		445679	1					
ANR	445760	ElseStatement	else		445679	0					
ANR	445761	ExpressionStatement	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )	353:16:11283:11319	445679	0	True				
ANR	445762	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )		445679	0		=			
ANR	445763	UnaryOperationExpression	* ( * dptr ) ++		445679	0					
ANR	445764	UnaryOperator	*		445679	0					
ANR	445765	PostIncDecOperationExpression	( * dptr ) ++		445679	1					
ANR	445766	UnaryOperationExpression	* dptr		445679	0					
ANR	445767	UnaryOperator	*		445679	0					
ANR	445768	Identifier	dptr		445679	1					
ANR	445769	IncDec	++		445679	1					
ANR	445770	InclusiveOrExpression	* dbbyte | ( ( byte ) value )		445679	1		|			
ANR	445771	UnaryOperationExpression	* dbbyte		445679	0					
ANR	445772	UnaryOperator	*		445679	0					
ANR	445773	Identifier	dbbyte		445679	1					
ANR	445774	CastExpression	( byte ) value		445679	1					
ANR	445775	CastTarget	byte		445679	0					
ANR	445776	Identifier	value		445679	1					
ANR	445777	BreakStatement	break ;	354:12:11333:11338	445679	5	True				
ANR	445778	Label	case 3 :	355:8:11348:11354	445679	6	True				
ANR	445779	IfStatement	if ( * dbit ^= 4 )		445679	7					
ANR	445780	Condition	* dbit ^= 4	356:17:11373:11382	445679	0	True				
ANR	445781	AssignmentExpression	* dbit ^= 4		445679	0		^=			
ANR	445782	UnaryOperationExpression	* dbit		445679	0					
ANR	445783	UnaryOperator	*		445679	0					
ANR	445784	Identifier	dbit		445679	1					
ANR	445785	PrimaryExpression	4		445679	1					
ANR	445786	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"	357:16:11402:11463	445679	1	True				
ANR	445787	Expression	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"		445679	0					
ANR	445788	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 4 )		445679	0		=			
ANR	445789	UnaryOperationExpression	* ( * dptr ) ++		445679	0					
ANR	445790	UnaryOperator	*		445679	0					
ANR	445791	PostIncDecOperationExpression	( * dptr ) ++		445679	1					
ANR	445792	UnaryOperationExpression	* dptr		445679	0					
ANR	445793	UnaryOperator	*		445679	0					
ANR	445794	Identifier	dptr		445679	1					
ANR	445795	IncDec	++		445679	1					
ANR	445796	CastExpression	( byte ) ( value >> 4 )		445679	1					
ANR	445797	CastTarget	byte		445679	0					
ANR	445798	ShiftExpression	value >> 4		445679	1		>>			
ANR	445799	Identifier	value		445679	0					
ANR	445800	PrimaryExpression	4		445679	1					
ANR	445801	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		445679	1		=			
ANR	445802	UnaryOperationExpression	* dbbyte		445679	0					
ANR	445803	UnaryOperator	*		445679	0					
ANR	445804	Identifier	dbbyte		445679	1					
ANR	445805	CastExpression	( byte ) ( value << 4 )		445679	1					
ANR	445806	CastTarget	byte		445679	0					
ANR	445807	ShiftExpression	value << 4		445679	1		<<			
ANR	445808	Identifier	value		445679	0					
ANR	445809	PrimaryExpression	4		445679	1					
ANR	445810	ElseStatement	else		445679	0					
ANR	445811	ExpressionStatement	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"	359:14:11496:11573	445679	0	True				
ANR	445812	Expression	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		445679	0					
ANR	445813	AssignmentExpression	* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 )		445679	0		=			
ANR	445814	UnaryOperationExpression	* ( * dptr )		445679	0					
ANR	445815	UnaryOperator	*		445679	0					
ANR	445816	UnaryOperationExpression	* dptr		445679	1					
ANR	445817	UnaryOperator	*		445679	0					
ANR	445818	Identifier	dptr		445679	1					
ANR	445819	InclusiveOrExpression	* dbbyte | ( byte ) ( value >> 8 )		445679	1		|			
ANR	445820	UnaryOperationExpression	* dbbyte		445679	0					
ANR	445821	UnaryOperator	*		445679	0					
ANR	445822	Identifier	dbbyte		445679	1					
ANR	445823	CastExpression	( byte ) ( value >> 8 )		445679	1					
ANR	445824	CastTarget	byte		445679	0					
ANR	445825	ShiftExpression	value >> 8		445679	1		>>			
ANR	445826	Identifier	value		445679	0					
ANR	445827	PrimaryExpression	8		445679	1					
ANR	445828	Expression	"( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		445679	1					
ANR	445829	AssignmentExpression	( * dptr ) [ 1 ] = ( byte ) value		445679	0		=			
ANR	445830	ArrayIndexing	( * dptr ) [ 1 ]		445679	0					
ANR	445831	UnaryOperationExpression	* dptr		445679	0					
ANR	445832	UnaryOperator	*		445679	0					
ANR	445833	Identifier	dptr		445679	1					
ANR	445834	PrimaryExpression	1		445679	1					
ANR	445835	CastExpression	( byte ) value		445679	1					
ANR	445836	CastTarget	byte		445679	0					
ANR	445837	Identifier	value		445679	1					
ANR	445838	AssignmentExpression	* dptr += 2		445679	1		+=			
ANR	445839	UnaryOperationExpression	* dptr		445679	0					
ANR	445840	UnaryOperator	*		445679	0					
ANR	445841	Identifier	dptr		445679	1					
ANR	445842	PrimaryExpression	2		445679	1					
ANR	445843	BreakStatement	break ;	360:12:11587:11592	445679	8	True				
ANR	445844	Label	case 8 :	361:8:11602:11608	445679	9	True				
ANR	445845	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 24 )	361:16:11610:11642	445679	10	True				
ANR	445846	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 24 )		445679	0		=			
ANR	445847	UnaryOperationExpression	* ( * dptr ) ++		445679	0					
ANR	445848	UnaryOperator	*		445679	0					
ANR	445849	PostIncDecOperationExpression	( * dptr ) ++		445679	1					
ANR	445850	UnaryOperationExpression	* dptr		445679	0					
ANR	445851	UnaryOperator	*		445679	0					
ANR	445852	Identifier	dptr		445679	1					
ANR	445853	IncDec	++		445679	1					
ANR	445854	CastExpression	( byte ) ( value >> 24 )		445679	1					
ANR	445855	CastTarget	byte		445679	0					
ANR	445856	ShiftExpression	value >> 24		445679	1		>>			
ANR	445857	Identifier	value		445679	0					
ANR	445858	PrimaryExpression	24		445679	1					
ANR	445859	Label	case 6 :	363:8:11683:11689	445679	11	True				
ANR	445860	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 16 )	363:16:11691:11723	445679	12	True				
ANR	445861	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 16 )		445679	0		=			
ANR	445862	UnaryOperationExpression	* ( * dptr ) ++		445679	0					
ANR	445863	UnaryOperator	*		445679	0					
ANR	445864	PostIncDecOperationExpression	( * dptr ) ++		445679	1					
ANR	445865	UnaryOperationExpression	* dptr		445679	0					
ANR	445866	UnaryOperator	*		445679	0					
ANR	445867	Identifier	dptr		445679	1					
ANR	445868	IncDec	++		445679	1					
ANR	445869	CastExpression	( byte ) ( value >> 16 )		445679	1					
ANR	445870	CastTarget	byte		445679	0					
ANR	445871	ShiftExpression	value >> 16		445679	1		>>			
ANR	445872	Identifier	value		445679	0					
ANR	445873	PrimaryExpression	16		445679	1					
ANR	445874	Label	case 4 :	365:8:11764:11770	445679	13	True				
ANR	445875	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 8 )	365:16:11772:11803	445679	14	True				
ANR	445876	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 8 )		445679	0		=			
ANR	445877	UnaryOperationExpression	* ( * dptr ) ++		445679	0					
ANR	445878	UnaryOperator	*		445679	0					
ANR	445879	PostIncDecOperationExpression	( * dptr ) ++		445679	1					
ANR	445880	UnaryOperationExpression	* dptr		445679	0					
ANR	445881	UnaryOperator	*		445679	0					
ANR	445882	Identifier	dptr		445679	1					
ANR	445883	IncDec	++		445679	1					
ANR	445884	CastExpression	( byte ) ( value >> 8 )		445679	1					
ANR	445885	CastTarget	byte		445679	0					
ANR	445886	ShiftExpression	value >> 8		445679	1		>>			
ANR	445887	Identifier	value		445679	0					
ANR	445888	PrimaryExpression	8		445679	1					
ANR	445889	Label	case 2 :	367:8:11844:11850	445679	15	True				
ANR	445890	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value )	367:16:11852:11878	445679	16	True				
ANR	445891	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value )		445679	0		=			
ANR	445892	UnaryOperationExpression	* ( * dptr ) ++		445679	0					
ANR	445893	UnaryOperator	*		445679	0					
ANR	445894	PostIncDecOperationExpression	( * dptr ) ++		445679	1					
ANR	445895	UnaryOperationExpression	* dptr		445679	0					
ANR	445896	UnaryOperator	*		445679	0					
ANR	445897	Identifier	dptr		445679	1					
ANR	445898	IncDec	++		445679	1					
ANR	445899	CastExpression	( byte ) ( value )		445679	1					
ANR	445900	CastTarget	byte		445679	0					
ANR	445901	Identifier	value		445679	1					
ANR	445902	BreakStatement	break ;	368:12:11892:11897	445679	17	True				
ANR	445903	Label	default :	369:8:11907:11914	445679	18	True				
ANR	445904	Identifier	default		445679	0					
ANR	445905	ReturnStatement	return - 1 ;	370:12:11928:11937	445679	19	True				
ANR	445906	UnaryOperationExpression	- 1		445679	0					
ANR	445907	UnaryOperator	-		445679	0					
ANR	445908	PrimaryExpression	1		445679	1					
ANR	445909	ReturnStatement	return 0 ;	372:4:11949:11957	445679	1	True				
ANR	445910	PrimaryExpression	0		445679	0					
ANR	445911	Identifier	sample_store_next32		445679	1					
ANR	445912	ParameterList	"uint32_t value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte"		445679	2					
ANR	445913	Parameter	uint32_t value	340:38:10840:10853	445679	0	True				
ANR	445914	ParameterType	uint32_t		445679	0					
ANR	445915	Identifier	value		445679	1					
ANR	445916	Parameter	byte * * dptr	340:54:10856:10866	445679	1	True				
ANR	445917	ParameterType	byte * *		445679	0					
ANR	445918	Identifier	dptr		445679	1					
ANR	445919	Parameter	int * dbit	340:67:10869:10877	445679	2	True				
ANR	445920	ParameterType	int *		445679	0					
ANR	445921	Identifier	dbit		445679	1					
ANR	445922	Parameter	int dbpv	340:78:10880:10887	445679	3	True				
ANR	445923	ParameterType	int		445679	0					
ANR	445924	Identifier	dbpv		445679	1					
ANR	445925	Parameter	byte * dbbyte	340:88:10890:10901	445679	4	True				
ANR	445926	ParameterType	byte *		445679	0					
ANR	445927	Identifier	dbbyte		445679	1					
ANR	445928	CFGEntryNode	ENTRY		445679		True				
ANR	445929	CFGExitNode	EXIT		445679		True				
ANR	445930	Symbol	* * dptr		445679						
ANR	445931	Symbol	dbbyte		445679						
ANR	445932	Symbol	* dbit		445679						
ANR	445933	Symbol	* ( * dptr ) ++		445679						
ANR	445934	Symbol	dptr		445679						
ANR	445935	Symbol	* ( * dptr )		445679						
ANR	445936	Symbol	dbit		445679						
ANR	445937	Symbol	dbpv		445679						
ANR	445938	Symbol	* dbbyte		445679						
ANR	445939	Symbol	value		445679						
ANR	445940	Symbol	* dptr		445679						
ANR	445941	Function	sample_store_next64	375:18:11980:13272							
ANR	445942	FunctionDef	"sample_store_next64 (uint64_t value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte)"		445941	0					
ANR	445943	CompoundStatement		376:0:12064:13272	445941	0					
ANR	445944	SwitchStatement	switch ( dbpv >> 2 )		445941	0					
ANR	445945	Condition	dbpv >> 2	377:12:12078:12086	445941	0	True				
ANR	445946	ShiftExpression	dbpv >> 2		445941	0		>>			
ANR	445947	Identifier	dbpv		445941	0					
ANR	445948	PrimaryExpression	2		445941	1					
ANR	445949	CompoundStatement		2:24:25:25	445941	1					
ANR	445950	Label	case 0 :	378:8:12100:12106	445941	0	True				
ANR	445951	IfStatement	if ( ( * dbit += dbpv ) == 8 )		445941	1					
ANR	445952	Condition	( * dbit += dbpv ) == 8	379:17:12125:12144	445941	0	True				
ANR	445953	EqualityExpression	( * dbit += dbpv ) == 8		445941	0		==			
ANR	445954	AssignmentExpression	* dbit += dbpv		445941	0		+=			
ANR	445955	UnaryOperationExpression	* dbit		445941	0					
ANR	445956	UnaryOperator	*		445941	0					
ANR	445957	Identifier	dbit		445941	1					
ANR	445958	Identifier	dbpv		445941	1					
ANR	445959	PrimaryExpression	8		445941	1					
ANR	445960	ExpressionStatement	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"	380:15:12163:12221	445941	1	True				
ANR	445961	Expression	"* ( * dptr ) ++ = * dbbyte | ( byte ) value , * dbbyte = 0 , * dbit = 0"		445941	0					
ANR	445962	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( byte ) value		445941	0		=			
ANR	445963	UnaryOperationExpression	* ( * dptr ) ++		445941	0					
ANR	445964	UnaryOperator	*		445941	0					
ANR	445965	PostIncDecOperationExpression	( * dptr ) ++		445941	1					
ANR	445966	UnaryOperationExpression	* dptr		445941	0					
ANR	445967	UnaryOperator	*		445941	0					
ANR	445968	Identifier	dptr		445941	1					
ANR	445969	IncDec	++		445941	1					
ANR	445970	InclusiveOrExpression	* dbbyte | ( byte ) value		445941	1		|			
ANR	445971	UnaryOperationExpression	* dbbyte		445941	0					
ANR	445972	UnaryOperator	*		445941	0					
ANR	445973	Identifier	dbbyte		445941	1					
ANR	445974	CastExpression	( byte ) value		445941	1					
ANR	445975	CastTarget	byte		445941	0					
ANR	445976	Identifier	value		445941	1					
ANR	445977	Expression	"* dbbyte = 0 , * dbit = 0"		445941	1					
ANR	445978	AssignmentExpression	* dbbyte = 0		445941	0		=			
ANR	445979	UnaryOperationExpression	* dbbyte		445941	0					
ANR	445980	UnaryOperator	*		445941	0					
ANR	445981	Identifier	dbbyte		445941	1					
ANR	445982	PrimaryExpression	0		445941	1					
ANR	445983	AssignmentExpression	* dbit = 0		445941	1		=			
ANR	445984	UnaryOperationExpression	* dbit		445941	0					
ANR	445985	UnaryOperator	*		445941	0					
ANR	445986	Identifier	dbit		445941	1					
ANR	445987	PrimaryExpression	0		445941	1					
ANR	445988	ElseStatement	else		445941	0					
ANR	445989	ExpressionStatement	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )	381:17:12240:12279	445941	0	True				
ANR	445990	AssignmentExpression	* dbbyte |= ( byte ) ( value << ( 8 - * dbit ) )		445941	0		|=			
ANR	445991	UnaryOperationExpression	* dbbyte		445941	0					
ANR	445992	UnaryOperator	*		445941	0					
ANR	445993	Identifier	dbbyte		445941	1					
ANR	445994	CastExpression	( byte ) ( value << ( 8 - * dbit ) )		445941	1					
ANR	445995	CastTarget	byte		445941	0					
ANR	445996	ShiftExpression	value << ( 8 - * dbit )		445941	1		<<			
ANR	445997	Identifier	value		445941	0					
ANR	445998	AdditiveExpression	8 - * dbit		445941	1		-			
ANR	445999	PrimaryExpression	8		445941	0					
ANR	446000	UnaryOperationExpression	* dbit		445941	1					
ANR	446001	UnaryOperator	*		445941	0					
ANR	446002	Identifier	dbit		445941	1					
ANR	446003	BreakStatement	break ;	382:12:12293:12298	445941	2	True				
ANR	446004	Label	case 1 :	383:8:12308:12314	445941	3	True				
ANR	446005	IfStatement	if ( * dbit ^= 4 )		445941	4					
ANR	446006	Condition	* dbit ^= 4	384:17:12333:12342	445941	0	True				
ANR	446007	AssignmentExpression	* dbit ^= 4		445941	0		^=			
ANR	446008	UnaryOperationExpression	* dbit		445941	0					
ANR	446009	UnaryOperator	*		445941	0					
ANR	446010	Identifier	dbit		445941	1					
ANR	446011	PrimaryExpression	4		445941	1					
ANR	446012	ExpressionStatement	* dbbyte = ( byte ) ( value << 4 )	384:30:12346:12374	445941	1	True				
ANR	446013	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		445941	0		=			
ANR	446014	UnaryOperationExpression	* dbbyte		445941	0					
ANR	446015	UnaryOperator	*		445941	0					
ANR	446016	Identifier	dbbyte		445941	1					
ANR	446017	CastExpression	( byte ) ( value << 4 )		445941	1					
ANR	446018	CastTarget	byte		445941	0					
ANR	446019	ShiftExpression	value << 4		445941	1		<<			
ANR	446020	Identifier	value		445941	0					
ANR	446021	PrimaryExpression	4		445941	1					
ANR	446022	ElseStatement	else		445941	0					
ANR	446023	ExpressionStatement	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )	385:17:12393:12429	445941	0	True				
ANR	446024	AssignmentExpression	* ( * dptr ) ++ = * dbbyte | ( ( byte ) value )		445941	0		=			
ANR	446025	UnaryOperationExpression	* ( * dptr ) ++		445941	0					
ANR	446026	UnaryOperator	*		445941	0					
ANR	446027	PostIncDecOperationExpression	( * dptr ) ++		445941	1					
ANR	446028	UnaryOperationExpression	* dptr		445941	0					
ANR	446029	UnaryOperator	*		445941	0					
ANR	446030	Identifier	dptr		445941	1					
ANR	446031	IncDec	++		445941	1					
ANR	446032	InclusiveOrExpression	* dbbyte | ( ( byte ) value )		445941	1		|			
ANR	446033	UnaryOperationExpression	* dbbyte		445941	0					
ANR	446034	UnaryOperator	*		445941	0					
ANR	446035	Identifier	dbbyte		445941	1					
ANR	446036	CastExpression	( byte ) value		445941	1					
ANR	446037	CastTarget	byte		445941	0					
ANR	446038	Identifier	value		445941	1					
ANR	446039	BreakStatement	break ;	386:12:12443:12448	445941	5	True				
ANR	446040	Label	case 3 :	387:8:12458:12464	445941	6	True				
ANR	446041	IfStatement	if ( * dbit ^= 4 )		445941	7					
ANR	446042	Condition	* dbit ^= 4	388:17:12483:12492	445941	0	True				
ANR	446043	AssignmentExpression	* dbit ^= 4		445941	0		^=			
ANR	446044	UnaryOperationExpression	* dbit		445941	0					
ANR	446045	UnaryOperator	*		445941	0					
ANR	446046	Identifier	dbit		445941	1					
ANR	446047	PrimaryExpression	4		445941	1					
ANR	446048	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"	388:30:12496:12557	445941	1	True				
ANR	446049	Expression	"* ( * dptr ) ++ = ( byte ) ( value >> 4 ) , * dbbyte = ( byte ) ( value << 4 )"		445941	0					
ANR	446050	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 4 )		445941	0		=			
ANR	446051	UnaryOperationExpression	* ( * dptr ) ++		445941	0					
ANR	446052	UnaryOperator	*		445941	0					
ANR	446053	PostIncDecOperationExpression	( * dptr ) ++		445941	1					
ANR	446054	UnaryOperationExpression	* dptr		445941	0					
ANR	446055	UnaryOperator	*		445941	0					
ANR	446056	Identifier	dptr		445941	1					
ANR	446057	IncDec	++		445941	1					
ANR	446058	CastExpression	( byte ) ( value >> 4 )		445941	1					
ANR	446059	CastTarget	byte		445941	0					
ANR	446060	ShiftExpression	value >> 4		445941	1		>>			
ANR	446061	Identifier	value		445941	0					
ANR	446062	PrimaryExpression	4		445941	1					
ANR	446063	AssignmentExpression	* dbbyte = ( byte ) ( value << 4 )		445941	1		=			
ANR	446064	UnaryOperationExpression	* dbbyte		445941	0					
ANR	446065	UnaryOperator	*		445941	0					
ANR	446066	Identifier	dbbyte		445941	1					
ANR	446067	CastExpression	( byte ) ( value << 4 )		445941	1					
ANR	446068	CastTarget	byte		445941	0					
ANR	446069	ShiftExpression	value << 4		445941	1		<<			
ANR	446070	Identifier	value		445941	0					
ANR	446071	PrimaryExpression	4		445941	1					
ANR	446072	ElseStatement	else		445941	0					
ANR	446073	ExpressionStatement	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"	390:14:12590:12667	445941	0	True				
ANR	446074	Expression	"* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 ) , ( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		445941	0					
ANR	446075	AssignmentExpression	* ( * dptr ) = * dbbyte | ( byte ) ( value >> 8 )		445941	0		=			
ANR	446076	UnaryOperationExpression	* ( * dptr )		445941	0					
ANR	446077	UnaryOperator	*		445941	0					
ANR	446078	UnaryOperationExpression	* dptr		445941	1					
ANR	446079	UnaryOperator	*		445941	0					
ANR	446080	Identifier	dptr		445941	1					
ANR	446081	InclusiveOrExpression	* dbbyte | ( byte ) ( value >> 8 )		445941	1		|			
ANR	446082	UnaryOperationExpression	* dbbyte		445941	0					
ANR	446083	UnaryOperator	*		445941	0					
ANR	446084	Identifier	dbbyte		445941	1					
ANR	446085	CastExpression	( byte ) ( value >> 8 )		445941	1					
ANR	446086	CastTarget	byte		445941	0					
ANR	446087	ShiftExpression	value >> 8		445941	1		>>			
ANR	446088	Identifier	value		445941	0					
ANR	446089	PrimaryExpression	8		445941	1					
ANR	446090	Expression	"( * dptr ) [ 1 ] = ( byte ) value , * dptr += 2"		445941	1					
ANR	446091	AssignmentExpression	( * dptr ) [ 1 ] = ( byte ) value		445941	0		=			
ANR	446092	ArrayIndexing	( * dptr ) [ 1 ]		445941	0					
ANR	446093	UnaryOperationExpression	* dptr		445941	0					
ANR	446094	UnaryOperator	*		445941	0					
ANR	446095	Identifier	dptr		445941	1					
ANR	446096	PrimaryExpression	1		445941	1					
ANR	446097	CastExpression	( byte ) value		445941	1					
ANR	446098	CastTarget	byte		445941	0					
ANR	446099	Identifier	value		445941	1					
ANR	446100	AssignmentExpression	* dptr += 2		445941	1		+=			
ANR	446101	UnaryOperationExpression	* dptr		445941	0					
ANR	446102	UnaryOperator	*		445941	0					
ANR	446103	Identifier	dptr		445941	1					
ANR	446104	PrimaryExpression	2		445941	1					
ANR	446105	BreakStatement	break ;	391:12:12681:12686	445941	8	True				
ANR	446106	Label	case 16 :	392:8:12696:12703	445941	9	True				
ANR	446107	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 56 ) )"	392:17:12705:12764	445941	10	True				
ANR	446108	AssignmentExpression	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 56 ) )"		445941	0		=			
ANR	446109	UnaryOperationExpression	* ( * dptr ) ++		445941	0					
ANR	446110	UnaryOperator	*		445941	0					
ANR	446111	PostIncDecOperationExpression	( * dptr ) ++		445941	1					
ANR	446112	UnaryOperationExpression	* dptr		445941	0					
ANR	446113	UnaryOperator	*		445941	0					
ANR	446114	Identifier	dptr		445941	1					
ANR	446115	IncDec	++		445941	1					
ANR	446116	CastExpression	"( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 56 ) )"		445941	1					
ANR	446117	CastTarget	byte		445941	0					
ANR	446118	ShiftExpression	"value >> SAMPLE_BOUND_SHIFT ( value , 56 )"		445941	1		>>			
ANR	446119	Identifier	value		445941	0					
ANR	446120	CallExpression	"SAMPLE_BOUND_SHIFT ( value , 56 )"		445941	1					
ANR	446121	Callee	SAMPLE_BOUND_SHIFT		445941	0					
ANR	446122	Identifier	SAMPLE_BOUND_SHIFT		445941	0					
ANR	446123	ArgumentList	value		445941	1					
ANR	446124	Argument	value		445941	0					
ANR	446125	Identifier	value		445941	0					
ANR	446126	Argument	56		445941	1					
ANR	446127	PrimaryExpression	56		445941	0					
ANR	446128	Label	case 14 :	393:8:12774:12781	445941	11	True				
ANR	446129	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 48 ) )"	393:17:12783:12842	445941	12	True				
ANR	446130	AssignmentExpression	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 48 ) )"		445941	0		=			
ANR	446131	UnaryOperationExpression	* ( * dptr ) ++		445941	0					
ANR	446132	UnaryOperator	*		445941	0					
ANR	446133	PostIncDecOperationExpression	( * dptr ) ++		445941	1					
ANR	446134	UnaryOperationExpression	* dptr		445941	0					
ANR	446135	UnaryOperator	*		445941	0					
ANR	446136	Identifier	dptr		445941	1					
ANR	446137	IncDec	++		445941	1					
ANR	446138	CastExpression	"( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 48 ) )"		445941	1					
ANR	446139	CastTarget	byte		445941	0					
ANR	446140	ShiftExpression	"value >> SAMPLE_BOUND_SHIFT ( value , 48 )"		445941	1		>>			
ANR	446141	Identifier	value		445941	0					
ANR	446142	CallExpression	"SAMPLE_BOUND_SHIFT ( value , 48 )"		445941	1					
ANR	446143	Callee	SAMPLE_BOUND_SHIFT		445941	0					
ANR	446144	Identifier	SAMPLE_BOUND_SHIFT		445941	0					
ANR	446145	ArgumentList	value		445941	1					
ANR	446146	Argument	value		445941	0					
ANR	446147	Identifier	value		445941	0					
ANR	446148	Argument	48		445941	1					
ANR	446149	PrimaryExpression	48		445941	0					
ANR	446150	Label	case 12 :	394:8:12852:12859	445941	13	True				
ANR	446151	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 40 ) )"	394:17:12861:12920	445941	14	True				
ANR	446152	AssignmentExpression	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 40 ) )"		445941	0		=			
ANR	446153	UnaryOperationExpression	* ( * dptr ) ++		445941	0					
ANR	446154	UnaryOperator	*		445941	0					
ANR	446155	PostIncDecOperationExpression	( * dptr ) ++		445941	1					
ANR	446156	UnaryOperationExpression	* dptr		445941	0					
ANR	446157	UnaryOperator	*		445941	0					
ANR	446158	Identifier	dptr		445941	1					
ANR	446159	IncDec	++		445941	1					
ANR	446160	CastExpression	"( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 40 ) )"		445941	1					
ANR	446161	CastTarget	byte		445941	0					
ANR	446162	ShiftExpression	"value >> SAMPLE_BOUND_SHIFT ( value , 40 )"		445941	1		>>			
ANR	446163	Identifier	value		445941	0					
ANR	446164	CallExpression	"SAMPLE_BOUND_SHIFT ( value , 40 )"		445941	1					
ANR	446165	Callee	SAMPLE_BOUND_SHIFT		445941	0					
ANR	446166	Identifier	SAMPLE_BOUND_SHIFT		445941	0					
ANR	446167	ArgumentList	value		445941	1					
ANR	446168	Argument	value		445941	0					
ANR	446169	Identifier	value		445941	0					
ANR	446170	Argument	40		445941	1					
ANR	446171	PrimaryExpression	40		445941	0					
ANR	446172	Label	case 10 :	395:8:12930:12937	445941	15	True				
ANR	446173	ExpressionStatement	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 32 ) )"	395:17:12939:12998	445941	16	True				
ANR	446174	AssignmentExpression	"* ( * dptr ) ++ = ( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 32 ) )"		445941	0		=			
ANR	446175	UnaryOperationExpression	* ( * dptr ) ++		445941	0					
ANR	446176	UnaryOperator	*		445941	0					
ANR	446177	PostIncDecOperationExpression	( * dptr ) ++		445941	1					
ANR	446178	UnaryOperationExpression	* dptr		445941	0					
ANR	446179	UnaryOperator	*		445941	0					
ANR	446180	Identifier	dptr		445941	1					
ANR	446181	IncDec	++		445941	1					
ANR	446182	CastExpression	"( byte ) ( value >> SAMPLE_BOUND_SHIFT ( value , 32 ) )"		445941	1					
ANR	446183	CastTarget	byte		445941	0					
ANR	446184	ShiftExpression	"value >> SAMPLE_BOUND_SHIFT ( value , 32 )"		445941	1		>>			
ANR	446185	Identifier	value		445941	0					
ANR	446186	CallExpression	"SAMPLE_BOUND_SHIFT ( value , 32 )"		445941	1					
ANR	446187	Callee	SAMPLE_BOUND_SHIFT		445941	0					
ANR	446188	Identifier	SAMPLE_BOUND_SHIFT		445941	0					
ANR	446189	ArgumentList	value		445941	1					
ANR	446190	Argument	value		445941	0					
ANR	446191	Identifier	value		445941	0					
ANR	446192	Argument	32		445941	1					
ANR	446193	PrimaryExpression	32		445941	0					
ANR	446194	Label	case 8 :	396:8:13008:13014	445941	17	True				
ANR	446195	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 24 )	396:16:13016:13048	445941	18	True				
ANR	446196	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 24 )		445941	0		=			
ANR	446197	UnaryOperationExpression	* ( * dptr ) ++		445941	0					
ANR	446198	UnaryOperator	*		445941	0					
ANR	446199	PostIncDecOperationExpression	( * dptr ) ++		445941	1					
ANR	446200	UnaryOperationExpression	* dptr		445941	0					
ANR	446201	UnaryOperator	*		445941	0					
ANR	446202	Identifier	dptr		445941	1					
ANR	446203	IncDec	++		445941	1					
ANR	446204	CastExpression	( byte ) ( value >> 24 )		445941	1					
ANR	446205	CastTarget	byte		445941	0					
ANR	446206	ShiftExpression	value >> 24		445941	1		>>			
ANR	446207	Identifier	value		445941	0					
ANR	446208	PrimaryExpression	24		445941	1					
ANR	446209	Label	case 6 :	397:8:13058:13064	445941	19	True				
ANR	446210	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 16 )	397:16:13066:13098	445941	20	True				
ANR	446211	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 16 )		445941	0		=			
ANR	446212	UnaryOperationExpression	* ( * dptr ) ++		445941	0					
ANR	446213	UnaryOperator	*		445941	0					
ANR	446214	PostIncDecOperationExpression	( * dptr ) ++		445941	1					
ANR	446215	UnaryOperationExpression	* dptr		445941	0					
ANR	446216	UnaryOperator	*		445941	0					
ANR	446217	Identifier	dptr		445941	1					
ANR	446218	IncDec	++		445941	1					
ANR	446219	CastExpression	( byte ) ( value >> 16 )		445941	1					
ANR	446220	CastTarget	byte		445941	0					
ANR	446221	ShiftExpression	value >> 16		445941	1		>>			
ANR	446222	Identifier	value		445941	0					
ANR	446223	PrimaryExpression	16		445941	1					
ANR	446224	Label	case 4 :	398:8:13108:13114	445941	21	True				
ANR	446225	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value >> 8 )	398:16:13116:13147	445941	22	True				
ANR	446226	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value >> 8 )		445941	0		=			
ANR	446227	UnaryOperationExpression	* ( * dptr ) ++		445941	0					
ANR	446228	UnaryOperator	*		445941	0					
ANR	446229	PostIncDecOperationExpression	( * dptr ) ++		445941	1					
ANR	446230	UnaryOperationExpression	* dptr		445941	0					
ANR	446231	UnaryOperator	*		445941	0					
ANR	446232	Identifier	dptr		445941	1					
ANR	446233	IncDec	++		445941	1					
ANR	446234	CastExpression	( byte ) ( value >> 8 )		445941	1					
ANR	446235	CastTarget	byte		445941	0					
ANR	446236	ShiftExpression	value >> 8		445941	1		>>			
ANR	446237	Identifier	value		445941	0					
ANR	446238	PrimaryExpression	8		445941	1					
ANR	446239	Label	case 2 :	399:8:13157:13163	445941	23	True				
ANR	446240	ExpressionStatement	* ( * dptr ) ++ = ( byte ) ( value )	399:16:13165:13191	445941	24	True				
ANR	446241	AssignmentExpression	* ( * dptr ) ++ = ( byte ) ( value )		445941	0		=			
ANR	446242	UnaryOperationExpression	* ( * dptr ) ++		445941	0					
ANR	446243	UnaryOperator	*		445941	0					
ANR	446244	PostIncDecOperationExpression	( * dptr ) ++		445941	1					
ANR	446245	UnaryOperationExpression	* dptr		445941	0					
ANR	446246	UnaryOperator	*		445941	0					
ANR	446247	Identifier	dptr		445941	1					
ANR	446248	IncDec	++		445941	1					
ANR	446249	CastExpression	( byte ) ( value )		445941	1					
ANR	446250	CastTarget	byte		445941	0					
ANR	446251	Identifier	value		445941	1					
ANR	446252	BreakStatement	break ;	400:12:13205:13210	445941	25	True				
ANR	446253	Label	default :	401:8:13220:13227	445941	26	True				
ANR	446254	Identifier	default		445941	0					
ANR	446255	ReturnStatement	return - 1 ;	402:12:13241:13250	445941	27	True				
ANR	446256	UnaryOperationExpression	- 1		445941	0					
ANR	446257	UnaryOperator	-		445941	0					
ANR	446258	PrimaryExpression	1		445941	1					
ANR	446259	ReturnStatement	return 0 ;	404:4:13262:13270	445941	1	True				
ANR	446260	PrimaryExpression	0		445941	0					
ANR	446261	Identifier	sample_store_next64		445941	1					
ANR	446262	ParameterList	"uint64_t value , byte * * dptr , int * dbit , int dbpv , byte * dbbyte"		445941	2					
ANR	446263	Parameter	uint64_t value	375:38:12000:12013	445941	0	True				
ANR	446264	ParameterType	uint64_t		445941	0					
ANR	446265	Identifier	value		445941	1					
ANR	446266	Parameter	byte * * dptr	375:54:12016:12026	445941	1	True				
ANR	446267	ParameterType	byte * *		445941	0					
ANR	446268	Identifier	dptr		445941	1					
ANR	446269	Parameter	int * dbit	375:67:12029:12037	445941	2	True				
ANR	446270	ParameterType	int *		445941	0					
ANR	446271	Identifier	dbit		445941	1					
ANR	446272	Parameter	int dbpv	375:78:12040:12047	445941	3	True				
ANR	446273	ParameterType	int		445941	0					
ANR	446274	Identifier	dbpv		445941	1					
ANR	446275	Parameter	byte * dbbyte	375:88:12050:12061	445941	4	True				
ANR	446276	ParameterType	byte *		445941	0					
ANR	446277	Identifier	dbbyte		445941	1					
ANR	446278	CFGEntryNode	ENTRY		445941		True				
ANR	446279	CFGExitNode	EXIT		445941		True				
ANR	446280	Symbol	* * dptr		445941						
ANR	446281	Symbol	dbbyte		445941						
ANR	446282	Symbol	* dbit		445941						
ANR	446283	Symbol	* ( * dptr ) ++		445941						
ANR	446284	Symbol	SAMPLE_BOUND_SHIFT		445941						
ANR	446285	Symbol	dptr		445941						
ANR	446286	Symbol	* ( * dptr )		445941						
ANR	446287	Symbol	dbit		445941						
ANR	446288	Symbol	dbpv		445941						
ANR	446289	Symbol	* dbbyte		445941						
ANR	446290	Symbol	value		445941						
ANR	446291	Symbol	* dptr		445941						
ANR	446292	Function	sample_store_flush	407:19:13294:13416							
ANR	446293	FunctionDef	"sample_store_flush (byte * dptr , int dbit , byte dbbyte)"		446292	0					
ANR	446294	CompoundStatement		408:0:13348:13416	446292	0					
ANR	446295	IfStatement	if ( dbit != 0 )		446292	0					
ANR	446296	Condition	dbit != 0	409:6:13356:13364	446292	0	True				
ANR	446297	EqualityExpression	dbit != 0		446292	0		!=			
ANR	446298	Identifier	dbit		446292	0					
ANR	446299	PrimaryExpression	0		446292	1					
ANR	446300	ExpressionStatement	* dptr = dbbyte | ( * dptr & ( 0xff >> dbit ) )	410:4:13373:13414	446292	1	True				
ANR	446301	AssignmentExpression	* dptr = dbbyte | ( * dptr & ( 0xff >> dbit ) )		446292	0		=			
ANR	446302	UnaryOperationExpression	* dptr		446292	0					
ANR	446303	UnaryOperator	*		446292	0					
ANR	446304	Identifier	dptr		446292	1					
ANR	446305	InclusiveOrExpression	dbbyte | ( * dptr & ( 0xff >> dbit ) )		446292	1		|			
ANR	446306	Identifier	dbbyte		446292	0					
ANR	446307	BitAndExpression	* dptr & ( 0xff >> dbit )		446292	1		&			
ANR	446308	UnaryOperationExpression	* dptr		446292	0					
ANR	446309	UnaryOperator	*		446292	0					
ANR	446310	Identifier	dptr		446292	1					
ANR	446311	ShiftExpression	0xff >> dbit		446292	1		>>			
ANR	446312	PrimaryExpression	0xff		446292	0					
ANR	446313	Identifier	dbit		446292	1					
ANR	446314	Identifier	sample_store_flush		446292	1					
ANR	446315	ParameterList	"byte * dptr , int dbit , byte dbbyte"		446292	2					
ANR	446316	Parameter	byte * dptr	407:38:13313:13322	446292	0	True				
ANR	446317	ParameterType	byte *		446292	0					
ANR	446318	Identifier	dptr		446292	1					
ANR	446319	Parameter	int dbit	407:50:13325:13332	446292	1	True				
ANR	446320	ParameterType	int		446292	0					
ANR	446321	Identifier	dbit		446292	1					
ANR	446322	Parameter	byte dbbyte	407:60:13335:13345	446292	2	True				
ANR	446323	ParameterType	byte		446292	0					
ANR	446324	Identifier	dbbyte		446292	1					
ANR	446325	CFGEntryNode	ENTRY		446292		True				
ANR	446326	CFGExitNode	EXIT		446292		True				
ANR	446327	Symbol	dbbyte		446292						
ANR	446328	Symbol	dptr		446292						
ANR	446329	Symbol	dbit		446292						
ANR	446330	Symbol	* dptr		446292						
ANR	446331	Function	sample_store_skip_next	413:19:13438:13734							
ANR	446332	FunctionDef	"sample_store_skip_next (byte * * dptr , int * dbit , int dbpv , byte * dbbyte)"		446331	0					
ANR	446333	CompoundStatement		414:0:13509:13734	446331	0					
ANR	446334	IfStatement	if ( dbpv < 8 )		446331	0					
ANR	446335	Condition	dbpv < 8	415:9:13520:13527	446331	0	True				
ANR	446336	RelationalExpression	dbpv < 8		446331	0		<			
ANR	446337	Identifier	dbpv		446331	0					
ANR	446338	PrimaryExpression	8		446331	1					
ANR	446339	CompoundStatement		2:20:21:21	446331	1					
ANR	446340	ExpressionStatement	"sample_store_flush ( * dptr , * dbit , * dbbyte )"	416:8:13541:13582	446331	0	True				
ANR	446341	CallExpression	"sample_store_flush ( * dptr , * dbit , * dbbyte )"		446331	0					
ANR	446342	Callee	sample_store_flush		446331	0					
ANR	446343	Identifier	sample_store_flush		446331	0					
ANR	446344	ArgumentList	* dptr		446331	1					
ANR	446345	Argument	* dptr		446331	0					
ANR	446346	UnaryOperationExpression	* dptr		446331	0					
ANR	446347	UnaryOperator	*		446331	0					
ANR	446348	Identifier	dptr		446331	1					
ANR	446349	Argument	* dbit		446331	1					
ANR	446350	UnaryOperationExpression	* dbit		446331	0					
ANR	446351	UnaryOperator	*		446331	0					
ANR	446352	Identifier	dbit		446331	1					
ANR	446353	Argument	* dbbyte		446331	2					
ANR	446354	UnaryOperationExpression	* dbbyte		446331	0					
ANR	446355	UnaryOperator	*		446331	0					
ANR	446356	Identifier	dbbyte		446331	1					
ANR	446357	ExpressionStatement	* dbit += dbpv	417:8:13592:13605	446331	1	True				
ANR	446358	AssignmentExpression	* dbit += dbpv		446331	0		+=			
ANR	446359	UnaryOperationExpression	* dbit		446331	0					
ANR	446360	UnaryOperator	*		446331	0					
ANR	446361	Identifier	dbit		446331	1					
ANR	446362	Identifier	dbpv		446331	1					
ANR	446363	ExpressionStatement	* dptr += ( * dbit ) >> 3	418:8:13615:13636	446331	2	True				
ANR	446364	AssignmentExpression	* dptr += ( * dbit ) >> 3		446331	0		+=			
ANR	446365	UnaryOperationExpression	* dptr		446331	0					
ANR	446366	UnaryOperator	*		446331	0					
ANR	446367	Identifier	dptr		446331	1					
ANR	446368	ShiftExpression	( * dbit ) >> 3		446331	1		>>			
ANR	446369	UnaryOperationExpression	* dbit		446331	0					
ANR	446370	UnaryOperator	*		446331	0					
ANR	446371	Identifier	dbit		446331	1					
ANR	446372	PrimaryExpression	3		446331	1					
ANR	446373	ExpressionStatement	* dbit &= 7	419:8:13646:13656	446331	3	True				
ANR	446374	AssignmentExpression	* dbit &= 7		446331	0		&=			
ANR	446375	UnaryOperationExpression	* dbit		446331	0					
ANR	446376	UnaryOperator	*		446331	0					
ANR	446377	Identifier	dbit		446331	1					
ANR	446378	PrimaryExpression	7		446331	1					
ANR	446379	ExpressionStatement	* dbbyte &= ~ ( 0xff << ( * dbit ) )	420:8:13666:13695	446331	4	True				
ANR	446380	AssignmentExpression	* dbbyte &= ~ ( 0xff << ( * dbit ) )		446331	0		&=			
ANR	446381	UnaryOperationExpression	* dbbyte		446331	0					
ANR	446382	UnaryOperator	*		446331	0					
ANR	446383	Identifier	dbbyte		446331	1					
ANR	446384	UnaryOperationExpression	~ ( 0xff << ( * dbit ) )		446331	1					
ANR	446385	UnaryOperator	~		446331	0					
ANR	446386	ShiftExpression	0xff << ( * dbit )		446331	1		<<			
ANR	446387	PrimaryExpression	0xff		446331	0					
ANR	446388	UnaryOperationExpression	* dbit		446331	1					
ANR	446389	UnaryOperator	*		446331	0					
ANR	446390	Identifier	dbit		446331	1					
ANR	446391	ElseStatement	else		446331	0					
ANR	446392	ExpressionStatement	* dptr += ( dbpv >> 3 )	422:6:13712:13732	446331	0	True				
ANR	446393	AssignmentExpression	* dptr += ( dbpv >> 3 )		446331	0		+=			
ANR	446394	UnaryOperationExpression	* dptr		446331	0					
ANR	446395	UnaryOperator	*		446331	0					
ANR	446396	Identifier	dptr		446331	1					
ANR	446397	ShiftExpression	dbpv >> 3		446331	1		>>			
ANR	446398	Identifier	dbpv		446331	0					
ANR	446399	PrimaryExpression	3		446331	1					
ANR	446400	Identifier	sample_store_skip_next		446331	1					
ANR	446401	ParameterList	"byte * * dptr , int * dbit , int dbpv , byte * dbbyte"		446331	2					
ANR	446402	Parameter	byte * * dptr	413:42:13461:13471	446331	0	True				
ANR	446403	ParameterType	byte * *		446331	0					
ANR	446404	Identifier	dptr		446331	1					
ANR	446405	Parameter	int * dbit	413:55:13474:13482	446331	1	True				
ANR	446406	ParameterType	int *		446331	0					
ANR	446407	Identifier	dbit		446331	1					
ANR	446408	Parameter	int dbpv	413:66:13485:13492	446331	2	True				
ANR	446409	ParameterType	int		446331	0					
ANR	446410	Identifier	dbpv		446331	1					
ANR	446411	Parameter	byte * dbbyte	413:76:13495:13506	446331	3	True				
ANR	446412	ParameterType	byte *		446331	0					
ANR	446413	Identifier	dbbyte		446331	1					
ANR	446414	CFGEntryNode	ENTRY		446331		True				
ANR	446415	CFGExitNode	EXIT		446331		True				
ANR	446416	Symbol	dbbyte		446331						
ANR	446417	Symbol	* dbit		446331						
ANR	446418	Symbol	dptr		446331						
ANR	446419	Symbol	dbit		446331						
ANR	446420	Symbol	dbpv		446331						
ANR	446421	Symbol	* dbbyte		446331						
ANR	446422	Symbol	* dptr		446331						
ANR	446423	DeclStmt									
ANR	446424	Decl							void	"void ( byte * dest , int dest_bit , uint raster , mono_fill_chunk pattern , int width_bits , int height )"	bits_fill_rectangle
ANR	446425	DeclStmt									
ANR	446426	Decl							void	"void ( byte * dest , int dest_bit , uint raster , mono_fill_chunk pattern , mono_fill_chunk src_mask , int width_bits , int height )"	bits_fill_rectangle_masked
ANR	446427	DeclStmt									
ANR	446428	Decl							void	"void ( byte * data , uint width , uint height , uint raster , uint replicated_width , uint replicated_raster )"	bits_replicate_horizontally
ANR	446429	DeclStmt									
ANR	446430	Decl							void	"void ( byte * data , uint height , uint raster , uint replicated_height )"	bits_replicate_vertically
ANR	446431	DeclStmt									
ANR	446432	Decl							void	"void ( const byte * data , uint height , uint raster , gs_int_rect * pbox )"	bits_bounding_box
ANR	446433	DeclStmt									
ANR	446434	Decl							void	"void ( const byte * src , int srcx , uint width , uint height , uint sraster , byte * dest , uint draster , const gs_log2_scale_point * plog2_scale , int log2_out_bits )"	bits_compress_scaled
ANR	446435	ClassDef	bits_plane_s	471:8:15707:15940							
ANR	446436	ClassDef	bpd_	472:4:15733:15844							
ANR	446437	DeclStmt									
ANR	446438	Decl							byte	byte *	write
ANR	446439	DeclStmt									
ANR	446440	Decl							const byte	const byte *	read
ANR	446441	DeclStmt									
ANR	446442	Decl							bpd_	bpd_	data
ANR	446443	DeclStmt									
ANR	446444	Decl							int	int	raster
ANR	446445	DeclStmt									
ANR	446446	Decl							int	int	depth
ANR	446447	DeclStmt									
ANR	446448	Decl							int	int	x
ANR	446449	DeclStmt									
ANR	446450	Decl							bits_plane_s	bits_plane_s	bits_plane_t
ANR	446451	DeclStmt									
ANR	446452	Decl							int	"int ( const bits_plane_t * dest , const bits_plane_t * source , int shift , int width , int height )"	bits_extract_plane
ANR	446453	DeclStmt									
ANR	446454	Decl							int	"int ( const bits_plane_t * dest , const bits_plane_t * source , int shift , int width , int height )"	bits_expand_plane
ANR	446455	DeclStmt									
ANR	446456	Decl							void	"void ( byte * dest , uint raster , byte value , int width_bytes , int height )"	bytes_fill_rectangle
ANR	446457	DeclStmt									
ANR	446458	Decl							void	"void ( byte * dest , uint dest_raster , const byte * src , uint src_raster , int width_bytes , int height )"	bytes_copy_rectangle
ANR	446459	DeclStmt									
ANR	446460	Decl							int	"int ( const byte * src , uint src_raster , int width_bytes , int height )"	bytes_rectangle_is_const
ANR	446461	DeclStmt									
ANR	446462	Decl							void	"void ( byte * dest , uint dest_raster , const byte * src , uint src_raster , int width_bytes , int height )"	bytes_copy_rectangle_zero_padding
