command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5197492	File	data/converged/CVE-2018-16863_ghostpdl/gsiodev.c								
ANR	5197493	DeclStmt									
ANR	5197494	Decl							const gx_io_device	const gx_io_device	gs_iodev_os
ANR	5197495	Function	gs_iodev_init	61:0:1997:3798							
ANR	5197496	FunctionDef	gs_iodev_init (gs_memory_t * mem)		5197495	0					
ANR	5197497	CompoundStatement		63:0:2034:3798	5197495	0					
ANR	5197498	Statement	gx_io_device	64:4:2088:2099	5197495	0	True				
ANR	5197499	Statement	*	64:17:2101:2101	5197495	1	True				
ANR	5197500	Statement	*	64:18:2102:2102	5197495	2	True				
ANR	5197501	Statement	table	64:19:2103:2107	5197495	3	True				
ANR	5197502	Statement	=	64:25:2109:2109	5197495	4	True				
ANR	5197503	Statement	gs_alloc_struct_array_immovable	65:8:2119:2149	5197495	5	True				
ANR	5197504	Statement	(	65:39:2150:2150	5197495	6	True				
ANR	5197505	Statement	mem	65:40:2151:2153	5197495	7	True				
ANR	5197506	Statement	","	65:43:2154:2154	5197495	8	True				
ANR	5197507	Statement	gx_io_device_table_count	65:45:2156:2179	5197495	9	True				
ANR	5197508	Statement	+	65:70:2181:2181	5197495	10	True				
ANR	5197509	Statement	NUM_RUNTIME_IODEVS	65:72:2183:2200	5197495	11	True				
ANR	5197510	Statement	","	65:90:2201:2201	5197495	12	True				
ANR	5197511	Statement	gx_io_device	66:30:2233:2244	5197495	13	True				
ANR	5197512	Statement	*	66:43:2246:2246	5197495	14	True				
ANR	5197513	Statement	","	66:44:2247:2247	5197495	15	True				
ANR	5197514	Statement	&	66:46:2249:2249	5197495	16	True				
ANR	5197515	Statement	st_io_device_ptr_element	66:47:2250:2273	5197495	17	True				
ANR	5197516	Statement	","	66:71:2274:2274	5197495	18	True				
ANR	5197517	Statement	"""gs_iodev_init(table)"""	67:30:2306:2327	5197495	19	True				
ANR	5197518	Statement	)	67:52:2328:2328	5197495	20	True				
ANR	5197519	ExpressionStatement		67:53:2329:2329	5197495	21	True				
ANR	5197520	IdentifierDeclStatement	gs_lib_ctx_t * libctx = gs_lib_ctx_get_interp_instance ( mem ) ;	68:4:2335:2393	5197495	22	True				
ANR	5197521	IdentifierDecl	* libctx = gs_lib_ctx_get_interp_instance ( mem )		5197495	0					
ANR	5197522	IdentifierDeclType	gs_lib_ctx_t *		5197495	0					
ANR	5197523	Identifier	libctx		5197495	1					
ANR	5197524	AssignmentExpression	* libctx = gs_lib_ctx_get_interp_instance ( mem )		5197495	2		=			
ANR	5197525	Identifier	libctx		5197495	0					
ANR	5197526	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		5197495	1					
ANR	5197527	Callee	gs_lib_ctx_get_interp_instance		5197495	0					
ANR	5197528	Identifier	gs_lib_ctx_get_interp_instance		5197495	0					
ANR	5197529	ArgumentList	mem		5197495	1					
ANR	5197530	Argument	mem		5197495	0					
ANR	5197531	Identifier	mem		5197495	0					
ANR	5197532	IdentifierDeclStatement	"int i , j ;"	69:4:2399:2407	5197495	23	True				
ANR	5197533	IdentifierDecl	i		5197495	0					
ANR	5197534	IdentifierDeclType	int		5197495	0					
ANR	5197535	Identifier	i		5197495	1					
ANR	5197536	IdentifierDecl	j		5197495	1					
ANR	5197537	IdentifierDeclType	int		5197495	0					
ANR	5197538	Identifier	j		5197495	1					
ANR	5197539	IdentifierDeclStatement	int code = 0 ;	70:4:2413:2425	5197495	24	True				
ANR	5197540	IdentifierDecl	code = 0		5197495	0					
ANR	5197541	IdentifierDeclType	int		5197495	0					
ANR	5197542	Identifier	code		5197495	1					
ANR	5197543	AssignmentExpression	code = 0		5197495	2		=			
ANR	5197544	Identifier	code		5197495	0					
ANR	5197545	PrimaryExpression	0		5197495	1					
ANR	5197546	IfStatement	if ( ( table == NULL ) || ( libctx == NULL ) )		5197495	25					
ANR	5197547	Condition	( table == NULL ) || ( libctx == NULL )	72:8:2436:2470	5197495	0	True				
ANR	5197548	OrExpression	( table == NULL ) || ( libctx == NULL )		5197495	0		||			
ANR	5197549	EqualityExpression	table == NULL		5197495	0		==			
ANR	5197550	Identifier	table		5197495	0					
ANR	5197551	Identifier	NULL		5197495	1					
ANR	5197552	EqualityExpression	libctx == NULL		5197495	1		==			
ANR	5197553	Identifier	libctx		5197495	0					
ANR	5197554	Identifier	NULL		5197495	1					
ANR	5197555	ExpressionStatement	return_error ( gs_error_VMerror )	73:8:2481:2511	5197495	1	True				
ANR	5197556	CallExpression	return_error ( gs_error_VMerror )		5197495	0					
ANR	5197557	Callee	return_error		5197495	0					
ANR	5197558	Identifier	return_error		5197495	0					
ANR	5197559	ArgumentList	gs_error_VMerror		5197495	1					
ANR	5197560	Argument	gs_error_VMerror		5197495	0					
ANR	5197561	Identifier	gs_error_VMerror		5197495	0					
ANR	5197562	ExpressionStatement	libctx -> io_device_table_size = gx_io_device_table_count + NUM_RUNTIME_IODEVS	75:4:2518:2594	5197495	26	True				
ANR	5197563	AssignmentExpression	libctx -> io_device_table_size = gx_io_device_table_count + NUM_RUNTIME_IODEVS		5197495	0		=			
ANR	5197564	PtrMemberAccess	libctx -> io_device_table_size		5197495	0					
ANR	5197565	Identifier	libctx		5197495	0					
ANR	5197566	Identifier	io_device_table_size		5197495	1					
ANR	5197567	AdditiveExpression	gx_io_device_table_count + NUM_RUNTIME_IODEVS		5197495	1		+			
ANR	5197568	Identifier	gx_io_device_table_count		5197495	0					
ANR	5197569	Identifier	NUM_RUNTIME_IODEVS		5197495	1					
ANR	5197570	ExpressionStatement	libctx -> io_device_table_count = 0	76:4:2600:2633	5197495	27	True				
ANR	5197571	AssignmentExpression	libctx -> io_device_table_count = 0		5197495	0		=			
ANR	5197572	PtrMemberAccess	libctx -> io_device_table_count		5197495	0					
ANR	5197573	Identifier	libctx		5197495	0					
ANR	5197574	Identifier	io_device_table_count		5197495	1					
ANR	5197575	PrimaryExpression	0		5197495	1					
ANR	5197576	ExpressionStatement	libctx -> io_device_table = table	77:4:2639:2670	5197495	28	True				
ANR	5197577	AssignmentExpression	libctx -> io_device_table = table		5197495	0		=			
ANR	5197578	PtrMemberAccess	libctx -> io_device_table		5197495	0					
ANR	5197579	Identifier	libctx		5197495	0					
ANR	5197580	Identifier	io_device_table		5197495	1					
ANR	5197581	Identifier	table		5197495	1					
ANR	5197582	ForStatement	for ( i = 0 ; i < gx_io_device_table_count ; ++ i )		5197495	29					
ANR	5197583	ForInit	i = 0 ;	79:9:2682:2687	5197495	0	True				
ANR	5197584	AssignmentExpression	i = 0		5197495	0		=			
ANR	5197585	Identifier	i		5197495	0					
ANR	5197586	PrimaryExpression	0		5197495	1					
ANR	5197587	Condition	i < gx_io_device_table_count	79:16:2689:2716	5197495	1	True				
ANR	5197588	RelationalExpression	i < gx_io_device_table_count		5197495	0		<			
ANR	5197589	Identifier	i		5197495	0					
ANR	5197590	Identifier	gx_io_device_table_count		5197495	1					
ANR	5197591	UnaryExpression	++ i	79:46:2719:2721	5197495	2	True				
ANR	5197592	IncDec	++		5197495	0					
ANR	5197593	Identifier	i		5197495	1					
ANR	5197594	CompoundStatement		18:8:699:844	5197495	3					
ANR	5197595	IdentifierDeclStatement	"gx_io_device * iodev = gs_alloc_struct_immovable ( mem , gx_io_device , & st_io_device , ""gs_iodev_init(iodev)"" ) ;"	80:8:2734:2879	5197495	0	True				
ANR	5197596	IdentifierDecl	"* iodev = gs_alloc_struct_immovable ( mem , gx_io_device , & st_io_device , ""gs_iodev_init(iodev)"" )"		5197495	0					
ANR	5197597	IdentifierDeclType	gx_io_device *		5197495	0					
ANR	5197598	Identifier	iodev		5197495	1					
ANR	5197599	AssignmentExpression	"* iodev = gs_alloc_struct_immovable ( mem , gx_io_device , & st_io_device , ""gs_iodev_init(iodev)"" )"		5197495	2		=			
ANR	5197600	Identifier	iodev		5197495	0					
ANR	5197601	CallExpression	"gs_alloc_struct_immovable ( mem , gx_io_device , & st_io_device , ""gs_iodev_init(iodev)"" )"		5197495	1					
ANR	5197602	Callee	gs_alloc_struct_immovable		5197495	0					
ANR	5197603	Identifier	gs_alloc_struct_immovable		5197495	0					
ANR	5197604	ArgumentList	mem		5197495	1					
ANR	5197605	Argument	mem		5197495	0					
ANR	5197606	Identifier	mem		5197495	0					
ANR	5197607	Argument	gx_io_device		5197495	1					
ANR	5197608	Identifier	gx_io_device		5197495	0					
ANR	5197609	Argument	& st_io_device		5197495	2					
ANR	5197610	UnaryOperationExpression	& st_io_device		5197495	0					
ANR	5197611	UnaryOperator	&		5197495	0					
ANR	5197612	Identifier	st_io_device		5197495	1					
ANR	5197613	Argument	"""gs_iodev_init(iodev)"""		5197495	3					
ANR	5197614	PrimaryExpression	"""gs_iodev_init(iodev)"""		5197495	0					
ANR	5197615	IfStatement	if ( iodev == 0 )		5197495	1					
ANR	5197616	Condition	iodev == 0	84:12:2894:2903	5197495	0	True				
ANR	5197617	EqualityExpression	iodev == 0		5197495	0		==			
ANR	5197618	Identifier	iodev		5197495	0					
ANR	5197619	PrimaryExpression	0		5197495	1					
ANR	5197620	GotoStatement	goto fail ;	85:12:2918:2927	5197495	1	True				
ANR	5197621	Identifier	fail		5197495	0					
ANR	5197622	ExpressionStatement	table [ i ] = iodev	86:8:2937:2953	5197495	2	True				
ANR	5197623	AssignmentExpression	table [ i ] = iodev		5197495	0		=			
ANR	5197624	ArrayIndexing	table [ i ]		5197495	0					
ANR	5197625	Identifier	table		5197495	0					
ANR	5197626	Identifier	i		5197495	1					
ANR	5197627	Identifier	iodev		5197495	1					
ANR	5197628	ExpressionStatement	"memcpy ( table [ i ] , gx_io_device_table [ i ] , sizeof ( gx_io_device ) )"	87:8:2963:3024	5197495	3	True				
ANR	5197629	CallExpression	"memcpy ( table [ i ] , gx_io_device_table [ i ] , sizeof ( gx_io_device ) )"		5197495	0					
ANR	5197630	Callee	memcpy		5197495	0					
ANR	5197631	Identifier	memcpy		5197495	0					
ANR	5197632	ArgumentList	table [ i ]		5197495	1					
ANR	5197633	Argument	table [ i ]		5197495	0					
ANR	5197634	ArrayIndexing	table [ i ]		5197495	0					
ANR	5197635	Identifier	table		5197495	0					
ANR	5197636	Identifier	i		5197495	1					
ANR	5197637	Argument	gx_io_device_table [ i ]		5197495	1					
ANR	5197638	ArrayIndexing	gx_io_device_table [ i ]		5197495	0					
ANR	5197639	Identifier	gx_io_device_table		5197495	0					
ANR	5197640	Identifier	i		5197495	1					
ANR	5197641	Argument	sizeof ( gx_io_device )		5197495	2					
ANR	5197642	SizeofExpression	sizeof ( gx_io_device )		5197495	0					
ANR	5197643	Sizeof	sizeof		5197495	0					
ANR	5197644	SizeofOperand	gx_io_device		5197495	1					
ANR	5197645	ExpressionStatement	libctx -> io_device_table_count ++	88:8:3034:3065	5197495	4	True				
ANR	5197646	PostIncDecOperationExpression	libctx -> io_device_table_count ++		5197495	0					
ANR	5197647	PtrMemberAccess	libctx -> io_device_table_count		5197495	0					
ANR	5197648	Identifier	libctx		5197495	0					
ANR	5197649	Identifier	io_device_table_count		5197495	1					
ANR	5197650	IncDec	++		5197495	1					
ANR	5197651	ForStatement	for ( ; i < gx_io_device_table_count + NUM_RUNTIME_IODEVS ; i ++ )		5197495	30					
ANR	5197652	Condition	i < gx_io_device_table_count + NUM_RUNTIME_IODEVS	90:10:3083:3131	5197495	0	True				
ANR	5197653	RelationalExpression	i < gx_io_device_table_count + NUM_RUNTIME_IODEVS		5197495	0		<			
ANR	5197654	Identifier	i		5197495	0					
ANR	5197655	AdditiveExpression	gx_io_device_table_count + NUM_RUNTIME_IODEVS		5197495	1		+			
ANR	5197656	Identifier	gx_io_device_table_count		5197495	0					
ANR	5197657	Identifier	NUM_RUNTIME_IODEVS		5197495	1					
ANR	5197658	PostIncDecOperationExpression	i ++	90:61:3134:3136	5197495	1	True				
ANR	5197659	Identifier	i		5197495	0					
ANR	5197660	IncDec	++		5197495	1					
ANR	5197661	CompoundStatement		28:66:1104:1104	5197495	2					
ANR	5197662	ExpressionStatement	table [ i ] = NULL	91:8:3149:3164	5197495	0	True				
ANR	5197663	AssignmentExpression	table [ i ] = NULL		5197495	0		=			
ANR	5197664	ArrayIndexing	table [ i ]		5197495	0					
ANR	5197665	Identifier	table		5197495	0					
ANR	5197666	Identifier	i		5197495	1					
ANR	5197667	Identifier	NULL		5197495	1					
ANR	5197668	ExpressionStatement	"code = gs_register_struct_root ( mem , mem -> gs_lib_ctx -> io_device_table_root , ( void * * ) & libctx -> io_device_table , ""io_device_table"" )"	94:4:3177:3375	5197495	31	True				
ANR	5197669	AssignmentExpression	"code = gs_register_struct_root ( mem , mem -> gs_lib_ctx -> io_device_table_root , ( void * * ) & libctx -> io_device_table , ""io_device_table"" )"		5197495	0		=			
ANR	5197670	Identifier	code		5197495	0					
ANR	5197671	CallExpression	"gs_register_struct_root ( mem , mem -> gs_lib_ctx -> io_device_table_root , ( void * * ) & libctx -> io_device_table , ""io_device_table"" )"		5197495	1					
ANR	5197672	Callee	gs_register_struct_root		5197495	0					
ANR	5197673	Identifier	gs_register_struct_root		5197495	0					
ANR	5197674	ArgumentList	mem		5197495	1					
ANR	5197675	Argument	mem		5197495	0					
ANR	5197676	Identifier	mem		5197495	0					
ANR	5197677	Argument	mem -> gs_lib_ctx -> io_device_table_root		5197495	1					
ANR	5197678	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_root		5197495	0					
ANR	5197679	PtrMemberAccess	mem -> gs_lib_ctx		5197495	0					
ANR	5197680	Identifier	mem		5197495	0					
ANR	5197681	Identifier	gs_lib_ctx		5197495	1					
ANR	5197682	Identifier	io_device_table_root		5197495	1					
ANR	5197683	Argument	( void * * ) & libctx -> io_device_table		5197495	2					
ANR	5197684	CastExpression	( void * * ) & libctx -> io_device_table		5197495	0					
ANR	5197685	CastTarget	void * *		5197495	0					
ANR	5197686	UnaryOperationExpression	& libctx -> io_device_table		5197495	1					
ANR	5197687	UnaryOperator	&		5197495	0					
ANR	5197688	PtrMemberAccess	libctx -> io_device_table		5197495	1					
ANR	5197689	Identifier	libctx		5197495	0					
ANR	5197690	Identifier	io_device_table		5197495	1					
ANR	5197691	Argument	"""io_device_table"""		5197495	3					
ANR	5197692	PrimaryExpression	"""io_device_table"""		5197495	0					
ANR	5197693	IfStatement	if ( code < 0 )		5197495	32					
ANR	5197694	Condition	code < 0	97:8:3385:3392	5197495	0	True				
ANR	5197695	RelationalExpression	code < 0		5197495	0		<			
ANR	5197696	Identifier	code		5197495	0					
ANR	5197697	PrimaryExpression	0		5197495	1					
ANR	5197698	GotoStatement	goto fail ;	98:8:3403:3412	5197495	1	True				
ANR	5197699	Identifier	fail		5197495	0					
ANR	5197700	ForStatement	for ( j = 0 ; j < gx_io_device_table_count ; ++ j )		5197495	33					
ANR	5197701	ForInit	j = 0 ;	100:9:3483:3488	5197495	0	True				
ANR	5197702	AssignmentExpression	j = 0		5197495	0		=			
ANR	5197703	Identifier	j		5197495	0					
ANR	5197704	PrimaryExpression	0		5197495	1					
ANR	5197705	Condition	j < gx_io_device_table_count	100:16:3490:3517	5197495	1	True				
ANR	5197706	RelationalExpression	j < gx_io_device_table_count		5197495	0		<			
ANR	5197707	Identifier	j		5197495	0					
ANR	5197708	Identifier	gx_io_device_table_count		5197495	1					
ANR	5197709	UnaryExpression	++ j	100:46:3520:3522	5197495	2	True				
ANR	5197710	IncDec	++		5197495	0					
ANR	5197711	Identifier	j		5197495	1					
ANR	5197712	IfStatement	"if ( ( code = ( table [ j ] -> procs . init ) ( table [ j ] , mem ) ) < 0 )"		5197495	3					
ANR	5197713	Condition	"( code = ( table [ j ] -> procs . init ) ( table [ j ] , mem ) ) < 0"	101:12:3537:3586	5197495	0	True				
ANR	5197714	RelationalExpression	"( code = ( table [ j ] -> procs . init ) ( table [ j ] , mem ) ) < 0"		5197495	0		<			
ANR	5197715	AssignmentExpression	"code = ( table [ j ] -> procs . init ) ( table [ j ] , mem )"		5197495	0		=			
ANR	5197716	Identifier	code		5197495	0					
ANR	5197717	CallExpression	"( table [ j ] -> procs . init ) ( table [ j ] , mem )"		5197495	1					
ANR	5197718	Callee	table [ j ] -> procs . init		5197495	0					
ANR	5197719	MemberAccess	table [ j ] -> procs . init		5197495	0					
ANR	5197720	PtrMemberAccess	table [ j ] -> procs		5197495	0					
ANR	5197721	ArrayIndexing	table [ j ]		5197495	0					
ANR	5197722	Identifier	table		5197495	0					
ANR	5197723	Identifier	j		5197495	1					
ANR	5197724	Identifier	procs		5197495	1					
ANR	5197725	Identifier	init		5197495	1					
ANR	5197726	ArgumentList	table [ j ]		5197495	1					
ANR	5197727	Argument	table [ j ]		5197495	0					
ANR	5197728	ArrayIndexing	table [ j ]		5197495	0					
ANR	5197729	Identifier	table		5197495	0					
ANR	5197730	Identifier	j		5197495	1					
ANR	5197731	Argument	mem		5197495	1					
ANR	5197732	Identifier	mem		5197495	0					
ANR	5197733	PrimaryExpression	0		5197495	1					
ANR	5197734	GotoStatement	goto f2 ;	102:12:3601:3608	5197495	1	True				
ANR	5197735	Identifier	f2		5197495	0					
ANR	5197736	ReturnStatement	return 0 ;	103:4:3614:3622	5197495	34	True				
ANR	5197737	PrimaryExpression	0		5197495	0					
ANR	5197738	Label	f2 :	104:1:3625:3627	5197495	35	True				
ANR	5197739	Identifier	f2		5197495	0					
ANR	5197740	Label	fail :	107:1:3728:3732	5197495	36	True				
ANR	5197741	Identifier	fail		5197495	0					
ANR	5197742	ReturnStatement	return ( code < 0 ? code : gs_note_error ( gs_error_VMerror ) ) ;	108:4:3738:3796	5197495	37	True				
ANR	5197743	ConditionalExpression	code < 0 ? code : gs_note_error ( gs_error_VMerror )		5197495	0					
ANR	5197744	Condition	code < 0		5197495	0					
ANR	5197745	RelationalExpression	code < 0		5197495	0		<			
ANR	5197746	Identifier	code		5197495	0					
ANR	5197747	PrimaryExpression	0		5197495	1					
ANR	5197748	Identifier	code		5197495	1					
ANR	5197749	CallExpression	gs_note_error ( gs_error_VMerror )		5197495	2					
ANR	5197750	Callee	gs_note_error		5197495	0					
ANR	5197751	Identifier	gs_note_error		5197495	0					
ANR	5197752	ArgumentList	gs_error_VMerror		5197495	1					
ANR	5197753	Argument	gs_error_VMerror		5197495	0					
ANR	5197754	Identifier	gs_error_VMerror		5197495	0					
ANR	5197755	ReturnType	int		5197495	1					
ANR	5197756	Identifier	gs_iodev_init		5197495	2					
ANR	5197757	ParameterList	gs_memory_t * mem		5197495	3					
ANR	5197758	Parameter	gs_memory_t * mem	62:14:2015:2031	5197495	0	True				
ANR	5197759	ParameterType	gs_memory_t *		5197495	0					
ANR	5197760	Identifier	mem		5197495	1					
ANR	5197761	CFGEntryNode	ENTRY		5197495		True				
ANR	5197762	CFGExitNode	EXIT		5197495		True				
ANR	5197763	Symbol	* libctx		5197495						
ANR	5197764	Symbol	libctx		5197495						
ANR	5197765	Symbol	code		5197495						
ANR	5197766	Symbol	& libctx -> io_device_table		5197495						
ANR	5197767	Symbol	gs_alloc_struct_immovable		5197495						
ANR	5197768	Symbol	libctx -> io_device_table_count		5197495						
ANR	5197769	Symbol	NUM_RUNTIME_IODEVS		5197495						
ANR	5197770	Symbol	gx_io_device_table		5197495						
ANR	5197771	Symbol	libctx -> io_device_table		5197495						
ANR	5197772	Symbol	mem		5197495						
ANR	5197773	Symbol	iodev		5197495						
ANR	5197774	Symbol	mem -> gs_lib_ctx -> io_device_table_root		5197495						
ANR	5197775	Symbol	gs_lib_ctx_get_interp_instance		5197495						
ANR	5197776	Symbol	table		5197495						
ANR	5197777	Symbol	gs_register_struct_root		5197495						
ANR	5197778	Symbol	& st_io_device		5197495						
ANR	5197779	Symbol	gx_io_device_table_count		5197495						
ANR	5197780	Symbol	* * j		5197495						
ANR	5197781	Symbol	NULL		5197495						
ANR	5197782	Symbol	table [ j ] -> procs . init		5197495						
ANR	5197783	Symbol	i		5197495						
ANR	5197784	Symbol	* table		5197495						
ANR	5197785	Symbol	* * mem		5197495						
ANR	5197786	Symbol	j		5197495						
ANR	5197787	Symbol	libctx -> io_device_table_size		5197495						
ANR	5197788	Symbol	* gx_io_device_table		5197495						
ANR	5197789	Symbol	gs_error_VMerror		5197495						
ANR	5197790	Symbol	* * table		5197495						
ANR	5197791	Symbol	gs_note_error		5197495						
ANR	5197792	Symbol	* i		5197495						
ANR	5197793	Symbol	* j		5197495						
ANR	5197794	Symbol	table [ j ] -> procs		5197495						
ANR	5197795	Symbol	* mem -> gs_lib_ctx		5197495						
ANR	5197796	Symbol	gx_io_device		5197495						
ANR	5197797	Symbol	mem -> gs_lib_ctx		5197495						
ANR	5197798	Symbol	* mem		5197495						
ANR	5197799	Function	gs_iodev_finit	111:0:3801:4081							
ANR	5197800	FunctionDef	gs_iodev_finit (gs_memory_t * mem)		5197799	0					
ANR	5197801	CompoundStatement		113:0:3840:4081	5197799	0					
ANR	5197802	IdentifierDeclStatement	gs_lib_ctx_t * libctx = gs_lib_ctx_get_interp_instance ( mem ) ;	114:4:3846:3904	5197799	0	True				
ANR	5197803	IdentifierDecl	* libctx = gs_lib_ctx_get_interp_instance ( mem )		5197799	0					
ANR	5197804	IdentifierDeclType	gs_lib_ctx_t *		5197799	0					
ANR	5197805	Identifier	libctx		5197799	1					
ANR	5197806	AssignmentExpression	* libctx = gs_lib_ctx_get_interp_instance ( mem )		5197799	2		=			
ANR	5197807	Identifier	libctx		5197799	0					
ANR	5197808	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		5197799	1					
ANR	5197809	Callee	gs_lib_ctx_get_interp_instance		5197799	0					
ANR	5197810	Identifier	gs_lib_ctx_get_interp_instance		5197799	0					
ANR	5197811	ArgumentList	mem		5197799	1					
ANR	5197812	Argument	mem		5197799	0					
ANR	5197813	Identifier	mem		5197799	0					
ANR	5197814	IfStatement	if ( libctx && libctx -> io_device_table )		5197799	1					
ANR	5197815	Condition	libctx && libctx -> io_device_table	115:8:3914:3946	5197799	0	True				
ANR	5197816	AndExpression	libctx && libctx -> io_device_table		5197799	0		&&			
ANR	5197817	Identifier	libctx		5197799	0					
ANR	5197818	PtrMemberAccess	libctx -> io_device_table		5197799	1					
ANR	5197819	Identifier	libctx		5197799	0					
ANR	5197820	Identifier	io_device_table		5197799	1					
ANR	5197821	CompoundStatement		3:43:108:108	5197799	1					
ANR	5197822	ExpressionStatement	"gs_free_object ( mem , libctx -> io_device_table , ""gs_iodev_finit"" )"	116:8:3959:4021	5197799	0	True				
ANR	5197823	CallExpression	"gs_free_object ( mem , libctx -> io_device_table , ""gs_iodev_finit"" )"		5197799	0					
ANR	5197824	Callee	gs_free_object		5197799	0					
ANR	5197825	Identifier	gs_free_object		5197799	0					
ANR	5197826	ArgumentList	mem		5197799	1					
ANR	5197827	Argument	mem		5197799	0					
ANR	5197828	Identifier	mem		5197799	0					
ANR	5197829	Argument	libctx -> io_device_table		5197799	1					
ANR	5197830	PtrMemberAccess	libctx -> io_device_table		5197799	0					
ANR	5197831	Identifier	libctx		5197799	0					
ANR	5197832	Identifier	io_device_table		5197799	1					
ANR	5197833	Argument	"""gs_iodev_finit"""		5197799	2					
ANR	5197834	PrimaryExpression	"""gs_iodev_finit"""		5197799	0					
ANR	5197835	ExpressionStatement	libctx -> io_device_table = NULL	117:8:4031:4061	5197799	1	True				
ANR	5197836	AssignmentExpression	libctx -> io_device_table = NULL		5197799	0		=			
ANR	5197837	PtrMemberAccess	libctx -> io_device_table		5197799	0					
ANR	5197838	Identifier	libctx		5197799	0					
ANR	5197839	Identifier	io_device_table		5197799	1					
ANR	5197840	Identifier	NULL		5197799	1					
ANR	5197841	ReturnStatement	return ;	119:4:4073:4079	5197799	2	True				
ANR	5197842	ReturnType	void		5197799	1					
ANR	5197843	Identifier	gs_iodev_finit		5197799	2					
ANR	5197844	ParameterList	gs_memory_t * mem		5197799	3					
ANR	5197845	Parameter	gs_memory_t * mem	112:15:3821:3837	5197799	0	True				
ANR	5197846	ParameterType	gs_memory_t *		5197799	0					
ANR	5197847	Identifier	mem		5197799	1					
ANR	5197848	CFGEntryNode	ENTRY		5197799		True				
ANR	5197849	CFGExitNode	EXIT		5197799		True				
ANR	5197850	Symbol	libctx -> io_device_table		5197799						
ANR	5197851	Symbol	* libctx		5197799						
ANR	5197852	Symbol	libctx		5197799						
ANR	5197853	Symbol	NULL		5197799						
ANR	5197854	Symbol	mem		5197799						
ANR	5197855	Symbol	gs_lib_ctx_get_interp_instance		5197799						
ANR	5197856	Function	gs_iodev_register_dev	125:0:4140:5399							
ANR	5197857	FunctionDef	"gs_iodev_register_dev (gs_memory_t * mem , const gx_io_device * newiodev)"		5197856	0					
ANR	5197858	CompoundStatement		127:0:4215:5399	5197856	0					
ANR	5197859	IdentifierDeclStatement	gs_lib_ctx_t * libctx = gs_lib_ctx_get_interp_instance ( mem ) ;	128:4:4221:4279	5197856	0	True				
ANR	5197860	IdentifierDecl	* libctx = gs_lib_ctx_get_interp_instance ( mem )		5197856	0					
ANR	5197861	IdentifierDeclType	gs_lib_ctx_t *		5197856	0					
ANR	5197862	Identifier	libctx		5197856	1					
ANR	5197863	AssignmentExpression	* libctx = gs_lib_ctx_get_interp_instance ( mem )		5197856	2		=			
ANR	5197864	Identifier	libctx		5197856	0					
ANR	5197865	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		5197856	1					
ANR	5197866	Callee	gs_lib_ctx_get_interp_instance		5197856	0					
ANR	5197867	Identifier	gs_lib_ctx_get_interp_instance		5197856	0					
ANR	5197868	ArgumentList	mem		5197856	1					
ANR	5197869	Argument	mem		5197856	0					
ANR	5197870	Identifier	mem		5197856	0					
ANR	5197871	IdentifierDeclStatement	gx_io_device * * table = libctx -> io_device_table ;	129:4:4285:4331	5197856	1	True				
ANR	5197872	IdentifierDecl	* * table = libctx -> io_device_table		5197856	0					
ANR	5197873	IdentifierDeclType	gx_io_device * *		5197856	0					
ANR	5197874	Identifier	table		5197856	1					
ANR	5197875	AssignmentExpression	* * table = libctx -> io_device_table		5197856	2		=			
ANR	5197876	Identifier	table		5197856	0					
ANR	5197877	PtrMemberAccess	libctx -> io_device_table		5197856	1					
ANR	5197878	Identifier	libctx		5197856	0					
ANR	5197879	Identifier	io_device_table		5197856	1					
ANR	5197880	IdentifierDeclStatement	int code = 0 ;	130:4:4337:4349	5197856	2	True				
ANR	5197881	IdentifierDecl	code = 0		5197856	0					
ANR	5197882	IdentifierDeclType	int		5197856	0					
ANR	5197883	Identifier	code		5197856	1					
ANR	5197884	AssignmentExpression	code = 0		5197856	2		=			
ANR	5197885	Identifier	code		5197856	0					
ANR	5197886	PrimaryExpression	0		5197856	1					
ANR	5197887	IdentifierDeclStatement	gx_io_device * iodev ;	131:4:4355:4374	5197856	3	True				
ANR	5197888	IdentifierDecl	* iodev		5197856	0					
ANR	5197889	IdentifierDeclType	gx_io_device *		5197856	0					
ANR	5197890	Identifier	iodev		5197856	1					
ANR	5197891	IdentifierDeclStatement	int i ;	132:4:4380:4385	5197856	4	True				
ANR	5197892	IdentifierDecl	i		5197856	0					
ANR	5197893	IdentifierDeclType	int		5197856	0					
ANR	5197894	Identifier	i		5197856	1					
ANR	5197895	IfStatement	if ( libctx -> io_device_table_count >= libctx -> io_device_table_size )		5197856	5					
ANR	5197896	Condition	libctx -> io_device_table_count >= libctx -> io_device_table_size	134:8:4396:4456	5197856	0	True				
ANR	5197897	RelationalExpression	libctx -> io_device_table_count >= libctx -> io_device_table_size		5197856	0		>=			
ANR	5197898	PtrMemberAccess	libctx -> io_device_table_count		5197856	0					
ANR	5197899	Identifier	libctx		5197856	0					
ANR	5197900	Identifier	io_device_table_count		5197856	1					
ANR	5197901	PtrMemberAccess	libctx -> io_device_table_size		5197856	1					
ANR	5197902	Identifier	libctx		5197856	0					
ANR	5197903	Identifier	io_device_table_size		5197856	1					
ANR	5197904	CompoundStatement		8:71:243:243	5197856	1					
ANR	5197905	ExpressionStatement	return_error ( gs_error_limitcheck )	136:8:4562:4595	5197856	0	True				
ANR	5197906	CallExpression	return_error ( gs_error_limitcheck )		5197856	0					
ANR	5197907	Callee	return_error		5197856	0					
ANR	5197908	Identifier	return_error		5197856	0					
ANR	5197909	ArgumentList	gs_error_limitcheck		5197856	1					
ANR	5197910	Argument	gs_error_limitcheck		5197856	0					
ANR	5197911	Identifier	gs_error_limitcheck		5197856	0					
ANR	5197912	ExpressionStatement	"iodev = gs_alloc_struct ( mem , gx_io_device , & st_io_device , ""gs_iodev_register_dev(iodev)"" )"	139:4:4608:4725	5197856	6	True				
ANR	5197913	AssignmentExpression	"iodev = gs_alloc_struct ( mem , gx_io_device , & st_io_device , ""gs_iodev_register_dev(iodev)"" )"		5197856	0		=			
ANR	5197914	Identifier	iodev		5197856	0					
ANR	5197915	CallExpression	"gs_alloc_struct ( mem , gx_io_device , & st_io_device , ""gs_iodev_register_dev(iodev)"" )"		5197856	1					
ANR	5197916	Callee	gs_alloc_struct		5197856	0					
ANR	5197917	Identifier	gs_alloc_struct		5197856	0					
ANR	5197918	ArgumentList	mem		5197856	1					
ANR	5197919	Argument	mem		5197856	0					
ANR	5197920	Identifier	mem		5197856	0					
ANR	5197921	Argument	gx_io_device		5197856	1					
ANR	5197922	Identifier	gx_io_device		5197856	0					
ANR	5197923	Argument	& st_io_device		5197856	2					
ANR	5197924	UnaryOperationExpression	& st_io_device		5197856	0					
ANR	5197925	UnaryOperator	&		5197856	0					
ANR	5197926	Identifier	st_io_device		5197856	1					
ANR	5197927	Argument	"""gs_iodev_register_dev(iodev)"""		5197856	3					
ANR	5197928	PrimaryExpression	"""gs_iodev_register_dev(iodev)"""		5197856	0					
ANR	5197929	IfStatement	if ( iodev == 0 )		5197856	7					
ANR	5197930	Condition	iodev == 0	142:8:4736:4745	5197856	0	True				
ANR	5197931	EqualityExpression	iodev == 0		5197856	0		==			
ANR	5197932	Identifier	iodev		5197856	0					
ANR	5197933	PrimaryExpression	0		5197856	1					
ANR	5197934	CompoundStatement		16:20:532:532	5197856	1					
ANR	5197935	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	143:8:4758:4796	5197856	0	True				
ANR	5197936	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		5197856	0		=			
ANR	5197937	Identifier	code		5197856	0					
ANR	5197938	CallExpression	gs_note_error ( gs_error_VMerror )		5197856	1					
ANR	5197939	Callee	gs_note_error		5197856	0					
ANR	5197940	Identifier	gs_note_error		5197856	0					
ANR	5197941	ArgumentList	gs_error_VMerror		5197856	1					
ANR	5197942	Argument	gs_error_VMerror		5197856	0					
ANR	5197943	Identifier	gs_error_VMerror		5197856	0					
ANR	5197944	GotoStatement	goto fail ;	144:8:4806:4815	5197856	1	True				
ANR	5197945	Identifier	fail		5197856	0					
ANR	5197946	ExpressionStatement	table [ libctx -> io_device_table_count ] = iodev	146:4:4827:4871	5197856	8	True				
ANR	5197947	AssignmentExpression	table [ libctx -> io_device_table_count ] = iodev		5197856	0		=			
ANR	5197948	ArrayIndexing	table [ libctx -> io_device_table_count ]		5197856	0					
ANR	5197949	Identifier	table		5197856	0					
ANR	5197950	PtrMemberAccess	libctx -> io_device_table_count		5197856	1					
ANR	5197951	Identifier	libctx		5197856	0					
ANR	5197952	Identifier	io_device_table_count		5197856	1					
ANR	5197953	Identifier	iodev		5197856	1					
ANR	5197954	ExpressionStatement	"memcpy ( table [ libctx -> io_device_table_count ] , newiodev , sizeof ( gx_io_device ) )"	147:4:4877:4953	5197856	9	True				
ANR	5197955	CallExpression	"memcpy ( table [ libctx -> io_device_table_count ] , newiodev , sizeof ( gx_io_device ) )"		5197856	0					
ANR	5197956	Callee	memcpy		5197856	0					
ANR	5197957	Identifier	memcpy		5197856	0					
ANR	5197958	ArgumentList	table [ libctx -> io_device_table_count ]		5197856	1					
ANR	5197959	Argument	table [ libctx -> io_device_table_count ]		5197856	0					
ANR	5197960	ArrayIndexing	table [ libctx -> io_device_table_count ]		5197856	0					
ANR	5197961	Identifier	table		5197856	0					
ANR	5197962	PtrMemberAccess	libctx -> io_device_table_count		5197856	1					
ANR	5197963	Identifier	libctx		5197856	0					
ANR	5197964	Identifier	io_device_table_count		5197856	1					
ANR	5197965	Argument	newiodev		5197856	1					
ANR	5197966	Identifier	newiodev		5197856	0					
ANR	5197967	Argument	sizeof ( gx_io_device )		5197856	2					
ANR	5197968	SizeofExpression	sizeof ( gx_io_device )		5197856	0					
ANR	5197969	Sizeof	sizeof		5197856	0					
ANR	5197970	SizeofOperand	gx_io_device		5197856	1					
ANR	5197971	IfStatement	"if ( ( code = ( table [ libctx -> io_device_table_count ] -> procs . init ) ( table [ libctx -> io_device_table_count ] , mem ) ) < 0 )"		5197856	10					
ANR	5197972	Condition	"( code = ( table [ libctx -> io_device_table_count ] -> procs . init ) ( table [ libctx -> io_device_table_count ] , mem ) ) < 0"	149:8:4964:5069	5197856	0	True				
ANR	5197973	RelationalExpression	"( code = ( table [ libctx -> io_device_table_count ] -> procs . init ) ( table [ libctx -> io_device_table_count ] , mem ) ) < 0"		5197856	0		<			
ANR	5197974	AssignmentExpression	"code = ( table [ libctx -> io_device_table_count ] -> procs . init ) ( table [ libctx -> io_device_table_count ] , mem )"		5197856	0		=			
ANR	5197975	Identifier	code		5197856	0					
ANR	5197976	CallExpression	"( table [ libctx -> io_device_table_count ] -> procs . init ) ( table [ libctx -> io_device_table_count ] , mem )"		5197856	1					
ANR	5197977	Callee	table [ libctx -> io_device_table_count ] -> procs . init		5197856	0					
ANR	5197978	MemberAccess	table [ libctx -> io_device_table_count ] -> procs . init		5197856	0					
ANR	5197979	PtrMemberAccess	table [ libctx -> io_device_table_count ] -> procs		5197856	0					
ANR	5197980	ArrayIndexing	table [ libctx -> io_device_table_count ]		5197856	0					
ANR	5197981	Identifier	table		5197856	0					
ANR	5197982	PtrMemberAccess	libctx -> io_device_table_count		5197856	1					
ANR	5197983	Identifier	libctx		5197856	0					
ANR	5197984	Identifier	io_device_table_count		5197856	1					
ANR	5197985	Identifier	procs		5197856	1					
ANR	5197986	Identifier	init		5197856	1					
ANR	5197987	ArgumentList	table [ libctx -> io_device_table_count ]		5197856	1					
ANR	5197988	Argument	table [ libctx -> io_device_table_count ]		5197856	0					
ANR	5197989	ArrayIndexing	table [ libctx -> io_device_table_count ]		5197856	0					
ANR	5197990	Identifier	table		5197856	0					
ANR	5197991	PtrMemberAccess	libctx -> io_device_table_count		5197856	1					
ANR	5197992	Identifier	libctx		5197856	0					
ANR	5197993	Identifier	io_device_table_count		5197856	1					
ANR	5197994	Argument	mem		5197856	1					
ANR	5197995	Identifier	mem		5197856	0					
ANR	5197996	PrimaryExpression	0		5197856	1					
ANR	5197997	GotoStatement	goto fail2 ;	150:8:5080:5090	5197856	1	True				
ANR	5197998	Identifier	fail2		5197856	0					
ANR	5197999	ExpressionStatement	libctx -> io_device_table_count ++	151:4:5096:5127	5197856	11	True				
ANR	5198000	PostIncDecOperationExpression	libctx -> io_device_table_count ++		5197856	0					
ANR	5198001	PtrMemberAccess	libctx -> io_device_table_count		5197856	0					
ANR	5198002	Identifier	libctx		5197856	0					
ANR	5198003	Identifier	io_device_table_count		5197856	1					
ANR	5198004	IncDec	++		5197856	1					
ANR	5198005	ReturnStatement	return ( code ) ;	153:4:5134:5146	5197856	12	True				
ANR	5198006	Identifier	code		5197856	0					
ANR	5198007	Label	fail2 :	154:2:5150:5155	5197856	13	True				
ANR	5198008	Identifier	fail2		5197856	0					
ANR	5198009	ForStatement	for ( i = libctx -> io_device_table_count ; i > 0 ; -- i )		5197856	14					
ANR	5198010	ForInit	i = libctx -> io_device_table_count ;	155:9:5166:5199	5197856	0	True				
ANR	5198011	AssignmentExpression	i = libctx -> io_device_table_count		5197856	0		=			
ANR	5198012	Identifier	i		5197856	0					
ANR	5198013	PtrMemberAccess	libctx -> io_device_table_count		5197856	1					
ANR	5198014	Identifier	libctx		5197856	0					
ANR	5198015	Identifier	io_device_table_count		5197856	1					
ANR	5198016	Condition	i > 0	155:44:5201:5205	5197856	1	True				
ANR	5198017	RelationalExpression	i > 0		5197856	0		>			
ANR	5198018	Identifier	i		5197856	0					
ANR	5198019	PrimaryExpression	0		5197856	1					
ANR	5198020	UnaryExpression	-- i	155:51:5208:5210	5197856	2	True				
ANR	5198021	IncDec	--		5197856	0					
ANR	5198022	Identifier	i		5197856	1					
ANR	5198023	ExpressionStatement	"gs_free_object ( mem , table [ i - 1 ] , ""gs_iodev_init(iodev)"" )"	156:8:5221:5278	5197856	3	True				
ANR	5198024	CallExpression	"gs_free_object ( mem , table [ i - 1 ] , ""gs_iodev_init(iodev)"" )"		5197856	0					
ANR	5198025	Callee	gs_free_object		5197856	0					
ANR	5198026	Identifier	gs_free_object		5197856	0					
ANR	5198027	ArgumentList	mem		5197856	1					
ANR	5198028	Argument	mem		5197856	0					
ANR	5198029	Identifier	mem		5197856	0					
ANR	5198030	Argument	table [ i - 1 ]		5197856	1					
ANR	5198031	ArrayIndexing	table [ i - 1 ]		5197856	0					
ANR	5198032	Identifier	table		5197856	0					
ANR	5198033	AdditiveExpression	i - 1		5197856	1		-			
ANR	5198034	Identifier	i		5197856	0					
ANR	5198035	PrimaryExpression	1		5197856	1					
ANR	5198036	Argument	"""gs_iodev_init(iodev)"""		5197856	2					
ANR	5198037	PrimaryExpression	"""gs_iodev_init(iodev)"""		5197856	0					
ANR	5198038	ExpressionStatement	"gs_free_object ( mem , table , ""gs_iodev_init(table)"" )"	157:4:5284:5334	5197856	15	True				
ANR	5198039	CallExpression	"gs_free_object ( mem , table , ""gs_iodev_init(table)"" )"		5197856	0					
ANR	5198040	Callee	gs_free_object		5197856	0					
ANR	5198041	Identifier	gs_free_object		5197856	0					
ANR	5198042	ArgumentList	mem		5197856	1					
ANR	5198043	Argument	mem		5197856	0					
ANR	5198044	Identifier	mem		5197856	0					
ANR	5198045	Argument	table		5197856	1					
ANR	5198046	Identifier	table		5197856	0					
ANR	5198047	Argument	"""gs_iodev_init(table)"""		5197856	2					
ANR	5198048	PrimaryExpression	"""gs_iodev_init(table)"""		5197856	0					
ANR	5198049	ExpressionStatement	libctx -> io_device_table = NULL	158:4:5340:5370	5197856	16	True				
ANR	5198050	AssignmentExpression	libctx -> io_device_table = NULL		5197856	0		=			
ANR	5198051	PtrMemberAccess	libctx -> io_device_table		5197856	0					
ANR	5198052	Identifier	libctx		5197856	0					
ANR	5198053	Identifier	io_device_table		5197856	1					
ANR	5198054	Identifier	NULL		5197856	1					
ANR	5198055	Label	fail :	160:2:5375:5379	5197856	17	True				
ANR	5198056	Identifier	fail		5197856	0					
ANR	5198057	ReturnStatement	return ( code ) ;	161:4:5385:5397	5197856	18	True				
ANR	5198058	Identifier	code		5197856	0					
ANR	5198059	ReturnType	int		5197856	1					
ANR	5198060	Identifier	gs_iodev_register_dev		5197856	2					
ANR	5198061	ParameterList	"gs_memory_t * mem , const gx_io_device * newiodev"		5197856	3					
ANR	5198062	Parameter	gs_memory_t * mem	126:22:4166:4182	5197856	0	True				
ANR	5198063	ParameterType	gs_memory_t *		5197856	0					
ANR	5198064	Identifier	mem		5197856	1					
ANR	5198065	Parameter	const gx_io_device * newiodev	126:41:4185:4212	5197856	1	True				
ANR	5198066	ParameterType	const gx_io_device *		5197856	0					
ANR	5198067	Identifier	newiodev		5197856	1					
ANR	5198068	CFGEntryNode	ENTRY		5197856		True				
ANR	5198069	CFGExitNode	EXIT		5197856		True				
ANR	5198070	Symbol	* libctx		5197856						
ANR	5198071	Symbol	libctx		5197856						
ANR	5198072	Symbol	code		5197856						
ANR	5198073	Symbol	table [ libctx -> io_device_table_count ] -> procs . init		5197856						
ANR	5198074	Symbol	gs_alloc_struct		5197856						
ANR	5198075	Symbol	libctx -> io_device_table_count		5197856						
ANR	5198076	Symbol	libctx -> io_device_table		5197856						
ANR	5198077	Symbol	mem		5197856						
ANR	5198078	Symbol	iodev		5197856						
ANR	5198079	Symbol	gs_error_limitcheck		5197856						
ANR	5198080	Symbol	gs_lib_ctx_get_interp_instance		5197856						
ANR	5198081	Symbol	table		5197856						
ANR	5198082	Symbol	& st_io_device		5197856						
ANR	5198083	Symbol	* libctx -> io_device_table_count		5197856						
ANR	5198084	Symbol	NULL		5197856						
ANR	5198085	Symbol	i		5197856						
ANR	5198086	Symbol	* table		5197856						
ANR	5198087	Symbol	* * * libctx		5197856						
ANR	5198088	Symbol	newiodev		5197856						
ANR	5198089	Symbol	libctx -> io_device_table_size		5197856						
ANR	5198090	Symbol	gs_error_VMerror		5197856						
ANR	5198091	Symbol	gs_note_error		5197856						
ANR	5198092	Symbol	* * table		5197856						
ANR	5198093	Symbol	* i		5197856						
ANR	5198094	Symbol	* * libctx		5197856						
ANR	5198095	Symbol	gx_io_device		5197856						
ANR	5198096	Symbol	* * libctx -> io_device_table_count		5197856						
ANR	5198097	Symbol	table [ libctx -> io_device_table_count ] -> procs		5197856						
ANR	5198098	Function	gs_iodev_finalize	164:0:5402:6102							
ANR	5198099	FunctionDef	"gs_iodev_finalize (const gs_memory_t * cmem , void * vptr)"		5198098	0					
ANR	5198100	CompoundStatement		166:0:5469:6102	5198098	0					
ANR	5198101	IdentifierDeclStatement	gs_memory_t * mem = ( gs_memory_t * ) cmem ;	168:4:5518:5556	5198098	0	True				
ANR	5198102	IdentifierDecl	* mem = ( gs_memory_t * ) cmem		5198098	0					
ANR	5198103	IdentifierDeclType	gs_memory_t *		5198098	0					
ANR	5198104	Identifier	mem		5198098	1					
ANR	5198105	AssignmentExpression	* mem = ( gs_memory_t * ) cmem		5198098	2		=			
ANR	5198106	Identifier	mem		5198098	0					
ANR	5198107	CastExpression	( gs_memory_t * ) cmem		5198098	1					
ANR	5198108	CastTarget	gs_memory_t *		5198098	0					
ANR	5198109	Identifier	cmem		5198098	1					
ANR	5198110	IfStatement	if ( mem -> gs_lib_ctx -> io_device_table == vptr )		5198098	1					
ANR	5198111	Condition	mem -> gs_lib_ctx -> io_device_table == vptr	169:8:5566:5605	5198098	0	True				
ANR	5198112	EqualityExpression	mem -> gs_lib_ctx -> io_device_table == vptr		5198098	0		==			
ANR	5198113	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		5198098	0					
ANR	5198114	PtrMemberAccess	mem -> gs_lib_ctx		5198098	0					
ANR	5198115	Identifier	mem		5198098	0					
ANR	5198116	Identifier	gs_lib_ctx		5198098	1					
ANR	5198117	Identifier	io_device_table		5198098	1					
ANR	5198118	Identifier	vptr		5198098	1					
ANR	5198119	CompoundStatement		5:8:148:203	5198098	1					
ANR	5198120	IdentifierDeclStatement	gx_io_device * * table = mem -> gs_lib_ctx -> io_device_table ;	170:8:5618:5673	5198098	0	True				
ANR	5198121	IdentifierDecl	* * table = mem -> gs_lib_ctx -> io_device_table		5198098	0					
ANR	5198122	IdentifierDeclType	gx_io_device * *		5198098	0					
ANR	5198123	Identifier	table		5198098	1					
ANR	5198124	AssignmentExpression	* * table = mem -> gs_lib_ctx -> io_device_table		5198098	2		=			
ANR	5198125	Identifier	table		5198098	0					
ANR	5198126	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		5198098	1					
ANR	5198127	PtrMemberAccess	mem -> gs_lib_ctx		5198098	0					
ANR	5198128	Identifier	mem		5198098	0					
ANR	5198129	Identifier	gs_lib_ctx		5198098	1					
ANR	5198130	Identifier	io_device_table		5198098	1					
ANR	5198131	WhileStatement	while ( mem -> gs_lib_ctx -> io_device_table_count -- > 0 )		5198098	1					
ANR	5198132	Condition	mem -> gs_lib_ctx -> io_device_table_count -- > 0	171:15:5690:5733	5198098	0	True				
ANR	5198133	RelationalExpression	mem -> gs_lib_ctx -> io_device_table_count -- > 0		5198098	0		>			
ANR	5198134	PostIncDecOperationExpression	mem -> gs_lib_ctx -> io_device_table_count --		5198098	0					
ANR	5198135	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_count		5198098	0					
ANR	5198136	PtrMemberAccess	mem -> gs_lib_ctx		5198098	0					
ANR	5198137	Identifier	mem		5198098	0					
ANR	5198138	Identifier	gs_lib_ctx		5198098	1					
ANR	5198139	Identifier	io_device_table_count		5198098	1					
ANR	5198140	IncDec	--		5198098	1					
ANR	5198141	PrimaryExpression	0		5198098	1					
ANR	5198142	CompoundStatement		6:61:266:266	5198098	1					
ANR	5198143	ExpressionStatement	"gs_free_object ( mem , table [ mem -> gs_lib_ctx -> io_device_table_count ] , ""gs_iodev_finalize"" )"	172:12:5750:5865	5198098	0	True				
ANR	5198144	CallExpression	"gs_free_object ( mem , table [ mem -> gs_lib_ctx -> io_device_table_count ] , ""gs_iodev_finalize"" )"		5198098	0					
ANR	5198145	Callee	gs_free_object		5198098	0					
ANR	5198146	Identifier	gs_free_object		5198098	0					
ANR	5198147	ArgumentList	mem		5198098	1					
ANR	5198148	Argument	mem		5198098	0					
ANR	5198149	Identifier	mem		5198098	0					
ANR	5198150	Argument	table [ mem -> gs_lib_ctx -> io_device_table_count ]		5198098	1					
ANR	5198151	ArrayIndexing	table [ mem -> gs_lib_ctx -> io_device_table_count ]		5198098	0					
ANR	5198152	Identifier	table		5198098	0					
ANR	5198153	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_count		5198098	1					
ANR	5198154	PtrMemberAccess	mem -> gs_lib_ctx		5198098	0					
ANR	5198155	Identifier	mem		5198098	0					
ANR	5198156	Identifier	gs_lib_ctx		5198098	1					
ANR	5198157	Identifier	io_device_table_count		5198098	1					
ANR	5198158	Argument	"""gs_iodev_finalize"""		5198098	2					
ANR	5198159	PrimaryExpression	"""gs_iodev_finalize"""		5198098	0					
ANR	5198160	ExpressionStatement	table [ mem -> gs_lib_ctx -> io_device_table_count ] = NULL	175:12:5879:5931	5198098	1	True				
ANR	5198161	AssignmentExpression	table [ mem -> gs_lib_ctx -> io_device_table_count ] = NULL		5198098	0		=			
ANR	5198162	ArrayIndexing	table [ mem -> gs_lib_ctx -> io_device_table_count ]		5198098	0					
ANR	5198163	Identifier	table		5198098	0					
ANR	5198164	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_count		5198098	1					
ANR	5198165	PtrMemberAccess	mem -> gs_lib_ctx		5198098	0					
ANR	5198166	Identifier	mem		5198098	0					
ANR	5198167	Identifier	gs_lib_ctx		5198098	1					
ANR	5198168	Identifier	io_device_table_count		5198098	1					
ANR	5198169	Identifier	NULL		5198098	1					
ANR	5198170	ExpressionStatement	mem -> gs_lib_ctx -> io_device_table = NULL	177:8:5951:5990	5198098	2	True				
ANR	5198171	AssignmentExpression	mem -> gs_lib_ctx -> io_device_table = NULL		5198098	0		=			
ANR	5198172	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		5198098	0					
ANR	5198173	PtrMemberAccess	mem -> gs_lib_ctx		5198098	0					
ANR	5198174	Identifier	mem		5198098	0					
ANR	5198175	Identifier	gs_lib_ctx		5198098	1					
ANR	5198176	Identifier	io_device_table		5198098	1					
ANR	5198177	Identifier	NULL		5198098	1					
ANR	5198178	ExpressionStatement	mem -> gs_lib_ctx -> io_device_table_size = mem -> gs_lib_ctx -> io_device_table_count = 0	178:8:6000:6094	5198098	3	True				
ANR	5198179	AssignmentExpression	mem -> gs_lib_ctx -> io_device_table_size = mem -> gs_lib_ctx -> io_device_table_count = 0		5198098	0		=			
ANR	5198180	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_size		5198098	0					
ANR	5198181	PtrMemberAccess	mem -> gs_lib_ctx		5198098	0					
ANR	5198182	Identifier	mem		5198098	0					
ANR	5198183	Identifier	gs_lib_ctx		5198098	1					
ANR	5198184	Identifier	io_device_table_size		5198098	1					
ANR	5198185	AssignmentExpression	mem -> gs_lib_ctx -> io_device_table_count = 0		5198098	1		=			
ANR	5198186	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_count		5198098	0					
ANR	5198187	PtrMemberAccess	mem -> gs_lib_ctx		5198098	0					
ANR	5198188	Identifier	mem		5198098	0					
ANR	5198189	Identifier	gs_lib_ctx		5198098	1					
ANR	5198190	Identifier	io_device_table_count		5198098	1					
ANR	5198191	PrimaryExpression	0		5198098	1					
ANR	5198192	ReturnType	static void		5198098	1					
ANR	5198193	Identifier	gs_iodev_finalize		5198098	2					
ANR	5198194	ParameterList	"const gs_memory_t * cmem , void * vptr"		5198098	3					
ANR	5198195	Parameter	const gs_memory_t * cmem	165:18:5432:5454	5198098	0	True				
ANR	5198196	ParameterType	const gs_memory_t *		5198098	0					
ANR	5198197	Identifier	cmem		5198098	1					
ANR	5198198	Parameter	void * vptr	165:43:5457:5466	5198098	1	True				
ANR	5198199	ParameterType	void *		5198098	0					
ANR	5198200	Identifier	vptr		5198098	1					
ANR	5198201	CFGEntryNode	ENTRY		5198098		True				
ANR	5198202	CFGExitNode	EXIT		5198098		True				
ANR	5198203	Symbol	NULL		5198098						
ANR	5198204	Symbol	mem -> gs_lib_ctx -> io_device_table_size		5198098						
ANR	5198205	Symbol	* * mem		5198098						
ANR	5198206	Symbol	* table		5198098						
ANR	5198207	Symbol	mem -> gs_lib_ctx -> io_device_table		5198098						
ANR	5198208	Symbol	vptr		5198098						
ANR	5198209	Symbol	mem -> gs_lib_ctx -> io_device_table_count		5198098						
ANR	5198210	Symbol	* * * mem		5198098						
ANR	5198211	Symbol	mem		5198098						
ANR	5198212	Symbol	* * mem -> gs_lib_ctx		5198098						
ANR	5198213	Symbol	* mem -> gs_lib_ctx		5198098						
ANR	5198214	Symbol	cmem		5198098						
ANR	5198215	Symbol	mem -> gs_lib_ctx		5198098						
ANR	5198216	Symbol	table		5198098						
ANR	5198217	Symbol	* mem -> gs_lib_ctx -> io_device_table_count		5198098						
ANR	5198218	Symbol	* mem		5198098						
ANR	5198219	Function	io_device_finalize	183:0:6105:6634							
ANR	5198220	FunctionDef	"io_device_finalize (const gs_memory_t * cmem , void * vptr)"		5198219	0					
ANR	5198221	CompoundStatement		185:0:6166:6634	5198219	0					
ANR	5198222	IdentifierDeclStatement	gs_memory_t * mem = ( gs_memory_t * ) cmem ;	187:4:6215:6253	5198219	0	True				
ANR	5198223	IdentifierDecl	* mem = ( gs_memory_t * ) cmem		5198219	0					
ANR	5198224	IdentifierDeclType	gs_memory_t *		5198219	0					
ANR	5198225	Identifier	mem		5198219	1					
ANR	5198226	AssignmentExpression	* mem = ( gs_memory_t * ) cmem		5198219	2		=			
ANR	5198227	Identifier	mem		5198219	0					
ANR	5198228	CastExpression	( gs_memory_t * ) cmem		5198219	1					
ANR	5198229	CastTarget	gs_memory_t *		5198219	0					
ANR	5198230	Identifier	cmem		5198219	1					
ANR	5198231	IfStatement	if ( mem -> gs_lib_ctx -> io_device_table_count > 0 )		5198219	1					
ANR	5198232	Condition	mem -> gs_lib_ctx -> io_device_table_count > 0	188:8:6263:6304	5198219	0	True				
ANR	5198233	RelationalExpression	mem -> gs_lib_ctx -> io_device_table_count > 0		5198219	0		>			
ANR	5198234	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_count		5198219	0					
ANR	5198235	PtrMemberAccess	mem -> gs_lib_ctx		5198219	0					
ANR	5198236	Identifier	mem		5198219	0					
ANR	5198237	Identifier	gs_lib_ctx		5198219	1					
ANR	5198238	Identifier	io_device_table_count		5198219	1					
ANR	5198239	PrimaryExpression	0		5198219	1					
ANR	5198240	CompoundStatement		5:8:150:155	5198219	1					
ANR	5198241	IdentifierDeclStatement	int i ;	189:8:6317:6322	5198219	0	True				
ANR	5198242	IdentifierDecl	i		5198219	0					
ANR	5198243	IdentifierDeclType	int		5198219	0					
ANR	5198244	Identifier	i		5198219	1					
ANR	5198245	ForStatement	for ( i = 0 ; i < mem -> gs_lib_ctx -> io_device_table_count && mem -> gs_lib_ctx -> io_device_table [ i ] != vptr ; i ++ )		5198219	1					
ANR	5198246	ForInit	i = 0 ;	190:13:6337:6342	5198219	0	True				
ANR	5198247	AssignmentExpression	i = 0		5198219	0		=			
ANR	5198248	Identifier	i		5198219	0					
ANR	5198249	PrimaryExpression	0		5198219	1					
ANR	5198250	Condition	i < mem -> gs_lib_ctx -> io_device_table_count && mem -> gs_lib_ctx -> io_device_table [ i ] != vptr	190:20:6344:6443	5198219	1	True				
ANR	5198251	AndExpression	i < mem -> gs_lib_ctx -> io_device_table_count && mem -> gs_lib_ctx -> io_device_table [ i ] != vptr		5198219	0		&&			
ANR	5198252	RelationalExpression	i < mem -> gs_lib_ctx -> io_device_table_count		5198219	0		<			
ANR	5198253	Identifier	i		5198219	0					
ANR	5198254	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table_count		5198219	1					
ANR	5198255	PtrMemberAccess	mem -> gs_lib_ctx		5198219	0					
ANR	5198256	Identifier	mem		5198219	0					
ANR	5198257	Identifier	gs_lib_ctx		5198219	1					
ANR	5198258	Identifier	io_device_table_count		5198219	1					
ANR	5198259	EqualityExpression	mem -> gs_lib_ctx -> io_device_table [ i ] != vptr		5198219	1		!=			
ANR	5198260	ArrayIndexing	mem -> gs_lib_ctx -> io_device_table [ i ]		5198219	0					
ANR	5198261	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		5198219	0					
ANR	5198262	PtrMemberAccess	mem -> gs_lib_ctx		5198219	0					
ANR	5198263	Identifier	mem		5198219	0					
ANR	5198264	Identifier	gs_lib_ctx		5198219	1					
ANR	5198265	Identifier	io_device_table		5198219	1					
ANR	5198266	Identifier	i		5198219	1					
ANR	5198267	Identifier	vptr		5198219	1					
ANR	5198268	PostIncDecOperationExpression	i ++	191:59:6446:6448	5198219	2	True				
ANR	5198269	Identifier	i		5198219	0					
ANR	5198270	IncDec	++		5198219	1					
ANR	5198271	ExpressionStatement		192:8:6459:6459	5198219	3	True				
ANR	5198272	ExpressionStatement	"( mem -> gs_lib_ctx -> io_device_table [ i ] -> procs . finit ) ( mem -> gs_lib_ctx -> io_device_table [ i ] , mem )"	194:8:6470:6562	5198219	2	True				
ANR	5198273	CallExpression	"( mem -> gs_lib_ctx -> io_device_table [ i ] -> procs . finit ) ( mem -> gs_lib_ctx -> io_device_table [ i ] , mem )"		5198219	0					
ANR	5198274	Callee	mem -> gs_lib_ctx -> io_device_table [ i ] -> procs . finit		5198219	0					
ANR	5198275	MemberAccess	mem -> gs_lib_ctx -> io_device_table [ i ] -> procs . finit		5198219	0					
ANR	5198276	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table [ i ] -> procs		5198219	0					
ANR	5198277	ArrayIndexing	mem -> gs_lib_ctx -> io_device_table [ i ]		5198219	0					
ANR	5198278	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		5198219	0					
ANR	5198279	PtrMemberAccess	mem -> gs_lib_ctx		5198219	0					
ANR	5198280	Identifier	mem		5198219	0					
ANR	5198281	Identifier	gs_lib_ctx		5198219	1					
ANR	5198282	Identifier	io_device_table		5198219	1					
ANR	5198283	Identifier	i		5198219	1					
ANR	5198284	Identifier	procs		5198219	1					
ANR	5198285	Identifier	finit		5198219	1					
ANR	5198286	ArgumentList	mem -> gs_lib_ctx -> io_device_table [ i ]		5198219	1					
ANR	5198287	Argument	mem -> gs_lib_ctx -> io_device_table [ i ]		5198219	0					
ANR	5198288	ArrayIndexing	mem -> gs_lib_ctx -> io_device_table [ i ]		5198219	0					
ANR	5198289	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		5198219	0					
ANR	5198290	PtrMemberAccess	mem -> gs_lib_ctx		5198219	0					
ANR	5198291	Identifier	mem		5198219	0					
ANR	5198292	Identifier	gs_lib_ctx		5198219	1					
ANR	5198293	Identifier	io_device_table		5198219	1					
ANR	5198294	Identifier	i		5198219	1					
ANR	5198295	Argument	mem		5198219	1					
ANR	5198296	Identifier	mem		5198219	0					
ANR	5198297	ExpressionStatement	mem -> gs_lib_ctx -> io_device_table [ i ] = NULL	195:8:6572:6614	5198219	3	True				
ANR	5198298	AssignmentExpression	mem -> gs_lib_ctx -> io_device_table [ i ] = NULL		5198219	0		=			
ANR	5198299	ArrayIndexing	mem -> gs_lib_ctx -> io_device_table [ i ]		5198219	0					
ANR	5198300	PtrMemberAccess	mem -> gs_lib_ctx -> io_device_table		5198219	0					
ANR	5198301	PtrMemberAccess	mem -> gs_lib_ctx		5198219	0					
ANR	5198302	Identifier	mem		5198219	0					
ANR	5198303	Identifier	gs_lib_ctx		5198219	1					
ANR	5198304	Identifier	io_device_table		5198219	1					
ANR	5198305	Identifier	i		5198219	1					
ANR	5198306	Identifier	NULL		5198219	1					
ANR	5198307	ReturnStatement	return ;	197:4:6626:6632	5198219	2	True				
ANR	5198308	ReturnType	void		5198219	1					
ANR	5198309	Identifier	io_device_finalize		5198219	2					
ANR	5198310	ParameterList	"const gs_memory_t * cmem , void * vptr"		5198219	3					
ANR	5198311	Parameter	const gs_memory_t * cmem	184:19:6129:6151	5198219	0	True				
ANR	5198312	ParameterType	const gs_memory_t *		5198219	0					
ANR	5198313	Identifier	cmem		5198219	1					
ANR	5198314	Parameter	void * vptr	184:44:6154:6163	5198219	1	True				
ANR	5198315	ParameterType	void *		5198219	0					
ANR	5198316	Identifier	vptr		5198219	1					
ANR	5198317	CFGEntryNode	ENTRY		5198219		True				
ANR	5198318	CFGExitNode	EXIT		5198219		True				
ANR	5198319	Symbol	* * i		5198219						
ANR	5198320	Symbol	NULL		5198219						
ANR	5198321	Symbol	* mem -> gs_lib_ctx -> io_device_table		5198219						
ANR	5198322	Symbol	* * mem		5198219						
ANR	5198323	Symbol	i		5198219						
ANR	5198324	Symbol	* * * * mem		5198219						
ANR	5198325	Symbol	mem -> gs_lib_ctx -> io_device_table		5198219						
ANR	5198326	Symbol	vptr		5198219						
ANR	5198327	Symbol	mem -> gs_lib_ctx -> io_device_table_count		5198219						
ANR	5198328	Symbol	* i		5198219						
ANR	5198329	Symbol	* * * mem		5198219						
ANR	5198330	Symbol	mem		5198219						
ANR	5198331	Symbol	* * mem -> gs_lib_ctx		5198219						
ANR	5198332	Symbol	* * mem -> gs_lib_ctx -> io_device_table		5198219						
ANR	5198333	Symbol	mem -> gs_lib_ctx -> io_device_table [ i ] -> procs		5198219						
ANR	5198334	Symbol	* mem -> gs_lib_ctx		5198219						
ANR	5198335	Symbol	cmem		5198219						
ANR	5198336	Symbol	mem -> gs_lib_ctx		5198219						
ANR	5198337	Symbol	* * * mem -> gs_lib_ctx		5198219						
ANR	5198338	Symbol	* mem		5198219						
ANR	5198339	Function	iodev_no_init	202:0:6702:6777							
ANR	5198340	FunctionDef	"iodev_no_init (gx_io_device * iodev , gs_memory_t * mem)"		5198339	0					
ANR	5198341	CompoundStatement		204:0:6761:6777	5198339	0					
ANR	5198342	ReturnStatement	return 0 ;	205:4:6767:6775	5198339	0	True				
ANR	5198343	PrimaryExpression	0		5198339	0					
ANR	5198344	ReturnType	int		5198339	1					
ANR	5198345	Identifier	iodev_no_init		5198339	2					
ANR	5198346	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		5198339	3					
ANR	5198347	Parameter	gx_io_device * iodev	203:14:6720:6739	5198339	0	True				
ANR	5198348	ParameterType	gx_io_device *		5198339	0					
ANR	5198349	Identifier	iodev		5198339	1					
ANR	5198350	Parameter	gs_memory_t * mem	203:36:6742:6758	5198339	1	True				
ANR	5198351	ParameterType	gs_memory_t *		5198339	0					
ANR	5198352	Identifier	mem		5198339	1					
ANR	5198353	CFGEntryNode	ENTRY		5198339		True				
ANR	5198354	CFGExitNode	EXIT		5198339		True				
ANR	5198355	Symbol	iodev		5198339						
ANR	5198356	Symbol	mem		5198339						
ANR	5198357	Function	iodev_no_finit	208:0:6780:6855							
ANR	5198358	FunctionDef	"iodev_no_finit (gx_io_device * iodev , gs_memory_t * mem)"		5198357	0					
ANR	5198359	CompoundStatement		210:0:6841:6855	5198357	0					
ANR	5198360	ReturnStatement	return ;	211:4:6847:6853	5198357	0	True				
ANR	5198361	ReturnType	void		5198357	1					
ANR	5198362	Identifier	iodev_no_finit		5198357	2					
ANR	5198363	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		5198357	3					
ANR	5198364	Parameter	gx_io_device * iodev	209:15:6800:6819	5198357	0	True				
ANR	5198365	ParameterType	gx_io_device *		5198357	0					
ANR	5198366	Identifier	iodev		5198357	1					
ANR	5198367	Parameter	gs_memory_t * mem	209:37:6822:6838	5198357	1	True				
ANR	5198368	ParameterType	gs_memory_t *		5198357	0					
ANR	5198369	Identifier	mem		5198357	1					
ANR	5198370	CFGEntryNode	ENTRY		5198357		True				
ANR	5198371	CFGExitNode	EXIT		5198357		True				
ANR	5198372	Symbol	iodev		5198357						
ANR	5198373	Symbol	mem		5198357						
ANR	5198374	Function	iodev_no_open_device	214:0:6858:7027							
ANR	5198375	FunctionDef	"iodev_no_open_device (gx_io_device * iodev , const char * access , stream * * ps , gs_memory_t * mem)"		5198374	0					
ANR	5198376	CompoundStatement		217:0:6979:7027	5198374	0					
ANR	5198377	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	218:4:6985:7025	5198374	0	True				
ANR	5198378	CallExpression	return_error ( gs_error_invalidfileaccess )		5198374	0					
ANR	5198379	Callee	return_error		5198374	0					
ANR	5198380	Identifier	return_error		5198374	0					
ANR	5198381	ArgumentList	gs_error_invalidfileaccess		5198374	1					
ANR	5198382	Argument	gs_error_invalidfileaccess		5198374	0					
ANR	5198383	Identifier	gs_error_invalidfileaccess		5198374	0					
ANR	5198384	ReturnType	int		5198374	1					
ANR	5198385	Identifier	iodev_no_open_device		5198374	2					
ANR	5198386	ParameterList	"gx_io_device * iodev , const char * access , stream * * ps , gs_memory_t * mem"		5198374	3					
ANR	5198387	Parameter	gx_io_device * iodev	215:21:6883:6902	5198374	0	True				
ANR	5198388	ParameterType	gx_io_device *		5198374	0					
ANR	5198389	Identifier	iodev		5198374	1					
ANR	5198390	Parameter	const char * access	215:43:6905:6922	5198374	1	True				
ANR	5198391	ParameterType	const char *		5198374	0					
ANR	5198392	Identifier	access		5198374	1					
ANR	5198393	Parameter	stream * * ps	215:63:6925:6936	5198374	2	True				
ANR	5198394	ParameterType	stream * *		5198374	0					
ANR	5198395	Identifier	ps		5198374	1					
ANR	5198396	Parameter	gs_memory_t * mem	216:21:6960:6976	5198374	3	True				
ANR	5198397	ParameterType	gs_memory_t *		5198374	0					
ANR	5198398	Identifier	mem		5198374	1					
ANR	5198399	CFGEntryNode	ENTRY		5198374		True				
ANR	5198400	CFGExitNode	EXIT		5198374		True				
ANR	5198401	Symbol	access		5198374						
ANR	5198402	Symbol	ps		5198374						
ANR	5198403	Symbol	iodev		5198374						
ANR	5198404	Symbol	mem		5198374						
ANR	5198405	Symbol	gs_error_invalidfileaccess		5198374						
ANR	5198406	Function	iodev_no_open_file	221:0:7030:7228							
ANR	5198407	FunctionDef	"iodev_no_open_file (gx_io_device * iodev , const char * fname , uint namelen , const char * access , stream * * ps , gs_memory_t * mem)"		5198406	0					
ANR	5198408	CompoundStatement		224:0:7180:7228	5198406	0					
ANR	5198409	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	225:4:7186:7226	5198406	0	True				
ANR	5198410	CallExpression	return_error ( gs_error_invalidfileaccess )		5198406	0					
ANR	5198411	Callee	return_error		5198406	0					
ANR	5198412	Identifier	return_error		5198406	0					
ANR	5198413	ArgumentList	gs_error_invalidfileaccess		5198406	1					
ANR	5198414	Argument	gs_error_invalidfileaccess		5198406	0					
ANR	5198415	Identifier	gs_error_invalidfileaccess		5198406	0					
ANR	5198416	ReturnType	int		5198406	1					
ANR	5198417	Identifier	iodev_no_open_file		5198406	2					
ANR	5198418	ParameterList	"gx_io_device * iodev , const char * fname , uint namelen , const char * access , stream * * ps , gs_memory_t * mem"		5198406	3					
ANR	5198419	Parameter	gx_io_device * iodev	222:19:7053:7072	5198406	0	True				
ANR	5198420	ParameterType	gx_io_device *		5198406	0					
ANR	5198421	Identifier	iodev		5198406	1					
ANR	5198422	Parameter	const char * fname	222:41:7075:7091	5198406	1	True				
ANR	5198423	ParameterType	const char *		5198406	0					
ANR	5198424	Identifier	fname		5198406	1					
ANR	5198425	Parameter	uint namelen	222:60:7094:7105	5198406	2	True				
ANR	5198426	ParameterType	uint		5198406	0					
ANR	5198427	Identifier	namelen		5198406	1					
ANR	5198428	Parameter	const char * access	223:19:7127:7144	5198406	3	True				
ANR	5198429	ParameterType	const char *		5198406	0					
ANR	5198430	Identifier	access		5198406	1					
ANR	5198431	Parameter	stream * * ps	223:39:7147:7158	5198406	4	True				
ANR	5198432	ParameterType	stream * *		5198406	0					
ANR	5198433	Identifier	ps		5198406	1					
ANR	5198434	Parameter	gs_memory_t * mem	223:53:7161:7177	5198406	5	True				
ANR	5198435	ParameterType	gs_memory_t *		5198406	0					
ANR	5198436	Identifier	mem		5198406	1					
ANR	5198437	CFGEntryNode	ENTRY		5198406		True				
ANR	5198438	CFGExitNode	EXIT		5198406		True				
ANR	5198439	Symbol	fname		5198406						
ANR	5198440	Symbol	access		5198406						
ANR	5198441	Symbol	ps		5198406						
ANR	5198442	Symbol	iodev		5198406						
ANR	5198443	Symbol	mem		5198406						
ANR	5198444	Symbol	namelen		5198406						
ANR	5198445	Symbol	gs_error_invalidfileaccess		5198406						
ANR	5198446	Function	iodev_no_fopen	228:0:7231:7418							
ANR	5198447	FunctionDef	"iodev_no_fopen (gx_io_device * iodev , const char * fname , const char * access , FILE * * pfile , char * rfname , uint rnamelen)"		5198446	0					
ANR	5198448	CompoundStatement		231:0:7370:7418	5198446	0					
ANR	5198449	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	232:4:7376:7416	5198446	0	True				
ANR	5198450	CallExpression	return_error ( gs_error_invalidfileaccess )		5198446	0					
ANR	5198451	Callee	return_error		5198446	0					
ANR	5198452	Identifier	return_error		5198446	0					
ANR	5198453	ArgumentList	gs_error_invalidfileaccess		5198446	1					
ANR	5198454	Argument	gs_error_invalidfileaccess		5198446	0					
ANR	5198455	Identifier	gs_error_invalidfileaccess		5198446	0					
ANR	5198456	ReturnType	int		5198446	1					
ANR	5198457	Identifier	iodev_no_fopen		5198446	2					
ANR	5198458	ParameterList	"gx_io_device * iodev , const char * fname , const char * access , FILE * * pfile , char * rfname , uint rnamelen"		5198446	3					
ANR	5198459	Parameter	gx_io_device * iodev	229:15:7250:7269	5198446	0	True				
ANR	5198460	ParameterType	gx_io_device *		5198446	0					
ANR	5198461	Identifier	iodev		5198446	1					
ANR	5198462	Parameter	const char * fname	229:37:7272:7288	5198446	1	True				
ANR	5198463	ParameterType	const char *		5198446	0					
ANR	5198464	Identifier	fname		5198446	1					
ANR	5198465	Parameter	const char * access	229:56:7291:7308	5198446	2	True				
ANR	5198466	ParameterType	const char *		5198446	0					
ANR	5198467	Identifier	access		5198446	1					
ANR	5198468	Parameter	FILE * * pfile	230:15:7326:7338	5198446	3	True				
ANR	5198469	ParameterType	FILE * *		5198446	0					
ANR	5198470	Identifier	pfile		5198446	1					
ANR	5198471	Parameter	char * rfname	230:30:7341:7352	5198446	4	True				
ANR	5198472	ParameterType	char *		5198446	0					
ANR	5198473	Identifier	rfname		5198446	1					
ANR	5198474	Parameter	uint rnamelen	230:44:7355:7367	5198446	5	True				
ANR	5198475	ParameterType	uint		5198446	0					
ANR	5198476	Identifier	rnamelen		5198446	1					
ANR	5198477	CFGEntryNode	ENTRY		5198446		True				
ANR	5198478	CFGExitNode	EXIT		5198446		True				
ANR	5198479	Symbol	fname		5198446						
ANR	5198480	Symbol	rnamelen		5198446						
ANR	5198481	Symbol	access		5198446						
ANR	5198482	Symbol	iodev		5198446						
ANR	5198483	Symbol	pfile		5198446						
ANR	5198484	Symbol	rfname		5198446						
ANR	5198485	Symbol	gs_error_invalidfileaccess		5198446						
ANR	5198486	Function	iodev_no_fclose	235:0:7421:7514							
ANR	5198487	FunctionDef	"iodev_no_fclose (gx_io_device * iodev , FILE * file)"		5198486	0					
ANR	5198488	CompoundStatement		237:0:7476:7514	5198486	0					
ANR	5198489	ExpressionStatement	return_error ( gs_error_ioerror )	238:4:7482:7512	5198486	0	True				
ANR	5198490	CallExpression	return_error ( gs_error_ioerror )		5198486	0					
ANR	5198491	Callee	return_error		5198486	0					
ANR	5198492	Identifier	return_error		5198486	0					
ANR	5198493	ArgumentList	gs_error_ioerror		5198486	1					
ANR	5198494	Argument	gs_error_ioerror		5198486	0					
ANR	5198495	Identifier	gs_error_ioerror		5198486	0					
ANR	5198496	ReturnType	int		5198486	1					
ANR	5198497	Identifier	iodev_no_fclose		5198486	2					
ANR	5198498	ParameterList	"gx_io_device * iodev , FILE * file"		5198486	3					
ANR	5198499	Parameter	gx_io_device * iodev	236:16:7441:7460	5198486	0	True				
ANR	5198500	ParameterType	gx_io_device *		5198486	0					
ANR	5198501	Identifier	iodev		5198486	1					
ANR	5198502	Parameter	FILE * file	236:38:7463:7473	5198486	1	True				
ANR	5198503	ParameterType	FILE *		5198486	0					
ANR	5198504	Identifier	file		5198486	1					
ANR	5198505	CFGEntryNode	ENTRY		5198486		True				
ANR	5198506	CFGExitNode	EXIT		5198486		True				
ANR	5198507	Symbol	file		5198486						
ANR	5198508	Symbol	iodev		5198486						
ANR	5198509	Symbol	gs_error_ioerror		5198486						
ANR	5198510	Function	iodev_no_delete_file	241:0:7517:7631							
ANR	5198511	FunctionDef	"iodev_no_delete_file (gx_io_device * iodev , const char * fname)"		5198510	0					
ANR	5198512	CompoundStatement		243:0:7583:7631	5198510	0					
ANR	5198513	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	244:4:7589:7629	5198510	0	True				
ANR	5198514	CallExpression	return_error ( gs_error_invalidfileaccess )		5198510	0					
ANR	5198515	Callee	return_error		5198510	0					
ANR	5198516	Identifier	return_error		5198510	0					
ANR	5198517	ArgumentList	gs_error_invalidfileaccess		5198510	1					
ANR	5198518	Argument	gs_error_invalidfileaccess		5198510	0					
ANR	5198519	Identifier	gs_error_invalidfileaccess		5198510	0					
ANR	5198520	ReturnType	int		5198510	1					
ANR	5198521	Identifier	iodev_no_delete_file		5198510	2					
ANR	5198522	ParameterList	"gx_io_device * iodev , const char * fname"		5198510	3					
ANR	5198523	Parameter	gx_io_device * iodev	242:21:7542:7561	5198510	0	True				
ANR	5198524	ParameterType	gx_io_device *		5198510	0					
ANR	5198525	Identifier	iodev		5198510	1					
ANR	5198526	Parameter	const char * fname	242:43:7564:7580	5198510	1	True				
ANR	5198527	ParameterType	const char *		5198510	0					
ANR	5198528	Identifier	fname		5198510	1					
ANR	5198529	CFGEntryNode	ENTRY		5198510		True				
ANR	5198530	CFGExitNode	EXIT		5198510		True				
ANR	5198531	Symbol	fname		5198510						
ANR	5198532	Symbol	iodev		5198510						
ANR	5198533	Symbol	gs_error_invalidfileaccess		5198510						
ANR	5198534	Function	iodev_no_rename_file	247:0:7634:7763							
ANR	5198535	FunctionDef	"iodev_no_rename_file (gx_io_device * iodev , const char * from , const char * to)"		5198534	0					
ANR	5198536	CompoundStatement		249:0:7715:7763	5198534	0					
ANR	5198537	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	250:4:7721:7761	5198534	0	True				
ANR	5198538	CallExpression	return_error ( gs_error_invalidfileaccess )		5198534	0					
ANR	5198539	Callee	return_error		5198534	0					
ANR	5198540	Identifier	return_error		5198534	0					
ANR	5198541	ArgumentList	gs_error_invalidfileaccess		5198534	1					
ANR	5198542	Argument	gs_error_invalidfileaccess		5198534	0					
ANR	5198543	Identifier	gs_error_invalidfileaccess		5198534	0					
ANR	5198544	ReturnType	int		5198534	1					
ANR	5198545	Identifier	iodev_no_rename_file		5198534	2					
ANR	5198546	ParameterList	"gx_io_device * iodev , const char * from , const char * to"		5198534	3					
ANR	5198547	Parameter	gx_io_device * iodev	248:21:7659:7678	5198534	0	True				
ANR	5198548	ParameterType	gx_io_device *		5198534	0					
ANR	5198549	Identifier	iodev		5198534	1					
ANR	5198550	Parameter	const char * from	248:43:7681:7696	5198534	1	True				
ANR	5198551	ParameterType	const char *		5198534	0					
ANR	5198552	Identifier	from		5198534	1					
ANR	5198553	Parameter	const char * to	248:61:7699:7712	5198534	2	True				
ANR	5198554	ParameterType	const char *		5198534	0					
ANR	5198555	Identifier	to		5198534	1					
ANR	5198556	CFGEntryNode	ENTRY		5198534		True				
ANR	5198557	CFGExitNode	EXIT		5198534		True				
ANR	5198558	Symbol	iodev		5198534						
ANR	5198559	Symbol	from		5198534						
ANR	5198560	Symbol	to		5198534						
ANR	5198561	Symbol	gs_error_invalidfileaccess		5198534						
ANR	5198562	Function	iodev_no_file_status	253:0:7766:7900							
ANR	5198563	FunctionDef	"iodev_no_file_status (gx_io_device * iodev , const char * fname , struct stat * pstat)"		5198562	0					
ANR	5198564	CompoundStatement		255:0:7852:7900	5198562	0					
ANR	5198565	ExpressionStatement	return_error ( gs_error_undefinedfilename )	256:4:7858:7898	5198562	0	True				
ANR	5198566	CallExpression	return_error ( gs_error_undefinedfilename )		5198562	0					
ANR	5198567	Callee	return_error		5198562	0					
ANR	5198568	Identifier	return_error		5198562	0					
ANR	5198569	ArgumentList	gs_error_undefinedfilename		5198562	1					
ANR	5198570	Argument	gs_error_undefinedfilename		5198562	0					
ANR	5198571	Identifier	gs_error_undefinedfilename		5198562	0					
ANR	5198572	ReturnType	int		5198562	1					
ANR	5198573	Identifier	iodev_no_file_status		5198562	2					
ANR	5198574	ParameterList	"gx_io_device * iodev , const char * fname , struct stat * pstat"		5198562	3					
ANR	5198575	Parameter	gx_io_device * iodev	254:21:7791:7810	5198562	0	True				
ANR	5198576	ParameterType	gx_io_device *		5198562	0					
ANR	5198577	Identifier	iodev		5198562	1					
ANR	5198578	Parameter	const char * fname	254:43:7813:7829	5198562	1	True				
ANR	5198579	ParameterType	const char *		5198562	0					
ANR	5198580	Identifier	fname		5198562	1					
ANR	5198581	Parameter	struct stat * pstat	254:62:7832:7849	5198562	2	True				
ANR	5198582	ParameterType	struct stat *		5198562	0					
ANR	5198583	Identifier	pstat		5198562	1					
ANR	5198584	CFGEntryNode	ENTRY		5198562		True				
ANR	5198585	CFGExitNode	EXIT		5198562		True				
ANR	5198586	Symbol	fname		5198562						
ANR	5198587	Symbol	iodev		5198562						
ANR	5198588	Symbol	pstat		5198562						
ANR	5198589	Symbol	gs_error_undefinedfilename		5198562						
ANR	5198590	Function	iodev_no_enumerate_files	259:0:7903:8058							
ANR	5198591	FunctionDef	"iodev_no_enumerate_files (gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * memory)"		5198590	0					
ANR	5198592	CompoundStatement		262:0:8039:8058	5198590	0					
ANR	5198593	ReturnStatement	return NULL ;	263:4:8045:8056	5198590	0	True				
ANR	5198594	Identifier	NULL		5198590	0					
ANR	5198595	ReturnType	file_enum *		5198590	1					
ANR	5198596	Identifier	iodev_no_enumerate_files		5198590	2					
ANR	5198597	ParameterList	"gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * memory"		5198590	3					
ANR	5198598	Parameter	gx_io_device * iodev	260:25:7940:7959	5198590	0	True				
ANR	5198599	ParameterType	gx_io_device *		5198590	0					
ANR	5198600	Identifier	iodev		5198590	1					
ANR	5198601	Parameter	const char * pat	260:47:7962:7976	5198590	1	True				
ANR	5198602	ParameterType	const char *		5198590	0					
ANR	5198603	Identifier	pat		5198590	1					
ANR	5198604	Parameter	uint patlen	260:64:7979:7989	5198590	2	True				
ANR	5198605	ParameterType	uint		5198590	0					
ANR	5198606	Identifier	patlen		5198590	1					
ANR	5198607	Parameter	gs_memory_t * memory	261:25:8017:8036	5198590	3	True				
ANR	5198608	ParameterType	gs_memory_t *		5198590	0					
ANR	5198609	Identifier	memory		5198590	1					
ANR	5198610	CFGEntryNode	ENTRY		5198590		True				
ANR	5198611	CFGExitNode	EXIT		5198590		True				
ANR	5198612	Symbol	pat		5198590						
ANR	5198613	Symbol	memory		5198590						
ANR	5198614	Symbol	NULL		5198590						
ANR	5198615	Symbol	iodev		5198590						
ANR	5198616	Symbol	patlen		5198590						
ANR	5198617	Function	iodev_no_get_params	266:0:8061:8146							
ANR	5198618	FunctionDef	"iodev_no_get_params (gx_io_device * iodev , gs_param_list * plist)"		5198617	0					
ANR	5198619	CompoundStatement		268:0:8130:8146	5198617	0					
ANR	5198620	ReturnStatement	return 0 ;	269:4:8136:8144	5198617	0	True				
ANR	5198621	PrimaryExpression	0		5198617	0					
ANR	5198622	ReturnType	int		5198617	1					
ANR	5198623	Identifier	iodev_no_get_params		5198617	2					
ANR	5198624	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		5198617	3					
ANR	5198625	Parameter	gx_io_device * iodev	267:20:8085:8104	5198617	0	True				
ANR	5198626	ParameterType	gx_io_device *		5198617	0					
ANR	5198627	Identifier	iodev		5198617	1					
ANR	5198628	Parameter	gs_param_list * plist	267:42:8107:8127	5198617	1	True				
ANR	5198629	ParameterType	gs_param_list *		5198617	0					
ANR	5198630	Identifier	plist		5198617	1					
ANR	5198631	CFGEntryNode	ENTRY		5198617		True				
ANR	5198632	CFGExitNode	EXIT		5198617		True				
ANR	5198633	Symbol	plist		5198617						
ANR	5198634	Symbol	iodev		5198617						
ANR	5198635	Function	iodev_no_put_params	272:0:8149:8252							
ANR	5198636	FunctionDef	"iodev_no_put_params (gx_io_device * iodev , gs_param_list * plist)"		5198635	0					
ANR	5198637	CompoundStatement		274:0:8218:8252	5198635	0					
ANR	5198638	ReturnStatement	return param_commit ( plist ) ;	275:4:8224:8250	5198635	0	True				
ANR	5198639	CallExpression	param_commit ( plist )		5198635	0					
ANR	5198640	Callee	param_commit		5198635	0					
ANR	5198641	Identifier	param_commit		5198635	0					
ANR	5198642	ArgumentList	plist		5198635	1					
ANR	5198643	Argument	plist		5198635	0					
ANR	5198644	Identifier	plist		5198635	0					
ANR	5198645	ReturnType	int		5198635	1					
ANR	5198646	Identifier	iodev_no_put_params		5198635	2					
ANR	5198647	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		5198635	3					
ANR	5198648	Parameter	gx_io_device * iodev	273:20:8173:8192	5198635	0	True				
ANR	5198649	ParameterType	gx_io_device *		5198635	0					
ANR	5198650	Identifier	iodev		5198635	1					
ANR	5198651	Parameter	gs_param_list * plist	273:42:8195:8215	5198635	1	True				
ANR	5198652	ParameterType	gs_param_list *		5198635	0					
ANR	5198653	Identifier	plist		5198635	1					
ANR	5198654	CFGEntryNode	ENTRY		5198635		True				
ANR	5198655	CFGExitNode	EXIT		5198635		True				
ANR	5198656	Symbol	plist		5198635						
ANR	5198657	Symbol	iodev		5198635						
ANR	5198658	Symbol	param_commit		5198635						
ANR	5198659	Function	iodev_os_gp_fopen	281:0:8328:8690							
ANR	5198660	FunctionDef	"iodev_os_gp_fopen (gx_io_device * iodev , const char * fname , const char * access , FILE * * pfile , char * rfname , uint rnamelen)"		5198659	0					
ANR	5198661	CompoundStatement		284:0:8470:8690	5198659	0					
ANR	5198662	ExpressionStatement	errno = 0	285:4:8476:8485	5198659	0	True				
ANR	5198663	AssignmentExpression	errno = 0		5198659	0		=			
ANR	5198664	Identifier	errno		5198659	0					
ANR	5198665	PrimaryExpression	0		5198659	1					
ANR	5198666	ExpressionStatement	"* pfile = gp_fopen ( fname , access )"	286:4:8491:8523	5198659	1	True				
ANR	5198667	AssignmentExpression	"* pfile = gp_fopen ( fname , access )"		5198659	0		=			
ANR	5198668	UnaryOperationExpression	* pfile		5198659	0					
ANR	5198669	UnaryOperator	*		5198659	0					
ANR	5198670	Identifier	pfile		5198659	1					
ANR	5198671	CallExpression	"gp_fopen ( fname , access )"		5198659	1					
ANR	5198672	Callee	gp_fopen		5198659	0					
ANR	5198673	Identifier	gp_fopen		5198659	0					
ANR	5198674	ArgumentList	fname		5198659	1					
ANR	5198675	Argument	fname		5198659	0					
ANR	5198676	Identifier	fname		5198659	0					
ANR	5198677	Argument	access		5198659	1					
ANR	5198678	Identifier	access		5198659	0					
ANR	5198679	IfStatement	if ( * pfile == NULL )		5198659	2					
ANR	5198680	Condition	* pfile == NULL	287:8:8533:8546	5198659	0	True				
ANR	5198681	EqualityExpression	* pfile == NULL		5198659	0		==			
ANR	5198682	UnaryOperationExpression	* pfile		5198659	0					
ANR	5198683	UnaryOperator	*		5198659	0					
ANR	5198684	Identifier	pfile		5198659	1					
ANR	5198685	Identifier	NULL		5198659	1					
ANR	5198686	ExpressionStatement	return_error ( gs_fopen_errno_to_code ( errno ) )	288:8:8557:8600	5198659	1	True				
ANR	5198687	CallExpression	return_error ( gs_fopen_errno_to_code ( errno ) )		5198659	0					
ANR	5198688	Callee	return_error		5198659	0					
ANR	5198689	Identifier	return_error		5198659	0					
ANR	5198690	ArgumentList	gs_fopen_errno_to_code ( errno )		5198659	1					
ANR	5198691	Argument	gs_fopen_errno_to_code ( errno )		5198659	0					
ANR	5198692	CallExpression	gs_fopen_errno_to_code ( errno )		5198659	0					
ANR	5198693	Callee	gs_fopen_errno_to_code		5198659	0					
ANR	5198694	Identifier	gs_fopen_errno_to_code		5198659	0					
ANR	5198695	ArgumentList	errno		5198659	1					
ANR	5198696	Argument	errno		5198659	0					
ANR	5198697	Identifier	errno		5198659	0					
ANR	5198698	IfStatement	if ( rfname != NULL && rfname != fname )		5198659	3					
ANR	5198699	Condition	rfname != NULL && rfname != fname	289:8:8610:8642	5198659	0	True				
ANR	5198700	AndExpression	rfname != NULL && rfname != fname		5198659	0		&&			
ANR	5198701	EqualityExpression	rfname != NULL		5198659	0		!=			
ANR	5198702	Identifier	rfname		5198659	0					
ANR	5198703	Identifier	NULL		5198659	1					
ANR	5198704	EqualityExpression	rfname != fname		5198659	1		!=			
ANR	5198705	Identifier	rfname		5198659	0					
ANR	5198706	Identifier	fname		5198659	1					
ANR	5198707	ExpressionStatement	"strcpy ( rfname , fname )"	290:8:8653:8674	5198659	1	True				
ANR	5198708	CallExpression	"strcpy ( rfname , fname )"		5198659	0					
ANR	5198709	Callee	strcpy		5198659	0					
ANR	5198710	Identifier	strcpy		5198659	0					
ANR	5198711	ArgumentList	rfname		5198659	1					
ANR	5198712	Argument	rfname		5198659	0					
ANR	5198713	Identifier	rfname		5198659	0					
ANR	5198714	Argument	fname		5198659	1					
ANR	5198715	Identifier	fname		5198659	0					
ANR	5198716	ReturnStatement	return 0 ;	291:4:8680:8688	5198659	4	True				
ANR	5198717	PrimaryExpression	0		5198659	0					
ANR	5198718	ReturnType	int		5198659	1					
ANR	5198719	Identifier	iodev_os_gp_fopen		5198659	2					
ANR	5198720	ParameterList	"gx_io_device * iodev , const char * fname , const char * access , FILE * * pfile , char * rfname , uint rnamelen"		5198659	3					
ANR	5198721	Parameter	gx_io_device * iodev	282:18:8350:8369	5198659	0	True				
ANR	5198722	ParameterType	gx_io_device *		5198659	0					
ANR	5198723	Identifier	iodev		5198659	1					
ANR	5198724	Parameter	const char * fname	282:40:8372:8388	5198659	1	True				
ANR	5198725	ParameterType	const char *		5198659	0					
ANR	5198726	Identifier	fname		5198659	1					
ANR	5198727	Parameter	const char * access	282:59:8391:8408	5198659	2	True				
ANR	5198728	ParameterType	const char *		5198659	0					
ANR	5198729	Identifier	access		5198659	1					
ANR	5198730	Parameter	FILE * * pfile	283:15:8426:8438	5198659	3	True				
ANR	5198731	ParameterType	FILE * *		5198659	0					
ANR	5198732	Identifier	pfile		5198659	1					
ANR	5198733	Parameter	char * rfname	283:30:8441:8452	5198659	4	True				
ANR	5198734	ParameterType	char *		5198659	0					
ANR	5198735	Identifier	rfname		5198659	1					
ANR	5198736	Parameter	uint rnamelen	283:44:8455:8467	5198659	5	True				
ANR	5198737	ParameterType	uint		5198659	0					
ANR	5198738	Identifier	rnamelen		5198659	1					
ANR	5198739	CFGEntryNode	ENTRY		5198659		True				
ANR	5198740	CFGExitNode	EXIT		5198659		True				
ANR	5198741	Symbol	fname		5198659						
ANR	5198742	Symbol	rnamelen		5198659						
ANR	5198743	Symbol	errno		5198659						
ANR	5198744	Symbol	access		5198659						
ANR	5198745	Symbol	NULL		5198659						
ANR	5198746	Symbol	iodev		5198659						
ANR	5198747	Symbol	pfile		5198659						
ANR	5198748	Symbol	rfname		5198659						
ANR	5198749	Symbol	gs_fopen_errno_to_code		5198659						
ANR	5198750	Symbol	gp_fopen		5198659						
ANR	5198751	Symbol	* pfile		5198659						
ANR	5198752	Function	iodev_os_fclose	295:0:8741:8830							
ANR	5198753	FunctionDef	"iodev_os_fclose (gx_io_device * iodev , FILE * file)"		5198752	0					
ANR	5198754	CompoundStatement		297:0:8796:8830	5198752	0					
ANR	5198755	ExpressionStatement	fclose ( file )	298:4:8802:8814	5198752	0	True				
ANR	5198756	CallExpression	fclose ( file )		5198752	0					
ANR	5198757	Callee	fclose		5198752	0					
ANR	5198758	Identifier	fclose		5198752	0					
ANR	5198759	ArgumentList	file		5198752	1					
ANR	5198760	Argument	file		5198752	0					
ANR	5198761	Identifier	file		5198752	0					
ANR	5198762	ReturnStatement	return 0 ;	299:4:8820:8828	5198752	1	True				
ANR	5198763	PrimaryExpression	0		5198752	0					
ANR	5198764	ReturnType	int		5198752	1					
ANR	5198765	Identifier	iodev_os_fclose		5198752	2					
ANR	5198766	ParameterList	"gx_io_device * iodev , FILE * file"		5198752	3					
ANR	5198767	Parameter	gx_io_device * iodev	296:16:8761:8780	5198752	0	True				
ANR	5198768	ParameterType	gx_io_device *		5198752	0					
ANR	5198769	Identifier	iodev		5198752	1					
ANR	5198770	Parameter	FILE * file	296:38:8783:8793	5198752	1	True				
ANR	5198771	ParameterType	FILE *		5198752	0					
ANR	5198772	Identifier	file		5198752	1					
ANR	5198773	CFGEntryNode	ENTRY		5198752		True				
ANR	5198774	CFGExitNode	EXIT		5198752		True				
ANR	5198775	Symbol	file		5198752						
ANR	5198776	Symbol	iodev		5198752						
ANR	5198777	Function	os_delete	302:0:8833:8953							
ANR	5198778	FunctionDef	"os_delete (gx_io_device * iodev , const char * fname)"		5198777	0					
ANR	5198779	CompoundStatement		304:0:8895:8953	5198777	0					
ANR	5198780	ReturnStatement	return ( unlink ( fname ) == 0 ? 0 : gs_error_ioerror ) ;	305:4:8901:8951	5198777	0	True				
ANR	5198781	ConditionalExpression	unlink ( fname ) == 0 ? 0 : gs_error_ioerror		5198777	0					
ANR	5198782	Condition	unlink ( fname ) == 0		5198777	0					
ANR	5198783	EqualityExpression	unlink ( fname ) == 0		5198777	0		==			
ANR	5198784	CallExpression	unlink ( fname )		5198777	0					
ANR	5198785	Callee	unlink		5198777	0					
ANR	5198786	Identifier	unlink		5198777	0					
ANR	5198787	ArgumentList	fname		5198777	1					
ANR	5198788	Argument	fname		5198777	0					
ANR	5198789	Identifier	fname		5198777	0					
ANR	5198790	PrimaryExpression	0		5198777	1					
ANR	5198791	PrimaryExpression	0		5198777	1					
ANR	5198792	Identifier	gs_error_ioerror		5198777	2					
ANR	5198793	ReturnType	static int		5198777	1					
ANR	5198794	Identifier	os_delete		5198777	2					
ANR	5198795	ParameterList	"gx_io_device * iodev , const char * fname"		5198777	3					
ANR	5198796	Parameter	gx_io_device * iodev	303:10:8854:8873	5198777	0	True				
ANR	5198797	ParameterType	gx_io_device *		5198777	0					
ANR	5198798	Identifier	iodev		5198777	1					
ANR	5198799	Parameter	const char * fname	303:32:8876:8892	5198777	1	True				
ANR	5198800	ParameterType	const char *		5198777	0					
ANR	5198801	Identifier	fname		5198777	1					
ANR	5198802	CFGEntryNode	ENTRY		5198777		True				
ANR	5198803	CFGExitNode	EXIT		5198777		True				
ANR	5198804	Symbol	fname		5198777						
ANR	5198805	Symbol	iodev		5198777						
ANR	5198806	Symbol	unlink		5198777						
ANR	5198807	Symbol	gs_error_ioerror		5198777						
ANR	5198808	Function	os_rename	308:0:8956:9094							
ANR	5198809	FunctionDef	"os_rename (gx_io_device * iodev , const char * from , const char * to)"		5198808	0					
ANR	5198810	CompoundStatement		310:0:9033:9094	5198808	0					
ANR	5198811	ReturnStatement	"return ( rename ( from , to ) == 0 ? 0 : gs_error_ioerror ) ;"	311:4:9039:9092	5198808	0	True				
ANR	5198812	ConditionalExpression	"rename ( from , to ) == 0 ? 0 : gs_error_ioerror"		5198808	0					
ANR	5198813	Condition	"rename ( from , to ) == 0"		5198808	0					
ANR	5198814	EqualityExpression	"rename ( from , to ) == 0"		5198808	0		==			
ANR	5198815	CallExpression	"rename ( from , to )"		5198808	0					
ANR	5198816	Callee	rename		5198808	0					
ANR	5198817	Identifier	rename		5198808	0					
ANR	5198818	ArgumentList	from		5198808	1					
ANR	5198819	Argument	from		5198808	0					
ANR	5198820	Identifier	from		5198808	0					
ANR	5198821	Argument	to		5198808	1					
ANR	5198822	Identifier	to		5198808	0					
ANR	5198823	PrimaryExpression	0		5198808	1					
ANR	5198824	PrimaryExpression	0		5198808	1					
ANR	5198825	Identifier	gs_error_ioerror		5198808	2					
ANR	5198826	ReturnType	static int		5198808	1					
ANR	5198827	Identifier	os_rename		5198808	2					
ANR	5198828	ParameterList	"gx_io_device * iodev , const char * from , const char * to"		5198808	3					
ANR	5198829	Parameter	gx_io_device * iodev	309:10:8977:8996	5198808	0	True				
ANR	5198830	ParameterType	gx_io_device *		5198808	0					
ANR	5198831	Identifier	iodev		5198808	1					
ANR	5198832	Parameter	const char * from	309:32:8999:9014	5198808	1	True				
ANR	5198833	ParameterType	const char *		5198808	0					
ANR	5198834	Identifier	from		5198808	1					
ANR	5198835	Parameter	const char * to	309:50:9017:9030	5198808	2	True				
ANR	5198836	ParameterType	const char *		5198808	0					
ANR	5198837	Identifier	to		5198808	1					
ANR	5198838	CFGEntryNode	ENTRY		5198808		True				
ANR	5198839	CFGExitNode	EXIT		5198808		True				
ANR	5198840	Symbol	iodev		5198808						
ANR	5198841	Symbol	rename		5198808						
ANR	5198842	Symbol	gs_error_ioerror		5198808						
ANR	5198843	Symbol	from		5198808						
ANR	5198844	Symbol	to		5198808						
ANR	5198845	Function	os_status	314:0:9097:9387							
ANR	5198846	FunctionDef	"os_status (gx_io_device * iodev , const char * fname , struct stat * pstat)"		5198845	0					
ANR	5198847	CompoundStatement		316:0:9179:9387	5198845	0					
ANR	5198848	ReturnStatement	"return ( gp_stat ( ( char * ) fname , pstat ) < 0 ? gs_error_undefinedfilename : 0 ) ;"	318:4:9310:9385	5198845	0	True				
ANR	5198849	ConditionalExpression	"gp_stat ( ( char * ) fname , pstat ) < 0 ? gs_error_undefinedfilename : 0"		5198845	0					
ANR	5198850	Condition	"gp_stat ( ( char * ) fname , pstat ) < 0"		5198845	0					
ANR	5198851	RelationalExpression	"gp_stat ( ( char * ) fname , pstat ) < 0"		5198845	0		<			
ANR	5198852	CallExpression	"gp_stat ( ( char * ) fname , pstat )"		5198845	0					
ANR	5198853	Callee	gp_stat		5198845	0					
ANR	5198854	Identifier	gp_stat		5198845	0					
ANR	5198855	ArgumentList	( char * ) fname		5198845	1					
ANR	5198856	Argument	( char * ) fname		5198845	0					
ANR	5198857	CastExpression	( char * ) fname		5198845	0					
ANR	5198858	CastTarget	char *		5198845	0					
ANR	5198859	Identifier	fname		5198845	1					
ANR	5198860	Argument	pstat		5198845	1					
ANR	5198861	Identifier	pstat		5198845	0					
ANR	5198862	PrimaryExpression	0		5198845	1					
ANR	5198863	Identifier	gs_error_undefinedfilename		5198845	1					
ANR	5198864	PrimaryExpression	0		5198845	2					
ANR	5198865	ReturnType	static int		5198845	1					
ANR	5198866	Identifier	os_status		5198845	2					
ANR	5198867	ParameterList	"gx_io_device * iodev , const char * fname , struct stat * pstat"		5198845	3					
ANR	5198868	Parameter	gx_io_device * iodev	315:10:9118:9137	5198845	0	True				
ANR	5198869	ParameterType	gx_io_device *		5198845	0					
ANR	5198870	Identifier	iodev		5198845	1					
ANR	5198871	Parameter	const char * fname	315:32:9140:9156	5198845	1	True				
ANR	5198872	ParameterType	const char *		5198845	0					
ANR	5198873	Identifier	fname		5198845	1					
ANR	5198874	Parameter	struct stat * pstat	315:51:9159:9176	5198845	2	True				
ANR	5198875	ParameterType	struct stat *		5198845	0					
ANR	5198876	Identifier	pstat		5198845	1					
ANR	5198877	CFGEntryNode	ENTRY		5198845		True				
ANR	5198878	CFGExitNode	EXIT		5198845		True				
ANR	5198879	Symbol	fname		5198845						
ANR	5198880	Symbol	iodev		5198845						
ANR	5198881	Symbol	pstat		5198845						
ANR	5198882	Symbol	gs_error_undefinedfilename		5198845						
ANR	5198883	Symbol	gp_stat		5198845						
ANR	5198884	Function	os_enumerate	321:0:9390:9562							
ANR	5198885	FunctionDef	"os_enumerate (gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * mem)"		5198884	0					
ANR	5198886	CompoundStatement		324:0:9506:9562	5198884	0					
ANR	5198887	ReturnStatement	"return gp_enumerate_files_init ( pat , patlen , mem ) ;"	325:4:9512:9560	5198884	0	True				
ANR	5198888	CallExpression	"gp_enumerate_files_init ( pat , patlen , mem )"		5198884	0					
ANR	5198889	Callee	gp_enumerate_files_init		5198884	0					
ANR	5198890	Identifier	gp_enumerate_files_init		5198884	0					
ANR	5198891	ArgumentList	pat		5198884	1					
ANR	5198892	Argument	pat		5198884	0					
ANR	5198893	Identifier	pat		5198884	0					
ANR	5198894	Argument	patlen		5198884	1					
ANR	5198895	Identifier	patlen		5198884	0					
ANR	5198896	Argument	mem		5198884	2					
ANR	5198897	Identifier	mem		5198884	0					
ANR	5198898	ReturnType	static file_enum *		5198884	1					
ANR	5198899	Identifier	os_enumerate		5198884	2					
ANR	5198900	ParameterList	"gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * mem"		5198884	3					
ANR	5198901	Parameter	gx_io_device * iodev	322:13:9422:9441	5198884	0	True				
ANR	5198902	ParameterType	gx_io_device *		5198884	0					
ANR	5198903	Identifier	iodev		5198884	1					
ANR	5198904	Parameter	const char * pat	322:35:9444:9458	5198884	1	True				
ANR	5198905	ParameterType	const char *		5198884	0					
ANR	5198906	Identifier	pat		5198884	1					
ANR	5198907	Parameter	uint patlen	322:52:9461:9471	5198884	2	True				
ANR	5198908	ParameterType	uint		5198884	0					
ANR	5198909	Identifier	patlen		5198884	1					
ANR	5198910	Parameter	gs_memory_t * mem	323:13:9487:9503	5198884	3	True				
ANR	5198911	ParameterType	gs_memory_t *		5198884	0					
ANR	5198912	Identifier	mem		5198884	1					
ANR	5198913	CFGEntryNode	ENTRY		5198884		True				
ANR	5198914	CFGExitNode	EXIT		5198884		True				
ANR	5198915	Symbol	gp_enumerate_files_init		5198884						
ANR	5198916	Symbol	pat		5198884						
ANR	5198917	Symbol	iodev		5198884						
ANR	5198918	Symbol	mem		5198884						
ANR	5198919	Symbol	patlen		5198884						
ANR	5198920	Function	os_get_params	328:0:9565:10787							
ANR	5198921	FunctionDef	"os_get_params (gx_io_device * iodev , gs_param_list * plist)"		5198920	0					
ANR	5198922	CompoundStatement		330:0:9635:10787	5198920	0					
ANR	5198923	IdentifierDeclStatement	int code ;	331:4:9641:9649	5198920	0	True				
ANR	5198924	IdentifierDecl	code		5198920	0					
ANR	5198925	IdentifierDeclType	int		5198920	0					
ANR	5198926	Identifier	code		5198920	1					
ANR	5198927	IdentifierDeclStatement	"int i0 = 0 , i2 = 2 ;"	332:4:9655:9673	5198920	1	True				
ANR	5198928	IdentifierDecl	i0 = 0		5198920	0					
ANR	5198929	IdentifierDeclType	int		5198920	0					
ANR	5198930	Identifier	i0		5198920	1					
ANR	5198931	AssignmentExpression	i0 = 0		5198920	2		=			
ANR	5198932	Identifier	i0		5198920	0					
ANR	5198933	PrimaryExpression	0		5198920	1					
ANR	5198934	IdentifierDecl	i2 = 2		5198920	1					
ANR	5198935	IdentifierDeclType	int		5198920	0					
ANR	5198936	Identifier	i2		5198920	1					
ANR	5198937	AssignmentExpression	i2 = 2		5198920	2		=			
ANR	5198938	Identifier	i2		5198920	0					
ANR	5198939	PrimaryExpression	2		5198920	1					
ANR	5198940	IdentifierDeclStatement	"bool btrue = true , bfalse = false ;"	333:4:9679:9712	5198920	2	True				
ANR	5198941	IdentifierDecl	btrue = true		5198920	0					
ANR	5198942	IdentifierDeclType	bool		5198920	0					
ANR	5198943	Identifier	btrue		5198920	1					
ANR	5198944	AssignmentExpression	btrue = true		5198920	2		=			
ANR	5198945	Identifier	true		5198920	0					
ANR	5198946	Identifier	true		5198920	1					
ANR	5198947	IdentifierDecl	bfalse = false		5198920	1					
ANR	5198948	IdentifierDeclType	bool		5198920	0					
ANR	5198949	Identifier	bfalse		5198920	1					
ANR	5198950	AssignmentExpression	bfalse = false		5198920	2		=			
ANR	5198951	Identifier	false		5198920	0					
ANR	5198952	Identifier	false		5198920	1					
ANR	5198953	IdentifierDeclStatement	int BlockSize ;	334:4:9718:9731	5198920	3	True				
ANR	5198954	IdentifierDecl	BlockSize		5198920	0					
ANR	5198955	IdentifierDeclType	int		5198920	0					
ANR	5198956	Identifier	BlockSize		5198920	1					
ANR	5198957	IdentifierDeclStatement	"long Free , LogicalSize ;"	335:4:9737:9759	5198920	4	True				
ANR	5198958	IdentifierDecl	Free		5198920	0					
ANR	5198959	IdentifierDeclType	long		5198920	0					
ANR	5198960	Identifier	Free		5198920	1					
ANR	5198961	IdentifierDecl	LogicalSize		5198920	1					
ANR	5198962	IdentifierDeclType	long		5198920	0					
ANR	5198963	Identifier	LogicalSize		5198920	1					
ANR	5198964	ExpressionStatement	BlockSize = 1024	341:4:9910:9926	5198920	5	True				
ANR	5198965	AssignmentExpression	BlockSize = 1024		5198920	0		=			
ANR	5198966	Identifier	BlockSize		5198920	0					
ANR	5198967	PrimaryExpression	1024		5198920	1					
ANR	5198968	ExpressionStatement	LogicalSize = 2000000000 / BlockSize	342:4:9932:9968	5198920	6	True				
ANR	5198969	AssignmentExpression	LogicalSize = 2000000000 / BlockSize		5198920	0		=			
ANR	5198970	Identifier	LogicalSize		5198920	0					
ANR	5198971	MultiplicativeExpression	2000000000 / BlockSize		5198920	1		/			
ANR	5198972	PrimaryExpression	2000000000		5198920	0					
ANR	5198973	Identifier	BlockSize		5198920	1					
ANR	5198974	ExpressionStatement	Free = LogicalSize * 3 / 4	343:4:9991:10017	5198920	7	True				
ANR	5198975	AssignmentExpression	Free = LogicalSize * 3 / 4		5198920	0		=			
ANR	5198976	Identifier	Free		5198920	0					
ANR	5198977	MultiplicativeExpression	LogicalSize * 3 / 4		5198920	1		*			
ANR	5198978	Identifier	LogicalSize		5198920	0					
ANR	5198979	MultiplicativeExpression	3 / 4		5198920	1		/			
ANR	5198980	PrimaryExpression	3		5198920	0					
ANR	5198981	PrimaryExpression	4		5198920	1					
ANR	5198982	IfStatement	"if ( ( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0 )"		5198920	8					
ANR	5198983	Condition	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"	346:8:10058:10740	5198920	0	True				
ANR	5198984	OrExpression	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5198920	0		||			
ANR	5198985	RelationalExpression	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0"		5198920	0		<			
ANR	5198986	AssignmentExpression	"code = param_write_bool ( plist , ""HasNames"" , & btrue )"		5198920	0		=			
ANR	5198987	Identifier	code		5198920	0					
ANR	5198988	CallExpression	"param_write_bool ( plist , ""HasNames"" , & btrue )"		5198920	1					
ANR	5198989	Callee	param_write_bool		5198920	0					
ANR	5198990	Identifier	param_write_bool		5198920	0					
ANR	5198991	ArgumentList	plist		5198920	1					
ANR	5198992	Argument	plist		5198920	0					
ANR	5198993	Identifier	plist		5198920	0					
ANR	5198994	Argument	"""HasNames"""		5198920	1					
ANR	5198995	PrimaryExpression	"""HasNames"""		5198920	0					
ANR	5198996	Argument	& btrue		5198920	2					
ANR	5198997	UnaryOperationExpression	& btrue		5198920	0					
ANR	5198998	UnaryOperator	&		5198920	0					
ANR	5198999	Identifier	btrue		5198920	1					
ANR	5199000	PrimaryExpression	0		5198920	1					
ANR	5199001	OrExpression	"( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5198920	1		||			
ANR	5199002	RelationalExpression	"( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0"		5198920	0		<			
ANR	5199003	AssignmentExpression	"code = param_write_int ( plist , ""BlockSize"" , & BlockSize )"		5198920	0		=			
ANR	5199004	Identifier	code		5198920	0					
ANR	5199005	CallExpression	"param_write_int ( plist , ""BlockSize"" , & BlockSize )"		5198920	1					
ANR	5199006	Callee	param_write_int		5198920	0					
ANR	5199007	Identifier	param_write_int		5198920	0					
ANR	5199008	ArgumentList	plist		5198920	1					
ANR	5199009	Argument	plist		5198920	0					
ANR	5199010	Identifier	plist		5198920	0					
ANR	5199011	Argument	"""BlockSize"""		5198920	1					
ANR	5199012	PrimaryExpression	"""BlockSize"""		5198920	0					
ANR	5199013	Argument	& BlockSize		5198920	2					
ANR	5199014	UnaryOperationExpression	& BlockSize		5198920	0					
ANR	5199015	UnaryOperator	&		5198920	0					
ANR	5199016	Identifier	BlockSize		5198920	1					
ANR	5199017	PrimaryExpression	0		5198920	1					
ANR	5199018	OrExpression	"( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5198920	1		||			
ANR	5199019	RelationalExpression	"( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0"		5198920	0		<			
ANR	5199020	AssignmentExpression	"code = param_write_long ( plist , ""Free"" , & Free )"		5198920	0		=			
ANR	5199021	Identifier	code		5198920	0					
ANR	5199022	CallExpression	"param_write_long ( plist , ""Free"" , & Free )"		5198920	1					
ANR	5199023	Callee	param_write_long		5198920	0					
ANR	5199024	Identifier	param_write_long		5198920	0					
ANR	5199025	ArgumentList	plist		5198920	1					
ANR	5199026	Argument	plist		5198920	0					
ANR	5199027	Identifier	plist		5198920	0					
ANR	5199028	Argument	"""Free"""		5198920	1					
ANR	5199029	PrimaryExpression	"""Free"""		5198920	0					
ANR	5199030	Argument	& Free		5198920	2					
ANR	5199031	UnaryOperationExpression	& Free		5198920	0					
ANR	5199032	UnaryOperator	&		5198920	0					
ANR	5199033	Identifier	Free		5198920	1					
ANR	5199034	PrimaryExpression	0		5198920	1					
ANR	5199035	OrExpression	"( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5198920	1		||			
ANR	5199036	RelationalExpression	"( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0"		5198920	0		<			
ANR	5199037	AssignmentExpression	"code = param_write_int ( plist , ""InitializeAction"" , & i0 )"		5198920	0		=			
ANR	5199038	Identifier	code		5198920	0					
ANR	5199039	CallExpression	"param_write_int ( plist , ""InitializeAction"" , & i0 )"		5198920	1					
ANR	5199040	Callee	param_write_int		5198920	0					
ANR	5199041	Identifier	param_write_int		5198920	0					
ANR	5199042	ArgumentList	plist		5198920	1					
ANR	5199043	Argument	plist		5198920	0					
ANR	5199044	Identifier	plist		5198920	0					
ANR	5199045	Argument	"""InitializeAction"""		5198920	1					
ANR	5199046	PrimaryExpression	"""InitializeAction"""		5198920	0					
ANR	5199047	Argument	& i0		5198920	2					
ANR	5199048	UnaryOperationExpression	& i0		5198920	0					
ANR	5199049	UnaryOperator	&		5198920	0					
ANR	5199050	Identifier	i0		5198920	1					
ANR	5199051	PrimaryExpression	0		5198920	1					
ANR	5199052	OrExpression	"( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5198920	1		||			
ANR	5199053	RelationalExpression	"( code = param_write_bool ( plist , ""Mounted"" , & btrue ) ) < 0"		5198920	0		<			
ANR	5199054	AssignmentExpression	"code = param_write_bool ( plist , ""Mounted"" , & btrue )"		5198920	0		=			
ANR	5199055	Identifier	code		5198920	0					
ANR	5199056	CallExpression	"param_write_bool ( plist , ""Mounted"" , & btrue )"		5198920	1					
ANR	5199057	Callee	param_write_bool		5198920	0					
ANR	5199058	Identifier	param_write_bool		5198920	0					
ANR	5199059	ArgumentList	plist		5198920	1					
ANR	5199060	Argument	plist		5198920	0					
ANR	5199061	Identifier	plist		5198920	0					
ANR	5199062	Argument	"""Mounted"""		5198920	1					
ANR	5199063	PrimaryExpression	"""Mounted"""		5198920	0					
ANR	5199064	Argument	& btrue		5198920	2					
ANR	5199065	UnaryOperationExpression	& btrue		5198920	0					
ANR	5199066	UnaryOperator	&		5198920	0					
ANR	5199067	Identifier	btrue		5198920	1					
ANR	5199068	PrimaryExpression	0		5198920	1					
ANR	5199069	OrExpression	"( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5198920	1		||			
ANR	5199070	RelationalExpression	"( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0"		5198920	0		<			
ANR	5199071	AssignmentExpression	"code = param_write_bool ( plist , ""Removable"" , & bfalse )"		5198920	0		=			
ANR	5199072	Identifier	code		5198920	0					
ANR	5199073	CallExpression	"param_write_bool ( plist , ""Removable"" , & bfalse )"		5198920	1					
ANR	5199074	Callee	param_write_bool		5198920	0					
ANR	5199075	Identifier	param_write_bool		5198920	0					
ANR	5199076	ArgumentList	plist		5198920	1					
ANR	5199077	Argument	plist		5198920	0					
ANR	5199078	Identifier	plist		5198920	0					
ANR	5199079	Argument	"""Removable"""		5198920	1					
ANR	5199080	PrimaryExpression	"""Removable"""		5198920	0					
ANR	5199081	Argument	& bfalse		5198920	2					
ANR	5199082	UnaryOperationExpression	& bfalse		5198920	0					
ANR	5199083	UnaryOperator	&		5198920	0					
ANR	5199084	Identifier	bfalse		5198920	1					
ANR	5199085	PrimaryExpression	0		5198920	1					
ANR	5199086	OrExpression	"( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5198920	1		||			
ANR	5199087	RelationalExpression	"( code = param_write_bool ( plist , ""Searchable"" , & btrue ) ) < 0"		5198920	0		<			
ANR	5199088	AssignmentExpression	"code = param_write_bool ( plist , ""Searchable"" , & btrue )"		5198920	0		=			
ANR	5199089	Identifier	code		5198920	0					
ANR	5199090	CallExpression	"param_write_bool ( plist , ""Searchable"" , & btrue )"		5198920	1					
ANR	5199091	Callee	param_write_bool		5198920	0					
ANR	5199092	Identifier	param_write_bool		5198920	0					
ANR	5199093	ArgumentList	plist		5198920	1					
ANR	5199094	Argument	plist		5198920	0					
ANR	5199095	Identifier	plist		5198920	0					
ANR	5199096	Argument	"""Searchable"""		5198920	1					
ANR	5199097	PrimaryExpression	"""Searchable"""		5198920	0					
ANR	5199098	Argument	& btrue		5198920	2					
ANR	5199099	UnaryOperationExpression	& btrue		5198920	0					
ANR	5199100	UnaryOperator	&		5198920	0					
ANR	5199101	Identifier	btrue		5198920	1					
ANR	5199102	PrimaryExpression	0		5198920	1					
ANR	5199103	OrExpression	"( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5198920	1		||			
ANR	5199104	RelationalExpression	"( code = param_write_int ( plist , ""SearchOrder"" , & i2 ) ) < 0"		5198920	0		<			
ANR	5199105	AssignmentExpression	"code = param_write_int ( plist , ""SearchOrder"" , & i2 )"		5198920	0		=			
ANR	5199106	Identifier	code		5198920	0					
ANR	5199107	CallExpression	"param_write_int ( plist , ""SearchOrder"" , & i2 )"		5198920	1					
ANR	5199108	Callee	param_write_int		5198920	0					
ANR	5199109	Identifier	param_write_int		5198920	0					
ANR	5199110	ArgumentList	plist		5198920	1					
ANR	5199111	Argument	plist		5198920	0					
ANR	5199112	Identifier	plist		5198920	0					
ANR	5199113	Argument	"""SearchOrder"""		5198920	1					
ANR	5199114	PrimaryExpression	"""SearchOrder"""		5198920	0					
ANR	5199115	Argument	& i2		5198920	2					
ANR	5199116	UnaryOperationExpression	& i2		5198920	0					
ANR	5199117	UnaryOperator	&		5198920	0					
ANR	5199118	Identifier	i2		5198920	1					
ANR	5199119	PrimaryExpression	0		5198920	1					
ANR	5199120	OrExpression	"( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5198920	1		||			
ANR	5199121	RelationalExpression	"( code = param_write_bool ( plist , ""Writeable"" , & btrue ) ) < 0"		5198920	0		<			
ANR	5199122	AssignmentExpression	"code = param_write_bool ( plist , ""Writeable"" , & btrue )"		5198920	0		=			
ANR	5199123	Identifier	code		5198920	0					
ANR	5199124	CallExpression	"param_write_bool ( plist , ""Writeable"" , & btrue )"		5198920	1					
ANR	5199125	Callee	param_write_bool		5198920	0					
ANR	5199126	Identifier	param_write_bool		5198920	0					
ANR	5199127	ArgumentList	plist		5198920	1					
ANR	5199128	Argument	plist		5198920	0					
ANR	5199129	Identifier	plist		5198920	0					
ANR	5199130	Argument	"""Writeable"""		5198920	1					
ANR	5199131	PrimaryExpression	"""Writeable"""		5198920	0					
ANR	5199132	Argument	& btrue		5198920	2					
ANR	5199133	UnaryOperationExpression	& btrue		5198920	0					
ANR	5199134	UnaryOperator	&		5198920	0					
ANR	5199135	Identifier	btrue		5198920	1					
ANR	5199136	PrimaryExpression	0		5198920	1					
ANR	5199137	RelationalExpression	"( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		5198920	1		<			
ANR	5199138	AssignmentExpression	"code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize )"		5198920	0		=			
ANR	5199139	Identifier	code		5198920	0					
ANR	5199140	CallExpression	"param_write_long ( plist , ""LogicalSize"" , & LogicalSize )"		5198920	1					
ANR	5199141	Callee	param_write_long		5198920	0					
ANR	5199142	Identifier	param_write_long		5198920	0					
ANR	5199143	ArgumentList	plist		5198920	1					
ANR	5199144	Argument	plist		5198920	0					
ANR	5199145	Identifier	plist		5198920	0					
ANR	5199146	Argument	"""LogicalSize"""		5198920	1					
ANR	5199147	PrimaryExpression	"""LogicalSize"""		5198920	0					
ANR	5199148	Argument	& LogicalSize		5198920	2					
ANR	5199149	UnaryOperationExpression	& LogicalSize		5198920	0					
ANR	5199150	UnaryOperator	&		5198920	0					
ANR	5199151	Identifier	LogicalSize		5198920	1					
ANR	5199152	PrimaryExpression	0		5198920	1					
ANR	5199153	ReturnStatement	return code ;	357:8:10760:10771	5198920	1	True				
ANR	5199154	Identifier	code		5198920	0					
ANR	5199155	ReturnStatement	return 0 ;	358:4:10777:10785	5198920	9	True				
ANR	5199156	PrimaryExpression	0		5198920	0					
ANR	5199157	ReturnType	static int		5198920	1					
ANR	5199158	Identifier	os_get_params		5198920	2					
ANR	5199159	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		5198920	3					
ANR	5199160	Parameter	gx_io_device * iodev	329:14:9590:9609	5198920	0	True				
ANR	5199161	ParameterType	gx_io_device *		5198920	0					
ANR	5199162	Identifier	iodev		5198920	1					
ANR	5199163	Parameter	gs_param_list * plist	329:36:9612:9632	5198920	1	True				
ANR	5199164	ParameterType	gs_param_list *		5198920	0					
ANR	5199165	Identifier	plist		5198920	1					
ANR	5199166	CFGEntryNode	ENTRY		5198920		True				
ANR	5199167	CFGExitNode	EXIT		5198920		True				
ANR	5199168	Symbol	& bfalse		5198920						
ANR	5199169	Symbol	& LogicalSize		5198920						
ANR	5199170	Symbol	code		5198920						
ANR	5199171	Symbol	LogicalSize		5198920						
ANR	5199172	Symbol	& BlockSize		5198920						
ANR	5199173	Symbol	i0		5198920						
ANR	5199174	Symbol	bfalse		5198920						
ANR	5199175	Symbol	false		5198920						
ANR	5199176	Symbol	i2		5198920						
ANR	5199177	Symbol	btrue		5198920						
ANR	5199178	Symbol	Free		5198920						
ANR	5199179	Symbol	& i0		5198920						
ANR	5199180	Symbol	param_write_bool		5198920						
ANR	5199181	Symbol	plist		5198920						
ANR	5199182	Symbol	& i2		5198920						
ANR	5199183	Symbol	iodev		5198920						
ANR	5199184	Symbol	& btrue		5198920						
ANR	5199185	Symbol	true		5198920						
ANR	5199186	Symbol	& Free		5198920						
ANR	5199187	Symbol	BlockSize		5198920						
ANR	5199188	Symbol	param_write_int		5198920						
ANR	5199189	Symbol	param_write_long		5198920						
ANR	5199190	Function	gs_getiodevice	364:0:10878:11224							
ANR	5199191	FunctionDef	"gs_getiodevice (const gs_memory_t * mem , int index)"		5199190	0					
ANR	5199192	CompoundStatement		366:0:10943:11224	5199190	0					
ANR	5199193	IdentifierDeclStatement	gs_lib_ctx_t * libctx = gs_lib_ctx_get_interp_instance ( mem ) ;	367:4:10949:11007	5199190	0	True				
ANR	5199194	IdentifierDecl	* libctx = gs_lib_ctx_get_interp_instance ( mem )		5199190	0					
ANR	5199195	IdentifierDeclType	gs_lib_ctx_t *		5199190	0					
ANR	5199196	Identifier	libctx		5199190	1					
ANR	5199197	AssignmentExpression	* libctx = gs_lib_ctx_get_interp_instance ( mem )		5199190	2		=			
ANR	5199198	Identifier	libctx		5199190	0					
ANR	5199199	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		5199190	1					
ANR	5199200	Callee	gs_lib_ctx_get_interp_instance		5199190	0					
ANR	5199201	Identifier	gs_lib_ctx_get_interp_instance		5199190	0					
ANR	5199202	ArgumentList	mem		5199190	1					
ANR	5199203	Argument	mem		5199190	0					
ANR	5199204	Identifier	mem		5199190	0					
ANR	5199205	IfStatement	if ( libctx == NULL || libctx -> io_device_table == NULL || index < 0 || index >= libctx -> io_device_table_count )		5199190	1					
ANR	5199206	Condition	libctx == NULL || libctx -> io_device_table == NULL || index < 0 || index >= libctx -> io_device_table_count	369:8:11018:11134	5199190	0	True				
ANR	5199207	OrExpression	libctx == NULL || libctx -> io_device_table == NULL || index < 0 || index >= libctx -> io_device_table_count		5199190	0		||			
ANR	5199208	EqualityExpression	libctx == NULL		5199190	0		==			
ANR	5199209	Identifier	libctx		5199190	0					
ANR	5199210	Identifier	NULL		5199190	1					
ANR	5199211	OrExpression	libctx -> io_device_table == NULL || index < 0 || index >= libctx -> io_device_table_count		5199190	1		||			
ANR	5199212	EqualityExpression	libctx -> io_device_table == NULL		5199190	0		==			
ANR	5199213	PtrMemberAccess	libctx -> io_device_table		5199190	0					
ANR	5199214	Identifier	libctx		5199190	0					
ANR	5199215	Identifier	io_device_table		5199190	1					
ANR	5199216	Identifier	NULL		5199190	1					
ANR	5199217	OrExpression	index < 0 || index >= libctx -> io_device_table_count		5199190	1		||			
ANR	5199218	RelationalExpression	index < 0		5199190	0		<			
ANR	5199219	Identifier	index		5199190	0					
ANR	5199220	PrimaryExpression	0		5199190	1					
ANR	5199221	RelationalExpression	index >= libctx -> io_device_table_count		5199190	1		>=			
ANR	5199222	Identifier	index		5199190	0					
ANR	5199223	PtrMemberAccess	libctx -> io_device_table_count		5199190	1					
ANR	5199224	Identifier	libctx		5199190	0					
ANR	5199225	Identifier	io_device_table_count		5199190	1					
ANR	5199226	ReturnStatement	return 0 ;	371:8:11145:11153	5199190	1	True				
ANR	5199227	PrimaryExpression	0		5199190	0					
ANR	5199228	ReturnStatement	return libctx -> io_device_table [ index ] ;	372:4:11185:11222	5199190	2	True				
ANR	5199229	ArrayIndexing	libctx -> io_device_table [ index ]		5199190	0					
ANR	5199230	PtrMemberAccess	libctx -> io_device_table		5199190	0					
ANR	5199231	Identifier	libctx		5199190	0					
ANR	5199232	Identifier	io_device_table		5199190	1					
ANR	5199233	Identifier	index		5199190	1					
ANR	5199234	ReturnType	gx_io_device *		5199190	1					
ANR	5199235	Identifier	gs_getiodevice		5199190	2					
ANR	5199236	ParameterList	"const gs_memory_t * mem , int index"		5199190	3					
ANR	5199237	Parameter	const gs_memory_t * mem	365:15:10908:10929	5199190	0	True				
ANR	5199238	ParameterType	const gs_memory_t *		5199190	0					
ANR	5199239	Identifier	mem		5199190	1					
ANR	5199240	Parameter	int index	365:39:10932:10940	5199190	1	True				
ANR	5199241	ParameterType	int		5199190	0					
ANR	5199242	Identifier	index		5199190	1					
ANR	5199243	CFGEntryNode	ENTRY		5199190		True				
ANR	5199244	CFGExitNode	EXIT		5199190		True				
ANR	5199245	Symbol	libctx -> io_device_table		5199190						
ANR	5199246	Symbol	* libctx		5199190						
ANR	5199247	Symbol	libctx		5199190						
ANR	5199248	Symbol	NULL		5199190						
ANR	5199249	Symbol	* libctx -> io_device_table		5199190						
ANR	5199250	Symbol	mem		5199190						
ANR	5199251	Symbol	* index		5199190						
ANR	5199252	Symbol	index		5199190						
ANR	5199253	Symbol	libctx -> io_device_table_count		5199190						
ANR	5199254	Symbol	* * libctx		5199190						
ANR	5199255	Symbol	gs_lib_ctx_get_interp_instance		5199190						
ANR	5199256	Function	gs_findiodevice	377:0:11309:11858							
ANR	5199257	FunctionDef	"gs_findiodevice (const gs_memory_t * mem , const byte * str , uint len)"		5199256	0					
ANR	5199258	CompoundStatement		379:0:11392:11858	5199256	0					
ANR	5199259	IdentifierDeclStatement	int i ;	380:4:11398:11403	5199256	0	True				
ANR	5199260	IdentifierDecl	i		5199256	0					
ANR	5199261	IdentifierDeclType	int		5199256	0					
ANR	5199262	Identifier	i		5199256	1					
ANR	5199263	IdentifierDeclStatement	gs_lib_ctx_t * libctx = gs_lib_ctx_get_interp_instance ( mem ) ;	381:4:11409:11467	5199256	1	True				
ANR	5199264	IdentifierDecl	* libctx = gs_lib_ctx_get_interp_instance ( mem )		5199256	0					
ANR	5199265	IdentifierDeclType	gs_lib_ctx_t *		5199256	0					
ANR	5199266	Identifier	libctx		5199256	1					
ANR	5199267	AssignmentExpression	* libctx = gs_lib_ctx_get_interp_instance ( mem )		5199256	2		=			
ANR	5199268	Identifier	libctx		5199256	0					
ANR	5199269	CallExpression	gs_lib_ctx_get_interp_instance ( mem )		5199256	1					
ANR	5199270	Callee	gs_lib_ctx_get_interp_instance		5199256	0					
ANR	5199271	Identifier	gs_lib_ctx_get_interp_instance		5199256	0					
ANR	5199272	ArgumentList	mem		5199256	1					
ANR	5199273	Argument	mem		5199256	0					
ANR	5199274	Identifier	mem		5199256	0					
ANR	5199275	IfStatement	if ( libctx -> io_device_table == 0 )		5199256	2					
ANR	5199276	Condition	libctx -> io_device_table == 0	383:8:11478:11505	5199256	0	True				
ANR	5199277	EqualityExpression	libctx -> io_device_table == 0		5199256	0		==			
ANR	5199278	PtrMemberAccess	libctx -> io_device_table		5199256	0					
ANR	5199279	Identifier	libctx		5199256	0					
ANR	5199280	Identifier	io_device_table		5199256	1					
ANR	5199281	PrimaryExpression	0		5199256	1					
ANR	5199282	ReturnStatement	return 0 ;	384:5:11513:11521	5199256	1	True				
ANR	5199283	PrimaryExpression	0		5199256	0					
ANR	5199284	IfStatement	if ( len > 1 && str [ len - 1 ] == '%' )		5199256	3					
ANR	5199285	Condition	len > 1 && str [ len - 1 ] == '%'	385:8:11531:11560	5199256	0	True				
ANR	5199286	AndExpression	len > 1 && str [ len - 1 ] == '%'		5199256	0		&&			
ANR	5199287	RelationalExpression	len > 1		5199256	0		>			
ANR	5199288	Identifier	len		5199256	0					
ANR	5199289	PrimaryExpression	1		5199256	1					
ANR	5199290	EqualityExpression	str [ len - 1 ] == '%'		5199256	1		==			
ANR	5199291	ArrayIndexing	str [ len - 1 ]		5199256	0					
ANR	5199292	Identifier	str		5199256	0					
ANR	5199293	AdditiveExpression	len - 1		5199256	1		-			
ANR	5199294	Identifier	len		5199256	0					
ANR	5199295	PrimaryExpression	1		5199256	1					
ANR	5199296	PrimaryExpression	'%'		5199256	1					
ANR	5199297	ExpressionStatement	len --	386:8:11571:11576	5199256	1	True				
ANR	5199298	PostIncDecOperationExpression	len --		5199256	0					
ANR	5199299	Identifier	len		5199256	0					
ANR	5199300	IncDec	--		5199256	1					
ANR	5199301	ForStatement	for ( i = 0 ; i < libctx -> io_device_table_count ; ++ i )		5199256	4					
ANR	5199302	ForInit	i = 0 ;	387:9:11587:11592	5199256	0	True				
ANR	5199303	AssignmentExpression	i = 0		5199256	0		=			
ANR	5199304	Identifier	i		5199256	0					
ANR	5199305	PrimaryExpression	0		5199256	1					
ANR	5199306	Condition	i < libctx -> io_device_table_count	387:16:11594:11626	5199256	1	True				
ANR	5199307	RelationalExpression	i < libctx -> io_device_table_count		5199256	0		<			
ANR	5199308	Identifier	i		5199256	0					
ANR	5199309	PtrMemberAccess	libctx -> io_device_table_count		5199256	1					
ANR	5199310	Identifier	libctx		5199256	0					
ANR	5199311	Identifier	io_device_table_count		5199256	1					
ANR	5199312	UnaryExpression	++ i	387:51:11629:11631	5199256	2	True				
ANR	5199313	IncDec	++		5199256	0					
ANR	5199314	Identifier	i		5199256	1					
ANR	5199315	CompoundStatement		11:8:309:341	5199256	3					
ANR	5199316	IdentifierDeclStatement	gx_io_device * iodev = libctx -> io_device_table [ i ] ;	388:8:11644:11692	5199256	0	True				
ANR	5199317	IdentifierDecl	* iodev = libctx -> io_device_table [ i ]		5199256	0					
ANR	5199318	IdentifierDeclType	gx_io_device *		5199256	0					
ANR	5199319	Identifier	iodev		5199256	1					
ANR	5199320	AssignmentExpression	* iodev = libctx -> io_device_table [ i ]		5199256	2		=			
ANR	5199321	Identifier	iodev		5199256	0					
ANR	5199322	ArrayIndexing	libctx -> io_device_table [ i ]		5199256	1					
ANR	5199323	PtrMemberAccess	libctx -> io_device_table		5199256	0					
ANR	5199324	Identifier	libctx		5199256	0					
ANR	5199325	Identifier	io_device_table		5199256	1					
ANR	5199326	Identifier	i		5199256	1					
ANR	5199327	IdentifierDeclStatement	const char * dname = iodev -> dname ;	389:8:11702:11734	5199256	1	True				
ANR	5199328	IdentifierDecl	* dname = iodev -> dname		5199256	0					
ANR	5199329	IdentifierDeclType	const char *		5199256	0					
ANR	5199330	Identifier	dname		5199256	1					
ANR	5199331	AssignmentExpression	* dname = iodev -> dname		5199256	2		=			
ANR	5199332	Identifier	dname		5199256	0					
ANR	5199333	PtrMemberAccess	iodev -> dname		5199256	1					
ANR	5199334	Identifier	iodev		5199256	0					
ANR	5199335	Identifier	dname		5199256	1					
ANR	5199336	IfStatement	"if ( dname && strlen ( dname ) == len + 1 && ! memcmp ( str , dname , len ) )"		5199256	2					
ANR	5199337	Condition	"dname && strlen ( dname ) == len + 1 && ! memcmp ( str , dname , len )"	391:12:11749:11809	5199256	0	True				
ANR	5199338	AndExpression	"dname && strlen ( dname ) == len + 1 && ! memcmp ( str , dname , len )"		5199256	0		&&			
ANR	5199339	Identifier	dname		5199256	0					
ANR	5199340	AndExpression	"strlen ( dname ) == len + 1 && ! memcmp ( str , dname , len )"		5199256	1		&&			
ANR	5199341	EqualityExpression	strlen ( dname ) == len + 1		5199256	0		==			
ANR	5199342	CallExpression	strlen ( dname )		5199256	0					
ANR	5199343	Callee	strlen		5199256	0					
ANR	5199344	Identifier	strlen		5199256	0					
ANR	5199345	ArgumentList	dname		5199256	1					
ANR	5199346	Argument	dname		5199256	0					
ANR	5199347	Identifier	dname		5199256	0					
ANR	5199348	AdditiveExpression	len + 1		5199256	1		+			
ANR	5199349	Identifier	len		5199256	0					
ANR	5199350	PrimaryExpression	1		5199256	1					
ANR	5199351	UnaryOperationExpression	"! memcmp ( str , dname , len )"		5199256	1					
ANR	5199352	UnaryOperator	!		5199256	0					
ANR	5199353	CallExpression	"memcmp ( str , dname , len )"		5199256	1					
ANR	5199354	Callee	memcmp		5199256	0					
ANR	5199355	Identifier	memcmp		5199256	0					
ANR	5199356	ArgumentList	str		5199256	1					
ANR	5199357	Argument	str		5199256	0					
ANR	5199358	Identifier	str		5199256	0					
ANR	5199359	Argument	dname		5199256	1					
ANR	5199360	Identifier	dname		5199256	0					
ANR	5199361	Argument	len		5199256	2					
ANR	5199362	Identifier	len		5199256	0					
ANR	5199363	ReturnStatement	return iodev ;	392:12:11824:11836	5199256	1	True				
ANR	5199364	Identifier	iodev		5199256	0					
ANR	5199365	ReturnStatement	return 0 ;	394:4:11848:11856	5199256	5	True				
ANR	5199366	PrimaryExpression	0		5199256	0					
ANR	5199367	ReturnType	gx_io_device *		5199256	1					
ANR	5199368	Identifier	gs_findiodevice		5199256	2					
ANR	5199369	ParameterList	"const gs_memory_t * mem , const byte * str , uint len"		5199256	3					
ANR	5199370	Parameter	const gs_memory_t * mem	378:16:11340:11361	5199256	0	True				
ANR	5199371	ParameterType	const gs_memory_t *		5199256	0					
ANR	5199372	Identifier	mem		5199256	1					
ANR	5199373	Parameter	const byte * str	378:40:11364:11379	5199256	1	True				
ANR	5199374	ParameterType	const byte *		5199256	0					
ANR	5199375	Identifier	str		5199256	1					
ANR	5199376	Parameter	uint len	378:58:11382:11389	5199256	2	True				
ANR	5199377	ParameterType	uint		5199256	0					
ANR	5199378	Identifier	len		5199256	1					
ANR	5199379	CFGEntryNode	ENTRY		5199256		True				
ANR	5199380	CFGExitNode	EXIT		5199256		True				
ANR	5199381	Symbol	* libctx		5199256						
ANR	5199382	Symbol	libctx		5199256						
ANR	5199383	Symbol	* libctx -> io_device_table		5199256						
ANR	5199384	Symbol	iodev -> dname		5199256						
ANR	5199385	Symbol	* iodev		5199256						
ANR	5199386	Symbol	i		5199256						
ANR	5199387	Symbol	libctx -> io_device_table_count		5199256						
ANR	5199388	Symbol	str		5199256						
ANR	5199389	Symbol	libctx -> io_device_table		5199256						
ANR	5199390	Symbol	strlen		5199256						
ANR	5199391	Symbol	* i		5199256						
ANR	5199392	Symbol	memcmp		5199256						
ANR	5199393	Symbol	mem		5199256						
ANR	5199394	Symbol	len		5199256						
ANR	5199395	Symbol	iodev		5199256						
ANR	5199396	Symbol	* * libctx		5199256						
ANR	5199397	Symbol	gs_lib_ctx_get_interp_instance		5199256						
ANR	5199398	Symbol	* str		5199256						
ANR	5199399	Symbol	dname		5199256						
ANR	5199400	Symbol	* len		5199256						
ANR	5199401	Function	gs_getdevparams	400:0:11923:12267							
ANR	5199402	FunctionDef	"gs_getdevparams (gx_io_device * iodev , gs_param_list * plist)"		5199401	0					
ANR	5199403	CompoundStatement		402:0:11988:12267	5199401	0					
ANR	5199404	IdentifierDeclStatement	gs_param_string ts ;	403:4:12042:12060	5199401	0	True				
ANR	5199405	IdentifierDecl	ts		5199401	0					
ANR	5199406	IdentifierDeclType	gs_param_string		5199401	0					
ANR	5199407	Identifier	ts		5199401	1					
ANR	5199408	IdentifierDeclStatement	int code ;	404:4:12066:12074	5199401	1	True				
ANR	5199409	IdentifierDecl	code		5199401	0					
ANR	5199410	IdentifierDeclType	int		5199401	0					
ANR	5199411	Identifier	code		5199401	1					
ANR	5199412	ExpressionStatement	"param_string_from_string ( ts , iodev -> dtype )"	406:4:12081:12123	5199401	2	True				
ANR	5199413	CallExpression	"param_string_from_string ( ts , iodev -> dtype )"		5199401	0					
ANR	5199414	Callee	param_string_from_string		5199401	0					
ANR	5199415	Identifier	param_string_from_string		5199401	0					
ANR	5199416	ArgumentList	ts		5199401	1					
ANR	5199417	Argument	ts		5199401	0					
ANR	5199418	Identifier	ts		5199401	0					
ANR	5199419	Argument	iodev -> dtype		5199401	1					
ANR	5199420	PtrMemberAccess	iodev -> dtype		5199401	0					
ANR	5199421	Identifier	iodev		5199401	0					
ANR	5199422	Identifier	dtype		5199401	1					
ANR	5199423	ExpressionStatement	"code = param_write_name ( plist , ""Type"" , & ts )"	407:4:12129:12172	5199401	3	True				
ANR	5199424	AssignmentExpression	"code = param_write_name ( plist , ""Type"" , & ts )"		5199401	0		=			
ANR	5199425	Identifier	code		5199401	0					
ANR	5199426	CallExpression	"param_write_name ( plist , ""Type"" , & ts )"		5199401	1					
ANR	5199427	Callee	param_write_name		5199401	0					
ANR	5199428	Identifier	param_write_name		5199401	0					
ANR	5199429	ArgumentList	plist		5199401	1					
ANR	5199430	Argument	plist		5199401	0					
ANR	5199431	Identifier	plist		5199401	0					
ANR	5199432	Argument	"""Type"""		5199401	1					
ANR	5199433	PrimaryExpression	"""Type"""		5199401	0					
ANR	5199434	Argument	& ts		5199401	2					
ANR	5199435	UnaryOperationExpression	& ts		5199401	0					
ANR	5199436	UnaryOperator	&		5199401	0					
ANR	5199437	Identifier	ts		5199401	1					
ANR	5199438	IfStatement	if ( code < 0 )		5199401	4					
ANR	5199439	Condition	code < 0	408:8:12182:12189	5199401	0	True				
ANR	5199440	RelationalExpression	code < 0		5199401	0		<			
ANR	5199441	Identifier	code		5199401	0					
ANR	5199442	PrimaryExpression	0		5199401	1					
ANR	5199443	ReturnStatement	return code ;	409:8:12200:12211	5199401	1	True				
ANR	5199444	Identifier	code		5199401	0					
ANR	5199445	ReturnStatement	"return ( * iodev -> procs . get_params ) ( iodev , plist ) ;"	410:4:12217:12265	5199401	5	True				
ANR	5199446	CallExpression	"( * iodev -> procs . get_params ) ( iodev , plist )"		5199401	0					
ANR	5199447	Callee	* iodev -> procs . get_params		5199401	0					
ANR	5199448	UnaryOperationExpression	* iodev -> procs . get_params		5199401	0					
ANR	5199449	UnaryOperator	*		5199401	0					
ANR	5199450	MemberAccess	iodev -> procs . get_params		5199401	1					
ANR	5199451	PtrMemberAccess	iodev -> procs		5199401	0					
ANR	5199452	Identifier	iodev		5199401	0					
ANR	5199453	Identifier	procs		5199401	1					
ANR	5199454	Identifier	get_params		5199401	1					
ANR	5199455	ArgumentList	iodev		5199401	1					
ANR	5199456	Argument	iodev		5199401	0					
ANR	5199457	Identifier	iodev		5199401	0					
ANR	5199458	Argument	plist		5199401	1					
ANR	5199459	Identifier	plist		5199401	0					
ANR	5199460	ReturnType	int		5199401	1					
ANR	5199461	Identifier	gs_getdevparams		5199401	2					
ANR	5199462	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		5199401	3					
ANR	5199463	Parameter	gx_io_device * iodev	401:16:11943:11962	5199401	0	True				
ANR	5199464	ParameterType	gx_io_device *		5199401	0					
ANR	5199465	Identifier	iodev		5199401	1					
ANR	5199466	Parameter	gs_param_list * plist	401:38:11965:11985	5199401	1	True				
ANR	5199467	ParameterType	gs_param_list *		5199401	0					
ANR	5199468	Identifier	plist		5199401	1					
ANR	5199469	CFGEntryNode	ENTRY		5199401		True				
ANR	5199470	CFGExitNode	EXIT		5199401		True				
ANR	5199471	Symbol	* iodev -> procs . get_params		5199401						
ANR	5199472	Symbol	code		5199401						
ANR	5199473	Symbol	* iodev		5199401						
ANR	5199474	Symbol	& ts		5199401						
ANR	5199475	Symbol	* iodev -> procs		5199401						
ANR	5199476	Symbol	param_write_name		5199401						
ANR	5199477	Symbol	plist		5199401						
ANR	5199478	Symbol	iodev -> procs . get_params		5199401						
ANR	5199479	Symbol	iodev		5199401						
ANR	5199480	Symbol	iodev -> dtype		5199401						
ANR	5199481	Symbol	ts		5199401						
ANR	5199482	Symbol	iodev -> procs		5199401						
ANR	5199483	Symbol	* * iodev		5199401						
ANR	5199484	Function	gs_putdevparams	414:0:12301:12422							
ANR	5199485	FunctionDef	"gs_putdevparams (gx_io_device * iodev , gs_param_list * plist)"		5199484	0					
ANR	5199486	CompoundStatement		416:0:12366:12422	5199484	0					
ANR	5199487	ReturnStatement	"return ( * iodev -> procs . put_params ) ( iodev , plist ) ;"	417:4:12372:12420	5199484	0	True				
ANR	5199488	CallExpression	"( * iodev -> procs . put_params ) ( iodev , plist )"		5199484	0					
ANR	5199489	Callee	* iodev -> procs . put_params		5199484	0					
ANR	5199490	UnaryOperationExpression	* iodev -> procs . put_params		5199484	0					
ANR	5199491	UnaryOperator	*		5199484	0					
ANR	5199492	MemberAccess	iodev -> procs . put_params		5199484	1					
ANR	5199493	PtrMemberAccess	iodev -> procs		5199484	0					
ANR	5199494	Identifier	iodev		5199484	0					
ANR	5199495	Identifier	procs		5199484	1					
ANR	5199496	Identifier	put_params		5199484	1					
ANR	5199497	ArgumentList	iodev		5199484	1					
ANR	5199498	Argument	iodev		5199484	0					
ANR	5199499	Identifier	iodev		5199484	0					
ANR	5199500	Argument	plist		5199484	1					
ANR	5199501	Identifier	plist		5199484	0					
ANR	5199502	ReturnType	int		5199484	1					
ANR	5199503	Identifier	gs_putdevparams		5199484	2					
ANR	5199504	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		5199484	3					
ANR	5199505	Parameter	gx_io_device * iodev	415:16:12321:12340	5199484	0	True				
ANR	5199506	ParameterType	gx_io_device *		5199484	0					
ANR	5199507	Identifier	iodev		5199484	1					
ANR	5199508	Parameter	gs_param_list * plist	415:38:12343:12363	5199484	1	True				
ANR	5199509	ParameterType	gs_param_list *		5199484	0					
ANR	5199510	Identifier	plist		5199484	1					
ANR	5199511	CFGEntryNode	ENTRY		5199484		True				
ANR	5199512	CFGExitNode	EXIT		5199484		True				
ANR	5199513	Symbol	plist		5199484						
ANR	5199514	Symbol	iodev		5199484						
ANR	5199515	Symbol	* iodev		5199484						
ANR	5199516	Symbol	iodev -> procs . put_params		5199484						
ANR	5199517	Symbol	* iodev -> procs		5199484						
ANR	5199518	Symbol	* iodev -> procs . put_params		5199484						
ANR	5199519	Symbol	iodev -> procs		5199484						
ANR	5199520	Symbol	* * iodev		5199484						
ANR	5199521	Function	gs_fopen_errno_to_code	422:0:12511:13417							
ANR	5199522	FunctionDef	gs_fopen_errno_to_code (int eno)		5199521	0					
ANR	5199523	CompoundStatement		424:0:12547:13417	5199521	0					
ANR	5199524	SwitchStatement	switch ( eno )		5199521	0					
ANR	5199525	Condition	eno	426:12:12681:12683	5199521	0	True				
ANR	5199526	Identifier	eno		5199521	0					
ANR	5199527	CompoundStatement		3:17:138:138	5199521	1					
ANR	5199528	Label	case ENOENT :	428:8:12710:12721	5199521	0	True				
ANR	5199529	Identifier	ENOENT		5199521	0					
ANR	5199530	ExpressionStatement	return_error ( gs_error_undefinedfilename )	429:12:12735:12775	5199521	1	True				
ANR	5199531	CallExpression	return_error ( gs_error_undefinedfilename )		5199521	0					
ANR	5199532	Callee	return_error		5199521	0					
ANR	5199533	Identifier	return_error		5199521	0					
ANR	5199534	ArgumentList	gs_error_undefinedfilename		5199521	1					
ANR	5199535	Argument	gs_error_undefinedfilename		5199521	0					
ANR	5199536	Identifier	gs_error_undefinedfilename		5199521	0					
ANR	5199537	Statement	ifndef	432:3:12802:12807	5199521	2	True				
ANR	5199538	Statement	ENOENT	432:10:12809:12814	5199521	3	True				
ANR	5199539	Statement	define	433:5:12821:12826	5199521	4	True				
ANR	5199540	Statement	ENOENT	433:12:12828:12833	5199521	5	True				
ANR	5199541	Statement	ENOFILE	433:19:12835:12841	5199521	6	True				
ANR	5199542	Statement	endif	434:3:12846:12850	5199521	7	True				
ANR	5199543	Statement	if	435:3:12855:12856	5199521	8	True				
ANR	5199544	Statement	ENOFILE	435:6:12858:12864	5199521	9	True				
ANR	5199545	Statement	!=	435:14:12866:12867	5199521	10	True				
ANR	5199546	Statement	ENOENT	435:17:12869:12874	5199521	11	True				
ANR	5199547	Label	case ENOFILE :	436:8:12884:12896	5199521	12	True				
ANR	5199548	Identifier	ENOFILE		5199521	0					
ANR	5199549	ExpressionStatement	return_error ( gs_error_undefinedfilename )	437:12:12910:12950	5199521	13	True				
ANR	5199550	CallExpression	return_error ( gs_error_undefinedfilename )		5199521	0					
ANR	5199551	Callee	return_error		5199521	0					
ANR	5199552	Identifier	return_error		5199521	0					
ANR	5199553	ArgumentList	gs_error_undefinedfilename		5199521	1					
ANR	5199554	Argument	gs_error_undefinedfilename		5199521	0					
ANR	5199555	Identifier	gs_error_undefinedfilename		5199521	0					
ANR	5199556	Statement	endif	438:3:12955:12959	5199521	14	True				
ANR	5199557	Label	case ENAMETOOLONG :	441:8:12996:13013	5199521	15	True				
ANR	5199558	Identifier	ENAMETOOLONG		5199521	0					
ANR	5199559	ExpressionStatement	return_error ( gs_error_undefinedfilename )	442:12:13027:13067	5199521	16	True				
ANR	5199560	CallExpression	return_error ( gs_error_undefinedfilename )		5199521	0					
ANR	5199561	Callee	return_error		5199521	0					
ANR	5199562	Identifier	return_error		5199521	0					
ANR	5199563	ArgumentList	gs_error_undefinedfilename		5199521	1					
ANR	5199564	Argument	gs_error_undefinedfilename		5199521	0					
ANR	5199565	Identifier	gs_error_undefinedfilename		5199521	0					
ANR	5199566	Label	case EACCES :	445:8:13098:13109	5199521	17	True				
ANR	5199567	Identifier	EACCES		5199521	0					
ANR	5199568	ExpressionStatement	return_error ( gs_error_invalidfileaccess )	446:12:13123:13163	5199521	18	True				
ANR	5199569	CallExpression	return_error ( gs_error_invalidfileaccess )		5199521	0					
ANR	5199570	Callee	return_error		5199521	0					
ANR	5199571	Identifier	return_error		5199521	0					
ANR	5199572	ArgumentList	gs_error_invalidfileaccess		5199521	1					
ANR	5199573	Argument	gs_error_invalidfileaccess		5199521	0					
ANR	5199574	Identifier	gs_error_invalidfileaccess		5199521	0					
ANR	5199575	Label	case EMFILE :	449:8:13194:13205	5199521	19	True				
ANR	5199576	Identifier	EMFILE		5199521	0					
ANR	5199577	ExpressionStatement	return_error ( gs_error_limitcheck )	450:12:13219:13252	5199521	20	True				
ANR	5199578	CallExpression	return_error ( gs_error_limitcheck )		5199521	0					
ANR	5199579	Callee	return_error		5199521	0					
ANR	5199580	Identifier	return_error		5199521	0					
ANR	5199581	ArgumentList	gs_error_limitcheck		5199521	1					
ANR	5199582	Argument	gs_error_limitcheck		5199521	0					
ANR	5199583	Identifier	gs_error_limitcheck		5199521	0					
ANR	5199584	Label	case ENFILE :	453:8:13283:13294	5199521	21	True				
ANR	5199585	Identifier	ENFILE		5199521	0					
ANR	5199586	ExpressionStatement	return_error ( gs_error_limitcheck )	454:12:13308:13341	5199521	22	True				
ANR	5199587	CallExpression	return_error ( gs_error_limitcheck )		5199521	0					
ANR	5199588	Callee	return_error		5199521	0					
ANR	5199589	Identifier	return_error		5199521	0					
ANR	5199590	ArgumentList	gs_error_limitcheck		5199521	1					
ANR	5199591	Argument	gs_error_limitcheck		5199521	0					
ANR	5199592	Identifier	gs_error_limitcheck		5199521	0					
ANR	5199593	Label	default :	456:8:13358:13365	5199521	23	True				
ANR	5199594	Identifier	default		5199521	0					
ANR	5199595	ExpressionStatement	return_error ( gs_error_ioerror )	457:12:13379:13409	5199521	24	True				
ANR	5199596	CallExpression	return_error ( gs_error_ioerror )		5199521	0					
ANR	5199597	Callee	return_error		5199521	0					
ANR	5199598	Identifier	return_error		5199521	0					
ANR	5199599	ArgumentList	gs_error_ioerror		5199521	1					
ANR	5199600	Argument	gs_error_ioerror		5199521	0					
ANR	5199601	Identifier	gs_error_ioerror		5199521	0					
ANR	5199602	ReturnType	int		5199521	1					
ANR	5199603	Identifier	gs_fopen_errno_to_code		5199521	2					
ANR	5199604	ParameterList	int eno		5199521	3					
ANR	5199605	Parameter	int eno	423:23:12538:12544	5199521	0	True				
ANR	5199606	ParameterType	int		5199521	0					
ANR	5199607	Identifier	eno		5199521	1					
ANR	5199608	CFGEntryNode	ENTRY		5199521		True				
ANR	5199609	CFGExitNode	EXIT		5199521		True				
ANR	5199610	Symbol	eno		5199521						
ANR	5199611	Symbol	gs_error_limitcheck		5199521						
ANR	5199612	Symbol	gs_error_ioerror		5199521						
ANR	5199613	Symbol	gs_error_undefinedfilename		5199521						
ANR	5199614	Symbol	gs_error_invalidfileaccess		5199521						
ANR	5199615	DeclStmt									
ANR	5199616	Decl							struct gs_file_enum_s	struct gs_file_enum_s	gs_file_enum
ANR	5199617	ClassDef	gs_file_enum_s	465:0:13569:13750							
ANR	5199618	DeclStmt									
ANR	5199619	Decl							gs_memory_t	gs_memory_t *	memory
ANR	5199620	DeclStmt									
ANR	5199621	Decl							gx_io_device	gx_io_device *	piodev
ANR	5199622	DeclStmt									
ANR	5199623	Decl							file_enum	file_enum *	pfile_enum
ANR	5199624	DeclStmt									
ANR	5199625	Decl							int	int	prepend_iodev_name
ANR	5199626	Function	gs_enumerate_files_init	475:0:13904:15137							
ANR	5199627	FunctionDef	"gs_enumerate_files_init (const char * pat , uint patlen , gs_memory_t * mem)"		5199626	0					
ANR	5199628	CompoundStatement		477:0:13989:15137	5199626	0					
ANR	5199629	IdentifierDeclStatement	file_enum * pfen ;	478:4:13995:14010	5199626	0	True				
ANR	5199630	IdentifierDecl	* pfen		5199626	0					
ANR	5199631	IdentifierDeclType	file_enum *		5199626	0					
ANR	5199632	Identifier	pfen		5199626	1					
ANR	5199633	IdentifierDeclStatement	gs_file_enum * pgs_file_enum ;	479:4:14016:14043	5199626	1	True				
ANR	5199634	IdentifierDecl	* pgs_file_enum		5199626	0					
ANR	5199635	IdentifierDeclType	gs_file_enum *		5199626	0					
ANR	5199636	Identifier	pgs_file_enum		5199626	1					
ANR	5199637	IdentifierDeclStatement	gx_io_device * iodev = NULL ;	480:4:14049:14075	5199626	2	True				
ANR	5199638	IdentifierDecl	* iodev = NULL		5199626	0					
ANR	5199639	IdentifierDeclType	gx_io_device *		5199626	0					
ANR	5199640	Identifier	iodev		5199626	1					
ANR	5199641	AssignmentExpression	* iodev = NULL		5199626	2		=			
ANR	5199642	Identifier	NULL		5199626	0					
ANR	5199643	Identifier	NULL		5199626	1					
ANR	5199644	IdentifierDeclStatement	gs_parsed_file_name_t pfn ;	481:4:14081:14106	5199626	3	True				
ANR	5199645	IdentifierDecl	pfn		5199626	0					
ANR	5199646	IdentifierDeclType	gs_parsed_file_name_t		5199626	0					
ANR	5199647	Identifier	pfn		5199626	1					
ANR	5199648	IdentifierDeclStatement	int code = 0 ;	482:4:14112:14124	5199626	4	True				
ANR	5199649	IdentifierDecl	code = 0		5199626	0					
ANR	5199650	IdentifierDeclType	int		5199626	0					
ANR	5199651	Identifier	code		5199626	1					
ANR	5199652	AssignmentExpression	code = 0		5199626	2		=			
ANR	5199653	Identifier	code		5199626	0					
ANR	5199654	PrimaryExpression	0		5199626	1					
ANR	5199655	ExpressionStatement	"code = gs_parse_file_name ( & pfn , pat , patlen , mem )"	485:4:14158:14207	5199626	5	True				
ANR	5199656	AssignmentExpression	"code = gs_parse_file_name ( & pfn , pat , patlen , mem )"		5199626	0		=			
ANR	5199657	Identifier	code		5199626	0					
ANR	5199658	CallExpression	"gs_parse_file_name ( & pfn , pat , patlen , mem )"		5199626	1					
ANR	5199659	Callee	gs_parse_file_name		5199626	0					
ANR	5199660	Identifier	gs_parse_file_name		5199626	0					
ANR	5199661	ArgumentList	& pfn		5199626	1					
ANR	5199662	Argument	& pfn		5199626	0					
ANR	5199663	UnaryOperationExpression	& pfn		5199626	0					
ANR	5199664	UnaryOperator	&		5199626	0					
ANR	5199665	Identifier	pfn		5199626	1					
ANR	5199666	Argument	pat		5199626	1					
ANR	5199667	Identifier	pat		5199626	0					
ANR	5199668	Argument	patlen		5199626	2					
ANR	5199669	Identifier	patlen		5199626	0					
ANR	5199670	Argument	mem		5199626	3					
ANR	5199671	Identifier	mem		5199626	0					
ANR	5199672	IfStatement	if ( code < 0 )		5199626	6					
ANR	5199673	Condition	code < 0	486:8:14217:14224	5199626	0	True				
ANR	5199674	RelationalExpression	code < 0		5199626	0		<			
ANR	5199675	Identifier	code		5199626	0					
ANR	5199676	PrimaryExpression	0		5199626	1					
ANR	5199677	ReturnStatement	return NULL ;	487:8:14235:14246	5199626	1	True				
ANR	5199678	Identifier	NULL		5199626	0					
ANR	5199679	ExpressionStatement	iodev = ( pfn . iodev == NULL ) ? iodev_default ( mem ) : pfn . iodev	488:4:14252:14312	5199626	7	True				
ANR	5199680	AssignmentExpression	iodev = ( pfn . iodev == NULL ) ? iodev_default ( mem ) : pfn . iodev		5199626	0		=			
ANR	5199681	Identifier	iodev		5199626	0					
ANR	5199682	ConditionalExpression	( pfn . iodev == NULL ) ? iodev_default ( mem ) : pfn . iodev		5199626	1					
ANR	5199683	Condition	pfn . iodev == NULL		5199626	0					
ANR	5199684	EqualityExpression	pfn . iodev == NULL		5199626	0		==			
ANR	5199685	MemberAccess	pfn . iodev		5199626	0					
ANR	5199686	Identifier	pfn		5199626	0					
ANR	5199687	Identifier	iodev		5199626	1					
ANR	5199688	Identifier	NULL		5199626	1					
ANR	5199689	CallExpression	iodev_default ( mem )		5199626	1					
ANR	5199690	Callee	iodev_default		5199626	0					
ANR	5199691	Identifier	iodev_default		5199626	0					
ANR	5199692	ArgumentList	mem		5199626	1					
ANR	5199693	Argument	mem		5199626	0					
ANR	5199694	Identifier	mem		5199626	0					
ANR	5199695	MemberAccess	pfn . iodev		5199626	2					
ANR	5199696	Identifier	pfn		5199626	0					
ANR	5199697	Identifier	iodev		5199626	1					
ANR	5199698	IfStatement	if ( pfn . len == 0 || iodev -> procs . enumerate_files == iodev_no_enumerate_files )		5199626	8					
ANR	5199699	Condition	pfn . len == 0 || iodev -> procs . enumerate_files == iodev_no_enumerate_files	491:8:14399:14470	5199626	0	True				
ANR	5199700	OrExpression	pfn . len == 0 || iodev -> procs . enumerate_files == iodev_no_enumerate_files		5199626	0		||			
ANR	5199701	EqualityExpression	pfn . len == 0		5199626	0		==			
ANR	5199702	MemberAccess	pfn . len		5199626	0					
ANR	5199703	Identifier	pfn		5199626	0					
ANR	5199704	Identifier	len		5199626	1					
ANR	5199705	PrimaryExpression	0		5199626	1					
ANR	5199706	EqualityExpression	iodev -> procs . enumerate_files == iodev_no_enumerate_files		5199626	1		==			
ANR	5199707	MemberAccess	iodev -> procs . enumerate_files		5199626	0					
ANR	5199708	PtrMemberAccess	iodev -> procs		5199626	0					
ANR	5199709	Identifier	iodev		5199626	0					
ANR	5199710	Identifier	procs		5199626	1					
ANR	5199711	Identifier	enumerate_files		5199626	1					
ANR	5199712	Identifier	iodev_no_enumerate_files		5199626	1					
ANR	5199713	CompoundStatement		15:82:483:483	5199626	1					
ANR	5199714	ReturnStatement	return NULL ;	492:8:14483:14494	5199626	0	True				
ANR	5199715	Identifier	NULL		5199626	0					
ANR	5199716	ExpressionStatement	"pfen = iodev -> procs . enumerate_files ( iodev , ( const char * ) pfn . fname , pfn . len , mem )"	494:4:14559:14656	5199626	9	True				
ANR	5199717	AssignmentExpression	"pfen = iodev -> procs . enumerate_files ( iodev , ( const char * ) pfn . fname , pfn . len , mem )"		5199626	0		=			
ANR	5199718	Identifier	pfen		5199626	0					
ANR	5199719	CallExpression	"iodev -> procs . enumerate_files ( iodev , ( const char * ) pfn . fname , pfn . len , mem )"		5199626	1					
ANR	5199720	Callee	iodev -> procs . enumerate_files		5199626	0					
ANR	5199721	MemberAccess	iodev -> procs . enumerate_files		5199626	0					
ANR	5199722	PtrMemberAccess	iodev -> procs		5199626	0					
ANR	5199723	Identifier	iodev		5199626	0					
ANR	5199724	Identifier	procs		5199626	1					
ANR	5199725	Identifier	enumerate_files		5199626	1					
ANR	5199726	ArgumentList	iodev		5199626	1					
ANR	5199727	Argument	iodev		5199626	0					
ANR	5199728	Identifier	iodev		5199626	0					
ANR	5199729	Argument	( const char * ) pfn . fname		5199626	1					
ANR	5199730	CastExpression	( const char * ) pfn . fname		5199626	0					
ANR	5199731	CastTarget	const char *		5199626	0					
ANR	5199732	MemberAccess	pfn . fname		5199626	1					
ANR	5199733	Identifier	pfn		5199626	0					
ANR	5199734	Identifier	fname		5199626	1					
ANR	5199735	Argument	pfn . len		5199626	2					
ANR	5199736	MemberAccess	pfn . len		5199626	0					
ANR	5199737	Identifier	pfn		5199626	0					
ANR	5199738	Identifier	len		5199626	1					
ANR	5199739	Argument	mem		5199626	3					
ANR	5199740	Identifier	mem		5199626	0					
ANR	5199741	IfStatement	if ( pfen == 0 )		5199626	10					
ANR	5199742	Condition	pfen == 0	496:8:14666:14674	5199626	0	True				
ANR	5199743	EqualityExpression	pfen == 0		5199626	0		==			
ANR	5199744	Identifier	pfen		5199626	0					
ANR	5199745	PrimaryExpression	0		5199626	1					
ANR	5199746	ReturnStatement	return NULL ;	497:8:14685:14696	5199626	1	True				
ANR	5199747	Identifier	NULL		5199626	0					
ANR	5199748	ExpressionStatement	"pgs_file_enum = gs_alloc_struct ( mem , gs_file_enum , & st_gs_file_enum , ""gs_enumerate_files_init"" )"	498:4:14702:14824	5199626	11	True				
ANR	5199749	AssignmentExpression	"pgs_file_enum = gs_alloc_struct ( mem , gs_file_enum , & st_gs_file_enum , ""gs_enumerate_files_init"" )"		5199626	0		=			
ANR	5199750	Identifier	pgs_file_enum		5199626	0					
ANR	5199751	CallExpression	"gs_alloc_struct ( mem , gs_file_enum , & st_gs_file_enum , ""gs_enumerate_files_init"" )"		5199626	1					
ANR	5199752	Callee	gs_alloc_struct		5199626	0					
ANR	5199753	Identifier	gs_alloc_struct		5199626	0					
ANR	5199754	ArgumentList	mem		5199626	1					
ANR	5199755	Argument	mem		5199626	0					
ANR	5199756	Identifier	mem		5199626	0					
ANR	5199757	Argument	gs_file_enum		5199626	1					
ANR	5199758	Identifier	gs_file_enum		5199626	0					
ANR	5199759	Argument	& st_gs_file_enum		5199626	2					
ANR	5199760	UnaryOperationExpression	& st_gs_file_enum		5199626	0					
ANR	5199761	UnaryOperator	&		5199626	0					
ANR	5199762	Identifier	st_gs_file_enum		5199626	1					
ANR	5199763	Argument	"""gs_enumerate_files_init"""		5199626	3					
ANR	5199764	PrimaryExpression	"""gs_enumerate_files_init"""		5199626	0					
ANR	5199765	IfStatement	if ( pgs_file_enum == 0 )		5199626	12					
ANR	5199766	Condition	pgs_file_enum == 0	500:8:14834:14851	5199626	0	True				
ANR	5199767	EqualityExpression	pgs_file_enum == 0		5199626	0		==			
ANR	5199768	Identifier	pgs_file_enum		5199626	0					
ANR	5199769	PrimaryExpression	0		5199626	1					
ANR	5199770	CompoundStatement		25:4:868:868	5199626	1					
ANR	5199771	ExpressionStatement	iodev -> procs . enumerate_close ( pfen )	502:8:14868:14902	5199626	0	True				
ANR	5199772	CallExpression	iodev -> procs . enumerate_close ( pfen )		5199626	0					
ANR	5199773	Callee	iodev -> procs . enumerate_close		5199626	0					
ANR	5199774	MemberAccess	iodev -> procs . enumerate_close		5199626	0					
ANR	5199775	PtrMemberAccess	iodev -> procs		5199626	0					
ANR	5199776	Identifier	iodev		5199626	0					
ANR	5199777	Identifier	procs		5199626	1					
ANR	5199778	Identifier	enumerate_close		5199626	1					
ANR	5199779	ArgumentList	pfen		5199626	1					
ANR	5199780	Argument	pfen		5199626	0					
ANR	5199781	Identifier	pfen		5199626	0					
ANR	5199782	ReturnStatement	return NULL ;	503:8:14912:14923	5199626	1	True				
ANR	5199783	Identifier	NULL		5199626	0					
ANR	5199784	ExpressionStatement	pgs_file_enum -> memory = mem	505:4:14935:14962	5199626	13	True				
ANR	5199785	AssignmentExpression	pgs_file_enum -> memory = mem		5199626	0		=			
ANR	5199786	PtrMemberAccess	pgs_file_enum -> memory		5199626	0					
ANR	5199787	Identifier	pgs_file_enum		5199626	0					
ANR	5199788	Identifier	memory		5199626	1					
ANR	5199789	Identifier	mem		5199626	1					
ANR	5199790	ExpressionStatement	pgs_file_enum -> piodev = iodev	506:4:14968:14997	5199626	14	True				
ANR	5199791	AssignmentExpression	pgs_file_enum -> piodev = iodev		5199626	0		=			
ANR	5199792	PtrMemberAccess	pgs_file_enum -> piodev		5199626	0					
ANR	5199793	Identifier	pgs_file_enum		5199626	0					
ANR	5199794	Identifier	piodev		5199626	1					
ANR	5199795	Identifier	iodev		5199626	1					
ANR	5199796	ExpressionStatement	pgs_file_enum -> pfile_enum = pfen	507:4:15003:15035	5199626	15	True				
ANR	5199797	AssignmentExpression	pgs_file_enum -> pfile_enum = pfen		5199626	0		=			
ANR	5199798	PtrMemberAccess	pgs_file_enum -> pfile_enum		5199626	0					
ANR	5199799	Identifier	pgs_file_enum		5199626	0					
ANR	5199800	Identifier	pfile_enum		5199626	1					
ANR	5199801	Identifier	pfen		5199626	1					
ANR	5199802	ExpressionStatement	pgs_file_enum -> prepend_iodev_name = ( pfn . iodev != NULL )	508:4:15041:15096	5199626	16	True				
ANR	5199803	AssignmentExpression	pgs_file_enum -> prepend_iodev_name = ( pfn . iodev != NULL )		5199626	0		=			
ANR	5199804	PtrMemberAccess	pgs_file_enum -> prepend_iodev_name		5199626	0					
ANR	5199805	Identifier	pgs_file_enum		5199626	0					
ANR	5199806	Identifier	prepend_iodev_name		5199626	1					
ANR	5199807	EqualityExpression	pfn . iodev != NULL		5199626	1		!=			
ANR	5199808	MemberAccess	pfn . iodev		5199626	0					
ANR	5199809	Identifier	pfn		5199626	0					
ANR	5199810	Identifier	iodev		5199626	1					
ANR	5199811	Identifier	NULL		5199626	1					
ANR	5199812	ReturnStatement	return ( file_enum * ) pgs_file_enum ;	509:4:15102:15135	5199626	17	True				
ANR	5199813	CastExpression	( file_enum * ) pgs_file_enum		5199626	0					
ANR	5199814	CastTarget	file_enum *		5199626	0					
ANR	5199815	Identifier	pgs_file_enum		5199626	1					
ANR	5199816	ReturnType	file_enum *		5199626	1					
ANR	5199817	Identifier	gs_enumerate_files_init		5199626	2					
ANR	5199818	ParameterList	"const char * pat , uint patlen , gs_memory_t * mem"		5199626	3					
ANR	5199819	Parameter	const char * pat	476:24:13940:13954	5199626	0	True				
ANR	5199820	ParameterType	const char *		5199626	0					
ANR	5199821	Identifier	pat		5199626	1					
ANR	5199822	Parameter	uint patlen	476:41:13957:13967	5199626	1	True				
ANR	5199823	ParameterType	uint		5199626	0					
ANR	5199824	Identifier	patlen		5199626	1					
ANR	5199825	Parameter	gs_memory_t * mem	476:54:13970:13986	5199626	2	True				
ANR	5199826	ParameterType	gs_memory_t *		5199626	0					
ANR	5199827	Identifier	mem		5199626	1					
ANR	5199828	CFGEntryNode	ENTRY		5199626		True				
ANR	5199829	CFGExitNode	EXIT		5199626		True				
ANR	5199830	Symbol	code		5199626						
ANR	5199831	Symbol	pfn . iodev		5199626						
ANR	5199832	Symbol	gs_alloc_struct		5199626						
ANR	5199833	Symbol	* pgs_file_enum		5199626						
ANR	5199834	Symbol	pgs_file_enum		5199626						
ANR	5199835	Symbol	mem		5199626						
ANR	5199836	Symbol	iodev		5199626						
ANR	5199837	Symbol	& pfn		5199626						
ANR	5199838	Symbol	gs_parse_file_name		5199626						
ANR	5199839	Symbol	iodev -> procs		5199626						
ANR	5199840	Symbol	iodev_no_enumerate_files		5199626						
ANR	5199841	Symbol	pat		5199626						
ANR	5199842	Symbol	NULL		5199626						
ANR	5199843	Symbol	* iodev		5199626						
ANR	5199844	Symbol	& st_gs_file_enum		5199626						
ANR	5199845	Symbol	pgs_file_enum -> pfile_enum		5199626						
ANR	5199846	Symbol	gs_file_enum		5199626						
ANR	5199847	Symbol	pfen		5199626						
ANR	5199848	Symbol	pgs_file_enum -> piodev		5199626						
ANR	5199849	Symbol	pfn . len		5199626						
ANR	5199850	Symbol	iodev_default		5199626						
ANR	5199851	Symbol	iodev -> procs . enumerate_files		5199626						
ANR	5199852	Symbol	pgs_file_enum -> memory		5199626						
ANR	5199853	Symbol	pfn		5199626						
ANR	5199854	Symbol	pgs_file_enum -> prepend_iodev_name		5199626						
ANR	5199855	Symbol	patlen		5199626						
ANR	5199856	Symbol	pfn . fname		5199626						
ANR	5199857	Function	gs_enumerate_files_next	512:0:15140:16055							
ANR	5199858	FunctionDef	"gs_enumerate_files_next (file_enum * pfen , char * ptr , uint maxlen)"		5199857	0					
ANR	5199859	CompoundStatement		514:0:15211:16055	5199857	0					
ANR	5199860	IdentifierDeclStatement	gs_file_enum * pgs_file_enum = ( gs_file_enum * ) pfen ;	515:4:15217:15267	5199857	0	True				
ANR	5199861	IdentifierDecl	* pgs_file_enum = ( gs_file_enum * ) pfen		5199857	0					
ANR	5199862	IdentifierDeclType	gs_file_enum *		5199857	0					
ANR	5199863	Identifier	pgs_file_enum		5199857	1					
ANR	5199864	AssignmentExpression	* pgs_file_enum = ( gs_file_enum * ) pfen		5199857	2		=			
ANR	5199865	Identifier	pgs_file_enum		5199857	0					
ANR	5199866	CastExpression	( gs_file_enum * ) pfen		5199857	1					
ANR	5199867	CastTarget	gs_file_enum *		5199857	0					
ANR	5199868	Identifier	pfen		5199857	1					
ANR	5199869	IdentifierDeclStatement	int iodev_name_len ;	516:4:15273:15291	5199857	1	True				
ANR	5199870	IdentifierDecl	iodev_name_len		5199857	0					
ANR	5199871	IdentifierDeclType	int		5199857	0					
ANR	5199872	Identifier	iodev_name_len		5199857	1					
ANR	5199873	IdentifierDeclStatement	uint return_len ;	517:4:15297:15312	5199857	2	True				
ANR	5199874	IdentifierDecl	return_len		5199857	0					
ANR	5199875	IdentifierDeclType	uint		5199857	0					
ANR	5199876	Identifier	return_len		5199857	1					
ANR	5199877	IfStatement	if ( pgs_file_enum == NULL )		5199857	3					
ANR	5199878	Condition	pgs_file_enum == NULL	519:8:15323:15343	5199857	0	True				
ANR	5199879	EqualityExpression	pgs_file_enum == NULL		5199857	0		==			
ANR	5199880	Identifier	pgs_file_enum		5199857	0					
ANR	5199881	Identifier	NULL		5199857	1					
ANR	5199882	ReturnStatement	return ~0 ;	520:8:15354:15363	5199857	1	True				
ANR	5199883	Identifier	~0		5199857	0					
ANR	5199884	ExpressionStatement	iodev_name_len = pgs_file_enum -> prepend_iodev_name ? strlen ( pgs_file_enum -> piodev -> dname ) : 0	522:4:15370:15487	5199857	4	True				
ANR	5199885	AssignmentExpression	iodev_name_len = pgs_file_enum -> prepend_iodev_name ? strlen ( pgs_file_enum -> piodev -> dname ) : 0		5199857	0		=			
ANR	5199886	Identifier	iodev_name_len		5199857	0					
ANR	5199887	ConditionalExpression	pgs_file_enum -> prepend_iodev_name ? strlen ( pgs_file_enum -> piodev -> dname ) : 0		5199857	1					
ANR	5199888	Condition	pgs_file_enum -> prepend_iodev_name		5199857	0					
ANR	5199889	PtrMemberAccess	pgs_file_enum -> prepend_iodev_name		5199857	0					
ANR	5199890	Identifier	pgs_file_enum		5199857	0					
ANR	5199891	Identifier	prepend_iodev_name		5199857	1					
ANR	5199892	CallExpression	strlen ( pgs_file_enum -> piodev -> dname )		5199857	1					
ANR	5199893	Callee	strlen		5199857	0					
ANR	5199894	Identifier	strlen		5199857	0					
ANR	5199895	ArgumentList	pgs_file_enum -> piodev -> dname		5199857	1					
ANR	5199896	Argument	pgs_file_enum -> piodev -> dname		5199857	0					
ANR	5199897	PtrMemberAccess	pgs_file_enum -> piodev -> dname		5199857	0					
ANR	5199898	PtrMemberAccess	pgs_file_enum -> piodev		5199857	0					
ANR	5199899	Identifier	pgs_file_enum		5199857	0					
ANR	5199900	Identifier	piodev		5199857	1					
ANR	5199901	Identifier	dname		5199857	1					
ANR	5199902	PrimaryExpression	0		5199857	2					
ANR	5199903	IfStatement	if ( iodev_name_len > maxlen )		5199857	5					
ANR	5199904	Condition	iodev_name_len > maxlen	525:8:15498:15520	5199857	0	True				
ANR	5199905	RelationalExpression	iodev_name_len > maxlen		5199857	0		>			
ANR	5199906	Identifier	iodev_name_len		5199857	0					
ANR	5199907	Identifier	maxlen		5199857	1					
ANR	5199908	ReturnStatement	return maxlen + 1 ;	526:8:15531:15548	5199857	1	True				
ANR	5199909	AdditiveExpression	maxlen + 1		5199857	0		+			
ANR	5199910	Identifier	maxlen		5199857	0					
ANR	5199911	PrimaryExpression	1		5199857	1					
ANR	5199912	IfStatement	if ( iodev_name_len > 0 )		5199857	6					
ANR	5199913	Condition	iodev_name_len > 0	527:8:15586:15603	5199857	0	True				
ANR	5199914	RelationalExpression	iodev_name_len > 0		5199857	0		>			
ANR	5199915	Identifier	iodev_name_len		5199857	0					
ANR	5199916	PrimaryExpression	0		5199857	1					
ANR	5199917	ExpressionStatement	"memcpy ( ptr , pgs_file_enum -> piodev -> dname , iodev_name_len )"	528:8:15614:15671	5199857	1	True				
ANR	5199918	CallExpression	"memcpy ( ptr , pgs_file_enum -> piodev -> dname , iodev_name_len )"		5199857	0					
ANR	5199919	Callee	memcpy		5199857	0					
ANR	5199920	Identifier	memcpy		5199857	0					
ANR	5199921	ArgumentList	ptr		5199857	1					
ANR	5199922	Argument	ptr		5199857	0					
ANR	5199923	Identifier	ptr		5199857	0					
ANR	5199924	Argument	pgs_file_enum -> piodev -> dname		5199857	1					
ANR	5199925	PtrMemberAccess	pgs_file_enum -> piodev -> dname		5199857	0					
ANR	5199926	PtrMemberAccess	pgs_file_enum -> piodev		5199857	0					
ANR	5199927	Identifier	pgs_file_enum		5199857	0					
ANR	5199928	Identifier	piodev		5199857	1					
ANR	5199929	Identifier	dname		5199857	1					
ANR	5199930	Argument	iodev_name_len		5199857	2					
ANR	5199931	Identifier	iodev_name_len		5199857	0					
ANR	5199932	ExpressionStatement	"return_len = pgs_file_enum -> piodev -> procs . enumerate_next ( pgs_file_enum -> pfile_enum , ptr + iodev_name_len , maxlen - iodev_name_len )"	529:4:15677:15839	5199857	7	True				
ANR	5199933	AssignmentExpression	"return_len = pgs_file_enum -> piodev -> procs . enumerate_next ( pgs_file_enum -> pfile_enum , ptr + iodev_name_len , maxlen - iodev_name_len )"		5199857	0		=			
ANR	5199934	Identifier	return_len		5199857	0					
ANR	5199935	CallExpression	"pgs_file_enum -> piodev -> procs . enumerate_next ( pgs_file_enum -> pfile_enum , ptr + iodev_name_len , maxlen - iodev_name_len )"		5199857	1					
ANR	5199936	Callee	pgs_file_enum -> piodev -> procs . enumerate_next		5199857	0					
ANR	5199937	MemberAccess	pgs_file_enum -> piodev -> procs . enumerate_next		5199857	0					
ANR	5199938	PtrMemberAccess	pgs_file_enum -> piodev -> procs		5199857	0					
ANR	5199939	PtrMemberAccess	pgs_file_enum -> piodev		5199857	0					
ANR	5199940	Identifier	pgs_file_enum		5199857	0					
ANR	5199941	Identifier	piodev		5199857	1					
ANR	5199942	Identifier	procs		5199857	1					
ANR	5199943	Identifier	enumerate_next		5199857	1					
ANR	5199944	ArgumentList	pgs_file_enum -> pfile_enum		5199857	1					
ANR	5199945	Argument	pgs_file_enum -> pfile_enum		5199857	0					
ANR	5199946	PtrMemberAccess	pgs_file_enum -> pfile_enum		5199857	0					
ANR	5199947	Identifier	pgs_file_enum		5199857	0					
ANR	5199948	Identifier	pfile_enum		5199857	1					
ANR	5199949	Argument	ptr + iodev_name_len		5199857	1					
ANR	5199950	AdditiveExpression	ptr + iodev_name_len		5199857	0		+			
ANR	5199951	Identifier	ptr		5199857	0					
ANR	5199952	Identifier	iodev_name_len		5199857	1					
ANR	5199953	Argument	maxlen - iodev_name_len		5199857	2					
ANR	5199954	AdditiveExpression	maxlen - iodev_name_len		5199857	0		-			
ANR	5199955	Identifier	maxlen		5199857	0					
ANR	5199956	Identifier	iodev_name_len		5199857	1					
ANR	5199957	IfStatement	if ( return_len == ~0 )		5199857	8					
ANR	5199958	Condition	return_len == ~0	531:8:15849:15864	5199857	0	True				
ANR	5199959	EqualityExpression	return_len == ~0		5199857	0		==			
ANR	5199960	Identifier	return_len		5199857	0					
ANR	5199961	Identifier	~0		5199857	1					
ANR	5199962	CompoundStatement		19:8:665:705	5199857	1					
ANR	5199963	IdentifierDeclStatement	gs_memory_t * mem = pgs_file_enum -> memory ;	532:8:15877:15917	5199857	0	True				
ANR	5199964	IdentifierDecl	* mem = pgs_file_enum -> memory		5199857	0					
ANR	5199965	IdentifierDeclType	gs_memory_t *		5199857	0					
ANR	5199966	Identifier	mem		5199857	1					
ANR	5199967	AssignmentExpression	* mem = pgs_file_enum -> memory		5199857	2		=			
ANR	5199968	Identifier	mem		5199857	0					
ANR	5199969	PtrMemberAccess	pgs_file_enum -> memory		5199857	1					
ANR	5199970	Identifier	pgs_file_enum		5199857	0					
ANR	5199971	Identifier	memory		5199857	1					
ANR	5199972	ExpressionStatement	"gs_free_object ( mem , pgs_file_enum , ""gs_enumerate_files_close"" )"	534:8:15928:15990	5199857	1	True				
ANR	5199973	CallExpression	"gs_free_object ( mem , pgs_file_enum , ""gs_enumerate_files_close"" )"		5199857	0					
ANR	5199974	Callee	gs_free_object		5199857	0					
ANR	5199975	Identifier	gs_free_object		5199857	0					
ANR	5199976	ArgumentList	mem		5199857	1					
ANR	5199977	Argument	mem		5199857	0					
ANR	5199978	Identifier	mem		5199857	0					
ANR	5199979	Argument	pgs_file_enum		5199857	1					
ANR	5199980	Identifier	pgs_file_enum		5199857	0					
ANR	5199981	Argument	"""gs_enumerate_files_close"""		5199857	2					
ANR	5199982	PrimaryExpression	"""gs_enumerate_files_close"""		5199857	0					
ANR	5199983	ReturnStatement	return ~0 ;	535:8:16000:16009	5199857	2	True				
ANR	5199984	Identifier	~0		5199857	0					
ANR	5199985	ReturnStatement	return return_len + iodev_name_len ;	537:4:16021:16053	5199857	9	True				
ANR	5199986	AdditiveExpression	return_len + iodev_name_len		5199857	0		+			
ANR	5199987	Identifier	return_len		5199857	0					
ANR	5199988	Identifier	iodev_name_len		5199857	1					
ANR	5199989	ReturnType	uint		5199857	1					
ANR	5199990	Identifier	gs_enumerate_files_next		5199857	2					
ANR	5199991	ParameterList	"file_enum * pfen , char * ptr , uint maxlen"		5199857	3					
ANR	5199992	Parameter	file_enum * pfen	513:24:15169:15184	5199857	0	True				
ANR	5199993	ParameterType	file_enum *		5199857	0					
ANR	5199994	Identifier	pfen		5199857	1					
ANR	5199995	Parameter	char * ptr	513:42:15187:15195	5199857	1	True				
ANR	5199996	ParameterType	char *		5199857	0					
ANR	5199997	Identifier	ptr		5199857	1					
ANR	5199998	Parameter	uint maxlen	513:53:15198:15208	5199857	2	True				
ANR	5199999	ParameterType	uint		5199857	0					
ANR	5200000	Identifier	maxlen		5199857	1					
ANR	5200001	CFGEntryNode	ENTRY		5199857		True				
ANR	5200002	CFGExitNode	EXIT		5199857		True				
ANR	5200003	Symbol	pgs_file_enum -> piodev -> procs		5199857						
ANR	5200004	Symbol	NULL		5199857						
ANR	5200005	Symbol	pgs_file_enum -> piodev -> dname		5199857						
ANR	5200006	Symbol	* pgs_file_enum -> piodev		5199857						
ANR	5200007	Symbol	pgs_file_enum -> pfile_enum		5199857						
ANR	5200008	Symbol	pfen		5199857						
ANR	5200009	Symbol	* pgs_file_enum		5199857						
ANR	5200010	Symbol	ptr		5199857						
ANR	5200011	Symbol	pgs_file_enum		5199857						
ANR	5200012	Symbol	pgs_file_enum -> piodev		5199857						
ANR	5200013	Symbol	iodev_name_len		5199857						
ANR	5200014	Symbol	strlen		5199857						
ANR	5200015	Symbol	~0		5199857						
ANR	5200016	Symbol	mem		5199857						
ANR	5200017	Symbol	* * pgs_file_enum		5199857						
ANR	5200018	Symbol	pgs_file_enum -> memory		5199857						
ANR	5200019	Symbol	pgs_file_enum -> prepend_iodev_name		5199857						
ANR	5200020	Symbol	maxlen		5199857						
ANR	5200021	Symbol	return_len		5199857						
ANR	5200022	Symbol	pgs_file_enum -> piodev -> procs . enumerate_next		5199857						
ANR	5200023	Function	gs_enumerate_files_close	540:0:16058:16356							
ANR	5200024	FunctionDef	gs_enumerate_files_close (file_enum * pfen)		5200023	0					
ANR	5200025	CompoundStatement		542:0:16106:16356	5200023	0					
ANR	5200026	IdentifierDeclStatement	gs_file_enum * pgs_file_enum = ( gs_file_enum * ) pfen ;	543:4:16112:16162	5200023	0	True				
ANR	5200027	IdentifierDecl	* pgs_file_enum = ( gs_file_enum * ) pfen		5200023	0					
ANR	5200028	IdentifierDeclType	gs_file_enum *		5200023	0					
ANR	5200029	Identifier	pgs_file_enum		5200023	1					
ANR	5200030	AssignmentExpression	* pgs_file_enum = ( gs_file_enum * ) pfen		5200023	2		=			
ANR	5200031	Identifier	pgs_file_enum		5200023	0					
ANR	5200032	CastExpression	( gs_file_enum * ) pfen		5200023	1					
ANR	5200033	CastTarget	gs_file_enum *		5200023	0					
ANR	5200034	Identifier	pfen		5200023	1					
ANR	5200035	IdentifierDeclStatement	gs_memory_t * mem = pgs_file_enum -> memory ;	544:4:16168:16208	5200023	1	True				
ANR	5200036	IdentifierDecl	* mem = pgs_file_enum -> memory		5200023	0					
ANR	5200037	IdentifierDeclType	gs_memory_t *		5200023	0					
ANR	5200038	Identifier	mem		5200023	1					
ANR	5200039	AssignmentExpression	* mem = pgs_file_enum -> memory		5200023	2		=			
ANR	5200040	Identifier	mem		5200023	0					
ANR	5200041	PtrMemberAccess	pgs_file_enum -> memory		5200023	1					
ANR	5200042	Identifier	pgs_file_enum		5200023	0					
ANR	5200043	Identifier	memory		5200023	1					
ANR	5200044	ExpressionStatement	pgs_file_enum -> piodev -> procs . enumerate_close ( pgs_file_enum -> pfile_enum )	546:4:16215:16286	5200023	2	True				
ANR	5200045	CallExpression	pgs_file_enum -> piodev -> procs . enumerate_close ( pgs_file_enum -> pfile_enum )		5200023	0					
ANR	5200046	Callee	pgs_file_enum -> piodev -> procs . enumerate_close		5200023	0					
ANR	5200047	MemberAccess	pgs_file_enum -> piodev -> procs . enumerate_close		5200023	0					
ANR	5200048	PtrMemberAccess	pgs_file_enum -> piodev -> procs		5200023	0					
ANR	5200049	PtrMemberAccess	pgs_file_enum -> piodev		5200023	0					
ANR	5200050	Identifier	pgs_file_enum		5200023	0					
ANR	5200051	Identifier	piodev		5200023	1					
ANR	5200052	Identifier	procs		5200023	1					
ANR	5200053	Identifier	enumerate_close		5200023	1					
ANR	5200054	ArgumentList	pgs_file_enum -> pfile_enum		5200023	1					
ANR	5200055	Argument	pgs_file_enum -> pfile_enum		5200023	0					
ANR	5200056	PtrMemberAccess	pgs_file_enum -> pfile_enum		5200023	0					
ANR	5200057	Identifier	pgs_file_enum		5200023	0					
ANR	5200058	Identifier	pfile_enum		5200023	1					
ANR	5200059	ExpressionStatement	"gs_free_object ( mem , pgs_file_enum , ""gs_enumerate_files_close"" )"	547:4:16292:16354	5200023	3	True				
ANR	5200060	CallExpression	"gs_free_object ( mem , pgs_file_enum , ""gs_enumerate_files_close"" )"		5200023	0					
ANR	5200061	Callee	gs_free_object		5200023	0					
ANR	5200062	Identifier	gs_free_object		5200023	0					
ANR	5200063	ArgumentList	mem		5200023	1					
ANR	5200064	Argument	mem		5200023	0					
ANR	5200065	Identifier	mem		5200023	0					
ANR	5200066	Argument	pgs_file_enum		5200023	1					
ANR	5200067	Identifier	pgs_file_enum		5200023	0					
ANR	5200068	Argument	"""gs_enumerate_files_close"""		5200023	2					
ANR	5200069	PrimaryExpression	"""gs_enumerate_files_close"""		5200023	0					
ANR	5200070	ReturnType	void		5200023	1					
ANR	5200071	Identifier	gs_enumerate_files_close		5200023	2					
ANR	5200072	ParameterList	file_enum * pfen		5200023	3					
ANR	5200073	Parameter	file_enum * pfen	541:25:16088:16103	5200023	0	True				
ANR	5200074	ParameterType	file_enum *		5200023	0					
ANR	5200075	Identifier	pfen		5200023	1					
ANR	5200076	CFGEntryNode	ENTRY		5200023		True				
ANR	5200077	CFGExitNode	EXIT		5200023		True				
ANR	5200078	Symbol	pgs_file_enum -> piodev		5200023						
ANR	5200079	Symbol	pgs_file_enum -> piodev -> procs		5200023						
ANR	5200080	Symbol	mem		5200023						
ANR	5200081	Symbol	* * pgs_file_enum		5200023						
ANR	5200082	Symbol	pgs_file_enum -> memory		5200023						
ANR	5200083	Symbol	* pgs_file_enum -> piodev		5200023						
ANR	5200084	Symbol	pgs_file_enum -> pfile_enum		5200023						
ANR	5200085	Symbol	pfen		5200023						
ANR	5200086	Symbol	* pgs_file_enum		5200023						
ANR	5200087	Symbol	pgs_file_enum		5200023						
