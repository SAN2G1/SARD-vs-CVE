command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3496586	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_gzip_inflate.c								
ANR	3496587	ClassDef	<unnamed>	12:8:273:969							
ANR	3496588	DeclStmt									
ANR	3496589	Decl									inflate_mode
ANR	3496590	ClassDef	internal_state	30:0:1000:1726							
ANR	3496591	DeclStmt									
ANR	3496592	Decl							inflate_mode	inflate_mode	mode
ANR	3496593	ClassDef	<unnamed>	36:2:1127:1458							
ANR	3496594	DeclStmt									
ANR	3496595	Decl							uInt	uInt	method
ANR	3496596	ClassDef	<unnamed>	38:4:1191:1327							
ANR	3496597	DeclStmt									
ANR	3496598	Decl							uLong	uLong	was
ANR	3496599	DeclStmt									
ANR	3496600	Decl							uLong	uLong	need
ANR	3496601	DeclStmt									
ANR	3496602	Decl									check
ANR	3496603	DeclStmt									
ANR	3496604	Decl							uInt	uInt	marker
ANR	3496605	DeclStmt									
ANR	3496606	Decl									sub
ANR	3496607	DeclStmt									
ANR	3496608	Decl							int	int	nowrap
ANR	3496609	DeclStmt									
ANR	3496610	Decl							uInt	uInt	wbits
ANR	3496611	DeclStmt									
ANR	3496612	Decl							inflate_blocks_statef	inflate_blocks_statef *	blocks
ANR	3496613	Function	inflateReset	54:13:1744:2067							
ANR	3496614	FunctionDef	inflateReset (z_streamp z)		3496613	0					
ANR	3496615	CompoundStatement		56:0:1781:2067	3496613	0					
ANR	3496616	IfStatement	if ( z == Z_NULL || z -> state == Z_NULL )		3496613	0					
ANR	3496617	Condition	z == Z_NULL || z -> state == Z_NULL	57:6:1789:1821	3496613	0	True				
ANR	3496618	OrExpression	z == Z_NULL || z -> state == Z_NULL		3496613	0		||			
ANR	3496619	EqualityExpression	z == Z_NULL		3496613	0		==			
ANR	3496620	Identifier	z		3496613	0					
ANR	3496621	Identifier	Z_NULL		3496613	1					
ANR	3496622	EqualityExpression	z -> state == Z_NULL		3496613	1		==			
ANR	3496623	PtrMemberAccess	z -> state		3496613	0					
ANR	3496624	Identifier	z		3496613	0					
ANR	3496625	Identifier	state		3496613	1					
ANR	3496626	Identifier	Z_NULL		3496613	1					
ANR	3496627	ReturnStatement	return Z_STREAM_ERROR ;	58:4:1828:1849	3496613	1	True				
ANR	3496628	Identifier	Z_STREAM_ERROR		3496613	0					
ANR	3496629	ExpressionStatement	z -> total_in = z -> total_out = 0	59:2:1853:1883	3496613	1	True				
ANR	3496630	AssignmentExpression	z -> total_in = z -> total_out = 0		3496613	0		=			
ANR	3496631	PtrMemberAccess	z -> total_in		3496613	0					
ANR	3496632	Identifier	z		3496613	0					
ANR	3496633	Identifier	total_in		3496613	1					
ANR	3496634	AssignmentExpression	z -> total_out = 0		3496613	1		=			
ANR	3496635	PtrMemberAccess	z -> total_out		3496613	0					
ANR	3496636	Identifier	z		3496613	0					
ANR	3496637	Identifier	total_out		3496613	1					
ANR	3496638	PrimaryExpression	0		3496613	1					
ANR	3496639	ExpressionStatement	z -> msg = Z_NULL	60:2:1887:1902	3496613	2	True				
ANR	3496640	AssignmentExpression	z -> msg = Z_NULL		3496613	0		=			
ANR	3496641	PtrMemberAccess	z -> msg		3496613	0					
ANR	3496642	Identifier	z		3496613	0					
ANR	3496643	Identifier	msg		3496613	1					
ANR	3496644	Identifier	Z_NULL		3496613	1					
ANR	3496645	ExpressionStatement	z -> state -> mode = z -> state -> nowrap ? BLOCKS : METHOD	61:2:1906:1957	3496613	3	True				
ANR	3496646	AssignmentExpression	z -> state -> mode = z -> state -> nowrap ? BLOCKS : METHOD		3496613	0		=			
ANR	3496647	PtrMemberAccess	z -> state -> mode		3496613	0					
ANR	3496648	PtrMemberAccess	z -> state		3496613	0					
ANR	3496649	Identifier	z		3496613	0					
ANR	3496650	Identifier	state		3496613	1					
ANR	3496651	Identifier	mode		3496613	1					
ANR	3496652	ConditionalExpression	z -> state -> nowrap ? BLOCKS : METHOD		3496613	1					
ANR	3496653	Condition	z -> state -> nowrap		3496613	0					
ANR	3496654	PtrMemberAccess	z -> state -> nowrap		3496613	0					
ANR	3496655	PtrMemberAccess	z -> state		3496613	0					
ANR	3496656	Identifier	z		3496613	0					
ANR	3496657	Identifier	state		3496613	1					
ANR	3496658	Identifier	nowrap		3496613	1					
ANR	3496659	Identifier	BLOCKS		3496613	1					
ANR	3496660	Identifier	METHOD		3496613	2					
ANR	3496661	ExpressionStatement	"inflate_blocks_reset ( z -> state -> blocks , z , Z_NULL )"	62:2:1961:2010	3496613	4	True				
ANR	3496662	CallExpression	"inflate_blocks_reset ( z -> state -> blocks , z , Z_NULL )"		3496613	0					
ANR	3496663	Callee	inflate_blocks_reset		3496613	0					
ANR	3496664	Identifier	inflate_blocks_reset		3496613	0					
ANR	3496665	ArgumentList	z -> state -> blocks		3496613	1					
ANR	3496666	Argument	z -> state -> blocks		3496613	0					
ANR	3496667	PtrMemberAccess	z -> state -> blocks		3496613	0					
ANR	3496668	PtrMemberAccess	z -> state		3496613	0					
ANR	3496669	Identifier	z		3496613	0					
ANR	3496670	Identifier	state		3496613	1					
ANR	3496671	Identifier	blocks		3496613	1					
ANR	3496672	Argument	z		3496613	1					
ANR	3496673	Identifier	z		3496613	0					
ANR	3496674	Argument	Z_NULL		3496613	2					
ANR	3496675	Identifier	Z_NULL		3496613	0					
ANR	3496676	ExpressionStatement	"Tracev ( ( stderr , ""inflate: reset\\n"" ) )"	63:2:2014:2050	3496613	5	True				
ANR	3496677	CallExpression	"Tracev ( ( stderr , ""inflate: reset\\n"" ) )"		3496613	0					
ANR	3496678	Callee	Tracev		3496613	0					
ANR	3496679	Identifier	Tracev		3496613	0					
ANR	3496680	ArgumentList	"stderr , ""inflate: reset\\n"""		3496613	1					
ANR	3496681	Argument	"stderr , ""inflate: reset\\n"""		3496613	0					
ANR	3496682	Expression	"stderr , ""inflate: reset\\n"""		3496613	0					
ANR	3496683	Identifier	stderr		3496613	0					
ANR	3496684	PrimaryExpression	"""inflate: reset\\n"""		3496613	1					
ANR	3496685	ReturnStatement	return Z_OK ;	64:2:2054:2065	3496613	6	True				
ANR	3496686	Identifier	Z_OK		3496613	0					
ANR	3496687	Identifier	inflateReset		3496613	1					
ANR	3496688	ParameterList	z_streamp z		3496613	2					
ANR	3496689	Parameter	z_streamp z	55:0:1767:1777	3496613	0	True				
ANR	3496690	ParameterType	z_streamp		3496613	0					
ANR	3496691	Identifier	z		3496613	1					
ANR	3496692	CFGEntryNode	ENTRY		3496613		True				
ANR	3496693	CFGExitNode	EXIT		3496613		True				
ANR	3496694	Symbol	Z_STREAM_ERROR		3496613						
ANR	3496695	Symbol	z -> total_in		3496613						
ANR	3496696	Symbol	z -> state		3496613						
ANR	3496697	Symbol	z -> msg		3496613						
ANR	3496698	Symbol	* z		3496613						
ANR	3496699	Symbol	Z_OK		3496613						
ANR	3496700	Symbol	z -> state -> nowrap		3496613						
ANR	3496701	Symbol	stderr		3496613						
ANR	3496702	Symbol	z -> total_out		3496613						
ANR	3496703	Symbol	* * z		3496613						
ANR	3496704	Symbol	BLOCKS		3496613						
ANR	3496705	Symbol	z -> state -> mode		3496613						
ANR	3496706	Symbol	* z -> state		3496613						
ANR	3496707	Symbol	METHOD		3496613						
ANR	3496708	Symbol	z		3496613						
ANR	3496709	Symbol	z -> state -> blocks		3496613						
ANR	3496710	Symbol	Z_NULL		3496613						
ANR	3496711	Function	inflateEnd	68:13:2084:2387							
ANR	3496712	FunctionDef	inflateEnd (z_streamp z)		3496711	0					
ANR	3496713	CompoundStatement		70:0:2119:2387	3496711	0					
ANR	3496714	IfStatement	if ( z == Z_NULL || z -> state == Z_NULL || z -> zfree == Z_NULL )		3496711	0					
ANR	3496715	Condition	z == Z_NULL || z -> state == Z_NULL || z -> zfree == Z_NULL	71:6:2127:2181	3496711	0	True				
ANR	3496716	OrExpression	z == Z_NULL || z -> state == Z_NULL || z -> zfree == Z_NULL		3496711	0		||			
ANR	3496717	EqualityExpression	z == Z_NULL		3496711	0		==			
ANR	3496718	Identifier	z		3496711	0					
ANR	3496719	Identifier	Z_NULL		3496711	1					
ANR	3496720	OrExpression	z -> state == Z_NULL || z -> zfree == Z_NULL		3496711	1		||			
ANR	3496721	EqualityExpression	z -> state == Z_NULL		3496711	0		==			
ANR	3496722	PtrMemberAccess	z -> state		3496711	0					
ANR	3496723	Identifier	z		3496711	0					
ANR	3496724	Identifier	state		3496711	1					
ANR	3496725	Identifier	Z_NULL		3496711	1					
ANR	3496726	EqualityExpression	z -> zfree == Z_NULL		3496711	1		==			
ANR	3496727	PtrMemberAccess	z -> zfree		3496711	0					
ANR	3496728	Identifier	z		3496711	0					
ANR	3496729	Identifier	zfree		3496711	1					
ANR	3496730	Identifier	Z_NULL		3496711	1					
ANR	3496731	ReturnStatement	return Z_STREAM_ERROR ;	72:4:2188:2209	3496711	1	True				
ANR	3496732	Identifier	Z_STREAM_ERROR		3496711	0					
ANR	3496733	IfStatement	if ( z -> state -> blocks != Z_NULL )		3496711	1					
ANR	3496734	Condition	z -> state -> blocks != Z_NULL	73:6:2217:2242	3496711	0	True				
ANR	3496735	EqualityExpression	z -> state -> blocks != Z_NULL		3496711	0		!=			
ANR	3496736	PtrMemberAccess	z -> state -> blocks		3496711	0					
ANR	3496737	PtrMemberAccess	z -> state		3496711	0					
ANR	3496738	Identifier	z		3496711	0					
ANR	3496739	Identifier	state		3496711	1					
ANR	3496740	Identifier	blocks		3496711	1					
ANR	3496741	Identifier	Z_NULL		3496711	1					
ANR	3496742	ExpressionStatement	"inflate_blocks_free ( z -> state -> blocks , z )"	74:4:2249:2289	3496711	1	True				
ANR	3496743	CallExpression	"inflate_blocks_free ( z -> state -> blocks , z )"		3496711	0					
ANR	3496744	Callee	inflate_blocks_free		3496711	0					
ANR	3496745	Identifier	inflate_blocks_free		3496711	0					
ANR	3496746	ArgumentList	z -> state -> blocks		3496711	1					
ANR	3496747	Argument	z -> state -> blocks		3496711	0					
ANR	3496748	PtrMemberAccess	z -> state -> blocks		3496711	0					
ANR	3496749	PtrMemberAccess	z -> state		3496711	0					
ANR	3496750	Identifier	z		3496711	0					
ANR	3496751	Identifier	state		3496711	1					
ANR	3496752	Identifier	blocks		3496711	1					
ANR	3496753	Argument	z		3496711	1					
ANR	3496754	Identifier	z		3496711	0					
ANR	3496755	ExpressionStatement	"ZFREE ( z , z -> state )"	75:2:2293:2311	3496711	2	True				
ANR	3496756	CallExpression	"ZFREE ( z , z -> state )"		3496711	0					
ANR	3496757	Callee	ZFREE		3496711	0					
ANR	3496758	Identifier	ZFREE		3496711	0					
ANR	3496759	ArgumentList	z		3496711	1					
ANR	3496760	Argument	z		3496711	0					
ANR	3496761	Identifier	z		3496711	0					
ANR	3496762	Argument	z -> state		3496711	1					
ANR	3496763	PtrMemberAccess	z -> state		3496711	0					
ANR	3496764	Identifier	z		3496711	0					
ANR	3496765	Identifier	state		3496711	1					
ANR	3496766	ExpressionStatement	z -> state = Z_NULL	76:2:2315:2332	3496711	3	True				
ANR	3496767	AssignmentExpression	z -> state = Z_NULL		3496711	0		=			
ANR	3496768	PtrMemberAccess	z -> state		3496711	0					
ANR	3496769	Identifier	z		3496711	0					
ANR	3496770	Identifier	state		3496711	1					
ANR	3496771	Identifier	Z_NULL		3496711	1					
ANR	3496772	ExpressionStatement	"Tracev ( ( stderr , ""inflate: end\\n"" ) )"	77:2:2336:2370	3496711	4	True				
ANR	3496773	CallExpression	"Tracev ( ( stderr , ""inflate: end\\n"" ) )"		3496711	0					
ANR	3496774	Callee	Tracev		3496711	0					
ANR	3496775	Identifier	Tracev		3496711	0					
ANR	3496776	ArgumentList	"stderr , ""inflate: end\\n"""		3496711	1					
ANR	3496777	Argument	"stderr , ""inflate: end\\n"""		3496711	0					
ANR	3496778	Expression	"stderr , ""inflate: end\\n"""		3496711	0					
ANR	3496779	Identifier	stderr		3496711	0					
ANR	3496780	PrimaryExpression	"""inflate: end\\n"""		3496711	1					
ANR	3496781	ReturnStatement	return Z_OK ;	78:2:2374:2385	3496711	5	True				
ANR	3496782	Identifier	Z_OK		3496711	0					
ANR	3496783	Identifier	inflateEnd		3496711	1					
ANR	3496784	ParameterList	z_streamp z		3496711	2					
ANR	3496785	Parameter	z_streamp z	69:0:2105:2115	3496711	0	True				
ANR	3496786	ParameterType	z_streamp		3496711	0					
ANR	3496787	Identifier	z		3496711	1					
ANR	3496788	CFGEntryNode	ENTRY		3496711		True				
ANR	3496789	CFGExitNode	EXIT		3496711		True				
ANR	3496790	Symbol	Z_STREAM_ERROR		3496711						
ANR	3496791	Symbol	* * z		3496711						
ANR	3496792	Symbol	z -> state		3496711						
ANR	3496793	Symbol	* z		3496711						
ANR	3496794	Symbol	* z -> state		3496711						
ANR	3496795	Symbol	z		3496711						
ANR	3496796	Symbol	z -> zfree		3496711						
ANR	3496797	Symbol	z -> state -> blocks		3496711						
ANR	3496798	Symbol	Z_OK		3496711						
ANR	3496799	Symbol	stderr		3496711						
ANR	3496800	Symbol	Z_NULL		3496711						
ANR	3496801	Function	inflateInit2_	82:13:2404:3622							
ANR	3496802	FunctionDef	"inflateInit2_ (z_streamp z , int w , const char * version , int stream_size)"		3496801	0					
ANR	3496803	CompoundStatement		87:0:2512:3622	3496801	0					
ANR	3496804	IfStatement	if ( version == Z_NULL || version [ 0 ] != ZLIB_VERSION [ 0 ] || stream_size != sizeof ( z_stream ) )		3496801	0					
ANR	3496805	Condition	version == Z_NULL || version [ 0 ] != ZLIB_VERSION [ 0 ] || stream_size != sizeof ( z_stream )	88:6:2520:2610	3496801	0	True				
ANR	3496806	OrExpression	version == Z_NULL || version [ 0 ] != ZLIB_VERSION [ 0 ] || stream_size != sizeof ( z_stream )		3496801	0		||			
ANR	3496807	EqualityExpression	version == Z_NULL		3496801	0		==			
ANR	3496808	Identifier	version		3496801	0					
ANR	3496809	Identifier	Z_NULL		3496801	1					
ANR	3496810	OrExpression	version [ 0 ] != ZLIB_VERSION [ 0 ] || stream_size != sizeof ( z_stream )		3496801	1		||			
ANR	3496811	EqualityExpression	version [ 0 ] != ZLIB_VERSION [ 0 ]		3496801	0		!=			
ANR	3496812	ArrayIndexing	version [ 0 ]		3496801	0					
ANR	3496813	Identifier	version		3496801	0					
ANR	3496814	PrimaryExpression	0		3496801	1					
ANR	3496815	ArrayIndexing	ZLIB_VERSION [ 0 ]		3496801	1					
ANR	3496816	Identifier	ZLIB_VERSION		3496801	0					
ANR	3496817	PrimaryExpression	0		3496801	1					
ANR	3496818	EqualityExpression	stream_size != sizeof ( z_stream )		3496801	1		!=			
ANR	3496819	Identifier	stream_size		3496801	0					
ANR	3496820	SizeofExpression	sizeof ( z_stream )		3496801	1					
ANR	3496821	Sizeof	sizeof		3496801	0					
ANR	3496822	SizeofOperand	z_stream		3496801	1					
ANR	3496823	ReturnStatement	return Z_VERSION_ERROR ;	90:6:2619:2641	3496801	1	True				
ANR	3496824	Identifier	Z_VERSION_ERROR		3496801	0					
ANR	3496825	IfStatement	if ( z == Z_NULL )		3496801	1					
ANR	3496826	Condition	z == Z_NULL	93:6:2675:2685	3496801	0	True				
ANR	3496827	EqualityExpression	z == Z_NULL		3496801	0		==			
ANR	3496828	Identifier	z		3496801	0					
ANR	3496829	Identifier	Z_NULL		3496801	1					
ANR	3496830	ReturnStatement	return Z_STREAM_ERROR ;	94:4:2692:2713	3496801	1	True				
ANR	3496831	Identifier	Z_STREAM_ERROR		3496801	0					
ANR	3496832	ExpressionStatement	z -> msg = Z_NULL	95:2:2717:2732	3496801	2	True				
ANR	3496833	AssignmentExpression	z -> msg = Z_NULL		3496801	0		=			
ANR	3496834	PtrMemberAccess	z -> msg		3496801	0					
ANR	3496835	Identifier	z		3496801	0					
ANR	3496836	Identifier	msg		3496801	1					
ANR	3496837	Identifier	Z_NULL		3496801	1					
ANR	3496838	IfStatement	if ( z -> zalloc == Z_NULL )		3496801	3					
ANR	3496839	Condition	z -> zalloc == Z_NULL	96:6:2740:2758	3496801	0	True				
ANR	3496840	EqualityExpression	z -> zalloc == Z_NULL		3496801	0		==			
ANR	3496841	PtrMemberAccess	z -> zalloc		3496801	0					
ANR	3496842	Identifier	z		3496801	0					
ANR	3496843	Identifier	zalloc		3496801	1					
ANR	3496844	Identifier	Z_NULL		3496801	1					
ANR	3496845	CompoundStatement		11:2:250:250	3496801	1					
ANR	3496846	ExpressionStatement	z -> zalloc = zcalloc	98:4:2769:2788	3496801	0	True				
ANR	3496847	AssignmentExpression	z -> zalloc = zcalloc		3496801	0		=			
ANR	3496848	PtrMemberAccess	z -> zalloc		3496801	0					
ANR	3496849	Identifier	z		3496801	0					
ANR	3496850	Identifier	zalloc		3496801	1					
ANR	3496851	Identifier	zcalloc		3496801	1					
ANR	3496852	ExpressionStatement	z -> opaque = ( voidpf ) 0	99:4:2794:2815	3496801	1	True				
ANR	3496853	AssignmentExpression	z -> opaque = ( voidpf ) 0		3496801	0		=			
ANR	3496854	PtrMemberAccess	z -> opaque		3496801	0					
ANR	3496855	Identifier	z		3496801	0					
ANR	3496856	Identifier	opaque		3496801	1					
ANR	3496857	CastExpression	( voidpf ) 0		3496801	1					
ANR	3496858	CastTarget	voidpf		3496801	0					
ANR	3496859	PrimaryExpression	0		3496801	1					
ANR	3496860	IfStatement	if ( z -> zfree == Z_NULL )		3496801	4					
ANR	3496861	Condition	z -> zfree == Z_NULL	101:6:2827:2844	3496801	0	True				
ANR	3496862	EqualityExpression	z -> zfree == Z_NULL		3496801	0		==			
ANR	3496863	PtrMemberAccess	z -> zfree		3496801	0					
ANR	3496864	Identifier	z		3496801	0					
ANR	3496865	Identifier	zfree		3496801	1					
ANR	3496866	Identifier	Z_NULL		3496801	1					
ANR	3496867	ExpressionStatement	z -> zfree = zcfree	101:26:2847:2864	3496801	1	True				
ANR	3496868	AssignmentExpression	z -> zfree = zcfree		3496801	0		=			
ANR	3496869	PtrMemberAccess	z -> zfree		3496801	0					
ANR	3496870	Identifier	z		3496801	0					
ANR	3496871	Identifier	zfree		3496801	1					
ANR	3496872	Identifier	zcfree		3496801	1					
ANR	3496873	IfStatement	"if ( ( z -> state = ( struct internal_state FAR * ) ZALLOC ( z , 1 , sizeof ( struct internal_state ) ) ) == Z_NULL )"		3496801	5					
ANR	3496874	Condition	"( z -> state = ( struct internal_state FAR * ) ZALLOC ( z , 1 , sizeof ( struct internal_state ) ) ) == Z_NULL"	102:6:2872:2972	3496801	0	True				
ANR	3496875	EqualityExpression	"( z -> state = ( struct internal_state FAR * ) ZALLOC ( z , 1 , sizeof ( struct internal_state ) ) ) == Z_NULL"		3496801	0		==			
ANR	3496876	AssignmentExpression	"z -> state = ( struct internal_state FAR * ) ZALLOC ( z , 1 , sizeof ( struct internal_state ) )"		3496801	0		=			
ANR	3496877	PtrMemberAccess	z -> state		3496801	0					
ANR	3496878	Identifier	z		3496801	0					
ANR	3496879	Identifier	state		3496801	1					
ANR	3496880	CastExpression	"( struct internal_state FAR * ) ZALLOC ( z , 1 , sizeof ( struct internal_state ) )"		3496801	1					
ANR	3496881	CastTarget	struct internal_state FAR *		3496801	0					
ANR	3496882	CallExpression	"ZALLOC ( z , 1 , sizeof ( struct internal_state ) )"		3496801	1					
ANR	3496883	Callee	ZALLOC		3496801	0					
ANR	3496884	Identifier	ZALLOC		3496801	0					
ANR	3496885	ArgumentList	z		3496801	1					
ANR	3496886	Argument	z		3496801	0					
ANR	3496887	Identifier	z		3496801	0					
ANR	3496888	Argument	1		3496801	1					
ANR	3496889	PrimaryExpression	1		3496801	0					
ANR	3496890	Argument	sizeof ( struct internal_state )		3496801	2					
ANR	3496891	SizeofExpression	sizeof ( struct internal_state )		3496801	0					
ANR	3496892	Sizeof	sizeof		3496801	0					
ANR	3496893	SizeofOperand	struct internal_state		3496801	1					
ANR	3496894	Identifier	Z_NULL		3496801	1					
ANR	3496895	ReturnStatement	return Z_MEM_ERROR ;	104:4:2979:2997	3496801	1	True				
ANR	3496896	Identifier	Z_MEM_ERROR		3496801	0					
ANR	3496897	ExpressionStatement	z -> state -> blocks = Z_NULL	105:2:3001:3026	3496801	6	True				
ANR	3496898	AssignmentExpression	z -> state -> blocks = Z_NULL		3496801	0		=			
ANR	3496899	PtrMemberAccess	z -> state -> blocks		3496801	0					
ANR	3496900	PtrMemberAccess	z -> state		3496801	0					
ANR	3496901	Identifier	z		3496801	0					
ANR	3496902	Identifier	state		3496801	1					
ANR	3496903	Identifier	blocks		3496801	1					
ANR	3496904	Identifier	Z_NULL		3496801	1					
ANR	3496905	ExpressionStatement	z -> state -> nowrap = 0	108:2:3099:3119	3496801	7	True				
ANR	3496906	AssignmentExpression	z -> state -> nowrap = 0		3496801	0		=			
ANR	3496907	PtrMemberAccess	z -> state -> nowrap		3496801	0					
ANR	3496908	PtrMemberAccess	z -> state		3496801	0					
ANR	3496909	Identifier	z		3496801	0					
ANR	3496910	Identifier	state		3496801	1					
ANR	3496911	Identifier	nowrap		3496801	1					
ANR	3496912	PrimaryExpression	0		3496801	1					
ANR	3496913	IfStatement	if ( w < 0 )		3496801	8					
ANR	3496914	Condition	w < 0	109:6:3127:3131	3496801	0	True				
ANR	3496915	RelationalExpression	w < 0		3496801	0		<			
ANR	3496916	Identifier	w		3496801	0					
ANR	3496917	PrimaryExpression	0		3496801	1					
ANR	3496918	CompoundStatement		24:2:623:623	3496801	1					
ANR	3496919	ExpressionStatement	w = - w	111:4:3142:3149	3496801	0	True				
ANR	3496920	AssignmentExpression	w = - w		3496801	0		=			
ANR	3496921	Identifier	w		3496801	0					
ANR	3496922	UnaryOperationExpression	- w		3496801	1					
ANR	3496923	UnaryOperator	-		3496801	0					
ANR	3496924	Identifier	w		3496801	1					
ANR	3496925	ExpressionStatement	z -> state -> nowrap = 1	112:4:3155:3175	3496801	1	True				
ANR	3496926	AssignmentExpression	z -> state -> nowrap = 1		3496801	0		=			
ANR	3496927	PtrMemberAccess	z -> state -> nowrap		3496801	0					
ANR	3496928	PtrMemberAccess	z -> state		3496801	0					
ANR	3496929	Identifier	z		3496801	0					
ANR	3496930	Identifier	state		3496801	1					
ANR	3496931	Identifier	nowrap		3496801	1					
ANR	3496932	PrimaryExpression	1		3496801	1					
ANR	3496933	IfStatement	if ( w < 8 || w > 15 )		3496801	9					
ANR	3496934	Condition	w < 8 || w > 15	116:6:3212:3226	3496801	0	True				
ANR	3496935	OrExpression	w < 8 || w > 15		3496801	0		||			
ANR	3496936	RelationalExpression	w < 8		3496801	0		<			
ANR	3496937	Identifier	w		3496801	0					
ANR	3496938	PrimaryExpression	8		3496801	1					
ANR	3496939	RelationalExpression	w > 15		3496801	1		>			
ANR	3496940	Identifier	w		3496801	0					
ANR	3496941	PrimaryExpression	15		3496801	1					
ANR	3496942	CompoundStatement		31:2:718:718	3496801	1					
ANR	3496943	ExpressionStatement	inflateEnd ( z )	118:4:3237:3250	3496801	0	True				
ANR	3496944	CallExpression	inflateEnd ( z )		3496801	0					
ANR	3496945	Callee	inflateEnd		3496801	0					
ANR	3496946	Identifier	inflateEnd		3496801	0					
ANR	3496947	ArgumentList	z		3496801	1					
ANR	3496948	Argument	z		3496801	0					
ANR	3496949	Identifier	z		3496801	0					
ANR	3496950	ReturnStatement	return Z_STREAM_ERROR ;	119:4:3256:3277	3496801	1	True				
ANR	3496951	Identifier	Z_STREAM_ERROR		3496801	0					
ANR	3496952	ExpressionStatement	z -> state -> wbits = ( uInt ) w	121:2:3285:3310	3496801	10	True				
ANR	3496953	AssignmentExpression	z -> state -> wbits = ( uInt ) w		3496801	0		=			
ANR	3496954	PtrMemberAccess	z -> state -> wbits		3496801	0					
ANR	3496955	PtrMemberAccess	z -> state		3496801	0					
ANR	3496956	Identifier	z		3496801	0					
ANR	3496957	Identifier	state		3496801	1					
ANR	3496958	Identifier	wbits		3496801	1					
ANR	3496959	CastExpression	( uInt ) w		3496801	1					
ANR	3496960	CastTarget	uInt		3496801	0					
ANR	3496961	Identifier	w		3496801	1					
ANR	3496962	IfStatement	"if ( ( z -> state -> blocks = inflate_blocks_new ( z , z -> state -> nowrap ? Z_NULL : adler32 , ( uInt ) 1 << w ) ) == Z_NULL )"		3496801	11					
ANR	3496963	Condition	"( z -> state -> blocks = inflate_blocks_new ( z , z -> state -> nowrap ? Z_NULL : adler32 , ( uInt ) 1 << w ) ) == Z_NULL"	124:6:3355:3469	3496801	0	True				
ANR	3496964	EqualityExpression	"( z -> state -> blocks = inflate_blocks_new ( z , z -> state -> nowrap ? Z_NULL : adler32 , ( uInt ) 1 << w ) ) == Z_NULL"		3496801	0		==			
ANR	3496965	AssignmentExpression	"z -> state -> blocks = inflate_blocks_new ( z , z -> state -> nowrap ? Z_NULL : adler32 , ( uInt ) 1 << w )"		3496801	0		=			
ANR	3496966	PtrMemberAccess	z -> state -> blocks		3496801	0					
ANR	3496967	PtrMemberAccess	z -> state		3496801	0					
ANR	3496968	Identifier	z		3496801	0					
ANR	3496969	Identifier	state		3496801	1					
ANR	3496970	Identifier	blocks		3496801	1					
ANR	3496971	CallExpression	"inflate_blocks_new ( z , z -> state -> nowrap ? Z_NULL : adler32 , ( uInt ) 1 << w )"		3496801	1					
ANR	3496972	Callee	inflate_blocks_new		3496801	0					
ANR	3496973	Identifier	inflate_blocks_new		3496801	0					
ANR	3496974	ArgumentList	z		3496801	1					
ANR	3496975	Argument	z		3496801	0					
ANR	3496976	Identifier	z		3496801	0					
ANR	3496977	Argument	z -> state -> nowrap ? Z_NULL : adler32		3496801	1					
ANR	3496978	ConditionalExpression	z -> state -> nowrap ? Z_NULL : adler32		3496801	0					
ANR	3496979	Condition	z -> state -> nowrap		3496801	0					
ANR	3496980	PtrMemberAccess	z -> state -> nowrap		3496801	0					
ANR	3496981	PtrMemberAccess	z -> state		3496801	0					
ANR	3496982	Identifier	z		3496801	0					
ANR	3496983	Identifier	state		3496801	1					
ANR	3496984	Identifier	nowrap		3496801	1					
ANR	3496985	Identifier	Z_NULL		3496801	1					
ANR	3496986	Identifier	adler32		3496801	2					
ANR	3496987	Argument	( uInt ) 1 << w		3496801	2					
ANR	3496988	ShiftExpression	( uInt ) 1 << w		3496801	0		<<			
ANR	3496989	CastExpression	( uInt ) 1		3496801	0					
ANR	3496990	CastTarget	uInt		3496801	0					
ANR	3496991	PrimaryExpression	1		3496801	1					
ANR	3496992	Identifier	w		3496801	1					
ANR	3496993	Identifier	Z_NULL		3496801	1					
ANR	3496994	CompoundStatement		41:2:961:961	3496801	1					
ANR	3496995	ExpressionStatement	inflateEnd ( z )	128:4:3480:3493	3496801	0	True				
ANR	3496996	CallExpression	inflateEnd ( z )		3496801	0					
ANR	3496997	Callee	inflateEnd		3496801	0					
ANR	3496998	Identifier	inflateEnd		3496801	0					
ANR	3496999	ArgumentList	z		3496801	1					
ANR	3497000	Argument	z		3496801	0					
ANR	3497001	Identifier	z		3496801	0					
ANR	3497002	ReturnStatement	return Z_MEM_ERROR ;	129:4:3499:3517	3496801	1	True				
ANR	3497003	Identifier	Z_MEM_ERROR		3496801	0					
ANR	3497004	ExpressionStatement	"Tracev ( ( stderr , ""inflate: allocated\\n"" ) )"	131:2:3525:3565	3496801	12	True				
ANR	3497005	CallExpression	"Tracev ( ( stderr , ""inflate: allocated\\n"" ) )"		3496801	0					
ANR	3497006	Callee	Tracev		3496801	0					
ANR	3497007	Identifier	Tracev		3496801	0					
ANR	3497008	ArgumentList	"stderr , ""inflate: allocated\\n"""		3496801	1					
ANR	3497009	Argument	"stderr , ""inflate: allocated\\n"""		3496801	0					
ANR	3497010	Expression	"stderr , ""inflate: allocated\\n"""		3496801	0					
ANR	3497011	Identifier	stderr		3496801	0					
ANR	3497012	PrimaryExpression	"""inflate: allocated\\n"""		3496801	1					
ANR	3497013	ExpressionStatement	inflateReset ( z )	134:2:3590:3605	3496801	13	True				
ANR	3497014	CallExpression	inflateReset ( z )		3496801	0					
ANR	3497015	Callee	inflateReset		3496801	0					
ANR	3497016	Identifier	inflateReset		3496801	0					
ANR	3497017	ArgumentList	z		3496801	1					
ANR	3497018	Argument	z		3496801	0					
ANR	3497019	Identifier	z		3496801	0					
ANR	3497020	ReturnStatement	return Z_OK ;	135:2:3609:3620	3496801	14	True				
ANR	3497021	Identifier	Z_OK		3496801	0					
ANR	3497022	Identifier	inflateInit2_		3496801	1					
ANR	3497023	ParameterList	"z_streamp z , int w , const char * version , int stream_size"		3496801	2					
ANR	3497024	Parameter	z_streamp z	83:0:2453:2463	3496801	0	True				
ANR	3497025	ParameterType	z_streamp		3496801	0					
ANR	3497026	Identifier	z		3496801	1					
ANR	3497027	Parameter	int w	84:0:2466:2470	3496801	1	True				
ANR	3497028	ParameterType	int		3496801	0					
ANR	3497029	Identifier	w		3496801	1					
ANR	3497030	Parameter	const char * version	85:0:2473:2491	3496801	2	True				
ANR	3497031	ParameterType	const char *		3496801	0					
ANR	3497032	Identifier	version		3496801	1					
ANR	3497033	Parameter	int stream_size	86:0:2494:2508	3496801	3	True				
ANR	3497034	ParameterType	int		3496801	0					
ANR	3497035	Identifier	stream_size		3496801	1					
ANR	3497036	CFGEntryNode	ENTRY		3496801		True				
ANR	3497037	CFGExitNode	EXIT		3496801		True				
ANR	3497038	Symbol	Z_STREAM_ERROR		3496801						
ANR	3497039	Symbol	inflate_blocks_new		3496801						
ANR	3497040	Symbol	z -> state		3496801						
ANR	3497041	Symbol	* z		3496801						
ANR	3497042	Symbol	Z_MEM_ERROR		3496801						
ANR	3497043	Symbol	zcfree		3496801						
ANR	3497044	Symbol	Z_OK		3496801						
ANR	3497045	Symbol	z -> opaque		3496801						
ANR	3497046	Symbol	* * z		3496801						
ANR	3497047	Symbol	z -> state -> wbits		3496801						
ANR	3497048	Symbol	zcalloc		3496801						
ANR	3497049	Symbol	z -> zalloc		3496801						
ANR	3497050	Symbol	stream_size		3496801						
ANR	3497051	Symbol	Z_VERSION_ERROR		3496801						
ANR	3497052	Symbol	z -> msg		3496801						
ANR	3497053	Symbol	z -> state -> nowrap		3496801						
ANR	3497054	Symbol	stderr		3496801						
ANR	3497055	Symbol	version		3496801						
ANR	3497056	Symbol	ZALLOC		3496801						
ANR	3497057	Symbol	* version		3496801						
ANR	3497058	Symbol	w		3496801						
ANR	3497059	Symbol	adler32		3496801						
ANR	3497060	Symbol	* z -> state		3496801						
ANR	3497061	Symbol	* ZLIB_VERSION		3496801						
ANR	3497062	Symbol	z		3496801						
ANR	3497063	Symbol	z -> zfree		3496801						
ANR	3497064	Symbol	ZLIB_VERSION		3496801						
ANR	3497065	Symbol	z -> state -> blocks		3496801						
ANR	3497066	Symbol	Z_NULL		3496801						
ANR	3497067	Function	inflate	147:13:3789:7274							
ANR	3497068	FunctionDef	"inflate (z_streamp z , int f)"		3497067	0					
ANR	3497069	CompoundStatement		150:0:3831:7274	3497067	0					
ANR	3497070	IdentifierDeclStatement	int r ;	151:2:3835:3840	3497067	0	True				
ANR	3497071	IdentifierDecl	r		3497067	0					
ANR	3497072	IdentifierDeclType	int		3497067	0					
ANR	3497073	Identifier	r		3497067	1					
ANR	3497074	IdentifierDeclStatement	uInt b ;	152:2:3844:3850	3497067	1	True				
ANR	3497075	IdentifierDecl	b		3497067	0					
ANR	3497076	IdentifierDeclType	uInt		3497067	0					
ANR	3497077	Identifier	b		3497067	1					
ANR	3497078	IfStatement	if ( z == Z_NULL || z -> state == Z_NULL || z -> next_in == Z_NULL )		3497067	2					
ANR	3497079	Condition	z == Z_NULL || z -> state == Z_NULL || z -> next_in == Z_NULL	154:6:3859:3915	3497067	0	True				
ANR	3497080	OrExpression	z == Z_NULL || z -> state == Z_NULL || z -> next_in == Z_NULL		3497067	0		||			
ANR	3497081	EqualityExpression	z == Z_NULL		3497067	0		==			
ANR	3497082	Identifier	z		3497067	0					
ANR	3497083	Identifier	Z_NULL		3497067	1					
ANR	3497084	OrExpression	z -> state == Z_NULL || z -> next_in == Z_NULL		3497067	1		||			
ANR	3497085	EqualityExpression	z -> state == Z_NULL		3497067	0		==			
ANR	3497086	PtrMemberAccess	z -> state		3497067	0					
ANR	3497087	Identifier	z		3497067	0					
ANR	3497088	Identifier	state		3497067	1					
ANR	3497089	Identifier	Z_NULL		3497067	1					
ANR	3497090	EqualityExpression	z -> next_in == Z_NULL		3497067	1		==			
ANR	3497091	PtrMemberAccess	z -> next_in		3497067	0					
ANR	3497092	Identifier	z		3497067	0					
ANR	3497093	Identifier	next_in		3497067	1					
ANR	3497094	Identifier	Z_NULL		3497067	1					
ANR	3497095	ReturnStatement	return Z_STREAM_ERROR ;	155:4:3922:3943	3497067	1	True				
ANR	3497096	Identifier	Z_STREAM_ERROR		3497067	0					
ANR	3497097	ExpressionStatement	f = f == Z_FINISH ? Z_BUF_ERROR : Z_OK	156:2:3947:3985	3497067	3	True				
ANR	3497098	AssignmentExpression	f = f == Z_FINISH ? Z_BUF_ERROR : Z_OK		3497067	0		=			
ANR	3497099	Identifier	f		3497067	0					
ANR	3497100	ConditionalExpression	f == Z_FINISH ? Z_BUF_ERROR : Z_OK		3497067	1					
ANR	3497101	Condition	f == Z_FINISH		3497067	0					
ANR	3497102	EqualityExpression	f == Z_FINISH		3497067	0		==			
ANR	3497103	Identifier	f		3497067	0					
ANR	3497104	Identifier	Z_FINISH		3497067	1					
ANR	3497105	Identifier	Z_BUF_ERROR		3497067	1					
ANR	3497106	Identifier	Z_OK		3497067	2					
ANR	3497107	ExpressionStatement	r = Z_BUF_ERROR	157:2:3989:4004	3497067	4	True				
ANR	3497108	AssignmentExpression	r = Z_BUF_ERROR		3497067	0		=			
ANR	3497109	Identifier	r		3497067	0					
ANR	3497110	Identifier	Z_BUF_ERROR		3497067	1					
ANR	3497111	WhileStatement	while ( 1 )		3497067	5					
ANR	3497112	Condition	1	158:9:4015:4015	3497067	0	True				
ANR	3497113	PrimaryExpression	1		3497067	0					
ANR	3497114	SwitchStatement	switch ( z -> state -> mode )		3497067	1					
ANR	3497115	Condition	z -> state -> mode	158:20:4026:4039	3497067	0	True				
ANR	3497116	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497117	PtrMemberAccess	z -> state		3497067	0					
ANR	3497118	Identifier	z		3497067	0					
ANR	3497119	Identifier	state		3497067	1					
ANR	3497120	Identifier	mode		3497067	1					
ANR	3497121	CompoundStatement		29:6:783:810	3497067	1					
ANR	3497122	Label	case METHOD :	160:4:4050:4061	3497067	0	True				
ANR	3497123	Identifier	METHOD		3497067	0					
ANR	3497124	Statement	NEEDBYTE	161:6:4069:4076	3497067	1	True				
ANR	3497125	IfStatement	if ( ( ( z -> state -> sub . method = NEXTBYTE ) & 0xf ) != Z_DEFLATED )		3497067	2					
ANR	3497126	Condition	( ( z -> state -> sub . method = NEXTBYTE ) & 0xf ) != Z_DEFLATED	162:10:4088:4142	3497067	0	True				
ANR	3497127	EqualityExpression	( ( z -> state -> sub . method = NEXTBYTE ) & 0xf ) != Z_DEFLATED		3497067	0		!=			
ANR	3497128	BitAndExpression	( z -> state -> sub . method = NEXTBYTE ) & 0xf		3497067	0		&			
ANR	3497129	AssignmentExpression	z -> state -> sub . method = NEXTBYTE		3497067	0		=			
ANR	3497130	MemberAccess	z -> state -> sub . method		3497067	0					
ANR	3497131	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497132	PtrMemberAccess	z -> state		3497067	0					
ANR	3497133	Identifier	z		3497067	0					
ANR	3497134	Identifier	state		3497067	1					
ANR	3497135	Identifier	sub		3497067	1					
ANR	3497136	Identifier	method		3497067	1					
ANR	3497137	Identifier	NEXTBYTE		3497067	1					
ANR	3497138	PrimaryExpression	0xf		3497067	1					
ANR	3497139	Identifier	Z_DEFLATED		3497067	1					
ANR	3497140	CompoundStatement		14:6:319:319	3497067	1					
ANR	3497141	ExpressionStatement	z -> state -> mode = BAD	164:8:4161:4181	3497067	0	True				
ANR	3497142	AssignmentExpression	z -> state -> mode = BAD		3497067	0		=			
ANR	3497143	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497144	PtrMemberAccess	z -> state		3497067	0					
ANR	3497145	Identifier	z		3497067	0					
ANR	3497146	Identifier	state		3497067	1					
ANR	3497147	Identifier	mode		3497067	1					
ANR	3497148	Identifier	BAD		3497067	1					
ANR	3497149	ExpressionStatement	"z -> msg = ( char * ) ""unknown compression method"""	165:8:4191:4235	3497067	1	True				
ANR	3497150	AssignmentExpression	"z -> msg = ( char * ) ""unknown compression method"""		3497067	0		=			
ANR	3497151	PtrMemberAccess	z -> msg		3497067	0					
ANR	3497152	Identifier	z		3497067	0					
ANR	3497153	Identifier	msg		3497067	1					
ANR	3497154	CastExpression	"( char * ) ""unknown compression method"""		3497067	1					
ANR	3497155	CastTarget	char *		3497067	0					
ANR	3497156	PrimaryExpression	"""unknown compression method"""		3497067	1					
ANR	3497157	ExpressionStatement	z -> state -> sub . marker = 5	166:8:4245:4269	3497067	2	True				
ANR	3497158	AssignmentExpression	z -> state -> sub . marker = 5		3497067	0		=			
ANR	3497159	MemberAccess	z -> state -> sub . marker		3497067	0					
ANR	3497160	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497161	PtrMemberAccess	z -> state		3497067	0					
ANR	3497162	Identifier	z		3497067	0					
ANR	3497163	Identifier	state		3497067	1					
ANR	3497164	Identifier	sub		3497067	1					
ANR	3497165	Identifier	marker		3497067	1					
ANR	3497166	PrimaryExpression	5		3497067	1					
ANR	3497167	BreakStatement	break ;	167:8:4313:4318	3497067	3	True				
ANR	3497168	IfStatement	if ( ( z -> state -> sub . method >> 4 ) + 8 > z -> state -> wbits )		3497067	3					
ANR	3497169	Condition	( z -> state -> sub . method >> 4 ) + 8 > z -> state -> wbits	169:10:4338:4386	3497067	0	True				
ANR	3497170	RelationalExpression	( z -> state -> sub . method >> 4 ) + 8 > z -> state -> wbits		3497067	0		>			
ANR	3497171	AdditiveExpression	( z -> state -> sub . method >> 4 ) + 8		3497067	0		+			
ANR	3497172	ShiftExpression	z -> state -> sub . method >> 4		3497067	0		>>			
ANR	3497173	MemberAccess	z -> state -> sub . method		3497067	0					
ANR	3497174	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497175	PtrMemberAccess	z -> state		3497067	0					
ANR	3497176	Identifier	z		3497067	0					
ANR	3497177	Identifier	state		3497067	1					
ANR	3497178	Identifier	sub		3497067	1					
ANR	3497179	Identifier	method		3497067	1					
ANR	3497180	PrimaryExpression	4		3497067	1					
ANR	3497181	PrimaryExpression	8		3497067	1					
ANR	3497182	PtrMemberAccess	z -> state -> wbits		3497067	1					
ANR	3497183	PtrMemberAccess	z -> state		3497067	0					
ANR	3497184	Identifier	z		3497067	0					
ANR	3497185	Identifier	state		3497067	1					
ANR	3497186	Identifier	wbits		3497067	1					
ANR	3497187	CompoundStatement		21:6:563:563	3497067	1					
ANR	3497188	ExpressionStatement	z -> state -> mode = BAD	171:8:4405:4425	3497067	0	True				
ANR	3497189	AssignmentExpression	z -> state -> mode = BAD		3497067	0		=			
ANR	3497190	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497191	PtrMemberAccess	z -> state		3497067	0					
ANR	3497192	Identifier	z		3497067	0					
ANR	3497193	Identifier	state		3497067	1					
ANR	3497194	Identifier	mode		3497067	1					
ANR	3497195	Identifier	BAD		3497067	1					
ANR	3497196	ExpressionStatement	"z -> msg = ( char * ) ""invalid window size"""	172:8:4435:4472	3497067	1	True				
ANR	3497197	AssignmentExpression	"z -> msg = ( char * ) ""invalid window size"""		3497067	0		=			
ANR	3497198	PtrMemberAccess	z -> msg		3497067	0					
ANR	3497199	Identifier	z		3497067	0					
ANR	3497200	Identifier	msg		3497067	1					
ANR	3497201	CastExpression	"( char * ) ""invalid window size"""		3497067	1					
ANR	3497202	CastTarget	char *		3497067	0					
ANR	3497203	PrimaryExpression	"""invalid window size"""		3497067	1					
ANR	3497204	ExpressionStatement	z -> state -> sub . marker = 5	173:8:4482:4506	3497067	2	True				
ANR	3497205	AssignmentExpression	z -> state -> sub . marker = 5		3497067	0		=			
ANR	3497206	MemberAccess	z -> state -> sub . marker		3497067	0					
ANR	3497207	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497208	PtrMemberAccess	z -> state		3497067	0					
ANR	3497209	Identifier	z		3497067	0					
ANR	3497210	Identifier	state		3497067	1					
ANR	3497211	Identifier	sub		3497067	1					
ANR	3497212	Identifier	marker		3497067	1					
ANR	3497213	PrimaryExpression	5		3497067	1					
ANR	3497214	BreakStatement	break ;	174:8:4550:4555	3497067	3	True				
ANR	3497215	ExpressionStatement	z -> state -> mode = FLAG	176:6:4571:4592	3497067	4	True				
ANR	3497216	AssignmentExpression	z -> state -> mode = FLAG		3497067	0		=			
ANR	3497217	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497218	PtrMemberAccess	z -> state		3497067	0					
ANR	3497219	Identifier	z		3497067	0					
ANR	3497220	Identifier	state		3497067	1					
ANR	3497221	Identifier	mode		3497067	1					
ANR	3497222	Identifier	FLAG		3497067	1					
ANR	3497223	Label	case FLAG :	177:4:4598:4607	3497067	5	True				
ANR	3497224	Identifier	FLAG		3497067	0					
ANR	3497225	IdentifierDeclStatement	NEEDBYTE b = NEXTBYTE ;	178:6:4615:4642	3497067	6	True				
ANR	3497226	IdentifierDecl	b = NEXTBYTE		3497067	0					
ANR	3497227	IdentifierDeclType	NEEDBYTE		3497067	0					
ANR	3497228	Identifier	b		3497067	1					
ANR	3497229	AssignmentExpression	b = NEXTBYTE		3497067	2		=			
ANR	3497230	Identifier	NEXTBYTE		3497067	0					
ANR	3497231	Identifier	NEXTBYTE		3497067	1					
ANR	3497232	IfStatement	if ( ( ( z -> state -> sub . method << 8 ) + b ) % 31 )		3497067	7					
ANR	3497233	Condition	( ( z -> state -> sub . method << 8 ) + b ) % 31	180:10:4654:4691	3497067	0	True				
ANR	3497234	MultiplicativeExpression	( ( z -> state -> sub . method << 8 ) + b ) % 31		3497067	0		%			
ANR	3497235	AdditiveExpression	( z -> state -> sub . method << 8 ) + b		3497067	0		+			
ANR	3497236	ShiftExpression	z -> state -> sub . method << 8		3497067	0		<<			
ANR	3497237	MemberAccess	z -> state -> sub . method		3497067	0					
ANR	3497238	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497239	PtrMemberAccess	z -> state		3497067	0					
ANR	3497240	Identifier	z		3497067	0					
ANR	3497241	Identifier	state		3497067	1					
ANR	3497242	Identifier	sub		3497067	1					
ANR	3497243	Identifier	method		3497067	1					
ANR	3497244	PrimaryExpression	8		3497067	1					
ANR	3497245	Identifier	b		3497067	1					
ANR	3497246	PrimaryExpression	31		3497067	1					
ANR	3497247	CompoundStatement		32:6:868:868	3497067	1					
ANR	3497248	ExpressionStatement	z -> state -> mode = BAD	182:8:4710:4730	3497067	0	True				
ANR	3497249	AssignmentExpression	z -> state -> mode = BAD		3497067	0		=			
ANR	3497250	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497251	PtrMemberAccess	z -> state		3497067	0					
ANR	3497252	Identifier	z		3497067	0					
ANR	3497253	Identifier	state		3497067	1					
ANR	3497254	Identifier	mode		3497067	1					
ANR	3497255	Identifier	BAD		3497067	1					
ANR	3497256	ExpressionStatement	"z -> msg = ( char * ) ""incorrect header check"""	183:8:4740:4780	3497067	1	True				
ANR	3497257	AssignmentExpression	"z -> msg = ( char * ) ""incorrect header check"""		3497067	0		=			
ANR	3497258	PtrMemberAccess	z -> msg		3497067	0					
ANR	3497259	Identifier	z		3497067	0					
ANR	3497260	Identifier	msg		3497067	1					
ANR	3497261	CastExpression	"( char * ) ""incorrect header check"""		3497067	1					
ANR	3497262	CastTarget	char *		3497067	0					
ANR	3497263	PrimaryExpression	"""incorrect header check"""		3497067	1					
ANR	3497264	ExpressionStatement	z -> state -> sub . marker = 5	184:8:4790:4814	3497067	2	True				
ANR	3497265	AssignmentExpression	z -> state -> sub . marker = 5		3497067	0		=			
ANR	3497266	MemberAccess	z -> state -> sub . marker		3497067	0					
ANR	3497267	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497268	PtrMemberAccess	z -> state		3497067	0					
ANR	3497269	Identifier	z		3497067	0					
ANR	3497270	Identifier	state		3497067	1					
ANR	3497271	Identifier	sub		3497067	1					
ANR	3497272	Identifier	marker		3497067	1					
ANR	3497273	PrimaryExpression	5		3497067	1					
ANR	3497274	BreakStatement	break ;	185:8:4858:4863	3497067	3	True				
ANR	3497275	ExpressionStatement	"Tracev ( ( stderr , ""inflate: zlib header ok\\n"" ) )"	187:6:4879:4924	3497067	8	True				
ANR	3497276	CallExpression	"Tracev ( ( stderr , ""inflate: zlib header ok\\n"" ) )"		3497067	0					
ANR	3497277	Callee	Tracev		3497067	0					
ANR	3497278	Identifier	Tracev		3497067	0					
ANR	3497279	ArgumentList	"stderr , ""inflate: zlib header ok\\n"""		3497067	1					
ANR	3497280	Argument	"stderr , ""inflate: zlib header ok\\n"""		3497067	0					
ANR	3497281	Expression	"stderr , ""inflate: zlib header ok\\n"""		3497067	0					
ANR	3497282	Identifier	stderr		3497067	0					
ANR	3497283	PrimaryExpression	"""inflate: zlib header ok\\n"""		3497067	1					
ANR	3497284	IfStatement	if ( ! ( b & PRESET_DICT ) )		3497067	9					
ANR	3497285	Condition	! ( b & PRESET_DICT )	188:10:4936:4953	3497067	0	True				
ANR	3497286	UnaryOperationExpression	! ( b & PRESET_DICT )		3497067	0					
ANR	3497287	UnaryOperator	!		3497067	0					
ANR	3497288	BitAndExpression	b & PRESET_DICT		3497067	1		&			
ANR	3497289	Identifier	b		3497067	0					
ANR	3497290	Identifier	PRESET_DICT		3497067	1					
ANR	3497291	CompoundStatement		40:6:1130:1130	3497067	1					
ANR	3497292	ExpressionStatement	z -> state -> mode = BLOCKS	190:8:4972:4995	3497067	0	True				
ANR	3497293	AssignmentExpression	z -> state -> mode = BLOCKS		3497067	0		=			
ANR	3497294	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497295	PtrMemberAccess	z -> state		3497067	0					
ANR	3497296	Identifier	z		3497067	0					
ANR	3497297	Identifier	state		3497067	1					
ANR	3497298	Identifier	mode		3497067	1					
ANR	3497299	Identifier	BLOCKS		3497067	1					
ANR	3497300	BreakStatement	break ;	191:8:5005:5010	3497067	1	True				
ANR	3497301	ExpressionStatement	z -> state -> mode = DICT4	193:6:5026:5048	3497067	10	True				
ANR	3497302	AssignmentExpression	z -> state -> mode = DICT4		3497067	0		=			
ANR	3497303	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497304	PtrMemberAccess	z -> state		3497067	0					
ANR	3497305	Identifier	z		3497067	0					
ANR	3497306	Identifier	state		3497067	1					
ANR	3497307	Identifier	mode		3497067	1					
ANR	3497308	Identifier	DICT4		3497067	1					
ANR	3497309	Label	case DICT4 :	194:4:5054:5064	3497067	11	True				
ANR	3497310	Identifier	DICT4		3497067	0					
ANR	3497311	Statement	NEEDBYTE	195:6:5072:5079	3497067	12	True				
ANR	3497312	ExpressionStatement	z -> state -> sub . check . need = ( uLong ) NEXTBYTE << 24	196:6:5087:5135	3497067	13	True				
ANR	3497313	AssignmentExpression	z -> state -> sub . check . need = ( uLong ) NEXTBYTE << 24		3497067	0		=			
ANR	3497314	MemberAccess	z -> state -> sub . check . need		3497067	0					
ANR	3497315	MemberAccess	z -> state -> sub . check		3497067	0					
ANR	3497316	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497317	PtrMemberAccess	z -> state		3497067	0					
ANR	3497318	Identifier	z		3497067	0					
ANR	3497319	Identifier	state		3497067	1					
ANR	3497320	Identifier	sub		3497067	1					
ANR	3497321	Identifier	check		3497067	1					
ANR	3497322	Identifier	need		3497067	1					
ANR	3497323	ShiftExpression	( uLong ) NEXTBYTE << 24		3497067	1		<<			
ANR	3497324	CastExpression	( uLong ) NEXTBYTE		3497067	0					
ANR	3497325	CastTarget	uLong		3497067	0					
ANR	3497326	Identifier	NEXTBYTE		3497067	1					
ANR	3497327	PrimaryExpression	24		3497067	1					
ANR	3497328	ExpressionStatement	z -> state -> mode = DICT3	197:6:5143:5165	3497067	14	True				
ANR	3497329	AssignmentExpression	z -> state -> mode = DICT3		3497067	0		=			
ANR	3497330	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497331	PtrMemberAccess	z -> state		3497067	0					
ANR	3497332	Identifier	z		3497067	0					
ANR	3497333	Identifier	state		3497067	1					
ANR	3497334	Identifier	mode		3497067	1					
ANR	3497335	Identifier	DICT3		3497067	1					
ANR	3497336	Label	case DICT3 :	198:4:5171:5181	3497067	15	True				
ANR	3497337	Identifier	DICT3		3497067	0					
ANR	3497338	Statement	NEEDBYTE	199:6:5189:5196	3497067	16	True				
ANR	3497339	ExpressionStatement	z -> state -> sub . check . need += ( uLong ) NEXTBYTE << 16	200:6:5204:5253	3497067	17	True				
ANR	3497340	AssignmentExpression	z -> state -> sub . check . need += ( uLong ) NEXTBYTE << 16		3497067	0		+=			
ANR	3497341	MemberAccess	z -> state -> sub . check . need		3497067	0					
ANR	3497342	MemberAccess	z -> state -> sub . check		3497067	0					
ANR	3497343	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497344	PtrMemberAccess	z -> state		3497067	0					
ANR	3497345	Identifier	z		3497067	0					
ANR	3497346	Identifier	state		3497067	1					
ANR	3497347	Identifier	sub		3497067	1					
ANR	3497348	Identifier	check		3497067	1					
ANR	3497349	Identifier	need		3497067	1					
ANR	3497350	ShiftExpression	( uLong ) NEXTBYTE << 16		3497067	1		<<			
ANR	3497351	CastExpression	( uLong ) NEXTBYTE		3497067	0					
ANR	3497352	CastTarget	uLong		3497067	0					
ANR	3497353	Identifier	NEXTBYTE		3497067	1					
ANR	3497354	PrimaryExpression	16		3497067	1					
ANR	3497355	ExpressionStatement	z -> state -> mode = DICT2	201:6:5261:5283	3497067	18	True				
ANR	3497356	AssignmentExpression	z -> state -> mode = DICT2		3497067	0		=			
ANR	3497357	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497358	PtrMemberAccess	z -> state		3497067	0					
ANR	3497359	Identifier	z		3497067	0					
ANR	3497360	Identifier	state		3497067	1					
ANR	3497361	Identifier	mode		3497067	1					
ANR	3497362	Identifier	DICT2		3497067	1					
ANR	3497363	Label	case DICT2 :	202:4:5289:5299	3497067	19	True				
ANR	3497364	Identifier	DICT2		3497067	0					
ANR	3497365	Statement	NEEDBYTE	203:6:5307:5314	3497067	20	True				
ANR	3497366	ExpressionStatement	z -> state -> sub . check . need += ( uLong ) NEXTBYTE << 8	204:6:5322:5370	3497067	21	True				
ANR	3497367	AssignmentExpression	z -> state -> sub . check . need += ( uLong ) NEXTBYTE << 8		3497067	0		+=			
ANR	3497368	MemberAccess	z -> state -> sub . check . need		3497067	0					
ANR	3497369	MemberAccess	z -> state -> sub . check		3497067	0					
ANR	3497370	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497371	PtrMemberAccess	z -> state		3497067	0					
ANR	3497372	Identifier	z		3497067	0					
ANR	3497373	Identifier	state		3497067	1					
ANR	3497374	Identifier	sub		3497067	1					
ANR	3497375	Identifier	check		3497067	1					
ANR	3497376	Identifier	need		3497067	1					
ANR	3497377	ShiftExpression	( uLong ) NEXTBYTE << 8		3497067	1		<<			
ANR	3497378	CastExpression	( uLong ) NEXTBYTE		3497067	0					
ANR	3497379	CastTarget	uLong		3497067	0					
ANR	3497380	Identifier	NEXTBYTE		3497067	1					
ANR	3497381	PrimaryExpression	8		3497067	1					
ANR	3497382	ExpressionStatement	z -> state -> mode = DICT1	205:6:5378:5400	3497067	22	True				
ANR	3497383	AssignmentExpression	z -> state -> mode = DICT1		3497067	0		=			
ANR	3497384	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497385	PtrMemberAccess	z -> state		3497067	0					
ANR	3497386	Identifier	z		3497067	0					
ANR	3497387	Identifier	state		3497067	1					
ANR	3497388	Identifier	mode		3497067	1					
ANR	3497389	Identifier	DICT1		3497067	1					
ANR	3497390	Label	case DICT1 :	206:4:5406:5416	3497067	23	True				
ANR	3497391	Identifier	DICT1		3497067	0					
ANR	3497392	Statement	NEEDBYTE	207:6:5424:5431	3497067	24	True				
ANR	3497393	ExpressionStatement	z -> state -> sub . check . need += ( uLong ) NEXTBYTE	208:6:5439:5482	3497067	25	True				
ANR	3497394	AssignmentExpression	z -> state -> sub . check . need += ( uLong ) NEXTBYTE		3497067	0		+=			
ANR	3497395	MemberAccess	z -> state -> sub . check . need		3497067	0					
ANR	3497396	MemberAccess	z -> state -> sub . check		3497067	0					
ANR	3497397	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497398	PtrMemberAccess	z -> state		3497067	0					
ANR	3497399	Identifier	z		3497067	0					
ANR	3497400	Identifier	state		3497067	1					
ANR	3497401	Identifier	sub		3497067	1					
ANR	3497402	Identifier	check		3497067	1					
ANR	3497403	Identifier	need		3497067	1					
ANR	3497404	CastExpression	( uLong ) NEXTBYTE		3497067	1					
ANR	3497405	CastTarget	uLong		3497067	0					
ANR	3497406	Identifier	NEXTBYTE		3497067	1					
ANR	3497407	ExpressionStatement	z -> adler = z -> state -> sub . check . need	209:6:5490:5525	3497067	26	True				
ANR	3497408	AssignmentExpression	z -> adler = z -> state -> sub . check . need		3497067	0		=			
ANR	3497409	PtrMemberAccess	z -> adler		3497067	0					
ANR	3497410	Identifier	z		3497067	0					
ANR	3497411	Identifier	adler		3497067	1					
ANR	3497412	MemberAccess	z -> state -> sub . check . need		3497067	1					
ANR	3497413	MemberAccess	z -> state -> sub . check		3497067	0					
ANR	3497414	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497415	PtrMemberAccess	z -> state		3497067	0					
ANR	3497416	Identifier	z		3497067	0					
ANR	3497417	Identifier	state		3497067	1					
ANR	3497418	Identifier	sub		3497067	1					
ANR	3497419	Identifier	check		3497067	1					
ANR	3497420	Identifier	need		3497067	1					
ANR	3497421	ExpressionStatement	z -> state -> mode = DICT0	210:6:5533:5555	3497067	27	True				
ANR	3497422	AssignmentExpression	z -> state -> mode = DICT0		3497067	0		=			
ANR	3497423	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497424	PtrMemberAccess	z -> state		3497067	0					
ANR	3497425	Identifier	z		3497067	0					
ANR	3497426	Identifier	state		3497067	1					
ANR	3497427	Identifier	mode		3497067	1					
ANR	3497428	Identifier	DICT0		3497067	1					
ANR	3497429	ReturnStatement	return Z_NEED_DICT ;	211:6:5563:5581	3497067	28	True				
ANR	3497430	Identifier	Z_NEED_DICT		3497067	0					
ANR	3497431	Label	case DICT0 :	212:4:5587:5597	3497067	29	True				
ANR	3497432	Identifier	DICT0		3497067	0					
ANR	3497433	ExpressionStatement	z -> state -> mode = BAD	213:6:5605:5625	3497067	30	True				
ANR	3497434	AssignmentExpression	z -> state -> mode = BAD		3497067	0		=			
ANR	3497435	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497436	PtrMemberAccess	z -> state		3497067	0					
ANR	3497437	Identifier	z		3497067	0					
ANR	3497438	Identifier	state		3497067	1					
ANR	3497439	Identifier	mode		3497067	1					
ANR	3497440	Identifier	BAD		3497067	1					
ANR	3497441	ExpressionStatement	"z -> msg = ( char * ) ""need dictionary"""	214:6:5633:5666	3497067	31	True				
ANR	3497442	AssignmentExpression	"z -> msg = ( char * ) ""need dictionary"""		3497067	0		=			
ANR	3497443	PtrMemberAccess	z -> msg		3497067	0					
ANR	3497444	Identifier	z		3497067	0					
ANR	3497445	Identifier	msg		3497067	1					
ANR	3497446	CastExpression	"( char * ) ""need dictionary"""		3497067	1					
ANR	3497447	CastTarget	char *		3497067	0					
ANR	3497448	PrimaryExpression	"""need dictionary"""		3497067	1					
ANR	3497449	ExpressionStatement	z -> state -> sub . marker = 0	215:6:5674:5698	3497067	32	True				
ANR	3497450	AssignmentExpression	z -> state -> sub . marker = 0		3497067	0		=			
ANR	3497451	MemberAccess	z -> state -> sub . marker		3497067	0					
ANR	3497452	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497453	PtrMemberAccess	z -> state		3497067	0					
ANR	3497454	Identifier	z		3497067	0					
ANR	3497455	Identifier	state		3497067	1					
ANR	3497456	Identifier	sub		3497067	1					
ANR	3497457	Identifier	marker		3497067	1					
ANR	3497458	PrimaryExpression	0		3497067	1					
ANR	3497459	ReturnStatement	return Z_STREAM_ERROR ;	216:6:5738:5759	3497067	33	True				
ANR	3497460	Identifier	Z_STREAM_ERROR		3497067	0					
ANR	3497461	Label	case BLOCKS :	217:4:5765:5776	3497067	34	True				
ANR	3497462	Identifier	BLOCKS		3497067	0					
ANR	3497463	ExpressionStatement	"r = inflate_blocks ( z -> state -> blocks , z , r )"	218:6:5784:5826	3497067	35	True				
ANR	3497464	AssignmentExpression	"r = inflate_blocks ( z -> state -> blocks , z , r )"		3497067	0		=			
ANR	3497465	Identifier	r		3497067	0					
ANR	3497466	CallExpression	"inflate_blocks ( z -> state -> blocks , z , r )"		3497067	1					
ANR	3497467	Callee	inflate_blocks		3497067	0					
ANR	3497468	Identifier	inflate_blocks		3497067	0					
ANR	3497469	ArgumentList	z -> state -> blocks		3497067	1					
ANR	3497470	Argument	z -> state -> blocks		3497067	0					
ANR	3497471	PtrMemberAccess	z -> state -> blocks		3497067	0					
ANR	3497472	PtrMemberAccess	z -> state		3497067	0					
ANR	3497473	Identifier	z		3497067	0					
ANR	3497474	Identifier	state		3497067	1					
ANR	3497475	Identifier	blocks		3497067	1					
ANR	3497476	Argument	z		3497067	1					
ANR	3497477	Identifier	z		3497067	0					
ANR	3497478	Argument	r		3497067	2					
ANR	3497479	Identifier	r		3497067	0					
ANR	3497480	IfStatement	if ( r == Z_DATA_ERROR )		3497067	36					
ANR	3497481	Condition	r == Z_DATA_ERROR	219:10:5838:5854	3497067	0	True				
ANR	3497482	EqualityExpression	r == Z_DATA_ERROR		3497067	0		==			
ANR	3497483	Identifier	r		3497067	0					
ANR	3497484	Identifier	Z_DATA_ERROR		3497067	1					
ANR	3497485	CompoundStatement		71:6:2031:2031	3497067	1					
ANR	3497486	ExpressionStatement	z -> state -> mode = BAD	221:8:5873:5893	3497067	0	True				
ANR	3497487	AssignmentExpression	z -> state -> mode = BAD		3497067	0		=			
ANR	3497488	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497489	PtrMemberAccess	z -> state		3497067	0					
ANR	3497490	Identifier	z		3497067	0					
ANR	3497491	Identifier	state		3497067	1					
ANR	3497492	Identifier	mode		3497067	1					
ANR	3497493	Identifier	BAD		3497067	1					
ANR	3497494	ExpressionStatement	z -> state -> sub . marker = 0	222:8:5903:5927	3497067	1	True				
ANR	3497495	AssignmentExpression	z -> state -> sub . marker = 0		3497067	0		=			
ANR	3497496	MemberAccess	z -> state -> sub . marker		3497067	0					
ANR	3497497	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497498	PtrMemberAccess	z -> state		3497067	0					
ANR	3497499	Identifier	z		3497067	0					
ANR	3497500	Identifier	state		3497067	1					
ANR	3497501	Identifier	sub		3497067	1					
ANR	3497502	Identifier	marker		3497067	1					
ANR	3497503	PrimaryExpression	0		3497067	1					
ANR	3497504	BreakStatement	break ;	223:8:5969:5974	3497067	2	True				
ANR	3497505	IfStatement	if ( r == Z_OK )		3497067	37					
ANR	3497506	Condition	r == Z_OK	225:10:5994:6002	3497067	0	True				
ANR	3497507	EqualityExpression	r == Z_OK		3497067	0		==			
ANR	3497508	Identifier	r		3497067	0					
ANR	3497509	Identifier	Z_OK		3497067	1					
ANR	3497510	ExpressionStatement	r = f	226:8:6013:6018	3497067	1	True				
ANR	3497511	AssignmentExpression	r = f		3497067	0		=			
ANR	3497512	Identifier	r		3497067	0					
ANR	3497513	Identifier	f		3497067	1					
ANR	3497514	IfStatement	if ( r != Z_STREAM_END )		3497067	38					
ANR	3497515	Condition	r != Z_STREAM_END	227:10:6030:6046	3497067	0	True				
ANR	3497516	EqualityExpression	r != Z_STREAM_END		3497067	0		!=			
ANR	3497517	Identifier	r		3497067	0					
ANR	3497518	Identifier	Z_STREAM_END		3497067	1					
ANR	3497519	ReturnStatement	return r ;	228:8:6057:6065	3497067	1	True				
ANR	3497520	Identifier	r		3497067	0					
ANR	3497521	ExpressionStatement	r = f	229:6:6073:6078	3497067	39	True				
ANR	3497522	AssignmentExpression	r = f		3497067	0		=			
ANR	3497523	Identifier	r		3497067	0					
ANR	3497524	Identifier	f		3497067	1					
ANR	3497525	ExpressionStatement	"inflate_blocks_reset ( z -> state -> blocks , z , & z -> state -> sub . check . was )"	230:6:6086:6153	3497067	40	True				
ANR	3497526	CallExpression	"inflate_blocks_reset ( z -> state -> blocks , z , & z -> state -> sub . check . was )"		3497067	0					
ANR	3497527	Callee	inflate_blocks_reset		3497067	0					
ANR	3497528	Identifier	inflate_blocks_reset		3497067	0					
ANR	3497529	ArgumentList	z -> state -> blocks		3497067	1					
ANR	3497530	Argument	z -> state -> blocks		3497067	0					
ANR	3497531	PtrMemberAccess	z -> state -> blocks		3497067	0					
ANR	3497532	PtrMemberAccess	z -> state		3497067	0					
ANR	3497533	Identifier	z		3497067	0					
ANR	3497534	Identifier	state		3497067	1					
ANR	3497535	Identifier	blocks		3497067	1					
ANR	3497536	Argument	z		3497067	1					
ANR	3497537	Identifier	z		3497067	0					
ANR	3497538	Argument	& z -> state -> sub . check . was		3497067	2					
ANR	3497539	UnaryOperationExpression	& z -> state -> sub . check . was		3497067	0					
ANR	3497540	UnaryOperator	&		3497067	0					
ANR	3497541	MemberAccess	z -> state -> sub . check . was		3497067	1					
ANR	3497542	MemberAccess	z -> state -> sub . check		3497067	0					
ANR	3497543	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497544	PtrMemberAccess	z -> state		3497067	0					
ANR	3497545	Identifier	z		3497067	0					
ANR	3497546	Identifier	state		3497067	1					
ANR	3497547	Identifier	sub		3497067	1					
ANR	3497548	Identifier	check		3497067	1					
ANR	3497549	Identifier	was		3497067	1					
ANR	3497550	IfStatement	if ( z -> state -> nowrap )		3497067	41					
ANR	3497551	Condition	z -> state -> nowrap	231:10:6165:6180	3497067	0	True				
ANR	3497552	PtrMemberAccess	z -> state -> nowrap		3497067	0					
ANR	3497553	PtrMemberAccess	z -> state		3497067	0					
ANR	3497554	Identifier	z		3497067	0					
ANR	3497555	Identifier	state		3497067	1					
ANR	3497556	Identifier	nowrap		3497067	1					
ANR	3497557	CompoundStatement		83:6:2357:2357	3497067	1					
ANR	3497558	ExpressionStatement	z -> state -> mode = DONE	233:8:6199:6220	3497067	0	True				
ANR	3497559	AssignmentExpression	z -> state -> mode = DONE		3497067	0		=			
ANR	3497560	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497561	PtrMemberAccess	z -> state		3497067	0					
ANR	3497562	Identifier	z		3497067	0					
ANR	3497563	Identifier	state		3497067	1					
ANR	3497564	Identifier	mode		3497067	1					
ANR	3497565	Identifier	DONE		3497067	1					
ANR	3497566	BreakStatement	break ;	234:8:6230:6235	3497067	1	True				
ANR	3497567	ExpressionStatement	z -> state -> mode = CHECK4	236:6:6251:6274	3497067	42	True				
ANR	3497568	AssignmentExpression	z -> state -> mode = CHECK4		3497067	0		=			
ANR	3497569	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497570	PtrMemberAccess	z -> state		3497067	0					
ANR	3497571	Identifier	z		3497067	0					
ANR	3497572	Identifier	state		3497067	1					
ANR	3497573	Identifier	mode		3497067	1					
ANR	3497574	Identifier	CHECK4		3497067	1					
ANR	3497575	Label	case CHECK4 :	237:4:6280:6291	3497067	43	True				
ANR	3497576	Identifier	CHECK4		3497067	0					
ANR	3497577	Statement	NEEDBYTE	238:6:6299:6306	3497067	44	True				
ANR	3497578	ExpressionStatement	z -> state -> sub . check . need = ( uLong ) NEXTBYTE << 24	239:6:6314:6362	3497067	45	True				
ANR	3497579	AssignmentExpression	z -> state -> sub . check . need = ( uLong ) NEXTBYTE << 24		3497067	0		=			
ANR	3497580	MemberAccess	z -> state -> sub . check . need		3497067	0					
ANR	3497581	MemberAccess	z -> state -> sub . check		3497067	0					
ANR	3497582	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497583	PtrMemberAccess	z -> state		3497067	0					
ANR	3497584	Identifier	z		3497067	0					
ANR	3497585	Identifier	state		3497067	1					
ANR	3497586	Identifier	sub		3497067	1					
ANR	3497587	Identifier	check		3497067	1					
ANR	3497588	Identifier	need		3497067	1					
ANR	3497589	ShiftExpression	( uLong ) NEXTBYTE << 24		3497067	1		<<			
ANR	3497590	CastExpression	( uLong ) NEXTBYTE		3497067	0					
ANR	3497591	CastTarget	uLong		3497067	0					
ANR	3497592	Identifier	NEXTBYTE		3497067	1					
ANR	3497593	PrimaryExpression	24		3497067	1					
ANR	3497594	ExpressionStatement	z -> state -> mode = CHECK3	240:6:6370:6393	3497067	46	True				
ANR	3497595	AssignmentExpression	z -> state -> mode = CHECK3		3497067	0		=			
ANR	3497596	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497597	PtrMemberAccess	z -> state		3497067	0					
ANR	3497598	Identifier	z		3497067	0					
ANR	3497599	Identifier	state		3497067	1					
ANR	3497600	Identifier	mode		3497067	1					
ANR	3497601	Identifier	CHECK3		3497067	1					
ANR	3497602	Label	case CHECK3 :	241:4:6399:6410	3497067	47	True				
ANR	3497603	Identifier	CHECK3		3497067	0					
ANR	3497604	Statement	NEEDBYTE	242:6:6418:6425	3497067	48	True				
ANR	3497605	ExpressionStatement	z -> state -> sub . check . need += ( uLong ) NEXTBYTE << 16	243:6:6433:6482	3497067	49	True				
ANR	3497606	AssignmentExpression	z -> state -> sub . check . need += ( uLong ) NEXTBYTE << 16		3497067	0		+=			
ANR	3497607	MemberAccess	z -> state -> sub . check . need		3497067	0					
ANR	3497608	MemberAccess	z -> state -> sub . check		3497067	0					
ANR	3497609	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497610	PtrMemberAccess	z -> state		3497067	0					
ANR	3497611	Identifier	z		3497067	0					
ANR	3497612	Identifier	state		3497067	1					
ANR	3497613	Identifier	sub		3497067	1					
ANR	3497614	Identifier	check		3497067	1					
ANR	3497615	Identifier	need		3497067	1					
ANR	3497616	ShiftExpression	( uLong ) NEXTBYTE << 16		3497067	1		<<			
ANR	3497617	CastExpression	( uLong ) NEXTBYTE		3497067	0					
ANR	3497618	CastTarget	uLong		3497067	0					
ANR	3497619	Identifier	NEXTBYTE		3497067	1					
ANR	3497620	PrimaryExpression	16		3497067	1					
ANR	3497621	ExpressionStatement	z -> state -> mode = CHECK2	244:6:6490:6513	3497067	50	True				
ANR	3497622	AssignmentExpression	z -> state -> mode = CHECK2		3497067	0		=			
ANR	3497623	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497624	PtrMemberAccess	z -> state		3497067	0					
ANR	3497625	Identifier	z		3497067	0					
ANR	3497626	Identifier	state		3497067	1					
ANR	3497627	Identifier	mode		3497067	1					
ANR	3497628	Identifier	CHECK2		3497067	1					
ANR	3497629	Label	case CHECK2 :	245:4:6519:6530	3497067	51	True				
ANR	3497630	Identifier	CHECK2		3497067	0					
ANR	3497631	Statement	NEEDBYTE	246:6:6538:6545	3497067	52	True				
ANR	3497632	ExpressionStatement	z -> state -> sub . check . need += ( uLong ) NEXTBYTE << 8	247:6:6553:6601	3497067	53	True				
ANR	3497633	AssignmentExpression	z -> state -> sub . check . need += ( uLong ) NEXTBYTE << 8		3497067	0		+=			
ANR	3497634	MemberAccess	z -> state -> sub . check . need		3497067	0					
ANR	3497635	MemberAccess	z -> state -> sub . check		3497067	0					
ANR	3497636	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497637	PtrMemberAccess	z -> state		3497067	0					
ANR	3497638	Identifier	z		3497067	0					
ANR	3497639	Identifier	state		3497067	1					
ANR	3497640	Identifier	sub		3497067	1					
ANR	3497641	Identifier	check		3497067	1					
ANR	3497642	Identifier	need		3497067	1					
ANR	3497643	ShiftExpression	( uLong ) NEXTBYTE << 8		3497067	1		<<			
ANR	3497644	CastExpression	( uLong ) NEXTBYTE		3497067	0					
ANR	3497645	CastTarget	uLong		3497067	0					
ANR	3497646	Identifier	NEXTBYTE		3497067	1					
ANR	3497647	PrimaryExpression	8		3497067	1					
ANR	3497648	ExpressionStatement	z -> state -> mode = CHECK1	248:6:6609:6632	3497067	54	True				
ANR	3497649	AssignmentExpression	z -> state -> mode = CHECK1		3497067	0		=			
ANR	3497650	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497651	PtrMemberAccess	z -> state		3497067	0					
ANR	3497652	Identifier	z		3497067	0					
ANR	3497653	Identifier	state		3497067	1					
ANR	3497654	Identifier	mode		3497067	1					
ANR	3497655	Identifier	CHECK1		3497067	1					
ANR	3497656	Label	case CHECK1 :	249:4:6638:6649	3497067	55	True				
ANR	3497657	Identifier	CHECK1		3497067	0					
ANR	3497658	Statement	NEEDBYTE	250:6:6657:6664	3497067	56	True				
ANR	3497659	ExpressionStatement	z -> state -> sub . check . need += ( uLong ) NEXTBYTE	251:6:6672:6715	3497067	57	True				
ANR	3497660	AssignmentExpression	z -> state -> sub . check . need += ( uLong ) NEXTBYTE		3497067	0		+=			
ANR	3497661	MemberAccess	z -> state -> sub . check . need		3497067	0					
ANR	3497662	MemberAccess	z -> state -> sub . check		3497067	0					
ANR	3497663	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497664	PtrMemberAccess	z -> state		3497067	0					
ANR	3497665	Identifier	z		3497067	0					
ANR	3497666	Identifier	state		3497067	1					
ANR	3497667	Identifier	sub		3497067	1					
ANR	3497668	Identifier	check		3497067	1					
ANR	3497669	Identifier	need		3497067	1					
ANR	3497670	CastExpression	( uLong ) NEXTBYTE		3497067	1					
ANR	3497671	CastTarget	uLong		3497067	0					
ANR	3497672	Identifier	NEXTBYTE		3497067	1					
ANR	3497673	IfStatement	if ( z -> state -> sub . check . was != z -> state -> sub . check . need )		3497067	58					
ANR	3497674	Condition	z -> state -> sub . check . was != z -> state -> sub . check . need	253:10:6728:6778	3497067	0	True				
ANR	3497675	EqualityExpression	z -> state -> sub . check . was != z -> state -> sub . check . need		3497067	0		!=			
ANR	3497676	MemberAccess	z -> state -> sub . check . was		3497067	0					
ANR	3497677	MemberAccess	z -> state -> sub . check		3497067	0					
ANR	3497678	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497679	PtrMemberAccess	z -> state		3497067	0					
ANR	3497680	Identifier	z		3497067	0					
ANR	3497681	Identifier	state		3497067	1					
ANR	3497682	Identifier	sub		3497067	1					
ANR	3497683	Identifier	check		3497067	1					
ANR	3497684	Identifier	was		3497067	1					
ANR	3497685	MemberAccess	z -> state -> sub . check . need		3497067	1					
ANR	3497686	MemberAccess	z -> state -> sub . check		3497067	0					
ANR	3497687	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497688	PtrMemberAccess	z -> state		3497067	0					
ANR	3497689	Identifier	z		3497067	0					
ANR	3497690	Identifier	state		3497067	1					
ANR	3497691	Identifier	sub		3497067	1					
ANR	3497692	Identifier	check		3497067	1					
ANR	3497693	Identifier	need		3497067	1					
ANR	3497694	CompoundStatement		105:6:2955:2955	3497067	1					
ANR	3497695	ExpressionStatement	z -> state -> mode = BAD	255:8:6797:6817	3497067	0	True				
ANR	3497696	AssignmentExpression	z -> state -> mode = BAD		3497067	0		=			
ANR	3497697	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497698	PtrMemberAccess	z -> state		3497067	0					
ANR	3497699	Identifier	z		3497067	0					
ANR	3497700	Identifier	state		3497067	1					
ANR	3497701	Identifier	mode		3497067	1					
ANR	3497702	Identifier	BAD		3497067	1					
ANR	3497703	ExpressionStatement	"z -> msg = ( char * ) ""incorrect data check"""	256:8:6827:6865	3497067	1	True				
ANR	3497704	AssignmentExpression	"z -> msg = ( char * ) ""incorrect data check"""		3497067	0		=			
ANR	3497705	PtrMemberAccess	z -> msg		3497067	0					
ANR	3497706	Identifier	z		3497067	0					
ANR	3497707	Identifier	msg		3497067	1					
ANR	3497708	CastExpression	"( char * ) ""incorrect data check"""		3497067	1					
ANR	3497709	CastTarget	char *		3497067	0					
ANR	3497710	PrimaryExpression	"""incorrect data check"""		3497067	1					
ANR	3497711	ExpressionStatement	z -> state -> sub . marker = 5	257:8:6875:6899	3497067	2	True				
ANR	3497712	AssignmentExpression	z -> state -> sub . marker = 5		3497067	0		=			
ANR	3497713	MemberAccess	z -> state -> sub . marker		3497067	0					
ANR	3497714	PtrMemberAccess	z -> state -> sub		3497067	0					
ANR	3497715	PtrMemberAccess	z -> state		3497067	0					
ANR	3497716	Identifier	z		3497067	0					
ANR	3497717	Identifier	state		3497067	1					
ANR	3497718	Identifier	sub		3497067	1					
ANR	3497719	Identifier	marker		3497067	1					
ANR	3497720	PrimaryExpression	5		3497067	1					
ANR	3497721	BreakStatement	break ;	258:8:6943:6948	3497067	3	True				
ANR	3497722	ExpressionStatement	"Tracev ( ( stderr , ""inflate: zlib check ok\\n"" ) )"	260:6:6964:7008	3497067	59	True				
ANR	3497723	CallExpression	"Tracev ( ( stderr , ""inflate: zlib check ok\\n"" ) )"		3497067	0					
ANR	3497724	Callee	Tracev		3497067	0					
ANR	3497725	Identifier	Tracev		3497067	0					
ANR	3497726	ArgumentList	"stderr , ""inflate: zlib check ok\\n"""		3497067	1					
ANR	3497727	Argument	"stderr , ""inflate: zlib check ok\\n"""		3497067	0					
ANR	3497728	Expression	"stderr , ""inflate: zlib check ok\\n"""		3497067	0					
ANR	3497729	Identifier	stderr		3497067	0					
ANR	3497730	PrimaryExpression	"""inflate: zlib check ok\\n"""		3497067	1					
ANR	3497731	ExpressionStatement	z -> state -> mode = DONE	261:6:7016:7037	3497067	60	True				
ANR	3497732	AssignmentExpression	z -> state -> mode = DONE		3497067	0		=			
ANR	3497733	PtrMemberAccess	z -> state -> mode		3497067	0					
ANR	3497734	PtrMemberAccess	z -> state		3497067	0					
ANR	3497735	Identifier	z		3497067	0					
ANR	3497736	Identifier	state		3497067	1					
ANR	3497737	Identifier	mode		3497067	1					
ANR	3497738	Identifier	DONE		3497067	1					
ANR	3497739	Label	case DONE :	262:4:7043:7052	3497067	61	True				
ANR	3497740	Identifier	DONE		3497067	0					
ANR	3497741	ReturnStatement	return Z_STREAM_END ;	263:6:7060:7079	3497067	62	True				
ANR	3497742	Identifier	Z_STREAM_END		3497067	0					
ANR	3497743	Label	case BAD :	264:4:7085:7093	3497067	63	True				
ANR	3497744	Identifier	BAD		3497067	0					
ANR	3497745	ReturnStatement	return Z_DATA_ERROR ;	265:6:7101:7120	3497067	64	True				
ANR	3497746	Identifier	Z_DATA_ERROR		3497067	0					
ANR	3497747	Label	default :	266:4:7126:7133	3497067	65	True				
ANR	3497748	Identifier	default		3497067	0					
ANR	3497749	ReturnStatement	return Z_STREAM_ERROR ;	267:6:7141:7162	3497067	66	True				
ANR	3497750	Identifier	Z_STREAM_ERROR		3497067	0					
ANR	3497751	ReturnStatement	return Z_STREAM_ERROR ;	270:2:7195:7216	3497067	6	True				
ANR	3497752	Identifier	Z_STREAM_ERROR		3497067	0					
ANR	3497753	Identifier	inflate		3497067	1					
ANR	3497754	ParameterList	"z_streamp z , int f"		3497067	2					
ANR	3497755	Parameter	z_streamp z	148:0:3810:3820	3497067	0	True				
ANR	3497756	ParameterType	z_streamp		3497067	0					
ANR	3497757	Identifier	z		3497067	1					
ANR	3497758	Parameter	int f	149:0:3823:3827	3497067	1	True				
ANR	3497759	ParameterType	int		3497067	0					
ANR	3497760	Identifier	f		3497067	1					
ANR	3497761	CFGEntryNode	ENTRY		3497067		True				
ANR	3497762	CFGExitNode	EXIT		3497067		True				
ANR	3497763	Symbol	Z_STREAM_ERROR		3497067						
ANR	3497764	Symbol	z -> state -> sub . marker		3497067						
ANR	3497765	Symbol	Z_DATA_ERROR		3497067						
ANR	3497766	Symbol	* z		3497067						
ANR	3497767	Symbol	Z_DEFLATED		3497067						
ANR	3497768	Symbol	z -> next_in		3497067						
ANR	3497769	Symbol	z -> state -> sub . method		3497067						
ANR	3497770	Symbol	z -> state -> wbits		3497067						
ANR	3497771	Symbol	Z_STREAM_END		3497067						
ANR	3497772	Symbol	CHECK3		3497067						
ANR	3497773	Symbol	CHECK2		3497067						
ANR	3497774	Symbol	z -> msg		3497067						
ANR	3497775	Symbol	DONE		3497067						
ANR	3497776	Symbol	CHECK1		3497067						
ANR	3497777	Symbol	PRESET_DICT		3497067						
ANR	3497778	Symbol	CHECK4		3497067						
ANR	3497779	Symbol	& z -> state -> sub		3497067						
ANR	3497780	Symbol	stderr		3497067						
ANR	3497781	Symbol	Z_FINISH		3497067						
ANR	3497782	Symbol	z -> state -> mode		3497067						
ANR	3497783	Symbol	* z -> state		3497067						
ANR	3497784	Symbol	z -> state -> blocks		3497067						
ANR	3497785	Symbol	inflate_blocks		3497067						
ANR	3497786	Symbol	Z_NEED_DICT		3497067						
ANR	3497787	Symbol	& z -> state -> sub . check . was		3497067						
ANR	3497788	Symbol	Z_NULL		3497067						
ANR	3497789	Symbol	z -> state		3497067						
ANR	3497790	Symbol	z -> state -> sub . check . was		3497067						
ANR	3497791	Symbol	Z_BUF_ERROR		3497067						
ANR	3497792	Symbol	Z_OK		3497067						
ANR	3497793	Symbol	z -> adler		3497067						
ANR	3497794	Symbol	FLAG		3497067						
ANR	3497795	Symbol	* * z		3497067						
ANR	3497796	Symbol	z -> state -> sub		3497067						
ANR	3497797	Symbol	& z -> state -> sub . check		3497067						
ANR	3497798	Symbol	DICT0		3497067						
ANR	3497799	Symbol	DICT1		3497067						
ANR	3497800	Symbol	DICT2		3497067						
ANR	3497801	Symbol	DICT3		3497067						
ANR	3497802	Symbol	DICT4		3497067						
ANR	3497803	Symbol	z -> state -> sub . check		3497067						
ANR	3497804	Symbol	b		3497067						
ANR	3497805	Symbol	z -> state -> sub . check . need		3497067						
ANR	3497806	Symbol	BAD		3497067						
ANR	3497807	Symbol	f		3497067						
ANR	3497808	Symbol	NEXTBYTE		3497067						
ANR	3497809	Symbol	z -> state -> nowrap		3497067						
ANR	3497810	Symbol	r		3497067						
ANR	3497811	Symbol	BLOCKS		3497067						
ANR	3497812	Symbol	z		3497067						
