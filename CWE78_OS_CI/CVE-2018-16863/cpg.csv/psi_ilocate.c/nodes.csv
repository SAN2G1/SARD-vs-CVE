command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8869280	File	data/converged/CVE-2018-16863_ghostpdl/psi_ilocate.c								
ANR	8869281	DeclStmt									
ANR	8869282	Decl							int	"int ( const clump_t * cp , gc_state_t * gcst )"	do_validate_clump
ANR	8869283	DeclStmt									
ANR	8869284	Decl							int	"int ( const obj_header_t * ptr , const clump_t * cp , gc_state_t * gcst )"	do_validate_object
ANR	8869285	Function	gc_locate	45:0:1442:4764							
ANR	8869286	FunctionDef	"gc_locate (const void * ptr , gc_state_t * gcst)"		8869285	0					
ANR	8869287	CompoundStatement		47:0:1498:4764	8869285	0					
ANR	8869288	IdentifierDeclStatement	gs_ref_memory_t * mem ;	48:4:1504:1524	8869285	0	True				
ANR	8869289	IdentifierDecl	* mem		8869285	0					
ANR	8869290	IdentifierDeclType	gs_ref_memory_t *		8869285	0					
ANR	8869291	Identifier	mem		8869285	1					
ANR	8869292	IdentifierDeclStatement	gs_ref_memory_t * other ;	49:4:1530:1552	8869285	1	True				
ANR	8869293	IdentifierDecl	* other		8869285	0					
ANR	8869294	IdentifierDeclType	gs_ref_memory_t *		8869285	0					
ANR	8869295	Identifier	other		8869285	1					
ANR	8869296	IfStatement	"if ( clump_locate ( ptr , & gcst -> loc ) )"		8869285	2					
ANR	8869297	Condition	"clump_locate ( ptr , & gcst -> loc )"	51:8:1563:1591	8869285	0	True				
ANR	8869298	CallExpression	"clump_locate ( ptr , & gcst -> loc )"		8869285	0					
ANR	8869299	Callee	clump_locate		8869285	0					
ANR	8869300	Identifier	clump_locate		8869285	0					
ANR	8869301	ArgumentList	ptr		8869285	1					
ANR	8869302	Argument	ptr		8869285	0					
ANR	8869303	Identifier	ptr		8869285	0					
ANR	8869304	Argument	& gcst -> loc		8869285	1					
ANR	8869305	UnaryOperationExpression	& gcst -> loc		8869285	0					
ANR	8869306	UnaryOperator	&		8869285	0					
ANR	8869307	PtrMemberAccess	gcst -> loc		8869285	1					
ANR	8869308	Identifier	gcst		8869285	0					
ANR	8869309	Identifier	loc		8869285	1					
ANR	8869310	ReturnStatement	return gcst -> loc . cp ;	52:8:1602:1621	8869285	1	True				
ANR	8869311	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869312	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869313	Identifier	gcst		8869285	0					
ANR	8869314	Identifier	loc		8869285	1					
ANR	8869315	Identifier	cp		8869285	1					
ANR	8869316	ExpressionStatement	mem = gcst -> loc . memory	53:4:1627:1649	8869285	3	True				
ANR	8869317	AssignmentExpression	mem = gcst -> loc . memory		8869285	0		=			
ANR	8869318	Identifier	mem		8869285	0					
ANR	8869319	MemberAccess	gcst -> loc . memory		8869285	1					
ANR	8869320	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869321	Identifier	gcst		8869285	0					
ANR	8869322	Identifier	loc		8869285	1					
ANR	8869323	Identifier	memory		8869285	1					
ANR	8869324	IfStatement	if ( ( other = ( gs_ref_memory_t * ) mem -> stable_memory ) != mem || ( other = gcst -> spaces_indexed [ mem -> space >> r_space_shift ] ) != mem )		8869285	4					
ANR	8869325	Condition	( other = ( gs_ref_memory_t * ) mem -> stable_memory ) != mem || ( other = gcst -> spaces_indexed [ mem -> space >> r_space_shift ] ) != mem	60:8:1815:1946	8869285	0	True				
ANR	8869326	OrExpression	( other = ( gs_ref_memory_t * ) mem -> stable_memory ) != mem || ( other = gcst -> spaces_indexed [ mem -> space >> r_space_shift ] ) != mem		8869285	0		||			
ANR	8869327	EqualityExpression	( other = ( gs_ref_memory_t * ) mem -> stable_memory ) != mem		8869285	0		!=			
ANR	8869328	AssignmentExpression	other = ( gs_ref_memory_t * ) mem -> stable_memory		8869285	0		=			
ANR	8869329	Identifier	other		8869285	0					
ANR	8869330	CastExpression	( gs_ref_memory_t * ) mem -> stable_memory		8869285	1					
ANR	8869331	CastTarget	gs_ref_memory_t *		8869285	0					
ANR	8869332	PtrMemberAccess	mem -> stable_memory		8869285	1					
ANR	8869333	Identifier	mem		8869285	0					
ANR	8869334	Identifier	stable_memory		8869285	1					
ANR	8869335	Identifier	mem		8869285	1					
ANR	8869336	EqualityExpression	( other = gcst -> spaces_indexed [ mem -> space >> r_space_shift ] ) != mem		8869285	1		!=			
ANR	8869337	AssignmentExpression	other = gcst -> spaces_indexed [ mem -> space >> r_space_shift ]		8869285	0		=			
ANR	8869338	Identifier	other		8869285	0					
ANR	8869339	ArrayIndexing	gcst -> spaces_indexed [ mem -> space >> r_space_shift ]		8869285	1					
ANR	8869340	PtrMemberAccess	gcst -> spaces_indexed		8869285	0					
ANR	8869341	Identifier	gcst		8869285	0					
ANR	8869342	Identifier	spaces_indexed		8869285	1					
ANR	8869343	ShiftExpression	mem -> space >> r_space_shift		8869285	1		>>			
ANR	8869344	PtrMemberAccess	mem -> space		8869285	0					
ANR	8869345	Identifier	mem		8869285	0					
ANR	8869346	Identifier	space		8869285	1					
ANR	8869347	Identifier	r_space_shift		8869285	1					
ANR	8869348	Identifier	mem		8869285	1					
ANR	8869349	CompoundStatement		16:10:459:459	8869285	1					
ANR	8869350	ExpressionStatement	gcst -> loc . memory = other	63:8:1968:1992	8869285	0	True				
ANR	8869351	AssignmentExpression	gcst -> loc . memory = other		8869285	0		=			
ANR	8869352	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869353	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869354	Identifier	gcst		8869285	0					
ANR	8869355	Identifier	loc		8869285	1					
ANR	8869356	Identifier	memory		8869285	1					
ANR	8869357	Identifier	other		8869285	1					
ANR	8869358	ExpressionStatement	gcst -> loc . cp = 0	64:8:2002:2018	8869285	1	True				
ANR	8869359	AssignmentExpression	gcst -> loc . cp = 0		8869285	0		=			
ANR	8869360	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869361	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869362	Identifier	gcst		8869285	0					
ANR	8869363	Identifier	loc		8869285	1					
ANR	8869364	Identifier	cp		8869285	1					
ANR	8869365	PrimaryExpression	0		8869285	1					
ANR	8869366	IfStatement	"if ( clump_locate ( ptr , & gcst -> loc ) )"		8869285	2					
ANR	8869367	Condition	"clump_locate ( ptr , & gcst -> loc )"	65:12:2032:2060	8869285	0	True				
ANR	8869368	CallExpression	"clump_locate ( ptr , & gcst -> loc )"		8869285	0					
ANR	8869369	Callee	clump_locate		8869285	0					
ANR	8869370	Identifier	clump_locate		8869285	0					
ANR	8869371	ArgumentList	ptr		8869285	1					
ANR	8869372	Argument	ptr		8869285	0					
ANR	8869373	Identifier	ptr		8869285	0					
ANR	8869374	Argument	& gcst -> loc		8869285	1					
ANR	8869375	UnaryOperationExpression	& gcst -> loc		8869285	0					
ANR	8869376	UnaryOperator	&		8869285	0					
ANR	8869377	PtrMemberAccess	gcst -> loc		8869285	1					
ANR	8869378	Identifier	gcst		8869285	0					
ANR	8869379	Identifier	loc		8869285	1					
ANR	8869380	ReturnStatement	return gcst -> loc . cp ;	66:12:2075:2094	8869285	1	True				
ANR	8869381	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869382	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869383	Identifier	gcst		8869285	0					
ANR	8869384	Identifier	loc		8869285	1					
ANR	8869385	Identifier	cp		8869285	1					
ANR	8869386	IfStatement	if ( gcst -> space_local != gcst -> space_global )		8869285	5					
ANR	8869387	Condition	gcst -> space_local != gcst -> space_global	75:8:2297:2335	8869285	0	True				
ANR	8869388	EqualityExpression	gcst -> space_local != gcst -> space_global		8869285	0		!=			
ANR	8869389	PtrMemberAccess	gcst -> space_local		8869285	0					
ANR	8869390	Identifier	gcst		8869285	0					
ANR	8869391	Identifier	space_local		8869285	1					
ANR	8869392	PtrMemberAccess	gcst -> space_global		8869285	1					
ANR	8869393	Identifier	gcst		8869285	0					
ANR	8869394	Identifier	space_global		8869285	1					
ANR	8869395	CompoundStatement		29:49:839:839	8869285	1					
ANR	8869396	ExpressionStatement	gcst -> loc . memory = other = ( mem -> space == avm_local ? gcst -> space_global : gcst -> space_local )	76:8:2348:2453	8869285	0	True				
ANR	8869397	AssignmentExpression	gcst -> loc . memory = other = ( mem -> space == avm_local ? gcst -> space_global : gcst -> space_local )		8869285	0		=			
ANR	8869398	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869399	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869400	Identifier	gcst		8869285	0					
ANR	8869401	Identifier	loc		8869285	1					
ANR	8869402	Identifier	memory		8869285	1					
ANR	8869403	AssignmentExpression	other = ( mem -> space == avm_local ? gcst -> space_global : gcst -> space_local )		8869285	1		=			
ANR	8869404	Identifier	other		8869285	0					
ANR	8869405	ConditionalExpression	mem -> space == avm_local ? gcst -> space_global : gcst -> space_local		8869285	1					
ANR	8869406	Condition	mem -> space == avm_local		8869285	0					
ANR	8869407	EqualityExpression	mem -> space == avm_local		8869285	0		==			
ANR	8869408	PtrMemberAccess	mem -> space		8869285	0					
ANR	8869409	Identifier	mem		8869285	0					
ANR	8869410	Identifier	space		8869285	1					
ANR	8869411	Identifier	avm_local		8869285	1					
ANR	8869412	PtrMemberAccess	gcst -> space_global		8869285	1					
ANR	8869413	Identifier	gcst		8869285	0					
ANR	8869414	Identifier	space_global		8869285	1					
ANR	8869415	PtrMemberAccess	gcst -> space_local		8869285	2					
ANR	8869416	Identifier	gcst		8869285	0					
ANR	8869417	Identifier	space_local		8869285	1					
ANR	8869418	ExpressionStatement	gcst -> loc . cp = 0	78:8:2463:2479	8869285	1	True				
ANR	8869419	AssignmentExpression	gcst -> loc . cp = 0		8869285	0		=			
ANR	8869420	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869421	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869422	Identifier	gcst		8869285	0					
ANR	8869423	Identifier	loc		8869285	1					
ANR	8869424	Identifier	cp		8869285	1					
ANR	8869425	PrimaryExpression	0		8869285	1					
ANR	8869426	IfStatement	"if ( clump_locate ( ptr , & gcst -> loc ) )"		8869285	2					
ANR	8869427	Condition	"clump_locate ( ptr , & gcst -> loc )"	79:12:2493:2521	8869285	0	True				
ANR	8869428	CallExpression	"clump_locate ( ptr , & gcst -> loc )"		8869285	0					
ANR	8869429	Callee	clump_locate		8869285	0					
ANR	8869430	Identifier	clump_locate		8869285	0					
ANR	8869431	ArgumentList	ptr		8869285	1					
ANR	8869432	Argument	ptr		8869285	0					
ANR	8869433	Identifier	ptr		8869285	0					
ANR	8869434	Argument	& gcst -> loc		8869285	1					
ANR	8869435	UnaryOperationExpression	& gcst -> loc		8869285	0					
ANR	8869436	UnaryOperator	&		8869285	0					
ANR	8869437	PtrMemberAccess	gcst -> loc		8869285	1					
ANR	8869438	Identifier	gcst		8869285	0					
ANR	8869439	Identifier	loc		8869285	1					
ANR	8869440	ReturnStatement	return gcst -> loc . cp ;	80:12:2536:2555	8869285	1	True				
ANR	8869441	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869442	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869443	Identifier	gcst		8869285	0					
ANR	8869444	Identifier	loc		8869285	1					
ANR	8869445	Identifier	cp		8869285	1					
ANR	8869446	IfStatement	if ( other -> stable_memory != ( const gs_memory_t * ) other )		8869285	3					
ANR	8869447	Condition	other -> stable_memory != ( const gs_memory_t * ) other	82:12:2609:2658	8869285	0	True				
ANR	8869448	EqualityExpression	other -> stable_memory != ( const gs_memory_t * ) other		8869285	0		!=			
ANR	8869449	PtrMemberAccess	other -> stable_memory		8869285	0					
ANR	8869450	Identifier	other		8869285	0					
ANR	8869451	Identifier	stable_memory		8869285	1					
ANR	8869452	CastExpression	( const gs_memory_t * ) other		8869285	1					
ANR	8869453	CastTarget	const gs_memory_t *		8869285	0					
ANR	8869454	Identifier	other		8869285	1					
ANR	8869455	CompoundStatement		36:64:1162:1162	8869285	1					
ANR	8869456	ExpressionStatement	gcst -> loc . memory = ( gs_ref_memory_t * ) other -> stable_memory	83:12:2675:2733	8869285	0	True				
ANR	8869457	AssignmentExpression	gcst -> loc . memory = ( gs_ref_memory_t * ) other -> stable_memory		8869285	0		=			
ANR	8869458	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869459	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869460	Identifier	gcst		8869285	0					
ANR	8869461	Identifier	loc		8869285	1					
ANR	8869462	Identifier	memory		8869285	1					
ANR	8869463	CastExpression	( gs_ref_memory_t * ) other -> stable_memory		8869285	1					
ANR	8869464	CastTarget	gs_ref_memory_t *		8869285	0					
ANR	8869465	PtrMemberAccess	other -> stable_memory		8869285	1					
ANR	8869466	Identifier	other		8869285	0					
ANR	8869467	Identifier	stable_memory		8869285	1					
ANR	8869468	ExpressionStatement	gcst -> loc . cp = 0	84:12:2747:2763	8869285	1	True				
ANR	8869469	AssignmentExpression	gcst -> loc . cp = 0		8869285	0		=			
ANR	8869470	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869471	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869472	Identifier	gcst		8869285	0					
ANR	8869473	Identifier	loc		8869285	1					
ANR	8869474	Identifier	cp		8869285	1					
ANR	8869475	PrimaryExpression	0		8869285	1					
ANR	8869476	IfStatement	"if ( clump_locate ( ptr , & gcst -> loc ) )"		8869285	2					
ANR	8869477	Condition	"clump_locate ( ptr , & gcst -> loc )"	85:16:2781:2809	8869285	0	True				
ANR	8869478	CallExpression	"clump_locate ( ptr , & gcst -> loc )"		8869285	0					
ANR	8869479	Callee	clump_locate		8869285	0					
ANR	8869480	Identifier	clump_locate		8869285	0					
ANR	8869481	ArgumentList	ptr		8869285	1					
ANR	8869482	Argument	ptr		8869285	0					
ANR	8869483	Identifier	ptr		8869285	0					
ANR	8869484	Argument	& gcst -> loc		8869285	1					
ANR	8869485	UnaryOperationExpression	& gcst -> loc		8869285	0					
ANR	8869486	UnaryOperator	&		8869285	0					
ANR	8869487	PtrMemberAccess	gcst -> loc		8869285	1					
ANR	8869488	Identifier	gcst		8869285	0					
ANR	8869489	Identifier	loc		8869285	1					
ANR	8869490	ReturnStatement	return gcst -> loc . cp ;	86:16:2828:2847	8869285	1	True				
ANR	8869491	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869492	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869493	Identifier	gcst		8869285	0					
ANR	8869494	Identifier	loc		8869285	1					
ANR	8869495	Identifier	cp		8869285	1					
ANR	8869496	ExpressionStatement	gcst -> loc . memory = other	87:12:2861:2885	8869285	3	True				
ANR	8869497	AssignmentExpression	gcst -> loc . memory = other		8869285	0		=			
ANR	8869498	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869499	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869500	Identifier	gcst		8869285	0					
ANR	8869501	Identifier	loc		8869285	1					
ANR	8869502	Identifier	memory		8869285	1					
ANR	8869503	Identifier	other		8869285	1					
ANR	8869504	WhileStatement	while ( gcst -> loc . memory -> saved != 0 )		8869285	4					
ANR	8869505	Condition	gcst -> loc . memory -> saved != 0	90:15:2963:2990	8869285	0	True				
ANR	8869506	EqualityExpression	gcst -> loc . memory -> saved != 0		8869285	0		!=			
ANR	8869507	PtrMemberAccess	gcst -> loc . memory -> saved		8869285	0					
ANR	8869508	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869509	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869510	Identifier	gcst		8869285	0					
ANR	8869511	Identifier	loc		8869285	1					
ANR	8869512	Identifier	memory		8869285	1					
ANR	8869513	Identifier	saved		8869285	1					
ANR	8869514	PrimaryExpression	0		8869285	1					
ANR	8869515	CompoundStatement		44:45:1494:1494	8869285	1					
ANR	8869516	ExpressionStatement	gcst -> loc . memory = & gcst -> loc . memory -> saved -> state	91:12:3007:3057	8869285	0	True				
ANR	8869517	AssignmentExpression	gcst -> loc . memory = & gcst -> loc . memory -> saved -> state		8869285	0		=			
ANR	8869518	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869519	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869520	Identifier	gcst		8869285	0					
ANR	8869521	Identifier	loc		8869285	1					
ANR	8869522	Identifier	memory		8869285	1					
ANR	8869523	UnaryOperationExpression	& gcst -> loc . memory -> saved -> state		8869285	1					
ANR	8869524	UnaryOperator	&		8869285	0					
ANR	8869525	PtrMemberAccess	gcst -> loc . memory -> saved -> state		8869285	1					
ANR	8869526	PtrMemberAccess	gcst -> loc . memory -> saved		8869285	0					
ANR	8869527	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869528	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869529	Identifier	gcst		8869285	0					
ANR	8869530	Identifier	loc		8869285	1					
ANR	8869531	Identifier	memory		8869285	1					
ANR	8869532	Identifier	saved		8869285	1					
ANR	8869533	Identifier	state		8869285	1					
ANR	8869534	ExpressionStatement	gcst -> loc . cp = 0	92:12:3071:3087	8869285	1	True				
ANR	8869535	AssignmentExpression	gcst -> loc . cp = 0		8869285	0		=			
ANR	8869536	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869537	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869538	Identifier	gcst		8869285	0					
ANR	8869539	Identifier	loc		8869285	1					
ANR	8869540	Identifier	cp		8869285	1					
ANR	8869541	PrimaryExpression	0		8869285	1					
ANR	8869542	IfStatement	"if ( clump_locate ( ptr , & gcst -> loc ) )"		8869285	2					
ANR	8869543	Condition	"clump_locate ( ptr , & gcst -> loc )"	93:16:3105:3133	8869285	0	True				
ANR	8869544	CallExpression	"clump_locate ( ptr , & gcst -> loc )"		8869285	0					
ANR	8869545	Callee	clump_locate		8869285	0					
ANR	8869546	Identifier	clump_locate		8869285	0					
ANR	8869547	ArgumentList	ptr		8869285	1					
ANR	8869548	Argument	ptr		8869285	0					
ANR	8869549	Identifier	ptr		8869285	0					
ANR	8869550	Argument	& gcst -> loc		8869285	1					
ANR	8869551	UnaryOperationExpression	& gcst -> loc		8869285	0					
ANR	8869552	UnaryOperator	&		8869285	0					
ANR	8869553	PtrMemberAccess	gcst -> loc		8869285	1					
ANR	8869554	Identifier	gcst		8869285	0					
ANR	8869555	Identifier	loc		8869285	1					
ANR	8869556	ReturnStatement	return gcst -> loc . cp ;	94:16:3152:3171	8869285	1	True				
ANR	8869557	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869558	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869559	Identifier	gcst		8869285	0					
ANR	8869560	Identifier	loc		8869285	1					
ANR	8869561	Identifier	cp		8869285	1					
ANR	8869562	IfStatement	if ( mem != gcst -> space_system )		8869285	6					
ANR	8869563	Condition	mem != gcst -> space_system	103:8:3350:3374	8869285	0	True				
ANR	8869564	EqualityExpression	mem != gcst -> space_system		8869285	0		!=			
ANR	8869565	Identifier	mem		8869285	0					
ANR	8869566	PtrMemberAccess	gcst -> space_system		8869285	1					
ANR	8869567	Identifier	gcst		8869285	0					
ANR	8869568	Identifier	space_system		8869285	1					
ANR	8869569	CompoundStatement		57:35:1878:1878	8869285	1					
ANR	8869570	ExpressionStatement	gcst -> loc . memory = gcst -> space_system	104:8:3387:3424	8869285	0	True				
ANR	8869571	AssignmentExpression	gcst -> loc . memory = gcst -> space_system		8869285	0		=			
ANR	8869572	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869573	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869574	Identifier	gcst		8869285	0					
ANR	8869575	Identifier	loc		8869285	1					
ANR	8869576	Identifier	memory		8869285	1					
ANR	8869577	PtrMemberAccess	gcst -> space_system		8869285	1					
ANR	8869578	Identifier	gcst		8869285	0					
ANR	8869579	Identifier	space_system		8869285	1					
ANR	8869580	ExpressionStatement	gcst -> loc . cp = 0	105:8:3434:3450	8869285	1	True				
ANR	8869581	AssignmentExpression	gcst -> loc . cp = 0		8869285	0		=			
ANR	8869582	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869583	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869584	Identifier	gcst		8869285	0					
ANR	8869585	Identifier	loc		8869285	1					
ANR	8869586	Identifier	cp		8869285	1					
ANR	8869587	PrimaryExpression	0		8869285	1					
ANR	8869588	IfStatement	"if ( clump_locate ( ptr , & gcst -> loc ) )"		8869285	2					
ANR	8869589	Condition	"clump_locate ( ptr , & gcst -> loc )"	106:12:3464:3492	8869285	0	True				
ANR	8869590	CallExpression	"clump_locate ( ptr , & gcst -> loc )"		8869285	0					
ANR	8869591	Callee	clump_locate		8869285	0					
ANR	8869592	Identifier	clump_locate		8869285	0					
ANR	8869593	ArgumentList	ptr		8869285	1					
ANR	8869594	Argument	ptr		8869285	0					
ANR	8869595	Identifier	ptr		8869285	0					
ANR	8869596	Argument	& gcst -> loc		8869285	1					
ANR	8869597	UnaryOperationExpression	& gcst -> loc		8869285	0					
ANR	8869598	UnaryOperator	&		8869285	0					
ANR	8869599	PtrMemberAccess	gcst -> loc		8869285	1					
ANR	8869600	Identifier	gcst		8869285	0					
ANR	8869601	Identifier	loc		8869285	1					
ANR	8869602	ReturnStatement	return gcst -> loc . cp ;	107:12:3507:3526	8869285	1	True				
ANR	8869603	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869604	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869605	Identifier	gcst		8869285	0					
ANR	8869606	Identifier	loc		8869285	1					
ANR	8869607	Identifier	cp		8869285	1					
ANR	8869608	SwitchStatement	switch ( mem -> space )		8869285	7					
ANR	8869609	Condition	mem -> space	116:12:3750:3759	8869285	0	True				
ANR	8869610	PtrMemberAccess	mem -> space		8869285	0					
ANR	8869611	Identifier	mem		8869285	0					
ANR	8869612	Identifier	space		8869285	1					
ANR	8869613	CompoundStatement		70:24:2263:2263	8869285	1					
ANR	8869614	Label	default :	117:4:3768:3775	8869285	0	True				
ANR	8869615	Identifier	default		8869285	0					
ANR	8869616	ExpressionStatement	other = gcst -> space_global	118:8:3800:3826	8869285	1	True				
ANR	8869617	AssignmentExpression	other = gcst -> space_global		8869285	0		=			
ANR	8869618	Identifier	other		8869285	0					
ANR	8869619	PtrMemberAccess	gcst -> space_global		8869285	1					
ANR	8869620	Identifier	gcst		8869285	0					
ANR	8869621	Identifier	space_global		8869285	1					
ANR	8869622	IfStatement	if ( other -> stable_memory != ( const gs_memory_t * ) other )		8869285	2					
ANR	8869623	Condition	other -> stable_memory != ( const gs_memory_t * ) other	119:12:3840:3889	8869285	0	True				
ANR	8869624	EqualityExpression	other -> stable_memory != ( const gs_memory_t * ) other		8869285	0		!=			
ANR	8869625	PtrMemberAccess	other -> stable_memory		8869285	0					
ANR	8869626	Identifier	other		8869285	0					
ANR	8869627	Identifier	stable_memory		8869285	1					
ANR	8869628	CastExpression	( const gs_memory_t * ) other		8869285	1					
ANR	8869629	CastTarget	const gs_memory_t *		8869285	0					
ANR	8869630	Identifier	other		8869285	1					
ANR	8869631	CompoundStatement		73:64:2393:2393	8869285	1					
ANR	8869632	ExpressionStatement	gcst -> loc . memory = ( gs_ref_memory_t * ) other -> stable_memory	120:12:3906:3964	8869285	0	True				
ANR	8869633	AssignmentExpression	gcst -> loc . memory = ( gs_ref_memory_t * ) other -> stable_memory		8869285	0		=			
ANR	8869634	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869635	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869636	Identifier	gcst		8869285	0					
ANR	8869637	Identifier	loc		8869285	1					
ANR	8869638	Identifier	memory		8869285	1					
ANR	8869639	CastExpression	( gs_ref_memory_t * ) other -> stable_memory		8869285	1					
ANR	8869640	CastTarget	gs_ref_memory_t *		8869285	0					
ANR	8869641	PtrMemberAccess	other -> stable_memory		8869285	1					
ANR	8869642	Identifier	other		8869285	0					
ANR	8869643	Identifier	stable_memory		8869285	1					
ANR	8869644	ExpressionStatement	gcst -> loc . cp = 0	121:12:3978:3994	8869285	1	True				
ANR	8869645	AssignmentExpression	gcst -> loc . cp = 0		8869285	0		=			
ANR	8869646	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869647	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869648	Identifier	gcst		8869285	0					
ANR	8869649	Identifier	loc		8869285	1					
ANR	8869650	Identifier	cp		8869285	1					
ANR	8869651	PrimaryExpression	0		8869285	1					
ANR	8869652	IfStatement	"if ( clump_locate ( ptr , & gcst -> loc ) )"		8869285	2					
ANR	8869653	Condition	"clump_locate ( ptr , & gcst -> loc )"	122:16:4012:4040	8869285	0	True				
ANR	8869654	CallExpression	"clump_locate ( ptr , & gcst -> loc )"		8869285	0					
ANR	8869655	Callee	clump_locate		8869285	0					
ANR	8869656	Identifier	clump_locate		8869285	0					
ANR	8869657	ArgumentList	ptr		8869285	1					
ANR	8869658	Argument	ptr		8869285	0					
ANR	8869659	Identifier	ptr		8869285	0					
ANR	8869660	Argument	& gcst -> loc		8869285	1					
ANR	8869661	UnaryOperationExpression	& gcst -> loc		8869285	0					
ANR	8869662	UnaryOperator	&		8869285	0					
ANR	8869663	PtrMemberAccess	gcst -> loc		8869285	1					
ANR	8869664	Identifier	gcst		8869285	0					
ANR	8869665	Identifier	loc		8869285	1					
ANR	8869666	ReturnStatement	return gcst -> loc . cp ;	123:16:4059:4078	8869285	1	True				
ANR	8869667	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869668	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869669	Identifier	gcst		8869285	0					
ANR	8869670	Identifier	loc		8869285	1					
ANR	8869671	Identifier	cp		8869285	1					
ANR	8869672	ExpressionStatement	gcst -> loc . memory = other	125:8:4098:4122	8869285	3	True				
ANR	8869673	AssignmentExpression	gcst -> loc . memory = other		8869285	0		=			
ANR	8869674	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869675	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869676	Identifier	gcst		8869285	0					
ANR	8869677	Identifier	loc		8869285	1					
ANR	8869678	Identifier	memory		8869285	1					
ANR	8869679	Identifier	other		8869285	1					
ANR	8869680	BreakStatement	break ;	126:8:4132:4137	8869285	4	True				
ANR	8869681	Label	case avm_global :	127:4:4143:4158	8869285	5	True				
ANR	8869682	Identifier	avm_global		8869285	0					
ANR	8869683	ExpressionStatement	gcst -> loc . memory = gcst -> space_global	128:8:4168:4205	8869285	6	True				
ANR	8869684	AssignmentExpression	gcst -> loc . memory = gcst -> space_global		8869285	0		=			
ANR	8869685	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869686	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869687	Identifier	gcst		8869285	0					
ANR	8869688	Identifier	loc		8869285	1					
ANR	8869689	Identifier	memory		8869285	1					
ANR	8869690	PtrMemberAccess	gcst -> space_global		8869285	1					
ANR	8869691	Identifier	gcst		8869285	0					
ANR	8869692	Identifier	space_global		8869285	1					
ANR	8869693	BreakStatement	break ;	129:8:4215:4220	8869285	7	True				
ANR	8869694	Label	case avm_local :	130:4:4226:4240	8869285	8	True				
ANR	8869695	Identifier	avm_local		8869285	0					
ANR	8869696	ExpressionStatement	gcst -> loc . memory = gcst -> space_local	131:8:4250:4286	8869285	9	True				
ANR	8869697	AssignmentExpression	gcst -> loc . memory = gcst -> space_local		8869285	0		=			
ANR	8869698	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869699	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869700	Identifier	gcst		8869285	0					
ANR	8869701	Identifier	loc		8869285	1					
ANR	8869702	Identifier	memory		8869285	1					
ANR	8869703	PtrMemberAccess	gcst -> space_local		8869285	1					
ANR	8869704	Identifier	gcst		8869285	0					
ANR	8869705	Identifier	space_local		8869285	1					
ANR	8869706	BreakStatement	break ;	132:8:4296:4301	8869285	10	True				
ANR	8869707	ForStatement	for ( ; ; )		8869285	8					
ANR	8869708	CompoundStatement		88:13:2823:2823	8869285	0					
ANR	8869709	IfStatement	if ( gcst -> loc . memory != mem )		8869285	0					
ANR	8869710	Condition	gcst -> loc . memory != mem	135:12:4336:4358	8869285	0	True				
ANR	8869711	EqualityExpression	gcst -> loc . memory != mem		8869285	0		!=			
ANR	8869712	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869713	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869714	Identifier	gcst		8869285	0					
ANR	8869715	Identifier	loc		8869285	1					
ANR	8869716	Identifier	memory		8869285	1					
ANR	8869717	Identifier	mem		8869285	1					
ANR	8869718	CompoundStatement		89:37:2862:2862	8869285	1					
ANR	8869719	ExpressionStatement	gcst -> loc . cp = 0	136:12:4396:4412	8869285	0	True				
ANR	8869720	AssignmentExpression	gcst -> loc . cp = 0		8869285	0		=			
ANR	8869721	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869722	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869723	Identifier	gcst		8869285	0					
ANR	8869724	Identifier	loc		8869285	1					
ANR	8869725	Identifier	cp		8869285	1					
ANR	8869726	PrimaryExpression	0		8869285	1					
ANR	8869727	IfStatement	"if ( clump_locate ( ptr , & gcst -> loc ) )"		8869285	1					
ANR	8869728	Condition	"clump_locate ( ptr , & gcst -> loc )"	137:16:4430:4458	8869285	0	True				
ANR	8869729	CallExpression	"clump_locate ( ptr , & gcst -> loc )"		8869285	0					
ANR	8869730	Callee	clump_locate		8869285	0					
ANR	8869731	Identifier	clump_locate		8869285	0					
ANR	8869732	ArgumentList	ptr		8869285	1					
ANR	8869733	Argument	ptr		8869285	0					
ANR	8869734	Identifier	ptr		8869285	0					
ANR	8869735	Argument	& gcst -> loc		8869285	1					
ANR	8869736	UnaryOperationExpression	& gcst -> loc		8869285	0					
ANR	8869737	UnaryOperator	&		8869285	0					
ANR	8869738	PtrMemberAccess	gcst -> loc		8869285	1					
ANR	8869739	Identifier	gcst		8869285	0					
ANR	8869740	Identifier	loc		8869285	1					
ANR	8869741	ReturnStatement	return gcst -> loc . cp ;	138:16:4477:4496	8869285	1	True				
ANR	8869742	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869743	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869744	Identifier	gcst		8869285	0					
ANR	8869745	Identifier	loc		8869285	1					
ANR	8869746	Identifier	cp		8869285	1					
ANR	8869747	IfStatement	if ( gcst -> loc . memory -> saved == 0 )		8869285	1					
ANR	8869748	Condition	gcst -> loc . memory -> saved == 0	140:12:4520:4547	8869285	0	True				
ANR	8869749	EqualityExpression	gcst -> loc . memory -> saved == 0		8869285	0		==			
ANR	8869750	PtrMemberAccess	gcst -> loc . memory -> saved		8869285	0					
ANR	8869751	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869752	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869753	Identifier	gcst		8869285	0					
ANR	8869754	Identifier	loc		8869285	1					
ANR	8869755	Identifier	memory		8869285	1					
ANR	8869756	Identifier	saved		8869285	1					
ANR	8869757	PrimaryExpression	0		8869285	1					
ANR	8869758	BreakStatement	break ;	141:12:4562:4567	8869285	1	True				
ANR	8869759	ExpressionStatement	gcst -> loc . memory = & gcst -> loc . memory -> saved -> state	142:8:4577:4627	8869285	2	True				
ANR	8869760	AssignmentExpression	gcst -> loc . memory = & gcst -> loc . memory -> saved -> state		8869285	0		=			
ANR	8869761	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869762	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869763	Identifier	gcst		8869285	0					
ANR	8869764	Identifier	loc		8869285	1					
ANR	8869765	Identifier	memory		8869285	1					
ANR	8869766	UnaryOperationExpression	& gcst -> loc . memory -> saved -> state		8869285	1					
ANR	8869767	UnaryOperator	&		8869285	0					
ANR	8869768	PtrMemberAccess	gcst -> loc . memory -> saved -> state		8869285	1					
ANR	8869769	PtrMemberAccess	gcst -> loc . memory -> saved		8869285	0					
ANR	8869770	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869771	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869772	Identifier	gcst		8869285	0					
ANR	8869773	Identifier	loc		8869285	1					
ANR	8869774	Identifier	memory		8869285	1					
ANR	8869775	Identifier	saved		8869285	1					
ANR	8869776	Identifier	state		8869285	1					
ANR	8869777	ExpressionStatement	gcst -> loc . memory = mem	147:4:4704:4726	8869285	9	True				
ANR	8869778	AssignmentExpression	gcst -> loc . memory = mem		8869285	0		=			
ANR	8869779	MemberAccess	gcst -> loc . memory		8869285	0					
ANR	8869780	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869781	Identifier	gcst		8869285	0					
ANR	8869782	Identifier	loc		8869285	1					
ANR	8869783	Identifier	memory		8869285	1					
ANR	8869784	Identifier	mem		8869285	1					
ANR	8869785	ExpressionStatement	gcst -> loc . cp = 0	148:4:4732:4748	8869285	10	True				
ANR	8869786	AssignmentExpression	gcst -> loc . cp = 0		8869285	0		=			
ANR	8869787	MemberAccess	gcst -> loc . cp		8869285	0					
ANR	8869788	PtrMemberAccess	gcst -> loc		8869285	0					
ANR	8869789	Identifier	gcst		8869285	0					
ANR	8869790	Identifier	loc		8869285	1					
ANR	8869791	Identifier	cp		8869285	1					
ANR	8869792	PrimaryExpression	0		8869285	1					
ANR	8869793	ReturnStatement	return 0 ;	149:4:4754:4762	8869285	11	True				
ANR	8869794	PrimaryExpression	0		8869285	0					
ANR	8869795	ReturnType	clump_t *		8869285	1					
ANR	8869796	Identifier	gc_locate		8869285	2					
ANR	8869797	ParameterList	"const void * ptr , gc_state_t * gcst"		8869285	3					
ANR	8869798	Parameter	const void * ptr	46:10:1462:1476	8869285	0	True				
ANR	8869799	ParameterType	const void *		8869285	0					
ANR	8869800	Identifier	ptr		8869285	1					
ANR	8869801	Parameter	gc_state_t * gcst	46:27:1479:1495	8869285	1	True				
ANR	8869802	ParameterType	gc_state_t *		8869285	0					
ANR	8869803	Identifier	gcst		8869285	1					
ANR	8869804	CFGEntryNode	ENTRY		8869285		True				
ANR	8869805	CFGExitNode	EXIT		8869285		True				
ANR	8869806	InfiniteForNode	true		8869285		True				
ANR	8869807	Symbol	other		8869285						
ANR	8869808	Symbol	mem -> stable_memory		8869285						
ANR	8869809	Symbol	gcst -> space_system		8869285						
ANR	8869810	Symbol	avm_local		8869285						
ANR	8869811	Symbol	gcst -> loc . memory		8869285						
ANR	8869812	Symbol	* mem -> space		8869285						
ANR	8869813	Symbol	gcst		8869285						
ANR	8869814	Symbol	gcst -> spaces_indexed		8869285						
ANR	8869815	Symbol	gcst -> loc . cp		8869285						
ANR	8869816	Symbol	* r_space_shift		8869285						
ANR	8869817	Symbol	mem		8869285						
ANR	8869818	Symbol	gcst -> space_global		8869285						
ANR	8869819	Symbol	gcst -> loc . memory -> saved		8869285						
ANR	8869820	Symbol	other -> stable_memory		8869285						
ANR	8869821	Symbol	& gcst -> loc . memory -> saved -> state		8869285						
ANR	8869822	Symbol	r_space_shift		8869285						
ANR	8869823	Symbol	gcst -> loc		8869285						
ANR	8869824	Symbol	* * mem		8869285						
ANR	8869825	Symbol	* other		8869285						
ANR	8869826	Symbol	* gcst		8869285						
ANR	8869827	Symbol	clump_locate		8869285						
ANR	8869828	Symbol	mem -> space		8869285						
ANR	8869829	Symbol	ptr		8869285						
ANR	8869830	Symbol	* gcst -> loc		8869285						
ANR	8869831	Symbol	* gcst -> loc . memory		8869285						
ANR	8869832	Symbol	gcst -> space_local		8869285						
ANR	8869833	Symbol	& gcst -> loc		8869285						
ANR	8869834	Symbol	* gcst -> spaces_indexed		8869285						
ANR	8869835	Symbol	* * gcst		8869285						
ANR	8869836	Symbol	* mem		8869285						
ANR	8869837	ClassDef	alloc_temp_save_s	157:8:4907:5013							
ANR	8869838	DeclStmt									
ANR	8869839	Decl							clump_t	clump_t *	cc
ANR	8869840	DeclStmt									
ANR	8869841	Decl							uint	uint	rsize
ANR	8869842	DeclStmt									
ANR	8869843	Decl							ref	ref	rlast
ANR	8869844	DeclStmt									
ANR	8869845	Decl							alloc_temp_save_s	alloc_temp_save_s	alloc_temp_save_t
ANR	8869846	Function	alloc_temp_save	163:0:5065:5535							
ANR	8869847	FunctionDef	"alloc_temp_save (alloc_temp_save_t * pats , gs_ref_memory_t * mem)"		8869846	0					
ANR	8869848	CompoundStatement		165:0:5140:5535	8869846	0					
ANR	8869849	IdentifierDeclStatement	obj_header_t * rcur ;	166:4:5146:5164	8869846	0	True				
ANR	8869850	IdentifierDecl	* rcur		8869846	0					
ANR	8869851	IdentifierDeclType	obj_header_t *		8869846	0					
ANR	8869852	Identifier	rcur		8869846	1					
ANR	8869853	ExpressionStatement	pats -> cc = mem -> cc	168:4:5171:5189	8869846	1	True				
ANR	8869854	AssignmentExpression	pats -> cc = mem -> cc		8869846	0		=			
ANR	8869855	PtrMemberAccess	pats -> cc		8869846	0					
ANR	8869856	Identifier	pats		8869846	0					
ANR	8869857	Identifier	cc		8869846	1					
ANR	8869858	PtrMemberAccess	mem -> cc		8869846	1					
ANR	8869859	Identifier	mem		8869846	0					
ANR	8869860	Identifier	cc		8869846	1					
ANR	8869861	IfStatement	if ( mem -> cc == NULL )		8869846	2					
ANR	8869862	Condition	mem -> cc == NULL	169:8:5199:5213	8869846	0	True				
ANR	8869863	EqualityExpression	mem -> cc == NULL		8869846	0		==			
ANR	8869864	PtrMemberAccess	mem -> cc		8869846	0					
ANR	8869865	Identifier	mem		8869846	0					
ANR	8869866	Identifier	cc		8869846	1					
ANR	8869867	Identifier	NULL		8869846	1					
ANR	8869868	ReturnStatement	return ;	170:8:5224:5230	8869846	1	True				
ANR	8869869	ExpressionStatement	rcur = mem -> cc -> rcur	171:4:5236:5256	8869846	3	True				
ANR	8869870	AssignmentExpression	rcur = mem -> cc -> rcur		8869846	0		=			
ANR	8869871	Identifier	rcur		8869846	0					
ANR	8869872	PtrMemberAccess	mem -> cc -> rcur		8869846	1					
ANR	8869873	PtrMemberAccess	mem -> cc		8869846	0					
ANR	8869874	Identifier	mem		8869846	0					
ANR	8869875	Identifier	cc		8869846	1					
ANR	8869876	Identifier	rcur		8869846	1					
ANR	8869877	IfStatement	if ( rcur != 0 )		8869846	4					
ANR	8869878	Condition	rcur != 0	172:8:5266:5274	8869846	0	True				
ANR	8869879	EqualityExpression	rcur != 0		8869846	0		!=			
ANR	8869880	Identifier	rcur		8869846	0					
ANR	8869881	PrimaryExpression	0		8869846	1					
ANR	8869882	CompoundStatement		8:19:136:136	8869846	1					
ANR	8869883	ExpressionStatement	pats -> rsize = rcur [ - 1 ] . o_size	173:8:5287:5316	8869846	0	True				
ANR	8869884	AssignmentExpression	pats -> rsize = rcur [ - 1 ] . o_size		8869846	0		=			
ANR	8869885	PtrMemberAccess	pats -> rsize		8869846	0					
ANR	8869886	Identifier	pats		8869846	0					
ANR	8869887	Identifier	rsize		8869846	1					
ANR	8869888	MemberAccess	rcur [ - 1 ] . o_size		8869846	1					
ANR	8869889	ArrayIndexing	rcur [ - 1 ]		8869846	0					
ANR	8869890	Identifier	rcur		8869846	0					
ANR	8869891	UnaryOperationExpression	- 1		8869846	1					
ANR	8869892	UnaryOperator	-		8869846	0					
ANR	8869893	PrimaryExpression	1		8869846	1					
ANR	8869894	Identifier	o_size		8869846	1					
ANR	8869895	ExpressionStatement	rcur [ - 1 ] . o_size = mem -> cc -> rtop - ( byte * ) rcur	174:8:5326:5373	8869846	1	True				
ANR	8869896	AssignmentExpression	rcur [ - 1 ] . o_size = mem -> cc -> rtop - ( byte * ) rcur		8869846	0		=			
ANR	8869897	MemberAccess	rcur [ - 1 ] . o_size		8869846	0					
ANR	8869898	ArrayIndexing	rcur [ - 1 ]		8869846	0					
ANR	8869899	Identifier	rcur		8869846	0					
ANR	8869900	UnaryOperationExpression	- 1		8869846	1					
ANR	8869901	UnaryOperator	-		8869846	0					
ANR	8869902	PrimaryExpression	1		8869846	1					
ANR	8869903	Identifier	o_size		8869846	1					
ANR	8869904	AdditiveExpression	mem -> cc -> rtop - ( byte * ) rcur		8869846	1		-			
ANR	8869905	PtrMemberAccess	mem -> cc -> rtop		8869846	0					
ANR	8869906	PtrMemberAccess	mem -> cc		8869846	0					
ANR	8869907	Identifier	mem		8869846	0					
ANR	8869908	Identifier	cc		8869846	1					
ANR	8869909	Identifier	rtop		8869846	1					
ANR	8869910	CastExpression	( byte * ) rcur		8869846	1					
ANR	8869911	CastTarget	byte *		8869846	0					
ANR	8869912	Identifier	rcur		8869846	1					
ANR	8869913	ExpressionStatement	pats -> rlast = ( ( ref * ) mem -> cc -> rtop ) [ - 1 ]	176:8:5440:5481	8869846	2	True				
ANR	8869914	AssignmentExpression	pats -> rlast = ( ( ref * ) mem -> cc -> rtop ) [ - 1 ]		8869846	0		=			
ANR	8869915	PtrMemberAccess	pats -> rlast		8869846	0					
ANR	8869916	Identifier	pats		8869846	0					
ANR	8869917	Identifier	rlast		8869846	1					
ANR	8869918	ArrayIndexing	( ( ref * ) mem -> cc -> rtop ) [ - 1 ]		8869846	1					
ANR	8869919	CastExpression	( ref * ) mem -> cc -> rtop		8869846	0					
ANR	8869920	CastTarget	ref *		8869846	0					
ANR	8869921	PtrMemberAccess	mem -> cc -> rtop		8869846	1					
ANR	8869922	PtrMemberAccess	mem -> cc		8869846	0					
ANR	8869923	Identifier	mem		8869846	0					
ANR	8869924	Identifier	cc		8869846	1					
ANR	8869925	Identifier	rtop		8869846	1					
ANR	8869926	UnaryOperationExpression	- 1		8869846	1					
ANR	8869927	UnaryOperator	-		8869846	0					
ANR	8869928	PrimaryExpression	1		8869846	1					
ANR	8869929	ExpressionStatement	make_mark ( ( ref * ) mem -> cc -> rtop - 1 )	177:8:5491:5527	8869846	3	True				
ANR	8869930	CallExpression	make_mark ( ( ref * ) mem -> cc -> rtop - 1 )		8869846	0					
ANR	8869931	Callee	make_mark		8869846	0					
ANR	8869932	Identifier	make_mark		8869846	0					
ANR	8869933	ArgumentList	( ref * ) mem -> cc -> rtop - 1		8869846	1					
ANR	8869934	Argument	( ref * ) mem -> cc -> rtop - 1		8869846	0					
ANR	8869935	AdditiveExpression	( ref * ) mem -> cc -> rtop - 1		8869846	0		-			
ANR	8869936	CastExpression	( ref * ) mem -> cc -> rtop		8869846	0					
ANR	8869937	CastTarget	ref *		8869846	0					
ANR	8869938	PtrMemberAccess	mem -> cc -> rtop		8869846	1					
ANR	8869939	PtrMemberAccess	mem -> cc		8869846	0					
ANR	8869940	Identifier	mem		8869846	0					
ANR	8869941	Identifier	cc		8869846	1					
ANR	8869942	Identifier	rtop		8869846	1					
ANR	8869943	PrimaryExpression	1		8869846	1					
ANR	8869944	ReturnType	static void		8869846	1					
ANR	8869945	Identifier	alloc_temp_save		8869846	2					
ANR	8869946	ParameterList	"alloc_temp_save_t * pats , gs_ref_memory_t * mem"		8869846	3					
ANR	8869947	Parameter	alloc_temp_save_t * pats	164:16:5093:5115	8869846	0	True				
ANR	8869948	ParameterType	alloc_temp_save_t *		8869846	0					
ANR	8869949	Identifier	pats		8869846	1					
ANR	8869950	Parameter	gs_ref_memory_t * mem	164:41:5118:5137	8869846	1	True				
ANR	8869951	ParameterType	gs_ref_memory_t *		8869846	0					
ANR	8869952	Identifier	mem		8869846	1					
ANR	8869953	CFGEntryNode	ENTRY		8869846		True				
ANR	8869954	CFGExitNode	EXIT		8869846		True				
ANR	8869955	Symbol	* * mem -> cc		8869846						
ANR	8869956	Symbol	NULL		8869846						
ANR	8869957	Symbol	pats		8869846						
ANR	8869958	Symbol	* pats		8869846						
ANR	8869959	Symbol	* rcur		8869846						
ANR	8869960	Symbol	* mem -> cc		8869846						
ANR	8869961	Symbol	pats -> cc		8869846						
ANR	8869962	Symbol	* * mem		8869846						
ANR	8869963	Symbol	pats -> rsize		8869846						
ANR	8869964	Symbol	mem -> cc -> rcur		8869846						
ANR	8869965	Symbol	rcur [ - 1 ] . o_size		8869846						
ANR	8869966	Symbol	* * * mem		8869846						
ANR	8869967	Symbol	pats -> rlast		8869846						
ANR	8869968	Symbol	mem		8869846						
ANR	8869969	Symbol	mem -> cc		8869846						
ANR	8869970	Symbol	rcur		8869846						
ANR	8869971	Symbol	* mem -> cc -> rtop		8869846						
ANR	8869972	Symbol	mem -> cc -> rtop		8869846						
ANR	8869973	Symbol	* mem		8869846						
ANR	8869974	Function	alloc_temp_restore	181:0:5580:5858							
ANR	8869975	FunctionDef	"alloc_temp_restore (alloc_temp_save_t * pats , gs_ref_memory_t * mem)"		8869974	0					
ANR	8869976	CompoundStatement		183:0:5658:5858	8869974	0					
ANR	8869977	IdentifierDeclStatement	obj_header_t * rcur ;	184:4:5664:5682	8869974	0	True				
ANR	8869978	IdentifierDecl	* rcur		8869974	0					
ANR	8869979	IdentifierDeclType	obj_header_t *		8869974	0					
ANR	8869980	Identifier	rcur		8869974	1					
ANR	8869981	IfStatement	if ( mem -> cc && ( rcur = mem -> cc -> rcur ) != NULL )		8869974	1					
ANR	8869982	Condition	mem -> cc && ( rcur = mem -> cc -> rcur ) != NULL	186:8:5693:5733	8869974	0	True				
ANR	8869983	AndExpression	mem -> cc && ( rcur = mem -> cc -> rcur ) != NULL		8869974	0		&&			
ANR	8869984	PtrMemberAccess	mem -> cc		8869974	0					
ANR	8869985	Identifier	mem		8869974	0					
ANR	8869986	Identifier	cc		8869974	1					
ANR	8869987	EqualityExpression	( rcur = mem -> cc -> rcur ) != NULL		8869974	1		!=			
ANR	8869988	AssignmentExpression	rcur = mem -> cc -> rcur		8869974	0		=			
ANR	8869989	Identifier	rcur		8869974	0					
ANR	8869990	PtrMemberAccess	mem -> cc -> rcur		8869974	1					
ANR	8869991	PtrMemberAccess	mem -> cc		8869974	0					
ANR	8869992	Identifier	mem		8869974	0					
ANR	8869993	Identifier	cc		8869974	1					
ANR	8869994	Identifier	rcur		8869974	1					
ANR	8869995	Identifier	NULL		8869974	1					
ANR	8869996	CompoundStatement		4:51:77:77	8869974	1					
ANR	8869997	ExpressionStatement	rcur [ - 1 ] . o_size = pats -> rsize	187:8:5746:5775	8869974	0	True				
ANR	8869998	AssignmentExpression	rcur [ - 1 ] . o_size = pats -> rsize		8869974	0		=			
ANR	8869999	MemberAccess	rcur [ - 1 ] . o_size		8869974	0					
ANR	8870000	ArrayIndexing	rcur [ - 1 ]		8869974	0					
ANR	8870001	Identifier	rcur		8869974	0					
ANR	8870002	UnaryOperationExpression	- 1		8869974	1					
ANR	8870003	UnaryOperator	-		8869974	0					
ANR	8870004	PrimaryExpression	1		8869974	1					
ANR	8870005	Identifier	o_size		8869974	1					
ANR	8870006	PtrMemberAccess	pats -> rsize		8869974	1					
ANR	8870007	Identifier	pats		8869974	0					
ANR	8870008	Identifier	rsize		8869974	1					
ANR	8870009	ExpressionStatement	( ( ref * ) mem -> cc -> rtop ) [ - 1 ] = pats -> rlast	188:8:5785:5826	8869974	1	True				
ANR	8870010	AssignmentExpression	( ( ref * ) mem -> cc -> rtop ) [ - 1 ] = pats -> rlast		8869974	0		=			
ANR	8870011	ArrayIndexing	( ( ref * ) mem -> cc -> rtop ) [ - 1 ]		8869974	0					
ANR	8870012	CastExpression	( ref * ) mem -> cc -> rtop		8869974	0					
ANR	8870013	CastTarget	ref *		8869974	0					
ANR	8870014	PtrMemberAccess	mem -> cc -> rtop		8869974	1					
ANR	8870015	PtrMemberAccess	mem -> cc		8869974	0					
ANR	8870016	Identifier	mem		8869974	0					
ANR	8870017	Identifier	cc		8869974	1					
ANR	8870018	Identifier	rtop		8869974	1					
ANR	8870019	UnaryOperationExpression	- 1		8869974	1					
ANR	8870020	UnaryOperator	-		8869974	0					
ANR	8870021	PrimaryExpression	1		8869974	1					
ANR	8870022	PtrMemberAccess	pats -> rlast		8869974	1					
ANR	8870023	Identifier	pats		8869974	0					
ANR	8870024	Identifier	rlast		8869974	1					
ANR	8870025	ExpressionStatement	mem -> cc = pats -> cc	190:4:5838:5856	8869974	2	True				
ANR	8870026	AssignmentExpression	mem -> cc = pats -> cc		8869974	0		=			
ANR	8870027	PtrMemberAccess	mem -> cc		8869974	0					
ANR	8870028	Identifier	mem		8869974	0					
ANR	8870029	Identifier	cc		8869974	1					
ANR	8870030	PtrMemberAccess	pats -> cc		8869974	1					
ANR	8870031	Identifier	pats		8869974	0					
ANR	8870032	Identifier	cc		8869974	1					
ANR	8870033	ReturnType	static void		8869974	1					
ANR	8870034	Identifier	alloc_temp_restore		8869974	2					
ANR	8870035	ParameterList	"alloc_temp_save_t * pats , gs_ref_memory_t * mem"		8869974	3					
ANR	8870036	Parameter	alloc_temp_save_t * pats	182:19:5611:5633	8869974	0	True				
ANR	8870037	ParameterType	alloc_temp_save_t *		8869974	0					
ANR	8870038	Identifier	pats		8869974	1					
ANR	8870039	Parameter	gs_ref_memory_t * mem	182:44:5636:5655	8869974	1	True				
ANR	8870040	ParameterType	gs_ref_memory_t *		8869974	0					
ANR	8870041	Identifier	mem		8869974	1					
ANR	8870042	CFGEntryNode	ENTRY		8869974		True				
ANR	8870043	CFGExitNode	EXIT		8869974		True				
ANR	8870044	Symbol	* * mem -> cc		8869974						
ANR	8870045	Symbol	NULL		8869974						
ANR	8870046	Symbol	pats		8869974						
ANR	8870047	Symbol	* pats		8869974						
ANR	8870048	Symbol	* rcur		8869974						
ANR	8870049	Symbol	* mem -> cc		8869974						
ANR	8870050	Symbol	* * mem		8869974						
ANR	8870051	Symbol	pats -> rsize		8869974						
ANR	8870052	Symbol	pats -> cc		8869974						
ANR	8870053	Symbol	mem -> cc -> rcur		8869974						
ANR	8870054	Symbol	rcur [ - 1 ] . o_size		8869974						
ANR	8870055	Symbol	* * * mem		8869974						
ANR	8870056	Symbol	pats -> rlast		8869974						
ANR	8870057	Symbol	mem		8869974						
ANR	8870058	Symbol	mem -> cc		8869974						
ANR	8870059	Symbol	rcur		8869974						
ANR	8870060	Symbol	* mem -> cc -> rtop		8869974						
ANR	8870061	Symbol	mem -> cc -> rtop		8869974						
ANR	8870062	Symbol	* mem		8869974						
ANR	8870063	Function	ialloc_validate_spaces	194:0:5906:7447							
ANR	8870064	FunctionDef	ialloc_validate_spaces (const gs_dual_memory_t * dmem)		8870063	0					
ANR	8870065	CompoundStatement		196:0:5965:7447	8870063	0					
ANR	8870066	IdentifierDeclStatement	int i ;	197:4:5971:5976	8870063	0	True				
ANR	8870067	IdentifierDecl	i		8870063	0					
ANR	8870068	IdentifierDeclType	int		8870063	0					
ANR	8870069	Identifier	i		8870063	1					
ANR	8870070	IdentifierDeclStatement	gc_state_t state ;	198:4:5982:5998	8870063	1	True				
ANR	8870071	IdentifierDecl	state		8870063	0					
ANR	8870072	IdentifierDeclType	gc_state_t		8870063	0					
ANR	8870073	Identifier	state		8870063	1					
ANR	8870074	IdentifierDeclStatement	"alloc_temp_save_t save [ countof ( dmem -> spaces_indexed ) ] , save_stable [ countof ( dmem -> spaces_indexed ) ] ;"	199:4:6004:6117	8870063	2	True				
ANR	8870075	IdentifierDecl	save [ countof ( dmem -> spaces_indexed ) ]		8870063	0					
ANR	8870076	IdentifierDeclType	alloc_temp_save_t [ countof ( dmem -> spaces_indexed ) ]		8870063	0					
ANR	8870077	Identifier	save		8870063	1					
ANR	8870078	CallExpression	countof ( dmem -> spaces_indexed )		8870063	2					
ANR	8870079	Callee	countof		8870063	0					
ANR	8870080	Identifier	countof		8870063	0					
ANR	8870081	ArgumentList	dmem -> spaces_indexed		8870063	1					
ANR	8870082	Argument	dmem -> spaces_indexed		8870063	0					
ANR	8870083	PtrMemberAccess	dmem -> spaces_indexed		8870063	0					
ANR	8870084	Identifier	dmem		8870063	0					
ANR	8870085	Identifier	spaces_indexed		8870063	1					
ANR	8870086	IdentifierDecl	save_stable [ countof ( dmem -> spaces_indexed ) ]		8870063	1					
ANR	8870087	IdentifierDeclType	alloc_temp_save_t [ countof ( dmem -> spaces_indexed ) ]		8870063	0					
ANR	8870088	Identifier	save_stable		8870063	1					
ANR	8870089	CallExpression	countof ( dmem -> spaces_indexed )		8870063	2					
ANR	8870090	Callee	countof		8870063	0					
ANR	8870091	Identifier	countof		8870063	0					
ANR	8870092	ArgumentList	dmem -> spaces_indexed		8870063	1					
ANR	8870093	Argument	dmem -> spaces_indexed		8870063	0					
ANR	8870094	PtrMemberAccess	dmem -> spaces_indexed		8870063	0					
ANR	8870095	Identifier	dmem		8870063	0					
ANR	8870096	Identifier	spaces_indexed		8870063	1					
ANR	8870097	IdentifierDeclStatement	gs_ref_memory_t * mem ;	202:4:6123:6143	8870063	3	True				
ANR	8870098	IdentifierDecl	* mem		8870063	0					
ANR	8870099	IdentifierDeclType	gs_ref_memory_t *		8870063	0					
ANR	8870100	Identifier	mem		8870063	1					
ANR	8870101	ExpressionStatement	state . spaces = dmem -> spaces	204:4:6150:6177	8870063	4	True				
ANR	8870102	AssignmentExpression	state . spaces = dmem -> spaces		8870063	0		=			
ANR	8870103	MemberAccess	state . spaces		8870063	0					
ANR	8870104	Identifier	state		8870063	0					
ANR	8870105	Identifier	spaces		8870063	1					
ANR	8870106	PtrMemberAccess	dmem -> spaces		8870063	1					
ANR	8870107	Identifier	dmem		8870063	0					
ANR	8870108	Identifier	spaces		8870063	1					
ANR	8870109	ExpressionStatement	state . loc . memory = state . space_local	205:4:6183:6219	8870063	5	True				
ANR	8870110	AssignmentExpression	state . loc . memory = state . space_local		8870063	0		=			
ANR	8870111	MemberAccess	state . loc . memory		8870063	0					
ANR	8870112	MemberAccess	state . loc		8870063	0					
ANR	8870113	Identifier	state		8870063	0					
ANR	8870114	Identifier	loc		8870063	1					
ANR	8870115	Identifier	memory		8870063	1					
ANR	8870116	MemberAccess	state . space_local		8870063	1					
ANR	8870117	Identifier	state		8870063	0					
ANR	8870118	Identifier	space_local		8870063	1					
ANR	8870119	ExpressionStatement	state . loc . cp = 0	206:4:6225:6241	8870063	6	True				
ANR	8870120	AssignmentExpression	state . loc . cp = 0		8870063	0		=			
ANR	8870121	MemberAccess	state . loc . cp		8870063	0					
ANR	8870122	MemberAccess	state . loc		8870063	0					
ANR	8870123	Identifier	state		8870063	0					
ANR	8870124	Identifier	loc		8870063	1					
ANR	8870125	Identifier	cp		8870063	1					
ANR	8870126	PrimaryExpression	0		8870063	1					
ANR	8870127	ExpressionStatement	state . heap = dmem -> current -> non_gc_memory	207:4:6247:6288	8870063	7	True				
ANR	8870128	AssignmentExpression	state . heap = dmem -> current -> non_gc_memory		8870063	0		=			
ANR	8870129	MemberAccess	state . heap		8870063	0					
ANR	8870130	Identifier	state		8870063	0					
ANR	8870131	Identifier	heap		8870063	1					
ANR	8870132	PtrMemberAccess	dmem -> current -> non_gc_memory		8870063	1					
ANR	8870133	PtrMemberAccess	dmem -> current		8870063	0					
ANR	8870134	Identifier	dmem		8870063	0					
ANR	8870135	Identifier	current		8870063	1					
ANR	8870136	Identifier	non_gc_memory		8870063	1					
ANR	8870137	ForStatement	for ( i = 0 ; i < countof ( save ) ; i ++ )		8870063	8					
ANR	8870138	ForInit	i = 0 ;	211:9:6397:6402	8870063	0	True				
ANR	8870139	AssignmentExpression	i = 0		8870063	0		=			
ANR	8870140	Identifier	i		8870063	0					
ANR	8870141	PrimaryExpression	0		8870063	1					
ANR	8870142	Condition	i < countof ( save )	211:16:6404:6420	8870063	1	True				
ANR	8870143	RelationalExpression	i < countof ( save )		8870063	0		<			
ANR	8870144	Identifier	i		8870063	0					
ANR	8870145	CallExpression	countof ( save )		8870063	1					
ANR	8870146	Callee	countof		8870063	0					
ANR	8870147	Identifier	countof		8870063	0					
ANR	8870148	ArgumentList	save		8870063	1					
ANR	8870149	Argument	save		8870063	0					
ANR	8870150	Identifier	save		8870063	0					
ANR	8870151	PostIncDecOperationExpression	i ++	211:35:6423:6425	8870063	2	True				
ANR	8870152	Identifier	i		8870063	0					
ANR	8870153	IncDec	++		8870063	1					
ANR	8870154	IfStatement	if ( ( mem = dmem -> spaces_indexed [ i ] ) != 0 )		8870063	3					
ANR	8870155	Condition	( mem = dmem -> spaces_indexed [ i ] ) != 0	212:12:6440:6475	8870063	0	True				
ANR	8870156	EqualityExpression	( mem = dmem -> spaces_indexed [ i ] ) != 0		8870063	0		!=			
ANR	8870157	AssignmentExpression	mem = dmem -> spaces_indexed [ i ]		8870063	0		=			
ANR	8870158	Identifier	mem		8870063	0					
ANR	8870159	ArrayIndexing	dmem -> spaces_indexed [ i ]		8870063	1					
ANR	8870160	PtrMemberAccess	dmem -> spaces_indexed		8870063	0					
ANR	8870161	Identifier	dmem		8870063	0					
ANR	8870162	Identifier	spaces_indexed		8870063	1					
ANR	8870163	Identifier	i		8870063	1					
ANR	8870164	PrimaryExpression	0		8870063	1					
ANR	8870165	CompoundStatement		17:50:512:512	8870063	1					
ANR	8870166	ExpressionStatement	"alloc_temp_save ( & save [ i ] , mem )"	213:12:6492:6522	8870063	0	True				
ANR	8870167	CallExpression	"alloc_temp_save ( & save [ i ] , mem )"		8870063	0					
ANR	8870168	Callee	alloc_temp_save		8870063	0					
ANR	8870169	Identifier	alloc_temp_save		8870063	0					
ANR	8870170	ArgumentList	& save [ i ]		8870063	1					
ANR	8870171	Argument	& save [ i ]		8870063	0					
ANR	8870172	UnaryOperationExpression	& save [ i ]		8870063	0					
ANR	8870173	UnaryOperator	&		8870063	0					
ANR	8870174	ArrayIndexing	save [ i ]		8870063	1					
ANR	8870175	Identifier	save		8870063	0					
ANR	8870176	Identifier	i		8870063	1					
ANR	8870177	Argument	mem		8870063	1					
ANR	8870178	Identifier	mem		8870063	0					
ANR	8870179	IfStatement	if ( mem -> stable_memory != ( gs_memory_t * ) mem )		8870063	1					
ANR	8870180	Condition	mem -> stable_memory != ( gs_memory_t * ) mem	214:16:6540:6579	8870063	0	True				
ANR	8870181	EqualityExpression	mem -> stable_memory != ( gs_memory_t * ) mem		8870063	0		!=			
ANR	8870182	PtrMemberAccess	mem -> stable_memory		8870063	0					
ANR	8870183	Identifier	mem		8870063	0					
ANR	8870184	Identifier	stable_memory		8870063	1					
ANR	8870185	CastExpression	( gs_memory_t * ) mem		8870063	1					
ANR	8870186	CastTarget	gs_memory_t *		8870063	0					
ANR	8870187	Identifier	mem		8870063	1					
ANR	8870188	ExpressionStatement	"alloc_temp_save ( & save_stable [ i ] , ( gs_ref_memory_t * ) mem -> stable_memory )"	215:16:6598:6701	8870063	1	True				
ANR	8870189	CallExpression	"alloc_temp_save ( & save_stable [ i ] , ( gs_ref_memory_t * ) mem -> stable_memory )"		8870063	0					
ANR	8870190	Callee	alloc_temp_save		8870063	0					
ANR	8870191	Identifier	alloc_temp_save		8870063	0					
ANR	8870192	ArgumentList	& save_stable [ i ]		8870063	1					
ANR	8870193	Argument	& save_stable [ i ]		8870063	0					
ANR	8870194	UnaryOperationExpression	& save_stable [ i ]		8870063	0					
ANR	8870195	UnaryOperator	&		8870063	0					
ANR	8870196	ArrayIndexing	save_stable [ i ]		8870063	1					
ANR	8870197	Identifier	save_stable		8870063	0					
ANR	8870198	Identifier	i		8870063	1					
ANR	8870199	Argument	( gs_ref_memory_t * ) mem -> stable_memory		8870063	1					
ANR	8870200	CastExpression	( gs_ref_memory_t * ) mem -> stable_memory		8870063	0					
ANR	8870201	CastTarget	gs_ref_memory_t *		8870063	0					
ANR	8870202	PtrMemberAccess	mem -> stable_memory		8870063	1					
ANR	8870203	Identifier	mem		8870063	0					
ANR	8870204	Identifier	stable_memory		8870063	1					
ANR	8870205	ForStatement	for ( i = 0 ; i < countof ( save ) ; i ++ )		8870063	9					
ANR	8870206	ForInit	i = 0 ;	221:9:6751:6756	8870063	0	True				
ANR	8870207	AssignmentExpression	i = 0		8870063	0		=			
ANR	8870208	Identifier	i		8870063	0					
ANR	8870209	PrimaryExpression	0		8870063	1					
ANR	8870210	Condition	i < countof ( save )	221:16:6758:6774	8870063	1	True				
ANR	8870211	RelationalExpression	i < countof ( save )		8870063	0		<			
ANR	8870212	Identifier	i		8870063	0					
ANR	8870213	CallExpression	countof ( save )		8870063	1					
ANR	8870214	Callee	countof		8870063	0					
ANR	8870215	Identifier	countof		8870063	0					
ANR	8870216	ArgumentList	save		8870063	1					
ANR	8870217	Argument	save		8870063	0					
ANR	8870218	Identifier	save		8870063	0					
ANR	8870219	PostIncDecOperationExpression	i ++	221:35:6777:6779	8870063	2	True				
ANR	8870220	Identifier	i		8870063	0					
ANR	8870221	IncDec	++		8870063	1					
ANR	8870222	IfStatement	if ( ( mem = dmem -> spaces_indexed [ i ] ) != 0 )		8870063	3					
ANR	8870223	Condition	( mem = dmem -> spaces_indexed [ i ] ) != 0	222:12:6794:6829	8870063	0	True				
ANR	8870224	EqualityExpression	( mem = dmem -> spaces_indexed [ i ] ) != 0		8870063	0		!=			
ANR	8870225	AssignmentExpression	mem = dmem -> spaces_indexed [ i ]		8870063	0		=			
ANR	8870226	Identifier	mem		8870063	0					
ANR	8870227	ArrayIndexing	dmem -> spaces_indexed [ i ]		8870063	1					
ANR	8870228	PtrMemberAccess	dmem -> spaces_indexed		8870063	0					
ANR	8870229	Identifier	dmem		8870063	0					
ANR	8870230	Identifier	spaces_indexed		8870063	1					
ANR	8870231	Identifier	i		8870063	1					
ANR	8870232	PrimaryExpression	0		8870063	1					
ANR	8870233	CompoundStatement		27:50:866:866	8870063	1					
ANR	8870234	ExpressionStatement	"ialloc_validate_memory ( mem , & state )"	223:12:6846:6881	8870063	0	True				
ANR	8870235	CallExpression	"ialloc_validate_memory ( mem , & state )"		8870063	0					
ANR	8870236	Callee	ialloc_validate_memory		8870063	0					
ANR	8870237	Identifier	ialloc_validate_memory		8870063	0					
ANR	8870238	ArgumentList	mem		8870063	1					
ANR	8870239	Argument	mem		8870063	0					
ANR	8870240	Identifier	mem		8870063	0					
ANR	8870241	Argument	& state		8870063	1					
ANR	8870242	UnaryOperationExpression	& state		8870063	0					
ANR	8870243	UnaryOperator	&		8870063	0					
ANR	8870244	Identifier	state		8870063	1					
ANR	8870245	IfStatement	if ( mem -> stable_memory != ( gs_memory_t * ) mem )		8870063	1					
ANR	8870246	Condition	mem -> stable_memory != ( gs_memory_t * ) mem	224:16:6899:6938	8870063	0	True				
ANR	8870247	EqualityExpression	mem -> stable_memory != ( gs_memory_t * ) mem		8870063	0		!=			
ANR	8870248	PtrMemberAccess	mem -> stable_memory		8870063	0					
ANR	8870249	Identifier	mem		8870063	0					
ANR	8870250	Identifier	stable_memory		8870063	1					
ANR	8870251	CastExpression	( gs_memory_t * ) mem		8870063	1					
ANR	8870252	CastTarget	gs_memory_t *		8870063	0					
ANR	8870253	Identifier	mem		8870063	1					
ANR	8870254	ExpressionStatement	"ialloc_validate_memory ( ( gs_ref_memory_t * ) mem -> stable_memory , & state )"	225:16:6957:7065	8870063	1	True				
ANR	8870255	CallExpression	"ialloc_validate_memory ( ( gs_ref_memory_t * ) mem -> stable_memory , & state )"		8870063	0					
ANR	8870256	Callee	ialloc_validate_memory		8870063	0					
ANR	8870257	Identifier	ialloc_validate_memory		8870063	0					
ANR	8870258	ArgumentList	( gs_ref_memory_t * ) mem -> stable_memory		8870063	1					
ANR	8870259	Argument	( gs_ref_memory_t * ) mem -> stable_memory		8870063	0					
ANR	8870260	CastExpression	( gs_ref_memory_t * ) mem -> stable_memory		8870063	0					
ANR	8870261	CastTarget	gs_ref_memory_t *		8870063	0					
ANR	8870262	PtrMemberAccess	mem -> stable_memory		8870063	1					
ANR	8870263	Identifier	mem		8870063	0					
ANR	8870264	Identifier	stable_memory		8870063	1					
ANR	8870265	Argument	& state		8870063	1					
ANR	8870266	UnaryOperationExpression	& state		8870063	0					
ANR	8870267	UnaryOperator	&		8870063	0					
ANR	8870268	Identifier	state		8870063	1					
ANR	8870269	ForStatement	for ( i = 0 ; i < countof ( save ) ; i ++ )		8870063	10					
ANR	8870270	ForInit	i = 0 ;	231:9:7122:7127	8870063	0	True				
ANR	8870271	AssignmentExpression	i = 0		8870063	0		=			
ANR	8870272	Identifier	i		8870063	0					
ANR	8870273	PrimaryExpression	0		8870063	1					
ANR	8870274	Condition	i < countof ( save )	231:16:7129:7145	8870063	1	True				
ANR	8870275	RelationalExpression	i < countof ( save )		8870063	0		<			
ANR	8870276	Identifier	i		8870063	0					
ANR	8870277	CallExpression	countof ( save )		8870063	1					
ANR	8870278	Callee	countof		8870063	0					
ANR	8870279	Identifier	countof		8870063	0					
ANR	8870280	ArgumentList	save		8870063	1					
ANR	8870281	Argument	save		8870063	0					
ANR	8870282	Identifier	save		8870063	0					
ANR	8870283	PostIncDecOperationExpression	i ++	231:35:7148:7150	8870063	2	True				
ANR	8870284	Identifier	i		8870063	0					
ANR	8870285	IncDec	++		8870063	1					
ANR	8870286	IfStatement	if ( ( mem = dmem -> spaces_indexed [ i ] ) != 0 )		8870063	3					
ANR	8870287	Condition	( mem = dmem -> spaces_indexed [ i ] ) != 0	232:12:7165:7200	8870063	0	True				
ANR	8870288	EqualityExpression	( mem = dmem -> spaces_indexed [ i ] ) != 0		8870063	0		!=			
ANR	8870289	AssignmentExpression	mem = dmem -> spaces_indexed [ i ]		8870063	0		=			
ANR	8870290	Identifier	mem		8870063	0					
ANR	8870291	ArrayIndexing	dmem -> spaces_indexed [ i ]		8870063	1					
ANR	8870292	PtrMemberAccess	dmem -> spaces_indexed		8870063	0					
ANR	8870293	Identifier	dmem		8870063	0					
ANR	8870294	Identifier	spaces_indexed		8870063	1					
ANR	8870295	Identifier	i		8870063	1					
ANR	8870296	PrimaryExpression	0		8870063	1					
ANR	8870297	CompoundStatement		37:50:1237:1237	8870063	1					
ANR	8870298	IfStatement	if ( mem -> stable_memory != ( gs_memory_t * ) mem )		8870063	0					
ANR	8870299	Condition	mem -> stable_memory != ( gs_memory_t * ) mem	233:16:7221:7260	8870063	0	True				
ANR	8870300	EqualityExpression	mem -> stable_memory != ( gs_memory_t * ) mem		8870063	0		!=			
ANR	8870301	PtrMemberAccess	mem -> stable_memory		8870063	0					
ANR	8870302	Identifier	mem		8870063	0					
ANR	8870303	Identifier	stable_memory		8870063	1					
ANR	8870304	CastExpression	( gs_memory_t * ) mem		8870063	1					
ANR	8870305	CastTarget	gs_memory_t *		8870063	0					
ANR	8870306	Identifier	mem		8870063	1					
ANR	8870307	ExpressionStatement	"alloc_temp_restore ( & save_stable [ i ] , ( gs_ref_memory_t * ) mem -> stable_memory )"	234:16:7279:7388	8870063	1	True				
ANR	8870308	CallExpression	"alloc_temp_restore ( & save_stable [ i ] , ( gs_ref_memory_t * ) mem -> stable_memory )"		8870063	0					
ANR	8870309	Callee	alloc_temp_restore		8870063	0					
ANR	8870310	Identifier	alloc_temp_restore		8870063	0					
ANR	8870311	ArgumentList	& save_stable [ i ]		8870063	1					
ANR	8870312	Argument	& save_stable [ i ]		8870063	0					
ANR	8870313	UnaryOperationExpression	& save_stable [ i ]		8870063	0					
ANR	8870314	UnaryOperator	&		8870063	0					
ANR	8870315	ArrayIndexing	save_stable [ i ]		8870063	1					
ANR	8870316	Identifier	save_stable		8870063	0					
ANR	8870317	Identifier	i		8870063	1					
ANR	8870318	Argument	( gs_ref_memory_t * ) mem -> stable_memory		8870063	1					
ANR	8870319	CastExpression	( gs_ref_memory_t * ) mem -> stable_memory		8870063	0					
ANR	8870320	CastTarget	gs_ref_memory_t *		8870063	0					
ANR	8870321	PtrMemberAccess	mem -> stable_memory		8870063	1					
ANR	8870322	Identifier	mem		8870063	0					
ANR	8870323	Identifier	stable_memory		8870063	1					
ANR	8870324	ExpressionStatement	"alloc_temp_restore ( & save [ i ] , mem )"	236:12:7402:7435	8870063	1	True				
ANR	8870325	CallExpression	"alloc_temp_restore ( & save [ i ] , mem )"		8870063	0					
ANR	8870326	Callee	alloc_temp_restore		8870063	0					
ANR	8870327	Identifier	alloc_temp_restore		8870063	0					
ANR	8870328	ArgumentList	& save [ i ]		8870063	1					
ANR	8870329	Argument	& save [ i ]		8870063	0					
ANR	8870330	UnaryOperationExpression	& save [ i ]		8870063	0					
ANR	8870331	UnaryOperator	&		8870063	0					
ANR	8870332	ArrayIndexing	save [ i ]		8870063	1					
ANR	8870333	Identifier	save		8870063	0					
ANR	8870334	Identifier	i		8870063	1					
ANR	8870335	Argument	mem		8870063	1					
ANR	8870336	Identifier	mem		8870063	0					
ANR	8870337	ReturnType	void		8870063	1					
ANR	8870338	Identifier	ialloc_validate_spaces		8870063	2					
ANR	8870339	ParameterList	const gs_dual_memory_t * dmem		8870063	3					
ANR	8870340	Parameter	const gs_dual_memory_t * dmem	195:23:5934:5962	8870063	0	True				
ANR	8870341	ParameterType	const gs_dual_memory_t *		8870063	0					
ANR	8870342	Identifier	dmem		8870063	1					
ANR	8870343	CFGEntryNode	ENTRY		8870063		True				
ANR	8870344	CFGExitNode	EXIT		8870063		True				
ANR	8870345	Symbol	state . loc . cp		8870063						
ANR	8870346	Symbol	mem -> stable_memory		8870063						
ANR	8870347	Symbol	state . spaces		8870063						
ANR	8870348	Symbol	dmem -> current		8870063						
ANR	8870349	Symbol	& state		8870063						
ANR	8870350	Symbol	save		8870063						
ANR	8870351	Symbol	* * dmem		8870063						
ANR	8870352	Symbol	save_stable		8870063						
ANR	8870353	Symbol	dmem -> spaces_indexed		8870063						
ANR	8870354	Symbol	mem		8870063						
ANR	8870355	Symbol	* dmem -> spaces_indexed		8870063						
ANR	8870356	Symbol	* dmem -> current		8870063						
ANR	8870357	Symbol	state . heap		8870063						
ANR	8870358	Symbol	state		8870063						
ANR	8870359	Symbol	dmem		8870063						
ANR	8870360	Symbol	state . loc . memory		8870063						
ANR	8870361	Symbol	i		8870063						
ANR	8870362	Symbol	state . space_local		8870063						
ANR	8870363	Symbol	dmem -> current -> non_gc_memory		8870063						
ANR	8870364	Symbol	dmem -> spaces		8870063						
ANR	8870365	Symbol	countof		8870063						
ANR	8870366	Symbol	* i		8870063						
ANR	8870367	Symbol	* dmem		8870063						
ANR	8870368	Symbol	state . loc		8870063						
ANR	8870369	Symbol	* mem		8870063						
ANR	8870370	Function	ialloc_validate_memory	239:0:7449:9322							
ANR	8870371	FunctionDef	"ialloc_validate_memory (const gs_ref_memory_t * mem , gc_state_t * gcst)"		8870370	0					
ANR	8870372	CompoundStatement		241:0:7525:9322	8870370	0					
ANR	8870373	IdentifierDeclStatement	const gs_ref_memory_t * smem ;	242:4:7531:7558	8870370	0	True				
ANR	8870374	IdentifierDecl	* smem		8870370	0					
ANR	8870375	IdentifierDeclType	const gs_ref_memory_t *		8870370	0					
ANR	8870376	Identifier	smem		8870370	1					
ANR	8870377	IdentifierDeclStatement	int level ;	243:4:7564:7573	8870370	1	True				
ANR	8870378	IdentifierDecl	level		8870370	0					
ANR	8870379	IdentifierDeclType	int		8870370	0					
ANR	8870380	Identifier	level		8870370	1					
ANR	8870381	ForStatement	"for ( smem = mem , level = 0 ; smem != 0 ; smem = & smem -> saved -> state , -- level )"		8870370	2					
ANR	8870382	ForInit	"smem = mem , level = 0 ;"	245:9:7585:7606	8870370	0	True				
ANR	8870383	Expression	"smem = mem , level = 0"		8870370	0					
ANR	8870384	AssignmentExpression	smem = mem		8870370	0		=			
ANR	8870385	Identifier	smem		8870370	0					
ANR	8870386	Identifier	mem		8870370	1					
ANR	8870387	AssignmentExpression	level = 0		8870370	1		=			
ANR	8870388	Identifier	level		8870370	0					
ANR	8870389	PrimaryExpression	0		8870370	1					
ANR	8870390	Condition	smem != 0	245:32:7608:7616	8870370	1	True				
ANR	8870391	EqualityExpression	smem != 0		8870370	0		!=			
ANR	8870392	Identifier	smem		8870370	0					
ANR	8870393	PrimaryExpression	0		8870370	1					
ANR	8870394	Expression	"smem = & smem -> saved -> state , -- level"	246:9:7628:7662	8870370	2	True				
ANR	8870395	AssignmentExpression	smem = & smem -> saved -> state		8870370	0		=			
ANR	8870396	Identifier	smem		8870370	0					
ANR	8870397	UnaryOperationExpression	& smem -> saved -> state		8870370	1					
ANR	8870398	UnaryOperator	&		8870370	0					
ANR	8870399	PtrMemberAccess	smem -> saved -> state		8870370	1					
ANR	8870400	PtrMemberAccess	smem -> saved		8870370	0					
ANR	8870401	Identifier	smem		8870370	0					
ANR	8870402	Identifier	saved		8870370	1					
ANR	8870403	Identifier	state		8870370	1					
ANR	8870404	UnaryExpression	-- level		8870370	1					
ANR	8870405	IncDec	--		8870370	0					
ANR	8870406	Identifier	level		8870370	1					
ANR	8870407	CompoundStatement		10:8:216:221	8870370	3					
ANR	8870408	IdentifierDeclStatement	clump_splay_walker sw ;	248:8:7684:7705	8870370	0	True				
ANR	8870409	IdentifierDecl	sw		8870370	0					
ANR	8870410	IdentifierDeclType	clump_splay_walker		8870370	0					
ANR	8870411	Identifier	sw		8870370	1					
ANR	8870412	IdentifierDeclStatement	const clump_t * cp ;	249:8:7715:7732	8870370	1	True				
ANR	8870413	IdentifierDecl	* cp		8870370	0					
ANR	8870414	IdentifierDeclType	const clump_t *		8870370	0					
ANR	8870415	Identifier	cp		8870370	1					
ANR	8870416	IdentifierDeclStatement	int i ;	250:8:7742:7747	8870370	2	True				
ANR	8870417	IdentifierDecl	i		8870370	0					
ANR	8870418	IdentifierDeclType	int		8870370	0					
ANR	8870419	Identifier	i		8870370	1					
ANR	8870420	ExpressionStatement	"if_debug3m ( '6' , ( gs_memory_t * ) mem , ""[6]validating memory 0x%lx, space %d, level %d\\n"" , ( ulong ) mem , mem -> space , level )"	252:8:7758:7896	8870370	3	True				
ANR	8870421	CallExpression	"if_debug3m ( '6' , ( gs_memory_t * ) mem , ""[6]validating memory 0x%lx, space %d, level %d\\n"" , ( ulong ) mem , mem -> space , level )"		8870370	0					
ANR	8870422	Callee	if_debug3m		8870370	0					
ANR	8870423	Identifier	if_debug3m		8870370	0					
ANR	8870424	ArgumentList	'6'		8870370	1					
ANR	8870425	Argument	'6'		8870370	0					
ANR	8870426	PrimaryExpression	'6'		8870370	0					
ANR	8870427	Argument	( gs_memory_t * ) mem		8870370	1					
ANR	8870428	CastExpression	( gs_memory_t * ) mem		8870370	0					
ANR	8870429	CastTarget	gs_memory_t *		8870370	0					
ANR	8870430	Identifier	mem		8870370	1					
ANR	8870431	Argument	"""[6]validating memory 0x%lx, space %d, level %d\\n"""		8870370	2					
ANR	8870432	PrimaryExpression	"""[6]validating memory 0x%lx, space %d, level %d\\n"""		8870370	0					
ANR	8870433	Argument	( ulong ) mem		8870370	3					
ANR	8870434	CastExpression	( ulong ) mem		8870370	0					
ANR	8870435	CastTarget	ulong		8870370	0					
ANR	8870436	Identifier	mem		8870370	1					
ANR	8870437	Argument	mem -> space		8870370	4					
ANR	8870438	PtrMemberAccess	mem -> space		8870370	0					
ANR	8870439	Identifier	mem		8870370	0					
ANR	8870440	Identifier	space		8870370	1					
ANR	8870441	Argument	level		8870370	5					
ANR	8870442	Identifier	level		8870370	0					
ANR	8870443	ForStatement	"for ( cp = clump_splay_walk_init ( & sw , smem ) ; cp != 0 ; cp = clump_splay_walk_fwd ( & sw ) )"		8870370	4					
ANR	8870444	ForInit	"cp = clump_splay_walk_init ( & sw , smem ) ;"	255:13:7942:7979	8870370	0	True				
ANR	8870445	AssignmentExpression	"cp = clump_splay_walk_init ( & sw , smem )"		8870370	0		=			
ANR	8870446	Identifier	cp		8870370	0					
ANR	8870447	CallExpression	"clump_splay_walk_init ( & sw , smem )"		8870370	1					
ANR	8870448	Callee	clump_splay_walk_init		8870370	0					
ANR	8870449	Identifier	clump_splay_walk_init		8870370	0					
ANR	8870450	ArgumentList	& sw		8870370	1					
ANR	8870451	Argument	& sw		8870370	0					
ANR	8870452	UnaryOperationExpression	& sw		8870370	0					
ANR	8870453	UnaryOperator	&		8870370	0					
ANR	8870454	Identifier	sw		8870370	1					
ANR	8870455	Argument	smem		8870370	1					
ANR	8870456	Identifier	smem		8870370	0					
ANR	8870457	Condition	cp != 0	255:52:7981:7987	8870370	1	True				
ANR	8870458	EqualityExpression	cp != 0		8870370	0		!=			
ANR	8870459	Identifier	cp		8870370	0					
ANR	8870460	PrimaryExpression	0		8870370	1					
ANR	8870461	AssignmentExpression	cp = clump_splay_walk_fwd ( & sw )	255:61:7990:8019	8870370	2	True	=			
ANR	8870462	Identifier	cp		8870370	0					
ANR	8870463	CallExpression	clump_splay_walk_fwd ( & sw )		8870370	1					
ANR	8870464	Callee	clump_splay_walk_fwd		8870370	0					
ANR	8870465	Identifier	clump_splay_walk_fwd		8870370	0					
ANR	8870466	ArgumentList	& sw		8870370	1					
ANR	8870467	Argument	& sw		8870370	0					
ANR	8870468	UnaryOperationExpression	& sw		8870370	0					
ANR	8870469	UnaryOperator	&		8870370	0					
ANR	8870470	Identifier	sw		8870370	1					
ANR	8870471	IfStatement	"if ( do_validate_clump ( cp , gcst ) )"		8870370	3					
ANR	8870472	Condition	"do_validate_clump ( cp , gcst )"	256:16:8038:8064	8870370	0	True				
ANR	8870473	CallExpression	"do_validate_clump ( cp , gcst )"		8870370	0					
ANR	8870474	Callee	do_validate_clump		8870370	0					
ANR	8870475	Identifier	do_validate_clump		8870370	0					
ANR	8870476	ArgumentList	cp		8870370	1					
ANR	8870477	Argument	cp		8870370	0					
ANR	8870478	Identifier	cp		8870370	0					
ANR	8870479	Argument	gcst		8870370	1					
ANR	8870480	Identifier	gcst		8870370	0					
ANR	8870481	CompoundStatement		16:45:541:541	8870370	1					
ANR	8870482	ExpressionStatement	"mlprintf3 ( ( gs_memory_t * ) mem , ""while validating memory 0x%lx, space %d, level %d\\n"" , ( ulong ) mem , mem -> space , level )"	257:16:8085:8227	8870370	0	True				
ANR	8870483	CallExpression	"mlprintf3 ( ( gs_memory_t * ) mem , ""while validating memory 0x%lx, space %d, level %d\\n"" , ( ulong ) mem , mem -> space , level )"		8870370	0					
ANR	8870484	Callee	mlprintf3		8870370	0					
ANR	8870485	Identifier	mlprintf3		8870370	0					
ANR	8870486	ArgumentList	( gs_memory_t * ) mem		8870370	1					
ANR	8870487	Argument	( gs_memory_t * ) mem		8870370	0					
ANR	8870488	CastExpression	( gs_memory_t * ) mem		8870370	0					
ANR	8870489	CastTarget	gs_memory_t *		8870370	0					
ANR	8870490	Identifier	mem		8870370	1					
ANR	8870491	Argument	"""while validating memory 0x%lx, space %d, level %d\\n"""		8870370	1					
ANR	8870492	PrimaryExpression	"""while validating memory 0x%lx, space %d, level %d\\n"""		8870370	0					
ANR	8870493	Argument	( ulong ) mem		8870370	2					
ANR	8870494	CastExpression	( ulong ) mem		8870370	0					
ANR	8870495	CastTarget	ulong		8870370	0					
ANR	8870496	Identifier	mem		8870370	1					
ANR	8870497	Argument	mem -> space		8870370	3					
ANR	8870498	PtrMemberAccess	mem -> space		8870370	0					
ANR	8870499	Identifier	mem		8870370	0					
ANR	8870500	Identifier	space		8870370	1					
ANR	8870501	Argument	level		8870370	4					
ANR	8870502	Identifier	level		8870370	0					
ANR	8870503	ExpressionStatement	gs_abort ( gcst -> heap )	259:16:8245:8265	8870370	1	True				
ANR	8870504	CallExpression	gs_abort ( gcst -> heap )		8870370	0					
ANR	8870505	Callee	gs_abort		8870370	0					
ANR	8870506	Identifier	gs_abort		8870370	0					
ANR	8870507	ArgumentList	gcst -> heap		8870370	1					
ANR	8870508	Argument	gcst -> heap		8870370	0					
ANR	8870509	PtrMemberAccess	gcst -> heap		8870370	0					
ANR	8870510	Identifier	gcst		8870370	0					
ANR	8870511	Identifier	heap		8870370	1					
ANR	8870512	ForStatement	for ( i = 0 ; i < num_freelists ; ++ i )		8870370	5					
ANR	8870513	ForInit	i = 0 ;	262:13:8328:8333	8870370	0	True				
ANR	8870514	AssignmentExpression	i = 0		8870370	0		=			
ANR	8870515	Identifier	i		8870370	0					
ANR	8870516	PrimaryExpression	0		8870370	1					
ANR	8870517	Condition	i < num_freelists	262:20:8335:8351	8870370	1	True				
ANR	8870518	RelationalExpression	i < num_freelists		8870370	0		<			
ANR	8870519	Identifier	i		8870370	0					
ANR	8870520	Identifier	num_freelists		8870370	1					
ANR	8870521	UnaryExpression	++ i	262:39:8354:8356	8870370	2	True				
ANR	8870522	IncDec	++		8870370	0					
ANR	8870523	Identifier	i		8870370	1					
ANR	8870524	CompoundStatement		24:12:901:926	8870370	3					
ANR	8870525	IdentifierDeclStatement	uint free_size = i << log2_obj_align_mod ;	263:12:8373:8413	8870370	0	True				
ANR	8870526	IdentifierDecl	free_size = i << log2_obj_align_mod		8870370	0					
ANR	8870527	IdentifierDeclType	uint		8870370	0					
ANR	8870528	Identifier	free_size		8870370	1					
ANR	8870529	AssignmentExpression	free_size = i << log2_obj_align_mod		8870370	2		=			
ANR	8870530	Identifier	free_size		8870370	0					
ANR	8870531	ShiftExpression	i << log2_obj_align_mod		8870370	1		<<			
ANR	8870532	Identifier	i		8870370	0					
ANR	8870533	Identifier	log2_obj_align_mod		8870370	1					
ANR	8870534	IdentifierDeclStatement	const obj_header_t * pfree ;	264:12:8427:8452	8870370	1	True				
ANR	8870535	IdentifierDecl	* pfree		8870370	0					
ANR	8870536	IdentifierDeclType	const obj_header_t *		8870370	0					
ANR	8870537	Identifier	pfree		8870370	1					
ANR	8870538	Statement	for	266:12:8467:8469	8870370	2	True				
ANR	8870539	Statement	(	266:16:8471:8471	8870370	3	True				
ANR	8870540	ExpressionStatement	pfree = mem -> freelists [ i ]	266:17:8472:8497	8870370	4	True				
ANR	8870541	AssignmentExpression	pfree = mem -> freelists [ i ]		8870370	0		=			
ANR	8870542	Identifier	pfree		8870370	0					
ANR	8870543	ArrayIndexing	mem -> freelists [ i ]		8870370	1					
ANR	8870544	PtrMemberAccess	mem -> freelists		8870370	0					
ANR	8870545	Identifier	mem		8870370	0					
ANR	8870546	Identifier	freelists		8870370	1					
ANR	8870547	Identifier	i		8870370	1					
ANR	8870548	ExpressionStatement	pfree != 0	266:44:8499:8509	8870370	5	True				
ANR	8870549	EqualityExpression	pfree != 0		8870370	0		!=			
ANR	8870550	Identifier	pfree		8870370	0					
ANR	8870551	PrimaryExpression	0		8870370	1					
ANR	8870552	Statement	pfree	267:17:8528:8532	8870370	6	True				
ANR	8870553	Statement	=	267:23:8534:8534	8870370	7	True				
ANR	8870554	Statement	*	267:25:8536:8536	8870370	8	True				
ANR	8870555	Statement	(	267:26:8537:8537	8870370	9	True				
ANR	8870556	Statement	const	267:27:8538:8542	8870370	10	True				
ANR	8870557	Statement	obj_header_t	267:33:8544:8555	8870370	11	True				
ANR	8870558	Statement	*	267:46:8557:8557	8870370	12	True				
ANR	8870559	Statement	const	267:48:8559:8563	8870370	13	True				
ANR	8870560	Statement	*	267:54:8565:8565	8870370	14	True				
ANR	8870561	Statement	)	267:55:8566:8566	8870370	15	True				
ANR	8870562	Statement	pfree	267:56:8567:8571	8870370	16	True				
ANR	8870563	Statement	)	268:16:8589:8589	8870370	17	True				
ANR	8870564	CompoundStatement		29:16:1083:1111	8870370	18					
ANR	8870565	IdentifierDeclStatement	uint size = pfree [ - 1 ] . o_size ;	269:16:8609:8637	8870370	0	True				
ANR	8870566	IdentifierDecl	size = pfree [ - 1 ] . o_size		8870370	0					
ANR	8870567	IdentifierDeclType	uint		8870370	0					
ANR	8870568	Identifier	size		8870370	1					
ANR	8870569	AssignmentExpression	size = pfree [ - 1 ] . o_size		8870370	2		=			
ANR	8870570	Identifier	size		8870370	0					
ANR	8870571	MemberAccess	pfree [ - 1 ] . o_size		8870370	1					
ANR	8870572	ArrayIndexing	pfree [ - 1 ]		8870370	0					
ANR	8870573	Identifier	pfree		8870370	0					
ANR	8870574	UnaryOperationExpression	- 1		8870370	1					
ANR	8870575	UnaryOperator	-		8870370	0					
ANR	8870576	PrimaryExpression	1		8870370	1					
ANR	8870577	Identifier	o_size		8870370	1					
ANR	8870578	IfStatement	if ( pfree [ - 1 ] . o_type != & st_free )		8870370	1					
ANR	8870579	Condition	pfree [ - 1 ] . o_type != & st_free	271:20:8660:8687	8870370	0	True				
ANR	8870580	EqualityExpression	pfree [ - 1 ] . o_type != & st_free		8870370	0		!=			
ANR	8870581	MemberAccess	pfree [ - 1 ] . o_type		8870370	0					
ANR	8870582	ArrayIndexing	pfree [ - 1 ]		8870370	0					
ANR	8870583	Identifier	pfree		8870370	0					
ANR	8870584	UnaryOperationExpression	- 1		8870370	1					
ANR	8870585	UnaryOperator	-		8870370	0					
ANR	8870586	PrimaryExpression	1		8870370	1					
ANR	8870587	Identifier	o_type		8870370	1					
ANR	8870588	UnaryOperationExpression	& st_free		8870370	1					
ANR	8870589	UnaryOperator	&		8870370	0					
ANR	8870590	Identifier	st_free		8870370	1					
ANR	8870591	CompoundStatement		31:50:1164:1164	8870370	1					
ANR	8870592	ExpressionStatement	"mlprintf3 ( ( gs_memory_t * ) mem , ""Non-free object 0x%lx(%u) on freelist %i!\\n"" , ( ulong ) pfree , size , i )"	272:20:8712:8842	8870370	0	True				
ANR	8870593	CallExpression	"mlprintf3 ( ( gs_memory_t * ) mem , ""Non-free object 0x%lx(%u) on freelist %i!\\n"" , ( ulong ) pfree , size , i )"		8870370	0					
ANR	8870594	Callee	mlprintf3		8870370	0					
ANR	8870595	Identifier	mlprintf3		8870370	0					
ANR	8870596	ArgumentList	( gs_memory_t * ) mem		8870370	1					
ANR	8870597	Argument	( gs_memory_t * ) mem		8870370	0					
ANR	8870598	CastExpression	( gs_memory_t * ) mem		8870370	0					
ANR	8870599	CastTarget	gs_memory_t *		8870370	0					
ANR	8870600	Identifier	mem		8870370	1					
ANR	8870601	Argument	"""Non-free object 0x%lx(%u) on freelist %i!\\n"""		8870370	1					
ANR	8870602	PrimaryExpression	"""Non-free object 0x%lx(%u) on freelist %i!\\n"""		8870370	0					
ANR	8870603	Argument	( ulong ) pfree		8870370	2					
ANR	8870604	CastExpression	( ulong ) pfree		8870370	0					
ANR	8870605	CastTarget	ulong		8870370	0					
ANR	8870606	Identifier	pfree		8870370	1					
ANR	8870607	Argument	size		8870370	3					
ANR	8870608	Identifier	size		8870370	0					
ANR	8870609	Argument	i		8870370	4					
ANR	8870610	Identifier	i		8870370	0					
ANR	8870611	BreakStatement	break ;	274:20:8864:8869	8870370	1	True				
ANR	8870612	IfStatement	if ( ( i == LARGE_FREELIST_INDEX && size < max_freelist_size ) || ( i != LARGE_FREELIST_INDEX && ( size < free_size - obj_align_mask || size > free_size ) ) )		8870370	2					
ANR	8870613	Condition	( i == LARGE_FREELIST_INDEX && size < max_freelist_size ) || ( i != LARGE_FREELIST_INDEX && ( size < free_size - obj_align_mask || size > free_size ) )	276:20:8909:9087	8870370	0	True				
ANR	8870614	OrExpression	( i == LARGE_FREELIST_INDEX && size < max_freelist_size ) || ( i != LARGE_FREELIST_INDEX && ( size < free_size - obj_align_mask || size > free_size ) )		8870370	0		||			
ANR	8870615	AndExpression	i == LARGE_FREELIST_INDEX && size < max_freelist_size		8870370	0		&&			
ANR	8870616	EqualityExpression	i == LARGE_FREELIST_INDEX		8870370	0		==			
ANR	8870617	Identifier	i		8870370	0					
ANR	8870618	Identifier	LARGE_FREELIST_INDEX		8870370	1					
ANR	8870619	RelationalExpression	size < max_freelist_size		8870370	1		<			
ANR	8870620	Identifier	size		8870370	0					
ANR	8870621	Identifier	max_freelist_size		8870370	1					
ANR	8870622	AndExpression	i != LARGE_FREELIST_INDEX && ( size < free_size - obj_align_mask || size > free_size )		8870370	1		&&			
ANR	8870623	EqualityExpression	i != LARGE_FREELIST_INDEX		8870370	0		!=			
ANR	8870624	Identifier	i		8870370	0					
ANR	8870625	Identifier	LARGE_FREELIST_INDEX		8870370	1					
ANR	8870626	OrExpression	size < free_size - obj_align_mask || size > free_size		8870370	1		||			
ANR	8870627	RelationalExpression	size < free_size - obj_align_mask		8870370	0		<			
ANR	8870628	Identifier	size		8870370	0					
ANR	8870629	AdditiveExpression	free_size - obj_align_mask		8870370	1		-			
ANR	8870630	Identifier	free_size		8870370	0					
ANR	8870631	Identifier	obj_align_mask		8870370	1					
ANR	8870632	RelationalExpression	size > free_size		8870370	1		>			
ANR	8870633	Identifier	size		8870370	0					
ANR	8870634	Identifier	free_size		8870370	1					
ANR	8870635	CompoundStatement		38:75:1564:1564	8870370	1					
ANR	8870636	ExpressionStatement	"mlprintf3 ( ( gs_memory_t * ) mem , ""Object 0x%lx(%u) size wrong on freelist %i!\\n"" , ( ulong ) pfree , size , i )"	279:20:9112:9244	8870370	0	True				
ANR	8870637	CallExpression	"mlprintf3 ( ( gs_memory_t * ) mem , ""Object 0x%lx(%u) size wrong on freelist %i!\\n"" , ( ulong ) pfree , size , i )"		8870370	0					
ANR	8870638	Callee	mlprintf3		8870370	0					
ANR	8870639	Identifier	mlprintf3		8870370	0					
ANR	8870640	ArgumentList	( gs_memory_t * ) mem		8870370	1					
ANR	8870641	Argument	( gs_memory_t * ) mem		8870370	0					
ANR	8870642	CastExpression	( gs_memory_t * ) mem		8870370	0					
ANR	8870643	CastTarget	gs_memory_t *		8870370	0					
ANR	8870644	Identifier	mem		8870370	1					
ANR	8870645	Argument	"""Object 0x%lx(%u) size wrong on freelist %i!\\n"""		8870370	1					
ANR	8870646	PrimaryExpression	"""Object 0x%lx(%u) size wrong on freelist %i!\\n"""		8870370	0					
ANR	8870647	Argument	( ulong ) pfree		8870370	2					
ANR	8870648	CastExpression	( ulong ) pfree		8870370	0					
ANR	8870649	CastTarget	ulong		8870370	0					
ANR	8870650	Identifier	pfree		8870370	1					
ANR	8870651	Argument	size		8870370	3					
ANR	8870652	Identifier	size		8870370	0					
ANR	8870653	Argument	i		8870370	4					
ANR	8870654	Identifier	i		8870370	0					
ANR	8870655	BreakStatement	break ;	281:20:9266:9271	8870370	1	True				
ANR	8870656	ExpressionStatement		285:5:9320:9320	8870370	3	True				
ANR	8870657	ReturnType	void		8870370	1					
ANR	8870658	Identifier	ialloc_validate_memory		8870370	2					
ANR	8870659	ParameterList	"const gs_ref_memory_t * mem , gc_state_t * gcst"		8870370	3					
ANR	8870660	Parameter	const gs_ref_memory_t * mem	240:23:7477:7503	8870370	0	True				
ANR	8870661	ParameterType	const gs_ref_memory_t *		8870370	0					
ANR	8870662	Identifier	mem		8870370	1					
ANR	8870663	Parameter	gc_state_t * gcst	240:52:7506:7522	8870370	1	True				
ANR	8870664	ParameterType	gc_state_t *		8870370	0					
ANR	8870665	Identifier	gcst		8870370	1					
ANR	8870666	CFGEntryNode	ENTRY		8870370		True				
ANR	8870667	CFGExitNode	EXIT		8870370		True				
ANR	8870668	Symbol	log2_obj_align_mod		8870370						
ANR	8870669	Symbol	pfree		8870370						
ANR	8870670	Symbol	mem -> freelists		8870370						
ANR	8870671	Symbol	& st_free		8870370						
ANR	8870672	Symbol	LARGE_FREELIST_INDEX		8870370						
ANR	8870673	Symbol	num_freelists		8870370						
ANR	8870674	Symbol	gcst		8870370						
ANR	8870675	Symbol	& sw		8870370						
ANR	8870676	Symbol	gcst -> heap		8870370						
ANR	8870677	Symbol	mem		8870370						
ANR	8870678	Symbol	* mem -> freelists		8870370						
ANR	8870679	Symbol	clump_splay_walk_init		8870370						
ANR	8870680	Symbol	* smem		8870370						
ANR	8870681	Symbol	free_size		8870370						
ANR	8870682	Symbol	* pfree		8870370						
ANR	8870683	Symbol	sw		8870370						
ANR	8870684	Symbol	level		8870370						
ANR	8870685	Symbol	clump_splay_walk_fwd		8870370						
ANR	8870686	Symbol	pfree [ - 1 ] . o_size		8870370						
ANR	8870687	Symbol	i		8870370						
ANR	8870688	Symbol	* * mem		8870370						
ANR	8870689	Symbol	cp		8870370						
ANR	8870690	Symbol	* gcst		8870370						
ANR	8870691	Symbol	mem -> space		8870370						
ANR	8870692	Symbol	* i		8870370						
ANR	8870693	Symbol	size		8870370						
ANR	8870694	Symbol	max_freelist_size		8870370						
ANR	8870695	Symbol	smem		8870370						
ANR	8870696	Symbol	smem -> saved		8870370						
ANR	8870697	Symbol	& smem -> saved -> state		8870370						
ANR	8870698	Symbol	obj_align_mask		8870370						
ANR	8870699	Symbol	pfree [ - 1 ] . o_type		8870370						
ANR	8870700	Symbol	do_validate_clump		8870370						
ANR	8870701	Symbol	* mem		8870370						
ANR	8870702	Function	object_size_valid	289:0:9371:9584							
ANR	8870703	FunctionDef	"object_size_valid (const obj_header_t * pre , uint size , const clump_t * cp)"		8870702	0					
ANR	8870704	CompoundStatement		291:0:9465:9584	8870702	0					
ANR	8870705	ReturnStatement	return ( pre -> o_alone ? ( const byte * ) pre == cp -> cbase : size <= cp -> ctop - ( const byte * ) ( pre + 1 ) ) ;	292:4:9471:9582	8870702	0	True				
ANR	8870706	ConditionalExpression	pre -> o_alone ? ( const byte * ) pre == cp -> cbase : size <= cp -> ctop - ( const byte * ) ( pre + 1 )		8870702	0					
ANR	8870707	Condition	pre -> o_alone		8870702	0					
ANR	8870708	PtrMemberAccess	pre -> o_alone		8870702	0					
ANR	8870709	Identifier	pre		8870702	0					
ANR	8870710	Identifier	o_alone		8870702	1					
ANR	8870711	EqualityExpression	( const byte * ) pre == cp -> cbase		8870702	1		==			
ANR	8870712	CastExpression	( const byte * ) pre		8870702	0					
ANR	8870713	CastTarget	const byte *		8870702	0					
ANR	8870714	Identifier	pre		8870702	1					
ANR	8870715	PtrMemberAccess	cp -> cbase		8870702	1					
ANR	8870716	Identifier	cp		8870702	0					
ANR	8870717	Identifier	cbase		8870702	1					
ANR	8870718	RelationalExpression	size <= cp -> ctop - ( const byte * ) ( pre + 1 )		8870702	2		<=			
ANR	8870719	Identifier	size		8870702	0					
ANR	8870720	AdditiveExpression	cp -> ctop - ( const byte * ) ( pre + 1 )		8870702	1		-			
ANR	8870721	PtrMemberAccess	cp -> ctop		8870702	0					
ANR	8870722	Identifier	cp		8870702	0					
ANR	8870723	Identifier	ctop		8870702	1					
ANR	8870724	CastExpression	( const byte * ) ( pre + 1 )		8870702	1					
ANR	8870725	CastTarget	const byte *		8870702	0					
ANR	8870726	AdditiveExpression	pre + 1		8870702	1		+			
ANR	8870727	Identifier	pre		8870702	0					
ANR	8870728	PrimaryExpression	1		8870702	1					
ANR	8870729	ReturnType	static inline bool		8870702	1					
ANR	8870730	Identifier	object_size_valid		8870702	2					
ANR	8870731	ParameterList	"const obj_header_t * pre , uint size , const clump_t * cp"		8870702	3					
ANR	8870732	Parameter	const obj_header_t * pre	290:18:9408:9431	8870702	0	True				
ANR	8870733	ParameterType	const obj_header_t *		8870702	0					
ANR	8870734	Identifier	pre		8870702	1					
ANR	8870735	Parameter	uint size	290:44:9434:9442	8870702	1	True				
ANR	8870736	ParameterType	uint		8870702	0					
ANR	8870737	Identifier	size		8870702	1					
ANR	8870738	Parameter	const clump_t * cp	290:55:9445:9462	8870702	2	True				
ANR	8870739	ParameterType	const clump_t *		8870702	0					
ANR	8870740	Identifier	cp		8870702	1					
ANR	8870741	CFGEntryNode	ENTRY		8870702		True				
ANR	8870742	CFGExitNode	EXIT		8870702		True				
ANR	8870743	Symbol	* cp		8870702						
ANR	8870744	Symbol	pre -> o_alone		8870702						
ANR	8870745	Symbol	pre		8870702						
ANR	8870746	Symbol	size		8870702						
ANR	8870747	Symbol	cp -> cbase		8870702						
ANR	8870748	Symbol	cp		8870702						
ANR	8870749	Symbol	* pre		8870702						
ANR	8870750	Symbol	cp -> ctop		8870702						
ANR	8870751	DeclStmt									
ANR	8870752	Decl							void	"void ( const obj_header_t * ptr_from , const obj_header_t * ptr_to )"	ialloc_validate_pointer_stability
ANR	8870753	DeclStmt									
ANR	8870754	Decl							int	"int ( const ref * , gc_state_t * , const obj_header_t * pre_fr )"	ialloc_validate_ref
ANR	8870755	DeclStmt									
ANR	8870756	Decl							int	"int ( const ref_packed * , gc_state_t * , const obj_header_t * pre_fr )"	ialloc_validate_ref_packed
ANR	8870757	DeclStmt									
ANR	8870758	Decl							int	"int ( const ref * , gc_state_t * )"	ialloc_validate_ref
ANR	8870759	DeclStmt									
ANR	8870760	Decl							int	"int ( const ref_packed * , gc_state_t * )"	ialloc_validate_ref_packed
ANR	8870761	Function	do_validate_clump	306:0:10126:12952							
ANR	8870762	FunctionDef	"do_validate_clump (const clump_t * cp , gc_state_t * gcst)"		8870761	0					
ANR	8870763	CompoundStatement		308:0:10194:12952	8870761	0					
ANR	8870764	IdentifierDeclStatement	int ret = 0 ;	309:4:10200:10211	8870761	0	True				
ANR	8870765	IdentifierDecl	ret = 0		8870761	0					
ANR	8870766	IdentifierDeclType	int		8870761	0					
ANR	8870767	Identifier	ret		8870761	1					
ANR	8870768	AssignmentExpression	ret = 0		8870761	2		=			
ANR	8870769	Identifier	ret		8870761	0					
ANR	8870770	PrimaryExpression	0		8870761	1					
ANR	8870771	ExpressionStatement	"if_debug_clump ( '6' , gcst -> heap , ""[6]validating clump"" , cp )"	311:4:10218:10276	8870761	1	True				
ANR	8870772	CallExpression	"if_debug_clump ( '6' , gcst -> heap , ""[6]validating clump"" , cp )"		8870761	0					
ANR	8870773	Callee	if_debug_clump		8870761	0					
ANR	8870774	Identifier	if_debug_clump		8870761	0					
ANR	8870775	ArgumentList	'6'		8870761	1					
ANR	8870776	Argument	'6'		8870761	0					
ANR	8870777	PrimaryExpression	'6'		8870761	0					
ANR	8870778	Argument	gcst -> heap		8870761	1					
ANR	8870779	PtrMemberAccess	gcst -> heap		8870761	0					
ANR	8870780	Identifier	gcst		8870761	0					
ANR	8870781	Identifier	heap		8870761	1					
ANR	8870782	Argument	"""[6]validating clump"""		8870761	2					
ANR	8870783	PrimaryExpression	"""[6]validating clump"""		8870761	0					
ANR	8870784	Argument	cp		8870761	3					
ANR	8870785	Identifier	cp		8870761	0					
ANR	8870786	ExpressionStatement	SCAN_CLUMP_OBJECTS ( cp )	312:4:10282:10304	8870761	2	True				
ANR	8870787	CallExpression	SCAN_CLUMP_OBJECTS ( cp )		8870761	0					
ANR	8870788	Callee	SCAN_CLUMP_OBJECTS		8870761	0					
ANR	8870789	Identifier	SCAN_CLUMP_OBJECTS		8870761	0					
ANR	8870790	ArgumentList	cp		8870761	1					
ANR	8870791	Argument	cp		8870761	0					
ANR	8870792	Identifier	cp		8870761	0					
ANR	8870793	Statement	DO_ALL	313:4:10310:10315	8870761	3	True				
ANR	8870794	IfStatement	if ( pre -> o_type == & st_free )		8870761	4					
ANR	8870795	Condition	pre -> o_type == & st_free	314:12:10329:10351	8870761	0	True				
ANR	8870796	EqualityExpression	pre -> o_type == & st_free		8870761	0		==			
ANR	8870797	PtrMemberAccess	pre -> o_type		8870761	0					
ANR	8870798	Identifier	pre		8870761	0					
ANR	8870799	Identifier	o_type		8870761	1					
ANR	8870800	UnaryOperationExpression	& st_free		8870761	1					
ANR	8870801	UnaryOperator	&		8870761	0					
ANR	8870802	Identifier	st_free		8870761	1					
ANR	8870803	CompoundStatement		7:37:159:159	8870761	1					
ANR	8870804	IfStatement	"if ( ! object_size_valid ( pre , size , cp ) )"		8870761	0					
ANR	8870805	Condition	"! object_size_valid ( pre , size , cp )"	315:16:10372:10404	8870761	0	True				
ANR	8870806	UnaryOperationExpression	"! object_size_valid ( pre , size , cp )"		8870761	0					
ANR	8870807	UnaryOperator	!		8870761	0					
ANR	8870808	CallExpression	"object_size_valid ( pre , size , cp )"		8870761	1					
ANR	8870809	Callee	object_size_valid		8870761	0					
ANR	8870810	Identifier	object_size_valid		8870761	0					
ANR	8870811	ArgumentList	pre		8870761	1					
ANR	8870812	Argument	pre		8870761	0					
ANR	8870813	Identifier	pre		8870761	0					
ANR	8870814	Argument	size		8870761	1					
ANR	8870815	Identifier	size		8870761	0					
ANR	8870816	Argument	cp		8870761	2					
ANR	8870817	Identifier	cp		8870761	0					
ANR	8870818	CompoundStatement		8:51:212:212	8870761	1					
ANR	8870819	ExpressionStatement	"lprintf3 ( ""Bad free object 0x%lx(%lu), in clump 0x%lx!\\n"" , ( ulong ) ( pre + 1 ) , ( ulong ) size , ( ulong ) cp )"	316:16:10425:10552	8870761	0	True				
ANR	8870820	CallExpression	"lprintf3 ( ""Bad free object 0x%lx(%lu), in clump 0x%lx!\\n"" , ( ulong ) ( pre + 1 ) , ( ulong ) size , ( ulong ) cp )"		8870761	0					
ANR	8870821	Callee	lprintf3		8870761	0					
ANR	8870822	Identifier	lprintf3		8870761	0					
ANR	8870823	ArgumentList	"""Bad free object 0x%lx(%lu), in clump 0x%lx!\\n"""		8870761	1					
ANR	8870824	Argument	"""Bad free object 0x%lx(%lu), in clump 0x%lx!\\n"""		8870761	0					
ANR	8870825	PrimaryExpression	"""Bad free object 0x%lx(%lu), in clump 0x%lx!\\n"""		8870761	0					
ANR	8870826	Argument	( ulong ) ( pre + 1 )		8870761	1					
ANR	8870827	CastExpression	( ulong ) ( pre + 1 )		8870761	0					
ANR	8870828	CastTarget	ulong		8870761	0					
ANR	8870829	AdditiveExpression	pre + 1		8870761	1		+			
ANR	8870830	Identifier	pre		8870761	0					
ANR	8870831	PrimaryExpression	1		8870761	1					
ANR	8870832	Argument	( ulong ) size		8870761	2					
ANR	8870833	CastExpression	( ulong ) size		8870761	0					
ANR	8870834	CastTarget	ulong		8870761	0					
ANR	8870835	Identifier	size		8870761	1					
ANR	8870836	Argument	( ulong ) cp		8870761	3					
ANR	8870837	CastExpression	( ulong ) cp		8870761	0					
ANR	8870838	CastTarget	ulong		8870761	0					
ANR	8870839	Identifier	cp		8870761	1					
ANR	8870840	ReturnStatement	return 1 ;	318:16:10570:10578	8870761	1	True				
ANR	8870841	PrimaryExpression	1		8870761	0					
ANR	8870842	ElseStatement	else		8870761	0					
ANR	8870843	IfStatement	"if ( do_validate_object ( pre + 1 , cp , gcst ) )"		8870761	0					
ANR	8870844	Condition	"do_validate_object ( pre + 1 , cp , gcst )"	320:19:10613:10649	8870761	0	True				
ANR	8870845	CallExpression	"do_validate_object ( pre + 1 , cp , gcst )"		8870761	0					
ANR	8870846	Callee	do_validate_object		8870761	0					
ANR	8870847	Identifier	do_validate_object		8870761	0					
ANR	8870848	ArgumentList	pre + 1		8870761	1					
ANR	8870849	Argument	pre + 1		8870761	0					
ANR	8870850	AdditiveExpression	pre + 1		8870761	0		+			
ANR	8870851	Identifier	pre		8870761	0					
ANR	8870852	PrimaryExpression	1		8870761	1					
ANR	8870853	Argument	cp		8870761	1					
ANR	8870854	Identifier	cp		8870761	0					
ANR	8870855	Argument	gcst		8870761	2					
ANR	8870856	Identifier	gcst		8870761	0					
ANR	8870857	CompoundStatement		13:58:457:457	8870761	1					
ANR	8870858	ExpressionStatement	"dmprintf_clump ( gcst -> heap , ""while validating clump"" , cp )"	321:12:10666:10722	8870761	0	True				
ANR	8870859	CallExpression	"dmprintf_clump ( gcst -> heap , ""while validating clump"" , cp )"		8870761	0					
ANR	8870860	Callee	dmprintf_clump		8870761	0					
ANR	8870861	Identifier	dmprintf_clump		8870761	0					
ANR	8870862	ArgumentList	gcst -> heap		8870761	1					
ANR	8870863	Argument	gcst -> heap		8870761	0					
ANR	8870864	PtrMemberAccess	gcst -> heap		8870761	0					
ANR	8870865	Identifier	gcst		8870761	0					
ANR	8870866	Identifier	heap		8870761	1					
ANR	8870867	Argument	"""while validating clump"""		8870761	1					
ANR	8870868	PrimaryExpression	"""while validating clump"""		8870761	0					
ANR	8870869	Argument	cp		8870761	2					
ANR	8870870	Identifier	cp		8870761	0					
ANR	8870871	ReturnStatement	return 1 ;	322:12:10736:10744	8870761	1	True				
ANR	8870872	PrimaryExpression	1		8870761	0					
ANR	8870873	ElseStatement	else		8870761	0					
ANR	8870874	CompoundStatement		43:8:1580:1599	8870761	0					
ANR	8870875	ExpressionStatement	struct_proc_enum_ptrs ( ( * proc ) ) = pre -> o_type -> enum_ptrs	347:8:11661:11716	8870761	0	True				
ANR	8870876	AssignmentExpression	struct_proc_enum_ptrs ( ( * proc ) ) = pre -> o_type -> enum_ptrs		8870761	0		=			
ANR	8870877	CallExpression	struct_proc_enum_ptrs ( ( * proc ) )		8870761	0					
ANR	8870878	Callee	struct_proc_enum_ptrs		8870761	0					
ANR	8870879	Identifier	struct_proc_enum_ptrs		8870761	0					
ANR	8870880	ArgumentList	* proc		8870761	1					
ANR	8870881	Argument	* proc		8870761	0					
ANR	8870882	UnaryOperationExpression	* proc		8870761	0					
ANR	8870883	UnaryOperator	*		8870761	0					
ANR	8870884	Identifier	proc		8870761	1					
ANR	8870885	PtrMemberAccess	pre -> o_type -> enum_ptrs		8870761	1					
ANR	8870886	PtrMemberAccess	pre -> o_type		8870761	0					
ANR	8870887	Identifier	pre		8870761	0					
ANR	8870888	Identifier	o_type		8870761	1					
ANR	8870889	Identifier	enum_ptrs		8870761	1					
ANR	8870890	IdentifierDeclStatement	uint index = 0 ;	348:8:11726:11740	8870761	1	True				
ANR	8870891	IdentifierDecl	index = 0		8870761	0					
ANR	8870892	IdentifierDeclType	uint		8870761	0					
ANR	8870893	Identifier	index		8870761	1					
ANR	8870894	AssignmentExpression	index = 0		8870761	2		=			
ANR	8870895	Identifier	index		8870761	0					
ANR	8870896	PrimaryExpression	0		8870761	1					
ANR	8870897	IdentifierDeclStatement	enum_ptr_t eptr ;	349:8:11750:11765	8870761	2	True				
ANR	8870898	IdentifierDecl	eptr		8870761	0					
ANR	8870899	IdentifierDeclType	enum_ptr_t		8870761	0					
ANR	8870900	Identifier	eptr		8870761	1					
ANR	8870901	IdentifierDeclStatement	gs_ptr_type_t ptype ;	350:8:11775:11794	8870761	3	True				
ANR	8870902	IdentifierDecl	ptype		8870761	0					
ANR	8870903	IdentifierDeclType	gs_ptr_type_t		8870761	0					
ANR	8870904	Identifier	ptype		8870761	1					
ANR	8870905	IfStatement	if ( proc != gs_no_struct_enum_ptrs )		8870761	4					
ANR	8870906	Condition	proc != gs_no_struct_enum_ptrs	352:12:11809:11838	8870761	0	True				
ANR	8870907	EqualityExpression	proc != gs_no_struct_enum_ptrs		8870761	0		!=			
ANR	8870908	Identifier	proc		8870761	0					
ANR	8870909	Identifier	gs_no_struct_enum_ptrs		8870761	1					
ANR	8870910	ForStatement	"for ( ; ( ptype = ( * proc ) ( gcst_get_memory_ptr ( gcst ) , pre + 1 , size , index , & eptr , pre -> o_type , gcst ) ) != 0 ; ++ index )"		8870761	1					
ANR	8870911	Condition	"( ptype = ( * proc ) ( gcst_get_memory_ptr ( gcst ) , pre + 1 , size , index , & eptr , pre -> o_type , gcst ) ) != 0"	353:19:11860:12031	8870761	0	True				
ANR	8870912	EqualityExpression	"( ptype = ( * proc ) ( gcst_get_memory_ptr ( gcst ) , pre + 1 , size , index , & eptr , pre -> o_type , gcst ) ) != 0"		8870761	0		!=			
ANR	8870913	AssignmentExpression	"ptype = ( * proc ) ( gcst_get_memory_ptr ( gcst ) , pre + 1 , size , index , & eptr , pre -> o_type , gcst )"		8870761	0		=			
ANR	8870914	Identifier	ptype		8870761	0					
ANR	8870915	CallExpression	"( * proc ) ( gcst_get_memory_ptr ( gcst ) , pre + 1 , size , index , & eptr , pre -> o_type , gcst )"		8870761	1					
ANR	8870916	Callee	* proc		8870761	0					
ANR	8870917	UnaryOperationExpression	* proc		8870761	0					
ANR	8870918	UnaryOperator	*		8870761	0					
ANR	8870919	Identifier	proc		8870761	1					
ANR	8870920	ArgumentList	gcst_get_memory_ptr ( gcst )		8870761	1					
ANR	8870921	Argument	gcst_get_memory_ptr ( gcst )		8870761	0					
ANR	8870922	CallExpression	gcst_get_memory_ptr ( gcst )		8870761	0					
ANR	8870923	Callee	gcst_get_memory_ptr		8870761	0					
ANR	8870924	Identifier	gcst_get_memory_ptr		8870761	0					
ANR	8870925	ArgumentList	gcst		8870761	1					
ANR	8870926	Argument	gcst		8870761	0					
ANR	8870927	Identifier	gcst		8870761	0					
ANR	8870928	Argument	pre + 1		8870761	1					
ANR	8870929	AdditiveExpression	pre + 1		8870761	0		+			
ANR	8870930	Identifier	pre		8870761	0					
ANR	8870931	PrimaryExpression	1		8870761	1					
ANR	8870932	Argument	size		8870761	2					
ANR	8870933	Identifier	size		8870761	0					
ANR	8870934	Argument	index		8870761	3					
ANR	8870935	Identifier	index		8870761	0					
ANR	8870936	Argument	& eptr		8870761	4					
ANR	8870937	UnaryOperationExpression	& eptr		8870761	0					
ANR	8870938	UnaryOperator	&		8870761	0					
ANR	8870939	Identifier	eptr		8870761	1					
ANR	8870940	Argument	pre -> o_type		8870761	5					
ANR	8870941	PtrMemberAccess	pre -> o_type		8870761	0					
ANR	8870942	Identifier	pre		8870761	0					
ANR	8870943	Identifier	o_type		8870761	1					
ANR	8870944	Argument	gcst		8870761	6					
ANR	8870945	Identifier	gcst		8870761	0					
ANR	8870946	PrimaryExpression	0		8870761	1					
ANR	8870947	UnaryExpression	++ index	355:63:12034:12040	8870761	1	True				
ANR	8870948	IncDec	++		8870761	0					
ANR	8870949	Identifier	index		8870761	1					
ANR	8870950	CompoundStatement		59:10:2351:2448	8870761	2					
ANR	8870951	IfStatement	if ( eptr . ptr == 0 )		8870761	0					
ANR	8870952	Condition	eptr . ptr == 0	356:20:12065:12077	8870761	0	True				
ANR	8870953	EqualityExpression	eptr . ptr == 0		8870761	0		==			
ANR	8870954	MemberAccess	eptr . ptr		8870761	0					
ANR	8870955	Identifier	eptr		8870761	0					
ANR	8870956	Identifier	ptr		8870761	1					
ANR	8870957	PrimaryExpression	0		8870761	1					
ANR	8870958	ExpressionStatement	DO_NOTHING	357:20:12100:12110	8870761	1	True				
ANR	8870959	Identifier	DO_NOTHING		8870761	0					
ANR	8870960	ElseStatement	else		8870761	0					
ANR	8870961	IfStatement	if ( ptype == ptr_struct_type )		8870761	0					
ANR	8870962	Condition	ptype == ptr_struct_type	359:25:12202:12225	8870761	0	True				
ANR	8870963	EqualityExpression	ptype == ptr_struct_type		8870761	0		==			
ANR	8870964	Identifier	ptype		8870761	0					
ANR	8870965	Identifier	ptr_struct_type		8870761	1					
ANR	8870966	CompoundStatement		54:10:2113:2276	8870761	1					
ANR	8870967	ExpressionStatement	"ret = do_validate_object ( eptr . ptr , NULL , gcst )"	360:20:12250:12296	8870761	0	True				
ANR	8870968	AssignmentExpression	"ret = do_validate_object ( eptr . ptr , NULL , gcst )"		8870761	0		=			
ANR	8870969	Identifier	ret		8870761	0					
ANR	8870970	CallExpression	"do_validate_object ( eptr . ptr , NULL , gcst )"		8870761	1					
ANR	8870971	Callee	do_validate_object		8870761	0					
ANR	8870972	Identifier	do_validate_object		8870761	0					
ANR	8870973	ArgumentList	eptr . ptr		8870761	1					
ANR	8870974	Argument	eptr . ptr		8870761	0					
ANR	8870975	MemberAccess	eptr . ptr		8870761	0					
ANR	8870976	Identifier	eptr		8870761	0					
ANR	8870977	Identifier	ptr		8870761	1					
ANR	8870978	Argument	NULL		8870761	1					
ANR	8870979	Identifier	NULL		8870761	0					
ANR	8870980	Argument	gcst		8870761	2					
ANR	8870981	Identifier	gcst		8870761	0					
ANR	8870982	Statement	if	361:7:12305:12306	8870761	1	True				
ANR	8870983	IdentifierDeclStatement	"IGC_PTR_STABILITY_CHECK ialloc_validate_pointer_stability ( pre , ( const obj_header_t * ) eptr . ptr - 1 ) ;"	361:10:12308:12471	8870761	2	True				
ANR	8870984	IdentifierDecl	"ialloc_validate_pointer_stability ( pre , ( const obj_header_t * ) eptr . ptr - 1 )"		8870761	0					
ANR	8870985	IdentifierDeclType	IGC_PTR_STABILITY_CHECK		8870761	0					
ANR	8870986	Identifier	ialloc_validate_pointer_stability		8870761	1					
ANR	8870987	Expression	"pre , ( const obj_header_t * ) eptr . ptr - 1"		8870761	2					
ANR	8870988	Identifier	pre		8870761	0					
ANR	8870989	AdditiveExpression	( const obj_header_t * ) eptr . ptr - 1		8870761	1		-			
ANR	8870990	CastExpression	( const obj_header_t * ) eptr . ptr		8870761	0					
ANR	8870991	CastTarget	const obj_header_t *		8870761	0					
ANR	8870992	MemberAccess	eptr . ptr		8870761	1					
ANR	8870993	Identifier	eptr		8870761	0					
ANR	8870994	Identifier	ptr		8870761	1					
ANR	8870995	PrimaryExpression	1		8870761	1					
ANR	8870996	Statement	endif	364:7:12480:12484	8870761	3	True				
ANR	8870997	ElseStatement	else		8870761	0					
ANR	8870998	IfStatement	if ( ptype == ptr_ref_type )		8870761	0					
ANR	8870999	Condition	ptype == ptr_ref_type	365:27:12513:12533	8870761	0	True				
ANR	8871000	EqualityExpression	ptype == ptr_ref_type		8870761	0		==			
ANR	8871001	Identifier	ptype		8870761	0					
ANR	8871002	Identifier	ptr_ref_type		8870761	1					
ANR	8871003	Statement	if	366:7:12543:12544	8870761	1	True				
ANR	8871004	ElseStatement	else		8870761	0					
ANR	8871005	ExpressionStatement	"ret = ialloc_validate_ref_packed ( eptr . ptr , gcst )"	369:20:12677:12725	8870761	0	True				
ANR	8871006	AssignmentExpression	"ret = ialloc_validate_ref_packed ( eptr . ptr , gcst )"		8870761	0		=			
ANR	8871007	Identifier	ret		8870761	0					
ANR	8871008	CallExpression	"ialloc_validate_ref_packed ( eptr . ptr , gcst )"		8870761	1					
ANR	8871009	Callee	ialloc_validate_ref_packed		8870761	0					
ANR	8871010	Identifier	ialloc_validate_ref_packed		8870761	0					
ANR	8871011	ArgumentList	eptr . ptr		8870761	1					
ANR	8871012	Argument	eptr . ptr		8870761	0					
ANR	8871013	MemberAccess	eptr . ptr		8870761	0					
ANR	8871014	Identifier	eptr		8870761	0					
ANR	8871015	Identifier	ptr		8870761	1					
ANR	8871016	Argument	gcst		8870761	1					
ANR	8871017	Identifier	gcst		8870761	0					
ANR	8871018	IdentifierDeclStatement	"IGC_PTR_STABILITY_CHECK ret = ialloc_validate_ref_packed ( eptr . ptr , gcst , pre ) ;"	366:10:12546:12643	8870761	1	True				
ANR	8871019	IdentifierDecl	"ret = ialloc_validate_ref_packed ( eptr . ptr , gcst , pre )"		8870761	0					
ANR	8871020	IdentifierDeclType	IGC_PTR_STABILITY_CHECK		8870761	0					
ANR	8871021	Identifier	ret		8870761	1					
ANR	8871022	AssignmentExpression	"ret = ialloc_validate_ref_packed ( eptr . ptr , gcst , pre )"		8870761	2		=			
ANR	8871023	Identifier	ret		8870761	0					
ANR	8871024	CallExpression	"ialloc_validate_ref_packed ( eptr . ptr , gcst , pre )"		8870761	1					
ANR	8871025	Callee	ialloc_validate_ref_packed		8870761	0					
ANR	8871026	Identifier	ialloc_validate_ref_packed		8870761	0					
ANR	8871027	ArgumentList	eptr . ptr		8870761	1					
ANR	8871028	Argument	eptr . ptr		8870761	0					
ANR	8871029	MemberAccess	eptr . ptr		8870761	0					
ANR	8871030	Identifier	eptr		8870761	0					
ANR	8871031	Identifier	ptr		8870761	1					
ANR	8871032	Argument	gcst		8870761	1					
ANR	8871033	Identifier	gcst		8870761	0					
ANR	8871034	Argument	pre		8870761	2					
ANR	8871035	Identifier	pre		8870761	0					
ANR	8871036	Statement	endif	370:7:12734:12738	8870761	2	True				
ANR	8871037	IfStatement	if ( ret )		8870761	3					
ANR	8871038	Condition	ret	371:20:12760:12762	8870761	0	True				
ANR	8871039	Identifier	ret		8870761	0					
ANR	8871040	CompoundStatement		64:25:2570:2570	8870761	1					
ANR	8871041	ExpressionStatement	"dmprintf_clump ( gcst -> heap , ""while validating clump"" , cp )"	372:20:12787:12843	8870761	0	True				
ANR	8871042	CallExpression	"dmprintf_clump ( gcst -> heap , ""while validating clump"" , cp )"		8870761	0					
ANR	8871043	Callee	dmprintf_clump		8870761	0					
ANR	8871044	Identifier	dmprintf_clump		8870761	0					
ANR	8871045	ArgumentList	gcst -> heap		8870761	1					
ANR	8871046	Argument	gcst -> heap		8870761	0					
ANR	8871047	PtrMemberAccess	gcst -> heap		8870761	0					
ANR	8871048	Identifier	gcst		8870761	0					
ANR	8871049	Identifier	heap		8870761	1					
ANR	8871050	Argument	"""while validating clump"""		8870761	1					
ANR	8871051	PrimaryExpression	"""while validating clump"""		8870761	0					
ANR	8871052	Argument	cp		8870761	2					
ANR	8871053	Identifier	cp		8870761	0					
ANR	8871054	ReturnStatement	return ret ;	373:20:12865:12875	8870761	1	True				
ANR	8871055	Identifier	ret		8870761	0					
ANR	8871056	ExpressionStatement	"if_debug3m ( '7' , gcst -> heap , "" [7]validating %s(%lu) 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) size , ( ulong ) pre )"	324:4:10760:10916	8870761	5	True				
ANR	8871057	CallExpression	"if_debug3m ( '7' , gcst -> heap , "" [7]validating %s(%lu) 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) size , ( ulong ) pre )"		8870761	0					
ANR	8871058	Callee	if_debug3m		8870761	0					
ANR	8871059	Identifier	if_debug3m		8870761	0					
ANR	8871060	ArgumentList	'7'		8870761	1					
ANR	8871061	Argument	'7'		8870761	0					
ANR	8871062	PrimaryExpression	'7'		8870761	0					
ANR	8871063	Argument	gcst -> heap		8870761	1					
ANR	8871064	PtrMemberAccess	gcst -> heap		8870761	0					
ANR	8871065	Identifier	gcst		8870761	0					
ANR	8871066	Identifier	heap		8870761	1					
ANR	8871067	Argument	""" [7]validating %s(%lu) 0x%lx\\n"""		8870761	2					
ANR	8871068	PrimaryExpression	""" [7]validating %s(%lu) 0x%lx\\n"""		8870761	0					
ANR	8871069	Argument	struct_type_name_string ( pre -> o_type )		8870761	3					
ANR	8871070	CallExpression	struct_type_name_string ( pre -> o_type )		8870761	0					
ANR	8871071	Callee	struct_type_name_string		8870761	0					
ANR	8871072	Identifier	struct_type_name_string		8870761	0					
ANR	8871073	ArgumentList	pre -> o_type		8870761	1					
ANR	8871074	Argument	pre -> o_type		8870761	0					
ANR	8871075	PtrMemberAccess	pre -> o_type		8870761	0					
ANR	8871076	Identifier	pre		8870761	0					
ANR	8871077	Identifier	o_type		8870761	1					
ANR	8871078	Argument	( ulong ) size		8870761	4					
ANR	8871079	CastExpression	( ulong ) size		8870761	0					
ANR	8871080	CastTarget	ulong		8870761	0					
ANR	8871081	Identifier	size		8870761	1					
ANR	8871082	Argument	( ulong ) pre		8870761	5					
ANR	8871083	CastExpression	( ulong ) pre		8870761	0					
ANR	8871084	CastTarget	ulong		8870761	0					
ANR	8871085	Identifier	pre		8870761	1					
ANR	8871086	IfStatement	if ( pre -> o_type == & st_refs )		8870761	6					
ANR	8871087	Condition	pre -> o_type == & st_refs	327:8:10926:10948	8870761	0	True				
ANR	8871088	EqualityExpression	pre -> o_type == & st_refs		8870761	0		==			
ANR	8871089	PtrMemberAccess	pre -> o_type		8870761	0					
ANR	8871090	Identifier	pre		8870761	0					
ANR	8871091	Identifier	o_type		8870761	1					
ANR	8871092	UnaryOperationExpression	& st_refs		8870761	1					
ANR	8871093	UnaryOperator	&		8870761	0					
ANR	8871094	Identifier	st_refs		8870761	1					
ANR	8871095	CompoundStatement		22:8:828:869	8870761	1					
ANR	8871096	IdentifierDeclStatement	const ref_packed * rp = ( const ref_packed * ) ( pre + 1 ) ;	328:8:10961:11013	8870761	0	True				
ANR	8871097	IdentifierDecl	* rp = ( const ref_packed * ) ( pre + 1 )		8870761	0					
ANR	8871098	IdentifierDeclType	const ref_packed *		8870761	0					
ANR	8871099	Identifier	rp		8870761	1					
ANR	8871100	AssignmentExpression	* rp = ( const ref_packed * ) ( pre + 1 )		8870761	2		=			
ANR	8871101	Identifier	rp		8870761	0					
ANR	8871102	CastExpression	( const ref_packed * ) ( pre + 1 )		8870761	1					
ANR	8871103	CastTarget	const ref_packed *		8870761	0					
ANR	8871104	AdditiveExpression	pre + 1		8870761	1		+			
ANR	8871105	Identifier	pre		8870761	0					
ANR	8871106	PrimaryExpression	1		8870761	1					
ANR	8871107	IdentifierDeclStatement	const char * end = ( const char * ) rp + size ;	329:8:11023:11064	8870761	1	True				
ANR	8871108	IdentifierDecl	* end = ( const char * ) rp + size		8870761	0					
ANR	8871109	IdentifierDeclType	const char *		8870761	0					
ANR	8871110	Identifier	end		8870761	1					
ANR	8871111	AssignmentExpression	* end = ( const char * ) rp + size		8870761	2		=			
ANR	8871112	Identifier	end		8870761	0					
ANR	8871113	AdditiveExpression	( const char * ) rp + size		8870761	1		+			
ANR	8871114	CastExpression	( const char * ) rp		8870761	0					
ANR	8871115	CastTarget	const char *		8870761	0					
ANR	8871116	Identifier	rp		8870761	1					
ANR	8871117	Identifier	size		8870761	1					
ANR	8871118	WhileStatement	while ( ( const char * ) rp < end )		8870761	2					
ANR	8871119	Condition	( const char * ) rp < end	331:15:11082:11103	8870761	0	True				
ANR	8871120	RelationalExpression	( const char * ) rp < end		8870761	0		<			
ANR	8871121	CastExpression	( const char * ) rp		8870761	0					
ANR	8871122	CastTarget	const char *		8870761	0					
ANR	8871123	Identifier	rp		8870761	1					
ANR	8871124	Identifier	end		8870761	1					
ANR	8871125	CompoundStatement		25:9:922:1005	8870761	1					
ANR	8871126	Statement	if	332:6:11114:11115	8870761	0	True				
ANR	8871127	IdentifierDeclStatement	"IGC_PTR_STABILITY_CHECK ret = ialloc_validate_ref_packed ( rp , gcst , pre ) ;"	332:9:11117:11200	8870761	1	True				
ANR	8871128	IdentifierDecl	"ret = ialloc_validate_ref_packed ( rp , gcst , pre )"		8870761	0					
ANR	8871129	IdentifierDeclType	IGC_PTR_STABILITY_CHECK		8870761	0					
ANR	8871130	Identifier	ret		8870761	1					
ANR	8871131	AssignmentExpression	"ret = ialloc_validate_ref_packed ( rp , gcst , pre )"		8870761	2		=			
ANR	8871132	Identifier	ret		8870761	0					
ANR	8871133	CallExpression	"ialloc_validate_ref_packed ( rp , gcst , pre )"		8870761	1					
ANR	8871134	Callee	ialloc_validate_ref_packed		8870761	0					
ANR	8871135	Identifier	ialloc_validate_ref_packed		8870761	0					
ANR	8871136	ArgumentList	rp		8870761	1					
ANR	8871137	Argument	rp		8870761	0					
ANR	8871138	Identifier	rp		8870761	0					
ANR	8871139	Argument	gcst		8870761	1					
ANR	8871140	Identifier	gcst		8870761	0					
ANR	8871141	Argument	pre		8870761	2					
ANR	8871142	Identifier	pre		8870761	0					
ANR	8871143	Statement	endif	336:6:11275:11279	8870761	2	True				
ANR	8871144	IfStatement	if ( ret )		8870761	3					
ANR	8871145	Condition	ret	337:16:11297:11299	8870761	0	True				
ANR	8871146	Identifier	ret		8870761	0					
ANR	8871147	CompoundStatement		30:21:1107:1107	8870761	1					
ANR	8871148	ExpressionStatement	"mlprintf3 ( gcst -> heap , ""while validating %s(%lu) 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) size , ( ulong ) pre )"	338:16:11320:11492	8870761	0	True				
ANR	8871149	CallExpression	"mlprintf3 ( gcst -> heap , ""while validating %s(%lu) 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) size , ( ulong ) pre )"		8870761	0					
ANR	8871150	Callee	mlprintf3		8870761	0					
ANR	8871151	Identifier	mlprintf3		8870761	0					
ANR	8871152	ArgumentList	gcst -> heap		8870761	1					
ANR	8871153	Argument	gcst -> heap		8870761	0					
ANR	8871154	PtrMemberAccess	gcst -> heap		8870761	0					
ANR	8871155	Identifier	gcst		8870761	0					
ANR	8871156	Identifier	heap		8870761	1					
ANR	8871157	Argument	"""while validating %s(%lu) 0x%lx\\n"""		8870761	1					
ANR	8871158	PrimaryExpression	"""while validating %s(%lu) 0x%lx\\n"""		8870761	0					
ANR	8871159	Argument	struct_type_name_string ( pre -> o_type )		8870761	2					
ANR	8871160	CallExpression	struct_type_name_string ( pre -> o_type )		8870761	0					
ANR	8871161	Callee	struct_type_name_string		8870761	0					
ANR	8871162	Identifier	struct_type_name_string		8870761	0					
ANR	8871163	ArgumentList	pre -> o_type		8870761	1					
ANR	8871164	Argument	pre -> o_type		8870761	0					
ANR	8871165	PtrMemberAccess	pre -> o_type		8870761	0					
ANR	8871166	Identifier	pre		8870761	0					
ANR	8871167	Identifier	o_type		8870761	1					
ANR	8871168	Argument	( ulong ) size		8870761	3					
ANR	8871169	CastExpression	( ulong ) size		8870761	0					
ANR	8871170	CastTarget	ulong		8870761	0					
ANR	8871171	Identifier	size		8870761	1					
ANR	8871172	Argument	( ulong ) pre		8870761	4					
ANR	8871173	CastExpression	( ulong ) pre		8870761	0					
ANR	8871174	CastTarget	ulong		8870761	0					
ANR	8871175	Identifier	pre		8870761	1					
ANR	8871176	ExpressionStatement	"dmprintf_clump ( gcst -> heap , ""in clump"" , cp )"	341:16:11510:11552	8870761	1	True				
ANR	8871177	CallExpression	"dmprintf_clump ( gcst -> heap , ""in clump"" , cp )"		8870761	0					
ANR	8871178	Callee	dmprintf_clump		8870761	0					
ANR	8871179	Identifier	dmprintf_clump		8870761	0					
ANR	8871180	ArgumentList	gcst -> heap		8870761	1					
ANR	8871181	Argument	gcst -> heap		8870761	0					
ANR	8871182	PtrMemberAccess	gcst -> heap		8870761	0					
ANR	8871183	Identifier	gcst		8870761	0					
ANR	8871184	Identifier	heap		8870761	1					
ANR	8871185	Argument	"""in clump"""		8870761	1					
ANR	8871186	PrimaryExpression	"""in clump"""		8870761	0					
ANR	8871187	Argument	cp		8870761	2					
ANR	8871188	Identifier	cp		8870761	0					
ANR	8871189	ReturnStatement	return ret ;	342:16:11570:11580	8870761	2	True				
ANR	8871190	Identifier	ret		8870761	0					
ANR	8871191	ExpressionStatement	rp = packed_next ( rp )	344:12:11608:11628	8870761	4	True				
ANR	8871192	AssignmentExpression	rp = packed_next ( rp )		8870761	0		=			
ANR	8871193	Identifier	rp		8870761	0					
ANR	8871194	CallExpression	packed_next ( rp )		8870761	1					
ANR	8871195	Callee	packed_next		8870761	0					
ANR	8871196	Identifier	packed_next		8870761	0					
ANR	8871197	ArgumentList	rp		8870761	1					
ANR	8871198	Argument	rp		8870761	0					
ANR	8871199	Identifier	rp		8870761	0					
ANR	8871200	ElseStatement	else		8870761	0					
ANR	8871201	ExpressionStatement	"ret = ialloc_validate_ref_packed ( rp , gcst )"	335:12:11225:11267	8870761	0	True				
ANR	8871202	AssignmentExpression	"ret = ialloc_validate_ref_packed ( rp , gcst )"		8870761	0		=			
ANR	8871203	Identifier	ret		8870761	0					
ANR	8871204	CallExpression	"ialloc_validate_ref_packed ( rp , gcst )"		8870761	1					
ANR	8871205	Callee	ialloc_validate_ref_packed		8870761	0					
ANR	8871206	Identifier	ialloc_validate_ref_packed		8870761	0					
ANR	8871207	ArgumentList	rp		8870761	1					
ANR	8871208	Argument	rp		8870761	0					
ANR	8871209	Identifier	rp		8870761	0					
ANR	8871210	Argument	gcst		8870761	1					
ANR	8871211	Identifier	gcst		8870761	0					
ANR	8871212	Statement	END_OBJECTS_SCAN	377:4:12919:12934	8870761	7	True				
ANR	8871213	ReturnStatement	return ret ;	378:4:12940:12950	8870761	8	True				
ANR	8871214	Identifier	ret		8870761	0					
ANR	8871215	ReturnType	static int		8870761	1					
ANR	8871216	Identifier	do_validate_clump		8870761	2					
ANR	8871217	ParameterList	"const clump_t * cp , gc_state_t * gcst"		8870761	3					
ANR	8871218	Parameter	const clump_t * cp	307:18:10155:10172	8870761	0	True				
ANR	8871219	ParameterType	const clump_t *		8870761	0					
ANR	8871220	Identifier	cp		8870761	1					
ANR	8871221	Parameter	gc_state_t * gcst	307:38:10175:10191	8870761	1	True				
ANR	8871222	ParameterType	gc_state_t *		8870761	0					
ANR	8871223	Identifier	gcst		8870761	1					
ANR	8871224	CFGEntryNode	ENTRY		8870761		True				
ANR	8871225	CFGExitNode	EXIT		8870761		True				
ANR	8871226	Symbol	packed_next		8870761						
ANR	8871227	Symbol	eptr		8870761						
ANR	8871228	Symbol	ptr_struct_type		8870761						
ANR	8871229	Symbol	& st_free		8870761						
ANR	8871230	Symbol	ptype		8870761						
ANR	8871231	Symbol	ialloc_validate_ref_packed		8870761						
ANR	8871232	Symbol	gcst		8870761						
ANR	8871233	Symbol	* pre		8870761						
ANR	8871234	Symbol	gcst -> heap		8870761						
ANR	8871235	Symbol	struct_proc_enum_ptrs		8870761						
ANR	8871236	Symbol	pre -> o_type		8870761						
ANR	8871237	Symbol	gcst_get_memory_ptr		8870761						
ANR	8871238	Symbol	ptr_ref_type		8870761						
ANR	8871239	Symbol	end		8870761						
ANR	8871240	Symbol	do_validate_object		8870761						
ANR	8871241	Symbol	ret		8870761						
ANR	8871242	Symbol	object_size_valid		8870761						
ANR	8871243	Symbol	pre		8870761						
ANR	8871244	Symbol	proc		8870761						
ANR	8871245	Symbol	struct_type_name_string		8870761						
ANR	8871246	Symbol	NULL		8870761						
ANR	8871247	Symbol	* pre -> o_type		8870761						
ANR	8871248	Symbol	index		8870761						
ANR	8871249	Symbol	& eptr		8870761						
ANR	8871250	Symbol	eptr . ptr		8870761						
ANR	8871251	Symbol	pre -> o_type -> enum_ptrs		8870761						
ANR	8871252	Symbol	ialloc_validate_pointer_stability		8870761						
ANR	8871253	Symbol	cp		8870761						
ANR	8871254	Symbol	* gcst		8870761						
ANR	8871255	Symbol	gs_no_struct_enum_ptrs		8870761						
ANR	8871256	Symbol	* proc		8870761						
ANR	8871257	Symbol	size		8870761						
ANR	8871258	Symbol	* * pre		8870761						
ANR	8871259	Symbol	& st_refs		8870761						
ANR	8871260	Symbol	rp		8870761						
ANR	8871261	Function	ialloc_validate_clump	381:0:12955:13090							
ANR	8871262	FunctionDef	"ialloc_validate_clump (const clump_t * cp , gc_state_t * gcst)"		8871261	0					
ANR	8871263	CompoundStatement		383:0:13021:13090	8871261	0					
ANR	8871264	IfStatement	"if ( do_validate_clump ( cp , gcst ) )"		8871261	0					
ANR	8871265	Condition	"do_validate_clump ( cp , gcst )"	384:8:13031:13057	8871261	0	True				
ANR	8871266	CallExpression	"do_validate_clump ( cp , gcst )"		8871261	0					
ANR	8871267	Callee	do_validate_clump		8871261	0					
ANR	8871268	Identifier	do_validate_clump		8871261	0					
ANR	8871269	ArgumentList	cp		8871261	1					
ANR	8871270	Argument	cp		8871261	0					
ANR	8871271	Identifier	cp		8871261	0					
ANR	8871272	Argument	gcst		8871261	1					
ANR	8871273	Identifier	gcst		8871261	0					
ANR	8871274	ExpressionStatement	gs_abort ( gcst -> heap )	385:8:13068:13088	8871261	1	True				
ANR	8871275	CallExpression	gs_abort ( gcst -> heap )		8871261	0					
ANR	8871276	Callee	gs_abort		8871261	0					
ANR	8871277	Identifier	gs_abort		8871261	0					
ANR	8871278	ArgumentList	gcst -> heap		8871261	1					
ANR	8871279	Argument	gcst -> heap		8871261	0					
ANR	8871280	PtrMemberAccess	gcst -> heap		8871261	0					
ANR	8871281	Identifier	gcst		8871261	0					
ANR	8871282	Identifier	heap		8871261	1					
ANR	8871283	ReturnType	void		8871261	1					
ANR	8871284	Identifier	ialloc_validate_clump		8871261	2					
ANR	8871285	ParameterList	"const clump_t * cp , gc_state_t * gcst"		8871261	3					
ANR	8871286	Parameter	const clump_t * cp	382:22:12982:12999	8871261	0	True				
ANR	8871287	ParameterType	const clump_t *		8871261	0					
ANR	8871288	Identifier	cp		8871261	1					
ANR	8871289	Parameter	gc_state_t * gcst	382:42:13002:13018	8871261	1	True				
ANR	8871290	ParameterType	gc_state_t *		8871261	0					
ANR	8871291	Identifier	gcst		8871261	1					
ANR	8871292	CFGEntryNode	ENTRY		8871261		True				
ANR	8871293	CFGExitNode	EXIT		8871261		True				
ANR	8871294	Symbol	gcst -> heap		8871261						
ANR	8871295	Symbol	cp		8871261						
ANR	8871296	Symbol	gcst		8871261						
ANR	8871297	Symbol	* gcst		8871261						
ANR	8871298	Symbol	do_validate_clump		8871261						
ANR	8871299	Function	ialloc_validate_ref_packed	390:0:13143:13573							
ANR	8871300	FunctionDef	"ialloc_validate_ref_packed (const ref_packed * rp , gc_state_t * gcst , const obj_header_t * pre_fr)"		8871299	0					
ANR	8871301	CompoundStatement		392:0:13251:13573	8871299	0					
ANR	8871302	IdentifierDeclStatement	const gs_memory_t * cmem = gcst -> spaces . memories . named . system -> stable_memory ;	393:4:13257:13332	8871299	0	True				
ANR	8871303	IdentifierDecl	* cmem = gcst -> spaces . memories . named . system -> stable_memory		8871299	0					
ANR	8871304	IdentifierDeclType	const gs_memory_t *		8871299	0					
ANR	8871305	Identifier	cmem		8871299	1					
ANR	8871306	AssignmentExpression	* cmem = gcst -> spaces . memories . named . system -> stable_memory		8871299	2		=			
ANR	8871307	Identifier	cmem		8871299	0					
ANR	8871308	PtrMemberAccess	gcst -> spaces . memories . named . system -> stable_memory		8871299	1					
ANR	8871309	MemberAccess	gcst -> spaces . memories . named . system		8871299	0					
ANR	8871310	MemberAccess	gcst -> spaces . memories . named		8871299	0					
ANR	8871311	MemberAccess	gcst -> spaces . memories		8871299	0					
ANR	8871312	PtrMemberAccess	gcst -> spaces		8871299	0					
ANR	8871313	Identifier	gcst		8871299	0					
ANR	8871314	Identifier	spaces		8871299	1					
ANR	8871315	Identifier	memories		8871299	1					
ANR	8871316	Identifier	named		8871299	1					
ANR	8871317	Identifier	system		8871299	1					
ANR	8871318	Identifier	stable_memory		8871299	1					
ANR	8871319	IfStatement	if ( r_is_packed ( rp ) )		8871299	1					
ANR	8871320	Condition	r_is_packed ( rp )	395:8:13343:13357	8871299	0	True				
ANR	8871321	CallExpression	r_is_packed ( rp )		8871299	0					
ANR	8871322	Callee	r_is_packed		8871299	0					
ANR	8871323	Identifier	r_is_packed		8871299	0					
ANR	8871324	ArgumentList	rp		8871299	1					
ANR	8871325	Argument	rp		8871299	0					
ANR	8871326	Identifier	rp		8871299	0					
ANR	8871327	CompoundStatement		5:8:118:130	8871299	1					
ANR	8871328	IdentifierDeclStatement	ref unpacked ;	396:8:13370:13382	8871299	0	True				
ANR	8871329	IdentifierDecl	unpacked		8871299	0					
ANR	8871330	IdentifierDeclType	ref		8871299	0					
ANR	8871331	Identifier	unpacked		8871299	1					
ANR	8871332	ExpressionStatement	"packed_get ( cmem , rp , & unpacked )"	398:8:13393:13424	8871299	1	True				
ANR	8871333	CallExpression	"packed_get ( cmem , rp , & unpacked )"		8871299	0					
ANR	8871334	Callee	packed_get		8871299	0					
ANR	8871335	Identifier	packed_get		8871299	0					
ANR	8871336	ArgumentList	cmem		8871299	1					
ANR	8871337	Argument	cmem		8871299	0					
ANR	8871338	Identifier	cmem		8871299	0					
ANR	8871339	Argument	rp		8871299	1					
ANR	8871340	Identifier	rp		8871299	0					
ANR	8871341	Argument	& unpacked		8871299	2					
ANR	8871342	UnaryOperationExpression	& unpacked		8871299	0					
ANR	8871343	UnaryOperator	&		8871299	0					
ANR	8871344	Identifier	unpacked		8871299	1					
ANR	8871345	ReturnStatement	"return ialloc_validate_ref ( & unpacked , gcst , pre_fr ) ;"	399:8:13434:13485	8871299	2	True				
ANR	8871346	CallExpression	"ialloc_validate_ref ( & unpacked , gcst , pre_fr )"		8871299	0					
ANR	8871347	Callee	ialloc_validate_ref		8871299	0					
ANR	8871348	Identifier	ialloc_validate_ref		8871299	0					
ANR	8871349	ArgumentList	& unpacked		8871299	1					
ANR	8871350	Argument	& unpacked		8871299	0					
ANR	8871351	UnaryOperationExpression	& unpacked		8871299	0					
ANR	8871352	UnaryOperator	&		8871299	0					
ANR	8871353	Identifier	unpacked		8871299	1					
ANR	8871354	Argument	gcst		8871299	1					
ANR	8871355	Identifier	gcst		8871299	0					
ANR	8871356	Argument	pre_fr		8871299	2					
ANR	8871357	Identifier	pre_fr		8871299	0					
ANR	8871358	ElseStatement	else		8871299	0					
ANR	8871359	CompoundStatement		9:11:246:246	8871299	0					
ANR	8871360	ReturnStatement	"return ialloc_validate_ref ( ( const ref * ) rp , gcst , pre_fr ) ;"	401:8:13508:13565	8871299	0	True				
ANR	8871361	CallExpression	"ialloc_validate_ref ( ( const ref * ) rp , gcst , pre_fr )"		8871299	0					
ANR	8871362	Callee	ialloc_validate_ref		8871299	0					
ANR	8871363	Identifier	ialloc_validate_ref		8871299	0					
ANR	8871364	ArgumentList	( const ref * ) rp		8871299	1					
ANR	8871365	Argument	( const ref * ) rp		8871299	0					
ANR	8871366	CastExpression	( const ref * ) rp		8871299	0					
ANR	8871367	CastTarget	const ref *		8871299	0					
ANR	8871368	Identifier	rp		8871299	1					
ANR	8871369	Argument	gcst		8871299	1					
ANR	8871370	Identifier	gcst		8871299	0					
ANR	8871371	Argument	pre_fr		8871299	2					
ANR	8871372	Identifier	pre_fr		8871299	0					
ANR	8871373	ReturnType	static int		8871299	1					
ANR	8871374	Identifier	ialloc_validate_ref_packed		8871299	2					
ANR	8871375	ParameterList	"const ref_packed * rp , gc_state_t * gcst , const obj_header_t * pre_fr"		8871299	3					
ANR	8871376	Parameter	const ref_packed * rp	391:27:13181:13201	8871299	0	True				
ANR	8871377	ParameterType	const ref_packed *		8871299	0					
ANR	8871378	Identifier	rp		8871299	1					
ANR	8871379	Parameter	gc_state_t * gcst	391:50:13204:13220	8871299	1	True				
ANR	8871380	ParameterType	gc_state_t *		8871299	0					
ANR	8871381	Identifier	gcst		8871299	1					
ANR	8871382	Parameter	const obj_header_t * pre_fr	391:69:13223:13248	8871299	2	True				
ANR	8871383	ParameterType	const obj_header_t *		8871299	0					
ANR	8871384	Identifier	pre_fr		8871299	1					
ANR	8871385	CFGEntryNode	ENTRY		8871299		True				
ANR	8871386	CFGExitNode	EXIT		8871299		True				
ANR	8871387	Symbol	* gcst -> spaces . memories . named		8871299						
ANR	8871388	Symbol	* gcst -> spaces		8871299						
ANR	8871389	Symbol	& unpacked		8871299						
ANR	8871390	Symbol	r_is_packed		8871299						
ANR	8871391	Symbol	ialloc_validate_ref		8871299						
ANR	8871392	Symbol	gcst -> spaces . memories		8871299						
ANR	8871393	Symbol	gcst -> spaces		8871299						
ANR	8871394	Symbol	gcst -> spaces . memories . named . system		8871299						
ANR	8871395	Symbol	unpacked		8871299						
ANR	8871396	Symbol	gcst		8871299						
ANR	8871397	Symbol	* gcst		8871299						
ANR	8871398	Symbol	* gcst -> spaces . memories		8871299						
ANR	8871399	Symbol	* gcst -> spaces . memories . named . system		8871299						
ANR	8871400	Symbol	pre_fr		8871299						
ANR	8871401	Symbol	cmem		8871299						
ANR	8871402	Symbol	gcst -> spaces . memories . named . system -> stable_memory		8871299						
ANR	8871403	Symbol	rp		8871299						
ANR	8871404	Symbol	gcst -> spaces . memories . named		8871299						
ANR	8871405	Symbol	* * gcst		8871299						
ANR	8871406	Function	ialloc_validate_ref_packed	405:0:13581:13967							
ANR	8871407	FunctionDef	"ialloc_validate_ref_packed (const ref_packed * rp , gc_state_t * gcst)"		8871406	0					
ANR	8871408	CompoundStatement		407:0:13661:13967	8871406	0					
ANR	8871409	IdentifierDeclStatement	const gs_memory_t * cmem = gcst -> spaces . memories . named . system -> stable_memory ;	408:4:13667:13742	8871406	0	True				
ANR	8871410	IdentifierDecl	* cmem = gcst -> spaces . memories . named . system -> stable_memory		8871406	0					
ANR	8871411	IdentifierDeclType	const gs_memory_t *		8871406	0					
ANR	8871412	Identifier	cmem		8871406	1					
ANR	8871413	AssignmentExpression	* cmem = gcst -> spaces . memories . named . system -> stable_memory		8871406	2		=			
ANR	8871414	Identifier	cmem		8871406	0					
ANR	8871415	PtrMemberAccess	gcst -> spaces . memories . named . system -> stable_memory		8871406	1					
ANR	8871416	MemberAccess	gcst -> spaces . memories . named . system		8871406	0					
ANR	8871417	MemberAccess	gcst -> spaces . memories . named		8871406	0					
ANR	8871418	MemberAccess	gcst -> spaces . memories		8871406	0					
ANR	8871419	PtrMemberAccess	gcst -> spaces		8871406	0					
ANR	8871420	Identifier	gcst		8871406	0					
ANR	8871421	Identifier	spaces		8871406	1					
ANR	8871422	Identifier	memories		8871406	1					
ANR	8871423	Identifier	named		8871406	1					
ANR	8871424	Identifier	system		8871406	1					
ANR	8871425	Identifier	stable_memory		8871406	1					
ANR	8871426	IfStatement	if ( r_is_packed ( rp ) )		8871406	1					
ANR	8871427	Condition	r_is_packed ( rp )	410:8:13753:13767	8871406	0	True				
ANR	8871428	CallExpression	r_is_packed ( rp )		8871406	0					
ANR	8871429	Callee	r_is_packed		8871406	0					
ANR	8871430	Identifier	r_is_packed		8871406	0					
ANR	8871431	ArgumentList	rp		8871406	1					
ANR	8871432	Argument	rp		8871406	0					
ANR	8871433	Identifier	rp		8871406	0					
ANR	8871434	CompoundStatement		5:8:118:130	8871406	1					
ANR	8871435	IdentifierDeclStatement	ref unpacked ;	411:8:13780:13792	8871406	0	True				
ANR	8871436	IdentifierDecl	unpacked		8871406	0					
ANR	8871437	IdentifierDeclType	ref		8871406	0					
ANR	8871438	Identifier	unpacked		8871406	1					
ANR	8871439	ExpressionStatement	"packed_get ( cmem , rp , & unpacked )"	413:8:13803:13834	8871406	1	True				
ANR	8871440	CallExpression	"packed_get ( cmem , rp , & unpacked )"		8871406	0					
ANR	8871441	Callee	packed_get		8871406	0					
ANR	8871442	Identifier	packed_get		8871406	0					
ANR	8871443	ArgumentList	cmem		8871406	1					
ANR	8871444	Argument	cmem		8871406	0					
ANR	8871445	Identifier	cmem		8871406	0					
ANR	8871446	Argument	rp		8871406	1					
ANR	8871447	Identifier	rp		8871406	0					
ANR	8871448	Argument	& unpacked		8871406	2					
ANR	8871449	UnaryOperationExpression	& unpacked		8871406	0					
ANR	8871450	UnaryOperator	&		8871406	0					
ANR	8871451	Identifier	unpacked		8871406	1					
ANR	8871452	ReturnStatement	"return ialloc_validate_ref ( & unpacked , gcst ) ;"	414:8:13844:13887	8871406	2	True				
ANR	8871453	CallExpression	"ialloc_validate_ref ( & unpacked , gcst )"		8871406	0					
ANR	8871454	Callee	ialloc_validate_ref		8871406	0					
ANR	8871455	Identifier	ialloc_validate_ref		8871406	0					
ANR	8871456	ArgumentList	& unpacked		8871406	1					
ANR	8871457	Argument	& unpacked		8871406	0					
ANR	8871458	UnaryOperationExpression	& unpacked		8871406	0					
ANR	8871459	UnaryOperator	&		8871406	0					
ANR	8871460	Identifier	unpacked		8871406	1					
ANR	8871461	Argument	gcst		8871406	1					
ANR	8871462	Identifier	gcst		8871406	0					
ANR	8871463	ElseStatement	else		8871406	0					
ANR	8871464	CompoundStatement		9:11:238:238	8871406	0					
ANR	8871465	ReturnStatement	"return ialloc_validate_ref ( ( const ref * ) rp , gcst ) ;"	416:8:13910:13959	8871406	0	True				
ANR	8871466	CallExpression	"ialloc_validate_ref ( ( const ref * ) rp , gcst )"		8871406	0					
ANR	8871467	Callee	ialloc_validate_ref		8871406	0					
ANR	8871468	Identifier	ialloc_validate_ref		8871406	0					
ANR	8871469	ArgumentList	( const ref * ) rp		8871406	1					
ANR	8871470	Argument	( const ref * ) rp		8871406	0					
ANR	8871471	CastExpression	( const ref * ) rp		8871406	0					
ANR	8871472	CastTarget	const ref *		8871406	0					
ANR	8871473	Identifier	rp		8871406	1					
ANR	8871474	Argument	gcst		8871406	1					
ANR	8871475	Identifier	gcst		8871406	0					
ANR	8871476	ReturnType	static int		8871406	1					
ANR	8871477	Identifier	ialloc_validate_ref_packed		8871406	2					
ANR	8871478	ParameterList	"const ref_packed * rp , gc_state_t * gcst"		8871406	3					
ANR	8871479	Parameter	const ref_packed * rp	406:27:13619:13639	8871406	0	True				
ANR	8871480	ParameterType	const ref_packed *		8871406	0					
ANR	8871481	Identifier	rp		8871406	1					
ANR	8871482	Parameter	gc_state_t * gcst	406:50:13642:13658	8871406	1	True				
ANR	8871483	ParameterType	gc_state_t *		8871406	0					
ANR	8871484	Identifier	gcst		8871406	1					
ANR	8871485	CFGEntryNode	ENTRY		8871406		True				
ANR	8871486	CFGExitNode	EXIT		8871406		True				
ANR	8871487	Symbol	* gcst -> spaces . memories . named		8871406						
ANR	8871488	Symbol	* gcst -> spaces		8871406						
ANR	8871489	Symbol	& unpacked		8871406						
ANR	8871490	Symbol	r_is_packed		8871406						
ANR	8871491	Symbol	ialloc_validate_ref		8871406						
ANR	8871492	Symbol	gcst -> spaces . memories		8871406						
ANR	8871493	Symbol	gcst -> spaces		8871406						
ANR	8871494	Symbol	gcst -> spaces . memories . named . system		8871406						
ANR	8871495	Symbol	unpacked		8871406						
ANR	8871496	Symbol	gcst		8871406						
ANR	8871497	Symbol	* gcst		8871406						
ANR	8871498	Symbol	* gcst -> spaces . memories		8871406						
ANR	8871499	Symbol	* gcst -> spaces . memories . named . system		8871406						
ANR	8871500	Symbol	cmem		8871406						
ANR	8871501	Symbol	gcst -> spaces . memories . named . system -> stable_memory		8871406						
ANR	8871502	Symbol	rp		8871406						
ANR	8871503	Symbol	gcst -> spaces . memories . named		8871406						
ANR	8871504	Symbol	* * gcst		8871406						
ANR	8871505	DeclStmt									
ANR	8871506	Decl							const void	const void *	optr
ANR	8871507	DeclStmt									
ANR	8871508	Decl							const ref	const ref *	rptr
ANR	8871509	DeclStmt									
ANR	8871510	Decl							const char	const char *	tname
ANR	8871511	DeclStmt									
ANR	8871512	Decl							uint	uint	size
ANR	8871513	DeclStmt									
ANR	8871514	Decl							const gs_memory_t	const gs_memory_t *	cmem
ANR	8871515	DeclStmt									
ANR	8871516	Decl							int	int	ret
ANR	8871517	DeclStmt									
ANR	8871518	Decl							IGC_PTR_STABILITY_CHECK	IGC_PTR_STABILITY_CHECK	ialloc_validate_pointer_stability
ANR	8871519	DeclStmt									
ANR	8871520	Decl							ref	ref	sref
ANR	8871521	DeclStmt									
ANR	8871522	Decl							uint	uint	i
ANR	8871523	DeclStmt									
ANR	8871524	Decl							const ref	const ref *	elt
ANR	8871525	DeclStmt									
ANR	8871526	Decl							const dict	const dict *	pdict
ANR	8871527	Function	ialloc_validate_pointer_stability	552:0:18551:19423							
ANR	8871528	FunctionDef	"ialloc_validate_pointer_stability (const obj_header_t * ptr_fr , const obj_header_t * ptr_to)"		8871527	0					
ANR	8871529	CompoundStatement		555:0:18683:19423	8871527	0					
ANR	8871530	Statement	static	556:4:18689:18694	8871527	0	True				
ANR	8871531	IdentifierDeclStatement	"const char * sn [ ] = { ""undef"" , ""undef"" , ""system"" , ""undef"" , ""global_stable"" , ""global"" , ""local_stable"" , ""local"" } ;"	556:11:18696:18820	8871527	1	True				
ANR	8871532	IdentifierDecl	"* sn [ ] = { ""undef"" , ""undef"" , ""system"" , ""undef"" , ""global_stable"" , ""global"" , ""local_stable"" , ""local"" }"		8871527	0					
ANR	8871533	IdentifierDeclType	const char * [ ]		8871527	0					
ANR	8871534	Identifier	sn		8871527	1					
ANR	8871535	AssignmentExpression	"* sn [ ] = { ""undef"" , ""undef"" , ""system"" , ""undef"" , ""global_stable"" , ""global"" , ""local_stable"" , ""local"" }"		8871527	2		=			
ANR	8871536	Identifier	sn		8871527	0					
ANR	8871537	InitializerList	"""undef"""		8871527	1					
ANR	8871538	PrimaryExpression	"""undef"""		8871527	0					
ANR	8871539	PrimaryExpression	"""undef"""		8871527	1					
ANR	8871540	PrimaryExpression	"""system"""		8871527	2					
ANR	8871541	PrimaryExpression	"""undef"""		8871527	3					
ANR	8871542	PrimaryExpression	"""global_stable"""		8871527	4					
ANR	8871543	PrimaryExpression	"""global"""		8871527	5					
ANR	8871544	PrimaryExpression	"""local_stable"""		8871527	6					
ANR	8871545	PrimaryExpression	"""local"""		8871527	7					
ANR	8871546	IfStatement	if ( ptr_fr -> d . o . space_id < ptr_to -> d . o . space_id )		8871527	2					
ANR	8871547	Condition	ptr_fr -> d . o . space_id < ptr_to -> d . o . space_id	559:8:18831:18873	8871527	0	True				
ANR	8871548	RelationalExpression	ptr_fr -> d . o . space_id < ptr_to -> d . o . space_id		8871527	0		<			
ANR	8871549	MemberAccess	ptr_fr -> d . o . space_id		8871527	0					
ANR	8871550	MemberAccess	ptr_fr -> d . o		8871527	0					
ANR	8871551	PtrMemberAccess	ptr_fr -> d		8871527	0					
ANR	8871552	Identifier	ptr_fr		8871527	0					
ANR	8871553	Identifier	d		8871527	1					
ANR	8871554	Identifier	o		8871527	1					
ANR	8871555	Identifier	space_id		8871527	1					
ANR	8871556	MemberAccess	ptr_to -> d . o . space_id		8871527	1					
ANR	8871557	MemberAccess	ptr_to -> d . o		8871527	0					
ANR	8871558	PtrMemberAccess	ptr_to -> d		8871527	0					
ANR	8871559	Identifier	ptr_to		8871527	0					
ANR	8871560	Identifier	d		8871527	1					
ANR	8871561	Identifier	o		8871527	1					
ANR	8871562	Identifier	space_id		8871527	1					
ANR	8871563	CompoundStatement		8:8:332:452	8871527	1					
ANR	8871564	IdentifierDeclStatement	"const char * sn_fr = ( ptr_fr -> d . o . space_id < count_of ( sn ) ? sn [ ptr_fr -> d . o . space_id ] : ""unknown"" ) ;"	560:8:18886:19006	8871527	0	True				
ANR	8871565	IdentifierDecl	"* sn_fr = ( ptr_fr -> d . o . space_id < count_of ( sn ) ? sn [ ptr_fr -> d . o . space_id ] : ""unknown"" )"		8871527	0					
ANR	8871566	IdentifierDeclType	const char *		8871527	0					
ANR	8871567	Identifier	sn_fr		8871527	1					
ANR	8871568	AssignmentExpression	"* sn_fr = ( ptr_fr -> d . o . space_id < count_of ( sn ) ? sn [ ptr_fr -> d . o . space_id ] : ""unknown"" )"		8871527	2		=			
ANR	8871569	Identifier	sn_fr		8871527	0					
ANR	8871570	ConditionalExpression	"ptr_fr -> d . o . space_id < count_of ( sn ) ? sn [ ptr_fr -> d . o . space_id ] : ""unknown"""		8871527	1					
ANR	8871571	Condition	ptr_fr -> d . o . space_id < count_of ( sn )		8871527	0					
ANR	8871572	RelationalExpression	ptr_fr -> d . o . space_id < count_of ( sn )		8871527	0		<			
ANR	8871573	MemberAccess	ptr_fr -> d . o . space_id		8871527	0					
ANR	8871574	MemberAccess	ptr_fr -> d . o		8871527	0					
ANR	8871575	PtrMemberAccess	ptr_fr -> d		8871527	0					
ANR	8871576	Identifier	ptr_fr		8871527	0					
ANR	8871577	Identifier	d		8871527	1					
ANR	8871578	Identifier	o		8871527	1					
ANR	8871579	Identifier	space_id		8871527	1					
ANR	8871580	CallExpression	count_of ( sn )		8871527	1					
ANR	8871581	Callee	count_of		8871527	0					
ANR	8871582	Identifier	count_of		8871527	0					
ANR	8871583	ArgumentList	sn		8871527	1					
ANR	8871584	Argument	sn		8871527	0					
ANR	8871585	Identifier	sn		8871527	0					
ANR	8871586	ArrayIndexing	sn [ ptr_fr -> d . o . space_id ]		8871527	1					
ANR	8871587	Identifier	sn		8871527	0					
ANR	8871588	MemberAccess	ptr_fr -> d . o . space_id		8871527	1					
ANR	8871589	MemberAccess	ptr_fr -> d . o		8871527	0					
ANR	8871590	PtrMemberAccess	ptr_fr -> d		8871527	0					
ANR	8871591	Identifier	ptr_fr		8871527	0					
ANR	8871592	Identifier	d		8871527	1					
ANR	8871593	Identifier	o		8871527	1					
ANR	8871594	Identifier	space_id		8871527	1					
ANR	8871595	PrimaryExpression	"""unknown"""		8871527	2					
ANR	8871596	IdentifierDeclStatement	"const char * sn_to = ( ptr_to -> d . o . space_id < count_of ( sn ) ? sn [ ptr_to -> d . o . space_id ] : ""unknown"" ) ;"	562:8:19016:19136	8871527	1	True				
ANR	8871597	IdentifierDecl	"* sn_to = ( ptr_to -> d . o . space_id < count_of ( sn ) ? sn [ ptr_to -> d . o . space_id ] : ""unknown"" )"		8871527	0					
ANR	8871598	IdentifierDeclType	const char *		8871527	0					
ANR	8871599	Identifier	sn_to		8871527	1					
ANR	8871600	AssignmentExpression	"* sn_to = ( ptr_to -> d . o . space_id < count_of ( sn ) ? sn [ ptr_to -> d . o . space_id ] : ""unknown"" )"		8871527	2		=			
ANR	8871601	Identifier	sn_to		8871527	0					
ANR	8871602	ConditionalExpression	"ptr_to -> d . o . space_id < count_of ( sn ) ? sn [ ptr_to -> d . o . space_id ] : ""unknown"""		8871527	1					
ANR	8871603	Condition	ptr_to -> d . o . space_id < count_of ( sn )		8871527	0					
ANR	8871604	RelationalExpression	ptr_to -> d . o . space_id < count_of ( sn )		8871527	0		<			
ANR	8871605	MemberAccess	ptr_to -> d . o . space_id		8871527	0					
ANR	8871606	MemberAccess	ptr_to -> d . o		8871527	0					
ANR	8871607	PtrMemberAccess	ptr_to -> d		8871527	0					
ANR	8871608	Identifier	ptr_to		8871527	0					
ANR	8871609	Identifier	d		8871527	1					
ANR	8871610	Identifier	o		8871527	1					
ANR	8871611	Identifier	space_id		8871527	1					
ANR	8871612	CallExpression	count_of ( sn )		8871527	1					
ANR	8871613	Callee	count_of		8871527	0					
ANR	8871614	Identifier	count_of		8871527	0					
ANR	8871615	ArgumentList	sn		8871527	1					
ANR	8871616	Argument	sn		8871527	0					
ANR	8871617	Identifier	sn		8871527	0					
ANR	8871618	ArrayIndexing	sn [ ptr_to -> d . o . space_id ]		8871527	1					
ANR	8871619	Identifier	sn		8871527	0					
ANR	8871620	MemberAccess	ptr_to -> d . o . space_id		8871527	1					
ANR	8871621	MemberAccess	ptr_to -> d . o		8871527	0					
ANR	8871622	PtrMemberAccess	ptr_to -> d		8871527	0					
ANR	8871623	Identifier	ptr_to		8871527	0					
ANR	8871624	Identifier	d		8871527	1					
ANR	8871625	Identifier	o		8871527	1					
ANR	8871626	Identifier	space_id		8871527	1					
ANR	8871627	PrimaryExpression	"""unknown"""		8871527	2					
ANR	8871628	Statement	lprintf6	565:8:19147:19154	8871527	2	True				
ANR	8871629	Statement	(	565:16:19155:19155	8871527	3	True				
ANR	8871630	Statement	"""Reference to a less stable object 0x%lx<%s> """	565:17:19156:19201	8871527	4	True				
ANR	8871631	Statement	"""in the space \\'%s\\' from 0x%lx<%s> in the space \\'%s\\' !\\n"""	566:17:19220:19279	8871527	5	True				
ANR	8871632	Statement	","	566:77:19280:19280	8871527	6	True				
ANR	8871633	Statement	(	567:17:19299:19299	8871527	7	True				
ANR	8871634	Statement	ulong	567:18:19300:19304	8871527	8	True				
ANR	8871635	Statement	)	567:23:19305:19305	8871527	9	True				
ANR	8871636	Statement	ptr_to	567:25:19307:19312	8871527	10	True				
ANR	8871637	Statement	","	567:31:19313:19313	8871527	11	True				
ANR	8871638	Statement	ptr_to	567:33:19315:19320	8871527	12	True				
ANR	8871639	Statement	->	567:39:19321:19322	8871527	13	True				
ANR	8871640	Statement	d	567:41:19323:19323	8871527	14	True				
ANR	8871641	Statement	.	567:42:19324:19324	8871527	15	True				
ANR	8871642	Statement	o	567:43:19325:19325	8871527	16	True				
ANR	8871643	Statement	.	567:44:19326:19326	8871527	17	True				
ANR	8871644	Statement	t	567:45:19327:19327	8871527	18	True				
ANR	8871645	Statement	.	567:46:19328:19328	8871527	19	True				
ANR	8871646	Statement	type	567:47:19329:19332	8871527	20	True				
ANR	8871647	Statement	->	567:51:19333:19334	8871527	21	True				
ANR	8871648	Statement	sname	567:53:19335:19339	8871527	22	True				
ANR	8871649	Statement	","	567:58:19340:19340	8871527	23	True				
ANR	8871650	Statement	sn_to	567:60:19342:19346	8871527	24	True				
ANR	8871651	Statement	","	567:65:19347:19347	8871527	25	True				
ANR	8871652	Statement	(	568:17:19366:19366	8871527	26	True				
ANR	8871653	Statement	ulong	568:18:19367:19371	8871527	27	True				
ANR	8871654	Statement	)	568:23:19372:19372	8871527	28	True				
ANR	8871655	Statement	ptr_fr	568:25:19374:19379	8871527	29	True				
ANR	8871656	Statement	","	568:31:19380:19380	8871527	30	True				
ANR	8871657	Statement	ptr_fr	568:33:19382:19387	8871527	31	True				
ANR	8871658	Statement	->	568:39:19388:19389	8871527	32	True				
ANR	8871659	Statement	d	568:41:19390:19390	8871527	33	True				
ANR	8871660	Statement	.	568:42:19391:19391	8871527	34	True				
ANR	8871661	Statement	o	568:43:19392:19392	8871527	35	True				
ANR	8871662	Statement	.	568:44:19393:19393	8871527	36	True				
ANR	8871663	Statement	t	568:45:19394:19394	8871527	37	True				
ANR	8871664	Statement	.	568:46:19395:19395	8871527	38	True				
ANR	8871665	Statement	type	568:47:19396:19399	8871527	39	True				
ANR	8871666	Statement	->	568:51:19400:19401	8871527	40	True				
ANR	8871667	Statement	sname	568:53:19402:19406	8871527	41	True				
ANR	8871668	Statement	","	568:58:19407:19407	8871527	42	True				
ANR	8871669	Statement	sn_fr	568:60:19409:19413	8871527	43	True				
ANR	8871670	Statement	)	568:65:19414:19414	8871527	44	True				
ANR	8871671	ExpressionStatement		568:66:19415:19415	8871527	45	True				
ANR	8871672	ReturnType	void		8871527	1					
ANR	8871673	Identifier	ialloc_validate_pointer_stability		8871527	2					
ANR	8871674	ParameterList	"const obj_header_t * ptr_fr , const obj_header_t * ptr_to"		8871527	3					
ANR	8871675	Parameter	const obj_header_t * ptr_fr	553:34:18590:18616	8871527	0	True				
ANR	8871676	ParameterType	const obj_header_t *		8871527	0					
ANR	8871677	Identifier	ptr_fr		8871527	1					
ANR	8871678	Parameter	const obj_header_t * ptr_to	554:35:18654:18680	8871527	1	True				
ANR	8871679	ParameterType	const obj_header_t *		8871527	0					
ANR	8871680	Identifier	ptr_to		8871527	1					
ANR	8871681	CFGEntryNode	ENTRY		8871527		True				
ANR	8871682	CFGExitNode	EXIT		8871527		True				
ANR	8871683	Symbol	* * ptr_fr		8871527						
ANR	8871684	Symbol	ptr_fr -> d		8871527						
ANR	8871685	Symbol	* sn		8871527						
ANR	8871686	Symbol	ptr_to -> d . o . space_id		8871527						
ANR	8871687	Symbol	* ptr_to -> d . o . space_id		8871527						
ANR	8871688	Symbol	ptr_to -> d . o		8871527						
ANR	8871689	Symbol	ptr_fr		8871527						
ANR	8871690	Symbol	* ptr_fr -> d . o . space_id		8871527						
ANR	8871691	Symbol	* ptr_fr -> d		8871527						
ANR	8871692	Symbol	* ptr_to		8871527						
ANR	8871693	Symbol	ptr_fr -> d . o . space_id		8871527						
ANR	8871694	Symbol	* * ptr_to		8871527						
ANR	8871695	Symbol	ptr_fr -> d . o		8871527						
ANR	8871696	Symbol	count_of		8871527						
ANR	8871697	Symbol	* ptr_to -> d		8871527						
ANR	8871698	Symbol	* ptr_to -> d . o		8871527						
ANR	8871699	Symbol	sn_to		8871527						
ANR	8871700	Symbol	sn_fr		8871527						
ANR	8871701	Symbol	ptr_to		8871527						
ANR	8871702	Symbol	ptr_to -> d		8871527						
ANR	8871703	Symbol	sn		8871527						
ANR	8871704	Symbol	* ptr_fr		8871527						
ANR	8871705	Symbol	* ptr_fr -> d . o		8871527						
ANR	8871706	Function	do_validate_object	574:0:19459:21152							
ANR	8871707	FunctionDef	"do_validate_object (const obj_header_t * ptr , const clump_t * cp , gc_state_t * gcst)"		8871706	0					
ANR	8871708	CompoundStatement		577:0:19577:21152	8871706	0					
ANR	8871709	IdentifierDeclStatement	const obj_header_t * pre = ptr - 1 ;	578:4:19583:19616	8871706	0	True				
ANR	8871710	IdentifierDecl	* pre = ptr - 1		8871706	0					
ANR	8871711	IdentifierDeclType	const obj_header_t *		8871706	0					
ANR	8871712	Identifier	pre		8871706	1					
ANR	8871713	AssignmentExpression	* pre = ptr - 1		8871706	2		=			
ANR	8871714	Identifier	pre		8871706	0					
ANR	8871715	AdditiveExpression	ptr - 1		8871706	1		-			
ANR	8871716	Identifier	ptr		8871706	0					
ANR	8871717	PrimaryExpression	1		8871706	1					
ANR	8871718	IdentifierDeclStatement	ulong size = pre_obj_contents_size ( pre ) ;	579:4:19622:19661	8871706	1	True				
ANR	8871719	IdentifierDecl	size = pre_obj_contents_size ( pre )		8871706	0					
ANR	8871720	IdentifierDeclType	ulong		8871706	0					
ANR	8871721	Identifier	size		8871706	1					
ANR	8871722	AssignmentExpression	size = pre_obj_contents_size ( pre )		8871706	2		=			
ANR	8871723	Identifier	size		8871706	0					
ANR	8871724	CallExpression	pre_obj_contents_size ( pre )		8871706	1					
ANR	8871725	Callee	pre_obj_contents_size		8871706	0					
ANR	8871726	Identifier	pre_obj_contents_size		8871706	0					
ANR	8871727	ArgumentList	pre		8871706	1					
ANR	8871728	Argument	pre		8871706	0					
ANR	8871729	Identifier	pre		8871706	0					
ANR	8871730	IdentifierDeclStatement	gs_memory_type_ptr_t otype = pre -> o_type ;	580:4:19667:19707	8871706	2	True				
ANR	8871731	IdentifierDecl	otype = pre -> o_type		8871706	0					
ANR	8871732	IdentifierDeclType	gs_memory_type_ptr_t		8871706	0					
ANR	8871733	Identifier	otype		8871706	1					
ANR	8871734	AssignmentExpression	otype = pre -> o_type		8871706	2		=			
ANR	8871735	Identifier	otype		8871706	0					
ANR	8871736	PtrMemberAccess	pre -> o_type		8871706	1					
ANR	8871737	Identifier	pre		8871706	0					
ANR	8871738	Identifier	o_type		8871706	1					
ANR	8871739	IdentifierDeclStatement	const char * oname ;	581:4:19713:19730	8871706	3	True				
ANR	8871740	IdentifierDecl	* oname		8871706	0					
ANR	8871741	IdentifierDeclType	const char *		8871706	0					
ANR	8871742	Identifier	oname		8871706	1					
ANR	8871743	IfStatement	if ( ! gs_debug_c ( '?' ) )		8871706	4					
ANR	8871744	Condition	! gs_debug_c ( '?' )	583:8:19741:19756	8871706	0	True				
ANR	8871745	UnaryOperationExpression	! gs_debug_c ( '?' )		8871706	0					
ANR	8871746	UnaryOperator	!		8871706	0					
ANR	8871747	CallExpression	gs_debug_c ( '?' )		8871706	1					
ANR	8871748	Callee	gs_debug_c		8871706	0					
ANR	8871749	Identifier	gs_debug_c		8871706	0					
ANR	8871750	ArgumentList	'?'		8871706	1					
ANR	8871751	Argument	'?'		8871706	0					
ANR	8871752	PrimaryExpression	'?'		8871706	0					
ANR	8871753	ReturnStatement	return 0 ;	584:8:19767:19775	8871706	1	True				
ANR	8871754	PrimaryExpression	0		8871706	0					
ANR	8871755	IfStatement	if ( cp == 0 && gcst != 0 )		8871706	5					
ANR	8871756	Condition	cp == 0 && gcst != 0	585:8:19802:19821	8871706	0	True				
ANR	8871757	AndExpression	cp == 0 && gcst != 0		8871706	0		&&			
ANR	8871758	EqualityExpression	cp == 0		8871706	0		==			
ANR	8871759	Identifier	cp		8871706	0					
ANR	8871760	PrimaryExpression	0		8871706	1					
ANR	8871761	EqualityExpression	gcst != 0		8871706	1		!=			
ANR	8871762	Identifier	gcst		8871706	0					
ANR	8871763	PrimaryExpression	0		8871706	1					
ANR	8871764	CompoundStatement		10:8:256:269	8871706	1					
ANR	8871765	IdentifierDeclStatement	gc_state_t st ;	586:8:19834:19847	8871706	0	True				
ANR	8871766	IdentifierDecl	st		8871706	0					
ANR	8871767	IdentifierDeclType	gc_state_t		8871706	0					
ANR	8871768	Identifier	st		8871706	1					
ANR	8871769	ExpressionStatement	st = * gcst	588:8:19858:19868	8871706	1	True				
ANR	8871770	AssignmentExpression	st = * gcst		8871706	0		=			
ANR	8871771	Identifier	st		8871706	0					
ANR	8871772	UnaryOperationExpression	* gcst		8871706	1					
ANR	8871773	UnaryOperator	*		8871706	0					
ANR	8871774	Identifier	gcst		8871706	1					
ANR	8871775	IfStatement	"if ( ! ( cp = gc_locate ( pre , & st ) ) )"		8871706	2					
ANR	8871776	Condition	"! ( cp = gc_locate ( pre , & st ) )"	589:12:19906:19932	8871706	0	True				
ANR	8871777	UnaryOperationExpression	"! ( cp = gc_locate ( pre , & st ) )"		8871706	0					
ANR	8871778	UnaryOperator	!		8871706	0					
ANR	8871779	AssignmentExpression	"cp = gc_locate ( pre , & st )"		8871706	1		=			
ANR	8871780	Identifier	cp		8871706	0					
ANR	8871781	CallExpression	"gc_locate ( pre , & st )"		8871706	1					
ANR	8871782	Callee	gc_locate		8871706	0					
ANR	8871783	Identifier	gc_locate		8871706	0					
ANR	8871784	ArgumentList	pre		8871706	1					
ANR	8871785	Argument	pre		8871706	0					
ANR	8871786	Identifier	pre		8871706	0					
ANR	8871787	Argument	& st		8871706	1					
ANR	8871788	UnaryOperationExpression	& st		8871706	0					
ANR	8871789	UnaryOperator	&		8871706	0					
ANR	8871790	Identifier	st		8871706	1					
ANR	8871791	CompoundStatement		13:41:357:357	8871706	1					
ANR	8871792	ExpressionStatement	"mlprintf1 ( gcst -> heap , ""Object 0x%lx not in any clump!\\n"" , ( ulong ) ptr )"	590:12:19949:20041	8871706	0	True				
ANR	8871793	CallExpression	"mlprintf1 ( gcst -> heap , ""Object 0x%lx not in any clump!\\n"" , ( ulong ) ptr )"		8871706	0					
ANR	8871794	Callee	mlprintf1		8871706	0					
ANR	8871795	Identifier	mlprintf1		8871706	0					
ANR	8871796	ArgumentList	gcst -> heap		8871706	1					
ANR	8871797	Argument	gcst -> heap		8871706	0					
ANR	8871798	PtrMemberAccess	gcst -> heap		8871706	0					
ANR	8871799	Identifier	gcst		8871706	0					
ANR	8871800	Identifier	heap		8871706	1					
ANR	8871801	Argument	"""Object 0x%lx not in any clump!\\n"""		8871706	1					
ANR	8871802	PrimaryExpression	"""Object 0x%lx not in any clump!\\n"""		8871706	0					
ANR	8871803	Argument	( ulong ) ptr		8871706	2					
ANR	8871804	CastExpression	( ulong ) ptr		8871706	0					
ANR	8871805	CastTarget	ulong		8871706	0					
ANR	8871806	Identifier	ptr		8871706	1					
ANR	8871807	ReturnStatement	return 1 ;	592:12:20055:20063	8871706	1	True				
ANR	8871808	PrimaryExpression	1		8871706	0					
ANR	8871809	IfStatement	if ( otype == & st_free )		8871706	6					
ANR	8871810	Condition	otype == & st_free	595:8:20107:20123	8871706	0	True				
ANR	8871811	EqualityExpression	otype == & st_free		8871706	0		==			
ANR	8871812	Identifier	otype		8871706	0					
ANR	8871813	UnaryOperationExpression	& st_free		8871706	1					
ANR	8871814	UnaryOperator	&		8871706	0					
ANR	8871815	Identifier	st_free		8871706	1					
ANR	8871816	CompoundStatement		19:27:548:548	8871706	1					
ANR	8871817	ExpressionStatement	"mlprintf3 ( gcst -> heap , ""Reference to free object 0x%lx(%lu), in clump 0x%lx!\\n"" , ( ulong ) ptr , ( ulong ) size , ( ulong ) cp )"	596:8:20136:20271	8871706	0	True				
ANR	8871818	CallExpression	"mlprintf3 ( gcst -> heap , ""Reference to free object 0x%lx(%lu), in clump 0x%lx!\\n"" , ( ulong ) ptr , ( ulong ) size , ( ulong ) cp )"		8871706	0					
ANR	8871819	Callee	mlprintf3		8871706	0					
ANR	8871820	Identifier	mlprintf3		8871706	0					
ANR	8871821	ArgumentList	gcst -> heap		8871706	1					
ANR	8871822	Argument	gcst -> heap		8871706	0					
ANR	8871823	PtrMemberAccess	gcst -> heap		8871706	0					
ANR	8871824	Identifier	gcst		8871706	0					
ANR	8871825	Identifier	heap		8871706	1					
ANR	8871826	Argument	"""Reference to free object 0x%lx(%lu), in clump 0x%lx!\\n"""		8871706	1					
ANR	8871827	PrimaryExpression	"""Reference to free object 0x%lx(%lu), in clump 0x%lx!\\n"""		8871706	0					
ANR	8871828	Argument	( ulong ) ptr		8871706	2					
ANR	8871829	CastExpression	( ulong ) ptr		8871706	0					
ANR	8871830	CastTarget	ulong		8871706	0					
ANR	8871831	Identifier	ptr		8871706	1					
ANR	8871832	Argument	( ulong ) size		8871706	3					
ANR	8871833	CastExpression	( ulong ) size		8871706	0					
ANR	8871834	CastTarget	ulong		8871706	0					
ANR	8871835	Identifier	size		8871706	1					
ANR	8871836	Argument	( ulong ) cp		8871706	4					
ANR	8871837	CastExpression	( ulong ) cp		8871706	0					
ANR	8871838	CastTarget	ulong		8871706	0					
ANR	8871839	Identifier	cp		8871706	1					
ANR	8871840	ReturnStatement	return 1 ;	598:8:20281:20289	8871706	1	True				
ANR	8871841	PrimaryExpression	1		8871706	0					
ANR	8871842	IfStatement	"if ( ( cp != 0 && ! object_size_valid ( pre , size , cp ) ) || otype -> ssize == 0 || ( oname = struct_type_name_string ( otype ) , * oname < 33 || * oname > 126 ) )"		8871706	7					
ANR	8871843	Condition	"( cp != 0 && ! object_size_valid ( pre , size , cp ) ) || otype -> ssize == 0 || ( oname = struct_type_name_string ( otype ) , * oname < 33 || * oname > 126 )"	600:8:20305:20469	8871706	0	True				
ANR	8871844	OrExpression	"( cp != 0 && ! object_size_valid ( pre , size , cp ) ) || otype -> ssize == 0 || ( oname = struct_type_name_string ( otype ) , * oname < 33 || * oname > 126 )"		8871706	0		||			
ANR	8871845	AndExpression	"cp != 0 && ! object_size_valid ( pre , size , cp )"		8871706	0		&&			
ANR	8871846	EqualityExpression	cp != 0		8871706	0		!=			
ANR	8871847	Identifier	cp		8871706	0					
ANR	8871848	PrimaryExpression	0		8871706	1					
ANR	8871849	UnaryOperationExpression	"! object_size_valid ( pre , size , cp )"		8871706	1					
ANR	8871850	UnaryOperator	!		8871706	0					
ANR	8871851	CallExpression	"object_size_valid ( pre , size , cp )"		8871706	1					
ANR	8871852	Callee	object_size_valid		8871706	0					
ANR	8871853	Identifier	object_size_valid		8871706	0					
ANR	8871854	ArgumentList	pre		8871706	1					
ANR	8871855	Argument	pre		8871706	0					
ANR	8871856	Identifier	pre		8871706	0					
ANR	8871857	Argument	size		8871706	1					
ANR	8871858	Identifier	size		8871706	0					
ANR	8871859	Argument	cp		8871706	2					
ANR	8871860	Identifier	cp		8871706	0					
ANR	8871861	OrExpression	"otype -> ssize == 0 || ( oname = struct_type_name_string ( otype ) , * oname < 33 || * oname > 126 )"		8871706	1		||			
ANR	8871862	EqualityExpression	otype -> ssize == 0		8871706	0		==			
ANR	8871863	PtrMemberAccess	otype -> ssize		8871706	0					
ANR	8871864	Identifier	otype		8871706	0					
ANR	8871865	Identifier	ssize		8871706	1					
ANR	8871866	PrimaryExpression	0		8871706	1					
ANR	8871867	Expression	"oname = struct_type_name_string ( otype ) , * oname < 33 || * oname > 126"		8871706	1					
ANR	8871868	AssignmentExpression	oname = struct_type_name_string ( otype )		8871706	0		=			
ANR	8871869	Identifier	oname		8871706	0					
ANR	8871870	CallExpression	struct_type_name_string ( otype )		8871706	1					
ANR	8871871	Callee	struct_type_name_string		8871706	0					
ANR	8871872	Identifier	struct_type_name_string		8871706	0					
ANR	8871873	ArgumentList	otype		8871706	1					
ANR	8871874	Argument	otype		8871706	0					
ANR	8871875	Identifier	otype		8871706	0					
ANR	8871876	OrExpression	* oname < 33 || * oname > 126		8871706	1		||			
ANR	8871877	RelationalExpression	* oname < 33		8871706	0		<			
ANR	8871878	UnaryOperationExpression	* oname		8871706	0					
ANR	8871879	UnaryOperator	*		8871706	0					
ANR	8871880	Identifier	oname		8871706	1					
ANR	8871881	PrimaryExpression	33		8871706	1					
ANR	8871882	RelationalExpression	* oname > 126		8871706	1		>			
ANR	8871883	UnaryOperationExpression	* oname		8871706	0					
ANR	8871884	UnaryOperator	*		8871706	0					
ANR	8871885	Identifier	oname		8871706	1					
ANR	8871886	PrimaryExpression	126		8871706	1					
ANR	8871887	CompoundStatement		28:10:903:903	8871706	1					
ANR	8871888	ExpressionStatement	"mlprintf2 ( gcst -> heap , ""\\n Bad object 0x%lx(%lu),\\n"" , ( ulong ) ptr , ( ulong ) size )"	605:8:20491:20588	8871706	0	True				
ANR	8871889	CallExpression	"mlprintf2 ( gcst -> heap , ""\\n Bad object 0x%lx(%lu),\\n"" , ( ulong ) ptr , ( ulong ) size )"		8871706	0					
ANR	8871890	Callee	mlprintf2		8871706	0					
ANR	8871891	Identifier	mlprintf2		8871706	0					
ANR	8871892	ArgumentList	gcst -> heap		8871706	1					
ANR	8871893	Argument	gcst -> heap		8871706	0					
ANR	8871894	PtrMemberAccess	gcst -> heap		8871706	0					
ANR	8871895	Identifier	gcst		8871706	0					
ANR	8871896	Identifier	heap		8871706	1					
ANR	8871897	Argument	"""\\n Bad object 0x%lx(%lu),\\n"""		8871706	1					
ANR	8871898	PrimaryExpression	"""\\n Bad object 0x%lx(%lu),\\n"""		8871706	0					
ANR	8871899	Argument	( ulong ) ptr		8871706	2					
ANR	8871900	CastExpression	( ulong ) ptr		8871706	0					
ANR	8871901	CastTarget	ulong		8871706	0					
ANR	8871902	Identifier	ptr		8871706	1					
ANR	8871903	Argument	( ulong ) size		8871706	3					
ANR	8871904	CastExpression	( ulong ) size		8871706	0					
ANR	8871905	CastTarget	ulong		8871706	0					
ANR	8871906	Identifier	size		8871706	1					
ANR	8871907	ExpressionStatement	"dmprintf2 ( gcst -> heap , "" ssize = %u, in clump 0x%lx!\\n"" , otype -> ssize , ( ulong ) cp )"	607:8:20598:20697	8871706	1	True				
ANR	8871908	CallExpression	"dmprintf2 ( gcst -> heap , "" ssize = %u, in clump 0x%lx!\\n"" , otype -> ssize , ( ulong ) cp )"		8871706	0					
ANR	8871909	Callee	dmprintf2		8871706	0					
ANR	8871910	Identifier	dmprintf2		8871706	0					
ANR	8871911	ArgumentList	gcst -> heap		8871706	1					
ANR	8871912	Argument	gcst -> heap		8871706	0					
ANR	8871913	PtrMemberAccess	gcst -> heap		8871706	0					
ANR	8871914	Identifier	gcst		8871706	0					
ANR	8871915	Identifier	heap		8871706	1					
ANR	8871916	Argument	""" ssize = %u, in clump 0x%lx!\\n"""		8871706	1					
ANR	8871917	PrimaryExpression	""" ssize = %u, in clump 0x%lx!\\n"""		8871706	0					
ANR	8871918	Argument	otype -> ssize		8871706	2					
ANR	8871919	PtrMemberAccess	otype -> ssize		8871706	0					
ANR	8871920	Identifier	otype		8871706	0					
ANR	8871921	Identifier	ssize		8871706	1					
ANR	8871922	Argument	( ulong ) cp		8871706	3					
ANR	8871923	CastExpression	( ulong ) cp		8871706	0					
ANR	8871924	CastTarget	ulong		8871706	0					
ANR	8871925	Identifier	cp		8871706	1					
ANR	8871926	ReturnStatement	return 1 ;	609:8:20707:20715	8871706	2	True				
ANR	8871927	PrimaryExpression	1		8871706	0					
ANR	8871928	IfStatement	if ( size % otype -> ssize != 0 )		8871706	8					
ANR	8871929	Condition	size % otype -> ssize != 0	611:8:20731:20754	8871706	0	True				
ANR	8871930	EqualityExpression	size % otype -> ssize != 0		8871706	0		!=			
ANR	8871931	MultiplicativeExpression	size % otype -> ssize		8871706	0		%			
ANR	8871932	Identifier	size		8871706	0					
ANR	8871933	PtrMemberAccess	otype -> ssize		8871706	1					
ANR	8871934	Identifier	otype		8871706	0					
ANR	8871935	Identifier	ssize		8871706	1					
ANR	8871936	PrimaryExpression	0		8871706	1					
ANR	8871937	CompoundStatement		35:34:1179:1179	8871706	1					
ANR	8871938	ExpressionStatement	"mlprintf3 ( gcst -> heap , ""\\n Potentially bad object 0x%lx(%lu), in clump 0x%lx!\\n"" , ( ulong ) ptr , ( ulong ) size , ( ulong ) cp )"	612:8:20767:20904	8871706	0	True				
ANR	8871939	CallExpression	"mlprintf3 ( gcst -> heap , ""\\n Potentially bad object 0x%lx(%lu), in clump 0x%lx!\\n"" , ( ulong ) ptr , ( ulong ) size , ( ulong ) cp )"		8871706	0					
ANR	8871940	Callee	mlprintf3		8871706	0					
ANR	8871941	Identifier	mlprintf3		8871706	0					
ANR	8871942	ArgumentList	gcst -> heap		8871706	1					
ANR	8871943	Argument	gcst -> heap		8871706	0					
ANR	8871944	PtrMemberAccess	gcst -> heap		8871706	0					
ANR	8871945	Identifier	gcst		8871706	0					
ANR	8871946	Identifier	heap		8871706	1					
ANR	8871947	Argument	"""\\n Potentially bad object 0x%lx(%lu), in clump 0x%lx!\\n"""		8871706	1					
ANR	8871948	PrimaryExpression	"""\\n Potentially bad object 0x%lx(%lu), in clump 0x%lx!\\n"""		8871706	0					
ANR	8871949	Argument	( ulong ) ptr		8871706	2					
ANR	8871950	CastExpression	( ulong ) ptr		8871706	0					
ANR	8871951	CastTarget	ulong		8871706	0					
ANR	8871952	Identifier	ptr		8871706	1					
ANR	8871953	Argument	( ulong ) size		8871706	3					
ANR	8871954	CastExpression	( ulong ) size		8871706	0					
ANR	8871955	CastTarget	ulong		8871706	0					
ANR	8871956	Identifier	size		8871706	1					
ANR	8871957	Argument	( ulong ) cp		8871706	4					
ANR	8871958	CastExpression	( ulong ) cp		8871706	0					
ANR	8871959	CastTarget	ulong		8871706	0					
ANR	8871960	Identifier	cp		8871706	1					
ANR	8871961	ExpressionStatement	"dmprintf3 ( gcst -> heap , "" structure name = %s, size = %u, ssize = %u\\n"" , oname , size , otype -> ssize )"	614:8:20914:21029	8871706	1	True				
ANR	8871962	CallExpression	"dmprintf3 ( gcst -> heap , "" structure name = %s, size = %u, ssize = %u\\n"" , oname , size , otype -> ssize )"		8871706	0					
ANR	8871963	Callee	dmprintf3		8871706	0					
ANR	8871964	Identifier	dmprintf3		8871706	0					
ANR	8871965	ArgumentList	gcst -> heap		8871706	1					
ANR	8871966	Argument	gcst -> heap		8871706	0					
ANR	8871967	PtrMemberAccess	gcst -> heap		8871706	0					
ANR	8871968	Identifier	gcst		8871706	0					
ANR	8871969	Identifier	heap		8871706	1					
ANR	8871970	Argument	""" structure name = %s, size = %u, ssize = %u\\n"""		8871706	1					
ANR	8871971	PrimaryExpression	""" structure name = %s, size = %u, ssize = %u\\n"""		8871706	0					
ANR	8871972	Argument	oname		8871706	2					
ANR	8871973	Identifier	oname		8871706	0					
ANR	8871974	Argument	size		8871706	3					
ANR	8871975	Identifier	size		8871706	0					
ANR	8871976	Argument	otype -> ssize		8871706	4					
ANR	8871977	PtrMemberAccess	otype -> ssize		8871706	0					
ANR	8871978	Identifier	otype		8871706	0					
ANR	8871979	Identifier	ssize		8871706	1					
ANR	8871980	ExpressionStatement	"dmprintf ( gcst -> heap , "" This can happen (and is benign) if a device has been subclassed\\n"" )"	616:8:21039:21129	8871706	2	True				
ANR	8871981	CallExpression	"dmprintf ( gcst -> heap , "" This can happen (and is benign) if a device has been subclassed\\n"" )"		8871706	0					
ANR	8871982	Callee	dmprintf		8871706	0					
ANR	8871983	Identifier	dmprintf		8871706	0					
ANR	8871984	ArgumentList	gcst -> heap		8871706	1					
ANR	8871985	Argument	gcst -> heap		8871706	0					
ANR	8871986	PtrMemberAccess	gcst -> heap		8871706	0					
ANR	8871987	Identifier	gcst		8871706	0					
ANR	8871988	Identifier	heap		8871706	1					
ANR	8871989	Argument	""" This can happen (and is benign) if a device has been subclassed\\n"""		8871706	1					
ANR	8871990	PrimaryExpression	""" This can happen (and is benign) if a device has been subclassed\\n"""		8871706	0					
ANR	8871991	ReturnStatement	return 0 ;	619:4:21142:21150	8871706	9	True				
ANR	8871992	PrimaryExpression	0		8871706	0					
ANR	8871993	ReturnType	static int		8871706	1					
ANR	8871994	Identifier	do_validate_object		8871706	2					
ANR	8871995	ParameterList	"const obj_header_t * ptr , const clump_t * cp , gc_state_t * gcst"		8871706	3					
ANR	8871996	Parameter	const obj_header_t * ptr	575:19:19489:19512	8871706	0	True				
ANR	8871997	ParameterType	const obj_header_t *		8871706	0					
ANR	8871998	Identifier	ptr		8871706	1					
ANR	8871999	Parameter	const clump_t * cp	575:45:19515:19532	8871706	1	True				
ANR	8872000	ParameterType	const clump_t *		8871706	0					
ANR	8872001	Identifier	cp		8871706	1					
ANR	8872002	Parameter	gc_state_t * gcst	576:23:19558:19574	8871706	2	True				
ANR	8872003	ParameterType	gc_state_t *		8871706	0					
ANR	8872004	Identifier	gcst		8871706	1					
ANR	8872005	CFGEntryNode	ENTRY		8871706		True				
ANR	8872006	CFGExitNode	EXIT		8871706		True				
ANR	8872007	Symbol	object_size_valid		8871706						
ANR	8872008	Symbol	* otype		8871706						
ANR	8872009	Symbol	st		8871706						
ANR	8872010	Symbol	pre		8871706						
ANR	8872011	Symbol	struct_type_name_string		8871706						
ANR	8872012	Symbol	& st_free		8871706						
ANR	8872013	Symbol	& st		8871706						
ANR	8872014	Symbol	cp		8871706						
ANR	8872015	Symbol	gcst		8871706						
ANR	8872016	Symbol	* pre		8871706						
ANR	8872017	Symbol	* gcst		8871706						
ANR	8872018	Symbol	otype -> ssize		8871706						
ANR	8872019	Symbol	ptr		8871706						
ANR	8872020	Symbol	gcst -> heap		8871706						
ANR	8872021	Symbol	size		8871706						
ANR	8872022	Symbol	* oname		8871706						
ANR	8872023	Symbol	oname		8871706						
ANR	8872024	Symbol	pre -> o_type		8871706						
ANR	8872025	Symbol	gc_locate		8871706						
ANR	8872026	Symbol	gs_debug_c		8871706						
ANR	8872027	Symbol	otype		8871706						
ANR	8872028	Symbol	pre_obj_contents_size		8871706						
ANR	8872029	Function	ialloc_validate_object	622:0:21155:21346							
ANR	8872030	FunctionDef	"ialloc_validate_object (const obj_header_t * ptr , const clump_t * cp , gc_state_t * gcst)"		8872029	0					
ANR	8872031	CompoundStatement		625:0:21271:21346	8872029	0					
ANR	8872032	IfStatement	"if ( do_validate_object ( ptr , cp , gcst ) )"		8872029	0					
ANR	8872033	Condition	"do_validate_object ( ptr , cp , gcst )"	626:8:21281:21313	8872029	0	True				
ANR	8872034	CallExpression	"do_validate_object ( ptr , cp , gcst )"		8872029	0					
ANR	8872035	Callee	do_validate_object		8872029	0					
ANR	8872036	Identifier	do_validate_object		8872029	0					
ANR	8872037	ArgumentList	ptr		8872029	1					
ANR	8872038	Argument	ptr		8872029	0					
ANR	8872039	Identifier	ptr		8872029	0					
ANR	8872040	Argument	cp		8872029	1					
ANR	8872041	Identifier	cp		8872029	0					
ANR	8872042	Argument	gcst		8872029	2					
ANR	8872043	Identifier	gcst		8872029	0					
ANR	8872044	ExpressionStatement	gs_abort ( gcst -> heap )	627:8:21324:21344	8872029	1	True				
ANR	8872045	CallExpression	gs_abort ( gcst -> heap )		8872029	0					
ANR	8872046	Callee	gs_abort		8872029	0					
ANR	8872047	Identifier	gs_abort		8872029	0					
ANR	8872048	ArgumentList	gcst -> heap		8872029	1					
ANR	8872049	Argument	gcst -> heap		8872029	0					
ANR	8872050	PtrMemberAccess	gcst -> heap		8872029	0					
ANR	8872051	Identifier	gcst		8872029	0					
ANR	8872052	Identifier	heap		8872029	1					
ANR	8872053	ReturnType	void		8872029	1					
ANR	8872054	Identifier	ialloc_validate_object		8872029	2					
ANR	8872055	ParameterList	"const obj_header_t * ptr , const clump_t * cp , gc_state_t * gcst"		8872029	3					
ANR	8872056	Parameter	const obj_header_t * ptr	623:23:21183:21206	8872029	0	True				
ANR	8872057	ParameterType	const obj_header_t *		8872029	0					
ANR	8872058	Identifier	ptr		8872029	1					
ANR	8872059	Parameter	const clump_t * cp	623:49:21209:21226	8872029	1	True				
ANR	8872060	ParameterType	const clump_t *		8872029	0					
ANR	8872061	Identifier	cp		8872029	1					
ANR	8872062	Parameter	gc_state_t * gcst	624:23:21252:21268	8872029	2	True				
ANR	8872063	ParameterType	gc_state_t *		8872029	0					
ANR	8872064	Identifier	gcst		8872029	1					
ANR	8872065	CFGEntryNode	ENTRY		8872029		True				
ANR	8872066	CFGExitNode	EXIT		8872029		True				
ANR	8872067	Symbol	gcst -> heap		8872029						
ANR	8872068	Symbol	do_validate_object		8872029						
ANR	8872069	Symbol	cp		8872029						
ANR	8872070	Symbol	gcst		8872029						
ANR	8872071	Symbol	* gcst		8872029						
ANR	8872072	Symbol	ptr		8872029						
ANR	8872073	Function	ialloc_validate_spaces	631:0:21368:21429							
ANR	8872074	FunctionDef	ialloc_validate_spaces (const gs_dual_memory_t * dmem)		8872073	0					
ANR	8872075	CompoundStatement		633:0:21427:21429	8872073	0					
ANR	8872076	ReturnType	void		8872073	1					
ANR	8872077	Identifier	ialloc_validate_spaces		8872073	2					
ANR	8872078	ParameterList	const gs_dual_memory_t * dmem		8872073	3					
ANR	8872079	Parameter	const gs_dual_memory_t * dmem	632:23:21396:21424	8872073	0	True				
ANR	8872080	ParameterType	const gs_dual_memory_t *		8872073	0					
ANR	8872081	Identifier	dmem		8872073	1					
ANR	8872082	CFGEntryNode	ENTRY		8872073		True				
ANR	8872083	CFGExitNode	EXIT		8872073		True				
ANR	8872084	Symbol	dmem		8872073						
ANR	8872085	Function	ialloc_validate_memory	636:0:21432:21510							
ANR	8872086	FunctionDef	"ialloc_validate_memory (const gs_ref_memory_t * mem , gc_state_t * gcst)"		8872085	0					
ANR	8872087	CompoundStatement		638:0:21508:21510	8872085	0					
ANR	8872088	ReturnType	void		8872085	1					
ANR	8872089	Identifier	ialloc_validate_memory		8872085	2					
ANR	8872090	ParameterList	"const gs_ref_memory_t * mem , gc_state_t * gcst"		8872085	3					
ANR	8872091	Parameter	const gs_ref_memory_t * mem	637:23:21460:21486	8872085	0	True				
ANR	8872092	ParameterType	const gs_ref_memory_t *		8872085	0					
ANR	8872093	Identifier	mem		8872085	1					
ANR	8872094	Parameter	gc_state_t * gcst	637:52:21489:21505	8872085	1	True				
ANR	8872095	ParameterType	gc_state_t *		8872085	0					
ANR	8872096	Identifier	gcst		8872085	1					
ANR	8872097	CFGEntryNode	ENTRY		8872085		True				
ANR	8872098	CFGExitNode	EXIT		8872085		True				
ANR	8872099	Symbol	mem		8872085						
ANR	8872100	Symbol	gcst		8872085						
ANR	8872101	Function	ialloc_validate_clump	641:0:21513:21581							
ANR	8872102	FunctionDef	"ialloc_validate_clump (const clump_t * cp , gc_state_t * gcst)"		8872101	0					
ANR	8872103	CompoundStatement		643:0:21579:21581	8872101	0					
ANR	8872104	ReturnType	void		8872101	1					
ANR	8872105	Identifier	ialloc_validate_clump		8872101	2					
ANR	8872106	ParameterList	"const clump_t * cp , gc_state_t * gcst"		8872101	3					
ANR	8872107	Parameter	const clump_t * cp	642:22:21540:21557	8872101	0	True				
ANR	8872108	ParameterType	const clump_t *		8872101	0					
ANR	8872109	Identifier	cp		8872101	1					
ANR	8872110	Parameter	gc_state_t * gcst	642:42:21560:21576	8872101	1	True				
ANR	8872111	ParameterType	gc_state_t *		8872101	0					
ANR	8872112	Identifier	gcst		8872101	1					
ANR	8872113	CFGEntryNode	ENTRY		8872101		True				
ANR	8872114	CFGExitNode	EXIT		8872101		True				
ANR	8872115	Symbol	cp		8872101						
ANR	8872116	Symbol	gcst		8872101						
ANR	8872117	Function	ialloc_validate_object	646:0:21584:21702							
ANR	8872118	FunctionDef	"ialloc_validate_object (const obj_header_t * ptr , const clump_t * cp , gc_state_t * gcst)"		8872117	0					
ANR	8872119	CompoundStatement		649:0:21700:21702	8872117	0					
ANR	8872120	ReturnType	void		8872117	1					
ANR	8872121	Identifier	ialloc_validate_object		8872117	2					
ANR	8872122	ParameterList	"const obj_header_t * ptr , const clump_t * cp , gc_state_t * gcst"		8872117	3					
ANR	8872123	Parameter	const obj_header_t * ptr	647:23:21612:21635	8872117	0	True				
ANR	8872124	ParameterType	const obj_header_t *		8872117	0					
ANR	8872125	Identifier	ptr		8872117	1					
ANR	8872126	Parameter	const clump_t * cp	647:49:21638:21655	8872117	1	True				
ANR	8872127	ParameterType	const clump_t *		8872117	0					
ANR	8872128	Identifier	cp		8872117	1					
ANR	8872129	Parameter	gc_state_t * gcst	648:23:21681:21697	8872117	2	True				
ANR	8872130	ParameterType	gc_state_t *		8872117	0					
ANR	8872131	Identifier	gcst		8872117	1					
ANR	8872132	CFGEntryNode	ENTRY		8872117		True				
ANR	8872133	CFGExitNode	EXIT		8872117		True				
ANR	8872134	Symbol	cp		8872117						
ANR	8872135	Symbol	gcst		8872117						
ANR	8872136	Symbol	ptr		8872117						
