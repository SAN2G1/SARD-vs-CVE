command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8093428	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pcl_pcstatus.c								
ANR	8093429	DeclStmt									
ANR	8093430	Decl							int	"int ( ushort * , int , ushort )"	status_add_symbol_id
ANR	8093431	Function	pcl_status_read	44:0:1204:1709							
ANR	8093432	FunctionDef	"pcl_status_read (byte * data , uint max_data , pcl_state_t * pcs)"		8093431	0					
ANR	8093433	CompoundStatement		46:0:1272:1709	8093431	0					
ANR	8093434	IdentifierDeclStatement	"uint count = min ( max_data , pcs -> status . write_pos - pcs -> status . read_pos ) ;"	47:4:1278:1371	8093431	0	True				
ANR	8093435	IdentifierDecl	"count = min ( max_data , pcs -> status . write_pos - pcs -> status . read_pos )"		8093431	0					
ANR	8093436	IdentifierDeclType	uint		8093431	0					
ANR	8093437	Identifier	count		8093431	1					
ANR	8093438	AssignmentExpression	"count = min ( max_data , pcs -> status . write_pos - pcs -> status . read_pos )"		8093431	2		=			
ANR	8093439	Identifier	count		8093431	0					
ANR	8093440	CallExpression	"min ( max_data , pcs -> status . write_pos - pcs -> status . read_pos )"		8093431	1					
ANR	8093441	Callee	min		8093431	0					
ANR	8093442	Identifier	min		8093431	0					
ANR	8093443	ArgumentList	max_data		8093431	1					
ANR	8093444	Argument	max_data		8093431	0					
ANR	8093445	Identifier	max_data		8093431	0					
ANR	8093446	Argument	pcs -> status . write_pos - pcs -> status . read_pos		8093431	1					
ANR	8093447	AdditiveExpression	pcs -> status . write_pos - pcs -> status . read_pos		8093431	0		-			
ANR	8093448	MemberAccess	pcs -> status . write_pos		8093431	0					
ANR	8093449	PtrMemberAccess	pcs -> status		8093431	0					
ANR	8093450	Identifier	pcs		8093431	0					
ANR	8093451	Identifier	status		8093431	1					
ANR	8093452	Identifier	write_pos		8093431	1					
ANR	8093453	MemberAccess	pcs -> status . read_pos		8093431	1					
ANR	8093454	PtrMemberAccess	pcs -> status		8093431	0					
ANR	8093455	Identifier	pcs		8093431	0					
ANR	8093456	Identifier	status		8093431	1					
ANR	8093457	Identifier	read_pos		8093431	1					
ANR	8093458	IfStatement	if ( count )		8093431	1					
ANR	8093459	Condition	count	50:8:1382:1386	8093431	0	True				
ANR	8093460	Identifier	count		8093431	0					
ANR	8093461	ExpressionStatement	"memcpy ( data , pcs -> status . buffer + pcs -> status . read_pos , count )"	51:8:1397:1459	8093431	1	True				
ANR	8093462	CallExpression	"memcpy ( data , pcs -> status . buffer + pcs -> status . read_pos , count )"		8093431	0					
ANR	8093463	Callee	memcpy		8093431	0					
ANR	8093464	Identifier	memcpy		8093431	0					
ANR	8093465	ArgumentList	data		8093431	1					
ANR	8093466	Argument	data		8093431	0					
ANR	8093467	Identifier	data		8093431	0					
ANR	8093468	Argument	pcs -> status . buffer + pcs -> status . read_pos		8093431	1					
ANR	8093469	AdditiveExpression	pcs -> status . buffer + pcs -> status . read_pos		8093431	0		+			
ANR	8093470	MemberAccess	pcs -> status . buffer		8093431	0					
ANR	8093471	PtrMemberAccess	pcs -> status		8093431	0					
ANR	8093472	Identifier	pcs		8093431	0					
ANR	8093473	Identifier	status		8093431	1					
ANR	8093474	Identifier	buffer		8093431	1					
ANR	8093475	MemberAccess	pcs -> status . read_pos		8093431	1					
ANR	8093476	PtrMemberAccess	pcs -> status		8093431	0					
ANR	8093477	Identifier	pcs		8093431	0					
ANR	8093478	Identifier	status		8093431	1					
ANR	8093479	Identifier	read_pos		8093431	1					
ANR	8093480	Argument	count		8093431	2					
ANR	8093481	Identifier	count		8093431	0					
ANR	8093482	ExpressionStatement	pcs -> status . read_pos += count	52:4:1465:1494	8093431	2	True				
ANR	8093483	AssignmentExpression	pcs -> status . read_pos += count		8093431	0		+=			
ANR	8093484	MemberAccess	pcs -> status . read_pos		8093431	0					
ANR	8093485	PtrMemberAccess	pcs -> status		8093431	0					
ANR	8093486	Identifier	pcs		8093431	0					
ANR	8093487	Identifier	status		8093431	1					
ANR	8093488	Identifier	read_pos		8093431	1					
ANR	8093489	Identifier	count		8093431	1					
ANR	8093490	IfStatement	if ( pcs -> status . read_pos == pcs -> status . write_pos )		8093431	3					
ANR	8093491	Condition	pcs -> status . read_pos == pcs -> status . write_pos	53:8:1504:1548	8093431	0	True				
ANR	8093492	EqualityExpression	pcs -> status . read_pos == pcs -> status . write_pos		8093431	0		==			
ANR	8093493	MemberAccess	pcs -> status . read_pos		8093431	0					
ANR	8093494	PtrMemberAccess	pcs -> status		8093431	0					
ANR	8093495	Identifier	pcs		8093431	0					
ANR	8093496	Identifier	status		8093431	1					
ANR	8093497	Identifier	read_pos		8093431	1					
ANR	8093498	MemberAccess	pcs -> status . write_pos		8093431	1					
ANR	8093499	PtrMemberAccess	pcs -> status		8093431	0					
ANR	8093500	Identifier	pcs		8093431	0					
ANR	8093501	Identifier	status		8093431	1					
ANR	8093502	Identifier	write_pos		8093431	1					
ANR	8093503	CompoundStatement		8:55:278:278	8093431	1					
ANR	8093504	ExpressionStatement	"gs_free_object ( pcs -> memory , pcs -> status . buffer , ""status buffer"" )"	54:8:1561:1625	8093431	0	True				
ANR	8093505	CallExpression	"gs_free_object ( pcs -> memory , pcs -> status . buffer , ""status buffer"" )"		8093431	0					
ANR	8093506	Callee	gs_free_object		8093431	0					
ANR	8093507	Identifier	gs_free_object		8093431	0					
ANR	8093508	ArgumentList	pcs -> memory		8093431	1					
ANR	8093509	Argument	pcs -> memory		8093431	0					
ANR	8093510	PtrMemberAccess	pcs -> memory		8093431	0					
ANR	8093511	Identifier	pcs		8093431	0					
ANR	8093512	Identifier	memory		8093431	1					
ANR	8093513	Argument	pcs -> status . buffer		8093431	1					
ANR	8093514	MemberAccess	pcs -> status . buffer		8093431	0					
ANR	8093515	PtrMemberAccess	pcs -> status		8093431	0					
ANR	8093516	Identifier	pcs		8093431	0					
ANR	8093517	Identifier	status		8093431	1					
ANR	8093518	Identifier	buffer		8093431	1					
ANR	8093519	Argument	"""status buffer"""		8093431	2					
ANR	8093520	PrimaryExpression	"""status buffer"""		8093431	0					
ANR	8093521	ExpressionStatement	pcs -> status . write_pos = pcs -> status . read_pos = 0	55:8:1635:1683	8093431	1	True				
ANR	8093522	AssignmentExpression	pcs -> status . write_pos = pcs -> status . read_pos = 0		8093431	0		=			
ANR	8093523	MemberAccess	pcs -> status . write_pos		8093431	0					
ANR	8093524	PtrMemberAccess	pcs -> status		8093431	0					
ANR	8093525	Identifier	pcs		8093431	0					
ANR	8093526	Identifier	status		8093431	1					
ANR	8093527	Identifier	write_pos		8093431	1					
ANR	8093528	AssignmentExpression	pcs -> status . read_pos = 0		8093431	1		=			
ANR	8093529	MemberAccess	pcs -> status . read_pos		8093431	0					
ANR	8093530	PtrMemberAccess	pcs -> status		8093431	0					
ANR	8093531	Identifier	pcs		8093431	0					
ANR	8093532	Identifier	status		8093431	1					
ANR	8093533	Identifier	read_pos		8093431	1					
ANR	8093534	PrimaryExpression	0		8093431	1					
ANR	8093535	ReturnStatement	return count ;	57:4:1695:1707	8093431	4	True				
ANR	8093536	Identifier	count		8093431	0					
ANR	8093537	ReturnType	uint		8093431	1					
ANR	8093538	Identifier	pcl_status_read		8093431	2					
ANR	8093539	ParameterList	"byte * data , uint max_data , pcl_state_t * pcs"		8093431	3					
ANR	8093540	Parameter	byte * data	45:16:1225:1235	8093431	0	True				
ANR	8093541	ParameterType	byte *		8093431	0					
ANR	8093542	Identifier	data		8093431	1					
ANR	8093543	Parameter	uint max_data	45:29:1238:1250	8093431	1	True				
ANR	8093544	ParameterType	uint		8093431	0					
ANR	8093545	Identifier	max_data		8093431	1					
ANR	8093546	Parameter	pcl_state_t * pcs	45:44:1253:1269	8093431	2	True				
ANR	8093547	ParameterType	pcl_state_t *		8093431	0					
ANR	8093548	Identifier	pcs		8093431	1					
ANR	8093549	CFGEntryNode	ENTRY		8093431		True				
ANR	8093550	CFGExitNode	EXIT		8093431		True				
ANR	8093551	Symbol	pcs		8093431						
ANR	8093552	Symbol	min		8093431						
ANR	8093553	Symbol	data		8093431						
ANR	8093554	Symbol	pcs -> status		8093431						
ANR	8093555	Symbol	pcs -> status . write_pos		8093431						
ANR	8093556	Symbol	count		8093431						
ANR	8093557	Symbol	* pcs		8093431						
ANR	8093558	Symbol	pcs -> status . buffer		8093431						
ANR	8093559	Symbol	pcs -> memory		8093431						
ANR	8093560	Symbol	pcs -> status . read_pos		8093431						
ANR	8093561	Symbol	max_data		8093431						
ANR	8093562	Function	stputs	61:0:1746:1881							
ANR	8093563	FunctionDef	"stputs (stream * s , const char * str)"		8093562	0					
ANR	8093564	CompoundStatement		63:0:1794:1881	8093562	0					
ANR	8093565	IdentifierDeclStatement	uint ignore_count ;	64:4:1800:1817	8093562	0	True				
ANR	8093566	IdentifierDecl	ignore_count		8093562	0					
ANR	8093567	IdentifierDeclType	uint		8093562	0					
ANR	8093568	Identifier	ignore_count		8093562	1					
ANR	8093569	ExpressionStatement	"sputs ( s , ( const byte * ) str , strlen ( str ) , & ignore_count )"	66:4:1824:1879	8093562	1	True				
ANR	8093570	CallExpression	"sputs ( s , ( const byte * ) str , strlen ( str ) , & ignore_count )"		8093562	0					
ANR	8093571	Callee	sputs		8093562	0					
ANR	8093572	Identifier	sputs		8093562	0					
ANR	8093573	ArgumentList	s		8093562	1					
ANR	8093574	Argument	s		8093562	0					
ANR	8093575	Identifier	s		8093562	0					
ANR	8093576	Argument	( const byte * ) str		8093562	1					
ANR	8093577	CastExpression	( const byte * ) str		8093562	0					
ANR	8093578	CastTarget	const byte *		8093562	0					
ANR	8093579	Identifier	str		8093562	1					
ANR	8093580	Argument	strlen ( str )		8093562	2					
ANR	8093581	CallExpression	strlen ( str )		8093562	0					
ANR	8093582	Callee	strlen		8093562	0					
ANR	8093583	Identifier	strlen		8093562	0					
ANR	8093584	ArgumentList	str		8093562	1					
ANR	8093585	Argument	str		8093562	0					
ANR	8093586	Identifier	str		8093562	0					
ANR	8093587	Argument	& ignore_count		8093562	3					
ANR	8093588	UnaryOperationExpression	& ignore_count		8093562	0					
ANR	8093589	UnaryOperator	&		8093562	0					
ANR	8093590	Identifier	ignore_count		8093562	1					
ANR	8093591	ReturnType	static void		8093562	1					
ANR	8093592	Identifier	stputs		8093562	2					
ANR	8093593	ParameterList	"stream * s , const char * str"		8093562	3					
ANR	8093594	Parameter	stream * s	62:7:1765:1774	8093562	0	True				
ANR	8093595	ParameterType	stream *		8093562	0					
ANR	8093596	Identifier	s		8093562	1					
ANR	8093597	Parameter	const char * str	62:19:1777:1791	8093562	1	True				
ANR	8093598	ParameterType	const char *		8093562	0					
ANR	8093599	Identifier	str		8093562	1					
ANR	8093600	CFGEntryNode	ENTRY		8093562		True				
ANR	8093601	CFGExitNode	EXIT		8093562		True				
ANR	8093602	Symbol	str		8093562						
ANR	8093603	Symbol	strlen		8093562						
ANR	8093604	Symbol	s		8093562						
ANR	8093605	Symbol	ignore_count		8093562						
ANR	8093606	Symbol	& ignore_count		8093562						
ANR	8093607	Function	stprintf	71:0:1960:2204							
ANR	8093608	FunctionDef	"stprintf (stream * s , const char * fmt)"		8093607	0					
ANR	8093609	CompoundStatement		73:0:2015:2204	8093607	0					
ANR	8093610	IdentifierDeclStatement	uint count ;	74:4:2021:2031	8093607	0	True				
ANR	8093611	IdentifierDecl	count		8093607	0					
ANR	8093612	IdentifierDeclType	uint		8093607	0					
ANR	8093613	Identifier	count		8093607	1					
ANR	8093614	IdentifierDeclStatement	va_list args ;	75:4:2037:2049	8093607	1	True				
ANR	8093615	IdentifierDecl	args		8093607	0					
ANR	8093616	IdentifierDeclType	va_list		8093607	0					
ANR	8093617	Identifier	args		8093607	1					
ANR	8093618	IdentifierDeclStatement	char buf [ 1024 ] ;	76:4:2055:2069	8093607	2	True				
ANR	8093619	IdentifierDecl	buf [ 1024 ]		8093607	0					
ANR	8093620	IdentifierDeclType	char [ 1024 ]		8093607	0					
ANR	8093621	Identifier	buf		8093607	1					
ANR	8093622	PrimaryExpression	1024		8093607	2					
ANR	8093623	ExpressionStatement	"va_start ( args , fmt )"	78:4:2076:2095	8093607	3	True				
ANR	8093624	CallExpression	"va_start ( args , fmt )"		8093607	0					
ANR	8093625	Callee	va_start		8093607	0					
ANR	8093626	Identifier	va_start		8093607	0					
ANR	8093627	ArgumentList	args		8093607	1					
ANR	8093628	Argument	args		8093607	0					
ANR	8093629	Identifier	args		8093607	0					
ANR	8093630	Argument	fmt		8093607	1					
ANR	8093631	Identifier	fmt		8093607	0					
ANR	8093632	ExpressionStatement	"count = gs_vsprintf ( buf , fmt , args )"	79:4:2101:2136	8093607	4	True				
ANR	8093633	AssignmentExpression	"count = gs_vsprintf ( buf , fmt , args )"		8093607	0		=			
ANR	8093634	Identifier	count		8093607	0					
ANR	8093635	CallExpression	"gs_vsprintf ( buf , fmt , args )"		8093607	1					
ANR	8093636	Callee	gs_vsprintf		8093607	0					
ANR	8093637	Identifier	gs_vsprintf		8093607	0					
ANR	8093638	ArgumentList	buf		8093607	1					
ANR	8093639	Argument	buf		8093607	0					
ANR	8093640	Identifier	buf		8093607	0					
ANR	8093641	Argument	fmt		8093607	1					
ANR	8093642	Identifier	fmt		8093607	0					
ANR	8093643	Argument	args		8093607	2					
ANR	8093644	Identifier	args		8093607	0					
ANR	8093645	ExpressionStatement	"sputs ( s , ( const byte * ) buf , count , & count )"	80:4:2142:2184	8093607	5	True				
ANR	8093646	CallExpression	"sputs ( s , ( const byte * ) buf , count , & count )"		8093607	0					
ANR	8093647	Callee	sputs		8093607	0					
ANR	8093648	Identifier	sputs		8093607	0					
ANR	8093649	ArgumentList	s		8093607	1					
ANR	8093650	Argument	s		8093607	0					
ANR	8093651	Identifier	s		8093607	0					
ANR	8093652	Argument	( const byte * ) buf		8093607	1					
ANR	8093653	CastExpression	( const byte * ) buf		8093607	0					
ANR	8093654	CastTarget	const byte *		8093607	0					
ANR	8093655	Identifier	buf		8093607	1					
ANR	8093656	Argument	count		8093607	2					
ANR	8093657	Identifier	count		8093607	0					
ANR	8093658	Argument	& count		8093607	3					
ANR	8093659	UnaryOperationExpression	& count		8093607	0					
ANR	8093660	UnaryOperator	&		8093607	0					
ANR	8093661	Identifier	count		8093607	1					
ANR	8093662	ExpressionStatement	va_end ( args )	81:4:2190:2202	8093607	6	True				
ANR	8093663	CallExpression	va_end ( args )		8093607	0					
ANR	8093664	Callee	va_end		8093607	0					
ANR	8093665	Identifier	va_end		8093607	0					
ANR	8093666	ArgumentList	args		8093607	1					
ANR	8093667	Argument	args		8093607	0					
ANR	8093668	Identifier	args		8093607	0					
ANR	8093669	ReturnType	static void		8093607	1					
ANR	8093670	Identifier	stprintf		8093607	2					
ANR	8093671	ParameterList	"stream * s , const char * fmt"		8093607	3					
ANR	8093672	Parameter	stream * s	72:9:1981:1990	8093607	0	True				
ANR	8093673	ParameterType	stream *		8093607	0					
ANR	8093674	Identifier	s		8093607	1					
ANR	8093675	Parameter	const char * fmt	72:21:1993:2007	8093607	1	True				
ANR	8093676	ParameterType	const char *		8093607	0					
ANR	8093677	Identifier	fmt		8093607	1					
ANR	8093678	CFGEntryNode	ENTRY		8093607		True				
ANR	8093679	CFGExitNode	EXIT		8093607		True				
ANR	8093680	Symbol	args		8093607						
ANR	8093681	Symbol	buf		8093607						
ANR	8093682	Symbol	s		8093607						
ANR	8093683	Symbol	count		8093607						
ANR	8093684	Symbol	& count		8093607						
ANR	8093685	Symbol	fmt		8093607						
ANR	8093686	Symbol	gs_vsprintf		8093607						
ANR	8093687	Function	status_begin	85:0:2265:3071							
ANR	8093688	FunctionDef	"status_begin (stream * s , pcl_state_t * pcs)"		8093687	0					
ANR	8093689	CompoundStatement		87:0:2321:3071	8093687	0					
ANR	8093690	IdentifierDeclStatement	byte * buffer = pcs -> status . buffer ;	88:4:2327:2360	8093687	0	True				
ANR	8093691	IdentifierDecl	* buffer = pcs -> status . buffer		8093687	0					
ANR	8093692	IdentifierDeclType	byte *		8093687	0					
ANR	8093693	Identifier	buffer		8093687	1					
ANR	8093694	AssignmentExpression	* buffer = pcs -> status . buffer		8093687	2		=			
ANR	8093695	Identifier	buffer		8093687	0					
ANR	8093696	MemberAccess	pcs -> status . buffer		8093687	1					
ANR	8093697	PtrMemberAccess	pcs -> status		8093687	0					
ANR	8093698	Identifier	pcs		8093687	0					
ANR	8093699	Identifier	status		8093687	1					
ANR	8093700	Identifier	buffer		8093687	1					
ANR	8093701	IfStatement	if ( pcs -> status . read_pos > 0 )		8093687	1					
ANR	8093702	Condition	pcs -> status . read_pos > 0	90:8:2371:2394	8093687	0	True				
ANR	8093703	RelationalExpression	pcs -> status . read_pos > 0		8093687	0		>			
ANR	8093704	MemberAccess	pcs -> status . read_pos		8093687	0					
ANR	8093705	PtrMemberAccess	pcs -> status		8093687	0					
ANR	8093706	Identifier	pcs		8093687	0					
ANR	8093707	Identifier	status		8093687	1					
ANR	8093708	Identifier	read_pos		8093687	1					
ANR	8093709	PrimaryExpression	0		8093687	1					
ANR	8093710	CompoundStatement		4:34:75:75	8093687	1					
ANR	8093711	ExpressionStatement	"memmove ( buffer , buffer + pcs -> status . read_pos , pcs -> status . write_pos - pcs -> status . read_pos )"	91:8:2407:2515	8093687	0	True				
ANR	8093712	CallExpression	"memmove ( buffer , buffer + pcs -> status . read_pos , pcs -> status . write_pos - pcs -> status . read_pos )"		8093687	0					
ANR	8093713	Callee	memmove		8093687	0					
ANR	8093714	Identifier	memmove		8093687	0					
ANR	8093715	ArgumentList	buffer		8093687	1					
ANR	8093716	Argument	buffer		8093687	0					
ANR	8093717	Identifier	buffer		8093687	0					
ANR	8093718	Argument	buffer + pcs -> status . read_pos		8093687	1					
ANR	8093719	AdditiveExpression	buffer + pcs -> status . read_pos		8093687	0		+			
ANR	8093720	Identifier	buffer		8093687	0					
ANR	8093721	MemberAccess	pcs -> status . read_pos		8093687	1					
ANR	8093722	PtrMemberAccess	pcs -> status		8093687	0					
ANR	8093723	Identifier	pcs		8093687	0					
ANR	8093724	Identifier	status		8093687	1					
ANR	8093725	Identifier	read_pos		8093687	1					
ANR	8093726	Argument	pcs -> status . write_pos - pcs -> status . read_pos		8093687	2					
ANR	8093727	AdditiveExpression	pcs -> status . write_pos - pcs -> status . read_pos		8093687	0		-			
ANR	8093728	MemberAccess	pcs -> status . write_pos		8093687	0					
ANR	8093729	PtrMemberAccess	pcs -> status		8093687	0					
ANR	8093730	Identifier	pcs		8093687	0					
ANR	8093731	Identifier	status		8093687	1					
ANR	8093732	Identifier	write_pos		8093687	1					
ANR	8093733	MemberAccess	pcs -> status . read_pos		8093687	1					
ANR	8093734	PtrMemberAccess	pcs -> status		8093687	0					
ANR	8093735	Identifier	pcs		8093687	0					
ANR	8093736	Identifier	status		8093687	1					
ANR	8093737	Identifier	read_pos		8093687	1					
ANR	8093738	ExpressionStatement	pcs -> status . write_pos -= pcs -> status . read_pos	93:8:2525:2570	8093687	1	True				
ANR	8093739	AssignmentExpression	pcs -> status . write_pos -= pcs -> status . read_pos		8093687	0		-=			
ANR	8093740	MemberAccess	pcs -> status . write_pos		8093687	0					
ANR	8093741	PtrMemberAccess	pcs -> status		8093687	0					
ANR	8093742	Identifier	pcs		8093687	0					
ANR	8093743	Identifier	status		8093687	1					
ANR	8093744	Identifier	write_pos		8093687	1					
ANR	8093745	MemberAccess	pcs -> status . read_pos		8093687	1					
ANR	8093746	PtrMemberAccess	pcs -> status		8093687	0					
ANR	8093747	Identifier	pcs		8093687	0					
ANR	8093748	Identifier	status		8093687	1					
ANR	8093749	Identifier	read_pos		8093687	1					
ANR	8093750	ExpressionStatement	pcs -> status . read_pos = 0	94:8:2580:2604	8093687	2	True				
ANR	8093751	AssignmentExpression	pcs -> status . read_pos = 0		8093687	0		=			
ANR	8093752	MemberAccess	pcs -> status . read_pos		8093687	0					
ANR	8093753	PtrMemberAccess	pcs -> status		8093687	0					
ANR	8093754	Identifier	pcs		8093687	0					
ANR	8093755	Identifier	status		8093687	1					
ANR	8093756	Identifier	read_pos		8093687	1					
ANR	8093757	PrimaryExpression	0		8093687	1					
ANR	8093758	IfStatement	if ( buffer == 0 )		8093687	2					
ANR	8093759	Condition	buffer == 0	96:8:2620:2630	8093687	0	True				
ANR	8093760	EqualityExpression	buffer == 0		8093687	0		==			
ANR	8093761	Identifier	buffer		8093687	0					
ANR	8093762	PrimaryExpression	0		8093687	1					
ANR	8093763	CompoundStatement		10:21:311:311	8093687	1					
ANR	8093764	ExpressionStatement	"buffer = gs_alloc_bytes ( pcs -> memory , STATUS_BUFFER_SIZE , ""status buffer"" )"	97:8:2643:2748	8093687	0	True				
ANR	8093765	AssignmentExpression	"buffer = gs_alloc_bytes ( pcs -> memory , STATUS_BUFFER_SIZE , ""status buffer"" )"		8093687	0		=			
ANR	8093766	Identifier	buffer		8093687	0					
ANR	8093767	CallExpression	"gs_alloc_bytes ( pcs -> memory , STATUS_BUFFER_SIZE , ""status buffer"" )"		8093687	1					
ANR	8093768	Callee	gs_alloc_bytes		8093687	0					
ANR	8093769	Identifier	gs_alloc_bytes		8093687	0					
ANR	8093770	ArgumentList	pcs -> memory		8093687	1					
ANR	8093771	Argument	pcs -> memory		8093687	0					
ANR	8093772	PtrMemberAccess	pcs -> memory		8093687	0					
ANR	8093773	Identifier	pcs		8093687	0					
ANR	8093774	Identifier	memory		8093687	1					
ANR	8093775	Argument	STATUS_BUFFER_SIZE		8093687	1					
ANR	8093776	Identifier	STATUS_BUFFER_SIZE		8093687	0					
ANR	8093777	Argument	"""status buffer"""		8093687	2					
ANR	8093778	PrimaryExpression	"""status buffer"""		8093687	0					
ANR	8093779	ExpressionStatement	pcs -> status . buffer = buffer	99:8:2758:2785	8093687	1	True				
ANR	8093780	AssignmentExpression	pcs -> status . buffer = buffer		8093687	0		=			
ANR	8093781	MemberAccess	pcs -> status . buffer		8093687	0					
ANR	8093782	PtrMemberAccess	pcs -> status		8093687	0					
ANR	8093783	Identifier	pcs		8093687	0					
ANR	8093784	Identifier	status		8093687	1					
ANR	8093785	Identifier	buffer		8093687	1					
ANR	8093786	Identifier	buffer		8093687	1					
ANR	8093787	IfStatement	if ( buffer == 0 )		8093687	3					
ANR	8093788	Condition	buffer == 0	101:8:2801:2811	8093687	0	True				
ANR	8093789	EqualityExpression	buffer == 0		8093687	0		==			
ANR	8093790	Identifier	buffer		8093687	0					
ANR	8093791	PrimaryExpression	0		8093687	1					
ANR	8093792	ExpressionStatement	"swrite_string ( s , pcs -> status . internal_buffer , sizeof ( pcs -> status . internal_buffer ) )"	102:8:2822:2926	8093687	1	True				
ANR	8093793	CallExpression	"swrite_string ( s , pcs -> status . internal_buffer , sizeof ( pcs -> status . internal_buffer ) )"		8093687	0					
ANR	8093794	Callee	swrite_string		8093687	0					
ANR	8093795	Identifier	swrite_string		8093687	0					
ANR	8093796	ArgumentList	s		8093687	1					
ANR	8093797	Argument	s		8093687	0					
ANR	8093798	Identifier	s		8093687	0					
ANR	8093799	Argument	pcs -> status . internal_buffer		8093687	1					
ANR	8093800	MemberAccess	pcs -> status . internal_buffer		8093687	0					
ANR	8093801	PtrMemberAccess	pcs -> status		8093687	0					
ANR	8093802	Identifier	pcs		8093687	0					
ANR	8093803	Identifier	status		8093687	1					
ANR	8093804	Identifier	internal_buffer		8093687	1					
ANR	8093805	Argument	sizeof ( pcs -> status . internal_buffer )		8093687	2					
ANR	8093806	SizeofExpression	sizeof ( pcs -> status . internal_buffer )		8093687	0					
ANR	8093807	Sizeof	sizeof		8093687	0					
ANR	8093808	MemberAccess	pcs -> status . internal_buffer		8093687	1					
ANR	8093809	PtrMemberAccess	pcs -> status		8093687	0					
ANR	8093810	Identifier	pcs		8093687	0					
ANR	8093811	Identifier	status		8093687	1					
ANR	8093812	Identifier	internal_buffer		8093687	1					
ANR	8093813	ElseStatement	else		8093687	0					
ANR	8093814	ExpressionStatement	"swrite_string ( s , buffer , gs_object_size ( pcs -> memory , buffer ) )"	105:8:2945:3006	8093687	0	True				
ANR	8093815	CallExpression	"swrite_string ( s , buffer , gs_object_size ( pcs -> memory , buffer ) )"		8093687	0					
ANR	8093816	Callee	swrite_string		8093687	0					
ANR	8093817	Identifier	swrite_string		8093687	0					
ANR	8093818	ArgumentList	s		8093687	1					
ANR	8093819	Argument	s		8093687	0					
ANR	8093820	Identifier	s		8093687	0					
ANR	8093821	Argument	buffer		8093687	1					
ANR	8093822	Identifier	buffer		8093687	0					
ANR	8093823	Argument	"gs_object_size ( pcs -> memory , buffer )"		8093687	2					
ANR	8093824	CallExpression	"gs_object_size ( pcs -> memory , buffer )"		8093687	0					
ANR	8093825	Callee	gs_object_size		8093687	0					
ANR	8093826	Identifier	gs_object_size		8093687	0					
ANR	8093827	ArgumentList	pcs -> memory		8093687	1					
ANR	8093828	Argument	pcs -> memory		8093687	0					
ANR	8093829	PtrMemberAccess	pcs -> memory		8093687	0					
ANR	8093830	Identifier	pcs		8093687	0					
ANR	8093831	Identifier	memory		8093687	1					
ANR	8093832	Argument	buffer		8093687	1					
ANR	8093833	Identifier	buffer		8093687	0					
ANR	8093834	ExpressionStatement	"sseek ( s , pcs -> status . write_pos )"	106:4:3012:3043	8093687	4	True				
ANR	8093835	CallExpression	"sseek ( s , pcs -> status . write_pos )"		8093687	0					
ANR	8093836	Callee	sseek		8093687	0					
ANR	8093837	Identifier	sseek		8093687	0					
ANR	8093838	ArgumentList	s		8093687	1					
ANR	8093839	Argument	s		8093687	0					
ANR	8093840	Identifier	s		8093687	0					
ANR	8093841	Argument	pcs -> status . write_pos		8093687	1					
ANR	8093842	MemberAccess	pcs -> status . write_pos		8093687	0					
ANR	8093843	PtrMemberAccess	pcs -> status		8093687	0					
ANR	8093844	Identifier	pcs		8093687	0					
ANR	8093845	Identifier	status		8093687	1					
ANR	8093846	Identifier	write_pos		8093687	1					
ANR	8093847	ExpressionStatement	"stputs ( s , ""PCL\\r\\n"" )"	107:4:3049:3069	8093687	5	True				
ANR	8093848	CallExpression	"stputs ( s , ""PCL\\r\\n"" )"		8093687	0					
ANR	8093849	Callee	stputs		8093687	0					
ANR	8093850	Identifier	stputs		8093687	0					
ANR	8093851	ArgumentList	s		8093687	1					
ANR	8093852	Argument	s		8093687	0					
ANR	8093853	Identifier	s		8093687	0					
ANR	8093854	Argument	"""PCL\\r\\n"""		8093687	1					
ANR	8093855	PrimaryExpression	"""PCL\\r\\n"""		8093687	0					
ANR	8093856	ReturnType	static void		8093687	1					
ANR	8093857	Identifier	status_begin		8093687	2					
ANR	8093858	ParameterList	"stream * s , pcl_state_t * pcs"		8093687	3					
ANR	8093859	Parameter	stream * s	86:13:2290:2299	8093687	0	True				
ANR	8093860	ParameterType	stream *		8093687	0					
ANR	8093861	Identifier	s		8093687	1					
ANR	8093862	Parameter	pcl_state_t * pcs	86:25:2302:2318	8093687	1	True				
ANR	8093863	ParameterType	pcl_state_t *		8093687	0					
ANR	8093864	Identifier	pcs		8093687	1					
ANR	8093865	CFGEntryNode	ENTRY		8093687		True				
ANR	8093866	CFGExitNode	EXIT		8093687		True				
ANR	8093867	Symbol	pcs		8093687						
ANR	8093868	Symbol	gs_alloc_bytes		8093687						
ANR	8093869	Symbol	pcs -> status . internal_buffer		8093687						
ANR	8093870	Symbol	STATUS_BUFFER_SIZE		8093687						
ANR	8093871	Symbol	* pcs		8093687						
ANR	8093872	Symbol	gs_object_size		8093687						
ANR	8093873	Symbol	s		8093687						
ANR	8093874	Symbol	pcs -> status		8093687						
ANR	8093875	Symbol	pcs -> status . write_pos		8093687						
ANR	8093876	Symbol	pcs -> status . buffer		8093687						
ANR	8093877	Symbol	pcs -> memory		8093687						
ANR	8093878	Symbol	buffer		8093687						
ANR	8093879	Symbol	pcs -> status . read_pos		8093687						
ANR	8093880	Function	status_put_id	111:0:3115:3464							
ANR	8093881	FunctionDef	"status_put_id (stream * s , const char * title , const char * id)"		8093880	0					
ANR	8093882	CompoundStatement		113:0:3188:3464	8093880	0					
ANR	8093883	IfStatement	if ( * s -> cursor . w . ptr == '\\n' )		8093880	0					
ANR	8093884	Condition	* s -> cursor . w . ptr == '\\n'	114:8:3299:3322	8093880	0	True				
ANR	8093885	EqualityExpression	* s -> cursor . w . ptr == '\\n'		8093880	0		==			
ANR	8093886	UnaryOperationExpression	* s -> cursor . w . ptr		8093880	0					
ANR	8093887	UnaryOperator	*		8093880	0					
ANR	8093888	MemberAccess	s -> cursor . w . ptr		8093880	1					
ANR	8093889	MemberAccess	s -> cursor . w		8093880	0					
ANR	8093890	PtrMemberAccess	s -> cursor		8093880	0					
ANR	8093891	Identifier	s		8093880	0					
ANR	8093892	Identifier	cursor		8093880	1					
ANR	8093893	Identifier	w		8093880	1					
ANR	8093894	Identifier	ptr		8093880	1					
ANR	8093895	PrimaryExpression	'\\n'		8093880	1					
ANR	8093896	CompoundStatement		2:34:136:136	8093880	1					
ANR	8093897	ExpressionStatement	"stprintf ( s , ""%s=\\""%s"" , title , id )"	115:8:3378:3411	8093880	0	True				
ANR	8093898	CallExpression	"stprintf ( s , ""%s=\\""%s"" , title , id )"		8093880	0					
ANR	8093899	Callee	stprintf		8093880	0					
ANR	8093900	Identifier	stprintf		8093880	0					
ANR	8093901	ArgumentList	s		8093880	1					
ANR	8093902	Argument	s		8093880	0					
ANR	8093903	Identifier	s		8093880	0					
ANR	8093904	Argument	"""%s=\\""%s"""		8093880	1					
ANR	8093905	PrimaryExpression	"""%s=\\""%s"""		8093880	0					
ANR	8093906	Argument	title		8093880	2					
ANR	8093907	Identifier	title		8093880	0					
ANR	8093908	Argument	id		8093880	3					
ANR	8093909	Identifier	id		8093880	0					
ANR	8093910	ElseStatement	else		8093880	0					
ANR	8093911	CompoundStatement		4:11:235:235	8093880	0					
ANR	8093912	ExpressionStatement	"stprintf ( s , "",%s"" , id )"	117:8:3434:3456	8093880	0	True				
ANR	8093913	CallExpression	"stprintf ( s , "",%s"" , id )"		8093880	0					
ANR	8093914	Callee	stprintf		8093880	0					
ANR	8093915	Identifier	stprintf		8093880	0					
ANR	8093916	ArgumentList	s		8093880	1					
ANR	8093917	Argument	s		8093880	0					
ANR	8093918	Identifier	s		8093880	0					
ANR	8093919	Argument	""",%s"""		8093880	1					
ANR	8093920	PrimaryExpression	""",%s"""		8093880	0					
ANR	8093921	Argument	id		8093880	2					
ANR	8093922	Identifier	id		8093880	0					
ANR	8093923	ReturnType	static void		8093880	1					
ANR	8093924	Identifier	status_put_id		8093880	2					
ANR	8093925	ParameterList	"stream * s , const char * title , const char * id"		8093880	3					
ANR	8093926	Parameter	stream * s	112:14:3141:3150	8093880	0	True				
ANR	8093927	ParameterType	stream *		8093880	0					
ANR	8093928	Identifier	s		8093880	1					
ANR	8093929	Parameter	const char * title	112:26:3153:3169	8093880	1	True				
ANR	8093930	ParameterType	const char *		8093880	0					
ANR	8093931	Identifier	title		8093880	1					
ANR	8093932	Parameter	const char * id	112:45:3172:3185	8093880	2	True				
ANR	8093933	ParameterType	const char *		8093880	0					
ANR	8093934	Identifier	id		8093880	1					
ANR	8093935	CFGEntryNode	ENTRY		8093880		True				
ANR	8093936	CFGExitNode	EXIT		8093880		True				
ANR	8093937	Symbol	s -> cursor		8093880						
ANR	8093938	Symbol	s -> cursor . w . ptr		8093880						
ANR	8093939	Symbol	s		8093880						
ANR	8093940	Symbol	s -> cursor . w		8093880						
ANR	8093941	Symbol	* s -> cursor . w . ptr		8093880						
ANR	8093942	Symbol	* * s		8093880						
ANR	8093943	Symbol	id		8093880						
ANR	8093944	Symbol	title		8093880						
ANR	8093945	Symbol	* s		8093880						
ANR	8093946	Symbol	* s -> cursor		8093880						
ANR	8093947	Symbol	* s -> cursor . w		8093880						
ANR	8093948	Function	status_end_id_list	122:0:3500:3709							
ANR	8093949	FunctionDef	status_end_id_list (stream * s)		8093948	0					
ANR	8093950	CompoundStatement		124:0:3543:3709	8093948	0					
ANR	8093951	IfStatement	if ( * s -> cursor . w . ptr != '\\n' )		8093948	0					
ANR	8093952	Condition	* s -> cursor . w . ptr != '\\n'	125:8:3654:3677	8093948	0	True				
ANR	8093953	EqualityExpression	* s -> cursor . w . ptr != '\\n'		8093948	0		!=			
ANR	8093954	UnaryOperationExpression	* s -> cursor . w . ptr		8093948	0					
ANR	8093955	UnaryOperator	*		8093948	0					
ANR	8093956	MemberAccess	s -> cursor . w . ptr		8093948	1					
ANR	8093957	MemberAccess	s -> cursor . w		8093948	0					
ANR	8093958	PtrMemberAccess	s -> cursor		8093948	0					
ANR	8093959	Identifier	s		8093948	0					
ANR	8093960	Identifier	cursor		8093948	1					
ANR	8093961	Identifier	w		8093948	1					
ANR	8093962	Identifier	ptr		8093948	1					
ANR	8093963	PrimaryExpression	'\\n'		8093948	1					
ANR	8093964	ExpressionStatement	"stputs ( s , ""\\""\\r\\n"" )"	126:8:3688:3707	8093948	1	True				
ANR	8093965	CallExpression	"stputs ( s , ""\\""\\r\\n"" )"		8093948	0					
ANR	8093966	Callee	stputs		8093948	0					
ANR	8093967	Identifier	stputs		8093948	0					
ANR	8093968	ArgumentList	s		8093948	1					
ANR	8093969	Argument	s		8093948	0					
ANR	8093970	Identifier	s		8093948	0					
ANR	8093971	Argument	"""\\""\\r\\n"""		8093948	1					
ANR	8093972	PrimaryExpression	"""\\""\\r\\n"""		8093948	0					
ANR	8093973	ReturnType	static void		8093948	1					
ANR	8093974	Identifier	status_end_id_list		8093948	2					
ANR	8093975	ParameterList	stream * s		8093948	3					
ANR	8093976	Parameter	stream * s	123:19:3531:3540	8093948	0	True				
ANR	8093977	ParameterType	stream *		8093948	0					
ANR	8093978	Identifier	s		8093948	1					
ANR	8093979	CFGEntryNode	ENTRY		8093948		True				
ANR	8093980	CFGExitNode	EXIT		8093948		True				
ANR	8093981	Symbol	s -> cursor		8093948						
ANR	8093982	Symbol	s -> cursor . w . ptr		8093948						
ANR	8093983	Symbol	s		8093948						
ANR	8093984	Symbol	s -> cursor . w		8093948						
ANR	8093985	Symbol	* s -> cursor . w . ptr		8093948						
ANR	8093986	Symbol	* * s		8093948						
ANR	8093987	Symbol	* s		8093948						
ANR	8093988	Symbol	* s -> cursor		8093948						
ANR	8093989	Symbol	* s -> cursor . w		8093948						
ANR	8093990	Function	status_print_idlist	129:0:3712:4130							
ANR	8093991	FunctionDef	"status_print_idlist (stream * s , const ushort * idlist , int nid , const char * title)"		8093990	0					
ANR	8093992	CompoundStatement		132:0:3827:4130	8093990	0					
ANR	8093993	IdentifierDeclStatement	int i ;	133:4:3833:3838	8093990	0	True				
ANR	8093994	IdentifierDecl	i		8093990	0					
ANR	8093995	IdentifierDeclType	int		8093990	0					
ANR	8093996	Identifier	i		8093990	1					
ANR	8093997	ForStatement	for ( i = 0 ; i < nid ; i ++ )		8093990	1					
ANR	8093998	ForInit	i = 0 ;	135:9:3850:3855	8093990	0	True				
ANR	8093999	AssignmentExpression	i = 0		8093990	0		=			
ANR	8094000	Identifier	i		8093990	0					
ANR	8094001	PrimaryExpression	0		8093990	1					
ANR	8094002	Condition	i < nid	135:16:3857:3863	8093990	1	True				
ANR	8094003	RelationalExpression	i < nid		8093990	0		<			
ANR	8094004	Identifier	i		8093990	0					
ANR	8094005	Identifier	nid		8093990	1					
ANR	8094006	PostIncDecOperationExpression	i ++	135:25:3866:3868	8093990	2	True				
ANR	8094007	Identifier	i		8093990	0					
ANR	8094008	IncDec	++		8093990	1					
ANR	8094009	CompoundStatement		6:8:108:116	8093990	3					
ANR	8094010	IdentifierDeclStatement	char idstr [ 6 ] ;	136:8:3881:3894	8093990	0	True				
ANR	8094011	IdentifierDecl	idstr [ 6 ]		8093990	0					
ANR	8094012	IdentifierDeclType	char [ 6 ]		8093990	0					
ANR	8094013	Identifier	idstr		8093990	1					
ANR	8094014	PrimaryExpression	6		8093990	2					
ANR	8094015	IdentifierDeclStatement	"int n , l ;"	137:8:3936:3944	8093990	1	True				
ANR	8094016	IdentifierDecl	n		8093990	0					
ANR	8094017	IdentifierDeclType	int		8093990	0					
ANR	8094018	Identifier	n		8093990	1					
ANR	8094019	IdentifierDecl	l		8093990	1					
ANR	8094020	IdentifierDeclType	int		8093990	0					
ANR	8094021	Identifier	l		8093990	1					
ANR	8094022	ExpressionStatement	n = idlist [ i ] >> 6	139:8:3955:3973	8093990	2	True				
ANR	8094023	AssignmentExpression	n = idlist [ i ] >> 6		8093990	0		=			
ANR	8094024	Identifier	n		8093990	0					
ANR	8094025	ShiftExpression	idlist [ i ] >> 6		8093990	1		>>			
ANR	8094026	ArrayIndexing	idlist [ i ]		8093990	0					
ANR	8094027	Identifier	idlist		8093990	0					
ANR	8094028	Identifier	i		8093990	1					
ANR	8094029	PrimaryExpression	6		8093990	1					
ANR	8094030	ExpressionStatement	l = ( idlist [ i ] & 077 ) + 'A' - 1	140:8:3983:4014	8093990	3	True				
ANR	8094031	AssignmentExpression	l = ( idlist [ i ] & 077 ) + 'A' - 1		8093990	0		=			
ANR	8094032	Identifier	l		8093990	0					
ANR	8094033	AdditiveExpression	( idlist [ i ] & 077 ) + 'A' - 1		8093990	1		+			
ANR	8094034	BitAndExpression	idlist [ i ] & 077		8093990	0		&			
ANR	8094035	ArrayIndexing	idlist [ i ]		8093990	0					
ANR	8094036	Identifier	idlist		8093990	0					
ANR	8094037	Identifier	i		8093990	1					
ANR	8094038	PrimaryExpression	077		8093990	1					
ANR	8094039	AdditiveExpression	'A' - 1		8093990	1		-			
ANR	8094040	PrimaryExpression	'A'		8093990	0					
ANR	8094041	PrimaryExpression	1		8093990	1					
ANR	8094042	ExpressionStatement	"gs_sprintf ( idstr , ""%d%c"" , n , l )"	141:8:4024:4055	8093990	4	True				
ANR	8094043	CallExpression	"gs_sprintf ( idstr , ""%d%c"" , n , l )"		8093990	0					
ANR	8094044	Callee	gs_sprintf		8093990	0					
ANR	8094045	Identifier	gs_sprintf		8093990	0					
ANR	8094046	ArgumentList	idstr		8093990	1					
ANR	8094047	Argument	idstr		8093990	0					
ANR	8094048	Identifier	idstr		8093990	0					
ANR	8094049	Argument	"""%d%c"""		8093990	1					
ANR	8094050	PrimaryExpression	"""%d%c"""		8093990	0					
ANR	8094051	Argument	n		8093990	2					
ANR	8094052	Identifier	n		8093990	0					
ANR	8094053	Argument	l		8093990	3					
ANR	8094054	Identifier	l		8093990	0					
ANR	8094055	ExpressionStatement	"status_put_id ( s , title , idstr )"	142:8:4065:4095	8093990	5	True				
ANR	8094056	CallExpression	"status_put_id ( s , title , idstr )"		8093990	0					
ANR	8094057	Callee	status_put_id		8093990	0					
ANR	8094058	Identifier	status_put_id		8093990	0					
ANR	8094059	ArgumentList	s		8093990	1					
ANR	8094060	Argument	s		8093990	0					
ANR	8094061	Identifier	s		8093990	0					
ANR	8094062	Argument	title		8093990	1					
ANR	8094063	Identifier	title		8093990	0					
ANR	8094064	Argument	idstr		8093990	2					
ANR	8094065	Identifier	idstr		8093990	0					
ANR	8094066	ExpressionStatement	status_end_id_list ( s )	144:4:4107:4128	8093990	2	True				
ANR	8094067	CallExpression	status_end_id_list ( s )		8093990	0					
ANR	8094068	Callee	status_end_id_list		8093990	0					
ANR	8094069	Identifier	status_end_id_list		8093990	0					
ANR	8094070	ArgumentList	s		8093990	1					
ANR	8094071	Argument	s		8093990	0					
ANR	8094072	Identifier	s		8093990	0					
ANR	8094073	ReturnType	static void		8093990	1					
ANR	8094074	Identifier	status_print_idlist		8093990	2					
ANR	8094075	ParameterList	"stream * s , const ushort * idlist , int nid , const char * title"		8093990	3					
ANR	8094076	Parameter	stream * s	130:20:3744:3753	8093990	0	True				
ANR	8094077	ParameterType	stream *		8093990	0					
ANR	8094078	Identifier	s		8093990	1					
ANR	8094079	Parameter	const ushort * idlist	130:32:3756:3776	8093990	1	True				
ANR	8094080	ParameterType	const ushort *		8093990	0					
ANR	8094081	Identifier	idlist		8093990	1					
ANR	8094082	Parameter	int nid	130:55:3779:3785	8093990	2	True				
ANR	8094083	ParameterType	int		8093990	0					
ANR	8094084	Identifier	nid		8093990	1					
ANR	8094085	Parameter	const char * title	131:20:3808:3824	8093990	3	True				
ANR	8094086	ParameterType	const char *		8093990	0					
ANR	8094087	Identifier	title		8093990	1					
ANR	8094088	CFGEntryNode	ENTRY		8093990		True				
ANR	8094089	CFGExitNode	EXIT		8093990		True				
ANR	8094090	Symbol	idstr		8093990						
ANR	8094091	Symbol	s		8093990						
ANR	8094092	Symbol	* i		8093990						
ANR	8094093	Symbol	* idlist		8093990						
ANR	8094094	Symbol	nid		8093990						
ANR	8094095	Symbol	idlist		8093990						
ANR	8094096	Symbol	i		8093990						
ANR	8094097	Symbol	title		8093990						
ANR	8094098	Symbol	l		8093990						
ANR	8094099	Symbol	n		8093990						
ANR	8094100	Function	status_put_floating	149:0:4284:4715							
ANR	8094101	FunctionDef	"status_put_floating (stream * s , double v)"		8094100	0					
ANR	8094102	CompoundStatement		151:0:4338:4715	8094100	0					
ANR	8094103	IdentifierDeclStatement	int vf = ( int ) ( v * 100 + ( ( v < 0 ) ? - 0.5 : 0.5 ) ) ;	153:4:4491:4539	8094100	0	True				
ANR	8094104	IdentifierDecl	vf = ( int ) ( v * 100 + ( ( v < 0 ) ? - 0.5 : 0.5 ) )		8094100	0					
ANR	8094105	IdentifierDeclType	int		8094100	0					
ANR	8094106	Identifier	vf		8094100	1					
ANR	8094107	AssignmentExpression	vf = ( int ) ( v * 100 + ( ( v < 0 ) ? - 0.5 : 0.5 ) )		8094100	2		=			
ANR	8094108	Identifier	vf		8094100	0					
ANR	8094109	CastExpression	( int ) ( v * 100 + ( ( v < 0 ) ? - 0.5 : 0.5 ) )		8094100	1					
ANR	8094110	CastTarget	int		8094100	0					
ANR	8094111	AdditiveExpression	v * 100 + ( ( v < 0 ) ? - 0.5 : 0.5 )		8094100	1		+			
ANR	8094112	MultiplicativeExpression	v * 100		8094100	0		*			
ANR	8094113	Identifier	v		8094100	0					
ANR	8094114	PrimaryExpression	100		8094100	1					
ANR	8094115	ConditionalExpression	( v < 0 ) ? - 0.5 : 0.5		8094100	1					
ANR	8094116	Condition	v < 0		8094100	0					
ANR	8094117	RelationalExpression	v < 0		8094100	0		<			
ANR	8094118	Identifier	v		8094100	0					
ANR	8094119	PrimaryExpression	0		8094100	1					
ANR	8094120	UnaryOperationExpression	- 0.5		8094100	1					
ANR	8094121	UnaryOperator	-		8094100	0					
ANR	8094122	PrimaryExpression	0.5		8094100	1					
ANR	8094123	PrimaryExpression	0.5		8094100	2					
ANR	8094124	IfStatement	if ( vf / 100 * 100 == vf )		8094100	1					
ANR	8094125	Condition	vf / 100 * 100 == vf	155:8:4550:4569	8094100	0	True				
ANR	8094126	EqualityExpression	vf / 100 * 100 == vf		8094100	0		==			
ANR	8094127	MultiplicativeExpression	vf / 100 * 100		8094100	0		/			
ANR	8094128	Identifier	vf		8094100	0					
ANR	8094129	MultiplicativeExpression	100 * 100		8094100	1		*			
ANR	8094130	PrimaryExpression	100		8094100	0					
ANR	8094131	PrimaryExpression	100		8094100	1					
ANR	8094132	Identifier	vf		8094100	1					
ANR	8094133	ExpressionStatement	"stprintf ( s , ""%d"" , vf / 100 )"	156:8:4580:4607	8094100	1	True				
ANR	8094134	CallExpression	"stprintf ( s , ""%d"" , vf / 100 )"		8094100	0					
ANR	8094135	Callee	stprintf		8094100	0					
ANR	8094136	Identifier	stprintf		8094100	0					
ANR	8094137	ArgumentList	s		8094100	1					
ANR	8094138	Argument	s		8094100	0					
ANR	8094139	Identifier	s		8094100	0					
ANR	8094140	Argument	"""%d"""		8094100	1					
ANR	8094141	PrimaryExpression	"""%d"""		8094100	0					
ANR	8094142	Argument	vf / 100		8094100	2					
ANR	8094143	MultiplicativeExpression	vf / 100		8094100	0		/			
ANR	8094144	Identifier	vf		8094100	0					
ANR	8094145	PrimaryExpression	100		8094100	1					
ANR	8094146	ElseStatement	else		8094100	0					
ANR	8094147	IfStatement	if ( vf / 10 * 10 == vf )		8094100	0					
ANR	8094148	Condition	vf / 10 * 10 == vf	157:13:4622:4639	8094100	0	True				
ANR	8094149	EqualityExpression	vf / 10 * 10 == vf		8094100	0		==			
ANR	8094150	MultiplicativeExpression	vf / 10 * 10		8094100	0		/			
ANR	8094151	Identifier	vf		8094100	0					
ANR	8094152	MultiplicativeExpression	10 * 10		8094100	1		*			
ANR	8094153	PrimaryExpression	10		8094100	0					
ANR	8094154	PrimaryExpression	10		8094100	1					
ANR	8094155	Identifier	vf		8094100	1					
ANR	8094156	ExpressionStatement	"stprintf ( s , ""%.1f"" , v )"	158:8:4650:4672	8094100	1	True				
ANR	8094157	CallExpression	"stprintf ( s , ""%.1f"" , v )"		8094100	0					
ANR	8094158	Callee	stprintf		8094100	0					
ANR	8094159	Identifier	stprintf		8094100	0					
ANR	8094160	ArgumentList	s		8094100	1					
ANR	8094161	Argument	s		8094100	0					
ANR	8094162	Identifier	s		8094100	0					
ANR	8094163	Argument	"""%.1f"""		8094100	1					
ANR	8094164	PrimaryExpression	"""%.1f"""		8094100	0					
ANR	8094165	Argument	v		8094100	2					
ANR	8094166	Identifier	v		8094100	0					
ANR	8094167	ElseStatement	else		8094100	0					
ANR	8094168	ExpressionStatement	"stprintf ( s , ""%.2f"" , v )"	160:8:4691:4713	8094100	0	True				
ANR	8094169	CallExpression	"stprintf ( s , ""%.2f"" , v )"		8094100	0					
ANR	8094170	Callee	stprintf		8094100	0					
ANR	8094171	Identifier	stprintf		8094100	0					
ANR	8094172	ArgumentList	s		8094100	1					
ANR	8094173	Argument	s		8094100	0					
ANR	8094174	Identifier	s		8094100	0					
ANR	8094175	Argument	"""%.2f"""		8094100	1					
ANR	8094176	PrimaryExpression	"""%.2f"""		8094100	0					
ANR	8094177	Argument	v		8094100	2					
ANR	8094178	Identifier	v		8094100	0					
ANR	8094179	ReturnType	static void		8094100	1					
ANR	8094180	Identifier	status_put_floating		8094100	2					
ANR	8094181	ParameterList	"stream * s , double v"		8094100	3					
ANR	8094182	Parameter	stream * s	150:20:4316:4325	8094100	0	True				
ANR	8094183	ParameterType	stream *		8094100	0					
ANR	8094184	Identifier	s		8094100	1					
ANR	8094185	Parameter	double v	150:32:4328:4335	8094100	1	True				
ANR	8094186	ParameterType	double		8094100	0					
ANR	8094187	Identifier	v		8094100	1					
ANR	8094188	CFGEntryNode	ENTRY		8094100		True				
ANR	8094189	CFGExitNode	EXIT		8094100		True				
ANR	8094190	Symbol	vf		8094100						
ANR	8094191	Symbol	s		8094100						
ANR	8094192	Symbol	v		8094100						
ANR	8094193	Function	status_put_font	165:0:4815:10805							
ANR	8094194	FunctionDef	"status_put_font (stream * s , pcl_state_t * pcs , uint font_id , uint internal_id , pl_font_t * plfont , int font_set , bool extended)"		8094193	0					
ANR	8094195	CompoundStatement		169:0:4986:10805	8094193	0					
ANR	8094196	IdentifierDeclStatement	char paren = ( font_set > 0 ? ')' : '(' ) ;	170:4:4992:5031	8094193	0	True				
ANR	8094197	IdentifierDecl	paren = ( font_set > 0 ? ')' : '(' )		8094193	0					
ANR	8094198	IdentifierDeclType	char		8094193	0					
ANR	8094199	Identifier	paren		8094193	1					
ANR	8094200	AssignmentExpression	paren = ( font_set > 0 ? ')' : '(' )		8094193	2		=			
ANR	8094201	Identifier	paren		8094193	0					
ANR	8094202	ConditionalExpression	font_set > 0 ? ')' : '('		8094193	1					
ANR	8094203	Condition	font_set > 0		8094193	0					
ANR	8094204	RelationalExpression	font_set > 0		8094193	0		>			
ANR	8094205	Identifier	font_set		8094193	0					
ANR	8094206	PrimaryExpression	0		8094193	1					
ANR	8094207	PrimaryExpression	')'		8094193	1					
ANR	8094208	PrimaryExpression	'('		8094193	2					
ANR	8094209	IdentifierDeclStatement	bool proportional = plfont -> params . proportional_spacing ;	171:4:5037:5092	8094193	1	True				
ANR	8094210	IdentifierDecl	proportional = plfont -> params . proportional_spacing		8094193	0					
ANR	8094211	IdentifierDeclType	bool		8094193	0					
ANR	8094212	Identifier	proportional		8094193	1					
ANR	8094213	AssignmentExpression	proportional = plfont -> params . proportional_spacing		8094193	2		=			
ANR	8094214	Identifier	proportional		8094193	0					
ANR	8094215	MemberAccess	plfont -> params . proportional_spacing		8094193	1					
ANR	8094216	PtrMemberAccess	plfont -> params		8094193	0					
ANR	8094217	Identifier	plfont		8094193	0					
ANR	8094218	Identifier	params		8094193	1					
ANR	8094219	Identifier	proportional_spacing		8094193	1					
ANR	8094220	ExpressionStatement	"stputs ( s , ""SELECT=\\"""" )"	174:4:5153:5175	8094193	2	True				
ANR	8094221	CallExpression	"stputs ( s , ""SELECT=\\"""" )"		8094193	0					
ANR	8094222	Callee	stputs		8094193	0					
ANR	8094223	Identifier	stputs		8094193	0					
ANR	8094224	ArgumentList	s		8094193	1					
ANR	8094225	Argument	s		8094193	0					
ANR	8094226	Identifier	s		8094193	0					
ANR	8094227	Argument	"""SELECT=\\"""""		8094193	1					
ANR	8094228	PrimaryExpression	"""SELECT=\\"""""		8094193	0					
ANR	8094229	IfStatement	if ( pl_font_is_bound ( plfont ) || font_set > 0 )		8094193	3					
ANR	8094230	Condition	pl_font_is_bound ( plfont ) || font_set > 0	175:8:5185:5224	8094193	0	True				
ANR	8094231	OrExpression	pl_font_is_bound ( plfont ) || font_set > 0		8094193	0		||			
ANR	8094232	CallExpression	pl_font_is_bound ( plfont )		8094193	0					
ANR	8094233	Callee	pl_font_is_bound		8094193	0					
ANR	8094234	Identifier	pl_font_is_bound		8094193	0					
ANR	8094235	ArgumentList	plfont		8094193	1					
ANR	8094236	Argument	plfont		8094193	0					
ANR	8094237	Identifier	plfont		8094193	0					
ANR	8094238	RelationalExpression	font_set > 0		8094193	1		>			
ANR	8094239	Identifier	font_set		8094193	0					
ANR	8094240	PrimaryExpression	0		8094193	1					
ANR	8094241	CompoundStatement		9:8:311:443	8094193	1					
ANR	8094242	IdentifierDeclStatement	uint symbol_set = font_set > 0 ? pcs -> font_selection [ font_set ] . params . symbol_set : plfont -> params . symbol_set ;	177:8:5298:5430	8094193	0	True				
ANR	8094243	IdentifierDecl	symbol_set = font_set > 0 ? pcs -> font_selection [ font_set ] . params . symbol_set : plfont -> params . symbol_set		8094193	0					
ANR	8094244	IdentifierDeclType	uint		8094193	0					
ANR	8094245	Identifier	symbol_set		8094193	1					
ANR	8094246	AssignmentExpression	symbol_set = font_set > 0 ? pcs -> font_selection [ font_set ] . params . symbol_set : plfont -> params . symbol_set		8094193	2		=			
ANR	8094247	Identifier	symbol_set		8094193	0					
ANR	8094248	ConditionalExpression	font_set > 0 ? pcs -> font_selection [ font_set ] . params . symbol_set : plfont -> params . symbol_set		8094193	1					
ANR	8094249	Condition	font_set > 0		8094193	0					
ANR	8094250	RelationalExpression	font_set > 0		8094193	0		>			
ANR	8094251	Identifier	font_set		8094193	0					
ANR	8094252	PrimaryExpression	0		8094193	1					
ANR	8094253	MemberAccess	pcs -> font_selection [ font_set ] . params . symbol_set		8094193	1					
ANR	8094254	MemberAccess	pcs -> font_selection [ font_set ] . params		8094193	0					
ANR	8094255	ArrayIndexing	pcs -> font_selection [ font_set ]		8094193	0					
ANR	8094256	PtrMemberAccess	pcs -> font_selection		8094193	0					
ANR	8094257	Identifier	pcs		8094193	0					
ANR	8094258	Identifier	font_selection		8094193	1					
ANR	8094259	Identifier	font_set		8094193	1					
ANR	8094260	Identifier	params		8094193	1					
ANR	8094261	Identifier	symbol_set		8094193	1					
ANR	8094262	MemberAccess	plfont -> params . symbol_set		8094193	2					
ANR	8094263	PtrMemberAccess	plfont -> params		8094193	0					
ANR	8094264	Identifier	plfont		8094193	0					
ANR	8094265	Identifier	params		8094193	1					
ANR	8094266	Identifier	symbol_set		8094193	1					
ANR	8094267	ExpressionStatement	"stprintf ( s , ""<Esc>%c%u%c"" , paren , symbol_set >> 5 , ( symbol_set & 31 ) + 'A' - 1 )"	180:8:5440:5536	8094193	1	True				
ANR	8094268	CallExpression	"stprintf ( s , ""<Esc>%c%u%c"" , paren , symbol_set >> 5 , ( symbol_set & 31 ) + 'A' - 1 )"		8094193	0					
ANR	8094269	Callee	stprintf		8094193	0					
ANR	8094270	Identifier	stprintf		8094193	0					
ANR	8094271	ArgumentList	s		8094193	1					
ANR	8094272	Argument	s		8094193	0					
ANR	8094273	Identifier	s		8094193	0					
ANR	8094274	Argument	"""<Esc>%c%u%c"""		8094193	1					
ANR	8094275	PrimaryExpression	"""<Esc>%c%u%c"""		8094193	0					
ANR	8094276	Argument	paren		8094193	2					
ANR	8094277	Identifier	paren		8094193	0					
ANR	8094278	Argument	symbol_set >> 5		8094193	3					
ANR	8094279	ShiftExpression	symbol_set >> 5		8094193	0		>>			
ANR	8094280	Identifier	symbol_set		8094193	0					
ANR	8094281	PrimaryExpression	5		8094193	1					
ANR	8094282	Argument	( symbol_set & 31 ) + 'A' - 1		8094193	4					
ANR	8094283	AdditiveExpression	( symbol_set & 31 ) + 'A' - 1		8094193	0		+			
ANR	8094284	BitAndExpression	symbol_set & 31		8094193	0		&			
ANR	8094285	Identifier	symbol_set		8094193	0					
ANR	8094286	PrimaryExpression	31		8094193	1					
ANR	8094287	AdditiveExpression	'A' - 1		8094193	1		-			
ANR	8094288	PrimaryExpression	'A'		8094193	0					
ANR	8094289	PrimaryExpression	1		8094193	1					
ANR	8094290	ExpressionStatement	"stprintf ( s , ""<Esc>%cs%dp"" , paren , proportional )"	185:4:5598:5645	8094193	4	True				
ANR	8094291	CallExpression	"stprintf ( s , ""<Esc>%cs%dp"" , paren , proportional )"		8094193	0					
ANR	8094292	Callee	stprintf		8094193	0					
ANR	8094293	Identifier	stprintf		8094193	0					
ANR	8094294	ArgumentList	s		8094193	1					
ANR	8094295	Argument	s		8094193	0					
ANR	8094296	Identifier	s		8094193	0					
ANR	8094297	Argument	"""<Esc>%cs%dp"""		8094193	1					
ANR	8094298	PrimaryExpression	"""<Esc>%cs%dp"""		8094193	0					
ANR	8094299	Argument	paren		8094193	2					
ANR	8094300	Identifier	paren		8094193	0					
ANR	8094301	Argument	proportional		8094193	3					
ANR	8094302	Identifier	proportional		8094193	0					
ANR	8094303	IfStatement	if ( plfont -> scaling_technology == plfst_bitmap )		8094193	5					
ANR	8094304	Condition	plfont -> scaling_technology == plfst_bitmap	186:8:5655:5696	8094193	0	True				
ANR	8094305	EqualityExpression	plfont -> scaling_technology == plfst_bitmap		8094193	0		==			
ANR	8094306	PtrMemberAccess	plfont -> scaling_technology		8094193	0					
ANR	8094307	Identifier	plfont		8094193	0					
ANR	8094308	Identifier	scaling_technology		8094193	1					
ANR	8094309	Identifier	plfst_bitmap		8094193	1					
ANR	8094310	CompoundStatement		18:52:712:712	8094193	1					
ANR	8094311	ExpressionStatement	"status_put_floating ( s , pl_fp_pitch_per_inch ( & plfont -> params ) )"	187:8:5729:5790	8094193	0	True				
ANR	8094312	CallExpression	"status_put_floating ( s , pl_fp_pitch_per_inch ( & plfont -> params ) )"		8094193	0					
ANR	8094313	Callee	status_put_floating		8094193	0					
ANR	8094314	Identifier	status_put_floating		8094193	0					
ANR	8094315	ArgumentList	s		8094193	1					
ANR	8094316	Argument	s		8094193	0					
ANR	8094317	Identifier	s		8094193	0					
ANR	8094318	Argument	pl_fp_pitch_per_inch ( & plfont -> params )		8094193	1					
ANR	8094319	CallExpression	pl_fp_pitch_per_inch ( & plfont -> params )		8094193	0					
ANR	8094320	Callee	pl_fp_pitch_per_inch		8094193	0					
ANR	8094321	Identifier	pl_fp_pitch_per_inch		8094193	0					
ANR	8094322	ArgumentList	& plfont -> params		8094193	1					
ANR	8094323	Argument	& plfont -> params		8094193	0					
ANR	8094324	UnaryOperationExpression	& plfont -> params		8094193	0					
ANR	8094325	UnaryOperator	&		8094193	0					
ANR	8094326	PtrMemberAccess	plfont -> params		8094193	1					
ANR	8094327	Identifier	plfont		8094193	0					
ANR	8094328	Identifier	params		8094193	1					
ANR	8094329	ExpressionStatement	"stputs ( s , ""h"" )"	188:8:5800:5814	8094193	1	True				
ANR	8094330	CallExpression	"stputs ( s , ""h"" )"		8094193	0					
ANR	8094331	Callee	stputs		8094193	0					
ANR	8094332	Identifier	stputs		8094193	0					
ANR	8094333	ArgumentList	s		8094193	1					
ANR	8094334	Argument	s		8094193	0					
ANR	8094335	Identifier	s		8094193	0					
ANR	8094336	Argument	"""h"""		8094193	1					
ANR	8094337	PrimaryExpression	"""h"""		8094193	0					
ANR	8094338	ExpressionStatement	"status_put_floating ( s , plfont -> params . height_4ths / 4.0 )"	189:8:5824:5880	8094193	2	True				
ANR	8094339	CallExpression	"status_put_floating ( s , plfont -> params . height_4ths / 4.0 )"		8094193	0					
ANR	8094340	Callee	status_put_floating		8094193	0					
ANR	8094341	Identifier	status_put_floating		8094193	0					
ANR	8094342	ArgumentList	s		8094193	1					
ANR	8094343	Argument	s		8094193	0					
ANR	8094344	Identifier	s		8094193	0					
ANR	8094345	Argument	plfont -> params . height_4ths / 4.0		8094193	1					
ANR	8094346	MultiplicativeExpression	plfont -> params . height_4ths / 4.0		8094193	0		/			
ANR	8094347	MemberAccess	plfont -> params . height_4ths		8094193	0					
ANR	8094348	PtrMemberAccess	plfont -> params		8094193	0					
ANR	8094349	Identifier	plfont		8094193	0					
ANR	8094350	Identifier	params		8094193	1					
ANR	8094351	Identifier	height_4ths		8094193	1					
ANR	8094352	PrimaryExpression	4.0		8094193	1					
ANR	8094353	ExpressionStatement	"stputs ( s , ""v"" )"	190:8:5890:5904	8094193	3	True				
ANR	8094354	CallExpression	"stputs ( s , ""v"" )"		8094193	0					
ANR	8094355	Callee	stputs		8094193	0					
ANR	8094356	Identifier	stputs		8094193	0					
ANR	8094357	ArgumentList	s		8094193	1					
ANR	8094358	Argument	s		8094193	0					
ANR	8094359	Identifier	s		8094193	0					
ANR	8094360	Argument	"""v"""		8094193	1					
ANR	8094361	PrimaryExpression	"""v"""		8094193	0					
ANR	8094362	ElseStatement	else		8094193	0					
ANR	8094363	CompoundStatement		23:11:930:930	8094193	0					
ANR	8094364	IfStatement	if ( font_set > 0 )		8094193	0					
ANR	8094365	Condition	font_set > 0	193:12:5995:6006	8094193	0	True				
ANR	8094366	RelationalExpression	font_set > 0		8094193	0		>			
ANR	8094367	Identifier	font_set		8094193	0					
ANR	8094368	PrimaryExpression	0		8094193	1					
ANR	8094369	CompoundStatement		25:26:1022:1022	8094193	1					
ANR	8094370	IfStatement	if ( proportional )		8094193	0					
ANR	8094371	Condition	proportional	196:16:6160:6171	8094193	0	True				
ANR	8094372	Identifier	proportional		8094193	0					
ANR	8094373	CompoundStatement		28:30:1187:1187	8094193	1					
ANR	8094374	ExpressionStatement	"status_put_floating ( s , pcs -> font_selection [ font_set ] . params . height_4ths / 4.0 )"	197:16:6192:6343	8094193	0	True				
ANR	8094375	CallExpression	"status_put_floating ( s , pcs -> font_selection [ font_set ] . params . height_4ths / 4.0 )"		8094193	0					
ANR	8094376	Callee	status_put_floating		8094193	0					
ANR	8094377	Identifier	status_put_floating		8094193	0					
ANR	8094378	ArgumentList	s		8094193	1					
ANR	8094379	Argument	s		8094193	0					
ANR	8094380	Identifier	s		8094193	0					
ANR	8094381	Argument	pcs -> font_selection [ font_set ] . params . height_4ths / 4.0		8094193	1					
ANR	8094382	MultiplicativeExpression	pcs -> font_selection [ font_set ] . params . height_4ths / 4.0		8094193	0		/			
ANR	8094383	MemberAccess	pcs -> font_selection [ font_set ] . params . height_4ths		8094193	0					
ANR	8094384	MemberAccess	pcs -> font_selection [ font_set ] . params		8094193	0					
ANR	8094385	ArrayIndexing	pcs -> font_selection [ font_set ]		8094193	0					
ANR	8094386	PtrMemberAccess	pcs -> font_selection		8094193	0					
ANR	8094387	Identifier	pcs		8094193	0					
ANR	8094388	Identifier	font_selection		8094193	1					
ANR	8094389	Identifier	font_set		8094193	1					
ANR	8094390	Identifier	params		8094193	1					
ANR	8094391	Identifier	height_4ths		8094193	1					
ANR	8094392	PrimaryExpression	4.0		8094193	1					
ANR	8094393	ExpressionStatement	"stputs ( s , ""h"" )"	200:16:6361:6375	8094193	1	True				
ANR	8094394	CallExpression	"stputs ( s , ""h"" )"		8094193	0					
ANR	8094395	Callee	stputs		8094193	0					
ANR	8094396	Identifier	stputs		8094193	0					
ANR	8094397	ArgumentList	s		8094193	1					
ANR	8094398	Argument	s		8094193	0					
ANR	8094399	Identifier	s		8094193	0					
ANR	8094400	Argument	"""h"""		8094193	1					
ANR	8094401	PrimaryExpression	"""h"""		8094193	0					
ANR	8094402	ElseStatement	else		8094193	0					
ANR	8094403	CompoundStatement		33:19:1409:1409	8094193	0					
ANR	8094404	ExpressionStatement	"status_put_floating ( s , pl_fp_pitch_per_inch ( & pcs -> font_selection [ font_set ] . params ) )"	202:16:6414:6649	8094193	0	True				
ANR	8094405	CallExpression	"status_put_floating ( s , pl_fp_pitch_per_inch ( & pcs -> font_selection [ font_set ] . params ) )"		8094193	0					
ANR	8094406	Callee	status_put_floating		8094193	0					
ANR	8094407	Identifier	status_put_floating		8094193	0					
ANR	8094408	ArgumentList	s		8094193	1					
ANR	8094409	Argument	s		8094193	0					
ANR	8094410	Identifier	s		8094193	0					
ANR	8094411	Argument	pl_fp_pitch_per_inch ( & pcs -> font_selection [ font_set ] . params )		8094193	1					
ANR	8094412	CallExpression	pl_fp_pitch_per_inch ( & pcs -> font_selection [ font_set ] . params )		8094193	0					
ANR	8094413	Callee	pl_fp_pitch_per_inch		8094193	0					
ANR	8094414	Identifier	pl_fp_pitch_per_inch		8094193	0					
ANR	8094415	ArgumentList	& pcs -> font_selection [ font_set ] . params		8094193	1					
ANR	8094416	Argument	& pcs -> font_selection [ font_set ] . params		8094193	0					
ANR	8094417	UnaryOperationExpression	& pcs -> font_selection [ font_set ] . params		8094193	0					
ANR	8094418	UnaryOperator	&		8094193	0					
ANR	8094419	MemberAccess	pcs -> font_selection [ font_set ] . params		8094193	1					
ANR	8094420	ArrayIndexing	pcs -> font_selection [ font_set ]		8094193	0					
ANR	8094421	PtrMemberAccess	pcs -> font_selection		8094193	0					
ANR	8094422	Identifier	pcs		8094193	0					
ANR	8094423	Identifier	font_selection		8094193	1					
ANR	8094424	Identifier	font_set		8094193	1					
ANR	8094425	Identifier	params		8094193	1					
ANR	8094426	ExpressionStatement	"stputs ( s , ""v"" )"	206:16:6667:6681	8094193	1	True				
ANR	8094427	CallExpression	"stputs ( s , ""v"" )"		8094193	0					
ANR	8094428	Callee	stputs		8094193	0					
ANR	8094429	Identifier	stputs		8094193	0					
ANR	8094430	ArgumentList	s		8094193	1					
ANR	8094431	Argument	s		8094193	0					
ANR	8094432	Identifier	s		8094193	0					
ANR	8094433	Argument	"""v"""		8094193	1					
ANR	8094434	PrimaryExpression	"""v"""		8094193	0					
ANR	8094435	ElseStatement	else		8094193	0					
ANR	8094436	CompoundStatement		40:15:1725:1725	8094193	0					
ANR	8094437	ExpressionStatement	"stputs ( s , proportional ? ""__v"" : ""__h"" )"	209:12:6726:6765	8094193	0	True				
ANR	8094438	CallExpression	"stputs ( s , proportional ? ""__v"" : ""__h"" )"		8094193	0					
ANR	8094439	Callee	stputs		8094193	0					
ANR	8094440	Identifier	stputs		8094193	0					
ANR	8094441	ArgumentList	s		8094193	1					
ANR	8094442	Argument	s		8094193	0					
ANR	8094443	Identifier	s		8094193	0					
ANR	8094444	Argument	"proportional ? ""__v"" : ""__h"""		8094193	1					
ANR	8094445	ConditionalExpression	"proportional ? ""__v"" : ""__h"""		8094193	0					
ANR	8094446	Condition	proportional		8094193	0					
ANR	8094447	Identifier	proportional		8094193	0					
ANR	8094448	PrimaryExpression	"""__v"""		8094193	1					
ANR	8094449	PrimaryExpression	"""__h"""		8094193	2					
ANR	8094450	ExpressionStatement	"stprintf ( s , ""%ds%db%uT"" , plfont -> params . style , plfont -> params . stroke_weight , plfont -> params . typeface_family )"	212:4:6787:6908	8094193	6	True				
ANR	8094451	CallExpression	"stprintf ( s , ""%ds%db%uT"" , plfont -> params . style , plfont -> params . stroke_weight , plfont -> params . typeface_family )"		8094193	0					
ANR	8094452	Callee	stprintf		8094193	0					
ANR	8094453	Identifier	stprintf		8094193	0					
ANR	8094454	ArgumentList	s		8094193	1					
ANR	8094455	Argument	s		8094193	0					
ANR	8094456	Identifier	s		8094193	0					
ANR	8094457	Argument	"""%ds%db%uT"""		8094193	1					
ANR	8094458	PrimaryExpression	"""%ds%db%uT"""		8094193	0					
ANR	8094459	Argument	plfont -> params . style		8094193	2					
ANR	8094460	MemberAccess	plfont -> params . style		8094193	0					
ANR	8094461	PtrMemberAccess	plfont -> params		8094193	0					
ANR	8094462	Identifier	plfont		8094193	0					
ANR	8094463	Identifier	params		8094193	1					
ANR	8094464	Identifier	style		8094193	1					
ANR	8094465	Argument	plfont -> params . stroke_weight		8094193	3					
ANR	8094466	MemberAccess	plfont -> params . stroke_weight		8094193	0					
ANR	8094467	PtrMemberAccess	plfont -> params		8094193	0					
ANR	8094468	Identifier	plfont		8094193	0					
ANR	8094469	Identifier	params		8094193	1					
ANR	8094470	Identifier	stroke_weight		8094193	1					
ANR	8094471	Argument	plfont -> params . typeface_family		8094193	4					
ANR	8094472	MemberAccess	plfont -> params . typeface_family		8094193	0					
ANR	8094473	PtrMemberAccess	plfont -> params		8094193	0					
ANR	8094474	Identifier	plfont		8094193	0					
ANR	8094475	Identifier	params		8094193	1					
ANR	8094476	Identifier	typeface_family		8094193	1					
ANR	8094477	IfStatement	if ( plfont -> storage & pcds_downloaded )		8094193	7					
ANR	8094478	Condition	plfont -> storage & pcds_downloaded	214:8:6918:6950	8094193	0	True				
ANR	8094479	BitAndExpression	plfont -> storage & pcds_downloaded		8094193	0		&			
ANR	8094480	PtrMemberAccess	plfont -> storage		8094193	0					
ANR	8094481	Identifier	plfont		8094193	0					
ANR	8094482	Identifier	storage		8094193	1					
ANR	8094483	Identifier	pcds_downloaded		8094193	1					
ANR	8094484	ExpressionStatement	"stprintf ( s , ""<Esc>%c%uX"" , paren , font_id )"	215:8:6961:7002	8094193	1	True				
ANR	8094485	CallExpression	"stprintf ( s , ""<Esc>%c%uX"" , paren , font_id )"		8094193	0					
ANR	8094486	Callee	stprintf		8094193	0					
ANR	8094487	Identifier	stprintf		8094193	0					
ANR	8094488	ArgumentList	s		8094193	1					
ANR	8094489	Argument	s		8094193	0					
ANR	8094490	Identifier	s		8094193	0					
ANR	8094491	Argument	"""<Esc>%c%uX"""		8094193	1					
ANR	8094492	PrimaryExpression	"""<Esc>%c%uX"""		8094193	0					
ANR	8094493	Argument	paren		8094193	2					
ANR	8094494	Identifier	paren		8094193	0					
ANR	8094495	Argument	font_id		8094193	3					
ANR	8094496	Identifier	font_id		8094193	0					
ANR	8094497	ExpressionStatement	"stputs ( s , ""\\""\\r\\n"" )"	216:4:7008:7027	8094193	8	True				
ANR	8094498	CallExpression	"stputs ( s , ""\\""\\r\\n"" )"		8094193	0					
ANR	8094499	Callee	stputs		8094193	0					
ANR	8094500	Identifier	stputs		8094193	0					
ANR	8094501	ArgumentList	s		8094193	1					
ANR	8094502	Argument	s		8094193	0					
ANR	8094503	Identifier	s		8094193	0					
ANR	8094504	Argument	"""\\""\\r\\n"""		8094193	1					
ANR	8094505	PrimaryExpression	"""\\""\\r\\n"""		8094193	0					
ANR	8094506	IfStatement	if ( ! pl_font_is_bound ( plfont ) && font_set < 0 )		8094193	9					
ANR	8094507	Condition	! pl_font_is_bound ( plfont ) && font_set < 0	217:8:7037:7077	8094193	0	True				
ANR	8094508	AndExpression	! pl_font_is_bound ( plfont ) && font_set < 0		8094193	0		&&			
ANR	8094509	UnaryOperationExpression	! pl_font_is_bound ( plfont )		8094193	0					
ANR	8094510	UnaryOperator	!		8094193	0					
ANR	8094511	CallExpression	pl_font_is_bound ( plfont )		8094193	1					
ANR	8094512	Callee	pl_font_is_bound		8094193	0					
ANR	8094513	Identifier	pl_font_is_bound		8094193	0					
ANR	8094514	ArgumentList	plfont		8094193	1					
ANR	8094515	Argument	plfont		8094193	0					
ANR	8094516	Identifier	plfont		8094193	0					
ANR	8094517	RelationalExpression	font_set < 0		8094193	1		<			
ANR	8094518	Identifier	font_set		8094193	0					
ANR	8094519	PrimaryExpression	0		8094193	1					
ANR	8094520	CompoundStatement		54:8:2203:2214	8094193	1					
ANR	8094521	IdentifierDeclStatement	int nid ;	218:8:7090:7097	8094193	0	True				
ANR	8094522	IdentifierDecl	nid		8094193	0					
ANR	8094523	IdentifierDeclType	int		8094193	0					
ANR	8094524	Identifier	nid		8094193	1					
ANR	8094525	IdentifierDeclStatement	ushort * idlist ;	219:8:7107:7121	8094193	1	True				
ANR	8094526	IdentifierDecl	* idlist		8094193	0					
ANR	8094527	IdentifierDeclType	ushort *		8094193	0					
ANR	8094528	Identifier	idlist		8094193	1					
ANR	8094529	IdentifierDeclStatement	pl_dict_enum_t denum ;	220:8:7131:7151	8094193	2	True				
ANR	8094530	IdentifierDecl	denum		8094193	0					
ANR	8094531	IdentifierDeclType	pl_dict_enum_t		8094193	0					
ANR	8094532	Identifier	denum		8094193	1					
ANR	8094533	IdentifierDeclStatement	gs_const_string key ;	221:8:7161:7180	8094193	3	True				
ANR	8094534	IdentifierDecl	key		8094193	0					
ANR	8094535	IdentifierDeclType	gs_const_string		8094193	0					
ANR	8094536	Identifier	key		8094193	1					
ANR	8094537	IdentifierDeclStatement	void * value ;	222:8:7190:7201	8094193	4	True				
ANR	8094538	IdentifierDecl	* value		8094193	0					
ANR	8094539	IdentifierDeclType	void *		8094193	0					
ANR	8094540	Identifier	value		8094193	1					
ANR	8094541	ExpressionStatement	"idlist = ( ushort * ) gs_alloc_bytes ( pcs -> memory , pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false ) , ""status_fonts(idlist)"" )"	224:8:7212:7745	8094193	5	True				
ANR	8094542	AssignmentExpression	"idlist = ( ushort * ) gs_alloc_bytes ( pcs -> memory , pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false ) , ""status_fonts(idlist)"" )"		8094193	0		=			
ANR	8094543	Identifier	idlist		8094193	0					
ANR	8094544	CastExpression	"( ushort * ) gs_alloc_bytes ( pcs -> memory , pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false ) , ""status_fonts(idlist)"" )"		8094193	1					
ANR	8094545	CastTarget	ushort *		8094193	0					
ANR	8094546	CallExpression	"gs_alloc_bytes ( pcs -> memory , pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false ) , ""status_fonts(idlist)"" )"		8094193	1					
ANR	8094547	Callee	gs_alloc_bytes		8094193	0					
ANR	8094548	Identifier	gs_alloc_bytes		8094193	0					
ANR	8094549	ArgumentList	pcs -> memory		8094193	1					
ANR	8094550	Argument	pcs -> memory		8094193	0					
ANR	8094551	PtrMemberAccess	pcs -> memory		8094193	0					
ANR	8094552	Identifier	pcs		8094193	0					
ANR	8094553	Identifier	memory		8094193	1					
ANR	8094554	Argument	"pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false )"		8094193	1					
ANR	8094555	AdditiveExpression	"pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false )"		8094193	0		+			
ANR	8094556	CallExpression	"pl_dict_length ( & pcs -> soft_symbol_sets , false )"		8094193	0					
ANR	8094557	Callee	pl_dict_length		8094193	0					
ANR	8094558	Identifier	pl_dict_length		8094193	0					
ANR	8094559	ArgumentList	& pcs -> soft_symbol_sets		8094193	1					
ANR	8094560	Argument	& pcs -> soft_symbol_sets		8094193	0					
ANR	8094561	UnaryOperationExpression	& pcs -> soft_symbol_sets		8094193	0					
ANR	8094562	UnaryOperator	&		8094193	0					
ANR	8094563	PtrMemberAccess	pcs -> soft_symbol_sets		8094193	1					
ANR	8094564	Identifier	pcs		8094193	0					
ANR	8094565	Identifier	soft_symbol_sets		8094193	1					
ANR	8094566	Argument	false		8094193	1					
ANR	8094567	Identifier	false		8094193	0					
ANR	8094568	CallExpression	"pl_dict_length ( & pcs -> built_in_symbol_sets , false )"		8094193	1					
ANR	8094569	Callee	pl_dict_length		8094193	0					
ANR	8094570	Identifier	pl_dict_length		8094193	0					
ANR	8094571	ArgumentList	& pcs -> built_in_symbol_sets		8094193	1					
ANR	8094572	Argument	& pcs -> built_in_symbol_sets		8094193	0					
ANR	8094573	UnaryOperationExpression	& pcs -> built_in_symbol_sets		8094193	0					
ANR	8094574	UnaryOperator	&		8094193	0					
ANR	8094575	PtrMemberAccess	pcs -> built_in_symbol_sets		8094193	1					
ANR	8094576	Identifier	pcs		8094193	0					
ANR	8094577	Identifier	built_in_symbol_sets		8094193	1					
ANR	8094578	Argument	false		8094193	1					
ANR	8094579	Identifier	false		8094193	0					
ANR	8094580	Argument	"""status_fonts(idlist)"""		8094193	2					
ANR	8094581	PrimaryExpression	"""status_fonts(idlist)"""		8094193	0					
ANR	8094582	IfStatement	if ( idlist == NULL )		8094193	6					
ANR	8094583	Condition	idlist == NULL	232:12:7759:7772	8094193	0	True				
ANR	8094584	EqualityExpression	idlist == NULL		8094193	0		==			
ANR	8094585	Identifier	idlist		8094193	0					
ANR	8094586	Identifier	NULL		8094193	1					
ANR	8094587	ReturnStatement	return e_Memory ;	233:12:7787:7802	8094193	1	True				
ANR	8094588	Identifier	e_Memory		8094193	0					
ANR	8094589	ExpressionStatement	nid = 0	234:8:7812:7819	8094193	7	True				
ANR	8094590	AssignmentExpression	nid = 0		8094193	0		=			
ANR	8094591	Identifier	nid		8094193	0					
ANR	8094592	PrimaryExpression	0		8094193	1					
ANR	8094593	ExpressionStatement	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , & pcs -> built_in_symbol_sets )"	239:8:8027:8124	8094193	8	True				
ANR	8094594	CallExpression	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , & pcs -> built_in_symbol_sets )"		8094193	0					
ANR	8094595	Callee	pl_dict_set_parent		8094193	0					
ANR	8094596	Identifier	pl_dict_set_parent		8094193	0					
ANR	8094597	ArgumentList	& pcs -> soft_symbol_sets		8094193	1					
ANR	8094598	Argument	& pcs -> soft_symbol_sets		8094193	0					
ANR	8094599	UnaryOperationExpression	& pcs -> soft_symbol_sets		8094193	0					
ANR	8094600	UnaryOperator	&		8094193	0					
ANR	8094601	PtrMemberAccess	pcs -> soft_symbol_sets		8094193	1					
ANR	8094602	Identifier	pcs		8094193	0					
ANR	8094603	Identifier	soft_symbol_sets		8094193	1					
ANR	8094604	Argument	& pcs -> built_in_symbol_sets		8094193	1					
ANR	8094605	UnaryOperationExpression	& pcs -> built_in_symbol_sets		8094193	0					
ANR	8094606	UnaryOperator	&		8094193	0					
ANR	8094607	PtrMemberAccess	pcs -> built_in_symbol_sets		8094193	1					
ANR	8094608	Identifier	pcs		8094193	0					
ANR	8094609	Identifier	built_in_symbol_sets		8094193	1					
ANR	8094610	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> soft_symbol_sets , & denum )"	241:8:8134:8184	8094193	9	True				
ANR	8094611	CallExpression	"pl_dict_enum_begin ( & pcs -> soft_symbol_sets , & denum )"		8094193	0					
ANR	8094612	Callee	pl_dict_enum_begin		8094193	0					
ANR	8094613	Identifier	pl_dict_enum_begin		8094193	0					
ANR	8094614	ArgumentList	& pcs -> soft_symbol_sets		8094193	1					
ANR	8094615	Argument	& pcs -> soft_symbol_sets		8094193	0					
ANR	8094616	UnaryOperationExpression	& pcs -> soft_symbol_sets		8094193	0					
ANR	8094617	UnaryOperator	&		8094193	0					
ANR	8094618	PtrMemberAccess	pcs -> soft_symbol_sets		8094193	1					
ANR	8094619	Identifier	pcs		8094193	0					
ANR	8094620	Identifier	soft_symbol_sets		8094193	1					
ANR	8094621	Argument	& denum		8094193	1					
ANR	8094622	UnaryOperationExpression	& denum		8094193	0					
ANR	8094623	UnaryOperator	&		8094193	0					
ANR	8094624	Identifier	denum		8094193	1					
ANR	8094625	WhileStatement	"while ( pl_dict_enum_next ( & denum , & key , & value ) )"		8094193	10					
ANR	8094626	Condition	"pl_dict_enum_next ( & denum , & key , & value )"	242:15:8201:8239	8094193	0	True				
ANR	8094627	CallExpression	"pl_dict_enum_next ( & denum , & key , & value )"		8094193	0					
ANR	8094628	Callee	pl_dict_enum_next		8094193	0					
ANR	8094629	Identifier	pl_dict_enum_next		8094193	0					
ANR	8094630	ArgumentList	& denum		8094193	1					
ANR	8094631	Argument	& denum		8094193	0					
ANR	8094632	UnaryOperationExpression	& denum		8094193	0					
ANR	8094633	UnaryOperator	&		8094193	0					
ANR	8094634	Identifier	denum		8094193	1					
ANR	8094635	Argument	& key		8094193	1					
ANR	8094636	UnaryOperationExpression	& key		8094193	0					
ANR	8094637	UnaryOperator	&		8094193	0					
ANR	8094638	Identifier	key		8094193	1					
ANR	8094639	Argument	& value		8094193	2					
ANR	8094640	UnaryOperationExpression	& value		8094193	0					
ANR	8094641	UnaryOperator	&		8094193	0					
ANR	8094642	Identifier	value		8094193	1					
ANR	8094643	CompoundStatement		76:12:3333:3357	8094193	1					
ANR	8094644	IdentifierDeclStatement	pcl_symbol_set_t * ssp = ( pcl_symbol_set_t * ) value ;	243:12:8256:8306	8094193	0	True				
ANR	8094645	IdentifierDecl	* ssp = ( pcl_symbol_set_t * ) value		8094193	0					
ANR	8094646	IdentifierDeclType	pcl_symbol_set_t *		8094193	0					
ANR	8094647	Identifier	ssp		8094193	1					
ANR	8094648	AssignmentExpression	* ssp = ( pcl_symbol_set_t * ) value		8094193	2		=			
ANR	8094649	Identifier	ssp		8094193	0					
ANR	8094650	CastExpression	( pcl_symbol_set_t * ) value		8094193	1					
ANR	8094651	CastTarget	pcl_symbol_set_t *		8094193	0					
ANR	8094652	Identifier	value		8094193	1					
ANR	8094653	IdentifierDeclStatement	pl_glyph_vocabulary_t gx ;	244:12:8320:8344	8094193	1	True				
ANR	8094654	IdentifierDecl	gx		8094193	0					
ANR	8094655	IdentifierDeclType	pl_glyph_vocabulary_t		8094193	0					
ANR	8094656	Identifier	gx		8094193	1					
ANR	8094657	ForStatement	for ( gx = plgv_MSL ; gx < plgv_next ; gx ++ )		8094193	2					
ANR	8094658	ForInit	gx = plgv_MSL ;	246:17:8364:8377	8094193	0	True				
ANR	8094659	AssignmentExpression	gx = plgv_MSL		8094193	0		=			
ANR	8094660	Identifier	gx		8094193	0					
ANR	8094661	Identifier	plgv_MSL		8094193	1					
ANR	8094662	Condition	gx < plgv_next	246:32:8379:8392	8094193	1	True				
ANR	8094663	RelationalExpression	gx < plgv_next		8094193	0		<			
ANR	8094664	Identifier	gx		8094193	0					
ANR	8094665	Identifier	plgv_next		8094193	1					
ANR	8094666	PostIncDecOperationExpression	gx ++	246:48:8395:8398	8094193	2	True				
ANR	8094667	Identifier	gx		8094193	0					
ANR	8094668	IncDec	++		8094193	1					
ANR	8094669	IfStatement	"if ( ssp -> maps [ gx ] != NULL && pcl_check_symbol_support ( ssp -> maps [ gx ] -> character_requirements , plfont -> character_complement ) )"		8094193	3					
ANR	8094670	Condition	"ssp -> maps [ gx ] != NULL && pcl_check_symbol_support ( ssp -> maps [ gx ] -> character_requirements , plfont -> character_complement )"	247:20:8421:8649	8094193	0	True				
ANR	8094671	AndExpression	"ssp -> maps [ gx ] != NULL && pcl_check_symbol_support ( ssp -> maps [ gx ] -> character_requirements , plfont -> character_complement )"		8094193	0		&&			
ANR	8094672	EqualityExpression	ssp -> maps [ gx ] != NULL		8094193	0		!=			
ANR	8094673	ArrayIndexing	ssp -> maps [ gx ]		8094193	0					
ANR	8094674	PtrMemberAccess	ssp -> maps		8094193	0					
ANR	8094675	Identifier	ssp		8094193	0					
ANR	8094676	Identifier	maps		8094193	1					
ANR	8094677	Identifier	gx		8094193	1					
ANR	8094678	Identifier	NULL		8094193	1					
ANR	8094679	CallExpression	"pcl_check_symbol_support ( ssp -> maps [ gx ] -> character_requirements , plfont -> character_complement )"		8094193	1					
ANR	8094680	Callee	pcl_check_symbol_support		8094193	0					
ANR	8094681	Identifier	pcl_check_symbol_support		8094193	0					
ANR	8094682	ArgumentList	ssp -> maps [ gx ] -> character_requirements		8094193	1					
ANR	8094683	Argument	ssp -> maps [ gx ] -> character_requirements		8094193	0					
ANR	8094684	PtrMemberAccess	ssp -> maps [ gx ] -> character_requirements		8094193	0					
ANR	8094685	ArrayIndexing	ssp -> maps [ gx ]		8094193	0					
ANR	8094686	PtrMemberAccess	ssp -> maps		8094193	0					
ANR	8094687	Identifier	ssp		8094193	0					
ANR	8094688	Identifier	maps		8094193	1					
ANR	8094689	Identifier	gx		8094193	1					
ANR	8094690	Identifier	character_requirements		8094193	1					
ANR	8094691	Argument	plfont -> character_complement		8094193	1					
ANR	8094692	PtrMemberAccess	plfont -> character_complement		8094193	0					
ANR	8094693	Identifier	plfont		8094193	0					
ANR	8094694	Identifier	character_complement		8094193	1					
ANR	8094695	CompoundStatement		82:76:3665:3665	8094193	1					
ANR	8094696	ExpressionStatement	"nid = status_add_symbol_id ( idlist , nid , ( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ] )"	251:20:8674:8879	8094193	0	True				
ANR	8094697	AssignmentExpression	"nid = status_add_symbol_id ( idlist , nid , ( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ] )"		8094193	0		=			
ANR	8094698	Identifier	nid		8094193	0					
ANR	8094699	CallExpression	"status_add_symbol_id ( idlist , nid , ( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ] )"		8094193	1					
ANR	8094700	Callee	status_add_symbol_id		8094193	0					
ANR	8094701	Identifier	status_add_symbol_id		8094193	0					
ANR	8094702	ArgumentList	idlist		8094193	1					
ANR	8094703	Argument	idlist		8094193	0					
ANR	8094704	Identifier	idlist		8094193	0					
ANR	8094705	Argument	nid		8094193	1					
ANR	8094706	Identifier	nid		8094193	0					
ANR	8094707	Argument	( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ]		8094193	2					
ANR	8094708	AdditiveExpression	( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ]		8094193	0		+			
ANR	8094709	ShiftExpression	ssp -> maps [ gx ] -> id [ 0 ] << 8		8094193	0		<<			
ANR	8094710	ArrayIndexing	ssp -> maps [ gx ] -> id [ 0 ]		8094193	0					
ANR	8094711	PtrMemberAccess	ssp -> maps [ gx ] -> id		8094193	0					
ANR	8094712	ArrayIndexing	ssp -> maps [ gx ]		8094193	0					
ANR	8094713	PtrMemberAccess	ssp -> maps		8094193	0					
ANR	8094714	Identifier	ssp		8094193	0					
ANR	8094715	Identifier	maps		8094193	1					
ANR	8094716	Identifier	gx		8094193	1					
ANR	8094717	Identifier	id		8094193	1					
ANR	8094718	PrimaryExpression	0		8094193	1					
ANR	8094719	PrimaryExpression	8		8094193	1					
ANR	8094720	ArrayIndexing	ssp -> maps [ gx ] -> id [ 1 ]		8094193	1					
ANR	8094721	PtrMemberAccess	ssp -> maps [ gx ] -> id		8094193	0					
ANR	8094722	ArrayIndexing	ssp -> maps [ gx ]		8094193	0					
ANR	8094723	PtrMemberAccess	ssp -> maps		8094193	0					
ANR	8094724	Identifier	ssp		8094193	0					
ANR	8094725	Identifier	maps		8094193	1					
ANR	8094726	Identifier	gx		8094193	1					
ANR	8094727	Identifier	id		8094193	1					
ANR	8094728	PrimaryExpression	1		8094193	1					
ANR	8094729	BreakStatement	break ;	255:20:8901:8906	8094193	1	True				
ANR	8094730	ExpressionStatement	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , NULL )"	258:8:8972:9020	8094193	11	True				
ANR	8094731	CallExpression	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , NULL )"		8094193	0					
ANR	8094732	Callee	pl_dict_set_parent		8094193	0					
ANR	8094733	Identifier	pl_dict_set_parent		8094193	0					
ANR	8094734	ArgumentList	& pcs -> soft_symbol_sets		8094193	1					
ANR	8094735	Argument	& pcs -> soft_symbol_sets		8094193	0					
ANR	8094736	UnaryOperationExpression	& pcs -> soft_symbol_sets		8094193	0					
ANR	8094737	UnaryOperator	&		8094193	0					
ANR	8094738	PtrMemberAccess	pcs -> soft_symbol_sets		8094193	1					
ANR	8094739	Identifier	pcs		8094193	0					
ANR	8094740	Identifier	soft_symbol_sets		8094193	1					
ANR	8094741	Argument	NULL		8094193	1					
ANR	8094742	Identifier	NULL		8094193	0					
ANR	8094743	ExpressionStatement	"gs_free_object ( pcs -> memory , ( void * ) idlist , ""status_fonts(idlist)"" )"	261:8:9077:9144	8094193	12	True				
ANR	8094744	CallExpression	"gs_free_object ( pcs -> memory , ( void * ) idlist , ""status_fonts(idlist)"" )"		8094193	0					
ANR	8094745	Callee	gs_free_object		8094193	0					
ANR	8094746	Identifier	gs_free_object		8094193	0					
ANR	8094747	ArgumentList	pcs -> memory		8094193	1					
ANR	8094748	Argument	pcs -> memory		8094193	0					
ANR	8094749	PtrMemberAccess	pcs -> memory		8094193	0					
ANR	8094750	Identifier	pcs		8094193	0					
ANR	8094751	Identifier	memory		8094193	1					
ANR	8094752	Argument	( void * ) idlist		8094193	1					
ANR	8094753	CastExpression	( void * ) idlist		8094193	0					
ANR	8094754	CastTarget	void *		8094193	0					
ANR	8094755	Identifier	idlist		8094193	1					
ANR	8094756	Argument	"""status_fonts(idlist)"""		8094193	2					
ANR	8094757	PrimaryExpression	"""status_fonts(idlist)"""		8094193	0					
ANR	8094758	IfStatement	if ( extended )		8094193	10					
ANR	8094759	Condition	extended	263:8:9160:9167	8094193	0	True				
ANR	8094760	Identifier	extended		8094193	0					
ANR	8094761	CompoundStatement		95:18:4183:4183	8094193	1					
ANR	8094762	IfStatement	if ( plfont -> storage & pcds_temporary )		8094193	0					
ANR	8094763	Condition	plfont -> storage & pcds_temporary	264:12:9236:9267	8094193	0	True				
ANR	8094764	BitAndExpression	plfont -> storage & pcds_temporary		8094193	0		&			
ANR	8094765	PtrMemberAccess	plfont -> storage		8094193	0					
ANR	8094766	Identifier	plfont		8094193	0					
ANR	8094767	Identifier	storage		8094193	1					
ANR	8094768	Identifier	pcds_temporary		8094193	1					
ANR	8094769	ExpressionStatement	"stputs ( s , ""DEFID=NONE\\r\\n"" )"	265:12:9282:9309	8094193	1	True				
ANR	8094770	CallExpression	"stputs ( s , ""DEFID=NONE\\r\\n"" )"		8094193	0					
ANR	8094771	Callee	stputs		8094193	0					
ANR	8094772	Identifier	stputs		8094193	0					
ANR	8094773	ArgumentList	s		8094193	1					
ANR	8094774	Argument	s		8094193	0					
ANR	8094775	Identifier	s		8094193	0					
ANR	8094776	Argument	"""DEFID=NONE\\r\\n"""		8094193	1					
ANR	8094777	PrimaryExpression	"""DEFID=NONE\\r\\n"""		8094193	0					
ANR	8094778	ElseStatement	else		8094193	0					
ANR	8094779	CompoundStatement		98:13:4337:4337	8094193	0					
ANR	8094780	ExpressionStatement	"stputs ( s , ""DEFID=\\"""" )"	267:12:9338:9359	8094193	0	True				
ANR	8094781	CallExpression	"stputs ( s , ""DEFID=\\"""" )"		8094193	0					
ANR	8094782	Callee	stputs		8094193	0					
ANR	8094783	Identifier	stputs		8094193	0					
ANR	8094784	ArgumentList	s		8094193	1					
ANR	8094785	Argument	s		8094193	0					
ANR	8094786	Identifier	s		8094193	0					
ANR	8094787	Argument	"""DEFID=\\"""""		8094193	1					
ANR	8094788	PrimaryExpression	"""DEFID=\\"""""		8094193	0					
ANR	8094789	IfStatement	if ( plfont -> storage & pcds_all_cartridges )		8094193	1					
ANR	8094790	Condition	plfont -> storage & pcds_all_cartridges	268:16:9377:9413	8094193	0	True				
ANR	8094791	BitAndExpression	plfont -> storage & pcds_all_cartridges		8094193	0		&			
ANR	8094792	PtrMemberAccess	plfont -> storage		8094193	0					
ANR	8094793	Identifier	plfont		8094193	0					
ANR	8094794	Identifier	storage		8094193	1					
ANR	8094795	Identifier	pcds_all_cartridges		8094193	1					
ANR	8094796	CompoundStatement		102:16:4470:4561	8094193	1					
ANR	8094797	IdentifierDeclStatement	int c ;	269:16:9434:9439	8094193	0	True				
ANR	8094798	IdentifierDecl	c		8094193	0					
ANR	8094799	IdentifierDeclType	int		8094193	0					
ANR	8094800	Identifier	c		8094193	1					
ANR	8094801	IdentifierDeclStatement	int n = ( plfont -> storage & pcds_all_cartridges ) >> pcds_cartridge_shift ;	270:16:9457:9548	8094193	1	True				
ANR	8094802	IdentifierDecl	n = ( plfont -> storage & pcds_all_cartridges ) >> pcds_cartridge_shift		8094193	0					
ANR	8094803	IdentifierDeclType	int		8094193	0					
ANR	8094804	Identifier	n		8094193	1					
ANR	8094805	AssignmentExpression	n = ( plfont -> storage & pcds_all_cartridges ) >> pcds_cartridge_shift		8094193	2		=			
ANR	8094806	Identifier	n		8094193	0					
ANR	8094807	ShiftExpression	( plfont -> storage & pcds_all_cartridges ) >> pcds_cartridge_shift		8094193	1		>>			
ANR	8094808	BitAndExpression	plfont -> storage & pcds_all_cartridges		8094193	0		&			
ANR	8094809	PtrMemberAccess	plfont -> storage		8094193	0					
ANR	8094810	Identifier	plfont		8094193	0					
ANR	8094811	Identifier	storage		8094193	1					
ANR	8094812	Identifier	pcds_all_cartridges		8094193	1					
ANR	8094813	Identifier	pcds_cartridge_shift		8094193	1					
ANR	8094814	ForStatement	for ( c = 0 ; ( n & 1 ) == 0 ; c ++ )		8094193	2					
ANR	8094815	ForInit	c = 0 ;	274:21:9634:9639	8094193	0	True				
ANR	8094816	AssignmentExpression	c = 0		8094193	0		=			
ANR	8094817	Identifier	c		8094193	0					
ANR	8094818	PrimaryExpression	0		8094193	1					
ANR	8094819	Condition	( n & 1 ) == 0	274:28:9641:9652	8094193	1	True				
ANR	8094820	EqualityExpression	( n & 1 ) == 0		8094193	0		==			
ANR	8094821	BitAndExpression	n & 1		8094193	0		&			
ANR	8094822	Identifier	n		8094193	0					
ANR	8094823	PrimaryExpression	1		8094193	1					
ANR	8094824	PrimaryExpression	0		8094193	1					
ANR	8094825	PostIncDecOperationExpression	c ++	274:42:9655:9657	8094193	2	True				
ANR	8094826	Identifier	c		8094193	0					
ANR	8094827	IncDec	++		8094193	1					
ANR	8094828	ExpressionStatement	n >>= 1	275:20:9680:9687	8094193	3	True				
ANR	8094829	AssignmentExpression	n >>= 1		8094193	0		>>=			
ANR	8094830	Identifier	n		8094193	0					
ANR	8094831	PrimaryExpression	1		8094193	1					
ANR	8094832	ExpressionStatement	"stprintf ( s , ""C%d "" , c )"	276:16:9705:9727	8094193	3	True				
ANR	8094833	CallExpression	"stprintf ( s , ""C%d "" , c )"		8094193	0					
ANR	8094834	Callee	stprintf		8094193	0					
ANR	8094835	Identifier	stprintf		8094193	0					
ANR	8094836	ArgumentList	s		8094193	1					
ANR	8094837	Argument	s		8094193	0					
ANR	8094838	Identifier	s		8094193	0					
ANR	8094839	Argument	"""C%d """		8094193	1					
ANR	8094840	PrimaryExpression	"""C%d """		8094193	0					
ANR	8094841	Argument	c		8094193	2					
ANR	8094842	Identifier	c		8094193	0					
ANR	8094843	ElseStatement	else		8094193	0					
ANR	8094844	IfStatement	if ( plfont -> storage & pcds_all_simms )		8094193	0					
ANR	8094845	Condition	plfont -> storage & pcds_all_simms	277:23:9752:9783	8094193	0	True				
ANR	8094846	BitAndExpression	plfont -> storage & pcds_all_simms		8094193	0		&			
ANR	8094847	PtrMemberAccess	plfont -> storage		8094193	0					
ANR	8094848	Identifier	plfont		8094193	0					
ANR	8094849	Identifier	storage		8094193	1					
ANR	8094850	Identifier	pcds_all_simms		8094193	1					
ANR	8094851	CompoundStatement		111:16:4840:4901	8094193	1					
ANR	8094852	IdentifierDeclStatement	int m ;	278:16:9804:9809	8094193	0	True				
ANR	8094853	IdentifierDecl	m		8094193	0					
ANR	8094854	IdentifierDeclType	int		8094193	0					
ANR	8094855	Identifier	m		8094193	1					
ANR	8094856	IdentifierDeclStatement	int n = ( plfont -> storage & pcds_all_simms ) >> pcds_simm_shift ;	279:16:9827:9888	8094193	1	True				
ANR	8094857	IdentifierDecl	n = ( plfont -> storage & pcds_all_simms ) >> pcds_simm_shift		8094193	0					
ANR	8094858	IdentifierDeclType	int		8094193	0					
ANR	8094859	Identifier	n		8094193	1					
ANR	8094860	AssignmentExpression	n = ( plfont -> storage & pcds_all_simms ) >> pcds_simm_shift		8094193	2		=			
ANR	8094861	Identifier	n		8094193	0					
ANR	8094862	ShiftExpression	( plfont -> storage & pcds_all_simms ) >> pcds_simm_shift		8094193	1		>>			
ANR	8094863	BitAndExpression	plfont -> storage & pcds_all_simms		8094193	0		&			
ANR	8094864	PtrMemberAccess	plfont -> storage		8094193	0					
ANR	8094865	Identifier	plfont		8094193	0					
ANR	8094866	Identifier	storage		8094193	1					
ANR	8094867	Identifier	pcds_all_simms		8094193	1					
ANR	8094868	Identifier	pcds_simm_shift		8094193	1					
ANR	8094869	ForStatement	for ( m = 0 ; ( n & 1 ) == 0 ; m ++ )		8094193	2					
ANR	8094870	ForInit	m = 0 ;	282:21:9969:9974	8094193	0	True				
ANR	8094871	AssignmentExpression	m = 0		8094193	0		=			
ANR	8094872	Identifier	m		8094193	0					
ANR	8094873	PrimaryExpression	0		8094193	1					
ANR	8094874	Condition	( n & 1 ) == 0	282:28:9976:9987	8094193	1	True				
ANR	8094875	EqualityExpression	( n & 1 ) == 0		8094193	0		==			
ANR	8094876	BitAndExpression	n & 1		8094193	0		&			
ANR	8094877	Identifier	n		8094193	0					
ANR	8094878	PrimaryExpression	1		8094193	1					
ANR	8094879	PrimaryExpression	0		8094193	1					
ANR	8094880	PostIncDecOperationExpression	m ++	282:42:9990:9992	8094193	2	True				
ANR	8094881	Identifier	m		8094193	0					
ANR	8094882	IncDec	++		8094193	1					
ANR	8094883	ExpressionStatement	n >>= 1	283:20:10015:10022	8094193	3	True				
ANR	8094884	AssignmentExpression	n >>= 1		8094193	0		>>=			
ANR	8094885	Identifier	n		8094193	0					
ANR	8094886	PrimaryExpression	1		8094193	1					
ANR	8094887	ExpressionStatement	"stprintf ( s , ""M%d "" , m )"	284:16:10040:10062	8094193	3	True				
ANR	8094888	CallExpression	"stprintf ( s , ""M%d "" , m )"		8094193	0					
ANR	8094889	Callee	stprintf		8094193	0					
ANR	8094890	Identifier	stprintf		8094193	0					
ANR	8094891	ArgumentList	s		8094193	1					
ANR	8094892	Argument	s		8094193	0					
ANR	8094893	Identifier	s		8094193	0					
ANR	8094894	Argument	"""M%d """		8094193	1					
ANR	8094895	PrimaryExpression	"""M%d """		8094193	0					
ANR	8094896	Argument	m		8094193	2					
ANR	8094897	Identifier	m		8094193	0					
ANR	8094898	ElseStatement	else		8094193	0					
ANR	8094899	ExpressionStatement	"stputs ( s , ( plfont -> storage & pcds_internal ) ? ""I "" : ""S "" )"	287:16:10150:10208	8094193	0	True				
ANR	8094900	CallExpression	"stputs ( s , ( plfont -> storage & pcds_internal ) ? ""I "" : ""S "" )"		8094193	0					
ANR	8094901	Callee	stputs		8094193	0					
ANR	8094902	Identifier	stputs		8094193	0					
ANR	8094903	ArgumentList	s		8094193	1					
ANR	8094904	Argument	s		8094193	0					
ANR	8094905	Identifier	s		8094193	0					
ANR	8094906	Argument	"( plfont -> storage & pcds_internal ) ? ""I "" : ""S """		8094193	1					
ANR	8094907	ConditionalExpression	"( plfont -> storage & pcds_internal ) ? ""I "" : ""S """		8094193	0					
ANR	8094908	Condition	plfont -> storage & pcds_internal		8094193	0					
ANR	8094909	BitAndExpression	plfont -> storage & pcds_internal		8094193	0		&			
ANR	8094910	PtrMemberAccess	plfont -> storage		8094193	0					
ANR	8094911	Identifier	plfont		8094193	0					
ANR	8094912	Identifier	storage		8094193	1					
ANR	8094913	Identifier	pcds_internal		8094193	1					
ANR	8094914	PrimaryExpression	"""I """		8094193	1					
ANR	8094915	PrimaryExpression	"""S """		8094193	2					
ANR	8094916	ExpressionStatement	"stprintf ( s , ""%d\\""\\r\\n"" , internal_id )"	288:12:10222:10258	8094193	2	True				
ANR	8094917	CallExpression	"stprintf ( s , ""%d\\""\\r\\n"" , internal_id )"		8094193	0					
ANR	8094918	Callee	stprintf		8094193	0					
ANR	8094919	Identifier	stprintf		8094193	0					
ANR	8094920	ArgumentList	s		8094193	1					
ANR	8094921	Argument	s		8094193	0					
ANR	8094922	Identifier	s		8094193	0					
ANR	8094923	Argument	"""%d\\""\\r\\n"""		8094193	1					
ANR	8094924	PrimaryExpression	"""%d\\""\\r\\n"""		8094193	0					
ANR	8094925	Argument	internal_id		8094193	2					
ANR	8094926	Identifier	internal_id		8094193	0					
ANR	8094927	IfStatement	if ( ( plfont -> storage & pcds_downloaded ) && plfont -> header != NULL )		8094193	1					
ANR	8094928	Condition	( plfont -> storage & pcds_downloaded ) && plfont -> header != NULL	294:12:10447:10507	8094193	0	True				
ANR	8094929	AndExpression	( plfont -> storage & pcds_downloaded ) && plfont -> header != NULL		8094193	0		&&			
ANR	8094930	BitAndExpression	plfont -> storage & pcds_downloaded		8094193	0		&			
ANR	8094931	PtrMemberAccess	plfont -> storage		8094193	0					
ANR	8094932	Identifier	plfont		8094193	0					
ANR	8094933	Identifier	storage		8094193	1					
ANR	8094934	Identifier	pcds_downloaded		8094193	1					
ANR	8094935	EqualityExpression	plfont -> header != NULL		8094193	1		!=			
ANR	8094936	PtrMemberAccess	plfont -> header		8094193	0					
ANR	8094937	Identifier	plfont		8094193	0					
ANR	8094938	Identifier	header		8094193	1					
ANR	8094939	Identifier	NULL		8094193	1					
ANR	8094940	CompoundStatement		129:12:5660:5723	8094193	1					
ANR	8094941	IdentifierDeclStatement	pcl_font_header_t * hdr = ( pcl_font_header_t * ) ( plfont -> header ) ;	297:12:10647:10710	8094193	0	True				
ANR	8094942	IdentifierDecl	* hdr = ( pcl_font_header_t * ) ( plfont -> header )		8094193	0					
ANR	8094943	IdentifierDeclType	pcl_font_header_t *		8094193	0					
ANR	8094944	Identifier	hdr		8094193	1					
ANR	8094945	AssignmentExpression	* hdr = ( pcl_font_header_t * ) ( plfont -> header )		8094193	2		=			
ANR	8094946	Identifier	hdr		8094193	0					
ANR	8094947	CastExpression	( pcl_font_header_t * ) ( plfont -> header )		8094193	1					
ANR	8094948	CastTarget	pcl_font_header_t *		8094193	0					
ANR	8094949	PtrMemberAccess	plfont -> header		8094193	1					
ANR	8094950	Identifier	plfont		8094193	0					
ANR	8094951	Identifier	header		8094193	1					
ANR	8094952	ExpressionStatement	"stprintf ( s , ""NAME=\\""%.16s\\""\\r\\n"" , hdr -> FontName )"	299:12:10725:10773	8094193	1	True				
ANR	8094953	CallExpression	"stprintf ( s , ""NAME=\\""%.16s\\""\\r\\n"" , hdr -> FontName )"		8094193	0					
ANR	8094954	Callee	stprintf		8094193	0					
ANR	8094955	Identifier	stprintf		8094193	0					
ANR	8094956	ArgumentList	s		8094193	1					
ANR	8094957	Argument	s		8094193	0					
ANR	8094958	Identifier	s		8094193	0					
ANR	8094959	Argument	"""NAME=\\""%.16s\\""\\r\\n"""		8094193	1					
ANR	8094960	PrimaryExpression	"""NAME=\\""%.16s\\""\\r\\n"""		8094193	0					
ANR	8094961	Argument	hdr -> FontName		8094193	2					
ANR	8094962	PtrMemberAccess	hdr -> FontName		8094193	0					
ANR	8094963	Identifier	hdr		8094193	0					
ANR	8094964	Identifier	FontName		8094193	1					
ANR	8094965	ReturnStatement	return 0 ;	302:4:10795:10803	8094193	11	True				
ANR	8094966	PrimaryExpression	0		8094193	0					
ANR	8094967	ReturnType	static int		8094193	1					
ANR	8094968	Identifier	status_put_font		8094193	2					
ANR	8094969	ParameterList	"stream * s , pcl_state_t * pcs , uint font_id , uint internal_id , pl_font_t * plfont , int font_set , bool extended"		8094193	3					
ANR	8094970	Parameter	stream * s	166:16:4842:4851	8094193	0	True				
ANR	8094971	ParameterType	stream *		8094193	0					
ANR	8094972	Identifier	s		8094193	1					
ANR	8094973	Parameter	pcl_state_t * pcs	166:28:4854:4870	8094193	1	True				
ANR	8094974	ParameterType	pcl_state_t *		8094193	0					
ANR	8094975	Identifier	pcs		8094193	1					
ANR	8094976	Parameter	uint font_id	167:16:4889:4900	8094193	2	True				
ANR	8094977	ParameterType	uint		8094193	0					
ANR	8094978	Identifier	font_id		8094193	1					
ANR	8094979	Parameter	uint internal_id	167:30:4903:4918	8094193	3	True				
ANR	8094980	ParameterType	uint		8094193	0					
ANR	8094981	Identifier	internal_id		8094193	1					
ANR	8094982	Parameter	pl_font_t * plfont	168:16:4937:4954	8094193	4	True				
ANR	8094983	ParameterType	pl_font_t *		8094193	0					
ANR	8094984	Identifier	plfont		8094193	1					
ANR	8094985	Parameter	int font_set	168:36:4957:4968	8094193	5	True				
ANR	8094986	ParameterType	int		8094193	0					
ANR	8094987	Identifier	font_set		8094193	1					
ANR	8094988	Parameter	bool extended	168:50:4971:4983	8094193	6	True				
ANR	8094989	ParameterType	bool		8094193	0					
ANR	8094990	Identifier	extended		8094193	1					
ANR	8094991	CFGEntryNode	ENTRY		8094193		True				
ANR	8094992	CFGExitNode	EXIT		8094193		True				
ANR	8094993	Symbol	plgv_MSL		8094193						
ANR	8094994	Symbol	plfont -> scaling_technology		8094193						
ANR	8094995	Symbol	plfont -> params . height_4ths		8094193						
ANR	8094996	Symbol	ssp -> maps [ gx ] -> character_requirements		8094193						
ANR	8094997	Symbol	& value		8094193						
ANR	8094998	Symbol	plfont -> header		8094193						
ANR	8094999	Symbol	nid		8094193						
ANR	8095000	Symbol	* pcs		8094193						
ANR	8095001	Symbol	plfont		8094193						
ANR	8095002	Symbol	* * * ssp		8094193						
ANR	8095003	Symbol	& pcs -> font_selection [ font_set ] . params		8094193						
ANR	8095004	Symbol	ssp		8094193						
ANR	8095005	Symbol	& denum		8094193						
ANR	8095006	Symbol	pcds_all_cartridges		8094193						
ANR	8095007	Symbol	pcs -> font_selection [ font_set ] . params		8094193						
ANR	8095008	Symbol	pcl_check_symbol_support		8094193						
ANR	8095009	Symbol	ssp -> maps [ gx ] -> id		8094193						
ANR	8095010	Symbol	pcs -> memory		8094193						
ANR	8095011	Symbol	plgv_next		8094193						
ANR	8095012	Symbol	ssp -> maps		8094193						
ANR	8095013	Symbol	* ssp -> maps		8094193						
ANR	8095014	Symbol	plfont -> params . proportional_spacing		8094193						
ANR	8095015	Symbol	pcs -> font_selection [ font_set ] . params . symbol_set		8094193						
ANR	8095016	Symbol	pcds_simm_shift		8094193						
ANR	8095017	Symbol	pl_fp_pitch_per_inch		8094193						
ANR	8095018	Symbol	font_set		8094193						
ANR	8095019	Symbol	NULL		8094193						
ANR	8095020	Symbol	internal_id		8094193						
ANR	8095021	Symbol	plfont -> storage		8094193						
ANR	8095022	Symbol	pcds_internal		8094193						
ANR	8095023	Symbol	* * * ssp -> maps		8094193						
ANR	8095024	Symbol	plfont -> params . stroke_weight		8094193						
ANR	8095025	Symbol	pcds_all_simms		8094193						
ANR	8095026	Symbol	pcs -> font_selection		8094193						
ANR	8095027	Symbol	* * * gx		8094193						
ANR	8095028	Symbol	proportional		8094193						
ANR	8095029	Symbol	plfont -> character_complement		8094193						
ANR	8095030	Symbol	* ssp -> maps [ gx ] -> id		8094193						
ANR	8095031	Symbol	& pcs -> soft_symbol_sets		8094193						
ANR	8095032	Symbol	plfont -> params . style		8094193						
ANR	8095033	Symbol	* * pcs		8094193						
ANR	8095034	Symbol	* gx		8094193						
ANR	8095035	Symbol	* font_set		8094193						
ANR	8095036	Symbol	& key		8094193						
ANR	8095037	Symbol	plfst_bitmap		8094193						
ANR	8095038	Symbol	& pcs -> built_in_symbol_sets		8094193						
ANR	8095039	Symbol	pcds_cartridge_shift		8094193						
ANR	8095040	Symbol	extended		8094193						
ANR	8095041	Symbol	pl_font_is_bound		8094193						
ANR	8095042	Symbol	paren		8094193						
ANR	8095043	Symbol	denum		8094193						
ANR	8095044	Symbol	e_Memory		8094193						
ANR	8095045	Symbol	idlist		8094193						
ANR	8095046	Symbol	symbol_set		8094193						
ANR	8095047	Symbol	plfont -> params . typeface_family		8094193						
ANR	8095048	Symbol	value		8094193						
ANR	8095049	Symbol	* * ssp -> maps		8094193						
ANR	8095050	Symbol	key		8094193						
ANR	8095051	Symbol	* * gx		8094193						
ANR	8095052	Symbol	* hdr		8094193						
ANR	8095053	Symbol	& plfont -> params		8094193						
ANR	8095054	Symbol	pcs		8094193						
ANR	8095055	Symbol	font_id		8094193						
ANR	8095056	Symbol	pl_dict_length		8094193						
ANR	8095057	Symbol	gs_alloc_bytes		8094193						
ANR	8095058	Symbol	c		8094193						
ANR	8095059	Symbol	plfont -> params . symbol_set		8094193						
ANR	8095060	Symbol	* * ssp		8094193						
ANR	8095061	Symbol	false		8094193						
ANR	8095062	Symbol	* pcs -> font_selection		8094193						
ANR	8095063	Symbol	pcds_downloaded		8094193						
ANR	8095064	Symbol	* * * * ssp		8094193						
ANR	8095065	Symbol	m		8094193						
ANR	8095066	Symbol	pl_dict_enum_next		8094193						
ANR	8095067	Symbol	n		8094193						
ANR	8095068	Symbol	gx		8094193						
ANR	8095069	Symbol	pcds_temporary		8094193						
ANR	8095070	Symbol	s		8094193						
ANR	8095071	Symbol	plfont -> params		8094193						
ANR	8095072	Symbol	hdr		8094193						
ANR	8095073	Symbol	* plfont		8094193						
ANR	8095074	Symbol	* ssp		8094193						
ANR	8095075	Symbol	status_add_symbol_id		8094193						
ANR	8095076	Symbol	pcs -> font_selection [ font_set ] . params . height_4ths		8094193						
ANR	8095077	Symbol	hdr -> FontName		8094193						
ANR	8095078	Function	status_end	307:0:10896:11606							
ANR	8095079	FunctionDef	"status_end (stream * s , pcl_state_t * pcs)"		8095078	0					
ANR	8095080	CompoundStatement		309:0:10950:11606	8095078	0					
ANR	8095081	IfStatement	if ( sendwp ( s ) )		8095078	0					
ANR	8095082	Condition	sendwp ( s )	310:8:10960:10968	8095078	0	True				
ANR	8095083	CallExpression	sendwp ( s )		8095078	0					
ANR	8095084	Callee	sendwp		8095078	0					
ANR	8095085	Identifier	sendwp		8095078	0					
ANR	8095086	ArgumentList	s		8095078	1					
ANR	8095087	Argument	s		8095078	0					
ANR	8095088	Identifier	s		8095078	0					
ANR	8095089	CompoundStatement		7:8:331:351	8095078	1					
ANR	8095090	Statement	static	312:8:11095:11100	8095078	0	True				
ANR	8095091	IdentifierDeclStatement	"const char * error_line = ""ERROR=INTERNAL ERROR\\r\\n"" ;"	312:15:11102:11153	8095078	1	True				
ANR	8095092	IdentifierDecl	"* error_line = ""ERROR=INTERNAL ERROR\\r\\n"""		8095078	0					
ANR	8095093	IdentifierDeclType	const char *		8095078	0					
ANR	8095094	Identifier	error_line		8095078	1					
ANR	8095095	AssignmentExpression	"* error_line = ""ERROR=INTERNAL ERROR\\r\\n"""		8095078	2		=			
ANR	8095096	Identifier	error_line		8095078	0					
ANR	8095097	PrimaryExpression	"""ERROR=INTERNAL ERROR\\r\\n"""		8095078	1					
ANR	8095098	IdentifierDeclStatement	int error_size = strlen ( error_line ) + 1 ;	313:8:11163:11202	8095078	2	True				
ANR	8095099	IdentifierDecl	error_size = strlen ( error_line ) + 1		8095078	0					
ANR	8095100	IdentifierDeclType	int		8095078	0					
ANR	8095101	Identifier	error_size		8095078	1					
ANR	8095102	AssignmentExpression	error_size = strlen ( error_line ) + 1		8095078	2		=			
ANR	8095103	Identifier	error_size		8095078	0					
ANR	8095104	AdditiveExpression	strlen ( error_line ) + 1		8095078	1		+			
ANR	8095105	CallExpression	strlen ( error_line )		8095078	0					
ANR	8095106	Callee	strlen		8095078	0					
ANR	8095107	Identifier	strlen		8095078	0					
ANR	8095108	ArgumentList	error_line		8095078	1					
ANR	8095109	Argument	error_line		8095078	0					
ANR	8095110	Identifier	error_line		8095078	0					
ANR	8095111	PrimaryExpression	1		8095078	1					
ANR	8095112	IdentifierDeclStatement	"uint limit = gs_object_size ( pcs -> memory , pcs -> status . buffer ) ;"	314:8:11212:11272	8095078	3	True				
ANR	8095113	IdentifierDecl	"limit = gs_object_size ( pcs -> memory , pcs -> status . buffer )"		8095078	0					
ANR	8095114	IdentifierDeclType	uint		8095078	0					
ANR	8095115	Identifier	limit		8095078	1					
ANR	8095116	AssignmentExpression	"limit = gs_object_size ( pcs -> memory , pcs -> status . buffer )"		8095078	2		=			
ANR	8095117	Identifier	limit		8095078	0					
ANR	8095118	CallExpression	"gs_object_size ( pcs -> memory , pcs -> status . buffer )"		8095078	1					
ANR	8095119	Callee	gs_object_size		8095078	0					
ANR	8095120	Identifier	gs_object_size		8095078	0					
ANR	8095121	ArgumentList	pcs -> memory		8095078	1					
ANR	8095122	Argument	pcs -> memory		8095078	0					
ANR	8095123	PtrMemberAccess	pcs -> memory		8095078	0					
ANR	8095124	Identifier	pcs		8095078	0					
ANR	8095125	Identifier	memory		8095078	1					
ANR	8095126	Argument	pcs -> status . buffer		8095078	1					
ANR	8095127	MemberAccess	pcs -> status . buffer		8095078	0					
ANR	8095128	PtrMemberAccess	pcs -> status		8095078	0					
ANR	8095129	Identifier	pcs		8095078	0					
ANR	8095130	Identifier	status		8095078	1					
ANR	8095131	Identifier	buffer		8095078	1					
ANR	8095132	IdentifierDeclStatement	uint wpos = stell ( s ) ;	315:8:11282:11302	8095078	4	True				
ANR	8095133	IdentifierDecl	wpos = stell ( s )		8095078	0					
ANR	8095134	IdentifierDeclType	uint		8095078	0					
ANR	8095135	Identifier	wpos		8095078	1					
ANR	8095136	AssignmentExpression	wpos = stell ( s )		8095078	2		=			
ANR	8095137	Identifier	wpos		8095078	0					
ANR	8095138	CallExpression	stell ( s )		8095078	1					
ANR	8095139	Callee	stell		8095078	0					
ANR	8095140	Identifier	stell		8095078	0					
ANR	8095141	ArgumentList	s		8095078	1					
ANR	8095142	Argument	s		8095078	0					
ANR	8095143	Identifier	s		8095078	0					
ANR	8095144	WhileStatement	while ( limit - wpos < error_size || pcs -> status . buffer [ wpos - 1 ] != '\\n' )		8095078	5					
ANR	8095145	Condition	limit - wpos < error_size || pcs -> status . buffer [ wpos - 1 ] != '\\n'	317:15:11320:11399	8095078	0	True				
ANR	8095146	OrExpression	limit - wpos < error_size || pcs -> status . buffer [ wpos - 1 ] != '\\n'		8095078	0		||			
ANR	8095147	RelationalExpression	limit - wpos < error_size		8095078	0		<			
ANR	8095148	AdditiveExpression	limit - wpos		8095078	0		-			
ANR	8095149	Identifier	limit		8095078	0					
ANR	8095150	Identifier	wpos		8095078	1					
ANR	8095151	Identifier	error_size		8095078	1					
ANR	8095152	EqualityExpression	pcs -> status . buffer [ wpos - 1 ] != '\\n'		8095078	1		!=			
ANR	8095153	ArrayIndexing	pcs -> status . buffer [ wpos - 1 ]		8095078	0					
ANR	8095154	MemberAccess	pcs -> status . buffer		8095078	0					
ANR	8095155	PtrMemberAccess	pcs -> status		8095078	0					
ANR	8095156	Identifier	pcs		8095078	0					
ANR	8095157	Identifier	status		8095078	1					
ANR	8095158	Identifier	buffer		8095078	1					
ANR	8095159	AdditiveExpression	wpos - 1		8095078	1		-			
ANR	8095160	Identifier	wpos		8095078	0					
ANR	8095161	PrimaryExpression	1		8095078	1					
ANR	8095162	PrimaryExpression	'\\n'		8095078	1					
ANR	8095163	ExpressionStatement	-- wpos	319:12:11414:11420	8095078	1	True				
ANR	8095164	UnaryExpression	-- wpos		8095078	0					
ANR	8095165	IncDec	--		8095078	0					
ANR	8095166	Identifier	wpos		8095078	1					
ANR	8095167	ExpressionStatement	s -> end_status = 0	320:8:11430:11447	8095078	6	True				
ANR	8095168	AssignmentExpression	s -> end_status = 0		8095078	0		=			
ANR	8095169	PtrMemberAccess	s -> end_status		8095078	0					
ANR	8095170	Identifier	s		8095078	0					
ANR	8095171	Identifier	end_status		8095078	1					
ANR	8095172	PrimaryExpression	0		8095078	1					
ANR	8095173	ExpressionStatement	"sseek ( s , wpos )"	321:8:11497:11511	8095078	7	True				
ANR	8095174	CallExpression	"sseek ( s , wpos )"		8095078	0					
ANR	8095175	Callee	sseek		8095078	0					
ANR	8095176	Identifier	sseek		8095078	0					
ANR	8095177	ArgumentList	s		8095078	1					
ANR	8095178	Argument	s		8095078	0					
ANR	8095179	Identifier	s		8095078	0					
ANR	8095180	Argument	wpos		8095078	1					
ANR	8095181	Identifier	wpos		8095078	0					
ANR	8095182	ExpressionStatement	"stputs ( s , error_line )"	322:8:11521:11542	8095078	8	True				
ANR	8095183	CallExpression	"stputs ( s , error_line )"		8095078	0					
ANR	8095184	Callee	stputs		8095078	0					
ANR	8095185	Identifier	stputs		8095078	0					
ANR	8095186	ArgumentList	s		8095078	1					
ANR	8095187	Argument	s		8095078	0					
ANR	8095188	Identifier	s		8095078	0					
ANR	8095189	Argument	error_line		8095078	1					
ANR	8095190	Identifier	error_line		8095078	0					
ANR	8095191	ExpressionStatement	"sputc ( s , FF )"	324:4:11554:11566	8095078	1	True				
ANR	8095192	CallExpression	"sputc ( s , FF )"		8095078	0					
ANR	8095193	Callee	sputc		8095078	0					
ANR	8095194	Identifier	sputc		8095078	0					
ANR	8095195	ArgumentList	s		8095078	1					
ANR	8095196	Argument	s		8095078	0					
ANR	8095197	Identifier	s		8095078	0					
ANR	8095198	Argument	FF		8095078	1					
ANR	8095199	Identifier	FF		8095078	0					
ANR	8095200	ExpressionStatement	pcs -> status . write_pos = stell ( s )	325:4:11572:11604	8095078	2	True				
ANR	8095201	AssignmentExpression	pcs -> status . write_pos = stell ( s )		8095078	0		=			
ANR	8095202	MemberAccess	pcs -> status . write_pos		8095078	0					
ANR	8095203	PtrMemberAccess	pcs -> status		8095078	0					
ANR	8095204	Identifier	pcs		8095078	0					
ANR	8095205	Identifier	status		8095078	1					
ANR	8095206	Identifier	write_pos		8095078	1					
ANR	8095207	CallExpression	stell ( s )		8095078	1					
ANR	8095208	Callee	stell		8095078	0					
ANR	8095209	Identifier	stell		8095078	0					
ANR	8095210	ArgumentList	s		8095078	1					
ANR	8095211	Argument	s		8095078	0					
ANR	8095212	Identifier	s		8095078	0					
ANR	8095213	ReturnType	static void		8095078	1					
ANR	8095214	Identifier	status_end		8095078	2					
ANR	8095215	ParameterList	"stream * s , pcl_state_t * pcs"		8095078	3					
ANR	8095216	Parameter	stream * s	308:11:10919:10928	8095078	0	True				
ANR	8095217	ParameterType	stream *		8095078	0					
ANR	8095218	Identifier	s		8095078	1					
ANR	8095219	Parameter	pcl_state_t * pcs	308:23:10931:10947	8095078	1	True				
ANR	8095220	ParameterType	pcl_state_t *		8095078	0					
ANR	8095221	Identifier	pcs		8095078	1					
ANR	8095222	CFGEntryNode	ENTRY		8095078		True				
ANR	8095223	CFGExitNode	EXIT		8095078		True				
ANR	8095224	Symbol	FF		8095078						
ANR	8095225	Symbol	pcs		8095078						
ANR	8095226	Symbol	sendwp		8095078						
ANR	8095227	Symbol	* pcs -> status		8095078						
ANR	8095228	Symbol	error_line		8095078						
ANR	8095229	Symbol	* pcs		8095078						
ANR	8095230	Symbol	wpos		8095078						
ANR	8095231	Symbol	gs_object_size		8095078						
ANR	8095232	Symbol	stell		8095078						
ANR	8095233	Symbol	strlen		8095078						
ANR	8095234	Symbol	s		8095078						
ANR	8095235	Symbol	pcs -> status		8095078						
ANR	8095236	Symbol	* * pcs		8095078						
ANR	8095237	Symbol	* wpos		8095078						
ANR	8095238	Symbol	pcs -> status . write_pos		8095078						
ANR	8095239	Symbol	limit		8095078						
ANR	8095240	Symbol	* pcs -> status . buffer		8095078						
ANR	8095241	Symbol	pcs -> memory		8095078						
ANR	8095242	Symbol	pcs -> status . buffer		8095078						
ANR	8095243	Symbol	s -> end_status		8095078						
ANR	8095244	Symbol	error_size		8095078						
ANR	8095245	Symbol	* s		8095078						
ANR	8095246	Function	status_do_fonts	331:0:11700:12476							
ANR	8095247	FunctionDef	"status_do_fonts (stream * s , pcl_state_t * pcs , pcl_data_storage_t storage , bool extended)"		8095246	0					
ANR	8095248	CompoundStatement		334:0:11817:12476	8095246	0					
ANR	8095249	IdentifierDeclStatement	gs_const_string key ;	335:4:11823:11842	8095246	0	True				
ANR	8095250	IdentifierDecl	key		8095246	0					
ANR	8095251	IdentifierDeclType	gs_const_string		8095246	0					
ANR	8095252	Identifier	key		8095246	1					
ANR	8095253	IdentifierDeclStatement	void * value ;	336:4:11848:11859	8095246	1	True				
ANR	8095254	IdentifierDecl	* value		8095246	0					
ANR	8095255	IdentifierDeclType	void *		8095246	0					
ANR	8095256	Identifier	value		8095246	1					
ANR	8095257	IdentifierDeclStatement	pl_dict_enum_t denum ;	337:4:11865:11885	8095246	2	True				
ANR	8095258	IdentifierDecl	denum		8095246	0					
ANR	8095259	IdentifierDeclType	pl_dict_enum_t		8095246	0					
ANR	8095260	Identifier	denum		8095246	1					
ANR	8095261	IdentifierDeclStatement	int res ;	338:4:11891:11898	8095246	3	True				
ANR	8095262	IdentifierDecl	res		8095246	0					
ANR	8095263	IdentifierDeclType	int		8095246	0					
ANR	8095264	Identifier	res		8095246	1					
ANR	8095265	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> soft_fonts , & denum )"	340:4:11905:11949	8095246	4	True				
ANR	8095266	CallExpression	"pl_dict_enum_begin ( & pcs -> soft_fonts , & denum )"		8095246	0					
ANR	8095267	Callee	pl_dict_enum_begin		8095246	0					
ANR	8095268	Identifier	pl_dict_enum_begin		8095246	0					
ANR	8095269	ArgumentList	& pcs -> soft_fonts		8095246	1					
ANR	8095270	Argument	& pcs -> soft_fonts		8095246	0					
ANR	8095271	UnaryOperationExpression	& pcs -> soft_fonts		8095246	0					
ANR	8095272	UnaryOperator	&		8095246	0					
ANR	8095273	PtrMemberAccess	pcs -> soft_fonts		8095246	1					
ANR	8095274	Identifier	pcs		8095246	0					
ANR	8095275	Identifier	soft_fonts		8095246	1					
ANR	8095276	Argument	& denum		8095246	1					
ANR	8095277	UnaryOperationExpression	& denum		8095246	0					
ANR	8095278	UnaryOperator	&		8095246	0					
ANR	8095279	Identifier	denum		8095246	1					
ANR	8095280	WhileStatement	"while ( pl_dict_enum_next ( & denum , & key , & value ) )"		8095246	5					
ANR	8095281	Condition	"pl_dict_enum_next ( & denum , & key , & value )"	341:11:11962:12000	8095246	0	True				
ANR	8095282	CallExpression	"pl_dict_enum_next ( & denum , & key , & value )"		8095246	0					
ANR	8095283	Callee	pl_dict_enum_next		8095246	0					
ANR	8095284	Identifier	pl_dict_enum_next		8095246	0					
ANR	8095285	ArgumentList	& denum		8095246	1					
ANR	8095286	Argument	& denum		8095246	0					
ANR	8095287	UnaryOperationExpression	& denum		8095246	0					
ANR	8095288	UnaryOperator	&		8095246	0					
ANR	8095289	Identifier	denum		8095246	1					
ANR	8095290	Argument	& key		8095246	1					
ANR	8095291	UnaryOperationExpression	& key		8095246	0					
ANR	8095292	UnaryOperator	&		8095246	0					
ANR	8095293	Identifier	key		8095246	1					
ANR	8095294	Argument	& value		8095246	2					
ANR	8095295	UnaryOperationExpression	& value		8095246	0					
ANR	8095296	UnaryOperator	&		8095246	0					
ANR	8095297	Identifier	value		8095246	1					
ANR	8095298	CompoundStatement		9:8:195:237	8095246	1					
ANR	8095299	IdentifierDeclStatement	uint id = ( key . data [ 0 ] << 8 ) + key . data [ 1 ] ;	342:8:12013:12055	8095246	0	True				
ANR	8095300	IdentifierDecl	id = ( key . data [ 0 ] << 8 ) + key . data [ 1 ]		8095246	0					
ANR	8095301	IdentifierDeclType	uint		8095246	0					
ANR	8095302	Identifier	id		8095246	1					
ANR	8095303	AssignmentExpression	id = ( key . data [ 0 ] << 8 ) + key . data [ 1 ]		8095246	2		=			
ANR	8095304	Identifier	id		8095246	0					
ANR	8095305	AdditiveExpression	( key . data [ 0 ] << 8 ) + key . data [ 1 ]		8095246	1		+			
ANR	8095306	ShiftExpression	key . data [ 0 ] << 8		8095246	0		<<			
ANR	8095307	ArrayIndexing	key . data [ 0 ]		8095246	0					
ANR	8095308	MemberAccess	key . data		8095246	0					
ANR	8095309	Identifier	key		8095246	0					
ANR	8095310	Identifier	data		8095246	1					
ANR	8095311	PrimaryExpression	0		8095246	1					
ANR	8095312	PrimaryExpression	8		8095246	1					
ANR	8095313	ArrayIndexing	key . data [ 1 ]		8095246	1					
ANR	8095314	MemberAccess	key . data		8095246	0					
ANR	8095315	Identifier	key		8095246	0					
ANR	8095316	Identifier	data		8095246	1					
ANR	8095317	PrimaryExpression	1		8095246	1					
ANR	8095318	IfStatement	if ( ( ( ( pl_font_t * ) value ) -> storage & storage ) != 0 || ( storage == 0 && pcs -> font == ( pl_font_t * ) value ) )		8095246	1					
ANR	8095319	Condition	( ( ( pl_font_t * ) value ) -> storage & storage ) != 0 || ( storage == 0 && pcs -> font == ( pl_font_t * ) value )	344:12:12070:12182	8095246	0	True				
ANR	8095320	OrExpression	( ( ( pl_font_t * ) value ) -> storage & storage ) != 0 || ( storage == 0 && pcs -> font == ( pl_font_t * ) value )		8095246	0		||			
ANR	8095321	EqualityExpression	( ( ( pl_font_t * ) value ) -> storage & storage ) != 0		8095246	0		!=			
ANR	8095322	BitAndExpression	( ( pl_font_t * ) value ) -> storage & storage		8095246	0		&			
ANR	8095323	PtrMemberAccess	( ( pl_font_t * ) value ) -> storage		8095246	0					
ANR	8095324	CastExpression	( pl_font_t * ) value		8095246	0					
ANR	8095325	CastTarget	pl_font_t *		8095246	0					
ANR	8095326	Identifier	value		8095246	1					
ANR	8095327	Identifier	storage		8095246	1					
ANR	8095328	Identifier	storage		8095246	1					
ANR	8095329	PrimaryExpression	0		8095246	1					
ANR	8095330	AndExpression	storage == 0 && pcs -> font == ( pl_font_t * ) value		8095246	1		&&			
ANR	8095331	EqualityExpression	storage == 0		8095246	0		==			
ANR	8095332	Identifier	storage		8095246	0					
ANR	8095333	PrimaryExpression	0		8095246	1					
ANR	8095334	EqualityExpression	pcs -> font == ( pl_font_t * ) value		8095246	1		==			
ANR	8095335	PtrMemberAccess	pcs -> font		8095246	0					
ANR	8095336	Identifier	pcs		8095246	0					
ANR	8095337	Identifier	font		8095246	1					
ANR	8095338	CastExpression	( pl_font_t * ) value		8095246	1					
ANR	8095339	CastTarget	pl_font_t *		8095246	0					
ANR	8095340	Identifier	value		8095246	1					
ANR	8095341	CompoundStatement		13:14:380:380	8095246	1					
ANR	8095342	ExpressionStatement	"res = status_put_font ( s , pcs , id , id , ( pl_font_t * ) value , ( storage != 0 ? - 1 : pcs -> font_selected ) , extended )"	347:12:12212:12390	8095246	0	True				
ANR	8095343	AssignmentExpression	"res = status_put_font ( s , pcs , id , id , ( pl_font_t * ) value , ( storage != 0 ? - 1 : pcs -> font_selected ) , extended )"		8095246	0		=			
ANR	8095344	Identifier	res		8095246	0					
ANR	8095345	CallExpression	"status_put_font ( s , pcs , id , id , ( pl_font_t * ) value , ( storage != 0 ? - 1 : pcs -> font_selected ) , extended )"		8095246	1					
ANR	8095346	Callee	status_put_font		8095246	0					
ANR	8095347	Identifier	status_put_font		8095246	0					
ANR	8095348	ArgumentList	s		8095246	1					
ANR	8095349	Argument	s		8095246	0					
ANR	8095350	Identifier	s		8095246	0					
ANR	8095351	Argument	pcs		8095246	1					
ANR	8095352	Identifier	pcs		8095246	0					
ANR	8095353	Argument	id		8095246	2					
ANR	8095354	Identifier	id		8095246	0					
ANR	8095355	Argument	id		8095246	3					
ANR	8095356	Identifier	id		8095246	0					
ANR	8095357	Argument	( pl_font_t * ) value		8095246	4					
ANR	8095358	CastExpression	( pl_font_t * ) value		8095246	0					
ANR	8095359	CastTarget	pl_font_t *		8095246	0					
ANR	8095360	Identifier	value		8095246	1					
ANR	8095361	Argument	storage != 0 ? - 1 : pcs -> font_selected		8095246	5					
ANR	8095362	ConditionalExpression	storage != 0 ? - 1 : pcs -> font_selected		8095246	0					
ANR	8095363	Condition	storage != 0		8095246	0					
ANR	8095364	EqualityExpression	storage != 0		8095246	0		!=			
ANR	8095365	Identifier	storage		8095246	0					
ANR	8095366	PrimaryExpression	0		8095246	1					
ANR	8095367	UnaryOperationExpression	- 1		8095246	1					
ANR	8095368	UnaryOperator	-		8095246	0					
ANR	8095369	PrimaryExpression	1		8095246	1					
ANR	8095370	PtrMemberAccess	pcs -> font_selected		8095246	2					
ANR	8095371	Identifier	pcs		8095246	0					
ANR	8095372	Identifier	font_selected		8095246	1					
ANR	8095373	Argument	extended		8095246	6					
ANR	8095374	Identifier	extended		8095246	0					
ANR	8095375	IfStatement	if ( res != 0 )		8095246	1					
ANR	8095376	Condition	res != 0	350:16:12408:12415	8095246	0	True				
ANR	8095377	EqualityExpression	res != 0		8095246	0		!=			
ANR	8095378	Identifier	res		8095246	0					
ANR	8095379	PrimaryExpression	0		8095246	1					
ANR	8095380	ReturnStatement	return res ;	351:16:12434:12444	8095246	1	True				
ANR	8095381	Identifier	res		8095246	0					
ANR	8095382	ReturnStatement	return 0 ;	354:4:12466:12474	8095246	6	True				
ANR	8095383	PrimaryExpression	0		8095246	0					
ANR	8095384	ReturnType	static int		8095246	1					
ANR	8095385	Identifier	status_do_fonts		8095246	2					
ANR	8095386	ParameterList	"stream * s , pcl_state_t * pcs , pcl_data_storage_t storage , bool extended"		8095246	3					
ANR	8095387	Parameter	stream * s	332:16:11727:11736	8095246	0	True				
ANR	8095388	ParameterType	stream *		8095246	0					
ANR	8095389	Identifier	s		8095246	1					
ANR	8095390	Parameter	pcl_state_t * pcs	332:28:11739:11755	8095246	1	True				
ANR	8095391	ParameterType	pcl_state_t *		8095246	0					
ANR	8095392	Identifier	pcs		8095246	1					
ANR	8095393	Parameter	pcl_data_storage_t storage	333:16:11774:11799	8095246	2	True				
ANR	8095394	ParameterType	pcl_data_storage_t		8095246	0					
ANR	8095395	Identifier	storage		8095246	1					
ANR	8095396	Parameter	bool extended	333:44:11802:11814	8095246	3	True				
ANR	8095397	ParameterType	bool		8095246	0					
ANR	8095398	Identifier	extended		8095246	1					
ANR	8095399	CFGEntryNode	ENTRY		8095246		True				
ANR	8095400	CFGExitNode	EXIT		8095246		True				
ANR	8095401	Symbol	* key . data		8095246						
ANR	8095402	Symbol	pcs		8095246						
ANR	8095403	Symbol	res		8095246						
ANR	8095404	Symbol	& key		8095246						
ANR	8095405	Symbol	& value		8095246						
ANR	8095406	Symbol	key . data		8095246						
ANR	8095407	Symbol	* key		8095246						
ANR	8095408	Symbol	* pcs		8095246						
ANR	8095409	Symbol	storage		8095246						
ANR	8095410	Symbol	extended		8095246						
ANR	8095411	Symbol	pl_dict_enum_next		8095246						
ANR	8095412	Symbol	pcs -> font		8095246						
ANR	8095413	Symbol	s		8095246						
ANR	8095414	Symbol	& denum		8095246						
ANR	8095415	Symbol	denum		8095246						
ANR	8095416	Symbol	& pcs -> soft_fonts		8095246						
ANR	8095417	Symbol	pcs -> font_selected		8095246						
ANR	8095418	Symbol	* value		8095246						
ANR	8095419	Symbol	status_put_font		8095246						
ANR	8095420	Symbol	id		8095246						
ANR	8095421	Symbol	value		8095246						
ANR	8095422	Symbol	( ( pl_font_t * ) value ) -> storage		8095246						
ANR	8095423	Symbol	key		8095246						
ANR	8095424	Function	status_fonts	357:0:12479:12616							
ANR	8095425	FunctionDef	"status_fonts (stream * s , pcl_state_t * pcs , pcl_data_storage_t storage)"		8095424	0					
ANR	8095426	CompoundStatement		359:0:12562:12616	8095424	0					
ANR	8095427	ReturnStatement	"return status_do_fonts ( s , pcs , storage , false ) ;"	360:4:12568:12614	8095424	0	True				
ANR	8095428	CallExpression	"status_do_fonts ( s , pcs , storage , false )"		8095424	0					
ANR	8095429	Callee	status_do_fonts		8095424	0					
ANR	8095430	Identifier	status_do_fonts		8095424	0					
ANR	8095431	ArgumentList	s		8095424	1					
ANR	8095432	Argument	s		8095424	0					
ANR	8095433	Identifier	s		8095424	0					
ANR	8095434	Argument	pcs		8095424	1					
ANR	8095435	Identifier	pcs		8095424	0					
ANR	8095436	Argument	storage		8095424	2					
ANR	8095437	Identifier	storage		8095424	0					
ANR	8095438	Argument	false		8095424	3					
ANR	8095439	Identifier	false		8095424	0					
ANR	8095440	ReturnType	static int		8095424	1					
ANR	8095441	Identifier	status_fonts		8095424	2					
ANR	8095442	ParameterList	"stream * s , pcl_state_t * pcs , pcl_data_storage_t storage"		8095424	3					
ANR	8095443	Parameter	stream * s	358:13:12503:12512	8095424	0	True				
ANR	8095444	ParameterType	stream *		8095424	0					
ANR	8095445	Identifier	s		8095424	1					
ANR	8095446	Parameter	pcl_state_t * pcs	358:25:12515:12531	8095424	1	True				
ANR	8095447	ParameterType	pcl_state_t *		8095424	0					
ANR	8095448	Identifier	pcs		8095424	1					
ANR	8095449	Parameter	pcl_data_storage_t storage	358:44:12534:12559	8095424	2	True				
ANR	8095450	ParameterType	pcl_data_storage_t		8095424	0					
ANR	8095451	Identifier	storage		8095424	1					
ANR	8095452	CFGEntryNode	ENTRY		8095424		True				
ANR	8095453	CFGExitNode	EXIT		8095424		True				
ANR	8095454	Symbol	pcs		8095424						
ANR	8095455	Symbol	s		8095424						
ANR	8095456	Symbol	false		8095424						
ANR	8095457	Symbol	status_do_fonts		8095424						
ANR	8095458	Symbol	storage		8095424						
ANR	8095459	Function	status_macros	363:0:12619:13229							
ANR	8095460	FunctionDef	"status_macros (stream * s , pcl_state_t * pcs , pcl_data_storage_t storage)"		8095459	0					
ANR	8095461	CompoundStatement		365:0:12703:13229	8095459	0					
ANR	8095462	IdentifierDeclStatement	gs_const_string key ;	366:4:12709:12728	8095459	0	True				
ANR	8095463	IdentifierDecl	key		8095459	0					
ANR	8095464	IdentifierDeclType	gs_const_string		8095459	0					
ANR	8095465	Identifier	key		8095459	1					
ANR	8095466	IdentifierDeclStatement	void * value ;	367:4:12734:12745	8095459	1	True				
ANR	8095467	IdentifierDecl	* value		8095459	0					
ANR	8095468	IdentifierDeclType	void *		8095459	0					
ANR	8095469	Identifier	value		8095459	1					
ANR	8095470	IdentifierDeclStatement	pl_dict_enum_t denum ;	368:4:12751:12771	8095459	2	True				
ANR	8095471	IdentifierDecl	denum		8095459	0					
ANR	8095472	IdentifierDeclType	pl_dict_enum_t		8095459	0					
ANR	8095473	Identifier	denum		8095459	1					
ANR	8095474	IfStatement	if ( storage == 0 )		8095459	3					
ANR	8095475	Condition	storage == 0	370:8:12782:12793	8095459	0	True				
ANR	8095476	EqualityExpression	storage == 0		8095459	0		==			
ANR	8095477	Identifier	storage		8095459	0					
ANR	8095478	PrimaryExpression	0		8095459	1					
ANR	8095479	ReturnStatement	return 0 ;	371:8:12804:12812	8095459	1	True				
ANR	8095480	PrimaryExpression	0		8095459	0					
ANR	8095481	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> macros , & denum )"	372:4:12868:12908	8095459	4	True				
ANR	8095482	CallExpression	"pl_dict_enum_begin ( & pcs -> macros , & denum )"		8095459	0					
ANR	8095483	Callee	pl_dict_enum_begin		8095459	0					
ANR	8095484	Identifier	pl_dict_enum_begin		8095459	0					
ANR	8095485	ArgumentList	& pcs -> macros		8095459	1					
ANR	8095486	Argument	& pcs -> macros		8095459	0					
ANR	8095487	UnaryOperationExpression	& pcs -> macros		8095459	0					
ANR	8095488	UnaryOperator	&		8095459	0					
ANR	8095489	PtrMemberAccess	pcs -> macros		8095459	1					
ANR	8095490	Identifier	pcs		8095459	0					
ANR	8095491	Identifier	macros		8095459	1					
ANR	8095492	Argument	& denum		8095459	1					
ANR	8095493	UnaryOperationExpression	& denum		8095459	0					
ANR	8095494	UnaryOperator	&		8095459	0					
ANR	8095495	Identifier	denum		8095459	1					
ANR	8095496	WhileStatement	"while ( pl_dict_enum_next ( & denum , & key , & value ) )"		8095459	5					
ANR	8095497	Condition	"pl_dict_enum_next ( & denum , & key , & value )"	373:11:12921:12959	8095459	0	True				
ANR	8095498	CallExpression	"pl_dict_enum_next ( & denum , & key , & value )"		8095459	0					
ANR	8095499	Callee	pl_dict_enum_next		8095459	0					
ANR	8095500	Identifier	pl_dict_enum_next		8095459	0					
ANR	8095501	ArgumentList	& denum		8095459	1					
ANR	8095502	Argument	& denum		8095459	0					
ANR	8095503	UnaryOperationExpression	& denum		8095459	0					
ANR	8095504	UnaryOperator	&		8095459	0					
ANR	8095505	Identifier	denum		8095459	1					
ANR	8095506	Argument	& key		8095459	1					
ANR	8095507	UnaryOperationExpression	& key		8095459	0					
ANR	8095508	UnaryOperator	&		8095459	0					
ANR	8095509	Identifier	key		8095459	1					
ANR	8095510	Argument	& value		8095459	2					
ANR	8095511	UnaryOperationExpression	& value		8095459	0					
ANR	8095512	UnaryOperator	&		8095459	0					
ANR	8095513	Identifier	value		8095459	1					
ANR	8095514	IfStatement	if ( ( ( pcl_macro_t * ) value ) -> storage & storage )		8095459	1					
ANR	8095515	Condition	( ( pcl_macro_t * ) value ) -> storage & storage	374:12:12974:13015	8095459	0	True				
ANR	8095516	BitAndExpression	( ( pcl_macro_t * ) value ) -> storage & storage		8095459	0		&			
ANR	8095517	PtrMemberAccess	( ( pcl_macro_t * ) value ) -> storage		8095459	0					
ANR	8095518	CastExpression	( pcl_macro_t * ) value		8095459	0					
ANR	8095519	CastTarget	pcl_macro_t *		8095459	0					
ANR	8095520	Identifier	value		8095459	1					
ANR	8095521	Identifier	storage		8095459	1					
ANR	8095522	Identifier	storage		8095459	1					
ANR	8095523	CompoundStatement		11:12:328:345	8095459	1					
ANR	8095524	IdentifierDeclStatement	char id_string [ 6 ] ;	375:12:13032:13049	8095459	0	True				
ANR	8095525	IdentifierDecl	id_string [ 6 ]		8095459	0					
ANR	8095526	IdentifierDeclType	char [ 6 ]		8095459	0					
ANR	8095527	Identifier	id_string		8095459	1					
ANR	8095528	PrimaryExpression	6		8095459	2					
ANR	8095529	ExpressionStatement	"gs_sprintf ( id_string , ""%u"" , ( key . data [ 0 ] << 8 ) + key . data [ 1 ] )"	377:12:13064:13125	8095459	1	True				
ANR	8095530	CallExpression	"gs_sprintf ( id_string , ""%u"" , ( key . data [ 0 ] << 8 ) + key . data [ 1 ] )"		8095459	0					
ANR	8095531	Callee	gs_sprintf		8095459	0					
ANR	8095532	Identifier	gs_sprintf		8095459	0					
ANR	8095533	ArgumentList	id_string		8095459	1					
ANR	8095534	Argument	id_string		8095459	0					
ANR	8095535	Identifier	id_string		8095459	0					
ANR	8095536	Argument	"""%u"""		8095459	1					
ANR	8095537	PrimaryExpression	"""%u"""		8095459	0					
ANR	8095538	Argument	( key . data [ 0 ] << 8 ) + key . data [ 1 ]		8095459	2					
ANR	8095539	AdditiveExpression	( key . data [ 0 ] << 8 ) + key . data [ 1 ]		8095459	0		+			
ANR	8095540	ShiftExpression	key . data [ 0 ] << 8		8095459	0		<<			
ANR	8095541	ArrayIndexing	key . data [ 0 ]		8095459	0					
ANR	8095542	MemberAccess	key . data		8095459	0					
ANR	8095543	Identifier	key		8095459	0					
ANR	8095544	Identifier	data		8095459	1					
ANR	8095545	PrimaryExpression	0		8095459	1					
ANR	8095546	PrimaryExpression	8		8095459	1					
ANR	8095547	ArrayIndexing	key . data [ 1 ]		8095459	1					
ANR	8095548	MemberAccess	key . data		8095459	0					
ANR	8095549	Identifier	key		8095459	0					
ANR	8095550	Identifier	data		8095459	1					
ANR	8095551	PrimaryExpression	1		8095459	1					
ANR	8095552	ExpressionStatement	"status_put_id ( s , ""IDLIST"" , id_string )"	378:12:13139:13176	8095459	2	True				
ANR	8095553	CallExpression	"status_put_id ( s , ""IDLIST"" , id_string )"		8095459	0					
ANR	8095554	Callee	status_put_id		8095459	0					
ANR	8095555	Identifier	status_put_id		8095459	0					
ANR	8095556	ArgumentList	s		8095459	1					
ANR	8095557	Argument	s		8095459	0					
ANR	8095558	Identifier	s		8095459	0					
ANR	8095559	Argument	"""IDLIST"""		8095459	1					
ANR	8095560	PrimaryExpression	"""IDLIST"""		8095459	0					
ANR	8095561	Argument	id_string		8095459	2					
ANR	8095562	Identifier	id_string		8095459	0					
ANR	8095563	ExpressionStatement	status_end_id_list ( s )	380:4:13192:13213	8095459	6	True				
ANR	8095564	CallExpression	status_end_id_list ( s )		8095459	0					
ANR	8095565	Callee	status_end_id_list		8095459	0					
ANR	8095566	Identifier	status_end_id_list		8095459	0					
ANR	8095567	ArgumentList	s		8095459	1					
ANR	8095568	Argument	s		8095459	0					
ANR	8095569	Identifier	s		8095459	0					
ANR	8095570	ReturnStatement	return 0 ;	381:4:13219:13227	8095459	7	True				
ANR	8095571	PrimaryExpression	0		8095459	0					
ANR	8095572	ReturnType	static int		8095459	1					
ANR	8095573	Identifier	status_macros		8095459	2					
ANR	8095574	ParameterList	"stream * s , pcl_state_t * pcs , pcl_data_storage_t storage"		8095459	3					
ANR	8095575	Parameter	stream * s	364:14:12644:12653	8095459	0	True				
ANR	8095576	ParameterType	stream *		8095459	0					
ANR	8095577	Identifier	s		8095459	1					
ANR	8095578	Parameter	pcl_state_t * pcs	364:26:12656:12672	8095459	1	True				
ANR	8095579	ParameterType	pcl_state_t *		8095459	0					
ANR	8095580	Identifier	pcs		8095459	1					
ANR	8095581	Parameter	pcl_data_storage_t storage	364:45:12675:12700	8095459	2	True				
ANR	8095582	ParameterType	pcl_data_storage_t		8095459	0					
ANR	8095583	Identifier	storage		8095459	1					
ANR	8095584	CFGEntryNode	ENTRY		8095459		True				
ANR	8095585	CFGExitNode	EXIT		8095459		True				
ANR	8095586	Symbol	* key . data		8095459						
ANR	8095587	Symbol	pcs		8095459						
ANR	8095588	Symbol	& key		8095459						
ANR	8095589	Symbol	& value		8095459						
ANR	8095590	Symbol	& pcs -> macros		8095459						
ANR	8095591	Symbol	key . data		8095459						
ANR	8095592	Symbol	* key		8095459						
ANR	8095593	Symbol	storage		8095459						
ANR	8095594	Symbol	pl_dict_enum_next		8095459						
ANR	8095595	Symbol	( ( pcl_macro_t * ) value ) -> storage		8095459						
ANR	8095596	Symbol	s		8095459						
ANR	8095597	Symbol	& denum		8095459						
ANR	8095598	Symbol	denum		8095459						
ANR	8095599	Symbol	* value		8095459						
ANR	8095600	Symbol	id_string		8095459						
ANR	8095601	Symbol	value		8095459						
ANR	8095602	Symbol	key		8095459						
ANR	8095603	Function	status_patterns	389:0:13466:14298							
ANR	8095604	FunctionDef	"status_patterns (stream * s , pcl_state_t * pcs , pcl_data_storage_t storage)"		8095603	0					
ANR	8095605	CompoundStatement		391:0:13552:14298	8095603	0					
ANR	8095606	IfStatement	if ( storage == 0 )		8095603	0					
ANR	8095607	Condition	storage == 0	392:8:13562:13573	8095603	0	True				
ANR	8095608	EqualityExpression	storage == 0		8095603	0		==			
ANR	8095609	Identifier	storage		8095603	0					
ANR	8095610	PrimaryExpression	0		8095603	1					
ANR	8095611	CompoundStatement		4:8:75:132	8095603	1					
ANR	8095612	IdentifierDeclStatement	int id = pcs -> current_pattern_id ;	393:8:13586:13618	8095603	0	True				
ANR	8095613	IdentifierDecl	id = pcs -> current_pattern_id		8095603	0					
ANR	8095614	IdentifierDeclType	int		8095603	0					
ANR	8095615	Identifier	id		8095603	1					
ANR	8095616	AssignmentExpression	id = pcs -> current_pattern_id		8095603	2		=			
ANR	8095617	Identifier	id		8095603	0					
ANR	8095618	PtrMemberAccess	pcs -> current_pattern_id		8095603	1					
ANR	8095619	Identifier	pcs		8095603	0					
ANR	8095620	Identifier	current_pattern_id		8095603	1					
ANR	8095621	IdentifierDeclStatement	"pcl_pattern_t * pptrn = pcl_pattern_get_pcl_uptrn ( pcs , id ) ;"	394:8:13628:13685	8095603	1	True				
ANR	8095622	IdentifierDecl	"* pptrn = pcl_pattern_get_pcl_uptrn ( pcs , id )"		8095603	0					
ANR	8095623	IdentifierDeclType	pcl_pattern_t *		8095603	0					
ANR	8095624	Identifier	pptrn		8095603	1					
ANR	8095625	AssignmentExpression	"* pptrn = pcl_pattern_get_pcl_uptrn ( pcs , id )"		8095603	2		=			
ANR	8095626	Identifier	pptrn		8095603	0					
ANR	8095627	CallExpression	"pcl_pattern_get_pcl_uptrn ( pcs , id )"		8095603	1					
ANR	8095628	Callee	pcl_pattern_get_pcl_uptrn		8095603	0					
ANR	8095629	Identifier	pcl_pattern_get_pcl_uptrn		8095603	0					
ANR	8095630	ArgumentList	pcs		8095603	1					
ANR	8095631	Argument	pcs		8095603	0					
ANR	8095632	Identifier	pcs		8095603	0					
ANR	8095633	Argument	id		8095603	1					
ANR	8095634	Identifier	id		8095603	0					
ANR	8095635	IfStatement	if ( ( pptrn != 0 ) && ( pcs -> pattern_type == pcl_pattern_user_defined ) )		8095603	2					
ANR	8095636	Condition	( pptrn != 0 ) && ( pcs -> pattern_type == pcl_pattern_user_defined )	396:12:13700:13762	8095603	0	True				
ANR	8095637	AndExpression	( pptrn != 0 ) && ( pcs -> pattern_type == pcl_pattern_user_defined )		8095603	0		&&			
ANR	8095638	EqualityExpression	pptrn != 0		8095603	0		!=			
ANR	8095639	Identifier	pptrn		8095603	0					
ANR	8095640	PrimaryExpression	0		8095603	1					
ANR	8095641	EqualityExpression	pcs -> pattern_type == pcl_pattern_user_defined		8095603	1		==			
ANR	8095642	PtrMemberAccess	pcs -> pattern_type		8095603	0					
ANR	8095643	Identifier	pcs		8095603	0					
ANR	8095644	Identifier	pattern_type		8095603	1					
ANR	8095645	Identifier	pcl_pattern_user_defined		8095603	1					
ANR	8095646	CompoundStatement		7:12:226:243	8095603	1					
ANR	8095647	IdentifierDeclStatement	char id_string [ 6 ] ;	397:12:13779:13796	8095603	0	True				
ANR	8095648	IdentifierDecl	id_string [ 6 ]		8095603	0					
ANR	8095649	IdentifierDeclType	char [ 6 ]		8095603	0					
ANR	8095650	Identifier	id_string		8095603	1					
ANR	8095651	PrimaryExpression	6		8095603	2					
ANR	8095652	ExpressionStatement	"gs_sprintf ( id_string , ""%u"" , id )"	399:12:13811:13842	8095603	1	True				
ANR	8095653	CallExpression	"gs_sprintf ( id_string , ""%u"" , id )"		8095603	0					
ANR	8095654	Callee	gs_sprintf		8095603	0					
ANR	8095655	Identifier	gs_sprintf		8095603	0					
ANR	8095656	ArgumentList	id_string		8095603	1					
ANR	8095657	Argument	id_string		8095603	0					
ANR	8095658	Identifier	id_string		8095603	0					
ANR	8095659	Argument	"""%u"""		8095603	1					
ANR	8095660	PrimaryExpression	"""%u"""		8095603	0					
ANR	8095661	Argument	id		8095603	2					
ANR	8095662	Identifier	id		8095603	0					
ANR	8095663	ExpressionStatement	"status_put_id ( s , ""IDLIST"" , id_string )"	400:12:13856:13893	8095603	2	True				
ANR	8095664	CallExpression	"status_put_id ( s , ""IDLIST"" , id_string )"		8095603	0					
ANR	8095665	Callee	status_put_id		8095603	0					
ANR	8095666	Identifier	status_put_id		8095603	0					
ANR	8095667	ArgumentList	s		8095603	1					
ANR	8095668	Argument	s		8095603	0					
ANR	8095669	Identifier	s		8095603	0					
ANR	8095670	Argument	"""IDLIST"""		8095603	1					
ANR	8095671	PrimaryExpression	"""IDLIST"""		8095603	0					
ANR	8095672	Argument	id_string		8095603	2					
ANR	8095673	Identifier	id_string		8095603	0					
ANR	8095674	ElseStatement	else		8095603	0					
ANR	8095675	CompoundStatement		13:8:373:379	8095603	0					
ANR	8095676	IdentifierDeclStatement	int id ;	403:8:13926:13932	8095603	0	True				
ANR	8095677	IdentifierDecl	id		8095603	0					
ANR	8095678	IdentifierDeclType	int		8095603	0					
ANR	8095679	Identifier	id		8095603	1					
ANR	8095680	ForStatement	for ( id = 0 ; id < ( 1L << 15 ) - 1 ; id ++ )		8095603	1					
ANR	8095681	ForInit	id = 0 ;	405:13:13948:13954	8095603	0	True				
ANR	8095682	AssignmentExpression	id = 0		8095603	0		=			
ANR	8095683	Identifier	id		8095603	0					
ANR	8095684	PrimaryExpression	0		8095603	1					
ANR	8095685	Condition	id < ( 1L << 15 ) - 1	405:21:13956:13974	8095603	1	True				
ANR	8095686	RelationalExpression	id < ( 1L << 15 ) - 1		8095603	0		<			
ANR	8095687	Identifier	id		8095603	0					
ANR	8095688	AdditiveExpression	( 1L << 15 ) - 1		8095603	1		-			
ANR	8095689	ShiftExpression	1L << 15		8095603	0		<<			
ANR	8095690	PrimaryExpression	1L		8095603	0					
ANR	8095691	PrimaryExpression	15		8095603	1					
ANR	8095692	PrimaryExpression	1		8095603	1					
ANR	8095693	PostIncDecOperationExpression	id ++	405:42:13977:13980	8095603	2	True				
ANR	8095694	Identifier	id		8095603	0					
ANR	8095695	IncDec	++		8095603	1					
ANR	8095696	CompoundStatement		16:12:444:501	8095603	3					
ANR	8095697	IdentifierDeclStatement	"pcl_pattern_t * pptrn = pcl_pattern_get_pcl_uptrn ( pcs , id ) ;"	406:12:13997:14054	8095603	0	True				
ANR	8095698	IdentifierDecl	"* pptrn = pcl_pattern_get_pcl_uptrn ( pcs , id )"		8095603	0					
ANR	8095699	IdentifierDeclType	pcl_pattern_t *		8095603	0					
ANR	8095700	Identifier	pptrn		8095603	1					
ANR	8095701	AssignmentExpression	"* pptrn = pcl_pattern_get_pcl_uptrn ( pcs , id )"		8095603	2		=			
ANR	8095702	Identifier	pptrn		8095603	0					
ANR	8095703	CallExpression	"pcl_pattern_get_pcl_uptrn ( pcs , id )"		8095603	1					
ANR	8095704	Callee	pcl_pattern_get_pcl_uptrn		8095603	0					
ANR	8095705	Identifier	pcl_pattern_get_pcl_uptrn		8095603	0					
ANR	8095706	ArgumentList	pcs		8095603	1					
ANR	8095707	Argument	pcs		8095603	0					
ANR	8095708	Identifier	pcs		8095603	0					
ANR	8095709	Argument	id		8095603	1					
ANR	8095710	Identifier	id		8095603	0					
ANR	8095711	IfStatement	if ( pptrn != 0 )		8095603	1					
ANR	8095712	Condition	pptrn != 0	408:16:14073:14082	8095603	0	True				
ANR	8095713	EqualityExpression	pptrn != 0		8095603	0		!=			
ANR	8095714	Identifier	pptrn		8095603	0					
ANR	8095715	PrimaryExpression	0		8095603	1					
ANR	8095716	CompoundStatement		19:16:550:567	8095603	1					
ANR	8095717	IdentifierDeclStatement	char id_string [ 6 ] ;	409:16:14103:14120	8095603	0	True				
ANR	8095718	IdentifierDecl	id_string [ 6 ]		8095603	0					
ANR	8095719	IdentifierDeclType	char [ 6 ]		8095603	0					
ANR	8095720	Identifier	id_string		8095603	1					
ANR	8095721	PrimaryExpression	6		8095603	2					
ANR	8095722	ExpressionStatement	"gs_sprintf ( id_string , ""%u"" , id )"	411:16:14139:14170	8095603	1	True				
ANR	8095723	CallExpression	"gs_sprintf ( id_string , ""%u"" , id )"		8095603	0					
ANR	8095724	Callee	gs_sprintf		8095603	0					
ANR	8095725	Identifier	gs_sprintf		8095603	0					
ANR	8095726	ArgumentList	id_string		8095603	1					
ANR	8095727	Argument	id_string		8095603	0					
ANR	8095728	Identifier	id_string		8095603	0					
ANR	8095729	Argument	"""%u"""		8095603	1					
ANR	8095730	PrimaryExpression	"""%u"""		8095603	0					
ANR	8095731	Argument	id		8095603	2					
ANR	8095732	Identifier	id		8095603	0					
ANR	8095733	ExpressionStatement	"status_put_id ( s , ""IDLIST"" , id_string )"	412:16:14188:14225	8095603	2	True				
ANR	8095734	CallExpression	"status_put_id ( s , ""IDLIST"" , id_string )"		8095603	0					
ANR	8095735	Callee	status_put_id		8095603	0					
ANR	8095736	Identifier	status_put_id		8095603	0					
ANR	8095737	ArgumentList	s		8095603	1					
ANR	8095738	Argument	s		8095603	0					
ANR	8095739	Identifier	s		8095603	0					
ANR	8095740	Argument	"""IDLIST"""		8095603	1					
ANR	8095741	PrimaryExpression	"""IDLIST"""		8095603	0					
ANR	8095742	Argument	id_string		8095603	2					
ANR	8095743	Identifier	id_string		8095603	0					
ANR	8095744	ExpressionStatement	status_end_id_list ( s )	416:4:14261:14282	8095603	1	True				
ANR	8095745	CallExpression	status_end_id_list ( s )		8095603	0					
ANR	8095746	Callee	status_end_id_list		8095603	0					
ANR	8095747	Identifier	status_end_id_list		8095603	0					
ANR	8095748	ArgumentList	s		8095603	1					
ANR	8095749	Argument	s		8095603	0					
ANR	8095750	Identifier	s		8095603	0					
ANR	8095751	ReturnStatement	return 0 ;	417:4:14288:14296	8095603	2	True				
ANR	8095752	PrimaryExpression	0		8095603	0					
ANR	8095753	ReturnType	static int		8095603	1					
ANR	8095754	Identifier	status_patterns		8095603	2					
ANR	8095755	ParameterList	"stream * s , pcl_state_t * pcs , pcl_data_storage_t storage"		8095603	3					
ANR	8095756	Parameter	stream * s	390:16:13493:13502	8095603	0	True				
ANR	8095757	ParameterType	stream *		8095603	0					
ANR	8095758	Identifier	s		8095603	1					
ANR	8095759	Parameter	pcl_state_t * pcs	390:28:13505:13521	8095603	1	True				
ANR	8095760	ParameterType	pcl_state_t *		8095603	0					
ANR	8095761	Identifier	pcs		8095603	1					
ANR	8095762	Parameter	pcl_data_storage_t storage	390:47:13524:13549	8095603	2	True				
ANR	8095763	ParameterType	pcl_data_storage_t		8095603	0					
ANR	8095764	Identifier	storage		8095603	1					
ANR	8095765	CFGEntryNode	ENTRY		8095603		True				
ANR	8095766	CFGExitNode	EXIT		8095603		True				
ANR	8095767	Symbol	pcs		8095603						
ANR	8095768	Symbol	s		8095603						
ANR	8095769	Symbol	pcs -> current_pattern_id		8095603						
ANR	8095770	Symbol	pcl_pattern_user_defined		8095603						
ANR	8095771	Symbol	id_string		8095603						
ANR	8095772	Symbol	* pcs		8095603						
ANR	8095773	Symbol	pcl_pattern_get_pcl_uptrn		8095603						
ANR	8095774	Symbol	storage		8095603						
ANR	8095775	Symbol	id		8095603						
ANR	8095776	Symbol	pptrn		8095603						
ANR	8095777	Symbol	pcs -> pattern_type		8095603						
ANR	8095778	Function	status_check_symbol_set	420:0:14301:14968							
ANR	8095779	FunctionDef	"status_check_symbol_set (pcl_state_t * pcs , pl_symbol_map_t * mapp , pcl_data_storage_t storage)"		8095778	0					
ANR	8095780	CompoundStatement		423:0:14509:14968	8095778	0					
ANR	8095781	IdentifierDeclStatement	gs_const_string key ;	424:4:14515:14534	8095778	0	True				
ANR	8095782	IdentifierDecl	key		8095778	0					
ANR	8095783	IdentifierDeclType	gs_const_string		8095778	0					
ANR	8095784	Identifier	key		8095778	1					
ANR	8095785	IdentifierDeclStatement	void * value ;	425:4:14540:14551	8095778	1	True				
ANR	8095786	IdentifierDecl	* value		8095778	0					
ANR	8095787	IdentifierDeclType	void *		8095778	0					
ANR	8095788	Identifier	value		8095778	1					
ANR	8095789	IdentifierDeclStatement	pl_dict_enum_t fenum ;	426:4:14557:14577	8095778	2	True				
ANR	8095790	IdentifierDecl	fenum		8095778	0					
ANR	8095791	IdentifierDeclType	pl_dict_enum_t		8095778	0					
ANR	8095792	Identifier	fenum		8095778	1					
ANR	8095793	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> soft_fonts , & fenum )"	428:4:14584:14628	8095778	3	True				
ANR	8095794	CallExpression	"pl_dict_enum_begin ( & pcs -> soft_fonts , & fenum )"		8095778	0					
ANR	8095795	Callee	pl_dict_enum_begin		8095778	0					
ANR	8095796	Identifier	pl_dict_enum_begin		8095778	0					
ANR	8095797	ArgumentList	& pcs -> soft_fonts		8095778	1					
ANR	8095798	Argument	& pcs -> soft_fonts		8095778	0					
ANR	8095799	UnaryOperationExpression	& pcs -> soft_fonts		8095778	0					
ANR	8095800	UnaryOperator	&		8095778	0					
ANR	8095801	PtrMemberAccess	pcs -> soft_fonts		8095778	1					
ANR	8095802	Identifier	pcs		8095778	0					
ANR	8095803	Identifier	soft_fonts		8095778	1					
ANR	8095804	Argument	& fenum		8095778	1					
ANR	8095805	UnaryOperationExpression	& fenum		8095778	0					
ANR	8095806	UnaryOperator	&		8095778	0					
ANR	8095807	Identifier	fenum		8095778	1					
ANR	8095808	WhileStatement	"while ( pl_dict_enum_next ( & fenum , & key , & value ) )"		8095778	4					
ANR	8095809	Condition	"pl_dict_enum_next ( & fenum , & key , & value )"	429:11:14641:14679	8095778	0	True				
ANR	8095810	CallExpression	"pl_dict_enum_next ( & fenum , & key , & value )"		8095778	0					
ANR	8095811	Callee	pl_dict_enum_next		8095778	0					
ANR	8095812	Identifier	pl_dict_enum_next		8095778	0					
ANR	8095813	ArgumentList	& fenum		8095778	1					
ANR	8095814	Argument	& fenum		8095778	0					
ANR	8095815	UnaryOperationExpression	& fenum		8095778	0					
ANR	8095816	UnaryOperator	&		8095778	0					
ANR	8095817	Identifier	fenum		8095778	1					
ANR	8095818	Argument	& key		8095778	1					
ANR	8095819	UnaryOperationExpression	& key		8095778	0					
ANR	8095820	UnaryOperator	&		8095778	0					
ANR	8095821	Identifier	key		8095778	1					
ANR	8095822	Argument	& value		8095778	2					
ANR	8095823	UnaryOperationExpression	& value		8095778	0					
ANR	8095824	UnaryOperator	&		8095778	0					
ANR	8095825	Identifier	value		8095778	1					
ANR	8095826	CompoundStatement		8:8:182:217	8095778	1					
ANR	8095827	IdentifierDeclStatement	pl_font_t * fp = ( pl_font_t * ) value ;	430:8:14692:14727	8095778	0	True				
ANR	8095828	IdentifierDecl	* fp = ( pl_font_t * ) value		8095778	0					
ANR	8095829	IdentifierDeclType	pl_font_t *		8095778	0					
ANR	8095830	Identifier	fp		8095778	1					
ANR	8095831	AssignmentExpression	* fp = ( pl_font_t * ) value		8095778	2		=			
ANR	8095832	Identifier	fp		8095778	0					
ANR	8095833	CastExpression	( pl_font_t * ) value		8095778	1					
ANR	8095834	CastTarget	pl_font_t *		8095778	0					
ANR	8095835	Identifier	value		8095778	1					
ANR	8095836	IfStatement	if ( fp -> storage != storage )		8095778	1					
ANR	8095837	Condition	fp -> storage != storage	432:12:14742:14763	8095778	0	True				
ANR	8095838	EqualityExpression	fp -> storage != storage		8095778	0		!=			
ANR	8095839	PtrMemberAccess	fp -> storage		8095778	0					
ANR	8095840	Identifier	fp		8095778	0					
ANR	8095841	Identifier	storage		8095778	1					
ANR	8095842	Identifier	storage		8095778	1					
ANR	8095843	ContinueStatement	continue ;	433:12:14778:14786	8095778	1	True				
ANR	8095844	IfStatement	"if ( pcl_check_symbol_support ( mapp -> character_requirements , fp -> character_complement ) )"		8095778	2					
ANR	8095845	Condition	"pcl_check_symbol_support ( mapp -> character_requirements , fp -> character_complement )"	434:12:14800:14916	8095778	0	True				
ANR	8095846	CallExpression	"pcl_check_symbol_support ( mapp -> character_requirements , fp -> character_complement )"		8095778	0					
ANR	8095847	Callee	pcl_check_symbol_support		8095778	0					
ANR	8095848	Identifier	pcl_check_symbol_support		8095778	0					
ANR	8095849	ArgumentList	mapp -> character_requirements		8095778	1					
ANR	8095850	Argument	mapp -> character_requirements		8095778	0					
ANR	8095851	PtrMemberAccess	mapp -> character_requirements		8095778	0					
ANR	8095852	Identifier	mapp		8095778	0					
ANR	8095853	Identifier	character_requirements		8095778	1					
ANR	8095854	Argument	fp -> character_complement		8095778	1					
ANR	8095855	PtrMemberAccess	fp -> character_complement		8095778	0					
ANR	8095856	Identifier	fp		8095778	0					
ANR	8095857	Identifier	character_complement		8095778	1					
ANR	8095858	ReturnStatement	return true ;	436:12:14931:14942	8095778	1	True				
ANR	8095859	Identifier	true		8095778	0					
ANR	8095860	ReturnStatement	return false ;	438:4:14954:14966	8095778	5	True				
ANR	8095861	Identifier	false		8095778	0					
ANR	8095862	ReturnType	static bool		8095778	1					
ANR	8095863	Identifier	status_check_symbol_set		8095778	2					
ANR	8095864	ParameterList	"pcl_state_t * pcs , pl_symbol_map_t * mapp , pcl_data_storage_t storage"		8095778	3					
ANR	8095865	Parameter	pcl_state_t * pcs	421:24:14414:14430	8095778	0	True				
ANR	8095866	ParameterType	pcl_state_t *		8095778	0					
ANR	8095867	Identifier	pcs		8095778	1					
ANR	8095868	Parameter	pl_symbol_map_t * mapp	421:43:14433:14454	8095778	1	True				
ANR	8095869	ParameterType	pl_symbol_map_t *		8095778	0					
ANR	8095870	Identifier	mapp		8095778	1					
ANR	8095871	Parameter	pcl_data_storage_t storage	422:24:14481:14506	8095778	2	True				
ANR	8095872	ParameterType	pcl_data_storage_t		8095778	0					
ANR	8095873	Identifier	storage		8095778	1					
ANR	8095874	CFGEntryNode	ENTRY		8095778		True				
ANR	8095875	CFGExitNode	EXIT		8095778		True				
ANR	8095876	Symbol	pcs		8095778						
ANR	8095877	Symbol	& key		8095778						
ANR	8095878	Symbol	& value		8095778						
ANR	8095879	Symbol	mapp		8095778						
ANR	8095880	Symbol	false		8095778						
ANR	8095881	Symbol	fp		8095778						
ANR	8095882	Symbol	storage		8095778						
ANR	8095883	Symbol	fenum		8095778						
ANR	8095884	Symbol	* mapp		8095778						
ANR	8095885	Symbol	pl_dict_enum_next		8095778						
ANR	8095886	Symbol	* fp		8095778						
ANR	8095887	Symbol	& pcs -> soft_fonts		8095778						
ANR	8095888	Symbol	fp -> storage		8095778						
ANR	8095889	Symbol	pcl_check_symbol_support		8095778						
ANR	8095890	Symbol	fp -> character_complement		8095778						
ANR	8095891	Symbol	true		8095778						
ANR	8095892	Symbol	& fenum		8095778						
ANR	8095893	Symbol	value		8095778						
ANR	8095894	Symbol	mapp -> character_requirements		8095778						
ANR	8095895	Symbol	key		8095778						
ANR	8095896	Function	status_add_symbol_id	441:0:14971:15519							
ANR	8095897	FunctionDef	"status_add_symbol_id (ushort * idlist , int nid , ushort new_id)"		8095896	0					
ANR	8095898	CompoundStatement		443:0:15128:15519	8095896	0					
ANR	8095899	IdentifierDeclStatement	int i ;	444:4:15134:15139	8095896	0	True				
ANR	8095900	IdentifierDecl	i		8095896	0					
ANR	8095901	IdentifierDeclType	int		8095896	0					
ANR	8095902	Identifier	i		8095896	1					
ANR	8095903	IdentifierDeclStatement	ushort * idp ;	445:4:15145:15156	8095896	1	True				
ANR	8095904	IdentifierDecl	* idp		8095896	0					
ANR	8095905	IdentifierDeclType	ushort *		8095896	0					
ANR	8095906	Identifier	idp		8095896	1					
ANR	8095907	IdentifierDeclStatement	"ushort t1 , t2 ;"	446:4:15162:15175	8095896	2	True				
ANR	8095908	IdentifierDecl	t1		8095896	0					
ANR	8095909	IdentifierDeclType	ushort		8095896	0					
ANR	8095910	Identifier	t1		8095896	1					
ANR	8095911	IdentifierDecl	t2		8095896	1					
ANR	8095912	IdentifierDeclType	ushort		8095896	0					
ANR	8095913	Identifier	t2		8095896	1					
ANR	8095914	ForStatement	"for ( i = 0 , idp = idlist ; i < nid ; i ++ )"		8095896	3					
ANR	8095915	ForInit	"i = 0 , idp = idlist ;"	448:9:15187:15206	8095896	0	True				
ANR	8095916	Expression	"i = 0 , idp = idlist"		8095896	0					
ANR	8095917	AssignmentExpression	i = 0		8095896	0		=			
ANR	8095918	Identifier	i		8095896	0					
ANR	8095919	PrimaryExpression	0		8095896	1					
ANR	8095920	AssignmentExpression	idp = idlist		8095896	1		=			
ANR	8095921	Identifier	idp		8095896	0					
ANR	8095922	Identifier	idlist		8095896	1					
ANR	8095923	Condition	i < nid	448:30:15208:15214	8095896	1	True				
ANR	8095924	RelationalExpression	i < nid		8095896	0		<			
ANR	8095925	Identifier	i		8095896	0					
ANR	8095926	Identifier	nid		8095896	1					
ANR	8095927	PostIncDecOperationExpression	i ++	448:39:15217:15219	8095896	2	True				
ANR	8095928	Identifier	i		8095896	0					
ANR	8095929	IncDec	++		8095896	1					
ANR	8095930	IfStatement	if ( new_id <= * idp )		8095896	3					
ANR	8095931	Condition	new_id <= * idp	449:12:15234:15247	8095896	0	True				
ANR	8095932	RelationalExpression	new_id <= * idp		8095896	0		<=			
ANR	8095933	Identifier	new_id		8095896	0					
ANR	8095934	UnaryOperationExpression	* idp		8095896	1					
ANR	8095935	UnaryOperator	*		8095896	0					
ANR	8095936	Identifier	idp		8095896	1					
ANR	8095937	BreakStatement	break ;	450:12:15262:15267	8095896	1	True				
ANR	8095938	IfStatement	if ( new_id == * idp )		8095896	4					
ANR	8095939	Condition	new_id == * idp	451:8:15277:15290	8095896	0	True				
ANR	8095940	EqualityExpression	new_id == * idp		8095896	0		==			
ANR	8095941	Identifier	new_id		8095896	0					
ANR	8095942	UnaryOperationExpression	* idp		8095896	1					
ANR	8095943	UnaryOperator	*		8095896	0					
ANR	8095944	Identifier	idp		8095896	1					
ANR	8095945	ReturnStatement	return nid ;	452:8:15330:15340	8095896	1	True				
ANR	8095946	Identifier	nid		8095896	0					
ANR	8095947	ForStatement	for ( t1 = new_id ; i < nid ; i ++ )		8095896	5					
ANR	8095948	ForInit	t1 = new_id ;	454:9:15392:15403	8095896	0	True				
ANR	8095949	AssignmentExpression	t1 = new_id		8095896	0		=			
ANR	8095950	Identifier	t1		8095896	0					
ANR	8095951	Identifier	new_id		8095896	1					
ANR	8095952	Condition	i < nid	454:22:15405:15411	8095896	1	True				
ANR	8095953	RelationalExpression	i < nid		8095896	0		<			
ANR	8095954	Identifier	i		8095896	0					
ANR	8095955	Identifier	nid		8095896	1					
ANR	8095956	PostIncDecOperationExpression	i ++	454:31:15414:15416	8095896	2	True				
ANR	8095957	Identifier	i		8095896	0					
ANR	8095958	IncDec	++		8095896	1					
ANR	8095959	CompoundStatement		12:36:290:290	8095896	3					
ANR	8095960	ExpressionStatement	t2 = * idp	455:8:15429:15438	8095896	0	True				
ANR	8095961	AssignmentExpression	t2 = * idp		8095896	0		=			
ANR	8095962	Identifier	t2		8095896	0					
ANR	8095963	UnaryOperationExpression	* idp		8095896	1					
ANR	8095964	UnaryOperator	*		8095896	0					
ANR	8095965	Identifier	idp		8095896	1					
ANR	8095966	ExpressionStatement	* idp ++ = t1	456:8:15448:15459	8095896	1	True				
ANR	8095967	AssignmentExpression	* idp ++ = t1		8095896	0		=			
ANR	8095968	UnaryOperationExpression	* idp ++		8095896	0					
ANR	8095969	UnaryOperator	*		8095896	0					
ANR	8095970	PostIncDecOperationExpression	idp ++		8095896	1					
ANR	8095971	Identifier	idp		8095896	0					
ANR	8095972	IncDec	++		8095896	1					
ANR	8095973	Identifier	t1		8095896	1					
ANR	8095974	ExpressionStatement	t1 = t2	457:8:15469:15476	8095896	2	True				
ANR	8095975	AssignmentExpression	t1 = t2		8095896	0		=			
ANR	8095976	Identifier	t1		8095896	0					
ANR	8095977	Identifier	t2		8095896	1					
ANR	8095978	ExpressionStatement	* idp = t1	459:4:15488:15497	8095896	6	True				
ANR	8095979	AssignmentExpression	* idp = t1		8095896	0		=			
ANR	8095980	UnaryOperationExpression	* idp		8095896	0					
ANR	8095981	UnaryOperator	*		8095896	0					
ANR	8095982	Identifier	idp		8095896	1					
ANR	8095983	Identifier	t1		8095896	1					
ANR	8095984	ReturnStatement	return nid + 1 ;	460:4:15503:15517	8095896	7	True				
ANR	8095985	AdditiveExpression	nid + 1		8095896	0		+			
ANR	8095986	Identifier	nid		8095896	0					
ANR	8095987	PrimaryExpression	1		8095896	1					
ANR	8095988	ReturnType	static int		8095896	1					
ANR	8095989	Identifier	status_add_symbol_id		8095896	2					
ANR	8095990	ParameterList	"ushort * idlist , int nid , ushort new_id"		8095896	3					
ANR	8095991	Parameter	ushort * idlist	442:21:15087:15101	8095896	0	True				
ANR	8095992	ParameterType	ushort *		8095896	0					
ANR	8095993	Identifier	idlist		8095896	1					
ANR	8095994	Parameter	int nid	442:38:15104:15110	8095896	1	True				
ANR	8095995	ParameterType	int		8095896	0					
ANR	8095996	Identifier	nid		8095896	1					
ANR	8095997	Parameter	ushort new_id	442:47:15113:15125	8095896	2	True				
ANR	8095998	ParameterType	ushort		8095896	0					
ANR	8095999	Identifier	new_id		8095896	1					
ANR	8096000	CFGEntryNode	ENTRY		8095896		True				
ANR	8096001	CFGExitNode	EXIT		8095896		True				
ANR	8096002	Symbol	* idp		8095896						
ANR	8096003	Symbol	new_id		8095896						
ANR	8096004	Symbol	idp		8095896						
ANR	8096005	Symbol	nid		8095896						
ANR	8096006	Symbol	idlist		8095896						
ANR	8096007	Symbol	i		8095896						
ANR	8096008	Symbol	* idp ++		8095896						
ANR	8096009	Symbol	t1		8095896						
ANR	8096010	Symbol	t2		8095896						
ANR	8096011	Function	status_symbol_sets	463:0:15522:17683							
ANR	8096012	FunctionDef	"status_symbol_sets (stream * s , pcl_state_t * pcs , pcl_data_storage_t storage)"		8096011	0					
ANR	8096013	CompoundStatement		465:0:15611:17683	8096011	0					
ANR	8096014	IdentifierDeclStatement	gs_const_string key ;	466:4:15617:15636	8096011	0	True				
ANR	8096015	IdentifierDecl	key		8096011	0					
ANR	8096016	IdentifierDeclType	gs_const_string		8096011	0					
ANR	8096017	Identifier	key		8096011	1					
ANR	8096018	IdentifierDeclStatement	void * value ;	467:4:15642:15653	8096011	1	True				
ANR	8096019	IdentifierDecl	* value		8096011	0					
ANR	8096020	IdentifierDeclType	void *		8096011	0					
ANR	8096021	Identifier	value		8096011	1					
ANR	8096022	IdentifierDeclStatement	pl_dict_enum_t denum ;	468:4:15659:15679	8096011	2	True				
ANR	8096023	IdentifierDecl	denum		8096011	0					
ANR	8096024	IdentifierDeclType	pl_dict_enum_t		8096011	0					
ANR	8096025	Identifier	denum		8096011	1					
ANR	8096026	IdentifierDeclStatement	ushort * idlist ;	469:4:15685:15699	8096011	3	True				
ANR	8096027	IdentifierDecl	* idlist		8096011	0					
ANR	8096028	IdentifierDeclType	ushort *		8096011	0					
ANR	8096029	Identifier	idlist		8096011	1					
ANR	8096030	IdentifierDeclStatement	int nid ;	470:4:15705:15712	8096011	4	True				
ANR	8096031	IdentifierDecl	nid		8096011	0					
ANR	8096032	IdentifierDeclType	int		8096011	0					
ANR	8096033	Identifier	nid		8096011	1					
ANR	8096034	IfStatement	if ( storage == 0 )		8096011	5					
ANR	8096035	Condition	storage == 0	472:8:15723:15734	8096011	0	True				
ANR	8096036	EqualityExpression	storage == 0		8096011	0		==			
ANR	8096037	Identifier	storage		8096011	0					
ANR	8096038	PrimaryExpression	0		8096011	1					
ANR	8096039	ReturnStatement	return 0 ;	473:8:15745:15753	8096011	1	True				
ANR	8096040	PrimaryExpression	0		8096011	0					
ANR	8096041	ExpressionStatement	"nid = pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false )"	480:4:16074:16185	8096011	6	True				
ANR	8096042	AssignmentExpression	"nid = pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false )"		8096011	0		=			
ANR	8096043	Identifier	nid		8096011	0					
ANR	8096044	AdditiveExpression	"pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false )"		8096011	1		+			
ANR	8096045	CallExpression	"pl_dict_length ( & pcs -> soft_symbol_sets , false )"		8096011	0					
ANR	8096046	Callee	pl_dict_length		8096011	0					
ANR	8096047	Identifier	pl_dict_length		8096011	0					
ANR	8096048	ArgumentList	& pcs -> soft_symbol_sets		8096011	1					
ANR	8096049	Argument	& pcs -> soft_symbol_sets		8096011	0					
ANR	8096050	UnaryOperationExpression	& pcs -> soft_symbol_sets		8096011	0					
ANR	8096051	UnaryOperator	&		8096011	0					
ANR	8096052	PtrMemberAccess	pcs -> soft_symbol_sets		8096011	1					
ANR	8096053	Identifier	pcs		8096011	0					
ANR	8096054	Identifier	soft_symbol_sets		8096011	1					
ANR	8096055	Argument	false		8096011	1					
ANR	8096056	Identifier	false		8096011	0					
ANR	8096057	CallExpression	"pl_dict_length ( & pcs -> built_in_symbol_sets , false )"		8096011	1					
ANR	8096058	Callee	pl_dict_length		8096011	0					
ANR	8096059	Identifier	pl_dict_length		8096011	0					
ANR	8096060	ArgumentList	& pcs -> built_in_symbol_sets		8096011	1					
ANR	8096061	Argument	& pcs -> built_in_symbol_sets		8096011	0					
ANR	8096062	UnaryOperationExpression	& pcs -> built_in_symbol_sets		8096011	0					
ANR	8096063	UnaryOperator	&		8096011	0					
ANR	8096064	PtrMemberAccess	pcs -> built_in_symbol_sets		8096011	1					
ANR	8096065	Identifier	pcs		8096011	0					
ANR	8096066	Identifier	built_in_symbol_sets		8096011	1					
ANR	8096067	Argument	false		8096011	1					
ANR	8096068	Identifier	false		8096011	0					
ANR	8096069	ExpressionStatement	"idlist = ( ushort * ) gs_alloc_bytes ( pcs -> memory , nid * sizeof ( ushort ) , ""status_symbol_sets(idlist)"" )"	482:4:16191:16329	8096011	7	True				
ANR	8096070	AssignmentExpression	"idlist = ( ushort * ) gs_alloc_bytes ( pcs -> memory , nid * sizeof ( ushort ) , ""status_symbol_sets(idlist)"" )"		8096011	0		=			
ANR	8096071	Identifier	idlist		8096011	0					
ANR	8096072	CastExpression	"( ushort * ) gs_alloc_bytes ( pcs -> memory , nid * sizeof ( ushort ) , ""status_symbol_sets(idlist)"" )"		8096011	1					
ANR	8096073	CastTarget	ushort *		8096011	0					
ANR	8096074	CallExpression	"gs_alloc_bytes ( pcs -> memory , nid * sizeof ( ushort ) , ""status_symbol_sets(idlist)"" )"		8096011	1					
ANR	8096075	Callee	gs_alloc_bytes		8096011	0					
ANR	8096076	Identifier	gs_alloc_bytes		8096011	0					
ANR	8096077	ArgumentList	pcs -> memory		8096011	1					
ANR	8096078	Argument	pcs -> memory		8096011	0					
ANR	8096079	PtrMemberAccess	pcs -> memory		8096011	0					
ANR	8096080	Identifier	pcs		8096011	0					
ANR	8096081	Identifier	memory		8096011	1					
ANR	8096082	Argument	nid * sizeof ( ushort )		8096011	1					
ANR	8096083	MultiplicativeExpression	nid * sizeof ( ushort )		8096011	0		*			
ANR	8096084	Identifier	nid		8096011	0					
ANR	8096085	SizeofExpression	sizeof ( ushort )		8096011	1					
ANR	8096086	Sizeof	sizeof		8096011	0					
ANR	8096087	SizeofOperand	ushort		8096011	1					
ANR	8096088	Argument	"""status_symbol_sets(idlist)"""		8096011	2					
ANR	8096089	PrimaryExpression	"""status_symbol_sets(idlist)"""		8096011	0					
ANR	8096090	IfStatement	if ( idlist == NULL )		8096011	8					
ANR	8096091	Condition	idlist == NULL	484:8:16339:16352	8096011	0	True				
ANR	8096092	EqualityExpression	idlist == NULL		8096011	0		==			
ANR	8096093	Identifier	idlist		8096011	0					
ANR	8096094	Identifier	NULL		8096011	1					
ANR	8096095	ReturnStatement	return e_Memory ;	485:8:16363:16378	8096011	1	True				
ANR	8096096	Identifier	e_Memory		8096011	0					
ANR	8096097	ExpressionStatement	nid = 0	486:4:16384:16391	8096011	9	True				
ANR	8096098	AssignmentExpression	nid = 0		8096011	0		=			
ANR	8096099	Identifier	nid		8096011	0					
ANR	8096100	PrimaryExpression	0		8096011	1					
ANR	8096101	ExpressionStatement	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , & pcs -> built_in_symbol_sets )"	495:4:16732:16802	8096011	10	True				
ANR	8096102	CallExpression	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , & pcs -> built_in_symbol_sets )"		8096011	0					
ANR	8096103	Callee	pl_dict_set_parent		8096011	0					
ANR	8096104	Identifier	pl_dict_set_parent		8096011	0					
ANR	8096105	ArgumentList	& pcs -> soft_symbol_sets		8096011	1					
ANR	8096106	Argument	& pcs -> soft_symbol_sets		8096011	0					
ANR	8096107	UnaryOperationExpression	& pcs -> soft_symbol_sets		8096011	0					
ANR	8096108	UnaryOperator	&		8096011	0					
ANR	8096109	PtrMemberAccess	pcs -> soft_symbol_sets		8096011	1					
ANR	8096110	Identifier	pcs		8096011	0					
ANR	8096111	Identifier	soft_symbol_sets		8096011	1					
ANR	8096112	Argument	& pcs -> built_in_symbol_sets		8096011	1					
ANR	8096113	UnaryOperationExpression	& pcs -> built_in_symbol_sets		8096011	0					
ANR	8096114	UnaryOperator	&		8096011	0					
ANR	8096115	PtrMemberAccess	pcs -> built_in_symbol_sets		8096011	1					
ANR	8096116	Identifier	pcs		8096011	0					
ANR	8096117	Identifier	built_in_symbol_sets		8096011	1					
ANR	8096118	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> soft_symbol_sets , & denum )"	496:4:16808:16858	8096011	11	True				
ANR	8096119	CallExpression	"pl_dict_enum_begin ( & pcs -> soft_symbol_sets , & denum )"		8096011	0					
ANR	8096120	Callee	pl_dict_enum_begin		8096011	0					
ANR	8096121	Identifier	pl_dict_enum_begin		8096011	0					
ANR	8096122	ArgumentList	& pcs -> soft_symbol_sets		8096011	1					
ANR	8096123	Argument	& pcs -> soft_symbol_sets		8096011	0					
ANR	8096124	UnaryOperationExpression	& pcs -> soft_symbol_sets		8096011	0					
ANR	8096125	UnaryOperator	&		8096011	0					
ANR	8096126	PtrMemberAccess	pcs -> soft_symbol_sets		8096011	1					
ANR	8096127	Identifier	pcs		8096011	0					
ANR	8096128	Identifier	soft_symbol_sets		8096011	1					
ANR	8096129	Argument	& denum		8096011	1					
ANR	8096130	UnaryOperationExpression	& denum		8096011	0					
ANR	8096131	UnaryOperator	&		8096011	0					
ANR	8096132	Identifier	denum		8096011	1					
ANR	8096133	WhileStatement	"while ( pl_dict_enum_next ( & denum , & key , & value ) )"		8096011	12					
ANR	8096134	Condition	"pl_dict_enum_next ( & denum , & key , & value )"	497:11:16871:16909	8096011	0	True				
ANR	8096135	CallExpression	"pl_dict_enum_next ( & denum , & key , & value )"		8096011	0					
ANR	8096136	Callee	pl_dict_enum_next		8096011	0					
ANR	8096137	Identifier	pl_dict_enum_next		8096011	0					
ANR	8096138	ArgumentList	& denum		8096011	1					
ANR	8096139	Argument	& denum		8096011	0					
ANR	8096140	UnaryOperationExpression	& denum		8096011	0					
ANR	8096141	UnaryOperator	&		8096011	0					
ANR	8096142	Identifier	denum		8096011	1					
ANR	8096143	Argument	& key		8096011	1					
ANR	8096144	UnaryOperationExpression	& key		8096011	0					
ANR	8096145	UnaryOperator	&		8096011	0					
ANR	8096146	Identifier	key		8096011	1					
ANR	8096147	Argument	& value		8096011	2					
ANR	8096148	UnaryOperationExpression	& value		8096011	0					
ANR	8096149	UnaryOperator	&		8096011	0					
ANR	8096150	Identifier	value		8096011	1					
ANR	8096151	CompoundStatement		35:8:1370:1394	8096011	1					
ANR	8096152	IdentifierDeclStatement	pcl_symbol_set_t * ssp = ( pcl_symbol_set_t * ) value ;	498:8:16922:16972	8096011	0	True				
ANR	8096153	IdentifierDecl	* ssp = ( pcl_symbol_set_t * ) value		8096011	0					
ANR	8096154	IdentifierDeclType	pcl_symbol_set_t *		8096011	0					
ANR	8096155	Identifier	ssp		8096011	1					
ANR	8096156	AssignmentExpression	* ssp = ( pcl_symbol_set_t * ) value		8096011	2		=			
ANR	8096157	Identifier	ssp		8096011	0					
ANR	8096158	CastExpression	( pcl_symbol_set_t * ) value		8096011	1					
ANR	8096159	CastTarget	pcl_symbol_set_t *		8096011	0					
ANR	8096160	Identifier	value		8096011	1					
ANR	8096161	IdentifierDeclStatement	pl_glyph_vocabulary_t gx ;	499:8:16982:17006	8096011	1	True				
ANR	8096162	IdentifierDecl	gx		8096011	0					
ANR	8096163	IdentifierDeclType	pl_glyph_vocabulary_t		8096011	0					
ANR	8096164	Identifier	gx		8096011	1					
ANR	8096165	ForStatement	for ( gx = plgv_MSL ; gx < plgv_next ; gx ++ )		8096011	2					
ANR	8096166	ForInit	gx = plgv_MSL ;	501:13:17022:17035	8096011	0	True				
ANR	8096167	AssignmentExpression	gx = plgv_MSL		8096011	0		=			
ANR	8096168	Identifier	gx		8096011	0					
ANR	8096169	Identifier	plgv_MSL		8096011	1					
ANR	8096170	Condition	gx < plgv_next	501:28:17037:17050	8096011	1	True				
ANR	8096171	RelationalExpression	gx < plgv_next		8096011	0		<			
ANR	8096172	Identifier	gx		8096011	0					
ANR	8096173	Identifier	plgv_next		8096011	1					
ANR	8096174	PostIncDecOperationExpression	gx ++	501:44:17053:17056	8096011	2	True				
ANR	8096175	Identifier	gx		8096011	0					
ANR	8096176	IncDec	++		8096011	1					
ANR	8096177	IfStatement	"if ( ssp -> maps [ gx ] != NULL && status_check_symbol_set ( pcs , ssp -> maps [ gx ] , storage ) )"		8096011	3					
ANR	8096178	Condition	"ssp -> maps [ gx ] != NULL && status_check_symbol_set ( pcs , ssp -> maps [ gx ] , storage )"	502:16:17075:17167	8096011	0	True				
ANR	8096179	AndExpression	"ssp -> maps [ gx ] != NULL && status_check_symbol_set ( pcs , ssp -> maps [ gx ] , storage )"		8096011	0		&&			
ANR	8096180	EqualityExpression	ssp -> maps [ gx ] != NULL		8096011	0		!=			
ANR	8096181	ArrayIndexing	ssp -> maps [ gx ]		8096011	0					
ANR	8096182	PtrMemberAccess	ssp -> maps		8096011	0					
ANR	8096183	Identifier	ssp		8096011	0					
ANR	8096184	Identifier	maps		8096011	1					
ANR	8096185	Identifier	gx		8096011	1					
ANR	8096186	Identifier	NULL		8096011	1					
ANR	8096187	CallExpression	"status_check_symbol_set ( pcs , ssp -> maps [ gx ] , storage )"		8096011	1					
ANR	8096188	Callee	status_check_symbol_set		8096011	0					
ANR	8096189	Identifier	status_check_symbol_set		8096011	0					
ANR	8096190	ArgumentList	pcs		8096011	1					
ANR	8096191	Argument	pcs		8096011	0					
ANR	8096192	Identifier	pcs		8096011	0					
ANR	8096193	Argument	ssp -> maps [ gx ]		8096011	1					
ANR	8096194	ArrayIndexing	ssp -> maps [ gx ]		8096011	0					
ANR	8096195	PtrMemberAccess	ssp -> maps		8096011	0					
ANR	8096196	Identifier	ssp		8096011	0					
ANR	8096197	Identifier	maps		8096011	1					
ANR	8096198	Identifier	gx		8096011	1					
ANR	8096199	Argument	storage		8096011	2					
ANR	8096200	Identifier	storage		8096011	0					
ANR	8096201	CompoundStatement		39:70:1558:1558	8096011	1					
ANR	8096202	ExpressionStatement	"nid = status_add_symbol_id ( idlist , nid , ( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ] )"	504:16:17188:17365	8096011	0	True				
ANR	8096203	AssignmentExpression	"nid = status_add_symbol_id ( idlist , nid , ( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ] )"		8096011	0		=			
ANR	8096204	Identifier	nid		8096011	0					
ANR	8096205	CallExpression	"status_add_symbol_id ( idlist , nid , ( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ] )"		8096011	1					
ANR	8096206	Callee	status_add_symbol_id		8096011	0					
ANR	8096207	Identifier	status_add_symbol_id		8096011	0					
ANR	8096208	ArgumentList	idlist		8096011	1					
ANR	8096209	Argument	idlist		8096011	0					
ANR	8096210	Identifier	idlist		8096011	0					
ANR	8096211	Argument	nid		8096011	1					
ANR	8096212	Identifier	nid		8096011	0					
ANR	8096213	Argument	( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ]		8096011	2					
ANR	8096214	AdditiveExpression	( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ]		8096011	0		+			
ANR	8096215	ShiftExpression	ssp -> maps [ gx ] -> id [ 0 ] << 8		8096011	0		<<			
ANR	8096216	ArrayIndexing	ssp -> maps [ gx ] -> id [ 0 ]		8096011	0					
ANR	8096217	PtrMemberAccess	ssp -> maps [ gx ] -> id		8096011	0					
ANR	8096218	ArrayIndexing	ssp -> maps [ gx ]		8096011	0					
ANR	8096219	PtrMemberAccess	ssp -> maps		8096011	0					
ANR	8096220	Identifier	ssp		8096011	0					
ANR	8096221	Identifier	maps		8096011	1					
ANR	8096222	Identifier	gx		8096011	1					
ANR	8096223	Identifier	id		8096011	1					
ANR	8096224	PrimaryExpression	0		8096011	1					
ANR	8096225	PrimaryExpression	8		8096011	1					
ANR	8096226	ArrayIndexing	ssp -> maps [ gx ] -> id [ 1 ]		8096011	1					
ANR	8096227	PtrMemberAccess	ssp -> maps [ gx ] -> id		8096011	0					
ANR	8096228	ArrayIndexing	ssp -> maps [ gx ]		8096011	0					
ANR	8096229	PtrMemberAccess	ssp -> maps		8096011	0					
ANR	8096230	Identifier	ssp		8096011	0					
ANR	8096231	Identifier	maps		8096011	1					
ANR	8096232	Identifier	gx		8096011	1					
ANR	8096233	Identifier	id		8096011	1					
ANR	8096234	PrimaryExpression	1		8096011	1					
ANR	8096235	BreakStatement	break ;	507:16:17383:17388	8096011	1	True				
ANR	8096236	ExpressionStatement	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , NULL )"	510:4:17446:17494	8096011	13	True				
ANR	8096237	CallExpression	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , NULL )"		8096011	0					
ANR	8096238	Callee	pl_dict_set_parent		8096011	0					
ANR	8096239	Identifier	pl_dict_set_parent		8096011	0					
ANR	8096240	ArgumentList	& pcs -> soft_symbol_sets		8096011	1					
ANR	8096241	Argument	& pcs -> soft_symbol_sets		8096011	0					
ANR	8096242	UnaryOperationExpression	& pcs -> soft_symbol_sets		8096011	0					
ANR	8096243	UnaryOperator	&		8096011	0					
ANR	8096244	PtrMemberAccess	pcs -> soft_symbol_sets		8096011	1					
ANR	8096245	Identifier	pcs		8096011	0					
ANR	8096246	Identifier	soft_symbol_sets		8096011	1					
ANR	8096247	Argument	NULL		8096011	1					
ANR	8096248	Identifier	NULL		8096011	0					
ANR	8096249	ExpressionStatement	"status_print_idlist ( s , idlist , nid , ""IDLIST"" )"	513:4:17543:17588	8096011	14	True				
ANR	8096250	CallExpression	"status_print_idlist ( s , idlist , nid , ""IDLIST"" )"		8096011	0					
ANR	8096251	Callee	status_print_idlist		8096011	0					
ANR	8096252	Identifier	status_print_idlist		8096011	0					
ANR	8096253	ArgumentList	s		8096011	1					
ANR	8096254	Argument	s		8096011	0					
ANR	8096255	Identifier	s		8096011	0					
ANR	8096256	Argument	idlist		8096011	1					
ANR	8096257	Identifier	idlist		8096011	0					
ANR	8096258	Argument	nid		8096011	2					
ANR	8096259	Identifier	nid		8096011	0					
ANR	8096260	Argument	"""IDLIST"""		8096011	3					
ANR	8096261	PrimaryExpression	"""IDLIST"""		8096011	0					
ANR	8096262	ExpressionStatement	"gs_free_object ( pcs -> memory , ( void * ) idlist , ""status_symbol_sets(idlist)"" )"	514:4:17594:17667	8096011	15	True				
ANR	8096263	CallExpression	"gs_free_object ( pcs -> memory , ( void * ) idlist , ""status_symbol_sets(idlist)"" )"		8096011	0					
ANR	8096264	Callee	gs_free_object		8096011	0					
ANR	8096265	Identifier	gs_free_object		8096011	0					
ANR	8096266	ArgumentList	pcs -> memory		8096011	1					
ANR	8096267	Argument	pcs -> memory		8096011	0					
ANR	8096268	PtrMemberAccess	pcs -> memory		8096011	0					
ANR	8096269	Identifier	pcs		8096011	0					
ANR	8096270	Identifier	memory		8096011	1					
ANR	8096271	Argument	( void * ) idlist		8096011	1					
ANR	8096272	CastExpression	( void * ) idlist		8096011	0					
ANR	8096273	CastTarget	void *		8096011	0					
ANR	8096274	Identifier	idlist		8096011	1					
ANR	8096275	Argument	"""status_symbol_sets(idlist)"""		8096011	2					
ANR	8096276	PrimaryExpression	"""status_symbol_sets(idlist)"""		8096011	0					
ANR	8096277	ReturnStatement	return 0 ;	515:4:17673:17681	8096011	16	True				
ANR	8096278	PrimaryExpression	0		8096011	0					
ANR	8096279	ReturnType	static int		8096011	1					
ANR	8096280	Identifier	status_symbol_sets		8096011	2					
ANR	8096281	ParameterList	"stream * s , pcl_state_t * pcs , pcl_data_storage_t storage"		8096011	3					
ANR	8096282	Parameter	stream * s	464:19:15552:15561	8096011	0	True				
ANR	8096283	ParameterType	stream *		8096011	0					
ANR	8096284	Identifier	s		8096011	1					
ANR	8096285	Parameter	pcl_state_t * pcs	464:31:15564:15580	8096011	1	True				
ANR	8096286	ParameterType	pcl_state_t *		8096011	0					
ANR	8096287	Identifier	pcs		8096011	1					
ANR	8096288	Parameter	pcl_data_storage_t storage	464:50:15583:15608	8096011	2	True				
ANR	8096289	ParameterType	pcl_data_storage_t		8096011	0					
ANR	8096290	Identifier	storage		8096011	1					
ANR	8096291	CFGEntryNode	ENTRY		8096011		True				
ANR	8096292	CFGExitNode	EXIT		8096011		True				
ANR	8096293	Symbol	plgv_MSL		8096011						
ANR	8096294	Symbol	& key		8096011						
ANR	8096295	Symbol	& value		8096011						
ANR	8096296	Symbol	nid		8096011						
ANR	8096297	Symbol	& pcs -> built_in_symbol_sets		8096011						
ANR	8096298	Symbol	* pcs		8096011						
ANR	8096299	Symbol	storage		8096011						
ANR	8096300	Symbol	* * * ssp		8096011						
ANR	8096301	Symbol	ssp		8096011						
ANR	8096302	Symbol	& denum		8096011						
ANR	8096303	Symbol	denum		8096011						
ANR	8096304	Symbol	e_Memory		8096011						
ANR	8096305	Symbol	ssp -> maps [ gx ] -> id		8096011						
ANR	8096306	Symbol	idlist		8096011						
ANR	8096307	Symbol	pcs -> memory		8096011						
ANR	8096308	Symbol	plgv_next		8096011						
ANR	8096309	Symbol	value		8096011						
ANR	8096310	Symbol	ssp -> maps		8096011						
ANR	8096311	Symbol	* * ssp -> maps		8096011						
ANR	8096312	Symbol	key		8096011						
ANR	8096313	Symbol	* ssp -> maps		8096011						
ANR	8096314	Symbol	* * gx		8096011						
ANR	8096315	Symbol	pcs		8096011						
ANR	8096316	Symbol	pl_dict_length		8096011						
ANR	8096317	Symbol	gs_alloc_bytes		8096011						
ANR	8096318	Symbol	NULL		8096011						
ANR	8096319	Symbol	* * ssp		8096011						
ANR	8096320	Symbol	* * * ssp -> maps		8096011						
ANR	8096321	Symbol	false		8096011						
ANR	8096322	Symbol	* * * gx		8096011						
ANR	8096323	Symbol	status_check_symbol_set		8096011						
ANR	8096324	Symbol	* * * * ssp		8096011						
ANR	8096325	Symbol	* ssp -> maps [ gx ] -> id		8096011						
ANR	8096326	Symbol	pl_dict_enum_next		8096011						
ANR	8096327	Symbol	& pcs -> soft_symbol_sets		8096011						
ANR	8096328	Symbol	gx		8096011						
ANR	8096329	Symbol	s		8096011						
ANR	8096330	Symbol	* gx		8096011						
ANR	8096331	Symbol	* ssp		8096011						
ANR	8096332	Symbol	status_add_symbol_id		8096011						
ANR	8096333	Function	status_fonts_extended	518:0:17686:17853							
ANR	8096334	FunctionDef	"status_fonts_extended (stream * s , pcl_state_t * pcs , pcl_data_storage_t storage)"		8096333	0					
ANR	8096335	CompoundStatement		521:0:17800:17853	8096333	0					
ANR	8096336	ReturnStatement	"return status_do_fonts ( s , pcs , storage , true ) ;"	522:4:17806:17851	8096333	0	True				
ANR	8096337	CallExpression	"status_do_fonts ( s , pcs , storage , true )"		8096333	0					
ANR	8096338	Callee	status_do_fonts		8096333	0					
ANR	8096339	Identifier	status_do_fonts		8096333	0					
ANR	8096340	ArgumentList	s		8096333	1					
ANR	8096341	Argument	s		8096333	0					
ANR	8096342	Identifier	s		8096333	0					
ANR	8096343	Argument	pcs		8096333	1					
ANR	8096344	Identifier	pcs		8096333	0					
ANR	8096345	Argument	storage		8096333	2					
ANR	8096346	Identifier	storage		8096333	0					
ANR	8096347	Argument	true		8096333	3					
ANR	8096348	Identifier	true		8096333	0					
ANR	8096349	ReturnType	static int		8096333	1					
ANR	8096350	Identifier	status_fonts_extended		8096333	2					
ANR	8096351	ParameterList	"stream * s , pcl_state_t * pcs , pcl_data_storage_t storage"		8096333	3					
ANR	8096352	Parameter	stream * s	519:22:17719:17728	8096333	0	True				
ANR	8096353	ParameterType	stream *		8096333	0					
ANR	8096354	Identifier	s		8096333	1					
ANR	8096355	Parameter	pcl_state_t * pcs	519:34:17731:17747	8096333	1	True				
ANR	8096356	ParameterType	pcl_state_t *		8096333	0					
ANR	8096357	Identifier	pcs		8096333	1					
ANR	8096358	Parameter	pcl_data_storage_t storage	520:22:17772:17797	8096333	2	True				
ANR	8096359	ParameterType	pcl_data_storage_t		8096333	0					
ANR	8096360	Identifier	storage		8096333	1					
ANR	8096361	CFGEntryNode	ENTRY		8096333		True				
ANR	8096362	CFGExitNode	EXIT		8096333		True				
ANR	8096363	Symbol	pcs		8096333						
ANR	8096364	Symbol	s		8096333						
ANR	8096365	Symbol	true		8096333						
ANR	8096366	Symbol	status_do_fonts		8096333						
ANR	8096367	Symbol	storage		8096333						
ANR	8096368	Function	pcl_set_readback_loc_type	532:0:18106:18284							
ANR	8096369	FunctionDef	"pcl_set_readback_loc_type (pcl_args_t * pargs , pcl_state_t * pcs)"		8096368	0					
ANR	8096370	CompoundStatement		534:0:18226:18284	8096368	0					
ANR	8096371	ExpressionStatement	pcs -> location_type = uint_arg ( pargs )	535:4:18232:18268	8096368	0	True				
ANR	8096372	AssignmentExpression	pcs -> location_type = uint_arg ( pargs )		8096368	0		=			
ANR	8096373	PtrMemberAccess	pcs -> location_type		8096368	0					
ANR	8096374	Identifier	pcs		8096368	0					
ANR	8096375	Identifier	location_type		8096368	1					
ANR	8096376	CallExpression	uint_arg ( pargs )		8096368	1					
ANR	8096377	Callee	uint_arg		8096368	0					
ANR	8096378	Identifier	uint_arg		8096368	0					
ANR	8096379	ArgumentList	pargs		8096368	1					
ANR	8096380	Argument	pargs		8096368	0					
ANR	8096381	Identifier	pargs		8096368	0					
ANR	8096382	ReturnStatement	return 0 ;	536:4:18274:18282	8096368	1	True				
ANR	8096383	PrimaryExpression	0		8096368	0					
ANR	8096384	ReturnType	static int		8096368	1					
ANR	8096385	Identifier	pcl_set_readback_loc_type		8096368	2					
ANR	8096386	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8096368	3					
ANR	8096387	Parameter	pcl_args_t * pargs	533:26:18187:18204	8096368	0	True				
ANR	8096388	ParameterType	pcl_args_t *		8096368	0					
ANR	8096389	Identifier	pargs		8096368	1					
ANR	8096390	Parameter	pcl_state_t * pcs	533:46:18207:18223	8096368	1	True				
ANR	8096391	ParameterType	pcl_state_t *		8096368	0					
ANR	8096392	Identifier	pcs		8096368	1					
ANR	8096393	CFGEntryNode	ENTRY		8096368		True				
ANR	8096394	CFGExitNode	EXIT		8096368		True				
ANR	8096395	Symbol	pcs		8096368						
ANR	8096396	Symbol	pcs -> location_type		8096368						
ANR	8096397	Symbol	pargs		8096368						
ANR	8096398	Symbol	* pcs		8096368						
ANR	8096399	Symbol	uint_arg		8096368						
ANR	8096400	Function	pcl_set_readback_loc_unit	539:0:18287:18465							
ANR	8096401	FunctionDef	"pcl_set_readback_loc_unit (pcl_args_t * pargs , pcl_state_t * pcs)"		8096400	0					
ANR	8096402	CompoundStatement		541:0:18407:18465	8096400	0					
ANR	8096403	ExpressionStatement	pcs -> location_unit = uint_arg ( pargs )	542:4:18413:18449	8096400	0	True				
ANR	8096404	AssignmentExpression	pcs -> location_unit = uint_arg ( pargs )		8096400	0		=			
ANR	8096405	PtrMemberAccess	pcs -> location_unit		8096400	0					
ANR	8096406	Identifier	pcs		8096400	0					
ANR	8096407	Identifier	location_unit		8096400	1					
ANR	8096408	CallExpression	uint_arg ( pargs )		8096400	1					
ANR	8096409	Callee	uint_arg		8096400	0					
ANR	8096410	Identifier	uint_arg		8096400	0					
ANR	8096411	ArgumentList	pargs		8096400	1					
ANR	8096412	Argument	pargs		8096400	0					
ANR	8096413	Identifier	pargs		8096400	0					
ANR	8096414	ReturnStatement	return 0 ;	543:4:18455:18463	8096400	1	True				
ANR	8096415	PrimaryExpression	0		8096400	0					
ANR	8096416	ReturnType	static int		8096400	1					
ANR	8096417	Identifier	pcl_set_readback_loc_unit		8096400	2					
ANR	8096418	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8096400	3					
ANR	8096419	Parameter	pcl_args_t * pargs	540:26:18368:18385	8096400	0	True				
ANR	8096420	ParameterType	pcl_args_t *		8096400	0					
ANR	8096421	Identifier	pargs		8096400	1					
ANR	8096422	Parameter	pcl_state_t * pcs	540:46:18388:18404	8096400	1	True				
ANR	8096423	ParameterType	pcl_state_t *		8096400	0					
ANR	8096424	Identifier	pcs		8096400	1					
ANR	8096425	CFGEntryNode	ENTRY		8096400		True				
ANR	8096426	CFGExitNode	EXIT		8096400		True				
ANR	8096427	Symbol	pcs		8096400						
ANR	8096428	Symbol	pargs		8096400						
ANR	8096429	Symbol	* pcs		8096400						
ANR	8096430	Symbol	uint_arg		8096400						
ANR	8096431	Symbol	pcs -> location_unit		8096400						
ANR	8096432	Function	pcl_inquire_readback_entity	546:0:18468:21368							
ANR	8096433	FunctionDef	"pcl_inquire_readback_entity (pcl_args_t * pargs , pcl_state_t * pcs)"		8096432	0					
ANR	8096434	CompoundStatement		548:0:18590:21368	8096432	0					
ANR	8096435	IdentifierDeclStatement	uint i = uint_arg ( pargs ) ;	549:4:18596:18620	8096432	0	True				
ANR	8096436	IdentifierDecl	i = uint_arg ( pargs )		8096432	0					
ANR	8096437	IdentifierDeclType	uint		8096432	0					
ANR	8096438	Identifier	i		8096432	1					
ANR	8096439	AssignmentExpression	i = uint_arg ( pargs )		8096432	2		=			
ANR	8096440	Identifier	i		8096432	0					
ANR	8096441	CallExpression	uint_arg ( pargs )		8096432	1					
ANR	8096442	Callee	uint_arg		8096432	0					
ANR	8096443	Identifier	uint_arg		8096432	0					
ANR	8096444	ArgumentList	pargs		8096432	1					
ANR	8096445	Argument	pargs		8096432	0					
ANR	8096446	Identifier	pargs		8096432	0					
ANR	8096447	IdentifierDeclStatement	int unit = pcs -> location_unit ;	550:4:18626:18655	8096432	1	True				
ANR	8096448	IdentifierDecl	unit = pcs -> location_unit		8096432	0					
ANR	8096449	IdentifierDeclType	int		8096432	0					
ANR	8096450	Identifier	unit		8096432	1					
ANR	8096451	AssignmentExpression	unit = pcs -> location_unit		8096432	2		=			
ANR	8096452	Identifier	unit		8096432	0					
ANR	8096453	PtrMemberAccess	pcs -> location_unit		8096432	1					
ANR	8096454	Identifier	pcs		8096432	0					
ANR	8096455	Identifier	location_unit		8096432	1					
ANR	8096456	IdentifierDeclStatement	stream st ;	551:4:18661:18670	8096432	2	True				
ANR	8096457	IdentifierDecl	st		8096432	0					
ANR	8096458	IdentifierDeclType	stream		8096432	0					
ANR	8096459	Identifier	st		8096432	1					
ANR	8096460	Statement	static	553:4:18677:18682	8096432	3	True				
ANR	8096461	IdentifierDeclStatement	"const char * entity_types [ ] = { ""FONTS"" , ""MACROS"" , ""PATTERNS"" , ""SYMBOLSETS"" , ""FONTS EXTENDED"" } ;"	553:11:18684:18790	8096432	4	True				
ANR	8096462	IdentifierDecl	"* entity_types [ ] = { ""FONTS"" , ""MACROS"" , ""PATTERNS"" , ""SYMBOLSETS"" , ""FONTS EXTENDED"" }"		8096432	0					
ANR	8096463	IdentifierDeclType	const char * [ ]		8096432	0					
ANR	8096464	Identifier	entity_types		8096432	1					
ANR	8096465	AssignmentExpression	"* entity_types [ ] = { ""FONTS"" , ""MACROS"" , ""PATTERNS"" , ""SYMBOLSETS"" , ""FONTS EXTENDED"" }"		8096432	2		=			
ANR	8096466	Identifier	entity_types		8096432	0					
ANR	8096467	InitializerList	"""FONTS"""		8096432	1					
ANR	8096468	PrimaryExpression	"""FONTS"""		8096432	0					
ANR	8096469	PrimaryExpression	"""MACROS"""		8096432	1					
ANR	8096470	PrimaryExpression	"""PATTERNS"""		8096432	2					
ANR	8096471	PrimaryExpression	"""SYMBOLSETS"""		8096432	3					
ANR	8096472	PrimaryExpression	"""FONTS EXTENDED"""		8096432	4					
ANR	8096473	IdentifierDeclStatement	pcl_data_storage_t storage ;	556:4:18796:18822	8096432	5	True				
ANR	8096474	IdentifierDecl	storage		8096432	0					
ANR	8096475	IdentifierDeclType	pcl_data_storage_t		8096432	0					
ANR	8096476	Identifier	storage		8096432	1					
ANR	8096477	IdentifierDeclStatement	int code = 0 ;	557:4:18828:18840	8096432	6	True				
ANR	8096478	IdentifierDecl	code = 0		8096432	0					
ANR	8096479	IdentifierDeclType	int		8096432	0					
ANR	8096480	Identifier	code		8096432	1					
ANR	8096481	AssignmentExpression	code = 0		8096432	2		=			
ANR	8096482	Identifier	code		8096432	0					
ANR	8096483	PrimaryExpression	0		8096432	1					
ANR	8096484	IdentifierDeclStatement	long pos ;	558:4:18846:18854	8096432	7	True				
ANR	8096485	IdentifierDecl	pos		8096432	0					
ANR	8096486	IdentifierDeclType	long		8096432	0					
ANR	8096487	Identifier	pos		8096432	1					
ANR	8096488	IfStatement	if ( i > 4 )		8096432	8					
ANR	8096489	Condition	i > 4	560:8:18865:18869	8096432	0	True				
ANR	8096490	RelationalExpression	i > 4		8096432	0		>			
ANR	8096491	Identifier	i		8096432	0					
ANR	8096492	PrimaryExpression	4		8096432	1					
ANR	8096493	ReturnStatement	return e_Range ;	561:8:18880:18894	8096432	1	True				
ANR	8096494	Identifier	e_Range		8096432	0					
ANR	8096495	ExpressionStatement	"status_begin ( & st , pcs )"	562:4:18900:18922	8096432	9	True				
ANR	8096496	CallExpression	"status_begin ( & st , pcs )"		8096432	0					
ANR	8096497	Callee	status_begin		8096432	0					
ANR	8096498	Identifier	status_begin		8096432	0					
ANR	8096499	ArgumentList	& st		8096432	1					
ANR	8096500	Argument	& st		8096432	0					
ANR	8096501	UnaryOperationExpression	& st		8096432	0					
ANR	8096502	UnaryOperator	&		8096432	0					
ANR	8096503	Identifier	st		8096432	1					
ANR	8096504	Argument	pcs		8096432	1					
ANR	8096505	Identifier	pcs		8096432	0					
ANR	8096506	ExpressionStatement	"stprintf ( & st , ""INFO %s\\r\\n"" , entity_types [ i ] )"	563:4:18928:18973	8096432	10	True				
ANR	8096507	CallExpression	"stprintf ( & st , ""INFO %s\\r\\n"" , entity_types [ i ] )"		8096432	0					
ANR	8096508	Callee	stprintf		8096432	0					
ANR	8096509	Identifier	stprintf		8096432	0					
ANR	8096510	ArgumentList	& st		8096432	1					
ANR	8096511	Argument	& st		8096432	0					
ANR	8096512	UnaryOperationExpression	& st		8096432	0					
ANR	8096513	UnaryOperator	&		8096432	0					
ANR	8096514	Identifier	st		8096432	1					
ANR	8096515	Argument	"""INFO %s\\r\\n"""		8096432	1					
ANR	8096516	PrimaryExpression	"""INFO %s\\r\\n"""		8096432	0					
ANR	8096517	Argument	entity_types [ i ]		8096432	2					
ANR	8096518	ArrayIndexing	entity_types [ i ]		8096432	0					
ANR	8096519	Identifier	entity_types		8096432	0					
ANR	8096520	Identifier	i		8096432	1					
ANR	8096521	SwitchStatement	switch ( pcs -> location_type )		8096432	11					
ANR	8096522	Condition	pcs -> location_type	564:12:18987:19004	8096432	0	True				
ANR	8096523	PtrMemberAccess	pcs -> location_type		8096432	0					
ANR	8096524	Identifier	pcs		8096432	0					
ANR	8096525	Identifier	location_type		8096432	1					
ANR	8096526	CompoundStatement		17:32:416:416	8096432	1					
ANR	8096527	Label	case 0 :	565:8:19017:19023	8096432	0	True				
ANR	8096528	ExpressionStatement	code = - 1	566:12:19075:19084	8096432	1	True				
ANR	8096529	AssignmentExpression	code = - 1		8096432	0		=			
ANR	8096530	Identifier	code		8096432	0					
ANR	8096531	UnaryOperationExpression	- 1		8096432	1					
ANR	8096532	UnaryOperator	-		8096432	0					
ANR	8096533	PrimaryExpression	1		8096432	1					
ANR	8096534	BreakStatement	break ;	567:12:19098:19103	8096432	2	True				
ANR	8096535	Label	case 1 :	568:8:19113:19119	8096432	3	True				
ANR	8096536	ExpressionStatement	storage = ( pcl_data_storage_t ) 0	569:12:19173:19205	8096432	4	True				
ANR	8096537	AssignmentExpression	storage = ( pcl_data_storage_t ) 0		8096432	0		=			
ANR	8096538	Identifier	storage		8096432	0					
ANR	8096539	CastExpression	( pcl_data_storage_t ) 0		8096432	1					
ANR	8096540	CastTarget	pcl_data_storage_t		8096432	0					
ANR	8096541	PrimaryExpression	0		8096432	1					
ANR	8096542	BreakStatement	break ;	570:12:19256:19261	8096432	5	True				
ANR	8096543	Label	case 2 :	571:8:19271:19277	8096432	6	True				
ANR	8096544	ExpressionStatement	storage = ( pcl_data_storage_t ) ~ 0	572:12:19326:19360	8096432	7	True				
ANR	8096545	AssignmentExpression	storage = ( pcl_data_storage_t ) ~ 0		8096432	0		=			
ANR	8096546	Identifier	storage		8096432	0					
ANR	8096547	CastExpression	( pcl_data_storage_t ) ~ 0		8096432	1					
ANR	8096548	CastTarget	pcl_data_storage_t		8096432	0					
ANR	8096549	UnaryOperationExpression	~ 0		8096432	1					
ANR	8096550	UnaryOperator	~		8096432	0					
ANR	8096551	PrimaryExpression	0		8096432	1					
ANR	8096552	BreakStatement	break ;	573:12:19374:19379	8096432	8	True				
ANR	8096553	Label	case 3 :	574:8:19389:19395	8096432	9	True				
ANR	8096554	IfStatement	if ( unit != 0 )		8096432	10					
ANR	8096555	Condition	unit != 0	575:16:19443:19451	8096432	0	True				
ANR	8096556	EqualityExpression	unit != 0		8096432	0		!=			
ANR	8096557	Identifier	unit		8096432	0					
ANR	8096558	PrimaryExpression	0		8096432	1					
ANR	8096559	CompoundStatement		28:27:863:863	8096432	1					
ANR	8096560	ExpressionStatement	code = - 1	576:16:19472:19481	8096432	0	True				
ANR	8096561	AssignmentExpression	code = - 1		8096432	0		=			
ANR	8096562	Identifier	code		8096432	0					
ANR	8096563	UnaryOperationExpression	- 1		8096432	1					
ANR	8096564	UnaryOperator	-		8096432	0					
ANR	8096565	PrimaryExpression	1		8096432	1					
ANR	8096566	BreakStatement	break ;	577:16:19499:19504	8096432	1	True				
ANR	8096567	ExpressionStatement	storage = pcds_internal	579:12:19532:19555	8096432	11	True				
ANR	8096568	AssignmentExpression	storage = pcds_internal		8096432	0		=			
ANR	8096569	Identifier	storage		8096432	0					
ANR	8096570	Identifier	pcds_internal		8096432	1					
ANR	8096571	BreakStatement	break ;	580:12:19569:19574	8096432	12	True				
ANR	8096572	Label	case 4 :	581:8:19584:19590	8096432	13	True				
ANR	8096573	IfStatement	if ( unit > 2 )		8096432	14					
ANR	8096574	Condition	unit > 2	582:16:19640:19647	8096432	0	True				
ANR	8096575	RelationalExpression	unit > 2		8096432	0		>			
ANR	8096576	Identifier	unit		8096432	0					
ANR	8096577	PrimaryExpression	2		8096432	1					
ANR	8096578	ExpressionStatement	code = - 1	583:16:19666:19675	8096432	1	True				
ANR	8096579	AssignmentExpression	code = - 1		8096432	0		=			
ANR	8096580	Identifier	code		8096432	0					
ANR	8096581	UnaryOperationExpression	- 1		8096432	1					
ANR	8096582	UnaryOperator	-		8096432	0					
ANR	8096583	PrimaryExpression	1		8096432	1					
ANR	8096584	ElseStatement	else		8096432	0					
ANR	8096585	CompoundStatement		38:23:1128:1253	8096432	0					
ANR	8096586	Statement	static	585:16:19712:19717	8096432	0	True				
ANR	8096587	IdentifierDeclStatement	"const pcl_data_storage_t dl_masks [ ] = { pcds_downloaded , pcds_temporary , pcds_permanent } ;"	585:23:19719:19844	8096432	1	True				
ANR	8096588	IdentifierDecl	"dl_masks [ ] = { pcds_downloaded , pcds_temporary , pcds_permanent }"		8096432	0					
ANR	8096589	IdentifierDeclType	const pcl_data_storage_t [ ]		8096432	0					
ANR	8096590	Identifier	dl_masks		8096432	1					
ANR	8096591	AssignmentExpression	"dl_masks [ ] = { pcds_downloaded , pcds_temporary , pcds_permanent }"		8096432	2		=			
ANR	8096592	Identifier	dl_masks		8096432	0					
ANR	8096593	InitializerList	pcds_downloaded		8096432	1					
ANR	8096594	Identifier	pcds_downloaded		8096432	0					
ANR	8096595	Identifier	pcds_temporary		8096432	1					
ANR	8096596	Identifier	pcds_permanent		8096432	2					
ANR	8096597	ExpressionStatement	storage = dl_masks [ unit ]	588:16:19862:19886	8096432	2	True				
ANR	8096598	AssignmentExpression	storage = dl_masks [ unit ]		8096432	0		=			
ANR	8096599	Identifier	storage		8096432	0					
ANR	8096600	ArrayIndexing	dl_masks [ unit ]		8096432	1					
ANR	8096601	Identifier	dl_masks		8096432	0					
ANR	8096602	Identifier	unit		8096432	1					
ANR	8096603	BreakStatement	break ;	590:12:19914:19919	8096432	15	True				
ANR	8096604	Label	case 5 :	591:8:19929:19935	8096432	16	True				
ANR	8096605	IfStatement	if ( unit == 0 )		8096432	17					
ANR	8096606	Condition	unit == 0	592:16:19985:19993	8096432	0	True				
ANR	8096607	EqualityExpression	unit == 0		8096432	0		==			
ANR	8096608	Identifier	unit		8096432	0					
ANR	8096609	PrimaryExpression	0		8096432	1					
ANR	8096610	ExpressionStatement	storage = ( pcl_data_storage_t ) pcds_all_cartridges	593:16:20012:20062	8096432	1	True				
ANR	8096611	AssignmentExpression	storage = ( pcl_data_storage_t ) pcds_all_cartridges		8096432	0		=			
ANR	8096612	Identifier	storage		8096432	0					
ANR	8096613	CastExpression	( pcl_data_storage_t ) pcds_all_cartridges		8096432	1					
ANR	8096614	CastTarget	pcl_data_storage_t		8096432	0					
ANR	8096615	Identifier	pcds_all_cartridges		8096432	1					
ANR	8096616	ElseStatement	else		8096432	0					
ANR	8096617	IfStatement	if ( unit <= pcds_cartridge_max )		8096432	0					
ANR	8096618	Condition	unit <= pcds_cartridge_max	594:21:20085:20110	8096432	0	True				
ANR	8096619	RelationalExpression	unit <= pcds_cartridge_max		8096432	0		<=			
ANR	8096620	Identifier	unit		8096432	0					
ANR	8096621	Identifier	pcds_cartridge_max		8096432	1					
ANR	8096622	ExpressionStatement	storage = ( pcl_data_storage_t ) ( 1 << ( pcds_cartridge_shift + unit - 1 ) )	595:16:20129:20220	8096432	1	True				
ANR	8096623	AssignmentExpression	storage = ( pcl_data_storage_t ) ( 1 << ( pcds_cartridge_shift + unit - 1 ) )		8096432	0		=			
ANR	8096624	Identifier	storage		8096432	0					
ANR	8096625	CastExpression	( pcl_data_storage_t ) ( 1 << ( pcds_cartridge_shift + unit - 1 ) )		8096432	1					
ANR	8096626	CastTarget	pcl_data_storage_t		8096432	0					
ANR	8096627	ShiftExpression	1 << ( pcds_cartridge_shift + unit - 1 )		8096432	1		<<			
ANR	8096628	PrimaryExpression	1		8096432	0					
ANR	8096629	AdditiveExpression	pcds_cartridge_shift + unit - 1		8096432	1		+			
ANR	8096630	Identifier	pcds_cartridge_shift		8096432	0					
ANR	8096631	AdditiveExpression	unit - 1		8096432	1		-			
ANR	8096632	Identifier	unit		8096432	0					
ANR	8096633	PrimaryExpression	1		8096432	1					
ANR	8096634	ElseStatement	else		8096432	0					
ANR	8096635	ExpressionStatement	code = - 1	598:16:20255:20264	8096432	0	True				
ANR	8096636	AssignmentExpression	code = - 1		8096432	0		=			
ANR	8096637	Identifier	code		8096432	0					
ANR	8096638	UnaryOperationExpression	- 1		8096432	1					
ANR	8096639	UnaryOperator	-		8096432	0					
ANR	8096640	PrimaryExpression	1		8096432	1					
ANR	8096641	BreakStatement	break ;	599:12:20278:20283	8096432	18	True				
ANR	8096642	Label	case 6 :	600:8:20293:20299	8096432	19	True				
ANR	8096643	IfStatement	if ( unit == 0 )		8096432	20					
ANR	8096644	Condition	unit == 0	601:16:20344:20352	8096432	0	True				
ANR	8096645	EqualityExpression	unit == 0		8096432	0		==			
ANR	8096646	Identifier	unit		8096432	0					
ANR	8096647	PrimaryExpression	0		8096432	1					
ANR	8096648	ExpressionStatement	storage = ( pcl_data_storage_t ) pcds_all_simms	602:16:20371:20416	8096432	1	True				
ANR	8096649	AssignmentExpression	storage = ( pcl_data_storage_t ) pcds_all_simms		8096432	0		=			
ANR	8096650	Identifier	storage		8096432	0					
ANR	8096651	CastExpression	( pcl_data_storage_t ) pcds_all_simms		8096432	1					
ANR	8096652	CastTarget	pcl_data_storage_t		8096432	0					
ANR	8096653	Identifier	pcds_all_simms		8096432	1					
ANR	8096654	ElseStatement	else		8096432	0					
ANR	8096655	IfStatement	if ( unit <= pcds_simm_max )		8096432	0					
ANR	8096656	Condition	unit <= pcds_simm_max	603:21:20439:20459	8096432	0	True				
ANR	8096657	RelationalExpression	unit <= pcds_simm_max		8096432	0		<=			
ANR	8096658	Identifier	unit		8096432	0					
ANR	8096659	Identifier	pcds_simm_max		8096432	1					
ANR	8096660	ExpressionStatement	storage = ( pcl_data_storage_t ) ( 1 << ( pcds_simm_shift + unit - 1 ) )	604:16:20478:20564	8096432	1	True				
ANR	8096661	AssignmentExpression	storage = ( pcl_data_storage_t ) ( 1 << ( pcds_simm_shift + unit - 1 ) )		8096432	0		=			
ANR	8096662	Identifier	storage		8096432	0					
ANR	8096663	CastExpression	( pcl_data_storage_t ) ( 1 << ( pcds_simm_shift + unit - 1 ) )		8096432	1					
ANR	8096664	CastTarget	pcl_data_storage_t		8096432	0					
ANR	8096665	ShiftExpression	1 << ( pcds_simm_shift + unit - 1 )		8096432	1		<<			
ANR	8096666	PrimaryExpression	1		8096432	0					
ANR	8096667	AdditiveExpression	pcds_simm_shift + unit - 1		8096432	1		+			
ANR	8096668	Identifier	pcds_simm_shift		8096432	0					
ANR	8096669	AdditiveExpression	unit - 1		8096432	1		-			
ANR	8096670	Identifier	unit		8096432	0					
ANR	8096671	PrimaryExpression	1		8096432	1					
ANR	8096672	ElseStatement	else		8096432	0					
ANR	8096673	ExpressionStatement	code = - 1	607:16:20599:20608	8096432	0	True				
ANR	8096674	AssignmentExpression	code = - 1		8096432	0		=			
ANR	8096675	Identifier	code		8096432	0					
ANR	8096676	UnaryOperationExpression	- 1		8096432	1					
ANR	8096677	UnaryOperator	-		8096432	0					
ANR	8096678	PrimaryExpression	1		8096432	1					
ANR	8096679	BreakStatement	break ;	608:12:20622:20627	8096432	21	True				
ANR	8096680	Label	default :	609:8:20637:20644	8096432	22	True				
ANR	8096681	Identifier	default		8096432	0					
ANR	8096682	ExpressionStatement	code = - 1	610:12:20658:20667	8096432	23	True				
ANR	8096683	AssignmentExpression	code = - 1		8096432	0		=			
ANR	8096684	Identifier	code		8096432	0					
ANR	8096685	UnaryOperationExpression	- 1		8096432	1					
ANR	8096686	UnaryOperator	-		8096432	0					
ANR	8096687	PrimaryExpression	1		8096432	1					
ANR	8096688	ExpressionStatement	"stputs ( & st , ""ERROR=INVALID ENTITY\\r\\n"" )"	611:12:20681:20720	8096432	24	True				
ANR	8096689	CallExpression	"stputs ( & st , ""ERROR=INVALID ENTITY\\r\\n"" )"		8096432	0					
ANR	8096690	Callee	stputs		8096432	0					
ANR	8096691	Identifier	stputs		8096432	0					
ANR	8096692	ArgumentList	& st		8096432	1					
ANR	8096693	Argument	& st		8096432	0					
ANR	8096694	UnaryOperationExpression	& st		8096432	0					
ANR	8096695	UnaryOperator	&		8096432	0					
ANR	8096696	Identifier	st		8096432	1					
ANR	8096697	Argument	"""ERROR=INVALID ENTITY\\r\\n"""		8096432	1					
ANR	8096698	PrimaryExpression	"""ERROR=INVALID ENTITY\\r\\n"""		8096432	0					
ANR	8096699	BreakStatement	break ;	612:12:20734:20739	8096432	25	True				
ANR	8096700	IfStatement	if ( code >= 0 )		8096432	12					
ANR	8096701	Condition	code >= 0	614:8:20755:20763	8096432	0	True				
ANR	8096702	RelationalExpression	code >= 0		8096432	0		>=			
ANR	8096703	Identifier	code		8096432	0					
ANR	8096704	PrimaryExpression	0		8096432	1					
ANR	8096705	CompoundStatement		67:19:2175:2175	8096432	1					
ANR	8096706	ExpressionStatement	pos = stell ( & st )	615:8:20776:20792	8096432	0	True				
ANR	8096707	AssignmentExpression	pos = stell ( & st )		8096432	0		=			
ANR	8096708	Identifier	pos		8096432	0					
ANR	8096709	CallExpression	stell ( & st )		8096432	1					
ANR	8096710	Callee	stell		8096432	0					
ANR	8096711	Identifier	stell		8096432	0					
ANR	8096712	ArgumentList	& st		8096432	1					
ANR	8096713	Argument	& st		8096432	0					
ANR	8096714	UnaryOperationExpression	& st		8096432	0					
ANR	8096715	UnaryOperator	&		8096432	0					
ANR	8096716	Identifier	st		8096432	1					
ANR	8096717	ExpressionStatement	"code = ( * status_write [ i ] ) ( & st , pcs , storage )"	616:8:20802:20847	8096432	1	True				
ANR	8096718	AssignmentExpression	"code = ( * status_write [ i ] ) ( & st , pcs , storage )"		8096432	0		=			
ANR	8096719	Identifier	code		8096432	0					
ANR	8096720	CallExpression	"( * status_write [ i ] ) ( & st , pcs , storage )"		8096432	1					
ANR	8096721	Callee	* status_write [ i ]		8096432	0					
ANR	8096722	UnaryOperationExpression	* status_write [ i ]		8096432	0					
ANR	8096723	UnaryOperator	*		8096432	0					
ANR	8096724	ArrayIndexing	status_write [ i ]		8096432	1					
ANR	8096725	Identifier	status_write		8096432	0					
ANR	8096726	Identifier	i		8096432	1					
ANR	8096727	ArgumentList	& st		8096432	1					
ANR	8096728	Argument	& st		8096432	0					
ANR	8096729	UnaryOperationExpression	& st		8096432	0					
ANR	8096730	UnaryOperator	&		8096432	0					
ANR	8096731	Identifier	st		8096432	1					
ANR	8096732	Argument	pcs		8096432	1					
ANR	8096733	Identifier	pcs		8096432	0					
ANR	8096734	Argument	storage		8096432	2					
ANR	8096735	Identifier	storage		8096432	0					
ANR	8096736	IfStatement	if ( code >= 0 )		8096432	2					
ANR	8096737	Condition	code >= 0	617:12:20861:20869	8096432	0	True				
ANR	8096738	RelationalExpression	code >= 0		8096432	0		>=			
ANR	8096739	Identifier	code		8096432	0					
ANR	8096740	PrimaryExpression	0		8096432	1					
ANR	8096741	CompoundStatement		70:23:2281:2281	8096432	1					
ANR	8096742	IfStatement	if ( stell ( & st ) == pos )		8096432	0					
ANR	8096743	Condition	stell ( & st ) == pos	618:16:20890:20906	8096432	0	True				
ANR	8096744	EqualityExpression	stell ( & st ) == pos		8096432	0		==			
ANR	8096745	CallExpression	stell ( & st )		8096432	0					
ANR	8096746	Callee	stell		8096432	0					
ANR	8096747	Identifier	stell		8096432	0					
ANR	8096748	ArgumentList	& st		8096432	1					
ANR	8096749	Argument	& st		8096432	0					
ANR	8096750	UnaryOperationExpression	& st		8096432	0					
ANR	8096751	UnaryOperator	&		8096432	0					
ANR	8096752	Identifier	st		8096432	1					
ANR	8096753	Identifier	pos		8096432	1					
ANR	8096754	ExpressionStatement	"stputs ( & st , ""ERROR=NONE\\r\\n"" )"	619:16:20925:20954	8096432	1	True				
ANR	8096755	CallExpression	"stputs ( & st , ""ERROR=NONE\\r\\n"" )"		8096432	0					
ANR	8096756	Callee	stputs		8096432	0					
ANR	8096757	Identifier	stputs		8096432	0					
ANR	8096758	ArgumentList	& st		8096432	1					
ANR	8096759	Argument	& st		8096432	0					
ANR	8096760	UnaryOperationExpression	& st		8096432	0					
ANR	8096761	UnaryOperator	&		8096432	0					
ANR	8096762	Identifier	st		8096432	1					
ANR	8096763	Argument	"""ERROR=NONE\\r\\n"""		8096432	1					
ANR	8096764	PrimaryExpression	"""ERROR=NONE\\r\\n"""		8096432	0					
ANR	8096765	ElseStatement	else		8096432	0					
ANR	8096766	IfStatement	if ( storage == 0 )		8096432	0					
ANR	8096767	Condition	storage == 0	620:21:20977:20988	8096432	0	True				
ANR	8096768	EqualityExpression	storage == 0		8096432	0		==			
ANR	8096769	Identifier	storage		8096432	0					
ANR	8096770	PrimaryExpression	0		8096432	1					
ANR	8096771	ExpressionStatement	"stprintf ( & st , ""LOCTYPE=%d\\r\\nLOCUNIT=%d\\r\\n"" , pcs -> location_type , unit )"	621:16:21037:21133	8096432	1	True				
ANR	8096772	CallExpression	"stprintf ( & st , ""LOCTYPE=%d\\r\\nLOCUNIT=%d\\r\\n"" , pcs -> location_type , unit )"		8096432	0					
ANR	8096773	Callee	stprintf		8096432	0					
ANR	8096774	Identifier	stprintf		8096432	0					
ANR	8096775	ArgumentList	& st		8096432	1					
ANR	8096776	Argument	& st		8096432	0					
ANR	8096777	UnaryOperationExpression	& st		8096432	0					
ANR	8096778	UnaryOperator	&		8096432	0					
ANR	8096779	Identifier	st		8096432	1					
ANR	8096780	Argument	"""LOCTYPE=%d\\r\\nLOCUNIT=%d\\r\\n"""		8096432	1					
ANR	8096781	PrimaryExpression	"""LOCTYPE=%d\\r\\nLOCUNIT=%d\\r\\n"""		8096432	0					
ANR	8096782	Argument	pcs -> location_type		8096432	2					
ANR	8096783	PtrMemberAccess	pcs -> location_type		8096432	0					
ANR	8096784	Identifier	pcs		8096432	0					
ANR	8096785	Identifier	location_type		8096432	1					
ANR	8096786	Argument	unit		8096432	3					
ANR	8096787	Identifier	unit		8096432	0					
ANR	8096788	IfStatement	if ( code < 0 )		8096432	13					
ANR	8096789	Condition	code < 0	625:8:21159:21166	8096432	0	True				
ANR	8096790	RelationalExpression	code < 0		8096432	0		<			
ANR	8096791	Identifier	code		8096432	0					
ANR	8096792	PrimaryExpression	0		8096432	1					
ANR	8096793	CompoundStatement		78:18:2578:2578	8096432	1					
ANR	8096794	IfStatement	if ( code == e_Memory )		8096432	0					
ANR	8096795	Condition	code == e_Memory	626:12:21183:21198	8096432	0	True				
ANR	8096796	EqualityExpression	code == e_Memory		8096432	0		==			
ANR	8096797	Identifier	code		8096432	0					
ANR	8096798	Identifier	e_Memory		8096432	1					
ANR	8096799	ExpressionStatement	"stputs ( & st , ""ERROR=INTERNAL ERROR\\r\\n"" )"	627:12:21213:21252	8096432	1	True				
ANR	8096800	CallExpression	"stputs ( & st , ""ERROR=INTERNAL ERROR\\r\\n"" )"		8096432	0					
ANR	8096801	Callee	stputs		8096432	0					
ANR	8096802	Identifier	stputs		8096432	0					
ANR	8096803	ArgumentList	& st		8096432	1					
ANR	8096804	Argument	& st		8096432	0					
ANR	8096805	UnaryOperationExpression	& st		8096432	0					
ANR	8096806	UnaryOperator	&		8096432	0					
ANR	8096807	Identifier	st		8096432	1					
ANR	8096808	Argument	"""ERROR=INTERNAL ERROR\\r\\n"""		8096432	1					
ANR	8096809	PrimaryExpression	"""ERROR=INTERNAL ERROR\\r\\n"""		8096432	0					
ANR	8096810	ElseStatement	else		8096432	0					
ANR	8096811	ExpressionStatement	"stputs ( & st , ""ERROR=INVALID LOCATION\\r\\n"" )"	629:12:21279:21320	8096432	0	True				
ANR	8096812	CallExpression	"stputs ( & st , ""ERROR=INVALID LOCATION\\r\\n"" )"		8096432	0					
ANR	8096813	Callee	stputs		8096432	0					
ANR	8096814	Identifier	stputs		8096432	0					
ANR	8096815	ArgumentList	& st		8096432	1					
ANR	8096816	Argument	& st		8096432	0					
ANR	8096817	UnaryOperationExpression	& st		8096432	0					
ANR	8096818	UnaryOperator	&		8096432	0					
ANR	8096819	Identifier	st		8096432	1					
ANR	8096820	Argument	"""ERROR=INVALID LOCATION\\r\\n"""		8096432	1					
ANR	8096821	PrimaryExpression	"""ERROR=INVALID LOCATION\\r\\n"""		8096432	0					
ANR	8096822	ExpressionStatement	"status_end ( & st , pcs )"	631:4:21332:21352	8096432	14	True				
ANR	8096823	CallExpression	"status_end ( & st , pcs )"		8096432	0					
ANR	8096824	Callee	status_end		8096432	0					
ANR	8096825	Identifier	status_end		8096432	0					
ANR	8096826	ArgumentList	& st		8096432	1					
ANR	8096827	Argument	& st		8096432	0					
ANR	8096828	UnaryOperationExpression	& st		8096432	0					
ANR	8096829	UnaryOperator	&		8096432	0					
ANR	8096830	Identifier	st		8096432	1					
ANR	8096831	Argument	pcs		8096432	1					
ANR	8096832	Identifier	pcs		8096432	0					
ANR	8096833	ReturnStatement	return 0 ;	632:4:21358:21366	8096432	15	True				
ANR	8096834	PrimaryExpression	0		8096432	0					
ANR	8096835	ReturnType	static int		8096432	1					
ANR	8096836	Identifier	pcl_inquire_readback_entity		8096432	2					
ANR	8096837	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8096432	3					
ANR	8096838	Parameter	pcl_args_t * pargs	547:28:18551:18568	8096432	0	True				
ANR	8096839	ParameterType	pcl_args_t *		8096432	0					
ANR	8096840	Identifier	pargs		8096432	1					
ANR	8096841	Parameter	pcl_state_t * pcs	547:48:18571:18587	8096432	1	True				
ANR	8096842	ParameterType	pcl_state_t *		8096432	0					
ANR	8096843	Identifier	pcs		8096432	1					
ANR	8096844	CFGEntryNode	ENTRY		8096432		True				
ANR	8096845	CFGExitNode	EXIT		8096432		True				
ANR	8096846	Symbol	code		8096432						
ANR	8096847	Symbol	pcds_cartridge_max		8096432						
ANR	8096848	Symbol	* pcs		8096432						
ANR	8096849	Symbol	& st		8096432						
ANR	8096850	Symbol	pcds_cartridge_shift		8096432						
ANR	8096851	Symbol	storage		8096432						
ANR	8096852	Symbol	pcds_all_cartridges		8096432						
ANR	8096853	Symbol	pargs		8096432						
ANR	8096854	Symbol	pos		8096432						
ANR	8096855	Symbol	e_Memory		8096432						
ANR	8096856	Symbol	entity_types		8096432						
ANR	8096857	Symbol	* status_write [ i ]		8096432						
ANR	8096858	Symbol	* entity_types		8096432						
ANR	8096859	Symbol	pcds_permanent		8096432						
ANR	8096860	Symbol	* unit		8096432						
ANR	8096861	Symbol	e_Range		8096432						
ANR	8096862	Symbol	pcds_simm_shift		8096432						
ANR	8096863	Symbol	pcs		8096432						
ANR	8096864	Symbol	st		8096432						
ANR	8096865	Symbol	* * i		8096432						
ANR	8096866	Symbol	pcds_internal		8096432						
ANR	8096867	Symbol	* * status_write		8096432						
ANR	8096868	Symbol	pcds_all_simms		8096432						
ANR	8096869	Symbol	i		8096432						
ANR	8096870	Symbol	status_write		8096432						
ANR	8096871	Symbol	pcds_downloaded		8096432						
ANR	8096872	Symbol	uint_arg		8096432						
ANR	8096873	Symbol	stell		8096432						
ANR	8096874	Symbol	dl_masks		8096432						
ANR	8096875	Symbol	unit		8096432						
ANR	8096876	Symbol	pcds_temporary		8096432						
ANR	8096877	Symbol	* i		8096432						
ANR	8096878	Symbol	pcs -> location_type		8096432						
ANR	8096879	Symbol	* status_write		8096432						
ANR	8096880	Symbol	pcds_simm_max		8096432						
ANR	8096881	Symbol	* dl_masks		8096432						
ANR	8096882	Symbol	pcs -> location_unit		8096432						
ANR	8096883	Function	pcl_free_space	635:0:21371:22336							
ANR	8096884	FunctionDef	"pcl_free_space (pcl_args_t * pargs , pcl_state_t * pcs)"		8096883	0					
ANR	8096885	CompoundStatement		637:0:21475:22336	8096883	0					
ANR	8096886	IdentifierDeclStatement	stream st ;	638:4:21481:21490	8096883	0	True				
ANR	8096887	IdentifierDecl	st		8096883	0					
ANR	8096888	IdentifierDeclType	stream		8096883	0					
ANR	8096889	Identifier	st		8096883	1					
ANR	8096890	ExpressionStatement	"status_begin ( & st , pcs )"	640:4:21497:21519	8096883	1	True				
ANR	8096891	CallExpression	"status_begin ( & st , pcs )"		8096883	0					
ANR	8096892	Callee	status_begin		8096883	0					
ANR	8096893	Identifier	status_begin		8096883	0					
ANR	8096894	ArgumentList	& st		8096883	1					
ANR	8096895	Argument	& st		8096883	0					
ANR	8096896	UnaryOperationExpression	& st		8096883	0					
ANR	8096897	UnaryOperator	&		8096883	0					
ANR	8096898	Identifier	st		8096883	1					
ANR	8096899	Argument	pcs		8096883	1					
ANR	8096900	Identifier	pcs		8096883	0					
ANR	8096901	ExpressionStatement	"stprintf ( & st , ""INFO MEMORY\\r\\n"" )"	641:4:21525:21557	8096883	2	True				
ANR	8096902	CallExpression	"stprintf ( & st , ""INFO MEMORY\\r\\n"" )"		8096883	0					
ANR	8096903	Callee	stprintf		8096883	0					
ANR	8096904	Identifier	stprintf		8096883	0					
ANR	8096905	ArgumentList	& st		8096883	1					
ANR	8096906	Argument	& st		8096883	0					
ANR	8096907	UnaryOperationExpression	& st		8096883	0					
ANR	8096908	UnaryOperator	&		8096883	0					
ANR	8096909	Identifier	st		8096883	1					
ANR	8096910	Argument	"""INFO MEMORY\\r\\n"""		8096883	1					
ANR	8096911	PrimaryExpression	"""INFO MEMORY\\r\\n"""		8096883	0					
ANR	8096912	IfStatement	if ( int_arg ( pargs ) != 1 )		8096883	3					
ANR	8096913	Condition	int_arg ( pargs ) != 1	642:8:21567:21585	8096883	0	True				
ANR	8096914	EqualityExpression	int_arg ( pargs ) != 1		8096883	0		!=			
ANR	8096915	CallExpression	int_arg ( pargs )		8096883	0					
ANR	8096916	Callee	int_arg		8096883	0					
ANR	8096917	Identifier	int_arg		8096883	0					
ANR	8096918	ArgumentList	pargs		8096883	1					
ANR	8096919	Argument	pargs		8096883	0					
ANR	8096920	Identifier	pargs		8096883	0					
ANR	8096921	PrimaryExpression	1		8096883	1					
ANR	8096922	ExpressionStatement	"stprintf ( & st , ""ERROR=INVALID UNIT\\r\\n"" )"	643:8:21596:21635	8096883	1	True				
ANR	8096923	CallExpression	"stprintf ( & st , ""ERROR=INVALID UNIT\\r\\n"" )"		8096883	0					
ANR	8096924	Callee	stprintf		8096883	0					
ANR	8096925	Identifier	stprintf		8096883	0					
ANR	8096926	ArgumentList	& st		8096883	1					
ANR	8096927	Argument	& st		8096883	0					
ANR	8096928	UnaryOperationExpression	& st		8096883	0					
ANR	8096929	UnaryOperator	&		8096883	0					
ANR	8096930	Identifier	st		8096883	1					
ANR	8096931	Argument	"""ERROR=INVALID UNIT\\r\\n"""		8096883	1					
ANR	8096932	PrimaryExpression	"""ERROR=INVALID UNIT\\r\\n"""		8096883	0					
ANR	8096933	ElseStatement	else		8096883	0					
ANR	8096934	CompoundStatement		9:8:180:204	8096883	0					
ANR	8096935	IdentifierDeclStatement	gs_memory_status_t mstat ;	645:8:21656:21680	8096883	0	True				
ANR	8096936	IdentifierDecl	mstat		8096883	0					
ANR	8096937	IdentifierDeclType	gs_memory_status_t		8096883	0					
ANR	8096938	Identifier	mstat		8096883	1					
ANR	8096939	ExpressionStatement	"gs_memory_status ( pcs -> memory , & mstat )"	647:8:21691:21728	8096883	1	True				
ANR	8096940	CallExpression	"gs_memory_status ( pcs -> memory , & mstat )"		8096883	0					
ANR	8096941	Callee	gs_memory_status		8096883	0					
ANR	8096942	Identifier	gs_memory_status		8096883	0					
ANR	8096943	ArgumentList	pcs -> memory		8096883	1					
ANR	8096944	Argument	pcs -> memory		8096883	0					
ANR	8096945	PtrMemberAccess	pcs -> memory		8096883	0					
ANR	8096946	Identifier	pcs		8096883	0					
ANR	8096947	Identifier	memory		8096883	1					
ANR	8096948	Argument	& mstat		8096883	1					
ANR	8096949	UnaryOperationExpression	& mstat		8096883	0					
ANR	8096950	UnaryOperator	&		8096883	0					
ANR	8096951	Identifier	mstat		8096883	1					
ANR	8096952	IfStatement	if ( pcs -> memory != pcs -> memory -> non_gc_memory )		8096883	2					
ANR	8096953	Condition	pcs -> memory != pcs -> memory -> non_gc_memory	648:12:21742:21782	8096883	0	True				
ANR	8096954	EqualityExpression	pcs -> memory != pcs -> memory -> non_gc_memory		8096883	0		!=			
ANR	8096955	PtrMemberAccess	pcs -> memory		8096883	0					
ANR	8096956	Identifier	pcs		8096883	0					
ANR	8096957	Identifier	memory		8096883	1					
ANR	8096958	PtrMemberAccess	pcs -> memory -> non_gc_memory		8096883	1					
ANR	8096959	PtrMemberAccess	pcs -> memory		8096883	0					
ANR	8096960	Identifier	pcs		8096883	0					
ANR	8096961	Identifier	memory		8096883	1					
ANR	8096962	Identifier	non_gc_memory		8096883	1					
ANR	8096963	CompoundStatement		13:12:323:347	8096883	1					
ANR	8096964	IdentifierDeclStatement	gs_memory_status_t dstat ;	649:12:21799:21823	8096883	0	True				
ANR	8096965	IdentifierDecl	dstat		8096883	0					
ANR	8096966	IdentifierDeclType	gs_memory_status_t		8096883	0					
ANR	8096967	Identifier	dstat		8096883	1					
ANR	8096968	ExpressionStatement	"gs_memory_status ( pcs -> memory -> non_gc_memory , & dstat )"	651:12:21838:21890	8096883	1	True				
ANR	8096969	CallExpression	"gs_memory_status ( pcs -> memory -> non_gc_memory , & dstat )"		8096883	0					
ANR	8096970	Callee	gs_memory_status		8096883	0					
ANR	8096971	Identifier	gs_memory_status		8096883	0					
ANR	8096972	ArgumentList	pcs -> memory -> non_gc_memory		8096883	1					
ANR	8096973	Argument	pcs -> memory -> non_gc_memory		8096883	0					
ANR	8096974	PtrMemberAccess	pcs -> memory -> non_gc_memory		8096883	0					
ANR	8096975	PtrMemberAccess	pcs -> memory		8096883	0					
ANR	8096976	Identifier	pcs		8096883	0					
ANR	8096977	Identifier	memory		8096883	1					
ANR	8096978	Identifier	non_gc_memory		8096883	1					
ANR	8096979	Argument	& dstat		8096883	1					
ANR	8096980	UnaryOperationExpression	& dstat		8096883	0					
ANR	8096981	UnaryOperator	&		8096883	0					
ANR	8096982	Identifier	dstat		8096883	1					
ANR	8096983	ExpressionStatement	mstat . allocated += dstat . allocated	652:12:21904:21938	8096883	2	True				
ANR	8096984	AssignmentExpression	mstat . allocated += dstat . allocated		8096883	0		+=			
ANR	8096985	MemberAccess	mstat . allocated		8096883	0					
ANR	8096986	Identifier	mstat		8096883	0					
ANR	8096987	Identifier	allocated		8096883	1					
ANR	8096988	MemberAccess	dstat . allocated		8096883	1					
ANR	8096989	Identifier	dstat		8096883	0					
ANR	8096990	Identifier	allocated		8096883	1					
ANR	8096991	ExpressionStatement	mstat . used += dstat . used	653:12:21952:21976	8096883	3	True				
ANR	8096992	AssignmentExpression	mstat . used += dstat . used		8096883	0		+=			
ANR	8096993	MemberAccess	mstat . used		8096883	0					
ANR	8096994	Identifier	mstat		8096883	0					
ANR	8096995	Identifier	used		8096883	1					
ANR	8096996	MemberAccess	dstat . used		8096883	1					
ANR	8096997	Identifier	dstat		8096883	0					
ANR	8096998	Identifier	used		8096883	1					
ANR	8096999	ExpressionStatement	"stprintf ( & st , ""TOTAL=%ld\\r\\n"" , mstat . allocated - mstat . used )"	655:8:21996:22056	8096883	3	True				
ANR	8097000	CallExpression	"stprintf ( & st , ""TOTAL=%ld\\r\\n"" , mstat . allocated - mstat . used )"		8096883	0					
ANR	8097001	Callee	stprintf		8096883	0					
ANR	8097002	Identifier	stprintf		8096883	0					
ANR	8097003	ArgumentList	& st		8096883	1					
ANR	8097004	Argument	& st		8096883	0					
ANR	8097005	UnaryOperationExpression	& st		8096883	0					
ANR	8097006	UnaryOperator	&		8096883	0					
ANR	8097007	Identifier	st		8096883	1					
ANR	8097008	Argument	"""TOTAL=%ld\\r\\n"""		8096883	1					
ANR	8097009	PrimaryExpression	"""TOTAL=%ld\\r\\n"""		8096883	0					
ANR	8097010	Argument	mstat . allocated - mstat . used		8096883	2					
ANR	8097011	AdditiveExpression	mstat . allocated - mstat . used		8096883	0		-			
ANR	8097012	MemberAccess	mstat . allocated		8096883	0					
ANR	8097013	Identifier	mstat		8096883	0					
ANR	8097014	Identifier	allocated		8096883	1					
ANR	8097015	MemberAccess	mstat . used		8096883	1					
ANR	8097016	Identifier	mstat		8096883	0					
ANR	8097017	Identifier	used		8096883	1					
ANR	8097018	ExpressionStatement	"stprintf ( & st , ""LARGEST=%ld\\r\\n"" , ( mstat . allocated - mstat . used ) >> 2 )"	659:8:22219:22288	8096883	4	True				
ANR	8097019	CallExpression	"stprintf ( & st , ""LARGEST=%ld\\r\\n"" , ( mstat . allocated - mstat . used ) >> 2 )"		8096883	0					
ANR	8097020	Callee	stprintf		8096883	0					
ANR	8097021	Identifier	stprintf		8096883	0					
ANR	8097022	ArgumentList	& st		8096883	1					
ANR	8097023	Argument	& st		8096883	0					
ANR	8097024	UnaryOperationExpression	& st		8096883	0					
ANR	8097025	UnaryOperator	&		8096883	0					
ANR	8097026	Identifier	st		8096883	1					
ANR	8097027	Argument	"""LARGEST=%ld\\r\\n"""		8096883	1					
ANR	8097028	PrimaryExpression	"""LARGEST=%ld\\r\\n"""		8096883	0					
ANR	8097029	Argument	( mstat . allocated - mstat . used ) >> 2		8096883	2					
ANR	8097030	ShiftExpression	( mstat . allocated - mstat . used ) >> 2		8096883	0		>>			
ANR	8097031	AdditiveExpression	mstat . allocated - mstat . used		8096883	0		-			
ANR	8097032	MemberAccess	mstat . allocated		8096883	0					
ANR	8097033	Identifier	mstat		8096883	0					
ANR	8097034	Identifier	allocated		8096883	1					
ANR	8097035	MemberAccess	mstat . used		8096883	1					
ANR	8097036	Identifier	mstat		8096883	0					
ANR	8097037	Identifier	used		8096883	1					
ANR	8097038	PrimaryExpression	2		8096883	1					
ANR	8097039	ExpressionStatement	"status_end ( & st , pcs )"	661:4:22300:22320	8096883	4	True				
ANR	8097040	CallExpression	"status_end ( & st , pcs )"		8096883	0					
ANR	8097041	Callee	status_end		8096883	0					
ANR	8097042	Identifier	status_end		8096883	0					
ANR	8097043	ArgumentList	& st		8096883	1					
ANR	8097044	Argument	& st		8096883	0					
ANR	8097045	UnaryOperationExpression	& st		8096883	0					
ANR	8097046	UnaryOperator	&		8096883	0					
ANR	8097047	Identifier	st		8096883	1					
ANR	8097048	Argument	pcs		8096883	1					
ANR	8097049	Identifier	pcs		8096883	0					
ANR	8097050	ReturnStatement	return 0 ;	662:4:22326:22334	8096883	5	True				
ANR	8097051	PrimaryExpression	0		8096883	0					
ANR	8097052	ReturnType	static int		8096883	1					
ANR	8097053	Identifier	pcl_free_space		8096883	2					
ANR	8097054	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8096883	3					
ANR	8097055	Parameter	pcl_args_t * pargs	636:15:21436:21453	8096883	0	True				
ANR	8097056	ParameterType	pcl_args_t *		8096883	0					
ANR	8097057	Identifier	pargs		8096883	1					
ANR	8097058	Parameter	pcl_state_t * pcs	636:35:21456:21472	8096883	1	True				
ANR	8097059	ParameterType	pcl_state_t *		8096883	0					
ANR	8097060	Identifier	pcs		8096883	1					
ANR	8097061	CFGEntryNode	ENTRY		8096883		True				
ANR	8097062	CFGExitNode	EXIT		8096883		True				
ANR	8097063	Symbol	pcs		8096883						
ANR	8097064	Symbol	st		8096883						
ANR	8097065	Symbol	& dstat		8096883						
ANR	8097066	Symbol	pcs -> memory -> non_gc_memory		8096883						
ANR	8097067	Symbol	dstat . allocated		8096883						
ANR	8097068	Symbol	dstat . used		8096883						
ANR	8097069	Symbol	& st		8096883						
ANR	8097070	Symbol	* pcs		8096883						
ANR	8097071	Symbol	dstat		8096883						
ANR	8097072	Symbol	mstat . used		8096883						
ANR	8097073	Symbol	int_arg		8096883						
ANR	8097074	Symbol	* * pcs		8096883						
ANR	8097075	Symbol	mstat . allocated		8096883						
ANR	8097076	Symbol	pargs		8096883						
ANR	8097077	Symbol	mstat		8096883						
ANR	8097078	Symbol	* pcs -> memory		8096883						
ANR	8097079	Symbol	& mstat		8096883						
ANR	8097080	Symbol	pcs -> memory		8096883						
ANR	8097081	Function	pcl_flush_all_pages	665:0:22339:22982							
ANR	8097082	FunctionDef	"pcl_flush_all_pages (pcl_args_t * pargs , pcl_state_t * pcs)"		8097081	0					
ANR	8097083	CompoundStatement		667:0:22453:22982	8097081	0					
ANR	8097084	SwitchStatement	switch ( uint_arg ( pargs ) )		8097081	0					
ANR	8097085	Condition	uint_arg ( pargs )	668:12:22467:22481	8097081	0	True				
ANR	8097086	CallExpression	uint_arg ( pargs )		8097081	0					
ANR	8097087	Callee	uint_arg		8097081	0					
ANR	8097088	Identifier	uint_arg		8097081	0					
ANR	8097089	ArgumentList	pargs		8097081	1					
ANR	8097090	Argument	pargs		8097081	0					
ANR	8097091	Identifier	pargs		8097081	0					
ANR	8097092	CompoundStatement		2:29:30:30	8097081	1					
ANR	8097093	Label	case 0 :	669:8:22494:22500	8097081	0	True				
ANR	8097094	CompoundStatement		4:12:60:60	8097081	1					
ANR	8097095	ReturnStatement	return 0 ;	672:16:22634:22642	8097081	0	True				
ANR	8097096	PrimaryExpression	0		8097081	0					
ANR	8097097	Label	case 1 :	674:8:22666:22672	8097081	2	True				
ANR	8097098	CompoundStatement		10:16:320:358	8097081	3					
ANR	8097099	IdentifierDeclStatement	int code = pcl_end_page_if_marked ( pcs ) ;	676:16:22774:22812	8097081	0	True				
ANR	8097100	IdentifierDecl	code = pcl_end_page_if_marked ( pcs )		8097081	0					
ANR	8097101	IdentifierDeclType	int		8097081	0					
ANR	8097102	Identifier	code		8097081	1					
ANR	8097103	AssignmentExpression	code = pcl_end_page_if_marked ( pcs )		8097081	2		=			
ANR	8097104	Identifier	code		8097081	0					
ANR	8097105	CallExpression	pcl_end_page_if_marked ( pcs )		8097081	1					
ANR	8097106	Callee	pcl_end_page_if_marked		8097081	0					
ANR	8097107	Identifier	pcl_end_page_if_marked		8097081	0					
ANR	8097108	ArgumentList	pcs		8097081	1					
ANR	8097109	Argument	pcs		8097081	0					
ANR	8097110	Identifier	pcs		8097081	0					
ANR	8097111	IfStatement	if ( code >= 0 )		8097081	1					
ANR	8097112	Condition	code >= 0	678:20:22835:22843	8097081	0	True				
ANR	8097113	RelationalExpression	code >= 0		8097081	0		>=			
ANR	8097114	Identifier	code		8097081	0					
ANR	8097115	PrimaryExpression	0		8097081	1					
ANR	8097116	ExpressionStatement	pcl_home_cursor ( pcs )	679:20:22866:22886	8097081	1	True				
ANR	8097117	CallExpression	pcl_home_cursor ( pcs )		8097081	0					
ANR	8097118	Callee	pcl_home_cursor		8097081	0					
ANR	8097119	Identifier	pcl_home_cursor		8097081	0					
ANR	8097120	ArgumentList	pcs		8097081	1					
ANR	8097121	Argument	pcs		8097081	0					
ANR	8097122	Identifier	pcs		8097081	0					
ANR	8097123	ReturnStatement	return code ;	680:16:22904:22915	8097081	2	True				
ANR	8097124	Identifier	code		8097081	0					
ANR	8097125	Label	default :	682:8:22939:22946	8097081	4	True				
ANR	8097126	Identifier	default		8097081	0					
ANR	8097127	ReturnStatement	return e_Range ;	683:12:22960:22974	8097081	5	True				
ANR	8097128	Identifier	e_Range		8097081	0					
ANR	8097129	ReturnType	static int		8097081	1					
ANR	8097130	Identifier	pcl_flush_all_pages		8097081	2					
ANR	8097131	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8097081	3					
ANR	8097132	Parameter	pcl_args_t * pargs	666:20:22414:22431	8097081	0	True				
ANR	8097133	ParameterType	pcl_args_t *		8097081	0					
ANR	8097134	Identifier	pargs		8097081	1					
ANR	8097135	Parameter	pcl_state_t * pcs	666:40:22434:22450	8097081	1	True				
ANR	8097136	ParameterType	pcl_state_t *		8097081	0					
ANR	8097137	Identifier	pcs		8097081	1					
ANR	8097138	CFGEntryNode	ENTRY		8097081		True				
ANR	8097139	CFGExitNode	EXIT		8097081		True				
ANR	8097140	Symbol	e_Range		8097081						
ANR	8097141	Symbol	pcs		8097081						
ANR	8097142	Symbol	code		8097081						
ANR	8097143	Symbol	pargs		8097081						
ANR	8097144	Symbol	pcl_end_page_if_marked		8097081						
ANR	8097145	Symbol	uint_arg		8097081						
ANR	8097146	Function	pcl_echo	687:0:22985:23226							
ANR	8097147	FunctionDef	"pcl_echo (pcl_args_t * pargs , pcl_state_t * pcs)"		8097146	0					
ANR	8097148	CompoundStatement		689:0:23090:23226	8097146	0					
ANR	8097149	IdentifierDeclStatement	stream st ;	690:4:23096:23105	8097146	0	True				
ANR	8097150	IdentifierDecl	st		8097146	0					
ANR	8097151	IdentifierDeclType	stream		8097146	0					
ANR	8097152	Identifier	st		8097146	1					
ANR	8097153	ExpressionStatement	"status_begin ( & st , pcs )"	692:4:23112:23134	8097146	1	True				
ANR	8097154	CallExpression	"status_begin ( & st , pcs )"		8097146	0					
ANR	8097155	Callee	status_begin		8097146	0					
ANR	8097156	Identifier	status_begin		8097146	0					
ANR	8097157	ArgumentList	& st		8097146	1					
ANR	8097158	Argument	& st		8097146	0					
ANR	8097159	UnaryOperationExpression	& st		8097146	0					
ANR	8097160	UnaryOperator	&		8097146	0					
ANR	8097161	Identifier	st		8097146	1					
ANR	8097162	Argument	pcs		8097146	1					
ANR	8097163	Identifier	pcs		8097146	0					
ANR	8097164	ExpressionStatement	"stprintf ( & st , ""ECHO %d\\r\\n"" , int_arg ( pargs ) )"	693:4:23140:23184	8097146	2	True				
ANR	8097165	CallExpression	"stprintf ( & st , ""ECHO %d\\r\\n"" , int_arg ( pargs ) )"		8097146	0					
ANR	8097166	Callee	stprintf		8097146	0					
ANR	8097167	Identifier	stprintf		8097146	0					
ANR	8097168	ArgumentList	& st		8097146	1					
ANR	8097169	Argument	& st		8097146	0					
ANR	8097170	UnaryOperationExpression	& st		8097146	0					
ANR	8097171	UnaryOperator	&		8097146	0					
ANR	8097172	Identifier	st		8097146	1					
ANR	8097173	Argument	"""ECHO %d\\r\\n"""		8097146	1					
ANR	8097174	PrimaryExpression	"""ECHO %d\\r\\n"""		8097146	0					
ANR	8097175	Argument	int_arg ( pargs )		8097146	2					
ANR	8097176	CallExpression	int_arg ( pargs )		8097146	0					
ANR	8097177	Callee	int_arg		8097146	0					
ANR	8097178	Identifier	int_arg		8097146	0					
ANR	8097179	ArgumentList	pargs		8097146	1					
ANR	8097180	Argument	pargs		8097146	0					
ANR	8097181	Identifier	pargs		8097146	0					
ANR	8097182	ExpressionStatement	"status_end ( & st , pcs )"	694:4:23190:23210	8097146	3	True				
ANR	8097183	CallExpression	"status_end ( & st , pcs )"		8097146	0					
ANR	8097184	Callee	status_end		8097146	0					
ANR	8097185	Identifier	status_end		8097146	0					
ANR	8097186	ArgumentList	& st		8097146	1					
ANR	8097187	Argument	& st		8097146	0					
ANR	8097188	UnaryOperationExpression	& st		8097146	0					
ANR	8097189	UnaryOperator	&		8097146	0					
ANR	8097190	Identifier	st		8097146	1					
ANR	8097191	Argument	pcs		8097146	1					
ANR	8097192	Identifier	pcs		8097146	0					
ANR	8097193	ReturnStatement	return 0 ;	695:4:23216:23224	8097146	4	True				
ANR	8097194	PrimaryExpression	0		8097146	0					
ANR	8097195	ReturnType	static int		8097146	1					
ANR	8097196	Identifier	pcl_echo		8097146	2					
ANR	8097197	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8097146	3					
ANR	8097198	Parameter	pcl_args_t * pargs	688:9:23051:23068	8097146	0	True				
ANR	8097199	ParameterType	pcl_args_t *		8097146	0					
ANR	8097200	Identifier	pargs		8097146	1					
ANR	8097201	Parameter	pcl_state_t * pcs	688:29:23071:23087	8097146	1	True				
ANR	8097202	ParameterType	pcl_state_t *		8097146	0					
ANR	8097203	Identifier	pcs		8097146	1					
ANR	8097204	CFGEntryNode	ENTRY		8097146		True				
ANR	8097205	CFGExitNode	EXIT		8097146		True				
ANR	8097206	Symbol	pcs		8097146						
ANR	8097207	Symbol	st		8097146						
ANR	8097208	Symbol	int_arg		8097146						
ANR	8097209	Symbol	pargs		8097146						
ANR	8097210	Symbol	& st		8097146						
ANR	8097211	Function	pcstatus_do_registration	699:0:23250:24482							
ANR	8097212	FunctionDef	"pcstatus_do_registration (pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem)"		8097211	0					
ANR	8097213	CompoundStatement		702:0:23369:24482	8097211	0					
ANR	8097214	Statement	DEFINE_CLASS	703:4:23429:23440	8097211	0	True				
ANR	8097215	Statement	(	703:16:23441:23441	8097211	1	True				
ANR	8097216	Statement	'*'	703:17:23442:23444	8097211	2	True				
ANR	8097217	Statement	)	703:20:23445:23445	8097211	3	True				
ANR	8097218	CompoundStatement		2:22:77:77	8097211	4					
ANR	8097219	Statement	's'	704:4:23453:23455	8097211	0	True				
ANR	8097220	Statement	","	704:7:23456:23456	8097211	1	True				
ANR	8097221	Statement	'T'	704:9:23458:23460	8097211	2	True				
ANR	8097222	Statement	","	704:12:23461:23461	8097211	3	True				
ANR	8097223	Statement	PCL_COMMAND	705:12:23475:23485	8097211	4	True				
ANR	8097224	Statement	(	705:23:23486:23486	8097211	5	True				
ANR	8097225	Statement	"""Set Readback Location Type"""	705:24:23487:23514	8097211	6	True				
ANR	8097226	Statement	","	705:52:23515:23515	8097211	7	True				
ANR	8097227	Statement	pcl_set_readback_loc_type	706:28:23545:23569	8097211	8	True				
ANR	8097228	Statement	","	706:53:23570:23570	8097211	9	True				
ANR	8097229	Statement	pca_neg_error	707:28:23600:23612	8097211	10	True				
ANR	8097230	Statement	|	707:42:23614:23614	8097211	11	True				
ANR	8097231	Statement	pca_big_error	707:44:23616:23628	8097211	12	True				
ANR	8097232	Statement	)	707:57:23629:23629	8097211	13	True				
ANR	8097233	Statement	","	707:59:23631:23631	8097211	5	True				
ANR	8097234	CompoundStatement		6:61:263:263	8097211	6					
ANR	8097235	Statement	's'	708:4:23639:23641	8097211	0	True				
ANR	8097236	Statement	","	708:7:23642:23642	8097211	1	True				
ANR	8097237	Statement	'U'	708:9:23644:23646	8097211	2	True				
ANR	8097238	Statement	","	708:12:23647:23647	8097211	3	True				
ANR	8097239	Statement	PCL_COMMAND	709:12:23661:23671	8097211	4	True				
ANR	8097240	Statement	(	709:23:23672:23672	8097211	5	True				
ANR	8097241	Statement	"""Set Readback Location Unit"""	709:24:23673:23700	8097211	6	True				
ANR	8097242	Statement	","	709:52:23701:23701	8097211	7	True				
ANR	8097243	Statement	pcl_set_readback_loc_unit	710:28:23731:23755	8097211	8	True				
ANR	8097244	Statement	","	710:53:23756:23756	8097211	9	True				
ANR	8097245	Statement	pca_neg_error	711:28:23786:23798	8097211	10	True				
ANR	8097246	Statement	|	711:42:23800:23800	8097211	11	True				
ANR	8097247	Statement	pca_big_error	711:44:23802:23814	8097211	12	True				
ANR	8097248	Statement	)	711:57:23815:23815	8097211	13	True				
ANR	8097249	Statement	","	711:59:23817:23817	8097211	7	True				
ANR	8097250	CompoundStatement		10:61:449:449	8097211	8					
ANR	8097251	Statement	's'	712:4:23825:23827	8097211	0	True				
ANR	8097252	Statement	","	712:7:23828:23828	8097211	1	True				
ANR	8097253	Statement	'I'	712:9:23830:23832	8097211	2	True				
ANR	8097254	Statement	","	712:12:23833:23833	8097211	3	True				
ANR	8097255	Statement	PCL_COMMAND	713:12:23847:23857	8097211	4	True				
ANR	8097256	Statement	(	713:23:23858:23858	8097211	5	True				
ANR	8097257	Statement	"""Inquire Readback Entity"""	713:24:23859:23883	8097211	6	True				
ANR	8097258	Statement	","	713:49:23884:23884	8097211	7	True				
ANR	8097259	Statement	pcl_inquire_readback_entity	714:28:23914:23940	8097211	8	True				
ANR	8097260	Statement	","	714:55:23941:23941	8097211	9	True				
ANR	8097261	Statement	pca_neg_error	715:28:23971:23983	8097211	10	True				
ANR	8097262	Statement	|	715:42:23985:23985	8097211	11	True				
ANR	8097263	Statement	pca_big_error	715:44:23987:23999	8097211	12	True				
ANR	8097264	Statement	)	715:57:24000:24000	8097211	13	True				
ANR	8097265	Statement	","	715:59:24002:24002	8097211	9	True				
ANR	8097266	CompoundStatement		14:61:634:634	8097211	10					
ANR	8097267	Statement	's'	716:4:24010:24012	8097211	0	True				
ANR	8097268	Statement	","	716:7:24013:24013	8097211	1	True				
ANR	8097269	Statement	'M'	716:9:24015:24017	8097211	2	True				
ANR	8097270	Statement	","	716:12:24018:24018	8097211	3	True				
ANR	8097271	Statement	PCL_COMMAND	717:12:24032:24042	8097211	4	True				
ANR	8097272	Statement	(	717:23:24043:24043	8097211	5	True				
ANR	8097273	Statement	"""Free Space"""	717:24:24044:24055	8097211	6	True				
ANR	8097274	Statement	","	717:36:24056:24056	8097211	7	True				
ANR	8097275	Statement	pcl_free_space	717:38:24058:24071	8097211	8	True				
ANR	8097276	Statement	","	717:52:24072:24072	8097211	9	True				
ANR	8097277	Statement	pca_neg_ok	718:28:24102:24111	8097211	10	True				
ANR	8097278	Statement	|	718:39:24113:24113	8097211	11	True				
ANR	8097279	Statement	pca_big_ok	718:41:24115:24124	8097211	12	True				
ANR	8097280	Statement	)	718:51:24125:24125	8097211	13	True				
ANR	8097281	Statement	","	718:53:24127:24127	8097211	11	True				
ANR	8097282	Statement	END_CLASS	719:8:24137:24145	8097211	12	True				
ANR	8097283	Statement	DEFINE_CLASS_COMMAND_ARGS	720:8:24155:24179	8097211	13	True				
ANR	8097284	Statement	(	720:33:24180:24180	8097211	14	True				
ANR	8097285	Statement	'&'	720:34:24181:24183	8097211	15	True				
ANR	8097286	Statement	","	720:37:24184:24184	8097211	16	True				
ANR	8097287	Statement	'r'	720:39:24186:24188	8097211	17	True				
ANR	8097288	Statement	","	720:42:24189:24189	8097211	18	True				
ANR	8097289	Statement	'F'	720:44:24191:24193	8097211	19	True				
ANR	8097290	Statement	","	720:47:24194:24194	8097211	20	True				
ANR	8097291	Statement	"""Flush All Pages"""	720:49:24196:24212	8097211	21	True				
ANR	8097292	Statement	","	720:66:24213:24213	8097211	22	True				
ANR	8097293	Statement	pcl_flush_all_pages	721:34:24249:24267	8097211	23	True				
ANR	8097294	Statement	","	721:53:24268:24268	8097211	24	True				
ANR	8097295	Statement	pca_neg_error	722:34:24304:24316	8097211	25	True				
ANR	8097296	Statement	|	722:48:24318:24318	8097211	26	True				
ANR	8097297	Statement	pca_big_error	722:50:24320:24332	8097211	27	True				
ANR	8097298	Statement	)	722:63:24333:24333	8097211	28	True				
ANR	8097299	Statement	DEFINE_CLASS_COMMAND_ARGS	723:8:24343:24367	8097211	29	True				
ANR	8097300	Statement	(	723:33:24368:24368	8097211	30	True				
ANR	8097301	Statement	'*'	723:34:24369:24371	8097211	31	True				
ANR	8097302	Statement	","	723:37:24372:24372	8097211	32	True				
ANR	8097303	Statement	's'	723:39:24374:24376	8097211	33	True				
ANR	8097304	Statement	","	723:42:24377:24377	8097211	34	True				
ANR	8097305	Statement	'X'	723:44:24379:24381	8097211	35	True				
ANR	8097306	Statement	","	723:47:24382:24382	8097211	36	True				
ANR	8097307	Statement	"""Echo"""	723:49:24384:24389	8097211	37	True				
ANR	8097308	Statement	","	723:55:24390:24390	8097211	38	True				
ANR	8097309	Statement	pcl_echo	724:34:24426:24433	8097211	39	True				
ANR	8097310	Statement	","	724:42:24434:24434	8097211	40	True				
ANR	8097311	Statement	pca_neg_ok	724:44:24436:24445	8097211	41	True				
ANR	8097312	Statement	|	724:55:24447:24447	8097211	42	True				
ANR	8097313	Statement	pca_big_error	724:57:24449:24461	8097211	43	True				
ANR	8097314	Statement	)	724:70:24462:24462	8097211	44	True				
ANR	8097315	ReturnStatement	return 0 ;	725:8:24472:24480	8097211	45	True				
ANR	8097316	PrimaryExpression	0		8097211	0					
ANR	8097317	ReturnType	static int		8097211	1					
ANR	8097318	Identifier	pcstatus_do_registration		8097211	2					
ANR	8097319	ParameterList	"pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem"		8097211	3					
ANR	8097320	Parameter	pcl_parser_state_t * pcl_parser_state	700:25:23286:23322	8097211	0	True				
ANR	8097321	ParameterType	pcl_parser_state_t *		8097211	0					
ANR	8097322	Identifier	pcl_parser_state		8097211	1					
ANR	8097323	Parameter	gs_memory_t * mem	701:25:23350:23366	8097211	1	True				
ANR	8097324	ParameterType	gs_memory_t *		8097211	0					
ANR	8097325	Identifier	mem		8097211	1					
ANR	8097326	CFGEntryNode	ENTRY		8097211		True				
ANR	8097327	CFGExitNode	EXIT		8097211		True				
ANR	8097328	Symbol	mem		8097211						
ANR	8097329	Symbol	pcl_parser_state		8097211						
ANR	8097330	Function	pcstatus_do_reset	727:0:24484:24863							
ANR	8097331	FunctionDef	"pcstatus_do_reset (pcl_state_t * pcs , pcl_reset_type_t type)"		8097330	0					
ANR	8097332	CompoundStatement		729:0:24555:24863	8097330	0					
ANR	8097333	IfStatement	if ( type & ( pcl_reset_initial | pcl_reset_printer ) )		8097330	0					
ANR	8097334	Condition	type & ( pcl_reset_initial | pcl_reset_printer )	730:8:24565:24610	8097330	0	True				
ANR	8097335	BitAndExpression	type & ( pcl_reset_initial | pcl_reset_printer )		8097330	0		&			
ANR	8097336	Identifier	type		8097330	0					
ANR	8097337	InclusiveOrExpression	pcl_reset_initial | pcl_reset_printer		8097330	1		|			
ANR	8097338	Identifier	pcl_reset_initial		8097330	0					
ANR	8097339	Identifier	pcl_reset_printer		8097330	1					
ANR	8097340	CompoundStatement		2:56:57:57	8097330	1					
ANR	8097341	IfStatement	if ( type & pcl_reset_initial )		8097330	0					
ANR	8097342	Condition	type & pcl_reset_initial	731:12:24627:24650	8097330	0	True				
ANR	8097343	BitAndExpression	type & pcl_reset_initial		8097330	0		&			
ANR	8097344	Identifier	type		8097330	0					
ANR	8097345	Identifier	pcl_reset_initial		8097330	1					
ANR	8097346	CompoundStatement		3:38:97:97	8097330	1					
ANR	8097347	ExpressionStatement	pcs -> status . buffer = 0	732:12:24667:24689	8097330	0	True				
ANR	8097348	AssignmentExpression	pcs -> status . buffer = 0		8097330	0		=			
ANR	8097349	MemberAccess	pcs -> status . buffer		8097330	0					
ANR	8097350	PtrMemberAccess	pcs -> status		8097330	0					
ANR	8097351	Identifier	pcs		8097330	0					
ANR	8097352	Identifier	status		8097330	1					
ANR	8097353	Identifier	buffer		8097330	1					
ANR	8097354	PrimaryExpression	0		8097330	1					
ANR	8097355	ExpressionStatement	pcs -> status . write_pos = 0	733:12:24703:24728	8097330	1	True				
ANR	8097356	AssignmentExpression	pcs -> status . write_pos = 0		8097330	0		=			
ANR	8097357	MemberAccess	pcs -> status . write_pos		8097330	0					
ANR	8097358	PtrMemberAccess	pcs -> status		8097330	0					
ANR	8097359	Identifier	pcs		8097330	0					
ANR	8097360	Identifier	status		8097330	1					
ANR	8097361	Identifier	write_pos		8097330	1					
ANR	8097362	PrimaryExpression	0		8097330	1					
ANR	8097363	ExpressionStatement	pcs -> status . read_pos = 0	734:12:24742:24766	8097330	2	True				
ANR	8097364	AssignmentExpression	pcs -> status . read_pos = 0		8097330	0		=			
ANR	8097365	MemberAccess	pcs -> status . read_pos		8097330	0					
ANR	8097366	PtrMemberAccess	pcs -> status		8097330	0					
ANR	8097367	Identifier	pcs		8097330	0					
ANR	8097368	Identifier	status		8097330	1					
ANR	8097369	Identifier	read_pos		8097330	1					
ANR	8097370	PrimaryExpression	0		8097330	1					
ANR	8097371	ExpressionStatement	pcs -> location_type = 0	736:8:24786:24808	8097330	1	True				
ANR	8097372	AssignmentExpression	pcs -> location_type = 0		8097330	0		=			
ANR	8097373	PtrMemberAccess	pcs -> location_type		8097330	0					
ANR	8097374	Identifier	pcs		8097330	0					
ANR	8097375	Identifier	location_type		8097330	1					
ANR	8097376	PrimaryExpression	0		8097330	1					
ANR	8097377	ExpressionStatement	pcs -> location_unit = 0	737:8:24818:24840	8097330	2	True				
ANR	8097378	AssignmentExpression	pcs -> location_unit = 0		8097330	0		=			
ANR	8097379	PtrMemberAccess	pcs -> location_unit		8097330	0					
ANR	8097380	Identifier	pcs		8097330	0					
ANR	8097381	Identifier	location_unit		8097330	1					
ANR	8097382	PrimaryExpression	0		8097330	1					
ANR	8097383	ReturnStatement	return 0 ;	740:4:24853:24861	8097330	1	True				
ANR	8097384	PrimaryExpression	0		8097330	0					
ANR	8097385	ReturnType	static int		8097330	1					
ANR	8097386	Identifier	pcstatus_do_reset		8097330	2					
ANR	8097387	ParameterList	"pcl_state_t * pcs , pcl_reset_type_t type"		8097330	3					
ANR	8097388	Parameter	pcl_state_t * pcs	728:18:24513:24529	8097330	0	True				
ANR	8097389	ParameterType	pcl_state_t *		8097330	0					
ANR	8097390	Identifier	pcs		8097330	1					
ANR	8097391	Parameter	pcl_reset_type_t type	728:37:24532:24552	8097330	1	True				
ANR	8097392	ParameterType	pcl_reset_type_t		8097330	0					
ANR	8097393	Identifier	type		8097330	1					
ANR	8097394	CFGEntryNode	ENTRY		8097330		True				
ANR	8097395	CFGExitNode	EXIT		8097330		True				
ANR	8097396	Symbol	pcs		8097330						
ANR	8097397	Symbol	pcs -> status		8097330						
ANR	8097398	Symbol	pcs -> location_type		8097330						
ANR	8097399	Symbol	pcs -> status . write_pos		8097330						
ANR	8097400	Symbol	pcl_reset_printer		8097330						
ANR	8097401	Symbol	pcs -> status . buffer		8097330						
ANR	8097402	Symbol	* pcs		8097330						
ANR	8097403	Symbol	type		8097330						
ANR	8097404	Symbol	pcs -> status . read_pos		8097330						
ANR	8097405	Symbol	pcl_reset_initial		8097330						
ANR	8097406	Symbol	pcs -> location_unit		8097330						
ANR	8097407	DeclStmt									
ANR	8097408	Decl							const pcl_init_t	const pcl_init_t	pcstatus_init
