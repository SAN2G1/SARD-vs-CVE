command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7634527	File	data/converged/CVE-2018-16863_ghostpdl/openjpeg_src_bin_jp3d_opj_jp3d_compress.c								
ANR	7634528	Function	encode_help_display	49:0:2113:9395							
ANR	7634529	FunctionDef	encode_help_display ()		7634528	0					
ANR	7634530	CompoundStatement		50:0:2140:9395	7634528	0					
ANR	7634531	ExpressionStatement	"fprintf ( stdout , ""List of parameters for the JPEG2000 Part 10 encoder:\\n"" )"	51:4:2146:2219	7634528	0	True				
ANR	7634532	CallExpression	"fprintf ( stdout , ""List of parameters for the JPEG2000 Part 10 encoder:\\n"" )"		7634528	0					
ANR	7634533	Callee	fprintf		7634528	0					
ANR	7634534	Identifier	fprintf		7634528	0					
ANR	7634535	ArgumentList	stdout		7634528	1					
ANR	7634536	Argument	stdout		7634528	0					
ANR	7634537	Identifier	stdout		7634528	0					
ANR	7634538	Argument	"""List of parameters for the JPEG2000 Part 10 encoder:\\n"""		7634528	1					
ANR	7634539	PrimaryExpression	"""List of parameters for the JPEG2000 Part 10 encoder:\\n"""		7634528	0					
ANR	7634540	ExpressionStatement	"fprintf ( stdout , ""------------\\n"" )"	52:4:2225:2258	7634528	1	True				
ANR	7634541	CallExpression	"fprintf ( stdout , ""------------\\n"" )"		7634528	0					
ANR	7634542	Callee	fprintf		7634528	0					
ANR	7634543	Identifier	fprintf		7634528	0					
ANR	7634544	ArgumentList	stdout		7634528	1					
ANR	7634545	Argument	stdout		7634528	0					
ANR	7634546	Identifier	stdout		7634528	0					
ANR	7634547	Argument	"""------------\\n"""		7634528	1					
ANR	7634548	PrimaryExpression	"""------------\\n"""		7634528	0					
ANR	7634549	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	53:4:2264:2285	7634528	2	True				
ANR	7634550	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634551	Callee	fprintf		7634528	0					
ANR	7634552	Identifier	fprintf		7634528	0					
ANR	7634553	ArgumentList	stdout		7634528	1					
ANR	7634554	Argument	stdout		7634528	0					
ANR	7634555	Identifier	stdout		7634528	0					
ANR	7634556	Argument	"""\\n"""		7634528	1					
ANR	7634557	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634558	ExpressionStatement	"fprintf ( stdout , ""Required Parameters (except with -h):\\n"" )"	54:4:2291:2349	7634528	3	True				
ANR	7634559	CallExpression	"fprintf ( stdout , ""Required Parameters (except with -h):\\n"" )"		7634528	0					
ANR	7634560	Callee	fprintf		7634528	0					
ANR	7634561	Identifier	fprintf		7634528	0					
ANR	7634562	ArgumentList	stdout		7634528	1					
ANR	7634563	Argument	stdout		7634528	0					
ANR	7634564	Identifier	stdout		7634528	0					
ANR	7634565	Argument	"""Required Parameters (except with -h):\\n"""		7634528	1					
ANR	7634566	PrimaryExpression	"""Required Parameters (except with -h):\\n"""		7634528	0					
ANR	7634567	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	55:4:2355:2376	7634528	4	True				
ANR	7634568	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634569	Callee	fprintf		7634528	0					
ANR	7634570	Identifier	fprintf		7634528	0					
ANR	7634571	ArgumentList	stdout		7634528	1					
ANR	7634572	Argument	stdout		7634528	0					
ANR	7634573	Identifier	stdout		7634528	0					
ANR	7634574	Argument	"""\\n"""		7634528	1					
ANR	7634575	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634576	ExpressionStatement	"fprintf ( stdout , ""-i           : source file  (-i source.bin or source*.pgx) \\n"" )"	56:4:2382:2474	7634528	5	True				
ANR	7634577	CallExpression	"fprintf ( stdout , ""-i           : source file  (-i source.bin or source*.pgx) \\n"" )"		7634528	0					
ANR	7634578	Callee	fprintf		7634528	0					
ANR	7634579	Identifier	fprintf		7634528	0					
ANR	7634580	ArgumentList	stdout		7634528	1					
ANR	7634581	Argument	stdout		7634528	0					
ANR	7634582	Identifier	stdout		7634528	0					
ANR	7634583	Argument	"""-i           : source file  (-i source.bin or source*.pgx) \\n"""		7634528	1					
ANR	7634584	PrimaryExpression	"""-i           : source file  (-i source.bin or source*.pgx) \\n"""		7634528	0					
ANR	7634585	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	58:4:2480:2501	7634528	6	True				
ANR	7634586	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634587	Callee	fprintf		7634528	0					
ANR	7634588	Identifier	fprintf		7634528	0					
ANR	7634589	ArgumentList	stdout		7634528	1					
ANR	7634590	Argument	stdout		7634528	0					
ANR	7634591	Identifier	stdout		7634528	0					
ANR	7634592	Argument	"""\\n"""		7634528	1					
ANR	7634593	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634594	ExpressionStatement	"fprintf ( stdout , ""-m           : source characteristics file (-m imgfile.img) \\n"" )"	59:4:2507:2600	7634528	7	True				
ANR	7634595	CallExpression	"fprintf ( stdout , ""-m           : source characteristics file (-m imgfile.img) \\n"" )"		7634528	0					
ANR	7634596	Callee	fprintf		7634528	0					
ANR	7634597	Identifier	fprintf		7634528	0					
ANR	7634598	ArgumentList	stdout		7634528	1					
ANR	7634599	Argument	stdout		7634528	0					
ANR	7634600	Identifier	stdout		7634528	0					
ANR	7634601	Argument	"""-m           : source characteristics file (-m imgfile.img) \\n"""		7634528	1					
ANR	7634602	PrimaryExpression	"""-m           : source characteristics file (-m imgfile.img) \\n"""		7634528	0					
ANR	7634603	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	61:4:2606:2627	7634528	8	True				
ANR	7634604	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634605	Callee	fprintf		7634528	0					
ANR	7634606	Identifier	fprintf		7634528	0					
ANR	7634607	ArgumentList	stdout		7634528	1					
ANR	7634608	Argument	stdout		7634528	0					
ANR	7634609	Identifier	stdout		7634528	0					
ANR	7634610	Argument	"""\\n"""		7634528	1					
ANR	7634611	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634612	ExpressionStatement	"fprintf ( stdout , ""-o           : destination file (-o dest.jp3d) \\n"" )"	62:4:2633:2701	7634528	9	True				
ANR	7634613	CallExpression	"fprintf ( stdout , ""-o           : destination file (-o dest.jp3d) \\n"" )"		7634528	0					
ANR	7634614	Callee	fprintf		7634528	0					
ANR	7634615	Identifier	fprintf		7634528	0					
ANR	7634616	ArgumentList	stdout		7634528	1					
ANR	7634617	Argument	stdout		7634528	0					
ANR	7634618	Identifier	stdout		7634528	0					
ANR	7634619	Argument	"""-o           : destination file (-o dest.jp3d) \\n"""		7634528	1					
ANR	7634620	PrimaryExpression	"""-o           : destination file (-o dest.jp3d) \\n"""		7634528	0					
ANR	7634621	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	63:4:2707:2728	7634528	10	True				
ANR	7634622	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634623	Callee	fprintf		7634528	0					
ANR	7634624	Identifier	fprintf		7634528	0					
ANR	7634625	ArgumentList	stdout		7634528	1					
ANR	7634626	Argument	stdout		7634528	0					
ANR	7634627	Identifier	stdout		7634528	0					
ANR	7634628	Argument	"""\\n"""		7634528	1					
ANR	7634629	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634630	ExpressionStatement	"fprintf ( stdout , ""Optional Parameters:\\n"" )"	64:4:2734:2775	7634528	11	True				
ANR	7634631	CallExpression	"fprintf ( stdout , ""Optional Parameters:\\n"" )"		7634528	0					
ANR	7634632	Callee	fprintf		7634528	0					
ANR	7634633	Identifier	fprintf		7634528	0					
ANR	7634634	ArgumentList	stdout		7634528	1					
ANR	7634635	Argument	stdout		7634528	0					
ANR	7634636	Identifier	stdout		7634528	0					
ANR	7634637	Argument	"""Optional Parameters:\\n"""		7634528	1					
ANR	7634638	PrimaryExpression	"""Optional Parameters:\\n"""		7634528	0					
ANR	7634639	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	65:4:2781:2802	7634528	12	True				
ANR	7634640	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634641	Callee	fprintf		7634528	0					
ANR	7634642	Identifier	fprintf		7634528	0					
ANR	7634643	ArgumentList	stdout		7634528	1					
ANR	7634644	Argument	stdout		7634528	0					
ANR	7634645	Identifier	stdout		7634528	0					
ANR	7634646	Argument	"""\\n"""		7634528	1					
ANR	7634647	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634648	ExpressionStatement	"fprintf ( stdout , ""-h           : display the help information \\n "" )"	66:4:2808:2874	7634528	13	True				
ANR	7634649	CallExpression	"fprintf ( stdout , ""-h           : display the help information \\n "" )"		7634528	0					
ANR	7634650	Callee	fprintf		7634528	0					
ANR	7634651	Identifier	fprintf		7634528	0					
ANR	7634652	ArgumentList	stdout		7634528	1					
ANR	7634653	Argument	stdout		7634528	0					
ANR	7634654	Identifier	stdout		7634528	0					
ANR	7634655	Argument	"""-h           : display the help information \\n """		7634528	1					
ANR	7634656	PrimaryExpression	"""-h           : display the help information \\n """		7634528	0					
ANR	7634657	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	67:4:2880:2901	7634528	14	True				
ANR	7634658	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634659	Callee	fprintf		7634528	0					
ANR	7634660	Identifier	fprintf		7634528	0					
ANR	7634661	ArgumentList	stdout		7634528	1					
ANR	7634662	Argument	stdout		7634528	0					
ANR	7634663	Identifier	stdout		7634528	0					
ANR	7634664	Argument	"""\\n"""		7634528	1					
ANR	7634665	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634666	ExpressionStatement	"fprintf ( stdout , ""-n           : number of resolutions (-n 3,3,3) \\n"" )"	68:4:2907:2976	7634528	15	True				
ANR	7634667	CallExpression	"fprintf ( stdout , ""-n           : number of resolutions (-n 3,3,3) \\n"" )"		7634528	0					
ANR	7634668	Callee	fprintf		7634528	0					
ANR	7634669	Identifier	fprintf		7634528	0					
ANR	7634670	ArgumentList	stdout		7634528	1					
ANR	7634671	Argument	stdout		7634528	0					
ANR	7634672	Identifier	stdout		7634528	0					
ANR	7634673	Argument	"""-n           : number of resolutions (-n 3,3,3) \\n"""		7634528	1					
ANR	7634674	PrimaryExpression	"""-n           : number of resolutions (-n 3,3,3) \\n"""		7634528	0					
ANR	7634675	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	69:4:2982:3003	7634528	16	True				
ANR	7634676	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634677	Callee	fprintf		7634528	0					
ANR	7634678	Identifier	fprintf		7634528	0					
ANR	7634679	ArgumentList	stdout		7634528	1					
ANR	7634680	Argument	stdout		7634528	0					
ANR	7634681	Identifier	stdout		7634528	0					
ANR	7634682	Argument	"""\\n"""		7634528	1					
ANR	7634683	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634684	ExpressionStatement	"fprintf ( stdout , ""-I           : use the irreversible transforms: ICT + DWT 9-7 (-I) \\n"" )"	70:4:3009:3109	7634528	17	True				
ANR	7634685	CallExpression	"fprintf ( stdout , ""-I           : use the irreversible transforms: ICT + DWT 9-7 (-I) \\n"" )"		7634528	0					
ANR	7634686	Callee	fprintf		7634528	0					
ANR	7634687	Identifier	fprintf		7634528	0					
ANR	7634688	ArgumentList	stdout		7634528	1					
ANR	7634689	Argument	stdout		7634528	0					
ANR	7634690	Identifier	stdout		7634528	0					
ANR	7634691	Argument	"""-I           : use the irreversible transforms: ICT + DWT 9-7 (-I) \\n"""		7634528	1					
ANR	7634692	PrimaryExpression	"""-I           : use the irreversible transforms: ICT + DWT 9-7 (-I) \\n"""		7634528	0					
ANR	7634693	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	72:4:3115:3136	7634528	18	True				
ANR	7634694	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634695	Callee	fprintf		7634528	0					
ANR	7634696	Identifier	fprintf		7634528	0					
ANR	7634697	ArgumentList	stdout		7634528	1					
ANR	7634698	Argument	stdout		7634528	0					
ANR	7634699	Identifier	stdout		7634528	0					
ANR	7634700	Argument	"""\\n"""		7634528	1					
ANR	7634701	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634702	ExpressionStatement	"fprintf ( stdout , ""-C           : coding algorithm (-C 2EB) [2EB, 3EB] \\n"" )"	73:4:3142:3215	7634528	19	True				
ANR	7634703	CallExpression	"fprintf ( stdout , ""-C           : coding algorithm (-C 2EB) [2EB, 3EB] \\n"" )"		7634528	0					
ANR	7634704	Callee	fprintf		7634528	0					
ANR	7634705	Identifier	fprintf		7634528	0					
ANR	7634706	ArgumentList	stdout		7634528	1					
ANR	7634707	Argument	stdout		7634528	0					
ANR	7634708	Identifier	stdout		7634528	0					
ANR	7634709	Argument	"""-C           : coding algorithm (-C 2EB) [2EB, 3EB] \\n"""		7634528	1					
ANR	7634710	PrimaryExpression	"""-C           : coding algorithm (-C 2EB) [2EB, 3EB] \\n"""		7634528	0					
ANR	7634711	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	74:4:3221:3242	7634528	20	True				
ANR	7634712	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634713	Callee	fprintf		7634528	0					
ANR	7634714	Identifier	fprintf		7634528	0					
ANR	7634715	ArgumentList	stdout		7634528	1					
ANR	7634716	Argument	stdout		7634528	0					
ANR	7634717	Identifier	stdout		7634528	0					
ANR	7634718	Argument	"""\\n"""		7634528	1					
ANR	7634719	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634720	ExpressionStatement	"fprintf ( stdout , ""-r           : different compression ratios for successive layers (-r 20,10,5)\\n "" )"	75:4:3248:3360	7634528	21	True				
ANR	7634721	CallExpression	"fprintf ( stdout , ""-r           : different compression ratios for successive layers (-r 20,10,5)\\n "" )"		7634528	0					
ANR	7634722	Callee	fprintf		7634528	0					
ANR	7634723	Identifier	fprintf		7634528	0					
ANR	7634724	ArgumentList	stdout		7634528	1					
ANR	7634725	Argument	stdout		7634528	0					
ANR	7634726	Identifier	stdout		7634528	0					
ANR	7634727	Argument	"""-r           : different compression ratios for successive layers (-r 20,10,5)\\n """		7634528	1					
ANR	7634728	PrimaryExpression	"""-r           : different compression ratios for successive layers (-r 20,10,5)\\n """		7634528	0					
ANR	7634729	ExpressionStatement	"fprintf ( stdout , ""\\t         - The rate specified for each quality level is the desired compression factor.\\n"" )"	77:4:3366:3487	7634528	22	True				
ANR	7634730	CallExpression	"fprintf ( stdout , ""\\t         - The rate specified for each quality level is the desired compression factor.\\n"" )"		7634528	0					
ANR	7634731	Callee	fprintf		7634528	0					
ANR	7634732	Identifier	fprintf		7634528	0					
ANR	7634733	ArgumentList	stdout		7634528	1					
ANR	7634734	Argument	stdout		7634528	0					
ANR	7634735	Identifier	stdout		7634528	0					
ANR	7634736	Argument	"""\\t         - The rate specified for each quality level is the desired compression factor.\\n"""		7634528	1					
ANR	7634737	PrimaryExpression	"""\\t         - The rate specified for each quality level is the desired compression factor.\\n"""		7634528	0					
ANR	7634738	ExpressionStatement	"fprintf ( stdout , ""\\t         - Rate 1 means lossless compression\\n"" )"	79:4:3493:3559	7634528	23	True				
ANR	7634739	CallExpression	"fprintf ( stdout , ""\\t         - Rate 1 means lossless compression\\n"" )"		7634528	0					
ANR	7634740	Callee	fprintf		7634528	0					
ANR	7634741	Identifier	fprintf		7634528	0					
ANR	7634742	ArgumentList	stdout		7634528	1					
ANR	7634743	Argument	stdout		7634528	0					
ANR	7634744	Identifier	stdout		7634528	0					
ANR	7634745	Argument	"""\\t         - Rate 1 means lossless compression\\n"""		7634528	1					
ANR	7634746	PrimaryExpression	"""\\t         - Rate 1 means lossless compression\\n"""		7634528	0					
ANR	7634747	ExpressionStatement	"fprintf ( stdout , ""               (options -r and -q cannot be used together)\\n "" )"	80:4:3565:3657	7634528	24	True				
ANR	7634748	CallExpression	"fprintf ( stdout , ""               (options -r and -q cannot be used together)\\n "" )"		7634528	0					
ANR	7634749	Callee	fprintf		7634528	0					
ANR	7634750	Identifier	fprintf		7634528	0					
ANR	7634751	ArgumentList	stdout		7634528	1					
ANR	7634752	Argument	stdout		7634528	0					
ANR	7634753	Identifier	stdout		7634528	0					
ANR	7634754	Argument	"""               (options -r and -q cannot be used together)\\n """		7634528	1					
ANR	7634755	PrimaryExpression	"""               (options -r and -q cannot be used together)\\n """		7634528	0					
ANR	7634756	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	82:4:3663:3684	7634528	25	True				
ANR	7634757	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634758	Callee	fprintf		7634528	0					
ANR	7634759	Identifier	fprintf		7634528	0					
ANR	7634760	ArgumentList	stdout		7634528	1					
ANR	7634761	Argument	stdout		7634528	0					
ANR	7634762	Identifier	stdout		7634528	0					
ANR	7634763	Argument	"""\\n"""		7634528	1					
ANR	7634764	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634765	ExpressionStatement	"fprintf ( stdout , ""-q           : different psnr for successive layers (-q 30,40,50) \\n "" )"	83:4:3690:3790	7634528	26	True				
ANR	7634766	CallExpression	"fprintf ( stdout , ""-q           : different psnr for successive layers (-q 30,40,50) \\n "" )"		7634528	0					
ANR	7634767	Callee	fprintf		7634528	0					
ANR	7634768	Identifier	fprintf		7634528	0					
ANR	7634769	ArgumentList	stdout		7634528	1					
ANR	7634770	Argument	stdout		7634528	0					
ANR	7634771	Identifier	stdout		7634528	0					
ANR	7634772	Argument	"""-q           : different psnr for successive layers (-q 30,40,50) \\n """		7634528	1					
ANR	7634773	PrimaryExpression	"""-q           : different psnr for successive layers (-q 30,40,50) \\n """		7634528	0					
ANR	7634774	ExpressionStatement	"fprintf ( stdout , ""               (options -r and -q cannot be used together)\\n "" )"	85:4:3796:3888	7634528	27	True				
ANR	7634775	CallExpression	"fprintf ( stdout , ""               (options -r and -q cannot be used together)\\n "" )"		7634528	0					
ANR	7634776	Callee	fprintf		7634528	0					
ANR	7634777	Identifier	fprintf		7634528	0					
ANR	7634778	ArgumentList	stdout		7634528	1					
ANR	7634779	Argument	stdout		7634528	0					
ANR	7634780	Identifier	stdout		7634528	0					
ANR	7634781	Argument	"""               (options -r and -q cannot be used together)\\n """		7634528	1					
ANR	7634782	PrimaryExpression	"""               (options -r and -q cannot be used together)\\n """		7634528	0					
ANR	7634783	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	87:4:3894:3915	7634528	28	True				
ANR	7634784	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634785	Callee	fprintf		7634528	0					
ANR	7634786	Identifier	fprintf		7634528	0					
ANR	7634787	ArgumentList	stdout		7634528	1					
ANR	7634788	Argument	stdout		7634528	0					
ANR	7634789	Identifier	stdout		7634528	0					
ANR	7634790	Argument	"""\\n"""		7634528	1					
ANR	7634791	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634792	ExpressionStatement	"fprintf ( stdout , ""-b           : size of code block (-b 32,32,32) \\n"" )"	88:4:3921:3990	7634528	29	True				
ANR	7634793	CallExpression	"fprintf ( stdout , ""-b           : size of code block (-b 32,32,32) \\n"" )"		7634528	0					
ANR	7634794	Callee	fprintf		7634528	0					
ANR	7634795	Identifier	fprintf		7634528	0					
ANR	7634796	ArgumentList	stdout		7634528	1					
ANR	7634797	Argument	stdout		7634528	0					
ANR	7634798	Identifier	stdout		7634528	0					
ANR	7634799	Argument	"""-b           : size of code block (-b 32,32,32) \\n"""		7634528	1					
ANR	7634800	PrimaryExpression	"""-b           : size of code block (-b 32,32,32) \\n"""		7634528	0					
ANR	7634801	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	89:4:3996:4017	7634528	30	True				
ANR	7634802	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634803	Callee	fprintf		7634528	0					
ANR	7634804	Identifier	fprintf		7634528	0					
ANR	7634805	ArgumentList	stdout		7634528	1					
ANR	7634806	Argument	stdout		7634528	0					
ANR	7634807	Identifier	stdout		7634528	0					
ANR	7634808	Argument	"""\\n"""		7634528	1					
ANR	7634809	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634810	ExpressionStatement	"fprintf ( stdout , ""-c           : size of precinct (-c 128,128,128) \\n"" )"	90:4:4023:4093	7634528	31	True				
ANR	7634811	CallExpression	"fprintf ( stdout , ""-c           : size of precinct (-c 128,128,128) \\n"" )"		7634528	0					
ANR	7634812	Callee	fprintf		7634528	0					
ANR	7634813	Identifier	fprintf		7634528	0					
ANR	7634814	ArgumentList	stdout		7634528	1					
ANR	7634815	Argument	stdout		7634528	0					
ANR	7634816	Identifier	stdout		7634528	0					
ANR	7634817	Argument	"""-c           : size of precinct (-c 128,128,128) \\n"""		7634528	1					
ANR	7634818	PrimaryExpression	"""-c           : size of precinct (-c 128,128,128) \\n"""		7634528	0					
ANR	7634819	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	91:4:4099:4120	7634528	32	True				
ANR	7634820	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634821	Callee	fprintf		7634528	0					
ANR	7634822	Identifier	fprintf		7634528	0					
ANR	7634823	ArgumentList	stdout		7634528	1					
ANR	7634824	Argument	stdout		7634528	0					
ANR	7634825	Identifier	stdout		7634528	0					
ANR	7634826	Argument	"""\\n"""		7634528	1					
ANR	7634827	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634828	ExpressionStatement	"fprintf ( stdout , ""-t           : size of tile (-t 512,512,512) \\n"" )"	92:4:4126:4192	7634528	33	True				
ANR	7634829	CallExpression	"fprintf ( stdout , ""-t           : size of tile (-t 512,512,512) \\n"" )"		7634528	0					
ANR	7634830	Callee	fprintf		7634528	0					
ANR	7634831	Identifier	fprintf		7634528	0					
ANR	7634832	ArgumentList	stdout		7634528	1					
ANR	7634833	Argument	stdout		7634528	0					
ANR	7634834	Identifier	stdout		7634528	0					
ANR	7634835	Argument	"""-t           : size of tile (-t 512,512,512) \\n"""		7634528	1					
ANR	7634836	PrimaryExpression	"""-t           : size of tile (-t 512,512,512) \\n"""		7634528	0					
ANR	7634837	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	93:4:4198:4219	7634528	34	True				
ANR	7634838	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634839	Callee	fprintf		7634528	0					
ANR	7634840	Identifier	fprintf		7634528	0					
ANR	7634841	ArgumentList	stdout		7634528	1					
ANR	7634842	Argument	stdout		7634528	0					
ANR	7634843	Identifier	stdout		7634528	0					
ANR	7634844	Argument	"""\\n"""		7634528	1					
ANR	7634845	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634846	ExpressionStatement	"fprintf ( stdout , ""-p           : progression order (-p LRCP) [LRCP, RLCP, RPCL, PCRL, CPRL] \\n"" )"	94:4:4225:4332	7634528	35	True				
ANR	7634847	CallExpression	"fprintf ( stdout , ""-p           : progression order (-p LRCP) [LRCP, RLCP, RPCL, PCRL, CPRL] \\n"" )"		7634528	0					
ANR	7634848	Callee	fprintf		7634528	0					
ANR	7634849	Identifier	fprintf		7634528	0					
ANR	7634850	ArgumentList	stdout		7634528	1					
ANR	7634851	Argument	stdout		7634528	0					
ANR	7634852	Identifier	stdout		7634528	0					
ANR	7634853	Argument	"""-p           : progression order (-p LRCP) [LRCP, RLCP, RPCL, PCRL, CPRL] \\n"""		7634528	1					
ANR	7634854	PrimaryExpression	"""-p           : progression order (-p LRCP) [LRCP, RLCP, RPCL, PCRL, CPRL] \\n"""		7634528	0					
ANR	7634855	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	96:4:4338:4359	7634528	36	True				
ANR	7634856	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634857	Callee	fprintf		7634528	0					
ANR	7634858	Identifier	fprintf		7634528	0					
ANR	7634859	ArgumentList	stdout		7634528	1					
ANR	7634860	Argument	stdout		7634528	0					
ANR	7634861	Identifier	stdout		7634528	0					
ANR	7634862	Argument	"""\\n"""		7634528	1					
ANR	7634863	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634864	ExpressionStatement	"fprintf ( stdout , ""-s           : subsampling factor (-s 2,2,2) [-s X,Y,Z] \\n"" )"	97:4:4365:4442	7634528	37	True				
ANR	7634865	CallExpression	"fprintf ( stdout , ""-s           : subsampling factor (-s 2,2,2) [-s X,Y,Z] \\n"" )"		7634528	0					
ANR	7634866	Callee	fprintf		7634528	0					
ANR	7634867	Identifier	fprintf		7634528	0					
ANR	7634868	ArgumentList	stdout		7634528	1					
ANR	7634869	Argument	stdout		7634528	0					
ANR	7634870	Identifier	stdout		7634528	0					
ANR	7634871	Argument	"""-s           : subsampling factor (-s 2,2,2) [-s X,Y,Z] \\n"""		7634528	1					
ANR	7634872	PrimaryExpression	"""-s           : subsampling factor (-s 2,2,2) [-s X,Y,Z] \\n"""		7634528	0					
ANR	7634873	ExpressionStatement	"fprintf ( stdout , ""\\t\\t\\t  - Remark: subsampling bigger than 2 can produce error\\n"" )"	98:4:4448:4527	7634528	38	True				
ANR	7634874	CallExpression	"fprintf ( stdout , ""\\t\\t\\t  - Remark: subsampling bigger than 2 can produce error\\n"" )"		7634528	0					
ANR	7634875	Callee	fprintf		7634528	0					
ANR	7634876	Identifier	fprintf		7634528	0					
ANR	7634877	ArgumentList	stdout		7634528	1					
ANR	7634878	Argument	stdout		7634528	0					
ANR	7634879	Identifier	stdout		7634528	0					
ANR	7634880	Argument	"""\\t\\t\\t  - Remark: subsampling bigger than 2 can produce error\\n"""		7634528	1					
ANR	7634881	PrimaryExpression	"""\\t\\t\\t  - Remark: subsampling bigger than 2 can produce error\\n"""		7634528	0					
ANR	7634882	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	99:4:4533:4554	7634528	39	True				
ANR	7634883	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634884	Callee	fprintf		7634528	0					
ANR	7634885	Identifier	fprintf		7634528	0					
ANR	7634886	ArgumentList	stdout		7634528	1					
ANR	7634887	Argument	stdout		7634528	0					
ANR	7634888	Identifier	stdout		7634528	0					
ANR	7634889	Argument	"""\\n"""		7634528	1					
ANR	7634890	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634891	ExpressionStatement	"fprintf ( stdout , ""-SOP         : write SOP marker before each packet \\n"" )"	100:4:4560:4632	7634528	40	True				
ANR	7634892	CallExpression	"fprintf ( stdout , ""-SOP         : write SOP marker before each packet \\n"" )"		7634528	0					
ANR	7634893	Callee	fprintf		7634528	0					
ANR	7634894	Identifier	fprintf		7634528	0					
ANR	7634895	ArgumentList	stdout		7634528	1					
ANR	7634896	Argument	stdout		7634528	0					
ANR	7634897	Identifier	stdout		7634528	0					
ANR	7634898	Argument	"""-SOP         : write SOP marker before each packet \\n"""		7634528	1					
ANR	7634899	PrimaryExpression	"""-SOP         : write SOP marker before each packet \\n"""		7634528	0					
ANR	7634900	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	101:4:4638:4659	7634528	41	True				
ANR	7634901	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634902	Callee	fprintf		7634528	0					
ANR	7634903	Identifier	fprintf		7634528	0					
ANR	7634904	ArgumentList	stdout		7634528	1					
ANR	7634905	Argument	stdout		7634528	0					
ANR	7634906	Identifier	stdout		7634528	0					
ANR	7634907	Argument	"""\\n"""		7634528	1					
ANR	7634908	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634909	ExpressionStatement	"fprintf ( stdout , ""-EPH         : write EPH marker after each header packet \\n"" )"	102:4:4665:4743	7634528	42	True				
ANR	7634910	CallExpression	"fprintf ( stdout , ""-EPH         : write EPH marker after each header packet \\n"" )"		7634528	0					
ANR	7634911	Callee	fprintf		7634528	0					
ANR	7634912	Identifier	fprintf		7634528	0					
ANR	7634913	ArgumentList	stdout		7634528	1					
ANR	7634914	Argument	stdout		7634528	0					
ANR	7634915	Identifier	stdout		7634528	0					
ANR	7634916	Argument	"""-EPH         : write EPH marker after each header packet \\n"""		7634528	1					
ANR	7634917	PrimaryExpression	"""-EPH         : write EPH marker after each header packet \\n"""		7634528	0					
ANR	7634918	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	103:4:4749:4770	7634528	43	True				
ANR	7634919	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634920	Callee	fprintf		7634528	0					
ANR	7634921	Identifier	fprintf		7634528	0					
ANR	7634922	ArgumentList	stdout		7634528	1					
ANR	7634923	Argument	stdout		7634528	0					
ANR	7634924	Identifier	stdout		7634528	0					
ANR	7634925	Argument	"""\\n"""		7634528	1					
ANR	7634926	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634927	ExpressionStatement	"fprintf ( stdout , ""-M           : code-block style (-M 0) [1=BYPASS(LAZY) 2=RESET 4=RESTART(TERMALL)\\n"" )"	104:4:4776:4890	7634528	44	True				
ANR	7634928	CallExpression	"fprintf ( stdout , ""-M           : code-block style (-M 0) [1=BYPASS(LAZY) 2=RESET 4=RESTART(TERMALL)\\n"" )"		7634528	0					
ANR	7634929	Callee	fprintf		7634528	0					
ANR	7634930	Identifier	fprintf		7634528	0					
ANR	7634931	ArgumentList	stdout		7634528	1					
ANR	7634932	Argument	stdout		7634528	0					
ANR	7634933	Identifier	stdout		7634528	0					
ANR	7634934	Argument	"""-M           : code-block style (-M 0) [1=BYPASS(LAZY) 2=RESET 4=RESTART(TERMALL)\\n"""		7634528	1					
ANR	7634935	PrimaryExpression	"""-M           : code-block style (-M 0) [1=BYPASS(LAZY) 2=RESET 4=RESTART(TERMALL)\\n"""		7634528	0					
ANR	7634936	ExpressionStatement	"fprintf ( stdout , ""                 8=VSC 16=PTERM 32=SEGSYM 64=3DCTXT] \\n"" )"	106:4:4896:4970	7634528	45	True				
ANR	7634937	CallExpression	"fprintf ( stdout , ""                 8=VSC 16=PTERM 32=SEGSYM 64=3DCTXT] \\n"" )"		7634528	0					
ANR	7634938	Callee	fprintf		7634528	0					
ANR	7634939	Identifier	fprintf		7634528	0					
ANR	7634940	ArgumentList	stdout		7634528	1					
ANR	7634941	Argument	stdout		7634528	0					
ANR	7634942	Identifier	stdout		7634528	0					
ANR	7634943	Argument	"""                 8=VSC 16=PTERM 32=SEGSYM 64=3DCTXT] \\n"""		7634528	1					
ANR	7634944	PrimaryExpression	"""                 8=VSC 16=PTERM 32=SEGSYM 64=3DCTXT] \\n"""		7634528	0					
ANR	7634945	ExpressionStatement	"fprintf ( stdout , ""                 Indicate multiple modes by adding their values. \\n"" )"	107:4:4976:5074	7634528	46	True				
ANR	7634946	CallExpression	"fprintf ( stdout , ""                 Indicate multiple modes by adding their values. \\n"" )"		7634528	0					
ANR	7634947	Callee	fprintf		7634528	0					
ANR	7634948	Identifier	fprintf		7634528	0					
ANR	7634949	ArgumentList	stdout		7634528	1					
ANR	7634950	Argument	stdout		7634528	0					
ANR	7634951	Identifier	stdout		7634528	0					
ANR	7634952	Argument	"""                 Indicate multiple modes by adding their values. \\n"""		7634528	1					
ANR	7634953	PrimaryExpression	"""                 Indicate multiple modes by adding their values. \\n"""		7634528	0					
ANR	7634954	ExpressionStatement	"fprintf ( stdout , ""                 ex: RESTART(4) + RESET(2) + SEGMARK(32) = -M 38\\n"" )"	109:4:5080:5177	7634528	47	True				
ANR	7634955	CallExpression	"fprintf ( stdout , ""                 ex: RESTART(4) + RESET(2) + SEGMARK(32) = -M 38\\n"" )"		7634528	0					
ANR	7634956	Callee	fprintf		7634528	0					
ANR	7634957	Identifier	fprintf		7634528	0					
ANR	7634958	ArgumentList	stdout		7634528	1					
ANR	7634959	Argument	stdout		7634528	0					
ANR	7634960	Identifier	stdout		7634528	0					
ANR	7634961	Argument	"""                 ex: RESTART(4) + RESET(2) + SEGMARK(32) = -M 38\\n"""		7634528	1					
ANR	7634962	PrimaryExpression	"""                 ex: RESTART(4) + RESET(2) + SEGMARK(32) = -M 38\\n"""		7634528	0					
ANR	7634963	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	111:4:5183:5204	7634528	48	True				
ANR	7634964	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634965	Callee	fprintf		7634528	0					
ANR	7634966	Identifier	fprintf		7634528	0					
ANR	7634967	ArgumentList	stdout		7634528	1					
ANR	7634968	Argument	stdout		7634528	0					
ANR	7634969	Identifier	stdout		7634528	0					
ANR	7634970	Argument	"""\\n"""		7634528	1					
ANR	7634971	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634972	ExpressionStatement	"fprintf ( stdout , ""-D           : define DC offset (-D 12) \\n"" )"	112:4:5210:5271	7634528	49	True				
ANR	7634973	CallExpression	"fprintf ( stdout , ""-D           : define DC offset (-D 12) \\n"" )"		7634528	0					
ANR	7634974	Callee	fprintf		7634528	0					
ANR	7634975	Identifier	fprintf		7634528	0					
ANR	7634976	ArgumentList	stdout		7634528	1					
ANR	7634977	Argument	stdout		7634528	0					
ANR	7634978	Identifier	stdout		7634528	0					
ANR	7634979	Argument	"""-D           : define DC offset (-D 12) \\n"""		7634528	1					
ANR	7634980	PrimaryExpression	"""-D           : define DC offset (-D 12) \\n"""		7634528	0					
ANR	7634981	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	113:4:5277:5298	7634528	50	True				
ANR	7634982	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7634983	Callee	fprintf		7634528	0					
ANR	7634984	Identifier	fprintf		7634528	0					
ANR	7634985	ArgumentList	stdout		7634528	1					
ANR	7634986	Argument	stdout		7634528	0					
ANR	7634987	Identifier	stdout		7634528	0					
ANR	7634988	Argument	"""\\n"""		7634528	1					
ANR	7634989	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7634990	ExpressionStatement	"fprintf ( stdout , ""-x           : create an index file *.Idx (-x index_name.Idx) \\n"" )"	114:4:5304:5399	7634528	51	True				
ANR	7634991	CallExpression	"fprintf ( stdout , ""-x           : create an index file *.Idx (-x index_name.Idx) \\n"" )"		7634528	0					
ANR	7634992	Callee	fprintf		7634528	0					
ANR	7634993	Identifier	fprintf		7634528	0					
ANR	7634994	ArgumentList	stdout		7634528	1					
ANR	7634995	Argument	stdout		7634528	0					
ANR	7634996	Identifier	stdout		7634528	0					
ANR	7634997	Argument	"""-x           : create an index file *.Idx (-x index_name.Idx) \\n"""		7634528	1					
ANR	7634998	PrimaryExpression	"""-x           : create an index file *.Idx (-x index_name.Idx) \\n"""		7634528	0					
ANR	7634999	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	116:4:5405:5426	7634528	52	True				
ANR	7635000	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7635001	Callee	fprintf		7634528	0					
ANR	7635002	Identifier	fprintf		7634528	0					
ANR	7635003	ArgumentList	stdout		7634528	1					
ANR	7635004	Argument	stdout		7634528	0					
ANR	7635005	Identifier	stdout		7634528	0					
ANR	7635006	Argument	"""\\n"""		7634528	1					
ANR	7635007	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7635008	ExpressionStatement	"fprintf ( stdout , ""-ROI         : c=%%d,U=%%d : quantization indices upshifted \\n"" )"	117:4:5432:5525	7634528	53	True				
ANR	7635009	CallExpression	"fprintf ( stdout , ""-ROI         : c=%%d,U=%%d : quantization indices upshifted \\n"" )"		7634528	0					
ANR	7635010	Callee	fprintf		7634528	0					
ANR	7635011	Identifier	fprintf		7634528	0					
ANR	7635012	ArgumentList	stdout		7634528	1					
ANR	7635013	Argument	stdout		7634528	0					
ANR	7635014	Identifier	stdout		7634528	0					
ANR	7635015	Argument	"""-ROI         : c=%%d,U=%%d : quantization indices upshifted \\n"""		7634528	1					
ANR	7635016	PrimaryExpression	"""-ROI         : c=%%d,U=%%d : quantization indices upshifted \\n"""		7634528	0					
ANR	7635017	ExpressionStatement	"fprintf ( stdout , ""               for component c=%%d [%%d = 0,1,2]\\n"" )"	119:4:5531:5600	7634528	54	True				
ANR	7635018	CallExpression	"fprintf ( stdout , ""               for component c=%%d [%%d = 0,1,2]\\n"" )"		7634528	0					
ANR	7635019	Callee	fprintf		7634528	0					
ANR	7635020	Identifier	fprintf		7634528	0					
ANR	7635021	ArgumentList	stdout		7634528	1					
ANR	7635022	Argument	stdout		7634528	0					
ANR	7635023	Identifier	stdout		7634528	0					
ANR	7635024	Argument	"""               for component c=%%d [%%d = 0,1,2]\\n"""		7634528	1					
ANR	7635025	PrimaryExpression	"""               for component c=%%d [%%d = 0,1,2]\\n"""		7634528	0					
ANR	7635026	ExpressionStatement	"fprintf ( stdout , ""               with a value of U=%%d [0 <= %%d <= 37] (i.e. -ROI:c=0,U=25) \\n"" )"	120:4:5606:5714	7634528	55	True				
ANR	7635027	CallExpression	"fprintf ( stdout , ""               with a value of U=%%d [0 <= %%d <= 37] (i.e. -ROI:c=0,U=25) \\n"" )"		7634528	0					
ANR	7635028	Callee	fprintf		7634528	0					
ANR	7635029	Identifier	fprintf		7634528	0					
ANR	7635030	ArgumentList	stdout		7634528	1					
ANR	7635031	Argument	stdout		7634528	0					
ANR	7635032	Identifier	stdout		7634528	0					
ANR	7635033	Argument	"""               with a value of U=%%d [0 <= %%d <= 37] (i.e. -ROI:c=0,U=25) \\n"""		7634528	1					
ANR	7635034	PrimaryExpression	"""               with a value of U=%%d [0 <= %%d <= 37] (i.e. -ROI:c=0,U=25) \\n"""		7634528	0					
ANR	7635035	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	122:4:5720:5741	7634528	56	True				
ANR	7635036	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7635037	Callee	fprintf		7634528	0					
ANR	7635038	Identifier	fprintf		7634528	0					
ANR	7635039	ArgumentList	stdout		7634528	1					
ANR	7635040	Argument	stdout		7634528	0					
ANR	7635041	Identifier	stdout		7634528	0					
ANR	7635042	Argument	"""\\n"""		7634528	1					
ANR	7635043	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7635044	ExpressionStatement	"fprintf ( stdout , ""-d           : offset of the origin of the volume (-d 150,300,100) \\n"" )"	123:4:5747:5847	7634528	57	True				
ANR	7635045	CallExpression	"fprintf ( stdout , ""-d           : offset of the origin of the volume (-d 150,300,100) \\n"" )"		7634528	0					
ANR	7635046	Callee	fprintf		7634528	0					
ANR	7635047	Identifier	fprintf		7634528	0					
ANR	7635048	ArgumentList	stdout		7634528	1					
ANR	7635049	Argument	stdout		7634528	0					
ANR	7635050	Identifier	stdout		7634528	0					
ANR	7635051	Argument	"""-d           : offset of the origin of the volume (-d 150,300,100) \\n"""		7634528	1					
ANR	7635052	PrimaryExpression	"""-d           : offset of the origin of the volume (-d 150,300,100) \\n"""		7634528	0					
ANR	7635053	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	125:4:5853:5874	7634528	58	True				
ANR	7635054	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7635055	Callee	fprintf		7634528	0					
ANR	7635056	Identifier	fprintf		7634528	0					
ANR	7635057	ArgumentList	stdout		7634528	1					
ANR	7635058	Argument	stdout		7634528	0					
ANR	7635059	Identifier	stdout		7634528	0					
ANR	7635060	Argument	"""\\n"""		7634528	1					
ANR	7635061	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7635062	ExpressionStatement	"fprintf ( stdout , ""-l           : offset of the origin of the tiles (-l 100,75,25) \\n"" )"	126:4:5880:5977	7634528	59	True				
ANR	7635063	CallExpression	"fprintf ( stdout , ""-l           : offset of the origin of the tiles (-l 100,75,25) \\n"" )"		7634528	0					
ANR	7635064	Callee	fprintf		7634528	0					
ANR	7635065	Identifier	fprintf		7634528	0					
ANR	7635066	ArgumentList	stdout		7634528	1					
ANR	7635067	Argument	stdout		7634528	0					
ANR	7635068	Identifier	stdout		7634528	0					
ANR	7635069	Argument	"""-l           : offset of the origin of the tiles (-l 100,75,25) \\n"""		7634528	1					
ANR	7635070	PrimaryExpression	"""-l           : offset of the origin of the tiles (-l 100,75,25) \\n"""		7634528	0					
ANR	7635071	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	128:4:5983:6004	7634528	60	True				
ANR	7635072	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7635073	Callee	fprintf		7634528	0					
ANR	7635074	Identifier	fprintf		7634528	0					
ANR	7635075	ArgumentList	stdout		7634528	1					
ANR	7635076	Argument	stdout		7634528	0					
ANR	7635077	Identifier	stdout		7634528	0					
ANR	7635078	Argument	"""\\n"""		7634528	1					
ANR	7635079	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7635080	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	129:4:6010:6031	7634528	61	True				
ANR	7635081	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7635082	Callee	fprintf		7634528	0					
ANR	7635083	Identifier	fprintf		7634528	0					
ANR	7635084	ArgumentList	stdout		7634528	1					
ANR	7635085	Argument	stdout		7634528	0					
ANR	7635086	Identifier	stdout		7634528	0					
ANR	7635087	Argument	"""\\n"""		7634528	1					
ANR	7635088	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7635089	ExpressionStatement	"fprintf ( stdout , ""DEFAULT CODING:\\n"" )"	130:4:6037:6073	7634528	62	True				
ANR	7635090	CallExpression	"fprintf ( stdout , ""DEFAULT CODING:\\n"" )"		7634528	0					
ANR	7635091	Callee	fprintf		7634528	0					
ANR	7635092	Identifier	fprintf		7634528	0					
ANR	7635093	ArgumentList	stdout		7634528	1					
ANR	7635094	Argument	stdout		7634528	0					
ANR	7635095	Identifier	stdout		7634528	0					
ANR	7635096	Argument	"""DEFAULT CODING:\\n"""		7634528	1					
ANR	7635097	PrimaryExpression	"""DEFAULT CODING:\\n"""		7634528	0					
ANR	7635098	ExpressionStatement	"fprintf ( stdout , ""------------\\n"" )"	131:4:6079:6112	7634528	63	True				
ANR	7635099	CallExpression	"fprintf ( stdout , ""------------\\n"" )"		7634528	0					
ANR	7635100	Callee	fprintf		7634528	0					
ANR	7635101	Identifier	fprintf		7634528	0					
ANR	7635102	ArgumentList	stdout		7634528	1					
ANR	7635103	Argument	stdout		7634528	0					
ANR	7635104	Identifier	stdout		7634528	0					
ANR	7635105	Argument	"""------------\\n"""		7634528	1					
ANR	7635106	PrimaryExpression	"""------------\\n"""		7634528	0					
ANR	7635107	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	132:4:6118:6139	7634528	64	True				
ANR	7635108	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7635109	Callee	fprintf		7634528	0					
ANR	7635110	Identifier	fprintf		7634528	0					
ANR	7635111	ArgumentList	stdout		7634528	1					
ANR	7635112	Argument	stdout		7634528	0					
ANR	7635113	Identifier	stdout		7634528	0					
ANR	7635114	Argument	"""\\n"""		7634528	1					
ANR	7635115	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7635116	ExpressionStatement	"fprintf ( stdout , "" * Lossless\\n"" )"	133:4:6145:6177	7634528	65	True				
ANR	7635117	CallExpression	"fprintf ( stdout , "" * Lossless\\n"" )"		7634528	0					
ANR	7635118	Callee	fprintf		7634528	0					
ANR	7635119	Identifier	fprintf		7634528	0					
ANR	7635120	ArgumentList	stdout		7634528	1					
ANR	7635121	Argument	stdout		7634528	0					
ANR	7635122	Identifier	stdout		7634528	0					
ANR	7635123	Argument	""" * Lossless\\n"""		7634528	1					
ANR	7635124	PrimaryExpression	""" * Lossless\\n"""		7634528	0					
ANR	7635125	ExpressionStatement	"fprintf ( stdout , "" * 1 tile\\n"" )"	134:4:6183:6213	7634528	66	True				
ANR	7635126	CallExpression	"fprintf ( stdout , "" * 1 tile\\n"" )"		7634528	0					
ANR	7635127	Callee	fprintf		7634528	0					
ANR	7635128	Identifier	fprintf		7634528	0					
ANR	7635129	ArgumentList	stdout		7634528	1					
ANR	7635130	Argument	stdout		7634528	0					
ANR	7635131	Identifier	stdout		7634528	0					
ANR	7635132	Argument	""" * 1 tile\\n"""		7634528	1					
ANR	7635133	PrimaryExpression	""" * 1 tile\\n"""		7634528	0					
ANR	7635134	ExpressionStatement	"fprintf ( stdout , "" * Size of precinct : 2^15 x 2^15 x 2^15 (means 1 precinct)\\n"" )"	135:4:6219:6311	7634528	67	True				
ANR	7635135	CallExpression	"fprintf ( stdout , "" * Size of precinct : 2^15 x 2^15 x 2^15 (means 1 precinct)\\n"" )"		7634528	0					
ANR	7635136	Callee	fprintf		7634528	0					
ANR	7635137	Identifier	fprintf		7634528	0					
ANR	7635138	ArgumentList	stdout		7634528	1					
ANR	7635139	Argument	stdout		7634528	0					
ANR	7635140	Identifier	stdout		7634528	0					
ANR	7635141	Argument	""" * Size of precinct : 2^15 x 2^15 x 2^15 (means 1 precinct)\\n"""		7634528	1					
ANR	7635142	PrimaryExpression	""" * Size of precinct : 2^15 x 2^15 x 2^15 (means 1 precinct)\\n"""		7634528	0					
ANR	7635143	ExpressionStatement	"fprintf ( stdout , "" * Size of code-block : 64 x 64 x 64\\n"" )"	137:4:6317:6374	7634528	68	True				
ANR	7635144	CallExpression	"fprintf ( stdout , "" * Size of code-block : 64 x 64 x 64\\n"" )"		7634528	0					
ANR	7635145	Callee	fprintf		7634528	0					
ANR	7635146	Identifier	fprintf		7634528	0					
ANR	7635147	ArgumentList	stdout		7634528	1					
ANR	7635148	Argument	stdout		7634528	0					
ANR	7635149	Identifier	stdout		7634528	0					
ANR	7635150	Argument	""" * Size of code-block : 64 x 64 x 64\\n"""		7634528	1					
ANR	7635151	PrimaryExpression	""" * Size of code-block : 64 x 64 x 64\\n"""		7634528	0					
ANR	7635152	ExpressionStatement	"fprintf ( stdout , "" * Number of resolutions in x, y and z axis: 3\\n"" )"	138:4:6380:6447	7634528	69	True				
ANR	7635153	CallExpression	"fprintf ( stdout , "" * Number of resolutions in x, y and z axis: 3\\n"" )"		7634528	0					
ANR	7635154	Callee	fprintf		7634528	0					
ANR	7635155	Identifier	fprintf		7634528	0					
ANR	7635156	ArgumentList	stdout		7634528	1					
ANR	7635157	Argument	stdout		7634528	0					
ANR	7635158	Identifier	stdout		7634528	0					
ANR	7635159	Argument	""" * Number of resolutions in x, y and z axis: 3\\n"""		7634528	1					
ANR	7635160	PrimaryExpression	""" * Number of resolutions in x, y and z axis: 3\\n"""		7634528	0					
ANR	7635161	ExpressionStatement	"fprintf ( stdout , "" * No SOP marker in the codestream\\n"" )"	139:4:6453:6508	7634528	70	True				
ANR	7635162	CallExpression	"fprintf ( stdout , "" * No SOP marker in the codestream\\n"" )"		7634528	0					
ANR	7635163	Callee	fprintf		7634528	0					
ANR	7635164	Identifier	fprintf		7634528	0					
ANR	7635165	ArgumentList	stdout		7634528	1					
ANR	7635166	Argument	stdout		7634528	0					
ANR	7635167	Identifier	stdout		7634528	0					
ANR	7635168	Argument	""" * No SOP marker in the codestream\\n"""		7634528	1					
ANR	7635169	PrimaryExpression	""" * No SOP marker in the codestream\\n"""		7634528	0					
ANR	7635170	ExpressionStatement	"fprintf ( stdout , "" * No EPH marker in the codestream\\n"" )"	140:4:6514:6569	7634528	71	True				
ANR	7635171	CallExpression	"fprintf ( stdout , "" * No EPH marker in the codestream\\n"" )"		7634528	0					
ANR	7635172	Callee	fprintf		7634528	0					
ANR	7635173	Identifier	fprintf		7634528	0					
ANR	7635174	ArgumentList	stdout		7634528	1					
ANR	7635175	Argument	stdout		7634528	0					
ANR	7635176	Identifier	stdout		7634528	0					
ANR	7635177	Argument	""" * No EPH marker in the codestream\\n"""		7634528	1					
ANR	7635178	PrimaryExpression	""" * No EPH marker in the codestream\\n"""		7634528	0					
ANR	7635179	ExpressionStatement	"fprintf ( stdout , "" * No sub-sampling in x, y or z direction\\n"" )"	141:4:6575:6637	7634528	72	True				
ANR	7635180	CallExpression	"fprintf ( stdout , "" * No sub-sampling in x, y or z direction\\n"" )"		7634528	0					
ANR	7635181	Callee	fprintf		7634528	0					
ANR	7635182	Identifier	fprintf		7634528	0					
ANR	7635183	ArgumentList	stdout		7634528	1					
ANR	7635184	Argument	stdout		7634528	0					
ANR	7635185	Identifier	stdout		7634528	0					
ANR	7635186	Argument	""" * No sub-sampling in x, y or z direction\\n"""		7634528	1					
ANR	7635187	PrimaryExpression	""" * No sub-sampling in x, y or z direction\\n"""		7634528	0					
ANR	7635188	ExpressionStatement	"fprintf ( stdout , "" * No mode switch activated\\n"" )"	142:4:6643:6691	7634528	73	True				
ANR	7635189	CallExpression	"fprintf ( stdout , "" * No mode switch activated\\n"" )"		7634528	0					
ANR	7635190	Callee	fprintf		7634528	0					
ANR	7635191	Identifier	fprintf		7634528	0					
ANR	7635192	ArgumentList	stdout		7634528	1					
ANR	7635193	Argument	stdout		7634528	0					
ANR	7635194	Identifier	stdout		7634528	0					
ANR	7635195	Argument	""" * No mode switch activated\\n"""		7634528	1					
ANR	7635196	PrimaryExpression	""" * No mode switch activated\\n"""		7634528	0					
ANR	7635197	ExpressionStatement	"fprintf ( stdout , "" * Progression order: LRCP\\n"" )"	143:4:6697:6744	7634528	74	True				
ANR	7635198	CallExpression	"fprintf ( stdout , "" * Progression order: LRCP\\n"" )"		7634528	0					
ANR	7635199	Callee	fprintf		7634528	0					
ANR	7635200	Identifier	fprintf		7634528	0					
ANR	7635201	ArgumentList	stdout		7634528	1					
ANR	7635202	Argument	stdout		7634528	0					
ANR	7635203	Identifier	stdout		7634528	0					
ANR	7635204	Argument	""" * Progression order: LRCP\\n"""		7634528	1					
ANR	7635205	PrimaryExpression	""" * Progression order: LRCP\\n"""		7634528	0					
ANR	7635206	ExpressionStatement	"fprintf ( stdout , "" * No index file\\n"" )"	144:4:6750:6787	7634528	75	True				
ANR	7635207	CallExpression	"fprintf ( stdout , "" * No index file\\n"" )"		7634528	0					
ANR	7635208	Callee	fprintf		7634528	0					
ANR	7635209	Identifier	fprintf		7634528	0					
ANR	7635210	ArgumentList	stdout		7634528	1					
ANR	7635211	Argument	stdout		7634528	0					
ANR	7635212	Identifier	stdout		7634528	0					
ANR	7635213	Argument	""" * No index file\\n"""		7634528	1					
ANR	7635214	PrimaryExpression	""" * No index file\\n"""		7634528	0					
ANR	7635215	ExpressionStatement	"fprintf ( stdout , "" * No ROI upshifted\\n"" )"	145:4:6793:6833	7634528	76	True				
ANR	7635216	CallExpression	"fprintf ( stdout , "" * No ROI upshifted\\n"" )"		7634528	0					
ANR	7635217	Callee	fprintf		7634528	0					
ANR	7635218	Identifier	fprintf		7634528	0					
ANR	7635219	ArgumentList	stdout		7634528	1					
ANR	7635220	Argument	stdout		7634528	0					
ANR	7635221	Identifier	stdout		7634528	0					
ANR	7635222	Argument	""" * No ROI upshifted\\n"""		7634528	1					
ANR	7635223	PrimaryExpression	""" * No ROI upshifted\\n"""		7634528	0					
ANR	7635224	ExpressionStatement	"fprintf ( stdout , "" * No offset of the origin of the volume\\n"" )"	146:4:6839:6900	7634528	77	True				
ANR	7635225	CallExpression	"fprintf ( stdout , "" * No offset of the origin of the volume\\n"" )"		7634528	0					
ANR	7635226	Callee	fprintf		7634528	0					
ANR	7635227	Identifier	fprintf		7634528	0					
ANR	7635228	ArgumentList	stdout		7634528	1					
ANR	7635229	Argument	stdout		7634528	0					
ANR	7635230	Identifier	stdout		7634528	0					
ANR	7635231	Argument	""" * No offset of the origin of the volume\\n"""		7634528	1					
ANR	7635232	PrimaryExpression	""" * No offset of the origin of the volume\\n"""		7634528	0					
ANR	7635233	ExpressionStatement	"fprintf ( stdout , "" * No offset of the origin of the tiles\\n"" )"	147:4:6906:6966	7634528	78	True				
ANR	7635234	CallExpression	"fprintf ( stdout , "" * No offset of the origin of the tiles\\n"" )"		7634528	0					
ANR	7635235	Callee	fprintf		7634528	0					
ANR	7635236	Identifier	fprintf		7634528	0					
ANR	7635237	ArgumentList	stdout		7634528	1					
ANR	7635238	Argument	stdout		7634528	0					
ANR	7635239	Identifier	stdout		7634528	0					
ANR	7635240	Argument	""" * No offset of the origin of the tiles\\n"""		7634528	1					
ANR	7635241	PrimaryExpression	""" * No offset of the origin of the tiles\\n"""		7634528	0					
ANR	7635242	ExpressionStatement	"fprintf ( stdout , "" * Reversible DWT 5-3 on each 2D slice\\n"" )"	148:4:6972:7031	7634528	79	True				
ANR	7635243	CallExpression	"fprintf ( stdout , "" * Reversible DWT 5-3 on each 2D slice\\n"" )"		7634528	0					
ANR	7635244	Callee	fprintf		7634528	0					
ANR	7635245	Identifier	fprintf		7634528	0					
ANR	7635246	ArgumentList	stdout		7634528	1					
ANR	7635247	Argument	stdout		7634528	0					
ANR	7635248	Identifier	stdout		7634528	0					
ANR	7635249	Argument	""" * Reversible DWT 5-3 on each 2D slice\\n"""		7634528	1					
ANR	7635250	PrimaryExpression	""" * Reversible DWT 5-3 on each 2D slice\\n"""		7634528	0					
ANR	7635251	ExpressionStatement	"fprintf ( stdout , "" * Coding algorithm: 2D-EBCOT \\n"" )"	149:4:7037:7088	7634528	80	True				
ANR	7635252	CallExpression	"fprintf ( stdout , "" * Coding algorithm: 2D-EBCOT \\n"" )"		7634528	0					
ANR	7635253	Callee	fprintf		7634528	0					
ANR	7635254	Identifier	fprintf		7634528	0					
ANR	7635255	ArgumentList	stdout		7634528	1					
ANR	7635256	Argument	stdout		7634528	0					
ANR	7635257	Identifier	stdout		7634528	0					
ANR	7635258	Argument	""" * Coding algorithm: 2D-EBCOT \\n"""		7634528	1					
ANR	7635259	PrimaryExpression	""" * Coding algorithm: 2D-EBCOT \\n"""		7634528	0					
ANR	7635260	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	150:4:7094:7115	7634528	81	True				
ANR	7635261	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7635262	Callee	fprintf		7634528	0					
ANR	7635263	Identifier	fprintf		7634528	0					
ANR	7635264	ArgumentList	stdout		7634528	1					
ANR	7635265	Argument	stdout		7634528	0					
ANR	7635266	Identifier	stdout		7634528	0					
ANR	7635267	Argument	"""\\n"""		7634528	1					
ANR	7635268	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7635269	ExpressionStatement	"fprintf ( stdout , ""REMARKS:\\n"" )"	151:4:7121:7150	7634528	82	True				
ANR	7635270	CallExpression	"fprintf ( stdout , ""REMARKS:\\n"" )"		7634528	0					
ANR	7635271	Callee	fprintf		7634528	0					
ANR	7635272	Identifier	fprintf		7634528	0					
ANR	7635273	ArgumentList	stdout		7634528	1					
ANR	7635274	Argument	stdout		7634528	0					
ANR	7635275	Identifier	stdout		7634528	0					
ANR	7635276	Argument	"""REMARKS:\\n"""		7634528	1					
ANR	7635277	PrimaryExpression	"""REMARKS:\\n"""		7634528	0					
ANR	7635278	ExpressionStatement	"fprintf ( stdout , ""---------\\n"" )"	152:4:7156:7186	7634528	83	True				
ANR	7635279	CallExpression	"fprintf ( stdout , ""---------\\n"" )"		7634528	0					
ANR	7635280	Callee	fprintf		7634528	0					
ANR	7635281	Identifier	fprintf		7634528	0					
ANR	7635282	ArgumentList	stdout		7634528	1					
ANR	7635283	Argument	stdout		7634528	0					
ANR	7635284	Identifier	stdout		7634528	0					
ANR	7635285	Argument	"""---------\\n"""		7634528	1					
ANR	7635286	PrimaryExpression	"""---------\\n"""		7634528	0					
ANR	7635287	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	153:4:7192:7213	7634528	84	True				
ANR	7635288	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7635289	Callee	fprintf		7634528	0					
ANR	7635290	Identifier	fprintf		7634528	0					
ANR	7635291	ArgumentList	stdout		7634528	1					
ANR	7635292	Argument	stdout		7634528	0					
ANR	7635293	Identifier	stdout		7634528	0					
ANR	7635294	Argument	"""\\n"""		7634528	1					
ANR	7635295	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7635296	ExpressionStatement	"fprintf ( stdout , ""- The markers written to the main_header are : SOC SIZ COD QCD COM.\\n"" )"	154:4:7219:7319	7634528	85	True				
ANR	7635297	CallExpression	"fprintf ( stdout , ""- The markers written to the main_header are : SOC SIZ COD QCD COM.\\n"" )"		7634528	0					
ANR	7635298	Callee	fprintf		7634528	0					
ANR	7635299	Identifier	fprintf		7634528	0					
ANR	7635300	ArgumentList	stdout		7634528	1					
ANR	7635301	Argument	stdout		7634528	0					
ANR	7635302	Identifier	stdout		7634528	0					
ANR	7635303	Argument	"""- The markers written to the main_header are : SOC SIZ COD QCD COM.\\n"""		7634528	1					
ANR	7635304	PrimaryExpression	"""- The markers written to the main_header are : SOC SIZ COD QCD COM.\\n"""		7634528	0					
ANR	7635305	ExpressionStatement	"fprintf ( stdout , ""- COD and QCD markers will never appear in the tile_header.\\n"" )"	156:4:7325:7417	7634528	86	True				
ANR	7635306	CallExpression	"fprintf ( stdout , ""- COD and QCD markers will never appear in the tile_header.\\n"" )"		7634528	0					
ANR	7635307	Callee	fprintf		7634528	0					
ANR	7635308	Identifier	fprintf		7634528	0					
ANR	7635309	ArgumentList	stdout		7634528	1					
ANR	7635310	Argument	stdout		7634528	0					
ANR	7635311	Identifier	stdout		7634528	0					
ANR	7635312	Argument	"""- COD and QCD markers will never appear in the tile_header.\\n"""		7634528	1					
ANR	7635313	PrimaryExpression	"""- COD and QCD markers will never appear in the tile_header.\\n"""		7634528	0					
ANR	7635314	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	158:4:7423:7444	7634528	87	True				
ANR	7635315	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7635316	Callee	fprintf		7634528	0					
ANR	7635317	Identifier	fprintf		7634528	0					
ANR	7635318	ArgumentList	stdout		7634528	1					
ANR	7635319	Argument	stdout		7634528	0					
ANR	7635320	Identifier	stdout		7634528	0					
ANR	7635321	Argument	"""\\n"""		7634528	1					
ANR	7635322	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7635323	ExpressionStatement	"fprintf ( stdout , ""- You need enough disk space memory (twice the original) to encode \\n"" )"	159:4:7450:7550	7634528	88	True				
ANR	7635324	CallExpression	"fprintf ( stdout , ""- You need enough disk space memory (twice the original) to encode \\n"" )"		7634528	0					
ANR	7635325	Callee	fprintf		7634528	0					
ANR	7635326	Identifier	fprintf		7634528	0					
ANR	7635327	ArgumentList	stdout		7634528	1					
ANR	7635328	Argument	stdout		7634528	0					
ANR	7635329	Identifier	stdout		7634528	0					
ANR	7635330	Argument	"""- You need enough disk space memory (twice the original) to encode \\n"""		7634528	1					
ANR	7635331	PrimaryExpression	"""- You need enough disk space memory (twice the original) to encode \\n"""		7634528	0					
ANR	7635332	ExpressionStatement	"fprintf ( stdout , ""the volume,i.e. for a 1.5 GB volume you need a minimum of 3GB of disk memory)\\n"" )"	161:4:7556:7666	7634528	89	True				
ANR	7635333	CallExpression	"fprintf ( stdout , ""the volume,i.e. for a 1.5 GB volume you need a minimum of 3GB of disk memory)\\n"" )"		7634528	0					
ANR	7635334	Callee	fprintf		7634528	0					
ANR	7635335	Identifier	fprintf		7634528	0					
ANR	7635336	ArgumentList	stdout		7634528	1					
ANR	7635337	Argument	stdout		7634528	0					
ANR	7635338	Identifier	stdout		7634528	0					
ANR	7635339	Argument	"""the volume,i.e. for a 1.5 GB volume you need a minimum of 3GB of disk memory)\\n"""		7634528	1					
ANR	7635340	PrimaryExpression	"""the volume,i.e. for a 1.5 GB volume you need a minimum of 3GB of disk memory)\\n"""		7634528	0					
ANR	7635341	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	163:4:7672:7693	7634528	90	True				
ANR	7635342	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7635343	Callee	fprintf		7634528	0					
ANR	7635344	Identifier	fprintf		7634528	0					
ANR	7635345	ArgumentList	stdout		7634528	1					
ANR	7635346	Argument	stdout		7634528	0					
ANR	7635347	Identifier	stdout		7634528	0					
ANR	7635348	Argument	"""\\n"""		7634528	1					
ANR	7635349	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7635350	ExpressionStatement	"fprintf ( stdout , ""- When loading *.pgx files, a relative path to directory is needed for input argument \\n"" )"	164:4:7699:7818	7634528	91	True				
ANR	7635351	CallExpression	"fprintf ( stdout , ""- When loading *.pgx files, a relative path to directory is needed for input argument \\n"" )"		7634528	0					
ANR	7635352	Callee	fprintf		7634528	0					
ANR	7635353	Identifier	fprintf		7634528	0					
ANR	7635354	ArgumentList	stdout		7634528	1					
ANR	7635355	Argument	stdout		7634528	0					
ANR	7635356	Identifier	stdout		7634528	0					
ANR	7635357	Argument	"""- When loading *.pgx files, a relative path to directory is needed for input argument \\n"""		7634528	1					
ANR	7635358	PrimaryExpression	"""- When loading *.pgx files, a relative path to directory is needed for input argument \\n"""		7634528	0					
ANR	7635359	ExpressionStatement	"fprintf ( stdout , "" followed by the common prefix of the slices and a '*' character representing sequential numeration.\\n"" )"	166:4:7824:7957	7634528	92	True				
ANR	7635360	CallExpression	"fprintf ( stdout , "" followed by the common prefix of the slices and a '*' character representing sequential numeration.\\n"" )"		7634528	0					
ANR	7635361	Callee	fprintf		7634528	0					
ANR	7635362	Identifier	fprintf		7634528	0					
ANR	7635363	ArgumentList	stdout		7634528	1					
ANR	7635364	Argument	stdout		7634528	0					
ANR	7635365	Identifier	stdout		7634528	0					
ANR	7635366	Argument	""" followed by the common prefix of the slices and a '*' character representing sequential numeration.\\n"""		7634528	1					
ANR	7635367	PrimaryExpression	""" followed by the common prefix of the slices and a '*' character representing sequential numeration.\\n"""		7634528	0					
ANR	7635368	ExpressionStatement	"fprintf ( stdout , ""( -i relativepath/slices*.pgx )\\n"" )"	168:4:7963:8015	7634528	93	True				
ANR	7635369	CallExpression	"fprintf ( stdout , ""( -i relativepath/slices*.pgx )\\n"" )"		7634528	0					
ANR	7635370	Callee	fprintf		7634528	0					
ANR	7635371	Identifier	fprintf		7634528	0					
ANR	7635372	ArgumentList	stdout		7634528	1					
ANR	7635373	Argument	stdout		7634528	0					
ANR	7635374	Identifier	stdout		7634528	0					
ANR	7635375	Argument	"""( -i relativepath/slices*.pgx )\\n"""		7634528	1					
ANR	7635376	PrimaryExpression	"""( -i relativepath/slices*.pgx )\\n"""		7634528	0					
ANR	7635377	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	169:4:8021:8042	7634528	94	True				
ANR	7635378	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7635379	Callee	fprintf		7634528	0					
ANR	7635380	Identifier	fprintf		7634528	0					
ANR	7635381	ArgumentList	stdout		7634528	1					
ANR	7635382	Argument	stdout		7634528	0					
ANR	7635383	Identifier	stdout		7634528	0					
ANR	7635384	Argument	"""\\n"""		7634528	1					
ANR	7635385	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7635386	ExpressionStatement	"fprintf ( stdout , "" - The index file has the structure below:\\n"" )"	170:4:8048:8111	7634528	95	True				
ANR	7635387	CallExpression	"fprintf ( stdout , "" - The index file has the structure below:\\n"" )"		7634528	0					
ANR	7635388	Callee	fprintf		7634528	0					
ANR	7635389	Identifier	fprintf		7634528	0					
ANR	7635390	ArgumentList	stdout		7634528	1					
ANR	7635391	Argument	stdout		7634528	0					
ANR	7635392	Identifier	stdout		7634528	0					
ANR	7635393	Argument	""" - The index file has the structure below:\\n"""		7634528	1					
ANR	7635394	PrimaryExpression	""" - The index file has the structure below:\\n"""		7634528	0					
ANR	7635395	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	171:4:8117:8138	7634528	96	True				
ANR	7635396	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7635397	Callee	fprintf		7634528	0					
ANR	7635398	Identifier	fprintf		7634528	0					
ANR	7635399	ArgumentList	stdout		7634528	1					
ANR	7635400	Argument	stdout		7634528	0					
ANR	7635401	Identifier	stdout		7634528	0					
ANR	7635402	Argument	"""\\n"""		7634528	1					
ANR	7635403	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7635404	ExpressionStatement	"fprintf ( stdout , ""\\t\\tImage_height Image_width Image_depth\\n"" )"	172:4:8144:8204	7634528	97	True				
ANR	7635405	CallExpression	"fprintf ( stdout , ""\\t\\tImage_height Image_width Image_depth\\n"" )"		7634528	0					
ANR	7635406	Callee	fprintf		7634528	0					
ANR	7635407	Identifier	fprintf		7634528	0					
ANR	7635408	ArgumentList	stdout		7634528	1					
ANR	7635409	Argument	stdout		7634528	0					
ANR	7635410	Identifier	stdout		7634528	0					
ANR	7635411	Argument	"""\\t\\tImage_height Image_width Image_depth\\n"""		7634528	1					
ANR	7635412	PrimaryExpression	"""\\t\\tImage_height Image_width Image_depth\\n"""		7634528	0					
ANR	7635413	ExpressionStatement	"fprintf ( stdout , ""\\t\\tProgression order: 0 (LRCP)\\n"" )"	173:4:8210:8261	7634528	98	True				
ANR	7635414	CallExpression	"fprintf ( stdout , ""\\t\\tProgression order: 0 (LRCP)\\n"" )"		7634528	0					
ANR	7635415	Callee	fprintf		7634528	0					
ANR	7635416	Identifier	fprintf		7634528	0					
ANR	7635417	ArgumentList	stdout		7634528	1					
ANR	7635418	Argument	stdout		7634528	0					
ANR	7635419	Identifier	stdout		7634528	0					
ANR	7635420	Argument	"""\\t\\tProgression order: 0 (LRCP)\\n"""		7634528	1					
ANR	7635421	PrimaryExpression	"""\\t\\tProgression order: 0 (LRCP)\\n"""		7634528	0					
ANR	7635422	ExpressionStatement	"fprintf ( stdout , ""\\t\\tTiles_size_X Tiles_size_Y Tiles_size_Z\\n"" )"	174:4:8267:8329	7634528	99	True				
ANR	7635423	CallExpression	"fprintf ( stdout , ""\\t\\tTiles_size_X Tiles_size_Y Tiles_size_Z\\n"" )"		7634528	0					
ANR	7635424	Callee	fprintf		7634528	0					
ANR	7635425	Identifier	fprintf		7634528	0					
ANR	7635426	ArgumentList	stdout		7634528	1					
ANR	7635427	Argument	stdout		7634528	0					
ANR	7635428	Identifier	stdout		7634528	0					
ANR	7635429	Argument	"""\\t\\tTiles_size_X Tiles_size_Y Tiles_size_Z\\n"""		7634528	1					
ANR	7635430	PrimaryExpression	"""\\t\\tTiles_size_X Tiles_size_Y Tiles_size_Z\\n"""		7634528	0					
ANR	7635431	ExpressionStatement	"fprintf ( stdout , ""\\t\\tComponents_nb\\n"" )"	175:4:8335:8372	7634528	100	True				
ANR	7635432	CallExpression	"fprintf ( stdout , ""\\t\\tComponents_nb\\n"" )"		7634528	0					
ANR	7635433	Callee	fprintf		7634528	0					
ANR	7635434	Identifier	fprintf		7634528	0					
ANR	7635435	ArgumentList	stdout		7634528	1					
ANR	7635436	Argument	stdout		7634528	0					
ANR	7635437	Identifier	stdout		7634528	0					
ANR	7635438	Argument	"""\\t\\tComponents_nb\\n"""		7634528	1					
ANR	7635439	PrimaryExpression	"""\\t\\tComponents_nb\\n"""		7634528	0					
ANR	7635440	ExpressionStatement	"fprintf ( stdout , ""\\t\\tLayers_nb\\n"" )"	176:4:8378:8411	7634528	101	True				
ANR	7635441	CallExpression	"fprintf ( stdout , ""\\t\\tLayers_nb\\n"" )"		7634528	0					
ANR	7635442	Callee	fprintf		7634528	0					
ANR	7635443	Identifier	fprintf		7634528	0					
ANR	7635444	ArgumentList	stdout		7634528	1					
ANR	7635445	Argument	stdout		7634528	0					
ANR	7635446	Identifier	stdout		7634528	0					
ANR	7635447	Argument	"""\\t\\tLayers_nb\\n"""		7634528	1					
ANR	7635448	PrimaryExpression	"""\\t\\tLayers_nb\\n"""		7634528	0					
ANR	7635449	ExpressionStatement	"fprintf ( stdout , ""\\t\\tDecomposition_levels\\n"" )"	177:4:8417:8461	7634528	102	True				
ANR	7635450	CallExpression	"fprintf ( stdout , ""\\t\\tDecomposition_levels\\n"" )"		7634528	0					
ANR	7635451	Callee	fprintf		7634528	0					
ANR	7635452	Identifier	fprintf		7634528	0					
ANR	7635453	ArgumentList	stdout		7634528	1					
ANR	7635454	Argument	stdout		7634528	0					
ANR	7635455	Identifier	stdout		7634528	0					
ANR	7635456	Argument	"""\\t\\tDecomposition_levels\\n"""		7634528	1					
ANR	7635457	PrimaryExpression	"""\\t\\tDecomposition_levels\\n"""		7634528	0					
ANR	7635458	ExpressionStatement	"fprintf ( stdout , ""\\t\\t[Precincts_size_X_res_Nr Precincts_size_Y_res_Nr Precincts_size_Z_res_Nr]\\n\\t  ...\\n"" )"	178:4:8467:8585	7634528	103	True				
ANR	7635459	CallExpression	"fprintf ( stdout , ""\\t\\t[Precincts_size_X_res_Nr Precincts_size_Y_res_Nr Precincts_size_Z_res_Nr]\\n\\t  ...\\n"" )"		7634528	0					
ANR	7635460	Callee	fprintf		7634528	0					
ANR	7635461	Identifier	fprintf		7634528	0					
ANR	7635462	ArgumentList	stdout		7634528	1					
ANR	7635463	Argument	stdout		7634528	0					
ANR	7635464	Identifier	stdout		7634528	0					
ANR	7635465	Argument	"""\\t\\t[Precincts_size_X_res_Nr Precincts_size_Y_res_Nr Precincts_size_Z_res_Nr]\\n\\t  ...\\n"""		7634528	1					
ANR	7635466	PrimaryExpression	"""\\t\\t[Precincts_size_X_res_Nr Precincts_size_Y_res_Nr Precincts_size_Z_res_Nr]\\n\\t  ...\\n"""		7634528	0					
ANR	7635467	ExpressionStatement	"fprintf ( stdout , ""\\t\\t[Precincts_size_X_res_0 Precincts_size_Y_res_0 Precincts_size_Z_res_0]\\n"" )"	180:4:8591:8697	7634528	104	True				
ANR	7635468	CallExpression	"fprintf ( stdout , ""\\t\\t[Precincts_size_X_res_0 Precincts_size_Y_res_0 Precincts_size_Z_res_0]\\n"" )"		7634528	0					
ANR	7635469	Callee	fprintf		7634528	0					
ANR	7635470	Identifier	fprintf		7634528	0					
ANR	7635471	ArgumentList	stdout		7634528	1					
ANR	7635472	Argument	stdout		7634528	0					
ANR	7635473	Identifier	stdout		7634528	0					
ANR	7635474	Argument	"""\\t\\t[Precincts_size_X_res_0 Precincts_size_Y_res_0 Precincts_size_Z_res_0]\\n"""		7634528	1					
ANR	7635475	PrimaryExpression	"""\\t\\t[Precincts_size_X_res_0 Precincts_size_Y_res_0 Precincts_size_Z_res_0]\\n"""		7634528	0					
ANR	7635476	ExpressionStatement	"fprintf ( stdout , ""\\t\\tMain_header_end_position\\n"" )"	182:4:8703:8751	7634528	105	True				
ANR	7635477	CallExpression	"fprintf ( stdout , ""\\t\\tMain_header_end_position\\n"" )"		7634528	0					
ANR	7635478	Callee	fprintf		7634528	0					
ANR	7635479	Identifier	fprintf		7634528	0					
ANR	7635480	ArgumentList	stdout		7634528	1					
ANR	7635481	Argument	stdout		7634528	0					
ANR	7635482	Identifier	stdout		7634528	0					
ANR	7635483	Argument	"""\\t\\tMain_header_end_position\\n"""		7634528	1					
ANR	7635484	PrimaryExpression	"""\\t\\tMain_header_end_position\\n"""		7634528	0					
ANR	7635485	ExpressionStatement	"fprintf ( stdout , ""\\t\\tCodestream_size\\n"" )"	183:4:8757:8796	7634528	106	True				
ANR	7635486	CallExpression	"fprintf ( stdout , ""\\t\\tCodestream_size\\n"" )"		7634528	0					
ANR	7635487	Callee	fprintf		7634528	0					
ANR	7635488	Identifier	fprintf		7634528	0					
ANR	7635489	ArgumentList	stdout		7634528	1					
ANR	7635490	Argument	stdout		7634528	0					
ANR	7635491	Identifier	stdout		7634528	0					
ANR	7635492	Argument	"""\\t\\tCodestream_size\\n"""		7634528	1					
ANR	7635493	PrimaryExpression	"""\\t\\tCodestream_size\\n"""		7634528	0					
ANR	7635494	ExpressionStatement	"fprintf ( stdout , ""\\t\\tTile_0 [start_pos end_header end_pos TotalDisto NumPix MaxMSE]\\n"" )"	184:4:8802:8900	7634528	107	True				
ANR	7635495	CallExpression	"fprintf ( stdout , ""\\t\\tTile_0 [start_pos end_header end_pos TotalDisto NumPix MaxMSE]\\n"" )"		7634528	0					
ANR	7635496	Callee	fprintf		7634528	0					
ANR	7635497	Identifier	fprintf		7634528	0					
ANR	7635498	ArgumentList	stdout		7634528	1					
ANR	7635499	Argument	stdout		7634528	0					
ANR	7635500	Identifier	stdout		7634528	0					
ANR	7635501	Argument	"""\\t\\tTile_0 [start_pos end_header end_pos TotalDisto NumPix MaxMSE]\\n"""		7634528	1					
ANR	7635502	PrimaryExpression	"""\\t\\tTile_0 [start_pos end_header end_pos TotalDisto NumPix MaxMSE]\\n"""		7634528	0					
ANR	7635503	ExpressionStatement	"fprintf ( stdout , ""\\t\\t...\\n"" )"	186:4:8906:8933	7634528	108	True				
ANR	7635504	CallExpression	"fprintf ( stdout , ""\\t\\t...\\n"" )"		7634528	0					
ANR	7635505	Callee	fprintf		7634528	0					
ANR	7635506	Identifier	fprintf		7634528	0					
ANR	7635507	ArgumentList	stdout		7634528	1					
ANR	7635508	Argument	stdout		7634528	0					
ANR	7635509	Identifier	stdout		7634528	0					
ANR	7635510	Argument	"""\\t\\t...\\n"""		7634528	1					
ANR	7635511	PrimaryExpression	"""\\t\\t...\\n"""		7634528	0					
ANR	7635512	ExpressionStatement	"fprintf ( stdout , ""\\t\\tTile_Nt [  ''         ''        ''        ''       ''    ''  ]\\n"" )"	187:4:8939:9037	7634528	109	True				
ANR	7635513	CallExpression	"fprintf ( stdout , ""\\t\\tTile_Nt [  ''         ''        ''        ''       ''    ''  ]\\n"" )"		7634528	0					
ANR	7635514	Callee	fprintf		7634528	0					
ANR	7635515	Identifier	fprintf		7634528	0					
ANR	7635516	ArgumentList	stdout		7634528	1					
ANR	7635517	Argument	stdout		7634528	0					
ANR	7635518	Identifier	stdout		7634528	0					
ANR	7635519	Argument	"""\\t\\tTile_Nt [  ''         ''        ''        ''       ''    ''  ]\\n"""		7634528	1					
ANR	7635520	PrimaryExpression	"""\\t\\tTile_Nt [  ''         ''        ''        ''       ''    ''  ]\\n"""		7634528	0					
ANR	7635521	ExpressionStatement	"fprintf ( stdout , ""\\t  Tpacket_0 [Tile layer res. comp. prec. start_pos end_pos disto]\\n"" )"	189:4:9043:9143	7634528	110	True				
ANR	7635522	CallExpression	"fprintf ( stdout , ""\\t  Tpacket_0 [Tile layer res. comp. prec. start_pos end_pos disto]\\n"" )"		7634528	0					
ANR	7635523	Callee	fprintf		7634528	0					
ANR	7635524	Identifier	fprintf		7634528	0					
ANR	7635525	ArgumentList	stdout		7634528	1					
ANR	7635526	Argument	stdout		7634528	0					
ANR	7635527	Identifier	stdout		7634528	0					
ANR	7635528	Argument	"""\\t  Tpacket_0 [Tile layer res. comp. prec. start_pos end_pos disto]\\n"""		7634528	1					
ANR	7635529	PrimaryExpression	"""\\t  Tpacket_0 [Tile layer res. comp. prec. start_pos end_pos disto]\\n"""		7634528	0					
ANR	7635530	ExpressionStatement	"fprintf ( stdout , ""\\t  ...\\n"" )"	191:4:9149:9177	7634528	111	True				
ANR	7635531	CallExpression	"fprintf ( stdout , ""\\t  ...\\n"" )"		7634528	0					
ANR	7635532	Callee	fprintf		7634528	0					
ANR	7635533	Identifier	fprintf		7634528	0					
ANR	7635534	ArgumentList	stdout		7634528	1					
ANR	7635535	Argument	stdout		7634528	0					
ANR	7635536	Identifier	stdout		7634528	0					
ANR	7635537	Argument	"""\\t  ...\\n"""		7634528	1					
ANR	7635538	PrimaryExpression	"""\\t  ...\\n"""		7634528	0					
ANR	7635539	ExpressionStatement	"fprintf ( stdout , ""\\t  Tpacket_Np [''   ''    ''   ''    ''       ''       ''     '' ]\\n"" )"	192:4:9183:9283	7634528	112	True				
ANR	7635540	CallExpression	"fprintf ( stdout , ""\\t  Tpacket_Np [''   ''    ''   ''    ''       ''       ''     '' ]\\n"" )"		7634528	0					
ANR	7635541	Callee	fprintf		7634528	0					
ANR	7635542	Identifier	fprintf		7634528	0					
ANR	7635543	ArgumentList	stdout		7634528	1					
ANR	7635544	Argument	stdout		7634528	0					
ANR	7635545	Identifier	stdout		7634528	0					
ANR	7635546	Argument	"""\\t  Tpacket_Np [''   ''    ''   ''    ''       ''       ''     '' ]\\n"""		7634528	1					
ANR	7635547	PrimaryExpression	"""\\t  Tpacket_Np [''   ''    ''   ''    ''       ''       ''     '' ]\\n"""		7634528	0					
ANR	7635548	ExpressionStatement	"fprintf ( stdout , ""\\t  MaxDisto\\n"" )"	194:4:9289:9322	7634528	113	True				
ANR	7635549	CallExpression	"fprintf ( stdout , ""\\t  MaxDisto\\n"" )"		7634528	0					
ANR	7635550	Callee	fprintf		7634528	0					
ANR	7635551	Identifier	fprintf		7634528	0					
ANR	7635552	ArgumentList	stdout		7634528	1					
ANR	7635553	Argument	stdout		7634528	0					
ANR	7635554	Identifier	stdout		7634528	0					
ANR	7635555	Argument	"""\\t  MaxDisto\\n"""		7634528	1					
ANR	7635556	PrimaryExpression	"""\\t  MaxDisto\\n"""		7634528	0					
ANR	7635557	ExpressionStatement	"fprintf ( stdout , ""\\t  TotalDisto\\n\\n"" )"	195:4:9328:9365	7634528	114	True				
ANR	7635558	CallExpression	"fprintf ( stdout , ""\\t  TotalDisto\\n\\n"" )"		7634528	0					
ANR	7635559	Callee	fprintf		7634528	0					
ANR	7635560	Identifier	fprintf		7634528	0					
ANR	7635561	ArgumentList	stdout		7634528	1					
ANR	7635562	Argument	stdout		7634528	0					
ANR	7635563	Identifier	stdout		7634528	0					
ANR	7635564	Argument	"""\\t  TotalDisto\\n\\n"""		7634528	1					
ANR	7635565	PrimaryExpression	"""\\t  TotalDisto\\n\\n"""		7634528	0					
ANR	7635566	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	196:4:9371:9392	7634528	115	True				
ANR	7635567	CallExpression	"fprintf ( stdout , ""\\n"" )"		7634528	0					
ANR	7635568	Callee	fprintf		7634528	0					
ANR	7635569	Identifier	fprintf		7634528	0					
ANR	7635570	ArgumentList	stdout		7634528	1					
ANR	7635571	Argument	stdout		7634528	0					
ANR	7635572	Identifier	stdout		7634528	0					
ANR	7635573	Argument	"""\\n"""		7634528	1					
ANR	7635574	PrimaryExpression	"""\\n"""		7634528	0					
ANR	7635575	ReturnType	void		7634528	1					
ANR	7635576	Identifier	encode_help_display		7634528	2					
ANR	7635577	ParameterList			7634528	3					
ANR	7635578	CFGEntryNode	ENTRY		7634528		True				
ANR	7635579	CFGExitNode	EXIT		7634528		True				
ANR	7635580	Symbol	stdout		7634528						
ANR	7635581	Function	give_progression	200:0:9398:9854							
ANR	7635582	FunctionDef	give_progression (char progression [ 4 ])		7635581	0					
ANR	7635583	CompoundStatement		201:0:9451:9854	7635581	0					
ANR	7635584	IfStatement	"if ( strncmp ( progression , ""LRCP"" , 4 ) == 0 )"		7635581	0					
ANR	7635585	Condition	"strncmp ( progression , ""LRCP"" , 4 ) == 0"	202:8:9461:9496	7635581	0	True				
ANR	7635586	EqualityExpression	"strncmp ( progression , ""LRCP"" , 4 ) == 0"		7635581	0		==			
ANR	7635587	CallExpression	"strncmp ( progression , ""LRCP"" , 4 )"		7635581	0					
ANR	7635588	Callee	strncmp		7635581	0					
ANR	7635589	Identifier	strncmp		7635581	0					
ANR	7635590	ArgumentList	progression		7635581	1					
ANR	7635591	Argument	progression		7635581	0					
ANR	7635592	Identifier	progression		7635581	0					
ANR	7635593	Argument	"""LRCP"""		7635581	1					
ANR	7635594	PrimaryExpression	"""LRCP"""		7635581	0					
ANR	7635595	Argument	4		7635581	2					
ANR	7635596	PrimaryExpression	4		7635581	0					
ANR	7635597	PrimaryExpression	0		7635581	1					
ANR	7635598	CompoundStatement		2:46:47:47	7635581	1					
ANR	7635599	ReturnStatement	return LRCP ;	203:8:9509:9520	7635581	0	True				
ANR	7635600	Identifier	LRCP		7635581	0					
ANR	7635601	IfStatement	"if ( strncmp ( progression , ""RLCP"" , 4 ) == 0 )"		7635581	1					
ANR	7635602	Condition	"strncmp ( progression , ""RLCP"" , 4 ) == 0"	205:8:9536:9571	7635581	0	True				
ANR	7635603	EqualityExpression	"strncmp ( progression , ""RLCP"" , 4 ) == 0"		7635581	0		==			
ANR	7635604	CallExpression	"strncmp ( progression , ""RLCP"" , 4 )"		7635581	0					
ANR	7635605	Callee	strncmp		7635581	0					
ANR	7635606	Identifier	strncmp		7635581	0					
ANR	7635607	ArgumentList	progression		7635581	1					
ANR	7635608	Argument	progression		7635581	0					
ANR	7635609	Identifier	progression		7635581	0					
ANR	7635610	Argument	"""RLCP"""		7635581	1					
ANR	7635611	PrimaryExpression	"""RLCP"""		7635581	0					
ANR	7635612	Argument	4		7635581	2					
ANR	7635613	PrimaryExpression	4		7635581	0					
ANR	7635614	PrimaryExpression	0		7635581	1					
ANR	7635615	CompoundStatement		5:46:122:122	7635581	1					
ANR	7635616	ReturnStatement	return RLCP ;	206:8:9584:9595	7635581	0	True				
ANR	7635617	Identifier	RLCP		7635581	0					
ANR	7635618	IfStatement	"if ( strncmp ( progression , ""RPCL"" , 4 ) == 0 )"		7635581	2					
ANR	7635619	Condition	"strncmp ( progression , ""RPCL"" , 4 ) == 0"	208:8:9611:9646	7635581	0	True				
ANR	7635620	EqualityExpression	"strncmp ( progression , ""RPCL"" , 4 ) == 0"		7635581	0		==			
ANR	7635621	CallExpression	"strncmp ( progression , ""RPCL"" , 4 )"		7635581	0					
ANR	7635622	Callee	strncmp		7635581	0					
ANR	7635623	Identifier	strncmp		7635581	0					
ANR	7635624	ArgumentList	progression		7635581	1					
ANR	7635625	Argument	progression		7635581	0					
ANR	7635626	Identifier	progression		7635581	0					
ANR	7635627	Argument	"""RPCL"""		7635581	1					
ANR	7635628	PrimaryExpression	"""RPCL"""		7635581	0					
ANR	7635629	Argument	4		7635581	2					
ANR	7635630	PrimaryExpression	4		7635581	0					
ANR	7635631	PrimaryExpression	0		7635581	1					
ANR	7635632	CompoundStatement		8:46:197:197	7635581	1					
ANR	7635633	ReturnStatement	return RPCL ;	209:8:9659:9670	7635581	0	True				
ANR	7635634	Identifier	RPCL		7635581	0					
ANR	7635635	IfStatement	"if ( strncmp ( progression , ""PCRL"" , 4 ) == 0 )"		7635581	3					
ANR	7635636	Condition	"strncmp ( progression , ""PCRL"" , 4 ) == 0"	211:8:9686:9721	7635581	0	True				
ANR	7635637	EqualityExpression	"strncmp ( progression , ""PCRL"" , 4 ) == 0"		7635581	0		==			
ANR	7635638	CallExpression	"strncmp ( progression , ""PCRL"" , 4 )"		7635581	0					
ANR	7635639	Callee	strncmp		7635581	0					
ANR	7635640	Identifier	strncmp		7635581	0					
ANR	7635641	ArgumentList	progression		7635581	1					
ANR	7635642	Argument	progression		7635581	0					
ANR	7635643	Identifier	progression		7635581	0					
ANR	7635644	Argument	"""PCRL"""		7635581	1					
ANR	7635645	PrimaryExpression	"""PCRL"""		7635581	0					
ANR	7635646	Argument	4		7635581	2					
ANR	7635647	PrimaryExpression	4		7635581	0					
ANR	7635648	PrimaryExpression	0		7635581	1					
ANR	7635649	CompoundStatement		11:46:272:272	7635581	1					
ANR	7635650	ReturnStatement	return PCRL ;	212:8:9734:9745	7635581	0	True				
ANR	7635651	Identifier	PCRL		7635581	0					
ANR	7635652	IfStatement	"if ( strncmp ( progression , ""CPRL"" , 4 ) == 0 )"		7635581	4					
ANR	7635653	Condition	"strncmp ( progression , ""CPRL"" , 4 ) == 0"	214:8:9761:9796	7635581	0	True				
ANR	7635654	EqualityExpression	"strncmp ( progression , ""CPRL"" , 4 ) == 0"		7635581	0		==			
ANR	7635655	CallExpression	"strncmp ( progression , ""CPRL"" , 4 )"		7635581	0					
ANR	7635656	Callee	strncmp		7635581	0					
ANR	7635657	Identifier	strncmp		7635581	0					
ANR	7635658	ArgumentList	progression		7635581	1					
ANR	7635659	Argument	progression		7635581	0					
ANR	7635660	Identifier	progression		7635581	0					
ANR	7635661	Argument	"""CPRL"""		7635581	1					
ANR	7635662	PrimaryExpression	"""CPRL"""		7635581	0					
ANR	7635663	Argument	4		7635581	2					
ANR	7635664	PrimaryExpression	4		7635581	0					
ANR	7635665	PrimaryExpression	0		7635581	1					
ANR	7635666	CompoundStatement		14:46:347:347	7635581	1					
ANR	7635667	ReturnStatement	return CPRL ;	215:8:9809:9820	7635581	0	True				
ANR	7635668	Identifier	CPRL		7635581	0					
ANR	7635669	ReturnStatement	return PROG_UNKNOWN ;	218:4:9833:9852	7635581	5	True				
ANR	7635670	Identifier	PROG_UNKNOWN		7635581	0					
ANR	7635671	ReturnType	OPJ_PROG_ORDER		7635581	1					
ANR	7635672	Identifier	give_progression		7635581	2					
ANR	7635673	ParameterList	char progression [ 4 ]		7635581	3					
ANR	7635674	Parameter	char progression [ 4 ]	200:32:9430:9448	7635581	0	True				
ANR	7635675	ParameterType	char [ 4 ]		7635581	0					
ANR	7635676	Identifier	progression		7635581	1					
ANR	7635677	CFGEntryNode	ENTRY		7635581		True				
ANR	7635678	CFGExitNode	EXIT		7635581		True				
ANR	7635679	Symbol	LRCP		7635581						
ANR	7635680	Symbol	strncmp		7635581						
ANR	7635681	Symbol	RLCP		7635581						
ANR	7635682	Symbol	RPCL		7635581						
ANR	7635683	Symbol	PCRL		7635581						
ANR	7635684	Symbol	CPRL		7635581						
ANR	7635685	Symbol	progression		7635581						
ANR	7635686	Symbol	PROG_UNKNOWN		7635581						
ANR	7635687	Function	give_transform	221:0:9857:10089							
ANR	7635688	FunctionDef	give_transform (char transform [ 4 ])		7635687	0					
ANR	7635689	CompoundStatement		222:0:9905:10089	7635687	0					
ANR	7635690	IfStatement	"if ( strncmp ( transform , ""2DWT"" , 4 ) == 0 )"		7635687	0					
ANR	7635691	Condition	"strncmp ( transform , ""2DWT"" , 4 ) == 0"	223:8:9915:9948	7635687	0	True				
ANR	7635692	EqualityExpression	"strncmp ( transform , ""2DWT"" , 4 ) == 0"		7635687	0		==			
ANR	7635693	CallExpression	"strncmp ( transform , ""2DWT"" , 4 )"		7635687	0					
ANR	7635694	Callee	strncmp		7635687	0					
ANR	7635695	Identifier	strncmp		7635687	0					
ANR	7635696	ArgumentList	transform		7635687	1					
ANR	7635697	Argument	transform		7635687	0					
ANR	7635698	Identifier	transform		7635687	0					
ANR	7635699	Argument	"""2DWT"""		7635687	1					
ANR	7635700	PrimaryExpression	"""2DWT"""		7635687	0					
ANR	7635701	Argument	4		7635687	2					
ANR	7635702	PrimaryExpression	4		7635687	0					
ANR	7635703	PrimaryExpression	0		7635687	1					
ANR	7635704	CompoundStatement		2:44:45:45	7635687	1					
ANR	7635705	ReturnStatement	return TRF_2D_DWT ;	224:8:9961:9978	7635687	0	True				
ANR	7635706	Identifier	TRF_2D_DWT		7635687	0					
ANR	7635707	IfStatement	"if ( strncmp ( transform , ""3DWT"" , 4 ) == 0 )"		7635687	1					
ANR	7635708	Condition	"strncmp ( transform , ""3DWT"" , 4 ) == 0"	226:8:9994:10027	7635687	0	True				
ANR	7635709	EqualityExpression	"strncmp ( transform , ""3DWT"" , 4 ) == 0"		7635687	0		==			
ANR	7635710	CallExpression	"strncmp ( transform , ""3DWT"" , 4 )"		7635687	0					
ANR	7635711	Callee	strncmp		7635687	0					
ANR	7635712	Identifier	strncmp		7635687	0					
ANR	7635713	ArgumentList	transform		7635687	1					
ANR	7635714	Argument	transform		7635687	0					
ANR	7635715	Identifier	transform		7635687	0					
ANR	7635716	Argument	"""3DWT"""		7635687	1					
ANR	7635717	PrimaryExpression	"""3DWT"""		7635687	0					
ANR	7635718	Argument	4		7635687	2					
ANR	7635719	PrimaryExpression	4		7635687	0					
ANR	7635720	PrimaryExpression	0		7635687	1					
ANR	7635721	CompoundStatement		5:44:124:124	7635687	1					
ANR	7635722	ReturnStatement	return TRF_3D_DWT ;	227:8:10040:10057	7635687	0	True				
ANR	7635723	Identifier	TRF_3D_DWT		7635687	0					
ANR	7635724	ReturnStatement	return TRF_UNKNOWN ;	229:4:10069:10087	7635687	2	True				
ANR	7635725	Identifier	TRF_UNKNOWN		7635687	0					
ANR	7635726	ReturnType	OPJ_TRANSFORM		7635687	1					
ANR	7635727	Identifier	give_transform		7635687	2					
ANR	7635728	ParameterList	char transform [ 4 ]		7635687	3					
ANR	7635729	Parameter	char transform [ 4 ]	221:29:9886:9902	7635687	0	True				
ANR	7635730	ParameterType	char [ 4 ]		7635687	0					
ANR	7635731	Identifier	transform		7635687	1					
ANR	7635732	CFGEntryNode	ENTRY		7635687		True				
ANR	7635733	CFGExitNode	EXIT		7635687		True				
ANR	7635734	Symbol	strncmp		7635687						
ANR	7635735	Symbol	transform		7635687						
ANR	7635736	Symbol	TRF_3D_DWT		7635687						
ANR	7635737	Symbol	TRF_2D_DWT		7635687						
ANR	7635738	Symbol	TRF_UNKNOWN		7635687						
ANR	7635739	Function	give_coding	232:0:10092:10467							
ANR	7635740	FunctionDef	give_coding (char coding [ 3 ])		7635739	0					
ANR	7635741	CompoundStatement		233:0:10139:10467	7635739	0					
ANR	7635742	IfStatement	"if ( strncmp ( coding , ""2EB"" , 3 ) == 0 )"		7635739	0					
ANR	7635743	Condition	"strncmp ( coding , ""2EB"" , 3 ) == 0"	235:8:10150:10179	7635739	0	True				
ANR	7635744	EqualityExpression	"strncmp ( coding , ""2EB"" , 3 ) == 0"		7635739	0		==			
ANR	7635745	CallExpression	"strncmp ( coding , ""2EB"" , 3 )"		7635739	0					
ANR	7635746	Callee	strncmp		7635739	0					
ANR	7635747	Identifier	strncmp		7635739	0					
ANR	7635748	ArgumentList	coding		7635739	1					
ANR	7635749	Argument	coding		7635739	0					
ANR	7635750	Identifier	coding		7635739	0					
ANR	7635751	Argument	"""2EB"""		7635739	1					
ANR	7635752	PrimaryExpression	"""2EB"""		7635739	0					
ANR	7635753	Argument	3		7635739	2					
ANR	7635754	PrimaryExpression	3		7635739	0					
ANR	7635755	PrimaryExpression	0		7635739	1					
ANR	7635756	CompoundStatement		3:40:42:42	7635739	1					
ANR	7635757	ReturnStatement	return ENCOD_2EB ;	236:8:10192:10208	7635739	0	True				
ANR	7635758	Identifier	ENCOD_2EB		7635739	0					
ANR	7635759	IfStatement	"if ( strncmp ( coding , ""3EB"" , 3 ) == 0 )"		7635739	1					
ANR	7635760	Condition	"strncmp ( coding , ""3EB"" , 3 ) == 0"	238:8:10224:10253	7635739	0	True				
ANR	7635761	EqualityExpression	"strncmp ( coding , ""3EB"" , 3 ) == 0"		7635739	0		==			
ANR	7635762	CallExpression	"strncmp ( coding , ""3EB"" , 3 )"		7635739	0					
ANR	7635763	Callee	strncmp		7635739	0					
ANR	7635764	Identifier	strncmp		7635739	0					
ANR	7635765	ArgumentList	coding		7635739	1					
ANR	7635766	Argument	coding		7635739	0					
ANR	7635767	Identifier	coding		7635739	0					
ANR	7635768	Argument	"""3EB"""		7635739	1					
ANR	7635769	PrimaryExpression	"""3EB"""		7635739	0					
ANR	7635770	Argument	3		7635739	2					
ANR	7635771	PrimaryExpression	3		7635739	0					
ANR	7635772	PrimaryExpression	0		7635739	1					
ANR	7635773	CompoundStatement		6:40:116:116	7635739	1					
ANR	7635774	ReturnStatement	return ENCOD_3EB ;	239:8:10266:10282	7635739	0	True				
ANR	7635775	Identifier	ENCOD_3EB		7635739	0					
ANR	7635776	ReturnStatement	return ENCOD_UNKNOWN ;	248:4:10445:10465	7635739	2	True				
ANR	7635777	Identifier	ENCOD_UNKNOWN		7635739	0					
ANR	7635778	ReturnType	OPJ_ENTROPY_CODING		7635739	1					
ANR	7635779	Identifier	give_coding		7635739	2					
ANR	7635780	ParameterList	char coding [ 3 ]		7635739	3					
ANR	7635781	Parameter	char coding [ 3 ]	232:31:10123:10136	7635739	0	True				
ANR	7635782	ParameterType	char [ 3 ]		7635739	0					
ANR	7635783	Identifier	coding		7635739	1					
ANR	7635784	CFGEntryNode	ENTRY		7635739		True				
ANR	7635785	CFGExitNode	EXIT		7635739		True				
ANR	7635786	Symbol	coding		7635739						
ANR	7635787	Symbol	strncmp		7635739						
ANR	7635788	Symbol	ENCOD_2EB		7635739						
ANR	7635789	Symbol	ENCOD_3EB		7635739						
ANR	7635790	Symbol	ENCOD_UNKNOWN		7635739						
ANR	7635791	Function	get_file_format	251:0:10470:10967							
ANR	7635792	FunctionDef	get_file_format (char * filename)		7635791	0					
ANR	7635793	CompoundStatement		252:0:10506:10967	7635791	0					
ANR	7635794	IdentifierDeclStatement	int i ;	253:4:10512:10517	7635791	0	True				
ANR	7635795	IdentifierDecl	i		7635791	0					
ANR	7635796	IdentifierDeclType	int		7635791	0					
ANR	7635797	Identifier	i		7635791	1					
ANR	7635798	Statement	static	254:4:10523:10528	7635791	1	True				
ANR	7635799	IdentifierDeclStatement	"const char * extension [ ] = { ""pgx"" , ""bin"" , ""img"" , ""j3d"" , ""jp3d"" , ""j2k"" } ;"	254:11:10530:10599	7635791	2	True				
ANR	7635800	IdentifierDecl	"* extension [ ] = { ""pgx"" , ""bin"" , ""img"" , ""j3d"" , ""jp3d"" , ""j2k"" }"		7635791	0					
ANR	7635801	IdentifierDeclType	const char * [ ]		7635791	0					
ANR	7635802	Identifier	extension		7635791	1					
ANR	7635803	AssignmentExpression	"* extension [ ] = { ""pgx"" , ""bin"" , ""img"" , ""j3d"" , ""jp3d"" , ""j2k"" }"		7635791	2		=			
ANR	7635804	Identifier	extension		7635791	0					
ANR	7635805	InitializerList	"""pgx"""		7635791	1					
ANR	7635806	PrimaryExpression	"""pgx"""		7635791	0					
ANR	7635807	PrimaryExpression	"""bin"""		7635791	1					
ANR	7635808	PrimaryExpression	"""img"""		7635791	2					
ANR	7635809	PrimaryExpression	"""j3d"""		7635791	3					
ANR	7635810	PrimaryExpression	"""jp3d"""		7635791	4					
ANR	7635811	PrimaryExpression	"""j2k"""		7635791	5					
ANR	7635812	Statement	static	255:4:10605:10610	7635791	3	True				
ANR	7635813	IdentifierDeclStatement	"const int format [ ] = { PGX_DFMT , BIN_DFMT , IMG_DFMT , J3D_CFMT , J3D_CFMT , J2K_CFMT } ;"	255:11:10612:10694	7635791	4	True				
ANR	7635814	IdentifierDecl	"format [ ] = { PGX_DFMT , BIN_DFMT , IMG_DFMT , J3D_CFMT , J3D_CFMT , J2K_CFMT }"		7635791	0					
ANR	7635815	IdentifierDeclType	const int [ ]		7635791	0					
ANR	7635816	Identifier	format		7635791	1					
ANR	7635817	AssignmentExpression	"format [ ] = { PGX_DFMT , BIN_DFMT , IMG_DFMT , J3D_CFMT , J3D_CFMT , J2K_CFMT }"		7635791	2		=			
ANR	7635818	Identifier	format		7635791	0					
ANR	7635819	InitializerList	PGX_DFMT		7635791	1					
ANR	7635820	Identifier	PGX_DFMT		7635791	0					
ANR	7635821	Identifier	BIN_DFMT		7635791	1					
ANR	7635822	Identifier	IMG_DFMT		7635791	2					
ANR	7635823	Identifier	J3D_CFMT		7635791	3					
ANR	7635824	Identifier	J3D_CFMT		7635791	4					
ANR	7635825	Identifier	J2K_CFMT		7635791	5					
ANR	7635826	IdentifierDeclStatement	"char * ext = strrchr ( filename , '.' ) ;"	256:4:10700:10735	7635791	5	True				
ANR	7635827	IdentifierDecl	"* ext = strrchr ( filename , '.' )"		7635791	0					
ANR	7635828	IdentifierDeclType	char *		7635791	0					
ANR	7635829	Identifier	ext		7635791	1					
ANR	7635830	AssignmentExpression	"* ext = strrchr ( filename , '.' )"		7635791	2		=			
ANR	7635831	Identifier	ext		7635791	0					
ANR	7635832	CallExpression	"strrchr ( filename , '.' )"		7635791	1					
ANR	7635833	Callee	strrchr		7635791	0					
ANR	7635834	Identifier	strrchr		7635791	0					
ANR	7635835	ArgumentList	filename		7635791	1					
ANR	7635836	Argument	filename		7635791	0					
ANR	7635837	Identifier	filename		7635791	0					
ANR	7635838	Argument	'.'		7635791	1					
ANR	7635839	PrimaryExpression	'.'		7635791	0					
ANR	7635840	IfStatement	if ( ext )		7635791	6					
ANR	7635841	Condition	ext	257:8:10745:10747	7635791	0	True				
ANR	7635842	Identifier	ext		7635791	0					
ANR	7635843	CompoundStatement		6:13:243:243	7635791	1					
ANR	7635844	ExpressionStatement	ext ++	258:8:10760:10765	7635791	0	True				
ANR	7635845	PostIncDecOperationExpression	ext ++		7635791	0					
ANR	7635846	Identifier	ext		7635791	0					
ANR	7635847	IncDec	++		7635791	1					
ANR	7635848	ForStatement	for ( i = 0 ; i < sizeof ( format ) / sizeof ( * format ) ; i ++ )		7635791	1					
ANR	7635849	ForInit	i = 0 ;	259:13:10780:10785	7635791	0	True				
ANR	7635850	AssignmentExpression	i = 0		7635791	0		=			
ANR	7635851	Identifier	i		7635791	0					
ANR	7635852	PrimaryExpression	0		7635791	1					
ANR	7635853	Condition	i < sizeof ( format ) / sizeof ( * format )	259:20:10787:10822	7635791	1	True				
ANR	7635854	RelationalExpression	i < sizeof ( format ) / sizeof ( * format )		7635791	0		<			
ANR	7635855	Identifier	i		7635791	0					
ANR	7635856	MultiplicativeExpression	sizeof ( format ) / sizeof ( * format )		7635791	1		/			
ANR	7635857	SizeofExpression	sizeof ( format )		7635791	0					
ANR	7635858	Sizeof	sizeof		7635791	0					
ANR	7635859	SizeofOperand	format		7635791	1					
ANR	7635860	SizeofExpression	sizeof ( * format )		7635791	1					
ANR	7635861	Sizeof	sizeof		7635791	0					
ANR	7635862	UnaryOperationExpression	* format		7635791	1					
ANR	7635863	UnaryOperator	*		7635791	0					
ANR	7635864	Identifier	format		7635791	1					
ANR	7635865	PostIncDecOperationExpression	i ++	259:58:10825:10827	7635791	2	True				
ANR	7635866	Identifier	i		7635791	0					
ANR	7635867	IncDec	++		7635791	1					
ANR	7635868	CompoundStatement		8:63:323:323	7635791	3					
ANR	7635869	IfStatement	"if ( strnicmp ( ext , extension [ i ] , 3 ) == 0 )"		7635791	0					
ANR	7635870	Condition	"strnicmp ( ext , extension [ i ] , 3 ) == 0"	260:16:10848:10882	7635791	0	True				
ANR	7635871	EqualityExpression	"strnicmp ( ext , extension [ i ] , 3 ) == 0"		7635791	0		==			
ANR	7635872	CallExpression	"strnicmp ( ext , extension [ i ] , 3 )"		7635791	0					
ANR	7635873	Callee	strnicmp		7635791	0					
ANR	7635874	Identifier	strnicmp		7635791	0					
ANR	7635875	ArgumentList	ext		7635791	1					
ANR	7635876	Argument	ext		7635791	0					
ANR	7635877	Identifier	ext		7635791	0					
ANR	7635878	Argument	extension [ i ]		7635791	1					
ANR	7635879	ArrayIndexing	extension [ i ]		7635791	0					
ANR	7635880	Identifier	extension		7635791	0					
ANR	7635881	Identifier	i		7635791	1					
ANR	7635882	Argument	3		7635791	2					
ANR	7635883	PrimaryExpression	3		7635791	0					
ANR	7635884	PrimaryExpression	0		7635791	1					
ANR	7635885	CompoundStatement		9:53:378:378	7635791	1					
ANR	7635886	ReturnStatement	return format [ i ] ;	261:16:10903:10919	7635791	0	True				
ANR	7635887	ArrayIndexing	format [ i ]		7635791	0					
ANR	7635888	Identifier	format		7635791	0					
ANR	7635889	Identifier	i		7635791	1					
ANR	7635890	ReturnStatement	return - 1 ;	266:4:10956:10965	7635791	7	True				
ANR	7635891	UnaryOperationExpression	- 1		7635791	0					
ANR	7635892	UnaryOperator	-		7635791	0					
ANR	7635893	PrimaryExpression	1		7635791	1					
ANR	7635894	ReturnType	int		7635791	1					
ANR	7635895	Identifier	get_file_format		7635791	2					
ANR	7635896	ParameterList	char * filename		7635791	3					
ANR	7635897	Parameter	char * filename	251:20:10490:10503	7635791	0	True				
ANR	7635898	ParameterType	char *		7635791	0					
ANR	7635899	Identifier	filename		7635791	1					
ANR	7635900	CFGEntryNode	ENTRY		7635791		True				
ANR	7635901	CFGExitNode	EXIT		7635791		True				
ANR	7635902	Symbol	ext		7635791						
ANR	7635903	Symbol	extension		7635791						
ANR	7635904	Symbol	J2K_CFMT		7635791						
ANR	7635905	Symbol	format		7635791						
ANR	7635906	Symbol	BIN_DFMT		7635791						
ANR	7635907	Symbol	i		7635791						
ANR	7635908	Symbol	filename		7635791						
ANR	7635909	Symbol	* i		7635791						
ANR	7635910	Symbol	* format		7635791						
ANR	7635911	Symbol	J3D_CFMT		7635791						
ANR	7635912	Symbol	strrchr		7635791						
ANR	7635913	Symbol	* extension		7635791						
ANR	7635914	Symbol	PGX_DFMT		7635791						
ANR	7635915	Symbol	strnicmp		7635791						
ANR	7635916	Symbol	IMG_DFMT		7635791						
ANR	7635917	Function	parse_cmdline_encoder	271:0:11062:31833							
ANR	7635918	FunctionDef	"parse_cmdline_encoder (int argc , char * * argv , opj_cparameters_t * parameters)"		7635917	0					
ANR	7635919	CompoundStatement		272:0:11142:31833	7635917	0					
ANR	7635920	IdentifierDeclStatement	"int i , value ;"	273:4:11148:11160	7635917	0	True				
ANR	7635921	IdentifierDecl	i		7635917	0					
ANR	7635922	IdentifierDeclType	int		7635917	0					
ANR	7635923	Identifier	i		7635917	1					
ANR	7635924	IdentifierDecl	value		7635917	1					
ANR	7635925	IdentifierDeclType	int		7635917	0					
ANR	7635926	Identifier	value		7635917	1					
ANR	7635927	WhileStatement	while ( 1 )		7635917	1					
ANR	7635928	Condition	1	277:11:11208:11208	7635917	0	True				
ANR	7635929	PrimaryExpression	1		7635917	0					
ANR	7635930	CompoundStatement		7:8:78:189	7635917	1					
ANR	7635931	IdentifierDeclStatement	"int c = opj_getopt ( argc , argv , ""i:m:o:r:q:f:t:n:c:b:x:p:s:d:hP:S:E:M:D:R:l:T:C:A:I"" ) ;"	278:8:11221:11332	7635917	0	True				
ANR	7635932	IdentifierDecl	"c = opj_getopt ( argc , argv , ""i:m:o:r:q:f:t:n:c:b:x:p:s:d:hP:S:E:M:D:R:l:T:C:A:I"" )"		7635917	0					
ANR	7635933	IdentifierDeclType	int		7635917	0					
ANR	7635934	Identifier	c		7635917	1					
ANR	7635935	AssignmentExpression	"c = opj_getopt ( argc , argv , ""i:m:o:r:q:f:t:n:c:b:x:p:s:d:hP:S:E:M:D:R:l:T:C:A:I"" )"		7635917	2		=			
ANR	7635936	Identifier	c		7635917	0					
ANR	7635937	CallExpression	"opj_getopt ( argc , argv , ""i:m:o:r:q:f:t:n:c:b:x:p:s:d:hP:S:E:M:D:R:l:T:C:A:I"" )"		7635917	1					
ANR	7635938	Callee	opj_getopt		7635917	0					
ANR	7635939	Identifier	opj_getopt		7635917	0					
ANR	7635940	ArgumentList	argc		7635917	1					
ANR	7635941	Argument	argc		7635917	0					
ANR	7635942	Identifier	argc		7635917	0					
ANR	7635943	Argument	argv		7635917	1					
ANR	7635944	Identifier	argv		7635917	0					
ANR	7635945	Argument	"""i:m:o:r:q:f:t:n:c:b:x:p:s:d:hP:S:E:M:D:R:l:T:C:A:I"""		7635917	2					
ANR	7635946	PrimaryExpression	"""i:m:o:r:q:f:t:n:c:b:x:p:s:d:hP:S:E:M:D:R:l:T:C:A:I"""		7635917	0					
ANR	7635947	IfStatement	if ( c == - 1 )		7635917	1					
ANR	7635948	Condition	c == - 1	280:12:11346:11352	7635917	0	True				
ANR	7635949	EqualityExpression	c == - 1		7635917	0		==			
ANR	7635950	Identifier	c		7635917	0					
ANR	7635951	UnaryOperationExpression	- 1		7635917	1					
ANR	7635952	UnaryOperator	-		7635917	0					
ANR	7635953	PrimaryExpression	1		7635917	1					
ANR	7635954	CompoundStatement		9:21:212:212	7635917	1					
ANR	7635955	BreakStatement	break ;	281:12:11369:11374	7635917	0	True				
ANR	7635956	SwitchStatement	switch ( c )		7635917	2					
ANR	7635957	Condition	c	283:16:11402:11402	7635917	0	True				
ANR	7635958	Identifier	c		7635917	0					
ANR	7635959	CompoundStatement		12:19:262:262	7635917	1					
ANR	7635960	Label	case 'i' :	284:8:11415:11423	7635917	0	True				
ANR	7635961	CompoundStatement		14:12:321:346	7635917	1					
ANR	7635962	IdentifierDeclStatement	char * infile = opj_optarg ;	285:12:11464:11489	7635917	0	True				
ANR	7635963	IdentifierDecl	* infile = opj_optarg		7635917	0					
ANR	7635964	IdentifierDeclType	char *		7635917	0					
ANR	7635965	Identifier	infile		7635917	1					
ANR	7635966	AssignmentExpression	* infile = opj_optarg		7635917	2		=			
ANR	7635967	Identifier	opj_optarg		7635917	0					
ANR	7635968	Identifier	opj_optarg		7635917	1					
ANR	7635969	ExpressionStatement	parameters -> decod_format = get_file_format ( infile )	286:12:11503:11553	7635917	1	True				
ANR	7635970	AssignmentExpression	parameters -> decod_format = get_file_format ( infile )		7635917	0		=			
ANR	7635971	PtrMemberAccess	parameters -> decod_format		7635917	0					
ANR	7635972	Identifier	parameters		7635917	0					
ANR	7635973	Identifier	decod_format		7635917	1					
ANR	7635974	CallExpression	get_file_format ( infile )		7635917	1					
ANR	7635975	Callee	get_file_format		7635917	0					
ANR	7635976	Identifier	get_file_format		7635917	0					
ANR	7635977	ArgumentList	infile		7635917	1					
ANR	7635978	Argument	infile		7635917	0					
ANR	7635979	Identifier	infile		7635917	0					
ANR	7635980	SwitchStatement	switch ( parameters -> decod_format )		7635917	2					
ANR	7635981	Condition	parameters -> decod_format	287:20:11575:11598	7635917	0	True				
ANR	7635982	PtrMemberAccess	parameters -> decod_format		7635917	0					
ANR	7635983	Identifier	parameters		7635917	0					
ANR	7635984	Identifier	decod_format		7635917	1					
ANR	7635985	CompoundStatement		16:46:458:458	7635917	1					
ANR	7635986	Label	case PGX_DFMT :	288:12:11615:11628	7635917	0	True				
ANR	7635987	Identifier	PGX_DFMT		7635917	0					
ANR	7635988	Label	case BIN_DFMT :	289:12:11642:11655	7635917	1	True				
ANR	7635989	Identifier	BIN_DFMT		7635917	0					
ANR	7635990	Label	case IMG_DFMT :	290:12:11669:11682	7635917	2	True				
ANR	7635991	Identifier	IMG_DFMT		7635917	0					
ANR	7635992	BreakStatement	break ;	291:16:11700:11705	7635917	3	True				
ANR	7635993	Label	default :	292:12:11719:11726	7635917	4	True				
ANR	7635994	Identifier	default		7635917	0					
ANR	7635995	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unrecognized format for infile : %s [accept only *.pgx or *.bin] !!\\n\\n"" , infile )"	293:16:11744:11898	7635917	5	True				
ANR	7635996	CallExpression	"fprintf ( stdout , ""[ERROR] Unrecognized format for infile : %s [accept only *.pgx or *.bin] !!\\n\\n"" , infile )"		7635917	0					
ANR	7635997	Callee	fprintf		7635917	0					
ANR	7635998	Identifier	fprintf		7635917	0					
ANR	7635999	ArgumentList	stdout		7635917	1					
ANR	7636000	Argument	stdout		7635917	0					
ANR	7636001	Identifier	stdout		7635917	0					
ANR	7636002	Argument	"""[ERROR] Unrecognized format for infile : %s [accept only *.pgx or *.bin] !!\\n\\n"""		7635917	1					
ANR	7636003	PrimaryExpression	"""[ERROR] Unrecognized format for infile : %s [accept only *.pgx or *.bin] !!\\n\\n"""		7635917	0					
ANR	7636004	Argument	infile		7635917	2					
ANR	7636005	Identifier	infile		7635917	0					
ANR	7636006	ReturnStatement	return 1 ;	296:16:11916:11924	7635917	6	True				
ANR	7636007	PrimaryExpression	1		7635917	0					
ANR	7636008	BreakStatement	break ;	297:16:11942:11947	7635917	7	True				
ANR	7636009	ExpressionStatement	"strncpy ( parameters -> infile , infile , MAX_PATH )"	299:12:11975:12020	7635917	3	True				
ANR	7636010	CallExpression	"strncpy ( parameters -> infile , infile , MAX_PATH )"		7635917	0					
ANR	7636011	Callee	strncpy		7635917	0					
ANR	7636012	Identifier	strncpy		7635917	0					
ANR	7636013	ArgumentList	parameters -> infile		7635917	1					
ANR	7636014	Argument	parameters -> infile		7635917	0					
ANR	7636015	PtrMemberAccess	parameters -> infile		7635917	0					
ANR	7636016	Identifier	parameters		7635917	0					
ANR	7636017	Identifier	infile		7635917	1					
ANR	7636018	Argument	infile		7635917	1					
ANR	7636019	Identifier	infile		7635917	0					
ANR	7636020	Argument	MAX_PATH		7635917	2					
ANR	7636021	Identifier	MAX_PATH		7635917	0					
ANR	7636022	ExpressionStatement	"fprintf ( stdout , ""[INFO] Infile: %s \\n"" , parameters -> infile )"	300:12:12034:12093	7635917	4	True				
ANR	7636023	CallExpression	"fprintf ( stdout , ""[INFO] Infile: %s \\n"" , parameters -> infile )"		7635917	0					
ANR	7636024	Callee	fprintf		7635917	0					
ANR	7636025	Identifier	fprintf		7635917	0					
ANR	7636026	ArgumentList	stdout		7635917	1					
ANR	7636027	Argument	stdout		7635917	0					
ANR	7636028	Identifier	stdout		7635917	0					
ANR	7636029	Argument	"""[INFO] Infile: %s \\n"""		7635917	1					
ANR	7636030	PrimaryExpression	"""[INFO] Infile: %s \\n"""		7635917	0					
ANR	7636031	Argument	parameters -> infile		7635917	2					
ANR	7636032	PtrMemberAccess	parameters -> infile		7635917	0					
ANR	7636033	Identifier	parameters		7635917	0					
ANR	7636034	Identifier	infile		7635917	1					
ANR	7636035	BreakStatement	break ;	303:8:12114:12119	7635917	2	True				
ANR	7636036	Label	case 'm' :	306:8:12198:12206	7635917	3	True				
ANR	7636037	CompoundStatement		37:12:1148:1188	7635917	4					
ANR	7636038	IdentifierDeclStatement	char * imgfile = opj_optarg ;	307:12:12251:12277	7635917	0	True				
ANR	7636039	IdentifierDecl	* imgfile = opj_optarg		7635917	0					
ANR	7636040	IdentifierDeclType	char *		7635917	0					
ANR	7636041	Identifier	imgfile		7635917	1					
ANR	7636042	AssignmentExpression	* imgfile = opj_optarg		7635917	2		=			
ANR	7636043	Identifier	opj_optarg		7635917	0					
ANR	7636044	Identifier	opj_optarg		7635917	1					
ANR	7636045	IdentifierDeclStatement	int imgformat = get_file_format ( imgfile ) ;	308:12:12291:12331	7635917	1	True				
ANR	7636046	IdentifierDecl	imgformat = get_file_format ( imgfile )		7635917	0					
ANR	7636047	IdentifierDeclType	int		7635917	0					
ANR	7636048	Identifier	imgformat		7635917	1					
ANR	7636049	AssignmentExpression	imgformat = get_file_format ( imgfile )		7635917	2		=			
ANR	7636050	Identifier	imgformat		7635917	0					
ANR	7636051	CallExpression	get_file_format ( imgfile )		7635917	1					
ANR	7636052	Callee	get_file_format		7635917	0					
ANR	7636053	Identifier	get_file_format		7635917	0					
ANR	7636054	ArgumentList	imgfile		7635917	1					
ANR	7636055	Argument	imgfile		7635917	0					
ANR	7636056	Identifier	imgfile		7635917	0					
ANR	7636057	SwitchStatement	switch ( imgformat )		7635917	2					
ANR	7636058	Condition	imgformat	309:20:12353:12361	7635917	0	True				
ANR	7636059	Identifier	imgformat		7635917	0					
ANR	7636060	CompoundStatement		38:31:1221:1221	7635917	1					
ANR	7636061	Label	case IMG_DFMT :	310:12:12378:12391	7635917	0	True				
ANR	7636062	Identifier	IMG_DFMT		7635917	0					
ANR	7636063	BreakStatement	break ;	311:16:12409:12414	7635917	1	True				
ANR	7636064	Label	default :	312:12:12428:12435	7635917	2	True				
ANR	7636065	Identifier	default		7635917	0					
ANR	7636066	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unrecognized format for imgfile : %s [accept only *.img] !!\\n\\n"" , imgfile )"	313:16:12453:12600	7635917	3	True				
ANR	7636067	CallExpression	"fprintf ( stdout , ""[ERROR] Unrecognized format for imgfile : %s [accept only *.img] !!\\n\\n"" , imgfile )"		7635917	0					
ANR	7636068	Callee	fprintf		7635917	0					
ANR	7636069	Identifier	fprintf		7635917	0					
ANR	7636070	ArgumentList	stdout		7635917	1					
ANR	7636071	Argument	stdout		7635917	0					
ANR	7636072	Identifier	stdout		7635917	0					
ANR	7636073	Argument	"""[ERROR] Unrecognized format for imgfile : %s [accept only *.img] !!\\n\\n"""		7635917	1					
ANR	7636074	PrimaryExpression	"""[ERROR] Unrecognized format for imgfile : %s [accept only *.img] !!\\n\\n"""		7635917	0					
ANR	7636075	Argument	imgfile		7635917	2					
ANR	7636076	Identifier	imgfile		7635917	0					
ANR	7636077	ReturnStatement	return 1 ;	316:16:12618:12626	7635917	4	True				
ANR	7636078	PrimaryExpression	1		7635917	0					
ANR	7636079	BreakStatement	break ;	317:16:12644:12649	7635917	5	True				
ANR	7636080	ExpressionStatement	"strncpy ( parameters -> imgfile , imgfile , MAX_PATH )"	319:12:12677:12724	7635917	3	True				
ANR	7636081	CallExpression	"strncpy ( parameters -> imgfile , imgfile , MAX_PATH )"		7635917	0					
ANR	7636082	Callee	strncpy		7635917	0					
ANR	7636083	Identifier	strncpy		7635917	0					
ANR	7636084	ArgumentList	parameters -> imgfile		7635917	1					
ANR	7636085	Argument	parameters -> imgfile		7635917	0					
ANR	7636086	PtrMemberAccess	parameters -> imgfile		7635917	0					
ANR	7636087	Identifier	parameters		7635917	0					
ANR	7636088	Identifier	imgfile		7635917	1					
ANR	7636089	Argument	imgfile		7635917	1					
ANR	7636090	Identifier	imgfile		7635917	0					
ANR	7636091	Argument	MAX_PATH		7635917	2					
ANR	7636092	Identifier	MAX_PATH		7635917	0					
ANR	7636093	ExpressionStatement	"fprintf ( stdout , ""[INFO] Imgfile: %s Format: %d\\n"" , parameters -> imgfile , imgformat )"	320:12:12738:12840	7635917	4	True				
ANR	7636094	CallExpression	"fprintf ( stdout , ""[INFO] Imgfile: %s Format: %d\\n"" , parameters -> imgfile , imgformat )"		7635917	0					
ANR	7636095	Callee	fprintf		7635917	0					
ANR	7636096	Identifier	fprintf		7635917	0					
ANR	7636097	ArgumentList	stdout		7635917	1					
ANR	7636098	Argument	stdout		7635917	0					
ANR	7636099	Identifier	stdout		7635917	0					
ANR	7636100	Argument	"""[INFO] Imgfile: %s Format: %d\\n"""		7635917	1					
ANR	7636101	PrimaryExpression	"""[INFO] Imgfile: %s Format: %d\\n"""		7635917	0					
ANR	7636102	Argument	parameters -> imgfile		7635917	2					
ANR	7636103	PtrMemberAccess	parameters -> imgfile		7635917	0					
ANR	7636104	Identifier	parameters		7635917	0					
ANR	7636105	Identifier	imgfile		7635917	1					
ANR	7636106	Argument	imgformat		7635917	3					
ANR	7636107	Identifier	imgformat		7635917	0					
ANR	7636108	BreakStatement	break ;	323:8:12860:12865	7635917	5	True				
ANR	7636109	Label	case 'o' :	326:8:12944:12952	7635917	6	True				
ANR	7636110	CompoundStatement		56:12:1851:1877	7635917	7					
ANR	7636111	IdentifierDeclStatement	char * outfile = opj_optarg ;	327:12:12994:13020	7635917	0	True				
ANR	7636112	IdentifierDecl	* outfile = opj_optarg		7635917	0					
ANR	7636113	IdentifierDeclType	char *		7635917	0					
ANR	7636114	Identifier	outfile		7635917	1					
ANR	7636115	AssignmentExpression	* outfile = opj_optarg		7635917	2		=			
ANR	7636116	Identifier	opj_optarg		7635917	0					
ANR	7636117	Identifier	opj_optarg		7635917	1					
ANR	7636118	ExpressionStatement	parameters -> cod_format = get_file_format ( outfile )	328:12:13034:13083	7635917	1	True				
ANR	7636119	AssignmentExpression	parameters -> cod_format = get_file_format ( outfile )		7635917	0		=			
ANR	7636120	PtrMemberAccess	parameters -> cod_format		7635917	0					
ANR	7636121	Identifier	parameters		7635917	0					
ANR	7636122	Identifier	cod_format		7635917	1					
ANR	7636123	CallExpression	get_file_format ( outfile )		7635917	1					
ANR	7636124	Callee	get_file_format		7635917	0					
ANR	7636125	Identifier	get_file_format		7635917	0					
ANR	7636126	ArgumentList	outfile		7635917	1					
ANR	7636127	Argument	outfile		7635917	0					
ANR	7636128	Identifier	outfile		7635917	0					
ANR	7636129	SwitchStatement	switch ( parameters -> cod_format )		7635917	2					
ANR	7636130	Condition	parameters -> cod_format	329:20:13105:13126	7635917	0	True				
ANR	7636131	PtrMemberAccess	parameters -> cod_format		7635917	0					
ANR	7636132	Identifier	parameters		7635917	0					
ANR	7636133	Identifier	cod_format		7635917	1					
ANR	7636134	CompoundStatement		58:44:1986:1986	7635917	1					
ANR	7636135	Label	case J3D_CFMT :	330:12:13143:13156	7635917	0	True				
ANR	7636136	Identifier	J3D_CFMT		7635917	0					
ANR	7636137	Label	case J2K_CFMT :	331:12:13170:13183	7635917	1	True				
ANR	7636138	Identifier	J2K_CFMT		7635917	0					
ANR	7636139	Label	case LSE_CFMT :	332:12:13197:13210	7635917	2	True				
ANR	7636140	Identifier	LSE_CFMT		7635917	0					
ANR	7636141	BreakStatement	break ;	333:16:13228:13233	7635917	3	True				
ANR	7636142	Label	default :	334:12:13247:13254	7635917	4	True				
ANR	7636143	Identifier	default		7635917	0					
ANR	7636144	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unknown output format volume %s [only *.j2k, *.lse3d or *.jp3d]!! \\n"" , outfile )"	335:16:13272:13424	7635917	5	True				
ANR	7636145	CallExpression	"fprintf ( stdout , ""[ERROR] Unknown output format volume %s [only *.j2k, *.lse3d or *.jp3d]!! \\n"" , outfile )"		7635917	0					
ANR	7636146	Callee	fprintf		7635917	0					
ANR	7636147	Identifier	fprintf		7635917	0					
ANR	7636148	ArgumentList	stdout		7635917	1					
ANR	7636149	Argument	stdout		7635917	0					
ANR	7636150	Identifier	stdout		7635917	0					
ANR	7636151	Argument	"""[ERROR] Unknown output format volume %s [only *.j2k, *.lse3d or *.jp3d]!! \\n"""		7635917	1					
ANR	7636152	PrimaryExpression	"""[ERROR] Unknown output format volume %s [only *.j2k, *.lse3d or *.jp3d]!! \\n"""		7635917	0					
ANR	7636153	Argument	outfile		7635917	2					
ANR	7636154	Identifier	outfile		7635917	0					
ANR	7636155	ReturnStatement	return 1 ;	338:16:13442:13450	7635917	6	True				
ANR	7636156	PrimaryExpression	1		7635917	0					
ANR	7636157	BreakStatement	break ;	339:16:13468:13473	7635917	7	True				
ANR	7636158	ExpressionStatement	"strncpy ( parameters -> outfile , outfile , MAX_PATH )"	341:12:13501:13548	7635917	3	True				
ANR	7636159	CallExpression	"strncpy ( parameters -> outfile , outfile , MAX_PATH )"		7635917	0					
ANR	7636160	Callee	strncpy		7635917	0					
ANR	7636161	Identifier	strncpy		7635917	0					
ANR	7636162	ArgumentList	parameters -> outfile		7635917	1					
ANR	7636163	Argument	parameters -> outfile		7635917	0					
ANR	7636164	PtrMemberAccess	parameters -> outfile		7635917	0					
ANR	7636165	Identifier	parameters		7635917	0					
ANR	7636166	Identifier	outfile		7635917	1					
ANR	7636167	Argument	outfile		7635917	1					
ANR	7636168	Identifier	outfile		7635917	0					
ANR	7636169	Argument	MAX_PATH		7635917	2					
ANR	7636170	Identifier	MAX_PATH		7635917	0					
ANR	7636171	ExpressionStatement	"fprintf ( stdout , ""[INFO] Outfile: %s \\n"" , parameters -> outfile )"	342:12:13562:13623	7635917	4	True				
ANR	7636172	CallExpression	"fprintf ( stdout , ""[INFO] Outfile: %s \\n"" , parameters -> outfile )"		7635917	0					
ANR	7636173	Callee	fprintf		7635917	0					
ANR	7636174	Identifier	fprintf		7635917	0					
ANR	7636175	ArgumentList	stdout		7635917	1					
ANR	7636176	Argument	stdout		7635917	0					
ANR	7636177	Identifier	stdout		7635917	0					
ANR	7636178	Argument	"""[INFO] Outfile: %s \\n"""		7635917	1					
ANR	7636179	PrimaryExpression	"""[INFO] Outfile: %s \\n"""		7635917	0					
ANR	7636180	Argument	parameters -> outfile		7635917	2					
ANR	7636181	PtrMemberAccess	parameters -> outfile		7635917	0					
ANR	7636182	Identifier	parameters		7635917	0					
ANR	7636183	Identifier	outfile		7635917	1					
ANR	7636184	BreakStatement	break ;	344:8:13643:13648	7635917	8	True				
ANR	7636185	Label	case 'r' :	348:8:13728:13736	7635917	9	True				
ANR	7636186	CompoundStatement		78:12:2663:2683	7635917	10					
ANR	7636187	IdentifierDeclStatement	char * s = opj_optarg ;	349:12:13806:13826	7635917	0	True				
ANR	7636188	IdentifierDecl	* s = opj_optarg		7635917	0					
ANR	7636189	IdentifierDeclType	char *		7635917	0					
ANR	7636190	Identifier	s		7635917	1					
ANR	7636191	AssignmentExpression	* s = opj_optarg		7635917	2		=			
ANR	7636192	Identifier	opj_optarg		7635917	0					
ANR	7636193	Identifier	opj_optarg		7635917	1					
ANR	7636194	WhileStatement	"while ( sscanf ( s , ""%f"" , & parameters -> tcp_rates [ parameters -> tcp_numlayers ] ) == 1 )"		7635917	1					
ANR	7636195	Condition	"sscanf ( s , ""%f"" , & parameters -> tcp_rates [ parameters -> tcp_numlayers ] ) == 1"	350:19:13847:13937	7635917	0	True				
ANR	7636196	EqualityExpression	"sscanf ( s , ""%f"" , & parameters -> tcp_rates [ parameters -> tcp_numlayers ] ) == 1"		7635917	0		==			
ANR	7636197	CallExpression	"sscanf ( s , ""%f"" , & parameters -> tcp_rates [ parameters -> tcp_numlayers ] )"		7635917	0					
ANR	7636198	Callee	sscanf		7635917	0					
ANR	7636199	Identifier	sscanf		7635917	0					
ANR	7636200	ArgumentList	s		7635917	1					
ANR	7636201	Argument	s		7635917	0					
ANR	7636202	Identifier	s		7635917	0					
ANR	7636203	Argument	"""%f"""		7635917	1					
ANR	7636204	PrimaryExpression	"""%f"""		7635917	0					
ANR	7636205	Argument	& parameters -> tcp_rates [ parameters -> tcp_numlayers ]		7635917	2					
ANR	7636206	UnaryOperationExpression	& parameters -> tcp_rates [ parameters -> tcp_numlayers ]		7635917	0					
ANR	7636207	UnaryOperator	&		7635917	0					
ANR	7636208	ArrayIndexing	parameters -> tcp_rates [ parameters -> tcp_numlayers ]		7635917	1					
ANR	7636209	PtrMemberAccess	parameters -> tcp_rates		7635917	0					
ANR	7636210	Identifier	parameters		7635917	0					
ANR	7636211	Identifier	tcp_rates		7635917	1					
ANR	7636212	PtrMemberAccess	parameters -> tcp_numlayers		7635917	1					
ANR	7636213	Identifier	parameters		7635917	0					
ANR	7636214	Identifier	tcp_numlayers		7635917	1					
ANR	7636215	PrimaryExpression	1		7635917	1					
ANR	7636216	CompoundStatement		80:23:2797:2797	7635917	1					
ANR	7636217	ExpressionStatement	parameters -> tcp_numlayers ++	352:16:13958:13985	7635917	0	True				
ANR	7636218	PostIncDecOperationExpression	parameters -> tcp_numlayers ++		7635917	0					
ANR	7636219	PtrMemberAccess	parameters -> tcp_numlayers		7635917	0					
ANR	7636220	Identifier	parameters		7635917	0					
ANR	7636221	Identifier	tcp_numlayers		7635917	1					
ANR	7636222	IncDec	++		7635917	1					
ANR	7636223	WhileStatement	"while ( * s && * s != ',' )"		7635917	1					
ANR	7636224	Condition	"* s && * s != ','"	353:23:14010:14024	7635917	0	True				
ANR	7636225	AndExpression	"* s && * s != ','"		7635917	0		&&			
ANR	7636226	UnaryOperationExpression	* s		7635917	0					
ANR	7636227	UnaryOperator	*		7635917	0					
ANR	7636228	Identifier	s		7635917	1					
ANR	7636229	EqualityExpression	"* s != ','"		7635917	1		!=			
ANR	7636230	UnaryOperationExpression	* s		7635917	0					
ANR	7636231	UnaryOperator	*		7635917	0					
ANR	7636232	Identifier	s		7635917	1					
ANR	7636233	PrimaryExpression	"','"		7635917	1					
ANR	7636234	CompoundStatement		82:40:2884:2884	7635917	1					
ANR	7636235	ExpressionStatement	s ++	354:20:14049:14052	7635917	0	True				
ANR	7636236	PostIncDecOperationExpression	s ++		7635917	0					
ANR	7636237	Identifier	s		7635917	0					
ANR	7636238	IncDec	++		7635917	1					
ANR	7636239	IfStatement	if ( ! * s )		7635917	2					
ANR	7636240	Condition	! * s	356:20:14092:14094	7635917	0	True				
ANR	7636241	UnaryOperationExpression	! * s		7635917	0					
ANR	7636242	UnaryOperator	!		7635917	0					
ANR	7636243	UnaryOperationExpression	* s		7635917	1					
ANR	7636244	UnaryOperator	*		7635917	0					
ANR	7636245	Identifier	s		7635917	1					
ANR	7636246	CompoundStatement		85:25:2954:2954	7635917	1					
ANR	7636247	BreakStatement	break ;	357:20:14119:14124	7635917	0	True				
ANR	7636248	ExpressionStatement	s ++	359:16:14160:14163	7635917	3	True				
ANR	7636249	PostIncDecOperationExpression	s ++		7635917	0					
ANR	7636250	Identifier	s		7635917	0					
ANR	7636251	IncDec	++		7635917	1					
ANR	7636252	ExpressionStatement	parameters -> cp_disto_alloc = 1	361:12:14191:14221	7635917	2	True				
ANR	7636253	AssignmentExpression	parameters -> cp_disto_alloc = 1		7635917	0		=			
ANR	7636254	PtrMemberAccess	parameters -> cp_disto_alloc		7635917	0					
ANR	7636255	Identifier	parameters		7635917	0					
ANR	7636256	Identifier	cp_disto_alloc		7635917	1					
ANR	7636257	PrimaryExpression	1		7635917	1					
ANR	7636258	BreakStatement	break ;	363:8:14241:14246	7635917	11	True				
ANR	7636259	Label	case 'q' :	367:8:14326:14334	7635917	12	True				
ANR	7636260	CompoundStatement		97:12:3261:3281	7635917	13					
ANR	7636261	IdentifierDeclStatement	char * s = opj_optarg ;	368:12:14404:14424	7635917	0	True				
ANR	7636262	IdentifierDecl	* s = opj_optarg		7635917	0					
ANR	7636263	IdentifierDeclType	char *		7635917	0					
ANR	7636264	Identifier	s		7635917	1					
ANR	7636265	AssignmentExpression	* s = opj_optarg		7635917	2		=			
ANR	7636266	Identifier	opj_optarg		7635917	0					
ANR	7636267	Identifier	opj_optarg		7635917	1					
ANR	7636268	WhileStatement	"while ( sscanf ( s , ""%f"" , & parameters -> tcp_distoratio [ parameters -> tcp_numlayers ] ) == 1 )"		7635917	1					
ANR	7636269	Condition	"sscanf ( s , ""%f"" , & parameters -> tcp_distoratio [ parameters -> tcp_numlayers ] ) == 1"	369:19:14445:14540	7635917	0	True				
ANR	7636270	EqualityExpression	"sscanf ( s , ""%f"" , & parameters -> tcp_distoratio [ parameters -> tcp_numlayers ] ) == 1"		7635917	0		==			
ANR	7636271	CallExpression	"sscanf ( s , ""%f"" , & parameters -> tcp_distoratio [ parameters -> tcp_numlayers ] )"		7635917	0					
ANR	7636272	Callee	sscanf		7635917	0					
ANR	7636273	Identifier	sscanf		7635917	0					
ANR	7636274	ArgumentList	s		7635917	1					
ANR	7636275	Argument	s		7635917	0					
ANR	7636276	Identifier	s		7635917	0					
ANR	7636277	Argument	"""%f"""		7635917	1					
ANR	7636278	PrimaryExpression	"""%f"""		7635917	0					
ANR	7636279	Argument	& parameters -> tcp_distoratio [ parameters -> tcp_numlayers ]		7635917	2					
ANR	7636280	UnaryOperationExpression	& parameters -> tcp_distoratio [ parameters -> tcp_numlayers ]		7635917	0					
ANR	7636281	UnaryOperator	&		7635917	0					
ANR	7636282	ArrayIndexing	parameters -> tcp_distoratio [ parameters -> tcp_numlayers ]		7635917	1					
ANR	7636283	PtrMemberAccess	parameters -> tcp_distoratio		7635917	0					
ANR	7636284	Identifier	parameters		7635917	0					
ANR	7636285	Identifier	tcp_distoratio		7635917	1					
ANR	7636286	PtrMemberAccess	parameters -> tcp_numlayers		7635917	1					
ANR	7636287	Identifier	parameters		7635917	0					
ANR	7636288	Identifier	tcp_numlayers		7635917	1					
ANR	7636289	PrimaryExpression	1		7635917	1					
ANR	7636290	CompoundStatement		99:26:3400:3400	7635917	1					
ANR	7636291	ExpressionStatement	parameters -> tcp_numlayers ++	371:16:14561:14588	7635917	0	True				
ANR	7636292	PostIncDecOperationExpression	parameters -> tcp_numlayers ++		7635917	0					
ANR	7636293	PtrMemberAccess	parameters -> tcp_numlayers		7635917	0					
ANR	7636294	Identifier	parameters		7635917	0					
ANR	7636295	Identifier	tcp_numlayers		7635917	1					
ANR	7636296	IncDec	++		7635917	1					
ANR	7636297	WhileStatement	"while ( * s && * s != ',' )"		7635917	1					
ANR	7636298	Condition	"* s && * s != ','"	372:23:14613:14627	7635917	0	True				
ANR	7636299	AndExpression	"* s && * s != ','"		7635917	0		&&			
ANR	7636300	UnaryOperationExpression	* s		7635917	0					
ANR	7636301	UnaryOperator	*		7635917	0					
ANR	7636302	Identifier	s		7635917	1					
ANR	7636303	EqualityExpression	"* s != ','"		7635917	1		!=			
ANR	7636304	UnaryOperationExpression	* s		7635917	0					
ANR	7636305	UnaryOperator	*		7635917	0					
ANR	7636306	Identifier	s		7635917	1					
ANR	7636307	PrimaryExpression	"','"		7635917	1					
ANR	7636308	CompoundStatement		101:40:3487:3487	7635917	1					
ANR	7636309	ExpressionStatement	s ++	373:20:14652:14655	7635917	0	True				
ANR	7636310	PostIncDecOperationExpression	s ++		7635917	0					
ANR	7636311	Identifier	s		7635917	0					
ANR	7636312	IncDec	++		7635917	1					
ANR	7636313	IfStatement	if ( ! * s )		7635917	2					
ANR	7636314	Condition	! * s	375:20:14695:14697	7635917	0	True				
ANR	7636315	UnaryOperationExpression	! * s		7635917	0					
ANR	7636316	UnaryOperator	!		7635917	0					
ANR	7636317	UnaryOperationExpression	* s		7635917	1					
ANR	7636318	UnaryOperator	*		7635917	0					
ANR	7636319	Identifier	s		7635917	1					
ANR	7636320	CompoundStatement		104:25:3557:3557	7635917	1					
ANR	7636321	BreakStatement	break ;	376:20:14722:14727	7635917	0	True				
ANR	7636322	ExpressionStatement	s ++	378:16:14763:14766	7635917	3	True				
ANR	7636323	PostIncDecOperationExpression	s ++		7635917	0					
ANR	7636324	Identifier	s		7635917	0					
ANR	7636325	IncDec	++		7635917	1					
ANR	7636326	ExpressionStatement	parameters -> cp_fixed_quality = 1	380:12:14794:14826	7635917	2	True				
ANR	7636327	AssignmentExpression	parameters -> cp_fixed_quality = 1		7635917	0		=			
ANR	7636328	PtrMemberAccess	parameters -> cp_fixed_quality		7635917	0					
ANR	7636329	Identifier	parameters		7635917	0					
ANR	7636330	Identifier	cp_fixed_quality		7635917	1					
ANR	7636331	PrimaryExpression	1		7635917	1					
ANR	7636332	BreakStatement	break ;	382:8:14846:14851	7635917	14	True				
ANR	7636333	Label	case 'f' :	386:8:14931:14939	7635917	15	True				
ANR	7636334	CompoundStatement		115:18:3798:3798	7635917	16					
ANR	7636335	ExpressionStatement	"fprintf ( stdout , ""/---------------------------------------------------\\\\\\n"" )"	387:12:14955:15030	7635917	0	True				
ANR	7636336	CallExpression	"fprintf ( stdout , ""/---------------------------------------------------\\\\\\n"" )"		7635917	0					
ANR	7636337	Callee	fprintf		7635917	0					
ANR	7636338	Identifier	fprintf		7635917	0					
ANR	7636339	ArgumentList	stdout		7635917	1					
ANR	7636340	Argument	stdout		7635917	0					
ANR	7636341	Identifier	stdout		7635917	0					
ANR	7636342	Argument	"""/---------------------------------------------------\\\\\\n"""		7635917	1					
ANR	7636343	PrimaryExpression	"""/---------------------------------------------------\\\\\\n"""		7635917	0					
ANR	7636344	ExpressionStatement	"fprintf ( stdout , ""|  Fixed layer allocation option not implemented !!  |\\n"" )"	388:12:15044:15119	7635917	1	True				
ANR	7636345	CallExpression	"fprintf ( stdout , ""|  Fixed layer allocation option not implemented !!  |\\n"" )"		7635917	0					
ANR	7636346	Callee	fprintf		7635917	0					
ANR	7636347	Identifier	fprintf		7635917	0					
ANR	7636348	ArgumentList	stdout		7635917	1					
ANR	7636349	Argument	stdout		7635917	0					
ANR	7636350	Identifier	stdout		7635917	0					
ANR	7636351	Argument	"""|  Fixed layer allocation option not implemented !!  |\\n"""		7635917	1					
ANR	7636352	PrimaryExpression	"""|  Fixed layer allocation option not implemented !!  |\\n"""		7635917	0					
ANR	7636353	ExpressionStatement	"fprintf ( stdout , ""\\\\---------------------------------------------------/\\n"" )"	389:12:15133:15208	7635917	2	True				
ANR	7636354	CallExpression	"fprintf ( stdout , ""\\\\---------------------------------------------------/\\n"" )"		7635917	0					
ANR	7636355	Callee	fprintf		7635917	0					
ANR	7636356	Identifier	fprintf		7635917	0					
ANR	7636357	ArgumentList	stdout		7635917	1					
ANR	7636358	Argument	stdout		7635917	0					
ANR	7636359	Identifier	stdout		7635917	0					
ANR	7636360	Argument	"""\\\\---------------------------------------------------/\\n"""		7635917	1					
ANR	7636361	PrimaryExpression	"""\\\\---------------------------------------------------/\\n"""		7635917	0					
ANR	7636362	BreakStatement	break ;	430:8:16643:16648	7635917	17	True				
ANR	7636363	Label	case 't' :	434:8:16728:16736	7635917	18	True				
ANR	7636364	CompoundStatement		163:18:5595:5595	7635917	19					
ANR	7636365	IfStatement	"if ( sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tdx , & parameters -> cp_tdy , & parameters -> cp_tdz ) != 3 )"		7635917	0					
ANR	7636366	Condition	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tdx , & parameters -> cp_tdy , & parameters -> cp_tdz ) != 3"	435:16:16776:16896	7635917	0	True				
ANR	7636367	EqualityExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tdx , & parameters -> cp_tdy , & parameters -> cp_tdz ) != 3"		7635917	0		!=			
ANR	7636368	CallExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tdx , & parameters -> cp_tdy , & parameters -> cp_tdz )"		7635917	0					
ANR	7636369	Callee	sscanf		7635917	0					
ANR	7636370	Identifier	sscanf		7635917	0					
ANR	7636371	ArgumentList	opj_optarg		7635917	1					
ANR	7636372	Argument	opj_optarg		7635917	0					
ANR	7636373	Identifier	opj_optarg		7635917	0					
ANR	7636374	Argument	"""%d,%d,%d"""		7635917	1					
ANR	7636375	PrimaryExpression	"""%d,%d,%d"""		7635917	0					
ANR	7636376	Argument	& parameters -> cp_tdx		7635917	2					
ANR	7636377	UnaryOperationExpression	& parameters -> cp_tdx		7635917	0					
ANR	7636378	UnaryOperator	&		7635917	0					
ANR	7636379	PtrMemberAccess	parameters -> cp_tdx		7635917	1					
ANR	7636380	Identifier	parameters		7635917	0					
ANR	7636381	Identifier	cp_tdx		7635917	1					
ANR	7636382	Argument	& parameters -> cp_tdy		7635917	3					
ANR	7636383	UnaryOperationExpression	& parameters -> cp_tdy		7635917	0					
ANR	7636384	UnaryOperator	&		7635917	0					
ANR	7636385	PtrMemberAccess	parameters -> cp_tdy		7635917	1					
ANR	7636386	Identifier	parameters		7635917	0					
ANR	7636387	Identifier	cp_tdy		7635917	1					
ANR	7636388	Argument	& parameters -> cp_tdz		7635917	4					
ANR	7636389	UnaryOperationExpression	& parameters -> cp_tdz		7635917	0					
ANR	7636390	UnaryOperator	&		7635917	0					
ANR	7636391	PtrMemberAccess	parameters -> cp_tdz		7635917	1					
ANR	7636392	Identifier	parameters		7635917	0					
ANR	7636393	Identifier	cp_tdz		7635917	1					
ANR	7636394	PrimaryExpression	3		7635917	1					
ANR	7636395	CompoundStatement		165:50:5756:5756	7635917	1					
ANR	7636396	ExpressionStatement	"fprintf ( stdout , ""[ERROR] '-t' 'dimensions of tiles' argument error !  [-t tdx,tdy,tdz]\\n"" )"	437:16:16917:17031	7635917	0	True				
ANR	7636397	CallExpression	"fprintf ( stdout , ""[ERROR] '-t' 'dimensions of tiles' argument error !  [-t tdx,tdy,tdz]\\n"" )"		7635917	0					
ANR	7636398	Callee	fprintf		7635917	0					
ANR	7636399	Identifier	fprintf		7635917	0					
ANR	7636400	ArgumentList	stdout		7635917	1					
ANR	7636401	Argument	stdout		7635917	0					
ANR	7636402	Identifier	stdout		7635917	0					
ANR	7636403	Argument	"""[ERROR] '-t' 'dimensions of tiles' argument error !  [-t tdx,tdy,tdz]\\n"""		7635917	1					
ANR	7636404	PrimaryExpression	"""[ERROR] '-t' 'dimensions of tiles' argument error !  [-t tdx,tdy,tdz]\\n"""		7635917	0					
ANR	7636405	ReturnStatement	return 1 ;	439:16:17049:17057	7635917	1	True				
ANR	7636406	PrimaryExpression	1		7635917	0					
ANR	7636407	ExpressionStatement	parameters -> tile_size_on = true	441:12:17085:17116	7635917	1	True				
ANR	7636408	AssignmentExpression	parameters -> tile_size_on = true		7635917	0		=			
ANR	7636409	PtrMemberAccess	parameters -> tile_size_on		7635917	0					
ANR	7636410	Identifier	parameters		7635917	0					
ANR	7636411	Identifier	tile_size_on		7635917	1					
ANR	7636412	Identifier	true		7635917	1					
ANR	7636413	BreakStatement	break ;	443:8:17136:17141	7635917	20	True				
ANR	7636414	Label	case 'n' :	447:8:17221:17229	7635917	21	True				
ANR	7636415	CompoundStatement		177:12:6127:6134	7635917	22					
ANR	7636416	IdentifierDeclStatement	int aux ;	448:12:17270:17277	7635917	0	True				
ANR	7636417	IdentifierDecl	aux		7635917	0					
ANR	7636418	IdentifierDeclType	int		7635917	0					
ANR	7636419	Identifier	aux		7635917	1					
ANR	7636420	ExpressionStatement	"aux = sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> numresolution [ 0 ] , & parameters -> numresolution [ 1 ] , & parameters -> numresolution [ 2 ] )"	449:12:17291:17445	7635917	1	True				
ANR	7636421	AssignmentExpression	"aux = sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> numresolution [ 0 ] , & parameters -> numresolution [ 1 ] , & parameters -> numresolution [ 2 ] )"		7635917	0		=			
ANR	7636422	Identifier	aux		7635917	0					
ANR	7636423	CallExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> numresolution [ 0 ] , & parameters -> numresolution [ 1 ] , & parameters -> numresolution [ 2 ] )"		7635917	1					
ANR	7636424	Callee	sscanf		7635917	0					
ANR	7636425	Identifier	sscanf		7635917	0					
ANR	7636426	ArgumentList	opj_optarg		7635917	1					
ANR	7636427	Argument	opj_optarg		7635917	0					
ANR	7636428	Identifier	opj_optarg		7635917	0					
ANR	7636429	Argument	"""%d,%d,%d"""		7635917	1					
ANR	7636430	PrimaryExpression	"""%d,%d,%d"""		7635917	0					
ANR	7636431	Argument	& parameters -> numresolution [ 0 ]		7635917	2					
ANR	7636432	UnaryOperationExpression	& parameters -> numresolution [ 0 ]		7635917	0					
ANR	7636433	UnaryOperator	&		7635917	0					
ANR	7636434	ArrayIndexing	parameters -> numresolution [ 0 ]		7635917	1					
ANR	7636435	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7636436	Identifier	parameters		7635917	0					
ANR	7636437	Identifier	numresolution		7635917	1					
ANR	7636438	PrimaryExpression	0		7635917	1					
ANR	7636439	Argument	& parameters -> numresolution [ 1 ]		7635917	3					
ANR	7636440	UnaryOperationExpression	& parameters -> numresolution [ 1 ]		7635917	0					
ANR	7636441	UnaryOperator	&		7635917	0					
ANR	7636442	ArrayIndexing	parameters -> numresolution [ 1 ]		7635917	1					
ANR	7636443	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7636444	Identifier	parameters		7635917	0					
ANR	7636445	Identifier	numresolution		7635917	1					
ANR	7636446	PrimaryExpression	1		7635917	1					
ANR	7636447	Argument	& parameters -> numresolution [ 2 ]		7635917	4					
ANR	7636448	UnaryOperationExpression	& parameters -> numresolution [ 2 ]		7635917	0					
ANR	7636449	UnaryOperator	&		7635917	0					
ANR	7636450	ArrayIndexing	parameters -> numresolution [ 2 ]		7635917	1					
ANR	7636451	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7636452	Identifier	parameters		7635917	0					
ANR	7636453	Identifier	numresolution		7635917	1					
ANR	7636454	PrimaryExpression	2		7635917	1					
ANR	7636455	IfStatement	if ( aux == 2 )		7635917	2					
ANR	7636456	Condition	aux == 2	451:16:17463:17470	7635917	0	True				
ANR	7636457	EqualityExpression	aux == 2		7635917	0		==			
ANR	7636458	Identifier	aux		7635917	0					
ANR	7636459	PrimaryExpression	2		7635917	1					
ANR	7636460	CompoundStatement		180:26:6330:6330	7635917	1					
ANR	7636461	ExpressionStatement	parameters -> numresolution [ 2 ] = 1	452:16:17491:17523	7635917	0	True				
ANR	7636462	AssignmentExpression	parameters -> numresolution [ 2 ] = 1		7635917	0		=			
ANR	7636463	ArrayIndexing	parameters -> numresolution [ 2 ]		7635917	0					
ANR	7636464	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7636465	Identifier	parameters		7635917	0					
ANR	7636466	Identifier	numresolution		7635917	1					
ANR	7636467	PrimaryExpression	2		7635917	1					
ANR	7636468	PrimaryExpression	1		7635917	1					
ANR	7636469	ElseStatement	else		7635917	0					
ANR	7636470	IfStatement	if ( aux == 1 )		7635917	0					
ANR	7636471	Condition	aux == 1	453:23:17548:17555	7635917	0	True				
ANR	7636472	EqualityExpression	aux == 1		7635917	0		==			
ANR	7636473	Identifier	aux		7635917	0					
ANR	7636474	PrimaryExpression	1		7635917	1					
ANR	7636475	CompoundStatement		182:33:6415:6415	7635917	1					
ANR	7636476	ExpressionStatement	parameters -> numresolution [ 1 ] = parameters -> numresolution [ 0 ]	454:16:17576:17635	7635917	0	True				
ANR	7636477	AssignmentExpression	parameters -> numresolution [ 1 ] = parameters -> numresolution [ 0 ]		7635917	0		=			
ANR	7636478	ArrayIndexing	parameters -> numresolution [ 1 ]		7635917	0					
ANR	7636479	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7636480	Identifier	parameters		7635917	0					
ANR	7636481	Identifier	numresolution		7635917	1					
ANR	7636482	PrimaryExpression	1		7635917	1					
ANR	7636483	ArrayIndexing	parameters -> numresolution [ 0 ]		7635917	1					
ANR	7636484	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7636485	Identifier	parameters		7635917	0					
ANR	7636486	Identifier	numresolution		7635917	1					
ANR	7636487	PrimaryExpression	0		7635917	1					
ANR	7636488	ExpressionStatement	parameters -> numresolution [ 2 ] = 1	455:16:17653:17685	7635917	1	True				
ANR	7636489	AssignmentExpression	parameters -> numresolution [ 2 ] = 1		7635917	0		=			
ANR	7636490	ArrayIndexing	parameters -> numresolution [ 2 ]		7635917	0					
ANR	7636491	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7636492	Identifier	parameters		7635917	0					
ANR	7636493	Identifier	numresolution		7635917	1					
ANR	7636494	PrimaryExpression	2		7635917	1					
ANR	7636495	PrimaryExpression	1		7635917	1					
ANR	7636496	ElseStatement	else		7635917	0					
ANR	7636497	IfStatement	if ( aux == 0 )		7635917	0					
ANR	7636498	Condition	aux == 0	456:23:17710:17717	7635917	0	True				
ANR	7636499	EqualityExpression	aux == 0		7635917	0		==			
ANR	7636500	Identifier	aux		7635917	0					
ANR	7636501	PrimaryExpression	0		7635917	1					
ANR	7636502	CompoundStatement		185:33:6577:6577	7635917	1					
ANR	7636503	ExpressionStatement	parameters -> numresolution [ 0 ] = 1	457:16:17738:17770	7635917	0	True				
ANR	7636504	AssignmentExpression	parameters -> numresolution [ 0 ] = 1		7635917	0		=			
ANR	7636505	ArrayIndexing	parameters -> numresolution [ 0 ]		7635917	0					
ANR	7636506	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7636507	Identifier	parameters		7635917	0					
ANR	7636508	Identifier	numresolution		7635917	1					
ANR	7636509	PrimaryExpression	0		7635917	1					
ANR	7636510	PrimaryExpression	1		7635917	1					
ANR	7636511	ExpressionStatement	parameters -> numresolution [ 1 ] = 1	458:16:17788:17820	7635917	1	True				
ANR	7636512	AssignmentExpression	parameters -> numresolution [ 1 ] = 1		7635917	0		=			
ANR	7636513	ArrayIndexing	parameters -> numresolution [ 1 ]		7635917	0					
ANR	7636514	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7636515	Identifier	parameters		7635917	0					
ANR	7636516	Identifier	numresolution		7635917	1					
ANR	7636517	PrimaryExpression	1		7635917	1					
ANR	7636518	PrimaryExpression	1		7635917	1					
ANR	7636519	ExpressionStatement	parameters -> numresolution [ 2 ] = 1	459:16:17838:17870	7635917	2	True				
ANR	7636520	AssignmentExpression	parameters -> numresolution [ 2 ] = 1		7635917	0		=			
ANR	7636521	ArrayIndexing	parameters -> numresolution [ 2 ]		7635917	0					
ANR	7636522	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7636523	Identifier	parameters		7635917	0					
ANR	7636524	Identifier	numresolution		7635917	1					
ANR	7636525	PrimaryExpression	2		7635917	1					
ANR	7636526	PrimaryExpression	1		7635917	1					
ANR	7636527	BreakStatement	break ;	462:8:17904:17909	7635917	23	True				
ANR	7636528	Label	case 'c' :	465:8:17988:17996	7635917	24	True				
ANR	7636529	CompoundStatement		198:12:6975:6995	7635917	25					
ANR	7636530	IdentifierDeclStatement	char sep ;	466:12:18045:18053	7635917	0	True				
ANR	7636531	IdentifierDecl	sep		7635917	0					
ANR	7636532	IdentifierDeclType	char		7635917	0					
ANR	7636533	Identifier	sep		7635917	1					
ANR	7636534	IdentifierDeclStatement	int res_spec = 0 ;	467:12:18067:18083	7635917	1	True				
ANR	7636535	IdentifierDecl	res_spec = 0		7635917	0					
ANR	7636536	IdentifierDeclType	int		7635917	0					
ANR	7636537	Identifier	res_spec		7635917	1					
ANR	7636538	AssignmentExpression	res_spec = 0		7635917	2		=			
ANR	7636539	Identifier	res_spec		7635917	0					
ANR	7636540	PrimaryExpression	0		7635917	1					
ANR	7636541	IdentifierDeclStatement	int aux ;	468:12:18097:18104	7635917	2	True				
ANR	7636542	IdentifierDecl	aux		7635917	0					
ANR	7636543	IdentifierDeclType	int		7635917	0					
ANR	7636544	Identifier	aux		7635917	1					
ANR	7636545	IdentifierDeclStatement	char * s = opj_optarg ;	469:12:18118:18138	7635917	3	True				
ANR	7636546	IdentifierDecl	* s = opj_optarg		7635917	0					
ANR	7636547	IdentifierDeclType	char *		7635917	0					
ANR	7636548	Identifier	s		7635917	1					
ANR	7636549	AssignmentExpression	* s = opj_optarg		7635917	2		=			
ANR	7636550	Identifier	opj_optarg		7635917	0					
ANR	7636551	Identifier	opj_optarg		7635917	1					
ANR	7636552	DoStatement	do		7635917	4					
ANR	7636553	CompoundStatement		199:15:7012:7012	7635917	0					
ANR	7636554	ExpressionStatement	sep = 0	471:16:18173:18180	7635917	0	True				
ANR	7636555	AssignmentExpression	sep = 0		7635917	0		=			
ANR	7636556	Identifier	sep		7635917	0					
ANR	7636557	PrimaryExpression	0		7635917	1					
ANR	7636558	ExpressionStatement	"aux = sscanf ( s , ""[%d,%d,%d]%c"" , & parameters -> prct_init [ 0 ] [ res_spec ] , & parameters -> prct_init [ 1 ] [ res_spec ] , & parameters -> prct_init [ 2 ] [ res_spec ] , & sep )"	472:16:18198:18375	7635917	1	True				
ANR	7636559	AssignmentExpression	"aux = sscanf ( s , ""[%d,%d,%d]%c"" , & parameters -> prct_init [ 0 ] [ res_spec ] , & parameters -> prct_init [ 1 ] [ res_spec ] , & parameters -> prct_init [ 2 ] [ res_spec ] , & sep )"		7635917	0		=			
ANR	7636560	Identifier	aux		7635917	0					
ANR	7636561	CallExpression	"sscanf ( s , ""[%d,%d,%d]%c"" , & parameters -> prct_init [ 0 ] [ res_spec ] , & parameters -> prct_init [ 1 ] [ res_spec ] , & parameters -> prct_init [ 2 ] [ res_spec ] , & sep )"		7635917	1					
ANR	7636562	Callee	sscanf		7635917	0					
ANR	7636563	Identifier	sscanf		7635917	0					
ANR	7636564	ArgumentList	s		7635917	1					
ANR	7636565	Argument	s		7635917	0					
ANR	7636566	Identifier	s		7635917	0					
ANR	7636567	Argument	"""[%d,%d,%d]%c"""		7635917	1					
ANR	7636568	PrimaryExpression	"""[%d,%d,%d]%c"""		7635917	0					
ANR	7636569	Argument	& parameters -> prct_init [ 0 ] [ res_spec ]		7635917	2					
ANR	7636570	UnaryOperationExpression	& parameters -> prct_init [ 0 ] [ res_spec ]		7635917	0					
ANR	7636571	UnaryOperator	&		7635917	0					
ANR	7636572	ArrayIndexing	parameters -> prct_init [ 0 ] [ res_spec ]		7635917	1					
ANR	7636573	ArrayIndexing	parameters -> prct_init [ 0 ]		7635917	0					
ANR	7636574	PtrMemberAccess	parameters -> prct_init		7635917	0					
ANR	7636575	Identifier	parameters		7635917	0					
ANR	7636576	Identifier	prct_init		7635917	1					
ANR	7636577	PrimaryExpression	0		7635917	1					
ANR	7636578	Identifier	res_spec		7635917	1					
ANR	7636579	Argument	& parameters -> prct_init [ 1 ] [ res_spec ]		7635917	3					
ANR	7636580	UnaryOperationExpression	& parameters -> prct_init [ 1 ] [ res_spec ]		7635917	0					
ANR	7636581	UnaryOperator	&		7635917	0					
ANR	7636582	ArrayIndexing	parameters -> prct_init [ 1 ] [ res_spec ]		7635917	1					
ANR	7636583	ArrayIndexing	parameters -> prct_init [ 1 ]		7635917	0					
ANR	7636584	PtrMemberAccess	parameters -> prct_init		7635917	0					
ANR	7636585	Identifier	parameters		7635917	0					
ANR	7636586	Identifier	prct_init		7635917	1					
ANR	7636587	PrimaryExpression	1		7635917	1					
ANR	7636588	Identifier	res_spec		7635917	1					
ANR	7636589	Argument	& parameters -> prct_init [ 2 ] [ res_spec ]		7635917	4					
ANR	7636590	UnaryOperationExpression	& parameters -> prct_init [ 2 ] [ res_spec ]		7635917	0					
ANR	7636591	UnaryOperator	&		7635917	0					
ANR	7636592	ArrayIndexing	parameters -> prct_init [ 2 ] [ res_spec ]		7635917	1					
ANR	7636593	ArrayIndexing	parameters -> prct_init [ 2 ]		7635917	0					
ANR	7636594	PtrMemberAccess	parameters -> prct_init		7635917	0					
ANR	7636595	Identifier	parameters		7635917	0					
ANR	7636596	Identifier	prct_init		7635917	1					
ANR	7636597	PrimaryExpression	2		7635917	1					
ANR	7636598	Identifier	res_spec		7635917	1					
ANR	7636599	Argument	& sep		7635917	5					
ANR	7636600	UnaryOperationExpression	& sep		7635917	0					
ANR	7636601	UnaryOperator	&		7635917	0					
ANR	7636602	Identifier	sep		7635917	1					
ANR	7636603	IfStatement	"if ( sep == ',' && aux != 4 )"		7635917	2					
ANR	7636604	Condition	"sep == ',' && aux != 4"	474:20:18397:18418	7635917	0	True				
ANR	7636605	AndExpression	"sep == ',' && aux != 4"		7635917	0		&&			
ANR	7636606	EqualityExpression	"sep == ','"		7635917	0		==			
ANR	7636607	Identifier	sep		7635917	0					
ANR	7636608	PrimaryExpression	"','"		7635917	1					
ANR	7636609	EqualityExpression	aux != 4		7635917	1		!=			
ANR	7636610	Identifier	aux		7635917	0					
ANR	7636611	PrimaryExpression	4		7635917	1					
ANR	7636612	CompoundStatement		203:44:7278:7278	7635917	1					
ANR	7636613	ExpressionStatement	"fprintf ( stdout , ""[ERROR] '-c' 'dimensions of precincts' argument error !  [-c [prcx_res0,prcy_res0,prcz_res0],...,[prcx_resN,prcy_resN,prcz_resN]]\\n"" )"	475:20:18443:18621	7635917	0	True				
ANR	7636614	CallExpression	"fprintf ( stdout , ""[ERROR] '-c' 'dimensions of precincts' argument error !  [-c [prcx_res0,prcy_res0,prcz_res0],...,[prcx_resN,prcy_resN,prcz_resN]]\\n"" )"		7635917	0					
ANR	7636615	Callee	fprintf		7635917	0					
ANR	7636616	Identifier	fprintf		7635917	0					
ANR	7636617	ArgumentList	stdout		7635917	1					
ANR	7636618	Argument	stdout		7635917	0					
ANR	7636619	Identifier	stdout		7635917	0					
ANR	7636620	Argument	"""[ERROR] '-c' 'dimensions of precincts' argument error !  [-c [prcx_res0,prcy_res0,prcz_res0],...,[prcx_resN,prcy_resN,prcz_resN]]\\n"""		7635917	1					
ANR	7636621	PrimaryExpression	"""[ERROR] '-c' 'dimensions of precincts' argument error !  [-c [prcx_res0,prcy_res0,prcz_res0],...,[prcx_resN,prcy_resN,prcz_resN]]\\n"""		7635917	0					
ANR	7636622	ReturnStatement	return 1 ;	477:20:18643:18651	7635917	1	True				
ANR	7636623	PrimaryExpression	1		7635917	0					
ANR	7636624	ExpressionStatement	parameters -> csty |= 0x01	479:16:18687:18711	7635917	3	True				
ANR	7636625	AssignmentExpression	parameters -> csty |= 0x01		7635917	0		|=			
ANR	7636626	PtrMemberAccess	parameters -> csty		7635917	0					
ANR	7636627	Identifier	parameters		7635917	0					
ANR	7636628	Identifier	csty		7635917	1					
ANR	7636629	PrimaryExpression	0x01		7635917	1					
ANR	7636630	ExpressionStatement	res_spec ++	480:16:18729:18739	7635917	4	True				
ANR	7636631	PostIncDecOperationExpression	res_spec ++		7635917	0					
ANR	7636632	Identifier	res_spec		7635917	0					
ANR	7636633	IncDec	++		7635917	1					
ANR	7636634	ExpressionStatement	"s = strpbrk ( s , ""]"" ) + 2"	481:16:18757:18780	7635917	5	True				
ANR	7636635	AssignmentExpression	"s = strpbrk ( s , ""]"" ) + 2"		7635917	0		=			
ANR	7636636	Identifier	s		7635917	0					
ANR	7636637	AdditiveExpression	"strpbrk ( s , ""]"" ) + 2"		7635917	1		+			
ANR	7636638	CallExpression	"strpbrk ( s , ""]"" )"		7635917	0					
ANR	7636639	Callee	strpbrk		7635917	0					
ANR	7636640	Identifier	strpbrk		7635917	0					
ANR	7636641	ArgumentList	s		7635917	1					
ANR	7636642	Argument	s		7635917	0					
ANR	7636643	Identifier	s		7635917	0					
ANR	7636644	Argument	"""]"""		7635917	1					
ANR	7636645	PrimaryExpression	"""]"""		7635917	0					
ANR	7636646	PrimaryExpression	2		7635917	1					
ANR	7636647	Condition	"sep == ','"	482:21:18803:18812	7635917	1	True				
ANR	7636648	EqualityExpression	"sep == ','"		7635917	0		==			
ANR	7636649	Identifier	sep		7635917	0					
ANR	7636650	PrimaryExpression	"','"		7635917	1					
ANR	7636651	ExpressionStatement	parameters -> res_spec = res_spec	483:12:18828:18859	7635917	5	True				
ANR	7636652	AssignmentExpression	parameters -> res_spec = res_spec		7635917	0		=			
ANR	7636653	PtrMemberAccess	parameters -> res_spec		7635917	0					
ANR	7636654	Identifier	parameters		7635917	0					
ANR	7636655	Identifier	res_spec		7635917	1					
ANR	7636656	Identifier	res_spec		7635917	1					
ANR	7636657	BreakStatement	break ;	485:8:18924:18929	7635917	26	True				
ANR	7636658	Label	case 'b' :	489:8:19009:19017	7635917	27	True				
ANR	7636659	CompoundStatement		219:12:7925:7981	7635917	28					
ANR	7636660	IdentifierDeclStatement	"int cblockw_init = 0 , cblockh_init = 0 , cblockl_init = 0 ;"	490:12:19068:19124	7635917	0	True				
ANR	7636661	IdentifierDecl	cblockw_init = 0		7635917	0					
ANR	7636662	IdentifierDeclType	int		7635917	0					
ANR	7636663	Identifier	cblockw_init		7635917	1					
ANR	7636664	AssignmentExpression	cblockw_init = 0		7635917	2		=			
ANR	7636665	Identifier	cblockw_init		7635917	0					
ANR	7636666	PrimaryExpression	0		7635917	1					
ANR	7636667	IdentifierDecl	cblockh_init = 0		7635917	1					
ANR	7636668	IdentifierDeclType	int		7635917	0					
ANR	7636669	Identifier	cblockh_init		7635917	1					
ANR	7636670	AssignmentExpression	cblockh_init = 0		7635917	2		=			
ANR	7636671	Identifier	cblockh_init		7635917	0					
ANR	7636672	PrimaryExpression	0		7635917	1					
ANR	7636673	IdentifierDecl	cblockl_init = 0		7635917	2					
ANR	7636674	IdentifierDeclType	int		7635917	0					
ANR	7636675	Identifier	cblockl_init		7635917	1					
ANR	7636676	AssignmentExpression	cblockl_init = 0		7635917	2		=			
ANR	7636677	Identifier	cblockl_init		7635917	0					
ANR	7636678	PrimaryExpression	0		7635917	1					
ANR	7636679	IfStatement	"if ( sscanf ( opj_optarg , ""%d,%d,%d"" , & cblockw_init , & cblockh_init , & cblockl_init ) != 3 )"		7635917	1					
ANR	7636680	Condition	"sscanf ( opj_optarg , ""%d,%d,%d"" , & cblockw_init , & cblockh_init , & cblockl_init ) != 3"	491:16:19142:19244	7635917	0	True				
ANR	7636681	EqualityExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & cblockw_init , & cblockh_init , & cblockl_init ) != 3"		7635917	0		!=			
ANR	7636682	CallExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & cblockw_init , & cblockh_init , & cblockl_init )"		7635917	0					
ANR	7636683	Callee	sscanf		7635917	0					
ANR	7636684	Identifier	sscanf		7635917	0					
ANR	7636685	ArgumentList	opj_optarg		7635917	1					
ANR	7636686	Argument	opj_optarg		7635917	0					
ANR	7636687	Identifier	opj_optarg		7635917	0					
ANR	7636688	Argument	"""%d,%d,%d"""		7635917	1					
ANR	7636689	PrimaryExpression	"""%d,%d,%d"""		7635917	0					
ANR	7636690	Argument	& cblockw_init		7635917	2					
ANR	7636691	UnaryOperationExpression	& cblockw_init		7635917	0					
ANR	7636692	UnaryOperator	&		7635917	0					
ANR	7636693	Identifier	cblockw_init		7635917	1					
ANR	7636694	Argument	& cblockh_init		7635917	3					
ANR	7636695	UnaryOperationExpression	& cblockh_init		7635917	0					
ANR	7636696	UnaryOperator	&		7635917	0					
ANR	7636697	Identifier	cblockh_init		7635917	1					
ANR	7636698	Argument	& cblockl_init		7635917	4					
ANR	7636699	UnaryOperationExpression	& cblockl_init		7635917	0					
ANR	7636700	UnaryOperator	&		7635917	0					
ANR	7636701	Identifier	cblockl_init		7635917	1					
ANR	7636702	PrimaryExpression	3		7635917	1					
ANR	7636703	CompoundStatement		221:44:8104:8104	7635917	1					
ANR	7636704	ExpressionStatement	"fprintf ( stdout , ""[ERROR] '-b' 'dimensions of codeblocks' argument error !  [-b cblkx,cblky,cblkz]\\n"" )"	493:16:19265:19390	7635917	0	True				
ANR	7636705	CallExpression	"fprintf ( stdout , ""[ERROR] '-b' 'dimensions of codeblocks' argument error !  [-b cblkx,cblky,cblkz]\\n"" )"		7635917	0					
ANR	7636706	Callee	fprintf		7635917	0					
ANR	7636707	Identifier	fprintf		7635917	0					
ANR	7636708	ArgumentList	stdout		7635917	1					
ANR	7636709	Argument	stdout		7635917	0					
ANR	7636710	Identifier	stdout		7635917	0					
ANR	7636711	Argument	"""[ERROR] '-b' 'dimensions of codeblocks' argument error !  [-b cblkx,cblky,cblkz]\\n"""		7635917	1					
ANR	7636712	PrimaryExpression	"""[ERROR] '-b' 'dimensions of codeblocks' argument error !  [-b cblkx,cblky,cblkz]\\n"""		7635917	0					
ANR	7636713	ReturnStatement	return 1 ;	495:16:19408:19416	7635917	1	True				
ANR	7636714	PrimaryExpression	1		7635917	0					
ANR	7636715	IfStatement	if ( cblockw_init * cblockh_init * cblockl_init > ( 1 << 18 ) || cblockw_init > 1024 || cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4 )		7635917	2					
ANR	7636716	Condition	cblockw_init * cblockh_init * cblockl_init > ( 1 << 18 ) || cblockw_init > 1024 || cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4	497:16:19448:19670	7635917	0	True				
ANR	7636717	OrExpression	cblockw_init * cblockh_init * cblockl_init > ( 1 << 18 ) || cblockw_init > 1024 || cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4		7635917	0		||			
ANR	7636718	RelationalExpression	cblockw_init * cblockh_init * cblockl_init > ( 1 << 18 )		7635917	0		>			
ANR	7636719	MultiplicativeExpression	cblockw_init * cblockh_init * cblockl_init		7635917	0		*			
ANR	7636720	Identifier	cblockw_init		7635917	0					
ANR	7636721	MultiplicativeExpression	cblockh_init * cblockl_init		7635917	1		*			
ANR	7636722	Identifier	cblockh_init		7635917	0					
ANR	7636723	Identifier	cblockl_init		7635917	1					
ANR	7636724	ShiftExpression	1 << 18		7635917	1		<<			
ANR	7636725	PrimaryExpression	1		7635917	0					
ANR	7636726	PrimaryExpression	18		7635917	1					
ANR	7636727	OrExpression	cblockw_init > 1024 || cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4		7635917	1		||			
ANR	7636728	RelationalExpression	cblockw_init > 1024		7635917	0		>			
ANR	7636729	Identifier	cblockw_init		7635917	0					
ANR	7636730	PrimaryExpression	1024		7635917	1					
ANR	7636731	OrExpression	cblockw_init < 4 || cblockh_init > 1024 || cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4		7635917	1		||			
ANR	7636732	RelationalExpression	cblockw_init < 4		7635917	0		<			
ANR	7636733	Identifier	cblockw_init		7635917	0					
ANR	7636734	PrimaryExpression	4		7635917	1					
ANR	7636735	OrExpression	cblockh_init > 1024 || cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4		7635917	1		||			
ANR	7636736	RelationalExpression	cblockh_init > 1024		7635917	0		>			
ANR	7636737	Identifier	cblockh_init		7635917	0					
ANR	7636738	PrimaryExpression	1024		7635917	1					
ANR	7636739	OrExpression	cblockh_init < 4 || cblockl_init > 1024 || cblockl_init < 4		7635917	1		||			
ANR	7636740	RelationalExpression	cblockh_init < 4		7635917	0		<			
ANR	7636741	Identifier	cblockh_init		7635917	0					
ANR	7636742	PrimaryExpression	4		7635917	1					
ANR	7636743	OrExpression	cblockl_init > 1024 || cblockl_init < 4		7635917	1		||			
ANR	7636744	RelationalExpression	cblockl_init > 1024		7635917	0		>			
ANR	7636745	Identifier	cblockl_init		7635917	0					
ANR	7636746	PrimaryExpression	1024		7635917	1					
ANR	7636747	RelationalExpression	cblockl_init < 4		7635917	1		<			
ANR	7636748	Identifier	cblockl_init		7635917	0					
ANR	7636749	PrimaryExpression	4		7635917	1					
ANR	7636750	CompoundStatement		228:81:8530:8530	7635917	1					
ANR	7636751	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Size of code_block error (option -b) !!\\n\\nRestriction :\\n * width*height*length<=4096\\n * 4<=width,height,length<= 1024\\n\\n"" )"	500:16:19691:19866	7635917	0	True				
ANR	7636752	CallExpression	"fprintf ( stdout , ""[ERROR] Size of code_block error (option -b) !!\\n\\nRestriction :\\n * width*height*length<=4096\\n * 4<=width,height,length<= 1024\\n\\n"" )"		7635917	0					
ANR	7636753	Callee	fprintf		7635917	0					
ANR	7636754	Identifier	fprintf		7635917	0					
ANR	7636755	ArgumentList	stdout		7635917	1					
ANR	7636756	Argument	stdout		7635917	0					
ANR	7636757	Identifier	stdout		7635917	0					
ANR	7636758	Argument	"""[ERROR] Size of code_block error (option -b) !!\\n\\nRestriction :\\n * width*height*length<=4096\\n * 4<=width,height,length<= 1024\\n\\n"""		7635917	1					
ANR	7636759	PrimaryExpression	"""[ERROR] Size of code_block error (option -b) !!\\n\\nRestriction :\\n * width*height*length<=4096\\n * 4<=width,height,length<= 1024\\n\\n"""		7635917	0					
ANR	7636760	ReturnStatement	return 1 ;	502:16:19884:19892	7635917	1	True				
ANR	7636761	PrimaryExpression	1		7635917	0					
ANR	7636762	ExpressionStatement	parameters -> cblock_init [ 0 ] = cblockw_init	504:12:19920:19961	7635917	3	True				
ANR	7636763	AssignmentExpression	parameters -> cblock_init [ 0 ] = cblockw_init		7635917	0		=			
ANR	7636764	ArrayIndexing	parameters -> cblock_init [ 0 ]		7635917	0					
ANR	7636765	PtrMemberAccess	parameters -> cblock_init		7635917	0					
ANR	7636766	Identifier	parameters		7635917	0					
ANR	7636767	Identifier	cblock_init		7635917	1					
ANR	7636768	PrimaryExpression	0		7635917	1					
ANR	7636769	Identifier	cblockw_init		7635917	1					
ANR	7636770	ExpressionStatement	parameters -> cblock_init [ 1 ] = cblockh_init	505:12:19975:20016	7635917	4	True				
ANR	7636771	AssignmentExpression	parameters -> cblock_init [ 1 ] = cblockh_init		7635917	0		=			
ANR	7636772	ArrayIndexing	parameters -> cblock_init [ 1 ]		7635917	0					
ANR	7636773	PtrMemberAccess	parameters -> cblock_init		7635917	0					
ANR	7636774	Identifier	parameters		7635917	0					
ANR	7636775	Identifier	cblock_init		7635917	1					
ANR	7636776	PrimaryExpression	1		7635917	1					
ANR	7636777	Identifier	cblockh_init		7635917	1					
ANR	7636778	ExpressionStatement	parameters -> cblock_init [ 2 ] = cblockl_init	506:12:20030:20071	7635917	5	True				
ANR	7636779	AssignmentExpression	parameters -> cblock_init [ 2 ] = cblockl_init		7635917	0		=			
ANR	7636780	ArrayIndexing	parameters -> cblock_init [ 2 ]		7635917	0					
ANR	7636781	PtrMemberAccess	parameters -> cblock_init		7635917	0					
ANR	7636782	Identifier	parameters		7635917	0					
ANR	7636783	Identifier	cblock_init		7635917	1					
ANR	7636784	PrimaryExpression	2		7635917	1					
ANR	7636785	Identifier	cblockl_init		7635917	1					
ANR	7636786	BreakStatement	break ;	508:8:20091:20096	7635917	29	True				
ANR	7636787	Label	case 'x' :	512:8:20176:20184	7635917	30	True				
ANR	7636788	CompoundStatement		242:12:9094:9118	7635917	31					
ANR	7636789	IdentifierDeclStatement	char * index = opj_optarg ;	513:12:20237:20261	7635917	0	True				
ANR	7636790	IdentifierDecl	* index = opj_optarg		7635917	0					
ANR	7636791	IdentifierDeclType	char *		7635917	0					
ANR	7636792	Identifier	index		7635917	1					
ANR	7636793	AssignmentExpression	* index = opj_optarg		7635917	2		=			
ANR	7636794	Identifier	opj_optarg		7635917	0					
ANR	7636795	Identifier	opj_optarg		7635917	1					
ANR	7636796	ExpressionStatement	"strncpy ( parameters -> index , index , MAX_PATH )"	514:12:20275:20318	7635917	1	True				
ANR	7636797	CallExpression	"strncpy ( parameters -> index , index , MAX_PATH )"		7635917	0					
ANR	7636798	Callee	strncpy		7635917	0					
ANR	7636799	Identifier	strncpy		7635917	0					
ANR	7636800	ArgumentList	parameters -> index		7635917	1					
ANR	7636801	Argument	parameters -> index		7635917	0					
ANR	7636802	PtrMemberAccess	parameters -> index		7635917	0					
ANR	7636803	Identifier	parameters		7635917	0					
ANR	7636804	Identifier	index		7635917	1					
ANR	7636805	Argument	index		7635917	1					
ANR	7636806	Identifier	index		7635917	0					
ANR	7636807	Argument	MAX_PATH		7635917	2					
ANR	7636808	Identifier	MAX_PATH		7635917	0					
ANR	7636809	ExpressionStatement	parameters -> index_on = 1	515:12:20332:20356	7635917	2	True				
ANR	7636810	AssignmentExpression	parameters -> index_on = 1		7635917	0		=			
ANR	7636811	PtrMemberAccess	parameters -> index_on		7635917	0					
ANR	7636812	Identifier	parameters		7635917	0					
ANR	7636813	Identifier	index_on		7635917	1					
ANR	7636814	PrimaryExpression	1		7635917	1					
ANR	7636815	BreakStatement	break ;	517:8:20376:20381	7635917	32	True				
ANR	7636816	Label	case 'p' :	521:8:20461:20469	7635917	33	True				
ANR	7636817	CompoundStatement		251:12:9374:9393	7635917	34					
ANR	7636818	IdentifierDeclStatement	char progression [ 4 ] ;	522:12:20517:20536	7635917	0	True				
ANR	7636819	IdentifierDecl	progression [ 4 ]		7635917	0					
ANR	7636820	IdentifierDeclType	char [ 4 ]		7635917	0					
ANR	7636821	Identifier	progression		7635917	1					
ANR	7636822	PrimaryExpression	4		7635917	2					
ANR	7636823	ExpressionStatement	"strncpy ( progression , opj_optarg , 4 )"	524:12:20551:20586	7635917	1	True				
ANR	7636824	CallExpression	"strncpy ( progression , opj_optarg , 4 )"		7635917	0					
ANR	7636825	Callee	strncpy		7635917	0					
ANR	7636826	Identifier	strncpy		7635917	0					
ANR	7636827	ArgumentList	progression		7635917	1					
ANR	7636828	Argument	progression		7635917	0					
ANR	7636829	Identifier	progression		7635917	0					
ANR	7636830	Argument	opj_optarg		7635917	1					
ANR	7636831	Identifier	opj_optarg		7635917	0					
ANR	7636832	Argument	4		7635917	2					
ANR	7636833	PrimaryExpression	4		7635917	0					
ANR	7636834	ExpressionStatement	parameters -> prog_order = give_progression ( progression )	525:12:20600:20654	7635917	2	True				
ANR	7636835	AssignmentExpression	parameters -> prog_order = give_progression ( progression )		7635917	0		=			
ANR	7636836	PtrMemberAccess	parameters -> prog_order		7635917	0					
ANR	7636837	Identifier	parameters		7635917	0					
ANR	7636838	Identifier	prog_order		7635917	1					
ANR	7636839	CallExpression	give_progression ( progression )		7635917	1					
ANR	7636840	Callee	give_progression		7635917	0					
ANR	7636841	Identifier	give_progression		7635917	0					
ANR	7636842	ArgumentList	progression		7635917	1					
ANR	7636843	Argument	progression		7635917	0					
ANR	7636844	Identifier	progression		7635917	0					
ANR	7636845	IfStatement	if ( parameters -> prog_order == - 1 )		7635917	3					
ANR	7636846	Condition	parameters -> prog_order == - 1	526:16:20672:20699	7635917	0	True				
ANR	7636847	EqualityExpression	parameters -> prog_order == - 1		7635917	0		==			
ANR	7636848	PtrMemberAccess	parameters -> prog_order		7635917	0					
ANR	7636849	Identifier	parameters		7635917	0					
ANR	7636850	Identifier	prog_order		7635917	1					
ANR	7636851	UnaryOperationExpression	- 1		7635917	1					
ANR	7636852	UnaryOperator	-		7635917	0					
ANR	7636853	PrimaryExpression	1		7635917	1					
ANR	7636854	CompoundStatement		255:46:9559:9559	7635917	1					
ANR	7636855	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unrecognized progression order [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"" )"	527:16:20720:20837	7635917	0	True				
ANR	7636856	CallExpression	"fprintf ( stdout , ""[ERROR] Unrecognized progression order [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"" )"		7635917	0					
ANR	7636857	Callee	fprintf		7635917	0					
ANR	7636858	Identifier	fprintf		7635917	0					
ANR	7636859	ArgumentList	stdout		7635917	1					
ANR	7636860	Argument	stdout		7635917	0					
ANR	7636861	Identifier	stdout		7635917	0					
ANR	7636862	Argument	"""[ERROR] Unrecognized progression order [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"""		7635917	1					
ANR	7636863	PrimaryExpression	"""[ERROR] Unrecognized progression order [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"""		7635917	0					
ANR	7636864	ReturnStatement	return 1 ;	529:16:20855:20863	7635917	1	True				
ANR	7636865	PrimaryExpression	1		7635917	0					
ANR	7636866	BreakStatement	break ;	532:8:20897:20902	7635917	35	True				
ANR	7636867	Label	case 's' :	536:8:20982:20990	7635917	36	True				
ANR	7636868	CompoundStatement		265:18:9849:9849	7635917	37					
ANR	7636869	IfStatement	"if ( sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> subsampling_dx , & parameters -> subsampling_dy , & parameters -> subsampling_dz ) != 3 )"		7635917	0					
ANR	7636870	Condition	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> subsampling_dx , & parameters -> subsampling_dy , & parameters -> subsampling_dz ) != 3"	537:16:21043:21187	7635917	0	True				
ANR	7636871	EqualityExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> subsampling_dx , & parameters -> subsampling_dy , & parameters -> subsampling_dz ) != 3"		7635917	0		!=			
ANR	7636872	CallExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> subsampling_dx , & parameters -> subsampling_dy , & parameters -> subsampling_dz )"		7635917	0					
ANR	7636873	Callee	sscanf		7635917	0					
ANR	7636874	Identifier	sscanf		7635917	0					
ANR	7636875	ArgumentList	opj_optarg		7635917	1					
ANR	7636876	Argument	opj_optarg		7635917	0					
ANR	7636877	Identifier	opj_optarg		7635917	0					
ANR	7636878	Argument	"""%d,%d,%d"""		7635917	1					
ANR	7636879	PrimaryExpression	"""%d,%d,%d"""		7635917	0					
ANR	7636880	Argument	& parameters -> subsampling_dx		7635917	2					
ANR	7636881	UnaryOperationExpression	& parameters -> subsampling_dx		7635917	0					
ANR	7636882	UnaryOperator	&		7635917	0					
ANR	7636883	PtrMemberAccess	parameters -> subsampling_dx		7635917	1					
ANR	7636884	Identifier	parameters		7635917	0					
ANR	7636885	Identifier	subsampling_dx		7635917	1					
ANR	7636886	Argument	& parameters -> subsampling_dy		7635917	3					
ANR	7636887	UnaryOperationExpression	& parameters -> subsampling_dy		7635917	0					
ANR	7636888	UnaryOperator	&		7635917	0					
ANR	7636889	PtrMemberAccess	parameters -> subsampling_dy		7635917	1					
ANR	7636890	Identifier	parameters		7635917	0					
ANR	7636891	Identifier	subsampling_dy		7635917	1					
ANR	7636892	Argument	& parameters -> subsampling_dz		7635917	4					
ANR	7636893	UnaryOperationExpression	& parameters -> subsampling_dz		7635917	0					
ANR	7636894	UnaryOperator	&		7635917	0					
ANR	7636895	PtrMemberAccess	parameters -> subsampling_dz		7635917	1					
ANR	7636896	Identifier	parameters		7635917	0					
ANR	7636897	Identifier	subsampling_dz		7635917	1					
ANR	7636898	PrimaryExpression	3		7635917	1					
ANR	7636899	CompoundStatement		267:87:10047:10047	7635917	1					
ANR	7636900	ExpressionStatement	"fprintf ( stdout , ""[ERROR] '-s' sub-sampling argument error !  [-s dx,dy,dz]\\n"" )"	539:16:21208:21286	7635917	0	True				
ANR	7636901	CallExpression	"fprintf ( stdout , ""[ERROR] '-s' sub-sampling argument error !  [-s dx,dy,dz]\\n"" )"		7635917	0					
ANR	7636902	Callee	fprintf		7635917	0					
ANR	7636903	Identifier	fprintf		7635917	0					
ANR	7636904	ArgumentList	stdout		7635917	1					
ANR	7636905	Argument	stdout		7635917	0					
ANR	7636906	Identifier	stdout		7635917	0					
ANR	7636907	Argument	"""[ERROR] '-s' sub-sampling argument error !  [-s dx,dy,dz]\\n"""		7635917	1					
ANR	7636908	PrimaryExpression	"""[ERROR] '-s' sub-sampling argument error !  [-s dx,dy,dz]\\n"""		7635917	0					
ANR	7636909	ReturnStatement	return 1 ;	540:16:21304:21312	7635917	1	True				
ANR	7636910	PrimaryExpression	1		7635917	0					
ANR	7636911	BreakStatement	break ;	543:8:21346:21351	7635917	38	True				
ANR	7636912	Label	case 'd' :	547:8:21431:21439	7635917	39	True				
ANR	7636913	CompoundStatement		276:18:10298:10298	7635917	40					
ANR	7636914	IfStatement	"if ( sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> volume_offset_x0 , & parameters -> volume_offset_y0 , & parameters -> volume_offset_z0 ) != 3 )"		7635917	0					
ANR	7636915	Condition	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> volume_offset_x0 , & parameters -> volume_offset_y0 , & parameters -> volume_offset_z0 ) != 3"	548:16:21507:21657	7635917	0	True				
ANR	7636916	EqualityExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> volume_offset_x0 , & parameters -> volume_offset_y0 , & parameters -> volume_offset_z0 ) != 3"		7635917	0		!=			
ANR	7636917	CallExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> volume_offset_x0 , & parameters -> volume_offset_y0 , & parameters -> volume_offset_z0 )"		7635917	0					
ANR	7636918	Callee	sscanf		7635917	0					
ANR	7636919	Identifier	sscanf		7635917	0					
ANR	7636920	ArgumentList	opj_optarg		7635917	1					
ANR	7636921	Argument	opj_optarg		7635917	0					
ANR	7636922	Identifier	opj_optarg		7635917	0					
ANR	7636923	Argument	"""%d,%d,%d"""		7635917	1					
ANR	7636924	PrimaryExpression	"""%d,%d,%d"""		7635917	0					
ANR	7636925	Argument	& parameters -> volume_offset_x0		7635917	2					
ANR	7636926	UnaryOperationExpression	& parameters -> volume_offset_x0		7635917	0					
ANR	7636927	UnaryOperator	&		7635917	0					
ANR	7636928	PtrMemberAccess	parameters -> volume_offset_x0		7635917	1					
ANR	7636929	Identifier	parameters		7635917	0					
ANR	7636930	Identifier	volume_offset_x0		7635917	1					
ANR	7636931	Argument	& parameters -> volume_offset_y0		7635917	3					
ANR	7636932	UnaryOperationExpression	& parameters -> volume_offset_y0		7635917	0					
ANR	7636933	UnaryOperator	&		7635917	0					
ANR	7636934	PtrMemberAccess	parameters -> volume_offset_y0		7635917	1					
ANR	7636935	Identifier	parameters		7635917	0					
ANR	7636936	Identifier	volume_offset_y0		7635917	1					
ANR	7636937	Argument	& parameters -> volume_offset_z0		7635917	4					
ANR	7636938	UnaryOperationExpression	& parameters -> volume_offset_z0		7635917	0					
ANR	7636939	UnaryOperator	&		7635917	0					
ANR	7636940	PtrMemberAccess	parameters -> volume_offset_z0		7635917	1					
ANR	7636941	Identifier	parameters		7635917	0					
ANR	7636942	Identifier	volume_offset_z0		7635917	1					
ANR	7636943	PrimaryExpression	3		7635917	1					
ANR	7636944	CompoundStatement		278:91:10517:10517	7635917	1					
ANR	7636945	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -d 'coordonnate of the reference grid' argument error !! [-d x0,y0,z0]\\n"" )"	550:16:21678:21801	7635917	0	True				
ANR	7636946	CallExpression	"fprintf ( stdout , ""[ERROR] -d 'coordonnate of the reference grid' argument error !! [-d x0,y0,z0]\\n"" )"		7635917	0					
ANR	7636947	Callee	fprintf		7635917	0					
ANR	7636948	Identifier	fprintf		7635917	0					
ANR	7636949	ArgumentList	stdout		7635917	1					
ANR	7636950	Argument	stdout		7635917	0					
ANR	7636951	Identifier	stdout		7635917	0					
ANR	7636952	Argument	"""[ERROR] -d 'coordonnate of the reference grid' argument error !! [-d x0,y0,z0]\\n"""		7635917	1					
ANR	7636953	PrimaryExpression	"""[ERROR] -d 'coordonnate of the reference grid' argument error !! [-d x0,y0,z0]\\n"""		7635917	0					
ANR	7636954	ReturnStatement	return 1 ;	552:16:21819:21827	7635917	1	True				
ANR	7636955	PrimaryExpression	1		7635917	0					
ANR	7636956	BreakStatement	break ;	555:8:21861:21866	7635917	41	True				
ANR	7636957	Label	case 'h' :	559:8:21946:21954	7635917	42	True				
ANR	7636958	CompoundStatement		288:18:10813:10813	7635917	43					
ANR	7636959	ExpressionStatement	encode_help_display ( )	560:12:22012:22033	7635917	0	True				
ANR	7636960	CallExpression	encode_help_display ( )		7635917	0					
ANR	7636961	Callee	encode_help_display		7635917	0					
ANR	7636962	Identifier	encode_help_display		7635917	0					
ANR	7636963	ArgumentList			7635917	1					
ANR	7636964	ReturnStatement	return 1 ;	561:12:22047:22055	7635917	1	True				
ANR	7636965	PrimaryExpression	1		7635917	0					
ANR	7636966	BreakStatement	break ;	563:8:22075:22080	7635917	44	True				
ANR	7636967	Label	case 'P' :	567:8:22160:22168	7635917	45	True				
ANR	7636968	CompoundStatement		300:12:11242:11262	7635917	46					
ANR	7636969	IdentifierDeclStatement	int numpocs = 0 ;	568:12:22202:22217	7635917	0	True				
ANR	7636970	IdentifierDecl	numpocs = 0		7635917	0					
ANR	7636971	IdentifierDeclType	int		7635917	0					
ANR	7636972	Identifier	numpocs		7635917	1					
ANR	7636973	AssignmentExpression	numpocs = 0		7635917	2		=			
ANR	7636974	Identifier	numpocs		7635917	0					
ANR	7636975	PrimaryExpression	0		7635917	1					
ANR	7636976	IdentifierDeclStatement	opj_poc_t * POC = NULL ;	569:12:22295:22316	7635917	1	True				
ANR	7636977	IdentifierDecl	* POC = NULL		7635917	0					
ANR	7636978	IdentifierDeclType	opj_poc_t *		7635917	0					
ANR	7636979	Identifier	POC		7635917	1					
ANR	7636980	AssignmentExpression	* POC = NULL		7635917	2		=			
ANR	7636981	Identifier	NULL		7635917	0					
ANR	7636982	Identifier	NULL		7635917	1					
ANR	7636983	IdentifierDeclStatement	char * s = opj_optarg ;	571:12:22385:22405	7635917	2	True				
ANR	7636984	IdentifierDecl	* s = opj_optarg		7635917	0					
ANR	7636985	IdentifierDeclType	char *		7635917	0					
ANR	7636986	Identifier	s		7635917	1					
ANR	7636987	AssignmentExpression	* s = opj_optarg		7635917	2		=			
ANR	7636988	Identifier	opj_optarg		7635917	0					
ANR	7636989	Identifier	opj_optarg		7635917	1					
ANR	7636990	ExpressionStatement	POC = parameters -> POC	572:12:22419:22440	7635917	3	True				
ANR	7636991	AssignmentExpression	POC = parameters -> POC		7635917	0		=			
ANR	7636992	Identifier	POC		7635917	0					
ANR	7636993	PtrMemberAccess	parameters -> POC		7635917	1					
ANR	7636994	Identifier	parameters		7635917	0					
ANR	7636995	Identifier	POC		7635917	1					
ANR	7636996	ExpressionStatement	"fprintf ( stdout , ""/----------------------------------\\\\\\n"" )"	574:12:22455:22513	7635917	4	True				
ANR	7636997	CallExpression	"fprintf ( stdout , ""/----------------------------------\\\\\\n"" )"		7635917	0					
ANR	7636998	Callee	fprintf		7635917	0					
ANR	7636999	Identifier	fprintf		7635917	0					
ANR	7637000	ArgumentList	stdout		7635917	1					
ANR	7637001	Argument	stdout		7635917	0					
ANR	7637002	Identifier	stdout		7635917	0					
ANR	7637003	Argument	"""/----------------------------------\\\\\\n"""		7635917	1					
ANR	7637004	PrimaryExpression	"""/----------------------------------\\\\\\n"""		7635917	0					
ANR	7637005	ExpressionStatement	"fprintf ( stdout , ""|  POC option not fully tested !!  |\\n"" )"	575:12:22527:22584	7635917	5	True				
ANR	7637006	CallExpression	"fprintf ( stdout , ""|  POC option not fully tested !!  |\\n"" )"		7635917	0					
ANR	7637007	Callee	fprintf		7635917	0					
ANR	7637008	Identifier	fprintf		7635917	0					
ANR	7637009	ArgumentList	stdout		7635917	1					
ANR	7637010	Argument	stdout		7635917	0					
ANR	7637011	Identifier	stdout		7635917	0					
ANR	7637012	Argument	"""|  POC option not fully tested !!  |\\n"""		7635917	1					
ANR	7637013	PrimaryExpression	"""|  POC option not fully tested !!  |\\n"""		7635917	0					
ANR	7637014	ExpressionStatement	"fprintf ( stdout , ""\\\\----------------------------------/\\n"" )"	576:12:22598:22656	7635917	6	True				
ANR	7637015	CallExpression	"fprintf ( stdout , ""\\\\----------------------------------/\\n"" )"		7635917	0					
ANR	7637016	Callee	fprintf		7635917	0					
ANR	7637017	Identifier	fprintf		7635917	0					
ANR	7637018	ArgumentList	stdout		7635917	1					
ANR	7637019	Argument	stdout		7635917	0					
ANR	7637020	Identifier	stdout		7635917	0					
ANR	7637021	Argument	"""\\\\----------------------------------/\\n"""		7635917	1					
ANR	7637022	PrimaryExpression	"""\\\\----------------------------------/\\n"""		7635917	0					
ANR	7637023	WhileStatement	"while ( sscanf ( s , ""T%d=%d,%d,%d,%d,%d,%s"" , & POC [ numpocs ] . tile , & POC [ numpocs ] . resno0 , & POC [ numpocs ] . compno0 , & POC [ numpocs ] . layno1 , & POC [ numpocs ] . resno1 , & POC [ numpocs ] . compno1 , POC [ numpocs ] . progorder ) == 7 )"		7635917	7					
ANR	7637024	Condition	"sscanf ( s , ""T%d=%d,%d,%d,%d,%d,%s"" , & POC [ numpocs ] . tile , & POC [ numpocs ] . resno0 , & POC [ numpocs ] . compno0 , & POC [ numpocs ] . layno1 , & POC [ numpocs ] . resno1 , & POC [ numpocs ] . compno1 , POC [ numpocs ] . progorder ) == 7"	578:19:22678:22950	7635917	0	True				
ANR	7637025	EqualityExpression	"sscanf ( s , ""T%d=%d,%d,%d,%d,%d,%s"" , & POC [ numpocs ] . tile , & POC [ numpocs ] . resno0 , & POC [ numpocs ] . compno0 , & POC [ numpocs ] . layno1 , & POC [ numpocs ] . resno1 , & POC [ numpocs ] . compno1 , POC [ numpocs ] . progorder ) == 7"		7635917	0		==			
ANR	7637026	CallExpression	"sscanf ( s , ""T%d=%d,%d,%d,%d,%d,%s"" , & POC [ numpocs ] . tile , & POC [ numpocs ] . resno0 , & POC [ numpocs ] . compno0 , & POC [ numpocs ] . layno1 , & POC [ numpocs ] . resno1 , & POC [ numpocs ] . compno1 , POC [ numpocs ] . progorder )"		7635917	0					
ANR	7637027	Callee	sscanf		7635917	0					
ANR	7637028	Identifier	sscanf		7635917	0					
ANR	7637029	ArgumentList	s		7635917	1					
ANR	7637030	Argument	s		7635917	0					
ANR	7637031	Identifier	s		7635917	0					
ANR	7637032	Argument	"""T%d=%d,%d,%d,%d,%d,%s"""		7635917	1					
ANR	7637033	PrimaryExpression	"""T%d=%d,%d,%d,%d,%d,%s"""		7635917	0					
ANR	7637034	Argument	& POC [ numpocs ] . tile		7635917	2					
ANR	7637035	UnaryOperationExpression	& POC [ numpocs ] . tile		7635917	0					
ANR	7637036	UnaryOperator	&		7635917	0					
ANR	7637037	MemberAccess	POC [ numpocs ] . tile		7635917	1					
ANR	7637038	ArrayIndexing	POC [ numpocs ]		7635917	0					
ANR	7637039	Identifier	POC		7635917	0					
ANR	7637040	Identifier	numpocs		7635917	1					
ANR	7637041	Identifier	tile		7635917	1					
ANR	7637042	Argument	& POC [ numpocs ] . resno0		7635917	3					
ANR	7637043	UnaryOperationExpression	& POC [ numpocs ] . resno0		7635917	0					
ANR	7637044	UnaryOperator	&		7635917	0					
ANR	7637045	MemberAccess	POC [ numpocs ] . resno0		7635917	1					
ANR	7637046	ArrayIndexing	POC [ numpocs ]		7635917	0					
ANR	7637047	Identifier	POC		7635917	0					
ANR	7637048	Identifier	numpocs		7635917	1					
ANR	7637049	Identifier	resno0		7635917	1					
ANR	7637050	Argument	& POC [ numpocs ] . compno0		7635917	4					
ANR	7637051	UnaryOperationExpression	& POC [ numpocs ] . compno0		7635917	0					
ANR	7637052	UnaryOperator	&		7635917	0					
ANR	7637053	MemberAccess	POC [ numpocs ] . compno0		7635917	1					
ANR	7637054	ArrayIndexing	POC [ numpocs ]		7635917	0					
ANR	7637055	Identifier	POC		7635917	0					
ANR	7637056	Identifier	numpocs		7635917	1					
ANR	7637057	Identifier	compno0		7635917	1					
ANR	7637058	Argument	& POC [ numpocs ] . layno1		7635917	5					
ANR	7637059	UnaryOperationExpression	& POC [ numpocs ] . layno1		7635917	0					
ANR	7637060	UnaryOperator	&		7635917	0					
ANR	7637061	MemberAccess	POC [ numpocs ] . layno1		7635917	1					
ANR	7637062	ArrayIndexing	POC [ numpocs ]		7635917	0					
ANR	7637063	Identifier	POC		7635917	0					
ANR	7637064	Identifier	numpocs		7635917	1					
ANR	7637065	Identifier	layno1		7635917	1					
ANR	7637066	Argument	& POC [ numpocs ] . resno1		7635917	6					
ANR	7637067	UnaryOperationExpression	& POC [ numpocs ] . resno1		7635917	0					
ANR	7637068	UnaryOperator	&		7635917	0					
ANR	7637069	MemberAccess	POC [ numpocs ] . resno1		7635917	1					
ANR	7637070	ArrayIndexing	POC [ numpocs ]		7635917	0					
ANR	7637071	Identifier	POC		7635917	0					
ANR	7637072	Identifier	numpocs		7635917	1					
ANR	7637073	Identifier	resno1		7635917	1					
ANR	7637074	Argument	& POC [ numpocs ] . compno1		7635917	7					
ANR	7637075	UnaryOperationExpression	& POC [ numpocs ] . compno1		7635917	0					
ANR	7637076	UnaryOperator	&		7635917	0					
ANR	7637077	MemberAccess	POC [ numpocs ] . compno1		7635917	1					
ANR	7637078	ArrayIndexing	POC [ numpocs ]		7635917	0					
ANR	7637079	Identifier	POC		7635917	0					
ANR	7637080	Identifier	numpocs		7635917	1					
ANR	7637081	Identifier	compno1		7635917	1					
ANR	7637082	Argument	POC [ numpocs ] . progorder		7635917	8					
ANR	7637083	MemberAccess	POC [ numpocs ] . progorder		7635917	0					
ANR	7637084	ArrayIndexing	POC [ numpocs ]		7635917	0					
ANR	7637085	Identifier	POC		7635917	0					
ANR	7637086	Identifier	numpocs		7635917	1					
ANR	7637087	Identifier	progorder		7635917	1					
ANR	7637088	PrimaryExpression	7		7635917	1					
ANR	7637089	CompoundStatement		310:79:11810:11810	7635917	1					
ANR	7637090	ExpressionStatement	POC [ numpocs ] . prg = give_progression ( POC [ numpocs ] . progorder )	582:16:22971:23030	7635917	0	True				
ANR	7637091	AssignmentExpression	POC [ numpocs ] . prg = give_progression ( POC [ numpocs ] . progorder )		7635917	0		=			
ANR	7637092	MemberAccess	POC [ numpocs ] . prg		7635917	0					
ANR	7637093	ArrayIndexing	POC [ numpocs ]		7635917	0					
ANR	7637094	Identifier	POC		7635917	0					
ANR	7637095	Identifier	numpocs		7635917	1					
ANR	7637096	Identifier	prg		7635917	1					
ANR	7637097	CallExpression	give_progression ( POC [ numpocs ] . progorder )		7635917	1					
ANR	7637098	Callee	give_progression		7635917	0					
ANR	7637099	Identifier	give_progression		7635917	0					
ANR	7637100	ArgumentList	POC [ numpocs ] . progorder		7635917	1					
ANR	7637101	Argument	POC [ numpocs ] . progorder		7635917	0					
ANR	7637102	MemberAccess	POC [ numpocs ] . progorder		7635917	0					
ANR	7637103	ArrayIndexing	POC [ numpocs ]		7635917	0					
ANR	7637104	Identifier	POC		7635917	0					
ANR	7637105	Identifier	numpocs		7635917	1					
ANR	7637106	Identifier	progorder		7635917	1					
ANR	7637107	ExpressionStatement	numpocs ++	584:16:23089:23098	7635917	1	True				
ANR	7637108	PostIncDecOperationExpression	numpocs ++		7635917	0					
ANR	7637109	Identifier	numpocs		7635917	0					
ANR	7637110	IncDec	++		7635917	1					
ANR	7637111	WhileStatement	while ( * s && * s != '/' )		7635917	2					
ANR	7637112	Condition	* s && * s != '/'	585:23:23123:23137	7635917	0	True				
ANR	7637113	AndExpression	* s && * s != '/'		7635917	0		&&			
ANR	7637114	UnaryOperationExpression	* s		7635917	0					
ANR	7637115	UnaryOperator	*		7635917	0					
ANR	7637116	Identifier	s		7635917	1					
ANR	7637117	EqualityExpression	* s != '/'		7635917	1		!=			
ANR	7637118	UnaryOperationExpression	* s		7635917	0					
ANR	7637119	UnaryOperator	*		7635917	0					
ANR	7637120	Identifier	s		7635917	1					
ANR	7637121	PrimaryExpression	'/'		7635917	1					
ANR	7637122	CompoundStatement		314:40:11997:11997	7635917	1					
ANR	7637123	ExpressionStatement	s ++	586:20:23162:23165	7635917	0	True				
ANR	7637124	PostIncDecOperationExpression	s ++		7635917	0					
ANR	7637125	Identifier	s		7635917	0					
ANR	7637126	IncDec	++		7635917	1					
ANR	7637127	IfStatement	if ( ! * s )		7635917	3					
ANR	7637128	Condition	! * s	588:20:23205:23207	7635917	0	True				
ANR	7637129	UnaryOperationExpression	! * s		7635917	0					
ANR	7637130	UnaryOperator	!		7635917	0					
ANR	7637131	UnaryOperationExpression	* s		7635917	1					
ANR	7637132	UnaryOperator	*		7635917	0					
ANR	7637133	Identifier	s		7635917	1					
ANR	7637134	CompoundStatement		317:25:12067:12067	7635917	1					
ANR	7637135	BreakStatement	break ;	589:20:23232:23237	7635917	0	True				
ANR	7637136	ExpressionStatement	s ++	591:16:23273:23276	7635917	4	True				
ANR	7637137	PostIncDecOperationExpression	s ++		7635917	0					
ANR	7637138	Identifier	s		7635917	0					
ANR	7637139	IncDec	++		7635917	1					
ANR	7637140	ExpressionStatement	parameters -> numpocs = numpocs	593:12:23304:23333	7635917	8	True				
ANR	7637141	AssignmentExpression	parameters -> numpocs = numpocs		7635917	0		=			
ANR	7637142	PtrMemberAccess	parameters -> numpocs		7635917	0					
ANR	7637143	Identifier	parameters		7635917	0					
ANR	7637144	Identifier	numpocs		7635917	1					
ANR	7637145	Identifier	numpocs		7635917	1					
ANR	7637146	BreakStatement	break ;	595:8:23353:23358	7635917	47	True				
ANR	7637147	Label	case 'S' :	599:8:23439:23447	7635917	48	True				
ANR	7637148	CompoundStatement		328:18:12306:12306	7635917	49					
ANR	7637149	ExpressionStatement	parameters -> csty |= 0x02	600:12:23488:23512	7635917	0	True				
ANR	7637150	AssignmentExpression	parameters -> csty |= 0x02		7635917	0		|=			
ANR	7637151	PtrMemberAccess	parameters -> csty		7635917	0					
ANR	7637152	Identifier	parameters		7635917	0					
ANR	7637153	Identifier	csty		7635917	1					
ANR	7637154	PrimaryExpression	0x02		7635917	1					
ANR	7637155	BreakStatement	break ;	602:8:23532:23537	7635917	50	True				
ANR	7637156	Label	case 'E' :	606:8:23618:23626	7635917	51	True				
ANR	7637157	CompoundStatement		335:18:12485:12485	7635917	52					
ANR	7637158	ExpressionStatement	parameters -> csty |= 0x04	607:12:23667:23691	7635917	0	True				
ANR	7637159	AssignmentExpression	parameters -> csty |= 0x04		7635917	0		|=			
ANR	7637160	PtrMemberAccess	parameters -> csty		7635917	0					
ANR	7637161	Identifier	parameters		7635917	0					
ANR	7637162	Identifier	csty		7635917	1					
ANR	7637163	PrimaryExpression	0x04		7635917	1					
ANR	7637164	BreakStatement	break ;	609:8:23711:23716	7635917	53	True				
ANR	7637165	Label	case 'M' :	613:8:23797:23805	7635917	54	True				
ANR	7637166	CompoundStatement		342:18:12664:12664	7635917	55					
ANR	7637167	ExpressionStatement	"fprintf ( stdout , ""[INFO] Mode switch option not fully tested !!\\n"" )"	614:12:23860:23926	7635917	0	True				
ANR	7637168	CallExpression	"fprintf ( stdout , ""[INFO] Mode switch option not fully tested !!\\n"" )"		7635917	0					
ANR	7637169	Callee	fprintf		7635917	0					
ANR	7637170	Identifier	fprintf		7635917	0					
ANR	7637171	ArgumentList	stdout		7635917	1					
ANR	7637172	Argument	stdout		7635917	0					
ANR	7637173	Identifier	stdout		7635917	0					
ANR	7637174	Argument	"""[INFO] Mode switch option not fully tested !!\\n"""		7635917	1					
ANR	7637175	PrimaryExpression	"""[INFO] Mode switch option not fully tested !!\\n"""		7635917	0					
ANR	7637176	ExpressionStatement	value = 0	615:12:23940:23949	7635917	1	True				
ANR	7637177	AssignmentExpression	value = 0		7635917	0		=			
ANR	7637178	Identifier	value		7635917	0					
ANR	7637179	PrimaryExpression	0		7635917	1					
ANR	7637180	IfStatement	"if ( sscanf ( opj_optarg , ""%d"" , & value ) == 1 )"		7635917	2					
ANR	7637181	Condition	"sscanf ( opj_optarg , ""%d"" , & value ) == 1"	616:16:23967:24003	7635917	0	True				
ANR	7637182	EqualityExpression	"sscanf ( opj_optarg , ""%d"" , & value ) == 1"		7635917	0		==			
ANR	7637183	CallExpression	"sscanf ( opj_optarg , ""%d"" , & value )"		7635917	0					
ANR	7637184	Callee	sscanf		7635917	0					
ANR	7637185	Identifier	sscanf		7635917	0					
ANR	7637186	ArgumentList	opj_optarg		7635917	1					
ANR	7637187	Argument	opj_optarg		7635917	0					
ANR	7637188	Identifier	opj_optarg		7635917	0					
ANR	7637189	Argument	"""%d"""		7635917	1					
ANR	7637190	PrimaryExpression	"""%d"""		7635917	0					
ANR	7637191	Argument	& value		7635917	2					
ANR	7637192	UnaryOperationExpression	& value		7635917	0					
ANR	7637193	UnaryOperator	&		7635917	0					
ANR	7637194	Identifier	value		7635917	1					
ANR	7637195	PrimaryExpression	1		7635917	1					
ANR	7637196	CompoundStatement		345:55:12863:12863	7635917	1					
ANR	7637197	ForStatement	for ( i = 0 ; i <= 6 ; i ++ )		7635917	0					
ANR	7637198	ForInit	i = 0 ;	617:21:24029:24034	7635917	0	True				
ANR	7637199	AssignmentExpression	i = 0		7635917	0		=			
ANR	7637200	Identifier	i		7635917	0					
ANR	7637201	PrimaryExpression	0		7635917	1					
ANR	7637202	Condition	i <= 6	617:28:24036:24041	7635917	1	True				
ANR	7637203	RelationalExpression	i <= 6		7635917	0		<=			
ANR	7637204	Identifier	i		7635917	0					
ANR	7637205	PrimaryExpression	6		7635917	1					
ANR	7637206	PostIncDecOperationExpression	i ++	617:36:24044:24046	7635917	2	True				
ANR	7637207	Identifier	i		7635917	0					
ANR	7637208	IncDec	++		7635917	1					
ANR	7637209	CompoundStatement		347:20:12928:12956	7635917	3					
ANR	7637210	IdentifierDeclStatement	int cache = value & ( 1 << i ) ;	618:20:24071:24099	7635917	0	True				
ANR	7637211	IdentifierDecl	cache = value & ( 1 << i )		7635917	0					
ANR	7637212	IdentifierDeclType	int		7635917	0					
ANR	7637213	Identifier	cache		7635917	1					
ANR	7637214	AssignmentExpression	cache = value & ( 1 << i )		7635917	2		=			
ANR	7637215	Identifier	cache		7635917	0					
ANR	7637216	BitAndExpression	value & ( 1 << i )		7635917	1		&			
ANR	7637217	Identifier	value		7635917	0					
ANR	7637218	ShiftExpression	1 << i		7635917	1		<<			
ANR	7637219	PrimaryExpression	1		7635917	0					
ANR	7637220	Identifier	i		7635917	1					
ANR	7637221	IfStatement	if ( cache )		7635917	1					
ANR	7637222	Condition	cache	619:24:24125:24129	7635917	0	True				
ANR	7637223	Identifier	cache		7635917	0					
ANR	7637224	CompoundStatement		348:31:12989:12989	7635917	1					
ANR	7637225	ExpressionStatement	parameters -> mode |= ( 1 << i )	620:24:24158:24186	7635917	0	True				
ANR	7637226	AssignmentExpression	parameters -> mode |= ( 1 << i )		7635917	0		|=			
ANR	7637227	PtrMemberAccess	parameters -> mode		7635917	0					
ANR	7637228	Identifier	parameters		7635917	0					
ANR	7637229	Identifier	mode		7635917	1					
ANR	7637230	ShiftExpression	1 << i		7635917	1		<<			
ANR	7637231	PrimaryExpression	1		7635917	0					
ANR	7637232	Identifier	i		7635917	1					
ANR	7637233	BreakStatement	break ;	625:8:24260:24265	7635917	56	True				
ANR	7637234	Label	case 'D' :	629:8:24346:24354	7635917	57	True				
ANR	7637235	CompoundStatement		358:18:13213:13213	7635917	58					
ANR	7637236	IfStatement	"if ( sscanf ( opj_optarg , ""%d"" , & parameters -> dcoffset ) != 1 )"		7635917	0					
ANR	7637237	Condition	"sscanf ( opj_optarg , ""%d"" , & parameters -> dcoffset ) != 1"	630:16:24392:24443	7635917	0	True				
ANR	7637238	EqualityExpression	"sscanf ( opj_optarg , ""%d"" , & parameters -> dcoffset ) != 1"		7635917	0		!=			
ANR	7637239	CallExpression	"sscanf ( opj_optarg , ""%d"" , & parameters -> dcoffset )"		7635917	0					
ANR	7637240	Callee	sscanf		7635917	0					
ANR	7637241	Identifier	sscanf		7635917	0					
ANR	7637242	ArgumentList	opj_optarg		7635917	1					
ANR	7637243	Argument	opj_optarg		7635917	0					
ANR	7637244	Identifier	opj_optarg		7635917	0					
ANR	7637245	Argument	"""%d"""		7635917	1					
ANR	7637246	PrimaryExpression	"""%d"""		7635917	0					
ANR	7637247	Argument	& parameters -> dcoffset		7635917	2					
ANR	7637248	UnaryOperationExpression	& parameters -> dcoffset		7635917	0					
ANR	7637249	UnaryOperator	&		7635917	0					
ANR	7637250	PtrMemberAccess	parameters -> dcoffset		7635917	1					
ANR	7637251	Identifier	parameters		7635917	0					
ANR	7637252	Identifier	dcoffset		7635917	1					
ANR	7637253	PrimaryExpression	1		7635917	1					
ANR	7637254	CompoundStatement		359:70:13303:13303	7635917	1					
ANR	7637255	ExpressionStatement	"fprintf ( stdout , ""[ERROR] DC offset error !! [-D %d]\\n"" , parameters -> dcoffset )"	631:16:24464:24541	7635917	0	True				
ANR	7637256	CallExpression	"fprintf ( stdout , ""[ERROR] DC offset error !! [-D %d]\\n"" , parameters -> dcoffset )"		7635917	0					
ANR	7637257	Callee	fprintf		7635917	0					
ANR	7637258	Identifier	fprintf		7635917	0					
ANR	7637259	ArgumentList	stdout		7635917	1					
ANR	7637260	Argument	stdout		7635917	0					
ANR	7637261	Identifier	stdout		7635917	0					
ANR	7637262	Argument	"""[ERROR] DC offset error !! [-D %d]\\n"""		7635917	1					
ANR	7637263	PrimaryExpression	"""[ERROR] DC offset error !! [-D %d]\\n"""		7635917	0					
ANR	7637264	Argument	parameters -> dcoffset		7635917	2					
ANR	7637265	PtrMemberAccess	parameters -> dcoffset		7635917	0					
ANR	7637266	Identifier	parameters		7635917	0					
ANR	7637267	Identifier	dcoffset		7635917	1					
ANR	7637268	ReturnStatement	return 1 ;	632:16:24559:24567	7635917	1	True				
ANR	7637269	PrimaryExpression	1		7635917	0					
ANR	7637270	BreakStatement	break ;	635:8:24601:24606	7635917	59	True				
ANR	7637271	Label	case 'R' :	639:8:24687:24695	7635917	60	True				
ANR	7637272	CompoundStatement		368:18:13554:13554	7635917	61					
ANR	7637273	IfStatement	"if ( sscanf ( opj_optarg , ""OI:c=%d,U=%d"" , & parameters -> roi_compno , & parameters -> roi_shift ) != 2 )"		7635917	0					
ANR	7637274	Condition	"sscanf ( opj_optarg , ""OI:c=%d,U=%d"" , & parameters -> roi_compno , & parameters -> roi_shift ) != 2"	640:16:24733:24843	7635917	0	True				
ANR	7637275	EqualityExpression	"sscanf ( opj_optarg , ""OI:c=%d,U=%d"" , & parameters -> roi_compno , & parameters -> roi_shift ) != 2"		7635917	0		!=			
ANR	7637276	CallExpression	"sscanf ( opj_optarg , ""OI:c=%d,U=%d"" , & parameters -> roi_compno , & parameters -> roi_shift )"		7635917	0					
ANR	7637277	Callee	sscanf		7635917	0					
ANR	7637278	Identifier	sscanf		7635917	0					
ANR	7637279	ArgumentList	opj_optarg		7635917	1					
ANR	7637280	Argument	opj_optarg		7635917	0					
ANR	7637281	Identifier	opj_optarg		7635917	0					
ANR	7637282	Argument	"""OI:c=%d,U=%d"""		7635917	1					
ANR	7637283	PrimaryExpression	"""OI:c=%d,U=%d"""		7635917	0					
ANR	7637284	Argument	& parameters -> roi_compno		7635917	2					
ANR	7637285	UnaryOperationExpression	& parameters -> roi_compno		7635917	0					
ANR	7637286	UnaryOperator	&		7635917	0					
ANR	7637287	PtrMemberAccess	parameters -> roi_compno		7635917	1					
ANR	7637288	Identifier	parameters		7635917	0					
ANR	7637289	Identifier	roi_compno		7635917	1					
ANR	7637290	Argument	& parameters -> roi_shift		7635917	3					
ANR	7637291	UnaryOperationExpression	& parameters -> roi_shift		7635917	0					
ANR	7637292	UnaryOperator	&		7635917	0					
ANR	7637293	PtrMemberAccess	parameters -> roi_shift		7635917	1					
ANR	7637294	Identifier	parameters		7635917	0					
ANR	7637295	Identifier	roi_shift		7635917	1					
ANR	7637296	PrimaryExpression	2		7635917	1					
ANR	7637297	CompoundStatement		370:53:13703:13703	7635917	1					
ANR	7637298	ExpressionStatement	"fprintf ( stdout , ""[ERROR] ROI error !! [-ROI:c='compno',U='shift']\\n"" )"	642:16:24864:24933	7635917	0	True				
ANR	7637299	CallExpression	"fprintf ( stdout , ""[ERROR] ROI error !! [-ROI:c='compno',U='shift']\\n"" )"		7635917	0					
ANR	7637300	Callee	fprintf		7635917	0					
ANR	7637301	Identifier	fprintf		7635917	0					
ANR	7637302	ArgumentList	stdout		7635917	1					
ANR	7637303	Argument	stdout		7635917	0					
ANR	7637304	Identifier	stdout		7635917	0					
ANR	7637305	Argument	"""[ERROR] ROI error !! [-ROI:c='compno',U='shift']\\n"""		7635917	1					
ANR	7637306	PrimaryExpression	"""[ERROR] ROI error !! [-ROI:c='compno',U='shift']\\n"""		7635917	0					
ANR	7637307	ReturnStatement	return 1 ;	643:16:24951:24959	7635917	1	True				
ANR	7637308	PrimaryExpression	1		7635917	0					
ANR	7637309	BreakStatement	break ;	646:8:24993:24998	7635917	62	True				
ANR	7637310	Label	case 'l' :	650:8:25079:25087	7635917	63	True				
ANR	7637311	CompoundStatement		379:18:13946:13946	7635917	64					
ANR	7637312	IfStatement	"if ( sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tx0 , & parameters -> cp_ty0 , & parameters -> cp_tz0 ) != 3 )"		7635917	0					
ANR	7637313	Condition	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tx0 , & parameters -> cp_ty0 , & parameters -> cp_tz0 ) != 3"	651:16:25133:25253	7635917	0	True				
ANR	7637314	EqualityExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tx0 , & parameters -> cp_ty0 , & parameters -> cp_tz0 ) != 3"		7635917	0		!=			
ANR	7637315	CallExpression	"sscanf ( opj_optarg , ""%d,%d,%d"" , & parameters -> cp_tx0 , & parameters -> cp_ty0 , & parameters -> cp_tz0 )"		7635917	0					
ANR	7637316	Callee	sscanf		7635917	0					
ANR	7637317	Identifier	sscanf		7635917	0					
ANR	7637318	ArgumentList	opj_optarg		7635917	1					
ANR	7637319	Argument	opj_optarg		7635917	0					
ANR	7637320	Identifier	opj_optarg		7635917	0					
ANR	7637321	Argument	"""%d,%d,%d"""		7635917	1					
ANR	7637322	PrimaryExpression	"""%d,%d,%d"""		7635917	0					
ANR	7637323	Argument	& parameters -> cp_tx0		7635917	2					
ANR	7637324	UnaryOperationExpression	& parameters -> cp_tx0		7635917	0					
ANR	7637325	UnaryOperator	&		7635917	0					
ANR	7637326	PtrMemberAccess	parameters -> cp_tx0		7635917	1					
ANR	7637327	Identifier	parameters		7635917	0					
ANR	7637328	Identifier	cp_tx0		7635917	1					
ANR	7637329	Argument	& parameters -> cp_ty0		7635917	3					
ANR	7637330	UnaryOperationExpression	& parameters -> cp_ty0		7635917	0					
ANR	7637331	UnaryOperator	&		7635917	0					
ANR	7637332	PtrMemberAccess	parameters -> cp_ty0		7635917	1					
ANR	7637333	Identifier	parameters		7635917	0					
ANR	7637334	Identifier	cp_ty0		7635917	1					
ANR	7637335	Argument	& parameters -> cp_tz0		7635917	4					
ANR	7637336	UnaryOperationExpression	& parameters -> cp_tz0		7635917	0					
ANR	7637337	UnaryOperator	&		7635917	0					
ANR	7637338	PtrMemberAccess	parameters -> cp_tz0		7635917	1					
ANR	7637339	Identifier	parameters		7635917	0					
ANR	7637340	Identifier	cp_tz0		7635917	1					
ANR	7637341	PrimaryExpression	3		7635917	1					
ANR	7637342	CompoundStatement		381:50:14113:14113	7635917	1					
ANR	7637343	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -l 'tile offset' argument error !! [-l X0,Y0,Z0]"" )"	653:16:25274:25349	7635917	0	True				
ANR	7637344	CallExpression	"fprintf ( stdout , ""[ERROR] -l 'tile offset' argument error !! [-l X0,Y0,Z0]"" )"		7635917	0					
ANR	7637345	Callee	fprintf		7635917	0					
ANR	7637346	Identifier	fprintf		7635917	0					
ANR	7637347	ArgumentList	stdout		7635917	1					
ANR	7637348	Argument	stdout		7635917	0					
ANR	7637349	Identifier	stdout		7635917	0					
ANR	7637350	Argument	"""[ERROR] -l 'tile offset' argument error !! [-l X0,Y0,Z0]"""		7635917	1					
ANR	7637351	PrimaryExpression	"""[ERROR] -l 'tile offset' argument error !! [-l X0,Y0,Z0]"""		7635917	0					
ANR	7637352	ReturnStatement	return 1 ;	654:16:25367:25375	7635917	1	True				
ANR	7637353	PrimaryExpression	1		7635917	0					
ANR	7637354	BreakStatement	break ;	657:8:25409:25414	7635917	65	True				
ANR	7637355	Label	case 'C' :	676:8:26032:26040	7635917	66	True				
ANR	7637356	CompoundStatement		406:12:14954:14968	7635917	67					
ANR	7637357	IdentifierDeclStatement	char coding [ 3 ] ;	677:12:26097:26111	7635917	0	True				
ANR	7637358	IdentifierDecl	coding [ 3 ]		7635917	0					
ANR	7637359	IdentifierDeclType	char [ 3 ]		7635917	0					
ANR	7637360	Identifier	coding		7635917	1					
ANR	7637361	PrimaryExpression	3		7635917	2					
ANR	7637362	ExpressionStatement	"strncpy ( coding , opj_optarg , 3 )"	679:12:26126:26156	7635917	1	True				
ANR	7637363	CallExpression	"strncpy ( coding , opj_optarg , 3 )"		7635917	0					
ANR	7637364	Callee	strncpy		7635917	0					
ANR	7637365	Identifier	strncpy		7635917	0					
ANR	7637366	ArgumentList	coding		7635917	1					
ANR	7637367	Argument	coding		7635917	0					
ANR	7637368	Identifier	coding		7635917	0					
ANR	7637369	Argument	opj_optarg		7635917	1					
ANR	7637370	Identifier	opj_optarg		7635917	0					
ANR	7637371	Argument	3		7635917	2					
ANR	7637372	PrimaryExpression	3		7635917	0					
ANR	7637373	ExpressionStatement	parameters -> encoding_format = give_coding ( coding )	680:12:26170:26219	7635917	2	True				
ANR	7637374	AssignmentExpression	parameters -> encoding_format = give_coding ( coding )		7635917	0		=			
ANR	7637375	PtrMemberAccess	parameters -> encoding_format		7635917	0					
ANR	7637376	Identifier	parameters		7635917	0					
ANR	7637377	Identifier	encoding_format		7635917	1					
ANR	7637378	CallExpression	give_coding ( coding )		7635917	1					
ANR	7637379	Callee	give_coding		7635917	0					
ANR	7637380	Identifier	give_coding		7635917	0					
ANR	7637381	ArgumentList	coding		7635917	1					
ANR	7637382	Argument	coding		7635917	0					
ANR	7637383	Identifier	coding		7635917	0					
ANR	7637384	IfStatement	if ( parameters -> encoding_format == - 1 )		7635917	3					
ANR	7637385	Condition	parameters -> encoding_format == - 1	681:16:26237:26269	7635917	0	True				
ANR	7637386	EqualityExpression	parameters -> encoding_format == - 1		7635917	0		==			
ANR	7637387	PtrMemberAccess	parameters -> encoding_format		7635917	0					
ANR	7637388	Identifier	parameters		7635917	0					
ANR	7637389	Identifier	encoding_format		7635917	1					
ANR	7637390	UnaryOperationExpression	- 1		7635917	1					
ANR	7637391	UnaryOperator	-		7635917	0					
ANR	7637392	PrimaryExpression	1		7635917	1					
ANR	7637393	CompoundStatement		410:51:15129:15129	7635917	1					
ANR	7637394	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -C 'Coding algorithm' argument error !! [-C 2EB, 3EB, 2GR, 3GR or GRI only]"" )"	682:16:26290:26416	7635917	0	True				
ANR	7637395	CallExpression	"fprintf ( stdout , ""[ERROR] -C 'Coding algorithm' argument error !! [-C 2EB, 3EB, 2GR, 3GR or GRI only]"" )"		7635917	0					
ANR	7637396	Callee	fprintf		7635917	0					
ANR	7637397	Identifier	fprintf		7635917	0					
ANR	7637398	ArgumentList	stdout		7635917	1					
ANR	7637399	Argument	stdout		7635917	0					
ANR	7637400	Identifier	stdout		7635917	0					
ANR	7637401	Argument	"""[ERROR] -C 'Coding algorithm' argument error !! [-C 2EB, 3EB, 2GR, 3GR or GRI only]"""		7635917	1					
ANR	7637402	PrimaryExpression	"""[ERROR] -C 'Coding algorithm' argument error !! [-C 2EB, 3EB, 2GR, 3GR or GRI only]"""		7635917	0					
ANR	7637403	ReturnStatement	return 1 ;	684:16:26434:26442	7635917	1	True				
ANR	7637404	PrimaryExpression	1		7635917	0					
ANR	7637405	BreakStatement	break ;	687:8:26476:26481	7635917	68	True				
ANR	7637406	Label	case 'I' :	691:8:26562:26570	7635917	69	True				
ANR	7637407	CompoundStatement		420:18:15429:15429	7635917	70					
ANR	7637408	ExpressionStatement	parameters -> irreversible = 1	692:12:26618:26646	7635917	0	True				
ANR	7637409	AssignmentExpression	parameters -> irreversible = 1		7635917	0		=			
ANR	7637410	PtrMemberAccess	parameters -> irreversible		7635917	0					
ANR	7637411	Identifier	parameters		7635917	0					
ANR	7637412	Identifier	irreversible		7635917	1					
ANR	7637413	PrimaryExpression	1		7635917	1					
ANR	7637414	BreakStatement	break ;	694:8:26666:26671	7635917	71	True				
ANR	7637415	Label	default :	696:8:26682:26689	7635917	72	True				
ANR	7637416	Identifier	default		7635917	0					
ANR	7637417	ExpressionStatement	"fprintf ( stdout , ""[ERROR] This option is not valid \\""-%c %s\\""\\n"" , c , opj_optarg )"	697:12:26703:26782	7635917	73	True				
ANR	7637418	CallExpression	"fprintf ( stdout , ""[ERROR] This option is not valid \\""-%c %s\\""\\n"" , c , opj_optarg )"		7635917	0					
ANR	7637419	Callee	fprintf		7635917	0					
ANR	7637420	Identifier	fprintf		7635917	0					
ANR	7637421	ArgumentList	stdout		7635917	1					
ANR	7637422	Argument	stdout		7635917	0					
ANR	7637423	Identifier	stdout		7635917	0					
ANR	7637424	Argument	"""[ERROR] This option is not valid \\""-%c %s\\""\\n"""		7635917	1					
ANR	7637425	PrimaryExpression	"""[ERROR] This option is not valid \\""-%c %s\\""\\n"""		7635917	0					
ANR	7637426	Argument	c		7635917	2					
ANR	7637427	Identifier	c		7635917	0					
ANR	7637428	Argument	opj_optarg		7635917	3					
ANR	7637429	Identifier	opj_optarg		7635917	0					
ANR	7637430	ReturnStatement	return 1 ;	698:12:26796:26804	7635917	74	True				
ANR	7637431	PrimaryExpression	1		7635917	0					
ANR	7637432	IfStatement	if ( ( parameters -> infile [ 0 ] == 0 ) || ( parameters -> outfile [ 0 ] == 0 ) )		7635917	2					
ANR	7637433	Condition	( parameters -> infile [ 0 ] == 0 ) || ( parameters -> outfile [ 0 ] == 0 )	704:8:26868:26928	7635917	0	True				
ANR	7637434	OrExpression	( parameters -> infile [ 0 ] == 0 ) || ( parameters -> outfile [ 0 ] == 0 )		7635917	0		||			
ANR	7637435	EqualityExpression	parameters -> infile [ 0 ] == 0		7635917	0		==			
ANR	7637436	ArrayIndexing	parameters -> infile [ 0 ]		7635917	0					
ANR	7637437	PtrMemberAccess	parameters -> infile		7635917	0					
ANR	7637438	Identifier	parameters		7635917	0					
ANR	7637439	Identifier	infile		7635917	1					
ANR	7637440	PrimaryExpression	0		7635917	1					
ANR	7637441	PrimaryExpression	0		7635917	1					
ANR	7637442	EqualityExpression	parameters -> outfile [ 0 ] == 0		7635917	1		==			
ANR	7637443	ArrayIndexing	parameters -> outfile [ 0 ]		7635917	0					
ANR	7637444	PtrMemberAccess	parameters -> outfile		7635917	0					
ANR	7637445	Identifier	parameters		7635917	0					
ANR	7637446	Identifier	outfile		7635917	1					
ANR	7637447	PrimaryExpression	0		7635917	1					
ANR	7637448	PrimaryExpression	0		7635917	1					
ANR	7637449	CompoundStatement		433:71:15788:15788	7635917	1					
ANR	7637450	ExpressionStatement	"fprintf ( stdout , ""usage: jp3d_vm_enc -i volume-file -o jp3d-file (+ options)\\n"" )"	705:8:26941:27020	7635917	0	True				
ANR	7637451	CallExpression	"fprintf ( stdout , ""usage: jp3d_vm_enc -i volume-file -o jp3d-file (+ options)\\n"" )"		7635917	0					
ANR	7637452	Callee	fprintf		7635917	0					
ANR	7637453	Identifier	fprintf		7635917	0					
ANR	7637454	ArgumentList	stdout		7635917	1					
ANR	7637455	Argument	stdout		7635917	0					
ANR	7637456	Identifier	stdout		7635917	0					
ANR	7637457	Argument	"""usage: jp3d_vm_enc -i volume-file -o jp3d-file (+ options)\\n"""		7635917	1					
ANR	7637458	PrimaryExpression	"""usage: jp3d_vm_enc -i volume-file -o jp3d-file (+ options)\\n"""		7635917	0					
ANR	7637459	ReturnStatement	return 1 ;	706:8:27030:27038	7635917	1	True				
ANR	7637460	PrimaryExpression	1		7635917	0					
ANR	7637461	IfStatement	if ( ( parameters -> decod_format == BIN_DFMT ) && ( parameters -> imgfile [ 0 ] == 0 ) )		7635917	3					
ANR	7637462	Condition	( parameters -> decod_format == BIN_DFMT ) && ( parameters -> imgfile [ 0 ] == 0 )	709:8:27055:27125	7635917	0	True				
ANR	7637463	AndExpression	( parameters -> decod_format == BIN_DFMT ) && ( parameters -> imgfile [ 0 ] == 0 )		7635917	0		&&			
ANR	7637464	EqualityExpression	parameters -> decod_format == BIN_DFMT		7635917	0		==			
ANR	7637465	PtrMemberAccess	parameters -> decod_format		7635917	0					
ANR	7637466	Identifier	parameters		7635917	0					
ANR	7637467	Identifier	decod_format		7635917	1					
ANR	7637468	Identifier	BIN_DFMT		7635917	1					
ANR	7637469	EqualityExpression	parameters -> imgfile [ 0 ] == 0		7635917	1		==			
ANR	7637470	ArrayIndexing	parameters -> imgfile [ 0 ]		7635917	0					
ANR	7637471	PtrMemberAccess	parameters -> imgfile		7635917	0					
ANR	7637472	Identifier	parameters		7635917	0					
ANR	7637473	Identifier	imgfile		7635917	1					
ANR	7637474	PrimaryExpression	0		7635917	1					
ANR	7637475	PrimaryExpression	0		7635917	1					
ANR	7637476	CompoundStatement		438:81:15985:15985	7635917	1					
ANR	7637477	ExpressionStatement	"fprintf ( stdout , ""usage: jp3d_vm_enc -i bin-volume-file -m img-file -o jp3d-file (+ options)\\n"" )"	710:8:27138:27249	7635917	0	True				
ANR	7637478	CallExpression	"fprintf ( stdout , ""usage: jp3d_vm_enc -i bin-volume-file -m img-file -o jp3d-file (+ options)\\n"" )"		7635917	0					
ANR	7637479	Callee	fprintf		7635917	0					
ANR	7637480	Identifier	fprintf		7635917	0					
ANR	7637481	ArgumentList	stdout		7635917	1					
ANR	7637482	Argument	stdout		7635917	0					
ANR	7637483	Identifier	stdout		7635917	0					
ANR	7637484	Argument	"""usage: jp3d_vm_enc -i bin-volume-file -m img-file -o jp3d-file (+ options)\\n"""		7635917	1					
ANR	7637485	PrimaryExpression	"""usage: jp3d_vm_enc -i bin-volume-file -m img-file -o jp3d-file (+ options)\\n"""		7635917	0					
ANR	7637486	ReturnStatement	return 1 ;	712:8:27259:27267	7635917	1	True				
ANR	7637487	PrimaryExpression	1		7635917	0					
ANR	7637488	IfStatement	if ( ( parameters -> decod_format != BIN_DFMT ) && ( parameters -> decod_format != PGX_DFMT ) && ( parameters -> decod_format != IMG_DFMT ) )		7635917	4					
ANR	7637489	Condition	( parameters -> decod_format != BIN_DFMT ) && ( parameters -> decod_format != PGX_DFMT ) && ( parameters -> decod_format != IMG_DFMT )	715:8:27284:27429	7635917	0	True				
ANR	7637490	AndExpression	( parameters -> decod_format != BIN_DFMT ) && ( parameters -> decod_format != PGX_DFMT ) && ( parameters -> decod_format != IMG_DFMT )		7635917	0		&&			
ANR	7637491	EqualityExpression	parameters -> decod_format != BIN_DFMT		7635917	0		!=			
ANR	7637492	PtrMemberAccess	parameters -> decod_format		7635917	0					
ANR	7637493	Identifier	parameters		7635917	0					
ANR	7637494	Identifier	decod_format		7635917	1					
ANR	7637495	Identifier	BIN_DFMT		7635917	1					
ANR	7637496	AndExpression	( parameters -> decod_format != PGX_DFMT ) && ( parameters -> decod_format != IMG_DFMT )		7635917	1		&&			
ANR	7637497	EqualityExpression	parameters -> decod_format != PGX_DFMT		7635917	0		!=			
ANR	7637498	PtrMemberAccess	parameters -> decod_format		7635917	0					
ANR	7637499	Identifier	parameters		7635917	0					
ANR	7637500	Identifier	decod_format		7635917	1					
ANR	7637501	Identifier	PGX_DFMT		7635917	1					
ANR	7637502	EqualityExpression	parameters -> decod_format != IMG_DFMT		7635917	1		!=			
ANR	7637503	PtrMemberAccess	parameters -> decod_format		7635917	0					
ANR	7637504	Identifier	parameters		7635917	0					
ANR	7637505	Identifier	decod_format		7635917	1					
ANR	7637506	Identifier	IMG_DFMT		7635917	1					
ANR	7637507	CompoundStatement		446:52:16289:16289	7635917	1					
ANR	7637508	ExpressionStatement	"fprintf ( stdout , ""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"" )"	718:8:27442:27578	7635917	0	True				
ANR	7637509	CallExpression	"fprintf ( stdout , ""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"" )"		7635917	0					
ANR	7637510	Callee	fprintf		7635917	0					
ANR	7637511	Identifier	fprintf		7635917	0					
ANR	7637512	ArgumentList	stdout		7635917	1					
ANR	7637513	Argument	stdout		7635917	0					
ANR	7637514	Identifier	stdout		7635917	0					
ANR	7637515	Argument	"""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"""		7635917	1					
ANR	7637516	PrimaryExpression	"""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"""		7635917	0					
ANR	7637517	ReturnStatement	return 1 ;	720:8:27588:27596	7635917	1	True				
ANR	7637518	PrimaryExpression	1		7635917	0					
ANR	7637519	IfStatement	if ( ( parameters -> cod_format != J3D_CFMT ) && ( parameters -> cod_format != J2K_CFMT ) )		7635917	5					
ANR	7637520	Condition	( parameters -> cod_format != J3D_CFMT ) && ( parameters -> cod_format != J2K_CFMT )	722:8:27612:27699	7635917	0	True				
ANR	7637521	AndExpression	( parameters -> cod_format != J3D_CFMT ) && ( parameters -> cod_format != J2K_CFMT )		7635917	0		&&			
ANR	7637522	EqualityExpression	parameters -> cod_format != J3D_CFMT		7635917	0		!=			
ANR	7637523	PtrMemberAccess	parameters -> cod_format		7635917	0					
ANR	7637524	Identifier	parameters		7635917	0					
ANR	7637525	Identifier	cod_format		7635917	1					
ANR	7637526	Identifier	J3D_CFMT		7635917	1					
ANR	7637527	EqualityExpression	parameters -> cod_format != J2K_CFMT		7635917	1		!=			
ANR	7637528	PtrMemberAccess	parameters -> cod_format		7635917	0					
ANR	7637529	Identifier	parameters		7635917	0					
ANR	7637530	Identifier	cod_format		7635917	1					
ANR	7637531	Identifier	J2K_CFMT		7635917	1					
ANR	7637532	CompoundStatement		452:50:16559:16559	7635917	1					
ANR	7637533	ExpressionStatement	"fprintf ( stdout , ""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"" )"	724:8:27712:27848	7635917	0	True				
ANR	7637534	CallExpression	"fprintf ( stdout , ""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"" )"		7635917	0					
ANR	7637535	Callee	fprintf		7635917	0					
ANR	7637536	Identifier	fprintf		7635917	0					
ANR	7637537	ArgumentList	stdout		7635917	1					
ANR	7637538	Argument	stdout		7635917	0					
ANR	7637539	Identifier	stdout		7635917	0					
ANR	7637540	Argument	"""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"""		7635917	1					
ANR	7637541	PrimaryExpression	"""usage: jp3d_vm_enc -i input-volume-file [*.bin,*.pgx,*.img] -o jp3d-file [*.jp3d,*.j2k] (+ options)\\n"""		7635917	0					
ANR	7637542	ReturnStatement	return 1 ;	726:8:27858:27866	7635917	1	True				
ANR	7637543	PrimaryExpression	1		7635917	0					
ANR	7637544	IfStatement	if ( ( parameters -> encoding_format == ENCOD_2GR || parameters -> encoding_format == ENCOD_3GR ) && parameters -> transform_format != TRF_3D_LSE && parameters -> transform_format != TRF_3D_RLS )		7635917	6					
ANR	7637545	Condition	( parameters -> encoding_format == ENCOD_2GR || parameters -> encoding_format == ENCOD_3GR ) && parameters -> transform_format != TRF_3D_LSE && parameters -> transform_format != TRF_3D_RLS	729:8:27883:28096	7635917	0	True				
ANR	7637546	AndExpression	( parameters -> encoding_format == ENCOD_2GR || parameters -> encoding_format == ENCOD_3GR ) && parameters -> transform_format != TRF_3D_LSE && parameters -> transform_format != TRF_3D_RLS		7635917	0		&&			
ANR	7637547	OrExpression	parameters -> encoding_format == ENCOD_2GR || parameters -> encoding_format == ENCOD_3GR		7635917	0		||			
ANR	7637548	EqualityExpression	parameters -> encoding_format == ENCOD_2GR		7635917	0		==			
ANR	7637549	PtrMemberAccess	parameters -> encoding_format		7635917	0					
ANR	7637550	Identifier	parameters		7635917	0					
ANR	7637551	Identifier	encoding_format		7635917	1					
ANR	7637552	Identifier	ENCOD_2GR		7635917	1					
ANR	7637553	EqualityExpression	parameters -> encoding_format == ENCOD_3GR		7635917	1		==			
ANR	7637554	PtrMemberAccess	parameters -> encoding_format		7635917	0					
ANR	7637555	Identifier	parameters		7635917	0					
ANR	7637556	Identifier	encoding_format		7635917	1					
ANR	7637557	Identifier	ENCOD_3GR		7635917	1					
ANR	7637558	AndExpression	parameters -> transform_format != TRF_3D_LSE && parameters -> transform_format != TRF_3D_RLS		7635917	1		&&			
ANR	7637559	EqualityExpression	parameters -> transform_format != TRF_3D_LSE		7635917	0		!=			
ANR	7637560	PtrMemberAccess	parameters -> transform_format		7635917	0					
ANR	7637561	Identifier	parameters		7635917	0					
ANR	7637562	Identifier	transform_format		7635917	1					
ANR	7637563	Identifier	TRF_3D_LSE		7635917	1					
ANR	7637564	EqualityExpression	parameters -> transform_format != TRF_3D_RLS		7635917	1		!=			
ANR	7637565	PtrMemberAccess	parameters -> transform_format		7635917	0					
ANR	7637566	Identifier	parameters		7635917	0					
ANR	7637567	Identifier	transform_format		7635917	1					
ANR	7637568	Identifier	TRF_3D_RLS		7635917	1					
ANR	7637569	CompoundStatement		461:56:16956:16956	7635917	1					
ANR	7637570	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Entropy coding options -C [2GR,3GR] are only compatible with predictive-based transform algorithms: -T [3RLS,3LSE].\\n"" )"	733:8:28109:28269	7635917	0	True				
ANR	7637571	CallExpression	"fprintf ( stdout , ""[ERROR] Entropy coding options -C [2GR,3GR] are only compatible with predictive-based transform algorithms: -T [3RLS,3LSE].\\n"" )"		7635917	0					
ANR	7637572	Callee	fprintf		7635917	0					
ANR	7637573	Identifier	fprintf		7635917	0					
ANR	7637574	ArgumentList	stdout		7635917	1					
ANR	7637575	Argument	stdout		7635917	0					
ANR	7637576	Identifier	stdout		7635917	0					
ANR	7637577	Argument	"""[ERROR] Entropy coding options -C [2GR,3GR] are only compatible with predictive-based transform algorithms: -T [3RLS,3LSE].\\n"""		7635917	1					
ANR	7637578	PrimaryExpression	"""[ERROR] Entropy coding options -C [2GR,3GR] are only compatible with predictive-based transform algorithms: -T [3RLS,3LSE].\\n"""		7635917	0					
ANR	7637579	ReturnStatement	return 1 ;	735:8:28279:28287	7635917	1	True				
ANR	7637580	PrimaryExpression	1		7635917	0					
ANR	7637581	IfStatement	if ( parameters -> encoding_format == ENCOD_3EB )		7635917	7					
ANR	7637582	Condition	parameters -> encoding_format == ENCOD_3EB	737:8:28303:28342	7635917	0	True				
ANR	7637583	EqualityExpression	parameters -> encoding_format == ENCOD_3EB		7635917	0		==			
ANR	7637584	PtrMemberAccess	parameters -> encoding_format		7635917	0					
ANR	7637585	Identifier	parameters		7635917	0					
ANR	7637586	Identifier	encoding_format		7635917	1					
ANR	7637587	Identifier	ENCOD_3EB		7635917	1					
ANR	7637588	CompoundStatement		466:50:17202:17202	7635917	1					
ANR	7637589	ExpressionStatement	parameters -> mode |= ( 1 << 6 )	738:8:28355:28383	7635917	0	True				
ANR	7637590	AssignmentExpression	parameters -> mode |= ( 1 << 6 )		7635917	0		|=			
ANR	7637591	PtrMemberAccess	parameters -> mode		7635917	0					
ANR	7637592	Identifier	parameters		7635917	0					
ANR	7637593	Identifier	mode		7635917	1					
ANR	7637594	ShiftExpression	1 << 6		7635917	1		<<			
ANR	7637595	PrimaryExpression	1		7635917	0					
ANR	7637596	PrimaryExpression	6		7635917	1					
ANR	7637597	IfStatement	if ( ( parameters -> mode >> 6 ) & 1 )		7635917	8					
ANR	7637598	Condition	( parameters -> mode >> 6 ) & 1	741:8:28400:28426	7635917	0	True				
ANR	7637599	BitAndExpression	( parameters -> mode >> 6 ) & 1		7635917	0		&			
ANR	7637600	ShiftExpression	parameters -> mode >> 6		7635917	0		>>			
ANR	7637601	PtrMemberAccess	parameters -> mode		7635917	0					
ANR	7637602	Identifier	parameters		7635917	0					
ANR	7637603	Identifier	mode		7635917	1					
ANR	7637604	PrimaryExpression	6		7635917	1					
ANR	7637605	PrimaryExpression	1		7635917	1					
ANR	7637606	CompoundStatement		470:37:17286:17286	7635917	1					
ANR	7637607	ExpressionStatement	parameters -> encoding_format = ENCOD_3EB	742:8:28439:28478	7635917	0	True				
ANR	7637608	AssignmentExpression	parameters -> encoding_format = ENCOD_3EB		7635917	0		=			
ANR	7637609	PtrMemberAccess	parameters -> encoding_format		7635917	0					
ANR	7637610	Identifier	parameters		7635917	0					
ANR	7637611	Identifier	encoding_format		7635917	1					
ANR	7637612	Identifier	ENCOD_3EB		7635917	1					
ANR	7637613	IfStatement	if ( ( parameters -> numresolution [ 2 ] == 0 || ( parameters -> numresolution [ 1 ] == 0 ) || ( parameters -> numresolution [ 0 ] == 0 ) ) )		7635917	9					
ANR	7637614	Condition	parameters -> numresolution [ 2 ] == 0 || ( parameters -> numresolution [ 1 ] == 0 ) || ( parameters -> numresolution [ 0 ] == 0 )	745:8:28495:28619	7635917	0	True				
ANR	7637615	OrExpression	parameters -> numresolution [ 2 ] == 0 || ( parameters -> numresolution [ 1 ] == 0 ) || ( parameters -> numresolution [ 0 ] == 0 )		7635917	0		||			
ANR	7637616	EqualityExpression	parameters -> numresolution [ 2 ] == 0		7635917	0		==			
ANR	7637617	ArrayIndexing	parameters -> numresolution [ 2 ]		7635917	0					
ANR	7637618	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7637619	Identifier	parameters		7635917	0					
ANR	7637620	Identifier	numresolution		7635917	1					
ANR	7637621	PrimaryExpression	2		7635917	1					
ANR	7637622	PrimaryExpression	0		7635917	1					
ANR	7637623	OrExpression	( parameters -> numresolution [ 1 ] == 0 ) || ( parameters -> numresolution [ 0 ] == 0 )		7635917	1		||			
ANR	7637624	EqualityExpression	parameters -> numresolution [ 1 ] == 0		7635917	0		==			
ANR	7637625	ArrayIndexing	parameters -> numresolution [ 1 ]		7635917	0					
ANR	7637626	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7637627	Identifier	parameters		7635917	0					
ANR	7637628	Identifier	numresolution		7635917	1					
ANR	7637629	PrimaryExpression	1		7635917	1					
ANR	7637630	PrimaryExpression	0		7635917	1					
ANR	7637631	EqualityExpression	parameters -> numresolution [ 0 ] == 0		7635917	1		==			
ANR	7637632	ArrayIndexing	parameters -> numresolution [ 0 ]		7635917	0					
ANR	7637633	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7637634	Identifier	parameters		7635917	0					
ANR	7637635	Identifier	numresolution		7635917	1					
ANR	7637636	PrimaryExpression	0		7635917	1					
ANR	7637637	PrimaryExpression	0		7635917	1					
ANR	7637638	CompoundStatement		475:50:17479:17479	7635917	1					
ANR	7637639	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -n 'resolution levels' argument error ! Resolutions must be greater than 1 in order to perform DWT.\\n"" )"	747:8:28632:28776	7635917	0	True				
ANR	7637640	CallExpression	"fprintf ( stdout , ""[ERROR] -n 'resolution levels' argument error ! Resolutions must be greater than 1 in order to perform DWT.\\n"" )"		7635917	0					
ANR	7637641	Callee	fprintf		7635917	0					
ANR	7637642	Identifier	fprintf		7635917	0					
ANR	7637643	ArgumentList	stdout		7635917	1					
ANR	7637644	Argument	stdout		7635917	0					
ANR	7637645	Identifier	stdout		7635917	0					
ANR	7637646	Argument	"""[ERROR] -n 'resolution levels' argument error ! Resolutions must be greater than 1 in order to perform DWT.\\n"""		7635917	1					
ANR	7637647	PrimaryExpression	"""[ERROR] -n 'resolution levels' argument error ! Resolutions must be greater than 1 in order to perform DWT.\\n"""		7635917	0					
ANR	7637648	ReturnStatement	return 1 ;	749:8:28786:28794	7635917	1	True				
ANR	7637649	PrimaryExpression	1		7635917	0					
ANR	7637650	IfStatement	if ( parameters -> numresolution [ 1 ] != parameters -> numresolution [ 0 ] )		7635917	10					
ANR	7637651	Condition	parameters -> numresolution [ 1 ] != parameters -> numresolution [ 0 ]	751:8:28810:28869	7635917	0	True				
ANR	7637652	EqualityExpression	parameters -> numresolution [ 1 ] != parameters -> numresolution [ 0 ]		7635917	0		!=			
ANR	7637653	ArrayIndexing	parameters -> numresolution [ 1 ]		7635917	0					
ANR	7637654	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7637655	Identifier	parameters		7635917	0					
ANR	7637656	Identifier	numresolution		7635917	1					
ANR	7637657	PrimaryExpression	1		7635917	1					
ANR	7637658	ArrayIndexing	parameters -> numresolution [ 0 ]		7635917	1					
ANR	7637659	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7637660	Identifier	parameters		7635917	0					
ANR	7637661	Identifier	numresolution		7635917	1					
ANR	7637662	PrimaryExpression	0		7635917	1					
ANR	7637663	CompoundStatement		480:70:17729:17729	7635917	1					
ANR	7637664	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -n 'resolution levels' argument error ! Resolutions in X and Y axis must be the same in this implementation.\\n"" )"	752:8:28882:29035	7635917	0	True				
ANR	7637665	CallExpression	"fprintf ( stdout , ""[ERROR] -n 'resolution levels' argument error ! Resolutions in X and Y axis must be the same in this implementation.\\n"" )"		7635917	0					
ANR	7637666	Callee	fprintf		7635917	0					
ANR	7637667	Identifier	fprintf		7635917	0					
ANR	7637668	ArgumentList	stdout		7635917	1					
ANR	7637669	Argument	stdout		7635917	0					
ANR	7637670	Identifier	stdout		7635917	0					
ANR	7637671	Argument	"""[ERROR] -n 'resolution levels' argument error ! Resolutions in X and Y axis must be the same in this implementation.\\n"""		7635917	1					
ANR	7637672	PrimaryExpression	"""[ERROR] -n 'resolution levels' argument error ! Resolutions in X and Y axis must be the same in this implementation.\\n"""		7635917	0					
ANR	7637673	ReturnStatement	return 1 ;	754:8:29045:29053	7635917	1	True				
ANR	7637674	PrimaryExpression	1		7635917	0					
ANR	7637675	IfStatement	if ( parameters -> numresolution [ 2 ] > parameters -> numresolution [ 0 ] )		7635917	11					
ANR	7637676	Condition	parameters -> numresolution [ 2 ] > parameters -> numresolution [ 0 ]	757:8:29070:29128	7635917	0	True				
ANR	7637677	RelationalExpression	parameters -> numresolution [ 2 ] > parameters -> numresolution [ 0 ]		7635917	0		>			
ANR	7637678	ArrayIndexing	parameters -> numresolution [ 2 ]		7635917	0					
ANR	7637679	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7637680	Identifier	parameters		7635917	0					
ANR	7637681	Identifier	numresolution		7635917	1					
ANR	7637682	PrimaryExpression	2		7635917	1					
ANR	7637683	ArrayIndexing	parameters -> numresolution [ 0 ]		7635917	1					
ANR	7637684	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7637685	Identifier	parameters		7635917	0					
ANR	7637686	Identifier	numresolution		7635917	1					
ANR	7637687	PrimaryExpression	0		7635917	1					
ANR	7637688	CompoundStatement		486:69:17988:17988	7635917	1					
ANR	7637689	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -n 'resolution levels' argument error ! Resolutions in Z axis must be lower than in X-Y axis.\\n"" )"	758:8:29141:29279	7635917	0	True				
ANR	7637690	CallExpression	"fprintf ( stdout , ""[ERROR] -n 'resolution levels' argument error ! Resolutions in Z axis must be lower than in X-Y axis.\\n"" )"		7635917	0					
ANR	7637691	Callee	fprintf		7635917	0					
ANR	7637692	Identifier	fprintf		7635917	0					
ANR	7637693	ArgumentList	stdout		7635917	1					
ANR	7637694	Argument	stdout		7635917	0					
ANR	7637695	Identifier	stdout		7635917	0					
ANR	7637696	Argument	"""[ERROR] -n 'resolution levels' argument error ! Resolutions in Z axis must be lower than in X-Y axis.\\n"""		7635917	1					
ANR	7637697	PrimaryExpression	"""[ERROR] -n 'resolution levels' argument error ! Resolutions in Z axis must be lower than in X-Y axis.\\n"""		7635917	0					
ANR	7637698	ReturnStatement	return 1 ;	760:8:29289:29297	7635917	1	True				
ANR	7637699	PrimaryExpression	1		7635917	0					
ANR	7637700	IfStatement	if ( parameters -> dcoffset >= 128 && parameters -> dcoffset <= - 128 )		7635917	12					
ANR	7637701	Condition	parameters -> dcoffset >= 128 && parameters -> dcoffset <= - 128	763:8:29314:29372	7635917	0	True				
ANR	7637702	AndExpression	parameters -> dcoffset >= 128 && parameters -> dcoffset <= - 128		7635917	0		&&			
ANR	7637703	RelationalExpression	parameters -> dcoffset >= 128		7635917	0		>=			
ANR	7637704	PtrMemberAccess	parameters -> dcoffset		7635917	0					
ANR	7637705	Identifier	parameters		7635917	0					
ANR	7637706	Identifier	dcoffset		7635917	1					
ANR	7637707	PrimaryExpression	128		7635917	1					
ANR	7637708	RelationalExpression	parameters -> dcoffset <= - 128		7635917	1		<=			
ANR	7637709	PtrMemberAccess	parameters -> dcoffset		7635917	0					
ANR	7637710	Identifier	parameters		7635917	0					
ANR	7637711	Identifier	dcoffset		7635917	1					
ANR	7637712	UnaryOperationExpression	- 128		7635917	1					
ANR	7637713	UnaryOperator	-		7635917	0					
ANR	7637714	PrimaryExpression	128		7635917	1					
ANR	7637715	CompoundStatement		492:69:18232:18232	7635917	1					
ANR	7637716	ExpressionStatement	"fprintf ( stdout , ""[ERROR] -D 'DC offset' argument error ! Value must be -128<=DCO<=128.\\n"" )"	764:8:29385:29491	7635917	0	True				
ANR	7637717	CallExpression	"fprintf ( stdout , ""[ERROR] -D 'DC offset' argument error ! Value must be -128<=DCO<=128.\\n"" )"		7635917	0					
ANR	7637718	Callee	fprintf		7635917	0					
ANR	7637719	Identifier	fprintf		7635917	0					
ANR	7637720	ArgumentList	stdout		7635917	1					
ANR	7637721	Argument	stdout		7635917	0					
ANR	7637722	Identifier	stdout		7635917	0					
ANR	7637723	Argument	"""[ERROR] -D 'DC offset' argument error ! Value must be -128<=DCO<=128.\\n"""		7635917	1					
ANR	7637724	PrimaryExpression	"""[ERROR] -D 'DC offset' argument error ! Value must be -128<=DCO<=128.\\n"""		7635917	0					
ANR	7637725	ReturnStatement	return 1 ;	766:8:29501:29509	7635917	1	True				
ANR	7637726	PrimaryExpression	1		7635917	0					
ANR	7637727	IfStatement	if ( parameters -> numresolution [ 2 ] != 1 )		7635917	13					
ANR	7637728	Condition	parameters -> numresolution [ 2 ] != 1	769:8:29526:29558	7635917	0	True				
ANR	7637729	EqualityExpression	parameters -> numresolution [ 2 ] != 1		7635917	0		!=			
ANR	7637730	ArrayIndexing	parameters -> numresolution [ 2 ]		7635917	0					
ANR	7637731	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7637732	Identifier	parameters		7635917	0					
ANR	7637733	Identifier	numresolution		7635917	1					
ANR	7637734	PrimaryExpression	2		7635917	1					
ANR	7637735	PrimaryExpression	1		7635917	1					
ANR	7637736	CompoundStatement		498:43:18418:18418	7635917	1					
ANR	7637737	ExpressionStatement	parameters -> transform_format = TRF_3D_DWT	770:8:29571:29612	7635917	0	True				
ANR	7637738	AssignmentExpression	parameters -> transform_format = TRF_3D_DWT		7635917	0		=			
ANR	7637739	PtrMemberAccess	parameters -> transform_format		7635917	0					
ANR	7637740	Identifier	parameters		7635917	0					
ANR	7637741	Identifier	transform_format		7635917	1					
ANR	7637742	Identifier	TRF_3D_DWT		7635917	1					
ANR	7637743	ElseStatement	else		7635917	0					
ANR	7637744	IfStatement	if ( parameters -> numresolution [ 2 ] == 1 )		7635917	0					
ANR	7637745	Condition	parameters -> numresolution [ 2 ] == 1	772:15:29738:29770	7635917	0	True				
ANR	7637746	EqualityExpression	parameters -> numresolution [ 2 ] == 1		7635917	0		==			
ANR	7637747	ArrayIndexing	parameters -> numresolution [ 2 ]		7635917	0					
ANR	7637748	PtrMemberAccess	parameters -> numresolution		7635917	0					
ANR	7637749	Identifier	parameters		7635917	0					
ANR	7637750	Identifier	numresolution		7635917	1					
ANR	7637751	PrimaryExpression	2		7635917	1					
ANR	7637752	PrimaryExpression	1		7635917	1					
ANR	7637753	CompoundStatement		501:50:18630:18630	7635917	1					
ANR	7637754	ExpressionStatement	parameters -> transform_format = TRF_2D_DWT	773:8:29783:29824	7635917	0	True				
ANR	7637755	AssignmentExpression	parameters -> transform_format = TRF_2D_DWT		7635917	0		=			
ANR	7637756	PtrMemberAccess	parameters -> transform_format		7635917	0					
ANR	7637757	Identifier	parameters		7635917	0					
ANR	7637758	Identifier	transform_format		7635917	1					
ANR	7637759	Identifier	TRF_2D_DWT		7635917	1					
ANR	7637760	IfStatement	if ( ( parameters -> cod_format == J2K_CFMT ) && ( parameters -> transform_format != TRF_2D_DWT || parameters -> encoding_format != ENCOD_2EB ) )		7635917	14					
ANR	7637761	Condition	( parameters -> cod_format == J2K_CFMT ) && ( parameters -> transform_format != TRF_2D_DWT || parameters -> encoding_format != ENCOD_2EB )	777:8:29951:30103	7635917	0	True				
ANR	7637762	AndExpression	( parameters -> cod_format == J2K_CFMT ) && ( parameters -> transform_format != TRF_2D_DWT || parameters -> encoding_format != ENCOD_2EB )		7635917	0		&&			
ANR	7637763	EqualityExpression	parameters -> cod_format == J2K_CFMT		7635917	0		==			
ANR	7637764	PtrMemberAccess	parameters -> cod_format		7635917	0					
ANR	7637765	Identifier	parameters		7635917	0					
ANR	7637766	Identifier	cod_format		7635917	1					
ANR	7637767	Identifier	J2K_CFMT		7635917	1					
ANR	7637768	OrExpression	parameters -> transform_format != TRF_2D_DWT || parameters -> encoding_format != ENCOD_2EB		7635917	1		||			
ANR	7637769	EqualityExpression	parameters -> transform_format != TRF_2D_DWT		7635917	0		!=			
ANR	7637770	PtrMemberAccess	parameters -> transform_format		7635917	0					
ANR	7637771	Identifier	parameters		7635917	0					
ANR	7637772	Identifier	transform_format		7635917	1					
ANR	7637773	Identifier	TRF_2D_DWT		7635917	1					
ANR	7637774	EqualityExpression	parameters -> encoding_format != ENCOD_2EB		7635917	1		!=			
ANR	7637775	PtrMemberAccess	parameters -> encoding_format		7635917	0					
ANR	7637776	Identifier	parameters		7635917	0					
ANR	7637777	Identifier	encoding_format		7635917	1					
ANR	7637778	Identifier	ENCOD_2EB		7635917	1					
ANR	7637779	CompoundStatement		508:56:18963:18963	7635917	1					
ANR	7637780	ExpressionStatement	"fprintf ( stdout , ""[WARNING] Incompatible options -o *.j2k and defined transform or encoding algorithm. Latter will be ignored\\n"" )"	780:8:30116:30260	7635917	0	True				
ANR	7637781	CallExpression	"fprintf ( stdout , ""[WARNING] Incompatible options -o *.j2k and defined transform or encoding algorithm. Latter will be ignored\\n"" )"		7635917	0					
ANR	7637782	Callee	fprintf		7635917	0					
ANR	7637783	Identifier	fprintf		7635917	0					
ANR	7637784	ArgumentList	stdout		7635917	1					
ANR	7637785	Argument	stdout		7635917	0					
ANR	7637786	Identifier	stdout		7635917	0					
ANR	7637787	Argument	"""[WARNING] Incompatible options -o *.j2k and defined transform or encoding algorithm. Latter will be ignored\\n"""		7635917	1					
ANR	7637788	PrimaryExpression	"""[WARNING] Incompatible options -o *.j2k and defined transform or encoding algorithm. Latter will be ignored\\n"""		7635917	0					
ANR	7637789	ExpressionStatement	parameters -> transform_format = TRF_2D_DWT	782:8:30270:30311	7635917	1	True				
ANR	7637790	AssignmentExpression	parameters -> transform_format = TRF_2D_DWT		7635917	0		=			
ANR	7637791	PtrMemberAccess	parameters -> transform_format		7635917	0					
ANR	7637792	Identifier	parameters		7635917	0					
ANR	7637793	Identifier	transform_format		7635917	1					
ANR	7637794	Identifier	TRF_2D_DWT		7635917	1					
ANR	7637795	ExpressionStatement	parameters -> encoding_format = ENCOD_2EB	783:8:30321:30360	7635917	2	True				
ANR	7637796	AssignmentExpression	parameters -> encoding_format = ENCOD_2EB		7635917	0		=			
ANR	7637797	PtrMemberAccess	parameters -> encoding_format		7635917	0					
ANR	7637798	Identifier	parameters		7635917	0					
ANR	7637799	Identifier	encoding_format		7635917	1					
ANR	7637800	Identifier	ENCOD_2EB		7635917	1					
ANR	7637801	IfStatement	if ( ( parameters -> cp_disto_alloc || parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality ) && ( ! ( parameters -> cp_disto_alloc ^ parameters -> cp_fixed_quality ) ) )		7635917	15					
ANR	7637802	Condition	( parameters -> cp_disto_alloc || parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality ) && ( ! ( parameters -> cp_disto_alloc ^ parameters -> cp_fixed_quality ) )	786:8:30377:30556	7635917	0	True				
ANR	7637803	AndExpression	( parameters -> cp_disto_alloc || parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality ) && ( ! ( parameters -> cp_disto_alloc ^ parameters -> cp_fixed_quality ) )		7635917	0		&&			
ANR	7637804	OrExpression	parameters -> cp_disto_alloc || parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality		7635917	0		||			
ANR	7637805	PtrMemberAccess	parameters -> cp_disto_alloc		7635917	0					
ANR	7637806	Identifier	parameters		7635917	0					
ANR	7637807	Identifier	cp_disto_alloc		7635917	1					
ANR	7637808	OrExpression	parameters -> cp_fixed_alloc || parameters -> cp_fixed_quality		7635917	1		||			
ANR	7637809	PtrMemberAccess	parameters -> cp_fixed_alloc		7635917	0					
ANR	7637810	Identifier	parameters		7635917	0					
ANR	7637811	Identifier	cp_fixed_alloc		7635917	1					
ANR	7637812	PtrMemberAccess	parameters -> cp_fixed_quality		7635917	1					
ANR	7637813	Identifier	parameters		7635917	0					
ANR	7637814	Identifier	cp_fixed_quality		7635917	1					
ANR	7637815	UnaryOperationExpression	! ( parameters -> cp_disto_alloc ^ parameters -> cp_fixed_quality )		7635917	1					
ANR	7637816	UnaryOperator	!		7635917	0					
ANR	7637817	ExclusiveOrExpression	parameters -> cp_disto_alloc ^ parameters -> cp_fixed_quality		7635917	1		^			
ANR	7637818	PtrMemberAccess	parameters -> cp_disto_alloc		7635917	0					
ANR	7637819	Identifier	parameters		7635917	0					
ANR	7637820	Identifier	cp_disto_alloc		7635917	1					
ANR	7637821	PtrMemberAccess	parameters -> cp_fixed_quality		7635917	1					
ANR	7637822	Identifier	parameters		7635917	0					
ANR	7637823	Identifier	cp_fixed_quality		7635917	1					
ANR	7637824	CompoundStatement		517:76:19416:19416	7635917	1					
ANR	7637825	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Options -r and -q cannot be used together !!\\n"" )"	789:8:30569:30642	7635917	0	True				
ANR	7637826	CallExpression	"fprintf ( stdout , ""[ERROR] Options -r and -q cannot be used together !!\\n"" )"		7635917	0					
ANR	7637827	Callee	fprintf		7635917	0					
ANR	7637828	Identifier	fprintf		7635917	0					
ANR	7637829	ArgumentList	stdout		7635917	1					
ANR	7637830	Argument	stdout		7635917	0					
ANR	7637831	Identifier	stdout		7635917	0					
ANR	7637832	Argument	"""[ERROR] Options -r and -q cannot be used together !!\\n"""		7635917	1					
ANR	7637833	PrimaryExpression	"""[ERROR] Options -r and -q cannot be used together !!\\n"""		7635917	0					
ANR	7637834	ReturnStatement	return 1 ;	790:8:30652:30660	7635917	1	True				
ANR	7637835	PrimaryExpression	1		7635917	0					
ANR	7637836	IfStatement	if ( parameters -> tcp_numlayers == 0 )		7635917	16					
ANR	7637837	Condition	parameters -> tcp_numlayers == 0	794:8:30765:30794	7635917	0	True				
ANR	7637838	EqualityExpression	parameters -> tcp_numlayers == 0		7635917	0		==			
ANR	7637839	PtrMemberAccess	parameters -> tcp_numlayers		7635917	0					
ANR	7637840	Identifier	parameters		7635917	0					
ANR	7637841	Identifier	tcp_numlayers		7635917	1					
ANR	7637842	PrimaryExpression	0		7635917	1					
ANR	7637843	CompoundStatement		523:40:19654:19654	7635917	1					
ANR	7637844	ExpressionStatement	parameters -> tcp_rates [ 0 ] = 0.0	795:8:30807:30837	7635917	0	True				
ANR	7637845	AssignmentExpression	parameters -> tcp_rates [ 0 ] = 0.0		7635917	0		=			
ANR	7637846	ArrayIndexing	parameters -> tcp_rates [ 0 ]		7635917	0					
ANR	7637847	PtrMemberAccess	parameters -> tcp_rates		7635917	0					
ANR	7637848	Identifier	parameters		7635917	0					
ANR	7637849	Identifier	tcp_rates		7635917	1					
ANR	7637850	PrimaryExpression	0		7635917	1					
ANR	7637851	PrimaryExpression	0.0		7635917	1					
ANR	7637852	ExpressionStatement	parameters -> tcp_numlayers ++	796:8:30879:30906	7635917	1	True				
ANR	7637853	PostIncDecOperationExpression	parameters -> tcp_numlayers ++		7635917	0					
ANR	7637854	PtrMemberAccess	parameters -> tcp_numlayers		7635917	0					
ANR	7637855	Identifier	parameters		7635917	0					
ANR	7637856	Identifier	tcp_numlayers		7635917	1					
ANR	7637857	IncDec	++		7635917	1					
ANR	7637858	ExpressionStatement	parameters -> cp_disto_alloc = 1	797:8:30916:30946	7635917	2	True				
ANR	7637859	AssignmentExpression	parameters -> cp_disto_alloc = 1		7635917	0		=			
ANR	7637860	PtrMemberAccess	parameters -> cp_disto_alloc		7635917	0					
ANR	7637861	Identifier	parameters		7635917	0					
ANR	7637862	Identifier	cp_disto_alloc		7635917	1					
ANR	7637863	PrimaryExpression	1		7635917	1					
ANR	7637864	IfStatement	if ( ( parameters -> cp_tx0 > parameters -> volume_offset_x0 ) || ( parameters -> cp_ty0 > parameters -> volume_offset_y0 ) || ( parameters -> cp_tz0 > parameters -> volume_offset_z0 ) )		7635917	17					
ANR	7637865	Condition	( parameters -> cp_tx0 > parameters -> volume_offset_x0 ) || ( parameters -> cp_ty0 > parameters -> volume_offset_y0 ) || ( parameters -> cp_tz0 > parameters -> volume_offset_z0 )	800:8:30963:31147	7635917	0	True				
ANR	7637866	OrExpression	( parameters -> cp_tx0 > parameters -> volume_offset_x0 ) || ( parameters -> cp_ty0 > parameters -> volume_offset_y0 ) || ( parameters -> cp_tz0 > parameters -> volume_offset_z0 )		7635917	0		||			
ANR	7637867	RelationalExpression	parameters -> cp_tx0 > parameters -> volume_offset_x0		7635917	0		>			
ANR	7637868	PtrMemberAccess	parameters -> cp_tx0		7635917	0					
ANR	7637869	Identifier	parameters		7635917	0					
ANR	7637870	Identifier	cp_tx0		7635917	1					
ANR	7637871	PtrMemberAccess	parameters -> volume_offset_x0		7635917	1					
ANR	7637872	Identifier	parameters		7635917	0					
ANR	7637873	Identifier	volume_offset_x0		7635917	1					
ANR	7637874	OrExpression	( parameters -> cp_ty0 > parameters -> volume_offset_y0 ) || ( parameters -> cp_tz0 > parameters -> volume_offset_z0 )		7635917	1		||			
ANR	7637875	RelationalExpression	parameters -> cp_ty0 > parameters -> volume_offset_y0		7635917	0		>			
ANR	7637876	PtrMemberAccess	parameters -> cp_ty0		7635917	0					
ANR	7637877	Identifier	parameters		7635917	0					
ANR	7637878	Identifier	cp_ty0		7635917	1					
ANR	7637879	PtrMemberAccess	parameters -> volume_offset_y0		7635917	1					
ANR	7637880	Identifier	parameters		7635917	0					
ANR	7637881	Identifier	volume_offset_y0		7635917	1					
ANR	7637882	RelationalExpression	parameters -> cp_tz0 > parameters -> volume_offset_z0		7635917	1		>			
ANR	7637883	PtrMemberAccess	parameters -> cp_tz0		7635917	0					
ANR	7637884	Identifier	parameters		7635917	0					
ANR	7637885	Identifier	cp_tz0		7635917	1					
ANR	7637886	PtrMemberAccess	parameters -> volume_offset_z0		7635917	1					
ANR	7637887	Identifier	parameters		7635917	0					
ANR	7637888	Identifier	volume_offset_z0		7635917	1					
ANR	7637889	CompoundStatement		531:65:20007:20007	7635917	1					
ANR	7637890	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Tile offset dimension is unnappropriate --> TX0(%d)<=IMG_X0(%d) TYO(%d)<=IMG_Y0(%d) TZO(%d)<=IMG_Z0(%d)\\n"" , parameters -> cp_tx0 , parameters -> volume_offset_x0 , parameters -> cp_ty0 , parameters -> volume_offset_y0 , parameters -> cp_tz0 , parameters -> volume_offset_z0 )"	803:8:31160:31506	7635917	0	True				
ANR	7637891	CallExpression	"fprintf ( stdout , ""[ERROR] Tile offset dimension is unnappropriate --> TX0(%d)<=IMG_X0(%d) TYO(%d)<=IMG_Y0(%d) TZO(%d)<=IMG_Z0(%d)\\n"" , parameters -> cp_tx0 , parameters -> volume_offset_x0 , parameters -> cp_ty0 , parameters -> volume_offset_y0 , parameters -> cp_tz0 , parameters -> volume_offset_z0 )"		7635917	0					
ANR	7637892	Callee	fprintf		7635917	0					
ANR	7637893	Identifier	fprintf		7635917	0					
ANR	7637894	ArgumentList	stdout		7635917	1					
ANR	7637895	Argument	stdout		7635917	0					
ANR	7637896	Identifier	stdout		7635917	0					
ANR	7637897	Argument	"""[ERROR] Tile offset dimension is unnappropriate --> TX0(%d)<=IMG_X0(%d) TYO(%d)<=IMG_Y0(%d) TZO(%d)<=IMG_Z0(%d)\\n"""		7635917	1					
ANR	7637898	PrimaryExpression	"""[ERROR] Tile offset dimension is unnappropriate --> TX0(%d)<=IMG_X0(%d) TYO(%d)<=IMG_Y0(%d) TZO(%d)<=IMG_Z0(%d)\\n"""		7635917	0					
ANR	7637899	Argument	parameters -> cp_tx0		7635917	2					
ANR	7637900	PtrMemberAccess	parameters -> cp_tx0		7635917	0					
ANR	7637901	Identifier	parameters		7635917	0					
ANR	7637902	Identifier	cp_tx0		7635917	1					
ANR	7637903	Argument	parameters -> volume_offset_x0		7635917	3					
ANR	7637904	PtrMemberAccess	parameters -> volume_offset_x0		7635917	0					
ANR	7637905	Identifier	parameters		7635917	0					
ANR	7637906	Identifier	volume_offset_x0		7635917	1					
ANR	7637907	Argument	parameters -> cp_ty0		7635917	4					
ANR	7637908	PtrMemberAccess	parameters -> cp_ty0		7635917	0					
ANR	7637909	Identifier	parameters		7635917	0					
ANR	7637910	Identifier	cp_ty0		7635917	1					
ANR	7637911	Argument	parameters -> volume_offset_y0		7635917	5					
ANR	7637912	PtrMemberAccess	parameters -> volume_offset_y0		7635917	0					
ANR	7637913	Identifier	parameters		7635917	0					
ANR	7637914	Identifier	volume_offset_y0		7635917	1					
ANR	7637915	Argument	parameters -> cp_tz0		7635917	6					
ANR	7637916	PtrMemberAccess	parameters -> cp_tz0		7635917	0					
ANR	7637917	Identifier	parameters		7635917	0					
ANR	7637918	Identifier	cp_tz0		7635917	1					
ANR	7637919	Argument	parameters -> volume_offset_z0		7635917	7					
ANR	7637920	PtrMemberAccess	parameters -> volume_offset_z0		7635917	0					
ANR	7637921	Identifier	parameters		7635917	0					
ANR	7637922	Identifier	volume_offset_z0		7635917	1					
ANR	7637923	ReturnStatement	return 1 ;	808:8:31516:31524	7635917	1	True				
ANR	7637924	PrimaryExpression	1		7635917	0					
ANR	7637925	ForStatement	for ( i = 0 ; i < parameters -> numpocs ; i ++ )		7635917	18					
ANR	7637926	ForInit	i = 0 ;	811:9:31542:31547	7635917	0	True				
ANR	7637927	AssignmentExpression	i = 0		7635917	0		=			
ANR	7637928	Identifier	i		7635917	0					
ANR	7637929	PrimaryExpression	0		7635917	1					
ANR	7637930	Condition	i < parameters -> numpocs	811:16:31549:31571	7635917	1	True				
ANR	7637931	RelationalExpression	i < parameters -> numpocs		7635917	0		<			
ANR	7637932	Identifier	i		7635917	0					
ANR	7637933	PtrMemberAccess	parameters -> numpocs		7635917	1					
ANR	7637934	Identifier	parameters		7635917	0					
ANR	7637935	Identifier	numpocs		7635917	1					
ANR	7637936	PostIncDecOperationExpression	i ++	811:41:31574:31576	7635917	2	True				
ANR	7637937	Identifier	i		7635917	0					
ANR	7637938	IncDec	++		7635917	1					
ANR	7637939	CompoundStatement		540:46:20436:20436	7635917	3					
ANR	7637940	IfStatement	if ( parameters -> POC [ i ] . prg == - 1 )		7635917	0					
ANR	7637941	Condition	parameters -> POC [ i ] . prg == - 1	812:12:31593:31620	7635917	0	True				
ANR	7637942	EqualityExpression	parameters -> POC [ i ] . prg == - 1		7635917	0		==			
ANR	7637943	MemberAccess	parameters -> POC [ i ] . prg		7635917	0					
ANR	7637944	ArrayIndexing	parameters -> POC [ i ]		7635917	0					
ANR	7637945	PtrMemberAccess	parameters -> POC		7635917	0					
ANR	7637946	Identifier	parameters		7635917	0					
ANR	7637947	Identifier	POC		7635917	1					
ANR	7637948	Identifier	i		7635917	1					
ANR	7637949	Identifier	prg		7635917	1					
ANR	7637950	UnaryOperationExpression	- 1		7635917	1					
ANR	7637951	UnaryOperator	-		7635917	0					
ANR	7637952	PrimaryExpression	1		7635917	1					
ANR	7637953	CompoundStatement		541:42:20480:20480	7635917	1					
ANR	7637954	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unrecognized progression order in option -P (POC n %d) [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"" , i + 1 )"	813:12:31637:31801	7635917	0	True				
ANR	7637955	CallExpression	"fprintf ( stdout , ""[ERROR] Unrecognized progression order in option -P (POC n %d) [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"" , i + 1 )"		7635917	0					
ANR	7637956	Callee	fprintf		7635917	0					
ANR	7637957	Identifier	fprintf		7635917	0					
ANR	7637958	ArgumentList	stdout		7635917	1					
ANR	7637959	Argument	stdout		7635917	0					
ANR	7637960	Identifier	stdout		7635917	0					
ANR	7637961	Argument	"""[ERROR] Unrecognized progression order in option -P (POC n %d) [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"""		7635917	1					
ANR	7637962	PrimaryExpression	"""[ERROR] Unrecognized progression order in option -P (POC n %d) [LRCP, RLCP, RPCL, PCRL, CPRL] !!\\n"""		7635917	0					
ANR	7637963	Argument	i + 1		7635917	2					
ANR	7637964	AdditiveExpression	i + 1		7635917	0		+			
ANR	7637965	Identifier	i		7635917	0					
ANR	7637966	PrimaryExpression	1		7635917	1					
ANR	7637967	ReturnStatement	return 0 ;	818:4:31823:31831	7635917	19	True				
ANR	7637968	PrimaryExpression	0		7635917	0					
ANR	7637969	ReturnType	int		7635917	1					
ANR	7637970	Identifier	parse_cmdline_encoder		7635917	2					
ANR	7637971	ParameterList	"int argc , char * * argv , opj_cparameters_t * parameters"		7635917	3					
ANR	7637972	Parameter	int argc	271:26:11088:11095	7635917	0	True				
ANR	7637973	ParameterType	int		7635917	0					
ANR	7637974	Identifier	argc		7635917	1					
ANR	7637975	Parameter	char * * argv	271:36:11098:11108	7635917	1	True				
ANR	7637976	ParameterType	char * *		7635917	0					
ANR	7637977	Identifier	argv		7635917	1					
ANR	7637978	Parameter	opj_cparameters_t * parameters	271:49:11111:11139	7635917	2	True				
ANR	7637979	ParameterType	opj_cparameters_t *		7635917	0					
ANR	7637980	Identifier	parameters		7635917	1					
ANR	7637981	CFGEntryNode	ENTRY		7635917		True				
ANR	7637982	CFGExitNode	EXIT		7635917		True				
ANR	7637983	Symbol	* * parameters		7635917						
ANR	7637984	Symbol	* parameters -> prct_init		7635917						
ANR	7637985	Symbol	& parameters -> volume_offset_z0		7635917						
ANR	7637986	Symbol	parameters -> cp_tz0		7635917						
ANR	7637987	Symbol	TRF_2D_DWT		7635917						
ANR	7637988	Symbol	cblockh_init		7635917						
ANR	7637989	Symbol	opj_getopt		7635917						
ANR	7637990	Symbol	parameters -> transform_format		7635917						
ANR	7637991	Symbol	parameters -> encoding_format		7635917						
ANR	7637992	Symbol	parameters -> tile_size_on		7635917						
ANR	7637993	Symbol	TRF_3D_DWT		7635917						
ANR	7637994	Symbol	* numpocs		7635917						
ANR	7637995	Symbol	ENCOD_2EB		7635917						
ANR	7637996	Symbol	& POC [ numpocs ] . tile		7635917						
ANR	7637997	Symbol	parameters -> volume_offset_z0		7635917						
ANR	7637998	Symbol	parameters -> tcp_numlayers		7635917						
ANR	7637999	Symbol	& POC [ numpocs ] . resno1		7635917						
ANR	7638000	Symbol	* parameters -> POC		7635917						
ANR	7638001	Symbol	& POC [ numpocs ] . resno0		7635917						
ANR	7638002	Symbol	parameters -> cp_ty0		7635917						
ANR	7638003	Symbol	cache		7635917						
ANR	7638004	Symbol	POC		7635917						
ANR	7638005	Symbol	POC [ numpocs ] . prg		7635917						
ANR	7638006	Symbol	opj_optarg		7635917						
ANR	7638007	Symbol	ENCOD_3GR		7635917						
ANR	7638008	Symbol	BIN_DFMT		7635917						
ANR	7638009	Symbol	index		7635917						
ANR	7638010	Symbol	parameters -> tcp_rates		7635917						
ANR	7638011	Symbol	parameters -> prct_init		7635917						
ANR	7638012	Symbol	parameters -> prog_order		7635917						
ANR	7638013	Symbol	res_spec		7635917						
ANR	7638014	Symbol	parameters -> index_on		7635917						
ANR	7638015	Symbol	sscanf		7635917						
ANR	7638016	Symbol	& parameters -> subsampling_dx		7635917						
ANR	7638017	Symbol	IMG_DFMT		7635917						
ANR	7638018	Symbol	parameters -> csty		7635917						
ANR	7638019	Symbol	parameters -> cod_format		7635917						
ANR	7638020	Symbol	& parameters -> volume_offset_x0		7635917						
ANR	7638021	Symbol	& sep		7635917						
ANR	7638022	Symbol	infile		7635917						
ANR	7638023	Symbol	parameters -> POC		7635917						
ANR	7638024	Symbol	coding		7635917						
ANR	7638025	Symbol	parameters -> POC [ i ] . prg		7635917						
ANR	7638026	Symbol	parameters -> res_spec		7635917						
ANR	7638027	Symbol	PGX_DFMT		7635917						
ANR	7638028	Symbol	parameters -> dcoffset		7635917						
ANR	7638029	Symbol	parameters -> cp_disto_alloc		7635917						
ANR	7638030	Symbol	sep		7635917						
ANR	7638031	Symbol	cblockl_init		7635917						
ANR	7638032	Symbol	parameters -> tcp_distoratio		7635917						
ANR	7638033	Symbol	* parameters -> imgfile		7635917						
ANR	7638034	Symbol	c		7635917						
ANR	7638035	Symbol	& parameters -> volume_offset_y0		7635917						
ANR	7638036	Symbol	& parameters -> roi_compno		7635917						
ANR	7638037	Symbol	& parameters -> roi_shift		7635917						
ANR	7638038	Symbol	ENCOD_2GR		7635917						
ANR	7638039	Symbol	get_file_format		7635917						
ANR	7638040	Symbol	& POC [ numpocs ] . compno1		7635917						
ANR	7638041	Symbol	give_coding		7635917						
ANR	7638042	Symbol	i		7635917						
ANR	7638043	Symbol	& POC [ numpocs ] . compno0		7635917						
ANR	7638044	Symbol	parameters -> numresolution		7635917						
ANR	7638045	Symbol	* POC		7635917						
ANR	7638046	Symbol	s		7635917						
ANR	7638047	Symbol	give_progression		7635917						
ANR	7638048	Symbol	parameters -> index		7635917						
ANR	7638049	Symbol	& cblockl_init		7635917						
ANR	7638050	Symbol	& parameters -> dcoffset		7635917						
ANR	7638051	Symbol	parameters -> irreversible		7635917						
ANR	7638052	Symbol	J2K_CFMT		7635917						
ANR	7638053	Symbol	& value		7635917						
ANR	7638054	Symbol	stdout		7635917						
ANR	7638055	Symbol	strpbrk		7635917						
ANR	7638056	Symbol	& parameters -> cp_tx0		7635917						
ANR	7638057	Symbol	parameters -> mode		7635917						
ANR	7638058	Symbol	imgformat		7635917						
ANR	7638059	Symbol	* parameters -> infile		7635917						
ANR	7638060	Symbol	J3D_CFMT		7635917						
ANR	7638061	Symbol	parameters -> imgfile		7635917						
ANR	7638062	Symbol	TRF_3D_LSE		7635917						
ANR	7638063	Symbol	& parameters -> cp_tdz		7635917						
ANR	7638064	Symbol	& parameters -> cp_tdy		7635917						
ANR	7638065	Symbol	& parameters -> cp_tdx		7635917						
ANR	7638066	Symbol	NULL		7635917						
ANR	7638067	Symbol	& cblockh_init		7635917						
ANR	7638068	Symbol	* parameters -> outfile		7635917						
ANR	7638069	Symbol	parameters -> cp_fixed_quality		7635917						
ANR	7638070	Symbol	* parameters		7635917						
ANR	7638071	Symbol	true		7635917						
ANR	7638072	Symbol	parameters		7635917						
ANR	7638073	Symbol	& parameters -> cp_tz0		7635917						
ANR	7638074	Symbol	parameters -> cp_tx0		7635917						
ANR	7638075	Symbol	aux		7635917						
ANR	7638076	Symbol	& parameters -> subsampling_dy		7635917						
ANR	7638077	Symbol	outfile		7635917						
ANR	7638078	Symbol	& parameters -> subsampling_dz		7635917						
ANR	7638079	Symbol	progression		7635917						
ANR	7638080	Symbol	parameters -> outfile		7635917						
ANR	7638081	Symbol	argv		7635917						
ANR	7638082	Symbol	* parameters -> numresolution		7635917						
ANR	7638083	Symbol	cblockw_init		7635917						
ANR	7638084	Symbol	parameters -> cp_fixed_alloc		7635917						
ANR	7638085	Symbol	parameters -> volume_offset_x0		7635917						
ANR	7638086	Symbol	TRF_3D_RLS		7635917						
ANR	7638087	Symbol	value		7635917						
ANR	7638088	Symbol	argc		7635917						
ANR	7638089	Symbol	& cblockw_init		7635917						
ANR	7638090	Symbol	POC [ numpocs ] . progorder		7635917						
ANR	7638091	Symbol	& POC [ numpocs ] . layno1		7635917						
ANR	7638092	Symbol	& parameters -> cp_ty0		7635917						
ANR	7638093	Symbol	ENCOD_3EB		7635917						
ANR	7638094	Symbol	parameters -> numpocs		7635917						
ANR	7638095	Symbol	parameters -> infile		7635917						
ANR	7638096	Symbol	parameters -> decod_format		7635917						
ANR	7638097	Symbol	* i		7635917						
ANR	7638098	Symbol	parameters -> cblock_init		7635917						
ANR	7638099	Symbol	imgfile		7635917						
ANR	7638100	Symbol	* parameters -> tcp_rates		7635917						
ANR	7638101	Symbol	parameters -> volume_offset_y0		7635917						
ANR	7638102	Symbol	* parameters -> cblock_init		7635917						
ANR	7638103	Symbol	MAX_PATH		7635917						
ANR	7638104	Symbol	numpocs		7635917						
ANR	7638105	Symbol	* s		7635917						
ANR	7638106	Function	error_callback	826:0:31979:32116							
ANR	7638107	FunctionDef	"error_callback (const char * msg , void * client_data)"		7638106	0					
ANR	7638108	CompoundStatement		827:0:32035:32116	7638106	0					
ANR	7638109	IdentifierDeclStatement	FILE * stream = ( FILE * ) client_data ;	828:4:32041:32074	7638106	0	True				
ANR	7638110	IdentifierDecl	* stream = ( FILE * ) client_data		7638106	0					
ANR	7638111	IdentifierDeclType	FILE *		7638106	0					
ANR	7638112	Identifier	stream		7638106	1					
ANR	7638113	AssignmentExpression	* stream = ( FILE * ) client_data		7638106	2		=			
ANR	7638114	Identifier	stream		7638106	0					
ANR	7638115	CastExpression	( FILE * ) client_data		7638106	1					
ANR	7638116	CastTarget	FILE *		7638106	0					
ANR	7638117	Identifier	client_data		7638106	1					
ANR	7638118	ExpressionStatement	"fprintf ( stream , ""[ERROR] %s"" , msg )"	829:4:32080:32114	7638106	1	True				
ANR	7638119	CallExpression	"fprintf ( stream , ""[ERROR] %s"" , msg )"		7638106	0					
ANR	7638120	Callee	fprintf		7638106	0					
ANR	7638121	Identifier	fprintf		7638106	0					
ANR	7638122	ArgumentList	stream		7638106	1					
ANR	7638123	Argument	stream		7638106	0					
ANR	7638124	Identifier	stream		7638106	0					
ANR	7638125	Argument	"""[ERROR] %s"""		7638106	1					
ANR	7638126	PrimaryExpression	"""[ERROR] %s"""		7638106	0					
ANR	7638127	Argument	msg		7638106	2					
ANR	7638128	Identifier	msg		7638106	0					
ANR	7638129	ReturnType	void		7638106	1					
ANR	7638130	Identifier	error_callback		7638106	2					
ANR	7638131	ParameterList	"const char * msg , void * client_data"		7638106	3					
ANR	7638132	Parameter	const char * msg	826:20:31999:32013	7638106	0	True				
ANR	7638133	ParameterType	const char *		7638106	0					
ANR	7638134	Identifier	msg		7638106	1					
ANR	7638135	Parameter	void * client_data	826:37:32016:32032	7638106	1	True				
ANR	7638136	ParameterType	void *		7638106	0					
ANR	7638137	Identifier	client_data		7638106	1					
ANR	7638138	CFGEntryNode	ENTRY		7638106		True				
ANR	7638139	CFGExitNode	EXIT		7638106		True				
ANR	7638140	Symbol	msg		7638106						
ANR	7638141	Symbol	client_data		7638106						
ANR	7638142	Symbol	stream		7638106						
ANR	7638143	Function	warning_callback	834:0:32181:32322							
ANR	7638144	FunctionDef	"warning_callback (const char * msg , void * client_data)"		7638143	0					
ANR	7638145	CompoundStatement		835:0:32239:32322	7638143	0					
ANR	7638146	IdentifierDeclStatement	FILE * stream = ( FILE * ) client_data ;	836:4:32245:32278	7638143	0	True				
ANR	7638147	IdentifierDecl	* stream = ( FILE * ) client_data		7638143	0					
ANR	7638148	IdentifierDeclType	FILE *		7638143	0					
ANR	7638149	Identifier	stream		7638143	1					
ANR	7638150	AssignmentExpression	* stream = ( FILE * ) client_data		7638143	2		=			
ANR	7638151	Identifier	stream		7638143	0					
ANR	7638152	CastExpression	( FILE * ) client_data		7638143	1					
ANR	7638153	CastTarget	FILE *		7638143	0					
ANR	7638154	Identifier	client_data		7638143	1					
ANR	7638155	ExpressionStatement	"fprintf ( stream , ""[WARNING] %s"" , msg )"	837:4:32284:32320	7638143	1	True				
ANR	7638156	CallExpression	"fprintf ( stream , ""[WARNING] %s"" , msg )"		7638143	0					
ANR	7638157	Callee	fprintf		7638143	0					
ANR	7638158	Identifier	fprintf		7638143	0					
ANR	7638159	ArgumentList	stream		7638143	1					
ANR	7638160	Argument	stream		7638143	0					
ANR	7638161	Identifier	stream		7638143	0					
ANR	7638162	Argument	"""[WARNING] %s"""		7638143	1					
ANR	7638163	PrimaryExpression	"""[WARNING] %s"""		7638143	0					
ANR	7638164	Argument	msg		7638143	2					
ANR	7638165	Identifier	msg		7638143	0					
ANR	7638166	ReturnType	void		7638143	1					
ANR	7638167	Identifier	warning_callback		7638143	2					
ANR	7638168	ParameterList	"const char * msg , void * client_data"		7638143	3					
ANR	7638169	Parameter	const char * msg	834:22:32203:32217	7638143	0	True				
ANR	7638170	ParameterType	const char *		7638143	0					
ANR	7638171	Identifier	msg		7638143	1					
ANR	7638172	Parameter	void * client_data	834:39:32220:32236	7638143	1	True				
ANR	7638173	ParameterType	void *		7638143	0					
ANR	7638174	Identifier	client_data		7638143	1					
ANR	7638175	CFGEntryNode	ENTRY		7638143		True				
ANR	7638176	CFGExitNode	EXIT		7638143		True				
ANR	7638177	Symbol	msg		7638143						
ANR	7638178	Symbol	client_data		7638143						
ANR	7638179	Symbol	stream		7638143						
ANR	7638180	Function	info_callback	842:0:32385:32520							
ANR	7638181	FunctionDef	"info_callback (const char * msg , void * client_data)"		7638180	0					
ANR	7638182	CompoundStatement		843:0:32440:32520	7638180	0					
ANR	7638183	IdentifierDeclStatement	FILE * stream = ( FILE * ) client_data ;	844:4:32446:32479	7638180	0	True				
ANR	7638184	IdentifierDecl	* stream = ( FILE * ) client_data		7638180	0					
ANR	7638185	IdentifierDeclType	FILE *		7638180	0					
ANR	7638186	Identifier	stream		7638180	1					
ANR	7638187	AssignmentExpression	* stream = ( FILE * ) client_data		7638180	2		=			
ANR	7638188	Identifier	stream		7638180	0					
ANR	7638189	CastExpression	( FILE * ) client_data		7638180	1					
ANR	7638190	CastTarget	FILE *		7638180	0					
ANR	7638191	Identifier	client_data		7638180	1					
ANR	7638192	ExpressionStatement	"fprintf ( stream , ""[INFO] %s"" , msg )"	845:4:32485:32518	7638180	1	True				
ANR	7638193	CallExpression	"fprintf ( stream , ""[INFO] %s"" , msg )"		7638180	0					
ANR	7638194	Callee	fprintf		7638180	0					
ANR	7638195	Identifier	fprintf		7638180	0					
ANR	7638196	ArgumentList	stream		7638180	1					
ANR	7638197	Argument	stream		7638180	0					
ANR	7638198	Identifier	stream		7638180	0					
ANR	7638199	Argument	"""[INFO] %s"""		7638180	1					
ANR	7638200	PrimaryExpression	"""[INFO] %s"""		7638180	0					
ANR	7638201	Argument	msg		7638180	2					
ANR	7638202	Identifier	msg		7638180	0					
ANR	7638203	ReturnType	void		7638180	1					
ANR	7638204	Identifier	info_callback		7638180	2					
ANR	7638205	ParameterList	"const char * msg , void * client_data"		7638180	3					
ANR	7638206	Parameter	const char * msg	842:19:32404:32418	7638180	0	True				
ANR	7638207	ParameterType	const char *		7638180	0					
ANR	7638208	Identifier	msg		7638180	1					
ANR	7638209	Parameter	void * client_data	842:36:32421:32437	7638180	1	True				
ANR	7638210	ParameterType	void *		7638180	0					
ANR	7638211	Identifier	client_data		7638180	1					
ANR	7638212	CFGEntryNode	ENTRY		7638180		True				
ANR	7638213	CFGExitNode	EXIT		7638180		True				
ANR	7638214	Symbol	msg		7638180						
ANR	7638215	Symbol	client_data		7638180						
ANR	7638216	Symbol	stream		7638180						
ANR	7638217	Function	main	850:0:32605:37512							
ANR	7638218	FunctionDef	"main (int argc , char * * argv)"		7638217	0					
ANR	7638219	CompoundStatement		851:0:32637:37512	7638217	0					
ANR	7638220	IdentifierDeclStatement	bool bSuccess ;	852:4:32643:32656	7638217	0	True				
ANR	7638221	IdentifierDecl	bSuccess		7638217	0					
ANR	7638222	IdentifierDeclType	bool		7638217	0					
ANR	7638223	Identifier	bSuccess		7638217	1					
ANR	7638224	IdentifierDeclStatement	bool delete_comment = true ;	853:4:32662:32688	7638217	1	True				
ANR	7638225	IdentifierDecl	delete_comment = true		7638217	0					
ANR	7638226	IdentifierDeclType	bool		7638217	0					
ANR	7638227	Identifier	delete_comment		7638217	1					
ANR	7638228	AssignmentExpression	delete_comment = true		7638217	2		=			
ANR	7638229	Identifier	true		7638217	0					
ANR	7638230	Identifier	true		7638217	1					
ANR	7638231	IdentifierDeclStatement	opj_cparameters_t parameters ;	854:4:32694:32722	7638217	2	True				
ANR	7638232	IdentifierDecl	parameters		7638217	0					
ANR	7638233	IdentifierDeclType	opj_cparameters_t		7638217	0					
ANR	7638234	Identifier	parameters		7638217	1					
ANR	7638235	IdentifierDeclStatement	opj_event_mgr_t event_mgr ;	855:4:32759:32784	7638217	3	True				
ANR	7638236	IdentifierDecl	event_mgr		7638217	0					
ANR	7638237	IdentifierDeclType	opj_event_mgr_t		7638217	0					
ANR	7638238	Identifier	event_mgr		7638217	1					
ANR	7638239	IdentifierDeclStatement	opj_volume_t * volume = NULL ;	856:4:32815:32842	7638217	4	True				
ANR	7638240	IdentifierDecl	* volume = NULL		7638217	0					
ANR	7638241	IdentifierDeclType	opj_volume_t *		7638217	0					
ANR	7638242	Identifier	volume		7638217	1					
ANR	7638243	AssignmentExpression	* volume = NULL		7638217	2		=			
ANR	7638244	Identifier	NULL		7638217	0					
ANR	7638245	Identifier	NULL		7638217	1					
ANR	7638246	ExpressionStatement	"memset ( & event_mgr , 0 , sizeof ( opj_event_mgr_t ) )"	862:4:32953:32999	7638217	5	True				
ANR	7638247	CallExpression	"memset ( & event_mgr , 0 , sizeof ( opj_event_mgr_t ) )"		7638217	0					
ANR	7638248	Callee	memset		7638217	0					
ANR	7638249	Identifier	memset		7638217	0					
ANR	7638250	ArgumentList	& event_mgr		7638217	1					
ANR	7638251	Argument	& event_mgr		7638217	0					
ANR	7638252	UnaryOperationExpression	& event_mgr		7638217	0					
ANR	7638253	UnaryOperator	&		7638217	0					
ANR	7638254	Identifier	event_mgr		7638217	1					
ANR	7638255	Argument	0		7638217	1					
ANR	7638256	PrimaryExpression	0		7638217	0					
ANR	7638257	Argument	sizeof ( opj_event_mgr_t )		7638217	2					
ANR	7638258	SizeofExpression	sizeof ( opj_event_mgr_t )		7638217	0					
ANR	7638259	Sizeof	sizeof		7638217	0					
ANR	7638260	SizeofOperand	opj_event_mgr_t		7638217	1					
ANR	7638261	ExpressionStatement	event_mgr . error_handler = error_callback	863:4:33005:33045	7638217	6	True				
ANR	7638262	AssignmentExpression	event_mgr . error_handler = error_callback		7638217	0		=			
ANR	7638263	MemberAccess	event_mgr . error_handler		7638217	0					
ANR	7638264	Identifier	event_mgr		7638217	0					
ANR	7638265	Identifier	error_handler		7638217	1					
ANR	7638266	Identifier	error_callback		7638217	1					
ANR	7638267	ExpressionStatement	event_mgr . warning_handler = warning_callback	864:4:33051:33095	7638217	7	True				
ANR	7638268	AssignmentExpression	event_mgr . warning_handler = warning_callback		7638217	0		=			
ANR	7638269	MemberAccess	event_mgr . warning_handler		7638217	0					
ANR	7638270	Identifier	event_mgr		7638217	0					
ANR	7638271	Identifier	warning_handler		7638217	1					
ANR	7638272	Identifier	warning_callback		7638217	1					
ANR	7638273	ExpressionStatement	event_mgr . info_handler = info_callback	865:4:33101:33139	7638217	8	True				
ANR	7638274	AssignmentExpression	event_mgr . info_handler = info_callback		7638217	0		=			
ANR	7638275	MemberAccess	event_mgr . info_handler		7638217	0					
ANR	7638276	Identifier	event_mgr		7638217	0					
ANR	7638277	Identifier	info_handler		7638217	1					
ANR	7638278	Identifier	info_callback		7638217	1					
ANR	7638279	ExpressionStatement	opj_set_default_encoder_parameters ( & parameters )	868:4:33198:33245	7638217	9	True				
ANR	7638280	CallExpression	opj_set_default_encoder_parameters ( & parameters )		7638217	0					
ANR	7638281	Callee	opj_set_default_encoder_parameters		7638217	0					
ANR	7638282	Identifier	opj_set_default_encoder_parameters		7638217	0					
ANR	7638283	ArgumentList	& parameters		7638217	1					
ANR	7638284	Argument	& parameters		7638217	0					
ANR	7638285	UnaryOperationExpression	& parameters		7638217	0					
ANR	7638286	UnaryOperator	&		7638217	0					
ANR	7638287	Identifier	parameters		7638217	1					
ANR	7638288	IfStatement	"if ( parse_cmdline_encoder ( argc , argv , & parameters ) == 1 )"		7638217	10					
ANR	7638289	Condition	"parse_cmdline_encoder ( argc , argv , & parameters ) == 1"	871:8:33311:33361	7638217	0	True				
ANR	7638290	EqualityExpression	"parse_cmdline_encoder ( argc , argv , & parameters ) == 1"		7638217	0		==			
ANR	7638291	CallExpression	"parse_cmdline_encoder ( argc , argv , & parameters )"		7638217	0					
ANR	7638292	Callee	parse_cmdline_encoder		7638217	0					
ANR	7638293	Identifier	parse_cmdline_encoder		7638217	0					
ANR	7638294	ArgumentList	argc		7638217	1					
ANR	7638295	Argument	argc		7638217	0					
ANR	7638296	Identifier	argc		7638217	0					
ANR	7638297	Argument	argv		7638217	1					
ANR	7638298	Identifier	argv		7638217	0					
ANR	7638299	Argument	& parameters		7638217	2					
ANR	7638300	UnaryOperationExpression	& parameters		7638217	0					
ANR	7638301	UnaryOperator	&		7638217	0					
ANR	7638302	Identifier	parameters		7638217	1					
ANR	7638303	PrimaryExpression	1		7638217	1					
ANR	7638304	CompoundStatement		21:61:726:726	7638217	1					
ANR	7638305	ReturnStatement	return 0 ;	872:8:33374:33382	7638217	0	True				
ANR	7638306	PrimaryExpression	0		7638217	0					
ANR	7638307	IfStatement	if ( parameters . cp_comment == NULL )		7638217	11					
ANR	7638308	Condition	parameters . cp_comment == NULL	875:8:33399:33427	7638217	0	True				
ANR	7638309	EqualityExpression	parameters . cp_comment == NULL		7638217	0		==			
ANR	7638310	MemberAccess	parameters . cp_comment		7638217	0					
ANR	7638311	Identifier	parameters		7638217	0					
ANR	7638312	Identifier	cp_comment		7638217	1					
ANR	7638313	Identifier	NULL		7638217	1					
ANR	7638314	CompoundStatement		25:39:792:792	7638217	1					
ANR	7638315	ExpressionStatement	"parameters . cp_comment = ""Created by OpenJPEG version JP3D"""	876:8:33440:33498	7638217	0	True				
ANR	7638316	AssignmentExpression	"parameters . cp_comment = ""Created by OpenJPEG version JP3D"""		7638217	0		=			
ANR	7638317	MemberAccess	parameters . cp_comment		7638217	0					
ANR	7638318	Identifier	parameters		7638217	0					
ANR	7638319	Identifier	cp_comment		7638217	1					
ANR	7638320	PrimaryExpression	"""Created by OpenJPEG version JP3D"""		7638217	1					
ANR	7638321	ExpressionStatement	delete_comment = false	878:8:33570:33592	7638217	1	True				
ANR	7638322	AssignmentExpression	delete_comment = false		7638217	0		=			
ANR	7638323	Identifier	delete_comment		7638217	0					
ANR	7638324	Identifier	false		7638217	1					
ANR	7638325	IfStatement	if ( parameters . cod_format == J3D_CFMT || parameters . cod_format == J2K_CFMT )		7638217	12					
ANR	7638326	Condition	parameters . cod_format == J3D_CFMT || parameters . cod_format == J2K_CFMT	883:8:33688:33757	7638217	0	True				
ANR	7638327	OrExpression	parameters . cod_format == J3D_CFMT || parameters . cod_format == J2K_CFMT		7638217	0		||			
ANR	7638328	EqualityExpression	parameters . cod_format == J3D_CFMT		7638217	0		==			
ANR	7638329	MemberAccess	parameters . cod_format		7638217	0					
ANR	7638330	Identifier	parameters		7638217	0					
ANR	7638331	Identifier	cod_format		7638217	1					
ANR	7638332	Identifier	J3D_CFMT		7638217	1					
ANR	7638333	EqualityExpression	parameters . cod_format == J2K_CFMT		7638217	1		==			
ANR	7638334	MemberAccess	parameters . cod_format		7638217	0					
ANR	7638335	Identifier	parameters		7638217	0					
ANR	7638336	Identifier	cod_format		7638217	1					
ANR	7638337	Identifier	J2K_CFMT		7638217	1					
ANR	7638338	CompoundStatement		37:8:1234:1259	7638217	1					
ANR	7638339	IdentifierDeclStatement	"int codestream_length , pixels , bitsin ;"	884:8:33770:33807	7638217	0	True				
ANR	7638340	IdentifierDecl	codestream_length		7638217	0					
ANR	7638341	IdentifierDeclType	int		7638217	0					
ANR	7638342	Identifier	codestream_length		7638217	1					
ANR	7638343	IdentifierDecl	pixels		7638217	1					
ANR	7638344	IdentifierDeclType	int		7638217	0					
ANR	7638345	Identifier	pixels		7638217	1					
ANR	7638346	IdentifierDecl	bitsin		7638217	2					
ANR	7638347	IdentifierDeclType	int		7638217	0					
ANR	7638348	Identifier	bitsin		7638217	1					
ANR	7638349	IdentifierDeclStatement	opj_cio_t * cio = NULL ;	885:8:33817:33838	7638217	1	True				
ANR	7638350	IdentifierDecl	* cio = NULL		7638217	0					
ANR	7638351	IdentifierDeclType	opj_cio_t *		7638217	0					
ANR	7638352	Identifier	cio		7638217	1					
ANR	7638353	AssignmentExpression	* cio = NULL		7638217	2		=			
ANR	7638354	Identifier	NULL		7638217	0					
ANR	7638355	Identifier	NULL		7638217	1					
ANR	7638356	IdentifierDeclStatement	FILE * f = NULL ;	886:8:33848:33862	7638217	2	True				
ANR	7638357	IdentifierDecl	* f = NULL		7638217	0					
ANR	7638358	IdentifierDeclType	FILE *		7638217	0					
ANR	7638359	Identifier	f		7638217	1					
ANR	7638360	AssignmentExpression	* f = NULL		7638217	2		=			
ANR	7638361	Identifier	NULL		7638217	0					
ANR	7638362	Identifier	NULL		7638217	1					
ANR	7638363	IdentifierDeclStatement	opj_cinfo_t * cinfo = NULL ;	887:8:33872:33897	7638217	3	True				
ANR	7638364	IdentifierDecl	* cinfo = NULL		7638217	0					
ANR	7638365	IdentifierDeclType	opj_cinfo_t *		7638217	0					
ANR	7638366	Identifier	cinfo		7638217	1					
ANR	7638367	AssignmentExpression	* cinfo = NULL		7638217	2		=			
ANR	7638368	Identifier	NULL		7638217	0					
ANR	7638369	Identifier	NULL		7638217	1					
ANR	7638370	SwitchStatement	switch ( parameters . decod_format )		7638217	4					
ANR	7638371	Condition	parameters . decod_format	891:16:33993:34015	7638217	0	True				
ANR	7638372	MemberAccess	parameters . decod_format		7638217	0					
ANR	7638373	Identifier	parameters		7638217	0					
ANR	7638374	Identifier	decod_format		7638217	1					
ANR	7638375	CompoundStatement		41:41:1380:1380	7638217	1					
ANR	7638376	Label	case PGX_DFMT :	892:8:34028:34041	7638217	0	True				
ANR	7638377	Identifier	PGX_DFMT		7638217	0					
ANR	7638378	ExpressionStatement	"fprintf ( stdout , ""[INFO] Loading pgx file(s)\\n"" )"	893:12:34055:34102	7638217	1	True				
ANR	7638379	CallExpression	"fprintf ( stdout , ""[INFO] Loading pgx file(s)\\n"" )"		7638217	0					
ANR	7638380	Callee	fprintf		7638217	0					
ANR	7638381	Identifier	fprintf		7638217	0					
ANR	7638382	ArgumentList	stdout		7638217	1					
ANR	7638383	Argument	stdout		7638217	0					
ANR	7638384	Identifier	stdout		7638217	0					
ANR	7638385	Argument	"""[INFO] Loading pgx file(s)\\n"""		7638217	1					
ANR	7638386	PrimaryExpression	"""[INFO] Loading pgx file(s)\\n"""		7638217	0					
ANR	7638387	ExpressionStatement	"volume = pgxtovolume ( parameters . infile , & parameters )"	894:12:34116:34168	7638217	2	True				
ANR	7638388	AssignmentExpression	"volume = pgxtovolume ( parameters . infile , & parameters )"		7638217	0		=			
ANR	7638389	Identifier	volume		7638217	0					
ANR	7638390	CallExpression	"pgxtovolume ( parameters . infile , & parameters )"		7638217	1					
ANR	7638391	Callee	pgxtovolume		7638217	0					
ANR	7638392	Identifier	pgxtovolume		7638217	0					
ANR	7638393	ArgumentList	parameters . infile		7638217	1					
ANR	7638394	Argument	parameters . infile		7638217	0					
ANR	7638395	MemberAccess	parameters . infile		7638217	0					
ANR	7638396	Identifier	parameters		7638217	0					
ANR	7638397	Identifier	infile		7638217	1					
ANR	7638398	Argument	& parameters		7638217	1					
ANR	7638399	UnaryOperationExpression	& parameters		7638217	0					
ANR	7638400	UnaryOperator	&		7638217	0					
ANR	7638401	Identifier	parameters		7638217	1					
ANR	7638402	IfStatement	if ( ! volume )		7638217	3					
ANR	7638403	Condition	! volume	895:16:34186:34192	7638217	0	True				
ANR	7638404	UnaryOperationExpression	! volume		7638217	0					
ANR	7638405	UnaryOperator	!		7638217	0					
ANR	7638406	Identifier	volume		7638217	1					
ANR	7638407	CompoundStatement		45:25:1557:1557	7638217	1					
ANR	7638408	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unable to load pgx files\\n"" )"	896:16:34213:34266	7638217	0	True				
ANR	7638409	CallExpression	"fprintf ( stdout , ""[ERROR] Unable to load pgx files\\n"" )"		7638217	0					
ANR	7638410	Callee	fprintf		7638217	0					
ANR	7638411	Identifier	fprintf		7638217	0					
ANR	7638412	ArgumentList	stdout		7638217	1					
ANR	7638413	Argument	stdout		7638217	0					
ANR	7638414	Identifier	stdout		7638217	0					
ANR	7638415	Argument	"""[ERROR] Unable to load pgx files\\n"""		7638217	1					
ANR	7638416	PrimaryExpression	"""[ERROR] Unable to load pgx files\\n"""		7638217	0					
ANR	7638417	ReturnStatement	return 1 ;	897:16:34284:34292	7638217	1	True				
ANR	7638418	PrimaryExpression	1		7638217	0					
ANR	7638419	BreakStatement	break ;	899:12:34320:34325	7638217	4	True				
ANR	7638420	Label	case BIN_DFMT :	901:8:34336:34349	7638217	5	True				
ANR	7638421	Identifier	BIN_DFMT		7638217	0					
ANR	7638422	ExpressionStatement	"fprintf ( stdout , ""[INFO] Loading bin file\\n"" )"	902:12:34363:34407	7638217	6	True				
ANR	7638423	CallExpression	"fprintf ( stdout , ""[INFO] Loading bin file\\n"" )"		7638217	0					
ANR	7638424	Callee	fprintf		7638217	0					
ANR	7638425	Identifier	fprintf		7638217	0					
ANR	7638426	ArgumentList	stdout		7638217	1					
ANR	7638427	Argument	stdout		7638217	0					
ANR	7638428	Identifier	stdout		7638217	0					
ANR	7638429	Argument	"""[INFO] Loading bin file\\n"""		7638217	1					
ANR	7638430	PrimaryExpression	"""[INFO] Loading bin file\\n"""		7638217	0					
ANR	7638431	ExpressionStatement	"volume = bintovolume ( parameters . infile , parameters . imgfile , & parameters )"	903:12:34421:34493	7638217	7	True				
ANR	7638432	AssignmentExpression	"volume = bintovolume ( parameters . infile , parameters . imgfile , & parameters )"		7638217	0		=			
ANR	7638433	Identifier	volume		7638217	0					
ANR	7638434	CallExpression	"bintovolume ( parameters . infile , parameters . imgfile , & parameters )"		7638217	1					
ANR	7638435	Callee	bintovolume		7638217	0					
ANR	7638436	Identifier	bintovolume		7638217	0					
ANR	7638437	ArgumentList	parameters . infile		7638217	1					
ANR	7638438	Argument	parameters . infile		7638217	0					
ANR	7638439	MemberAccess	parameters . infile		7638217	0					
ANR	7638440	Identifier	parameters		7638217	0					
ANR	7638441	Identifier	infile		7638217	1					
ANR	7638442	Argument	parameters . imgfile		7638217	1					
ANR	7638443	MemberAccess	parameters . imgfile		7638217	0					
ANR	7638444	Identifier	parameters		7638217	0					
ANR	7638445	Identifier	imgfile		7638217	1					
ANR	7638446	Argument	& parameters		7638217	2					
ANR	7638447	UnaryOperationExpression	& parameters		7638217	0					
ANR	7638448	UnaryOperator	&		7638217	0					
ANR	7638449	Identifier	parameters		7638217	1					
ANR	7638450	IfStatement	if ( ! volume )		7638217	8					
ANR	7638451	Condition	! volume	904:16:34511:34517	7638217	0	True				
ANR	7638452	UnaryOperationExpression	! volume		7638217	0					
ANR	7638453	UnaryOperator	!		7638217	0					
ANR	7638454	Identifier	volume		7638217	1					
ANR	7638455	CompoundStatement		54:25:1882:1882	7638217	1					
ANR	7638456	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Unable to load bin file\\n"" )"	905:16:34538:34590	7638217	0	True				
ANR	7638457	CallExpression	"fprintf ( stdout , ""[ERROR] Unable to load bin file\\n"" )"		7638217	0					
ANR	7638458	Callee	fprintf		7638217	0					
ANR	7638459	Identifier	fprintf		7638217	0					
ANR	7638460	ArgumentList	stdout		7638217	1					
ANR	7638461	Argument	stdout		7638217	0					
ANR	7638462	Identifier	stdout		7638217	0					
ANR	7638463	Argument	"""[ERROR] Unable to load bin file\\n"""		7638217	1					
ANR	7638464	PrimaryExpression	"""[ERROR] Unable to load bin file\\n"""		7638217	0					
ANR	7638465	ReturnStatement	return 1 ;	906:16:34608:34616	7638217	1	True				
ANR	7638466	PrimaryExpression	1		7638217	0					
ANR	7638467	BreakStatement	break ;	908:12:34644:34649	7638217	9	True				
ANR	7638468	Label	case IMG_DFMT :	910:8:34660:34673	7638217	10	True				
ANR	7638469	Identifier	IMG_DFMT		7638217	0					
ANR	7638470	ExpressionStatement	"fprintf ( stdout , ""[INFO] Loading img file\\n"" )"	911:12:34687:34731	7638217	11	True				
ANR	7638471	CallExpression	"fprintf ( stdout , ""[INFO] Loading img file\\n"" )"		7638217	0					
ANR	7638472	Callee	fprintf		7638217	0					
ANR	7638473	Identifier	fprintf		7638217	0					
ANR	7638474	ArgumentList	stdout		7638217	1					
ANR	7638475	Argument	stdout		7638217	0					
ANR	7638476	Identifier	stdout		7638217	0					
ANR	7638477	Argument	"""[INFO] Loading img file\\n"""		7638217	1					
ANR	7638478	PrimaryExpression	"""[INFO] Loading img file\\n"""		7638217	0					
ANR	7638479	ExpressionStatement	"volume = imgtovolume ( parameters . infile , & parameters )"	912:12:34745:34797	7638217	12	True				
ANR	7638480	AssignmentExpression	"volume = imgtovolume ( parameters . infile , & parameters )"		7638217	0		=			
ANR	7638481	Identifier	volume		7638217	0					
ANR	7638482	CallExpression	"imgtovolume ( parameters . infile , & parameters )"		7638217	1					
ANR	7638483	Callee	imgtovolume		7638217	0					
ANR	7638484	Identifier	imgtovolume		7638217	0					
ANR	7638485	ArgumentList	parameters . infile		7638217	1					
ANR	7638486	Argument	parameters . infile		7638217	0					
ANR	7638487	MemberAccess	parameters . infile		7638217	0					
ANR	7638488	Identifier	parameters		7638217	0					
ANR	7638489	Identifier	infile		7638217	1					
ANR	7638490	Argument	& parameters		7638217	1					
ANR	7638491	UnaryOperationExpression	& parameters		7638217	0					
ANR	7638492	UnaryOperator	&		7638217	0					
ANR	7638493	Identifier	parameters		7638217	1					
ANR	7638494	IfStatement	if ( ! volume )		7638217	13					
ANR	7638495	Condition	! volume	913:16:34815:34821	7638217	0	True				
ANR	7638496	UnaryOperationExpression	! volume		7638217	0					
ANR	7638497	UnaryOperator	!		7638217	0					
ANR	7638498	Identifier	volume		7638217	1					
ANR	7638499	CompoundStatement		63:25:2186:2186	7638217	1					
ANR	7638500	ExpressionStatement	"fprintf ( stderr , ""[ERROR] Unable to load img file\\n"" )"	914:16:34842:34894	7638217	0	True				
ANR	7638501	CallExpression	"fprintf ( stderr , ""[ERROR] Unable to load img file\\n"" )"		7638217	0					
ANR	7638502	Callee	fprintf		7638217	0					
ANR	7638503	Identifier	fprintf		7638217	0					
ANR	7638504	ArgumentList	stderr		7638217	1					
ANR	7638505	Argument	stderr		7638217	0					
ANR	7638506	Identifier	stderr		7638217	0					
ANR	7638507	Argument	"""[ERROR] Unable to load img file\\n"""		7638217	1					
ANR	7638508	PrimaryExpression	"""[ERROR] Unable to load img file\\n"""		7638217	0					
ANR	7638509	ReturnStatement	return 1 ;	915:16:34912:34920	7638217	1	True				
ANR	7638510	PrimaryExpression	1		7638217	0					
ANR	7638511	BreakStatement	break ;	917:12:34948:34953	7638217	14	True				
ANR	7638512	IfStatement	if ( parameters . cod_format == J3D_CFMT )		7638217	5					
ANR	7638513	Condition	parameters . cod_format == J3D_CFMT	921:12:35028:35060	7638217	0	True				
ANR	7638514	EqualityExpression	parameters . cod_format == J3D_CFMT		7638217	0		==			
ANR	7638515	MemberAccess	parameters . cod_format		7638217	0					
ANR	7638516	Identifier	parameters		7638217	0					
ANR	7638517	Identifier	cod_format		7638217	1					
ANR	7638518	Identifier	J3D_CFMT		7638217	1					
ANR	7638519	CompoundStatement		71:47:2425:2425	7638217	1					
ANR	7638520	ExpressionStatement	cinfo = opj_create_compress ( CODEC_J3D )	922:12:35077:35115	7638217	0	True				
ANR	7638521	AssignmentExpression	cinfo = opj_create_compress ( CODEC_J3D )		7638217	0		=			
ANR	7638522	Identifier	cinfo		7638217	0					
ANR	7638523	CallExpression	opj_create_compress ( CODEC_J3D )		7638217	1					
ANR	7638524	Callee	opj_create_compress		7638217	0					
ANR	7638525	Identifier	opj_create_compress		7638217	0					
ANR	7638526	ArgumentList	CODEC_J3D		7638217	1					
ANR	7638527	Argument	CODEC_J3D		7638217	0					
ANR	7638528	Identifier	CODEC_J3D		7638217	0					
ANR	7638529	ElseStatement	else		7638217	0					
ANR	7638530	IfStatement	if ( parameters . cod_format == J2K_CFMT )		7638217	0					
ANR	7638531	Condition	parameters . cod_format == J2K_CFMT	923:19:35136:35168	7638217	0	True				
ANR	7638532	EqualityExpression	parameters . cod_format == J2K_CFMT		7638217	0		==			
ANR	7638533	MemberAccess	parameters . cod_format		7638217	0					
ANR	7638534	Identifier	parameters		7638217	0					
ANR	7638535	Identifier	cod_format		7638217	1					
ANR	7638536	Identifier	J2K_CFMT		7638217	1					
ANR	7638537	CompoundStatement		73:54:2533:2533	7638217	1					
ANR	7638538	ExpressionStatement	cinfo = opj_create_compress ( CODEC_J2K )	924:12:35185:35223	7638217	0	True				
ANR	7638539	AssignmentExpression	cinfo = opj_create_compress ( CODEC_J2K )		7638217	0		=			
ANR	7638540	Identifier	cinfo		7638217	0					
ANR	7638541	CallExpression	opj_create_compress ( CODEC_J2K )		7638217	1					
ANR	7638542	Callee	opj_create_compress		7638217	0					
ANR	7638543	Identifier	opj_create_compress		7638217	0					
ANR	7638544	ArgumentList	CODEC_J2K		7638217	1					
ANR	7638545	Argument	CODEC_J2K		7638217	0					
ANR	7638546	Identifier	CODEC_J2K		7638217	0					
ANR	7638547	ExpressionStatement	"opj_set_event_mgr ( ( opj_common_ptr ) cinfo , & event_mgr , stdout )"	928:8:35316:35376	7638217	6	True				
ANR	7638548	CallExpression	"opj_set_event_mgr ( ( opj_common_ptr ) cinfo , & event_mgr , stdout )"		7638217	0					
ANR	7638549	Callee	opj_set_event_mgr		7638217	0					
ANR	7638550	Identifier	opj_set_event_mgr		7638217	0					
ANR	7638551	ArgumentList	( opj_common_ptr ) cinfo		7638217	1					
ANR	7638552	Argument	( opj_common_ptr ) cinfo		7638217	0					
ANR	7638553	CastExpression	( opj_common_ptr ) cinfo		7638217	0					
ANR	7638554	CastTarget	opj_common_ptr		7638217	0					
ANR	7638555	Identifier	cinfo		7638217	1					
ANR	7638556	Argument	& event_mgr		7638217	1					
ANR	7638557	UnaryOperationExpression	& event_mgr		7638217	0					
ANR	7638558	UnaryOperator	&		7638217	0					
ANR	7638559	Identifier	event_mgr		7638217	1					
ANR	7638560	Argument	stdout		7638217	2					
ANR	7638561	Identifier	stdout		7638217	0					
ANR	7638562	ExpressionStatement	"opj_setup_encoder ( cinfo , & parameters , volume )"	931:8:35481:35526	7638217	7	True				
ANR	7638563	CallExpression	"opj_setup_encoder ( cinfo , & parameters , volume )"		7638217	0					
ANR	7638564	Callee	opj_setup_encoder		7638217	0					
ANR	7638565	Identifier	opj_setup_encoder		7638217	0					
ANR	7638566	ArgumentList	cinfo		7638217	1					
ANR	7638567	Argument	cinfo		7638217	0					
ANR	7638568	Identifier	cinfo		7638217	0					
ANR	7638569	Argument	& parameters		7638217	1					
ANR	7638570	UnaryOperationExpression	& parameters		7638217	0					
ANR	7638571	UnaryOperator	&		7638217	0					
ANR	7638572	Identifier	parameters		7638217	1					
ANR	7638573	Argument	volume		7638217	2					
ANR	7638574	Identifier	volume		7638217	0					
ANR	7638575	ExpressionStatement	"cio = opj_cio_open ( ( opj_common_ptr ) cinfo , NULL , 0 )"	935:8:35626:35676	7638217	8	True				
ANR	7638576	AssignmentExpression	"cio = opj_cio_open ( ( opj_common_ptr ) cinfo , NULL , 0 )"		7638217	0		=			
ANR	7638577	Identifier	cio		7638217	0					
ANR	7638578	CallExpression	"opj_cio_open ( ( opj_common_ptr ) cinfo , NULL , 0 )"		7638217	1					
ANR	7638579	Callee	opj_cio_open		7638217	0					
ANR	7638580	Identifier	opj_cio_open		7638217	0					
ANR	7638581	ArgumentList	( opj_common_ptr ) cinfo		7638217	1					
ANR	7638582	Argument	( opj_common_ptr ) cinfo		7638217	0					
ANR	7638583	CastExpression	( opj_common_ptr ) cinfo		7638217	0					
ANR	7638584	CastTarget	opj_common_ptr		7638217	0					
ANR	7638585	Identifier	cinfo		7638217	1					
ANR	7638586	Argument	NULL		7638217	1					
ANR	7638587	Identifier	NULL		7638217	0					
ANR	7638588	Argument	0		7638217	2					
ANR	7638589	PrimaryExpression	0		7638217	0					
ANR	7638590	ExpressionStatement	"bSuccess = opj_encode ( cinfo , cio , volume , parameters . index )"	939:8:35778:35837	7638217	9	True				
ANR	7638591	AssignmentExpression	"bSuccess = opj_encode ( cinfo , cio , volume , parameters . index )"		7638217	0		=			
ANR	7638592	Identifier	bSuccess		7638217	0					
ANR	7638593	CallExpression	"opj_encode ( cinfo , cio , volume , parameters . index )"		7638217	1					
ANR	7638594	Callee	opj_encode		7638217	0					
ANR	7638595	Identifier	opj_encode		7638217	0					
ANR	7638596	ArgumentList	cinfo		7638217	1					
ANR	7638597	Argument	cinfo		7638217	0					
ANR	7638598	Identifier	cinfo		7638217	0					
ANR	7638599	Argument	cio		7638217	1					
ANR	7638600	Identifier	cio		7638217	0					
ANR	7638601	Argument	volume		7638217	2					
ANR	7638602	Identifier	volume		7638217	0					
ANR	7638603	Argument	parameters . index		7638217	3					
ANR	7638604	MemberAccess	parameters . index		7638217	0					
ANR	7638605	Identifier	parameters		7638217	0					
ANR	7638606	Identifier	index		7638217	1					
ANR	7638607	IfStatement	if ( ! bSuccess )		7638217	10					
ANR	7638608	Condition	! bSuccess	940:12:35851:35859	7638217	0	True				
ANR	7638609	UnaryOperationExpression	! bSuccess		7638217	0					
ANR	7638610	UnaryOperator	!		7638217	0					
ANR	7638611	Identifier	bSuccess		7638217	1					
ANR	7638612	CompoundStatement		90:23:3224:3224	7638217	1					
ANR	7638613	ExpressionStatement	opj_cio_close ( cio )	941:12:35876:35894	7638217	0	True				
ANR	7638614	CallExpression	opj_cio_close ( cio )		7638217	0					
ANR	7638615	Callee	opj_cio_close		7638217	0					
ANR	7638616	Identifier	opj_cio_close		7638217	0					
ANR	7638617	ArgumentList	cio		7638217	1					
ANR	7638618	Argument	cio		7638217	0					
ANR	7638619	Identifier	cio		7638217	0					
ANR	7638620	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Failed to encode volume\\n"" )"	942:12:35908:35960	7638217	1	True				
ANR	7638621	CallExpression	"fprintf ( stdout , ""[ERROR] Failed to encode volume\\n"" )"		7638217	0					
ANR	7638622	Callee	fprintf		7638217	0					
ANR	7638623	Identifier	fprintf		7638217	0					
ANR	7638624	ArgumentList	stdout		7638217	1					
ANR	7638625	Argument	stdout		7638217	0					
ANR	7638626	Identifier	stdout		7638217	0					
ANR	7638627	Argument	"""[ERROR] Failed to encode volume\\n"""		7638217	1					
ANR	7638628	PrimaryExpression	"""[ERROR] Failed to encode volume\\n"""		7638217	0					
ANR	7638629	ReturnStatement	return 1 ;	943:12:35974:35982	7638217	2	True				
ANR	7638630	PrimaryExpression	1		7638217	0					
ANR	7638631	ExpressionStatement	codestream_length = cio_tell ( cio )	945:8:36002:36035	7638217	11	True				
ANR	7638632	AssignmentExpression	codestream_length = cio_tell ( cio )		7638217	0		=			
ANR	7638633	Identifier	codestream_length		7638217	0					
ANR	7638634	CallExpression	cio_tell ( cio )		7638217	1					
ANR	7638635	Callee	cio_tell		7638217	0					
ANR	7638636	Identifier	cio_tell		7638217	0					
ANR	7638637	ArgumentList	cio		7638217	1					
ANR	7638638	Argument	cio		7638217	0					
ANR	7638639	Identifier	cio		7638217	0					
ANR	7638640	ExpressionStatement	pixels = ( volume -> x1 - volume -> x0 ) * ( volume -> y1 - volume -> y0 ) * ( volume -> z1 - volume -> z0 )	946:8:36045:36152	7638217	12	True				
ANR	7638641	AssignmentExpression	pixels = ( volume -> x1 - volume -> x0 ) * ( volume -> y1 - volume -> y0 ) * ( volume -> z1 - volume -> z0 )		7638217	0		=			
ANR	7638642	Identifier	pixels		7638217	0					
ANR	7638643	MultiplicativeExpression	( volume -> x1 - volume -> x0 ) * ( volume -> y1 - volume -> y0 ) * ( volume -> z1 - volume -> z0 )		7638217	1		*			
ANR	7638644	AdditiveExpression	volume -> x1 - volume -> x0		7638217	0		-			
ANR	7638645	PtrMemberAccess	volume -> x1		7638217	0					
ANR	7638646	Identifier	volume		7638217	0					
ANR	7638647	Identifier	x1		7638217	1					
ANR	7638648	PtrMemberAccess	volume -> x0		7638217	1					
ANR	7638649	Identifier	volume		7638217	0					
ANR	7638650	Identifier	x0		7638217	1					
ANR	7638651	MultiplicativeExpression	( volume -> y1 - volume -> y0 ) * ( volume -> z1 - volume -> z0 )		7638217	1		*			
ANR	7638652	AdditiveExpression	volume -> y1 - volume -> y0		7638217	0		-			
ANR	7638653	PtrMemberAccess	volume -> y1		7638217	0					
ANR	7638654	Identifier	volume		7638217	0					
ANR	7638655	Identifier	y1		7638217	1					
ANR	7638656	PtrMemberAccess	volume -> y0		7638217	1					
ANR	7638657	Identifier	volume		7638217	0					
ANR	7638658	Identifier	y0		7638217	1					
ANR	7638659	AdditiveExpression	volume -> z1 - volume -> z0		7638217	1		-			
ANR	7638660	PtrMemberAccess	volume -> z1		7638217	0					
ANR	7638661	Identifier	volume		7638217	0					
ANR	7638662	Identifier	z1		7638217	1					
ANR	7638663	PtrMemberAccess	volume -> z0		7638217	1					
ANR	7638664	Identifier	volume		7638217	0					
ANR	7638665	Identifier	z0		7638217	1					
ANR	7638666	ExpressionStatement	bitsin = pixels * volume -> comps [ 0 ] . prec	948:8:36162:36201	7638217	13	True				
ANR	7638667	AssignmentExpression	bitsin = pixels * volume -> comps [ 0 ] . prec		7638217	0		=			
ANR	7638668	Identifier	bitsin		7638217	0					
ANR	7638669	MultiplicativeExpression	pixels * volume -> comps [ 0 ] . prec		7638217	1		*			
ANR	7638670	Identifier	pixels		7638217	0					
ANR	7638671	MemberAccess	volume -> comps [ 0 ] . prec		7638217	1					
ANR	7638672	ArrayIndexing	volume -> comps [ 0 ]		7638217	0					
ANR	7638673	PtrMemberAccess	volume -> comps		7638217	0					
ANR	7638674	Identifier	volume		7638217	0					
ANR	7638675	Identifier	comps		7638217	1					
ANR	7638676	PrimaryExpression	0		7638217	1					
ANR	7638677	Identifier	prec		7638217	1					
ANR	7638678	ExpressionStatement	"fprintf ( stdout , ""[RESULT] Volume: %d x %d x %d (x %d bpv)\\n Codestream: %d B,  Ratio: %5.3f bpv,  (%5.3f : 1) \\n"" , ( volume -> x1 - volume -> x0 ) , ( volume -> y1 - volume -> y0 ) , ( volume -> z1 - volume -> z0 ) , volume -> comps [ 0 ] . prec , codestream_length , ( ( double ) codestream_length * 8.0 / ( double ) pixels ) , ( ( double ) bitsin / ( 8.0 * ( double ) codestream_length ) ) )"	949:8:36211:36634	7638217	14	True				
ANR	7638679	CallExpression	"fprintf ( stdout , ""[RESULT] Volume: %d x %d x %d (x %d bpv)\\n Codestream: %d B,  Ratio: %5.3f bpv,  (%5.3f : 1) \\n"" , ( volume -> x1 - volume -> x0 ) , ( volume -> y1 - volume -> y0 ) , ( volume -> z1 - volume -> z0 ) , volume -> comps [ 0 ] . prec , codestream_length , ( ( double ) codestream_length * 8.0 / ( double ) pixels ) , ( ( double ) bitsin / ( 8.0 * ( double ) codestream_length ) ) )"		7638217	0					
ANR	7638680	Callee	fprintf		7638217	0					
ANR	7638681	Identifier	fprintf		7638217	0					
ANR	7638682	ArgumentList	stdout		7638217	1					
ANR	7638683	Argument	stdout		7638217	0					
ANR	7638684	Identifier	stdout		7638217	0					
ANR	7638685	Argument	"""[RESULT] Volume: %d x %d x %d (x %d bpv)\\n Codestream: %d B,  Ratio: %5.3f bpv,  (%5.3f : 1) \\n"""		7638217	1					
ANR	7638686	PrimaryExpression	"""[RESULT] Volume: %d x %d x %d (x %d bpv)\\n Codestream: %d B,  Ratio: %5.3f bpv,  (%5.3f : 1) \\n"""		7638217	0					
ANR	7638687	Argument	volume -> x1 - volume -> x0		7638217	2					
ANR	7638688	AdditiveExpression	volume -> x1 - volume -> x0		7638217	0		-			
ANR	7638689	PtrMemberAccess	volume -> x1		7638217	0					
ANR	7638690	Identifier	volume		7638217	0					
ANR	7638691	Identifier	x1		7638217	1					
ANR	7638692	PtrMemberAccess	volume -> x0		7638217	1					
ANR	7638693	Identifier	volume		7638217	0					
ANR	7638694	Identifier	x0		7638217	1					
ANR	7638695	Argument	volume -> y1 - volume -> y0		7638217	3					
ANR	7638696	AdditiveExpression	volume -> y1 - volume -> y0		7638217	0		-			
ANR	7638697	PtrMemberAccess	volume -> y1		7638217	0					
ANR	7638698	Identifier	volume		7638217	0					
ANR	7638699	Identifier	y1		7638217	1					
ANR	7638700	PtrMemberAccess	volume -> y0		7638217	1					
ANR	7638701	Identifier	volume		7638217	0					
ANR	7638702	Identifier	y0		7638217	1					
ANR	7638703	Argument	volume -> z1 - volume -> z0		7638217	4					
ANR	7638704	AdditiveExpression	volume -> z1 - volume -> z0		7638217	0		-			
ANR	7638705	PtrMemberAccess	volume -> z1		7638217	0					
ANR	7638706	Identifier	volume		7638217	0					
ANR	7638707	Identifier	z1		7638217	1					
ANR	7638708	PtrMemberAccess	volume -> z0		7638217	1					
ANR	7638709	Identifier	volume		7638217	0					
ANR	7638710	Identifier	z0		7638217	1					
ANR	7638711	Argument	volume -> comps [ 0 ] . prec		7638217	5					
ANR	7638712	MemberAccess	volume -> comps [ 0 ] . prec		7638217	0					
ANR	7638713	ArrayIndexing	volume -> comps [ 0 ]		7638217	0					
ANR	7638714	PtrMemberAccess	volume -> comps		7638217	0					
ANR	7638715	Identifier	volume		7638217	0					
ANR	7638716	Identifier	comps		7638217	1					
ANR	7638717	PrimaryExpression	0		7638217	1					
ANR	7638718	Identifier	prec		7638217	1					
ANR	7638719	Argument	codestream_length		7638217	6					
ANR	7638720	Identifier	codestream_length		7638217	0					
ANR	7638721	Argument	( double ) codestream_length * 8.0 / ( double ) pixels		7638217	7					
ANR	7638722	MultiplicativeExpression	( double ) codestream_length * 8.0 / ( double ) pixels		7638217	0		*			
ANR	7638723	CastExpression	( double ) codestream_length		7638217	0					
ANR	7638724	CastTarget	double		7638217	0					
ANR	7638725	Identifier	codestream_length		7638217	1					
ANR	7638726	MultiplicativeExpression	8.0 / ( double ) pixels		7638217	1		/			
ANR	7638727	PrimaryExpression	8.0		7638217	0					
ANR	7638728	CastExpression	( double ) pixels		7638217	1					
ANR	7638729	CastTarget	double		7638217	0					
ANR	7638730	Identifier	pixels		7638217	1					
ANR	7638731	Argument	( double ) bitsin / ( 8.0 * ( double ) codestream_length )		7638217	8					
ANR	7638732	MultiplicativeExpression	( double ) bitsin / ( 8.0 * ( double ) codestream_length )		7638217	0		/			
ANR	7638733	CastExpression	( double ) bitsin		7638217	0					
ANR	7638734	CastTarget	double		7638217	0					
ANR	7638735	Identifier	bitsin		7638217	1					
ANR	7638736	MultiplicativeExpression	8.0 * ( double ) codestream_length		7638217	1		*			
ANR	7638737	PrimaryExpression	8.0		7638217	0					
ANR	7638738	CastExpression	( double ) codestream_length		7638217	1					
ANR	7638739	CastTarget	double		7638217	0					
ANR	7638740	Identifier	codestream_length		7638217	1					
ANR	7638741	ExpressionStatement	"f = fopen ( parameters . outfile , ""wb"" )"	957:8:36684:36719	7638217	15	True				
ANR	7638742	AssignmentExpression	"f = fopen ( parameters . outfile , ""wb"" )"		7638217	0		=			
ANR	7638743	Identifier	f		7638217	0					
ANR	7638744	CallExpression	"fopen ( parameters . outfile , ""wb"" )"		7638217	1					
ANR	7638745	Callee	fopen		7638217	0					
ANR	7638746	Identifier	fopen		7638217	0					
ANR	7638747	ArgumentList	parameters . outfile		7638217	1					
ANR	7638748	Argument	parameters . outfile		7638217	0					
ANR	7638749	MemberAccess	parameters . outfile		7638217	0					
ANR	7638750	Identifier	parameters		7638217	0					
ANR	7638751	Identifier	outfile		7638217	1					
ANR	7638752	Argument	"""wb"""		7638217	1					
ANR	7638753	PrimaryExpression	"""wb"""		7638217	0					
ANR	7638754	IfStatement	if ( ! f )		7638217	16					
ANR	7638755	Condition	! f	958:12:36733:36734	7638217	0	True				
ANR	7638756	UnaryOperationExpression	! f		7638217	0					
ANR	7638757	UnaryOperator	!		7638217	0					
ANR	7638758	Identifier	f		7638217	1					
ANR	7638759	CompoundStatement		108:16:4099:4099	7638217	1					
ANR	7638760	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Failed to open %s for writing\\n"" , parameters . outfile )"	959:12:36751:36829	7638217	0	True				
ANR	7638761	CallExpression	"fprintf ( stdout , ""[ERROR] Failed to open %s for writing\\n"" , parameters . outfile )"		7638217	0					
ANR	7638762	Callee	fprintf		7638217	0					
ANR	7638763	Identifier	fprintf		7638217	0					
ANR	7638764	ArgumentList	stdout		7638217	1					
ANR	7638765	Argument	stdout		7638217	0					
ANR	7638766	Identifier	stdout		7638217	0					
ANR	7638767	Argument	"""[ERROR] Failed to open %s for writing\\n"""		7638217	1					
ANR	7638768	PrimaryExpression	"""[ERROR] Failed to open %s for writing\\n"""		7638217	0					
ANR	7638769	Argument	parameters . outfile		7638217	2					
ANR	7638770	MemberAccess	parameters . outfile		7638217	0					
ANR	7638771	Identifier	parameters		7638217	0					
ANR	7638772	Identifier	outfile		7638217	1					
ANR	7638773	ReturnStatement	return 1 ;	960:12:36843:36851	7638217	1	True				
ANR	7638774	PrimaryExpression	1		7638217	0					
ANR	7638775	ExpressionStatement	"fwrite ( cio -> buffer , 1 , codestream_length , f )"	962:8:36871:36915	7638217	17	True				
ANR	7638776	CallExpression	"fwrite ( cio -> buffer , 1 , codestream_length , f )"		7638217	0					
ANR	7638777	Callee	fwrite		7638217	0					
ANR	7638778	Identifier	fwrite		7638217	0					
ANR	7638779	ArgumentList	cio -> buffer		7638217	1					
ANR	7638780	Argument	cio -> buffer		7638217	0					
ANR	7638781	PtrMemberAccess	cio -> buffer		7638217	0					
ANR	7638782	Identifier	cio		7638217	0					
ANR	7638783	Identifier	buffer		7638217	1					
ANR	7638784	Argument	1		7638217	1					
ANR	7638785	PrimaryExpression	1		7638217	0					
ANR	7638786	Argument	codestream_length		7638217	2					
ANR	7638787	Identifier	codestream_length		7638217	0					
ANR	7638788	Argument	f		7638217	3					
ANR	7638789	Identifier	f		7638217	0					
ANR	7638790	ExpressionStatement	fclose ( f )	963:8:36925:36934	7638217	18	True				
ANR	7638791	CallExpression	fclose ( f )		7638217	0					
ANR	7638792	Callee	fclose		7638217	0					
ANR	7638793	Identifier	fclose		7638217	0					
ANR	7638794	ArgumentList	f		7638217	1					
ANR	7638795	Argument	f		7638217	0					
ANR	7638796	Identifier	f		7638217	0					
ANR	7638797	ExpressionStatement	opj_cio_close ( cio )	966:8:36990:37008	7638217	19	True				
ANR	7638798	CallExpression	opj_cio_close ( cio )		7638217	0					
ANR	7638799	Callee	opj_cio_close		7638217	0					
ANR	7638800	Identifier	opj_cio_close		7638217	0					
ANR	7638801	ArgumentList	cio		7638217	1					
ANR	7638802	Argument	cio		7638217	0					
ANR	7638803	Identifier	cio		7638217	0					
ANR	7638804	ExpressionStatement	opj_destroy_compress ( cinfo )	969:8:37071:37098	7638217	20	True				
ANR	7638805	CallExpression	opj_destroy_compress ( cinfo )		7638217	0					
ANR	7638806	Callee	opj_destroy_compress		7638217	0					
ANR	7638807	Identifier	opj_destroy_compress		7638217	0					
ANR	7638808	ArgumentList	cinfo		7638217	1					
ANR	7638809	Argument	cinfo		7638217	0					
ANR	7638810	Identifier	cinfo		7638217	0					
ANR	7638811	ElseStatement	else		7638217	0					
ANR	7638812	CompoundStatement		120:11:4473:4473	7638217	0					
ANR	7638813	ExpressionStatement	"fprintf ( stdout , ""[ERROR] Cod_format != JP3d !!! \\n"" )"	971:8:37121:37173	7638217	0	True				
ANR	7638814	CallExpression	"fprintf ( stdout , ""[ERROR] Cod_format != JP3d !!! \\n"" )"		7638217	0					
ANR	7638815	Callee	fprintf		7638217	0					
ANR	7638816	Identifier	fprintf		7638217	0					
ANR	7638817	ArgumentList	stdout		7638217	1					
ANR	7638818	Argument	stdout		7638217	0					
ANR	7638819	Identifier	stdout		7638217	0					
ANR	7638820	Argument	"""[ERROR] Cod_format != JP3d !!! \\n"""		7638217	1					
ANR	7638821	PrimaryExpression	"""[ERROR] Cod_format != JP3d !!! \\n"""		7638217	0					
ANR	7638822	ReturnStatement	return 1 ;	972:8:37183:37191	7638217	1	True				
ANR	7638823	PrimaryExpression	1		7638217	0					
ANR	7638824	IfStatement	if ( delete_comment )		7638217	13					
ANR	7638825	Condition	delete_comment	976:8:37249:37262	7638217	0	True				
ANR	7638826	Identifier	delete_comment		7638217	0					
ANR	7638827	CompoundStatement		126:24:4627:4627	7638217	1					
ANR	7638828	IfStatement	if ( parameters . cp_comment )		7638217	0					
ANR	7638829	Condition	parameters . cp_comment	977:12:37279:37299	7638217	0	True				
ANR	7638830	MemberAccess	parameters . cp_comment		7638217	0					
ANR	7638831	Identifier	parameters		7638217	0					
ANR	7638832	Identifier	cp_comment		7638217	1					
ANR	7638833	CompoundStatement		127:35:4664:4664	7638217	1					
ANR	7638834	ExpressionStatement	free ( parameters . cp_comment )	978:12:37316:37343	7638217	0	True				
ANR	7638835	CallExpression	free ( parameters . cp_comment )		7638217	0					
ANR	7638836	Callee	free		7638217	0					
ANR	7638837	Identifier	free		7638217	0					
ANR	7638838	ArgumentList	parameters . cp_comment		7638217	1					
ANR	7638839	Argument	parameters . cp_comment		7638217	0					
ANR	7638840	MemberAccess	parameters . cp_comment		7638217	0					
ANR	7638841	Identifier	parameters		7638217	0					
ANR	7638842	Identifier	cp_comment		7638217	1					
ANR	7638843	IfStatement	if ( parameters . cp_matrice )		7638217	14					
ANR	7638844	Condition	parameters . cp_matrice	981:8:37369:37389	7638217	0	True				
ANR	7638845	MemberAccess	parameters . cp_matrice		7638217	0					
ANR	7638846	Identifier	parameters		7638217	0					
ANR	7638847	Identifier	cp_matrice		7638217	1					
ANR	7638848	CompoundStatement		131:31:4754:4754	7638217	1					
ANR	7638849	ExpressionStatement	free ( parameters . cp_matrice )	982:8:37402:37429	7638217	0	True				
ANR	7638850	CallExpression	free ( parameters . cp_matrice )		7638217	0					
ANR	7638851	Callee	free		7638217	0					
ANR	7638852	Identifier	free		7638217	0					
ANR	7638853	ArgumentList	parameters . cp_matrice		7638217	1					
ANR	7638854	Argument	parameters . cp_matrice		7638217	0					
ANR	7638855	MemberAccess	parameters . cp_matrice		7638217	0					
ANR	7638856	Identifier	parameters		7638217	0					
ANR	7638857	Identifier	cp_matrice		7638217	1					
ANR	7638858	ExpressionStatement	opj_volume_destroy ( volume )	986:4:37469:37495	7638217	15	True				
ANR	7638859	CallExpression	opj_volume_destroy ( volume )		7638217	0					
ANR	7638860	Callee	opj_volume_destroy		7638217	0					
ANR	7638861	Identifier	opj_volume_destroy		7638217	0					
ANR	7638862	ArgumentList	volume		7638217	1					
ANR	7638863	Argument	volume		7638217	0					
ANR	7638864	Identifier	volume		7638217	0					
ANR	7638865	ReturnStatement	return 0 ;	988:4:37502:37510	7638217	16	True				
ANR	7638866	PrimaryExpression	0		7638217	0					
ANR	7638867	ReturnType	int		7638217	1					
ANR	7638868	Identifier	main		7638217	2					
ANR	7638869	ParameterList	"int argc , char * * argv"		7638217	3					
ANR	7638870	Parameter	int argc	850:9:32614:32621	7638217	0	True				
ANR	7638871	ParameterType	int		7638217	0					
ANR	7638872	Identifier	argc		7638217	1					
ANR	7638873	Parameter	char * * argv	850:19:32624:32634	7638217	1	True				
ANR	7638874	ParameterType	char * *		7638217	0					
ANR	7638875	Identifier	argv		7638217	1					
ANR	7638876	CFGEntryNode	ENTRY		7638217		True				
ANR	7638877	CFGExitNode	EXIT		7638217		True				
ANR	7638878	Symbol	J2K_CFMT		7638217						
ANR	7638879	Symbol	pgxtovolume		7638217						
ANR	7638880	Symbol	stdout		7638217						
ANR	7638881	Symbol	parameters . index		7638217						
ANR	7638882	Symbol	parameters . decod_format		7638217						
ANR	7638883	Symbol	* volume -> comps		7638217						
ANR	7638884	Symbol	parameters . cp_comment		7638217						
ANR	7638885	Symbol	volume -> z0		7638217						
ANR	7638886	Symbol	* cio		7638217						
ANR	7638887	Symbol	bitsin		7638217						
ANR	7638888	Symbol	volume -> y1		7638217						
ANR	7638889	Symbol	volume -> y0		7638217						
ANR	7638890	Symbol	J3D_CFMT		7638217						
ANR	7638891	Symbol	event_mgr		7638217						
ANR	7638892	Symbol	info_callback		7638217						
ANR	7638893	Symbol	volume -> comps		7638217						
ANR	7638894	Symbol	NULL		7638217						
ANR	7638895	Symbol	codestream_length		7638217						
ANR	7638896	Symbol	stderr		7638217						
ANR	7638897	Symbol	parse_cmdline_encoder		7638217						
ANR	7638898	Symbol	volume		7638217						
ANR	7638899	Symbol	parameters . outfile		7638217						
ANR	7638900	Symbol	volume -> comps [ 0 ] . prec		7638217						
ANR	7638901	Symbol	pixels		7638217						
ANR	7638902	Symbol	* volume		7638217						
ANR	7638903	Symbol	volume -> x0		7638217						
ANR	7638904	Symbol	event_mgr . error_handler		7638217						
ANR	7638905	Symbol	cinfo		7638217						
ANR	7638906	Symbol	delete_comment		7638217						
ANR	7638907	Symbol	volume -> x1		7638217						
ANR	7638908	Symbol	true		7638217						
ANR	7638909	Symbol	parameters . cod_format		7638217						
ANR	7638910	Symbol	imgtovolume		7638217						
ANR	7638911	Symbol	cio_tell		7638217						
ANR	7638912	Symbol	event_mgr . info_handler		7638217						
ANR	7638913	Symbol	parameters . cp_matrice		7638217						
ANR	7638914	Symbol	parameters		7638217						
ANR	7638915	Symbol	opj_create_compress		7638217						
ANR	7638916	Symbol	event_mgr . warning_handler		7638217						
ANR	7638917	Symbol	bintovolume		7638217						
ANR	7638918	Symbol	cio		7638217						
ANR	7638919	Symbol	argv		7638217						
ANR	7638920	Symbol	parameters . imgfile		7638217						
ANR	7638921	Symbol	warning_callback		7638217						
ANR	7638922	Symbol	CODEC_J3D		7638217						
ANR	7638923	Symbol	argc		7638217						
ANR	7638924	Symbol	bSuccess		7638217						
ANR	7638925	Symbol	parameters . infile		7638217						
ANR	7638926	Symbol	fopen		7638217						
ANR	7638927	Symbol	f		7638217						
ANR	7638928	Symbol	opj_encode		7638217						
ANR	7638929	Symbol	error_callback		7638217						
ANR	7638930	Symbol	& parameters		7638217						
ANR	7638931	Symbol	false		7638217						
ANR	7638932	Symbol	opj_cio_open		7638217						
ANR	7638933	Symbol	cio -> buffer		7638217						
ANR	7638934	Symbol	CODEC_J2K		7638217						
ANR	7638935	Symbol	volume -> z1		7638217						
ANR	7638936	Symbol	* * volume		7638217						
ANR	7638937	Symbol	& event_mgr		7638217						
