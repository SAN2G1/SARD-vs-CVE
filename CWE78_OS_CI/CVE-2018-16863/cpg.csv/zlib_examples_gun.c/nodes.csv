command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11220032	File	data/converged/CVE-2018-16863_ghostpdl/zlib_examples_gun.c								
ANR	11220033	ClassDef	ind	81:0:3935:3990							
ANR	11220034	DeclStmt									
ANR	11220035	Decl							int	int	infile
ANR	11220036	DeclStmt									
ANR	11220037	Decl							unsigned char	unsigned char *	inbuf
ANR	11220038	DeclStmt									
ANR	11220039	Decl							int	int	ret
ANR	11220040	DeclStmt									
ANR	11220041	Decl							unsigned	unsigned	len
ANR	11220042	DeclStmt									
ANR	11220043	Decl							unsigned char	unsigned char *	next
ANR	11220044	DeclStmt									
ANR	11220045	Decl							struct ind	struct ind *	me
ANR	11220046	ClassDef	outd	119:0:5097:5245							
ANR	11220047	DeclStmt									
ANR	11220048	Decl							int	int	outfile
ANR	11220049	DeclStmt									
ANR	11220050	Decl							int	int	check
ANR	11220051	DeclStmt									
ANR	11220052	Decl							unsigned long	unsigned long	crc
ANR	11220053	DeclStmt									
ANR	11220054	Decl							unsigned long	unsigned long	total
ANR	11220055	Function	out	131:0:5544:6098							
ANR	11220056	FunctionDef	"out (void * out_desc , unsigned char * buf , unsigned len)"		11220055	0					
ANR	11220057	CompoundStatement		132:0:5608:6098	11220055	0					
ANR	11220058	IdentifierDeclStatement	int ret ;	133:4:5614:5621	11220055	0	True				
ANR	11220059	IdentifierDecl	ret		11220055	0					
ANR	11220060	IdentifierDeclType	int		11220055	0					
ANR	11220061	Identifier	ret		11220055	1					
ANR	11220062	IdentifierDeclStatement	struct outd * me = ( struct outd * ) out_desc ;	134:4:5627:5668	11220055	1	True				
ANR	11220063	IdentifierDecl	* me = ( struct outd * ) out_desc		11220055	0					
ANR	11220064	IdentifierDeclType	struct outd *		11220055	0					
ANR	11220065	Identifier	me		11220055	1					
ANR	11220066	AssignmentExpression	* me = ( struct outd * ) out_desc		11220055	2		=			
ANR	11220067	Identifier	me		11220055	0					
ANR	11220068	CastExpression	( struct outd * ) out_desc		11220055	1					
ANR	11220069	CastTarget	struct outd *		11220055	0					
ANR	11220070	Identifier	out_desc		11220055	1					
ANR	11220071	IfStatement	if ( me -> check )		11220055	2					
ANR	11220072	Condition	me -> check	136:8:5679:5687	11220055	0	True				
ANR	11220073	PtrMemberAccess	me -> check		11220055	0					
ANR	11220074	Identifier	me		11220055	0					
ANR	11220075	Identifier	check		11220055	1					
ANR	11220076	CompoundStatement		5:19:81:81	11220055	1					
ANR	11220077	ExpressionStatement	"me -> crc = crc32 ( me -> crc , buf , len )"	137:8:5700:5734	11220055	0	True				
ANR	11220078	AssignmentExpression	"me -> crc = crc32 ( me -> crc , buf , len )"		11220055	0		=			
ANR	11220079	PtrMemberAccess	me -> crc		11220055	0					
ANR	11220080	Identifier	me		11220055	0					
ANR	11220081	Identifier	crc		11220055	1					
ANR	11220082	CallExpression	"crc32 ( me -> crc , buf , len )"		11220055	1					
ANR	11220083	Callee	crc32		11220055	0					
ANR	11220084	Identifier	crc32		11220055	0					
ANR	11220085	ArgumentList	me -> crc		11220055	1					
ANR	11220086	Argument	me -> crc		11220055	0					
ANR	11220087	PtrMemberAccess	me -> crc		11220055	0					
ANR	11220088	Identifier	me		11220055	0					
ANR	11220089	Identifier	crc		11220055	1					
ANR	11220090	Argument	buf		11220055	1					
ANR	11220091	Identifier	buf		11220055	0					
ANR	11220092	Argument	len		11220055	2					
ANR	11220093	Identifier	len		11220055	0					
ANR	11220094	ExpressionStatement	me -> total += len	138:8:5744:5760	11220055	1	True				
ANR	11220095	AssignmentExpression	me -> total += len		11220055	0		+=			
ANR	11220096	PtrMemberAccess	me -> total		11220055	0					
ANR	11220097	Identifier	me		11220055	0					
ANR	11220098	Identifier	total		11220055	1					
ANR	11220099	Identifier	len		11220055	1					
ANR	11220100	IfStatement	if ( me -> outfile != - 1 )		11220055	3					
ANR	11220101	Condition	me -> outfile != - 1	140:8:5776:5792	11220055	0	True				
ANR	11220102	EqualityExpression	me -> outfile != - 1		11220055	0		!=			
ANR	11220103	PtrMemberAccess	me -> outfile		11220055	0					
ANR	11220104	Identifier	me		11220055	0					
ANR	11220105	Identifier	outfile		11220055	1					
ANR	11220106	UnaryOperationExpression	- 1		11220055	1					
ANR	11220107	UnaryOperator	-		11220055	0					
ANR	11220108	PrimaryExpression	1		11220055	1					
ANR	11220109	DoStatement	do		11220055	1					
ANR	11220110	CompoundStatement		10:11:197:197	11220055	0					
ANR	11220111	ExpressionStatement	ret = PIECE	142:12:5820:5831	11220055	0	True				
ANR	11220112	AssignmentExpression	ret = PIECE		11220055	0		=			
ANR	11220113	Identifier	ret		11220055	0					
ANR	11220114	Identifier	PIECE		11220055	1					
ANR	11220115	IfStatement	if ( ( unsigned ) ret > len )		11220055	1					
ANR	11220116	Condition	( unsigned ) ret > len	143:16:5849:5867	11220055	0	True				
ANR	11220117	RelationalExpression	( unsigned ) ret > len		11220055	0		>			
ANR	11220118	CastExpression	( unsigned ) ret		11220055	0					
ANR	11220119	CastTarget	unsigned		11220055	0					
ANR	11220120	Identifier	ret		11220055	1					
ANR	11220121	Identifier	len		11220055	1					
ANR	11220122	ExpressionStatement	ret = ( int ) len	144:16:5886:5900	11220055	1	True				
ANR	11220123	AssignmentExpression	ret = ( int ) len		11220055	0		=			
ANR	11220124	Identifier	ret		11220055	0					
ANR	11220125	CastExpression	( int ) len		11220055	1					
ANR	11220126	CastTarget	int		11220055	0					
ANR	11220127	Identifier	len		11220055	1					
ANR	11220128	ExpressionStatement	"ret = ( int ) write ( me -> outfile , buf , ret )"	145:12:5914:5953	11220055	2	True				
ANR	11220129	AssignmentExpression	"ret = ( int ) write ( me -> outfile , buf , ret )"		11220055	0		=			
ANR	11220130	Identifier	ret		11220055	0					
ANR	11220131	CastExpression	"( int ) write ( me -> outfile , buf , ret )"		11220055	1					
ANR	11220132	CastTarget	int		11220055	0					
ANR	11220133	CallExpression	"write ( me -> outfile , buf , ret )"		11220055	1					
ANR	11220134	Callee	write		11220055	0					
ANR	11220135	Identifier	write		11220055	0					
ANR	11220136	ArgumentList	me -> outfile		11220055	1					
ANR	11220137	Argument	me -> outfile		11220055	0					
ANR	11220138	PtrMemberAccess	me -> outfile		11220055	0					
ANR	11220139	Identifier	me		11220055	0					
ANR	11220140	Identifier	outfile		11220055	1					
ANR	11220141	Argument	buf		11220055	1					
ANR	11220142	Identifier	buf		11220055	0					
ANR	11220143	Argument	ret		11220055	2					
ANR	11220144	Identifier	ret		11220055	0					
ANR	11220145	IfStatement	if ( ret == - 1 )		11220055	3					
ANR	11220146	Condition	ret == - 1	146:16:5971:5979	11220055	0	True				
ANR	11220147	EqualityExpression	ret == - 1		11220055	0		==			
ANR	11220148	Identifier	ret		11220055	0					
ANR	11220149	UnaryOperationExpression	- 1		11220055	1					
ANR	11220150	UnaryOperator	-		11220055	0					
ANR	11220151	PrimaryExpression	1		11220055	1					
ANR	11220152	ReturnStatement	return 1 ;	147:16:5998:6006	11220055	1	True				
ANR	11220153	PrimaryExpression	1		11220055	0					
ANR	11220154	ExpressionStatement	buf += ret	148:12:6020:6030	11220055	4	True				
ANR	11220155	AssignmentExpression	buf += ret		11220055	0		+=			
ANR	11220156	Identifier	buf		11220055	0					
ANR	11220157	Identifier	ret		11220055	1					
ANR	11220158	ExpressionStatement	len -= ret	149:12:6044:6054	11220055	5	True				
ANR	11220159	AssignmentExpression	len -= ret		11220055	0		-=			
ANR	11220160	Identifier	len		11220055	0					
ANR	11220161	Identifier	ret		11220055	1					
ANR	11220162	Condition	len != 0	150:17:6073:6080	11220055	1	True				
ANR	11220163	EqualityExpression	len != 0		11220055	0		!=			
ANR	11220164	Identifier	len		11220055	0					
ANR	11220165	PrimaryExpression	0		11220055	1					
ANR	11220166	ReturnStatement	return 0 ;	151:4:6088:6096	11220055	4	True				
ANR	11220167	PrimaryExpression	0		11220055	0					
ANR	11220168	ReturnType	local int		11220055	1					
ANR	11220169	Identifier	out		11220055	2					
ANR	11220170	ParameterList	"void * out_desc , unsigned char * buf , unsigned len"		11220055	3					
ANR	11220171	Parameter	void * out_desc	131:14:5558:5571	11220055	0	True				
ANR	11220172	ParameterType	void *		11220055	0					
ANR	11220173	Identifier	out_desc		11220055	1					
ANR	11220174	Parameter	unsigned char * buf	131:30:5574:5591	11220055	1	True				
ANR	11220175	ParameterType	unsigned char *		11220055	0					
ANR	11220176	Identifier	buf		11220055	1					
ANR	11220177	Parameter	unsigned len	131:50:5594:5605	11220055	2	True				
ANR	11220178	ParameterType	unsigned		11220055	0					
ANR	11220179	Identifier	len		11220055	1					
ANR	11220180	CFGEntryNode	ENTRY		11220055		True				
ANR	11220181	CFGExitNode	EXIT		11220055		True				
ANR	11220182	Symbol	ret		11220055						
ANR	11220183	Symbol	me -> outfile		11220055						
ANR	11220184	Symbol	PIECE		11220055						
ANR	11220185	Symbol	me -> crc		11220055						
ANR	11220186	Symbol	me -> total		11220055						
ANR	11220187	Symbol	buf		11220055						
ANR	11220188	Symbol	len		11220055						
ANR	11220189	Symbol	out_desc		11220055						
ANR	11220190	Symbol	me		11220055						
ANR	11220191	Symbol	crc32		11220055						
ANR	11220192	Symbol	me -> check		11220055						
ANR	11220193	Symbol	* me		11220055						
ANR	11220194	Symbol	write		11220055						
ANR	11220195	DeclStmt									
ANR	11220196	Decl							unsigned char	unsigned char [ SIZE ]	inbuf
ANR	11220197	DeclStmt									
ANR	11220198	Decl							unsigned char	unsigned char [ SIZE ]	outbuf
ANR	11220199	DeclStmt									
ANR	11220200	Decl							unsigned short	unsigned short [ 65536 ]	prefix
ANR	11220201	DeclStmt									
ANR	11220202	Decl							unsigned char	unsigned char [ 65536 ]	suffix
ANR	11220203	DeclStmt									
ANR	11220204	Decl							unsigned char	unsigned char [ 65280 + 2 ]	match
ANR	11220205	DeclStmt									
ANR	11220206	Decl							int	int	last
ANR	11220207	DeclStmt									
ANR	11220208	Decl							unsigned	unsigned	chunk
ANR	11220209	DeclStmt									
ANR	11220210	Decl							int	int	left
ANR	11220211	DeclStmt									
ANR	11220212	Decl							unsigned	unsigned	rem
ANR	11220213	DeclStmt									
ANR	11220214	Decl							int	int	bits
ANR	11220215	DeclStmt									
ANR	11220216	Decl							unsigned	unsigned	code
ANR	11220217	DeclStmt									
ANR	11220218	Decl							unsigned	unsigned	mask
ANR	11220219	DeclStmt									
ANR	11220220	Decl							int	int	max
ANR	11220221	DeclStmt									
ANR	11220222	Decl							unsigned	unsigned	flags
ANR	11220223	DeclStmt									
ANR	11220224	Decl							unsigned	unsigned	end
ANR	11220225	DeclStmt									
ANR	11220226	Decl							unsigned	unsigned	temp
ANR	11220227	DeclStmt									
ANR	11220228	Decl							unsigned	unsigned	prev
ANR	11220229	DeclStmt									
ANR	11220230	Decl							unsigned	unsigned	final
ANR	11220231	DeclStmt									
ANR	11220232	Decl							unsigned	unsigned	stack
ANR	11220233	DeclStmt									
ANR	11220234	Decl							unsigned	unsigned	outcnt
ANR	11220235	DeclStmt									
ANR	11220236	Decl							struct outd	struct outd	outd
ANR	11220237	DeclStmt									
ANR	11220238	Decl							unsigned char	unsigned char *	p
ANR	11220239	Function	gunpipe	383:0:15476:19818							
ANR	11220240	FunctionDef	"gunpipe (z_stream * strm , int infile , int outfile)"		11220239	0					
ANR	11220241	CompoundStatement		384:0:15535:19818	11220239	0					
ANR	11220242	IdentifierDeclStatement	"int ret , first , last ;"	385:4:15541:15561	11220239	0	True				
ANR	11220243	IdentifierDecl	ret		11220239	0					
ANR	11220244	IdentifierDeclType	int		11220239	0					
ANR	11220245	Identifier	ret		11220239	1					
ANR	11220246	IdentifierDecl	first		11220239	1					
ANR	11220247	IdentifierDeclType	int		11220239	0					
ANR	11220248	Identifier	first		11220239	1					
ANR	11220249	IdentifierDecl	last		11220239	2					
ANR	11220250	IdentifierDeclType	int		11220239	0					
ANR	11220251	Identifier	last		11220239	1					
ANR	11220252	IdentifierDeclStatement	"unsigned have , flags , len ;"	386:4:15567:15592	11220239	1	True				
ANR	11220253	IdentifierDecl	have		11220239	0					
ANR	11220254	IdentifierDeclType	unsigned		11220239	0					
ANR	11220255	Identifier	have		11220239	1					
ANR	11220256	IdentifierDecl	flags		11220239	1					
ANR	11220257	IdentifierDeclType	unsigned		11220239	0					
ANR	11220258	Identifier	flags		11220239	1					
ANR	11220259	IdentifierDecl	len		11220239	2					
ANR	11220260	IdentifierDeclType	unsigned		11220239	0					
ANR	11220261	Identifier	len		11220239	1					
ANR	11220262	Statement	z_const	387:4:15598:15604	11220239	2	True				
ANR	11220263	IdentifierDeclStatement	unsigned char * next = NULL ;	387:12:15606:15632	11220239	3	True				
ANR	11220264	IdentifierDecl	* next = NULL		11220239	0					
ANR	11220265	IdentifierDeclType	unsigned char *		11220239	0					
ANR	11220266	Identifier	next		11220239	1					
ANR	11220267	AssignmentExpression	* next = NULL		11220239	2		=			
ANR	11220268	Identifier	NULL		11220239	0					
ANR	11220269	Identifier	NULL		11220239	1					
ANR	11220270	IdentifierDeclStatement	"struct ind ind , * indp ;"	388:4:15638:15659	11220239	4	True				
ANR	11220271	IdentifierDecl	ind		11220239	0					
ANR	11220272	IdentifierDeclType	struct ind		11220239	0					
ANR	11220273	Identifier	ind		11220239	1					
ANR	11220274	IdentifierDecl	* indp		11220239	1					
ANR	11220275	IdentifierDeclType	struct ind *		11220239	0					
ANR	11220276	Identifier	indp		11220239	1					
ANR	11220277	IdentifierDeclStatement	struct outd outd ;	389:4:15665:15681	11220239	5	True				
ANR	11220278	IdentifierDecl	outd		11220239	0					
ANR	11220279	IdentifierDeclType	struct outd		11220239	0					
ANR	11220280	Identifier	outd		11220239	1					
ANR	11220281	ExpressionStatement	ind . infile = infile	392:4:15717:15736	11220239	6	True				
ANR	11220282	AssignmentExpression	ind . infile = infile		11220239	0		=			
ANR	11220283	MemberAccess	ind . infile		11220239	0					
ANR	11220284	Identifier	ind		11220239	0					
ANR	11220285	Identifier	infile		11220239	1					
ANR	11220286	Identifier	infile		11220239	1					
ANR	11220287	ExpressionStatement	ind . inbuf = inbuf	393:4:15742:15759	11220239	7	True				
ANR	11220288	AssignmentExpression	ind . inbuf = inbuf		11220239	0		=			
ANR	11220289	MemberAccess	ind . inbuf		11220239	0					
ANR	11220290	Identifier	ind		11220239	0					
ANR	11220291	Identifier	inbuf		11220239	1					
ANR	11220292	Identifier	inbuf		11220239	1					
ANR	11220293	ExpressionStatement	indp = & ind	394:4:15765:15776	11220239	8	True				
ANR	11220294	AssignmentExpression	indp = & ind		11220239	0		=			
ANR	11220295	Identifier	indp		11220239	0					
ANR	11220296	UnaryOperationExpression	& ind		11220239	1					
ANR	11220297	UnaryOperator	&		11220239	0					
ANR	11220298	Identifier	ind		11220239	1					
ANR	11220299	ExpressionStatement	have = 0	397:4:15830:15838	11220239	9	True				
ANR	11220300	AssignmentExpression	have = 0		11220239	0		=			
ANR	11220301	Identifier	have		11220239	0					
ANR	11220302	PrimaryExpression	0		11220239	1					
ANR	11220303	ExpressionStatement	first = 1	398:4:15906:15915	11220239	10	True				
ANR	11220304	AssignmentExpression	first = 1		11220239	0		=			
ANR	11220305	Identifier	first		11220239	0					
ANR	11220306	PrimaryExpression	1		11220239	1					
ANR	11220307	ExpressionStatement	strm -> next_in = Z_NULL	399:4:15986:16008	11220239	11	True				
ANR	11220308	AssignmentExpression	strm -> next_in = Z_NULL		11220239	0		=			
ANR	11220309	PtrMemberAccess	strm -> next_in		11220239	0					
ANR	11220310	Identifier	strm		11220239	0					
ANR	11220311	Identifier	next_in		11220239	1					
ANR	11220312	Identifier	Z_NULL		11220239	1					
ANR	11220313	ForStatement	for ( ; ; )		11220239	12					
ANR	11220314	CompoundStatement		17:13:534:534	11220239	0					
ANR	11220315	IfStatement	if ( NEXT ( ) == - 1 )		11220239	0					
ANR	11220316	Condition	NEXT ( ) == - 1	402:12:16152:16163	11220239	0	True				
ANR	11220317	EqualityExpression	NEXT ( ) == - 1		11220239	0		==			
ANR	11220318	CallExpression	NEXT ( )		11220239	0					
ANR	11220319	Callee	NEXT		11220239	0					
ANR	11220320	Identifier	NEXT		11220239	0					
ANR	11220321	ArgumentList			11220239	1					
ANR	11220322	UnaryOperationExpression	- 1		11220239	1					
ANR	11220323	UnaryOperator	-		11220239	0					
ANR	11220324	PrimaryExpression	1		11220239	1					
ANR	11220325	CompoundStatement		19:26:630:630	11220239	1					
ANR	11220326	ExpressionStatement	ret = Z_OK	403:12:16180:16190	11220239	0	True				
ANR	11220327	AssignmentExpression	ret = Z_OK		11220239	0		=			
ANR	11220328	Identifier	ret		11220239	0					
ANR	11220329	Identifier	Z_OK		11220239	1					
ANR	11220330	BreakStatement	break ;	404:12:16204:16209	11220239	1	True				
ANR	11220331	IfStatement	if ( last != 31 || ( NEXT ( ) != 139 && last != 157 ) )		11220239	1					
ANR	11220332	Condition	last != 31 || ( NEXT ( ) != 139 && last != 157 )	406:12:16288:16331	11220239	0	True				
ANR	11220333	OrExpression	last != 31 || ( NEXT ( ) != 139 && last != 157 )		11220239	0		||			
ANR	11220334	EqualityExpression	last != 31		11220239	0		!=			
ANR	11220335	Identifier	last		11220239	0					
ANR	11220336	PrimaryExpression	31		11220239	1					
ANR	11220337	AndExpression	NEXT ( ) != 139 && last != 157		11220239	1		&&			
ANR	11220338	EqualityExpression	NEXT ( ) != 139		11220239	0		!=			
ANR	11220339	CallExpression	NEXT ( )		11220239	0					
ANR	11220340	Callee	NEXT		11220239	0					
ANR	11220341	Identifier	NEXT		11220239	0					
ANR	11220342	ArgumentList			11220239	1					
ANR	11220343	PrimaryExpression	139		11220239	1					
ANR	11220344	EqualityExpression	last != 157		11220239	1		!=			
ANR	11220345	Identifier	last		11220239	0					
ANR	11220346	PrimaryExpression	157		11220239	1					
ANR	11220347	CompoundStatement		23:58:798:798	11220239	1					
ANR	11220348	ExpressionStatement	"strm -> msg = ( char * ) ""incorrect header check"""	407:12:16348:16392	11220239	0	True				
ANR	11220349	AssignmentExpression	"strm -> msg = ( char * ) ""incorrect header check"""		11220239	0		=			
ANR	11220350	PtrMemberAccess	strm -> msg		11220239	0					
ANR	11220351	Identifier	strm		11220239	0					
ANR	11220352	Identifier	msg		11220239	1					
ANR	11220353	CastExpression	"( char * ) ""incorrect header check"""		11220239	1					
ANR	11220354	CastTarget	char *		11220239	0					
ANR	11220355	PrimaryExpression	"""incorrect header check"""		11220239	1					
ANR	11220356	ExpressionStatement	ret = first ? Z_DATA_ERROR : Z_ERRNO	408:12:16406:16442	11220239	1	True				
ANR	11220357	AssignmentExpression	ret = first ? Z_DATA_ERROR : Z_ERRNO		11220239	0		=			
ANR	11220358	Identifier	ret		11220239	0					
ANR	11220359	ConditionalExpression	first ? Z_DATA_ERROR : Z_ERRNO		11220239	1					
ANR	11220360	Condition	first		11220239	0					
ANR	11220361	Identifier	first		11220239	0					
ANR	11220362	Identifier	Z_DATA_ERROR		11220239	1					
ANR	11220363	Identifier	Z_ERRNO		11220239	2					
ANR	11220364	BreakStatement	break ;	409:12:16456:16461	11220239	2	True				
ANR	11220365	ExpressionStatement	first = 0	411:8:16542:16551	11220239	2	True				
ANR	11220366	AssignmentExpression	first = 0		11220239	0		=			
ANR	11220367	Identifier	first		11220239	0					
ANR	11220368	PrimaryExpression	0		11220239	1					
ANR	11220369	IfStatement	if ( last == 157 )		11220239	3					
ANR	11220370	Condition	last == 157	414:12:16701:16711	11220239	0	True				
ANR	11220371	EqualityExpression	last == 157		11220239	0		==			
ANR	11220372	Identifier	last		11220239	0					
ANR	11220373	PrimaryExpression	157		11220239	1					
ANR	11220374	CompoundStatement		31:25:1178:1178	11220239	1					
ANR	11220375	ExpressionStatement	"ret = lunpipe ( have , next , indp , outfile , strm )"	415:12:16728:16774	11220239	0	True				
ANR	11220376	AssignmentExpression	"ret = lunpipe ( have , next , indp , outfile , strm )"		11220239	0		=			
ANR	11220377	Identifier	ret		11220239	0					
ANR	11220378	CallExpression	"lunpipe ( have , next , indp , outfile , strm )"		11220239	1					
ANR	11220379	Callee	lunpipe		11220239	0					
ANR	11220380	Identifier	lunpipe		11220239	0					
ANR	11220381	ArgumentList	have		11220239	1					
ANR	11220382	Argument	have		11220239	0					
ANR	11220383	Identifier	have		11220239	0					
ANR	11220384	Argument	next		11220239	1					
ANR	11220385	Identifier	next		11220239	0					
ANR	11220386	Argument	indp		11220239	2					
ANR	11220387	Identifier	indp		11220239	0					
ANR	11220388	Argument	outfile		11220239	3					
ANR	11220389	Identifier	outfile		11220239	0					
ANR	11220390	Argument	strm		11220239	4					
ANR	11220391	Identifier	strm		11220239	0					
ANR	11220392	BreakStatement	break ;	416:12:16788:16793	11220239	1	True				
ANR	11220393	ExpressionStatement	ret = Z_BUF_ERROR	420:8:16861:16878	11220239	4	True				
ANR	11220394	AssignmentExpression	ret = Z_BUF_ERROR		11220239	0		=			
ANR	11220395	Identifier	ret		11220239	0					
ANR	11220396	Identifier	Z_BUF_ERROR		11220239	1					
ANR	11220397	IfStatement	if ( NEXT ( ) != 8 )		11220239	5					
ANR	11220398	Condition	NEXT ( ) != 8	421:12:16892:16902	11220239	0	True				
ANR	11220399	EqualityExpression	NEXT ( ) != 8		11220239	0		!=			
ANR	11220400	CallExpression	NEXT ( )		11220239	0					
ANR	11220401	Callee	NEXT		11220239	0					
ANR	11220402	Identifier	NEXT		11220239	0					
ANR	11220403	ArgumentList			11220239	1					
ANR	11220404	PrimaryExpression	8		11220239	1					
ANR	11220405	CompoundStatement		38:25:1369:1369	11220239	1					
ANR	11220406	IfStatement	if ( last == - 1 )		11220239	0					
ANR	11220407	Condition	last == - 1	422:16:16974:16983	11220239	0	True				
ANR	11220408	EqualityExpression	last == - 1		11220239	0		==			
ANR	11220409	Identifier	last		11220239	0					
ANR	11220410	UnaryOperationExpression	- 1		11220239	1					
ANR	11220411	UnaryOperator	-		11220239	0					
ANR	11220412	PrimaryExpression	1		11220239	1					
ANR	11220413	BreakStatement	break ;	422:28:16986:16991	11220239	1	True				
ANR	11220414	ExpressionStatement	"strm -> msg = ( char * ) ""unknown compression method"""	423:12:17005:17053	11220239	1	True				
ANR	11220415	AssignmentExpression	"strm -> msg = ( char * ) ""unknown compression method"""		11220239	0		=			
ANR	11220416	PtrMemberAccess	strm -> msg		11220239	0					
ANR	11220417	Identifier	strm		11220239	0					
ANR	11220418	Identifier	msg		11220239	1					
ANR	11220419	CastExpression	"( char * ) ""unknown compression method"""		11220239	1					
ANR	11220420	CastTarget	char *		11220239	0					
ANR	11220421	PrimaryExpression	"""unknown compression method"""		11220239	1					
ANR	11220422	ExpressionStatement	ret = Z_DATA_ERROR	424:12:17067:17085	11220239	2	True				
ANR	11220423	AssignmentExpression	ret = Z_DATA_ERROR		11220239	0		=			
ANR	11220424	Identifier	ret		11220239	0					
ANR	11220425	Identifier	Z_DATA_ERROR		11220239	1					
ANR	11220426	BreakStatement	break ;	425:12:17099:17104	11220239	3	True				
ANR	11220427	ExpressionStatement	flags = NEXT ( )	427:8:17124:17138	11220239	6	True				
ANR	11220428	AssignmentExpression	flags = NEXT ( )		11220239	0		=			
ANR	11220429	Identifier	flags		11220239	0					
ANR	11220430	CallExpression	NEXT ( )		11220239	1					
ANR	11220431	Callee	NEXT		11220239	0					
ANR	11220432	Identifier	NEXT		11220239	0					
ANR	11220433	ArgumentList			11220239	1					
ANR	11220434	ExpressionStatement	NEXT ( )	428:8:17187:17193	11220239	7	True				
ANR	11220435	CallExpression	NEXT ( )		11220239	0					
ANR	11220436	Callee	NEXT		11220239	0					
ANR	11220437	Identifier	NEXT		11220239	0					
ANR	11220438	ArgumentList			11220239	1					
ANR	11220439	ExpressionStatement	NEXT ( )	429:8:17265:17271	11220239	8	True				
ANR	11220440	CallExpression	NEXT ( )		11220239	0					
ANR	11220441	Callee	NEXT		11220239	0					
ANR	11220442	Identifier	NEXT		11220239	0					
ANR	11220443	ArgumentList			11220239	1					
ANR	11220444	ExpressionStatement	NEXT ( )	430:8:17281:17287	11220239	9	True				
ANR	11220445	CallExpression	NEXT ( )		11220239	0					
ANR	11220446	Callee	NEXT		11220239	0					
ANR	11220447	Identifier	NEXT		11220239	0					
ANR	11220448	ArgumentList			11220239	1					
ANR	11220449	ExpressionStatement	NEXT ( )	431:8:17297:17303	11220239	10	True				
ANR	11220450	CallExpression	NEXT ( )		11220239	0					
ANR	11220451	Callee	NEXT		11220239	0					
ANR	11220452	Identifier	NEXT		11220239	0					
ANR	11220453	ArgumentList			11220239	1					
ANR	11220454	ExpressionStatement	NEXT ( )	432:8:17313:17319	11220239	11	True				
ANR	11220455	CallExpression	NEXT ( )		11220239	0					
ANR	11220456	Callee	NEXT		11220239	0					
ANR	11220457	Identifier	NEXT		11220239	0					
ANR	11220458	ArgumentList			11220239	1					
ANR	11220459	ExpressionStatement	NEXT ( )	433:8:17329:17335	11220239	12	True				
ANR	11220460	CallExpression	NEXT ( )		11220239	0					
ANR	11220461	Callee	NEXT		11220239	0					
ANR	11220462	Identifier	NEXT		11220239	0					
ANR	11220463	ArgumentList			11220239	1					
ANR	11220464	IfStatement	if ( last == - 1 )		11220239	13					
ANR	11220465	Condition	last == - 1	434:12:17349:17358	11220239	0	True				
ANR	11220466	EqualityExpression	last == - 1		11220239	0		==			
ANR	11220467	Identifier	last		11220239	0					
ANR	11220468	UnaryOperationExpression	- 1		11220239	1					
ANR	11220469	UnaryOperator	-		11220239	0					
ANR	11220470	PrimaryExpression	1		11220239	1					
ANR	11220471	BreakStatement	break ;	434:24:17361:17366	11220239	1	True				
ANR	11220472	IfStatement	if ( flags & 0xe0 )		11220239	14					
ANR	11220473	Condition	flags & 0xe0	435:12:17380:17391	11220239	0	True				
ANR	11220474	BitAndExpression	flags & 0xe0		11220239	0		&			
ANR	11220475	Identifier	flags		11220239	0					
ANR	11220476	PrimaryExpression	0xe0		11220239	1					
ANR	11220477	CompoundStatement		52:26:1858:1858	11220239	1					
ANR	11220478	ExpressionStatement	"strm -> msg = ( char * ) ""unknown header flags set"""	436:12:17408:17454	11220239	0	True				
ANR	11220479	AssignmentExpression	"strm -> msg = ( char * ) ""unknown header flags set"""		11220239	0		=			
ANR	11220480	PtrMemberAccess	strm -> msg		11220239	0					
ANR	11220481	Identifier	strm		11220239	0					
ANR	11220482	Identifier	msg		11220239	1					
ANR	11220483	CastExpression	"( char * ) ""unknown header flags set"""		11220239	1					
ANR	11220484	CastTarget	char *		11220239	0					
ANR	11220485	PrimaryExpression	"""unknown header flags set"""		11220239	1					
ANR	11220486	ExpressionStatement	ret = Z_DATA_ERROR	437:12:17468:17486	11220239	1	True				
ANR	11220487	AssignmentExpression	ret = Z_DATA_ERROR		11220239	0		=			
ANR	11220488	Identifier	ret		11220239	0					
ANR	11220489	Identifier	Z_DATA_ERROR		11220239	1					
ANR	11220490	BreakStatement	break ;	438:12:17500:17505	11220239	2	True				
ANR	11220491	IfStatement	if ( flags & 4 )		11220239	15					
ANR	11220492	Condition	flags & 4	440:12:17529:17537	11220239	0	True				
ANR	11220493	BitAndExpression	flags & 4		11220239	0		&			
ANR	11220494	Identifier	flags		11220239	0					
ANR	11220495	PrimaryExpression	4		11220239	1					
ANR	11220496	CompoundStatement		57:23:2004:2004	11220239	1					
ANR	11220497	ExpressionStatement	len = NEXT ( )	441:12:17591:17603	11220239	0	True				
ANR	11220498	AssignmentExpression	len = NEXT ( )		11220239	0		=			
ANR	11220499	Identifier	len		11220239	0					
ANR	11220500	CallExpression	NEXT ( )		11220239	1					
ANR	11220501	Callee	NEXT		11220239	0					
ANR	11220502	Identifier	NEXT		11220239	0					
ANR	11220503	ArgumentList			11220239	1					
ANR	11220504	ExpressionStatement	len += ( unsigned ) ( NEXT ( ) ) << 8	442:12:17617:17647	11220239	1	True				
ANR	11220505	AssignmentExpression	len += ( unsigned ) ( NEXT ( ) ) << 8		11220239	0		+=			
ANR	11220506	Identifier	len		11220239	0					
ANR	11220507	ShiftExpression	( unsigned ) ( NEXT ( ) ) << 8		11220239	1		<<			
ANR	11220508	CastExpression	( unsigned ) ( NEXT ( ) )		11220239	0					
ANR	11220509	CastTarget	unsigned		11220239	0					
ANR	11220510	CallExpression	NEXT ( )		11220239	1					
ANR	11220511	Callee	NEXT		11220239	0					
ANR	11220512	Identifier	NEXT		11220239	0					
ANR	11220513	ArgumentList			11220239	1					
ANR	11220514	PrimaryExpression	8		11220239	1					
ANR	11220515	IfStatement	if ( last == - 1 )		11220239	2					
ANR	11220516	Condition	last == - 1	443:16:17665:17674	11220239	0	True				
ANR	11220517	EqualityExpression	last == - 1		11220239	0		==			
ANR	11220518	Identifier	last		11220239	0					
ANR	11220519	UnaryOperationExpression	- 1		11220239	1					
ANR	11220520	UnaryOperator	-		11220239	0					
ANR	11220521	PrimaryExpression	1		11220239	1					
ANR	11220522	BreakStatement	break ;	443:28:17677:17682	11220239	1	True				
ANR	11220523	WhileStatement	while ( len > have )		11220239	3					
ANR	11220524	Condition	len > have	444:19:17703:17712	11220239	0	True				
ANR	11220525	RelationalExpression	len > have		11220239	0		>			
ANR	11220526	Identifier	len		11220239	0					
ANR	11220527	Identifier	have		11220239	1					
ANR	11220528	CompoundStatement		61:31:2179:2179	11220239	1					
ANR	11220529	ExpressionStatement	len -= have	445:16:17733:17744	11220239	0	True				
ANR	11220530	AssignmentExpression	len -= have		11220239	0		-=			
ANR	11220531	Identifier	len		11220239	0					
ANR	11220532	Identifier	have		11220239	1					
ANR	11220533	ExpressionStatement	have = 0	446:16:17762:17770	11220239	1	True				
ANR	11220534	AssignmentExpression	have = 0		11220239	0		=			
ANR	11220535	Identifier	have		11220239	0					
ANR	11220536	PrimaryExpression	0		11220239	1					
ANR	11220537	IfStatement	if ( NEXT ( ) == - 1 )		11220239	2					
ANR	11220538	Condition	NEXT ( ) == - 1	447:20:17792:17803	11220239	0	True				
ANR	11220539	EqualityExpression	NEXT ( ) == - 1		11220239	0		==			
ANR	11220540	CallExpression	NEXT ( )		11220239	0					
ANR	11220541	Callee	NEXT		11220239	0					
ANR	11220542	Identifier	NEXT		11220239	0					
ANR	11220543	ArgumentList			11220239	1					
ANR	11220544	UnaryOperationExpression	- 1		11220239	1					
ANR	11220545	UnaryOperator	-		11220239	0					
ANR	11220546	PrimaryExpression	1		11220239	1					
ANR	11220547	BreakStatement	break ;	447:34:17806:17811	11220239	1	True				
ANR	11220548	ExpressionStatement	len --	448:16:17829:17834	11220239	3	True				
ANR	11220549	PostIncDecOperationExpression	len --		11220239	0					
ANR	11220550	Identifier	len		11220239	0					
ANR	11220551	IncDec	--		11220239	1					
ANR	11220552	IfStatement	if ( last == - 1 )		11220239	4					
ANR	11220553	Condition	last == - 1	450:16:17866:17875	11220239	0	True				
ANR	11220554	EqualityExpression	last == - 1		11220239	0		==			
ANR	11220555	Identifier	last		11220239	0					
ANR	11220556	UnaryOperationExpression	- 1		11220239	1					
ANR	11220557	UnaryOperator	-		11220239	0					
ANR	11220558	PrimaryExpression	1		11220239	1					
ANR	11220559	BreakStatement	break ;	450:28:17878:17883	11220239	1	True				
ANR	11220560	ExpressionStatement	have -= len	451:12:17897:17908	11220239	5	True				
ANR	11220561	AssignmentExpression	have -= len		11220239	0		-=			
ANR	11220562	Identifier	have		11220239	0					
ANR	11220563	Identifier	len		11220239	1					
ANR	11220564	ExpressionStatement	next += len	452:12:17922:17933	11220239	6	True				
ANR	11220565	AssignmentExpression	next += len		11220239	0		+=			
ANR	11220566	Identifier	next		11220239	0					
ANR	11220567	Identifier	len		11220239	1					
ANR	11220568	IfStatement	if ( flags & 8 )		11220239	16					
ANR	11220569	Condition	flags & 8	454:12:17957:17965	11220239	0	True				
ANR	11220570	BitAndExpression	flags & 8		11220239	0		&			
ANR	11220571	Identifier	flags		11220239	0					
ANR	11220572	PrimaryExpression	8		11220239	1					
ANR	11220573	WhileStatement	while ( NEXT ( ) != 0 && last != - 1 )		11220239	1					
ANR	11220574	Condition	NEXT ( ) != 0 && last != - 1	455:19:18024:18048	11220239	0	True				
ANR	11220575	AndExpression	NEXT ( ) != 0 && last != - 1		11220239	0		&&			
ANR	11220576	EqualityExpression	NEXT ( ) != 0		11220239	0		!=			
ANR	11220577	CallExpression	NEXT ( )		11220239	0					
ANR	11220578	Callee	NEXT		11220239	0					
ANR	11220579	Identifier	NEXT		11220239	0					
ANR	11220580	ArgumentList			11220239	1					
ANR	11220581	PrimaryExpression	0		11220239	1					
ANR	11220582	EqualityExpression	last != - 1		11220239	1		!=			
ANR	11220583	Identifier	last		11220239	0					
ANR	11220584	UnaryOperationExpression	- 1		11220239	1					
ANR	11220585	UnaryOperator	-		11220239	0					
ANR	11220586	PrimaryExpression	1		11220239	1					
ANR	11220587	ExpressionStatement		456:16:18067:18067	11220239	1	True				
ANR	11220588	IfStatement	if ( flags & 16 )		11220239	17					
ANR	11220589	Condition	flags & 16	457:12:18081:18090	11220239	0	True				
ANR	11220590	BitAndExpression	flags & 16		11220239	0		&			
ANR	11220591	Identifier	flags		11220239	0					
ANR	11220592	PrimaryExpression	16		11220239	1					
ANR	11220593	WhileStatement	while ( NEXT ( ) != 0 && last != - 1 )		11220239	1					
ANR	11220594	Condition	NEXT ( ) != 0 && last != - 1	458:19:18146:18170	11220239	0	True				
ANR	11220595	AndExpression	NEXT ( ) != 0 && last != - 1		11220239	0		&&			
ANR	11220596	EqualityExpression	NEXT ( ) != 0		11220239	0		!=			
ANR	11220597	CallExpression	NEXT ( )		11220239	0					
ANR	11220598	Callee	NEXT		11220239	0					
ANR	11220599	Identifier	NEXT		11220239	0					
ANR	11220600	ArgumentList			11220239	1					
ANR	11220601	PrimaryExpression	0		11220239	1					
ANR	11220602	EqualityExpression	last != - 1		11220239	1		!=			
ANR	11220603	Identifier	last		11220239	0					
ANR	11220604	UnaryOperationExpression	- 1		11220239	1					
ANR	11220605	UnaryOperator	-		11220239	0					
ANR	11220606	PrimaryExpression	1		11220239	1					
ANR	11220607	ExpressionStatement		459:16:18189:18189	11220239	1	True				
ANR	11220608	IfStatement	if ( flags & 2 )		11220239	18					
ANR	11220609	Condition	flags & 2	460:12:18203:18211	11220239	0	True				
ANR	11220610	BitAndExpression	flags & 2		11220239	0		&			
ANR	11220611	Identifier	flags		11220239	0					
ANR	11220612	PrimaryExpression	2		11220239	1					
ANR	11220613	CompoundStatement		77:23:2678:2678	11220239	1					
ANR	11220614	ExpressionStatement	NEXT ( )	461:12:18264:18270	11220239	0	True				
ANR	11220615	CallExpression	NEXT ( )		11220239	0					
ANR	11220616	Callee	NEXT		11220239	0					
ANR	11220617	Identifier	NEXT		11220239	0					
ANR	11220618	ArgumentList			11220239	1					
ANR	11220619	ExpressionStatement	NEXT ( )	462:12:18284:18290	11220239	1	True				
ANR	11220620	CallExpression	NEXT ( )		11220239	0					
ANR	11220621	Callee	NEXT		11220239	0					
ANR	11220622	Identifier	NEXT		11220239	0					
ANR	11220623	ArgumentList			11220239	1					
ANR	11220624	IfStatement	if ( last == - 1 )		11220239	19					
ANR	11220625	Condition	last == - 1	464:12:18314:18323	11220239	0	True				
ANR	11220626	EqualityExpression	last == - 1		11220239	0		==			
ANR	11220627	Identifier	last		11220239	0					
ANR	11220628	UnaryOperationExpression	- 1		11220239	1					
ANR	11220629	UnaryOperator	-		11220239	0					
ANR	11220630	PrimaryExpression	1		11220239	1					
ANR	11220631	BreakStatement	break ;	464:24:18326:18331	11220239	1	True				
ANR	11220632	ExpressionStatement	outd . outfile = outfile	467:8:18370:18392	11220239	20	True				
ANR	11220633	AssignmentExpression	outd . outfile = outfile		11220239	0		=			
ANR	11220634	MemberAccess	outd . outfile		11220239	0					
ANR	11220635	Identifier	outd		11220239	0					
ANR	11220636	Identifier	outfile		11220239	1					
ANR	11220637	Identifier	outfile		11220239	1					
ANR	11220638	ExpressionStatement	outd . check = 1	468:8:18402:18416	11220239	21	True				
ANR	11220639	AssignmentExpression	outd . check = 1		11220239	0		=			
ANR	11220640	MemberAccess	outd . check		11220239	0					
ANR	11220641	Identifier	outd		11220239	0					
ANR	11220642	Identifier	check		11220239	1					
ANR	11220643	PrimaryExpression	1		11220239	1					
ANR	11220644	ExpressionStatement	"outd . crc = crc32 ( 0L , Z_NULL , 0 )"	469:8:18426:18457	11220239	22	True				
ANR	11220645	AssignmentExpression	"outd . crc = crc32 ( 0L , Z_NULL , 0 )"		11220239	0		=			
ANR	11220646	MemberAccess	outd . crc		11220239	0					
ANR	11220647	Identifier	outd		11220239	0					
ANR	11220648	Identifier	crc		11220239	1					
ANR	11220649	CallExpression	"crc32 ( 0L , Z_NULL , 0 )"		11220239	1					
ANR	11220650	Callee	crc32		11220239	0					
ANR	11220651	Identifier	crc32		11220239	0					
ANR	11220652	ArgumentList	0L		11220239	1					
ANR	11220653	Argument	0L		11220239	0					
ANR	11220654	PrimaryExpression	0L		11220239	0					
ANR	11220655	Argument	Z_NULL		11220239	1					
ANR	11220656	Identifier	Z_NULL		11220239	0					
ANR	11220657	Argument	0		11220239	2					
ANR	11220658	PrimaryExpression	0		11220239	0					
ANR	11220659	ExpressionStatement	outd . total = 0	470:8:18467:18481	11220239	23	True				
ANR	11220660	AssignmentExpression	outd . total = 0		11220239	0		=			
ANR	11220661	MemberAccess	outd . total		11220239	0					
ANR	11220662	Identifier	outd		11220239	0					
ANR	11220663	Identifier	total		11220239	1					
ANR	11220664	PrimaryExpression	0		11220239	1					
ANR	11220665	ExpressionStatement	strm -> next_in = next	473:8:18532:18552	11220239	24	True				
ANR	11220666	AssignmentExpression	strm -> next_in = next		11220239	0		=			
ANR	11220667	PtrMemberAccess	strm -> next_in		11220239	0					
ANR	11220668	Identifier	strm		11220239	0					
ANR	11220669	Identifier	next_in		11220239	1					
ANR	11220670	Identifier	next		11220239	1					
ANR	11220671	ExpressionStatement	strm -> avail_in = have	474:8:18562:18583	11220239	25	True				
ANR	11220672	AssignmentExpression	strm -> avail_in = have		11220239	0		=			
ANR	11220673	PtrMemberAccess	strm -> avail_in		11220239	0					
ANR	11220674	Identifier	strm		11220239	0					
ANR	11220675	Identifier	avail_in		11220239	1					
ANR	11220676	Identifier	have		11220239	1					
ANR	11220677	ExpressionStatement	"ret = inflateBack ( strm , in , indp , out , & outd )"	475:8:18593:18638	11220239	26	True				
ANR	11220678	AssignmentExpression	"ret = inflateBack ( strm , in , indp , out , & outd )"		11220239	0		=			
ANR	11220679	Identifier	ret		11220239	0					
ANR	11220680	CallExpression	"inflateBack ( strm , in , indp , out , & outd )"		11220239	1					
ANR	11220681	Callee	inflateBack		11220239	0					
ANR	11220682	Identifier	inflateBack		11220239	0					
ANR	11220683	ArgumentList	strm		11220239	1					
ANR	11220684	Argument	strm		11220239	0					
ANR	11220685	Identifier	strm		11220239	0					
ANR	11220686	Argument	in		11220239	1					
ANR	11220687	Identifier	in		11220239	0					
ANR	11220688	Argument	indp		11220239	2					
ANR	11220689	Identifier	indp		11220239	0					
ANR	11220690	Argument	out		11220239	3					
ANR	11220691	Identifier	out		11220239	0					
ANR	11220692	Argument	& outd		11220239	4					
ANR	11220693	UnaryOperationExpression	& outd		11220239	0					
ANR	11220694	UnaryOperator	&		11220239	0					
ANR	11220695	Identifier	outd		11220239	1					
ANR	11220696	IfStatement	if ( ret != Z_STREAM_END )		11220239	27					
ANR	11220697	Condition	ret != Z_STREAM_END	476:12:18652:18670	11220239	0	True				
ANR	11220698	EqualityExpression	ret != Z_STREAM_END		11220239	0		!=			
ANR	11220699	Identifier	ret		11220239	0					
ANR	11220700	Identifier	Z_STREAM_END		11220239	1					
ANR	11220701	BreakStatement	break ;	476:33:18673:18678	11220239	1	True				
ANR	11220702	ExpressionStatement	next = strm -> next_in	477:8:18688:18708	11220239	28	True				
ANR	11220703	AssignmentExpression	next = strm -> next_in		11220239	0		=			
ANR	11220704	Identifier	next		11220239	0					
ANR	11220705	PtrMemberAccess	strm -> next_in		11220239	1					
ANR	11220706	Identifier	strm		11220239	0					
ANR	11220707	Identifier	next_in		11220239	1					
ANR	11220708	ExpressionStatement	have = strm -> avail_in	478:8:18718:18739	11220239	29	True				
ANR	11220709	AssignmentExpression	have = strm -> avail_in		11220239	0		=			
ANR	11220710	Identifier	have		11220239	0					
ANR	11220711	PtrMemberAccess	strm -> avail_in		11220239	1					
ANR	11220712	Identifier	strm		11220239	0					
ANR	11220713	Identifier	avail_in		11220239	1					
ANR	11220714	ExpressionStatement	strm -> next_in = Z_NULL	479:8:18749:18771	11220239	30	True				
ANR	11220715	AssignmentExpression	strm -> next_in = Z_NULL		11220239	0		=			
ANR	11220716	PtrMemberAccess	strm -> next_in		11220239	0					
ANR	11220717	Identifier	strm		11220239	0					
ANR	11220718	Identifier	next_in		11220239	1					
ANR	11220719	Identifier	Z_NULL		11220239	1					
ANR	11220720	ExpressionStatement	ret = Z_BUF_ERROR	482:8:18853:18870	11220239	31	True				
ANR	11220721	AssignmentExpression	ret = Z_BUF_ERROR		11220239	0		=			
ANR	11220722	Identifier	ret		11220239	0					
ANR	11220723	Identifier	Z_BUF_ERROR		11220239	1					
ANR	11220724	IfStatement	if ( NEXT ( ) != ( int ) ( outd . crc & 0xff ) || NEXT ( ) != ( int ) ( ( outd . crc >> 8 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . crc >> 16 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . crc >> 24 ) & 0xff ) )		11220239	32					
ANR	11220725	Condition	NEXT ( ) != ( int ) ( outd . crc & 0xff ) || NEXT ( ) != ( int ) ( ( outd . crc >> 8 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . crc >> 16 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . crc >> 24 ) & 0xff )	483:12:18884:19082	11220239	0	True				
ANR	11220726	OrExpression	NEXT ( ) != ( int ) ( outd . crc & 0xff ) || NEXT ( ) != ( int ) ( ( outd . crc >> 8 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . crc >> 16 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . crc >> 24 ) & 0xff )		11220239	0		||			
ANR	11220727	EqualityExpression	NEXT ( ) != ( int ) ( outd . crc & 0xff )		11220239	0		!=			
ANR	11220728	CallExpression	NEXT ( )		11220239	0					
ANR	11220729	Callee	NEXT		11220239	0					
ANR	11220730	Identifier	NEXT		11220239	0					
ANR	11220731	ArgumentList			11220239	1					
ANR	11220732	CastExpression	( int ) ( outd . crc & 0xff )		11220239	1					
ANR	11220733	CastTarget	int		11220239	0					
ANR	11220734	BitAndExpression	outd . crc & 0xff		11220239	1		&			
ANR	11220735	MemberAccess	outd . crc		11220239	0					
ANR	11220736	Identifier	outd		11220239	0					
ANR	11220737	Identifier	crc		11220239	1					
ANR	11220738	PrimaryExpression	0xff		11220239	1					
ANR	11220739	OrExpression	NEXT ( ) != ( int ) ( ( outd . crc >> 8 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . crc >> 16 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . crc >> 24 ) & 0xff )		11220239	1		||			
ANR	11220740	EqualityExpression	NEXT ( ) != ( int ) ( ( outd . crc >> 8 ) & 0xff )		11220239	0		!=			
ANR	11220741	CallExpression	NEXT ( )		11220239	0					
ANR	11220742	Callee	NEXT		11220239	0					
ANR	11220743	Identifier	NEXT		11220239	0					
ANR	11220744	ArgumentList			11220239	1					
ANR	11220745	CastExpression	( int ) ( ( outd . crc >> 8 ) & 0xff )		11220239	1					
ANR	11220746	CastTarget	int		11220239	0					
ANR	11220747	BitAndExpression	( outd . crc >> 8 ) & 0xff		11220239	1		&			
ANR	11220748	ShiftExpression	outd . crc >> 8		11220239	0		>>			
ANR	11220749	MemberAccess	outd . crc		11220239	0					
ANR	11220750	Identifier	outd		11220239	0					
ANR	11220751	Identifier	crc		11220239	1					
ANR	11220752	PrimaryExpression	8		11220239	1					
ANR	11220753	PrimaryExpression	0xff		11220239	1					
ANR	11220754	OrExpression	NEXT ( ) != ( int ) ( ( outd . crc >> 16 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . crc >> 24 ) & 0xff )		11220239	1		||			
ANR	11220755	EqualityExpression	NEXT ( ) != ( int ) ( ( outd . crc >> 16 ) & 0xff )		11220239	0		!=			
ANR	11220756	CallExpression	NEXT ( )		11220239	0					
ANR	11220757	Callee	NEXT		11220239	0					
ANR	11220758	Identifier	NEXT		11220239	0					
ANR	11220759	ArgumentList			11220239	1					
ANR	11220760	CastExpression	( int ) ( ( outd . crc >> 16 ) & 0xff )		11220239	1					
ANR	11220761	CastTarget	int		11220239	0					
ANR	11220762	BitAndExpression	( outd . crc >> 16 ) & 0xff		11220239	1		&			
ANR	11220763	ShiftExpression	outd . crc >> 16		11220239	0		>>			
ANR	11220764	MemberAccess	outd . crc		11220239	0					
ANR	11220765	Identifier	outd		11220239	0					
ANR	11220766	Identifier	crc		11220239	1					
ANR	11220767	PrimaryExpression	16		11220239	1					
ANR	11220768	PrimaryExpression	0xff		11220239	1					
ANR	11220769	EqualityExpression	NEXT ( ) != ( int ) ( ( outd . crc >> 24 ) & 0xff )		11220239	1		!=			
ANR	11220770	CallExpression	NEXT ( )		11220239	0					
ANR	11220771	Callee	NEXT		11220239	0					
ANR	11220772	Identifier	NEXT		11220239	0					
ANR	11220773	ArgumentList			11220239	1					
ANR	11220774	CastExpression	( int ) ( ( outd . crc >> 24 ) & 0xff )		11220239	1					
ANR	11220775	CastTarget	int		11220239	0					
ANR	11220776	BitAndExpression	( outd . crc >> 24 ) & 0xff		11220239	1		&			
ANR	11220777	ShiftExpression	outd . crc >> 24		11220239	0		>>			
ANR	11220778	MemberAccess	outd . crc		11220239	0					
ANR	11220779	Identifier	outd		11220239	0					
ANR	11220780	Identifier	crc		11220239	1					
ANR	11220781	PrimaryExpression	24		11220239	1					
ANR	11220782	PrimaryExpression	0xff		11220239	1					
ANR	11220783	CompoundStatement		103:54:3549:3549	11220239	1					
ANR	11220784	IfStatement	if ( last != - 1 )		11220239	0					
ANR	11220785	Condition	last != - 1	488:16:19131:19140	11220239	0	True				
ANR	11220786	EqualityExpression	last != - 1		11220239	0		!=			
ANR	11220787	Identifier	last		11220239	0					
ANR	11220788	UnaryOperationExpression	- 1		11220239	1					
ANR	11220789	UnaryOperator	-		11220239	0					
ANR	11220790	PrimaryExpression	1		11220239	1					
ANR	11220791	CompoundStatement		105:28:3607:3607	11220239	1					
ANR	11220792	ExpressionStatement	"strm -> msg = ( char * ) ""incorrect data check"""	489:16:19161:19203	11220239	0	True				
ANR	11220793	AssignmentExpression	"strm -> msg = ( char * ) ""incorrect data check"""		11220239	0		=			
ANR	11220794	PtrMemberAccess	strm -> msg		11220239	0					
ANR	11220795	Identifier	strm		11220239	0					
ANR	11220796	Identifier	msg		11220239	1					
ANR	11220797	CastExpression	"( char * ) ""incorrect data check"""		11220239	1					
ANR	11220798	CastTarget	char *		11220239	0					
ANR	11220799	PrimaryExpression	"""incorrect data check"""		11220239	1					
ANR	11220800	ExpressionStatement	ret = Z_DATA_ERROR	490:16:19221:19239	11220239	1	True				
ANR	11220801	AssignmentExpression	ret = Z_DATA_ERROR		11220239	0		=			
ANR	11220802	Identifier	ret		11220239	0					
ANR	11220803	Identifier	Z_DATA_ERROR		11220239	1					
ANR	11220804	BreakStatement	break ;	492:12:19267:19272	11220239	1	True				
ANR	11220805	IfStatement	if ( NEXT ( ) != ( int ) ( outd . total & 0xff ) || NEXT ( ) != ( int ) ( ( outd . total >> 8 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . total >> 16 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . total >> 24 ) & 0xff ) )		11220239	33					
ANR	11220806	Condition	NEXT ( ) != ( int ) ( outd . total & 0xff ) || NEXT ( ) != ( int ) ( ( outd . total >> 8 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . total >> 16 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . total >> 24 ) & 0xff )	494:12:19296:19502	11220239	0	True				
ANR	11220807	OrExpression	NEXT ( ) != ( int ) ( outd . total & 0xff ) || NEXT ( ) != ( int ) ( ( outd . total >> 8 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . total >> 16 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . total >> 24 ) & 0xff )		11220239	0		||			
ANR	11220808	EqualityExpression	NEXT ( ) != ( int ) ( outd . total & 0xff )		11220239	0		!=			
ANR	11220809	CallExpression	NEXT ( )		11220239	0					
ANR	11220810	Callee	NEXT		11220239	0					
ANR	11220811	Identifier	NEXT		11220239	0					
ANR	11220812	ArgumentList			11220239	1					
ANR	11220813	CastExpression	( int ) ( outd . total & 0xff )		11220239	1					
ANR	11220814	CastTarget	int		11220239	0					
ANR	11220815	BitAndExpression	outd . total & 0xff		11220239	1		&			
ANR	11220816	MemberAccess	outd . total		11220239	0					
ANR	11220817	Identifier	outd		11220239	0					
ANR	11220818	Identifier	total		11220239	1					
ANR	11220819	PrimaryExpression	0xff		11220239	1					
ANR	11220820	OrExpression	NEXT ( ) != ( int ) ( ( outd . total >> 8 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . total >> 16 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . total >> 24 ) & 0xff )		11220239	1		||			
ANR	11220821	EqualityExpression	NEXT ( ) != ( int ) ( ( outd . total >> 8 ) & 0xff )		11220239	0		!=			
ANR	11220822	CallExpression	NEXT ( )		11220239	0					
ANR	11220823	Callee	NEXT		11220239	0					
ANR	11220824	Identifier	NEXT		11220239	0					
ANR	11220825	ArgumentList			11220239	1					
ANR	11220826	CastExpression	( int ) ( ( outd . total >> 8 ) & 0xff )		11220239	1					
ANR	11220827	CastTarget	int		11220239	0					
ANR	11220828	BitAndExpression	( outd . total >> 8 ) & 0xff		11220239	1		&			
ANR	11220829	ShiftExpression	outd . total >> 8		11220239	0		>>			
ANR	11220830	MemberAccess	outd . total		11220239	0					
ANR	11220831	Identifier	outd		11220239	0					
ANR	11220832	Identifier	total		11220239	1					
ANR	11220833	PrimaryExpression	8		11220239	1					
ANR	11220834	PrimaryExpression	0xff		11220239	1					
ANR	11220835	OrExpression	NEXT ( ) != ( int ) ( ( outd . total >> 16 ) & 0xff ) || NEXT ( ) != ( int ) ( ( outd . total >> 24 ) & 0xff )		11220239	1		||			
ANR	11220836	EqualityExpression	NEXT ( ) != ( int ) ( ( outd . total >> 16 ) & 0xff )		11220239	0		!=			
ANR	11220837	CallExpression	NEXT ( )		11220239	0					
ANR	11220838	Callee	NEXT		11220239	0					
ANR	11220839	Identifier	NEXT		11220239	0					
ANR	11220840	ArgumentList			11220239	1					
ANR	11220841	CastExpression	( int ) ( ( outd . total >> 16 ) & 0xff )		11220239	1					
ANR	11220842	CastTarget	int		11220239	0					
ANR	11220843	BitAndExpression	( outd . total >> 16 ) & 0xff		11220239	1		&			
ANR	11220844	ShiftExpression	outd . total >> 16		11220239	0		>>			
ANR	11220845	MemberAccess	outd . total		11220239	0					
ANR	11220846	Identifier	outd		11220239	0					
ANR	11220847	Identifier	total		11220239	1					
ANR	11220848	PrimaryExpression	16		11220239	1					
ANR	11220849	PrimaryExpression	0xff		11220239	1					
ANR	11220850	EqualityExpression	NEXT ( ) != ( int ) ( ( outd . total >> 24 ) & 0xff )		11220239	1		!=			
ANR	11220851	CallExpression	NEXT ( )		11220239	0					
ANR	11220852	Callee	NEXT		11220239	0					
ANR	11220853	Identifier	NEXT		11220239	0					
ANR	11220854	ArgumentList			11220239	1					
ANR	11220855	CastExpression	( int ) ( ( outd . total >> 24 ) & 0xff )		11220239	1					
ANR	11220856	CastTarget	int		11220239	0					
ANR	11220857	BitAndExpression	( outd . total >> 24 ) & 0xff		11220239	1		&			
ANR	11220858	ShiftExpression	outd . total >> 24		11220239	0		>>			
ANR	11220859	MemberAccess	outd . total		11220239	0					
ANR	11220860	Identifier	outd		11220239	0					
ANR	11220861	Identifier	total		11220239	1					
ANR	11220862	PrimaryExpression	24		11220239	1					
ANR	11220863	PrimaryExpression	0xff		11220239	1					
ANR	11220864	CompoundStatement		114:56:3969:3969	11220239	1					
ANR	11220865	IfStatement	if ( last != - 1 )		11220239	0					
ANR	11220866	Condition	last != - 1	499:16:19554:19563	11220239	0	True				
ANR	11220867	EqualityExpression	last != - 1		11220239	0		!=			
ANR	11220868	Identifier	last		11220239	0					
ANR	11220869	UnaryOperationExpression	- 1		11220239	1					
ANR	11220870	UnaryOperator	-		11220239	0					
ANR	11220871	PrimaryExpression	1		11220239	1					
ANR	11220872	CompoundStatement		116:28:4030:4030	11220239	1					
ANR	11220873	ExpressionStatement	"strm -> msg = ( char * ) ""incorrect length check"""	500:16:19584:19628	11220239	0	True				
ANR	11220874	AssignmentExpression	"strm -> msg = ( char * ) ""incorrect length check"""		11220239	0		=			
ANR	11220875	PtrMemberAccess	strm -> msg		11220239	0					
ANR	11220876	Identifier	strm		11220239	0					
ANR	11220877	Identifier	msg		11220239	1					
ANR	11220878	CastExpression	"( char * ) ""incorrect length check"""		11220239	1					
ANR	11220879	CastTarget	char *		11220239	0					
ANR	11220880	PrimaryExpression	"""incorrect length check"""		11220239	1					
ANR	11220881	ExpressionStatement	ret = Z_DATA_ERROR	501:16:19646:19664	11220239	1	True				
ANR	11220882	AssignmentExpression	ret = Z_DATA_ERROR		11220239	0		=			
ANR	11220883	Identifier	ret		11220239	0					
ANR	11220884	Identifier	Z_DATA_ERROR		11220239	1					
ANR	11220885	BreakStatement	break ;	503:12:19692:19697	11220239	1	True				
ANR	11220886	ReturnStatement	return ret ;	510:4:19806:19816	11220239	13	True				
ANR	11220887	Identifier	ret		11220239	0					
ANR	11220888	ReturnType	local int		11220239	1					
ANR	11220889	Identifier	gunpipe		11220239	2					
ANR	11220890	ParameterList	"z_stream * strm , int infile , int outfile"		11220239	3					
ANR	11220891	Parameter	z_stream * strm	383:18:15494:15507	11220239	0	True				
ANR	11220892	ParameterType	z_stream *		11220239	0					
ANR	11220893	Identifier	strm		11220239	1					
ANR	11220894	Parameter	int infile	383:34:15510:15519	11220239	1	True				
ANR	11220895	ParameterType	int		11220239	0					
ANR	11220896	Identifier	infile		11220239	1					
ANR	11220897	Parameter	int outfile	383:46:15522:15532	11220239	2	True				
ANR	11220898	ParameterType	int		11220239	0					
ANR	11220899	Identifier	outfile		11220239	1					
ANR	11220900	CFGEntryNode	ENTRY		11220239		True				
ANR	11220901	CFGExitNode	EXIT		11220239		True				
ANR	11220902	InfiniteForNode	true		11220239		True				
ANR	11220903	Symbol	next		11220239						
ANR	11220904	Symbol	indp		11220239						
ANR	11220905	Symbol	outd . outfile		11220239						
ANR	11220906	Symbol	& ind		11220239						
ANR	11220907	Symbol	Z_DATA_ERROR		11220239						
ANR	11220908	Symbol	Z_BUF_ERROR		11220239						
ANR	11220909	Symbol	outfile		11220239						
ANR	11220910	Symbol	flags		11220239						
ANR	11220911	Symbol	ind . inbuf		11220239						
ANR	11220912	Symbol	infile		11220239						
ANR	11220913	Symbol	Z_OK		11220239						
ANR	11220914	Symbol	outd . total		11220239						
ANR	11220915	Symbol	out		11220239						
ANR	11220916	Symbol	outd . crc		11220239						
ANR	11220917	Symbol	len		11220239						
ANR	11220918	Symbol	inbuf		11220239						
ANR	11220919	Symbol	NEXT		11220239						
ANR	11220920	Symbol	have		11220239						
ANR	11220921	Symbol	Z_STREAM_END		11220239						
ANR	11220922	Symbol	strm -> next_in		11220239						
ANR	11220923	Symbol	crc32		11220239						
ANR	11220924	Symbol	ind		11220239						
ANR	11220925	Symbol	outd . check		11220239						
ANR	11220926	Symbol	& outd		11220239						
ANR	11220927	Symbol	ret		11220239						
ANR	11220928	Symbol	Z_ERRNO		11220239						
ANR	11220929	Symbol	outd		11220239						
ANR	11220930	Symbol	NULL		11220239						
ANR	11220931	Symbol	last		11220239						
ANR	11220932	Symbol	in		11220239						
ANR	11220933	Symbol	strm		11220239						
ANR	11220934	Symbol	strm -> avail_in		11220239						
ANR	11220935	Symbol	inflateBack		11220239						
ANR	11220936	Symbol	* strm		11220239						
ANR	11220937	Symbol	lunpipe		11220239						
ANR	11220938	Symbol	ind . infile		11220239						
ANR	11220939	Symbol	first		11220239						
ANR	11220940	Symbol	strm -> msg		11220239						
ANR	11220941	Symbol	Z_NULL		11220239						
ANR	11220942	Function	copymeta	517:0:20125:20707							
ANR	11220943	FunctionDef	"copymeta (char * from , char * to)"		11220942	0					
ANR	11220944	CompoundStatement		518:0:20167:20707	11220942	0					
ANR	11220945	IdentifierDeclStatement	struct stat was ;	519:4:20173:20188	11220942	0	True				
ANR	11220946	IdentifierDecl	was		11220942	0					
ANR	11220947	IdentifierDeclType	struct stat		11220942	0					
ANR	11220948	Identifier	was		11220942	1					
ANR	11220949	IdentifierDeclStatement	struct utimbuf when ;	520:4:20194:20213	11220942	1	True				
ANR	11220950	IdentifierDecl	when		11220942	0					
ANR	11220951	IdentifierDeclType	struct utimbuf		11220942	0					
ANR	11220952	Identifier	when		11220942	1					
ANR	11220953	IfStatement	"if ( stat ( from , & was ) != 0 || ( was . st_mode & S_IFMT ) != S_IFREG )"		11220942	2					
ANR	11220954	Condition	"stat ( from , & was ) != 0 || ( was . st_mode & S_IFMT ) != S_IFREG"	523:8:20297:20354	11220942	0	True				
ANR	11220955	OrExpression	"stat ( from , & was ) != 0 || ( was . st_mode & S_IFMT ) != S_IFREG"		11220942	0		||			
ANR	11220956	EqualityExpression	"stat ( from , & was ) != 0"		11220942	0		!=			
ANR	11220957	CallExpression	"stat ( from , & was )"		11220942	0					
ANR	11220958	Callee	stat		11220942	0					
ANR	11220959	Identifier	stat		11220942	0					
ANR	11220960	ArgumentList	from		11220942	1					
ANR	11220961	Argument	from		11220942	0					
ANR	11220962	Identifier	from		11220942	0					
ANR	11220963	Argument	& was		11220942	1					
ANR	11220964	UnaryOperationExpression	& was		11220942	0					
ANR	11220965	UnaryOperator	&		11220942	0					
ANR	11220966	Identifier	was		11220942	1					
ANR	11220967	PrimaryExpression	0		11220942	1					
ANR	11220968	EqualityExpression	( was . st_mode & S_IFMT ) != S_IFREG		11220942	1		!=			
ANR	11220969	BitAndExpression	was . st_mode & S_IFMT		11220942	0		&			
ANR	11220970	MemberAccess	was . st_mode		11220942	0					
ANR	11220971	Identifier	was		11220942	0					
ANR	11220972	Identifier	st_mode		11220942	1					
ANR	11220973	Identifier	S_IFMT		11220942	1					
ANR	11220974	Identifier	S_IFREG		11220942	1					
ANR	11220975	ReturnStatement	return ;	524:8:20365:20371	11220942	1	True				
ANR	11220976	ExpressionStatement	"( void ) chmod ( to , was . st_mode & 07777 )"	527:4:20422:20458	11220942	3	True				
ANR	11220977	CastExpression	"( void ) chmod ( to , was . st_mode & 07777 )"		11220942	0					
ANR	11220978	CastTarget	void		11220942	0					
ANR	11220979	CallExpression	"chmod ( to , was . st_mode & 07777 )"		11220942	1					
ANR	11220980	Callee	chmod		11220942	0					
ANR	11220981	Identifier	chmod		11220942	0					
ANR	11220982	ArgumentList	to		11220942	1					
ANR	11220983	Argument	to		11220942	0					
ANR	11220984	Identifier	to		11220942	0					
ANR	11220985	Argument	was . st_mode & 07777		11220942	1					
ANR	11220986	BitAndExpression	was . st_mode & 07777		11220942	0		&			
ANR	11220987	MemberAccess	was . st_mode		11220942	0					
ANR	11220988	Identifier	was		11220942	0					
ANR	11220989	Identifier	st_mode		11220942	1					
ANR	11220990	PrimaryExpression	07777		11220942	1					
ANR	11220991	ExpressionStatement	"( void ) chown ( to , was . st_uid , was . st_gid )"	530:4:20518:20557	11220942	4	True				
ANR	11220992	CastExpression	"( void ) chown ( to , was . st_uid , was . st_gid )"		11220942	0					
ANR	11220993	CastTarget	void		11220942	0					
ANR	11220994	CallExpression	"chown ( to , was . st_uid , was . st_gid )"		11220942	1					
ANR	11220995	Callee	chown		11220942	0					
ANR	11220996	Identifier	chown		11220942	0					
ANR	11220997	ArgumentList	to		11220942	1					
ANR	11220998	Argument	to		11220942	0					
ANR	11220999	Identifier	to		11220942	0					
ANR	11221000	Argument	was . st_uid		11220942	1					
ANR	11221001	MemberAccess	was . st_uid		11220942	0					
ANR	11221002	Identifier	was		11220942	0					
ANR	11221003	Identifier	st_uid		11220942	1					
ANR	11221004	Argument	was . st_gid		11220942	2					
ANR	11221005	MemberAccess	was . st_gid		11220942	0					
ANR	11221006	Identifier	was		11220942	0					
ANR	11221007	Identifier	st_gid		11220942	1					
ANR	11221008	ExpressionStatement	when . actime = was . st_atime	533:4:20618:20644	11220942	5	True				
ANR	11221009	AssignmentExpression	when . actime = was . st_atime		11220942	0		=			
ANR	11221010	MemberAccess	when . actime		11220942	0					
ANR	11221011	Identifier	when		11220942	0					
ANR	11221012	Identifier	actime		11220942	1					
ANR	11221013	MemberAccess	was . st_atime		11220942	1					
ANR	11221014	Identifier	was		11220942	0					
ANR	11221015	Identifier	st_atime		11220942	1					
ANR	11221016	ExpressionStatement	when . modtime = was . st_mtime	534:4:20650:20677	11220942	6	True				
ANR	11221017	AssignmentExpression	when . modtime = was . st_mtime		11220942	0		=			
ANR	11221018	MemberAccess	when . modtime		11220942	0					
ANR	11221019	Identifier	when		11220942	0					
ANR	11221020	Identifier	modtime		11220942	1					
ANR	11221021	MemberAccess	was . st_mtime		11220942	1					
ANR	11221022	Identifier	was		11220942	0					
ANR	11221023	Identifier	st_mtime		11220942	1					
ANR	11221024	ExpressionStatement	"( void ) utime ( to , & when )"	535:4:20683:20705	11220942	7	True				
ANR	11221025	CastExpression	"( void ) utime ( to , & when )"		11220942	0					
ANR	11221026	CastTarget	void		11220942	0					
ANR	11221027	CallExpression	"utime ( to , & when )"		11220942	1					
ANR	11221028	Callee	utime		11220942	0					
ANR	11221029	Identifier	utime		11220942	0					
ANR	11221030	ArgumentList	to		11220942	1					
ANR	11221031	Argument	to		11220942	0					
ANR	11221032	Identifier	to		11220942	0					
ANR	11221033	Argument	& when		11220942	1					
ANR	11221034	UnaryOperationExpression	& when		11220942	0					
ANR	11221035	UnaryOperator	&		11220942	0					
ANR	11221036	Identifier	when		11220942	1					
ANR	11221037	ReturnType	local void		11220942	1					
ANR	11221038	Identifier	copymeta		11220942	2					
ANR	11221039	ParameterList	"char * from , char * to"		11220942	3					
ANR	11221040	Parameter	char * from	517:20:20145:20154	11220942	0	True				
ANR	11221041	ParameterType	char *		11220942	0					
ANR	11221042	Identifier	from		11220942	1					
ANR	11221043	Parameter	char * to	517:32:20157:20164	11220942	1	True				
ANR	11221044	ParameterType	char *		11220942	0					
ANR	11221045	Identifier	to		11220942	1					
ANR	11221046	CFGEntryNode	ENTRY		11220942		True				
ANR	11221047	CFGExitNode	EXIT		11220942		True				
ANR	11221048	Symbol	when . modtime		11220942						
ANR	11221049	Symbol	stat		11220942						
ANR	11221050	Symbol	& when		11220942						
ANR	11221051	Symbol	was		11220942						
ANR	11221052	Symbol	& was		11220942						
ANR	11221053	Symbol	was . st_uid		11220942						
ANR	11221054	Symbol	was . st_mtime		11220942						
ANR	11221055	Symbol	S_IFREG		11220942						
ANR	11221056	Symbol	when		11220942						
ANR	11221057	Symbol	S_IFMT		11220942						
ANR	11221058	Symbol	when . actime		11220942						
ANR	11221059	Symbol	was . st_mode		11220942						
ANR	11221060	Symbol	from		11220942						
ANR	11221061	Symbol	to		11220942						
ANR	11221062	Symbol	was . st_gid		11220942						
ANR	11221063	Symbol	was . st_atime		11220942						
ANR	11221064	Function	gunzip	548:0:21237:23523							
ANR	11221065	FunctionDef	"gunzip (z_stream * strm , char * inname , char * outname , int test)"		11221064	0					
ANR	11221066	CompoundStatement		549:0:21309:23523	11221064	0					
ANR	11221067	IdentifierDeclStatement	int ret ;	550:4:21315:21322	11221064	0	True				
ANR	11221068	IdentifierDecl	ret		11221064	0					
ANR	11221069	IdentifierDeclType	int		11221064	0					
ANR	11221070	Identifier	ret		11221064	1					
ANR	11221071	IdentifierDeclStatement	"int infile , outfile ;"	551:4:21328:21347	11221064	1	True				
ANR	11221072	IdentifierDecl	infile		11221064	0					
ANR	11221073	IdentifierDeclType	int		11221064	0					
ANR	11221074	Identifier	infile		11221064	1					
ANR	11221075	IdentifierDecl	outfile		11221064	1					
ANR	11221076	IdentifierDeclType	int		11221064	0					
ANR	11221077	Identifier	outfile		11221064	1					
ANR	11221078	IfStatement	if ( inname == NULL || * inname == 0 )		11221064	2					
ANR	11221079	Condition	inname == NULL || * inname == 0	554:8:21379:21408	11221064	0	True				
ANR	11221080	OrExpression	inname == NULL || * inname == 0		11221064	0		||			
ANR	11221081	EqualityExpression	inname == NULL		11221064	0		==			
ANR	11221082	Identifier	inname		11221064	0					
ANR	11221083	Identifier	NULL		11221064	1					
ANR	11221084	EqualityExpression	* inname == 0		11221064	1		==			
ANR	11221085	UnaryOperationExpression	* inname		11221064	0					
ANR	11221086	UnaryOperator	*		11221064	0					
ANR	11221087	Identifier	inname		11221064	1					
ANR	11221088	PrimaryExpression	0		11221064	1					
ANR	11221089	CompoundStatement		6:40:101:101	11221064	1					
ANR	11221090	ExpressionStatement	"inname = ""-"""	555:8:21421:21433	11221064	0	True				
ANR	11221091	AssignmentExpression	"inname = ""-"""		11221064	0		=			
ANR	11221092	Identifier	inname		11221064	0					
ANR	11221093	PrimaryExpression	"""-"""		11221064	1					
ANR	11221094	ExpressionStatement	infile = 0	556:8:21443:21453	11221064	1	True				
ANR	11221095	AssignmentExpression	infile = 0		11221064	0		=			
ANR	11221096	Identifier	infile		11221064	0					
ANR	11221097	PrimaryExpression	0		11221064	1					
ANR	11221098	ElseStatement	else		11221064	0					
ANR	11221099	CompoundStatement		10:9:176:176	11221064	0					
ANR	11221100	ExpressionStatement	"infile = open ( inname , O_RDONLY , 0 )"	559:8:21496:21530	11221064	0	True				
ANR	11221101	AssignmentExpression	"infile = open ( inname , O_RDONLY , 0 )"		11221064	0		=			
ANR	11221102	Identifier	infile		11221064	0					
ANR	11221103	CallExpression	"open ( inname , O_RDONLY , 0 )"		11221064	1					
ANR	11221104	Callee	open		11221064	0					
ANR	11221105	Identifier	open		11221064	0					
ANR	11221106	ArgumentList	inname		11221064	1					
ANR	11221107	Argument	inname		11221064	0					
ANR	11221108	Identifier	inname		11221064	0					
ANR	11221109	Argument	O_RDONLY		11221064	1					
ANR	11221110	Identifier	O_RDONLY		11221064	0					
ANR	11221111	Argument	0		11221064	2					
ANR	11221112	PrimaryExpression	0		11221064	0					
ANR	11221113	IfStatement	if ( infile == - 1 )		11221064	1					
ANR	11221114	Condition	infile == - 1	560:12:21544:21555	11221064	0	True				
ANR	11221115	EqualityExpression	infile == - 1		11221064	0		==			
ANR	11221116	Identifier	infile		11221064	0					
ANR	11221117	UnaryOperationExpression	- 1		11221064	1					
ANR	11221118	UnaryOperator	-		11221064	0					
ANR	11221119	PrimaryExpression	1		11221064	1					
ANR	11221120	CompoundStatement		12:26:248:248	11221064	1					
ANR	11221121	ExpressionStatement	"fprintf ( stderr , ""gun cannot open %s\\n"" , inname )"	561:12:21572:21619	11221064	0	True				
ANR	11221122	CallExpression	"fprintf ( stderr , ""gun cannot open %s\\n"" , inname )"		11221064	0					
ANR	11221123	Callee	fprintf		11221064	0					
ANR	11221124	Identifier	fprintf		11221064	0					
ANR	11221125	ArgumentList	stderr		11221064	1					
ANR	11221126	Argument	stderr		11221064	0					
ANR	11221127	Identifier	stderr		11221064	0					
ANR	11221128	Argument	"""gun cannot open %s\\n"""		11221064	1					
ANR	11221129	PrimaryExpression	"""gun cannot open %s\\n"""		11221064	0					
ANR	11221130	Argument	inname		11221064	2					
ANR	11221131	Identifier	inname		11221064	0					
ANR	11221132	ReturnStatement	return 0 ;	562:12:21633:21641	11221064	1	True				
ANR	11221133	PrimaryExpression	0		11221064	0					
ANR	11221134	IfStatement	if ( test )		11221064	3					
ANR	11221135	Condition	test	565:8:21667:21670	11221064	0	True				
ANR	11221136	Identifier	test		11221064	0					
ANR	11221137	ExpressionStatement	outfile = - 1	566:8:21681:21693	11221064	1	True				
ANR	11221138	AssignmentExpression	outfile = - 1		11221064	0		=			
ANR	11221139	Identifier	outfile		11221064	0					
ANR	11221140	UnaryOperationExpression	- 1		11221064	1					
ANR	11221141	UnaryOperator	-		11221064	0					
ANR	11221142	PrimaryExpression	1		11221064	1					
ANR	11221143	ElseStatement	else		11221064	0					
ANR	11221144	IfStatement	if ( outname == NULL || * outname == 0 )		11221064	0					
ANR	11221145	Condition	outname == NULL || * outname == 0	567:13:21708:21739	11221064	0	True				
ANR	11221146	OrExpression	outname == NULL || * outname == 0		11221064	0		||			
ANR	11221147	EqualityExpression	outname == NULL		11221064	0		==			
ANR	11221148	Identifier	outname		11221064	0					
ANR	11221149	Identifier	NULL		11221064	1					
ANR	11221150	EqualityExpression	* outname == 0		11221064	1		==			
ANR	11221151	UnaryOperationExpression	* outname		11221064	0					
ANR	11221152	UnaryOperator	*		11221064	0					
ANR	11221153	Identifier	outname		11221064	1					
ANR	11221154	PrimaryExpression	0		11221064	1					
ANR	11221155	CompoundStatement		19:47:432:432	11221064	1					
ANR	11221156	ExpressionStatement	"outname = ""-"""	568:8:21752:21765	11221064	0	True				
ANR	11221157	AssignmentExpression	"outname = ""-"""		11221064	0		=			
ANR	11221158	Identifier	outname		11221064	0					
ANR	11221159	PrimaryExpression	"""-"""		11221064	1					
ANR	11221160	ExpressionStatement	outfile = 1	569:8:21775:21786	11221064	1	True				
ANR	11221161	AssignmentExpression	outfile = 1		11221064	0		=			
ANR	11221162	Identifier	outfile		11221064	0					
ANR	11221163	PrimaryExpression	1		11221064	1					
ANR	11221164	ElseStatement	else		11221064	0					
ANR	11221165	CompoundStatement		23:9:509:509	11221064	0					
ANR	11221166	ExpressionStatement	"outfile = open ( outname , O_CREAT | O_TRUNC | O_WRONLY , 0666 )"	572:8:21829:21888	11221064	0	True				
ANR	11221167	AssignmentExpression	"outfile = open ( outname , O_CREAT | O_TRUNC | O_WRONLY , 0666 )"		11221064	0		=			
ANR	11221168	Identifier	outfile		11221064	0					
ANR	11221169	CallExpression	"open ( outname , O_CREAT | O_TRUNC | O_WRONLY , 0666 )"		11221064	1					
ANR	11221170	Callee	open		11221064	0					
ANR	11221171	Identifier	open		11221064	0					
ANR	11221172	ArgumentList	outname		11221064	1					
ANR	11221173	Argument	outname		11221064	0					
ANR	11221174	Identifier	outname		11221064	0					
ANR	11221175	Argument	O_CREAT | O_TRUNC | O_WRONLY		11221064	1					
ANR	11221176	InclusiveOrExpression	O_CREAT | O_TRUNC | O_WRONLY		11221064	0		|			
ANR	11221177	Identifier	O_CREAT		11221064	0					
ANR	11221178	InclusiveOrExpression	O_TRUNC | O_WRONLY		11221064	1		|			
ANR	11221179	Identifier	O_TRUNC		11221064	0					
ANR	11221180	Identifier	O_WRONLY		11221064	1					
ANR	11221181	Argument	0666		11221064	2					
ANR	11221182	PrimaryExpression	0666		11221064	0					
ANR	11221183	IfStatement	if ( outfile == - 1 )		11221064	1					
ANR	11221184	Condition	outfile == - 1	573:12:21902:21914	11221064	0	True				
ANR	11221185	EqualityExpression	outfile == - 1		11221064	0		==			
ANR	11221186	Identifier	outfile		11221064	0					
ANR	11221187	UnaryOperationExpression	- 1		11221064	1					
ANR	11221188	UnaryOperator	-		11221064	0					
ANR	11221189	PrimaryExpression	1		11221064	1					
ANR	11221190	CompoundStatement		25:27:607:607	11221064	1					
ANR	11221191	ExpressionStatement	close ( infile )	574:12:21931:21944	11221064	0	True				
ANR	11221192	CallExpression	close ( infile )		11221064	0					
ANR	11221193	Callee	close		11221064	0					
ANR	11221194	Identifier	close		11221064	0					
ANR	11221195	ArgumentList	infile		11221064	1					
ANR	11221196	Argument	infile		11221064	0					
ANR	11221197	Identifier	infile		11221064	0					
ANR	11221198	ExpressionStatement	"fprintf ( stderr , ""gun cannot create %s\\n"" , outname )"	575:12:21958:22008	11221064	1	True				
ANR	11221199	CallExpression	"fprintf ( stderr , ""gun cannot create %s\\n"" , outname )"		11221064	0					
ANR	11221200	Callee	fprintf		11221064	0					
ANR	11221201	Identifier	fprintf		11221064	0					
ANR	11221202	ArgumentList	stderr		11221064	1					
ANR	11221203	Argument	stderr		11221064	0					
ANR	11221204	Identifier	stderr		11221064	0					
ANR	11221205	Argument	"""gun cannot create %s\\n"""		11221064	1					
ANR	11221206	PrimaryExpression	"""gun cannot create %s\\n"""		11221064	0					
ANR	11221207	Argument	outname		11221064	2					
ANR	11221208	Identifier	outname		11221064	0					
ANR	11221209	ReturnStatement	return 0 ;	576:12:22022:22030	11221064	2	True				
ANR	11221210	PrimaryExpression	0		11221064	0					
ANR	11221211	ExpressionStatement	errno = 0	579:4:22052:22061	11221064	4	True				
ANR	11221212	AssignmentExpression	errno = 0		11221064	0		=			
ANR	11221213	Identifier	errno		11221064	0					
ANR	11221214	PrimaryExpression	0		11221064	1					
ANR	11221215	ExpressionStatement	"ret = gunpipe ( strm , infile , outfile )"	582:4:22089:22125	11221064	5	True				
ANR	11221216	AssignmentExpression	"ret = gunpipe ( strm , infile , outfile )"		11221064	0		=			
ANR	11221217	Identifier	ret		11221064	0					
ANR	11221218	CallExpression	"gunpipe ( strm , infile , outfile )"		11221064	1					
ANR	11221219	Callee	gunpipe		11221064	0					
ANR	11221220	Identifier	gunpipe		11221064	0					
ANR	11221221	ArgumentList	strm		11221064	1					
ANR	11221222	Argument	strm		11221064	0					
ANR	11221223	Identifier	strm		11221064	0					
ANR	11221224	Argument	infile		11221064	1					
ANR	11221225	Identifier	infile		11221064	0					
ANR	11221226	Argument	outfile		11221064	2					
ANR	11221227	Identifier	outfile		11221064	0					
ANR	11221228	IfStatement	if ( outfile > 2 )		11221064	6					
ANR	11221229	Condition	outfile > 2	583:8:22135:22145	11221064	0	True				
ANR	11221230	RelationalExpression	outfile > 2		11221064	0		>			
ANR	11221231	Identifier	outfile		11221064	0					
ANR	11221232	PrimaryExpression	2		11221064	1					
ANR	11221233	ExpressionStatement	close ( outfile )	583:21:22148:22162	11221064	1	True				
ANR	11221234	CallExpression	close ( outfile )		11221064	0					
ANR	11221235	Callee	close		11221064	0					
ANR	11221236	Identifier	close		11221064	0					
ANR	11221237	ArgumentList	outfile		11221064	1					
ANR	11221238	Argument	outfile		11221064	0					
ANR	11221239	Identifier	outfile		11221064	0					
ANR	11221240	IfStatement	if ( infile > 2 )		11221064	7					
ANR	11221241	Condition	infile > 2	584:8:22172:22181	11221064	0	True				
ANR	11221242	RelationalExpression	infile > 2		11221064	0		>			
ANR	11221243	Identifier	infile		11221064	0					
ANR	11221244	PrimaryExpression	2		11221064	1					
ANR	11221245	ExpressionStatement	close ( infile )	584:20:22184:22197	11221064	1	True				
ANR	11221246	CallExpression	close ( infile )		11221064	0					
ANR	11221247	Callee	close		11221064	0					
ANR	11221248	Identifier	close		11221064	0					
ANR	11221249	ArgumentList	infile		11221064	1					
ANR	11221250	Argument	infile		11221064	0					
ANR	11221251	Identifier	infile		11221064	0					
ANR	11221252	SwitchStatement	switch ( ret )		11221064	8					
ANR	11221253	Condition	ret	587:12:22239:22241	11221064	0	True				
ANR	11221254	Identifier	ret		11221064	0					
ANR	11221255	CompoundStatement		39:17:934:934	11221064	1					
ANR	11221256	Label	case Z_OK :	588:4:22250:22259	11221064	0	True				
ANR	11221257	Identifier	Z_OK		11221064	0					
ANR	11221258	Label	case Z_ERRNO :	589:4:22265:22277	11221064	1	True				
ANR	11221259	Identifier	Z_ERRNO		11221064	0					
ANR	11221260	IfStatement	if ( infile > 2 && outfile > 2 )		11221064	2					
ANR	11221261	Condition	infile > 2 && outfile > 2	590:12:22291:22315	11221064	0	True				
ANR	11221262	AndExpression	infile > 2 && outfile > 2		11221064	0		&&			
ANR	11221263	RelationalExpression	infile > 2		11221064	0		>			
ANR	11221264	Identifier	infile		11221064	0					
ANR	11221265	PrimaryExpression	2		11221064	1					
ANR	11221266	RelationalExpression	outfile > 2		11221064	1		>			
ANR	11221267	Identifier	outfile		11221064	0					
ANR	11221268	PrimaryExpression	2		11221064	1					
ANR	11221269	CompoundStatement		42:39:1008:1008	11221064	1					
ANR	11221270	ExpressionStatement	"copymeta ( inname , outname )"	591:12:22332:22357	11221064	0	True				
ANR	11221271	CallExpression	"copymeta ( inname , outname )"		11221064	0					
ANR	11221272	Callee	copymeta		11221064	0					
ANR	11221273	Identifier	copymeta		11221064	0					
ANR	11221274	ArgumentList	inname		11221064	1					
ANR	11221275	Argument	inname		11221064	0					
ANR	11221276	Identifier	inname		11221064	0					
ANR	11221277	Argument	outname		11221064	1					
ANR	11221278	Identifier	outname		11221064	0					
ANR	11221279	ExpressionStatement	unlink ( inname )	592:12:22402:22416	11221064	1	True				
ANR	11221280	CallExpression	unlink ( inname )		11221064	0					
ANR	11221281	Callee	unlink		11221064	0					
ANR	11221282	Identifier	unlink		11221064	0					
ANR	11221283	ArgumentList	inname		11221064	1					
ANR	11221284	Argument	inname		11221064	0					
ANR	11221285	Identifier	inname		11221064	0					
ANR	11221286	IfStatement	if ( ret == Z_ERRNO )		11221064	3					
ANR	11221287	Condition	ret == Z_ERRNO	594:12:22440:22453	11221064	0	True				
ANR	11221288	EqualityExpression	ret == Z_ERRNO		11221064	0		==			
ANR	11221289	Identifier	ret		11221064	0					
ANR	11221290	Identifier	Z_ERRNO		11221064	1					
ANR	11221291	ExpressionStatement	"fprintf ( stderr , ""gun warning: trailing garbage ignored in %s\\n"" , inname )"	595:12:22468:22560	11221064	1	True				
ANR	11221292	CallExpression	"fprintf ( stderr , ""gun warning: trailing garbage ignored in %s\\n"" , inname )"		11221064	0					
ANR	11221293	Callee	fprintf		11221064	0					
ANR	11221294	Identifier	fprintf		11221064	0					
ANR	11221295	ArgumentList	stderr		11221064	1					
ANR	11221296	Argument	stderr		11221064	0					
ANR	11221297	Identifier	stderr		11221064	0					
ANR	11221298	Argument	"""gun warning: trailing garbage ignored in %s\\n"""		11221064	1					
ANR	11221299	PrimaryExpression	"""gun warning: trailing garbage ignored in %s\\n"""		11221064	0					
ANR	11221300	Argument	inname		11221064	2					
ANR	11221301	Identifier	inname		11221064	0					
ANR	11221302	BreakStatement	break ;	597:8:22570:22575	11221064	4	True				
ANR	11221303	Label	case Z_DATA_ERROR :	598:4:22581:22598	11221064	5	True				
ANR	11221304	Identifier	Z_DATA_ERROR		11221064	0					
ANR	11221305	IfStatement	if ( outfile > 2 )		11221064	6					
ANR	11221306	Condition	outfile > 2	599:12:22612:22622	11221064	0	True				
ANR	11221307	RelationalExpression	outfile > 2		11221064	0		>			
ANR	11221308	Identifier	outfile		11221064	0					
ANR	11221309	PrimaryExpression	2		11221064	1					
ANR	11221310	ExpressionStatement	unlink ( outname )	599:25:22625:22640	11221064	1	True				
ANR	11221311	CallExpression	unlink ( outname )		11221064	0					
ANR	11221312	Callee	unlink		11221064	0					
ANR	11221313	Identifier	unlink		11221064	0					
ANR	11221314	ArgumentList	outname		11221064	1					
ANR	11221315	Argument	outname		11221064	0					
ANR	11221316	Identifier	outname		11221064	0					
ANR	11221317	ExpressionStatement	"fprintf ( stderr , ""gun data error on %s: %s\\n"" , inname , strm -> msg )"	600:8:22650:22714	11221064	7	True				
ANR	11221318	CallExpression	"fprintf ( stderr , ""gun data error on %s: %s\\n"" , inname , strm -> msg )"		11221064	0					
ANR	11221319	Callee	fprintf		11221064	0					
ANR	11221320	Identifier	fprintf		11221064	0					
ANR	11221321	ArgumentList	stderr		11221064	1					
ANR	11221322	Argument	stderr		11221064	0					
ANR	11221323	Identifier	stderr		11221064	0					
ANR	11221324	Argument	"""gun data error on %s: %s\\n"""		11221064	1					
ANR	11221325	PrimaryExpression	"""gun data error on %s: %s\\n"""		11221064	0					
ANR	11221326	Argument	inname		11221064	2					
ANR	11221327	Identifier	inname		11221064	0					
ANR	11221328	Argument	strm -> msg		11221064	3					
ANR	11221329	PtrMemberAccess	strm -> msg		11221064	0					
ANR	11221330	Identifier	strm		11221064	0					
ANR	11221331	Identifier	msg		11221064	1					
ANR	11221332	BreakStatement	break ;	601:8:22724:22729	11221064	8	True				
ANR	11221333	Label	case Z_MEM_ERROR :	602:4:22735:22751	11221064	9	True				
ANR	11221334	Identifier	Z_MEM_ERROR		11221064	0					
ANR	11221335	IfStatement	if ( outfile > 2 )		11221064	10					
ANR	11221336	Condition	outfile > 2	603:12:22765:22775	11221064	0	True				
ANR	11221337	RelationalExpression	outfile > 2		11221064	0		>			
ANR	11221338	Identifier	outfile		11221064	0					
ANR	11221339	PrimaryExpression	2		11221064	1					
ANR	11221340	ExpressionStatement	unlink ( outname )	603:25:22778:22793	11221064	1	True				
ANR	11221341	CallExpression	unlink ( outname )		11221064	0					
ANR	11221342	Callee	unlink		11221064	0					
ANR	11221343	Identifier	unlink		11221064	0					
ANR	11221344	ArgumentList	outname		11221064	1					
ANR	11221345	Argument	outname		11221064	0					
ANR	11221346	Identifier	outname		11221064	0					
ANR	11221347	ExpressionStatement	"fprintf ( stderr , ""gun out of memory error--aborting\\n"" )"	604:8:22803:22857	11221064	11	True				
ANR	11221348	CallExpression	"fprintf ( stderr , ""gun out of memory error--aborting\\n"" )"		11221064	0					
ANR	11221349	Callee	fprintf		11221064	0					
ANR	11221350	Identifier	fprintf		11221064	0					
ANR	11221351	ArgumentList	stderr		11221064	1					
ANR	11221352	Argument	stderr		11221064	0					
ANR	11221353	Identifier	stderr		11221064	0					
ANR	11221354	Argument	"""gun out of memory error--aborting\\n"""		11221064	1					
ANR	11221355	PrimaryExpression	"""gun out of memory error--aborting\\n"""		11221064	0					
ANR	11221356	ReturnStatement	return 1 ;	605:8:22867:22875	11221064	12	True				
ANR	11221357	PrimaryExpression	1		11221064	0					
ANR	11221358	Label	case Z_BUF_ERROR :	606:4:22881:22897	11221064	13	True				
ANR	11221359	Identifier	Z_BUF_ERROR		11221064	0					
ANR	11221360	IfStatement	if ( outfile > 2 )		11221064	14					
ANR	11221361	Condition	outfile > 2	607:12:22911:22921	11221064	0	True				
ANR	11221362	RelationalExpression	outfile > 2		11221064	0		>			
ANR	11221363	Identifier	outfile		11221064	0					
ANR	11221364	PrimaryExpression	2		11221064	1					
ANR	11221365	ExpressionStatement	unlink ( outname )	607:25:22924:22939	11221064	1	True				
ANR	11221366	CallExpression	unlink ( outname )		11221064	0					
ANR	11221367	Callee	unlink		11221064	0					
ANR	11221368	Identifier	unlink		11221064	0					
ANR	11221369	ArgumentList	outname		11221064	1					
ANR	11221370	Argument	outname		11221064	0					
ANR	11221371	Identifier	outname		11221064	0					
ANR	11221372	IfStatement	if ( strm -> next_in != Z_NULL )		11221064	15					
ANR	11221373	Condition	strm -> next_in != Z_NULL	608:12:22953:22975	11221064	0	True				
ANR	11221374	EqualityExpression	strm -> next_in != Z_NULL		11221064	0		!=			
ANR	11221375	PtrMemberAccess	strm -> next_in		11221064	0					
ANR	11221376	Identifier	strm		11221064	0					
ANR	11221377	Identifier	next_in		11221064	1					
ANR	11221378	Identifier	Z_NULL		11221064	1					
ANR	11221379	CompoundStatement		60:37:1668:1668	11221064	1					
ANR	11221380	ExpressionStatement	"fprintf ( stderr , ""gun write error on %s: %s\\n"" , outname , strerror ( errno ) )"	609:12:22992:23084	11221064	0	True				
ANR	11221381	CallExpression	"fprintf ( stderr , ""gun write error on %s: %s\\n"" , outname , strerror ( errno ) )"		11221064	0					
ANR	11221382	Callee	fprintf		11221064	0					
ANR	11221383	Identifier	fprintf		11221064	0					
ANR	11221384	ArgumentList	stderr		11221064	1					
ANR	11221385	Argument	stderr		11221064	0					
ANR	11221386	Identifier	stderr		11221064	0					
ANR	11221387	Argument	"""gun write error on %s: %s\\n"""		11221064	1					
ANR	11221388	PrimaryExpression	"""gun write error on %s: %s\\n"""		11221064	0					
ANR	11221389	Argument	outname		11221064	2					
ANR	11221390	Identifier	outname		11221064	0					
ANR	11221391	Argument	strerror ( errno )		11221064	3					
ANR	11221392	CallExpression	strerror ( errno )		11221064	0					
ANR	11221393	Callee	strerror		11221064	0					
ANR	11221394	Identifier	strerror		11221064	0					
ANR	11221395	ArgumentList	errno		11221064	1					
ANR	11221396	Argument	errno		11221064	0					
ANR	11221397	Identifier	errno		11221064	0					
ANR	11221398	ElseStatement	else		11221064	0					
ANR	11221399	IfStatement	if ( errno )		11221064	0					
ANR	11221400	Condition	errno	612:17:23113:23117	11221064	0	True				
ANR	11221401	Identifier	errno		11221064	0					
ANR	11221402	CompoundStatement		64:24:1810:1810	11221064	1					
ANR	11221403	ExpressionStatement	"fprintf ( stderr , ""gun read error on %s: %s\\n"" , inname , strerror ( errno ) )"	613:12:23134:23224	11221064	0	True				
ANR	11221404	CallExpression	"fprintf ( stderr , ""gun read error on %s: %s\\n"" , inname , strerror ( errno ) )"		11221064	0					
ANR	11221405	Callee	fprintf		11221064	0					
ANR	11221406	Identifier	fprintf		11221064	0					
ANR	11221407	ArgumentList	stderr		11221064	1					
ANR	11221408	Argument	stderr		11221064	0					
ANR	11221409	Identifier	stderr		11221064	0					
ANR	11221410	Argument	"""gun read error on %s: %s\\n"""		11221064	1					
ANR	11221411	PrimaryExpression	"""gun read error on %s: %s\\n"""		11221064	0					
ANR	11221412	Argument	inname		11221064	2					
ANR	11221413	Identifier	inname		11221064	0					
ANR	11221414	Argument	strerror ( errno )		11221064	3					
ANR	11221415	CallExpression	strerror ( errno )		11221064	0					
ANR	11221416	Callee	strerror		11221064	0					
ANR	11221417	Identifier	strerror		11221064	0					
ANR	11221418	ArgumentList	errno		11221064	1					
ANR	11221419	Argument	errno		11221064	0					
ANR	11221420	Identifier	errno		11221064	0					
ANR	11221421	ElseStatement	else		11221064	0					
ANR	11221422	CompoundStatement		68:13:1939:1939	11221064	0					
ANR	11221423	ExpressionStatement	"fprintf ( stderr , ""gun unexpected end of file on %s\\n"" , inname )"	617:12:23263:23344	11221064	0	True				
ANR	11221424	CallExpression	"fprintf ( stderr , ""gun unexpected end of file on %s\\n"" , inname )"		11221064	0					
ANR	11221425	Callee	fprintf		11221064	0					
ANR	11221426	Identifier	fprintf		11221064	0					
ANR	11221427	ArgumentList	stderr		11221064	1					
ANR	11221428	Argument	stderr		11221064	0					
ANR	11221429	Identifier	stderr		11221064	0					
ANR	11221430	Argument	"""gun unexpected end of file on %s\\n"""		11221064	1					
ANR	11221431	PrimaryExpression	"""gun unexpected end of file on %s\\n"""		11221064	0					
ANR	11221432	Argument	inname		11221064	2					
ANR	11221433	Identifier	inname		11221064	0					
ANR	11221434	BreakStatement	break ;	620:8:23364:23369	11221064	16	True				
ANR	11221435	Label	default :	621:4:23375:23382	11221064	17	True				
ANR	11221436	Identifier	default		11221064	0					
ANR	11221437	IfStatement	if ( outfile > 2 )		11221064	18					
ANR	11221438	Condition	outfile > 2	622:12:23396:23406	11221064	0	True				
ANR	11221439	RelationalExpression	outfile > 2		11221064	0		>			
ANR	11221440	Identifier	outfile		11221064	0					
ANR	11221441	PrimaryExpression	2		11221064	1					
ANR	11221442	ExpressionStatement	unlink ( outname )	622:25:23409:23424	11221064	1	True				
ANR	11221443	CallExpression	unlink ( outname )		11221064	0					
ANR	11221444	Callee	unlink		11221064	0					
ANR	11221445	Identifier	unlink		11221064	0					
ANR	11221446	ArgumentList	outname		11221064	1					
ANR	11221447	Argument	outname		11221064	0					
ANR	11221448	Identifier	outname		11221064	0					
ANR	11221449	ExpressionStatement	"fprintf ( stderr , ""gun internal error--aborting\\n"" )"	623:8:23434:23483	11221064	19	True				
ANR	11221450	CallExpression	"fprintf ( stderr , ""gun internal error--aborting\\n"" )"		11221064	0					
ANR	11221451	Callee	fprintf		11221064	0					
ANR	11221452	Identifier	fprintf		11221064	0					
ANR	11221453	ArgumentList	stderr		11221064	1					
ANR	11221454	Argument	stderr		11221064	0					
ANR	11221455	Identifier	stderr		11221064	0					
ANR	11221456	Argument	"""gun internal error--aborting\\n"""		11221064	1					
ANR	11221457	PrimaryExpression	"""gun internal error--aborting\\n"""		11221064	0					
ANR	11221458	ReturnStatement	return 1 ;	624:8:23493:23501	11221064	20	True				
ANR	11221459	PrimaryExpression	1		11221064	0					
ANR	11221460	ReturnStatement	return 0 ;	626:4:23513:23521	11221064	9	True				
ANR	11221461	PrimaryExpression	0		11221064	0					
ANR	11221462	ReturnType	local int		11221064	1					
ANR	11221463	Identifier	gunzip		11221064	2					
ANR	11221464	ParameterList	"z_stream * strm , char * inname , char * outname , int test"		11221064	3					
ANR	11221465	Parameter	z_stream * strm	548:17:21254:21267	11221064	0	True				
ANR	11221466	ParameterType	z_stream *		11221064	0					
ANR	11221467	Identifier	strm		11221064	1					
ANR	11221468	Parameter	char * inname	548:33:21270:21281	11221064	1	True				
ANR	11221469	ParameterType	char *		11221064	0					
ANR	11221470	Identifier	inname		11221064	1					
ANR	11221471	Parameter	char * outname	548:47:21284:21296	11221064	2	True				
ANR	11221472	ParameterType	char *		11221064	0					
ANR	11221473	Identifier	outname		11221064	1					
ANR	11221474	Parameter	int test	548:62:21299:21306	11221064	3	True				
ANR	11221475	ParameterType	int		11221064	0					
ANR	11221476	Identifier	test		11221064	1					
ANR	11221477	CFGEntryNode	ENTRY		11221064		True				
ANR	11221478	CFGExitNode	EXIT		11221064		True				
ANR	11221479	Symbol	ret		11221064						
ANR	11221480	Symbol	* inname		11221064						
ANR	11221481	Symbol	Z_ERRNO		11221064						
ANR	11221482	Symbol	errno		11221064						
ANR	11221483	Symbol	NULL		11221064						
ANR	11221484	Symbol	test		11221064						
ANR	11221485	Symbol	gunpipe		11221064						
ANR	11221486	Symbol	O_CREAT		11221064						
ANR	11221487	Symbol	outfile		11221064						
ANR	11221488	Symbol	outname		11221064						
ANR	11221489	Symbol	strm		11221064						
ANR	11221490	Symbol	infile		11221064						
ANR	11221491	Symbol	stderr		11221064						
ANR	11221492	Symbol	strerror		11221064						
ANR	11221493	Symbol	O_TRUNC		11221064						
ANR	11221494	Symbol	O_RDONLY		11221064						
ANR	11221495	Symbol	* outname		11221064						
ANR	11221496	Symbol	* strm		11221064						
ANR	11221497	Symbol	strm -> next_in		11221064						
ANR	11221498	Symbol	O_WRONLY		11221064						
ANR	11221499	Symbol	inname		11221064						
ANR	11221500	Symbol	open		11221064						
ANR	11221501	Symbol	strm -> msg		11221064						
ANR	11221502	Symbol	Z_NULL		11221064						
ANR	11221503	Function	main	631:0:23639:25941							
ANR	11221504	FunctionDef	"main (int argc , char * * argv)"		11221503	0					
ANR	11221505	CompoundStatement		632:0:23671:25941	11221503	0					
ANR	11221506	IdentifierDeclStatement	"int ret , len , test ;"	633:4:23677:23695	11221503	0	True				
ANR	11221507	IdentifierDecl	ret		11221503	0					
ANR	11221508	IdentifierDeclType	int		11221503	0					
ANR	11221509	Identifier	ret		11221503	1					
ANR	11221510	IdentifierDecl	len		11221503	1					
ANR	11221511	IdentifierDeclType	int		11221503	0					
ANR	11221512	Identifier	len		11221503	1					
ANR	11221513	IdentifierDecl	test		11221503	2					
ANR	11221514	IdentifierDeclType	int		11221503	0					
ANR	11221515	Identifier	test		11221503	1					
ANR	11221516	IdentifierDeclStatement	char * outname ;	634:4:23701:23714	11221503	1	True				
ANR	11221517	IdentifierDecl	* outname		11221503	0					
ANR	11221518	IdentifierDeclType	char *		11221503	0					
ANR	11221519	Identifier	outname		11221503	1					
ANR	11221520	IdentifierDeclStatement	unsigned char * window ;	635:4:23720:23741	11221503	2	True				
ANR	11221521	IdentifierDecl	* window		11221503	0					
ANR	11221522	IdentifierDeclType	unsigned char *		11221503	0					
ANR	11221523	Identifier	window		11221503	1					
ANR	11221524	IdentifierDeclStatement	z_stream strm ;	636:4:23747:23760	11221503	3	True				
ANR	11221525	IdentifierDecl	strm		11221503	0					
ANR	11221526	IdentifierDeclType	z_stream		11221503	0					
ANR	11221527	Identifier	strm		11221503	1					
ANR	11221528	ExpressionStatement	window = match	639:4:23823:23837	11221503	4	True				
ANR	11221529	AssignmentExpression	window = match		11221503	0		=			
ANR	11221530	Identifier	window		11221503	0					
ANR	11221531	Identifier	match		11221503	1					
ANR	11221532	ExpressionStatement	strm . zalloc = Z_NULL	640:4:23896:23916	11221503	5	True				
ANR	11221533	AssignmentExpression	strm . zalloc = Z_NULL		11221503	0		=			
ANR	11221534	MemberAccess	strm . zalloc		11221503	0					
ANR	11221535	Identifier	strm		11221503	0					
ANR	11221536	Identifier	zalloc		11221503	1					
ANR	11221537	Identifier	Z_NULL		11221503	1					
ANR	11221538	ExpressionStatement	strm . zfree = Z_NULL	641:4:23922:23941	11221503	6	True				
ANR	11221539	AssignmentExpression	strm . zfree = Z_NULL		11221503	0		=			
ANR	11221540	MemberAccess	strm . zfree		11221503	0					
ANR	11221541	Identifier	strm		11221503	0					
ANR	11221542	Identifier	zfree		11221503	1					
ANR	11221543	Identifier	Z_NULL		11221503	1					
ANR	11221544	ExpressionStatement	strm . opaque = Z_NULL	642:4:23947:23967	11221503	7	True				
ANR	11221545	AssignmentExpression	strm . opaque = Z_NULL		11221503	0		=			
ANR	11221546	MemberAccess	strm . opaque		11221503	0					
ANR	11221547	Identifier	strm		11221503	0					
ANR	11221548	Identifier	opaque		11221503	1					
ANR	11221549	Identifier	Z_NULL		11221503	1					
ANR	11221550	ExpressionStatement	"ret = inflateBackInit ( & strm , 15 , window )"	643:4:23973:24013	11221503	8	True				
ANR	11221551	AssignmentExpression	"ret = inflateBackInit ( & strm , 15 , window )"		11221503	0		=			
ANR	11221552	Identifier	ret		11221503	0					
ANR	11221553	CallExpression	"inflateBackInit ( & strm , 15 , window )"		11221503	1					
ANR	11221554	Callee	inflateBackInit		11221503	0					
ANR	11221555	Identifier	inflateBackInit		11221503	0					
ANR	11221556	ArgumentList	& strm		11221503	1					
ANR	11221557	Argument	& strm		11221503	0					
ANR	11221558	UnaryOperationExpression	& strm		11221503	0					
ANR	11221559	UnaryOperator	&		11221503	0					
ANR	11221560	Identifier	strm		11221503	1					
ANR	11221561	Argument	15		11221503	1					
ANR	11221562	PrimaryExpression	15		11221503	0					
ANR	11221563	Argument	window		11221503	2					
ANR	11221564	Identifier	window		11221503	0					
ANR	11221565	IfStatement	if ( ret != Z_OK )		11221503	9					
ANR	11221566	Condition	ret != Z_OK	644:8:24023:24033	11221503	0	True				
ANR	11221567	EqualityExpression	ret != Z_OK		11221503	0		!=			
ANR	11221568	Identifier	ret		11221503	0					
ANR	11221569	Identifier	Z_OK		11221503	1					
ANR	11221570	CompoundStatement		13:21:364:364	11221503	1					
ANR	11221571	ExpressionStatement	"fprintf ( stderr , ""gun out of memory error--aborting\\n"" )"	645:8:24046:24100	11221503	0	True				
ANR	11221572	CallExpression	"fprintf ( stderr , ""gun out of memory error--aborting\\n"" )"		11221503	0					
ANR	11221573	Callee	fprintf		11221503	0					
ANR	11221574	Identifier	fprintf		11221503	0					
ANR	11221575	ArgumentList	stderr		11221503	1					
ANR	11221576	Argument	stderr		11221503	0					
ANR	11221577	Identifier	stderr		11221503	0					
ANR	11221578	Argument	"""gun out of memory error--aborting\\n"""		11221503	1					
ANR	11221579	PrimaryExpression	"""gun out of memory error--aborting\\n"""		11221503	0					
ANR	11221580	ReturnStatement	return 1 ;	646:8:24110:24118	11221503	1	True				
ANR	11221581	PrimaryExpression	1		11221503	0					
ANR	11221582	ExpressionStatement	argc --	650:4:24203:24209	11221503	10	True				
ANR	11221583	PostIncDecOperationExpression	argc --		11221503	0					
ANR	11221584	Identifier	argc		11221503	0					
ANR	11221585	IncDec	--		11221503	1					
ANR	11221586	ExpressionStatement	argv ++	651:4:24215:24221	11221503	11	True				
ANR	11221587	PostIncDecOperationExpression	argv ++		11221503	0					
ANR	11221588	Identifier	argv		11221503	0					
ANR	11221589	IncDec	++		11221503	1					
ANR	11221590	ExpressionStatement	test = 0	652:4:24227:24235	11221503	12	True				
ANR	11221591	AssignmentExpression	test = 0		11221503	0		=			
ANR	11221592	Identifier	test		11221503	0					
ANR	11221593	PrimaryExpression	0		11221503	1					
ANR	11221594	IfStatement	"if ( argc && strcmp ( * argv , ""-h"" ) == 0 )"		11221503	13					
ANR	11221595	Condition	"argc && strcmp ( * argv , ""-h"" ) == 0"	653:8:24245:24276	11221503	0	True				
ANR	11221596	AndExpression	"argc && strcmp ( * argv , ""-h"" ) == 0"		11221503	0		&&			
ANR	11221597	Identifier	argc		11221503	0					
ANR	11221598	EqualityExpression	"strcmp ( * argv , ""-h"" ) == 0"		11221503	1		==			
ANR	11221599	CallExpression	"strcmp ( * argv , ""-h"" )"		11221503	0					
ANR	11221600	Callee	strcmp		11221503	0					
ANR	11221601	Identifier	strcmp		11221503	0					
ANR	11221602	ArgumentList	* argv		11221503	1					
ANR	11221603	Argument	* argv		11221503	0					
ANR	11221604	UnaryOperationExpression	* argv		11221503	0					
ANR	11221605	UnaryOperator	*		11221503	0					
ANR	11221606	Identifier	argv		11221503	1					
ANR	11221607	Argument	"""-h"""		11221503	1					
ANR	11221608	PrimaryExpression	"""-h"""		11221503	0					
ANR	11221609	PrimaryExpression	0		11221503	1					
ANR	11221610	CompoundStatement		22:42:607:607	11221503	1					
ANR	11221611	ExpressionStatement	"fprintf ( stderr , ""gun 1.6 (17 Jan 2010)\\n"" )"	654:8:24289:24331	11221503	0	True				
ANR	11221612	CallExpression	"fprintf ( stderr , ""gun 1.6 (17 Jan 2010)\\n"" )"		11221503	0					
ANR	11221613	Callee	fprintf		11221503	0					
ANR	11221614	Identifier	fprintf		11221503	0					
ANR	11221615	ArgumentList	stderr		11221503	1					
ANR	11221616	Argument	stderr		11221503	0					
ANR	11221617	Identifier	stderr		11221503	0					
ANR	11221618	Argument	"""gun 1.6 (17 Jan 2010)\\n"""		11221503	1					
ANR	11221619	PrimaryExpression	"""gun 1.6 (17 Jan 2010)\\n"""		11221503	0					
ANR	11221620	ExpressionStatement	"fprintf ( stderr , ""Copyright (C) 2003-2010 Mark Adler\\n"" )"	655:8:24341:24396	11221503	1	True				
ANR	11221621	CallExpression	"fprintf ( stderr , ""Copyright (C) 2003-2010 Mark Adler\\n"" )"		11221503	0					
ANR	11221622	Callee	fprintf		11221503	0					
ANR	11221623	Identifier	fprintf		11221503	0					
ANR	11221624	ArgumentList	stderr		11221503	1					
ANR	11221625	Argument	stderr		11221503	0					
ANR	11221626	Identifier	stderr		11221503	0					
ANR	11221627	Argument	"""Copyright (C) 2003-2010 Mark Adler\\n"""		11221503	1					
ANR	11221628	PrimaryExpression	"""Copyright (C) 2003-2010 Mark Adler\\n"""		11221503	0					
ANR	11221629	ExpressionStatement	"fprintf ( stderr , ""usage: gun [-t] [file1.gz [file2.Z ...]]\\n"" )"	656:8:24406:24467	11221503	2	True				
ANR	11221630	CallExpression	"fprintf ( stderr , ""usage: gun [-t] [file1.gz [file2.Z ...]]\\n"" )"		11221503	0					
ANR	11221631	Callee	fprintf		11221503	0					
ANR	11221632	Identifier	fprintf		11221503	0					
ANR	11221633	ArgumentList	stderr		11221503	1					
ANR	11221634	Argument	stderr		11221503	0					
ANR	11221635	Identifier	stderr		11221503	0					
ANR	11221636	Argument	"""usage: gun [-t] [file1.gz [file2.Z ...]]\\n"""		11221503	1					
ANR	11221637	PrimaryExpression	"""usage: gun [-t] [file1.gz [file2.Z ...]]\\n"""		11221503	0					
ANR	11221638	ReturnStatement	return 0 ;	657:8:24477:24485	11221503	3	True				
ANR	11221639	PrimaryExpression	0		11221503	0					
ANR	11221640	IfStatement	"if ( argc && strcmp ( * argv , ""-t"" ) == 0 )"		11221503	14					
ANR	11221641	Condition	"argc && strcmp ( * argv , ""-t"" ) == 0"	659:8:24501:24532	11221503	0	True				
ANR	11221642	AndExpression	"argc && strcmp ( * argv , ""-t"" ) == 0"		11221503	0		&&			
ANR	11221643	Identifier	argc		11221503	0					
ANR	11221644	EqualityExpression	"strcmp ( * argv , ""-t"" ) == 0"		11221503	1		==			
ANR	11221645	CallExpression	"strcmp ( * argv , ""-t"" )"		11221503	0					
ANR	11221646	Callee	strcmp		11221503	0					
ANR	11221647	Identifier	strcmp		11221503	0					
ANR	11221648	ArgumentList	* argv		11221503	1					
ANR	11221649	Argument	* argv		11221503	0					
ANR	11221650	UnaryOperationExpression	* argv		11221503	0					
ANR	11221651	UnaryOperator	*		11221503	0					
ANR	11221652	Identifier	argv		11221503	1					
ANR	11221653	Argument	"""-t"""		11221503	1					
ANR	11221654	PrimaryExpression	"""-t"""		11221503	0					
ANR	11221655	PrimaryExpression	0		11221503	1					
ANR	11221656	CompoundStatement		28:42:863:863	11221503	1					
ANR	11221657	ExpressionStatement	test = 1	660:8:24545:24553	11221503	0	True				
ANR	11221658	AssignmentExpression	test = 1		11221503	0		=			
ANR	11221659	Identifier	test		11221503	0					
ANR	11221660	PrimaryExpression	1		11221503	1					
ANR	11221661	ExpressionStatement	argc --	661:8:24563:24569	11221503	1	True				
ANR	11221662	PostIncDecOperationExpression	argc --		11221503	0					
ANR	11221663	Identifier	argc		11221503	0					
ANR	11221664	IncDec	--		11221503	1					
ANR	11221665	ExpressionStatement	argv ++	662:8:24579:24585	11221503	2	True				
ANR	11221666	PostIncDecOperationExpression	argv ++		11221503	0					
ANR	11221667	Identifier	argv		11221503	0					
ANR	11221668	IncDec	++		11221503	1					
ANR	11221669	IfStatement	if ( argc )		11221503	15					
ANR	11221670	Condition	argc	664:8:24601:24604	11221503	0	True				
ANR	11221671	Identifier	argc		11221503	0					
ANR	11221672	DoStatement	do		11221503	1					
ANR	11221673	CompoundStatement		34:11:946:946	11221503	0					
ANR	11221674	IfStatement	if ( test )		11221503	0					
ANR	11221675	Condition	test	666:16:24636:24639	11221503	0	True				
ANR	11221676	Identifier	test		11221503	0					
ANR	11221677	ExpressionStatement	outname = NULL	667:16:24658:24672	11221503	1	True				
ANR	11221678	AssignmentExpression	outname = NULL		11221503	0		=			
ANR	11221679	Identifier	outname		11221503	0					
ANR	11221680	Identifier	NULL		11221503	1					
ANR	11221681	ElseStatement	else		11221503	0					
ANR	11221682	CompoundStatement		37:17:1019:1019	11221503	0					
ANR	11221683	ExpressionStatement	len = ( int ) strlen ( * argv )	669:16:24709:24733	11221503	0	True				
ANR	11221684	AssignmentExpression	len = ( int ) strlen ( * argv )		11221503	0		=			
ANR	11221685	Identifier	len		11221503	0					
ANR	11221686	CastExpression	( int ) strlen ( * argv )		11221503	1					
ANR	11221687	CastTarget	int		11221503	0					
ANR	11221688	CallExpression	strlen ( * argv )		11221503	1					
ANR	11221689	Callee	strlen		11221503	0					
ANR	11221690	Identifier	strlen		11221503	0					
ANR	11221691	ArgumentList	* argv		11221503	1					
ANR	11221692	Argument	* argv		11221503	0					
ANR	11221693	UnaryOperationExpression	* argv		11221503	0					
ANR	11221694	UnaryOperator	*		11221503	0					
ANR	11221695	Identifier	argv		11221503	1					
ANR	11221696	IfStatement	"if ( strcmp ( * argv + len - 3 , "".gz"" ) == 0 || strcmp ( * argv + len - 3 , ""-gz"" ) == 0 )"		11221503	1					
ANR	11221697	Condition	"strcmp ( * argv + len - 3 , "".gz"" ) == 0 || strcmp ( * argv + len - 3 , ""-gz"" ) == 0"	670:20:24755:24848	11221503	0	True				
ANR	11221698	OrExpression	"strcmp ( * argv + len - 3 , "".gz"" ) == 0 || strcmp ( * argv + len - 3 , ""-gz"" ) == 0"		11221503	0		||			
ANR	11221699	EqualityExpression	"strcmp ( * argv + len - 3 , "".gz"" ) == 0"		11221503	0		==			
ANR	11221700	CallExpression	"strcmp ( * argv + len - 3 , "".gz"" )"		11221503	0					
ANR	11221701	Callee	strcmp		11221503	0					
ANR	11221702	Identifier	strcmp		11221503	0					
ANR	11221703	ArgumentList	* argv + len - 3		11221503	1					
ANR	11221704	Argument	* argv + len - 3		11221503	0					
ANR	11221705	AdditiveExpression	* argv + len - 3		11221503	0		+			
ANR	11221706	UnaryOperationExpression	* argv		11221503	0					
ANR	11221707	UnaryOperator	*		11221503	0					
ANR	11221708	Identifier	argv		11221503	1					
ANR	11221709	AdditiveExpression	len - 3		11221503	1		-			
ANR	11221710	Identifier	len		11221503	0					
ANR	11221711	PrimaryExpression	3		11221503	1					
ANR	11221712	Argument	""".gz"""		11221503	1					
ANR	11221713	PrimaryExpression	""".gz"""		11221503	0					
ANR	11221714	PrimaryExpression	0		11221503	1					
ANR	11221715	EqualityExpression	"strcmp ( * argv + len - 3 , ""-gz"" ) == 0"		11221503	1		==			
ANR	11221716	CallExpression	"strcmp ( * argv + len - 3 , ""-gz"" )"		11221503	0					
ANR	11221717	Callee	strcmp		11221503	0					
ANR	11221718	Identifier	strcmp		11221503	0					
ANR	11221719	ArgumentList	* argv + len - 3		11221503	1					
ANR	11221720	Argument	* argv + len - 3		11221503	0					
ANR	11221721	AdditiveExpression	* argv + len - 3		11221503	0		+			
ANR	11221722	UnaryOperationExpression	* argv		11221503	0					
ANR	11221723	UnaryOperator	*		11221503	0					
ANR	11221724	Identifier	argv		11221503	1					
ANR	11221725	AdditiveExpression	len - 3		11221503	1		-			
ANR	11221726	Identifier	len		11221503	0					
ANR	11221727	PrimaryExpression	3		11221503	1					
ANR	11221728	Argument	"""-gz"""		11221503	1					
ANR	11221729	PrimaryExpression	"""-gz"""		11221503	0					
ANR	11221730	PrimaryExpression	0		11221503	1					
ANR	11221731	ExpressionStatement	len -= 3	672:20:24871:24879	11221503	1	True				
ANR	11221732	AssignmentExpression	len -= 3		11221503	0		-=			
ANR	11221733	Identifier	len		11221503	0					
ANR	11221734	PrimaryExpression	3		11221503	1					
ANR	11221735	ElseStatement	else		11221503	0					
ANR	11221736	IfStatement	"if ( strcmp ( * argv + len - 2 , "".z"" ) == 0 || strcmp ( * argv + len - 2 , ""-z"" ) == 0 || strcmp ( * argv + len - 2 , ""_z"" ) == 0 || strcmp ( * argv + len - 2 , "".Z"" ) == 0 )"		11221503	0					
ANR	11221737	Condition	"strcmp ( * argv + len - 2 , "".z"" ) == 0 || strcmp ( * argv + len - 2 , ""-z"" ) == 0 || strcmp ( * argv + len - 2 , ""_z"" ) == 0 || strcmp ( * argv + len - 2 , "".Z"" ) == 0"	673:25:24906:25113	11221503	0	True				
ANR	11221738	OrExpression	"strcmp ( * argv + len - 2 , "".z"" ) == 0 || strcmp ( * argv + len - 2 , ""-z"" ) == 0 || strcmp ( * argv + len - 2 , ""_z"" ) == 0 || strcmp ( * argv + len - 2 , "".Z"" ) == 0"		11221503	0		||			
ANR	11221739	EqualityExpression	"strcmp ( * argv + len - 2 , "".z"" ) == 0"		11221503	0		==			
ANR	11221740	CallExpression	"strcmp ( * argv + len - 2 , "".z"" )"		11221503	0					
ANR	11221741	Callee	strcmp		11221503	0					
ANR	11221742	Identifier	strcmp		11221503	0					
ANR	11221743	ArgumentList	* argv + len - 2		11221503	1					
ANR	11221744	Argument	* argv + len - 2		11221503	0					
ANR	11221745	AdditiveExpression	* argv + len - 2		11221503	0		+			
ANR	11221746	UnaryOperationExpression	* argv		11221503	0					
ANR	11221747	UnaryOperator	*		11221503	0					
ANR	11221748	Identifier	argv		11221503	1					
ANR	11221749	AdditiveExpression	len - 2		11221503	1		-			
ANR	11221750	Identifier	len		11221503	0					
ANR	11221751	PrimaryExpression	2		11221503	1					
ANR	11221752	Argument	""".z"""		11221503	1					
ANR	11221753	PrimaryExpression	""".z"""		11221503	0					
ANR	11221754	PrimaryExpression	0		11221503	1					
ANR	11221755	OrExpression	"strcmp ( * argv + len - 2 , ""-z"" ) == 0 || strcmp ( * argv + len - 2 , ""_z"" ) == 0 || strcmp ( * argv + len - 2 , "".Z"" ) == 0"		11221503	1		||			
ANR	11221756	EqualityExpression	"strcmp ( * argv + len - 2 , ""-z"" ) == 0"		11221503	0		==			
ANR	11221757	CallExpression	"strcmp ( * argv + len - 2 , ""-z"" )"		11221503	0					
ANR	11221758	Callee	strcmp		11221503	0					
ANR	11221759	Identifier	strcmp		11221503	0					
ANR	11221760	ArgumentList	* argv + len - 2		11221503	1					
ANR	11221761	Argument	* argv + len - 2		11221503	0					
ANR	11221762	AdditiveExpression	* argv + len - 2		11221503	0		+			
ANR	11221763	UnaryOperationExpression	* argv		11221503	0					
ANR	11221764	UnaryOperator	*		11221503	0					
ANR	11221765	Identifier	argv		11221503	1					
ANR	11221766	AdditiveExpression	len - 2		11221503	1		-			
ANR	11221767	Identifier	len		11221503	0					
ANR	11221768	PrimaryExpression	2		11221503	1					
ANR	11221769	Argument	"""-z"""		11221503	1					
ANR	11221770	PrimaryExpression	"""-z"""		11221503	0					
ANR	11221771	PrimaryExpression	0		11221503	1					
ANR	11221772	OrExpression	"strcmp ( * argv + len - 2 , ""_z"" ) == 0 || strcmp ( * argv + len - 2 , "".Z"" ) == 0"		11221503	1		||			
ANR	11221773	EqualityExpression	"strcmp ( * argv + len - 2 , ""_z"" ) == 0"		11221503	0		==			
ANR	11221774	CallExpression	"strcmp ( * argv + len - 2 , ""_z"" )"		11221503	0					
ANR	11221775	Callee	strcmp		11221503	0					
ANR	11221776	Identifier	strcmp		11221503	0					
ANR	11221777	ArgumentList	* argv + len - 2		11221503	1					
ANR	11221778	Argument	* argv + len - 2		11221503	0					
ANR	11221779	AdditiveExpression	* argv + len - 2		11221503	0		+			
ANR	11221780	UnaryOperationExpression	* argv		11221503	0					
ANR	11221781	UnaryOperator	*		11221503	0					
ANR	11221782	Identifier	argv		11221503	1					
ANR	11221783	AdditiveExpression	len - 2		11221503	1		-			
ANR	11221784	Identifier	len		11221503	0					
ANR	11221785	PrimaryExpression	2		11221503	1					
ANR	11221786	Argument	"""_z"""		11221503	1					
ANR	11221787	PrimaryExpression	"""_z"""		11221503	0					
ANR	11221788	PrimaryExpression	0		11221503	1					
ANR	11221789	EqualityExpression	"strcmp ( * argv + len - 2 , "".Z"" ) == 0"		11221503	1		==			
ANR	11221790	CallExpression	"strcmp ( * argv + len - 2 , "".Z"" )"		11221503	0					
ANR	11221791	Callee	strcmp		11221503	0					
ANR	11221792	Identifier	strcmp		11221503	0					
ANR	11221793	ArgumentList	* argv + len - 2		11221503	1					
ANR	11221794	Argument	* argv + len - 2		11221503	0					
ANR	11221795	AdditiveExpression	* argv + len - 2		11221503	0		+			
ANR	11221796	UnaryOperationExpression	* argv		11221503	0					
ANR	11221797	UnaryOperator	*		11221503	0					
ANR	11221798	Identifier	argv		11221503	1					
ANR	11221799	AdditiveExpression	len - 2		11221503	1		-			
ANR	11221800	Identifier	len		11221503	0					
ANR	11221801	PrimaryExpression	2		11221503	1					
ANR	11221802	Argument	""".Z"""		11221503	1					
ANR	11221803	PrimaryExpression	""".Z"""		11221503	0					
ANR	11221804	PrimaryExpression	0		11221503	1					
ANR	11221805	ExpressionStatement	len -= 2	677:20:25136:25144	11221503	1	True				
ANR	11221806	AssignmentExpression	len -= 2		11221503	0		-=			
ANR	11221807	Identifier	len		11221503	0					
ANR	11221808	PrimaryExpression	2		11221503	1					
ANR	11221809	ElseStatement	else		11221503	0					
ANR	11221810	CompoundStatement		47:21:1495:1495	11221503	0					
ANR	11221811	ExpressionStatement	"fprintf ( stderr , ""gun error: no gz type on %s--skipping\\n"" , * argv )"	679:20:25189:25282	11221503	0	True				
ANR	11221812	CallExpression	"fprintf ( stderr , ""gun error: no gz type on %s--skipping\\n"" , * argv )"		11221503	0					
ANR	11221813	Callee	fprintf		11221503	0					
ANR	11221814	Identifier	fprintf		11221503	0					
ANR	11221815	ArgumentList	stderr		11221503	1					
ANR	11221816	Argument	stderr		11221503	0					
ANR	11221817	Identifier	stderr		11221503	0					
ANR	11221818	Argument	"""gun error: no gz type on %s--skipping\\n"""		11221503	1					
ANR	11221819	PrimaryExpression	"""gun error: no gz type on %s--skipping\\n"""		11221503	0					
ANR	11221820	Argument	* argv		11221503	2					
ANR	11221821	UnaryOperationExpression	* argv		11221503	0					
ANR	11221822	UnaryOperator	*		11221503	0					
ANR	11221823	Identifier	argv		11221503	1					
ANR	11221824	ContinueStatement	continue ;	681:20:25304:25312	11221503	1	True				
ANR	11221825	ExpressionStatement	outname = malloc ( len + 1 )	683:16:25348:25373	11221503	2	True				
ANR	11221826	AssignmentExpression	outname = malloc ( len + 1 )		11221503	0		=			
ANR	11221827	Identifier	outname		11221503	0					
ANR	11221828	CallExpression	malloc ( len + 1 )		11221503	1					
ANR	11221829	Callee	malloc		11221503	0					
ANR	11221830	Identifier	malloc		11221503	0					
ANR	11221831	ArgumentList	len + 1		11221503	1					
ANR	11221832	Argument	len + 1		11221503	0					
ANR	11221833	AdditiveExpression	len + 1		11221503	0		+			
ANR	11221834	Identifier	len		11221503	0					
ANR	11221835	PrimaryExpression	1		11221503	1					
ANR	11221836	IfStatement	if ( outname == NULL )		11221503	3					
ANR	11221837	Condition	outname == NULL	684:20:25395:25409	11221503	0	True				
ANR	11221838	EqualityExpression	outname == NULL		11221503	0		==			
ANR	11221839	Identifier	outname		11221503	0					
ANR	11221840	Identifier	NULL		11221503	1					
ANR	11221841	CompoundStatement		53:37:1740:1740	11221503	1					
ANR	11221842	ExpressionStatement	"fprintf ( stderr , ""gun out of memory error--aborting\\n"" )"	685:20:25434:25488	11221503	0	True				
ANR	11221843	CallExpression	"fprintf ( stderr , ""gun out of memory error--aborting\\n"" )"		11221503	0					
ANR	11221844	Callee	fprintf		11221503	0					
ANR	11221845	Identifier	fprintf		11221503	0					
ANR	11221846	ArgumentList	stderr		11221503	1					
ANR	11221847	Argument	stderr		11221503	0					
ANR	11221848	Identifier	stderr		11221503	0					
ANR	11221849	Argument	"""gun out of memory error--aborting\\n"""		11221503	1					
ANR	11221850	PrimaryExpression	"""gun out of memory error--aborting\\n"""		11221503	0					
ANR	11221851	ExpressionStatement	ret = 1	686:20:25510:25517	11221503	1	True				
ANR	11221852	AssignmentExpression	ret = 1		11221503	0		=			
ANR	11221853	Identifier	ret		11221503	0					
ANR	11221854	PrimaryExpression	1		11221503	1					
ANR	11221855	BreakStatement	break ;	687:20:25539:25544	11221503	2	True				
ANR	11221856	ExpressionStatement	"memcpy ( outname , * argv , len )"	689:16:25580:25607	11221503	4	True				
ANR	11221857	CallExpression	"memcpy ( outname , * argv , len )"		11221503	0					
ANR	11221858	Callee	memcpy		11221503	0					
ANR	11221859	Identifier	memcpy		11221503	0					
ANR	11221860	ArgumentList	outname		11221503	1					
ANR	11221861	Argument	outname		11221503	0					
ANR	11221862	Identifier	outname		11221503	0					
ANR	11221863	Argument	* argv		11221503	1					
ANR	11221864	UnaryOperationExpression	* argv		11221503	0					
ANR	11221865	UnaryOperator	*		11221503	0					
ANR	11221866	Identifier	argv		11221503	1					
ANR	11221867	Argument	len		11221503	2					
ANR	11221868	Identifier	len		11221503	0					
ANR	11221869	ExpressionStatement	outname [ len ] = 0	690:16:25625:25641	11221503	5	True				
ANR	11221870	AssignmentExpression	outname [ len ] = 0		11221503	0		=			
ANR	11221871	ArrayIndexing	outname [ len ]		11221503	0					
ANR	11221872	Identifier	outname		11221503	0					
ANR	11221873	Identifier	len		11221503	1					
ANR	11221874	PrimaryExpression	0		11221503	1					
ANR	11221875	ExpressionStatement	"ret = gunzip ( & strm , * argv , outname , test )"	692:12:25669:25710	11221503	1	True				
ANR	11221876	AssignmentExpression	"ret = gunzip ( & strm , * argv , outname , test )"		11221503	0		=			
ANR	11221877	Identifier	ret		11221503	0					
ANR	11221878	CallExpression	"gunzip ( & strm , * argv , outname , test )"		11221503	1					
ANR	11221879	Callee	gunzip		11221503	0					
ANR	11221880	Identifier	gunzip		11221503	0					
ANR	11221881	ArgumentList	& strm		11221503	1					
ANR	11221882	Argument	& strm		11221503	0					
ANR	11221883	UnaryOperationExpression	& strm		11221503	0					
ANR	11221884	UnaryOperator	&		11221503	0					
ANR	11221885	Identifier	strm		11221503	1					
ANR	11221886	Argument	* argv		11221503	1					
ANR	11221887	UnaryOperationExpression	* argv		11221503	0					
ANR	11221888	UnaryOperator	*		11221503	0					
ANR	11221889	Identifier	argv		11221503	1					
ANR	11221890	Argument	outname		11221503	2					
ANR	11221891	Identifier	outname		11221503	0					
ANR	11221892	Argument	test		11221503	3					
ANR	11221893	Identifier	test		11221503	0					
ANR	11221894	IfStatement	if ( outname != NULL )		11221503	2					
ANR	11221895	Condition	outname != NULL	693:16:25728:25742	11221503	0	True				
ANR	11221896	EqualityExpression	outname != NULL		11221503	0		!=			
ANR	11221897	Identifier	outname		11221503	0					
ANR	11221898	Identifier	NULL		11221503	1					
ANR	11221899	ExpressionStatement	free ( outname )	693:33:25745:25758	11221503	1	True				
ANR	11221900	CallExpression	free ( outname )		11221503	0					
ANR	11221901	Callee	free		11221503	0					
ANR	11221902	Identifier	free		11221503	0					
ANR	11221903	ArgumentList	outname		11221503	1					
ANR	11221904	Argument	outname		11221503	0					
ANR	11221905	Identifier	outname		11221503	0					
ANR	11221906	IfStatement	if ( ret )		11221503	3					
ANR	11221907	Condition	ret	694:16:25776:25778	11221503	0	True				
ANR	11221908	Identifier	ret		11221503	0					
ANR	11221909	BreakStatement	break ;	694:21:25781:25786	11221503	1	True				
ANR	11221910	Condition	"argv ++ , -- argc"	695:17:25805:25818	11221503	1	True				
ANR	11221911	Expression	"argv ++ , -- argc"		11221503	0					
ANR	11221912	PostIncDecOperationExpression	argv ++		11221503	0					
ANR	11221913	Identifier	argv		11221503	0					
ANR	11221914	IncDec	++		11221503	1					
ANR	11221915	UnaryExpression	-- argc		11221503	1					
ANR	11221916	IncDec	--		11221503	0					
ANR	11221917	Identifier	argc		11221503	1					
ANR	11221918	ElseStatement	else		11221503	0					
ANR	11221919	ExpressionStatement	"ret = gunzip ( & strm , NULL , NULL , test )"	697:8:25839:25876	11221503	0	True				
ANR	11221920	AssignmentExpression	"ret = gunzip ( & strm , NULL , NULL , test )"		11221503	0		=			
ANR	11221921	Identifier	ret		11221503	0					
ANR	11221922	CallExpression	"gunzip ( & strm , NULL , NULL , test )"		11221503	1					
ANR	11221923	Callee	gunzip		11221503	0					
ANR	11221924	Identifier	gunzip		11221503	0					
ANR	11221925	ArgumentList	& strm		11221503	1					
ANR	11221926	Argument	& strm		11221503	0					
ANR	11221927	UnaryOperationExpression	& strm		11221503	0					
ANR	11221928	UnaryOperator	&		11221503	0					
ANR	11221929	Identifier	strm		11221503	1					
ANR	11221930	Argument	NULL		11221503	1					
ANR	11221931	Identifier	NULL		11221503	0					
ANR	11221932	Argument	NULL		11221503	2					
ANR	11221933	Identifier	NULL		11221503	0					
ANR	11221934	Argument	test		11221503	3					
ANR	11221935	Identifier	test		11221503	0					
ANR	11221936	ExpressionStatement	inflateBackEnd ( & strm )	700:4:25902:25923	11221503	16	True				
ANR	11221937	CallExpression	inflateBackEnd ( & strm )		11221503	0					
ANR	11221938	Callee	inflateBackEnd		11221503	0					
ANR	11221939	Identifier	inflateBackEnd		11221503	0					
ANR	11221940	ArgumentList	& strm		11221503	1					
ANR	11221941	Argument	& strm		11221503	0					
ANR	11221942	UnaryOperationExpression	& strm		11221503	0					
ANR	11221943	UnaryOperator	&		11221503	0					
ANR	11221944	Identifier	strm		11221503	1					
ANR	11221945	ReturnStatement	return ret ;	701:4:25929:25939	11221503	17	True				
ANR	11221946	Identifier	ret		11221503	0					
ANR	11221947	ReturnType	int		11221503	1					
ANR	11221948	Identifier	main		11221503	2					
ANR	11221949	ParameterList	"int argc , char * * argv"		11221503	3					
ANR	11221950	Parameter	int argc	631:9:23648:23655	11221503	0	True				
ANR	11221951	ParameterType	int		11221503	0					
ANR	11221952	Identifier	argc		11221503	1					
ANR	11221953	Parameter	char * * argv	631:19:23658:23668	11221503	1	True				
ANR	11221954	ParameterType	char * *		11221503	0					
ANR	11221955	Identifier	argv		11221503	1					
ANR	11221956	CFGEntryNode	ENTRY		11221503		True				
ANR	11221957	CFGExitNode	EXIT		11221503		True				
ANR	11221958	Symbol	gunzip		11221503						
ANR	11221959	Symbol	& strm		11221503						
ANR	11221960	Symbol	outname		11221503						
ANR	11221961	Symbol	strm . zalloc		11221503						
ANR	11221962	Symbol	* argv		11221503						
ANR	11221963	Symbol	Z_OK		11221503						
ANR	11221964	Symbol	argv		11221503						
ANR	11221965	Symbol	strlen		11221503						
ANR	11221966	Symbol	strm . opaque		11221503						
ANR	11221967	Symbol	* outname		11221503						
ANR	11221968	Symbol	len		11221503						
ANR	11221969	Symbol	inflateBackInit		11221503						
ANR	11221970	Symbol	argc		11221503						
ANR	11221971	Symbol	ret		11221503						
ANR	11221972	Symbol	strcmp		11221503						
ANR	11221973	Symbol	malloc		11221503						
ANR	11221974	Symbol	NULL		11221503						
ANR	11221975	Symbol	test		11221503						
ANR	11221976	Symbol	match		11221503						
ANR	11221977	Symbol	strm		11221503						
ANR	11221978	Symbol	stderr		11221503						
ANR	11221979	Symbol	window		11221503						
ANR	11221980	Symbol	strm . zfree		11221503						
ANR	11221981	Symbol	Z_NULL		11221503						
ANR	11221982	Symbol	* len		11221503						
