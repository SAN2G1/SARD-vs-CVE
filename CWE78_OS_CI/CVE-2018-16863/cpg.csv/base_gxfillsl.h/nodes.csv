command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1053932	File	data/converged/CVE-2018-16863_ghostpdl/base_gxfillsl.h								
ANR	1053933	Function	TEMPLATE_spot_into_scanlines	28:0:969:8576							
ANR	1053934	FunctionDef	"TEMPLATE_spot_into_scanlines (line_list * ll , fixed band_mask)"		1053933	0					
ANR	1053935	CompoundStatement		30:0:1042:8576	1053933	0					
ANR	1053936	IdentifierDeclStatement	const fill_options fo = * ll -> fo ;	31:4:1048:1079	1053933	0	True				
ANR	1053937	IdentifierDecl	fo = * ll -> fo		1053933	0					
ANR	1053938	IdentifierDeclType	const fill_options		1053933	0					
ANR	1053939	Identifier	fo		1053933	1					
ANR	1053940	AssignmentExpression	fo = * ll -> fo		1053933	2		=			
ANR	1053941	Identifier	fo		1053933	0					
ANR	1053942	UnaryOperationExpression	* ll -> fo		1053933	1					
ANR	1053943	UnaryOperator	*		1053933	0					
ANR	1053944	PtrMemberAccess	ll -> fo		1053933	1					
ANR	1053945	Identifier	ll		1053933	0					
ANR	1053946	Identifier	fo		1053933	1					
ANR	1053947	IdentifierDeclStatement	active_line * yll = ll -> y_list ;	32:4:1085:1114	1053933	1	True				
ANR	1053948	IdentifierDecl	* yll = ll -> y_list		1053933	0					
ANR	1053949	IdentifierDeclType	active_line *		1053933	0					
ANR	1053950	Identifier	yll		1053933	1					
ANR	1053951	AssignmentExpression	* yll = ll -> y_list		1053933	2		=			
ANR	1053952	Identifier	yll		1053933	0					
ANR	1053953	PtrMemberAccess	ll -> y_list		1053933	1					
ANR	1053954	Identifier	ll		1053933	0					
ANR	1053955	Identifier	y_list		1053933	1					
ANR	1053956	IdentifierDeclStatement	fixed y_limit = fo . ymax ;	33:4:1120:1143	1053933	2	True				
ANR	1053957	IdentifierDecl	y_limit = fo . ymax		1053933	0					
ANR	1053958	IdentifierDeclType	fixed		1053933	0					
ANR	1053959	Identifier	y_limit		1053933	1					
ANR	1053960	AssignmentExpression	y_limit = fo . ymax		1053933	2		=			
ANR	1053961	Identifier	y_limit		1053933	0					
ANR	1053962	MemberAccess	fo . ymax		1053933	1					
ANR	1053963	Identifier	fo		1053933	0					
ANR	1053964	Identifier	ymax		1053933	1					
ANR	1053965	IdentifierDeclStatement	fixed y_frac_min = ( fo . adjust_above == fixed_0 ? fixed_half : fixed_half + fixed_epsilon - fo . adjust_above ) ;	43:4:1614:1738	1053933	3	True				
ANR	1053966	IdentifierDecl	y_frac_min = ( fo . adjust_above == fixed_0 ? fixed_half : fixed_half + fixed_epsilon - fo . adjust_above )		1053933	0					
ANR	1053967	IdentifierDeclType	fixed		1053933	0					
ANR	1053968	Identifier	y_frac_min		1053933	1					
ANR	1053969	AssignmentExpression	y_frac_min = ( fo . adjust_above == fixed_0 ? fixed_half : fixed_half + fixed_epsilon - fo . adjust_above )		1053933	2		=			
ANR	1053970	Identifier	y_frac_min		1053933	0					
ANR	1053971	ConditionalExpression	fo . adjust_above == fixed_0 ? fixed_half : fixed_half + fixed_epsilon - fo . adjust_above		1053933	1					
ANR	1053972	Condition	fo . adjust_above == fixed_0		1053933	0					
ANR	1053973	EqualityExpression	fo . adjust_above == fixed_0		1053933	0		==			
ANR	1053974	MemberAccess	fo . adjust_above		1053933	0					
ANR	1053975	Identifier	fo		1053933	0					
ANR	1053976	Identifier	adjust_above		1053933	1					
ANR	1053977	Identifier	fixed_0		1053933	1					
ANR	1053978	Identifier	fixed_half		1053933	1					
ANR	1053979	AdditiveExpression	fixed_half + fixed_epsilon - fo . adjust_above		1053933	2		+			
ANR	1053980	Identifier	fixed_half		1053933	0					
ANR	1053981	AdditiveExpression	fixed_epsilon - fo . adjust_above		1053933	1		-			
ANR	1053982	Identifier	fixed_epsilon		1053933	0					
ANR	1053983	MemberAccess	fo . adjust_above		1053933	1					
ANR	1053984	Identifier	fo		1053933	0					
ANR	1053985	Identifier	adjust_above		1053933	1					
ANR	1053986	IdentifierDeclStatement	fixed y_frac_max = fixed_half + fo . adjust_below ;	46:4:1744:1799	1053933	4	True				
ANR	1053987	IdentifierDecl	y_frac_max = fixed_half + fo . adjust_below		1053933	0					
ANR	1053988	IdentifierDeclType	fixed		1053933	0					
ANR	1053989	Identifier	y_frac_max		1053933	1					
ANR	1053990	AssignmentExpression	y_frac_max = fixed_half + fo . adjust_below		1053933	2		=			
ANR	1053991	Identifier	y_frac_max		1053933	0					
ANR	1053992	AdditiveExpression	fixed_half + fo . adjust_below		1053933	1		+			
ANR	1053993	Identifier	fixed_half		1053933	0					
ANR	1053994	MemberAccess	fo . adjust_below		1053933	1					
ANR	1053995	Identifier	fo		1053933	0					
ANR	1053996	Identifier	adjust_below		1053933	1					
ANR	1053997	IdentifierDeclStatement	int y0 = fixed2int ( min_fixed ) ;	48:4:1805:1834	1053933	5	True				
ANR	1053998	IdentifierDecl	y0 = fixed2int ( min_fixed )		1053933	0					
ANR	1053999	IdentifierDeclType	int		1053933	0					
ANR	1054000	Identifier	y0		1053933	1					
ANR	1054001	AssignmentExpression	y0 = fixed2int ( min_fixed )		1053933	2		=			
ANR	1054002	Identifier	y0		1053933	0					
ANR	1054003	CallExpression	fixed2int ( min_fixed )		1053933	1					
ANR	1054004	Callee	fixed2int		1053933	0					
ANR	1054005	Identifier	fixed2int		1053933	0					
ANR	1054006	ArgumentList	min_fixed		1053933	1					
ANR	1054007	Argument	min_fixed		1053933	0					
ANR	1054008	Identifier	min_fixed		1053933	0					
ANR	1054009	IdentifierDeclStatement	fixed y_bot = min_fixed ;	49:4:1840:1863	1053933	6	True				
ANR	1054010	IdentifierDecl	y_bot = min_fixed		1053933	0					
ANR	1054011	IdentifierDeclType	fixed		1053933	0					
ANR	1054012	Identifier	y_bot		1053933	1					
ANR	1054013	AssignmentExpression	y_bot = min_fixed		1053933	2		=			
ANR	1054014	Identifier	min_fixed		1053933	0					
ANR	1054015	Identifier	min_fixed		1053933	1					
ANR	1054016	IdentifierDeclStatement	fixed y_top = min_fixed ;	50:4:1911:1934	1053933	7	True				
ANR	1054017	IdentifierDecl	y_top = min_fixed		1053933	0					
ANR	1054018	IdentifierDeclType	fixed		1053933	0					
ANR	1054019	Identifier	y_top		1053933	1					
ANR	1054020	AssignmentExpression	y_top = min_fixed		1053933	2		=			
ANR	1054021	Identifier	min_fixed		1053933	0					
ANR	1054022	Identifier	min_fixed		1053933	1					
ANR	1054023	IdentifierDeclStatement	fixed y = min_fixed ;	51:4:1982:2001	1053933	8	True				
ANR	1054024	IdentifierDecl	y = min_fixed		1053933	0					
ANR	1054025	IdentifierDeclType	fixed		1053933	0					
ANR	1054026	Identifier	y		1053933	1					
ANR	1054027	AssignmentExpression	y = min_fixed		1053933	2		=			
ANR	1054028	Identifier	min_fixed		1053933	0					
ANR	1054029	Identifier	min_fixed		1053933	1					
ANR	1054030	IdentifierDeclStatement	coord_range_list_t rlist ;	52:4:2007:2031	1053933	9	True				
ANR	1054031	IdentifierDecl	rlist		1053933	0					
ANR	1054032	IdentifierDeclType	coord_range_list_t		1053933	0					
ANR	1054033	Identifier	rlist		1053933	1					
ANR	1054034	IdentifierDeclStatement	coord_range_t rlocal [ MAX_LOCAL_ACTIVE ] ;	53:4:2037:2075	1053933	10	True				
ANR	1054035	IdentifierDecl	rlocal [ MAX_LOCAL_ACTIVE ]		1053933	0					
ANR	1054036	IdentifierDeclType	coord_range_t [ MAX_LOCAL_ACTIVE ]		1053933	0					
ANR	1054037	Identifier	rlocal		1053933	1					
ANR	1054038	Identifier	MAX_LOCAL_ACTIVE		1053933	2					
ANR	1054039	IdentifierDeclStatement	int code = 0 ;	54:4:2081:2093	1053933	11	True				
ANR	1054040	IdentifierDecl	code = 0		1053933	0					
ANR	1054041	IdentifierDeclType	int		1053933	0					
ANR	1054042	Identifier	code		1053933	1					
ANR	1054043	AssignmentExpression	code = 0		1053933	2		=			
ANR	1054044	Identifier	code		1053933	0					
ANR	1054045	PrimaryExpression	0		1053933	1					
ANR	1054046	IfStatement	if ( yll == 0 )		1053933	12					
ANR	1054047	Condition	yll == 0	56:8:2104:2111	1053933	0	True				
ANR	1054048	EqualityExpression	yll == 0		1053933	0		==			
ANR	1054049	Identifier	yll		1053933	0					
ANR	1054050	PrimaryExpression	0		1053933	1					
ANR	1054051	ReturnStatement	return 0 ;	57:8:2140:2148	1053933	1	True				
ANR	1054052	PrimaryExpression	0		1053933	0					
ANR	1054053	ExpressionStatement	"range_list_init ( & rlist , rlocal , countof ( rlocal ) , ll -> memory )"	58:4:2154:2214	1053933	13	True				
ANR	1054054	CallExpression	"range_list_init ( & rlist , rlocal , countof ( rlocal ) , ll -> memory )"		1053933	0					
ANR	1054055	Callee	range_list_init		1053933	0					
ANR	1054056	Identifier	range_list_init		1053933	0					
ANR	1054057	ArgumentList	& rlist		1053933	1					
ANR	1054058	Argument	& rlist		1053933	0					
ANR	1054059	UnaryOperationExpression	& rlist		1053933	0					
ANR	1054060	UnaryOperator	&		1053933	0					
ANR	1054061	Identifier	rlist		1053933	1					
ANR	1054062	Argument	rlocal		1053933	1					
ANR	1054063	Identifier	rlocal		1053933	0					
ANR	1054064	Argument	countof ( rlocal )		1053933	2					
ANR	1054065	CallExpression	countof ( rlocal )		1053933	0					
ANR	1054066	Callee	countof		1053933	0					
ANR	1054067	Identifier	countof		1053933	0					
ANR	1054068	ArgumentList	rlocal		1053933	1					
ANR	1054069	Argument	rlocal		1053933	0					
ANR	1054070	Identifier	rlocal		1053933	0					
ANR	1054071	Argument	ll -> memory		1053933	3					
ANR	1054072	PtrMemberAccess	ll -> memory		1053933	0					
ANR	1054073	Identifier	ll		1053933	0					
ANR	1054074	Identifier	memory		1053933	1					
ANR	1054075	ExpressionStatement	ll -> x_list = 0	59:4:2220:2234	1053933	14	True				
ANR	1054076	AssignmentExpression	ll -> x_list = 0		1053933	0		=			
ANR	1054077	PtrMemberAccess	ll -> x_list		1053933	0					
ANR	1054078	Identifier	ll		1053933	0					
ANR	1054079	Identifier	x_list		1053933	1					
ANR	1054080	PrimaryExpression	0		1053933	1					
ANR	1054081	ExpressionStatement	ll -> x_head . x_current = min_fixed	60:4:2240:2272	1053933	15	True				
ANR	1054082	AssignmentExpression	ll -> x_head . x_current = min_fixed		1053933	0		=			
ANR	1054083	MemberAccess	ll -> x_head . x_current		1053933	0					
ANR	1054084	PtrMemberAccess	ll -> x_head		1053933	0					
ANR	1054085	Identifier	ll		1053933	0					
ANR	1054086	Identifier	x_head		1053933	1					
ANR	1054087	Identifier	x_current		1053933	1					
ANR	1054088	Identifier	min_fixed		1053933	1					
ANR	1054089	DoStatement	do		1053933	16					
ANR	1054090	CompoundStatement		35:8:1322:1335	1053933	0					
ANR	1054091	IdentifierDeclStatement	"active_line * alp , * nlp ;"	62:8:2316:2338	1053933	0	True				
ANR	1054092	IdentifierDecl	* alp		1053933	0					
ANR	1054093	IdentifierDeclType	active_line *		1053933	0					
ANR	1054094	Identifier	alp		1053933	1					
ANR	1054095	IdentifierDecl	* nlp		1053933	1					
ANR	1054096	IdentifierDeclType	active_line *		1053933	0					
ANR	1054097	Identifier	nlp		1053933	1					
ANR	1054098	IdentifierDeclStatement	fixed x ;	63:8:2348:2355	1053933	1	True				
ANR	1054099	IdentifierDecl	x		1053933	0					
ANR	1054100	IdentifierDeclType	fixed		1053933	0					
ANR	1054101	Identifier	x		1053933	1					
ANR	1054102	IdentifierDeclStatement	bool new_band ;	64:8:2365:2378	1053933	2	True				
ANR	1054103	IdentifierDecl	new_band		1053933	0					
ANR	1054104	IdentifierDeclType	bool		1053933	0					
ANR	1054105	Identifier	new_band		1053933	1					
ANR	1054106	ExpressionStatement	INCR ( iter )	66:8:2389:2399	1053933	3	True				
ANR	1054107	CallExpression	INCR ( iter )		1053933	0					
ANR	1054108	Callee	INCR		1053933	0					
ANR	1054109	Identifier	INCR		1053933	0					
ANR	1054110	ArgumentList	iter		1053933	1					
ANR	1054111	Argument	iter		1053933	0					
ANR	1054112	Identifier	iter		1053933	0					
ANR	1054113	ExpressionStatement	"code = move_al_by_y ( ll , y )"	68:8:2410:2436	1053933	4	True				
ANR	1054114	AssignmentExpression	"code = move_al_by_y ( ll , y )"		1053933	0		=			
ANR	1054115	Identifier	code		1053933	0					
ANR	1054116	CallExpression	"move_al_by_y ( ll , y )"		1053933	1					
ANR	1054117	Callee	move_al_by_y		1053933	0					
ANR	1054118	Identifier	move_al_by_y		1053933	0					
ANR	1054119	ArgumentList	ll		1053933	1					
ANR	1054120	Argument	ll		1053933	0					
ANR	1054121	Identifier	ll		1053933	0					
ANR	1054122	Argument	y		1053933	1					
ANR	1054123	Identifier	y		1053933	0					
ANR	1054124	IfStatement	if ( code < 0 )		1053933	5					
ANR	1054125	Condition	code < 0	69:12:2480:2487	1053933	0	True				
ANR	1054126	RelationalExpression	code < 0		1053933	0		<			
ANR	1054127	Identifier	code		1053933	0					
ANR	1054128	PrimaryExpression	0		1053933	1					
ANR	1054129	ReturnStatement	return code ;	70:12:2502:2513	1053933	1	True				
ANR	1054130	Identifier	code		1053933	0					
ANR	1054131	IfStatement	if ( ll -> x_list == 0 )		1053933	6					
ANR	1054132	Condition	ll -> x_list == 0	76:12:2657:2671	1053933	0	True				
ANR	1054133	EqualityExpression	ll -> x_list == 0		1053933	0		==			
ANR	1054134	PtrMemberAccess	ll -> x_list		1053933	0					
ANR	1054135	Identifier	ll		1053933	0					
ANR	1054136	Identifier	x_list		1053933	1					
ANR	1054137	PrimaryExpression	0		1053933	1					
ANR	1054138	ExpressionStatement	y = ( yll == 0 ? ll -> y_break : yll -> start . y )	77:12:2686:2729	1053933	1	True				
ANR	1054139	AssignmentExpression	y = ( yll == 0 ? ll -> y_break : yll -> start . y )		1053933	0		=			
ANR	1054140	Identifier	y		1053933	0					
ANR	1054141	ConditionalExpression	yll == 0 ? ll -> y_break : yll -> start . y		1053933	1					
ANR	1054142	Condition	yll == 0		1053933	0					
ANR	1054143	EqualityExpression	yll == 0		1053933	0		==			
ANR	1054144	Identifier	yll		1053933	0					
ANR	1054145	PrimaryExpression	0		1053933	1					
ANR	1054146	PtrMemberAccess	ll -> y_break		1053933	1					
ANR	1054147	Identifier	ll		1053933	0					
ANR	1054148	Identifier	y_break		1053933	1					
ANR	1054149	MemberAccess	yll -> start . y		1053933	2					
ANR	1054150	PtrMemberAccess	yll -> start		1053933	0					
ANR	1054151	Identifier	yll		1053933	0					
ANR	1054152	Identifier	start		1053933	1					
ANR	1054153	Identifier	y		1053933	1					
ANR	1054154	ElseStatement	else		1053933	0					
ANR	1054155	CompoundStatement		49:13:1701:1701	1053933	0					
ANR	1054156	ExpressionStatement	y = y_bot + fixed_1	79:12:2758:2777	1053933	0	True				
ANR	1054157	AssignmentExpression	y = y_bot + fixed_1		1053933	0		=			
ANR	1054158	Identifier	y		1053933	0					
ANR	1054159	AdditiveExpression	y_bot + fixed_1		1053933	1		+			
ANR	1054160	Identifier	y_bot		1053933	0					
ANR	1054161	Identifier	fixed_1		1053933	1					
ANR	1054162	IfStatement	if ( yll != 0 )		1053933	1					
ANR	1054163	Condition	yll != 0	80:16:2795:2802	1053933	0	True				
ANR	1054164	EqualityExpression	yll != 0		1053933	0		!=			
ANR	1054165	Identifier	yll		1053933	0					
ANR	1054166	PrimaryExpression	0		1053933	1					
ANR	1054167	ExpressionStatement	"y = min ( y , yll -> start . y )"	81:16:2821:2845	1053933	1	True				
ANR	1054168	AssignmentExpression	"y = min ( y , yll -> start . y )"		1053933	0		=			
ANR	1054169	Identifier	y		1053933	0					
ANR	1054170	CallExpression	"min ( y , yll -> start . y )"		1053933	1					
ANR	1054171	Callee	min		1053933	0					
ANR	1054172	Identifier	min		1053933	0					
ANR	1054173	ArgumentList	y		1053933	1					
ANR	1054174	Argument	y		1053933	0					
ANR	1054175	Identifier	y		1053933	0					
ANR	1054176	Argument	yll -> start . y		1053933	1					
ANR	1054177	MemberAccess	yll -> start . y		1053933	0					
ANR	1054178	PtrMemberAccess	yll -> start		1053933	0					
ANR	1054179	Identifier	yll		1053933	0					
ANR	1054180	Identifier	start		1053933	1					
ANR	1054181	Identifier	y		1053933	1					
ANR	1054182	ForStatement	for ( alp = ll -> x_list ; alp != 0 ; alp = alp -> next )		1053933	2					
ANR	1054183	ForInit	alp = ll -> x_list ;	82:17:2864:2880	1053933	0	True				
ANR	1054184	AssignmentExpression	alp = ll -> x_list		1053933	0		=			
ANR	1054185	Identifier	alp		1053933	0					
ANR	1054186	PtrMemberAccess	ll -> x_list		1053933	1					
ANR	1054187	Identifier	ll		1053933	0					
ANR	1054188	Identifier	x_list		1053933	1					
ANR	1054189	Condition	alp != 0	82:35:2882:2889	1053933	1	True				
ANR	1054190	EqualityExpression	alp != 0		1053933	0		!=			
ANR	1054191	Identifier	alp		1053933	0					
ANR	1054192	PrimaryExpression	0		1053933	1					
ANR	1054193	AssignmentExpression	alp = alp -> next	82:45:2892:2906	1053933	2	True	=			
ANR	1054194	Identifier	alp		1053933	0					
ANR	1054195	PtrMemberAccess	alp -> next		1053933	1					
ANR	1054196	Identifier	alp		1053933	0					
ANR	1054197	Identifier	next		1053933	1					
ANR	1054198	CompoundStatement		54:16:1884:1922	1053933	3					
ANR	1054199	IdentifierDeclStatement	"fixed yy = max ( alp -> fi . y3 , alp -> fi . y0 ) ;"	83:16:2927:2965	1053933	0	True				
ANR	1054200	IdentifierDecl	"yy = max ( alp -> fi . y3 , alp -> fi . y0 )"		1053933	0					
ANR	1054201	IdentifierDeclType	fixed		1053933	0					
ANR	1054202	Identifier	yy		1053933	1					
ANR	1054203	AssignmentExpression	"yy = max ( alp -> fi . y3 , alp -> fi . y0 )"		1053933	2		=			
ANR	1054204	Identifier	yy		1053933	0					
ANR	1054205	CallExpression	"max ( alp -> fi . y3 , alp -> fi . y0 )"		1053933	1					
ANR	1054206	Callee	max		1053933	0					
ANR	1054207	Identifier	max		1053933	0					
ANR	1054208	ArgumentList	alp -> fi . y3		1053933	1					
ANR	1054209	Argument	alp -> fi . y3		1053933	0					
ANR	1054210	MemberAccess	alp -> fi . y3		1053933	0					
ANR	1054211	PtrMemberAccess	alp -> fi		1053933	0					
ANR	1054212	Identifier	alp		1053933	0					
ANR	1054213	Identifier	fi		1053933	1					
ANR	1054214	Identifier	y3		1053933	1					
ANR	1054215	Argument	alp -> fi . y0		1053933	1					
ANR	1054216	MemberAccess	alp -> fi . y0		1053933	0					
ANR	1054217	PtrMemberAccess	alp -> fi		1053933	0					
ANR	1054218	Identifier	alp		1053933	0					
ANR	1054219	Identifier	fi		1053933	1					
ANR	1054220	Identifier	y0		1053933	1					
ANR	1054221	ExpressionStatement	"yy = max ( yy , alp -> end . y )"	85:16:2984:3008	1053933	1	True				
ANR	1054222	AssignmentExpression	"yy = max ( yy , alp -> end . y )"		1053933	0		=			
ANR	1054223	Identifier	yy		1053933	0					
ANR	1054224	CallExpression	"max ( yy , alp -> end . y )"		1053933	1					
ANR	1054225	Callee	max		1053933	0					
ANR	1054226	Identifier	max		1053933	0					
ANR	1054227	ArgumentList	yy		1053933	1					
ANR	1054228	Argument	yy		1053933	0					
ANR	1054229	Identifier	yy		1053933	0					
ANR	1054230	Argument	alp -> end . y		1053933	1					
ANR	1054231	MemberAccess	alp -> end . y		1053933	0					
ANR	1054232	PtrMemberAccess	alp -> end		1053933	0					
ANR	1054233	Identifier	alp		1053933	0					
ANR	1054234	Identifier	end		1053933	1					
ANR	1054235	Identifier	y		1053933	1					
ANR	1054236	ExpressionStatement	"y = min ( y , yy )"	86:16:3080:3094	1053933	2	True				
ANR	1054237	AssignmentExpression	"y = min ( y , yy )"		1053933	0		=			
ANR	1054238	Identifier	y		1053933	0					
ANR	1054239	CallExpression	"min ( y , yy )"		1053933	1					
ANR	1054240	Callee	min		1053933	0					
ANR	1054241	Identifier	min		1053933	0					
ANR	1054242	ArgumentList	y		1053933	1					
ANR	1054243	Argument	y		1053933	0					
ANR	1054244	Identifier	y		1053933	0					
ANR	1054245	Argument	yy		1053933	1					
ANR	1054246	Identifier	yy		1053933	0					
ANR	1054247	WhileStatement	while ( yll != 0 && yll -> start . y == y )		1053933	7					
ANR	1054248	Condition	yll != 0 && yll -> start . y == y	92:15:3193:3221	1053933	0	True				
ANR	1054249	AndExpression	yll != 0 && yll -> start . y == y		1053933	0		&&			
ANR	1054250	EqualityExpression	yll != 0		1053933	0		!=			
ANR	1054251	Identifier	yll		1053933	0					
ANR	1054252	PrimaryExpression	0		1053933	1					
ANR	1054253	EqualityExpression	yll -> start . y == y		1053933	1		==			
ANR	1054254	MemberAccess	yll -> start . y		1053933	0					
ANR	1054255	PtrMemberAccess	yll -> start		1053933	0					
ANR	1054256	Identifier	yll		1053933	0					
ANR	1054257	Identifier	start		1053933	1					
ANR	1054258	Identifier	y		1053933	1					
ANR	1054259	Identifier	y		1053933	1					
ANR	1054260	CompoundStatement		64:12:2195:2225	1053933	1					
ANR	1054261	IdentifierDeclStatement	active_line * ynext = yll -> next ;	93:12:3238:3268	1053933	0	True				
ANR	1054262	IdentifierDecl	* ynext = yll -> next		1053933	0					
ANR	1054263	IdentifierDeclType	active_line *		1053933	0					
ANR	1054264	Identifier	ynext		1053933	1					
ANR	1054265	AssignmentExpression	* ynext = yll -> next		1053933	2		=			
ANR	1054266	Identifier	ynext		1053933	0					
ANR	1054267	PtrMemberAccess	yll -> next		1053933	1					
ANR	1054268	Identifier	yll		1053933	0					
ANR	1054269	Identifier	next		1053933	1					
ANR	1054270	IfStatement	if ( yll -> direction == DIR_HORIZONTAL )		1053933	1					
ANR	1054271	Condition	yll -> direction == DIR_HORIZONTAL	95:16:3324:3355	1053933	0	True				
ANR	1054272	EqualityExpression	yll -> direction == DIR_HORIZONTAL		1053933	0		==			
ANR	1054273	PtrMemberAccess	yll -> direction		1053933	0					
ANR	1054274	Identifier	yll		1053933	0					
ANR	1054275	Identifier	direction		1053933	1					
ANR	1054276	Identifier	DIR_HORIZONTAL		1053933	1					
ANR	1054277	CompoundStatement		66:50:2315:2315	1053933	1					
ANR	1054278	ExpressionStatement	"insert_h_new ( yll , ll )"	96:16:3376:3397	1053933	0	True				
ANR	1054279	CallExpression	"insert_h_new ( yll , ll )"		1053933	0					
ANR	1054280	Callee	insert_h_new		1053933	0					
ANR	1054281	Identifier	insert_h_new		1053933	0					
ANR	1054282	ArgumentList	yll		1053933	1					
ANR	1054283	Argument	yll		1053933	0					
ANR	1054284	Identifier	yll		1053933	0					
ANR	1054285	Argument	ll		1053933	1					
ANR	1054286	Identifier	ll		1053933	0					
ANR	1054287	ElseStatement	else		1053933	0					
ANR	1054288	ExpressionStatement	"insert_x_new ( yll , ll )"	98:16:3434:3455	1053933	0	True				
ANR	1054289	CallExpression	"insert_x_new ( yll , ll )"		1053933	0					
ANR	1054290	Callee	insert_x_new		1053933	0					
ANR	1054291	Identifier	insert_x_new		1053933	0					
ANR	1054292	ArgumentList	yll		1053933	1					
ANR	1054293	Argument	yll		1053933	0					
ANR	1054294	Identifier	yll		1053933	0					
ANR	1054295	Argument	ll		1053933	1					
ANR	1054296	Identifier	ll		1053933	0					
ANR	1054297	ExpressionStatement	yll = ynext	99:12:3469:3480	1053933	2	True				
ANR	1054298	AssignmentExpression	yll = ynext		1053933	0		=			
ANR	1054299	Identifier	yll		1053933	0					
ANR	1054300	Identifier	ynext		1053933	1					
ANR	1054301	ExpressionStatement	x = min_fixed	104:8:3542:3555	1053933	8	True				
ANR	1054302	AssignmentExpression	x = min_fixed		1053933	0		=			
ANR	1054303	Identifier	x		1053933	0					
ANR	1054304	Identifier	min_fixed		1053933	1					
ANR	1054305	ForStatement	for ( alp = ll -> x_list ; alp != 0 ; alp = nlp )		1053933	9					
ANR	1054306	ForInit	alp = ll -> x_list ;	105:13:3570:3586	1053933	0	True				
ANR	1054307	AssignmentExpression	alp = ll -> x_list		1053933	0		=			
ANR	1054308	Identifier	alp		1053933	0					
ANR	1054309	PtrMemberAccess	ll -> x_list		1053933	1					
ANR	1054310	Identifier	ll		1053933	0					
ANR	1054311	Identifier	x_list		1053933	1					
ANR	1054312	Condition	alp != 0	105:31:3588:3595	1053933	1	True				
ANR	1054313	EqualityExpression	alp != 0		1053933	0		!=			
ANR	1054314	Identifier	alp		1053933	0					
ANR	1054315	PrimaryExpression	0		1053933	1					
ANR	1054316	AssignmentExpression	alp = nlp	105:41:3598:3606	1053933	2	True	=			
ANR	1054317	Identifier	alp		1053933	0					
ANR	1054318	Identifier	nlp		1053933	1					
ANR	1054319	CompoundStatement		77:12:2580:2588	1053933	3					
ANR	1054320	IdentifierDeclStatement	fixed nx ;	106:12:3623:3631	1053933	0	True				
ANR	1054321	IdentifierDecl	nx		1053933	0					
ANR	1054322	IdentifierDeclType	fixed		1053933	0					
ANR	1054323	Identifier	nx		1053933	1					
ANR	1054324	ExpressionStatement	nlp = alp -> next	108:12:3646:3661	1053933	1	True				
ANR	1054325	AssignmentExpression	nlp = alp -> next		1053933	0		=			
ANR	1054326	Identifier	nlp		1053933	0					
ANR	1054327	PtrMemberAccess	alp -> next		1053933	1					
ANR	1054328	Identifier	alp		1053933	0					
ANR	1054329	Identifier	next		1053933	1					
ANR	1054330	Label	e :	109:10:3673:3674	1053933	2	True				
ANR	1054331	Identifier	e		1053933	0					
ANR	1054332	IfStatement	if ( alp -> end . y <= y || alp -> start . y == alp -> end . y )		1053933	3					
ANR	1054333	Condition	alp -> end . y <= y || alp -> start . y == alp -> end . y	109:16:3679:3723	1053933	0	True				
ANR	1054334	OrExpression	alp -> end . y <= y || alp -> start . y == alp -> end . y		1053933	0		||			
ANR	1054335	RelationalExpression	alp -> end . y <= y		1053933	0		<=			
ANR	1054336	MemberAccess	alp -> end . y		1053933	0					
ANR	1054337	PtrMemberAccess	alp -> end		1053933	0					
ANR	1054338	Identifier	alp		1053933	0					
ANR	1054339	Identifier	end		1053933	1					
ANR	1054340	Identifier	y		1053933	1					
ANR	1054341	Identifier	y		1053933	1					
ANR	1054342	EqualityExpression	alp -> start . y == alp -> end . y		1053933	1		==			
ANR	1054343	MemberAccess	alp -> start . y		1053933	0					
ANR	1054344	PtrMemberAccess	alp -> start		1053933	0					
ANR	1054345	Identifier	alp		1053933	0					
ANR	1054346	Identifier	start		1053933	1					
ANR	1054347	Identifier	y		1053933	1					
ANR	1054348	MemberAccess	alp -> end . y		1053933	1					
ANR	1054349	PtrMemberAccess	alp -> end		1053933	0					
ANR	1054350	Identifier	alp		1053933	0					
ANR	1054351	Identifier	end		1053933	1					
ANR	1054352	Identifier	y		1053933	1					
ANR	1054353	CompoundStatement		80:63:2683:2683	1053933	1					
ANR	1054354	IfStatement	"if ( end_x_line ( alp , ll , true ) )"		1053933	0					
ANR	1054355	Condition	"end_x_line ( alp , ll , true )"	110:20:3748:3772	1053933	0	True				
ANR	1054356	CallExpression	"end_x_line ( alp , ll , true )"		1053933	0					
ANR	1054357	Callee	end_x_line		1053933	0					
ANR	1054358	Identifier	end_x_line		1053933	0					
ANR	1054359	ArgumentList	alp		1053933	1					
ANR	1054360	Argument	alp		1053933	0					
ANR	1054361	Identifier	alp		1053933	0					
ANR	1054362	Argument	ll		1053933	1					
ANR	1054363	Identifier	ll		1053933	0					
ANR	1054364	Argument	true		1053933	2					
ANR	1054365	Identifier	true		1053933	0					
ANR	1054366	ContinueStatement	continue ;	111:20:3795:3803	1053933	1	True				
ANR	1054367	IfStatement	if ( alp -> more_flattened )		1053933	1					
ANR	1054368	Condition	alp -> more_flattened	112:20:3825:3843	1053933	0	True				
ANR	1054369	PtrMemberAccess	alp -> more_flattened		1053933	0					
ANR	1054370	Identifier	alp		1053933	0					
ANR	1054371	Identifier	more_flattened		1053933	1					
ANR	1054372	IfStatement	if ( alp -> end . y <= y || alp -> start . y == alp -> end . y )		1053933	1					
ANR	1054373	Condition	alp -> end . y <= y || alp -> start . y == alp -> end . y	113:24:3870:3914	1053933	0	True				
ANR	1054374	OrExpression	alp -> end . y <= y || alp -> start . y == alp -> end . y		1053933	0		||			
ANR	1054375	RelationalExpression	alp -> end . y <= y		1053933	0		<=			
ANR	1054376	MemberAccess	alp -> end . y		1053933	0					
ANR	1054377	PtrMemberAccess	alp -> end		1053933	0					
ANR	1054378	Identifier	alp		1053933	0					
ANR	1054379	Identifier	end		1053933	1					
ANR	1054380	Identifier	y		1053933	1					
ANR	1054381	Identifier	y		1053933	1					
ANR	1054382	EqualityExpression	alp -> start . y == alp -> end . y		1053933	1		==			
ANR	1054383	MemberAccess	alp -> start . y		1053933	0					
ANR	1054384	PtrMemberAccess	alp -> start		1053933	0					
ANR	1054385	Identifier	alp		1053933	0					
ANR	1054386	Identifier	start		1053933	1					
ANR	1054387	Identifier	y		1053933	1					
ANR	1054388	MemberAccess	alp -> end . y		1053933	1					
ANR	1054389	PtrMemberAccess	alp -> end		1053933	0					
ANR	1054390	Identifier	alp		1053933	0					
ANR	1054391	Identifier	end		1053933	1					
ANR	1054392	Identifier	y		1053933	1					
ANR	1054393	CompoundStatement		84:71:2874:2874	1053933	1					
ANR	1054394	ExpressionStatement	"code = step_al ( alp , true )"	114:24:3943:3968	1053933	0	True				
ANR	1054395	AssignmentExpression	"code = step_al ( alp , true )"		1053933	0		=			
ANR	1054396	Identifier	code		1053933	0					
ANR	1054397	CallExpression	"step_al ( alp , true )"		1053933	1					
ANR	1054398	Callee	step_al		1053933	0					
ANR	1054399	Identifier	step_al		1053933	0					
ANR	1054400	ArgumentList	alp		1053933	1					
ANR	1054401	Argument	alp		1053933	0					
ANR	1054402	Identifier	alp		1053933	0					
ANR	1054403	Argument	true		1053933	1					
ANR	1054404	Identifier	true		1053933	0					
ANR	1054405	IfStatement	if ( code < 0 )		1053933	1					
ANR	1054406	Condition	code < 0	115:28:3998:4005	1053933	0	True				
ANR	1054407	RelationalExpression	code < 0		1053933	0		<			
ANR	1054408	Identifier	code		1053933	0					
ANR	1054409	PrimaryExpression	0		1053933	1					
ANR	1054410	ReturnStatement	return code ;	116:28:4036:4047	1053933	1	True				
ANR	1054411	Identifier	code		1053933	0					
ANR	1054412	GotoStatement	goto e ;	118:16:4087:4093	1053933	2	True				
ANR	1054413	Identifier	e		1053933	0					
ANR	1054414	ExpressionStatement	"nx = alp -> x_current = ( alp -> start . y >= y ? alp -> start . x : AL_X_AT_Y ( alp , y ) )"	120:12:4121:4197	1053933	4	True				
ANR	1054415	AssignmentExpression	"nx = alp -> x_current = ( alp -> start . y >= y ? alp -> start . x : AL_X_AT_Y ( alp , y ) )"		1053933	0		=			
ANR	1054416	Identifier	nx		1053933	0					
ANR	1054417	AssignmentExpression	"alp -> x_current = ( alp -> start . y >= y ? alp -> start . x : AL_X_AT_Y ( alp , y ) )"		1053933	1		=			
ANR	1054418	PtrMemberAccess	alp -> x_current		1053933	0					
ANR	1054419	Identifier	alp		1053933	0					
ANR	1054420	Identifier	x_current		1053933	1					
ANR	1054421	ConditionalExpression	"alp -> start . y >= y ? alp -> start . x : AL_X_AT_Y ( alp , y )"		1053933	1					
ANR	1054422	Condition	alp -> start . y >= y		1053933	0					
ANR	1054423	RelationalExpression	alp -> start . y >= y		1053933	0		>=			
ANR	1054424	MemberAccess	alp -> start . y		1053933	0					
ANR	1054425	PtrMemberAccess	alp -> start		1053933	0					
ANR	1054426	Identifier	alp		1053933	0					
ANR	1054427	Identifier	start		1053933	1					
ANR	1054428	Identifier	y		1053933	1					
ANR	1054429	Identifier	y		1053933	1					
ANR	1054430	MemberAccess	alp -> start . x		1053933	1					
ANR	1054431	PtrMemberAccess	alp -> start		1053933	0					
ANR	1054432	Identifier	alp		1053933	0					
ANR	1054433	Identifier	start		1053933	1					
ANR	1054434	Identifier	x		1053933	1					
ANR	1054435	CallExpression	"AL_X_AT_Y ( alp , y )"		1053933	2					
ANR	1054436	Callee	AL_X_AT_Y		1053933	0					
ANR	1054437	Identifier	AL_X_AT_Y		1053933	0					
ANR	1054438	ArgumentList	alp		1053933	1					
ANR	1054439	Argument	alp		1053933	0					
ANR	1054440	Identifier	alp		1053933	0					
ANR	1054441	Argument	y		1053933	1					
ANR	1054442	Identifier	y		1053933	0					
ANR	1054443	IfStatement	if ( nx < x )		1053933	5					
ANR	1054444	Condition	nx < x	121:16:4215:4220	1053933	0	True				
ANR	1054445	RelationalExpression	nx < x		1053933	0		<			
ANR	1054446	Identifier	nx		1053933	0					
ANR	1054447	Identifier	x		1053933	1					
ANR	1054448	CompoundStatement		94:16:3257:3279	1053933	1					
ANR	1054449	IdentifierDeclStatement	active_line * ilp = alp ;	123:16:4300:4322	1053933	0	True				
ANR	1054450	IdentifierDecl	* ilp = alp		1053933	0					
ANR	1054451	IdentifierDeclType	active_line *		1053933	0					
ANR	1054452	Identifier	ilp		1053933	1					
ANR	1054453	AssignmentExpression	* ilp = alp		1053933	2		=			
ANR	1054454	Identifier	alp		1053933	0					
ANR	1054455	Identifier	alp		1053933	1					
ANR	1054456	WhileStatement	while ( nx < ( ilp = ilp -> prev ) -> x_current )		1053933	1					
ANR	1054457	Condition	nx < ( ilp = ilp -> prev ) -> x_current	125:23:4348:4380	1053933	0	True				
ANR	1054458	RelationalExpression	nx < ( ilp = ilp -> prev ) -> x_current		1053933	0		<			
ANR	1054459	Identifier	nx		1053933	0					
ANR	1054460	PtrMemberAccess	( ilp = ilp -> prev ) -> x_current		1053933	1					
ANR	1054461	AssignmentExpression	ilp = ilp -> prev		1053933	0		=			
ANR	1054462	Identifier	ilp		1053933	0					
ANR	1054463	PtrMemberAccess	ilp -> prev		1053933	1					
ANR	1054464	Identifier	ilp		1053933	0					
ANR	1054465	Identifier	prev		1053933	1					
ANR	1054466	Identifier	x_current		1053933	1					
ANR	1054467	ExpressionStatement	DO_NOTHING	126:20:4403:4413	1053933	1	True				
ANR	1054468	Identifier	DO_NOTHING		1053933	0					
ANR	1054469	ExpressionStatement	alp -> prev -> next = alp -> next	128:16:4498:4525	1053933	2	True				
ANR	1054470	AssignmentExpression	alp -> prev -> next = alp -> next		1053933	0		=			
ANR	1054471	PtrMemberAccess	alp -> prev -> next		1053933	0					
ANR	1054472	PtrMemberAccess	alp -> prev		1053933	0					
ANR	1054473	Identifier	alp		1053933	0					
ANR	1054474	Identifier	prev		1053933	1					
ANR	1054475	Identifier	next		1053933	1					
ANR	1054476	PtrMemberAccess	alp -> next		1053933	1					
ANR	1054477	Identifier	alp		1053933	0					
ANR	1054478	Identifier	next		1053933	1					
ANR	1054479	IfStatement	if ( alp -> next )		1053933	3					
ANR	1054480	Condition	alp -> next	129:20:4547:4555	1053933	0	True				
ANR	1054481	PtrMemberAccess	alp -> next		1053933	0					
ANR	1054482	Identifier	alp		1053933	0					
ANR	1054483	Identifier	next		1053933	1					
ANR	1054484	ExpressionStatement	alp -> next -> prev = alp -> prev	130:20:4578:4605	1053933	1	True				
ANR	1054485	AssignmentExpression	alp -> next -> prev = alp -> prev		1053933	0		=			
ANR	1054486	PtrMemberAccess	alp -> next -> prev		1053933	0					
ANR	1054487	PtrMemberAccess	alp -> next		1053933	0					
ANR	1054488	Identifier	alp		1053933	0					
ANR	1054489	Identifier	next		1053933	1					
ANR	1054490	Identifier	prev		1053933	1					
ANR	1054491	PtrMemberAccess	alp -> prev		1053933	1					
ANR	1054492	Identifier	alp		1053933	0					
ANR	1054493	Identifier	prev		1053933	1					
ANR	1054494	IfStatement	if ( ilp -> next )		1053933	4					
ANR	1054495	Condition	ilp -> next	131:20:4627:4635	1053933	0	True				
ANR	1054496	PtrMemberAccess	ilp -> next		1053933	0					
ANR	1054497	Identifier	ilp		1053933	0					
ANR	1054498	Identifier	next		1053933	1					
ANR	1054499	ExpressionStatement	ilp -> next -> prev = alp	132:20:4658:4679	1053933	1	True				
ANR	1054500	AssignmentExpression	ilp -> next -> prev = alp		1053933	0		=			
ANR	1054501	PtrMemberAccess	ilp -> next -> prev		1053933	0					
ANR	1054502	PtrMemberAccess	ilp -> next		1053933	0					
ANR	1054503	Identifier	ilp		1053933	0					
ANR	1054504	Identifier	next		1053933	1					
ANR	1054505	Identifier	prev		1053933	1					
ANR	1054506	Identifier	alp		1053933	1					
ANR	1054507	ExpressionStatement	alp -> next = ilp -> next	133:16:4697:4718	1053933	5	True				
ANR	1054508	AssignmentExpression	alp -> next = ilp -> next		1053933	0		=			
ANR	1054509	PtrMemberAccess	alp -> next		1053933	0					
ANR	1054510	Identifier	alp		1053933	0					
ANR	1054511	Identifier	next		1053933	1					
ANR	1054512	PtrMemberAccess	ilp -> next		1053933	1					
ANR	1054513	Identifier	ilp		1053933	0					
ANR	1054514	Identifier	next		1053933	1					
ANR	1054515	ExpressionStatement	ilp -> next = alp	134:16:4736:4751	1053933	6	True				
ANR	1054516	AssignmentExpression	ilp -> next = alp		1053933	0		=			
ANR	1054517	PtrMemberAccess	ilp -> next		1053933	0					
ANR	1054518	Identifier	ilp		1053933	0					
ANR	1054519	Identifier	next		1053933	1					
ANR	1054520	Identifier	alp		1053933	1					
ANR	1054521	ExpressionStatement	alp -> prev = ilp	135:16:4769:4784	1053933	7	True				
ANR	1054522	AssignmentExpression	alp -> prev = ilp		1053933	0		=			
ANR	1054523	PtrMemberAccess	alp -> prev		1053933	0					
ANR	1054524	Identifier	alp		1053933	0					
ANR	1054525	Identifier	prev		1053933	1					
ANR	1054526	Identifier	ilp		1053933	1					
ANR	1054527	ContinueStatement	continue ;	136:16:4802:4810	1053933	8	True				
ANR	1054528	ExpressionStatement	x = nx	138:12:4838:4844	1053933	6	True				
ANR	1054529	AssignmentExpression	x = nx		1053933	0		=			
ANR	1054530	Identifier	x		1053933	0					
ANR	1054531	Identifier	nx		1053933	1					
ANR	1054532	IfStatement	if ( y > y_top || y >= y_limit )		1053933	10					
ANR	1054533	Condition	y > y_top || y >= y_limit	141:12:4869:4893	1053933	0	True				
ANR	1054534	OrExpression	y > y_top || y >= y_limit		1053933	0		||			
ANR	1054535	RelationalExpression	y > y_top		1053933	0		>			
ANR	1054536	Identifier	y		1053933	0					
ANR	1054537	Identifier	y_top		1053933	1					
ANR	1054538	RelationalExpression	y >= y_limit		1053933	1		>=			
ANR	1054539	Identifier	y		1053933	0					
ANR	1054540	Identifier	y_limit		1053933	1					
ANR	1054541	CompoundStatement		114:12:3937:3961	1053933	1					
ANR	1054542	IdentifierDeclStatement	const coord_range_t * pcr ;	143:12:4980:5004	1053933	0	True				
ANR	1054543	IdentifierDecl	* pcr		1053933	0					
ANR	1054544	IdentifierDeclType	const coord_range_t *		1053933	0					
ANR	1054545	Identifier	pcr		1053933	1					
ANR	1054546	ForStatement	for ( pcr = rlist . first . next ; pcr != & rlist . last ; pcr = pcr -> next )		1053933	1					
ANR	1054547	ForInit	pcr = rlist . first . next ;	147:17:5067:5089	1053933	0	True				
ANR	1054548	AssignmentExpression	pcr = rlist . first . next		1053933	0		=			
ANR	1054549	Identifier	pcr		1053933	0					
ANR	1054550	MemberAccess	rlist . first . next		1053933	1					
ANR	1054551	MemberAccess	rlist . first		1053933	0					
ANR	1054552	Identifier	rlist		1053933	0					
ANR	1054553	Identifier	first		1053933	1					
ANR	1054554	Identifier	next		1053933	1					
ANR	1054555	Condition	pcr != & rlist . last	147:41:5091:5108	1053933	1	True				
ANR	1054556	EqualityExpression	pcr != & rlist . last		1053933	0		!=			
ANR	1054557	Identifier	pcr		1053933	0					
ANR	1054558	UnaryOperationExpression	& rlist . last		1053933	1					
ANR	1054559	UnaryOperator	&		1053933	0					
ANR	1054560	MemberAccess	rlist . last		1053933	1					
ANR	1054561	Identifier	rlist		1053933	0					
ANR	1054562	Identifier	last		1053933	1					
ANR	1054563	AssignmentExpression	pcr = pcr -> next	148:17:5128:5142	1053933	2	True	=			
ANR	1054564	Identifier	pcr		1053933	0					
ANR	1054565	PtrMemberAccess	pcr -> next		1053933	1					
ANR	1054566	Identifier	pcr		1053933	0					
ANR	1054567	Identifier	next		1053933	1					
ANR	1054568	CompoundStatement		121:16:4138:4172	1053933	3					
ANR	1054569	IdentifierDeclStatement	"int x0 = pcr -> rmin , x1 = pcr -> rmax ;"	150:16:5181:5215	1053933	0	True				
ANR	1054570	IdentifierDecl	x0 = pcr -> rmin		1053933	0					
ANR	1054571	IdentifierDeclType	int		1053933	0					
ANR	1054572	Identifier	x0		1053933	1					
ANR	1054573	AssignmentExpression	x0 = pcr -> rmin		1053933	2		=			
ANR	1054574	Identifier	x0		1053933	0					
ANR	1054575	PtrMemberAccess	pcr -> rmin		1053933	1					
ANR	1054576	Identifier	pcr		1053933	0					
ANR	1054577	Identifier	rmin		1053933	1					
ANR	1054578	IdentifierDecl	x1 = pcr -> rmax		1053933	1					
ANR	1054579	IdentifierDeclType	int		1053933	0					
ANR	1054580	Identifier	x1		1053933	1					
ANR	1054581	AssignmentExpression	x1 = pcr -> rmax		1053933	2		=			
ANR	1054582	Identifier	x1		1053933	0					
ANR	1054583	PtrMemberAccess	pcr -> rmax		1053933	1					
ANR	1054584	Identifier	pcr		1053933	0					
ANR	1054585	Identifier	rmax		1053933	1					
ANR	1054586	ExpressionStatement	"if_debug4m ( 'Q' , ll -> memory , ""[Qr]draw 0x%lx: [%d,%d),%d\\n"" , ( ulong ) pcr , x0 , x1 , y0 )"	152:16:5234:5344	1053933	1	True				
ANR	1054587	CallExpression	"if_debug4m ( 'Q' , ll -> memory , ""[Qr]draw 0x%lx: [%d,%d),%d\\n"" , ( ulong ) pcr , x0 , x1 , y0 )"		1053933	0					
ANR	1054588	Callee	if_debug4m		1053933	0					
ANR	1054589	Identifier	if_debug4m		1053933	0					
ANR	1054590	ArgumentList	'Q'		1053933	1					
ANR	1054591	Argument	'Q'		1053933	0					
ANR	1054592	PrimaryExpression	'Q'		1053933	0					
ANR	1054593	Argument	ll -> memory		1053933	1					
ANR	1054594	PtrMemberAccess	ll -> memory		1053933	0					
ANR	1054595	Identifier	ll		1053933	0					
ANR	1054596	Identifier	memory		1053933	1					
ANR	1054597	Argument	"""[Qr]draw 0x%lx: [%d,%d),%d\\n"""		1053933	2					
ANR	1054598	PrimaryExpression	"""[Qr]draw 0x%lx: [%d,%d),%d\\n"""		1053933	0					
ANR	1054599	Argument	( ulong ) pcr		1053933	3					
ANR	1054600	CastExpression	( ulong ) pcr		1053933	0					
ANR	1054601	CastTarget	ulong		1053933	0					
ANR	1054602	Identifier	pcr		1053933	1					
ANR	1054603	Argument	x0		1053933	4					
ANR	1054604	Identifier	x0		1053933	0					
ANR	1054605	Argument	x1		1053933	5					
ANR	1054606	Identifier	x1		1053933	0					
ANR	1054607	Argument	y0		1053933	6					
ANR	1054608	Identifier	y0		1053933	0					
ANR	1054609	ExpressionStatement	"code = LOOP_FILL_RECTANGLE_DIRECT ( & fo , x0 , y0 , x1 - x0 , 1 )"	154:16:5362:5420	1053933	2	True				
ANR	1054610	AssignmentExpression	"code = LOOP_FILL_RECTANGLE_DIRECT ( & fo , x0 , y0 , x1 - x0 , 1 )"		1053933	0		=			
ANR	1054611	Identifier	code		1053933	0					
ANR	1054612	CallExpression	"LOOP_FILL_RECTANGLE_DIRECT ( & fo , x0 , y0 , x1 - x0 , 1 )"		1053933	1					
ANR	1054613	Callee	LOOP_FILL_RECTANGLE_DIRECT		1053933	0					
ANR	1054614	Identifier	LOOP_FILL_RECTANGLE_DIRECT		1053933	0					
ANR	1054615	ArgumentList	& fo		1053933	1					
ANR	1054616	Argument	& fo		1053933	0					
ANR	1054617	UnaryOperationExpression	& fo		1053933	0					
ANR	1054618	UnaryOperator	&		1053933	0					
ANR	1054619	Identifier	fo		1053933	1					
ANR	1054620	Argument	x0		1053933	1					
ANR	1054621	Identifier	x0		1053933	0					
ANR	1054622	Argument	y0		1053933	2					
ANR	1054623	Identifier	y0		1053933	0					
ANR	1054624	Argument	x1 - x0		1053933	3					
ANR	1054625	AdditiveExpression	x1 - x0		1053933	0		-			
ANR	1054626	Identifier	x1		1053933	0					
ANR	1054627	Identifier	x0		1053933	1					
ANR	1054628	Argument	1		1053933	4					
ANR	1054629	PrimaryExpression	1		1053933	0					
ANR	1054630	ExpressionStatement	"if_debug3m ( 'F' , ll -> memory , ""[F]drawing [%d:%d),%d\\n"" , x0 , x1 , y0 )"	155:16:5438:5504	1053933	3	True				
ANR	1054631	CallExpression	"if_debug3m ( 'F' , ll -> memory , ""[F]drawing [%d:%d),%d\\n"" , x0 , x1 , y0 )"		1053933	0					
ANR	1054632	Callee	if_debug3m		1053933	0					
ANR	1054633	Identifier	if_debug3m		1053933	0					
ANR	1054634	ArgumentList	'F'		1053933	1					
ANR	1054635	Argument	'F'		1053933	0					
ANR	1054636	PrimaryExpression	'F'		1053933	0					
ANR	1054637	Argument	ll -> memory		1053933	1					
ANR	1054638	PtrMemberAccess	ll -> memory		1053933	0					
ANR	1054639	Identifier	ll		1053933	0					
ANR	1054640	Identifier	memory		1053933	1					
ANR	1054641	Argument	"""[F]drawing [%d:%d),%d\\n"""		1053933	2					
ANR	1054642	PrimaryExpression	"""[F]drawing [%d:%d),%d\\n"""		1053933	0					
ANR	1054643	Argument	x0		1053933	3					
ANR	1054644	Identifier	x0		1053933	0					
ANR	1054645	Argument	x1		1053933	4					
ANR	1054646	Identifier	x1		1053933	0					
ANR	1054647	Argument	y0		1053933	5					
ANR	1054648	Identifier	y0		1053933	0					
ANR	1054649	IfStatement	if ( code < 0 )		1053933	4					
ANR	1054650	Condition	code < 0	156:20:5526:5533	1053933	0	True				
ANR	1054651	RelationalExpression	code < 0		1053933	0		<			
ANR	1054652	Identifier	code		1053933	0					
ANR	1054653	PrimaryExpression	0		1053933	1					
ANR	1054654	GotoStatement	goto done ;	157:20:5556:5565	1053933	1	True				
ANR	1054655	Identifier	done		1053933	0					
ANR	1054656	ExpressionStatement	range_list_reset ( & rlist )	159:12:5593:5617	1053933	2	True				
ANR	1054657	CallExpression	range_list_reset ( & rlist )		1053933	0					
ANR	1054658	Callee	range_list_reset		1053933	0					
ANR	1054659	Identifier	range_list_reset		1053933	0					
ANR	1054660	ArgumentList	& rlist		1053933	1					
ANR	1054661	Argument	& rlist		1053933	0					
ANR	1054662	UnaryOperationExpression	& rlist		1053933	0					
ANR	1054663	UnaryOperator	&		1053933	0					
ANR	1054664	Identifier	rlist		1053933	1					
ANR	1054665	IfStatement	if ( y >= y_limit )		1053933	3					
ANR	1054666	Condition	y >= y_limit	163:16:5698:5709	1053933	0	True				
ANR	1054667	RelationalExpression	y >= y_limit		1053933	0		>=			
ANR	1054668	Identifier	y		1053933	0					
ANR	1054669	Identifier	y_limit		1053933	1					
ANR	1054670	BreakStatement	break ;	164:16:5728:5733	1053933	1	True				
ANR	1054671	ExpressionStatement	y0 = fixed2int ( y )	168:12:5792:5809	1053933	4	True				
ANR	1054672	AssignmentExpression	y0 = fixed2int ( y )		1053933	0		=			
ANR	1054673	Identifier	y0		1053933	0					
ANR	1054674	CallExpression	fixed2int ( y )		1053933	1					
ANR	1054675	Callee	fixed2int		1053933	0					
ANR	1054676	Identifier	fixed2int		1053933	0					
ANR	1054677	ArgumentList	y		1053933	1					
ANR	1054678	Argument	y		1053933	0					
ANR	1054679	Identifier	y		1053933	0					
ANR	1054680	IfStatement	if ( fixed_fraction ( y ) < y_frac_min )		1053933	5					
ANR	1054681	Condition	fixed_fraction ( y ) < y_frac_min	169:16:5827:5856	1053933	0	True				
ANR	1054682	RelationalExpression	fixed_fraction ( y ) < y_frac_min		1053933	0		<			
ANR	1054683	CallExpression	fixed_fraction ( y )		1053933	0					
ANR	1054684	Callee	fixed_fraction		1053933	0					
ANR	1054685	Identifier	fixed_fraction		1053933	0					
ANR	1054686	ArgumentList	y		1053933	1					
ANR	1054687	Argument	y		1053933	0					
ANR	1054688	Identifier	y		1053933	0					
ANR	1054689	Identifier	y_frac_min		1053933	1					
ANR	1054690	ExpressionStatement	-- y0	170:16:5875:5879	1053933	1	True				
ANR	1054691	UnaryExpression	-- y0		1053933	0					
ANR	1054692	IncDec	--		1053933	0					
ANR	1054693	Identifier	y0		1053933	1					
ANR	1054694	ExpressionStatement	y_bot = int2fixed ( y0 ) + y_frac_min	171:12:5893:5927	1053933	6	True				
ANR	1054695	AssignmentExpression	y_bot = int2fixed ( y0 ) + y_frac_min		1053933	0		=			
ANR	1054696	Identifier	y_bot		1053933	0					
ANR	1054697	AdditiveExpression	int2fixed ( y0 ) + y_frac_min		1053933	1		+			
ANR	1054698	CallExpression	int2fixed ( y0 )		1053933	0					
ANR	1054699	Callee	int2fixed		1053933	0					
ANR	1054700	Identifier	int2fixed		1053933	0					
ANR	1054701	ArgumentList	y0		1053933	1					
ANR	1054702	Argument	y0		1053933	0					
ANR	1054703	Identifier	y0		1053933	0					
ANR	1054704	Identifier	y_frac_min		1053933	1					
ANR	1054705	ExpressionStatement	y_top = int2fixed ( y0 ) + y_frac_max	172:12:5941:5975	1053933	7	True				
ANR	1054706	AssignmentExpression	y_top = int2fixed ( y0 ) + y_frac_max		1053933	0		=			
ANR	1054707	Identifier	y_top		1053933	0					
ANR	1054708	AdditiveExpression	int2fixed ( y0 ) + y_frac_max		1053933	1		+			
ANR	1054709	CallExpression	int2fixed ( y0 )		1053933	0					
ANR	1054710	Callee	int2fixed		1053933	0					
ANR	1054711	Identifier	int2fixed		1053933	0					
ANR	1054712	ArgumentList	y0		1053933	1					
ANR	1054713	Argument	y0		1053933	0					
ANR	1054714	Identifier	y0		1053933	0					
ANR	1054715	Identifier	y_frac_max		1053933	1					
ANR	1054716	ExpressionStatement	new_band = true	173:12:5989:6004	1053933	8	True				
ANR	1054717	AssignmentExpression	new_band = true		1053933	0		=			
ANR	1054718	Identifier	new_band		1053933	0					
ANR	1054719	Identifier	true		1053933	1					
ANR	1054720	ElseStatement	else		1053933	0					
ANR	1054721	ExpressionStatement	new_band = false	175:12:6033:6049	1053933	0	True				
ANR	1054722	AssignmentExpression	new_band = false		1053933	0		=			
ANR	1054723	Identifier	new_band		1053933	0					
ANR	1054724	Identifier	false		1053933	1					
ANR	1054725	IfStatement	if ( y <= y_top )		1053933	11					
ANR	1054726	Condition	y <= y_top	177:12:6064:6073	1053933	0	True				
ANR	1054727	RelationalExpression	y <= y_top		1053933	0		<=			
ANR	1054728	Identifier	y		1053933	0					
ANR	1054729	Identifier	y_top		1053933	1					
ANR	1054730	CompoundStatement		155:12:5336:5347	1053933	1					
ANR	1054731	IdentifierDeclStatement	fixed y_min ;	184:12:6379:6390	1053933	0	True				
ANR	1054732	IdentifierDecl	y_min		1053933	0					
ANR	1054733	IdentifierDeclType	fixed		1053933	0					
ANR	1054734	Identifier	y_min		1053933	1					
ANR	1054735	IfStatement	if ( new_band )		1053933	1					
ANR	1054736	Condition	new_band	186:16:6409:6416	1053933	0	True				
ANR	1054737	Identifier	new_band		1053933	0					
ANR	1054738	CompoundStatement		158:16:5394:5408	1053933	1					
ANR	1054739	IdentifierDeclStatement	int inside = 0 ;	187:16:6437:6451	1053933	0	True				
ANR	1054740	IdentifierDecl	inside = 0		1053933	0					
ANR	1054741	IdentifierDeclType	int		1053933	0					
ANR	1054742	Identifier	inside		1053933	1					
ANR	1054743	AssignmentExpression	inside = 0		1053933	2		=			
ANR	1054744	Identifier	inside		1053933	0					
ANR	1054745	PrimaryExpression	0		1053933	1					
ANR	1054746	ExpressionStatement	INCR ( band )	189:16:6470:6480	1053933	1	True				
ANR	1054747	CallExpression	INCR ( band )		1053933	0					
ANR	1054748	Callee	INCR		1053933	0					
ANR	1054749	Identifier	INCR		1053933	0					
ANR	1054750	ArgumentList	band		1053933	1					
ANR	1054751	Argument	band		1053933	0					
ANR	1054752	Identifier	band		1053933	0					
ANR	1054753	ForStatement	for ( alp = ll -> x_list ; alp != 0 ; alp = alp -> next )		1053933	2					
ANR	1054754	ForInit	alp = ll -> x_list ;	190:21:6503:6519	1053933	0	True				
ANR	1054755	AssignmentExpression	alp = ll -> x_list		1053933	0		=			
ANR	1054756	Identifier	alp		1053933	0					
ANR	1054757	PtrMemberAccess	ll -> x_list		1053933	1					
ANR	1054758	Identifier	ll		1053933	0					
ANR	1054759	Identifier	x_list		1053933	1					
ANR	1054760	Condition	alp != 0	190:39:6521:6528	1053933	1	True				
ANR	1054761	EqualityExpression	alp != 0		1053933	0		!=			
ANR	1054762	Identifier	alp		1053933	0					
ANR	1054763	PrimaryExpression	0		1053933	1					
ANR	1054764	AssignmentExpression	alp = alp -> next	190:49:6531:6545	1053933	2	True	=			
ANR	1054765	Identifier	alp		1053933	0					
ANR	1054766	PtrMemberAccess	alp -> next		1053933	1					
ANR	1054767	Identifier	alp		1053933	0					
ANR	1054768	Identifier	next		1053933	1					
ANR	1054769	CompoundStatement		162:20:5527:5587	1053933	3					
ANR	1054770	IdentifierDeclStatement	int x0 = fixed2int_pixround ( alp -> x_current - fo . adjust_left ) ;	191:20:6570:6630	1053933	0	True				
ANR	1054771	IdentifierDecl	x0 = fixed2int_pixround ( alp -> x_current - fo . adjust_left )		1053933	0					
ANR	1054772	IdentifierDeclType	int		1053933	0					
ANR	1054773	Identifier	x0		1053933	1					
ANR	1054774	AssignmentExpression	x0 = fixed2int_pixround ( alp -> x_current - fo . adjust_left )		1053933	2		=			
ANR	1054775	Identifier	x0		1053933	0					
ANR	1054776	CallExpression	fixed2int_pixround ( alp -> x_current - fo . adjust_left )		1053933	1					
ANR	1054777	Callee	fixed2int_pixround		1053933	0					
ANR	1054778	Identifier	fixed2int_pixround		1053933	0					
ANR	1054779	ArgumentList	alp -> x_current - fo . adjust_left		1053933	1					
ANR	1054780	Argument	alp -> x_current - fo . adjust_left		1053933	0					
ANR	1054781	AdditiveExpression	alp -> x_current - fo . adjust_left		1053933	0		-			
ANR	1054782	PtrMemberAccess	alp -> x_current		1053933	0					
ANR	1054783	Identifier	alp		1053933	0					
ANR	1054784	Identifier	x_current		1053933	1					
ANR	1054785	MemberAccess	fo . adjust_left		1053933	1					
ANR	1054786	Identifier	fo		1053933	0					
ANR	1054787	Identifier	adjust_left		1053933	1					
ANR	1054788	ForStatement	for ( ; ; )		1053933	1					
ANR	1054789	CompoundStatement		164:29:5619:5619	1053933	0					
ANR	1054790	ExpressionStatement	"print_al ( ll -> memory , ""step"" , alp )"	195:24:6748:6781	1053933	0	True				
ANR	1054791	CallExpression	"print_al ( ll -> memory , ""step"" , alp )"		1053933	0					
ANR	1054792	Callee	print_al		1053933	0					
ANR	1054793	Identifier	print_al		1053933	0					
ANR	1054794	ArgumentList	ll -> memory		1053933	1					
ANR	1054795	Argument	ll -> memory		1053933	0					
ANR	1054796	PtrMemberAccess	ll -> memory		1053933	0					
ANR	1054797	Identifier	ll		1053933	0					
ANR	1054798	Identifier	memory		1053933	1					
ANR	1054799	Argument	"""step"""		1053933	1					
ANR	1054800	PrimaryExpression	"""step"""		1053933	0					
ANR	1054801	Argument	alp		1053933	2					
ANR	1054802	Identifier	alp		1053933	0					
ANR	1054803	ExpressionStatement	INCR ( band_step )	196:24:6807:6822	1053933	1	True				
ANR	1054804	CallExpression	INCR ( band_step )		1053933	0					
ANR	1054805	Callee	INCR		1053933	0					
ANR	1054806	Identifier	INCR		1053933	0					
ANR	1054807	ArgumentList	band_step		1053933	1					
ANR	1054808	Argument	band_step		1053933	0					
ANR	1054809	Identifier	band_step		1053933	0					
ANR	1054810	ExpressionStatement	inside += alp -> direction	197:24:6848:6872	1053933	2	True				
ANR	1054811	AssignmentExpression	inside += alp -> direction		1053933	0		+=			
ANR	1054812	Identifier	inside		1053933	0					
ANR	1054813	PtrMemberAccess	alp -> direction		1053933	1					
ANR	1054814	Identifier	alp		1053933	0					
ANR	1054815	Identifier	direction		1053933	1					
ANR	1054816	IfStatement	"if ( ! INSIDE_PATH_P ( inside , fo . rule ) )"		1053933	3					
ANR	1054817	Condition	"! INSIDE_PATH_P ( inside , fo . rule )"	198:28:6902:6932	1053933	0	True				
ANR	1054818	UnaryOperationExpression	"! INSIDE_PATH_P ( inside , fo . rule )"		1053933	0					
ANR	1054819	UnaryOperator	!		1053933	0					
ANR	1054820	CallExpression	"INSIDE_PATH_P ( inside , fo . rule )"		1053933	1					
ANR	1054821	Callee	INSIDE_PATH_P		1053933	0					
ANR	1054822	Identifier	INSIDE_PATH_P		1053933	0					
ANR	1054823	ArgumentList	inside		1053933	1					
ANR	1054824	Argument	inside		1053933	0					
ANR	1054825	Identifier	inside		1053933	0					
ANR	1054826	Argument	fo . rule		1053933	1					
ANR	1054827	MemberAccess	fo . rule		1053933	0					
ANR	1054828	Identifier	fo		1053933	0					
ANR	1054829	Identifier	rule		1053933	1					
ANR	1054830	BreakStatement	break ;	199:28:6963:6968	1053933	1	True				
ANR	1054831	IfStatement	if ( ( alp = alp -> next ) == 0 )		1053933	4					
ANR	1054832	Condition	( alp = alp -> next ) == 0	206:28:7319:7340	1053933	0	True				
ANR	1054833	EqualityExpression	( alp = alp -> next ) == 0		1053933	0		==			
ANR	1054834	AssignmentExpression	alp = alp -> next		1053933	0		=			
ANR	1054835	Identifier	alp		1053933	0					
ANR	1054836	PtrMemberAccess	alp -> next		1053933	1					
ANR	1054837	Identifier	alp		1053933	0					
ANR	1054838	Identifier	next		1053933	1					
ANR	1054839	PrimaryExpression	0		1053933	1					
ANR	1054840	GotoStatement	goto out ;	207:28:7371:7379	1053933	1	True				
ANR	1054841	Identifier	out		1053933	0					
ANR	1054842	ExpressionStatement	"code = range_list_add ( & rlist , x0 , fixed2int_rounded ( alp -> x_current + fo . adjust_right ) )"	210:20:7506:7694	1053933	2	True				
ANR	1054843	AssignmentExpression	"code = range_list_add ( & rlist , x0 , fixed2int_rounded ( alp -> x_current + fo . adjust_right ) )"		1053933	0		=			
ANR	1054844	Identifier	code		1053933	0					
ANR	1054845	CallExpression	"range_list_add ( & rlist , x0 , fixed2int_rounded ( alp -> x_current + fo . adjust_right ) )"		1053933	1					
ANR	1054846	Callee	range_list_add		1053933	0					
ANR	1054847	Identifier	range_list_add		1053933	0					
ANR	1054848	ArgumentList	& rlist		1053933	1					
ANR	1054849	Argument	& rlist		1053933	0					
ANR	1054850	UnaryOperationExpression	& rlist		1053933	0					
ANR	1054851	UnaryOperator	&		1053933	0					
ANR	1054852	Identifier	rlist		1053933	1					
ANR	1054853	Argument	x0		1053933	1					
ANR	1054854	Identifier	x0		1053933	0					
ANR	1054855	Argument	fixed2int_rounded ( alp -> x_current + fo . adjust_right )		1053933	2					
ANR	1054856	CallExpression	fixed2int_rounded ( alp -> x_current + fo . adjust_right )		1053933	0					
ANR	1054857	Callee	fixed2int_rounded		1053933	0					
ANR	1054858	Identifier	fixed2int_rounded		1053933	0					
ANR	1054859	ArgumentList	alp -> x_current + fo . adjust_right		1053933	1					
ANR	1054860	Argument	alp -> x_current + fo . adjust_right		1053933	0					
ANR	1054861	AdditiveExpression	alp -> x_current + fo . adjust_right		1053933	0		+			
ANR	1054862	PtrMemberAccess	alp -> x_current		1053933	0					
ANR	1054863	Identifier	alp		1053933	0					
ANR	1054864	Identifier	x_current		1053933	1					
ANR	1054865	MemberAccess	fo . adjust_right		1053933	1					
ANR	1054866	Identifier	fo		1053933	0					
ANR	1054867	Identifier	adjust_right		1053933	1					
ANR	1054868	IfStatement	if ( code < 0 )		1053933	3					
ANR	1054869	Condition	code < 0	213:24:7720:7727	1053933	0	True				
ANR	1054870	RelationalExpression	code < 0		1053933	0		<			
ANR	1054871	Identifier	code		1053933	0					
ANR	1054872	PrimaryExpression	0		1053933	1					
ANR	1054873	GotoStatement	goto done ;	214:24:7754:7763	1053933	1	True				
ANR	1054874	Identifier	done		1053933	0					
ANR	1054875	Label	out :	216:12:7795:7798	1053933	3	True				
ANR	1054876	Identifier	out		1053933	0					
ANR	1054877	ExpressionStatement	y_min = min_fixed	217:16:7816:7833	1053933	4	True				
ANR	1054878	AssignmentExpression	y_min = min_fixed		1053933	0		=			
ANR	1054879	Identifier	y_min		1053933	0					
ANR	1054880	Identifier	min_fixed		1053933	1					
ANR	1054881	ElseStatement	else		1053933	0					
ANR	1054882	ExpressionStatement	y_min = y	219:16:7870:7879	1053933	0	True				
ANR	1054883	AssignmentExpression	y_min = y		1053933	0		=			
ANR	1054884	Identifier	y_min		1053933	0					
ANR	1054885	Identifier	y		1053933	1					
ANR	1054886	ForStatement	for ( alp = ll -> h_list0 ; alp != NULL ; alp = alp -> next )		1053933	2					
ANR	1054887	ForInit	alp = ll -> h_list0 ;	223:17:7946:7963	1053933	0	True				
ANR	1054888	AssignmentExpression	alp = ll -> h_list0		1053933	0		=			
ANR	1054889	Identifier	alp		1053933	0					
ANR	1054890	PtrMemberAccess	ll -> h_list0		1053933	1					
ANR	1054891	Identifier	ll		1053933	0					
ANR	1054892	Identifier	h_list0		1053933	1					
ANR	1054893	Condition	alp != NULL	223:36:7965:7975	1053933	1	True				
ANR	1054894	EqualityExpression	alp != NULL		1053933	0		!=			
ANR	1054895	Identifier	alp		1053933	0					
ANR	1054896	Identifier	NULL		1053933	1					
ANR	1054897	AssignmentExpression	alp = alp -> next	223:49:7978:7992	1053933	2	True	=			
ANR	1054898	Identifier	alp		1053933	0					
ANR	1054899	PtrMemberAccess	alp -> next		1053933	1					
ANR	1054900	Identifier	alp		1053933	0					
ANR	1054901	Identifier	next		1053933	1					
ANR	1054902	CompoundStatement		196:16:7028:7068	1053933	3					
ANR	1054903	IdentifierDeclStatement	"fixed x0 = min ( alp -> start . x , alp -> end . x ) ;"	224:16:8013:8053	1053933	0	True				
ANR	1054904	IdentifierDecl	"x0 = min ( alp -> start . x , alp -> end . x )"		1053933	0					
ANR	1054905	IdentifierDeclType	fixed		1053933	0					
ANR	1054906	Identifier	x0		1053933	1					
ANR	1054907	AssignmentExpression	"x0 = min ( alp -> start . x , alp -> end . x )"		1053933	2		=			
ANR	1054908	Identifier	x0		1053933	0					
ANR	1054909	CallExpression	"min ( alp -> start . x , alp -> end . x )"		1053933	1					
ANR	1054910	Callee	min		1053933	0					
ANR	1054911	Identifier	min		1053933	0					
ANR	1054912	ArgumentList	alp -> start . x		1053933	1					
ANR	1054913	Argument	alp -> start . x		1053933	0					
ANR	1054914	MemberAccess	alp -> start . x		1053933	0					
ANR	1054915	PtrMemberAccess	alp -> start		1053933	0					
ANR	1054916	Identifier	alp		1053933	0					
ANR	1054917	Identifier	start		1053933	1					
ANR	1054918	Identifier	x		1053933	1					
ANR	1054919	Argument	alp -> end . x		1053933	1					
ANR	1054920	MemberAccess	alp -> end . x		1053933	0					
ANR	1054921	PtrMemberAccess	alp -> end		1053933	0					
ANR	1054922	Identifier	alp		1053933	0					
ANR	1054923	Identifier	end		1053933	1					
ANR	1054924	Identifier	x		1053933	1					
ANR	1054925	IdentifierDeclStatement	"fixed x1 = max ( alp -> start . x , alp -> end . x ) ;"	225:16:8071:8111	1053933	1	True				
ANR	1054926	IdentifierDecl	"x1 = max ( alp -> start . x , alp -> end . x )"		1053933	0					
ANR	1054927	IdentifierDeclType	fixed		1053933	0					
ANR	1054928	Identifier	x1		1053933	1					
ANR	1054929	AssignmentExpression	"x1 = max ( alp -> start . x , alp -> end . x )"		1053933	2		=			
ANR	1054930	Identifier	x1		1053933	0					
ANR	1054931	CallExpression	"max ( alp -> start . x , alp -> end . x )"		1053933	1					
ANR	1054932	Callee	max		1053933	0					
ANR	1054933	Identifier	max		1053933	0					
ANR	1054934	ArgumentList	alp -> start . x		1053933	1					
ANR	1054935	Argument	alp -> start . x		1053933	0					
ANR	1054936	MemberAccess	alp -> start . x		1053933	0					
ANR	1054937	PtrMemberAccess	alp -> start		1053933	0					
ANR	1054938	Identifier	alp		1053933	0					
ANR	1054939	Identifier	start		1053933	1					
ANR	1054940	Identifier	x		1053933	1					
ANR	1054941	Argument	alp -> end . x		1053933	1					
ANR	1054942	MemberAccess	alp -> end . x		1053933	0					
ANR	1054943	PtrMemberAccess	alp -> end		1053933	0					
ANR	1054944	Identifier	alp		1053933	0					
ANR	1054945	Identifier	end		1053933	1					
ANR	1054946	Identifier	x		1053933	1					
ANR	1054947	ExpressionStatement	"code = range_list_add ( & rlist , fixed2int_rounded ( x0 - fo . adjust_left ) , fixed2int_rounded ( x1 + fo . adjust_right ) )"	227:16:8130:8286	1053933	2	True				
ANR	1054948	AssignmentExpression	"code = range_list_add ( & rlist , fixed2int_rounded ( x0 - fo . adjust_left ) , fixed2int_rounded ( x1 + fo . adjust_right ) )"		1053933	0		=			
ANR	1054949	Identifier	code		1053933	0					
ANR	1054950	CallExpression	"range_list_add ( & rlist , fixed2int_rounded ( x0 - fo . adjust_left ) , fixed2int_rounded ( x1 + fo . adjust_right ) )"		1053933	1					
ANR	1054951	Callee	range_list_add		1053933	0					
ANR	1054952	Identifier	range_list_add		1053933	0					
ANR	1054953	ArgumentList	& rlist		1053933	1					
ANR	1054954	Argument	& rlist		1053933	0					
ANR	1054955	UnaryOperationExpression	& rlist		1053933	0					
ANR	1054956	UnaryOperator	&		1053933	0					
ANR	1054957	Identifier	rlist		1053933	1					
ANR	1054958	Argument	fixed2int_rounded ( x0 - fo . adjust_left )		1053933	1					
ANR	1054959	CallExpression	fixed2int_rounded ( x0 - fo . adjust_left )		1053933	0					
ANR	1054960	Callee	fixed2int_rounded		1053933	0					
ANR	1054961	Identifier	fixed2int_rounded		1053933	0					
ANR	1054962	ArgumentList	x0 - fo . adjust_left		1053933	1					
ANR	1054963	Argument	x0 - fo . adjust_left		1053933	0					
ANR	1054964	AdditiveExpression	x0 - fo . adjust_left		1053933	0		-			
ANR	1054965	Identifier	x0		1053933	0					
ANR	1054966	MemberAccess	fo . adjust_left		1053933	1					
ANR	1054967	Identifier	fo		1053933	0					
ANR	1054968	Identifier	adjust_left		1053933	1					
ANR	1054969	Argument	fixed2int_rounded ( x1 + fo . adjust_right )		1053933	2					
ANR	1054970	CallExpression	fixed2int_rounded ( x1 + fo . adjust_right )		1053933	0					
ANR	1054971	Callee	fixed2int_rounded		1053933	0					
ANR	1054972	Identifier	fixed2int_rounded		1053933	0					
ANR	1054973	ArgumentList	x1 + fo . adjust_right		1053933	1					
ANR	1054974	Argument	x1 + fo . adjust_right		1053933	0					
ANR	1054975	AdditiveExpression	x1 + fo . adjust_right		1053933	0		+			
ANR	1054976	Identifier	x1		1053933	0					
ANR	1054977	MemberAccess	fo . adjust_right		1053933	1					
ANR	1054978	Identifier	fo		1053933	0					
ANR	1054979	Identifier	adjust_right		1053933	1					
ANR	1054980	IfStatement	if ( code < 0 )		1053933	3					
ANR	1054981	Condition	code < 0	229:20:8308:8315	1053933	0	True				
ANR	1054982	RelationalExpression	code < 0		1053933	0		<			
ANR	1054983	Identifier	code		1053933	0					
ANR	1054984	PrimaryExpression	0		1053933	1					
ANR	1054985	GotoStatement	goto done ;	230:20:8338:8347	1053933	1	True				
ANR	1054986	Identifier	done		1053933	0					
ANR	1054987	ExpressionStatement	"code = merge_ranges ( & rlist , ll , y_min , y_top )"	233:12:8376:8421	1053933	3	True				
ANR	1054988	AssignmentExpression	"code = merge_ranges ( & rlist , ll , y_min , y_top )"		1053933	0		=			
ANR	1054989	Identifier	code		1053933	0					
ANR	1054990	CallExpression	"merge_ranges ( & rlist , ll , y_min , y_top )"		1053933	1					
ANR	1054991	Callee	merge_ranges		1053933	0					
ANR	1054992	Identifier	merge_ranges		1053933	0					
ANR	1054993	ArgumentList	& rlist		1053933	1					
ANR	1054994	Argument	& rlist		1053933	0					
ANR	1054995	UnaryOperationExpression	& rlist		1053933	0					
ANR	1054996	UnaryOperator	&		1053933	0					
ANR	1054997	Identifier	rlist		1053933	1					
ANR	1054998	Argument	ll		1053933	1					
ANR	1054999	Identifier	ll		1053933	0					
ANR	1055000	Argument	y_min		1053933	2					
ANR	1055001	Identifier	y_min		1053933	0					
ANR	1055002	Argument	y_top		1053933	3					
ANR	1055003	Identifier	y_top		1053933	0					
ANR	1055004	ExpressionStatement	ll -> h_list0 = NULL	235:8:8478:8496	1053933	12	True				
ANR	1055005	AssignmentExpression	ll -> h_list0 = NULL		1053933	0		=			
ANR	1055006	PtrMemberAccess	ll -> h_list0		1053933	0					
ANR	1055007	Identifier	ll		1053933	0					
ANR	1055008	Identifier	h_list0		1053933	1					
ANR	1055009	Identifier	NULL		1053933	1					
ANR	1055010	Condition	code >= 0	236:13:8511:8519	1053933	1	True				
ANR	1055011	RelationalExpression	code >= 0		1053933	0		>=			
ANR	1055012	Identifier	code		1053933	0					
ANR	1055013	PrimaryExpression	0		1053933	1					
ANR	1055014	Label	done :	237:1:8524:8528	1053933	17	True				
ANR	1055015	Identifier	done		1053933	0					
ANR	1055016	ExpressionStatement	range_list_free ( & rlist )	238:4:8534:8557	1053933	18	True				
ANR	1055017	CallExpression	range_list_free ( & rlist )		1053933	0					
ANR	1055018	Callee	range_list_free		1053933	0					
ANR	1055019	Identifier	range_list_free		1053933	0					
ANR	1055020	ArgumentList	& rlist		1053933	1					
ANR	1055021	Argument	& rlist		1053933	0					
ANR	1055022	UnaryOperationExpression	& rlist		1053933	0					
ANR	1055023	UnaryOperator	&		1053933	0					
ANR	1055024	Identifier	rlist		1053933	1					
ANR	1055025	ReturnStatement	return code ;	239:4:8563:8574	1053933	19	True				
ANR	1055026	Identifier	code		1053933	0					
ANR	1055027	ReturnType	static int		1053933	1					
ANR	1055028	Identifier	TEMPLATE_spot_into_scanlines		1053933	2					
ANR	1055029	ParameterList	"line_list * ll , fixed band_mask"		1053933	3					
ANR	1055030	Parameter	line_list * ll	29:30:1010:1022	1053933	0	True				
ANR	1055031	ParameterType	line_list *		1053933	0					
ANR	1055032	Identifier	ll		1053933	1					
ANR	1055033	Parameter	fixed band_mask	29:45:1025:1039	1053933	1	True				
ANR	1055034	ParameterType	fixed		1053933	0					
ANR	1055035	Identifier	band_mask		1053933	1					
ANR	1055036	CFGEntryNode	ENTRY		1053933		True				
ANR	1055037	CFGExitNode	EXIT		1053933		True				
ANR	1055038	InfiniteForNode	true		1053933		True				
ANR	1055039	Symbol	ll -> memory		1053933						
ANR	1055040	Symbol	min_fixed		1053933						
ANR	1055041	Symbol	band_step		1053933						
ANR	1055042	Symbol	ll -> y_break		1053933						
ANR	1055043	Symbol	& fo		1053933						
ANR	1055044	Symbol	& rlist . last		1053933						
ANR	1055045	Symbol	alp -> next -> prev		1053933						
ANR	1055046	Symbol	range_list_add		1053933						
ANR	1055047	Symbol	LOOP_FILL_RECTANGLE_DIRECT		1053933						
ANR	1055048	Symbol	( ilp = ilp -> prev ) -> x_current		1053933						
ANR	1055049	Symbol	band		1053933						
ANR	1055050	Symbol	fo . ymax		1053933						
ANR	1055051	Symbol	fixed2int_rounded		1053933						
ANR	1055052	Symbol	yy		1053933						
ANR	1055053	Symbol	* ll		1053933						
ANR	1055054	Symbol	rlist . first		1053933						
ANR	1055055	Symbol	iter		1053933						
ANR	1055056	Symbol	fixed2int_pixround		1053933						
ANR	1055057	Symbol	ynext		1053933						
ANR	1055058	Symbol	countof		1053933						
ANR	1055059	Symbol	alp -> prev		1053933						
ANR	1055060	Symbol	band_mask		1053933						
ANR	1055061	Symbol	alp -> start . y		1053933						
ANR	1055062	Symbol	alp -> fi . y0		1053933						
ANR	1055063	Symbol	alp -> start . x		1053933						
ANR	1055064	Symbol	alp -> fi . y3		1053933						
ANR	1055065	Symbol	yll -> direction		1053933						
ANR	1055066	Symbol	* alp -> next		1053933						
ANR	1055067	Symbol	pcr -> rmin		1053933						
ANR	1055068	Symbol	AL_X_AT_Y		1053933						
ANR	1055069	Symbol	alp -> x_current		1053933						
ANR	1055070	Symbol	min		1053933						
ANR	1055071	Symbol	* ilp -> next		1053933						
ANR	1055072	Symbol	y_top		1053933						
ANR	1055073	Symbol	y_min		1053933						
ANR	1055074	Symbol	step_al		1053933						
ANR	1055075	Symbol	y_limit		1053933						
ANR	1055076	Symbol	new_band		1053933						
ANR	1055077	Symbol	max		1053933						
ANR	1055078	Symbol	rlist		1053933						
ANR	1055079	Symbol	alp -> prev -> next		1053933						
ANR	1055080	Symbol	fixed_fraction		1053933						
ANR	1055081	Symbol	nlp		1053933						
ANR	1055082	Symbol	alp -> next		1053933						
ANR	1055083	Symbol	alp -> end . y		1053933						
ANR	1055084	Symbol	alp -> end . x		1053933						
ANR	1055085	Symbol	int2fixed		1053933						
ANR	1055086	Symbol	ll -> x_head . x_current		1053933						
ANR	1055087	Symbol	x		1053933						
ANR	1055088	Symbol	* alp -> prev		1053933						
ANR	1055089	Symbol	INSIDE_PATH_P		1053933						
ANR	1055090	Symbol	y		1053933						
ANR	1055091	Symbol	fo . adjust_below		1053933						
ANR	1055092	Symbol	ll		1053933						
ANR	1055093	Symbol	* * ilp		1053933						
ANR	1055094	Symbol	alp -> end		1053933						
ANR	1055095	Symbol	ll -> y_list		1053933						
ANR	1055096	Symbol	* pcr		1053933						
ANR	1055097	Symbol	inside		1053933						
ANR	1055098	Symbol	pcr -> next		1053933						
ANR	1055099	Symbol	fixed2int		1053933						
ANR	1055100	Symbol	alp -> fi		1053933						
ANR	1055101	Symbol	move_al_by_y		1053933						
ANR	1055102	Symbol	ll -> x_list		1053933						
ANR	1055103	Symbol	fixed_1		1053933						
ANR	1055104	Symbol	ilp -> next		1053933						
ANR	1055105	Symbol	fixed_0		1053933						
ANR	1055106	Symbol	rlocal		1053933						
ANR	1055107	Symbol	fixed_epsilon		1053933						
ANR	1055108	Symbol	yll -> start . y		1053933						
ANR	1055109	Symbol	DIR_HORIZONTAL		1053933						
ANR	1055110	Symbol	* yll		1053933						
ANR	1055111	Symbol	NULL		1053933						
ANR	1055112	Symbol	alp		1053933						
ANR	1055113	Symbol	ll -> fo		1053933						
ANR	1055114	Symbol	ilp		1053933						
ANR	1055115	Symbol	fo . adjust_right		1053933						
ANR	1055116	Symbol	fo . adjust_left		1053933						
ANR	1055117	Symbol	alp -> more_flattened		1053933						
ANR	1055118	Symbol	ilp -> next -> prev		1053933						
ANR	1055119	Symbol	yll		1053933						
ANR	1055120	Symbol	true		1053933						
ANR	1055121	Symbol	x0		1053933						
ANR	1055122	Symbol	alp -> start		1053933						
ANR	1055123	Symbol	x1		1053933						
ANR	1055124	Symbol	fo . rule		1053933						
ANR	1055125	Symbol	alp -> direction		1053933						
ANR	1055126	Symbol	* ll -> fo		1053933						
ANR	1055127	Symbol	code		1053933						
ANR	1055128	Symbol	yll -> start		1053933						
ANR	1055129	Symbol	end_x_line		1053933						
ANR	1055130	Symbol	fo		1053933						
ANR	1055131	Symbol	merge_ranges		1053933						
ANR	1055132	Symbol	nx		1053933						
ANR	1055133	Symbol	yll -> next		1053933						
ANR	1055134	Symbol	fo . adjust_above		1053933						
ANR	1055135	Symbol	pcr -> rmax		1053933						
ANR	1055136	Symbol	ll -> x_head		1053933						
ANR	1055137	Symbol	y_bot		1053933						
ANR	1055138	Symbol	ilp -> prev		1053933						
ANR	1055139	Symbol	ll -> h_list0		1053933						
ANR	1055140	Symbol	y0		1053933						
ANR	1055141	Symbol	& rlist		1053933						
ANR	1055142	Symbol	fixed_half		1053933						
ANR	1055143	Symbol	pcr		1053933						
ANR	1055144	Symbol	y_frac_max		1053933						
ANR	1055145	Symbol	* ilp		1053933						
ANR	1055146	Symbol	false		1053933						
ANR	1055147	Symbol	* * ll		1053933						
ANR	1055148	Symbol	* alp		1053933						
ANR	1055149	Symbol	rlist . first . next		1053933						
ANR	1055150	Symbol	y_frac_min		1053933						
ANR	1055151	Symbol	* * alp		1053933						
