command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3399674	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_base_ftutil.c								
ANR	3399675	Function	ft_mem_alloc	50:2:2799:3100							
ANR	3399676	FunctionDef	"ft_mem_alloc (FT_Memory memory , FT_Long size , FT_Error * p_error)"		3399675	0					
ANR	3399677	CompoundStatement		53:2:2904:3100	3399675	0					
ANR	3399678	IdentifierDeclStatement	FT_Error error ;	54:4:2910:2927	3399675	0	True				
ANR	3399679	IdentifierDecl	error		3399675	0					
ANR	3399680	IdentifierDeclType	FT_Error		3399675	0					
ANR	3399681	Identifier	error		3399675	1					
ANR	3399682	IdentifierDeclStatement	"FT_Pointer block = ft_mem_qalloc ( memory , size , & error ) ;"	55:4:2933:2990	3399675	1	True				
ANR	3399683	IdentifierDecl	"block = ft_mem_qalloc ( memory , size , & error )"		3399675	0					
ANR	3399684	IdentifierDeclType	FT_Pointer		3399675	0					
ANR	3399685	Identifier	block		3399675	1					
ANR	3399686	AssignmentExpression	"block = ft_mem_qalloc ( memory , size , & error )"		3399675	2		=			
ANR	3399687	Identifier	block		3399675	0					
ANR	3399688	CallExpression	"ft_mem_qalloc ( memory , size , & error )"		3399675	1					
ANR	3399689	Callee	ft_mem_qalloc		3399675	0					
ANR	3399690	Identifier	ft_mem_qalloc		3399675	0					
ANR	3399691	ArgumentList	memory		3399675	1					
ANR	3399692	Argument	memory		3399675	0					
ANR	3399693	Identifier	memory		3399675	0					
ANR	3399694	Argument	size		3399675	1					
ANR	3399695	Identifier	size		3399675	0					
ANR	3399696	Argument	& error		3399675	2					
ANR	3399697	UnaryOperationExpression	& error		3399675	0					
ANR	3399698	UnaryOperator	&		3399675	0					
ANR	3399699	Identifier	error		3399675	1					
ANR	3399700	IfStatement	if ( ! error && size > 0 )		3399675	2					
ANR	3399701	Condition	! error && size > 0	57:9:3002:3019	3399675	0	True				
ANR	3399702	AndExpression	! error && size > 0		3399675	0		&&			
ANR	3399703	UnaryOperationExpression	! error		3399675	0					
ANR	3399704	UnaryOperator	!		3399675	0					
ANR	3399705	Identifier	error		3399675	1					
ANR	3399706	RelationalExpression	size > 0		3399675	1		>			
ANR	3399707	Identifier	size		3399675	0					
ANR	3399708	PrimaryExpression	0		3399675	1					
ANR	3399709	ExpressionStatement	"FT_MEM_ZERO ( block , size )"	58:6:3029:3055	3399675	1	True				
ANR	3399710	CallExpression	"FT_MEM_ZERO ( block , size )"		3399675	0					
ANR	3399711	Callee	FT_MEM_ZERO		3399675	0					
ANR	3399712	Identifier	FT_MEM_ZERO		3399675	0					
ANR	3399713	ArgumentList	block		3399675	1					
ANR	3399714	Argument	block		3399675	0					
ANR	3399715	Identifier	block		3399675	0					
ANR	3399716	Argument	size		3399675	1					
ANR	3399717	Identifier	size		3399675	0					
ANR	3399718	ExpressionStatement	* p_error = error	60:4:3062:3078	3399675	3	True				
ANR	3399719	AssignmentExpression	* p_error = error		3399675	0		=			
ANR	3399720	UnaryOperationExpression	* p_error		3399675	0					
ANR	3399721	UnaryOperator	*		3399675	0					
ANR	3399722	Identifier	p_error		3399675	1					
ANR	3399723	Identifier	error		3399675	1					
ANR	3399724	ReturnStatement	return block ;	61:4:3084:3096	3399675	4	True				
ANR	3399725	Identifier	block		3399675	0					
ANR	3399726	Identifier	ft_mem_alloc		3399675	1					
ANR	3399727	ParameterList	"FT_Memory memory , FT_Long size , FT_Error * p_error"		3399675	2					
ANR	3399728	Parameter	FT_Memory memory	50:16:2813:2829	3399675	0	True				
ANR	3399729	ParameterType	FT_Memory		3399675	0					
ANR	3399730	Identifier	memory		3399675	1					
ANR	3399731	Parameter	FT_Long size	51:16:2848:2862	3399675	1	True				
ANR	3399732	ParameterType	FT_Long		3399675	0					
ANR	3399733	Identifier	size		3399675	1					
ANR	3399734	Parameter	FT_Error * p_error	52:16:2881:2898	3399675	2	True				
ANR	3399735	ParameterType	FT_Error *		3399675	0					
ANR	3399736	Identifier	p_error		3399675	1					
ANR	3399737	CFGEntryNode	ENTRY		3399675		True				
ANR	3399738	CFGExitNode	EXIT		3399675		True				
ANR	3399739	Symbol	p_error		3399675						
ANR	3399740	Symbol	& error		3399675						
ANR	3399741	Symbol	memory		3399675						
ANR	3399742	Symbol	size		3399675						
ANR	3399743	Symbol	* p_error		3399675						
ANR	3399744	Symbol	block		3399675						
ANR	3399745	Symbol	ft_mem_qalloc		3399675						
ANR	3399746	Symbol	error		3399675						
ANR	3399747	Function	ft_mem_qalloc	66:2:3134:3626							
ANR	3399748	FunctionDef	"ft_mem_qalloc (FT_Memory memory , FT_Long size , FT_Error * p_error)"		3399747	0					
ANR	3399749	CompoundStatement		69:2:3242:3626	3399747	0					
ANR	3399750	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	70:4:3248:3277	3399747	0	True				
ANR	3399751	IdentifierDecl	error = FT_Err_Ok		3399747	0					
ANR	3399752	IdentifierDeclType	FT_Error		3399747	0					
ANR	3399753	Identifier	error		3399747	1					
ANR	3399754	AssignmentExpression	error = FT_Err_Ok		3399747	2		=			
ANR	3399755	Identifier	FT_Err_Ok		3399747	0					
ANR	3399756	Identifier	FT_Err_Ok		3399747	1					
ANR	3399757	IdentifierDeclStatement	FT_Pointer block = NULL ;	71:4:3283:3307	3399747	1	True				
ANR	3399758	IdentifierDecl	block = NULL		3399747	0					
ANR	3399759	IdentifierDeclType	FT_Pointer		3399747	0					
ANR	3399760	Identifier	block		3399747	1					
ANR	3399761	AssignmentExpression	block = NULL		3399747	2		=			
ANR	3399762	Identifier	NULL		3399747	0					
ANR	3399763	Identifier	NULL		3399747	1					
ANR	3399764	IfStatement	if ( size > 0 )		3399747	2					
ANR	3399765	Condition	size > 0	74:9:3320:3327	3399747	0	True				
ANR	3399766	RelationalExpression	size > 0		3399747	0		>			
ANR	3399767	Identifier	size		3399747	0					
ANR	3399768	PrimaryExpression	0		3399747	1					
ANR	3399769	CompoundStatement		7:4:92:92	3399747	1					
ANR	3399770	ExpressionStatement	"block = memory -> alloc ( memory , size )"	76:6:3343:3380	3399747	0	True				
ANR	3399771	AssignmentExpression	"block = memory -> alloc ( memory , size )"		3399747	0		=			
ANR	3399772	Identifier	block		3399747	0					
ANR	3399773	CallExpression	"memory -> alloc ( memory , size )"		3399747	1					
ANR	3399774	Callee	memory -> alloc		3399747	0					
ANR	3399775	PtrMemberAccess	memory -> alloc		3399747	0					
ANR	3399776	Identifier	memory		3399747	0					
ANR	3399777	Identifier	alloc		3399747	1					
ANR	3399778	ArgumentList	memory		3399747	1					
ANR	3399779	Argument	memory		3399747	0					
ANR	3399780	Identifier	memory		3399747	0					
ANR	3399781	Argument	size		3399747	1					
ANR	3399782	Identifier	size		3399747	0					
ANR	3399783	IfStatement	if ( ! block )		3399747	1					
ANR	3399784	Condition	! block	77:11:3393:3398	3399747	0	True				
ANR	3399785	UnaryOperationExpression	! block		3399747	0					
ANR	3399786	UnaryOperator	!		3399747	0					
ANR	3399787	Identifier	block		3399747	1					
ANR	3399788	ExpressionStatement	error = FT_THROW ( Out_Of_Memory )	78:8:3410:3443	3399747	1	True				
ANR	3399789	AssignmentExpression	error = FT_THROW ( Out_Of_Memory )		3399747	0		=			
ANR	3399790	Identifier	error		3399747	0					
ANR	3399791	CallExpression	FT_THROW ( Out_Of_Memory )		3399747	1					
ANR	3399792	Callee	FT_THROW		3399747	0					
ANR	3399793	Identifier	FT_THROW		3399747	0					
ANR	3399794	ArgumentList	Out_Of_Memory		3399747	1					
ANR	3399795	Argument	Out_Of_Memory		3399747	0					
ANR	3399796	Identifier	Out_Of_Memory		3399747	0					
ANR	3399797	ElseStatement	else		3399747	0					
ANR	3399798	IfStatement	if ( size < 0 )		3399747	0					
ANR	3399799	Condition	size < 0	80:14:3465:3472	3399747	0	True				
ANR	3399800	RelationalExpression	size < 0		3399747	0		<			
ANR	3399801	Identifier	size		3399747	0					
ANR	3399802	PrimaryExpression	0		3399747	1					
ANR	3399803	CompoundStatement		13:4:237:237	3399747	1					
ANR	3399804	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	83:6:3539:3575	3399747	0	True				
ANR	3399805	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		3399747	0		=			
ANR	3399806	Identifier	error		3399747	0					
ANR	3399807	CallExpression	FT_THROW ( Invalid_Argument )		3399747	1					
ANR	3399808	Callee	FT_THROW		3399747	0					
ANR	3399809	Identifier	FT_THROW		3399747	0					
ANR	3399810	ArgumentList	Invalid_Argument		3399747	1					
ANR	3399811	Argument	Invalid_Argument		3399747	0					
ANR	3399812	Identifier	Invalid_Argument		3399747	0					
ANR	3399813	ExpressionStatement	* p_error = error	86:4:3588:3604	3399747	3	True				
ANR	3399814	AssignmentExpression	* p_error = error		3399747	0		=			
ANR	3399815	UnaryOperationExpression	* p_error		3399747	0					
ANR	3399816	UnaryOperator	*		3399747	0					
ANR	3399817	Identifier	p_error		3399747	1					
ANR	3399818	Identifier	error		3399747	1					
ANR	3399819	ReturnStatement	return block ;	87:4:3610:3622	3399747	4	True				
ANR	3399820	Identifier	block		3399747	0					
ANR	3399821	Identifier	ft_mem_qalloc		3399747	1					
ANR	3399822	ParameterList	"FT_Memory memory , FT_Long size , FT_Error * p_error"		3399747	2					
ANR	3399823	Parameter	FT_Memory memory	66:17:3149:3165	3399747	0	True				
ANR	3399824	ParameterType	FT_Memory		3399747	0					
ANR	3399825	Identifier	memory		3399747	1					
ANR	3399826	Parameter	FT_Long size	67:17:3185:3199	3399747	1	True				
ANR	3399827	ParameterType	FT_Long		3399747	0					
ANR	3399828	Identifier	size		3399747	1					
ANR	3399829	Parameter	FT_Error * p_error	68:17:3219:3236	3399747	2	True				
ANR	3399830	ParameterType	FT_Error *		3399747	0					
ANR	3399831	Identifier	p_error		3399747	1					
ANR	3399832	CFGEntryNode	ENTRY		3399747		True				
ANR	3399833	CFGExitNode	EXIT		3399747		True				
ANR	3399834	Symbol	p_error		3399747						
ANR	3399835	Symbol	memory		3399747						
ANR	3399836	Symbol	NULL		3399747						
ANR	3399837	Symbol	FT_Err_Ok		3399747						
ANR	3399838	Symbol	Invalid_Argument		3399747						
ANR	3399839	Symbol	error		3399747						
ANR	3399840	Symbol	* memory		3399747						
ANR	3399841	Symbol	FT_THROW		3399747						
ANR	3399842	Symbol	memory -> alloc		3399747						
ANR	3399843	Symbol	size		3399747						
ANR	3399844	Symbol	Out_Of_Memory		3399747						
ANR	3399845	Symbol	* p_error		3399747						
ANR	3399846	Symbol	block		3399747						
ANR	3399847	Function	ft_mem_realloc	92:2:3660:4248							
ANR	3399848	FunctionDef	"ft_mem_realloc (FT_Memory memory , FT_Long item_size , FT_Long cur_count , FT_Long new_count , void * block , FT_Error * p_error)"		3399847	0					
ANR	3399849	CompoundStatement		98:2:3892:4248	3399847	0					
ANR	3399850	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	99:4:3898:3925	3399847	0	True				
ANR	3399851	IdentifierDecl	error = FT_Err_Ok		3399847	0					
ANR	3399852	IdentifierDeclType	FT_Error		3399847	0					
ANR	3399853	Identifier	error		3399847	1					
ANR	3399854	AssignmentExpression	error = FT_Err_Ok		3399847	2		=			
ANR	3399855	Identifier	FT_Err_Ok		3399847	0					
ANR	3399856	Identifier	FT_Err_Ok		3399847	1					
ANR	3399857	ExpressionStatement	"block = ft_mem_qrealloc ( memory , item_size , cur_count , new_count , block , & error )"	102:4:3933:4043	3399847	1	True				
ANR	3399858	AssignmentExpression	"block = ft_mem_qrealloc ( memory , item_size , cur_count , new_count , block , & error )"		3399847	0		=			
ANR	3399859	Identifier	block		3399847	0					
ANR	3399860	CallExpression	"ft_mem_qrealloc ( memory , item_size , cur_count , new_count , block , & error )"		3399847	1					
ANR	3399861	Callee	ft_mem_qrealloc		3399847	0					
ANR	3399862	Identifier	ft_mem_qrealloc		3399847	0					
ANR	3399863	ArgumentList	memory		3399847	1					
ANR	3399864	Argument	memory		3399847	0					
ANR	3399865	Identifier	memory		3399847	0					
ANR	3399866	Argument	item_size		3399847	1					
ANR	3399867	Identifier	item_size		3399847	0					
ANR	3399868	Argument	cur_count		3399847	2					
ANR	3399869	Identifier	cur_count		3399847	0					
ANR	3399870	Argument	new_count		3399847	3					
ANR	3399871	Identifier	new_count		3399847	0					
ANR	3399872	Argument	block		3399847	4					
ANR	3399873	Identifier	block		3399847	0					
ANR	3399874	Argument	& error		3399847	5					
ANR	3399875	UnaryOperationExpression	& error		3399847	0					
ANR	3399876	UnaryOperator	&		3399847	0					
ANR	3399877	Identifier	error		3399847	1					
ANR	3399878	IfStatement	if ( ! error && new_count > cur_count )		3399847	2					
ANR	3399879	Condition	! error && new_count > cur_count	104:9:4054:4084	3399847	0	True				
ANR	3399880	AndExpression	! error && new_count > cur_count		3399847	0		&&			
ANR	3399881	UnaryOperationExpression	! error		3399847	0					
ANR	3399882	UnaryOperator	!		3399847	0					
ANR	3399883	Identifier	error		3399847	1					
ANR	3399884	RelationalExpression	new_count > cur_count		3399847	1		>			
ANR	3399885	Identifier	new_count		3399847	0					
ANR	3399886	Identifier	cur_count		3399847	1					
ANR	3399887	ExpressionStatement	"FT_MEM_ZERO ( ( char * ) block + cur_count * item_size , ( new_count - cur_count ) * item_size )"	105:6:4094:4203	3399847	1	True				
ANR	3399888	CallExpression	"FT_MEM_ZERO ( ( char * ) block + cur_count * item_size , ( new_count - cur_count ) * item_size )"		3399847	0					
ANR	3399889	Callee	FT_MEM_ZERO		3399847	0					
ANR	3399890	Identifier	FT_MEM_ZERO		3399847	0					
ANR	3399891	ArgumentList	( char * ) block + cur_count * item_size		3399847	1					
ANR	3399892	Argument	( char * ) block + cur_count * item_size		3399847	0					
ANR	3399893	AdditiveExpression	( char * ) block + cur_count * item_size		3399847	0		+			
ANR	3399894	CastExpression	( char * ) block		3399847	0					
ANR	3399895	CastTarget	char *		3399847	0					
ANR	3399896	Identifier	block		3399847	1					
ANR	3399897	MultiplicativeExpression	cur_count * item_size		3399847	1		*			
ANR	3399898	Identifier	cur_count		3399847	0					
ANR	3399899	Identifier	item_size		3399847	1					
ANR	3399900	Argument	( new_count - cur_count ) * item_size		3399847	1					
ANR	3399901	MultiplicativeExpression	( new_count - cur_count ) * item_size		3399847	0		*			
ANR	3399902	AdditiveExpression	new_count - cur_count		3399847	0		-			
ANR	3399903	Identifier	new_count		3399847	0					
ANR	3399904	Identifier	cur_count		3399847	1					
ANR	3399905	Identifier	item_size		3399847	1					
ANR	3399906	ExpressionStatement	* p_error = error	108:4:4210:4226	3399847	3	True				
ANR	3399907	AssignmentExpression	* p_error = error		3399847	0		=			
ANR	3399908	UnaryOperationExpression	* p_error		3399847	0					
ANR	3399909	UnaryOperator	*		3399847	0					
ANR	3399910	Identifier	p_error		3399847	1					
ANR	3399911	Identifier	error		3399847	1					
ANR	3399912	ReturnStatement	return block ;	109:4:4232:4244	3399847	4	True				
ANR	3399913	Identifier	block		3399847	0					
ANR	3399914	Identifier	ft_mem_realloc		3399847	1					
ANR	3399915	ParameterList	"FT_Memory memory , FT_Long item_size , FT_Long cur_count , FT_Long new_count , void * block , FT_Error * p_error"		3399847	2					
ANR	3399916	Parameter	FT_Memory memory	92:18:3676:3692	3399847	0	True				
ANR	3399917	ParameterType	FT_Memory		3399847	0					
ANR	3399918	Identifier	memory		3399847	1					
ANR	3399919	Parameter	FT_Long item_size	93:18:3713:3732	3399847	1	True				
ANR	3399920	ParameterType	FT_Long		3399847	0					
ANR	3399921	Identifier	item_size		3399847	1					
ANR	3399922	Parameter	FT_Long cur_count	94:18:3753:3772	3399847	2	True				
ANR	3399923	ParameterType	FT_Long		3399847	0					
ANR	3399924	Identifier	cur_count		3399847	1					
ANR	3399925	Parameter	FT_Long new_count	95:18:3793:3812	3399847	3	True				
ANR	3399926	ParameterType	FT_Long		3399847	0					
ANR	3399927	Identifier	new_count		3399847	1					
ANR	3399928	Parameter	void * block	96:18:3833:3848	3399847	4	True				
ANR	3399929	ParameterType	void *		3399847	0					
ANR	3399930	Identifier	block		3399847	1					
ANR	3399931	Parameter	FT_Error * p_error	97:18:3869:3886	3399847	5	True				
ANR	3399932	ParameterType	FT_Error *		3399847	0					
ANR	3399933	Identifier	p_error		3399847	1					
ANR	3399934	CFGEntryNode	ENTRY		3399847		True				
ANR	3399935	CFGExitNode	EXIT		3399847		True				
ANR	3399936	Symbol	p_error		3399847						
ANR	3399937	Symbol	& error		3399847						
ANR	3399938	Symbol	memory		3399847						
ANR	3399939	Symbol	FT_Err_Ok		3399847						
ANR	3399940	Symbol	new_count		3399847						
ANR	3399941	Symbol	* p_error		3399847						
ANR	3399942	Symbol	cur_count		3399847						
ANR	3399943	Symbol	block		3399847						
ANR	3399944	Symbol	error		3399847						
ANR	3399945	Symbol	item_size		3399847						
ANR	3399946	Symbol	ft_mem_qrealloc		3399847						
ANR	3399947	Function	ft_mem_qrealloc	114:2:4282:5689							
ANR	3399948	FunctionDef	"ft_mem_qrealloc (FT_Memory memory , FT_Long item_size , FT_Long cur_count , FT_Long new_count , void * block , FT_Error * p_error)"		3399947	0					
ANR	3399949	CompoundStatement		120:2:4520:5689	3399947	0					
ANR	3399950	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	121:4:4526:4553	3399947	0	True				
ANR	3399951	IdentifierDecl	error = FT_Err_Ok		3399947	0					
ANR	3399952	IdentifierDeclType	FT_Error		3399947	0					
ANR	3399953	Identifier	error		3399947	1					
ANR	3399954	AssignmentExpression	error = FT_Err_Ok		3399947	2		=			
ANR	3399955	Identifier	FT_Err_Ok		3399947	0					
ANR	3399956	Identifier	FT_Err_Ok		3399947	1					
ANR	3399957	IfStatement	if ( cur_count < 0 || new_count < 0 || item_size < 0 )		3399947	1					
ANR	3399958	Condition	cur_count < 0 || new_count < 0 || item_size < 0	128:9:4736:4782	3399947	0	True				
ANR	3399959	OrExpression	cur_count < 0 || new_count < 0 || item_size < 0		3399947	0		||			
ANR	3399960	RelationalExpression	cur_count < 0		3399947	0		<			
ANR	3399961	Identifier	cur_count		3399947	0					
ANR	3399962	PrimaryExpression	0		3399947	1					
ANR	3399963	OrExpression	new_count < 0 || item_size < 0		3399947	1		||			
ANR	3399964	RelationalExpression	new_count < 0		3399947	0		<			
ANR	3399965	Identifier	new_count		3399947	0					
ANR	3399966	PrimaryExpression	0		3399947	1					
ANR	3399967	RelationalExpression	item_size < 0		3399947	1		<			
ANR	3399968	Identifier	item_size		3399947	0					
ANR	3399969	PrimaryExpression	0		3399947	1					
ANR	3399970	CompoundStatement		10:4:269:269	3399947	1					
ANR	3399971	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	131:6:4855:4891	3399947	0	True				
ANR	3399972	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		3399947	0		=			
ANR	3399973	Identifier	error		3399947	0					
ANR	3399974	CallExpression	FT_THROW ( Invalid_Argument )		3399947	1					
ANR	3399975	Callee	FT_THROW		3399947	0					
ANR	3399976	Identifier	FT_THROW		3399947	0					
ANR	3399977	ArgumentList	Invalid_Argument		3399947	1					
ANR	3399978	Argument	Invalid_Argument		3399947	0					
ANR	3399979	Identifier	Invalid_Argument		3399947	0					
ANR	3399980	ElseStatement	else		3399947	0					
ANR	3399981	IfStatement	if ( new_count == 0 || item_size == 0 )		3399947	0					
ANR	3399982	Condition	new_count == 0 || item_size == 0	133:14:4913:4944	3399947	0	True				
ANR	3399983	OrExpression	new_count == 0 || item_size == 0		3399947	0		||			
ANR	3399984	EqualityExpression	new_count == 0		3399947	0		==			
ANR	3399985	Identifier	new_count		3399947	0					
ANR	3399986	PrimaryExpression	0		3399947	1					
ANR	3399987	EqualityExpression	item_size == 0		3399947	1		==			
ANR	3399988	Identifier	item_size		3399947	0					
ANR	3399989	PrimaryExpression	0		3399947	1					
ANR	3399990	CompoundStatement		15:4:431:431	3399947	1					
ANR	3399991	ExpressionStatement	"ft_mem_free ( memory , block )"	135:6:4960:4988	3399947	0	True				
ANR	3399992	CallExpression	"ft_mem_free ( memory , block )"		3399947	0					
ANR	3399993	Callee	ft_mem_free		3399947	0					
ANR	3399994	Identifier	ft_mem_free		3399947	0					
ANR	3399995	ArgumentList	memory		3399947	1					
ANR	3399996	Argument	memory		3399947	0					
ANR	3399997	Identifier	memory		3399947	0					
ANR	3399998	Argument	block		3399947	1					
ANR	3399999	Identifier	block		3399947	0					
ANR	3400000	ExpressionStatement	block = NULL	136:6:4996:5008	3399947	1	True				
ANR	3400001	AssignmentExpression	block = NULL		3399947	0		=			
ANR	3400002	Identifier	block		3399947	0					
ANR	3400003	Identifier	NULL		3399947	1					
ANR	3400004	ElseStatement	else		3399947	0					
ANR	3400005	IfStatement	if ( new_count > FT_INT_MAX / item_size )		3399947	0					
ANR	3400006	Condition	new_count > FT_INT_MAX / item_size	138:14:5030:5063	3399947	0	True				
ANR	3400007	RelationalExpression	new_count > FT_INT_MAX / item_size		3399947	0		>			
ANR	3400008	Identifier	new_count		3399947	0					
ANR	3400009	MultiplicativeExpression	FT_INT_MAX / item_size		3399947	1		/			
ANR	3400010	Identifier	FT_INT_MAX		3399947	0					
ANR	3400011	Identifier	item_size		3399947	1					
ANR	3400012	CompoundStatement		20:4:550:550	3399947	1					
ANR	3400013	ExpressionStatement	error = FT_THROW ( Array_Too_Large )	140:6:5079:5114	3399947	0	True				
ANR	3400014	AssignmentExpression	error = FT_THROW ( Array_Too_Large )		3399947	0		=			
ANR	3400015	Identifier	error		3399947	0					
ANR	3400016	CallExpression	FT_THROW ( Array_Too_Large )		3399947	1					
ANR	3400017	Callee	FT_THROW		3399947	0					
ANR	3400018	Identifier	FT_THROW		3399947	0					
ANR	3400019	ArgumentList	Array_Too_Large		3399947	1					
ANR	3400020	Argument	Array_Too_Large		3399947	0					
ANR	3400021	Identifier	Array_Too_Large		3399947	0					
ANR	3400022	ElseStatement	else		3399947	0					
ANR	3400023	IfStatement	if ( cur_count == 0 )		3399947	0					
ANR	3400024	Condition	cur_count == 0	142:14:5136:5149	3399947	0	True				
ANR	3400025	EqualityExpression	cur_count == 0		3399947	0		==			
ANR	3400026	Identifier	cur_count		3399947	0					
ANR	3400027	PrimaryExpression	0		3399947	1					
ANR	3400028	CompoundStatement		24:4:636:636	3399947	1					
ANR	3400029	ExpressionStatement	FT_ASSERT ( ! block )	144:6:5165:5184	3399947	0	True				
ANR	3400030	CallExpression	FT_ASSERT ( ! block )		3399947	0					
ANR	3400031	Callee	FT_ASSERT		3399947	0					
ANR	3400032	Identifier	FT_ASSERT		3399947	0					
ANR	3400033	ArgumentList	! block		3399947	1					
ANR	3400034	Argument	! block		3399947	0					
ANR	3400035	UnaryOperationExpression	! block		3399947	0					
ANR	3400036	UnaryOperator	!		3399947	0					
ANR	3400037	Identifier	block		3399947	1					
ANR	3400038	ExpressionStatement	"block = memory -> alloc ( memory , new_count * item_size )"	146:6:5193:5247	3399947	1	True				
ANR	3400039	AssignmentExpression	"block = memory -> alloc ( memory , new_count * item_size )"		3399947	0		=			
ANR	3400040	Identifier	block		3399947	0					
ANR	3400041	CallExpression	"memory -> alloc ( memory , new_count * item_size )"		3399947	1					
ANR	3400042	Callee	memory -> alloc		3399947	0					
ANR	3400043	PtrMemberAccess	memory -> alloc		3399947	0					
ANR	3400044	Identifier	memory		3399947	0					
ANR	3400045	Identifier	alloc		3399947	1					
ANR	3400046	ArgumentList	memory		3399947	1					
ANR	3400047	Argument	memory		3399947	0					
ANR	3400048	Identifier	memory		3399947	0					
ANR	3400049	Argument	new_count * item_size		3399947	1					
ANR	3400050	MultiplicativeExpression	new_count * item_size		3399947	0		*			
ANR	3400051	Identifier	new_count		3399947	0					
ANR	3400052	Identifier	item_size		3399947	1					
ANR	3400053	IfStatement	if ( block == NULL )		3399947	2					
ANR	3400054	Condition	block == NULL	147:11:5260:5272	3399947	0	True				
ANR	3400055	EqualityExpression	block == NULL		3399947	0		==			
ANR	3400056	Identifier	block		3399947	0					
ANR	3400057	Identifier	NULL		3399947	1					
ANR	3400058	ExpressionStatement	error = FT_THROW ( Out_Of_Memory )	148:8:5284:5317	3399947	1	True				
ANR	3400059	AssignmentExpression	error = FT_THROW ( Out_Of_Memory )		3399947	0		=			
ANR	3400060	Identifier	error		3399947	0					
ANR	3400061	CallExpression	FT_THROW ( Out_Of_Memory )		3399947	1					
ANR	3400062	Callee	FT_THROW		3399947	0					
ANR	3400063	Identifier	FT_THROW		3399947	0					
ANR	3400064	ArgumentList	Out_Of_Memory		3399947	1					
ANR	3400065	Argument	Out_Of_Memory		3399947	0					
ANR	3400066	Identifier	Out_Of_Memory		3399947	0					
ANR	3400067	ElseStatement	else		3399947	0					
ANR	3400068	CompoundStatement		35:6:903:947	3399947	0					
ANR	3400069	IdentifierDeclStatement	FT_Pointer block2 ;	152:6:5346:5364	3399947	0	True				
ANR	3400070	IdentifierDecl	block2		3399947	0					
ANR	3400071	IdentifierDeclType	FT_Pointer		3399947	0					
ANR	3400072	Identifier	block2		3399947	1					
ANR	3400073	IdentifierDeclStatement	FT_Long cur_size = cur_count * item_size ;	153:6:5372:5416	3399947	1	True				
ANR	3400074	IdentifierDecl	cur_size = cur_count * item_size		3399947	0					
ANR	3400075	IdentifierDeclType	FT_Long		3399947	0					
ANR	3400076	Identifier	cur_size		3399947	1					
ANR	3400077	AssignmentExpression	cur_size = cur_count * item_size		3399947	2		=			
ANR	3400078	Identifier	cur_size		3399947	0					
ANR	3400079	MultiplicativeExpression	cur_count * item_size		3399947	1		*			
ANR	3400080	Identifier	cur_count		3399947	0					
ANR	3400081	Identifier	item_size		3399947	1					
ANR	3400082	IdentifierDeclStatement	FT_Long new_size = new_count * item_size ;	154:6:5424:5468	3399947	2	True				
ANR	3400083	IdentifierDecl	new_size = new_count * item_size		3399947	0					
ANR	3400084	IdentifierDeclType	FT_Long		3399947	0					
ANR	3400085	Identifier	new_size		3399947	1					
ANR	3400086	AssignmentExpression	new_size = new_count * item_size		3399947	2		=			
ANR	3400087	Identifier	new_size		3399947	0					
ANR	3400088	MultiplicativeExpression	new_count * item_size		3399947	1		*			
ANR	3400089	Identifier	new_count		3399947	0					
ANR	3400090	Identifier	item_size		3399947	1					
ANR	3400091	ExpressionStatement	"block2 = memory -> realloc ( memory , cur_size , new_size , block )"	157:6:5478:5539	3399947	3	True				
ANR	3400092	AssignmentExpression	"block2 = memory -> realloc ( memory , cur_size , new_size , block )"		3399947	0		=			
ANR	3400093	Identifier	block2		3399947	0					
ANR	3400094	CallExpression	"memory -> realloc ( memory , cur_size , new_size , block )"		3399947	1					
ANR	3400095	Callee	memory -> realloc		3399947	0					
ANR	3400096	PtrMemberAccess	memory -> realloc		3399947	0					
ANR	3400097	Identifier	memory		3399947	0					
ANR	3400098	Identifier	realloc		3399947	1					
ANR	3400099	ArgumentList	memory		3399947	1					
ANR	3400100	Argument	memory		3399947	0					
ANR	3400101	Identifier	memory		3399947	0					
ANR	3400102	Argument	cur_size		3399947	1					
ANR	3400103	Identifier	cur_size		3399947	0					
ANR	3400104	Argument	new_size		3399947	2					
ANR	3400105	Identifier	new_size		3399947	0					
ANR	3400106	Argument	block		3399947	3					
ANR	3400107	Identifier	block		3399947	0					
ANR	3400108	IfStatement	if ( ! block2 )		3399947	4					
ANR	3400109	Condition	! block2	158:11:5552:5558	3399947	0	True				
ANR	3400110	UnaryOperationExpression	! block2		3399947	0					
ANR	3400111	UnaryOperator	!		3399947	0					
ANR	3400112	Identifier	block2		3399947	1					
ANR	3400113	ExpressionStatement	error = FT_THROW ( Out_Of_Memory )	159:8:5570:5603	3399947	1	True				
ANR	3400114	AssignmentExpression	error = FT_THROW ( Out_Of_Memory )		3399947	0		=			
ANR	3400115	Identifier	error		3399947	0					
ANR	3400116	CallExpression	FT_THROW ( Out_Of_Memory )		3399947	1					
ANR	3400117	Callee	FT_THROW		3399947	0					
ANR	3400118	Identifier	FT_THROW		3399947	0					
ANR	3400119	ArgumentList	Out_Of_Memory		3399947	1					
ANR	3400120	Argument	Out_Of_Memory		3399947	0					
ANR	3400121	Identifier	Out_Of_Memory		3399947	0					
ANR	3400122	ElseStatement	else		3399947	0					
ANR	3400123	ExpressionStatement	block = block2	161:8:5624:5638	3399947	0	True				
ANR	3400124	AssignmentExpression	block = block2		3399947	0		=			
ANR	3400125	Identifier	block		3399947	0					
ANR	3400126	Identifier	block2		3399947	1					
ANR	3400127	ExpressionStatement	* p_error = error	164:4:5651:5667	3399947	2	True				
ANR	3400128	AssignmentExpression	* p_error = error		3399947	0		=			
ANR	3400129	UnaryOperationExpression	* p_error		3399947	0					
ANR	3400130	UnaryOperator	*		3399947	0					
ANR	3400131	Identifier	p_error		3399947	1					
ANR	3400132	Identifier	error		3399947	1					
ANR	3400133	ReturnStatement	return block ;	165:4:5673:5685	3399947	3	True				
ANR	3400134	Identifier	block		3399947	0					
ANR	3400135	Identifier	ft_mem_qrealloc		3399947	1					
ANR	3400136	ParameterList	"FT_Memory memory , FT_Long item_size , FT_Long cur_count , FT_Long new_count , void * block , FT_Error * p_error"		3399947	2					
ANR	3400137	Parameter	FT_Memory memory	114:19:4299:4315	3399947	0	True				
ANR	3400138	ParameterType	FT_Memory		3399947	0					
ANR	3400139	Identifier	memory		3399947	1					
ANR	3400140	Parameter	FT_Long item_size	115:19:4337:4356	3399947	1	True				
ANR	3400141	ParameterType	FT_Long		3399947	0					
ANR	3400142	Identifier	item_size		3399947	1					
ANR	3400143	Parameter	FT_Long cur_count	116:19:4378:4397	3399947	2	True				
ANR	3400144	ParameterType	FT_Long		3399947	0					
ANR	3400145	Identifier	cur_count		3399947	1					
ANR	3400146	Parameter	FT_Long new_count	117:19:4419:4438	3399947	3	True				
ANR	3400147	ParameterType	FT_Long		3399947	0					
ANR	3400148	Identifier	new_count		3399947	1					
ANR	3400149	Parameter	void * block	118:19:4460:4475	3399947	4	True				
ANR	3400150	ParameterType	void *		3399947	0					
ANR	3400151	Identifier	block		3399947	1					
ANR	3400152	Parameter	FT_Error * p_error	119:19:4497:4514	3399947	5	True				
ANR	3400153	ParameterType	FT_Error *		3399947	0					
ANR	3400154	Identifier	p_error		3399947	1					
ANR	3400155	CFGEntryNode	ENTRY		3399947		True				
ANR	3400156	CFGExitNode	EXIT		3399947		True				
ANR	3400157	Symbol	p_error		3399947						
ANR	3400158	Symbol	memory		3399947						
ANR	3400159	Symbol	NULL		3399947						
ANR	3400160	Symbol	FT_Err_Ok		3399947						
ANR	3400161	Symbol	block2		3399947						
ANR	3400162	Symbol	FT_INT_MAX		3399947						
ANR	3400163	Symbol	cur_size		3399947						
ANR	3400164	Symbol	Invalid_Argument		3399947						
ANR	3400165	Symbol	error		3399947						
ANR	3400166	Symbol	* memory		3399947						
ANR	3400167	Symbol	item_size		3399947						
ANR	3400168	Symbol	FT_THROW		3399947						
ANR	3400169	Symbol	memory -> alloc		3399947						
ANR	3400170	Symbol	Array_Too_Large		3399947						
ANR	3400171	Symbol	memory -> realloc		3399947						
ANR	3400172	Symbol	new_count		3399947						
ANR	3400173	Symbol	Out_Of_Memory		3399947						
ANR	3400174	Symbol	new_size		3399947						
ANR	3400175	Symbol	* p_error		3399947						
ANR	3400176	Symbol	cur_count		3399947						
ANR	3400177	Symbol	block		3399947						
ANR	3400178	Function	ft_mem_free	170:2:5717:5840							
ANR	3400179	FunctionDef	"ft_mem_free (FT_Memory memory , const void * P)"		3400178	0					
ANR	3400180	CompoundStatement		172:2:5783:5840	3400178	0					
ANR	3400181	IfStatement	if ( P )		3400178	0					
ANR	3400182	Condition	P	173:9:5794:5794	3400178	0	True				
ANR	3400183	Identifier	P		3400178	0					
ANR	3400184	ExpressionStatement	"memory -> free ( memory , ( void * ) P )"	174:6:5804:5836	3400178	1	True				
ANR	3400185	CallExpression	"memory -> free ( memory , ( void * ) P )"		3400178	0					
ANR	3400186	Callee	memory -> free		3400178	0					
ANR	3400187	PtrMemberAccess	memory -> free		3400178	0					
ANR	3400188	Identifier	memory		3400178	0					
ANR	3400189	Identifier	free		3400178	1					
ANR	3400190	ArgumentList	memory		3400178	1					
ANR	3400191	Argument	memory		3400178	0					
ANR	3400192	Identifier	memory		3400178	0					
ANR	3400193	Argument	( void * ) P		3400178	1					
ANR	3400194	CastExpression	( void * ) P		3400178	0					
ANR	3400195	CastTarget	void *		3400178	0					
ANR	3400196	Identifier	P		3400178	1					
ANR	3400197	Identifier	ft_mem_free		3400178	1					
ANR	3400198	ParameterList	"FT_Memory memory , const void * P"		3400178	2					
ANR	3400199	Parameter	FT_Memory memory	170:15:5730:5747	3400178	0	True				
ANR	3400200	ParameterType	FT_Memory		3400178	0					
ANR	3400201	Identifier	memory		3400178	1					
ANR	3400202	Parameter	const void * P	171:15:5765:5777	3400178	1	True				
ANR	3400203	ParameterType	const void *		3400178	0					
ANR	3400204	Identifier	P		3400178	1					
ANR	3400205	CFGEntryNode	ENTRY		3400178		True				
ANR	3400206	CFGExitNode	EXIT		3400178		True				
ANR	3400207	Symbol	P		3400178						
ANR	3400208	Symbol	memory		3400178						
ANR	3400209	Function	ft_mem_dup	179:2:5874:6215							
ANR	3400210	FunctionDef	"ft_mem_dup (FT_Memory memory , const void * address , FT_ULong size , FT_Error * p_error)"		3400209	0					
ANR	3400211	CompoundStatement		183:2:6015:6215	3400209	0					
ANR	3400212	IdentifierDeclStatement	FT_Error error ;	184:4:6021:6038	3400209	0	True				
ANR	3400213	IdentifierDecl	error		3400209	0					
ANR	3400214	IdentifierDeclType	FT_Error		3400209	0					
ANR	3400215	Identifier	error		3400209	1					
ANR	3400216	IdentifierDeclStatement	"FT_Pointer p = ft_mem_qalloc ( memory , ( FT_Long ) size , & error ) ;"	185:4:6044:6106	3400209	1	True				
ANR	3400217	IdentifierDecl	"p = ft_mem_qalloc ( memory , ( FT_Long ) size , & error )"		3400209	0					
ANR	3400218	IdentifierDeclType	FT_Pointer		3400209	0					
ANR	3400219	Identifier	p		3400209	1					
ANR	3400220	AssignmentExpression	"p = ft_mem_qalloc ( memory , ( FT_Long ) size , & error )"		3400209	2		=			
ANR	3400221	Identifier	p		3400209	0					
ANR	3400222	CallExpression	"ft_mem_qalloc ( memory , ( FT_Long ) size , & error )"		3400209	1					
ANR	3400223	Callee	ft_mem_qalloc		3400209	0					
ANR	3400224	Identifier	ft_mem_qalloc		3400209	0					
ANR	3400225	ArgumentList	memory		3400209	1					
ANR	3400226	Argument	memory		3400209	0					
ANR	3400227	Identifier	memory		3400209	0					
ANR	3400228	Argument	( FT_Long ) size		3400209	1					
ANR	3400229	CastExpression	( FT_Long ) size		3400209	0					
ANR	3400230	CastTarget	FT_Long		3400209	0					
ANR	3400231	Identifier	size		3400209	1					
ANR	3400232	Argument	& error		3400209	2					
ANR	3400233	UnaryOperationExpression	& error		3400209	0					
ANR	3400234	UnaryOperator	&		3400209	0					
ANR	3400235	Identifier	error		3400209	1					
ANR	3400236	IfStatement	if ( ! error && address )		3400209	2					
ANR	3400237	Condition	! error && address	188:9:6119:6135	3400209	0	True				
ANR	3400238	AndExpression	! error && address		3400209	0		&&			
ANR	3400239	UnaryOperationExpression	! error		3400209	0					
ANR	3400240	UnaryOperator	!		3400209	0					
ANR	3400241	Identifier	error		3400209	1					
ANR	3400242	Identifier	address		3400209	1					
ANR	3400243	ExpressionStatement	"ft_memcpy ( p , address , size )"	189:6:6145:6174	3400209	1	True				
ANR	3400244	CallExpression	"ft_memcpy ( p , address , size )"		3400209	0					
ANR	3400245	Callee	ft_memcpy		3400209	0					
ANR	3400246	Identifier	ft_memcpy		3400209	0					
ANR	3400247	ArgumentList	p		3400209	1					
ANR	3400248	Argument	p		3400209	0					
ANR	3400249	Identifier	p		3400209	0					
ANR	3400250	Argument	address		3400209	1					
ANR	3400251	Identifier	address		3400209	0					
ANR	3400252	Argument	size		3400209	2					
ANR	3400253	Identifier	size		3400209	0					
ANR	3400254	ExpressionStatement	* p_error = error	191:4:6181:6197	3400209	3	True				
ANR	3400255	AssignmentExpression	* p_error = error		3400209	0		=			
ANR	3400256	UnaryOperationExpression	* p_error		3400209	0					
ANR	3400257	UnaryOperator	*		3400209	0					
ANR	3400258	Identifier	p_error		3400209	1					
ANR	3400259	Identifier	error		3400209	1					
ANR	3400260	ReturnStatement	return p ;	192:4:6203:6211	3400209	4	True				
ANR	3400261	Identifier	p		3400209	0					
ANR	3400262	Identifier	ft_mem_dup		3400209	1					
ANR	3400263	ParameterList	"FT_Memory memory , const void * address , FT_ULong size , FT_Error * p_error"		3400209	2					
ANR	3400264	Parameter	FT_Memory memory	179:14:5886:5904	3400209	0	True				
ANR	3400265	ParameterType	FT_Memory		3400209	0					
ANR	3400266	Identifier	memory		3400209	1					
ANR	3400267	Parameter	const void * address	180:14:5921:5940	3400209	1	True				
ANR	3400268	ParameterType	const void *		3400209	0					
ANR	3400269	Identifier	address		3400209	1					
ANR	3400270	Parameter	FT_ULong size	181:14:5957:5973	3400209	2	True				
ANR	3400271	ParameterType	FT_ULong		3400209	0					
ANR	3400272	Identifier	size		3400209	1					
ANR	3400273	Parameter	FT_Error * p_error	182:14:5990:6009	3400209	3	True				
ANR	3400274	ParameterType	FT_Error *		3400209	0					
ANR	3400275	Identifier	p_error		3400209	1					
ANR	3400276	CFGEntryNode	ENTRY		3400209		True				
ANR	3400277	CFGExitNode	EXIT		3400209		True				
ANR	3400278	Symbol	p		3400209						
ANR	3400279	Symbol	p_error		3400209						
ANR	3400280	Symbol	& error		3400209						
ANR	3400281	Symbol	memory		3400209						
ANR	3400282	Symbol	address		3400209						
ANR	3400283	Symbol	size		3400209						
ANR	3400284	Symbol	* p_error		3400209						
ANR	3400285	Symbol	ft_mem_qalloc		3400209						
ANR	3400286	Symbol	error		3400209						
ANR	3400287	Function	ft_mem_strdup	197:2:6249:6506							
ANR	3400288	FunctionDef	"ft_mem_strdup (FT_Memory memory , const char * str , FT_Error * p_error)"		3400287	0					
ANR	3400289	CompoundStatement		200:2:6362:6506	3400287	0					
ANR	3400290	IdentifierDeclStatement	FT_ULong len = str ? ( FT_ULong ) ft_strlen ( str ) + 1 : 0 ;	201:4:6368:6448	3400287	0	True				
ANR	3400291	IdentifierDecl	len = str ? ( FT_ULong ) ft_strlen ( str ) + 1 : 0		3400287	0					
ANR	3400292	IdentifierDeclType	FT_ULong		3400287	0					
ANR	3400293	Identifier	len		3400287	1					
ANR	3400294	AssignmentExpression	len = str ? ( FT_ULong ) ft_strlen ( str ) + 1 : 0		3400287	2		=			
ANR	3400295	Identifier	len		3400287	0					
ANR	3400296	ConditionalExpression	str ? ( FT_ULong ) ft_strlen ( str ) + 1 : 0		3400287	1					
ANR	3400297	Condition	str		3400287	0					
ANR	3400298	Identifier	str		3400287	0					
ANR	3400299	AdditiveExpression	( FT_ULong ) ft_strlen ( str ) + 1		3400287	1		+			
ANR	3400300	CastExpression	( FT_ULong ) ft_strlen ( str )		3400287	0					
ANR	3400301	CastTarget	FT_ULong		3400287	0					
ANR	3400302	CallExpression	ft_strlen ( str )		3400287	1					
ANR	3400303	Callee	ft_strlen		3400287	0					
ANR	3400304	Identifier	ft_strlen		3400287	0					
ANR	3400305	ArgumentList	str		3400287	1					
ANR	3400306	Argument	str		3400287	0					
ANR	3400307	Identifier	str		3400287	0					
ANR	3400308	PrimaryExpression	1		3400287	1					
ANR	3400309	PrimaryExpression	0		3400287	2					
ANR	3400310	ReturnStatement	"return ft_mem_dup ( memory , str , len , p_error ) ;"	205:4:6456:6502	3400287	1	True				
ANR	3400311	CallExpression	"ft_mem_dup ( memory , str , len , p_error )"		3400287	0					
ANR	3400312	Callee	ft_mem_dup		3400287	0					
ANR	3400313	Identifier	ft_mem_dup		3400287	0					
ANR	3400314	ArgumentList	memory		3400287	1					
ANR	3400315	Argument	memory		3400287	0					
ANR	3400316	Identifier	memory		3400287	0					
ANR	3400317	Argument	str		3400287	1					
ANR	3400318	Identifier	str		3400287	0					
ANR	3400319	Argument	len		3400287	2					
ANR	3400320	Identifier	len		3400287	0					
ANR	3400321	Argument	p_error		3400287	3					
ANR	3400322	Identifier	p_error		3400287	0					
ANR	3400323	Identifier	ft_mem_strdup		3400287	1					
ANR	3400324	ParameterList	"FT_Memory memory , const char * str , FT_Error * p_error"		3400287	2					
ANR	3400325	Parameter	FT_Memory memory	197:17:6264:6282	3400287	0	True				
ANR	3400326	ParameterType	FT_Memory		3400287	0					
ANR	3400327	Identifier	memory		3400287	1					
ANR	3400328	Parameter	const char * str	198:17:6302:6317	3400287	1	True				
ANR	3400329	ParameterType	const char *		3400287	0					
ANR	3400330	Identifier	str		3400287	1					
ANR	3400331	Parameter	FT_Error * p_error	199:17:6337:6356	3400287	2	True				
ANR	3400332	ParameterType	FT_Error *		3400287	0					
ANR	3400333	Identifier	p_error		3400287	1					
ANR	3400334	CFGEntryNode	ENTRY		3400287		True				
ANR	3400335	CFGExitNode	EXIT		3400287		True				
ANR	3400336	Symbol	str		3400287						
ANR	3400337	Symbol	p_error		3400287						
ANR	3400338	Symbol	memory		3400287						
ANR	3400339	Symbol	ft_strlen		3400287						
ANR	3400340	Symbol	len		3400287						
ANR	3400341	Symbol	ft_mem_dup		3400287						
ANR	3400342	Function	ft_mem_strcpyn	210:2:6536:6802							
ANR	3400343	FunctionDef	"ft_mem_strcpyn (char * dst , const char * src , FT_ULong size)"		3400342	0					
ANR	3400344	CompoundStatement		213:2:6646:6802	3400342	0					
ANR	3400345	WhileStatement	while ( size > 1 && * src != 0 )		3400342	0					
ANR	3400346	Condition	size > 1 && * src != 0	214:12:6660:6680	3400342	0	True				
ANR	3400347	AndExpression	size > 1 && * src != 0		3400342	0		&&			
ANR	3400348	RelationalExpression	size > 1		3400342	0		>			
ANR	3400349	Identifier	size		3400342	0					
ANR	3400350	PrimaryExpression	1		3400342	1					
ANR	3400351	EqualityExpression	* src != 0		3400342	1		!=			
ANR	3400352	UnaryOperationExpression	* src		3400342	0					
ANR	3400353	UnaryOperator	*		3400342	0					
ANR	3400354	Identifier	src		3400342	1					
ANR	3400355	PrimaryExpression	0		3400342	1					
ANR	3400356	CompoundStatement		3:4:41:41	3400342	1					
ANR	3400357	ExpressionStatement	* dst ++ = * src ++	216:6:6696:6711	3400342	0	True				
ANR	3400358	AssignmentExpression	* dst ++ = * src ++		3400342	0		=			
ANR	3400359	UnaryOperationExpression	* dst ++		3400342	0					
ANR	3400360	UnaryOperator	*		3400342	0					
ANR	3400361	PostIncDecOperationExpression	dst ++		3400342	1					
ANR	3400362	Identifier	dst		3400342	0					
ANR	3400363	IncDec	++		3400342	1					
ANR	3400364	UnaryOperationExpression	* src ++		3400342	1					
ANR	3400365	UnaryOperator	*		3400342	0					
ANR	3400366	PostIncDecOperationExpression	src ++		3400342	1					
ANR	3400367	Identifier	src		3400342	0					
ANR	3400368	IncDec	++		3400342	1					
ANR	3400369	ExpressionStatement	size --	217:6:6719:6725	3400342	1	True				
ANR	3400370	PostIncDecOperationExpression	size --		3400342	0					
ANR	3400371	Identifier	size		3400342	0					
ANR	3400372	IncDec	--		3400342	1					
ANR	3400373	ExpressionStatement	* dst = 0	220:4:6738:6746	3400342	1	True				
ANR	3400374	AssignmentExpression	* dst = 0		3400342	0		=			
ANR	3400375	UnaryOperationExpression	* dst		3400342	0					
ANR	3400376	UnaryOperator	*		3400342	0					
ANR	3400377	Identifier	dst		3400342	1					
ANR	3400378	PrimaryExpression	0		3400342	1					
ANR	3400379	ReturnStatement	return * src != 0 ;	222:4:6782:6798	3400342	2	True				
ANR	3400380	EqualityExpression	* src != 0		3400342	0		!=			
ANR	3400381	UnaryOperationExpression	* src		3400342	0					
ANR	3400382	UnaryOperator	*		3400342	0					
ANR	3400383	Identifier	src		3400342	1					
ANR	3400384	PrimaryExpression	0		3400342	1					
ANR	3400385	Identifier	ft_mem_strcpyn		3400342	1					
ANR	3400386	ParameterList	"char * dst , const char * src , FT_ULong size"		3400342	2					
ANR	3400387	Parameter	char * dst	210:18:6552:6567	3400342	0	True				
ANR	3400388	ParameterType	char *		3400342	0					
ANR	3400389	Identifier	dst		3400342	1					
ANR	3400390	Parameter	const char * src	211:18:6588:6603	3400342	1	True				
ANR	3400391	ParameterType	const char *		3400342	0					
ANR	3400392	Identifier	src		3400342	1					
ANR	3400393	Parameter	FT_ULong size	212:18:6624:6640	3400342	2	True				
ANR	3400394	ParameterType	FT_ULong		3400342	0					
ANR	3400395	Identifier	size		3400342	1					
ANR	3400396	CFGEntryNode	ENTRY		3400342		True				
ANR	3400397	CFGExitNode	EXIT		3400342		True				
ANR	3400398	Symbol	* dst		3400342						
ANR	3400399	Symbol	dst		3400342						
ANR	3400400	Symbol	size		3400342						
ANR	3400401	Symbol	src		3400342						
ANR	3400402	Symbol	* dst ++		3400342						
ANR	3400403	Symbol	* src ++		3400342						
ANR	3400404	Symbol	* src		3400342						
ANR	3400405	Function	FT_List_Find	244:2:7791:8064							
ANR	3400406	FunctionDef	"FT_List_Find (FT_List list , void * data)"		3400405	0					
ANR	3400407	CompoundStatement		246:2:7854:8064	3400405	0					
ANR	3400408	IdentifierDeclStatement	FT_ListNode cur ;	247:4:7860:7876	3400405	0	True				
ANR	3400409	IdentifierDecl	cur		3400405	0					
ANR	3400410	IdentifierDeclType	FT_ListNode		3400405	0					
ANR	3400411	Identifier	cur		3400405	1					
ANR	3400412	IfStatement	if ( ! list )		3400405	1					
ANR	3400413	Condition	! list	250:9:7889:7893	3400405	0	True				
ANR	3400414	UnaryOperationExpression	! list		3400405	0					
ANR	3400415	UnaryOperator	!		3400405	0					
ANR	3400416	Identifier	list		3400405	1					
ANR	3400417	ReturnStatement	return NULL ;	251:6:7903:7914	3400405	1	True				
ANR	3400418	Identifier	NULL		3400405	0					
ANR	3400419	ExpressionStatement	cur = list -> head	253:4:7921:7937	3400405	2	True				
ANR	3400420	AssignmentExpression	cur = list -> head		3400405	0		=			
ANR	3400421	Identifier	cur		3400405	0					
ANR	3400422	PtrMemberAccess	list -> head		3400405	1					
ANR	3400423	Identifier	list		3400405	0					
ANR	3400424	Identifier	head		3400405	1					
ANR	3400425	WhileStatement	while ( cur )		3400405	3					
ANR	3400426	Condition	cur	254:12:7951:7953	3400405	0	True				
ANR	3400427	Identifier	cur		3400405	0					
ANR	3400428	CompoundStatement		10:4:106:106	3400405	1					
ANR	3400429	IfStatement	if ( cur -> data == data )		3400405	0					
ANR	3400430	Condition	cur -> data == data	256:11:7974:7990	3400405	0	True				
ANR	3400431	EqualityExpression	cur -> data == data		3400405	0		==			
ANR	3400432	PtrMemberAccess	cur -> data		3400405	0					
ANR	3400433	Identifier	cur		3400405	0					
ANR	3400434	Identifier	data		3400405	1					
ANR	3400435	Identifier	data		3400405	1					
ANR	3400436	ReturnStatement	return cur ;	257:8:8002:8012	3400405	1	True				
ANR	3400437	Identifier	cur		3400405	0					
ANR	3400438	ExpressionStatement	cur = cur -> next	259:6:8021:8036	3400405	1	True				
ANR	3400439	AssignmentExpression	cur = cur -> next		3400405	0		=			
ANR	3400440	Identifier	cur		3400405	0					
ANR	3400441	PtrMemberAccess	cur -> next		3400405	1					
ANR	3400442	Identifier	cur		3400405	0					
ANR	3400443	Identifier	next		3400405	1					
ANR	3400444	ReturnStatement	return NULL ;	262:4:8049:8060	3400405	4	True				
ANR	3400445	Identifier	NULL		3400405	0					
ANR	3400446	Identifier	FT_List_Find		3400405	1					
ANR	3400447	ParameterList	"FT_List list , void * data"		3400405	2					
ANR	3400448	Parameter	FT_List list	244:16:7805:7817	3400405	0	True				
ANR	3400449	ParameterType	FT_List		3400405	0					
ANR	3400450	Identifier	list		3400405	1					
ANR	3400451	Parameter	void * data	245:16:7836:7848	3400405	1	True				
ANR	3400452	ParameterType	void *		3400405	0					
ANR	3400453	Identifier	data		3400405	1					
ANR	3400454	CFGEntryNode	ENTRY		3400405		True				
ANR	3400455	CFGExitNode	EXIT		3400405		True				
ANR	3400456	Symbol	list -> head		3400405						
ANR	3400457	Symbol	cur		3400405						
ANR	3400458	Symbol	NULL		3400405						
ANR	3400459	Symbol	data		3400405						
ANR	3400460	Symbol	* list		3400405						
ANR	3400461	Symbol	* cur		3400405						
ANR	3400462	Symbol	list		3400405						
ANR	3400463	Symbol	cur -> data		3400405						
ANR	3400464	Symbol	cur -> next		3400405						
ANR	3400465	Function	FT_List_Add	269:2:8132:8451							
ANR	3400466	FunctionDef	"FT_List_Add (FT_List list , FT_ListNode node)"		3400465	0					
ANR	3400467	CompoundStatement		271:2:8201:8451	3400465	0					
ANR	3400468	IdentifierDeclStatement	FT_ListNode before ;	272:4:8207:8226	3400465	0	True				
ANR	3400469	IdentifierDecl	before		3400465	0					
ANR	3400470	IdentifierDeclType	FT_ListNode		3400465	0					
ANR	3400471	Identifier	before		3400465	1					
ANR	3400472	IfStatement	if ( ! list || ! node )		3400465	1					
ANR	3400473	Condition	! list || ! node	275:9:8239:8252	3400465	0	True				
ANR	3400474	OrExpression	! list || ! node		3400465	0		||			
ANR	3400475	UnaryOperationExpression	! list		3400465	0					
ANR	3400476	UnaryOperator	!		3400465	0					
ANR	3400477	Identifier	list		3400465	1					
ANR	3400478	UnaryOperationExpression	! node		3400465	1					
ANR	3400479	UnaryOperator	!		3400465	0					
ANR	3400480	Identifier	node		3400465	1					
ANR	3400481	ReturnStatement	return ;	276:6:8262:8268	3400465	1	True				
ANR	3400482	ExpressionStatement	before = list -> tail	278:4:8275:8294	3400465	2	True				
ANR	3400483	AssignmentExpression	before = list -> tail		3400465	0		=			
ANR	3400484	Identifier	before		3400465	0					
ANR	3400485	PtrMemberAccess	list -> tail		3400465	1					
ANR	3400486	Identifier	list		3400465	0					
ANR	3400487	Identifier	tail		3400465	1					
ANR	3400488	ExpressionStatement	node -> next = NULL	280:4:8301:8318	3400465	3	True				
ANR	3400489	AssignmentExpression	node -> next = NULL		3400465	0		=			
ANR	3400490	PtrMemberAccess	node -> next		3400465	0					
ANR	3400491	Identifier	node		3400465	0					
ANR	3400492	Identifier	next		3400465	1					
ANR	3400493	Identifier	NULL		3400465	1					
ANR	3400494	ExpressionStatement	node -> prev = before	281:4:8324:8343	3400465	4	True				
ANR	3400495	AssignmentExpression	node -> prev = before		3400465	0		=			
ANR	3400496	PtrMemberAccess	node -> prev		3400465	0					
ANR	3400497	Identifier	node		3400465	0					
ANR	3400498	Identifier	prev		3400465	1					
ANR	3400499	Identifier	before		3400465	1					
ANR	3400500	IfStatement	if ( before )		3400465	5					
ANR	3400501	Condition	before	283:9:8355:8360	3400465	0	True				
ANR	3400502	Identifier	before		3400465	0					
ANR	3400503	ExpressionStatement	before -> next = node	284:6:8370:8389	3400465	1	True				
ANR	3400504	AssignmentExpression	before -> next = node		3400465	0		=			
ANR	3400505	PtrMemberAccess	before -> next		3400465	0					
ANR	3400506	Identifier	before		3400465	0					
ANR	3400507	Identifier	next		3400465	1					
ANR	3400508	Identifier	node		3400465	1					
ANR	3400509	ElseStatement	else		3400465	0					
ANR	3400510	ExpressionStatement	list -> head = node	286:6:8406:8423	3400465	0	True				
ANR	3400511	AssignmentExpression	list -> head = node		3400465	0		=			
ANR	3400512	PtrMemberAccess	list -> head		3400465	0					
ANR	3400513	Identifier	list		3400465	0					
ANR	3400514	Identifier	head		3400465	1					
ANR	3400515	Identifier	node		3400465	1					
ANR	3400516	ExpressionStatement	list -> tail = node	288:4:8430:8447	3400465	6	True				
ANR	3400517	AssignmentExpression	list -> tail = node		3400465	0		=			
ANR	3400518	PtrMemberAccess	list -> tail		3400465	0					
ANR	3400519	Identifier	list		3400465	0					
ANR	3400520	Identifier	tail		3400465	1					
ANR	3400521	Identifier	node		3400465	1					
ANR	3400522	Identifier	FT_List_Add		3400465	1					
ANR	3400523	ParameterList	"FT_List list , FT_ListNode node"		3400465	2					
ANR	3400524	Parameter	FT_List list	269:15:8145:8161	3400465	0	True				
ANR	3400525	ParameterType	FT_List		3400465	0					
ANR	3400526	Identifier	list		3400465	1					
ANR	3400527	Parameter	FT_ListNode node	270:15:8179:8195	3400465	1	True				
ANR	3400528	ParameterType	FT_ListNode		3400465	0					
ANR	3400529	Identifier	node		3400465	1					
ANR	3400530	CFGEntryNode	ENTRY		3400465		True				
ANR	3400531	CFGExitNode	EXIT		3400465		True				
ANR	3400532	Symbol	list -> head		3400465						
ANR	3400533	Symbol	node		3400465						
ANR	3400534	Symbol	NULL		3400465						
ANR	3400535	Symbol	node -> prev		3400465						
ANR	3400536	Symbol	before		3400465						
ANR	3400537	Symbol	* list		3400465						
ANR	3400538	Symbol	* before		3400465						
ANR	3400539	Symbol	* node		3400465						
ANR	3400540	Symbol	node -> next		3400465						
ANR	3400541	Symbol	list		3400465						
ANR	3400542	Symbol	before -> next		3400465						
ANR	3400543	Symbol	list -> tail		3400465						
ANR	3400544	Function	FT_List_Insert	295:2:8519:8840							
ANR	3400545	FunctionDef	"FT_List_Insert (FT_List list , FT_ListNode node)"		3400544	0					
ANR	3400546	CompoundStatement		297:2:8594:8840	3400544	0					
ANR	3400547	IdentifierDeclStatement	FT_ListNode after ;	298:4:8600:8618	3400544	0	True				
ANR	3400548	IdentifierDecl	after		3400544	0					
ANR	3400549	IdentifierDeclType	FT_ListNode		3400544	0					
ANR	3400550	Identifier	after		3400544	1					
ANR	3400551	IfStatement	if ( ! list || ! node )		3400544	1					
ANR	3400552	Condition	! list || ! node	301:9:8631:8644	3400544	0	True				
ANR	3400553	OrExpression	! list || ! node		3400544	0		||			
ANR	3400554	UnaryOperationExpression	! list		3400544	0					
ANR	3400555	UnaryOperator	!		3400544	0					
ANR	3400556	Identifier	list		3400544	1					
ANR	3400557	UnaryOperationExpression	! node		3400544	1					
ANR	3400558	UnaryOperator	!		3400544	0					
ANR	3400559	Identifier	node		3400544	1					
ANR	3400560	ReturnStatement	return ;	302:6:8654:8660	3400544	1	True				
ANR	3400561	ExpressionStatement	after = list -> head	304:4:8667:8685	3400544	2	True				
ANR	3400562	AssignmentExpression	after = list -> head		3400544	0		=			
ANR	3400563	Identifier	after		3400544	0					
ANR	3400564	PtrMemberAccess	list -> head		3400544	1					
ANR	3400565	Identifier	list		3400544	0					
ANR	3400566	Identifier	head		3400544	1					
ANR	3400567	ExpressionStatement	node -> next = after	306:4:8692:8710	3400544	3	True				
ANR	3400568	AssignmentExpression	node -> next = after		3400544	0		=			
ANR	3400569	PtrMemberAccess	node -> next		3400544	0					
ANR	3400570	Identifier	node		3400544	0					
ANR	3400571	Identifier	next		3400544	1					
ANR	3400572	Identifier	after		3400544	1					
ANR	3400573	ExpressionStatement	node -> prev = NULL	307:4:8716:8733	3400544	4	True				
ANR	3400574	AssignmentExpression	node -> prev = NULL		3400544	0		=			
ANR	3400575	PtrMemberAccess	node -> prev		3400544	0					
ANR	3400576	Identifier	node		3400544	0					
ANR	3400577	Identifier	prev		3400544	1					
ANR	3400578	Identifier	NULL		3400544	1					
ANR	3400579	IfStatement	if ( ! after )		3400544	5					
ANR	3400580	Condition	! after	309:9:8745:8750	3400544	0	True				
ANR	3400581	UnaryOperationExpression	! after		3400544	0					
ANR	3400582	UnaryOperator	!		3400544	0					
ANR	3400583	Identifier	after		3400544	1					
ANR	3400584	ExpressionStatement	list -> tail = node	310:6:8760:8777	3400544	1	True				
ANR	3400585	AssignmentExpression	list -> tail = node		3400544	0		=			
ANR	3400586	PtrMemberAccess	list -> tail		3400544	0					
ANR	3400587	Identifier	list		3400544	0					
ANR	3400588	Identifier	tail		3400544	1					
ANR	3400589	Identifier	node		3400544	1					
ANR	3400590	ElseStatement	else		3400544	0					
ANR	3400591	ExpressionStatement	after -> prev = node	312:6:8794:8812	3400544	0	True				
ANR	3400592	AssignmentExpression	after -> prev = node		3400544	0		=			
ANR	3400593	PtrMemberAccess	after -> prev		3400544	0					
ANR	3400594	Identifier	after		3400544	0					
ANR	3400595	Identifier	prev		3400544	1					
ANR	3400596	Identifier	node		3400544	1					
ANR	3400597	ExpressionStatement	list -> head = node	314:4:8819:8836	3400544	6	True				
ANR	3400598	AssignmentExpression	list -> head = node		3400544	0		=			
ANR	3400599	PtrMemberAccess	list -> head		3400544	0					
ANR	3400600	Identifier	list		3400544	0					
ANR	3400601	Identifier	head		3400544	1					
ANR	3400602	Identifier	node		3400544	1					
ANR	3400603	Identifier	FT_List_Insert		3400544	1					
ANR	3400604	ParameterList	"FT_List list , FT_ListNode node"		3400544	2					
ANR	3400605	Parameter	FT_List list	295:18:8535:8551	3400544	0	True				
ANR	3400606	ParameterType	FT_List		3400544	0					
ANR	3400607	Identifier	list		3400544	1					
ANR	3400608	Parameter	FT_ListNode node	296:18:8572:8588	3400544	1	True				
ANR	3400609	ParameterType	FT_ListNode		3400544	0					
ANR	3400610	Identifier	node		3400544	1					
ANR	3400611	CFGEntryNode	ENTRY		3400544		True				
ANR	3400612	CFGExitNode	EXIT		3400544		True				
ANR	3400613	Symbol	list -> head		3400544						
ANR	3400614	Symbol	node		3400544						
ANR	3400615	Symbol	* after		3400544						
ANR	3400616	Symbol	NULL		3400544						
ANR	3400617	Symbol	node -> prev		3400544						
ANR	3400618	Symbol	* list		3400544						
ANR	3400619	Symbol	* node		3400544						
ANR	3400620	Symbol	after		3400544						
ANR	3400621	Symbol	node -> next		3400544						
ANR	3400622	Symbol	list		3400544						
ANR	3400623	Symbol	after -> prev		3400544						
ANR	3400624	Symbol	list -> tail		3400544						
ANR	3400625	Function	FT_List_Remove	321:2:8908:9276							
ANR	3400626	FunctionDef	"FT_List_Remove (FT_List list , FT_ListNode node)"		3400625	0					
ANR	3400627	CompoundStatement		323:2:8983:9276	3400625	0					
ANR	3400628	IdentifierDeclStatement	"FT_ListNode before , after ;"	324:4:8989:9015	3400625	0	True				
ANR	3400629	IdentifierDecl	before		3400625	0					
ANR	3400630	IdentifierDeclType	FT_ListNode		3400625	0					
ANR	3400631	Identifier	before		3400625	1					
ANR	3400632	IdentifierDecl	after		3400625	1					
ANR	3400633	IdentifierDeclType	FT_ListNode		3400625	0					
ANR	3400634	Identifier	after		3400625	1					
ANR	3400635	IfStatement	if ( ! list || ! node )		3400625	1					
ANR	3400636	Condition	! list || ! node	327:9:9028:9041	3400625	0	True				
ANR	3400637	OrExpression	! list || ! node		3400625	0		||			
ANR	3400638	UnaryOperationExpression	! list		3400625	0					
ANR	3400639	UnaryOperator	!		3400625	0					
ANR	3400640	Identifier	list		3400625	1					
ANR	3400641	UnaryOperationExpression	! node		3400625	1					
ANR	3400642	UnaryOperator	!		3400625	0					
ANR	3400643	Identifier	node		3400625	1					
ANR	3400644	ReturnStatement	return ;	328:6:9051:9057	3400625	1	True				
ANR	3400645	ExpressionStatement	before = node -> prev	330:4:9064:9083	3400625	2	True				
ANR	3400646	AssignmentExpression	before = node -> prev		3400625	0		=			
ANR	3400647	Identifier	before		3400625	0					
ANR	3400648	PtrMemberAccess	node -> prev		3400625	1					
ANR	3400649	Identifier	node		3400625	0					
ANR	3400650	Identifier	prev		3400625	1					
ANR	3400651	ExpressionStatement	after = node -> next	331:4:9089:9108	3400625	3	True				
ANR	3400652	AssignmentExpression	after = node -> next		3400625	0		=			
ANR	3400653	Identifier	after		3400625	0					
ANR	3400654	PtrMemberAccess	node -> next		3400625	1					
ANR	3400655	Identifier	node		3400625	0					
ANR	3400656	Identifier	next		3400625	1					
ANR	3400657	IfStatement	if ( before )		3400625	4					
ANR	3400658	Condition	before	333:9:9120:9125	3400625	0	True				
ANR	3400659	Identifier	before		3400625	0					
ANR	3400660	ExpressionStatement	before -> next = after	334:6:9135:9155	3400625	1	True				
ANR	3400661	AssignmentExpression	before -> next = after		3400625	0		=			
ANR	3400662	PtrMemberAccess	before -> next		3400625	0					
ANR	3400663	Identifier	before		3400625	0					
ANR	3400664	Identifier	next		3400625	1					
ANR	3400665	Identifier	after		3400625	1					
ANR	3400666	ElseStatement	else		3400625	0					
ANR	3400667	ExpressionStatement	list -> head = after	336:6:9172:9190	3400625	0	True				
ANR	3400668	AssignmentExpression	list -> head = after		3400625	0		=			
ANR	3400669	PtrMemberAccess	list -> head		3400625	0					
ANR	3400670	Identifier	list		3400625	0					
ANR	3400671	Identifier	head		3400625	1					
ANR	3400672	Identifier	after		3400625	1					
ANR	3400673	IfStatement	if ( after )		3400625	5					
ANR	3400674	Condition	after	338:9:9202:9206	3400625	0	True				
ANR	3400675	Identifier	after		3400625	0					
ANR	3400676	ExpressionStatement	after -> prev = before	339:6:9216:9236	3400625	1	True				
ANR	3400677	AssignmentExpression	after -> prev = before		3400625	0		=			
ANR	3400678	PtrMemberAccess	after -> prev		3400625	0					
ANR	3400679	Identifier	after		3400625	0					
ANR	3400680	Identifier	prev		3400625	1					
ANR	3400681	Identifier	before		3400625	1					
ANR	3400682	ElseStatement	else		3400625	0					
ANR	3400683	ExpressionStatement	list -> tail = before	341:6:9253:9272	3400625	0	True				
ANR	3400684	AssignmentExpression	list -> tail = before		3400625	0		=			
ANR	3400685	PtrMemberAccess	list -> tail		3400625	0					
ANR	3400686	Identifier	list		3400625	0					
ANR	3400687	Identifier	tail		3400625	1					
ANR	3400688	Identifier	before		3400625	1					
ANR	3400689	Identifier	FT_List_Remove		3400625	1					
ANR	3400690	ParameterList	"FT_List list , FT_ListNode node"		3400625	2					
ANR	3400691	Parameter	FT_List list	321:18:8924:8940	3400625	0	True				
ANR	3400692	ParameterType	FT_List		3400625	0					
ANR	3400693	Identifier	list		3400625	1					
ANR	3400694	Parameter	FT_ListNode node	322:18:8961:8977	3400625	1	True				
ANR	3400695	ParameterType	FT_ListNode		3400625	0					
ANR	3400696	Identifier	node		3400625	1					
ANR	3400697	CFGEntryNode	ENTRY		3400625		True				
ANR	3400698	CFGExitNode	EXIT		3400625		True				
ANR	3400699	Symbol	* after		3400625						
ANR	3400700	Symbol	before		3400625						
ANR	3400701	Symbol	* before		3400625						
ANR	3400702	Symbol	node -> next		3400625						
ANR	3400703	Symbol	list		3400625						
ANR	3400704	Symbol	list -> head		3400625						
ANR	3400705	Symbol	node		3400625						
ANR	3400706	Symbol	node -> prev		3400625						
ANR	3400707	Symbol	* list		3400625						
ANR	3400708	Symbol	* node		3400625						
ANR	3400709	Symbol	after		3400625						
ANR	3400710	Symbol	after -> prev		3400625						
ANR	3400711	Symbol	before -> next		3400625						
ANR	3400712	Symbol	list -> tail		3400625						
ANR	3400713	Function	FT_List_Up	348:2:9344:9864							
ANR	3400714	FunctionDef	"FT_List_Up (FT_List list , FT_ListNode node)"		3400713	0					
ANR	3400715	CompoundStatement		350:2:9411:9864	3400713	0					
ANR	3400716	IdentifierDeclStatement	"FT_ListNode before , after ;"	351:4:9417:9443	3400713	0	True				
ANR	3400717	IdentifierDecl	before		3400713	0					
ANR	3400718	IdentifierDeclType	FT_ListNode		3400713	0					
ANR	3400719	Identifier	before		3400713	1					
ANR	3400720	IdentifierDecl	after		3400713	1					
ANR	3400721	IdentifierDeclType	FT_ListNode		3400713	0					
ANR	3400722	Identifier	after		3400713	1					
ANR	3400723	IfStatement	if ( ! list || ! node )		3400713	1					
ANR	3400724	Condition	! list || ! node	354:9:9456:9469	3400713	0	True				
ANR	3400725	OrExpression	! list || ! node		3400713	0		||			
ANR	3400726	UnaryOperationExpression	! list		3400713	0					
ANR	3400727	UnaryOperator	!		3400713	0					
ANR	3400728	Identifier	list		3400713	1					
ANR	3400729	UnaryOperationExpression	! node		3400713	1					
ANR	3400730	UnaryOperator	!		3400713	0					
ANR	3400731	Identifier	node		3400713	1					
ANR	3400732	ReturnStatement	return ;	355:6:9479:9485	3400713	1	True				
ANR	3400733	ExpressionStatement	before = node -> prev	357:4:9492:9511	3400713	2	True				
ANR	3400734	AssignmentExpression	before = node -> prev		3400713	0		=			
ANR	3400735	Identifier	before		3400713	0					
ANR	3400736	PtrMemberAccess	node -> prev		3400713	1					
ANR	3400737	Identifier	node		3400713	0					
ANR	3400738	Identifier	prev		3400713	1					
ANR	3400739	ExpressionStatement	after = node -> next	358:4:9517:9536	3400713	3	True				
ANR	3400740	AssignmentExpression	after = node -> next		3400713	0		=			
ANR	3400741	Identifier	after		3400713	0					
ANR	3400742	PtrMemberAccess	node -> next		3400713	1					
ANR	3400743	Identifier	node		3400713	0					
ANR	3400744	Identifier	next		3400713	1					
ANR	3400745	IfStatement	if ( ! before )		3400713	4					
ANR	3400746	Condition	! before	361:9:9606:9612	3400713	0	True				
ANR	3400747	UnaryOperationExpression	! before		3400713	0					
ANR	3400748	UnaryOperator	!		3400713	0					
ANR	3400749	Identifier	before		3400713	1					
ANR	3400750	ReturnStatement	return ;	362:6:9622:9628	3400713	1	True				
ANR	3400751	ExpressionStatement	before -> next = after	364:4:9635:9655	3400713	5	True				
ANR	3400752	AssignmentExpression	before -> next = after		3400713	0		=			
ANR	3400753	PtrMemberAccess	before -> next		3400713	0					
ANR	3400754	Identifier	before		3400713	0					
ANR	3400755	Identifier	next		3400713	1					
ANR	3400756	Identifier	after		3400713	1					
ANR	3400757	IfStatement	if ( after )		3400713	6					
ANR	3400758	Condition	after	366:9:9667:9671	3400713	0	True				
ANR	3400759	Identifier	after		3400713	0					
ANR	3400760	ExpressionStatement	after -> prev = before	367:6:9681:9701	3400713	1	True				
ANR	3400761	AssignmentExpression	after -> prev = before		3400713	0		=			
ANR	3400762	PtrMemberAccess	after -> prev		3400713	0					
ANR	3400763	Identifier	after		3400713	0					
ANR	3400764	Identifier	prev		3400713	1					
ANR	3400765	Identifier	before		3400713	1					
ANR	3400766	ElseStatement	else		3400713	0					
ANR	3400767	ExpressionStatement	list -> tail = before	369:6:9718:9737	3400713	0	True				
ANR	3400768	AssignmentExpression	list -> tail = before		3400713	0		=			
ANR	3400769	PtrMemberAccess	list -> tail		3400713	0					
ANR	3400770	Identifier	list		3400713	0					
ANR	3400771	Identifier	tail		3400713	1					
ANR	3400772	Identifier	before		3400713	1					
ANR	3400773	ExpressionStatement	node -> prev = NULL	371:4:9744:9767	3400713	7	True				
ANR	3400774	AssignmentExpression	node -> prev = NULL		3400713	0		=			
ANR	3400775	PtrMemberAccess	node -> prev		3400713	0					
ANR	3400776	Identifier	node		3400713	0					
ANR	3400777	Identifier	prev		3400713	1					
ANR	3400778	Identifier	NULL		3400713	1					
ANR	3400779	ExpressionStatement	node -> next = list -> head	372:4:9773:9802	3400713	8	True				
ANR	3400780	AssignmentExpression	node -> next = list -> head		3400713	0		=			
ANR	3400781	PtrMemberAccess	node -> next		3400713	0					
ANR	3400782	Identifier	node		3400713	0					
ANR	3400783	Identifier	next		3400713	1					
ANR	3400784	PtrMemberAccess	list -> head		3400713	1					
ANR	3400785	Identifier	list		3400713	0					
ANR	3400786	Identifier	head		3400713	1					
ANR	3400787	ExpressionStatement	list -> head -> prev = node	373:4:9808:9831	3400713	9	True				
ANR	3400788	AssignmentExpression	list -> head -> prev = node		3400713	0		=			
ANR	3400789	PtrMemberAccess	list -> head -> prev		3400713	0					
ANR	3400790	PtrMemberAccess	list -> head		3400713	0					
ANR	3400791	Identifier	list		3400713	0					
ANR	3400792	Identifier	head		3400713	1					
ANR	3400793	Identifier	prev		3400713	1					
ANR	3400794	Identifier	node		3400713	1					
ANR	3400795	ExpressionStatement	list -> head = node	374:4:9837:9860	3400713	10	True				
ANR	3400796	AssignmentExpression	list -> head = node		3400713	0		=			
ANR	3400797	PtrMemberAccess	list -> head		3400713	0					
ANR	3400798	Identifier	list		3400713	0					
ANR	3400799	Identifier	head		3400713	1					
ANR	3400800	Identifier	node		3400713	1					
ANR	3400801	Identifier	FT_List_Up		3400713	1					
ANR	3400802	ParameterList	"FT_List list , FT_ListNode node"		3400713	2					
ANR	3400803	Parameter	FT_List list	348:14:9356:9372	3400713	0	True				
ANR	3400804	ParameterType	FT_List		3400713	0					
ANR	3400805	Identifier	list		3400713	1					
ANR	3400806	Parameter	FT_ListNode node	349:14:9389:9405	3400713	1	True				
ANR	3400807	ParameterType	FT_ListNode		3400713	0					
ANR	3400808	Identifier	node		3400713	1					
ANR	3400809	CFGEntryNode	ENTRY		3400713		True				
ANR	3400810	CFGExitNode	EXIT		3400713		True				
ANR	3400811	Symbol	* after		3400713						
ANR	3400812	Symbol	* list -> head		3400713						
ANR	3400813	Symbol	NULL		3400713						
ANR	3400814	Symbol	before		3400713						
ANR	3400815	Symbol	* before		3400713						
ANR	3400816	Symbol	list -> head -> prev		3400713						
ANR	3400817	Symbol	node -> next		3400713						
ANR	3400818	Symbol	list		3400713						
ANR	3400819	Symbol	list -> head		3400713						
ANR	3400820	Symbol	node		3400713						
ANR	3400821	Symbol	* * list		3400713						
ANR	3400822	Symbol	node -> prev		3400713						
ANR	3400823	Symbol	* list		3400713						
ANR	3400824	Symbol	* node		3400713						
ANR	3400825	Symbol	after		3400713						
ANR	3400826	Symbol	after -> prev		3400713						
ANR	3400827	Symbol	before -> next		3400713						
ANR	3400828	Symbol	list -> tail		3400713						
ANR	3400829	Function	FT_List_Iterate	381:2:9936:10409							
ANR	3400830	FunctionDef	"FT_List_Iterate (FT_List list , FT_List_Iterator iterator , void * user)"		3400829	0					
ANR	3400831	CompoundStatement		384:2:10070:10409	3400829	0					
ANR	3400832	IdentifierDeclStatement	FT_ListNode cur ;	385:4:10076:10092	3400829	0	True				
ANR	3400833	IdentifierDecl	cur		3400829	0					
ANR	3400834	IdentifierDeclType	FT_ListNode		3400829	0					
ANR	3400835	Identifier	cur		3400829	1					
ANR	3400836	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	386:4:10098:10128	3400829	1	True				
ANR	3400837	IdentifierDecl	error = FT_Err_Ok		3400829	0					
ANR	3400838	IdentifierDeclType	FT_Error		3400829	0					
ANR	3400839	Identifier	error		3400829	1					
ANR	3400840	AssignmentExpression	error = FT_Err_Ok		3400829	2		=			
ANR	3400841	Identifier	FT_Err_Ok		3400829	0					
ANR	3400842	Identifier	FT_Err_Ok		3400829	1					
ANR	3400843	IfStatement	if ( ! list || ! iterator )		3400829	2					
ANR	3400844	Condition	! list || ! iterator	389:9:10141:10158	3400829	0	True				
ANR	3400845	OrExpression	! list || ! iterator		3400829	0		||			
ANR	3400846	UnaryOperationExpression	! list		3400829	0					
ANR	3400847	UnaryOperator	!		3400829	0					
ANR	3400848	Identifier	list		3400829	1					
ANR	3400849	UnaryOperationExpression	! iterator		3400829	1					
ANR	3400850	UnaryOperator	!		3400829	0					
ANR	3400851	Identifier	iterator		3400829	1					
ANR	3400852	ReturnStatement	return FT_THROW ( Invalid_Argument ) ;	390:6:10168:10203	3400829	1	True				
ANR	3400853	CallExpression	FT_THROW ( Invalid_Argument )		3400829	0					
ANR	3400854	Callee	FT_THROW		3400829	0					
ANR	3400855	Identifier	FT_THROW		3400829	0					
ANR	3400856	ArgumentList	Invalid_Argument		3400829	1					
ANR	3400857	Argument	Invalid_Argument		3400829	0					
ANR	3400858	Identifier	Invalid_Argument		3400829	0					
ANR	3400859	ExpressionStatement	cur = list -> head	392:4:10210:10226	3400829	3	True				
ANR	3400860	AssignmentExpression	cur = list -> head		3400829	0		=			
ANR	3400861	Identifier	cur		3400829	0					
ANR	3400862	PtrMemberAccess	list -> head		3400829	1					
ANR	3400863	Identifier	list		3400829	0					
ANR	3400864	Identifier	head		3400829	1					
ANR	3400865	WhileStatement	while ( cur )		3400829	4					
ANR	3400866	Condition	cur	394:12:10241:10243	3400829	0	True				
ANR	3400867	Identifier	cur		3400829	0					
ANR	3400868	CompoundStatement		13:6:188:217	3400829	1					
ANR	3400869	IdentifierDeclStatement	FT_ListNode next = cur -> next ;	396:6:10259:10288	3400829	0	True				
ANR	3400870	IdentifierDecl	next = cur -> next		3400829	0					
ANR	3400871	IdentifierDeclType	FT_ListNode		3400829	0					
ANR	3400872	Identifier	next		3400829	1					
ANR	3400873	AssignmentExpression	next = cur -> next		3400829	2		=			
ANR	3400874	Identifier	next		3400829	0					
ANR	3400875	PtrMemberAccess	cur -> next		3400829	1					
ANR	3400876	Identifier	cur		3400829	0					
ANR	3400877	Identifier	next		3400829	1					
ANR	3400878	ExpressionStatement	"error = iterator ( cur , user )"	399:6:10298:10327	3400829	1	True				
ANR	3400879	AssignmentExpression	"error = iterator ( cur , user )"		3400829	0		=			
ANR	3400880	Identifier	error		3400829	0					
ANR	3400881	CallExpression	"iterator ( cur , user )"		3400829	1					
ANR	3400882	Callee	iterator		3400829	0					
ANR	3400883	Identifier	iterator		3400829	0					
ANR	3400884	ArgumentList	cur		3400829	1					
ANR	3400885	Argument	cur		3400829	0					
ANR	3400886	Identifier	cur		3400829	0					
ANR	3400887	Argument	user		3400829	1					
ANR	3400888	Identifier	user		3400829	0					
ANR	3400889	IfStatement	if ( error )		3400829	2					
ANR	3400890	Condition	error	400:11:10340:10344	3400829	0	True				
ANR	3400891	Identifier	error		3400829	0					
ANR	3400892	BreakStatement	break ;	401:8:10356:10361	3400829	1	True				
ANR	3400893	ExpressionStatement	cur = next	403:6:10370:10380	3400829	3	True				
ANR	3400894	AssignmentExpression	cur = next		3400829	0		=			
ANR	3400895	Identifier	cur		3400829	0					
ANR	3400896	Identifier	next		3400829	1					
ANR	3400897	ReturnStatement	return error ;	406:4:10393:10405	3400829	5	True				
ANR	3400898	Identifier	error		3400829	0					
ANR	3400899	Identifier	FT_List_Iterate		3400829	1					
ANR	3400900	ParameterList	"FT_List list , FT_List_Iterator iterator , void * user"		3400829	2					
ANR	3400901	Parameter	FT_List list	381:19:9953:9974	3400829	0	True				
ANR	3400902	ParameterType	FT_List		3400829	0					
ANR	3400903	Identifier	list		3400829	1					
ANR	3400904	Parameter	FT_List_Iterator iterator	382:19:9996:10021	3400829	1	True				
ANR	3400905	ParameterType	FT_List_Iterator		3400829	0					
ANR	3400906	Identifier	iterator		3400829	1					
ANR	3400907	Parameter	void * user	383:19:10043:10064	3400829	2	True				
ANR	3400908	ParameterType	void *		3400829	0					
ANR	3400909	Identifier	user		3400829	1					
ANR	3400910	CFGEntryNode	ENTRY		3400829		True				
ANR	3400911	CFGExitNode	EXIT		3400829		True				
ANR	3400912	Symbol	next		3400829						
ANR	3400913	Symbol	cur		3400829						
ANR	3400914	Symbol	FT_Err_Ok		3400829						
ANR	3400915	Symbol	Invalid_Argument		3400829						
ANR	3400916	Symbol	list		3400829						
ANR	3400917	Symbol	error		3400829						
ANR	3400918	Symbol	FT_THROW		3400829						
ANR	3400919	Symbol	list -> head		3400829						
ANR	3400920	Symbol	iterator		3400829						
ANR	3400921	Symbol	* list		3400829						
ANR	3400922	Symbol	* cur		3400829						
ANR	3400923	Symbol	user		3400829						
ANR	3400924	Symbol	cur -> next		3400829						
ANR	3400925	Function	FT_List_Finalize	413:2:10477:11014							
ANR	3400926	FunctionDef	"FT_List_Finalize (FT_List list , FT_List_Destructor destroy , FT_Memory memory , void * user)"		3400925	0					
ANR	3400927	CompoundStatement		417:2:10667:11014	3400925	0					
ANR	3400928	IdentifierDeclStatement	FT_ListNode cur ;	418:4:10673:10689	3400925	0	True				
ANR	3400929	IdentifierDecl	cur		3400925	0					
ANR	3400930	IdentifierDeclType	FT_ListNode		3400925	0					
ANR	3400931	Identifier	cur		3400925	1					
ANR	3400932	IfStatement	if ( ! list || ! memory )		3400925	1					
ANR	3400933	Condition	! list || ! memory	421:9:10702:10717	3400925	0	True				
ANR	3400934	OrExpression	! list || ! memory		3400925	0		||			
ANR	3400935	UnaryOperationExpression	! list		3400925	0					
ANR	3400936	UnaryOperator	!		3400925	0					
ANR	3400937	Identifier	list		3400925	1					
ANR	3400938	UnaryOperationExpression	! memory		3400925	1					
ANR	3400939	UnaryOperator	!		3400925	0					
ANR	3400940	Identifier	memory		3400925	1					
ANR	3400941	ReturnStatement	return ;	422:6:10727:10733	3400925	1	True				
ANR	3400942	ExpressionStatement	cur = list -> head	424:4:10740:10756	3400925	2	True				
ANR	3400943	AssignmentExpression	cur = list -> head		3400925	0		=			
ANR	3400944	Identifier	cur		3400925	0					
ANR	3400945	PtrMemberAccess	list -> head		3400925	1					
ANR	3400946	Identifier	list		3400925	0					
ANR	3400947	Identifier	head		3400925	1					
ANR	3400948	WhileStatement	while ( cur )		3400925	3					
ANR	3400949	Condition	cur	425:12:10770:10772	3400925	0	True				
ANR	3400950	Identifier	cur		3400925	0					
ANR	3400951	CompoundStatement		12:6:157:186	3400925	1					
ANR	3400952	IdentifierDeclStatement	FT_ListNode next = cur -> next ;	427:6:10788:10817	3400925	0	True				
ANR	3400953	IdentifierDecl	next = cur -> next		3400925	0					
ANR	3400954	IdentifierDeclType	FT_ListNode		3400925	0					
ANR	3400955	Identifier	next		3400925	1					
ANR	3400956	AssignmentExpression	next = cur -> next		3400925	2		=			
ANR	3400957	Identifier	next		3400925	0					
ANR	3400958	PtrMemberAccess	cur -> next		3400925	1					
ANR	3400959	Identifier	cur		3400925	0					
ANR	3400960	Identifier	next		3400925	1					
ANR	3400961	IdentifierDeclStatement	void * data = cur -> data ;	428:6:10825:10854	3400925	1	True				
ANR	3400962	IdentifierDecl	* data = cur -> data		3400925	0					
ANR	3400963	IdentifierDeclType	void *		3400925	0					
ANR	3400964	Identifier	data		3400925	1					
ANR	3400965	AssignmentExpression	* data = cur -> data		3400925	2		=			
ANR	3400966	Identifier	data		3400925	0					
ANR	3400967	PtrMemberAccess	cur -> data		3400925	1					
ANR	3400968	Identifier	cur		3400925	0					
ANR	3400969	Identifier	data		3400925	1					
ANR	3400970	IfStatement	if ( destroy )		3400925	2					
ANR	3400971	Condition	destroy	431:11:10869:10875	3400925	0	True				
ANR	3400972	Identifier	destroy		3400925	0					
ANR	3400973	ExpressionStatement	"destroy ( memory , data , user )"	432:8:10887:10916	3400925	1	True				
ANR	3400974	CallExpression	"destroy ( memory , data , user )"		3400925	0					
ANR	3400975	Callee	destroy		3400925	0					
ANR	3400976	Identifier	destroy		3400925	0					
ANR	3400977	ArgumentList	memory		3400925	1					
ANR	3400978	Argument	memory		3400925	0					
ANR	3400979	Identifier	memory		3400925	0					
ANR	3400980	Argument	data		3400925	1					
ANR	3400981	Identifier	data		3400925	0					
ANR	3400982	Argument	user		3400925	2					
ANR	3400983	Identifier	user		3400925	0					
ANR	3400984	ExpressionStatement	FT_FREE ( cur )	434:6:10925:10939	3400925	3	True				
ANR	3400985	CallExpression	FT_FREE ( cur )		3400925	0					
ANR	3400986	Callee	FT_FREE		3400925	0					
ANR	3400987	Identifier	FT_FREE		3400925	0					
ANR	3400988	ArgumentList	cur		3400925	1					
ANR	3400989	Argument	cur		3400925	0					
ANR	3400990	Identifier	cur		3400925	0					
ANR	3400991	ExpressionStatement	cur = next	435:6:10947:10957	3400925	4	True				
ANR	3400992	AssignmentExpression	cur = next		3400925	0		=			
ANR	3400993	Identifier	cur		3400925	0					
ANR	3400994	Identifier	next		3400925	1					
ANR	3400995	ExpressionStatement	list -> head = NULL	438:4:10970:10987	3400925	4	True				
ANR	3400996	AssignmentExpression	list -> head = NULL		3400925	0		=			
ANR	3400997	PtrMemberAccess	list -> head		3400925	0					
ANR	3400998	Identifier	list		3400925	0					
ANR	3400999	Identifier	head		3400925	1					
ANR	3401000	Identifier	NULL		3400925	1					
ANR	3401001	ExpressionStatement	list -> tail = NULL	439:4:10993:11010	3400925	5	True				
ANR	3401002	AssignmentExpression	list -> tail = NULL		3400925	0		=			
ANR	3401003	PtrMemberAccess	list -> tail		3400925	0					
ANR	3401004	Identifier	list		3400925	0					
ANR	3401005	Identifier	tail		3400925	1					
ANR	3401006	Identifier	NULL		3400925	1					
ANR	3401007	Identifier	FT_List_Finalize		3400925	1					
ANR	3401008	ParameterList	"FT_List list , FT_List_Destructor destroy , FT_Memory memory , void * user"		3400925	2					
ANR	3401009	Parameter	FT_List list	413:20:10495:10518	3400925	0	True				
ANR	3401010	ParameterType	FT_List		3400925	0					
ANR	3401011	Identifier	list		3400925	1					
ANR	3401012	Parameter	FT_List_Destructor destroy	414:20:10541:10567	3400925	1	True				
ANR	3401013	ParameterType	FT_List_Destructor		3400925	0					
ANR	3401014	Identifier	destroy		3400925	1					
ANR	3401015	Parameter	FT_Memory memory	415:20:10590:10615	3400925	2	True				
ANR	3401016	ParameterType	FT_Memory		3400925	0					
ANR	3401017	Identifier	memory		3400925	1					
ANR	3401018	Parameter	void * user	416:20:10638:10661	3400925	3	True				
ANR	3401019	ParameterType	void *		3400925	0					
ANR	3401020	Identifier	user		3400925	1					
ANR	3401021	CFGEntryNode	ENTRY		3400925		True				
ANR	3401022	CFGExitNode	EXIT		3400925		True				
ANR	3401023	Symbol	next		3400925						
ANR	3401024	Symbol	cur		3400925						
ANR	3401025	Symbol	memory		3400925						
ANR	3401026	Symbol	NULL		3400925						
ANR	3401027	Symbol	data		3400925						
ANR	3401028	Symbol	destroy		3400925						
ANR	3401029	Symbol	list		3400925						
ANR	3401030	Symbol	cur -> data		3400925						
ANR	3401031	Symbol	list -> head		3400925						
ANR	3401032	Symbol	* list		3400925						
ANR	3401033	Symbol	* cur		3400925						
ANR	3401034	Symbol	user		3400925						
ANR	3401035	Symbol	cur -> next		3400925						
ANR	3401036	Symbol	list -> tail		3400925						
