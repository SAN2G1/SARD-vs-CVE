command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5978858	File	data/converged/CVE-2018-16863_ghostpdl/igc.c								
ANR	5978859	DeclStmt									
ANR	5978860	Decl							const bool	const bool	I_FORCE_GLOBAL_GC
ANR	5978861	DeclStmt									
ANR	5978862	Decl							const bool	const bool	I_BYPASS_GC
ANR	5978863	ClassDef	<unnamed>	42:8:1236:1304							
ANR	5978864	DeclStmt									
ANR	5978865	Decl							void	void *	ptr
ANR	5978866	DeclStmt									
ANR	5978867	Decl							uint	uint	index
ANR	5978868	DeclStmt									
ANR	5978869	Decl							bool	bool	is_refs
ANR	5978870	DeclStmt									
ANR	5978871	Decl									ms_entry
ANR	5978872	DeclStmt									
ANR	5978873	Decl							struct gc_mark_stack_s	struct gc_mark_stack_s	gc_mark_stack
ANR	5978874	ClassDef	gc_mark_stack_s	52:0:1517:1687							
ANR	5978875	DeclStmt									
ANR	5978876	Decl							gc_mark_stack	gc_mark_stack *	prev
ANR	5978877	DeclStmt									
ANR	5978878	Decl							gc_mark_stack	gc_mark_stack *	next
ANR	5978879	DeclStmt									
ANR	5978880	Decl							uint	uint	count
ANR	5978881	DeclStmt									
ANR	5978882	Decl							bool	bool	on_heap
ANR	5978883	DeclStmt									
ANR	5978884	Decl							ms_entry	ms_entry [ 1 ]	entries
ANR	5978885	DeclStmt									
ANR	5978886	Decl							void	"void ( gc_mark_stack * , uint )"	gc_init_mark_stack
ANR	5978887	DeclStmt									
ANR	5978888	Decl							void	"void ( const gs_memory_t * mem , clump_t * )"	gc_objects_clear_marks
ANR	5978889	DeclStmt									
ANR	5978890	Decl							void	"void ( name_table * , op_array_table * , op_array_table * )"	gc_unmark_names
ANR	5978891	DeclStmt									
ANR	5978892	Decl							int	"int ( gs_gc_root_t * , gc_state_t * , gc_mark_stack * )"	gc_trace
ANR	5978893	DeclStmt									
ANR	5978894	Decl							int	"int ( clump_t * , gc_state_t * , gc_mark_stack * )"	gc_rescan_clump
ANR	5978895	DeclStmt									
ANR	5978896	Decl							int	"int ( const gs_memory_t * mem , clump_t * , gc_state_t * , gc_mark_stack * )"	gc_trace_clump
ANR	5978897	DeclStmt									
ANR	5978898	Decl							bool	bool ( gc_state_t * )	gc_trace_finish
ANR	5978899	DeclStmt									
ANR	5978900	Decl							void	void ( clump_t * )	gc_clear_reloc
ANR	5978901	DeclStmt									
ANR	5978902	Decl							void	"void ( gc_state_t * gcst , clump_t * )"	gc_objects_set_reloc
ANR	5978903	DeclStmt									
ANR	5978904	Decl							void	"void ( clump_t * , gs_ref_memory_t * , gc_state_t * )"	gc_do_reloc
ANR	5978905	DeclStmt									
ANR	5978906	Decl							void	"void ( clump_t * , gc_state_t * )"	gc_objects_compact
ANR	5978907	DeclStmt									
ANR	5978908	Decl							void	void ( gs_ref_memory_t * )	gc_free_empty_clumps
ANR	5978909	DeclStmt									
ANR	5978910	Decl							const gc_procs_with_refs_t	const gc_procs_with_refs_t	igc_procs
ANR	5978911	DeclStmt									
ANR	5978912	Decl							const gs_ptr_procs_t	const gs_ptr_procs_t	ptr_struct_procs
ANR	5978913	DeclStmt									
ANR	5978914	Decl							const gs_ptr_procs_t	const gs_ptr_procs_t	ptr_string_procs
ANR	5978915	DeclStmt									
ANR	5978916	Decl							const gs_ptr_procs_t	const gs_ptr_procs_t	ptr_const_string_procs
ANR	5978917	DeclStmt									
ANR	5978918	Decl							const gs_ptr_procs_t	const gs_ptr_procs_t	ptr_ref_procs
ANR	5978919	DeclStmt									
ANR	5978920	Decl							const gs_ptr_procs_t	const gs_ptr_procs_t	ptr_name_index_procs
ANR	5978921	Function	end_phase	123:0:4529:4761							
ANR	5978922	FunctionDef	"end_phase (const gs_memory_t * mem , const char * str)"		5978921	0					
ANR	5978923	CompoundStatement		125:0:4592:4761	5978921	0					
ANR	5978924	IfStatement	if ( gs_debug_c ( '6' ) )		5978921	0					
ANR	5978925	Condition	gs_debug_c ( '6' )	126:8:4602:4616	5978921	0	True				
ANR	5978926	CallExpression	gs_debug_c ( '6' )		5978921	0					
ANR	5978927	Callee	gs_debug_c		5978921	0					
ANR	5978928	Identifier	gs_debug_c		5978921	0					
ANR	5978929	ArgumentList	'6'		5978921	1					
ANR	5978930	Argument	'6'		5978921	0					
ANR	5978931	PrimaryExpression	'6'		5978921	0					
ANR	5978932	CompoundStatement		2:25:26:26	5978921	1					
ANR	5978933	ExpressionStatement	"dmlprintf1 ( mem , ""[6]---------------- end %s ----------------\\n"" , ( const char * ) str )"	127:8:4629:4731	5978921	0	True				
ANR	5978934	CallExpression	"dmlprintf1 ( mem , ""[6]---------------- end %s ----------------\\n"" , ( const char * ) str )"		5978921	0					
ANR	5978935	Callee	dmlprintf1		5978921	0					
ANR	5978936	Identifier	dmlprintf1		5978921	0					
ANR	5978937	ArgumentList	mem		5978921	1					
ANR	5978938	Argument	mem		5978921	0					
ANR	5978939	Identifier	mem		5978921	0					
ANR	5978940	Argument	"""[6]---------------- end %s ----------------\\n"""		5978921	1					
ANR	5978941	PrimaryExpression	"""[6]---------------- end %s ----------------\\n"""		5978921	0					
ANR	5978942	Argument	( const char * ) str		5978921	2					
ANR	5978943	CastExpression	( const char * ) str		5978921	0					
ANR	5978944	CastTarget	const char *		5978921	0					
ANR	5978945	Identifier	str		5978921	1					
ANR	5978946	ExpressionStatement	dmflush ( mem )	129:8:4741:4753	5978921	1	True				
ANR	5978947	CallExpression	dmflush ( mem )		5978921	0					
ANR	5978948	Callee	dmflush		5978921	0					
ANR	5978949	Identifier	dmflush		5978921	0					
ANR	5978950	ArgumentList	mem		5978921	1					
ANR	5978951	Argument	mem		5978921	0					
ANR	5978952	Identifier	mem		5978921	0					
ANR	5978953	ReturnType	static void		5978921	1					
ANR	5978954	Identifier	end_phase		5978921	2					
ANR	5978955	ParameterList	"const gs_memory_t * mem , const char * str"		5978921	3					
ANR	5978956	Parameter	const gs_memory_t * mem	124:10:4551:4572	5978921	0	True				
ANR	5978957	ParameterType	const gs_memory_t *		5978921	0					
ANR	5978958	Identifier	mem		5978921	1					
ANR	5978959	Parameter	const char * str	124:34:4575:4589	5978921	1	True				
ANR	5978960	ParameterType	const char *		5978921	0					
ANR	5978961	Identifier	str		5978921	1					
ANR	5978962	CFGEntryNode	ENTRY		5978921		True				
ANR	5978963	CFGExitNode	EXIT		5978921		True				
ANR	5978964	Symbol	str		5978921						
ANR	5978965	Symbol	mem		5978921						
ANR	5978966	Symbol	gs_debug_c		5978921						
ANR	5978967	Function	depth_dots	133:0:4822:5110							
ANR	5978968	FunctionDef	"depth_dots (const ms_entry * sp , const gc_mark_stack * pms)"		5978967	0					
ANR	5978969	CompoundStatement		135:0:4901:5110	5978967	0					
ANR	5978970	IdentifierDeclStatement	int depth = sp - pms -> entries - 1 ;	136:4:4907:4940	5978967	0	True				
ANR	5978971	IdentifierDecl	depth = sp - pms -> entries - 1		5978967	0					
ANR	5978972	IdentifierDeclType	int		5978967	0					
ANR	5978973	Identifier	depth		5978967	1					
ANR	5978974	AssignmentExpression	depth = sp - pms -> entries - 1		5978967	2		=			
ANR	5978975	Identifier	depth		5978967	0					
ANR	5978976	AdditiveExpression	sp - pms -> entries - 1		5978967	1		-			
ANR	5978977	Identifier	sp		5978967	0					
ANR	5978978	AdditiveExpression	pms -> entries - 1		5978967	1		-			
ANR	5978979	PtrMemberAccess	pms -> entries		5978967	0					
ANR	5978980	Identifier	pms		5978967	0					
ANR	5978981	Identifier	entries		5978967	1					
ANR	5978982	PrimaryExpression	1		5978967	1					
ANR	5978983	IdentifierDeclStatement	const gc_mark_stack * pss = pms ;	137:4:4946:4976	5978967	1	True				
ANR	5978984	IdentifierDecl	* pss = pms		5978967	0					
ANR	5978985	IdentifierDeclType	const gc_mark_stack *		5978967	0					
ANR	5978986	Identifier	pss		5978967	1					
ANR	5978987	AssignmentExpression	* pss = pms		5978967	2		=			
ANR	5978988	Identifier	pms		5978967	0					
ANR	5978989	Identifier	pms		5978967	1					
ANR	5978990	WhileStatement	while ( ( pss = pss -> prev ) != 0 )		5978967	2					
ANR	5978991	Condition	( pss = pss -> prev ) != 0	139:11:4990:5011	5978967	0	True				
ANR	5978992	EqualityExpression	( pss = pss -> prev ) != 0		5978967	0		!=			
ANR	5978993	AssignmentExpression	pss = pss -> prev		5978967	0		=			
ANR	5978994	Identifier	pss		5978967	0					
ANR	5978995	PtrMemberAccess	pss -> prev		5978967	1					
ANR	5978996	Identifier	pss		5978967	0					
ANR	5978997	Identifier	prev		5978967	1					
ANR	5978998	PrimaryExpression	0		5978967	1					
ANR	5978999	ExpressionStatement	depth += pss -> count - 1	140:8:5022:5045	5978967	1	True				
ANR	5979000	AssignmentExpression	depth += pss -> count - 1		5978967	0		+=			
ANR	5979001	Identifier	depth		5978967	0					
ANR	5979002	AdditiveExpression	pss -> count - 1		5978967	1		-			
ANR	5979003	PtrMemberAccess	pss -> count		5978967	0					
ANR	5979004	Identifier	pss		5978967	0					
ANR	5979005	Identifier	count		5978967	1					
ANR	5979006	PrimaryExpression	1		5978967	1					
ANR	5979007	ReturnStatement	return depth_dots_string + ( depth >= 10 ? 0 : 10 - depth ) ;	141:4:5051:5108	5978967	3	True				
ANR	5979008	AdditiveExpression	depth_dots_string + ( depth >= 10 ? 0 : 10 - depth )		5978967	0		+			
ANR	5979009	Identifier	depth_dots_string		5978967	0					
ANR	5979010	ConditionalExpression	depth >= 10 ? 0 : 10 - depth		5978967	1					
ANR	5979011	Condition	depth >= 10		5978967	0					
ANR	5979012	RelationalExpression	depth >= 10		5978967	0		>=			
ANR	5979013	Identifier	depth		5978967	0					
ANR	5979014	PrimaryExpression	10		5978967	1					
ANR	5979015	PrimaryExpression	0		5978967	1					
ANR	5979016	AdditiveExpression	10 - depth		5978967	2		-			
ANR	5979017	PrimaryExpression	10		5978967	0					
ANR	5979018	Identifier	depth		5978967	1					
ANR	5979019	ReturnType	static const char *		5978967	1					
ANR	5979020	Identifier	depth_dots		5978967	2					
ANR	5979021	ParameterList	"const ms_entry * sp , const gc_mark_stack * pms"		5978967	3					
ANR	5979022	Parameter	const ms_entry * sp	134:11:4853:4871	5978967	0	True				
ANR	5979023	ParameterType	const ms_entry *		5978967	0					
ANR	5979024	Identifier	sp		5978967	1					
ANR	5979025	Parameter	const gc_mark_stack * pms	134:32:4874:4898	5978967	1	True				
ANR	5979026	ParameterType	const gc_mark_stack *		5978967	0					
ANR	5979027	Identifier	pms		5978967	1					
ANR	5979028	CFGEntryNode	ENTRY		5978967		True				
ANR	5979029	CFGExitNode	EXIT		5978967		True				
ANR	5979030	Symbol	* pms		5978967						
ANR	5979031	Symbol	pss		5978967						
ANR	5979032	Symbol	pms -> entries		5978967						
ANR	5979033	Symbol	depth_dots_string		5978967						
ANR	5979034	Symbol	depth		5978967						
ANR	5979035	Symbol	pms		5978967						
ANR	5979036	Symbol	pss -> prev		5978967						
ANR	5979037	Symbol	pss -> count		5978967						
ANR	5979038	Symbol	* pss		5978967						
ANR	5979039	Symbol	sp		5978967						
ANR	5979040	Function	gc_validate_spaces	143:0:5112:5362							
ANR	5979041	FunctionDef	"gc_validate_spaces (gs_ref_memory_t * * spaces , int max_space , gc_state_t * gcst)"		5979040	0					
ANR	5979042	CompoundStatement		145:0:5202:5362	5979040	0					
ANR	5979043	IdentifierDeclStatement	int i ;	146:4:5208:5213	5979040	0	True				
ANR	5979044	IdentifierDecl	i		5979040	0					
ANR	5979045	IdentifierDeclType	int		5979040	0					
ANR	5979046	Identifier	i		5979040	1					
ANR	5979047	IdentifierDeclStatement	gs_ref_memory_t * mem ;	147:4:5219:5239	5979040	1	True				
ANR	5979048	IdentifierDecl	* mem		5979040	0					
ANR	5979049	IdentifierDeclType	gs_ref_memory_t *		5979040	0					
ANR	5979050	Identifier	mem		5979040	1					
ANR	5979051	ForStatement	for ( i = 1 ; i <= max_space ; ++ i )		5979040	2					
ANR	5979052	ForInit	i = 1 ;	149:9:5251:5256	5979040	0	True				
ANR	5979053	AssignmentExpression	i = 1		5979040	0		=			
ANR	5979054	Identifier	i		5979040	0					
ANR	5979055	PrimaryExpression	1		5979040	1					
ANR	5979056	Condition	i <= max_space	149:16:5258:5271	5979040	1	True				
ANR	5979057	RelationalExpression	i <= max_space		5979040	0		<=			
ANR	5979058	Identifier	i		5979040	0					
ANR	5979059	Identifier	max_space		5979040	1					
ANR	5979060	UnaryExpression	++ i	149:32:5274:5276	5979040	2	True				
ANR	5979061	IncDec	++		5979040	0					
ANR	5979062	Identifier	i		5979040	1					
ANR	5979063	IfStatement	if ( ( mem = spaces [ i ] ) != 0 )		5979040	3					
ANR	5979064	Condition	( mem = spaces [ i ] ) != 0	150:12:5291:5312	5979040	0	True				
ANR	5979065	EqualityExpression	( mem = spaces [ i ] ) != 0		5979040	0		!=			
ANR	5979066	AssignmentExpression	mem = spaces [ i ]		5979040	0		=			
ANR	5979067	Identifier	mem		5979040	0					
ANR	5979068	ArrayIndexing	spaces [ i ]		5979040	1					
ANR	5979069	Identifier	spaces		5979040	0					
ANR	5979070	Identifier	i		5979040	1					
ANR	5979071	PrimaryExpression	0		5979040	1					
ANR	5979072	ExpressionStatement	"ialloc_validate_memory ( mem , gcst )"	151:12:5327:5360	5979040	1	True				
ANR	5979073	CallExpression	"ialloc_validate_memory ( mem , gcst )"		5979040	0					
ANR	5979074	Callee	ialloc_validate_memory		5979040	0					
ANR	5979075	Identifier	ialloc_validate_memory		5979040	0					
ANR	5979076	ArgumentList	mem		5979040	1					
ANR	5979077	Argument	mem		5979040	0					
ANR	5979078	Identifier	mem		5979040	0					
ANR	5979079	Argument	gcst		5979040	1					
ANR	5979080	Identifier	gcst		5979040	0					
ANR	5979081	ReturnType	static void		5979040	1					
ANR	5979082	Identifier	gc_validate_spaces		5979040	2					
ANR	5979083	ParameterList	"gs_ref_memory_t * * spaces , int max_space , gc_state_t * gcst"		5979040	3					
ANR	5979084	Parameter	gs_ref_memory_t * * spaces	144:19:5143:5166	5979040	0	True				
ANR	5979085	ParameterType	gs_ref_memory_t * *		5979040	0					
ANR	5979086	Identifier	spaces		5979040	1					
ANR	5979087	Parameter	int max_space	144:45:5169:5181	5979040	1	True				
ANR	5979088	ParameterType	int		5979040	0					
ANR	5979089	Identifier	max_space		5979040	1					
ANR	5979090	Parameter	gc_state_t * gcst	144:60:5184:5199	5979040	2	True				
ANR	5979091	ParameterType	gc_state_t *		5979040	0					
ANR	5979092	Identifier	gcst		5979040	1					
ANR	5979093	CFGEntryNode	ENTRY		5979040		True				
ANR	5979094	CFGExitNode	EXIT		5979040		True				
ANR	5979095	Symbol	* i		5979040						
ANR	5979096	Symbol	mem		5979040						
ANR	5979097	Symbol	spaces		5979040						
ANR	5979098	Symbol	i		5979040						
ANR	5979099	Symbol	max_space		5979040						
ANR	5979100	Symbol	gcst		5979040						
ANR	5979101	Symbol	* spaces		5979040						
ANR	5979102	Function	gs_gc_reclaim	157:0:5444:18529							
ANR	5979103	FunctionDef	"gs_gc_reclaim (vm_spaces * pspaces , bool global)"		5979102	0					
ANR	5979104	CompoundStatement		159:0:5497:18529	5979102	0					
ANR	5979105	Statement	define	160:1:5500:5505	5979102	0	True				
ANR	5979106	Statement	nspaces	160:8:5507:5513	5979102	1	True				
ANR	5979107	Statement	(	160:16:5515:5515	5979102	2	True				
ANR	5979108	Statement	(	160:17:5516:5516	5979102	3	True				
ANR	5979109	Statement	i_vm_max	160:18:5517:5524	5979102	4	True				
ANR	5979110	Statement	+	160:27:5526:5526	5979102	5	True				
ANR	5979111	Statement	1	160:29:5528:5528	5979102	6	True				
ANR	5979112	Statement	)	160:30:5529:5529	5979102	7	True				
ANR	5979113	Statement	*	160:32:5531:5531	5979102	8	True				
ANR	5979114	Statement	2	160:34:5533:5533	5979102	9	True				
ANR	5979115	Statement	)	160:35:5534:5534	5979102	10	True				
ANR	5979116	IdentifierDeclStatement	vm_spaces spaces ;	162:4:5573:5589	5979102	11	True				
ANR	5979117	IdentifierDecl	spaces		5979102	0					
ANR	5979118	IdentifierDeclType	vm_spaces		5979102	0					
ANR	5979119	Identifier	spaces		5979102	1					
ANR	5979120	IdentifierDeclStatement	gs_ref_memory_t * space_memories [ nspaces ] ;	163:4:5595:5635	5979102	12	True				
ANR	5979121	IdentifierDecl	* space_memories [ nspaces ]		5979102	0					
ANR	5979122	IdentifierDeclType	gs_ref_memory_t * [ nspaces ]		5979102	0					
ANR	5979123	Identifier	space_memories		5979102	1					
ANR	5979124	Identifier	nspaces		5979102	2					
ANR	5979125	IdentifierDeclStatement	gs_gc_root_t space_roots [ nspaces ] ;	164:4:5641:5674	5979102	13	True				
ANR	5979126	IdentifierDecl	space_roots [ nspaces ]		5979102	0					
ANR	5979127	IdentifierDeclType	gs_gc_root_t [ nspaces ]		5979102	0					
ANR	5979128	Identifier	space_roots		5979102	1					
ANR	5979129	Identifier	nspaces		5979102	2					
ANR	5979130	IdentifierDeclStatement	int max_trace ;	165:4:5680:5693	5979102	14	True				
ANR	5979131	IdentifierDecl	max_trace		5979102	0					
ANR	5979132	IdentifierDeclType	int		5979102	0					
ANR	5979133	Identifier	max_trace		5979102	1					
ANR	5979134	IdentifierDeclStatement	int min_collect ;	166:4:5726:5741	5979102	15	True				
ANR	5979135	IdentifierDecl	min_collect		5979102	0					
ANR	5979136	IdentifierDeclType	int		5979102	0					
ANR	5979137	Identifier	min_collect		5979102	1					
ANR	5979138	IdentifierDeclStatement	int min_collect_vm_space ;	167:4:5776:5800	5979102	16	True				
ANR	5979139	IdentifierDecl	min_collect_vm_space		5979102	0					
ANR	5979140	IdentifierDeclType	int		5979102	0					
ANR	5979141	Identifier	min_collect_vm_space		5979102	1					
ANR	5979142	IdentifierDeclStatement	int ispace ;	168:4:5836:5846	5979102	17	True				
ANR	5979143	IdentifierDecl	ispace		5979102	0					
ANR	5979144	IdentifierDeclType	int		5979102	0					
ANR	5979145	Identifier	ispace		5979102	1					
ANR	5979146	IdentifierDeclStatement	gs_ref_memory_t * mem ;	169:4:5852:5872	5979102	18	True				
ANR	5979147	IdentifierDecl	* mem		5979102	0					
ANR	5979148	IdentifierDeclType	gs_ref_memory_t *		5979102	0					
ANR	5979149	Identifier	mem		5979102	1					
ANR	5979150	IdentifierDeclStatement	clump_t * cp ;	170:4:5878:5889	5979102	19	True				
ANR	5979151	IdentifierDecl	* cp		5979102	0					
ANR	5979152	IdentifierDeclType	clump_t *		5979102	0					
ANR	5979153	Identifier	cp		5979102	1					
ANR	5979154	IdentifierDeclStatement	gs_gc_root_t * rp ;	171:4:5895:5911	5979102	20	True				
ANR	5979155	IdentifierDecl	* rp		5979102	0					
ANR	5979156	IdentifierDeclType	gs_gc_root_t *		5979102	0					
ANR	5979157	Identifier	rp		5979102	1					
ANR	5979158	IdentifierDeclStatement	gc_state_t state ;	172:4:5917:5933	5979102	21	True				
ANR	5979159	IdentifierDecl	state		5979102	0					
ANR	5979160	IdentifierDeclType	gc_state_t		5979102	0					
ANR	5979161	Identifier	state		5979102	1					
ANR	5979162	ClassDefStatement	struct _msd { gc_mark_stack stack ; ms_entry body [ ms_size_default ] ; } ms_default ;	173:4:5939:6038	5979102	22	True				
ANR	5979163	Identifier	_msd		5979102	0					
ANR	5979164	IdentifierDecl	ms_default		5979102	1					
ANR	5979165	IdentifierDeclType	_msd		5979102	0					
ANR	5979166	Identifier	ms_default		5979102	1					
ANR	5979167	IdentifierDeclStatement	gc_mark_stack * mark_stack = & ms_default . stack ;	177:4:6044:6089	5979102	23	True				
ANR	5979168	IdentifierDecl	* mark_stack = & ms_default . stack		5979102	0					
ANR	5979169	IdentifierDeclType	gc_mark_stack *		5979102	0					
ANR	5979170	Identifier	mark_stack		5979102	1					
ANR	5979171	AssignmentExpression	* mark_stack = & ms_default . stack		5979102	2		=			
ANR	5979172	Identifier	mark_stack		5979102	0					
ANR	5979173	UnaryOperationExpression	& ms_default . stack		5979102	1					
ANR	5979174	UnaryOperator	&		5979102	0					
ANR	5979175	MemberAccess	ms_default . stack		5979102	1					
ANR	5979176	Identifier	ms_default		5979102	0					
ANR	5979177	Identifier	stack		5979102	1					
ANR	5979178	IdentifierDeclStatement	const gs_memory_t * cmem ;	178:4:6095:6118	5979102	24	True				
ANR	5979179	IdentifierDecl	* cmem		5979102	0					
ANR	5979180	IdentifierDeclType	const gs_memory_t *		5979102	0					
ANR	5979181	Identifier	cmem		5979102	1					
ANR	5979182	IdentifierDeclStatement	clump_splay_walker sw ;	179:4:6124:6145	5979102	25	True				
ANR	5979183	IdentifierDecl	sw		5979102	0					
ANR	5979184	IdentifierDeclType	clump_splay_walker		5979102	0					
ANR	5979185	Identifier	sw		5979102	1					
ANR	5979186	IfStatement	if ( I_FORCE_GLOBAL_GC )		5979102	26					
ANR	5979187	Condition	I_FORCE_GLOBAL_GC	183:8:6209:6225	5979102	0	True				
ANR	5979188	Identifier	I_FORCE_GLOBAL_GC		5979102	0					
ANR	5979189	ExpressionStatement	global = true	184:8:6236:6249	5979102	1	True				
ANR	5979190	AssignmentExpression	global = true		5979102	0		=			
ANR	5979191	Identifier	global		5979102	0					
ANR	5979192	Identifier	true		5979102	1					
ANR	5979193	ExpressionStatement	spaces = * pspaces	188:4:6321:6338	5979102	27	True				
ANR	5979194	AssignmentExpression	spaces = * pspaces		5979102	0		=			
ANR	5979195	Identifier	spaces		5979102	0					
ANR	5979196	UnaryOperationExpression	* pspaces		5979102	1					
ANR	5979197	UnaryOperator	*		5979102	0					
ANR	5979198	Identifier	pspaces		5979102	1					
ANR	5979199	ExpressionStatement	cmem = space_system -> stable_memory	189:4:6344:6378	5979102	28	True				
ANR	5979200	AssignmentExpression	cmem = space_system -> stable_memory		5979102	0		=			
ANR	5979201	Identifier	cmem		5979102	0					
ANR	5979202	PtrMemberAccess	space_system -> stable_memory		5979102	1					
ANR	5979203	Identifier	space_system		5979102	0					
ANR	5979204	Identifier	stable_memory		5979102	1					
ANR	5979205	ExpressionStatement	space_memories [ 1 ] = space_system	190:4:6384:6416	5979102	29	True				
ANR	5979206	AssignmentExpression	space_memories [ 1 ] = space_system		5979102	0		=			
ANR	5979207	ArrayIndexing	space_memories [ 1 ]		5979102	0					
ANR	5979208	Identifier	space_memories		5979102	0					
ANR	5979209	PrimaryExpression	1		5979102	1					
ANR	5979210	Identifier	space_system		5979102	1					
ANR	5979211	ExpressionStatement	space_memories [ 2 ] = space_global	191:4:6422:6454	5979102	30	True				
ANR	5979212	AssignmentExpression	space_memories [ 2 ] = space_global		5979102	0		=			
ANR	5979213	ArrayIndexing	space_memories [ 2 ]		5979102	0					
ANR	5979214	Identifier	space_memories		5979102	0					
ANR	5979215	PrimaryExpression	2		5979102	1					
ANR	5979216	Identifier	space_global		5979102	1					
ANR	5979217	ExpressionStatement	min_collect = max_trace = 2	192:4:6460:6487	5979102	31	True				
ANR	5979218	AssignmentExpression	min_collect = max_trace = 2		5979102	0		=			
ANR	5979219	Identifier	min_collect		5979102	0					
ANR	5979220	AssignmentExpression	max_trace = 2		5979102	1		=			
ANR	5979221	Identifier	max_trace		5979102	0					
ANR	5979222	PrimaryExpression	2		5979102	1					
ANR	5979223	ExpressionStatement	min_collect_vm_space = i_vm_global	193:4:6493:6527	5979102	32	True				
ANR	5979224	AssignmentExpression	min_collect_vm_space = i_vm_global		5979102	0		=			
ANR	5979225	Identifier	min_collect_vm_space		5979102	0					
ANR	5979226	Identifier	i_vm_global		5979102	1					
ANR	5979227	IfStatement	if ( space_global -> stable_memory != ( gs_memory_t * ) space_global )		5979102	33					
ANR	5979228	Condition	space_global -> stable_memory != ( gs_memory_t * ) space_global	194:8:6537:6594	5979102	0	True				
ANR	5979229	EqualityExpression	space_global -> stable_memory != ( gs_memory_t * ) space_global		5979102	0		!=			
ANR	5979230	PtrMemberAccess	space_global -> stable_memory		5979102	0					
ANR	5979231	Identifier	space_global		5979102	0					
ANR	5979232	Identifier	stable_memory		5979102	1					
ANR	5979233	CastExpression	( gs_memory_t * ) space_global		5979102	1					
ANR	5979234	CastTarget	gs_memory_t *		5979102	0					
ANR	5979235	Identifier	space_global		5979102	1					
ANR	5979236	ExpressionStatement	space_memories [ ++ max_trace ] = ( gs_ref_memory_t * ) space_global -> stable_memory	195:8:6605:6693	5979102	1	True				
ANR	5979237	AssignmentExpression	space_memories [ ++ max_trace ] = ( gs_ref_memory_t * ) space_global -> stable_memory		5979102	0		=			
ANR	5979238	ArrayIndexing	space_memories [ ++ max_trace ]		5979102	0					
ANR	5979239	Identifier	space_memories		5979102	0					
ANR	5979240	UnaryExpression	++ max_trace		5979102	1					
ANR	5979241	IncDec	++		5979102	0					
ANR	5979242	Identifier	max_trace		5979102	1					
ANR	5979243	CastExpression	( gs_ref_memory_t * ) space_global -> stable_memory		5979102	1					
ANR	5979244	CastTarget	gs_ref_memory_t *		5979102	0					
ANR	5979245	PtrMemberAccess	space_global -> stable_memory		5979102	1					
ANR	5979246	Identifier	space_global		5979102	0					
ANR	5979247	Identifier	stable_memory		5979102	1					
ANR	5979248	IfStatement	if ( space_global != space_local )		5979102	34					
ANR	5979249	Condition	space_global != space_local	197:8:6703:6729	5979102	0	True				
ANR	5979250	EqualityExpression	space_global != space_local		5979102	0		!=			
ANR	5979251	Identifier	space_global		5979102	0					
ANR	5979252	Identifier	space_local		5979102	1					
ANR	5979253	CompoundStatement		39:37:1234:1234	5979102	1					
ANR	5979254	ExpressionStatement	space_memories [ ++ max_trace ] = space_local	198:8:6742:6783	5979102	0	True				
ANR	5979255	AssignmentExpression	space_memories [ ++ max_trace ] = space_local		5979102	0		=			
ANR	5979256	ArrayIndexing	space_memories [ ++ max_trace ]		5979102	0					
ANR	5979257	Identifier	space_memories		5979102	0					
ANR	5979258	UnaryExpression	++ max_trace		5979102	1					
ANR	5979259	IncDec	++		5979102	0					
ANR	5979260	Identifier	max_trace		5979102	1					
ANR	5979261	Identifier	space_local		5979102	1					
ANR	5979262	ExpressionStatement	min_collect = max_trace	199:8:6793:6816	5979102	1	True				
ANR	5979263	AssignmentExpression	min_collect = max_trace		5979102	0		=			
ANR	5979264	Identifier	min_collect		5979102	0					
ANR	5979265	Identifier	max_trace		5979102	1					
ANR	5979266	ExpressionStatement	min_collect_vm_space = i_vm_local	200:8:6826:6859	5979102	2	True				
ANR	5979267	AssignmentExpression	min_collect_vm_space = i_vm_local		5979102	0		=			
ANR	5979268	Identifier	min_collect_vm_space		5979102	0					
ANR	5979269	Identifier	i_vm_local		5979102	1					
ANR	5979270	IfStatement	if ( space_local -> stable_memory != ( gs_memory_t * ) space_local )		5979102	3					
ANR	5979271	Condition	space_local -> stable_memory != ( gs_memory_t * ) space_local	201:12:6873:6928	5979102	0	True				
ANR	5979272	EqualityExpression	space_local -> stable_memory != ( gs_memory_t * ) space_local		5979102	0		!=			
ANR	5979273	PtrMemberAccess	space_local -> stable_memory		5979102	0					
ANR	5979274	Identifier	space_local		5979102	0					
ANR	5979275	Identifier	stable_memory		5979102	1					
ANR	5979276	CastExpression	( gs_memory_t * ) space_local		5979102	1					
ANR	5979277	CastTarget	gs_memory_t *		5979102	0					
ANR	5979278	Identifier	space_local		5979102	1					
ANR	5979279	ExpressionStatement	space_memories [ ++ max_trace ] = ( gs_ref_memory_t * ) space_local -> stable_memory	202:12:6943:7034	5979102	1	True				
ANR	5979280	AssignmentExpression	space_memories [ ++ max_trace ] = ( gs_ref_memory_t * ) space_local -> stable_memory		5979102	0		=			
ANR	5979281	ArrayIndexing	space_memories [ ++ max_trace ]		5979102	0					
ANR	5979282	Identifier	space_memories		5979102	0					
ANR	5979283	UnaryExpression	++ max_trace		5979102	1					
ANR	5979284	IncDec	++		5979102	0					
ANR	5979285	Identifier	max_trace		5979102	1					
ANR	5979286	CastExpression	( gs_ref_memory_t * ) space_local -> stable_memory		5979102	1					
ANR	5979287	CastTarget	gs_ref_memory_t *		5979102	0					
ANR	5979288	PtrMemberAccess	space_local -> stable_memory		5979102	1					
ANR	5979289	Identifier	space_local		5979102	0					
ANR	5979290	Identifier	stable_memory		5979102	1					
ANR	5979291	IfStatement	if ( global )		5979102	35					
ANR	5979292	Condition	global	205:8:7050:7055	5979102	0	True				
ANR	5979293	Identifier	global		5979102	0					
ANR	5979294	ExpressionStatement	min_collect = min_collect_vm_space = 1	206:8:7066:7104	5979102	1	True				
ANR	5979295	AssignmentExpression	min_collect = min_collect_vm_space = 1		5979102	0		=			
ANR	5979296	Identifier	min_collect		5979102	0					
ANR	5979297	AssignmentExpression	min_collect_vm_space = 1		5979102	1		=			
ANR	5979298	Identifier	min_collect_vm_space		5979102	0					
ANR	5979299	PrimaryExpression	1		5979102	1					
ANR	5979300	Statement	define	208:1:7108:7113	5979102	36	True				
ANR	5979301	Statement	for_spaces	208:8:7115:7124	5979102	37	True				
ANR	5979302	Statement	(	208:18:7125:7125	5979102	38	True				
ANR	5979303	Statement	i	208:19:7126:7126	5979102	39	True				
ANR	5979304	Statement	","	208:20:7127:7127	5979102	40	True				
ANR	5979305	Statement	n	208:22:7129:7129	5979102	41	True				
ANR	5979306	Statement	)	208:23:7130:7130	5979102	42	True				
ANR	5979307	ForStatement	for ( i = 1 ; i <= n ; ++ i )		5979102	43					
ANR	5979308	ForInit	i = 1 ;	209:7:7140:7145	5979102	0	True				
ANR	5979309	AssignmentExpression	i = 1		5979102	0		=			
ANR	5979310	Identifier	i		5979102	0					
ANR	5979311	PrimaryExpression	1		5979102	1					
ANR	5979312	Condition	i <= n	209:14:7147:7152	5979102	1	True				
ANR	5979313	RelationalExpression	i <= n		5979102	0		<=			
ANR	5979314	Identifier	i		5979102	0					
ANR	5979315	Identifier	n		5979102	1					
ANR	5979316	UnaryExpression	++ i	209:22:7155:7157	5979102	2	True				
ANR	5979317	IncDec	++		5979102	0					
ANR	5979318	Identifier	i		5979102	1					
ANR	5979319	Statement	define	210:1:7161:7166	5979102	3	True				
ANR	5979320	Statement	for_collected_spaces	210:8:7168:7187	5979102	44	True				
ANR	5979321	Statement	(	210:28:7188:7188	5979102	45	True				
ANR	5979322	Statement	i	210:29:7189:7189	5979102	46	True				
ANR	5979323	Statement	)	210:30:7190:7190	5979102	47	True				
ANR	5979324	ForStatement	for ( i = min_collect ; i <= max_trace ; ++ i )		5979102	48					
ANR	5979325	ForInit	i = min_collect ;	211:7:7200:7215	5979102	0	True				
ANR	5979326	AssignmentExpression	i = min_collect		5979102	0		=			
ANR	5979327	Identifier	i		5979102	0					
ANR	5979328	Identifier	min_collect		5979102	1					
ANR	5979329	Condition	i <= max_trace	211:24:7217:7230	5979102	1	True				
ANR	5979330	RelationalExpression	i <= max_trace		5979102	0		<=			
ANR	5979331	Identifier	i		5979102	0					
ANR	5979332	Identifier	max_trace		5979102	1					
ANR	5979333	UnaryExpression	++ i	211:40:7233:7235	5979102	2	True				
ANR	5979334	IncDec	++		5979102	0					
ANR	5979335	Identifier	i		5979102	1					
ANR	5979336	Statement	define	212:1:7239:7244	5979102	3	True				
ANR	5979337	Statement	for_space_mems	212:8:7246:7259	5979102	49	True				
ANR	5979338	Statement	(	212:22:7260:7260	5979102	50	True				
ANR	5979339	Statement	i	212:23:7261:7261	5979102	51	True				
ANR	5979340	Statement	","	212:24:7262:7262	5979102	52	True				
ANR	5979341	Statement	mem	212:26:7264:7266	5979102	53	True				
ANR	5979342	Statement	)	212:29:7267:7267	5979102	54	True				
ANR	5979343	ForStatement	for ( mem = space_memories [ i ] ; mem != 0 ; mem = & mem -> saved -> state )		5979102	55					
ANR	5979344	ForInit	mem = space_memories [ i ] ;	213:7:7277:7300	5979102	0	True				
ANR	5979345	AssignmentExpression	mem = space_memories [ i ]		5979102	0		=			
ANR	5979346	Identifier	mem		5979102	0					
ANR	5979347	ArrayIndexing	space_memories [ i ]		5979102	1					
ANR	5979348	Identifier	space_memories		5979102	0					
ANR	5979349	Identifier	i		5979102	1					
ANR	5979350	Condition	mem != 0	213:32:7302:7309	5979102	1	True				
ANR	5979351	EqualityExpression	mem != 0		5979102	0		!=			
ANR	5979352	Identifier	mem		5979102	0					
ANR	5979353	PrimaryExpression	0		5979102	1					
ANR	5979354	AssignmentExpression	mem = & mem -> saved -> state	213:42:7312:7335	5979102	2	True	=			
ANR	5979355	Identifier	mem		5979102	0					
ANR	5979356	UnaryOperationExpression	& mem -> saved -> state		5979102	1					
ANR	5979357	UnaryOperator	&		5979102	0					
ANR	5979358	PtrMemberAccess	mem -> saved -> state		5979102	1					
ANR	5979359	PtrMemberAccess	mem -> saved		5979102	0					
ANR	5979360	Identifier	mem		5979102	0					
ANR	5979361	Identifier	saved		5979102	1					
ANR	5979362	Identifier	state		5979102	1					
ANR	5979363	Statement	define	214:1:7339:7344	5979102	3	True				
ANR	5979364	Statement	for_mem_clumps	214:8:7346:7359	5979102	56	True				
ANR	5979365	Statement	(	214:22:7360:7360	5979102	57	True				
ANR	5979366	Statement	mem	214:23:7361:7363	5979102	58	True				
ANR	5979367	Statement	","	214:26:7364:7364	5979102	59	True				
ANR	5979368	Statement	cp	214:28:7366:7367	5979102	60	True				
ANR	5979369	Statement	","	214:30:7368:7368	5979102	61	True				
ANR	5979370	Statement	sw	214:32:7370:7371	5979102	62	True				
ANR	5979371	Statement	)	214:34:7372:7372	5979102	63	True				
ANR	5979372	ForStatement	"for ( cp = clump_splay_walk_init ( sw , mem ) ; cp != 0 ; cp = clump_splay_walk_fwd ( sw ) )"		5979102	64					
ANR	5979373	ForInit	"cp = clump_splay_walk_init ( sw , mem ) ;"	215:7:7382:7417	5979102	0	True				
ANR	5979374	AssignmentExpression	"cp = clump_splay_walk_init ( sw , mem )"		5979102	0		=			
ANR	5979375	Identifier	cp		5979102	0					
ANR	5979376	CallExpression	"clump_splay_walk_init ( sw , mem )"		5979102	1					
ANR	5979377	Callee	clump_splay_walk_init		5979102	0					
ANR	5979378	Identifier	clump_splay_walk_init		5979102	0					
ANR	5979379	ArgumentList	sw		5979102	1					
ANR	5979380	Argument	sw		5979102	0					
ANR	5979381	Identifier	sw		5979102	0					
ANR	5979382	Argument	mem		5979102	1					
ANR	5979383	Identifier	mem		5979102	0					
ANR	5979384	Condition	cp != 0	215:44:7419:7425	5979102	1	True				
ANR	5979385	EqualityExpression	cp != 0		5979102	0		!=			
ANR	5979386	Identifier	cp		5979102	0					
ANR	5979387	PrimaryExpression	0		5979102	1					
ANR	5979388	AssignmentExpression	cp = clump_splay_walk_fwd ( sw )	215:53:7428:7456	5979102	2	True	=			
ANR	5979389	Identifier	cp		5979102	0					
ANR	5979390	CallExpression	clump_splay_walk_fwd ( sw )		5979102	1					
ANR	5979391	Callee	clump_splay_walk_fwd		5979102	0					
ANR	5979392	Identifier	clump_splay_walk_fwd		5979102	0					
ANR	5979393	ArgumentList	sw		5979102	1					
ANR	5979394	Argument	sw		5979102	0					
ANR	5979395	Identifier	sw		5979102	0					
ANR	5979396	Statement	define	216:1:7460:7465	5979102	3	True				
ANR	5979397	Statement	for_space_clumps	216:8:7467:7482	5979102	65	True				
ANR	5979398	Statement	(	216:24:7483:7483	5979102	66	True				
ANR	5979399	Statement	i	216:25:7484:7484	5979102	67	True				
ANR	5979400	Statement	","	216:26:7485:7485	5979102	68	True				
ANR	5979401	Statement	mem	216:28:7487:7489	5979102	69	True				
ANR	5979402	Statement	","	216:31:7490:7490	5979102	70	True				
ANR	5979403	Statement	cp	216:33:7492:7493	5979102	71	True				
ANR	5979404	Statement	","	216:35:7494:7494	5979102	72	True				
ANR	5979405	Statement	sw	216:37:7496:7497	5979102	73	True				
ANR	5979406	Statement	)	216:39:7498:7498	5979102	74	True				
ANR	5979407	Statement	for_space_mems	217:2:7503:7516	5979102	75	True				
ANR	5979408	Statement	(	217:16:7517:7517	5979102	76	True				
ANR	5979409	Statement	i	217:17:7518:7518	5979102	77	True				
ANR	5979410	Statement	","	217:18:7519:7519	5979102	78	True				
ANR	5979411	Statement	mem	217:20:7521:7523	5979102	79	True				
ANR	5979412	Statement	)	217:23:7524:7524	5979102	80	True				
ANR	5979413	Statement	for_mem_clumps	217:25:7526:7539	5979102	81	True				
ANR	5979414	Statement	(	217:39:7540:7540	5979102	82	True				
ANR	5979415	Statement	mem	217:40:7541:7543	5979102	83	True				
ANR	5979416	Statement	","	217:43:7544:7544	5979102	84	True				
ANR	5979417	Statement	cp	217:45:7546:7547	5979102	85	True				
ANR	5979418	Statement	","	217:47:7548:7548	5979102	86	True				
ANR	5979419	Statement	sw	217:49:7550:7551	5979102	87	True				
ANR	5979420	Statement	)	217:51:7552:7552	5979102	88	True				
ANR	5979421	Statement	define	218:1:7555:7560	5979102	89	True				
ANR	5979422	Statement	for_clumps	218:8:7562:7571	5979102	90	True				
ANR	5979423	Statement	(	218:18:7572:7572	5979102	91	True				
ANR	5979424	Statement	i	218:19:7573:7573	5979102	92	True				
ANR	5979425	Statement	","	218:20:7574:7574	5979102	93	True				
ANR	5979426	Statement	n	218:22:7576:7576	5979102	94	True				
ANR	5979427	Statement	","	218:23:7577:7577	5979102	95	True				
ANR	5979428	Statement	mem	218:25:7579:7581	5979102	96	True				
ANR	5979429	Statement	","	218:28:7582:7582	5979102	97	True				
ANR	5979430	Statement	cp	218:30:7584:7585	5979102	98	True				
ANR	5979431	Statement	","	218:32:7586:7586	5979102	99	True				
ANR	5979432	Statement	sw	218:34:7588:7589	5979102	100	True				
ANR	5979433	Statement	)	218:36:7590:7590	5979102	101	True				
ANR	5979434	Statement	for_spaces	219:2:7595:7604	5979102	102	True				
ANR	5979435	Statement	(	219:12:7605:7605	5979102	103	True				
ANR	5979436	Statement	i	219:13:7606:7606	5979102	104	True				
ANR	5979437	Statement	","	219:14:7607:7607	5979102	105	True				
ANR	5979438	Statement	n	219:16:7609:7609	5979102	106	True				
ANR	5979439	Statement	)	219:17:7610:7610	5979102	107	True				
ANR	5979440	Statement	for_space_clumps	219:19:7612:7627	5979102	108	True				
ANR	5979441	Statement	(	219:35:7628:7628	5979102	109	True				
ANR	5979442	Statement	i	219:36:7629:7629	5979102	110	True				
ANR	5979443	Statement	","	219:37:7630:7630	5979102	111	True				
ANR	5979444	Statement	mem	219:39:7632:7634	5979102	112	True				
ANR	5979445	Statement	","	219:42:7635:7635	5979102	113	True				
ANR	5979446	Statement	cp	219:44:7637:7638	5979102	114	True				
ANR	5979447	Statement	","	219:46:7639:7639	5979102	115	True				
ANR	5979448	Statement	sw	219:48:7641:7642	5979102	116	True				
ANR	5979449	Statement	)	219:50:7643:7643	5979102	117	True				
ANR	5979450	Statement	define	220:1:7646:7651	5979102	118	True				
ANR	5979451	Statement	for_collected_clumps	220:8:7653:7672	5979102	119	True				
ANR	5979452	Statement	(	220:28:7673:7673	5979102	120	True				
ANR	5979453	Statement	i	220:29:7674:7674	5979102	121	True				
ANR	5979454	Statement	","	220:30:7675:7675	5979102	122	True				
ANR	5979455	Statement	mem	220:32:7677:7679	5979102	123	True				
ANR	5979456	Statement	","	220:35:7680:7680	5979102	124	True				
ANR	5979457	Statement	cp	220:37:7682:7683	5979102	125	True				
ANR	5979458	Statement	","	220:39:7684:7684	5979102	126	True				
ANR	5979459	Statement	sw	220:41:7686:7687	5979102	127	True				
ANR	5979460	Statement	)	220:43:7688:7688	5979102	128	True				
ANR	5979461	Statement	for_collected_spaces	221:2:7693:7712	5979102	129	True				
ANR	5979462	Statement	(	221:22:7713:7713	5979102	130	True				
ANR	5979463	Statement	i	221:23:7714:7714	5979102	131	True				
ANR	5979464	Statement	)	221:24:7715:7715	5979102	132	True				
ANR	5979465	Statement	for_space_clumps	221:26:7717:7732	5979102	133	True				
ANR	5979466	Statement	(	221:42:7733:7733	5979102	134	True				
ANR	5979467	Statement	i	221:43:7734:7734	5979102	135	True				
ANR	5979468	Statement	","	221:44:7735:7735	5979102	136	True				
ANR	5979469	Statement	mem	221:46:7737:7739	5979102	137	True				
ANR	5979470	Statement	","	221:49:7740:7740	5979102	138	True				
ANR	5979471	Statement	cp	221:51:7742:7743	5979102	139	True				
ANR	5979472	Statement	","	221:53:7744:7744	5979102	140	True				
ANR	5979473	Statement	sw	221:55:7746:7747	5979102	141	True				
ANR	5979474	Statement	)	221:57:7748:7748	5979102	142	True				
ANR	5979475	Statement	define	222:1:7751:7756	5979102	143	True				
ANR	5979476	Statement	for_roots	222:8:7758:7766	5979102	144	True				
ANR	5979477	Statement	(	222:17:7767:7767	5979102	145	True				
ANR	5979478	Statement	i	222:18:7768:7768	5979102	146	True				
ANR	5979479	Statement	","	222:19:7769:7769	5979102	147	True				
ANR	5979480	Statement	n	222:21:7771:7771	5979102	148	True				
ANR	5979481	Statement	","	222:22:7772:7772	5979102	149	True				
ANR	5979482	Statement	mem	222:24:7774:7776	5979102	150	True				
ANR	5979483	Statement	","	222:27:7777:7777	5979102	151	True				
ANR	5979484	Statement	rp	222:29:7779:7780	5979102	152	True				
ANR	5979485	Statement	)	222:31:7781:7781	5979102	153	True				
ANR	5979486	Statement	for_spaces	223:2:7786:7795	5979102	154	True				
ANR	5979487	Statement	(	223:12:7796:7796	5979102	155	True				
ANR	5979488	Statement	i	223:13:7797:7797	5979102	156	True				
ANR	5979489	Statement	","	223:14:7798:7798	5979102	157	True				
ANR	5979490	Statement	n	223:16:7800:7800	5979102	158	True				
ANR	5979491	Statement	)	223:17:7801:7801	5979102	159	True				
ANR	5979492	ForStatement	"for ( mem = space_memories [ i ] , rp = mem -> roots ; rp != 0 ; rp = rp -> next )"		5979102	160					
ANR	5979493	ForInit	"mem = space_memories [ i ] , rp = mem -> roots ;"	224:9:7813:7853	5979102	0	True				
ANR	5979494	Expression	"mem = space_memories [ i ] , rp = mem -> roots"		5979102	0					
ANR	5979495	AssignmentExpression	mem = space_memories [ i ]		5979102	0		=			
ANR	5979496	Identifier	mem		5979102	0					
ANR	5979497	ArrayIndexing	space_memories [ i ]		5979102	1					
ANR	5979498	Identifier	space_memories		5979102	0					
ANR	5979499	Identifier	i		5979102	1					
ANR	5979500	AssignmentExpression	rp = mem -> roots		5979102	1		=			
ANR	5979501	Identifier	rp		5979102	0					
ANR	5979502	PtrMemberAccess	mem -> roots		5979102	1					
ANR	5979503	Identifier	mem		5979102	0					
ANR	5979504	Identifier	roots		5979102	1					
ANR	5979505	Condition	rp != 0	224:51:7855:7861	5979102	1	True				
ANR	5979506	EqualityExpression	rp != 0		5979102	0		!=			
ANR	5979507	Identifier	rp		5979102	0					
ANR	5979508	PrimaryExpression	0		5979102	1					
ANR	5979509	AssignmentExpression	rp = rp -> next	224:60:7864:7876	5979102	2	True	=			
ANR	5979510	Identifier	rp		5979102	0					
ANR	5979511	PtrMemberAccess	rp -> next		5979102	1					
ANR	5979512	Identifier	rp		5979102	0					
ANR	5979513	Identifier	next		5979102	1					
ANR	5979514	ExpressionStatement	state . procs = & igc_procs	228:4:7917:7941	5979102	3	True				
ANR	5979515	AssignmentExpression	state . procs = & igc_procs		5979102	0		=			
ANR	5979516	MemberAccess	state . procs		5979102	0					
ANR	5979517	Identifier	state		5979102	0					
ANR	5979518	Identifier	procs		5979102	1					
ANR	5979519	UnaryOperationExpression	& igc_procs		5979102	1					
ANR	5979520	UnaryOperator	&		5979102	0					
ANR	5979521	Identifier	igc_procs		5979102	1					
ANR	5979522	ExpressionStatement	state . loc . memory = space_global	229:4:7947:7978	5979102	161	True				
ANR	5979523	AssignmentExpression	state . loc . memory = space_global		5979102	0		=			
ANR	5979524	MemberAccess	state . loc . memory		5979102	0					
ANR	5979525	MemberAccess	state . loc		5979102	0					
ANR	5979526	Identifier	state		5979102	0					
ANR	5979527	Identifier	loc		5979102	1					
ANR	5979528	Identifier	memory		5979102	1					
ANR	5979529	Identifier	space_global		5979102	1					
ANR	5979530	ExpressionStatement	state . loc . cp = 0	231:4:8007:8023	5979102	162	True				
ANR	5979531	AssignmentExpression	state . loc . cp = 0		5979102	0		=			
ANR	5979532	MemberAccess	state . loc . cp		5979102	0					
ANR	5979533	MemberAccess	state . loc		5979102	0					
ANR	5979534	Identifier	state		5979102	0					
ANR	5979535	Identifier	loc		5979102	1					
ANR	5979536	Identifier	cp		5979102	1					
ANR	5979537	PrimaryExpression	0		5979102	1					
ANR	5979538	ExpressionStatement	state . spaces = spaces	232:4:8029:8050	5979102	163	True				
ANR	5979539	AssignmentExpression	state . spaces = spaces		5979102	0		=			
ANR	5979540	MemberAccess	state . spaces		5979102	0					
ANR	5979541	Identifier	state		5979102	0					
ANR	5979542	Identifier	spaces		5979102	1					
ANR	5979543	Identifier	spaces		5979102	1					
ANR	5979544	ExpressionStatement	state . min_collect = min_collect_vm_space << r_space_shift	233:4:8056:8113	5979102	164	True				
ANR	5979545	AssignmentExpression	state . min_collect = min_collect_vm_space << r_space_shift		5979102	0		=			
ANR	5979546	MemberAccess	state . min_collect		5979102	0					
ANR	5979547	Identifier	state		5979102	0					
ANR	5979548	Identifier	min_collect		5979102	1					
ANR	5979549	ShiftExpression	min_collect_vm_space << r_space_shift		5979102	1		<<			
ANR	5979550	Identifier	min_collect_vm_space		5979102	0					
ANR	5979551	Identifier	r_space_shift		5979102	1					
ANR	5979552	ExpressionStatement	state . relocating_untraced = false	234:4:8119:8152	5979102	165	True				
ANR	5979553	AssignmentExpression	state . relocating_untraced = false		5979102	0		=			
ANR	5979554	MemberAccess	state . relocating_untraced		5979102	0					
ANR	5979555	Identifier	state		5979102	0					
ANR	5979556	Identifier	relocating_untraced		5979102	1					
ANR	5979557	Identifier	false		5979102	1					
ANR	5979558	ExpressionStatement	state . heap = state . loc . memory -> non_gc_memory	235:4:8158:8202	5979102	166	True				
ANR	5979559	AssignmentExpression	state . heap = state . loc . memory -> non_gc_memory		5979102	0		=			
ANR	5979560	MemberAccess	state . heap		5979102	0					
ANR	5979561	Identifier	state		5979102	0					
ANR	5979562	Identifier	heap		5979102	1					
ANR	5979563	PtrMemberAccess	state . loc . memory -> non_gc_memory		5979102	1					
ANR	5979564	MemberAccess	state . loc . memory		5979102	0					
ANR	5979565	MemberAccess	state . loc		5979102	0					
ANR	5979566	Identifier	state		5979102	0					
ANR	5979567	Identifier	loc		5979102	1					
ANR	5979568	Identifier	memory		5979102	1					
ANR	5979569	Identifier	non_gc_memory		5979102	1					
ANR	5979570	ExpressionStatement	state . ntable = state . heap -> gs_lib_ctx -> gs_name_table	236:4:8208:8260	5979102	167	True				
ANR	5979571	AssignmentExpression	state . ntable = state . heap -> gs_lib_ctx -> gs_name_table		5979102	0		=			
ANR	5979572	MemberAccess	state . ntable		5979102	0					
ANR	5979573	Identifier	state		5979102	0					
ANR	5979574	Identifier	ntable		5979102	1					
ANR	5979575	PtrMemberAccess	state . heap -> gs_lib_ctx -> gs_name_table		5979102	1					
ANR	5979576	PtrMemberAccess	state . heap -> gs_lib_ctx		5979102	0					
ANR	5979577	MemberAccess	state . heap		5979102	0					
ANR	5979578	Identifier	state		5979102	0					
ANR	5979579	Identifier	heap		5979102	1					
ANR	5979580	Identifier	gs_lib_ctx		5979102	1					
ANR	5979581	Identifier	gs_name_table		5979102	1					
ANR	5979582	Statement	for_spaces	241:4:8393:8402	5979102	168	True				
ANR	5979583	Statement	(	241:14:8403:8403	5979102	169	True				
ANR	5979584	Statement	ispace	241:15:8404:8409	5979102	170	True				
ANR	5979585	Statement	","	241:21:8410:8410	5979102	171	True				
ANR	5979586	Statement	max_trace	241:23:8412:8420	5979102	172	True				
ANR	5979587	Statement	)	241:32:8421:8421	5979102	173	True				
ANR	5979588	ExpressionStatement	"gs_register_struct_root ( ( gs_memory_t * ) space_memories [ ispace ] , & space_roots [ ispace ] , ( void * * ) & space_memories [ ispace ] , ""gc_top_level"" )"	242:8:8431:8661	5979102	174	True				
ANR	5979589	CallExpression	"gs_register_struct_root ( ( gs_memory_t * ) space_memories [ ispace ] , & space_roots [ ispace ] , ( void * * ) & space_memories [ ispace ] , ""gc_top_level"" )"		5979102	0					
ANR	5979590	Callee	gs_register_struct_root		5979102	0					
ANR	5979591	Identifier	gs_register_struct_root		5979102	0					
ANR	5979592	ArgumentList	( gs_memory_t * ) space_memories [ ispace ]		5979102	1					
ANR	5979593	Argument	( gs_memory_t * ) space_memories [ ispace ]		5979102	0					
ANR	5979594	CastExpression	( gs_memory_t * ) space_memories [ ispace ]		5979102	0					
ANR	5979595	CastTarget	gs_memory_t *		5979102	0					
ANR	5979596	ArrayIndexing	space_memories [ ispace ]		5979102	1					
ANR	5979597	Identifier	space_memories		5979102	0					
ANR	5979598	Identifier	ispace		5979102	1					
ANR	5979599	Argument	& space_roots [ ispace ]		5979102	1					
ANR	5979600	UnaryOperationExpression	& space_roots [ ispace ]		5979102	0					
ANR	5979601	UnaryOperator	&		5979102	0					
ANR	5979602	ArrayIndexing	space_roots [ ispace ]		5979102	1					
ANR	5979603	Identifier	space_roots		5979102	0					
ANR	5979604	Identifier	ispace		5979102	1					
ANR	5979605	Argument	( void * * ) & space_memories [ ispace ]		5979102	2					
ANR	5979606	CastExpression	( void * * ) & space_memories [ ispace ]		5979102	0					
ANR	5979607	CastTarget	void * *		5979102	0					
ANR	5979608	UnaryOperationExpression	& space_memories [ ispace ]		5979102	1					
ANR	5979609	UnaryOperator	&		5979102	0					
ANR	5979610	ArrayIndexing	space_memories [ ispace ]		5979102	1					
ANR	5979611	Identifier	space_memories		5979102	0					
ANR	5979612	Identifier	ispace		5979102	1					
ANR	5979613	Argument	"""gc_top_level"""		5979102	3					
ANR	5979614	PrimaryExpression	"""gc_top_level"""		5979102	0					
ANR	5979615	ExpressionStatement	"end_phase ( state . heap , ""register space roots"" )"	247:4:8668:8712	5979102	175	True				
ANR	5979616	CallExpression	"end_phase ( state . heap , ""register space roots"" )"		5979102	0					
ANR	5979617	Callee	end_phase		5979102	0					
ANR	5979618	Identifier	end_phase		5979102	0					
ANR	5979619	ArgumentList	state . heap		5979102	1					
ANR	5979620	Argument	state . heap		5979102	0					
ANR	5979621	MemberAccess	state . heap		5979102	0					
ANR	5979622	Identifier	state		5979102	0					
ANR	5979623	Identifier	heap		5979102	1					
ANR	5979624	Argument	"""register space roots"""		5979102	1					
ANR	5979625	PrimaryExpression	"""register space roots"""		5979102	0					
ANR	5979626	ExpressionStatement	"gc_validate_spaces ( space_memories , max_trace , & state )"	253:4:8801:8854	5979102	176	True				
ANR	5979627	CallExpression	"gc_validate_spaces ( space_memories , max_trace , & state )"		5979102	0					
ANR	5979628	Callee	gc_validate_spaces		5979102	0					
ANR	5979629	Identifier	gc_validate_spaces		5979102	0					
ANR	5979630	ArgumentList	space_memories		5979102	1					
ANR	5979631	Argument	space_memories		5979102	0					
ANR	5979632	Identifier	space_memories		5979102	0					
ANR	5979633	Argument	max_trace		5979102	1					
ANR	5979634	Identifier	max_trace		5979102	0					
ANR	5979635	Argument	& state		5979102	2					
ANR	5979636	UnaryOperationExpression	& state		5979102	0					
ANR	5979637	UnaryOperator	&		5979102	0					
ANR	5979638	Identifier	state		5979102	1					
ANR	5979639	ExpressionStatement	"end_phase ( state . heap , ""pre-validate pointers"" )"	255:4:8861:8906	5979102	177	True				
ANR	5979640	CallExpression	"end_phase ( state . heap , ""pre-validate pointers"" )"		5979102	0					
ANR	5979641	Callee	end_phase		5979102	0					
ANR	5979642	Identifier	end_phase		5979102	0					
ANR	5979643	ArgumentList	state . heap		5979102	1					
ANR	5979644	Argument	state . heap		5979102	0					
ANR	5979645	MemberAccess	state . heap		5979102	0					
ANR	5979646	Identifier	state		5979102	0					
ANR	5979647	Identifier	heap		5979102	1					
ANR	5979648	Argument	"""pre-validate pointers"""		5979102	1					
ANR	5979649	PrimaryExpression	"""pre-validate pointers"""		5979102	0					
ANR	5979650	IfStatement	if ( I_BYPASS_GC )		5979102	178					
ANR	5979651	Condition	I_BYPASS_GC	259:8:8925:8935	5979102	0	True				
ANR	5979652	Identifier	I_BYPASS_GC		5979102	0					
ANR	5979653	CompoundStatement		101:21:3440:3440	5979102	1					
ANR	5979654	GotoStatement	goto no_collect ;	260:8:8977:8992	5979102	0	True				
ANR	5979655	Identifier	no_collect		5979102	0					
ANR	5979656	Statement	for_collected_spaces	265:4:9055:9074	5979102	179	True				
ANR	5979657	Statement	(	265:24:9075:9075	5979102	180	True				
ANR	5979658	Statement	ispace	265:25:9076:9081	5979102	181	True				
ANR	5979659	Statement	)	265:31:9082:9082	5979102	182	True				
ANR	5979660	Statement	for_space_clumps	266:8:9092:9107	5979102	183	True				
ANR	5979661	Statement	(	266:24:9108:9108	5979102	184	True				
ANR	5979662	Statement	ispace	266:25:9109:9114	5979102	185	True				
ANR	5979663	Statement	","	266:31:9115:9115	5979102	186	True				
ANR	5979664	Statement	mem	266:33:9117:9119	5979102	187	True				
ANR	5979665	Statement	","	266:36:9120:9120	5979102	188	True				
ANR	5979666	Statement	cp	266:38:9122:9123	5979102	189	True				
ANR	5979667	Statement	","	266:40:9124:9124	5979102	190	True				
ANR	5979668	Statement	&	266:42:9126:9126	5979102	191	True				
ANR	5979669	Statement	sw	266:43:9127:9128	5979102	192	True				
ANR	5979670	Statement	)	266:45:9129:9129	5979102	193	True				
ANR	5979671	CompoundStatement		108:47:3633:3633	5979102	194					
ANR	5979672	ExpressionStatement	"gc_objects_clear_marks ( ( const gs_memory_t * ) mem , cp )"	267:12:9145:9197	5979102	0	True				
ANR	5979673	CallExpression	"gc_objects_clear_marks ( ( const gs_memory_t * ) mem , cp )"		5979102	0					
ANR	5979674	Callee	gc_objects_clear_marks		5979102	0					
ANR	5979675	Identifier	gc_objects_clear_marks		5979102	0					
ANR	5979676	ArgumentList	( const gs_memory_t * ) mem		5979102	1					
ANR	5979677	Argument	( const gs_memory_t * ) mem		5979102	0					
ANR	5979678	CastExpression	( const gs_memory_t * ) mem		5979102	0					
ANR	5979679	CastTarget	const gs_memory_t *		5979102	0					
ANR	5979680	Identifier	mem		5979102	1					
ANR	5979681	Argument	cp		5979102	1					
ANR	5979682	Identifier	cp		5979102	0					
ANR	5979683	ExpressionStatement	"gc_strings_set_marks ( cp , false )"	268:12:9211:9242	5979102	1	True				
ANR	5979684	CallExpression	"gc_strings_set_marks ( cp , false )"		5979102	0					
ANR	5979685	Callee	gc_strings_set_marks		5979102	0					
ANR	5979686	Identifier	gc_strings_set_marks		5979102	0					
ANR	5979687	ArgumentList	cp		5979102	1					
ANR	5979688	Argument	cp		5979102	0					
ANR	5979689	Identifier	cp		5979102	0					
ANR	5979690	Argument	false		5979102	1					
ANR	5979691	Identifier	false		5979102	0					
ANR	5979692	ExpressionStatement	"end_phase ( state . heap , ""clear clump marks"" )"	271:4:9259:9300	5979102	195	True				
ANR	5979693	CallExpression	"end_phase ( state . heap , ""clear clump marks"" )"		5979102	0					
ANR	5979694	Callee	end_phase		5979102	0					
ANR	5979695	Identifier	end_phase		5979102	0					
ANR	5979696	ArgumentList	state . heap		5979102	1					
ANR	5979697	Argument	state . heap		5979102	0					
ANR	5979698	MemberAccess	state . heap		5979102	0					
ANR	5979699	Identifier	state		5979102	0					
ANR	5979700	Identifier	heap		5979102	1					
ANR	5979701	Argument	"""clear clump marks"""		5979102	1					
ANR	5979702	PrimaryExpression	"""clear clump marks"""		5979102	0					
ANR	5979703	Statement	for_roots	276:4:9422:9430	5979102	196	True				
ANR	5979704	Statement	(	276:13:9431:9431	5979102	197	True				
ANR	5979705	Statement	ispace	276:14:9432:9437	5979102	198	True				
ANR	5979706	Statement	","	276:20:9438:9438	5979102	199	True				
ANR	5979707	Statement	max_trace	276:22:9440:9448	5979102	200	True				
ANR	5979708	Statement	","	276:31:9449:9449	5979102	201	True				
ANR	5979709	Statement	mem	276:33:9451:9453	5979102	202	True				
ANR	5979710	Statement	","	276:36:9454:9454	5979102	203	True				
ANR	5979711	Statement	rp	276:38:9456:9457	5979102	204	True				
ANR	5979712	Statement	)	276:40:9458:9458	5979102	205	True				
ANR	5979713	CompoundStatement		119:8:3972:3987	5979102	206					
ANR	5979714	IdentifierDeclStatement	enum_ptr_t eptr ;	277:8:9470:9485	5979102	0	True				
ANR	5979715	IdentifierDecl	eptr		5979102	0					
ANR	5979716	IdentifierDeclType	enum_ptr_t		5979102	0					
ANR	5979717	Identifier	eptr		5979102	1					
ANR	5979718	ExpressionStatement	eptr . ptr = * rp -> p	279:8:9496:9513	5979102	1	True				
ANR	5979719	AssignmentExpression	eptr . ptr = * rp -> p		5979102	0		=			
ANR	5979720	MemberAccess	eptr . ptr		5979102	0					
ANR	5979721	Identifier	eptr		5979102	0					
ANR	5979722	Identifier	ptr		5979102	1					
ANR	5979723	UnaryOperationExpression	* rp -> p		5979102	1					
ANR	5979724	UnaryOperator	*		5979102	0					
ANR	5979725	PtrMemberAccess	rp -> p		5979102	1					
ANR	5979726	Identifier	rp		5979102	0					
ANR	5979727	Identifier	p		5979102	1					
ANR	5979728	ExpressionStatement	"if_debug_root ( '6' , ( const gs_memory_t * ) mem , ""[6]unmarking root"" , rp )"	280:8:9523:9592	5979102	2	True				
ANR	5979729	CallExpression	"if_debug_root ( '6' , ( const gs_memory_t * ) mem , ""[6]unmarking root"" , rp )"		5979102	0					
ANR	5979730	Callee	if_debug_root		5979102	0					
ANR	5979731	Identifier	if_debug_root		5979102	0					
ANR	5979732	ArgumentList	'6'		5979102	1					
ANR	5979733	Argument	'6'		5979102	0					
ANR	5979734	PrimaryExpression	'6'		5979102	0					
ANR	5979735	Argument	( const gs_memory_t * ) mem		5979102	1					
ANR	5979736	CastExpression	( const gs_memory_t * ) mem		5979102	0					
ANR	5979737	CastTarget	const gs_memory_t *		5979102	0					
ANR	5979738	Identifier	mem		5979102	1					
ANR	5979739	Argument	"""[6]unmarking root"""		5979102	2					
ANR	5979740	PrimaryExpression	"""[6]unmarking root"""		5979102	0					
ANR	5979741	Argument	rp		5979102	3					
ANR	5979742	Identifier	rp		5979102	0					
ANR	5979743	ExpressionStatement	"( * rp -> ptype -> unmark ) ( & eptr , & state )"	281:8:9602:9637	5979102	3	True				
ANR	5979744	CallExpression	"( * rp -> ptype -> unmark ) ( & eptr , & state )"		5979102	0					
ANR	5979745	Callee	* rp -> ptype -> unmark		5979102	0					
ANR	5979746	UnaryOperationExpression	* rp -> ptype -> unmark		5979102	0					
ANR	5979747	UnaryOperator	*		5979102	0					
ANR	5979748	PtrMemberAccess	rp -> ptype -> unmark		5979102	1					
ANR	5979749	PtrMemberAccess	rp -> ptype		5979102	0					
ANR	5979750	Identifier	rp		5979102	0					
ANR	5979751	Identifier	ptype		5979102	1					
ANR	5979752	Identifier	unmark		5979102	1					
ANR	5979753	ArgumentList	& eptr		5979102	1					
ANR	5979754	Argument	& eptr		5979102	0					
ANR	5979755	UnaryOperationExpression	& eptr		5979102	0					
ANR	5979756	UnaryOperator	&		5979102	0					
ANR	5979757	Identifier	eptr		5979102	1					
ANR	5979758	Argument	& state		5979102	1					
ANR	5979759	UnaryOperationExpression	& state		5979102	0					
ANR	5979760	UnaryOperator	&		5979102	0					
ANR	5979761	Identifier	state		5979102	1					
ANR	5979762	ExpressionStatement	"end_phase ( state . heap , ""clear root marks"" )"	284:4:9650:9690	5979102	207	True				
ANR	5979763	CallExpression	"end_phase ( state . heap , ""clear root marks"" )"		5979102	0					
ANR	5979764	Callee	end_phase		5979102	0					
ANR	5979765	Identifier	end_phase		5979102	0					
ANR	5979766	ArgumentList	state . heap		5979102	1					
ANR	5979767	Argument	state . heap		5979102	0					
ANR	5979768	MemberAccess	state . heap		5979102	0					
ANR	5979769	Identifier	state		5979102	0					
ANR	5979770	Identifier	heap		5979102	1					
ANR	5979771	Argument	"""clear root marks"""		5979102	1					
ANR	5979772	PrimaryExpression	"""clear root marks"""		5979102	0					
ANR	5979773	IfStatement	if ( global )		5979102	208					
ANR	5979774	Condition	global	286:8:9701:9706	5979102	0	True				
ANR	5979775	Identifier	global		5979102	0					
ANR	5979776	CompoundStatement		130:8:4285:4338	5979102	1					
ANR	5979777	IdentifierDeclStatement	op_array_table * global_ops = get_global_op_array ( cmem ) ;	287:8:9719:9773	5979102	0	True				
ANR	5979778	IdentifierDecl	* global_ops = get_global_op_array ( cmem )		5979102	0					
ANR	5979779	IdentifierDeclType	op_array_table *		5979102	0					
ANR	5979780	Identifier	global_ops		5979102	1					
ANR	5979781	AssignmentExpression	* global_ops = get_global_op_array ( cmem )		5979102	2		=			
ANR	5979782	Identifier	global_ops		5979102	0					
ANR	5979783	CallExpression	get_global_op_array ( cmem )		5979102	1					
ANR	5979784	Callee	get_global_op_array		5979102	0					
ANR	5979785	Identifier	get_global_op_array		5979102	0					
ANR	5979786	ArgumentList	cmem		5979102	1					
ANR	5979787	Argument	cmem		5979102	0					
ANR	5979788	Identifier	cmem		5979102	0					
ANR	5979789	IdentifierDeclStatement	op_array_table * local_ops = get_local_op_array ( cmem ) ;	288:8:9783:9836	5979102	1	True				
ANR	5979790	IdentifierDecl	* local_ops = get_local_op_array ( cmem )		5979102	0					
ANR	5979791	IdentifierDeclType	op_array_table *		5979102	0					
ANR	5979792	Identifier	local_ops		5979102	1					
ANR	5979793	AssignmentExpression	* local_ops = get_local_op_array ( cmem )		5979102	2		=			
ANR	5979794	Identifier	local_ops		5979102	0					
ANR	5979795	CallExpression	get_local_op_array ( cmem )		5979102	1					
ANR	5979796	Callee	get_local_op_array		5979102	0					
ANR	5979797	Identifier	get_local_op_array		5979102	0					
ANR	5979798	ArgumentList	cmem		5979102	1					
ANR	5979799	Argument	cmem		5979102	0					
ANR	5979800	Identifier	cmem		5979102	0					
ANR	5979801	ExpressionStatement	"gc_unmark_names ( state . ntable , global_ops , local_ops )"	289:8:9846:9898	5979102	2	True				
ANR	5979802	CallExpression	"gc_unmark_names ( state . ntable , global_ops , local_ops )"		5979102	0					
ANR	5979803	Callee	gc_unmark_names		5979102	0					
ANR	5979804	Identifier	gc_unmark_names		5979102	0					
ANR	5979805	ArgumentList	state . ntable		5979102	1					
ANR	5979806	Argument	state . ntable		5979102	0					
ANR	5979807	MemberAccess	state . ntable		5979102	0					
ANR	5979808	Identifier	state		5979102	0					
ANR	5979809	Identifier	ntable		5979102	1					
ANR	5979810	Argument	global_ops		5979102	1					
ANR	5979811	Identifier	global_ops		5979102	0					
ANR	5979812	Argument	local_ops		5979102	2					
ANR	5979813	Identifier	local_ops		5979102	0					
ANR	5979814	ExpressionStatement	"gc_init_mark_stack ( & ms_default . stack , ms_size_default )"	294:4:9959:10013	5979102	209	True				
ANR	5979815	CallExpression	"gc_init_mark_stack ( & ms_default . stack , ms_size_default )"		5979102	0					
ANR	5979816	Callee	gc_init_mark_stack		5979102	0					
ANR	5979817	Identifier	gc_init_mark_stack		5979102	0					
ANR	5979818	ArgumentList	& ms_default . stack		5979102	1					
ANR	5979819	Argument	& ms_default . stack		5979102	0					
ANR	5979820	UnaryOperationExpression	& ms_default . stack		5979102	0					
ANR	5979821	UnaryOperator	&		5979102	0					
ANR	5979822	MemberAccess	ms_default . stack		5979102	1					
ANR	5979823	Identifier	ms_default		5979102	0					
ANR	5979824	Identifier	stack		5979102	1					
ANR	5979825	Argument	ms_size_default		5979102	1					
ANR	5979826	Identifier	ms_size_default		5979102	0					
ANR	5979827	ExpressionStatement	ms_default . stack . prev = 0	295:4:10019:10044	5979102	210	True				
ANR	5979828	AssignmentExpression	ms_default . stack . prev = 0		5979102	0		=			
ANR	5979829	MemberAccess	ms_default . stack . prev		5979102	0					
ANR	5979830	MemberAccess	ms_default . stack		5979102	0					
ANR	5979831	Identifier	ms_default		5979102	0					
ANR	5979832	Identifier	stack		5979102	1					
ANR	5979833	Identifier	prev		5979102	1					
ANR	5979834	PrimaryExpression	0		5979102	1					
ANR	5979835	ExpressionStatement	ms_default . stack . on_heap = false	296:4:10050:10082	5979102	211	True				
ANR	5979836	AssignmentExpression	ms_default . stack . on_heap = false		5979102	0		=			
ANR	5979837	MemberAccess	ms_default . stack . on_heap		5979102	0					
ANR	5979838	MemberAccess	ms_default . stack		5979102	0					
ANR	5979839	Identifier	ms_default		5979102	0					
ANR	5979840	Identifier	stack		5979102	1					
ANR	5979841	Identifier	on_heap		5979102	1					
ANR	5979842	Identifier	false		5979102	1					
ANR	5979843	CompoundStatement		144:8:4711:4742	5979102	212					
ANR	5979844	IdentifierDeclStatement	gc_mark_stack * end = mark_stack ;	302:8:10209:10240	5979102	0	True				
ANR	5979845	IdentifierDecl	* end = mark_stack		5979102	0					
ANR	5979846	IdentifierDeclType	gc_mark_stack *		5979102	0					
ANR	5979847	Identifier	end		5979102	1					
ANR	5979848	AssignmentExpression	* end = mark_stack		5979102	2		=			
ANR	5979849	Identifier	mark_stack		5979102	0					
ANR	5979850	Identifier	mark_stack		5979102	1					
ANR	5979851	Statement	for_clumps	304:8:10251:10260	5979102	1	True				
ANR	5979852	Statement	(	304:18:10261:10261	5979102	2	True				
ANR	5979853	Statement	ispace	304:19:10262:10267	5979102	3	True				
ANR	5979854	Statement	","	304:25:10268:10268	5979102	4	True				
ANR	5979855	Statement	max_trace	304:27:10270:10278	5979102	5	True				
ANR	5979856	Statement	","	304:36:10279:10279	5979102	6	True				
ANR	5979857	Statement	mem	304:38:10281:10283	5979102	7	True				
ANR	5979858	Statement	","	304:41:10284:10284	5979102	8	True				
ANR	5979859	Statement	cp	304:43:10286:10287	5979102	9	True				
ANR	5979860	Statement	","	304:45:10288:10288	5979102	10	True				
ANR	5979861	Statement	&	304:47:10290:10290	5979102	11	True				
ANR	5979862	Statement	sw	304:48:10291:10292	5979102	12	True				
ANR	5979863	Statement	)	304:50:10293:10293	5979102	13	True				
ANR	5979864	CompoundStatement		147:12:4811:4843	5979102	14					
ANR	5979865	IdentifierDeclStatement	uint avail = cp -> ctop - cp -> cbot ;	305:12:10309:10341	5979102	0	True				
ANR	5979866	IdentifierDecl	avail = cp -> ctop - cp -> cbot		5979102	0					
ANR	5979867	IdentifierDeclType	uint		5979102	0					
ANR	5979868	Identifier	avail		5979102	1					
ANR	5979869	AssignmentExpression	avail = cp -> ctop - cp -> cbot		5979102	2		=			
ANR	5979870	Identifier	avail		5979102	0					
ANR	5979871	AdditiveExpression	cp -> ctop - cp -> cbot		5979102	1		-			
ANR	5979872	PtrMemberAccess	cp -> ctop		5979102	0					
ANR	5979873	Identifier	cp		5979102	0					
ANR	5979874	Identifier	ctop		5979102	1					
ANR	5979875	PtrMemberAccess	cp -> cbot		5979102	1					
ANR	5979876	Identifier	cp		5979102	0					
ANR	5979877	Identifier	cbot		5979102	1					
ANR	5979878	IfStatement	if ( avail >= sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * ms_size_min && ! cp -> inner_count )		5979102	1					
ANR	5979879	Condition	avail >= sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * ms_size_min && ! cp -> inner_count	307:16:10360:10474	5979102	0	True				
ANR	5979880	AndExpression	avail >= sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * ms_size_min && ! cp -> inner_count		5979102	0		&&			
ANR	5979881	RelationalExpression	avail >= sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * ms_size_min		5979102	0		>=			
ANR	5979882	Identifier	avail		5979102	0					
ANR	5979883	AdditiveExpression	sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * ms_size_min		5979102	1		+			
ANR	5979884	SizeofExpression	sizeof ( gc_mark_stack )		5979102	0					
ANR	5979885	Sizeof	sizeof		5979102	0					
ANR	5979886	SizeofOperand	gc_mark_stack		5979102	1					
ANR	5979887	MultiplicativeExpression	sizeof ( ms_entry ) * ms_size_min		5979102	1		*			
ANR	5979888	SizeofExpression	sizeof ( ms_entry )		5979102	0					
ANR	5979889	Sizeof	sizeof		5979102	0					
ANR	5979890	SizeofOperand	ms_entry		5979102	1					
ANR	5979891	Identifier	ms_size_min		5979102	1					
ANR	5979892	UnaryOperationExpression	! cp -> inner_count		5979102	1					
ANR	5979893	UnaryOperator	!		5979102	0					
ANR	5979894	PtrMemberAccess	cp -> inner_count		5979102	1					
ANR	5979895	Identifier	cp		5979102	0					
ANR	5979896	Identifier	inner_count		5979102	1					
ANR	5979897	CompoundStatement		153:16:5014:5061	5979102	1					
ANR	5979898	IdentifierDeclStatement	gc_mark_stack * pms = ( gc_mark_stack * ) cp -> cbot ;	311:16:10512:10559	5979102	0	True				
ANR	5979899	IdentifierDecl	* pms = ( gc_mark_stack * ) cp -> cbot		5979102	0					
ANR	5979900	IdentifierDeclType	gc_mark_stack *		5979102	0					
ANR	5979901	Identifier	pms		5979102	1					
ANR	5979902	AssignmentExpression	* pms = ( gc_mark_stack * ) cp -> cbot		5979102	2		=			
ANR	5979903	Identifier	pms		5979102	0					
ANR	5979904	CastExpression	( gc_mark_stack * ) cp -> cbot		5979102	1					
ANR	5979905	CastTarget	gc_mark_stack *		5979102	0					
ANR	5979906	PtrMemberAccess	cp -> cbot		5979102	1					
ANR	5979907	Identifier	cp		5979102	0					
ANR	5979908	Identifier	cbot		5979102	1					
ANR	5979909	ExpressionStatement	"gc_init_mark_stack ( pms , ( avail - sizeof ( gc_mark_stack ) ) / sizeof ( ms_entry ) )"	313:16:10578:10688	5979102	1	True				
ANR	5979910	CallExpression	"gc_init_mark_stack ( pms , ( avail - sizeof ( gc_mark_stack ) ) / sizeof ( ms_entry ) )"		5979102	0					
ANR	5979911	Callee	gc_init_mark_stack		5979102	0					
ANR	5979912	Identifier	gc_init_mark_stack		5979102	0					
ANR	5979913	ArgumentList	pms		5979102	1					
ANR	5979914	Argument	pms		5979102	0					
ANR	5979915	Identifier	pms		5979102	0					
ANR	5979916	Argument	( avail - sizeof ( gc_mark_stack ) ) / sizeof ( ms_entry )		5979102	1					
ANR	5979917	MultiplicativeExpression	( avail - sizeof ( gc_mark_stack ) ) / sizeof ( ms_entry )		5979102	0		/			
ANR	5979918	AdditiveExpression	avail - sizeof ( gc_mark_stack )		5979102	0		-			
ANR	5979919	Identifier	avail		5979102	0					
ANR	5979920	SizeofExpression	sizeof ( gc_mark_stack )		5979102	1					
ANR	5979921	Sizeof	sizeof		5979102	0					
ANR	5979922	SizeofOperand	gc_mark_stack		5979102	1					
ANR	5979923	SizeofExpression	sizeof ( ms_entry )		5979102	1					
ANR	5979924	Sizeof	sizeof		5979102	0					
ANR	5979925	SizeofOperand	ms_entry		5979102	1					
ANR	5979926	ExpressionStatement	end -> next = pms	315:16:10706:10721	5979102	2	True				
ANR	5979927	AssignmentExpression	end -> next = pms		5979102	0		=			
ANR	5979928	PtrMemberAccess	end -> next		5979102	0					
ANR	5979929	Identifier	end		5979102	0					
ANR	5979930	Identifier	next		5979102	1					
ANR	5979931	Identifier	pms		5979102	1					
ANR	5979932	ExpressionStatement	pms -> prev = end	316:16:10739:10754	5979102	3	True				
ANR	5979933	AssignmentExpression	pms -> prev = end		5979102	0		=			
ANR	5979934	PtrMemberAccess	pms -> prev		5979102	0					
ANR	5979935	Identifier	pms		5979102	0					
ANR	5979936	Identifier	prev		5979102	1					
ANR	5979937	Identifier	end		5979102	1					
ANR	5979938	ExpressionStatement	pms -> on_heap = false	317:16:10772:10792	5979102	4	True				
ANR	5979939	AssignmentExpression	pms -> on_heap = false		5979102	0		=			
ANR	5979940	PtrMemberAccess	pms -> on_heap		5979102	0					
ANR	5979941	Identifier	pms		5979102	0					
ANR	5979942	Identifier	on_heap		5979102	1					
ANR	5979943	Identifier	false		5979102	1					
ANR	5979944	ExpressionStatement	"if_debug2m ( '6' , ( const gs_memory_t * ) mem , ""[6]adding free 0x%lx(%u) to mark stack\\n"" , ( ulong ) pms , pms -> count )"	318:16:10810:10974	5979102	5	True				
ANR	5979945	CallExpression	"if_debug2m ( '6' , ( const gs_memory_t * ) mem , ""[6]adding free 0x%lx(%u) to mark stack\\n"" , ( ulong ) pms , pms -> count )"		5979102	0					
ANR	5979946	Callee	if_debug2m		5979102	0					
ANR	5979947	Identifier	if_debug2m		5979102	0					
ANR	5979948	ArgumentList	'6'		5979102	1					
ANR	5979949	Argument	'6'		5979102	0					
ANR	5979950	PrimaryExpression	'6'		5979102	0					
ANR	5979951	Argument	( const gs_memory_t * ) mem		5979102	1					
ANR	5979952	CastExpression	( const gs_memory_t * ) mem		5979102	0					
ANR	5979953	CastTarget	const gs_memory_t *		5979102	0					
ANR	5979954	Identifier	mem		5979102	1					
ANR	5979955	Argument	"""[6]adding free 0x%lx(%u) to mark stack\\n"""		5979102	2					
ANR	5979956	PrimaryExpression	"""[6]adding free 0x%lx(%u) to mark stack\\n"""		5979102	0					
ANR	5979957	Argument	( ulong ) pms		5979102	3					
ANR	5979958	CastExpression	( ulong ) pms		5979102	0					
ANR	5979959	CastTarget	ulong		5979102	0					
ANR	5979960	Identifier	pms		5979102	1					
ANR	5979961	Argument	pms -> count		5979102	4					
ANR	5979962	PtrMemberAccess	pms -> count		5979102	0					
ANR	5979963	Identifier	pms		5979102	0					
ANR	5979964	Identifier	count		5979102	1					
ANR	5979965	ExpressionStatement	cp -> rescan_bot = cp -> cend	322:12:11002:11027	5979102	2	True				
ANR	5979966	AssignmentExpression	cp -> rescan_bot = cp -> cend		5979102	0		=			
ANR	5979967	PtrMemberAccess	cp -> rescan_bot		5979102	0					
ANR	5979968	Identifier	cp		5979102	0					
ANR	5979969	Identifier	rescan_bot		5979102	1					
ANR	5979970	PtrMemberAccess	cp -> cend		5979102	1					
ANR	5979971	Identifier	cp		5979102	0					
ANR	5979972	Identifier	cend		5979102	1					
ANR	5979973	ExpressionStatement	cp -> rescan_top = cp -> cbase	323:12:11041:11067	5979102	3	True				
ANR	5979974	AssignmentExpression	cp -> rescan_top = cp -> cbase		5979102	0		=			
ANR	5979975	PtrMemberAccess	cp -> rescan_top		5979102	0					
ANR	5979976	Identifier	cp		5979102	0					
ANR	5979977	Identifier	rescan_top		5979102	1					
ANR	5979978	PtrMemberAccess	cp -> cbase		5979102	1					
ANR	5979979	Identifier	cp		5979102	0					
ANR	5979980	Identifier	cbase		5979102	1					
ANR	5979981	CompoundStatement		172:8:5637:5649	5979102	213					
ANR	5979982	IdentifierDeclStatement	int more = 0 ;	330:8:11135:11147	5979102	0	True				
ANR	5979983	IdentifierDecl	more = 0		5979102	0					
ANR	5979984	IdentifierDeclType	int		5979102	0					
ANR	5979985	Identifier	more		5979102	1					
ANR	5979986	AssignmentExpression	more = 0		5979102	2		=			
ANR	5979987	Identifier	more		5979102	0					
ANR	5979988	PrimaryExpression	0		5979102	1					
ANR	5979989	Statement	for_roots	334:8:11190:11198	5979102	1	True				
ANR	5979990	Statement	(	334:17:11199:11199	5979102	2	True				
ANR	5979991	Statement	ispace	334:18:11200:11205	5979102	3	True				
ANR	5979992	Statement	","	334:24:11206:11206	5979102	4	True				
ANR	5979993	Statement	max_trace	334:26:11208:11216	5979102	5	True				
ANR	5979994	Statement	","	334:35:11217:11217	5979102	6	True				
ANR	5979995	Statement	mem	334:37:11219:11221	5979102	7	True				
ANR	5979996	Statement	","	334:40:11222:11222	5979102	8	True				
ANR	5979997	Statement	rp	334:42:11224:11225	5979102	9	True				
ANR	5979998	Statement	)	334:44:11226:11226	5979102	10	True				
ANR	5979999	CompoundStatement		176:46:5730:5730	5979102	11					
ANR	5980000	ExpressionStatement	"if_debug_root ( '6' , ( const gs_memory_t * ) mem , ""[6]marking root"" , rp )"	335:12:11242:11309	5979102	0	True				
ANR	5980001	CallExpression	"if_debug_root ( '6' , ( const gs_memory_t * ) mem , ""[6]marking root"" , rp )"		5979102	0					
ANR	5980002	Callee	if_debug_root		5979102	0					
ANR	5980003	Identifier	if_debug_root		5979102	0					
ANR	5980004	ArgumentList	'6'		5979102	1					
ANR	5980005	Argument	'6'		5979102	0					
ANR	5980006	PrimaryExpression	'6'		5979102	0					
ANR	5980007	Argument	( const gs_memory_t * ) mem		5979102	1					
ANR	5980008	CastExpression	( const gs_memory_t * ) mem		5979102	0					
ANR	5980009	CastTarget	const gs_memory_t *		5979102	0					
ANR	5980010	Identifier	mem		5979102	1					
ANR	5980011	Argument	"""[6]marking root"""		5979102	2					
ANR	5980012	PrimaryExpression	"""[6]marking root"""		5979102	0					
ANR	5980013	Argument	rp		5979102	3					
ANR	5980014	Identifier	rp		5979102	0					
ANR	5980015	ExpressionStatement	"more |= gc_trace ( rp , & state , mark_stack )"	336:12:11323:11363	5979102	1	True				
ANR	5980016	AssignmentExpression	"more |= gc_trace ( rp , & state , mark_stack )"		5979102	0		|=			
ANR	5980017	Identifier	more		5979102	0					
ANR	5980018	CallExpression	"gc_trace ( rp , & state , mark_stack )"		5979102	1					
ANR	5980019	Callee	gc_trace		5979102	0					
ANR	5980020	Identifier	gc_trace		5979102	0					
ANR	5980021	ArgumentList	rp		5979102	1					
ANR	5980022	Argument	rp		5979102	0					
ANR	5980023	Identifier	rp		5979102	0					
ANR	5980024	Argument	& state		5979102	1					
ANR	5980025	UnaryOperationExpression	& state		5979102	0					
ANR	5980026	UnaryOperator	&		5979102	0					
ANR	5980027	Identifier	state		5979102	1					
ANR	5980028	Argument	mark_stack		5979102	2					
ANR	5980029	Identifier	mark_stack		5979102	0					
ANR	5980030	ExpressionStatement	"end_phase ( state . heap , ""mark"" )"	339:8:11384:11412	5979102	12	True				
ANR	5980031	CallExpression	"end_phase ( state . heap , ""mark"" )"		5979102	0					
ANR	5980032	Callee	end_phase		5979102	0					
ANR	5980033	Identifier	end_phase		5979102	0					
ANR	5980034	ArgumentList	state . heap		5979102	1					
ANR	5980035	Argument	state . heap		5979102	0					
ANR	5980036	MemberAccess	state . heap		5979102	0					
ANR	5980037	Identifier	state		5979102	0					
ANR	5980038	Identifier	heap		5979102	1					
ANR	5980039	Argument	"""mark"""		5979102	1					
ANR	5980040	PrimaryExpression	"""mark"""		5979102	0					
ANR	5980041	IfStatement	if ( ! global )		5979102	13					
ANR	5980042	Condition	! global	343:12:11493:11499	5979102	0	True				
ANR	5980043	UnaryOperationExpression	! global		5979102	0					
ANR	5980044	UnaryOperator	!		5979102	0					
ANR	5980045	Identifier	global		5979102	1					
ANR	5980046	Statement	for_clumps	344:12:11514:11523	5979102	1	True				
ANR	5980047	Statement	(	344:22:11524:11524	5979102	14	True				
ANR	5980048	Statement	ispace	344:23:11525:11530	5979102	15	True				
ANR	5980049	Statement	","	344:29:11531:11531	5979102	16	True				
ANR	5980050	Statement	min_collect	344:31:11533:11543	5979102	17	True				
ANR	5980051	Statement	-	344:43:11545:11545	5979102	18	True				
ANR	5980052	Statement	1	344:45:11547:11547	5979102	19	True				
ANR	5980053	Statement	","	344:46:11548:11548	5979102	20	True				
ANR	5980054	Statement	mem	344:48:11550:11552	5979102	21	True				
ANR	5980055	Statement	","	344:51:11553:11553	5979102	22	True				
ANR	5980056	Statement	cp	344:53:11555:11556	5979102	23	True				
ANR	5980057	Statement	","	344:55:11557:11557	5979102	24	True				
ANR	5980058	Statement	&	344:57:11559:11559	5979102	25	True				
ANR	5980059	Statement	sw	344:58:11560:11561	5979102	26	True				
ANR	5980060	Statement	)	344:60:11562:11562	5979102	27	True				
ANR	5980061	ExpressionStatement	"more |= gc_trace_clump ( ( const gs_memory_t * ) mem , cp , & state , mark_stack )"	345:16:11580:11652	5979102	28	True				
ANR	5980062	AssignmentExpression	"more |= gc_trace_clump ( ( const gs_memory_t * ) mem , cp , & state , mark_stack )"		5979102	0		|=			
ANR	5980063	Identifier	more		5979102	0					
ANR	5980064	CallExpression	"gc_trace_clump ( ( const gs_memory_t * ) mem , cp , & state , mark_stack )"		5979102	1					
ANR	5980065	Callee	gc_trace_clump		5979102	0					
ANR	5980066	Identifier	gc_trace_clump		5979102	0					
ANR	5980067	ArgumentList	( const gs_memory_t * ) mem		5979102	1					
ANR	5980068	Argument	( const gs_memory_t * ) mem		5979102	0					
ANR	5980069	CastExpression	( const gs_memory_t * ) mem		5979102	0					
ANR	5980070	CastTarget	const gs_memory_t *		5979102	0					
ANR	5980071	Identifier	mem		5979102	1					
ANR	5980072	Argument	cp		5979102	1					
ANR	5980073	Identifier	cp		5979102	0					
ANR	5980074	Argument	& state		5979102	2					
ANR	5980075	UnaryOperationExpression	& state		5979102	0					
ANR	5980076	UnaryOperator	&		5979102	0					
ANR	5980077	Identifier	state		5979102	1					
ANR	5980078	Argument	mark_stack		5979102	3					
ANR	5980079	Identifier	mark_stack		5979102	0					
ANR	5980080	WhileStatement	while ( more < 0 )		5979102	29					
ANR	5980081	Condition	more < 0	349:15:11713:11720	5979102	0	True				
ANR	5980082	RelationalExpression	more < 0		5979102	0		<			
ANR	5980083	Identifier	more		5979102	0					
ANR	5980084	PrimaryExpression	0		5979102	1					
ANR	5980085	CompoundStatement		191:25:6225:6225	5979102	1					
ANR	5980086	ExpressionStatement	more = 0	350:12:11760:11768	5979102	0	True				
ANR	5980087	AssignmentExpression	more = 0		5979102	0		=			
ANR	5980088	Identifier	more		5979102	0					
ANR	5980089	PrimaryExpression	0		5979102	1					
ANR	5980090	Statement	for_clumps	351:12:11782:11791	5979102	1	True				
ANR	5980091	Statement	(	351:22:11792:11792	5979102	2	True				
ANR	5980092	Statement	ispace	351:23:11793:11798	5979102	3	True				
ANR	5980093	Statement	","	351:29:11799:11799	5979102	4	True				
ANR	5980094	Statement	max_trace	351:31:11801:11809	5979102	5	True				
ANR	5980095	Statement	","	351:40:11810:11810	5979102	6	True				
ANR	5980096	Statement	mem	351:42:11812:11814	5979102	7	True				
ANR	5980097	Statement	","	351:45:11815:11815	5979102	8	True				
ANR	5980098	Statement	cp	351:47:11817:11818	5979102	9	True				
ANR	5980099	Statement	","	351:49:11819:11819	5979102	10	True				
ANR	5980100	Statement	&	351:51:11821:11821	5979102	11	True				
ANR	5980101	Statement	sw	351:52:11822:11823	5979102	12	True				
ANR	5980102	Statement	)	351:54:11824:11824	5979102	13	True				
ANR	5980103	ExpressionStatement	"more |= gc_rescan_clump ( cp , & state , mark_stack )"	352:16:11842:11889	5979102	14	True				
ANR	5980104	AssignmentExpression	"more |= gc_rescan_clump ( cp , & state , mark_stack )"		5979102	0		|=			
ANR	5980105	Identifier	more		5979102	0					
ANR	5980106	CallExpression	"gc_rescan_clump ( cp , & state , mark_stack )"		5979102	1					
ANR	5980107	Callee	gc_rescan_clump		5979102	0					
ANR	5980108	Identifier	gc_rescan_clump		5979102	0					
ANR	5980109	ArgumentList	cp		5979102	1					
ANR	5980110	Argument	cp		5979102	0					
ANR	5980111	Identifier	cp		5979102	0					
ANR	5980112	Argument	& state		5979102	1					
ANR	5980113	UnaryOperationExpression	& state		5979102	0					
ANR	5980114	UnaryOperator	&		5979102	0					
ANR	5980115	Identifier	state		5979102	1					
ANR	5980116	Argument	mark_stack		5979102	2					
ANR	5980117	Identifier	mark_stack		5979102	0					
ANR	5980118	ExpressionStatement	"end_phase ( state . heap , ""mark overflow"" )"	355:8:11910:11947	5979102	30	True				
ANR	5980119	CallExpression	"end_phase ( state . heap , ""mark overflow"" )"		5979102	0					
ANR	5980120	Callee	end_phase		5979102	0					
ANR	5980121	Identifier	end_phase		5979102	0					
ANR	5980122	ArgumentList	state . heap		5979102	1					
ANR	5980123	Argument	state . heap		5979102	0					
ANR	5980124	MemberAccess	state . heap		5979102	0					
ANR	5980125	Identifier	state		5979102	0					
ANR	5980126	Identifier	heap		5979102	1					
ANR	5980127	Argument	"""mark overflow"""		5979102	1					
ANR	5980128	PrimaryExpression	"""mark overflow"""		5979102	0					
ANR	5980129	CompoundStatement		203:8:6504:6535	5979102	214					
ANR	5980130	IdentifierDeclStatement	gc_mark_stack * pms = mark_stack ;	361:8:12002:12033	5979102	0	True				
ANR	5980131	IdentifierDecl	* pms = mark_stack		5979102	0					
ANR	5980132	IdentifierDeclType	gc_mark_stack *		5979102	0					
ANR	5980133	Identifier	pms		5979102	1					
ANR	5980134	AssignmentExpression	* pms = mark_stack		5979102	2		=			
ANR	5980135	Identifier	mark_stack		5979102	0					
ANR	5980136	Identifier	mark_stack		5979102	1					
ANR	5980137	WhileStatement	while ( pms -> next )		5979102	1					
ANR	5980138	Condition	pms -> next	363:15:12051:12059	5979102	0	True				
ANR	5980139	PtrMemberAccess	pms -> next		5979102	0					
ANR	5980140	Identifier	pms		5979102	0					
ANR	5980141	Identifier	next		5979102	1					
ANR	5980142	ExpressionStatement	pms = pms -> next	364:12:12074:12089	5979102	1	True				
ANR	5980143	AssignmentExpression	pms = pms -> next		5979102	0		=			
ANR	5980144	Identifier	pms		5979102	0					
ANR	5980145	PtrMemberAccess	pms -> next		5979102	1					
ANR	5980146	Identifier	pms		5979102	0					
ANR	5980147	Identifier	next		5979102	1					
ANR	5980148	WhileStatement	while ( pms )		5979102	2					
ANR	5980149	Condition	pms	365:15:12106:12108	5979102	0	True				
ANR	5980150	Identifier	pms		5979102	0					
ANR	5980151	CompoundStatement		208:12:6627:6658	5979102	1					
ANR	5980152	IdentifierDeclStatement	gc_mark_stack * prev = pms -> prev ;	366:12:12125:12156	5979102	0	True				
ANR	5980153	IdentifierDecl	* prev = pms -> prev		5979102	0					
ANR	5980154	IdentifierDeclType	gc_mark_stack *		5979102	0					
ANR	5980155	Identifier	prev		5979102	1					
ANR	5980156	AssignmentExpression	* prev = pms -> prev		5979102	2		=			
ANR	5980157	Identifier	prev		5979102	0					
ANR	5980158	PtrMemberAccess	pms -> prev		5979102	1					
ANR	5980159	Identifier	pms		5979102	0					
ANR	5980160	Identifier	prev		5979102	1					
ANR	5980161	IfStatement	if ( pms -> on_heap )		5979102	1					
ANR	5980162	Condition	pms -> on_heap	368:16:12175:12186	5979102	0	True				
ANR	5980163	PtrMemberAccess	pms -> on_heap		5979102	0					
ANR	5980164	Identifier	pms		5979102	0					
ANR	5980165	Identifier	on_heap		5979102	1					
ANR	5980166	ExpressionStatement	"gs_free_object ( state . heap , pms , ""gc mark stack"" )"	369:16:12205:12253	5979102	1	True				
ANR	5980167	CallExpression	"gs_free_object ( state . heap , pms , ""gc mark stack"" )"		5979102	0					
ANR	5980168	Callee	gs_free_object		5979102	0					
ANR	5980169	Identifier	gs_free_object		5979102	0					
ANR	5980170	ArgumentList	state . heap		5979102	1					
ANR	5980171	Argument	state . heap		5979102	0					
ANR	5980172	MemberAccess	state . heap		5979102	0					
ANR	5980173	Identifier	state		5979102	0					
ANR	5980174	Identifier	heap		5979102	1					
ANR	5980175	Argument	pms		5979102	1					
ANR	5980176	Identifier	pms		5979102	0					
ANR	5980177	Argument	"""gc mark stack"""		5979102	2					
ANR	5980178	PrimaryExpression	"""gc mark stack"""		5979102	0					
ANR	5980179	ElseStatement	else		5979102	0					
ANR	5980180	ExpressionStatement	"gs_alloc_fill ( pms , gs_alloc_fill_free , sizeof ( * pms ) + sizeof ( ms_entry ) * pms -> count )"	371:16:12288:12402	5979102	0	True				
ANR	5980181	CallExpression	"gs_alloc_fill ( pms , gs_alloc_fill_free , sizeof ( * pms ) + sizeof ( ms_entry ) * pms -> count )"		5979102	0					
ANR	5980182	Callee	gs_alloc_fill		5979102	0					
ANR	5980183	Identifier	gs_alloc_fill		5979102	0					
ANR	5980184	ArgumentList	pms		5979102	1					
ANR	5980185	Argument	pms		5979102	0					
ANR	5980186	Identifier	pms		5979102	0					
ANR	5980187	Argument	gs_alloc_fill_free		5979102	1					
ANR	5980188	Identifier	gs_alloc_fill_free		5979102	0					
ANR	5980189	Argument	sizeof ( * pms ) + sizeof ( ms_entry ) * pms -> count		5979102	2					
ANR	5980190	AdditiveExpression	sizeof ( * pms ) + sizeof ( ms_entry ) * pms -> count		5979102	0		+			
ANR	5980191	SizeofExpression	sizeof ( * pms )		5979102	0					
ANR	5980192	Sizeof	sizeof		5979102	0					
ANR	5980193	UnaryOperationExpression	* pms		5979102	1					
ANR	5980194	UnaryOperator	*		5979102	0					
ANR	5980195	Identifier	pms		5979102	1					
ANR	5980196	MultiplicativeExpression	sizeof ( ms_entry ) * pms -> count		5979102	1		*			
ANR	5980197	SizeofExpression	sizeof ( ms_entry )		5979102	0					
ANR	5980198	Sizeof	sizeof		5979102	0					
ANR	5980199	SizeofOperand	ms_entry		5979102	1					
ANR	5980200	PtrMemberAccess	pms -> count		5979102	1					
ANR	5980201	Identifier	pms		5979102	0					
ANR	5980202	Identifier	count		5979102	1					
ANR	5980203	ExpressionStatement	pms = prev	373:12:12416:12426	5979102	2	True				
ANR	5980204	AssignmentExpression	pms = prev		5979102	0		=			
ANR	5980205	Identifier	pms		5979102	0					
ANR	5980206	Identifier	prev		5979102	1					
ANR	5980207	ExpressionStatement	"end_phase ( state . heap , ""free mark stack"" )"	377:4:12449:12488	5979102	215	True				
ANR	5980208	CallExpression	"end_phase ( state . heap , ""free mark stack"" )"		5979102	0					
ANR	5980209	Callee	end_phase		5979102	0					
ANR	5980210	Identifier	end_phase		5979102	0					
ANR	5980211	ArgumentList	state . heap		5979102	1					
ANR	5980212	Argument	state . heap		5979102	0					
ANR	5980213	MemberAccess	state . heap		5979102	0					
ANR	5980214	Identifier	state		5979102	0					
ANR	5980215	Identifier	heap		5979102	1					
ANR	5980216	Argument	"""free mark stack"""		5979102	1					
ANR	5980217	PrimaryExpression	"""free mark stack"""		5979102	0					
ANR	5980218	IfStatement	if ( global )		5979102	216					
ANR	5980219	Condition	global	379:8:12499:12504	5979102	0	True				
ANR	5980220	Identifier	global		5979102	0					
ANR	5980221	CompoundStatement		221:16:7009:7009	5979102	1					
ANR	5980222	ExpressionStatement	gc_trace_finish ( & state )	380:8:12517:12540	5979102	0	True				
ANR	5980223	CallExpression	gc_trace_finish ( & state )		5979102	0					
ANR	5980224	Callee	gc_trace_finish		5979102	0					
ANR	5980225	Identifier	gc_trace_finish		5979102	0					
ANR	5980226	ArgumentList	& state		5979102	1					
ANR	5980227	Argument	& state		5979102	0					
ANR	5980228	UnaryOperationExpression	& state		5979102	0					
ANR	5980229	UnaryOperator	&		5979102	0					
ANR	5980230	Identifier	state		5979102	1					
ANR	5980231	ExpressionStatement	"names_trace_finish ( state . ntable , & state )"	381:8:12550:12590	5979102	1	True				
ANR	5980232	CallExpression	"names_trace_finish ( state . ntable , & state )"		5979102	0					
ANR	5980233	Callee	names_trace_finish		5979102	0					
ANR	5980234	Identifier	names_trace_finish		5979102	0					
ANR	5980235	ArgumentList	state . ntable		5979102	1					
ANR	5980236	Argument	state . ntable		5979102	0					
ANR	5980237	MemberAccess	state . ntable		5979102	0					
ANR	5980238	Identifier	state		5979102	0					
ANR	5980239	Identifier	ntable		5979102	1					
ANR	5980240	Argument	& state		5979102	1					
ANR	5980241	UnaryOperationExpression	& state		5979102	0					
ANR	5980242	UnaryOperator	&		5979102	0					
ANR	5980243	Identifier	state		5979102	1					
ANR	5980244	ExpressionStatement	"end_phase ( state . heap , ""finish trace"" )"	383:8:12601:12637	5979102	2	True				
ANR	5980245	CallExpression	"end_phase ( state . heap , ""finish trace"" )"		5979102	0					
ANR	5980246	Callee	end_phase		5979102	0					
ANR	5980247	Identifier	end_phase		5979102	0					
ANR	5980248	ArgumentList	state . heap		5979102	1					
ANR	5980249	Argument	state . heap		5979102	0					
ANR	5980250	MemberAccess	state . heap		5979102	0					
ANR	5980251	Identifier	state		5979102	0					
ANR	5980252	Identifier	heap		5979102	1					
ANR	5980253	Argument	"""finish trace"""		5979102	1					
ANR	5980254	PrimaryExpression	"""finish trace"""		5979102	0					
ANR	5980255	CompoundStatement		231:8:7268:7273	5979102	217					
ANR	5980256	IdentifierDeclStatement	int i ;	389:8:12766:12771	5979102	0	True				
ANR	5980257	IdentifierDecl	i		5979102	0					
ANR	5980258	IdentifierDeclType	int		5979102	0					
ANR	5980259	Identifier	i		5979102	1					
ANR	5980260	Statement	for_collected_spaces	391:8:12782:12801	5979102	1	True				
ANR	5980261	Statement	(	391:28:12802:12802	5979102	2	True				
ANR	5980262	Statement	i	391:29:12803:12803	5979102	3	True				
ANR	5980263	Statement	)	391:30:12804:12804	5979102	4	True				
ANR	5980264	CompoundStatement		234:12:7322:7362	5979102	5					
ANR	5980265	IdentifierDeclStatement	gs_ref_memory_t * mem = space_memories [ i ] ;	392:12:12820:12860	5979102	0	True				
ANR	5980266	IdentifierDecl	* mem = space_memories [ i ]		5979102	0					
ANR	5980267	IdentifierDeclType	gs_ref_memory_t *		5979102	0					
ANR	5980268	Identifier	mem		5979102	1					
ANR	5980269	AssignmentExpression	* mem = space_memories [ i ]		5979102	2		=			
ANR	5980270	Identifier	mem		5979102	0					
ANR	5980271	ArrayIndexing	space_memories [ i ]		5979102	1					
ANR	5980272	Identifier	space_memories		5979102	0					
ANR	5980273	Identifier	i		5979102	1					
ANR	5980274	ExpressionStatement	alloc_save__filter_changes ( mem )	394:12:12875:12906	5979102	1	True				
ANR	5980275	CallExpression	alloc_save__filter_changes ( mem )		5979102	0					
ANR	5980276	Callee	alloc_save__filter_changes		5979102	0					
ANR	5980277	Identifier	alloc_save__filter_changes		5979102	0					
ANR	5980278	ArgumentList	mem		5979102	1					
ANR	5980279	Argument	mem		5979102	0					
ANR	5980280	Identifier	mem		5979102	0					
ANR	5980281	Statement	for_clumps	401:4:13131:13140	5979102	218	True				
ANR	5980282	Statement	(	401:14:13141:13141	5979102	219	True				
ANR	5980283	Statement	ispace	401:15:13142:13147	5979102	220	True				
ANR	5980284	Statement	","	401:21:13148:13148	5979102	221	True				
ANR	5980285	Statement	min_collect	401:23:13150:13160	5979102	222	True				
ANR	5980286	Statement	-	401:35:13162:13162	5979102	223	True				
ANR	5980287	Statement	1	401:37:13164:13164	5979102	224	True				
ANR	5980288	Statement	","	401:38:13165:13165	5979102	225	True				
ANR	5980289	Statement	mem	401:40:13167:13169	5979102	226	True				
ANR	5980290	Statement	","	401:43:13170:13170	5979102	227	True				
ANR	5980291	Statement	cp	401:45:13172:13173	5979102	228	True				
ANR	5980292	Statement	","	401:47:13174:13174	5979102	229	True				
ANR	5980293	Statement	&	401:49:13176:13176	5979102	230	True				
ANR	5980294	Statement	sw	401:50:13177:13178	5979102	231	True				
ANR	5980295	Statement	)	401:52:13179:13179	5979102	232	True				
ANR	5980296	ExpressionStatement	"gc_objects_clear_marks ( ( const gs_memory_t * ) mem , cp )"	402:8:13189:13241	5979102	233	True				
ANR	5980297	CallExpression	"gc_objects_clear_marks ( ( const gs_memory_t * ) mem , cp )"		5979102	0					
ANR	5980298	Callee	gc_objects_clear_marks		5979102	0					
ANR	5980299	Identifier	gc_objects_clear_marks		5979102	0					
ANR	5980300	ArgumentList	( const gs_memory_t * ) mem		5979102	1					
ANR	5980301	Argument	( const gs_memory_t * ) mem		5979102	0					
ANR	5980302	CastExpression	( const gs_memory_t * ) mem		5979102	0					
ANR	5980303	CastTarget	const gs_memory_t *		5979102	0					
ANR	5980304	Identifier	mem		5979102	1					
ANR	5980305	Argument	cp		5979102	1					
ANR	5980306	Identifier	cp		5979102	0					
ANR	5980307	ExpressionStatement	"end_phase ( state . heap , ""post-clear marks"" )"	404:4:13248:13288	5979102	234	True				
ANR	5980308	CallExpression	"end_phase ( state . heap , ""post-clear marks"" )"		5979102	0					
ANR	5980309	Callee	end_phase		5979102	0					
ANR	5980310	Identifier	end_phase		5979102	0					
ANR	5980311	ArgumentList	state . heap		5979102	1					
ANR	5980312	Argument	state . heap		5979102	0					
ANR	5980313	MemberAccess	state . heap		5979102	0					
ANR	5980314	Identifier	state		5979102	0					
ANR	5980315	Identifier	heap		5979102	1					
ANR	5980316	Argument	"""post-clear marks"""		5979102	1					
ANR	5980317	PrimaryExpression	"""post-clear marks"""		5979102	0					
ANR	5980318	Statement	for_clumps	406:4:13295:13304	5979102	235	True				
ANR	5980319	Statement	(	406:14:13305:13305	5979102	236	True				
ANR	5980320	Statement	ispace	406:15:13306:13311	5979102	237	True				
ANR	5980321	Statement	","	406:21:13312:13312	5979102	238	True				
ANR	5980322	Statement	min_collect	406:23:13314:13324	5979102	239	True				
ANR	5980323	Statement	-	406:35:13326:13326	5979102	240	True				
ANR	5980324	Statement	1	406:37:13328:13328	5979102	241	True				
ANR	5980325	Statement	","	406:38:13329:13329	5979102	242	True				
ANR	5980326	Statement	mem	406:40:13331:13333	5979102	243	True				
ANR	5980327	Statement	","	406:43:13334:13334	5979102	244	True				
ANR	5980328	Statement	cp	406:45:13336:13337	5979102	245	True				
ANR	5980329	Statement	","	406:47:13338:13338	5979102	246	True				
ANR	5980330	Statement	&	406:49:13340:13340	5979102	247	True				
ANR	5980331	Statement	sw	406:50:13341:13342	5979102	248	True				
ANR	5980332	Statement	)	406:52:13343:13343	5979102	249	True				
ANR	5980333	ExpressionStatement	gc_clear_reloc ( cp )	407:8:13353:13371	5979102	250	True				
ANR	5980334	CallExpression	gc_clear_reloc ( cp )		5979102	0					
ANR	5980335	Callee	gc_clear_reloc		5979102	0					
ANR	5980336	Identifier	gc_clear_reloc		5979102	0					
ANR	5980337	ArgumentList	cp		5979102	1					
ANR	5980338	Argument	cp		5979102	0					
ANR	5980339	Identifier	cp		5979102	0					
ANR	5980340	ExpressionStatement	"end_phase ( state . heap , ""clear reloc"" )"	409:4:13378:13413	5979102	251	True				
ANR	5980341	CallExpression	"end_phase ( state . heap , ""clear reloc"" )"		5979102	0					
ANR	5980342	Callee	end_phase		5979102	0					
ANR	5980343	Identifier	end_phase		5979102	0					
ANR	5980344	ArgumentList	state . heap		5979102	1					
ANR	5980345	Argument	state . heap		5979102	0					
ANR	5980346	MemberAccess	state . heap		5979102	0					
ANR	5980347	Identifier	state		5979102	0					
ANR	5980348	Identifier	heap		5979102	1					
ANR	5980349	Argument	"""clear reloc"""		5979102	1					
ANR	5980350	PrimaryExpression	"""clear reloc"""		5979102	0					
ANR	5980351	CompoundStatement		260:8:8237:8242	5979102	252					
ANR	5980352	IdentifierDeclStatement	int i ;	418:8:13735:13740	5979102	0	True				
ANR	5980353	IdentifierDecl	i		5979102	0					
ANR	5980354	IdentifierDeclType	int		5979102	0					
ANR	5980355	Identifier	i		5979102	1					
ANR	5980356	Statement	for_collected_spaces	420:8:13751:13770	5979102	1	True				
ANR	5980357	ExpressionStatement	"( i ) gs_enable_free ( ( gs_memory_t * ) space_memories [ i ] , false )"	420:28:13771:13842	5979102	2	True				
ANR	5980358	CastExpression	"( i ) gs_enable_free ( ( gs_memory_t * ) space_memories [ i ] , false )"		5979102	0					
ANR	5980359	CastTarget	i		5979102	0					
ANR	5980360	CallExpression	"gs_enable_free ( ( gs_memory_t * ) space_memories [ i ] , false )"		5979102	1					
ANR	5980361	Callee	gs_enable_free		5979102	0					
ANR	5980362	Identifier	gs_enable_free		5979102	0					
ANR	5980363	ArgumentList	( gs_memory_t * ) space_memories [ i ]		5979102	1					
ANR	5980364	Argument	( gs_memory_t * ) space_memories [ i ]		5979102	0					
ANR	5980365	CastExpression	( gs_memory_t * ) space_memories [ i ]		5979102	0					
ANR	5980366	CastTarget	gs_memory_t *		5979102	0					
ANR	5980367	ArrayIndexing	space_memories [ i ]		5979102	1					
ANR	5980368	Identifier	space_memories		5979102	0					
ANR	5980369	Identifier	i		5979102	1					
ANR	5980370	Argument	false		5979102	1					
ANR	5980371	Identifier	false		5979102	0					
ANR	5980372	ExpressionStatement	state . cur_mem = ( gs_memory_t * ) mem	426:4:13979:14013	5979102	253	True				
ANR	5980373	AssignmentExpression	state . cur_mem = ( gs_memory_t * ) mem		5979102	0		=			
ANR	5980374	MemberAccess	state . cur_mem		5979102	0					
ANR	5980375	Identifier	state		5979102	0					
ANR	5980376	Identifier	cur_mem		5979102	1					
ANR	5980377	CastExpression	( gs_memory_t * ) mem		5979102	1					
ANR	5980378	CastTarget	gs_memory_t *		5979102	0					
ANR	5980379	Identifier	mem		5979102	1					
ANR	5980380	Statement	for_collected_clumps	428:4:14020:14039	5979102	254	True				
ANR	5980381	Statement	(	428:24:14040:14040	5979102	255	True				
ANR	5980382	Statement	ispace	428:25:14041:14046	5979102	256	True				
ANR	5980383	Statement	","	428:31:14047:14047	5979102	257	True				
ANR	5980384	Statement	mem	428:33:14049:14051	5979102	258	True				
ANR	5980385	Statement	","	428:36:14052:14052	5979102	259	True				
ANR	5980386	Statement	cp	428:38:14054:14055	5979102	260	True				
ANR	5980387	Statement	","	428:40:14056:14056	5979102	261	True				
ANR	5980388	Statement	&	428:42:14058:14058	5979102	262	True				
ANR	5980389	Statement	sw	428:43:14059:14060	5979102	263	True				
ANR	5980390	Statement	)	428:45:14061:14061	5979102	264	True				
ANR	5980391	CompoundStatement		270:47:8565:8565	5979102	265					
ANR	5980392	ExpressionStatement	"gc_objects_set_reloc ( & state , cp )"	429:8:14073:14105	5979102	0	True				
ANR	5980393	CallExpression	"gc_objects_set_reloc ( & state , cp )"		5979102	0					
ANR	5980394	Callee	gc_objects_set_reloc		5979102	0					
ANR	5980395	Identifier	gc_objects_set_reloc		5979102	0					
ANR	5980396	ArgumentList	& state		5979102	1					
ANR	5980397	Argument	& state		5979102	0					
ANR	5980398	UnaryOperationExpression	& state		5979102	0					
ANR	5980399	UnaryOperator	&		5979102	0					
ANR	5980400	Identifier	state		5979102	1					
ANR	5980401	Argument	cp		5979102	1					
ANR	5980402	Identifier	cp		5979102	0					
ANR	5980403	ExpressionStatement	gc_strings_set_reloc ( cp )	430:8:14115:14139	5979102	1	True				
ANR	5980404	CallExpression	gc_strings_set_reloc ( cp )		5979102	0					
ANR	5980405	Callee	gc_strings_set_reloc		5979102	0					
ANR	5980406	Identifier	gc_strings_set_reloc		5979102	0					
ANR	5980407	ArgumentList	cp		5979102	1					
ANR	5980408	Argument	cp		5979102	0					
ANR	5980409	Identifier	cp		5979102	0					
ANR	5980410	CompoundStatement		277:8:8693:8698	5979102	266					
ANR	5980411	IdentifierDeclStatement	int i ;	435:8:14191:14196	5979102	0	True				
ANR	5980412	IdentifierDecl	i		5979102	0					
ANR	5980413	IdentifierDeclType	int		5979102	0					
ANR	5980414	Identifier	i		5979102	1					
ANR	5980415	Statement	for_collected_spaces	437:8:14207:14226	5979102	1	True				
ANR	5980416	ExpressionStatement	"( i ) gs_enable_free ( ( gs_memory_t * ) space_memories [ i ] , true )"	437:28:14227:14297	5979102	2	True				
ANR	5980417	CastExpression	"( i ) gs_enable_free ( ( gs_memory_t * ) space_memories [ i ] , true )"		5979102	0					
ANR	5980418	CastTarget	i		5979102	0					
ANR	5980419	CallExpression	"gs_enable_free ( ( gs_memory_t * ) space_memories [ i ] , true )"		5979102	1					
ANR	5980420	Callee	gs_enable_free		5979102	0					
ANR	5980421	Identifier	gs_enable_free		5979102	0					
ANR	5980422	ArgumentList	( gs_memory_t * ) space_memories [ i ]		5979102	1					
ANR	5980423	Argument	( gs_memory_t * ) space_memories [ i ]		5979102	0					
ANR	5980424	CastExpression	( gs_memory_t * ) space_memories [ i ]		5979102	0					
ANR	5980425	CastTarget	gs_memory_t *		5979102	0					
ANR	5980426	ArrayIndexing	space_memories [ i ]		5979102	1					
ANR	5980427	Identifier	space_memories		5979102	0					
ANR	5980428	Identifier	i		5979102	1					
ANR	5980429	Argument	true		5979102	1					
ANR	5980430	Identifier	true		5979102	0					
ANR	5980431	ExpressionStatement	"end_phase ( state . heap , ""set reloc"" )"	441:4:14310:14343	5979102	267	True				
ANR	5980432	CallExpression	"end_phase ( state . heap , ""set reloc"" )"		5979102	0					
ANR	5980433	Callee	end_phase		5979102	0					
ANR	5980434	Identifier	end_phase		5979102	0					
ANR	5980435	ArgumentList	state . heap		5979102	1					
ANR	5980436	Argument	state . heap		5979102	0					
ANR	5980437	MemberAccess	state . heap		5979102	0					
ANR	5980438	Identifier	state		5979102	0					
ANR	5980439	Identifier	heap		5979102	1					
ANR	5980440	Argument	"""set reloc"""		5979102	1					
ANR	5980441	PrimaryExpression	"""set reloc"""		5979102	0					
ANR	5980442	ExpressionStatement	state . relocating_untraced = true	445:4:14380:14412	5979102	268	True				
ANR	5980443	AssignmentExpression	state . relocating_untraced = true		5979102	0		=			
ANR	5980444	MemberAccess	state . relocating_untraced		5979102	0					
ANR	5980445	Identifier	state		5979102	0					
ANR	5980446	Identifier	relocating_untraced		5979102	1					
ANR	5980447	Identifier	true		5979102	1					
ANR	5980448	Statement	for_clumps	446:4:14418:14427	5979102	269	True				
ANR	5980449	Statement	(	446:14:14428:14428	5979102	270	True				
ANR	5980450	Statement	ispace	446:15:14429:14434	5979102	271	True				
ANR	5980451	Statement	","	446:21:14435:14435	5979102	272	True				
ANR	5980452	Statement	min_collect	446:23:14437:14447	5979102	273	True				
ANR	5980453	Statement	-	446:35:14449:14449	5979102	274	True				
ANR	5980454	Statement	1	446:37:14451:14451	5979102	275	True				
ANR	5980455	Statement	","	446:38:14452:14452	5979102	276	True				
ANR	5980456	Statement	mem	446:40:14454:14456	5979102	277	True				
ANR	5980457	Statement	","	446:43:14457:14457	5979102	278	True				
ANR	5980458	Statement	cp	446:45:14459:14460	5979102	279	True				
ANR	5980459	Statement	","	446:47:14461:14461	5979102	280	True				
ANR	5980460	Statement	&	446:49:14463:14463	5979102	281	True				
ANR	5980461	Statement	sw	446:50:14464:14465	5979102	282	True				
ANR	5980462	Statement	)	446:52:14466:14466	5979102	283	True				
ANR	5980463	ExpressionStatement	"gc_do_reloc ( cp , mem , & state )"	447:8:14476:14504	5979102	284	True				
ANR	5980464	CallExpression	"gc_do_reloc ( cp , mem , & state )"		5979102	0					
ANR	5980465	Callee	gc_do_reloc		5979102	0					
ANR	5980466	Identifier	gc_do_reloc		5979102	0					
ANR	5980467	ArgumentList	cp		5979102	1					
ANR	5980468	Argument	cp		5979102	0					
ANR	5980469	Identifier	cp		5979102	0					
ANR	5980470	Argument	mem		5979102	1					
ANR	5980471	Identifier	mem		5979102	0					
ANR	5980472	Argument	& state		5979102	2					
ANR	5980473	UnaryOperationExpression	& state		5979102	0					
ANR	5980474	UnaryOperator	&		5979102	0					
ANR	5980475	Identifier	state		5979102	1					
ANR	5980476	ExpressionStatement	state . relocating_untraced = false	448:4:14510:14543	5979102	285	True				
ANR	5980477	AssignmentExpression	state . relocating_untraced = false		5979102	0		=			
ANR	5980478	MemberAccess	state . relocating_untraced		5979102	0					
ANR	5980479	Identifier	state		5979102	0					
ANR	5980480	Identifier	relocating_untraced		5979102	1					
ANR	5980481	Identifier	false		5979102	1					
ANR	5980482	Statement	for_collected_clumps	449:4:14549:14568	5979102	286	True				
ANR	5980483	Statement	(	449:24:14569:14569	5979102	287	True				
ANR	5980484	Statement	ispace	449:25:14570:14575	5979102	288	True				
ANR	5980485	Statement	","	449:31:14576:14576	5979102	289	True				
ANR	5980486	Statement	mem	449:33:14578:14580	5979102	290	True				
ANR	5980487	Statement	","	449:36:14581:14581	5979102	291	True				
ANR	5980488	Statement	cp	449:38:14583:14584	5979102	292	True				
ANR	5980489	Statement	","	449:40:14585:14585	5979102	293	True				
ANR	5980490	Statement	&	449:42:14587:14587	5979102	294	True				
ANR	5980491	Statement	sw	449:43:14588:14589	5979102	295	True				
ANR	5980492	Statement	)	449:45:14590:14590	5979102	296	True				
ANR	5980493	ExpressionStatement	"gc_do_reloc ( cp , mem , & state )"	450:8:14600:14628	5979102	297	True				
ANR	5980494	CallExpression	"gc_do_reloc ( cp , mem , & state )"		5979102	0					
ANR	5980495	Callee	gc_do_reloc		5979102	0					
ANR	5980496	Identifier	gc_do_reloc		5979102	0					
ANR	5980497	ArgumentList	cp		5979102	1					
ANR	5980498	Argument	cp		5979102	0					
ANR	5980499	Identifier	cp		5979102	0					
ANR	5980500	Argument	mem		5979102	1					
ANR	5980501	Identifier	mem		5979102	0					
ANR	5980502	Argument	& state		5979102	2					
ANR	5980503	UnaryOperationExpression	& state		5979102	0					
ANR	5980504	UnaryOperator	&		5979102	0					
ANR	5980505	Identifier	state		5979102	1					
ANR	5980506	ExpressionStatement	"end_phase ( state . heap , ""relocate clumps"" )"	452:4:14635:14674	5979102	298	True				
ANR	5980507	CallExpression	"end_phase ( state . heap , ""relocate clumps"" )"		5979102	0					
ANR	5980508	Callee	end_phase		5979102	0					
ANR	5980509	Identifier	end_phase		5979102	0					
ANR	5980510	ArgumentList	state . heap		5979102	1					
ANR	5980511	Argument	state . heap		5979102	0					
ANR	5980512	MemberAccess	state . heap		5979102	0					
ANR	5980513	Identifier	state		5979102	0					
ANR	5980514	Identifier	heap		5979102	1					
ANR	5980515	Argument	"""relocate clumps"""		5979102	1					
ANR	5980516	PrimaryExpression	"""relocate clumps"""		5979102	0					
ANR	5980517	Statement	for_roots	454:4:14681:14689	5979102	299	True				
ANR	5980518	Statement	(	454:13:14690:14690	5979102	300	True				
ANR	5980519	Statement	ispace	454:14:14691:14696	5979102	301	True				
ANR	5980520	Statement	","	454:20:14697:14697	5979102	302	True				
ANR	5980521	Statement	max_trace	454:22:14699:14707	5979102	303	True				
ANR	5980522	Statement	","	454:31:14708:14708	5979102	304	True				
ANR	5980523	Statement	mem	454:33:14710:14712	5979102	305	True				
ANR	5980524	Statement	","	454:36:14713:14713	5979102	306	True				
ANR	5980525	Statement	rp	454:38:14715:14716	5979102	307	True				
ANR	5980526	Statement	)	454:40:14717:14717	5979102	308	True				
ANR	5980527	CompoundStatement		296:42:9221:9221	5979102	309					
ANR	5980528	ExpressionStatement	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]relocating root 0x%lx: 0x%lx -> 0x%lx\\n"" , ( ulong ) rp , ( ulong ) rp -> p , ( ulong ) * rp -> p )"	455:8:14729:14898	5979102	0	True				
ANR	5980529	CallExpression	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]relocating root 0x%lx: 0x%lx -> 0x%lx\\n"" , ( ulong ) rp , ( ulong ) rp -> p , ( ulong ) * rp -> p )"		5979102	0					
ANR	5980530	Callee	if_debug3m		5979102	0					
ANR	5980531	Identifier	if_debug3m		5979102	0					
ANR	5980532	ArgumentList	'6'		5979102	1					
ANR	5980533	Argument	'6'		5979102	0					
ANR	5980534	PrimaryExpression	'6'		5979102	0					
ANR	5980535	Argument	( const gs_memory_t * ) mem		5979102	1					
ANR	5980536	CastExpression	( const gs_memory_t * ) mem		5979102	0					
ANR	5980537	CastTarget	const gs_memory_t *		5979102	0					
ANR	5980538	Identifier	mem		5979102	1					
ANR	5980539	Argument	"""[6]relocating root 0x%lx: 0x%lx -> 0x%lx\\n"""		5979102	2					
ANR	5980540	PrimaryExpression	"""[6]relocating root 0x%lx: 0x%lx -> 0x%lx\\n"""		5979102	0					
ANR	5980541	Argument	( ulong ) rp		5979102	3					
ANR	5980542	CastExpression	( ulong ) rp		5979102	0					
ANR	5980543	CastTarget	ulong		5979102	0					
ANR	5980544	Identifier	rp		5979102	1					
ANR	5980545	Argument	( ulong ) rp -> p		5979102	4					
ANR	5980546	CastExpression	( ulong ) rp -> p		5979102	0					
ANR	5980547	CastTarget	ulong		5979102	0					
ANR	5980548	PtrMemberAccess	rp -> p		5979102	1					
ANR	5980549	Identifier	rp		5979102	0					
ANR	5980550	Identifier	p		5979102	1					
ANR	5980551	Argument	( ulong ) * rp -> p		5979102	5					
ANR	5980552	CastExpression	( ulong ) * rp -> p		5979102	0					
ANR	5980553	CastTarget	ulong		5979102	0					
ANR	5980554	UnaryOperationExpression	* rp -> p		5979102	1					
ANR	5980555	UnaryOperator	*		5979102	0					
ANR	5980556	PtrMemberAccess	rp -> p		5979102	1					
ANR	5980557	Identifier	rp		5979102	0					
ANR	5980558	Identifier	p		5979102	1					
ANR	5980559	IfStatement	if ( rp -> ptype == ptr_ref_type )		5979102	1					
ANR	5980560	Condition	rp -> ptype == ptr_ref_type	458:12:14912:14936	5979102	0	True				
ANR	5980561	EqualityExpression	rp -> ptype == ptr_ref_type		5979102	0		==			
ANR	5980562	PtrMemberAccess	rp -> ptype		5979102	0					
ANR	5980563	Identifier	rp		5979102	0					
ANR	5980564	Identifier	ptype		5979102	1					
ANR	5980565	Identifier	ptr_ref_type		5979102	1					
ANR	5980566	CompoundStatement		301:12:9455:9482	5979102	1					
ANR	5980567	IdentifierDeclStatement	ref * pref = ( ref * ) * rp -> p ;	459:12:14953:14980	5979102	0	True				
ANR	5980568	IdentifierDecl	* pref = ( ref * ) * rp -> p		5979102	0					
ANR	5980569	IdentifierDeclType	ref *		5979102	0					
ANR	5980570	Identifier	pref		5979102	1					
ANR	5980571	AssignmentExpression	* pref = ( ref * ) * rp -> p		5979102	2		=			
ANR	5980572	Identifier	pref		5979102	0					
ANR	5980573	CastExpression	( ref * ) * rp -> p		5979102	1					
ANR	5980574	CastTarget	ref *		5979102	0					
ANR	5980575	UnaryOperationExpression	* rp -> p		5979102	1					
ANR	5980576	UnaryOperator	*		5979102	0					
ANR	5980577	PtrMemberAccess	rp -> p		5979102	1					
ANR	5980578	Identifier	rp		5979102	0					
ANR	5980579	Identifier	p		5979102	1					
ANR	5980580	ExpressionStatement	"igc_reloc_refs ( ( ref_packed * ) pref , ( ref_packed * ) ( pref + 1 ) , & state )"	461:12:14995:15119	5979102	1	True				
ANR	5980581	CallExpression	"igc_reloc_refs ( ( ref_packed * ) pref , ( ref_packed * ) ( pref + 1 ) , & state )"		5979102	0					
ANR	5980582	Callee	igc_reloc_refs		5979102	0					
ANR	5980583	Identifier	igc_reloc_refs		5979102	0					
ANR	5980584	ArgumentList	( ref_packed * ) pref		5979102	1					
ANR	5980585	Argument	( ref_packed * ) pref		5979102	0					
ANR	5980586	CastExpression	( ref_packed * ) pref		5979102	0					
ANR	5980587	CastTarget	ref_packed *		5979102	0					
ANR	5980588	Identifier	pref		5979102	1					
ANR	5980589	Argument	( ref_packed * ) ( pref + 1 )		5979102	1					
ANR	5980590	CastExpression	( ref_packed * ) ( pref + 1 )		5979102	0					
ANR	5980591	CastTarget	ref_packed *		5979102	0					
ANR	5980592	AdditiveExpression	pref + 1		5979102	1		+			
ANR	5980593	Identifier	pref		5979102	0					
ANR	5980594	PrimaryExpression	1		5979102	1					
ANR	5980595	Argument	& state		5979102	2					
ANR	5980596	UnaryOperationExpression	& state		5979102	0					
ANR	5980597	UnaryOperator	&		5979102	0					
ANR	5980598	Identifier	state		5979102	1					
ANR	5980599	ElseStatement	else		5979102	0					
ANR	5980600	ExpressionStatement	"* rp -> p = ( * rp -> ptype -> reloc ) ( * rp -> p , & state )"	465:12:15148:15193	5979102	0	True				
ANR	5980601	AssignmentExpression	"* rp -> p = ( * rp -> ptype -> reloc ) ( * rp -> p , & state )"		5979102	0		=			
ANR	5980602	UnaryOperationExpression	* rp -> p		5979102	0					
ANR	5980603	UnaryOperator	*		5979102	0					
ANR	5980604	PtrMemberAccess	rp -> p		5979102	1					
ANR	5980605	Identifier	rp		5979102	0					
ANR	5980606	Identifier	p		5979102	1					
ANR	5980607	CallExpression	"( * rp -> ptype -> reloc ) ( * rp -> p , & state )"		5979102	1					
ANR	5980608	Callee	* rp -> ptype -> reloc		5979102	0					
ANR	5980609	UnaryOperationExpression	* rp -> ptype -> reloc		5979102	0					
ANR	5980610	UnaryOperator	*		5979102	0					
ANR	5980611	PtrMemberAccess	rp -> ptype -> reloc		5979102	1					
ANR	5980612	PtrMemberAccess	rp -> ptype		5979102	0					
ANR	5980613	Identifier	rp		5979102	0					
ANR	5980614	Identifier	ptype		5979102	1					
ANR	5980615	Identifier	reloc		5979102	1					
ANR	5980616	ArgumentList	* rp -> p		5979102	1					
ANR	5980617	Argument	* rp -> p		5979102	0					
ANR	5980618	UnaryOperationExpression	* rp -> p		5979102	0					
ANR	5980619	UnaryOperator	*		5979102	0					
ANR	5980620	PtrMemberAccess	rp -> p		5979102	1					
ANR	5980621	Identifier	rp		5979102	0					
ANR	5980622	Identifier	p		5979102	1					
ANR	5980623	Argument	& state		5979102	1					
ANR	5980624	UnaryOperationExpression	& state		5979102	0					
ANR	5980625	UnaryOperator	&		5979102	0					
ANR	5980626	Identifier	state		5979102	1					
ANR	5980627	ExpressionStatement	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]relocated root 0x%lx: 0x%lx -> 0x%lx\\n"" , ( ulong ) rp , ( ulong ) rp -> p , ( ulong ) * rp -> p )"	466:8:15203:15371	5979102	2	True				
ANR	5980628	CallExpression	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]relocated root 0x%lx: 0x%lx -> 0x%lx\\n"" , ( ulong ) rp , ( ulong ) rp -> p , ( ulong ) * rp -> p )"		5979102	0					
ANR	5980629	Callee	if_debug3m		5979102	0					
ANR	5980630	Identifier	if_debug3m		5979102	0					
ANR	5980631	ArgumentList	'6'		5979102	1					
ANR	5980632	Argument	'6'		5979102	0					
ANR	5980633	PrimaryExpression	'6'		5979102	0					
ANR	5980634	Argument	( const gs_memory_t * ) mem		5979102	1					
ANR	5980635	CastExpression	( const gs_memory_t * ) mem		5979102	0					
ANR	5980636	CastTarget	const gs_memory_t *		5979102	0					
ANR	5980637	Identifier	mem		5979102	1					
ANR	5980638	Argument	"""[6]relocated root 0x%lx: 0x%lx -> 0x%lx\\n"""		5979102	2					
ANR	5980639	PrimaryExpression	"""[6]relocated root 0x%lx: 0x%lx -> 0x%lx\\n"""		5979102	0					
ANR	5980640	Argument	( ulong ) rp		5979102	3					
ANR	5980641	CastExpression	( ulong ) rp		5979102	0					
ANR	5980642	CastTarget	ulong		5979102	0					
ANR	5980643	Identifier	rp		5979102	1					
ANR	5980644	Argument	( ulong ) rp -> p		5979102	4					
ANR	5980645	CastExpression	( ulong ) rp -> p		5979102	0					
ANR	5980646	CastTarget	ulong		5979102	0					
ANR	5980647	PtrMemberAccess	rp -> p		5979102	1					
ANR	5980648	Identifier	rp		5979102	0					
ANR	5980649	Identifier	p		5979102	1					
ANR	5980650	Argument	( ulong ) * rp -> p		5979102	5					
ANR	5980651	CastExpression	( ulong ) * rp -> p		5979102	0					
ANR	5980652	CastTarget	ulong		5979102	0					
ANR	5980653	UnaryOperationExpression	* rp -> p		5979102	1					
ANR	5980654	UnaryOperator	*		5979102	0					
ANR	5980655	PtrMemberAccess	rp -> p		5979102	1					
ANR	5980656	Identifier	rp		5979102	0					
ANR	5980657	Identifier	p		5979102	1					
ANR	5980658	ExpressionStatement	"end_phase ( state . heap , ""relocate roots"" )"	471:4:15384:15422	5979102	310	True				
ANR	5980659	CallExpression	"end_phase ( state . heap , ""relocate roots"" )"		5979102	0					
ANR	5980660	Callee	end_phase		5979102	0					
ANR	5980661	Identifier	end_phase		5979102	0					
ANR	5980662	ArgumentList	state . heap		5979102	1					
ANR	5980663	Argument	state . heap		5979102	0					
ANR	5980664	MemberAccess	state . heap		5979102	0					
ANR	5980665	Identifier	state		5979102	0					
ANR	5980666	Identifier	heap		5979102	1					
ANR	5980667	Argument	"""relocate roots"""		5979102	1					
ANR	5980668	PrimaryExpression	"""relocate roots"""		5979102	0					
ANR	5980669	Statement	for_collected_spaces	475:4:15501:15520	5979102	311	True				
ANR	5980670	Statement	(	475:24:15521:15521	5979102	312	True				
ANR	5980671	Statement	ispace	475:25:15522:15527	5979102	313	True				
ANR	5980672	Statement	)	475:31:15528:15528	5979102	314	True				
ANR	5980673	CompoundStatement		317:33:10032:10032	5979102	315					
ANR	5980674	Statement	for_space_mems	476:8:15540:15553	5979102	0	True				
ANR	5980675	Statement	(	476:22:15554:15554	5979102	1	True				
ANR	5980676	Statement	ispace	476:23:15555:15560	5979102	2	True				
ANR	5980677	Statement	","	476:29:15561:15561	5979102	3	True				
ANR	5980678	Statement	mem	476:31:15563:15565	5979102	4	True				
ANR	5980679	Statement	)	476:34:15566:15566	5979102	5	True				
ANR	5980680	CompoundStatement		318:36:10070:10070	5979102	6					
ANR	5980681	Statement	for_mem_clumps	477:12:15582:15595	5979102	0	True				
ANR	5980682	Statement	(	477:26:15596:15596	5979102	1	True				
ANR	5980683	Statement	mem	477:27:15597:15599	5979102	2	True				
ANR	5980684	Statement	","	477:30:15600:15600	5979102	3	True				
ANR	5980685	Statement	cp	477:32:15602:15603	5979102	4	True				
ANR	5980686	Statement	","	477:34:15604:15604	5979102	5	True				
ANR	5980687	Statement	&	477:36:15606:15606	5979102	6	True				
ANR	5980688	Statement	sw	477:37:15607:15608	5979102	7	True				
ANR	5980689	Statement	)	477:39:15609:15609	5979102	8	True				
ANR	5980690	CompoundStatement		319:41:10113:10113	5979102	9					
ANR	5980691	ExpressionStatement	"if_debug_clump ( '6' , ( const gs_memory_t * ) mem , ""[6]compacting clump"" , cp )"	478:16:15629:15701	5979102	0	True				
ANR	5980692	CallExpression	"if_debug_clump ( '6' , ( const gs_memory_t * ) mem , ""[6]compacting clump"" , cp )"		5979102	0					
ANR	5980693	Callee	if_debug_clump		5979102	0					
ANR	5980694	Identifier	if_debug_clump		5979102	0					
ANR	5980695	ArgumentList	'6'		5979102	1					
ANR	5980696	Argument	'6'		5979102	0					
ANR	5980697	PrimaryExpression	'6'		5979102	0					
ANR	5980698	Argument	( const gs_memory_t * ) mem		5979102	1					
ANR	5980699	CastExpression	( const gs_memory_t * ) mem		5979102	0					
ANR	5980700	CastTarget	const gs_memory_t *		5979102	0					
ANR	5980701	Identifier	mem		5979102	1					
ANR	5980702	Argument	"""[6]compacting clump"""		5979102	2					
ANR	5980703	PrimaryExpression	"""[6]compacting clump"""		5979102	0					
ANR	5980704	Argument	cp		5979102	3					
ANR	5980705	Identifier	cp		5979102	0					
ANR	5980706	ExpressionStatement	"gc_objects_compact ( cp , & state )"	479:16:15719:15749	5979102	1	True				
ANR	5980707	CallExpression	"gc_objects_compact ( cp , & state )"		5979102	0					
ANR	5980708	Callee	gc_objects_compact		5979102	0					
ANR	5980709	Identifier	gc_objects_compact		5979102	0					
ANR	5980710	ArgumentList	cp		5979102	1					
ANR	5980711	Argument	cp		5979102	0					
ANR	5980712	Identifier	cp		5979102	0					
ANR	5980713	Argument	& state		5979102	1					
ANR	5980714	UnaryOperationExpression	& state		5979102	0					
ANR	5980715	UnaryOperator	&		5979102	0					
ANR	5980716	Identifier	state		5979102	1					
ANR	5980717	ExpressionStatement	"gc_strings_compact ( cp , cmem )"	480:16:15767:15795	5979102	2	True				
ANR	5980718	CallExpression	"gc_strings_compact ( cp , cmem )"		5979102	0					
ANR	5980719	Callee	gc_strings_compact		5979102	0					
ANR	5980720	Identifier	gc_strings_compact		5979102	0					
ANR	5980721	ArgumentList	cp		5979102	1					
ANR	5980722	Argument	cp		5979102	0					
ANR	5980723	Identifier	cp		5979102	0					
ANR	5980724	Argument	cmem		5979102	1					
ANR	5980725	Identifier	cmem		5979102	0					
ANR	5980726	ExpressionStatement	"if_debug_clump ( '6' , ( const gs_memory_t * ) mem , ""[6]after compaction:"" , cp )"	481:16:15813:15886	5979102	3	True				
ANR	5980727	CallExpression	"if_debug_clump ( '6' , ( const gs_memory_t * ) mem , ""[6]after compaction:"" , cp )"		5979102	0					
ANR	5980728	Callee	if_debug_clump		5979102	0					
ANR	5980729	Identifier	if_debug_clump		5979102	0					
ANR	5980730	ArgumentList	'6'		5979102	1					
ANR	5980731	Argument	'6'		5979102	0					
ANR	5980732	PrimaryExpression	'6'		5979102	0					
ANR	5980733	Argument	( const gs_memory_t * ) mem		5979102	1					
ANR	5980734	CastExpression	( const gs_memory_t * ) mem		5979102	0					
ANR	5980735	CastTarget	const gs_memory_t *		5979102	0					
ANR	5980736	Identifier	mem		5979102	1					
ANR	5980737	Argument	"""[6]after compaction:"""		5979102	2					
ANR	5980738	PrimaryExpression	"""[6]after compaction:"""		5979102	0					
ANR	5980739	Argument	cp		5979102	3					
ANR	5980740	Identifier	cp		5979102	0					
ANR	5980741	ExpressionStatement	mem -> saved = mem -> reloc_saved	483:12:15914:15943	5979102	10	True				
ANR	5980742	AssignmentExpression	mem -> saved = mem -> reloc_saved		5979102	0		=			
ANR	5980743	PtrMemberAccess	mem -> saved		5979102	0					
ANR	5980744	Identifier	mem		5979102	0					
ANR	5980745	Identifier	saved		5979102	1					
ANR	5980746	PtrMemberAccess	mem -> reloc_saved		5979102	1					
ANR	5980747	Identifier	mem		5979102	0					
ANR	5980748	Identifier	reloc_saved		5979102	1					
ANR	5980749	ExpressionStatement	ialloc_reset_free ( mem )	484:12:15957:15979	5979102	11	True				
ANR	5980750	CallExpression	ialloc_reset_free ( mem )		5979102	0					
ANR	5980751	Callee	ialloc_reset_free		5979102	0					
ANR	5980752	Identifier	ialloc_reset_free		5979102	0					
ANR	5980753	ArgumentList	mem		5979102	1					
ANR	5980754	Argument	mem		5979102	0					
ANR	5980755	Identifier	mem		5979102	0					
ANR	5980756	ExpressionStatement	"end_phase ( state . heap , ""compact"" )"	488:4:16002:16033	5979102	316	True				
ANR	5980757	CallExpression	"end_phase ( state . heap , ""compact"" )"		5979102	0					
ANR	5980758	Callee	end_phase		5979102	0					
ANR	5980759	Identifier	end_phase		5979102	0					
ANR	5980760	ArgumentList	state . heap		5979102	1					
ANR	5980761	Argument	state . heap		5979102	0					
ANR	5980762	MemberAccess	state . heap		5979102	0					
ANR	5980763	Identifier	state		5979102	0					
ANR	5980764	Identifier	heap		5979102	1					
ANR	5980765	Argument	"""compact"""		5979102	1					
ANR	5980766	PrimaryExpression	"""compact"""		5979102	0					
ANR	5980767	Statement	for_collected_spaces	492:4:16070:16089	5979102	317	True				
ANR	5980768	Statement	(	492:24:16090:16090	5979102	318	True				
ANR	5980769	Statement	ispace	492:25:16091:16096	5979102	319	True				
ANR	5980770	Statement	)	492:31:16097:16097	5979102	320	True				
ANR	5980771	CompoundStatement		334:33:10601:10601	5979102	321					
ANR	5980772	Statement	for_space_mems	493:8:16109:16122	5979102	0	True				
ANR	5980773	Statement	(	493:22:16123:16123	5979102	1	True				
ANR	5980774	Statement	ispace	493:23:16124:16129	5979102	2	True				
ANR	5980775	Statement	","	493:29:16130:16130	5979102	3	True				
ANR	5980776	Statement	mem	493:31:16132:16134	5979102	4	True				
ANR	5980777	Statement	)	493:34:16135:16135	5979102	5	True				
ANR	5980778	CompoundStatement		335:36:10639:10639	5979102	6					
ANR	5980779	ExpressionStatement	gc_free_empty_clumps ( mem )	494:12:16151:16176	5979102	0	True				
ANR	5980780	CallExpression	gc_free_empty_clumps ( mem )		5979102	0					
ANR	5980781	Callee	gc_free_empty_clumps		5979102	0					
ANR	5980782	Identifier	gc_free_empty_clumps		5979102	0					
ANR	5980783	ArgumentList	mem		5979102	1					
ANR	5980784	Argument	mem		5979102	0					
ANR	5980785	Identifier	mem		5979102	0					
ANR	5980786	ExpressionStatement	"end_phase ( state . heap , ""free empty clumps"" )"	498:4:16199:16240	5979102	322	True				
ANR	5980787	CallExpression	"end_phase ( state . heap , ""free empty clumps"" )"		5979102	0					
ANR	5980788	Callee	end_phase		5979102	0					
ANR	5980789	Identifier	end_phase		5979102	0					
ANR	5980790	ArgumentList	state . heap		5979102	1					
ANR	5980791	Argument	state . heap		5979102	0					
ANR	5980792	MemberAccess	state . heap		5979102	0					
ANR	5980793	Identifier	state		5979102	0					
ANR	5980794	Identifier	heap		5979102	1					
ANR	5980795	Argument	"""free empty clumps"""		5979102	1					
ANR	5980796	PrimaryExpression	"""free empty clumps"""		5979102	0					
ANR	5980797	Statement	for_collected_spaces	509:4:16638:16657	5979102	323	True				
ANR	5980798	Statement	(	509:24:16658:16658	5979102	324	True				
ANR	5980799	Statement	ispace	509:25:16659:16664	5979102	325	True				
ANR	5980800	Statement	)	509:31:16665:16665	5979102	326	True				
ANR	5980801	CompoundStatement		355:8:11295:11319	5979102	327					
ANR	5980802	IdentifierDeclStatement	alloc_save_t * curr ;	510:8:16705:16723	5979102	0	True				
ANR	5980803	IdentifierDecl	* curr		5979102	0					
ANR	5980804	IdentifierDeclType	alloc_save_t *		5979102	0					
ANR	5980805	Identifier	curr		5979102	1					
ANR	5980806	IdentifierDeclStatement	alloc_save_t * prev = 0 ;	511:8:16733:16755	5979102	1	True				
ANR	5980807	IdentifierDecl	* prev = 0		5979102	0					
ANR	5980808	IdentifierDeclType	alloc_save_t *		5979102	0					
ANR	5980809	Identifier	prev		5979102	1					
ANR	5980810	AssignmentExpression	* prev = 0		5979102	2		=			
ANR	5980811	Identifier	prev		5979102	0					
ANR	5980812	PrimaryExpression	0		5979102	1					
ANR	5980813	IdentifierDeclStatement	alloc_save_t * next ;	512:8:16765:16783	5979102	2	True				
ANR	5980814	IdentifierDecl	* next		5979102	0					
ANR	5980815	IdentifierDeclType	alloc_save_t *		5979102	0					
ANR	5980816	Identifier	next		5979102	1					
ANR	5980817	IdentifierDeclStatement	gs_memory_status_t total ;	513:8:16793:16817	5979102	3	True				
ANR	5980818	IdentifierDecl	total		5979102	0					
ANR	5980819	IdentifierDeclType	gs_memory_status_t		5979102	0					
ANR	5980820	Identifier	total		5979102	1					
ANR	5980821	ForStatement	"for ( curr = space_memories [ ispace ] -> saved ; curr != 0 ; prev = curr , curr = next )"		5979102	4					
ANR	5980822	ForInit	curr = space_memories [ ispace ] -> saved ;	515:13:16833:16869	5979102	0	True				
ANR	5980823	AssignmentExpression	curr = space_memories [ ispace ] -> saved		5979102	0		=			
ANR	5980824	Identifier	curr		5979102	0					
ANR	5980825	PtrMemberAccess	space_memories [ ispace ] -> saved		5979102	1					
ANR	5980826	ArrayIndexing	space_memories [ ispace ]		5979102	0					
ANR	5980827	Identifier	space_memories		5979102	0					
ANR	5980828	Identifier	ispace		5979102	1					
ANR	5980829	Identifier	saved		5979102	1					
ANR	5980830	Condition	curr != 0	515:51:16871:16879	5979102	1	True				
ANR	5980831	EqualityExpression	curr != 0		5979102	0		!=			
ANR	5980832	Identifier	curr		5979102	0					
ANR	5980833	PrimaryExpression	0		5979102	1					
ANR	5980834	Expression	"prev = curr , curr = next"	516:13:16895:16918	5979102	2	True				
ANR	5980835	AssignmentExpression	prev = curr		5979102	0		=			
ANR	5980836	Identifier	prev		5979102	0					
ANR	5980837	Identifier	curr		5979102	1					
ANR	5980838	AssignmentExpression	curr = next		5979102	1		=			
ANR	5980839	Identifier	curr		5979102	0					
ANR	5980840	Identifier	next		5979102	1					
ANR	5980841	CompoundStatement		359:14:11436:11436	5979102	3					
ANR	5980842	ExpressionStatement	next = curr -> state . saved	518:12:16948:16972	5979102	0	True				
ANR	5980843	AssignmentExpression	next = curr -> state . saved		5979102	0		=			
ANR	5980844	Identifier	next		5979102	0					
ANR	5980845	MemberAccess	curr -> state . saved		5979102	1					
ANR	5980846	PtrMemberAccess	curr -> state		5979102	0					
ANR	5980847	Identifier	curr		5979102	0					
ANR	5980848	Identifier	state		5979102	1					
ANR	5980849	Identifier	saved		5979102	1					
ANR	5980850	ExpressionStatement	curr -> state . saved = prev	519:12:16986:17010	5979102	1	True				
ANR	5980851	AssignmentExpression	curr -> state . saved = prev		5979102	0		=			
ANR	5980852	MemberAccess	curr -> state . saved		5979102	0					
ANR	5980853	PtrMemberAccess	curr -> state		5979102	0					
ANR	5980854	Identifier	curr		5979102	0					
ANR	5980855	Identifier	state		5979102	1					
ANR	5980856	Identifier	saved		5979102	1					
ANR	5980857	Identifier	prev		5979102	1					
ANR	5980858	ExpressionStatement	"total . allocated = 0 , total . used = 0"	522:8:17093:17128	5979102	5	True				
ANR	5980859	Expression	"total . allocated = 0 , total . used = 0"		5979102	0					
ANR	5980860	AssignmentExpression	total . allocated = 0		5979102	0		=			
ANR	5980861	MemberAccess	total . allocated		5979102	0					
ANR	5980862	Identifier	total		5979102	0					
ANR	5980863	Identifier	allocated		5979102	1					
ANR	5980864	PrimaryExpression	0		5979102	1					
ANR	5980865	AssignmentExpression	total . used = 0		5979102	1		=			
ANR	5980866	MemberAccess	total . used		5979102	0					
ANR	5980867	Identifier	total		5979102	0					
ANR	5980868	Identifier	used		5979102	1					
ANR	5980869	PrimaryExpression	0		5979102	1					
ANR	5980870	ForStatement	"for ( curr = prev , prev = 0 ; curr != 0 ; prev = curr , curr = next )"		5979102	6					
ANR	5980871	ForInit	"curr = prev , prev = 0 ;"	523:13:17143:17164	5979102	0	True				
ANR	5980872	Expression	"curr = prev , prev = 0"		5979102	0					
ANR	5980873	AssignmentExpression	curr = prev		5979102	0		=			
ANR	5980874	Identifier	curr		5979102	0					
ANR	5980875	Identifier	prev		5979102	1					
ANR	5980876	AssignmentExpression	prev = 0		5979102	1		=			
ANR	5980877	Identifier	prev		5979102	0					
ANR	5980878	PrimaryExpression	0		5979102	1					
ANR	5980879	Condition	curr != 0	523:36:17166:17174	5979102	1	True				
ANR	5980880	EqualityExpression	curr != 0		5979102	0		!=			
ANR	5980881	Identifier	curr		5979102	0					
ANR	5980882	PrimaryExpression	0		5979102	1					
ANR	5980883	Expression	"prev = curr , curr = next"	524:13:17190:17213	5979102	2	True				
ANR	5980884	AssignmentExpression	prev = curr		5979102	0		=			
ANR	5980885	Identifier	prev		5979102	0					
ANR	5980886	Identifier	curr		5979102	1					
ANR	5980887	AssignmentExpression	curr = next		5979102	1		=			
ANR	5980888	Identifier	curr		5979102	0					
ANR	5980889	Identifier	next		5979102	1					
ANR	5980890	CompoundStatement		367:14:11731:11731	5979102	3					
ANR	5980891	ExpressionStatement	mem = & curr -> state	526:12:17243:17261	5979102	0	True				
ANR	5980892	AssignmentExpression	mem = & curr -> state		5979102	0		=			
ANR	5980893	Identifier	mem		5979102	0					
ANR	5980894	UnaryOperationExpression	& curr -> state		5979102	1					
ANR	5980895	UnaryOperator	&		5979102	0					
ANR	5980896	PtrMemberAccess	curr -> state		5979102	1					
ANR	5980897	Identifier	curr		5979102	0					
ANR	5980898	Identifier	state		5979102	1					
ANR	5980899	ExpressionStatement	next = mem -> saved	527:12:17275:17292	5979102	1	True				
ANR	5980900	AssignmentExpression	next = mem -> saved		5979102	0		=			
ANR	5980901	Identifier	next		5979102	0					
ANR	5980902	PtrMemberAccess	mem -> saved		5979102	1					
ANR	5980903	Identifier	mem		5979102	0					
ANR	5980904	Identifier	saved		5979102	1					
ANR	5980905	ExpressionStatement	mem -> saved = prev	528:12:17306:17323	5979102	2	True				
ANR	5980906	AssignmentExpression	mem -> saved = prev		5979102	0		=			
ANR	5980907	PtrMemberAccess	mem -> saved		5979102	0					
ANR	5980908	Identifier	mem		5979102	0					
ANR	5980909	Identifier	saved		5979102	1					
ANR	5980910	Identifier	prev		5979102	1					
ANR	5980911	ExpressionStatement	mem -> previous_status = total	529:12:17337:17365	5979102	3	True				
ANR	5980912	AssignmentExpression	mem -> previous_status = total		5979102	0		=			
ANR	5980913	PtrMemberAccess	mem -> previous_status		5979102	0					
ANR	5980914	Identifier	mem		5979102	0					
ANR	5980915	Identifier	previous_status		5979102	1					
ANR	5980916	Identifier	total		5979102	1					
ANR	5980917	ExpressionStatement	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]0x%lx previous allocated=%lu, used=%lu\\n"" , ( ulong ) mem , total . allocated , total . used )"	530:12:17379:17555	5979102	4	True				
ANR	5980918	CallExpression	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]0x%lx previous allocated=%lu, used=%lu\\n"" , ( ulong ) mem , total . allocated , total . used )"		5979102	0					
ANR	5980919	Callee	if_debug3m		5979102	0					
ANR	5980920	Identifier	if_debug3m		5979102	0					
ANR	5980921	ArgumentList	'6'		5979102	1					
ANR	5980922	Argument	'6'		5979102	0					
ANR	5980923	PrimaryExpression	'6'		5979102	0					
ANR	5980924	Argument	( const gs_memory_t * ) mem		5979102	1					
ANR	5980925	CastExpression	( const gs_memory_t * ) mem		5979102	0					
ANR	5980926	CastTarget	const gs_memory_t *		5979102	0					
ANR	5980927	Identifier	mem		5979102	1					
ANR	5980928	Argument	"""[6]0x%lx previous allocated=%lu, used=%lu\\n"""		5979102	2					
ANR	5980929	PrimaryExpression	"""[6]0x%lx previous allocated=%lu, used=%lu\\n"""		5979102	0					
ANR	5980930	Argument	( ulong ) mem		5979102	3					
ANR	5980931	CastExpression	( ulong ) mem		5979102	0					
ANR	5980932	CastTarget	ulong		5979102	0					
ANR	5980933	Identifier	mem		5979102	1					
ANR	5980934	Argument	total . allocated		5979102	4					
ANR	5980935	MemberAccess	total . allocated		5979102	0					
ANR	5980936	Identifier	total		5979102	0					
ANR	5980937	Identifier	allocated		5979102	1					
ANR	5980938	Argument	total . used		5979102	5					
ANR	5980939	MemberAccess	total . used		5979102	0					
ANR	5980940	Identifier	total		5979102	0					
ANR	5980941	Identifier	used		5979102	1					
ANR	5980942	ExpressionStatement	"gs_memory_status ( ( gs_memory_t * ) mem , & total )"	533:12:17569:17614	5979102	5	True				
ANR	5980943	CallExpression	"gs_memory_status ( ( gs_memory_t * ) mem , & total )"		5979102	0					
ANR	5980944	Callee	gs_memory_status		5979102	0					
ANR	5980945	Identifier	gs_memory_status		5979102	0					
ANR	5980946	ArgumentList	( gs_memory_t * ) mem		5979102	1					
ANR	5980947	Argument	( gs_memory_t * ) mem		5979102	0					
ANR	5980948	CastExpression	( gs_memory_t * ) mem		5979102	0					
ANR	5980949	CastTarget	gs_memory_t *		5979102	0					
ANR	5980950	Identifier	mem		5979102	1					
ANR	5980951	Argument	& total		5979102	1					
ANR	5980952	UnaryOperationExpression	& total		5979102	0					
ANR	5980953	UnaryOperator	&		5979102	0					
ANR	5980954	Identifier	total		5979102	1					
ANR	5980955	ExpressionStatement	mem -> gc_allocated = mem -> allocated + total . allocated	534:12:17628:17680	5979102	6	True				
ANR	5980956	AssignmentExpression	mem -> gc_allocated = mem -> allocated + total . allocated		5979102	0		=			
ANR	5980957	PtrMemberAccess	mem -> gc_allocated		5979102	0					
ANR	5980958	Identifier	mem		5979102	0					
ANR	5980959	Identifier	gc_allocated		5979102	1					
ANR	5980960	AdditiveExpression	mem -> allocated + total . allocated		5979102	1		+			
ANR	5980961	PtrMemberAccess	mem -> allocated		5979102	0					
ANR	5980962	Identifier	mem		5979102	0					
ANR	5980963	Identifier	allocated		5979102	1					
ANR	5980964	MemberAccess	total . allocated		5979102	1					
ANR	5980965	Identifier	total		5979102	0					
ANR	5980966	Identifier	allocated		5979102	1					
ANR	5980967	ExpressionStatement	mem = space_memories [ ispace ]	536:8:17700:17728	5979102	7	True				
ANR	5980968	AssignmentExpression	mem = space_memories [ ispace ]		5979102	0		=			
ANR	5980969	Identifier	mem		5979102	0					
ANR	5980970	ArrayIndexing	space_memories [ ispace ]		5979102	1					
ANR	5980971	Identifier	space_memories		5979102	0					
ANR	5980972	Identifier	ispace		5979102	1					
ANR	5980973	ExpressionStatement	mem -> previous_status = total	537:8:17738:17766	5979102	8	True				
ANR	5980974	AssignmentExpression	mem -> previous_status = total		5979102	0		=			
ANR	5980975	PtrMemberAccess	mem -> previous_status		5979102	0					
ANR	5980976	Identifier	mem		5979102	0					
ANR	5980977	Identifier	previous_status		5979102	1					
ANR	5980978	Identifier	total		5979102	1					
ANR	5980979	ExpressionStatement	mem -> gc_allocated = mem -> allocated + total . allocated	538:8:17776:17828	5979102	9	True				
ANR	5980980	AssignmentExpression	mem -> gc_allocated = mem -> allocated + total . allocated		5979102	0		=			
ANR	5980981	PtrMemberAccess	mem -> gc_allocated		5979102	0					
ANR	5980982	Identifier	mem		5979102	0					
ANR	5980983	Identifier	gc_allocated		5979102	1					
ANR	5980984	AdditiveExpression	mem -> allocated + total . allocated		5979102	1		+			
ANR	5980985	PtrMemberAccess	mem -> allocated		5979102	0					
ANR	5980986	Identifier	mem		5979102	0					
ANR	5980987	Identifier	allocated		5979102	1					
ANR	5980988	MemberAccess	total . allocated		5979102	1					
ANR	5980989	Identifier	total		5979102	0					
ANR	5980990	Identifier	allocated		5979102	1					
ANR	5980991	ExpressionStatement	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]0x%lx previous allocated=%lu, used=%lu\\n"" , ( ulong ) mem , total . allocated , total . used )"	539:8:17838:18006	5979102	10	True				
ANR	5980992	CallExpression	"if_debug3m ( '6' , ( const gs_memory_t * ) mem , ""[6]0x%lx previous allocated=%lu, used=%lu\\n"" , ( ulong ) mem , total . allocated , total . used )"		5979102	0					
ANR	5980993	Callee	if_debug3m		5979102	0					
ANR	5980994	Identifier	if_debug3m		5979102	0					
ANR	5980995	ArgumentList	'6'		5979102	1					
ANR	5980996	Argument	'6'		5979102	0					
ANR	5980997	PrimaryExpression	'6'		5979102	0					
ANR	5980998	Argument	( const gs_memory_t * ) mem		5979102	1					
ANR	5980999	CastExpression	( const gs_memory_t * ) mem		5979102	0					
ANR	5981000	CastTarget	const gs_memory_t *		5979102	0					
ANR	5981001	Identifier	mem		5979102	1					
ANR	5981002	Argument	"""[6]0x%lx previous allocated=%lu, used=%lu\\n"""		5979102	2					
ANR	5981003	PrimaryExpression	"""[6]0x%lx previous allocated=%lu, used=%lu\\n"""		5979102	0					
ANR	5981004	Argument	( ulong ) mem		5979102	3					
ANR	5981005	CastExpression	( ulong ) mem		5979102	0					
ANR	5981006	CastTarget	ulong		5979102	0					
ANR	5981007	Identifier	mem		5979102	1					
ANR	5981008	Argument	total . allocated		5979102	4					
ANR	5981009	MemberAccess	total . allocated		5979102	0					
ANR	5981010	Identifier	total		5979102	0					
ANR	5981011	Identifier	allocated		5979102	1					
ANR	5981012	Argument	total . used		5979102	5					
ANR	5981013	MemberAccess	total . used		5979102	0					
ANR	5981014	Identifier	total		5979102	0					
ANR	5981015	Identifier	used		5979102	1					
ANR	5981016	ExpressionStatement	"end_phase ( state . heap , ""update stats"" )"	544:4:18019:18055	5979102	328	True				
ANR	5981017	CallExpression	"end_phase ( state . heap , ""update stats"" )"		5979102	0					
ANR	5981018	Callee	end_phase		5979102	0					
ANR	5981019	Identifier	end_phase		5979102	0					
ANR	5981020	ArgumentList	state . heap		5979102	1					
ANR	5981021	Argument	state . heap		5979102	0					
ANR	5981022	MemberAccess	state . heap		5979102	0					
ANR	5981023	Identifier	state		5979102	0					
ANR	5981024	Identifier	heap		5979102	1					
ANR	5981025	Argument	"""update stats"""		5979102	1					
ANR	5981026	PrimaryExpression	"""update stats"""		5979102	0					
ANR	5981027	Label	no_collect :	546:2:18060:18070	5979102	329	True				
ANR	5981028	Identifier	no_collect		5979102	0					
ANR	5981029	Statement	for_spaces	550:4:18120:18129	5979102	330	True				
ANR	5981030	Statement	(	550:14:18130:18130	5979102	331	True				
ANR	5981031	Statement	ispace	550:15:18131:18136	5979102	332	True				
ANR	5981032	Statement	","	550:21:18137:18137	5979102	333	True				
ANR	5981033	Statement	max_trace	550:23:18139:18147	5979102	334	True				
ANR	5981034	Statement	)	550:32:18148:18148	5979102	335	True				
ANR	5981035	ExpressionStatement	"gs_unregister_root ( ( gs_memory_t * ) space_memories [ ispace ] , & space_roots [ ispace ] , ""gc_top_level"" )"	551:8:18158:18280	5979102	336	True				
ANR	5981036	CallExpression	"gs_unregister_root ( ( gs_memory_t * ) space_memories [ ispace ] , & space_roots [ ispace ] , ""gc_top_level"" )"		5979102	0					
ANR	5981037	Callee	gs_unregister_root		5979102	0					
ANR	5981038	Identifier	gs_unregister_root		5979102	0					
ANR	5981039	ArgumentList	( gs_memory_t * ) space_memories [ ispace ]		5979102	1					
ANR	5981040	Argument	( gs_memory_t * ) space_memories [ ispace ]		5979102	0					
ANR	5981041	CastExpression	( gs_memory_t * ) space_memories [ ispace ]		5979102	0					
ANR	5981042	CastTarget	gs_memory_t *		5979102	0					
ANR	5981043	ArrayIndexing	space_memories [ ispace ]		5979102	1					
ANR	5981044	Identifier	space_memories		5979102	0					
ANR	5981045	Identifier	ispace		5979102	1					
ANR	5981046	Argument	& space_roots [ ispace ]		5979102	1					
ANR	5981047	UnaryOperationExpression	& space_roots [ ispace ]		5979102	0					
ANR	5981048	UnaryOperator	&		5979102	0					
ANR	5981049	ArrayIndexing	space_roots [ ispace ]		5979102	1					
ANR	5981050	Identifier	space_roots		5979102	0					
ANR	5981051	Identifier	ispace		5979102	1					
ANR	5981052	Argument	"""gc_top_level"""		5979102	2					
ANR	5981053	PrimaryExpression	"""gc_top_level"""		5979102	0					
ANR	5981054	ExpressionStatement	"end_phase ( state . heap , ""unregister space roots"" )"	554:4:18287:18333	5979102	337	True				
ANR	5981055	CallExpression	"end_phase ( state . heap , ""unregister space roots"" )"		5979102	0					
ANR	5981056	Callee	end_phase		5979102	0					
ANR	5981057	Identifier	end_phase		5979102	0					
ANR	5981058	ArgumentList	state . heap		5979102	1					
ANR	5981059	Argument	state . heap		5979102	0					
ANR	5981060	MemberAccess	state . heap		5979102	0					
ANR	5981061	Identifier	state		5979102	0					
ANR	5981062	Identifier	heap		5979102	1					
ANR	5981063	Argument	"""unregister space roots"""		5979102	1					
ANR	5981064	PrimaryExpression	"""unregister space roots"""		5979102	0					
ANR	5981065	ExpressionStatement	"gc_validate_spaces ( space_memories , max_trace , & state )"	560:4:18418:18471	5979102	338	True				
ANR	5981066	CallExpression	"gc_validate_spaces ( space_memories , max_trace , & state )"		5979102	0					
ANR	5981067	Callee	gc_validate_spaces		5979102	0					
ANR	5981068	Identifier	gc_validate_spaces		5979102	0					
ANR	5981069	ArgumentList	space_memories		5979102	1					
ANR	5981070	Argument	space_memories		5979102	0					
ANR	5981071	Identifier	space_memories		5979102	0					
ANR	5981072	Argument	max_trace		5979102	1					
ANR	5981073	Identifier	max_trace		5979102	0					
ANR	5981074	Argument	& state		5979102	2					
ANR	5981075	UnaryOperationExpression	& state		5979102	0					
ANR	5981076	UnaryOperator	&		5979102	0					
ANR	5981077	Identifier	state		5979102	1					
ANR	5981078	ExpressionStatement	"end_phase ( state . heap , ""validate pointers"" )"	562:4:18478:18519	5979102	339	True				
ANR	5981079	CallExpression	"end_phase ( state . heap , ""validate pointers"" )"		5979102	0					
ANR	5981080	Callee	end_phase		5979102	0					
ANR	5981081	Identifier	end_phase		5979102	0					
ANR	5981082	ArgumentList	state . heap		5979102	1					
ANR	5981083	Argument	state . heap		5979102	0					
ANR	5981084	MemberAccess	state . heap		5979102	0					
ANR	5981085	Identifier	state		5979102	0					
ANR	5981086	Identifier	heap		5979102	1					
ANR	5981087	Argument	"""validate pointers"""		5979102	1					
ANR	5981088	PrimaryExpression	"""validate pointers"""		5979102	0					
ANR	5981089	ReturnType	void		5979102	1					
ANR	5981090	Identifier	gs_gc_reclaim		5979102	2					
ANR	5981091	ParameterList	"vm_spaces * pspaces , bool global"		5979102	3					
ANR	5981092	Parameter	vm_spaces * pspaces	158:14:5463:5481	5979102	0	True				
ANR	5981093	ParameterType	vm_spaces *		5979102	0					
ANR	5981094	Identifier	pspaces		5979102	1					
ANR	5981095	Parameter	bool global	158:35:5484:5494	5979102	1	True				
ANR	5981096	ParameterType	bool		5979102	0					
ANR	5981097	Identifier	global		5979102	1					
ANR	5981098	CFGEntryNode	ENTRY		5979102		True				
ANR	5981099	CFGExitNode	EXIT		5979102		True				
ANR	5981100	Symbol	space_system		5979102						
ANR	5981101	Symbol	space_local		5979102						
ANR	5981102	Symbol	state . heap -> gs_lib_ctx -> gs_name_table		5979102						
ANR	5981103	Symbol	i_vm_global		5979102						
ANR	5981104	Symbol	prev		5979102						
ANR	5981105	Symbol	* pspaces		5979102						
ANR	5981106	Symbol	ms_default		5979102						
ANR	5981107	Symbol	* state . loc . memory		5979102						
ANR	5981108	Symbol	space_roots		5979102						
ANR	5981109	Symbol	state . procs		5979102						
ANR	5981110	Symbol	ms_size_default		5979102						
ANR	5981111	Symbol	pms		5979102						
ANR	5981112	Symbol	pref		5979102						
ANR	5981113	Symbol	curr -> state . saved		5979102						
ANR	5981114	Symbol	state		5979102						
ANR	5981115	Symbol	I_FORCE_GLOBAL_GC		5979102						
ANR	5981116	Symbol	curr		5979102						
ANR	5981117	Symbol	rp -> p		5979102						
ANR	5981118	Symbol	& ms_default . stack		5979102						
ANR	5981119	Symbol	r_space_shift		5979102						
ANR	5981120	Symbol	mem -> reloc_saved		5979102						
ANR	5981121	Symbol	* * ispace		5979102						
ANR	5981122	Symbol	rp -> next		5979102						
ANR	5981123	Symbol	eptr . ptr		5979102						
ANR	5981124	Symbol	* state . heap -> gs_lib_ctx		5979102						
ANR	5981125	Symbol	* space_global		5979102						
ANR	5981126	Symbol	* cp		5979102						
ANR	5981127	Symbol	state . loc . memory -> non_gc_memory		5979102						
ANR	5981128	Symbol	min_collect		5979102						
ANR	5981129	Symbol	* rp -> ptype -> reloc		5979102						
ANR	5981130	Symbol	rp		5979102						
ANR	5981131	Symbol	* pms		5979102						
ANR	5981132	Symbol	state . loc . cp		5979102						
ANR	5981133	Symbol	get_global_op_array		5979102						
ANR	5981134	Symbol	state . spaces		5979102						
ANR	5981135	Symbol	& state		5979102						
ANR	5981136	Symbol	eptr		5979102						
ANR	5981137	Symbol	cp -> cend		5979102						
ANR	5981138	Symbol	cp -> rescan_top		5979102						
ANR	5981139	Symbol	global		5979102						
ANR	5981140	Symbol	pms -> prev		5979102						
ANR	5981141	Symbol	cp -> cbot		5979102						
ANR	5981142	Symbol	* space_local		5979102						
ANR	5981143	Symbol	state . heap		5979102						
ANR	5981144	Symbol	end -> next		5979102						
ANR	5981145	Symbol	* space_memories		5979102						
ANR	5981146	Symbol	* state . heap		5979102						
ANR	5981147	Symbol	space_local -> stable_memory		5979102						
ANR	5981148	Symbol	state . loc . memory		5979102						
ANR	5981149	Symbol	i_vm_local		5979102						
ANR	5981150	Symbol	avail		5979102						
ANR	5981151	Symbol	space_memories		5979102						
ANR	5981152	Symbol	sw		5979102						
ANR	5981153	Symbol	mem -> saved		5979102						
ANR	5981154	Symbol	more		5979102						
ANR	5981155	Symbol	clump_splay_walk_fwd		5979102						
ANR	5981156	Symbol	i		5979102						
ANR	5981157	Symbol	cp -> cbase		5979102						
ANR	5981158	Symbol	cp		5979102						
ANR	5981159	Symbol	n		5979102						
ANR	5981160	Symbol	* * state		5979102						
ANR	5981161	Symbol	state . heap -> gs_lib_ctx		5979102						
ANR	5981162	Symbol	rp -> ptype -> reloc		5979102						
ANR	5981163	Symbol	gc_trace		5979102						
ANR	5981164	Symbol	& ms_default		5979102						
ANR	5981165	Symbol	mem -> gc_allocated		5979102						
ANR	5981166	Symbol	get_local_op_array		5979102						
ANR	5981167	Symbol	gs_alloc_fill_free		5979102						
ANR	5981168	Symbol	ispace		5979102						
ANR	5981169	Symbol	pms -> next		5979102						
ANR	5981170	Symbol	* * state . heap		5979102						
ANR	5981171	Symbol	mem -> roots		5979102						
ANR	5981172	Symbol	& total		5979102						
ANR	5981173	Symbol	clump_splay_walk_init		5979102						
ANR	5981174	Symbol	pms -> count		5979102						
ANR	5981175	Symbol	ptr_ref_type		5979102						
ANR	5981176	Symbol	* ispace		5979102						
ANR	5981177	Symbol	state . cur_mem		5979102						
ANR	5981178	Symbol	* * rp		5979102						
ANR	5981179	Symbol	& curr -> state		5979102						
ANR	5981180	Symbol	space_global		5979102						
ANR	5981181	Symbol	* rp -> ptype		5979102						
ANR	5981182	Symbol	space_memories [ ispace ] -> saved		5979102						
ANR	5981183	Symbol	space_system -> stable_memory		5979102						
ANR	5981184	Symbol	* rp -> p		5979102						
ANR	5981185	Symbol	gc_trace_clump		5979102						
ANR	5981186	Symbol	ms_default . stack . on_heap		5979102						
ANR	5981187	Symbol	& mem -> saved -> state		5979102						
ANR	5981188	Symbol	spaces		5979102						
ANR	5981189	Symbol	true		5979102						
ANR	5981190	Symbol	space_global -> stable_memory		5979102						
ANR	5981191	Symbol	* end		5979102						
ANR	5981192	Symbol	cmem		5979102						
ANR	5981193	Symbol	max_trace		5979102						
ANR	5981194	Symbol	* mem		5979102						
ANR	5981195	Symbol	* state . loc		5979102						
ANR	5981196	Symbol	next		5979102						
ANR	5981197	Symbol	global_ops		5979102						
ANR	5981198	Symbol	* * space_memories		5979102						
ANR	5981199	Symbol	rp -> ptype		5979102						
ANR	5981200	Symbol	cp -> inner_count		5979102						
ANR	5981201	Symbol	mark_stack		5979102						
ANR	5981202	Symbol	state . min_collect		5979102						
ANR	5981203	Symbol	ms_size_min		5979102						
ANR	5981204	Symbol	ms_default . stack . prev		5979102						
ANR	5981205	Symbol	min_collect_vm_space		5979102						
ANR	5981206	Symbol	pspaces		5979102						
ANR	5981207	Symbol	total		5979102						
ANR	5981208	Symbol	mem		5979102						
ANR	5981209	Symbol	total . used		5979102						
ANR	5981210	Symbol	end		5979102						
ANR	5981211	Symbol	* * * rp		5979102						
ANR	5981212	Symbol	cp -> ctop		5979102						
ANR	5981213	Symbol	mem -> previous_status		5979102						
ANR	5981214	Symbol	curr -> state		5979102						
ANR	5981215	Symbol	mem -> allocated		5979102						
ANR	5981216	Symbol	I_BYPASS_GC		5979102						
ANR	5981217	Symbol	* rp		5979102						
ANR	5981218	Symbol	false		5979102						
ANR	5981219	Symbol	& eptr		5979102						
ANR	5981220	Symbol	ms_default . stack		5979102						
ANR	5981221	Symbol	pms -> on_heap		5979102						
ANR	5981222	Symbol	* state		5979102						
ANR	5981223	Symbol	local_ops		5979102						
ANR	5981224	Symbol	* space_system		5979102						
ANR	5981225	Symbol	* i		5979102						
ANR	5981226	Symbol	* curr		5979102						
ANR	5981227	Symbol	* * rp -> ptype		5979102						
ANR	5981228	Symbol	& igc_procs		5979102						
ANR	5981229	Symbol	state . ntable		5979102						
ANR	5981230	Symbol	rp -> ptype -> unmark		5979102						
ANR	5981231	Symbol	state . relocating_untraced		5979102						
ANR	5981232	Symbol	gc_rescan_clump		5979102						
ANR	5981233	Symbol	* max_trace		5979102						
ANR	5981234	Symbol	state . loc		5979102						
ANR	5981235	Symbol	cp -> rescan_bot		5979102						
ANR	5981236	Symbol	total . allocated		5979102						
ANR	5981237	Function	ptr_struct_unmark	580:0:18862:19065							
ANR	5981238	FunctionDef	"ptr_struct_unmark (enum_ptr_t * pep , gc_state_t * ignored)"		5981237	0					
ANR	5981239	CompoundStatement		582:0:18931:19065	5981237	0					
ANR	5981240	Statement	void	583:4:18937:18940	5981237	0	True				
ANR	5981241	Statement	*	583:9:18942:18942	5981237	1	True				
ANR	5981242	Statement	const	583:10:18943:18947	5981237	2	True				
ANR	5981243	ExpressionStatement	vptr = ( void * ) pep -> ptr	583:16:18949:18972	5981237	3	True				
ANR	5981244	AssignmentExpression	vptr = ( void * ) pep -> ptr		5981237	0		=			
ANR	5981245	Identifier	vptr		5981237	0					
ANR	5981246	CastExpression	( void * ) pep -> ptr		5981237	1					
ANR	5981247	CastTarget	void *		5981237	0					
ANR	5981248	PtrMemberAccess	pep -> ptr		5981237	1					
ANR	5981249	Identifier	pep		5981237	0					
ANR	5981250	Identifier	ptr		5981237	1					
ANR	5981251	IfStatement	if ( vptr != 0 )		5981237	4					
ANR	5981252	Condition	vptr != 0	585:8:19001:19009	5981237	0	True				
ANR	5981253	EqualityExpression	vptr != 0		5981237	0		!=			
ANR	5981254	Identifier	vptr		5981237	0					
ANR	5981255	PrimaryExpression	0		5981237	1					
ANR	5981256	ExpressionStatement	o_set_unmarked ( ( ( obj_header_t * ) vptr - 1 ) )	586:8:19020:19063	5981237	1	True				
ANR	5981257	CallExpression	o_set_unmarked ( ( ( obj_header_t * ) vptr - 1 ) )		5981237	0					
ANR	5981258	Callee	o_set_unmarked		5981237	0					
ANR	5981259	Identifier	o_set_unmarked		5981237	0					
ANR	5981260	ArgumentList	( obj_header_t * ) vptr - 1		5981237	1					
ANR	5981261	Argument	( obj_header_t * ) vptr - 1		5981237	0					
ANR	5981262	AdditiveExpression	( obj_header_t * ) vptr - 1		5981237	0		-			
ANR	5981263	CastExpression	( obj_header_t * ) vptr		5981237	0					
ANR	5981264	CastTarget	obj_header_t *		5981237	0					
ANR	5981265	Identifier	vptr		5981237	1					
ANR	5981266	PrimaryExpression	1		5981237	1					
ANR	5981267	ReturnType	static void		5981237	1					
ANR	5981268	Identifier	ptr_struct_unmark		5981237	2					
ANR	5981269	ParameterList	"enum_ptr_t * pep , gc_state_t * ignored"		5981237	3					
ANR	5981270	Parameter	enum_ptr_t * pep	581:18:18892:18906	5981237	0	True				
ANR	5981271	ParameterType	enum_ptr_t *		5981237	0					
ANR	5981272	Identifier	pep		5981237	1					
ANR	5981273	Parameter	gc_state_t * ignored	581:35:18909:18928	5981237	1	True				
ANR	5981274	ParameterType	gc_state_t *		5981237	0					
ANR	5981275	Identifier	ignored		5981237	1					
ANR	5981276	CFGEntryNode	ENTRY		5981237		True				
ANR	5981277	CFGExitNode	EXIT		5981237		True				
ANR	5981278	Symbol	ignored		5981237						
ANR	5981279	Symbol	pep -> ptr		5981237						
ANR	5981280	Symbol	* pep		5981237						
ANR	5981281	Symbol	pep		5981237						
ANR	5981282	Symbol	vptr		5981237						
ANR	5981283	Function	ptr_string_unmark	590:0:19098:19229							
ANR	5981284	FunctionDef	"ptr_string_unmark (enum_ptr_t * pep , gc_state_t * gcst)"		5981283	0					
ANR	5981285	CompoundStatement		592:0:19164:19229	5981283	0					
ANR	5981286	ExpressionStatement	"discard ( gc_string_mark ( pep -> ptr , pep -> size , false , gcst ) )"	593:4:19170:19227	5981283	0	True				
ANR	5981287	CallExpression	"discard ( gc_string_mark ( pep -> ptr , pep -> size , false , gcst ) )"		5981283	0					
ANR	5981288	Callee	discard		5981283	0					
ANR	5981289	Identifier	discard		5981283	0					
ANR	5981290	ArgumentList	"gc_string_mark ( pep -> ptr , pep -> size , false , gcst )"		5981283	1					
ANR	5981291	Argument	"gc_string_mark ( pep -> ptr , pep -> size , false , gcst )"		5981283	0					
ANR	5981292	CallExpression	"gc_string_mark ( pep -> ptr , pep -> size , false , gcst )"		5981283	0					
ANR	5981293	Callee	gc_string_mark		5981283	0					
ANR	5981294	Identifier	gc_string_mark		5981283	0					
ANR	5981295	ArgumentList	pep -> ptr		5981283	1					
ANR	5981296	Argument	pep -> ptr		5981283	0					
ANR	5981297	PtrMemberAccess	pep -> ptr		5981283	0					
ANR	5981298	Identifier	pep		5981283	0					
ANR	5981299	Identifier	ptr		5981283	1					
ANR	5981300	Argument	pep -> size		5981283	1					
ANR	5981301	PtrMemberAccess	pep -> size		5981283	0					
ANR	5981302	Identifier	pep		5981283	0					
ANR	5981303	Identifier	size		5981283	1					
ANR	5981304	Argument	false		5981283	2					
ANR	5981305	Identifier	false		5981283	0					
ANR	5981306	Argument	gcst		5981283	3					
ANR	5981307	Identifier	gcst		5981283	0					
ANR	5981308	ReturnType	static void		5981283	1					
ANR	5981309	Identifier	ptr_string_unmark		5981283	2					
ANR	5981310	ParameterList	"enum_ptr_t * pep , gc_state_t * gcst"		5981283	3					
ANR	5981311	Parameter	enum_ptr_t * pep	591:18:19128:19142	5981283	0	True				
ANR	5981312	ParameterType	enum_ptr_t *		5981283	0					
ANR	5981313	Identifier	pep		5981283	1					
ANR	5981314	Parameter	gc_state_t * gcst	591:35:19145:19161	5981283	1	True				
ANR	5981315	ParameterType	gc_state_t *		5981283	0					
ANR	5981316	Identifier	gcst		5981283	1					
ANR	5981317	CFGEntryNode	ENTRY		5981283		True				
ANR	5981318	CFGExitNode	EXIT		5981283		True				
ANR	5981319	Symbol	pep -> size		5981283						
ANR	5981320	Symbol	gc_string_mark		5981283						
ANR	5981321	Symbol	pep -> ptr		5981283						
ANR	5981322	Symbol	* pep		5981283						
ANR	5981323	Symbol	false		5981283						
ANR	5981324	Symbol	pep		5981283						
ANR	5981325	Symbol	gcst		5981283						
ANR	5981326	Function	ptr_name_index_unmark	597:0:19260:19353							
ANR	5981327	FunctionDef	"ptr_name_index_unmark (enum_ptr_t * pep , gc_state_t * gcst)"		5981326	0					
ANR	5981328	CompoundStatement		599:0:19330:19353	5981326	0					
ANR	5981329	ReturnType	static void		5981326	1					
ANR	5981330	Identifier	ptr_name_index_unmark		5981326	2					
ANR	5981331	ParameterList	"enum_ptr_t * pep , gc_state_t * gcst"		5981326	3					
ANR	5981332	Parameter	enum_ptr_t * pep	598:22:19294:19308	5981326	0	True				
ANR	5981333	ParameterType	enum_ptr_t *		5981326	0					
ANR	5981334	Identifier	pep		5981326	1					
ANR	5981335	Parameter	gc_state_t * gcst	598:39:19311:19327	5981326	1	True				
ANR	5981336	ParameterType	gc_state_t *		5981326	0					
ANR	5981337	Identifier	gcst		5981326	1					
ANR	5981338	CFGEntryNode	ENTRY		5981326		True				
ANR	5981339	CFGExitNode	EXIT		5981326		True				
ANR	5981340	Symbol	pep		5981326						
ANR	5981341	Symbol	gcst		5981326						
ANR	5981342	Function	gc_objects_clear_marks	604:0:19393:20032							
ANR	5981343	FunctionDef	"gc_objects_clear_marks (const gs_memory_t * mem , clump_t * cp)"		5981342	0					
ANR	5981344	CompoundStatement		606:0:19466:20032	5981342	0					
ANR	5981345	ExpressionStatement	"if_debug_clump ( '6' , mem , ""[6]unmarking clump"" , cp )"	607:4:19472:19522	5981342	0	True				
ANR	5981346	CallExpression	"if_debug_clump ( '6' , mem , ""[6]unmarking clump"" , cp )"		5981342	0					
ANR	5981347	Callee	if_debug_clump		5981342	0					
ANR	5981348	Identifier	if_debug_clump		5981342	0					
ANR	5981349	ArgumentList	'6'		5981342	1					
ANR	5981350	Argument	'6'		5981342	0					
ANR	5981351	PrimaryExpression	'6'		5981342	0					
ANR	5981352	Argument	mem		5981342	1					
ANR	5981353	Identifier	mem		5981342	0					
ANR	5981354	Argument	"""[6]unmarking clump"""		5981342	2					
ANR	5981355	PrimaryExpression	"""[6]unmarking clump"""		5981342	0					
ANR	5981356	Argument	cp		5981342	3					
ANR	5981357	Identifier	cp		5981342	0					
ANR	5981358	Statement	SCAN_CLUMP_OBJECTS	608:4:19528:19545	5981342	1	True				
ANR	5981359	Statement	(	608:22:19546:19546	5981342	2	True				
ANR	5981360	Statement	cp	608:23:19547:19548	5981342	3	True				
ANR	5981361	Statement	)	608:25:19549:19549	5981342	4	True				
ANR	5981362	Statement	DO_ALL	609:8:19559:19564	5981342	5	True				
ANR	5981363	ExpressionStatement	struct_proc_clear_marks ( ( * proc ) ) = pre -> o_type -> clear_marks	610:8:19574:19641	5981342	6	True				
ANR	5981364	AssignmentExpression	struct_proc_clear_marks ( ( * proc ) ) = pre -> o_type -> clear_marks		5981342	0		=			
ANR	5981365	CallExpression	struct_proc_clear_marks ( ( * proc ) )		5981342	0					
ANR	5981366	Callee	struct_proc_clear_marks		5981342	0					
ANR	5981367	Identifier	struct_proc_clear_marks		5981342	0					
ANR	5981368	ArgumentList	* proc		5981342	1					
ANR	5981369	Argument	* proc		5981342	0					
ANR	5981370	UnaryOperationExpression	* proc		5981342	0					
ANR	5981371	UnaryOperator	*		5981342	0					
ANR	5981372	Identifier	proc		5981342	1					
ANR	5981373	PtrMemberAccess	pre -> o_type -> clear_marks		5981342	1					
ANR	5981374	PtrMemberAccess	pre -> o_type		5981342	0					
ANR	5981375	Identifier	pre		5981342	0					
ANR	5981376	Identifier	o_type		5981342	1					
ANR	5981377	Identifier	clear_marks		5981342	1					
ANR	5981378	IfStatement	if ( pre -> o_type != & st_free )		5981342	7					
ANR	5981379	Condition	pre -> o_type != & st_free	613:8:19664:19686	5981342	0	True				
ANR	5981380	EqualityExpression	pre -> o_type != & st_free		5981342	0		!=			
ANR	5981381	PtrMemberAccess	pre -> o_type		5981342	0					
ANR	5981382	Identifier	pre		5981342	0					
ANR	5981383	Identifier	o_type		5981342	1					
ANR	5981384	UnaryOperationExpression	& st_free		5981342	1					
ANR	5981385	UnaryOperator	&		5981342	0					
ANR	5981386	Identifier	st_free		5981342	1					
ANR	5981387	ExpressionStatement	"debug_check_object ( pre , cp , NULL )"	614:8:19697:19730	5981342	1	True				
ANR	5981388	CallExpression	"debug_check_object ( pre , cp , NULL )"		5981342	0					
ANR	5981389	Callee	debug_check_object		5981342	0					
ANR	5981390	Identifier	debug_check_object		5981342	0					
ANR	5981391	ArgumentList	pre		5981342	1					
ANR	5981392	Argument	pre		5981342	0					
ANR	5981393	Identifier	pre		5981342	0					
ANR	5981394	Argument	cp		5981342	1					
ANR	5981395	Identifier	cp		5981342	0					
ANR	5981396	Argument	NULL		5981342	2					
ANR	5981397	Identifier	NULL		5981342	0					
ANR	5981398	ExpressionStatement	"if_debug3m ( '7' , ( const gs_memory_t * ) mem , "" [7](un)marking %s(%lu) 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) size , ( ulong ) pre )"	616:4:19743:19914	5981342	8	True				
ANR	5981399	CallExpression	"if_debug3m ( '7' , ( const gs_memory_t * ) mem , "" [7](un)marking %s(%lu) 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) size , ( ulong ) pre )"		5981342	0					
ANR	5981400	Callee	if_debug3m		5981342	0					
ANR	5981401	Identifier	if_debug3m		5981342	0					
ANR	5981402	ArgumentList	'7'		5981342	1					
ANR	5981403	Argument	'7'		5981342	0					
ANR	5981404	PrimaryExpression	'7'		5981342	0					
ANR	5981405	Argument	( const gs_memory_t * ) mem		5981342	1					
ANR	5981406	CastExpression	( const gs_memory_t * ) mem		5981342	0					
ANR	5981407	CastTarget	const gs_memory_t *		5981342	0					
ANR	5981408	Identifier	mem		5981342	1					
ANR	5981409	Argument	""" [7](un)marking %s(%lu) 0x%lx\\n"""		5981342	2					
ANR	5981410	PrimaryExpression	""" [7](un)marking %s(%lu) 0x%lx\\n"""		5981342	0					
ANR	5981411	Argument	struct_type_name_string ( pre -> o_type )		5981342	3					
ANR	5981412	CallExpression	struct_type_name_string ( pre -> o_type )		5981342	0					
ANR	5981413	Callee	struct_type_name_string		5981342	0					
ANR	5981414	Identifier	struct_type_name_string		5981342	0					
ANR	5981415	ArgumentList	pre -> o_type		5981342	1					
ANR	5981416	Argument	pre -> o_type		5981342	0					
ANR	5981417	PtrMemberAccess	pre -> o_type		5981342	0					
ANR	5981418	Identifier	pre		5981342	0					
ANR	5981419	Identifier	o_type		5981342	1					
ANR	5981420	Argument	( ulong ) size		5981342	4					
ANR	5981421	CastExpression	( ulong ) size		5981342	0					
ANR	5981422	CastTarget	ulong		5981342	0					
ANR	5981423	Identifier	size		5981342	1					
ANR	5981424	Argument	( ulong ) pre		5981342	5					
ANR	5981425	CastExpression	( ulong ) pre		5981342	0					
ANR	5981426	CastTarget	ulong		5981342	0					
ANR	5981427	Identifier	pre		5981342	1					
ANR	5981428	ExpressionStatement	o_set_unmarked ( pre )	619:4:19920:19939	5981342	9	True				
ANR	5981429	CallExpression	o_set_unmarked ( pre )		5981342	0					
ANR	5981430	Callee	o_set_unmarked		5981342	0					
ANR	5981431	Identifier	o_set_unmarked		5981342	0					
ANR	5981432	ArgumentList	pre		5981342	1					
ANR	5981433	Argument	pre		5981342	0					
ANR	5981434	Identifier	pre		5981342	0					
ANR	5981435	IfStatement	if ( proc != 0 )		5981342	10					
ANR	5981436	Condition	proc != 0	620:8:19949:19957	5981342	0	True				
ANR	5981437	EqualityExpression	proc != 0		5981342	0		!=			
ANR	5981438	Identifier	proc		5981342	0					
ANR	5981439	PrimaryExpression	0		5981342	1					
ANR	5981440	ExpressionStatement	"( * proc ) ( mem , pre + 1 , size , pre -> o_type )"	621:8:19968:20009	5981342	1	True				
ANR	5981441	CallExpression	"( * proc ) ( mem , pre + 1 , size , pre -> o_type )"		5981342	0					
ANR	5981442	Callee	* proc		5981342	0					
ANR	5981443	UnaryOperationExpression	* proc		5981342	0					
ANR	5981444	UnaryOperator	*		5981342	0					
ANR	5981445	Identifier	proc		5981342	1					
ANR	5981446	ArgumentList	mem		5981342	1					
ANR	5981447	Argument	mem		5981342	0					
ANR	5981448	Identifier	mem		5981342	0					
ANR	5981449	Argument	pre + 1		5981342	1					
ANR	5981450	AdditiveExpression	pre + 1		5981342	0		+			
ANR	5981451	Identifier	pre		5981342	0					
ANR	5981452	PrimaryExpression	1		5981342	1					
ANR	5981453	Argument	size		5981342	2					
ANR	5981454	Identifier	size		5981342	0					
ANR	5981455	Argument	pre -> o_type		5981342	3					
ANR	5981456	PtrMemberAccess	pre -> o_type		5981342	0					
ANR	5981457	Identifier	pre		5981342	0					
ANR	5981458	Identifier	o_type		5981342	1					
ANR	5981459	Statement	END_OBJECTS_SCAN	622:4:20015:20030	5981342	11	True				
ANR	5981460	ReturnType	static void		5981342	1					
ANR	5981461	Identifier	gc_objects_clear_marks		5981342	2					
ANR	5981462	ParameterList	"const gs_memory_t * mem , clump_t * cp"		5981342	3					
ANR	5981463	Parameter	const gs_memory_t * mem	605:23:19428:19449	5981342	0	True				
ANR	5981464	ParameterType	const gs_memory_t *		5981342	0					
ANR	5981465	Identifier	mem		5981342	1					
ANR	5981466	Parameter	clump_t * cp	605:47:19452:19463	5981342	1	True				
ANR	5981467	ParameterType	clump_t *		5981342	0					
ANR	5981468	Identifier	cp		5981342	1					
ANR	5981469	CFGEntryNode	ENTRY		5981342		True				
ANR	5981470	CFGExitNode	EXIT		5981342		True				
ANR	5981471	Symbol	struct_proc_clear_marks		5981342						
ANR	5981472	Symbol	proc		5981342						
ANR	5981473	Symbol	pre		5981342						
ANR	5981474	Symbol	struct_type_name_string		5981342						
ANR	5981475	Symbol	NULL		5981342						
ANR	5981476	Symbol	* pre -> o_type		5981342						
ANR	5981477	Symbol	& st_free		5981342						
ANR	5981478	Symbol	cp		5981342						
ANR	5981479	Symbol	* pre		5981342						
ANR	5981480	Symbol	pre -> o_type -> clear_marks		5981342						
ANR	5981481	Symbol	* proc		5981342						
ANR	5981482	Symbol	mem		5981342						
ANR	5981483	Symbol	size		5981342						
ANR	5981484	Symbol	pre -> o_type		5981342						
ANR	5981485	Symbol	* * pre		5981342						
ANR	5981486	Function	gc_unmark_names	627:0:20152:20657							
ANR	5981487	FunctionDef	"gc_unmark_names (name_table * nt , op_array_table * op_array_table_global , op_array_table * op_array_table_local)"		5981486	0					
ANR	5981488	CompoundStatement		630:0:20290:20657	5981486	0					
ANR	5981489	IdentifierDeclStatement	uint i ;	631:4:20296:20302	5981486	0	True				
ANR	5981490	IdentifierDecl	i		5981486	0					
ANR	5981491	IdentifierDeclType	uint		5981486	0					
ANR	5981492	Identifier	i		5981486	1					
ANR	5981493	ExpressionStatement	names_unmark_all ( nt )	633:4:20309:20329	5981486	1	True				
ANR	5981494	CallExpression	names_unmark_all ( nt )		5981486	0					
ANR	5981495	Callee	names_unmark_all		5981486	0					
ANR	5981496	Identifier	names_unmark_all		5981486	0					
ANR	5981497	ArgumentList	nt		5981486	1					
ANR	5981498	Argument	nt		5981486	0					
ANR	5981499	Identifier	nt		5981486	0					
ANR	5981500	ForStatement	for ( i = 0 ; i < op_array_table_global -> count ; i ++ )		5981486	2					
ANR	5981501	ForInit	i = 0 ;	634:9:20340:20345	5981486	0	True				
ANR	5981502	AssignmentExpression	i = 0		5981486	0		=			
ANR	5981503	Identifier	i		5981486	0					
ANR	5981504	PrimaryExpression	0		5981486	1					
ANR	5981505	Condition	i < op_array_table_global -> count	634:16:20347:20378	5981486	1	True				
ANR	5981506	RelationalExpression	i < op_array_table_global -> count		5981486	0		<			
ANR	5981507	Identifier	i		5981486	0					
ANR	5981508	PtrMemberAccess	op_array_table_global -> count		5981486	1					
ANR	5981509	Identifier	op_array_table_global		5981486	0					
ANR	5981510	Identifier	count		5981486	1					
ANR	5981511	PostIncDecOperationExpression	i ++	634:50:20381:20383	5981486	2	True				
ANR	5981512	Identifier	i		5981486	0					
ANR	5981513	IncDec	++		5981486	1					
ANR	5981514	CompoundStatement		6:8:105:159	5981486	3					
ANR	5981515	IdentifierDeclStatement	name_index_t nidx = op_array_table_global -> nx_table [ i ] ;	635:8:20396:20450	5981486	0	True				
ANR	5981516	IdentifierDecl	nidx = op_array_table_global -> nx_table [ i ]		5981486	0					
ANR	5981517	IdentifierDeclType	name_index_t		5981486	0					
ANR	5981518	Identifier	nidx		5981486	1					
ANR	5981519	AssignmentExpression	nidx = op_array_table_global -> nx_table [ i ]		5981486	2		=			
ANR	5981520	Identifier	nidx		5981486	0					
ANR	5981521	ArrayIndexing	op_array_table_global -> nx_table [ i ]		5981486	1					
ANR	5981522	PtrMemberAccess	op_array_table_global -> nx_table		5981486	0					
ANR	5981523	Identifier	op_array_table_global		5981486	0					
ANR	5981524	Identifier	nx_table		5981486	1					
ANR	5981525	Identifier	i		5981486	1					
ANR	5981526	ExpressionStatement	"names_mark_index ( nt , nidx )"	637:8:20461:20487	5981486	1	True				
ANR	5981527	CallExpression	"names_mark_index ( nt , nidx )"		5981486	0					
ANR	5981528	Callee	names_mark_index		5981486	0					
ANR	5981529	Identifier	names_mark_index		5981486	0					
ANR	5981530	ArgumentList	nt		5981486	1					
ANR	5981531	Argument	nt		5981486	0					
ANR	5981532	Identifier	nt		5981486	0					
ANR	5981533	Argument	nidx		5981486	1					
ANR	5981534	Identifier	nidx		5981486	0					
ANR	5981535	ForStatement	for ( i = 0 ; i < op_array_table_local -> count ; i ++ )		5981486	3					
ANR	5981536	ForInit	i = 0 ;	639:9:20504:20509	5981486	0	True				
ANR	5981537	AssignmentExpression	i = 0		5981486	0		=			
ANR	5981538	Identifier	i		5981486	0					
ANR	5981539	PrimaryExpression	0		5981486	1					
ANR	5981540	Condition	i < op_array_table_local -> count	639:16:20511:20541	5981486	1	True				
ANR	5981541	RelationalExpression	i < op_array_table_local -> count		5981486	0		<			
ANR	5981542	Identifier	i		5981486	0					
ANR	5981543	PtrMemberAccess	op_array_table_local -> count		5981486	1					
ANR	5981544	Identifier	op_array_table_local		5981486	0					
ANR	5981545	Identifier	count		5981486	1					
ANR	5981546	PostIncDecOperationExpression	i ++	639:49:20544:20546	5981486	2	True				
ANR	5981547	Identifier	i		5981486	0					
ANR	5981548	IncDec	++		5981486	1					
ANR	5981549	CompoundStatement		11:8:268:321	5981486	3					
ANR	5981550	IdentifierDeclStatement	name_index_t nidx = op_array_table_local -> nx_table [ i ] ;	640:8:20559:20612	5981486	0	True				
ANR	5981551	IdentifierDecl	nidx = op_array_table_local -> nx_table [ i ]		5981486	0					
ANR	5981552	IdentifierDeclType	name_index_t		5981486	0					
ANR	5981553	Identifier	nidx		5981486	1					
ANR	5981554	AssignmentExpression	nidx = op_array_table_local -> nx_table [ i ]		5981486	2		=			
ANR	5981555	Identifier	nidx		5981486	0					
ANR	5981556	ArrayIndexing	op_array_table_local -> nx_table [ i ]		5981486	1					
ANR	5981557	PtrMemberAccess	op_array_table_local -> nx_table		5981486	0					
ANR	5981558	Identifier	op_array_table_local		5981486	0					
ANR	5981559	Identifier	nx_table		5981486	1					
ANR	5981560	Identifier	i		5981486	1					
ANR	5981561	ExpressionStatement	"names_mark_index ( nt , nidx )"	642:8:20623:20649	5981486	1	True				
ANR	5981562	CallExpression	"names_mark_index ( nt , nidx )"		5981486	0					
ANR	5981563	Callee	names_mark_index		5981486	0					
ANR	5981564	Identifier	names_mark_index		5981486	0					
ANR	5981565	ArgumentList	nt		5981486	1					
ANR	5981566	Argument	nt		5981486	0					
ANR	5981567	Identifier	nt		5981486	0					
ANR	5981568	Argument	nidx		5981486	1					
ANR	5981569	Identifier	nidx		5981486	0					
ANR	5981570	ReturnType	static void		5981486	1					
ANR	5981571	Identifier	gc_unmark_names		5981486	2					
ANR	5981572	ParameterList	"name_table * nt , op_array_table * op_array_table_global , op_array_table * op_array_table_local"		5981486	3					
ANR	5981573	Parameter	name_table * nt	628:16:20180:20194	5981486	0	True				
ANR	5981574	ParameterType	name_table *		5981486	0					
ANR	5981575	Identifier	nt		5981486	1					
ANR	5981576	Parameter	op_array_table * op_array_table_global	628:33:20197:20233	5981486	1	True				
ANR	5981577	ParameterType	op_array_table *		5981486	0					
ANR	5981578	Identifier	op_array_table_global		5981486	1					
ANR	5981579	Parameter	op_array_table * op_array_table_local	629:16:20252:20287	5981486	2	True				
ANR	5981580	ParameterType	op_array_table *		5981486	0					
ANR	5981581	Identifier	op_array_table_local		5981486	1					
ANR	5981582	CFGEntryNode	ENTRY		5981486		True				
ANR	5981583	CFGExitNode	EXIT		5981486		True				
ANR	5981584	Symbol	* * op_array_table_local		5981486						
ANR	5981585	Symbol	nt		5981486						
ANR	5981586	Symbol	op_array_table_global -> count		5981486						
ANR	5981587	Symbol	i		5981486						
ANR	5981588	Symbol	op_array_table_global -> nx_table		5981486						
ANR	5981589	Symbol	* op_array_table_local -> nx_table		5981486						
ANR	5981590	Symbol	op_array_table_local -> count		5981486						
ANR	5981591	Symbol	* * op_array_table_global		5981486						
ANR	5981592	Symbol	* i		5981486						
ANR	5981593	Symbol	op_array_table_local -> nx_table		5981486						
ANR	5981594	Symbol	op_array_table_local		5981486						
ANR	5981595	Symbol	* op_array_table_global -> nx_table		5981486						
ANR	5981596	Symbol	op_array_table_global		5981486						
ANR	5981597	Symbol	* op_array_table_global		5981486						
ANR	5981598	Symbol	nidx		5981486						
ANR	5981599	Symbol	* op_array_table_local		5981486						
ANR	5981600	Function	gc_init_mark_stack	649:0:20743:20949							
ANR	5981601	FunctionDef	"gc_init_mark_stack (gc_mark_stack * pms , uint count)"		5981600	0					
ANR	5981602	CompoundStatement		651:0:20807:20949	5981600	0					
ANR	5981603	ExpressionStatement	pms -> next = 0	652:4:20813:20826	5981600	0	True				
ANR	5981604	AssignmentExpression	pms -> next = 0		5981600	0		=			
ANR	5981605	PtrMemberAccess	pms -> next		5981600	0					
ANR	5981606	Identifier	pms		5981600	0					
ANR	5981607	Identifier	next		5981600	1					
ANR	5981608	PrimaryExpression	0		5981600	1					
ANR	5981609	ExpressionStatement	pms -> count = count	653:4:20832:20850	5981600	1	True				
ANR	5981610	AssignmentExpression	pms -> count = count		5981600	0		=			
ANR	5981611	PtrMemberAccess	pms -> count		5981600	0					
ANR	5981612	Identifier	pms		5981600	0					
ANR	5981613	Identifier	count		5981600	1					
ANR	5981614	Identifier	count		5981600	1					
ANR	5981615	ExpressionStatement	pms -> entries [ 0 ] . ptr = 0	654:4:20856:20879	5981600	2	True				
ANR	5981616	AssignmentExpression	pms -> entries [ 0 ] . ptr = 0		5981600	0		=			
ANR	5981617	MemberAccess	pms -> entries [ 0 ] . ptr		5981600	0					
ANR	5981618	ArrayIndexing	pms -> entries [ 0 ]		5981600	0					
ANR	5981619	PtrMemberAccess	pms -> entries		5981600	0					
ANR	5981620	Identifier	pms		5981600	0					
ANR	5981621	Identifier	entries		5981600	1					
ANR	5981622	PrimaryExpression	0		5981600	1					
ANR	5981623	Identifier	ptr		5981600	1					
ANR	5981624	PrimaryExpression	0		5981600	1					
ANR	5981625	ExpressionStatement	pms -> entries [ 0 ] . index = 0	655:4:20885:20910	5981600	3	True				
ANR	5981626	AssignmentExpression	pms -> entries [ 0 ] . index = 0		5981600	0		=			
ANR	5981627	MemberAccess	pms -> entries [ 0 ] . index		5981600	0					
ANR	5981628	ArrayIndexing	pms -> entries [ 0 ]		5981600	0					
ANR	5981629	PtrMemberAccess	pms -> entries		5981600	0					
ANR	5981630	Identifier	pms		5981600	0					
ANR	5981631	Identifier	entries		5981600	1					
ANR	5981632	PrimaryExpression	0		5981600	1					
ANR	5981633	Identifier	index		5981600	1					
ANR	5981634	PrimaryExpression	0		5981600	1					
ANR	5981635	ExpressionStatement	pms -> entries [ 0 ] . is_refs = false	656:4:20916:20947	5981600	4	True				
ANR	5981636	AssignmentExpression	pms -> entries [ 0 ] . is_refs = false		5981600	0		=			
ANR	5981637	MemberAccess	pms -> entries [ 0 ] . is_refs		5981600	0					
ANR	5981638	ArrayIndexing	pms -> entries [ 0 ]		5981600	0					
ANR	5981639	PtrMemberAccess	pms -> entries		5981600	0					
ANR	5981640	Identifier	pms		5981600	0					
ANR	5981641	Identifier	entries		5981600	1					
ANR	5981642	PrimaryExpression	0		5981600	1					
ANR	5981643	Identifier	is_refs		5981600	1					
ANR	5981644	Identifier	false		5981600	1					
ANR	5981645	ReturnType	static void		5981600	1					
ANR	5981646	Identifier	gc_init_mark_stack		5981600	2					
ANR	5981647	ParameterList	"gc_mark_stack * pms , uint count"		5981600	3					
ANR	5981648	Parameter	gc_mark_stack * pms	650:19:20774:20792	5981600	0	True				
ANR	5981649	ParameterType	gc_mark_stack *		5981600	0					
ANR	5981650	Identifier	pms		5981600	1					
ANR	5981651	Parameter	uint count	650:40:20795:20804	5981600	1	True				
ANR	5981652	ParameterType	uint		5981600	0					
ANR	5981653	Identifier	count		5981600	1					
ANR	5981654	CFGEntryNode	ENTRY		5981600		True				
ANR	5981655	CFGExitNode	EXIT		5981600		True				
ANR	5981656	Symbol	* pms		5981600						
ANR	5981657	Symbol	pms -> entries		5981600						
ANR	5981658	Symbol	pms -> entries [ 0 ] . index		5981600						
ANR	5981659	Symbol	* pms -> entries		5981600						
ANR	5981660	Symbol	pms		5981600						
ANR	5981661	Symbol	pms -> count		5981600						
ANR	5981662	Symbol	pms -> entries [ 0 ] . is_refs		5981600						
ANR	5981663	Symbol	count		5981600						
ANR	5981664	Symbol	false		5981600						
ANR	5981665	Symbol	pms -> next		5981600						
ANR	5981666	Symbol	* * pms		5981600						
ANR	5981667	Symbol	pms -> entries [ 0 ] . ptr		5981600						
ANR	5981668	Function	gc_rescan_clump	661:0:21049:23141							
ANR	5981669	FunctionDef	"gc_rescan_clump (clump_t * cp , gc_state_t * pstate , gc_mark_stack * pmstack)"		5981668	0					
ANR	5981670	CompoundStatement		663:0:21136:23141	5981668	0					
ANR	5981671	IdentifierDeclStatement	byte * sbot = cp -> rescan_bot ;	664:4:21142:21169	5981668	0	True				
ANR	5981672	IdentifierDecl	* sbot = cp -> rescan_bot		5981668	0					
ANR	5981673	IdentifierDeclType	byte *		5981668	0					
ANR	5981674	Identifier	sbot		5981668	1					
ANR	5981675	AssignmentExpression	* sbot = cp -> rescan_bot		5981668	2		=			
ANR	5981676	Identifier	sbot		5981668	0					
ANR	5981677	PtrMemberAccess	cp -> rescan_bot		5981668	1					
ANR	5981678	Identifier	cp		5981668	0					
ANR	5981679	Identifier	rescan_bot		5981668	1					
ANR	5981680	IdentifierDeclStatement	byte * stop = cp -> rescan_top ;	665:4:21175:21202	5981668	1	True				
ANR	5981681	IdentifierDecl	* stop = cp -> rescan_top		5981668	0					
ANR	5981682	IdentifierDeclType	byte *		5981668	0					
ANR	5981683	Identifier	stop		5981668	1					
ANR	5981684	AssignmentExpression	* stop = cp -> rescan_top		5981668	2		=			
ANR	5981685	Identifier	stop		5981668	0					
ANR	5981686	PtrMemberAccess	cp -> rescan_top		5981668	1					
ANR	5981687	Identifier	cp		5981668	0					
ANR	5981688	Identifier	rescan_top		5981668	1					
ANR	5981689	IdentifierDeclStatement	gs_gc_root_t root ;	666:4:21208:21225	5981668	2	True				
ANR	5981690	IdentifierDecl	root		5981668	0					
ANR	5981691	IdentifierDeclType	gs_gc_root_t		5981668	0					
ANR	5981692	Identifier	root		5981668	1					
ANR	5981693	IdentifierDeclStatement	void * comp ;	667:4:21231:21241	5981668	3	True				
ANR	5981694	IdentifierDecl	* comp		5981668	0					
ANR	5981695	IdentifierDeclType	void *		5981668	0					
ANR	5981696	Identifier	comp		5981668	1					
ANR	5981697	IdentifierDeclStatement	int more = 0 ;	668:4:21247:21259	5981668	4	True				
ANR	5981698	IdentifierDecl	more = 0		5981668	0					
ANR	5981699	IdentifierDeclType	int		5981668	0					
ANR	5981700	Identifier	more		5981668	1					
ANR	5981701	AssignmentExpression	more = 0		5981668	2		=			
ANR	5981702	Identifier	more		5981668	0					
ANR	5981703	PrimaryExpression	0		5981668	1					
ANR	5981704	IdentifierDeclStatement	const gs_memory_t * mem = gcst_get_memory_ptr ( pstate ) ;	669:4:21265:21319	5981668	5	True				
ANR	5981705	IdentifierDecl	* mem = gcst_get_memory_ptr ( pstate )		5981668	0					
ANR	5981706	IdentifierDeclType	const gs_memory_t *		5981668	0					
ANR	5981707	Identifier	mem		5981668	1					
ANR	5981708	AssignmentExpression	* mem = gcst_get_memory_ptr ( pstate )		5981668	2		=			
ANR	5981709	Identifier	mem		5981668	0					
ANR	5981710	CallExpression	gcst_get_memory_ptr ( pstate )		5981668	1					
ANR	5981711	Callee	gcst_get_memory_ptr		5981668	0					
ANR	5981712	Identifier	gcst_get_memory_ptr		5981668	0					
ANR	5981713	ArgumentList	pstate		5981668	1					
ANR	5981714	Argument	pstate		5981668	0					
ANR	5981715	Identifier	pstate		5981668	0					
ANR	5981716	IfStatement	if ( sbot > stop )		5981668	6					
ANR	5981717	Condition	sbot > stop	671:8:21330:21340	5981668	0	True				
ANR	5981718	RelationalExpression	sbot > stop		5981668	0		>			
ANR	5981719	Identifier	sbot		5981668	0					
ANR	5981720	Identifier	stop		5981668	1					
ANR	5981721	ReturnStatement	return 0 ;	672:8:21351:21359	5981668	1	True				
ANR	5981722	PrimaryExpression	0		5981668	0					
ANR	5981723	ExpressionStatement	root . p = & comp	673:4:21365:21379	5981668	7	True				
ANR	5981724	AssignmentExpression	root . p = & comp		5981668	0		=			
ANR	5981725	MemberAccess	root . p		5981668	0					
ANR	5981726	Identifier	root		5981668	0					
ANR	5981727	Identifier	p		5981668	1					
ANR	5981728	UnaryOperationExpression	& comp		5981668	1					
ANR	5981729	UnaryOperator	&		5981668	0					
ANR	5981730	Identifier	comp		5981668	1					
ANR	5981731	ExpressionStatement	"if_debug_clump ( '6' , mem , ""[6]rescanning clump"" , cp )"	674:4:21385:21436	5981668	8	True				
ANR	5981732	CallExpression	"if_debug_clump ( '6' , mem , ""[6]rescanning clump"" , cp )"		5981668	0					
ANR	5981733	Callee	if_debug_clump		5981668	0					
ANR	5981734	Identifier	if_debug_clump		5981668	0					
ANR	5981735	ArgumentList	'6'		5981668	1					
ANR	5981736	Argument	'6'		5981668	0					
ANR	5981737	PrimaryExpression	'6'		5981668	0					
ANR	5981738	Argument	mem		5981668	1					
ANR	5981739	Identifier	mem		5981668	0					
ANR	5981740	Argument	"""[6]rescanning clump"""		5981668	2					
ANR	5981741	PrimaryExpression	"""[6]rescanning clump"""		5981668	0					
ANR	5981742	Argument	cp		5981668	3					
ANR	5981743	Identifier	cp		5981668	0					
ANR	5981744	ExpressionStatement	cp -> rescan_bot = cp -> cend	675:4:21442:21467	5981668	9	True				
ANR	5981745	AssignmentExpression	cp -> rescan_bot = cp -> cend		5981668	0		=			
ANR	5981746	PtrMemberAccess	cp -> rescan_bot		5981668	0					
ANR	5981747	Identifier	cp		5981668	0					
ANR	5981748	Identifier	rescan_bot		5981668	1					
ANR	5981749	PtrMemberAccess	cp -> cend		5981668	1					
ANR	5981750	Identifier	cp		5981668	0					
ANR	5981751	Identifier	cend		5981668	1					
ANR	5981752	ExpressionStatement	cp -> rescan_top = cp -> cbase	676:4:21473:21499	5981668	10	True				
ANR	5981753	AssignmentExpression	cp -> rescan_top = cp -> cbase		5981668	0		=			
ANR	5981754	PtrMemberAccess	cp -> rescan_top		5981668	0					
ANR	5981755	Identifier	cp		5981668	0					
ANR	5981756	Identifier	rescan_top		5981668	1					
ANR	5981757	PtrMemberAccess	cp -> cbase		5981668	1					
ANR	5981758	Identifier	cp		5981668	0					
ANR	5981759	Identifier	cbase		5981668	1					
ANR	5981760	Statement	SCAN_CLUMP_OBJECTS	677:4:21505:21522	5981668	11	True				
ANR	5981761	Statement	(	677:22:21523:21523	5981668	12	True				
ANR	5981762	Statement	cp	677:23:21524:21525	5981668	13	True				
ANR	5981763	Statement	)	677:25:21526:21526	5981668	14	True				
ANR	5981764	Statement	DO_ALL	678:8:21536:21541	5981668	15	True				
ANR	5981765	IfStatement	if ( ( byte * ) ( pre + 1 ) + size < sbot )		5981668	16					
ANR	5981766	Condition	( byte * ) ( pre + 1 ) + size < sbot	679:12:21555:21586	5981668	0	True				
ANR	5981767	RelationalExpression	( byte * ) ( pre + 1 ) + size < sbot		5981668	0		<			
ANR	5981768	AdditiveExpression	( byte * ) ( pre + 1 ) + size		5981668	0		+			
ANR	5981769	CastExpression	( byte * ) ( pre + 1 )		5981668	0					
ANR	5981770	CastTarget	byte *		5981668	0					
ANR	5981771	AdditiveExpression	pre + 1		5981668	1		+			
ANR	5981772	Identifier	pre		5981668	0					
ANR	5981773	PrimaryExpression	1		5981668	1					
ANR	5981774	Identifier	size		5981668	1					
ANR	5981775	Identifier	sbot		5981668	1					
ANR	5981776	ExpressionStatement		679:45:21588:21588	5981668	1	True				
ANR	5981777	ElseStatement	else		5981668	0					
ANR	5981778	IfStatement	if ( ( byte * ) ( pre + 1 ) > stop )		5981668	0					
ANR	5981779	Condition	( byte * ) ( pre + 1 ) > stop	680:13:21603:21627	5981668	0	True				
ANR	5981780	RelationalExpression	( byte * ) ( pre + 1 ) > stop		5981668	0		>			
ANR	5981781	CastExpression	( byte * ) ( pre + 1 )		5981668	0					
ANR	5981782	CastTarget	byte *		5981668	0					
ANR	5981783	AdditiveExpression	pre + 1		5981668	1		+			
ANR	5981784	Identifier	pre		5981668	0					
ANR	5981785	PrimaryExpression	1		5981668	1					
ANR	5981786	Identifier	stop		5981668	1					
ANR	5981787	ReturnStatement	return more ;	681:8:21638:21649	5981668	1	True				
ANR	5981788	Identifier	more		5981668	0					
ANR	5981789	ElseStatement	else		5981668	0					
ANR	5981790	CompoundStatement		20:9:554:554	5981668	0					
ANR	5981791	ExpressionStatement	"if_debug2m ( '7' , mem , "" [7]scanning/marking 0x%lx(%lu)\\n"" , ( ulong ) pre , ( ulong ) size )"	683:8:21701:21804	5981668	0	True				
ANR	5981792	CallExpression	"if_debug2m ( '7' , mem , "" [7]scanning/marking 0x%lx(%lu)\\n"" , ( ulong ) pre , ( ulong ) size )"		5981668	0					
ANR	5981793	Callee	if_debug2m		5981668	0					
ANR	5981794	Identifier	if_debug2m		5981668	0					
ANR	5981795	ArgumentList	'7'		5981668	1					
ANR	5981796	Argument	'7'		5981668	0					
ANR	5981797	PrimaryExpression	'7'		5981668	0					
ANR	5981798	Argument	mem		5981668	1					
ANR	5981799	Identifier	mem		5981668	0					
ANR	5981800	Argument	""" [7]scanning/marking 0x%lx(%lu)\\n"""		5981668	2					
ANR	5981801	PrimaryExpression	""" [7]scanning/marking 0x%lx(%lu)\\n"""		5981668	0					
ANR	5981802	Argument	( ulong ) pre		5981668	3					
ANR	5981803	CastExpression	( ulong ) pre		5981668	0					
ANR	5981804	CastTarget	ulong		5981668	0					
ANR	5981805	Identifier	pre		5981668	1					
ANR	5981806	Argument	( ulong ) size		5981668	4					
ANR	5981807	CastExpression	( ulong ) size		5981668	0					
ANR	5981808	CastTarget	ulong		5981668	0					
ANR	5981809	Identifier	size		5981668	1					
ANR	5981810	IfStatement	if ( pre -> o_type == & st_refs )		5981668	1					
ANR	5981811	Condition	pre -> o_type == & st_refs	685:12:21818:21840	5981668	0	True				
ANR	5981812	EqualityExpression	pre -> o_type == & st_refs		5981668	0		==			
ANR	5981813	PtrMemberAccess	pre -> o_type		5981668	0					
ANR	5981814	Identifier	pre		5981668	0					
ANR	5981815	Identifier	o_type		5981668	1					
ANR	5981816	UnaryOperationExpression	& st_refs		5981668	1					
ANR	5981817	UnaryOperator	&		5981668	0					
ANR	5981818	Identifier	st_refs		5981668	1					
ANR	5981819	CompoundStatement		25:12:775:804	5981668	1					
ANR	5981820	IdentifierDeclStatement	ref_packed * rp = ( ref_packed * ) ( pre + 1 ) ;	686:12:21857:21898	5981668	0	True				
ANR	5981821	IdentifierDecl	* rp = ( ref_packed * ) ( pre + 1 )		5981668	0					
ANR	5981822	IdentifierDeclType	ref_packed *		5981668	0					
ANR	5981823	Identifier	rp		5981668	1					
ANR	5981824	AssignmentExpression	* rp = ( ref_packed * ) ( pre + 1 )		5981668	2		=			
ANR	5981825	Identifier	rp		5981668	0					
ANR	5981826	CastExpression	( ref_packed * ) ( pre + 1 )		5981668	1					
ANR	5981827	CastTarget	ref_packed *		5981668	0					
ANR	5981828	AdditiveExpression	pre + 1		5981668	1		+			
ANR	5981829	Identifier	pre		5981668	0					
ANR	5981830	PrimaryExpression	1		5981668	1					
ANR	5981831	IdentifierDeclStatement	char * end = ( char * ) rp + size ;	687:12:21912:21941	5981668	1	True				
ANR	5981832	IdentifierDecl	* end = ( char * ) rp + size		5981668	0					
ANR	5981833	IdentifierDeclType	char *		5981668	0					
ANR	5981834	Identifier	end		5981668	1					
ANR	5981835	AssignmentExpression	* end = ( char * ) rp + size		5981668	2		=			
ANR	5981836	Identifier	end		5981668	0					
ANR	5981837	AdditiveExpression	( char * ) rp + size		5981668	1		+			
ANR	5981838	CastExpression	( char * ) rp		5981668	0					
ANR	5981839	CastTarget	char *		5981668	0					
ANR	5981840	Identifier	rp		5981668	1					
ANR	5981841	Identifier	size		5981668	1					
ANR	5981842	ExpressionStatement	root . ptype = ptr_ref_type	689:12:21956:21981	5981668	2	True				
ANR	5981843	AssignmentExpression	root . ptype = ptr_ref_type		5981668	0		=			
ANR	5981844	MemberAccess	root . ptype		5981668	0					
ANR	5981845	Identifier	root		5981668	0					
ANR	5981846	Identifier	ptype		5981668	1					
ANR	5981847	Identifier	ptr_ref_type		5981668	1					
ANR	5981848	WhileStatement	while ( ( char * ) rp < end )		5981668	3					
ANR	5981849	Condition	( char * ) rp < end	690:19:22002:22017	5981668	0	True				
ANR	5981850	RelationalExpression	( char * ) rp < end		5981668	0		<			
ANR	5981851	CastExpression	( char * ) rp		5981668	0					
ANR	5981852	CastTarget	char *		5981668	0					
ANR	5981853	Identifier	rp		5981668	1					
ANR	5981854	Identifier	end		5981668	1					
ANR	5981855	CompoundStatement		28:37:883:883	5981668	1					
ANR	5981856	ExpressionStatement	comp = rp	691:16:22038:22047	5981668	0	True				
ANR	5981857	AssignmentExpression	comp = rp		5981668	0		=			
ANR	5981858	Identifier	comp		5981668	0					
ANR	5981859	Identifier	rp		5981668	1					
ANR	5981860	IfStatement	if ( r_is_packed ( rp ) )		5981668	1					
ANR	5981861	Condition	r_is_packed ( rp )	692:20:22069:22083	5981668	0	True				
ANR	5981862	CallExpression	r_is_packed ( rp )		5981668	0					
ANR	5981863	Callee	r_is_packed		5981668	0					
ANR	5981864	Identifier	r_is_packed		5981668	0					
ANR	5981865	ArgumentList	rp		5981668	1					
ANR	5981866	Argument	rp		5981668	0					
ANR	5981867	Identifier	rp		5981668	0					
ANR	5981868	CompoundStatement		30:37:949:949	5981668	1					
ANR	5981869	IfStatement	if ( r_has_pmark ( rp ) )		5981668	0					
ANR	5981870	Condition	r_has_pmark ( rp )	693:24:22112:22126	5981668	0	True				
ANR	5981871	CallExpression	r_has_pmark ( rp )		5981668	0					
ANR	5981872	Callee	r_has_pmark		5981668	0					
ANR	5981873	Identifier	r_has_pmark		5981668	0					
ANR	5981874	ArgumentList	rp		5981668	1					
ANR	5981875	Argument	rp		5981668	0					
ANR	5981876	Identifier	rp		5981668	0					
ANR	5981877	CompoundStatement		31:41:992:992	5981668	1					
ANR	5981878	ExpressionStatement	r_clear_pmark ( rp )	694:24:22155:22172	5981668	0	True				
ANR	5981879	CallExpression	r_clear_pmark ( rp )		5981668	0					
ANR	5981880	Callee	r_clear_pmark		5981668	0					
ANR	5981881	Identifier	r_clear_pmark		5981668	0					
ANR	5981882	ArgumentList	rp		5981668	1					
ANR	5981883	Argument	rp		5981668	0					
ANR	5981884	Identifier	rp		5981668	0					
ANR	5981885	ExpressionStatement	"more |= gc_trace ( & root , pstate , pmstack )"	695:24:22198:22279	5981668	1	True				
ANR	5981886	AssignmentExpression	"more |= gc_trace ( & root , pstate , pmstack )"		5981668	0		|=			
ANR	5981887	Identifier	more		5981668	0					
ANR	5981888	CallExpression	"gc_trace ( & root , pstate , pmstack )"		5981668	1					
ANR	5981889	Callee	gc_trace		5981668	0					
ANR	5981890	Identifier	gc_trace		5981668	0					
ANR	5981891	ArgumentList	& root		5981668	1					
ANR	5981892	Argument	& root		5981668	0					
ANR	5981893	UnaryOperationExpression	& root		5981668	0					
ANR	5981894	UnaryOperator	&		5981668	0					
ANR	5981895	Identifier	root		5981668	1					
ANR	5981896	Argument	pstate		5981668	1					
ANR	5981897	Identifier	pstate		5981668	0					
ANR	5981898	Argument	pmstack		5981668	2					
ANR	5981899	Identifier	pmstack		5981668	0					
ANR	5981900	ExpressionStatement	rp ++	698:20:22323:22327	5981668	1	True				
ANR	5981901	PostIncDecOperationExpression	rp ++		5981668	0					
ANR	5981902	Identifier	rp		5981668	0					
ANR	5981903	IncDec	++		5981668	1					
ANR	5981904	ElseStatement	else		5981668	0					
ANR	5981905	CompoundStatement		37:23:1215:1215	5981668	0					
ANR	5981906	Statement	ref	700:20:22374:22376	5981668	0	True				
ANR	5981907	Statement	*	700:24:22378:22378	5981668	1	True				
ANR	5981908	Statement	const	700:25:22379:22383	5981668	2	True				
ANR	5981909	ExpressionStatement	pref = ( ref * ) rp	700:31:22385:22401	5981668	3	True				
ANR	5981910	AssignmentExpression	pref = ( ref * ) rp		5981668	0		=			
ANR	5981911	Identifier	pref		5981668	0					
ANR	5981912	CastExpression	( ref * ) rp		5981668	1					
ANR	5981913	CastTarget	ref *		5981668	0					
ANR	5981914	Identifier	rp		5981668	1					
ANR	5981915	IfStatement	"if ( r_has_attr ( pref , l_mark ) )"		5981668	4					
ANR	5981916	Condition	"r_has_attr ( pref , l_mark )"	702:24:22428:22451	5981668	0	True				
ANR	5981917	CallExpression	"r_has_attr ( pref , l_mark )"		5981668	0					
ANR	5981918	Callee	r_has_attr		5981668	0					
ANR	5981919	Identifier	r_has_attr		5981668	0					
ANR	5981920	ArgumentList	pref		5981668	1					
ANR	5981921	Argument	pref		5981668	0					
ANR	5981922	Identifier	pref		5981668	0					
ANR	5981923	Argument	l_mark		5981668	1					
ANR	5981924	Identifier	l_mark		5981668	0					
ANR	5981925	CompoundStatement		40:50:1317:1317	5981668	1					
ANR	5981926	ExpressionStatement	"r_clear_attrs ( pref , l_mark )"	703:24:22480:22507	5981668	0	True				
ANR	5981927	CallExpression	"r_clear_attrs ( pref , l_mark )"		5981668	0					
ANR	5981928	Callee	r_clear_attrs		5981668	0					
ANR	5981929	Identifier	r_clear_attrs		5981668	0					
ANR	5981930	ArgumentList	pref		5981668	1					
ANR	5981931	Argument	pref		5981668	0					
ANR	5981932	Identifier	pref		5981668	0					
ANR	5981933	Argument	l_mark		5981668	1					
ANR	5981934	Identifier	l_mark		5981668	0					
ANR	5981935	ExpressionStatement	"more |= gc_trace ( & root , pstate , pmstack )"	704:24:22533:22573	5981668	1	True				
ANR	5981936	AssignmentExpression	"more |= gc_trace ( & root , pstate , pmstack )"		5981668	0		|=			
ANR	5981937	Identifier	more		5981668	0					
ANR	5981938	CallExpression	"gc_trace ( & root , pstate , pmstack )"		5981668	1					
ANR	5981939	Callee	gc_trace		5981668	0					
ANR	5981940	Identifier	gc_trace		5981668	0					
ANR	5981941	ArgumentList	& root		5981668	1					
ANR	5981942	Argument	& root		5981668	0					
ANR	5981943	UnaryOperationExpression	& root		5981668	0					
ANR	5981944	UnaryOperator	&		5981668	0					
ANR	5981945	Identifier	root		5981668	1					
ANR	5981946	Argument	pstate		5981668	1					
ANR	5981947	Identifier	pstate		5981668	0					
ANR	5981948	Argument	pmstack		5981668	2					
ANR	5981949	Identifier	pmstack		5981668	0					
ANR	5981950	ExpressionStatement	rp += packed_per_ref	706:20:22617:22637	5981668	5	True				
ANR	5981951	AssignmentExpression	rp += packed_per_ref		5981668	0		+=			
ANR	5981952	Identifier	rp		5981668	0					
ANR	5981953	Identifier	packed_per_ref		5981668	1					
ANR	5981954	ElseStatement	else		5981668	0					
ANR	5981955	IfStatement	if ( ! o_is_unmarked ( pre ) )		5981668	0					
ANR	5981956	Condition	! o_is_unmarked ( pre )	709:19:22690:22708	5981668	0	True				
ANR	5981957	UnaryOperationExpression	! o_is_unmarked ( pre )		5981668	0					
ANR	5981958	UnaryOperator	!		5981668	0					
ANR	5981959	CallExpression	o_is_unmarked ( pre )		5981668	1					
ANR	5981960	Callee	o_is_unmarked		5981668	0					
ANR	5981961	Identifier	o_is_unmarked		5981668	0					
ANR	5981962	ArgumentList	pre		5981668	1					
ANR	5981963	Argument	pre		5981668	0					
ANR	5981964	Identifier	pre		5981668	0					
ANR	5981965	CompoundStatement		47:40:1574:1574	5981668	1					
ANR	5981966	ExpressionStatement	struct_proc_clear_marks ( ( * proc ) ) = pre -> o_type -> clear_marks	710:12:22725:22800	5981668	0	True				
ANR	5981967	AssignmentExpression	struct_proc_clear_marks ( ( * proc ) ) = pre -> o_type -> clear_marks		5981668	0		=			
ANR	5981968	CallExpression	struct_proc_clear_marks ( ( * proc ) )		5981668	0					
ANR	5981969	Callee	struct_proc_clear_marks		5981668	0					
ANR	5981970	Identifier	struct_proc_clear_marks		5981668	0					
ANR	5981971	ArgumentList	* proc		5981668	1					
ANR	5981972	Argument	* proc		5981668	0					
ANR	5981973	UnaryOperationExpression	* proc		5981668	0					
ANR	5981974	UnaryOperator	*		5981668	0					
ANR	5981975	Identifier	proc		5981668	1					
ANR	5981976	PtrMemberAccess	pre -> o_type -> clear_marks		5981668	1					
ANR	5981977	PtrMemberAccess	pre -> o_type		5981668	0					
ANR	5981978	Identifier	pre		5981668	0					
ANR	5981979	Identifier	o_type		5981668	1					
ANR	5981980	Identifier	clear_marks		5981668	1					
ANR	5981981	ExpressionStatement	root . ptype = ptr_struct_type	712:12:22814:22842	5981668	1	True				
ANR	5981982	AssignmentExpression	root . ptype = ptr_struct_type		5981668	0		=			
ANR	5981983	MemberAccess	root . ptype		5981668	0					
ANR	5981984	Identifier	root		5981668	0					
ANR	5981985	Identifier	ptype		5981668	1					
ANR	5981986	Identifier	ptr_struct_type		5981668	1					
ANR	5981987	ExpressionStatement	comp = pre + 1	713:12:22856:22870	5981668	2	True				
ANR	5981988	AssignmentExpression	comp = pre + 1		5981668	0		=			
ANR	5981989	Identifier	comp		5981668	0					
ANR	5981990	AdditiveExpression	pre + 1		5981668	1		+			
ANR	5981991	Identifier	pre		5981668	0					
ANR	5981992	PrimaryExpression	1		5981668	1					
ANR	5981993	IfStatement	if ( ! o_is_untraced ( pre ) )		5981668	3					
ANR	5981994	Condition	! o_is_untraced ( pre )	714:16:22888:22906	5981668	0	True				
ANR	5981995	UnaryOperationExpression	! o_is_untraced ( pre )		5981668	0					
ANR	5981996	UnaryOperator	!		5981668	0					
ANR	5981997	CallExpression	o_is_untraced ( pre )		5981668	1					
ANR	5981998	Callee	o_is_untraced		5981668	0					
ANR	5981999	Identifier	o_is_untraced		5981668	0					
ANR	5982000	ArgumentList	pre		5981668	1					
ANR	5982001	Argument	pre		5981668	0					
ANR	5982002	Identifier	pre		5981668	0					
ANR	5982003	ExpressionStatement	o_set_unmarked ( pre )	715:16:22925:22944	5981668	1	True				
ANR	5982004	CallExpression	o_set_unmarked ( pre )		5981668	0					
ANR	5982005	Callee	o_set_unmarked		5981668	0					
ANR	5982006	Identifier	o_set_unmarked		5981668	0					
ANR	5982007	ArgumentList	pre		5981668	1					
ANR	5982008	Argument	pre		5981668	0					
ANR	5982009	Identifier	pre		5981668	0					
ANR	5982010	IfStatement	if ( proc != 0 )		5981668	4					
ANR	5982011	Condition	proc != 0	716:16:22962:22970	5981668	0	True				
ANR	5982012	EqualityExpression	proc != 0		5981668	0		!=			
ANR	5982013	Identifier	proc		5981668	0					
ANR	5982014	PrimaryExpression	0		5981668	1					
ANR	5982015	ExpressionStatement	"( * proc ) ( mem , comp , size , pre -> o_type )"	717:16:22989:23027	5981668	1	True				
ANR	5982016	CallExpression	"( * proc ) ( mem , comp , size , pre -> o_type )"		5981668	0					
ANR	5982017	Callee	* proc		5981668	0					
ANR	5982018	UnaryOperationExpression	* proc		5981668	0					
ANR	5982019	UnaryOperator	*		5981668	0					
ANR	5982020	Identifier	proc		5981668	1					
ANR	5982021	ArgumentList	mem		5981668	1					
ANR	5982022	Argument	mem		5981668	0					
ANR	5982023	Identifier	mem		5981668	0					
ANR	5982024	Argument	comp		5981668	1					
ANR	5982025	Identifier	comp		5981668	0					
ANR	5982026	Argument	size		5981668	2					
ANR	5982027	Identifier	size		5981668	0					
ANR	5982028	Argument	pre -> o_type		5981668	3					
ANR	5982029	PtrMemberAccess	pre -> o_type		5981668	0					
ANR	5982030	Identifier	pre		5981668	0					
ANR	5982031	Identifier	o_type		5981668	1					
ANR	5982032	ExpressionStatement	"more |= gc_trace ( & root , pstate , pmstack )"	718:12:23041:23081	5981668	5	True				
ANR	5982033	AssignmentExpression	"more |= gc_trace ( & root , pstate , pmstack )"		5981668	0		|=			
ANR	5982034	Identifier	more		5981668	0					
ANR	5982035	CallExpression	"gc_trace ( & root , pstate , pmstack )"		5981668	1					
ANR	5982036	Callee	gc_trace		5981668	0					
ANR	5982037	Identifier	gc_trace		5981668	0					
ANR	5982038	ArgumentList	& root		5981668	1					
ANR	5982039	Argument	& root		5981668	0					
ANR	5982040	UnaryOperationExpression	& root		5981668	0					
ANR	5982041	UnaryOperator	&		5981668	0					
ANR	5982042	Identifier	root		5981668	1					
ANR	5982043	Argument	pstate		5981668	1					
ANR	5982044	Identifier	pstate		5981668	0					
ANR	5982045	Argument	pmstack		5981668	2					
ANR	5982046	Identifier	pmstack		5981668	0					
ANR	5982047	Statement	END_OBJECTS_SCAN	721:4:23103:23118	5981668	17	True				
ANR	5982048	ReturnStatement	return more ;	722:8:23128:23139	5981668	18	True				
ANR	5982049	Identifier	more		5981668	0					
ANR	5982050	ReturnType	static int		5981668	1					
ANR	5982051	Identifier	gc_rescan_clump		5981668	2					
ANR	5982052	ParameterList	"clump_t * cp , gc_state_t * pstate , gc_mark_stack * pmstack"		5981668	3					
ANR	5982053	Parameter	clump_t * cp	662:16:21076:21087	5981668	0	True				
ANR	5982054	ParameterType	clump_t *		5981668	0					
ANR	5982055	Identifier	cp		5981668	1					
ANR	5982056	Parameter	gc_state_t * pstate	662:30:21090:21108	5981668	1	True				
ANR	5982057	ParameterType	gc_state_t *		5981668	0					
ANR	5982058	Identifier	pstate		5981668	1					
ANR	5982059	Parameter	gc_mark_stack * pmstack	662:51:21111:21133	5981668	2	True				
ANR	5982060	ParameterType	gc_mark_stack *		5981668	0					
ANR	5982061	Identifier	pmstack		5981668	1					
ANR	5982062	CFGEntryNode	ENTRY		5981668		True				
ANR	5982063	CFGExitNode	EXIT		5981668		True				
ANR	5982064	Symbol	& comp		5981668						
ANR	5982065	Symbol	sbot		5981668						
ANR	5982066	Symbol	struct_proc_clear_marks		5981668						
ANR	5982067	Symbol	r_is_packed		5981668						
ANR	5982068	Symbol	ptr_struct_type		5981668						
ANR	5982069	Symbol	cp -> cend		5981668						
ANR	5982070	Symbol	pstate		5981668						
ANR	5982071	Symbol	cp -> rescan_top		5981668						
ANR	5982072	Symbol	& root		5981668						
ANR	5982073	Symbol	* pre		5981668						
ANR	5982074	Symbol	pre -> o_type -> clear_marks		5981668						
ANR	5982075	Symbol	mem		5981668						
ANR	5982076	Symbol	o_is_untraced		5981668						
ANR	5982077	Symbol	r_has_attr		5981668						
ANR	5982078	Symbol	gcst_get_memory_ptr		5981668						
ANR	5982079	Symbol	pre -> o_type		5981668						
ANR	5982080	Symbol	r_has_pmark		5981668						
ANR	5982081	Symbol	root		5981668						
ANR	5982082	Symbol	pref		5981668						
ANR	5982083	Symbol	end		5981668						
ANR	5982084	Symbol	ptr_ref_type		5981668						
ANR	5982085	Symbol	comp		5981668						
ANR	5982086	Symbol	pre		5981668						
ANR	5982087	Symbol	proc		5981668						
ANR	5982088	Symbol	* pre -> o_type		5981668						
ANR	5982089	Symbol	root . ptype		5981668						
ANR	5982090	Symbol	more		5981668						
ANR	5982091	Symbol	packed_per_ref		5981668						
ANR	5982092	Symbol	cp -> cbase		5981668						
ANR	5982093	Symbol	cp		5981668						
ANR	5982094	Symbol	pmstack		5981668						
ANR	5982095	Symbol	* proc		5981668						
ANR	5982096	Symbol	* cp		5981668						
ANR	5982097	Symbol	stop		5981668						
ANR	5982098	Symbol	size		5981668						
ANR	5982099	Symbol	gc_trace		5981668						
ANR	5982100	Symbol	root . p		5981668						
ANR	5982101	Symbol	* * pre		5981668						
ANR	5982102	Symbol	& st_refs		5981668						
ANR	5982103	Symbol	l_mark		5981668						
ANR	5982104	Symbol	o_is_unmarked		5981668						
ANR	5982105	Symbol	cp -> rescan_bot		5981668						
ANR	5982106	Symbol	rp		5981668						
ANR	5982107	Function	gc_trace_clump	728:0:23291:24985							
ANR	5982108	FunctionDef	"gc_trace_clump (const gs_memory_t * mem , clump_t * cp , gc_state_t * pstate , gc_mark_stack * pmstack)"		5982107	0					
ANR	5982109	CompoundStatement		730:0:23401:24985	5982107	0					
ANR	5982110	IdentifierDeclStatement	gs_gc_root_t root ;	731:4:23407:23424	5982107	0	True				
ANR	5982111	IdentifierDecl	root		5982107	0					
ANR	5982112	IdentifierDeclType	gs_gc_root_t		5982107	0					
ANR	5982113	Identifier	root		5982107	1					
ANR	5982114	IdentifierDeclStatement	void * comp ;	732:4:23430:23440	5982107	1	True				
ANR	5982115	IdentifierDecl	* comp		5982107	0					
ANR	5982116	IdentifierDeclType	void *		5982107	0					
ANR	5982117	Identifier	comp		5982107	1					
ANR	5982118	IdentifierDeclStatement	int more = 0 ;	733:4:23446:23458	5982107	2	True				
ANR	5982119	IdentifierDecl	more = 0		5982107	0					
ANR	5982120	IdentifierDeclType	int		5982107	0					
ANR	5982121	Identifier	more		5982107	1					
ANR	5982122	AssignmentExpression	more = 0		5982107	2		=			
ANR	5982123	Identifier	more		5982107	0					
ANR	5982124	PrimaryExpression	0		5982107	1					
ANR	5982125	IdentifierDeclStatement	int min_trace = pstate -> min_collect ;	734:4:23464:23499	5982107	3	True				
ANR	5982126	IdentifierDecl	min_trace = pstate -> min_collect		5982107	0					
ANR	5982127	IdentifierDeclType	int		5982107	0					
ANR	5982128	Identifier	min_trace		5982107	1					
ANR	5982129	AssignmentExpression	min_trace = pstate -> min_collect		5982107	2		=			
ANR	5982130	Identifier	min_trace		5982107	0					
ANR	5982131	PtrMemberAccess	pstate -> min_collect		5982107	1					
ANR	5982132	Identifier	pstate		5982107	0					
ANR	5982133	Identifier	min_collect		5982107	1					
ANR	5982134	ExpressionStatement	root . p = & comp	736:4:23506:23520	5982107	4	True				
ANR	5982135	AssignmentExpression	root . p = & comp		5982107	0		=			
ANR	5982136	MemberAccess	root . p		5982107	0					
ANR	5982137	Identifier	root		5982107	0					
ANR	5982138	Identifier	p		5982107	1					
ANR	5982139	UnaryOperationExpression	& comp		5982107	1					
ANR	5982140	UnaryOperator	&		5982107	0					
ANR	5982141	Identifier	comp		5982107	1					
ANR	5982142	ExpressionStatement	"if_debug_clump ( '6' , mem , ""[6]marking from clump"" , cp )"	737:4:23526:23579	5982107	5	True				
ANR	5982143	CallExpression	"if_debug_clump ( '6' , mem , ""[6]marking from clump"" , cp )"		5982107	0					
ANR	5982144	Callee	if_debug_clump		5982107	0					
ANR	5982145	Identifier	if_debug_clump		5982107	0					
ANR	5982146	ArgumentList	'6'		5982107	1					
ANR	5982147	Argument	'6'		5982107	0					
ANR	5982148	PrimaryExpression	'6'		5982107	0					
ANR	5982149	Argument	mem		5982107	1					
ANR	5982150	Identifier	mem		5982107	0					
ANR	5982151	Argument	"""[6]marking from clump"""		5982107	2					
ANR	5982152	PrimaryExpression	"""[6]marking from clump"""		5982107	0					
ANR	5982153	Argument	cp		5982107	3					
ANR	5982154	Identifier	cp		5982107	0					
ANR	5982155	Statement	SCAN_CLUMP_OBJECTS	738:4:23585:23602	5982107	6	True				
ANR	5982156	Statement	(	738:22:23603:23603	5982107	7	True				
ANR	5982157	Statement	cp	738:23:23604:23605	5982107	8	True				
ANR	5982158	Statement	)	738:25:23606:23606	5982107	9	True				
ANR	5982159	Statement	DO_ALL	739:8:23616:23621	5982107	10	True				
ANR	5982160	CompoundStatement		11:4:225:225	5982107	11					
ANR	5982161	ExpressionStatement	"if_debug2m ( '7' , mem , "" [7]scanning/marking 0x%lx(%lu)\\n"" , ( ulong ) pre , ( ulong ) size )"	741:8:23637:23740	5982107	0	True				
ANR	5982162	CallExpression	"if_debug2m ( '7' , mem , "" [7]scanning/marking 0x%lx(%lu)\\n"" , ( ulong ) pre , ( ulong ) size )"		5982107	0					
ANR	5982163	Callee	if_debug2m		5982107	0					
ANR	5982164	Identifier	if_debug2m		5982107	0					
ANR	5982165	ArgumentList	'7'		5982107	1					
ANR	5982166	Argument	'7'		5982107	0					
ANR	5982167	PrimaryExpression	'7'		5982107	0					
ANR	5982168	Argument	mem		5982107	1					
ANR	5982169	Identifier	mem		5982107	0					
ANR	5982170	Argument	""" [7]scanning/marking 0x%lx(%lu)\\n"""		5982107	2					
ANR	5982171	PrimaryExpression	""" [7]scanning/marking 0x%lx(%lu)\\n"""		5982107	0					
ANR	5982172	Argument	( ulong ) pre		5982107	3					
ANR	5982173	CastExpression	( ulong ) pre		5982107	0					
ANR	5982174	CastTarget	ulong		5982107	0					
ANR	5982175	Identifier	pre		5982107	1					
ANR	5982176	Argument	( ulong ) size		5982107	4					
ANR	5982177	CastExpression	( ulong ) size		5982107	0					
ANR	5982178	CastTarget	ulong		5982107	0					
ANR	5982179	Identifier	size		5982107	1					
ANR	5982180	IfStatement	if ( pre -> o_type == & st_refs )		5982107	1					
ANR	5982181	Condition	pre -> o_type == & st_refs	743:12:23754:23776	5982107	0	True				
ANR	5982182	EqualityExpression	pre -> o_type == & st_refs		5982107	0		==			
ANR	5982183	PtrMemberAccess	pre -> o_type		5982107	0					
ANR	5982184	Identifier	pre		5982107	0					
ANR	5982185	Identifier	o_type		5982107	1					
ANR	5982186	UnaryOperationExpression	& st_refs		5982107	1					
ANR	5982187	UnaryOperator	&		5982107	0					
ANR	5982188	Identifier	st_refs		5982107	1					
ANR	5982189	CompoundStatement		16:12:446:475	5982107	1					
ANR	5982190	IdentifierDeclStatement	ref_packed * rp = ( ref_packed * ) ( pre + 1 ) ;	744:12:23793:23834	5982107	0	True				
ANR	5982191	IdentifierDecl	* rp = ( ref_packed * ) ( pre + 1 )		5982107	0					
ANR	5982192	IdentifierDeclType	ref_packed *		5982107	0					
ANR	5982193	Identifier	rp		5982107	1					
ANR	5982194	AssignmentExpression	* rp = ( ref_packed * ) ( pre + 1 )		5982107	2		=			
ANR	5982195	Identifier	rp		5982107	0					
ANR	5982196	CastExpression	( ref_packed * ) ( pre + 1 )		5982107	1					
ANR	5982197	CastTarget	ref_packed *		5982107	0					
ANR	5982198	AdditiveExpression	pre + 1		5982107	1		+			
ANR	5982199	Identifier	pre		5982107	0					
ANR	5982200	PrimaryExpression	1		5982107	1					
ANR	5982201	IdentifierDeclStatement	char * end = ( char * ) rp + size ;	745:12:23848:23877	5982107	1	True				
ANR	5982202	IdentifierDecl	* end = ( char * ) rp + size		5982107	0					
ANR	5982203	IdentifierDeclType	char *		5982107	0					
ANR	5982204	Identifier	end		5982107	1					
ANR	5982205	AssignmentExpression	* end = ( char * ) rp + size		5982107	2		=			
ANR	5982206	Identifier	end		5982107	0					
ANR	5982207	AdditiveExpression	( char * ) rp + size		5982107	1		+			
ANR	5982208	CastExpression	( char * ) rp		5982107	0					
ANR	5982209	CastTarget	char *		5982107	0					
ANR	5982210	Identifier	rp		5982107	1					
ANR	5982211	Identifier	size		5982107	1					
ANR	5982212	ExpressionStatement	root . ptype = ptr_ref_type	747:12:23892:23917	5982107	2	True				
ANR	5982213	AssignmentExpression	root . ptype = ptr_ref_type		5982107	0		=			
ANR	5982214	MemberAccess	root . ptype		5982107	0					
ANR	5982215	Identifier	root		5982107	0					
ANR	5982216	Identifier	ptype		5982107	1					
ANR	5982217	Identifier	ptr_ref_type		5982107	1					
ANR	5982218	WhileStatement	while ( ( char * ) rp < end )		5982107	3					
ANR	5982219	Condition	( char * ) rp < end	748:19:23938:23953	5982107	0	True				
ANR	5982220	RelationalExpression	( char * ) rp < end		5982107	0		<			
ANR	5982221	CastExpression	( char * ) rp		5982107	0					
ANR	5982222	CastTarget	char *		5982107	0					
ANR	5982223	Identifier	rp		5982107	1					
ANR	5982224	Identifier	end		5982107	1					
ANR	5982225	CompoundStatement		19:37:554:554	5982107	1					
ANR	5982226	ExpressionStatement	comp = rp	749:16:23974:23983	5982107	0	True				
ANR	5982227	AssignmentExpression	comp = rp		5982107	0		=			
ANR	5982228	Identifier	comp		5982107	0					
ANR	5982229	Identifier	rp		5982107	1					
ANR	5982230	IfStatement	if ( r_is_packed ( rp ) )		5982107	1					
ANR	5982231	Condition	r_is_packed ( rp )	750:20:24005:24019	5982107	0	True				
ANR	5982232	CallExpression	r_is_packed ( rp )		5982107	0					
ANR	5982233	Callee	r_is_packed		5982107	0					
ANR	5982234	Identifier	r_is_packed		5982107	0					
ANR	5982235	ArgumentList	rp		5982107	1					
ANR	5982236	Argument	rp		5982107	0					
ANR	5982237	Identifier	rp		5982107	0					
ANR	5982238	CompoundStatement		21:37:620:620	5982107	1					
ANR	5982239	ExpressionStatement	rp ++	751:20:24079:24083	5982107	0	True				
ANR	5982240	PostIncDecOperationExpression	rp ++		5982107	0					
ANR	5982241	Identifier	rp		5982107	0					
ANR	5982242	IncDec	++		5982107	1					
ANR	5982243	ElseStatement	else		5982107	0					
ANR	5982244	CompoundStatement		23:23:706:706	5982107	0					
ANR	5982245	Statement	ref	753:20:24130:24132	5982107	0	True				
ANR	5982246	Statement	*	753:24:24134:24134	5982107	1	True				
ANR	5982247	Statement	const	753:25:24135:24139	5982107	2	True				
ANR	5982248	ExpressionStatement	pref = ( ref * ) rp	753:31:24141:24157	5982107	3	True				
ANR	5982249	AssignmentExpression	pref = ( ref * ) rp		5982107	0		=			
ANR	5982250	Identifier	pref		5982107	0					
ANR	5982251	CastExpression	( ref * ) rp		5982107	1					
ANR	5982252	CastTarget	ref *		5982107	0					
ANR	5982253	Identifier	rp		5982107	1					
ANR	5982254	IfStatement	if ( r_space ( pref ) >= min_trace )		5982107	4					
ANR	5982255	Condition	r_space ( pref ) >= min_trace	755:24:24184:24209	5982107	0	True				
ANR	5982256	RelationalExpression	r_space ( pref ) >= min_trace		5982107	0		>=			
ANR	5982257	CallExpression	r_space ( pref )		5982107	0					
ANR	5982258	Callee	r_space		5982107	0					
ANR	5982259	Identifier	r_space		5982107	0					
ANR	5982260	ArgumentList	pref		5982107	1					
ANR	5982261	Argument	pref		5982107	0					
ANR	5982262	Identifier	pref		5982107	0					
ANR	5982263	Identifier	min_trace		5982107	1					
ANR	5982264	CompoundStatement		26:52:810:810	5982107	1					
ANR	5982265	ExpressionStatement	"r_clear_attrs ( pref , l_mark )"	756:24:24238:24265	5982107	0	True				
ANR	5982266	CallExpression	"r_clear_attrs ( pref , l_mark )"		5982107	0					
ANR	5982267	Callee	r_clear_attrs		5982107	0					
ANR	5982268	Identifier	r_clear_attrs		5982107	0					
ANR	5982269	ArgumentList	pref		5982107	1					
ANR	5982270	Argument	pref		5982107	0					
ANR	5982271	Identifier	pref		5982107	0					
ANR	5982272	Argument	l_mark		5982107	1					
ANR	5982273	Identifier	l_mark		5982107	0					
ANR	5982274	ExpressionStatement	"more |= gc_trace ( & root , pstate , pmstack )"	757:24:24291:24331	5982107	1	True				
ANR	5982275	AssignmentExpression	"more |= gc_trace ( & root , pstate , pmstack )"		5982107	0		|=			
ANR	5982276	Identifier	more		5982107	0					
ANR	5982277	CallExpression	"gc_trace ( & root , pstate , pmstack )"		5982107	1					
ANR	5982278	Callee	gc_trace		5982107	0					
ANR	5982279	Identifier	gc_trace		5982107	0					
ANR	5982280	ArgumentList	& root		5982107	1					
ANR	5982281	Argument	& root		5982107	0					
ANR	5982282	UnaryOperationExpression	& root		5982107	0					
ANR	5982283	UnaryOperator	&		5982107	0					
ANR	5982284	Identifier	root		5982107	1					
ANR	5982285	Argument	pstate		5982107	1					
ANR	5982286	Identifier	pstate		5982107	0					
ANR	5982287	Argument	pmstack		5982107	2					
ANR	5982288	Identifier	pmstack		5982107	0					
ANR	5982289	ExpressionStatement	rp += packed_per_ref	759:20:24375:24395	5982107	5	True				
ANR	5982290	AssignmentExpression	rp += packed_per_ref		5982107	0		+=			
ANR	5982291	Identifier	rp		5982107	0					
ANR	5982292	Identifier	packed_per_ref		5982107	1					
ANR	5982293	ElseStatement	else		5982107	0					
ANR	5982294	IfStatement	if ( ! o_is_unmarked ( pre ) )		5982107	0					
ANR	5982295	Condition	! o_is_unmarked ( pre )	762:19:24448:24466	5982107	0	True				
ANR	5982296	UnaryOperationExpression	! o_is_unmarked ( pre )		5982107	0					
ANR	5982297	UnaryOperator	!		5982107	0					
ANR	5982298	CallExpression	o_is_unmarked ( pre )		5982107	1					
ANR	5982299	Callee	o_is_unmarked		5982107	0					
ANR	5982300	Identifier	o_is_unmarked		5982107	0					
ANR	5982301	ArgumentList	pre		5982107	1					
ANR	5982302	Argument	pre		5982107	0					
ANR	5982303	Identifier	pre		5982107	0					
ANR	5982304	CompoundStatement		33:40:1067:1067	5982107	1					
ANR	5982305	IfStatement	if ( ! o_is_untraced ( pre ) )		5982107	0					
ANR	5982306	Condition	! o_is_untraced ( pre )	763:16:24487:24505	5982107	0	True				
ANR	5982307	UnaryOperationExpression	! o_is_untraced ( pre )		5982107	0					
ANR	5982308	UnaryOperator	!		5982107	0					
ANR	5982309	CallExpression	o_is_untraced ( pre )		5982107	1					
ANR	5982310	Callee	o_is_untraced		5982107	0					
ANR	5982311	Identifier	o_is_untraced		5982107	0					
ANR	5982312	ArgumentList	pre		5982107	1					
ANR	5982313	Argument	pre		5982107	0					
ANR	5982314	Identifier	pre		5982107	0					
ANR	5982315	ExpressionStatement	o_set_unmarked ( pre )	764:16:24524:24543	5982107	1	True				
ANR	5982316	CallExpression	o_set_unmarked ( pre )		5982107	0					
ANR	5982317	Callee	o_set_unmarked		5982107	0					
ANR	5982318	Identifier	o_set_unmarked		5982107	0					
ANR	5982319	ArgumentList	pre		5982107	1					
ANR	5982320	Argument	pre		5982107	0					
ANR	5982321	Identifier	pre		5982107	0					
ANR	5982322	IfStatement	if ( pre -> o_type != & st_free )		5982107	1					
ANR	5982323	Condition	pre -> o_type != & st_free	765:16:24561:24583	5982107	0	True				
ANR	5982324	EqualityExpression	pre -> o_type != & st_free		5982107	0		!=			
ANR	5982325	PtrMemberAccess	pre -> o_type		5982107	0					
ANR	5982326	Identifier	pre		5982107	0					
ANR	5982327	Identifier	o_type		5982107	1					
ANR	5982328	UnaryOperationExpression	& st_free		5982107	1					
ANR	5982329	UnaryOperator	&		5982107	0					
ANR	5982330	Identifier	st_free		5982107	1					
ANR	5982331	CompoundStatement		36:41:1184:1184	5982107	1					
ANR	5982332	ExpressionStatement	struct_proc_clear_marks ( ( * proc ) ) = pre -> o_type -> clear_marks	766:16:24604:24683	5982107	0	True				
ANR	5982333	AssignmentExpression	struct_proc_clear_marks ( ( * proc ) ) = pre -> o_type -> clear_marks		5982107	0		=			
ANR	5982334	CallExpression	struct_proc_clear_marks ( ( * proc ) )		5982107	0					
ANR	5982335	Callee	struct_proc_clear_marks		5982107	0					
ANR	5982336	Identifier	struct_proc_clear_marks		5982107	0					
ANR	5982337	ArgumentList	* proc		5982107	1					
ANR	5982338	Argument	* proc		5982107	0					
ANR	5982339	UnaryOperationExpression	* proc		5982107	0					
ANR	5982340	UnaryOperator	*		5982107	0					
ANR	5982341	Identifier	proc		5982107	1					
ANR	5982342	PtrMemberAccess	pre -> o_type -> clear_marks		5982107	1					
ANR	5982343	PtrMemberAccess	pre -> o_type		5982107	0					
ANR	5982344	Identifier	pre		5982107	0					
ANR	5982345	Identifier	o_type		5982107	1					
ANR	5982346	Identifier	clear_marks		5982107	1					
ANR	5982347	ExpressionStatement	root . ptype = ptr_struct_type	769:16:24702:24730	5982107	1	True				
ANR	5982348	AssignmentExpression	root . ptype = ptr_struct_type		5982107	0		=			
ANR	5982349	MemberAccess	root . ptype		5982107	0					
ANR	5982350	Identifier	root		5982107	0					
ANR	5982351	Identifier	ptype		5982107	1					
ANR	5982352	Identifier	ptr_struct_type		5982107	1					
ANR	5982353	ExpressionStatement	comp = pre + 1	770:16:24748:24762	5982107	2	True				
ANR	5982354	AssignmentExpression	comp = pre + 1		5982107	0		=			
ANR	5982355	Identifier	comp		5982107	0					
ANR	5982356	AdditiveExpression	pre + 1		5982107	1		+			
ANR	5982357	Identifier	pre		5982107	0					
ANR	5982358	PrimaryExpression	1		5982107	1					
ANR	5982359	IfStatement	if ( proc != 0 )		5982107	3					
ANR	5982360	Condition	proc != 0	771:20:24784:24792	5982107	0	True				
ANR	5982361	EqualityExpression	proc != 0		5982107	0		!=			
ANR	5982362	Identifier	proc		5982107	0					
ANR	5982363	PrimaryExpression	0		5982107	1					
ANR	5982364	ExpressionStatement	"( * proc ) ( mem , comp , size , pre -> o_type )"	772:20:24815:24853	5982107	1	True				
ANR	5982365	CallExpression	"( * proc ) ( mem , comp , size , pre -> o_type )"		5982107	0					
ANR	5982366	Callee	* proc		5982107	0					
ANR	5982367	UnaryOperationExpression	* proc		5982107	0					
ANR	5982368	UnaryOperator	*		5982107	0					
ANR	5982369	Identifier	proc		5982107	1					
ANR	5982370	ArgumentList	mem		5982107	1					
ANR	5982371	Argument	mem		5982107	0					
ANR	5982372	Identifier	mem		5982107	0					
ANR	5982373	Argument	comp		5982107	1					
ANR	5982374	Identifier	comp		5982107	0					
ANR	5982375	Argument	size		5982107	2					
ANR	5982376	Identifier	size		5982107	0					
ANR	5982377	Argument	pre -> o_type		5982107	3					
ANR	5982378	PtrMemberAccess	pre -> o_type		5982107	0					
ANR	5982379	Identifier	pre		5982107	0					
ANR	5982380	Identifier	o_type		5982107	1					
ANR	5982381	ExpressionStatement	"more |= gc_trace ( & root , pstate , pmstack )"	773:16:24871:24911	5982107	4	True				
ANR	5982382	AssignmentExpression	"more |= gc_trace ( & root , pstate , pmstack )"		5982107	0		|=			
ANR	5982383	Identifier	more		5982107	0					
ANR	5982384	CallExpression	"gc_trace ( & root , pstate , pmstack )"		5982107	1					
ANR	5982385	Callee	gc_trace		5982107	0					
ANR	5982386	Identifier	gc_trace		5982107	0					
ANR	5982387	ArgumentList	& root		5982107	1					
ANR	5982388	Argument	& root		5982107	0					
ANR	5982389	UnaryOperationExpression	& root		5982107	0					
ANR	5982390	UnaryOperator	&		5982107	0					
ANR	5982391	Identifier	root		5982107	1					
ANR	5982392	Argument	pstate		5982107	1					
ANR	5982393	Identifier	pstate		5982107	0					
ANR	5982394	Argument	pmstack		5982107	2					
ANR	5982395	Identifier	pmstack		5982107	0					
ANR	5982396	Statement	END_OBJECTS_SCAN	777:4:24947:24962	5982107	12	True				
ANR	5982397	ReturnStatement	return more ;	778:8:24972:24983	5982107	13	True				
ANR	5982398	Identifier	more		5982107	0					
ANR	5982399	ReturnType	static int		5982107	1					
ANR	5982400	Identifier	gc_trace_clump		5982107	2					
ANR	5982401	ParameterList	"const gs_memory_t * mem , clump_t * cp , gc_state_t * pstate , gc_mark_stack * pmstack"		5982107	3					
ANR	5982402	Parameter	const gs_memory_t * mem	729:15:23317:23338	5982107	0	True				
ANR	5982403	ParameterType	const gs_memory_t *		5982107	0					
ANR	5982404	Identifier	mem		5982107	1					
ANR	5982405	Parameter	clump_t * cp	729:39:23341:23352	5982107	1	True				
ANR	5982406	ParameterType	clump_t *		5982107	0					
ANR	5982407	Identifier	cp		5982107	1					
ANR	5982408	Parameter	gc_state_t * pstate	729:53:23355:23373	5982107	2	True				
ANR	5982409	ParameterType	gc_state_t *		5982107	0					
ANR	5982410	Identifier	pstate		5982107	1					
ANR	5982411	Parameter	gc_mark_stack * pmstack	729:74:23376:23398	5982107	3	True				
ANR	5982412	ParameterType	gc_mark_stack *		5982107	0					
ANR	5982413	Identifier	pmstack		5982107	1					
ANR	5982414	CFGEntryNode	ENTRY		5982107		True				
ANR	5982415	CFGExitNode	EXIT		5982107		True				
ANR	5982416	Symbol	& comp		5982107						
ANR	5982417	Symbol	struct_proc_clear_marks		5982107						
ANR	5982418	Symbol	r_is_packed		5982107						
ANR	5982419	Symbol	ptr_struct_type		5982107						
ANR	5982420	Symbol	& st_free		5982107						
ANR	5982421	Symbol	pstate		5982107						
ANR	5982422	Symbol	& root		5982107						
ANR	5982423	Symbol	* pre		5982107						
ANR	5982424	Symbol	pre -> o_type -> clear_marks		5982107						
ANR	5982425	Symbol	r_space		5982107						
ANR	5982426	Symbol	mem		5982107						
ANR	5982427	Symbol	o_is_untraced		5982107						
ANR	5982428	Symbol	pre -> o_type		5982107						
ANR	5982429	Symbol	root		5982107						
ANR	5982430	Symbol	pref		5982107						
ANR	5982431	Symbol	end		5982107						
ANR	5982432	Symbol	ptr_ref_type		5982107						
ANR	5982433	Symbol	comp		5982107						
ANR	5982434	Symbol	pre		5982107						
ANR	5982435	Symbol	proc		5982107						
ANR	5982436	Symbol	* pre -> o_type		5982107						
ANR	5982437	Symbol	root . ptype		5982107						
ANR	5982438	Symbol	more		5982107						
ANR	5982439	Symbol	packed_per_ref		5982107						
ANR	5982440	Symbol	pstate -> min_collect		5982107						
ANR	5982441	Symbol	cp		5982107						
ANR	5982442	Symbol	pmstack		5982107						
ANR	5982443	Symbol	* proc		5982107						
ANR	5982444	Symbol	size		5982107						
ANR	5982445	Symbol	gc_trace		5982107						
ANR	5982446	Symbol	* pstate		5982107						
ANR	5982447	Symbol	root . p		5982107						
ANR	5982448	Symbol	* * pre		5982107						
ANR	5982449	Symbol	min_trace		5982107						
ANR	5982450	Symbol	& st_refs		5982107						
ANR	5982451	Symbol	l_mark		5982107						
ANR	5982452	Symbol	o_is_unmarked		5982107						
ANR	5982453	Symbol	rp		5982107						
ANR	5982454	DeclStmt									
ANR	5982455	Decl							int	"int ( gc_mark_stack * , gc_state_t * )"	gc_extend_stack
ANR	5982456	Function	gc_trace	786:0:25265:33940							
ANR	5982457	FunctionDef	"gc_trace (gs_gc_root_t * rp , gc_state_t * pstate , gc_mark_stack * pmstack)"		5982456	0					
ANR	5982458	CompoundStatement		788:0:25350:33940	5982456	0					
ANR	5982459	IdentifierDeclStatement	int min_trace = pstate -> min_collect ;	789:4:25356:25391	5982456	0	True				
ANR	5982460	IdentifierDecl	min_trace = pstate -> min_collect		5982456	0					
ANR	5982461	IdentifierDeclType	int		5982456	0					
ANR	5982462	Identifier	min_trace		5982456	1					
ANR	5982463	AssignmentExpression	min_trace = pstate -> min_collect		5982456	2		=			
ANR	5982464	Identifier	min_trace		5982456	0					
ANR	5982465	PtrMemberAccess	pstate -> min_collect		5982456	1					
ANR	5982466	Identifier	pstate		5982456	0					
ANR	5982467	Identifier	min_collect		5982456	1					
ANR	5982468	IdentifierDeclStatement	gc_mark_stack * pms = pmstack ;	790:4:25397:25425	5982456	1	True				
ANR	5982469	IdentifierDecl	* pms = pmstack		5982456	0					
ANR	5982470	IdentifierDeclType	gc_mark_stack *		5982456	0					
ANR	5982471	Identifier	pms		5982456	1					
ANR	5982472	AssignmentExpression	* pms = pmstack		5982456	2		=			
ANR	5982473	Identifier	pmstack		5982456	0					
ANR	5982474	Identifier	pmstack		5982456	1					
ANR	5982475	IdentifierDeclStatement	ms_entry * sp = pms -> entries + 1 ;	791:4:25431:25462	5982456	2	True				
ANR	5982476	IdentifierDecl	* sp = pms -> entries + 1		5982456	0					
ANR	5982477	IdentifierDeclType	ms_entry *		5982456	0					
ANR	5982478	Identifier	sp		5982456	1					
ANR	5982479	AssignmentExpression	* sp = pms -> entries + 1		5982456	2		=			
ANR	5982480	Identifier	sp		5982456	0					
ANR	5982481	AdditiveExpression	pms -> entries + 1		5982456	1		+			
ANR	5982482	PtrMemberAccess	pms -> entries		5982456	0					
ANR	5982483	Identifier	pms		5982456	0					
ANR	5982484	Identifier	entries		5982456	1					
ANR	5982485	PrimaryExpression	1		5982456	1					
ANR	5982486	IdentifierDeclStatement	ms_entry * stop = sp + pms -> count - 2 ;	795:4:25575:25611	5982456	3	True				
ANR	5982487	IdentifierDecl	* stop = sp + pms -> count - 2		5982456	0					
ANR	5982488	IdentifierDeclType	ms_entry *		5982456	0					
ANR	5982489	Identifier	stop		5982456	1					
ANR	5982490	AssignmentExpression	* stop = sp + pms -> count - 2		5982456	2		=			
ANR	5982491	Identifier	stop		5982456	0					
ANR	5982492	AdditiveExpression	sp + pms -> count - 2		5982456	1		+			
ANR	5982493	Identifier	sp		5982456	0					
ANR	5982494	AdditiveExpression	pms -> count - 2		5982456	1		-			
ANR	5982495	PtrMemberAccess	pms -> count		5982456	0					
ANR	5982496	Identifier	pms		5982456	0					
ANR	5982497	Identifier	count		5982456	1					
ANR	5982498	PrimaryExpression	2		5982456	1					
ANR	5982499	Statement	int	796:4:25617:25619	5982456	4	True				
ANR	5982500	Statement	new	796:8:25621:25623	5982456	5	True				
ANR	5982501	Statement	=	796:12:25625:25625	5982456	6	True				
ANR	5982502	ExpressionStatement	0	796:14:25627:25628	5982456	7	True				
ANR	5982503	PrimaryExpression	0		5982456	0					
ANR	5982504	IdentifierDeclStatement	enum_ptr_t nep ;	797:4:25634:25648	5982456	8	True				
ANR	5982505	IdentifierDecl	nep		5982456	0					
ANR	5982506	IdentifierDeclType	enum_ptr_t		5982456	0					
ANR	5982507	Identifier	nep		5982456	1					
ANR	5982508	IdentifierDeclStatement	void * nptr ;	798:4:25654:25664	5982456	9	True				
ANR	5982509	IdentifierDecl	* nptr		5982456	0					
ANR	5982510	IdentifierDeclType	void *		5982456	0					
ANR	5982511	Identifier	nptr		5982456	1					
ANR	5982512	IdentifierDeclStatement	name_table * nt = pstate -> ntable ;	799:4:25670:25701	5982456	10	True				
ANR	5982513	IdentifierDecl	* nt = pstate -> ntable		5982456	0					
ANR	5982514	IdentifierDeclType	name_table *		5982456	0					
ANR	5982515	Identifier	nt		5982456	1					
ANR	5982516	AssignmentExpression	* nt = pstate -> ntable		5982456	2		=			
ANR	5982517	Identifier	nt		5982456	0					
ANR	5982518	PtrMemberAccess	pstate -> ntable		5982456	1					
ANR	5982519	Identifier	pstate		5982456	0					
ANR	5982520	Identifier	ntable		5982456	1					
ANR	5982521	Statement	define	801:1:25705:25710	5982456	11	True				
ANR	5982522	Statement	mark_name	801:8:25712:25720	5982456	12	True				
ANR	5982523	Statement	(	801:17:25721:25721	5982456	13	True				
ANR	5982524	Statement	nidx	801:18:25722:25725	5982456	14	True				
ANR	5982525	Statement	)	801:22:25726:25726	5982456	15	True				
ANR	5982526	Statement	BEGIN	802:2:25731:25735	5982456	16	True				
ANR	5982527	IfStatement	"if ( names_mark_index ( nt , nidx ) )"		5982456	17					
ANR	5982528	Condition	"names_mark_index ( nt , nidx )"	803:8:25746:25771	5982456	0	True				
ANR	5982529	CallExpression	"names_mark_index ( nt , nidx )"		5982456	0					
ANR	5982530	Callee	names_mark_index		5982456	0					
ANR	5982531	Identifier	names_mark_index		5982456	0					
ANR	5982532	ArgumentList	nt		5982456	1					
ANR	5982533	Argument	nt		5982456	0					
ANR	5982534	Identifier	nt		5982456	0					
ANR	5982535	Argument	nidx		5982456	1					
ANR	5982536	Identifier	nidx		5982456	0					
ANR	5982537	CompoundStatement		16:36:423:423	5982456	1					
ANR	5982538	Statement	new	804:8:25785:25787	5982456	0	True				
ANR	5982539	Statement	|=	804:12:25789:25790	5982456	1	True				
ANR	5982540	ExpressionStatement	1	804:15:25792:25793	5982456	2	True				
ANR	5982541	PrimaryExpression	1		5982456	0					
ANR	5982542	ExpressionStatement	"if_debug2m ( '8' , gcst_get_memory_ptr ( pstate ) , ""  [8]marked name 0x%lx(%u)\\n"" , ( ulong ) names_index_ptr ( nt , nidx ) , nidx )"	805:8:25804:25939	5982456	3	True				
ANR	5982543	CallExpression	"if_debug2m ( '8' , gcst_get_memory_ptr ( pstate ) , ""  [8]marked name 0x%lx(%u)\\n"" , ( ulong ) names_index_ptr ( nt , nidx ) , nidx )"		5982456	0					
ANR	5982544	Callee	if_debug2m		5982456	0					
ANR	5982545	Identifier	if_debug2m		5982456	0					
ANR	5982546	ArgumentList	'8'		5982456	1					
ANR	5982547	Argument	'8'		5982456	0					
ANR	5982548	PrimaryExpression	'8'		5982456	0					
ANR	5982549	Argument	gcst_get_memory_ptr ( pstate )		5982456	1					
ANR	5982550	CallExpression	gcst_get_memory_ptr ( pstate )		5982456	0					
ANR	5982551	Callee	gcst_get_memory_ptr		5982456	0					
ANR	5982552	Identifier	gcst_get_memory_ptr		5982456	0					
ANR	5982553	ArgumentList	pstate		5982456	1					
ANR	5982554	Argument	pstate		5982456	0					
ANR	5982555	Identifier	pstate		5982456	0					
ANR	5982556	Argument	"""  [8]marked name 0x%lx(%u)\\n"""		5982456	2					
ANR	5982557	PrimaryExpression	"""  [8]marked name 0x%lx(%u)\\n"""		5982456	0					
ANR	5982558	Argument	"( ulong ) names_index_ptr ( nt , nidx )"		5982456	3					
ANR	5982559	CastExpression	"( ulong ) names_index_ptr ( nt , nidx )"		5982456	0					
ANR	5982560	CastTarget	ulong		5982456	0					
ANR	5982561	CallExpression	"names_index_ptr ( nt , nidx )"		5982456	1					
ANR	5982562	Callee	names_index_ptr		5982456	0					
ANR	5982563	Identifier	names_index_ptr		5982456	0					
ANR	5982564	ArgumentList	nt		5982456	1					
ANR	5982565	Argument	nt		5982456	0					
ANR	5982566	Identifier	nt		5982456	0					
ANR	5982567	Argument	nidx		5982456	1					
ANR	5982568	Identifier	nidx		5982456	0					
ANR	5982569	Argument	nidx		5982456	4					
ANR	5982570	Identifier	nidx		5982456	0					
ANR	5982571	IdentifierDeclStatement	END nptr = * rp -> p ;	808:2:25951:25973	5982456	18	True				
ANR	5982572	IdentifierDecl	nptr = * rp -> p		5982456	0					
ANR	5982573	IdentifierDeclType	END		5982456	0					
ANR	5982574	Identifier	nptr		5982456	1					
ANR	5982575	AssignmentExpression	nptr = * rp -> p		5982456	2		=			
ANR	5982576	Identifier	nptr		5982456	0					
ANR	5982577	UnaryOperationExpression	* rp -> p		5982456	1					
ANR	5982578	UnaryOperator	*		5982456	0					
ANR	5982579	PtrMemberAccess	rp -> p		5982456	1					
ANR	5982580	Identifier	rp		5982456	0					
ANR	5982581	Identifier	p		5982456	1					
ANR	5982582	IfStatement	if ( nptr == 0 )		5982456	19					
ANR	5982583	Condition	nptr == 0	811:8:25983:25991	5982456	0	True				
ANR	5982584	EqualityExpression	nptr == 0		5982456	0		==			
ANR	5982585	Identifier	nptr		5982456	0					
ANR	5982586	PrimaryExpression	0		5982456	1					
ANR	5982587	ReturnStatement	return 0 ;	812:8:26002:26010	5982456	1	True				
ANR	5982588	PrimaryExpression	0		5982456	0					
ANR	5982589	ExpressionStatement	sp -> ptr = nptr	815:4:26048:26062	5982456	20	True				
ANR	5982590	AssignmentExpression	sp -> ptr = nptr		5982456	0		=			
ANR	5982591	PtrMemberAccess	sp -> ptr		5982456	0					
ANR	5982592	Identifier	sp		5982456	0					
ANR	5982593	Identifier	ptr		5982456	1					
ANR	5982594	Identifier	nptr		5982456	1					
ANR	5982595	IfStatement	if ( rp -> ptype == ptr_ref_type )		5982456	21					
ANR	5982596	Condition	rp -> ptype == ptr_ref_type	816:8:26072:26096	5982456	0	True				
ANR	5982597	EqualityExpression	rp -> ptype == ptr_ref_type		5982456	0		==			
ANR	5982598	PtrMemberAccess	rp -> ptype		5982456	0					
ANR	5982599	Identifier	rp		5982456	0					
ANR	5982600	Identifier	ptype		5982456	1					
ANR	5982601	Identifier	ptr_ref_type		5982456	1					
ANR	5982602	ExpressionStatement	"sp -> index = 1 , sp -> is_refs = true"	817:8:26107:26140	5982456	1	True				
ANR	5982603	Expression	"sp -> index = 1 , sp -> is_refs = true"		5982456	0					
ANR	5982604	AssignmentExpression	sp -> index = 1		5982456	0		=			
ANR	5982605	PtrMemberAccess	sp -> index		5982456	0					
ANR	5982606	Identifier	sp		5982456	0					
ANR	5982607	Identifier	index		5982456	1					
ANR	5982608	PrimaryExpression	1		5982456	1					
ANR	5982609	AssignmentExpression	sp -> is_refs = true		5982456	1		=			
ANR	5982610	PtrMemberAccess	sp -> is_refs		5982456	0					
ANR	5982611	Identifier	sp		5982456	0					
ANR	5982612	Identifier	is_refs		5982456	1					
ANR	5982613	Identifier	true		5982456	1					
ANR	5982614	ElseStatement	else		5982456	0					
ANR	5982615	CompoundStatement		31:9:800:800	5982456	0					
ANR	5982616	ExpressionStatement	"sp -> index = 0 , sp -> is_refs = false"	819:8:26161:26195	5982456	0	True				
ANR	5982617	Expression	"sp -> index = 0 , sp -> is_refs = false"		5982456	0					
ANR	5982618	AssignmentExpression	sp -> index = 0		5982456	0		=			
ANR	5982619	PtrMemberAccess	sp -> index		5982456	0					
ANR	5982620	Identifier	sp		5982456	0					
ANR	5982621	Identifier	index		5982456	1					
ANR	5982622	PrimaryExpression	0		5982456	1					
ANR	5982623	AssignmentExpression	sp -> is_refs = false		5982456	1		=			
ANR	5982624	PtrMemberAccess	sp -> is_refs		5982456	0					
ANR	5982625	Identifier	sp		5982456	0					
ANR	5982626	Identifier	is_refs		5982456	1					
ANR	5982627	Identifier	false		5982456	1					
ANR	5982628	ExpressionStatement	nep . ptr = nptr	820:8:26205:26219	5982456	1	True				
ANR	5982629	AssignmentExpression	nep . ptr = nptr		5982456	0		=			
ANR	5982630	MemberAccess	nep . ptr		5982456	0					
ANR	5982631	Identifier	nep		5982456	0					
ANR	5982632	Identifier	ptr		5982456	1					
ANR	5982633	Identifier	nptr		5982456	1					
ANR	5982634	IfStatement	"if ( ( * rp -> ptype -> mark ) ( & nep , pstate ) )"		5982456	2					
ANR	5982635	Condition	"( * rp -> ptype -> mark ) ( & nep , pstate )"	821:12:26233:26265	5982456	0	True				
ANR	5982636	CallExpression	"( * rp -> ptype -> mark ) ( & nep , pstate )"		5982456	0					
ANR	5982637	Callee	* rp -> ptype -> mark		5982456	0					
ANR	5982638	UnaryOperationExpression	* rp -> ptype -> mark		5982456	0					
ANR	5982639	UnaryOperator	*		5982456	0					
ANR	5982640	PtrMemberAccess	rp -> ptype -> mark		5982456	1					
ANR	5982641	PtrMemberAccess	rp -> ptype		5982456	0					
ANR	5982642	Identifier	rp		5982456	0					
ANR	5982643	Identifier	ptype		5982456	1					
ANR	5982644	Identifier	mark		5982456	1					
ANR	5982645	ArgumentList	& nep		5982456	1					
ANR	5982646	Argument	& nep		5982456	0					
ANR	5982647	UnaryOperationExpression	& nep		5982456	0					
ANR	5982648	UnaryOperator	&		5982456	0					
ANR	5982649	Identifier	nep		5982456	1					
ANR	5982650	Argument	pstate		5982456	1					
ANR	5982651	Identifier	pstate		5982456	0					
ANR	5982652	Statement	new	822:12:26280:26282	5982456	1	True				
ANR	5982653	Statement	|=	822:16:26284:26285	5982456	3	True				
ANR	5982654	ExpressionStatement	1	822:19:26287:26288	5982456	4	True				
ANR	5982655	PrimaryExpression	1		5982456	0					
ANR	5982656	ForStatement	for ( ; ; )		5982456	22					
ANR	5982657	CompoundStatement		38:8:968:985	5982456	0					
ANR	5982658	IdentifierDeclStatement	gs_ptr_type_t ptp ;	825:8:26319:26336	5982456	0	True				
ANR	5982659	IdentifierDecl	ptp		5982456	0					
ANR	5982660	IdentifierDeclType	gs_ptr_type_t		5982456	0					
ANR	5982661	Identifier	ptp		5982456	1					
ANR	5982662	IfStatement	if ( sp -> is_refs )		5982456	1					
ANR	5982663	Condition	sp -> is_refs	831:12:26488:26498	5982456	0	True				
ANR	5982664	PtrMemberAccess	sp -> is_refs		5982456	0					
ANR	5982665	Identifier	sp		5982456	0					
ANR	5982666	Identifier	is_refs		5982456	1					
ANR	5982667	GotoStatement	goto do_refs ;	832:12:26513:26525	5982456	1	True				
ANR	5982668	Identifier	do_refs		5982456	0					
ANR	5982669	Label	do_struct :	836:6:26593:26602	5982456	2	True				
ANR	5982670	Identifier	do_struct		5982456	0					
ANR	5982671	CompoundStatement		51:12:1275:1302	5982456	3					
ANR	5982672	IdentifierDeclStatement	obj_header_t * ptr = sp -> ptr ;	838:12:26626:26653	5982456	0	True				
ANR	5982673	IdentifierDecl	* ptr = sp -> ptr		5982456	0					
ANR	5982674	IdentifierDeclType	obj_header_t *		5982456	0					
ANR	5982675	Identifier	ptr		5982456	1					
ANR	5982676	AssignmentExpression	* ptr = sp -> ptr		5982456	2		=			
ANR	5982677	Identifier	ptr		5982456	0					
ANR	5982678	PtrMemberAccess	sp -> ptr		5982456	1					
ANR	5982679	Identifier	sp		5982456	0					
ANR	5982680	Identifier	ptr		5982456	1					
ANR	5982681	ExpressionStatement	struct_proc_enum_ptrs ( ( * mproc ) )	840:12:26668:26699	5982456	1	True				
ANR	5982682	CallExpression	struct_proc_enum_ptrs ( ( * mproc ) )		5982456	0					
ANR	5982683	Callee	struct_proc_enum_ptrs		5982456	0					
ANR	5982684	Identifier	struct_proc_enum_ptrs		5982456	0					
ANR	5982685	ArgumentList	* mproc		5982456	1					
ANR	5982686	Argument	* mproc		5982456	0					
ANR	5982687	UnaryOperationExpression	* mproc		5982456	0					
ANR	5982688	UnaryOperator	*		5982456	0					
ANR	5982689	Identifier	mproc		5982456	1					
ANR	5982690	IfStatement	if ( ptr == 0 )		5982456	2					
ANR	5982691	Condition	ptr == 0	842:16:26718:26725	5982456	0	True				
ANR	5982692	EqualityExpression	ptr == 0		5982456	0		==			
ANR	5982693	Identifier	ptr		5982456	0					
ANR	5982694	PrimaryExpression	0		5982456	1					
ANR	5982695	CompoundStatement		55:26:1377:1377	5982456	1					
ANR	5982696	ExpressionStatement	pms = pms -> prev	843:16:26797:26812	5982456	0	True				
ANR	5982697	AssignmentExpression	pms = pms -> prev		5982456	0		=			
ANR	5982698	Identifier	pms		5982456	0					
ANR	5982699	PtrMemberAccess	pms -> prev		5982456	1					
ANR	5982700	Identifier	pms		5982456	0					
ANR	5982701	Identifier	prev		5982456	1					
ANR	5982702	IfStatement	if ( pms == 0 )		5982456	1					
ANR	5982703	Condition	pms == 0	844:20:26834:26841	5982456	0	True				
ANR	5982704	EqualityExpression	pms == 0		5982456	0		==			
ANR	5982705	Identifier	pms		5982456	0					
ANR	5982706	PrimaryExpression	0		5982456	1					
ANR	5982707	BreakStatement	break ;	845:20:26864:26869	5982456	1	True				
ANR	5982708	ExpressionStatement	stop = pms -> entries + pms -> count - 1	846:16:26902:26938	5982456	2	True				
ANR	5982709	AssignmentExpression	stop = pms -> entries + pms -> count - 1		5982456	0		=			
ANR	5982710	Identifier	stop		5982456	0					
ANR	5982711	AdditiveExpression	pms -> entries + pms -> count - 1		5982456	1		+			
ANR	5982712	PtrMemberAccess	pms -> entries		5982456	0					
ANR	5982713	Identifier	pms		5982456	0					
ANR	5982714	Identifier	entries		5982456	1					
ANR	5982715	AdditiveExpression	pms -> count - 1		5982456	1		-			
ANR	5982716	PtrMemberAccess	pms -> count		5982456	0					
ANR	5982717	Identifier	pms		5982456	0					
ANR	5982718	Identifier	count		5982456	1					
ANR	5982719	PrimaryExpression	1		5982456	1					
ANR	5982720	ExpressionStatement	sp = stop	847:16:26956:26965	5982456	3	True				
ANR	5982721	AssignmentExpression	sp = stop		5982456	0		=			
ANR	5982722	Identifier	sp		5982456	0					
ANR	5982723	Identifier	stop		5982456	1					
ANR	5982724	ContinueStatement	continue ;	848:16:26983:26991	5982456	4	True				
ANR	5982725	ExpressionStatement	"debug_check_object ( ptr - 1 , NULL , NULL )"	850:12:27019:27058	5982456	3	True				
ANR	5982726	CallExpression	"debug_check_object ( ptr - 1 , NULL , NULL )"		5982456	0					
ANR	5982727	Callee	debug_check_object		5982456	0					
ANR	5982728	Identifier	debug_check_object		5982456	0					
ANR	5982729	ArgumentList	ptr - 1		5982456	1					
ANR	5982730	Argument	ptr - 1		5982456	0					
ANR	5982731	AdditiveExpression	ptr - 1		5982456	0		-			
ANR	5982732	Identifier	ptr		5982456	0					
ANR	5982733	PrimaryExpression	1		5982456	1					
ANR	5982734	Argument	NULL		5982456	1					
ANR	5982735	Identifier	NULL		5982456	0					
ANR	5982736	Argument	NULL		5982456	2					
ANR	5982737	Identifier	NULL		5982456	0					
ANR	5982738	Label	ts :	851:10:27070:27072	5982456	4	True				
ANR	5982739	Identifier	ts		5982456	0					
ANR	5982740	ExpressionStatement	"if_debug4m ( '7' , pstate -> heap , "" [7]%smarking %s 0x%lx[%u]"" , depth_dots ( sp , pms ) , struct_type_name_string ( ptr [ - 1 ] . o_type ) , ( ulong ) ptr , sp -> index )"	851:13:27073:27290	5982456	5	True				
ANR	5982741	CallExpression	"if_debug4m ( '7' , pstate -> heap , "" [7]%smarking %s 0x%lx[%u]"" , depth_dots ( sp , pms ) , struct_type_name_string ( ptr [ - 1 ] . o_type ) , ( ulong ) ptr , sp -> index )"		5982456	0					
ANR	5982742	Callee	if_debug4m		5982456	0					
ANR	5982743	Identifier	if_debug4m		5982456	0					
ANR	5982744	ArgumentList	'7'		5982456	1					
ANR	5982745	Argument	'7'		5982456	0					
ANR	5982746	PrimaryExpression	'7'		5982456	0					
ANR	5982747	Argument	pstate -> heap		5982456	1					
ANR	5982748	PtrMemberAccess	pstate -> heap		5982456	0					
ANR	5982749	Identifier	pstate		5982456	0					
ANR	5982750	Identifier	heap		5982456	1					
ANR	5982751	Argument	""" [7]%smarking %s 0x%lx[%u]"""		5982456	2					
ANR	5982752	PrimaryExpression	""" [7]%smarking %s 0x%lx[%u]"""		5982456	0					
ANR	5982753	Argument	"depth_dots ( sp , pms )"		5982456	3					
ANR	5982754	CallExpression	"depth_dots ( sp , pms )"		5982456	0					
ANR	5982755	Callee	depth_dots		5982456	0					
ANR	5982756	Identifier	depth_dots		5982456	0					
ANR	5982757	ArgumentList	sp		5982456	1					
ANR	5982758	Argument	sp		5982456	0					
ANR	5982759	Identifier	sp		5982456	0					
ANR	5982760	Argument	pms		5982456	1					
ANR	5982761	Identifier	pms		5982456	0					
ANR	5982762	Argument	struct_type_name_string ( ptr [ - 1 ] . o_type )		5982456	4					
ANR	5982763	CallExpression	struct_type_name_string ( ptr [ - 1 ] . o_type )		5982456	0					
ANR	5982764	Callee	struct_type_name_string		5982456	0					
ANR	5982765	Identifier	struct_type_name_string		5982456	0					
ANR	5982766	ArgumentList	ptr [ - 1 ] . o_type		5982456	1					
ANR	5982767	Argument	ptr [ - 1 ] . o_type		5982456	0					
ANR	5982768	MemberAccess	ptr [ - 1 ] . o_type		5982456	0					
ANR	5982769	ArrayIndexing	ptr [ - 1 ]		5982456	0					
ANR	5982770	Identifier	ptr		5982456	0					
ANR	5982771	UnaryOperationExpression	- 1		5982456	1					
ANR	5982772	UnaryOperator	-		5982456	0					
ANR	5982773	PrimaryExpression	1		5982456	1					
ANR	5982774	Identifier	o_type		5982456	1					
ANR	5982775	Argument	( ulong ) ptr		5982456	5					
ANR	5982776	CastExpression	( ulong ) ptr		5982456	0					
ANR	5982777	CastTarget	ulong		5982456	0					
ANR	5982778	Identifier	ptr		5982456	1					
ANR	5982779	Argument	sp -> index		5982456	6					
ANR	5982780	PtrMemberAccess	sp -> index		5982456	0					
ANR	5982781	Identifier	sp		5982456	0					
ANR	5982782	Identifier	index		5982456	1					
ANR	5982783	ExpressionStatement	mproc = ptr [ - 1 ] . o_type -> enum_ptrs	855:12:27304:27337	5982456	6	True				
ANR	5982784	AssignmentExpression	mproc = ptr [ - 1 ] . o_type -> enum_ptrs		5982456	0		=			
ANR	5982785	Identifier	mproc		5982456	0					
ANR	5982786	PtrMemberAccess	ptr [ - 1 ] . o_type -> enum_ptrs		5982456	1					
ANR	5982787	MemberAccess	ptr [ - 1 ] . o_type		5982456	0					
ANR	5982788	ArrayIndexing	ptr [ - 1 ]		5982456	0					
ANR	5982789	Identifier	ptr		5982456	0					
ANR	5982790	UnaryOperationExpression	- 1		5982456	1					
ANR	5982791	UnaryOperator	-		5982456	0					
ANR	5982792	PrimaryExpression	1		5982456	1					
ANR	5982793	Identifier	o_type		5982456	1					
ANR	5982794	Identifier	enum_ptrs		5982456	1					
ANR	5982795	IfStatement	"if ( mproc == gs_no_struct_enum_ptrs || ( ptp = ( * mproc ) ( gcst_get_memory_ptr ( pstate ) , ptr , pre_obj_contents_size ( ptr - 1 ) , sp -> index , & nep , ptr [ - 1 ] . o_type , pstate ) ) == 0 )"		5982456	7					
ANR	5982796	Condition	"mproc == gs_no_struct_enum_ptrs || ( ptp = ( * mproc ) ( gcst_get_memory_ptr ( pstate ) , ptr , pre_obj_contents_size ( ptr - 1 ) , sp -> index , & nep , ptr [ - 1 ] . o_type , pstate ) ) == 0"	856:16:27355:27569	5982456	0	True				
ANR	5982797	OrExpression	"mproc == gs_no_struct_enum_ptrs || ( ptp = ( * mproc ) ( gcst_get_memory_ptr ( pstate ) , ptr , pre_obj_contents_size ( ptr - 1 ) , sp -> index , & nep , ptr [ - 1 ] . o_type , pstate ) ) == 0"		5982456	0		||			
ANR	5982798	EqualityExpression	mproc == gs_no_struct_enum_ptrs		5982456	0		==			
ANR	5982799	Identifier	mproc		5982456	0					
ANR	5982800	Identifier	gs_no_struct_enum_ptrs		5982456	1					
ANR	5982801	EqualityExpression	"( ptp = ( * mproc ) ( gcst_get_memory_ptr ( pstate ) , ptr , pre_obj_contents_size ( ptr - 1 ) , sp -> index , & nep , ptr [ - 1 ] . o_type , pstate ) ) == 0"		5982456	1		==			
ANR	5982802	AssignmentExpression	"ptp = ( * mproc ) ( gcst_get_memory_ptr ( pstate ) , ptr , pre_obj_contents_size ( ptr - 1 ) , sp -> index , & nep , ptr [ - 1 ] . o_type , pstate )"		5982456	0		=			
ANR	5982803	Identifier	ptp		5982456	0					
ANR	5982804	CallExpression	"( * mproc ) ( gcst_get_memory_ptr ( pstate ) , ptr , pre_obj_contents_size ( ptr - 1 ) , sp -> index , & nep , ptr [ - 1 ] . o_type , pstate )"		5982456	1					
ANR	5982805	Callee	* mproc		5982456	0					
ANR	5982806	UnaryOperationExpression	* mproc		5982456	0					
ANR	5982807	UnaryOperator	*		5982456	0					
ANR	5982808	Identifier	mproc		5982456	1					
ANR	5982809	ArgumentList	gcst_get_memory_ptr ( pstate )		5982456	1					
ANR	5982810	Argument	gcst_get_memory_ptr ( pstate )		5982456	0					
ANR	5982811	CallExpression	gcst_get_memory_ptr ( pstate )		5982456	0					
ANR	5982812	Callee	gcst_get_memory_ptr		5982456	0					
ANR	5982813	Identifier	gcst_get_memory_ptr		5982456	0					
ANR	5982814	ArgumentList	pstate		5982456	1					
ANR	5982815	Argument	pstate		5982456	0					
ANR	5982816	Identifier	pstate		5982456	0					
ANR	5982817	Argument	ptr		5982456	1					
ANR	5982818	Identifier	ptr		5982456	0					
ANR	5982819	Argument	pre_obj_contents_size ( ptr - 1 )		5982456	2					
ANR	5982820	CallExpression	pre_obj_contents_size ( ptr - 1 )		5982456	0					
ANR	5982821	Callee	pre_obj_contents_size		5982456	0					
ANR	5982822	Identifier	pre_obj_contents_size		5982456	0					
ANR	5982823	ArgumentList	ptr - 1		5982456	1					
ANR	5982824	Argument	ptr - 1		5982456	0					
ANR	5982825	AdditiveExpression	ptr - 1		5982456	0		-			
ANR	5982826	Identifier	ptr		5982456	0					
ANR	5982827	PrimaryExpression	1		5982456	1					
ANR	5982828	Argument	sp -> index		5982456	3					
ANR	5982829	PtrMemberAccess	sp -> index		5982456	0					
ANR	5982830	Identifier	sp		5982456	0					
ANR	5982831	Identifier	index		5982456	1					
ANR	5982832	Argument	& nep		5982456	4					
ANR	5982833	UnaryOperationExpression	& nep		5982456	0					
ANR	5982834	UnaryOperator	&		5982456	0					
ANR	5982835	Identifier	nep		5982456	1					
ANR	5982836	Argument	ptr [ - 1 ] . o_type		5982456	5					
ANR	5982837	MemberAccess	ptr [ - 1 ] . o_type		5982456	0					
ANR	5982838	ArrayIndexing	ptr [ - 1 ]		5982456	0					
ANR	5982839	Identifier	ptr		5982456	0					
ANR	5982840	UnaryOperationExpression	- 1		5982456	1					
ANR	5982841	UnaryOperator	-		5982456	0					
ANR	5982842	PrimaryExpression	1		5982456	1					
ANR	5982843	Identifier	o_type		5982456	1					
ANR	5982844	Argument	pstate		5982456	6					
ANR	5982845	Identifier	pstate		5982456	0					
ANR	5982846	PrimaryExpression	0		5982456	1					
ANR	5982847	CompoundStatement		73:18:2238:2238	5982456	1					
ANR	5982848	ExpressionStatement	"if_debug0m ( '7' , pstate -> heap , "" - done\\n"" )"	861:16:27607:27649	5982456	0	True				
ANR	5982849	CallExpression	"if_debug0m ( '7' , pstate -> heap , "" - done\\n"" )"		5982456	0					
ANR	5982850	Callee	if_debug0m		5982456	0					
ANR	5982851	Identifier	if_debug0m		5982456	0					
ANR	5982852	ArgumentList	'7'		5982456	1					
ANR	5982853	Argument	'7'		5982456	0					
ANR	5982854	PrimaryExpression	'7'		5982456	0					
ANR	5982855	Argument	pstate -> heap		5982456	1					
ANR	5982856	PtrMemberAccess	pstate -> heap		5982456	0					
ANR	5982857	Identifier	pstate		5982456	0					
ANR	5982858	Identifier	heap		5982456	1					
ANR	5982859	Argument	""" - done\\n"""		5982456	2					
ANR	5982860	PrimaryExpression	""" - done\\n"""		5982456	0					
ANR	5982861	ExpressionStatement	sp --	862:16:27667:27671	5982456	1	True				
ANR	5982862	PostIncDecOperationExpression	sp --		5982456	0					
ANR	5982863	Identifier	sp		5982456	0					
ANR	5982864	IncDec	--		5982456	1					
ANR	5982865	ContinueStatement	continue ;	863:16:27689:27697	5982456	2	True				
ANR	5982866	ExpressionStatement	nptr = ( void * ) nep . ptr	868:12:27908:27930	5982456	8	True				
ANR	5982867	AssignmentExpression	nptr = ( void * ) nep . ptr		5982456	0		=			
ANR	5982868	Identifier	nptr		5982456	0					
ANR	5982869	CastExpression	( void * ) nep . ptr		5982456	1					
ANR	5982870	CastTarget	void *		5982456	0					
ANR	5982871	MemberAccess	nep . ptr		5982456	1					
ANR	5982872	Identifier	nep		5982456	0					
ANR	5982873	Identifier	ptr		5982456	1					
ANR	5982874	ExpressionStatement	sp -> index ++	869:12:27944:27955	5982456	9	True				
ANR	5982875	PostIncDecOperationExpression	sp -> index ++		5982456	0					
ANR	5982876	PtrMemberAccess	sp -> index		5982456	0					
ANR	5982877	Identifier	sp		5982456	0					
ANR	5982878	Identifier	index		5982456	1					
ANR	5982879	IncDec	++		5982456	1					
ANR	5982880	ExpressionStatement	"if_debug1m ( '7' , pstate -> heap , "" = 0x%lx\\n"" , ( ulong ) nptr )"	870:12:27969:28026	5982456	10	True				
ANR	5982881	CallExpression	"if_debug1m ( '7' , pstate -> heap , "" = 0x%lx\\n"" , ( ulong ) nptr )"		5982456	0					
ANR	5982882	Callee	if_debug1m		5982456	0					
ANR	5982883	Identifier	if_debug1m		5982456	0					
ANR	5982884	ArgumentList	'7'		5982456	1					
ANR	5982885	Argument	'7'		5982456	0					
ANR	5982886	PrimaryExpression	'7'		5982456	0					
ANR	5982887	Argument	pstate -> heap		5982456	1					
ANR	5982888	PtrMemberAccess	pstate -> heap		5982456	0					
ANR	5982889	Identifier	pstate		5982456	0					
ANR	5982890	Identifier	heap		5982456	1					
ANR	5982891	Argument	""" = 0x%lx\\n"""		5982456	2					
ANR	5982892	PrimaryExpression	""" = 0x%lx\\n"""		5982456	0					
ANR	5982893	Argument	( ulong ) nptr		5982456	3					
ANR	5982894	CastExpression	( ulong ) nptr		5982456	0					
ANR	5982895	CastTarget	ulong		5982456	0					
ANR	5982896	Identifier	nptr		5982456	1					
ANR	5982897	IfStatement	if ( ptp == ptr_struct_type )		5982456	11					
ANR	5982898	Condition	ptp == ptr_struct_type	872:16:28111:28132	5982456	0	True				
ANR	5982899	EqualityExpression	ptp == ptr_struct_type		5982456	0		==			
ANR	5982900	Identifier	ptp		5982456	0					
ANR	5982901	Identifier	ptr_struct_type		5982456	1					
ANR	5982902	CompoundStatement		85:40:2784:2784	5982456	1					
ANR	5982903	ExpressionStatement	sp [ 1 ] . index = 0	873:16:28153:28168	5982456	0	True				
ANR	5982904	AssignmentExpression	sp [ 1 ] . index = 0		5982456	0		=			
ANR	5982905	MemberAccess	sp [ 1 ] . index		5982456	0					
ANR	5982906	ArrayIndexing	sp [ 1 ]		5982456	0					
ANR	5982907	Identifier	sp		5982456	0					
ANR	5982908	PrimaryExpression	1		5982456	1					
ANR	5982909	Identifier	index		5982456	1					
ANR	5982910	PrimaryExpression	0		5982456	1					
ANR	5982911	ExpressionStatement	sp [ 1 ] . is_refs = false	874:16:28186:28207	5982456	1	True				
ANR	5982912	AssignmentExpression	sp [ 1 ] . is_refs = false		5982456	0		=			
ANR	5982913	MemberAccess	sp [ 1 ] . is_refs		5982456	0					
ANR	5982914	ArrayIndexing	sp [ 1 ]		5982456	0					
ANR	5982915	Identifier	sp		5982456	0					
ANR	5982916	PrimaryExpression	1		5982456	1					
ANR	5982917	Identifier	is_refs		5982456	1					
ANR	5982918	Identifier	false		5982456	1					
ANR	5982919	IfStatement	if ( sp == stop )		5982456	2					
ANR	5982920	Condition	sp == stop	875:20:28229:28238	5982456	0	True				
ANR	5982921	EqualityExpression	sp == stop		5982456	0		==			
ANR	5982922	Identifier	sp		5982456	0					
ANR	5982923	Identifier	stop		5982456	1					
ANR	5982924	GotoStatement	goto push ;	876:20:28261:28270	5982456	1	True				
ANR	5982925	Identifier	push		5982456	0					
ANR	5982926	IfStatement	"if ( ! ptr_struct_mark ( & nep , pstate ) )"		5982456	3					
ANR	5982927	Condition	"! ptr_struct_mark ( & nep , pstate )"	877:20:28292:28321	5982456	0	True				
ANR	5982928	UnaryOperationExpression	"! ptr_struct_mark ( & nep , pstate )"		5982456	0					
ANR	5982929	UnaryOperator	!		5982456	0					
ANR	5982930	CallExpression	"ptr_struct_mark ( & nep , pstate )"		5982456	1					
ANR	5982931	Callee	ptr_struct_mark		5982456	0					
ANR	5982932	Identifier	ptr_struct_mark		5982456	0					
ANR	5982933	ArgumentList	& nep		5982456	1					
ANR	5982934	Argument	& nep		5982456	0					
ANR	5982935	UnaryOperationExpression	& nep		5982456	0					
ANR	5982936	UnaryOperator	&		5982456	0					
ANR	5982937	Identifier	nep		5982456	1					
ANR	5982938	Argument	pstate		5982456	1					
ANR	5982939	Identifier	pstate		5982456	0					
ANR	5982940	GotoStatement	goto ts ;	878:20:28344:28351	5982456	1	True				
ANR	5982941	Identifier	ts		5982456	0					
ANR	5982942	Statement	new	879:16:28369:28371	5982456	4	True				
ANR	5982943	Statement	|=	879:20:28373:28374	5982456	5	True				
ANR	5982944	ExpressionStatement	1	879:23:28376:28377	5982456	6	True				
ANR	5982945	PrimaryExpression	1		5982456	0					
ANR	5982946	ExpressionStatement	( ++ sp ) -> ptr = nptr	880:16:28395:28413	5982456	7	True				
ANR	5982947	AssignmentExpression	( ++ sp ) -> ptr = nptr		5982456	0		=			
ANR	5982948	PtrMemberAccess	( ++ sp ) -> ptr		5982456	0					
ANR	5982949	UnaryExpression	++ sp		5982456	0					
ANR	5982950	IncDec	++		5982456	0					
ANR	5982951	Identifier	sp		5982456	1					
ANR	5982952	Identifier	ptr		5982456	1					
ANR	5982953	Identifier	nptr		5982456	1					
ANR	5982954	GotoStatement	goto do_struct ;	881:16:28431:28445	5982456	8	True				
ANR	5982955	Identifier	do_struct		5982456	0					
ANR	5982956	ElseStatement	else		5982456	0					
ANR	5982957	IfStatement	if ( ptp == ptr_ref_type )		5982456	0					
ANR	5982958	Condition	ptp == ptr_ref_type	882:23:28470:28488	5982456	0	True				
ANR	5982959	EqualityExpression	ptp == ptr_ref_type		5982456	0		==			
ANR	5982960	Identifier	ptp		5982456	0					
ANR	5982961	Identifier	ptr_ref_type		5982456	1					
ANR	5982962	CompoundStatement		95:44:3140:3140	5982456	1					
ANR	5982963	ExpressionStatement	sp [ 1 ] . index = 1	883:16:28509:28524	5982456	0	True				
ANR	5982964	AssignmentExpression	sp [ 1 ] . index = 1		5982456	0		=			
ANR	5982965	MemberAccess	sp [ 1 ] . index		5982456	0					
ANR	5982966	ArrayIndexing	sp [ 1 ]		5982456	0					
ANR	5982967	Identifier	sp		5982456	0					
ANR	5982968	PrimaryExpression	1		5982456	1					
ANR	5982969	Identifier	index		5982456	1					
ANR	5982970	PrimaryExpression	1		5982456	1					
ANR	5982971	ExpressionStatement	sp [ 1 ] . is_refs = true	884:16:28542:28562	5982456	1	True				
ANR	5982972	AssignmentExpression	sp [ 1 ] . is_refs = true		5982456	0		=			
ANR	5982973	MemberAccess	sp [ 1 ] . is_refs		5982456	0					
ANR	5982974	ArrayIndexing	sp [ 1 ]		5982456	0					
ANR	5982975	Identifier	sp		5982456	0					
ANR	5982976	PrimaryExpression	1		5982456	1					
ANR	5982977	Identifier	is_refs		5982456	1					
ANR	5982978	Identifier	true		5982456	1					
ANR	5982979	IfStatement	if ( sp == stop )		5982456	2					
ANR	5982980	Condition	sp == stop	885:20:28584:28593	5982456	0	True				
ANR	5982981	EqualityExpression	sp == stop		5982456	0		==			
ANR	5982982	Identifier	sp		5982456	0					
ANR	5982983	Identifier	stop		5982456	1					
ANR	5982984	GotoStatement	goto push ;	886:20:28616:28625	5982456	1	True				
ANR	5982985	Identifier	push		5982456	0					
ANR	5982986	Statement	new	887:16:28643:28645	5982456	3	True				
ANR	5982987	Statement	|=	887:20:28647:28648	5982456	4	True				
ANR	5982988	ExpressionStatement	1	887:23:28650:28651	5982456	5	True				
ANR	5982989	PrimaryExpression	1		5982456	0					
ANR	5982990	ExpressionStatement	( ++ sp ) -> ptr = nptr	888:16:28669:28687	5982456	6	True				
ANR	5982991	AssignmentExpression	( ++ sp ) -> ptr = nptr		5982456	0		=			
ANR	5982992	PtrMemberAccess	( ++ sp ) -> ptr		5982456	0					
ANR	5982993	UnaryExpression	++ sp		5982456	0					
ANR	5982994	IncDec	++		5982456	0					
ANR	5982995	Identifier	sp		5982456	1					
ANR	5982996	Identifier	ptr		5982456	1					
ANR	5982997	Identifier	nptr		5982456	1					
ANR	5982998	GotoStatement	goto do_refs ;	889:16:28705:28717	5982456	7	True				
ANR	5982999	Identifier	do_refs		5982456	0					
ANR	5983000	ElseStatement	else		5982456	0					
ANR	5983001	CompoundStatement		103:19:3387:3387	5982456	0					
ANR	5983002	Statement	new	893:16:28961:28963	5982456	0	True				
ANR	5983003	Statement	|=	893:20:28965:28966	5982456	1	True				
ANR	5983004	ExpressionStatement	"( ( * ptp -> mark ) ( & nep , pstate ) ) ? 1 : 0"	893:23:28968:29005	5982456	2	True				
ANR	5983005	ConditionalExpression	"( ( * ptp -> mark ) ( & nep , pstate ) ) ? 1 : 0"		5982456	0					
ANR	5983006	Condition	"( * ptp -> mark ) ( & nep , pstate )"		5982456	0					
ANR	5983007	CallExpression	"( * ptp -> mark ) ( & nep , pstate )"		5982456	0					
ANR	5983008	Callee	* ptp -> mark		5982456	0					
ANR	5983009	UnaryOperationExpression	* ptp -> mark		5982456	0					
ANR	5983010	UnaryOperator	*		5982456	0					
ANR	5983011	PtrMemberAccess	ptp -> mark		5982456	1					
ANR	5983012	Identifier	ptp		5982456	0					
ANR	5983013	Identifier	mark		5982456	1					
ANR	5983014	ArgumentList	& nep		5982456	1					
ANR	5983015	Argument	& nep		5982456	0					
ANR	5983016	UnaryOperationExpression	& nep		5982456	0					
ANR	5983017	UnaryOperator	&		5982456	0					
ANR	5983018	Identifier	nep		5982456	1					
ANR	5983019	Argument	pstate		5982456	1					
ANR	5983020	Identifier	pstate		5982456	0					
ANR	5983021	PrimaryExpression	1		5982456	1					
ANR	5983022	PrimaryExpression	0		5982456	2					
ANR	5983023	GotoStatement	goto ts ;	894:15:29022:29029	5982456	3	True				
ANR	5983024	Identifier	ts		5982456	0					
ANR	5983025	Label	do_refs :	900:6:29116:29123	5982456	4	True				
ANR	5983026	Identifier	do_refs		5982456	0					
ANR	5983027	CompoundStatement		116:12:3836:3845	5982456	5					
ANR	5983028	IdentifierDeclStatement	ref_packed * pptr = sp -> ptr ;	902:12:29147:29173	5982456	0	True				
ANR	5983029	IdentifierDecl	* pptr = sp -> ptr		5982456	0					
ANR	5983030	IdentifierDeclType	ref_packed *		5982456	0					
ANR	5983031	Identifier	pptr		5982456	1					
ANR	5983032	AssignmentExpression	* pptr = sp -> ptr		5982456	2		=			
ANR	5983033	Identifier	pptr		5982456	0					
ANR	5983034	PtrMemberAccess	sp -> ptr		5982456	1					
ANR	5983035	Identifier	sp		5982456	0					
ANR	5983036	Identifier	ptr		5982456	1					
ANR	5983037	IdentifierDeclStatement	ref * rptr ;	903:12:29187:29196	5982456	1	True				
ANR	5983038	IdentifierDecl	* rptr		5982456	0					
ANR	5983039	IdentifierDeclType	ref *		5982456	0					
ANR	5983040	Identifier	rptr		5982456	1					
ANR	5983041	Label	tr :	905:10:29209:29211	5982456	2	True				
ANR	5983042	Identifier	tr		5982456	0					
ANR	5983043	IfStatement	if ( ! sp -> index )		5982456	3					
ANR	5983044	Condition	! sp -> index	905:17:29216:29225	5982456	0	True				
ANR	5983045	UnaryOperationExpression	! sp -> index		5982456	0					
ANR	5983046	UnaryOperator	!		5982456	0					
ANR	5983047	PtrMemberAccess	sp -> index		5982456	1					
ANR	5983048	Identifier	sp		5982456	0					
ANR	5983049	Identifier	index		5982456	1					
ANR	5983050	CompoundStatement		118:29:3877:3877	5982456	1					
ANR	5983051	ExpressionStatement	-- sp	906:16:29246:29250	5982456	0	True				
ANR	5983052	UnaryExpression	-- sp		5982456	0					
ANR	5983053	IncDec	--		5982456	0					
ANR	5983054	Identifier	sp		5982456	1					
ANR	5983055	ContinueStatement	continue ;	907:16:29268:29276	5982456	1	True				
ANR	5983056	ExpressionStatement	-- ( sp -> index )	909:12:29304:29317	5982456	4	True				
ANR	5983057	UnaryExpression	-- ( sp -> index )		5982456	0					
ANR	5983058	IncDec	--		5982456	0					
ANR	5983059	PtrMemberAccess	sp -> index		5982456	1					
ANR	5983060	Identifier	sp		5982456	0					
ANR	5983061	Identifier	index		5982456	1					
ANR	5983062	ExpressionStatement	"if_debug3m ( '8' , pstate -> heap , ""  [8]%smarking refs 0x%lx[%u]\\n"" , depth_dots ( sp , pms ) , ( ulong ) pptr , sp -> index )"	910:12:29331:29463	5982456	5	True				
ANR	5983063	CallExpression	"if_debug3m ( '8' , pstate -> heap , ""  [8]%smarking refs 0x%lx[%u]\\n"" , depth_dots ( sp , pms ) , ( ulong ) pptr , sp -> index )"		5982456	0					
ANR	5983064	Callee	if_debug3m		5982456	0					
ANR	5983065	Identifier	if_debug3m		5982456	0					
ANR	5983066	ArgumentList	'8'		5982456	1					
ANR	5983067	Argument	'8'		5982456	0					
ANR	5983068	PrimaryExpression	'8'		5982456	0					
ANR	5983069	Argument	pstate -> heap		5982456	1					
ANR	5983070	PtrMemberAccess	pstate -> heap		5982456	0					
ANR	5983071	Identifier	pstate		5982456	0					
ANR	5983072	Identifier	heap		5982456	1					
ANR	5983073	Argument	"""  [8]%smarking refs 0x%lx[%u]\\n"""		5982456	2					
ANR	5983074	PrimaryExpression	"""  [8]%smarking refs 0x%lx[%u]\\n"""		5982456	0					
ANR	5983075	Argument	"depth_dots ( sp , pms )"		5982456	3					
ANR	5983076	CallExpression	"depth_dots ( sp , pms )"		5982456	0					
ANR	5983077	Callee	depth_dots		5982456	0					
ANR	5983078	Identifier	depth_dots		5982456	0					
ANR	5983079	ArgumentList	sp		5982456	1					
ANR	5983080	Argument	sp		5982456	0					
ANR	5983081	Identifier	sp		5982456	0					
ANR	5983082	Argument	pms		5982456	1					
ANR	5983083	Identifier	pms		5982456	0					
ANR	5983084	Argument	( ulong ) pptr		5982456	4					
ANR	5983085	CastExpression	( ulong ) pptr		5982456	0					
ANR	5983086	CastTarget	ulong		5982456	0					
ANR	5983087	Identifier	pptr		5982456	1					
ANR	5983088	Argument	sp -> index		5982456	5					
ANR	5983089	PtrMemberAccess	sp -> index		5982456	0					
ANR	5983090	Identifier	sp		5982456	0					
ANR	5983091	Identifier	index		5982456	1					
ANR	5983092	IfStatement	if ( r_is_packed ( pptr ) )		5982456	6					
ANR	5983093	Condition	r_is_packed ( pptr )	912:16:29481:29497	5982456	0	True				
ANR	5983094	CallExpression	r_is_packed ( pptr )		5982456	0					
ANR	5983095	Callee	r_is_packed		5982456	0					
ANR	5983096	Identifier	r_is_packed		5982456	0					
ANR	5983097	ArgumentList	pptr		5982456	1					
ANR	5983098	Argument	pptr		5982456	0					
ANR	5983099	Identifier	pptr		5982456	0					
ANR	5983100	CompoundStatement		125:35:4149:4149	5982456	1					
ANR	5983101	IfStatement	if ( ! r_has_pmark ( pptr ) )		5982456	0					
ANR	5983102	Condition	! r_has_pmark ( pptr )	913:20:29522:29539	5982456	0	True				
ANR	5983103	UnaryOperationExpression	! r_has_pmark ( pptr )		5982456	0					
ANR	5983104	UnaryOperator	!		5982456	0					
ANR	5983105	CallExpression	r_has_pmark ( pptr )		5982456	1					
ANR	5983106	Callee	r_has_pmark		5982456	0					
ANR	5983107	Identifier	r_has_pmark		5982456	0					
ANR	5983108	ArgumentList	pptr		5982456	1					
ANR	5983109	Argument	pptr		5982456	0					
ANR	5983110	Identifier	pptr		5982456	0					
ANR	5983111	CompoundStatement		126:40:4191:4191	5982456	1					
ANR	5983112	ExpressionStatement	r_set_pmark ( pptr )	914:20:29564:29581	5982456	0	True				
ANR	5983113	CallExpression	r_set_pmark ( pptr )		5982456	0					
ANR	5983114	Callee	r_set_pmark		5982456	0					
ANR	5983115	Identifier	r_set_pmark		5982456	0					
ANR	5983116	ArgumentList	pptr		5982456	1					
ANR	5983117	Argument	pptr		5982456	0					
ANR	5983118	Identifier	pptr		5982456	0					
ANR	5983119	Statement	new	915:20:29603:29605	5982456	1	True				
ANR	5983120	Statement	|=	915:24:29607:29608	5982456	2	True				
ANR	5983121	ExpressionStatement	1	915:27:29610:29611	5982456	3	True				
ANR	5983122	PrimaryExpression	1		5982456	0					
ANR	5983123	IfStatement	if ( r_packed_is_name ( pptr ) )		5982456	4					
ANR	5983124	Condition	r_packed_is_name ( pptr )	916:24:29637:29658	5982456	0	True				
ANR	5983125	CallExpression	r_packed_is_name ( pptr )		5982456	0					
ANR	5983126	Callee	r_packed_is_name		5982456	0					
ANR	5983127	Identifier	r_packed_is_name		5982456	0					
ANR	5983128	ArgumentList	pptr		5982456	1					
ANR	5983129	Argument	pptr		5982456	0					
ANR	5983130	Identifier	pptr		5982456	0					
ANR	5983131	CompoundStatement		130:24:4336:4379	5982456	1					
ANR	5983132	IdentifierDeclStatement	name_index_t nidx = packed_name_index ( pptr ) ;	917:24:29687:29730	5982456	0	True				
ANR	5983133	IdentifierDecl	nidx = packed_name_index ( pptr )		5982456	0					
ANR	5983134	IdentifierDeclType	name_index_t		5982456	0					
ANR	5983135	Identifier	nidx		5982456	1					
ANR	5983136	AssignmentExpression	nidx = packed_name_index ( pptr )		5982456	2		=			
ANR	5983137	Identifier	nidx		5982456	0					
ANR	5983138	CallExpression	packed_name_index ( pptr )		5982456	1					
ANR	5983139	Callee	packed_name_index		5982456	0					
ANR	5983140	Identifier	packed_name_index		5982456	0					
ANR	5983141	ArgumentList	pptr		5982456	1					
ANR	5983142	Argument	pptr		5982456	0					
ANR	5983143	Identifier	pptr		5982456	0					
ANR	5983144	ExpressionStatement	mark_name ( nidx )	919:24:29757:29772	5982456	1	True				
ANR	5983145	CallExpression	mark_name ( nidx )		5982456	0					
ANR	5983146	Callee	mark_name		5982456	0					
ANR	5983147	Identifier	mark_name		5982456	0					
ANR	5983148	ArgumentList	nidx		5982456	1					
ANR	5983149	Argument	nidx		5982456	0					
ANR	5983150	Identifier	nidx		5982456	0					
ANR	5983151	ExpressionStatement	++ pptr	922:16:29830:29836	5982456	1	True				
ANR	5983152	UnaryExpression	++ pptr		5982456	0					
ANR	5983153	IncDec	++		5982456	0					
ANR	5983154	Identifier	pptr		5982456	1					
ANR	5983155	GotoStatement	goto tr ;	923:16:29854:29861	5982456	2	True				
ANR	5983156	Identifier	tr		5982456	0					
ANR	5983157	ExpressionStatement	rptr = ( ref * ) pptr	925:12:29889:29908	5982456	7	True				
ANR	5983158	AssignmentExpression	rptr = ( ref * ) pptr		5982456	0		=			
ANR	5983159	Identifier	rptr		5982456	0					
ANR	5983160	CastExpression	( ref * ) pptr		5982456	1					
ANR	5983161	CastTarget	ref *		5982456	0					
ANR	5983162	Identifier	pptr		5982456	1					
ANR	5983163	IfStatement	"if ( r_has_attr ( rptr , l_mark ) )"		5982456	8					
ANR	5983164	Condition	"r_has_attr ( rptr , l_mark )"	926:16:29952:29975	5982456	0	True				
ANR	5983165	CallExpression	"r_has_attr ( rptr , l_mark )"		5982456	0					
ANR	5983166	Callee	r_has_attr		5982456	0					
ANR	5983167	Identifier	r_has_attr		5982456	0					
ANR	5983168	ArgumentList	rptr		5982456	1					
ANR	5983169	Argument	rptr		5982456	0					
ANR	5983170	Identifier	rptr		5982456	0					
ANR	5983171	Argument	l_mark		5982456	1					
ANR	5983172	Identifier	l_mark		5982456	0					
ANR	5983173	CompoundStatement		139:42:4627:4627	5982456	1					
ANR	5983174	ExpressionStatement	pptr = ( ref_packed * ) ( rptr + 1 )	927:16:29996:30027	5982456	0	True				
ANR	5983175	AssignmentExpression	pptr = ( ref_packed * ) ( rptr + 1 )		5982456	0		=			
ANR	5983176	Identifier	pptr		5982456	0					
ANR	5983177	CastExpression	( ref_packed * ) ( rptr + 1 )		5982456	1					
ANR	5983178	CastTarget	ref_packed *		5982456	0					
ANR	5983179	AdditiveExpression	rptr + 1		5982456	1		+			
ANR	5983180	Identifier	rptr		5982456	0					
ANR	5983181	PrimaryExpression	1		5982456	1					
ANR	5983182	GotoStatement	goto tr ;	928:16:30045:30052	5982456	1	True				
ANR	5983183	Identifier	tr		5982456	0					
ANR	5983184	ExpressionStatement	"r_set_attrs ( rptr , l_mark )"	930:12:30080:30105	5982456	9	True				
ANR	5983185	CallExpression	"r_set_attrs ( rptr , l_mark )"		5982456	0					
ANR	5983186	Callee	r_set_attrs		5982456	0					
ANR	5983187	Identifier	r_set_attrs		5982456	0					
ANR	5983188	ArgumentList	rptr		5982456	1					
ANR	5983189	Argument	rptr		5982456	0					
ANR	5983190	Identifier	rptr		5982456	0					
ANR	5983191	Argument	l_mark		5982456	1					
ANR	5983192	Identifier	l_mark		5982456	0					
ANR	5983193	Statement	new	931:12:30119:30121	5982456	10	True				
ANR	5983194	Statement	|=	931:16:30123:30124	5982456	11	True				
ANR	5983195	ExpressionStatement	1	931:19:30126:30127	5982456	12	True				
ANR	5983196	PrimaryExpression	1		5982456	0					
ANR	5983197	IfStatement	if ( r_space ( rptr ) < min_trace )		5982456	13					
ANR	5983198	Condition	r_space ( rptr ) < min_trace	932:16:30145:30169	5982456	0	True				
ANR	5983199	RelationalExpression	r_space ( rptr ) < min_trace		5982456	0		<			
ANR	5983200	CallExpression	r_space ( rptr )		5982456	0					
ANR	5983201	Callee	r_space		5982456	0					
ANR	5983202	Identifier	r_space		5982456	0					
ANR	5983203	ArgumentList	rptr		5982456	1					
ANR	5983204	Argument	rptr		5982456	0					
ANR	5983205	Identifier	rptr		5982456	0					
ANR	5983206	Identifier	min_trace		5982456	1					
ANR	5983207	CompoundStatement		145:43:4821:4821	5982456	1					
ANR	5983208	ExpressionStatement	pptr = ( ref_packed * ) ( rptr + 1 )	933:16:30240:30272	5982456	0	True				
ANR	5983209	AssignmentExpression	pptr = ( ref_packed * ) ( rptr + 1 )		5982456	0		=			
ANR	5983210	Identifier	pptr		5982456	0					
ANR	5983211	CastExpression	( ref_packed * ) ( rptr + 1 )		5982456	1					
ANR	5983212	CastTarget	ref_packed *		5982456	0					
ANR	5983213	AdditiveExpression	rptr + 1		5982456	1		+			
ANR	5983214	Identifier	rptr		5982456	0					
ANR	5983215	PrimaryExpression	1		5982456	1					
ANR	5983216	GotoStatement	goto tr ;	934:16:30290:30297	5982456	1	True				
ANR	5983217	Identifier	tr		5982456	0					
ANR	5983218	ExpressionStatement	sp -> ptr = rptr + 1	936:12:30325:30343	5982456	14	True				
ANR	5983219	AssignmentExpression	sp -> ptr = rptr + 1		5982456	0		=			
ANR	5983220	PtrMemberAccess	sp -> ptr		5982456	0					
ANR	5983221	Identifier	sp		5982456	0					
ANR	5983222	Identifier	ptr		5982456	1					
ANR	5983223	AdditiveExpression	rptr + 1		5982456	1		+			
ANR	5983224	Identifier	rptr		5982456	0					
ANR	5983225	PrimaryExpression	1		5982456	1					
ANR	5983226	SwitchStatement	switch ( r_type ( rptr ) )		5982456	15					
ANR	5983227	Condition	r_type ( rptr )	937:20:30365:30376	5982456	0	True				
ANR	5983228	CallExpression	r_type ( rptr )		5982456	0					
ANR	5983229	Callee	r_type		5982456	0					
ANR	5983230	Identifier	r_type		5982456	0					
ANR	5983231	ArgumentList	rptr		5982456	1					
ANR	5983232	Argument	rptr		5982456	0					
ANR	5983233	Identifier	rptr		5982456	0					
ANR	5983234	CompoundStatement		150:34:5028:5028	5982456	1					
ANR	5983235	Label	case t_file :	939:16:30436:30447	5982456	0	True				
ANR	5983236	Identifier	t_file		5982456	0					
ANR	5983237	ExpressionStatement	nptr = rptr -> value . pfile	940:20:30469:30493	5982456	1	True				
ANR	5983238	AssignmentExpression	nptr = rptr -> value . pfile		5982456	0		=			
ANR	5983239	Identifier	nptr		5982456	0					
ANR	5983240	MemberAccess	rptr -> value . pfile		5982456	1					
ANR	5983241	PtrMemberAccess	rptr -> value		5982456	0					
ANR	5983242	Identifier	rptr		5982456	0					
ANR	5983243	Identifier	value		5982456	1					
ANR	5983244	Identifier	pfile		5982456	1					
ANR	5983245	Label	rs :	941:18:30513:30515	5982456	2	True				
ANR	5983246	Identifier	rs		5982456	0					
ANR	5983247	ExpressionStatement	sp [ 1 ] . is_refs = false	941:21:30516:30537	5982456	3	True				
ANR	5983248	AssignmentExpression	sp [ 1 ] . is_refs = false		5982456	0		=			
ANR	5983249	MemberAccess	sp [ 1 ] . is_refs		5982456	0					
ANR	5983250	ArrayIndexing	sp [ 1 ]		5982456	0					
ANR	5983251	Identifier	sp		5982456	0					
ANR	5983252	PrimaryExpression	1		5982456	1					
ANR	5983253	Identifier	is_refs		5982456	1					
ANR	5983254	Identifier	false		5982456	1					
ANR	5983255	ExpressionStatement	sp [ 1 ] . index = 0	942:20:30559:30574	5982456	4	True				
ANR	5983256	AssignmentExpression	sp [ 1 ] . index = 0		5982456	0		=			
ANR	5983257	MemberAccess	sp [ 1 ] . index		5982456	0					
ANR	5983258	ArrayIndexing	sp [ 1 ]		5982456	0					
ANR	5983259	Identifier	sp		5982456	0					
ANR	5983260	PrimaryExpression	1		5982456	1					
ANR	5983261	Identifier	index		5982456	1					
ANR	5983262	PrimaryExpression	0		5982456	1					
ANR	5983263	IfStatement	if ( sp == stop )		5982456	5					
ANR	5983264	Condition	sp == stop	943:24:30600:30609	5982456	0	True				
ANR	5983265	EqualityExpression	sp == stop		5982456	0		==			
ANR	5983266	Identifier	sp		5982456	0					
ANR	5983267	Identifier	stop		5982456	1					
ANR	5983268	CompoundStatement		156:36:5261:5261	5982456	1					
ANR	5983269	ExpressionStatement	ptp = ptr_struct_type	944:24:30638:30659	5982456	0	True				
ANR	5983270	AssignmentExpression	ptp = ptr_struct_type		5982456	0		=			
ANR	5983271	Identifier	ptp		5982456	0					
ANR	5983272	Identifier	ptr_struct_type		5982456	1					
ANR	5983273	BreakStatement	break ;	945:24:30685:30690	5982456	1	True				
ANR	5983274	ExpressionStatement	nep . ptr = nptr	947:20:30734:30748	5982456	6	True				
ANR	5983275	AssignmentExpression	nep . ptr = nptr		5982456	0		=			
ANR	5983276	MemberAccess	nep . ptr		5982456	0					
ANR	5983277	Identifier	nep		5982456	0					
ANR	5983278	Identifier	ptr		5982456	1					
ANR	5983279	Identifier	nptr		5982456	1					
ANR	5983280	IfStatement	"if ( ! ptr_struct_mark ( & nep , pstate ) )"		5982456	7					
ANR	5983281	Condition	"! ptr_struct_mark ( & nep , pstate )"	948:24:30774:30803	5982456	0	True				
ANR	5983282	UnaryOperationExpression	"! ptr_struct_mark ( & nep , pstate )"		5982456	0					
ANR	5983283	UnaryOperator	!		5982456	0					
ANR	5983284	CallExpression	"ptr_struct_mark ( & nep , pstate )"		5982456	1					
ANR	5983285	Callee	ptr_struct_mark		5982456	0					
ANR	5983286	Identifier	ptr_struct_mark		5982456	0					
ANR	5983287	ArgumentList	& nep		5982456	1					
ANR	5983288	Argument	& nep		5982456	0					
ANR	5983289	UnaryOperationExpression	& nep		5982456	0					
ANR	5983290	UnaryOperator	&		5982456	0					
ANR	5983291	Identifier	nep		5982456	1					
ANR	5983292	Argument	pstate		5982456	1					
ANR	5983293	Identifier	pstate		5982456	0					
ANR	5983294	GotoStatement	goto nr ;	949:24:30830:30837	5982456	1	True				
ANR	5983295	Identifier	nr		5982456	0					
ANR	5983296	Statement	new	950:20:30859:30861	5982456	8	True				
ANR	5983297	Statement	|=	950:24:30863:30864	5982456	9	True				
ANR	5983298	ExpressionStatement	1	950:27:30866:30867	5982456	10	True				
ANR	5983299	PrimaryExpression	1		5982456	0					
ANR	5983300	ExpressionStatement	( ++ sp ) -> ptr = nptr	951:20:30889:30907	5982456	11	True				
ANR	5983301	AssignmentExpression	( ++ sp ) -> ptr = nptr		5982456	0		=			
ANR	5983302	PtrMemberAccess	( ++ sp ) -> ptr		5982456	0					
ANR	5983303	UnaryExpression	++ sp		5982456	0					
ANR	5983304	IncDec	++		5982456	0					
ANR	5983305	Identifier	sp		5982456	1					
ANR	5983306	Identifier	ptr		5982456	1					
ANR	5983307	Identifier	nptr		5982456	1					
ANR	5983308	GotoStatement	goto do_struct ;	952:20:30929:30943	5982456	12	True				
ANR	5983309	Identifier	do_struct		5982456	0					
ANR	5983310	Label	case t_device :	953:16:30961:30974	5982456	13	True				
ANR	5983311	Identifier	t_device		5982456	0					
ANR	5983312	ExpressionStatement	nptr = rptr -> value . pdevice	954:20:30996:31022	5982456	14	True				
ANR	5983313	AssignmentExpression	nptr = rptr -> value . pdevice		5982456	0		=			
ANR	5983314	Identifier	nptr		5982456	0					
ANR	5983315	MemberAccess	rptr -> value . pdevice		5982456	1					
ANR	5983316	PtrMemberAccess	rptr -> value		5982456	0					
ANR	5983317	Identifier	rptr		5982456	0					
ANR	5983318	Identifier	value		5982456	1					
ANR	5983319	Identifier	pdevice		5982456	1					
ANR	5983320	GotoStatement	goto rs ;	955:20:31044:31051	5982456	15	True				
ANR	5983321	Identifier	rs		5982456	0					
ANR	5983322	Label	case t_fontID :	956:16:31069:31082	5982456	16	True				
ANR	5983323	Identifier	t_fontID		5982456	0					
ANR	5983324	Label	case t_struct :	957:16:31100:31113	5982456	17	True				
ANR	5983325	Identifier	t_struct		5982456	0					
ANR	5983326	Label	case t_astruct :	958:16:31131:31145	5982456	18	True				
ANR	5983327	Identifier	t_astruct		5982456	0					
ANR	5983328	ExpressionStatement	nptr = rptr -> value . pstruct	959:20:31167:31193	5982456	19	True				
ANR	5983329	AssignmentExpression	nptr = rptr -> value . pstruct		5982456	0		=			
ANR	5983330	Identifier	nptr		5982456	0					
ANR	5983331	MemberAccess	rptr -> value . pstruct		5982456	1					
ANR	5983332	PtrMemberAccess	rptr -> value		5982456	0					
ANR	5983333	Identifier	rptr		5982456	0					
ANR	5983334	Identifier	value		5982456	1					
ANR	5983335	Identifier	pstruct		5982456	1					
ANR	5983336	GotoStatement	goto rs ;	960:20:31215:31222	5982456	20	True				
ANR	5983337	Identifier	rs		5982456	0					
ANR	5983338	Label	case t_dictionary :	962:16:31295:31312	5982456	21	True				
ANR	5983339	Identifier	t_dictionary		5982456	0					
ANR	5983340	ExpressionStatement	nptr = rptr -> value . pdict	963:20:31334:31358	5982456	22	True				
ANR	5983341	AssignmentExpression	nptr = rptr -> value . pdict		5982456	0		=			
ANR	5983342	Identifier	nptr		5982456	0					
ANR	5983343	MemberAccess	rptr -> value . pdict		5982456	1					
ANR	5983344	PtrMemberAccess	rptr -> value		5982456	0					
ANR	5983345	Identifier	rptr		5982456	0					
ANR	5983346	Identifier	value		5982456	1					
ANR	5983347	Identifier	pdict		5982456	1					
ANR	5983348	ExpressionStatement	sp [ 1 ] . index = sizeof ( dict ) / sizeof ( ref )	964:20:31380:31420	5982456	23	True				
ANR	5983349	AssignmentExpression	sp [ 1 ] . index = sizeof ( dict ) / sizeof ( ref )		5982456	0		=			
ANR	5983350	MemberAccess	sp [ 1 ] . index		5982456	0					
ANR	5983351	ArrayIndexing	sp [ 1 ]		5982456	0					
ANR	5983352	Identifier	sp		5982456	0					
ANR	5983353	PrimaryExpression	1		5982456	1					
ANR	5983354	Identifier	index		5982456	1					
ANR	5983355	MultiplicativeExpression	sizeof ( dict ) / sizeof ( ref )		5982456	1		/			
ANR	5983356	SizeofExpression	sizeof ( dict )		5982456	0					
ANR	5983357	Sizeof	sizeof		5982456	0					
ANR	5983358	SizeofOperand	dict		5982456	1					
ANR	5983359	SizeofExpression	sizeof ( ref )		5982456	1					
ANR	5983360	Sizeof	sizeof		5982456	0					
ANR	5983361	SizeofOperand	ref		5982456	1					
ANR	5983362	GotoStatement	goto rrp ;	965:20:31442:31450	5982456	24	True				
ANR	5983363	Identifier	rrp		5982456	0					
ANR	5983364	Label	case t_array :	966:16:31468:31480	5982456	25	True				
ANR	5983365	Identifier	t_array		5982456	0					
ANR	5983366	ExpressionStatement	nptr = rptr -> value . refs	967:20:31502:31525	5982456	26	True				
ANR	5983367	AssignmentExpression	nptr = rptr -> value . refs		5982456	0		=			
ANR	5983368	Identifier	nptr		5982456	0					
ANR	5983369	MemberAccess	rptr -> value . refs		5982456	1					
ANR	5983370	PtrMemberAccess	rptr -> value		5982456	0					
ANR	5983371	Identifier	rptr		5982456	0					
ANR	5983372	Identifier	value		5982456	1					
ANR	5983373	Identifier	refs		5982456	1					
ANR	5983374	Label	rr :	968:18:31545:31547	5982456	27	True				
ANR	5983375	Identifier	rr		5982456	0					
ANR	5983376	IfStatement	if ( ( sp [ 1 ] . index = r_size ( rptr ) ) == 0 )		5982456	28					
ANR	5983377	Condition	( sp [ 1 ] . index = r_size ( rptr ) ) == 0	968:25:31552:31584	5982456	0	True				
ANR	5983378	EqualityExpression	( sp [ 1 ] . index = r_size ( rptr ) ) == 0		5982456	0		==			
ANR	5983379	AssignmentExpression	sp [ 1 ] . index = r_size ( rptr )		5982456	0		=			
ANR	5983380	MemberAccess	sp [ 1 ] . index		5982456	0					
ANR	5983381	ArrayIndexing	sp [ 1 ]		5982456	0					
ANR	5983382	Identifier	sp		5982456	0					
ANR	5983383	PrimaryExpression	1		5982456	1					
ANR	5983384	Identifier	index		5982456	1					
ANR	5983385	CallExpression	r_size ( rptr )		5982456	1					
ANR	5983386	Callee	r_size		5982456	0					
ANR	5983387	Identifier	r_size		5982456	0					
ANR	5983388	ArgumentList	rptr		5982456	1					
ANR	5983389	Argument	rptr		5982456	0					
ANR	5983390	Identifier	rptr		5982456	0					
ANR	5983391	PrimaryExpression	0		5982456	1					
ANR	5983392	CompoundStatement		181:60:6236:6236	5982456	1					
ANR	5983393	ExpressionStatement	rptr -> value . refs = 0	970:24:31708:31728	5982456	0	True				
ANR	5983394	AssignmentExpression	rptr -> value . refs = 0		5982456	0		=			
ANR	5983395	MemberAccess	rptr -> value . refs		5982456	0					
ANR	5983396	PtrMemberAccess	rptr -> value		5982456	0					
ANR	5983397	Identifier	rptr		5982456	0					
ANR	5983398	Identifier	value		5982456	1					
ANR	5983399	Identifier	refs		5982456	1					
ANR	5983400	PrimaryExpression	0		5982456	1					
ANR	5983401	GotoStatement	goto nr ;	971:24:31754:31761	5982456	1	True				
ANR	5983402	Identifier	nr		5982456	0					
ANR	5983403	Label	rrp :	973:18:31803:31806	5982456	29	True				
ANR	5983404	Identifier	rrp		5982456	0					
ANR	5983405	Label	rrc :	974:18:31826:31829	5982456	30	True				
ANR	5983406	Identifier	rrc		5982456	0					
ANR	5983407	ExpressionStatement	sp [ 1 ] . is_refs = true	974:22:31830:31850	5982456	31	True				
ANR	5983408	AssignmentExpression	sp [ 1 ] . is_refs = true		5982456	0		=			
ANR	5983409	MemberAccess	sp [ 1 ] . is_refs		5982456	0					
ANR	5983410	ArrayIndexing	sp [ 1 ]		5982456	0					
ANR	5983411	Identifier	sp		5982456	0					
ANR	5983412	PrimaryExpression	1		5982456	1					
ANR	5983413	Identifier	is_refs		5982456	1					
ANR	5983414	Identifier	true		5982456	1					
ANR	5983415	IfStatement	if ( sp == stop )		5982456	32					
ANR	5983416	Condition	sp == stop	975:24:31876:31885	5982456	0	True				
ANR	5983417	EqualityExpression	sp == stop		5982456	0		==			
ANR	5983418	Identifier	sp		5982456	0					
ANR	5983419	Identifier	stop		5982456	1					
ANR	5983420	CompoundStatement		188:36:6537:6537	5982456	1					
ANR	5983421	ExpressionStatement	ptp = ptr_ref_type	983:24:32306:32324	5982456	0	True				
ANR	5983422	AssignmentExpression	ptp = ptr_ref_type		5982456	0		=			
ANR	5983423	Identifier	ptp		5982456	0					
ANR	5983424	Identifier	ptr_ref_type		5982456	1					
ANR	5983425	BreakStatement	break ;	984:24:32350:32355	5982456	1	True				
ANR	5983426	Statement	new	986:20:32399:32401	5982456	33	True				
ANR	5983427	Statement	|=	986:24:32403:32404	5982456	34	True				
ANR	5983428	ExpressionStatement	1	986:27:32406:32407	5982456	35	True				
ANR	5983429	PrimaryExpression	1		5982456	0					
ANR	5983430	ExpressionStatement	( ++ sp ) -> ptr = nptr	987:20:32429:32447	5982456	36	True				
ANR	5983431	AssignmentExpression	( ++ sp ) -> ptr = nptr		5982456	0		=			
ANR	5983432	PtrMemberAccess	( ++ sp ) -> ptr		5982456	0					
ANR	5983433	UnaryExpression	++ sp		5982456	0					
ANR	5983434	IncDec	++		5982456	0					
ANR	5983435	Identifier	sp		5982456	1					
ANR	5983436	Identifier	ptr		5982456	1					
ANR	5983437	Identifier	nptr		5982456	1					
ANR	5983438	GotoStatement	goto do_refs ;	988:20:32469:32481	5982456	37	True				
ANR	5983439	Identifier	do_refs		5982456	0					
ANR	5983440	Label	case t_mixedarray :	989:16:32499:32516	5982456	38	True				
ANR	5983441	Identifier	t_mixedarray		5982456	0					
ANR	5983442	Label	case t_shortarray :	990:16:32534:32551	5982456	39	True				
ANR	5983443	Identifier	t_shortarray		5982456	0					
ANR	5983444	ExpressionStatement	nptr = rptr -> value . writable_packed	991:20:32573:32607	5982456	40	True				
ANR	5983445	AssignmentExpression	nptr = rptr -> value . writable_packed		5982456	0		=			
ANR	5983446	Identifier	nptr		5982456	0					
ANR	5983447	MemberAccess	rptr -> value . writable_packed		5982456	1					
ANR	5983448	PtrMemberAccess	rptr -> value		5982456	0					
ANR	5983449	Identifier	rptr		5982456	0					
ANR	5983450	Identifier	value		5982456	1					
ANR	5983451	Identifier	writable_packed		5982456	1					
ANR	5983452	GotoStatement	goto rr ;	992:20:32629:32636	5982456	41	True				
ANR	5983453	Identifier	rr		5982456	0					
ANR	5983454	Label	case t_name :	993:16:32654:32665	5982456	42	True				
ANR	5983455	Identifier	t_name		5982456	0					
ANR	5983456	ExpressionStatement	"mark_name ( names_index ( nt , rptr ) )"	994:20:32687:32719	5982456	43	True				
ANR	5983457	CallExpression	"mark_name ( names_index ( nt , rptr ) )"		5982456	0					
ANR	5983458	Callee	mark_name		5982456	0					
ANR	5983459	Identifier	mark_name		5982456	0					
ANR	5983460	ArgumentList	"names_index ( nt , rptr )"		5982456	1					
ANR	5983461	Argument	"names_index ( nt , rptr )"		5982456	0					
ANR	5983462	CallExpression	"names_index ( nt , rptr )"		5982456	0					
ANR	5983463	Callee	names_index		5982456	0					
ANR	5983464	Identifier	names_index		5982456	0					
ANR	5983465	ArgumentList	nt		5982456	1					
ANR	5983466	Argument	nt		5982456	0					
ANR	5983467	Identifier	nt		5982456	0					
ANR	5983468	Argument	rptr		5982456	1					
ANR	5983469	Identifier	rptr		5982456	0					
ANR	5983470	Label	nr :	995:18:32739:32741	5982456	44	True				
ANR	5983471	Identifier	nr		5982456	0					
ANR	5983472	ExpressionStatement	pptr = ( ref_packed * ) ( rptr + 1 )	995:21:32742:32774	5982456	45	True				
ANR	5983473	AssignmentExpression	pptr = ( ref_packed * ) ( rptr + 1 )		5982456	0		=			
ANR	5983474	Identifier	pptr		5982456	0					
ANR	5983475	CastExpression	( ref_packed * ) ( rptr + 1 )		5982456	1					
ANR	5983476	CastTarget	ref_packed *		5982456	0					
ANR	5983477	AdditiveExpression	rptr + 1		5982456	1		+			
ANR	5983478	Identifier	rptr		5982456	0					
ANR	5983479	PrimaryExpression	1		5982456	1					
ANR	5983480	GotoStatement	goto tr ;	996:20:32796:32803	5982456	46	True				
ANR	5983481	Identifier	tr		5982456	0					
ANR	5983482	Label	case t_string :	997:16:32821:32834	5982456	47	True				
ANR	5983483	Identifier	t_string		5982456	0					
ANR	5983484	IfStatement	"if ( gc_string_mark ( rptr -> value . bytes , r_size ( rptr ) , true , pstate ) )"		5982456	48					
ANR	5983485	Condition	"gc_string_mark ( rptr -> value . bytes , r_size ( rptr ) , true , pstate )"	998:24:32860:32920	5982456	0	True				
ANR	5983486	CallExpression	"gc_string_mark ( rptr -> value . bytes , r_size ( rptr ) , true , pstate )"		5982456	0					
ANR	5983487	Callee	gc_string_mark		5982456	0					
ANR	5983488	Identifier	gc_string_mark		5982456	0					
ANR	5983489	ArgumentList	rptr -> value . bytes		5982456	1					
ANR	5983490	Argument	rptr -> value . bytes		5982456	0					
ANR	5983491	MemberAccess	rptr -> value . bytes		5982456	0					
ANR	5983492	PtrMemberAccess	rptr -> value		5982456	0					
ANR	5983493	Identifier	rptr		5982456	0					
ANR	5983494	Identifier	value		5982456	1					
ANR	5983495	Identifier	bytes		5982456	1					
ANR	5983496	Argument	r_size ( rptr )		5982456	1					
ANR	5983497	CallExpression	r_size ( rptr )		5982456	0					
ANR	5983498	Callee	r_size		5982456	0					
ANR	5983499	Identifier	r_size		5982456	0					
ANR	5983500	ArgumentList	rptr		5982456	1					
ANR	5983501	Argument	rptr		5982456	0					
ANR	5983502	Identifier	rptr		5982456	0					
ANR	5983503	Argument	true		5982456	2					
ANR	5983504	Identifier	true		5982456	0					
ANR	5983505	Argument	pstate		5982456	3					
ANR	5983506	Identifier	pstate		5982456	0					
ANR	5983507	Statement	new	999:24:32947:32949	5982456	1	True				
ANR	5983508	Statement	|=	999:28:32951:32952	5982456	49	True				
ANR	5983509	ExpressionStatement	1	999:31:32954:32955	5982456	50	True				
ANR	5983510	PrimaryExpression	1		5982456	0					
ANR	5983511	GotoStatement	goto nr ;	1000:20:32977:32984	5982456	51	True				
ANR	5983512	Identifier	nr		5982456	0					
ANR	5983513	Label	case t_oparray :	1001:16:33002:33016	5982456	52	True				
ANR	5983514	Identifier	t_oparray		5982456	0					
ANR	5983515	ExpressionStatement	nptr = rptr -> value . refs	1002:20:33038:33061	5982456	53	True				
ANR	5983516	AssignmentExpression	nptr = rptr -> value . refs		5982456	0		=			
ANR	5983517	Identifier	nptr		5982456	0					
ANR	5983518	MemberAccess	rptr -> value . refs		5982456	1					
ANR	5983519	PtrMemberAccess	rptr -> value		5982456	0					
ANR	5983520	Identifier	rptr		5982456	0					
ANR	5983521	Identifier	value		5982456	1					
ANR	5983522	Identifier	refs		5982456	1					
ANR	5983523	ExpressionStatement	sp [ 1 ] . index = 1	1003:20:33103:33118	5982456	54	True				
ANR	5983524	AssignmentExpression	sp [ 1 ] . index = 1		5982456	0		=			
ANR	5983525	MemberAccess	sp [ 1 ] . index		5982456	0					
ANR	5983526	ArrayIndexing	sp [ 1 ]		5982456	0					
ANR	5983527	Identifier	sp		5982456	0					
ANR	5983528	PrimaryExpression	1		5982456	1					
ANR	5983529	Identifier	index		5982456	1					
ANR	5983530	PrimaryExpression	1		5982456	1					
ANR	5983531	GotoStatement	goto rrc ;	1004:20:33140:33148	5982456	55	True				
ANR	5983532	Identifier	rrc		5982456	0					
ANR	5983533	Label	default :	1005:16:33166:33173	5982456	56	True				
ANR	5983534	Identifier	default		5982456	0					
ANR	5983535	GotoStatement	goto nr ;	1006:20:33195:33202	5982456	57	True				
ANR	5983536	Identifier	nr		5982456	0					
ANR	5983537	Label	push :	1012:6:33294:33298	5982456	6	True				
ANR	5983538	Identifier	push		5982456	0					
ANR	5983539	IfStatement	if ( sp == stop )		5982456	7					
ANR	5983540	Condition	sp == stop	1013:12:33312:33321	5982456	0	True				
ANR	5983541	EqualityExpression	sp == stop		5982456	0		==			
ANR	5983542	Identifier	sp		5982456	0					
ANR	5983543	Identifier	stop		5982456	1					
ANR	5983544	CompoundStatement		227:12:8022:8066	5982456	1					
ANR	5983545	IdentifierDeclStatement	"int new_added = gc_extend_stack ( pms , pstate ) ;"	1014:12:33373:33417	5982456	0	True				
ANR	5983546	IdentifierDecl	"new_added = gc_extend_stack ( pms , pstate )"		5982456	0					
ANR	5983547	IdentifierDeclType	int		5982456	0					
ANR	5983548	Identifier	new_added		5982456	1					
ANR	5983549	AssignmentExpression	"new_added = gc_extend_stack ( pms , pstate )"		5982456	2		=			
ANR	5983550	Identifier	new_added		5982456	0					
ANR	5983551	CallExpression	"gc_extend_stack ( pms , pstate )"		5982456	1					
ANR	5983552	Callee	gc_extend_stack		5982456	0					
ANR	5983553	Identifier	gc_extend_stack		5982456	0					
ANR	5983554	ArgumentList	pms		5982456	1					
ANR	5983555	Argument	pms		5982456	0					
ANR	5983556	Identifier	pms		5982456	0					
ANR	5983557	Argument	pstate		5982456	1					
ANR	5983558	Identifier	pstate		5982456	0					
ANR	5983559	IfStatement	if ( new_added )		5982456	1					
ANR	5983560	Condition	new_added	1016:16:33436:33444	5982456	0	True				
ANR	5983561	Identifier	new_added		5982456	0					
ANR	5983562	CompoundStatement		229:27:8096:8096	5982456	1					
ANR	5983563	Statement	new	1017:16:33465:33467	5982456	0	True				
ANR	5983564	Statement	|=	1017:20:33469:33470	5982456	1	True				
ANR	5983565	ExpressionStatement	new_added	1017:23:33472:33481	5982456	2	True				
ANR	5983566	Identifier	new_added		5982456	0					
ANR	5983567	ContinueStatement	continue ;	1018:16:33499:33507	5982456	3	True				
ANR	5983568	ExpressionStatement	pms = pms -> next	1020:12:33535:33550	5982456	2	True				
ANR	5983569	AssignmentExpression	pms = pms -> next		5982456	0		=			
ANR	5983570	Identifier	pms		5982456	0					
ANR	5983571	PtrMemberAccess	pms -> next		5982456	1					
ANR	5983572	Identifier	pms		5982456	0					
ANR	5983573	Identifier	next		5982456	1					
ANR	5983574	ExpressionStatement	stop = pms -> entries + pms -> count - 1	1021:12:33564:33600	5982456	3	True				
ANR	5983575	AssignmentExpression	stop = pms -> entries + pms -> count - 1		5982456	0		=			
ANR	5983576	Identifier	stop		5982456	0					
ANR	5983577	AdditiveExpression	pms -> entries + pms -> count - 1		5982456	1		+			
ANR	5983578	PtrMemberAccess	pms -> entries		5982456	0					
ANR	5983579	Identifier	pms		5982456	0					
ANR	5983580	Identifier	entries		5982456	1					
ANR	5983581	AdditiveExpression	pms -> count - 1		5982456	1		-			
ANR	5983582	PtrMemberAccess	pms -> count		5982456	0					
ANR	5983583	Identifier	pms		5982456	0					
ANR	5983584	Identifier	count		5982456	1					
ANR	5983585	PrimaryExpression	1		5982456	1					
ANR	5983586	ExpressionStatement	pms -> entries [ 1 ] = sp [ 1 ]	1022:12:33614:33637	5982456	4	True				
ANR	5983587	AssignmentExpression	pms -> entries [ 1 ] = sp [ 1 ]		5982456	0		=			
ANR	5983588	ArrayIndexing	pms -> entries [ 1 ]		5982456	0					
ANR	5983589	PtrMemberAccess	pms -> entries		5982456	0					
ANR	5983590	Identifier	pms		5982456	0					
ANR	5983591	Identifier	entries		5982456	1					
ANR	5983592	PrimaryExpression	1		5982456	1					
ANR	5983593	ArrayIndexing	sp [ 1 ]		5982456	1					
ANR	5983594	Identifier	sp		5982456	0					
ANR	5983595	PrimaryExpression	1		5982456	1					
ANR	5983596	ExpressionStatement	sp = pms -> entries	1023:12:33651:33668	5982456	5	True				
ANR	5983597	AssignmentExpression	sp = pms -> entries		5982456	0		=			
ANR	5983598	Identifier	sp		5982456	0					
ANR	5983599	PtrMemberAccess	pms -> entries		5982456	1					
ANR	5983600	Identifier	pms		5982456	0					
ANR	5983601	Identifier	entries		5982456	1					
ANR	5983602	IfStatement	if ( ! sp [ 1 ] . is_refs )		5982456	8					
ANR	5983603	Condition	! sp [ 1 ] . is_refs	1026:12:33740:33753	5982456	0	True				
ANR	5983604	UnaryOperationExpression	! sp [ 1 ] . is_refs		5982456	0					
ANR	5983605	UnaryOperator	!		5982456	0					
ANR	5983606	MemberAccess	sp [ 1 ] . is_refs		5982456	1					
ANR	5983607	ArrayIndexing	sp [ 1 ]		5982456	0					
ANR	5983608	Identifier	sp		5982456	0					
ANR	5983609	PrimaryExpression	1		5982456	1					
ANR	5983610	Identifier	is_refs		5982456	1					
ANR	5983611	CompoundStatement		239:28:8405:8405	5982456	1					
ANR	5983612	ExpressionStatement	nep . ptr = nptr	1027:12:33770:33784	5982456	0	True				
ANR	5983613	AssignmentExpression	nep . ptr = nptr		5982456	0		=			
ANR	5983614	MemberAccess	nep . ptr		5982456	0					
ANR	5983615	Identifier	nep		5982456	0					
ANR	5983616	Identifier	ptr		5982456	1					
ANR	5983617	Identifier	nptr		5982456	1					
ANR	5983618	IfStatement	"if ( ! ( * ptp -> mark ) ( & nep , pstate ) )"		5982456	1					
ANR	5983619	Condition	"! ( * ptp -> mark ) ( & nep , pstate )"	1028:16:33802:33829	5982456	0	True				
ANR	5983620	UnaryOperationExpression	"! ( * ptp -> mark ) ( & nep , pstate )"		5982456	0					
ANR	5983621	UnaryOperator	!		5982456	0					
ANR	5983622	CallExpression	"( * ptp -> mark ) ( & nep , pstate )"		5982456	1					
ANR	5983623	Callee	* ptp -> mark		5982456	0					
ANR	5983624	UnaryOperationExpression	* ptp -> mark		5982456	0					
ANR	5983625	UnaryOperator	*		5982456	0					
ANR	5983626	PtrMemberAccess	ptp -> mark		5982456	1					
ANR	5983627	Identifier	ptp		5982456	0					
ANR	5983628	Identifier	mark		5982456	1					
ANR	5983629	ArgumentList	& nep		5982456	1					
ANR	5983630	Argument	& nep		5982456	0					
ANR	5983631	UnaryOperationExpression	& nep		5982456	0					
ANR	5983632	UnaryOperator	&		5982456	0					
ANR	5983633	Identifier	nep		5982456	1					
ANR	5983634	Argument	pstate		5982456	1					
ANR	5983635	Identifier	pstate		5982456	0					
ANR	5983636	ContinueStatement	continue ;	1029:16:33848:33856	5982456	1	True				
ANR	5983637	Statement	new	1030:12:33870:33872	5982456	2	True				
ANR	5983638	Statement	|=	1030:16:33874:33875	5982456	3	True				
ANR	5983639	ExpressionStatement	1	1030:19:33877:33878	5982456	4	True				
ANR	5983640	PrimaryExpression	1		5982456	0					
ANR	5983641	ExpressionStatement	( ++ sp ) -> ptr = nptr	1032:8:33898:33916	5982456	9	True				
ANR	5983642	AssignmentExpression	( ++ sp ) -> ptr = nptr		5982456	0		=			
ANR	5983643	PtrMemberAccess	( ++ sp ) -> ptr		5982456	0					
ANR	5983644	UnaryExpression	++ sp		5982456	0					
ANR	5983645	IncDec	++		5982456	0					
ANR	5983646	Identifier	sp		5982456	1					
ANR	5983647	Identifier	ptr		5982456	1					
ANR	5983648	Identifier	nptr		5982456	1					
ANR	5983649	Statement	return	1034:4:33928:33933	5982456	23	True				
ANR	5983650	Statement	new	1034:11:33935:33937	5982456	24	True				
ANR	5983651	ExpressionStatement		1034:14:33938:33938	5982456	25	True				
ANR	5983652	ReturnType	static int		5982456	1					
ANR	5983653	Identifier	gc_trace		5982456	2					
ANR	5983654	ParameterList	"gs_gc_root_t * rp , gc_state_t * pstate , gc_mark_stack * pmstack"		5982456	3					
ANR	5983655	Parameter	gs_gc_root_t * rp	787:9:25285:25301	5982456	0	True				
ANR	5983656	ParameterType	gs_gc_root_t *		5982456	0					
ANR	5983657	Identifier	rp		5982456	1					
ANR	5983658	Parameter	gc_state_t * pstate	787:28:25304:25322	5982456	1	True				
ANR	5983659	ParameterType	gc_state_t *		5982456	0					
ANR	5983660	Identifier	pstate		5982456	1					
ANR	5983661	Parameter	gc_mark_stack * pmstack	787:49:25325:25347	5982456	2	True				
ANR	5983662	ParameterType	gc_mark_stack *		5982456	0					
ANR	5983663	Identifier	pmstack		5982456	1					
ANR	5983664	CFGEntryNode	ENTRY		5982456		True				
ANR	5983665	CFGExitNode	EXIT		5982456		True				
ANR	5983666	InfiniteForNode	true		5982456		True				
ANR	5983667	Symbol	* sp		5982456						
ANR	5983668	Symbol	rp -> ptype -> mark		5982456						
ANR	5983669	Symbol	ptr_struct_type		5982456						
ANR	5983670	Symbol	pstate		5982456						
ANR	5983671	Symbol	ptr [ - 1 ] . o_type -> enum_ptrs		5982456						
ANR	5983672	Symbol	rptr		5982456						
ANR	5983673	Symbol	rptr -> value . writable_packed		5982456						
ANR	5983674	Symbol	pms -> next		5982456						
ANR	5983675	Symbol	rptr -> value . pfile		5982456						
ANR	5983676	Symbol	names_index		5982456						
ANR	5983677	Symbol	sp -> is_refs		5982456						
ANR	5983678	Symbol	ptp -> mark		5982456						
ANR	5983679	Symbol	rptr -> value . refs		5982456						
ANR	5983680	Symbol	rptr -> value . pstruct		5982456						
ANR	5983681	Symbol	r_packed_is_name		5982456						
ANR	5983682	Symbol	pms -> entries		5982456						
ANR	5983683	Symbol	gc_string_mark		5982456						
ANR	5983684	Symbol	gcst_get_memory_ptr		5982456						
ANR	5983685	Symbol	* ptp		5982456						
ANR	5983686	Symbol	pms		5982456						
ANR	5983687	Symbol	pms -> count		5982456						
ANR	5983688	Symbol	nep		5982456						
ANR	5983689	Symbol	* ptr		5982456						
ANR	5983690	Symbol	ptr_ref_type		5982456						
ANR	5983691	Symbol	ptr [ - 1 ] . o_type		5982456						
ANR	5983692	Symbol	rp -> p		5982456						
ANR	5983693	Symbol	nep . ptr		5982456						
ANR	5983694	Symbol	r_type		5982456						
ANR	5983695	Symbol	struct_type_name_string		5982456						
ANR	5983696	Symbol	NULL		5982456						
ANR	5983697	Symbol	packed_name_index		5982456						
ANR	5983698	Symbol	* * rp		5982456						
ANR	5983699	Symbol	pstate -> min_collect		5982456						
ANR	5983700	Symbol	* rp -> ptype		5982456						
ANR	5983701	Symbol	depth_dots		5982456						
ANR	5983702	Symbol	rptr -> value . bytes		5982456						
ANR	5983703	Symbol	* rp -> p		5982456						
ANR	5983704	Symbol	gc_extend_stack		5982456						
ANR	5983705	Symbol	stop		5982456						
ANR	5983706	Symbol	ptr_struct_mark		5982456						
ANR	5983707	Symbol	* pstate		5982456						
ANR	5983708	Symbol	rptr -> value		5982456						
ANR	5983709	Symbol	rptr -> value . pdevice		5982456						
ANR	5983710	Symbol	rptr -> value . pdict		5982456						
ANR	5983711	Symbol	min_trace		5982456						
ANR	5983712	Symbol	true		5982456						
ANR	5983713	Symbol	& nep		5982456						
ANR	5983714	Symbol	pstate -> ntable		5982456						
ANR	5983715	Symbol	nidx		5982456						
ANR	5983716	Symbol	rp		5982456						
ANR	5983717	Symbol	* pms		5982456						
ANR	5983718	Symbol	* * ptp		5982456						
ANR	5983719	Symbol	* * ptr		5982456						
ANR	5983720	Symbol	r_is_packed		5982456						
ANR	5983721	Symbol	nt		5982456						
ANR	5983722	Symbol	rp -> ptype		5982456						
ANR	5983723	Symbol	( ++ sp ) -> ptr		5982456						
ANR	5983724	Symbol	new_added		5982456						
ANR	5983725	Symbol	pptr		5982456						
ANR	5983726	Symbol	pms -> prev		5982456						
ANR	5983727	Symbol	pstate -> heap		5982456						
ANR	5983728	Symbol	* rp -> ptype -> mark		5982456						
ANR	5983729	Symbol	* rptr		5982456						
ANR	5983730	Symbol	r_space		5982456						
ANR	5983731	Symbol	r_has_attr		5982456						
ANR	5983732	Symbol	r_has_pmark		5982456						
ANR	5983733	Symbol	sp [ 1 ] . index		5982456						
ANR	5983734	Symbol	r_size		5982456						
ANR	5983735	Symbol	* mproc		5982456						
ANR	5983736	Symbol	* * * rp		5982456						
ANR	5983737	Symbol	names_index_ptr		5982456						
ANR	5983738	Symbol	pre_obj_contents_size		5982456						
ANR	5983739	Symbol	sp		5982456						
ANR	5983740	Symbol	* ptr [ - 1 ] . o_type		5982456						
ANR	5983741	Symbol	names_mark_index		5982456						
ANR	5983742	Symbol	sp -> index		5982456						
ANR	5983743	Symbol	* rp		5982456						
ANR	5983744	Symbol	false		5982456						
ANR	5983745	Symbol	* ptp -> mark		5982456						
ANR	5983746	Symbol	* * pms		5982456						
ANR	5983747	Symbol	ptp		5982456						
ANR	5983748	Symbol	sp -> ptr		5982456						
ANR	5983749	Symbol	gs_no_struct_enum_ptrs		5982456						
ANR	5983750	Symbol	pmstack		5982456						
ANR	5983751	Symbol	ptr		5982456						
ANR	5983752	Symbol	sp [ 1 ] . is_refs		5982456						
ANR	5983753	Symbol	nptr		5982456						
ANR	5983754	Symbol	* pms -> entries		5982456						
ANR	5983755	Symbol	* * rp -> ptype		5982456						
ANR	5983756	Symbol	mproc		5982456						
ANR	5983757	Symbol	l_mark		5982456						
ANR	5983758	Function	gc_extend_stack	1038:0:34029:35512							
ANR	5983759	FunctionDef	"gc_extend_stack (gc_mark_stack * pms , gc_state_t * pstate)"		5983758	0					
ANR	5983760	CompoundStatement		1040:0:34098:35512	5983758	0					
ANR	5983761	IfStatement	if ( pms -> next == 0 )		5983758	0					
ANR	5983762	Condition	pms -> next == 0	1041:8:34108:34121	5983758	0	True				
ANR	5983763	EqualityExpression	pms -> next == 0		5983758	0		==			
ANR	5983764	PtrMemberAccess	pms -> next		5983758	0					
ANR	5983765	Identifier	pms		5983758	0					
ANR	5983766	Identifier	next		5983758	1					
ANR	5983767	PrimaryExpression	0		5983758	1					
ANR	5983768	CompoundStatement		3:8:74:84	5983758	1					
ANR	5983769	IdentifierDeclStatement	uint count ;	1042:8:34173:34183	5983758	0	True				
ANR	5983770	IdentifierDecl	count		5983758	0					
ANR	5983771	IdentifierDeclType	uint		5983758	0					
ANR	5983772	Identifier	count		5983758	1					
ANR	5983773	ForStatement	for ( count = ms_size_desired ; count >= ms_size_min ; count >>= 1 )		5983758	1					
ANR	5983774	ForInit	count = ms_size_desired ;	1044:13:34199:34222	5983758	0	True				
ANR	5983775	AssignmentExpression	count = ms_size_desired		5983758	0		=			
ANR	5983776	Identifier	count		5983758	0					
ANR	5983777	Identifier	ms_size_desired		5983758	1					
ANR	5983778	Condition	count >= ms_size_min	1044:38:34224:34243	5983758	1	True				
ANR	5983779	RelationalExpression	count >= ms_size_min		5983758	0		>=			
ANR	5983780	Identifier	count		5983758	0					
ANR	5983781	Identifier	ms_size_min		5983758	1					
ANR	5983782	AssignmentExpression	count >>= 1	1044:60:34246:34256	5983758	2	True	>>=			
ANR	5983783	Identifier	count		5983758	0					
ANR	5983784	PrimaryExpression	1		5983758	1					
ANR	5983785	CompoundStatement		5:73:160:160	5983758	3					
ANR	5983786	ExpressionStatement	"pms -> next = ( gc_mark_stack * ) gs_alloc_bytes_immovable ( pstate -> heap , sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * count , ""gc mark stack"" )"	1045:12:34273:34547	5983758	0	True				
ANR	5983787	AssignmentExpression	"pms -> next = ( gc_mark_stack * ) gs_alloc_bytes_immovable ( pstate -> heap , sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * count , ""gc mark stack"" )"		5983758	0		=			
ANR	5983788	PtrMemberAccess	pms -> next		5983758	0					
ANR	5983789	Identifier	pms		5983758	0					
ANR	5983790	Identifier	next		5983758	1					
ANR	5983791	CastExpression	"( gc_mark_stack * ) gs_alloc_bytes_immovable ( pstate -> heap , sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * count , ""gc mark stack"" )"		5983758	1					
ANR	5983792	CastTarget	gc_mark_stack *		5983758	0					
ANR	5983793	CallExpression	"gs_alloc_bytes_immovable ( pstate -> heap , sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * count , ""gc mark stack"" )"		5983758	1					
ANR	5983794	Callee	gs_alloc_bytes_immovable		5983758	0					
ANR	5983795	Identifier	gs_alloc_bytes_immovable		5983758	0					
ANR	5983796	ArgumentList	pstate -> heap		5983758	1					
ANR	5983797	Argument	pstate -> heap		5983758	0					
ANR	5983798	PtrMemberAccess	pstate -> heap		5983758	0					
ANR	5983799	Identifier	pstate		5983758	0					
ANR	5983800	Identifier	heap		5983758	1					
ANR	5983801	Argument	sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * count		5983758	1					
ANR	5983802	AdditiveExpression	sizeof ( gc_mark_stack ) + sizeof ( ms_entry ) * count		5983758	0		+			
ANR	5983803	SizeofExpression	sizeof ( gc_mark_stack )		5983758	0					
ANR	5983804	Sizeof	sizeof		5983758	0					
ANR	5983805	SizeofOperand	gc_mark_stack		5983758	1					
ANR	5983806	MultiplicativeExpression	sizeof ( ms_entry ) * count		5983758	1		*			
ANR	5983807	SizeofExpression	sizeof ( ms_entry )		5983758	0					
ANR	5983808	Sizeof	sizeof		5983758	0					
ANR	5983809	SizeofOperand	ms_entry		5983758	1					
ANR	5983810	Identifier	count		5983758	1					
ANR	5983811	Argument	"""gc mark stack"""		5983758	2					
ANR	5983812	PrimaryExpression	"""gc mark stack"""		5983758	0					
ANR	5983813	IfStatement	if ( pms -> next != 0 )		5983758	1					
ANR	5983814	Condition	pms -> next != 0	1050:16:34565:34578	5983758	0	True				
ANR	5983815	EqualityExpression	pms -> next != 0		5983758	0		!=			
ANR	5983816	PtrMemberAccess	pms -> next		5983758	0					
ANR	5983817	Identifier	pms		5983758	0					
ANR	5983818	Identifier	next		5983758	1					
ANR	5983819	PrimaryExpression	0		5983758	1					
ANR	5983820	BreakStatement	break ;	1051:16:34597:34602	5983758	1	True				
ANR	5983821	IfStatement	if ( pms -> next == 0 )		5983758	2					
ANR	5983822	Condition	pms -> next == 0	1053:12:34626:34639	5983758	0	True				
ANR	5983823	EqualityExpression	pms -> next == 0		5983758	0		==			
ANR	5983824	PtrMemberAccess	pms -> next		5983758	0					
ANR	5983825	Identifier	pms		5983758	0					
ANR	5983826	Identifier	next		5983758	1					
ANR	5983827	PrimaryExpression	0		5983758	1					
ANR	5983828	CompoundStatement		17:12:698:735	5983758	1					
ANR	5983829	IdentifierDeclStatement	ms_entry * sp = pms -> entries + pms -> count - 1 ;	1054:12:34689:34733	5983758	0	True				
ANR	5983830	IdentifierDecl	* sp = pms -> entries + pms -> count - 1		5983758	0					
ANR	5983831	IdentifierDeclType	ms_entry *		5983758	0					
ANR	5983832	Identifier	sp		5983758	1					
ANR	5983833	AssignmentExpression	* sp = pms -> entries + pms -> count - 1		5983758	2		=			
ANR	5983834	Identifier	sp		5983758	0					
ANR	5983835	AdditiveExpression	pms -> entries + pms -> count - 1		5983758	1		+			
ANR	5983836	PtrMemberAccess	pms -> entries		5983758	0					
ANR	5983837	Identifier	pms		5983758	0					
ANR	5983838	Identifier	entries		5983758	1					
ANR	5983839	AdditiveExpression	pms -> count - 1		5983758	1		-			
ANR	5983840	PtrMemberAccess	pms -> count		5983758	0					
ANR	5983841	Identifier	pms		5983758	0					
ANR	5983842	Identifier	count		5983758	1					
ANR	5983843	PrimaryExpression	1		5983758	1					
ANR	5983844	IdentifierDeclStatement	byte * cptr = sp -> ptr ;	1055:12:34747:34767	5983758	1	True				
ANR	5983845	IdentifierDecl	* cptr = sp -> ptr		5983758	0					
ANR	5983846	IdentifierDeclType	byte *		5983758	0					
ANR	5983847	Identifier	cptr		5983758	1					
ANR	5983848	AssignmentExpression	* cptr = sp -> ptr		5983758	2		=			
ANR	5983849	Identifier	cptr		5983758	0					
ANR	5983850	PtrMemberAccess	sp -> ptr		5983758	1					
ANR	5983851	Identifier	sp		5983758	0					
ANR	5983852	Identifier	ptr		5983758	1					
ANR	5983853	IdentifierDeclStatement	"clump_t * cp = gc_locate ( cptr , pstate ) ;"	1056:12:34797:34834	5983758	2	True				
ANR	5983854	IdentifierDecl	"* cp = gc_locate ( cptr , pstate )"		5983758	0					
ANR	5983855	IdentifierDeclType	clump_t *		5983758	0					
ANR	5983856	Identifier	cp		5983758	1					
ANR	5983857	AssignmentExpression	"* cp = gc_locate ( cptr , pstate )"		5983758	2		=			
ANR	5983858	Identifier	cp		5983758	0					
ANR	5983859	CallExpression	"gc_locate ( cptr , pstate )"		5983758	1					
ANR	5983860	Callee	gc_locate		5983758	0					
ANR	5983861	Identifier	gc_locate		5983758	0					
ANR	5983862	ArgumentList	cptr		5983758	1					
ANR	5983863	Argument	cptr		5983758	0					
ANR	5983864	Identifier	cptr		5983758	0					
ANR	5983865	Argument	pstate		5983758	1					
ANR	5983866	Identifier	pstate		5983758	0					
ANR	5983867	Statement	int	1057:12:34848:34850	5983758	3	True				
ANR	5983868	Statement	new	1057:16:34852:34854	5983758	4	True				
ANR	5983869	Statement	=	1057:20:34856:34856	5983758	5	True				
ANR	5983870	ExpressionStatement	1	1057:22:34858:34859	5983758	6	True				
ANR	5983871	PrimaryExpression	1		5983758	0					
ANR	5983872	IfStatement	if ( cp == 0 )		5983758	7					
ANR	5983873	Condition	cp == 0	1059:16:34878:34884	5983758	0	True				
ANR	5983874	EqualityExpression	cp == 0		5983758	0		==			
ANR	5983875	Identifier	cp		5983758	0					
ANR	5983876	PrimaryExpression	0		5983758	1					
ANR	5983877	CompoundStatement		20:25:788:788	5983758	1					
ANR	5983878	ExpressionStatement	"lprintf1 ( ""mark stack overflowed while outside collectible space at 0x%lx!\\n"" , ( ulong ) cptr )"	1061:16:34998:35114	5983758	0	True				
ANR	5983879	CallExpression	"lprintf1 ( ""mark stack overflowed while outside collectible space at 0x%lx!\\n"" , ( ulong ) cptr )"		5983758	0					
ANR	5983880	Callee	lprintf1		5983758	0					
ANR	5983881	Identifier	lprintf1		5983758	0					
ANR	5983882	ArgumentList	"""mark stack overflowed while outside collectible space at 0x%lx!\\n"""		5983758	1					
ANR	5983883	Argument	"""mark stack overflowed while outside collectible space at 0x%lx!\\n"""		5983758	0					
ANR	5983884	PrimaryExpression	"""mark stack overflowed while outside collectible space at 0x%lx!\\n"""		5983758	0					
ANR	5983885	Argument	( ulong ) cptr		5983758	1					
ANR	5983886	CastExpression	( ulong ) cptr		5983758	0					
ANR	5983887	CastTarget	ulong		5983758	0					
ANR	5983888	Identifier	cptr		5983758	1					
ANR	5983889	ExpressionStatement	gs_abort ( pstate -> heap )	1063:16:35132:35154	5983758	1	True				
ANR	5983890	CallExpression	gs_abort ( pstate -> heap )		5983758	0					
ANR	5983891	Callee	gs_abort		5983758	0					
ANR	5983892	Identifier	gs_abort		5983758	0					
ANR	5983893	ArgumentList	pstate -> heap		5983758	1					
ANR	5983894	Argument	pstate -> heap		5983758	0					
ANR	5983895	PtrMemberAccess	pstate -> heap		5983758	0					
ANR	5983896	Identifier	pstate		5983758	0					
ANR	5983897	Identifier	heap		5983758	1					
ANR	5983898	IfStatement	if ( cptr < cp -> rescan_bot )		5983758	8					
ANR	5983899	Condition	cptr < cp -> rescan_bot	1065:16:35186:35206	5983758	0	True				
ANR	5983900	RelationalExpression	cptr < cp -> rescan_bot		5983758	0		<			
ANR	5983901	Identifier	cptr		5983758	0					
ANR	5983902	PtrMemberAccess	cp -> rescan_bot		5983758	1					
ANR	5983903	Identifier	cp		5983758	0					
ANR	5983904	Identifier	rescan_bot		5983758	1					
ANR	5983905	Statement	cp	1066:16:35225:35226	5983758	1	True				
ANR	5983906	Statement	->	1066:18:35227:35228	5983758	9	True				
ANR	5983907	Statement	rescan_bot	1066:20:35229:35238	5983758	10	True				
ANR	5983908	Statement	=	1066:31:35240:35240	5983758	11	True				
ANR	5983909	Statement	cptr	1066:33:35242:35245	5983758	12	True				
ANR	5983910	Statement	","	1066:37:35246:35246	5983758	13	True				
ANR	5983911	Statement	new	1066:39:35248:35250	5983758	14	True				
ANR	5983912	Statement	=	1066:43:35252:35252	5983758	15	True				
ANR	5983913	ExpressionStatement	- 1	1066:45:35254:35256	5983758	16	True				
ANR	5983914	UnaryOperationExpression	- 1		5983758	0					
ANR	5983915	UnaryOperator	-		5983758	0					
ANR	5983916	PrimaryExpression	1		5983758	1					
ANR	5983917	IfStatement	if ( cptr > cp -> rescan_top )		5983758	17					
ANR	5983918	Condition	cptr > cp -> rescan_top	1067:16:35274:35294	5983758	0	True				
ANR	5983919	RelationalExpression	cptr > cp -> rescan_top		5983758	0		>			
ANR	5983920	Identifier	cptr		5983758	0					
ANR	5983921	PtrMemberAccess	cp -> rescan_top		5983758	1					
ANR	5983922	Identifier	cp		5983758	0					
ANR	5983923	Identifier	rescan_top		5983758	1					
ANR	5983924	Statement	cp	1068:16:35313:35314	5983758	1	True				
ANR	5983925	Statement	->	1068:18:35315:35316	5983758	18	True				
ANR	5983926	Statement	rescan_top	1068:20:35317:35326	5983758	19	True				
ANR	5983927	Statement	=	1068:31:35328:35328	5983758	20	True				
ANR	5983928	Statement	cptr	1068:33:35330:35333	5983758	21	True				
ANR	5983929	Statement	","	1068:37:35334:35334	5983758	22	True				
ANR	5983930	Statement	new	1068:39:35336:35338	5983758	23	True				
ANR	5983931	Statement	=	1068:43:35340:35340	5983758	24	True				
ANR	5983932	ExpressionStatement	- 1	1068:45:35342:35344	5983758	25	True				
ANR	5983933	UnaryOperationExpression	- 1		5983758	0					
ANR	5983934	UnaryOperator	-		5983758	0					
ANR	5983935	PrimaryExpression	1		5983758	1					
ANR	5983936	Statement	return	1069:12:35358:35363	5983758	26	True				
ANR	5983937	Statement	new	1069:19:35365:35367	5983758	27	True				
ANR	5983938	ExpressionStatement		1069:22:35368:35368	5983758	28	True				
ANR	5983939	ExpressionStatement	"gc_init_mark_stack ( pms -> next , count )"	1071:8:35388:35424	5983758	3	True				
ANR	5983940	CallExpression	"gc_init_mark_stack ( pms -> next , count )"		5983758	0					
ANR	5983941	Callee	gc_init_mark_stack		5983758	0					
ANR	5983942	Identifier	gc_init_mark_stack		5983758	0					
ANR	5983943	ArgumentList	pms -> next		5983758	1					
ANR	5983944	Argument	pms -> next		5983758	0					
ANR	5983945	PtrMemberAccess	pms -> next		5983758	0					
ANR	5983946	Identifier	pms		5983758	0					
ANR	5983947	Identifier	next		5983758	1					
ANR	5983948	Argument	count		5983758	1					
ANR	5983949	Identifier	count		5983758	0					
ANR	5983950	ExpressionStatement	pms -> next -> prev = pms	1072:8:35434:35455	5983758	4	True				
ANR	5983951	AssignmentExpression	pms -> next -> prev = pms		5983758	0		=			
ANR	5983952	PtrMemberAccess	pms -> next -> prev		5983758	0					
ANR	5983953	PtrMemberAccess	pms -> next		5983758	0					
ANR	5983954	Identifier	pms		5983758	0					
ANR	5983955	Identifier	next		5983758	1					
ANR	5983956	Identifier	prev		5983758	1					
ANR	5983957	Identifier	pms		5983758	1					
ANR	5983958	ExpressionStatement	pms -> next -> on_heap = true	1073:8:35465:35490	5983758	5	True				
ANR	5983959	AssignmentExpression	pms -> next -> on_heap = true		5983758	0		=			
ANR	5983960	PtrMemberAccess	pms -> next -> on_heap		5983758	0					
ANR	5983961	PtrMemberAccess	pms -> next		5983758	0					
ANR	5983962	Identifier	pms		5983758	0					
ANR	5983963	Identifier	next		5983758	1					
ANR	5983964	Identifier	on_heap		5983758	1					
ANR	5983965	Identifier	true		5983758	1					
ANR	5983966	ReturnStatement	return 0 ;	1075:4:35502:35510	5983758	1	True				
ANR	5983967	PrimaryExpression	0		5983758	0					
ANR	5983968	ReturnType	static int		5983758	1					
ANR	5983969	Identifier	gc_extend_stack		5983758	2					
ANR	5983970	ParameterList	"gc_mark_stack * pms , gc_state_t * pstate"		5983758	3					
ANR	5983971	Parameter	gc_mark_stack * pms	1039:16:34056:34074	5983758	0	True				
ANR	5983972	ParameterType	gc_mark_stack *		5983758	0					
ANR	5983973	Identifier	pms		5983758	1					
ANR	5983974	Parameter	gc_state_t * pstate	1039:37:34077:34095	5983758	1	True				
ANR	5983975	ParameterType	gc_state_t *		5983758	0					
ANR	5983976	Identifier	pstate		5983758	1					
ANR	5983977	CFGEntryNode	ENTRY		5983758		True				
ANR	5983978	CFGExitNode	EXIT		5983758		True				
ANR	5983979	Symbol	* pms		5983758						
ANR	5983980	Symbol	* sp		5983758						
ANR	5983981	Symbol	pms -> next -> on_heap		5983758						
ANR	5983982	Symbol	cptr		5983758						
ANR	5983983	Symbol	pstate		5983758						
ANR	5983984	Symbol	cp -> rescan_top		5983758						
ANR	5983985	Symbol	pms -> next		5983758						
ANR	5983986	Symbol	pstate -> heap		5983758						
ANR	5983987	Symbol	ms_size_min		5983758						
ANR	5983988	Symbol	pms -> entries		5983758						
ANR	5983989	Symbol	gs_alloc_bytes_immovable		5983758						
ANR	5983990	Symbol	pms		5983758						
ANR	5983991	Symbol	pms -> count		5983758						
ANR	5983992	Symbol	sp		5983758						
ANR	5983993	Symbol	pms -> next -> prev		5983758						
ANR	5983994	Symbol	* pms -> next		5983758						
ANR	5983995	Symbol	count		5983758						
ANR	5983996	Symbol	* * pms		5983758						
ANR	5983997	Symbol	cp		5983758						
ANR	5983998	Symbol	sp -> ptr		5983758						
ANR	5983999	Symbol	ms_size_desired		5983758						
ANR	5984000	Symbol	* cp		5983758						
ANR	5984001	Symbol	* pstate		5983758						
ANR	5984002	Symbol	gc_locate		5983758						
ANR	5984003	Symbol	true		5983758						
ANR	5984004	Symbol	cp -> rescan_bot		5983758						
ANR	5984005	Function	ptr_struct_mark	1079:0:35562:35842							
ANR	5984006	FunctionDef	"ptr_struct_mark (enum_ptr_t * pep , gc_state_t * ignored)"		5984005	0					
ANR	5984007	CompoundStatement		1081:0:35629:35842	5984005	0					
ANR	5984008	IdentifierDeclStatement	obj_header_t * ptr = ( obj_header_t * ) pep -> ptr ;	1082:4:35635:35679	5984005	0	True				
ANR	5984009	IdentifierDecl	* ptr = ( obj_header_t * ) pep -> ptr		5984005	0					
ANR	5984010	IdentifierDeclType	obj_header_t *		5984005	0					
ANR	5984011	Identifier	ptr		5984005	1					
ANR	5984012	AssignmentExpression	* ptr = ( obj_header_t * ) pep -> ptr		5984005	2		=			
ANR	5984013	Identifier	ptr		5984005	0					
ANR	5984014	CastExpression	( obj_header_t * ) pep -> ptr		5984005	1					
ANR	5984015	CastTarget	obj_header_t *		5984005	0					
ANR	5984016	PtrMemberAccess	pep -> ptr		5984005	1					
ANR	5984017	Identifier	pep		5984005	0					
ANR	5984018	Identifier	ptr		5984005	1					
ANR	5984019	IfStatement	if ( ptr == 0 )		5984005	1					
ANR	5984020	Condition	ptr == 0	1084:8:35690:35697	5984005	0	True				
ANR	5984021	EqualityExpression	ptr == 0		5984005	0		==			
ANR	5984022	Identifier	ptr		5984005	0					
ANR	5984023	PrimaryExpression	0		5984005	1					
ANR	5984024	ReturnStatement	return false ;	1085:8:35708:35720	5984005	1	True				
ANR	5984025	Identifier	false		5984005	0					
ANR	5984026	ExpressionStatement	ptr --	1086:4:35726:35731	5984005	2	True				
ANR	5984027	PostIncDecOperationExpression	ptr --		5984005	0					
ANR	5984028	Identifier	ptr		5984005	0					
ANR	5984029	IncDec	--		5984005	1					
ANR	5984030	IfStatement	if ( ! o_is_unmarked ( ptr ) )		5984005	3					
ANR	5984031	Condition	! o_is_unmarked ( ptr )	1087:8:35765:35783	5984005	0	True				
ANR	5984032	UnaryOperationExpression	! o_is_unmarked ( ptr )		5984005	0					
ANR	5984033	UnaryOperator	!		5984005	0					
ANR	5984034	CallExpression	o_is_unmarked ( ptr )		5984005	1					
ANR	5984035	Callee	o_is_unmarked		5984005	0					
ANR	5984036	Identifier	o_is_unmarked		5984005	0					
ANR	5984037	ArgumentList	ptr		5984005	1					
ANR	5984038	Argument	ptr		5984005	0					
ANR	5984039	Identifier	ptr		5984005	0					
ANR	5984040	ReturnStatement	return false ;	1088:8:35794:35806	5984005	1	True				
ANR	5984041	Identifier	false		5984005	0					
ANR	5984042	ExpressionStatement	o_mark ( ptr )	1089:4:35812:35823	5984005	4	True				
ANR	5984043	CallExpression	o_mark ( ptr )		5984005	0					
ANR	5984044	Callee	o_mark		5984005	0					
ANR	5984045	Identifier	o_mark		5984005	0					
ANR	5984046	ArgumentList	ptr		5984005	1					
ANR	5984047	Argument	ptr		5984005	0					
ANR	5984048	Identifier	ptr		5984005	0					
ANR	5984049	ReturnStatement	return true ;	1090:4:35829:35840	5984005	5	True				
ANR	5984050	Identifier	true		5984005	0					
ANR	5984051	ReturnType	static bool		5984005	1					
ANR	5984052	Identifier	ptr_struct_mark		5984005	2					
ANR	5984053	ParameterList	"enum_ptr_t * pep , gc_state_t * ignored"		5984005	3					
ANR	5984054	Parameter	enum_ptr_t * pep	1080:16:35590:35604	5984005	0	True				
ANR	5984055	ParameterType	enum_ptr_t *		5984005	0					
ANR	5984056	Identifier	pep		5984005	1					
ANR	5984057	Parameter	gc_state_t * ignored	1080:33:35607:35626	5984005	1	True				
ANR	5984058	ParameterType	gc_state_t *		5984005	0					
ANR	5984059	Identifier	ignored		5984005	1					
ANR	5984060	CFGEntryNode	ENTRY		5984005		True				
ANR	5984061	CFGExitNode	EXIT		5984005		True				
ANR	5984062	Symbol	ignored		5984005						
ANR	5984063	Symbol	pep -> ptr		5984005						
ANR	5984064	Symbol	* pep		5984005						
ANR	5984065	Symbol	false		5984005						
ANR	5984066	Symbol	true		5984005						
ANR	5984067	Symbol	pep		5984005						
ANR	5984068	Symbol	o_is_unmarked		5984005						
ANR	5984069	Symbol	ptr		5984005						
ANR	5984070	Function	ptr_string_mark	1094:0:35892:36018							
ANR	5984071	FunctionDef	"ptr_string_mark (enum_ptr_t * pep , gc_state_t * gcst)"		5984070	0					
ANR	5984072	CompoundStatement		1096:0:35956:36018	5984070	0					
ANR	5984073	ReturnStatement	"return gc_string_mark ( pep -> ptr , pep -> size , true , gcst ) ;"	1097:4:35962:36016	5984070	0	True				
ANR	5984074	CallExpression	"gc_string_mark ( pep -> ptr , pep -> size , true , gcst )"		5984070	0					
ANR	5984075	Callee	gc_string_mark		5984070	0					
ANR	5984076	Identifier	gc_string_mark		5984070	0					
ANR	5984077	ArgumentList	pep -> ptr		5984070	1					
ANR	5984078	Argument	pep -> ptr		5984070	0					
ANR	5984079	PtrMemberAccess	pep -> ptr		5984070	0					
ANR	5984080	Identifier	pep		5984070	0					
ANR	5984081	Identifier	ptr		5984070	1					
ANR	5984082	Argument	pep -> size		5984070	1					
ANR	5984083	PtrMemberAccess	pep -> size		5984070	0					
ANR	5984084	Identifier	pep		5984070	0					
ANR	5984085	Identifier	size		5984070	1					
ANR	5984086	Argument	true		5984070	2					
ANR	5984087	Identifier	true		5984070	0					
ANR	5984088	Argument	gcst		5984070	3					
ANR	5984089	Identifier	gcst		5984070	0					
ANR	5984090	ReturnType	static bool		5984070	1					
ANR	5984091	Identifier	ptr_string_mark		5984070	2					
ANR	5984092	ParameterList	"enum_ptr_t * pep , gc_state_t * gcst"		5984070	3					
ANR	5984093	Parameter	enum_ptr_t * pep	1095:16:35920:35934	5984070	0	True				
ANR	5984094	ParameterType	enum_ptr_t *		5984070	0					
ANR	5984095	Identifier	pep		5984070	1					
ANR	5984096	Parameter	gc_state_t * gcst	1095:33:35937:35953	5984070	1	True				
ANR	5984097	ParameterType	gc_state_t *		5984070	0					
ANR	5984098	Identifier	gcst		5984070	1					
ANR	5984099	CFGEntryNode	ENTRY		5984070		True				
ANR	5984100	CFGExitNode	EXIT		5984070		True				
ANR	5984101	Symbol	pep -> size		5984070						
ANR	5984102	Symbol	gc_string_mark		5984070						
ANR	5984103	Symbol	pep -> ptr		5984070						
ANR	5984104	Symbol	* pep		5984070						
ANR	5984105	Symbol	true		5984070						
ANR	5984106	Symbol	pep		5984070						
ANR	5984107	Symbol	gcst		5984070						
ANR	5984108	Function	ptr_name_index_mark	1101:0:36066:36215							
ANR	5984109	FunctionDef	"ptr_name_index_mark (enum_ptr_t * pep , gc_state_t * gcst)"		5984108	0					
ANR	5984110	CompoundStatement		1103:0:36134:36215	5984108	0					
ANR	5984111	ReturnStatement	"return names_mark_index ( gcst -> heap -> gs_lib_ctx -> gs_name_table , pep -> size ) ;"	1104:4:36140:36213	5984108	0	True				
ANR	5984112	CallExpression	"names_mark_index ( gcst -> heap -> gs_lib_ctx -> gs_name_table , pep -> size )"		5984108	0					
ANR	5984113	Callee	names_mark_index		5984108	0					
ANR	5984114	Identifier	names_mark_index		5984108	0					
ANR	5984115	ArgumentList	gcst -> heap -> gs_lib_ctx -> gs_name_table		5984108	1					
ANR	5984116	Argument	gcst -> heap -> gs_lib_ctx -> gs_name_table		5984108	0					
ANR	5984117	PtrMemberAccess	gcst -> heap -> gs_lib_ctx -> gs_name_table		5984108	0					
ANR	5984118	PtrMemberAccess	gcst -> heap -> gs_lib_ctx		5984108	0					
ANR	5984119	PtrMemberAccess	gcst -> heap		5984108	0					
ANR	5984120	Identifier	gcst		5984108	0					
ANR	5984121	Identifier	heap		5984108	1					
ANR	5984122	Identifier	gs_lib_ctx		5984108	1					
ANR	5984123	Identifier	gs_name_table		5984108	1					
ANR	5984124	Argument	pep -> size		5984108	1					
ANR	5984125	PtrMemberAccess	pep -> size		5984108	0					
ANR	5984126	Identifier	pep		5984108	0					
ANR	5984127	Identifier	size		5984108	1					
ANR	5984128	ReturnType	static bool		5984108	1					
ANR	5984129	Identifier	ptr_name_index_mark		5984108	2					
ANR	5984130	ParameterList	"enum_ptr_t * pep , gc_state_t * gcst"		5984108	3					
ANR	5984131	Parameter	enum_ptr_t * pep	1102:20:36098:36112	5984108	0	True				
ANR	5984132	ParameterType	enum_ptr_t *		5984108	0					
ANR	5984133	Identifier	pep		5984108	1					
ANR	5984134	Parameter	gc_state_t * gcst	1102:37:36115:36131	5984108	1	True				
ANR	5984135	ParameterType	gc_state_t *		5984108	0					
ANR	5984136	Identifier	gcst		5984108	1					
ANR	5984137	CFGEntryNode	ENTRY		5984108		True				
ANR	5984138	CFGExitNode	EXIT		5984108		True				
ANR	5984139	Symbol	* gcst -> heap		5984108						
ANR	5984140	Symbol	* gcst -> heap -> gs_lib_ctx		5984108						
ANR	5984141	Symbol	* pep		5984108						
ANR	5984142	Symbol	gcst -> heap -> gs_lib_ctx		5984108						
ANR	5984143	Symbol	gcst -> heap -> gs_lib_ctx -> gs_name_table		5984108						
ANR	5984144	Symbol	* * gcst -> heap		5984108						
ANR	5984145	Symbol	gcst		5984108						
ANR	5984146	Symbol	* gcst		5984108						
ANR	5984147	Symbol	* * * gcst		5984108						
ANR	5984148	Symbol	pep -> size		5984108						
ANR	5984149	Symbol	gcst -> heap		5984108						
ANR	5984150	Symbol	pep		5984108						
ANR	5984151	Symbol	* * gcst		5984108						
ANR	5984152	Symbol	names_mark_index		5984108						
ANR	5984153	Function	gc_trace_finish	1108:0:36257:37075							
ANR	5984154	FunctionDef	gc_trace_finish (gc_state_t * pstate)		5984153	0					
ANR	5984155	CompoundStatement		1110:0:36306:37075	5984153	0					
ANR	5984156	IdentifierDeclStatement	name_table * nt = pstate -> ntable ;	1111:4:36312:36343	5984153	0	True				
ANR	5984157	IdentifierDecl	* nt = pstate -> ntable		5984153	0					
ANR	5984158	IdentifierDeclType	name_table *		5984153	0					
ANR	5984159	Identifier	nt		5984153	1					
ANR	5984160	AssignmentExpression	* nt = pstate -> ntable		5984153	2		=			
ANR	5984161	Identifier	nt		5984153	0					
ANR	5984162	PtrMemberAccess	pstate -> ntable		5984153	1					
ANR	5984163	Identifier	pstate		5984153	0					
ANR	5984164	Identifier	ntable		5984153	1					
ANR	5984165	IdentifierDeclStatement	name_index_t nidx = 0 ;	1112:4:36349:36370	5984153	1	True				
ANR	5984166	IdentifierDecl	nidx = 0		5984153	0					
ANR	5984167	IdentifierDeclType	name_index_t		5984153	0					
ANR	5984168	Identifier	nidx		5984153	1					
ANR	5984169	AssignmentExpression	nidx = 0		5984153	2		=			
ANR	5984170	Identifier	nidx		5984153	0					
ANR	5984171	PrimaryExpression	0		5984153	1					
ANR	5984172	IdentifierDeclStatement	bool marked = false ;	1113:4:36376:36395	5984153	2	True				
ANR	5984173	IdentifierDecl	marked = false		5984153	0					
ANR	5984174	IdentifierDeclType	bool		5984153	0					
ANR	5984175	Identifier	marked		5984153	1					
ANR	5984176	AssignmentExpression	marked = false		5984153	2		=			
ANR	5984177	Identifier	false		5984153	0					
ANR	5984178	Identifier	false		5984153	1					
ANR	5984179	WhileStatement	"while ( ( nidx = names_next_valid_index ( nt , nidx ) ) != 0 )"		5984153	3					
ANR	5984180	Condition	"( nidx = names_next_valid_index ( nt , nidx ) ) != 0"	1115:11:36409:36454	5984153	0	True				
ANR	5984181	EqualityExpression	"( nidx = names_next_valid_index ( nt , nidx ) ) != 0"		5984153	0		!=			
ANR	5984182	AssignmentExpression	"nidx = names_next_valid_index ( nt , nidx )"		5984153	0		=			
ANR	5984183	Identifier	nidx		5984153	0					
ANR	5984184	CallExpression	"names_next_valid_index ( nt , nidx )"		5984153	1					
ANR	5984185	Callee	names_next_valid_index		5984153	0					
ANR	5984186	Identifier	names_next_valid_index		5984153	0					
ANR	5984187	ArgumentList	nt		5984153	1					
ANR	5984188	Argument	nt		5984153	0					
ANR	5984189	Identifier	nt		5984153	0					
ANR	5984190	Argument	nidx		5984153	1					
ANR	5984191	Identifier	nidx		5984153	0					
ANR	5984192	PrimaryExpression	0		5984153	1					
ANR	5984193	CompoundStatement		7:8:160:218	5984153	1					
ANR	5984194	IdentifierDeclStatement	"name_string_t * pnstr = names_index_string_inline ( nt , nidx ) ;"	1116:8:36467:36525	5984153	0	True				
ANR	5984195	IdentifierDecl	"* pnstr = names_index_string_inline ( nt , nidx )"		5984153	0					
ANR	5984196	IdentifierDeclType	name_string_t *		5984153	0					
ANR	5984197	Identifier	pnstr		5984153	1					
ANR	5984198	AssignmentExpression	"* pnstr = names_index_string_inline ( nt , nidx )"		5984153	2		=			
ANR	5984199	Identifier	pnstr		5984153	0					
ANR	5984200	CallExpression	"names_index_string_inline ( nt , nidx )"		5984153	1					
ANR	5984201	Callee	names_index_string_inline		5984153	0					
ANR	5984202	Identifier	names_index_string_inline		5984153	0					
ANR	5984203	ArgumentList	nt		5984153	1					
ANR	5984204	Argument	nt		5984153	0					
ANR	5984205	Identifier	nt		5984153	0					
ANR	5984206	Argument	nidx		5984153	1					
ANR	5984207	Identifier	nidx		5984153	0					
ANR	5984208	IfStatement	if ( pnstr -> mark )		5984153	1					
ANR	5984209	Condition	pnstr -> mark	1118:12:36540:36550	5984153	0	True				
ANR	5984210	PtrMemberAccess	pnstr -> mark		5984153	0					
ANR	5984211	Identifier	pnstr		5984153	0					
ANR	5984212	Identifier	mark		5984153	1					
ANR	5984213	CompoundStatement		10:12:260:282	5984153	1					
ANR	5984214	IdentifierDeclStatement	"enum_ptr_t enst , ensst ;"	1119:12:36567:36589	5984153	0	True				
ANR	5984215	IdentifierDecl	enst		5984153	0					
ANR	5984216	IdentifierDeclType	enum_ptr_t		5984153	0					
ANR	5984217	Identifier	enst		5984153	1					
ANR	5984218	IdentifierDecl	ensst		5984153	1					
ANR	5984219	IdentifierDeclType	enum_ptr_t		5984153	0					
ANR	5984220	Identifier	ensst		5984153	1					
ANR	5984221	IfStatement	"if ( ! pnstr -> foreign_string && gc_string_mark ( pnstr -> string_bytes , pnstr -> string_size , true , pstate ) )"		5984153	1					
ANR	5984222	Condition	"! pnstr -> foreign_string && gc_string_mark ( pnstr -> string_bytes , pnstr -> string_size , true , pstate )"	1121:16:36608:36749	5984153	0	True				
ANR	5984223	AndExpression	"! pnstr -> foreign_string && gc_string_mark ( pnstr -> string_bytes , pnstr -> string_size , true , pstate )"		5984153	0		&&			
ANR	5984224	UnaryOperationExpression	! pnstr -> foreign_string		5984153	0					
ANR	5984225	UnaryOperator	!		5984153	0					
ANR	5984226	PtrMemberAccess	pnstr -> foreign_string		5984153	1					
ANR	5984227	Identifier	pnstr		5984153	0					
ANR	5984228	Identifier	foreign_string		5984153	1					
ANR	5984229	CallExpression	"gc_string_mark ( pnstr -> string_bytes , pnstr -> string_size , true , pstate )"		5984153	1					
ANR	5984230	Callee	gc_string_mark		5984153	0					
ANR	5984231	Identifier	gc_string_mark		5984153	0					
ANR	5984232	ArgumentList	pnstr -> string_bytes		5984153	1					
ANR	5984233	Argument	pnstr -> string_bytes		5984153	0					
ANR	5984234	PtrMemberAccess	pnstr -> string_bytes		5984153	0					
ANR	5984235	Identifier	pnstr		5984153	0					
ANR	5984236	Identifier	string_bytes		5984153	1					
ANR	5984237	Argument	pnstr -> string_size		5984153	1					
ANR	5984238	PtrMemberAccess	pnstr -> string_size		5984153	0					
ANR	5984239	Identifier	pnstr		5984153	0					
ANR	5984240	Identifier	string_size		5984153	1					
ANR	5984241	Argument	true		5984153	2					
ANR	5984242	Identifier	true		5984153	0					
ANR	5984243	Argument	pstate		5984153	3					
ANR	5984244	Identifier	pstate		5984153	0					
ANR	5984245	ExpressionStatement	marked = true	1125:16:36785:36798	5984153	1	True				
ANR	5984246	AssignmentExpression	marked = true		5984153	0		=			
ANR	5984247	Identifier	marked		5984153	0					
ANR	5984248	Identifier	true		5984153	1					
ANR	5984249	ExpressionStatement	"enst . ptr = names_index_sub_table ( nt , nidx )"	1126:12:36812:36854	5984153	2	True				
ANR	5984250	AssignmentExpression	"enst . ptr = names_index_sub_table ( nt , nidx )"		5984153	0		=			
ANR	5984251	MemberAccess	enst . ptr		5984153	0					
ANR	5984252	Identifier	enst		5984153	0					
ANR	5984253	Identifier	ptr		5984153	1					
ANR	5984254	CallExpression	"names_index_sub_table ( nt , nidx )"		5984153	1					
ANR	5984255	Callee	names_index_sub_table		5984153	0					
ANR	5984256	Identifier	names_index_sub_table		5984153	0					
ANR	5984257	ArgumentList	nt		5984153	1					
ANR	5984258	Argument	nt		5984153	0					
ANR	5984259	Identifier	nt		5984153	0					
ANR	5984260	Argument	nidx		5984153	1					
ANR	5984261	Identifier	nidx		5984153	0					
ANR	5984262	ExpressionStatement	"ensst . ptr = names_index_string_sub_table ( nt , nidx )"	1127:12:36868:36918	5984153	3	True				
ANR	5984263	AssignmentExpression	"ensst . ptr = names_index_string_sub_table ( nt , nidx )"		5984153	0		=			
ANR	5984264	MemberAccess	ensst . ptr		5984153	0					
ANR	5984265	Identifier	ensst		5984153	0					
ANR	5984266	Identifier	ptr		5984153	1					
ANR	5984267	CallExpression	"names_index_string_sub_table ( nt , nidx )"		5984153	1					
ANR	5984268	Callee	names_index_string_sub_table		5984153	0					
ANR	5984269	Identifier	names_index_string_sub_table		5984153	0					
ANR	5984270	ArgumentList	nt		5984153	1					
ANR	5984271	Argument	nt		5984153	0					
ANR	5984272	Identifier	nt		5984153	0					
ANR	5984273	Argument	nidx		5984153	1					
ANR	5984274	Identifier	nidx		5984153	0					
ANR	5984275	ExpressionStatement	"marked |= ptr_struct_mark ( & enst , pstate ) | ptr_struct_mark ( & ensst , pstate )"	1128:12:36932:37038	5984153	4	True				
ANR	5984276	AssignmentExpression	"marked |= ptr_struct_mark ( & enst , pstate ) | ptr_struct_mark ( & ensst , pstate )"		5984153	0		|=			
ANR	5984277	Identifier	marked		5984153	0					
ANR	5984278	InclusiveOrExpression	"ptr_struct_mark ( & enst , pstate ) | ptr_struct_mark ( & ensst , pstate )"		5984153	1		|			
ANR	5984279	CallExpression	"ptr_struct_mark ( & enst , pstate )"		5984153	0					
ANR	5984280	Callee	ptr_struct_mark		5984153	0					
ANR	5984281	Identifier	ptr_struct_mark		5984153	0					
ANR	5984282	ArgumentList	& enst		5984153	1					
ANR	5984283	Argument	& enst		5984153	0					
ANR	5984284	UnaryOperationExpression	& enst		5984153	0					
ANR	5984285	UnaryOperator	&		5984153	0					
ANR	5984286	Identifier	enst		5984153	1					
ANR	5984287	Argument	pstate		5984153	1					
ANR	5984288	Identifier	pstate		5984153	0					
ANR	5984289	CallExpression	"ptr_struct_mark ( & ensst , pstate )"		5984153	1					
ANR	5984290	Callee	ptr_struct_mark		5984153	0					
ANR	5984291	Identifier	ptr_struct_mark		5984153	0					
ANR	5984292	ArgumentList	& ensst		5984153	1					
ANR	5984293	Argument	& ensst		5984153	0					
ANR	5984294	UnaryOperationExpression	& ensst		5984153	0					
ANR	5984295	UnaryOperator	&		5984153	0					
ANR	5984296	Identifier	ensst		5984153	1					
ANR	5984297	Argument	pstate		5984153	1					
ANR	5984298	Identifier	pstate		5984153	0					
ANR	5984299	ReturnStatement	return marked ;	1133:4:37060:37073	5984153	4	True				
ANR	5984300	Identifier	marked		5984153	0					
ANR	5984301	ReturnType	static bool		5984153	1					
ANR	5984302	Identifier	gc_trace_finish		5984153	2					
ANR	5984303	ParameterList	gc_state_t * pstate		5984153	3					
ANR	5984304	Parameter	gc_state_t * pstate	1109:16:36285:36303	5984153	0	True				
ANR	5984305	ParameterType	gc_state_t *		5984153	0					
ANR	5984306	Identifier	pstate		5984153	1					
ANR	5984307	CFGEntryNode	ENTRY		5984153		True				
ANR	5984308	CFGExitNode	EXIT		5984153		True				
ANR	5984309	Symbol	pnstr -> string_size		5984153						
ANR	5984310	Symbol	* pnstr		5984153						
ANR	5984311	Symbol	nt		5984153						
ANR	5984312	Symbol	names_next_valid_index		5984153						
ANR	5984313	Symbol	pstate		5984153						
ANR	5984314	Symbol	ensst		5984153						
ANR	5984315	Symbol	& enst		5984153						
ANR	5984316	Symbol	gc_string_mark		5984153						
ANR	5984317	Symbol	ensst . ptr		5984153						
ANR	5984318	Symbol	& ensst		5984153						
ANR	5984319	Symbol	pnstr -> foreign_string		5984153						
ANR	5984320	Symbol	marked		5984153						
ANR	5984321	Symbol	enst		5984153						
ANR	5984322	Symbol	false		5984153						
ANR	5984323	Symbol	enst . ptr		5984153						
ANR	5984324	Symbol	names_index_string_sub_table		5984153						
ANR	5984325	Symbol	pnstr -> mark		5984153						
ANR	5984326	Symbol	pnstr -> string_bytes		5984153						
ANR	5984327	Symbol	pnstr		5984153						
ANR	5984328	Symbol	names_index_string_inline		5984153						
ANR	5984329	Symbol	ptr_struct_mark		5984153						
ANR	5984330	Symbol	* pstate		5984153						
ANR	5984331	Symbol	true		5984153						
ANR	5984332	Symbol	names_index_sub_table		5984153						
ANR	5984333	Symbol	pstate -> ntable		5984153						
ANR	5984334	Symbol	nidx		5984153						
ANR	5984335	Function	gc_init_reloc	1139:0:37190:37458							
ANR	5984336	FunctionDef	gc_init_reloc (clump_t * cp)		5984335	0					
ANR	5984337	CompoundStatement		1141:0:37230:37458	5984335	0					
ANR	5984338	IdentifierDeclStatement	clump_head_t * chead = cp -> chead ;	1142:4:37236:37267	5984335	0	True				
ANR	5984339	IdentifierDecl	* chead = cp -> chead		5984335	0					
ANR	5984340	IdentifierDeclType	clump_head_t *		5984335	0					
ANR	5984341	Identifier	chead		5984335	1					
ANR	5984342	AssignmentExpression	* chead = cp -> chead		5984335	2		=			
ANR	5984343	Identifier	chead		5984335	0					
ANR	5984344	PtrMemberAccess	cp -> chead		5984335	1					
ANR	5984345	Identifier	cp		5984335	0					
ANR	5984346	Identifier	chead		5984335	1					
ANR	5984347	ExpressionStatement	chead -> dest = cp -> cbase	1144:4:37274:37297	5984335	1	True				
ANR	5984348	AssignmentExpression	chead -> dest = cp -> cbase		5984335	0		=			
ANR	5984349	PtrMemberAccess	chead -> dest		5984335	0					
ANR	5984350	Identifier	chead		5984335	0					
ANR	5984351	Identifier	dest		5984335	1					
ANR	5984352	PtrMemberAccess	cp -> cbase		5984335	1					
ANR	5984353	Identifier	cp		5984335	0					
ANR	5984354	Identifier	cbase		5984335	1					
ANR	5984355	ExpressionStatement	"chead -> free . o_back = offset_of ( clump_head_t , free ) >> obj_back_shift"	1145:4:37303:37379	5984335	2	True				
ANR	5984356	AssignmentExpression	"chead -> free . o_back = offset_of ( clump_head_t , free ) >> obj_back_shift"		5984335	0		=			
ANR	5984357	MemberAccess	chead -> free . o_back		5984335	0					
ANR	5984358	PtrMemberAccess	chead -> free		5984335	0					
ANR	5984359	Identifier	chead		5984335	0					
ANR	5984360	Identifier	free		5984335	1					
ANR	5984361	Identifier	o_back		5984335	1					
ANR	5984362	ShiftExpression	"offset_of ( clump_head_t , free ) >> obj_back_shift"		5984335	1		>>			
ANR	5984363	CallExpression	"offset_of ( clump_head_t , free )"		5984335	0					
ANR	5984364	Callee	offset_of		5984335	0					
ANR	5984365	Identifier	offset_of		5984335	0					
ANR	5984366	ArgumentList	clump_head_t		5984335	1					
ANR	5984367	Argument	clump_head_t		5984335	0					
ANR	5984368	Identifier	clump_head_t		5984335	0					
ANR	5984369	Argument	free		5984335	1					
ANR	5984370	Identifier	free		5984335	0					
ANR	5984371	Identifier	obj_back_shift		5984335	1					
ANR	5984372	ExpressionStatement	chead -> free . o_size = sizeof ( obj_header_t )	1147:4:37385:37426	5984335	3	True				
ANR	5984373	AssignmentExpression	chead -> free . o_size = sizeof ( obj_header_t )		5984335	0		=			
ANR	5984374	MemberAccess	chead -> free . o_size		5984335	0					
ANR	5984375	PtrMemberAccess	chead -> free		5984335	0					
ANR	5984376	Identifier	chead		5984335	0					
ANR	5984377	Identifier	free		5984335	1					
ANR	5984378	Identifier	o_size		5984335	1					
ANR	5984379	SizeofExpression	sizeof ( obj_header_t )		5984335	1					
ANR	5984380	Sizeof	sizeof		5984335	0					
ANR	5984381	SizeofOperand	obj_header_t		5984335	1					
ANR	5984382	ExpressionStatement	chead -> free . o_nreloc = 0	1148:4:37432:37456	5984335	4	True				
ANR	5984383	AssignmentExpression	chead -> free . o_nreloc = 0		5984335	0		=			
ANR	5984384	MemberAccess	chead -> free . o_nreloc		5984335	0					
ANR	5984385	PtrMemberAccess	chead -> free		5984335	0					
ANR	5984386	Identifier	chead		5984335	0					
ANR	5984387	Identifier	free		5984335	1					
ANR	5984388	Identifier	o_nreloc		5984335	1					
ANR	5984389	PrimaryExpression	0		5984335	1					
ANR	5984390	ReturnType	static void		5984335	1					
ANR	5984391	Identifier	gc_init_reloc		5984335	2					
ANR	5984392	ParameterList	clump_t * cp		5984335	3					
ANR	5984393	Parameter	clump_t * cp	1140:14:37216:37227	5984335	0	True				
ANR	5984394	ParameterType	clump_t *		5984335	0					
ANR	5984395	Identifier	cp		5984335	1					
ANR	5984396	CFGEntryNode	ENTRY		5984335		True				
ANR	5984397	CFGExitNode	EXIT		5984335		True				
ANR	5984398	Symbol	chead		5984335						
ANR	5984399	Symbol	offset_of		5984335						
ANR	5984400	Symbol	chead -> free		5984335						
ANR	5984401	Symbol	chead -> free . o_size		5984335						
ANR	5984402	Symbol	chead -> dest		5984335						
ANR	5984403	Symbol	* chead		5984335						
ANR	5984404	Symbol	cp -> cbase		5984335						
ANR	5984405	Symbol	cp		5984335						
ANR	5984406	Symbol	obj_back_shift		5984335						
ANR	5984407	Symbol	clump_head_t		5984335						
ANR	5984408	Symbol	chead -> free . o_nreloc		5984335						
ANR	5984409	Symbol	* cp		5984335						
ANR	5984410	Symbol	cp -> chead		5984335						
ANR	5984411	Symbol	chead -> free . o_back		5984335						
ANR	5984412	Symbol	free		5984335						
ANR	5984413	Function	gc_clear_reloc	1152:0:37534:38001							
ANR	5984414	FunctionDef	gc_clear_reloc (clump_t * cp)		5984413	0					
ANR	5984415	CompoundStatement		1154:0:37575:38001	5984413	0					
ANR	5984416	IdentifierDeclStatement	byte * pfree = ( byte * ) & cp -> chead -> free ;	1155:4:37581:37621	5984413	0	True				
ANR	5984417	IdentifierDecl	* pfree = ( byte * ) & cp -> chead -> free		5984413	0					
ANR	5984418	IdentifierDeclType	byte *		5984413	0					
ANR	5984419	Identifier	pfree		5984413	1					
ANR	5984420	AssignmentExpression	* pfree = ( byte * ) & cp -> chead -> free		5984413	2		=			
ANR	5984421	Identifier	pfree		5984413	0					
ANR	5984422	CastExpression	( byte * ) & cp -> chead -> free		5984413	1					
ANR	5984423	CastTarget	byte *		5984413	0					
ANR	5984424	UnaryOperationExpression	& cp -> chead -> free		5984413	1					
ANR	5984425	UnaryOperator	&		5984413	0					
ANR	5984426	PtrMemberAccess	cp -> chead -> free		5984413	1					
ANR	5984427	PtrMemberAccess	cp -> chead		5984413	0					
ANR	5984428	Identifier	cp		5984413	0					
ANR	5984429	Identifier	chead		5984413	1					
ANR	5984430	Identifier	free		5984413	1					
ANR	5984431	ExpressionStatement	gc_init_reloc ( cp )	1157:4:37628:37645	5984413	1	True				
ANR	5984432	CallExpression	gc_init_reloc ( cp )		5984413	0					
ANR	5984433	Callee	gc_init_reloc		5984413	0					
ANR	5984434	Identifier	gc_init_reloc		5984413	0					
ANR	5984435	ArgumentList	cp		5984413	1					
ANR	5984436	Argument	cp		5984413	0					
ANR	5984437	Identifier	cp		5984413	0					
ANR	5984438	Statement	SCAN_CLUMP_OBJECTS	1158:4:37651:37668	5984413	2	True				
ANR	5984439	Statement	(	1158:22:37669:37669	5984413	3	True				
ANR	5984440	Statement	cp	1158:23:37670:37671	5984413	4	True				
ANR	5984441	Statement	)	1158:25:37672:37672	5984413	5	True				
ANR	5984442	Statement	DO_ALL	1159:8:37682:37687	5984413	6	True				
ANR	5984443	IdentifierDeclStatement	const struct_shared_procs_t * procs = pre -> o_type -> shared ;	1160:8:37697:37757	5984413	7	True				
ANR	5984444	IdentifierDecl	* procs = pre -> o_type -> shared		5984413	0					
ANR	5984445	IdentifierDeclType	const struct_shared_procs_t *		5984413	0					
ANR	5984446	Identifier	procs		5984413	1					
ANR	5984447	AssignmentExpression	* procs = pre -> o_type -> shared		5984413	2		=			
ANR	5984448	Identifier	procs		5984413	0					
ANR	5984449	PtrMemberAccess	pre -> o_type -> shared		5984413	1					
ANR	5984450	PtrMemberAccess	pre -> o_type		5984413	0					
ANR	5984451	Identifier	pre		5984413	0					
ANR	5984452	Identifier	o_type		5984413	1					
ANR	5984453	Identifier	shared		5984413	1					
ANR	5984454	IfStatement	if ( procs != 0 )		5984413	8					
ANR	5984455	Condition	procs != 0	1163:8:37768:37777	5984413	0	True				
ANR	5984456	EqualityExpression	procs != 0		5984413	0		!=			
ANR	5984457	Identifier	procs		5984413	0					
ANR	5984458	PrimaryExpression	0		5984413	1					
ANR	5984459	ExpressionStatement	"( * procs -> clear_reloc ) ( pre , size )"	1164:8:37788:37821	5984413	1	True				
ANR	5984460	CallExpression	"( * procs -> clear_reloc ) ( pre , size )"		5984413	0					
ANR	5984461	Callee	* procs -> clear_reloc		5984413	0					
ANR	5984462	UnaryOperationExpression	* procs -> clear_reloc		5984413	0					
ANR	5984463	UnaryOperator	*		5984413	0					
ANR	5984464	PtrMemberAccess	procs -> clear_reloc		5984413	1					
ANR	5984465	Identifier	procs		5984413	0					
ANR	5984466	Identifier	clear_reloc		5984413	1					
ANR	5984467	ArgumentList	pre		5984413	1					
ANR	5984468	Argument	pre		5984413	0					
ANR	5984469	Identifier	pre		5984413	0					
ANR	5984470	Argument	size		5984413	1					
ANR	5984471	Identifier	size		5984413	0					
ANR	5984472	ExpressionStatement	o_set_untraced ( pre )	1165:4:37827:37846	5984413	9	True				
ANR	5984473	CallExpression	o_set_untraced ( pre )		5984413	0					
ANR	5984474	Callee	o_set_untraced		5984413	0					
ANR	5984475	Identifier	o_set_untraced		5984413	0					
ANR	5984476	ArgumentList	pre		5984413	1					
ANR	5984477	Argument	pre		5984413	0					
ANR	5984478	Identifier	pre		5984413	0					
ANR	5984479	ExpressionStatement	pre -> o_back = ( ( byte * ) pre - pfree ) >> obj_back_shift	1166:4:37852:37906	5984413	10	True				
ANR	5984480	AssignmentExpression	pre -> o_back = ( ( byte * ) pre - pfree ) >> obj_back_shift		5984413	0		=			
ANR	5984481	PtrMemberAccess	pre -> o_back		5984413	0					
ANR	5984482	Identifier	pre		5984413	0					
ANR	5984483	Identifier	o_back		5984413	1					
ANR	5984484	ShiftExpression	( ( byte * ) pre - pfree ) >> obj_back_shift		5984413	1		>>			
ANR	5984485	AdditiveExpression	( byte * ) pre - pfree		5984413	0		-			
ANR	5984486	CastExpression	( byte * ) pre		5984413	0					
ANR	5984487	CastTarget	byte *		5984413	0					
ANR	5984488	Identifier	pre		5984413	1					
ANR	5984489	Identifier	pfree		5984413	1					
ANR	5984490	Identifier	obj_back_shift		5984413	1					
ANR	5984491	IdentifierDeclStatement	"END_OBJECTS_SCAN gc_strings_set_marks ( cp , true ) ;"	1167:4:37912:37967	5984413	11	True				
ANR	5984492	IdentifierDecl	"gc_strings_set_marks ( cp , true )"		5984413	0					
ANR	5984493	IdentifierDeclType	END_OBJECTS_SCAN		5984413	0					
ANR	5984494	Identifier	gc_strings_set_marks		5984413	1					
ANR	5984495	Expression	"cp , true"		5984413	2					
ANR	5984496	Identifier	cp		5984413	0					
ANR	5984497	Identifier	true		5984413	1					
ANR	5984498	ExpressionStatement	gc_strings_clear_reloc ( cp )	1169:4:37973:37999	5984413	12	True				
ANR	5984499	CallExpression	gc_strings_clear_reloc ( cp )		5984413	0					
ANR	5984500	Callee	gc_strings_clear_reloc		5984413	0					
ANR	5984501	Identifier	gc_strings_clear_reloc		5984413	0					
ANR	5984502	ArgumentList	cp		5984413	1					
ANR	5984503	Argument	cp		5984413	0					
ANR	5984504	Identifier	cp		5984413	0					
ANR	5984505	ReturnType	static void		5984413	1					
ANR	5984506	Identifier	gc_clear_reloc		5984413	2					
ANR	5984507	ParameterList	clump_t * cp		5984413	3					
ANR	5984508	Parameter	clump_t * cp	1153:15:37561:37572	5984413	0	True				
ANR	5984509	ParameterType	clump_t *		5984413	0					
ANR	5984510	Identifier	cp		5984413	1					
ANR	5984511	CFGEntryNode	ENTRY		5984413		True				
ANR	5984512	CFGExitNode	EXIT		5984413		True				
ANR	5984513	Symbol	pre		5984413						
ANR	5984514	Symbol	procs		5984413						
ANR	5984515	Symbol	* pre -> o_type		5984413						
ANR	5984516	Symbol	gc_strings_set_marks		5984413						
ANR	5984517	Symbol	pfree		5984413						
ANR	5984518	Symbol	* procs		5984413						
ANR	5984519	Symbol	& cp -> chead -> free		5984413						
ANR	5984520	Symbol	pre -> o_back		5984413						
ANR	5984521	Symbol	cp		5984413						
ANR	5984522	Symbol	* pre		5984413						
ANR	5984523	Symbol	obj_back_shift		5984413						
ANR	5984524	Symbol	* cp		5984413						
ANR	5984525	Symbol	cp -> chead		5984413						
ANR	5984526	Symbol	size		5984413						
ANR	5984527	Symbol	pre -> o_type		5984413						
ANR	5984528	Symbol	* * pre		5984413						
ANR	5984529	Symbol	procs -> clear_reloc		5984413						
ANR	5984530	Symbol	pre -> o_type -> shared		5984413						
ANR	5984531	Function	gc_objects_set_reloc	1174:0:38130:39666							
ANR	5984532	FunctionDef	"gc_objects_set_reloc (gc_state_t * gcst , clump_t * cp)"		5984531	0					
ANR	5984533	CompoundStatement		1176:0:38196:39666	5984531	0					
ANR	5984534	IdentifierDeclStatement	size_t reloc = 0 ;	1177:4:38202:38218	5984531	0	True				
ANR	5984535	IdentifierDecl	reloc = 0		5984531	0					
ANR	5984536	IdentifierDeclType	size_t		5984531	0					
ANR	5984537	Identifier	reloc		5984531	1					
ANR	5984538	AssignmentExpression	reloc = 0		5984531	2		=			
ANR	5984539	Identifier	reloc		5984531	0					
ANR	5984540	PrimaryExpression	0		5984531	1					
ANR	5984541	IdentifierDeclStatement	clump_head_t * chead = cp -> chead ;	1178:4:38224:38255	5984531	1	True				
ANR	5984542	IdentifierDecl	* chead = cp -> chead		5984531	0					
ANR	5984543	IdentifierDeclType	clump_head_t *		5984531	0					
ANR	5984544	Identifier	chead		5984531	1					
ANR	5984545	AssignmentExpression	* chead = cp -> chead		5984531	2		=			
ANR	5984546	Identifier	chead		5984531	0					
ANR	5984547	PtrMemberAccess	cp -> chead		5984531	1					
ANR	5984548	Identifier	cp		5984531	0					
ANR	5984549	Identifier	chead		5984531	1					
ANR	5984550	IdentifierDeclStatement	byte * pfree = ( byte * ) & chead -> free ;	1179:4:38261:38297	5984531	2	True				
ANR	5984551	IdentifierDecl	* pfree = ( byte * ) & chead -> free		5984531	0					
ANR	5984552	IdentifierDeclType	byte *		5984531	0					
ANR	5984553	Identifier	pfree		5984531	1					
ANR	5984554	AssignmentExpression	* pfree = ( byte * ) & chead -> free		5984531	2		=			
ANR	5984555	Identifier	pfree		5984531	0					
ANR	5984556	CastExpression	( byte * ) & chead -> free		5984531	1					
ANR	5984557	CastTarget	byte *		5984531	0					
ANR	5984558	UnaryOperationExpression	& chead -> free		5984531	1					
ANR	5984559	UnaryOperator	&		5984531	0					
ANR	5984560	PtrMemberAccess	chead -> free		5984531	1					
ANR	5984561	Identifier	chead		5984531	0					
ANR	5984562	Identifier	free		5984531	1					
ANR	5984563	ExpressionStatement	"if_debug_clump ( '6' , gcst -> heap , ""[6]setting reloc for clump"" , cp )"	1181:4:38334:38399	5984531	3	True				
ANR	5984564	CallExpression	"if_debug_clump ( '6' , gcst -> heap , ""[6]setting reloc for clump"" , cp )"		5984531	0					
ANR	5984565	Callee	if_debug_clump		5984531	0					
ANR	5984566	Identifier	if_debug_clump		5984531	0					
ANR	5984567	ArgumentList	'6'		5984531	1					
ANR	5984568	Argument	'6'		5984531	0					
ANR	5984569	PrimaryExpression	'6'		5984531	0					
ANR	5984570	Argument	gcst -> heap		5984531	1					
ANR	5984571	PtrMemberAccess	gcst -> heap		5984531	0					
ANR	5984572	Identifier	gcst		5984531	0					
ANR	5984573	Identifier	heap		5984531	1					
ANR	5984574	Argument	"""[6]setting reloc for clump"""		5984531	2					
ANR	5984575	PrimaryExpression	"""[6]setting reloc for clump"""		5984531	0					
ANR	5984576	Argument	cp		5984531	3					
ANR	5984577	Identifier	cp		5984531	0					
ANR	5984578	ExpressionStatement	gc_init_reloc ( cp )	1182:4:38405:38422	5984531	4	True				
ANR	5984579	CallExpression	gc_init_reloc ( cp )		5984531	0					
ANR	5984580	Callee	gc_init_reloc		5984531	0					
ANR	5984581	Identifier	gc_init_reloc		5984531	0					
ANR	5984582	ArgumentList	cp		5984531	1					
ANR	5984583	Argument	cp		5984531	0					
ANR	5984584	Identifier	cp		5984531	0					
ANR	5984585	Statement	SCAN_CLUMP_OBJECTS	1183:4:38428:38445	5984531	5	True				
ANR	5984586	Statement	(	1183:22:38446:38446	5984531	6	True				
ANR	5984587	Statement	cp	1183:23:38447:38448	5984531	7	True				
ANR	5984588	Statement	)	1183:25:38449:38449	5984531	8	True				
ANR	5984589	IdentifierDeclStatement	DO_ALL struct_proc_finalize ( ( * finalize ) ) ;	1184:8:38459:38507	5984531	9	True				
ANR	5984590	IdentifierDecl	struct_proc_finalize ( ( * finalize ) )		5984531	0					
ANR	5984591	IdentifierDeclType	DO_ALL		5984531	0					
ANR	5984592	Identifier	struct_proc_finalize		5984531	1					
ANR	5984593	UnaryOperationExpression	* finalize		5984531	2					
ANR	5984594	UnaryOperator	*		5984531	0					
ANR	5984595	Identifier	finalize		5984531	1					
ANR	5984596	IdentifierDeclStatement	const struct_shared_procs_t * procs = pre -> o_type -> shared ;	1186:4:38513:38573	5984531	10	True				
ANR	5984597	IdentifierDecl	* procs = pre -> o_type -> shared		5984531	0					
ANR	5984598	IdentifierDeclType	const struct_shared_procs_t *		5984531	0					
ANR	5984599	Identifier	procs		5984531	1					
ANR	5984600	AssignmentExpression	* procs = pre -> o_type -> shared		5984531	2		=			
ANR	5984601	Identifier	procs		5984531	0					
ANR	5984602	PtrMemberAccess	pre -> o_type -> shared		5984531	1					
ANR	5984603	PtrMemberAccess	pre -> o_type		5984531	0					
ANR	5984604	Identifier	pre		5984531	0					
ANR	5984605	Identifier	o_type		5984531	1					
ANR	5984606	Identifier	shared		5984531	1					
ANR	5984607	IfStatement	"if ( ( procs == 0 ? o_is_unmarked ( pre ) : ! ( * procs -> set_reloc ) ( pre , reloc , size ) ) )"		5984531	11					
ANR	5984608	Condition	"procs == 0 ? o_is_unmarked ( pre ) : ! ( * procs -> set_reloc ) ( pre , reloc , size )"	1189:8:38584:38667	5984531	0	True				
ANR	5984609	ConditionalExpression	"procs == 0 ? o_is_unmarked ( pre ) : ! ( * procs -> set_reloc ) ( pre , reloc , size )"		5984531	0					
ANR	5984610	Condition	procs == 0		5984531	0					
ANR	5984611	EqualityExpression	procs == 0		5984531	0		==			
ANR	5984612	Identifier	procs		5984531	0					
ANR	5984613	PrimaryExpression	0		5984531	1					
ANR	5984614	CallExpression	o_is_unmarked ( pre )		5984531	1					
ANR	5984615	Callee	o_is_unmarked		5984531	0					
ANR	5984616	Identifier	o_is_unmarked		5984531	0					
ANR	5984617	ArgumentList	pre		5984531	1					
ANR	5984618	Argument	pre		5984531	0					
ANR	5984619	Identifier	pre		5984531	0					
ANR	5984620	UnaryOperationExpression	"! ( * procs -> set_reloc ) ( pre , reloc , size )"		5984531	2					
ANR	5984621	UnaryOperator	!		5984531	0					
ANR	5984622	CallExpression	"( * procs -> set_reloc ) ( pre , reloc , size )"		5984531	1					
ANR	5984623	Callee	* procs -> set_reloc		5984531	0					
ANR	5984624	UnaryOperationExpression	* procs -> set_reloc		5984531	0					
ANR	5984625	UnaryOperator	*		5984531	0					
ANR	5984626	PtrMemberAccess	procs -> set_reloc		5984531	1					
ANR	5984627	Identifier	procs		5984531	0					
ANR	5984628	Identifier	set_reloc		5984531	1					
ANR	5984629	ArgumentList	pre		5984531	1					
ANR	5984630	Argument	pre		5984531	0					
ANR	5984631	Identifier	pre		5984531	0					
ANR	5984632	Argument	reloc		5984531	1					
ANR	5984633	Identifier	reloc		5984531	0					
ANR	5984634	Argument	size		5984531	2					
ANR	5984635	Identifier	size		5984531	0					
ANR	5984636	CompoundStatement		16:10:482:482	5984531	1					
ANR	5984637	ExpressionStatement	reloc += sizeof ( obj_header_t ) + obj_align_round ( size )	1192:8:38709:38762	5984531	0	True				
ANR	5984638	AssignmentExpression	reloc += sizeof ( obj_header_t ) + obj_align_round ( size )		5984531	0		+=			
ANR	5984639	Identifier	reloc		5984531	0					
ANR	5984640	AdditiveExpression	sizeof ( obj_header_t ) + obj_align_round ( size )		5984531	1		+			
ANR	5984641	SizeofExpression	sizeof ( obj_header_t )		5984531	0					
ANR	5984642	Sizeof	sizeof		5984531	0					
ANR	5984643	SizeofOperand	obj_header_t		5984531	1					
ANR	5984644	CallExpression	obj_align_round ( size )		5984531	1					
ANR	5984645	Callee	obj_align_round		5984531	0					
ANR	5984646	Identifier	obj_align_round		5984531	0					
ANR	5984647	ArgumentList	size		5984531	1					
ANR	5984648	Argument	size		5984531	0					
ANR	5984649	Identifier	size		5984531	0					
ANR	5984650	IfStatement	if ( ( finalize = pre -> o_type -> finalize ) != 0 )		5984531	1					
ANR	5984651	Condition	( finalize = pre -> o_type -> finalize ) != 0	1193:12:38776:38814	5984531	0	True				
ANR	5984652	EqualityExpression	( finalize = pre -> o_type -> finalize ) != 0		5984531	0		!=			
ANR	5984653	AssignmentExpression	finalize = pre -> o_type -> finalize		5984531	0		=			
ANR	5984654	Identifier	finalize		5984531	0					
ANR	5984655	PtrMemberAccess	pre -> o_type -> finalize		5984531	1					
ANR	5984656	PtrMemberAccess	pre -> o_type		5984531	0					
ANR	5984657	Identifier	pre		5984531	0					
ANR	5984658	Identifier	o_type		5984531	1					
ANR	5984659	Identifier	finalize		5984531	1					
ANR	5984660	PrimaryExpression	0		5984531	1					
ANR	5984661	CompoundStatement		18:53:620:620	5984531	1					
ANR	5984662	ExpressionStatement	"if_debug2m ( 'u' , gcst -> heap , ""[u]GC finalizing %s 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) ( pre + 1 ) )"	1194:12:38831:38992	5984531	0	True				
ANR	5984663	CallExpression	"if_debug2m ( 'u' , gcst -> heap , ""[u]GC finalizing %s 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) ( pre + 1 ) )"		5984531	0					
ANR	5984664	Callee	if_debug2m		5984531	0					
ANR	5984665	Identifier	if_debug2m		5984531	0					
ANR	5984666	ArgumentList	'u'		5984531	1					
ANR	5984667	Argument	'u'		5984531	0					
ANR	5984668	PrimaryExpression	'u'		5984531	0					
ANR	5984669	Argument	gcst -> heap		5984531	1					
ANR	5984670	PtrMemberAccess	gcst -> heap		5984531	0					
ANR	5984671	Identifier	gcst		5984531	0					
ANR	5984672	Identifier	heap		5984531	1					
ANR	5984673	Argument	"""[u]GC finalizing %s 0x%lx\\n"""		5984531	2					
ANR	5984674	PrimaryExpression	"""[u]GC finalizing %s 0x%lx\\n"""		5984531	0					
ANR	5984675	Argument	struct_type_name_string ( pre -> o_type )		5984531	3					
ANR	5984676	CallExpression	struct_type_name_string ( pre -> o_type )		5984531	0					
ANR	5984677	Callee	struct_type_name_string		5984531	0					
ANR	5984678	Identifier	struct_type_name_string		5984531	0					
ANR	5984679	ArgumentList	pre -> o_type		5984531	1					
ANR	5984680	Argument	pre -> o_type		5984531	0					
ANR	5984681	PtrMemberAccess	pre -> o_type		5984531	0					
ANR	5984682	Identifier	pre		5984531	0					
ANR	5984683	Identifier	o_type		5984531	1					
ANR	5984684	Argument	( ulong ) ( pre + 1 )		5984531	4					
ANR	5984685	CastExpression	( ulong ) ( pre + 1 )		5984531	0					
ANR	5984686	CastTarget	ulong		5984531	0					
ANR	5984687	AdditiveExpression	pre + 1		5984531	1		+			
ANR	5984688	Identifier	pre		5984531	0					
ANR	5984689	PrimaryExpression	1		5984531	1					
ANR	5984690	ExpressionStatement	"( * finalize ) ( gcst -> cur_mem , pre + 1 )"	1197:12:39006:39042	5984531	1	True				
ANR	5984691	CallExpression	"( * finalize ) ( gcst -> cur_mem , pre + 1 )"		5984531	0					
ANR	5984692	Callee	* finalize		5984531	0					
ANR	5984693	UnaryOperationExpression	* finalize		5984531	0					
ANR	5984694	UnaryOperator	*		5984531	0					
ANR	5984695	Identifier	finalize		5984531	1					
ANR	5984696	ArgumentList	gcst -> cur_mem		5984531	1					
ANR	5984697	Argument	gcst -> cur_mem		5984531	0					
ANR	5984698	PtrMemberAccess	gcst -> cur_mem		5984531	0					
ANR	5984699	Identifier	gcst		5984531	0					
ANR	5984700	Identifier	cur_mem		5984531	1					
ANR	5984701	Argument	pre + 1		5984531	1					
ANR	5984702	AdditiveExpression	pre + 1		5984531	0		+			
ANR	5984703	Identifier	pre		5984531	0					
ANR	5984704	PrimaryExpression	1		5984531	1					
ANR	5984705	ExpressionStatement	pfree = ( byte * ) pre	1199:8:39062:39082	5984531	2	True				
ANR	5984706	AssignmentExpression	pfree = ( byte * ) pre		5984531	0		=			
ANR	5984707	Identifier	pfree		5984531	0					
ANR	5984708	CastExpression	( byte * ) pre		5984531	1					
ANR	5984709	CastTarget	byte *		5984531	0					
ANR	5984710	Identifier	pre		5984531	1					
ANR	5984711	ExpressionStatement	pre -> o_back = ( pfree - ( byte * ) chead ) >> obj_back_shift	1200:8:39092:39148	5984531	3	True				
ANR	5984712	AssignmentExpression	pre -> o_back = ( pfree - ( byte * ) chead ) >> obj_back_shift		5984531	0		=			
ANR	5984713	PtrMemberAccess	pre -> o_back		5984531	0					
ANR	5984714	Identifier	pre		5984531	0					
ANR	5984715	Identifier	o_back		5984531	1					
ANR	5984716	ShiftExpression	( pfree - ( byte * ) chead ) >> obj_back_shift		5984531	1		>>			
ANR	5984717	AdditiveExpression	pfree - ( byte * ) chead		5984531	0		-			
ANR	5984718	Identifier	pfree		5984531	0					
ANR	5984719	CastExpression	( byte * ) chead		5984531	1					
ANR	5984720	CastTarget	byte *		5984531	0					
ANR	5984721	Identifier	chead		5984531	1					
ANR	5984722	Identifier	obj_back_shift		5984531	1					
ANR	5984723	ExpressionStatement	pre -> o_nreloc = reloc	1201:8:39158:39179	5984531	4	True				
ANR	5984724	AssignmentExpression	pre -> o_nreloc = reloc		5984531	0		=			
ANR	5984725	PtrMemberAccess	pre -> o_nreloc		5984531	0					
ANR	5984726	Identifier	pre		5984531	0					
ANR	5984727	Identifier	o_nreloc		5984531	1					
ANR	5984728	Identifier	reloc		5984531	1					
ANR	5984729	ExpressionStatement	"if_debug3m ( '7' , gcst -> heap , "" [7]at 0x%p, unmarked %lu, new reloc = %u\\n"" , pre , ( ulong ) size , ( unsigned int ) reloc )"	1202:8:39189:39322	5984531	5	True				
ANR	5984730	CallExpression	"if_debug3m ( '7' , gcst -> heap , "" [7]at 0x%p, unmarked %lu, new reloc = %u\\n"" , pre , ( ulong ) size , ( unsigned int ) reloc )"		5984531	0					
ANR	5984731	Callee	if_debug3m		5984531	0					
ANR	5984732	Identifier	if_debug3m		5984531	0					
ANR	5984733	ArgumentList	'7'		5984531	1					
ANR	5984734	Argument	'7'		5984531	0					
ANR	5984735	PrimaryExpression	'7'		5984531	0					
ANR	5984736	Argument	gcst -> heap		5984531	1					
ANR	5984737	PtrMemberAccess	gcst -> heap		5984531	0					
ANR	5984738	Identifier	gcst		5984531	0					
ANR	5984739	Identifier	heap		5984531	1					
ANR	5984740	Argument	""" [7]at 0x%p, unmarked %lu, new reloc = %u\\n"""		5984531	2					
ANR	5984741	PrimaryExpression	""" [7]at 0x%p, unmarked %lu, new reloc = %u\\n"""		5984531	0					
ANR	5984742	Argument	pre		5984531	3					
ANR	5984743	Identifier	pre		5984531	0					
ANR	5984744	Argument	( ulong ) size		5984531	4					
ANR	5984745	CastExpression	( ulong ) size		5984531	0					
ANR	5984746	CastTarget	ulong		5984531	0					
ANR	5984747	Identifier	size		5984531	1					
ANR	5984748	Argument	( unsigned int ) reloc		5984531	5					
ANR	5984749	CastExpression	( unsigned int ) reloc		5984531	0					
ANR	5984750	CastTarget	unsigned int		5984531	0					
ANR	5984751	Identifier	reloc		5984531	1					
ANR	5984752	ElseStatement	else		5984531	0					
ANR	5984753	CompoundStatement		29:11:1138:1138	5984531	0					
ANR	5984754	ExpressionStatement	"debug_check_object ( pre , cp , gcst )"	1205:8:39367:39400	5984531	0	True				
ANR	5984755	CallExpression	"debug_check_object ( pre , cp , gcst )"		5984531	0					
ANR	5984756	Callee	debug_check_object		5984531	0					
ANR	5984757	Identifier	debug_check_object		5984531	0					
ANR	5984758	ArgumentList	pre		5984531	1					
ANR	5984759	Argument	pre		5984531	0					
ANR	5984760	Identifier	pre		5984531	0					
ANR	5984761	Argument	cp		5984531	1					
ANR	5984762	Identifier	cp		5984531	0					
ANR	5984763	Argument	gcst		5984531	2					
ANR	5984764	Identifier	gcst		5984531	0					
ANR	5984765	ExpressionStatement	pre -> o_back = ( ( byte * ) pre - pfree ) >> obj_back_shift	1206:8:39410:39464	5984531	1	True				
ANR	5984766	AssignmentExpression	pre -> o_back = ( ( byte * ) pre - pfree ) >> obj_back_shift		5984531	0		=			
ANR	5984767	PtrMemberAccess	pre -> o_back		5984531	0					
ANR	5984768	Identifier	pre		5984531	0					
ANR	5984769	Identifier	o_back		5984531	1					
ANR	5984770	ShiftExpression	( ( byte * ) pre - pfree ) >> obj_back_shift		5984531	1		>>			
ANR	5984771	AdditiveExpression	( byte * ) pre - pfree		5984531	0		-			
ANR	5984772	CastExpression	( byte * ) pre		5984531	0					
ANR	5984773	CastTarget	byte *		5984531	0					
ANR	5984774	Identifier	pre		5984531	1					
ANR	5984775	Identifier	pfree		5984531	1					
ANR	5984776	Identifier	obj_back_shift		5984531	1					
ANR	5984777	Statement	END_OBJECTS_SCAN	1208:4:39476:39491	5984531	12	True				
ANR	5984778	IfStatement	if ( reloc != 0 )		5984531	13					
ANR	5984779	Condition	reloc != 0	1210:8:39514:39523	5984531	0	True				
ANR	5984780	EqualityExpression	reloc != 0		5984531	0		!=			
ANR	5984781	Identifier	reloc		5984531	0					
ANR	5984782	PrimaryExpression	0		5984531	1					
ANR	5984783	CompoundStatement		35:20:1329:1329	5984531	1					
ANR	5984784	ExpressionStatement	"if_debug1m ( '6' , gcst -> heap , ""[6]freed %u"" , ( unsigned int ) reloc )"	1211:8:39536:39599	5984531	0	True				
ANR	5984785	CallExpression	"if_debug1m ( '6' , gcst -> heap , ""[6]freed %u"" , ( unsigned int ) reloc )"		5984531	0					
ANR	5984786	Callee	if_debug1m		5984531	0					
ANR	5984787	Identifier	if_debug1m		5984531	0					
ANR	5984788	ArgumentList	'6'		5984531	1					
ANR	5984789	Argument	'6'		5984531	0					
ANR	5984790	PrimaryExpression	'6'		5984531	0					
ANR	5984791	Argument	gcst -> heap		5984531	1					
ANR	5984792	PtrMemberAccess	gcst -> heap		5984531	0					
ANR	5984793	Identifier	gcst		5984531	0					
ANR	5984794	Identifier	heap		5984531	1					
ANR	5984795	Argument	"""[6]freed %u"""		5984531	2					
ANR	5984796	PrimaryExpression	"""[6]freed %u"""		5984531	0					
ANR	5984797	Argument	( unsigned int ) reloc		5984531	3					
ANR	5984798	CastExpression	( unsigned int ) reloc		5984531	0					
ANR	5984799	CastTarget	unsigned int		5984531	0					
ANR	5984800	Identifier	reloc		5984531	1					
ANR	5984801	ExpressionStatement	"if_debug_clump ( '6' , gcst -> heap , "" in"" , cp )"	1212:8:39609:39651	5984531	1	True				
ANR	5984802	CallExpression	"if_debug_clump ( '6' , gcst -> heap , "" in"" , cp )"		5984531	0					
ANR	5984803	Callee	if_debug_clump		5984531	0					
ANR	5984804	Identifier	if_debug_clump		5984531	0					
ANR	5984805	ArgumentList	'6'		5984531	1					
ANR	5984806	Argument	'6'		5984531	0					
ANR	5984807	PrimaryExpression	'6'		5984531	0					
ANR	5984808	Argument	gcst -> heap		5984531	1					
ANR	5984809	PtrMemberAccess	gcst -> heap		5984531	0					
ANR	5984810	Identifier	gcst		5984531	0					
ANR	5984811	Identifier	heap		5984531	1					
ANR	5984812	Argument	""" in"""		5984531	2					
ANR	5984813	PrimaryExpression	""" in"""		5984531	0					
ANR	5984814	Argument	cp		5984531	3					
ANR	5984815	Identifier	cp		5984531	0					
ANR	5984816	ReturnType	static void		5984531	1					
ANR	5984817	Identifier	gc_objects_set_reloc		5984531	2					
ANR	5984818	ParameterList	"gc_state_t * gcst , clump_t * cp"		5984531	3					
ANR	5984819	Parameter	gc_state_t * gcst	1175:21:38163:38179	5984531	0	True				
ANR	5984820	ParameterType	gc_state_t *		5984531	0					
ANR	5984821	Identifier	gcst		5984531	1					
ANR	5984822	Parameter	clump_t * cp	1175:40:38182:38193	5984531	1	True				
ANR	5984823	ParameterType	clump_t *		5984531	0					
ANR	5984824	Identifier	cp		5984531	1					
ANR	5984825	CFGEntryNode	ENTRY		5984531		True				
ANR	5984826	CFGExitNode	EXIT		5984531		True				
ANR	5984827	Symbol	procs		5984531						
ANR	5984828	Symbol	obj_align_round		5984531						
ANR	5984829	Symbol	pfree		5984531						
ANR	5984830	Symbol	* procs -> set_reloc		5984531						
ANR	5984831	Symbol	pre -> o_back		5984531						
ANR	5984832	Symbol	gcst		5984531						
ANR	5984833	Symbol	* pre		5984531						
ANR	5984834	Symbol	obj_back_shift		5984531						
ANR	5984835	Symbol	cp -> chead		5984531						
ANR	5984836	Symbol	gcst -> heap		5984531						
ANR	5984837	Symbol	struct_proc_finalize		5984531						
ANR	5984838	Symbol	* * procs		5984531						
ANR	5984839	Symbol	pre -> o_nreloc		5984531						
ANR	5984840	Symbol	pre -> o_type		5984531						
ANR	5984841	Symbol	pre -> o_type -> finalize		5984531						
ANR	5984842	Symbol	reloc		5984531						
ANR	5984843	Symbol	procs -> set_reloc		5984531						
ANR	5984844	Symbol	chead		5984531						
ANR	5984845	Symbol	pre		5984531						
ANR	5984846	Symbol	struct_type_name_string		5984531						
ANR	5984847	Symbol	* pre -> o_type		5984531						
ANR	5984848	Symbol	* procs		5984531						
ANR	5984849	Symbol	gcst -> cur_mem		5984531						
ANR	5984850	Symbol	& chead -> free		5984531						
ANR	5984851	Symbol	cp		5984531						
ANR	5984852	Symbol	* gcst		5984531						
ANR	5984853	Symbol	* cp		5984531						
ANR	5984854	Symbol	size		5984531						
ANR	5984855	Symbol	* * pre		5984531						
ANR	5984856	Symbol	finalize		5984531						
ANR	5984857	Symbol	o_is_unmarked		5984531						
ANR	5984858	Symbol	pre -> o_type -> shared		5984531						
ANR	5984859	Function	gc_do_reloc	1220:0:39766:40887							
ANR	5984860	FunctionDef	"gc_do_reloc (clump_t * cp , gs_ref_memory_t * mem , gc_state_t * pstate)"		5984859	0					
ANR	5984861	CompoundStatement		1222:0:39848:40887	5984859	0					
ANR	5984862	IdentifierDeclStatement	clump_head_t * chead = cp -> chead ;	1223:4:39854:39885	5984859	0	True				
ANR	5984863	IdentifierDecl	* chead = cp -> chead		5984859	0					
ANR	5984864	IdentifierDeclType	clump_head_t *		5984859	0					
ANR	5984865	Identifier	chead		5984859	1					
ANR	5984866	AssignmentExpression	* chead = cp -> chead		5984859	2		=			
ANR	5984867	Identifier	chead		5984859	0					
ANR	5984868	PtrMemberAccess	cp -> chead		5984859	1					
ANR	5984869	Identifier	cp		5984859	0					
ANR	5984870	Identifier	chead		5984859	1					
ANR	5984871	ExpressionStatement	"if_debug_clump ( '6' , ( const gs_memory_t * ) mem , ""[6]relocating in clump"" , cp )"	1225:4:39892:39967	5984859	1	True				
ANR	5984872	CallExpression	"if_debug_clump ( '6' , ( const gs_memory_t * ) mem , ""[6]relocating in clump"" , cp )"		5984859	0					
ANR	5984873	Callee	if_debug_clump		5984859	0					
ANR	5984874	Identifier	if_debug_clump		5984859	0					
ANR	5984875	ArgumentList	'6'		5984859	1					
ANR	5984876	Argument	'6'		5984859	0					
ANR	5984877	PrimaryExpression	'6'		5984859	0					
ANR	5984878	Argument	( const gs_memory_t * ) mem		5984859	1					
ANR	5984879	CastExpression	( const gs_memory_t * ) mem		5984859	0					
ANR	5984880	CastTarget	const gs_memory_t *		5984859	0					
ANR	5984881	Identifier	mem		5984859	1					
ANR	5984882	Argument	"""[6]relocating in clump"""		5984859	2					
ANR	5984883	PrimaryExpression	"""[6]relocating in clump"""		5984859	0					
ANR	5984884	Argument	cp		5984859	3					
ANR	5984885	Identifier	cp		5984859	0					
ANR	5984886	Statement	SCAN_CLUMP_OBJECTS	1226:4:39973:39990	5984859	2	True				
ANR	5984887	Statement	(	1226:22:39991:39991	5984859	3	True				
ANR	5984888	Statement	cp	1226:23:39992:39993	5984859	4	True				
ANR	5984889	Statement	)	1226:25:39994:39994	5984859	5	True				
ANR	5984890	Statement	DO_ALL	1227:8:40004:40009	5984859	6	True				
ANR	5984891	ExpressionStatement	pstate -> container = cp	1229:8:40032:40054	5984859	7	True				
ANR	5984892	AssignmentExpression	pstate -> container = cp		5984859	0		=			
ANR	5984893	PtrMemberAccess	pstate -> container		5984859	0					
ANR	5984894	Identifier	pstate		5984859	0					
ANR	5984895	Identifier	container		5984859	1					
ANR	5984896	Identifier	cp		5984859	1					
ANR	5984897	IfStatement	if ( o_is_untraced ( pre ) || pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead )		5984859	8					
ANR	5984898	Condition	o_is_untraced ( pre ) || pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead	1235:12:40284:40379	5984859	0	True				
ANR	5984899	OrExpression	o_is_untraced ( pre ) || pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead		5984859	0		||			
ANR	5984900	CallExpression	o_is_untraced ( pre )		5984859	0					
ANR	5984901	Callee	o_is_untraced		5984859	0					
ANR	5984902	Identifier	o_is_untraced		5984859	0					
ANR	5984903	ArgumentList	pre		5984859	1					
ANR	5984904	Argument	pre		5984859	0					
ANR	5984905	Identifier	pre		5984859	0					
ANR	5984906	EqualityExpression	pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead		5984859	1		!=			
ANR	5984907	ShiftExpression	pre -> o_back << obj_back_shift		5984859	0		<<			
ANR	5984908	PtrMemberAccess	pre -> o_back		5984859	0					
ANR	5984909	Identifier	pre		5984859	0					
ANR	5984910	Identifier	o_back		5984859	1					
ANR	5984911	Identifier	obj_back_shift		5984859	1					
ANR	5984912	AdditiveExpression	( byte * ) pre - ( byte * ) chead		5984859	1		-			
ANR	5984913	CastExpression	( byte * ) pre		5984859	0					
ANR	5984914	CastTarget	byte *		5984859	0					
ANR	5984915	Identifier	pre		5984859	1					
ANR	5984916	CastExpression	( byte * ) chead		5984859	1					
ANR	5984917	CastTarget	byte *		5984859	0					
ANR	5984918	Identifier	chead		5984859	1					
ANR	5984919	CompoundStatement		16:14:546:546	5984859	1					
ANR	5984920	ExpressionStatement	struct_proc_reloc_ptrs ( ( * proc ) ) = pre -> o_type -> reloc_ptrs	1238:12:40409:40482	5984859	0	True				
ANR	5984921	AssignmentExpression	struct_proc_reloc_ptrs ( ( * proc ) ) = pre -> o_type -> reloc_ptrs		5984859	0		=			
ANR	5984922	CallExpression	struct_proc_reloc_ptrs ( ( * proc ) )		5984859	0					
ANR	5984923	Callee	struct_proc_reloc_ptrs		5984859	0					
ANR	5984924	Identifier	struct_proc_reloc_ptrs		5984859	0					
ANR	5984925	ArgumentList	* proc		5984859	1					
ANR	5984926	Argument	* proc		5984859	0					
ANR	5984927	UnaryOperationExpression	* proc		5984859	0					
ANR	5984928	UnaryOperator	*		5984859	0					
ANR	5984929	Identifier	proc		5984859	1					
ANR	5984930	PtrMemberAccess	pre -> o_type -> reloc_ptrs		5984859	1					
ANR	5984931	PtrMemberAccess	pre -> o_type		5984859	0					
ANR	5984932	Identifier	pre		5984859	0					
ANR	5984933	Identifier	o_type		5984859	1					
ANR	5984934	Identifier	reloc_ptrs		5984859	1					
ANR	5984935	ExpressionStatement	"if_debug3m ( '7' , ( const gs_memory_t * ) mem , "" [7]relocating ptrs in %s(%lu) 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) size , ( ulong ) pre )"	1241:12:40497:40714	5984859	1	True				
ANR	5984936	CallExpression	"if_debug3m ( '7' , ( const gs_memory_t * ) mem , "" [7]relocating ptrs in %s(%lu) 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) size , ( ulong ) pre )"		5984859	0					
ANR	5984937	Callee	if_debug3m		5984859	0					
ANR	5984938	Identifier	if_debug3m		5984859	0					
ANR	5984939	ArgumentList	'7'		5984859	1					
ANR	5984940	Argument	'7'		5984859	0					
ANR	5984941	PrimaryExpression	'7'		5984859	0					
ANR	5984942	Argument	( const gs_memory_t * ) mem		5984859	1					
ANR	5984943	CastExpression	( const gs_memory_t * ) mem		5984859	0					
ANR	5984944	CastTarget	const gs_memory_t *		5984859	0					
ANR	5984945	Identifier	mem		5984859	1					
ANR	5984946	Argument	""" [7]relocating ptrs in %s(%lu) 0x%lx\\n"""		5984859	2					
ANR	5984947	PrimaryExpression	""" [7]relocating ptrs in %s(%lu) 0x%lx\\n"""		5984859	0					
ANR	5984948	Argument	struct_type_name_string ( pre -> o_type )		5984859	3					
ANR	5984949	CallExpression	struct_type_name_string ( pre -> o_type )		5984859	0					
ANR	5984950	Callee	struct_type_name_string		5984859	0					
ANR	5984951	Identifier	struct_type_name_string		5984859	0					
ANR	5984952	ArgumentList	pre -> o_type		5984859	1					
ANR	5984953	Argument	pre -> o_type		5984859	0					
ANR	5984954	PtrMemberAccess	pre -> o_type		5984859	0					
ANR	5984955	Identifier	pre		5984859	0					
ANR	5984956	Identifier	o_type		5984859	1					
ANR	5984957	Argument	( ulong ) size		5984859	4					
ANR	5984958	CastExpression	( ulong ) size		5984859	0					
ANR	5984959	CastTarget	ulong		5984859	0					
ANR	5984960	Identifier	size		5984859	1					
ANR	5984961	Argument	( ulong ) pre		5984859	5					
ANR	5984962	CastExpression	( ulong ) pre		5984859	0					
ANR	5984963	CastTarget	ulong		5984859	0					
ANR	5984964	Identifier	pre		5984859	1					
ANR	5984965	IfStatement	if ( proc != 0 )		5984859	2					
ANR	5984966	Condition	proc != 0	1245:16:40732:40740	5984859	0	True				
ANR	5984967	EqualityExpression	proc != 0		5984859	0		!=			
ANR	5984968	Identifier	proc		5984859	0					
ANR	5984969	PrimaryExpression	0		5984859	1					
ANR	5984970	ExpressionStatement	"( * proc ) ( pre + 1 , size , pre -> o_type , pstate )"	1246:16:40759:40803	5984859	1	True				
ANR	5984971	CallExpression	"( * proc ) ( pre + 1 , size , pre -> o_type , pstate )"		5984859	0					
ANR	5984972	Callee	* proc		5984859	0					
ANR	5984973	UnaryOperationExpression	* proc		5984859	0					
ANR	5984974	UnaryOperator	*		5984859	0					
ANR	5984975	Identifier	proc		5984859	1					
ANR	5984976	ArgumentList	pre + 1		5984859	1					
ANR	5984977	Argument	pre + 1		5984859	0					
ANR	5984978	AdditiveExpression	pre + 1		5984859	0		+			
ANR	5984979	Identifier	pre		5984859	0					
ANR	5984980	PrimaryExpression	1		5984859	1					
ANR	5984981	Argument	size		5984859	1					
ANR	5984982	Identifier	size		5984859	0					
ANR	5984983	Argument	pre -> o_type		5984859	2					
ANR	5984984	PtrMemberAccess	pre -> o_type		5984859	0					
ANR	5984985	Identifier	pre		5984859	0					
ANR	5984986	Identifier	o_type		5984859	1					
ANR	5984987	Argument	pstate		5984859	3					
ANR	5984988	Identifier	pstate		5984859	0					
ANR	5984989	ExpressionStatement	pstate -> container = 0	1249:8:40836:40857	5984859	9	True				
ANR	5984990	AssignmentExpression	pstate -> container = 0		5984859	0		=			
ANR	5984991	PtrMemberAccess	pstate -> container		5984859	0					
ANR	5984992	Identifier	pstate		5984859	0					
ANR	5984993	Identifier	container		5984859	1					
ANR	5984994	PrimaryExpression	0		5984859	1					
ANR	5984995	Statement	END_OBJECTS_SCAN	1251:4:40870:40885	5984859	10	True				
ANR	5984996	ReturnType	static void		5984859	1					
ANR	5984997	Identifier	gc_do_reloc		5984859	2					
ANR	5984998	ParameterList	"clump_t * cp , gs_ref_memory_t * mem , gc_state_t * pstate"		5984859	3					
ANR	5984999	Parameter	clump_t * cp	1221:12:39790:39801	5984859	0	True				
ANR	5985000	ParameterType	clump_t *		5984859	0					
ANR	5985001	Identifier	cp		5984859	1					
ANR	5985002	Parameter	gs_ref_memory_t * mem	1221:26:39804:39824	5984859	1	True				
ANR	5985003	ParameterType	gs_ref_memory_t *		5984859	0					
ANR	5985004	Identifier	mem		5984859	1					
ANR	5985005	Parameter	gc_state_t * pstate	1221:49:39827:39845	5984859	2	True				
ANR	5985006	ParameterType	gc_state_t *		5984859	0					
ANR	5985007	Identifier	pstate		5984859	1					
ANR	5985008	CFGEntryNode	ENTRY		5984859		True				
ANR	5985009	CFGExitNode	EXIT		5984859		True				
ANR	5985010	Symbol	chead		5984859						
ANR	5985011	Symbol	pre		5984859						
ANR	5985012	Symbol	proc		5984859						
ANR	5985013	Symbol	struct_type_name_string		5984859						
ANR	5985014	Symbol	* pre -> o_type		5984859						
ANR	5985015	Symbol	pstate		5984859						
ANR	5985016	Symbol	pre -> o_back		5984859						
ANR	5985017	Symbol	struct_proc_reloc_ptrs		5984859						
ANR	5985018	Symbol	pre -> o_type -> reloc_ptrs		5984859						
ANR	5985019	Symbol	cp		5984859						
ANR	5985020	Symbol	* pre		5984859						
ANR	5985021	Symbol	obj_back_shift		5984859						
ANR	5985022	Symbol	* proc		5984859						
ANR	5985023	Symbol	* cp		5984859						
ANR	5985024	Symbol	cp -> chead		5984859						
ANR	5985025	Symbol	mem		5984859						
ANR	5985026	Symbol	o_is_untraced		5984859						
ANR	5985027	Symbol	size		5984859						
ANR	5985028	Symbol	* pstate		5984859						
ANR	5985029	Symbol	pre -> o_type		5984859						
ANR	5985030	Symbol	* * pre		5984859						
ANR	5985031	Symbol	pstate -> container		5984859						
ANR	5985032	Function	print_reloc_proc	1257:0:41072:41280							
ANR	5985033	FunctionDef	"print_reloc_proc (const void * obj , const char * cname , const void * robj)"		5985032	0					
ANR	5985034	CompoundStatement		1259:0:41156:41280	5985032	0					
ANR	5985035	ExpressionStatement	"if_debug3 ( '9' , ""  [9]relocate %s * 0x%lx to 0x%lx\\n"" , cname , ( ulong ) obj , ( ulong ) robj )"	1260:4:41162:41261	5985032	0	True				
ANR	5985036	CallExpression	"if_debug3 ( '9' , ""  [9]relocate %s * 0x%lx to 0x%lx\\n"" , cname , ( ulong ) obj , ( ulong ) robj )"		5985032	0					
ANR	5985037	Callee	if_debug3		5985032	0					
ANR	5985038	Identifier	if_debug3		5985032	0					
ANR	5985039	ArgumentList	'9'		5985032	1					
ANR	5985040	Argument	'9'		5985032	0					
ANR	5985041	PrimaryExpression	'9'		5985032	0					
ANR	5985042	Argument	"""  [9]relocate %s * 0x%lx to 0x%lx\\n"""		5985032	1					
ANR	5985043	PrimaryExpression	"""  [9]relocate %s * 0x%lx to 0x%lx\\n"""		5985032	0					
ANR	5985044	Argument	cname		5985032	2					
ANR	5985045	Identifier	cname		5985032	0					
ANR	5985046	Argument	( ulong ) obj		5985032	3					
ANR	5985047	CastExpression	( ulong ) obj		5985032	0					
ANR	5985048	CastTarget	ulong		5985032	0					
ANR	5985049	Identifier	obj		5985032	1					
ANR	5985050	Argument	( ulong ) robj		5985032	4					
ANR	5985051	CastExpression	( ulong ) robj		5985032	0					
ANR	5985052	CastTarget	ulong		5985032	0					
ANR	5985053	Identifier	robj		5985032	1					
ANR	5985054	ReturnStatement	return robj ;	1262:4:41267:41278	5985032	1	True				
ANR	5985055	Identifier	robj		5985032	0					
ANR	5985056	ReturnType	const void *		5985032	1					
ANR	5985057	Identifier	print_reloc_proc		5985032	2					
ANR	5985058	ParameterList	"const void * obj , const char * cname , const void * robj"		5985032	3					
ANR	5985059	Parameter	const void * obj	1258:17:41102:41116	5985032	0	True				
ANR	5985060	ParameterType	const void *		5985032	0					
ANR	5985061	Identifier	obj		5985032	1					
ANR	5985062	Parameter	const char * cname	1258:34:41119:41135	5985032	1	True				
ANR	5985063	ParameterType	const char *		5985032	0					
ANR	5985064	Identifier	cname		5985032	1					
ANR	5985065	Parameter	const void * robj	1258:53:41138:41153	5985032	2	True				
ANR	5985066	ParameterType	const void *		5985032	0					
ANR	5985067	Identifier	robj		5985032	1					
ANR	5985068	CFGEntryNode	ENTRY		5985032		True				
ANR	5985069	CFGExitNode	EXIT		5985032		True				
ANR	5985070	Symbol	robj		5985032						
ANR	5985071	Symbol	obj		5985032						
ANR	5985072	Symbol	cname		5985032						
ANR	5985073	Function	igc_reloc_struct_ptr	1267:0:41406:43120							
ANR	5985074	FunctionDef	"igc_reloc_struct_ptr (const void * obj , gc_state_t * gcst)"		5985073	0					
ANR	5985075	CompoundStatement		1269:0:41513:43120	5985073	0					
ANR	5985076	Statement	const	1270:4:41519:41523	5985073	0	True				
ANR	5985077	Statement	obj_header_t	1270:10:41525:41536	5985073	1	True				
ANR	5985078	Statement	*	1270:23:41538:41538	5985073	2	True				
ANR	5985079	Statement	const	1270:24:41539:41543	5985073	3	True				
ANR	5985080	ExpressionStatement	optr = ( const obj_header_t * ) obj	1270:30:41545:41577	5985073	4	True				
ANR	5985081	AssignmentExpression	optr = ( const obj_header_t * ) obj		5985073	0		=			
ANR	5985082	Identifier	optr		5985073	0					
ANR	5985083	CastExpression	( const obj_header_t * ) obj		5985073	1					
ANR	5985084	CastTarget	const obj_header_t *		5985073	0					
ANR	5985085	Identifier	obj		5985073	1					
ANR	5985086	IdentifierDeclStatement	const void * robj ;	1271:4:41583:41599	5985073	5	True				
ANR	5985087	IdentifierDecl	* robj		5985073	0					
ANR	5985088	IdentifierDeclType	const void *		5985073	0					
ANR	5985089	Identifier	robj		5985073	1					
ANR	5985090	IfStatement	if ( obj == 0 )		5985073	6					
ANR	5985091	Condition	obj == 0	1273:8:41610:41617	5985073	0	True				
ANR	5985092	EqualityExpression	obj == 0		5985073	0		==			
ANR	5985093	Identifier	obj		5985073	0					
ANR	5985094	PrimaryExpression	0		5985073	1					
ANR	5985095	CompoundStatement		5:18:106:106	5985073	1					
ANR	5985096	ExpressionStatement	"discard ( print_reloc ( obj , ""NULL"" , 0 ) )"	1274:8:41630:41666	5985073	0	True				
ANR	5985097	CallExpression	"discard ( print_reloc ( obj , ""NULL"" , 0 ) )"		5985073	0					
ANR	5985098	Callee	discard		5985073	0					
ANR	5985099	Identifier	discard		5985073	0					
ANR	5985100	ArgumentList	"print_reloc ( obj , ""NULL"" , 0 )"		5985073	1					
ANR	5985101	Argument	"print_reloc ( obj , ""NULL"" , 0 )"		5985073	0					
ANR	5985102	CallExpression	"print_reloc ( obj , ""NULL"" , 0 )"		5985073	0					
ANR	5985103	Callee	print_reloc		5985073	0					
ANR	5985104	Identifier	print_reloc		5985073	0					
ANR	5985105	ArgumentList	obj		5985073	1					
ANR	5985106	Argument	obj		5985073	0					
ANR	5985107	Identifier	obj		5985073	0					
ANR	5985108	Argument	"""NULL"""		5985073	1					
ANR	5985109	PrimaryExpression	"""NULL"""		5985073	0					
ANR	5985110	Argument	0		5985073	2					
ANR	5985111	PrimaryExpression	0		5985073	0					
ANR	5985112	ReturnStatement	return 0 ;	1275:8:41676:41684	5985073	1	True				
ANR	5985113	PrimaryExpression	0		5985073	0					
ANR	5985114	ExpressionStatement	"debug_check_object ( optr - 1 , NULL , gcst )"	1277:4:41696:41736	5985073	7	True				
ANR	5985115	CallExpression	"debug_check_object ( optr - 1 , NULL , gcst )"		5985073	0					
ANR	5985116	Callee	debug_check_object		5985073	0					
ANR	5985117	Identifier	debug_check_object		5985073	0					
ANR	5985118	ArgumentList	optr - 1		5985073	1					
ANR	5985119	Argument	optr - 1		5985073	0					
ANR	5985120	AdditiveExpression	optr - 1		5985073	0		-			
ANR	5985121	Identifier	optr		5985073	0					
ANR	5985122	PrimaryExpression	1		5985073	1					
ANR	5985123	Argument	NULL		5985073	1					
ANR	5985124	Identifier	NULL		5985073	0					
ANR	5985125	Argument	gcst		5985073	2					
ANR	5985126	Identifier	gcst		5985073	0					
ANR	5985127	CompoundStatement		11:8:238:265	5985073	8					
ANR	5985128	IdentifierDeclStatement	uint back = optr [ - 1 ] . o_back ;	1279:8:41752:41779	5985073	0	True				
ANR	5985129	IdentifierDecl	back = optr [ - 1 ] . o_back		5985073	0					
ANR	5985130	IdentifierDeclType	uint		5985073	0					
ANR	5985131	Identifier	back		5985073	1					
ANR	5985132	AssignmentExpression	back = optr [ - 1 ] . o_back		5985073	2		=			
ANR	5985133	Identifier	back		5985073	0					
ANR	5985134	MemberAccess	optr [ - 1 ] . o_back		5985073	1					
ANR	5985135	ArrayIndexing	optr [ - 1 ]		5985073	0					
ANR	5985136	Identifier	optr		5985073	0					
ANR	5985137	UnaryOperationExpression	- 1		5985073	1					
ANR	5985138	UnaryOperator	-		5985073	0					
ANR	5985139	PrimaryExpression	1		5985073	1					
ANR	5985140	Identifier	o_back		5985073	1					
ANR	5985141	IfStatement	if ( back == o_untraced )		5985073	1					
ANR	5985142	Condition	back == o_untraced	1281:12:41794:41811	5985073	0	True				
ANR	5985143	EqualityExpression	back == o_untraced		5985073	0		==			
ANR	5985144	Identifier	back		5985073	0					
ANR	5985145	Identifier	o_untraced		5985073	1					
ANR	5985146	ExpressionStatement	robj = obj	1282:12:41826:41836	5985073	1	True				
ANR	5985147	AssignmentExpression	robj = obj		5985073	0		=			
ANR	5985148	Identifier	robj		5985073	0					
ANR	5985149	Identifier	obj		5985073	1					
ANR	5985150	ElseStatement	else		5985073	0					
ANR	5985151	CompoundStatement		18:12:407:436	5985073	0					
ANR	5985152	IdentifierDeclStatement	clump_t * cp = gcst -> container ;	1286:12:41921:41950	5985073	0	True				
ANR	5985153	IdentifierDecl	* cp = gcst -> container		5985073	0					
ANR	5985154	IdentifierDeclType	clump_t *		5985073	0					
ANR	5985155	Identifier	cp		5985073	1					
ANR	5985156	AssignmentExpression	* cp = gcst -> container		5985073	2		=			
ANR	5985157	Identifier	cp		5985073	0					
ANR	5985158	PtrMemberAccess	gcst -> container		5985073	1					
ANR	5985159	Identifier	gcst		5985073	0					
ANR	5985160	Identifier	container		5985073	1					
ANR	5985161	IfStatement	if ( cp != 0 && cp -> cbase <= ( byte * ) obj && ( byte * ) obj < cp -> ctop )		5985073	1					
ANR	5985162	Condition	cp != 0 && cp -> cbase <= ( byte * ) obj && ( byte * ) obj < cp -> ctop	1288:16:41969:42028	5985073	0	True				
ANR	5985163	AndExpression	cp != 0 && cp -> cbase <= ( byte * ) obj && ( byte * ) obj < cp -> ctop		5985073	0		&&			
ANR	5985164	EqualityExpression	cp != 0		5985073	0		!=			
ANR	5985165	Identifier	cp		5985073	0					
ANR	5985166	PrimaryExpression	0		5985073	1					
ANR	5985167	AndExpression	cp -> cbase <= ( byte * ) obj && ( byte * ) obj < cp -> ctop		5985073	1		&&			
ANR	5985168	RelationalExpression	cp -> cbase <= ( byte * ) obj		5985073	0		<=			
ANR	5985169	PtrMemberAccess	cp -> cbase		5985073	0					
ANR	5985170	Identifier	cp		5985073	0					
ANR	5985171	Identifier	cbase		5985073	1					
ANR	5985172	CastExpression	( byte * ) obj		5985073	1					
ANR	5985173	CastTarget	byte *		5985073	0					
ANR	5985174	Identifier	obj		5985073	1					
ANR	5985175	RelationalExpression	( byte * ) obj < cp -> ctop		5985073	1		<			
ANR	5985176	CastExpression	( byte * ) obj		5985073	0					
ANR	5985177	CastTarget	byte *		5985073	0					
ANR	5985178	Identifier	obj		5985073	1					
ANR	5985179	PtrMemberAccess	cp -> ctop		5985073	1					
ANR	5985180	Identifier	cp		5985073	0					
ANR	5985181	Identifier	ctop		5985073	1					
ANR	5985182	CompoundStatement		20:78:517:517	5985073	1					
ANR	5985183	IfStatement	if ( back > ( cp -> ctop - cp -> cbase ) >> obj_back_shift )		5985073	0					
ANR	5985184	Condition	back > ( cp -> ctop - cp -> cbase ) >> obj_back_shift	1289:20:42053:42099	5985073	0	True				
ANR	5985185	RelationalExpression	back > ( cp -> ctop - cp -> cbase ) >> obj_back_shift		5985073	0		>			
ANR	5985186	Identifier	back		5985073	0					
ANR	5985187	ShiftExpression	( cp -> ctop - cp -> cbase ) >> obj_back_shift		5985073	1		>>			
ANR	5985188	AdditiveExpression	cp -> ctop - cp -> cbase		5985073	0		-			
ANR	5985189	PtrMemberAccess	cp -> ctop		5985073	0					
ANR	5985190	Identifier	cp		5985073	0					
ANR	5985191	Identifier	ctop		5985073	1					
ANR	5985192	PtrMemberAccess	cp -> cbase		5985073	1					
ANR	5985193	Identifier	cp		5985073	0					
ANR	5985194	Identifier	cbase		5985073	1					
ANR	5985195	Identifier	obj_back_shift		5985073	1					
ANR	5985196	CompoundStatement		21:69:588:588	5985073	1					
ANR	5985197	ExpressionStatement	"lprintf2 ( ""Invalid back pointer %u at 0x%lx!\\n"" , back , ( ulong ) obj )"	1290:20:42124:42219	5985073	0	True				
ANR	5985198	CallExpression	"lprintf2 ( ""Invalid back pointer %u at 0x%lx!\\n"" , back , ( ulong ) obj )"		5985073	0					
ANR	5985199	Callee	lprintf2		5985073	0					
ANR	5985200	Identifier	lprintf2		5985073	0					
ANR	5985201	ArgumentList	"""Invalid back pointer %u at 0x%lx!\\n"""		5985073	1					
ANR	5985202	Argument	"""Invalid back pointer %u at 0x%lx!\\n"""		5985073	0					
ANR	5985203	PrimaryExpression	"""Invalid back pointer %u at 0x%lx!\\n"""		5985073	0					
ANR	5985204	Argument	back		5985073	1					
ANR	5985205	Identifier	back		5985073	0					
ANR	5985206	Argument	( ulong ) obj		5985073	2					
ANR	5985207	CastExpression	( ulong ) obj		5985073	0					
ANR	5985208	CastTarget	ulong		5985073	0					
ANR	5985209	Identifier	obj		5985073	1					
ANR	5985210	ExpressionStatement	gs_abort ( NULL )	1292:20:42241:42255	5985073	1	True				
ANR	5985211	CallExpression	gs_abort ( NULL )		5985073	0					
ANR	5985212	Callee	gs_abort		5985073	0					
ANR	5985213	Identifier	gs_abort		5985073	0					
ANR	5985214	ArgumentList	NULL		5985073	1					
ANR	5985215	Argument	NULL		5985073	0					
ANR	5985216	Identifier	NULL		5985073	0					
ANR	5985217	ElseStatement	else		5985073	0					
ANR	5985218	CompoundStatement		26:19:780:780	5985073	0					
ANR	5985219	CompoundStatement		34:16:1059:1200	5985073	2					
ANR	5985220	IdentifierDeclStatement	const obj_header_t * pfree = ( const obj_header_t * ) ( ( const char * ) ( optr - 1 ) - ( back << obj_back_shift ) ) ;	1299:16:42418:42555	5985073	0	True				
ANR	5985221	IdentifierDecl	* pfree = ( const obj_header_t * ) ( ( const char * ) ( optr - 1 ) - ( back << obj_back_shift ) )		5985073	0					
ANR	5985222	IdentifierDeclType	const obj_header_t *		5985073	0					
ANR	5985223	Identifier	pfree		5985073	1					
ANR	5985224	AssignmentExpression	* pfree = ( const obj_header_t * ) ( ( const char * ) ( optr - 1 ) - ( back << obj_back_shift ) )		5985073	2		=			
ANR	5985225	Identifier	pfree		5985073	0					
ANR	5985226	CastExpression	( const obj_header_t * ) ( ( const char * ) ( optr - 1 ) - ( back << obj_back_shift ) )		5985073	1					
ANR	5985227	CastTarget	const obj_header_t *		5985073	0					
ANR	5985228	AdditiveExpression	( const char * ) ( optr - 1 ) - ( back << obj_back_shift )		5985073	1		-			
ANR	5985229	CastExpression	( const char * ) ( optr - 1 )		5985073	0					
ANR	5985230	CastTarget	const char *		5985073	0					
ANR	5985231	AdditiveExpression	optr - 1		5985073	1		-			
ANR	5985232	Identifier	optr		5985073	0					
ANR	5985233	PrimaryExpression	1		5985073	1					
ANR	5985234	ShiftExpression	back << obj_back_shift		5985073	1		<<			
ANR	5985235	Identifier	back		5985073	0					
ANR	5985236	Identifier	obj_back_shift		5985073	1					
ANR	5985237	IdentifierDeclStatement	const clump_head_t * chead = ( const clump_head_t * ) ( ( const char * ) pfree - ( pfree -> o_back << obj_back_shift ) ) ;	1302:16:42573:42714	5985073	1	True				
ANR	5985238	IdentifierDecl	* chead = ( const clump_head_t * ) ( ( const char * ) pfree - ( pfree -> o_back << obj_back_shift ) )		5985073	0					
ANR	5985239	IdentifierDeclType	const clump_head_t *		5985073	0					
ANR	5985240	Identifier	chead		5985073	1					
ANR	5985241	AssignmentExpression	* chead = ( const clump_head_t * ) ( ( const char * ) pfree - ( pfree -> o_back << obj_back_shift ) )		5985073	2		=			
ANR	5985242	Identifier	chead		5985073	0					
ANR	5985243	CastExpression	( const clump_head_t * ) ( ( const char * ) pfree - ( pfree -> o_back << obj_back_shift ) )		5985073	1					
ANR	5985244	CastTarget	const clump_head_t *		5985073	0					
ANR	5985245	AdditiveExpression	( const char * ) pfree - ( pfree -> o_back << obj_back_shift )		5985073	1		-			
ANR	5985246	CastExpression	( const char * ) pfree		5985073	0					
ANR	5985247	CastTarget	const char *		5985073	0					
ANR	5985248	Identifier	pfree		5985073	1					
ANR	5985249	ShiftExpression	pfree -> o_back << obj_back_shift		5985073	1		<<			
ANR	5985250	PtrMemberAccess	pfree -> o_back		5985073	0					
ANR	5985251	Identifier	pfree		5985073	0					
ANR	5985252	Identifier	o_back		5985073	1					
ANR	5985253	Identifier	obj_back_shift		5985073	1					
ANR	5985254	ExpressionStatement	robj = chead -> dest + ( ( const char * ) obj - ( const char * ) ( chead + 1 ) - pfree -> o_nreloc )	1306:16:42733:42860	5985073	2	True				
ANR	5985255	AssignmentExpression	robj = chead -> dest + ( ( const char * ) obj - ( const char * ) ( chead + 1 ) - pfree -> o_nreloc )		5985073	0		=			
ANR	5985256	Identifier	robj		5985073	0					
ANR	5985257	AdditiveExpression	chead -> dest + ( ( const char * ) obj - ( const char * ) ( chead + 1 ) - pfree -> o_nreloc )		5985073	1		+			
ANR	5985258	PtrMemberAccess	chead -> dest		5985073	0					
ANR	5985259	Identifier	chead		5985073	0					
ANR	5985260	Identifier	dest		5985073	1					
ANR	5985261	AdditiveExpression	( const char * ) obj - ( const char * ) ( chead + 1 ) - pfree -> o_nreloc		5985073	1		-			
ANR	5985262	CastExpression	( const char * ) obj		5985073	0					
ANR	5985263	CastTarget	const char *		5985073	0					
ANR	5985264	Identifier	obj		5985073	1					
ANR	5985265	AdditiveExpression	( const char * ) ( chead + 1 ) - pfree -> o_nreloc		5985073	1		-			
ANR	5985266	CastExpression	( const char * ) ( chead + 1 )		5985073	0					
ANR	5985267	CastTarget	const char *		5985073	0					
ANR	5985268	AdditiveExpression	chead + 1		5985073	1		+			
ANR	5985269	Identifier	chead		5985073	0					
ANR	5985270	PrimaryExpression	1		5985073	1					
ANR	5985271	PtrMemberAccess	pfree -> o_nreloc		5985073	1					
ANR	5985272	Identifier	pfree		5985073	0					
ANR	5985273	Identifier	o_nreloc		5985073	1					
ANR	5985274	CompoundStatement		46:8:1462:1497	5985073	9					
ANR	5985275	ClassDefStatement	union { const void * r ; void * w ; } u ;	1314:8:42976:43011	5985073	0	True				
ANR	5985276	IdentifierDecl	u		5985073	0					
ANR	5985277	IdentifierDeclType			5985073	0					
ANR	5985278	Identifier	u		5985073	1					
ANR	5985279	ExpressionStatement	"u . r = print_reloc ( obj , struct_type_name_string ( optr [ - 1 ] . o_type ) , robj )"	1316:8:43022:43092	5985073	1	True				
ANR	5985280	AssignmentExpression	"u . r = print_reloc ( obj , struct_type_name_string ( optr [ - 1 ] . o_type ) , robj )"		5985073	0		=			
ANR	5985281	MemberAccess	u . r		5985073	0					
ANR	5985282	Identifier	u		5985073	0					
ANR	5985283	Identifier	r		5985073	1					
ANR	5985284	CallExpression	"print_reloc ( obj , struct_type_name_string ( optr [ - 1 ] . o_type ) , robj )"		5985073	1					
ANR	5985285	Callee	print_reloc		5985073	0					
ANR	5985286	Identifier	print_reloc		5985073	0					
ANR	5985287	ArgumentList	obj		5985073	1					
ANR	5985288	Argument	obj		5985073	0					
ANR	5985289	Identifier	obj		5985073	0					
ANR	5985290	Argument	struct_type_name_string ( optr [ - 1 ] . o_type )		5985073	1					
ANR	5985291	CallExpression	struct_type_name_string ( optr [ - 1 ] . o_type )		5985073	0					
ANR	5985292	Callee	struct_type_name_string		5985073	0					
ANR	5985293	Identifier	struct_type_name_string		5985073	0					
ANR	5985294	ArgumentList	optr [ - 1 ] . o_type		5985073	1					
ANR	5985295	Argument	optr [ - 1 ] . o_type		5985073	0					
ANR	5985296	MemberAccess	optr [ - 1 ] . o_type		5985073	0					
ANR	5985297	ArrayIndexing	optr [ - 1 ]		5985073	0					
ANR	5985298	Identifier	optr		5985073	0					
ANR	5985299	UnaryOperationExpression	- 1		5985073	1					
ANR	5985300	UnaryOperator	-		5985073	0					
ANR	5985301	PrimaryExpression	1		5985073	1					
ANR	5985302	Identifier	o_type		5985073	1					
ANR	5985303	Argument	robj		5985073	2					
ANR	5985304	Identifier	robj		5985073	0					
ANR	5985305	ReturnStatement	return u . w ;	1317:8:43102:43112	5985073	2	True				
ANR	5985306	MemberAccess	u . w		5985073	0					
ANR	5985307	Identifier	u		5985073	0					
ANR	5985308	Identifier	w		5985073	1					
ANR	5985309	ReturnType	static void *		5985073	1					
ANR	5985310	Identifier	igc_reloc_struct_ptr		5985073	2					
ANR	5985311	ParameterList	"const void * obj , gc_state_t * gcst"		5985073	3					
ANR	5985312	Parameter	const void * obj	1268:21:41459:41491	5985073	0	True				
ANR	5985313	ParameterType	const void *		5985073	0					
ANR	5985314	Identifier	obj		5985073	1					
ANR	5985315	Parameter	gc_state_t * gcst	1268:56:41494:41510	5985073	1	True				
ANR	5985316	ParameterType	gc_state_t *		5985073	0					
ANR	5985317	Identifier	gcst		5985073	1					
ANR	5985318	CFGEntryNode	ENTRY		5985073		True				
ANR	5985319	CFGExitNode	EXIT		5985073		True				
ANR	5985320	Symbol	pfree		5985073						
ANR	5985321	Symbol	back		5985073						
ANR	5985322	Symbol	pfree -> o_nreloc		5985073						
ANR	5985323	Symbol	* chead		5985073						
ANR	5985324	Symbol	gcst		5985073						
ANR	5985325	Symbol	obj_back_shift		5985073						
ANR	5985326	Symbol	optr [ - 1 ] . o_type		5985073						
ANR	5985327	Symbol	o_untraced		5985073						
ANR	5985328	Symbol	cp -> ctop		5985073						
ANR	5985329	Symbol	* pfree		5985073						
ANR	5985330	Symbol	pfree -> o_back		5985073						
ANR	5985331	Symbol	chead		5985073						
ANR	5985332	Symbol	print_reloc		5985073						
ANR	5985333	Symbol	struct_type_name_string		5985073						
ANR	5985334	Symbol	NULL		5985073						
ANR	5985335	Symbol	u . w		5985073						
ANR	5985336	Symbol	chead -> dest		5985073						
ANR	5985337	Symbol	u . r		5985073						
ANR	5985338	Symbol	optr		5985073						
ANR	5985339	Symbol	gcst -> container		5985073						
ANR	5985340	Symbol	cp -> cbase		5985073						
ANR	5985341	Symbol	* gcst		5985073						
ANR	5985342	Symbol	cp		5985073						
ANR	5985343	Symbol	robj		5985073						
ANR	5985344	Symbol	* cp		5985073						
ANR	5985345	Symbol	u		5985073						
ANR	5985346	Symbol	obj		5985073						
ANR	5985347	Symbol	* optr		5985073						
ANR	5985348	Symbol	optr [ - 1 ] . o_back		5985073						
ANR	5985349	Function	gc_objects_compact	1325:0:43272:44676							
ANR	5985350	FunctionDef	"gc_objects_compact (clump_t * cp , gc_state_t * gcst)"		5985349	0					
ANR	5985351	CompoundStatement		1327:0:43336:44676	5985349	0					
ANR	5985352	IdentifierDeclStatement	clump_head_t * chead = cp -> chead ;	1328:4:43342:43373	5985349	0	True				
ANR	5985353	IdentifierDecl	* chead = cp -> chead		5985349	0					
ANR	5985354	IdentifierDeclType	clump_head_t *		5985349	0					
ANR	5985355	Identifier	chead		5985349	1					
ANR	5985356	AssignmentExpression	* chead = cp -> chead		5985349	2		=			
ANR	5985357	Identifier	chead		5985349	0					
ANR	5985358	PtrMemberAccess	cp -> chead		5985349	1					
ANR	5985359	Identifier	cp		5985349	0					
ANR	5985360	Identifier	chead		5985349	1					
ANR	5985361	IdentifierDeclStatement	obj_header_t * dpre = ( obj_header_t * ) chead -> dest ;	1329:4:43379:43428	5985349	1	True				
ANR	5985362	IdentifierDecl	* dpre = ( obj_header_t * ) chead -> dest		5985349	0					
ANR	5985363	IdentifierDeclType	obj_header_t *		5985349	0					
ANR	5985364	Identifier	dpre		5985349	1					
ANR	5985365	AssignmentExpression	* dpre = ( obj_header_t * ) chead -> dest		5985349	2		=			
ANR	5985366	Identifier	dpre		5985349	0					
ANR	5985367	CastExpression	( obj_header_t * ) chead -> dest		5985349	1					
ANR	5985368	CastTarget	obj_header_t *		5985349	0					
ANR	5985369	PtrMemberAccess	chead -> dest		5985349	1					
ANR	5985370	Identifier	chead		5985349	0					
ANR	5985371	Identifier	dest		5985349	1					
ANR	5985372	IdentifierDeclStatement	const gs_memory_t * cmem = gcst -> spaces . memories . named . system -> stable_memory ;	1330:4:43434:43509	5985349	2	True				
ANR	5985373	IdentifierDecl	* cmem = gcst -> spaces . memories . named . system -> stable_memory		5985349	0					
ANR	5985374	IdentifierDeclType	const gs_memory_t *		5985349	0					
ANR	5985375	Identifier	cmem		5985349	1					
ANR	5985376	AssignmentExpression	* cmem = gcst -> spaces . memories . named . system -> stable_memory		5985349	2		=			
ANR	5985377	Identifier	cmem		5985349	0					
ANR	5985378	PtrMemberAccess	gcst -> spaces . memories . named . system -> stable_memory		5985349	1					
ANR	5985379	MemberAccess	gcst -> spaces . memories . named . system		5985349	0					
ANR	5985380	MemberAccess	gcst -> spaces . memories . named		5985349	0					
ANR	5985381	MemberAccess	gcst -> spaces . memories		5985349	0					
ANR	5985382	PtrMemberAccess	gcst -> spaces		5985349	0					
ANR	5985383	Identifier	gcst		5985349	0					
ANR	5985384	Identifier	spaces		5985349	1					
ANR	5985385	Identifier	memories		5985349	1					
ANR	5985386	Identifier	named		5985349	1					
ANR	5985387	Identifier	system		5985349	1					
ANR	5985388	Identifier	stable_memory		5985349	1					
ANR	5985389	Statement	SCAN_CLUMP_OBJECTS	1332:4:43516:43533	5985349	3	True				
ANR	5985390	Statement	(	1332:22:43534:43534	5985349	4	True				
ANR	5985391	Statement	cp	1332:23:43535:43536	5985349	5	True				
ANR	5985392	Statement	)	1332:25:43537:43537	5985349	6	True				
ANR	5985393	Statement	DO_ALL	1333:8:43547:43552	5985349	7	True				
ANR	5985394	IfStatement	if ( pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead )		5985349	8					
ANR	5985395	Condition	pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead	1336:12:43661:43722	5985349	0	True				
ANR	5985396	EqualityExpression	pre -> o_back << obj_back_shift != ( byte * ) pre - ( byte * ) chead		5985349	0		!=			
ANR	5985397	ShiftExpression	pre -> o_back << obj_back_shift		5985349	0		<<			
ANR	5985398	PtrMemberAccess	pre -> o_back		5985349	0					
ANR	5985399	Identifier	pre		5985349	0					
ANR	5985400	Identifier	o_back		5985349	1					
ANR	5985401	Identifier	obj_back_shift		5985349	1					
ANR	5985402	AdditiveExpression	( byte * ) pre - ( byte * ) chead		5985349	1		-			
ANR	5985403	CastExpression	( byte * ) pre		5985349	0					
ANR	5985404	CastTarget	byte *		5985349	0					
ANR	5985405	Identifier	pre		5985349	1					
ANR	5985406	CastExpression	( byte * ) chead		5985349	1					
ANR	5985407	CastTarget	byte *		5985349	0					
ANR	5985408	Identifier	chead		5985349	1					
ANR	5985409	CompoundStatement		11:8:398:454	5985349	1					
ANR	5985410	IdentifierDeclStatement	const struct_shared_procs_t * procs = pre -> o_type -> shared ;	1337:8:43735:43791	5985349	0	True				
ANR	5985411	IdentifierDecl	* procs = pre -> o_type -> shared		5985349	0					
ANR	5985412	IdentifierDeclType	const struct_shared_procs_t *		5985349	0					
ANR	5985413	Identifier	procs		5985349	1					
ANR	5985414	AssignmentExpression	* procs = pre -> o_type -> shared		5985349	2		=			
ANR	5985415	Identifier	procs		5985349	0					
ANR	5985416	PtrMemberAccess	pre -> o_type -> shared		5985349	1					
ANR	5985417	PtrMemberAccess	pre -> o_type		5985349	0					
ANR	5985418	Identifier	pre		5985349	0					
ANR	5985419	Identifier	o_type		5985349	1					
ANR	5985420	Identifier	shared		5985349	1					
ANR	5985421	ExpressionStatement	"debug_check_object ( pre , cp , gcst )"	1339:8:43802:43835	5985349	1	True				
ANR	5985422	CallExpression	"debug_check_object ( pre , cp , gcst )"		5985349	0					
ANR	5985423	Callee	debug_check_object		5985349	0					
ANR	5985424	Identifier	debug_check_object		5985349	0					
ANR	5985425	ArgumentList	pre		5985349	1					
ANR	5985426	Argument	pre		5985349	0					
ANR	5985427	Identifier	pre		5985349	0					
ANR	5985428	Argument	cp		5985349	1					
ANR	5985429	Identifier	cp		5985349	0					
ANR	5985430	Argument	gcst		5985349	2					
ANR	5985431	Identifier	gcst		5985349	0					
ANR	5985432	ExpressionStatement	"if_debug4m ( '7' , cmem , "" [7]compacting %s 0x%lx(%lu) to 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) pre , ( ulong ) size , ( ulong ) dpre )"	1340:8:43845:44045	5985349	2	True				
ANR	5985433	CallExpression	"if_debug4m ( '7' , cmem , "" [7]compacting %s 0x%lx(%lu) to 0x%lx\\n"" , struct_type_name_string ( pre -> o_type ) , ( ulong ) pre , ( ulong ) size , ( ulong ) dpre )"		5985349	0					
ANR	5985434	Callee	if_debug4m		5985349	0					
ANR	5985435	Identifier	if_debug4m		5985349	0					
ANR	5985436	ArgumentList	'7'		5985349	1					
ANR	5985437	Argument	'7'		5985349	0					
ANR	5985438	PrimaryExpression	'7'		5985349	0					
ANR	5985439	Argument	cmem		5985349	1					
ANR	5985440	Identifier	cmem		5985349	0					
ANR	5985441	Argument	""" [7]compacting %s 0x%lx(%lu) to 0x%lx\\n"""		5985349	2					
ANR	5985442	PrimaryExpression	""" [7]compacting %s 0x%lx(%lu) to 0x%lx\\n"""		5985349	0					
ANR	5985443	Argument	struct_type_name_string ( pre -> o_type )		5985349	3					
ANR	5985444	CallExpression	struct_type_name_string ( pre -> o_type )		5985349	0					
ANR	5985445	Callee	struct_type_name_string		5985349	0					
ANR	5985446	Identifier	struct_type_name_string		5985349	0					
ANR	5985447	ArgumentList	pre -> o_type		5985349	1					
ANR	5985448	Argument	pre -> o_type		5985349	0					
ANR	5985449	PtrMemberAccess	pre -> o_type		5985349	0					
ANR	5985450	Identifier	pre		5985349	0					
ANR	5985451	Identifier	o_type		5985349	1					
ANR	5985452	Argument	( ulong ) pre		5985349	4					
ANR	5985453	CastExpression	( ulong ) pre		5985349	0					
ANR	5985454	CastTarget	ulong		5985349	0					
ANR	5985455	Identifier	pre		5985349	1					
ANR	5985456	Argument	( ulong ) size		5985349	5					
ANR	5985457	CastExpression	( ulong ) size		5985349	0					
ANR	5985458	CastTarget	ulong		5985349	0					
ANR	5985459	Identifier	size		5985349	1					
ANR	5985460	Argument	( ulong ) dpre		5985349	6					
ANR	5985461	CastExpression	( ulong ) dpre		5985349	0					
ANR	5985462	CastTarget	ulong		5985349	0					
ANR	5985463	Identifier	dpre		5985349	1					
ANR	5985464	IfStatement	if ( procs == 0 )		5985349	3					
ANR	5985465	Condition	procs == 0	1344:12:44059:44068	5985349	0	True				
ANR	5985466	EqualityExpression	procs == 0		5985349	0		==			
ANR	5985467	Identifier	procs		5985349	0					
ANR	5985468	PrimaryExpression	0		5985349	1					
ANR	5985469	CompoundStatement		18:24:734:734	5985349	1					
ANR	5985470	IfStatement	if ( dpre != pre )		5985349	0					
ANR	5985471	Condition	dpre != pre	1345:16:44089:44099	5985349	0	True				
ANR	5985472	EqualityExpression	dpre != pre		5985349	0		!=			
ANR	5985473	Identifier	dpre		5985349	0					
ANR	5985474	Identifier	pre		5985349	1					
ANR	5985475	ExpressionStatement	"memmove ( dpre , pre , sizeof ( obj_header_t ) + size )"	1346:16:44118:44189	5985349	1	True				
ANR	5985476	CallExpression	"memmove ( dpre , pre , sizeof ( obj_header_t ) + size )"		5985349	0					
ANR	5985477	Callee	memmove		5985349	0					
ANR	5985478	Identifier	memmove		5985349	0					
ANR	5985479	ArgumentList	dpre		5985349	1					
ANR	5985480	Argument	dpre		5985349	0					
ANR	5985481	Identifier	dpre		5985349	0					
ANR	5985482	Argument	pre		5985349	1					
ANR	5985483	Identifier	pre		5985349	0					
ANR	5985484	Argument	sizeof ( obj_header_t ) + size		5985349	2					
ANR	5985485	AdditiveExpression	sizeof ( obj_header_t ) + size		5985349	0		+			
ANR	5985486	SizeofExpression	sizeof ( obj_header_t )		5985349	0					
ANR	5985487	Sizeof	sizeof		5985349	0					
ANR	5985488	SizeofOperand	obj_header_t		5985349	1					
ANR	5985489	Identifier	size		5985349	1					
ANR	5985490	ElseStatement	else		5985349	0					
ANR	5985491	ExpressionStatement	"( * procs -> compact ) ( cmem , pre , dpre , size )"	1349:12:44218:44259	5985349	0	True				
ANR	5985492	CallExpression	"( * procs -> compact ) ( cmem , pre , dpre , size )"		5985349	0					
ANR	5985493	Callee	* procs -> compact		5985349	0					
ANR	5985494	UnaryOperationExpression	* procs -> compact		5985349	0					
ANR	5985495	UnaryOperator	*		5985349	0					
ANR	5985496	PtrMemberAccess	procs -> compact		5985349	1					
ANR	5985497	Identifier	procs		5985349	0					
ANR	5985498	Identifier	compact		5985349	1					
ANR	5985499	ArgumentList	cmem		5985349	1					
ANR	5985500	Argument	cmem		5985349	0					
ANR	5985501	Identifier	cmem		5985349	0					
ANR	5985502	Argument	pre		5985349	1					
ANR	5985503	Identifier	pre		5985349	0					
ANR	5985504	Argument	dpre		5985349	2					
ANR	5985505	Identifier	dpre		5985349	0					
ANR	5985506	Argument	size		5985349	3					
ANR	5985507	Identifier	size		5985349	0					
ANR	5985508	ExpressionStatement	dpre = ( obj_header_t * ) ( ( byte * ) dpre + obj_size_round ( size ) )	1350:8:44269:44343	5985349	4	True				
ANR	5985509	AssignmentExpression	dpre = ( obj_header_t * ) ( ( byte * ) dpre + obj_size_round ( size ) )		5985349	0		=			
ANR	5985510	Identifier	dpre		5985349	0					
ANR	5985511	CastExpression	( obj_header_t * ) ( ( byte * ) dpre + obj_size_round ( size ) )		5985349	1					
ANR	5985512	CastTarget	obj_header_t *		5985349	0					
ANR	5985513	AdditiveExpression	( byte * ) dpre + obj_size_round ( size )		5985349	1		+			
ANR	5985514	CastExpression	( byte * ) dpre		5985349	0					
ANR	5985515	CastTarget	byte *		5985349	0					
ANR	5985516	Identifier	dpre		5985349	1					
ANR	5985517	CallExpression	obj_size_round ( size )		5985349	1					
ANR	5985518	Callee	obj_size_round		5985349	0					
ANR	5985519	Identifier	obj_size_round		5985349	0					
ANR	5985520	ArgumentList	size		5985349	1					
ANR	5985521	Argument	size		5985349	0					
ANR	5985522	Identifier	size		5985349	0					
ANR	5985523	Statement	END_OBJECTS_SCAN	1353:4:44355:44370	5985349	9	True				
ANR	5985524	IfStatement	if ( cp -> outer == 0 && chead -> dest != cp -> cbase )		5985349	10					
ANR	5985525	Condition	cp -> outer == 0 && chead -> dest != cp -> cbase	1354:12:44384:44425	5985349	0	True				
ANR	5985526	AndExpression	cp -> outer == 0 && chead -> dest != cp -> cbase		5985349	0		&&			
ANR	5985527	EqualityExpression	cp -> outer == 0		5985349	0		==			
ANR	5985528	PtrMemberAccess	cp -> outer		5985349	0					
ANR	5985529	Identifier	cp		5985349	0					
ANR	5985530	Identifier	outer		5985349	1					
ANR	5985531	PrimaryExpression	0		5985349	1					
ANR	5985532	EqualityExpression	chead -> dest != cp -> cbase		5985349	1		!=			
ANR	5985533	PtrMemberAccess	chead -> dest		5985349	0					
ANR	5985534	Identifier	chead		5985349	0					
ANR	5985535	Identifier	dest		5985349	1					
ANR	5985536	PtrMemberAccess	cp -> cbase		5985349	1					
ANR	5985537	Identifier	cp		5985349	0					
ANR	5985538	Identifier	cbase		5985349	1					
ANR	5985539	ExpressionStatement	dpre = ( obj_header_t * ) cp -> cbase	1355:8:44436:44469	5985349	1	True				
ANR	5985540	AssignmentExpression	dpre = ( obj_header_t * ) cp -> cbase		5985349	0		=			
ANR	5985541	Identifier	dpre		5985349	0					
ANR	5985542	CastExpression	( obj_header_t * ) cp -> cbase		5985349	1					
ANR	5985543	CastTarget	obj_header_t *		5985349	0					
ANR	5985544	PtrMemberAccess	cp -> cbase		5985349	1					
ANR	5985545	Identifier	cp		5985349	0					
ANR	5985546	Identifier	cbase		5985349	1					
ANR	5985547	ExpressionStatement	"gs_alloc_fill ( dpre , gs_alloc_fill_collected , cp -> cbot - ( byte * ) dpre )"	1356:4:44515:44585	5985349	11	True				
ANR	5985548	CallExpression	"gs_alloc_fill ( dpre , gs_alloc_fill_collected , cp -> cbot - ( byte * ) dpre )"		5985349	0					
ANR	5985549	Callee	gs_alloc_fill		5985349	0					
ANR	5985550	Identifier	gs_alloc_fill		5985349	0					
ANR	5985551	ArgumentList	dpre		5985349	1					
ANR	5985552	Argument	dpre		5985349	0					
ANR	5985553	Identifier	dpre		5985349	0					
ANR	5985554	Argument	gs_alloc_fill_collected		5985349	1					
ANR	5985555	Identifier	gs_alloc_fill_collected		5985349	0					
ANR	5985556	Argument	cp -> cbot - ( byte * ) dpre		5985349	2					
ANR	5985557	AdditiveExpression	cp -> cbot - ( byte * ) dpre		5985349	0		-			
ANR	5985558	PtrMemberAccess	cp -> cbot		5985349	0					
ANR	5985559	Identifier	cp		5985349	0					
ANR	5985560	Identifier	cbot		5985349	1					
ANR	5985561	CastExpression	( byte * ) dpre		5985349	1					
ANR	5985562	CastTarget	byte *		5985349	0					
ANR	5985563	Identifier	dpre		5985349	1					
ANR	5985564	ExpressionStatement	cp -> cbot = ( byte * ) dpre	1357:4:44591:44615	5985349	12	True				
ANR	5985565	AssignmentExpression	cp -> cbot = ( byte * ) dpre		5985349	0		=			
ANR	5985566	PtrMemberAccess	cp -> cbot		5985349	0					
ANR	5985567	Identifier	cp		5985349	0					
ANR	5985568	Identifier	cbot		5985349	1					
ANR	5985569	CastExpression	( byte * ) dpre		5985349	1					
ANR	5985570	CastTarget	byte *		5985349	0					
ANR	5985571	Identifier	dpre		5985349	1					
ANR	5985572	ExpressionStatement	cp -> rcur = 0	1358:4:44621:44633	5985349	13	True				
ANR	5985573	AssignmentExpression	cp -> rcur = 0		5985349	0		=			
ANR	5985574	PtrMemberAccess	cp -> rcur		5985349	0					
ANR	5985575	Identifier	cp		5985349	0					
ANR	5985576	Identifier	rcur		5985349	1					
ANR	5985577	PrimaryExpression	0		5985349	1					
ANR	5985578	ExpressionStatement	cp -> rtop = 0	1359:4:44639:44651	5985349	14	True				
ANR	5985579	AssignmentExpression	cp -> rtop = 0		5985349	0		=			
ANR	5985580	PtrMemberAccess	cp -> rtop		5985349	0					
ANR	5985581	Identifier	cp		5985349	0					
ANR	5985582	Identifier	rtop		5985349	1					
ANR	5985583	PrimaryExpression	0		5985349	1					
ANR	5985584	ReturnType	static void		5985349	1					
ANR	5985585	Identifier	gc_objects_compact		5985349	2					
ANR	5985586	ParameterList	"clump_t * cp , gc_state_t * gcst"		5985349	3					
ANR	5985587	Parameter	clump_t * cp	1326:19:43303:43314	5985349	0	True				
ANR	5985588	ParameterType	clump_t *		5985349	0					
ANR	5985589	Identifier	cp		5985349	1					
ANR	5985590	Parameter	gc_state_t * gcst	1326:33:43317:43333	5985349	1	True				
ANR	5985591	ParameterType	gc_state_t *		5985349	0					
ANR	5985592	Identifier	gcst		5985349	1					
ANR	5985593	CFGEntryNode	ENTRY		5985349		True				
ANR	5985594	CFGExitNode	EXIT		5985349		True				
ANR	5985595	Symbol	* gcst -> spaces . memories . named		5985349						
ANR	5985596	Symbol	procs		5985349						
ANR	5985597	Symbol	* gcst -> spaces		5985349						
ANR	5985598	Symbol	cp -> rtop		5985349						
ANR	5985599	Symbol	pre -> o_back		5985349						
ANR	5985600	Symbol	* chead		5985349						
ANR	5985601	Symbol	gcst		5985349						
ANR	5985602	Symbol	* pre		5985349						
ANR	5985603	Symbol	obj_back_shift		5985349						
ANR	5985604	Symbol	dpre		5985349						
ANR	5985605	Symbol	cp -> rcur		5985349						
ANR	5985606	Symbol	cp -> chead		5985349						
ANR	5985607	Symbol	obj_size_round		5985349						
ANR	5985608	Symbol	cp -> cbot		5985349						
ANR	5985609	Symbol	* gcst -> spaces . memories		5985349						
ANR	5985610	Symbol	pre -> o_type		5985349						
ANR	5985611	Symbol	gs_alloc_fill_collected		5985349						
ANR	5985612	Symbol	* gcst -> spaces . memories . named . system		5985349						
ANR	5985613	Symbol	gcst -> spaces . memories . named . system -> stable_memory		5985349						
ANR	5985614	Symbol	procs -> compact		5985349						
ANR	5985615	Symbol	chead		5985349						
ANR	5985616	Symbol	pre		5985349						
ANR	5985617	Symbol	struct_type_name_string		5985349						
ANR	5985618	Symbol	* pre -> o_type		5985349						
ANR	5985619	Symbol	gcst -> spaces . memories		5985349						
ANR	5985620	Symbol	* procs		5985349						
ANR	5985621	Symbol	chead -> dest		5985349						
ANR	5985622	Symbol	gcst -> spaces		5985349						
ANR	5985623	Symbol	gcst -> spaces . memories . named . system		5985349						
ANR	5985624	Symbol	cp -> cbase		5985349						
ANR	5985625	Symbol	cp		5985349						
ANR	5985626	Symbol	* gcst		5985349						
ANR	5985627	Symbol	* cp		5985349						
ANR	5985628	Symbol	size		5985349						
ANR	5985629	Symbol	* * pre		5985349						
ANR	5985630	Symbol	cp -> outer		5985349						
ANR	5985631	Symbol	cmem		5985349						
ANR	5985632	Symbol	gcst -> spaces . memories . named		5985349						
ANR	5985633	Symbol	* * gcst		5985349						
ANR	5985634	Symbol	pre -> o_type -> shared		5985349						
ANR	5985635	Function	free_if_empty	1364:0:44708:45067							
ANR	5985636	FunctionDef	"free_if_empty (clump_t * cp , void * arg)"		5985635	0					
ANR	5985637	CompoundStatement		1366:0:44772:45067	5985635	0					
ANR	5985638	IdentifierDeclStatement	gs_ref_memory_t * mem = ( gs_ref_memory_t * ) arg ;	1367:4:44778:44824	5985635	0	True				
ANR	5985639	IdentifierDecl	* mem = ( gs_ref_memory_t * ) arg		5985635	0					
ANR	5985640	IdentifierDeclType	gs_ref_memory_t *		5985635	0					
ANR	5985641	Identifier	mem		5985635	1					
ANR	5985642	AssignmentExpression	* mem = ( gs_ref_memory_t * ) arg		5985635	2		=			
ANR	5985643	Identifier	mem		5985635	0					
ANR	5985644	CastExpression	( gs_ref_memory_t * ) arg		5985635	1					
ANR	5985645	CastTarget	gs_ref_memory_t *		5985635	0					
ANR	5985646	Identifier	arg		5985635	1					
ANR	5985647	IfStatement	if ( cp -> cbot == cp -> cbase && cp -> ctop == cp -> climit && cp -> outer == 0 && cp -> inner_count == 0 )		5985635	1					
ANR	5985648	Condition	cp -> cbot == cp -> cbase && cp -> ctop == cp -> climit && cp -> outer == 0 && cp -> inner_count == 0	1369:8:44835:44931	5985635	0	True				
ANR	5985649	AndExpression	cp -> cbot == cp -> cbase && cp -> ctop == cp -> climit && cp -> outer == 0 && cp -> inner_count == 0		5985635	0		&&			
ANR	5985650	EqualityExpression	cp -> cbot == cp -> cbase		5985635	0		==			
ANR	5985651	PtrMemberAccess	cp -> cbot		5985635	0					
ANR	5985652	Identifier	cp		5985635	0					
ANR	5985653	Identifier	cbot		5985635	1					
ANR	5985654	PtrMemberAccess	cp -> cbase		5985635	1					
ANR	5985655	Identifier	cp		5985635	0					
ANR	5985656	Identifier	cbase		5985635	1					
ANR	5985657	AndExpression	cp -> ctop == cp -> climit && cp -> outer == 0 && cp -> inner_count == 0		5985635	1		&&			
ANR	5985658	EqualityExpression	cp -> ctop == cp -> climit		5985635	0		==			
ANR	5985659	PtrMemberAccess	cp -> ctop		5985635	0					
ANR	5985660	Identifier	cp		5985635	0					
ANR	5985661	Identifier	ctop		5985635	1					
ANR	5985662	PtrMemberAccess	cp -> climit		5985635	1					
ANR	5985663	Identifier	cp		5985635	0					
ANR	5985664	Identifier	climit		5985635	1					
ANR	5985665	AndExpression	cp -> outer == 0 && cp -> inner_count == 0		5985635	1		&&			
ANR	5985666	EqualityExpression	cp -> outer == 0		5985635	0		==			
ANR	5985667	PtrMemberAccess	cp -> outer		5985635	0					
ANR	5985668	Identifier	cp		5985635	0					
ANR	5985669	Identifier	outer		5985635	1					
ANR	5985670	PrimaryExpression	0		5985635	1					
ANR	5985671	EqualityExpression	cp -> inner_count == 0		5985635	1		==			
ANR	5985672	PtrMemberAccess	cp -> inner_count		5985635	0					
ANR	5985673	Identifier	cp		5985635	0					
ANR	5985674	Identifier	inner_count		5985635	1					
ANR	5985675	PrimaryExpression	0		5985635	1					
ANR	5985676	CompoundStatement		6:4:165:165	5985635	1					
ANR	5985677	ExpressionStatement	"alloc_free_clump ( cp , mem )"	1372:8:44948:44973	5985635	0	True				
ANR	5985678	CallExpression	"alloc_free_clump ( cp , mem )"		5985635	0					
ANR	5985679	Callee	alloc_free_clump		5985635	0					
ANR	5985680	Identifier	alloc_free_clump		5985635	0					
ANR	5985681	ArgumentList	cp		5985635	1					
ANR	5985682	Argument	cp		5985635	0					
ANR	5985683	Identifier	cp		5985635	0					
ANR	5985684	Argument	mem		5985635	1					
ANR	5985685	Identifier	mem		5985635	0					
ANR	5985686	IfStatement	if ( mem -> cc == cp )		5985635	1					
ANR	5985687	Condition	mem -> cc == cp	1373:12:44987:44999	5985635	0	True				
ANR	5985688	EqualityExpression	mem -> cc == cp		5985635	0		==			
ANR	5985689	PtrMemberAccess	mem -> cc		5985635	0					
ANR	5985690	Identifier	mem		5985635	0					
ANR	5985691	Identifier	cc		5985635	1					
ANR	5985692	Identifier	cp		5985635	1					
ANR	5985693	ExpressionStatement	mem -> cc = NULL	1374:12:45014:45028	5985635	1	True				
ANR	5985694	AssignmentExpression	mem -> cc = NULL		5985635	0		=			
ANR	5985695	PtrMemberAccess	mem -> cc		5985635	0					
ANR	5985696	Identifier	mem		5985635	0					
ANR	5985697	Identifier	cc		5985635	1					
ANR	5985698	Identifier	NULL		5985635	1					
ANR	5985699	ReturnStatement	return SPLAY_APP_CONTINUE ;	1376:4:45040:45065	5985635	2	True				
ANR	5985700	Identifier	SPLAY_APP_CONTINUE		5985635	0					
ANR	5985701	ReturnType	static splay_app_result_t		5985635	1					
ANR	5985702	Identifier	free_if_empty		5985635	2					
ANR	5985703	ParameterList	"clump_t * cp , void * arg"		5985635	3					
ANR	5985704	Parameter	clump_t * cp	1365:14:44748:44758	5985635	0	True				
ANR	5985705	ParameterType	clump_t *		5985635	0					
ANR	5985706	Identifier	cp		5985635	1					
ANR	5985707	Parameter	void * arg	1365:27:44761:44769	5985635	1	True				
ANR	5985708	ParameterType	void *		5985635	0					
ANR	5985709	Identifier	arg		5985635	1					
ANR	5985710	CFGEntryNode	ENTRY		5985635		True				
ANR	5985711	CFGExitNode	EXIT		5985635		True				
ANR	5985712	Symbol	NULL		5985635						
ANR	5985713	Symbol	cp -> inner_count		5985635						
ANR	5985714	Symbol	cp -> cbase		5985635						
ANR	5985715	Symbol	cp		5985635						
ANR	5985716	Symbol	cp -> climit		5985635						
ANR	5985717	Symbol	* cp		5985635						
ANR	5985718	Symbol	cp -> cbot		5985635						
ANR	5985719	Symbol	mem		5985635						
ANR	5985720	Symbol	arg		5985635						
ANR	5985721	Symbol	mem -> cc		5985635						
ANR	5985722	Symbol	cp -> outer		5985635						
ANR	5985723	Symbol	cp -> ctop		5985635						
ANR	5985724	Symbol	* mem		5985635						
ANR	5985725	Symbol	SPLAY_APP_CONTINUE		5985635						
ANR	5985726	Function	gc_free_empty_clumps	1380:0:45095:45318							
ANR	5985727	FunctionDef	gc_free_empty_clumps (gs_ref_memory_t * mem)		5985726	0					
ANR	5985728	CompoundStatement		1382:0:45151:45318	5985726	0					
ANR	5985729	ExpressionStatement	"clump_splay_app ( mem -> root , mem , free_if_empty , mem )"	1385:4:45265:45316	5985726	0	True				
ANR	5985730	CallExpression	"clump_splay_app ( mem -> root , mem , free_if_empty , mem )"		5985726	0					
ANR	5985731	Callee	clump_splay_app		5985726	0					
ANR	5985732	Identifier	clump_splay_app		5985726	0					
ANR	5985733	ArgumentList	mem -> root		5985726	1					
ANR	5985734	Argument	mem -> root		5985726	0					
ANR	5985735	PtrMemberAccess	mem -> root		5985726	0					
ANR	5985736	Identifier	mem		5985726	0					
ANR	5985737	Identifier	root		5985726	1					
ANR	5985738	Argument	mem		5985726	1					
ANR	5985739	Identifier	mem		5985726	0					
ANR	5985740	Argument	free_if_empty		5985726	2					
ANR	5985741	Identifier	free_if_empty		5985726	0					
ANR	5985742	Argument	mem		5985726	3					
ANR	5985743	Identifier	mem		5985726	0					
ANR	5985744	ReturnType	static void		5985726	1					
ANR	5985745	Identifier	gc_free_empty_clumps		5985726	2					
ANR	5985746	ParameterList	gs_ref_memory_t * mem		5985726	3					
ANR	5985747	Parameter	gs_ref_memory_t * mem	1381:21:45128:45148	5985726	0	True				
ANR	5985748	ParameterType	gs_ref_memory_t *		5985726	0					
ANR	5985749	Identifier	mem		5985726	1					
ANR	5985750	CFGEntryNode	ENTRY		5985726		True				
ANR	5985751	CFGExitNode	EXIT		5985726		True				
ANR	5985752	Symbol	free_if_empty		5985726						
ANR	5985753	Symbol	mem		5985726						
ANR	5985754	Symbol	mem -> root		5985726						
ANR	5985755	Symbol	* mem		5985726						
ANR	5985756	Function	gcst_get_memory_ptr	1388:0:45321:45494							
ANR	5985757	FunctionDef	gcst_get_memory_ptr (gc_state_t * gcst)		5985756	0					
ANR	5985758	CompoundStatement		1389:0:45379:45494	5985756	0					
ANR	5985759	IdentifierDeclStatement	vm_spaces spaces = gcst -> spaces ;	1390:4:45385:45416	5985756	0	True				
ANR	5985760	IdentifierDecl	spaces = gcst -> spaces		5985756	0					
ANR	5985761	IdentifierDeclType	vm_spaces		5985756	0					
ANR	5985762	Identifier	spaces		5985756	1					
ANR	5985763	AssignmentExpression	spaces = gcst -> spaces		5985756	2		=			
ANR	5985764	Identifier	spaces		5985756	0					
ANR	5985765	PtrMemberAccess	gcst -> spaces		5985756	1					
ANR	5985766	Identifier	gcst		5985756	0					
ANR	5985767	Identifier	spaces		5985756	1					
ANR	5985768	IdentifierDeclStatement	const gs_memory_t * cmem = space_system -> stable_memory ;	1391:4:45422:45475	5985756	1	True				
ANR	5985769	IdentifierDecl	* cmem = space_system -> stable_memory		5985756	0					
ANR	5985770	IdentifierDeclType	const gs_memory_t *		5985756	0					
ANR	5985771	Identifier	cmem		5985756	1					
ANR	5985772	AssignmentExpression	* cmem = space_system -> stable_memory		5985756	2		=			
ANR	5985773	Identifier	cmem		5985756	0					
ANR	5985774	PtrMemberAccess	space_system -> stable_memory		5985756	1					
ANR	5985775	Identifier	space_system		5985756	0					
ANR	5985776	Identifier	stable_memory		5985756	1					
ANR	5985777	ReturnStatement	return cmem ;	1392:4:45481:45492	5985756	2	True				
ANR	5985778	Identifier	cmem		5985756	0					
ANR	5985779	ReturnType	const gs_memory_t *		5985756	1					
ANR	5985780	Identifier	gcst_get_memory_ptr		5985756	2					
ANR	5985781	ParameterList	gc_state_t * gcst		5985756	3					
ANR	5985782	Parameter	gc_state_t * gcst	1388:40:45361:45376	5985756	0	True				
ANR	5985783	ParameterType	gc_state_t *		5985756	0					
ANR	5985784	Identifier	gcst		5985756	1					
ANR	5985785	CFGEntryNode	ENTRY		5985756		True				
ANR	5985786	CFGExitNode	EXIT		5985756		True				
ANR	5985787	Symbol	space_system -> stable_memory		5985756						
ANR	5985788	Symbol	space_system		5985756						
ANR	5985789	Symbol	* space_system		5985756						
ANR	5985790	Symbol	gcst -> spaces		5985756						
ANR	5985791	Symbol	spaces		5985756						
ANR	5985792	Symbol	cmem		5985756						
ANR	5985793	Symbol	gcst		5985756						
ANR	5985794	Symbol	* gcst		5985756						
