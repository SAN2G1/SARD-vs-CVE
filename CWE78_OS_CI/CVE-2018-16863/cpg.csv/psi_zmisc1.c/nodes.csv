command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9162460	File	data/converged/CVE-2018-16863_ghostpdl/psi_zmisc1.c								
ANR	9162461	DeclStmt									
ANR	9162462	Decl							int	"int ( i_ctx_t * , int ( * ) ( byte * , const byte * , uint , ushort * ) )"	type1crypt
ANR	9162463	Function	ztype1encrypt	33:0:1125:1220							
ANR	9162464	FunctionDef	ztype1encrypt (i_ctx_t * i_ctx_p)		9162463	0					
ANR	9162465	CompoundStatement		35:0:1168:1220	9162463	0					
ANR	9162466	ReturnStatement	"return type1crypt ( i_ctx_p , gs_type1_encrypt ) ;"	36:4:1174:1218	9162463	0	True				
ANR	9162467	CallExpression	"type1crypt ( i_ctx_p , gs_type1_encrypt )"		9162463	0					
ANR	9162468	Callee	type1crypt		9162463	0					
ANR	9162469	Identifier	type1crypt		9162463	0					
ANR	9162470	ArgumentList	i_ctx_p		9162463	1					
ANR	9162471	Argument	i_ctx_p		9162463	0					
ANR	9162472	Identifier	i_ctx_p		9162463	0					
ANR	9162473	Argument	gs_type1_encrypt		9162463	1					
ANR	9162474	Identifier	gs_type1_encrypt		9162463	0					
ANR	9162475	ReturnType	static int		9162463	1					
ANR	9162476	Identifier	ztype1encrypt		9162463	2					
ANR	9162477	ParameterList	i_ctx_t * i_ctx_p		9162463	3					
ANR	9162478	Parameter	i_ctx_t * i_ctx_p	34:14:1150:1165	9162463	0	True				
ANR	9162479	ParameterType	i_ctx_t *		9162463	0					
ANR	9162480	Identifier	i_ctx_p		9162463	1					
ANR	9162481	CFGEntryNode	ENTRY		9162463		True				
ANR	9162482	CFGExitNode	EXIT		9162463		True				
ANR	9162483	Symbol	gs_type1_encrypt		9162463						
ANR	9162484	Symbol	i_ctx_p		9162463						
ANR	9162485	Symbol	type1crypt		9162463						
ANR	9162486	Function	ztype1decrypt	38:0:1222:1317							
ANR	9162487	FunctionDef	ztype1decrypt (i_ctx_t * i_ctx_p)		9162486	0					
ANR	9162488	CompoundStatement		40:0:1265:1317	9162486	0					
ANR	9162489	ReturnStatement	"return type1crypt ( i_ctx_p , gs_type1_decrypt ) ;"	41:4:1271:1315	9162486	0	True				
ANR	9162490	CallExpression	"type1crypt ( i_ctx_p , gs_type1_decrypt )"		9162486	0					
ANR	9162491	Callee	type1crypt		9162486	0					
ANR	9162492	Identifier	type1crypt		9162486	0					
ANR	9162493	ArgumentList	i_ctx_p		9162486	1					
ANR	9162494	Argument	i_ctx_p		9162486	0					
ANR	9162495	Identifier	i_ctx_p		9162486	0					
ANR	9162496	Argument	gs_type1_decrypt		9162486	1					
ANR	9162497	Identifier	gs_type1_decrypt		9162486	0					
ANR	9162498	ReturnType	static int		9162486	1					
ANR	9162499	Identifier	ztype1decrypt		9162486	2					
ANR	9162500	ParameterList	i_ctx_t * i_ctx_p		9162486	3					
ANR	9162501	Parameter	i_ctx_t * i_ctx_p	39:14:1247:1262	9162486	0	True				
ANR	9162502	ParameterType	i_ctx_t *		9162486	0					
ANR	9162503	Identifier	i_ctx_p		9162486	1					
ANR	9162504	CFGEntryNode	ENTRY		9162486		True				
ANR	9162505	CFGExitNode	EXIT		9162486		True				
ANR	9162506	Symbol	gs_type1_decrypt		9162486						
ANR	9162507	Symbol	i_ctx_p		9162486						
ANR	9162508	Symbol	type1crypt		9162486						
ANR	9162509	Function	type1crypt	43:0:1319:2065							
ANR	9162510	FunctionDef	"type1crypt (i_ctx_t * i_ctx_p , int ( * proc ) ( byte * , const byte * , uint , ushort * ))"		9162509	0					
ANR	9162511	CompoundStatement		46:0:1421:2065	9162509	0					
ANR	9162512	IdentifierDeclStatement	os_ptr op = osp ;	47:4:1427:1442	9162509	0	True				
ANR	9162513	IdentifierDecl	op = osp		9162509	0					
ANR	9162514	IdentifierDeclType	os_ptr		9162509	0					
ANR	9162515	Identifier	op		9162509	1					
ANR	9162516	AssignmentExpression	op = osp		9162509	2		=			
ANR	9162517	Identifier	osp		9162509	0					
ANR	9162518	Identifier	osp		9162509	1					
ANR	9162519	IdentifierDeclStatement	crypt_state state ;	48:4:1448:1465	9162509	1	True				
ANR	9162520	IdentifierDecl	state		9162509	0					
ANR	9162521	IdentifierDeclType	crypt_state		9162509	0					
ANR	9162522	Identifier	state		9162509	1					
ANR	9162523	IdentifierDeclStatement	uint ssize ;	49:4:1471:1481	9162509	2	True				
ANR	9162524	IdentifierDecl	ssize		9162509	0					
ANR	9162525	IdentifierDeclType	uint		9162509	0					
ANR	9162526	Identifier	ssize		9162509	1					
ANR	9162527	ExpressionStatement	"check_type ( op [ - 2 ] , t_integer )"	51:4:1488:1517	9162509	3	True				
ANR	9162528	CallExpression	"check_type ( op [ - 2 ] , t_integer )"		9162509	0					
ANR	9162529	Callee	check_type		9162509	0					
ANR	9162530	Identifier	check_type		9162509	0					
ANR	9162531	ArgumentList	op [ - 2 ]		9162509	1					
ANR	9162532	Argument	op [ - 2 ]		9162509	0					
ANR	9162533	ArrayIndexing	op [ - 2 ]		9162509	0					
ANR	9162534	Identifier	op		9162509	0					
ANR	9162535	UnaryOperationExpression	- 2		9162509	1					
ANR	9162536	UnaryOperator	-		9162509	0					
ANR	9162537	PrimaryExpression	2		9162509	1					
ANR	9162538	Argument	t_integer		9162509	1					
ANR	9162539	Identifier	t_integer		9162509	0					
ANR	9162540	ExpressionStatement	state = op [ - 2 ] . value . intval	52:4:1523:1550	9162509	4	True				
ANR	9162541	AssignmentExpression	state = op [ - 2 ] . value . intval		9162509	0		=			
ANR	9162542	Identifier	state		9162509	0					
ANR	9162543	MemberAccess	op [ - 2 ] . value . intval		9162509	1					
ANR	9162544	MemberAccess	op [ - 2 ] . value		9162509	0					
ANR	9162545	ArrayIndexing	op [ - 2 ]		9162509	0					
ANR	9162546	Identifier	op		9162509	0					
ANR	9162547	UnaryOperationExpression	- 2		9162509	1					
ANR	9162548	UnaryOperator	-		9162509	0					
ANR	9162549	PrimaryExpression	2		9162509	1					
ANR	9162550	Identifier	value		9162509	1					
ANR	9162551	Identifier	intval		9162509	1					
ANR	9162552	IfStatement	if ( op [ - 2 ] . value . intval != state )		9162509	5					
ANR	9162553	Condition	op [ - 2 ] . value . intval != state	53:8:1560:1587	9162509	0	True				
ANR	9162554	EqualityExpression	op [ - 2 ] . value . intval != state		9162509	0		!=			
ANR	9162555	MemberAccess	op [ - 2 ] . value . intval		9162509	0					
ANR	9162556	MemberAccess	op [ - 2 ] . value		9162509	0					
ANR	9162557	ArrayIndexing	op [ - 2 ]		9162509	0					
ANR	9162558	Identifier	op		9162509	0					
ANR	9162559	UnaryOperationExpression	- 2		9162509	1					
ANR	9162560	UnaryOperator	-		9162509	0					
ANR	9162561	PrimaryExpression	2		9162509	1					
ANR	9162562	Identifier	value		9162509	1					
ANR	9162563	Identifier	intval		9162509	1					
ANR	9162564	Identifier	state		9162509	1					
ANR	9162565	ExpressionStatement	return_error ( gs_error_rangecheck )	54:8:1598:1631	9162509	1	True				
ANR	9162566	CallExpression	return_error ( gs_error_rangecheck )		9162509	0					
ANR	9162567	Callee	return_error		9162509	0					
ANR	9162568	Identifier	return_error		9162509	0					
ANR	9162569	ArgumentList	gs_error_rangecheck		9162509	1					
ANR	9162570	Argument	gs_error_rangecheck		9162509	0					
ANR	9162571	Identifier	gs_error_rangecheck		9162509	0					
ANR	9162572	ExpressionStatement	"check_read_type ( op [ - 1 ] , t_string )"	55:4:1669:1702	9162509	6	True				
ANR	9162573	CallExpression	"check_read_type ( op [ - 1 ] , t_string )"		9162509	0					
ANR	9162574	Callee	check_read_type		9162509	0					
ANR	9162575	Identifier	check_read_type		9162509	0					
ANR	9162576	ArgumentList	op [ - 1 ]		9162509	1					
ANR	9162577	Argument	op [ - 1 ]		9162509	0					
ANR	9162578	ArrayIndexing	op [ - 1 ]		9162509	0					
ANR	9162579	Identifier	op		9162509	0					
ANR	9162580	UnaryOperationExpression	- 1		9162509	1					
ANR	9162581	UnaryOperator	-		9162509	0					
ANR	9162582	PrimaryExpression	1		9162509	1					
ANR	9162583	Argument	t_string		9162509	1					
ANR	9162584	Identifier	t_string		9162509	0					
ANR	9162585	ExpressionStatement	"check_write_type ( * op , t_string )"	56:4:1708:1739	9162509	7	True				
ANR	9162586	CallExpression	"check_write_type ( * op , t_string )"		9162509	0					
ANR	9162587	Callee	check_write_type		9162509	0					
ANR	9162588	Identifier	check_write_type		9162509	0					
ANR	9162589	ArgumentList	* op		9162509	1					
ANR	9162590	Argument	* op		9162509	0					
ANR	9162591	UnaryOperationExpression	* op		9162509	0					
ANR	9162592	UnaryOperator	*		9162509	0					
ANR	9162593	Identifier	op		9162509	1					
ANR	9162594	Argument	t_string		9162509	1					
ANR	9162595	Identifier	t_string		9162509	0					
ANR	9162596	ExpressionStatement	ssize = r_size ( op - 1 )	57:4:1745:1767	9162509	8	True				
ANR	9162597	AssignmentExpression	ssize = r_size ( op - 1 )		9162509	0		=			
ANR	9162598	Identifier	ssize		9162509	0					
ANR	9162599	CallExpression	r_size ( op - 1 )		9162509	1					
ANR	9162600	Callee	r_size		9162509	0					
ANR	9162601	Identifier	r_size		9162509	0					
ANR	9162602	ArgumentList	op - 1		9162509	1					
ANR	9162603	Argument	op - 1		9162509	0					
ANR	9162604	AdditiveExpression	op - 1		9162509	0		-			
ANR	9162605	Identifier	op		9162509	0					
ANR	9162606	PrimaryExpression	1		9162509	1					
ANR	9162607	IfStatement	if ( r_size ( op ) < ssize )		9162509	9					
ANR	9162608	Condition	r_size ( op ) < ssize	58:8:1777:1794	9162509	0	True				
ANR	9162609	RelationalExpression	r_size ( op ) < ssize		9162509	0		<			
ANR	9162610	CallExpression	r_size ( op )		9162509	0					
ANR	9162611	Callee	r_size		9162509	0					
ANR	9162612	Identifier	r_size		9162509	0					
ANR	9162613	ArgumentList	op		9162509	1					
ANR	9162614	Argument	op		9162509	0					
ANR	9162615	Identifier	op		9162509	0					
ANR	9162616	Identifier	ssize		9162509	1					
ANR	9162617	ExpressionStatement	return_error ( gs_error_rangecheck )	59:8:1805:1838	9162509	1	True				
ANR	9162618	CallExpression	return_error ( gs_error_rangecheck )		9162509	0					
ANR	9162619	Callee	return_error		9162509	0					
ANR	9162620	Identifier	return_error		9162509	0					
ANR	9162621	ArgumentList	gs_error_rangecheck		9162509	1					
ANR	9162622	Argument	gs_error_rangecheck		9162509	0					
ANR	9162623	Identifier	gs_error_rangecheck		9162509	0					
ANR	9162624	ExpressionStatement	"discard ( ( * proc ) ( op -> value . bytes , op [ - 1 ] . value . const_bytes , ssize , & state ) )"	60:4:1844:1938	9162509	10	True				
ANR	9162625	CallExpression	"discard ( ( * proc ) ( op -> value . bytes , op [ - 1 ] . value . const_bytes , ssize , & state ) )"		9162509	0					
ANR	9162626	Callee	discard		9162509	0					
ANR	9162627	Identifier	discard		9162509	0					
ANR	9162628	ArgumentList	"( * proc ) ( op -> value . bytes , op [ - 1 ] . value . const_bytes , ssize , & state )"		9162509	1					
ANR	9162629	Argument	"( * proc ) ( op -> value . bytes , op [ - 1 ] . value . const_bytes , ssize , & state )"		9162509	0					
ANR	9162630	CallExpression	"( * proc ) ( op -> value . bytes , op [ - 1 ] . value . const_bytes , ssize , & state )"		9162509	0					
ANR	9162631	Callee	* proc		9162509	0					
ANR	9162632	UnaryOperationExpression	* proc		9162509	0					
ANR	9162633	UnaryOperator	*		9162509	0					
ANR	9162634	Identifier	proc		9162509	1					
ANR	9162635	ArgumentList	op -> value . bytes		9162509	1					
ANR	9162636	Argument	op -> value . bytes		9162509	0					
ANR	9162637	MemberAccess	op -> value . bytes		9162509	0					
ANR	9162638	PtrMemberAccess	op -> value		9162509	0					
ANR	9162639	Identifier	op		9162509	0					
ANR	9162640	Identifier	value		9162509	1					
ANR	9162641	Identifier	bytes		9162509	1					
ANR	9162642	Argument	op [ - 1 ] . value . const_bytes		9162509	1					
ANR	9162643	MemberAccess	op [ - 1 ] . value . const_bytes		9162509	0					
ANR	9162644	MemberAccess	op [ - 1 ] . value		9162509	0					
ANR	9162645	ArrayIndexing	op [ - 1 ]		9162509	0					
ANR	9162646	Identifier	op		9162509	0					
ANR	9162647	UnaryOperationExpression	- 1		9162509	1					
ANR	9162648	UnaryOperator	-		9162509	0					
ANR	9162649	PrimaryExpression	1		9162509	1					
ANR	9162650	Identifier	value		9162509	1					
ANR	9162651	Identifier	const_bytes		9162509	1					
ANR	9162652	Argument	ssize		9162509	2					
ANR	9162653	Identifier	ssize		9162509	0					
ANR	9162654	Argument	& state		9162509	3					
ANR	9162655	UnaryOperationExpression	& state		9162509	0					
ANR	9162656	UnaryOperator	&		9162509	0					
ANR	9162657	Identifier	state		9162509	1					
ANR	9162658	ExpressionStatement	op [ - 2 ] . value . intval = state	62:4:1961:1988	9162509	11	True				
ANR	9162659	AssignmentExpression	op [ - 2 ] . value . intval = state		9162509	0		=			
ANR	9162660	MemberAccess	op [ - 2 ] . value . intval		9162509	0					
ANR	9162661	MemberAccess	op [ - 2 ] . value		9162509	0					
ANR	9162662	ArrayIndexing	op [ - 2 ]		9162509	0					
ANR	9162663	Identifier	op		9162509	0					
ANR	9162664	UnaryOperationExpression	- 2		9162509	1					
ANR	9162665	UnaryOperator	-		9162509	0					
ANR	9162666	PrimaryExpression	2		9162509	1					
ANR	9162667	Identifier	value		9162509	1					
ANR	9162668	Identifier	intval		9162509	1					
ANR	9162669	Identifier	state		9162509	1					
ANR	9162670	ExpressionStatement	op [ - 1 ] = * op	63:4:1994:2006	9162509	12	True				
ANR	9162671	AssignmentExpression	op [ - 1 ] = * op		9162509	0		=			
ANR	9162672	ArrayIndexing	op [ - 1 ]		9162509	0					
ANR	9162673	Identifier	op		9162509	0					
ANR	9162674	UnaryOperationExpression	- 1		9162509	1					
ANR	9162675	UnaryOperator	-		9162509	0					
ANR	9162676	PrimaryExpression	1		9162509	1					
ANR	9162677	UnaryOperationExpression	* op		9162509	1					
ANR	9162678	UnaryOperator	*		9162509	0					
ANR	9162679	Identifier	op		9162509	1					
ANR	9162680	ExpressionStatement	"r_set_size ( op - 1 , ssize )"	64:4:2012:2037	9162509	13	True				
ANR	9162681	CallExpression	"r_set_size ( op - 1 , ssize )"		9162509	0					
ANR	9162682	Callee	r_set_size		9162509	0					
ANR	9162683	Identifier	r_set_size		9162509	0					
ANR	9162684	ArgumentList	op - 1		9162509	1					
ANR	9162685	Argument	op - 1		9162509	0					
ANR	9162686	AdditiveExpression	op - 1		9162509	0		-			
ANR	9162687	Identifier	op		9162509	0					
ANR	9162688	PrimaryExpression	1		9162509	1					
ANR	9162689	Argument	ssize		9162509	1					
ANR	9162690	Identifier	ssize		9162509	0					
ANR	9162691	ExpressionStatement	pop ( 1 )	65:4:2043:2049	9162509	14	True				
ANR	9162692	CallExpression	pop ( 1 )		9162509	0					
ANR	9162693	Callee	pop		9162509	0					
ANR	9162694	Identifier	pop		9162509	0					
ANR	9162695	ArgumentList	1		9162509	1					
ANR	9162696	Argument	1		9162509	0					
ANR	9162697	PrimaryExpression	1		9162509	0					
ANR	9162698	ReturnStatement	return 0 ;	66:4:2055:2063	9162509	15	True				
ANR	9162699	PrimaryExpression	0		9162509	0					
ANR	9162700	ReturnType	static int		9162509	1					
ANR	9162701	Identifier	type1crypt		9162509	2					
ANR	9162702	ParameterList	"i_ctx_t * i_ctx_p , int ( * proc ) ( byte * , const byte * , uint , ushort * )"		9162509	3					
ANR	9162703	Parameter	i_ctx_t * i_ctx_p	44:11:1341:1356	9162509	0	True				
ANR	9162704	ParameterType	i_ctx_t *		9162509	0					
ANR	9162705	Identifier	i_ctx_p		9162509	1					
ANR	9162706	Parameter	"int ( * proc ) ( byte * , const byte * , uint , ushort * )"	45:11:1370:1418	9162509	1	True				
ANR	9162707	ParameterType	"(( byte * , const byte * , uint , ushort * ) int) *"		9162509	0					
ANR	9162708	Identifier	proc		9162509	1					
ANR	9162709	CFGEntryNode	ENTRY		9162509		True				
ANR	9162710	CFGExitNode	EXIT		9162509		True				
ANR	9162711	Symbol	op		9162509						
ANR	9162712	Symbol	proc		9162509						
ANR	9162713	Symbol	* op		9162509						
ANR	9162714	Symbol	gs_error_rangecheck		9162509						
ANR	9162715	Symbol	& state		9162509						
ANR	9162716	Symbol	op [ - 1 ] . value		9162509						
ANR	9162717	Symbol	osp		9162509						
ANR	9162718	Symbol	* proc		9162509						
ANR	9162719	Symbol	t_string		9162509						
ANR	9162720	Symbol	op [ - 1 ] . value . const_bytes		9162509						
ANR	9162721	Symbol	t_integer		9162509						
ANR	9162722	Symbol	op [ - 2 ] . value		9162509						
ANR	9162723	Symbol	i_ctx_p		9162509						
ANR	9162724	Symbol	op -> value		9162509						
ANR	9162725	Symbol	op [ - 2 ] . value . intval		9162509						
ANR	9162726	Symbol	r_size		9162509						
ANR	9162727	Symbol	op -> value . bytes		9162509						
ANR	9162728	Symbol	state		9162509						
ANR	9162729	Symbol	ssize		9162509						
ANR	9162730	Function	eexec_param	71:0:2146:2474							
ANR	9162731	FunctionDef	"eexec_param (os_ptr op , ushort * pcstate)"		9162730	0					
ANR	9162732	CompoundStatement		73:0:2198:2474	9162730	0					
ANR	9162733	IdentifierDeclStatement	int npop = 1 ;	74:4:2204:2216	9162730	0	True				
ANR	9162734	IdentifierDecl	npop = 1		9162730	0					
ANR	9162735	IdentifierDeclType	int		9162730	0					
ANR	9162736	Identifier	npop		9162730	1					
ANR	9162737	AssignmentExpression	npop = 1		9162730	2		=			
ANR	9162738	Identifier	npop		9162730	0					
ANR	9162739	PrimaryExpression	1		9162730	1					
ANR	9162740	IfStatement	"if ( r_has_type ( op , t_dictionary ) )"		9162730	1					
ANR	9162741	Condition	"r_has_type ( op , t_dictionary )"	76:8:2227:2254	9162730	0	True				
ANR	9162742	CallExpression	"r_has_type ( op , t_dictionary )"		9162730	0					
ANR	9162743	Callee	r_has_type		9162730	0					
ANR	9162744	Identifier	r_has_type		9162730	0					
ANR	9162745	ArgumentList	op		9162730	1					
ANR	9162746	Argument	op		9162730	0					
ANR	9162747	Identifier	op		9162730	0					
ANR	9162748	Argument	t_dictionary		9162730	1					
ANR	9162749	Identifier	t_dictionary		9162730	0					
ANR	9162750	ExpressionStatement	"++ npop , -- op"	77:8:2265:2277	9162730	1	True				
ANR	9162751	Expression	"++ npop , -- op"		9162730	0					
ANR	9162752	UnaryExpression	++ npop		9162730	0					
ANR	9162753	IncDec	++		9162730	0					
ANR	9162754	Identifier	npop		9162730	1					
ANR	9162755	UnaryExpression	-- op		9162730	1					
ANR	9162756	IncDec	--		9162730	0					
ANR	9162757	Identifier	op		9162730	1					
ANR	9162758	ExpressionStatement	"check_type ( * op , t_integer )"	78:4:2283:2309	9162730	2	True				
ANR	9162759	CallExpression	"check_type ( * op , t_integer )"		9162730	0					
ANR	9162760	Callee	check_type		9162730	0					
ANR	9162761	Identifier	check_type		9162730	0					
ANR	9162762	ArgumentList	* op		9162730	1					
ANR	9162763	Argument	* op		9162730	0					
ANR	9162764	UnaryOperationExpression	* op		9162730	0					
ANR	9162765	UnaryOperator	*		9162730	0					
ANR	9162766	Identifier	op		9162730	1					
ANR	9162767	Argument	t_integer		9162730	1					
ANR	9162768	Identifier	t_integer		9162730	0					
ANR	9162769	ExpressionStatement	* pcstate = op -> value . intval	79:4:2315:2342	9162730	3	True				
ANR	9162770	AssignmentExpression	* pcstate = op -> value . intval		9162730	0		=			
ANR	9162771	UnaryOperationExpression	* pcstate		9162730	0					
ANR	9162772	UnaryOperator	*		9162730	0					
ANR	9162773	Identifier	pcstate		9162730	1					
ANR	9162774	MemberAccess	op -> value . intval		9162730	1					
ANR	9162775	PtrMemberAccess	op -> value		9162730	0					
ANR	9162776	Identifier	op		9162730	0					
ANR	9162777	Identifier	value		9162730	1					
ANR	9162778	Identifier	intval		9162730	1					
ANR	9162779	IfStatement	if ( op -> value . intval != * pcstate )		9162730	4					
ANR	9162780	Condition	op -> value . intval != * pcstate	80:8:2352:2379	9162730	0	True				
ANR	9162781	EqualityExpression	op -> value . intval != * pcstate		9162730	0		!=			
ANR	9162782	MemberAccess	op -> value . intval		9162730	0					
ANR	9162783	PtrMemberAccess	op -> value		9162730	0					
ANR	9162784	Identifier	op		9162730	0					
ANR	9162785	Identifier	value		9162730	1					
ANR	9162786	Identifier	intval		9162730	1					
ANR	9162787	UnaryOperationExpression	* pcstate		9162730	1					
ANR	9162788	UnaryOperator	*		9162730	0					
ANR	9162789	Identifier	pcstate		9162730	1					
ANR	9162790	ExpressionStatement	return_error ( gs_error_rangecheck )	81:8:2390:2423	9162730	1	True				
ANR	9162791	CallExpression	return_error ( gs_error_rangecheck )		9162730	0					
ANR	9162792	Callee	return_error		9162730	0					
ANR	9162793	Identifier	return_error		9162730	0					
ANR	9162794	ArgumentList	gs_error_rangecheck		9162730	1					
ANR	9162795	Argument	gs_error_rangecheck		9162730	0					
ANR	9162796	Identifier	gs_error_rangecheck		9162730	0					
ANR	9162797	ReturnStatement	return npop ;	82:4:2461:2472	9162730	5	True				
ANR	9162798	Identifier	npop		9162730	0					
ANR	9162799	ReturnType	static int		9162730	1					
ANR	9162800	Identifier	eexec_param		9162730	2					
ANR	9162801	ParameterList	"os_ptr op , ushort * pcstate"		9162730	3					
ANR	9162802	Parameter	os_ptr op	72:12:2169:2177	9162730	0	True				
ANR	9162803	ParameterType	os_ptr		9162730	0					
ANR	9162804	Identifier	op		9162730	1					
ANR	9162805	Parameter	ushort * pcstate	72:23:2180:2195	9162730	1	True				
ANR	9162806	ParameterType	ushort *		9162730	0					
ANR	9162807	Identifier	pcstate		9162730	1					
ANR	9162808	CFGEntryNode	ENTRY		9162730		True				
ANR	9162809	CFGExitNode	EXIT		9162730		True				
ANR	9162810	Symbol	npop		9162730						
ANR	9162811	Symbol	op		9162730						
ANR	9162812	Symbol	r_has_type		9162730						
ANR	9162813	Symbol	t_dictionary		9162730						
ANR	9162814	Symbol	* op		9162730						
ANR	9162815	Symbol	t_integer		9162730						
ANR	9162816	Symbol	gs_error_rangecheck		9162730						
ANR	9162817	Symbol	op -> value		9162730						
ANR	9162818	Symbol	pcstate		9162730						
ANR	9162819	Symbol	* pcstate		9162730						
ANR	9162820	Symbol	op -> value . intval		9162730						
ANR	9162821	Function	zexE	87:0:2588:2844							
ANR	9162822	FunctionDef	zexE (i_ctx_t * i_ctx_p)		9162821	0					
ANR	9162823	CompoundStatement		89:0:2622:2844	9162821	0					
ANR	9162824	IdentifierDeclStatement	os_ptr op = osp ;	90:4:2628:2643	9162821	0	True				
ANR	9162825	IdentifierDecl	op = osp		9162821	0					
ANR	9162826	IdentifierDeclType	os_ptr		9162821	0					
ANR	9162827	Identifier	op		9162821	1					
ANR	9162828	AssignmentExpression	op = osp		9162821	2		=			
ANR	9162829	Identifier	osp		9162821	0					
ANR	9162830	Identifier	osp		9162821	1					
ANR	9162831	IdentifierDeclStatement	stream_exE_state state ;	91:4:2649:2671	9162821	1	True				
ANR	9162832	IdentifierDecl	state		9162821	0					
ANR	9162833	IdentifierDeclType	stream_exE_state		9162821	0					
ANR	9162834	Identifier	state		9162821	1					
ANR	9162835	IdentifierDeclStatement	"int code = eexec_param ( op , & state . cstate ) ;"	92:4:2677:2718	9162821	2	True				
ANR	9162836	IdentifierDecl	"code = eexec_param ( op , & state . cstate )"		9162821	0					
ANR	9162837	IdentifierDeclType	int		9162821	0					
ANR	9162838	Identifier	code		9162821	1					
ANR	9162839	AssignmentExpression	"code = eexec_param ( op , & state . cstate )"		9162821	2		=			
ANR	9162840	Identifier	code		9162821	0					
ANR	9162841	CallExpression	"eexec_param ( op , & state . cstate )"		9162821	1					
ANR	9162842	Callee	eexec_param		9162821	0					
ANR	9162843	Identifier	eexec_param		9162821	0					
ANR	9162844	ArgumentList	op		9162821	1					
ANR	9162845	Argument	op		9162821	0					
ANR	9162846	Identifier	op		9162821	0					
ANR	9162847	Argument	& state . cstate		9162821	1					
ANR	9162848	UnaryOperationExpression	& state . cstate		9162821	0					
ANR	9162849	UnaryOperator	&		9162821	0					
ANR	9162850	MemberAccess	state . cstate		9162821	1					
ANR	9162851	Identifier	state		9162821	0					
ANR	9162852	Identifier	cstate		9162821	1					
ANR	9162853	IfStatement	if ( code < 0 )		9162821	3					
ANR	9162854	Condition	code < 0	94:8:2729:2736	9162821	0	True				
ANR	9162855	RelationalExpression	code < 0		9162821	0		<			
ANR	9162856	Identifier	code		9162821	0					
ANR	9162857	PrimaryExpression	0		9162821	1					
ANR	9162858	ReturnStatement	return code ;	95:8:2747:2758	9162821	1	True				
ANR	9162859	Identifier	code		9162821	0					
ANR	9162860	ReturnStatement	"return filter_write ( i_ctx_p , code , & s_exE_template , ( stream_state * ) & state , 0 ) ;"	96:4:2764:2842	9162821	4	True				
ANR	9162861	CallExpression	"filter_write ( i_ctx_p , code , & s_exE_template , ( stream_state * ) & state , 0 )"		9162821	0					
ANR	9162862	Callee	filter_write		9162821	0					
ANR	9162863	Identifier	filter_write		9162821	0					
ANR	9162864	ArgumentList	i_ctx_p		9162821	1					
ANR	9162865	Argument	i_ctx_p		9162821	0					
ANR	9162866	Identifier	i_ctx_p		9162821	0					
ANR	9162867	Argument	code		9162821	1					
ANR	9162868	Identifier	code		9162821	0					
ANR	9162869	Argument	& s_exE_template		9162821	2					
ANR	9162870	UnaryOperationExpression	& s_exE_template		9162821	0					
ANR	9162871	UnaryOperator	&		9162821	0					
ANR	9162872	Identifier	s_exE_template		9162821	1					
ANR	9162873	Argument	( stream_state * ) & state		9162821	3					
ANR	9162874	CastExpression	( stream_state * ) & state		9162821	0					
ANR	9162875	CastTarget	stream_state *		9162821	0					
ANR	9162876	UnaryOperationExpression	& state		9162821	1					
ANR	9162877	UnaryOperator	&		9162821	0					
ANR	9162878	Identifier	state		9162821	1					
ANR	9162879	Argument	0		9162821	4					
ANR	9162880	PrimaryExpression	0		9162821	0					
ANR	9162881	ReturnType	static int		9162821	1					
ANR	9162882	Identifier	zexE		9162821	2					
ANR	9162883	ParameterList	i_ctx_t * i_ctx_p		9162821	3					
ANR	9162884	Parameter	i_ctx_t * i_ctx_p	88:5:2604:2619	9162821	0	True				
ANR	9162885	ParameterType	i_ctx_t *		9162821	0					
ANR	9162886	Identifier	i_ctx_p		9162821	1					
ANR	9162887	CFGEntryNode	ENTRY		9162821		True				
ANR	9162888	CFGExitNode	EXIT		9162821		True				
ANR	9162889	Symbol	op		9162821						
ANR	9162890	Symbol	code		9162821						
ANR	9162891	Symbol	& state		9162821						
ANR	9162892	Symbol	i_ctx_p		9162821						
ANR	9162893	Symbol	& s_exE_template		9162821						
ANR	9162894	Symbol	filter_write		9162821						
ANR	9162895	Symbol	eexec_param		9162821						
ANR	9162896	Symbol	state		9162821						
ANR	9162897	Symbol	osp		9162821						
ANR	9162898	Symbol	& state . cstate		9162821						
ANR	9162899	Function	zexD	101:0:2943:5151							
ANR	9162900	FunctionDef	zexD (i_ctx_t * i_ctx_p)		9162899	0					
ANR	9162901	CompoundStatement		103:0:2977:5151	9162899	0					
ANR	9162902	IdentifierDeclStatement	os_ptr op = osp ;	104:4:2983:2998	9162899	0	True				
ANR	9162903	IdentifierDecl	op = osp		9162899	0					
ANR	9162904	IdentifierDeclType	os_ptr		9162899	0					
ANR	9162905	Identifier	op		9162899	1					
ANR	9162906	AssignmentExpression	op = osp		9162899	2		=			
ANR	9162907	Identifier	osp		9162899	0					
ANR	9162908	Identifier	osp		9162899	1					
ANR	9162909	IdentifierDeclStatement	stream_exD_state state ;	105:4:3004:3026	9162899	1	True				
ANR	9162910	IdentifierDecl	state		9162899	0					
ANR	9162911	IdentifierDeclType	stream_exD_state		9162899	0					
ANR	9162912	Identifier	state		9162899	1					
ANR	9162913	IdentifierDeclStatement	int code ;	106:4:3032:3040	9162899	2	True				
ANR	9162914	IdentifierDecl	code		9162899	0					
ANR	9162915	IdentifierDeclType	int		9162899	0					
ANR	9162916	Identifier	code		9162899	1					
ANR	9162917	ExpressionStatement	( * s_exD_template . set_defaults ) ( ( stream_state * ) & state )	108:4:3047:3101	9162899	3	True				
ANR	9162918	CallExpression	( * s_exD_template . set_defaults ) ( ( stream_state * ) & state )		9162899	0					
ANR	9162919	Callee	* s_exD_template . set_defaults		9162899	0					
ANR	9162920	UnaryOperationExpression	* s_exD_template . set_defaults		9162899	0					
ANR	9162921	UnaryOperator	*		9162899	0					
ANR	9162922	MemberAccess	s_exD_template . set_defaults		9162899	1					
ANR	9162923	Identifier	s_exD_template		9162899	0					
ANR	9162924	Identifier	set_defaults		9162899	1					
ANR	9162925	ArgumentList	( stream_state * ) & state		9162899	1					
ANR	9162926	Argument	( stream_state * ) & state		9162899	0					
ANR	9162927	CastExpression	( stream_state * ) & state		9162899	0					
ANR	9162928	CastTarget	stream_state *		9162899	0					
ANR	9162929	UnaryOperationExpression	& state		9162899	1					
ANR	9162930	UnaryOperator	&		9162899	0					
ANR	9162931	Identifier	state		9162899	1					
ANR	9162932	IfStatement	"if ( r_has_type ( op , t_dictionary ) )"		9162899	4					
ANR	9162933	Condition	"r_has_type ( op , t_dictionary )"	109:8:3111:3138	9162899	0	True				
ANR	9162934	CallExpression	"r_has_type ( op , t_dictionary )"		9162899	0					
ANR	9162935	Callee	r_has_type		9162899	0					
ANR	9162936	Identifier	r_has_type		9162899	0					
ANR	9162937	ArgumentList	op		9162899	1					
ANR	9162938	Argument	op		9162899	0					
ANR	9162939	Identifier	op		9162899	0					
ANR	9162940	Argument	t_dictionary		9162899	1					
ANR	9162941	Identifier	t_dictionary		9162899	0					
ANR	9162942	CompoundStatement		9:8:194:207	9162899	1					
ANR	9162943	IdentifierDeclStatement	uint cstate ;	110:8:3151:3162	9162899	0	True				
ANR	9162944	IdentifierDecl	cstate		9162899	0					
ANR	9162945	IdentifierDeclType	uint		9162899	0					
ANR	9162946	Identifier	cstate		9162899	1					
ANR	9162947	IdentifierDeclStatement	bool is_eexec ;	111:8:3172:3185	9162899	1	True				
ANR	9162948	IdentifierDecl	is_eexec		9162899	0					
ANR	9162949	IdentifierDeclType	bool		9162899	0					
ANR	9162950	Identifier	is_eexec		9162899	1					
ANR	9162951	ExpressionStatement	check_dict_read ( * op )	113:8:3196:3216	9162899	2	True				
ANR	9162952	CallExpression	check_dict_read ( * op )		9162899	0					
ANR	9162953	Callee	check_dict_read		9162899	0					
ANR	9162954	Identifier	check_dict_read		9162899	0					
ANR	9162955	ArgumentList	* op		9162899	1					
ANR	9162956	Argument	* op		9162899	0					
ANR	9162957	UnaryOperationExpression	* op		9162899	0					
ANR	9162958	UnaryOperator	*		9162899	0					
ANR	9162959	Identifier	op		9162899	1					
ANR	9162960	IfStatement	"if ( ( code = dict_uint_param ( op , ""seed"" , 0 , 0xffff , 0x10000 , & cstate ) ) < 0 || ( code = dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV ) ) < 0 || ( code = dict_bool_param ( op , ""eexec"" , false , & is_eexec ) ) < 0 || ( code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces ) ) < 0 )"		9162899	3					
ANR	9162961	Condition	"( code = dict_uint_param ( op , ""seed"" , 0 , 0xffff , 0x10000 , & cstate ) ) < 0 || ( code = dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV ) ) < 0 || ( code = dict_bool_param ( op , ""eexec"" , false , & is_eexec ) ) < 0 || ( code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces ) ) < 0"	114:12:3230:3689	9162899	0	True				
ANR	9162962	OrExpression	"( code = dict_uint_param ( op , ""seed"" , 0 , 0xffff , 0x10000 , & cstate ) ) < 0 || ( code = dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV ) ) < 0 || ( code = dict_bool_param ( op , ""eexec"" , false , & is_eexec ) ) < 0 || ( code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces ) ) < 0"		9162899	0		||			
ANR	9162963	RelationalExpression	"( code = dict_uint_param ( op , ""seed"" , 0 , 0xffff , 0x10000 , & cstate ) ) < 0"		9162899	0		<			
ANR	9162964	AssignmentExpression	"code = dict_uint_param ( op , ""seed"" , 0 , 0xffff , 0x10000 , & cstate )"		9162899	0		=			
ANR	9162965	Identifier	code		9162899	0					
ANR	9162966	CallExpression	"dict_uint_param ( op , ""seed"" , 0 , 0xffff , 0x10000 , & cstate )"		9162899	1					
ANR	9162967	Callee	dict_uint_param		9162899	0					
ANR	9162968	Identifier	dict_uint_param		9162899	0					
ANR	9162969	ArgumentList	op		9162899	1					
ANR	9162970	Argument	op		9162899	0					
ANR	9162971	Identifier	op		9162899	0					
ANR	9162972	Argument	"""seed"""		9162899	1					
ANR	9162973	PrimaryExpression	"""seed"""		9162899	0					
ANR	9162974	Argument	0		9162899	2					
ANR	9162975	PrimaryExpression	0		9162899	0					
ANR	9162976	Argument	0xffff		9162899	3					
ANR	9162977	PrimaryExpression	0xffff		9162899	0					
ANR	9162978	Argument	0x10000		9162899	4					
ANR	9162979	PrimaryExpression	0x10000		9162899	0					
ANR	9162980	Argument	& cstate		9162899	5					
ANR	9162981	UnaryOperationExpression	& cstate		9162899	0					
ANR	9162982	UnaryOperator	&		9162899	0					
ANR	9162983	Identifier	cstate		9162899	1					
ANR	9162984	PrimaryExpression	0		9162899	1					
ANR	9162985	OrExpression	"( code = dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV ) ) < 0 || ( code = dict_bool_param ( op , ""eexec"" , false , & is_eexec ) ) < 0 || ( code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces ) ) < 0"		9162899	1		||			
ANR	9162986	RelationalExpression	"( code = dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV ) ) < 0"		9162899	0		<			
ANR	9162987	AssignmentExpression	"code = dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV )"		9162899	0		=			
ANR	9162988	Identifier	code		9162899	0					
ANR	9162989	CallExpression	"dict_int_param ( op , ""lenIV"" , 0 , max_int , 4 , & state . lenIV )"		9162899	1					
ANR	9162990	Callee	dict_int_param		9162899	0					
ANR	9162991	Identifier	dict_int_param		9162899	0					
ANR	9162992	ArgumentList	op		9162899	1					
ANR	9162993	Argument	op		9162899	0					
ANR	9162994	Identifier	op		9162899	0					
ANR	9162995	Argument	"""lenIV"""		9162899	1					
ANR	9162996	PrimaryExpression	"""lenIV"""		9162899	0					
ANR	9162997	Argument	0		9162899	2					
ANR	9162998	PrimaryExpression	0		9162899	0					
ANR	9162999	Argument	max_int		9162899	3					
ANR	9163000	Identifier	max_int		9162899	0					
ANR	9163001	Argument	4		9162899	4					
ANR	9163002	PrimaryExpression	4		9162899	0					
ANR	9163003	Argument	& state . lenIV		9162899	5					
ANR	9163004	UnaryOperationExpression	& state . lenIV		9162899	0					
ANR	9163005	UnaryOperator	&		9162899	0					
ANR	9163006	MemberAccess	state . lenIV		9162899	1					
ANR	9163007	Identifier	state		9162899	0					
ANR	9163008	Identifier	lenIV		9162899	1					
ANR	9163009	PrimaryExpression	0		9162899	1					
ANR	9163010	OrExpression	"( code = dict_bool_param ( op , ""eexec"" , false , & is_eexec ) ) < 0 || ( code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces ) ) < 0"		9162899	1		||			
ANR	9163011	RelationalExpression	"( code = dict_bool_param ( op , ""eexec"" , false , & is_eexec ) ) < 0"		9162899	0		<			
ANR	9163012	AssignmentExpression	"code = dict_bool_param ( op , ""eexec"" , false , & is_eexec )"		9162899	0		=			
ANR	9163013	Identifier	code		9162899	0					
ANR	9163014	CallExpression	"dict_bool_param ( op , ""eexec"" , false , & is_eexec )"		9162899	1					
ANR	9163015	Callee	dict_bool_param		9162899	0					
ANR	9163016	Identifier	dict_bool_param		9162899	0					
ANR	9163017	ArgumentList	op		9162899	1					
ANR	9163018	Argument	op		9162899	0					
ANR	9163019	Identifier	op		9162899	0					
ANR	9163020	Argument	"""eexec"""		9162899	1					
ANR	9163021	PrimaryExpression	"""eexec"""		9162899	0					
ANR	9163022	Argument	false		9162899	2					
ANR	9163023	Identifier	false		9162899	0					
ANR	9163024	Argument	& is_eexec		9162899	3					
ANR	9163025	UnaryOperationExpression	& is_eexec		9162899	0					
ANR	9163026	UnaryOperator	&		9162899	0					
ANR	9163027	Identifier	is_eexec		9162899	1					
ANR	9163028	PrimaryExpression	0		9162899	1					
ANR	9163029	RelationalExpression	"( code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces ) ) < 0"		9162899	1		<			
ANR	9163030	AssignmentExpression	"code = dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces )"		9162899	0		=			
ANR	9163031	Identifier	code		9162899	0					
ANR	9163032	CallExpression	"dict_bool_param ( op , ""keep_spaces"" , false , & state . keep_spaces )"		9162899	1					
ANR	9163033	Callee	dict_bool_param		9162899	0					
ANR	9163034	Identifier	dict_bool_param		9162899	0					
ANR	9163035	ArgumentList	op		9162899	1					
ANR	9163036	Argument	op		9162899	0					
ANR	9163037	Identifier	op		9162899	0					
ANR	9163038	Argument	"""keep_spaces"""		9162899	1					
ANR	9163039	PrimaryExpression	"""keep_spaces"""		9162899	0					
ANR	9163040	Argument	false		9162899	2					
ANR	9163041	Identifier	false		9162899	0					
ANR	9163042	Argument	& state . keep_spaces		9162899	3					
ANR	9163043	UnaryOperationExpression	& state . keep_spaces		9162899	0					
ANR	9163044	UnaryOperator	&		9162899	0					
ANR	9163045	MemberAccess	state . keep_spaces		9162899	1					
ANR	9163046	Identifier	state		9162899	0					
ANR	9163047	Identifier	keep_spaces		9162899	1					
ANR	9163048	PrimaryExpression	0		9162899	1					
ANR	9163049	ReturnStatement	return code ;	123:12:3717:3728	9162899	1	True				
ANR	9163050	Identifier	code		9162899	0					
ANR	9163051	ExpressionStatement	state . cstate = cstate	124:8:3738:3759	9162899	4	True				
ANR	9163052	AssignmentExpression	state . cstate = cstate		9162899	0		=			
ANR	9163053	MemberAccess	state . cstate		9162899	0					
ANR	9163054	Identifier	state		9162899	0					
ANR	9163055	Identifier	cstate		9162899	1					
ANR	9163056	Identifier	cstate		9162899	1					
ANR	9163057	ExpressionStatement	state . binary = ( is_eexec ? - 1 : 1 )	125:8:3769:3803	9162899	5	True				
ANR	9163058	AssignmentExpression	state . binary = ( is_eexec ? - 1 : 1 )		9162899	0		=			
ANR	9163059	MemberAccess	state . binary		9162899	0					
ANR	9163060	Identifier	state		9162899	0					
ANR	9163061	Identifier	binary		9162899	1					
ANR	9163062	ConditionalExpression	is_eexec ? - 1 : 1		9162899	1					
ANR	9163063	Condition	is_eexec		9162899	0					
ANR	9163064	Identifier	is_eexec		9162899	0					
ANR	9163065	UnaryOperationExpression	- 1		9162899	1					
ANR	9163066	UnaryOperator	-		9162899	0					
ANR	9163067	PrimaryExpression	1		9162899	1					
ANR	9163068	PrimaryExpression	1		9162899	2					
ANR	9163069	ExpressionStatement	code = 1	126:8:3813:3821	9162899	6	True				
ANR	9163070	AssignmentExpression	code = 1		9162899	0		=			
ANR	9163071	Identifier	code		9162899	0					
ANR	9163072	PrimaryExpression	1		9162899	1					
ANR	9163073	ElseStatement	else		9162899	0					
ANR	9163074	CompoundStatement		25:11:856:856	9162899	0					
ANR	9163075	ExpressionStatement	state . binary = 1	128:8:3844:3860	9162899	0	True				
ANR	9163076	AssignmentExpression	state . binary = 1		9162899	0		=			
ANR	9163077	MemberAccess	state . binary		9162899	0					
ANR	9163078	Identifier	state		9162899	0					
ANR	9163079	Identifier	binary		9162899	1					
ANR	9163080	PrimaryExpression	1		9162899	1					
ANR	9163081	ExpressionStatement	"code = eexec_param ( op , & state . cstate )"	129:8:3870:3907	9162899	1	True				
ANR	9163082	AssignmentExpression	"code = eexec_param ( op , & state . cstate )"		9162899	0		=			
ANR	9163083	Identifier	code		9162899	0					
ANR	9163084	CallExpression	"eexec_param ( op , & state . cstate )"		9162899	1					
ANR	9163085	Callee	eexec_param		9162899	0					
ANR	9163086	Identifier	eexec_param		9162899	0					
ANR	9163087	ArgumentList	op		9162899	1					
ANR	9163088	Argument	op		9162899	0					
ANR	9163089	Identifier	op		9162899	0					
ANR	9163090	Argument	& state . cstate		9162899	1					
ANR	9163091	UnaryOperationExpression	& state . cstate		9162899	0					
ANR	9163092	UnaryOperator	&		9162899	0					
ANR	9163093	MemberAccess	state . cstate		9162899	1					
ANR	9163094	Identifier	state		9162899	0					
ANR	9163095	Identifier	cstate		9162899	1					
ANR	9163096	IfStatement	if ( code < 0 )		9162899	5					
ANR	9163097	Condition	code < 0	131:8:3923:3930	9162899	0	True				
ANR	9163098	RelationalExpression	code < 0		9162899	0		<			
ANR	9163099	Identifier	code		9162899	0					
ANR	9163100	PrimaryExpression	0		9162899	1					
ANR	9163101	ReturnStatement	return code ;	132:8:3941:3952	9162899	1	True				
ANR	9163102	Identifier	code		9162899	0					
ANR	9163103	IfStatement	"if ( r_has_type ( op - 1 , t_file ) )"		9162899	6					
ANR	9163104	Condition	"r_has_type ( op - 1 , t_file )"	137:8:4111:4136	9162899	0	True				
ANR	9163105	CallExpression	"r_has_type ( op - 1 , t_file )"		9162899	0					
ANR	9163106	Callee	r_has_type		9162899	0					
ANR	9163107	Identifier	r_has_type		9162899	0					
ANR	9163108	ArgumentList	op - 1		9162899	1					
ANR	9163109	Argument	op - 1		9162899	0					
ANR	9163110	AdditiveExpression	op - 1		9162899	0		-			
ANR	9163111	Identifier	op		9162899	0					
ANR	9163112	PrimaryExpression	1		9162899	1					
ANR	9163113	Argument	t_file		9162899	1					
ANR	9163114	Identifier	t_file		9162899	0					
ANR	9163115	CompoundStatement		36:8:1171:1204	9162899	1					
ANR	9163116	IdentifierDeclStatement	stream * s = ( op - 1 ) -> value . pfile ;	138:8:4149:4182	9162899	0	True				
ANR	9163117	IdentifierDecl	* s = ( op - 1 ) -> value . pfile		9162899	0					
ANR	9163118	IdentifierDeclType	stream *		9162899	0					
ANR	9163119	Identifier	s		9162899	1					
ANR	9163120	AssignmentExpression	* s = ( op - 1 ) -> value . pfile		9162899	2		=			
ANR	9163121	Identifier	s		9162899	0					
ANR	9163122	MemberAccess	( op - 1 ) -> value . pfile		9162899	1					
ANR	9163123	PtrMemberAccess	( op - 1 ) -> value		9162899	0					
ANR	9163124	AdditiveExpression	op - 1		9162899	0		-			
ANR	9163125	Identifier	op		9162899	0					
ANR	9163126	PrimaryExpression	1		9162899	1					
ANR	9163127	Identifier	value		9162899	1					
ANR	9163128	Identifier	pfile		9162899	1					
ANR	9163129	IfStatement	if ( s -> state != 0 && s -> state -> templat == & s_PFBD_template )		9162899	1					
ANR	9163130	Condition	s -> state != 0 && s -> state -> templat == & s_PFBD_template	140:12:4197:4250	9162899	0	True				
ANR	9163131	AndExpression	s -> state != 0 && s -> state -> templat == & s_PFBD_template		9162899	0		&&			
ANR	9163132	EqualityExpression	s -> state != 0		9162899	0		!=			
ANR	9163133	PtrMemberAccess	s -> state		9162899	0					
ANR	9163134	Identifier	s		9162899	0					
ANR	9163135	Identifier	state		9162899	1					
ANR	9163136	PrimaryExpression	0		9162899	1					
ANR	9163137	EqualityExpression	s -> state -> templat == & s_PFBD_template		9162899	1		==			
ANR	9163138	PtrMemberAccess	s -> state -> templat		9162899	0					
ANR	9163139	PtrMemberAccess	s -> state		9162899	0					
ANR	9163140	Identifier	s		9162899	0					
ANR	9163141	Identifier	state		9162899	1					
ANR	9163142	Identifier	templat		9162899	1					
ANR	9163143	UnaryOperationExpression	& s_PFBD_template		9162899	1					
ANR	9163144	UnaryOperator	&		9162899	0					
ANR	9163145	Identifier	s_PFBD_template		9162899	1					
ANR	9163146	CompoundStatement		39:12:1289:1343	9162899	1					
ANR	9163147	IdentifierDeclStatement	stream_PFBD_state * pss = ( stream_PFBD_state * ) s -> state ;	141:12:4267:4321	9162899	0	True				
ANR	9163148	IdentifierDecl	* pss = ( stream_PFBD_state * ) s -> state		9162899	0					
ANR	9163149	IdentifierDeclType	stream_PFBD_state *		9162899	0					
ANR	9163150	Identifier	pss		9162899	1					
ANR	9163151	AssignmentExpression	* pss = ( stream_PFBD_state * ) s -> state		9162899	2		=			
ANR	9163152	Identifier	pss		9162899	0					
ANR	9163153	CastExpression	( stream_PFBD_state * ) s -> state		9162899	1					
ANR	9163154	CastTarget	stream_PFBD_state *		9162899	0					
ANR	9163155	PtrMemberAccess	s -> state		9162899	1					
ANR	9163156	Identifier	s		9162899	0					
ANR	9163157	Identifier	state		9162899	1					
ANR	9163158	ExpressionStatement	state . pfb_state = pss	143:12:4336:4357	9162899	1	True				
ANR	9163159	AssignmentExpression	state . pfb_state = pss		9162899	0		=			
ANR	9163160	MemberAccess	state . pfb_state		9162899	0					
ANR	9163161	Identifier	state		9162899	0					
ANR	9163162	Identifier	pfb_state		9162899	1					
ANR	9163163	Identifier	pss		9162899	1					
ANR	9163164	IfStatement	if ( pss -> record_type == 2 )		9162899	2					
ANR	9163165	Condition	pss -> record_type == 2	148:16:4545:4565	9162899	0	True				
ANR	9163166	EqualityExpression	pss -> record_type == 2		9162899	0		==			
ANR	9163167	PtrMemberAccess	pss -> record_type		9162899	0					
ANR	9163168	Identifier	pss		9162899	0					
ANR	9163169	Identifier	record_type		9162899	1					
ANR	9163170	PrimaryExpression	2		9162899	1					
ANR	9163171	CompoundStatement		46:39:1590:1590	9162899	1					
ANR	9163172	IfStatement	if ( pss -> binary_to_hex && sbufavailable ( s ) > 0 )		9162899	0					
ANR	9163173	Condition	pss -> binary_to_hex && sbufavailable ( s ) > 0	153:20:4759:4800	9162899	0	True				
ANR	9163174	AndExpression	pss -> binary_to_hex && sbufavailable ( s ) > 0		9162899	0		&&			
ANR	9163175	PtrMemberAccess	pss -> binary_to_hex		9162899	0					
ANR	9163176	Identifier	pss		9162899	0					
ANR	9163177	Identifier	binary_to_hex		9162899	1					
ANR	9163178	RelationalExpression	sbufavailable ( s ) > 0		9162899	1		>			
ANR	9163179	CallExpression	sbufavailable ( s )		9162899	0					
ANR	9163180	Callee	sbufavailable		9162899	0					
ANR	9163181	Identifier	sbufavailable		9162899	0					
ANR	9163182	ArgumentList	s		9162899	1					
ANR	9163183	Argument	s		9162899	0					
ANR	9163184	Identifier	s		9162899	0					
ANR	9163185	PrimaryExpression	0		9162899	1					
ANR	9163186	CompoundStatement		51:64:1825:1825	9162899	1					
ANR	9163187	ExpressionStatement	state . binary = 0	154:20:4825:4841	9162899	0	True				
ANR	9163188	AssignmentExpression	state . binary = 0		9162899	0		=			
ANR	9163189	MemberAccess	state . binary		9162899	0					
ANR	9163190	Identifier	state		9162899	0					
ANR	9163191	Identifier	binary		9162899	1					
ANR	9163192	PrimaryExpression	0		9162899	1					
ANR	9163193	ExpressionStatement	state . hex_left = sbufavailable ( s )	155:20:4882:4915	9162899	1	True				
ANR	9163194	AssignmentExpression	state . hex_left = sbufavailable ( s )		9162899	0		=			
ANR	9163195	MemberAccess	state . hex_left		9162899	0					
ANR	9163196	Identifier	state		9162899	0					
ANR	9163197	Identifier	hex_left		9162899	1					
ANR	9163198	CallExpression	sbufavailable ( s )		9162899	1					
ANR	9163199	Callee	sbufavailable		9162899	0					
ANR	9163200	Identifier	sbufavailable		9162899	0					
ANR	9163201	ArgumentList	s		9162899	1					
ANR	9163202	Argument	s		9162899	0					
ANR	9163203	Identifier	s		9162899	0					
ANR	9163204	ElseStatement	else		9162899	0					
ANR	9163205	CompoundStatement		54:23:1962:1962	9162899	0					
ANR	9163206	ExpressionStatement	state . binary = 1	157:20:4962:4978	9162899	0	True				
ANR	9163207	AssignmentExpression	state . binary = 1		9162899	0		=			
ANR	9163208	MemberAccess	state . binary		9162899	0					
ANR	9163209	Identifier	state		9162899	0					
ANR	9163210	Identifier	binary		9162899	1					
ANR	9163211	PrimaryExpression	1		9162899	1					
ANR	9163212	ExpressionStatement	pss -> binary_to_hex = 0	159:16:5014:5036	9162899	1	True				
ANR	9163213	AssignmentExpression	pss -> binary_to_hex = 0		9162899	0		=			
ANR	9163214	PtrMemberAccess	pss -> binary_to_hex		9162899	0					
ANR	9163215	Identifier	pss		9162899	0					
ANR	9163216	Identifier	binary_to_hex		9162899	1					
ANR	9163217	PrimaryExpression	0		9162899	1					
ANR	9163218	ReturnStatement	"return filter_read ( i_ctx_p , code , & s_exD_template , ( stream_state * ) & state , 0 ) ;"	163:4:5072:5149	9162899	7	True				
ANR	9163219	CallExpression	"filter_read ( i_ctx_p , code , & s_exD_template , ( stream_state * ) & state , 0 )"		9162899	0					
ANR	9163220	Callee	filter_read		9162899	0					
ANR	9163221	Identifier	filter_read		9162899	0					
ANR	9163222	ArgumentList	i_ctx_p		9162899	1					
ANR	9163223	Argument	i_ctx_p		9162899	0					
ANR	9163224	Identifier	i_ctx_p		9162899	0					
ANR	9163225	Argument	code		9162899	1					
ANR	9163226	Identifier	code		9162899	0					
ANR	9163227	Argument	& s_exD_template		9162899	2					
ANR	9163228	UnaryOperationExpression	& s_exD_template		9162899	0					
ANR	9163229	UnaryOperator	&		9162899	0					
ANR	9163230	Identifier	s_exD_template		9162899	1					
ANR	9163231	Argument	( stream_state * ) & state		9162899	3					
ANR	9163232	CastExpression	( stream_state * ) & state		9162899	0					
ANR	9163233	CastTarget	stream_state *		9162899	0					
ANR	9163234	UnaryOperationExpression	& state		9162899	1					
ANR	9163235	UnaryOperator	&		9162899	0					
ANR	9163236	Identifier	state		9162899	1					
ANR	9163237	Argument	0		9162899	4					
ANR	9163238	PrimaryExpression	0		9162899	0					
ANR	9163239	ReturnType	static int		9162899	1					
ANR	9163240	Identifier	zexD		9162899	2					
ANR	9163241	ParameterList	i_ctx_t * i_ctx_p		9162899	3					
ANR	9163242	Parameter	i_ctx_t * i_ctx_p	102:5:2959:2974	9162899	0	True				
ANR	9163243	ParameterType	i_ctx_t *		9162899	0					
ANR	9163244	Identifier	i_ctx_p		9162899	1					
ANR	9163245	CFGEntryNode	ENTRY		9162899		True				
ANR	9163246	CFGExitNode	EXIT		9162899		True				
ANR	9163247	Symbol	& state . keep_spaces		9162899						
ANR	9163248	Symbol	pss -> record_type		9162899						
ANR	9163249	Symbol	max_int		9162899						
ANR	9163250	Symbol	is_eexec		9162899						
ANR	9163251	Symbol	code		9162899						
ANR	9163252	Symbol	t_dictionary		9162899						
ANR	9163253	Symbol	& is_eexec		9162899						
ANR	9163254	Symbol	* op		9162899						
ANR	9163255	Symbol	& state		9162899						
ANR	9163256	Symbol	state . hex_left		9162899						
ANR	9163257	Symbol	( op - 1 ) -> value		9162899						
ANR	9163258	Symbol	osp		9162899						
ANR	9163259	Symbol	state . binary		9162899						
ANR	9163260	Symbol	sbufavailable		9162899						
ANR	9163261	Symbol	filter_read		9162899						
ANR	9163262	Symbol	& s_exD_template		9162899						
ANR	9163263	Symbol	pss		9162899						
ANR	9163264	Symbol	r_has_type		9162899						
ANR	9163265	Symbol	& state . lenIV		9162899						
ANR	9163266	Symbol	s -> state -> templat		9162899						
ANR	9163267	Symbol	state . pfb_state		9162899						
ANR	9163268	Symbol	dict_bool_param		9162899						
ANR	9163269	Symbol	eexec_param		9162899						
ANR	9163270	Symbol	* * s		9162899						
ANR	9163271	Symbol	state		9162899						
ANR	9163272	Symbol	s_exD_template . set_defaults		9162899						
ANR	9163273	Symbol	( op - 1 ) -> value . pfile		9162899						
ANR	9163274	Symbol	state . cstate		9162899						
ANR	9163275	Symbol	op		9162899						
ANR	9163276	Symbol	* s -> state		9162899						
ANR	9163277	Symbol	& cstate		9162899						
ANR	9163278	Symbol	s -> state		9162899						
ANR	9163279	Symbol	false		9162899						
ANR	9163280	Symbol	& state . cstate		9162899						
ANR	9163281	Symbol	dict_uint_param		9162899						
ANR	9163282	Symbol	s		9162899						
ANR	9163283	Symbol	cstate		9162899						
ANR	9163284	Symbol	& s_PFBD_template		9162899						
ANR	9163285	Symbol	i_ctx_p		9162899						
ANR	9163286	Symbol	s_exD_template		9162899						
ANR	9163287	Symbol	* pss		9162899						
ANR	9163288	Symbol	dict_int_param		9162899						
ANR	9163289	Symbol	t_file		9162899						
ANR	9163290	Symbol	pss -> binary_to_hex		9162899						
ANR	9163291	Symbol	* s		9162899						
ANR	9163292	DeclStmt									
ANR	9163293	Decl							const op_def	const op_def [ ]	zmisc1_op_defs
