command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6304391	File	data/converged/CVE-2018-16863_ghostpdl/jbig2dec_memento.c								
ANR	6304392	DeclStmt									
ANR	6304393	Decl							void	"void * ( void * , int , size_t )"	memset
ANR	6304394	DeclStmt									
ANR	6304395	Decl							int	int ( void ( * ) ( void ) )	atexit
ANR	6304396	DeclStmt									
ANR	6304397	Decl							void	void * ( size_t )	MEMENTO_UNDERLYING_MALLOC
ANR	6304398	DeclStmt									
ANR	6304399	Decl							void	void ( void * )	MEMENTO_UNDERLYING_FREE
ANR	6304400	DeclStmt									
ANR	6304401	Decl							void	"void * ( void * , size_t )"	MEMENTO_UNDERLYING_REALLOC
ANR	6304402	DeclStmt									
ANR	6304403	Decl							void	"void * ( size_t , size_t )"	MEMENTO_UNDERLYING_CALLOC
ANR	6304404	DeclStmt									
ANR	6304405	Decl							int	int ( const char * )	atoi
ANR	6304406	DeclStmt									
ANR	6304407	Decl							char	char * ( const char * )	getenv
ANR	6304408	ClassDef	<unnamed>	90:0:2479:2538							
ANR	6304409	ClassDef	<unnamed>	95:0:2542:2682							
ANR	6304410	DeclStmt									
ANR	6304411	Decl							struct Memento_BlkHeader	struct Memento_BlkHeader	Memento_BlkHeader
ANR	6304412	ClassDef	Memento_BlkHeader	123:0:3529:3913							
ANR	6304413	DeclStmt									
ANR	6304414	Decl							size_t	size_t	rawsize
ANR	6304415	DeclStmt									
ANR	6304416	Decl							int	int	sequence
ANR	6304417	DeclStmt									
ANR	6304418	Decl							int	int	lastCheckedOK
ANR	6304419	DeclStmt									
ANR	6304420	Decl							int	int	flags
ANR	6304421	DeclStmt									
ANR	6304422	Decl							Memento_BlkHeader	Memento_BlkHeader *	next
ANR	6304423	DeclStmt									
ANR	6304424	Decl							Memento_BlkHeader	Memento_BlkHeader *	parent
ANR	6304425	DeclStmt									
ANR	6304426	Decl							const char	const char *	label
ANR	6304427	DeclStmt									
ANR	6304428	Decl							Memento_BlkHeader	Memento_BlkHeader *	child
ANR	6304429	DeclStmt									
ANR	6304430	Decl							Memento_BlkHeader	Memento_BlkHeader *	sibling
ANR	6304431	DeclStmt									
ANR	6304432	Decl							char	char [ Memento_PreSize ]	preblk
ANR	6304433	ClassDef	Memento_Blocks	143:8:4042:4141							
ANR	6304434	DeclStmt									
ANR	6304435	Decl							Memento_BlkHeader	Memento_BlkHeader *	head
ANR	6304436	DeclStmt									
ANR	6304437	Decl							Memento_BlkHeader	Memento_BlkHeader * *	tail
ANR	6304438	DeclStmt									
ANR	6304439	Decl							Memento_Blocks	Memento_Blocks	Memento_Blocks
ANR	6304440	ClassDef	<unnamed>	149:7:4182:4720							
ANR	6304441	DeclStmt									
ANR	6304442	Decl							int	int	inited
ANR	6304443	DeclStmt									
ANR	6304444	Decl							Memento_Blocks	Memento_Blocks	used
ANR	6304445	DeclStmt									
ANR	6304446	Decl							Memento_Blocks	Memento_Blocks	free
ANR	6304447	DeclStmt									
ANR	6304448	Decl							size_t	size_t	freeListSize
ANR	6304449	DeclStmt									
ANR	6304450	Decl							int	int	sequence
ANR	6304451	DeclStmt									
ANR	6304452	Decl							int	int	paranoia
ANR	6304453	DeclStmt									
ANR	6304454	Decl							int	int	paranoidAt
ANR	6304455	DeclStmt									
ANR	6304456	Decl							int	int	countdown
ANR	6304457	DeclStmt									
ANR	6304458	Decl							int	int	lastChecked
ANR	6304459	DeclStmt									
ANR	6304460	Decl							int	int	breakAt
ANR	6304461	DeclStmt									
ANR	6304462	Decl							int	int	failAt
ANR	6304463	DeclStmt									
ANR	6304464	Decl							int	int	failing
ANR	6304465	DeclStmt									
ANR	6304466	Decl							int	int	nextFailAt
ANR	6304467	DeclStmt									
ANR	6304468	Decl							int	int	squeezeAt
ANR	6304469	DeclStmt									
ANR	6304470	Decl							int	int	squeezing
ANR	6304471	DeclStmt									
ANR	6304472	Decl							int	int	segv
ANR	6304473	DeclStmt									
ANR	6304474	Decl							int	int	pattern
ANR	6304475	DeclStmt									
ANR	6304476	Decl							int	int	nextPattern
ANR	6304477	DeclStmt									
ANR	6304478	Decl							int	int	patternBit
ANR	6304479	DeclStmt									
ANR	6304480	Decl							size_t	size_t	maxMemory
ANR	6304481	DeclStmt									
ANR	6304482	Decl							size_t	size_t	alloc
ANR	6304483	DeclStmt									
ANR	6304484	Decl							size_t	size_t	peakAlloc
ANR	6304485	DeclStmt									
ANR	6304486	Decl							size_t	size_t	totalAlloc
ANR	6304487	DeclStmt									
ANR	6304488	Decl							size_t	size_t	numMallocs
ANR	6304489	DeclStmt									
ANR	6304490	Decl							size_t	size_t	numFrees
ANR	6304491	DeclStmt									
ANR	6304492	Decl							size_t	size_t	numReallocs
ANR	6304493	DeclStmt									
ANR	6304494	Decl									globals
ANR	6304495	Function	Memento_breakpoint	190:0:5252:5498							
ANR	6304496	FunctionDef	Memento_breakpoint ()		6304495	0					
ANR	6304497	CompoundStatement		192:0:5282:5498	6304495	0					
ANR	6304498	Statement	__asm	197:4:5464:5468	6304495	0	True				
ANR	6304499	Statement	int	197:10:5470:5472	6304495	1	True				
ANR	6304500	ExpressionStatement	3	197:14:5474:5475	6304495	2	True				
ANR	6304501	PrimaryExpression	3		6304495	0					
ANR	6304502	ReturnType	void		6304495	1					
ANR	6304503	Identifier	Memento_breakpoint		6304495	2					
ANR	6304504	ParameterList			6304495	3					
ANR	6304505	CFGEntryNode	ENTRY		6304495		True				
ANR	6304506	CFGExitNode	EXIT		6304495		True				
ANR	6304507	Function	Memento_addBlockHead	203:0:5501:6290							
ANR	6304508	FunctionDef	"Memento_addBlockHead (Memento_Blocks * blks , Memento_BlkHeader * b , int type)"		6304507	0					
ANR	6304509	CompoundStatement		205:0:5588:6290	6304507	0					
ANR	6304510	IfStatement	if ( blks -> tail == & blks -> head )		6304507	0					
ANR	6304511	Condition	blks -> tail == & blks -> head	206:8:5598:5622	6304507	0	True				
ANR	6304512	EqualityExpression	blks -> tail == & blks -> head		6304507	0		==			
ANR	6304513	PtrMemberAccess	blks -> tail		6304507	0					
ANR	6304514	Identifier	blks		6304507	0					
ANR	6304515	Identifier	tail		6304507	1					
ANR	6304516	UnaryOperationExpression	& blks -> head		6304507	1					
ANR	6304517	UnaryOperator	&		6304507	0					
ANR	6304518	PtrMemberAccess	blks -> head		6304507	1					
ANR	6304519	Identifier	blks		6304507	0					
ANR	6304520	Identifier	head		6304507	1					
ANR	6304521	CompoundStatement		2:35:36:36	6304507	1					
ANR	6304522	ExpressionStatement	blks -> tail = & b -> next	208:8:5703:5724	6304507	0	True				
ANR	6304523	AssignmentExpression	blks -> tail = & b -> next		6304507	0		=			
ANR	6304524	PtrMemberAccess	blks -> tail		6304507	0					
ANR	6304525	Identifier	blks		6304507	0					
ANR	6304526	Identifier	tail		6304507	1					
ANR	6304527	UnaryOperationExpression	& b -> next		6304507	1					
ANR	6304528	UnaryOperator	&		6304507	0					
ANR	6304529	PtrMemberAccess	b -> next		6304507	1					
ANR	6304530	Identifier	b		6304507	0					
ANR	6304531	Identifier	next		6304507	1					
ANR	6304532	ExpressionStatement	b -> next = blks -> head	210:4:5736:5756	6304507	1	True				
ANR	6304533	AssignmentExpression	b -> next = blks -> head		6304507	0		=			
ANR	6304534	PtrMemberAccess	b -> next		6304507	0					
ANR	6304535	Identifier	b		6304507	0					
ANR	6304536	Identifier	next		6304507	1					
ANR	6304537	PtrMemberAccess	blks -> head		6304507	1					
ANR	6304538	Identifier	blks		6304507	0					
ANR	6304539	Identifier	head		6304507	1					
ANR	6304540	ExpressionStatement	blks -> head = b	211:4:5762:5776	6304507	2	True				
ANR	6304541	AssignmentExpression	blks -> head = b		6304507	0		=			
ANR	6304542	PtrMemberAccess	blks -> head		6304507	0					
ANR	6304543	Identifier	blks		6304507	0					
ANR	6304544	Identifier	head		6304507	1					
ANR	6304545	Identifier	b		6304507	1					
ANR	6304546	ExpressionStatement	"memset ( b -> preblk , MEMENTO_PREFILL , Memento_PreSize )"	213:4:5807:5858	6304507	3	True				
ANR	6304547	CallExpression	"memset ( b -> preblk , MEMENTO_PREFILL , Memento_PreSize )"		6304507	0					
ANR	6304548	Callee	memset		6304507	0					
ANR	6304549	Identifier	memset		6304507	0					
ANR	6304550	ArgumentList	b -> preblk		6304507	1					
ANR	6304551	Argument	b -> preblk		6304507	0					
ANR	6304552	PtrMemberAccess	b -> preblk		6304507	0					
ANR	6304553	Identifier	b		6304507	0					
ANR	6304554	Identifier	preblk		6304507	1					
ANR	6304555	Argument	MEMENTO_PREFILL		6304507	1					
ANR	6304556	Identifier	MEMENTO_PREFILL		6304507	0					
ANR	6304557	Argument	Memento_PreSize		6304507	2					
ANR	6304558	Identifier	Memento_PreSize		6304507	0					
ANR	6304559	ExpressionStatement	"memset ( MEMBLK_POSTPTR ( b ) , MEMENTO_POSTFILL , Memento_PostSize )"	214:4:5864:5925	6304507	4	True				
ANR	6304560	CallExpression	"memset ( MEMBLK_POSTPTR ( b ) , MEMENTO_POSTFILL , Memento_PostSize )"		6304507	0					
ANR	6304561	Callee	memset		6304507	0					
ANR	6304562	Identifier	memset		6304507	0					
ANR	6304563	ArgumentList	MEMBLK_POSTPTR ( b )		6304507	1					
ANR	6304564	Argument	MEMBLK_POSTPTR ( b )		6304507	0					
ANR	6304565	CallExpression	MEMBLK_POSTPTR ( b )		6304507	0					
ANR	6304566	Callee	MEMBLK_POSTPTR		6304507	0					
ANR	6304567	Identifier	MEMBLK_POSTPTR		6304507	0					
ANR	6304568	ArgumentList	b		6304507	1					
ANR	6304569	Argument	b		6304507	0					
ANR	6304570	Identifier	b		6304507	0					
ANR	6304571	Argument	MEMENTO_POSTFILL		6304507	1					
ANR	6304572	Identifier	MEMENTO_POSTFILL		6304507	0					
ANR	6304573	Argument	Memento_PostSize		6304507	2					
ANR	6304574	Identifier	Memento_PostSize		6304507	0					
ANR	6304575	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( b ) , Memento_PostSize )"	216:4:5938:6001	6304507	5	True				
ANR	6304576	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( b ) , Memento_PostSize )"		6304507	0					
ANR	6304577	Callee	VALGRIND_MAKE_MEM_NOACCESS		6304507	0					
ANR	6304578	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6304507	0					
ANR	6304579	ArgumentList	MEMBLK_POSTPTR ( b )		6304507	1					
ANR	6304580	Argument	MEMBLK_POSTPTR ( b )		6304507	0					
ANR	6304581	CallExpression	MEMBLK_POSTPTR ( b )		6304507	0					
ANR	6304582	Callee	MEMBLK_POSTPTR		6304507	0					
ANR	6304583	Identifier	MEMBLK_POSTPTR		6304507	0					
ANR	6304584	ArgumentList	b		6304507	1					
ANR	6304585	Argument	b		6304507	0					
ANR	6304586	Identifier	b		6304507	0					
ANR	6304587	Argument	Memento_PostSize		6304507	1					
ANR	6304588	Identifier	Memento_PostSize		6304507	0					
ANR	6304589	IfStatement	if ( type == 0 )		6304507	6					
ANR	6304590	Condition	type == 0	217:8:6011:6019	6304507	0	True				
ANR	6304591	EqualityExpression	type == 0		6304507	0		==			
ANR	6304592	Identifier	type		6304507	0					
ANR	6304593	PrimaryExpression	0		6304507	1					
ANR	6304594	CompoundStatement		13:19:433:433	6304507	1					
ANR	6304595	ExpressionStatement	"VALGRIND_MAKE_MEM_UNDEFINED ( MEMBLK_TOBLK ( b ) , b -> rawsize )"	218:8:6056:6112	6304507	0	True				
ANR	6304596	CallExpression	"VALGRIND_MAKE_MEM_UNDEFINED ( MEMBLK_TOBLK ( b ) , b -> rawsize )"		6304507	0					
ANR	6304597	Callee	VALGRIND_MAKE_MEM_UNDEFINED		6304507	0					
ANR	6304598	Identifier	VALGRIND_MAKE_MEM_UNDEFINED		6304507	0					
ANR	6304599	ArgumentList	MEMBLK_TOBLK ( b )		6304507	1					
ANR	6304600	Argument	MEMBLK_TOBLK ( b )		6304507	0					
ANR	6304601	CallExpression	MEMBLK_TOBLK ( b )		6304507	0					
ANR	6304602	Callee	MEMBLK_TOBLK		6304507	0					
ANR	6304603	Identifier	MEMBLK_TOBLK		6304507	0					
ANR	6304604	ArgumentList	b		6304507	1					
ANR	6304605	Argument	b		6304507	0					
ANR	6304606	Identifier	b		6304507	0					
ANR	6304607	Argument	b -> rawsize		6304507	1					
ANR	6304608	PtrMemberAccess	b -> rawsize		6304507	0					
ANR	6304609	Identifier	b		6304507	0					
ANR	6304610	Identifier	rawsize		6304507	1					
ANR	6304611	ElseStatement	else		6304507	0					
ANR	6304612	IfStatement	if ( type == 1 )		6304507	0					
ANR	6304613	Condition	type == 1	219:15:6129:6137	6304507	0	True				
ANR	6304614	EqualityExpression	type == 1		6304507	0		==			
ANR	6304615	Identifier	type		6304507	0					
ANR	6304616	PrimaryExpression	1		6304507	1					
ANR	6304617	CompoundStatement		15:26:551:551	6304507	1					
ANR	6304618	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_TOBLK ( b ) , b -> rawsize )"	220:8:6165:6220	6304507	0	True				
ANR	6304619	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_TOBLK ( b ) , b -> rawsize )"		6304507	0					
ANR	6304620	Callee	VALGRIND_MAKE_MEM_NOACCESS		6304507	0					
ANR	6304621	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6304507	0					
ANR	6304622	ArgumentList	MEMBLK_TOBLK ( b )		6304507	1					
ANR	6304623	Argument	MEMBLK_TOBLK ( b )		6304507	0					
ANR	6304624	CallExpression	MEMBLK_TOBLK ( b )		6304507	0					
ANR	6304625	Callee	MEMBLK_TOBLK		6304507	0					
ANR	6304626	Identifier	MEMBLK_TOBLK		6304507	0					
ANR	6304627	ArgumentList	b		6304507	1					
ANR	6304628	Argument	b		6304507	0					
ANR	6304629	Identifier	b		6304507	0					
ANR	6304630	Argument	b -> rawsize		6304507	1					
ANR	6304631	PtrMemberAccess	b -> rawsize		6304507	0					
ANR	6304632	Identifier	b		6304507	0					
ANR	6304633	Identifier	rawsize		6304507	1					
ANR	6304634	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( b , sizeof ( Memento_BlkHeader ) )"	222:4:6232:6288	6304507	7	True				
ANR	6304635	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( b , sizeof ( Memento_BlkHeader ) )"		6304507	0					
ANR	6304636	Callee	VALGRIND_MAKE_MEM_NOACCESS		6304507	0					
ANR	6304637	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6304507	0					
ANR	6304638	ArgumentList	b		6304507	1					
ANR	6304639	Argument	b		6304507	0					
ANR	6304640	Identifier	b		6304507	0					
ANR	6304641	Argument	sizeof ( Memento_BlkHeader )		6304507	1					
ANR	6304642	SizeofExpression	sizeof ( Memento_BlkHeader )		6304507	0					
ANR	6304643	Sizeof	sizeof		6304507	0					
ANR	6304644	SizeofOperand	Memento_BlkHeader		6304507	1					
ANR	6304645	ReturnType	static void		6304507	1					
ANR	6304646	Identifier	Memento_addBlockHead		6304507	2					
ANR	6304647	ParameterList	"Memento_Blocks * blks , Memento_BlkHeader * b , int type"		6304507	3					
ANR	6304648	Parameter	Memento_Blocks * blks	204:21:5534:5553	6304507	0	True				
ANR	6304649	ParameterType	Memento_Blocks *		6304507	0					
ANR	6304650	Identifier	blks		6304507	1					
ANR	6304651	Parameter	Memento_BlkHeader * b	204:43:5556:5575	6304507	1	True				
ANR	6304652	ParameterType	Memento_BlkHeader *		6304507	0					
ANR	6304653	Identifier	b		6304507	1					
ANR	6304654	Parameter	int type	204:65:5578:5585	6304507	2	True				
ANR	6304655	ParameterType	int		6304507	0					
ANR	6304656	Identifier	type		6304507	1					
ANR	6304657	CFGEntryNode	ENTRY		6304507		True				
ANR	6304658	CFGExitNode	EXIT		6304507		True				
ANR	6304659	Symbol	blks -> tail		6304507						
ANR	6304660	Symbol	b		6304507						
ANR	6304661	Symbol	Memento_PreSize		6304507						
ANR	6304662	Symbol	b -> preblk		6304507						
ANR	6304663	Symbol	blks -> head		6304507						
ANR	6304664	Symbol	type		6304507						
ANR	6304665	Symbol	& blks -> head		6304507						
ANR	6304666	Symbol	* b		6304507						
ANR	6304667	Symbol	MEMBLK_TOBLK		6304507						
ANR	6304668	Symbol	b -> rawsize		6304507						
ANR	6304669	Symbol	MEMENTO_PREFILL		6304507						
ANR	6304670	Symbol	* blks		6304507						
ANR	6304671	Symbol	MEMBLK_POSTPTR		6304507						
ANR	6304672	Symbol	b -> next		6304507						
ANR	6304673	Symbol	MEMENTO_POSTFILL		6304507						
ANR	6304674	Symbol	Memento_PostSize		6304507						
ANR	6304675	Symbol	blks		6304507						
ANR	6304676	Symbol	& b -> next		6304507						
ANR	6304677	Function	Memento_addBlockTail	225:0:6293:7107							
ANR	6304678	FunctionDef	"Memento_addBlockTail (Memento_Blocks * blks , Memento_BlkHeader * b , int type)"		6304677	0					
ANR	6304679	CompoundStatement		227:0:6380:7107	6304677	0					
ANR	6304680	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( blks -> tail , sizeof ( Memento_BlkHeader * ) )"	228:4:6386:6452	6304677	0	True				
ANR	6304681	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( blks -> tail , sizeof ( Memento_BlkHeader * ) )"		6304677	0					
ANR	6304682	Callee	VALGRIND_MAKE_MEM_DEFINED		6304677	0					
ANR	6304683	Identifier	VALGRIND_MAKE_MEM_DEFINED		6304677	0					
ANR	6304684	ArgumentList	blks -> tail		6304677	1					
ANR	6304685	Argument	blks -> tail		6304677	0					
ANR	6304686	PtrMemberAccess	blks -> tail		6304677	0					
ANR	6304687	Identifier	blks		6304677	0					
ANR	6304688	Identifier	tail		6304677	1					
ANR	6304689	Argument	sizeof ( Memento_BlkHeader * )		6304677	1					
ANR	6304690	SizeofExpression	sizeof ( Memento_BlkHeader * )		6304677	0					
ANR	6304691	Sizeof	sizeof		6304677	0					
ANR	6304692	SizeofOperand	Memento_BlkHeader *		6304677	1					
ANR	6304693	ExpressionStatement	* blks -> tail = b	229:4:6458:6473	6304677	1	True				
ANR	6304694	AssignmentExpression	* blks -> tail = b		6304677	0		=			
ANR	6304695	UnaryOperationExpression	* blks -> tail		6304677	0					
ANR	6304696	UnaryOperator	*		6304677	0					
ANR	6304697	PtrMemberAccess	blks -> tail		6304677	1					
ANR	6304698	Identifier	blks		6304677	0					
ANR	6304699	Identifier	tail		6304677	1					
ANR	6304700	Identifier	b		6304677	1					
ANR	6304701	ExpressionStatement	blks -> tail = & b -> next	230:4:6479:6500	6304677	2	True				
ANR	6304702	AssignmentExpression	blks -> tail = & b -> next		6304677	0		=			
ANR	6304703	PtrMemberAccess	blks -> tail		6304677	0					
ANR	6304704	Identifier	blks		6304677	0					
ANR	6304705	Identifier	tail		6304677	1					
ANR	6304706	UnaryOperationExpression	& b -> next		6304677	1					
ANR	6304707	UnaryOperator	&		6304677	0					
ANR	6304708	PtrMemberAccess	b -> next		6304677	1					
ANR	6304709	Identifier	b		6304677	0					
ANR	6304710	Identifier	next		6304677	1					
ANR	6304711	ExpressionStatement	b -> next = NULL	231:4:6506:6520	6304677	3	True				
ANR	6304712	AssignmentExpression	b -> next = NULL		6304677	0		=			
ANR	6304713	PtrMemberAccess	b -> next		6304677	0					
ANR	6304714	Identifier	b		6304677	0					
ANR	6304715	Identifier	next		6304677	1					
ANR	6304716	Identifier	NULL		6304677	1					
ANR	6304717	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( blks -> tail , sizeof ( Memento_BlkHeader * ) )"	232:4:6526:6593	6304677	4	True				
ANR	6304718	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( blks -> tail , sizeof ( Memento_BlkHeader * ) )"		6304677	0					
ANR	6304719	Callee	VALGRIND_MAKE_MEM_NOACCESS		6304677	0					
ANR	6304720	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6304677	0					
ANR	6304721	ArgumentList	blks -> tail		6304677	1					
ANR	6304722	Argument	blks -> tail		6304677	0					
ANR	6304723	PtrMemberAccess	blks -> tail		6304677	0					
ANR	6304724	Identifier	blks		6304677	0					
ANR	6304725	Identifier	tail		6304677	1					
ANR	6304726	Argument	sizeof ( Memento_BlkHeader * )		6304677	1					
ANR	6304727	SizeofExpression	sizeof ( Memento_BlkHeader * )		6304677	0					
ANR	6304728	Sizeof	sizeof		6304677	0					
ANR	6304729	SizeofOperand	Memento_BlkHeader *		6304677	1					
ANR	6304730	ExpressionStatement	"memset ( b -> preblk , MEMENTO_PREFILL , Memento_PreSize )"	234:4:6624:6675	6304677	5	True				
ANR	6304731	CallExpression	"memset ( b -> preblk , MEMENTO_PREFILL , Memento_PreSize )"		6304677	0					
ANR	6304732	Callee	memset		6304677	0					
ANR	6304733	Identifier	memset		6304677	0					
ANR	6304734	ArgumentList	b -> preblk		6304677	1					
ANR	6304735	Argument	b -> preblk		6304677	0					
ANR	6304736	PtrMemberAccess	b -> preblk		6304677	0					
ANR	6304737	Identifier	b		6304677	0					
ANR	6304738	Identifier	preblk		6304677	1					
ANR	6304739	Argument	MEMENTO_PREFILL		6304677	1					
ANR	6304740	Identifier	MEMENTO_PREFILL		6304677	0					
ANR	6304741	Argument	Memento_PreSize		6304677	2					
ANR	6304742	Identifier	Memento_PreSize		6304677	0					
ANR	6304743	ExpressionStatement	"memset ( MEMBLK_POSTPTR ( b ) , MEMENTO_POSTFILL , Memento_PostSize )"	235:4:6681:6742	6304677	6	True				
ANR	6304744	CallExpression	"memset ( MEMBLK_POSTPTR ( b ) , MEMENTO_POSTFILL , Memento_PostSize )"		6304677	0					
ANR	6304745	Callee	memset		6304677	0					
ANR	6304746	Identifier	memset		6304677	0					
ANR	6304747	ArgumentList	MEMBLK_POSTPTR ( b )		6304677	1					
ANR	6304748	Argument	MEMBLK_POSTPTR ( b )		6304677	0					
ANR	6304749	CallExpression	MEMBLK_POSTPTR ( b )		6304677	0					
ANR	6304750	Callee	MEMBLK_POSTPTR		6304677	0					
ANR	6304751	Identifier	MEMBLK_POSTPTR		6304677	0					
ANR	6304752	ArgumentList	b		6304677	1					
ANR	6304753	Argument	b		6304677	0					
ANR	6304754	Identifier	b		6304677	0					
ANR	6304755	Argument	MEMENTO_POSTFILL		6304677	1					
ANR	6304756	Identifier	MEMENTO_POSTFILL		6304677	0					
ANR	6304757	Argument	Memento_PostSize		6304677	2					
ANR	6304758	Identifier	Memento_PostSize		6304677	0					
ANR	6304759	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( b ) , Memento_PostSize )"	237:4:6755:6818	6304677	7	True				
ANR	6304760	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( b ) , Memento_PostSize )"		6304677	0					
ANR	6304761	Callee	VALGRIND_MAKE_MEM_NOACCESS		6304677	0					
ANR	6304762	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6304677	0					
ANR	6304763	ArgumentList	MEMBLK_POSTPTR ( b )		6304677	1					
ANR	6304764	Argument	MEMBLK_POSTPTR ( b )		6304677	0					
ANR	6304765	CallExpression	MEMBLK_POSTPTR ( b )		6304677	0					
ANR	6304766	Callee	MEMBLK_POSTPTR		6304677	0					
ANR	6304767	Identifier	MEMBLK_POSTPTR		6304677	0					
ANR	6304768	ArgumentList	b		6304677	1					
ANR	6304769	Argument	b		6304677	0					
ANR	6304770	Identifier	b		6304677	0					
ANR	6304771	Argument	Memento_PostSize		6304677	1					
ANR	6304772	Identifier	Memento_PostSize		6304677	0					
ANR	6304773	IfStatement	if ( type == 0 )		6304677	8					
ANR	6304774	Condition	type == 0	238:8:6828:6836	6304677	0	True				
ANR	6304775	EqualityExpression	type == 0		6304677	0		==			
ANR	6304776	Identifier	type		6304677	0					
ANR	6304777	PrimaryExpression	0		6304677	1					
ANR	6304778	CompoundStatement		12:19:458:458	6304677	1					
ANR	6304779	ExpressionStatement	"VALGRIND_MAKE_MEM_UNDEFINED ( MEMBLK_TOBLK ( b ) , b -> rawsize )"	239:8:6873:6929	6304677	0	True				
ANR	6304780	CallExpression	"VALGRIND_MAKE_MEM_UNDEFINED ( MEMBLK_TOBLK ( b ) , b -> rawsize )"		6304677	0					
ANR	6304781	Callee	VALGRIND_MAKE_MEM_UNDEFINED		6304677	0					
ANR	6304782	Identifier	VALGRIND_MAKE_MEM_UNDEFINED		6304677	0					
ANR	6304783	ArgumentList	MEMBLK_TOBLK ( b )		6304677	1					
ANR	6304784	Argument	MEMBLK_TOBLK ( b )		6304677	0					
ANR	6304785	CallExpression	MEMBLK_TOBLK ( b )		6304677	0					
ANR	6304786	Callee	MEMBLK_TOBLK		6304677	0					
ANR	6304787	Identifier	MEMBLK_TOBLK		6304677	0					
ANR	6304788	ArgumentList	b		6304677	1					
ANR	6304789	Argument	b		6304677	0					
ANR	6304790	Identifier	b		6304677	0					
ANR	6304791	Argument	b -> rawsize		6304677	1					
ANR	6304792	PtrMemberAccess	b -> rawsize		6304677	0					
ANR	6304793	Identifier	b		6304677	0					
ANR	6304794	Identifier	rawsize		6304677	1					
ANR	6304795	ElseStatement	else		6304677	0					
ANR	6304796	IfStatement	if ( type == 1 )		6304677	0					
ANR	6304797	Condition	type == 1	240:15:6946:6954	6304677	0	True				
ANR	6304798	EqualityExpression	type == 1		6304677	0		==			
ANR	6304799	Identifier	type		6304677	0					
ANR	6304800	PrimaryExpression	1		6304677	1					
ANR	6304801	CompoundStatement		14:26:576:576	6304677	1					
ANR	6304802	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_TOBLK ( b ) , b -> rawsize )"	241:8:6982:7037	6304677	0	True				
ANR	6304803	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_TOBLK ( b ) , b -> rawsize )"		6304677	0					
ANR	6304804	Callee	VALGRIND_MAKE_MEM_NOACCESS		6304677	0					
ANR	6304805	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6304677	0					
ANR	6304806	ArgumentList	MEMBLK_TOBLK ( b )		6304677	1					
ANR	6304807	Argument	MEMBLK_TOBLK ( b )		6304677	0					
ANR	6304808	CallExpression	MEMBLK_TOBLK ( b )		6304677	0					
ANR	6304809	Callee	MEMBLK_TOBLK		6304677	0					
ANR	6304810	Identifier	MEMBLK_TOBLK		6304677	0					
ANR	6304811	ArgumentList	b		6304677	1					
ANR	6304812	Argument	b		6304677	0					
ANR	6304813	Identifier	b		6304677	0					
ANR	6304814	Argument	b -> rawsize		6304677	1					
ANR	6304815	PtrMemberAccess	b -> rawsize		6304677	0					
ANR	6304816	Identifier	b		6304677	0					
ANR	6304817	Identifier	rawsize		6304677	1					
ANR	6304818	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( b , sizeof ( Memento_BlkHeader ) )"	243:4:7049:7105	6304677	9	True				
ANR	6304819	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( b , sizeof ( Memento_BlkHeader ) )"		6304677	0					
ANR	6304820	Callee	VALGRIND_MAKE_MEM_NOACCESS		6304677	0					
ANR	6304821	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6304677	0					
ANR	6304822	ArgumentList	b		6304677	1					
ANR	6304823	Argument	b		6304677	0					
ANR	6304824	Identifier	b		6304677	0					
ANR	6304825	Argument	sizeof ( Memento_BlkHeader )		6304677	1					
ANR	6304826	SizeofExpression	sizeof ( Memento_BlkHeader )		6304677	0					
ANR	6304827	Sizeof	sizeof		6304677	0					
ANR	6304828	SizeofOperand	Memento_BlkHeader		6304677	1					
ANR	6304829	ReturnType	static void		6304677	1					
ANR	6304830	Identifier	Memento_addBlockTail		6304677	2					
ANR	6304831	ParameterList	"Memento_Blocks * blks , Memento_BlkHeader * b , int type"		6304677	3					
ANR	6304832	Parameter	Memento_Blocks * blks	226:21:6326:6345	6304677	0	True				
ANR	6304833	ParameterType	Memento_Blocks *		6304677	0					
ANR	6304834	Identifier	blks		6304677	1					
ANR	6304835	Parameter	Memento_BlkHeader * b	226:43:6348:6367	6304677	1	True				
ANR	6304836	ParameterType	Memento_BlkHeader *		6304677	0					
ANR	6304837	Identifier	b		6304677	1					
ANR	6304838	Parameter	int type	226:65:6370:6377	6304677	2	True				
ANR	6304839	ParameterType	int		6304677	0					
ANR	6304840	Identifier	type		6304677	1					
ANR	6304841	CFGEntryNode	ENTRY		6304677		True				
ANR	6304842	CFGExitNode	EXIT		6304677		True				
ANR	6304843	Symbol	blks -> tail		6304677						
ANR	6304844	Symbol	b		6304677						
ANR	6304845	Symbol	NULL		6304677						
ANR	6304846	Symbol	Memento_PreSize		6304677						
ANR	6304847	Symbol	b -> preblk		6304677						
ANR	6304848	Symbol	* * blks		6304677						
ANR	6304849	Symbol	type		6304677						
ANR	6304850	Symbol	* b		6304677						
ANR	6304851	Symbol	MEMBLK_TOBLK		6304677						
ANR	6304852	Symbol	b -> rawsize		6304677						
ANR	6304853	Symbol	* blks -> tail		6304677						
ANR	6304854	Symbol	MEMENTO_PREFILL		6304677						
ANR	6304855	Symbol	* blks		6304677						
ANR	6304856	Symbol	MEMBLK_POSTPTR		6304677						
ANR	6304857	Symbol	b -> next		6304677						
ANR	6304858	Symbol	MEMENTO_POSTFILL		6304677						
ANR	6304859	Symbol	Memento_PostSize		6304677						
ANR	6304860	Symbol	blks		6304677						
ANR	6304861	Symbol	& b -> next		6304677						
ANR	6304862	ClassDef	BlkCheckData	246:8:7118:7246							
ANR	6304863	DeclStmt									
ANR	6304864	Decl							int	int	found
ANR	6304865	DeclStmt									
ANR	6304866	Decl							int	int	preCorrupt
ANR	6304867	DeclStmt									
ANR	6304868	Decl							int	int	postCorrupt
ANR	6304869	DeclStmt									
ANR	6304870	Decl							int	int	freeCorrupt
ANR	6304871	DeclStmt									
ANR	6304872	Decl							int	int	index
ANR	6304873	DeclStmt									
ANR	6304874	Decl							BlkCheckData	BlkCheckData	BlkCheckData
ANR	6304875	Function	Memento_Internal_checkAllocedBlock	254:0:7249:7983							
ANR	6304876	FunctionDef	"Memento_Internal_checkAllocedBlock (Memento_BlkHeader * b , void * arg)"		6304875	0					
ANR	6304877	CompoundStatement		256:0:7328:7983	6304875	0					
ANR	6304878	IdentifierDeclStatement	int i ;	258:4:7359:7364	6304875	0	True				
ANR	6304879	IdentifierDecl	i		6304875	0					
ANR	6304880	IdentifierDeclType	int		6304875	0					
ANR	6304881	Identifier	i		6304875	1					
ANR	6304882	IdentifierDeclStatement	char * p ;	259:4:7370:7377	6304875	1	True				
ANR	6304883	IdentifierDecl	* p		6304875	0					
ANR	6304884	IdentifierDeclType	char *		6304875	0					
ANR	6304885	Identifier	p		6304875	1					
ANR	6304886	IdentifierDeclStatement	int corrupt = 0 ;	260:4:7383:7398	6304875	2	True				
ANR	6304887	IdentifierDecl	corrupt = 0		6304875	0					
ANR	6304888	IdentifierDeclType	int		6304875	0					
ANR	6304889	Identifier	corrupt		6304875	1					
ANR	6304890	AssignmentExpression	corrupt = 0		6304875	2		=			
ANR	6304891	Identifier	corrupt		6304875	0					
ANR	6304892	PrimaryExpression	0		6304875	1					
ANR	6304893	IdentifierDeclStatement	BlkCheckData * data = ( BlkCheckData * ) arg ;	261:4:7404:7445	6304875	3	True				
ANR	6304894	IdentifierDecl	* data = ( BlkCheckData * ) arg		6304875	0					
ANR	6304895	IdentifierDeclType	BlkCheckData *		6304875	0					
ANR	6304896	Identifier	data		6304875	1					
ANR	6304897	AssignmentExpression	* data = ( BlkCheckData * ) arg		6304875	2		=			
ANR	6304898	Identifier	data		6304875	0					
ANR	6304899	CastExpression	( BlkCheckData * ) arg		6304875	1					
ANR	6304900	CastTarget	BlkCheckData *		6304875	0					
ANR	6304901	Identifier	arg		6304875	1					
ANR	6304902	ExpressionStatement	p = b -> preblk	263:4:7452:7465	6304875	4	True				
ANR	6304903	AssignmentExpression	p = b -> preblk		6304875	0		=			
ANR	6304904	Identifier	p		6304875	0					
ANR	6304905	PtrMemberAccess	b -> preblk		6304875	1					
ANR	6304906	Identifier	b		6304875	0					
ANR	6304907	Identifier	preblk		6304875	1					
ANR	6304908	ExpressionStatement	i = Memento_PreSize	264:4:7471:7490	6304875	5	True				
ANR	6304909	AssignmentExpression	i = Memento_PreSize		6304875	0		=			
ANR	6304910	Identifier	i		6304875	0					
ANR	6304911	Identifier	Memento_PreSize		6304875	1					
ANR	6304912	DoStatement	do		6304875	6					
ANR	6304913	CompoundStatement		10:7:170:170	6304875	0					
ANR	6304914	ExpressionStatement	corrupt |= ( * p ++ ^ ( char ) MEMENTO_PREFILL )	266:8:7509:7550	6304875	0	True				
ANR	6304915	AssignmentExpression	corrupt |= ( * p ++ ^ ( char ) MEMENTO_PREFILL )		6304875	0		|=			
ANR	6304916	Identifier	corrupt		6304875	0					
ANR	6304917	ExclusiveOrExpression	* p ++ ^ ( char ) MEMENTO_PREFILL		6304875	1		^			
ANR	6304918	UnaryOperationExpression	* p ++		6304875	0					
ANR	6304919	UnaryOperator	*		6304875	0					
ANR	6304920	PostIncDecOperationExpression	p ++		6304875	1					
ANR	6304921	Identifier	p		6304875	0					
ANR	6304922	IncDec	++		6304875	1					
ANR	6304923	CastExpression	( char ) MEMENTO_PREFILL		6304875	1					
ANR	6304924	CastTarget	char		6304875	0					
ANR	6304925	Identifier	MEMENTO_PREFILL		6304875	1					
ANR	6304926	Condition	-- i	267:13:7565:7567	6304875	1	True				
ANR	6304927	UnaryExpression	-- i		6304875	0					
ANR	6304928	IncDec	--		6304875	0					
ANR	6304929	Identifier	i		6304875	1					
ANR	6304930	IfStatement	if ( corrupt )		6304875	7					
ANR	6304931	Condition	corrupt	268:8:7579:7585	6304875	0	True				
ANR	6304932	Identifier	corrupt		6304875	0					
ANR	6304933	CompoundStatement		13:17:259:259	6304875	1					
ANR	6304934	ExpressionStatement	data -> preCorrupt = 1	269:8:7598:7618	6304875	0	True				
ANR	6304935	AssignmentExpression	data -> preCorrupt = 1		6304875	0		=			
ANR	6304936	PtrMemberAccess	data -> preCorrupt		6304875	0					
ANR	6304937	Identifier	data		6304875	0					
ANR	6304938	Identifier	preCorrupt		6304875	1					
ANR	6304939	PrimaryExpression	1		6304875	1					
ANR	6304940	ExpressionStatement	p = MEMBLK_POSTPTR ( b )	271:4:7630:7651	6304875	8	True				
ANR	6304941	AssignmentExpression	p = MEMBLK_POSTPTR ( b )		6304875	0		=			
ANR	6304942	Identifier	p		6304875	0					
ANR	6304943	CallExpression	MEMBLK_POSTPTR ( b )		6304875	1					
ANR	6304944	Callee	MEMBLK_POSTPTR		6304875	0					
ANR	6304945	Identifier	MEMBLK_POSTPTR		6304875	0					
ANR	6304946	ArgumentList	b		6304875	1					
ANR	6304947	Argument	b		6304875	0					
ANR	6304948	Identifier	b		6304875	0					
ANR	6304949	ExpressionStatement	i = Memento_PreSize	272:4:7657:7676	6304875	9	True				
ANR	6304950	AssignmentExpression	i = Memento_PreSize		6304875	0		=			
ANR	6304951	Identifier	i		6304875	0					
ANR	6304952	Identifier	Memento_PreSize		6304875	1					
ANR	6304953	DoStatement	do		6304875	10					
ANR	6304954	CompoundStatement		18:7:356:356	6304875	0					
ANR	6304955	ExpressionStatement	corrupt |= ( * p ++ ^ ( char ) MEMENTO_POSTFILL )	274:8:7695:7737	6304875	0	True				
ANR	6304956	AssignmentExpression	corrupt |= ( * p ++ ^ ( char ) MEMENTO_POSTFILL )		6304875	0		|=			
ANR	6304957	Identifier	corrupt		6304875	0					
ANR	6304958	ExclusiveOrExpression	* p ++ ^ ( char ) MEMENTO_POSTFILL		6304875	1		^			
ANR	6304959	UnaryOperationExpression	* p ++		6304875	0					
ANR	6304960	UnaryOperator	*		6304875	0					
ANR	6304961	PostIncDecOperationExpression	p ++		6304875	1					
ANR	6304962	Identifier	p		6304875	0					
ANR	6304963	IncDec	++		6304875	1					
ANR	6304964	CastExpression	( char ) MEMENTO_POSTFILL		6304875	1					
ANR	6304965	CastTarget	char		6304875	0					
ANR	6304966	Identifier	MEMENTO_POSTFILL		6304875	1					
ANR	6304967	Condition	-- i	275:13:7752:7754	6304875	1	True				
ANR	6304968	UnaryExpression	-- i		6304875	0					
ANR	6304969	IncDec	--		6304875	0					
ANR	6304970	Identifier	i		6304875	1					
ANR	6304971	IfStatement	if ( corrupt )		6304875	11					
ANR	6304972	Condition	corrupt	276:8:7766:7772	6304875	0	True				
ANR	6304973	Identifier	corrupt		6304875	0					
ANR	6304974	CompoundStatement		21:17:446:446	6304875	1					
ANR	6304975	ExpressionStatement	data -> postCorrupt = 1	277:8:7785:7806	6304875	0	True				
ANR	6304976	AssignmentExpression	data -> postCorrupt = 1		6304875	0		=			
ANR	6304977	PtrMemberAccess	data -> postCorrupt		6304875	0					
ANR	6304978	Identifier	data		6304875	0					
ANR	6304979	Identifier	postCorrupt		6304875	1					
ANR	6304980	PrimaryExpression	1		6304875	1					
ANR	6304981	IfStatement	if ( ( data -> freeCorrupt | data -> preCorrupt | data -> postCorrupt ) == 0 )		6304875	12					
ANR	6304982	Condition	( data -> freeCorrupt | data -> preCorrupt | data -> postCorrupt ) == 0	279:8:7822:7884	6304875	0	True				
ANR	6304983	EqualityExpression	( data -> freeCorrupt | data -> preCorrupt | data -> postCorrupt ) == 0		6304875	0		==			
ANR	6304984	InclusiveOrExpression	data -> freeCorrupt | data -> preCorrupt | data -> postCorrupt		6304875	0		|			
ANR	6304985	PtrMemberAccess	data -> freeCorrupt		6304875	0					
ANR	6304986	Identifier	data		6304875	0					
ANR	6304987	Identifier	freeCorrupt		6304875	1					
ANR	6304988	InclusiveOrExpression	data -> preCorrupt | data -> postCorrupt		6304875	1		|			
ANR	6304989	PtrMemberAccess	data -> preCorrupt		6304875	0					
ANR	6304990	Identifier	data		6304875	0					
ANR	6304991	Identifier	preCorrupt		6304875	1					
ANR	6304992	PtrMemberAccess	data -> postCorrupt		6304875	1					
ANR	6304993	Identifier	data		6304875	0					
ANR	6304994	Identifier	postCorrupt		6304875	1					
ANR	6304995	PrimaryExpression	0		6304875	1					
ANR	6304996	CompoundStatement		24:73:558:558	6304875	1					
ANR	6304997	ExpressionStatement	b -> lastCheckedOK = globals . sequence	280:8:7897:7932	6304875	0	True				
ANR	6304998	AssignmentExpression	b -> lastCheckedOK = globals . sequence		6304875	0		=			
ANR	6304999	PtrMemberAccess	b -> lastCheckedOK		6304875	0					
ANR	6305000	Identifier	b		6304875	0					
ANR	6305001	Identifier	lastCheckedOK		6304875	1					
ANR	6305002	MemberAccess	globals . sequence		6304875	1					
ANR	6305003	Identifier	globals		6304875	0					
ANR	6305004	Identifier	sequence		6304875	1					
ANR	6305005	ExpressionStatement	data -> found |= 1	282:4:7944:7960	6304875	13	True				
ANR	6305006	AssignmentExpression	data -> found |= 1		6304875	0		|=			
ANR	6305007	PtrMemberAccess	data -> found		6304875	0					
ANR	6305008	Identifier	data		6304875	0					
ANR	6305009	Identifier	found		6304875	1					
ANR	6305010	PrimaryExpression	1		6304875	1					
ANR	6305011	ReturnStatement	return 0 ;	284:4:7973:7981	6304875	14	True				
ANR	6305012	PrimaryExpression	0		6304875	0					
ANR	6305013	ReturnType	static int		6304875	1					
ANR	6305014	Identifier	Memento_Internal_checkAllocedBlock		6304875	2					
ANR	6305015	ParameterList	"Memento_BlkHeader * b , void * arg"		6304875	3					
ANR	6305016	Parameter	Memento_BlkHeader * b	255:35:7295:7314	6304875	0	True				
ANR	6305017	ParameterType	Memento_BlkHeader *		6304875	0					
ANR	6305018	Identifier	b		6304875	1					
ANR	6305019	Parameter	void * arg	255:57:7317:7325	6304875	1	True				
ANR	6305020	ParameterType	void *		6304875	0					
ANR	6305021	Identifier	arg		6304875	1					
ANR	6305022	CFGEntryNode	ENTRY		6304875		True				
ANR	6305023	CFGExitNode	EXIT		6304875		True				
ANR	6305024	Symbol	b		6304875						
ANR	6305025	Symbol	corrupt		6304875						
ANR	6305026	Symbol	data		6304875						
ANR	6305027	Symbol	Memento_PreSize		6304875						
ANR	6305028	Symbol	* p ++		6304875						
ANR	6305029	Symbol	globals		6304875						
ANR	6305030	Symbol	i		6304875						
ANR	6305031	Symbol	b -> preblk		6304875						
ANR	6305032	Symbol	* b		6304875						
ANR	6305033	Symbol	data -> found		6304875						
ANR	6305034	Symbol	data -> preCorrupt		6304875						
ANR	6305035	Symbol	p		6304875						
ANR	6305036	Symbol	MEMENTO_PREFILL		6304875						
ANR	6305037	Symbol	MEMBLK_POSTPTR		6304875						
ANR	6305038	Symbol	data -> postCorrupt		6304875						
ANR	6305039	Symbol	data -> freeCorrupt		6304875						
ANR	6305040	Symbol	b -> lastCheckedOK		6304875						
ANR	6305041	Symbol	arg		6304875						
ANR	6305042	Symbol	MEMENTO_POSTFILL		6304875						
ANR	6305043	Symbol	* data		6304875						
ANR	6305044	Symbol	globals . sequence		6304875						
ANR	6305045	Function	Memento_Internal_checkFreedBlock	287:0:7986:9518							
ANR	6305046	FunctionDef	"Memento_Internal_checkFreedBlock (Memento_BlkHeader * b , void * arg)"		6305045	0					
ANR	6305047	CompoundStatement		289:0:8063:9518	6305045	0					
ANR	6305048	IdentifierDeclStatement	int i ;	291:4:8094:8099	6305045	0	True				
ANR	6305049	IdentifierDecl	i		6305045	0					
ANR	6305050	IdentifierDeclType	int		6305045	0					
ANR	6305051	Identifier	i		6305045	1					
ANR	6305052	IdentifierDeclStatement	char * p ;	292:4:8105:8112	6305045	1	True				
ANR	6305053	IdentifierDecl	* p		6305045	0					
ANR	6305054	IdentifierDeclType	char *		6305045	0					
ANR	6305055	Identifier	p		6305045	1					
ANR	6305056	IdentifierDeclStatement	BlkCheckData * data = ( BlkCheckData * ) arg ;	293:4:8118:8159	6305045	2	True				
ANR	6305057	IdentifierDecl	* data = ( BlkCheckData * ) arg		6305045	0					
ANR	6305058	IdentifierDeclType	BlkCheckData *		6305045	0					
ANR	6305059	Identifier	data		6305045	1					
ANR	6305060	AssignmentExpression	* data = ( BlkCheckData * ) arg		6305045	2		=			
ANR	6305061	Identifier	data		6305045	0					
ANR	6305062	CastExpression	( BlkCheckData * ) arg		6305045	1					
ANR	6305063	CastTarget	BlkCheckData *		6305045	0					
ANR	6305064	Identifier	arg		6305045	1					
ANR	6305065	ExpressionStatement	p = MEMBLK_TOBLK ( b )	295:4:8166:8185	6305045	3	True				
ANR	6305066	AssignmentExpression	p = MEMBLK_TOBLK ( b )		6305045	0		=			
ANR	6305067	Identifier	p		6305045	0					
ANR	6305068	CallExpression	MEMBLK_TOBLK ( b )		6305045	1					
ANR	6305069	Callee	MEMBLK_TOBLK		6305045	0					
ANR	6305070	Identifier	MEMBLK_TOBLK		6305045	0					
ANR	6305071	ArgumentList	b		6305045	1					
ANR	6305072	Argument	b		6305045	0					
ANR	6305073	Identifier	b		6305045	0					
ANR	6305074	ExpressionStatement	i = b -> rawsize	296:4:8191:8205	6305045	4	True				
ANR	6305075	AssignmentExpression	i = b -> rawsize		6305045	0		=			
ANR	6305076	Identifier	i		6305045	0					
ANR	6305077	PtrMemberAccess	b -> rawsize		6305045	1					
ANR	6305078	Identifier	b		6305045	0					
ANR	6305079	Identifier	rawsize		6305045	1					
ANR	6305080	DoStatement	do		6305045	5					
ANR	6305081	CompoundStatement		10:7:224:224	6305045	0					
ANR	6305082	IfStatement	if ( ( ( size_t ) p ) & 1 )		6305045	0					
ANR	6305083	Condition	( ( size_t ) p ) & 1	299:12:8302:8317	6305045	0	True				
ANR	6305084	BitAndExpression	( ( size_t ) p ) & 1		6305045	0		&			
ANR	6305085	CastExpression	( size_t ) p		6305045	0					
ANR	6305086	CastTarget	size_t		6305045	0					
ANR	6305087	Identifier	p		6305045	1					
ANR	6305088	PrimaryExpression	1		6305045	1					
ANR	6305089	CompoundStatement		11:30:256:256	6305045	1					
ANR	6305090	IfStatement	if ( * p ++ != ( char ) MEMENTO_FREEFILL )		6305045	0					
ANR	6305091	Condition	* p ++ != ( char ) MEMENTO_FREEFILL	300:16:8338:8367	6305045	0	True				
ANR	6305092	EqualityExpression	* p ++ != ( char ) MEMENTO_FREEFILL		6305045	0		!=			
ANR	6305093	UnaryOperationExpression	* p ++		6305045	0					
ANR	6305094	UnaryOperator	*		6305045	0					
ANR	6305095	PostIncDecOperationExpression	p ++		6305045	1					
ANR	6305096	Identifier	p		6305045	0					
ANR	6305097	IncDec	++		6305045	1					
ANR	6305098	CastExpression	( char ) MEMENTO_FREEFILL		6305045	1					
ANR	6305099	CastTarget	char		6305045	0					
ANR	6305100	Identifier	MEMENTO_FREEFILL		6305045	1					
ANR	6305101	BreakStatement	break ;	301:16:8386:8391	6305045	1	True				
ANR	6305102	ExpressionStatement	i --	302:12:8405:8408	6305045	1	True				
ANR	6305103	PostIncDecOperationExpression	i --		6305045	0					
ANR	6305104	Identifier	i		6305045	0					
ANR	6305105	IncDec	--		6305045	1					
ANR	6305106	IfStatement	if ( i == 0 )		6305045	2					
ANR	6305107	Condition	i == 0	303:16:8426:8431	6305045	0	True				
ANR	6305108	EqualityExpression	i == 0		6305045	0		==			
ANR	6305109	Identifier	i		6305045	0					
ANR	6305110	PrimaryExpression	0		6305045	1					
ANR	6305111	BreakStatement	break ;	304:16:8450:8455	6305045	1	True				
ANR	6305112	IfStatement	if ( ( i >= 2 ) && ( ( ( size_t ) p ) & 2 ) )		6305045	1					
ANR	6305113	Condition	( i >= 2 ) && ( ( ( size_t ) p ) & 2 )	306:12:8479:8508	6305045	0	True				
ANR	6305114	AndExpression	( i >= 2 ) && ( ( ( size_t ) p ) & 2 )		6305045	0		&&			
ANR	6305115	RelationalExpression	i >= 2		6305045	0		>=			
ANR	6305116	Identifier	i		6305045	0					
ANR	6305117	PrimaryExpression	2		6305045	1					
ANR	6305118	BitAndExpression	( ( size_t ) p ) & 2		6305045	1		&			
ANR	6305119	CastExpression	( size_t ) p		6305045	0					
ANR	6305120	CastTarget	size_t		6305045	0					
ANR	6305121	Identifier	p		6305045	1					
ANR	6305122	PrimaryExpression	2		6305045	1					
ANR	6305123	CompoundStatement		18:44:447:447	6305045	1					
ANR	6305124	IfStatement	if ( * ( short * ) p != ( short ) ( MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 ) ) )		6305045	0					
ANR	6305125	Condition	* ( short * ) p != ( short ) ( MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 ) )	307:16:8529:8594	6305045	0	True				
ANR	6305126	EqualityExpression	* ( short * ) p != ( short ) ( MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 ) )		6305045	0		!=			
ANR	6305127	UnaryOperationExpression	* ( short * ) p		6305045	0					
ANR	6305128	UnaryOperator	*		6305045	0					
ANR	6305129	CastExpression	( short * ) p		6305045	1					
ANR	6305130	CastTarget	short *		6305045	0					
ANR	6305131	Identifier	p		6305045	1					
ANR	6305132	CastExpression	( short ) ( MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 ) )		6305045	1					
ANR	6305133	CastTarget	short		6305045	0					
ANR	6305134	InclusiveOrExpression	MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 )		6305045	1		|			
ANR	6305135	Identifier	MEMENTO_FREEFILL		6305045	0					
ANR	6305136	ShiftExpression	MEMENTO_FREEFILL << 8		6305045	1		<<			
ANR	6305137	Identifier	MEMENTO_FREEFILL		6305045	0					
ANR	6305138	PrimaryExpression	8		6305045	1					
ANR	6305139	GotoStatement	goto mismatch ;	308:16:8613:8626	6305045	1	True				
ANR	6305140	Identifier	mismatch		6305045	0					
ANR	6305141	ExpressionStatement	p += 2	309:12:8640:8646	6305045	1	True				
ANR	6305142	AssignmentExpression	p += 2		6305045	0		+=			
ANR	6305143	Identifier	p		6305045	0					
ANR	6305144	PrimaryExpression	2		6305045	1					
ANR	6305145	ExpressionStatement	i -= 2	310:12:8660:8666	6305045	2	True				
ANR	6305146	AssignmentExpression	i -= 2		6305045	0		-=			
ANR	6305147	Identifier	i		6305045	0					
ANR	6305148	PrimaryExpression	2		6305045	1					
ANR	6305149	IfStatement	if ( i == 0 )		6305045	3					
ANR	6305150	Condition	i == 0	311:16:8684:8689	6305045	0	True				
ANR	6305151	EqualityExpression	i == 0		6305045	0		==			
ANR	6305152	Identifier	i		6305045	0					
ANR	6305153	PrimaryExpression	0		6305045	1					
ANR	6305154	BreakStatement	break ;	312:16:8708:8713	6305045	1	True				
ANR	6305155	ExpressionStatement	i -= 4	314:8:8733:8739	6305045	2	True				
ANR	6305156	AssignmentExpression	i -= 4		6305045	0		-=			
ANR	6305157	Identifier	i		6305045	0					
ANR	6305158	PrimaryExpression	4		6305045	1					
ANR	6305159	WhileStatement	while ( i >= 0 )		6305045	3					
ANR	6305160	Condition	i >= 0	315:15:8756:8761	6305045	0	True				
ANR	6305161	RelationalExpression	i >= 0		6305045	0		>=			
ANR	6305162	Identifier	i		6305045	0					
ANR	6305163	PrimaryExpression	0		6305045	1					
ANR	6305164	CompoundStatement		27:23:700:700	6305045	1					
ANR	6305165	IfStatement	if ( * ( int * ) p != ( MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 ) | ( MEMENTO_FREEFILL << 16 ) | ( MEMENTO_FREEFILL << 24 ) ) )		6305045	0					
ANR	6305166	Condition	* ( int * ) p != ( MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 ) | ( MEMENTO_FREEFILL << 16 ) | ( MEMENTO_FREEFILL << 24 ) )	316:16:8782:8892	6305045	0	True				
ANR	6305167	EqualityExpression	* ( int * ) p != ( MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 ) | ( MEMENTO_FREEFILL << 16 ) | ( MEMENTO_FREEFILL << 24 ) )		6305045	0		!=			
ANR	6305168	UnaryOperationExpression	* ( int * ) p		6305045	0					
ANR	6305169	UnaryOperator	*		6305045	0					
ANR	6305170	CastExpression	( int * ) p		6305045	1					
ANR	6305171	CastTarget	int *		6305045	0					
ANR	6305172	Identifier	p		6305045	1					
ANR	6305173	InclusiveOrExpression	MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 ) | ( MEMENTO_FREEFILL << 16 ) | ( MEMENTO_FREEFILL << 24 )		6305045	1		|			
ANR	6305174	Identifier	MEMENTO_FREEFILL		6305045	0					
ANR	6305175	InclusiveOrExpression	( MEMENTO_FREEFILL << 8 ) | ( MEMENTO_FREEFILL << 16 ) | ( MEMENTO_FREEFILL << 24 )		6305045	1		|			
ANR	6305176	ShiftExpression	MEMENTO_FREEFILL << 8		6305045	0		<<			
ANR	6305177	Identifier	MEMENTO_FREEFILL		6305045	0					
ANR	6305178	PrimaryExpression	8		6305045	1					
ANR	6305179	InclusiveOrExpression	( MEMENTO_FREEFILL << 16 ) | ( MEMENTO_FREEFILL << 24 )		6305045	1		|			
ANR	6305180	ShiftExpression	MEMENTO_FREEFILL << 16		6305045	0		<<			
ANR	6305181	Identifier	MEMENTO_FREEFILL		6305045	0					
ANR	6305182	PrimaryExpression	16		6305045	1					
ANR	6305183	ShiftExpression	MEMENTO_FREEFILL << 24		6305045	1		<<			
ANR	6305184	Identifier	MEMENTO_FREEFILL		6305045	0					
ANR	6305185	PrimaryExpression	24		6305045	1					
ANR	6305186	GotoStatement	goto mismatch ;	317:16:8911:8924	6305045	1	True				
ANR	6305187	Identifier	mismatch		6305045	0					
ANR	6305188	ExpressionStatement	p += 4	318:12:8938:8944	6305045	1	True				
ANR	6305189	AssignmentExpression	p += 4		6305045	0		+=			
ANR	6305190	Identifier	p		6305045	0					
ANR	6305191	PrimaryExpression	4		6305045	1					
ANR	6305192	ExpressionStatement	i -= 4	319:12:8958:8964	6305045	2	True				
ANR	6305193	AssignmentExpression	i -= 4		6305045	0		-=			
ANR	6305194	Identifier	i		6305045	0					
ANR	6305195	PrimaryExpression	4		6305045	1					
ANR	6305196	ExpressionStatement	i += 4	321:8:8984:8990	6305045	4	True				
ANR	6305197	AssignmentExpression	i += 4		6305045	0		+=			
ANR	6305198	Identifier	i		6305045	0					
ANR	6305199	PrimaryExpression	4		6305045	1					
ANR	6305200	IfStatement	if ( ( i >= 2 ) && ( ( ( size_t ) p ) & 2 ) )		6305045	5					
ANR	6305201	Condition	( i >= 2 ) && ( ( ( size_t ) p ) & 2 )	322:12:9004:9033	6305045	0	True				
ANR	6305202	AndExpression	( i >= 2 ) && ( ( ( size_t ) p ) & 2 )		6305045	0		&&			
ANR	6305203	RelationalExpression	i >= 2		6305045	0		>=			
ANR	6305204	Identifier	i		6305045	0					
ANR	6305205	PrimaryExpression	2		6305045	1					
ANR	6305206	BitAndExpression	( ( size_t ) p ) & 2		6305045	1		&			
ANR	6305207	CastExpression	( size_t ) p		6305045	0					
ANR	6305208	CastTarget	size_t		6305045	0					
ANR	6305209	Identifier	p		6305045	1					
ANR	6305210	PrimaryExpression	2		6305045	1					
ANR	6305211	CompoundStatement		34:44:972:972	6305045	1					
ANR	6305212	IfStatement	if ( * ( short * ) p != ( short ) ( MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 ) ) )		6305045	0					
ANR	6305213	Condition	* ( short * ) p != ( short ) ( MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 ) )	323:16:9054:9119	6305045	0	True				
ANR	6305214	EqualityExpression	* ( short * ) p != ( short ) ( MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 ) )		6305045	0		!=			
ANR	6305215	UnaryOperationExpression	* ( short * ) p		6305045	0					
ANR	6305216	UnaryOperator	*		6305045	0					
ANR	6305217	CastExpression	( short * ) p		6305045	1					
ANR	6305218	CastTarget	short *		6305045	0					
ANR	6305219	Identifier	p		6305045	1					
ANR	6305220	CastExpression	( short ) ( MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 ) )		6305045	1					
ANR	6305221	CastTarget	short		6305045	0					
ANR	6305222	InclusiveOrExpression	MEMENTO_FREEFILL | ( MEMENTO_FREEFILL << 8 )		6305045	1		|			
ANR	6305223	Identifier	MEMENTO_FREEFILL		6305045	0					
ANR	6305224	ShiftExpression	MEMENTO_FREEFILL << 8		6305045	1		<<			
ANR	6305225	Identifier	MEMENTO_FREEFILL		6305045	0					
ANR	6305226	PrimaryExpression	8		6305045	1					
ANR	6305227	GotoStatement	goto mismatch ;	324:16:9138:9151	6305045	1	True				
ANR	6305228	Identifier	mismatch		6305045	0					
ANR	6305229	ExpressionStatement	p += 2	325:12:9165:9171	6305045	1	True				
ANR	6305230	AssignmentExpression	p += 2		6305045	0		+=			
ANR	6305231	Identifier	p		6305045	0					
ANR	6305232	PrimaryExpression	2		6305045	1					
ANR	6305233	ExpressionStatement	i -= 2	326:12:9185:9191	6305045	2	True				
ANR	6305234	AssignmentExpression	i -= 2		6305045	0		-=			
ANR	6305235	Identifier	i		6305045	0					
ANR	6305236	PrimaryExpression	2		6305045	1					
ANR	6305237	Label	mismatch :	328:0:9203:9211	6305045	6	True				
ANR	6305238	Identifier	mismatch		6305045	0					
ANR	6305239	WhileStatement	while ( i )		6305045	7					
ANR	6305240	Condition	i	329:15:9228:9228	6305045	0	True				
ANR	6305241	Identifier	i		6305045	0					
ANR	6305242	CompoundStatement		41:18:1167:1167	6305045	1					
ANR	6305243	IfStatement	if ( * p ++ != ( char ) MEMENTO_FREEFILL )		6305045	0					
ANR	6305244	Condition	* p ++ != ( char ) MEMENTO_FREEFILL	330:16:9249:9278	6305045	0	True				
ANR	6305245	EqualityExpression	* p ++ != ( char ) MEMENTO_FREEFILL		6305045	0		!=			
ANR	6305246	UnaryOperationExpression	* p ++		6305045	0					
ANR	6305247	UnaryOperator	*		6305045	0					
ANR	6305248	PostIncDecOperationExpression	p ++		6305045	1					
ANR	6305249	Identifier	p		6305045	0					
ANR	6305250	IncDec	++		6305045	1					
ANR	6305251	CastExpression	( char ) MEMENTO_FREEFILL		6305045	1					
ANR	6305252	CastTarget	char		6305045	0					
ANR	6305253	Identifier	MEMENTO_FREEFILL		6305045	1					
ANR	6305254	BreakStatement	break ;	331:16:9297:9302	6305045	1	True				
ANR	6305255	ExpressionStatement	i --	332:12:9316:9319	6305045	1	True				
ANR	6305256	PostIncDecOperationExpression	i --		6305045	0					
ANR	6305257	Identifier	i		6305045	0					
ANR	6305258	IncDec	--		6305045	1					
ANR	6305259	Condition	0	334:13:9344:9344	6305045	1	True				
ANR	6305260	PrimaryExpression	0		6305045	0					
ANR	6305261	IfStatement	if ( i )		6305045	6					
ANR	6305262	Condition	i	335:8:9356:9356	6305045	0	True				
ANR	6305263	Identifier	i		6305045	0					
ANR	6305264	CompoundStatement		47:11:1295:1295	6305045	1					
ANR	6305265	ExpressionStatement	data -> freeCorrupt = 1	336:8:9369:9390	6305045	0	True				
ANR	6305266	AssignmentExpression	data -> freeCorrupt = 1		6305045	0		=			
ANR	6305267	PtrMemberAccess	data -> freeCorrupt		6305045	0					
ANR	6305268	Identifier	data		6305045	0					
ANR	6305269	Identifier	freeCorrupt		6305045	1					
ANR	6305270	PrimaryExpression	1		6305045	1					
ANR	6305271	ExpressionStatement	data -> index = b -> rawsize - i	337:8:9400:9428	6305045	1	True				
ANR	6305272	AssignmentExpression	data -> index = b -> rawsize - i		6305045	0		=			
ANR	6305273	PtrMemberAccess	data -> index		6305045	0					
ANR	6305274	Identifier	data		6305045	0					
ANR	6305275	Identifier	index		6305045	1					
ANR	6305276	AdditiveExpression	b -> rawsize - i		6305045	1		-			
ANR	6305277	PtrMemberAccess	b -> rawsize		6305045	0					
ANR	6305278	Identifier	b		6305045	0					
ANR	6305279	Identifier	rawsize		6305045	1					
ANR	6305280	Identifier	i		6305045	1					
ANR	6305281	ReturnStatement	"return Memento_Internal_checkAllocedBlock ( b , arg ) ;"	339:4:9440:9489	6305045	7	True				
ANR	6305282	CallExpression	"Memento_Internal_checkAllocedBlock ( b , arg )"		6305045	0					
ANR	6305283	Callee	Memento_Internal_checkAllocedBlock		6305045	0					
ANR	6305284	Identifier	Memento_Internal_checkAllocedBlock		6305045	0					
ANR	6305285	ArgumentList	b		6305045	1					
ANR	6305286	Argument	b		6305045	0					
ANR	6305287	Identifier	b		6305045	0					
ANR	6305288	Argument	arg		6305045	1					
ANR	6305289	Identifier	arg		6305045	0					
ANR	6305290	ReturnType	static int		6305045	1					
ANR	6305291	Identifier	Memento_Internal_checkFreedBlock		6305045	2					
ANR	6305292	ParameterList	"Memento_BlkHeader * b , void * arg"		6305045	3					
ANR	6305293	Parameter	Memento_BlkHeader * b	288:33:8030:8049	6305045	0	True				
ANR	6305294	ParameterType	Memento_BlkHeader *		6305045	0					
ANR	6305295	Identifier	b		6305045	1					
ANR	6305296	Parameter	void * arg	288:55:8052:8060	6305045	1	True				
ANR	6305297	ParameterType	void *		6305045	0					
ANR	6305298	Identifier	arg		6305045	1					
ANR	6305299	CFGEntryNode	ENTRY		6305045		True				
ANR	6305300	CFGExitNode	EXIT		6305045		True				
ANR	6305301	Symbol	b		6305045						
ANR	6305302	Symbol	data		6305045						
ANR	6305303	Symbol	* ( short * ) p		6305045						
ANR	6305304	Symbol	* p ++		6305045						
ANR	6305305	Symbol	i		6305045						
ANR	6305306	Symbol	* b		6305045						
ANR	6305307	Symbol	MEMBLK_TOBLK		6305045						
ANR	6305308	Symbol	p		6305045						
ANR	6305309	Symbol	b -> rawsize		6305045						
ANR	6305310	Symbol	Memento_Internal_checkAllocedBlock		6305045						
ANR	6305311	Symbol	MEMENTO_FREEFILL		6305045						
ANR	6305312	Symbol	data -> freeCorrupt		6305045						
ANR	6305313	Symbol	arg		6305045						
ANR	6305314	Symbol	data -> index		6305045						
ANR	6305315	Symbol	* ( int * ) p		6305045						
ANR	6305316	Symbol	* p		6305045						
ANR	6305317	Symbol	* data		6305045						
ANR	6305318	Function	Memento_removeBlock	345:0:9521:10896							
ANR	6305319	FunctionDef	"Memento_removeBlock (Memento_Blocks * blks , Memento_BlkHeader * b)"		6305318	0					
ANR	6305320	CompoundStatement		347:0:9597:10896	6305318	0					
ANR	6305321	IdentifierDeclStatement	Memento_BlkHeader * head = blks -> head ;	348:4:9603:9639	6305318	0	True				
ANR	6305322	IdentifierDecl	* head = blks -> head		6305318	0					
ANR	6305323	IdentifierDeclType	Memento_BlkHeader *		6305318	0					
ANR	6305324	Identifier	head		6305318	1					
ANR	6305325	AssignmentExpression	* head = blks -> head		6305318	2		=			
ANR	6305326	Identifier	head		6305318	0					
ANR	6305327	PtrMemberAccess	blks -> head		6305318	1					
ANR	6305328	Identifier	blks		6305318	0					
ANR	6305329	Identifier	head		6305318	1					
ANR	6305330	IdentifierDeclStatement	Memento_BlkHeader * prev = NULL ;	349:4:9645:9675	6305318	1	True				
ANR	6305331	IdentifierDecl	* prev = NULL		6305318	0					
ANR	6305332	IdentifierDeclType	Memento_BlkHeader *		6305318	0					
ANR	6305333	Identifier	prev		6305318	1					
ANR	6305334	AssignmentExpression	* prev = NULL		6305318	2		=			
ANR	6305335	Identifier	NULL		6305318	0					
ANR	6305336	Identifier	NULL		6305318	1					
ANR	6305337	WhileStatement	while ( ( head ) && ( head != b ) )		6305318	2					
ANR	6305338	Condition	( head ) && ( head != b )	351:11:9689:9709	6305318	0	True				
ANR	6305339	AndExpression	( head ) && ( head != b )		6305318	0		&&			
ANR	6305340	Identifier	head		6305318	0					
ANR	6305341	EqualityExpression	head != b		6305318	1		!=			
ANR	6305342	Identifier	head		6305318	0					
ANR	6305343	Identifier	b		6305318	1					
ANR	6305344	CompoundStatement		5:34:114:114	6305318	1					
ANR	6305345	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( * head ) )"	352:8:9722:9768	6305318	0	True				
ANR	6305346	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( * head ) )"		6305318	0					
ANR	6305347	Callee	VALGRIND_MAKE_MEM_DEFINED		6305318	0					
ANR	6305348	Identifier	VALGRIND_MAKE_MEM_DEFINED		6305318	0					
ANR	6305349	ArgumentList	head		6305318	1					
ANR	6305350	Argument	head		6305318	0					
ANR	6305351	Identifier	head		6305318	0					
ANR	6305352	Argument	sizeof ( * head )		6305318	1					
ANR	6305353	SizeofExpression	sizeof ( * head )		6305318	0					
ANR	6305354	Sizeof	sizeof		6305318	0					
ANR	6305355	UnaryOperationExpression	* head		6305318	1					
ANR	6305356	UnaryOperator	*		6305318	0					
ANR	6305357	Identifier	head		6305318	1					
ANR	6305358	ExpressionStatement	prev = head	353:8:9778:9789	6305318	1	True				
ANR	6305359	AssignmentExpression	prev = head		6305318	0		=			
ANR	6305360	Identifier	prev		6305318	0					
ANR	6305361	Identifier	head		6305318	1					
ANR	6305362	ExpressionStatement	head = head -> next	354:8:9799:9816	6305318	2	True				
ANR	6305363	AssignmentExpression	head = head -> next		6305318	0		=			
ANR	6305364	Identifier	head		6305318	0					
ANR	6305365	PtrMemberAccess	head -> next		6305318	1					
ANR	6305366	Identifier	head		6305318	0					
ANR	6305367	Identifier	next		6305318	1					
ANR	6305368	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( prev , sizeof ( * prev ) )"	355:8:9826:9873	6305318	3	True				
ANR	6305369	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( prev , sizeof ( * prev ) )"		6305318	0					
ANR	6305370	Callee	VALGRIND_MAKE_MEM_NOACCESS		6305318	0					
ANR	6305371	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6305318	0					
ANR	6305372	ArgumentList	prev		6305318	1					
ANR	6305373	Argument	prev		6305318	0					
ANR	6305374	Identifier	prev		6305318	0					
ANR	6305375	Argument	sizeof ( * prev )		6305318	1					
ANR	6305376	SizeofExpression	sizeof ( * prev )		6305318	0					
ANR	6305377	Sizeof	sizeof		6305318	0					
ANR	6305378	UnaryOperationExpression	* prev		6305318	1					
ANR	6305379	UnaryOperator	*		6305318	0					
ANR	6305380	Identifier	prev		6305318	1					
ANR	6305381	IfStatement	if ( head == NULL )		6305318	3					
ANR	6305382	Condition	head == NULL	357:8:9889:9900	6305318	0	True				
ANR	6305383	EqualityExpression	head == NULL		6305318	0		==			
ANR	6305384	Identifier	head		6305318	0					
ANR	6305385	Identifier	NULL		6305318	1					
ANR	6305386	CompoundStatement		11:22:305:305	6305318	1					
ANR	6305387	ReturnStatement	return ;	359:8:9988:9994	6305318	0	True				
ANR	6305388	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( blks -> tail , sizeof ( * blks -> tail ) )"	361:4:10006:10064	6305318	4	True				
ANR	6305389	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( blks -> tail , sizeof ( * blks -> tail ) )"		6305318	0					
ANR	6305390	Callee	VALGRIND_MAKE_MEM_DEFINED		6305318	0					
ANR	6305391	Identifier	VALGRIND_MAKE_MEM_DEFINED		6305318	0					
ANR	6305392	ArgumentList	blks -> tail		6305318	1					
ANR	6305393	Argument	blks -> tail		6305318	0					
ANR	6305394	PtrMemberAccess	blks -> tail		6305318	0					
ANR	6305395	Identifier	blks		6305318	0					
ANR	6305396	Identifier	tail		6305318	1					
ANR	6305397	Argument	sizeof ( * blks -> tail )		6305318	1					
ANR	6305398	SizeofExpression	sizeof ( * blks -> tail )		6305318	0					
ANR	6305399	Sizeof	sizeof		6305318	0					
ANR	6305400	UnaryOperationExpression	* blks -> tail		6305318	1					
ANR	6305401	UnaryOperator	*		6305318	0					
ANR	6305402	PtrMemberAccess	blks -> tail		6305318	1					
ANR	6305403	Identifier	blks		6305318	0					
ANR	6305404	Identifier	tail		6305318	1					
ANR	6305405	IfStatement	if ( * blks -> tail == head )		6305318	5					
ANR	6305406	Condition	* blks -> tail == head	362:8:10074:10092	6305318	0	True				
ANR	6305407	EqualityExpression	* blks -> tail == head		6305318	0		==			
ANR	6305408	UnaryOperationExpression	* blks -> tail		6305318	0					
ANR	6305409	UnaryOperator	*		6305318	0					
ANR	6305410	PtrMemberAccess	blks -> tail		6305318	1					
ANR	6305411	Identifier	blks		6305318	0					
ANR	6305412	Identifier	tail		6305318	1					
ANR	6305413	Identifier	head		6305318	1					
ANR	6305414	CompoundStatement		16:29:497:497	6305318	1					
ANR	6305415	IfStatement	if ( prev == NULL )		6305318	0					
ANR	6305416	Condition	prev == NULL	364:12:10153:10164	6305318	0	True				
ANR	6305417	EqualityExpression	prev == NULL		6305318	0		==			
ANR	6305418	Identifier	prev		6305318	0					
ANR	6305419	Identifier	NULL		6305318	1					
ANR	6305420	CompoundStatement		18:26:569:569	6305318	1					
ANR	6305421	ExpressionStatement	blks -> tail = & blks -> head	366:12:10222:10246	6305318	0	True				
ANR	6305422	AssignmentExpression	blks -> tail = & blks -> head		6305318	0		=			
ANR	6305423	PtrMemberAccess	blks -> tail		6305318	0					
ANR	6305424	Identifier	blks		6305318	0					
ANR	6305425	Identifier	tail		6305318	1					
ANR	6305426	UnaryOperationExpression	& blks -> head		6305318	1					
ANR	6305427	UnaryOperator	&		6305318	0					
ANR	6305428	PtrMemberAccess	blks -> head		6305318	1					
ANR	6305429	Identifier	blks		6305318	0					
ANR	6305430	Identifier	head		6305318	1					
ANR	6305431	ElseStatement	else		6305318	0					
ANR	6305432	CompoundStatement		21:15:665:665	6305318	0					
ANR	6305433	ExpressionStatement	blks -> tail = & prev -> next	369:12:10316:10340	6305318	0	True				
ANR	6305434	AssignmentExpression	blks -> tail = & prev -> next		6305318	0		=			
ANR	6305435	PtrMemberAccess	blks -> tail		6305318	0					
ANR	6305436	Identifier	blks		6305318	0					
ANR	6305437	Identifier	tail		6305318	1					
ANR	6305438	UnaryOperationExpression	& prev -> next		6305318	1					
ANR	6305439	UnaryOperator	&		6305318	0					
ANR	6305440	PtrMemberAccess	prev -> next		6305318	1					
ANR	6305441	Identifier	prev		6305318	0					
ANR	6305442	Identifier	next		6305318	1					
ANR	6305443	IfStatement	if ( prev == NULL )		6305318	6					
ANR	6305444	Condition	prev == NULL	372:8:10366:10377	6305318	0	True				
ANR	6305445	EqualityExpression	prev == NULL		6305318	0		==			
ANR	6305446	Identifier	prev		6305318	0					
ANR	6305447	Identifier	NULL		6305318	1					
ANR	6305448	CompoundStatement		26:22:782:782	6305318	1					
ANR	6305449	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( * head ) )"	374:8:10439:10485	6305318	0	True				
ANR	6305450	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( * head ) )"		6305318	0					
ANR	6305451	Callee	VALGRIND_MAKE_MEM_DEFINED		6305318	0					
ANR	6305452	Identifier	VALGRIND_MAKE_MEM_DEFINED		6305318	0					
ANR	6305453	ArgumentList	head		6305318	1					
ANR	6305454	Argument	head		6305318	0					
ANR	6305455	Identifier	head		6305318	0					
ANR	6305456	Argument	sizeof ( * head )		6305318	1					
ANR	6305457	SizeofExpression	sizeof ( * head )		6305318	0					
ANR	6305458	Sizeof	sizeof		6305318	0					
ANR	6305459	UnaryOperationExpression	* head		6305318	1					
ANR	6305460	UnaryOperator	*		6305318	0					
ANR	6305461	Identifier	head		6305318	1					
ANR	6305462	ExpressionStatement	blks -> head = head -> next	375:8:10495:10518	6305318	1	True				
ANR	6305463	AssignmentExpression	blks -> head = head -> next		6305318	0		=			
ANR	6305464	PtrMemberAccess	blks -> head		6305318	0					
ANR	6305465	Identifier	blks		6305318	0					
ANR	6305466	Identifier	head		6305318	1					
ANR	6305467	PtrMemberAccess	head -> next		6305318	1					
ANR	6305468	Identifier	head		6305318	0					
ANR	6305469	Identifier	next		6305318	1					
ANR	6305470	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( head , sizeof ( * head ) )"	376:8:10528:10575	6305318	2	True				
ANR	6305471	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( head , sizeof ( * head ) )"		6305318	0					
ANR	6305472	Callee	VALGRIND_MAKE_MEM_NOACCESS		6305318	0					
ANR	6305473	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6305318	0					
ANR	6305474	ArgumentList	head		6305318	1					
ANR	6305475	Argument	head		6305318	0					
ANR	6305476	Identifier	head		6305318	0					
ANR	6305477	Argument	sizeof ( * head )		6305318	1					
ANR	6305478	SizeofExpression	sizeof ( * head )		6305318	0					
ANR	6305479	Sizeof	sizeof		6305318	0					
ANR	6305480	UnaryOperationExpression	* head		6305318	1					
ANR	6305481	UnaryOperator	*		6305318	0					
ANR	6305482	Identifier	head		6305318	1					
ANR	6305483	ElseStatement	else		6305318	0					
ANR	6305484	CompoundStatement		31:11:990:990	6305318	0					
ANR	6305485	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( * head ) )"	379:8:10639:10685	6305318	0	True				
ANR	6305486	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( * head ) )"		6305318	0					
ANR	6305487	Callee	VALGRIND_MAKE_MEM_DEFINED		6305318	0					
ANR	6305488	Identifier	VALGRIND_MAKE_MEM_DEFINED		6305318	0					
ANR	6305489	ArgumentList	head		6305318	1					
ANR	6305490	Argument	head		6305318	0					
ANR	6305491	Identifier	head		6305318	0					
ANR	6305492	Argument	sizeof ( * head )		6305318	1					
ANR	6305493	SizeofExpression	sizeof ( * head )		6305318	0					
ANR	6305494	Sizeof	sizeof		6305318	0					
ANR	6305495	UnaryOperationExpression	* head		6305318	1					
ANR	6305496	UnaryOperator	*		6305318	0					
ANR	6305497	Identifier	head		6305318	1					
ANR	6305498	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( prev , sizeof ( * prev ) )"	380:8:10695:10741	6305318	1	True				
ANR	6305499	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( prev , sizeof ( * prev ) )"		6305318	0					
ANR	6305500	Callee	VALGRIND_MAKE_MEM_DEFINED		6305318	0					
ANR	6305501	Identifier	VALGRIND_MAKE_MEM_DEFINED		6305318	0					
ANR	6305502	ArgumentList	prev		6305318	1					
ANR	6305503	Argument	prev		6305318	0					
ANR	6305504	Identifier	prev		6305318	0					
ANR	6305505	Argument	sizeof ( * prev )		6305318	1					
ANR	6305506	SizeofExpression	sizeof ( * prev )		6305318	0					
ANR	6305507	Sizeof	sizeof		6305318	0					
ANR	6305508	UnaryOperationExpression	* prev		6305318	1					
ANR	6305509	UnaryOperator	*		6305318	0					
ANR	6305510	Identifier	prev		6305318	1					
ANR	6305511	ExpressionStatement	prev -> next = head -> next	381:8:10751:10774	6305318	2	True				
ANR	6305512	AssignmentExpression	prev -> next = head -> next		6305318	0		=			
ANR	6305513	PtrMemberAccess	prev -> next		6305318	0					
ANR	6305514	Identifier	prev		6305318	0					
ANR	6305515	Identifier	next		6305318	1					
ANR	6305516	PtrMemberAccess	head -> next		6305318	1					
ANR	6305517	Identifier	head		6305318	0					
ANR	6305518	Identifier	next		6305318	1					
ANR	6305519	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( head , sizeof ( * head ) )"	382:8:10784:10831	6305318	3	True				
ANR	6305520	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( head , sizeof ( * head ) )"		6305318	0					
ANR	6305521	Callee	VALGRIND_MAKE_MEM_NOACCESS		6305318	0					
ANR	6305522	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6305318	0					
ANR	6305523	ArgumentList	head		6305318	1					
ANR	6305524	Argument	head		6305318	0					
ANR	6305525	Identifier	head		6305318	0					
ANR	6305526	Argument	sizeof ( * head )		6305318	1					
ANR	6305527	SizeofExpression	sizeof ( * head )		6305318	0					
ANR	6305528	Sizeof	sizeof		6305318	0					
ANR	6305529	UnaryOperationExpression	* head		6305318	1					
ANR	6305530	UnaryOperator	*		6305318	0					
ANR	6305531	Identifier	head		6305318	1					
ANR	6305532	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( prev , sizeof ( * prev ) )"	383:8:10841:10888	6305318	4	True				
ANR	6305533	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( prev , sizeof ( * prev ) )"		6305318	0					
ANR	6305534	Callee	VALGRIND_MAKE_MEM_NOACCESS		6305318	0					
ANR	6305535	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6305318	0					
ANR	6305536	ArgumentList	prev		6305318	1					
ANR	6305537	Argument	prev		6305318	0					
ANR	6305538	Identifier	prev		6305318	0					
ANR	6305539	Argument	sizeof ( * prev )		6305318	1					
ANR	6305540	SizeofExpression	sizeof ( * prev )		6305318	0					
ANR	6305541	Sizeof	sizeof		6305318	0					
ANR	6305542	UnaryOperationExpression	* prev		6305318	1					
ANR	6305543	UnaryOperator	*		6305318	0					
ANR	6305544	Identifier	prev		6305318	1					
ANR	6305545	ReturnType	static void		6305318	1					
ANR	6305546	Identifier	Memento_removeBlock		6305318	2					
ANR	6305547	ParameterList	"Memento_Blocks * blks , Memento_BlkHeader * b"		6305318	3					
ANR	6305548	Parameter	Memento_Blocks * blks	346:20:9553:9572	6305318	0	True				
ANR	6305549	ParameterType	Memento_Blocks *		6305318	0					
ANR	6305550	Identifier	blks		6305318	1					
ANR	6305551	Parameter	Memento_BlkHeader * b	346:42:9575:9594	6305318	1	True				
ANR	6305552	ParameterType	Memento_BlkHeader *		6305318	0					
ANR	6305553	Identifier	b		6305318	1					
ANR	6305554	CFGEntryNode	ENTRY		6305318		True				
ANR	6305555	CFGExitNode	EXIT		6305318		True				
ANR	6305556	Symbol	prev -> next		6305318						
ANR	6305557	Symbol	blks -> tail		6305318						
ANR	6305558	Symbol	b		6305318						
ANR	6305559	Symbol	NULL		6305318						
ANR	6305560	Symbol	prev		6305318						
ANR	6305561	Symbol	* head		6305318						
ANR	6305562	Symbol	blks -> head		6305318						
ANR	6305563	Symbol	* prev		6305318						
ANR	6305564	Symbol	* * blks		6305318						
ANR	6305565	Symbol	& blks -> head		6305318						
ANR	6305566	Symbol	& prev -> next		6305318						
ANR	6305567	Symbol	head		6305318						
ANR	6305568	Symbol	* blks -> tail		6305318						
ANR	6305569	Symbol	* blks		6305318						
ANR	6305570	Symbol	head -> next		6305318						
ANR	6305571	Symbol	blks		6305318						
ANR	6305572	Function	Memento_Internal_makeSpace	387:0:10899:11738							
ANR	6305573	FunctionDef	Memento_Internal_makeSpace (size_t space)		6305572	0					
ANR	6305574	CompoundStatement		389:0:10951:11738	6305572	0					
ANR	6305575	IfStatement	if ( space > MEMENTO_FREELIST_MAX_SINGLE_BLOCK )		6305572	0					
ANR	6305576	Condition	space > MEMENTO_FREELIST_MAX_SINGLE_BLOCK	391:8:11015:11055	6305572	0	True				
ANR	6305577	RelationalExpression	space > MEMENTO_FREELIST_MAX_SINGLE_BLOCK		6305572	0		>			
ANR	6305578	Identifier	space		6305572	0					
ANR	6305579	Identifier	MEMENTO_FREELIST_MAX_SINGLE_BLOCK		6305572	1					
ANR	6305580	ReturnStatement	return 0 ;	392:8:11066:11074	6305572	1	True				
ANR	6305581	PrimaryExpression	0		6305572	0					
ANR	6305582	ExpressionStatement	globals . freeListSize += space	394:4:11114:11143	6305572	1	True				
ANR	6305583	AssignmentExpression	globals . freeListSize += space		6305572	0		+=			
ANR	6305584	MemberAccess	globals . freeListSize		6305572	0					
ANR	6305585	Identifier	globals		6305572	0					
ANR	6305586	Identifier	freeListSize		6305572	1					
ANR	6305587	Identifier	space		6305572	1					
ANR	6305588	WhileStatement	while ( globals . freeListSize > MEMENTO_FREELIST_MAX )		6305572	2					
ANR	6305589	Condition	globals . freeListSize > MEMENTO_FREELIST_MAX	396:11:11210:11252	6305572	0	True				
ANR	6305590	RelationalExpression	globals . freeListSize > MEMENTO_FREELIST_MAX		6305572	0		>			
ANR	6305591	MemberAccess	globals . freeListSize		6305572	0					
ANR	6305592	Identifier	globals		6305572	0					
ANR	6305593	Identifier	freeListSize		6305572	1					
ANR	6305594	Identifier	MEMENTO_FREELIST_MAX		6305572	1					
ANR	6305595	CompoundStatement		9:8:313:356	6305572	1					
ANR	6305596	IdentifierDeclStatement	Memento_BlkHeader * head = globals . free . head ;	397:8:11265:11308	6305572	0	True				
ANR	6305597	IdentifierDecl	* head = globals . free . head		6305572	0					
ANR	6305598	IdentifierDeclType	Memento_BlkHeader *		6305572	0					
ANR	6305599	Identifier	head		6305572	1					
ANR	6305600	AssignmentExpression	* head = globals . free . head		6305572	2		=			
ANR	6305601	Identifier	head		6305572	0					
ANR	6305602	MemberAccess	globals . free . head		6305572	1					
ANR	6305603	MemberAccess	globals . free		6305572	0					
ANR	6305604	Identifier	globals		6305572	0					
ANR	6305605	Identifier	free		6305572	1					
ANR	6305606	Identifier	head		6305572	1					
ANR	6305607	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( * head ) )"	399:8:11319:11365	6305572	1	True				
ANR	6305608	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( * head ) )"		6305572	0					
ANR	6305609	Callee	VALGRIND_MAKE_MEM_DEFINED		6305572	0					
ANR	6305610	Identifier	VALGRIND_MAKE_MEM_DEFINED		6305572	0					
ANR	6305611	ArgumentList	head		6305572	1					
ANR	6305612	Argument	head		6305572	0					
ANR	6305613	Identifier	head		6305572	0					
ANR	6305614	Argument	sizeof ( * head )		6305572	1					
ANR	6305615	SizeofExpression	sizeof ( * head )		6305572	0					
ANR	6305616	Sizeof	sizeof		6305572	0					
ANR	6305617	UnaryOperationExpression	* head		6305572	1					
ANR	6305618	UnaryOperator	*		6305572	0					
ANR	6305619	Identifier	head		6305572	1					
ANR	6305620	ExpressionStatement	globals . free . head = head -> next	400:8:11375:11405	6305572	2	True				
ANR	6305621	AssignmentExpression	globals . free . head = head -> next		6305572	0		=			
ANR	6305622	MemberAccess	globals . free . head		6305572	0					
ANR	6305623	MemberAccess	globals . free		6305572	0					
ANR	6305624	Identifier	globals		6305572	0					
ANR	6305625	Identifier	free		6305572	1					
ANR	6305626	Identifier	head		6305572	1					
ANR	6305627	PtrMemberAccess	head -> next		6305572	1					
ANR	6305628	Identifier	head		6305572	0					
ANR	6305629	Identifier	next		6305572	1					
ANR	6305630	ExpressionStatement	globals . freeListSize -= MEMBLK_SIZE ( head -> rawsize )	401:8:11415:11465	6305572	3	True				
ANR	6305631	AssignmentExpression	globals . freeListSize -= MEMBLK_SIZE ( head -> rawsize )		6305572	0		-=			
ANR	6305632	MemberAccess	globals . freeListSize		6305572	0					
ANR	6305633	Identifier	globals		6305572	0					
ANR	6305634	Identifier	freeListSize		6305572	1					
ANR	6305635	CallExpression	MEMBLK_SIZE ( head -> rawsize )		6305572	1					
ANR	6305636	Callee	MEMBLK_SIZE		6305572	0					
ANR	6305637	Identifier	MEMBLK_SIZE		6305572	0					
ANR	6305638	ArgumentList	head -> rawsize		6305572	1					
ANR	6305639	Argument	head -> rawsize		6305572	0					
ANR	6305640	PtrMemberAccess	head -> rawsize		6305572	0					
ANR	6305641	Identifier	head		6305572	0					
ANR	6305642	Identifier	rawsize		6305572	1					
ANR	6305643	ExpressionStatement	MEMENTO_UNDERLYING_FREE ( head )	402:8:11475:11504	6305572	4	True				
ANR	6305644	CallExpression	MEMENTO_UNDERLYING_FREE ( head )		6305572	0					
ANR	6305645	Callee	MEMENTO_UNDERLYING_FREE		6305572	0					
ANR	6305646	Identifier	MEMENTO_UNDERLYING_FREE		6305572	0					
ANR	6305647	ArgumentList	head		6305572	1					
ANR	6305648	Argument	head		6305572	0					
ANR	6305649	Identifier	head		6305572	0					
ANR	6305650	IfStatement	if ( globals . free . head == NULL )		6305572	3					
ANR	6305651	Condition	globals . free . head == NULL	406:8:11649:11673	6305572	0	True				
ANR	6305652	EqualityExpression	globals . free . head == NULL		6305572	0		==			
ANR	6305653	MemberAccess	globals . free . head		6305572	0					
ANR	6305654	MemberAccess	globals . free		6305572	0					
ANR	6305655	Identifier	globals		6305572	0					
ANR	6305656	Identifier	free		6305572	1					
ANR	6305657	Identifier	head		6305572	1					
ANR	6305658	Identifier	NULL		6305572	1					
ANR	6305659	ExpressionStatement	globals . free . tail = & globals . free . head	407:8:11684:11722	6305572	1	True				
ANR	6305660	AssignmentExpression	globals . free . tail = & globals . free . head		6305572	0		=			
ANR	6305661	MemberAccess	globals . free . tail		6305572	0					
ANR	6305662	MemberAccess	globals . free		6305572	0					
ANR	6305663	Identifier	globals		6305572	0					
ANR	6305664	Identifier	free		6305572	1					
ANR	6305665	Identifier	tail		6305572	1					
ANR	6305666	UnaryOperationExpression	& globals . free . head		6305572	1					
ANR	6305667	UnaryOperator	&		6305572	0					
ANR	6305668	MemberAccess	globals . free . head		6305572	1					
ANR	6305669	MemberAccess	globals . free		6305572	0					
ANR	6305670	Identifier	globals		6305572	0					
ANR	6305671	Identifier	free		6305572	1					
ANR	6305672	Identifier	head		6305572	1					
ANR	6305673	ReturnStatement	return 1 ;	408:4:11728:11736	6305572	4	True				
ANR	6305674	PrimaryExpression	1		6305572	0					
ANR	6305675	ReturnType	static int		6305572	1					
ANR	6305676	Identifier	Memento_Internal_makeSpace		6305572	2					
ANR	6305677	ParameterList	size_t space		6305572	3					
ANR	6305678	Parameter	size_t space	388:27:10937:10948	6305572	0	True				
ANR	6305679	ParameterType	size_t		6305572	0					
ANR	6305680	Identifier	space		6305572	1					
ANR	6305681	CFGEntryNode	ENTRY		6305572		True				
ANR	6305682	CFGExitNode	EXIT		6305572		True				
ANR	6305683	Symbol	NULL		6305572						
ANR	6305684	Symbol	MEMENTO_FREELIST_MAX_SINGLE_BLOCK		6305572						
ANR	6305685	Symbol	globals		6305572						
ANR	6305686	Symbol	globals . free		6305572						
ANR	6305687	Symbol	* head		6305572						
ANR	6305688	Symbol	space		6305572						
ANR	6305689	Symbol	head -> rawsize		6305572						
ANR	6305690	Symbol	globals . freeListSize		6305572						
ANR	6305691	Symbol	MEMENTO_FREELIST_MAX		6305572						
ANR	6305692	Symbol	head		6305572						
ANR	6305693	Symbol	globals . free . tail		6305572						
ANR	6305694	Symbol	& globals		6305572						
ANR	6305695	Symbol	& globals . free		6305572						
ANR	6305696	Symbol	head -> next		6305572						
ANR	6305697	Symbol	& globals . free . head		6305572						
ANR	6305698	Symbol	globals . free . head		6305572						
ANR	6305699	Symbol	MEMBLK_SIZE		6305572						
ANR	6305700	Function	Memento_appBlocks	411:0:11741:12403							
ANR	6305701	FunctionDef	"Memento_appBlocks (Memento_Blocks * blks , int ( * app ) ( Memento_BlkHeader * , void * ) , void * arg)"		6305700	0					
ANR	6305702	CompoundStatement		413:0:11844:12403	6305700	0					
ANR	6305703	IdentifierDeclStatement	Memento_BlkHeader * head = blks -> head ;	414:4:11850:11886	6305700	0	True				
ANR	6305704	IdentifierDecl	* head = blks -> head		6305700	0					
ANR	6305705	IdentifierDeclType	Memento_BlkHeader *		6305700	0					
ANR	6305706	Identifier	head		6305700	1					
ANR	6305707	AssignmentExpression	* head = blks -> head		6305700	2		=			
ANR	6305708	Identifier	head		6305700	0					
ANR	6305709	PtrMemberAccess	blks -> head		6305700	1					
ANR	6305710	Identifier	blks		6305700	0					
ANR	6305711	Identifier	head		6305700	1					
ANR	6305712	IdentifierDeclStatement	Memento_BlkHeader * next ;	415:4:11892:11915	6305700	1	True				
ANR	6305713	IdentifierDecl	* next		6305700	0					
ANR	6305714	IdentifierDeclType	Memento_BlkHeader *		6305700	0					
ANR	6305715	Identifier	next		6305700	1					
ANR	6305716	IdentifierDeclStatement	int result ;	416:4:11921:11931	6305700	2	True				
ANR	6305717	IdentifierDecl	result		6305700	0					
ANR	6305718	IdentifierDeclType	int		6305700	0					
ANR	6305719	Identifier	result		6305700	1					
ANR	6305720	WhileStatement	while ( head )		6305700	3					
ANR	6305721	Condition	head	418:11:11945:11948	6305700	0	True				
ANR	6305722	Identifier	head		6305700	0					
ANR	6305723	CompoundStatement		6:17:106:106	6305700	1					
ANR	6305724	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( Memento_BlkHeader ) )"	419:8:11961:12019	6305700	0	True				
ANR	6305725	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( Memento_BlkHeader ) )"		6305700	0					
ANR	6305726	Callee	VALGRIND_MAKE_MEM_DEFINED		6305700	0					
ANR	6305727	Identifier	VALGRIND_MAKE_MEM_DEFINED		6305700	0					
ANR	6305728	ArgumentList	head		6305700	1					
ANR	6305729	Argument	head		6305700	0					
ANR	6305730	Identifier	head		6305700	0					
ANR	6305731	Argument	sizeof ( Memento_BlkHeader )		6305700	1					
ANR	6305732	SizeofExpression	sizeof ( Memento_BlkHeader )		6305700	0					
ANR	6305733	Sizeof	sizeof		6305700	0					
ANR	6305734	SizeofOperand	Memento_BlkHeader		6305700	1					
ANR	6305735	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( head ) , head -> rawsize + Memento_PostSize )"	420:8:12029:12108	6305700	1	True				
ANR	6305736	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( head ) , head -> rawsize + Memento_PostSize )"		6305700	0					
ANR	6305737	Callee	VALGRIND_MAKE_MEM_DEFINED		6305700	0					
ANR	6305738	Identifier	VALGRIND_MAKE_MEM_DEFINED		6305700	0					
ANR	6305739	ArgumentList	MEMBLK_TOBLK ( head )		6305700	1					
ANR	6305740	Argument	MEMBLK_TOBLK ( head )		6305700	0					
ANR	6305741	CallExpression	MEMBLK_TOBLK ( head )		6305700	0					
ANR	6305742	Callee	MEMBLK_TOBLK		6305700	0					
ANR	6305743	Identifier	MEMBLK_TOBLK		6305700	0					
ANR	6305744	ArgumentList	head		6305700	1					
ANR	6305745	Argument	head		6305700	0					
ANR	6305746	Identifier	head		6305700	0					
ANR	6305747	Argument	head -> rawsize + Memento_PostSize		6305700	1					
ANR	6305748	AdditiveExpression	head -> rawsize + Memento_PostSize		6305700	0		+			
ANR	6305749	PtrMemberAccess	head -> rawsize		6305700	0					
ANR	6305750	Identifier	head		6305700	0					
ANR	6305751	Identifier	rawsize		6305700	1					
ANR	6305752	Identifier	Memento_PostSize		6305700	1					
ANR	6305753	ExpressionStatement	"result = app ( head , arg )"	421:8:12118:12141	6305700	2	True				
ANR	6305754	AssignmentExpression	"result = app ( head , arg )"		6305700	0		=			
ANR	6305755	Identifier	result		6305700	0					
ANR	6305756	CallExpression	"app ( head , arg )"		6305700	1					
ANR	6305757	Callee	app		6305700	0					
ANR	6305758	Identifier	app		6305700	0					
ANR	6305759	ArgumentList	head		6305700	1					
ANR	6305760	Argument	head		6305700	0					
ANR	6305761	Identifier	head		6305700	0					
ANR	6305762	Argument	arg		6305700	1					
ANR	6305763	Identifier	arg		6305700	0					
ANR	6305764	ExpressionStatement	next = head -> next	422:8:12151:12168	6305700	3	True				
ANR	6305765	AssignmentExpression	next = head -> next		6305700	0		=			
ANR	6305766	Identifier	next		6305700	0					
ANR	6305767	PtrMemberAccess	head -> next		6305700	1					
ANR	6305768	Identifier	head		6305700	0					
ANR	6305769	Identifier	next		6305700	1					
ANR	6305770	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( head ) , Memento_PostSize )"	423:8:12178:12244	6305700	4	True				
ANR	6305771	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( head ) , Memento_PostSize )"		6305700	0					
ANR	6305772	Callee	VALGRIND_MAKE_MEM_NOACCESS		6305700	0					
ANR	6305773	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6305700	0					
ANR	6305774	ArgumentList	MEMBLK_POSTPTR ( head )		6305700	1					
ANR	6305775	Argument	MEMBLK_POSTPTR ( head )		6305700	0					
ANR	6305776	CallExpression	MEMBLK_POSTPTR ( head )		6305700	0					
ANR	6305777	Callee	MEMBLK_POSTPTR		6305700	0					
ANR	6305778	Identifier	MEMBLK_POSTPTR		6305700	0					
ANR	6305779	ArgumentList	head		6305700	1					
ANR	6305780	Argument	head		6305700	0					
ANR	6305781	Identifier	head		6305700	0					
ANR	6305782	Argument	Memento_PostSize		6305700	1					
ANR	6305783	Identifier	Memento_PostSize		6305700	0					
ANR	6305784	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( head , sizeof ( Memento_BlkHeader ) )"	424:8:12254:12313	6305700	5	True				
ANR	6305785	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( head , sizeof ( Memento_BlkHeader ) )"		6305700	0					
ANR	6305786	Callee	VALGRIND_MAKE_MEM_NOACCESS		6305700	0					
ANR	6305787	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6305700	0					
ANR	6305788	ArgumentList	head		6305700	1					
ANR	6305789	Argument	head		6305700	0					
ANR	6305790	Identifier	head		6305700	0					
ANR	6305791	Argument	sizeof ( Memento_BlkHeader )		6305700	1					
ANR	6305792	SizeofExpression	sizeof ( Memento_BlkHeader )		6305700	0					
ANR	6305793	Sizeof	sizeof		6305700	0					
ANR	6305794	SizeofOperand	Memento_BlkHeader		6305700	1					
ANR	6305795	IfStatement	if ( result )		6305700	6					
ANR	6305796	Condition	result	425:12:12327:12332	6305700	0	True				
ANR	6305797	Identifier	result		6305700	0					
ANR	6305798	ReturnStatement	return result ;	426:12:12347:12360	6305700	1	True				
ANR	6305799	Identifier	result		6305700	0					
ANR	6305800	ExpressionStatement	head = next	427:8:12370:12381	6305700	7	True				
ANR	6305801	AssignmentExpression	head = next		6305700	0		=			
ANR	6305802	Identifier	head		6305700	0					
ANR	6305803	Identifier	next		6305700	1					
ANR	6305804	ReturnStatement	return 0 ;	429:4:12393:12401	6305700	4	True				
ANR	6305805	PrimaryExpression	0		6305700	0					
ANR	6305806	ReturnType	static int		6305700	1					
ANR	6305807	Identifier	Memento_appBlocks		6305700	2					
ANR	6305808	ParameterList	"Memento_Blocks * blks , int ( * app ) ( Memento_BlkHeader * , void * ) , void * arg"		6305700	3					
ANR	6305809	Parameter	Memento_Blocks * blks	412:18:11770:11789	6305700	0	True				
ANR	6305810	ParameterType	Memento_Blocks *		6305700	0					
ANR	6305811	Identifier	blks		6305700	1					
ANR	6305812	Parameter	"int ( * app ) ( Memento_BlkHeader * , void * )"	412:40:11792:11830	6305700	1	True				
ANR	6305813	ParameterType	"(( Memento_BlkHeader * , void * ) int) *"		6305700	0					
ANR	6305814	Identifier	app		6305700	1					
ANR	6305815	Parameter	void * arg	412:81:11833:11841	6305700	2	True				
ANR	6305816	ParameterType	void *		6305700	0					
ANR	6305817	Identifier	arg		6305700	1					
ANR	6305818	CFGEntryNode	ENTRY		6305700		True				
ANR	6305819	CFGExitNode	EXIT		6305700		True				
ANR	6305820	Symbol	app		6305700						
ANR	6305821	Symbol	next		6305700						
ANR	6305822	Symbol	* head		6305700						
ANR	6305823	Symbol	blks -> head		6305700						
ANR	6305824	Symbol	head -> rawsize		6305700						
ANR	6305825	Symbol	MEMBLK_TOBLK		6305700						
ANR	6305826	Symbol	head		6305700						
ANR	6305827	Symbol	result		6305700						
ANR	6305828	Symbol	* blks		6305700						
ANR	6305829	Symbol	MEMBLK_POSTPTR		6305700						
ANR	6305830	Symbol	arg		6305700						
ANR	6305831	Symbol	head -> next		6305700						
ANR	6305832	Symbol	Memento_PostSize		6305700						
ANR	6305833	Symbol	blks		6305700						
ANR	6305834	Function	Memento_appBlock	432:0:12406:13249							
ANR	6305835	FunctionDef	"Memento_appBlock (Memento_Blocks * blks , int ( * app ) ( Memento_BlkHeader * , void * ) , void * arg , Memento_BlkHeader * b)"		6305834	0					
ANR	6305836	CompoundStatement		434:0:12530:13249	6305834	0					
ANR	6305837	IdentifierDeclStatement	Memento_BlkHeader * head = blks -> head ;	435:4:12536:12572	6305834	0	True				
ANR	6305838	IdentifierDecl	* head = blks -> head		6305834	0					
ANR	6305839	IdentifierDeclType	Memento_BlkHeader *		6305834	0					
ANR	6305840	Identifier	head		6305834	1					
ANR	6305841	AssignmentExpression	* head = blks -> head		6305834	2		=			
ANR	6305842	Identifier	head		6305834	0					
ANR	6305843	PtrMemberAccess	blks -> head		6305834	1					
ANR	6305844	Identifier	blks		6305834	0					
ANR	6305845	Identifier	head		6305834	1					
ANR	6305846	IdentifierDeclStatement	Memento_BlkHeader * next ;	436:4:12578:12601	6305834	1	True				
ANR	6305847	IdentifierDecl	* next		6305834	0					
ANR	6305848	IdentifierDeclType	Memento_BlkHeader *		6305834	0					
ANR	6305849	Identifier	next		6305834	1					
ANR	6305850	IdentifierDeclStatement	int result ;	437:4:12607:12617	6305834	2	True				
ANR	6305851	IdentifierDecl	result		6305834	0					
ANR	6305852	IdentifierDeclType	int		6305834	0					
ANR	6305853	Identifier	result		6305834	1					
ANR	6305854	WhileStatement	while ( head && head != b )		6305834	3					
ANR	6305855	Condition	head && head != b	439:11:12631:12647	6305834	0	True				
ANR	6305856	AndExpression	head && head != b		6305834	0		&&			
ANR	6305857	Identifier	head		6305834	0					
ANR	6305858	EqualityExpression	head != b		6305834	1		!=			
ANR	6305859	Identifier	head		6305834	0					
ANR	6305860	Identifier	b		6305834	1					
ANR	6305861	CompoundStatement		6:30:119:119	6305834	1					
ANR	6305862	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( Memento_BlkHeader ) )"	440:8:12660:12718	6305834	0	True				
ANR	6305863	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( Memento_BlkHeader ) )"		6305834	0					
ANR	6305864	Callee	VALGRIND_MAKE_MEM_DEFINED		6305834	0					
ANR	6305865	Identifier	VALGRIND_MAKE_MEM_DEFINED		6305834	0					
ANR	6305866	ArgumentList	head		6305834	1					
ANR	6305867	Argument	head		6305834	0					
ANR	6305868	Identifier	head		6305834	0					
ANR	6305869	Argument	sizeof ( Memento_BlkHeader )		6305834	1					
ANR	6305870	SizeofExpression	sizeof ( Memento_BlkHeader )		6305834	0					
ANR	6305871	Sizeof	sizeof		6305834	0					
ANR	6305872	SizeofOperand	Memento_BlkHeader		6305834	1					
ANR	6305873	ExpressionStatement	next = head -> next	441:8:12728:12745	6305834	1	True				
ANR	6305874	AssignmentExpression	next = head -> next		6305834	0		=			
ANR	6305875	Identifier	next		6305834	0					
ANR	6305876	PtrMemberAccess	head -> next		6305834	1					
ANR	6305877	Identifier	head		6305834	0					
ANR	6305878	Identifier	next		6305834	1					
ANR	6305879	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( head ) , Memento_PostSize )"	442:8:12755:12821	6305834	2	True				
ANR	6305880	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( head ) , Memento_PostSize )"		6305834	0					
ANR	6305881	Callee	VALGRIND_MAKE_MEM_NOACCESS		6305834	0					
ANR	6305882	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6305834	0					
ANR	6305883	ArgumentList	MEMBLK_POSTPTR ( head )		6305834	1					
ANR	6305884	Argument	MEMBLK_POSTPTR ( head )		6305834	0					
ANR	6305885	CallExpression	MEMBLK_POSTPTR ( head )		6305834	0					
ANR	6305886	Callee	MEMBLK_POSTPTR		6305834	0					
ANR	6305887	Identifier	MEMBLK_POSTPTR		6305834	0					
ANR	6305888	ArgumentList	head		6305834	1					
ANR	6305889	Argument	head		6305834	0					
ANR	6305890	Identifier	head		6305834	0					
ANR	6305891	Argument	Memento_PostSize		6305834	1					
ANR	6305892	Identifier	Memento_PostSize		6305834	0					
ANR	6305893	ExpressionStatement	head = next	443:8:12831:12842	6305834	3	True				
ANR	6305894	AssignmentExpression	head = next		6305834	0		=			
ANR	6305895	Identifier	head		6305834	0					
ANR	6305896	Identifier	next		6305834	1					
ANR	6305897	IfStatement	if ( head == b )		6305834	4					
ANR	6305898	Condition	head == b	445:8:12858:12866	6305834	0	True				
ANR	6305899	EqualityExpression	head == b		6305834	0		==			
ANR	6305900	Identifier	head		6305834	0					
ANR	6305901	Identifier	b		6305834	1					
ANR	6305902	CompoundStatement		12:19:338:338	6305834	1					
ANR	6305903	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( Memento_BlkHeader ) )"	446:8:12879:12937	6305834	0	True				
ANR	6305904	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( head , sizeof ( Memento_BlkHeader ) )"		6305834	0					
ANR	6305905	Callee	VALGRIND_MAKE_MEM_DEFINED		6305834	0					
ANR	6305906	Identifier	VALGRIND_MAKE_MEM_DEFINED		6305834	0					
ANR	6305907	ArgumentList	head		6305834	1					
ANR	6305908	Argument	head		6305834	0					
ANR	6305909	Identifier	head		6305834	0					
ANR	6305910	Argument	sizeof ( Memento_BlkHeader )		6305834	1					
ANR	6305911	SizeofExpression	sizeof ( Memento_BlkHeader )		6305834	0					
ANR	6305912	Sizeof	sizeof		6305834	0					
ANR	6305913	SizeofOperand	Memento_BlkHeader		6305834	1					
ANR	6305914	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( head ) , head -> rawsize + Memento_PostSize )"	447:8:12947:13026	6305834	1	True				
ANR	6305915	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( head ) , head -> rawsize + Memento_PostSize )"		6305834	0					
ANR	6305916	Callee	VALGRIND_MAKE_MEM_DEFINED		6305834	0					
ANR	6305917	Identifier	VALGRIND_MAKE_MEM_DEFINED		6305834	0					
ANR	6305918	ArgumentList	MEMBLK_TOBLK ( head )		6305834	1					
ANR	6305919	Argument	MEMBLK_TOBLK ( head )		6305834	0					
ANR	6305920	CallExpression	MEMBLK_TOBLK ( head )		6305834	0					
ANR	6305921	Callee	MEMBLK_TOBLK		6305834	0					
ANR	6305922	Identifier	MEMBLK_TOBLK		6305834	0					
ANR	6305923	ArgumentList	head		6305834	1					
ANR	6305924	Argument	head		6305834	0					
ANR	6305925	Identifier	head		6305834	0					
ANR	6305926	Argument	head -> rawsize + Memento_PostSize		6305834	1					
ANR	6305927	AdditiveExpression	head -> rawsize + Memento_PostSize		6305834	0		+			
ANR	6305928	PtrMemberAccess	head -> rawsize		6305834	0					
ANR	6305929	Identifier	head		6305834	0					
ANR	6305930	Identifier	rawsize		6305834	1					
ANR	6305931	Identifier	Memento_PostSize		6305834	1					
ANR	6305932	ExpressionStatement	"result = app ( head , arg )"	448:8:13036:13059	6305834	2	True				
ANR	6305933	AssignmentExpression	"result = app ( head , arg )"		6305834	0		=			
ANR	6305934	Identifier	result		6305834	0					
ANR	6305935	CallExpression	"app ( head , arg )"		6305834	1					
ANR	6305936	Callee	app		6305834	0					
ANR	6305937	Identifier	app		6305834	0					
ANR	6305938	ArgumentList	head		6305834	1					
ANR	6305939	Argument	head		6305834	0					
ANR	6305940	Identifier	head		6305834	0					
ANR	6305941	Argument	arg		6305834	1					
ANR	6305942	Identifier	arg		6305834	0					
ANR	6305943	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( head ) , Memento_PostSize )"	449:8:13069:13135	6305834	3	True				
ANR	6305944	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( MEMBLK_POSTPTR ( head ) , Memento_PostSize )"		6305834	0					
ANR	6305945	Callee	VALGRIND_MAKE_MEM_NOACCESS		6305834	0					
ANR	6305946	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6305834	0					
ANR	6305947	ArgumentList	MEMBLK_POSTPTR ( head )		6305834	1					
ANR	6305948	Argument	MEMBLK_POSTPTR ( head )		6305834	0					
ANR	6305949	CallExpression	MEMBLK_POSTPTR ( head )		6305834	0					
ANR	6305950	Callee	MEMBLK_POSTPTR		6305834	0					
ANR	6305951	Identifier	MEMBLK_POSTPTR		6305834	0					
ANR	6305952	ArgumentList	head		6305834	1					
ANR	6305953	Argument	head		6305834	0					
ANR	6305954	Identifier	head		6305834	0					
ANR	6305955	Argument	Memento_PostSize		6305834	1					
ANR	6305956	Identifier	Memento_PostSize		6305834	0					
ANR	6305957	ExpressionStatement	"VALGRIND_MAKE_MEM_NOACCESS ( head , sizeof ( Memento_BlkHeader ) )"	450:8:13145:13204	6305834	4	True				
ANR	6305958	CallExpression	"VALGRIND_MAKE_MEM_NOACCESS ( head , sizeof ( Memento_BlkHeader ) )"		6305834	0					
ANR	6305959	Callee	VALGRIND_MAKE_MEM_NOACCESS		6305834	0					
ANR	6305960	Identifier	VALGRIND_MAKE_MEM_NOACCESS		6305834	0					
ANR	6305961	ArgumentList	head		6305834	1					
ANR	6305962	Argument	head		6305834	0					
ANR	6305963	Identifier	head		6305834	0					
ANR	6305964	Argument	sizeof ( Memento_BlkHeader )		6305834	1					
ANR	6305965	SizeofExpression	sizeof ( Memento_BlkHeader )		6305834	0					
ANR	6305966	Sizeof	sizeof		6305834	0					
ANR	6305967	SizeofOperand	Memento_BlkHeader		6305834	1					
ANR	6305968	ReturnStatement	return result ;	451:8:13214:13227	6305834	5	True				
ANR	6305969	Identifier	result		6305834	0					
ANR	6305970	ReturnStatement	return 0 ;	453:4:13239:13247	6305834	5	True				
ANR	6305971	PrimaryExpression	0		6305834	0					
ANR	6305972	ReturnType	static int		6305834	1					
ANR	6305973	Identifier	Memento_appBlock		6305834	2					
ANR	6305974	ParameterList	"Memento_Blocks * blks , int ( * app ) ( Memento_BlkHeader * , void * ) , void * arg , Memento_BlkHeader * b"		6305834	3					
ANR	6305975	Parameter	Memento_Blocks * blks	433:17:12434:12453	6305834	0	True				
ANR	6305976	ParameterType	Memento_Blocks *		6305834	0					
ANR	6305977	Identifier	blks		6305834	1					
ANR	6305978	Parameter	"int ( * app ) ( Memento_BlkHeader * , void * )"	433:39:12456:12494	6305834	1	True				
ANR	6305979	ParameterType	"(( Memento_BlkHeader * , void * ) int) *"		6305834	0					
ANR	6305980	Identifier	app		6305834	1					
ANR	6305981	Parameter	void * arg	433:80:12497:12505	6305834	2	True				
ANR	6305982	ParameterType	void *		6305834	0					
ANR	6305983	Identifier	arg		6305834	1					
ANR	6305984	Parameter	Memento_BlkHeader * b	433:91:12508:12527	6305834	3	True				
ANR	6305985	ParameterType	Memento_BlkHeader *		6305834	0					
ANR	6305986	Identifier	b		6305834	1					
ANR	6305987	CFGEntryNode	ENTRY		6305834		True				
ANR	6305988	CFGExitNode	EXIT		6305834		True				
ANR	6305989	Symbol	app		6305834						
ANR	6305990	Symbol	next		6305834						
ANR	6305991	Symbol	b		6305834						
ANR	6305992	Symbol	* head		6305834						
ANR	6305993	Symbol	blks -> head		6305834						
ANR	6305994	Symbol	head -> rawsize		6305834						
ANR	6305995	Symbol	MEMBLK_TOBLK		6305834						
ANR	6305996	Symbol	head		6305834						
ANR	6305997	Symbol	result		6305834						
ANR	6305998	Symbol	* blks		6305834						
ANR	6305999	Symbol	MEMBLK_POSTPTR		6305834						
ANR	6306000	Symbol	arg		6305834						
ANR	6306001	Symbol	head -> next		6305834						
ANR	6306002	Symbol	Memento_PostSize		6305834						
ANR	6306003	Symbol	blks		6305834						
ANR	6306004	Function	showBlock	456:0:13252:13472							
ANR	6306005	FunctionDef	"showBlock (Memento_BlkHeader * b , int space)"		6306004	0					
ANR	6306006	CompoundStatement		458:0:13307:13472	6306004	0					
ANR	6306007	ExpressionStatement	"fprintf ( stderr , ""0x%p:(size=%d,num=%d)"" , MEMBLK_TOBLK ( b ) , ( int ) b -> rawsize , b -> sequence )"	459:4:13313:13400	6306004	0	True				
ANR	6306008	CallExpression	"fprintf ( stderr , ""0x%p:(size=%d,num=%d)"" , MEMBLK_TOBLK ( b ) , ( int ) b -> rawsize , b -> sequence )"		6306004	0					
ANR	6306009	Callee	fprintf		6306004	0					
ANR	6306010	Identifier	fprintf		6306004	0					
ANR	6306011	ArgumentList	stderr		6306004	1					
ANR	6306012	Argument	stderr		6306004	0					
ANR	6306013	Identifier	stderr		6306004	0					
ANR	6306014	Argument	"""0x%p:(size=%d,num=%d)"""		6306004	1					
ANR	6306015	PrimaryExpression	"""0x%p:(size=%d,num=%d)"""		6306004	0					
ANR	6306016	Argument	MEMBLK_TOBLK ( b )		6306004	2					
ANR	6306017	CallExpression	MEMBLK_TOBLK ( b )		6306004	0					
ANR	6306018	Callee	MEMBLK_TOBLK		6306004	0					
ANR	6306019	Identifier	MEMBLK_TOBLK		6306004	0					
ANR	6306020	ArgumentList	b		6306004	1					
ANR	6306021	Argument	b		6306004	0					
ANR	6306022	Identifier	b		6306004	0					
ANR	6306023	Argument	( int ) b -> rawsize		6306004	3					
ANR	6306024	CastExpression	( int ) b -> rawsize		6306004	0					
ANR	6306025	CastTarget	int		6306004	0					
ANR	6306026	PtrMemberAccess	b -> rawsize		6306004	1					
ANR	6306027	Identifier	b		6306004	0					
ANR	6306028	Identifier	rawsize		6306004	1					
ANR	6306029	Argument	b -> sequence		6306004	4					
ANR	6306030	PtrMemberAccess	b -> sequence		6306004	0					
ANR	6306031	Identifier	b		6306004	0					
ANR	6306032	Identifier	sequence		6306004	1					
ANR	6306033	IfStatement	if ( b -> label )		6306004	1					
ANR	6306034	Condition	b -> label	460:8:13410:13417	6306004	0	True				
ANR	6306035	PtrMemberAccess	b -> label		6306004	0					
ANR	6306036	Identifier	b		6306004	0					
ANR	6306037	Identifier	label		6306004	1					
ANR	6306038	ExpressionStatement	"fprintf ( stderr , ""%c(%s)"" , space , b -> label )"	461:8:13428:13470	6306004	1	True				
ANR	6306039	CallExpression	"fprintf ( stderr , ""%c(%s)"" , space , b -> label )"		6306004	0					
ANR	6306040	Callee	fprintf		6306004	0					
ANR	6306041	Identifier	fprintf		6306004	0					
ANR	6306042	ArgumentList	stderr		6306004	1					
ANR	6306043	Argument	stderr		6306004	0					
ANR	6306044	Identifier	stderr		6306004	0					
ANR	6306045	Argument	"""%c(%s)"""		6306004	1					
ANR	6306046	PrimaryExpression	"""%c(%s)"""		6306004	0					
ANR	6306047	Argument	space		6306004	2					
ANR	6306048	Identifier	space		6306004	0					
ANR	6306049	Argument	b -> label		6306004	3					
ANR	6306050	PtrMemberAccess	b -> label		6306004	0					
ANR	6306051	Identifier	b		6306004	0					
ANR	6306052	Identifier	label		6306004	1					
ANR	6306053	ReturnType	static void		6306004	1					
ANR	6306054	Identifier	showBlock		6306004	2					
ANR	6306055	ParameterList	"Memento_BlkHeader * b , int space"		6306004	3					
ANR	6306056	Parameter	Memento_BlkHeader * b	457:10:13274:13293	6306004	0	True				
ANR	6306057	ParameterType	Memento_BlkHeader *		6306004	0					
ANR	6306058	Identifier	b		6306004	1					
ANR	6306059	Parameter	int space	457:32:13296:13304	6306004	1	True				
ANR	6306060	ParameterType	int		6306004	0					
ANR	6306061	Identifier	space		6306004	1					
ANR	6306062	CFGEntryNode	ENTRY		6306004		True				
ANR	6306063	CFGExitNode	EXIT		6306004		True				
ANR	6306064	Symbol	b -> rawsize		6306004						
ANR	6306065	Symbol	b		6306004						
ANR	6306066	Symbol	b -> sequence		6306004						
ANR	6306067	Symbol	stderr		6306004						
ANR	6306068	Symbol	* b		6306004						
ANR	6306069	Symbol	space		6306004						
ANR	6306070	Symbol	MEMBLK_TOBLK		6306004						
ANR	6306071	Symbol	b -> label		6306004						
ANR	6306072	Function	blockDisplay	464:0:13475:13769							
ANR	6306073	FunctionDef	"blockDisplay (Memento_BlkHeader * b , int n)"		6306072	0					
ANR	6306074	CompoundStatement		466:0:13529:13769	6306072	0					
ANR	6306075	ExpressionStatement	n ++	467:4:13535:13538	6306072	0	True				
ANR	6306076	PostIncDecOperationExpression	n ++		6306072	0					
ANR	6306077	Identifier	n		6306072	0					
ANR	6306078	IncDec	++		6306072	1					
ANR	6306079	WhileStatement	while ( n > 0 )		6306072	1					
ANR	6306080	Condition	n > 0	468:11:13551:13555	6306072	0	True				
ANR	6306081	RelationalExpression	n > 0		6306072	0		>			
ANR	6306082	Identifier	n		6306072	0					
ANR	6306083	PrimaryExpression	0		6306072	1					
ANR	6306084	CompoundStatement		4:8:38:47	6306072	1					
ANR	6306085	IdentifierDeclStatement	int i = n ;	469:8:13568:13577	6306072	0	True				
ANR	6306086	IdentifierDecl	i = n		6306072	0					
ANR	6306087	IdentifierDeclType	int		6306072	0					
ANR	6306088	Identifier	i		6306072	1					
ANR	6306089	AssignmentExpression	i = n		6306072	2		=			
ANR	6306090	Identifier	n		6306072	0					
ANR	6306091	Identifier	n		6306072	1					
ANR	6306092	IfStatement	if ( i > 32 )		6306072	1					
ANR	6306093	Condition	i > 32	471:12:13592:13597	6306072	0	True				
ANR	6306094	RelationalExpression	i > 32		6306072	0		>			
ANR	6306095	Identifier	i		6306072	0					
ANR	6306096	PrimaryExpression	32		6306072	1					
ANR	6306097	ExpressionStatement	i = 32	472:12:13612:13618	6306072	1	True				
ANR	6306098	AssignmentExpression	i = 32		6306072	0		=			
ANR	6306099	Identifier	i		6306072	0					
ANR	6306100	PrimaryExpression	32		6306072	1					
ANR	6306101	ExpressionStatement	n -= i	473:8:13628:13634	6306072	2	True				
ANR	6306102	AssignmentExpression	n -= i		6306072	0		-=			
ANR	6306103	Identifier	n		6306072	0					
ANR	6306104	Identifier	i		6306072	1					
ANR	6306105	ExpressionStatement	"fprintf ( stderr , ""%s"" , & ""                                "" [ 32 - i ] )"	474:8:13644:13710	6306072	3	True				
ANR	6306106	CallExpression	"fprintf ( stderr , ""%s"" , & ""                                "" [ 32 - i ] )"		6306072	0					
ANR	6306107	Callee	fprintf		6306072	0					
ANR	6306108	Identifier	fprintf		6306072	0					
ANR	6306109	ArgumentList	stderr		6306072	1					
ANR	6306110	Argument	stderr		6306072	0					
ANR	6306111	Identifier	stderr		6306072	0					
ANR	6306112	Argument	"""%s"""		6306072	1					
ANR	6306113	PrimaryExpression	"""%s"""		6306072	0					
ANR	6306114	Argument	"& ""                                "" [ 32 - i ]"		6306072	2					
ANR	6306115	UnaryOperationExpression	"& ""                                "" [ 32 - i ]"		6306072	0					
ANR	6306116	UnaryOperator	&		6306072	0					
ANR	6306117	ArrayIndexing	"""                                "" [ 32 - i ]"		6306072	1					
ANR	6306118	PrimaryExpression	"""                                """		6306072	0					
ANR	6306119	AdditiveExpression	32 - i		6306072	1		-			
ANR	6306120	PrimaryExpression	32		6306072	0					
ANR	6306121	Identifier	i		6306072	1					
ANR	6306122	ExpressionStatement	"showBlock ( b , '\\t' )"	476:4:13722:13740	6306072	2	True				
ANR	6306123	CallExpression	"showBlock ( b , '\\t' )"		6306072	0					
ANR	6306124	Callee	showBlock		6306072	0					
ANR	6306125	Identifier	showBlock		6306072	0					
ANR	6306126	ArgumentList	b		6306072	1					
ANR	6306127	Argument	b		6306072	0					
ANR	6306128	Identifier	b		6306072	0					
ANR	6306129	Argument	'\\t'		6306072	1					
ANR	6306130	PrimaryExpression	'\\t'		6306072	0					
ANR	6306131	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	477:4:13746:13767	6306072	3	True				
ANR	6306132	CallExpression	"fprintf ( stderr , ""\\n"" )"		6306072	0					
ANR	6306133	Callee	fprintf		6306072	0					
ANR	6306134	Identifier	fprintf		6306072	0					
ANR	6306135	ArgumentList	stderr		6306072	1					
ANR	6306136	Argument	stderr		6306072	0					
ANR	6306137	Identifier	stderr		6306072	0					
ANR	6306138	Argument	"""\\n"""		6306072	1					
ANR	6306139	PrimaryExpression	"""\\n"""		6306072	0					
ANR	6306140	ReturnType	static void		6306072	1					
ANR	6306141	Identifier	blockDisplay		6306072	2					
ANR	6306142	ParameterList	"Memento_BlkHeader * b , int n"		6306072	3					
ANR	6306143	Parameter	Memento_BlkHeader * b	465:13:13500:13519	6306072	0	True				
ANR	6306144	ParameterType	Memento_BlkHeader *		6306072	0					
ANR	6306145	Identifier	b		6306072	1					
ANR	6306146	Parameter	int n	465:35:13522:13526	6306072	1	True				
ANR	6306147	ParameterType	int		6306072	0					
ANR	6306148	Identifier	n		6306072	1					
ANR	6306149	CFGEntryNode	ENTRY		6306072		True				
ANR	6306150	CFGExitNode	EXIT		6306072		True				
ANR	6306151	Symbol	b		6306072						
ANR	6306152	Symbol	i		6306072						
ANR	6306153	Symbol	stderr		6306072						
ANR	6306154	Symbol	n		6306072						
ANR	6306155	Function	Memento_listBlock	480:0:13772:13951							
ANR	6306156	FunctionDef	"Memento_listBlock (Memento_BlkHeader * b , void * arg)"		6306155	0					
ANR	6306157	CompoundStatement		482:0:13834:13951	6306155	0					
ANR	6306158	IdentifierDeclStatement	int * counts = ( int * ) arg ;	483:4:13840:13864	6306155	0	True				
ANR	6306159	IdentifierDecl	* counts = ( int * ) arg		6306155	0					
ANR	6306160	IdentifierDeclType	int *		6306155	0					
ANR	6306161	Identifier	counts		6306155	1					
ANR	6306162	AssignmentExpression	* counts = ( int * ) arg		6306155	2		=			
ANR	6306163	Identifier	counts		6306155	0					
ANR	6306164	CastExpression	( int * ) arg		6306155	1					
ANR	6306165	CastTarget	int *		6306155	0					
ANR	6306166	Identifier	arg		6306155	1					
ANR	6306167	ExpressionStatement	"blockDisplay ( b , 0 )"	485:4:13871:13889	6306155	1	True				
ANR	6306168	CallExpression	"blockDisplay ( b , 0 )"		6306155	0					
ANR	6306169	Callee	blockDisplay		6306155	0					
ANR	6306170	Identifier	blockDisplay		6306155	0					
ANR	6306171	ArgumentList	b		6306155	1					
ANR	6306172	Argument	b		6306155	0					
ANR	6306173	Identifier	b		6306155	0					
ANR	6306174	Argument	0		6306155	1					
ANR	6306175	PrimaryExpression	0		6306155	0					
ANR	6306176	ExpressionStatement	counts [ 0 ] ++	486:4:13895:13906	6306155	2	True				
ANR	6306177	PostIncDecOperationExpression	counts [ 0 ] ++		6306155	0					
ANR	6306178	ArrayIndexing	counts [ 0 ]		6306155	0					
ANR	6306179	Identifier	counts		6306155	0					
ANR	6306180	PrimaryExpression	0		6306155	1					
ANR	6306181	IncDec	++		6306155	1					
ANR	6306182	ExpressionStatement	counts [ 1 ] += b -> rawsize	487:4:13912:13935	6306155	3	True				
ANR	6306183	AssignmentExpression	counts [ 1 ] += b -> rawsize		6306155	0		+=			
ANR	6306184	ArrayIndexing	counts [ 1 ]		6306155	0					
ANR	6306185	Identifier	counts		6306155	0					
ANR	6306186	PrimaryExpression	1		6306155	1					
ANR	6306187	PtrMemberAccess	b -> rawsize		6306155	1					
ANR	6306188	Identifier	b		6306155	0					
ANR	6306189	Identifier	rawsize		6306155	1					
ANR	6306190	ReturnStatement	return 0 ;	488:4:13941:13949	6306155	4	True				
ANR	6306191	PrimaryExpression	0		6306155	0					
ANR	6306192	ReturnType	static int		6306155	1					
ANR	6306193	Identifier	Memento_listBlock		6306155	2					
ANR	6306194	ParameterList	"Memento_BlkHeader * b , void * arg"		6306155	3					
ANR	6306195	Parameter	Memento_BlkHeader * b	481:18:13801:13820	6306155	0	True				
ANR	6306196	ParameterType	Memento_BlkHeader *		6306155	0					
ANR	6306197	Identifier	b		6306155	1					
ANR	6306198	Parameter	void * arg	481:40:13823:13831	6306155	1	True				
ANR	6306199	ParameterType	void *		6306155	0					
ANR	6306200	Identifier	arg		6306155	1					
ANR	6306201	CFGEntryNode	ENTRY		6306155		True				
ANR	6306202	CFGExitNode	EXIT		6306155		True				
ANR	6306203	Symbol	b -> rawsize		6306155						
ANR	6306204	Symbol	* counts		6306155						
ANR	6306205	Symbol	b		6306155						
ANR	6306206	Symbol	counts		6306155						
ANR	6306207	Symbol	arg		6306155						
ANR	6306208	Symbol	* b		6306155						
ANR	6306209	Function	doNestedDisplay	491:0:13954:14126							
ANR	6306210	FunctionDef	"doNestedDisplay (Memento_BlkHeader * b , int depth)"		6306209	0					
ANR	6306211	CompoundStatement		493:0:14015:14126	6306209	0					
ANR	6306212	ExpressionStatement	"blockDisplay ( b , depth )"	494:4:14021:14043	6306209	0	True				
ANR	6306213	CallExpression	"blockDisplay ( b , depth )"		6306209	0					
ANR	6306214	Callee	blockDisplay		6306209	0					
ANR	6306215	Identifier	blockDisplay		6306209	0					
ANR	6306216	ArgumentList	b		6306209	1					
ANR	6306217	Argument	b		6306209	0					
ANR	6306218	Identifier	b		6306209	0					
ANR	6306219	Argument	depth		6306209	1					
ANR	6306220	Identifier	depth		6306209	0					
ANR	6306221	ForStatement	for ( b = b -> child ; b ; b = b -> sibling )		6306209	1					
ANR	6306222	ForInit	b = b -> child ;	495:9:14054:14066	6306209	0	True				
ANR	6306223	AssignmentExpression	b = b -> child		6306209	0		=			
ANR	6306224	Identifier	b		6306209	0					
ANR	6306225	PtrMemberAccess	b -> child		6306209	1					
ANR	6306226	Identifier	b		6306209	0					
ANR	6306227	Identifier	child		6306209	1					
ANR	6306228	Condition	b	495:23:14068:14068	6306209	1	True				
ANR	6306229	Identifier	b		6306209	0					
ANR	6306230	AssignmentExpression	b = b -> sibling	495:26:14071:14084	6306209	2	True	=			
ANR	6306231	Identifier	b		6306209	0					
ANR	6306232	PtrMemberAccess	b -> sibling		6306209	1					
ANR	6306233	Identifier	b		6306209	0					
ANR	6306234	Identifier	sibling		6306209	1					
ANR	6306235	ExpressionStatement	"doNestedDisplay ( b , depth + 1 )"	496:8:14095:14124	6306209	3	True				
ANR	6306236	CallExpression	"doNestedDisplay ( b , depth + 1 )"		6306209	0					
ANR	6306237	Callee	doNestedDisplay		6306209	0					
ANR	6306238	Identifier	doNestedDisplay		6306209	0					
ANR	6306239	ArgumentList	b		6306209	1					
ANR	6306240	Argument	b		6306209	0					
ANR	6306241	Identifier	b		6306209	0					
ANR	6306242	Argument	depth + 1		6306209	1					
ANR	6306243	AdditiveExpression	depth + 1		6306209	0		+			
ANR	6306244	Identifier	depth		6306209	0					
ANR	6306245	PrimaryExpression	1		6306209	1					
ANR	6306246	ReturnType	static void		6306209	1					
ANR	6306247	Identifier	doNestedDisplay		6306209	2					
ANR	6306248	ParameterList	"Memento_BlkHeader * b , int depth"		6306209	3					
ANR	6306249	Parameter	Memento_BlkHeader * b	492:16:13982:14001	6306209	0	True				
ANR	6306250	ParameterType	Memento_BlkHeader *		6306209	0					
ANR	6306251	Identifier	b		6306209	1					
ANR	6306252	Parameter	int depth	492:38:14004:14012	6306209	1	True				
ANR	6306253	ParameterType	int		6306209	0					
ANR	6306254	Identifier	depth		6306209	1					
ANR	6306255	CFGEntryNode	ENTRY		6306209		True				
ANR	6306256	CFGExitNode	EXIT		6306209		True				
ANR	6306257	Symbol	b		6306209						
ANR	6306258	Symbol	depth		6306209						
ANR	6306259	Symbol	b -> child		6306209						
ANR	6306260	Symbol	b -> sibling		6306209						
ANR	6306261	Symbol	* b		6306209						
ANR	6306262	Function	ptrcmp	499:0:14129:14289							
ANR	6306263	FunctionDef	"ptrcmp (const void * a_ , const void * b_)"		6306262	0					
ANR	6306264	CompoundStatement		501:0:14179:14289	6306262	0					
ANR	6306265	IdentifierDeclStatement	const char * * a = ( const char * * ) a_ ;	502:4:14185:14219	6306262	0	True				
ANR	6306266	IdentifierDecl	* * a = ( const char * * ) a_		6306262	0					
ANR	6306267	IdentifierDeclType	const char * *		6306262	0					
ANR	6306268	Identifier	a		6306262	1					
ANR	6306269	AssignmentExpression	* * a = ( const char * * ) a_		6306262	2		=			
ANR	6306270	Identifier	a		6306262	0					
ANR	6306271	CastExpression	( const char * * ) a_		6306262	1					
ANR	6306272	CastTarget	const char * *		6306262	0					
ANR	6306273	Identifier	a_		6306262	1					
ANR	6306274	IdentifierDeclStatement	const char * * b = ( const char * * ) b_ ;	503:4:14225:14259	6306262	1	True				
ANR	6306275	IdentifierDecl	* * b = ( const char * * ) b_		6306262	0					
ANR	6306276	IdentifierDeclType	const char * *		6306262	0					
ANR	6306277	Identifier	b		6306262	1					
ANR	6306278	AssignmentExpression	* * b = ( const char * * ) b_		6306262	2		=			
ANR	6306279	Identifier	b		6306262	0					
ANR	6306280	CastExpression	( const char * * ) b_		6306262	1					
ANR	6306281	CastTarget	const char * *		6306262	0					
ANR	6306282	Identifier	b_		6306262	1					
ANR	6306283	ReturnStatement	return ( int ) ( * a - * b ) ;	505:4:14266:14287	6306262	2	True				
ANR	6306284	CastExpression	( int ) ( * a - * b )		6306262	0					
ANR	6306285	CastTarget	int		6306262	0					
ANR	6306286	AdditiveExpression	* a - * b		6306262	1		-			
ANR	6306287	UnaryOperationExpression	* a		6306262	0					
ANR	6306288	UnaryOperator	*		6306262	0					
ANR	6306289	Identifier	a		6306262	1					
ANR	6306290	UnaryOperationExpression	* b		6306262	1					
ANR	6306291	UnaryOperator	*		6306262	0					
ANR	6306292	Identifier	b		6306262	1					
ANR	6306293	ReturnType	static int		6306262	1					
ANR	6306294	Identifier	ptrcmp		6306262	2					
ANR	6306295	ParameterList	"const void * a_ , const void * b_"		6306262	3					
ANR	6306296	Parameter	const void * a_	500:7:14147:14160	6306262	0	True				
ANR	6306297	ParameterType	const void *		6306262	0					
ANR	6306298	Identifier	a_		6306262	1					
ANR	6306299	Parameter	const void * b_	500:23:14163:14176	6306262	1	True				
ANR	6306300	ParameterType	const void *		6306262	0					
ANR	6306301	Identifier	b_		6306262	1					
ANR	6306302	CFGEntryNode	ENTRY		6306262		True				
ANR	6306303	CFGExitNode	EXIT		6306262		True				
ANR	6306304	Symbol	a		6306262						
ANR	6306305	Symbol	b		6306262						
ANR	6306306	Symbol	* a		6306262						
ANR	6306307	Symbol	* b		6306262						
ANR	6306308	Symbol	b_		6306262						
ANR	6306309	Symbol	a_		6306262						
ANR	6306310	Function	Memento_listBlocksNested	508:0:14292:17169							
ANR	6306311	FunctionDef	Memento_listBlocksNested ()		6306310	0					
ANR	6306312	CompoundStatement		510:0:14334:17169	6306310	0					
ANR	6306313	IdentifierDeclStatement	"int count , size , i ;"	511:4:14340:14358	6306310	0	True				
ANR	6306314	IdentifierDecl	count		6306310	0					
ANR	6306315	IdentifierDeclType	int		6306310	0					
ANR	6306316	Identifier	count		6306310	1					
ANR	6306317	IdentifierDecl	size		6306310	1					
ANR	6306318	IdentifierDeclType	int		6306310	0					
ANR	6306319	Identifier	size		6306310	1					
ANR	6306320	IdentifierDecl	i		6306310	2					
ANR	6306321	IdentifierDeclType	int		6306310	0					
ANR	6306322	Identifier	i		6306310	1					
ANR	6306323	IdentifierDeclStatement	Memento_BlkHeader * b ;	512:4:14364:14384	6306310	1	True				
ANR	6306324	IdentifierDecl	* b		6306310	0					
ANR	6306325	IdentifierDeclType	Memento_BlkHeader *		6306310	0					
ANR	6306326	Identifier	b		6306310	1					
ANR	6306327	IdentifierDeclStatement	"void * * blocks , * minptr , * maxptr ;"	513:4:14390:14421	6306310	2	True				
ANR	6306328	IdentifierDecl	* * blocks		6306310	0					
ANR	6306329	IdentifierDeclType	void * *		6306310	0					
ANR	6306330	Identifier	blocks		6306310	1					
ANR	6306331	IdentifierDecl	* minptr		6306310	1					
ANR	6306332	IdentifierDeclType	void *		6306310	0					
ANR	6306333	Identifier	minptr		6306310	1					
ANR	6306334	IdentifierDecl	* maxptr		6306310	2					
ANR	6306335	IdentifierDeclType	void *		6306310	0					
ANR	6306336	Identifier	maxptr		6306310	1					
ANR	6306337	IdentifierDeclStatement	long mask ;	514:4:14427:14436	6306310	3	True				
ANR	6306338	IdentifierDecl	mask		6306310	0					
ANR	6306339	IdentifierDeclType	long		6306310	0					
ANR	6306340	Identifier	mask		6306310	1					
ANR	6306341	ExpressionStatement	count = 0	517:4:14470:14479	6306310	4	True				
ANR	6306342	AssignmentExpression	count = 0		6306310	0		=			
ANR	6306343	Identifier	count		6306310	0					
ANR	6306344	PrimaryExpression	0		6306310	1					
ANR	6306345	ExpressionStatement	size = 0	518:4:14485:14493	6306310	5	True				
ANR	6306346	AssignmentExpression	size = 0		6306310	0		=			
ANR	6306347	Identifier	size		6306310	0					
ANR	6306348	PrimaryExpression	0		6306310	1					
ANR	6306349	ForStatement	for ( b = globals . used . head ; b ; b = b -> next )		6306310	6					
ANR	6306350	ForInit	b = globals . used . head ;	519:9:14504:14525	6306310	0	True				
ANR	6306351	AssignmentExpression	b = globals . used . head		6306310	0		=			
ANR	6306352	Identifier	b		6306310	0					
ANR	6306353	MemberAccess	globals . used . head		6306310	1					
ANR	6306354	MemberAccess	globals . used		6306310	0					
ANR	6306355	Identifier	globals		6306310	0					
ANR	6306356	Identifier	used		6306310	1					
ANR	6306357	Identifier	head		6306310	1					
ANR	6306358	Condition	b	519:32:14527:14527	6306310	1	True				
ANR	6306359	Identifier	b		6306310	0					
ANR	6306360	AssignmentExpression	b = b -> next	519:35:14530:14540	6306310	2	True	=			
ANR	6306361	Identifier	b		6306310	0					
ANR	6306362	PtrMemberAccess	b -> next		6306310	1					
ANR	6306363	Identifier	b		6306310	0					
ANR	6306364	Identifier	next		6306310	1					
ANR	6306365	CompoundStatement		10:48:208:208	6306310	3					
ANR	6306366	ExpressionStatement	size += b -> rawsize	520:8:14553:14571	6306310	0	True				
ANR	6306367	AssignmentExpression	size += b -> rawsize		6306310	0		+=			
ANR	6306368	Identifier	size		6306310	0					
ANR	6306369	PtrMemberAccess	b -> rawsize		6306310	1					
ANR	6306370	Identifier	b		6306310	0					
ANR	6306371	Identifier	rawsize		6306310	1					
ANR	6306372	ExpressionStatement	count ++	521:8:14581:14588	6306310	1	True				
ANR	6306373	PostIncDecOperationExpression	count ++		6306310	0					
ANR	6306374	Identifier	count		6306310	0					
ANR	6306375	IncDec	++		6306310	1					
ANR	6306376	ExpressionStatement	blocks = MEMENTO_UNDERLYING_MALLOC ( sizeof ( void * ) * count )	525:4:14631:14689	6306310	7	True				
ANR	6306377	AssignmentExpression	blocks = MEMENTO_UNDERLYING_MALLOC ( sizeof ( void * ) * count )		6306310	0		=			
ANR	6306378	Identifier	blocks		6306310	0					
ANR	6306379	CallExpression	MEMENTO_UNDERLYING_MALLOC ( sizeof ( void * ) * count )		6306310	1					
ANR	6306380	Callee	MEMENTO_UNDERLYING_MALLOC		6306310	0					
ANR	6306381	Identifier	MEMENTO_UNDERLYING_MALLOC		6306310	0					
ANR	6306382	ArgumentList	sizeof ( void * ) * count		6306310	1					
ANR	6306383	Argument	sizeof ( void * ) * count		6306310	0					
ANR	6306384	MultiplicativeExpression	sizeof ( void * ) * count		6306310	0		*			
ANR	6306385	SizeofExpression	sizeof ( void * )		6306310	0					
ANR	6306386	Sizeof	sizeof		6306310	0					
ANR	6306387	SizeofOperand	void *		6306310	1					
ANR	6306388	Identifier	count		6306310	1					
ANR	6306389	IfStatement	if ( blocks == NULL )		6306310	8					
ANR	6306390	Condition	blocks == NULL	526:8:14699:14712	6306310	0	True				
ANR	6306391	EqualityExpression	blocks == NULL		6306310	0		==			
ANR	6306392	Identifier	blocks		6306310	0					
ANR	6306393	Identifier	NULL		6306310	1					
ANR	6306394	ReturnStatement	return 1 ;	527:8:14723:14731	6306310	1	True				
ANR	6306395	PrimaryExpression	1		6306310	0					
ANR	6306396	ExpressionStatement	b = globals . used . head	530:4:14772:14793	6306310	9	True				
ANR	6306397	AssignmentExpression	b = globals . used . head		6306310	0		=			
ANR	6306398	Identifier	b		6306310	0					
ANR	6306399	MemberAccess	globals . used . head		6306310	1					
ANR	6306400	MemberAccess	globals . used		6306310	0					
ANR	6306401	Identifier	globals		6306310	0					
ANR	6306402	Identifier	used		6306310	1					
ANR	6306403	Identifier	head		6306310	1					
ANR	6306404	ExpressionStatement	minptr = maxptr = MEMBLK_TOBLK ( b )	531:4:14799:14832	6306310	10	True				
ANR	6306405	AssignmentExpression	minptr = maxptr = MEMBLK_TOBLK ( b )		6306310	0		=			
ANR	6306406	Identifier	minptr		6306310	0					
ANR	6306407	AssignmentExpression	maxptr = MEMBLK_TOBLK ( b )		6306310	1		=			
ANR	6306408	Identifier	maxptr		6306310	0					
ANR	6306409	CallExpression	MEMBLK_TOBLK ( b )		6306310	1					
ANR	6306410	Callee	MEMBLK_TOBLK		6306310	0					
ANR	6306411	Identifier	MEMBLK_TOBLK		6306310	0					
ANR	6306412	ArgumentList	b		6306310	1					
ANR	6306413	Argument	b		6306310	0					
ANR	6306414	Identifier	b		6306310	0					
ANR	6306415	ExpressionStatement	mask = ( long ) minptr	532:4:14838:14857	6306310	11	True				
ANR	6306416	AssignmentExpression	mask = ( long ) minptr		6306310	0		=			
ANR	6306417	Identifier	mask		6306310	0					
ANR	6306418	CastExpression	( long ) minptr		6306310	1					
ANR	6306419	CastTarget	long		6306310	0					
ANR	6306420	Identifier	minptr		6306310	1					
ANR	6306421	ForStatement	"for ( i = 0 ; b ; b = b -> next , i ++ )"		6306310	12					
ANR	6306422	ForInit	i = 0 ;	533:9:14868:14873	6306310	0	True				
ANR	6306423	AssignmentExpression	i = 0		6306310	0		=			
ANR	6306424	Identifier	i		6306310	0					
ANR	6306425	PrimaryExpression	0		6306310	1					
ANR	6306426	Condition	b	533:16:14875:14875	6306310	1	True				
ANR	6306427	Identifier	b		6306310	0					
ANR	6306428	Expression	"b = b -> next , i ++"	533:19:14878:14893	6306310	2	True				
ANR	6306429	AssignmentExpression	b = b -> next		6306310	0		=			
ANR	6306430	Identifier	b		6306310	0					
ANR	6306431	PtrMemberAccess	b -> next		6306310	1					
ANR	6306432	Identifier	b		6306310	0					
ANR	6306433	Identifier	next		6306310	1					
ANR	6306434	PostIncDecOperationExpression	i ++		6306310	1					
ANR	6306435	Identifier	i		6306310	0					
ANR	6306436	IncDec	++		6306310	1					
ANR	6306437	CompoundStatement		25:8:571:596	6306310	3					
ANR	6306438	IdentifierDeclStatement	void * p = MEMBLK_TOBLK ( b ) ;	534:8:14906:14931	6306310	0	True				
ANR	6306439	IdentifierDecl	* p = MEMBLK_TOBLK ( b )		6306310	0					
ANR	6306440	IdentifierDeclType	void *		6306310	0					
ANR	6306441	Identifier	p		6306310	1					
ANR	6306442	AssignmentExpression	* p = MEMBLK_TOBLK ( b )		6306310	2		=			
ANR	6306443	Identifier	p		6306310	0					
ANR	6306444	CallExpression	MEMBLK_TOBLK ( b )		6306310	1					
ANR	6306445	Callee	MEMBLK_TOBLK		6306310	0					
ANR	6306446	Identifier	MEMBLK_TOBLK		6306310	0					
ANR	6306447	ArgumentList	b		6306310	1					
ANR	6306448	Argument	b		6306310	0					
ANR	6306449	Identifier	b		6306310	0					
ANR	6306450	ExpressionStatement	mask &= ( long ) p	536:8:14942:14957	6306310	1	True				
ANR	6306451	AssignmentExpression	mask &= ( long ) p		6306310	0		&=			
ANR	6306452	Identifier	mask		6306310	0					
ANR	6306453	CastExpression	( long ) p		6306310	1					
ANR	6306454	CastTarget	long		6306310	0					
ANR	6306455	Identifier	p		6306310	1					
ANR	6306456	IfStatement	if ( p < minptr )		6306310	2					
ANR	6306457	Condition	p < minptr	537:12:14971:14980	6306310	0	True				
ANR	6306458	RelationalExpression	p < minptr		6306310	0		<			
ANR	6306459	Identifier	p		6306310	0					
ANR	6306460	Identifier	minptr		6306310	1					
ANR	6306461	ExpressionStatement	minptr = p	538:12:14995:15005	6306310	1	True				
ANR	6306462	AssignmentExpression	minptr = p		6306310	0		=			
ANR	6306463	Identifier	minptr		6306310	0					
ANR	6306464	Identifier	p		6306310	1					
ANR	6306465	IfStatement	if ( p > maxptr )		6306310	3					
ANR	6306466	Condition	p > maxptr	539:12:15019:15028	6306310	0	True				
ANR	6306467	RelationalExpression	p > maxptr		6306310	0		>			
ANR	6306468	Identifier	p		6306310	0					
ANR	6306469	Identifier	maxptr		6306310	1					
ANR	6306470	ExpressionStatement	maxptr = p	540:12:15043:15053	6306310	1	True				
ANR	6306471	AssignmentExpression	maxptr = p		6306310	0		=			
ANR	6306472	Identifier	maxptr		6306310	0					
ANR	6306473	Identifier	p		6306310	1					
ANR	6306474	ExpressionStatement	blocks [ i ] = p	541:8:15063:15076	6306310	4	True				
ANR	6306475	AssignmentExpression	blocks [ i ] = p		6306310	0		=			
ANR	6306476	ArrayIndexing	blocks [ i ]		6306310	0					
ANR	6306477	Identifier	blocks		6306310	0					
ANR	6306478	Identifier	i		6306310	1					
ANR	6306479	Identifier	p		6306310	1					
ANR	6306480	ExpressionStatement	b -> flags &= ~Memento_Flag_HasParent	542:8:15086:15121	6306310	5	True				
ANR	6306481	AssignmentExpression	b -> flags &= ~Memento_Flag_HasParent		6306310	0		&=			
ANR	6306482	PtrMemberAccess	b -> flags		6306310	0					
ANR	6306483	Identifier	b		6306310	0					
ANR	6306484	Identifier	flags		6306310	1					
ANR	6306485	Identifier	~Memento_Flag_HasParent		6306310	1					
ANR	6306486	ExpressionStatement	b -> child = NULL	543:8:15131:15146	6306310	6	True				
ANR	6306487	AssignmentExpression	b -> child = NULL		6306310	0		=			
ANR	6306488	PtrMemberAccess	b -> child		6306310	0					
ANR	6306489	Identifier	b		6306310	0					
ANR	6306490	Identifier	child		6306310	1					
ANR	6306491	Identifier	NULL		6306310	1					
ANR	6306492	ExpressionStatement	b -> sibling = NULL	544:8:15156:15173	6306310	7	True				
ANR	6306493	AssignmentExpression	b -> sibling = NULL		6306310	0		=			
ANR	6306494	PtrMemberAccess	b -> sibling		6306310	0					
ANR	6306495	Identifier	b		6306310	0					
ANR	6306496	Identifier	sibling		6306310	1					
ANR	6306497	Identifier	NULL		6306310	1					
ANR	6306498	ExpressionStatement	b -> parent = NULL	545:8:15183:15199	6306310	8	True				
ANR	6306499	AssignmentExpression	b -> parent = NULL		6306310	0		=			
ANR	6306500	PtrMemberAccess	b -> parent		6306310	0					
ANR	6306501	Identifier	b		6306310	0					
ANR	6306502	Identifier	parent		6306310	1					
ANR	6306503	Identifier	NULL		6306310	1					
ANR	6306504	ExpressionStatement	"qsort ( blocks , count , sizeof ( void * ) , ptrcmp )"	547:4:15211:15255	6306310	13	True				
ANR	6306505	CallExpression	"qsort ( blocks , count , sizeof ( void * ) , ptrcmp )"		6306310	0					
ANR	6306506	Callee	qsort		6306310	0					
ANR	6306507	Identifier	qsort		6306310	0					
ANR	6306508	ArgumentList	blocks		6306310	1					
ANR	6306509	Argument	blocks		6306310	0					
ANR	6306510	Identifier	blocks		6306310	0					
ANR	6306511	Argument	count		6306310	1					
ANR	6306512	Identifier	count		6306310	0					
ANR	6306513	Argument	sizeof ( void * )		6306310	2					
ANR	6306514	SizeofExpression	sizeof ( void * )		6306310	0					
ANR	6306515	Sizeof	sizeof		6306310	0					
ANR	6306516	SizeofOperand	void *		6306310	1					
ANR	6306517	Argument	ptrcmp		6306310	3					
ANR	6306518	Identifier	ptrcmp		6306310	0					
ANR	6306519	ForStatement	for ( b = globals . used . head ; b ; b = b -> next )		6306310	14					
ANR	6306520	ForInit	b = globals . used . head ;	550:9:15297:15318	6306310	0	True				
ANR	6306521	AssignmentExpression	b = globals . used . head		6306310	0		=			
ANR	6306522	Identifier	b		6306310	0					
ANR	6306523	MemberAccess	globals . used . head		6306310	1					
ANR	6306524	MemberAccess	globals . used		6306310	0					
ANR	6306525	Identifier	globals		6306310	0					
ANR	6306526	Identifier	used		6306310	1					
ANR	6306527	Identifier	head		6306310	1					
ANR	6306528	Condition	b	550:32:15320:15320	6306310	1	True				
ANR	6306529	Identifier	b		6306310	0					
ANR	6306530	AssignmentExpression	b = b -> next	550:35:15323:15333	6306310	2	True	=			
ANR	6306531	Identifier	b		6306310	0					
ANR	6306532	PtrMemberAccess	b -> next		6306310	1					
ANR	6306533	Identifier	b		6306310	0					
ANR	6306534	Identifier	next		6306310	1					
ANR	6306535	CompoundStatement		43:8:1046:1121	6306310	3					
ANR	6306536	IdentifierDeclStatement	char * p = MEMBLK_TOBLK ( b ) ;	551:8:15346:15371	6306310	0	True				
ANR	6306537	IdentifierDecl	* p = MEMBLK_TOBLK ( b )		6306310	0					
ANR	6306538	IdentifierDeclType	char *		6306310	0					
ANR	6306539	Identifier	p		6306310	1					
ANR	6306540	AssignmentExpression	* p = MEMBLK_TOBLK ( b )		6306310	2		=			
ANR	6306541	Identifier	p		6306310	0					
ANR	6306542	CallExpression	MEMBLK_TOBLK ( b )		6306310	1					
ANR	6306543	Callee	MEMBLK_TOBLK		6306310	0					
ANR	6306544	Identifier	MEMBLK_TOBLK		6306310	0					
ANR	6306545	ArgumentList	b		6306310	1					
ANR	6306546	Argument	b		6306310	0					
ANR	6306547	Identifier	b		6306310	0					
ANR	6306548	IdentifierDeclStatement	int end = ( b -> rawsize < MEMENTO_PTRSEARCH ? b -> rawsize : MEMENTO_PTRSEARCH ) ;	552:8:15381:15456	6306310	1	True				
ANR	6306549	IdentifierDecl	end = ( b -> rawsize < MEMENTO_PTRSEARCH ? b -> rawsize : MEMENTO_PTRSEARCH )		6306310	0					
ANR	6306550	IdentifierDeclType	int		6306310	0					
ANR	6306551	Identifier	end		6306310	1					
ANR	6306552	AssignmentExpression	end = ( b -> rawsize < MEMENTO_PTRSEARCH ? b -> rawsize : MEMENTO_PTRSEARCH )		6306310	2		=			
ANR	6306553	Identifier	end		6306310	0					
ANR	6306554	ConditionalExpression	b -> rawsize < MEMENTO_PTRSEARCH ? b -> rawsize : MEMENTO_PTRSEARCH		6306310	1					
ANR	6306555	Condition	b -> rawsize < MEMENTO_PTRSEARCH		6306310	0					
ANR	6306556	RelationalExpression	b -> rawsize < MEMENTO_PTRSEARCH		6306310	0		<			
ANR	6306557	PtrMemberAccess	b -> rawsize		6306310	0					
ANR	6306558	Identifier	b		6306310	0					
ANR	6306559	Identifier	rawsize		6306310	1					
ANR	6306560	Identifier	MEMENTO_PTRSEARCH		6306310	1					
ANR	6306561	PtrMemberAccess	b -> rawsize		6306310	1					
ANR	6306562	Identifier	b		6306310	0					
ANR	6306563	Identifier	rawsize		6306310	1					
ANR	6306564	Identifier	MEMENTO_PTRSEARCH		6306310	2					
ANR	6306565	ForStatement	for ( i = MEMENTO_SEARCH_SKIP ; i < end ; i += sizeof ( void * ) )		6306310	2					
ANR	6306566	ForInit	i = MEMENTO_SEARCH_SKIP ;	554:13:15472:15495	6306310	0	True				
ANR	6306567	AssignmentExpression	i = MEMENTO_SEARCH_SKIP		6306310	0		=			
ANR	6306568	Identifier	i		6306310	0					
ANR	6306569	Identifier	MEMENTO_SEARCH_SKIP		6306310	1					
ANR	6306570	Condition	i < end	554:38:15497:15503	6306310	1	True				
ANR	6306571	RelationalExpression	i < end		6306310	0		<			
ANR	6306572	Identifier	i		6306310	0					
ANR	6306573	Identifier	end		6306310	1					
ANR	6306574	AssignmentExpression	i += sizeof ( void * )	554:47:15506:15524	6306310	2	True	+=			
ANR	6306575	Identifier	i		6306310	0					
ANR	6306576	SizeofExpression	sizeof ( void * )		6306310	1					
ANR	6306577	Sizeof	sizeof		6306310	0					
ANR	6306578	SizeofOperand	void *		6306310	1					
ANR	6306579	CompoundStatement		47:12:1247:1255	6306310	3					
ANR	6306580	IdentifierDeclStatement	void * q = * ( void * * ) ( & p [ i ] ) ;	555:12:15541:15568	6306310	0	True				
ANR	6306581	IdentifierDecl	* q = * ( void * * ) ( & p [ i ] )		6306310	0					
ANR	6306582	IdentifierDeclType	void *		6306310	0					
ANR	6306583	Identifier	q		6306310	1					
ANR	6306584	AssignmentExpression	* q = * ( void * * ) ( & p [ i ] )		6306310	2		=			
ANR	6306585	Identifier	q		6306310	0					
ANR	6306586	UnaryOperationExpression	* ( void * * ) ( & p [ i ] )		6306310	1					
ANR	6306587	UnaryOperator	*		6306310	0					
ANR	6306588	CastExpression	( void * * ) ( & p [ i ] )		6306310	1					
ANR	6306589	CastTarget	void * *		6306310	0					
ANR	6306590	UnaryOperationExpression	& p [ i ]		6306310	1					
ANR	6306591	UnaryOperator	&		6306310	0					
ANR	6306592	ArrayIndexing	p [ i ]		6306310	1					
ANR	6306593	Identifier	p		6306310	0					
ANR	6306594	Identifier	i		6306310	1					
ANR	6306595	IdentifierDeclStatement	void * * r ;	556:12:15582:15590	6306310	1	True				
ANR	6306596	IdentifierDecl	* * r		6306310	0					
ANR	6306597	IdentifierDeclType	void * *		6306310	0					
ANR	6306598	Identifier	r		6306310	1					
ANR	6306599	IfStatement	if ( ( mask & ( int ) q ) != mask || q < minptr || q > maxptr )		6306310	2					
ANR	6306600	Condition	( mask & ( int ) q ) != mask || q < minptr || q > maxptr	559:16:15656:15706	6306310	0	True				
ANR	6306601	OrExpression	( mask & ( int ) q ) != mask || q < minptr || q > maxptr		6306310	0		||			
ANR	6306602	EqualityExpression	( mask & ( int ) q ) != mask		6306310	0		!=			
ANR	6306603	BitAndExpression	mask & ( int ) q		6306310	0		&			
ANR	6306604	Identifier	mask		6306310	0					
ANR	6306605	CastExpression	( int ) q		6306310	1					
ANR	6306606	CastTarget	int		6306310	0					
ANR	6306607	Identifier	q		6306310	1					
ANR	6306608	Identifier	mask		6306310	1					
ANR	6306609	OrExpression	q < minptr || q > maxptr		6306310	1		||			
ANR	6306610	RelationalExpression	q < minptr		6306310	0		<			
ANR	6306611	Identifier	q		6306310	0					
ANR	6306612	Identifier	minptr		6306310	1					
ANR	6306613	RelationalExpression	q > maxptr		6306310	1		>			
ANR	6306614	Identifier	q		6306310	0					
ANR	6306615	Identifier	maxptr		6306310	1					
ANR	6306616	ContinueStatement	continue ;	560:16:15725:15733	6306310	1	True				
ANR	6306617	ExpressionStatement	"r = bsearch ( & q , blocks , count , sizeof ( void * ) , ptrcmp )"	563:12:15785:15839	6306310	3	True				
ANR	6306618	AssignmentExpression	"r = bsearch ( & q , blocks , count , sizeof ( void * ) , ptrcmp )"		6306310	0		=			
ANR	6306619	Identifier	r		6306310	0					
ANR	6306620	CallExpression	"bsearch ( & q , blocks , count , sizeof ( void * ) , ptrcmp )"		6306310	1					
ANR	6306621	Callee	bsearch		6306310	0					
ANR	6306622	Identifier	bsearch		6306310	0					
ANR	6306623	ArgumentList	& q		6306310	1					
ANR	6306624	Argument	& q		6306310	0					
ANR	6306625	UnaryOperationExpression	& q		6306310	0					
ANR	6306626	UnaryOperator	&		6306310	0					
ANR	6306627	Identifier	q		6306310	1					
ANR	6306628	Argument	blocks		6306310	1					
ANR	6306629	Identifier	blocks		6306310	0					
ANR	6306630	Argument	count		6306310	2					
ANR	6306631	Identifier	count		6306310	0					
ANR	6306632	Argument	sizeof ( void * )		6306310	3					
ANR	6306633	SizeofExpression	sizeof ( void * )		6306310	0					
ANR	6306634	Sizeof	sizeof		6306310	0					
ANR	6306635	SizeofOperand	void *		6306310	1					
ANR	6306636	Argument	ptrcmp		6306310	4					
ANR	6306637	Identifier	ptrcmp		6306310	0					
ANR	6306638	IfStatement	if ( r )		6306310	4					
ANR	6306639	Condition	r	564:16:15857:15857	6306310	0	True				
ANR	6306640	Identifier	r		6306310	0					
ANR	6306641	CompoundStatement		58:16:1640:1665	6306310	1					
ANR	6306642	IdentifierDeclStatement	Memento_BlkHeader * child = MEMBLK_FROMBLK ( * r ) ;	566:16:15912:15957	6306310	0	True				
ANR	6306643	IdentifierDecl	* child = MEMBLK_FROMBLK ( * r )		6306310	0					
ANR	6306644	IdentifierDeclType	Memento_BlkHeader *		6306310	0					
ANR	6306645	Identifier	child		6306310	1					
ANR	6306646	AssignmentExpression	* child = MEMBLK_FROMBLK ( * r )		6306310	2		=			
ANR	6306647	Identifier	child		6306310	0					
ANR	6306648	CallExpression	MEMBLK_FROMBLK ( * r )		6306310	1					
ANR	6306649	Callee	MEMBLK_FROMBLK		6306310	0					
ANR	6306650	Identifier	MEMBLK_FROMBLK		6306310	0					
ANR	6306651	ArgumentList	* r		6306310	1					
ANR	6306652	Argument	* r		6306310	0					
ANR	6306653	UnaryOperationExpression	* r		6306310	0					
ANR	6306654	UnaryOperator	*		6306310	0					
ANR	6306655	Identifier	r		6306310	1					
ANR	6306656	IdentifierDeclStatement	Memento_BlkHeader * parent ;	567:16:15975:16000	6306310	1	True				
ANR	6306657	IdentifierDecl	* parent		6306310	0					
ANR	6306658	IdentifierDeclType	Memento_BlkHeader *		6306310	0					
ANR	6306659	Identifier	parent		6306310	1					
ANR	6306660	IfStatement	if ( child -> parent != NULL )		6306310	2					
ANR	6306661	Condition	child -> parent != NULL	571:20:16146:16166	6306310	0	True				
ANR	6306662	EqualityExpression	child -> parent != NULL		6306310	0		!=			
ANR	6306663	PtrMemberAccess	child -> parent		6306310	0					
ANR	6306664	Identifier	child		6306310	0					
ANR	6306665	Identifier	parent		6306310	1					
ANR	6306666	Identifier	NULL		6306310	1					
ANR	6306667	ContinueStatement	continue ;	572:20:16189:16197	6306310	1	True				
ANR	6306668	IfStatement	if ( child -> flags & Memento_Flag_HasParent )		6306310	3					
ANR	6306669	Condition	child -> flags & Memento_Flag_HasParent	573:20:16219:16255	6306310	0	True				
ANR	6306670	BitAndExpression	child -> flags & Memento_Flag_HasParent		6306310	0		&			
ANR	6306671	PtrMemberAccess	child -> flags		6306310	0					
ANR	6306672	Identifier	child		6306310	0					
ANR	6306673	Identifier	flags		6306310	1					
ANR	6306674	Identifier	Memento_Flag_HasParent		6306310	1					
ANR	6306675	ContinueStatement	continue ;	574:20:16278:16286	6306310	1	True				
ANR	6306676	ExpressionStatement	parent = b -> parent	578:16:16426:16444	6306310	4	True				
ANR	6306677	AssignmentExpression	parent = b -> parent		6306310	0		=			
ANR	6306678	Identifier	parent		6306310	0					
ANR	6306679	PtrMemberAccess	b -> parent		6306310	1					
ANR	6306680	Identifier	b		6306310	0					
ANR	6306681	Identifier	parent		6306310	1					
ANR	6306682	WhileStatement	while ( parent != NULL && parent != child )		6306310	5					
ANR	6306683	Condition	parent != NULL && parent != child	579:23:16469:16501	6306310	0	True				
ANR	6306684	AndExpression	parent != NULL && parent != child		6306310	0		&&			
ANR	6306685	EqualityExpression	parent != NULL		6306310	0		!=			
ANR	6306686	Identifier	parent		6306310	0					
ANR	6306687	Identifier	NULL		6306310	1					
ANR	6306688	EqualityExpression	parent != child		6306310	1		!=			
ANR	6306689	Identifier	parent		6306310	0					
ANR	6306690	Identifier	child		6306310	1					
ANR	6306691	ExpressionStatement	parent = parent -> parent	580:20:16524:16547	6306310	1	True				
ANR	6306692	AssignmentExpression	parent = parent -> parent		6306310	0		=			
ANR	6306693	Identifier	parent		6306310	0					
ANR	6306694	PtrMemberAccess	parent -> parent		6306310	1					
ANR	6306695	Identifier	parent		6306310	0					
ANR	6306696	Identifier	parent		6306310	1					
ANR	6306697	IfStatement	if ( parent == child )		6306310	6					
ANR	6306698	Condition	parent == child	581:20:16569:16583	6306310	0	True				
ANR	6306699	EqualityExpression	parent == child		6306310	0		==			
ANR	6306700	Identifier	parent		6306310	0					
ANR	6306701	Identifier	child		6306310	1					
ANR	6306702	ContinueStatement	continue ;	582:20:16606:16614	6306310	1	True				
ANR	6306703	ExpressionStatement	child -> sibling = b -> child	584:16:16633:16658	6306310	7	True				
ANR	6306704	AssignmentExpression	child -> sibling = b -> child		6306310	0		=			
ANR	6306705	PtrMemberAccess	child -> sibling		6306310	0					
ANR	6306706	Identifier	child		6306310	0					
ANR	6306707	Identifier	sibling		6306310	1					
ANR	6306708	PtrMemberAccess	b -> child		6306310	1					
ANR	6306709	Identifier	b		6306310	0					
ANR	6306710	Identifier	child		6306310	1					
ANR	6306711	ExpressionStatement	b -> child = child	585:16:16676:16692	6306310	8	True				
ANR	6306712	AssignmentExpression	b -> child = child		6306310	0		=			
ANR	6306713	PtrMemberAccess	b -> child		6306310	0					
ANR	6306714	Identifier	b		6306310	0					
ANR	6306715	Identifier	child		6306310	1					
ANR	6306716	Identifier	child		6306310	1					
ANR	6306717	ExpressionStatement	child -> parent = b	586:16:16710:16727	6306310	9	True				
ANR	6306718	AssignmentExpression	child -> parent = b		6306310	0		=			
ANR	6306719	PtrMemberAccess	child -> parent		6306310	0					
ANR	6306720	Identifier	child		6306310	0					
ANR	6306721	Identifier	parent		6306310	1					
ANR	6306722	Identifier	b		6306310	1					
ANR	6306723	ExpressionStatement	child -> flags |= Memento_Flag_HasParent	587:16:16745:16783	6306310	10	True				
ANR	6306724	AssignmentExpression	child -> flags |= Memento_Flag_HasParent		6306310	0		|=			
ANR	6306725	PtrMemberAccess	child -> flags		6306310	0					
ANR	6306726	Identifier	child		6306310	0					
ANR	6306727	Identifier	flags		6306310	1					
ANR	6306728	Identifier	Memento_Flag_HasParent		6306310	1					
ANR	6306729	ForStatement	for ( b = globals . used . head ; b ; b = b -> next )		6306310	15					
ANR	6306730	ForInit	b = globals . used . head ;	593:9:16860:16881	6306310	0	True				
ANR	6306731	AssignmentExpression	b = globals . used . head		6306310	0		=			
ANR	6306732	Identifier	b		6306310	0					
ANR	6306733	MemberAccess	globals . used . head		6306310	1					
ANR	6306734	MemberAccess	globals . used		6306310	0					
ANR	6306735	Identifier	globals		6306310	0					
ANR	6306736	Identifier	used		6306310	1					
ANR	6306737	Identifier	head		6306310	1					
ANR	6306738	Condition	b	593:32:16883:16883	6306310	1	True				
ANR	6306739	Identifier	b		6306310	0					
ANR	6306740	AssignmentExpression	b = b -> next	593:35:16886:16896	6306310	2	True	=			
ANR	6306741	Identifier	b		6306310	0					
ANR	6306742	PtrMemberAccess	b -> next		6306310	1					
ANR	6306743	Identifier	b		6306310	0					
ANR	6306744	Identifier	next		6306310	1					
ANR	6306745	CompoundStatement		84:48:2564:2564	6306310	3					
ANR	6306746	IfStatement	if ( ( b -> flags & Memento_Flag_HasParent ) == 0 )		6306310	0					
ANR	6306747	Condition	( b -> flags & Memento_Flag_HasParent ) == 0	594:12:16913:16952	6306310	0	True				
ANR	6306748	EqualityExpression	( b -> flags & Memento_Flag_HasParent ) == 0		6306310	0		==			
ANR	6306749	BitAndExpression	b -> flags & Memento_Flag_HasParent		6306310	0		&			
ANR	6306750	PtrMemberAccess	b -> flags		6306310	0					
ANR	6306751	Identifier	b		6306310	0					
ANR	6306752	Identifier	flags		6306310	1					
ANR	6306753	Identifier	Memento_Flag_HasParent		6306310	1					
ANR	6306754	PrimaryExpression	0		6306310	1					
ANR	6306755	ExpressionStatement	"doNestedDisplay ( b , 0 )"	595:12:16967:16988	6306310	1	True				
ANR	6306756	CallExpression	"doNestedDisplay ( b , 0 )"		6306310	0					
ANR	6306757	Callee	doNestedDisplay		6306310	0					
ANR	6306758	Identifier	doNestedDisplay		6306310	0					
ANR	6306759	ArgumentList	b		6306310	1					
ANR	6306760	Argument	b		6306310	0					
ANR	6306761	Identifier	b		6306310	0					
ANR	6306762	Argument	0		6306310	1					
ANR	6306763	PrimaryExpression	0		6306310	0					
ANR	6306764	ExpressionStatement	"fprintf ( stderr , "" Total number of blocks = %d\\n"" , count )"	597:4:17000:17056	6306310	16	True				
ANR	6306765	CallExpression	"fprintf ( stderr , "" Total number of blocks = %d\\n"" , count )"		6306310	0					
ANR	6306766	Callee	fprintf		6306310	0					
ANR	6306767	Identifier	fprintf		6306310	0					
ANR	6306768	ArgumentList	stderr		6306310	1					
ANR	6306769	Argument	stderr		6306310	0					
ANR	6306770	Identifier	stderr		6306310	0					
ANR	6306771	Argument	""" Total number of blocks = %d\\n"""		6306310	1					
ANR	6306772	PrimaryExpression	""" Total number of blocks = %d\\n"""		6306310	0					
ANR	6306773	Argument	count		6306310	2					
ANR	6306774	Identifier	count		6306310	0					
ANR	6306775	ExpressionStatement	"fprintf ( stderr , "" Total size of blocks = %d\\n"" , size )"	598:4:17062:17115	6306310	17	True				
ANR	6306776	CallExpression	"fprintf ( stderr , "" Total size of blocks = %d\\n"" , size )"		6306310	0					
ANR	6306777	Callee	fprintf		6306310	0					
ANR	6306778	Identifier	fprintf		6306310	0					
ANR	6306779	ArgumentList	stderr		6306310	1					
ANR	6306780	Argument	stderr		6306310	0					
ANR	6306781	Identifier	stderr		6306310	0					
ANR	6306782	Argument	""" Total size of blocks = %d\\n"""		6306310	1					
ANR	6306783	PrimaryExpression	""" Total size of blocks = %d\\n"""		6306310	0					
ANR	6306784	Argument	size		6306310	2					
ANR	6306785	Identifier	size		6306310	0					
ANR	6306786	ExpressionStatement	MEMENTO_UNDERLYING_FREE ( blocks )	600:4:17122:17153	6306310	18	True				
ANR	6306787	CallExpression	MEMENTO_UNDERLYING_FREE ( blocks )		6306310	0					
ANR	6306788	Callee	MEMENTO_UNDERLYING_FREE		6306310	0					
ANR	6306789	Identifier	MEMENTO_UNDERLYING_FREE		6306310	0					
ANR	6306790	ArgumentList	blocks		6306310	1					
ANR	6306791	Argument	blocks		6306310	0					
ANR	6306792	Identifier	blocks		6306310	0					
ANR	6306793	ReturnStatement	return 0 ;	601:4:17159:17167	6306310	19	True				
ANR	6306794	PrimaryExpression	0		6306310	0					
ANR	6306795	ReturnType	static int		6306310	1					
ANR	6306796	Identifier	Memento_listBlocksNested		6306310	2					
ANR	6306797	ParameterList			6306310	3					
ANR	6306798	CFGEntryNode	ENTRY		6306310		True				
ANR	6306799	CFGExitNode	EXIT		6306310		True				
ANR	6306800	Symbol	child -> sibling		6306310						
ANR	6306801	Symbol	parent		6306310						
ANR	6306802	Symbol	* parent		6306310						
ANR	6306803	Symbol	child -> flags		6306310						
ANR	6306804	Symbol	maxptr		6306310						
ANR	6306805	Symbol	b -> parent		6306310						
ANR	6306806	Symbol	globals		6306310						
ANR	6306807	Symbol	~Memento_Flag_HasParent		6306310						
ANR	6306808	Symbol	* ( void * * ) ( & p [ i ] )		6306310						
ANR	6306809	Symbol	parent -> parent		6306310						
ANR	6306810	Symbol	b -> next		6306310						
ANR	6306811	Symbol	bsearch		6306310						
ANR	6306812	Symbol	end		6306310						
ANR	6306813	Symbol	MEMENTO_UNDERLYING_MALLOC		6306310						
ANR	6306814	Symbol	MEMENTO_PTRSEARCH		6306310						
ANR	6306815	Symbol	globals . used . head		6306310						
ANR	6306816	Symbol	mask		6306310						
ANR	6306817	Symbol	child -> parent		6306310						
ANR	6306818	Symbol	b		6306310						
ANR	6306819	Symbol	* child		6306310						
ANR	6306820	Symbol	NULL		6306310						
ANR	6306821	Symbol	Memento_Flag_HasParent		6306310						
ANR	6306822	Symbol	* blocks		6306310						
ANR	6306823	Symbol	blocks		6306310						
ANR	6306824	Symbol	minptr		6306310						
ANR	6306825	Symbol	count		6306310						
ANR	6306826	Symbol	i		6306310						
ANR	6306827	Symbol	b -> child		6306310						
ANR	6306828	Symbol	* b		6306310						
ANR	6306829	Symbol	stderr		6306310						
ANR	6306830	Symbol	ptrcmp		6306310						
ANR	6306831	Symbol	globals . used		6306310						
ANR	6306832	Symbol	MEMBLK_TOBLK		6306310						
ANR	6306833	Symbol	b -> rawsize		6306310						
ANR	6306834	Symbol	p		6306310						
ANR	6306835	Symbol	q		6306310						
ANR	6306836	Symbol	r		6306310						
ANR	6306837	Symbol	* i		6306310						
ANR	6306838	Symbol	size		6306310						
ANR	6306839	Symbol	MEMENTO_SEARCH_SKIP		6306310						
ANR	6306840	Symbol	& q		6306310						
ANR	6306841	Symbol	MEMBLK_FROMBLK		6306310						
ANR	6306842	Symbol	* p		6306310						
ANR	6306843	Symbol	b -> flags		6306310						
ANR	6306844	Symbol	b -> sibling		6306310						
ANR	6306845	Symbol	* r		6306310						
ANR	6306846	Symbol	child		6306310						
ANR	6306847	Function	Memento_listBlocks	604:0:17172:17573							
ANR	6306848	FunctionDef	Memento_listBlocks ()		6306847	0					
ANR	6306849	CompoundStatement		606:0:17202:17573	6306847	0					
ANR	6306850	ExpressionStatement	"fprintf ( stderr , ""Allocated blocks:\\n"" )"	607:4:17208:17246	6306847	0	True				
ANR	6306851	CallExpression	"fprintf ( stderr , ""Allocated blocks:\\n"" )"		6306847	0					
ANR	6306852	Callee	fprintf		6306847	0					
ANR	6306853	Identifier	fprintf		6306847	0					
ANR	6306854	ArgumentList	stderr		6306847	1					
ANR	6306855	Argument	stderr		6306847	0					
ANR	6306856	Identifier	stderr		6306847	0					
ANR	6306857	Argument	"""Allocated blocks:\\n"""		6306847	1					
ANR	6306858	PrimaryExpression	"""Allocated blocks:\\n"""		6306847	0					
ANR	6306859	IfStatement	if ( Memento_listBlocksNested ( ) )		6306847	1					
ANR	6306860	Condition	Memento_listBlocksNested ( )	608:8:17256:17281	6306847	0	True				
ANR	6306861	CallExpression	Memento_listBlocksNested ( )		6306847	0					
ANR	6306862	Callee	Memento_listBlocksNested		6306847	0					
ANR	6306863	Identifier	Memento_listBlocksNested		6306847	0					
ANR	6306864	ArgumentList			6306847	1					
ANR	6306865	CompoundStatement		4:8:91:104	6306847	1					
ANR	6306866	IdentifierDeclStatement	int counts [ 2 ] ;	609:8:17294:17307	6306847	0	True				
ANR	6306867	IdentifierDecl	counts [ 2 ]		6306847	0					
ANR	6306868	IdentifierDeclType	int [ 2 ]		6306847	0					
ANR	6306869	Identifier	counts		6306847	1					
ANR	6306870	PrimaryExpression	2		6306847	2					
ANR	6306871	ExpressionStatement	counts [ 0 ] = 0	611:8:17318:17331	6306847	1	True				
ANR	6306872	AssignmentExpression	counts [ 0 ] = 0		6306847	0		=			
ANR	6306873	ArrayIndexing	counts [ 0 ]		6306847	0					
ANR	6306874	Identifier	counts		6306847	0					
ANR	6306875	PrimaryExpression	0		6306847	1					
ANR	6306876	PrimaryExpression	0		6306847	1					
ANR	6306877	ExpressionStatement	counts [ 1 ] = 0	612:8:17341:17354	6306847	2	True				
ANR	6306878	AssignmentExpression	counts [ 1 ] = 0		6306847	0		=			
ANR	6306879	ArrayIndexing	counts [ 1 ]		6306847	0					
ANR	6306880	Identifier	counts		6306847	0					
ANR	6306881	PrimaryExpression	1		6306847	1					
ANR	6306882	PrimaryExpression	0		6306847	1					
ANR	6306883	ExpressionStatement	"Memento_appBlocks ( & globals . used , Memento_listBlock , & counts [ 0 ] )"	613:8:17364:17427	6306847	3	True				
ANR	6306884	CallExpression	"Memento_appBlocks ( & globals . used , Memento_listBlock , & counts [ 0 ] )"		6306847	0					
ANR	6306885	Callee	Memento_appBlocks		6306847	0					
ANR	6306886	Identifier	Memento_appBlocks		6306847	0					
ANR	6306887	ArgumentList	& globals . used		6306847	1					
ANR	6306888	Argument	& globals . used		6306847	0					
ANR	6306889	UnaryOperationExpression	& globals . used		6306847	0					
ANR	6306890	UnaryOperator	&		6306847	0					
ANR	6306891	MemberAccess	globals . used		6306847	1					
ANR	6306892	Identifier	globals		6306847	0					
ANR	6306893	Identifier	used		6306847	1					
ANR	6306894	Argument	Memento_listBlock		6306847	1					
ANR	6306895	Identifier	Memento_listBlock		6306847	0					
ANR	6306896	Argument	& counts [ 0 ]		6306847	2					
ANR	6306897	UnaryOperationExpression	& counts [ 0 ]		6306847	0					
ANR	6306898	UnaryOperator	&		6306847	0					
ANR	6306899	ArrayIndexing	counts [ 0 ]		6306847	1					
ANR	6306900	Identifier	counts		6306847	0					
ANR	6306901	PrimaryExpression	0		6306847	1					
ANR	6306902	ExpressionStatement	"fprintf ( stderr , "" Total number of blocks = %d\\n"" , counts [ 0 ] )"	614:8:17437:17497	6306847	4	True				
ANR	6306903	CallExpression	"fprintf ( stderr , "" Total number of blocks = %d\\n"" , counts [ 0 ] )"		6306847	0					
ANR	6306904	Callee	fprintf		6306847	0					
ANR	6306905	Identifier	fprintf		6306847	0					
ANR	6306906	ArgumentList	stderr		6306847	1					
ANR	6306907	Argument	stderr		6306847	0					
ANR	6306908	Identifier	stderr		6306847	0					
ANR	6306909	Argument	""" Total number of blocks = %d\\n"""		6306847	1					
ANR	6306910	PrimaryExpression	""" Total number of blocks = %d\\n"""		6306847	0					
ANR	6306911	Argument	counts [ 0 ]		6306847	2					
ANR	6306912	ArrayIndexing	counts [ 0 ]		6306847	0					
ANR	6306913	Identifier	counts		6306847	0					
ANR	6306914	PrimaryExpression	0		6306847	1					
ANR	6306915	ExpressionStatement	"fprintf ( stderr , "" Total size of blocks = %d\\n"" , counts [ 1 ] )"	615:8:17507:17565	6306847	5	True				
ANR	6306916	CallExpression	"fprintf ( stderr , "" Total size of blocks = %d\\n"" , counts [ 1 ] )"		6306847	0					
ANR	6306917	Callee	fprintf		6306847	0					
ANR	6306918	Identifier	fprintf		6306847	0					
ANR	6306919	ArgumentList	stderr		6306847	1					
ANR	6306920	Argument	stderr		6306847	0					
ANR	6306921	Identifier	stderr		6306847	0					
ANR	6306922	Argument	""" Total size of blocks = %d\\n"""		6306847	1					
ANR	6306923	PrimaryExpression	""" Total size of blocks = %d\\n"""		6306847	0					
ANR	6306924	Argument	counts [ 1 ]		6306847	2					
ANR	6306925	ArrayIndexing	counts [ 1 ]		6306847	0					
ANR	6306926	Identifier	counts		6306847	0					
ANR	6306927	PrimaryExpression	1		6306847	1					
ANR	6306928	ReturnType	void		6306847	1					
ANR	6306929	Identifier	Memento_listBlocks		6306847	2					
ANR	6306930	ParameterList			6306847	3					
ANR	6306931	CFGEntryNode	ENTRY		6306847		True				
ANR	6306932	CFGExitNode	EXIT		6306847		True				
ANR	6306933	Symbol	* counts		6306847						
ANR	6306934	Symbol	& globals		6306847						
ANR	6306935	Symbol	Memento_listBlocksNested		6306847						
ANR	6306936	Symbol	counts		6306847						
ANR	6306937	Symbol	globals		6306847						
ANR	6306938	Symbol	stderr		6306847						
ANR	6306939	Symbol	Memento_listBlock		6306847						
ANR	6306940	Symbol	& globals . used		6306847						
ANR	6306941	Function	Memento_listNewBlock	619:0:17576:17780							
ANR	6306942	FunctionDef	"Memento_listNewBlock (Memento_BlkHeader * b , void * arg)"		6306941	0					
ANR	6306943	CompoundStatement		621:0:17641:17780	6306941	0					
ANR	6306944	IfStatement	if ( b -> flags & Memento_Flag_OldBlock )		6306941	0					
ANR	6306945	Condition	b -> flags & Memento_Flag_OldBlock	622:8:17651:17682	6306941	0	True				
ANR	6306946	BitAndExpression	b -> flags & Memento_Flag_OldBlock		6306941	0		&			
ANR	6306947	PtrMemberAccess	b -> flags		6306941	0					
ANR	6306948	Identifier	b		6306941	0					
ANR	6306949	Identifier	flags		6306941	1					
ANR	6306950	Identifier	Memento_Flag_OldBlock		6306941	1					
ANR	6306951	ReturnStatement	return 0 ;	623:8:17693:17701	6306941	1	True				
ANR	6306952	PrimaryExpression	0		6306941	0					
ANR	6306953	ExpressionStatement	b -> flags |= Memento_Flag_OldBlock	624:4:17707:17740	6306941	1	True				
ANR	6306954	AssignmentExpression	b -> flags |= Memento_Flag_OldBlock		6306941	0		|=			
ANR	6306955	PtrMemberAccess	b -> flags		6306941	0					
ANR	6306956	Identifier	b		6306941	0					
ANR	6306957	Identifier	flags		6306941	1					
ANR	6306958	Identifier	Memento_Flag_OldBlock		6306941	1					
ANR	6306959	ReturnStatement	"return Memento_listBlock ( b , arg ) ;"	625:4:17746:17778	6306941	2	True				
ANR	6306960	CallExpression	"Memento_listBlock ( b , arg )"		6306941	0					
ANR	6306961	Callee	Memento_listBlock		6306941	0					
ANR	6306962	Identifier	Memento_listBlock		6306941	0					
ANR	6306963	ArgumentList	b		6306941	1					
ANR	6306964	Argument	b		6306941	0					
ANR	6306965	Identifier	b		6306941	0					
ANR	6306966	Argument	arg		6306941	1					
ANR	6306967	Identifier	arg		6306941	0					
ANR	6306968	ReturnType	static int		6306941	1					
ANR	6306969	Identifier	Memento_listNewBlock		6306941	2					
ANR	6306970	ParameterList	"Memento_BlkHeader * b , void * arg"		6306941	3					
ANR	6306971	Parameter	Memento_BlkHeader * b	620:21:17608:17627	6306941	0	True				
ANR	6306972	ParameterType	Memento_BlkHeader *		6306941	0					
ANR	6306973	Identifier	b		6306941	1					
ANR	6306974	Parameter	void * arg	620:43:17630:17638	6306941	1	True				
ANR	6306975	ParameterType	void *		6306941	0					
ANR	6306976	Identifier	arg		6306941	1					
ANR	6306977	CFGEntryNode	ENTRY		6306941		True				
ANR	6306978	CFGExitNode	EXIT		6306941		True				
ANR	6306979	Symbol	Memento_Flag_OldBlock		6306941						
ANR	6306980	Symbol	b		6306941						
ANR	6306981	Symbol	arg		6306941						
ANR	6306982	Symbol	b -> flags		6306941						
ANR	6306983	Symbol	* b		6306941						
ANR	6306984	Symbol	Memento_listBlock		6306941						
ANR	6306985	Function	Memento_listNewBlocks	628:0:17783:18157							
ANR	6306986	FunctionDef	Memento_listNewBlocks ()		6306985	0					
ANR	6306987	CompoundStatement		630:0:17816:18157	6306985	0					
ANR	6306988	IdentifierDeclStatement	int counts [ 2 ] ;	631:4:17822:17835	6306985	0	True				
ANR	6306989	IdentifierDecl	counts [ 2 ]		6306985	0					
ANR	6306990	IdentifierDeclType	int [ 2 ]		6306985	0					
ANR	6306991	Identifier	counts		6306985	1					
ANR	6306992	PrimaryExpression	2		6306985	2					
ANR	6306993	ExpressionStatement	counts [ 0 ] = 0	633:4:17842:17855	6306985	1	True				
ANR	6306994	AssignmentExpression	counts [ 0 ] = 0		6306985	0		=			
ANR	6306995	ArrayIndexing	counts [ 0 ]		6306985	0					
ANR	6306996	Identifier	counts		6306985	0					
ANR	6306997	PrimaryExpression	0		6306985	1					
ANR	6306998	PrimaryExpression	0		6306985	1					
ANR	6306999	ExpressionStatement	counts [ 1 ] = 0	634:4:17861:17874	6306985	2	True				
ANR	6307000	AssignmentExpression	counts [ 1 ] = 0		6306985	0		=			
ANR	6307001	ArrayIndexing	counts [ 1 ]		6306985	0					
ANR	6307002	Identifier	counts		6306985	0					
ANR	6307003	PrimaryExpression	1		6306985	1					
ANR	6307004	PrimaryExpression	0		6306985	1					
ANR	6307005	ExpressionStatement	"fprintf ( stderr , ""Blocks allocated and still extant since last list:\\n"" )"	635:4:17880:17951	6306985	3	True				
ANR	6307006	CallExpression	"fprintf ( stderr , ""Blocks allocated and still extant since last list:\\n"" )"		6306985	0					
ANR	6307007	Callee	fprintf		6306985	0					
ANR	6307008	Identifier	fprintf		6306985	0					
ANR	6307009	ArgumentList	stderr		6306985	1					
ANR	6307010	Argument	stderr		6306985	0					
ANR	6307011	Identifier	stderr		6306985	0					
ANR	6307012	Argument	"""Blocks allocated and still extant since last list:\\n"""		6306985	1					
ANR	6307013	PrimaryExpression	"""Blocks allocated and still extant since last list:\\n"""		6306985	0					
ANR	6307014	ExpressionStatement	"Memento_appBlocks ( & globals . used , Memento_listNewBlock , & counts [ 0 ] )"	636:4:17957:18023	6306985	4	True				
ANR	6307015	CallExpression	"Memento_appBlocks ( & globals . used , Memento_listNewBlock , & counts [ 0 ] )"		6306985	0					
ANR	6307016	Callee	Memento_appBlocks		6306985	0					
ANR	6307017	Identifier	Memento_appBlocks		6306985	0					
ANR	6307018	ArgumentList	& globals . used		6306985	1					
ANR	6307019	Argument	& globals . used		6306985	0					
ANR	6307020	UnaryOperationExpression	& globals . used		6306985	0					
ANR	6307021	UnaryOperator	&		6306985	0					
ANR	6307022	MemberAccess	globals . used		6306985	1					
ANR	6307023	Identifier	globals		6306985	0					
ANR	6307024	Identifier	used		6306985	1					
ANR	6307025	Argument	Memento_listNewBlock		6306985	1					
ANR	6307026	Identifier	Memento_listNewBlock		6306985	0					
ANR	6307027	Argument	& counts [ 0 ]		6306985	2					
ANR	6307028	UnaryOperationExpression	& counts [ 0 ]		6306985	0					
ANR	6307029	UnaryOperator	&		6306985	0					
ANR	6307030	ArrayIndexing	counts [ 0 ]		6306985	1					
ANR	6307031	Identifier	counts		6306985	0					
ANR	6307032	PrimaryExpression	0		6306985	1					
ANR	6307033	ExpressionStatement	"fprintf ( stderr , ""  Total number of blocks = %d\\n"" , counts [ 0 ] )"	637:4:18029:18090	6306985	5	True				
ANR	6307034	CallExpression	"fprintf ( stderr , ""  Total number of blocks = %d\\n"" , counts [ 0 ] )"		6306985	0					
ANR	6307035	Callee	fprintf		6306985	0					
ANR	6307036	Identifier	fprintf		6306985	0					
ANR	6307037	ArgumentList	stderr		6306985	1					
ANR	6307038	Argument	stderr		6306985	0					
ANR	6307039	Identifier	stderr		6306985	0					
ANR	6307040	Argument	"""  Total number of blocks = %d\\n"""		6306985	1					
ANR	6307041	PrimaryExpression	"""  Total number of blocks = %d\\n"""		6306985	0					
ANR	6307042	Argument	counts [ 0 ]		6306985	2					
ANR	6307043	ArrayIndexing	counts [ 0 ]		6306985	0					
ANR	6307044	Identifier	counts		6306985	0					
ANR	6307045	PrimaryExpression	0		6306985	1					
ANR	6307046	ExpressionStatement	"fprintf ( stderr , ""  Total size of blocks = %d\\n"" , counts [ 1 ] )"	638:4:18096:18155	6306985	6	True				
ANR	6307047	CallExpression	"fprintf ( stderr , ""  Total size of blocks = %d\\n"" , counts [ 1 ] )"		6306985	0					
ANR	6307048	Callee	fprintf		6306985	0					
ANR	6307049	Identifier	fprintf		6306985	0					
ANR	6307050	ArgumentList	stderr		6306985	1					
ANR	6307051	Argument	stderr		6306985	0					
ANR	6307052	Identifier	stderr		6306985	0					
ANR	6307053	Argument	"""  Total size of blocks = %d\\n"""		6306985	1					
ANR	6307054	PrimaryExpression	"""  Total size of blocks = %d\\n"""		6306985	0					
ANR	6307055	Argument	counts [ 1 ]		6306985	2					
ANR	6307056	ArrayIndexing	counts [ 1 ]		6306985	0					
ANR	6307057	Identifier	counts		6306985	0					
ANR	6307058	PrimaryExpression	1		6306985	1					
ANR	6307059	ReturnType	void		6306985	1					
ANR	6307060	Identifier	Memento_listNewBlocks		6306985	2					
ANR	6307061	ParameterList			6306985	3					
ANR	6307062	CFGEntryNode	ENTRY		6306985		True				
ANR	6307063	CFGExitNode	EXIT		6306985		True				
ANR	6307064	Symbol	* counts		6306985						
ANR	6307065	Symbol	Memento_listNewBlock		6306985						
ANR	6307066	Symbol	& globals		6306985						
ANR	6307067	Symbol	counts		6306985						
ANR	6307068	Symbol	globals		6306985						
ANR	6307069	Symbol	stderr		6306985						
ANR	6307070	Symbol	& globals . used		6306985						
ANR	6307071	Function	Memento_endStats	641:0:18160:18701							
ANR	6307072	FunctionDef	Memento_endStats ()		6307071	0					
ANR	6307073	CompoundStatement		643:0:18195:18701	6307071	0					
ANR	6307074	ExpressionStatement	"fprintf ( stderr , ""Total memory malloced = %u bytes\\n"" , ( unsigned int ) globals . totalAlloc )"	644:4:18201:18288	6307071	0	True				
ANR	6307075	CallExpression	"fprintf ( stderr , ""Total memory malloced = %u bytes\\n"" , ( unsigned int ) globals . totalAlloc )"		6307071	0					
ANR	6307076	Callee	fprintf		6307071	0					
ANR	6307077	Identifier	fprintf		6307071	0					
ANR	6307078	ArgumentList	stderr		6307071	1					
ANR	6307079	Argument	stderr		6307071	0					
ANR	6307080	Identifier	stderr		6307071	0					
ANR	6307081	Argument	"""Total memory malloced = %u bytes\\n"""		6307071	1					
ANR	6307082	PrimaryExpression	"""Total memory malloced = %u bytes\\n"""		6307071	0					
ANR	6307083	Argument	( unsigned int ) globals . totalAlloc		6307071	2					
ANR	6307084	CastExpression	( unsigned int ) globals . totalAlloc		6307071	0					
ANR	6307085	CastTarget	unsigned int		6307071	0					
ANR	6307086	MemberAccess	globals . totalAlloc		6307071	1					
ANR	6307087	Identifier	globals		6307071	0					
ANR	6307088	Identifier	totalAlloc		6307071	1					
ANR	6307089	ExpressionStatement	"fprintf ( stderr , ""Peak memory malloced = %u bytes\\n"" , ( unsigned int ) globals . peakAlloc )"	645:4:18294:18379	6307071	1	True				
ANR	6307090	CallExpression	"fprintf ( stderr , ""Peak memory malloced = %u bytes\\n"" , ( unsigned int ) globals . peakAlloc )"		6307071	0					
ANR	6307091	Callee	fprintf		6307071	0					
ANR	6307092	Identifier	fprintf		6307071	0					
ANR	6307093	ArgumentList	stderr		6307071	1					
ANR	6307094	Argument	stderr		6307071	0					
ANR	6307095	Identifier	stderr		6307071	0					
ANR	6307096	Argument	"""Peak memory malloced = %u bytes\\n"""		6307071	1					
ANR	6307097	PrimaryExpression	"""Peak memory malloced = %u bytes\\n"""		6307071	0					
ANR	6307098	Argument	( unsigned int ) globals . peakAlloc		6307071	2					
ANR	6307099	CastExpression	( unsigned int ) globals . peakAlloc		6307071	0					
ANR	6307100	CastTarget	unsigned int		6307071	0					
ANR	6307101	MemberAccess	globals . peakAlloc		6307071	1					
ANR	6307102	Identifier	globals		6307071	0					
ANR	6307103	Identifier	peakAlloc		6307071	1					
ANR	6307104	ExpressionStatement	"fprintf ( stderr , ""%u mallocs, %u frees, %u reallocs\\n"" , ( unsigned int ) globals . numMallocs , ( unsigned int ) globals . numFrees , ( unsigned int ) globals . numReallocs )"	646:4:18385:18540	6307071	2	True				
ANR	6307105	CallExpression	"fprintf ( stderr , ""%u mallocs, %u frees, %u reallocs\\n"" , ( unsigned int ) globals . numMallocs , ( unsigned int ) globals . numFrees , ( unsigned int ) globals . numReallocs )"		6307071	0					
ANR	6307106	Callee	fprintf		6307071	0					
ANR	6307107	Identifier	fprintf		6307071	0					
ANR	6307108	ArgumentList	stderr		6307071	1					
ANR	6307109	Argument	stderr		6307071	0					
ANR	6307110	Identifier	stderr		6307071	0					
ANR	6307111	Argument	"""%u mallocs, %u frees, %u reallocs\\n"""		6307071	1					
ANR	6307112	PrimaryExpression	"""%u mallocs, %u frees, %u reallocs\\n"""		6307071	0					
ANR	6307113	Argument	( unsigned int ) globals . numMallocs		6307071	2					
ANR	6307114	CastExpression	( unsigned int ) globals . numMallocs		6307071	0					
ANR	6307115	CastTarget	unsigned int		6307071	0					
ANR	6307116	MemberAccess	globals . numMallocs		6307071	1					
ANR	6307117	Identifier	globals		6307071	0					
ANR	6307118	Identifier	numMallocs		6307071	1					
ANR	6307119	Argument	( unsigned int ) globals . numFrees		6307071	3					
ANR	6307120	CastExpression	( unsigned int ) globals . numFrees		6307071	0					
ANR	6307121	CastTarget	unsigned int		6307071	0					
ANR	6307122	MemberAccess	globals . numFrees		6307071	1					
ANR	6307123	Identifier	globals		6307071	0					
ANR	6307124	Identifier	numFrees		6307071	1					
ANR	6307125	Argument	( unsigned int ) globals . numReallocs		6307071	4					
ANR	6307126	CastExpression	( unsigned int ) globals . numReallocs		6307071	0					
ANR	6307127	CastTarget	unsigned int		6307071	0					
ANR	6307128	MemberAccess	globals . numReallocs		6307071	1					
ANR	6307129	Identifier	globals		6307071	0					
ANR	6307130	Identifier	numReallocs		6307071	1					
ANR	6307131	ExpressionStatement	"fprintf ( stderr , ""Average allocation size %u bytes\\n"" , ( unsigned int ) ( globals . numMallocs != 0 ? globals . totalAlloc / globals . numMallocs : 0 ) )"	647:4:18546:18699	6307071	3	True				
ANR	6307132	CallExpression	"fprintf ( stderr , ""Average allocation size %u bytes\\n"" , ( unsigned int ) ( globals . numMallocs != 0 ? globals . totalAlloc / globals . numMallocs : 0 ) )"		6307071	0					
ANR	6307133	Callee	fprintf		6307071	0					
ANR	6307134	Identifier	fprintf		6307071	0					
ANR	6307135	ArgumentList	stderr		6307071	1					
ANR	6307136	Argument	stderr		6307071	0					
ANR	6307137	Identifier	stderr		6307071	0					
ANR	6307138	Argument	"""Average allocation size %u bytes\\n"""		6307071	1					
ANR	6307139	PrimaryExpression	"""Average allocation size %u bytes\\n"""		6307071	0					
ANR	6307140	Argument	( unsigned int ) ( globals . numMallocs != 0 ? globals . totalAlloc / globals . numMallocs : 0 )		6307071	2					
ANR	6307141	CastExpression	( unsigned int ) ( globals . numMallocs != 0 ? globals . totalAlloc / globals . numMallocs : 0 )		6307071	0					
ANR	6307142	CastTarget	unsigned int		6307071	0					
ANR	6307143	ConditionalExpression	globals . numMallocs != 0 ? globals . totalAlloc / globals . numMallocs : 0		6307071	1					
ANR	6307144	Condition	globals . numMallocs != 0		6307071	0					
ANR	6307145	EqualityExpression	globals . numMallocs != 0		6307071	0		!=			
ANR	6307146	MemberAccess	globals . numMallocs		6307071	0					
ANR	6307147	Identifier	globals		6307071	0					
ANR	6307148	Identifier	numMallocs		6307071	1					
ANR	6307149	PrimaryExpression	0		6307071	1					
ANR	6307150	MultiplicativeExpression	globals . totalAlloc / globals . numMallocs		6307071	1		/			
ANR	6307151	MemberAccess	globals . totalAlloc		6307071	0					
ANR	6307152	Identifier	globals		6307071	0					
ANR	6307153	Identifier	totalAlloc		6307071	1					
ANR	6307154	MemberAccess	globals . numMallocs		6307071	1					
ANR	6307155	Identifier	globals		6307071	0					
ANR	6307156	Identifier	numMallocs		6307071	1					
ANR	6307157	PrimaryExpression	0		6307071	2					
ANR	6307158	ReturnType	static void		6307071	1					
ANR	6307159	Identifier	Memento_endStats		6307071	2					
ANR	6307160	ParameterList			6307071	3					
ANR	6307161	CFGEntryNode	ENTRY		6307071		True				
ANR	6307162	CFGExitNode	EXIT		6307071		True				
ANR	6307163	Symbol	globals . numFrees		6307071						
ANR	6307164	Symbol	globals . numReallocs		6307071						
ANR	6307165	Symbol	globals		6307071						
ANR	6307166	Symbol	globals . peakAlloc		6307071						
ANR	6307167	Symbol	globals . numMallocs		6307071						
ANR	6307168	Symbol	globals . totalAlloc		6307071						
ANR	6307169	Symbol	stderr		6307071						
ANR	6307170	Function	Memento_stats	651:0:18704:18845							
ANR	6307171	FunctionDef	Memento_stats ()		6307170	0					
ANR	6307172	CompoundStatement		653:0:18729:18845	6307170	0					
ANR	6307173	ExpressionStatement	"fprintf ( stderr , ""Current memory malloced = %u bytes\\n"" , ( unsigned int ) globals . alloc )"	654:4:18735:18819	6307170	0	True				
ANR	6307174	CallExpression	"fprintf ( stderr , ""Current memory malloced = %u bytes\\n"" , ( unsigned int ) globals . alloc )"		6307170	0					
ANR	6307175	Callee	fprintf		6307170	0					
ANR	6307176	Identifier	fprintf		6307170	0					
ANR	6307177	ArgumentList	stderr		6307170	1					
ANR	6307178	Argument	stderr		6307170	0					
ANR	6307179	Identifier	stderr		6307170	0					
ANR	6307180	Argument	"""Current memory malloced = %u bytes\\n"""		6307170	1					
ANR	6307181	PrimaryExpression	"""Current memory malloced = %u bytes\\n"""		6307170	0					
ANR	6307182	Argument	( unsigned int ) globals . alloc		6307170	2					
ANR	6307183	CastExpression	( unsigned int ) globals . alloc		6307170	0					
ANR	6307184	CastTarget	unsigned int		6307170	0					
ANR	6307185	MemberAccess	globals . alloc		6307170	1					
ANR	6307186	Identifier	globals		6307170	0					
ANR	6307187	Identifier	alloc		6307170	1					
ANR	6307188	ExpressionStatement	Memento_endStats ( )	655:4:18825:18843	6307170	1	True				
ANR	6307189	CallExpression	Memento_endStats ( )		6307170	0					
ANR	6307190	Callee	Memento_endStats		6307170	0					
ANR	6307191	Identifier	Memento_endStats		6307170	0					
ANR	6307192	ArgumentList			6307170	1					
ANR	6307193	ReturnType	void		6307170	1					
ANR	6307194	Identifier	Memento_stats		6307170	2					
ANR	6307195	ParameterList			6307170	3					
ANR	6307196	CFGEntryNode	ENTRY		6307170		True				
ANR	6307197	CFGExitNode	EXIT		6307170		True				
ANR	6307198	Symbol	globals . alloc		6307170						
ANR	6307199	Symbol	globals		6307170						
ANR	6307200	Symbol	stderr		6307170						
ANR	6307201	Function	Memento_fin	658:0:18848:19779							
ANR	6307202	FunctionDef	Memento_fin ()		6307201	0					
ANR	6307203	CompoundStatement		660:0:18878:19779	6307201	0					
ANR	6307204	ExpressionStatement	Memento_checkAllMemory ( )	661:4:18884:18908	6307201	0	True				
ANR	6307205	CallExpression	Memento_checkAllMemory ( )		6307201	0					
ANR	6307206	Callee	Memento_checkAllMemory		6307201	0					
ANR	6307207	Identifier	Memento_checkAllMemory		6307201	0					
ANR	6307208	ArgumentList			6307201	1					
ANR	6307209	ExpressionStatement	Memento_endStats ( )	662:4:18914:18932	6307201	1	True				
ANR	6307210	CallExpression	Memento_endStats ( )		6307201	0					
ANR	6307211	Callee	Memento_endStats		6307201	0					
ANR	6307212	Identifier	Memento_endStats		6307201	0					
ANR	6307213	ArgumentList			6307201	1					
ANR	6307214	IfStatement	if ( globals . used . head != NULL )		6307201	2					
ANR	6307215	Condition	globals . used . head != NULL	663:8:18942:18966	6307201	0	True				
ANR	6307216	EqualityExpression	globals . used . head != NULL		6307201	0		!=			
ANR	6307217	MemberAccess	globals . used . head		6307201	0					
ANR	6307218	MemberAccess	globals . used		6307201	0					
ANR	6307219	Identifier	globals		6307201	0					
ANR	6307220	Identifier	used		6307201	1					
ANR	6307221	Identifier	head		6307201	1					
ANR	6307222	Identifier	NULL		6307201	1					
ANR	6307223	CompoundStatement		4:35:90:90	6307201	1					
ANR	6307224	ExpressionStatement	Memento_listBlocks ( )	664:8:18979:18999	6307201	0	True				
ANR	6307225	CallExpression	Memento_listBlocks ( )		6307201	0					
ANR	6307226	Callee	Memento_listBlocks		6307201	0					
ANR	6307227	Identifier	Memento_listBlocks		6307201	0					
ANR	6307228	ArgumentList			6307201	1					
ANR	6307229	ExpressionStatement	Memento_breakpoint ( )	665:8:19009:19029	6307201	1	True				
ANR	6307230	CallExpression	Memento_breakpoint ( )		6307201	0					
ANR	6307231	Callee	Memento_breakpoint		6307201	0					
ANR	6307232	Identifier	Memento_breakpoint		6307201	0					
ANR	6307233	ArgumentList			6307201	1					
ANR	6307234	IfStatement	if ( globals . segv )		6307201	3					
ANR	6307235	Condition	globals . segv	667:8:19045:19056	6307201	0	True				
ANR	6307236	MemberAccess	globals . segv		6307201	0					
ANR	6307237	Identifier	globals		6307201	0					
ANR	6307238	Identifier	segv		6307201	1					
ANR	6307239	CompoundStatement		8:22:180:180	6307201	1					
ANR	6307240	ExpressionStatement	"fprintf ( stderr , ""Memory dumped on SEGV while squeezing @ %d\\n"" , globals . failAt )"	668:8:19069:19148	6307201	0	True				
ANR	6307241	CallExpression	"fprintf ( stderr , ""Memory dumped on SEGV while squeezing @ %d\\n"" , globals . failAt )"		6307201	0					
ANR	6307242	Callee	fprintf		6307201	0					
ANR	6307243	Identifier	fprintf		6307201	0					
ANR	6307244	ArgumentList	stderr		6307201	1					
ANR	6307245	Argument	stderr		6307201	0					
ANR	6307246	Identifier	stderr		6307201	0					
ANR	6307247	Argument	"""Memory dumped on SEGV while squeezing @ %d\\n"""		6307201	1					
ANR	6307248	PrimaryExpression	"""Memory dumped on SEGV while squeezing @ %d\\n"""		6307201	0					
ANR	6307249	Argument	globals . failAt		6307201	2					
ANR	6307250	MemberAccess	globals . failAt		6307201	0					
ANR	6307251	Identifier	globals		6307201	0					
ANR	6307252	Identifier	failAt		6307201	1					
ANR	6307253	ElseStatement	else		6307201	0					
ANR	6307254	IfStatement	if ( globals . squeezing )		6307201	0					
ANR	6307255	Condition	globals . squeezing	669:15:19165:19181	6307201	0	True				
ANR	6307256	MemberAccess	globals . squeezing		6307201	0					
ANR	6307257	Identifier	globals		6307201	0					
ANR	6307258	Identifier	squeezing		6307201	1					
ANR	6307259	CompoundStatement		10:34:305:305	6307201	1					
ANR	6307260	IfStatement	if ( globals . pattern == 0 )		6307201	0					
ANR	6307261	Condition	globals . pattern == 0	670:12:19198:19217	6307201	0	True				
ANR	6307262	EqualityExpression	globals . pattern == 0		6307201	0		==			
ANR	6307263	MemberAccess	globals . pattern		6307201	0					
ANR	6307264	Identifier	globals		6307201	0					
ANR	6307265	Identifier	pattern		6307201	1					
ANR	6307266	PrimaryExpression	0		6307201	1					
ANR	6307267	ExpressionStatement	"fprintf ( stderr , ""Memory squeezing @ %d complete\\n"" , globals . squeezeAt )"	671:12:19232:19302	6307201	1	True				
ANR	6307268	CallExpression	"fprintf ( stderr , ""Memory squeezing @ %d complete\\n"" , globals . squeezeAt )"		6307201	0					
ANR	6307269	Callee	fprintf		6307201	0					
ANR	6307270	Identifier	fprintf		6307201	0					
ANR	6307271	ArgumentList	stderr		6307201	1					
ANR	6307272	Argument	stderr		6307201	0					
ANR	6307273	Identifier	stderr		6307201	0					
ANR	6307274	Argument	"""Memory squeezing @ %d complete\\n"""		6307201	1					
ANR	6307275	PrimaryExpression	"""Memory squeezing @ %d complete\\n"""		6307201	0					
ANR	6307276	Argument	globals . squeezeAt		6307201	2					
ANR	6307277	MemberAccess	globals . squeezeAt		6307201	0					
ANR	6307278	Identifier	globals		6307201	0					
ANR	6307279	Identifier	squeezeAt		6307201	1					
ANR	6307280	ElseStatement	else		6307201	0					
ANR	6307281	ExpressionStatement	"fprintf ( stderr , ""Memory squeezing @ %d (%d) complete\\n"" , globals . squeezeAt , globals . pattern )"	673:12:19329:19421	6307201	0	True				
ANR	6307282	CallExpression	"fprintf ( stderr , ""Memory squeezing @ %d (%d) complete\\n"" , globals . squeezeAt , globals . pattern )"		6307201	0					
ANR	6307283	Callee	fprintf		6307201	0					
ANR	6307284	Identifier	fprintf		6307201	0					
ANR	6307285	ArgumentList	stderr		6307201	1					
ANR	6307286	Argument	stderr		6307201	0					
ANR	6307287	Identifier	stderr		6307201	0					
ANR	6307288	Argument	"""Memory squeezing @ %d (%d) complete\\n"""		6307201	1					
ANR	6307289	PrimaryExpression	"""Memory squeezing @ %d (%d) complete\\n"""		6307201	0					
ANR	6307290	Argument	globals . squeezeAt		6307201	2					
ANR	6307291	MemberAccess	globals . squeezeAt		6307201	0					
ANR	6307292	Identifier	globals		6307201	0					
ANR	6307293	Identifier	squeezeAt		6307201	1					
ANR	6307294	Argument	globals . pattern		6307201	3					
ANR	6307295	MemberAccess	globals . pattern		6307201	0					
ANR	6307296	Identifier	globals		6307201	0					
ANR	6307297	Identifier	pattern		6307201	1					
ANR	6307298	IfStatement	if ( globals . failing )		6307201	4					
ANR	6307299	Condition	globals . failing	675:8:19437:19451	6307201	0	True				
ANR	6307300	MemberAccess	globals . failing		6307201	0					
ANR	6307301	Identifier	globals		6307201	0					
ANR	6307302	Identifier	failing		6307201	1					
ANR	6307303	CompoundStatement		16:25:575:575	6307201	1					
ANR	6307304	ExpressionStatement	"fprintf ( stderr , ""MEMENTO_FAILAT=%d\\n"" , globals . failAt )"	676:8:19464:19518	6307201	0	True				
ANR	6307305	CallExpression	"fprintf ( stderr , ""MEMENTO_FAILAT=%d\\n"" , globals . failAt )"		6307201	0					
ANR	6307306	Callee	fprintf		6307201	0					
ANR	6307307	Identifier	fprintf		6307201	0					
ANR	6307308	ArgumentList	stderr		6307201	1					
ANR	6307309	Argument	stderr		6307201	0					
ANR	6307310	Identifier	stderr		6307201	0					
ANR	6307311	Argument	"""MEMENTO_FAILAT=%d\\n"""		6307201	1					
ANR	6307312	PrimaryExpression	"""MEMENTO_FAILAT=%d\\n"""		6307201	0					
ANR	6307313	Argument	globals . failAt		6307201	2					
ANR	6307314	MemberAccess	globals . failAt		6307201	0					
ANR	6307315	Identifier	globals		6307201	0					
ANR	6307316	Identifier	failAt		6307201	1					
ANR	6307317	ExpressionStatement	"fprintf ( stderr , ""MEMENTO_PATTERN=%d\\n"" , globals . pattern )"	677:8:19528:19584	6307201	1	True				
ANR	6307318	CallExpression	"fprintf ( stderr , ""MEMENTO_PATTERN=%d\\n"" , globals . pattern )"		6307201	0					
ANR	6307319	Callee	fprintf		6307201	0					
ANR	6307320	Identifier	fprintf		6307201	0					
ANR	6307321	ArgumentList	stderr		6307201	1					
ANR	6307322	Argument	stderr		6307201	0					
ANR	6307323	Identifier	stderr		6307201	0					
ANR	6307324	Argument	"""MEMENTO_PATTERN=%d\\n"""		6307201	1					
ANR	6307325	PrimaryExpression	"""MEMENTO_PATTERN=%d\\n"""		6307201	0					
ANR	6307326	Argument	globals . pattern		6307201	2					
ANR	6307327	MemberAccess	globals . pattern		6307201	0					
ANR	6307328	Identifier	globals		6307201	0					
ANR	6307329	Identifier	pattern		6307201	1					
ANR	6307330	IfStatement	if ( globals . nextFailAt != 0 )		6307201	5					
ANR	6307331	Condition	globals . nextFailAt != 0	679:8:19600:19622	6307201	0	True				
ANR	6307332	EqualityExpression	globals . nextFailAt != 0		6307201	0		!=			
ANR	6307333	MemberAccess	globals . nextFailAt		6307201	0					
ANR	6307334	Identifier	globals		6307201	0					
ANR	6307335	Identifier	nextFailAt		6307201	1					
ANR	6307336	PrimaryExpression	0		6307201	1					
ANR	6307337	CompoundStatement		20:33:746:746	6307201	1					
ANR	6307338	ExpressionStatement	"fprintf ( stderr , ""MEMENTO_NEXTFAILAT=%d\\n"" , globals . nextFailAt )"	680:8:19635:19697	6307201	0	True				
ANR	6307339	CallExpression	"fprintf ( stderr , ""MEMENTO_NEXTFAILAT=%d\\n"" , globals . nextFailAt )"		6307201	0					
ANR	6307340	Callee	fprintf		6307201	0					
ANR	6307341	Identifier	fprintf		6307201	0					
ANR	6307342	ArgumentList	stderr		6307201	1					
ANR	6307343	Argument	stderr		6307201	0					
ANR	6307344	Identifier	stderr		6307201	0					
ANR	6307345	Argument	"""MEMENTO_NEXTFAILAT=%d\\n"""		6307201	1					
ANR	6307346	PrimaryExpression	"""MEMENTO_NEXTFAILAT=%d\\n"""		6307201	0					
ANR	6307347	Argument	globals . nextFailAt		6307201	2					
ANR	6307348	MemberAccess	globals . nextFailAt		6307201	0					
ANR	6307349	Identifier	globals		6307201	0					
ANR	6307350	Identifier	nextFailAt		6307201	1					
ANR	6307351	ExpressionStatement	"fprintf ( stderr , ""MEMENTO_NEXTPATTERN=%d\\n"" , globals . nextPattern )"	681:8:19707:19771	6307201	1	True				
ANR	6307352	CallExpression	"fprintf ( stderr , ""MEMENTO_NEXTPATTERN=%d\\n"" , globals . nextPattern )"		6307201	0					
ANR	6307353	Callee	fprintf		6307201	0					
ANR	6307354	Identifier	fprintf		6307201	0					
ANR	6307355	ArgumentList	stderr		6307201	1					
ANR	6307356	Argument	stderr		6307201	0					
ANR	6307357	Identifier	stderr		6307201	0					
ANR	6307358	Argument	"""MEMENTO_NEXTPATTERN=%d\\n"""		6307201	1					
ANR	6307359	PrimaryExpression	"""MEMENTO_NEXTPATTERN=%d\\n"""		6307201	0					
ANR	6307360	Argument	globals . nextPattern		6307201	2					
ANR	6307361	MemberAccess	globals . nextPattern		6307201	0					
ANR	6307362	Identifier	globals		6307201	0					
ANR	6307363	Identifier	nextPattern		6307201	1					
ANR	6307364	ReturnType	static void		6307201	1					
ANR	6307365	Identifier	Memento_fin		6307201	2					
ANR	6307366	ParameterList			6307201	3					
ANR	6307367	CFGEntryNode	ENTRY		6307201		True				
ANR	6307368	CFGExitNode	EXIT		6307201		True				
ANR	6307369	Symbol	globals . squeezing		6307201						
ANR	6307370	Symbol	NULL		6307201						
ANR	6307371	Symbol	globals		6307201						
ANR	6307372	Symbol	stderr		6307201						
ANR	6307373	Symbol	globals . squeezeAt		6307201						
ANR	6307374	Symbol	globals . nextFailAt		6307201						
ANR	6307375	Symbol	globals . segv		6307201						
ANR	6307376	Symbol	globals . failAt		6307201						
ANR	6307377	Symbol	globals . used		6307201						
ANR	6307378	Symbol	globals . pattern		6307201						
ANR	6307379	Symbol	globals . failing		6307201						
ANR	6307380	Symbol	globals . nextPattern		6307201						
ANR	6307381	Symbol	globals . used . head		6307201						
ANR	6307382	Function	Memento_inited	685:0:19782:19857							
ANR	6307383	FunctionDef	Memento_inited ()		6307382	0					
ANR	6307384	CompoundStatement		687:0:19815:19857	6307382	0					
ANR	6307385	ReturnType	static void		6307382	1					
ANR	6307386	Identifier	Memento_inited		6307382	2					
ANR	6307387	ParameterList			6307382	3					
ANR	6307388	CFGEntryNode	ENTRY		6307382		True				
ANR	6307389	CFGExitNode	EXIT		6307382		True				
ANR	6307390	Function	Memento_init	691:0:19860:20804							
ANR	6307391	FunctionDef	Memento_init ()		6307390	0					
ANR	6307392	CompoundStatement		693:0:19891:20804	6307390	0					
ANR	6307393	IdentifierDeclStatement	char * env ;	694:4:19897:19906	6307390	0	True				
ANR	6307394	IdentifierDecl	* env		6307390	0					
ANR	6307395	IdentifierDeclType	char *		6307390	0					
ANR	6307396	Identifier	env		6307390	1					
ANR	6307397	ExpressionStatement	"memset ( & globals , 0 , sizeof ( globals ) )"	696:4:19913:19949	6307390	1	True				
ANR	6307398	CallExpression	"memset ( & globals , 0 , sizeof ( globals ) )"		6307390	0					
ANR	6307399	Callee	memset		6307390	0					
ANR	6307400	Identifier	memset		6307390	0					
ANR	6307401	ArgumentList	& globals		6307390	1					
ANR	6307402	Argument	& globals		6307390	0					
ANR	6307403	UnaryOperationExpression	& globals		6307390	0					
ANR	6307404	UnaryOperator	&		6307390	0					
ANR	6307405	Identifier	globals		6307390	1					
ANR	6307406	Argument	0		6307390	1					
ANR	6307407	PrimaryExpression	0		6307390	0					
ANR	6307408	Argument	sizeof ( globals )		6307390	2					
ANR	6307409	SizeofExpression	sizeof ( globals )		6307390	0					
ANR	6307410	Sizeof	sizeof		6307390	0					
ANR	6307411	SizeofOperand	globals		6307390	1					
ANR	6307412	ExpressionStatement	globals . inited = 1	697:4:19955:19973	6307390	2	True				
ANR	6307413	AssignmentExpression	globals . inited = 1		6307390	0		=			
ANR	6307414	MemberAccess	globals . inited		6307390	0					
ANR	6307415	Identifier	globals		6307390	0					
ANR	6307416	Identifier	inited		6307390	1					
ANR	6307417	PrimaryExpression	1		6307390	1					
ANR	6307418	ExpressionStatement	globals . used . head = NULL	698:4:19979:20003	6307390	3	True				
ANR	6307419	AssignmentExpression	globals . used . head = NULL		6307390	0		=			
ANR	6307420	MemberAccess	globals . used . head		6307390	0					
ANR	6307421	MemberAccess	globals . used		6307390	0					
ANR	6307422	Identifier	globals		6307390	0					
ANR	6307423	Identifier	used		6307390	1					
ANR	6307424	Identifier	head		6307390	1					
ANR	6307425	Identifier	NULL		6307390	1					
ANR	6307426	ExpressionStatement	globals . used . tail = & globals . used . head	699:4:20009:20047	6307390	4	True				
ANR	6307427	AssignmentExpression	globals . used . tail = & globals . used . head		6307390	0		=			
ANR	6307428	MemberAccess	globals . used . tail		6307390	0					
ANR	6307429	MemberAccess	globals . used		6307390	0					
ANR	6307430	Identifier	globals		6307390	0					
ANR	6307431	Identifier	used		6307390	1					
ANR	6307432	Identifier	tail		6307390	1					
ANR	6307433	UnaryOperationExpression	& globals . used . head		6307390	1					
ANR	6307434	UnaryOperator	&		6307390	0					
ANR	6307435	MemberAccess	globals . used . head		6307390	1					
ANR	6307436	MemberAccess	globals . used		6307390	0					
ANR	6307437	Identifier	globals		6307390	0					
ANR	6307438	Identifier	used		6307390	1					
ANR	6307439	Identifier	head		6307390	1					
ANR	6307440	ExpressionStatement	globals . free . head = NULL	700:4:20053:20077	6307390	5	True				
ANR	6307441	AssignmentExpression	globals . free . head = NULL		6307390	0		=			
ANR	6307442	MemberAccess	globals . free . head		6307390	0					
ANR	6307443	MemberAccess	globals . free		6307390	0					
ANR	6307444	Identifier	globals		6307390	0					
ANR	6307445	Identifier	free		6307390	1					
ANR	6307446	Identifier	head		6307390	1					
ANR	6307447	Identifier	NULL		6307390	1					
ANR	6307448	ExpressionStatement	globals . free . tail = & globals . free . head	701:4:20083:20121	6307390	6	True				
ANR	6307449	AssignmentExpression	globals . free . tail = & globals . free . head		6307390	0		=			
ANR	6307450	MemberAccess	globals . free . tail		6307390	0					
ANR	6307451	MemberAccess	globals . free		6307390	0					
ANR	6307452	Identifier	globals		6307390	0					
ANR	6307453	Identifier	free		6307390	1					
ANR	6307454	Identifier	tail		6307390	1					
ANR	6307455	UnaryOperationExpression	& globals . free . head		6307390	1					
ANR	6307456	UnaryOperator	&		6307390	0					
ANR	6307457	MemberAccess	globals . free . head		6307390	1					
ANR	6307458	MemberAccess	globals . free		6307390	0					
ANR	6307459	Identifier	globals		6307390	0					
ANR	6307460	Identifier	free		6307390	1					
ANR	6307461	Identifier	head		6307390	1					
ANR	6307462	ExpressionStatement	globals . sequence = 0	702:4:20127:20147	6307390	7	True				
ANR	6307463	AssignmentExpression	globals . sequence = 0		6307390	0		=			
ANR	6307464	MemberAccess	globals . sequence		6307390	0					
ANR	6307465	Identifier	globals		6307390	0					
ANR	6307466	Identifier	sequence		6307390	1					
ANR	6307467	PrimaryExpression	0		6307390	1					
ANR	6307468	ExpressionStatement	globals . countdown = 1024	703:4:20153:20177	6307390	8	True				
ANR	6307469	AssignmentExpression	globals . countdown = 1024		6307390	0		=			
ANR	6307470	MemberAccess	globals . countdown		6307390	0					
ANR	6307471	Identifier	globals		6307390	0					
ANR	6307472	Identifier	countdown		6307390	1					
ANR	6307473	PrimaryExpression	1024		6307390	1					
ANR	6307474	ExpressionStatement	"env = getenv ( ""MEMENTO_FAILAT"" )"	705:4:20184:20214	6307390	9	True				
ANR	6307475	AssignmentExpression	"env = getenv ( ""MEMENTO_FAILAT"" )"		6307390	0		=			
ANR	6307476	Identifier	env		6307390	0					
ANR	6307477	CallExpression	"getenv ( ""MEMENTO_FAILAT"" )"		6307390	1					
ANR	6307478	Callee	getenv		6307390	0					
ANR	6307479	Identifier	getenv		6307390	0					
ANR	6307480	ArgumentList	"""MEMENTO_FAILAT"""		6307390	1					
ANR	6307481	Argument	"""MEMENTO_FAILAT"""		6307390	0					
ANR	6307482	PrimaryExpression	"""MEMENTO_FAILAT"""		6307390	0					
ANR	6307483	ExpressionStatement	globals . failAt = ( env ? atoi ( env ) : 0 )	706:4:20220:20258	6307390	10	True				
ANR	6307484	AssignmentExpression	globals . failAt = ( env ? atoi ( env ) : 0 )		6307390	0		=			
ANR	6307485	MemberAccess	globals . failAt		6307390	0					
ANR	6307486	Identifier	globals		6307390	0					
ANR	6307487	Identifier	failAt		6307390	1					
ANR	6307488	ConditionalExpression	env ? atoi ( env ) : 0		6307390	1					
ANR	6307489	Condition	env		6307390	0					
ANR	6307490	Identifier	env		6307390	0					
ANR	6307491	CallExpression	atoi ( env )		6307390	1					
ANR	6307492	Callee	atoi		6307390	0					
ANR	6307493	Identifier	atoi		6307390	0					
ANR	6307494	ArgumentList	env		6307390	1					
ANR	6307495	Argument	env		6307390	0					
ANR	6307496	Identifier	env		6307390	0					
ANR	6307497	PrimaryExpression	0		6307390	2					
ANR	6307498	ExpressionStatement	"env = getenv ( ""MEMENTO_PARANOIA"" )"	708:4:20265:20297	6307390	11	True				
ANR	6307499	AssignmentExpression	"env = getenv ( ""MEMENTO_PARANOIA"" )"		6307390	0		=			
ANR	6307500	Identifier	env		6307390	0					
ANR	6307501	CallExpression	"getenv ( ""MEMENTO_PARANOIA"" )"		6307390	1					
ANR	6307502	Callee	getenv		6307390	0					
ANR	6307503	Identifier	getenv		6307390	0					
ANR	6307504	ArgumentList	"""MEMENTO_PARANOIA"""		6307390	1					
ANR	6307505	Argument	"""MEMENTO_PARANOIA"""		6307390	0					
ANR	6307506	PrimaryExpression	"""MEMENTO_PARANOIA"""		6307390	0					
ANR	6307507	ExpressionStatement	globals . paranoia = ( env ? atoi ( env ) : 0 )	709:4:20303:20343	6307390	12	True				
ANR	6307508	AssignmentExpression	globals . paranoia = ( env ? atoi ( env ) : 0 )		6307390	0		=			
ANR	6307509	MemberAccess	globals . paranoia		6307390	0					
ANR	6307510	Identifier	globals		6307390	0					
ANR	6307511	Identifier	paranoia		6307390	1					
ANR	6307512	ConditionalExpression	env ? atoi ( env ) : 0		6307390	1					
ANR	6307513	Condition	env		6307390	0					
ANR	6307514	Identifier	env		6307390	0					
ANR	6307515	CallExpression	atoi ( env )		6307390	1					
ANR	6307516	Callee	atoi		6307390	0					
ANR	6307517	Identifier	atoi		6307390	0					
ANR	6307518	ArgumentList	env		6307390	1					
ANR	6307519	Argument	env		6307390	0					
ANR	6307520	Identifier	env		6307390	0					
ANR	6307521	PrimaryExpression	0		6307390	2					
ANR	6307522	IfStatement	if ( globals . paranoia == 0 )		6307390	13					
ANR	6307523	Condition	globals . paranoia == 0	710:8:20353:20373	6307390	0	True				
ANR	6307524	EqualityExpression	globals . paranoia == 0		6307390	0		==			
ANR	6307525	MemberAccess	globals . paranoia		6307390	0					
ANR	6307526	Identifier	globals		6307390	0					
ANR	6307527	Identifier	paranoia		6307390	1					
ANR	6307528	PrimaryExpression	0		6307390	1					
ANR	6307529	ExpressionStatement	globals . paranoia = 1024	711:8:20384:20407	6307390	1	True				
ANR	6307530	AssignmentExpression	globals . paranoia = 1024		6307390	0		=			
ANR	6307531	MemberAccess	globals . paranoia		6307390	0					
ANR	6307532	Identifier	globals		6307390	0					
ANR	6307533	Identifier	paranoia		6307390	1					
ANR	6307534	PrimaryExpression	1024		6307390	1					
ANR	6307535	ExpressionStatement	"env = getenv ( ""MEMENTO_PARANOIDAT"" )"	713:4:20414:20448	6307390	14	True				
ANR	6307536	AssignmentExpression	"env = getenv ( ""MEMENTO_PARANOIDAT"" )"		6307390	0		=			
ANR	6307537	Identifier	env		6307390	0					
ANR	6307538	CallExpression	"getenv ( ""MEMENTO_PARANOIDAT"" )"		6307390	1					
ANR	6307539	Callee	getenv		6307390	0					
ANR	6307540	Identifier	getenv		6307390	0					
ANR	6307541	ArgumentList	"""MEMENTO_PARANOIDAT"""		6307390	1					
ANR	6307542	Argument	"""MEMENTO_PARANOIDAT"""		6307390	0					
ANR	6307543	PrimaryExpression	"""MEMENTO_PARANOIDAT"""		6307390	0					
ANR	6307544	ExpressionStatement	globals . paranoidAt = ( env ? atoi ( env ) : 0 )	714:4:20454:20496	6307390	15	True				
ANR	6307545	AssignmentExpression	globals . paranoidAt = ( env ? atoi ( env ) : 0 )		6307390	0		=			
ANR	6307546	MemberAccess	globals . paranoidAt		6307390	0					
ANR	6307547	Identifier	globals		6307390	0					
ANR	6307548	Identifier	paranoidAt		6307390	1					
ANR	6307549	ConditionalExpression	env ? atoi ( env ) : 0		6307390	1					
ANR	6307550	Condition	env		6307390	0					
ANR	6307551	Identifier	env		6307390	0					
ANR	6307552	CallExpression	atoi ( env )		6307390	1					
ANR	6307553	Callee	atoi		6307390	0					
ANR	6307554	Identifier	atoi		6307390	0					
ANR	6307555	ArgumentList	env		6307390	1					
ANR	6307556	Argument	env		6307390	0					
ANR	6307557	Identifier	env		6307390	0					
ANR	6307558	PrimaryExpression	0		6307390	2					
ANR	6307559	ExpressionStatement	"env = getenv ( ""MEMENTO_SQUEEZEAT"" )"	716:4:20503:20536	6307390	16	True				
ANR	6307560	AssignmentExpression	"env = getenv ( ""MEMENTO_SQUEEZEAT"" )"		6307390	0		=			
ANR	6307561	Identifier	env		6307390	0					
ANR	6307562	CallExpression	"getenv ( ""MEMENTO_SQUEEZEAT"" )"		6307390	1					
ANR	6307563	Callee	getenv		6307390	0					
ANR	6307564	Identifier	getenv		6307390	0					
ANR	6307565	ArgumentList	"""MEMENTO_SQUEEZEAT"""		6307390	1					
ANR	6307566	Argument	"""MEMENTO_SQUEEZEAT"""		6307390	0					
ANR	6307567	PrimaryExpression	"""MEMENTO_SQUEEZEAT"""		6307390	0					
ANR	6307568	ExpressionStatement	globals . squeezeAt = ( env ? atoi ( env ) : 0 )	717:4:20542:20583	6307390	17	True				
ANR	6307569	AssignmentExpression	globals . squeezeAt = ( env ? atoi ( env ) : 0 )		6307390	0		=			
ANR	6307570	MemberAccess	globals . squeezeAt		6307390	0					
ANR	6307571	Identifier	globals		6307390	0					
ANR	6307572	Identifier	squeezeAt		6307390	1					
ANR	6307573	ConditionalExpression	env ? atoi ( env ) : 0		6307390	1					
ANR	6307574	Condition	env		6307390	0					
ANR	6307575	Identifier	env		6307390	0					
ANR	6307576	CallExpression	atoi ( env )		6307390	1					
ANR	6307577	Callee	atoi		6307390	0					
ANR	6307578	Identifier	atoi		6307390	0					
ANR	6307579	ArgumentList	env		6307390	1					
ANR	6307580	Argument	env		6307390	0					
ANR	6307581	Identifier	env		6307390	0					
ANR	6307582	PrimaryExpression	0		6307390	2					
ANR	6307583	ExpressionStatement	"env = getenv ( ""MEMENTO_PATTERN"" )"	719:4:20590:20621	6307390	18	True				
ANR	6307584	AssignmentExpression	"env = getenv ( ""MEMENTO_PATTERN"" )"		6307390	0		=			
ANR	6307585	Identifier	env		6307390	0					
ANR	6307586	CallExpression	"getenv ( ""MEMENTO_PATTERN"" )"		6307390	1					
ANR	6307587	Callee	getenv		6307390	0					
ANR	6307588	Identifier	getenv		6307390	0					
ANR	6307589	ArgumentList	"""MEMENTO_PATTERN"""		6307390	1					
ANR	6307590	Argument	"""MEMENTO_PATTERN"""		6307390	0					
ANR	6307591	PrimaryExpression	"""MEMENTO_PATTERN"""		6307390	0					
ANR	6307592	ExpressionStatement	globals . pattern = ( env ? atoi ( env ) : 0 )	720:4:20627:20666	6307390	19	True				
ANR	6307593	AssignmentExpression	globals . pattern = ( env ? atoi ( env ) : 0 )		6307390	0		=			
ANR	6307594	MemberAccess	globals . pattern		6307390	0					
ANR	6307595	Identifier	globals		6307390	0					
ANR	6307596	Identifier	pattern		6307390	1					
ANR	6307597	ConditionalExpression	env ? atoi ( env ) : 0		6307390	1					
ANR	6307598	Condition	env		6307390	0					
ANR	6307599	Identifier	env		6307390	0					
ANR	6307600	CallExpression	atoi ( env )		6307390	1					
ANR	6307601	Callee	atoi		6307390	0					
ANR	6307602	Identifier	atoi		6307390	0					
ANR	6307603	ArgumentList	env		6307390	1					
ANR	6307604	Argument	env		6307390	0					
ANR	6307605	Identifier	env		6307390	0					
ANR	6307606	PrimaryExpression	0		6307390	2					
ANR	6307607	ExpressionStatement	"env = getenv ( ""MEMENTO_MAXMEMORY"" )"	722:4:20673:20706	6307390	20	True				
ANR	6307608	AssignmentExpression	"env = getenv ( ""MEMENTO_MAXMEMORY"" )"		6307390	0		=			
ANR	6307609	Identifier	env		6307390	0					
ANR	6307610	CallExpression	"getenv ( ""MEMENTO_MAXMEMORY"" )"		6307390	1					
ANR	6307611	Callee	getenv		6307390	0					
ANR	6307612	Identifier	getenv		6307390	0					
ANR	6307613	ArgumentList	"""MEMENTO_MAXMEMORY"""		6307390	1					
ANR	6307614	Argument	"""MEMENTO_MAXMEMORY"""		6307390	0					
ANR	6307615	PrimaryExpression	"""MEMENTO_MAXMEMORY"""		6307390	0					
ANR	6307616	ExpressionStatement	globals . maxMemory = ( env ? atoi ( env ) : 0 )	723:4:20712:20753	6307390	21	True				
ANR	6307617	AssignmentExpression	globals . maxMemory = ( env ? atoi ( env ) : 0 )		6307390	0		=			
ANR	6307618	MemberAccess	globals . maxMemory		6307390	0					
ANR	6307619	Identifier	globals		6307390	0					
ANR	6307620	Identifier	maxMemory		6307390	1					
ANR	6307621	ConditionalExpression	env ? atoi ( env ) : 0		6307390	1					
ANR	6307622	Condition	env		6307390	0					
ANR	6307623	Identifier	env		6307390	0					
ANR	6307624	CallExpression	atoi ( env )		6307390	1					
ANR	6307625	Callee	atoi		6307390	0					
ANR	6307626	Identifier	atoi		6307390	0					
ANR	6307627	ArgumentList	env		6307390	1					
ANR	6307628	Argument	env		6307390	0					
ANR	6307629	Identifier	env		6307390	0					
ANR	6307630	PrimaryExpression	0		6307390	2					
ANR	6307631	ExpressionStatement	atexit ( Memento_fin )	725:4:20760:20779	6307390	22	True				
ANR	6307632	CallExpression	atexit ( Memento_fin )		6307390	0					
ANR	6307633	Callee	atexit		6307390	0					
ANR	6307634	Identifier	atexit		6307390	0					
ANR	6307635	ArgumentList	Memento_fin		6307390	1					
ANR	6307636	Argument	Memento_fin		6307390	0					
ANR	6307637	Identifier	Memento_fin		6307390	0					
ANR	6307638	ExpressionStatement	Memento_inited ( )	727:4:20786:20802	6307390	23	True				
ANR	6307639	CallExpression	Memento_inited ( )		6307390	0					
ANR	6307640	Callee	Memento_inited		6307390	0					
ANR	6307641	Identifier	Memento_inited		6307390	0					
ANR	6307642	ArgumentList			6307390	1					
ANR	6307643	ReturnType	static void		6307390	1					
ANR	6307644	Identifier	Memento_init		6307390	2					
ANR	6307645	ParameterList			6307390	3					
ANR	6307646	CFGEntryNode	ENTRY		6307390		True				
ANR	6307647	CFGExitNode	EXIT		6307390		True				
ANR	6307648	Symbol	Memento_fin		6307390						
ANR	6307649	Symbol	globals . paranoidAt		6307390						
ANR	6307650	Symbol	globals . inited		6307390						
ANR	6307651	Symbol	globals		6307390						
ANR	6307652	Symbol	globals . maxMemory		6307390						
ANR	6307653	Symbol	globals . squeezeAt		6307390						
ANR	6307654	Symbol	globals . used . tail		6307390						
ANR	6307655	Symbol	globals . pattern		6307390						
ANR	6307656	Symbol	& globals . free . head		6307390						
ANR	6307657	Symbol	& globals . used		6307390						
ANR	6307658	Symbol	globals . used . head		6307390						
ANR	6307659	Symbol	globals . sequence		6307390						
ANR	6307660	Symbol	getenv		6307390						
ANR	6307661	Symbol	atoi		6307390						
ANR	6307662	Symbol	NULL		6307390						
ANR	6307663	Symbol	globals . free		6307390						
ANR	6307664	Symbol	env		6307390						
ANR	6307665	Symbol	globals . failAt		6307390						
ANR	6307666	Symbol	globals . used		6307390						
ANR	6307667	Symbol	globals . free . tail		6307390						
ANR	6307668	Symbol	& globals		6307390						
ANR	6307669	Symbol	globals . countdown		6307390						
ANR	6307670	Symbol	& globals . free		6307390						
ANR	6307671	Symbol	& globals . used . head		6307390						
ANR	6307672	Symbol	globals . free . head		6307390						
ANR	6307673	Symbol	globals . paranoia		6307390						
ANR	6307674	DeclStmt									
ANR	6307675	Decl							int	int [ OPEN_MAX ]	stashed_map
ANR	6307676	DeclStmt									
ANR	6307677	Decl							extern size_t	"extern size_t ( void * * , int )"	backtrace
ANR	6307678	DeclStmt									
ANR	6307679	Decl							extern void	"extern void ( void * * , size_t , int )"	backtrace_symbols_fd
ANR	6307680	Function	Memento_signal	749:0:21301:21902							
ANR	6307681	FunctionDef	Memento_signal ()		6307680	0					
ANR	6307682	CompoundStatement		751:0:21334:21902	6307680	0					
ANR	6307683	ExpressionStatement	"fprintf ( stderr , ""SEGV after Memory squeezing @ %d\\n"" , globals . squeezeAt )"	752:4:21340:21412	6307680	0	True				
ANR	6307684	CallExpression	"fprintf ( stderr , ""SEGV after Memory squeezing @ %d\\n"" , globals . squeezeAt )"		6307680	0					
ANR	6307685	Callee	fprintf		6307680	0					
ANR	6307686	Identifier	fprintf		6307680	0					
ANR	6307687	ArgumentList	stderr		6307680	1					
ANR	6307688	Argument	stderr		6307680	0					
ANR	6307689	Identifier	stderr		6307680	0					
ANR	6307690	Argument	"""SEGV after Memory squeezing @ %d\\n"""		6307680	1					
ANR	6307691	PrimaryExpression	"""SEGV after Memory squeezing @ %d\\n"""		6307680	0					
ANR	6307692	Argument	globals . squeezeAt		6307680	2					
ANR	6307693	MemberAccess	globals . squeezeAt		6307680	0					
ANR	6307694	Identifier	globals		6307680	0					
ANR	6307695	Identifier	squeezeAt		6307680	1					
ANR	6307696	CompoundStatement		8:8:188:199	6307680	1					
ANR	6307697	IdentifierDeclStatement	void * array [ 100 ] ;	757:8:21497:21513	6307680	0	True				
ANR	6307698	IdentifierDecl	* array [ 100 ]		6307680	0					
ANR	6307699	IdentifierDeclType	void * [ 100 ]		6307680	0					
ANR	6307700	Identifier	array		6307680	1					
ANR	6307701	PrimaryExpression	100		6307680	2					
ANR	6307702	IdentifierDeclStatement	size_t size ;	758:8:21523:21534	6307680	1	True				
ANR	6307703	IdentifierDecl	size		6307680	0					
ANR	6307704	IdentifierDeclType	size_t		6307680	0					
ANR	6307705	Identifier	size		6307680	1					
ANR	6307706	ExpressionStatement	"size = backtrace ( array , 100 )"	760:8:21545:21573	6307680	2	True				
ANR	6307707	AssignmentExpression	"size = backtrace ( array , 100 )"		6307680	0		=			
ANR	6307708	Identifier	size		6307680	0					
ANR	6307709	CallExpression	"backtrace ( array , 100 )"		6307680	1					
ANR	6307710	Callee	backtrace		6307680	0					
ANR	6307711	Identifier	backtrace		6307680	0					
ANR	6307712	ArgumentList	array		6307680	1					
ANR	6307713	Argument	array		6307680	0					
ANR	6307714	Identifier	array		6307680	0					
ANR	6307715	Argument	100		6307680	1					
ANR	6307716	PrimaryExpression	100		6307680	0					
ANR	6307717	ExpressionStatement	"fprintf ( stderr , ""------------------------------------------------------------------------\\n"" )"	761:8:21583:21676	6307680	3	True				
ANR	6307718	CallExpression	"fprintf ( stderr , ""------------------------------------------------------------------------\\n"" )"		6307680	0					
ANR	6307719	Callee	fprintf		6307680	0					
ANR	6307720	Identifier	fprintf		6307680	0					
ANR	6307721	ArgumentList	stderr		6307680	1					
ANR	6307722	Argument	stderr		6307680	0					
ANR	6307723	Identifier	stderr		6307680	0					
ANR	6307724	Argument	"""------------------------------------------------------------------------\\n"""		6307680	1					
ANR	6307725	PrimaryExpression	"""------------------------------------------------------------------------\\n"""		6307680	0					
ANR	6307726	ExpressionStatement	"fprintf ( stderr , ""Backtrace:\\n"" )"	762:8:21686:21717	6307680	4	True				
ANR	6307727	CallExpression	"fprintf ( stderr , ""Backtrace:\\n"" )"		6307680	0					
ANR	6307728	Callee	fprintf		6307680	0					
ANR	6307729	Identifier	fprintf		6307680	0					
ANR	6307730	ArgumentList	stderr		6307680	1					
ANR	6307731	Argument	stderr		6307680	0					
ANR	6307732	Identifier	stderr		6307680	0					
ANR	6307733	Argument	"""Backtrace:\\n"""		6307680	1					
ANR	6307734	PrimaryExpression	"""Backtrace:\\n"""		6307680	0					
ANR	6307735	ExpressionStatement	"backtrace_symbols_fd ( array , size , 2 )"	763:8:21727:21763	6307680	5	True				
ANR	6307736	CallExpression	"backtrace_symbols_fd ( array , size , 2 )"		6307680	0					
ANR	6307737	Callee	backtrace_symbols_fd		6307680	0					
ANR	6307738	Identifier	backtrace_symbols_fd		6307680	0					
ANR	6307739	ArgumentList	array		6307680	1					
ANR	6307740	Argument	array		6307680	0					
ANR	6307741	Identifier	array		6307680	0					
ANR	6307742	Argument	size		6307680	1					
ANR	6307743	Identifier	size		6307680	0					
ANR	6307744	Argument	2		6307680	2					
ANR	6307745	PrimaryExpression	2		6307680	0					
ANR	6307746	ExpressionStatement	"fprintf ( stderr , ""------------------------------------------------------------------------\\n"" )"	764:8:21773:21866	6307680	6	True				
ANR	6307747	CallExpression	"fprintf ( stderr , ""------------------------------------------------------------------------\\n"" )"		6307680	0					
ANR	6307748	Callee	fprintf		6307680	0					
ANR	6307749	Identifier	fprintf		6307680	0					
ANR	6307750	ArgumentList	stderr		6307680	1					
ANR	6307751	Argument	stderr		6307680	0					
ANR	6307752	Identifier	stderr		6307680	0					
ANR	6307753	Argument	"""------------------------------------------------------------------------\\n"""		6307680	1					
ANR	6307754	PrimaryExpression	"""------------------------------------------------------------------------\\n"""		6307680	0					
ANR	6307755	ExpressionStatement	exit ( 1 )	769:4:21893:21900	6307680	2	True				
ANR	6307756	CallExpression	exit ( 1 )		6307680	0					
ANR	6307757	Callee	exit		6307680	0					
ANR	6307758	Identifier	exit		6307680	0					
ANR	6307759	ArgumentList	1		6307680	1					
ANR	6307760	Argument	1		6307680	0					
ANR	6307761	PrimaryExpression	1		6307680	0					
ANR	6307762	ReturnType	static void		6307680	1					
ANR	6307763	Identifier	Memento_signal		6307680	2					
ANR	6307764	ParameterList			6307680	3					
ANR	6307765	CFGEntryNode	ENTRY		6307680		True				
ANR	6307766	CFGExitNode	EXIT		6307680		True				
ANR	6307767	Symbol	size		6307680						
ANR	6307768	Symbol	array		6307680						
ANR	6307769	Symbol	backtrace		6307680						
ANR	6307770	Symbol	globals		6307680						
ANR	6307771	Symbol	globals . squeezeAt		6307680						
ANR	6307772	Symbol	stderr		6307680						
ANR	6307773	Function	squeeze	772:0:21905:23700							
ANR	6307774	FunctionDef	squeeze ()		6307773	0					
ANR	6307775	CompoundStatement		774:0:21930:23700	6307773	0					
ANR	6307776	IdentifierDeclStatement	pid_t pid ;	775:4:21936:21945	6307773	0	True				
ANR	6307777	IdentifierDecl	pid		6307773	0					
ANR	6307778	IdentifierDeclType	pid_t		6307773	0					
ANR	6307779	Identifier	pid		6307773	1					
ANR	6307780	IdentifierDeclStatement	"int i , status ;"	776:4:21951:21964	6307773	1	True				
ANR	6307781	IdentifierDecl	i		6307773	0					
ANR	6307782	IdentifierDeclType	int		6307773	0					
ANR	6307783	Identifier	i		6307773	1					
ANR	6307784	IdentifierDecl	status		6307773	1					
ANR	6307785	IdentifierDeclType	int		6307773	0					
ANR	6307786	Identifier	status		6307773	1					
ANR	6307787	IfStatement	if ( globals . patternBit < 0 )		6307773	2					
ANR	6307788	Condition	globals . patternBit < 0	778:8:21975:21996	6307773	0	True				
ANR	6307789	RelationalExpression	globals . patternBit < 0		6307773	0		<			
ANR	6307790	MemberAccess	globals . patternBit		6307773	0					
ANR	6307791	Identifier	globals		6307773	0					
ANR	6307792	Identifier	patternBit		6307773	1					
ANR	6307793	PrimaryExpression	0		6307773	1					
ANR	6307794	ReturnStatement	return 1 ;	779:8:22007:22015	6307773	1	True				
ANR	6307795	PrimaryExpression	1		6307773	0					
ANR	6307796	IfStatement	if ( globals . squeezing && globals . patternBit >= MEMENTO_MAXPATTERN )		6307773	3					
ANR	6307797	Condition	globals . squeezing && globals . patternBit >= MEMENTO_MAXPATTERN	780:8:22025:22085	6307773	0	True				
ANR	6307798	AndExpression	globals . squeezing && globals . patternBit >= MEMENTO_MAXPATTERN		6307773	0		&&			
ANR	6307799	MemberAccess	globals . squeezing		6307773	0					
ANR	6307800	Identifier	globals		6307773	0					
ANR	6307801	Identifier	squeezing		6307773	1					
ANR	6307802	RelationalExpression	globals . patternBit >= MEMENTO_MAXPATTERN		6307773	1		>=			
ANR	6307803	MemberAccess	globals . patternBit		6307773	0					
ANR	6307804	Identifier	globals		6307773	0					
ANR	6307805	Identifier	patternBit		6307773	1					
ANR	6307806	Identifier	MEMENTO_MAXPATTERN		6307773	1					
ANR	6307807	ReturnStatement	return 1 ;	781:8:22096:22104	6307773	1	True				
ANR	6307808	PrimaryExpression	1		6307773	0					
ANR	6307809	IfStatement	if ( globals . patternBit == 0 )		6307773	4					
ANR	6307810	Condition	globals . patternBit == 0	783:8:22115:22137	6307773	0	True				
ANR	6307811	EqualityExpression	globals . patternBit == 0		6307773	0		==			
ANR	6307812	MemberAccess	globals . patternBit		6307773	0					
ANR	6307813	Identifier	globals		6307773	0					
ANR	6307814	Identifier	patternBit		6307773	1					
ANR	6307815	PrimaryExpression	0		6307773	1					
ANR	6307816	ExpressionStatement	globals . squeezeAt = globals . sequence	784:8:22148:22184	6307773	1	True				
ANR	6307817	AssignmentExpression	globals . squeezeAt = globals . sequence		6307773	0		=			
ANR	6307818	MemberAccess	globals . squeezeAt		6307773	0					
ANR	6307819	Identifier	globals		6307773	0					
ANR	6307820	Identifier	squeezeAt		6307773	1					
ANR	6307821	MemberAccess	globals . sequence		6307773	1					
ANR	6307822	Identifier	globals		6307773	0					
ANR	6307823	Identifier	sequence		6307773	1					
ANR	6307824	IfStatement	if ( ! globals . squeezing )		6307773	5					
ANR	6307825	Condition	! globals . squeezing	786:8:22195:22212	6307773	0	True				
ANR	6307826	UnaryOperationExpression	! globals . squeezing		6307773	0					
ANR	6307827	UnaryOperator	!		6307773	0					
ANR	6307828	MemberAccess	globals . squeezing		6307773	1					
ANR	6307829	Identifier	globals		6307773	0					
ANR	6307830	Identifier	squeezing		6307773	1					
ANR	6307831	CompoundStatement		13:28:284:284	6307773	1					
ANR	6307832	ExpressionStatement	"fprintf ( stderr , ""Memory squeezing @ %d\\n"" , globals . squeezeAt )"	787:8:22225:22286	6307773	0	True				
ANR	6307833	CallExpression	"fprintf ( stderr , ""Memory squeezing @ %d\\n"" , globals . squeezeAt )"		6307773	0					
ANR	6307834	Callee	fprintf		6307773	0					
ANR	6307835	Identifier	fprintf		6307773	0					
ANR	6307836	ArgumentList	stderr		6307773	1					
ANR	6307837	Argument	stderr		6307773	0					
ANR	6307838	Identifier	stderr		6307773	0					
ANR	6307839	Argument	"""Memory squeezing @ %d\\n"""		6307773	1					
ANR	6307840	PrimaryExpression	"""Memory squeezing @ %d\\n"""		6307773	0					
ANR	6307841	Argument	globals . squeezeAt		6307773	2					
ANR	6307842	MemberAccess	globals . squeezeAt		6307773	0					
ANR	6307843	Identifier	globals		6307773	0					
ANR	6307844	Identifier	squeezeAt		6307773	1					
ANR	6307845	ElseStatement	else		6307773	0					
ANR	6307846	ExpressionStatement	"fprintf ( stderr , ""Memory squeezing @ %d (%x,%x)\\n"" , globals . squeezeAt , globals . pattern , globals . patternBit )"	789:8:22307:22413	6307773	0	True				
ANR	6307847	CallExpression	"fprintf ( stderr , ""Memory squeezing @ %d (%x,%x)\\n"" , globals . squeezeAt , globals . pattern , globals . patternBit )"		6307773	0					
ANR	6307848	Callee	fprintf		6307773	0					
ANR	6307849	Identifier	fprintf		6307773	0					
ANR	6307850	ArgumentList	stderr		6307773	1					
ANR	6307851	Argument	stderr		6307773	0					
ANR	6307852	Identifier	stderr		6307773	0					
ANR	6307853	Argument	"""Memory squeezing @ %d (%x,%x)\\n"""		6307773	1					
ANR	6307854	PrimaryExpression	"""Memory squeezing @ %d (%x,%x)\\n"""		6307773	0					
ANR	6307855	Argument	globals . squeezeAt		6307773	2					
ANR	6307856	MemberAccess	globals . squeezeAt		6307773	0					
ANR	6307857	Identifier	globals		6307773	0					
ANR	6307858	Identifier	squeezeAt		6307773	1					
ANR	6307859	Argument	globals . pattern		6307773	3					
ANR	6307860	MemberAccess	globals . pattern		6307773	0					
ANR	6307861	Identifier	globals		6307773	0					
ANR	6307862	Identifier	pattern		6307773	1					
ANR	6307863	Argument	globals . patternBit		6307773	4					
ANR	6307864	MemberAccess	globals . patternBit		6307773	0					
ANR	6307865	Identifier	globals		6307773	0					
ANR	6307866	Identifier	patternBit		6307773	1					
ANR	6307867	ForStatement	for ( i = 0 ; i < OPEN_MAX ; i ++ )		6307773	6					
ANR	6307868	ForInit	i = 0 ;	794:9:22640:22645	6307773	0	True				
ANR	6307869	AssignmentExpression	i = 0		6307773	0		=			
ANR	6307870	Identifier	i		6307773	0					
ANR	6307871	PrimaryExpression	0		6307773	1					
ANR	6307872	Condition	i < OPEN_MAX	794:16:22647:22658	6307773	1	True				
ANR	6307873	RelationalExpression	i < OPEN_MAX		6307773	0		<			
ANR	6307874	Identifier	i		6307773	0					
ANR	6307875	Identifier	OPEN_MAX		6307773	1					
ANR	6307876	PostIncDecOperationExpression	i ++	794:30:22661:22663	6307773	2	True				
ANR	6307877	Identifier	i		6307773	0					
ANR	6307878	IncDec	++		6307773	1					
ANR	6307879	CompoundStatement		21:35:735:735	6307773	3					
ANR	6307880	IfStatement	if ( stashed_map [ i ] == 0 )		6307773	0					
ANR	6307881	Condition	stashed_map [ i ] == 0	795:12:22680:22698	6307773	0	True				
ANR	6307882	EqualityExpression	stashed_map [ i ] == 0		6307773	0		==			
ANR	6307883	ArrayIndexing	stashed_map [ i ]		6307773	0					
ANR	6307884	Identifier	stashed_map		6307773	0					
ANR	6307885	Identifier	i		6307773	1					
ANR	6307886	PrimaryExpression	0		6307773	1					
ANR	6307887	CompoundStatement		23:12:784:798	6307773	1					
ANR	6307888	IdentifierDeclStatement	int j = dup ( i ) ;	796:12:22715:22729	6307773	0	True				
ANR	6307889	IdentifierDecl	j = dup ( i )		6307773	0					
ANR	6307890	IdentifierDeclType	int		6307773	0					
ANR	6307891	Identifier	j		6307773	1					
ANR	6307892	AssignmentExpression	j = dup ( i )		6307773	2		=			
ANR	6307893	Identifier	j		6307773	0					
ANR	6307894	CallExpression	dup ( i )		6307773	1					
ANR	6307895	Callee	dup		6307773	0					
ANR	6307896	Identifier	dup		6307773	0					
ANR	6307897	ArgumentList	i		6307773	1					
ANR	6307898	Argument	i		6307773	0					
ANR	6307899	Identifier	i		6307773	0					
ANR	6307900	ExpressionStatement	stashed_map [ j ] = i + 1	798:12:22744:22766	6307773	1	True				
ANR	6307901	AssignmentExpression	stashed_map [ j ] = i + 1		6307773	0		=			
ANR	6307902	ArrayIndexing	stashed_map [ j ]		6307773	0					
ANR	6307903	Identifier	stashed_map		6307773	0					
ANR	6307904	Identifier	j		6307773	1					
ANR	6307905	AdditiveExpression	i + 1		6307773	1		+			
ANR	6307906	Identifier	i		6307773	0					
ANR	6307907	PrimaryExpression	1		6307773	1					
ANR	6307908	ExpressionStatement	pid = fork ( )	802:4:22789:22801	6307773	7	True				
ANR	6307909	AssignmentExpression	pid = fork ( )		6307773	0		=			
ANR	6307910	Identifier	pid		6307773	0					
ANR	6307911	CallExpression	fork ( )		6307773	1					
ANR	6307912	Callee	fork		6307773	0					
ANR	6307913	Identifier	fork		6307773	0					
ANR	6307914	ArgumentList			6307773	1					
ANR	6307915	IfStatement	if ( pid == 0 )		6307773	8					
ANR	6307916	Condition	pid == 0	803:8:22811:22818	6307773	0	True				
ANR	6307917	EqualityExpression	pid == 0		6307773	0		==			
ANR	6307918	Identifier	pid		6307773	0					
ANR	6307919	PrimaryExpression	0		6307773	1					
ANR	6307920	CompoundStatement		30:18:890:890	6307773	1					
ANR	6307921	ExpressionStatement	"signal ( SIGSEGV , Memento_signal )"	805:8:22851:22882	6307773	0	True				
ANR	6307922	CallExpression	"signal ( SIGSEGV , Memento_signal )"		6307773	0					
ANR	6307923	Callee	signal		6307773	0					
ANR	6307924	Identifier	signal		6307773	0					
ANR	6307925	ArgumentList	SIGSEGV		6307773	1					
ANR	6307926	Argument	SIGSEGV		6307773	0					
ANR	6307927	Identifier	SIGSEGV		6307773	0					
ANR	6307928	Argument	Memento_signal		6307773	1					
ANR	6307929	Identifier	Memento_signal		6307773	0					
ANR	6307930	IfStatement	if ( globals . patternBit == 0 )		6307773	1					
ANR	6307931	Condition	globals . patternBit == 0	807:12:22960:22982	6307773	0	True				
ANR	6307932	EqualityExpression	globals . patternBit == 0		6307773	0		==			
ANR	6307933	MemberAccess	globals . patternBit		6307773	0					
ANR	6307934	Identifier	globals		6307773	0					
ANR	6307935	Identifier	patternBit		6307773	1					
ANR	6307936	PrimaryExpression	0		6307773	1					
ANR	6307937	CompoundStatement		34:37:1054:1054	6307773	1					
ANR	6307938	ExpressionStatement	globals . patternBit = 1	808:12:22999:23021	6307773	0	True				
ANR	6307939	AssignmentExpression	globals . patternBit = 1		6307773	0		=			
ANR	6307940	MemberAccess	globals . patternBit		6307773	0					
ANR	6307941	Identifier	globals		6307773	0					
ANR	6307942	Identifier	patternBit		6307773	1					
ANR	6307943	PrimaryExpression	1		6307773	1					
ANR	6307944	ElseStatement	else		6307773	0					
ANR	6307945	ExpressionStatement	globals . patternBit <<= 1	810:12:23050:23074	6307773	0	True				
ANR	6307946	AssignmentExpression	globals . patternBit <<= 1		6307773	0		<<=			
ANR	6307947	MemberAccess	globals . patternBit		6307773	0					
ANR	6307948	Identifier	globals		6307773	0					
ANR	6307949	Identifier	patternBit		6307773	1					
ANR	6307950	PrimaryExpression	1		6307773	1					
ANR	6307951	ExpressionStatement	globals . squeezing = 1	811:8:23084:23105	6307773	2	True				
ANR	6307952	AssignmentExpression	globals . squeezing = 1		6307773	0		=			
ANR	6307953	MemberAccess	globals . squeezing		6307773	0					
ANR	6307954	Identifier	globals		6307773	0					
ANR	6307955	Identifier	squeezing		6307773	1					
ANR	6307956	PrimaryExpression	1		6307773	1					
ANR	6307957	ReturnStatement	return 1 ;	812:8:23115:23123	6307773	3	True				
ANR	6307958	PrimaryExpression	1		6307773	0					
ANR	6307959	ExpressionStatement	globals . pattern |= globals . patternBit	817:4:23255:23292	6307773	9	True				
ANR	6307960	AssignmentExpression	globals . pattern |= globals . patternBit		6307773	0		|=			
ANR	6307961	MemberAccess	globals . pattern		6307773	0					
ANR	6307962	Identifier	globals		6307773	0					
ANR	6307963	Identifier	pattern		6307773	1					
ANR	6307964	MemberAccess	globals . patternBit		6307773	1					
ANR	6307965	Identifier	globals		6307773	0					
ANR	6307966	Identifier	patternBit		6307773	1					
ANR	6307967	ExpressionStatement	globals . patternBit <<= 1	818:4:23298:23322	6307773	10	True				
ANR	6307968	AssignmentExpression	globals . patternBit <<= 1		6307773	0		<<=			
ANR	6307969	MemberAccess	globals . patternBit		6307773	0					
ANR	6307970	Identifier	globals		6307773	0					
ANR	6307971	Identifier	patternBit		6307773	1					
ANR	6307972	PrimaryExpression	1		6307773	1					
ANR	6307973	ExpressionStatement	"waitpid ( pid , & status , 0 )"	821:4:23362:23386	6307773	11	True				
ANR	6307974	CallExpression	"waitpid ( pid , & status , 0 )"		6307773	0					
ANR	6307975	Callee	waitpid		6307773	0					
ANR	6307976	Identifier	waitpid		6307773	0					
ANR	6307977	ArgumentList	pid		6307773	1					
ANR	6307978	Argument	pid		6307773	0					
ANR	6307979	Identifier	pid		6307773	0					
ANR	6307980	Argument	& status		6307773	1					
ANR	6307981	UnaryOperationExpression	& status		6307773	0					
ANR	6307982	UnaryOperator	&		6307773	0					
ANR	6307983	Identifier	status		6307773	1					
ANR	6307984	Argument	0		6307773	2					
ANR	6307985	PrimaryExpression	0		6307773	0					
ANR	6307986	IfStatement	if ( status != 0 )		6307773	12					
ANR	6307987	Condition	status != 0	823:8:23397:23407	6307773	0	True				
ANR	6307988	EqualityExpression	status != 0		6307773	0		!=			
ANR	6307989	Identifier	status		6307773	0					
ANR	6307990	PrimaryExpression	0		6307773	1					
ANR	6307991	CompoundStatement		50:21:1479:1479	6307773	1					
ANR	6307992	ExpressionStatement	"fprintf ( stderr , ""Child status=%d\\n"" , status )"	824:8:23420:23464	6307773	0	True				
ANR	6307993	CallExpression	"fprintf ( stderr , ""Child status=%d\\n"" , status )"		6307773	0					
ANR	6307994	Callee	fprintf		6307773	0					
ANR	6307995	Identifier	fprintf		6307773	0					
ANR	6307996	ArgumentList	stderr		6307773	1					
ANR	6307997	Argument	stderr		6307773	0					
ANR	6307998	Identifier	stderr		6307773	0					
ANR	6307999	Argument	"""Child status=%d\\n"""		6307773	1					
ANR	6308000	PrimaryExpression	"""Child status=%d\\n"""		6307773	0					
ANR	6308001	Argument	status		6307773	2					
ANR	6308002	Identifier	status		6307773	0					
ANR	6308003	ForStatement	for ( i = 0 ; i < OPEN_MAX ; i ++ )		6307773	13					
ANR	6308004	ForInit	i = 0 ;	828:9:23511:23516	6307773	0	True				
ANR	6308005	AssignmentExpression	i = 0		6307773	0		=			
ANR	6308006	Identifier	i		6307773	0					
ANR	6308007	PrimaryExpression	0		6307773	1					
ANR	6308008	Condition	i < OPEN_MAX	828:16:23518:23529	6307773	1	True				
ANR	6308009	RelationalExpression	i < OPEN_MAX		6307773	0		<			
ANR	6308010	Identifier	i		6307773	0					
ANR	6308011	Identifier	OPEN_MAX		6307773	1					
ANR	6308012	PostIncDecOperationExpression	i ++	828:30:23532:23534	6307773	2	True				
ANR	6308013	Identifier	i		6307773	0					
ANR	6308014	IncDec	++		6307773	1					
ANR	6308015	CompoundStatement		55:35:1606:1606	6307773	3					
ANR	6308016	IfStatement	if ( stashed_map [ i ] != 0 )		6307773	0					
ANR	6308017	Condition	stashed_map [ i ] != 0	829:12:23551:23569	6307773	0	True				
ANR	6308018	EqualityExpression	stashed_map [ i ] != 0		6307773	0		!=			
ANR	6308019	ArrayIndexing	stashed_map [ i ]		6307773	0					
ANR	6308020	Identifier	stashed_map		6307773	0					
ANR	6308021	Identifier	i		6307773	1					
ANR	6308022	PrimaryExpression	0		6307773	1					
ANR	6308023	CompoundStatement		56:33:1641:1641	6307773	1					
ANR	6308024	ExpressionStatement	"dup2 ( i , stashed_map [ i ] - 1 )"	830:12:23586:23613	6307773	0	True				
ANR	6308025	CallExpression	"dup2 ( i , stashed_map [ i ] - 1 )"		6307773	0					
ANR	6308026	Callee	dup2		6307773	0					
ANR	6308027	Identifier	dup2		6307773	0					
ANR	6308028	ArgumentList	i		6307773	1					
ANR	6308029	Argument	i		6307773	0					
ANR	6308030	Identifier	i		6307773	0					
ANR	6308031	Argument	stashed_map [ i ] - 1		6307773	1					
ANR	6308032	AdditiveExpression	stashed_map [ i ] - 1		6307773	0		-			
ANR	6308033	ArrayIndexing	stashed_map [ i ]		6307773	0					
ANR	6308034	Identifier	stashed_map		6307773	0					
ANR	6308035	Identifier	i		6307773	1					
ANR	6308036	PrimaryExpression	1		6307773	1					
ANR	6308037	ExpressionStatement	close ( i )	831:12:23627:23635	6307773	1	True				
ANR	6308038	CallExpression	close ( i )		6307773	0					
ANR	6308039	Callee	close		6307773	0					
ANR	6308040	Identifier	close		6307773	0					
ANR	6308041	ArgumentList	i		6307773	1					
ANR	6308042	Argument	i		6307773	0					
ANR	6308043	Identifier	i		6307773	0					
ANR	6308044	ExpressionStatement	stashed_map [ i ] = 0	832:12:23649:23667	6307773	2	True				
ANR	6308045	AssignmentExpression	stashed_map [ i ] = 0		6307773	0		=			
ANR	6308046	ArrayIndexing	stashed_map [ i ]		6307773	0					
ANR	6308047	Identifier	stashed_map		6307773	0					
ANR	6308048	Identifier	i		6307773	1					
ANR	6308049	PrimaryExpression	0		6307773	1					
ANR	6308050	ReturnStatement	return 0 ;	836:4:23690:23698	6307773	14	True				
ANR	6308051	PrimaryExpression	0		6307773	0					
ANR	6308052	ReturnType	static int		6307773	1					
ANR	6308053	Identifier	squeeze		6307773	2					
ANR	6308054	ParameterList			6307773	3					
ANR	6308055	CFGEntryNode	ENTRY		6307773		True				
ANR	6308056	CFGExitNode	EXIT		6307773		True				
ANR	6308057	Symbol	MEMENTO_MAXPATTERN		6307773						
ANR	6308058	Symbol	globals . patternBit		6307773						
ANR	6308059	Symbol	globals . squeezing		6307773						
ANR	6308060	Symbol	globals		6307773						
ANR	6308061	Symbol	* stashed_map		6307773						
ANR	6308062	Symbol	i		6307773						
ANR	6308063	Symbol	pid		6307773						
ANR	6308064	Symbol	OPEN_MAX		6307773						
ANR	6308065	Symbol	j		6307773						
ANR	6308066	Symbol	globals . squeezeAt		6307773						
ANR	6308067	Symbol	stderr		6307773						
ANR	6308068	Symbol	& status		6307773						
ANR	6308069	Symbol	fork		6307773						
ANR	6308070	Symbol	* i		6307773						
ANR	6308071	Symbol	Memento_signal		6307773						
ANR	6308072	Symbol	* j		6307773						
ANR	6308073	Symbol	SIGSEGV		6307773						
ANR	6308074	Symbol	globals . pattern		6307773						
ANR	6308075	Symbol	stashed_map		6307773						
ANR	6308076	Symbol	globals . sequence		6307773						
ANR	6308077	Symbol	dup		6307773						
ANR	6308078	Symbol	status		6307773						
ANR	6308079	Function	Memento_signal	841:0:23729:24167							
ANR	6308080	FunctionDef	Memento_signal ()		6308079	0					
ANR	6308081	CompoundStatement		843:0:23762:24167	6308079	0					
ANR	6308082	ExpressionStatement	globals . segv = 1	844:4:23768:23784	6308079	0	True				
ANR	6308083	AssignmentExpression	globals . segv = 1		6308079	0		=			
ANR	6308084	MemberAccess	globals . segv		6308079	0					
ANR	6308085	Identifier	globals		6308079	0					
ANR	6308086	Identifier	segv		6308079	1					
ANR	6308087	PrimaryExpression	1		6308079	1					
ANR	6308088	IfStatement	"if ( getenv ( ""MEMENTO_NOJIT"" ) )"		6308079	1					
ANR	6308089	Condition	"getenv ( ""MEMENTO_NOJIT"" )"	849:8:24093:24115	6308079	0	True				
ANR	6308090	CallExpression	"getenv ( ""MEMENTO_NOJIT"" )"		6308079	0					
ANR	6308091	Callee	getenv		6308079	0					
ANR	6308092	Identifier	getenv		6308079	0					
ANR	6308093	ArgumentList	"""MEMENTO_NOJIT"""		6308079	1					
ANR	6308094	Argument	"""MEMENTO_NOJIT"""		6308079	0					
ANR	6308095	PrimaryExpression	"""MEMENTO_NOJIT"""		6308079	0					
ANR	6308096	ExpressionStatement	exit ( 1 )	850:8:24126:24133	6308079	1	True				
ANR	6308097	CallExpression	exit ( 1 )		6308079	0					
ANR	6308098	Callee	exit		6308079	0					
ANR	6308099	Identifier	exit		6308079	0					
ANR	6308100	ArgumentList	1		6308079	1					
ANR	6308101	Argument	1		6308079	0					
ANR	6308102	PrimaryExpression	1		6308079	0					
ANR	6308103	ElseStatement	else		6308079	0					
ANR	6308104	ExpressionStatement	Memento_fin ( )	852:8:24152:24165	6308079	0	True				
ANR	6308105	CallExpression	Memento_fin ( )		6308079	0					
ANR	6308106	Callee	Memento_fin		6308079	0					
ANR	6308107	Identifier	Memento_fin		6308079	0					
ANR	6308108	ArgumentList			6308079	1					
ANR	6308109	ReturnType	static void		6308079	1					
ANR	6308110	Identifier	Memento_signal		6308079	2					
ANR	6308111	ParameterList			6308079	3					
ANR	6308112	CFGEntryNode	ENTRY		6308079		True				
ANR	6308113	CFGExitNode	EXIT		6308079		True				
ANR	6308114	Symbol	globals		6308079						
ANR	6308115	Symbol	globals . segv		6308079						
ANR	6308116	Symbol	getenv		6308079						
ANR	6308117	Function	squeeze	855:0:24170:24276							
ANR	6308118	FunctionDef	squeeze ()		6308117	0					
ANR	6308119	CompoundStatement		857:0:24188:24276	6308117	0					
ANR	6308120	ExpressionStatement	"fprintf ( stderr , ""Memento memory squeezing disabled as no fork!\\n"" )"	858:4:24194:24260	6308117	0	True				
ANR	6308121	CallExpression	"fprintf ( stderr , ""Memento memory squeezing disabled as no fork!\\n"" )"		6308117	0					
ANR	6308122	Callee	fprintf		6308117	0					
ANR	6308123	Identifier	fprintf		6308117	0					
ANR	6308124	ArgumentList	stderr		6308117	1					
ANR	6308125	Argument	stderr		6308117	0					
ANR	6308126	Identifier	stderr		6308117	0					
ANR	6308127	Argument	"""Memento memory squeezing disabled as no fork!\\n"""		6308117	1					
ANR	6308128	PrimaryExpression	"""Memento memory squeezing disabled as no fork!\\n"""		6308117	0					
ANR	6308129	ReturnStatement	return 0 ;	859:4:24266:24274	6308117	1	True				
ANR	6308130	PrimaryExpression	0		6308117	0					
ANR	6308131	ReturnType	int		6308117	1					
ANR	6308132	Identifier	squeeze		6308117	2					
ANR	6308133	ParameterList			6308117	3					
ANR	6308134	CFGEntryNode	ENTRY		6308117		True				
ANR	6308135	CFGExitNode	EXIT		6308117		True				
ANR	6308136	Symbol	stderr		6308117						
ANR	6308137	Function	Memento_startFailing	863:0:24286:24731							
ANR	6308138	FunctionDef	Memento_startFailing ()		6308137	0					
ANR	6308139	CompoundStatement		865:0:24325:24731	6308137	0					
ANR	6308140	IfStatement	if ( ! globals . failing )		6308137	0					
ANR	6308141	Condition	! globals . failing	866:8:24335:24350	6308137	0	True				
ANR	6308142	UnaryOperationExpression	! globals . failing		6308137	0					
ANR	6308143	UnaryOperator	!		6308137	0					
ANR	6308144	MemberAccess	globals . failing		6308137	1					
ANR	6308145	Identifier	globals		6308137	0					
ANR	6308146	Identifier	failing		6308137	1					
ANR	6308147	CompoundStatement		2:26:27:27	6308137	1					
ANR	6308148	ExpressionStatement	"fprintf ( stderr , ""Starting to fail...\\n"" )"	867:8:24363:24403	6308137	0	True				
ANR	6308149	CallExpression	"fprintf ( stderr , ""Starting to fail...\\n"" )"		6308137	0					
ANR	6308150	Callee	fprintf		6308137	0					
ANR	6308151	Identifier	fprintf		6308137	0					
ANR	6308152	ArgumentList	stderr		6308137	1					
ANR	6308153	Argument	stderr		6308137	0					
ANR	6308154	Identifier	stderr		6308137	0					
ANR	6308155	Argument	"""Starting to fail...\\n"""		6308137	1					
ANR	6308156	PrimaryExpression	"""Starting to fail...\\n"""		6308137	0					
ANR	6308157	ExpressionStatement	fflush ( stderr )	868:8:24413:24427	6308137	1	True				
ANR	6308158	CallExpression	fflush ( stderr )		6308137	0					
ANR	6308159	Callee	fflush		6308137	0					
ANR	6308160	Identifier	fflush		6308137	0					
ANR	6308161	ArgumentList	stderr		6308137	1					
ANR	6308162	Argument	stderr		6308137	0					
ANR	6308163	Identifier	stderr		6308137	0					
ANR	6308164	ExpressionStatement	globals . failing = 1	869:8:24437:24456	6308137	2	True				
ANR	6308165	AssignmentExpression	globals . failing = 1		6308137	0		=			
ANR	6308166	MemberAccess	globals . failing		6308137	0					
ANR	6308167	Identifier	globals		6308137	0					
ANR	6308168	Identifier	failing		6308137	1					
ANR	6308169	PrimaryExpression	1		6308137	1					
ANR	6308170	ExpressionStatement	globals . failAt = globals . sequence	870:8:24466:24499	6308137	3	True				
ANR	6308171	AssignmentExpression	globals . failAt = globals . sequence		6308137	0		=			
ANR	6308172	MemberAccess	globals . failAt		6308137	0					
ANR	6308173	Identifier	globals		6308137	0					
ANR	6308174	Identifier	failAt		6308137	1					
ANR	6308175	MemberAccess	globals . sequence		6308137	1					
ANR	6308176	Identifier	globals		6308137	0					
ANR	6308177	Identifier	sequence		6308137	1					
ANR	6308178	ExpressionStatement	globals . nextFailAt = globals . sequence + 1	871:8:24509:24550	6308137	4	True				
ANR	6308179	AssignmentExpression	globals . nextFailAt = globals . sequence + 1		6308137	0		=			
ANR	6308180	MemberAccess	globals . nextFailAt		6308137	0					
ANR	6308181	Identifier	globals		6308137	0					
ANR	6308182	Identifier	nextFailAt		6308137	1					
ANR	6308183	AdditiveExpression	globals . sequence + 1		6308137	1		+			
ANR	6308184	MemberAccess	globals . sequence		6308137	0					
ANR	6308185	Identifier	globals		6308137	0					
ANR	6308186	Identifier	sequence		6308137	1					
ANR	6308187	PrimaryExpression	1		6308137	1					
ANR	6308188	ExpressionStatement	globals . pattern = 0	872:8:24560:24579	6308137	5	True				
ANR	6308189	AssignmentExpression	globals . pattern = 0		6308137	0		=			
ANR	6308190	MemberAccess	globals . pattern		6308137	0					
ANR	6308191	Identifier	globals		6308137	0					
ANR	6308192	Identifier	pattern		6308137	1					
ANR	6308193	PrimaryExpression	0		6308137	1					
ANR	6308194	ExpressionStatement	globals . patternBit = 0	873:8:24589:24611	6308137	6	True				
ANR	6308195	AssignmentExpression	globals . patternBit = 0		6308137	0		=			
ANR	6308196	MemberAccess	globals . patternBit		6308137	0					
ANR	6308197	Identifier	globals		6308137	0					
ANR	6308198	Identifier	patternBit		6308137	1					
ANR	6308199	PrimaryExpression	0		6308137	1					
ANR	6308200	ExpressionStatement	"signal ( SIGSEGV , Memento_signal )"	874:8:24621:24652	6308137	7	True				
ANR	6308201	CallExpression	"signal ( SIGSEGV , Memento_signal )"		6308137	0					
ANR	6308202	Callee	signal		6308137	0					
ANR	6308203	Identifier	signal		6308137	0					
ANR	6308204	ArgumentList	SIGSEGV		6308137	1					
ANR	6308205	Argument	SIGSEGV		6308137	0					
ANR	6308206	Identifier	SIGSEGV		6308137	0					
ANR	6308207	Argument	Memento_signal		6308137	1					
ANR	6308208	Identifier	Memento_signal		6308137	0					
ANR	6308209	ExpressionStatement	"signal ( SIGABRT , Memento_signal )"	875:8:24662:24693	6308137	8	True				
ANR	6308210	CallExpression	"signal ( SIGABRT , Memento_signal )"		6308137	0					
ANR	6308211	Callee	signal		6308137	0					
ANR	6308212	Identifier	signal		6308137	0					
ANR	6308213	ArgumentList	SIGABRT		6308137	1					
ANR	6308214	Argument	SIGABRT		6308137	0					
ANR	6308215	Identifier	SIGABRT		6308137	0					
ANR	6308216	Argument	Memento_signal		6308137	1					
ANR	6308217	Identifier	Memento_signal		6308137	0					
ANR	6308218	ExpressionStatement	Memento_breakpoint ( )	876:8:24703:24723	6308137	9	True				
ANR	6308219	CallExpression	Memento_breakpoint ( )		6308137	0					
ANR	6308220	Callee	Memento_breakpoint		6308137	0					
ANR	6308221	Identifier	Memento_breakpoint		6308137	0					
ANR	6308222	ArgumentList			6308137	1					
ANR	6308223	ReturnType	static void		6308137	1					
ANR	6308224	Identifier	Memento_startFailing		6308137	2					
ANR	6308225	ParameterList			6308137	3					
ANR	6308226	CFGEntryNode	ENTRY		6308137		True				
ANR	6308227	CFGExitNode	EXIT		6308137		True				
ANR	6308228	Symbol	globals . patternBit		6308137						
ANR	6308229	Symbol	Memento_signal		6308137						
ANR	6308230	Symbol	SIGSEGV		6308137						
ANR	6308231	Symbol	globals . pattern		6308137						
ANR	6308232	Symbol	globals		6308137						
ANR	6308233	Symbol	globals . failing		6308137						
ANR	6308234	Symbol	SIGABRT		6308137						
ANR	6308235	Symbol	stderr		6308137						
ANR	6308236	Symbol	globals . nextFailAt		6308137						
ANR	6308237	Symbol	globals . failAt		6308137						
ANR	6308238	Symbol	globals . sequence		6308137						
ANR	6308239	Function	Memento_event	880:0:24734:25214							
ANR	6308240	FunctionDef	Memento_event ()		6308239	0					
ANR	6308241	CompoundStatement		882:0:24766:25214	6308239	0					
ANR	6308242	ExpressionStatement	globals . sequence ++	883:4:24772:24790	6308239	0	True				
ANR	6308243	PostIncDecOperationExpression	globals . sequence ++		6308239	0					
ANR	6308244	MemberAccess	globals . sequence		6308239	0					
ANR	6308245	Identifier	globals		6308239	0					
ANR	6308246	Identifier	sequence		6308239	1					
ANR	6308247	IncDec	++		6308239	1					
ANR	6308248	IfStatement	if ( ( globals . sequence >= globals . paranoidAt ) && ( globals . paranoidAt != 0 ) )		6308239	1					
ANR	6308249	Condition	( globals . sequence >= globals . paranoidAt ) && ( globals . paranoidAt != 0 )	884:8:24800:24868	6308239	0	True				
ANR	6308250	AndExpression	( globals . sequence >= globals . paranoidAt ) && ( globals . paranoidAt != 0 )		6308239	0		&&			
ANR	6308251	RelationalExpression	globals . sequence >= globals . paranoidAt		6308239	0		>=			
ANR	6308252	MemberAccess	globals . sequence		6308239	0					
ANR	6308253	Identifier	globals		6308239	0					
ANR	6308254	Identifier	sequence		6308239	1					
ANR	6308255	MemberAccess	globals . paranoidAt		6308239	1					
ANR	6308256	Identifier	globals		6308239	0					
ANR	6308257	Identifier	paranoidAt		6308239	1					
ANR	6308258	EqualityExpression	globals . paranoidAt != 0		6308239	1		!=			
ANR	6308259	MemberAccess	globals . paranoidAt		6308239	0					
ANR	6308260	Identifier	globals		6308239	0					
ANR	6308261	Identifier	paranoidAt		6308239	1					
ANR	6308262	PrimaryExpression	0		6308239	1					
ANR	6308263	CompoundStatement		3:79:104:104	6308239	1					
ANR	6308264	ExpressionStatement	globals . paranoia = 1	885:8:24881:24901	6308239	0	True				
ANR	6308265	AssignmentExpression	globals . paranoia = 1		6308239	0		=			
ANR	6308266	MemberAccess	globals . paranoia		6308239	0					
ANR	6308267	Identifier	globals		6308239	0					
ANR	6308268	Identifier	paranoia		6308239	1					
ANR	6308269	PrimaryExpression	1		6308239	1					
ANR	6308270	ExpressionStatement	globals . countdown = 1	886:8:24911:24932	6308239	1	True				
ANR	6308271	AssignmentExpression	globals . countdown = 1		6308239	0		=			
ANR	6308272	MemberAccess	globals . countdown		6308239	0					
ANR	6308273	Identifier	globals		6308239	0					
ANR	6308274	Identifier	countdown		6308239	1					
ANR	6308275	PrimaryExpression	1		6308239	1					
ANR	6308276	IfStatement	if ( -- globals . countdown == 0 )		6308239	2					
ANR	6308277	Condition	-- globals . countdown == 0	888:8:24948:24971	6308239	0	True				
ANR	6308278	EqualityExpression	-- globals . countdown == 0		6308239	0		==			
ANR	6308279	UnaryExpression	-- globals . countdown		6308239	0					
ANR	6308280	IncDec	--		6308239	0					
ANR	6308281	MemberAccess	globals . countdown		6308239	1					
ANR	6308282	Identifier	globals		6308239	0					
ANR	6308283	Identifier	countdown		6308239	1					
ANR	6308284	PrimaryExpression	0		6308239	1					
ANR	6308285	CompoundStatement		7:34:207:207	6308239	1					
ANR	6308286	ExpressionStatement	Memento_checkAllMemory ( )	889:8:24984:25008	6308239	0	True				
ANR	6308287	CallExpression	Memento_checkAllMemory ( )		6308239	0					
ANR	6308288	Callee	Memento_checkAllMemory		6308239	0					
ANR	6308289	Identifier	Memento_checkAllMemory		6308239	0					
ANR	6308290	ArgumentList			6308239	1					
ANR	6308291	ExpressionStatement	globals . countdown = globals . paranoia	890:8:25018:25054	6308239	1	True				
ANR	6308292	AssignmentExpression	globals . countdown = globals . paranoia		6308239	0		=			
ANR	6308293	MemberAccess	globals . countdown		6308239	0					
ANR	6308294	Identifier	globals		6308239	0					
ANR	6308295	Identifier	countdown		6308239	1					
ANR	6308296	MemberAccess	globals . paranoia		6308239	1					
ANR	6308297	Identifier	globals		6308239	0					
ANR	6308298	Identifier	paranoia		6308239	1					
ANR	6308299	IfStatement	if ( globals . sequence == globals . breakAt )		6308239	3					
ANR	6308300	Condition	globals . sequence == globals . breakAt	893:8:25071:25105	6308239	0	True				
ANR	6308301	EqualityExpression	globals . sequence == globals . breakAt		6308239	0		==			
ANR	6308302	MemberAccess	globals . sequence		6308239	0					
ANR	6308303	Identifier	globals		6308239	0					
ANR	6308304	Identifier	sequence		6308239	1					
ANR	6308305	MemberAccess	globals . breakAt		6308239	1					
ANR	6308306	Identifier	globals		6308239	0					
ANR	6308307	Identifier	breakAt		6308239	1					
ANR	6308308	CompoundStatement		12:45:341:341	6308239	1					
ANR	6308309	ExpressionStatement	"fprintf ( stderr , ""Breaking at event %d\\n"" , globals . breakAt )"	894:8:25118:25176	6308239	0	True				
ANR	6308310	CallExpression	"fprintf ( stderr , ""Breaking at event %d\\n"" , globals . breakAt )"		6308239	0					
ANR	6308311	Callee	fprintf		6308239	0					
ANR	6308312	Identifier	fprintf		6308239	0					
ANR	6308313	ArgumentList	stderr		6308239	1					
ANR	6308314	Argument	stderr		6308239	0					
ANR	6308315	Identifier	stderr		6308239	0					
ANR	6308316	Argument	"""Breaking at event %d\\n"""		6308239	1					
ANR	6308317	PrimaryExpression	"""Breaking at event %d\\n"""		6308239	0					
ANR	6308318	Argument	globals . breakAt		6308239	2					
ANR	6308319	MemberAccess	globals . breakAt		6308239	0					
ANR	6308320	Identifier	globals		6308239	0					
ANR	6308321	Identifier	breakAt		6308239	1					
ANR	6308322	ExpressionStatement	Memento_breakpoint ( )	895:8:25186:25206	6308239	1	True				
ANR	6308323	CallExpression	Memento_breakpoint ( )		6308239	0					
ANR	6308324	Callee	Memento_breakpoint		6308239	0					
ANR	6308325	Identifier	Memento_breakpoint		6308239	0					
ANR	6308326	ArgumentList			6308239	1					
ANR	6308327	ReturnType	static void		6308239	1					
ANR	6308328	Identifier	Memento_event		6308239	2					
ANR	6308329	ParameterList			6308239	3					
ANR	6308330	CFGEntryNode	ENTRY		6308239		True				
ANR	6308331	CFGExitNode	EXIT		6308239		True				
ANR	6308332	Symbol	globals . paranoidAt		6308239						
ANR	6308333	Symbol	globals . countdown		6308239						
ANR	6308334	Symbol	globals		6308239						
ANR	6308335	Symbol	globals . breakAt		6308239						
ANR	6308336	Symbol	globals . paranoia		6308239						
ANR	6308337	Symbol	stderr		6308239						
ANR	6308338	Symbol	globals . sequence		6308239						
ANR	6308339	Function	Memento_breakAt	899:0:25217:25297							
ANR	6308340	FunctionDef	Memento_breakAt (int event)		6308339	0					
ANR	6308341	CompoundStatement		901:0:25248:25297	6308339	0					
ANR	6308342	ExpressionStatement	globals . breakAt = event	902:4:25254:25277	6308339	0	True				
ANR	6308343	AssignmentExpression	globals . breakAt = event		6308339	0		=			
ANR	6308344	MemberAccess	globals . breakAt		6308339	0					
ANR	6308345	Identifier	globals		6308339	0					
ANR	6308346	Identifier	breakAt		6308339	1					
ANR	6308347	Identifier	event		6308339	1					
ANR	6308348	ReturnStatement	return event ;	903:4:25283:25295	6308339	1	True				
ANR	6308349	Identifier	event		6308339	0					
ANR	6308350	ReturnType	int		6308339	1					
ANR	6308351	Identifier	Memento_breakAt		6308339	2					
ANR	6308352	ParameterList	int event		6308339	3					
ANR	6308353	Parameter	int event	900:16:25237:25245	6308339	0	True				
ANR	6308354	ParameterType	int		6308339	0					
ANR	6308355	Identifier	event		6308339	1					
ANR	6308356	CFGEntryNode	ENTRY		6308339		True				
ANR	6308357	CFGExitNode	EXIT		6308339		True				
ANR	6308358	Symbol	globals . breakAt		6308339						
ANR	6308359	Symbol	globals		6308339						
ANR	6308360	Symbol	event		6308339						
ANR	6308361	Function	Memento_label	906:0:25300:25501							
ANR	6308362	FunctionDef	"Memento_label (void * ptr , const char * label)"		6308361	0					
ANR	6308363	CompoundStatement		908:0:25351:25501	6308361	0					
ANR	6308364	IdentifierDeclStatement	Memento_BlkHeader * block ;	909:4:25357:25381	6308361	0	True				
ANR	6308365	IdentifierDecl	* block		6308361	0					
ANR	6308366	IdentifierDeclType	Memento_BlkHeader *		6308361	0					
ANR	6308367	Identifier	block		6308361	1					
ANR	6308368	IfStatement	if ( ptr == NULL )		6308361	1					
ANR	6308369	Condition	ptr == NULL	911:8:25392:25402	6308361	0	True				
ANR	6308370	EqualityExpression	ptr == NULL		6308361	0		==			
ANR	6308371	Identifier	ptr		6308361	0					
ANR	6308372	Identifier	NULL		6308361	1					
ANR	6308373	ReturnStatement	return NULL ;	912:8:25413:25424	6308361	1	True				
ANR	6308374	Identifier	NULL		6308361	0					
ANR	6308375	ExpressionStatement	block = MEMBLK_FROMBLK ( ptr )	913:4:25430:25457	6308361	2	True				
ANR	6308376	AssignmentExpression	block = MEMBLK_FROMBLK ( ptr )		6308361	0		=			
ANR	6308377	Identifier	block		6308361	0					
ANR	6308378	CallExpression	MEMBLK_FROMBLK ( ptr )		6308361	1					
ANR	6308379	Callee	MEMBLK_FROMBLK		6308361	0					
ANR	6308380	Identifier	MEMBLK_FROMBLK		6308361	0					
ANR	6308381	ArgumentList	ptr		6308361	1					
ANR	6308382	Argument	ptr		6308361	0					
ANR	6308383	Identifier	ptr		6308361	0					
ANR	6308384	ExpressionStatement	block -> label = label	914:4:25463:25483	6308361	3	True				
ANR	6308385	AssignmentExpression	block -> label = label		6308361	0		=			
ANR	6308386	PtrMemberAccess	block -> label		6308361	0					
ANR	6308387	Identifier	block		6308361	0					
ANR	6308388	Identifier	label		6308361	1					
ANR	6308389	Identifier	label		6308361	1					
ANR	6308390	ReturnStatement	return ptr ;	915:4:25489:25499	6308361	4	True				
ANR	6308391	Identifier	ptr		6308361	0					
ANR	6308392	ReturnType	void *		6308361	1					
ANR	6308393	Identifier	Memento_label		6308361	2					
ANR	6308394	ParameterList	"void * ptr , const char * label"		6308361	3					
ANR	6308395	Parameter	void * ptr	907:14:25321:25329	6308361	0	True				
ANR	6308396	ParameterType	void *		6308361	0					
ANR	6308397	Identifier	ptr		6308361	1					
ANR	6308398	Parameter	const char * label	907:25:25332:25348	6308361	1	True				
ANR	6308399	ParameterType	const char *		6308361	0					
ANR	6308400	Identifier	label		6308361	1					
ANR	6308401	CFGEntryNode	ENTRY		6308361		True				
ANR	6308402	CFGExitNode	EXIT		6308361		True				
ANR	6308403	Symbol	NULL		6308361						
ANR	6308404	Symbol	MEMBLK_FROMBLK		6308361						
ANR	6308405	Symbol	block		6308361						
ANR	6308406	Symbol	label		6308361						
ANR	6308407	Symbol	ptr		6308361						
ANR	6308408	Symbol	block -> label		6308361						
ANR	6308409	Symbol	* block		6308361						
ANR	6308410	Function	Memento_failThisEvent	918:0:25504:26594							
ANR	6308411	FunctionDef	Memento_failThisEvent ()		6308410	0					
ANR	6308412	CompoundStatement		920:0:25536:26594	6308410	0					
ANR	6308413	IdentifierDeclStatement	int failThisOne ;	921:4:25542:25557	6308410	0	True				
ANR	6308414	IdentifierDecl	failThisOne		6308410	0					
ANR	6308415	IdentifierDeclType	int		6308410	0					
ANR	6308416	Identifier	failThisOne		6308410	1					
ANR	6308417	IfStatement	if ( ! globals . inited )		6308410	1					
ANR	6308418	Condition	! globals . inited	923:8:25568:25582	6308410	0	True				
ANR	6308419	UnaryOperationExpression	! globals . inited		6308410	0					
ANR	6308420	UnaryOperator	!		6308410	0					
ANR	6308421	MemberAccess	globals . inited		6308410	1					
ANR	6308422	Identifier	globals		6308410	0					
ANR	6308423	Identifier	inited		6308410	1					
ANR	6308424	ExpressionStatement	Memento_init ( )	924:8:25593:25607	6308410	1	True				
ANR	6308425	CallExpression	Memento_init ( )		6308410	0					
ANR	6308426	Callee	Memento_init		6308410	0					
ANR	6308427	Identifier	Memento_init		6308410	0					
ANR	6308428	ArgumentList			6308410	1					
ANR	6308429	ExpressionStatement	Memento_event ( )	926:4:25614:25629	6308410	2	True				
ANR	6308430	CallExpression	Memento_event ( )		6308410	0					
ANR	6308431	Callee	Memento_event		6308410	0					
ANR	6308432	Identifier	Memento_event		6308410	0					
ANR	6308433	ArgumentList			6308410	1					
ANR	6308434	IfStatement	if ( ( globals . sequence >= globals . failAt ) && ( globals . failAt != 0 ) )		6308410	3					
ANR	6308435	Condition	( globals . sequence >= globals . failAt ) && ( globals . failAt != 0 )	928:8:25640:25700	6308410	0	True				
ANR	6308436	AndExpression	( globals . sequence >= globals . failAt ) && ( globals . failAt != 0 )		6308410	0		&&			
ANR	6308437	RelationalExpression	globals . sequence >= globals . failAt		6308410	0		>=			
ANR	6308438	MemberAccess	globals . sequence		6308410	0					
ANR	6308439	Identifier	globals		6308410	0					
ANR	6308440	Identifier	sequence		6308410	1					
ANR	6308441	MemberAccess	globals . failAt		6308410	1					
ANR	6308442	Identifier	globals		6308410	0					
ANR	6308443	Identifier	failAt		6308410	1					
ANR	6308444	EqualityExpression	globals . failAt != 0		6308410	1		!=			
ANR	6308445	MemberAccess	globals . failAt		6308410	0					
ANR	6308446	Identifier	globals		6308410	0					
ANR	6308447	Identifier	failAt		6308410	1					
ANR	6308448	PrimaryExpression	0		6308410	1					
ANR	6308449	ExpressionStatement	Memento_startFailing ( )	929:8:25711:25733	6308410	1	True				
ANR	6308450	CallExpression	Memento_startFailing ( )		6308410	0					
ANR	6308451	Callee	Memento_startFailing		6308410	0					
ANR	6308452	Identifier	Memento_startFailing		6308410	0					
ANR	6308453	ArgumentList			6308410	1					
ANR	6308454	IfStatement	if ( ( globals . sequence >= globals . squeezeAt ) && ( globals . squeezeAt != 0 ) )		6308410	4					
ANR	6308455	Condition	( globals . sequence >= globals . squeezeAt ) && ( globals . squeezeAt != 0 )	930:8:25743:25809	6308410	0	True				
ANR	6308456	AndExpression	( globals . sequence >= globals . squeezeAt ) && ( globals . squeezeAt != 0 )		6308410	0		&&			
ANR	6308457	RelationalExpression	globals . sequence >= globals . squeezeAt		6308410	0		>=			
ANR	6308458	MemberAccess	globals . sequence		6308410	0					
ANR	6308459	Identifier	globals		6308410	0					
ANR	6308460	Identifier	sequence		6308410	1					
ANR	6308461	MemberAccess	globals . squeezeAt		6308410	1					
ANR	6308462	Identifier	globals		6308410	0					
ANR	6308463	Identifier	squeezeAt		6308410	1					
ANR	6308464	EqualityExpression	globals . squeezeAt != 0		6308410	1		!=			
ANR	6308465	MemberAccess	globals . squeezeAt		6308410	0					
ANR	6308466	Identifier	globals		6308410	0					
ANR	6308467	Identifier	squeezeAt		6308410	1					
ANR	6308468	PrimaryExpression	0		6308410	1					
ANR	6308469	CompoundStatement		11:77:275:275	6308410	1					
ANR	6308470	ReturnStatement	return squeeze ( ) ;	931:8:25822:25838	6308410	0	True				
ANR	6308471	CallExpression	squeeze ( )		6308410	0					
ANR	6308472	Callee	squeeze		6308410	0					
ANR	6308473	Identifier	squeeze		6308410	0					
ANR	6308474	ArgumentList			6308410	1					
ANR	6308475	IfStatement	if ( ! globals . failing )		6308410	5					
ANR	6308476	Condition	! globals . failing	934:8:25855:25870	6308410	0	True				
ANR	6308477	UnaryOperationExpression	! globals . failing		6308410	0					
ANR	6308478	UnaryOperator	!		6308410	0					
ANR	6308479	MemberAccess	globals . failing		6308410	1					
ANR	6308480	Identifier	globals		6308410	0					
ANR	6308481	Identifier	failing		6308410	1					
ANR	6308482	ReturnStatement	return 0 ;	935:8:25881:25889	6308410	1	True				
ANR	6308483	PrimaryExpression	0		6308410	0					
ANR	6308484	ExpressionStatement	failThisOne = ( ( globals . patternBit & globals . pattern ) == 0 )	936:4:25895:25954	6308410	6	True				
ANR	6308485	AssignmentExpression	failThisOne = ( ( globals . patternBit & globals . pattern ) == 0 )		6308410	0		=			
ANR	6308486	Identifier	failThisOne		6308410	0					
ANR	6308487	EqualityExpression	( globals . patternBit & globals . pattern ) == 0		6308410	1		==			
ANR	6308488	BitAndExpression	globals . patternBit & globals . pattern		6308410	0		&			
ANR	6308489	MemberAccess	globals . patternBit		6308410	0					
ANR	6308490	Identifier	globals		6308410	0					
ANR	6308491	Identifier	patternBit		6308410	1					
ANR	6308492	MemberAccess	globals . pattern		6308410	1					
ANR	6308493	Identifier	globals		6308410	0					
ANR	6308494	Identifier	pattern		6308410	1					
ANR	6308495	PrimaryExpression	0		6308410	1					
ANR	6308496	IfStatement	if ( globals . failing && ( ( ~ ( globals . patternBit - 1 ) & globals . pattern ) == 0 ) && ( globals . patternBit != 0 ) && globals . nextPattern == 0 )		6308410	7					
ANR	6308497	Condition	globals . failing && ( ( ~ ( globals . patternBit - 1 ) & globals . pattern ) == 0 ) && ( globals . patternBit != 0 ) && globals . nextPattern == 0	940:8:26171:26298	6308410	0	True				
ANR	6308498	AndExpression	globals . failing && ( ( ~ ( globals . patternBit - 1 ) & globals . pattern ) == 0 ) && ( globals . patternBit != 0 ) && globals . nextPattern == 0		6308410	0		&&			
ANR	6308499	MemberAccess	globals . failing		6308410	0					
ANR	6308500	Identifier	globals		6308410	0					
ANR	6308501	Identifier	failing		6308410	1					
ANR	6308502	AndExpression	( ( ~ ( globals . patternBit - 1 ) & globals . pattern ) == 0 ) && ( globals . patternBit != 0 ) && globals . nextPattern == 0		6308410	1		&&			
ANR	6308503	EqualityExpression	( ~ ( globals . patternBit - 1 ) & globals . pattern ) == 0		6308410	0		==			
ANR	6308504	BitAndExpression	~ ( globals . patternBit - 1 ) & globals . pattern		6308410	0		&			
ANR	6308505	UnaryOperationExpression	~ ( globals . patternBit - 1 )		6308410	0					
ANR	6308506	UnaryOperator	~		6308410	0					
ANR	6308507	AdditiveExpression	globals . patternBit - 1		6308410	1		-			
ANR	6308508	MemberAccess	globals . patternBit		6308410	0					
ANR	6308509	Identifier	globals		6308410	0					
ANR	6308510	Identifier	patternBit		6308410	1					
ANR	6308511	PrimaryExpression	1		6308410	1					
ANR	6308512	MemberAccess	globals . pattern		6308410	1					
ANR	6308513	Identifier	globals		6308410	0					
ANR	6308514	Identifier	pattern		6308410	1					
ANR	6308515	PrimaryExpression	0		6308410	1					
ANR	6308516	AndExpression	( globals . patternBit != 0 ) && globals . nextPattern == 0		6308410	1		&&			
ANR	6308517	EqualityExpression	globals . patternBit != 0		6308410	0		!=			
ANR	6308518	MemberAccess	globals . patternBit		6308410	0					
ANR	6308519	Identifier	globals		6308410	0					
ANR	6308520	Identifier	patternBit		6308410	1					
ANR	6308521	PrimaryExpression	0		6308410	1					
ANR	6308522	EqualityExpression	globals . nextPattern == 0		6308410	1		==			
ANR	6308523	MemberAccess	globals . nextPattern		6308410	0					
ANR	6308524	Identifier	globals		6308410	0					
ANR	6308525	Identifier	nextPattern		6308410	1					
ANR	6308526	PrimaryExpression	0		6308410	1					
ANR	6308527	CompoundStatement		21:138:764:764	6308410	1					
ANR	6308528	ExpressionStatement	globals . nextFailAt = globals . failAt	942:8:26381:26416	6308410	0	True				
ANR	6308529	AssignmentExpression	globals . nextFailAt = globals . failAt		6308410	0		=			
ANR	6308530	MemberAccess	globals . nextFailAt		6308410	0					
ANR	6308531	Identifier	globals		6308410	0					
ANR	6308532	Identifier	nextFailAt		6308410	1					
ANR	6308533	MemberAccess	globals . failAt		6308410	1					
ANR	6308534	Identifier	globals		6308410	0					
ANR	6308535	Identifier	failAt		6308410	1					
ANR	6308536	ExpressionStatement	globals . nextPattern = globals . pattern | globals . patternBit	943:8:26426:26484	6308410	1	True				
ANR	6308537	AssignmentExpression	globals . nextPattern = globals . pattern | globals . patternBit		6308410	0		=			
ANR	6308538	MemberAccess	globals . nextPattern		6308410	0					
ANR	6308539	Identifier	globals		6308410	0					
ANR	6308540	Identifier	nextPattern		6308410	1					
ANR	6308541	InclusiveOrExpression	globals . pattern | globals . patternBit		6308410	1		|			
ANR	6308542	MemberAccess	globals . pattern		6308410	0					
ANR	6308543	Identifier	globals		6308410	0					
ANR	6308544	Identifier	pattern		6308410	1					
ANR	6308545	MemberAccess	globals . patternBit		6308410	1					
ANR	6308546	Identifier	globals		6308410	0					
ANR	6308547	Identifier	patternBit		6308410	1					
ANR	6308548	ExpressionStatement	globals . patternBit = ( globals . patternBit ? globals . patternBit << 1 : 1 )	945:4:26496:26567	6308410	8	True				
ANR	6308549	AssignmentExpression	globals . patternBit = ( globals . patternBit ? globals . patternBit << 1 : 1 )		6308410	0		=			
ANR	6308550	MemberAccess	globals . patternBit		6308410	0					
ANR	6308551	Identifier	globals		6308410	0					
ANR	6308552	Identifier	patternBit		6308410	1					
ANR	6308553	ConditionalExpression	globals . patternBit ? globals . patternBit << 1 : 1		6308410	1					
ANR	6308554	Condition	globals . patternBit		6308410	0					
ANR	6308555	MemberAccess	globals . patternBit		6308410	0					
ANR	6308556	Identifier	globals		6308410	0					
ANR	6308557	Identifier	patternBit		6308410	1					
ANR	6308558	ShiftExpression	globals . patternBit << 1		6308410	1		<<			
ANR	6308559	MemberAccess	globals . patternBit		6308410	0					
ANR	6308560	Identifier	globals		6308410	0					
ANR	6308561	Identifier	patternBit		6308410	1					
ANR	6308562	PrimaryExpression	1		6308410	1					
ANR	6308563	PrimaryExpression	1		6308410	2					
ANR	6308564	ReturnStatement	return failThisOne ;	947:4:26574:26592	6308410	9	True				
ANR	6308565	Identifier	failThisOne		6308410	0					
ANR	6308566	ReturnType	int		6308410	1					
ANR	6308567	Identifier	Memento_failThisEvent		6308410	2					
ANR	6308568	ParameterList			6308410	3					
ANR	6308569	CFGEntryNode	ENTRY		6308410		True				
ANR	6308570	CFGExitNode	EXIT		6308410		True				
ANR	6308571	Symbol	globals . patternBit		6308410						
ANR	6308572	Symbol	squeeze		6308410						
ANR	6308573	Symbol	globals . inited		6308410						
ANR	6308574	Symbol	globals . pattern		6308410						
ANR	6308575	Symbol	globals		6308410						
ANR	6308576	Symbol	globals . failing		6308410						
ANR	6308577	Symbol	globals . squeezeAt		6308410						
ANR	6308578	Symbol	globals . nextFailAt		6308410						
ANR	6308579	Symbol	globals . failAt		6308410						
ANR	6308580	Symbol	globals . nextPattern		6308410						
ANR	6308581	Symbol	failThisOne		6308410						
ANR	6308582	Symbol	globals . sequence		6308410						
ANR	6308583	Function	Memento_malloc	950:0:26597:27528							
ANR	6308584	FunctionDef	Memento_malloc (size_t s)		6308583	0					
ANR	6308585	CompoundStatement		952:0:26629:27528	6308583	0					
ANR	6308586	IdentifierDeclStatement	Memento_BlkHeader * memblk ;	953:4:26635:26660	6308583	0	True				
ANR	6308587	IdentifierDecl	* memblk		6308583	0					
ANR	6308588	IdentifierDeclType	Memento_BlkHeader *		6308583	0					
ANR	6308589	Identifier	memblk		6308583	1					
ANR	6308590	IdentifierDeclStatement	size_t smem = MEMBLK_SIZE ( s ) ;	954:4:26666:26694	6308583	1	True				
ANR	6308591	IdentifierDecl	smem = MEMBLK_SIZE ( s )		6308583	0					
ANR	6308592	IdentifierDeclType	size_t		6308583	0					
ANR	6308593	Identifier	smem		6308583	1					
ANR	6308594	AssignmentExpression	smem = MEMBLK_SIZE ( s )		6308583	2		=			
ANR	6308595	Identifier	smem		6308583	0					
ANR	6308596	CallExpression	MEMBLK_SIZE ( s )		6308583	1					
ANR	6308597	Callee	MEMBLK_SIZE		6308583	0					
ANR	6308598	Identifier	MEMBLK_SIZE		6308583	0					
ANR	6308599	ArgumentList	s		6308583	1					
ANR	6308600	Argument	s		6308583	0					
ANR	6308601	Identifier	s		6308583	0					
ANR	6308602	IfStatement	if ( Memento_failThisEvent ( ) )		6308583	2					
ANR	6308603	Condition	Memento_failThisEvent ( )	956:8:26705:26727	6308583	0	True				
ANR	6308604	CallExpression	Memento_failThisEvent ( )		6308583	0					
ANR	6308605	Callee	Memento_failThisEvent		6308583	0					
ANR	6308606	Identifier	Memento_failThisEvent		6308583	0					
ANR	6308607	ArgumentList			6308583	1					
ANR	6308608	ReturnStatement	return NULL ;	957:8:26738:26749	6308583	1	True				
ANR	6308609	Identifier	NULL		6308583	0					
ANR	6308610	IfStatement	if ( s == 0 )		6308583	3					
ANR	6308611	Condition	s == 0	959:8:26760:26765	6308583	0	True				
ANR	6308612	EqualityExpression	s == 0		6308583	0		==			
ANR	6308613	Identifier	s		6308583	0					
ANR	6308614	PrimaryExpression	0		6308583	1					
ANR	6308615	ReturnStatement	return NULL ;	960:8:26776:26787	6308583	1	True				
ANR	6308616	Identifier	NULL		6308583	0					
ANR	6308617	ExpressionStatement	globals . numMallocs ++	962:4:26794:26814	6308583	4	True				
ANR	6308618	PostIncDecOperationExpression	globals . numMallocs ++		6308583	0					
ANR	6308619	MemberAccess	globals . numMallocs		6308583	0					
ANR	6308620	Identifier	globals		6308583	0					
ANR	6308621	Identifier	numMallocs		6308583	1					
ANR	6308622	IncDec	++		6308583	1					
ANR	6308623	IfStatement	if ( globals . maxMemory != 0 && globals . alloc + s > globals . maxMemory )		6308583	5					
ANR	6308624	Condition	globals . maxMemory != 0 && globals . alloc + s > globals . maxMemory	964:8:26825:26887	6308583	0	True				
ANR	6308625	AndExpression	globals . maxMemory != 0 && globals . alloc + s > globals . maxMemory		6308583	0		&&			
ANR	6308626	EqualityExpression	globals . maxMemory != 0		6308583	0		!=			
ANR	6308627	MemberAccess	globals . maxMemory		6308583	0					
ANR	6308628	Identifier	globals		6308583	0					
ANR	6308629	Identifier	maxMemory		6308583	1					
ANR	6308630	PrimaryExpression	0		6308583	1					
ANR	6308631	RelationalExpression	globals . alloc + s > globals . maxMemory		6308583	1		>			
ANR	6308632	AdditiveExpression	globals . alloc + s		6308583	0		+			
ANR	6308633	MemberAccess	globals . alloc		6308583	0					
ANR	6308634	Identifier	globals		6308583	0					
ANR	6308635	Identifier	alloc		6308583	1					
ANR	6308636	Identifier	s		6308583	1					
ANR	6308637	MemberAccess	globals . maxMemory		6308583	1					
ANR	6308638	Identifier	globals		6308583	0					
ANR	6308639	Identifier	maxMemory		6308583	1					
ANR	6308640	ReturnStatement	return NULL ;	965:8:26898:26909	6308583	1	True				
ANR	6308641	Identifier	NULL		6308583	0					
ANR	6308642	ExpressionStatement	memblk = MEMENTO_UNDERLYING_MALLOC ( smem )	967:4:26916:26956	6308583	6	True				
ANR	6308643	AssignmentExpression	memblk = MEMENTO_UNDERLYING_MALLOC ( smem )		6308583	0		=			
ANR	6308644	Identifier	memblk		6308583	0					
ANR	6308645	CallExpression	MEMENTO_UNDERLYING_MALLOC ( smem )		6308583	1					
ANR	6308646	Callee	MEMENTO_UNDERLYING_MALLOC		6308583	0					
ANR	6308647	Identifier	MEMENTO_UNDERLYING_MALLOC		6308583	0					
ANR	6308648	ArgumentList	smem		6308583	1					
ANR	6308649	Argument	smem		6308583	0					
ANR	6308650	Identifier	smem		6308583	0					
ANR	6308651	IfStatement	if ( memblk == NULL )		6308583	7					
ANR	6308652	Condition	memblk == NULL	968:8:26966:26979	6308583	0	True				
ANR	6308653	EqualityExpression	memblk == NULL		6308583	0		==			
ANR	6308654	Identifier	memblk		6308583	0					
ANR	6308655	Identifier	NULL		6308583	1					
ANR	6308656	ReturnStatement	return NULL ;	969:8:26990:27001	6308583	1	True				
ANR	6308657	Identifier	NULL		6308583	0					
ANR	6308658	ExpressionStatement	globals . alloc += s	971:4:27008:27026	6308583	8	True				
ANR	6308659	AssignmentExpression	globals . alloc += s		6308583	0		+=			
ANR	6308660	MemberAccess	globals . alloc		6308583	0					
ANR	6308661	Identifier	globals		6308583	0					
ANR	6308662	Identifier	alloc		6308583	1					
ANR	6308663	Identifier	s		6308583	1					
ANR	6308664	ExpressionStatement	globals . totalAlloc += s	972:4:27032:27055	6308583	9	True				
ANR	6308665	AssignmentExpression	globals . totalAlloc += s		6308583	0		+=			
ANR	6308666	MemberAccess	globals . totalAlloc		6308583	0					
ANR	6308667	Identifier	globals		6308583	0					
ANR	6308668	Identifier	totalAlloc		6308583	1					
ANR	6308669	Identifier	s		6308583	1					
ANR	6308670	IfStatement	if ( globals . peakAlloc < globals . alloc )		6308583	10					
ANR	6308671	Condition	globals . peakAlloc < globals . alloc	973:8:27065:27097	6308583	0	True				
ANR	6308672	RelationalExpression	globals . peakAlloc < globals . alloc		6308583	0		<			
ANR	6308673	MemberAccess	globals . peakAlloc		6308583	0					
ANR	6308674	Identifier	globals		6308583	0					
ANR	6308675	Identifier	peakAlloc		6308583	1					
ANR	6308676	MemberAccess	globals . alloc		6308583	1					
ANR	6308677	Identifier	globals		6308583	0					
ANR	6308678	Identifier	alloc		6308583	1					
ANR	6308679	ExpressionStatement	globals . peakAlloc = globals . alloc	974:8:27108:27141	6308583	1	True				
ANR	6308680	AssignmentExpression	globals . peakAlloc = globals . alloc		6308583	0		=			
ANR	6308681	MemberAccess	globals . peakAlloc		6308583	0					
ANR	6308682	Identifier	globals		6308583	0					
ANR	6308683	Identifier	peakAlloc		6308583	1					
ANR	6308684	MemberAccess	globals . alloc		6308583	1					
ANR	6308685	Identifier	globals		6308583	0					
ANR	6308686	Identifier	alloc		6308583	1					
ANR	6308687	ExpressionStatement	"memset ( MEMBLK_TOBLK ( memblk ) , MEMENTO_ALLOCFILL , s )"	976:4:27172:27222	6308583	11	True				
ANR	6308688	CallExpression	"memset ( MEMBLK_TOBLK ( memblk ) , MEMENTO_ALLOCFILL , s )"		6308583	0					
ANR	6308689	Callee	memset		6308583	0					
ANR	6308690	Identifier	memset		6308583	0					
ANR	6308691	ArgumentList	MEMBLK_TOBLK ( memblk )		6308583	1					
ANR	6308692	Argument	MEMBLK_TOBLK ( memblk )		6308583	0					
ANR	6308693	CallExpression	MEMBLK_TOBLK ( memblk )		6308583	0					
ANR	6308694	Callee	MEMBLK_TOBLK		6308583	0					
ANR	6308695	Identifier	MEMBLK_TOBLK		6308583	0					
ANR	6308696	ArgumentList	memblk		6308583	1					
ANR	6308697	Argument	memblk		6308583	0					
ANR	6308698	Identifier	memblk		6308583	0					
ANR	6308699	Argument	MEMENTO_ALLOCFILL		6308583	1					
ANR	6308700	Identifier	MEMENTO_ALLOCFILL		6308583	0					
ANR	6308701	Argument	s		6308583	2					
ANR	6308702	Identifier	s		6308583	0					
ANR	6308703	ExpressionStatement	memblk -> rawsize = s	978:4:27235:27254	6308583	12	True				
ANR	6308704	AssignmentExpression	memblk -> rawsize = s		6308583	0		=			
ANR	6308705	PtrMemberAccess	memblk -> rawsize		6308583	0					
ANR	6308706	Identifier	memblk		6308583	0					
ANR	6308707	Identifier	rawsize		6308583	1					
ANR	6308708	Identifier	s		6308583	1					
ANR	6308709	ExpressionStatement	memblk -> sequence = globals . sequence	979:4:27260:27295	6308583	13	True				
ANR	6308710	AssignmentExpression	memblk -> sequence = globals . sequence		6308583	0		=			
ANR	6308711	PtrMemberAccess	memblk -> sequence		6308583	0					
ANR	6308712	Identifier	memblk		6308583	0					
ANR	6308713	Identifier	sequence		6308583	1					
ANR	6308714	MemberAccess	globals . sequence		6308583	1					
ANR	6308715	Identifier	globals		6308583	0					
ANR	6308716	Identifier	sequence		6308583	1					
ANR	6308717	ExpressionStatement	memblk -> lastCheckedOK = memblk -> sequence	980:4:27301:27341	6308583	14	True				
ANR	6308718	AssignmentExpression	memblk -> lastCheckedOK = memblk -> sequence		6308583	0		=			
ANR	6308719	PtrMemberAccess	memblk -> lastCheckedOK		6308583	0					
ANR	6308720	Identifier	memblk		6308583	0					
ANR	6308721	Identifier	lastCheckedOK		6308583	1					
ANR	6308722	PtrMemberAccess	memblk -> sequence		6308583	1					
ANR	6308723	Identifier	memblk		6308583	0					
ANR	6308724	Identifier	sequence		6308583	1					
ANR	6308725	ExpressionStatement	memblk -> flags = 0	981:4:27347:27364	6308583	15	True				
ANR	6308726	AssignmentExpression	memblk -> flags = 0		6308583	0		=			
ANR	6308727	PtrMemberAccess	memblk -> flags		6308583	0					
ANR	6308728	Identifier	memblk		6308583	0					
ANR	6308729	Identifier	flags		6308583	1					
ANR	6308730	PrimaryExpression	0		6308583	1					
ANR	6308731	ExpressionStatement	memblk -> label = 0	982:4:27370:27387	6308583	16	True				
ANR	6308732	AssignmentExpression	memblk -> label = 0		6308583	0		=			
ANR	6308733	PtrMemberAccess	memblk -> label		6308583	0					
ANR	6308734	Identifier	memblk		6308583	0					
ANR	6308735	Identifier	label		6308583	1					
ANR	6308736	PrimaryExpression	0		6308583	1					
ANR	6308737	ExpressionStatement	memblk -> child = NULL	983:4:27393:27413	6308583	17	True				
ANR	6308738	AssignmentExpression	memblk -> child = NULL		6308583	0		=			
ANR	6308739	PtrMemberAccess	memblk -> child		6308583	0					
ANR	6308740	Identifier	memblk		6308583	0					
ANR	6308741	Identifier	child		6308583	1					
ANR	6308742	Identifier	NULL		6308583	1					
ANR	6308743	ExpressionStatement	memblk -> sibling = NULL	984:4:27419:27441	6308583	18	True				
ANR	6308744	AssignmentExpression	memblk -> sibling = NULL		6308583	0		=			
ANR	6308745	PtrMemberAccess	memblk -> sibling		6308583	0					
ANR	6308746	Identifier	memblk		6308583	0					
ANR	6308747	Identifier	sibling		6308583	1					
ANR	6308748	Identifier	NULL		6308583	1					
ANR	6308749	ExpressionStatement	"Memento_addBlockHead ( & globals . used , memblk , 0 )"	985:4:27447:27493	6308583	19	True				
ANR	6308750	CallExpression	"Memento_addBlockHead ( & globals . used , memblk , 0 )"		6308583	0					
ANR	6308751	Callee	Memento_addBlockHead		6308583	0					
ANR	6308752	Identifier	Memento_addBlockHead		6308583	0					
ANR	6308753	ArgumentList	& globals . used		6308583	1					
ANR	6308754	Argument	& globals . used		6308583	0					
ANR	6308755	UnaryOperationExpression	& globals . used		6308583	0					
ANR	6308756	UnaryOperator	&		6308583	0					
ANR	6308757	MemberAccess	globals . used		6308583	1					
ANR	6308758	Identifier	globals		6308583	0					
ANR	6308759	Identifier	used		6308583	1					
ANR	6308760	Argument	memblk		6308583	1					
ANR	6308761	Identifier	memblk		6308583	0					
ANR	6308762	Argument	0		6308583	2					
ANR	6308763	PrimaryExpression	0		6308583	0					
ANR	6308764	ReturnStatement	return MEMBLK_TOBLK ( memblk ) ;	986:4:27499:27526	6308583	20	True				
ANR	6308765	CallExpression	MEMBLK_TOBLK ( memblk )		6308583	0					
ANR	6308766	Callee	MEMBLK_TOBLK		6308583	0					
ANR	6308767	Identifier	MEMBLK_TOBLK		6308583	0					
ANR	6308768	ArgumentList	memblk		6308583	1					
ANR	6308769	Argument	memblk		6308583	0					
ANR	6308770	Identifier	memblk		6308583	0					
ANR	6308771	ReturnType	void *		6308583	1					
ANR	6308772	Identifier	Memento_malloc		6308583	2					
ANR	6308773	ParameterList	size_t s		6308583	3					
ANR	6308774	Parameter	size_t s	951:15:26619:26626	6308583	0	True				
ANR	6308775	ParameterType	size_t		6308583	0					
ANR	6308776	Identifier	s		6308583	1					
ANR	6308777	CFGEntryNode	ENTRY		6308583		True				
ANR	6308778	CFGExitNode	EXIT		6308583		True				
ANR	6308779	Symbol	globals		6308583						
ANR	6308780	Symbol	globals . numMallocs		6308583						
ANR	6308781	Symbol	globals . maxMemory		6308583						
ANR	6308782	Symbol	globals . totalAlloc		6308583						
ANR	6308783	Symbol	* memblk		6308583						
ANR	6308784	Symbol	MEMBLK_SIZE		6308583						
ANR	6308785	Symbol	MEMENTO_UNDERLYING_MALLOC		6308583						
ANR	6308786	Symbol	memblk -> sequence		6308583						
ANR	6308787	Symbol	& globals . used		6308583						
ANR	6308788	Symbol	MEMENTO_ALLOCFILL		6308583						
ANR	6308789	Symbol	globals . sequence		6308583						
ANR	6308790	Symbol	Memento_failThisEvent		6308583						
ANR	6308791	Symbol	NULL		6308583						
ANR	6308792	Symbol	memblk -> sibling		6308583						
ANR	6308793	Symbol	globals . alloc		6308583						
ANR	6308794	Symbol	memblk -> child		6308583						
ANR	6308795	Symbol	memblk		6308583						
ANR	6308796	Symbol	MEMBLK_TOBLK		6308583						
ANR	6308797	Symbol	memblk -> rawsize		6308583						
ANR	6308798	Symbol	memblk -> lastCheckedOK		6308583						
ANR	6308799	Symbol	s		6308583						
ANR	6308800	Symbol	& globals		6308583						
ANR	6308801	Symbol	smem		6308583						
ANR	6308802	Symbol	globals . peakAlloc		6308583						
ANR	6308803	Symbol	memblk -> flags		6308583						
ANR	6308804	Symbol	memblk -> label		6308583						
ANR	6308805	Function	Memento_calloc	989:0:27531:27683							
ANR	6308806	FunctionDef	"Memento_calloc (size_t n , size_t s)"		6308805	0					
ANR	6308807	CompoundStatement		991:0:27573:27683	6308805	0					
ANR	6308808	IdentifierDeclStatement	void * block = Memento_malloc ( n * s ) ;	992:4:27579:27614	6308805	0	True				
ANR	6308809	IdentifierDecl	* block = Memento_malloc ( n * s )		6308805	0					
ANR	6308810	IdentifierDeclType	void *		6308805	0					
ANR	6308811	Identifier	block		6308805	1					
ANR	6308812	AssignmentExpression	* block = Memento_malloc ( n * s )		6308805	2		=			
ANR	6308813	Identifier	block		6308805	0					
ANR	6308814	CallExpression	Memento_malloc ( n * s )		6308805	1					
ANR	6308815	Callee	Memento_malloc		6308805	0					
ANR	6308816	Identifier	Memento_malloc		6308805	0					
ANR	6308817	ArgumentList	n * s		6308805	1					
ANR	6308818	Argument	n * s		6308805	0					
ANR	6308819	MultiplicativeExpression	n * s		6308805	0		*			
ANR	6308820	Identifier	n		6308805	0					
ANR	6308821	Identifier	s		6308805	1					
ANR	6308822	IfStatement	if ( block )		6308805	1					
ANR	6308823	Condition	block	994:8:27625:27629	6308805	0	True				
ANR	6308824	Identifier	block		6308805	0					
ANR	6308825	ExpressionStatement	"memset ( block , 0 , n * s )"	995:8:27640:27663	6308805	1	True				
ANR	6308826	CallExpression	"memset ( block , 0 , n * s )"		6308805	0					
ANR	6308827	Callee	memset		6308805	0					
ANR	6308828	Identifier	memset		6308805	0					
ANR	6308829	ArgumentList	block		6308805	1					
ANR	6308830	Argument	block		6308805	0					
ANR	6308831	Identifier	block		6308805	0					
ANR	6308832	Argument	0		6308805	1					
ANR	6308833	PrimaryExpression	0		6308805	0					
ANR	6308834	Argument	n * s		6308805	2					
ANR	6308835	MultiplicativeExpression	n * s		6308805	0		*			
ANR	6308836	Identifier	n		6308805	0					
ANR	6308837	Identifier	s		6308805	1					
ANR	6308838	ReturnStatement	return block ;	996:4:27669:27681	6308805	2	True				
ANR	6308839	Identifier	block		6308805	0					
ANR	6308840	ReturnType	void *		6308805	1					
ANR	6308841	Identifier	Memento_calloc		6308805	2					
ANR	6308842	ParameterList	"size_t n , size_t s"		6308805	3					
ANR	6308843	Parameter	size_t n	990:15:27553:27560	6308805	0	True				
ANR	6308844	ParameterType	size_t		6308805	0					
ANR	6308845	Identifier	n		6308805	1					
ANR	6308846	Parameter	size_t s	990:25:27563:27570	6308805	1	True				
ANR	6308847	ParameterType	size_t		6308805	0					
ANR	6308848	Identifier	s		6308805	1					
ANR	6308849	CFGEntryNode	ENTRY		6308805		True				
ANR	6308850	CFGExitNode	EXIT		6308805		True				
ANR	6308851	Symbol	s		6308805						
ANR	6308852	Symbol	block		6308805						
ANR	6308853	Symbol	Memento_malloc		6308805						
ANR	6308854	Symbol	n		6308805						
ANR	6308855	Function	checkBlock	999:0:27686:28685							
ANR	6308856	FunctionDef	"checkBlock (Memento_BlkHeader * memblk , const char * action)"		6308855	0					
ANR	6308857	CompoundStatement		1001:0:27755:28685	6308855	0					
ANR	6308858	IdentifierDeclStatement	BlkCheckData data ;	1003:4:27786:27803	6308855	0	True				
ANR	6308859	IdentifierDecl	data		6308855	0					
ANR	6308860	IdentifierDeclType	BlkCheckData		6308855	0					
ANR	6308861	Identifier	data		6308855	1					
ANR	6308862	ExpressionStatement	"memset ( & data , 0 , sizeof ( data ) )"	1005:4:27810:27840	6308855	1	True				
ANR	6308863	CallExpression	"memset ( & data , 0 , sizeof ( data ) )"		6308855	0					
ANR	6308864	Callee	memset		6308855	0					
ANR	6308865	Identifier	memset		6308855	0					
ANR	6308866	ArgumentList	& data		6308855	1					
ANR	6308867	Argument	& data		6308855	0					
ANR	6308868	UnaryOperationExpression	& data		6308855	0					
ANR	6308869	UnaryOperator	&		6308855	0					
ANR	6308870	Identifier	data		6308855	1					
ANR	6308871	Argument	0		6308855	1					
ANR	6308872	PrimaryExpression	0		6308855	0					
ANR	6308873	Argument	sizeof ( data )		6308855	2					
ANR	6308874	SizeofExpression	sizeof ( data )		6308855	0					
ANR	6308875	Sizeof	sizeof		6308855	0					
ANR	6308876	SizeofOperand	data		6308855	1					
ANR	6308877	ExpressionStatement	"Memento_appBlock ( & globals . used , Memento_Internal_checkAllocedBlock , & data , memblk )"	1006:4:27846:27928	6308855	2	True				
ANR	6308878	CallExpression	"Memento_appBlock ( & globals . used , Memento_Internal_checkAllocedBlock , & data , memblk )"		6308855	0					
ANR	6308879	Callee	Memento_appBlock		6308855	0					
ANR	6308880	Identifier	Memento_appBlock		6308855	0					
ANR	6308881	ArgumentList	& globals . used		6308855	1					
ANR	6308882	Argument	& globals . used		6308855	0					
ANR	6308883	UnaryOperationExpression	& globals . used		6308855	0					
ANR	6308884	UnaryOperator	&		6308855	0					
ANR	6308885	MemberAccess	globals . used		6308855	1					
ANR	6308886	Identifier	globals		6308855	0					
ANR	6308887	Identifier	used		6308855	1					
ANR	6308888	Argument	Memento_Internal_checkAllocedBlock		6308855	1					
ANR	6308889	Identifier	Memento_Internal_checkAllocedBlock		6308855	0					
ANR	6308890	Argument	& data		6308855	2					
ANR	6308891	UnaryOperationExpression	& data		6308855	0					
ANR	6308892	UnaryOperator	&		6308855	0					
ANR	6308893	Identifier	data		6308855	1					
ANR	6308894	Argument	memblk		6308855	3					
ANR	6308895	Identifier	memblk		6308855	0					
ANR	6308896	IfStatement	if ( ! data . found )		6308855	3					
ANR	6308897	Condition	! data . found	1007:8:27938:27948	6308855	0	True				
ANR	6308898	UnaryOperationExpression	! data . found		6308855	0					
ANR	6308899	UnaryOperator	!		6308855	0					
ANR	6308900	MemberAccess	data . found		6308855	1					
ANR	6308901	Identifier	data		6308855	0					
ANR	6308902	Identifier	found		6308855	1					
ANR	6308903	CompoundStatement		7:21:195:195	6308855	1					
ANR	6308904	ExpressionStatement	"fprintf ( stderr , ""Attempt to %s block "" , action )"	1009:8:27984:28031	6308855	0	True				
ANR	6308905	CallExpression	"fprintf ( stderr , ""Attempt to %s block "" , action )"		6308855	0					
ANR	6308906	Callee	fprintf		6308855	0					
ANR	6308907	Identifier	fprintf		6308855	0					
ANR	6308908	ArgumentList	stderr		6308855	1					
ANR	6308909	Argument	stderr		6308855	0					
ANR	6308910	Identifier	stderr		6308855	0					
ANR	6308911	Argument	"""Attempt to %s block """		6308855	1					
ANR	6308912	PrimaryExpression	"""Attempt to %s block """		6308855	0					
ANR	6308913	Argument	action		6308855	2					
ANR	6308914	Identifier	action		6308855	0					
ANR	6308915	ExpressionStatement	"showBlock ( memblk , 32 )"	1010:8:28041:28062	6308855	1	True				
ANR	6308916	CallExpression	"showBlock ( memblk , 32 )"		6308855	0					
ANR	6308917	Callee	showBlock		6308855	0					
ANR	6308918	Identifier	showBlock		6308855	0					
ANR	6308919	ArgumentList	memblk		6308855	1					
ANR	6308920	Argument	memblk		6308855	0					
ANR	6308921	Identifier	memblk		6308855	0					
ANR	6308922	Argument	32		6308855	1					
ANR	6308923	PrimaryExpression	32		6308855	0					
ANR	6308924	ExpressionStatement	Memento_breakpoint ( )	1011:8:28072:28092	6308855	2	True				
ANR	6308925	CallExpression	Memento_breakpoint ( )		6308855	0					
ANR	6308926	Callee	Memento_breakpoint		6308855	0					
ANR	6308927	Identifier	Memento_breakpoint		6308855	0					
ANR	6308928	ArgumentList			6308855	1					
ANR	6308929	ReturnStatement	return 1 ;	1012:8:28102:28110	6308855	3	True				
ANR	6308930	PrimaryExpression	1		6308855	0					
ANR	6308931	ElseStatement	else		6308855	0					
ANR	6308932	IfStatement	if ( data . preCorrupt || data . postCorrupt )		6308855	0					
ANR	6308933	Condition	data . preCorrupt || data . postCorrupt	1013:15:28127:28161	6308855	0	True				
ANR	6308934	OrExpression	data . preCorrupt || data . postCorrupt		6308855	0		||			
ANR	6308935	MemberAccess	data . preCorrupt		6308855	0					
ANR	6308936	Identifier	data		6308855	0					
ANR	6308937	Identifier	preCorrupt		6308855	1					
ANR	6308938	MemberAccess	data . postCorrupt		6308855	1					
ANR	6308939	Identifier	data		6308855	0					
ANR	6308940	Identifier	postCorrupt		6308855	1					
ANR	6308941	CompoundStatement		13:52:408:408	6308855	1					
ANR	6308942	ExpressionStatement	"fprintf ( stderr , ""Block "" )"	1014:8:28174:28199	6308855	0	True				
ANR	6308943	CallExpression	"fprintf ( stderr , ""Block "" )"		6308855	0					
ANR	6308944	Callee	fprintf		6308855	0					
ANR	6308945	Identifier	fprintf		6308855	0					
ANR	6308946	ArgumentList	stderr		6308855	1					
ANR	6308947	Argument	stderr		6308855	0					
ANR	6308948	Identifier	stderr		6308855	0					
ANR	6308949	Argument	"""Block """		6308855	1					
ANR	6308950	PrimaryExpression	"""Block """		6308855	0					
ANR	6308951	ExpressionStatement	"showBlock ( memblk , ' ' )"	1015:8:28209:28231	6308855	1	True				
ANR	6308952	CallExpression	"showBlock ( memblk , ' ' )"		6308855	0					
ANR	6308953	Callee	showBlock		6308855	0					
ANR	6308954	Identifier	showBlock		6308855	0					
ANR	6308955	ArgumentList	memblk		6308855	1					
ANR	6308956	Argument	memblk		6308855	0					
ANR	6308957	Identifier	memblk		6308855	0					
ANR	6308958	Argument	' '		6308855	1					
ANR	6308959	PrimaryExpression	' '		6308855	0					
ANR	6308960	ExpressionStatement	"fprintf ( stderr , "" found to be corrupted on %s!\\n"" , action )"	1016:8:28241:28299	6308855	2	True				
ANR	6308961	CallExpression	"fprintf ( stderr , "" found to be corrupted on %s!\\n"" , action )"		6308855	0					
ANR	6308962	Callee	fprintf		6308855	0					
ANR	6308963	Identifier	fprintf		6308855	0					
ANR	6308964	ArgumentList	stderr		6308855	1					
ANR	6308965	Argument	stderr		6308855	0					
ANR	6308966	Identifier	stderr		6308855	0					
ANR	6308967	Argument	""" found to be corrupted on %s!\\n"""		6308855	1					
ANR	6308968	PrimaryExpression	""" found to be corrupted on %s!\\n"""		6308855	0					
ANR	6308969	Argument	action		6308855	2					
ANR	6308970	Identifier	action		6308855	0					
ANR	6308971	IfStatement	if ( data . preCorrupt )		6308855	3					
ANR	6308972	Condition	data . preCorrupt	1017:12:28313:28327	6308855	0	True				
ANR	6308973	MemberAccess	data . preCorrupt		6308855	0					
ANR	6308974	Identifier	data		6308855	0					
ANR	6308975	Identifier	preCorrupt		6308855	1					
ANR	6308976	CompoundStatement		17:29:574:574	6308855	1					
ANR	6308977	ExpressionStatement	"fprintf ( stderr , ""Preguard corrupted\\n"" )"	1018:12:28344:28383	6308855	0	True				
ANR	6308978	CallExpression	"fprintf ( stderr , ""Preguard corrupted\\n"" )"		6308855	0					
ANR	6308979	Callee	fprintf		6308855	0					
ANR	6308980	Identifier	fprintf		6308855	0					
ANR	6308981	ArgumentList	stderr		6308855	1					
ANR	6308982	Argument	stderr		6308855	0					
ANR	6308983	Identifier	stderr		6308855	0					
ANR	6308984	Argument	"""Preguard corrupted\\n"""		6308855	1					
ANR	6308985	PrimaryExpression	"""Preguard corrupted\\n"""		6308855	0					
ANR	6308986	IfStatement	if ( data . postCorrupt )		6308855	4					
ANR	6308987	Condition	data . postCorrupt	1020:12:28407:28422	6308855	0	True				
ANR	6308988	MemberAccess	data . postCorrupt		6308855	0					
ANR	6308989	Identifier	data		6308855	0					
ANR	6308990	Identifier	postCorrupt		6308855	1					
ANR	6308991	CompoundStatement		20:30:669:669	6308855	1					
ANR	6308992	ExpressionStatement	"fprintf ( stderr , ""Postguard corrupted\\n"" )"	1021:12:28439:28479	6308855	0	True				
ANR	6308993	CallExpression	"fprintf ( stderr , ""Postguard corrupted\\n"" )"		6308855	0					
ANR	6308994	Callee	fprintf		6308855	0					
ANR	6308995	Identifier	fprintf		6308855	0					
ANR	6308996	ArgumentList	stderr		6308855	1					
ANR	6308997	Argument	stderr		6308855	0					
ANR	6308998	Identifier	stderr		6308855	0					
ANR	6308999	Argument	"""Postguard corrupted\\n"""		6308855	1					
ANR	6309000	PrimaryExpression	"""Postguard corrupted\\n"""		6308855	0					
ANR	6309001	ExpressionStatement	"fprintf ( stderr , ""Block last checked OK at allocation %d. Now %d.\\n"" , memblk -> lastCheckedOK , globals . sequence )"	1023:8:28499:28608	6308855	5	True				
ANR	6309002	CallExpression	"fprintf ( stderr , ""Block last checked OK at allocation %d. Now %d.\\n"" , memblk -> lastCheckedOK , globals . sequence )"		6308855	0					
ANR	6309003	Callee	fprintf		6308855	0					
ANR	6309004	Identifier	fprintf		6308855	0					
ANR	6309005	ArgumentList	stderr		6308855	1					
ANR	6309006	Argument	stderr		6308855	0					
ANR	6309007	Identifier	stderr		6308855	0					
ANR	6309008	Argument	"""Block last checked OK at allocation %d. Now %d.\\n"""		6308855	1					
ANR	6309009	PrimaryExpression	"""Block last checked OK at allocation %d. Now %d.\\n"""		6308855	0					
ANR	6309010	Argument	memblk -> lastCheckedOK		6308855	2					
ANR	6309011	PtrMemberAccess	memblk -> lastCheckedOK		6308855	0					
ANR	6309012	Identifier	memblk		6308855	0					
ANR	6309013	Identifier	lastCheckedOK		6308855	1					
ANR	6309014	Argument	globals . sequence		6308855	3					
ANR	6309015	MemberAccess	globals . sequence		6308855	0					
ANR	6309016	Identifier	globals		6308855	0					
ANR	6309017	Identifier	sequence		6308855	1					
ANR	6309018	ExpressionStatement	Memento_breakpoint ( )	1024:8:28618:28638	6308855	6	True				
ANR	6309019	CallExpression	Memento_breakpoint ( )		6308855	0					
ANR	6309020	Callee	Memento_breakpoint		6308855	0					
ANR	6309021	Identifier	Memento_breakpoint		6308855	0					
ANR	6309022	ArgumentList			6308855	1					
ANR	6309023	ReturnStatement	return 1 ;	1025:8:28648:28656	6308855	7	True				
ANR	6309024	PrimaryExpression	1		6308855	0					
ANR	6309025	ReturnStatement	return 0 ;	1028:4:28675:28683	6308855	4	True				
ANR	6309026	PrimaryExpression	0		6308855	0					
ANR	6309027	ReturnType	static int		6308855	1					
ANR	6309028	Identifier	checkBlock		6308855	2					
ANR	6309029	ParameterList	"Memento_BlkHeader * memblk , const char * action"		6308855	3					
ANR	6309030	Parameter	Memento_BlkHeader * memblk	1000:11:27708:27732	6308855	0	True				
ANR	6309031	ParameterType	Memento_BlkHeader *		6308855	0					
ANR	6309032	Identifier	memblk		6308855	1					
ANR	6309033	Parameter	const char * action	1000:38:27735:27752	6308855	1	True				
ANR	6309034	ParameterType	const char *		6308855	0					
ANR	6309035	Identifier	action		6308855	1					
ANR	6309036	CFGEntryNode	ENTRY		6308855		True				
ANR	6309037	CFGExitNode	EXIT		6308855		True				
ANR	6309038	Symbol	data . preCorrupt		6308855						
ANR	6309039	Symbol	data		6308855						
ANR	6309040	Symbol	globals		6308855						
ANR	6309041	Symbol	data . postCorrupt		6308855						
ANR	6309042	Symbol	data . found		6308855						
ANR	6309043	Symbol	stderr		6308855						
ANR	6309044	Symbol	memblk		6308855						
ANR	6309045	Symbol	& data		6308855						
ANR	6309046	Symbol	Memento_Internal_checkAllocedBlock		6308855						
ANR	6309047	Symbol	memblk -> lastCheckedOK		6308855						
ANR	6309048	Symbol	& globals		6308855						
ANR	6309049	Symbol	action		6308855						
ANR	6309050	Symbol	* memblk		6308855						
ANR	6309051	Symbol	& globals . used		6308855						
ANR	6309052	Symbol	globals . sequence		6308855						
ANR	6309053	Function	Memento_free	1031:0:28688:29751							
ANR	6309054	FunctionDef	Memento_free (void * blk)		6309053	0					
ANR	6309055	CompoundStatement		1033:0:28717:29751	6309053	0					
ANR	6309056	IdentifierDeclStatement	Memento_BlkHeader * memblk ;	1034:4:28723:28748	6309053	0	True				
ANR	6309057	IdentifierDecl	* memblk		6309053	0					
ANR	6309058	IdentifierDeclType	Memento_BlkHeader *		6309053	0					
ANR	6309059	Identifier	memblk		6309053	1					
ANR	6309060	IfStatement	if ( ! globals . inited )		6309053	1					
ANR	6309061	Condition	! globals . inited	1036:8:28759:28773	6309053	0	True				
ANR	6309062	UnaryOperationExpression	! globals . inited		6309053	0					
ANR	6309063	UnaryOperator	!		6309053	0					
ANR	6309064	MemberAccess	globals . inited		6309053	1					
ANR	6309065	Identifier	globals		6309053	0					
ANR	6309066	Identifier	inited		6309053	1					
ANR	6309067	ExpressionStatement	Memento_init ( )	1037:8:28784:28798	6309053	1	True				
ANR	6309068	CallExpression	Memento_init ( )		6309053	0					
ANR	6309069	Callee	Memento_init		6309053	0					
ANR	6309070	Identifier	Memento_init		6309053	0					
ANR	6309071	ArgumentList			6309053	1					
ANR	6309072	ExpressionStatement	Memento_event ( )	1039:4:28805:28820	6309053	2	True				
ANR	6309073	CallExpression	Memento_event ( )		6309053	0					
ANR	6309074	Callee	Memento_event		6309053	0					
ANR	6309075	Identifier	Memento_event		6309053	0					
ANR	6309076	ArgumentList			6309053	1					
ANR	6309077	IfStatement	if ( blk == NULL )		6309053	3					
ANR	6309078	Condition	blk == NULL	1041:8:28831:28841	6309053	0	True				
ANR	6309079	EqualityExpression	blk == NULL		6309053	0		==			
ANR	6309080	Identifier	blk		6309053	0					
ANR	6309081	Identifier	NULL		6309053	1					
ANR	6309082	ReturnStatement	return ;	1042:8:28852:28858	6309053	1	True				
ANR	6309083	ExpressionStatement	memblk = MEMBLK_FROMBLK ( blk )	1044:4:28865:28893	6309053	4	True				
ANR	6309084	AssignmentExpression	memblk = MEMBLK_FROMBLK ( blk )		6309053	0		=			
ANR	6309085	Identifier	memblk		6309053	0					
ANR	6309086	CallExpression	MEMBLK_FROMBLK ( blk )		6309053	1					
ANR	6309087	Callee	MEMBLK_FROMBLK		6309053	0					
ANR	6309088	Identifier	MEMBLK_FROMBLK		6309053	0					
ANR	6309089	ArgumentList	blk		6309053	1					
ANR	6309090	Argument	blk		6309053	0					
ANR	6309091	Identifier	blk		6309053	0					
ANR	6309092	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"	1045:4:28899:28949	6309053	5	True				
ANR	6309093	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"		6309053	0					
ANR	6309094	Callee	VALGRIND_MAKE_MEM_DEFINED		6309053	0					
ANR	6309095	Identifier	VALGRIND_MAKE_MEM_DEFINED		6309053	0					
ANR	6309096	ArgumentList	memblk		6309053	1					
ANR	6309097	Argument	memblk		6309053	0					
ANR	6309098	Identifier	memblk		6309053	0					
ANR	6309099	Argument	sizeof ( * memblk )		6309053	1					
ANR	6309100	SizeofExpression	sizeof ( * memblk )		6309053	0					
ANR	6309101	Sizeof	sizeof		6309053	0					
ANR	6309102	UnaryOperationExpression	* memblk		6309053	1					
ANR	6309103	UnaryOperator	*		6309053	0					
ANR	6309104	Identifier	memblk		6309053	1					
ANR	6309105	IfStatement	"if ( checkBlock ( memblk , ""free"" ) )"		6309053	6					
ANR	6309106	Condition	"checkBlock ( memblk , ""free"" )"	1046:8:28959:28984	6309053	0	True				
ANR	6309107	CallExpression	"checkBlock ( memblk , ""free"" )"		6309053	0					
ANR	6309108	Callee	checkBlock		6309053	0					
ANR	6309109	Identifier	checkBlock		6309053	0					
ANR	6309110	ArgumentList	memblk		6309053	1					
ANR	6309111	Argument	memblk		6309053	0					
ANR	6309112	Identifier	memblk		6309053	0					
ANR	6309113	Argument	"""free"""		6309053	1					
ANR	6309114	PrimaryExpression	"""free"""		6309053	0					
ANR	6309115	ReturnStatement	return ;	1047:8:28995:29001	6309053	1	True				
ANR	6309116	IfStatement	if ( memblk -> flags & Memento_Flag_BreakOnFree )		6309053	7					
ANR	6309117	Condition	memblk -> flags & Memento_Flag_BreakOnFree	1049:8:29012:29051	6309053	0	True				
ANR	6309118	BitAndExpression	memblk -> flags & Memento_Flag_BreakOnFree		6309053	0		&			
ANR	6309119	PtrMemberAccess	memblk -> flags		6309053	0					
ANR	6309120	Identifier	memblk		6309053	0					
ANR	6309121	Identifier	flags		6309053	1					
ANR	6309122	Identifier	Memento_Flag_BreakOnFree		6309053	1					
ANR	6309123	ExpressionStatement	Memento_breakpoint ( )	1050:8:29062:29082	6309053	1	True				
ANR	6309124	CallExpression	Memento_breakpoint ( )		6309053	0					
ANR	6309125	Callee	Memento_breakpoint		6309053	0					
ANR	6309126	Identifier	Memento_breakpoint		6309053	0					
ANR	6309127	ArgumentList			6309053	1					
ANR	6309128	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"	1052:4:29089:29139	6309053	8	True				
ANR	6309129	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"		6309053	0					
ANR	6309130	Callee	VALGRIND_MAKE_MEM_DEFINED		6309053	0					
ANR	6309131	Identifier	VALGRIND_MAKE_MEM_DEFINED		6309053	0					
ANR	6309132	ArgumentList	memblk		6309053	1					
ANR	6309133	Argument	memblk		6309053	0					
ANR	6309134	Identifier	memblk		6309053	0					
ANR	6309135	Argument	sizeof ( * memblk )		6309053	1					
ANR	6309136	SizeofExpression	sizeof ( * memblk )		6309053	0					
ANR	6309137	Sizeof	sizeof		6309053	0					
ANR	6309138	UnaryOperationExpression	* memblk		6309053	1					
ANR	6309139	UnaryOperator	*		6309053	0					
ANR	6309140	Identifier	memblk		6309053	1					
ANR	6309141	ExpressionStatement	globals . alloc -= memblk -> rawsize	1053:4:29145:29177	6309053	9	True				
ANR	6309142	AssignmentExpression	globals . alloc -= memblk -> rawsize		6309053	0		-=			
ANR	6309143	MemberAccess	globals . alloc		6309053	0					
ANR	6309144	Identifier	globals		6309053	0					
ANR	6309145	Identifier	alloc		6309053	1					
ANR	6309146	PtrMemberAccess	memblk -> rawsize		6309053	1					
ANR	6309147	Identifier	memblk		6309053	0					
ANR	6309148	Identifier	rawsize		6309053	1					
ANR	6309149	ExpressionStatement	globals . numFrees ++	1054:4:29183:29201	6309053	10	True				
ANR	6309150	PostIncDecOperationExpression	globals . numFrees ++		6309053	0					
ANR	6309151	MemberAccess	globals . numFrees		6309053	0					
ANR	6309152	Identifier	globals		6309053	0					
ANR	6309153	Identifier	numFrees		6309053	1					
ANR	6309154	IncDec	++		6309053	1					
ANR	6309155	ExpressionStatement	"Memento_removeBlock ( & globals . used , memblk )"	1056:4:29208:29250	6309053	11	True				
ANR	6309156	CallExpression	"Memento_removeBlock ( & globals . used , memblk )"		6309053	0					
ANR	6309157	Callee	Memento_removeBlock		6309053	0					
ANR	6309158	Identifier	Memento_removeBlock		6309053	0					
ANR	6309159	ArgumentList	& globals . used		6309053	1					
ANR	6309160	Argument	& globals . used		6309053	0					
ANR	6309161	UnaryOperationExpression	& globals . used		6309053	0					
ANR	6309162	UnaryOperator	&		6309053	0					
ANR	6309163	MemberAccess	globals . used		6309053	1					
ANR	6309164	Identifier	globals		6309053	0					
ANR	6309165	Identifier	used		6309053	1					
ANR	6309166	Argument	memblk		6309053	1					
ANR	6309167	Identifier	memblk		6309053	0					
ANR	6309168	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"	1058:4:29257:29307	6309053	12	True				
ANR	6309169	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"		6309053	0					
ANR	6309170	Callee	VALGRIND_MAKE_MEM_DEFINED		6309053	0					
ANR	6309171	Identifier	VALGRIND_MAKE_MEM_DEFINED		6309053	0					
ANR	6309172	ArgumentList	memblk		6309053	1					
ANR	6309173	Argument	memblk		6309053	0					
ANR	6309174	Identifier	memblk		6309053	0					
ANR	6309175	Argument	sizeof ( * memblk )		6309053	1					
ANR	6309176	SizeofExpression	sizeof ( * memblk )		6309053	0					
ANR	6309177	Sizeof	sizeof		6309053	0					
ANR	6309178	UnaryOperationExpression	* memblk		6309053	1					
ANR	6309179	UnaryOperator	*		6309053	0					
ANR	6309180	Identifier	memblk		6309053	1					
ANR	6309181	IfStatement	if ( Memento_Internal_makeSpace ( MEMBLK_SIZE ( memblk -> rawsize ) ) )		6309053	13					
ANR	6309182	Condition	Memento_Internal_makeSpace ( MEMBLK_SIZE ( memblk -> rawsize ) )	1059:8:29317:29372	6309053	0	True				
ANR	6309183	CallExpression	Memento_Internal_makeSpace ( MEMBLK_SIZE ( memblk -> rawsize ) )		6309053	0					
ANR	6309184	Callee	Memento_Internal_makeSpace		6309053	0					
ANR	6309185	Identifier	Memento_Internal_makeSpace		6309053	0					
ANR	6309186	ArgumentList	MEMBLK_SIZE ( memblk -> rawsize )		6309053	1					
ANR	6309187	Argument	MEMBLK_SIZE ( memblk -> rawsize )		6309053	0					
ANR	6309188	CallExpression	MEMBLK_SIZE ( memblk -> rawsize )		6309053	0					
ANR	6309189	Callee	MEMBLK_SIZE		6309053	0					
ANR	6309190	Identifier	MEMBLK_SIZE		6309053	0					
ANR	6309191	ArgumentList	memblk -> rawsize		6309053	1					
ANR	6309192	Argument	memblk -> rawsize		6309053	0					
ANR	6309193	PtrMemberAccess	memblk -> rawsize		6309053	0					
ANR	6309194	Identifier	memblk		6309053	0					
ANR	6309195	Identifier	rawsize		6309053	1					
ANR	6309196	CompoundStatement		27:66:657:657	6309053	1					
ANR	6309197	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"	1060:8:29385:29435	6309053	0	True				
ANR	6309198	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( memblk , sizeof ( * memblk ) )"		6309053	0					
ANR	6309199	Callee	VALGRIND_MAKE_MEM_DEFINED		6309053	0					
ANR	6309200	Identifier	VALGRIND_MAKE_MEM_DEFINED		6309053	0					
ANR	6309201	ArgumentList	memblk		6309053	1					
ANR	6309202	Argument	memblk		6309053	0					
ANR	6309203	Identifier	memblk		6309053	0					
ANR	6309204	Argument	sizeof ( * memblk )		6309053	1					
ANR	6309205	SizeofExpression	sizeof ( * memblk )		6309053	0					
ANR	6309206	Sizeof	sizeof		6309053	0					
ANR	6309207	UnaryOperationExpression	* memblk		6309053	1					
ANR	6309208	UnaryOperator	*		6309053	0					
ANR	6309209	Identifier	memblk		6309053	1					
ANR	6309210	ExpressionStatement	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( memblk ) , memblk -> rawsize + Memento_PostSize )"	1061:8:29445:29528	6309053	1	True				
ANR	6309211	CallExpression	"VALGRIND_MAKE_MEM_DEFINED ( MEMBLK_TOBLK ( memblk ) , memblk -> rawsize + Memento_PostSize )"		6309053	0					
ANR	6309212	Callee	VALGRIND_MAKE_MEM_DEFINED		6309053	0					
ANR	6309213	Identifier	VALGRIND_MAKE_MEM_DEFINED		6309053	0					
ANR	6309214	ArgumentList	MEMBLK_TOBLK ( memblk )		6309053	1					
ANR	6309215	Argument	MEMBLK_TOBLK ( memblk )		6309053	0					
ANR	6309216	CallExpression	MEMBLK_TOBLK ( memblk )		6309053	0					
ANR	6309217	Callee	MEMBLK_TOBLK		6309053	0					
ANR	6309218	Identifier	MEMBLK_TOBLK		6309053	0					
ANR	6309219	ArgumentList	memblk		6309053	1					
ANR	6309220	Argument	memblk		6309053	0					
ANR	6309221	Identifier	memblk		6309053	0					
ANR	6309222	Argument	memblk -> rawsize + Memento_PostSize		6309053	1					
ANR	6309223	AdditiveExpression	memblk -> rawsize + Memento_PostSize		6309053	0		+			
ANR	6309224	PtrMemberAccess	memblk -> rawsize		6309053	0					
ANR	6309225	Identifier	memblk		6309053	0					
ANR	6309226	Identifier	rawsize		6309053	1					
ANR	6309227	Identifier	Memento_PostSize		6309053	1					
ANR	6309228	ExpressionStatement	"memset ( MEMBLK_TOBLK ( memblk ) , MEMENTO_FREEFILL , memblk -> rawsize )"	1063:8:29563:29626	6309053	2	True				
ANR	6309229	CallExpression	"memset ( MEMBLK_TOBLK ( memblk ) , MEMENTO_FREEFILL , memblk -> rawsize )"		6309053	0					
ANR	6309230	Callee	memset		6309053	0					
ANR	6309231	Identifier	memset		6309053	0					
ANR	6309232	ArgumentList	MEMBLK_TOBLK ( memblk )		6309053	1					
ANR	6309233	Argument	MEMBLK_TOBLK ( memblk )		6309053	0					
ANR	6309234	CallExpression	MEMBLK_TOBLK ( memblk )		6309053	0					
ANR	6309235	Callee	MEMBLK_TOBLK		6309053	0					
ANR	6309236	Identifier	MEMBLK_TOBLK		6309053	0					
ANR	6309237	ArgumentList	memblk		6309053	1					
ANR	6309238	Argument	memblk		6309053	0					
ANR	6309239	Identifier	memblk		6309053	0					
ANR	6309240	Argument	MEMENTO_FREEFILL		6309053	1					
ANR	6309241	Identifier	MEMENTO_FREEFILL		6309053	0					
ANR	6309242	Argument	memblk -> rawsize		6309053	2					
ANR	6309243	PtrMemberAccess	memblk -> rawsize		6309053	0					
ANR	6309244	Identifier	memblk		6309053	0					
ANR	6309245	Identifier	rawsize		6309053	1					
ANR	6309246	ExpressionStatement	"Memento_addBlockTail ( & globals . free , memblk , 1 )"	1065:8:29643:29689	6309053	3	True				
ANR	6309247	CallExpression	"Memento_addBlockTail ( & globals . free , memblk , 1 )"		6309053	0					
ANR	6309248	Callee	Memento_addBlockTail		6309053	0					
ANR	6309249	Identifier	Memento_addBlockTail		6309053	0					
ANR	6309250	ArgumentList	& globals . free		6309053	1					
ANR	6309251	Argument	& globals . free		6309053	0					
ANR	6309252	UnaryOperationExpression	& globals . free		6309053	0					
ANR	6309253	UnaryOperator	&		6309053	0					
ANR	6309254	MemberAccess	globals . free		6309053	1					
ANR	6309255	Identifier	globals		6309053	0					
ANR	6309256	Identifier	free		6309053	1					
ANR	6309257	Argument	memblk		6309053	1					
ANR	6309258	Identifier	memblk		6309053	0					
ANR	6309259	Argument	1		6309053	2					
ANR	6309260	PrimaryExpression	1		6309053	0					
ANR	6309261	ElseStatement	else		6309053	0					
ANR	6309262	CompoundStatement		34:11:984:984	6309053	0					
ANR	6309263	ExpressionStatement	MEMENTO_UNDERLYING_FREE ( memblk )	1067:8:29712:29743	6309053	0	True				
ANR	6309264	CallExpression	MEMENTO_UNDERLYING_FREE ( memblk )		6309053	0					
ANR	6309265	Callee	MEMENTO_UNDERLYING_FREE		6309053	0					
ANR	6309266	Identifier	MEMENTO_UNDERLYING_FREE		6309053	0					
ANR	6309267	ArgumentList	memblk		6309053	1					
ANR	6309268	Argument	memblk		6309053	0					
ANR	6309269	Identifier	memblk		6309053	0					
ANR	6309270	ReturnType	void		6309053	1					
ANR	6309271	Identifier	Memento_free		6309053	2					
ANR	6309272	ParameterList	void * blk		6309053	3					
ANR	6309273	Parameter	void * blk	1032:13:28706:28714	6309053	0	True				
ANR	6309274	ParameterType	void *		6309053	0					
ANR	6309275	Identifier	blk		6309053	1					
ANR	6309276	CFGEntryNode	ENTRY		6309053		True				
ANR	6309277	CFGExitNode	EXIT		6309053		True				
ANR	6309278	Symbol	blk		6309053						
ANR	6309279	Symbol	NULL		6309053						
ANR	6309280	Symbol	Memento_Internal_makeSpace		6309053						
ANR	6309281	Symbol	globals . inited		6309053						
ANR	6309282	Symbol	globals		6309053						
ANR	6309283	Symbol	globals . alloc		6309053						
ANR	6309284	Symbol	Memento_Flag_BreakOnFree		6309053						
ANR	6309285	Symbol	memblk		6309053						
ANR	6309286	Symbol	memblk -> rawsize		6309053						
ANR	6309287	Symbol	MEMBLK_TOBLK		6309053						
ANR	6309288	Symbol	& globals		6309053						
ANR	6309289	Symbol	globals . numFrees		6309053						
ANR	6309290	Symbol	MEMENTO_FREEFILL		6309053						
ANR	6309291	Symbol	& globals . free		6309053						
ANR	6309292	Symbol	MEMBLK_FROMBLK		6309053						
ANR	6309293	Symbol	* memblk		6309053						
ANR	6309294	Symbol	memblk -> flags		6309053						
ANR	6309295	Symbol	MEMBLK_SIZE		6309053						
ANR	6309296	Symbol	Memento_PostSize		6309053						
ANR	6309297	Symbol	checkBlock		6309053						
ANR	6309298	Symbol	& globals . used		6309053						
ANR	6309299	Function	Memento_realloc	1071:0:29754:31529							
ANR	6309300	FunctionDef	"Memento_realloc (void * blk , size_t newsize)"		6309299	0					
ANR	6309301	CompoundStatement		1073:0:29804:31529	6309299	0					
ANR	6309302	IdentifierDeclStatement	"Memento_BlkHeader * memblk , * newmemblk ;"	1074:4:29810:29847	6309299	0	True				
ANR	6309303	IdentifierDecl	* memblk		6309299	0					
ANR	6309304	IdentifierDeclType	Memento_BlkHeader *		6309299	0					
ANR	6309305	Identifier	memblk		6309299	1					
ANR	6309306	IdentifierDecl	* newmemblk		6309299	1					
ANR	6309307	IdentifierDeclType	Memento_BlkHeader *		6309299	0					
ANR	6309308	Identifier	newmemblk		6309299	1					
ANR	6309309	IdentifierDeclStatement	size_t newsizemem ;	1075:4:29853:29870	6309299	1	True				
ANR	6309310	IdentifierDecl	newsizemem		6309299	0					
ANR	6309311	IdentifierDeclType	size_t		6309299	0					
ANR	6309312	Identifier	newsizemem		6309299	1					
ANR	6309313	IdentifierDeclStatement	int flags ;	1076:4:29876:29885	6309299	2	True				
ANR	6309314	IdentifierDecl	flags		6309299	0					
ANR	6309315	IdentifierDeclType	int		6309299	0					
ANR	6309316	Identifier	flags		6309299	1					
ANR	6309317	IfStatement	if ( blk == NULL )		6309299	3					
ANR	6309318	Condition	blk == NULL	1078:8:29896:29906	6309299	0	True				
ANR	6309319	EqualityExpression	blk == NULL		6309299	0		==			
ANR	6309320	Identifier	blk		6309299	0					
ANR	6309321	Identifier	NULL		6309299	1					
ANR	6309322	ReturnStatement	return Memento_malloc ( newsize ) ;	1079:8:29917:29947	6309299	1	True				
ANR	6309323	CallExpression	Memento_malloc ( newsize )		6309299	0					
ANR	6309324	Callee	Memento_malloc		6309299	0					
ANR	6309325	Identifier	Memento_malloc		6309299	0					
ANR	6309326	ArgumentList	newsize		6309299	1					
ANR	6309327	Argument	newsize		6309299	0					
ANR	6309328	Identifier	newsize		6309299	0					
ANR	6309329	IfStatement	if ( newsize == 0 )		6309299	4					
ANR	6309330	Condition	newsize == 0	1080:8:29957:29968	6309299	0	True				
ANR	6309331	EqualityExpression	newsize == 0		6309299	0		==			
ANR	6309332	Identifier	newsize		6309299	0					
ANR	6309333	PrimaryExpression	0		6309299	1					
ANR	6309334	CompoundStatement		8:22:166:166	6309299	1					
ANR	6309335	ExpressionStatement	Memento_free ( blk )	1081:8:29981:29998	6309299	0	True				
ANR	6309336	CallExpression	Memento_free ( blk )		6309299	0					
ANR	6309337	Callee	Memento_free		6309299	0					
ANR	6309338	Identifier	Memento_free		6309299	0					
ANR	6309339	ArgumentList	blk		6309299	1					
ANR	6309340	Argument	blk		6309299	0					
ANR	6309341	Identifier	blk		6309299	0					
ANR	6309342	ReturnStatement	return NULL ;	1082:8:30008:30019	6309299	1	True				
ANR	6309343	Identifier	NULL		6309299	0					
ANR	6309344	IfStatement	if ( Memento_failThisEvent ( ) )		6309299	5					
ANR	6309345	Condition	Memento_failThisEvent ( )	1085:8:30036:30058	6309299	0	True				
ANR	6309346	CallExpression	Memento_failThisEvent ( )		6309299	0					
ANR	6309347	Callee	Memento_failThisEvent		6309299	0					
ANR	6309348	Identifier	Memento_failThisEvent		6309299	0					
ANR	6309349	ArgumentList			6309299	1					
ANR	6309350	ReturnStatement	return NULL ;	1086:8:30069:30080	6309299	1	True				
ANR	6309351	Identifier	NULL		6309299	0					
ANR	6309352	ExpressionStatement	memblk = MEMBLK_FROMBLK ( blk )	1088:4:30087:30115	6309299	6	True				
ANR	6309353	AssignmentExpression	memblk = MEMBLK_FROMBLK ( blk )		6309299	0		=			
ANR	6309354	Identifier	memblk		6309299	0					
ANR	6309355	CallExpression	MEMBLK_FROMBLK ( blk )		6309299	1					
ANR	6309356	Callee	MEMBLK_FROMBLK		6309299	0					
ANR	6309357	Identifier	MEMBLK_FROMBLK		6309299	0					
ANR	6309358	ArgumentList	blk		6309299	1					
ANR	6309359	Argument	blk		6309299	0					
ANR	6309360	Identifier	blk		6309299	0					
ANR	6309361	IfStatement	"if ( checkBlock ( memblk , ""realloc"" ) )"		6309299	7					
ANR	6309362	Condition	"checkBlock ( memblk , ""realloc"" )"	1089:8:30125:30153	6309299	0	True				
ANR	6309363	CallExpression	"checkBlock ( memblk , ""realloc"" )"		6309299	0					
ANR	6309364	Callee	checkBlock		6309299	0					
ANR	6309365	Identifier	checkBlock		6309299	0					
ANR	6309366	ArgumentList	memblk		6309299	1					
ANR	6309367	Argument	memblk		6309299	0					
ANR	6309368	Identifier	memblk		6309299	0					
ANR	6309369	Argument	"""realloc"""		6309299	1					
ANR	6309370	PrimaryExpression	"""realloc"""		6309299	0					
ANR	6309371	ReturnStatement	return NULL ;	1090:8:30164:30175	6309299	1	True				
ANR	6309372	Identifier	NULL		6309299	0					
ANR	6309373	IfStatement	if ( memblk -> flags & Memento_Flag_BreakOnRealloc )		6309299	8					
ANR	6309374	Condition	memblk -> flags & Memento_Flag_BreakOnRealloc	1092:8:30186:30228	6309299	0	True				
ANR	6309375	BitAndExpression	memblk -> flags & Memento_Flag_BreakOnRealloc		6309299	0		&			
ANR	6309376	PtrMemberAccess	memblk -> flags		6309299	0					
ANR	6309377	Identifier	memblk		6309299	0					
ANR	6309378	Identifier	flags		6309299	1					
ANR	6309379	Identifier	Memento_Flag_BreakOnRealloc		6309299	1					
ANR	6309380	ExpressionStatement	Memento_breakpoint ( )	1093:8:30239:30259	6309299	1	True				
ANR	6309381	CallExpression	Memento_breakpoint ( )		6309299	0					
ANR	6309382	Callee	Memento_breakpoint		6309299	0					
ANR	6309383	Identifier	Memento_breakpoint		6309299	0					
ANR	6309384	ArgumentList			6309299	1					
ANR	6309385	IfStatement	if ( globals . maxMemory != 0 && globals . alloc - memblk -> rawsize + newsize > globals . maxMemory )		6309299	9					
ANR	6309386	Condition	globals . maxMemory != 0 && globals . alloc - memblk -> rawsize + newsize > globals . maxMemory	1095:8:30270:30356	6309299	0	True				
ANR	6309387	AndExpression	globals . maxMemory != 0 && globals . alloc - memblk -> rawsize + newsize > globals . maxMemory		6309299	0		&&			
ANR	6309388	EqualityExpression	globals . maxMemory != 0		6309299	0		!=			
ANR	6309389	MemberAccess	globals . maxMemory		6309299	0					
ANR	6309390	Identifier	globals		6309299	0					
ANR	6309391	Identifier	maxMemory		6309299	1					
ANR	6309392	PrimaryExpression	0		6309299	1					
ANR	6309393	RelationalExpression	globals . alloc - memblk -> rawsize + newsize > globals . maxMemory		6309299	1		>			
ANR	6309394	AdditiveExpression	globals . alloc - memblk -> rawsize + newsize		6309299	0		-			
ANR	6309395	MemberAccess	globals . alloc		6309299	0					
ANR	6309396	Identifier	globals		6309299	0					
ANR	6309397	Identifier	alloc		6309299	1					
ANR	6309398	AdditiveExpression	memblk -> rawsize + newsize		6309299	1		+			
ANR	6309399	PtrMemberAccess	memblk -> rawsize		6309299	0					
ANR	6309400	Identifier	memblk		6309299	0					
ANR	6309401	Identifier	rawsize		6309299	1					
ANR	6309402	Identifier	newsize		6309299	1					
ANR	6309403	MemberAccess	globals . maxMemory		6309299	1					
ANR	6309404	Identifier	globals		6309299	0					
ANR	6309405	Identifier	maxMemory		6309299	1					
ANR	6309406	ReturnStatement	return NULL ;	1096:8:30367:30378	6309299	1	True				
ANR	6309407	Identifier	NULL		6309299	0					
ANR	6309408	ExpressionStatement	newsizemem = MEMBLK_SIZE ( newsize )	1098:4:30385:30418	6309299	10	True				
ANR	6309409	AssignmentExpression	newsizemem = MEMBLK_SIZE ( newsize )		6309299	0		=			
ANR	6309410	Identifier	newsizemem		6309299	0					
ANR	6309411	CallExpression	MEMBLK_SIZE ( newsize )		6309299	1					
ANR	6309412	Callee	MEMBLK_SIZE		6309299	0					
ANR	6309413	Identifier	MEMBLK_SIZE		6309299	0					
ANR	6309414	ArgumentList	newsize		6309299	1					
ANR	6309415	Argument	newsize		6309299	0					
ANR	6309416	Identifier	newsize		6309299	0					
ANR	6309417	ExpressionStatement	"Memento_removeBlock ( & globals . used , memblk )"	1099:4:30424:30466	6309299	11	True				
ANR	6309418	CallExpression	"Memento_removeBlock ( & globals . used , memblk )"		6309299	0					
ANR	6309419	Callee	Memento_removeBlock		6309299	0					
ANR	6309420	Identifier	Memento_removeBlock		6309299	0					
ANR	6309421	ArgumentList	& globals . used		6309299	1					
ANR	6309422	Argument	& globals . used		6309299	0					
ANR	6309423	UnaryOperationExpression	& globals . used		6309299	0					
ANR	6309424	UnaryOperator	&		6309299	0					
ANR	6309425	MemberAccess	globals . used		6309299	1					
ANR	6309426	Identifier	globals		6309299	0					
ANR	6309427	Identifier	used		6309299	1					
ANR	6309428	Argument	memblk		6309299	1					
ANR	6309429	Identifier	memblk		6309299	0					
ANR	6309430	ExpressionStatement	flags = memblk -> flags	1100:4:30472:30493	6309299	12	True				
ANR	6309431	AssignmentExpression	flags = memblk -> flags		6309299	0		=			
ANR	6309432	Identifier	flags		6309299	0					
ANR	6309433	PtrMemberAccess	memblk -> flags		6309299	1					
ANR	6309434	Identifier	memblk		6309299	0					
ANR	6309435	Identifier	flags		6309299	1					
ANR	6309436	ExpressionStatement	"newmemblk = MEMENTO_UNDERLYING_REALLOC ( memblk , newsizemem )"	1101:4:30499:30557	6309299	13	True				
ANR	6309437	AssignmentExpression	"newmemblk = MEMENTO_UNDERLYING_REALLOC ( memblk , newsizemem )"		6309299	0		=			
ANR	6309438	Identifier	newmemblk		6309299	0					
ANR	6309439	CallExpression	"MEMENTO_UNDERLYING_REALLOC ( memblk , newsizemem )"		6309299	1					
ANR	6309440	Callee	MEMENTO_UNDERLYING_REALLOC		6309299	0					
ANR	6309441	Identifier	MEMENTO_UNDERLYING_REALLOC		6309299	0					
ANR	6309442	ArgumentList	memblk		6309299	1					
ANR	6309443	Argument	memblk		6309299	0					
ANR	6309444	Identifier	memblk		6309299	0					
ANR	6309445	Argument	newsizemem		6309299	1					
ANR	6309446	Identifier	newsizemem		6309299	0					
ANR	6309447	IfStatement	if ( newmemblk == NULL )		6309299	14					
ANR	6309448	Condition	newmemblk == NULL	1102:8:30567:30583	6309299	0	True				
ANR	6309449	EqualityExpression	newmemblk == NULL		6309299	0		==			
ANR	6309450	Identifier	newmemblk		6309299	0					
ANR	6309451	Identifier	NULL		6309299	1					
ANR	6309452	CompoundStatement		30:27:781:781	6309299	1					
ANR	6309453	ExpressionStatement	"Memento_addBlockHead ( & globals . used , memblk , 2 )"	1103:8:30596:30642	6309299	0	True				
ANR	6309454	CallExpression	"Memento_addBlockHead ( & globals . used , memblk , 2 )"		6309299	0					
ANR	6309455	Callee	Memento_addBlockHead		6309299	0					
ANR	6309456	Identifier	Memento_addBlockHead		6309299	0					
ANR	6309457	ArgumentList	& globals . used		6309299	1					
ANR	6309458	Argument	& globals . used		6309299	0					
ANR	6309459	UnaryOperationExpression	& globals . used		6309299	0					
ANR	6309460	UnaryOperator	&		6309299	0					
ANR	6309461	MemberAccess	globals . used		6309299	1					
ANR	6309462	Identifier	globals		6309299	0					
ANR	6309463	Identifier	used		6309299	1					
ANR	6309464	Argument	memblk		6309299	1					
ANR	6309465	Identifier	memblk		6309299	0					
ANR	6309466	Argument	2		6309299	2					
ANR	6309467	PrimaryExpression	2		6309299	0					
ANR	6309468	ReturnStatement	return NULL ;	1104:8:30652:30663	6309299	1	True				
ANR	6309469	Identifier	NULL		6309299	0					
ANR	6309470	ExpressionStatement	globals . numReallocs ++	1106:4:30675:30696	6309299	15	True				
ANR	6309471	PostIncDecOperationExpression	globals . numReallocs ++		6309299	0					
ANR	6309472	MemberAccess	globals . numReallocs		6309299	0					
ANR	6309473	Identifier	globals		6309299	0					
ANR	6309474	Identifier	numReallocs		6309299	1					
ANR	6309475	IncDec	++		6309299	1					
ANR	6309476	ExpressionStatement	globals . totalAlloc += newsize	1107:4:30702:30731	6309299	16	True				
ANR	6309477	AssignmentExpression	globals . totalAlloc += newsize		6309299	0		+=			
ANR	6309478	MemberAccess	globals . totalAlloc		6309299	0					
ANR	6309479	Identifier	globals		6309299	0					
ANR	6309480	Identifier	totalAlloc		6309299	1					
ANR	6309481	Identifier	newsize		6309299	1					
ANR	6309482	ExpressionStatement	globals . alloc -= newmemblk -> rawsize	1108:4:30737:30772	6309299	17	True				
ANR	6309483	AssignmentExpression	globals . alloc -= newmemblk -> rawsize		6309299	0		-=			
ANR	6309484	MemberAccess	globals . alloc		6309299	0					
ANR	6309485	Identifier	globals		6309299	0					
ANR	6309486	Identifier	alloc		6309299	1					
ANR	6309487	PtrMemberAccess	newmemblk -> rawsize		6309299	1					
ANR	6309488	Identifier	newmemblk		6309299	0					
ANR	6309489	Identifier	rawsize		6309299	1					
ANR	6309490	ExpressionStatement	globals . alloc += newsize	1109:4:30778:30802	6309299	18	True				
ANR	6309491	AssignmentExpression	globals . alloc += newsize		6309299	0		+=			
ANR	6309492	MemberAccess	globals . alloc		6309299	0					
ANR	6309493	Identifier	globals		6309299	0					
ANR	6309494	Identifier	alloc		6309299	1					
ANR	6309495	Identifier	newsize		6309299	1					
ANR	6309496	IfStatement	if ( globals . peakAlloc < globals . alloc )		6309299	19					
ANR	6309497	Condition	globals . peakAlloc < globals . alloc	1110:8:30812:30844	6309299	0	True				
ANR	6309498	RelationalExpression	globals . peakAlloc < globals . alloc		6309299	0		<			
ANR	6309499	MemberAccess	globals . peakAlloc		6309299	0					
ANR	6309500	Identifier	globals		6309299	0					
ANR	6309501	Identifier	peakAlloc		6309299	1					
ANR	6309502	MemberAccess	globals . alloc		6309299	1					
ANR	6309503	Identifier	globals		6309299	0					
ANR	6309504	Identifier	alloc		6309299	1					
ANR	6309505	ExpressionStatement	globals . peakAlloc = globals . alloc	1111:8:30855:30888	6309299	1	True				
ANR	6309506	AssignmentExpression	globals . peakAlloc = globals . alloc		6309299	0		=			
ANR	6309507	MemberAccess	globals . peakAlloc		6309299	0					
ANR	6309508	Identifier	globals		6309299	0					
ANR	6309509	Identifier	peakAlloc		6309299	1					
ANR	6309510	MemberAccess	globals . alloc		6309299	1					
ANR	6309511	Identifier	globals		6309299	0					
ANR	6309512	Identifier	alloc		6309299	1					
ANR	6309513	ExpressionStatement	newmemblk -> flags = flags	1112:4:30894:30918	6309299	20	True				
ANR	6309514	AssignmentExpression	newmemblk -> flags = flags		6309299	0		=			
ANR	6309515	PtrMemberAccess	newmemblk -> flags		6309299	0					
ANR	6309516	Identifier	newmemblk		6309299	0					
ANR	6309517	Identifier	flags		6309299	1					
ANR	6309518	Identifier	flags		6309299	1					
ANR	6309519	IfStatement	if ( newmemblk -> rawsize < newsize )		6309299	21					
ANR	6309520	Condition	newmemblk -> rawsize < newsize	1113:8:30928:30955	6309299	0	True				
ANR	6309521	RelationalExpression	newmemblk -> rawsize < newsize		6309299	0		<			
ANR	6309522	PtrMemberAccess	newmemblk -> rawsize		6309299	0					
ANR	6309523	Identifier	newmemblk		6309299	0					
ANR	6309524	Identifier	rawsize		6309299	1					
ANR	6309525	Identifier	newsize		6309299	1					
ANR	6309526	CompoundStatement		42:8:1163:1234	6309299	1					
ANR	6309527	IdentifierDeclStatement	char * newbytes = ( ( char * ) MEMBLK_TOBLK ( newmemblk ) ) + newmemblk -> rawsize ;	1114:8:30968:31039	6309299	0	True				
ANR	6309528	IdentifierDecl	* newbytes = ( ( char * ) MEMBLK_TOBLK ( newmemblk ) ) + newmemblk -> rawsize		6309299	0					
ANR	6309529	IdentifierDeclType	char *		6309299	0					
ANR	6309530	Identifier	newbytes		6309299	1					
ANR	6309531	AssignmentExpression	* newbytes = ( ( char * ) MEMBLK_TOBLK ( newmemblk ) ) + newmemblk -> rawsize		6309299	2		=			
ANR	6309532	Identifier	newbytes		6309299	0					
ANR	6309533	AdditiveExpression	( ( char * ) MEMBLK_TOBLK ( newmemblk ) ) + newmemblk -> rawsize		6309299	1		+			
ANR	6309534	CastExpression	( char * ) MEMBLK_TOBLK ( newmemblk )		6309299	0					
ANR	6309535	CastTarget	char *		6309299	0					
ANR	6309536	CallExpression	MEMBLK_TOBLK ( newmemblk )		6309299	1					
ANR	6309537	Callee	MEMBLK_TOBLK		6309299	0					
ANR	6309538	Identifier	MEMBLK_TOBLK		6309299	0					
ANR	6309539	ArgumentList	newmemblk		6309299	1					
ANR	6309540	Argument	newmemblk		6309299	0					
ANR	6309541	Identifier	newmemblk		6309299	0					
ANR	6309542	PtrMemberAccess	newmemblk -> rawsize		6309299	1					
ANR	6309543	Identifier	newmemblk		6309299	0					
ANR	6309544	Identifier	rawsize		6309299	1					
ANR	6309545	ExpressionStatement	"memset ( newbytes , MEMENTO_ALLOCFILL , newsize - newmemblk -> rawsize )"	1117:8:31075:31140	6309299	1	True				
ANR	6309546	CallExpression	"memset ( newbytes , MEMENTO_ALLOCFILL , newsize - newmemblk -> rawsize )"		6309299	0					
ANR	6309547	Callee	memset		6309299	0					
ANR	6309548	Identifier	memset		6309299	0					
ANR	6309549	ArgumentList	newbytes		6309299	1					
ANR	6309550	Argument	newbytes		6309299	0					
ANR	6309551	Identifier	newbytes		6309299	0					
ANR	6309552	Argument	MEMENTO_ALLOCFILL		6309299	1					
ANR	6309553	Identifier	MEMENTO_ALLOCFILL		6309299	0					
ANR	6309554	Argument	newsize - newmemblk -> rawsize		6309299	2					
ANR	6309555	AdditiveExpression	newsize - newmemblk -> rawsize		6309299	0		-			
ANR	6309556	Identifier	newsize		6309299	0					
ANR	6309557	PtrMemberAccess	newmemblk -> rawsize		6309299	1					
ANR	6309558	Identifier	newmemblk		6309299	0					
ANR	6309559	Identifier	rawsize		6309299	1					
ANR	6309560	ExpressionStatement	"VALGRIND_MAKE_MEM_UNDEFINED ( newbytes , newsize - newmemblk -> rawsize )"	1119:8:31157:31224	6309299	2	True				
ANR	6309561	CallExpression	"VALGRIND_MAKE_MEM_UNDEFINED ( newbytes , newsize - newmemblk -> rawsize )"		6309299	0					
ANR	6309562	Callee	VALGRIND_MAKE_MEM_UNDEFINED		6309299	0					
ANR	6309563	Identifier	VALGRIND_MAKE_MEM_UNDEFINED		6309299	0					
ANR	6309564	ArgumentList	newbytes		6309299	1					
ANR	6309565	Argument	newbytes		6309299	0					
ANR	6309566	Identifier	newbytes		6309299	0					
ANR	6309567	Argument	newsize - newmemblk -> rawsize		6309299	1					
ANR	6309568	AdditiveExpression	newsize - newmemblk -> rawsize		6309299	0		-			
ANR	6309569	Identifier	newsize		6309299	0					
ANR	6309570	PtrMemberAccess	newmemblk -> rawsize		6309299	1					
ANR	6309571	Identifier	newmemblk		6309299	0					
ANR	6309572	Identifier	rawsize		6309299	1					
ANR	6309573	ExpressionStatement	newmemblk -> rawsize = newsize	1121:4:31236:31264	6309299	22	True				
ANR	6309574	AssignmentExpression	newmemblk -> rawsize = newsize		6309299	0		=			
ANR	6309575	PtrMemberAccess	newmemblk -> rawsize		6309299	0					
ANR	6309576	Identifier	newmemblk		6309299	0					
ANR	6309577	Identifier	rawsize		6309299	1					
ANR	6309578	Identifier	newsize		6309299	1					
ANR	6309579	ExpressionStatement	"memset ( newmemblk -> preblk , MEMENTO_PREFILL , Memento_PreSize )"	1123:4:31295:31354	6309299	23	True				
ANR	6309580	CallExpression	"memset ( newmemblk -> preblk , MEMENTO_PREFILL , Memento_PreSize )"		6309299	0					
ANR	6309581	Callee	memset		6309299	0					
ANR	6309582	Identifier	memset		6309299	0					
ANR	6309583	ArgumentList	newmemblk -> preblk		6309299	1					
ANR	6309584	Argument	newmemblk -> preblk		6309299	0					
ANR	6309585	PtrMemberAccess	newmemblk -> preblk		6309299	0					
ANR	6309586	Identifier	newmemblk		6309299	0					
ANR	6309587	Identifier	preblk		6309299	1					
ANR	6309588	Argument	MEMENTO_PREFILL		6309299	1					
ANR	6309589	Identifier	MEMENTO_PREFILL		6309299	0					
ANR	6309590	Argument	Memento_PreSize		6309299	2					
ANR	6309591	Identifier	Memento_PreSize		6309299	0					
ANR	6309592	ExpressionStatement	"memset ( MEMBLK_POSTPTR ( newmemblk ) , MEMENTO_POSTFILL , Memento_PostSize )"	1124:4:31360:31429	6309299	24	True				
ANR	6309593	CallExpression	"memset ( MEMBLK_POSTPTR ( newmemblk ) , MEMENTO_POSTFILL , Memento_PostSize )"		6309299	0					
ANR	6309594	Callee	memset		6309299	0					
ANR	6309595	Identifier	memset		6309299	0					
ANR	6309596	ArgumentList	MEMBLK_POSTPTR ( newmemblk )		6309299	1					
ANR	6309597	Argument	MEMBLK_POSTPTR ( newmemblk )		6309299	0					
ANR	6309598	CallExpression	MEMBLK_POSTPTR ( newmemblk )		6309299	0					
ANR	6309599	Callee	MEMBLK_POSTPTR		6309299	0					
ANR	6309600	Identifier	MEMBLK_POSTPTR		6309299	0					
ANR	6309601	ArgumentList	newmemblk		6309299	1					
ANR	6309602	Argument	newmemblk		6309299	0					
ANR	6309603	Identifier	newmemblk		6309299	0					
ANR	6309604	Argument	MEMENTO_POSTFILL		6309299	1					
ANR	6309605	Identifier	MEMENTO_POSTFILL		6309299	0					
ANR	6309606	Argument	Memento_PostSize		6309299	2					
ANR	6309607	Identifier	Memento_PostSize		6309299	0					
ANR	6309608	ExpressionStatement	"Memento_addBlockHead ( & globals . used , newmemblk , 2 )"	1126:4:31442:31491	6309299	25	True				
ANR	6309609	CallExpression	"Memento_addBlockHead ( & globals . used , newmemblk , 2 )"		6309299	0					
ANR	6309610	Callee	Memento_addBlockHead		6309299	0					
ANR	6309611	Identifier	Memento_addBlockHead		6309299	0					
ANR	6309612	ArgumentList	& globals . used		6309299	1					
ANR	6309613	Argument	& globals . used		6309299	0					
ANR	6309614	UnaryOperationExpression	& globals . used		6309299	0					
ANR	6309615	UnaryOperator	&		6309299	0					
ANR	6309616	MemberAccess	globals . used		6309299	1					
ANR	6309617	Identifier	globals		6309299	0					
ANR	6309618	Identifier	used		6309299	1					
ANR	6309619	Argument	newmemblk		6309299	1					
ANR	6309620	Identifier	newmemblk		6309299	0					
ANR	6309621	Argument	2		6309299	2					
ANR	6309622	PrimaryExpression	2		6309299	0					
ANR	6309623	ReturnStatement	return MEMBLK_TOBLK ( newmemblk ) ;	1127:4:31497:31527	6309299	26	True				
ANR	6309624	CallExpression	MEMBLK_TOBLK ( newmemblk )		6309299	0					
ANR	6309625	Callee	MEMBLK_TOBLK		6309299	0					
ANR	6309626	Identifier	MEMBLK_TOBLK		6309299	0					
ANR	6309627	ArgumentList	newmemblk		6309299	1					
ANR	6309628	Argument	newmemblk		6309299	0					
ANR	6309629	Identifier	newmemblk		6309299	0					
ANR	6309630	ReturnType	void *		6309299	1					
ANR	6309631	Identifier	Memento_realloc		6309299	2					
ANR	6309632	ParameterList	"void * blk , size_t newsize"		6309299	3					
ANR	6309633	Parameter	void * blk	1072:16:29777:29785	6309299	0	True				
ANR	6309634	ParameterType	void *		6309299	0					
ANR	6309635	Identifier	blk		6309299	1					
ANR	6309636	Parameter	size_t newsize	1072:27:29788:29801	6309299	1	True				
ANR	6309637	ParameterType	size_t		6309299	0					
ANR	6309638	Identifier	newsize		6309299	1					
ANR	6309639	CFGEntryNode	ENTRY		6309299		True				
ANR	6309640	CFGExitNode	EXIT		6309299		True				
ANR	6309641	Symbol	globals . numReallocs		6309299						
ANR	6309642	Symbol	globals		6309299						
ANR	6309643	Symbol	flags		6309299						
ANR	6309644	Symbol	globals . maxMemory		6309299						
ANR	6309645	Symbol	newmemblk		6309299						
ANR	6309646	Symbol	newbytes		6309299						
ANR	6309647	Symbol	MEMBLK_POSTPTR		6309299						
ANR	6309648	Symbol	globals . totalAlloc		6309299						
ANR	6309649	Symbol	MEMENTO_POSTFILL		6309299						
ANR	6309650	Symbol	* memblk		6309299						
ANR	6309651	Symbol	MEMBLK_SIZE		6309299						
ANR	6309652	Symbol	newmemblk -> rawsize		6309299						
ANR	6309653	Symbol	checkBlock		6309299						
ANR	6309654	Symbol	newmemblk -> flags		6309299						
ANR	6309655	Symbol	& globals . used		6309299						
ANR	6309656	Symbol	MEMENTO_ALLOCFILL		6309299						
ANR	6309657	Symbol	Memento_failThisEvent		6309299						
ANR	6309658	Symbol	blk		6309299						
ANR	6309659	Symbol	NULL		6309299						
ANR	6309660	Symbol	Memento_PreSize		6309299						
ANR	6309661	Symbol	globals . alloc		6309299						
ANR	6309662	Symbol	newsize		6309299						
ANR	6309663	Symbol	memblk		6309299						
ANR	6309664	Symbol	newsizemem		6309299						
ANR	6309665	Symbol	memblk -> rawsize		6309299						
ANR	6309666	Symbol	* newmemblk		6309299						
ANR	6309667	Symbol	MEMBLK_TOBLK		6309299						
ANR	6309668	Symbol	& globals		6309299						
ANR	6309669	Symbol	MEMENTO_PREFILL		6309299						
ANR	6309670	Symbol	MEMENTO_UNDERLYING_REALLOC		6309299						
ANR	6309671	Symbol	MEMBLK_FROMBLK		6309299						
ANR	6309672	Symbol	globals . peakAlloc		6309299						
ANR	6309673	Symbol	newmemblk -> preblk		6309299						
ANR	6309674	Symbol	memblk -> flags		6309299						
ANR	6309675	Symbol	Memento_PostSize		6309299						
ANR	6309676	Symbol	Memento_malloc		6309299						
ANR	6309677	Symbol	Memento_Flag_BreakOnRealloc		6309299						
ANR	6309678	Function	Memento_checkBlock	1130:0:31532:31713							
ANR	6309679	FunctionDef	Memento_checkBlock (void * blk)		6309678	0					
ANR	6309680	CompoundStatement		1132:0:31566:31713	6309678	0					
ANR	6309681	IdentifierDeclStatement	Memento_BlkHeader * memblk ;	1133:4:31572:31597	6309678	0	True				
ANR	6309682	IdentifierDecl	* memblk		6309678	0					
ANR	6309683	IdentifierDeclType	Memento_BlkHeader *		6309678	0					
ANR	6309684	Identifier	memblk		6309678	1					
ANR	6309685	IfStatement	if ( blk == NULL )		6309678	1					
ANR	6309686	Condition	blk == NULL	1135:8:31608:31618	6309678	0	True				
ANR	6309687	EqualityExpression	blk == NULL		6309678	0		==			
ANR	6309688	Identifier	blk		6309678	0					
ANR	6309689	Identifier	NULL		6309678	1					
ANR	6309690	ReturnStatement	return 0 ;	1136:8:31629:31637	6309678	1	True				
ANR	6309691	PrimaryExpression	0		6309678	0					
ANR	6309692	ExpressionStatement	memblk = MEMBLK_FROMBLK ( blk )	1137:4:31643:31671	6309678	2	True				
ANR	6309693	AssignmentExpression	memblk = MEMBLK_FROMBLK ( blk )		6309678	0		=			
ANR	6309694	Identifier	memblk		6309678	0					
ANR	6309695	CallExpression	MEMBLK_FROMBLK ( blk )		6309678	1					
ANR	6309696	Callee	MEMBLK_FROMBLK		6309678	0					
ANR	6309697	Identifier	MEMBLK_FROMBLK		6309678	0					
ANR	6309698	ArgumentList	blk		6309678	1					
ANR	6309699	Argument	blk		6309678	0					
ANR	6309700	Identifier	blk		6309678	0					
ANR	6309701	ReturnStatement	"return checkBlock ( memblk , ""check"" ) ;"	1138:4:31677:31711	6309678	3	True				
ANR	6309702	CallExpression	"checkBlock ( memblk , ""check"" )"		6309678	0					
ANR	6309703	Callee	checkBlock		6309678	0					
ANR	6309704	Identifier	checkBlock		6309678	0					
ANR	6309705	ArgumentList	memblk		6309678	1					
ANR	6309706	Argument	memblk		6309678	0					
ANR	6309707	Identifier	memblk		6309678	0					
ANR	6309708	Argument	"""check"""		6309678	1					
ANR	6309709	PrimaryExpression	"""check"""		6309678	0					
ANR	6309710	ReturnType	int		6309678	1					
ANR	6309711	Identifier	Memento_checkBlock		6309678	2					
ANR	6309712	ParameterList	void * blk		6309678	3					
ANR	6309713	Parameter	void * blk	1131:19:31555:31563	6309678	0	True				
ANR	6309714	ParameterType	void *		6309678	0					
ANR	6309715	Identifier	blk		6309678	1					
ANR	6309716	CFGEntryNode	ENTRY		6309678		True				
ANR	6309717	CFGExitNode	EXIT		6309678		True				
ANR	6309718	Symbol	blk		6309678						
ANR	6309719	Symbol	NULL		6309678						
ANR	6309720	Symbol	MEMBLK_FROMBLK		6309678						
ANR	6309721	Symbol	checkBlock		6309678						
ANR	6309722	Symbol	memblk		6309678						
ANR	6309723	Function	Memento_Internal_checkAllAlloced	1141:0:31716:32660							
ANR	6309724	FunctionDef	"Memento_Internal_checkAllAlloced (Memento_BlkHeader * memblk , void * arg)"		6309723	0					
ANR	6309725	CompoundStatement		1143:0:31798:32660	6309723	0					
ANR	6309726	IdentifierDeclStatement	BlkCheckData * data = ( BlkCheckData * ) arg ;	1144:4:31804:31845	6309723	0	True				
ANR	6309727	IdentifierDecl	* data = ( BlkCheckData * ) arg		6309723	0					
ANR	6309728	IdentifierDeclType	BlkCheckData *		6309723	0					
ANR	6309729	Identifier	data		6309723	1					
ANR	6309730	AssignmentExpression	* data = ( BlkCheckData * ) arg		6309723	2		=			
ANR	6309731	Identifier	data		6309723	0					
ANR	6309732	CastExpression	( BlkCheckData * ) arg		6309723	1					
ANR	6309733	CastTarget	BlkCheckData *		6309723	0					
ANR	6309734	Identifier	arg		6309723	1					
ANR	6309735	ExpressionStatement	"Memento_Internal_checkAllocedBlock ( memblk , data )"	1146:4:31852:31900	6309723	1	True				
ANR	6309736	CallExpression	"Memento_Internal_checkAllocedBlock ( memblk , data )"		6309723	0					
ANR	6309737	Callee	Memento_Internal_checkAllocedBlock		6309723	0					
ANR	6309738	Identifier	Memento_Internal_checkAllocedBlock		6309723	0					
ANR	6309739	ArgumentList	memblk		6309723	1					
ANR	6309740	Argument	memblk		6309723	0					
ANR	6309741	Identifier	memblk		6309723	0					
ANR	6309742	Argument	data		6309723	1					
ANR	6309743	Identifier	data		6309723	0					
ANR	6309744	IfStatement	if ( data -> preCorrupt || data -> postCorrupt )		6309723	2					
ANR	6309745	Condition	data -> preCorrupt || data -> postCorrupt	1147:8:31910:31946	6309723	0	True				
ANR	6309746	OrExpression	data -> preCorrupt || data -> postCorrupt		6309723	0		||			
ANR	6309747	PtrMemberAccess	data -> preCorrupt		6309723	0					
ANR	6309748	Identifier	data		6309723	0					
ANR	6309749	Identifier	preCorrupt		6309723	1					
ANR	6309750	PtrMemberAccess	data -> postCorrupt		6309723	1					
ANR	6309751	Identifier	data		6309723	0					
ANR	6309752	Identifier	postCorrupt		6309723	1					
ANR	6309753	CompoundStatement		5:47:150:150	6309723	1					
ANR	6309754	IfStatement	if ( ( data -> found & 2 ) == 0 )		6309723	0					
ANR	6309755	Condition	( data -> found & 2 ) == 0	1148:12:31963:31984	6309723	0	True				
ANR	6309756	EqualityExpression	( data -> found & 2 ) == 0		6309723	0		==			
ANR	6309757	BitAndExpression	data -> found & 2		6309723	0		&			
ANR	6309758	PtrMemberAccess	data -> found		6309723	0					
ANR	6309759	Identifier	data		6309723	0					
ANR	6309760	Identifier	found		6309723	1					
ANR	6309761	PrimaryExpression	2		6309723	1					
ANR	6309762	PrimaryExpression	0		6309723	1					
ANR	6309763	CompoundStatement		6:36:188:188	6309723	1					
ANR	6309764	ExpressionStatement	"fprintf ( stderr , ""Allocated blocks:\\n"" )"	1149:12:32001:32039	6309723	0	True				
ANR	6309765	CallExpression	"fprintf ( stderr , ""Allocated blocks:\\n"" )"		6309723	0					
ANR	6309766	Callee	fprintf		6309723	0					
ANR	6309767	Identifier	fprintf		6309723	0					
ANR	6309768	ArgumentList	stderr		6309723	1					
ANR	6309769	Argument	stderr		6309723	0					
ANR	6309770	Identifier	stderr		6309723	0					
ANR	6309771	Argument	"""Allocated blocks:\\n"""		6309723	1					
ANR	6309772	PrimaryExpression	"""Allocated blocks:\\n"""		6309723	0					
ANR	6309773	ExpressionStatement	data -> found |= 2	1150:12:32053:32069	6309723	1	True				
ANR	6309774	AssignmentExpression	data -> found |= 2		6309723	0		|=			
ANR	6309775	PtrMemberAccess	data -> found		6309723	0					
ANR	6309776	Identifier	data		6309723	0					
ANR	6309777	Identifier	found		6309723	1					
ANR	6309778	PrimaryExpression	2		6309723	1					
ANR	6309779	ExpressionStatement	"fprintf ( stderr , ""  Block "" )"	1152:8:32089:32116	6309723	1	True				
ANR	6309780	CallExpression	"fprintf ( stderr , ""  Block "" )"		6309723	0					
ANR	6309781	Callee	fprintf		6309723	0					
ANR	6309782	Identifier	fprintf		6309723	0					
ANR	6309783	ArgumentList	stderr		6309723	1					
ANR	6309784	Argument	stderr		6309723	0					
ANR	6309785	Identifier	stderr		6309723	0					
ANR	6309786	Argument	"""  Block """		6309723	1					
ANR	6309787	PrimaryExpression	"""  Block """		6309723	0					
ANR	6309788	ExpressionStatement	"showBlock ( memblk , ' ' )"	1153:8:32126:32148	6309723	2	True				
ANR	6309789	CallExpression	"showBlock ( memblk , ' ' )"		6309723	0					
ANR	6309790	Callee	showBlock		6309723	0					
ANR	6309791	Identifier	showBlock		6309723	0					
ANR	6309792	ArgumentList	memblk		6309723	1					
ANR	6309793	Argument	memblk		6309723	0					
ANR	6309794	Identifier	memblk		6309723	0					
ANR	6309795	Argument	' '		6309723	1					
ANR	6309796	PrimaryExpression	' '		6309723	0					
ANR	6309797	IfStatement	if ( data -> preCorrupt )		6309723	3					
ANR	6309798	Condition	data -> preCorrupt	1154:12:32162:32177	6309723	0	True				
ANR	6309799	PtrMemberAccess	data -> preCorrupt		6309723	0					
ANR	6309800	Identifier	data		6309723	0					
ANR	6309801	Identifier	preCorrupt		6309723	1					
ANR	6309802	CompoundStatement		12:30:381:381	6309723	1					
ANR	6309803	ExpressionStatement	"fprintf ( stderr , "" Preguard "" )"	1155:12:32194:32223	6309723	0	True				
ANR	6309804	CallExpression	"fprintf ( stderr , "" Preguard "" )"		6309723	0					
ANR	6309805	Callee	fprintf		6309723	0					
ANR	6309806	Identifier	fprintf		6309723	0					
ANR	6309807	ArgumentList	stderr		6309723	1					
ANR	6309808	Argument	stderr		6309723	0					
ANR	6309809	Identifier	stderr		6309723	0					
ANR	6309810	Argument	""" Preguard """		6309723	1					
ANR	6309811	PrimaryExpression	""" Preguard """		6309723	0					
ANR	6309812	IfStatement	if ( data -> postCorrupt )		6309723	4					
ANR	6309813	Condition	data -> postCorrupt	1157:12:32247:32263	6309723	0	True				
ANR	6309814	PtrMemberAccess	data -> postCorrupt		6309723	0					
ANR	6309815	Identifier	data		6309723	0					
ANR	6309816	Identifier	postCorrupt		6309723	1					
ANR	6309817	CompoundStatement		15:31:467:467	6309723	1					
ANR	6309818	ExpressionStatement	"fprintf ( stderr , ""%s Postguard "" , ( data -> preCorrupt ? ""&"" : """" ) )"	1158:12:32280:32343	6309723	0	True				
ANR	6309819	CallExpression	"fprintf ( stderr , ""%s Postguard "" , ( data -> preCorrupt ? ""&"" : """" ) )"		6309723	0					
ANR	6309820	Callee	fprintf		6309723	0					
ANR	6309821	Identifier	fprintf		6309723	0					
ANR	6309822	ArgumentList	stderr		6309723	1					
ANR	6309823	Argument	stderr		6309723	0					
ANR	6309824	Identifier	stderr		6309723	0					
ANR	6309825	Argument	"""%s Postguard """		6309723	1					
ANR	6309826	PrimaryExpression	"""%s Postguard """		6309723	0					
ANR	6309827	Argument	"data -> preCorrupt ? ""&"" : """""		6309723	2					
ANR	6309828	ConditionalExpression	"data -> preCorrupt ? ""&"" : """""		6309723	0					
ANR	6309829	Condition	data -> preCorrupt		6309723	0					
ANR	6309830	PtrMemberAccess	data -> preCorrupt		6309723	0					
ANR	6309831	Identifier	data		6309723	0					
ANR	6309832	Identifier	preCorrupt		6309723	1					
ANR	6309833	PrimaryExpression	"""&"""		6309723	1					
ANR	6309834	PrimaryExpression	""""""		6309723	2					
ANR	6309835	Statement	fprintf	1160:8:32363:32369	6309723	5	True				
ANR	6309836	Statement	(	1160:15:32370:32370	6309723	6	True				
ANR	6309837	Statement	stderr	1160:16:32371:32376	6309723	7	True				
ANR	6309838	Statement	","	1160:22:32377:32377	6309723	8	True				
ANR	6309839	Statement	"""corrupted.\\n    """	1160:24:32379:32396	6309723	9	True				
ANR	6309840	Statement	"""Block last checked OK at allocation %d. Now %d.\\n"""	1160:43:32398:32448	6309723	10	True				
ANR	6309841	Statement	","	1160:94:32449:32449	6309723	11	True				
ANR	6309842	Statement	memblk	1160:96:32451:32456	6309723	12	True				
ANR	6309843	Statement	->	1160:102:32457:32458	6309723	13	True				
ANR	6309844	Statement	lastCheckedOK	1160:104:32459:32471	6309723	14	True				
ANR	6309845	Statement	","	1160:117:32472:32472	6309723	15	True				
ANR	6309846	Statement	globals	1160:119:32474:32480	6309723	16	True				
ANR	6309847	Statement	.	1160:126:32481:32481	6309723	17	True				
ANR	6309848	Statement	sequence	1160:127:32482:32489	6309723	18	True				
ANR	6309849	Statement	)	1160:135:32490:32490	6309723	19	True				
ANR	6309850	ExpressionStatement		1160:136:32491:32491	6309723	20	True				
ANR	6309851	ExpressionStatement	data -> preCorrupt = 0	1161:8:32501:32521	6309723	21	True				
ANR	6309852	AssignmentExpression	data -> preCorrupt = 0		6309723	0		=			
ANR	6309853	PtrMemberAccess	data -> preCorrupt		6309723	0					
ANR	6309854	Identifier	data		6309723	0					
ANR	6309855	Identifier	preCorrupt		6309723	1					
ANR	6309856	PrimaryExpression	0		6309723	1					
ANR	6309857	ExpressionStatement	data -> postCorrupt = 0	1162:8:32531:32552	6309723	22	True				
ANR	6309858	AssignmentExpression	data -> postCorrupt = 0		6309723	0		=			
ANR	6309859	PtrMemberAccess	data -> postCorrupt		6309723	0					
ANR	6309860	Identifier	data		6309723	0					
ANR	6309861	Identifier	postCorrupt		6309723	1					
ANR	6309862	PrimaryExpression	0		6309723	1					
ANR	6309863	ExpressionStatement	data -> freeCorrupt = 0	1163:8:32562:32583	6309723	23	True				
ANR	6309864	AssignmentExpression	data -> freeCorrupt = 0		6309723	0		=			
ANR	6309865	PtrMemberAccess	data -> freeCorrupt		6309723	0					
ANR	6309866	Identifier	data		6309723	0					
ANR	6309867	Identifier	freeCorrupt		6309723	1					
ANR	6309868	PrimaryExpression	0		6309723	1					
ANR	6309869	ElseStatement	else		6309723	0					
ANR	6309870	ExpressionStatement	memblk -> lastCheckedOK = globals . sequence	1165:8:32604:32644	6309723	0	True				
ANR	6309871	AssignmentExpression	memblk -> lastCheckedOK = globals . sequence		6309723	0		=			
ANR	6309872	PtrMemberAccess	memblk -> lastCheckedOK		6309723	0					
ANR	6309873	Identifier	memblk		6309723	0					
ANR	6309874	Identifier	lastCheckedOK		6309723	1					
ANR	6309875	MemberAccess	globals . sequence		6309723	1					
ANR	6309876	Identifier	globals		6309723	0					
ANR	6309877	Identifier	sequence		6309723	1					
ANR	6309878	ReturnStatement	return 0 ;	1166:4:32650:32658	6309723	3	True				
ANR	6309879	PrimaryExpression	0		6309723	0					
ANR	6309880	ReturnType	static int		6309723	1					
ANR	6309881	Identifier	Memento_Internal_checkAllAlloced		6309723	2					
ANR	6309882	ParameterList	"Memento_BlkHeader * memblk , void * arg"		6309723	3					
ANR	6309883	Parameter	Memento_BlkHeader * memblk	1142:33:31760:31784	6309723	0	True				
ANR	6309884	ParameterType	Memento_BlkHeader *		6309723	0					
ANR	6309885	Identifier	memblk		6309723	1					
ANR	6309886	Parameter	void * arg	1142:60:31787:31795	6309723	1	True				
ANR	6309887	ParameterType	void *		6309723	0					
ANR	6309888	Identifier	arg		6309723	1					
ANR	6309889	CFGEntryNode	ENTRY		6309723		True				
ANR	6309890	CFGExitNode	EXIT		6309723		True				
ANR	6309891	Symbol	data		6309723						
ANR	6309892	Symbol	globals		6309723						
ANR	6309893	Symbol	stderr		6309723						
ANR	6309894	Symbol	data -> found		6309723						
ANR	6309895	Symbol	memblk		6309723						
ANR	6309896	Symbol	data -> preCorrupt		6309723						
ANR	6309897	Symbol	memblk -> lastCheckedOK		6309723						
ANR	6309898	Symbol	data -> postCorrupt		6309723						
ANR	6309899	Symbol	data -> freeCorrupt		6309723						
ANR	6309900	Symbol	arg		6309723						
ANR	6309901	Symbol	* memblk		6309723						
ANR	6309902	Symbol	* data		6309723						
ANR	6309903	Symbol	globals . sequence		6309723						
ANR	6309904	Function	Memento_Internal_checkAllFreed	1169:0:32663:34017							
ANR	6309905	FunctionDef	"Memento_Internal_checkAllFreed (Memento_BlkHeader * memblk , void * arg)"		6309904	0					
ANR	6309906	CompoundStatement		1171:0:32743:34017	6309904	0					
ANR	6309907	IdentifierDeclStatement	BlkCheckData * data = ( BlkCheckData * ) arg ;	1172:4:32749:32790	6309904	0	True				
ANR	6309908	IdentifierDecl	* data = ( BlkCheckData * ) arg		6309904	0					
ANR	6309909	IdentifierDeclType	BlkCheckData *		6309904	0					
ANR	6309910	Identifier	data		6309904	1					
ANR	6309911	AssignmentExpression	* data = ( BlkCheckData * ) arg		6309904	2		=			
ANR	6309912	Identifier	data		6309904	0					
ANR	6309913	CastExpression	( BlkCheckData * ) arg		6309904	1					
ANR	6309914	CastTarget	BlkCheckData *		6309904	0					
ANR	6309915	Identifier	arg		6309904	1					
ANR	6309916	ExpressionStatement	"Memento_Internal_checkFreedBlock ( memblk , data )"	1174:4:32797:32843	6309904	1	True				
ANR	6309917	CallExpression	"Memento_Internal_checkFreedBlock ( memblk , data )"		6309904	0					
ANR	6309918	Callee	Memento_Internal_checkFreedBlock		6309904	0					
ANR	6309919	Identifier	Memento_Internal_checkFreedBlock		6309904	0					
ANR	6309920	ArgumentList	memblk		6309904	1					
ANR	6309921	Argument	memblk		6309904	0					
ANR	6309922	Identifier	memblk		6309904	0					
ANR	6309923	Argument	data		6309904	1					
ANR	6309924	Identifier	data		6309904	0					
ANR	6309925	IfStatement	if ( data -> preCorrupt || data -> postCorrupt || data -> freeCorrupt )		6309904	2					
ANR	6309926	Condition	data -> preCorrupt || data -> postCorrupt || data -> freeCorrupt	1175:8:32853:32910	6309904	0	True				
ANR	6309927	OrExpression	data -> preCorrupt || data -> postCorrupt || data -> freeCorrupt		6309904	0		||			
ANR	6309928	PtrMemberAccess	data -> preCorrupt		6309904	0					
ANR	6309929	Identifier	data		6309904	0					
ANR	6309930	Identifier	preCorrupt		6309904	1					
ANR	6309931	OrExpression	data -> postCorrupt || data -> freeCorrupt		6309904	1		||			
ANR	6309932	PtrMemberAccess	data -> postCorrupt		6309904	0					
ANR	6309933	Identifier	data		6309904	0					
ANR	6309934	Identifier	postCorrupt		6309904	1					
ANR	6309935	PtrMemberAccess	data -> freeCorrupt		6309904	1					
ANR	6309936	Identifier	data		6309904	0					
ANR	6309937	Identifier	freeCorrupt		6309904	1					
ANR	6309938	CompoundStatement		5:68:169:169	6309904	1					
ANR	6309939	IfStatement	if ( ( data -> found & 4 ) == 0 )		6309904	0					
ANR	6309940	Condition	( data -> found & 4 ) == 0	1176:12:32927:32948	6309904	0	True				
ANR	6309941	EqualityExpression	( data -> found & 4 ) == 0		6309904	0		==			
ANR	6309942	BitAndExpression	data -> found & 4		6309904	0		&			
ANR	6309943	PtrMemberAccess	data -> found		6309904	0					
ANR	6309944	Identifier	data		6309904	0					
ANR	6309945	Identifier	found		6309904	1					
ANR	6309946	PrimaryExpression	4		6309904	1					
ANR	6309947	PrimaryExpression	0		6309904	1					
ANR	6309948	CompoundStatement		6:36:207:207	6309904	1					
ANR	6309949	ExpressionStatement	"fprintf ( stderr , ""Freed blocks:\\n"" )"	1177:12:32965:32999	6309904	0	True				
ANR	6309950	CallExpression	"fprintf ( stderr , ""Freed blocks:\\n"" )"		6309904	0					
ANR	6309951	Callee	fprintf		6309904	0					
ANR	6309952	Identifier	fprintf		6309904	0					
ANR	6309953	ArgumentList	stderr		6309904	1					
ANR	6309954	Argument	stderr		6309904	0					
ANR	6309955	Identifier	stderr		6309904	0					
ANR	6309956	Argument	"""Freed blocks:\\n"""		6309904	1					
ANR	6309957	PrimaryExpression	"""Freed blocks:\\n"""		6309904	0					
ANR	6309958	ExpressionStatement	data -> found |= 4	1178:12:33013:33029	6309904	1	True				
ANR	6309959	AssignmentExpression	data -> found |= 4		6309904	0		|=			
ANR	6309960	PtrMemberAccess	data -> found		6309904	0					
ANR	6309961	Identifier	data		6309904	0					
ANR	6309962	Identifier	found		6309904	1					
ANR	6309963	PrimaryExpression	4		6309904	1					
ANR	6309964	ExpressionStatement	"fprintf ( stderr , ""  "" )"	1180:8:33049:33070	6309904	1	True				
ANR	6309965	CallExpression	"fprintf ( stderr , ""  "" )"		6309904	0					
ANR	6309966	Callee	fprintf		6309904	0					
ANR	6309967	Identifier	fprintf		6309904	0					
ANR	6309968	ArgumentList	stderr		6309904	1					
ANR	6309969	Argument	stderr		6309904	0					
ANR	6309970	Identifier	stderr		6309904	0					
ANR	6309971	Argument	"""  """		6309904	1					
ANR	6309972	PrimaryExpression	"""  """		6309904	0					
ANR	6309973	ExpressionStatement	"showBlock ( memblk , ' ' )"	1181:8:33080:33102	6309904	2	True				
ANR	6309974	CallExpression	"showBlock ( memblk , ' ' )"		6309904	0					
ANR	6309975	Callee	showBlock		6309904	0					
ANR	6309976	Identifier	showBlock		6309904	0					
ANR	6309977	ArgumentList	memblk		6309904	1					
ANR	6309978	Argument	memblk		6309904	0					
ANR	6309979	Identifier	memblk		6309904	0					
ANR	6309980	Argument	' '		6309904	1					
ANR	6309981	PrimaryExpression	' '		6309904	0					
ANR	6309982	IfStatement	if ( data -> freeCorrupt )		6309904	3					
ANR	6309983	Condition	data -> freeCorrupt	1182:12:33116:33132	6309904	0	True				
ANR	6309984	PtrMemberAccess	data -> freeCorrupt		6309904	0					
ANR	6309985	Identifier	data		6309904	0					
ANR	6309986	Identifier	freeCorrupt		6309904	1					
ANR	6309987	CompoundStatement		12:31:391:391	6309904	1					
ANR	6309988	ExpressionStatement	"fprintf ( stderr , "" index %d (address 0x%p) onwards"" , data -> index , & ( ( char * ) MEMBLK_TOBLK ( memblk ) ) [ data -> index ] )"	1183:12:33149:33259	6309904	0	True				
ANR	6309989	CallExpression	"fprintf ( stderr , "" index %d (address 0x%p) onwards"" , data -> index , & ( ( char * ) MEMBLK_TOBLK ( memblk ) ) [ data -> index ] )"		6309904	0					
ANR	6309990	Callee	fprintf		6309904	0					
ANR	6309991	Identifier	fprintf		6309904	0					
ANR	6309992	ArgumentList	stderr		6309904	1					
ANR	6309993	Argument	stderr		6309904	0					
ANR	6309994	Identifier	stderr		6309904	0					
ANR	6309995	Argument	""" index %d (address 0x%p) onwards"""		6309904	1					
ANR	6309996	PrimaryExpression	""" index %d (address 0x%p) onwards"""		6309904	0					
ANR	6309997	Argument	data -> index		6309904	2					
ANR	6309998	PtrMemberAccess	data -> index		6309904	0					
ANR	6309999	Identifier	data		6309904	0					
ANR	6310000	Identifier	index		6309904	1					
ANR	6310001	Argument	& ( ( char * ) MEMBLK_TOBLK ( memblk ) ) [ data -> index ]		6309904	3					
ANR	6310002	UnaryOperationExpression	& ( ( char * ) MEMBLK_TOBLK ( memblk ) ) [ data -> index ]		6309904	0					
ANR	6310003	UnaryOperator	&		6309904	0					
ANR	6310004	ArrayIndexing	( ( char * ) MEMBLK_TOBLK ( memblk ) ) [ data -> index ]		6309904	1					
ANR	6310005	CastExpression	( char * ) MEMBLK_TOBLK ( memblk )		6309904	0					
ANR	6310006	CastTarget	char *		6309904	0					
ANR	6310007	CallExpression	MEMBLK_TOBLK ( memblk )		6309904	1					
ANR	6310008	Callee	MEMBLK_TOBLK		6309904	0					
ANR	6310009	Identifier	MEMBLK_TOBLK		6309904	0					
ANR	6310010	ArgumentList	memblk		6309904	1					
ANR	6310011	Argument	memblk		6309904	0					
ANR	6310012	Identifier	memblk		6309904	0					
ANR	6310013	PtrMemberAccess	data -> index		6309904	1					
ANR	6310014	Identifier	data		6309904	0					
ANR	6310015	Identifier	index		6309904	1					
ANR	6310016	IfStatement	if ( data -> preCorrupt )		6309904	1					
ANR	6310017	Condition	data -> preCorrupt	1184:16:33277:33292	6309904	0	True				
ANR	6310018	PtrMemberAccess	data -> preCorrupt		6309904	0					
ANR	6310019	Identifier	data		6309904	0					
ANR	6310020	Identifier	preCorrupt		6309904	1					
ANR	6310021	CompoundStatement		14:34:551:551	6309904	1					
ANR	6310022	ExpressionStatement	"fprintf ( stderr , ""+ preguard"" )"	1185:16:33313:33342	6309904	0	True				
ANR	6310023	CallExpression	"fprintf ( stderr , ""+ preguard"" )"		6309904	0					
ANR	6310024	Callee	fprintf		6309904	0					
ANR	6310025	Identifier	fprintf		6309904	0					
ANR	6310026	ArgumentList	stderr		6309904	1					
ANR	6310027	Argument	stderr		6309904	0					
ANR	6310028	Identifier	stderr		6309904	0					
ANR	6310029	Argument	"""+ preguard"""		6309904	1					
ANR	6310030	PrimaryExpression	"""+ preguard"""		6309904	0					
ANR	6310031	IfStatement	if ( data -> postCorrupt )		6309904	2					
ANR	6310032	Condition	data -> postCorrupt	1187:16:33374:33390	6309904	0	True				
ANR	6310033	PtrMemberAccess	data -> postCorrupt		6309904	0					
ANR	6310034	Identifier	data		6309904	0					
ANR	6310035	Identifier	postCorrupt		6309904	1					
ANR	6310036	CompoundStatement		17:35:649:649	6309904	1					
ANR	6310037	ExpressionStatement	"fprintf ( stderr , ""+ postguard"" )"	1188:16:33411:33441	6309904	0	True				
ANR	6310038	CallExpression	"fprintf ( stderr , ""+ postguard"" )"		6309904	0					
ANR	6310039	Callee	fprintf		6309904	0					
ANR	6310040	Identifier	fprintf		6309904	0					
ANR	6310041	ArgumentList	stderr		6309904	1					
ANR	6310042	Argument	stderr		6309904	0					
ANR	6310043	Identifier	stderr		6309904	0					
ANR	6310044	Argument	"""+ postguard"""		6309904	1					
ANR	6310045	PrimaryExpression	"""+ postguard"""		6309904	0					
ANR	6310046	ElseStatement	else		6309904	0					
ANR	6310047	CompoundStatement		20:15:728:728	6309904	0					
ANR	6310048	IfStatement	if ( data -> preCorrupt )		6309904	0					
ANR	6310049	Condition	data -> preCorrupt	1191:16:33490:33505	6309904	0	True				
ANR	6310050	PtrMemberAccess	data -> preCorrupt		6309904	0					
ANR	6310051	Identifier	data		6309904	0					
ANR	6310052	Identifier	preCorrupt		6309904	1					
ANR	6310053	CompoundStatement		21:34:764:764	6309904	1					
ANR	6310054	ExpressionStatement	"fprintf ( stderr , "" preguard"" )"	1192:16:33526:33554	6309904	0	True				
ANR	6310055	CallExpression	"fprintf ( stderr , "" preguard"" )"		6309904	0					
ANR	6310056	Callee	fprintf		6309904	0					
ANR	6310057	Identifier	fprintf		6309904	0					
ANR	6310058	ArgumentList	stderr		6309904	1					
ANR	6310059	Argument	stderr		6309904	0					
ANR	6310060	Identifier	stderr		6309904	0					
ANR	6310061	Argument	""" preguard"""		6309904	1					
ANR	6310062	PrimaryExpression	""" preguard"""		6309904	0					
ANR	6310063	IfStatement	if ( data -> postCorrupt )		6309904	1					
ANR	6310064	Condition	data -> postCorrupt	1194:16:33586:33602	6309904	0	True				
ANR	6310065	PtrMemberAccess	data -> postCorrupt		6309904	0					
ANR	6310066	Identifier	data		6309904	0					
ANR	6310067	Identifier	postCorrupt		6309904	1					
ANR	6310068	CompoundStatement		24:35:861:861	6309904	1					
ANR	6310069	ExpressionStatement	"fprintf ( stderr , ""%s Postguard"" , ( data -> preCorrupt ? ""+"" : """" ) )"	1195:16:33623:33685	6309904	0	True				
ANR	6310070	CallExpression	"fprintf ( stderr , ""%s Postguard"" , ( data -> preCorrupt ? ""+"" : """" ) )"		6309904	0					
ANR	6310071	Callee	fprintf		6309904	0					
ANR	6310072	Identifier	fprintf		6309904	0					
ANR	6310073	ArgumentList	stderr		6309904	1					
ANR	6310074	Argument	stderr		6309904	0					
ANR	6310075	Identifier	stderr		6309904	0					
ANR	6310076	Argument	"""%s Postguard"""		6309904	1					
ANR	6310077	PrimaryExpression	"""%s Postguard"""		6309904	0					
ANR	6310078	Argument	"data -> preCorrupt ? ""+"" : """""		6309904	2					
ANR	6310079	ConditionalExpression	"data -> preCorrupt ? ""+"" : """""		6309904	0					
ANR	6310080	Condition	data -> preCorrupt		6309904	0					
ANR	6310081	PtrMemberAccess	data -> preCorrupt		6309904	0					
ANR	6310082	Identifier	data		6309904	0					
ANR	6310083	Identifier	preCorrupt		6309904	1					
ANR	6310084	PrimaryExpression	"""+"""		6309904	1					
ANR	6310085	PrimaryExpression	""""""		6309904	2					
ANR	6310086	Statement	fprintf	1198:8:33719:33725	6309904	4	True				
ANR	6310087	Statement	(	1198:15:33726:33726	6309904	5	True				
ANR	6310088	Statement	stderr	1198:16:33727:33732	6309904	6	True				
ANR	6310089	Statement	","	1198:22:33733:33733	6309904	7	True				
ANR	6310090	Statement	""" corrupted.\\n"""	1198:24:33735:33749	6309904	8	True				
ANR	6310091	Statement	"""    Block last checked OK at allocation %d. Now %d.\\n"""	1198:40:33751:33805	6309904	9	True				
ANR	6310092	Statement	","	1198:95:33806:33806	6309904	10	True				
ANR	6310093	Statement	memblk	1198:97:33808:33813	6309904	11	True				
ANR	6310094	Statement	->	1198:103:33814:33815	6309904	12	True				
ANR	6310095	Statement	lastCheckedOK	1198:105:33816:33828	6309904	13	True				
ANR	6310096	Statement	","	1198:118:33829:33829	6309904	14	True				
ANR	6310097	Statement	globals	1198:120:33831:33837	6309904	15	True				
ANR	6310098	Statement	.	1198:127:33838:33838	6309904	16	True				
ANR	6310099	Statement	sequence	1198:128:33839:33846	6309904	17	True				
ANR	6310100	Statement	)	1198:136:33847:33847	6309904	18	True				
ANR	6310101	ExpressionStatement		1198:137:33848:33848	6309904	19	True				
ANR	6310102	ExpressionStatement	data -> preCorrupt = 0	1199:8:33858:33878	6309904	20	True				
ANR	6310103	AssignmentExpression	data -> preCorrupt = 0		6309904	0		=			
ANR	6310104	PtrMemberAccess	data -> preCorrupt		6309904	0					
ANR	6310105	Identifier	data		6309904	0					
ANR	6310106	Identifier	preCorrupt		6309904	1					
ANR	6310107	PrimaryExpression	0		6309904	1					
ANR	6310108	ExpressionStatement	data -> postCorrupt = 0	1200:8:33888:33909	6309904	21	True				
ANR	6310109	AssignmentExpression	data -> postCorrupt = 0		6309904	0		=			
ANR	6310110	PtrMemberAccess	data -> postCorrupt		6309904	0					
ANR	6310111	Identifier	data		6309904	0					
ANR	6310112	Identifier	postCorrupt		6309904	1					
ANR	6310113	PrimaryExpression	0		6309904	1					
ANR	6310114	ExpressionStatement	data -> freeCorrupt = 0	1201:8:33919:33940	6309904	22	True				
ANR	6310115	AssignmentExpression	data -> freeCorrupt = 0		6309904	0		=			
ANR	6310116	PtrMemberAccess	data -> freeCorrupt		6309904	0					
ANR	6310117	Identifier	data		6309904	0					
ANR	6310118	Identifier	freeCorrupt		6309904	1					
ANR	6310119	PrimaryExpression	0		6309904	1					
ANR	6310120	ElseStatement	else		6309904	0					
ANR	6310121	ExpressionStatement	memblk -> lastCheckedOK = globals . sequence	1203:8:33961:34001	6309904	0	True				
ANR	6310122	AssignmentExpression	memblk -> lastCheckedOK = globals . sequence		6309904	0		=			
ANR	6310123	PtrMemberAccess	memblk -> lastCheckedOK		6309904	0					
ANR	6310124	Identifier	memblk		6309904	0					
ANR	6310125	Identifier	lastCheckedOK		6309904	1					
ANR	6310126	MemberAccess	globals . sequence		6309904	1					
ANR	6310127	Identifier	globals		6309904	0					
ANR	6310128	Identifier	sequence		6309904	1					
ANR	6310129	ReturnStatement	return 0 ;	1204:4:34007:34015	6309904	3	True				
ANR	6310130	PrimaryExpression	0		6309904	0					
ANR	6310131	ReturnType	static int		6309904	1					
ANR	6310132	Identifier	Memento_Internal_checkAllFreed		6309904	2					
ANR	6310133	ParameterList	"Memento_BlkHeader * memblk , void * arg"		6309904	3					
ANR	6310134	Parameter	Memento_BlkHeader * memblk	1170:31:32705:32729	6309904	0	True				
ANR	6310135	ParameterType	Memento_BlkHeader *		6309904	0					
ANR	6310136	Identifier	memblk		6309904	1					
ANR	6310137	Parameter	void * arg	1170:58:32732:32740	6309904	1	True				
ANR	6310138	ParameterType	void *		6309904	0					
ANR	6310139	Identifier	arg		6309904	1					
ANR	6310140	CFGEntryNode	ENTRY		6309904		True				
ANR	6310141	CFGExitNode	EXIT		6309904		True				
ANR	6310142	Symbol	data		6309904						
ANR	6310143	Symbol	globals		6309904						
ANR	6310144	Symbol	stderr		6309904						
ANR	6310145	Symbol	data -> found		6309904						
ANR	6310146	Symbol	memblk		6309904						
ANR	6310147	Symbol	data -> preCorrupt		6309904						
ANR	6310148	Symbol	MEMBLK_TOBLK		6309904						
ANR	6310149	Symbol	memblk -> lastCheckedOK		6309904						
ANR	6310150	Symbol	data -> postCorrupt		6309904						
ANR	6310151	Symbol	data -> freeCorrupt		6309904						
ANR	6310152	Symbol	arg		6309904						
ANR	6310153	Symbol	data -> index		6309904						
ANR	6310154	Symbol	* memblk		6309904						
ANR	6310155	Symbol	* data		6309904						
ANR	6310156	Symbol	globals . sequence		6309904						
ANR	6310157	Function	Memento_checkAllMemory	1207:0:34020:34397							
ANR	6310158	FunctionDef	Memento_checkAllMemory ()		6310157	0					
ANR	6310159	CompoundStatement		1209:0:34053:34397	6310157	0					
ANR	6310160	IdentifierDeclStatement	BlkCheckData data ;	1211:4:34084:34101	6310157	0	True				
ANR	6310161	IdentifierDecl	data		6310157	0					
ANR	6310162	IdentifierDeclType	BlkCheckData		6310157	0					
ANR	6310163	Identifier	data		6310157	1					
ANR	6310164	ExpressionStatement	"memset ( & data , 0 , sizeof ( data ) )"	1213:4:34108:34138	6310157	1	True				
ANR	6310165	CallExpression	"memset ( & data , 0 , sizeof ( data ) )"		6310157	0					
ANR	6310166	Callee	memset		6310157	0					
ANR	6310167	Identifier	memset		6310157	0					
ANR	6310168	ArgumentList	& data		6310157	1					
ANR	6310169	Argument	& data		6310157	0					
ANR	6310170	UnaryOperationExpression	& data		6310157	0					
ANR	6310171	UnaryOperator	&		6310157	0					
ANR	6310172	Identifier	data		6310157	1					
ANR	6310173	Argument	0		6310157	1					
ANR	6310174	PrimaryExpression	0		6310157	0					
ANR	6310175	Argument	sizeof ( data )		6310157	2					
ANR	6310176	SizeofExpression	sizeof ( data )		6310157	0					
ANR	6310177	Sizeof	sizeof		6310157	0					
ANR	6310178	SizeofOperand	data		6310157	1					
ANR	6310179	ExpressionStatement	"Memento_appBlocks ( & globals . used , Memento_Internal_checkAllAlloced , & data )"	1214:4:34144:34217	6310157	2	True				
ANR	6310180	CallExpression	"Memento_appBlocks ( & globals . used , Memento_Internal_checkAllAlloced , & data )"		6310157	0					
ANR	6310181	Callee	Memento_appBlocks		6310157	0					
ANR	6310182	Identifier	Memento_appBlocks		6310157	0					
ANR	6310183	ArgumentList	& globals . used		6310157	1					
ANR	6310184	Argument	& globals . used		6310157	0					
ANR	6310185	UnaryOperationExpression	& globals . used		6310157	0					
ANR	6310186	UnaryOperator	&		6310157	0					
ANR	6310187	MemberAccess	globals . used		6310157	1					
ANR	6310188	Identifier	globals		6310157	0					
ANR	6310189	Identifier	used		6310157	1					
ANR	6310190	Argument	Memento_Internal_checkAllAlloced		6310157	1					
ANR	6310191	Identifier	Memento_Internal_checkAllAlloced		6310157	0					
ANR	6310192	Argument	& data		6310157	2					
ANR	6310193	UnaryOperationExpression	& data		6310157	0					
ANR	6310194	UnaryOperator	&		6310157	0					
ANR	6310195	Identifier	data		6310157	1					
ANR	6310196	ExpressionStatement	"Memento_appBlocks ( & globals . free , Memento_Internal_checkAllFreed , & data )"	1215:4:34223:34294	6310157	3	True				
ANR	6310197	CallExpression	"Memento_appBlocks ( & globals . free , Memento_Internal_checkAllFreed , & data )"		6310157	0					
ANR	6310198	Callee	Memento_appBlocks		6310157	0					
ANR	6310199	Identifier	Memento_appBlocks		6310157	0					
ANR	6310200	ArgumentList	& globals . free		6310157	1					
ANR	6310201	Argument	& globals . free		6310157	0					
ANR	6310202	UnaryOperationExpression	& globals . free		6310157	0					
ANR	6310203	UnaryOperator	&		6310157	0					
ANR	6310204	MemberAccess	globals . free		6310157	1					
ANR	6310205	Identifier	globals		6310157	0					
ANR	6310206	Identifier	free		6310157	1					
ANR	6310207	Argument	Memento_Internal_checkAllFreed		6310157	1					
ANR	6310208	Identifier	Memento_Internal_checkAllFreed		6310157	0					
ANR	6310209	Argument	& data		6310157	2					
ANR	6310210	UnaryOperationExpression	& data		6310157	0					
ANR	6310211	UnaryOperator	&		6310157	0					
ANR	6310212	Identifier	data		6310157	1					
ANR	6310213	IfStatement	if ( data . found & 6 )		6310157	4					
ANR	6310214	Condition	data . found & 6	1216:8:34304:34317	6310157	0	True				
ANR	6310215	BitAndExpression	data . found & 6		6310157	0		&			
ANR	6310216	MemberAccess	data . found		6310157	0					
ANR	6310217	Identifier	data		6310157	0					
ANR	6310218	Identifier	found		6310157	1					
ANR	6310219	PrimaryExpression	6		6310157	1					
ANR	6310220	CompoundStatement		8:24:266:266	6310157	1					
ANR	6310221	ExpressionStatement	Memento_breakpoint ( )	1217:8:34330:34350	6310157	0	True				
ANR	6310222	CallExpression	Memento_breakpoint ( )		6310157	0					
ANR	6310223	Callee	Memento_breakpoint		6310157	0					
ANR	6310224	Identifier	Memento_breakpoint		6310157	0					
ANR	6310225	ArgumentList			6310157	1					
ANR	6310226	ReturnStatement	return 1 ;	1218:8:34360:34368	6310157	1	True				
ANR	6310227	PrimaryExpression	1		6310157	0					
ANR	6310228	ReturnStatement	return 0 ;	1221:4:34387:34395	6310157	5	True				
ANR	6310229	PrimaryExpression	0		6310157	0					
ANR	6310230	ReturnType	int		6310157	1					
ANR	6310231	Identifier	Memento_checkAllMemory		6310157	2					
ANR	6310232	ParameterList			6310157	3					
ANR	6310233	CFGEntryNode	ENTRY		6310157		True				
ANR	6310234	CFGExitNode	EXIT		6310157		True				
ANR	6310235	Symbol	Memento_Internal_checkAllAlloced		6310157						
ANR	6310236	Symbol	& globals		6310157						
ANR	6310237	Symbol	data		6310157						
ANR	6310238	Symbol	Memento_Internal_checkAllFreed		6310157						
ANR	6310239	Symbol	& globals . free		6310157						
ANR	6310240	Symbol	globals		6310157						
ANR	6310241	Symbol	data . found		6310157						
ANR	6310242	Symbol	& globals . used		6310157						
ANR	6310243	Symbol	& data		6310157						
ANR	6310244	Function	Memento_setParanoia	1224:0:34400:34515							
ANR	6310245	FunctionDef	Memento_setParanoia (int i)		6310244	0					
ANR	6310246	CompoundStatement		1226:0:34431:34515	6310244	0					
ANR	6310247	ExpressionStatement	globals . paranoia = i	1227:4:34437:34457	6310244	0	True				
ANR	6310248	AssignmentExpression	globals . paranoia = i		6310244	0		=			
ANR	6310249	MemberAccess	globals . paranoia		6310244	0					
ANR	6310250	Identifier	globals		6310244	0					
ANR	6310251	Identifier	paranoia		6310244	1					
ANR	6310252	Identifier	i		6310244	1					
ANR	6310253	ExpressionStatement	globals . countdown = globals . paranoia	1228:4:34463:34499	6310244	1	True				
ANR	6310254	AssignmentExpression	globals . countdown = globals . paranoia		6310244	0		=			
ANR	6310255	MemberAccess	globals . countdown		6310244	0					
ANR	6310256	Identifier	globals		6310244	0					
ANR	6310257	Identifier	countdown		6310244	1					
ANR	6310258	MemberAccess	globals . paranoia		6310244	1					
ANR	6310259	Identifier	globals		6310244	0					
ANR	6310260	Identifier	paranoia		6310244	1					
ANR	6310261	ReturnStatement	return i ;	1229:4:34505:34513	6310244	2	True				
ANR	6310262	Identifier	i		6310244	0					
ANR	6310263	ReturnType	int		6310244	1					
ANR	6310264	Identifier	Memento_setParanoia		6310244	2					
ANR	6310265	ParameterList	int i		6310244	3					
ANR	6310266	Parameter	int i	1225:20:34424:34428	6310244	0	True				
ANR	6310267	ParameterType	int		6310244	0					
ANR	6310268	Identifier	i		6310244	1					
ANR	6310269	CFGEntryNode	ENTRY		6310244		True				
ANR	6310270	CFGExitNode	EXIT		6310244		True				
ANR	6310271	Symbol	globals . countdown		6310244						
ANR	6310272	Symbol	globals		6310244						
ANR	6310273	Symbol	i		6310244						
ANR	6310274	Symbol	globals . paranoia		6310244						
ANR	6310275	Function	Memento_paranoidAt	1232:0:34518:34592							
ANR	6310276	FunctionDef	Memento_paranoidAt (int i)		6310275	0					
ANR	6310277	CompoundStatement		1234:0:34548:34592	6310275	0					
ANR	6310278	ExpressionStatement	globals . paranoidAt = i	1235:4:34554:34576	6310275	0	True				
ANR	6310279	AssignmentExpression	globals . paranoidAt = i		6310275	0		=			
ANR	6310280	MemberAccess	globals . paranoidAt		6310275	0					
ANR	6310281	Identifier	globals		6310275	0					
ANR	6310282	Identifier	paranoidAt		6310275	1					
ANR	6310283	Identifier	i		6310275	1					
ANR	6310284	ReturnStatement	return i ;	1236:4:34582:34590	6310275	1	True				
ANR	6310285	Identifier	i		6310275	0					
ANR	6310286	ReturnType	int		6310275	1					
ANR	6310287	Identifier	Memento_paranoidAt		6310275	2					
ANR	6310288	ParameterList	int i		6310275	3					
ANR	6310289	Parameter	int i	1233:19:34541:34545	6310275	0	True				
ANR	6310290	ParameterType	int		6310275	0					
ANR	6310291	Identifier	i		6310275	1					
ANR	6310292	CFGEntryNode	ENTRY		6310275		True				
ANR	6310293	CFGExitNode	EXIT		6310275		True				
ANR	6310294	Symbol	globals . paranoidAt		6310275						
ANR	6310295	Symbol	globals		6310275						
ANR	6310296	Symbol	i		6310275						
ANR	6310297	Function	Memento_getBlockNum	1239:0:34595:34762							
ANR	6310298	FunctionDef	Memento_getBlockNum (void * b)		6310297	0					
ANR	6310299	CompoundStatement		1241:0:34628:34762	6310297	0					
ANR	6310300	IdentifierDeclStatement	Memento_BlkHeader * memblk ;	1242:4:34634:34659	6310297	0	True				
ANR	6310301	IdentifierDecl	* memblk		6310297	0					
ANR	6310302	IdentifierDeclType	Memento_BlkHeader *		6310297	0					
ANR	6310303	Identifier	memblk		6310297	1					
ANR	6310304	IfStatement	if ( b == NULL )		6310297	1					
ANR	6310305	Condition	b == NULL	1244:8:34670:34678	6310297	0	True				
ANR	6310306	EqualityExpression	b == NULL		6310297	0		==			
ANR	6310307	Identifier	b		6310297	0					
ANR	6310308	Identifier	NULL		6310297	1					
ANR	6310309	ReturnStatement	return 0 ;	1245:8:34689:34697	6310297	1	True				
ANR	6310310	PrimaryExpression	0		6310297	0					
ANR	6310311	ExpressionStatement	memblk = MEMBLK_FROMBLK ( b )	1246:4:34703:34729	6310297	2	True				
ANR	6310312	AssignmentExpression	memblk = MEMBLK_FROMBLK ( b )		6310297	0		=			
ANR	6310313	Identifier	memblk		6310297	0					
ANR	6310314	CallExpression	MEMBLK_FROMBLK ( b )		6310297	1					
ANR	6310315	Callee	MEMBLK_FROMBLK		6310297	0					
ANR	6310316	Identifier	MEMBLK_FROMBLK		6310297	0					
ANR	6310317	ArgumentList	b		6310297	1					
ANR	6310318	Argument	b		6310297	0					
ANR	6310319	Identifier	b		6310297	0					
ANR	6310320	ReturnStatement	return ( memblk -> sequence ) ;	1247:4:34735:34760	6310297	3	True				
ANR	6310321	PtrMemberAccess	memblk -> sequence		6310297	0					
ANR	6310322	Identifier	memblk		6310297	0					
ANR	6310323	Identifier	sequence		6310297	1					
ANR	6310324	ReturnType	int		6310297	1					
ANR	6310325	Identifier	Memento_getBlockNum		6310297	2					
ANR	6310326	ParameterList	void * b		6310297	3					
ANR	6310327	Parameter	void * b	1240:20:34619:34625	6310297	0	True				
ANR	6310328	ParameterType	void *		6310297	0					
ANR	6310329	Identifier	b		6310297	1					
ANR	6310330	CFGEntryNode	ENTRY		6310297		True				
ANR	6310331	CFGExitNode	EXIT		6310297		True				
ANR	6310332	Symbol	b		6310297						
ANR	6310333	Symbol	NULL		6310297						
ANR	6310334	Symbol	MEMBLK_FROMBLK		6310297						
ANR	6310335	Symbol	* memblk		6310297						
ANR	6310336	Symbol	memblk -> sequence		6310297						
ANR	6310337	Symbol	memblk		6310297						
ANR	6310338	Function	Memento_check	1250:0:34765:34950							
ANR	6310339	FunctionDef	Memento_check ()		6310338	0					
ANR	6310340	CompoundStatement		1252:0:34789:34950	6310338	0					
ANR	6310341	IdentifierDeclStatement	int result ;	1253:4:34795:34805	6310338	0	True				
ANR	6310342	IdentifierDecl	result		6310338	0					
ANR	6310343	IdentifierDeclType	int		6310338	0					
ANR	6310344	Identifier	result		6310338	1					
ANR	6310345	ExpressionStatement	"fprintf ( stderr , ""Checking memory\\n"" )"	1255:4:34812:34848	6310338	1	True				
ANR	6310346	CallExpression	"fprintf ( stderr , ""Checking memory\\n"" )"		6310338	0					
ANR	6310347	Callee	fprintf		6310338	0					
ANR	6310348	Identifier	fprintf		6310338	0					
ANR	6310349	ArgumentList	stderr		6310338	1					
ANR	6310350	Argument	stderr		6310338	0					
ANR	6310351	Identifier	stderr		6310338	0					
ANR	6310352	Argument	"""Checking memory\\n"""		6310338	1					
ANR	6310353	PrimaryExpression	"""Checking memory\\n"""		6310338	0					
ANR	6310354	ExpressionStatement	result = Memento_checkAllMemory ( )	1256:4:34854:34887	6310338	2	True				
ANR	6310355	AssignmentExpression	result = Memento_checkAllMemory ( )		6310338	0		=			
ANR	6310356	Identifier	result		6310338	0					
ANR	6310357	CallExpression	Memento_checkAllMemory ( )		6310338	1					
ANR	6310358	Callee	Memento_checkAllMemory		6310338	0					
ANR	6310359	Identifier	Memento_checkAllMemory		6310338	0					
ANR	6310360	ArgumentList			6310338	1					
ANR	6310361	ExpressionStatement	"fprintf ( stderr , ""Memory checked!\\n"" )"	1257:4:34893:34929	6310338	3	True				
ANR	6310362	CallExpression	"fprintf ( stderr , ""Memory checked!\\n"" )"		6310338	0					
ANR	6310363	Callee	fprintf		6310338	0					
ANR	6310364	Identifier	fprintf		6310338	0					
ANR	6310365	ArgumentList	stderr		6310338	1					
ANR	6310366	Argument	stderr		6310338	0					
ANR	6310367	Identifier	stderr		6310338	0					
ANR	6310368	Argument	"""Memory checked!\\n"""		6310338	1					
ANR	6310369	PrimaryExpression	"""Memory checked!\\n"""		6310338	0					
ANR	6310370	ReturnStatement	return result ;	1258:4:34935:34948	6310338	4	True				
ANR	6310371	Identifier	result		6310338	0					
ANR	6310372	ReturnType	int		6310338	1					
ANR	6310373	Identifier	Memento_check		6310338	2					
ANR	6310374	ParameterList			6310338	3					
ANR	6310375	CFGEntryNode	ENTRY		6310338		True				
ANR	6310376	CFGExitNode	EXIT		6310338		True				
ANR	6310377	Symbol	result		6310338						
ANR	6310378	Symbol	Memento_checkAllMemory		6310338						
ANR	6310379	Symbol	stderr		6310338						
ANR	6310380	ClassDef	findBlkData	1261:8:34961:35054							
ANR	6310381	DeclStmt									
ANR	6310382	Decl							void	void *	addr
ANR	6310383	DeclStmt									
ANR	6310384	Decl							Memento_BlkHeader	Memento_BlkHeader *	blk
ANR	6310385	DeclStmt									
ANR	6310386	Decl							int	int	flags
ANR	6310387	DeclStmt									
ANR	6310388	Decl							findBlkData	findBlkData	findBlkData
ANR	6310389	Function	Memento_containsAddr	1267:0:35057:35702							
ANR	6310390	FunctionDef	"Memento_containsAddr (Memento_BlkHeader * b , void * arg)"		6310389	0					
ANR	6310391	CompoundStatement		1269:0:35122:35702	6310389	0					
ANR	6310392	IdentifierDeclStatement	findBlkData * data = ( findBlkData * ) arg ;	1270:4:35128:35167	6310389	0	True				
ANR	6310393	IdentifierDecl	* data = ( findBlkData * ) arg		6310389	0					
ANR	6310394	IdentifierDeclType	findBlkData *		6310389	0					
ANR	6310395	Identifier	data		6310389	1					
ANR	6310396	AssignmentExpression	* data = ( findBlkData * ) arg		6310389	2		=			
ANR	6310397	Identifier	data		6310389	0					
ANR	6310398	CastExpression	( findBlkData * ) arg		6310389	1					
ANR	6310399	CastTarget	findBlkData *		6310389	0					
ANR	6310400	Identifier	arg		6310389	1					
ANR	6310401	IdentifierDeclStatement	char * blkend = & ( ( char * ) MEMBLK_TOBLK ( b ) ) [ b -> rawsize ] ;	1271:4:35173:35226	6310389	1	True				
ANR	6310402	IdentifierDecl	* blkend = & ( ( char * ) MEMBLK_TOBLK ( b ) ) [ b -> rawsize ]		6310389	0					
ANR	6310403	IdentifierDeclType	char *		6310389	0					
ANR	6310404	Identifier	blkend		6310389	1					
ANR	6310405	AssignmentExpression	* blkend = & ( ( char * ) MEMBLK_TOBLK ( b ) ) [ b -> rawsize ]		6310389	2		=			
ANR	6310406	Identifier	blkend		6310389	0					
ANR	6310407	UnaryOperationExpression	& ( ( char * ) MEMBLK_TOBLK ( b ) ) [ b -> rawsize ]		6310389	1					
ANR	6310408	UnaryOperator	&		6310389	0					
ANR	6310409	ArrayIndexing	( ( char * ) MEMBLK_TOBLK ( b ) ) [ b -> rawsize ]		6310389	1					
ANR	6310410	CastExpression	( char * ) MEMBLK_TOBLK ( b )		6310389	0					
ANR	6310411	CastTarget	char *		6310389	0					
ANR	6310412	CallExpression	MEMBLK_TOBLK ( b )		6310389	1					
ANR	6310413	Callee	MEMBLK_TOBLK		6310389	0					
ANR	6310414	Identifier	MEMBLK_TOBLK		6310389	0					
ANR	6310415	ArgumentList	b		6310389	1					
ANR	6310416	Argument	b		6310389	0					
ANR	6310417	Identifier	b		6310389	0					
ANR	6310418	PtrMemberAccess	b -> rawsize		6310389	1					
ANR	6310419	Identifier	b		6310389	0					
ANR	6310420	Identifier	rawsize		6310389	1					
ANR	6310421	IfStatement	if ( ( MEMBLK_TOBLK ( b ) <= data -> addr ) && ( ( void * ) blkend > data -> addr ) )		6310389	2					
ANR	6310422	Condition	( MEMBLK_TOBLK ( b ) <= data -> addr ) && ( ( void * ) blkend > data -> addr )	1273:8:35237:35300	6310389	0	True				
ANR	6310423	AndExpression	( MEMBLK_TOBLK ( b ) <= data -> addr ) && ( ( void * ) blkend > data -> addr )		6310389	0		&&			
ANR	6310424	RelationalExpression	MEMBLK_TOBLK ( b ) <= data -> addr		6310389	0		<=			
ANR	6310425	CallExpression	MEMBLK_TOBLK ( b )		6310389	0					
ANR	6310426	Callee	MEMBLK_TOBLK		6310389	0					
ANR	6310427	Identifier	MEMBLK_TOBLK		6310389	0					
ANR	6310428	ArgumentList	b		6310389	1					
ANR	6310429	Argument	b		6310389	0					
ANR	6310430	Identifier	b		6310389	0					
ANR	6310431	PtrMemberAccess	data -> addr		6310389	1					
ANR	6310432	Identifier	data		6310389	0					
ANR	6310433	Identifier	addr		6310389	1					
ANR	6310434	RelationalExpression	( void * ) blkend > data -> addr		6310389	1		>			
ANR	6310435	CastExpression	( void * ) blkend		6310389	0					
ANR	6310436	CastTarget	void *		6310389	0					
ANR	6310437	Identifier	blkend		6310389	1					
ANR	6310438	PtrMemberAccess	data -> addr		6310389	1					
ANR	6310439	Identifier	data		6310389	0					
ANR	6310440	Identifier	addr		6310389	1					
ANR	6310441	CompoundStatement		5:74:180:180	6310389	1					
ANR	6310442	ExpressionStatement	data -> blk = b	1274:8:35313:35326	6310389	0	True				
ANR	6310443	AssignmentExpression	data -> blk = b		6310389	0		=			
ANR	6310444	PtrMemberAccess	data -> blk		6310389	0					
ANR	6310445	Identifier	data		6310389	0					
ANR	6310446	Identifier	blk		6310389	1					
ANR	6310447	Identifier	b		6310389	1					
ANR	6310448	ExpressionStatement	data -> flags = 1	1275:8:35336:35351	6310389	1	True				
ANR	6310449	AssignmentExpression	data -> flags = 1		6310389	0		=			
ANR	6310450	PtrMemberAccess	data -> flags		6310389	0					
ANR	6310451	Identifier	data		6310389	0					
ANR	6310452	Identifier	flags		6310389	1					
ANR	6310453	PrimaryExpression	1		6310389	1					
ANR	6310454	ReturnStatement	return 1 ;	1276:8:35361:35369	6310389	2	True				
ANR	6310455	PrimaryExpression	1		6310389	0					
ANR	6310456	IfStatement	if ( ( ( void * ) b <= data -> addr ) && ( MEMBLK_TOBLK ( b ) > data -> addr ) )		6310389	3					
ANR	6310457	Condition	( ( void * ) b <= data -> addr ) && ( MEMBLK_TOBLK ( b ) > data -> addr )	1278:8:35385:35443	6310389	0	True				
ANR	6310458	AndExpression	( ( void * ) b <= data -> addr ) && ( MEMBLK_TOBLK ( b ) > data -> addr )		6310389	0		&&			
ANR	6310459	RelationalExpression	( void * ) b <= data -> addr		6310389	0		<=			
ANR	6310460	CastExpression	( void * ) b		6310389	0					
ANR	6310461	CastTarget	void *		6310389	0					
ANR	6310462	Identifier	b		6310389	1					
ANR	6310463	PtrMemberAccess	data -> addr		6310389	1					
ANR	6310464	Identifier	data		6310389	0					
ANR	6310465	Identifier	addr		6310389	1					
ANR	6310466	RelationalExpression	MEMBLK_TOBLK ( b ) > data -> addr		6310389	1		>			
ANR	6310467	CallExpression	MEMBLK_TOBLK ( b )		6310389	0					
ANR	6310468	Callee	MEMBLK_TOBLK		6310389	0					
ANR	6310469	Identifier	MEMBLK_TOBLK		6310389	0					
ANR	6310470	ArgumentList	b		6310389	1					
ANR	6310471	Argument	b		6310389	0					
ANR	6310472	Identifier	b		6310389	0					
ANR	6310473	PtrMemberAccess	data -> addr		6310389	1					
ANR	6310474	Identifier	data		6310389	0					
ANR	6310475	Identifier	addr		6310389	1					
ANR	6310476	CompoundStatement		10:69:323:323	6310389	1					
ANR	6310477	ExpressionStatement	data -> blk = b	1279:8:35456:35469	6310389	0	True				
ANR	6310478	AssignmentExpression	data -> blk = b		6310389	0		=			
ANR	6310479	PtrMemberAccess	data -> blk		6310389	0					
ANR	6310480	Identifier	data		6310389	0					
ANR	6310481	Identifier	blk		6310389	1					
ANR	6310482	Identifier	b		6310389	1					
ANR	6310483	ExpressionStatement	data -> flags = 2	1280:8:35479:35494	6310389	1	True				
ANR	6310484	AssignmentExpression	data -> flags = 2		6310389	0		=			
ANR	6310485	PtrMemberAccess	data -> flags		6310389	0					
ANR	6310486	Identifier	data		6310389	0					
ANR	6310487	Identifier	flags		6310389	1					
ANR	6310488	PrimaryExpression	2		6310389	1					
ANR	6310489	ReturnStatement	return 1 ;	1281:8:35504:35512	6310389	2	True				
ANR	6310490	PrimaryExpression	1		6310389	0					
ANR	6310491	IfStatement	if ( ( ( void * ) blkend <= data -> addr ) && ( ( void * ) ( blkend + Memento_PostSize ) > data -> addr ) )		6310389	4					
ANR	6310492	Condition	( ( void * ) blkend <= data -> addr ) && ( ( void * ) ( blkend + Memento_PostSize ) > data -> addr )	1283:8:35528:35611	6310389	0	True				
ANR	6310493	AndExpression	( ( void * ) blkend <= data -> addr ) && ( ( void * ) ( blkend + Memento_PostSize ) > data -> addr )		6310389	0		&&			
ANR	6310494	RelationalExpression	( void * ) blkend <= data -> addr		6310389	0		<=			
ANR	6310495	CastExpression	( void * ) blkend		6310389	0					
ANR	6310496	CastTarget	void *		6310389	0					
ANR	6310497	Identifier	blkend		6310389	1					
ANR	6310498	PtrMemberAccess	data -> addr		6310389	1					
ANR	6310499	Identifier	data		6310389	0					
ANR	6310500	Identifier	addr		6310389	1					
ANR	6310501	RelationalExpression	( void * ) ( blkend + Memento_PostSize ) > data -> addr		6310389	1		>			
ANR	6310502	CastExpression	( void * ) ( blkend + Memento_PostSize )		6310389	0					
ANR	6310503	CastTarget	void *		6310389	0					
ANR	6310504	AdditiveExpression	blkend + Memento_PostSize		6310389	1		+			
ANR	6310505	Identifier	blkend		6310389	0					
ANR	6310506	Identifier	Memento_PostSize		6310389	1					
ANR	6310507	PtrMemberAccess	data -> addr		6310389	1					
ANR	6310508	Identifier	data		6310389	0					
ANR	6310509	Identifier	addr		6310389	1					
ANR	6310510	CompoundStatement		15:94:491:491	6310389	1					
ANR	6310511	ExpressionStatement	data -> blk = b	1284:8:35624:35637	6310389	0	True				
ANR	6310512	AssignmentExpression	data -> blk = b		6310389	0		=			
ANR	6310513	PtrMemberAccess	data -> blk		6310389	0					
ANR	6310514	Identifier	data		6310389	0					
ANR	6310515	Identifier	blk		6310389	1					
ANR	6310516	Identifier	b		6310389	1					
ANR	6310517	ExpressionStatement	data -> flags = 3	1285:8:35647:35662	6310389	1	True				
ANR	6310518	AssignmentExpression	data -> flags = 3		6310389	0		=			
ANR	6310519	PtrMemberAccess	data -> flags		6310389	0					
ANR	6310520	Identifier	data		6310389	0					
ANR	6310521	Identifier	flags		6310389	1					
ANR	6310522	PrimaryExpression	3		6310389	1					
ANR	6310523	ReturnStatement	return 1 ;	1286:8:35672:35680	6310389	2	True				
ANR	6310524	PrimaryExpression	1		6310389	0					
ANR	6310525	ReturnStatement	return 0 ;	1288:4:35692:35700	6310389	5	True				
ANR	6310526	PrimaryExpression	0		6310389	0					
ANR	6310527	ReturnType	static int		6310389	1					
ANR	6310528	Identifier	Memento_containsAddr		6310389	2					
ANR	6310529	ParameterList	"Memento_BlkHeader * b , void * arg"		6310389	3					
ANR	6310530	Parameter	Memento_BlkHeader * b	1268:21:35089:35108	6310389	0	True				
ANR	6310531	ParameterType	Memento_BlkHeader *		6310389	0					
ANR	6310532	Identifier	b		6310389	1					
ANR	6310533	Parameter	void * arg	1268:43:35111:35119	6310389	1	True				
ANR	6310534	ParameterType	void *		6310389	0					
ANR	6310535	Identifier	arg		6310389	1					
ANR	6310536	CFGEntryNode	ENTRY		6310389		True				
ANR	6310537	CFGExitNode	EXIT		6310389		True				
ANR	6310538	Symbol	b -> rawsize		6310389						
ANR	6310539	Symbol	data -> blk		6310389						
ANR	6310540	Symbol	b		6310389						
ANR	6310541	Symbol	data		6310389						
ANR	6310542	Symbol	blkend		6310389						
ANR	6310543	Symbol	data -> addr		6310389						
ANR	6310544	Symbol	arg		6310389						
ANR	6310545	Symbol	Memento_PostSize		6310389						
ANR	6310546	Symbol	* b		6310389						
ANR	6310547	Symbol	* data		6310389						
ANR	6310548	Symbol	data -> flags		6310389						
ANR	6310549	Symbol	MEMBLK_TOBLK		6310389						
ANR	6310550	Function	Memento_find	1291:0:35705:36581							
ANR	6310551	FunctionDef	Memento_find (void * a)		6310550	0					
ANR	6310552	CompoundStatement		1293:0:35731:36581	6310550	0					
ANR	6310553	IdentifierDeclStatement	findBlkData data ;	1294:4:35737:35753	6310550	0	True				
ANR	6310554	IdentifierDecl	data		6310550	0					
ANR	6310555	IdentifierDeclType	findBlkData		6310550	0					
ANR	6310556	Identifier	data		6310550	1					
ANR	6310557	ExpressionStatement	data . addr = a	1296:4:35760:35773	6310550	1	True				
ANR	6310558	AssignmentExpression	data . addr = a		6310550	0		=			
ANR	6310559	MemberAccess	data . addr		6310550	0					
ANR	6310560	Identifier	data		6310550	0					
ANR	6310561	Identifier	addr		6310550	1					
ANR	6310562	Identifier	a		6310550	1					
ANR	6310563	ExpressionStatement	data . blk = NULL	1297:4:35779:35794	6310550	2	True				
ANR	6310564	AssignmentExpression	data . blk = NULL		6310550	0		=			
ANR	6310565	MemberAccess	data . blk		6310550	0					
ANR	6310566	Identifier	data		6310550	0					
ANR	6310567	Identifier	blk		6310550	1					
ANR	6310568	Identifier	NULL		6310550	1					
ANR	6310569	ExpressionStatement	data . flags = 0	1298:4:35800:35814	6310550	3	True				
ANR	6310570	AssignmentExpression	data . flags = 0		6310550	0		=			
ANR	6310571	MemberAccess	data . flags		6310550	0					
ANR	6310572	Identifier	data		6310550	0					
ANR	6310573	Identifier	flags		6310550	1					
ANR	6310574	PrimaryExpression	0		6310550	1					
ANR	6310575	ExpressionStatement	"Memento_appBlocks ( & globals . used , Memento_containsAddr , & data )"	1299:4:35820:35881	6310550	4	True				
ANR	6310576	CallExpression	"Memento_appBlocks ( & globals . used , Memento_containsAddr , & data )"		6310550	0					
ANR	6310577	Callee	Memento_appBlocks		6310550	0					
ANR	6310578	Identifier	Memento_appBlocks		6310550	0					
ANR	6310579	ArgumentList	& globals . used		6310550	1					
ANR	6310580	Argument	& globals . used		6310550	0					
ANR	6310581	UnaryOperationExpression	& globals . used		6310550	0					
ANR	6310582	UnaryOperator	&		6310550	0					
ANR	6310583	MemberAccess	globals . used		6310550	1					
ANR	6310584	Identifier	globals		6310550	0					
ANR	6310585	Identifier	used		6310550	1					
ANR	6310586	Argument	Memento_containsAddr		6310550	1					
ANR	6310587	Identifier	Memento_containsAddr		6310550	0					
ANR	6310588	Argument	& data		6310550	2					
ANR	6310589	UnaryOperationExpression	& data		6310550	0					
ANR	6310590	UnaryOperator	&		6310550	0					
ANR	6310591	Identifier	data		6310550	1					
ANR	6310592	IfStatement	if ( data . blk != NULL )		6310550	5					
ANR	6310593	Condition	data . blk != NULL	1300:8:35891:35906	6310550	0	True				
ANR	6310594	EqualityExpression	data . blk != NULL		6310550	0		!=			
ANR	6310595	MemberAccess	data . blk		6310550	0					
ANR	6310596	Identifier	data		6310550	0					
ANR	6310597	Identifier	blk		6310550	1					
ANR	6310598	Identifier	NULL		6310550	1					
ANR	6310599	CompoundStatement		8:26:177:177	6310550	1					
ANR	6310600	ExpressionStatement	"fprintf ( stderr , ""Address 0x%p is in %sallocated block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"	1301:8:35919:36065	6310550	0	True				
ANR	6310601	CallExpression	"fprintf ( stderr , ""Address 0x%p is in %sallocated block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"		6310550	0					
ANR	6310602	Callee	fprintf		6310550	0					
ANR	6310603	Identifier	fprintf		6310550	0					
ANR	6310604	ArgumentList	stderr		6310550	1					
ANR	6310605	Argument	stderr		6310550	0					
ANR	6310606	Identifier	stderr		6310550	0					
ANR	6310607	Argument	"""Address 0x%p is in %sallocated block """		6310550	1					
ANR	6310608	PrimaryExpression	"""Address 0x%p is in %sallocated block """		6310550	0					
ANR	6310609	Argument	data . addr		6310550	2					
ANR	6310610	MemberAccess	data . addr		6310550	0					
ANR	6310611	Identifier	data		6310550	0					
ANR	6310612	Identifier	addr		6310550	1					
ANR	6310613	Argument	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		6310550	3					
ANR	6310614	ConditionalExpression	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		6310550	0					
ANR	6310615	Condition	data . flags == 1		6310550	0					
ANR	6310616	EqualityExpression	data . flags == 1		6310550	0		==			
ANR	6310617	MemberAccess	data . flags		6310550	0					
ANR	6310618	Identifier	data		6310550	0					
ANR	6310619	Identifier	flags		6310550	1					
ANR	6310620	PrimaryExpression	1		6310550	1					
ANR	6310621	PrimaryExpression	""""""		6310550	1					
ANR	6310622	ConditionalExpression	"data . flags == 2 ? ""preguard of "" : ""postguard of """		6310550	2					
ANR	6310623	Condition	data . flags == 2		6310550	0					
ANR	6310624	EqualityExpression	data . flags == 2		6310550	0		==			
ANR	6310625	MemberAccess	data . flags		6310550	0					
ANR	6310626	Identifier	data		6310550	0					
ANR	6310627	Identifier	flags		6310550	1					
ANR	6310628	PrimaryExpression	2		6310550	1					
ANR	6310629	PrimaryExpression	"""preguard of """		6310550	1					
ANR	6310630	PrimaryExpression	"""postguard of """		6310550	2					
ANR	6310631	ExpressionStatement	"showBlock ( data . blk , ' ' )"	1302:8:36075:36099	6310550	1	True				
ANR	6310632	CallExpression	"showBlock ( data . blk , ' ' )"		6310550	0					
ANR	6310633	Callee	showBlock		6310550	0					
ANR	6310634	Identifier	showBlock		6310550	0					
ANR	6310635	ArgumentList	data . blk		6310550	1					
ANR	6310636	Argument	data . blk		6310550	0					
ANR	6310637	MemberAccess	data . blk		6310550	0					
ANR	6310638	Identifier	data		6310550	0					
ANR	6310639	Identifier	blk		6310550	1					
ANR	6310640	Argument	' '		6310550	1					
ANR	6310641	PrimaryExpression	' '		6310550	0					
ANR	6310642	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	1303:8:36109:36130	6310550	2	True				
ANR	6310643	CallExpression	"fprintf ( stderr , ""\\n"" )"		6310550	0					
ANR	6310644	Callee	fprintf		6310550	0					
ANR	6310645	Identifier	fprintf		6310550	0					
ANR	6310646	ArgumentList	stderr		6310550	1					
ANR	6310647	Argument	stderr		6310550	0					
ANR	6310648	Identifier	stderr		6310550	0					
ANR	6310649	Argument	"""\\n"""		6310550	1					
ANR	6310650	PrimaryExpression	"""\\n"""		6310550	0					
ANR	6310651	ReturnStatement	return data . blk -> sequence ;	1304:8:36140:36165	6310550	3	True				
ANR	6310652	PtrMemberAccess	data . blk -> sequence		6310550	0					
ANR	6310653	MemberAccess	data . blk		6310550	0					
ANR	6310654	Identifier	data		6310550	0					
ANR	6310655	Identifier	blk		6310550	1					
ANR	6310656	Identifier	sequence		6310550	1					
ANR	6310657	ExpressionStatement	data . blk = NULL	1306:4:36177:36192	6310550	6	True				
ANR	6310658	AssignmentExpression	data . blk = NULL		6310550	0		=			
ANR	6310659	MemberAccess	data . blk		6310550	0					
ANR	6310660	Identifier	data		6310550	0					
ANR	6310661	Identifier	blk		6310550	1					
ANR	6310662	Identifier	NULL		6310550	1					
ANR	6310663	ExpressionStatement	data . flags = 0	1307:4:36198:36212	6310550	7	True				
ANR	6310664	AssignmentExpression	data . flags = 0		6310550	0		=			
ANR	6310665	MemberAccess	data . flags		6310550	0					
ANR	6310666	Identifier	data		6310550	0					
ANR	6310667	Identifier	flags		6310550	1					
ANR	6310668	PrimaryExpression	0		6310550	1					
ANR	6310669	ExpressionStatement	"Memento_appBlocks ( & globals . free , Memento_containsAddr , & data )"	1308:4:36218:36279	6310550	8	True				
ANR	6310670	CallExpression	"Memento_appBlocks ( & globals . free , Memento_containsAddr , & data )"		6310550	0					
ANR	6310671	Callee	Memento_appBlocks		6310550	0					
ANR	6310672	Identifier	Memento_appBlocks		6310550	0					
ANR	6310673	ArgumentList	& globals . free		6310550	1					
ANR	6310674	Argument	& globals . free		6310550	0					
ANR	6310675	UnaryOperationExpression	& globals . free		6310550	0					
ANR	6310676	UnaryOperator	&		6310550	0					
ANR	6310677	MemberAccess	globals . free		6310550	1					
ANR	6310678	Identifier	globals		6310550	0					
ANR	6310679	Identifier	free		6310550	1					
ANR	6310680	Argument	Memento_containsAddr		6310550	1					
ANR	6310681	Identifier	Memento_containsAddr		6310550	0					
ANR	6310682	Argument	& data		6310550	2					
ANR	6310683	UnaryOperationExpression	& data		6310550	0					
ANR	6310684	UnaryOperator	&		6310550	0					
ANR	6310685	Identifier	data		6310550	1					
ANR	6310686	IfStatement	if ( data . blk != NULL )		6310550	9					
ANR	6310687	Condition	data . blk != NULL	1309:8:36289:36304	6310550	0	True				
ANR	6310688	EqualityExpression	data . blk != NULL		6310550	0		!=			
ANR	6310689	MemberAccess	data . blk		6310550	0					
ANR	6310690	Identifier	data		6310550	0					
ANR	6310691	Identifier	blk		6310550	1					
ANR	6310692	Identifier	NULL		6310550	1					
ANR	6310693	CompoundStatement		17:26:575:575	6310550	1					
ANR	6310694	ExpressionStatement	"fprintf ( stderr , ""Address 0x%p is in %sfreed block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"	1310:8:36317:36459	6310550	0	True				
ANR	6310695	CallExpression	"fprintf ( stderr , ""Address 0x%p is in %sfreed block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"		6310550	0					
ANR	6310696	Callee	fprintf		6310550	0					
ANR	6310697	Identifier	fprintf		6310550	0					
ANR	6310698	ArgumentList	stderr		6310550	1					
ANR	6310699	Argument	stderr		6310550	0					
ANR	6310700	Identifier	stderr		6310550	0					
ANR	6310701	Argument	"""Address 0x%p is in %sfreed block """		6310550	1					
ANR	6310702	PrimaryExpression	"""Address 0x%p is in %sfreed block """		6310550	0					
ANR	6310703	Argument	data . addr		6310550	2					
ANR	6310704	MemberAccess	data . addr		6310550	0					
ANR	6310705	Identifier	data		6310550	0					
ANR	6310706	Identifier	addr		6310550	1					
ANR	6310707	Argument	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		6310550	3					
ANR	6310708	ConditionalExpression	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		6310550	0					
ANR	6310709	Condition	data . flags == 1		6310550	0					
ANR	6310710	EqualityExpression	data . flags == 1		6310550	0		==			
ANR	6310711	MemberAccess	data . flags		6310550	0					
ANR	6310712	Identifier	data		6310550	0					
ANR	6310713	Identifier	flags		6310550	1					
ANR	6310714	PrimaryExpression	1		6310550	1					
ANR	6310715	PrimaryExpression	""""""		6310550	1					
ANR	6310716	ConditionalExpression	"data . flags == 2 ? ""preguard of "" : ""postguard of """		6310550	2					
ANR	6310717	Condition	data . flags == 2		6310550	0					
ANR	6310718	EqualityExpression	data . flags == 2		6310550	0		==			
ANR	6310719	MemberAccess	data . flags		6310550	0					
ANR	6310720	Identifier	data		6310550	0					
ANR	6310721	Identifier	flags		6310550	1					
ANR	6310722	PrimaryExpression	2		6310550	1					
ANR	6310723	PrimaryExpression	"""preguard of """		6310550	1					
ANR	6310724	PrimaryExpression	"""postguard of """		6310550	2					
ANR	6310725	ExpressionStatement	"showBlock ( data . blk , ' ' )"	1311:8:36469:36493	6310550	1	True				
ANR	6310726	CallExpression	"showBlock ( data . blk , ' ' )"		6310550	0					
ANR	6310727	Callee	showBlock		6310550	0					
ANR	6310728	Identifier	showBlock		6310550	0					
ANR	6310729	ArgumentList	data . blk		6310550	1					
ANR	6310730	Argument	data . blk		6310550	0					
ANR	6310731	MemberAccess	data . blk		6310550	0					
ANR	6310732	Identifier	data		6310550	0					
ANR	6310733	Identifier	blk		6310550	1					
ANR	6310734	Argument	' '		6310550	1					
ANR	6310735	PrimaryExpression	' '		6310550	0					
ANR	6310736	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	1312:8:36503:36524	6310550	2	True				
ANR	6310737	CallExpression	"fprintf ( stderr , ""\\n"" )"		6310550	0					
ANR	6310738	Callee	fprintf		6310550	0					
ANR	6310739	Identifier	fprintf		6310550	0					
ANR	6310740	ArgumentList	stderr		6310550	1					
ANR	6310741	Argument	stderr		6310550	0					
ANR	6310742	Identifier	stderr		6310550	0					
ANR	6310743	Argument	"""\\n"""		6310550	1					
ANR	6310744	PrimaryExpression	"""\\n"""		6310550	0					
ANR	6310745	ReturnStatement	return data . blk -> sequence ;	1313:8:36534:36559	6310550	3	True				
ANR	6310746	PtrMemberAccess	data . blk -> sequence		6310550	0					
ANR	6310747	MemberAccess	data . blk		6310550	0					
ANR	6310748	Identifier	data		6310550	0					
ANR	6310749	Identifier	blk		6310550	1					
ANR	6310750	Identifier	sequence		6310550	1					
ANR	6310751	ReturnStatement	return 0 ;	1315:4:36571:36579	6310550	10	True				
ANR	6310752	PrimaryExpression	0		6310550	0					
ANR	6310753	ReturnType	int		6310550	1					
ANR	6310754	Identifier	Memento_find		6310550	2					
ANR	6310755	ParameterList	void * a		6310550	3					
ANR	6310756	Parameter	void * a	1292:13:35722:35728	6310550	0	True				
ANR	6310757	ParameterType	void *		6310550	0					
ANR	6310758	Identifier	a		6310550	1					
ANR	6310759	CFGEntryNode	ENTRY		6310550		True				
ANR	6310760	CFGExitNode	EXIT		6310550		True				
ANR	6310761	Symbol	a		6310550						
ANR	6310762	Symbol	NULL		6310550						
ANR	6310763	Symbol	data		6310550						
ANR	6310764	Symbol	globals		6310550						
ANR	6310765	Symbol	stderr		6310550						
ANR	6310766	Symbol	data . addr		6310550						
ANR	6310767	Symbol	& data		6310550						
ANR	6310768	Symbol	data . blk		6310550						
ANR	6310769	Symbol	data . flags		6310550						
ANR	6310770	Symbol	& globals		6310550						
ANR	6310771	Symbol	& globals . free		6310550						
ANR	6310772	Symbol	Memento_containsAddr		6310550						
ANR	6310773	Symbol	& globals . used		6310550						
ANR	6310774	Symbol	* data		6310550						
ANR	6310775	Symbol	* data . blk		6310550						
ANR	6310776	Symbol	data . blk -> sequence		6310550						
ANR	6310777	Function	Memento_breakOnFree	1318:0:36584:37631							
ANR	6310778	FunctionDef	Memento_breakOnFree (void * a)		6310777	0					
ANR	6310779	CompoundStatement		1320:0:36618:37631	6310777	0					
ANR	6310780	IdentifierDeclStatement	findBlkData data ;	1321:4:36624:36640	6310777	0	True				
ANR	6310781	IdentifierDecl	data		6310777	0					
ANR	6310782	IdentifierDeclType	findBlkData		6310777	0					
ANR	6310783	Identifier	data		6310777	1					
ANR	6310784	ExpressionStatement	data . addr = a	1323:4:36647:36660	6310777	1	True				
ANR	6310785	AssignmentExpression	data . addr = a		6310777	0		=			
ANR	6310786	MemberAccess	data . addr		6310777	0					
ANR	6310787	Identifier	data		6310777	0					
ANR	6310788	Identifier	addr		6310777	1					
ANR	6310789	Identifier	a		6310777	1					
ANR	6310790	ExpressionStatement	data . blk = NULL	1324:4:36666:36681	6310777	2	True				
ANR	6310791	AssignmentExpression	data . blk = NULL		6310777	0		=			
ANR	6310792	MemberAccess	data . blk		6310777	0					
ANR	6310793	Identifier	data		6310777	0					
ANR	6310794	Identifier	blk		6310777	1					
ANR	6310795	Identifier	NULL		6310777	1					
ANR	6310796	ExpressionStatement	data . flags = 0	1325:4:36687:36701	6310777	3	True				
ANR	6310797	AssignmentExpression	data . flags = 0		6310777	0		=			
ANR	6310798	MemberAccess	data . flags		6310777	0					
ANR	6310799	Identifier	data		6310777	0					
ANR	6310800	Identifier	flags		6310777	1					
ANR	6310801	PrimaryExpression	0		6310777	1					
ANR	6310802	ExpressionStatement	"Memento_appBlocks ( & globals . used , Memento_containsAddr , & data )"	1326:4:36707:36768	6310777	4	True				
ANR	6310803	CallExpression	"Memento_appBlocks ( & globals . used , Memento_containsAddr , & data )"		6310777	0					
ANR	6310804	Callee	Memento_appBlocks		6310777	0					
ANR	6310805	Identifier	Memento_appBlocks		6310777	0					
ANR	6310806	ArgumentList	& globals . used		6310777	1					
ANR	6310807	Argument	& globals . used		6310777	0					
ANR	6310808	UnaryOperationExpression	& globals . used		6310777	0					
ANR	6310809	UnaryOperator	&		6310777	0					
ANR	6310810	MemberAccess	globals . used		6310777	1					
ANR	6310811	Identifier	globals		6310777	0					
ANR	6310812	Identifier	used		6310777	1					
ANR	6310813	Argument	Memento_containsAddr		6310777	1					
ANR	6310814	Identifier	Memento_containsAddr		6310777	0					
ANR	6310815	Argument	& data		6310777	2					
ANR	6310816	UnaryOperationExpression	& data		6310777	0					
ANR	6310817	UnaryOperator	&		6310777	0					
ANR	6310818	Identifier	data		6310777	1					
ANR	6310819	IfStatement	if ( data . blk != NULL )		6310777	5					
ANR	6310820	Condition	data . blk != NULL	1327:8:36778:36793	6310777	0	True				
ANR	6310821	EqualityExpression	data . blk != NULL		6310777	0		!=			
ANR	6310822	MemberAccess	data . blk		6310777	0					
ANR	6310823	Identifier	data		6310777	0					
ANR	6310824	Identifier	blk		6310777	1					
ANR	6310825	Identifier	NULL		6310777	1					
ANR	6310826	CompoundStatement		8:26:177:177	6310777	1					
ANR	6310827	ExpressionStatement	"fprintf ( stderr , ""Will stop when address 0x%p (in %sallocated block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"	1328:8:36806:36981	6310777	0	True				
ANR	6310828	CallExpression	"fprintf ( stderr , ""Will stop when address 0x%p (in %sallocated block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"		6310777	0					
ANR	6310829	Callee	fprintf		6310777	0					
ANR	6310830	Identifier	fprintf		6310777	0					
ANR	6310831	ArgumentList	stderr		6310777	1					
ANR	6310832	Argument	stderr		6310777	0					
ANR	6310833	Identifier	stderr		6310777	0					
ANR	6310834	Argument	"""Will stop when address 0x%p (in %sallocated block """		6310777	1					
ANR	6310835	PrimaryExpression	"""Will stop when address 0x%p (in %sallocated block """		6310777	0					
ANR	6310836	Argument	data . addr		6310777	2					
ANR	6310837	MemberAccess	data . addr		6310777	0					
ANR	6310838	Identifier	data		6310777	0					
ANR	6310839	Identifier	addr		6310777	1					
ANR	6310840	Argument	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		6310777	3					
ANR	6310841	ConditionalExpression	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		6310777	0					
ANR	6310842	Condition	data . flags == 1		6310777	0					
ANR	6310843	EqualityExpression	data . flags == 1		6310777	0		==			
ANR	6310844	MemberAccess	data . flags		6310777	0					
ANR	6310845	Identifier	data		6310777	0					
ANR	6310846	Identifier	flags		6310777	1					
ANR	6310847	PrimaryExpression	1		6310777	1					
ANR	6310848	PrimaryExpression	""""""		6310777	1					
ANR	6310849	ConditionalExpression	"data . flags == 2 ? ""preguard of "" : ""postguard of """		6310777	2					
ANR	6310850	Condition	data . flags == 2		6310777	0					
ANR	6310851	EqualityExpression	data . flags == 2		6310777	0		==			
ANR	6310852	MemberAccess	data . flags		6310777	0					
ANR	6310853	Identifier	data		6310777	0					
ANR	6310854	Identifier	flags		6310777	1					
ANR	6310855	PrimaryExpression	2		6310777	1					
ANR	6310856	PrimaryExpression	"""preguard of """		6310777	1					
ANR	6310857	PrimaryExpression	"""postguard of """		6310777	2					
ANR	6310858	ExpressionStatement	"showBlock ( data . blk , ' ' )"	1330:8:36991:37015	6310777	1	True				
ANR	6310859	CallExpression	"showBlock ( data . blk , ' ' )"		6310777	0					
ANR	6310860	Callee	showBlock		6310777	0					
ANR	6310861	Identifier	showBlock		6310777	0					
ANR	6310862	ArgumentList	data . blk		6310777	1					
ANR	6310863	Argument	data . blk		6310777	0					
ANR	6310864	MemberAccess	data . blk		6310777	0					
ANR	6310865	Identifier	data		6310777	0					
ANR	6310866	Identifier	blk		6310777	1					
ANR	6310867	Argument	' '		6310777	1					
ANR	6310868	PrimaryExpression	' '		6310777	0					
ANR	6310869	ExpressionStatement	"fprintf ( stderr , "") is freed\\n"" )"	1331:8:37025:37056	6310777	2	True				
ANR	6310870	CallExpression	"fprintf ( stderr , "") is freed\\n"" )"		6310777	0					
ANR	6310871	Callee	fprintf		6310777	0					
ANR	6310872	Identifier	fprintf		6310777	0					
ANR	6310873	ArgumentList	stderr		6310777	1					
ANR	6310874	Argument	stderr		6310777	0					
ANR	6310875	Identifier	stderr		6310777	0					
ANR	6310876	Argument	""") is freed\\n"""		6310777	1					
ANR	6310877	PrimaryExpression	""") is freed\\n"""		6310777	0					
ANR	6310878	ExpressionStatement	data . blk -> flags |= Memento_Flag_BreakOnFree	1332:8:37066:37109	6310777	3	True				
ANR	6310879	AssignmentExpression	data . blk -> flags |= Memento_Flag_BreakOnFree		6310777	0		|=			
ANR	6310880	PtrMemberAccess	data . blk -> flags		6310777	0					
ANR	6310881	MemberAccess	data . blk		6310777	0					
ANR	6310882	Identifier	data		6310777	0					
ANR	6310883	Identifier	blk		6310777	1					
ANR	6310884	Identifier	flags		6310777	1					
ANR	6310885	Identifier	Memento_Flag_BreakOnFree		6310777	1					
ANR	6310886	ReturnStatement	return ;	1333:8:37119:37125	6310777	4	True				
ANR	6310887	ExpressionStatement	data . blk = NULL	1335:4:37137:37152	6310777	6	True				
ANR	6310888	AssignmentExpression	data . blk = NULL		6310777	0		=			
ANR	6310889	MemberAccess	data . blk		6310777	0					
ANR	6310890	Identifier	data		6310777	0					
ANR	6310891	Identifier	blk		6310777	1					
ANR	6310892	Identifier	NULL		6310777	1					
ANR	6310893	ExpressionStatement	data . flags = 0	1336:4:37158:37172	6310777	7	True				
ANR	6310894	AssignmentExpression	data . flags = 0		6310777	0		=			
ANR	6310895	MemberAccess	data . flags		6310777	0					
ANR	6310896	Identifier	data		6310777	0					
ANR	6310897	Identifier	flags		6310777	1					
ANR	6310898	PrimaryExpression	0		6310777	1					
ANR	6310899	ExpressionStatement	"Memento_appBlocks ( & globals . free , Memento_containsAddr , & data )"	1337:4:37178:37239	6310777	8	True				
ANR	6310900	CallExpression	"Memento_appBlocks ( & globals . free , Memento_containsAddr , & data )"		6310777	0					
ANR	6310901	Callee	Memento_appBlocks		6310777	0					
ANR	6310902	Identifier	Memento_appBlocks		6310777	0					
ANR	6310903	ArgumentList	& globals . free		6310777	1					
ANR	6310904	Argument	& globals . free		6310777	0					
ANR	6310905	UnaryOperationExpression	& globals . free		6310777	0					
ANR	6310906	UnaryOperator	&		6310777	0					
ANR	6310907	MemberAccess	globals . free		6310777	1					
ANR	6310908	Identifier	globals		6310777	0					
ANR	6310909	Identifier	free		6310777	1					
ANR	6310910	Argument	Memento_containsAddr		6310777	1					
ANR	6310911	Identifier	Memento_containsAddr		6310777	0					
ANR	6310912	Argument	& data		6310777	2					
ANR	6310913	UnaryOperationExpression	& data		6310777	0					
ANR	6310914	UnaryOperator	&		6310777	0					
ANR	6310915	Identifier	data		6310777	1					
ANR	6310916	IfStatement	if ( data . blk != NULL )		6310777	9					
ANR	6310917	Condition	data . blk != NULL	1338:8:37249:37264	6310777	0	True				
ANR	6310918	EqualityExpression	data . blk != NULL		6310777	0		!=			
ANR	6310919	MemberAccess	data . blk		6310777	0					
ANR	6310920	Identifier	data		6310777	0					
ANR	6310921	Identifier	blk		6310777	1					
ANR	6310922	Identifier	NULL		6310777	1					
ANR	6310923	CompoundStatement		19:26:648:648	6310777	1					
ANR	6310924	ExpressionStatement	"fprintf ( stderr , ""Can't stop on free; address 0x%p is in %sfreed block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"	1339:8:37277:37455	6310777	0	True				
ANR	6310925	CallExpression	"fprintf ( stderr , ""Can't stop on free; address 0x%p is in %sfreed block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"		6310777	0					
ANR	6310926	Callee	fprintf		6310777	0					
ANR	6310927	Identifier	fprintf		6310777	0					
ANR	6310928	ArgumentList	stderr		6310777	1					
ANR	6310929	Argument	stderr		6310777	0					
ANR	6310930	Identifier	stderr		6310777	0					
ANR	6310931	Argument	"""Can't stop on free; address 0x%p is in %sfreed block """		6310777	1					
ANR	6310932	PrimaryExpression	"""Can't stop on free; address 0x%p is in %sfreed block """		6310777	0					
ANR	6310933	Argument	data . addr		6310777	2					
ANR	6310934	MemberAccess	data . addr		6310777	0					
ANR	6310935	Identifier	data		6310777	0					
ANR	6310936	Identifier	addr		6310777	1					
ANR	6310937	Argument	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		6310777	3					
ANR	6310938	ConditionalExpression	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		6310777	0					
ANR	6310939	Condition	data . flags == 1		6310777	0					
ANR	6310940	EqualityExpression	data . flags == 1		6310777	0		==			
ANR	6310941	MemberAccess	data . flags		6310777	0					
ANR	6310942	Identifier	data		6310777	0					
ANR	6310943	Identifier	flags		6310777	1					
ANR	6310944	PrimaryExpression	1		6310777	1					
ANR	6310945	PrimaryExpression	""""""		6310777	1					
ANR	6310946	ConditionalExpression	"data . flags == 2 ? ""preguard of "" : ""postguard of """		6310777	2					
ANR	6310947	Condition	data . flags == 2		6310777	0					
ANR	6310948	EqualityExpression	data . flags == 2		6310777	0		==			
ANR	6310949	MemberAccess	data . flags		6310777	0					
ANR	6310950	Identifier	data		6310777	0					
ANR	6310951	Identifier	flags		6310777	1					
ANR	6310952	PrimaryExpression	2		6310777	1					
ANR	6310953	PrimaryExpression	"""preguard of """		6310777	1					
ANR	6310954	PrimaryExpression	"""postguard of """		6310777	2					
ANR	6310955	ExpressionStatement	"showBlock ( data . blk , ' ' )"	1341:8:37465:37489	6310777	1	True				
ANR	6310956	CallExpression	"showBlock ( data . blk , ' ' )"		6310777	0					
ANR	6310957	Callee	showBlock		6310777	0					
ANR	6310958	Identifier	showBlock		6310777	0					
ANR	6310959	ArgumentList	data . blk		6310777	1					
ANR	6310960	Argument	data . blk		6310777	0					
ANR	6310961	MemberAccess	data . blk		6310777	0					
ANR	6310962	Identifier	data		6310777	0					
ANR	6310963	Identifier	blk		6310777	1					
ANR	6310964	Argument	' '		6310777	1					
ANR	6310965	PrimaryExpression	' '		6310777	0					
ANR	6310966	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	1342:8:37499:37520	6310777	2	True				
ANR	6310967	CallExpression	"fprintf ( stderr , ""\\n"" )"		6310777	0					
ANR	6310968	Callee	fprintf		6310777	0					
ANR	6310969	Identifier	fprintf		6310777	0					
ANR	6310970	ArgumentList	stderr		6310777	1					
ANR	6310971	Argument	stderr		6310777	0					
ANR	6310972	Identifier	stderr		6310777	0					
ANR	6310973	Argument	"""\\n"""		6310777	1					
ANR	6310974	PrimaryExpression	"""\\n"""		6310777	0					
ANR	6310975	ReturnStatement	return ;	1343:8:37530:37536	6310777	3	True				
ANR	6310976	ExpressionStatement	"fprintf ( stderr , ""Can't stop on free; address 0x%p is not in a known block.\\n"" , a )"	1345:4:37548:37629	6310777	10	True				
ANR	6310977	CallExpression	"fprintf ( stderr , ""Can't stop on free; address 0x%p is not in a known block.\\n"" , a )"		6310777	0					
ANR	6310978	Callee	fprintf		6310777	0					
ANR	6310979	Identifier	fprintf		6310777	0					
ANR	6310980	ArgumentList	stderr		6310777	1					
ANR	6310981	Argument	stderr		6310777	0					
ANR	6310982	Identifier	stderr		6310777	0					
ANR	6310983	Argument	"""Can't stop on free; address 0x%p is not in a known block.\\n"""		6310777	1					
ANR	6310984	PrimaryExpression	"""Can't stop on free; address 0x%p is not in a known block.\\n"""		6310777	0					
ANR	6310985	Argument	a		6310777	2					
ANR	6310986	Identifier	a		6310777	0					
ANR	6310987	ReturnType	void		6310777	1					
ANR	6310988	Identifier	Memento_breakOnFree		6310777	2					
ANR	6310989	ParameterList	void * a		6310777	3					
ANR	6310990	Parameter	void * a	1319:20:36609:36615	6310777	0	True				
ANR	6310991	ParameterType	void *		6310777	0					
ANR	6310992	Identifier	a		6310777	1					
ANR	6310993	CFGEntryNode	ENTRY		6310777		True				
ANR	6310994	CFGExitNode	EXIT		6310777		True				
ANR	6310995	Symbol	a		6310777						
ANR	6310996	Symbol	NULL		6310777						
ANR	6310997	Symbol	data		6310777						
ANR	6310998	Symbol	data . blk -> flags		6310777						
ANR	6310999	Symbol	globals		6310777						
ANR	6311000	Symbol	stderr		6310777						
ANR	6311001	Symbol	Memento_Flag_BreakOnFree		6310777						
ANR	6311002	Symbol	data . addr		6310777						
ANR	6311003	Symbol	& data		6310777						
ANR	6311004	Symbol	data . blk		6310777						
ANR	6311005	Symbol	data . flags		6310777						
ANR	6311006	Symbol	& globals		6310777						
ANR	6311007	Symbol	& globals . free		6310777						
ANR	6311008	Symbol	Memento_containsAddr		6310777						
ANR	6311009	Symbol	& globals . used		6310777						
ANR	6311010	Symbol	* data		6310777						
ANR	6311011	Symbol	* data . blk		6310777						
ANR	6311012	Function	Memento_breakOnRealloc	1348:0:37634:38745							
ANR	6311013	FunctionDef	Memento_breakOnRealloc (void * a)		6311012	0					
ANR	6311014	CompoundStatement		1350:0:37671:38745	6311012	0					
ANR	6311015	IdentifierDeclStatement	findBlkData data ;	1351:4:37677:37693	6311012	0	True				
ANR	6311016	IdentifierDecl	data		6311012	0					
ANR	6311017	IdentifierDeclType	findBlkData		6311012	0					
ANR	6311018	Identifier	data		6311012	1					
ANR	6311019	ExpressionStatement	data . addr = a	1353:4:37700:37713	6311012	1	True				
ANR	6311020	AssignmentExpression	data . addr = a		6311012	0		=			
ANR	6311021	MemberAccess	data . addr		6311012	0					
ANR	6311022	Identifier	data		6311012	0					
ANR	6311023	Identifier	addr		6311012	1					
ANR	6311024	Identifier	a		6311012	1					
ANR	6311025	ExpressionStatement	data . blk = NULL	1354:4:37719:37734	6311012	2	True				
ANR	6311026	AssignmentExpression	data . blk = NULL		6311012	0		=			
ANR	6311027	MemberAccess	data . blk		6311012	0					
ANR	6311028	Identifier	data		6311012	0					
ANR	6311029	Identifier	blk		6311012	1					
ANR	6311030	Identifier	NULL		6311012	1					
ANR	6311031	ExpressionStatement	data . flags = 0	1355:4:37740:37754	6311012	3	True				
ANR	6311032	AssignmentExpression	data . flags = 0		6311012	0		=			
ANR	6311033	MemberAccess	data . flags		6311012	0					
ANR	6311034	Identifier	data		6311012	0					
ANR	6311035	Identifier	flags		6311012	1					
ANR	6311036	PrimaryExpression	0		6311012	1					
ANR	6311037	ExpressionStatement	"Memento_appBlocks ( & globals . used , Memento_containsAddr , & data )"	1356:4:37760:37821	6311012	4	True				
ANR	6311038	CallExpression	"Memento_appBlocks ( & globals . used , Memento_containsAddr , & data )"		6311012	0					
ANR	6311039	Callee	Memento_appBlocks		6311012	0					
ANR	6311040	Identifier	Memento_appBlocks		6311012	0					
ANR	6311041	ArgumentList	& globals . used		6311012	1					
ANR	6311042	Argument	& globals . used		6311012	0					
ANR	6311043	UnaryOperationExpression	& globals . used		6311012	0					
ANR	6311044	UnaryOperator	&		6311012	0					
ANR	6311045	MemberAccess	globals . used		6311012	1					
ANR	6311046	Identifier	globals		6311012	0					
ANR	6311047	Identifier	used		6311012	1					
ANR	6311048	Argument	Memento_containsAddr		6311012	1					
ANR	6311049	Identifier	Memento_containsAddr		6311012	0					
ANR	6311050	Argument	& data		6311012	2					
ANR	6311051	UnaryOperationExpression	& data		6311012	0					
ANR	6311052	UnaryOperator	&		6311012	0					
ANR	6311053	Identifier	data		6311012	1					
ANR	6311054	IfStatement	if ( data . blk != NULL )		6311012	5					
ANR	6311055	Condition	data . blk != NULL	1357:8:37831:37846	6311012	0	True				
ANR	6311056	EqualityExpression	data . blk != NULL		6311012	0		!=			
ANR	6311057	MemberAccess	data . blk		6311012	0					
ANR	6311058	Identifier	data		6311012	0					
ANR	6311059	Identifier	blk		6311012	1					
ANR	6311060	Identifier	NULL		6311012	1					
ANR	6311061	CompoundStatement		8:26:177:177	6311012	1					
ANR	6311062	ExpressionStatement	"fprintf ( stderr , ""Will stop when address 0x%p (in %sallocated block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"	1358:8:37859:38034	6311012	0	True				
ANR	6311063	CallExpression	"fprintf ( stderr , ""Will stop when address 0x%p (in %sallocated block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"		6311012	0					
ANR	6311064	Callee	fprintf		6311012	0					
ANR	6311065	Identifier	fprintf		6311012	0					
ANR	6311066	ArgumentList	stderr		6311012	1					
ANR	6311067	Argument	stderr		6311012	0					
ANR	6311068	Identifier	stderr		6311012	0					
ANR	6311069	Argument	"""Will stop when address 0x%p (in %sallocated block """		6311012	1					
ANR	6311070	PrimaryExpression	"""Will stop when address 0x%p (in %sallocated block """		6311012	0					
ANR	6311071	Argument	data . addr		6311012	2					
ANR	6311072	MemberAccess	data . addr		6311012	0					
ANR	6311073	Identifier	data		6311012	0					
ANR	6311074	Identifier	addr		6311012	1					
ANR	6311075	Argument	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		6311012	3					
ANR	6311076	ConditionalExpression	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		6311012	0					
ANR	6311077	Condition	data . flags == 1		6311012	0					
ANR	6311078	EqualityExpression	data . flags == 1		6311012	0		==			
ANR	6311079	MemberAccess	data . flags		6311012	0					
ANR	6311080	Identifier	data		6311012	0					
ANR	6311081	Identifier	flags		6311012	1					
ANR	6311082	PrimaryExpression	1		6311012	1					
ANR	6311083	PrimaryExpression	""""""		6311012	1					
ANR	6311084	ConditionalExpression	"data . flags == 2 ? ""preguard of "" : ""postguard of """		6311012	2					
ANR	6311085	Condition	data . flags == 2		6311012	0					
ANR	6311086	EqualityExpression	data . flags == 2		6311012	0		==			
ANR	6311087	MemberAccess	data . flags		6311012	0					
ANR	6311088	Identifier	data		6311012	0					
ANR	6311089	Identifier	flags		6311012	1					
ANR	6311090	PrimaryExpression	2		6311012	1					
ANR	6311091	PrimaryExpression	"""preguard of """		6311012	1					
ANR	6311092	PrimaryExpression	"""postguard of """		6311012	2					
ANR	6311093	ExpressionStatement	"showBlock ( data . blk , ' ' )"	1360:8:38044:38068	6311012	1	True				
ANR	6311094	CallExpression	"showBlock ( data . blk , ' ' )"		6311012	0					
ANR	6311095	Callee	showBlock		6311012	0					
ANR	6311096	Identifier	showBlock		6311012	0					
ANR	6311097	ArgumentList	data . blk		6311012	1					
ANR	6311098	Argument	data . blk		6311012	0					
ANR	6311099	MemberAccess	data . blk		6311012	0					
ANR	6311100	Identifier	data		6311012	0					
ANR	6311101	Identifier	blk		6311012	1					
ANR	6311102	Argument	' '		6311012	1					
ANR	6311103	PrimaryExpression	' '		6311012	0					
ANR	6311104	ExpressionStatement	"fprintf ( stderr , "") is freed (or realloced)\\n"" )"	1361:8:38078:38124	6311012	2	True				
ANR	6311105	CallExpression	"fprintf ( stderr , "") is freed (or realloced)\\n"" )"		6311012	0					
ANR	6311106	Callee	fprintf		6311012	0					
ANR	6311107	Identifier	fprintf		6311012	0					
ANR	6311108	ArgumentList	stderr		6311012	1					
ANR	6311109	Argument	stderr		6311012	0					
ANR	6311110	Identifier	stderr		6311012	0					
ANR	6311111	Argument	""") is freed (or realloced)\\n"""		6311012	1					
ANR	6311112	PrimaryExpression	""") is freed (or realloced)\\n"""		6311012	0					
ANR	6311113	ExpressionStatement	data . blk -> flags |= Memento_Flag_BreakOnFree | Memento_Flag_BreakOnRealloc	1362:8:38134:38207	6311012	3	True				
ANR	6311114	AssignmentExpression	data . blk -> flags |= Memento_Flag_BreakOnFree | Memento_Flag_BreakOnRealloc		6311012	0		|=			
ANR	6311115	PtrMemberAccess	data . blk -> flags		6311012	0					
ANR	6311116	MemberAccess	data . blk		6311012	0					
ANR	6311117	Identifier	data		6311012	0					
ANR	6311118	Identifier	blk		6311012	1					
ANR	6311119	Identifier	flags		6311012	1					
ANR	6311120	InclusiveOrExpression	Memento_Flag_BreakOnFree | Memento_Flag_BreakOnRealloc		6311012	1		|			
ANR	6311121	Identifier	Memento_Flag_BreakOnFree		6311012	0					
ANR	6311122	Identifier	Memento_Flag_BreakOnRealloc		6311012	1					
ANR	6311123	ReturnStatement	return ;	1363:8:38217:38223	6311012	4	True				
ANR	6311124	ExpressionStatement	data . blk = NULL	1365:4:38235:38250	6311012	6	True				
ANR	6311125	AssignmentExpression	data . blk = NULL		6311012	0		=			
ANR	6311126	MemberAccess	data . blk		6311012	0					
ANR	6311127	Identifier	data		6311012	0					
ANR	6311128	Identifier	blk		6311012	1					
ANR	6311129	Identifier	NULL		6311012	1					
ANR	6311130	ExpressionStatement	data . flags = 0	1366:4:38256:38270	6311012	7	True				
ANR	6311131	AssignmentExpression	data . flags = 0		6311012	0		=			
ANR	6311132	MemberAccess	data . flags		6311012	0					
ANR	6311133	Identifier	data		6311012	0					
ANR	6311134	Identifier	flags		6311012	1					
ANR	6311135	PrimaryExpression	0		6311012	1					
ANR	6311136	ExpressionStatement	"Memento_appBlocks ( & globals . free , Memento_containsAddr , & data )"	1367:4:38276:38337	6311012	8	True				
ANR	6311137	CallExpression	"Memento_appBlocks ( & globals . free , Memento_containsAddr , & data )"		6311012	0					
ANR	6311138	Callee	Memento_appBlocks		6311012	0					
ANR	6311139	Identifier	Memento_appBlocks		6311012	0					
ANR	6311140	ArgumentList	& globals . free		6311012	1					
ANR	6311141	Argument	& globals . free		6311012	0					
ANR	6311142	UnaryOperationExpression	& globals . free		6311012	0					
ANR	6311143	UnaryOperator	&		6311012	0					
ANR	6311144	MemberAccess	globals . free		6311012	1					
ANR	6311145	Identifier	globals		6311012	0					
ANR	6311146	Identifier	free		6311012	1					
ANR	6311147	Argument	Memento_containsAddr		6311012	1					
ANR	6311148	Identifier	Memento_containsAddr		6311012	0					
ANR	6311149	Argument	& data		6311012	2					
ANR	6311150	UnaryOperationExpression	& data		6311012	0					
ANR	6311151	UnaryOperator	&		6311012	0					
ANR	6311152	Identifier	data		6311012	1					
ANR	6311153	IfStatement	if ( data . blk != NULL )		6311012	9					
ANR	6311154	Condition	data . blk != NULL	1368:8:38347:38362	6311012	0	True				
ANR	6311155	EqualityExpression	data . blk != NULL		6311012	0		!=			
ANR	6311156	MemberAccess	data . blk		6311012	0					
ANR	6311157	Identifier	data		6311012	0					
ANR	6311158	Identifier	blk		6311012	1					
ANR	6311159	Identifier	NULL		6311012	1					
ANR	6311160	CompoundStatement		19:26:693:693	6311012	1					
ANR	6311161	ExpressionStatement	"fprintf ( stderr , ""Can't stop on free/realloc; address 0x%p is in %sfreed block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"	1369:8:38375:38561	6311012	0	True				
ANR	6311162	CallExpression	"fprintf ( stderr , ""Can't stop on free/realloc; address 0x%p is in %sfreed block "" , data . addr , ( data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" ) ) )"		6311012	0					
ANR	6311163	Callee	fprintf		6311012	0					
ANR	6311164	Identifier	fprintf		6311012	0					
ANR	6311165	ArgumentList	stderr		6311012	1					
ANR	6311166	Argument	stderr		6311012	0					
ANR	6311167	Identifier	stderr		6311012	0					
ANR	6311168	Argument	"""Can't stop on free/realloc; address 0x%p is in %sfreed block """		6311012	1					
ANR	6311169	PrimaryExpression	"""Can't stop on free/realloc; address 0x%p is in %sfreed block """		6311012	0					
ANR	6311170	Argument	data . addr		6311012	2					
ANR	6311171	MemberAccess	data . addr		6311012	0					
ANR	6311172	Identifier	data		6311012	0					
ANR	6311173	Identifier	addr		6311012	1					
ANR	6311174	Argument	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		6311012	3					
ANR	6311175	ConditionalExpression	"data . flags == 1 ? """" : ( data . flags == 2 ? ""preguard of "" : ""postguard of "" )"		6311012	0					
ANR	6311176	Condition	data . flags == 1		6311012	0					
ANR	6311177	EqualityExpression	data . flags == 1		6311012	0		==			
ANR	6311178	MemberAccess	data . flags		6311012	0					
ANR	6311179	Identifier	data		6311012	0					
ANR	6311180	Identifier	flags		6311012	1					
ANR	6311181	PrimaryExpression	1		6311012	1					
ANR	6311182	PrimaryExpression	""""""		6311012	1					
ANR	6311183	ConditionalExpression	"data . flags == 2 ? ""preguard of "" : ""postguard of """		6311012	2					
ANR	6311184	Condition	data . flags == 2		6311012	0					
ANR	6311185	EqualityExpression	data . flags == 2		6311012	0		==			
ANR	6311186	MemberAccess	data . flags		6311012	0					
ANR	6311187	Identifier	data		6311012	0					
ANR	6311188	Identifier	flags		6311012	1					
ANR	6311189	PrimaryExpression	2		6311012	1					
ANR	6311190	PrimaryExpression	"""preguard of """		6311012	1					
ANR	6311191	PrimaryExpression	"""postguard of """		6311012	2					
ANR	6311192	ExpressionStatement	"showBlock ( data . blk , ' ' )"	1371:8:38571:38595	6311012	1	True				
ANR	6311193	CallExpression	"showBlock ( data . blk , ' ' )"		6311012	0					
ANR	6311194	Callee	showBlock		6311012	0					
ANR	6311195	Identifier	showBlock		6311012	0					
ANR	6311196	ArgumentList	data . blk		6311012	1					
ANR	6311197	Argument	data . blk		6311012	0					
ANR	6311198	MemberAccess	data . blk		6311012	0					
ANR	6311199	Identifier	data		6311012	0					
ANR	6311200	Identifier	blk		6311012	1					
ANR	6311201	Argument	' '		6311012	1					
ANR	6311202	PrimaryExpression	' '		6311012	0					
ANR	6311203	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	1372:8:38605:38626	6311012	2	True				
ANR	6311204	CallExpression	"fprintf ( stderr , ""\\n"" )"		6311012	0					
ANR	6311205	Callee	fprintf		6311012	0					
ANR	6311206	Identifier	fprintf		6311012	0					
ANR	6311207	ArgumentList	stderr		6311012	1					
ANR	6311208	Argument	stderr		6311012	0					
ANR	6311209	Identifier	stderr		6311012	0					
ANR	6311210	Argument	"""\\n"""		6311012	1					
ANR	6311211	PrimaryExpression	"""\\n"""		6311012	0					
ANR	6311212	ReturnStatement	return ;	1373:8:38636:38642	6311012	3	True				
ANR	6311213	ExpressionStatement	"fprintf ( stderr , ""Can't stop on free/realloc; address 0x%p is not in a known block.\\n"" , a )"	1375:4:38654:38743	6311012	10	True				
ANR	6311214	CallExpression	"fprintf ( stderr , ""Can't stop on free/realloc; address 0x%p is not in a known block.\\n"" , a )"		6311012	0					
ANR	6311215	Callee	fprintf		6311012	0					
ANR	6311216	Identifier	fprintf		6311012	0					
ANR	6311217	ArgumentList	stderr		6311012	1					
ANR	6311218	Argument	stderr		6311012	0					
ANR	6311219	Identifier	stderr		6311012	0					
ANR	6311220	Argument	"""Can't stop on free/realloc; address 0x%p is not in a known block.\\n"""		6311012	1					
ANR	6311221	PrimaryExpression	"""Can't stop on free/realloc; address 0x%p is not in a known block.\\n"""		6311012	0					
ANR	6311222	Argument	a		6311012	2					
ANR	6311223	Identifier	a		6311012	0					
ANR	6311224	ReturnType	void		6311012	1					
ANR	6311225	Identifier	Memento_breakOnRealloc		6311012	2					
ANR	6311226	ParameterList	void * a		6311012	3					
ANR	6311227	Parameter	void * a	1349:23:37662:37668	6311012	0	True				
ANR	6311228	ParameterType	void *		6311012	0					
ANR	6311229	Identifier	a		6311012	1					
ANR	6311230	CFGEntryNode	ENTRY		6311012		True				
ANR	6311231	CFGExitNode	EXIT		6311012		True				
ANR	6311232	Symbol	a		6311012						
ANR	6311233	Symbol	NULL		6311012						
ANR	6311234	Symbol	data		6311012						
ANR	6311235	Symbol	data . blk -> flags		6311012						
ANR	6311236	Symbol	globals		6311012						
ANR	6311237	Symbol	stderr		6311012						
ANR	6311238	Symbol	Memento_Flag_BreakOnFree		6311012						
ANR	6311239	Symbol	data . addr		6311012						
ANR	6311240	Symbol	& data		6311012						
ANR	6311241	Symbol	data . blk		6311012						
ANR	6311242	Symbol	data . flags		6311012						
ANR	6311243	Symbol	& globals		6311012						
ANR	6311244	Symbol	& globals . free		6311012						
ANR	6311245	Symbol	Memento_containsAddr		6311012						
ANR	6311246	Symbol	& globals . used		6311012						
ANR	6311247	Symbol	* data		6311012						
ANR	6311248	Symbol	Memento_Flag_BreakOnRealloc		6311012						
ANR	6311249	Symbol	* data . blk		6311012						
ANR	6311250	Function	Memento_failAt	1378:0:38748:38917							
ANR	6311251	FunctionDef	Memento_failAt (int i)		6311250	0					
ANR	6311252	CompoundStatement		1380:0:38774:38917	6311250	0					
ANR	6311253	ExpressionStatement	globals . failAt = i	1381:4:38780:38798	6311250	0	True				
ANR	6311254	AssignmentExpression	globals . failAt = i		6311250	0		=			
ANR	6311255	MemberAccess	globals . failAt		6311250	0					
ANR	6311256	Identifier	globals		6311250	0					
ANR	6311257	Identifier	failAt		6311250	1					
ANR	6311258	Identifier	i		6311250	1					
ANR	6311259	IfStatement	if ( ( globals . sequence > globals . failAt ) && ( globals . failing != 0 ) )		6311250	1					
ANR	6311260	Condition	( globals . sequence > globals . failAt ) && ( globals . failing != 0 )	1382:8:38808:38868	6311250	0	True				
ANR	6311261	AndExpression	( globals . sequence > globals . failAt ) && ( globals . failing != 0 )		6311250	0		&&			
ANR	6311262	RelationalExpression	globals . sequence > globals . failAt		6311250	0		>			
ANR	6311263	MemberAccess	globals . sequence		6311250	0					
ANR	6311264	Identifier	globals		6311250	0					
ANR	6311265	Identifier	sequence		6311250	1					
ANR	6311266	MemberAccess	globals . failAt		6311250	1					
ANR	6311267	Identifier	globals		6311250	0					
ANR	6311268	Identifier	failAt		6311250	1					
ANR	6311269	EqualityExpression	globals . failing != 0		6311250	1		!=			
ANR	6311270	MemberAccess	globals . failing		6311250	0					
ANR	6311271	Identifier	globals		6311250	0					
ANR	6311272	Identifier	failing		6311250	1					
ANR	6311273	PrimaryExpression	0		6311250	1					
ANR	6311274	ExpressionStatement	Memento_startFailing ( )	1383:8:38879:38901	6311250	1	True				
ANR	6311275	CallExpression	Memento_startFailing ( )		6311250	0					
ANR	6311276	Callee	Memento_startFailing		6311250	0					
ANR	6311277	Identifier	Memento_startFailing		6311250	0					
ANR	6311278	ArgumentList			6311250	1					
ANR	6311279	ReturnStatement	return i ;	1384:4:38907:38915	6311250	2	True				
ANR	6311280	Identifier	i		6311250	0					
ANR	6311281	ReturnType	int		6311250	1					
ANR	6311282	Identifier	Memento_failAt		6311250	2					
ANR	6311283	ParameterList	int i		6311250	3					
ANR	6311284	Parameter	int i	1379:15:38767:38771	6311250	0	True				
ANR	6311285	ParameterType	int		6311250	0					
ANR	6311286	Identifier	i		6311250	1					
ANR	6311287	CFGEntryNode	ENTRY		6311250		True				
ANR	6311288	CFGExitNode	EXIT		6311250		True				
ANR	6311289	Symbol	globals		6311250						
ANR	6311290	Symbol	i		6311250						
ANR	6311291	Symbol	globals . failing		6311250						
ANR	6311292	Symbol	globals . failAt		6311250						
ANR	6311293	Symbol	globals . sequence		6311250						
ANR	6311294	Function	Memento_setMax	1387:0:38920:39001							
ANR	6311295	FunctionDef	Memento_setMax (size_t max)		6311294	0					
ANR	6311296	CompoundStatement		1389:0:38954:39001	6311294	0					
ANR	6311297	ExpressionStatement	globals . maxMemory = max	1390:4:38960:38983	6311294	0	True				
ANR	6311298	AssignmentExpression	globals . maxMemory = max		6311294	0		=			
ANR	6311299	MemberAccess	globals . maxMemory		6311294	0					
ANR	6311300	Identifier	globals		6311294	0					
ANR	6311301	Identifier	maxMemory		6311294	1					
ANR	6311302	Identifier	max		6311294	1					
ANR	6311303	ReturnStatement	return max ;	1391:4:38989:38999	6311294	1	True				
ANR	6311304	Identifier	max		6311294	0					
ANR	6311305	ReturnType	size_t		6311294	1					
ANR	6311306	Identifier	Memento_setMax		6311294	2					
ANR	6311307	ParameterList	size_t max		6311294	3					
ANR	6311308	Parameter	size_t max	1388:15:38942:38951	6311294	0	True				
ANR	6311309	ParameterType	size_t		6311294	0					
ANR	6311310	Identifier	max		6311294	1					
ANR	6311311	CFGEntryNode	ENTRY		6311294		True				
ANR	6311312	CFGExitNode	EXIT		6311294		True				
ANR	6311313	Symbol	max		6311294						
ANR	6311314	Symbol	globals		6311294						
ANR	6311315	Symbol	globals . maxMemory		6311294						
ANR	6311316	Function	Memento_breakpoint	1397:0:39072:39106							
ANR	6311317	FunctionDef	Memento_breakpoint ()		6311316	0					
ANR	6311318	CompoundStatement		1398:0:39104:39106	6311316	0					
ANR	6311319	ReturnType	void		6311316	1					
ANR	6311320	Identifier	( Memento_breakpoint )		6311316	2					
ANR	6311321	Identifier	Memento_breakpoint		6311316	3					
ANR	6311322	ParameterList			6311316	4					
ANR	6311323	CFGEntryNode	ENTRY		6311316		True				
ANR	6311324	CFGExitNode	EXIT		6311316		True				
ANR	6311325	Function	Memento_checkBlock	1401:0:39109:39159							
ANR	6311326	FunctionDef	Memento_checkBlock (void * b)		6311325	0					
ANR	6311327	CompoundStatement		1402:0:39143:39159	6311325	0					
ANR	6311328	ReturnStatement	return 0 ;	1403:4:39149:39157	6311325	0	True				
ANR	6311329	PrimaryExpression	0		6311325	0					
ANR	6311330	ReturnType	int		6311325	1					
ANR	6311331	Identifier	( Memento_checkBlock )		6311325	2					
ANR	6311332	Identifier	Memento_checkBlock		6311325	3					
ANR	6311333	ParameterList	void * b		6311325	4					
ANR	6311334	Parameter	void * b	1401:25:39134:39140	6311325	0	True				
ANR	6311335	ParameterType	void *		6311325	0					
ANR	6311336	Identifier	b		6311325	1					
ANR	6311337	CFGEntryNode	ENTRY		6311325		True				
ANR	6311338	CFGExitNode	EXIT		6311325		True				
ANR	6311339	Symbol	b		6311325						
ANR	6311340	Function	Memento_checkAllMemory	1406:0:39162:39213							
ANR	6311341	FunctionDef	Memento_checkAllMemory ()		6311340	0					
ANR	6311342	CompoundStatement		1407:0:39197:39213	6311340	0					
ANR	6311343	ReturnStatement	return 0 ;	1408:4:39203:39211	6311340	0	True				
ANR	6311344	PrimaryExpression	0		6311340	0					
ANR	6311345	ReturnType	int		6311340	1					
ANR	6311346	Identifier	( Memento_checkAllMemory )		6311340	2					
ANR	6311347	Identifier	Memento_checkAllMemory		6311340	3					
ANR	6311348	ParameterList			6311340	4					
ANR	6311349	CFGEntryNode	ENTRY		6311340		True				
ANR	6311350	CFGExitNode	EXIT		6311340		True				
ANR	6311351	Function	Memento_check	1411:0:39216:39258							
ANR	6311352	FunctionDef	Memento_check ()		6311351	0					
ANR	6311353	CompoundStatement		1412:0:39242:39258	6311351	0					
ANR	6311354	ReturnStatement	return 0 ;	1413:4:39248:39256	6311351	0	True				
ANR	6311355	PrimaryExpression	0		6311351	0					
ANR	6311356	ReturnType	int		6311351	1					
ANR	6311357	Identifier	( Memento_check )		6311351	2					
ANR	6311358	Identifier	Memento_check		6311351	3					
ANR	6311359	ParameterList			6311351	4					
ANR	6311360	CFGEntryNode	ENTRY		6311351		True				
ANR	6311361	CFGExitNode	EXIT		6311351		True				
ANR	6311362	Function	Memento_setParanoia	1416:0:39261:39310							
ANR	6311363	FunctionDef	Memento_setParanoia (int i)		6311362	0					
ANR	6311364	CompoundStatement		1417:0:39294:39310	6311362	0					
ANR	6311365	ReturnStatement	return 0 ;	1418:4:39300:39308	6311362	0	True				
ANR	6311366	PrimaryExpression	0		6311362	0					
ANR	6311367	ReturnType	int		6311362	1					
ANR	6311368	Identifier	( Memento_setParanoia )		6311362	2					
ANR	6311369	Identifier	Memento_setParanoia		6311362	3					
ANR	6311370	ParameterList	int i		6311362	4					
ANR	6311371	Parameter	int i	1416:26:39287:39291	6311362	0	True				
ANR	6311372	ParameterType	int		6311362	0					
ANR	6311373	Identifier	i		6311362	1					
ANR	6311374	CFGEntryNode	ENTRY		6311362		True				
ANR	6311375	CFGExitNode	EXIT		6311362		True				
ANR	6311376	Symbol	i		6311362						
ANR	6311377	Function	Memento_paranoidAt	1421:0:39313:39361							
ANR	6311378	FunctionDef	Memento_paranoidAt (int i)		6311377	0					
ANR	6311379	CompoundStatement		1422:0:39345:39361	6311377	0					
ANR	6311380	ReturnStatement	return 0 ;	1423:4:39351:39359	6311377	0	True				
ANR	6311381	PrimaryExpression	0		6311377	0					
ANR	6311382	ReturnType	int		6311377	1					
ANR	6311383	Identifier	( Memento_paranoidAt )		6311377	2					
ANR	6311384	Identifier	Memento_paranoidAt		6311377	3					
ANR	6311385	ParameterList	int i		6311377	4					
ANR	6311386	Parameter	int i	1421:25:39338:39342	6311377	0	True				
ANR	6311387	ParameterType	int		6311377	0					
ANR	6311388	Identifier	i		6311377	1					
ANR	6311389	CFGEntryNode	ENTRY		6311377		True				
ANR	6311390	CFGExitNode	EXIT		6311377		True				
ANR	6311391	Symbol	i		6311377						
ANR	6311392	Function	Memento_breakAt	1426:0:39364:39409							
ANR	6311393	FunctionDef	Memento_breakAt (int i)		6311392	0					
ANR	6311394	CompoundStatement		1427:0:39393:39409	6311392	0					
ANR	6311395	ReturnStatement	return 0 ;	1428:4:39399:39407	6311392	0	True				
ANR	6311396	PrimaryExpression	0		6311392	0					
ANR	6311397	ReturnType	int		6311392	1					
ANR	6311398	Identifier	( Memento_breakAt )		6311392	2					
ANR	6311399	Identifier	Memento_breakAt		6311392	3					
ANR	6311400	ParameterList	int i		6311392	4					
ANR	6311401	Parameter	int i	1426:22:39386:39390	6311392	0	True				
ANR	6311402	ParameterType	int		6311392	0					
ANR	6311403	Identifier	i		6311392	1					
ANR	6311404	CFGEntryNode	ENTRY		6311392		True				
ANR	6311405	CFGExitNode	EXIT		6311392		True				
ANR	6311406	Symbol	i		6311392						
ANR	6311407	Function	Memento_getBlockNum	1431:0:39412:39463							
ANR	6311408	FunctionDef	Memento_getBlockNum (void * i)		6311407	0					
ANR	6311409	CompoundStatement		1432:0:39447:39463	6311407	0					
ANR	6311410	ReturnStatement	return 0 ;	1433:4:39453:39461	6311407	0	True				
ANR	6311411	PrimaryExpression	0		6311407	0					
ANR	6311412	ReturnType	int		6311407	1					
ANR	6311413	Identifier	( Memento_getBlockNum )		6311407	2					
ANR	6311414	Identifier	Memento_getBlockNum		6311407	3					
ANR	6311415	ParameterList	void * i		6311407	4					
ANR	6311416	Parameter	void * i	1431:26:39438:39444	6311407	0	True				
ANR	6311417	ParameterType	void *		6311407	0					
ANR	6311418	Identifier	i		6311407	1					
ANR	6311419	CFGEntryNode	ENTRY		6311407		True				
ANR	6311420	CFGExitNode	EXIT		6311407		True				
ANR	6311421	Symbol	i		6311407						
ANR	6311422	Function	Memento_find	1436:0:39466:39510							
ANR	6311423	FunctionDef	Memento_find (void * a)		6311422	0					
ANR	6311424	CompoundStatement		1437:0:39494:39510	6311422	0					
ANR	6311425	ReturnStatement	return 0 ;	1438:4:39500:39508	6311422	0	True				
ANR	6311426	PrimaryExpression	0		6311422	0					
ANR	6311427	ReturnType	int		6311422	1					
ANR	6311428	Identifier	( Memento_find )		6311422	2					
ANR	6311429	Identifier	Memento_find		6311422	3					
ANR	6311430	ParameterList	void * a		6311422	4					
ANR	6311431	Parameter	void * a	1436:19:39485:39491	6311422	0	True				
ANR	6311432	ParameterType	void *		6311422	0					
ANR	6311433	Identifier	a		6311422	1					
ANR	6311434	CFGEntryNode	ENTRY		6311422		True				
ANR	6311435	CFGExitNode	EXIT		6311422		True				
ANR	6311436	Symbol	a		6311422						
ANR	6311437	Function	Memento_failAt	1441:0:39513:39557							
ANR	6311438	FunctionDef	Memento_failAt (int i)		6311437	0					
ANR	6311439	CompoundStatement		1442:0:39541:39557	6311437	0					
ANR	6311440	ReturnStatement	return 0 ;	1443:4:39547:39555	6311437	0	True				
ANR	6311441	PrimaryExpression	0		6311437	0					
ANR	6311442	ReturnType	int		6311437	1					
ANR	6311443	Identifier	( Memento_failAt )		6311437	2					
ANR	6311444	Identifier	Memento_failAt		6311437	3					
ANR	6311445	ParameterList	int i		6311437	4					
ANR	6311446	Parameter	int i	1441:21:39534:39538	6311437	0	True				
ANR	6311447	ParameterType	int		6311437	0					
ANR	6311448	Identifier	i		6311437	1					
ANR	6311449	CFGEntryNode	ENTRY		6311437		True				
ANR	6311450	CFGExitNode	EXIT		6311437		True				
ANR	6311451	Symbol	i		6311437						
ANR	6311452	Function	Memento_breakOnFree	1446:0:39560:39598							
ANR	6311453	FunctionDef	Memento_breakOnFree (void * a)		6311452	0					
ANR	6311454	CompoundStatement		1447:0:39596:39598	6311452	0					
ANR	6311455	ReturnType	void		6311452	1					
ANR	6311456	Identifier	( Memento_breakOnFree )		6311452	2					
ANR	6311457	Identifier	Memento_breakOnFree		6311452	3					
ANR	6311458	ParameterList	void * a		6311452	4					
ANR	6311459	Parameter	void * a	1446:27:39587:39593	6311452	0	True				
ANR	6311460	ParameterType	void *		6311452	0					
ANR	6311461	Identifier	a		6311452	1					
ANR	6311462	CFGEntryNode	ENTRY		6311452		True				
ANR	6311463	CFGExitNode	EXIT		6311452		True				
ANR	6311464	Symbol	a		6311452						
ANR	6311465	Function	Memento_breakOnRealloc	1450:0:39601:39642							
ANR	6311466	FunctionDef	Memento_breakOnRealloc (void * a)		6311465	0					
ANR	6311467	CompoundStatement		1451:0:39640:39642	6311465	0					
ANR	6311468	ReturnType	void		6311465	1					
ANR	6311469	Identifier	( Memento_breakOnRealloc )		6311465	2					
ANR	6311470	Identifier	Memento_breakOnRealloc		6311465	3					
ANR	6311471	ParameterList	void * a		6311465	4					
ANR	6311472	Parameter	void * a	1450:30:39631:39637	6311465	0	True				
ANR	6311473	ParameterType	void *		6311465	0					
ANR	6311474	Identifier	a		6311465	1					
ANR	6311475	CFGEntryNode	ENTRY		6311465		True				
ANR	6311476	CFGExitNode	EXIT		6311465		True				
ANR	6311477	Symbol	a		6311465						
ANR	6311478	Function	Memento_malloc	1454:1:39646:39814							
ANR	6311479	FunctionDef	Memento_malloc (size_t size)		6311478	0					
ANR	6311480	CompoundStatement		1461:0:39768:39814	6311478	0					
ANR	6311481	ReturnStatement	return MEMENTO_UNDERLYING_MALLOC ( size ) ;	1462:4:39774:39812	6311478	0	True				
ANR	6311482	CallExpression	MEMENTO_UNDERLYING_MALLOC ( size )		6311478	0					
ANR	6311483	Callee	MEMENTO_UNDERLYING_MALLOC		6311478	0					
ANR	6311484	Identifier	MEMENTO_UNDERLYING_MALLOC		6311478	0					
ANR	6311485	ArgumentList	size		6311478	1					
ANR	6311486	Argument	size		6311478	0					
ANR	6311487	Identifier	size		6311478	0					
ANR	6311488	ReturnType	undef Memento_malloc undef Memento_free undef Memento_realloc undef Memento_calloc void *		6311478	1					
ANR	6311489	Identifier	Memento_malloc		6311478	2					
ANR	6311490	ParameterList	size_t size		6311478	3					
ANR	6311491	Parameter	size_t size	1460:15:39755:39765	6311478	0	True				
ANR	6311492	ParameterType	size_t		6311478	0					
ANR	6311493	Identifier	size		6311478	1					
ANR	6311494	CFGEntryNode	ENTRY		6311478		True				
ANR	6311495	CFGExitNode	EXIT		6311478		True				
ANR	6311496	Symbol	size		6311478						
ANR	6311497	Symbol	MEMENTO_UNDERLYING_MALLOC		6311478						
ANR	6311498	Function	Memento_free	1465:0:39817:39878							
ANR	6311499	FunctionDef	Memento_free (void * b)		6311498	0					
ANR	6311500	CompoundStatement		1467:0:39844:39878	6311498	0					
ANR	6311501	ExpressionStatement	MEMENTO_UNDERLYING_FREE ( b )	1468:4:39850:39876	6311498	0	True				
ANR	6311502	CallExpression	MEMENTO_UNDERLYING_FREE ( b )		6311498	0					
ANR	6311503	Callee	MEMENTO_UNDERLYING_FREE		6311498	0					
ANR	6311504	Identifier	MEMENTO_UNDERLYING_FREE		6311498	0					
ANR	6311505	ArgumentList	b		6311498	1					
ANR	6311506	Argument	b		6311498	0					
ANR	6311507	Identifier	b		6311498	0					
ANR	6311508	ReturnType	void		6311498	1					
ANR	6311509	Identifier	Memento_free		6311498	2					
ANR	6311510	ParameterList	void * b		6311498	3					
ANR	6311511	Parameter	void * b	1466:13:39835:39841	6311498	0	True				
ANR	6311512	ParameterType	void *		6311498	0					
ANR	6311513	Identifier	b		6311498	1					
ANR	6311514	CFGEntryNode	ENTRY		6311498		True				
ANR	6311515	CFGExitNode	EXIT		6311498		True				
ANR	6311516	Symbol	b		6311498						
ANR	6311517	Function	Memento_realloc	1471:0:39881:39970							
ANR	6311518	FunctionDef	"Memento_realloc (void * b , size_t s)"		6311517	0					
ANR	6311519	CompoundStatement		1473:0:39923:39970	6311517	0					
ANR	6311520	ReturnStatement	"return MEMENTO_UNDERLYING_REALLOC ( b , s ) ;"	1474:4:39929:39968	6311517	0	True				
ANR	6311521	CallExpression	"MEMENTO_UNDERLYING_REALLOC ( b , s )"		6311517	0					
ANR	6311522	Callee	MEMENTO_UNDERLYING_REALLOC		6311517	0					
ANR	6311523	Identifier	MEMENTO_UNDERLYING_REALLOC		6311517	0					
ANR	6311524	ArgumentList	b		6311517	1					
ANR	6311525	Argument	b		6311517	0					
ANR	6311526	Identifier	b		6311517	0					
ANR	6311527	Argument	s		6311517	1					
ANR	6311528	Identifier	s		6311517	0					
ANR	6311529	ReturnType	void *		6311517	1					
ANR	6311530	Identifier	Memento_realloc		6311517	2					
ANR	6311531	ParameterList	"void * b , size_t s"		6311517	3					
ANR	6311532	Parameter	void * b	1472:16:39904:39910	6311517	0	True				
ANR	6311533	ParameterType	void *		6311517	0					
ANR	6311534	Identifier	b		6311517	1					
ANR	6311535	Parameter	size_t s	1472:25:39913:39920	6311517	1	True				
ANR	6311536	ParameterType	size_t		6311517	0					
ANR	6311537	Identifier	s		6311517	1					
ANR	6311538	CFGEntryNode	ENTRY		6311517		True				
ANR	6311539	CFGExitNode	EXIT		6311517		True				
ANR	6311540	Symbol	b		6311517						
ANR	6311541	Symbol	s		6311517						
ANR	6311542	Symbol	MEMENTO_UNDERLYING_REALLOC		6311517						
ANR	6311543	Function	Memento_calloc	1477:0:39973:40061							
ANR	6311544	FunctionDef	"Memento_calloc (size_t n , size_t s)"		6311543	0					
ANR	6311545	CompoundStatement		1479:0:40015:40061	6311543	0					
ANR	6311546	ReturnStatement	"return MEMENTO_UNDERLYING_CALLOC ( n , s ) ;"	1480:4:40021:40059	6311543	0	True				
ANR	6311547	CallExpression	"MEMENTO_UNDERLYING_CALLOC ( n , s )"		6311543	0					
ANR	6311548	Callee	MEMENTO_UNDERLYING_CALLOC		6311543	0					
ANR	6311549	Identifier	MEMENTO_UNDERLYING_CALLOC		6311543	0					
ANR	6311550	ArgumentList	n		6311543	1					
ANR	6311551	Argument	n		6311543	0					
ANR	6311552	Identifier	n		6311543	0					
ANR	6311553	Argument	s		6311543	1					
ANR	6311554	Identifier	s		6311543	0					
ANR	6311555	ReturnType	void *		6311543	1					
ANR	6311556	Identifier	Memento_calloc		6311543	2					
ANR	6311557	ParameterList	"size_t n , size_t s"		6311543	3					
ANR	6311558	Parameter	size_t n	1478:15:39995:40002	6311543	0	True				
ANR	6311559	ParameterType	size_t		6311543	0					
ANR	6311560	Identifier	n		6311543	1					
ANR	6311561	Parameter	size_t s	1478:25:40005:40012	6311543	1	True				
ANR	6311562	ParameterType	size_t		6311543	0					
ANR	6311563	Identifier	s		6311543	1					
ANR	6311564	CFGEntryNode	ENTRY		6311543		True				
ANR	6311565	CFGExitNode	EXIT		6311543		True				
ANR	6311566	Symbol	MEMENTO_UNDERLYING_CALLOC		6311543						
ANR	6311567	Symbol	s		6311543						
ANR	6311568	Symbol	n		6311543						
ANR	6311569	Function	Memento_listBlocks	1483:0:40064:40098							
ANR	6311570	FunctionDef	Memento_listBlocks ()		6311569	0					
ANR	6311571	CompoundStatement		1484:0:40096:40098	6311569	0					
ANR	6311572	ReturnType	void		6311569	1					
ANR	6311573	Identifier	( Memento_listBlocks )		6311569	2					
ANR	6311574	Identifier	Memento_listBlocks		6311569	3					
ANR	6311575	ParameterList			6311569	4					
ANR	6311576	CFGEntryNode	ENTRY		6311569		True				
ANR	6311577	CFGExitNode	EXIT		6311569		True				
ANR	6311578	Function	Memento_listNewBlocks	1487:0:40101:40138							
ANR	6311579	FunctionDef	Memento_listNewBlocks ()		6311578	0					
ANR	6311580	CompoundStatement		1488:0:40136:40138	6311578	0					
ANR	6311581	ReturnType	void		6311578	1					
ANR	6311582	Identifier	( Memento_listNewBlocks )		6311578	2					
ANR	6311583	Identifier	Memento_listNewBlocks		6311578	3					
ANR	6311584	ParameterList			6311578	4					
ANR	6311585	CFGEntryNode	ENTRY		6311578		True				
ANR	6311586	CFGExitNode	EXIT		6311578		True				
ANR	6311587	Function	Memento_setMax	1491:0:40141:40192							
ANR	6311588	FunctionDef	Memento_setMax (size_t max)		6311587	0					
ANR	6311589	CompoundStatement		1492:0:40176:40192	6311587	0					
ANR	6311590	ReturnStatement	return 0 ;	1493:4:40182:40190	6311587	0	True				
ANR	6311591	PrimaryExpression	0		6311587	0					
ANR	6311592	ReturnType	size_t		6311587	1					
ANR	6311593	Identifier	( Memento_setMax )		6311587	2					
ANR	6311594	Identifier	Memento_setMax		6311587	3					
ANR	6311595	ParameterList	size_t max		6311587	4					
ANR	6311596	Parameter	size_t max	1491:23:40164:40173	6311587	0	True				
ANR	6311597	ParameterType	size_t		6311587	0					
ANR	6311598	Identifier	max		6311587	1					
ANR	6311599	CFGEntryNode	ENTRY		6311587		True				
ANR	6311600	CFGExitNode	EXIT		6311587		True				
ANR	6311601	Symbol	max		6311587						
ANR	6311602	Function	Memento_stats	1496:0:40195:40224							
ANR	6311603	FunctionDef	Memento_stats ()		6311602	0					
ANR	6311604	CompoundStatement		1497:0:40222:40224	6311602	0					
ANR	6311605	ReturnType	void		6311602	1					
ANR	6311606	Identifier	( Memento_stats )		6311602	2					
ANR	6311607	Identifier	Memento_stats		6311602	3					
ANR	6311608	ParameterList			6311602	4					
ANR	6311609	CFGEntryNode	ENTRY		6311602		True				
ANR	6311610	CFGExitNode	EXIT		6311602		True				
ANR	6311611	Function	Memento_label	1500:0:40227:40297							
ANR	6311612	FunctionDef	"Memento_label (void * ptr , const char * label)"		6311611	0					
ANR	6311613	CompoundStatement		1501:0:40279:40297	6311611	0					
ANR	6311614	ReturnStatement	return ptr ;	1502:4:40285:40295	6311611	0	True				
ANR	6311615	Identifier	ptr		6311611	0					
ANR	6311616	ReturnType	void *		6311611	1					
ANR	6311617	Identifier	( Memento_label )		6311611	2					
ANR	6311618	Identifier	Memento_label		6311611	3					
ANR	6311619	ParameterList	"void * ptr , const char * label"		6311611	4					
ANR	6311620	Parameter	void * ptr	1500:22:40249:40257	6311611	0	True				
ANR	6311621	ParameterType	void *		6311611	0					
ANR	6311622	Identifier	ptr		6311611	1					
ANR	6311623	Parameter	const char * label	1500:33:40260:40276	6311611	1	True				
ANR	6311624	ParameterType	const char *		6311611	0					
ANR	6311625	Identifier	label		6311611	1					
ANR	6311626	CFGEntryNode	ENTRY		6311611		True				
ANR	6311627	CFGExitNode	EXIT		6311611		True				
ANR	6311628	Symbol	label		6311611						
ANR	6311629	Symbol	ptr		6311611						
