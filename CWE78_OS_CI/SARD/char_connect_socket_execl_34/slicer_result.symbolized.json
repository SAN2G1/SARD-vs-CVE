[
  {
    "FileName": "CWE78_OS_Command_Injection__char_connect_socket_execl_34.c",
    "Caller": "CWE78_OS_Command_Injection__char_connect_socket_execl_34_bad",
    "Source": false,
    "Sink": false,
    "idx": 0,
    "CWE-ID": "CWE-78",
    "category": "CallExpression",
    "criterion": "strlen",
    "line": 86,
    "label": 0,
    "slices": [
      "    char * data;\n",
      "    CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType myUnion;\n",
      "    char dataBuffer[100] = COMMAND_ARG2;\n",
      "    data = dataBuffer;\n",
      "        int recvResult;\n",
      "        char *replace;\n",
      "        SOCKET connectSocket = INVALID_SOCKET;\n",
      "        size_t dataLen = strlen(data);\n",
      "            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n",
      "            if (connectSocket == INVALID_SOCKET)\n",
      "            if (connect(connectSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n",
      "            recvResult = recv(connectSocket, (char *)(data + dataLen), sizeof(char) * (100 - dataLen - 1), 0);\n",
      "            if (recvResult == SOCKET_ERROR || recvResult == 0)\n",
      "            data[dataLen + recvResult / sizeof(char)] = '\\0';\n",
      "            replace = strchr(data, '\\r');\n",
      "            replace = strchr(data, '\\n');\n",
      "        while (0);\n",
      "    myUnion.unionFirst = data;\n",
      "        char * data = myUnion.unionSecond;\n"
    ],
    "tokenized": "char *Var1; \nSTRUCT1  Var2; \nchar  Var3[100]=Var4; \nVar1=Var3; \nint  Var5; \nchar *Var6; \nSTRUCT2  Var7=Var8; \nsize_t  Var9=strlen(Var1); \nif (FUNC1(FUNC2(2,2),&Var10) !=  Var11)\nif (Var7 ==  Var8)\nif (connect(Var7,(struct STRUCT3 *)&Var12,sizeof (Var12)) ==  Var13)\nVar5=recv(Var7,(char *)(Var1+Var9),sizeof (char )*(100-Var9-1),0); \nif (Var5 ==  Var13||Var5 == 0)\nVar1[Var9+Var5/sizeof (char )]=0; \nVar6=strchr(Var1,Var14); \nVar6=strchr(Var1,Var15); \nwhile (0); \nVar2.memberVar1=Var1; \nchar *Var1=Var2.memberVar2; \n"
  },
  {
    "FileName": "CWE78_OS_Command_Injection__char_connect_socket_execl_34.c",
    "Caller": "CWE78_OS_Command_Injection__char_connect_socket_execl_34_bad",
    "Source": false,
    "Sink": false,
    "idx": 1,
    "CWE-ID": "CWE-78",
    "category": "CallExpression",
    "criterion": "socket",
    "line": 97,
    "label": 0,
    "slices": [
      "    char * data;\n",
      "        int recvResult;\n",
      "        SOCKET connectSocket = INVALID_SOCKET;\n",
      "        size_t dataLen = strlen(data);\n",
      "            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n",
      "            connectSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n",
      "            if (connectSocket == INVALID_SOCKET)\n",
      "            if (connect(connectSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n",
      "            recvResult = recv(connectSocket, (char *)(data + dataLen), sizeof(char) * (100 - dataLen - 1), 0);\n",
      "            if (recvResult == SOCKET_ERROR || recvResult == 0)\n",
      "            data[dataLen + recvResult / sizeof(char)] = '\\0';\n",
      "        while (0);\n",
      "        if (connectSocket != INVALID_SOCKET)\n",
      "            CLOSE_SOCKET(connectSocket);\n",
      "        char * data = myUnion.unionSecond;\n"
    ],
    "tokenized": "char *Var1; \nint  Var2; \nSTRUCT1  Var3=Var4; \nsize_t  Var5=strlen(Var1); \nif (FUNC1(FUNC2(2,2),&Var6) !=  Var7)\nVar3=socket(Var8,Var9,Var10); \nif (Var3 ==  Var4)\nif (connect(Var3,(struct STRUCT2 *)&Var11,sizeof (Var11)) ==  Var12)\nVar2=recv(Var3,(char *)(Var1+Var5),sizeof (char )*(100-Var5-1),0); \nif (Var2 ==  Var12||Var2 == 0)\nVar1[Var5+Var2/sizeof (char )]=0; \nwhile (0); \nif (Var3 !=  Var4)\nFUNC3(Var3); \nchar *Var1=Var13.memberVar1; \n"
  },
  {
    "FileName": "CWE78_OS_Command_Injection__char_connect_socket_execl_34.c",
    "Caller": "CWE78_OS_Command_Injection__char_connect_socket_execl_34_bad",
    "Source": false,
    "Sink": false,
    "idx": 2,
    "CWE-ID": "CWE-78",
    "category": "CallExpression",
    "criterion": "memset",
    "line": 102,
    "label": 0,
    "slices": [
      "        int recvResult;\n",
      "        SOCKET connectSocket = INVALID_SOCKET;\n",
      "            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n",
      "            if (connectSocket == INVALID_SOCKET)\n",
      "            memset(&service, 0, sizeof(service));\n",
      "            if (connect(connectSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n",
      "            if (recvResult == SOCKET_ERROR || recvResult == 0)\n",
      "        while (0);\n"
    ],
    "tokenized": "int  Var1; \nSTRUCT1  Var2=Var3; \nif (FUNC1(FUNC2(2,2),&Var4) !=  Var5)\nif (Var2 ==  Var3)\nmemset(&Var6,0,sizeof (Var6)); \nif (connect(Var2,(struct STRUCT2 *)&Var6,sizeof (Var6)) ==  Var7)\nif (Var1 ==  Var7||Var1 == 0)\nwhile (0); \n"
  },
  {
    "FileName": "CWE78_OS_Command_Injection__char_connect_socket_execl_34.c",
    "Caller": "CWE78_OS_Command_Injection__char_connect_socket_execl_34_bad",
    "Source": false,
    "Sink": false,
    "idx": 3,
    "CWE-ID": "CWE-78",
    "category": "CallExpression",
    "criterion": "connect",
    "line": 106,
    "label": 0,
    "slices": [
      "    char * data;\n",
      "        int recvResult;\n",
      "        SOCKET connectSocket = INVALID_SOCKET;\n",
      "        size_t dataLen = strlen(data);\n",
      "            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n",
      "            connectSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n",
      "            if (connectSocket == INVALID_SOCKET)\n",
      "            if (connect(connectSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n",
      "            recvResult = recv(connectSocket, (char *)(data + dataLen), sizeof(char) * (100 - dataLen - 1), 0);\n",
      "            if (recvResult == SOCKET_ERROR || recvResult == 0)\n",
      "        while (0);\n",
      "        if (connectSocket != INVALID_SOCKET)\n",
      "            CLOSE_SOCKET(connectSocket);\n",
      "        char * data = myUnion.unionSecond;\n"
    ],
    "tokenized": "char *Var1; \nint  Var2; \nSTRUCT1  Var3=Var4; \nsize_t  Var5=strlen(Var1); \nif (FUNC1(FUNC2(2,2),&Var6) !=  Var7)\nVar3=socket(Var8,Var9,Var10); \nif (Var3 ==  Var4)\nif (connect(Var3,(struct STRUCT2 *)&Var11,sizeof (Var11)) ==  Var12)\nVar2=recv(Var3,(char *)(Var1+Var5),sizeof (char )*(100-Var5-1),0); \nif (Var2 ==  Var12||Var2 == 0)\nwhile (0); \nif (Var3 !=  Var4)\nFUNC3(Var3); \nchar *Var1=Var13.memberVar1; \n"
  },
  {
    "FileName": "CWE78_OS_Command_Injection__char_connect_socket_execl_34.c",
    "Caller": "CWE78_OS_Command_Injection__char_connect_socket_execl_34_bad",
    "Source": false,
    "Sink": false,
    "idx": 4,
    "CWE-ID": "CWE-78",
    "category": "CallExpression",
    "criterion": "recv",
    "line": 113,
    "label": 0,
    "slices": [
      "    char * data;\n",
      "    CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType myUnion;\n",
      "    char dataBuffer[100] = COMMAND_ARG2;\n",
      "    data = dataBuffer;\n",
      "        int recvResult;\n",
      "        char *replace;\n",
      "        SOCKET connectSocket = INVALID_SOCKET;\n",
      "        size_t dataLen = strlen(data);\n",
      "            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n",
      "            connectSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n",
      "            if (connectSocket == INVALID_SOCKET)\n",
      "            if (connect(connectSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n",
      "            recvResult = recv(connectSocket, (char *)(data + dataLen), sizeof(char) * (100 - dataLen - 1), 0);\n",
      "            if (recvResult == SOCKET_ERROR || recvResult == 0)\n",
      "            data[dataLen + recvResult / sizeof(char)] = '\\0';\n",
      "            replace = strchr(data, '\\r');\n",
      "            replace = strchr(data, '\\n');\n",
      "        while (0);\n",
      "        if (connectSocket != INVALID_SOCKET)\n",
      "            CLOSE_SOCKET(connectSocket);\n",
      "    myUnion.unionFirst = data;\n",
      "        char * data = myUnion.unionSecond;\n"
    ],
    "tokenized": "char *Var1; \nSTRUCT1  Var2; \nchar  Var3[100]=Var4; \nVar1=Var3; \nint  Var5; \nchar *Var6; \nSTRUCT2  Var7=Var8; \nsize_t  Var9=strlen(Var1); \nif (FUNC1(FUNC2(2,2),&Var10) !=  Var11)\nVar7=socket(Var12,Var13,Var14); \nif (Var7 ==  Var8)\nif (connect(Var7,(struct STRUCT3 *)&Var15,sizeof (Var15)) ==  Var16)\nVar5=recv(Var7,(char *)(Var1+Var9),sizeof (char )*(100-Var9-1),0); \nif (Var5 ==  Var16||Var5 == 0)\nVar1[Var9+Var5/sizeof (char )]=0; \nVar6=strchr(Var1,Var17); \nVar6=strchr(Var1,Var18); \nwhile (0); \nif (Var7 !=  Var8)\nFUNC3(Var7); \nVar2.memberVar1=Var1; \nchar *Var1=Var2.memberVar2; \n"
  },
  {
    "FileName": "CWE78_OS_Command_Injection__char_connect_socket_execl_34.c",
    "Caller": "CWE78_OS_Command_Injection__char_connect_socket_execl_34_bad",
    "Source": false,
    "Sink": false,
    "idx": 5,
    "CWE-ID": "CWE-78",
    "category": "CallExpression",
    "criterion": "strchr",
    "line": 121,
    "label": 0,
    "slices": [
      "    char * data;\n",
      "    CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType myUnion;\n",
      "    char dataBuffer[100] = COMMAND_ARG2;\n",
      "    data = dataBuffer;\n",
      "        int recvResult;\n",
      "        char *replace;\n",
      "        SOCKET connectSocket = INVALID_SOCKET;\n",
      "        size_t dataLen = strlen(data);\n",
      "            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n",
      "            if (connectSocket == INVALID_SOCKET)\n",
      "            if (connect(connectSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n",
      "            recvResult = recv(connectSocket, (char *)(data + dataLen), sizeof(char) * (100 - dataLen - 1), 0);\n",
      "            if (recvResult == SOCKET_ERROR || recvResult == 0)\n",
      "            data[dataLen + recvResult / sizeof(char)] = '\\0';\n",
      "            replace = strchr(data, '\\r');\n",
      "            if (replace)\n",
      "                *replace = '\\0';\n",
      "            replace = strchr(data, '\\n');\n",
      "            if (replace)\n",
      "                *replace = '\\0';\n",
      "        while (0);\n",
      "    myUnion.unionFirst = data;\n",
      "        char * data = myUnion.unionSecond;\n"
    ],
    "tokenized": "char *Var1; \nSTRUCT1  Var2; \nchar  Var3[100]=Var4; \nVar1=Var3; \nint  Var5; \nchar *Var6; \nSTRUCT2  Var7=Var8; \nsize_t  Var9=strlen(Var1); \nif (FUNC1(FUNC2(2,2),&Var10) !=  Var11)\nif (Var7 ==  Var8)\nif (connect(Var7,(struct STRUCT3 *)&Var12,sizeof (Var12)) ==  Var13)\nVar5=recv(Var7,(char *)(Var1+Var9),sizeof (char )*(100-Var9-1),0); \nif (Var5 ==  Var13||Var5 == 0)\nVar1[Var9+Var5/sizeof (char )]=0; \nVar6=strchr(Var1,Var14); \nif (Var6)\n*Var6=0; \nVar6=strchr(Var1,Var15); \nif (Var6)\n*Var6=0; \nwhile (0); \nVar2.memberVar1=Var1; \nchar *Var1=Var2.memberVar2; \n"
  },
  {
    "FileName": "CWE78_OS_Command_Injection__char_connect_socket_execl_34.c",
    "Caller": "CWE78_OS_Command_Injection__char_connect_socket_execl_34_bad",
    "Source": false,
    "Sink": false,
    "idx": 6,
    "CWE-ID": "CWE-78",
    "category": "CallExpression",
    "criterion": "strchr",
    "line": 126,
    "label": 0,
    "slices": [
      "    char * data;\n",
      "    CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType myUnion;\n",
      "    char dataBuffer[100] = COMMAND_ARG2;\n",
      "    data = dataBuffer;\n",
      "        int recvResult;\n",
      "        char *replace;\n",
      "        SOCKET connectSocket = INVALID_SOCKET;\n",
      "        size_t dataLen = strlen(data);\n",
      "            if (WSAStartup(MAKEWORD(2,2), &wsaData) != NO_ERROR)\n",
      "            if (connectSocket == INVALID_SOCKET)\n",
      "            if (connect(connectSocket, (struct sockaddr*)&service, sizeof(service)) == SOCKET_ERROR)\n",
      "            recvResult = recv(connectSocket, (char *)(data + dataLen), sizeof(char) * (100 - dataLen - 1), 0);\n",
      "            if (recvResult == SOCKET_ERROR || recvResult == 0)\n",
      "            data[dataLen + recvResult / sizeof(char)] = '\\0';\n",
      "            replace = strchr(data, '\\r');\n",
      "            if (replace)\n",
      "                *replace = '\\0';\n",
      "            replace = strchr(data, '\\n');\n",
      "            if (replace)\n",
      "                *replace = '\\0';\n",
      "        while (0);\n",
      "    myUnion.unionFirst = data;\n",
      "        char * data = myUnion.unionSecond;\n"
    ],
    "tokenized": "char *Var1; \nSTRUCT1  Var2; \nchar  Var3[100]=Var4; \nVar1=Var3; \nint  Var5; \nchar *Var6; \nSTRUCT2  Var7=Var8; \nsize_t  Var9=strlen(Var1); \nif (FUNC1(FUNC2(2,2),&Var10) !=  Var11)\nif (Var7 ==  Var8)\nif (connect(Var7,(struct STRUCT3 *)&Var12,sizeof (Var12)) ==  Var13)\nVar5=recv(Var7,(char *)(Var1+Var9),sizeof (char )*(100-Var9-1),0); \nif (Var5 ==  Var13||Var5 == 0)\nVar1[Var9+Var5/sizeof (char )]=0; \nVar6=strchr(Var1,Var14); \nif (Var6)\n*Var6=0; \nVar6=strchr(Var1,Var15); \nif (Var6)\n*Var6=0; \nwhile (0); \nVar2.memberVar1=Var1; \nchar *Var1=Var2.memberVar2; \n"
  },
  {
    "FileName": "CWE78_OS_Command_Injection__char_connect_socket_execl_34.c",
    "Caller": "goodG2B",
    "Source": false,
    "Sink": false,
    "idx": 7,
    "CWE-ID": "CWE-78",
    "category": "CallExpression",
    "criterion": "strcat",
    "line": 165,
    "label": 1,
    "slices": [
      "    char * data;\n",
      "    CWE78_OS_Command_Injection__char_connect_socket_execl_34_unionType myUnion;\n",
      "    char dataBuffer[100] = COMMAND_ARG2;\n",
      "    data = dataBuffer;\n",
      "    strcat(data, \"*.*\");\n",
      "    myUnion.unionFirst = data;\n",
      "        char * data = myUnion.unionSecond;\n"
    ],
    "tokenized": "char *Var1; \nSTRUCT1  Var2; \nchar  Var3[100]=Var4; \nVar1=Var3; \nstrcat(Var1,STRING); \nVar2.memberVar1=Var1; \nchar *Var1=Var2.memberVar2; \n"
  }
]
