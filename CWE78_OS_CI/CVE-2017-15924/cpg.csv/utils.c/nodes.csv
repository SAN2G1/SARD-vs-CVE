command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	147843	File	data/converged/CVE-2017-15924_shadowsocks-libev/utils.c								
ANR	147844	DeclStmt									
ANR	147845	Decl							FILE	FILE *	logfile
ANR	147846	DeclStmt									
ANR	147847	Decl							int	int	use_syslog
ANR	147848	Function	ERROR	58:0:1351:1440							
ANR	147849	FunctionDef	ERROR (const char * s)		147848	0					
ANR	147850	CompoundStatement		60:0:1377:1440	147848	0					
ANR	147851	IdentifierDeclStatement	char * msg = strerror ( errno ) ;	61:4:1383:1410	147848	0	True				
ANR	147852	IdentifierDecl	* msg = strerror ( errno )		147848	0					
ANR	147853	IdentifierDeclType	char *		147848	0					
ANR	147854	Identifier	msg		147848	1					
ANR	147855	AssignmentExpression	* msg = strerror ( errno )		147848	2		=			
ANR	147856	Identifier	msg		147848	0					
ANR	147857	CallExpression	strerror ( errno )		147848	1					
ANR	147858	Callee	strerror		147848	0					
ANR	147859	Identifier	strerror		147848	0					
ANR	147860	ArgumentList	errno		147848	1					
ANR	147861	Argument	errno		147848	0					
ANR	147862	Identifier	errno		147848	0					
ANR	147863	ExpressionStatement	"LOGE ( ""%s: %s"" , s , msg )"	62:4:1416:1438	147848	1	True				
ANR	147864	CallExpression	"LOGE ( ""%s: %s"" , s , msg )"		147848	0					
ANR	147865	Callee	LOGE		147848	0					
ANR	147866	Identifier	LOGE		147848	0					
ANR	147867	ArgumentList	"""%s: %s"""		147848	1					
ANR	147868	Argument	"""%s: %s"""		147848	0					
ANR	147869	PrimaryExpression	"""%s: %s"""		147848	0					
ANR	147870	Argument	s		147848	1					
ANR	147871	Identifier	s		147848	0					
ANR	147872	Argument	msg		147848	2					
ANR	147873	Identifier	msg		147848	0					
ANR	147874	ReturnType	void		147848	1					
ANR	147875	Identifier	ERROR		147848	2					
ANR	147876	ParameterList	const char * s		147848	3					
ANR	147877	Parameter	const char * s	59:6:1362:1374	147848	0	True				
ANR	147878	ParameterType	const char *		147848	0					
ANR	147879	Identifier	s		147848	1					
ANR	147880	CFGEntryNode	ENTRY		147848		True				
ANR	147881	CFGExitNode	EXIT		147848		True				
ANR	147882	Symbol	strerror		147848						
ANR	147883	Symbol	msg		147848						
ANR	147884	Symbol	errno		147848						
ANR	147885	Symbol	s		147848						
ANR	147886	DeclStmt									
ANR	147887	Decl							int	int	use_tty
ANR	147888	Function	ss_itoa	67:0:1461:1959							
ANR	147889	FunctionDef	ss_itoa (int i)		147888	0					
ANR	147890	CompoundStatement		69:0:1483:1959	147888	0					
ANR	147891	Statement	static	71:4:1538:1543	147888	0	True				
ANR	147892	IdentifierDeclStatement	char buf [ INT_DIGITS + 2 ] ;	71:11:1545:1569	147888	1	True				
ANR	147893	IdentifierDecl	buf [ INT_DIGITS + 2 ]		147888	0					
ANR	147894	IdentifierDeclType	char [ INT_DIGITS + 2 ]		147888	0					
ANR	147895	Identifier	buf		147888	1					
ANR	147896	AdditiveExpression	INT_DIGITS + 2		147888	2		+			
ANR	147897	Identifier	INT_DIGITS		147888	0					
ANR	147898	PrimaryExpression	2		147888	1					
ANR	147899	IdentifierDeclStatement	char * p = buf + INT_DIGITS + 1 ;	72:4:1575:1605	147888	2	True				
ANR	147900	IdentifierDecl	* p = buf + INT_DIGITS + 1		147888	0					
ANR	147901	IdentifierDeclType	char *		147888	0					
ANR	147902	Identifier	p		147888	1					
ANR	147903	AssignmentExpression	* p = buf + INT_DIGITS + 1		147888	2		=			
ANR	147904	Identifier	p		147888	0					
ANR	147905	AdditiveExpression	buf + INT_DIGITS + 1		147888	1		+			
ANR	147906	Identifier	buf		147888	0					
ANR	147907	AdditiveExpression	INT_DIGITS + 1		147888	1		+			
ANR	147908	Identifier	INT_DIGITS		147888	0					
ANR	147909	PrimaryExpression	1		147888	1					
ANR	147910	IfStatement	if ( i >= 0 )		147888	3					
ANR	147911	Condition	i >= 0	73:8:1652:1657	147888	0	True				
ANR	147912	RelationalExpression	i >= 0		147888	0		>=			
ANR	147913	Identifier	i		147888	0					
ANR	147914	PrimaryExpression	0		147888	1					
ANR	147915	CompoundStatement		5:16:176:176	147888	1					
ANR	147916	DoStatement	do		147888	0					
ANR	147917	CompoundStatement		6:11:189:189	147888	0					
ANR	147918	ExpressionStatement	* -- p = '0' + ( i % 10 )	75:12:1687:1708	147888	0	True				
ANR	147919	AssignmentExpression	* -- p = '0' + ( i % 10 )		147888	0		=			
ANR	147920	UnaryOperationExpression	* -- p		147888	0					
ANR	147921	UnaryOperator	*		147888	0					
ANR	147922	UnaryExpression	-- p		147888	1					
ANR	147923	IncDec	--		147888	0					
ANR	147924	Identifier	p		147888	1					
ANR	147925	AdditiveExpression	'0' + ( i % 10 )		147888	1		+			
ANR	147926	PrimaryExpression	'0'		147888	0					
ANR	147927	MultiplicativeExpression	i % 10		147888	1		%			
ANR	147928	Identifier	i		147888	0					
ANR	147929	PrimaryExpression	10		147888	1					
ANR	147930	ExpressionStatement	i /= 10	76:12:1722:1731	147888	1	True				
ANR	147931	AssignmentExpression	i /= 10		147888	0		/=			
ANR	147932	Identifier	i		147888	0					
ANR	147933	PrimaryExpression	10		147888	1					
ANR	147934	Condition	i != 0	77:17:1750:1755	147888	1	True				
ANR	147935	EqualityExpression	i != 0		147888	0		!=			
ANR	147936	Identifier	i		147888	0					
ANR	147937	PrimaryExpression	0		147888	1					
ANR	147938	ReturnStatement	return p ;	78:8:1767:1775	147888	1	True				
ANR	147939	Identifier	p		147888	0					
ANR	147940	ElseStatement	else		147888	0					
ANR	147941	CompoundStatement		11:11:304:304	147888	0					
ANR	147942	DoStatement	do		147888	0					
ANR	147943	CompoundStatement		12:11:349:349	147888	0					
ANR	147944	ExpressionStatement	* -- p = '0' - ( i % 10 )	81:12:1847:1868	147888	0	True				
ANR	147945	AssignmentExpression	* -- p = '0' - ( i % 10 )		147888	0		=			
ANR	147946	UnaryOperationExpression	* -- p		147888	0					
ANR	147947	UnaryOperator	*		147888	0					
ANR	147948	UnaryExpression	-- p		147888	1					
ANR	147949	IncDec	--		147888	0					
ANR	147950	Identifier	p		147888	1					
ANR	147951	AdditiveExpression	'0' - ( i % 10 )		147888	1		-			
ANR	147952	PrimaryExpression	'0'		147888	0					
ANR	147953	MultiplicativeExpression	i % 10		147888	1		%			
ANR	147954	Identifier	i		147888	0					
ANR	147955	PrimaryExpression	10		147888	1					
ANR	147956	ExpressionStatement	i /= 10	82:12:1882:1891	147888	1	True				
ANR	147957	AssignmentExpression	i /= 10		147888	0		/=			
ANR	147958	Identifier	i		147888	0					
ANR	147959	PrimaryExpression	10		147888	1					
ANR	147960	Condition	i != 0	83:17:1910:1915	147888	1	True				
ANR	147961	EqualityExpression	i != 0		147888	0		!=			
ANR	147962	Identifier	i		147888	0					
ANR	147963	PrimaryExpression	0		147888	1					
ANR	147964	ExpressionStatement	* -- p = '-'	84:8:1927:1937	147888	1	True				
ANR	147965	AssignmentExpression	* -- p = '-'		147888	0		=			
ANR	147966	UnaryOperationExpression	* -- p		147888	0					
ANR	147967	UnaryOperator	*		147888	0					
ANR	147968	UnaryExpression	-- p		147888	1					
ANR	147969	IncDec	--		147888	0					
ANR	147970	Identifier	p		147888	1					
ANR	147971	PrimaryExpression	'-'		147888	1					
ANR	147972	ReturnStatement	return p ;	86:4:1949:1957	147888	4	True				
ANR	147973	Identifier	p		147888	0					
ANR	147974	ReturnType	char *		147888	1					
ANR	147975	Identifier	ss_itoa		147888	2					
ANR	147976	ParameterList	int i		147888	3					
ANR	147977	Parameter	int i	68:8:1476:1480	147888	0	True				
ANR	147978	ParameterType	int		147888	0					
ANR	147979	Identifier	i		147888	1					
ANR	147980	CFGEntryNode	ENTRY		147888		True				
ANR	147981	CFGExitNode	EXIT		147888		True				
ANR	147982	Symbol	p		147888						
ANR	147983	Symbol	buf		147888						
ANR	147984	Symbol	* -- p		147888						
ANR	147985	Symbol	i		147888						
ANR	147986	Symbol	* p		147888						
ANR	147987	Symbol	INT_DIGITS		147888						
ANR	147988	Function	ss_isnumeric	89:0:1962:2108							
ANR	147989	FunctionDef	ss_isnumeric (const char * s)		147988	0					
ANR	147990	CompoundStatement		90:28:1994:2108	147988	0					
ANR	147991	IfStatement	if ( ! s || ! * s )		147988	0					
ANR	147992	Condition	! s || ! * s	91:8:2004:2012	147988	0	True				
ANR	147993	OrExpression	! s || ! * s		147988	0		||			
ANR	147994	UnaryOperationExpression	! s		147988	0					
ANR	147995	UnaryOperator	!		147988	0					
ANR	147996	Identifier	s		147988	1					
ANR	147997	UnaryOperationExpression	! * s		147988	1					
ANR	147998	UnaryOperator	!		147988	0					
ANR	147999	UnaryOperationExpression	* s		147988	1					
ANR	148000	UnaryOperator	*		147988	0					
ANR	148001	Identifier	s		147988	1					
ANR	148002	ReturnStatement	return 0 ;	92:8:2023:2031	147988	1	True				
ANR	148003	PrimaryExpression	0		147988	0					
ANR	148004	WhileStatement	while ( isdigit ( ( unsigned char ) * s ) )		147988	1					
ANR	148005	Condition	isdigit ( ( unsigned char ) * s )	93:11:2044:2069	147988	0	True				
ANR	148006	CallExpression	isdigit ( ( unsigned char ) * s )		147988	0					
ANR	148007	Callee	isdigit		147988	0					
ANR	148008	Identifier	isdigit		147988	0					
ANR	148009	ArgumentList	( unsigned char ) * s		147988	1					
ANR	148010	Argument	( unsigned char ) * s		147988	0					
ANR	148011	CastExpression	( unsigned char ) * s		147988	0					
ANR	148012	CastTarget	unsigned char		147988	0					
ANR	148013	UnaryOperationExpression	* s		147988	1					
ANR	148014	UnaryOperator	*		147988	0					
ANR	148015	Identifier	s		147988	1					
ANR	148016	ExpressionStatement	++ s	94:8:2080:2083	147988	1	True				
ANR	148017	UnaryExpression	++ s		147988	0					
ANR	148018	IncDec	++		147988	0					
ANR	148019	Identifier	s		147988	1					
ANR	148020	ReturnStatement	return * s == '\\0' ;	95:4:2089:2106	147988	2	True				
ANR	148021	EqualityExpression	* s == '\\0'		147988	0		==			
ANR	148022	UnaryOperationExpression	* s		147988	0					
ANR	148023	UnaryOperator	*		147988	0					
ANR	148024	Identifier	s		147988	1					
ANR	148025	PrimaryExpression	'\\0'		147988	1					
ANR	148026	ReturnType	int		147988	1					
ANR	148027	Identifier	ss_isnumeric		147988	2					
ANR	148028	ParameterList	const char * s		147988	3					
ANR	148029	Parameter	const char * s	90:13:1979:1991	147988	0	True				
ANR	148030	ParameterType	const char *		147988	0					
ANR	148031	Identifier	s		147988	1					
ANR	148032	CFGEntryNode	ENTRY		147988		True				
ANR	148033	CFGExitNode	EXIT		147988		True				
ANR	148034	Symbol	s		147988						
ANR	148035	Symbol	* s		147988						
ANR	148036	Symbol	isdigit		147988						
ANR	148037	Function	run_as	101:0:2165:5815							
ANR	148038	FunctionDef	run_as (const char * user)		148037	0					
ANR	148039	CompoundStatement		103:0:2194:5815	148037	0					
ANR	148040	IfStatement	if ( user [ 0 ] )		148037	0					
ANR	148041	Condition	user [ 0 ]	104:8:2204:2210	148037	0	True				
ANR	148042	ArrayIndexing	user [ 0 ]		148037	0					
ANR	148043	Identifier	user		148037	0					
ANR	148044	PrimaryExpression	0		148037	1					
ANR	148045	CompoundStatement		18:8:506:513	148037	1					
ANR	148046	IdentifierDeclStatement	long uid = - 1 ;	107:8:2339:2352	148037	0	True				
ANR	148047	IdentifierDecl	uid = - 1		148037	0					
ANR	148048	IdentifierDeclType	long		148037	0					
ANR	148049	Identifier	uid		148037	1					
ANR	148050	AssignmentExpression	uid = - 1		148037	2		=			
ANR	148051	Identifier	uid		148037	0					
ANR	148052	UnaryOperationExpression	- 1		148037	1					
ANR	148053	UnaryOperator	-		148037	0					
ANR	148054	PrimaryExpression	1		148037	1					
ANR	148055	IfStatement	if ( ss_isnumeric ( user ) )		148037	1					
ANR	148056	Condition	ss_isnumeric ( user )	108:12:2366:2383	148037	0	True				
ANR	148057	CallExpression	ss_isnumeric ( user )		148037	0					
ANR	148058	Callee	ss_isnumeric		148037	0					
ANR	148059	Identifier	ss_isnumeric		148037	0					
ANR	148060	ArgumentList	user		148037	1					
ANR	148061	Argument	user		148037	0					
ANR	148062	Identifier	user		148037	0					
ANR	148063	CompoundStatement		8:12:228:240	148037	1					
ANR	148064	ExpressionStatement	errno = 0	109:12:2400:2409	148037	0	True				
ANR	148065	AssignmentExpression	errno = 0		148037	0		=			
ANR	148066	Identifier	errno		148037	0					
ANR	148067	PrimaryExpression	0		148037	1					
ANR	148068	IdentifierDeclStatement	char * endptr ;	110:12:2423:2435	148037	1	True				
ANR	148069	IdentifierDecl	* endptr		148037	0					
ANR	148070	IdentifierDeclType	char *		148037	0					
ANR	148071	Identifier	endptr		148037	1					
ANR	148072	ExpressionStatement	"uid = strtol ( user , & endptr , 10 )"	111:12:2449:2480	148037	2	True				
ANR	148073	AssignmentExpression	"uid = strtol ( user , & endptr , 10 )"		148037	0		=			
ANR	148074	Identifier	uid		148037	0					
ANR	148075	CallExpression	"strtol ( user , & endptr , 10 )"		148037	1					
ANR	148076	Callee	strtol		148037	0					
ANR	148077	Identifier	strtol		148037	0					
ANR	148078	ArgumentList	user		148037	1					
ANR	148079	Argument	user		148037	0					
ANR	148080	Identifier	user		148037	0					
ANR	148081	Argument	& endptr		148037	1					
ANR	148082	UnaryOperationExpression	& endptr		148037	0					
ANR	148083	UnaryOperator	&		148037	0					
ANR	148084	Identifier	endptr		148037	1					
ANR	148085	Argument	10		148037	2					
ANR	148086	PrimaryExpression	10		148037	0					
ANR	148087	IfStatement	if ( errno || endptr == user )		148037	3					
ANR	148088	Condition	errno || endptr == user	112:16:2498:2520	148037	0	True				
ANR	148089	OrExpression	errno || endptr == user		148037	0		||			
ANR	148090	Identifier	errno		148037	0					
ANR	148091	EqualityExpression	endptr == user		148037	1		==			
ANR	148092	Identifier	endptr		148037	0					
ANR	148093	Identifier	user		148037	1					
ANR	148094	ExpressionStatement	uid = - 1	113:16:2539:2547	148037	1	True				
ANR	148095	AssignmentExpression	uid = - 1		148037	0		=			
ANR	148096	Identifier	uid		148037	0					
ANR	148097	UnaryOperationExpression	- 1		148037	1					
ANR	148098	UnaryOperator	-		148037	0					
ANR	148099	PrimaryExpression	1		148037	1					
ANR	148100	IdentifierDeclStatement	"struct passwd pwdbuf , * pwd ;"	117:8:2591:2617	148037	2	True				
ANR	148101	IdentifierDecl	pwdbuf		148037	0					
ANR	148102	IdentifierDeclType	struct passwd		148037	0					
ANR	148103	Identifier	pwdbuf		148037	1					
ANR	148104	IdentifierDecl	* pwd		148037	1					
ANR	148105	IdentifierDeclType	struct passwd *		148037	0					
ANR	148106	Identifier	pwd		148037	1					
ANR	148107	ExpressionStatement	"memset ( & pwdbuf , 0 , sizeof ( struct passwd ) )"	118:8:2627:2668	148037	3	True				
ANR	148108	CallExpression	"memset ( & pwdbuf , 0 , sizeof ( struct passwd ) )"		148037	0					
ANR	148109	Callee	memset		148037	0					
ANR	148110	Identifier	memset		148037	0					
ANR	148111	ArgumentList	& pwdbuf		148037	1					
ANR	148112	Argument	& pwdbuf		148037	0					
ANR	148113	UnaryOperationExpression	& pwdbuf		148037	0					
ANR	148114	UnaryOperator	&		148037	0					
ANR	148115	Identifier	pwdbuf		148037	1					
ANR	148116	Argument	0		148037	1					
ANR	148117	PrimaryExpression	0		148037	0					
ANR	148118	Argument	sizeof ( struct passwd )		148037	2					
ANR	148119	SizeofExpression	sizeof ( struct passwd )		148037	0					
ANR	148120	Sizeof	sizeof		148037	0					
ANR	148121	SizeofOperand	struct passwd		148037	1					
ANR	148122	IdentifierDeclStatement	size_t buflen ;	119:8:2678:2691	148037	4	True				
ANR	148123	IdentifierDecl	buflen		148037	0					
ANR	148124	IdentifierDeclType	size_t		148037	0					
ANR	148125	Identifier	buflen		148037	1					
ANR	148126	IdentifierDeclStatement	int err ;	120:8:2701:2708	148037	5	True				
ANR	148127	IdentifierDecl	err		148037	0					
ANR	148128	IdentifierDeclType	int		148037	0					
ANR	148129	Identifier	err		148037	1					
ANR	148130	ForStatement	for ( buflen = 128 ; ; buflen *= 2 )		148037	6					
ANR	148131	ForInit	buflen = 128 ;	122:13:2724:2736	148037	0	True				
ANR	148132	AssignmentExpression	buflen = 128		148037	0		=			
ANR	148133	Identifier	buflen		148037	0					
ANR	148134	PrimaryExpression	128		148037	1					
ANR	148135	AssignmentExpression	buflen *= 2	122:28:2739:2749	148037	1	True	*=			
ANR	148136	Identifier	buflen		148037	0					
ANR	148137	PrimaryExpression	2		148037	1					
ANR	148138	CompoundStatement		21:12:571:587	148037	2					
ANR	148139	IdentifierDeclStatement	char buf [ buflen ] ;	123:12:2766:2782	148037	0	True				
ANR	148140	IdentifierDecl	buf [ buflen ]		148037	0					
ANR	148141	IdentifierDeclType	char [ buflen ]		148037	0					
ANR	148142	Identifier	buf		148037	1					
ANR	148143	Identifier	buflen		148037	2					
ANR	148144	ExpressionStatement	"err = uid >= 0 ? getpwuid_r ( ( uid_t ) uid , & pwdbuf , buf , buflen , & pwd ) : getpwnam_r ( user , & pwdbuf , buf , buflen , & pwd )"	128:12:3023:3153	148037	1	True				
ANR	148145	AssignmentExpression	"err = uid >= 0 ? getpwuid_r ( ( uid_t ) uid , & pwdbuf , buf , buflen , & pwd ) : getpwnam_r ( user , & pwdbuf , buf , buflen , & pwd )"		148037	0		=			
ANR	148146	Identifier	err		148037	0					
ANR	148147	ConditionalExpression	"uid >= 0 ? getpwuid_r ( ( uid_t ) uid , & pwdbuf , buf , buflen , & pwd ) : getpwnam_r ( user , & pwdbuf , buf , buflen , & pwd )"		148037	1					
ANR	148148	Condition	uid >= 0		148037	0					
ANR	148149	RelationalExpression	uid >= 0		148037	0		>=			
ANR	148150	Identifier	uid		148037	0					
ANR	148151	PrimaryExpression	0		148037	1					
ANR	148152	CallExpression	"getpwuid_r ( ( uid_t ) uid , & pwdbuf , buf , buflen , & pwd )"		148037	1					
ANR	148153	Callee	getpwuid_r		148037	0					
ANR	148154	Identifier	getpwuid_r		148037	0					
ANR	148155	ArgumentList	( uid_t ) uid		148037	1					
ANR	148156	Argument	( uid_t ) uid		148037	0					
ANR	148157	CastExpression	( uid_t ) uid		148037	0					
ANR	148158	CastTarget	uid_t		148037	0					
ANR	148159	Identifier	uid		148037	1					
ANR	148160	Argument	& pwdbuf		148037	1					
ANR	148161	UnaryOperationExpression	& pwdbuf		148037	0					
ANR	148162	UnaryOperator	&		148037	0					
ANR	148163	Identifier	pwdbuf		148037	1					
ANR	148164	Argument	buf		148037	2					
ANR	148165	Identifier	buf		148037	0					
ANR	148166	Argument	buflen		148037	3					
ANR	148167	Identifier	buflen		148037	0					
ANR	148168	Argument	& pwd		148037	4					
ANR	148169	UnaryOperationExpression	& pwd		148037	0					
ANR	148170	UnaryOperator	&		148037	0					
ANR	148171	Identifier	pwd		148037	1					
ANR	148172	CallExpression	"getpwnam_r ( user , & pwdbuf , buf , buflen , & pwd )"		148037	2					
ANR	148173	Callee	getpwnam_r		148037	0					
ANR	148174	Identifier	getpwnam_r		148037	0					
ANR	148175	ArgumentList	user		148037	1					
ANR	148176	Argument	user		148037	0					
ANR	148177	Identifier	user		148037	0					
ANR	148178	Argument	& pwdbuf		148037	1					
ANR	148179	UnaryOperationExpression	& pwdbuf		148037	0					
ANR	148180	UnaryOperator	&		148037	0					
ANR	148181	Identifier	pwdbuf		148037	1					
ANR	148182	Argument	buf		148037	2					
ANR	148183	Identifier	buf		148037	0					
ANR	148184	Argument	buflen		148037	3					
ANR	148185	Identifier	buflen		148037	0					
ANR	148186	Argument	& pwd		148037	4					
ANR	148187	UnaryOperationExpression	& pwd		148037	0					
ANR	148188	UnaryOperator	&		148037	0					
ANR	148189	Identifier	pwd		148037	1					
ANR	148190	IfStatement	if ( err == 0 && pwd )		148037	2					
ANR	148191	Condition	err == 0 && pwd	131:16:3172:3186	148037	0	True				
ANR	148192	AndExpression	err == 0 && pwd		148037	0		&&			
ANR	148193	EqualityExpression	err == 0		148037	0		==			
ANR	148194	Identifier	err		148037	0					
ANR	148195	PrimaryExpression	0		148037	1					
ANR	148196	Identifier	pwd		148037	1					
ANR	148197	CompoundStatement		29:33:994:994	148037	1					
ANR	148198	IfStatement	if ( setgid ( pwd -> pw_gid ) != 0 )		148037	0					
ANR	148199	Condition	setgid ( pwd -> pw_gid ) != 0	133:20:3307:3330	148037	0	True				
ANR	148200	EqualityExpression	setgid ( pwd -> pw_gid ) != 0		148037	0		!=			
ANR	148201	CallExpression	setgid ( pwd -> pw_gid )		148037	0					
ANR	148202	Callee	setgid		148037	0					
ANR	148203	Identifier	setgid		148037	0					
ANR	148204	ArgumentList	pwd -> pw_gid		148037	1					
ANR	148205	Argument	pwd -> pw_gid		148037	0					
ANR	148206	PtrMemberAccess	pwd -> pw_gid		148037	0					
ANR	148207	Identifier	pwd		148037	0					
ANR	148208	Identifier	pw_gid		148037	1					
ANR	148209	PrimaryExpression	0		148037	1					
ANR	148210	CompoundStatement		31:46:1138:1138	148037	1					
ANR	148211	ExpressionStatement	"LOGE ( ""Could not change group id to that of run_as user '%s': %s"" , pwd -> pw_name , strerror ( errno ) )"	134:20:3355:3500	148037	0	True				
ANR	148212	CallExpression	"LOGE ( ""Could not change group id to that of run_as user '%s': %s"" , pwd -> pw_name , strerror ( errno ) )"		148037	0					
ANR	148213	Callee	LOGE		148037	0					
ANR	148214	Identifier	LOGE		148037	0					
ANR	148215	ArgumentList	"""Could not change group id to that of run_as user '%s': %s"""		148037	1					
ANR	148216	Argument	"""Could not change group id to that of run_as user '%s': %s"""		148037	0					
ANR	148217	PrimaryExpression	"""Could not change group id to that of run_as user '%s': %s"""		148037	0					
ANR	148218	Argument	pwd -> pw_name		148037	1					
ANR	148219	PtrMemberAccess	pwd -> pw_name		148037	0					
ANR	148220	Identifier	pwd		148037	0					
ANR	148221	Identifier	pw_name		148037	1					
ANR	148222	Argument	strerror ( errno )		148037	2					
ANR	148223	CallExpression	strerror ( errno )		148037	0					
ANR	148224	Callee	strerror		148037	0					
ANR	148225	Identifier	strerror		148037	0					
ANR	148226	ArgumentList	errno		148037	1					
ANR	148227	Argument	errno		148037	0					
ANR	148228	Identifier	errno		148037	0					
ANR	148229	ReturnStatement	return 0 ;	137:20:3522:3530	148037	1	True				
ANR	148230	PrimaryExpression	0		148037	0					
ANR	148231	IfStatement	"if ( initgroups ( pwd -> pw_name , pwd -> pw_gid ) == - 1 )"		148037	1					
ANR	148232	Condition	"initgroups ( pwd -> pw_name , pwd -> pw_gid ) == - 1"	141:20:3590:3632	148037	0	True				
ANR	148233	EqualityExpression	"initgroups ( pwd -> pw_name , pwd -> pw_gid ) == - 1"		148037	0		==			
ANR	148234	CallExpression	"initgroups ( pwd -> pw_name , pwd -> pw_gid )"		148037	0					
ANR	148235	Callee	initgroups		148037	0					
ANR	148236	Identifier	initgroups		148037	0					
ANR	148237	ArgumentList	pwd -> pw_name		148037	1					
ANR	148238	Argument	pwd -> pw_name		148037	0					
ANR	148239	PtrMemberAccess	pwd -> pw_name		148037	0					
ANR	148240	Identifier	pwd		148037	0					
ANR	148241	Identifier	pw_name		148037	1					
ANR	148242	Argument	pwd -> pw_gid		148037	1					
ANR	148243	PtrMemberAccess	pwd -> pw_gid		148037	0					
ANR	148244	Identifier	pwd		148037	0					
ANR	148245	Identifier	pw_gid		148037	1					
ANR	148246	UnaryOperationExpression	- 1		148037	1					
ANR	148247	UnaryOperator	-		148037	0					
ANR	148248	PrimaryExpression	1		148037	1					
ANR	148249	CompoundStatement		39:65:1440:1440	148037	1					
ANR	148250	ExpressionStatement	"LOGE ( ""Could not change supplementary groups for user '%s'."" , pwd -> pw_name )"	142:20:3657:3731	148037	0	True				
ANR	148251	CallExpression	"LOGE ( ""Could not change supplementary groups for user '%s'."" , pwd -> pw_name )"		148037	0					
ANR	148252	Callee	LOGE		148037	0					
ANR	148253	Identifier	LOGE		148037	0					
ANR	148254	ArgumentList	"""Could not change supplementary groups for user '%s'."""		148037	1					
ANR	148255	Argument	"""Could not change supplementary groups for user '%s'."""		148037	0					
ANR	148256	PrimaryExpression	"""Could not change supplementary groups for user '%s'."""		148037	0					
ANR	148257	Argument	pwd -> pw_name		148037	1					
ANR	148258	PtrMemberAccess	pwd -> pw_name		148037	0					
ANR	148259	Identifier	pwd		148037	0					
ANR	148260	Identifier	pw_name		148037	1					
ANR	148261	ReturnStatement	return 0 ;	143:20:3753:3761	148037	1	True				
ANR	148262	PrimaryExpression	0		148037	0					
ANR	148263	IfStatement	if ( setuid ( pwd -> pw_uid ) != 0 )		148037	2					
ANR	148264	Condition	setuid ( pwd -> pw_uid ) != 0	147:20:3809:3832	148037	0	True				
ANR	148265	EqualityExpression	setuid ( pwd -> pw_uid ) != 0		148037	0		!=			
ANR	148266	CallExpression	setuid ( pwd -> pw_uid )		148037	0					
ANR	148267	Callee	setuid		148037	0					
ANR	148268	Identifier	setuid		148037	0					
ANR	148269	ArgumentList	pwd -> pw_uid		148037	1					
ANR	148270	Argument	pwd -> pw_uid		148037	0					
ANR	148271	PtrMemberAccess	pwd -> pw_uid		148037	0					
ANR	148272	Identifier	pwd		148037	0					
ANR	148273	Identifier	pw_uid		148037	1					
ANR	148274	PrimaryExpression	0		148037	1					
ANR	148275	CompoundStatement		45:46:1640:1640	148037	1					
ANR	148276	ExpressionStatement	"LOGE ( ""Could not change user id to that of run_as user '%s': %s"" , pwd -> pw_name , strerror ( errno ) )"	148:20:3857:4001	148037	0	True				
ANR	148277	CallExpression	"LOGE ( ""Could not change user id to that of run_as user '%s': %s"" , pwd -> pw_name , strerror ( errno ) )"		148037	0					
ANR	148278	Callee	LOGE		148037	0					
ANR	148279	Identifier	LOGE		148037	0					
ANR	148280	ArgumentList	"""Could not change user id to that of run_as user '%s': %s"""		148037	1					
ANR	148281	Argument	"""Could not change user id to that of run_as user '%s': %s"""		148037	0					
ANR	148282	PrimaryExpression	"""Could not change user id to that of run_as user '%s': %s"""		148037	0					
ANR	148283	Argument	pwd -> pw_name		148037	1					
ANR	148284	PtrMemberAccess	pwd -> pw_name		148037	0					
ANR	148285	Identifier	pwd		148037	0					
ANR	148286	Identifier	pw_name		148037	1					
ANR	148287	Argument	strerror ( errno )		148037	2					
ANR	148288	CallExpression	strerror ( errno )		148037	0					
ANR	148289	Callee	strerror		148037	0					
ANR	148290	Identifier	strerror		148037	0					
ANR	148291	ArgumentList	errno		148037	1					
ANR	148292	Argument	errno		148037	0					
ANR	148293	Identifier	errno		148037	0					
ANR	148294	ReturnStatement	return 0 ;	151:20:4023:4031	148037	1	True				
ANR	148295	PrimaryExpression	0		148037	0					
ANR	148296	BreakStatement	break ;	153:16:4067:4072	148037	3	True				
ANR	148297	ElseStatement	else		148037	0					
ANR	148298	IfStatement	if ( err != ERANGE )		148037	0					
ANR	148299	Condition	err != ERANGE	154:23:4097:4109	148037	0	True				
ANR	148300	EqualityExpression	err != ERANGE		148037	0		!=			
ANR	148301	Identifier	err		148037	0					
ANR	148302	Identifier	ERANGE		148037	1					
ANR	148303	CompoundStatement		52:38:1917:1917	148037	1					
ANR	148304	IfStatement	if ( err )		148037	0					
ANR	148305	Condition	err	155:20:4134:4136	148037	0	True				
ANR	148306	Identifier	err		148037	0					
ANR	148307	CompoundStatement		53:25:1944:1944	148037	1					
ANR	148308	ExpressionStatement	"LOGE ( ""run_as user '%s' could not be found: %s"" , user , strerror ( err ) )"	156:20:4161:4257	148037	0	True				
ANR	148309	CallExpression	"LOGE ( ""run_as user '%s' could not be found: %s"" , user , strerror ( err ) )"		148037	0					
ANR	148310	Callee	LOGE		148037	0					
ANR	148311	Identifier	LOGE		148037	0					
ANR	148312	ArgumentList	"""run_as user '%s' could not be found: %s"""		148037	1					
ANR	148313	Argument	"""run_as user '%s' could not be found: %s"""		148037	0					
ANR	148314	PrimaryExpression	"""run_as user '%s' could not be found: %s"""		148037	0					
ANR	148315	Argument	user		148037	1					
ANR	148316	Identifier	user		148037	0					
ANR	148317	Argument	strerror ( err )		148037	2					
ANR	148318	CallExpression	strerror ( err )		148037	0					
ANR	148319	Callee	strerror		148037	0					
ANR	148320	Identifier	strerror		148037	0					
ANR	148321	ArgumentList	err		148037	1					
ANR	148322	Argument	err		148037	0					
ANR	148323	Identifier	err		148037	0					
ANR	148324	ElseStatement	else		148037	0					
ANR	148325	CompoundStatement		56:23:2087:2087	148037	0					
ANR	148326	ExpressionStatement	"LOGE ( ""run_as user '%s' could not be found."" , user )"	159:20:4304:4354	148037	0	True				
ANR	148327	CallExpression	"LOGE ( ""run_as user '%s' could not be found."" , user )"		148037	0					
ANR	148328	Callee	LOGE		148037	0					
ANR	148329	Identifier	LOGE		148037	0					
ANR	148330	ArgumentList	"""run_as user '%s' could not be found."""		148037	1					
ANR	148331	Argument	"""run_as user '%s' could not be found."""		148037	0					
ANR	148332	PrimaryExpression	"""run_as user '%s' could not be found."""		148037	0					
ANR	148333	Argument	user		148037	1					
ANR	148334	Identifier	user		148037	0					
ANR	148335	ReturnStatement	return 0 ;	161:16:4390:4398	148037	1	True				
ANR	148336	PrimaryExpression	0		148037	0					
ANR	148337	ElseStatement	else		148037	0					
ANR	148338	IfStatement	if ( buflen >= 16 * 1024 )		148037	0					
ANR	148339	Condition	buflen >= 16 * 1024	162:23:4423:4441	148037	0	True				
ANR	148340	RelationalExpression	buflen >= 16 * 1024		148037	0		>=			
ANR	148341	Identifier	buflen		148037	0					
ANR	148342	MultiplicativeExpression	16 * 1024		148037	1		*			
ANR	148343	PrimaryExpression	16		148037	0					
ANR	148344	PrimaryExpression	1024		148037	1					
ANR	148345	CompoundStatement		60:44:2249:2249	148037	1					
ANR	148346	ExpressionStatement	"LOGE ( ""getpwnam_r() requires more than %u bytes of buffer space."" , ( unsigned ) buflen )"	165:16:4617:4741	148037	0	True				
ANR	148347	CallExpression	"LOGE ( ""getpwnam_r() requires more than %u bytes of buffer space."" , ( unsigned ) buflen )"		148037	0					
ANR	148348	Callee	LOGE		148037	0					
ANR	148349	Identifier	LOGE		148037	0					
ANR	148350	ArgumentList	"""getpwnam_r() requires more than %u bytes of buffer space."""		148037	1					
ANR	148351	Argument	"""getpwnam_r() requires more than %u bytes of buffer space."""		148037	0					
ANR	148352	PrimaryExpression	"""getpwnam_r() requires more than %u bytes of buffer space."""		148037	0					
ANR	148353	Argument	( unsigned ) buflen		148037	1					
ANR	148354	CastExpression	( unsigned ) buflen		148037	0					
ANR	148355	CastTarget	unsigned		148037	0					
ANR	148356	Identifier	buflen		148037	1					
ANR	148357	ReturnStatement	return 0 ;	168:16:4759:4767	148037	1	True				
ANR	148358	PrimaryExpression	0		148037	0					
ANR	148359	ReturnStatement	return 1 ;	198:4:5805:5813	148037	1	True				
ANR	148360	PrimaryExpression	1		148037	0					
ANR	148361	ReturnType	int		148037	1					
ANR	148362	Identifier	run_as		148037	2					
ANR	148363	ParameterList	const char * user		148037	3					
ANR	148364	Parameter	const char * user	102:7:2176:2191	148037	0	True				
ANR	148365	ParameterType	const char *		148037	0					
ANR	148366	Identifier	user		148037	1					
ANR	148367	CFGEntryNode	ENTRY		148037		True				
ANR	148368	CFGExitNode	EXIT		148037		True				
ANR	148369	InfiniteForNode	true		148037		True				
ANR	148370	Symbol	ss_isnumeric		148037						
ANR	148371	Symbol	getpwuid_r		148037						
ANR	148372	Symbol	getpwnam_r		148037						
ANR	148373	Symbol	pwdbuf		148037						
ANR	148374	Symbol	uid		148037						
ANR	148375	Symbol	pwd -> pw_name		148037						
ANR	148376	Symbol	strtol		148037						
ANR	148377	Symbol	initgroups		148037						
ANR	148378	Symbol	ERANGE		148037						
ANR	148379	Symbol	buflen		148037						
ANR	148380	Symbol	& pwdbuf		148037						
ANR	148381	Symbol	pwd -> pw_uid		148037						
ANR	148382	Symbol	errno		148037						
ANR	148383	Symbol	setgid		148037						
ANR	148384	Symbol	* user		148037						
ANR	148385	Symbol	err		148037						
ANR	148386	Symbol	& pwd		148037						
ANR	148387	Symbol	endptr		148037						
ANR	148388	Symbol	& endptr		148037						
ANR	148389	Symbol	* pwd		148037						
ANR	148390	Symbol	pwd -> pw_gid		148037						
ANR	148391	Symbol	setuid		148037						
ANR	148392	Symbol	strerror		148037						
ANR	148393	Symbol	buf		148037						
ANR	148394	Symbol	pwd		148037						
ANR	148395	Symbol	user		148037						
ANR	148396	Function	ss_strndup	201:0:5818:6047							
ANR	148397	FunctionDef	"ss_strndup (const char * s , size_t n)"		148396	0					
ANR	148398	CompoundStatement		203:0:5861:6047	148396	0					
ANR	148399	IdentifierDeclStatement	size_t len = strlen ( s ) ;	204:4:5867:5889	148396	0	True				
ANR	148400	IdentifierDecl	len = strlen ( s )		148396	0					
ANR	148401	IdentifierDeclType	size_t		148396	0					
ANR	148402	Identifier	len		148396	1					
ANR	148403	AssignmentExpression	len = strlen ( s )		148396	2		=			
ANR	148404	Identifier	len		148396	0					
ANR	148405	CallExpression	strlen ( s )		148396	1					
ANR	148406	Callee	strlen		148396	0					
ANR	148407	Identifier	strlen		148396	0					
ANR	148408	ArgumentList	s		148396	1					
ANR	148409	Argument	s		148396	0					
ANR	148410	Identifier	s		148396	0					
ANR	148411	IdentifierDeclStatement	char * ret ;	205:4:5895:5904	148396	1	True				
ANR	148412	IdentifierDecl	* ret		148396	0					
ANR	148413	IdentifierDeclType	char *		148396	0					
ANR	148414	Identifier	ret		148396	1					
ANR	148415	IfStatement	if ( len <= n )		148396	2					
ANR	148416	Condition	len <= n	207:8:5915:5922	148396	0	True				
ANR	148417	RelationalExpression	len <= n		148396	0		<=			
ANR	148418	Identifier	len		148396	0					
ANR	148419	Identifier	n		148396	1					
ANR	148420	CompoundStatement		5:18:63:63	148396	1					
ANR	148421	ReturnStatement	return strdup ( s ) ;	208:8:5935:5951	148396	0	True				
ANR	148422	CallExpression	strdup ( s )		148396	0					
ANR	148423	Callee	strdup		148396	0					
ANR	148424	Identifier	strdup		148396	0					
ANR	148425	ArgumentList	s		148396	1					
ANR	148426	Argument	s		148396	0					
ANR	148427	Identifier	s		148396	0					
ANR	148428	ExpressionStatement	ret = ss_malloc ( n + 1 )	211:4:5964:5986	148396	3	True				
ANR	148429	AssignmentExpression	ret = ss_malloc ( n + 1 )		148396	0		=			
ANR	148430	Identifier	ret		148396	0					
ANR	148431	CallExpression	ss_malloc ( n + 1 )		148396	1					
ANR	148432	Callee	ss_malloc		148396	0					
ANR	148433	Identifier	ss_malloc		148396	0					
ANR	148434	ArgumentList	n + 1		148396	1					
ANR	148435	Argument	n + 1		148396	0					
ANR	148436	AdditiveExpression	n + 1		148396	0		+			
ANR	148437	Identifier	n		148396	0					
ANR	148438	PrimaryExpression	1		148396	1					
ANR	148439	ExpressionStatement	"strncpy ( ret , s , n )"	212:4:5992:6010	148396	4	True				
ANR	148440	CallExpression	"strncpy ( ret , s , n )"		148396	0					
ANR	148441	Callee	strncpy		148396	0					
ANR	148442	Identifier	strncpy		148396	0					
ANR	148443	ArgumentList	ret		148396	1					
ANR	148444	Argument	ret		148396	0					
ANR	148445	Identifier	ret		148396	0					
ANR	148446	Argument	s		148396	1					
ANR	148447	Identifier	s		148396	0					
ANR	148448	Argument	n		148396	2					
ANR	148449	Identifier	n		148396	0					
ANR	148450	ExpressionStatement	ret [ n ] = '\\0'	213:4:6016:6029	148396	5	True				
ANR	148451	AssignmentExpression	ret [ n ] = '\\0'		148396	0		=			
ANR	148452	ArrayIndexing	ret [ n ]		148396	0					
ANR	148453	Identifier	ret		148396	0					
ANR	148454	Identifier	n		148396	1					
ANR	148455	PrimaryExpression	'\\0'		148396	1					
ANR	148456	ReturnStatement	return ret ;	214:4:6035:6045	148396	6	True				
ANR	148457	Identifier	ret		148396	0					
ANR	148458	ReturnType	char *		148396	1					
ANR	148459	Identifier	ss_strndup		148396	2					
ANR	148460	ParameterList	"const char * s , size_t n"		148396	3					
ANR	148461	Parameter	const char * s	202:11:5836:5848	148396	0	True				
ANR	148462	ParameterType	const char *		148396	0					
ANR	148463	Identifier	s		148396	1					
ANR	148464	Parameter	size_t n	202:26:5851:5858	148396	1	True				
ANR	148465	ParameterType	size_t		148396	0					
ANR	148466	Identifier	n		148396	1					
ANR	148467	CFGEntryNode	ENTRY		148396		True				
ANR	148468	CFGExitNode	EXIT		148396		True				
ANR	148469	Symbol	ret		148396						
ANR	148470	Symbol	strlen		148396						
ANR	148471	Symbol	s		148396						
ANR	148472	Symbol	len		148396						
ANR	148473	Symbol	* n		148396						
ANR	148474	Symbol	ss_malloc		148396						
ANR	148475	Symbol	strdup		148396						
ANR	148476	Symbol	* ret		148396						
ANR	148477	Symbol	n		148396						
ANR	148478	Function	FATAL	217:0:6050:6115							
ANR	148479	FunctionDef	FATAL (const char * msg)		148478	0					
ANR	148480	CompoundStatement		219:0:6078:6115	148478	0					
ANR	148481	ExpressionStatement	"LOGE ( ""%s"" , msg )"	220:4:6084:6099	148478	0	True				
ANR	148482	CallExpression	"LOGE ( ""%s"" , msg )"		148478	0					
ANR	148483	Callee	LOGE		148478	0					
ANR	148484	Identifier	LOGE		148478	0					
ANR	148485	ArgumentList	"""%s"""		148478	1					
ANR	148486	Argument	"""%s"""		148478	0					
ANR	148487	PrimaryExpression	"""%s"""		148478	0					
ANR	148488	Argument	msg		148478	1					
ANR	148489	Identifier	msg		148478	0					
ANR	148490	ExpressionStatement	exit ( - 1 )	221:4:6105:6113	148478	1	True				
ANR	148491	CallExpression	exit ( - 1 )		148478	0					
ANR	148492	Callee	exit		148478	0					
ANR	148493	Identifier	exit		148478	0					
ANR	148494	ArgumentList	- 1		148478	1					
ANR	148495	Argument	- 1		148478	0					
ANR	148496	UnaryOperationExpression	- 1		148478	0					
ANR	148497	UnaryOperator	-		148478	0					
ANR	148498	PrimaryExpression	1		148478	1					
ANR	148499	ReturnType	void		148478	1					
ANR	148500	Identifier	FATAL		148478	2					
ANR	148501	ParameterList	const char * msg		148478	3					
ANR	148502	Parameter	const char * msg	218:6:6061:6075	148478	0	True				
ANR	148503	ParameterType	const char *		148478	0					
ANR	148504	Identifier	msg		148478	1					
ANR	148505	CFGEntryNode	ENTRY		148478		True				
ANR	148506	CFGExitNode	EXIT		148478		True				
ANR	148507	Symbol	msg		148478						
ANR	148508	Function	ss_malloc	224:0:6118:6245							
ANR	148509	FunctionDef	ss_malloc (size_t size)		148508	0					
ANR	148510	CompoundStatement		226:0:6148:6245	148508	0					
ANR	148511	IdentifierDeclStatement	void * tmp = malloc ( size ) ;	227:4:6154:6178	148508	0	True				
ANR	148512	IdentifierDecl	* tmp = malloc ( size )		148508	0					
ANR	148513	IdentifierDeclType	void *		148508	0					
ANR	148514	Identifier	tmp		148508	1					
ANR	148515	AssignmentExpression	* tmp = malloc ( size )		148508	2		=			
ANR	148516	Identifier	tmp		148508	0					
ANR	148517	CallExpression	malloc ( size )		148508	1					
ANR	148518	Callee	malloc		148508	0					
ANR	148519	Identifier	malloc		148508	0					
ANR	148520	ArgumentList	size		148508	1					
ANR	148521	Argument	size		148508	0					
ANR	148522	Identifier	size		148508	0					
ANR	148523	IfStatement	if ( tmp == NULL )		148508	1					
ANR	148524	Condition	tmp == NULL	228:8:6188:6198	148508	0	True				
ANR	148525	EqualityExpression	tmp == NULL		148508	0		==			
ANR	148526	Identifier	tmp		148508	0					
ANR	148527	Identifier	NULL		148508	1					
ANR	148528	ExpressionStatement	exit ( EXIT_FAILURE )	229:8:6209:6227	148508	1	True				
ANR	148529	CallExpression	exit ( EXIT_FAILURE )		148508	0					
ANR	148530	Callee	exit		148508	0					
ANR	148531	Identifier	exit		148508	0					
ANR	148532	ArgumentList	EXIT_FAILURE		148508	1					
ANR	148533	Argument	EXIT_FAILURE		148508	0					
ANR	148534	Identifier	EXIT_FAILURE		148508	0					
ANR	148535	ReturnStatement	return tmp ;	230:4:6233:6243	148508	2	True				
ANR	148536	Identifier	tmp		148508	0					
ANR	148537	ReturnType	void *		148508	1					
ANR	148538	Identifier	ss_malloc		148508	2					
ANR	148539	ParameterList	size_t size		148508	3					
ANR	148540	Parameter	size_t size	225:10:6135:6145	148508	0	True				
ANR	148541	ParameterType	size_t		148508	0					
ANR	148542	Identifier	size		148508	1					
ANR	148543	CFGEntryNode	ENTRY		148508		True				
ANR	148544	CFGExitNode	EXIT		148508		True				
ANR	148545	Symbol	malloc		148508						
ANR	148546	Symbol	NULL		148508						
ANR	148547	Symbol	size		148508						
ANR	148548	Symbol	EXIT_FAILURE		148508						
ANR	148549	Symbol	tmp		148508						
ANR	148550	Function	ss_align	233:0:6248:6508							
ANR	148551	FunctionDef	ss_align (size_t size)		148550	0					
ANR	148552	CompoundStatement		235:0:6277:6508	148550	0					
ANR	148553	IdentifierDeclStatement	int err ;	236:4:6283:6290	148550	0	True				
ANR	148554	IdentifierDecl	err		148550	0					
ANR	148555	IdentifierDeclType	int		148550	0					
ANR	148556	Identifier	err		148550	1					
ANR	148557	IdentifierDeclStatement	void * tmp = NULL ;	237:4:6296:6312	148550	1	True				
ANR	148558	IdentifierDecl	* tmp = NULL		148550	0					
ANR	148559	IdentifierDeclType	void *		148550	0					
ANR	148560	Identifier	tmp		148550	1					
ANR	148561	AssignmentExpression	* tmp = NULL		148550	2		=			
ANR	148562	Identifier	NULL		148550	0					
ANR	148563	Identifier	NULL		148550	1					
ANR	148564	ExpressionStatement	"err = posix_memalign ( & tmp , sizeof ( void * ) , size )"	239:4:6345:6393	148550	2	True				
ANR	148565	AssignmentExpression	"err = posix_memalign ( & tmp , sizeof ( void * ) , size )"		148550	0		=			
ANR	148566	Identifier	err		148550	0					
ANR	148567	CallExpression	"posix_memalign ( & tmp , sizeof ( void * ) , size )"		148550	1					
ANR	148568	Callee	posix_memalign		148550	0					
ANR	148569	Identifier	posix_memalign		148550	0					
ANR	148570	ArgumentList	& tmp		148550	1					
ANR	148571	Argument	& tmp		148550	0					
ANR	148572	UnaryOperationExpression	& tmp		148550	0					
ANR	148573	UnaryOperator	&		148550	0					
ANR	148574	Identifier	tmp		148550	1					
ANR	148575	Argument	sizeof ( void * )		148550	1					
ANR	148576	SizeofExpression	sizeof ( void * )		148550	0					
ANR	148577	Sizeof	sizeof		148550	0					
ANR	148578	SizeofOperand	void *		148550	1					
ANR	148579	Argument	size		148550	2					
ANR	148580	Identifier	size		148550	0					
ANR	148581	IfStatement	if ( err )		148550	3					
ANR	148582	Condition	err	243:8:6430:6432	148550	0	True				
ANR	148583	Identifier	err		148550	0					
ANR	148584	CompoundStatement		9:13:157:157	148550	1					
ANR	148585	ReturnStatement	return ss_malloc ( size ) ;	244:8:6445:6467	148550	0	True				
ANR	148586	CallExpression	ss_malloc ( size )		148550	0					
ANR	148587	Callee	ss_malloc		148550	0					
ANR	148588	Identifier	ss_malloc		148550	0					
ANR	148589	ArgumentList	size		148550	1					
ANR	148590	Argument	size		148550	0					
ANR	148591	Identifier	size		148550	0					
ANR	148592	ElseStatement	else		148550	0					
ANR	148593	CompoundStatement		11:11:202:202	148550	0					
ANR	148594	ReturnStatement	return tmp ;	246:8:6490:6500	148550	0	True				
ANR	148595	Identifier	tmp		148550	0					
ANR	148596	ReturnType	void *		148550	1					
ANR	148597	Identifier	ss_align		148550	2					
ANR	148598	ParameterList	size_t size		148550	3					
ANR	148599	Parameter	size_t size	234:9:6264:6274	148550	0	True				
ANR	148600	ParameterType	size_t		148550	0					
ANR	148601	Identifier	size		148550	1					
ANR	148602	CFGEntryNode	ENTRY		148550		True				
ANR	148603	CFGExitNode	EXIT		148550		True				
ANR	148604	Symbol	NULL		148550						
ANR	148605	Symbol	size		148550						
ANR	148606	Symbol	err		148550						
ANR	148607	Symbol	tmp		148550						
ANR	148608	Symbol	posix_memalign		148550						
ANR	148609	Symbol	ss_malloc		148550						
ANR	148610	Symbol	& tmp		148550						
ANR	148611	Function	ss_realloc	250:0:6511:6711							
ANR	148612	FunctionDef	"ss_realloc (void * ptr , size_t new_size)"		148611	0					
ANR	148613	CompoundStatement		252:0:6557:6711	148611	0					
ANR	148614	Statement	void	253:4:6563:6566	148611	0	True				
ANR	148615	Statement	*	253:9:6568:6568	148611	1	True				
ANR	148616	Statement	new	253:10:6569:6571	148611	2	True				
ANR	148617	Statement	=	253:14:6573:6573	148611	3	True				
ANR	148618	ExpressionStatement	"realloc ( ptr , new_size )"	253:16:6575:6597	148611	4	True				
ANR	148619	CallExpression	"realloc ( ptr , new_size )"		148611	0					
ANR	148620	Callee	realloc		148611	0					
ANR	148621	Identifier	realloc		148611	0					
ANR	148622	ArgumentList	ptr		148611	1					
ANR	148623	Argument	ptr		148611	0					
ANR	148624	Identifier	ptr		148611	0					
ANR	148625	Argument	new_size		148611	1					
ANR	148626	Identifier	new_size		148611	0					
ANR	148627	Statement	if	254:4:6603:6604	148611	5	True				
ANR	148628	Statement	(	254:7:6606:6606	148611	6	True				
ANR	148629	Statement	new	254:8:6607:6609	148611	7	True				
ANR	148630	Statement	==	254:12:6611:6612	148611	8	True				
ANR	148631	Statement	NULL	254:15:6614:6617	148611	9	True				
ANR	148632	Statement	)	254:19:6618:6618	148611	10	True				
ANR	148633	CompoundStatement		3:21:62:62	148611	11					
ANR	148634	ExpressionStatement	free ( ptr )	255:8:6630:6639	148611	0	True				
ANR	148635	CallExpression	free ( ptr )		148611	0					
ANR	148636	Callee	free		148611	0					
ANR	148637	Identifier	free		148611	0					
ANR	148638	ArgumentList	ptr		148611	1					
ANR	148639	Argument	ptr		148611	0					
ANR	148640	Identifier	ptr		148611	0					
ANR	148641	ExpressionStatement	ptr = NULL	256:8:6649:6659	148611	1	True				
ANR	148642	AssignmentExpression	ptr = NULL		148611	0		=			
ANR	148643	Identifier	ptr		148611	0					
ANR	148644	Identifier	NULL		148611	1					
ANR	148645	ExpressionStatement	exit ( EXIT_FAILURE )	257:8:6669:6687	148611	2	True				
ANR	148646	CallExpression	exit ( EXIT_FAILURE )		148611	0					
ANR	148647	Callee	exit		148611	0					
ANR	148648	Identifier	exit		148611	0					
ANR	148649	ArgumentList	EXIT_FAILURE		148611	1					
ANR	148650	Argument	EXIT_FAILURE		148611	0					
ANR	148651	Identifier	EXIT_FAILURE		148611	0					
ANR	148652	Statement	return	259:4:6699:6704	148611	12	True				
ANR	148653	Statement	new	259:11:6706:6708	148611	13	True				
ANR	148654	ExpressionStatement		259:14:6709:6709	148611	14	True				
ANR	148655	ReturnType	void *		148611	1					
ANR	148656	Identifier	ss_realloc		148611	2					
ANR	148657	ParameterList	"void * ptr , size_t new_size"		148611	3					
ANR	148658	Parameter	void * ptr	251:11:6529:6537	148611	0	True				
ANR	148659	ParameterType	void *		148611	0					
ANR	148660	Identifier	ptr		148611	1					
ANR	148661	Parameter	size_t new_size	251:22:6540:6554	148611	1	True				
ANR	148662	ParameterType	size_t		148611	0					
ANR	148663	Identifier	new_size		148611	1					
ANR	148664	CFGEntryNode	ENTRY		148611		True				
ANR	148665	CFGExitNode	EXIT		148611		True				
ANR	148666	Symbol	NULL		148611						
ANR	148667	Symbol	EXIT_FAILURE		148611						
ANR	148668	Symbol	new_size		148611						
ANR	148669	Symbol	ptr		148611						
ANR	148670	Function	usage	262:0:6714:11592							
ANR	148671	FunctionDef	usage ()		148670	0					
ANR	148672	CompoundStatement		264:0:6727:11592	148670	0					
ANR	148673	ExpressionStatement	"printf ( ""\\n"" )"	265:4:6733:6745	148670	0	True				
ANR	148674	CallExpression	"printf ( ""\\n"" )"		148670	0					
ANR	148675	Callee	printf		148670	0					
ANR	148676	Identifier	printf		148670	0					
ANR	148677	ArgumentList	"""\\n"""		148670	1					
ANR	148678	Argument	"""\\n"""		148670	0					
ANR	148679	PrimaryExpression	"""\\n"""		148670	0					
ANR	148680	ExpressionStatement	"printf ( ""shadowsocks-libev %s\\n\\n"" , VERSION )"	266:4:6751:6794	148670	1	True				
ANR	148681	CallExpression	"printf ( ""shadowsocks-libev %s\\n\\n"" , VERSION )"		148670	0					
ANR	148682	Callee	printf		148670	0					
ANR	148683	Identifier	printf		148670	0					
ANR	148684	ArgumentList	"""shadowsocks-libev %s\\n\\n"""		148670	1					
ANR	148685	Argument	"""shadowsocks-libev %s\\n\\n"""		148670	0					
ANR	148686	PrimaryExpression	"""shadowsocks-libev %s\\n\\n"""		148670	0					
ANR	148687	Argument	VERSION		148670	1					
ANR	148688	Identifier	VERSION		148670	0					
ANR	148689	ExpressionStatement	"printf ( ""  maintained by Max Lv <max.c.lv@gmail.com> and Linus Yang <laokongzi@gmail.com>\\n\\n"" )"	267:4:6800:6903	148670	2	True				
ANR	148690	CallExpression	"printf ( ""  maintained by Max Lv <max.c.lv@gmail.com> and Linus Yang <laokongzi@gmail.com>\\n\\n"" )"		148670	0					
ANR	148691	Callee	printf		148670	0					
ANR	148692	Identifier	printf		148670	0					
ANR	148693	ArgumentList	"""  maintained by Max Lv <max.c.lv@gmail.com> and Linus Yang <laokongzi@gmail.com>\\n\\n"""		148670	1					
ANR	148694	Argument	"""  maintained by Max Lv <max.c.lv@gmail.com> and Linus Yang <laokongzi@gmail.com>\\n\\n"""		148670	0					
ANR	148695	PrimaryExpression	"""  maintained by Max Lv <max.c.lv@gmail.com> and Linus Yang <laokongzi@gmail.com>\\n\\n"""		148670	0					
ANR	148696	ExpressionStatement	"printf ( ""  usage:\\n\\n"" )"	269:4:6909:6931	148670	3	True				
ANR	148697	CallExpression	"printf ( ""  usage:\\n\\n"" )"		148670	0					
ANR	148698	Callee	printf		148670	0					
ANR	148699	Identifier	printf		148670	0					
ANR	148700	ArgumentList	"""  usage:\\n\\n"""		148670	1					
ANR	148701	Argument	"""  usage:\\n\\n"""		148670	0					
ANR	148702	PrimaryExpression	"""  usage:\\n\\n"""		148670	0					
ANR	148703	ExpressionStatement	"printf ( ""    ss-local\\n"" )"	271:4:6957:6981	148670	4	True				
ANR	148704	CallExpression	"printf ( ""    ss-local\\n"" )"		148670	0					
ANR	148705	Callee	printf		148670	0					
ANR	148706	Identifier	printf		148670	0					
ANR	148707	ArgumentList	"""    ss-local\\n"""		148670	1					
ANR	148708	Argument	"""    ss-local\\n"""		148670	0					
ANR	148709	PrimaryExpression	"""    ss-local\\n"""		148670	0					
ANR	148710	ExpressionStatement	"printf ( ""\\n"" )"	281:4:7198:7210	148670	5	True				
ANR	148711	CallExpression	"printf ( ""\\n"" )"		148670	0					
ANR	148712	Callee	printf		148670	0					
ANR	148713	Identifier	printf		148670	0					
ANR	148714	ArgumentList	"""\\n"""		148670	1					
ANR	148715	Argument	"""\\n"""		148670	0					
ANR	148716	PrimaryExpression	"""\\n"""		148670	0					
ANR	148717	ExpressionStatement	"printf ( ""       -s <server_host>           Host name or IP address of your remote server.\\n"" )"	282:4:7216:7317	148670	6	True				
ANR	148718	CallExpression	"printf ( ""       -s <server_host>           Host name or IP address of your remote server.\\n"" )"		148670	0					
ANR	148719	Callee	printf		148670	0					
ANR	148720	Identifier	printf		148670	0					
ANR	148721	ArgumentList	"""       -s <server_host>           Host name or IP address of your remote server.\\n"""		148670	1					
ANR	148722	Argument	"""       -s <server_host>           Host name or IP address of your remote server.\\n"""		148670	0					
ANR	148723	PrimaryExpression	"""       -s <server_host>           Host name or IP address of your remote server.\\n"""		148670	0					
ANR	148724	ExpressionStatement	"printf ( ""       -p <server_port>           Port number of your remote server.\\n"" )"	284:4:7323:7412	148670	7	True				
ANR	148725	CallExpression	"printf ( ""       -p <server_port>           Port number of your remote server.\\n"" )"		148670	0					
ANR	148726	Callee	printf		148670	0					
ANR	148727	Identifier	printf		148670	0					
ANR	148728	ArgumentList	"""       -p <server_port>           Port number of your remote server.\\n"""		148670	1					
ANR	148729	Argument	"""       -p <server_port>           Port number of your remote server.\\n"""		148670	0					
ANR	148730	PrimaryExpression	"""       -p <server_port>           Port number of your remote server.\\n"""		148670	0					
ANR	148731	ExpressionStatement	"printf ( ""       -l <local_port>            Port number of your local server.\\n"" )"	286:4:7418:7506	148670	8	True				
ANR	148732	CallExpression	"printf ( ""       -l <local_port>            Port number of your local server.\\n"" )"		148670	0					
ANR	148733	Callee	printf		148670	0					
ANR	148734	Identifier	printf		148670	0					
ANR	148735	ArgumentList	"""       -l <local_port>            Port number of your local server.\\n"""		148670	1					
ANR	148736	Argument	"""       -l <local_port>            Port number of your local server.\\n"""		148670	0					
ANR	148737	PrimaryExpression	"""       -l <local_port>            Port number of your local server.\\n"""		148670	0					
ANR	148738	ExpressionStatement	"printf ( ""       -k <password>              Password of your remote server.\\n"" )"	288:4:7512:7598	148670	9	True				
ANR	148739	CallExpression	"printf ( ""       -k <password>              Password of your remote server.\\n"" )"		148670	0					
ANR	148740	Callee	printf		148670	0					
ANR	148741	Identifier	printf		148670	0					
ANR	148742	ArgumentList	"""       -k <password>              Password of your remote server.\\n"""		148670	1					
ANR	148743	Argument	"""       -k <password>              Password of your remote server.\\n"""		148670	0					
ANR	148744	PrimaryExpression	"""       -k <password>              Password of your remote server.\\n"""		148670	0					
ANR	148745	ExpressionStatement	"printf ( ""       -m <encrypt_method>        Encrypt method: rc4-md5, \\n"" )"	290:4:7604:7684	148670	10	True				
ANR	148746	CallExpression	"printf ( ""       -m <encrypt_method>        Encrypt method: rc4-md5, \\n"" )"		148670	0					
ANR	148747	Callee	printf		148670	0					
ANR	148748	Identifier	printf		148670	0					
ANR	148749	ArgumentList	"""       -m <encrypt_method>        Encrypt method: rc4-md5, \\n"""		148670	1					
ANR	148750	Argument	"""       -m <encrypt_method>        Encrypt method: rc4-md5, \\n"""		148670	0					
ANR	148751	PrimaryExpression	"""       -m <encrypt_method>        Encrypt method: rc4-md5, \\n"""		148670	0					
ANR	148752	ExpressionStatement	"printf ( ""                                  aes-128-gcm, aes-192-gcm, aes-256-gcm,\\n"" )"	292:4:7690:7783	148670	11	True				
ANR	148753	CallExpression	"printf ( ""                                  aes-128-gcm, aes-192-gcm, aes-256-gcm,\\n"" )"		148670	0					
ANR	148754	Callee	printf		148670	0					
ANR	148755	Identifier	printf		148670	0					
ANR	148756	ArgumentList	"""                                  aes-128-gcm, aes-192-gcm, aes-256-gcm,\\n"""		148670	1					
ANR	148757	Argument	"""                                  aes-128-gcm, aes-192-gcm, aes-256-gcm,\\n"""		148670	0					
ANR	148758	PrimaryExpression	"""                                  aes-128-gcm, aes-192-gcm, aes-256-gcm,\\n"""		148670	0					
ANR	148759	ExpressionStatement	"printf ( ""                                  aes-128-cfb, aes-192-cfb, aes-256-cfb,\\n"" )"	294:4:7789:7882	148670	12	True				
ANR	148760	CallExpression	"printf ( ""                                  aes-128-cfb, aes-192-cfb, aes-256-cfb,\\n"" )"		148670	0					
ANR	148761	Callee	printf		148670	0					
ANR	148762	Identifier	printf		148670	0					
ANR	148763	ArgumentList	"""                                  aes-128-cfb, aes-192-cfb, aes-256-cfb,\\n"""		148670	1					
ANR	148764	Argument	"""                                  aes-128-cfb, aes-192-cfb, aes-256-cfb,\\n"""		148670	0					
ANR	148765	PrimaryExpression	"""                                  aes-128-cfb, aes-192-cfb, aes-256-cfb,\\n"""		148670	0					
ANR	148766	ExpressionStatement	"printf ( ""                                  aes-128-ctr, aes-192-ctr, aes-256-ctr,\\n"" )"	296:4:7888:7981	148670	13	True				
ANR	148767	CallExpression	"printf ( ""                                  aes-128-ctr, aes-192-ctr, aes-256-ctr,\\n"" )"		148670	0					
ANR	148768	Callee	printf		148670	0					
ANR	148769	Identifier	printf		148670	0					
ANR	148770	ArgumentList	"""                                  aes-128-ctr, aes-192-ctr, aes-256-ctr,\\n"""		148670	1					
ANR	148771	Argument	"""                                  aes-128-ctr, aes-192-ctr, aes-256-ctr,\\n"""		148670	0					
ANR	148772	PrimaryExpression	"""                                  aes-128-ctr, aes-192-ctr, aes-256-ctr,\\n"""		148670	0					
ANR	148773	ExpressionStatement	"printf ( ""                                  camellia-128-cfb, camellia-192-cfb,\\n"" )"	298:4:7987:8077	148670	14	True				
ANR	148774	CallExpression	"printf ( ""                                  camellia-128-cfb, camellia-192-cfb,\\n"" )"		148670	0					
ANR	148775	Callee	printf		148670	0					
ANR	148776	Identifier	printf		148670	0					
ANR	148777	ArgumentList	"""                                  camellia-128-cfb, camellia-192-cfb,\\n"""		148670	1					
ANR	148778	Argument	"""                                  camellia-128-cfb, camellia-192-cfb,\\n"""		148670	0					
ANR	148779	PrimaryExpression	"""                                  camellia-128-cfb, camellia-192-cfb,\\n"""		148670	0					
ANR	148780	ExpressionStatement	"printf ( ""                                  camellia-256-cfb, bf-cfb,\\n"" )"	300:4:8083:8163	148670	15	True				
ANR	148781	CallExpression	"printf ( ""                                  camellia-256-cfb, bf-cfb,\\n"" )"		148670	0					
ANR	148782	Callee	printf		148670	0					
ANR	148783	Identifier	printf		148670	0					
ANR	148784	ArgumentList	"""                                  camellia-256-cfb, bf-cfb,\\n"""		148670	1					
ANR	148785	Argument	"""                                  camellia-256-cfb, bf-cfb,\\n"""		148670	0					
ANR	148786	PrimaryExpression	"""                                  camellia-256-cfb, bf-cfb,\\n"""		148670	0					
ANR	148787	ExpressionStatement	"printf ( ""                                  chacha20-ietf-poly1305,\\n"" )"	302:4:8169:8247	148670	16	True				
ANR	148788	CallExpression	"printf ( ""                                  chacha20-ietf-poly1305,\\n"" )"		148670	0					
ANR	148789	Callee	printf		148670	0					
ANR	148790	Identifier	printf		148670	0					
ANR	148791	ArgumentList	"""                                  chacha20-ietf-poly1305,\\n"""		148670	1					
ANR	148792	Argument	"""                                  chacha20-ietf-poly1305,\\n"""		148670	0					
ANR	148793	PrimaryExpression	"""                                  chacha20-ietf-poly1305,\\n"""		148670	0					
ANR	148794	ExpressionStatement	"printf ( ""                                  xchacha20-ietf-poly1305,\\n"" )"	305:4:8282:8361	148670	17	True				
ANR	148795	CallExpression	"printf ( ""                                  xchacha20-ietf-poly1305,\\n"" )"		148670	0					
ANR	148796	Callee	printf		148670	0					
ANR	148797	Identifier	printf		148670	0					
ANR	148798	ArgumentList	"""                                  xchacha20-ietf-poly1305,\\n"""		148670	1					
ANR	148799	Argument	"""                                  xchacha20-ietf-poly1305,\\n"""		148670	0					
ANR	148800	PrimaryExpression	"""                                  xchacha20-ietf-poly1305,\\n"""		148670	0					
ANR	148801	ExpressionStatement	"printf ( ""                                  salsa20, chacha20 and chacha20-ietf.\\n"" )"	308:4:8374:8465	148670	18	True				
ANR	148802	CallExpression	"printf ( ""                                  salsa20, chacha20 and chacha20-ietf.\\n"" )"		148670	0					
ANR	148803	Callee	printf		148670	0					
ANR	148804	Identifier	printf		148670	0					
ANR	148805	ArgumentList	"""                                  salsa20, chacha20 and chacha20-ietf.\\n"""		148670	1					
ANR	148806	Argument	"""                                  salsa20, chacha20 and chacha20-ietf.\\n"""		148670	0					
ANR	148807	PrimaryExpression	"""                                  salsa20, chacha20 and chacha20-ietf.\\n"""		148670	0					
ANR	148808	ExpressionStatement	"printf ( ""                                  The default cipher is rc4-md5.\\n"" )"	310:4:8471:8556	148670	19	True				
ANR	148809	CallExpression	"printf ( ""                                  The default cipher is rc4-md5.\\n"" )"		148670	0					
ANR	148810	Callee	printf		148670	0					
ANR	148811	Identifier	printf		148670	0					
ANR	148812	ArgumentList	"""                                  The default cipher is rc4-md5.\\n"""		148670	1					
ANR	148813	Argument	"""                                  The default cipher is rc4-md5.\\n"""		148670	0					
ANR	148814	PrimaryExpression	"""                                  The default cipher is rc4-md5.\\n"""		148670	0					
ANR	148815	ExpressionStatement	"printf ( ""\\n"" )"	312:4:8562:8574	148670	20	True				
ANR	148816	CallExpression	"printf ( ""\\n"" )"		148670	0					
ANR	148817	Callee	printf		148670	0					
ANR	148818	Identifier	printf		148670	0					
ANR	148819	ArgumentList	"""\\n"""		148670	1					
ANR	148820	Argument	"""\\n"""		148670	0					
ANR	148821	PrimaryExpression	"""\\n"""		148670	0					
ANR	148822	ExpressionStatement	"printf ( ""       [-a <user>]                Run as another user.\\n"" )"	313:4:8580:8655	148670	21	True				
ANR	148823	CallExpression	"printf ( ""       [-a <user>]                Run as another user.\\n"" )"		148670	0					
ANR	148824	Callee	printf		148670	0					
ANR	148825	Identifier	printf		148670	0					
ANR	148826	ArgumentList	"""       [-a <user>]                Run as another user.\\n"""		148670	1					
ANR	148827	Argument	"""       [-a <user>]                Run as another user.\\n"""		148670	0					
ANR	148828	PrimaryExpression	"""       [-a <user>]                Run as another user.\\n"""		148670	0					
ANR	148829	ExpressionStatement	"printf ( ""       [-f <pid_file>]            The file path to store pid.\\n"" )"	315:4:8661:8743	148670	22	True				
ANR	148830	CallExpression	"printf ( ""       [-f <pid_file>]            The file path to store pid.\\n"" )"		148670	0					
ANR	148831	Callee	printf		148670	0					
ANR	148832	Identifier	printf		148670	0					
ANR	148833	ArgumentList	"""       [-f <pid_file>]            The file path to store pid.\\n"""		148670	1					
ANR	148834	Argument	"""       [-f <pid_file>]            The file path to store pid.\\n"""		148670	0					
ANR	148835	PrimaryExpression	"""       [-f <pid_file>]            The file path to store pid.\\n"""		148670	0					
ANR	148836	ExpressionStatement	"printf ( ""       [-t <timeout>]             Socket timeout in seconds.\\n"" )"	317:4:8749:8830	148670	23	True				
ANR	148837	CallExpression	"printf ( ""       [-t <timeout>]             Socket timeout in seconds.\\n"" )"		148670	0					
ANR	148838	Callee	printf		148670	0					
ANR	148839	Identifier	printf		148670	0					
ANR	148840	ArgumentList	"""       [-t <timeout>]             Socket timeout in seconds.\\n"""		148670	1					
ANR	148841	Argument	"""       [-t <timeout>]             Socket timeout in seconds.\\n"""		148670	0					
ANR	148842	PrimaryExpression	"""       [-t <timeout>]             Socket timeout in seconds.\\n"""		148670	0					
ANR	148843	ExpressionStatement	"printf ( ""       [-c <config_file>]         The path to config file.\\n"" )"	319:4:8836:8915	148670	24	True				
ANR	148844	CallExpression	"printf ( ""       [-c <config_file>]         The path to config file.\\n"" )"		148670	0					
ANR	148845	Callee	printf		148670	0					
ANR	148846	Identifier	printf		148670	0					
ANR	148847	ArgumentList	"""       [-c <config_file>]         The path to config file.\\n"""		148670	1					
ANR	148848	Argument	"""       [-c <config_file>]         The path to config file.\\n"""		148670	0					
ANR	148849	PrimaryExpression	"""       [-c <config_file>]         The path to config file.\\n"""		148670	0					
ANR	148850	ExpressionStatement	"printf ( ""       [-n <number>]              Max number of open files.\\n"" )"	322:4:8943:9023	148670	25	True				
ANR	148851	CallExpression	"printf ( ""       [-n <number>]              Max number of open files.\\n"" )"		148670	0					
ANR	148852	Callee	printf		148670	0					
ANR	148853	Identifier	printf		148670	0					
ANR	148854	ArgumentList	"""       [-n <number>]              Max number of open files.\\n"""		148670	1					
ANR	148855	Argument	"""       [-n <number>]              Max number of open files.\\n"""		148670	0					
ANR	148856	PrimaryExpression	"""       [-n <number>]              Max number of open files.\\n"""		148670	0					
ANR	148857	ExpressionStatement	"printf ( ""       [-i <interface>]           Network interface to bind.\\n"" )"	326:4:9057:9138	148670	26	True				
ANR	148858	CallExpression	"printf ( ""       [-i <interface>]           Network interface to bind.\\n"" )"		148670	0					
ANR	148859	Callee	printf		148670	0					
ANR	148860	Identifier	printf		148670	0					
ANR	148861	ArgumentList	"""       [-i <interface>]           Network interface to bind.\\n"""		148670	1					
ANR	148862	Argument	"""       [-i <interface>]           Network interface to bind.\\n"""		148670	0					
ANR	148863	PrimaryExpression	"""       [-i <interface>]           Network interface to bind.\\n"""		148670	0					
ANR	148864	ExpressionStatement	"printf ( ""       [-b <local_address>]       Local address to bind.\\n"" )"	329:4:9151:9228	148670	27	True				
ANR	148865	CallExpression	"printf ( ""       [-b <local_address>]       Local address to bind.\\n"" )"		148670	0					
ANR	148866	Callee	printf		148670	0					
ANR	148867	Identifier	printf		148670	0					
ANR	148868	ArgumentList	"""       [-b <local_address>]       Local address to bind.\\n"""		148670	1					
ANR	148869	Argument	"""       [-b <local_address>]       Local address to bind.\\n"""		148670	0					
ANR	148870	PrimaryExpression	"""       [-b <local_address>]       Local address to bind.\\n"""		148670	0					
ANR	148871	ExpressionStatement	"printf ( ""\\n"" )"	331:4:9234:9246	148670	28	True				
ANR	148872	CallExpression	"printf ( ""\\n"" )"		148670	0					
ANR	148873	Callee	printf		148670	0					
ANR	148874	Identifier	printf		148670	0					
ANR	148875	ArgumentList	"""\\n"""		148670	1					
ANR	148876	Argument	"""\\n"""		148670	0					
ANR	148877	PrimaryExpression	"""\\n"""		148670	0					
ANR	148878	ExpressionStatement	"printf ( ""       [-u]                       Enable UDP relay.\\n"" )"	332:4:9252:9324	148670	29	True				
ANR	148879	CallExpression	"printf ( ""       [-u]                       Enable UDP relay.\\n"" )"		148670	0					
ANR	148880	Callee	printf		148670	0					
ANR	148881	Identifier	printf		148670	0					
ANR	148882	ArgumentList	"""       [-u]                       Enable UDP relay.\\n"""		148670	1					
ANR	148883	Argument	"""       [-u]                       Enable UDP relay.\\n"""		148670	0					
ANR	148884	PrimaryExpression	"""       [-u]                       Enable UDP relay.\\n"""		148670	0					
ANR	148885	ExpressionStatement	"printf ( ""                                  TPROXY is required in redir mode.\\n"" )"	335:4:9350:9438	148670	30	True				
ANR	148886	CallExpression	"printf ( ""                                  TPROXY is required in redir mode.\\n"" )"		148670	0					
ANR	148887	Callee	printf		148670	0					
ANR	148888	Identifier	printf		148670	0					
ANR	148889	ArgumentList	"""                                  TPROXY is required in redir mode.\\n"""		148670	1					
ANR	148890	Argument	"""                                  TPROXY is required in redir mode.\\n"""		148670	0					
ANR	148891	PrimaryExpression	"""                                  TPROXY is required in redir mode.\\n"""		148670	0					
ANR	148892	ExpressionStatement	"printf ( ""       [-U]                       Enable UDP relay and disable TCP relay.\\n"" )"	338:4:9451:9545	148670	31	True				
ANR	148893	CallExpression	"printf ( ""       [-U]                       Enable UDP relay and disable TCP relay.\\n"" )"		148670	0					
ANR	148894	Callee	printf		148670	0					
ANR	148895	Identifier	printf		148670	0					
ANR	148896	ArgumentList	"""       [-U]                       Enable UDP relay and disable TCP relay.\\n"""		148670	1					
ANR	148897	Argument	"""       [-U]                       Enable UDP relay and disable TCP relay.\\n"""		148670	0					
ANR	148898	PrimaryExpression	"""       [-U]                       Enable UDP relay and disable TCP relay.\\n"""		148670	0					
ANR	148899	ExpressionStatement	"printf ( ""       [-6]                       Resovle hostname to IPv6 address first.\\n"" )"	341:4:9572:9666	148670	32	True				
ANR	148900	CallExpression	"printf ( ""       [-6]                       Resovle hostname to IPv6 address first.\\n"" )"		148670	0					
ANR	148901	Callee	printf		148670	0					
ANR	148902	Identifier	printf		148670	0					
ANR	148903	ArgumentList	"""       [-6]                       Resovle hostname to IPv6 address first.\\n"""		148670	1					
ANR	148904	Argument	"""       [-6]                       Resovle hostname to IPv6 address first.\\n"""		148670	0					
ANR	148905	PrimaryExpression	"""       [-6]                       Resovle hostname to IPv6 address first.\\n"""		148670	0					
ANR	148906	ExpressionStatement	"printf ( ""\\n"" )"	344:4:9679:9691	148670	33	True				
ANR	148907	CallExpression	"printf ( ""\\n"" )"		148670	0					
ANR	148908	Callee	printf		148670	0					
ANR	148909	Identifier	printf		148670	0					
ANR	148910	ArgumentList	"""\\n"""		148670	1					
ANR	148911	Argument	"""\\n"""		148670	0					
ANR	148912	PrimaryExpression	"""\\n"""		148670	0					
ANR	148913	ExpressionStatement	"printf ( ""       [-L <addr>:<port>]         Destination server address and port\\n"" )"	346:4:9718:9808	148670	34	True				
ANR	148914	CallExpression	"printf ( ""       [-L <addr>:<port>]         Destination server address and port\\n"" )"		148670	0					
ANR	148915	Callee	printf		148670	0					
ANR	148916	Identifier	printf		148670	0					
ANR	148917	ArgumentList	"""       [-L <addr>:<port>]         Destination server address and port\\n"""		148670	1					
ANR	148918	Argument	"""       [-L <addr>:<port>]         Destination server address and port\\n"""		148670	0					
ANR	148919	PrimaryExpression	"""       [-L <addr>:<port>]         Destination server address and port\\n"""		148670	0					
ANR	148920	ExpressionStatement	"printf ( ""                                  for local port forwarding.\\n"" )"	348:4:9814:9895	148670	35	True				
ANR	148921	CallExpression	"printf ( ""                                  for local port forwarding.\\n"" )"		148670	0					
ANR	148922	Callee	printf		148670	0					
ANR	148923	Identifier	printf		148670	0					
ANR	148924	ArgumentList	"""                                  for local port forwarding.\\n"""		148670	1					
ANR	148925	Argument	"""                                  for local port forwarding.\\n"""		148670	0					
ANR	148926	PrimaryExpression	"""                                  for local port forwarding.\\n"""		148670	0					
ANR	148927	ExpressionStatement	"printf ( ""       [-d <addr>]                Name servers for internal DNS resolver.\\n"" )"	352:4:9929:10023	148670	36	True				
ANR	148928	CallExpression	"printf ( ""       [-d <addr>]                Name servers for internal DNS resolver.\\n"" )"		148670	0					
ANR	148929	Callee	printf		148670	0					
ANR	148930	Identifier	printf		148670	0					
ANR	148931	ArgumentList	"""       [-d <addr>]                Name servers for internal DNS resolver.\\n"""		148670	1					
ANR	148932	Argument	"""       [-d <addr>]                Name servers for internal DNS resolver.\\n"""		148670	0					
ANR	148933	PrimaryExpression	"""       [-d <addr>]                Name servers for internal DNS resolver.\\n"""		148670	0					
ANR	148934	ExpressionStatement	"printf ( ""       [--reuse-port]             Enable port reuse.\\n"" )"	355:4:10036:10109	148670	37	True				
ANR	148935	CallExpression	"printf ( ""       [--reuse-port]             Enable port reuse.\\n"" )"		148670	0					
ANR	148936	Callee	printf		148670	0					
ANR	148937	Identifier	printf		148670	0					
ANR	148938	ArgumentList	"""       [--reuse-port]             Enable port reuse.\\n"""		148670	1					
ANR	148939	Argument	"""       [--reuse-port]             Enable port reuse.\\n"""		148670	0					
ANR	148940	PrimaryExpression	"""       [--reuse-port]             Enable port reuse.\\n"""		148670	0					
ANR	148941	ExpressionStatement	"printf ( ""       [--fast-open]              Enable TCP fast open.\\n"" )"	358:4:10192:10268	148670	38	True				
ANR	148942	CallExpression	"printf ( ""       [--fast-open]              Enable TCP fast open.\\n"" )"		148670	0					
ANR	148943	Callee	printf		148670	0					
ANR	148944	Identifier	printf		148670	0					
ANR	148945	ArgumentList	"""       [--fast-open]              Enable TCP fast open.\\n"""		148670	1					
ANR	148946	Argument	"""       [--fast-open]              Enable TCP fast open.\\n"""		148670	0					
ANR	148947	PrimaryExpression	"""       [--fast-open]              Enable TCP fast open.\\n"""		148670	0					
ANR	148948	ExpressionStatement	"printf ( ""                                  with Linux kernel > 3.7.0.\\n"" )"	360:4:10274:10355	148670	39	True				
ANR	148949	CallExpression	"printf ( ""                                  with Linux kernel > 3.7.0.\\n"" )"		148670	0					
ANR	148950	Callee	printf		148670	0					
ANR	148951	Identifier	printf		148670	0					
ANR	148952	ArgumentList	"""                                  with Linux kernel > 3.7.0.\\n"""		148670	1					
ANR	148953	Argument	"""                                  with Linux kernel > 3.7.0.\\n"""		148670	0					
ANR	148954	PrimaryExpression	"""                                  with Linux kernel > 3.7.0.\\n"""		148670	0					
ANR	148955	ExpressionStatement	"printf ( ""       [--acl <acl_file>]         Path to ACL (Access Control List).\\n"" )"	364:4:10420:10509	148670	40	True				
ANR	148956	CallExpression	"printf ( ""       [--acl <acl_file>]         Path to ACL (Access Control List).\\n"" )"		148670	0					
ANR	148957	Callee	printf		148670	0					
ANR	148958	Identifier	printf		148670	0					
ANR	148959	ArgumentList	"""       [--acl <acl_file>]         Path to ACL (Access Control List).\\n"""		148670	1					
ANR	148960	Argument	"""       [--acl <acl_file>]         Path to ACL (Access Control List).\\n"""		148670	0					
ANR	148961	PrimaryExpression	"""       [--acl <acl_file>]         Path to ACL (Access Control List).\\n"""		148670	0					
ANR	148962	ExpressionStatement	"printf ( ""       [--manager-address <addr>] UNIX domain socket address.\\n"" )"	368:4:10576:10658	148670	41	True				
ANR	148963	CallExpression	"printf ( ""       [--manager-address <addr>] UNIX domain socket address.\\n"" )"		148670	0					
ANR	148964	Callee	printf		148670	0					
ANR	148965	Identifier	printf		148670	0					
ANR	148966	ArgumentList	"""       [--manager-address <addr>] UNIX domain socket address.\\n"""		148670	1					
ANR	148967	Argument	"""       [--manager-address <addr>] UNIX domain socket address.\\n"""		148670	0					
ANR	148968	PrimaryExpression	"""       [--manager-address <addr>] UNIX domain socket address.\\n"""		148670	0					
ANR	148969	ExpressionStatement	"printf ( ""       [--executable <path>]      Path to the executable of ss-server.\\n"" )"	372:4:10693:10784	148670	42	True				
ANR	148970	CallExpression	"printf ( ""       [--executable <path>]      Path to the executable of ss-server.\\n"" )"		148670	0					
ANR	148971	Callee	printf		148670	0					
ANR	148972	Identifier	printf		148670	0					
ANR	148973	ArgumentList	"""       [--executable <path>]      Path to the executable of ss-server.\\n"""		148670	1					
ANR	148974	Argument	"""       [--executable <path>]      Path to the executable of ss-server.\\n"""		148670	0					
ANR	148975	PrimaryExpression	"""       [--executable <path>]      Path to the executable of ss-server.\\n"""		148670	0					
ANR	148976	ExpressionStatement	"printf ( ""       [--mtu <MTU>]              MTU of your network interface.\\n"" )"	375:4:10797:10882	148670	43	True				
ANR	148977	CallExpression	"printf ( ""       [--mtu <MTU>]              MTU of your network interface.\\n"" )"		148670	0					
ANR	148978	Callee	printf		148670	0					
ANR	148979	Identifier	printf		148670	0					
ANR	148980	ArgumentList	"""       [--mtu <MTU>]              MTU of your network interface.\\n"""		148670	1					
ANR	148981	Argument	"""       [--mtu <MTU>]              MTU of your network interface.\\n"""		148670	0					
ANR	148982	PrimaryExpression	"""       [--mtu <MTU>]              MTU of your network interface.\\n"""		148670	0					
ANR	148983	ExpressionStatement	"printf ( ""       [--mptcp]                  Enable Multipath TCP on MPTCP Kernel.\\n"" )"	378:4:10905:10997	148670	44	True				
ANR	148984	CallExpression	"printf ( ""       [--mptcp]                  Enable Multipath TCP on MPTCP Kernel.\\n"" )"		148670	0					
ANR	148985	Callee	printf		148670	0					
ANR	148986	Identifier	printf		148670	0					
ANR	148987	ArgumentList	"""       [--mptcp]                  Enable Multipath TCP on MPTCP Kernel.\\n"""		148670	1					
ANR	148988	Argument	"""       [--mptcp]                  Enable Multipath TCP on MPTCP Kernel.\\n"""		148670	0					
ANR	148989	PrimaryExpression	"""       [--mptcp]                  Enable Multipath TCP on MPTCP Kernel.\\n"""		148670	0					
ANR	148990	ExpressionStatement	"printf ( ""       [--no-delay]               Enable TCP_NODELAY.\\n"" )"	382:4:11033:11107	148670	45	True				
ANR	148991	CallExpression	"printf ( ""       [--no-delay]               Enable TCP_NODELAY.\\n"" )"		148670	0					
ANR	148992	Callee	printf		148670	0					
ANR	148993	Identifier	printf		148670	0					
ANR	148994	ArgumentList	"""       [--no-delay]               Enable TCP_NODELAY.\\n"""		148670	1					
ANR	148995	Argument	"""       [--no-delay]               Enable TCP_NODELAY.\\n"""		148670	0					
ANR	148996	PrimaryExpression	"""       [--no-delay]               Enable TCP_NODELAY.\\n"""		148670	0					
ANR	148997	ExpressionStatement	"printf ( ""       [--key <key_in_base64>]    Key of your remote server.\\n"" )"	384:4:11113:11194	148670	46	True				
ANR	148998	CallExpression	"printf ( ""       [--key <key_in_base64>]    Key of your remote server.\\n"" )"		148670	0					
ANR	148999	Callee	printf		148670	0					
ANR	149000	Identifier	printf		148670	0					
ANR	149001	ArgumentList	"""       [--key <key_in_base64>]    Key of your remote server.\\n"""		148670	1					
ANR	149002	Argument	"""       [--key <key_in_base64>]    Key of your remote server.\\n"""		148670	0					
ANR	149003	PrimaryExpression	"""       [--key <key_in_base64>]    Key of your remote server.\\n"""		148670	0					
ANR	149004	ExpressionStatement	"printf ( ""       [--plugin <name>]          Enable SIP003 plugin. (Experimental)\\n"" )"	387:4:11207:11298	148670	47	True				
ANR	149005	CallExpression	"printf ( ""       [--plugin <name>]          Enable SIP003 plugin. (Experimental)\\n"" )"		148670	0					
ANR	149006	Callee	printf		148670	0					
ANR	149007	Identifier	printf		148670	0					
ANR	149008	ArgumentList	"""       [--plugin <name>]          Enable SIP003 plugin. (Experimental)\\n"""		148670	1					
ANR	149009	Argument	"""       [--plugin <name>]          Enable SIP003 plugin. (Experimental)\\n"""		148670	0					
ANR	149010	PrimaryExpression	"""       [--plugin <name>]          Enable SIP003 plugin. (Experimental)\\n"""		148670	0					
ANR	149011	ExpressionStatement	"printf ( ""       [--plugin-opts <options>]  Set SIP003 plugin options. (Experimental)\\n"" )"	389:4:11304:11400	148670	48	True				
ANR	149012	CallExpression	"printf ( ""       [--plugin-opts <options>]  Set SIP003 plugin options. (Experimental)\\n"" )"		148670	0					
ANR	149013	Callee	printf		148670	0					
ANR	149014	Identifier	printf		148670	0					
ANR	149015	ArgumentList	"""       [--plugin-opts <options>]  Set SIP003 plugin options. (Experimental)\\n"""		148670	1					
ANR	149016	Argument	"""       [--plugin-opts <options>]  Set SIP003 plugin options. (Experimental)\\n"""		148670	0					
ANR	149017	PrimaryExpression	"""       [--plugin-opts <options>]  Set SIP003 plugin options. (Experimental)\\n"""		148670	0					
ANR	149018	ExpressionStatement	"printf ( ""\\n"" )"	391:4:11406:11418	148670	49	True				
ANR	149019	CallExpression	"printf ( ""\\n"" )"		148670	0					
ANR	149020	Callee	printf		148670	0					
ANR	149021	Identifier	printf		148670	0					
ANR	149022	ArgumentList	"""\\n"""		148670	1					
ANR	149023	Argument	"""\\n"""		148670	0					
ANR	149024	PrimaryExpression	"""\\n"""		148670	0					
ANR	149025	ExpressionStatement	"printf ( ""       [-v]                       Verbose mode.\\n"" )"	392:4:11424:11492	148670	50	True				
ANR	149026	CallExpression	"printf ( ""       [-v]                       Verbose mode.\\n"" )"		148670	0					
ANR	149027	Callee	printf		148670	0					
ANR	149028	Identifier	printf		148670	0					
ANR	149029	ArgumentList	"""       [-v]                       Verbose mode.\\n"""		148670	1					
ANR	149030	Argument	"""       [-v]                       Verbose mode.\\n"""		148670	0					
ANR	149031	PrimaryExpression	"""       [-v]                       Verbose mode.\\n"""		148670	0					
ANR	149032	ExpressionStatement	"printf ( ""       [-h, --help]               Print this message.\\n"" )"	394:4:11498:11572	148670	51	True				
ANR	149033	CallExpression	"printf ( ""       [-h, --help]               Print this message.\\n"" )"		148670	0					
ANR	149034	Callee	printf		148670	0					
ANR	149035	Identifier	printf		148670	0					
ANR	149036	ArgumentList	"""       [-h, --help]               Print this message.\\n"""		148670	1					
ANR	149037	Argument	"""       [-h, --help]               Print this message.\\n"""		148670	0					
ANR	149038	PrimaryExpression	"""       [-h, --help]               Print this message.\\n"""		148670	0					
ANR	149039	ExpressionStatement	"printf ( ""\\n"" )"	396:4:11578:11590	148670	52	True				
ANR	149040	CallExpression	"printf ( ""\\n"" )"		148670	0					
ANR	149041	Callee	printf		148670	0					
ANR	149042	Identifier	printf		148670	0					
ANR	149043	ArgumentList	"""\\n"""		148670	1					
ANR	149044	Argument	"""\\n"""		148670	0					
ANR	149045	PrimaryExpression	"""\\n"""		148670	0					
ANR	149046	ReturnType	void		148670	1					
ANR	149047	Identifier	usage		148670	2					
ANR	149048	ParameterList			148670	3					
ANR	149049	CFGEntryNode	ENTRY		148670		True				
ANR	149050	CFGExitNode	EXIT		148670		True				
ANR	149051	Symbol	VERSION		148670						
ANR	149052	Function	daemonize	399:0:11595:12612							
ANR	149053	FunctionDef	daemonize (const char * path)		149052	0					
ANR	149054	CompoundStatement		401:0:11628:12612	149052	0					
ANR	149055	IdentifierDeclStatement	"pid_t pid , sid ;"	403:4:11674:11688	149052	0	True				
ANR	149056	IdentifierDecl	pid		149052	0					
ANR	149057	IdentifierDeclType	pid_t		149052	0					
ANR	149058	Identifier	pid		149052	1					
ANR	149059	IdentifierDecl	sid		149052	1					
ANR	149060	IdentifierDeclType	pid_t		149052	0					
ANR	149061	Identifier	sid		149052	1					
ANR	149062	ExpressionStatement	pid = fork ( )	406:4:11733:11745	149052	1	True				
ANR	149063	AssignmentExpression	pid = fork ( )		149052	0		=			
ANR	149064	Identifier	pid		149052	0					
ANR	149065	CallExpression	fork ( )		149052	1					
ANR	149066	Callee	fork		149052	0					
ANR	149067	Identifier	fork		149052	0					
ANR	149068	ArgumentList			149052	1					
ANR	149069	IfStatement	if ( pid < 0 )		149052	2					
ANR	149070	Condition	pid < 0	407:8:11755:11761	149052	0	True				
ANR	149071	RelationalExpression	pid < 0		149052	0		<			
ANR	149072	Identifier	pid		149052	0					
ANR	149073	PrimaryExpression	0		149052	1					
ANR	149074	CompoundStatement		7:17:135:135	149052	1					
ANR	149075	ExpressionStatement	exit ( EXIT_FAILURE )	408:8:11774:11792	149052	0	True				
ANR	149076	CallExpression	exit ( EXIT_FAILURE )		149052	0					
ANR	149077	Callee	exit		149052	0					
ANR	149078	Identifier	exit		149052	0					
ANR	149079	ArgumentList	EXIT_FAILURE		149052	1					
ANR	149080	Argument	EXIT_FAILURE		149052	0					
ANR	149081	Identifier	EXIT_FAILURE		149052	0					
ANR	149082	IfStatement	if ( pid > 0 )		149052	3					
ANR	149083	Condition	pid > 0	413:8:11885:11891	149052	0	True				
ANR	149084	RelationalExpression	pid > 0		149052	0		>			
ANR	149085	Identifier	pid		149052	0					
ANR	149086	PrimaryExpression	0		149052	1					
ANR	149087	CompoundStatement		14:8:275:304	149052	1					
ANR	149088	IdentifierDeclStatement	"FILE * file = fopen ( path , ""w"" ) ;"	414:8:11904:11933	149052	0	True				
ANR	149089	IdentifierDecl	"* file = fopen ( path , ""w"" )"		149052	0					
ANR	149090	IdentifierDeclType	FILE *		149052	0					
ANR	149091	Identifier	file		149052	1					
ANR	149092	AssignmentExpression	"* file = fopen ( path , ""w"" )"		149052	2		=			
ANR	149093	Identifier	file		149052	0					
ANR	149094	CallExpression	"fopen ( path , ""w"" )"		149052	1					
ANR	149095	Callee	fopen		149052	0					
ANR	149096	Identifier	fopen		149052	0					
ANR	149097	ArgumentList	path		149052	1					
ANR	149098	Argument	path		149052	0					
ANR	149099	Identifier	path		149052	0					
ANR	149100	Argument	"""w"""		149052	1					
ANR	149101	PrimaryExpression	"""w"""		149052	0					
ANR	149102	IfStatement	if ( file == NULL )		149052	1					
ANR	149103	Condition	file == NULL	415:12:11947:11958	149052	0	True				
ANR	149104	EqualityExpression	file == NULL		149052	0		==			
ANR	149105	Identifier	file		149052	0					
ANR	149106	Identifier	NULL		149052	1					
ANR	149107	CompoundStatement		15:26:332:332	149052	1					
ANR	149108	ExpressionStatement	"FATAL ( ""Invalid pid file\\n"" )"	416:12:11975:12002	149052	0	True				
ANR	149109	CallExpression	"FATAL ( ""Invalid pid file\\n"" )"		149052	0					
ANR	149110	Callee	FATAL		149052	0					
ANR	149111	Identifier	FATAL		149052	0					
ANR	149112	ArgumentList	"""Invalid pid file\\n"""		149052	1					
ANR	149113	Argument	"""Invalid pid file\\n"""		149052	0					
ANR	149114	PrimaryExpression	"""Invalid pid file\\n"""		149052	0					
ANR	149115	ExpressionStatement	"fprintf ( file , ""%d"" , ( int ) pid )"	419:8:12023:12052	149052	2	True				
ANR	149116	CallExpression	"fprintf ( file , ""%d"" , ( int ) pid )"		149052	0					
ANR	149117	Callee	fprintf		149052	0					
ANR	149118	Identifier	fprintf		149052	0					
ANR	149119	ArgumentList	file		149052	1					
ANR	149120	Argument	file		149052	0					
ANR	149121	Identifier	file		149052	0					
ANR	149122	Argument	"""%d"""		149052	1					
ANR	149123	PrimaryExpression	"""%d"""		149052	0					
ANR	149124	Argument	( int ) pid		149052	2					
ANR	149125	CastExpression	( int ) pid		149052	0					
ANR	149126	CastTarget	int		149052	0					
ANR	149127	Identifier	pid		149052	1					
ANR	149128	ExpressionStatement	fclose ( file )	420:8:12062:12074	149052	3	True				
ANR	149129	CallExpression	fclose ( file )		149052	0					
ANR	149130	Callee	fclose		149052	0					
ANR	149131	Identifier	fclose		149052	0					
ANR	149132	ArgumentList	file		149052	1					
ANR	149133	Argument	file		149052	0					
ANR	149134	Identifier	file		149052	0					
ANR	149135	ExpressionStatement	exit ( EXIT_SUCCESS )	421:8:12084:12102	149052	4	True				
ANR	149136	CallExpression	exit ( EXIT_SUCCESS )		149052	0					
ANR	149137	Callee	exit		149052	0					
ANR	149138	Identifier	exit		149052	0					
ANR	149139	ArgumentList	EXIT_SUCCESS		149052	1					
ANR	149140	Argument	EXIT_SUCCESS		149052	0					
ANR	149141	Identifier	EXIT_SUCCESS		149052	0					
ANR	149142	ExpressionStatement	umask ( 0 )	425:4:12151:12159	149052	4	True				
ANR	149143	CallExpression	umask ( 0 )		149052	0					
ANR	149144	Callee	umask		149052	0					
ANR	149145	Identifier	umask		149052	0					
ANR	149146	ArgumentList	0		149052	1					
ANR	149147	Argument	0		149052	0					
ANR	149148	PrimaryExpression	0		149052	0					
ANR	149149	ExpressionStatement	sid = setsid ( )	430:4:12245:12259	149052	5	True				
ANR	149150	AssignmentExpression	sid = setsid ( )		149052	0		=			
ANR	149151	Identifier	sid		149052	0					
ANR	149152	CallExpression	setsid ( )		149052	1					
ANR	149153	Callee	setsid		149052	0					
ANR	149154	Identifier	setsid		149052	0					
ANR	149155	ArgumentList			149052	1					
ANR	149156	IfStatement	if ( sid < 0 )		149052	6					
ANR	149157	Condition	sid < 0	431:8:12269:12275	149052	0	True				
ANR	149158	RelationalExpression	sid < 0		149052	0		<			
ANR	149159	Identifier	sid		149052	0					
ANR	149160	PrimaryExpression	0		149052	1					
ANR	149161	CompoundStatement		31:17:649:649	149052	1					
ANR	149162	ExpressionStatement	exit ( EXIT_FAILURE )	433:8:12318:12336	149052	0	True				
ANR	149163	CallExpression	exit ( EXIT_FAILURE )		149052	0					
ANR	149164	Callee	exit		149052	0					
ANR	149165	Identifier	exit		149052	0					
ANR	149166	ArgumentList	EXIT_FAILURE		149052	1					
ANR	149167	Argument	EXIT_FAILURE		149052	0					
ANR	149168	Identifier	EXIT_FAILURE		149052	0					
ANR	149169	IfStatement	"if ( ( chdir ( ""/"" ) ) < 0 )"		149052	7					
ANR	149170	Condition	"( chdir ( ""/"" ) ) < 0"	437:8:12400:12415	149052	0	True				
ANR	149171	RelationalExpression	"( chdir ( ""/"" ) ) < 0"		149052	0		<			
ANR	149172	CallExpression	"chdir ( ""/"" )"		149052	0					
ANR	149173	Callee	chdir		149052	0					
ANR	149174	Identifier	chdir		149052	0					
ANR	149175	ArgumentList	"""/"""		149052	1					
ANR	149176	Argument	"""/"""		149052	0					
ANR	149177	PrimaryExpression	"""/"""		149052	0					
ANR	149178	PrimaryExpression	0		149052	1					
ANR	149179	CompoundStatement		37:26:789:789	149052	1					
ANR	149180	ExpressionStatement	exit ( EXIT_FAILURE )	439:8:12458:12476	149052	0	True				
ANR	149181	CallExpression	exit ( EXIT_FAILURE )		149052	0					
ANR	149182	Callee	exit		149052	0					
ANR	149183	Identifier	exit		149052	0					
ANR	149184	ArgumentList	EXIT_FAILURE		149052	1					
ANR	149185	Argument	EXIT_FAILURE		149052	0					
ANR	149186	Identifier	EXIT_FAILURE		149052	0					
ANR	149187	ExpressionStatement	close ( STDIN_FILENO )	443:4:12539:12558	149052	8	True				
ANR	149188	CallExpression	close ( STDIN_FILENO )		149052	0					
ANR	149189	Callee	close		149052	0					
ANR	149190	Identifier	close		149052	0					
ANR	149191	ArgumentList	STDIN_FILENO		149052	1					
ANR	149192	Argument	STDIN_FILENO		149052	0					
ANR	149193	Identifier	STDIN_FILENO		149052	0					
ANR	149194	ExpressionStatement	close ( STDOUT_FILENO )	444:4:12564:12584	149052	9	True				
ANR	149195	CallExpression	close ( STDOUT_FILENO )		149052	0					
ANR	149196	Callee	close		149052	0					
ANR	149197	Identifier	close		149052	0					
ANR	149198	ArgumentList	STDOUT_FILENO		149052	1					
ANR	149199	Argument	STDOUT_FILENO		149052	0					
ANR	149200	Identifier	STDOUT_FILENO		149052	0					
ANR	149201	ExpressionStatement	close ( STDERR_FILENO )	445:4:12590:12610	149052	10	True				
ANR	149202	CallExpression	close ( STDERR_FILENO )		149052	0					
ANR	149203	Callee	close		149052	0					
ANR	149204	Identifier	close		149052	0					
ANR	149205	ArgumentList	STDERR_FILENO		149052	1					
ANR	149206	Argument	STDERR_FILENO		149052	0					
ANR	149207	Identifier	STDERR_FILENO		149052	0					
ANR	149208	ReturnType	void		149052	1					
ANR	149209	Identifier	daemonize		149052	2					
ANR	149210	ParameterList	const char * path		149052	3					
ANR	149211	Parameter	const char * path	400:10:11610:11625	149052	0	True				
ANR	149212	ParameterType	const char *		149052	0					
ANR	149213	Identifier	path		149052	1					
ANR	149214	CFGEntryNode	ENTRY		149052		True				
ANR	149215	CFGExitNode	EXIT		149052		True				
ANR	149216	Symbol	fopen		149052						
ANR	149217	Symbol	NULL		149052						
ANR	149218	Symbol	STDIN_FILENO		149052						
ANR	149219	Symbol	STDOUT_FILENO		149052						
ANR	149220	Symbol	pid		149052						
ANR	149221	Symbol	chdir		149052						
ANR	149222	Symbol	sid		149052						
ANR	149223	Symbol	setsid		149052						
ANR	149224	Symbol	path		149052						
ANR	149225	Symbol	fork		149052						
ANR	149226	Symbol	file		149052						
ANR	149227	Symbol	EXIT_FAILURE		149052						
ANR	149228	Symbol	EXIT_SUCCESS		149052						
ANR	149229	Symbol	STDERR_FILENO		149052						
ANR	149230	Function	set_nofile	449:0:12637:13289							
ANR	149231	FunctionDef	set_nofile (int nofile)		149230	0					
ANR	149232	CompoundStatement		451:0:12664:13289	149230	0					
ANR	149233	IdentifierDeclStatement	"struct rlimit limit = { nofile , nofile } ;"	452:4:12670:12710	149230	0	True				
ANR	149234	IdentifierDecl	"limit = { nofile , nofile }"		149230	0					
ANR	149235	IdentifierDeclType	struct rlimit		149230	0					
ANR	149236	Identifier	limit		149230	1					
ANR	149237	AssignmentExpression	"limit = { nofile , nofile }"		149230	2		=			
ANR	149238	Identifier	limit		149230	0					
ANR	149239	InitializerList	nofile		149230	1					
ANR	149240	Identifier	nofile		149230	0					
ANR	149241	Identifier	nofile		149230	1					
ANR	149242	IfStatement	if ( nofile <= 0 )		149230	1					
ANR	149243	Condition	nofile <= 0	454:8:12756:12766	149230	0	True				
ANR	149244	RelationalExpression	nofile <= 0		149230	0		<=			
ANR	149245	Identifier	nofile		149230	0					
ANR	149246	PrimaryExpression	0		149230	1					
ANR	149247	CompoundStatement		4:21:104:104	149230	1					
ANR	149248	ExpressionStatement	"FATAL ( ""nofile must be greater than 0\\n"" )"	455:8:12779:12819	149230	0	True				
ANR	149249	CallExpression	"FATAL ( ""nofile must be greater than 0\\n"" )"		149230	0					
ANR	149250	Callee	FATAL		149230	0					
ANR	149251	Identifier	FATAL		149230	0					
ANR	149252	ArgumentList	"""nofile must be greater than 0\\n"""		149230	1					
ANR	149253	Argument	"""nofile must be greater than 0\\n"""		149230	0					
ANR	149254	PrimaryExpression	"""nofile must be greater than 0\\n"""		149230	0					
ANR	149255	IfStatement	"if ( setrlimit ( RLIMIT_NOFILE , & limit ) < 0 )"		149230	2					
ANR	149256	Condition	"setrlimit ( RLIMIT_NOFILE , & limit ) < 0"	458:8:12836:12871	149230	0	True				
ANR	149257	RelationalExpression	"setrlimit ( RLIMIT_NOFILE , & limit ) < 0"		149230	0		<			
ANR	149258	CallExpression	"setrlimit ( RLIMIT_NOFILE , & limit )"		149230	0					
ANR	149259	Callee	setrlimit		149230	0					
ANR	149260	Identifier	setrlimit		149230	0					
ANR	149261	ArgumentList	RLIMIT_NOFILE		149230	1					
ANR	149262	Argument	RLIMIT_NOFILE		149230	0					
ANR	149263	Identifier	RLIMIT_NOFILE		149230	0					
ANR	149264	Argument	& limit		149230	1					
ANR	149265	UnaryOperationExpression	& limit		149230	0					
ANR	149266	UnaryOperator	&		149230	0					
ANR	149267	Identifier	limit		149230	1					
ANR	149268	PrimaryExpression	0		149230	1					
ANR	149269	CompoundStatement		8:46:209:209	149230	1					
ANR	149270	IfStatement	if ( errno == EPERM )		149230	0					
ANR	149271	Condition	errno == EPERM	459:12:12888:12901	149230	0	True				
ANR	149272	EqualityExpression	errno == EPERM		149230	0		==			
ANR	149273	Identifier	errno		149230	0					
ANR	149274	Identifier	EPERM		149230	1					
ANR	149275	CompoundStatement		9:28:239:239	149230	1					
ANR	149276	ExpressionStatement	"LOGE ( ""insufficient permission to change NOFILE, not starting as root?"" )"	460:12:12918:13006	149230	0	True				
ANR	149277	CallExpression	"LOGE ( ""insufficient permission to change NOFILE, not starting as root?"" )"		149230	0					
ANR	149278	Callee	LOGE		149230	0					
ANR	149279	Identifier	LOGE		149230	0					
ANR	149280	ArgumentList	"""insufficient permission to change NOFILE, not starting as root?"""		149230	1					
ANR	149281	Argument	"""insufficient permission to change NOFILE, not starting as root?"""		149230	0					
ANR	149282	PrimaryExpression	"""insufficient permission to change NOFILE, not starting as root?"""		149230	0					
ANR	149283	ReturnStatement	return - 1 ;	462:12:13020:13029	149230	1	True				
ANR	149284	UnaryOperationExpression	- 1		149230	0					
ANR	149285	UnaryOperator	-		149230	0					
ANR	149286	PrimaryExpression	1		149230	1					
ANR	149287	ElseStatement	else		149230	0					
ANR	149288	IfStatement	if ( errno == EINVAL )		149230	0					
ANR	149289	Condition	errno == EINVAL	463:19:13050:13064	149230	0	True				
ANR	149290	EqualityExpression	errno == EINVAL		149230	0		==			
ANR	149291	Identifier	errno		149230	0					
ANR	149292	Identifier	EINVAL		149230	1					
ANR	149293	CompoundStatement		13:36:402:402	149230	1					
ANR	149294	ExpressionStatement	"LOGE ( ""invalid nofile, decrease nofile and try again"" )"	464:12:13081:13134	149230	0	True				
ANR	149295	CallExpression	"LOGE ( ""invalid nofile, decrease nofile and try again"" )"		149230	0					
ANR	149296	Callee	LOGE		149230	0					
ANR	149297	Identifier	LOGE		149230	0					
ANR	149298	ArgumentList	"""invalid nofile, decrease nofile and try again"""		149230	1					
ANR	149299	Argument	"""invalid nofile, decrease nofile and try again"""		149230	0					
ANR	149300	PrimaryExpression	"""invalid nofile, decrease nofile and try again"""		149230	0					
ANR	149301	ReturnStatement	return - 1 ;	465:12:13148:13157	149230	1	True				
ANR	149302	UnaryOperationExpression	- 1		149230	0					
ANR	149303	UnaryOperator	-		149230	0					
ANR	149304	PrimaryExpression	1		149230	1					
ANR	149305	ElseStatement	else		149230	0					
ANR	149306	CompoundStatement		16:15:509:509	149230	0					
ANR	149307	ExpressionStatement	"LOGE ( ""setrlimit failed: %s"" , strerror ( errno ) )"	467:12:13188:13233	149230	0	True				
ANR	149308	CallExpression	"LOGE ( ""setrlimit failed: %s"" , strerror ( errno ) )"		149230	0					
ANR	149309	Callee	LOGE		149230	0					
ANR	149310	Identifier	LOGE		149230	0					
ANR	149311	ArgumentList	"""setrlimit failed: %s"""		149230	1					
ANR	149312	Argument	"""setrlimit failed: %s"""		149230	0					
ANR	149313	PrimaryExpression	"""setrlimit failed: %s"""		149230	0					
ANR	149314	Argument	strerror ( errno )		149230	1					
ANR	149315	CallExpression	strerror ( errno )		149230	0					
ANR	149316	Callee	strerror		149230	0					
ANR	149317	Identifier	strerror		149230	0					
ANR	149318	ArgumentList	errno		149230	1					
ANR	149319	Argument	errno		149230	0					
ANR	149320	Identifier	errno		149230	0					
ANR	149321	ReturnStatement	return - 1 ;	468:12:13247:13256	149230	1	True				
ANR	149322	UnaryOperationExpression	- 1		149230	0					
ANR	149323	UnaryOperator	-		149230	0					
ANR	149324	PrimaryExpression	1		149230	1					
ANR	149325	ReturnStatement	return 0 ;	472:4:13279:13287	149230	3	True				
ANR	149326	PrimaryExpression	0		149230	0					
ANR	149327	ReturnType	int		149230	1					
ANR	149328	Identifier	set_nofile		149230	2					
ANR	149329	ParameterList	int nofile		149230	3					
ANR	149330	Parameter	int nofile	450:11:12652:12661	149230	0	True				
ANR	149331	ParameterType	int		149230	0					
ANR	149332	Identifier	nofile		149230	1					
ANR	149333	CFGEntryNode	ENTRY		149230		True				
ANR	149334	CFGExitNode	EXIT		149230		True				
ANR	149335	Symbol	EINVAL		149230						
ANR	149336	Symbol	strerror		149230						
ANR	149337	Symbol	errno		149230						
ANR	149338	Symbol	EPERM		149230						
ANR	149339	Symbol	limit		149230						
ANR	149340	Symbol	setrlimit		149230						
ANR	149341	Symbol	& limit		149230						
ANR	149342	Symbol	nofile		149230						
ANR	149343	Symbol	RLIMIT_NOFILE		149230						
