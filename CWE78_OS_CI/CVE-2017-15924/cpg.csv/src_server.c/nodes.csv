command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	103966	File	data/converged/CVE-2017-15924_shadowsocks-libev/src_server.c								
ANR	103967	DeclStmt									
ANR	103968	Decl							void	"void ( EV_P_ ev_signal * w , int revents )"	signal_cb
ANR	103969	DeclStmt									
ANR	103970	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	accept_cb
ANR	103971	DeclStmt									
ANR	103972	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	server_send_cb
ANR	103973	DeclStmt									
ANR	103974	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	server_recv_cb
ANR	103975	DeclStmt									
ANR	103976	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	remote_recv_cb
ANR	103977	DeclStmt									
ANR	103978	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	remote_send_cb
ANR	103979	DeclStmt									
ANR	103980	Decl							void	"void ( EV_P_ ev_timer * watcher , int revents )"	server_timeout_cb
ANR	103981	DeclStmt									
ANR	103982	Decl							void	"void ( EV_P_ ev_timer * watcher , int revents )"	block_list_clear_cb
ANR	103983	DeclStmt									
ANR	103984	Decl							remote_t	remote_t * ( int fd )	new_remote
ANR	103985	DeclStmt									
ANR	103986	Decl							server_t	"server_t * ( int fd , listen_ctx_t * listener )"	new_server
ANR	103987	DeclStmt									
ANR	103988	Decl							void	void ( remote_t * remote )	free_remote
ANR	103989	DeclStmt									
ANR	103990	Decl							void	void ( EV_P_ remote_t * remote )	close_and_free_remote
ANR	103991	DeclStmt									
ANR	103992	Decl							void	void ( server_t * server )	free_server
ANR	103993	DeclStmt									
ANR	103994	Decl							void	void ( EV_P_ server_t * server )	close_and_free_server
ANR	103995	DeclStmt									
ANR	103996	Decl							void	"void ( struct sockaddr * addr , void * data )"	resolv_cb
ANR	103997	DeclStmt									
ANR	103998	Decl							void	void ( void * data )	resolv_free_cb
ANR	103999	DeclStmt									
ANR	104000	Decl							int	int	verbose
ANR	104001	DeclStmt									
ANR	104002	Decl							int	int	reuse_port
ANR	104003	DeclStmt									
ANR	104004	Decl							crypto_t	crypto_t *	crypto
ANR	104005	DeclStmt									
ANR	104006	Decl							int	int	acl
ANR	104007	DeclStmt									
ANR	104008	Decl							int	int	mode
ANR	104009	DeclStmt									
ANR	104010	Decl							int	int	ipv6first
ANR	104011	DeclStmt									
ANR	104012	Decl							int	int	fast_open
ANR	104013	DeclStmt									
ANR	104014	Decl							int	int	no_delay
ANR	104015	DeclStmt									
ANR	104016	Decl							int	int	nofile
ANR	104017	DeclStmt									
ANR	104018	Decl							int	int	remote_conn
ANR	104019	DeclStmt									
ANR	104020	Decl							int	int	server_conn
ANR	104021	DeclStmt									
ANR	104022	Decl							char	char *	plugin
ANR	104023	DeclStmt									
ANR	104024	Decl							char	char *	bind_address
ANR	104025	DeclStmt									
ANR	104026	Decl							char	char *	remote_port
ANR	104027	DeclStmt									
ANR	104028	Decl							char	char *	manager_address
ANR	104029	DeclStmt									
ANR	104030	Decl							uint64_t	uint64_t	tx
ANR	104031	DeclStmt									
ANR	104032	Decl							uint64_t	uint64_t	rx
ANR	104033	DeclStmt									
ANR	104034	Decl							ev_timer	ev_timer	stat_update_watcher
ANR	104035	DeclStmt									
ANR	104036	Decl							ev_timer	ev_timer	block_list_watcher
ANR	104037	DeclStmt									
ANR	104038	Decl							struct ev_signal	struct ev_signal	sigint_watcher
ANR	104039	DeclStmt									
ANR	104040	Decl							struct ev_signal	struct ev_signal	sigterm_watcher
ANR	104041	DeclStmt									
ANR	104042	Decl							struct ev_signal	struct ev_signal	sigchld_watcher
ANR	104043	DeclStmt									
ANR	104044	Decl							struct cork_dllist	struct cork_dllist	connections
ANR	104045	Function	stat_update_cb	145:0:3678:5931							
ANR	104046	FunctionDef	"stat_update_cb (EV_P_ ev_timer * watcher , int revents)"		104045	0					
ANR	104047	CompoundStatement		147:0:3743:5931	104045	0					
ANR	104048	IdentifierDeclStatement	"struct sockaddr_un svaddr , claddr ;"	148:4:3749:3782	104045	0	True				
ANR	104049	IdentifierDecl	svaddr		104045	0					
ANR	104050	IdentifierDeclType	struct sockaddr_un		104045	0					
ANR	104051	Identifier	svaddr		104045	1					
ANR	104052	IdentifierDecl	claddr		104045	1					
ANR	104053	IdentifierDeclType	struct sockaddr_un		104045	0					
ANR	104054	Identifier	claddr		104045	1					
ANR	104055	IdentifierDeclStatement	int sfd = - 1 ;	149:4:3788:3800	104045	1	True				
ANR	104056	IdentifierDecl	sfd = - 1		104045	0					
ANR	104057	IdentifierDeclType	int		104045	0					
ANR	104058	Identifier	sfd		104045	1					
ANR	104059	AssignmentExpression	sfd = - 1		104045	2		=			
ANR	104060	Identifier	sfd		104045	0					
ANR	104061	UnaryOperationExpression	- 1		104045	1					
ANR	104062	UnaryOperator	-		104045	0					
ANR	104063	PrimaryExpression	1		104045	1					
ANR	104064	IdentifierDeclStatement	size_t msgLen ;	150:4:3806:3819	104045	2	True				
ANR	104065	IdentifierDecl	msgLen		104045	0					
ANR	104066	IdentifierDeclType	size_t		104045	0					
ANR	104067	Identifier	msgLen		104045	1					
ANR	104068	IdentifierDeclStatement	char resp [ BUF_SIZE ] ;	151:4:3825:3844	104045	3	True				
ANR	104069	IdentifierDecl	resp [ BUF_SIZE ]		104045	0					
ANR	104070	IdentifierDeclType	char [ BUF_SIZE ]		104045	0					
ANR	104071	Identifier	resp		104045	1					
ANR	104072	Identifier	BUF_SIZE		104045	2					
ANR	104073	IfStatement	if ( verbose )		104045	4					
ANR	104074	Condition	verbose	153:8:3855:3861	104045	0	True				
ANR	104075	Identifier	verbose		104045	0					
ANR	104076	CompoundStatement		7:17:120:120	104045	1					
ANR	104077	Statement	LOGI	154:8:3874:3877	104045	0	True				
ANR	104078	Statement	(	154:12:3878:3878	104045	1	True				
ANR	104079	Statement	"""update traffic stat: tx: %"""	154:13:3879:3906	104045	2	True				
ANR	104080	Statement	PRIu64	154:42:3908:3913	104045	3	True				
ANR	104081	Statement	""" rx: %"""	154:49:3915:3922	104045	4	True				
ANR	104082	Statement	PRIu64	154:58:3924:3929	104045	5	True				
ANR	104083	Statement	""""""	154:65:3931:3932	104045	6	True				
ANR	104084	Statement	","	154:67:3933:3933	104045	7	True				
ANR	104085	Statement	tx	154:69:3935:3936	104045	8	True				
ANR	104086	Statement	","	154:71:3937:3937	104045	9	True				
ANR	104087	Statement	rx	154:73:3939:3940	104045	10	True				
ANR	104088	Statement	)	154:75:3941:3941	104045	11	True				
ANR	104089	ExpressionStatement		154:76:3942:3942	104045	12	True				
ANR	104090	Statement	snprintf	157:4:3955:3962	104045	5	True				
ANR	104091	Statement	(	157:12:3963:3963	104045	6	True				
ANR	104092	Statement	resp	157:13:3964:3967	104045	7	True				
ANR	104093	Statement	","	157:17:3968:3968	104045	8	True				
ANR	104094	Statement	BUF_SIZE	157:19:3970:3977	104045	9	True				
ANR	104095	Statement	","	157:27:3978:3978	104045	10	True				
ANR	104096	Statement	"""stat: {\\""%s\\"":%"""	157:29:3980:3996	104045	11	True				
ANR	104097	Statement	PRIu64	157:47:3998:4003	104045	12	True				
ANR	104098	Statement	"""}"""	157:54:4005:4007	104045	13	True				
ANR	104099	Statement	","	157:57:4008:4008	104045	14	True				
ANR	104100	Statement	remote_port	157:59:4010:4020	104045	15	True				
ANR	104101	Statement	","	157:70:4021:4021	104045	16	True				
ANR	104102	Statement	tx	157:72:4023:4024	104045	17	True				
ANR	104103	Statement	+	157:75:4026:4026	104045	18	True				
ANR	104104	Statement	rx	157:77:4028:4029	104045	19	True				
ANR	104105	Statement	)	157:79:4030:4030	104045	20	True				
ANR	104106	ExpressionStatement		157:80:4031:4031	104045	21	True				
ANR	104107	ExpressionStatement	msgLen = strlen ( resp ) + 1	158:4:4037:4062	104045	22	True				
ANR	104108	AssignmentExpression	msgLen = strlen ( resp ) + 1		104045	0		=			
ANR	104109	Identifier	msgLen		104045	0					
ANR	104110	AdditiveExpression	strlen ( resp ) + 1		104045	1		+			
ANR	104111	CallExpression	strlen ( resp )		104045	0					
ANR	104112	Callee	strlen		104045	0					
ANR	104113	Identifier	strlen		104045	0					
ANR	104114	ArgumentList	resp		104045	1					
ANR	104115	Argument	resp		104045	0					
ANR	104116	Identifier	resp		104045	0					
ANR	104117	PrimaryExpression	1		104045	1					
ANR	104118	Statement	ss_addr_t	160:4:4069:4077	104045	23	True				
ANR	104119	Statement	ip_addr	160:14:4079:4085	104045	24	True				
ANR	104120	Statement	=	160:22:4087:4087	104045	25	True				
ANR	104121	CompoundStatement		14:24:345:345	104045	26					
ANR	104122	Statement	.	160:26:4091:4091	104045	0	True				
ANR	104123	Statement	host	160:27:4092:4095	104045	1	True				
ANR	104124	Statement	=	160:32:4097:4097	104045	2	True				
ANR	104125	Statement	NULL	160:34:4099:4102	104045	3	True				
ANR	104126	Statement	","	160:38:4103:4103	104045	4	True				
ANR	104127	Statement	.	160:40:4105:4105	104045	5	True				
ANR	104128	Statement	port	160:41:4106:4109	104045	6	True				
ANR	104129	Statement	=	160:46:4111:4111	104045	7	True				
ANR	104130	Statement	NULL	160:48:4113:4116	104045	8	True				
ANR	104131	ExpressionStatement		160:54:4119:4119	104045	27	True				
ANR	104132	ExpressionStatement	"parse_addr ( manager_address , & ip_addr )"	161:4:4125:4162	104045	28	True				
ANR	104133	CallExpression	"parse_addr ( manager_address , & ip_addr )"		104045	0					
ANR	104134	Callee	parse_addr		104045	0					
ANR	104135	Identifier	parse_addr		104045	0					
ANR	104136	ArgumentList	manager_address		104045	1					
ANR	104137	Argument	manager_address		104045	0					
ANR	104138	Identifier	manager_address		104045	0					
ANR	104139	Argument	& ip_addr		104045	1					
ANR	104140	UnaryOperationExpression	& ip_addr		104045	0					
ANR	104141	UnaryOperator	&		104045	0					
ANR	104142	Identifier	ip_addr		104045	1					
ANR	104143	IfStatement	if ( ip_addr . host == NULL || ip_addr . port == NULL )		104045	29					
ANR	104144	Condition	ip_addr . host == NULL || ip_addr . port == NULL	163:8:4173:4216	104045	0	True				
ANR	104145	OrExpression	ip_addr . host == NULL || ip_addr . port == NULL		104045	0		||			
ANR	104146	EqualityExpression	ip_addr . host == NULL		104045	0		==			
ANR	104147	MemberAccess	ip_addr . host		104045	0					
ANR	104148	Identifier	ip_addr		104045	0					
ANR	104149	Identifier	host		104045	1					
ANR	104150	Identifier	NULL		104045	1					
ANR	104151	EqualityExpression	ip_addr . port == NULL		104045	1		==			
ANR	104152	MemberAccess	ip_addr . port		104045	0					
ANR	104153	Identifier	ip_addr		104045	0					
ANR	104154	Identifier	port		104045	1					
ANR	104155	Identifier	NULL		104045	1					
ANR	104156	CompoundStatement		17:54:475:475	104045	1					
ANR	104157	ExpressionStatement	"sfd = socket ( AF_UNIX , SOCK_DGRAM , 0 )"	164:8:4229:4265	104045	0	True				
ANR	104158	AssignmentExpression	"sfd = socket ( AF_UNIX , SOCK_DGRAM , 0 )"		104045	0		=			
ANR	104159	Identifier	sfd		104045	0					
ANR	104160	CallExpression	"socket ( AF_UNIX , SOCK_DGRAM , 0 )"		104045	1					
ANR	104161	Callee	socket		104045	0					
ANR	104162	Identifier	socket		104045	0					
ANR	104163	ArgumentList	AF_UNIX		104045	1					
ANR	104164	Argument	AF_UNIX		104045	0					
ANR	104165	Identifier	AF_UNIX		104045	0					
ANR	104166	Argument	SOCK_DGRAM		104045	1					
ANR	104167	Identifier	SOCK_DGRAM		104045	0					
ANR	104168	Argument	0		104045	2					
ANR	104169	PrimaryExpression	0		104045	0					
ANR	104170	IfStatement	if ( sfd == - 1 )		104045	1					
ANR	104171	Condition	sfd == - 1	165:12:4279:4287	104045	0	True				
ANR	104172	EqualityExpression	sfd == - 1		104045	0		==			
ANR	104173	Identifier	sfd		104045	0					
ANR	104174	UnaryOperationExpression	- 1		104045	1					
ANR	104175	UnaryOperator	-		104045	0					
ANR	104176	PrimaryExpression	1		104045	1					
ANR	104177	CompoundStatement		19:23:546:546	104045	1					
ANR	104178	ExpressionStatement	"ERROR ( ""stat_socket"" )"	166:12:4304:4324	104045	0	True				
ANR	104179	CallExpression	"ERROR ( ""stat_socket"" )"		104045	0					
ANR	104180	Callee	ERROR		104045	0					
ANR	104181	Identifier	ERROR		104045	0					
ANR	104182	ArgumentList	"""stat_socket"""		104045	1					
ANR	104183	Argument	"""stat_socket"""		104045	0					
ANR	104184	PrimaryExpression	"""stat_socket"""		104045	0					
ANR	104185	ReturnStatement	return ;	167:12:4338:4344	104045	1	True				
ANR	104186	ExpressionStatement	"memset ( & claddr , 0 , sizeof ( struct sockaddr_un ) )"	170:8:4365:4411	104045	2	True				
ANR	104187	CallExpression	"memset ( & claddr , 0 , sizeof ( struct sockaddr_un ) )"		104045	0					
ANR	104188	Callee	memset		104045	0					
ANR	104189	Identifier	memset		104045	0					
ANR	104190	ArgumentList	& claddr		104045	1					
ANR	104191	Argument	& claddr		104045	0					
ANR	104192	UnaryOperationExpression	& claddr		104045	0					
ANR	104193	UnaryOperator	&		104045	0					
ANR	104194	Identifier	claddr		104045	1					
ANR	104195	Argument	0		104045	1					
ANR	104196	PrimaryExpression	0		104045	0					
ANR	104197	Argument	sizeof ( struct sockaddr_un )		104045	2					
ANR	104198	SizeofExpression	sizeof ( struct sockaddr_un )		104045	0					
ANR	104199	Sizeof	sizeof		104045	0					
ANR	104200	SizeofOperand	struct sockaddr_un		104045	1					
ANR	104201	ExpressionStatement	claddr . sun_family = AF_UNIX	171:8:4421:4448	104045	3	True				
ANR	104202	AssignmentExpression	claddr . sun_family = AF_UNIX		104045	0		=			
ANR	104203	MemberAccess	claddr . sun_family		104045	0					
ANR	104204	Identifier	claddr		104045	0					
ANR	104205	Identifier	sun_family		104045	1					
ANR	104206	Identifier	AF_UNIX		104045	1					
ANR	104207	ExpressionStatement	"snprintf ( claddr . sun_path , sizeof ( claddr . sun_path ) , ""/tmp/shadowsocks.%s"" , remote_port )"	172:8:4458:4544	104045	4	True				
ANR	104208	CallExpression	"snprintf ( claddr . sun_path , sizeof ( claddr . sun_path ) , ""/tmp/shadowsocks.%s"" , remote_port )"		104045	0					
ANR	104209	Callee	snprintf		104045	0					
ANR	104210	Identifier	snprintf		104045	0					
ANR	104211	ArgumentList	claddr . sun_path		104045	1					
ANR	104212	Argument	claddr . sun_path		104045	0					
ANR	104213	MemberAccess	claddr . sun_path		104045	0					
ANR	104214	Identifier	claddr		104045	0					
ANR	104215	Identifier	sun_path		104045	1					
ANR	104216	Argument	sizeof ( claddr . sun_path )		104045	1					
ANR	104217	SizeofExpression	sizeof ( claddr . sun_path )		104045	0					
ANR	104218	Sizeof	sizeof		104045	0					
ANR	104219	MemberAccess	claddr . sun_path		104045	1					
ANR	104220	Identifier	claddr		104045	0					
ANR	104221	Identifier	sun_path		104045	1					
ANR	104222	Argument	"""/tmp/shadowsocks.%s"""		104045	2					
ANR	104223	PrimaryExpression	"""/tmp/shadowsocks.%s"""		104045	0					
ANR	104224	Argument	remote_port		104045	3					
ANR	104225	Identifier	remote_port		104045	0					
ANR	104226	ExpressionStatement	unlink ( claddr . sun_path )	174:8:4555:4578	104045	5	True				
ANR	104227	CallExpression	unlink ( claddr . sun_path )		104045	0					
ANR	104228	Callee	unlink		104045	0					
ANR	104229	Identifier	unlink		104045	0					
ANR	104230	ArgumentList	claddr . sun_path		104045	1					
ANR	104231	Argument	claddr . sun_path		104045	0					
ANR	104232	MemberAccess	claddr . sun_path		104045	0					
ANR	104233	Identifier	claddr		104045	0					
ANR	104234	Identifier	sun_path		104045	1					
ANR	104235	IfStatement	"if ( bind ( sfd , ( struct sockaddr * ) & claddr , sizeof ( struct sockaddr_un ) ) == - 1 )"		104045	6					
ANR	104236	Condition	"bind ( sfd , ( struct sockaddr * ) & claddr , sizeof ( struct sockaddr_un ) ) == - 1"	176:12:4593:4663	104045	0	True				
ANR	104237	EqualityExpression	"bind ( sfd , ( struct sockaddr * ) & claddr , sizeof ( struct sockaddr_un ) ) == - 1"		104045	0		==			
ANR	104238	CallExpression	"bind ( sfd , ( struct sockaddr * ) & claddr , sizeof ( struct sockaddr_un ) )"		104045	0					
ANR	104239	Callee	bind		104045	0					
ANR	104240	Identifier	bind		104045	0					
ANR	104241	ArgumentList	sfd		104045	1					
ANR	104242	Argument	sfd		104045	0					
ANR	104243	Identifier	sfd		104045	0					
ANR	104244	Argument	( struct sockaddr * ) & claddr		104045	1					
ANR	104245	CastExpression	( struct sockaddr * ) & claddr		104045	0					
ANR	104246	CastTarget	struct sockaddr *		104045	0					
ANR	104247	UnaryOperationExpression	& claddr		104045	1					
ANR	104248	UnaryOperator	&		104045	0					
ANR	104249	Identifier	claddr		104045	1					
ANR	104250	Argument	sizeof ( struct sockaddr_un )		104045	2					
ANR	104251	SizeofExpression	sizeof ( struct sockaddr_un )		104045	0					
ANR	104252	Sizeof	sizeof		104045	0					
ANR	104253	SizeofOperand	struct sockaddr_un		104045	1					
ANR	104254	UnaryOperationExpression	- 1		104045	1					
ANR	104255	UnaryOperator	-		104045	0					
ANR	104256	PrimaryExpression	1		104045	1					
ANR	104257	CompoundStatement		30:85:922:922	104045	1					
ANR	104258	ExpressionStatement	"ERROR ( ""stat_bind"" )"	177:12:4680:4698	104045	0	True				
ANR	104259	CallExpression	"ERROR ( ""stat_bind"" )"		104045	0					
ANR	104260	Callee	ERROR		104045	0					
ANR	104261	Identifier	ERROR		104045	0					
ANR	104262	ArgumentList	"""stat_bind"""		104045	1					
ANR	104263	Argument	"""stat_bind"""		104045	0					
ANR	104264	PrimaryExpression	"""stat_bind"""		104045	0					
ANR	104265	ExpressionStatement	close ( sfd )	178:12:4712:4722	104045	1	True				
ANR	104266	CallExpression	close ( sfd )		104045	0					
ANR	104267	Callee	close		104045	0					
ANR	104268	Identifier	close		104045	0					
ANR	104269	ArgumentList	sfd		104045	1					
ANR	104270	Argument	sfd		104045	0					
ANR	104271	Identifier	sfd		104045	0					
ANR	104272	ReturnStatement	return ;	179:12:4736:4742	104045	2	True				
ANR	104273	ExpressionStatement	"memset ( & svaddr , 0 , sizeof ( struct sockaddr_un ) )"	182:8:4763:4809	104045	7	True				
ANR	104274	CallExpression	"memset ( & svaddr , 0 , sizeof ( struct sockaddr_un ) )"		104045	0					
ANR	104275	Callee	memset		104045	0					
ANR	104276	Identifier	memset		104045	0					
ANR	104277	ArgumentList	& svaddr		104045	1					
ANR	104278	Argument	& svaddr		104045	0					
ANR	104279	UnaryOperationExpression	& svaddr		104045	0					
ANR	104280	UnaryOperator	&		104045	0					
ANR	104281	Identifier	svaddr		104045	1					
ANR	104282	Argument	0		104045	1					
ANR	104283	PrimaryExpression	0		104045	0					
ANR	104284	Argument	sizeof ( struct sockaddr_un )		104045	2					
ANR	104285	SizeofExpression	sizeof ( struct sockaddr_un )		104045	0					
ANR	104286	Sizeof	sizeof		104045	0					
ANR	104287	SizeofOperand	struct sockaddr_un		104045	1					
ANR	104288	ExpressionStatement	svaddr . sun_family = AF_UNIX	183:8:4819:4846	104045	8	True				
ANR	104289	AssignmentExpression	svaddr . sun_family = AF_UNIX		104045	0		=			
ANR	104290	MemberAccess	svaddr . sun_family		104045	0					
ANR	104291	Identifier	svaddr		104045	0					
ANR	104292	Identifier	sun_family		104045	1					
ANR	104293	Identifier	AF_UNIX		104045	1					
ANR	104294	ExpressionStatement	"strncpy ( svaddr . sun_path , manager_address , sizeof ( svaddr . sun_path ) - 1 )"	184:8:4856:4926	104045	9	True				
ANR	104295	CallExpression	"strncpy ( svaddr . sun_path , manager_address , sizeof ( svaddr . sun_path ) - 1 )"		104045	0					
ANR	104296	Callee	strncpy		104045	0					
ANR	104297	Identifier	strncpy		104045	0					
ANR	104298	ArgumentList	svaddr . sun_path		104045	1					
ANR	104299	Argument	svaddr . sun_path		104045	0					
ANR	104300	MemberAccess	svaddr . sun_path		104045	0					
ANR	104301	Identifier	svaddr		104045	0					
ANR	104302	Identifier	sun_path		104045	1					
ANR	104303	Argument	manager_address		104045	1					
ANR	104304	Identifier	manager_address		104045	0					
ANR	104305	Argument	sizeof ( svaddr . sun_path ) - 1		104045	2					
ANR	104306	AdditiveExpression	sizeof ( svaddr . sun_path ) - 1		104045	0		-			
ANR	104307	SizeofExpression	sizeof ( svaddr . sun_path )		104045	0					
ANR	104308	Sizeof	sizeof		104045	0					
ANR	104309	MemberAccess	svaddr . sun_path		104045	1					
ANR	104310	Identifier	svaddr		104045	0					
ANR	104311	Identifier	sun_path		104045	1					
ANR	104312	PrimaryExpression	1		104045	1					
ANR	104313	IfStatement	"if ( sendto ( sfd , resp , strlen ( resp ) + 1 , 0 , ( struct sockaddr * ) & svaddr , sizeof ( struct sockaddr_un ) ) != msgLen )"		104045	10					
ANR	104314	Condition	"sendto ( sfd , resp , strlen ( resp ) + 1 , 0 , ( struct sockaddr * ) & svaddr , sizeof ( struct sockaddr_un ) ) != msgLen"	186:12:4941:5063	104045	0	True				
ANR	104315	EqualityExpression	"sendto ( sfd , resp , strlen ( resp ) + 1 , 0 , ( struct sockaddr * ) & svaddr , sizeof ( struct sockaddr_un ) ) != msgLen"		104045	0		!=			
ANR	104316	CallExpression	"sendto ( sfd , resp , strlen ( resp ) + 1 , 0 , ( struct sockaddr * ) & svaddr , sizeof ( struct sockaddr_un ) )"		104045	0					
ANR	104317	Callee	sendto		104045	0					
ANR	104318	Identifier	sendto		104045	0					
ANR	104319	ArgumentList	sfd		104045	1					
ANR	104320	Argument	sfd		104045	0					
ANR	104321	Identifier	sfd		104045	0					
ANR	104322	Argument	resp		104045	1					
ANR	104323	Identifier	resp		104045	0					
ANR	104324	Argument	strlen ( resp ) + 1		104045	2					
ANR	104325	AdditiveExpression	strlen ( resp ) + 1		104045	0		+			
ANR	104326	CallExpression	strlen ( resp )		104045	0					
ANR	104327	Callee	strlen		104045	0					
ANR	104328	Identifier	strlen		104045	0					
ANR	104329	ArgumentList	resp		104045	1					
ANR	104330	Argument	resp		104045	0					
ANR	104331	Identifier	resp		104045	0					
ANR	104332	PrimaryExpression	1		104045	1					
ANR	104333	Argument	0		104045	3					
ANR	104334	PrimaryExpression	0		104045	0					
ANR	104335	Argument	( struct sockaddr * ) & svaddr		104045	4					
ANR	104336	CastExpression	( struct sockaddr * ) & svaddr		104045	0					
ANR	104337	CastTarget	struct sockaddr *		104045	0					
ANR	104338	UnaryOperationExpression	& svaddr		104045	1					
ANR	104339	UnaryOperator	&		104045	0					
ANR	104340	Identifier	svaddr		104045	1					
ANR	104341	Argument	sizeof ( struct sockaddr_un )		104045	5					
ANR	104342	SizeofExpression	sizeof ( struct sockaddr_un )		104045	0					
ANR	104343	Sizeof	sizeof		104045	0					
ANR	104344	SizeofOperand	struct sockaddr_un		104045	1					
ANR	104345	Identifier	msgLen		104045	1					
ANR	104346	CompoundStatement		41:58:1322:1322	104045	1					
ANR	104347	ExpressionStatement	"ERROR ( ""stat_sendto"" )"	188:12:5080:5100	104045	0	True				
ANR	104348	CallExpression	"ERROR ( ""stat_sendto"" )"		104045	0					
ANR	104349	Callee	ERROR		104045	0					
ANR	104350	Identifier	ERROR		104045	0					
ANR	104351	ArgumentList	"""stat_sendto"""		104045	1					
ANR	104352	Argument	"""stat_sendto"""		104045	0					
ANR	104353	PrimaryExpression	"""stat_sendto"""		104045	0					
ANR	104354	ExpressionStatement	close ( sfd )	189:12:5114:5124	104045	1	True				
ANR	104355	CallExpression	close ( sfd )		104045	0					
ANR	104356	Callee	close		104045	0					
ANR	104357	Identifier	close		104045	0					
ANR	104358	ArgumentList	sfd		104045	1					
ANR	104359	Argument	sfd		104045	0					
ANR	104360	Identifier	sfd		104045	0					
ANR	104361	ReturnStatement	return ;	190:12:5138:5144	104045	2	True				
ANR	104362	ExpressionStatement	unlink ( claddr . sun_path )	193:8:5165:5188	104045	11	True				
ANR	104363	CallExpression	unlink ( claddr . sun_path )		104045	0					
ANR	104364	Callee	unlink		104045	0					
ANR	104365	Identifier	unlink		104045	0					
ANR	104366	ArgumentList	claddr . sun_path		104045	1					
ANR	104367	Argument	claddr . sun_path		104045	0					
ANR	104368	MemberAccess	claddr . sun_path		104045	0					
ANR	104369	Identifier	claddr		104045	0					
ANR	104370	Identifier	sun_path		104045	1					
ANR	104371	ElseStatement	else		104045	0					
ANR	104372	CompoundStatement		63:8:1889:1952	104045	0					
ANR	104373	IdentifierDeclStatement	struct sockaddr_storage storage ;	195:8:5211:5242	104045	0	True				
ANR	104374	IdentifierDecl	storage		104045	0					
ANR	104375	IdentifierDeclType	struct sockaddr_storage		104045	0					
ANR	104376	Identifier	storage		104045	1					
ANR	104377	ExpressionStatement	"memset ( & storage , 0 , sizeof ( struct sockaddr_storage ) )"	196:8:5252:5304	104045	1	True				
ANR	104378	CallExpression	"memset ( & storage , 0 , sizeof ( struct sockaddr_storage ) )"		104045	0					
ANR	104379	Callee	memset		104045	0					
ANR	104380	Identifier	memset		104045	0					
ANR	104381	ArgumentList	& storage		104045	1					
ANR	104382	Argument	& storage		104045	0					
ANR	104383	UnaryOperationExpression	& storage		104045	0					
ANR	104384	UnaryOperator	&		104045	0					
ANR	104385	Identifier	storage		104045	1					
ANR	104386	Argument	0		104045	1					
ANR	104387	PrimaryExpression	0		104045	0					
ANR	104388	Argument	sizeof ( struct sockaddr_storage )		104045	2					
ANR	104389	SizeofExpression	sizeof ( struct sockaddr_storage )		104045	0					
ANR	104390	Sizeof	sizeof		104045	0					
ANR	104391	SizeofOperand	struct sockaddr_storage		104045	1					
ANR	104392	IfStatement	"if ( get_sockaddr ( ip_addr . host , ip_addr . port , & storage , 0 , ipv6first ) == - 1 )"		104045	2					
ANR	104393	Condition	"get_sockaddr ( ip_addr . host , ip_addr . port , & storage , 0 , ipv6first ) == - 1"	197:12:5318:5387	104045	0	True				
ANR	104394	EqualityExpression	"get_sockaddr ( ip_addr . host , ip_addr . port , & storage , 0 , ipv6first ) == - 1"		104045	0		==			
ANR	104395	CallExpression	"get_sockaddr ( ip_addr . host , ip_addr . port , & storage , 0 , ipv6first )"		104045	0					
ANR	104396	Callee	get_sockaddr		104045	0					
ANR	104397	Identifier	get_sockaddr		104045	0					
ANR	104398	ArgumentList	ip_addr . host		104045	1					
ANR	104399	Argument	ip_addr . host		104045	0					
ANR	104400	MemberAccess	ip_addr . host		104045	0					
ANR	104401	Identifier	ip_addr		104045	0					
ANR	104402	Identifier	host		104045	1					
ANR	104403	Argument	ip_addr . port		104045	1					
ANR	104404	MemberAccess	ip_addr . port		104045	0					
ANR	104405	Identifier	ip_addr		104045	0					
ANR	104406	Identifier	port		104045	1					
ANR	104407	Argument	& storage		104045	2					
ANR	104408	UnaryOperationExpression	& storage		104045	0					
ANR	104409	UnaryOperator	&		104045	0					
ANR	104410	Identifier	storage		104045	1					
ANR	104411	Argument	0		104045	3					
ANR	104412	PrimaryExpression	0		104045	0					
ANR	104413	Argument	ipv6first		104045	4					
ANR	104414	Identifier	ipv6first		104045	0					
ANR	104415	UnaryOperationExpression	- 1		104045	1					
ANR	104416	UnaryOperator	-		104045	0					
ANR	104417	PrimaryExpression	1		104045	1					
ANR	104418	CompoundStatement		51:84:1646:1646	104045	1					
ANR	104419	ExpressionStatement	"ERROR ( ""failed to parse the manager addr"" )"	198:12:5404:5445	104045	0	True				
ANR	104420	CallExpression	"ERROR ( ""failed to parse the manager addr"" )"		104045	0					
ANR	104421	Callee	ERROR		104045	0					
ANR	104422	Identifier	ERROR		104045	0					
ANR	104423	ArgumentList	"""failed to parse the manager addr"""		104045	1					
ANR	104424	Argument	"""failed to parse the manager addr"""		104045	0					
ANR	104425	PrimaryExpression	"""failed to parse the manager addr"""		104045	0					
ANR	104426	ReturnStatement	return ;	199:12:5459:5465	104045	1	True				
ANR	104427	ExpressionStatement	"sfd = socket ( storage . ss_family , SOCK_DGRAM , 0 )"	202:8:5486:5532	104045	3	True				
ANR	104428	AssignmentExpression	"sfd = socket ( storage . ss_family , SOCK_DGRAM , 0 )"		104045	0		=			
ANR	104429	Identifier	sfd		104045	0					
ANR	104430	CallExpression	"socket ( storage . ss_family , SOCK_DGRAM , 0 )"		104045	1					
ANR	104431	Callee	socket		104045	0					
ANR	104432	Identifier	socket		104045	0					
ANR	104433	ArgumentList	storage . ss_family		104045	1					
ANR	104434	Argument	storage . ss_family		104045	0					
ANR	104435	MemberAccess	storage . ss_family		104045	0					
ANR	104436	Identifier	storage		104045	0					
ANR	104437	Identifier	ss_family		104045	1					
ANR	104438	Argument	SOCK_DGRAM		104045	1					
ANR	104439	Identifier	SOCK_DGRAM		104045	0					
ANR	104440	Argument	0		104045	2					
ANR	104441	PrimaryExpression	0		104045	0					
ANR	104442	IfStatement	if ( sfd == - 1 )		104045	4					
ANR	104443	Condition	sfd == - 1	204:12:5547:5555	104045	0	True				
ANR	104444	EqualityExpression	sfd == - 1		104045	0		==			
ANR	104445	Identifier	sfd		104045	0					
ANR	104446	UnaryOperationExpression	- 1		104045	1					
ANR	104447	UnaryOperator	-		104045	0					
ANR	104448	PrimaryExpression	1		104045	1					
ANR	104449	CompoundStatement		58:23:1814:1814	104045	1					
ANR	104450	ExpressionStatement	"ERROR ( ""stat_socket"" )"	205:12:5572:5592	104045	0	True				
ANR	104451	CallExpression	"ERROR ( ""stat_socket"" )"		104045	0					
ANR	104452	Callee	ERROR		104045	0					
ANR	104453	Identifier	ERROR		104045	0					
ANR	104454	ArgumentList	"""stat_socket"""		104045	1					
ANR	104455	Argument	"""stat_socket"""		104045	0					
ANR	104456	PrimaryExpression	"""stat_socket"""		104045	0					
ANR	104457	ReturnStatement	return ;	206:12:5606:5612	104045	1	True				
ANR	104458	IdentifierDeclStatement	size_t addr_len = get_sockaddr_len ( ( struct sockaddr * ) & storage ) ;	209:8:5633:5696	104045	5	True				
ANR	104459	IdentifierDecl	addr_len = get_sockaddr_len ( ( struct sockaddr * ) & storage )		104045	0					
ANR	104460	IdentifierDeclType	size_t		104045	0					
ANR	104461	Identifier	addr_len		104045	1					
ANR	104462	AssignmentExpression	addr_len = get_sockaddr_len ( ( struct sockaddr * ) & storage )		104045	2		=			
ANR	104463	Identifier	addr_len		104045	0					
ANR	104464	CallExpression	get_sockaddr_len ( ( struct sockaddr * ) & storage )		104045	1					
ANR	104465	Callee	get_sockaddr_len		104045	0					
ANR	104466	Identifier	get_sockaddr_len		104045	0					
ANR	104467	ArgumentList	( struct sockaddr * ) & storage		104045	1					
ANR	104468	Argument	( struct sockaddr * ) & storage		104045	0					
ANR	104469	CastExpression	( struct sockaddr * ) & storage		104045	0					
ANR	104470	CastTarget	struct sockaddr *		104045	0					
ANR	104471	UnaryOperationExpression	& storage		104045	1					
ANR	104472	UnaryOperator	&		104045	0					
ANR	104473	Identifier	storage		104045	1					
ANR	104474	IfStatement	"if ( sendto ( sfd , resp , strlen ( resp ) + 1 , 0 , ( struct sockaddr * ) & storage , addr_len ) != msgLen )"		104045	6					
ANR	104475	Condition	"sendto ( sfd , resp , strlen ( resp ) + 1 , 0 , ( struct sockaddr * ) & storage , addr_len ) != msgLen"	210:12:5710:5815	104045	0	True				
ANR	104476	EqualityExpression	"sendto ( sfd , resp , strlen ( resp ) + 1 , 0 , ( struct sockaddr * ) & storage , addr_len ) != msgLen"		104045	0		!=			
ANR	104477	CallExpression	"sendto ( sfd , resp , strlen ( resp ) + 1 , 0 , ( struct sockaddr * ) & storage , addr_len )"		104045	0					
ANR	104478	Callee	sendto		104045	0					
ANR	104479	Identifier	sendto		104045	0					
ANR	104480	ArgumentList	sfd		104045	1					
ANR	104481	Argument	sfd		104045	0					
ANR	104482	Identifier	sfd		104045	0					
ANR	104483	Argument	resp		104045	1					
ANR	104484	Identifier	resp		104045	0					
ANR	104485	Argument	strlen ( resp ) + 1		104045	2					
ANR	104486	AdditiveExpression	strlen ( resp ) + 1		104045	0		+			
ANR	104487	CallExpression	strlen ( resp )		104045	0					
ANR	104488	Callee	strlen		104045	0					
ANR	104489	Identifier	strlen		104045	0					
ANR	104490	ArgumentList	resp		104045	1					
ANR	104491	Argument	resp		104045	0					
ANR	104492	Identifier	resp		104045	0					
ANR	104493	PrimaryExpression	1		104045	1					
ANR	104494	Argument	0		104045	3					
ANR	104495	PrimaryExpression	0		104045	0					
ANR	104496	Argument	( struct sockaddr * ) & storage		104045	4					
ANR	104497	CastExpression	( struct sockaddr * ) & storage		104045	0					
ANR	104498	CastTarget	struct sockaddr *		104045	0					
ANR	104499	UnaryOperationExpression	& storage		104045	1					
ANR	104500	UnaryOperator	&		104045	0					
ANR	104501	Identifier	storage		104045	1					
ANR	104502	Argument	addr_len		104045	5					
ANR	104503	Identifier	addr_len		104045	0					
ANR	104504	Identifier	msgLen		104045	1					
ANR	104505	CompoundStatement		65:40:2074:2074	104045	1					
ANR	104506	ExpressionStatement	"ERROR ( ""stat_sendto"" )"	212:12:5832:5852	104045	0	True				
ANR	104507	CallExpression	"ERROR ( ""stat_sendto"" )"		104045	0					
ANR	104508	Callee	ERROR		104045	0					
ANR	104509	Identifier	ERROR		104045	0					
ANR	104510	ArgumentList	"""stat_sendto"""		104045	1					
ANR	104511	Argument	"""stat_sendto"""		104045	0					
ANR	104512	PrimaryExpression	"""stat_sendto"""		104045	0					
ANR	104513	ExpressionStatement	close ( sfd )	213:12:5866:5876	104045	1	True				
ANR	104514	CallExpression	close ( sfd )		104045	0					
ANR	104515	Callee	close		104045	0					
ANR	104516	Identifier	close		104045	0					
ANR	104517	ArgumentList	sfd		104045	1					
ANR	104518	Argument	sfd		104045	0					
ANR	104519	Identifier	sfd		104045	0					
ANR	104520	ReturnStatement	return ;	214:12:5890:5896	104045	2	True				
ANR	104521	ExpressionStatement	close ( sfd )	218:4:5919:5929	104045	30	True				
ANR	104522	CallExpression	close ( sfd )		104045	0					
ANR	104523	Callee	close		104045	0					
ANR	104524	Identifier	close		104045	0					
ANR	104525	ArgumentList	sfd		104045	1					
ANR	104526	Argument	sfd		104045	0					
ANR	104527	Identifier	sfd		104045	0					
ANR	104528	ReturnType	static void		104045	1					
ANR	104529	Identifier	stat_update_cb		104045	2					
ANR	104530	ParameterList	"EV_P_ ev_timer * watcher , int revents"		104045	3					
ANR	104531	Parameter	EV_P_ ev_timer * watcher	146:15:3705:3727	104045	0	True				
ANR	104532	ParameterType	EV_P_ ev_timer *		104045	0					
ANR	104533	Identifier	watcher		104045	1					
ANR	104534	Parameter	int revents	146:40:3730:3740	104045	1	True				
ANR	104535	ParameterType	int		104045	0					
ANR	104536	Identifier	revents		104045	1					
ANR	104537	CFGEntryNode	ENTRY		104045		True				
ANR	104538	CFGExitNode	EXIT		104045		True				
ANR	104539	Symbol	svaddr . sun_path		104045						
ANR	104540	Symbol	ipv6first		104045						
ANR	104541	Symbol	sendto		104045						
ANR	104542	Symbol	revents		104045						
ANR	104543	Symbol	storage		104045						
ANR	104544	Symbol	& ip_addr		104045						
ANR	104545	Symbol	msgLen		104045						
ANR	104546	Symbol	strlen		104045						
ANR	104547	Symbol	manager_address		104045						
ANR	104548	Symbol	bind		104045						
ANR	104549	Symbol	& svaddr		104045						
ANR	104550	Symbol	claddr		104045						
ANR	104551	Symbol	claddr . sun_path		104045						
ANR	104552	Symbol	& claddr		104045						
ANR	104553	Symbol	ip_addr . host		104045						
ANR	104554	Symbol	claddr . sun_family		104045						
ANR	104555	Symbol	addr_len		104045						
ANR	104556	Symbol	watcher		104045						
ANR	104557	Symbol	get_sockaddr		104045						
ANR	104558	Symbol	NULL		104045						
ANR	104559	Symbol	ip_addr . port		104045						
ANR	104560	Symbol	get_sockaddr_len		104045						
ANR	104561	Symbol	resp		104045						
ANR	104562	Symbol	AF_UNIX		104045						
ANR	104563	Symbol	remote_port		104045						
ANR	104564	Symbol	SOCK_DGRAM		104045						
ANR	104565	Symbol	verbose		104045						
ANR	104566	Symbol	sfd		104045						
ANR	104567	Symbol	storage . ss_family		104045						
ANR	104568	Symbol	socket		104045						
ANR	104569	Symbol	ip_addr		104045						
ANR	104570	Symbol	svaddr		104045						
ANR	104571	Symbol	svaddr . sun_family		104045						
ANR	104572	Symbol	& storage		104045						
ANR	104573	Function	free_connections	221:0:5934:6296							
ANR	104574	FunctionDef	free_connections (struct ev_loop * loop)		104573	0					
ANR	104575	CompoundStatement		223:0:5985:6296	104573	0					
ANR	104576	IdentifierDeclStatement	"struct cork_dllist_item * curr , * next ;"	224:4:5991:6027	104573	0	True				
ANR	104577	IdentifierDecl	* curr		104573	0					
ANR	104578	IdentifierDeclType	struct cork_dllist_item *		104573	0					
ANR	104579	Identifier	curr		104573	1					
ANR	104580	IdentifierDecl	* next		104573	1					
ANR	104581	IdentifierDeclType	struct cork_dllist_item *		104573	0					
ANR	104582	Identifier	next		104573	1					
ANR	104583	Statement	cork_dllist_foreach_void	225:4:6033:6056	104573	1	True				
ANR	104584	Statement	(	225:28:6057:6057	104573	2	True				
ANR	104585	Statement	&	225:29:6058:6058	104573	3	True				
ANR	104586	Statement	connections	225:30:6059:6069	104573	4	True				
ANR	104587	Statement	","	225:41:6070:6070	104573	5	True				
ANR	104588	Statement	curr	225:43:6072:6075	104573	6	True				
ANR	104589	Statement	","	225:47:6076:6076	104573	7	True				
ANR	104590	Statement	next	225:49:6078:6081	104573	8	True				
ANR	104591	Statement	)	225:53:6082:6082	104573	9	True				
ANR	104592	CompoundStatement		5:8:179:212	104573	10					
ANR	104593	IdentifierDeclStatement	"server_t * server = cork_container_of ( curr , server_t , entries ) ;"	226:8:6094:6155	104573	0	True				
ANR	104594	IdentifierDecl	"* server = cork_container_of ( curr , server_t , entries )"		104573	0					
ANR	104595	IdentifierDeclType	server_t *		104573	0					
ANR	104596	Identifier	server		104573	1					
ANR	104597	AssignmentExpression	"* server = cork_container_of ( curr , server_t , entries )"		104573	2		=			
ANR	104598	Identifier	server		104573	0					
ANR	104599	CallExpression	"cork_container_of ( curr , server_t , entries )"		104573	1					
ANR	104600	Callee	cork_container_of		104573	0					
ANR	104601	Identifier	cork_container_of		104573	0					
ANR	104602	ArgumentList	curr		104573	1					
ANR	104603	Argument	curr		104573	0					
ANR	104604	Identifier	curr		104573	0					
ANR	104605	Argument	server_t		104573	1					
ANR	104606	Identifier	server_t		104573	0					
ANR	104607	Argument	entries		104573	2					
ANR	104608	Identifier	entries		104573	0					
ANR	104609	IdentifierDeclStatement	remote_t * remote = server -> remote ;	227:8:6165:6198	104573	1	True				
ANR	104610	IdentifierDecl	* remote = server -> remote		104573	0					
ANR	104611	IdentifierDeclType	remote_t *		104573	0					
ANR	104612	Identifier	remote		104573	1					
ANR	104613	AssignmentExpression	* remote = server -> remote		104573	2		=			
ANR	104614	Identifier	remote		104573	0					
ANR	104615	PtrMemberAccess	server -> remote		104573	1					
ANR	104616	Identifier	server		104573	0					
ANR	104617	Identifier	remote		104573	1					
ANR	104618	ExpressionStatement	"close_and_free_server ( loop , server )"	228:8:6208:6243	104573	2	True				
ANR	104619	CallExpression	"close_and_free_server ( loop , server )"		104573	0					
ANR	104620	Callee	close_and_free_server		104573	0					
ANR	104621	Identifier	close_and_free_server		104573	0					
ANR	104622	ArgumentList	loop		104573	1					
ANR	104623	Argument	loop		104573	0					
ANR	104624	Identifier	loop		104573	0					
ANR	104625	Argument	server		104573	1					
ANR	104626	Identifier	server		104573	0					
ANR	104627	ExpressionStatement	"close_and_free_remote ( loop , remote )"	229:8:6253:6288	104573	3	True				
ANR	104628	CallExpression	"close_and_free_remote ( loop , remote )"		104573	0					
ANR	104629	Callee	close_and_free_remote		104573	0					
ANR	104630	Identifier	close_and_free_remote		104573	0					
ANR	104631	ArgumentList	loop		104573	1					
ANR	104632	Argument	loop		104573	0					
ANR	104633	Identifier	loop		104573	0					
ANR	104634	Argument	remote		104573	1					
ANR	104635	Identifier	remote		104573	0					
ANR	104636	ReturnType	static void		104573	1					
ANR	104637	Identifier	free_connections		104573	2					
ANR	104638	ParameterList	struct ev_loop * loop		104573	3					
ANR	104639	Parameter	struct ev_loop * loop	222:17:5963:5982	104573	0	True				
ANR	104640	ParameterType	struct ev_loop *		104573	0					
ANR	104641	Identifier	loop		104573	1					
ANR	104642	CFGEntryNode	ENTRY		104573		True				
ANR	104643	CFGExitNode	EXIT		104573		True				
ANR	104644	Symbol	next		104573						
ANR	104645	Symbol	cork_container_of		104573						
ANR	104646	Symbol	server		104573						
ANR	104647	Symbol	entries		104573						
ANR	104648	Symbol	* server		104573						
ANR	104649	Symbol	loop		104573						
ANR	104650	Symbol	server -> remote		104573						
ANR	104651	Symbol	server_t		104573						
ANR	104652	Symbol	curr		104573						
ANR	104653	Symbol	remote		104573						
ANR	104654	Function	get_peer_name	233:0:6299:7076							
ANR	104655	FunctionDef	get_peer_name (int fd)		104654	0					
ANR	104656	CompoundStatement		235:0:6335:7076	104654	0					
ANR	104657	Statement	static	236:4:6341:6346	104654	0	True				
ANR	104658	IdentifierDeclStatement	char peer_name [ INET6_ADDRSTRLEN ] = { 0 } ;	236:11:6348:6388	104654	1	True				
ANR	104659	IdentifierDecl	peer_name [ INET6_ADDRSTRLEN ] = { 0 }		104654	0					
ANR	104660	IdentifierDeclType	char [ INET6_ADDRSTRLEN ]		104654	0					
ANR	104661	Identifier	peer_name		104654	1					
ANR	104662	Identifier	INET6_ADDRSTRLEN		104654	2					
ANR	104663	AssignmentExpression	peer_name [ INET6_ADDRSTRLEN ] = { 0 }		104654	3		=			
ANR	104664	Identifier	INET6_ADDRSTRLEN		104654	0					
ANR	104665	InitializerList	0		104654	1					
ANR	104666	PrimaryExpression	0		104654	0					
ANR	104667	IdentifierDeclStatement	struct sockaddr_storage addr ;	237:4:6394:6422	104654	2	True				
ANR	104668	IdentifierDecl	addr		104654	0					
ANR	104669	IdentifierDeclType	struct sockaddr_storage		104654	0					
ANR	104670	Identifier	addr		104654	1					
ANR	104671	IdentifierDeclStatement	socklen_t len = sizeof ( struct sockaddr_storage ) ;	238:4:6428:6475	104654	3	True				
ANR	104672	IdentifierDecl	len = sizeof ( struct sockaddr_storage )		104654	0					
ANR	104673	IdentifierDeclType	socklen_t		104654	0					
ANR	104674	Identifier	len		104654	1					
ANR	104675	AssignmentExpression	len = sizeof ( struct sockaddr_storage )		104654	2		=			
ANR	104676	Identifier	len		104654	0					
ANR	104677	SizeofExpression	sizeof ( struct sockaddr_storage )		104654	1					
ANR	104678	Sizeof	sizeof		104654	0					
ANR	104679	SizeofOperand	struct sockaddr_storage		104654	1					
ANR	104680	ExpressionStatement	"memset ( & addr , 0 , len )"	239:4:6481:6502	104654	4	True				
ANR	104681	CallExpression	"memset ( & addr , 0 , len )"		104654	0					
ANR	104682	Callee	memset		104654	0					
ANR	104683	Identifier	memset		104654	0					
ANR	104684	ArgumentList	& addr		104654	1					
ANR	104685	Argument	& addr		104654	0					
ANR	104686	UnaryOperationExpression	& addr		104654	0					
ANR	104687	UnaryOperator	&		104654	0					
ANR	104688	Identifier	addr		104654	1					
ANR	104689	Argument	0		104654	1					
ANR	104690	PrimaryExpression	0		104654	0					
ANR	104691	Argument	len		104654	2					
ANR	104692	Identifier	len		104654	0					
ANR	104693	ExpressionStatement	"memset ( peer_name , 0 , INET6_ADDRSTRLEN )"	240:4:6508:6546	104654	5	True				
ANR	104694	CallExpression	"memset ( peer_name , 0 , INET6_ADDRSTRLEN )"		104654	0					
ANR	104695	Callee	memset		104654	0					
ANR	104696	Identifier	memset		104654	0					
ANR	104697	ArgumentList	peer_name		104654	1					
ANR	104698	Argument	peer_name		104654	0					
ANR	104699	Identifier	peer_name		104654	0					
ANR	104700	Argument	0		104654	1					
ANR	104701	PrimaryExpression	0		104654	0					
ANR	104702	Argument	INET6_ADDRSTRLEN		104654	2					
ANR	104703	Identifier	INET6_ADDRSTRLEN		104654	0					
ANR	104704	IdentifierDeclStatement	"int err = getpeername ( fd , ( struct sockaddr * ) & addr , & len ) ;"	241:4:6552:6609	104654	6	True				
ANR	104705	IdentifierDecl	"err = getpeername ( fd , ( struct sockaddr * ) & addr , & len )"		104654	0					
ANR	104706	IdentifierDeclType	int		104654	0					
ANR	104707	Identifier	err		104654	1					
ANR	104708	AssignmentExpression	"err = getpeername ( fd , ( struct sockaddr * ) & addr , & len )"		104654	2		=			
ANR	104709	Identifier	err		104654	0					
ANR	104710	CallExpression	"getpeername ( fd , ( struct sockaddr * ) & addr , & len )"		104654	1					
ANR	104711	Callee	getpeername		104654	0					
ANR	104712	Identifier	getpeername		104654	0					
ANR	104713	ArgumentList	fd		104654	1					
ANR	104714	Argument	fd		104654	0					
ANR	104715	Identifier	fd		104654	0					
ANR	104716	Argument	( struct sockaddr * ) & addr		104654	1					
ANR	104717	CastExpression	( struct sockaddr * ) & addr		104654	0					
ANR	104718	CastTarget	struct sockaddr *		104654	0					
ANR	104719	UnaryOperationExpression	& addr		104654	1					
ANR	104720	UnaryOperator	&		104654	0					
ANR	104721	Identifier	addr		104654	1					
ANR	104722	Argument	& len		104654	2					
ANR	104723	UnaryOperationExpression	& len		104654	0					
ANR	104724	UnaryOperator	&		104654	0					
ANR	104725	Identifier	len		104654	1					
ANR	104726	IfStatement	if ( err == 0 )		104654	7					
ANR	104727	Condition	err == 0	242:8:6619:6626	104654	0	True				
ANR	104728	EqualityExpression	err == 0		104654	0		==			
ANR	104729	Identifier	err		104654	0					
ANR	104730	PrimaryExpression	0		104654	1					
ANR	104731	CompoundStatement		8:18:293:293	104654	1					
ANR	104732	IfStatement	if ( addr . ss_family == AF_INET )		104654	0					
ANR	104733	Condition	addr . ss_family == AF_INET	243:12:6643:6667	104654	0	True				
ANR	104734	EqualityExpression	addr . ss_family == AF_INET		104654	0		==			
ANR	104735	MemberAccess	addr . ss_family		104654	0					
ANR	104736	Identifier	addr		104654	0					
ANR	104737	Identifier	ss_family		104654	1					
ANR	104738	Identifier	AF_INET		104654	1					
ANR	104739	CompoundStatement		10:12:348:399	104654	1					
ANR	104740	IdentifierDeclStatement	struct sockaddr_in * s = ( struct sockaddr_in * ) & addr ;	244:12:6684:6735	104654	0	True				
ANR	104741	IdentifierDecl	* s = ( struct sockaddr_in * ) & addr		104654	0					
ANR	104742	IdentifierDeclType	struct sockaddr_in *		104654	0					
ANR	104743	Identifier	s		104654	1					
ANR	104744	AssignmentExpression	* s = ( struct sockaddr_in * ) & addr		104654	2		=			
ANR	104745	Identifier	s		104654	0					
ANR	104746	CastExpression	( struct sockaddr_in * ) & addr		104654	1					
ANR	104747	CastTarget	struct sockaddr_in *		104654	0					
ANR	104748	UnaryOperationExpression	& addr		104654	1					
ANR	104749	UnaryOperator	&		104654	0					
ANR	104750	Identifier	addr		104654	1					
ANR	104751	ExpressionStatement	"inet_ntop ( AF_INET , & s -> sin_addr , peer_name , INET_ADDRSTRLEN )"	245:12:6749:6809	104654	1	True				
ANR	104752	CallExpression	"inet_ntop ( AF_INET , & s -> sin_addr , peer_name , INET_ADDRSTRLEN )"		104654	0					
ANR	104753	Callee	inet_ntop		104654	0					
ANR	104754	Identifier	inet_ntop		104654	0					
ANR	104755	ArgumentList	AF_INET		104654	1					
ANR	104756	Argument	AF_INET		104654	0					
ANR	104757	Identifier	AF_INET		104654	0					
ANR	104758	Argument	& s -> sin_addr		104654	1					
ANR	104759	UnaryOperationExpression	& s -> sin_addr		104654	0					
ANR	104760	UnaryOperator	&		104654	0					
ANR	104761	PtrMemberAccess	s -> sin_addr		104654	1					
ANR	104762	Identifier	s		104654	0					
ANR	104763	Identifier	sin_addr		104654	1					
ANR	104764	Argument	peer_name		104654	2					
ANR	104765	Identifier	peer_name		104654	0					
ANR	104766	Argument	INET_ADDRSTRLEN		104654	3					
ANR	104767	Identifier	INET_ADDRSTRLEN		104654	0					
ANR	104768	ElseStatement	else		104654	0					
ANR	104769	IfStatement	if ( addr . ss_family == AF_INET6 )		104654	0					
ANR	104770	Condition	addr . ss_family == AF_INET6	246:19:6830:6855	104654	0	True				
ANR	104771	EqualityExpression	addr . ss_family == AF_INET6		104654	0		==			
ANR	104772	MemberAccess	addr . ss_family		104654	0					
ANR	104773	Identifier	addr		104654	0					
ANR	104774	Identifier	ss_family		104654	1					
ANR	104775	Identifier	AF_INET6		104654	1					
ANR	104776	CompoundStatement		13:12:536:589	104654	1					
ANR	104777	IdentifierDeclStatement	struct sockaddr_in6 * s = ( struct sockaddr_in6 * ) & addr ;	247:12:6872:6925	104654	0	True				
ANR	104778	IdentifierDecl	* s = ( struct sockaddr_in6 * ) & addr		104654	0					
ANR	104779	IdentifierDeclType	struct sockaddr_in6 *		104654	0					
ANR	104780	Identifier	s		104654	1					
ANR	104781	AssignmentExpression	* s = ( struct sockaddr_in6 * ) & addr		104654	2		=			
ANR	104782	Identifier	s		104654	0					
ANR	104783	CastExpression	( struct sockaddr_in6 * ) & addr		104654	1					
ANR	104784	CastTarget	struct sockaddr_in6 *		104654	0					
ANR	104785	UnaryOperationExpression	& addr		104654	1					
ANR	104786	UnaryOperator	&		104654	0					
ANR	104787	Identifier	addr		104654	1					
ANR	104788	ExpressionStatement	"inet_ntop ( AF_INET6 , & s -> sin6_addr , peer_name , INET6_ADDRSTRLEN )"	248:12:6939:7002	104654	1	True				
ANR	104789	CallExpression	"inet_ntop ( AF_INET6 , & s -> sin6_addr , peer_name , INET6_ADDRSTRLEN )"		104654	0					
ANR	104790	Callee	inet_ntop		104654	0					
ANR	104791	Identifier	inet_ntop		104654	0					
ANR	104792	ArgumentList	AF_INET6		104654	1					
ANR	104793	Argument	AF_INET6		104654	0					
ANR	104794	Identifier	AF_INET6		104654	0					
ANR	104795	Argument	& s -> sin6_addr		104654	1					
ANR	104796	UnaryOperationExpression	& s -> sin6_addr		104654	0					
ANR	104797	UnaryOperator	&		104654	0					
ANR	104798	PtrMemberAccess	s -> sin6_addr		104654	1					
ANR	104799	Identifier	s		104654	0					
ANR	104800	Identifier	sin6_addr		104654	1					
ANR	104801	Argument	peer_name		104654	2					
ANR	104802	Identifier	peer_name		104654	0					
ANR	104803	Argument	INET6_ADDRSTRLEN		104654	3					
ANR	104804	Identifier	INET6_ADDRSTRLEN		104654	0					
ANR	104805	ElseStatement	else		104654	0					
ANR	104806	CompoundStatement		16:11:689:689	104654	0					
ANR	104807	ReturnStatement	return NULL ;	251:8:7035:7046	104654	0	True				
ANR	104808	Identifier	NULL		104654	0					
ANR	104809	ReturnStatement	return peer_name ;	253:4:7058:7074	104654	8	True				
ANR	104810	Identifier	peer_name		104654	0					
ANR	104811	ReturnType	static char *		104654	1					
ANR	104812	Identifier	get_peer_name		104654	2					
ANR	104813	ParameterList	int fd		104654	3					
ANR	104814	Parameter	int fd	234:14:6327:6332	104654	0	True				
ANR	104815	ParameterType	int		104654	0					
ANR	104816	Identifier	fd		104654	1					
ANR	104817	CFGEntryNode	ENTRY		104654		True				
ANR	104818	CFGExitNode	EXIT		104654		True				
ANR	104819	Symbol	& addr		104654						
ANR	104820	Symbol	NULL		104654						
ANR	104821	Symbol	err		104654						
ANR	104822	Symbol	INET_ADDRSTRLEN		104654						
ANR	104823	Symbol	INET6_ADDRSTRLEN		104654						
ANR	104824	Symbol	AF_INET		104654						
ANR	104825	Symbol	AF_INET6		104654						
ANR	104826	Symbol	getpeername		104654						
ANR	104827	Symbol	s		104654						
ANR	104828	Symbol	len		104654						
ANR	104829	Symbol	& s -> sin_addr		104654						
ANR	104830	Symbol	peer_name		104654						
ANR	104831	Symbol	addr		104654						
ANR	104832	Symbol	& len		104654						
ANR	104833	Symbol	addr . ss_family		104654						
ANR	104834	Symbol	& s -> sin6_addr		104654						
ANR	104835	Symbol	fd		104654						
ANR	104836	Function	set_linger	257:0:7096:7337							
ANR	104837	FunctionDef	set_linger (int fd)		104836	0					
ANR	104838	CompoundStatement		259:0:7127:7337	104836	0					
ANR	104839	IdentifierDeclStatement	struct linger so_linger ;	260:4:7133:7156	104836	0	True				
ANR	104840	IdentifierDecl	so_linger		104836	0					
ANR	104841	IdentifierDeclType	struct linger		104836	0					
ANR	104842	Identifier	so_linger		104836	1					
ANR	104843	ExpressionStatement	"memset ( & so_linger , 0 , sizeof ( struct linger ) )"	261:4:7162:7206	104836	1	True				
ANR	104844	CallExpression	"memset ( & so_linger , 0 , sizeof ( struct linger ) )"		104836	0					
ANR	104845	Callee	memset		104836	0					
ANR	104846	Identifier	memset		104836	0					
ANR	104847	ArgumentList	& so_linger		104836	1					
ANR	104848	Argument	& so_linger		104836	0					
ANR	104849	UnaryOperationExpression	& so_linger		104836	0					
ANR	104850	UnaryOperator	&		104836	0					
ANR	104851	Identifier	so_linger		104836	1					
ANR	104852	Argument	0		104836	1					
ANR	104853	PrimaryExpression	0		104836	0					
ANR	104854	Argument	sizeof ( struct linger )		104836	2					
ANR	104855	SizeofExpression	sizeof ( struct linger )		104836	0					
ANR	104856	Sizeof	sizeof		104836	0					
ANR	104857	SizeofOperand	struct linger		104836	1					
ANR	104858	ExpressionStatement	so_linger . l_onoff = 1	262:4:7212:7234	104836	2	True				
ANR	104859	AssignmentExpression	so_linger . l_onoff = 1		104836	0		=			
ANR	104860	MemberAccess	so_linger . l_onoff		104836	0					
ANR	104861	Identifier	so_linger		104836	0					
ANR	104862	Identifier	l_onoff		104836	1					
ANR	104863	PrimaryExpression	1		104836	1					
ANR	104864	ExpressionStatement	so_linger . l_linger = 0	263:4:7240:7262	104836	3	True				
ANR	104865	AssignmentExpression	so_linger . l_linger = 0		104836	0		=			
ANR	104866	MemberAccess	so_linger . l_linger		104836	0					
ANR	104867	Identifier	so_linger		104836	0					
ANR	104868	Identifier	l_linger		104836	1					
ANR	104869	PrimaryExpression	0		104836	1					
ANR	104870	ExpressionStatement	"setsockopt ( fd , SOL_SOCKET , SO_LINGER , & so_linger , sizeof so_linger )"	264:4:7268:7335	104836	4	True				
ANR	104871	CallExpression	"setsockopt ( fd , SOL_SOCKET , SO_LINGER , & so_linger , sizeof so_linger )"		104836	0					
ANR	104872	Callee	setsockopt		104836	0					
ANR	104873	Identifier	setsockopt		104836	0					
ANR	104874	ArgumentList	fd		104836	1					
ANR	104875	Argument	fd		104836	0					
ANR	104876	Identifier	fd		104836	0					
ANR	104877	Argument	SOL_SOCKET		104836	1					
ANR	104878	Identifier	SOL_SOCKET		104836	0					
ANR	104879	Argument	SO_LINGER		104836	2					
ANR	104880	Identifier	SO_LINGER		104836	0					
ANR	104881	Argument	& so_linger		104836	3					
ANR	104882	UnaryOperationExpression	& so_linger		104836	0					
ANR	104883	UnaryOperator	&		104836	0					
ANR	104884	Identifier	so_linger		104836	1					
ANR	104885	Argument	sizeof so_linger		104836	4					
ANR	104886	SizeofExpression	sizeof so_linger		104836	0					
ANR	104887	Sizeof	sizeof		104836	0					
ANR	104888	Identifier	so_linger		104836	1					
ANR	104889	ReturnType	static void		104836	1					
ANR	104890	Identifier	set_linger		104836	2					
ANR	104891	ParameterList	int fd		104836	3					
ANR	104892	Parameter	int fd	258:11:7119:7124	104836	0	True				
ANR	104893	ParameterType	int		104836	0					
ANR	104894	Identifier	fd		104836	1					
ANR	104895	CFGEntryNode	ENTRY		104836		True				
ANR	104896	CFGExitNode	EXIT		104836		True				
ANR	104897	Symbol	so_linger		104836						
ANR	104898	Symbol	SO_LINGER		104836						
ANR	104899	Symbol	SOL_SOCKET		104836						
ANR	104900	Symbol	so_linger . l_linger		104836						
ANR	104901	Symbol	so_linger . l_onoff		104836						
ANR	104902	Symbol	& so_linger		104836						
ANR	104903	Symbol	fd		104836						
ANR	104904	Function	reset_addr	269:0:7348:7515							
ANR	104905	FunctionDef	reset_addr (int fd)		104904	0					
ANR	104906	CompoundStatement		271:0:7379:7515	104904	0					
ANR	104907	IdentifierDeclStatement	char * peer_name ;	272:4:7385:7400	104904	0	True				
ANR	104908	IdentifierDecl	* peer_name		104904	0					
ANR	104909	IdentifierDeclType	char *		104904	0					
ANR	104910	Identifier	peer_name		104904	1					
ANR	104911	ExpressionStatement	peer_name = get_peer_name ( fd )	273:4:7406:7435	104904	1	True				
ANR	104912	AssignmentExpression	peer_name = get_peer_name ( fd )		104904	0		=			
ANR	104913	Identifier	peer_name		104904	0					
ANR	104914	CallExpression	get_peer_name ( fd )		104904	1					
ANR	104915	Callee	get_peer_name		104904	0					
ANR	104916	Identifier	get_peer_name		104904	0					
ANR	104917	ArgumentList	fd		104904	1					
ANR	104918	Argument	fd		104904	0					
ANR	104919	Identifier	fd		104904	0					
ANR	104920	IfStatement	if ( peer_name != NULL )		104904	2					
ANR	104921	Condition	peer_name != NULL	274:8:7445:7461	104904	0	True				
ANR	104922	EqualityExpression	peer_name != NULL		104904	0		!=			
ANR	104923	Identifier	peer_name		104904	0					
ANR	104924	Identifier	NULL		104904	1					
ANR	104925	CompoundStatement		4:27:84:84	104904	1					
ANR	104926	ExpressionStatement	remove_from_block_list ( peer_name )	275:8:7474:7507	104904	0	True				
ANR	104927	CallExpression	remove_from_block_list ( peer_name )		104904	0					
ANR	104928	Callee	remove_from_block_list		104904	0					
ANR	104929	Identifier	remove_from_block_list		104904	0					
ANR	104930	ArgumentList	peer_name		104904	1					
ANR	104931	Argument	peer_name		104904	0					
ANR	104932	Identifier	peer_name		104904	0					
ANR	104933	ReturnType	static void		104904	1					
ANR	104934	Identifier	reset_addr		104904	2					
ANR	104935	ParameterList	int fd		104904	3					
ANR	104936	Parameter	int fd	270:11:7371:7376	104904	0	True				
ANR	104937	ParameterType	int		104904	0					
ANR	104938	Identifier	fd		104904	1					
ANR	104939	CFGEntryNode	ENTRY		104904		True				
ANR	104940	CFGExitNode	EXIT		104904		True				
ANR	104941	Symbol	NULL		104904						
ANR	104942	Symbol	peer_name		104904						
ANR	104943	Symbol	get_peer_name		104904						
ANR	104944	Symbol	fd		104904						
ANR	104945	Function	report_addr	279:0:7518:7926							
ANR	104946	FunctionDef	"report_addr (int fd , int err_level , const char * info)"		104945	0					
ANR	104947	CompoundStatement		281:0:7583:7926	104945	0					
ANR	104948	ExpressionStatement	set_linger ( fd )	283:4:7606:7620	104945	0	True				
ANR	104949	CallExpression	set_linger ( fd )		104945	0					
ANR	104950	Callee	set_linger		104945	0					
ANR	104951	Identifier	set_linger		104945	0					
ANR	104952	ArgumentList	fd		104945	1					
ANR	104953	Argument	fd		104945	0					
ANR	104954	Identifier	fd		104945	0					
ANR	104955	IdentifierDeclStatement	char * peer_name ;	286:4:7634:7649	104945	1	True				
ANR	104956	IdentifierDecl	* peer_name		104945	0					
ANR	104957	IdentifierDeclType	char *		104945	0					
ANR	104958	Identifier	peer_name		104945	1					
ANR	104959	ExpressionStatement	peer_name = get_peer_name ( fd )	287:4:7655:7684	104945	2	True				
ANR	104960	AssignmentExpression	peer_name = get_peer_name ( fd )		104945	0		=			
ANR	104961	Identifier	peer_name		104945	0					
ANR	104962	CallExpression	get_peer_name ( fd )		104945	1					
ANR	104963	Callee	get_peer_name		104945	0					
ANR	104964	Identifier	get_peer_name		104945	0					
ANR	104965	ArgumentList	fd		104945	1					
ANR	104966	Argument	fd		104945	0					
ANR	104967	Identifier	fd		104945	0					
ANR	104968	IfStatement	if ( peer_name != NULL )		104945	3					
ANR	104969	Condition	peer_name != NULL	288:8:7694:7710	104945	0	True				
ANR	104970	EqualityExpression	peer_name != NULL		104945	0		!=			
ANR	104971	Identifier	peer_name		104945	0					
ANR	104972	Identifier	NULL		104945	1					
ANR	104973	CompoundStatement		8:27:129:129	104945	1					
ANR	104974	ExpressionStatement	"LOGE ( ""failed to handshake with %s: %s"" , peer_name , info )"	289:8:7723:7779	104945	0	True				
ANR	104975	CallExpression	"LOGE ( ""failed to handshake with %s: %s"" , peer_name , info )"		104945	0					
ANR	104976	Callee	LOGE		104945	0					
ANR	104977	Identifier	LOGE		104945	0					
ANR	104978	ArgumentList	"""failed to handshake with %s: %s"""		104945	1					
ANR	104979	Argument	"""failed to handshake with %s: %s"""		104945	0					
ANR	104980	PrimaryExpression	"""failed to handshake with %s: %s"""		104945	0					
ANR	104981	Argument	peer_name		104945	1					
ANR	104982	Identifier	peer_name		104945	0					
ANR	104983	Argument	info		104945	2					
ANR	104984	Identifier	info		104945	0					
ANR	104985	IfStatement	"if ( strcmp ( peer_name , ""127.0.0.1"" ) != 0 )"		104945	1					
ANR	104986	Condition	"strcmp ( peer_name , ""127.0.0.1"" ) != 0"	291:12:7830:7864	104945	0	True				
ANR	104987	EqualityExpression	"strcmp ( peer_name , ""127.0.0.1"" ) != 0"		104945	0		!=			
ANR	104988	CallExpression	"strcmp ( peer_name , ""127.0.0.1"" )"		104945	0					
ANR	104989	Callee	strcmp		104945	0					
ANR	104990	Identifier	strcmp		104945	0					
ANR	104991	ArgumentList	peer_name		104945	1					
ANR	104992	Argument	peer_name		104945	0					
ANR	104993	Identifier	peer_name		104945	0					
ANR	104994	Argument	"""127.0.0.1"""		104945	1					
ANR	104995	PrimaryExpression	"""127.0.0.1"""		104945	0					
ANR	104996	PrimaryExpression	0		104945	1					
ANR	104997	ExpressionStatement	"update_block_list ( peer_name , err_level )"	292:12:7879:7918	104945	1	True				
ANR	104998	CallExpression	"update_block_list ( peer_name , err_level )"		104945	0					
ANR	104999	Callee	update_block_list		104945	0					
ANR	105000	Identifier	update_block_list		104945	0					
ANR	105001	ArgumentList	peer_name		104945	1					
ANR	105002	Argument	peer_name		104945	0					
ANR	105003	Identifier	peer_name		104945	0					
ANR	105004	Argument	err_level		104945	1					
ANR	105005	Identifier	err_level		104945	0					
ANR	105006	ReturnType	static void		104945	1					
ANR	105007	Identifier	report_addr		104945	2					
ANR	105008	ParameterList	"int fd , int err_level , const char * info"		104945	3					
ANR	105009	Parameter	int fd	280:12:7542:7547	104945	0	True				
ANR	105010	ParameterType	int		104945	0					
ANR	105011	Identifier	fd		104945	1					
ANR	105012	Parameter	int err_level	280:20:7550:7562	104945	1	True				
ANR	105013	ParameterType	int		104945	0					
ANR	105014	Identifier	err_level		104945	1					
ANR	105015	Parameter	const char * info	280:35:7565:7580	104945	2	True				
ANR	105016	ParameterType	const char *		104945	0					
ANR	105017	Identifier	info		104945	1					
ANR	105018	CFGEntryNode	ENTRY		104945		True				
ANR	105019	CFGExitNode	EXIT		104945		True				
ANR	105020	Symbol	err_level		104945						
ANR	105021	Symbol	strcmp		104945						
ANR	105022	Symbol	NULL		104945						
ANR	105023	Symbol	peer_name		104945						
ANR	105024	Symbol	get_peer_name		104945						
ANR	105025	Symbol	fd		104945						
ANR	105026	Symbol	info		104945						
ANR	105027	Function	setfastopen	296:0:7929:8458							
ANR	105028	FunctionDef	setfastopen (int fd)		105027	0					
ANR	105029	CompoundStatement		298:0:7953:8458	105027	0					
ANR	105030	IdentifierDeclStatement	int s = 0 ;	299:4:7959:7968	105027	0	True				
ANR	105031	IdentifierDecl	s = 0		105027	0					
ANR	105032	IdentifierDeclType	int		105027	0					
ANR	105033	Identifier	s		105027	1					
ANR	105034	AssignmentExpression	s = 0		105027	2		=			
ANR	105035	Identifier	s		105027	0					
ANR	105036	PrimaryExpression	0		105027	1					
ANR	105037	IfStatement	if ( fast_open )		105027	1					
ANR	105038	Condition	fast_open	301:8:7998:8006	105027	0	True				
ANR	105039	Identifier	fast_open		105027	0					
ANR	105040	CompoundStatement		6:8:82:93	105027	1					
ANR	105041	IdentifierDeclStatement	int opt = 1 ;	303:8:8036:8047	105027	0	True				
ANR	105042	IdentifierDecl	opt = 1		105027	0					
ANR	105043	IdentifierDeclType	int		105027	0					
ANR	105044	Identifier	opt		105027	1					
ANR	105045	AssignmentExpression	opt = 1		105027	2		=			
ANR	105046	Identifier	opt		105027	0					
ANR	105047	PrimaryExpression	1		105027	1					
ANR	105048	ExpressionStatement	"s = setsockopt ( fd , IPPROTO_TCP , TCP_FASTOPEN , & opt , sizeof ( opt ) )"	307:8:8091:8155	105027	1	True				
ANR	105049	AssignmentExpression	"s = setsockopt ( fd , IPPROTO_TCP , TCP_FASTOPEN , & opt , sizeof ( opt ) )"		105027	0		=			
ANR	105050	Identifier	s		105027	0					
ANR	105051	CallExpression	"setsockopt ( fd , IPPROTO_TCP , TCP_FASTOPEN , & opt , sizeof ( opt ) )"		105027	1					
ANR	105052	Callee	setsockopt		105027	0					
ANR	105053	Identifier	setsockopt		105027	0					
ANR	105054	ArgumentList	fd		105027	1					
ANR	105055	Argument	fd		105027	0					
ANR	105056	Identifier	fd		105027	0					
ANR	105057	Argument	IPPROTO_TCP		105027	1					
ANR	105058	Identifier	IPPROTO_TCP		105027	0					
ANR	105059	Argument	TCP_FASTOPEN		105027	2					
ANR	105060	Identifier	TCP_FASTOPEN		105027	0					
ANR	105061	Argument	& opt		105027	3					
ANR	105062	UnaryOperationExpression	& opt		105027	0					
ANR	105063	UnaryOperator	&		105027	0					
ANR	105064	Identifier	opt		105027	1					
ANR	105065	Argument	sizeof ( opt )		105027	4					
ANR	105066	SizeofExpression	sizeof ( opt )		105027	0					
ANR	105067	Sizeof	sizeof		105027	0					
ANR	105068	SizeofOperand	opt		105027	1					
ANR	105069	IfStatement	if ( s == - 1 )		105027	2					
ANR	105070	Condition	s == - 1	309:12:8170:8176	105027	0	True				
ANR	105071	EqualityExpression	s == - 1		105027	0		==			
ANR	105072	Identifier	s		105027	0					
ANR	105073	UnaryOperationExpression	- 1		105027	1					
ANR	105074	UnaryOperator	-		105027	0					
ANR	105075	PrimaryExpression	1		105027	1					
ANR	105076	CompoundStatement		12:21:225:225	105027	1					
ANR	105077	IfStatement	if ( errno == EPROTONOSUPPORT || errno == ENOPROTOOPT )		105027	0					
ANR	105078	Condition	errno == EPROTONOSUPPORT || errno == ENOPROTOOPT	310:16:8197:8244	105027	0	True				
ANR	105079	OrExpression	errno == EPROTONOSUPPORT || errno == ENOPROTOOPT		105027	0		||			
ANR	105080	EqualityExpression	errno == EPROTONOSUPPORT		105027	0		==			
ANR	105081	Identifier	errno		105027	0					
ANR	105082	Identifier	EPROTONOSUPPORT		105027	1					
ANR	105083	EqualityExpression	errno == ENOPROTOOPT		105027	1		==			
ANR	105084	Identifier	errno		105027	0					
ANR	105085	Identifier	ENOPROTOOPT		105027	1					
ANR	105086	CompoundStatement		13:66:293:293	105027	1					
ANR	105087	ExpressionStatement	"LOGE ( ""fast open is not supported on this platform"" )"	311:16:8265:8316	105027	0	True				
ANR	105088	CallExpression	"LOGE ( ""fast open is not supported on this platform"" )"		105027	0					
ANR	105089	Callee	LOGE		105027	0					
ANR	105090	Identifier	LOGE		105027	0					
ANR	105091	ArgumentList	"""fast open is not supported on this platform"""		105027	1					
ANR	105092	Argument	"""fast open is not supported on this platform"""		105027	0					
ANR	105093	PrimaryExpression	"""fast open is not supported on this platform"""		105027	0					
ANR	105094	ExpressionStatement	fast_open = 0	312:16:8334:8347	105027	1	True				
ANR	105095	AssignmentExpression	fast_open = 0		105027	0		=			
ANR	105096	Identifier	fast_open		105027	0					
ANR	105097	PrimaryExpression	0		105027	1					
ANR	105098	ElseStatement	else		105027	0					
ANR	105099	CompoundStatement		16:19:414:414	105027	0					
ANR	105100	ExpressionStatement	"ERROR ( ""setsockopt"" )"	314:16:8386:8405	105027	0	True				
ANR	105101	CallExpression	"ERROR ( ""setsockopt"" )"		105027	0					
ANR	105102	Callee	ERROR		105027	0					
ANR	105103	Identifier	ERROR		105027	0					
ANR	105104	ArgumentList	"""setsockopt"""		105027	1					
ANR	105105	Argument	"""setsockopt"""		105027	0					
ANR	105106	PrimaryExpression	"""setsockopt"""		105027	0					
ANR	105107	ReturnStatement	return s ;	319:4:8448:8456	105027	2	True				
ANR	105108	Identifier	s		105027	0					
ANR	105109	ReturnType	int		105027	1					
ANR	105110	Identifier	setfastopen		105027	2					
ANR	105111	ParameterList	int fd		105027	3					
ANR	105112	Parameter	int fd	297:12:7945:7950	105027	0	True				
ANR	105113	ParameterType	int		105027	0					
ANR	105114	Identifier	fd		105027	1					
ANR	105115	CFGEntryNode	ENTRY		105027		True				
ANR	105116	CFGExitNode	EXIT		105027		True				
ANR	105117	Symbol	opt		105027						
ANR	105118	Symbol	errno		105027						
ANR	105119	Symbol	ENOPROTOOPT		105027						
ANR	105120	Symbol	s		105027						
ANR	105121	Symbol	IPPROTO_TCP		105027						
ANR	105122	Symbol	setsockopt		105027						
ANR	105123	Symbol	EPROTONOSUPPORT		105027						
ANR	105124	Symbol	fd		105027						
ANR	105125	Symbol	fast_open		105027						
ANR	105126	Symbol	& opt		105027						
ANR	105127	Symbol	TCP_FASTOPEN		105027						
ANR	105128	Function	setnonblocking	322:0:8461:8630							
ANR	105129	FunctionDef	setnonblocking (int fd)		105128	0					
ANR	105130	CompoundStatement		324:0:8488:8630	105128	0					
ANR	105131	IdentifierDeclStatement	int flags ;	325:4:8494:8503	105128	0	True				
ANR	105132	IdentifierDecl	flags		105128	0					
ANR	105133	IdentifierDeclType	int		105128	0					
ANR	105134	Identifier	flags		105128	1					
ANR	105135	IfStatement	"if ( - 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) ) )"		105128	1					
ANR	105136	Condition	"- 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) )"	326:8:8513:8549	105128	0	True				
ANR	105137	EqualityExpression	"- 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) )"		105128	0		==			
ANR	105138	UnaryOperationExpression	- 1		105128	0					
ANR	105139	UnaryOperator	-		105128	0					
ANR	105140	PrimaryExpression	1		105128	1					
ANR	105141	AssignmentExpression	"flags = fcntl ( fd , F_GETFL , 0 )"		105128	1		=			
ANR	105142	Identifier	flags		105128	0					
ANR	105143	CallExpression	"fcntl ( fd , F_GETFL , 0 )"		105128	1					
ANR	105144	Callee	fcntl		105128	0					
ANR	105145	Identifier	fcntl		105128	0					
ANR	105146	ArgumentList	fd		105128	1					
ANR	105147	Argument	fd		105128	0					
ANR	105148	Identifier	fd		105128	0					
ANR	105149	Argument	F_GETFL		105128	1					
ANR	105150	Identifier	F_GETFL		105128	0					
ANR	105151	Argument	0		105128	2					
ANR	105152	PrimaryExpression	0		105128	0					
ANR	105153	CompoundStatement		3:47:63:63	105128	1					
ANR	105154	ExpressionStatement	flags = 0	327:8:8562:8571	105128	0	True				
ANR	105155	AssignmentExpression	flags = 0		105128	0		=			
ANR	105156	Identifier	flags		105128	0					
ANR	105157	PrimaryExpression	0		105128	1					
ANR	105158	ReturnStatement	"return fcntl ( fd , F_SETFL , flags | O_NONBLOCK ) ;"	329:4:8583:8628	105128	2	True				
ANR	105159	CallExpression	"fcntl ( fd , F_SETFL , flags | O_NONBLOCK )"		105128	0					
ANR	105160	Callee	fcntl		105128	0					
ANR	105161	Identifier	fcntl		105128	0					
ANR	105162	ArgumentList	fd		105128	1					
ANR	105163	Argument	fd		105128	0					
ANR	105164	Identifier	fd		105128	0					
ANR	105165	Argument	F_SETFL		105128	1					
ANR	105166	Identifier	F_SETFL		105128	0					
ANR	105167	Argument	flags | O_NONBLOCK		105128	2					
ANR	105168	InclusiveOrExpression	flags | O_NONBLOCK		105128	0		|			
ANR	105169	Identifier	flags		105128	0					
ANR	105170	Identifier	O_NONBLOCK		105128	1					
ANR	105171	ReturnType	int		105128	1					
ANR	105172	Identifier	setnonblocking		105128	2					
ANR	105173	ParameterList	int fd		105128	3					
ANR	105174	Parameter	int fd	323:15:8480:8485	105128	0	True				
ANR	105175	ParameterType	int		105128	0					
ANR	105176	Identifier	fd		105128	1					
ANR	105177	CFGEntryNode	ENTRY		105128		True				
ANR	105178	CFGExitNode	EXIT		105128		True				
ANR	105179	Symbol	fcntl		105128						
ANR	105180	Symbol	O_NONBLOCK		105128						
ANR	105181	Symbol	flags		105128						
ANR	105182	Symbol	F_GETFL		105128						
ANR	105183	Symbol	F_SETFL		105128						
ANR	105184	Symbol	fd		105128						
ANR	105185	Function	create_and_bind	332:0:8633:11902							
ANR	105186	FunctionDef	"create_and_bind (const char * host , const char * port , int mptcp)"		105185	0					
ANR	105187	CompoundStatement		334:0:8700:11902	105185	0					
ANR	105188	IdentifierDeclStatement	struct addrinfo hints ;	335:4:8706:8727	105185	0	True				
ANR	105189	IdentifierDecl	hints		105185	0					
ANR	105190	IdentifierDeclType	struct addrinfo		105185	0					
ANR	105191	Identifier	hints		105185	1					
ANR	105192	IdentifierDeclStatement	"struct addrinfo * result , * rp , * ipv4v6bindall ;"	336:4:8733:8777	105185	1	True				
ANR	105193	IdentifierDecl	* result		105185	0					
ANR	105194	IdentifierDeclType	struct addrinfo *		105185	0					
ANR	105195	Identifier	result		105185	1					
ANR	105196	IdentifierDecl	* rp		105185	1					
ANR	105197	IdentifierDeclType	struct addrinfo *		105185	0					
ANR	105198	Identifier	rp		105185	1					
ANR	105199	IdentifierDecl	* ipv4v6bindall		105185	2					
ANR	105200	IdentifierDeclType	struct addrinfo *		105185	0					
ANR	105201	Identifier	ipv4v6bindall		105185	1					
ANR	105202	IdentifierDeclStatement	"int s , listen_sock ;"	337:4:8783:8801	105185	2	True				
ANR	105203	IdentifierDecl	s		105185	0					
ANR	105204	IdentifierDeclType	int		105185	0					
ANR	105205	Identifier	s		105185	1					
ANR	105206	IdentifierDecl	listen_sock		105185	1					
ANR	105207	IdentifierDeclType	int		105185	0					
ANR	105208	Identifier	listen_sock		105185	1					
ANR	105209	ExpressionStatement	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"	339:4:8808:8850	105185	3	True				
ANR	105210	CallExpression	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"		105185	0					
ANR	105211	Callee	memset		105185	0					
ANR	105212	Identifier	memset		105185	0					
ANR	105213	ArgumentList	& hints		105185	1					
ANR	105214	Argument	& hints		105185	0					
ANR	105215	UnaryOperationExpression	& hints		105185	0					
ANR	105216	UnaryOperator	&		105185	0					
ANR	105217	Identifier	hints		105185	1					
ANR	105218	Argument	0		105185	1					
ANR	105219	PrimaryExpression	0		105185	0					
ANR	105220	Argument	sizeof ( struct addrinfo )		105185	2					
ANR	105221	SizeofExpression	sizeof ( struct addrinfo )		105185	0					
ANR	105222	Sizeof	sizeof		105185	0					
ANR	105223	SizeofOperand	struct addrinfo		105185	1					
ANR	105224	ExpressionStatement	hints . ai_family = AF_UNSPEC	340:4:8856:8885	105185	4	True				
ANR	105225	AssignmentExpression	hints . ai_family = AF_UNSPEC		105185	0		=			
ANR	105226	MemberAccess	hints . ai_family		105185	0					
ANR	105227	Identifier	hints		105185	0					
ANR	105228	Identifier	ai_family		105185	1					
ANR	105229	Identifier	AF_UNSPEC		105185	1					
ANR	105230	ExpressionStatement	hints . ai_socktype = SOCK_STREAM	341:4:8940:8971	105185	5	True				
ANR	105231	AssignmentExpression	hints . ai_socktype = SOCK_STREAM		105185	0		=			
ANR	105232	MemberAccess	hints . ai_socktype		105185	0					
ANR	105233	Identifier	hints		105185	0					
ANR	105234	Identifier	ai_socktype		105185	1					
ANR	105235	Identifier	SOCK_STREAM		105185	1					
ANR	105236	ExpressionStatement	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG	342:4:9016:9062	105185	6	True				
ANR	105237	AssignmentExpression	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG		105185	0		=			
ANR	105238	MemberAccess	hints . ai_flags		105185	0					
ANR	105239	Identifier	hints		105185	0					
ANR	105240	Identifier	ai_flags		105185	1					
ANR	105241	InclusiveOrExpression	AI_PASSIVE | AI_ADDRCONFIG		105185	1		|			
ANR	105242	Identifier	AI_PASSIVE		105185	0					
ANR	105243	Identifier	AI_ADDRCONFIG		105185	1					
ANR	105244	ExpressionStatement	hints . ai_protocol = IPPROTO_TCP	343:4:9098:9129	105185	7	True				
ANR	105245	AssignmentExpression	hints . ai_protocol = IPPROTO_TCP		105185	0		=			
ANR	105246	MemberAccess	hints . ai_protocol		105185	0					
ANR	105247	Identifier	hints		105185	0					
ANR	105248	Identifier	ai_protocol		105185	1					
ANR	105249	Identifier	IPPROTO_TCP		105185	1					
ANR	105250	ExpressionStatement	result = NULL	345:4:9136:9149	105185	8	True				
ANR	105251	AssignmentExpression	result = NULL		105185	0		=			
ANR	105252	Identifier	result		105185	0					
ANR	105253	Identifier	NULL		105185	1					
ANR	105254	ForStatement	for ( int i = 1 ; i < 8 ; i ++ )		105185	9					
ANR	105255	ForInit	int i = 1 ;	347:9:9161:9170	105185	0	True				
ANR	105256	IdentifierDeclStatement	int i = 1 ;		105185	0					
ANR	105257	IdentifierDecl	i = 1		105185	0					
ANR	105258	IdentifierDeclType	int		105185	0					
ANR	105259	Identifier	i		105185	1					
ANR	105260	AssignmentExpression	i = 1		105185	2		=			
ANR	105261	Identifier	i		105185	0					
ANR	105262	PrimaryExpression	1		105185	1					
ANR	105263	Condition	i < 8	347:20:9172:9176	105185	1	True				
ANR	105264	RelationalExpression	i < 8		105185	0		<			
ANR	105265	Identifier	i		105185	0					
ANR	105266	PrimaryExpression	8		105185	1					
ANR	105267	PostIncDecOperationExpression	i ++	347:27:9179:9181	105185	2	True				
ANR	105268	Identifier	i		105185	0					
ANR	105269	IncDec	++		105185	1					
ANR	105270	CompoundStatement		14:32:483:483	105185	3					
ANR	105271	ExpressionStatement	"s = getaddrinfo ( host , port , & hints , & result )"	348:8:9194:9238	105185	0	True				
ANR	105272	AssignmentExpression	"s = getaddrinfo ( host , port , & hints , & result )"		105185	0		=			
ANR	105273	Identifier	s		105185	0					
ANR	105274	CallExpression	"getaddrinfo ( host , port , & hints , & result )"		105185	1					
ANR	105275	Callee	getaddrinfo		105185	0					
ANR	105276	Identifier	getaddrinfo		105185	0					
ANR	105277	ArgumentList	host		105185	1					
ANR	105278	Argument	host		105185	0					
ANR	105279	Identifier	host		105185	0					
ANR	105280	Argument	port		105185	1					
ANR	105281	Identifier	port		105185	0					
ANR	105282	Argument	& hints		105185	2					
ANR	105283	UnaryOperationExpression	& hints		105185	0					
ANR	105284	UnaryOperator	&		105185	0					
ANR	105285	Identifier	hints		105185	1					
ANR	105286	Argument	& result		105185	3					
ANR	105287	UnaryOperationExpression	& result		105185	0					
ANR	105288	UnaryOperator	&		105185	0					
ANR	105289	Identifier	result		105185	1					
ANR	105290	IfStatement	if ( s == 0 )		105185	1					
ANR	105291	Condition	s == 0	349:12:9252:9257	105185	0	True				
ANR	105292	EqualityExpression	s == 0		105185	0		==			
ANR	105293	Identifier	s		105185	0					
ANR	105294	PrimaryExpression	0		105185	1					
ANR	105295	CompoundStatement		16:20:559:559	105185	1					
ANR	105296	BreakStatement	break ;	350:12:9274:9279	105185	0	True				
ANR	105297	ElseStatement	else		105185	0					
ANR	105298	CompoundStatement		18:15:595:595	105185	0					
ANR	105299	ExpressionStatement	"sleep ( pow ( 2 , i ) )"	352:12:9310:9326	105185	0	True				
ANR	105300	CallExpression	"sleep ( pow ( 2 , i ) )"		105185	0					
ANR	105301	Callee	sleep		105185	0					
ANR	105302	Identifier	sleep		105185	0					
ANR	105303	ArgumentList	"pow ( 2 , i )"		105185	1					
ANR	105304	Argument	"pow ( 2 , i )"		105185	0					
ANR	105305	CallExpression	"pow ( 2 , i )"		105185	0					
ANR	105306	Callee	pow		105185	0					
ANR	105307	Identifier	pow		105185	0					
ANR	105308	ArgumentList	2		105185	1					
ANR	105309	Argument	2		105185	0					
ANR	105310	PrimaryExpression	2		105185	0					
ANR	105311	Argument	i		105185	1					
ANR	105312	Identifier	i		105185	0					
ANR	105313	ExpressionStatement	"LOGE ( ""failed to resolve server name, wait %.0f seconds"" , pow ( 2 , i ) )"	353:12:9340:9407	105185	1	True				
ANR	105314	CallExpression	"LOGE ( ""failed to resolve server name, wait %.0f seconds"" , pow ( 2 , i ) )"		105185	0					
ANR	105315	Callee	LOGE		105185	0					
ANR	105316	Identifier	LOGE		105185	0					
ANR	105317	ArgumentList	"""failed to resolve server name, wait %.0f seconds"""		105185	1					
ANR	105318	Argument	"""failed to resolve server name, wait %.0f seconds"""		105185	0					
ANR	105319	PrimaryExpression	"""failed to resolve server name, wait %.0f seconds"""		105185	0					
ANR	105320	Argument	"pow ( 2 , i )"		105185	1					
ANR	105321	CallExpression	"pow ( 2 , i )"		105185	0					
ANR	105322	Callee	pow		105185	0					
ANR	105323	Identifier	pow		105185	0					
ANR	105324	ArgumentList	2		105185	1					
ANR	105325	Argument	2		105185	0					
ANR	105326	PrimaryExpression	2		105185	0					
ANR	105327	Argument	i		105185	1					
ANR	105328	Identifier	i		105185	0					
ANR	105329	IfStatement	if ( s != 0 )		105185	10					
ANR	105330	Condition	s != 0	357:8:9434:9439	105185	0	True				
ANR	105331	EqualityExpression	s != 0		105185	0		!=			
ANR	105332	Identifier	s		105185	0					
ANR	105333	PrimaryExpression	0		105185	1					
ANR	105334	CompoundStatement		24:16:741:741	105185	1					
ANR	105335	ExpressionStatement	"LOGE ( ""getaddrinfo: %s"" , gai_strerror ( s ) )"	358:8:9452:9492	105185	0	True				
ANR	105336	CallExpression	"LOGE ( ""getaddrinfo: %s"" , gai_strerror ( s ) )"		105185	0					
ANR	105337	Callee	LOGE		105185	0					
ANR	105338	Identifier	LOGE		105185	0					
ANR	105339	ArgumentList	"""getaddrinfo: %s"""		105185	1					
ANR	105340	Argument	"""getaddrinfo: %s"""		105185	0					
ANR	105341	PrimaryExpression	"""getaddrinfo: %s"""		105185	0					
ANR	105342	Argument	gai_strerror ( s )		105185	1					
ANR	105343	CallExpression	gai_strerror ( s )		105185	0					
ANR	105344	Callee	gai_strerror		105185	0					
ANR	105345	Identifier	gai_strerror		105185	0					
ANR	105346	ArgumentList	s		105185	1					
ANR	105347	Argument	s		105185	0					
ANR	105348	Identifier	s		105185	0					
ANR	105349	ReturnStatement	return - 1 ;	359:8:9502:9511	105185	1	True				
ANR	105350	UnaryOperationExpression	- 1		105185	0					
ANR	105351	UnaryOperator	-		105185	0					
ANR	105352	PrimaryExpression	1		105185	1					
ANR	105353	IfStatement	if ( result == NULL )		105185	11					
ANR	105354	Condition	result == NULL	362:8:9528:9541	105185	0	True				
ANR	105355	EqualityExpression	result == NULL		105185	0		==			
ANR	105356	Identifier	result		105185	0					
ANR	105357	Identifier	NULL		105185	1					
ANR	105358	CompoundStatement		29:24:843:843	105185	1					
ANR	105359	ExpressionStatement	"LOGE ( ""Could not bind"" )"	363:8:9554:9576	105185	0	True				
ANR	105360	CallExpression	"LOGE ( ""Could not bind"" )"		105185	0					
ANR	105361	Callee	LOGE		105185	0					
ANR	105362	Identifier	LOGE		105185	0					
ANR	105363	ArgumentList	"""Could not bind"""		105185	1					
ANR	105364	Argument	"""Could not bind"""		105185	0					
ANR	105365	PrimaryExpression	"""Could not bind"""		105185	0					
ANR	105366	ReturnStatement	return - 1 ;	364:8:9586:9595	105185	1	True				
ANR	105367	UnaryOperationExpression	- 1		105185	0					
ANR	105368	UnaryOperator	-		105185	0					
ANR	105369	PrimaryExpression	1		105185	1					
ANR	105370	ExpressionStatement	rp = result	367:4:9608:9619	105185	12	True				
ANR	105371	AssignmentExpression	rp = result		105185	0		=			
ANR	105372	Identifier	rp		105185	0					
ANR	105373	Identifier	result		105185	1					
ANR	105374	IfStatement	if ( ! host )		105185	13					
ANR	105375	Condition	! host	375:8:9963:9967	105185	0	True				
ANR	105376	UnaryOperationExpression	! host		105185	0					
ANR	105377	UnaryOperator	!		105185	0					
ANR	105378	Identifier	host		105185	1					
ANR	105379	CompoundStatement		42:15:1269:1269	105185	1					
ANR	105380	ExpressionStatement	ipv4v6bindall = result	376:8:9980:10002	105185	0	True				
ANR	105381	AssignmentExpression	ipv4v6bindall = result		105185	0		=			
ANR	105382	Identifier	ipv4v6bindall		105185	0					
ANR	105383	Identifier	result		105185	1					
ANR	105384	WhileStatement	while ( ipv4v6bindall )		105185	1					
ANR	105385	Condition	ipv4v6bindall	379:15:10099:10111	105185	0	True				
ANR	105386	Identifier	ipv4v6bindall		105185	0					
ANR	105387	CompoundStatement		46:30:1413:1413	105185	1					
ANR	105388	IfStatement	if ( ipv4v6bindall -> ai_family == AF_INET6 )		105185	0					
ANR	105389	Condition	ipv4v6bindall -> ai_family == AF_INET6	380:16:10132:10167	105185	0	True				
ANR	105390	EqualityExpression	ipv4v6bindall -> ai_family == AF_INET6		105185	0		==			
ANR	105391	PtrMemberAccess	ipv4v6bindall -> ai_family		105185	0					
ANR	105392	Identifier	ipv4v6bindall		105185	0					
ANR	105393	Identifier	ai_family		105185	1					
ANR	105394	Identifier	AF_INET6		105185	1					
ANR	105395	CompoundStatement		47:54:1469:1469	105185	1					
ANR	105396	ExpressionStatement	rp = ipv4v6bindall	381:16:10188:10206	105185	0	True				
ANR	105397	AssignmentExpression	rp = ipv4v6bindall		105185	0		=			
ANR	105398	Identifier	rp		105185	0					
ANR	105399	Identifier	ipv4v6bindall		105185	1					
ANR	105400	BreakStatement	break ;	382:16:10264:10269	105185	1	True				
ANR	105401	ExpressionStatement	ipv4v6bindall = ipv4v6bindall -> ai_next	384:12:10297:10335	105185	1	True				
ANR	105402	AssignmentExpression	ipv4v6bindall = ipv4v6bindall -> ai_next		105185	0		=			
ANR	105403	Identifier	ipv4v6bindall		105185	0					
ANR	105404	PtrMemberAccess	ipv4v6bindall -> ai_next		105185	1					
ANR	105405	Identifier	ipv4v6bindall		105185	0					
ANR	105406	Identifier	ai_next		105185	1					
ANR	105407	ForStatement	for ( ; rp != NULL ; rp = rp -> ai_next )		105185	14					
ANR	105408	Condition	rp != NULL	388:26:10416:10425	105185	0	True				
ANR	105409	EqualityExpression	rp != NULL		105185	0		!=			
ANR	105410	Identifier	rp		105185	0					
ANR	105411	Identifier	NULL		105185	1					
ANR	105412	AssignmentExpression	rp = rp -> ai_next	388:38:10428:10443	105185	1	True	=			
ANR	105413	Identifier	rp		105185	0					
ANR	105414	PtrMemberAccess	rp -> ai_next		105185	1					
ANR	105415	Identifier	rp		105185	0					
ANR	105416	Identifier	ai_next		105185	1					
ANR	105417	CompoundStatement		66:8:2086:2097	105185	2					
ANR	105418	ExpressionStatement	"listen_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"	389:8:10456:10525	105185	0	True				
ANR	105419	AssignmentExpression	"listen_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		105185	0		=			
ANR	105420	Identifier	listen_sock		105185	0					
ANR	105421	CallExpression	"socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		105185	1					
ANR	105422	Callee	socket		105185	0					
ANR	105423	Identifier	socket		105185	0					
ANR	105424	ArgumentList	rp -> ai_family		105185	1					
ANR	105425	Argument	rp -> ai_family		105185	0					
ANR	105426	PtrMemberAccess	rp -> ai_family		105185	0					
ANR	105427	Identifier	rp		105185	0					
ANR	105428	Identifier	ai_family		105185	1					
ANR	105429	Argument	rp -> ai_socktype		105185	1					
ANR	105430	PtrMemberAccess	rp -> ai_socktype		105185	0					
ANR	105431	Identifier	rp		105185	0					
ANR	105432	Identifier	ai_socktype		105185	1					
ANR	105433	Argument	rp -> ai_protocol		105185	2					
ANR	105434	PtrMemberAccess	rp -> ai_protocol		105185	0					
ANR	105435	Identifier	rp		105185	0					
ANR	105436	Identifier	ai_protocol		105185	1					
ANR	105437	IfStatement	if ( listen_sock == - 1 )		105185	1					
ANR	105438	Condition	listen_sock == - 1	390:12:10539:10555	105185	0	True				
ANR	105439	EqualityExpression	listen_sock == - 1		105185	0		==			
ANR	105440	Identifier	listen_sock		105185	0					
ANR	105441	UnaryOperationExpression	- 1		105185	1					
ANR	105442	UnaryOperator	-		105185	0					
ANR	105443	PrimaryExpression	1		105185	1					
ANR	105444	CompoundStatement		57:31:1857:1857	105185	1					
ANR	105445	ContinueStatement	continue ;	391:12:10572:10580	105185	0	True				
ANR	105446	IfStatement	if ( rp -> ai_family == AF_INET6 )		105185	2					
ANR	105447	Condition	rp -> ai_family == AF_INET6	394:12:10605:10629	105185	0	True				
ANR	105448	EqualityExpression	rp -> ai_family == AF_INET6		105185	0		==			
ANR	105449	PtrMemberAccess	rp -> ai_family		105185	0					
ANR	105450	Identifier	rp		105185	0					
ANR	105451	Identifier	ai_family		105185	1					
ANR	105452	Identifier	AF_INET6		105185	1					
ANR	105453	CompoundStatement		62:12:1945:1972	105185	1					
ANR	105454	IdentifierDeclStatement	int ipv6only = host ? 1 : 0 ;	395:12:10646:10673	105185	0	True				
ANR	105455	IdentifierDecl	ipv6only = host ? 1 : 0		105185	0					
ANR	105456	IdentifierDeclType	int		105185	0					
ANR	105457	Identifier	ipv6only		105185	1					
ANR	105458	AssignmentExpression	ipv6only = host ? 1 : 0		105185	2		=			
ANR	105459	Identifier	ipv6only		105185	0					
ANR	105460	ConditionalExpression	host ? 1 : 0		105185	1					
ANR	105461	Condition	host		105185	0					
ANR	105462	Identifier	host		105185	0					
ANR	105463	PrimaryExpression	1		105185	1					
ANR	105464	PrimaryExpression	0		105185	2					
ANR	105465	ExpressionStatement	"setsockopt ( listen_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"	396:12:10687:10766	105185	1	True				
ANR	105466	CallExpression	"setsockopt ( listen_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"		105185	0					
ANR	105467	Callee	setsockopt		105185	0					
ANR	105468	Identifier	setsockopt		105185	0					
ANR	105469	ArgumentList	listen_sock		105185	1					
ANR	105470	Argument	listen_sock		105185	0					
ANR	105471	Identifier	listen_sock		105185	0					
ANR	105472	Argument	IPPROTO_IPV6		105185	1					
ANR	105473	Identifier	IPPROTO_IPV6		105185	0					
ANR	105474	Argument	IPV6_V6ONLY		105185	2					
ANR	105475	Identifier	IPV6_V6ONLY		105185	0					
ANR	105476	Argument	& ipv6only		105185	3					
ANR	105477	UnaryOperationExpression	& ipv6only		105185	0					
ANR	105478	UnaryOperator	&		105185	0					
ANR	105479	Identifier	ipv6only		105185	1					
ANR	105480	Argument	sizeof ( ipv6only )		105185	4					
ANR	105481	SizeofExpression	sizeof ( ipv6only )		105185	0					
ANR	105482	Sizeof	sizeof		105185	0					
ANR	105483	SizeofOperand	ipv6only		105185	1					
ANR	105484	IdentifierDeclStatement	int opt = 1 ;	399:8:10787:10798	105185	3	True				
ANR	105485	IdentifierDecl	opt = 1		105185	0					
ANR	105486	IdentifierDeclType	int		105185	0					
ANR	105487	Identifier	opt		105185	1					
ANR	105488	AssignmentExpression	opt = 1		105185	2		=			
ANR	105489	Identifier	opt		105185	0					
ANR	105490	PrimaryExpression	1		105185	1					
ANR	105491	ExpressionStatement	"setsockopt ( listen_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"	400:8:10808:10876	105185	4	True				
ANR	105492	CallExpression	"setsockopt ( listen_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"		105185	0					
ANR	105493	Callee	setsockopt		105185	0					
ANR	105494	Identifier	setsockopt		105185	0					
ANR	105495	ArgumentList	listen_sock		105185	1					
ANR	105496	Argument	listen_sock		105185	0					
ANR	105497	Identifier	listen_sock		105185	0					
ANR	105498	Argument	SOL_SOCKET		105185	1					
ANR	105499	Identifier	SOL_SOCKET		105185	0					
ANR	105500	Argument	SO_REUSEADDR		105185	2					
ANR	105501	Identifier	SO_REUSEADDR		105185	0					
ANR	105502	Argument	& opt		105185	3					
ANR	105503	UnaryOperationExpression	& opt		105185	0					
ANR	105504	UnaryOperator	&		105185	0					
ANR	105505	Identifier	opt		105185	1					
ANR	105506	Argument	sizeof ( opt )		105185	4					
ANR	105507	SizeofExpression	sizeof ( opt )		105185	0					
ANR	105508	Sizeof	sizeof		105185	0					
ANR	105509	SizeofOperand	opt		105185	1					
ANR	105510	ExpressionStatement	"setsockopt ( listen_sock , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"	402:8:10906:10974	105185	5	True				
ANR	105511	CallExpression	"setsockopt ( listen_sock , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"		105185	0					
ANR	105512	Callee	setsockopt		105185	0					
ANR	105513	Identifier	setsockopt		105185	0					
ANR	105514	ArgumentList	listen_sock		105185	1					
ANR	105515	Argument	listen_sock		105185	0					
ANR	105516	Identifier	listen_sock		105185	0					
ANR	105517	Argument	SOL_SOCKET		105185	1					
ANR	105518	Identifier	SOL_SOCKET		105185	0					
ANR	105519	Argument	SO_NOSIGPIPE		105185	2					
ANR	105520	Identifier	SO_NOSIGPIPE		105185	0					
ANR	105521	Argument	& opt		105185	3					
ANR	105522	UnaryOperationExpression	& opt		105185	0					
ANR	105523	UnaryOperator	&		105185	0					
ANR	105524	Identifier	opt		105185	1					
ANR	105525	Argument	sizeof ( opt )		105185	4					
ANR	105526	SizeofExpression	sizeof ( opt )		105185	0					
ANR	105527	Sizeof	sizeof		105185	0					
ANR	105528	SizeofOperand	opt		105185	1					
ANR	105529	IfStatement	if ( reuse_port )		105185	6					
ANR	105530	Condition	reuse_port	404:12:10995:11004	105185	0	True				
ANR	105531	Identifier	reuse_port		105185	0					
ANR	105532	CompoundStatement		72:12:2320:2356	105185	1					
ANR	105533	IdentifierDeclStatement	int err = set_reuseport ( listen_sock ) ;	405:12:11021:11057	105185	0	True				
ANR	105534	IdentifierDecl	err = set_reuseport ( listen_sock )		105185	0					
ANR	105535	IdentifierDeclType	int		105185	0					
ANR	105536	Identifier	err		105185	1					
ANR	105537	AssignmentExpression	err = set_reuseport ( listen_sock )		105185	2		=			
ANR	105538	Identifier	err		105185	0					
ANR	105539	CallExpression	set_reuseport ( listen_sock )		105185	1					
ANR	105540	Callee	set_reuseport		105185	0					
ANR	105541	Identifier	set_reuseport		105185	0					
ANR	105542	ArgumentList	listen_sock		105185	1					
ANR	105543	Argument	listen_sock		105185	0					
ANR	105544	Identifier	listen_sock		105185	0					
ANR	105545	IfStatement	if ( err == 0 )		105185	1					
ANR	105546	Condition	err == 0	406:16:11075:11082	105185	0	True				
ANR	105547	EqualityExpression	err == 0		105185	0		==			
ANR	105548	Identifier	err		105185	0					
ANR	105549	PrimaryExpression	0		105185	1					
ANR	105550	CompoundStatement		73:26:2384:2384	105185	1					
ANR	105551	ExpressionStatement	"LOGI ( ""tcp port reuse enabled"" )"	407:16:11103:11133	105185	0	True				
ANR	105552	CallExpression	"LOGI ( ""tcp port reuse enabled"" )"		105185	0					
ANR	105553	Callee	LOGI		105185	0					
ANR	105554	Identifier	LOGI		105185	0					
ANR	105555	ArgumentList	"""tcp port reuse enabled"""		105185	1					
ANR	105556	Argument	"""tcp port reuse enabled"""		105185	0					
ANR	105557	PrimaryExpression	"""tcp port reuse enabled"""		105185	0					
ANR	105558	IfStatement	if ( mptcp == 1 )		105185	7					
ANR	105559	Condition	mptcp == 1	411:12:11172:11181	105185	0	True				
ANR	105560	EqualityExpression	mptcp == 1		105185	0		==			
ANR	105561	Identifier	mptcp		105185	0					
ANR	105562	PrimaryExpression	1		105185	1					
ANR	105563	CompoundStatement		79:12:2497:2506	105185	1					
ANR	105564	IdentifierDeclStatement	int i = 0 ;	412:12:11198:11207	105185	0	True				
ANR	105565	IdentifierDecl	i = 0		105185	0					
ANR	105566	IdentifierDeclType	int		105185	0					
ANR	105567	Identifier	i		105185	1					
ANR	105568	AssignmentExpression	i = 0		105185	2		=			
ANR	105569	Identifier	i		105185	0					
ANR	105570	PrimaryExpression	0		105185	1					
ANR	105571	WhileStatement	while ( ( mptcp = mptcp_enabled_values [ i ] ) > 0 )		105185	1					
ANR	105572	Condition	( mptcp = mptcp_enabled_values [ i ] ) > 0	413:18:11227:11263	105185	0	True				
ANR	105573	RelationalExpression	( mptcp = mptcp_enabled_values [ i ] ) > 0		105185	0		>			
ANR	105574	AssignmentExpression	mptcp = mptcp_enabled_values [ i ]		105185	0		=			
ANR	105575	Identifier	mptcp		105185	0					
ANR	105576	ArrayIndexing	mptcp_enabled_values [ i ]		105185	1					
ANR	105577	Identifier	mptcp_enabled_values		105185	0					
ANR	105578	Identifier	i		105185	1					
ANR	105579	PrimaryExpression	0		105185	1					
ANR	105580	CompoundStatement		81:16:2583:2655	105185	1					
ANR	105581	IdentifierDeclStatement	"int err = setsockopt ( listen_sock , IPPROTO_TCP , mptcp , & opt , sizeof ( opt ) ) ;"	414:16:11284:11356	105185	0	True				
ANR	105582	IdentifierDecl	"err = setsockopt ( listen_sock , IPPROTO_TCP , mptcp , & opt , sizeof ( opt ) )"		105185	0					
ANR	105583	IdentifierDeclType	int		105185	0					
ANR	105584	Identifier	err		105185	1					
ANR	105585	AssignmentExpression	"err = setsockopt ( listen_sock , IPPROTO_TCP , mptcp , & opt , sizeof ( opt ) )"		105185	2		=			
ANR	105586	Identifier	err		105185	0					
ANR	105587	CallExpression	"setsockopt ( listen_sock , IPPROTO_TCP , mptcp , & opt , sizeof ( opt ) )"		105185	1					
ANR	105588	Callee	setsockopt		105185	0					
ANR	105589	Identifier	setsockopt		105185	0					
ANR	105590	ArgumentList	listen_sock		105185	1					
ANR	105591	Argument	listen_sock		105185	0					
ANR	105592	Identifier	listen_sock		105185	0					
ANR	105593	Argument	IPPROTO_TCP		105185	1					
ANR	105594	Identifier	IPPROTO_TCP		105185	0					
ANR	105595	Argument	mptcp		105185	2					
ANR	105596	Identifier	mptcp		105185	0					
ANR	105597	Argument	& opt		105185	3					
ANR	105598	UnaryOperationExpression	& opt		105185	0					
ANR	105599	UnaryOperator	&		105185	0					
ANR	105600	Identifier	opt		105185	1					
ANR	105601	Argument	sizeof ( opt )		105185	4					
ANR	105602	SizeofExpression	sizeof ( opt )		105185	0					
ANR	105603	Sizeof	sizeof		105185	0					
ANR	105604	SizeofOperand	opt		105185	1					
ANR	105605	IfStatement	if ( err != - 1 )		105185	1					
ANR	105606	Condition	err != - 1	415:20:11378:11386	105185	0	True				
ANR	105607	EqualityExpression	err != - 1		105185	0		!=			
ANR	105608	Identifier	err		105185	0					
ANR	105609	UnaryOperationExpression	- 1		105185	1					
ANR	105610	UnaryOperator	-		105185	0					
ANR	105611	PrimaryExpression	1		105185	1					
ANR	105612	CompoundStatement		82:31:2688:2688	105185	1					
ANR	105613	BreakStatement	break ;	416:20:11411:11416	105185	0	True				
ANR	105614	ExpressionStatement	i ++	418:16:11452:11455	105185	2	True				
ANR	105615	PostIncDecOperationExpression	i ++		105185	0					
ANR	105616	Identifier	i		105185	0					
ANR	105617	IncDec	++		105185	1					
ANR	105618	IfStatement	if ( mptcp == 0 )		105185	2					
ANR	105619	Condition	mptcp == 0	420:16:11487:11496	105185	0	True				
ANR	105620	EqualityExpression	mptcp == 0		105185	0		==			
ANR	105621	Identifier	mptcp		105185	0					
ANR	105622	PrimaryExpression	0		105185	1					
ANR	105623	CompoundStatement		87:28:2798:2798	105185	1					
ANR	105624	ExpressionStatement	"ERROR ( ""failed to enable multipath TCP"" )"	421:16:11517:11556	105185	0	True				
ANR	105625	CallExpression	"ERROR ( ""failed to enable multipath TCP"" )"		105185	0					
ANR	105626	Callee	ERROR		105185	0					
ANR	105627	Identifier	ERROR		105185	0					
ANR	105628	ArgumentList	"""failed to enable multipath TCP"""		105185	1					
ANR	105629	Argument	"""failed to enable multipath TCP"""		105185	0					
ANR	105630	PrimaryExpression	"""failed to enable multipath TCP"""		105185	0					
ANR	105631	ExpressionStatement	"s = bind ( listen_sock , rp -> ai_addr , rp -> ai_addrlen )"	425:8:11591:11641	105185	8	True				
ANR	105632	AssignmentExpression	"s = bind ( listen_sock , rp -> ai_addr , rp -> ai_addrlen )"		105185	0		=			
ANR	105633	Identifier	s		105185	0					
ANR	105634	CallExpression	"bind ( listen_sock , rp -> ai_addr , rp -> ai_addrlen )"		105185	1					
ANR	105635	Callee	bind		105185	0					
ANR	105636	Identifier	bind		105185	0					
ANR	105637	ArgumentList	listen_sock		105185	1					
ANR	105638	Argument	listen_sock		105185	0					
ANR	105639	Identifier	listen_sock		105185	0					
ANR	105640	Argument	rp -> ai_addr		105185	1					
ANR	105641	PtrMemberAccess	rp -> ai_addr		105185	0					
ANR	105642	Identifier	rp		105185	0					
ANR	105643	Identifier	ai_addr		105185	1					
ANR	105644	Argument	rp -> ai_addrlen		105185	2					
ANR	105645	PtrMemberAccess	rp -> ai_addrlen		105185	0					
ANR	105646	Identifier	rp		105185	0					
ANR	105647	Identifier	ai_addrlen		105185	1					
ANR	105648	IfStatement	if ( s == 0 )		105185	9					
ANR	105649	Condition	s == 0	426:12:11655:11660	105185	0	True				
ANR	105650	EqualityExpression	s == 0		105185	0		==			
ANR	105651	Identifier	s		105185	0					
ANR	105652	PrimaryExpression	0		105185	1					
ANR	105653	CompoundStatement		93:20:2962:2962	105185	1					
ANR	105654	BreakStatement	break ;	428:12:11728:11733	105185	0	True				
ANR	105655	ElseStatement	else		105185	0					
ANR	105656	CompoundStatement		96:15:3049:3049	105185	0					
ANR	105657	ExpressionStatement	"ERROR ( ""bind"" )"	430:12:11764:11777	105185	0	True				
ANR	105658	CallExpression	"ERROR ( ""bind"" )"		105185	0					
ANR	105659	Callee	ERROR		105185	0					
ANR	105660	Identifier	ERROR		105185	0					
ANR	105661	ArgumentList	"""bind"""		105185	1					
ANR	105662	Argument	"""bind"""		105185	0					
ANR	105663	PrimaryExpression	"""bind"""		105185	0					
ANR	105664	ExpressionStatement	close ( listen_sock )	433:8:11798:11816	105185	10	True				
ANR	105665	CallExpression	close ( listen_sock )		105185	0					
ANR	105666	Callee	close		105185	0					
ANR	105667	Identifier	close		105185	0					
ANR	105668	ArgumentList	listen_sock		105185	1					
ANR	105669	Argument	listen_sock		105185	0					
ANR	105670	Identifier	listen_sock		105185	0					
ANR	105671	ExpressionStatement	listen_sock = - 1	434:8:11826:11842	105185	11	True				
ANR	105672	AssignmentExpression	listen_sock = - 1		105185	0		=			
ANR	105673	Identifier	listen_sock		105185	0					
ANR	105674	UnaryOperationExpression	- 1		105185	1					
ANR	105675	UnaryOperator	-		105185	0					
ANR	105676	PrimaryExpression	1		105185	1					
ANR	105677	ExpressionStatement	freeaddrinfo ( result )	437:4:11855:11875	105185	15	True				
ANR	105678	CallExpression	freeaddrinfo ( result )		105185	0					
ANR	105679	Callee	freeaddrinfo		105185	0					
ANR	105680	Identifier	freeaddrinfo		105185	0					
ANR	105681	ArgumentList	result		105185	1					
ANR	105682	Argument	result		105185	0					
ANR	105683	Identifier	result		105185	0					
ANR	105684	ReturnStatement	return listen_sock ;	439:4:11882:11900	105185	16	True				
ANR	105685	Identifier	listen_sock		105185	0					
ANR	105686	ReturnType	int		105185	1					
ANR	105687	Identifier	create_and_bind		105185	2					
ANR	105688	ParameterList	"const char * host , const char * port , int mptcp"		105185	3					
ANR	105689	Parameter	const char * host	333:16:8653:8668	105185	0	True				
ANR	105690	ParameterType	const char *		105185	0					
ANR	105691	Identifier	host		105185	1					
ANR	105692	Parameter	const char * port	333:34:8671:8686	105185	1	True				
ANR	105693	ParameterType	const char *		105185	0					
ANR	105694	Identifier	port		105185	1					
ANR	105695	Parameter	int mptcp	333:52:8689:8697	105185	2	True				
ANR	105696	ParameterType	int		105185	0					
ANR	105697	Identifier	mptcp		105185	1					
ANR	105698	CFGEntryNode	ENTRY		105185		True				
ANR	105699	CFGExitNode	EXIT		105185		True				
ANR	105700	Symbol	rp -> ai_protocol		105185						
ANR	105701	Symbol	set_reuseport		105185						
ANR	105702	Symbol	rp -> ai_addrlen		105185						
ANR	105703	Symbol	hints . ai_flags		105185						
ANR	105704	Symbol	gai_strerror		105185						
ANR	105705	Symbol	mptcp_enabled_values		105185						
ANR	105706	Symbol	ipv6only		105185						
ANR	105707	Symbol	ipv4v6bindall -> ai_family		105185						
ANR	105708	Symbol	* ipv4v6bindall		105185						
ANR	105709	Symbol	bind		105185						
ANR	105710	Symbol	AI_ADDRCONFIG		105185						
ANR	105711	Symbol	IPPROTO_TCP		105185						
ANR	105712	Symbol	host		105185						
ANR	105713	Symbol	ipv4v6bindall		105185						
ANR	105714	Symbol	& opt		105185						
ANR	105715	Symbol	NULL		105185						
ANR	105716	Symbol	hints		105185						
ANR	105717	Symbol	getaddrinfo		105185						
ANR	105718	Symbol	SO_REUSEADDR		105185						
ANR	105719	Symbol	hints . ai_socktype		105185						
ANR	105720	Symbol	ipv4v6bindall -> ai_next		105185						
ANR	105721	Symbol	opt		105185						
ANR	105722	Symbol	port		105185						
ANR	105723	Symbol	IPPROTO_IPV6		105185						
ANR	105724	Symbol	rp		105185						
ANR	105725	Symbol	AI_PASSIVE		105185						
ANR	105726	Symbol	reuse_port		105185						
ANR	105727	Symbol	rp -> ai_addr		105185						
ANR	105728	Symbol	setsockopt		105185						
ANR	105729	Symbol	AF_UNSPEC		105185						
ANR	105730	Symbol	result		105185						
ANR	105731	Symbol	hints . ai_family		105185						
ANR	105732	Symbol	SOCK_STREAM		105185						
ANR	105733	Symbol	SO_NOSIGPIPE		105185						
ANR	105734	Symbol	& result		105185						
ANR	105735	Symbol	pow		105185						
ANR	105736	Symbol	& ipv6only		105185						
ANR	105737	Symbol	listen_sock		105185						
ANR	105738	Symbol	& hints		105185						
ANR	105739	Symbol	err		105185						
ANR	105740	Symbol	* rp		105185						
ANR	105741	Symbol	i		105185						
ANR	105742	Symbol	rp -> ai_socktype		105185						
ANR	105743	Symbol	mptcp		105185						
ANR	105744	Symbol	* mptcp_enabled_values		105185						
ANR	105745	Symbol	hints . ai_protocol		105185						
ANR	105746	Symbol	AF_INET6		105185						
ANR	105747	Symbol	SOL_SOCKET		105185						
ANR	105748	Symbol	IPV6_V6ONLY		105185						
ANR	105749	Symbol	s		105185						
ANR	105750	Symbol	* i		105185						
ANR	105751	Symbol	rp -> ai_family		105185						
ANR	105752	Symbol	socket		105185						
ANR	105753	Symbol	rp -> ai_next		105185						
ANR	105754	DeclStmt									
ANR	105755	Decl							int	int	sockfd
ANR	105756	DeclStmt									
ANR	105757	Decl							const char	const char *	iface
ANR	105758	DeclStmt									
ANR	105759	Decl							char	char [ INET6_ADDRSTRLEN ]	ipstr
ANR	105760	DeclStmt									
ANR	105761	Decl							struct sockaddr_in	struct sockaddr_in *	s
ANR	105762	DeclStmt									
ANR	105763	Decl							struct sockaddr_in6	struct sockaddr_in6 *	s
ANR	105764	DeclStmt									
ANR	105765	Decl							int	int	opt
ANR	105766	DeclStmt									
ANR	105767	Decl							remote_t	remote_t *	remote
ANR	105768	DeclStmt									
ANR	105769	Decl							sa_endpoints_t	sa_endpoints_t	endpoints
ANR	105770	DeclStmt									
ANR	105771	Decl							struct iovec	struct iovec	iov
ANR	105772	DeclStmt									
ANR	105773	Decl							size_t	size_t	len
ANR	105774	DeclStmt									
ANR	105775	Decl							int	int	s
ANR	105776	DeclStmt									
ANR	105777	Decl							ssize_t	ssize_t	s
ANR	105778	DeclStmt									
ANR	105779	Decl							int	int	r
ANR	105780	Function	setMarkDscpCallback	565:0:15639:16191							
ANR	105781	FunctionDef	"setMarkDscpCallback (enum nf_conntrack_msg_type type , struct nf_conntrack * ct , void * data)"		105780	0					
ANR	105782	CompoundStatement		566:0:15733:16191	105780	0					
ANR	105783	IdentifierDeclStatement	server_t * server = ( server_t * ) data ;	567:1:15736:15771	105780	0	True				
ANR	105784	IdentifierDecl	* server = ( server_t * ) data		105780	0					
ANR	105785	IdentifierDeclType	server_t *		105780	0					
ANR	105786	Identifier	server		105780	1					
ANR	105787	AssignmentExpression	* server = ( server_t * ) data		105780	2		=			
ANR	105788	Identifier	server		105780	0					
ANR	105789	CastExpression	( server_t * ) data		105780	1					
ANR	105790	CastTarget	server_t *		105780	0					
ANR	105791	Identifier	data		105780	1					
ANR	105792	IdentifierDeclStatement	struct dscptracker * tracker = server -> tracker ;	568:1:15774:15819	105780	1	True				
ANR	105793	IdentifierDecl	* tracker = server -> tracker		105780	0					
ANR	105794	IdentifierDeclType	struct dscptracker *		105780	0					
ANR	105795	Identifier	tracker		105780	1					
ANR	105796	AssignmentExpression	* tracker = server -> tracker		105780	2		=			
ANR	105797	Identifier	tracker		105780	0					
ANR	105798	PtrMemberAccess	server -> tracker		105780	1					
ANR	105799	Identifier	server		105780	0					
ANR	105800	Identifier	tracker		105780	1					
ANR	105801	ExpressionStatement	"tracker -> mark = nfct_get_attr_u32 ( ct , ATTR_MARK )"	570:1:15823:15871	105780	2	True				
ANR	105802	AssignmentExpression	"tracker -> mark = nfct_get_attr_u32 ( ct , ATTR_MARK )"		105780	0		=			
ANR	105803	PtrMemberAccess	tracker -> mark		105780	0					
ANR	105804	Identifier	tracker		105780	0					
ANR	105805	Identifier	mark		105780	1					
ANR	105806	CallExpression	"nfct_get_attr_u32 ( ct , ATTR_MARK )"		105780	1					
ANR	105807	Callee	nfct_get_attr_u32		105780	0					
ANR	105808	Identifier	nfct_get_attr_u32		105780	0					
ANR	105809	ArgumentList	ct		105780	1					
ANR	105810	Argument	ct		105780	0					
ANR	105811	Identifier	ct		105780	0					
ANR	105812	Argument	ATTR_MARK		105780	1					
ANR	105813	Identifier	ATTR_MARK		105780	0					
ANR	105814	IfStatement	if ( ( tracker -> mark & 0xff00 ) == MARK_MASK_PREFIX )		105780	3					
ANR	105815	Condition	( tracker -> mark & 0xff00 ) == MARK_MASK_PREFIX	571:5:15878:15921	105780	0	True				
ANR	105816	EqualityExpression	( tracker -> mark & 0xff00 ) == MARK_MASK_PREFIX		105780	0		==			
ANR	105817	BitAndExpression	tracker -> mark & 0xff00		105780	0		&			
ANR	105818	PtrMemberAccess	tracker -> mark		105780	0					
ANR	105819	Identifier	tracker		105780	0					
ANR	105820	Identifier	mark		105780	1					
ANR	105821	PrimaryExpression	0xff00		105780	1					
ANR	105822	Identifier	MARK_MASK_PREFIX		105780	1					
ANR	105823	CompoundStatement		9:2:276:306	105780	1					
ANR	105824	ExpressionStatement	tracker -> dscp = tracker -> mark & 0x00ff	573:2:15968:16006	105780	0	True				
ANR	105825	AssignmentExpression	tracker -> dscp = tracker -> mark & 0x00ff		105780	0		=			
ANR	105826	PtrMemberAccess	tracker -> dscp		105780	0					
ANR	105827	Identifier	tracker		105780	0					
ANR	105828	Identifier	dscp		105780	1					
ANR	105829	BitAndExpression	tracker -> mark & 0x00ff		105780	1		&			
ANR	105830	PtrMemberAccess	tracker -> mark		105780	0					
ANR	105831	Identifier	tracker		105780	0					
ANR	105832	Identifier	mark		105780	1					
ANR	105833	PrimaryExpression	0x00ff		105780	1					
ANR	105834	IdentifierDeclStatement	int tos = ( tracker -> dscp ) << 2 ;	574:2:16010:16040	105780	1	True				
ANR	105835	IdentifierDecl	tos = ( tracker -> dscp ) << 2		105780	0					
ANR	105836	IdentifierDeclType	int		105780	0					
ANR	105837	Identifier	tos		105780	1					
ANR	105838	AssignmentExpression	tos = ( tracker -> dscp ) << 2		105780	2		=			
ANR	105839	Identifier	tos		105780	0					
ANR	105840	ShiftExpression	( tracker -> dscp ) << 2		105780	1		<<			
ANR	105841	PtrMemberAccess	tracker -> dscp		105780	0					
ANR	105842	Identifier	tracker		105780	0					
ANR	105843	Identifier	dscp		105780	1					
ANR	105844	PrimaryExpression	2		105780	1					
ANR	105845	IfStatement	"if ( setsockopt ( server -> fd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) ) != 0 )"		105780	2					
ANR	105846	Condition	"setsockopt ( server -> fd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) ) != 0"	575:6:16048:16113	105780	0	True				
ANR	105847	EqualityExpression	"setsockopt ( server -> fd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) ) != 0"		105780	0		!=			
ANR	105848	CallExpression	"setsockopt ( server -> fd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"		105780	0					
ANR	105849	Callee	setsockopt		105780	0					
ANR	105850	Identifier	setsockopt		105780	0					
ANR	105851	ArgumentList	server -> fd		105780	1					
ANR	105852	Argument	server -> fd		105780	0					
ANR	105853	PtrMemberAccess	server -> fd		105780	0					
ANR	105854	Identifier	server		105780	0					
ANR	105855	Identifier	fd		105780	1					
ANR	105856	Argument	IPPROTO_IP		105780	1					
ANR	105857	Identifier	IPPROTO_IP		105780	0					
ANR	105858	Argument	IP_TOS		105780	2					
ANR	105859	Identifier	IP_TOS		105780	0					
ANR	105860	Argument	& tos		105780	3					
ANR	105861	UnaryOperationExpression	& tos		105780	0					
ANR	105862	UnaryOperator	&		105780	0					
ANR	105863	Identifier	tos		105780	1					
ANR	105864	Argument	sizeof ( tos )		105780	4					
ANR	105865	SizeofExpression	sizeof ( tos )		105780	0					
ANR	105866	Sizeof	sizeof		105780	0					
ANR	105867	SizeofOperand	tos		105780	1					
ANR	105868	PrimaryExpression	0		105780	1					
ANR	105869	CompoundStatement		10:74:382:382	105780	1					
ANR	105870	ExpressionStatement	"ERROR ( ""iptable setsockopt IP_TOS"" )"	576:3:16121:16155	105780	0	True				
ANR	105871	CallExpression	"ERROR ( ""iptable setsockopt IP_TOS"" )"		105780	0					
ANR	105872	Callee	ERROR		105780	0					
ANR	105873	Identifier	ERROR		105780	0					
ANR	105874	ArgumentList	"""iptable setsockopt IP_TOS"""		105780	1					
ANR	105875	Argument	"""iptable setsockopt IP_TOS"""		105780	0					
ANR	105876	PrimaryExpression	"""iptable setsockopt IP_TOS"""		105780	0					
ANR	105877	ExpressionStatement		577:3:16160:16160	105780	3	True				
ANR	105878	ReturnStatement	return NFCT_CB_CONTINUE ;	579:1:16166:16189	105780	4	True				
ANR	105879	Identifier	NFCT_CB_CONTINUE		105780	0					
ANR	105880	ReturnType	int		105780	1					
ANR	105881	Identifier	setMarkDscpCallback		105780	2					
ANR	105882	ParameterList	"enum nf_conntrack_msg_type type , struct nf_conntrack * ct , void * data"		105780	3					
ANR	105883	Parameter	enum nf_conntrack_msg_type type	565:24:15663:15693	105780	0	True				
ANR	105884	ParameterType	enum nf_conntrack_msg_type		105780	0					
ANR	105885	Identifier	type		105780	1					
ANR	105886	Parameter	struct nf_conntrack * ct	565:57:15696:15718	105780	1	True				
ANR	105887	ParameterType	struct nf_conntrack *		105780	0					
ANR	105888	Identifier	ct		105780	1					
ANR	105889	Parameter	void * data	565:82:15721:15730	105780	2	True				
ANR	105890	ParameterType	void *		105780	0					
ANR	105891	Identifier	data		105780	1					
ANR	105892	CFGEntryNode	ENTRY		105780		True				
ANR	105893	CFGExitNode	EXIT		105780		True				
ANR	105894	Symbol	server		105780						
ANR	105895	Symbol	ATTR_MARK		105780						
ANR	105896	Symbol	IPPROTO_IP		105780						
ANR	105897	Symbol	* tracker		105780						
ANR	105898	Symbol	* server		105780						
ANR	105899	Symbol	data		105780						
ANR	105900	Symbol	IP_TOS		105780						
ANR	105901	Symbol	tracker -> mark		105780						
ANR	105902	Symbol	server -> fd		105780						
ANR	105903	Symbol	type		105780						
ANR	105904	Symbol	setsockopt		105780						
ANR	105905	Symbol	MARK_MASK_PREFIX		105780						
ANR	105906	Symbol	tracker -> dscp		105780						
ANR	105907	Symbol	ct		105780						
ANR	105908	Symbol	server -> tracker		105780						
ANR	105909	Symbol	tracker		105780						
ANR	105910	Symbol	tos		105780						
ANR	105911	Symbol	& tos		105780						
ANR	105912	Symbol	nfct_get_attr_u32		105780						
ANR	105913	Symbol	NFCT_CB_CONTINUE		105780						
ANR	105914	Function	conntrackQuery	582:0:16194:16765							
ANR	105915	FunctionDef	conntrackQuery (server_t * server)		105914	0					
ANR	105916	CompoundStatement		582:38:16232:16765	105914	0					
ANR	105917	IdentifierDeclStatement	struct dscptracker * tracker = server -> tracker ;	583:1:16235:16280	105914	0	True				
ANR	105918	IdentifierDecl	* tracker = server -> tracker		105914	0					
ANR	105919	IdentifierDeclType	struct dscptracker *		105914	0					
ANR	105920	Identifier	tracker		105914	1					
ANR	105921	AssignmentExpression	* tracker = server -> tracker		105914	2		=			
ANR	105922	Identifier	tracker		105914	0					
ANR	105923	PtrMemberAccess	server -> tracker		105914	1					
ANR	105924	Identifier	server		105914	0					
ANR	105925	Identifier	tracker		105914	1					
ANR	105926	IfStatement	if ( tracker && tracker -> ct )		105914	1					
ANR	105927	Condition	tracker && tracker -> ct	584:4:16286:16307	105914	0	True				
ANR	105928	AndExpression	tracker && tracker -> ct		105914	0		&&			
ANR	105929	Identifier	tracker		105914	0					
ANR	105930	PtrMemberAccess	tracker -> ct		105914	1					
ANR	105931	Identifier	tracker		105914	0					
ANR	105932	Identifier	ct		105914	1					
ANR	105933	CompoundStatement		5:2:122:169	105914	1					
ANR	105934	IdentifierDeclStatement	"struct nfct_handle * h = nfct_open ( CONNTRACK , 0 ) ;"	586:2:16355:16402	105914	0	True				
ANR	105935	IdentifierDecl	"* h = nfct_open ( CONNTRACK , 0 )"		105914	0					
ANR	105936	IdentifierDeclType	struct nfct_handle *		105914	0					
ANR	105937	Identifier	h		105914	1					
ANR	105938	AssignmentExpression	"* h = nfct_open ( CONNTRACK , 0 )"		105914	2		=			
ANR	105939	Identifier	h		105914	0					
ANR	105940	CallExpression	"nfct_open ( CONNTRACK , 0 )"		105914	1					
ANR	105941	Callee	nfct_open		105914	0					
ANR	105942	Identifier	nfct_open		105914	0					
ANR	105943	ArgumentList	CONNTRACK		105914	1					
ANR	105944	Argument	CONNTRACK		105914	0					
ANR	105945	Identifier	CONNTRACK		105914	0					
ANR	105946	Argument	0		105914	1					
ANR	105947	PrimaryExpression	0		105914	0					
ANR	105948	IfStatement	if ( h )		105914	1					
ANR	105949	Condition	h	587:6:16410:16410	105914	0	True				
ANR	105950	Identifier	h		105914	0					
ANR	105951	CompoundStatement		8:3:264:310	105914	1					
ANR	105952	ExpressionStatement	"nfct_callback_register ( h , NFCT_T_ALL , setMarkDscpCallback , ( void * ) server )"	588:3:16418:16492	105914	0	True				
ANR	105953	CallExpression	"nfct_callback_register ( h , NFCT_T_ALL , setMarkDscpCallback , ( void * ) server )"		105914	0					
ANR	105954	Callee	nfct_callback_register		105914	0					
ANR	105955	Identifier	nfct_callback_register		105914	0					
ANR	105956	ArgumentList	h		105914	1					
ANR	105957	Argument	h		105914	0					
ANR	105958	Identifier	h		105914	0					
ANR	105959	Argument	NFCT_T_ALL		105914	1					
ANR	105960	Identifier	NFCT_T_ALL		105914	0					
ANR	105961	Argument	setMarkDscpCallback		105914	2					
ANR	105962	Identifier	setMarkDscpCallback		105914	0					
ANR	105963	Argument	( void * ) server		105914	3					
ANR	105964	CastExpression	( void * ) server		105914	0					
ANR	105965	CastTarget	void *		105914	0					
ANR	105966	Identifier	server		105914	1					
ANR	105967	IdentifierDeclStatement	"int x = nfct_query ( h , NFCT_Q_GET , tracker -> ct ) ;"	589:3:16497:16543	105914	1	True				
ANR	105968	IdentifierDecl	"x = nfct_query ( h , NFCT_Q_GET , tracker -> ct )"		105914	0					
ANR	105969	IdentifierDeclType	int		105914	0					
ANR	105970	Identifier	x		105914	1					
ANR	105971	AssignmentExpression	"x = nfct_query ( h , NFCT_Q_GET , tracker -> ct )"		105914	2		=			
ANR	105972	Identifier	x		105914	0					
ANR	105973	CallExpression	"nfct_query ( h , NFCT_Q_GET , tracker -> ct )"		105914	1					
ANR	105974	Callee	nfct_query		105914	0					
ANR	105975	Identifier	nfct_query		105914	0					
ANR	105976	ArgumentList	h		105914	1					
ANR	105977	Argument	h		105914	0					
ANR	105978	Identifier	h		105914	0					
ANR	105979	Argument	NFCT_Q_GET		105914	1					
ANR	105980	Identifier	NFCT_Q_GET		105914	0					
ANR	105981	Argument	tracker -> ct		105914	2					
ANR	105982	PtrMemberAccess	tracker -> ct		105914	0					
ANR	105983	Identifier	tracker		105914	0					
ANR	105984	Identifier	ct		105914	1					
ANR	105985	IfStatement	if ( x == - 1 )		105914	2					
ANR	105986	Condition	x == - 1	590:7:16552:16558	105914	0	True				
ANR	105987	EqualityExpression	x == - 1		105914	0		==			
ANR	105988	Identifier	x		105914	0					
ANR	105989	UnaryOperationExpression	- 1		105914	1					
ANR	105990	UnaryOperator	-		105914	0					
ANR	105991	PrimaryExpression	1		105914	1					
ANR	105992	CompoundStatement		9:16:328:328	105914	1					
ANR	105993	ExpressionStatement	"LOGE ( ""QOS: Failed to retrieve connection mark %s"" , strerror ( errno ) )"	591:4:16567:16634	105914	0	True				
ANR	105994	CallExpression	"LOGE ( ""QOS: Failed to retrieve connection mark %s"" , strerror ( errno ) )"		105914	0					
ANR	105995	Callee	LOGE		105914	0					
ANR	105996	Identifier	LOGE		105914	0					
ANR	105997	ArgumentList	"""QOS: Failed to retrieve connection mark %s"""		105914	1					
ANR	105998	Argument	"""QOS: Failed to retrieve connection mark %s"""		105914	0					
ANR	105999	PrimaryExpression	"""QOS: Failed to retrieve connection mark %s"""		105914	0					
ANR	106000	Argument	strerror ( errno )		105914	1					
ANR	106001	CallExpression	strerror ( errno )		105914	0					
ANR	106002	Callee	strerror		105914	0					
ANR	106003	Identifier	strerror		105914	0					
ANR	106004	ArgumentList	errno		105914	1					
ANR	106005	Argument	errno		105914	0					
ANR	106006	Identifier	errno		105914	0					
ANR	106007	ExpressionStatement	nfct_close ( h )	593:3:16644:16657	105914	3	True				
ANR	106008	CallExpression	nfct_close ( h )		105914	0					
ANR	106009	Callee	nfct_close		105914	0					
ANR	106010	Identifier	nfct_close		105914	0					
ANR	106011	ArgumentList	h		105914	1					
ANR	106012	Argument	h		105914	0					
ANR	106013	Identifier	h		105914	0					
ANR	106014	ElseStatement	else		105914	0					
ANR	106015	CompoundStatement		13:9:435:435	105914	0					
ANR	106016	ExpressionStatement	"LOGE ( ""QOS: Failed to open conntrack handle for upstream netfilter mark retrieval."" )"	595:3:16673:16756	105914	0	True				
ANR	106017	CallExpression	"LOGE ( ""QOS: Failed to open conntrack handle for upstream netfilter mark retrieval."" )"		105914	0					
ANR	106018	Callee	LOGE		105914	0					
ANR	106019	Identifier	LOGE		105914	0					
ANR	106020	ArgumentList	"""QOS: Failed to open conntrack handle for upstream netfilter mark retrieval."""		105914	1					
ANR	106021	Argument	"""QOS: Failed to open conntrack handle for upstream netfilter mark retrieval."""		105914	0					
ANR	106022	PrimaryExpression	"""QOS: Failed to open conntrack handle for upstream netfilter mark retrieval."""		105914	0					
ANR	106023	ReturnType	void		105914	1					
ANR	106024	Identifier	conntrackQuery		105914	2					
ANR	106025	ParameterList	server_t * server		105914	3					
ANR	106026	Parameter	server_t * server	582:20:16214:16229	105914	0	True				
ANR	106027	ParameterType	server_t *		105914	0					
ANR	106028	Identifier	server		105914	1					
ANR	106029	CFGEntryNode	ENTRY		105914		True				
ANR	106030	CFGExitNode	EXIT		105914		True				
ANR	106031	Symbol	server		105914						
ANR	106032	Symbol	* tracker		105914						
ANR	106033	Symbol	errno		105914						
ANR	106034	Symbol	* server		105914						
ANR	106035	Symbol	setMarkDscpCallback		105914						
ANR	106036	Symbol	h		105914						
ANR	106037	Symbol	nfct_open		105914						
ANR	106038	Symbol	tracker -> ct		105914						
ANR	106039	Symbol	strerror		105914						
ANR	106040	Symbol	CONNTRACK		105914						
ANR	106041	Symbol	server -> tracker		105914						
ANR	106042	Symbol	nfct_query		105914						
ANR	106043	Symbol	tracker		105914						
ANR	106044	Symbol	x		105914						
ANR	106045	Symbol	NFCT_T_ALL		105914						
ANR	106046	Symbol	NFCT_Q_GET		105914						
ANR	106047	Function	setTosFromConnmark	600:0:16768:18903							
ANR	106048	FunctionDef	"setTosFromConnmark (remote_t * remote , server_t * server)"		106047	0					
ANR	106049	CompoundStatement		601:0:16828:18903	106047	0					
ANR	106050	IfStatement	if ( server -> tracker && server -> tracker -> ct )		106047	0					
ANR	106051	Condition	server -> tracker && server -> tracker -> ct	602:4:16834:16871	106047	0	True				
ANR	106052	AndExpression	server -> tracker && server -> tracker -> ct		106047	0		&&			
ANR	106053	PtrMemberAccess	server -> tracker		106047	0					
ANR	106054	Identifier	server		106047	0					
ANR	106055	Identifier	tracker		106047	1					
ANR	106056	PtrMemberAccess	server -> tracker -> ct		106047	1					
ANR	106057	PtrMemberAccess	server -> tracker		106047	0					
ANR	106058	Identifier	server		106047	0					
ANR	106059	Identifier	tracker		106047	1					
ANR	106060	Identifier	ct		106047	1					
ANR	106061	CompoundStatement		2:44:45:45	106047	1					
ANR	106062	IfStatement	if ( server -> tracker -> mark == 0 && server -> tracker -> packet_count < MARK_MAX_PACKET )		106047	0					
ANR	106063	Condition	server -> tracker -> mark == 0 && server -> tracker -> packet_count < MARK_MAX_PACKET	603:5:16881:16957	106047	0	True				
ANR	106064	AndExpression	server -> tracker -> mark == 0 && server -> tracker -> packet_count < MARK_MAX_PACKET		106047	0		&&			
ANR	106065	EqualityExpression	server -> tracker -> mark == 0		106047	0		==			
ANR	106066	PtrMemberAccess	server -> tracker -> mark		106047	0					
ANR	106067	PtrMemberAccess	server -> tracker		106047	0					
ANR	106068	Identifier	server		106047	0					
ANR	106069	Identifier	tracker		106047	1					
ANR	106070	Identifier	mark		106047	1					
ANR	106071	PrimaryExpression	0		106047	1					
ANR	106072	RelationalExpression	server -> tracker -> packet_count < MARK_MAX_PACKET		106047	1		<			
ANR	106073	PtrMemberAccess	server -> tracker -> packet_count		106047	0					
ANR	106074	PtrMemberAccess	server -> tracker		106047	0					
ANR	106075	Identifier	server		106047	0					
ANR	106076	Identifier	tracker		106047	1					
ANR	106077	Identifier	packet_count		106047	1					
ANR	106078	Identifier	MARK_MAX_PACKET		106047	1					
ANR	106079	CompoundStatement		3:84:131:131	106047	1					
ANR	106080	ExpressionStatement	server -> tracker -> packet_count ++	604:3:16965:16996	106047	0	True				
ANR	106081	PostIncDecOperationExpression	server -> tracker -> packet_count ++		106047	0					
ANR	106082	PtrMemberAccess	server -> tracker -> packet_count		106047	0					
ANR	106083	PtrMemberAccess	server -> tracker		106047	0					
ANR	106084	Identifier	server		106047	0					
ANR	106085	Identifier	tracker		106047	1					
ANR	106086	Identifier	packet_count		106047	1					
ANR	106087	IncDec	++		106047	1					
ANR	106088	ExpressionStatement	conntrackQuery ( server )	605:3:17001:17023	106047	1	True				
ANR	106089	CallExpression	conntrackQuery ( server )		106047	0					
ANR	106090	Callee	conntrackQuery		106047	0					
ANR	106091	Identifier	conntrackQuery		106047	0					
ANR	106092	ArgumentList	server		106047	1					
ANR	106093	Argument	server		106047	0					
ANR	106094	Identifier	server		106047	0					
ANR	106095	ElseStatement	else		106047	0					
ANR	106096	CompoundStatement		9:2:229:256	106047	0					
ANR	106097	IdentifierDeclStatement	socklen_t len ;	608:2:17041:17054	106047	0	True				
ANR	106098	IdentifierDecl	len		106047	0					
ANR	106099	IdentifierDeclType	socklen_t		106047	0					
ANR	106100	Identifier	len		106047	1					
ANR	106101	IdentifierDeclStatement	struct sockaddr_storage sin ;	609:2:17058:17085	106047	1	True				
ANR	106102	IdentifierDecl	sin		106047	0					
ANR	106103	IdentifierDeclType	struct sockaddr_storage		106047	0					
ANR	106104	Identifier	sin		106047	1					
ANR	106105	ExpressionStatement	len = sizeof ( sin )	610:2:17089:17106	106047	2	True				
ANR	106106	AssignmentExpression	len = sizeof ( sin )		106047	0		=			
ANR	106107	Identifier	len		106047	0					
ANR	106108	SizeofExpression	sizeof ( sin )		106047	1					
ANR	106109	Sizeof	sizeof		106047	0					
ANR	106110	SizeofOperand	sin		106047	1					
ANR	106111	IfStatement	"if ( getsockname ( remote -> fd , ( struct sockaddr * ) & sin , & len ) == 0 )"		106047	3					
ANR	106112	Condition	"getsockname ( remote -> fd , ( struct sockaddr * ) & sin , & len ) == 0"	611:6:17114:17172	106047	0	True				
ANR	106113	EqualityExpression	"getsockname ( remote -> fd , ( struct sockaddr * ) & sin , & len ) == 0"		106047	0		==			
ANR	106114	CallExpression	"getsockname ( remote -> fd , ( struct sockaddr * ) & sin , & len )"		106047	0					
ANR	106115	Callee	getsockname		106047	0					
ANR	106116	Identifier	getsockname		106047	0					
ANR	106117	ArgumentList	remote -> fd		106047	1					
ANR	106118	Argument	remote -> fd		106047	0					
ANR	106119	PtrMemberAccess	remote -> fd		106047	0					
ANR	106120	Identifier	remote		106047	0					
ANR	106121	Identifier	fd		106047	1					
ANR	106122	Argument	( struct sockaddr * ) & sin		106047	1					
ANR	106123	CastExpression	( struct sockaddr * ) & sin		106047	0					
ANR	106124	CastTarget	struct sockaddr *		106047	0					
ANR	106125	UnaryOperationExpression	& sin		106047	1					
ANR	106126	UnaryOperator	&		106047	0					
ANR	106127	Identifier	sin		106047	1					
ANR	106128	Argument	& len		106047	2					
ANR	106129	UnaryOperationExpression	& len		106047	0					
ANR	106130	UnaryOperator	&		106047	0					
ANR	106131	Identifier	len		106047	1					
ANR	106132	PrimaryExpression	0		106047	1					
ANR	106133	CompoundStatement		12:3:351:384	106047	1					
ANR	106134	IdentifierDeclStatement	struct sockaddr_storage from_addr ;	612:3:17180:17213	106047	0	True				
ANR	106135	IdentifierDecl	from_addr		106047	0					
ANR	106136	IdentifierDeclType	struct sockaddr_storage		106047	0					
ANR	106137	Identifier	from_addr		106047	1					
ANR	106138	ExpressionStatement	len = sizeof from_addr	613:3:17218:17240	106047	1	True				
ANR	106139	AssignmentExpression	len = sizeof from_addr		106047	0		=			
ANR	106140	Identifier	len		106047	0					
ANR	106141	SizeofExpression	sizeof from_addr		106047	1					
ANR	106142	Sizeof	sizeof		106047	0					
ANR	106143	Identifier	from_addr		106047	1					
ANR	106144	IfStatement	"if ( getpeername ( remote -> fd , ( struct sockaddr * ) & from_addr , & len ) == 0 )"		106047	2					
ANR	106145	Condition	"getpeername ( remote -> fd , ( struct sockaddr * ) & from_addr , & len ) == 0"	614:6:17248:17311	106047	0	True				
ANR	106146	EqualityExpression	"getpeername ( remote -> fd , ( struct sockaddr * ) & from_addr , & len ) == 0"		106047	0		==			
ANR	106147	CallExpression	"getpeername ( remote -> fd , ( struct sockaddr * ) & from_addr , & len )"		106047	0					
ANR	106148	Callee	getpeername		106047	0					
ANR	106149	Identifier	getpeername		106047	0					
ANR	106150	ArgumentList	remote -> fd		106047	1					
ANR	106151	Argument	remote -> fd		106047	0					
ANR	106152	PtrMemberAccess	remote -> fd		106047	0					
ANR	106153	Identifier	remote		106047	0					
ANR	106154	Identifier	fd		106047	1					
ANR	106155	Argument	( struct sockaddr * ) & from_addr		106047	1					
ANR	106156	CastExpression	( struct sockaddr * ) & from_addr		106047	0					
ANR	106157	CastTarget	struct sockaddr *		106047	0					
ANR	106158	UnaryOperationExpression	& from_addr		106047	1					
ANR	106159	UnaryOperator	&		106047	0					
ANR	106160	Identifier	from_addr		106047	1					
ANR	106161	Argument	& len		106047	2					
ANR	106162	UnaryOperationExpression	& len		106047	0					
ANR	106163	UnaryOperator	&		106047	0					
ANR	106164	Identifier	len		106047	1					
ANR	106165	PrimaryExpression	0		106047	1					
ANR	106166	CompoundStatement		14:72:485:485	106047	1					
ANR	106167	IfStatement	if ( ( server -> tracker = ( struct dscptracker * ) ss_malloc ( sizeof ( struct dscptracker ) ) ) )		106047	0					
ANR	106168	Condition	server -> tracker = ( struct dscptracker * ) ss_malloc ( sizeof ( struct dscptracker ) )	615:7:17323:17401	106047	0	True				
ANR	106169	AssignmentExpression	server -> tracker = ( struct dscptracker * ) ss_malloc ( sizeof ( struct dscptracker ) )		106047	0		=			
ANR	106170	PtrMemberAccess	server -> tracker		106047	0					
ANR	106171	Identifier	server		106047	0					
ANR	106172	Identifier	tracker		106047	1					
ANR	106173	CastExpression	( struct dscptracker * ) ss_malloc ( sizeof ( struct dscptracker ) )		106047	1					
ANR	106174	CastTarget	struct dscptracker *		106047	0					
ANR	106175	CallExpression	ss_malloc ( sizeof ( struct dscptracker ) )		106047	1					
ANR	106176	Callee	ss_malloc		106047	0					
ANR	106177	Identifier	ss_malloc		106047	0					
ANR	106178	ArgumentList	sizeof ( struct dscptracker )		106047	1					
ANR	106179	Argument	sizeof ( struct dscptracker )		106047	0					
ANR	106180	SizeofExpression	sizeof ( struct dscptracker )		106047	0					
ANR	106181	Sizeof	sizeof		106047	0					
ANR	106182	SizeofOperand	struct dscptracker		106047	1					
ANR	106183	CompoundStatement		16:4:579:579	106047	1					
ANR	106184	IfStatement	if ( ( server -> tracker -> ct = nfct_new ( ) ) )		106047	0					
ANR	106185	Condition	server -> tracker -> ct = nfct_new ( )	617:9:17419:17452	106047	0	True				
ANR	106186	AssignmentExpression	server -> tracker -> ct = nfct_new ( )		106047	0		=			
ANR	106187	PtrMemberAccess	server -> tracker -> ct		106047	0					
ANR	106188	PtrMemberAccess	server -> tracker		106047	0					
ANR	106189	Identifier	server		106047	0					
ANR	106190	Identifier	tracker		106047	1					
ANR	106191	Identifier	ct		106047	1					
ANR	106192	CallExpression	nfct_new ( )		106047	1					
ANR	106193	Callee	nfct_new		106047	0					
ANR	106194	Identifier	nfct_new		106047	0					
ANR	106195	ArgumentList			106047	1					
ANR	106196	CompoundStatement		17:45:626:626	106047	1					
ANR	106197	IfStatement	if ( from_addr . ss_family == AF_INET )		106047	0					
ANR	106198	Condition	from_addr . ss_family == AF_INET	619:10:17505:17534	106047	0	True				
ANR	106199	EqualityExpression	from_addr . ss_family == AF_INET		106047	0		==			
ANR	106200	MemberAccess	from_addr . ss_family		106047	0					
ANR	106201	Identifier	from_addr		106047	0					
ANR	106202	Identifier	ss_family		106047	1					
ANR	106203	Identifier	AF_INET		106047	1					
ANR	106204	CompoundStatement		21:7:784:836	106047	1					
ANR	106205	IdentifierDeclStatement	struct sockaddr_in * src = ( struct sockaddr_in * ) & from_addr ;	620:7:17546:17604	106047	0	True				
ANR	106206	IdentifierDecl	* src = ( struct sockaddr_in * ) & from_addr		106047	0					
ANR	106207	IdentifierDeclType	struct sockaddr_in *		106047	0					
ANR	106208	Identifier	src		106047	1					
ANR	106209	AssignmentExpression	* src = ( struct sockaddr_in * ) & from_addr		106047	2		=			
ANR	106210	Identifier	src		106047	0					
ANR	106211	CastExpression	( struct sockaddr_in * ) & from_addr		106047	1					
ANR	106212	CastTarget	struct sockaddr_in *		106047	0					
ANR	106213	UnaryOperationExpression	& from_addr		106047	1					
ANR	106214	UnaryOperator	&		106047	0					
ANR	106215	Identifier	from_addr		106047	1					
ANR	106216	IdentifierDeclStatement	struct sockaddr_in * dst = ( struct sockaddr_in * ) & sin ;	621:7:17613:17665	106047	1	True				
ANR	106217	IdentifierDecl	* dst = ( struct sockaddr_in * ) & sin		106047	0					
ANR	106218	IdentifierDeclType	struct sockaddr_in *		106047	0					
ANR	106219	Identifier	dst		106047	1					
ANR	106220	AssignmentExpression	* dst = ( struct sockaddr_in * ) & sin		106047	2		=			
ANR	106221	Identifier	dst		106047	0					
ANR	106222	CastExpression	( struct sockaddr_in * ) & sin		106047	1					
ANR	106223	CastTarget	struct sockaddr_in *		106047	0					
ANR	106224	UnaryOperationExpression	& sin		106047	1					
ANR	106225	UnaryOperator	&		106047	0					
ANR	106226	Identifier	sin		106047	1					
ANR	106227	ExpressionStatement	"nfct_set_attr_u8 ( server -> tracker -> ct , ATTR_L3PROTO , AF_INET )"	623:7:17675:17735	106047	2	True				
ANR	106228	CallExpression	"nfct_set_attr_u8 ( server -> tracker -> ct , ATTR_L3PROTO , AF_INET )"		106047	0					
ANR	106229	Callee	nfct_set_attr_u8		106047	0					
ANR	106230	Identifier	nfct_set_attr_u8		106047	0					
ANR	106231	ArgumentList	server -> tracker -> ct		106047	1					
ANR	106232	Argument	server -> tracker -> ct		106047	0					
ANR	106233	PtrMemberAccess	server -> tracker -> ct		106047	0					
ANR	106234	PtrMemberAccess	server -> tracker		106047	0					
ANR	106235	Identifier	server		106047	0					
ANR	106236	Identifier	tracker		106047	1					
ANR	106237	Identifier	ct		106047	1					
ANR	106238	Argument	ATTR_L3PROTO		106047	1					
ANR	106239	Identifier	ATTR_L3PROTO		106047	0					
ANR	106240	Argument	AF_INET		106047	2					
ANR	106241	Identifier	AF_INET		106047	0					
ANR	106242	ExpressionStatement	"nfct_set_attr_u32 ( server -> tracker -> ct , ATTR_IPV4_DST , dst -> sin_addr . s_addr )"	624:7:17744:17819	106047	3	True				
ANR	106243	CallExpression	"nfct_set_attr_u32 ( server -> tracker -> ct , ATTR_IPV4_DST , dst -> sin_addr . s_addr )"		106047	0					
ANR	106244	Callee	nfct_set_attr_u32		106047	0					
ANR	106245	Identifier	nfct_set_attr_u32		106047	0					
ANR	106246	ArgumentList	server -> tracker -> ct		106047	1					
ANR	106247	Argument	server -> tracker -> ct		106047	0					
ANR	106248	PtrMemberAccess	server -> tracker -> ct		106047	0					
ANR	106249	PtrMemberAccess	server -> tracker		106047	0					
ANR	106250	Identifier	server		106047	0					
ANR	106251	Identifier	tracker		106047	1					
ANR	106252	Identifier	ct		106047	1					
ANR	106253	Argument	ATTR_IPV4_DST		106047	1					
ANR	106254	Identifier	ATTR_IPV4_DST		106047	0					
ANR	106255	Argument	dst -> sin_addr . s_addr		106047	2					
ANR	106256	MemberAccess	dst -> sin_addr . s_addr		106047	0					
ANR	106257	PtrMemberAccess	dst -> sin_addr		106047	0					
ANR	106258	Identifier	dst		106047	0					
ANR	106259	Identifier	sin_addr		106047	1					
ANR	106260	Identifier	s_addr		106047	1					
ANR	106261	ExpressionStatement	"nfct_set_attr_u32 ( server -> tracker -> ct , ATTR_IPV4_SRC , src -> sin_addr . s_addr )"	625:7:17828:17903	106047	4	True				
ANR	106262	CallExpression	"nfct_set_attr_u32 ( server -> tracker -> ct , ATTR_IPV4_SRC , src -> sin_addr . s_addr )"		106047	0					
ANR	106263	Callee	nfct_set_attr_u32		106047	0					
ANR	106264	Identifier	nfct_set_attr_u32		106047	0					
ANR	106265	ArgumentList	server -> tracker -> ct		106047	1					
ANR	106266	Argument	server -> tracker -> ct		106047	0					
ANR	106267	PtrMemberAccess	server -> tracker -> ct		106047	0					
ANR	106268	PtrMemberAccess	server -> tracker		106047	0					
ANR	106269	Identifier	server		106047	0					
ANR	106270	Identifier	tracker		106047	1					
ANR	106271	Identifier	ct		106047	1					
ANR	106272	Argument	ATTR_IPV4_SRC		106047	1					
ANR	106273	Identifier	ATTR_IPV4_SRC		106047	0					
ANR	106274	Argument	src -> sin_addr . s_addr		106047	2					
ANR	106275	MemberAccess	src -> sin_addr . s_addr		106047	0					
ANR	106276	PtrMemberAccess	src -> sin_addr		106047	0					
ANR	106277	Identifier	src		106047	0					
ANR	106278	Identifier	sin_addr		106047	1					
ANR	106279	Identifier	s_addr		106047	1					
ANR	106280	ExpressionStatement	"nfct_set_attr_u16 ( server -> tracker -> ct , ATTR_PORT_DST , dst -> sin_port )"	626:7:17912:17980	106047	5	True				
ANR	106281	CallExpression	"nfct_set_attr_u16 ( server -> tracker -> ct , ATTR_PORT_DST , dst -> sin_port )"		106047	0					
ANR	106282	Callee	nfct_set_attr_u16		106047	0					
ANR	106283	Identifier	nfct_set_attr_u16		106047	0					
ANR	106284	ArgumentList	server -> tracker -> ct		106047	1					
ANR	106285	Argument	server -> tracker -> ct		106047	0					
ANR	106286	PtrMemberAccess	server -> tracker -> ct		106047	0					
ANR	106287	PtrMemberAccess	server -> tracker		106047	0					
ANR	106288	Identifier	server		106047	0					
ANR	106289	Identifier	tracker		106047	1					
ANR	106290	Identifier	ct		106047	1					
ANR	106291	Argument	ATTR_PORT_DST		106047	1					
ANR	106292	Identifier	ATTR_PORT_DST		106047	0					
ANR	106293	Argument	dst -> sin_port		106047	2					
ANR	106294	PtrMemberAccess	dst -> sin_port		106047	0					
ANR	106295	Identifier	dst		106047	0					
ANR	106296	Identifier	sin_port		106047	1					
ANR	106297	ExpressionStatement	"nfct_set_attr_u16 ( server -> tracker -> ct , ATTR_PORT_SRC , src -> sin_port )"	627:7:17989:18057	106047	6	True				
ANR	106298	CallExpression	"nfct_set_attr_u16 ( server -> tracker -> ct , ATTR_PORT_SRC , src -> sin_port )"		106047	0					
ANR	106299	Callee	nfct_set_attr_u16		106047	0					
ANR	106300	Identifier	nfct_set_attr_u16		106047	0					
ANR	106301	ArgumentList	server -> tracker -> ct		106047	1					
ANR	106302	Argument	server -> tracker -> ct		106047	0					
ANR	106303	PtrMemberAccess	server -> tracker -> ct		106047	0					
ANR	106304	PtrMemberAccess	server -> tracker		106047	0					
ANR	106305	Identifier	server		106047	0					
ANR	106306	Identifier	tracker		106047	1					
ANR	106307	Identifier	ct		106047	1					
ANR	106308	Argument	ATTR_PORT_SRC		106047	1					
ANR	106309	Identifier	ATTR_PORT_SRC		106047	0					
ANR	106310	Argument	src -> sin_port		106047	2					
ANR	106311	PtrMemberAccess	src -> sin_port		106047	0					
ANR	106312	Identifier	src		106047	0					
ANR	106313	Identifier	sin_port		106047	1					
ANR	106314	ElseStatement	else		106047	0					
ANR	106315	IfStatement	if ( from_addr . ss_family == AF_INET6 )		106047	0					
ANR	106316	Condition	from_addr . ss_family == AF_INET6	628:17:18076:18106	106047	0	True				
ANR	106317	EqualityExpression	from_addr . ss_family == AF_INET6		106047	0		==			
ANR	106318	MemberAccess	from_addr . ss_family		106047	0					
ANR	106319	Identifier	from_addr		106047	0					
ANR	106320	Identifier	ss_family		106047	1					
ANR	106321	Identifier	AF_INET6		106047	1					
ANR	106322	CompoundStatement		30:7:1358:1412	106047	1					
ANR	106323	IdentifierDeclStatement	struct sockaddr_in6 * src = ( struct sockaddr_in6 * ) & from_addr ;	629:7:18118:18178	106047	0	True				
ANR	106324	IdentifierDecl	* src = ( struct sockaddr_in6 * ) & from_addr		106047	0					
ANR	106325	IdentifierDeclType	struct sockaddr_in6 *		106047	0					
ANR	106326	Identifier	src		106047	1					
ANR	106327	AssignmentExpression	* src = ( struct sockaddr_in6 * ) & from_addr		106047	2		=			
ANR	106328	Identifier	src		106047	0					
ANR	106329	CastExpression	( struct sockaddr_in6 * ) & from_addr		106047	1					
ANR	106330	CastTarget	struct sockaddr_in6 *		106047	0					
ANR	106331	UnaryOperationExpression	& from_addr		106047	1					
ANR	106332	UnaryOperator	&		106047	0					
ANR	106333	Identifier	from_addr		106047	1					
ANR	106334	IdentifierDeclStatement	struct sockaddr_in6 * dst = ( struct sockaddr_in6 * ) & sin ;	630:7:18187:18241	106047	1	True				
ANR	106335	IdentifierDecl	* dst = ( struct sockaddr_in6 * ) & sin		106047	0					
ANR	106336	IdentifierDeclType	struct sockaddr_in6 *		106047	0					
ANR	106337	Identifier	dst		106047	1					
ANR	106338	AssignmentExpression	* dst = ( struct sockaddr_in6 * ) & sin		106047	2		=			
ANR	106339	Identifier	dst		106047	0					
ANR	106340	CastExpression	( struct sockaddr_in6 * ) & sin		106047	1					
ANR	106341	CastTarget	struct sockaddr_in6 *		106047	0					
ANR	106342	UnaryOperationExpression	& sin		106047	1					
ANR	106343	UnaryOperator	&		106047	0					
ANR	106344	Identifier	sin		106047	1					
ANR	106345	ExpressionStatement	"nfct_set_attr_u8 ( server -> tracker -> ct , ATTR_L3PROTO , AF_INET6 )"	632:7:18251:18312	106047	2	True				
ANR	106346	CallExpression	"nfct_set_attr_u8 ( server -> tracker -> ct , ATTR_L3PROTO , AF_INET6 )"		106047	0					
ANR	106347	Callee	nfct_set_attr_u8		106047	0					
ANR	106348	Identifier	nfct_set_attr_u8		106047	0					
ANR	106349	ArgumentList	server -> tracker -> ct		106047	1					
ANR	106350	Argument	server -> tracker -> ct		106047	0					
ANR	106351	PtrMemberAccess	server -> tracker -> ct		106047	0					
ANR	106352	PtrMemberAccess	server -> tracker		106047	0					
ANR	106353	Identifier	server		106047	0					
ANR	106354	Identifier	tracker		106047	1					
ANR	106355	Identifier	ct		106047	1					
ANR	106356	Argument	ATTR_L3PROTO		106047	1					
ANR	106357	Identifier	ATTR_L3PROTO		106047	0					
ANR	106358	Argument	AF_INET6		106047	2					
ANR	106359	Identifier	AF_INET6		106047	0					
ANR	106360	ExpressionStatement	"nfct_set_attr ( server -> tracker -> ct , ATTR_IPV6_DST , dst -> sin6_addr . s6_addr )"	633:7:18321:18394	106047	3	True				
ANR	106361	CallExpression	"nfct_set_attr ( server -> tracker -> ct , ATTR_IPV6_DST , dst -> sin6_addr . s6_addr )"		106047	0					
ANR	106362	Callee	nfct_set_attr		106047	0					
ANR	106363	Identifier	nfct_set_attr		106047	0					
ANR	106364	ArgumentList	server -> tracker -> ct		106047	1					
ANR	106365	Argument	server -> tracker -> ct		106047	0					
ANR	106366	PtrMemberAccess	server -> tracker -> ct		106047	0					
ANR	106367	PtrMemberAccess	server -> tracker		106047	0					
ANR	106368	Identifier	server		106047	0					
ANR	106369	Identifier	tracker		106047	1					
ANR	106370	Identifier	ct		106047	1					
ANR	106371	Argument	ATTR_IPV6_DST		106047	1					
ANR	106372	Identifier	ATTR_IPV6_DST		106047	0					
ANR	106373	Argument	dst -> sin6_addr . s6_addr		106047	2					
ANR	106374	MemberAccess	dst -> sin6_addr . s6_addr		106047	0					
ANR	106375	PtrMemberAccess	dst -> sin6_addr		106047	0					
ANR	106376	Identifier	dst		106047	0					
ANR	106377	Identifier	sin6_addr		106047	1					
ANR	106378	Identifier	s6_addr		106047	1					
ANR	106379	ExpressionStatement	"nfct_set_attr ( server -> tracker -> ct , ATTR_IPV6_SRC , src -> sin6_addr . s6_addr )"	634:7:18403:18476	106047	4	True				
ANR	106380	CallExpression	"nfct_set_attr ( server -> tracker -> ct , ATTR_IPV6_SRC , src -> sin6_addr . s6_addr )"		106047	0					
ANR	106381	Callee	nfct_set_attr		106047	0					
ANR	106382	Identifier	nfct_set_attr		106047	0					
ANR	106383	ArgumentList	server -> tracker -> ct		106047	1					
ANR	106384	Argument	server -> tracker -> ct		106047	0					
ANR	106385	PtrMemberAccess	server -> tracker -> ct		106047	0					
ANR	106386	PtrMemberAccess	server -> tracker		106047	0					
ANR	106387	Identifier	server		106047	0					
ANR	106388	Identifier	tracker		106047	1					
ANR	106389	Identifier	ct		106047	1					
ANR	106390	Argument	ATTR_IPV6_SRC		106047	1					
ANR	106391	Identifier	ATTR_IPV6_SRC		106047	0					
ANR	106392	Argument	src -> sin6_addr . s6_addr		106047	2					
ANR	106393	MemberAccess	src -> sin6_addr . s6_addr		106047	0					
ANR	106394	PtrMemberAccess	src -> sin6_addr		106047	0					
ANR	106395	Identifier	src		106047	0					
ANR	106396	Identifier	sin6_addr		106047	1					
ANR	106397	Identifier	s6_addr		106047	1					
ANR	106398	ExpressionStatement	"nfct_set_attr_u16 ( server -> tracker -> ct , ATTR_PORT_DST , dst -> sin6_port )"	635:7:18485:18554	106047	5	True				
ANR	106399	CallExpression	"nfct_set_attr_u16 ( server -> tracker -> ct , ATTR_PORT_DST , dst -> sin6_port )"		106047	0					
ANR	106400	Callee	nfct_set_attr_u16		106047	0					
ANR	106401	Identifier	nfct_set_attr_u16		106047	0					
ANR	106402	ArgumentList	server -> tracker -> ct		106047	1					
ANR	106403	Argument	server -> tracker -> ct		106047	0					
ANR	106404	PtrMemberAccess	server -> tracker -> ct		106047	0					
ANR	106405	PtrMemberAccess	server -> tracker		106047	0					
ANR	106406	Identifier	server		106047	0					
ANR	106407	Identifier	tracker		106047	1					
ANR	106408	Identifier	ct		106047	1					
ANR	106409	Argument	ATTR_PORT_DST		106047	1					
ANR	106410	Identifier	ATTR_PORT_DST		106047	0					
ANR	106411	Argument	dst -> sin6_port		106047	2					
ANR	106412	PtrMemberAccess	dst -> sin6_port		106047	0					
ANR	106413	Identifier	dst		106047	0					
ANR	106414	Identifier	sin6_port		106047	1					
ANR	106415	ExpressionStatement	"nfct_set_attr_u16 ( server -> tracker -> ct , ATTR_PORT_SRC , src -> sin6_port )"	636:7:18563:18632	106047	6	True				
ANR	106416	CallExpression	"nfct_set_attr_u16 ( server -> tracker -> ct , ATTR_PORT_SRC , src -> sin6_port )"		106047	0					
ANR	106417	Callee	nfct_set_attr_u16		106047	0					
ANR	106418	Identifier	nfct_set_attr_u16		106047	0					
ANR	106419	ArgumentList	server -> tracker -> ct		106047	1					
ANR	106420	Argument	server -> tracker -> ct		106047	0					
ANR	106421	PtrMemberAccess	server -> tracker -> ct		106047	0					
ANR	106422	PtrMemberAccess	server -> tracker		106047	0					
ANR	106423	Identifier	server		106047	0					
ANR	106424	Identifier	tracker		106047	1					
ANR	106425	Identifier	ct		106047	1					
ANR	106426	Argument	ATTR_PORT_SRC		106047	1					
ANR	106427	Identifier	ATTR_PORT_SRC		106047	0					
ANR	106428	Argument	src -> sin6_port		106047	2					
ANR	106429	PtrMemberAccess	src -> sin6_port		106047	0					
ANR	106430	Identifier	src		106047	0					
ANR	106431	Identifier	sin6_port		106047	1					
ANR	106432	ExpressionStatement	"nfct_set_attr_u8 ( server -> tracker -> ct , ATTR_L4PROTO , IPPROTO_TCP )"	638:6:18648:18712	106047	1	True				
ANR	106433	CallExpression	"nfct_set_attr_u8 ( server -> tracker -> ct , ATTR_L4PROTO , IPPROTO_TCP )"		106047	0					
ANR	106434	Callee	nfct_set_attr_u8		106047	0					
ANR	106435	Identifier	nfct_set_attr_u8		106047	0					
ANR	106436	ArgumentList	server -> tracker -> ct		106047	1					
ANR	106437	Argument	server -> tracker -> ct		106047	0					
ANR	106438	PtrMemberAccess	server -> tracker -> ct		106047	0					
ANR	106439	PtrMemberAccess	server -> tracker		106047	0					
ANR	106440	Identifier	server		106047	0					
ANR	106441	Identifier	tracker		106047	1					
ANR	106442	Identifier	ct		106047	1					
ANR	106443	Argument	ATTR_L4PROTO		106047	1					
ANR	106444	Identifier	ATTR_L4PROTO		106047	0					
ANR	106445	Argument	IPPROTO_TCP		106047	2					
ANR	106446	Identifier	IPPROTO_TCP		106047	0					
ANR	106447	ExpressionStatement	conntrackQuery ( server )	639:6:18720:18742	106047	2	True				
ANR	106448	CallExpression	conntrackQuery ( server )		106047	0					
ANR	106449	Callee	conntrackQuery		106047	0					
ANR	106450	Identifier	conntrackQuery		106047	0					
ANR	106451	ArgumentList	server		106047	1					
ANR	106452	Argument	server		106047	0					
ANR	106453	Identifier	server		106047	0					
ANR	106454	ElseStatement	else		106047	0					
ANR	106455	CompoundStatement		40:12:1927:1927	106047	0					
ANR	106456	ExpressionStatement	"LOGE ( ""Failed to allocate new conntrack for upstream netfilter mark retrieval."" )"	641:6:18764:18843	106047	0	True				
ANR	106457	CallExpression	"LOGE ( ""Failed to allocate new conntrack for upstream netfilter mark retrieval."" )"		106047	0					
ANR	106458	Callee	LOGE		106047	0					
ANR	106459	Identifier	LOGE		106047	0					
ANR	106460	ArgumentList	"""Failed to allocate new conntrack for upstream netfilter mark retrieval."""		106047	1					
ANR	106461	Argument	"""Failed to allocate new conntrack for upstream netfilter mark retrieval."""		106047	0					
ANR	106462	PrimaryExpression	"""Failed to allocate new conntrack for upstream netfilter mark retrieval."""		106047	0					
ANR	106463	ExpressionStatement	server -> tracker -> ct = NULL	642:6:18851:18875	106047	1	True				
ANR	106464	AssignmentExpression	server -> tracker -> ct = NULL		106047	0		=			
ANR	106465	PtrMemberAccess	server -> tracker -> ct		106047	0					
ANR	106466	PtrMemberAccess	server -> tracker		106047	0					
ANR	106467	Identifier	server		106047	0					
ANR	106468	Identifier	tracker		106047	1					
ANR	106469	Identifier	ct		106047	1					
ANR	106470	Identifier	NULL		106047	1					
ANR	106471	ExpressionStatement		643:6:18883:18883	106047	1	True				
ANR	106472	ReturnType	void		106047	1					
ANR	106473	Identifier	setTosFromConnmark		106047	2					
ANR	106474	ParameterList	"remote_t * remote , server_t * server"		106047	3					
ANR	106475	Parameter	remote_t * remote	600:24:16792:16807	106047	0	True				
ANR	106476	ParameterType	remote_t *		106047	0					
ANR	106477	Identifier	remote		106047	1					
ANR	106478	Parameter	server_t * server	600:42:16810:16825	106047	1	True				
ANR	106479	ParameterType	server_t *		106047	0					
ANR	106480	Identifier	server		106047	1					
ANR	106481	CFGEntryNode	ENTRY		106047		True				
ANR	106482	CFGExitNode	EXIT		106047		True				
ANR	106483	Symbol	dst -> sin_addr		106047						
ANR	106484	Symbol	src -> sin6_port		106047						
ANR	106485	Symbol	ATTR_IPV6_SRC		106047						
ANR	106486	Symbol	& from_addr		106047						
ANR	106487	Symbol	remote		106047						
ANR	106488	Symbol	ATTR_IPV4_DST		106047						
ANR	106489	Symbol	* src		106047						
ANR	106490	Symbol	* dst		106047						
ANR	106491	Symbol	dst -> sin_port		106047						
ANR	106492	Symbol	len		106047						
ANR	106493	Symbol	IPPROTO_TCP		106047						
ANR	106494	Symbol	dst -> sin6_addr . s6_addr		106047						
ANR	106495	Symbol	from_addr . ss_family		106047						
ANR	106496	Symbol	from_addr		106047						
ANR	106497	Symbol	src -> sin_port		106047						
ANR	106498	Symbol	MARK_MAX_PACKET		106047						
ANR	106499	Symbol	NULL		106047						
ANR	106500	Symbol	getsockname		106047						
ANR	106501	Symbol	dst -> sin_addr . s_addr		106047						
ANR	106502	Symbol	AF_INET		106047						
ANR	106503	Symbol	src -> sin6_addr . s6_addr		106047						
ANR	106504	Symbol	* server -> tracker		106047						
ANR	106505	Symbol	server -> tracker -> mark		106047						
ANR	106506	Symbol	dst -> sin6_addr		106047						
ANR	106507	Symbol	server -> tracker -> ct		106047						
ANR	106508	Symbol	src -> sin_addr		106047						
ANR	106509	Symbol	& len		106047						
ANR	106510	Symbol	ATTR_PORT_SRC		106047						
ANR	106511	Symbol	server		106047						
ANR	106512	Symbol	* server		106047						
ANR	106513	Symbol	dst		106047						
ANR	106514	Symbol	ATTR_L4PROTO		106047						
ANR	106515	Symbol	sin		106047						
ANR	106516	Symbol	ATTR_L3PROTO		106047						
ANR	106517	Symbol	dst -> sin6_port		106047						
ANR	106518	Symbol	ATTR_PORT_DST		106047						
ANR	106519	Symbol	remote -> fd		106047						
ANR	106520	Symbol	src		106047						
ANR	106521	Symbol	ATTR_IPV6_DST		106047						
ANR	106522	Symbol	src -> sin_addr . s_addr		106047						
ANR	106523	Symbol	AF_INET6		106047						
ANR	106524	Symbol	getpeername		106047						
ANR	106525	Symbol	ATTR_IPV4_SRC		106047						
ANR	106526	Symbol	nfct_new		106047						
ANR	106527	Symbol	server -> tracker		106047						
ANR	106528	Symbol	& sin		106047						
ANR	106529	Symbol	ss_malloc		106047						
ANR	106530	Symbol	* * server		106047						
ANR	106531	Symbol	server -> tracker -> packet_count		106047						
ANR	106532	Symbol	src -> sin6_addr		106047						
ANR	106533	Symbol	* remote		106047						
ANR	106534	Function	server_recv_cb	651:0:18913:29344							
ANR	106535	FunctionDef	"server_recv_cb (EV_P_ ev_io * w , int revents)"		106534	0					
ANR	106536	CompoundStatement		653:0:18969:29344	106534	0					
ANR	106537	IdentifierDeclStatement	server_ctx_t * server_recv_ctx = ( server_ctx_t * ) w ;	654:4:18975:19024	106534	0	True				
ANR	106538	IdentifierDecl	* server_recv_ctx = ( server_ctx_t * ) w		106534	0					
ANR	106539	IdentifierDeclType	server_ctx_t *		106534	0					
ANR	106540	Identifier	server_recv_ctx		106534	1					
ANR	106541	AssignmentExpression	* server_recv_ctx = ( server_ctx_t * ) w		106534	2		=			
ANR	106542	Identifier	server_recv_ctx		106534	0					
ANR	106543	CastExpression	( server_ctx_t * ) w		106534	1					
ANR	106544	CastTarget	server_ctx_t *		106534	0					
ANR	106545	Identifier	w		106534	1					
ANR	106546	IdentifierDeclStatement	server_t * server = server_recv_ctx -> server ;	655:4:19030:19085	106534	1	True				
ANR	106547	IdentifierDecl	* server = server_recv_ctx -> server		106534	0					
ANR	106548	IdentifierDeclType	server_t *		106534	0					
ANR	106549	Identifier	server		106534	1					
ANR	106550	AssignmentExpression	* server = server_recv_ctx -> server		106534	2		=			
ANR	106551	Identifier	server		106534	0					
ANR	106552	PtrMemberAccess	server_recv_ctx -> server		106534	1					
ANR	106553	Identifier	server_recv_ctx		106534	0					
ANR	106554	Identifier	server		106534	1					
ANR	106555	IdentifierDeclStatement	remote_t * remote = NULL ;	656:4:19091:19127	106534	2	True				
ANR	106556	IdentifierDecl	* remote = NULL		106534	0					
ANR	106557	IdentifierDeclType	remote_t *		106534	0					
ANR	106558	Identifier	remote		106534	1					
ANR	106559	AssignmentExpression	* remote = NULL		106534	2		=			
ANR	106560	Identifier	NULL		106534	0					
ANR	106561	Identifier	NULL		106534	1					
ANR	106562	IdentifierDeclStatement	buffer_t * buf = server -> buf ;	658:4:19134:19161	106534	3	True				
ANR	106563	IdentifierDecl	* buf = server -> buf		106534	0					
ANR	106564	IdentifierDeclType	buffer_t *		106534	0					
ANR	106565	Identifier	buf		106534	1					
ANR	106566	AssignmentExpression	* buf = server -> buf		106534	2		=			
ANR	106567	Identifier	buf		106534	0					
ANR	106568	PtrMemberAccess	server -> buf		106534	1					
ANR	106569	Identifier	server		106534	0					
ANR	106570	Identifier	buf		106534	1					
ANR	106571	IfStatement	if ( server -> stage == STAGE_STREAM )		106534	4					
ANR	106572	Condition	server -> stage == STAGE_STREAM	660:8:19172:19200	106534	0	True				
ANR	106573	EqualityExpression	server -> stage == STAGE_STREAM		106534	0		==			
ANR	106574	PtrMemberAccess	server -> stage		106534	0					
ANR	106575	Identifier	server		106534	0					
ANR	106576	Identifier	stage		106534	1					
ANR	106577	Identifier	STAGE_STREAM		106534	1					
ANR	106578	CompoundStatement		8:39:233:233	106534	1					
ANR	106579	ExpressionStatement	remote = server -> remote	661:8:19213:19236	106534	0	True				
ANR	106580	AssignmentExpression	remote = server -> remote		106534	0		=			
ANR	106581	Identifier	remote		106534	0					
ANR	106582	PtrMemberAccess	server -> remote		106534	1					
ANR	106583	Identifier	server		106534	0					
ANR	106584	Identifier	remote		106534	1					
ANR	106585	ExpressionStatement	buf = remote -> buf	662:8:19246:19266	106534	1	True				
ANR	106586	AssignmentExpression	buf = remote -> buf		106534	0		=			
ANR	106587	Identifier	buf		106534	0					
ANR	106588	PtrMemberAccess	remote -> buf		106534	1					
ANR	106589	Identifier	remote		106534	0					
ANR	106590	Identifier	buf		106534	1					
ANR	106591	ExpressionStatement	ev_timer_again ( EV_A_ & server -> recv_ctx -> watcher )	664:8:19277:19326	106534	2	True				
ANR	106592	CallExpression	ev_timer_again ( EV_A_ & server -> recv_ctx -> watcher )		106534	0					
ANR	106593	Callee	ev_timer_again		106534	0					
ANR	106594	Identifier	ev_timer_again		106534	0					
ANR	106595	ArgumentList	EV_A_ & server -> recv_ctx -> watcher		106534	1					
ANR	106596	Argument	EV_A_ & server -> recv_ctx -> watcher		106534	0					
ANR	106597	BitAndExpression	EV_A_ & server -> recv_ctx -> watcher		106534	0		&			
ANR	106598	Identifier	EV_A_		106534	0					
ANR	106599	PtrMemberAccess	server -> recv_ctx -> watcher		106534	1					
ANR	106600	PtrMemberAccess	server -> recv_ctx		106534	0					
ANR	106601	Identifier	server		106534	0					
ANR	106602	Identifier	recv_ctx		106534	1					
ANR	106603	Identifier	watcher		106534	1					
ANR	106604	IdentifierDeclStatement	"ssize_t r = recv ( server -> fd , buf -> data , BUF_SIZE , 0 ) ;"	667:4:19339:19391	106534	5	True				
ANR	106605	IdentifierDecl	"r = recv ( server -> fd , buf -> data , BUF_SIZE , 0 )"		106534	0					
ANR	106606	IdentifierDeclType	ssize_t		106534	0					
ANR	106607	Identifier	r		106534	1					
ANR	106608	AssignmentExpression	"r = recv ( server -> fd , buf -> data , BUF_SIZE , 0 )"		106534	2		=			
ANR	106609	Identifier	r		106534	0					
ANR	106610	CallExpression	"recv ( server -> fd , buf -> data , BUF_SIZE , 0 )"		106534	1					
ANR	106611	Callee	recv		106534	0					
ANR	106612	Identifier	recv		106534	0					
ANR	106613	ArgumentList	server -> fd		106534	1					
ANR	106614	Argument	server -> fd		106534	0					
ANR	106615	PtrMemberAccess	server -> fd		106534	0					
ANR	106616	Identifier	server		106534	0					
ANR	106617	Identifier	fd		106534	1					
ANR	106618	Argument	buf -> data		106534	1					
ANR	106619	PtrMemberAccess	buf -> data		106534	0					
ANR	106620	Identifier	buf		106534	0					
ANR	106621	Identifier	data		106534	1					
ANR	106622	Argument	BUF_SIZE		106534	2					
ANR	106623	Identifier	BUF_SIZE		106534	0					
ANR	106624	Argument	0		106534	3					
ANR	106625	PrimaryExpression	0		106534	0					
ANR	106626	IfStatement	if ( r == 0 )		106534	6					
ANR	106627	Condition	r == 0	669:8:19402:19407	106534	0	True				
ANR	106628	EqualityExpression	r == 0		106534	0		==			
ANR	106629	Identifier	r		106534	0					
ANR	106630	PrimaryExpression	0		106534	1					
ANR	106631	CompoundStatement		17:16:440:440	106534	1					
ANR	106632	IfStatement	if ( verbose )		106534	0					
ANR	106633	Condition	verbose	671:12:19453:19459	106534	0	True				
ANR	106634	Identifier	verbose		106534	0					
ANR	106635	CompoundStatement		19:21:492:492	106534	1					
ANR	106636	ExpressionStatement	"LOGI ( ""server_recv close the connection"" )"	672:12:19476:19516	106534	0	True				
ANR	106637	CallExpression	"LOGI ( ""server_recv close the connection"" )"		106534	0					
ANR	106638	Callee	LOGI		106534	0					
ANR	106639	Identifier	LOGI		106534	0					
ANR	106640	ArgumentList	"""server_recv close the connection"""		106534	1					
ANR	106641	Argument	"""server_recv close the connection"""		106534	0					
ANR	106642	PrimaryExpression	"""server_recv close the connection"""		106534	0					
ANR	106643	Statement	close_and_free_remote	674:8:19536:19556	106534	1	True				
ANR	106644	Statement	(	674:29:19557:19557	106534	2	True				
ANR	106645	Statement	EV_A_	674:30:19558:19562	106534	3	True				
ANR	106646	Statement	remote	674:36:19564:19569	106534	4	True				
ANR	106647	Statement	)	674:42:19570:19570	106534	5	True				
ANR	106648	ExpressionStatement		674:43:19571:19571	106534	6	True				
ANR	106649	Statement	close_and_free_server	675:8:19581:19601	106534	7	True				
ANR	106650	Statement	(	675:29:19602:19602	106534	8	True				
ANR	106651	Statement	EV_A_	675:30:19603:19607	106534	9	True				
ANR	106652	Statement	server	675:36:19609:19614	106534	10	True				
ANR	106653	Statement	)	675:42:19615:19615	106534	11	True				
ANR	106654	ExpressionStatement		675:43:19616:19616	106534	12	True				
ANR	106655	ReturnStatement	return ;	676:8:19626:19632	106534	13	True				
ANR	106656	ElseStatement	else		106534	0					
ANR	106657	IfStatement	if ( r == - 1 )		106534	0					
ANR	106658	Condition	r == - 1	677:15:19649:19655	106534	0	True				
ANR	106659	EqualityExpression	r == - 1		106534	0		==			
ANR	106660	Identifier	r		106534	0					
ANR	106661	UnaryOperationExpression	- 1		106534	1					
ANR	106662	UnaryOperator	-		106534	0					
ANR	106663	PrimaryExpression	1		106534	1					
ANR	106664	CompoundStatement		25:24:688:688	106534	1					
ANR	106665	IfStatement	if ( errno == EAGAIN || errno == EWOULDBLOCK )		106534	0					
ANR	106666	Condition	errno == EAGAIN || errno == EWOULDBLOCK	678:12:19672:19710	106534	0	True				
ANR	106667	OrExpression	errno == EAGAIN || errno == EWOULDBLOCK		106534	0		||			
ANR	106668	EqualityExpression	errno == EAGAIN		106534	0		==			
ANR	106669	Identifier	errno		106534	0					
ANR	106670	Identifier	EAGAIN		106534	1					
ANR	106671	EqualityExpression	errno == EWOULDBLOCK		106534	1		==			
ANR	106672	Identifier	errno		106534	0					
ANR	106673	Identifier	EWOULDBLOCK		106534	1					
ANR	106674	CompoundStatement		26:53:743:743	106534	1					
ANR	106675	ReturnStatement	return ;	681:12:19791:19797	106534	0	True				
ANR	106676	ElseStatement	else		106534	0					
ANR	106677	CompoundStatement		30:15:844:844	106534	0					
ANR	106678	ExpressionStatement	"ERROR ( ""server recv"" )"	683:12:19828:19848	106534	0	True				
ANR	106679	CallExpression	"ERROR ( ""server recv"" )"		106534	0					
ANR	106680	Callee	ERROR		106534	0					
ANR	106681	Identifier	ERROR		106534	0					
ANR	106682	ArgumentList	"""server recv"""		106534	1					
ANR	106683	Argument	"""server recv"""		106534	0					
ANR	106684	PrimaryExpression	"""server recv"""		106534	0					
ANR	106685	Statement	close_and_free_remote	684:12:19862:19882	106534	1	True				
ANR	106686	Statement	(	684:33:19883:19883	106534	2	True				
ANR	106687	Statement	EV_A_	684:34:19884:19888	106534	3	True				
ANR	106688	Statement	remote	684:40:19890:19895	106534	4	True				
ANR	106689	Statement	)	684:46:19896:19896	106534	5	True				
ANR	106690	ExpressionStatement		684:47:19897:19897	106534	6	True				
ANR	106691	Statement	close_and_free_server	685:12:19911:19931	106534	7	True				
ANR	106692	Statement	(	685:33:19932:19932	106534	8	True				
ANR	106693	Statement	EV_A_	685:34:19933:19937	106534	9	True				
ANR	106694	Statement	server	685:40:19939:19944	106534	10	True				
ANR	106695	Statement	)	685:46:19945:19945	106534	11	True				
ANR	106696	ExpressionStatement		685:47:19946:19946	106534	12	True				
ANR	106697	ReturnStatement	return ;	686:12:19960:19966	106534	13	True				
ANR	106698	ExpressionStatement	tx += r	690:4:19989:19996	106534	7	True				
ANR	106699	AssignmentExpression	tx += r		106534	0		+=			
ANR	106700	Identifier	tx		106534	0					
ANR	106701	Identifier	r		106534	1					
ANR	106702	ExpressionStatement	buf -> len = r	691:4:20002:20014	106534	8	True				
ANR	106703	AssignmentExpression	buf -> len = r		106534	0		=			
ANR	106704	PtrMemberAccess	buf -> len		106534	0					
ANR	106705	Identifier	buf		106534	0					
ANR	106706	Identifier	len		106534	1					
ANR	106707	Identifier	r		106534	1					
ANR	106708	IdentifierDeclStatement	"int err = crypto -> decrypt ( buf , server -> d_ctx , BUF_SIZE ) ;"	693:4:20021:20076	106534	9	True				
ANR	106709	IdentifierDecl	"err = crypto -> decrypt ( buf , server -> d_ctx , BUF_SIZE )"		106534	0					
ANR	106710	IdentifierDeclType	int		106534	0					
ANR	106711	Identifier	err		106534	1					
ANR	106712	AssignmentExpression	"err = crypto -> decrypt ( buf , server -> d_ctx , BUF_SIZE )"		106534	2		=			
ANR	106713	Identifier	err		106534	0					
ANR	106714	CallExpression	"crypto -> decrypt ( buf , server -> d_ctx , BUF_SIZE )"		106534	1					
ANR	106715	Callee	crypto -> decrypt		106534	0					
ANR	106716	PtrMemberAccess	crypto -> decrypt		106534	0					
ANR	106717	Identifier	crypto		106534	0					
ANR	106718	Identifier	decrypt		106534	1					
ANR	106719	ArgumentList	buf		106534	1					
ANR	106720	Argument	buf		106534	0					
ANR	106721	Identifier	buf		106534	0					
ANR	106722	Argument	server -> d_ctx		106534	1					
ANR	106723	PtrMemberAccess	server -> d_ctx		106534	0					
ANR	106724	Identifier	server		106534	0					
ANR	106725	Identifier	d_ctx		106534	1					
ANR	106726	Argument	BUF_SIZE		106534	2					
ANR	106727	Identifier	BUF_SIZE		106534	0					
ANR	106728	IfStatement	if ( err == CRYPTO_ERROR )		106534	10					
ANR	106729	Condition	err == CRYPTO_ERROR	695:8:20087:20105	106534	0	True				
ANR	106730	EqualityExpression	err == CRYPTO_ERROR		106534	0		==			
ANR	106731	Identifier	err		106534	0					
ANR	106732	Identifier	CRYPTO_ERROR		106534	1					
ANR	106733	CompoundStatement		43:29:1138:1138	106534	1					
ANR	106734	ExpressionStatement	"report_addr ( server -> fd , MALICIOUS , ""authentication error"" )"	696:8:20118:20176	106534	0	True				
ANR	106735	CallExpression	"report_addr ( server -> fd , MALICIOUS , ""authentication error"" )"		106534	0					
ANR	106736	Callee	report_addr		106534	0					
ANR	106737	Identifier	report_addr		106534	0					
ANR	106738	ArgumentList	server -> fd		106534	1					
ANR	106739	Argument	server -> fd		106534	0					
ANR	106740	PtrMemberAccess	server -> fd		106534	0					
ANR	106741	Identifier	server		106534	0					
ANR	106742	Identifier	fd		106534	1					
ANR	106743	Argument	MALICIOUS		106534	1					
ANR	106744	Identifier	MALICIOUS		106534	0					
ANR	106745	Argument	"""authentication error"""		106534	2					
ANR	106746	PrimaryExpression	"""authentication error"""		106534	0					
ANR	106747	Statement	close_and_free_remote	697:8:20186:20206	106534	1	True				
ANR	106748	Statement	(	697:29:20207:20207	106534	2	True				
ANR	106749	Statement	EV_A_	697:30:20208:20212	106534	3	True				
ANR	106750	Statement	remote	697:36:20214:20219	106534	4	True				
ANR	106751	Statement	)	697:42:20220:20220	106534	5	True				
ANR	106752	ExpressionStatement		697:43:20221:20221	106534	6	True				
ANR	106753	Statement	close_and_free_server	698:8:20231:20251	106534	7	True				
ANR	106754	Statement	(	698:29:20252:20252	106534	8	True				
ANR	106755	Statement	EV_A_	698:30:20253:20257	106534	9	True				
ANR	106756	Statement	server	698:36:20259:20264	106534	10	True				
ANR	106757	Statement	)	698:42:20265:20265	106534	11	True				
ANR	106758	ExpressionStatement		698:43:20266:20266	106534	12	True				
ANR	106759	ReturnStatement	return ;	699:8:20276:20282	106534	13	True				
ANR	106760	ElseStatement	else		106534	0					
ANR	106761	IfStatement	if ( err == CRYPTO_NEED_MORE )		106534	0					
ANR	106762	Condition	err == CRYPTO_NEED_MORE	700:15:20299:20321	106534	0	True				
ANR	106763	EqualityExpression	err == CRYPTO_NEED_MORE		106534	0		==			
ANR	106764	Identifier	err		106534	0					
ANR	106765	Identifier	CRYPTO_NEED_MORE		106534	1					
ANR	106766	CompoundStatement		48:40:1354:1354	106534	1					
ANR	106767	IfStatement	if ( server -> stage != STAGE_STREAM && server -> frag > MAX_FRAG )		106534	0					
ANR	106768	Condition	server -> stage != STAGE_STREAM && server -> frag > MAX_FRAG	701:12:20338:20393	106534	0	True				
ANR	106769	AndExpression	server -> stage != STAGE_STREAM && server -> frag > MAX_FRAG		106534	0		&&			
ANR	106770	EqualityExpression	server -> stage != STAGE_STREAM		106534	0		!=			
ANR	106771	PtrMemberAccess	server -> stage		106534	0					
ANR	106772	Identifier	server		106534	0					
ANR	106773	Identifier	stage		106534	1					
ANR	106774	Identifier	STAGE_STREAM		106534	1					
ANR	106775	RelationalExpression	server -> frag > MAX_FRAG		106534	1		>			
ANR	106776	PtrMemberAccess	server -> frag		106534	0					
ANR	106777	Identifier	server		106534	0					
ANR	106778	Identifier	frag		106534	1					
ANR	106779	Identifier	MAX_FRAG		106534	1					
ANR	106780	CompoundStatement		49:70:1426:1426	106534	1					
ANR	106781	ExpressionStatement	"report_addr ( server -> fd , MALICIOUS , ""malicious fragmentation"" )"	702:12:20410:20471	106534	0	True				
ANR	106782	CallExpression	"report_addr ( server -> fd , MALICIOUS , ""malicious fragmentation"" )"		106534	0					
ANR	106783	Callee	report_addr		106534	0					
ANR	106784	Identifier	report_addr		106534	0					
ANR	106785	ArgumentList	server -> fd		106534	1					
ANR	106786	Argument	server -> fd		106534	0					
ANR	106787	PtrMemberAccess	server -> fd		106534	0					
ANR	106788	Identifier	server		106534	0					
ANR	106789	Identifier	fd		106534	1					
ANR	106790	Argument	MALICIOUS		106534	1					
ANR	106791	Identifier	MALICIOUS		106534	0					
ANR	106792	Argument	"""malicious fragmentation"""		106534	2					
ANR	106793	PrimaryExpression	"""malicious fragmentation"""		106534	0					
ANR	106794	Statement	close_and_free_remote	703:12:20485:20505	106534	1	True				
ANR	106795	Statement	(	703:33:20506:20506	106534	2	True				
ANR	106796	Statement	EV_A_	703:34:20507:20511	106534	3	True				
ANR	106797	Statement	remote	703:40:20513:20518	106534	4	True				
ANR	106798	Statement	)	703:46:20519:20519	106534	5	True				
ANR	106799	ExpressionStatement		703:47:20520:20520	106534	6	True				
ANR	106800	Statement	close_and_free_server	704:12:20534:20554	106534	7	True				
ANR	106801	Statement	(	704:33:20555:20555	106534	8	True				
ANR	106802	Statement	EV_A_	704:34:20556:20560	106534	9	True				
ANR	106803	Statement	server	704:40:20562:20567	106534	10	True				
ANR	106804	Statement	)	704:46:20568:20568	106534	11	True				
ANR	106805	ExpressionStatement		704:47:20569:20569	106534	12	True				
ANR	106806	ReturnStatement	return ;	705:12:20583:20589	106534	13	True				
ANR	106807	ExpressionStatement	server -> frag ++	707:8:20609:20623	106534	1	True				
ANR	106808	PostIncDecOperationExpression	server -> frag ++		106534	0					
ANR	106809	PtrMemberAccess	server -> frag		106534	0					
ANR	106810	Identifier	server		106534	0					
ANR	106811	Identifier	frag		106534	1					
ANR	106812	IncDec	++		106534	1					
ANR	106813	ReturnStatement	return ;	708:8:20633:20639	106534	2	True				
ANR	106814	IfStatement	if ( server -> stage == STAGE_STREAM )		106534	11					
ANR	106815	Condition	server -> stage == STAGE_STREAM	712:8:20691:20719	106534	0	True				
ANR	106816	EqualityExpression	server -> stage == STAGE_STREAM		106534	0		==			
ANR	106817	PtrMemberAccess	server -> stage		106534	0					
ANR	106818	Identifier	server		106534	0					
ANR	106819	Identifier	stage		106534	1					
ANR	106820	Identifier	STAGE_STREAM		106534	1					
ANR	106821	CompoundStatement		61:8:1762:1826	106534	1					
ANR	106822	IdentifierDeclStatement	"int s = send ( remote -> fd , remote -> buf -> data , remote -> buf -> len , 0 ) ;"	713:8:20732:20796	106534	0	True				
ANR	106823	IdentifierDecl	"s = send ( remote -> fd , remote -> buf -> data , remote -> buf -> len , 0 )"		106534	0					
ANR	106824	IdentifierDeclType	int		106534	0					
ANR	106825	Identifier	s		106534	1					
ANR	106826	AssignmentExpression	"s = send ( remote -> fd , remote -> buf -> data , remote -> buf -> len , 0 )"		106534	2		=			
ANR	106827	Identifier	s		106534	0					
ANR	106828	CallExpression	"send ( remote -> fd , remote -> buf -> data , remote -> buf -> len , 0 )"		106534	1					
ANR	106829	Callee	send		106534	0					
ANR	106830	Identifier	send		106534	0					
ANR	106831	ArgumentList	remote -> fd		106534	1					
ANR	106832	Argument	remote -> fd		106534	0					
ANR	106833	PtrMemberAccess	remote -> fd		106534	0					
ANR	106834	Identifier	remote		106534	0					
ANR	106835	Identifier	fd		106534	1					
ANR	106836	Argument	remote -> buf -> data		106534	1					
ANR	106837	PtrMemberAccess	remote -> buf -> data		106534	0					
ANR	106838	PtrMemberAccess	remote -> buf		106534	0					
ANR	106839	Identifier	remote		106534	0					
ANR	106840	Identifier	buf		106534	1					
ANR	106841	Identifier	data		106534	1					
ANR	106842	Argument	remote -> buf -> len		106534	2					
ANR	106843	PtrMemberAccess	remote -> buf -> len		106534	0					
ANR	106844	PtrMemberAccess	remote -> buf		106534	0					
ANR	106845	Identifier	remote		106534	0					
ANR	106846	Identifier	buf		106534	1					
ANR	106847	Identifier	len		106534	1					
ANR	106848	Argument	0		106534	3					
ANR	106849	PrimaryExpression	0		106534	0					
ANR	106850	IfStatement	if ( s == - 1 )		106534	1					
ANR	106851	Condition	s == - 1	714:12:20810:20816	106534	0	True				
ANR	106852	EqualityExpression	s == - 1		106534	0		==			
ANR	106853	Identifier	s		106534	0					
ANR	106854	UnaryOperationExpression	- 1		106534	1					
ANR	106855	UnaryOperator	-		106534	0					
ANR	106856	PrimaryExpression	1		106534	1					
ANR	106857	CompoundStatement		62:21:1849:1849	106534	1					
ANR	106858	IfStatement	if ( errno == EAGAIN || errno == EWOULDBLOCK )		106534	0					
ANR	106859	Condition	errno == EAGAIN || errno == EWOULDBLOCK	715:16:20837:20875	106534	0	True				
ANR	106860	OrExpression	errno == EAGAIN || errno == EWOULDBLOCK		106534	0		||			
ANR	106861	EqualityExpression	errno == EAGAIN		106534	0		==			
ANR	106862	Identifier	errno		106534	0					
ANR	106863	Identifier	EAGAIN		106534	1					
ANR	106864	EqualityExpression	errno == EWOULDBLOCK		106534	1		==			
ANR	106865	Identifier	errno		106534	0					
ANR	106866	Identifier	EWOULDBLOCK		106534	1					
ANR	106867	CompoundStatement		63:57:1908:1908	106534	1					
ANR	106868	ExpressionStatement	remote -> buf -> idx = 0	717:16:20938:20958	106534	0	True				
ANR	106869	AssignmentExpression	remote -> buf -> idx = 0		106534	0		=			
ANR	106870	PtrMemberAccess	remote -> buf -> idx		106534	0					
ANR	106871	PtrMemberAccess	remote -> buf		106534	0					
ANR	106872	Identifier	remote		106534	0					
ANR	106873	Identifier	buf		106534	1					
ANR	106874	Identifier	idx		106534	1					
ANR	106875	PrimaryExpression	0		106534	1					
ANR	106876	ExpressionStatement	ev_io_stop ( EV_A_ & server_recv_ctx -> io )	718:16:20976:21015	106534	1	True				
ANR	106877	CallExpression	ev_io_stop ( EV_A_ & server_recv_ctx -> io )		106534	0					
ANR	106878	Callee	ev_io_stop		106534	0					
ANR	106879	Identifier	ev_io_stop		106534	0					
ANR	106880	ArgumentList	EV_A_ & server_recv_ctx -> io		106534	1					
ANR	106881	Argument	EV_A_ & server_recv_ctx -> io		106534	0					
ANR	106882	BitAndExpression	EV_A_ & server_recv_ctx -> io		106534	0		&			
ANR	106883	Identifier	EV_A_		106534	0					
ANR	106884	PtrMemberAccess	server_recv_ctx -> io		106534	1					
ANR	106885	Identifier	server_recv_ctx		106534	0					
ANR	106886	Identifier	io		106534	1					
ANR	106887	ExpressionStatement	ev_io_start ( EV_A_ & remote -> send_ctx -> io )	719:16:21033:21074	106534	2	True				
ANR	106888	CallExpression	ev_io_start ( EV_A_ & remote -> send_ctx -> io )		106534	0					
ANR	106889	Callee	ev_io_start		106534	0					
ANR	106890	Identifier	ev_io_start		106534	0					
ANR	106891	ArgumentList	EV_A_ & remote -> send_ctx -> io		106534	1					
ANR	106892	Argument	EV_A_ & remote -> send_ctx -> io		106534	0					
ANR	106893	BitAndExpression	EV_A_ & remote -> send_ctx -> io		106534	0		&			
ANR	106894	Identifier	EV_A_		106534	0					
ANR	106895	PtrMemberAccess	remote -> send_ctx -> io		106534	1					
ANR	106896	PtrMemberAccess	remote -> send_ctx		106534	0					
ANR	106897	Identifier	remote		106534	0					
ANR	106898	Identifier	send_ctx		106534	1					
ANR	106899	Identifier	io		106534	1					
ANR	106900	ElseStatement	else		106534	0					
ANR	106901	CompoundStatement		68:19:2125:2125	106534	0					
ANR	106902	ExpressionStatement	"ERROR ( ""server_recv_send"" )"	721:16:21113:21138	106534	0	True				
ANR	106903	CallExpression	"ERROR ( ""server_recv_send"" )"		106534	0					
ANR	106904	Callee	ERROR		106534	0					
ANR	106905	Identifier	ERROR		106534	0					
ANR	106906	ArgumentList	"""server_recv_send"""		106534	1					
ANR	106907	Argument	"""server_recv_send"""		106534	0					
ANR	106908	PrimaryExpression	"""server_recv_send"""		106534	0					
ANR	106909	Statement	close_and_free_remote	722:16:21156:21176	106534	1	True				
ANR	106910	Statement	(	722:37:21177:21177	106534	2	True				
ANR	106911	Statement	EV_A_	722:38:21178:21182	106534	3	True				
ANR	106912	Statement	remote	722:44:21184:21189	106534	4	True				
ANR	106913	Statement	)	722:50:21190:21190	106534	5	True				
ANR	106914	ExpressionStatement		722:51:21191:21191	106534	6	True				
ANR	106915	Statement	close_and_free_server	723:16:21209:21229	106534	7	True				
ANR	106916	Statement	(	723:37:21230:21230	106534	8	True				
ANR	106917	Statement	EV_A_	723:38:21231:21235	106534	9	True				
ANR	106918	Statement	server	723:44:21237:21242	106534	10	True				
ANR	106919	Statement	)	723:50:21243:21243	106534	11	True				
ANR	106920	ExpressionStatement		723:51:21244:21244	106534	12	True				
ANR	106921	ElseStatement	else		106534	0					
ANR	106922	IfStatement	if ( s < remote -> buf -> len )		106534	0					
ANR	106923	Condition	s < remote -> buf -> len	725:19:21279:21298	106534	0	True				
ANR	106924	RelationalExpression	s < remote -> buf -> len		106534	0		<			
ANR	106925	Identifier	s		106534	0					
ANR	106926	PtrMemberAccess	remote -> buf -> len		106534	1					
ANR	106927	PtrMemberAccess	remote -> buf		106534	0					
ANR	106928	Identifier	remote		106534	0					
ANR	106929	Identifier	buf		106534	1					
ANR	106930	Identifier	len		106534	1					
ANR	106931	CompoundStatement		73:41:2331:2331	106534	1					
ANR	106932	ExpressionStatement	remote -> buf -> len -= s	726:12:21315:21336	106534	0	True				
ANR	106933	AssignmentExpression	remote -> buf -> len -= s		106534	0		-=			
ANR	106934	PtrMemberAccess	remote -> buf -> len		106534	0					
ANR	106935	PtrMemberAccess	remote -> buf		106534	0					
ANR	106936	Identifier	remote		106534	0					
ANR	106937	Identifier	buf		106534	1					
ANR	106938	Identifier	len		106534	1					
ANR	106939	Identifier	s		106534	1					
ANR	106940	ExpressionStatement	remote -> buf -> idx = s	727:12:21350:21371	106534	1	True				
ANR	106941	AssignmentExpression	remote -> buf -> idx = s		106534	0		=			
ANR	106942	PtrMemberAccess	remote -> buf -> idx		106534	0					
ANR	106943	PtrMemberAccess	remote -> buf		106534	0					
ANR	106944	Identifier	remote		106534	0					
ANR	106945	Identifier	buf		106534	1					
ANR	106946	Identifier	idx		106534	1					
ANR	106947	Identifier	s		106534	1					
ANR	106948	ExpressionStatement	ev_io_stop ( EV_A_ & server_recv_ctx -> io )	728:12:21385:21424	106534	2	True				
ANR	106949	CallExpression	ev_io_stop ( EV_A_ & server_recv_ctx -> io )		106534	0					
ANR	106950	Callee	ev_io_stop		106534	0					
ANR	106951	Identifier	ev_io_stop		106534	0					
ANR	106952	ArgumentList	EV_A_ & server_recv_ctx -> io		106534	1					
ANR	106953	Argument	EV_A_ & server_recv_ctx -> io		106534	0					
ANR	106954	BitAndExpression	EV_A_ & server_recv_ctx -> io		106534	0		&			
ANR	106955	Identifier	EV_A_		106534	0					
ANR	106956	PtrMemberAccess	server_recv_ctx -> io		106534	1					
ANR	106957	Identifier	server_recv_ctx		106534	0					
ANR	106958	Identifier	io		106534	1					
ANR	106959	ExpressionStatement	ev_io_start ( EV_A_ & remote -> send_ctx -> io )	729:12:21438:21479	106534	3	True				
ANR	106960	CallExpression	ev_io_start ( EV_A_ & remote -> send_ctx -> io )		106534	0					
ANR	106961	Callee	ev_io_start		106534	0					
ANR	106962	Identifier	ev_io_start		106534	0					
ANR	106963	ArgumentList	EV_A_ & remote -> send_ctx -> io		106534	1					
ANR	106964	Argument	EV_A_ & remote -> send_ctx -> io		106534	0					
ANR	106965	BitAndExpression	EV_A_ & remote -> send_ctx -> io		106534	0		&			
ANR	106966	Identifier	EV_A_		106534	0					
ANR	106967	PtrMemberAccess	remote -> send_ctx -> io		106534	1					
ANR	106968	PtrMemberAccess	remote -> send_ctx		106534	0					
ANR	106969	Identifier	remote		106534	0					
ANR	106970	Identifier	send_ctx		106534	1					
ANR	106971	Identifier	io		106534	1					
ANR	106972	ReturnStatement	return ;	731:8:21499:21505	106534	2	True				
ANR	106973	ElseStatement	else		106534	0					
ANR	106974	IfStatement	if ( server -> stage == STAGE_INIT )		106534	0					
ANR	106975	Condition	server -> stage == STAGE_INIT	732:15:21522:21548	106534	0	True				
ANR	106976	EqualityExpression	server -> stage == STAGE_INIT		106534	0		==			
ANR	106977	PtrMemberAccess	server -> stage		106534	0					
ANR	106978	Identifier	server		106534	0					
ANR	106979	Identifier	stage		106534	1					
ANR	106980	Identifier	STAGE_INIT		106534	1					
ANR	106981	CompoundStatement		98:8:3103:3134	106534	1					
ANR	106982	IdentifierDeclStatement	int offset = 0 ;	744:8:21873:21891	106534	0	True				
ANR	106983	IdentifierDecl	offset = 0		106534	0					
ANR	106984	IdentifierDeclType	int		106534	0					
ANR	106985	Identifier	offset		106534	1					
ANR	106986	AssignmentExpression	offset = 0		106534	2		=			
ANR	106987	Identifier	offset		106534	0					
ANR	106988	PrimaryExpression	0		106534	1					
ANR	106989	IdentifierDeclStatement	int need_query = 0 ;	745:8:21901:21919	106534	1	True				
ANR	106990	IdentifierDecl	need_query = 0		106534	0					
ANR	106991	IdentifierDeclType	int		106534	0					
ANR	106992	Identifier	need_query		106534	1					
ANR	106993	AssignmentExpression	need_query = 0		106534	2		=			
ANR	106994	Identifier	need_query		106534	0					
ANR	106995	PrimaryExpression	0		106534	1					
ANR	106996	IdentifierDeclStatement	char atyp = server -> buf -> data [ offset ++ ] ;	746:8:21929:21973	106534	2	True				
ANR	106997	IdentifierDecl	atyp = server -> buf -> data [ offset ++ ]		106534	0					
ANR	106998	IdentifierDeclType	char		106534	0					
ANR	106999	Identifier	atyp		106534	1					
ANR	107000	AssignmentExpression	atyp = server -> buf -> data [ offset ++ ]		106534	2		=			
ANR	107001	Identifier	atyp		106534	0					
ANR	107002	ArrayIndexing	server -> buf -> data [ offset ++ ]		106534	1					
ANR	107003	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107004	PtrMemberAccess	server -> buf		106534	0					
ANR	107005	Identifier	server		106534	0					
ANR	107006	Identifier	buf		106534	1					
ANR	107007	Identifier	data		106534	1					
ANR	107008	PostIncDecOperationExpression	offset ++		106534	1					
ANR	107009	Identifier	offset		106534	0					
ANR	107010	IncDec	++		106534	1					
ANR	107011	IdentifierDeclStatement	char host [ 257 ] = { 0 } ;	747:8:21983:22005	106534	3	True				
ANR	107012	IdentifierDecl	host [ 257 ] = { 0 }		106534	0					
ANR	107013	IdentifierDeclType	char [ 257 ]		106534	0					
ANR	107014	Identifier	host		106534	1					
ANR	107015	PrimaryExpression	257		106534	2					
ANR	107016	AssignmentExpression	host [ 257 ] = { 0 }		106534	3		=			
ANR	107017	Identifier	host		106534	0					
ANR	107018	InitializerList	0		106534	1					
ANR	107019	PrimaryExpression	0		106534	0					
ANR	107020	IdentifierDeclStatement	uint16_t port = 0 ;	748:8:22015:22033	106534	4	True				
ANR	107021	IdentifierDecl	port = 0		106534	0					
ANR	107022	IdentifierDeclType	uint16_t		106534	0					
ANR	107023	Identifier	port		106534	1					
ANR	107024	AssignmentExpression	port = 0		106534	2		=			
ANR	107025	Identifier	port		106534	0					
ANR	107026	PrimaryExpression	0		106534	1					
ANR	107027	IdentifierDeclStatement	struct addrinfo info ;	749:8:22043:22063	106534	5	True				
ANR	107028	IdentifierDecl	info		106534	0					
ANR	107029	IdentifierDeclType	struct addrinfo		106534	0					
ANR	107030	Identifier	info		106534	1					
ANR	107031	IdentifierDeclStatement	struct sockaddr_storage storage ;	750:8:22073:22104	106534	6	True				
ANR	107032	IdentifierDecl	storage		106534	0					
ANR	107033	IdentifierDeclType	struct sockaddr_storage		106534	0					
ANR	107034	Identifier	storage		106534	1					
ANR	107035	ExpressionStatement	"memset ( & info , 0 , sizeof ( struct addrinfo ) )"	751:8:22114:22155	106534	7	True				
ANR	107036	CallExpression	"memset ( & info , 0 , sizeof ( struct addrinfo ) )"		106534	0					
ANR	107037	Callee	memset		106534	0					
ANR	107038	Identifier	memset		106534	0					
ANR	107039	ArgumentList	& info		106534	1					
ANR	107040	Argument	& info		106534	0					
ANR	107041	UnaryOperationExpression	& info		106534	0					
ANR	107042	UnaryOperator	&		106534	0					
ANR	107043	Identifier	info		106534	1					
ANR	107044	Argument	0		106534	1					
ANR	107045	PrimaryExpression	0		106534	0					
ANR	107046	Argument	sizeof ( struct addrinfo )		106534	2					
ANR	107047	SizeofExpression	sizeof ( struct addrinfo )		106534	0					
ANR	107048	Sizeof	sizeof		106534	0					
ANR	107049	SizeofOperand	struct addrinfo		106534	1					
ANR	107050	ExpressionStatement	"memset ( & storage , 0 , sizeof ( struct sockaddr_storage ) )"	752:8:22165:22217	106534	8	True				
ANR	107051	CallExpression	"memset ( & storage , 0 , sizeof ( struct sockaddr_storage ) )"		106534	0					
ANR	107052	Callee	memset		106534	0					
ANR	107053	Identifier	memset		106534	0					
ANR	107054	ArgumentList	& storage		106534	1					
ANR	107055	Argument	& storage		106534	0					
ANR	107056	UnaryOperationExpression	& storage		106534	0					
ANR	107057	UnaryOperator	&		106534	0					
ANR	107058	Identifier	storage		106534	1					
ANR	107059	Argument	0		106534	1					
ANR	107060	PrimaryExpression	0		106534	0					
ANR	107061	Argument	sizeof ( struct sockaddr_storage )		106534	2					
ANR	107062	SizeofExpression	sizeof ( struct sockaddr_storage )		106534	0					
ANR	107063	Sizeof	sizeof		106534	0					
ANR	107064	SizeofOperand	struct sockaddr_storage		106534	1					
ANR	107065	IfStatement	if ( ( atyp & ADDRTYPE_MASK ) == 1 )		106534	9					
ANR	107066	Condition	( atyp & ADDRTYPE_MASK ) == 1	755:12:22268:22294	106534	0	True				
ANR	107067	EqualityExpression	( atyp & ADDRTYPE_MASK ) == 1		106534	0		==			
ANR	107068	BitAndExpression	atyp & ADDRTYPE_MASK		106534	0		&			
ANR	107069	Identifier	atyp		106534	0					
ANR	107070	Identifier	ADDRTYPE_MASK		106534	1					
ANR	107071	PrimaryExpression	1		106534	1					
ANR	107072	CompoundStatement		106:12:3433:3482	106534	1					
ANR	107073	IdentifierDeclStatement	struct sockaddr_in * addr = ( struct sockaddr_in * ) & storage ;	757:12:22332:22389	106534	0	True				
ANR	107074	IdentifierDecl	* addr = ( struct sockaddr_in * ) & storage		106534	0					
ANR	107075	IdentifierDeclType	struct sockaddr_in *		106534	0					
ANR	107076	Identifier	addr		106534	1					
ANR	107077	AssignmentExpression	* addr = ( struct sockaddr_in * ) & storage		106534	2		=			
ANR	107078	Identifier	addr		106534	0					
ANR	107079	CastExpression	( struct sockaddr_in * ) & storage		106534	1					
ANR	107080	CastTarget	struct sockaddr_in *		106534	0					
ANR	107081	UnaryOperationExpression	& storage		106534	1					
ANR	107082	UnaryOperator	&		106534	0					
ANR	107083	Identifier	storage		106534	1					
ANR	107084	IdentifierDeclStatement	size_t in_addr_len = sizeof ( struct in_addr ) ;	758:12:22403:22452	106534	1	True				
ANR	107085	IdentifierDecl	in_addr_len = sizeof ( struct in_addr )		106534	0					
ANR	107086	IdentifierDeclType	size_t		106534	0					
ANR	107087	Identifier	in_addr_len		106534	1					
ANR	107088	AssignmentExpression	in_addr_len = sizeof ( struct in_addr )		106534	2		=			
ANR	107089	Identifier	in_addr_len		106534	0					
ANR	107090	SizeofExpression	sizeof ( struct in_addr )		106534	1					
ANR	107091	Sizeof	sizeof		106534	0					
ANR	107092	SizeofOperand	struct in_addr		106534	1					
ANR	107093	ExpressionStatement	addr -> sin_family = AF_INET	759:12:22466:22492	106534	2	True				
ANR	107094	AssignmentExpression	addr -> sin_family = AF_INET		106534	0		=			
ANR	107095	PtrMemberAccess	addr -> sin_family		106534	0					
ANR	107096	Identifier	addr		106534	0					
ANR	107097	Identifier	sin_family		106534	1					
ANR	107098	Identifier	AF_INET		106534	1					
ANR	107099	IfStatement	if ( server -> buf -> len >= in_addr_len + 3 )		106534	3					
ANR	107100	Condition	server -> buf -> len >= in_addr_len + 3	760:16:22510:22544	106534	0	True				
ANR	107101	RelationalExpression	server -> buf -> len >= in_addr_len + 3		106534	0		>=			
ANR	107102	PtrMemberAccess	server -> buf -> len		106534	0					
ANR	107103	PtrMemberAccess	server -> buf		106534	0					
ANR	107104	Identifier	server		106534	0					
ANR	107105	Identifier	buf		106534	1					
ANR	107106	Identifier	len		106534	1					
ANR	107107	AdditiveExpression	in_addr_len + 3		106534	1		+			
ANR	107108	Identifier	in_addr_len		106534	0					
ANR	107109	PrimaryExpression	3		106534	1					
ANR	107110	CompoundStatement		108:53:3577:3577	106534	1					
ANR	107111	ExpressionStatement	addr -> sin_addr = * ( struct in_addr * ) ( server -> buf -> data + offset )	761:16:22565:22629	106534	0	True				
ANR	107112	AssignmentExpression	addr -> sin_addr = * ( struct in_addr * ) ( server -> buf -> data + offset )		106534	0		=			
ANR	107113	PtrMemberAccess	addr -> sin_addr		106534	0					
ANR	107114	Identifier	addr		106534	0					
ANR	107115	Identifier	sin_addr		106534	1					
ANR	107116	UnaryOperationExpression	* ( struct in_addr * ) ( server -> buf -> data + offset )		106534	1					
ANR	107117	UnaryOperator	*		106534	0					
ANR	107118	CastExpression	( struct in_addr * ) ( server -> buf -> data + offset )		106534	1					
ANR	107119	CastTarget	struct in_addr *		106534	0					
ANR	107120	AdditiveExpression	server -> buf -> data + offset		106534	1		+			
ANR	107121	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107122	PtrMemberAccess	server -> buf		106534	0					
ANR	107123	Identifier	server		106534	0					
ANR	107124	Identifier	buf		106534	1					
ANR	107125	Identifier	data		106534	1					
ANR	107126	Identifier	offset		106534	1					
ANR	107127	ExpressionStatement	"inet_ntop ( AF_INET , ( const void * ) ( server -> buf -> data + offset ) , host , INET_ADDRSTRLEN )"	762:16:22647:22757	106534	1	True				
ANR	107128	CallExpression	"inet_ntop ( AF_INET , ( const void * ) ( server -> buf -> data + offset ) , host , INET_ADDRSTRLEN )"		106534	0					
ANR	107129	Callee	inet_ntop		106534	0					
ANR	107130	Identifier	inet_ntop		106534	0					
ANR	107131	ArgumentList	AF_INET		106534	1					
ANR	107132	Argument	AF_INET		106534	0					
ANR	107133	Identifier	AF_INET		106534	0					
ANR	107134	Argument	( const void * ) ( server -> buf -> data + offset )		106534	1					
ANR	107135	CastExpression	( const void * ) ( server -> buf -> data + offset )		106534	0					
ANR	107136	CastTarget	const void *		106534	0					
ANR	107137	AdditiveExpression	server -> buf -> data + offset		106534	1		+			
ANR	107138	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107139	PtrMemberAccess	server -> buf		106534	0					
ANR	107140	Identifier	server		106534	0					
ANR	107141	Identifier	buf		106534	1					
ANR	107142	Identifier	data		106534	1					
ANR	107143	Identifier	offset		106534	1					
ANR	107144	Argument	host		106534	2					
ANR	107145	Identifier	host		106534	0					
ANR	107146	Argument	INET_ADDRSTRLEN		106534	3					
ANR	107147	Identifier	INET_ADDRSTRLEN		106534	0					
ANR	107148	ExpressionStatement	offset += in_addr_len	764:16:22775:22796	106534	2	True				
ANR	107149	AssignmentExpression	offset += in_addr_len		106534	0		+=			
ANR	107150	Identifier	offset		106534	0					
ANR	107151	Identifier	in_addr_len		106534	1					
ANR	107152	ElseStatement	else		106534	0					
ANR	107153	CompoundStatement		113:19:3847:3847	106534	0					
ANR	107154	ExpressionStatement	"report_addr ( server -> fd , MALFORMED , ""invalid length for ipv4 address"" )"	766:16:22835:22904	106534	0	True				
ANR	107155	CallExpression	"report_addr ( server -> fd , MALFORMED , ""invalid length for ipv4 address"" )"		106534	0					
ANR	107156	Callee	report_addr		106534	0					
ANR	107157	Identifier	report_addr		106534	0					
ANR	107158	ArgumentList	server -> fd		106534	1					
ANR	107159	Argument	server -> fd		106534	0					
ANR	107160	PtrMemberAccess	server -> fd		106534	0					
ANR	107161	Identifier	server		106534	0					
ANR	107162	Identifier	fd		106534	1					
ANR	107163	Argument	MALFORMED		106534	1					
ANR	107164	Identifier	MALFORMED		106534	0					
ANR	107165	Argument	"""invalid length for ipv4 address"""		106534	2					
ANR	107166	PrimaryExpression	"""invalid length for ipv4 address"""		106534	0					
ANR	107167	Statement	close_and_free_server	767:16:22922:22942	106534	1	True				
ANR	107168	Statement	(	767:37:22943:22943	106534	2	True				
ANR	107169	Statement	EV_A_	767:38:22944:22948	106534	3	True				
ANR	107170	Statement	server	767:44:22950:22955	106534	4	True				
ANR	107171	Statement	)	767:50:22956:22956	106534	5	True				
ANR	107172	ExpressionStatement		767:51:22957:22957	106534	6	True				
ANR	107173	ReturnStatement	return ;	768:16:22975:22981	106534	7	True				
ANR	107174	ExpressionStatement	addr -> sin_port = * ( uint16_t * ) ( server -> buf -> data + offset )	770:12:23009:23069	106534	4	True				
ANR	107175	AssignmentExpression	addr -> sin_port = * ( uint16_t * ) ( server -> buf -> data + offset )		106534	0		=			
ANR	107176	PtrMemberAccess	addr -> sin_port		106534	0					
ANR	107177	Identifier	addr		106534	0					
ANR	107178	Identifier	sin_port		106534	1					
ANR	107179	UnaryOperationExpression	* ( uint16_t * ) ( server -> buf -> data + offset )		106534	1					
ANR	107180	UnaryOperator	*		106534	0					
ANR	107181	CastExpression	( uint16_t * ) ( server -> buf -> data + offset )		106534	1					
ANR	107182	CastTarget	uint16_t *		106534	0					
ANR	107183	AdditiveExpression	server -> buf -> data + offset		106534	1		+			
ANR	107184	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107185	PtrMemberAccess	server -> buf		106534	0					
ANR	107186	Identifier	server		106534	0					
ANR	107187	Identifier	buf		106534	1					
ANR	107188	Identifier	data		106534	1					
ANR	107189	Identifier	offset		106534	1					
ANR	107190	ExpressionStatement	info . ai_family = AF_INET	771:12:23083:23109	106534	5	True				
ANR	107191	AssignmentExpression	info . ai_family = AF_INET		106534	0		=			
ANR	107192	MemberAccess	info . ai_family		106534	0					
ANR	107193	Identifier	info		106534	0					
ANR	107194	Identifier	ai_family		106534	1					
ANR	107195	Identifier	AF_INET		106534	1					
ANR	107196	ExpressionStatement	info . ai_socktype = SOCK_STREAM	772:12:23123:23153	106534	6	True				
ANR	107197	AssignmentExpression	info . ai_socktype = SOCK_STREAM		106534	0		=			
ANR	107198	MemberAccess	info . ai_socktype		106534	0					
ANR	107199	Identifier	info		106534	0					
ANR	107200	Identifier	ai_socktype		106534	1					
ANR	107201	Identifier	SOCK_STREAM		106534	1					
ANR	107202	ExpressionStatement	info . ai_protocol = IPPROTO_TCP	773:12:23167:23197	106534	7	True				
ANR	107203	AssignmentExpression	info . ai_protocol = IPPROTO_TCP		106534	0		=			
ANR	107204	MemberAccess	info . ai_protocol		106534	0					
ANR	107205	Identifier	info		106534	0					
ANR	107206	Identifier	ai_protocol		106534	1					
ANR	107207	Identifier	IPPROTO_TCP		106534	1					
ANR	107208	ExpressionStatement	info . ai_addrlen = sizeof ( struct sockaddr_in )	774:12:23211:23256	106534	8	True				
ANR	107209	AssignmentExpression	info . ai_addrlen = sizeof ( struct sockaddr_in )		106534	0		=			
ANR	107210	MemberAccess	info . ai_addrlen		106534	0					
ANR	107211	Identifier	info		106534	0					
ANR	107212	Identifier	ai_addrlen		106534	1					
ANR	107213	SizeofExpression	sizeof ( struct sockaddr_in )		106534	1					
ANR	107214	Sizeof	sizeof		106534	0					
ANR	107215	SizeofOperand	struct sockaddr_in		106534	1					
ANR	107216	ExpressionStatement	info . ai_addr = ( struct sockaddr * ) addr	775:12:23270:23312	106534	9	True				
ANR	107217	AssignmentExpression	info . ai_addr = ( struct sockaddr * ) addr		106534	0		=			
ANR	107218	MemberAccess	info . ai_addr		106534	0					
ANR	107219	Identifier	info		106534	0					
ANR	107220	Identifier	ai_addr		106534	1					
ANR	107221	CastExpression	( struct sockaddr * ) addr		106534	1					
ANR	107222	CastTarget	struct sockaddr *		106534	0					
ANR	107223	Identifier	addr		106534	1					
ANR	107224	ElseStatement	else		106534	0					
ANR	107225	IfStatement	if ( ( atyp & ADDRTYPE_MASK ) == 3 )		106534	0					
ANR	107226	Condition	( atyp & ADDRTYPE_MASK ) == 3	776:19:23333:23359	106534	0	True				
ANR	107227	EqualityExpression	( atyp & ADDRTYPE_MASK ) == 3		106534	0		==			
ANR	107228	BitAndExpression	atyp & ADDRTYPE_MASK		106534	0		&			
ANR	107229	Identifier	atyp		106534	0					
ANR	107230	Identifier	ADDRTYPE_MASK		106534	1					
ANR	107231	PrimaryExpression	3		106534	1					
ANR	107232	CompoundStatement		141:12:5100:5117	106534	1					
ANR	107233	IdentifierDeclStatement	uint8_t name_len = * ( uint8_t * ) ( server -> buf -> data + offset ) ;	778:12:23403:23462	106534	0	True				
ANR	107234	IdentifierDecl	name_len = * ( uint8_t * ) ( server -> buf -> data + offset )		106534	0					
ANR	107235	IdentifierDeclType	uint8_t		106534	0					
ANR	107236	Identifier	name_len		106534	1					
ANR	107237	AssignmentExpression	name_len = * ( uint8_t * ) ( server -> buf -> data + offset )		106534	2		=			
ANR	107238	Identifier	name_len		106534	0					
ANR	107239	UnaryOperationExpression	* ( uint8_t * ) ( server -> buf -> data + offset )		106534	1					
ANR	107240	UnaryOperator	*		106534	0					
ANR	107241	CastExpression	( uint8_t * ) ( server -> buf -> data + offset )		106534	1					
ANR	107242	CastTarget	uint8_t *		106534	0					
ANR	107243	AdditiveExpression	server -> buf -> data + offset		106534	1		+			
ANR	107244	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107245	PtrMemberAccess	server -> buf		106534	0					
ANR	107246	Identifier	server		106534	0					
ANR	107247	Identifier	buf		106534	1					
ANR	107248	Identifier	data		106534	1					
ANR	107249	Identifier	offset		106534	1					
ANR	107250	IfStatement	if ( name_len + 4 <= server -> buf -> len )		106534	1					
ANR	107251	Condition	name_len + 4 <= server -> buf -> len	779:16:23480:23511	106534	0	True				
ANR	107252	RelationalExpression	name_len + 4 <= server -> buf -> len		106534	0		<=			
ANR	107253	AdditiveExpression	name_len + 4		106534	0		+			
ANR	107254	Identifier	name_len		106534	0					
ANR	107255	PrimaryExpression	4		106534	1					
ANR	107256	PtrMemberAccess	server -> buf -> len		106534	1					
ANR	107257	PtrMemberAccess	server -> buf		106534	0					
ANR	107258	Identifier	server		106534	0					
ANR	107259	Identifier	buf		106534	1					
ANR	107260	Identifier	len		106534	1					
ANR	107261	CompoundStatement		127:50:4544:4544	106534	1					
ANR	107262	ExpressionStatement	"memcpy ( host , server -> buf -> data + offset + 1 , name_len )"	780:16:23532:23586	106534	0	True				
ANR	107263	CallExpression	"memcpy ( host , server -> buf -> data + offset + 1 , name_len )"		106534	0					
ANR	107264	Callee	memcpy		106534	0					
ANR	107265	Identifier	memcpy		106534	0					
ANR	107266	ArgumentList	host		106534	1					
ANR	107267	Argument	host		106534	0					
ANR	107268	Identifier	host		106534	0					
ANR	107269	Argument	server -> buf -> data + offset + 1		106534	1					
ANR	107270	AdditiveExpression	server -> buf -> data + offset + 1		106534	0		+			
ANR	107271	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107272	PtrMemberAccess	server -> buf		106534	0					
ANR	107273	Identifier	server		106534	0					
ANR	107274	Identifier	buf		106534	1					
ANR	107275	Identifier	data		106534	1					
ANR	107276	AdditiveExpression	offset + 1		106534	1		+			
ANR	107277	Identifier	offset		106534	0					
ANR	107278	PrimaryExpression	1		106534	1					
ANR	107279	Argument	name_len		106534	2					
ANR	107280	Identifier	name_len		106534	0					
ANR	107281	ExpressionStatement	offset += name_len + 1	781:16:23604:23626	106534	1	True				
ANR	107282	AssignmentExpression	offset += name_len + 1		106534	0		+=			
ANR	107283	Identifier	offset		106534	0					
ANR	107284	AdditiveExpression	name_len + 1		106534	1		+			
ANR	107285	Identifier	name_len		106534	0					
ANR	107286	PrimaryExpression	1		106534	1					
ANR	107287	ElseStatement	else		106534	0					
ANR	107288	CompoundStatement		130:19:4677:4677	106534	0					
ANR	107289	ExpressionStatement	"report_addr ( server -> fd , MALFORMED , ""invalid host name length"" )"	783:16:23665:23727	106534	0	True				
ANR	107290	CallExpression	"report_addr ( server -> fd , MALFORMED , ""invalid host name length"" )"		106534	0					
ANR	107291	Callee	report_addr		106534	0					
ANR	107292	Identifier	report_addr		106534	0					
ANR	107293	ArgumentList	server -> fd		106534	1					
ANR	107294	Argument	server -> fd		106534	0					
ANR	107295	PtrMemberAccess	server -> fd		106534	0					
ANR	107296	Identifier	server		106534	0					
ANR	107297	Identifier	fd		106534	1					
ANR	107298	Argument	MALFORMED		106534	1					
ANR	107299	Identifier	MALFORMED		106534	0					
ANR	107300	Argument	"""invalid host name length"""		106534	2					
ANR	107301	PrimaryExpression	"""invalid host name length"""		106534	0					
ANR	107302	Statement	close_and_free_server	784:16:23745:23765	106534	1	True				
ANR	107303	Statement	(	784:37:23766:23766	106534	2	True				
ANR	107304	Statement	EV_A_	784:38:23767:23771	106534	3	True				
ANR	107305	Statement	server	784:44:23773:23778	106534	4	True				
ANR	107306	Statement	)	784:50:23779:23779	106534	5	True				
ANR	107307	ExpressionStatement		784:51:23780:23780	106534	6	True				
ANR	107308	ReturnStatement	return ;	785:16:23798:23804	106534	7	True				
ANR	107309	IfStatement	if ( acl && outbound_block_match_host ( host ) == 1 )		106534	2					
ANR	107310	Condition	acl && outbound_block_match_host ( host ) == 1	787:16:23836:23878	106534	0	True				
ANR	107311	AndExpression	acl && outbound_block_match_host ( host ) == 1		106534	0		&&			
ANR	107312	Identifier	acl		106534	0					
ANR	107313	EqualityExpression	outbound_block_match_host ( host ) == 1		106534	1		==			
ANR	107314	CallExpression	outbound_block_match_host ( host )		106534	0					
ANR	107315	Callee	outbound_block_match_host		106534	0					
ANR	107316	Identifier	outbound_block_match_host		106534	0					
ANR	107317	ArgumentList	host		106534	1					
ANR	107318	Argument	host		106534	0					
ANR	107319	Identifier	host		106534	0					
ANR	107320	PrimaryExpression	1		106534	1					
ANR	107321	CompoundStatement		135:61:4911:4911	106534	1					
ANR	107322	IfStatement	if ( verbose )		106534	0					
ANR	107323	Condition	verbose	788:20:23903:23909	106534	0	True				
ANR	107324	Identifier	verbose		106534	0					
ANR	107325	ExpressionStatement	"LOGI ( ""outbound blocked %s"" , host )"	789:20:23932:23965	106534	1	True				
ANR	107326	CallExpression	"LOGI ( ""outbound blocked %s"" , host )"		106534	0					
ANR	107327	Callee	LOGI		106534	0					
ANR	107328	Identifier	LOGI		106534	0					
ANR	107329	ArgumentList	"""outbound blocked %s"""		106534	1					
ANR	107330	Argument	"""outbound blocked %s"""		106534	0					
ANR	107331	PrimaryExpression	"""outbound blocked %s"""		106534	0					
ANR	107332	Argument	host		106534	1					
ANR	107333	Identifier	host		106534	0					
ANR	107334	Statement	close_and_free_server	790:16:23983:24003	106534	1	True				
ANR	107335	Statement	(	790:37:24004:24004	106534	2	True				
ANR	107336	Statement	EV_A_	790:38:24005:24009	106534	3	True				
ANR	107337	Statement	server	790:44:24011:24016	106534	4	True				
ANR	107338	Statement	)	790:50:24017:24017	106534	5	True				
ANR	107339	ExpressionStatement		790:51:24018:24018	106534	6	True				
ANR	107340	ReturnStatement	return ;	791:16:24036:24042	106534	7	True				
ANR	107341	IdentifierDeclStatement	struct cork_ip ip ;	793:12:24070:24087	106534	3	True				
ANR	107342	IdentifierDecl	ip		106534	0					
ANR	107343	IdentifierDeclType	struct cork_ip		106534	0					
ANR	107344	Identifier	ip		106534	1					
ANR	107345	IfStatement	"if ( cork_ip_init ( & ip , host ) != - 1 )"		106534	4					
ANR	107346	Condition	"cork_ip_init ( & ip , host ) != - 1"	794:16:24105:24133	106534	0	True				
ANR	107347	EqualityExpression	"cork_ip_init ( & ip , host ) != - 1"		106534	0		!=			
ANR	107348	CallExpression	"cork_ip_init ( & ip , host )"		106534	0					
ANR	107349	Callee	cork_ip_init		106534	0					
ANR	107350	Identifier	cork_ip_init		106534	0					
ANR	107351	ArgumentList	& ip		106534	1					
ANR	107352	Argument	& ip		106534	0					
ANR	107353	UnaryOperationExpression	& ip		106534	0					
ANR	107354	UnaryOperator	&		106534	0					
ANR	107355	Identifier	ip		106534	1					
ANR	107356	Argument	host		106534	1					
ANR	107357	Identifier	host		106534	0					
ANR	107358	UnaryOperationExpression	- 1		106534	1					
ANR	107359	UnaryOperator	-		106534	0					
ANR	107360	PrimaryExpression	1		106534	1					
ANR	107361	CompoundStatement		142:47:5166:5166	106534	1					
ANR	107362	ExpressionStatement	info . ai_socktype = SOCK_STREAM	795:16:24154:24184	106534	0	True				
ANR	107363	AssignmentExpression	info . ai_socktype = SOCK_STREAM		106534	0		=			
ANR	107364	MemberAccess	info . ai_socktype		106534	0					
ANR	107365	Identifier	info		106534	0					
ANR	107366	Identifier	ai_socktype		106534	1					
ANR	107367	Identifier	SOCK_STREAM		106534	1					
ANR	107368	ExpressionStatement	info . ai_protocol = IPPROTO_TCP	796:16:24202:24232	106534	1	True				
ANR	107369	AssignmentExpression	info . ai_protocol = IPPROTO_TCP		106534	0		=			
ANR	107370	MemberAccess	info . ai_protocol		106534	0					
ANR	107371	Identifier	info		106534	0					
ANR	107372	Identifier	ai_protocol		106534	1					
ANR	107373	Identifier	IPPROTO_TCP		106534	1					
ANR	107374	IfStatement	if ( ip . version == 4 )		106534	2					
ANR	107375	Condition	ip . version == 4	797:20:24254:24268	106534	0	True				
ANR	107376	EqualityExpression	ip . version == 4		106534	0		==			
ANR	107377	MemberAccess	ip . version		106534	0					
ANR	107378	Identifier	ip		106534	0					
ANR	107379	Identifier	version		106534	1					
ANR	107380	PrimaryExpression	4		106534	1					
ANR	107381	CompoundStatement		146:20:5323:5380	106534	1					
ANR	107382	IdentifierDeclStatement	struct sockaddr_in * addr = ( struct sockaddr_in * ) & storage ;	798:20:24293:24350	106534	0	True				
ANR	107383	IdentifierDecl	* addr = ( struct sockaddr_in * ) & storage		106534	0					
ANR	107384	IdentifierDeclType	struct sockaddr_in *		106534	0					
ANR	107385	Identifier	addr		106534	1					
ANR	107386	AssignmentExpression	* addr = ( struct sockaddr_in * ) & storage		106534	2		=			
ANR	107387	Identifier	addr		106534	0					
ANR	107388	CastExpression	( struct sockaddr_in * ) & storage		106534	1					
ANR	107389	CastTarget	struct sockaddr_in *		106534	0					
ANR	107390	UnaryOperationExpression	& storage		106534	1					
ANR	107391	UnaryOperator	&		106534	0					
ANR	107392	Identifier	storage		106534	1					
ANR	107393	ExpressionStatement	"inet_pton ( AF_INET , host , & ( addr -> sin_addr ) )"	799:20:24372:24415	106534	1	True				
ANR	107394	CallExpression	"inet_pton ( AF_INET , host , & ( addr -> sin_addr ) )"		106534	0					
ANR	107395	Callee	inet_pton		106534	0					
ANR	107396	Identifier	inet_pton		106534	0					
ANR	107397	ArgumentList	AF_INET		106534	1					
ANR	107398	Argument	AF_INET		106534	0					
ANR	107399	Identifier	AF_INET		106534	0					
ANR	107400	Argument	host		106534	1					
ANR	107401	Identifier	host		106534	0					
ANR	107402	Argument	& ( addr -> sin_addr )		106534	2					
ANR	107403	UnaryOperationExpression	& ( addr -> sin_addr )		106534	0					
ANR	107404	UnaryOperator	&		106534	0					
ANR	107405	PtrMemberAccess	addr -> sin_addr		106534	1					
ANR	107406	Identifier	addr		106534	0					
ANR	107407	Identifier	sin_addr		106534	1					
ANR	107408	ExpressionStatement	addr -> sin_port = * ( uint16_t * ) ( server -> buf -> data + offset )	800:20:24437:24497	106534	2	True				
ANR	107409	AssignmentExpression	addr -> sin_port = * ( uint16_t * ) ( server -> buf -> data + offset )		106534	0		=			
ANR	107410	PtrMemberAccess	addr -> sin_port		106534	0					
ANR	107411	Identifier	addr		106534	0					
ANR	107412	Identifier	sin_port		106534	1					
ANR	107413	UnaryOperationExpression	* ( uint16_t * ) ( server -> buf -> data + offset )		106534	1					
ANR	107414	UnaryOperator	*		106534	0					
ANR	107415	CastExpression	( uint16_t * ) ( server -> buf -> data + offset )		106534	1					
ANR	107416	CastTarget	uint16_t *		106534	0					
ANR	107417	AdditiveExpression	server -> buf -> data + offset		106534	1		+			
ANR	107418	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107419	PtrMemberAccess	server -> buf		106534	0					
ANR	107420	Identifier	server		106534	0					
ANR	107421	Identifier	buf		106534	1					
ANR	107422	Identifier	data		106534	1					
ANR	107423	Identifier	offset		106534	1					
ANR	107424	ExpressionStatement	addr -> sin_family = AF_INET	801:20:24519:24545	106534	3	True				
ANR	107425	AssignmentExpression	addr -> sin_family = AF_INET		106534	0		=			
ANR	107426	PtrMemberAccess	addr -> sin_family		106534	0					
ANR	107427	Identifier	addr		106534	0					
ANR	107428	Identifier	sin_family		106534	1					
ANR	107429	Identifier	AF_INET		106534	1					
ANR	107430	ExpressionStatement	info . ai_family = AF_INET	802:20:24567:24593	106534	4	True				
ANR	107431	AssignmentExpression	info . ai_family = AF_INET		106534	0		=			
ANR	107432	MemberAccess	info . ai_family		106534	0					
ANR	107433	Identifier	info		106534	0					
ANR	107434	Identifier	ai_family		106534	1					
ANR	107435	Identifier	AF_INET		106534	1					
ANR	107436	ExpressionStatement	info . ai_addrlen = sizeof ( struct sockaddr_in )	803:20:24615:24660	106534	5	True				
ANR	107437	AssignmentExpression	info . ai_addrlen = sizeof ( struct sockaddr_in )		106534	0		=			
ANR	107438	MemberAccess	info . ai_addrlen		106534	0					
ANR	107439	Identifier	info		106534	0					
ANR	107440	Identifier	ai_addrlen		106534	1					
ANR	107441	SizeofExpression	sizeof ( struct sockaddr_in )		106534	1					
ANR	107442	Sizeof	sizeof		106534	0					
ANR	107443	SizeofOperand	struct sockaddr_in		106534	1					
ANR	107444	ExpressionStatement	info . ai_addr = ( struct sockaddr * ) addr	804:20:24682:24724	106534	6	True				
ANR	107445	AssignmentExpression	info . ai_addr = ( struct sockaddr * ) addr		106534	0		=			
ANR	107446	MemberAccess	info . ai_addr		106534	0					
ANR	107447	Identifier	info		106534	0					
ANR	107448	Identifier	ai_addr		106534	1					
ANR	107449	CastExpression	( struct sockaddr * ) addr		106534	1					
ANR	107450	CastTarget	struct sockaddr *		106534	0					
ANR	107451	Identifier	addr		106534	1					
ANR	107452	ElseStatement	else		106534	0					
ANR	107453	IfStatement	if ( ip . version == 6 )		106534	0					
ANR	107454	Condition	ip . version == 6	805:27:24753:24767	106534	0	True				
ANR	107455	EqualityExpression	ip . version == 6		106534	0		==			
ANR	107456	MemberAccess	ip . version		106534	0					
ANR	107457	Identifier	ip		106534	0					
ANR	107458	Identifier	version		106534	1					
ANR	107459	PrimaryExpression	6		106534	1					
ANR	107460	CompoundStatement		154:20:5822:5881	106534	1					
ANR	107461	IdentifierDeclStatement	struct sockaddr_in6 * addr = ( struct sockaddr_in6 * ) & storage ;	806:20:24792:24851	106534	0	True				
ANR	107462	IdentifierDecl	* addr = ( struct sockaddr_in6 * ) & storage		106534	0					
ANR	107463	IdentifierDeclType	struct sockaddr_in6 *		106534	0					
ANR	107464	Identifier	addr		106534	1					
ANR	107465	AssignmentExpression	* addr = ( struct sockaddr_in6 * ) & storage		106534	2		=			
ANR	107466	Identifier	addr		106534	0					
ANR	107467	CastExpression	( struct sockaddr_in6 * ) & storage		106534	1					
ANR	107468	CastTarget	struct sockaddr_in6 *		106534	0					
ANR	107469	UnaryOperationExpression	& storage		106534	1					
ANR	107470	UnaryOperator	&		106534	0					
ANR	107471	Identifier	storage		106534	1					
ANR	107472	ExpressionStatement	"inet_pton ( AF_INET6 , host , & ( addr -> sin6_addr ) )"	807:20:24873:24918	106534	1	True				
ANR	107473	CallExpression	"inet_pton ( AF_INET6 , host , & ( addr -> sin6_addr ) )"		106534	0					
ANR	107474	Callee	inet_pton		106534	0					
ANR	107475	Identifier	inet_pton		106534	0					
ANR	107476	ArgumentList	AF_INET6		106534	1					
ANR	107477	Argument	AF_INET6		106534	0					
ANR	107478	Identifier	AF_INET6		106534	0					
ANR	107479	Argument	host		106534	1					
ANR	107480	Identifier	host		106534	0					
ANR	107481	Argument	& ( addr -> sin6_addr )		106534	2					
ANR	107482	UnaryOperationExpression	& ( addr -> sin6_addr )		106534	0					
ANR	107483	UnaryOperator	&		106534	0					
ANR	107484	PtrMemberAccess	addr -> sin6_addr		106534	1					
ANR	107485	Identifier	addr		106534	0					
ANR	107486	Identifier	sin6_addr		106534	1					
ANR	107487	ExpressionStatement	addr -> sin6_port = * ( uint16_t * ) ( server -> buf -> data + offset )	808:20:24940:25001	106534	2	True				
ANR	107488	AssignmentExpression	addr -> sin6_port = * ( uint16_t * ) ( server -> buf -> data + offset )		106534	0		=			
ANR	107489	PtrMemberAccess	addr -> sin6_port		106534	0					
ANR	107490	Identifier	addr		106534	0					
ANR	107491	Identifier	sin6_port		106534	1					
ANR	107492	UnaryOperationExpression	* ( uint16_t * ) ( server -> buf -> data + offset )		106534	1					
ANR	107493	UnaryOperator	*		106534	0					
ANR	107494	CastExpression	( uint16_t * ) ( server -> buf -> data + offset )		106534	1					
ANR	107495	CastTarget	uint16_t *		106534	0					
ANR	107496	AdditiveExpression	server -> buf -> data + offset		106534	1		+			
ANR	107497	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107498	PtrMemberAccess	server -> buf		106534	0					
ANR	107499	Identifier	server		106534	0					
ANR	107500	Identifier	buf		106534	1					
ANR	107501	Identifier	data		106534	1					
ANR	107502	Identifier	offset		106534	1					
ANR	107503	ExpressionStatement	addr -> sin6_family = AF_INET6	809:20:25023:25051	106534	3	True				
ANR	107504	AssignmentExpression	addr -> sin6_family = AF_INET6		106534	0		=			
ANR	107505	PtrMemberAccess	addr -> sin6_family		106534	0					
ANR	107506	Identifier	addr		106534	0					
ANR	107507	Identifier	sin6_family		106534	1					
ANR	107508	Identifier	AF_INET6		106534	1					
ANR	107509	ExpressionStatement	info . ai_family = AF_INET6	810:20:25073:25101	106534	4	True				
ANR	107510	AssignmentExpression	info . ai_family = AF_INET6		106534	0		=			
ANR	107511	MemberAccess	info . ai_family		106534	0					
ANR	107512	Identifier	info		106534	0					
ANR	107513	Identifier	ai_family		106534	1					
ANR	107514	Identifier	AF_INET6		106534	1					
ANR	107515	ExpressionStatement	info . ai_addrlen = sizeof ( struct sockaddr_in6 )	811:20:25123:25170	106534	5	True				
ANR	107516	AssignmentExpression	info . ai_addrlen = sizeof ( struct sockaddr_in6 )		106534	0		=			
ANR	107517	MemberAccess	info . ai_addrlen		106534	0					
ANR	107518	Identifier	info		106534	0					
ANR	107519	Identifier	ai_addrlen		106534	1					
ANR	107520	SizeofExpression	sizeof ( struct sockaddr_in6 )		106534	1					
ANR	107521	Sizeof	sizeof		106534	0					
ANR	107522	SizeofOperand	struct sockaddr_in6		106534	1					
ANR	107523	ExpressionStatement	info . ai_addr = ( struct sockaddr * ) addr	812:20:25192:25235	106534	6	True				
ANR	107524	AssignmentExpression	info . ai_addr = ( struct sockaddr * ) addr		106534	0		=			
ANR	107525	MemberAccess	info . ai_addr		106534	0					
ANR	107526	Identifier	info		106534	0					
ANR	107527	Identifier	ai_addr		106534	1					
ANR	107528	CastExpression	( struct sockaddr * ) addr		106534	1					
ANR	107529	CastTarget	struct sockaddr *		106534	0					
ANR	107530	Identifier	addr		106534	1					
ANR	107531	ElseStatement	else		106534	0					
ANR	107532	CompoundStatement		162:19:6304:6304	106534	0					
ANR	107533	IfStatement	"if ( ! validate_hostname ( host , name_len ) )"		106534	0					
ANR	107534	Condition	"! validate_hostname ( host , name_len )"	815:20:25296:25329	106534	0	True				
ANR	107535	UnaryOperationExpression	"! validate_hostname ( host , name_len )"		106534	0					
ANR	107536	UnaryOperator	!		106534	0					
ANR	107537	CallExpression	"validate_hostname ( host , name_len )"		106534	1					
ANR	107538	Callee	validate_hostname		106534	0					
ANR	107539	Identifier	validate_hostname		106534	0					
ANR	107540	ArgumentList	host		106534	1					
ANR	107541	Argument	host		106534	0					
ANR	107542	Identifier	host		106534	0					
ANR	107543	Argument	name_len		106534	1					
ANR	107544	Identifier	name_len		106534	0					
ANR	107545	CompoundStatement		163:56:6362:6362	106534	1					
ANR	107546	ExpressionStatement	"report_addr ( server -> fd , MALFORMED , ""invalid host name"" )"	816:20:25354:25409	106534	0	True				
ANR	107547	CallExpression	"report_addr ( server -> fd , MALFORMED , ""invalid host name"" )"		106534	0					
ANR	107548	Callee	report_addr		106534	0					
ANR	107549	Identifier	report_addr		106534	0					
ANR	107550	ArgumentList	server -> fd		106534	1					
ANR	107551	Argument	server -> fd		106534	0					
ANR	107552	PtrMemberAccess	server -> fd		106534	0					
ANR	107553	Identifier	server		106534	0					
ANR	107554	Identifier	fd		106534	1					
ANR	107555	Argument	MALFORMED		106534	1					
ANR	107556	Identifier	MALFORMED		106534	0					
ANR	107557	Argument	"""invalid host name"""		106534	2					
ANR	107558	PrimaryExpression	"""invalid host name"""		106534	0					
ANR	107559	Statement	close_and_free_server	817:20:25431:25451	106534	1	True				
ANR	107560	Statement	(	817:41:25452:25452	106534	2	True				
ANR	107561	Statement	EV_A_	817:42:25453:25457	106534	3	True				
ANR	107562	Statement	server	817:48:25459:25464	106534	4	True				
ANR	107563	Statement	)	817:54:25465:25465	106534	5	True				
ANR	107564	ExpressionStatement		817:55:25466:25466	106534	6	True				
ANR	107565	ReturnStatement	return ;	818:20:25488:25494	106534	7	True				
ANR	107566	ExpressionStatement	need_query = 1	820:16:25530:25544	106534	1	True				
ANR	107567	AssignmentExpression	need_query = 1		106534	0		=			
ANR	107568	Identifier	need_query		106534	0					
ANR	107569	PrimaryExpression	1		106534	1					
ANR	107570	ElseStatement	else		106534	0					
ANR	107571	IfStatement	if ( ( atyp & ADDRTYPE_MASK ) == 4 )		106534	0					
ANR	107572	Condition	( atyp & ADDRTYPE_MASK ) == 4	822:19:25579:25605	106534	0	True				
ANR	107573	EqualityExpression	( atyp & ADDRTYPE_MASK ) == 4		106534	0		==			
ANR	107574	BitAndExpression	atyp & ADDRTYPE_MASK		106534	0		&			
ANR	107575	Identifier	atyp		106534	0					
ANR	107576	Identifier	ADDRTYPE_MASK		106534	1					
ANR	107577	PrimaryExpression	4		106534	1					
ANR	107578	CompoundStatement		173:12:6746:6797	106534	1					
ANR	107579	IdentifierDeclStatement	struct sockaddr_in6 * addr = ( struct sockaddr_in6 * ) & storage ;	824:12:25643:25702	106534	0	True				
ANR	107580	IdentifierDecl	* addr = ( struct sockaddr_in6 * ) & storage		106534	0					
ANR	107581	IdentifierDeclType	struct sockaddr_in6 *		106534	0					
ANR	107582	Identifier	addr		106534	1					
ANR	107583	AssignmentExpression	* addr = ( struct sockaddr_in6 * ) & storage		106534	2		=			
ANR	107584	Identifier	addr		106534	0					
ANR	107585	CastExpression	( struct sockaddr_in6 * ) & storage		106534	1					
ANR	107586	CastTarget	struct sockaddr_in6 *		106534	0					
ANR	107587	UnaryOperationExpression	& storage		106534	1					
ANR	107588	UnaryOperator	&		106534	0					
ANR	107589	Identifier	storage		106534	1					
ANR	107590	IdentifierDeclStatement	size_t in6_addr_len = sizeof ( struct in6_addr ) ;	825:12:25716:25767	106534	1	True				
ANR	107591	IdentifierDecl	in6_addr_len = sizeof ( struct in6_addr )		106534	0					
ANR	107592	IdentifierDeclType	size_t		106534	0					
ANR	107593	Identifier	in6_addr_len		106534	1					
ANR	107594	AssignmentExpression	in6_addr_len = sizeof ( struct in6_addr )		106534	2		=			
ANR	107595	Identifier	in6_addr_len		106534	0					
ANR	107596	SizeofExpression	sizeof ( struct in6_addr )		106534	1					
ANR	107597	Sizeof	sizeof		106534	0					
ANR	107598	SizeofOperand	struct in6_addr		106534	1					
ANR	107599	ExpressionStatement	addr -> sin6_family = AF_INET6	826:12:25781:25809	106534	2	True				
ANR	107600	AssignmentExpression	addr -> sin6_family = AF_INET6		106534	0		=			
ANR	107601	PtrMemberAccess	addr -> sin6_family		106534	0					
ANR	107602	Identifier	addr		106534	0					
ANR	107603	Identifier	sin6_family		106534	1					
ANR	107604	Identifier	AF_INET6		106534	1					
ANR	107605	IfStatement	if ( server -> buf -> len >= in6_addr_len + 3 )		106534	3					
ANR	107606	Condition	server -> buf -> len >= in6_addr_len + 3	827:16:25827:25862	106534	0	True				
ANR	107607	RelationalExpression	server -> buf -> len >= in6_addr_len + 3		106534	0		>=			
ANR	107608	PtrMemberAccess	server -> buf -> len		106534	0					
ANR	107609	PtrMemberAccess	server -> buf		106534	0					
ANR	107610	Identifier	server		106534	0					
ANR	107611	Identifier	buf		106534	1					
ANR	107612	Identifier	len		106534	1					
ANR	107613	AdditiveExpression	in6_addr_len + 3		106534	1		+			
ANR	107614	Identifier	in6_addr_len		106534	0					
ANR	107615	PrimaryExpression	3		106534	1					
ANR	107616	CompoundStatement		175:54:6895:6895	106534	1					
ANR	107617	ExpressionStatement	addr -> sin6_addr = * ( struct in6_addr * ) ( server -> buf -> data + offset )	828:16:25883:25949	106534	0	True				
ANR	107618	AssignmentExpression	addr -> sin6_addr = * ( struct in6_addr * ) ( server -> buf -> data + offset )		106534	0		=			
ANR	107619	PtrMemberAccess	addr -> sin6_addr		106534	0					
ANR	107620	Identifier	addr		106534	0					
ANR	107621	Identifier	sin6_addr		106534	1					
ANR	107622	UnaryOperationExpression	* ( struct in6_addr * ) ( server -> buf -> data + offset )		106534	1					
ANR	107623	UnaryOperator	*		106534	0					
ANR	107624	CastExpression	( struct in6_addr * ) ( server -> buf -> data + offset )		106534	1					
ANR	107625	CastTarget	struct in6_addr *		106534	0					
ANR	107626	AdditiveExpression	server -> buf -> data + offset		106534	1		+			
ANR	107627	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107628	PtrMemberAccess	server -> buf		106534	0					
ANR	107629	Identifier	server		106534	0					
ANR	107630	Identifier	buf		106534	1					
ANR	107631	Identifier	data		106534	1					
ANR	107632	Identifier	offset		106534	1					
ANR	107633	ExpressionStatement	"inet_ntop ( AF_INET6 , ( const void * ) ( server -> buf -> data + offset ) , host , INET6_ADDRSTRLEN )"	829:16:25967:26079	106534	1	True				
ANR	107634	CallExpression	"inet_ntop ( AF_INET6 , ( const void * ) ( server -> buf -> data + offset ) , host , INET6_ADDRSTRLEN )"		106534	0					
ANR	107635	Callee	inet_ntop		106534	0					
ANR	107636	Identifier	inet_ntop		106534	0					
ANR	107637	ArgumentList	AF_INET6		106534	1					
ANR	107638	Argument	AF_INET6		106534	0					
ANR	107639	Identifier	AF_INET6		106534	0					
ANR	107640	Argument	( const void * ) ( server -> buf -> data + offset )		106534	1					
ANR	107641	CastExpression	( const void * ) ( server -> buf -> data + offset )		106534	0					
ANR	107642	CastTarget	const void *		106534	0					
ANR	107643	AdditiveExpression	server -> buf -> data + offset		106534	1		+			
ANR	107644	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107645	PtrMemberAccess	server -> buf		106534	0					
ANR	107646	Identifier	server		106534	0					
ANR	107647	Identifier	buf		106534	1					
ANR	107648	Identifier	data		106534	1					
ANR	107649	Identifier	offset		106534	1					
ANR	107650	Argument	host		106534	2					
ANR	107651	Identifier	host		106534	0					
ANR	107652	Argument	INET6_ADDRSTRLEN		106534	3					
ANR	107653	Identifier	INET6_ADDRSTRLEN		106534	0					
ANR	107654	ExpressionStatement	offset += in6_addr_len	831:16:26097:26119	106534	2	True				
ANR	107655	AssignmentExpression	offset += in6_addr_len		106534	0		+=			
ANR	107656	Identifier	offset		106534	0					
ANR	107657	Identifier	in6_addr_len		106534	1					
ANR	107658	ElseStatement	else		106534	0					
ANR	107659	CompoundStatement		180:19:7170:7170	106534	0					
ANR	107660	ExpressionStatement	"LOGE ( ""invalid header with addr type %d"" , atyp )"	833:16:26158:26204	106534	0	True				
ANR	107661	CallExpression	"LOGE ( ""invalid header with addr type %d"" , atyp )"		106534	0					
ANR	107662	Callee	LOGE		106534	0					
ANR	107663	Identifier	LOGE		106534	0					
ANR	107664	ArgumentList	"""invalid header with addr type %d"""		106534	1					
ANR	107665	Argument	"""invalid header with addr type %d"""		106534	0					
ANR	107666	PrimaryExpression	"""invalid header with addr type %d"""		106534	0					
ANR	107667	Argument	atyp		106534	1					
ANR	107668	Identifier	atyp		106534	0					
ANR	107669	ExpressionStatement	"report_addr ( server -> fd , MALFORMED , ""invalid length for ipv6 address"" )"	834:16:26222:26291	106534	1	True				
ANR	107670	CallExpression	"report_addr ( server -> fd , MALFORMED , ""invalid length for ipv6 address"" )"		106534	0					
ANR	107671	Callee	report_addr		106534	0					
ANR	107672	Identifier	report_addr		106534	0					
ANR	107673	ArgumentList	server -> fd		106534	1					
ANR	107674	Argument	server -> fd		106534	0					
ANR	107675	PtrMemberAccess	server -> fd		106534	0					
ANR	107676	Identifier	server		106534	0					
ANR	107677	Identifier	fd		106534	1					
ANR	107678	Argument	MALFORMED		106534	1					
ANR	107679	Identifier	MALFORMED		106534	0					
ANR	107680	Argument	"""invalid length for ipv6 address"""		106534	2					
ANR	107681	PrimaryExpression	"""invalid length for ipv6 address"""		106534	0					
ANR	107682	Statement	close_and_free_server	835:16:26309:26329	106534	2	True				
ANR	107683	Statement	(	835:37:26330:26330	106534	3	True				
ANR	107684	Statement	EV_A_	835:38:26331:26335	106534	4	True				
ANR	107685	Statement	server	835:44:26337:26342	106534	5	True				
ANR	107686	Statement	)	835:50:26343:26343	106534	6	True				
ANR	107687	ExpressionStatement		835:51:26344:26344	106534	7	True				
ANR	107688	ReturnStatement	return ;	836:16:26362:26368	106534	8	True				
ANR	107689	ExpressionStatement	addr -> sin6_port = * ( uint16_t * ) ( server -> buf -> data + offset )	838:12:26396:26456	106534	4	True				
ANR	107690	AssignmentExpression	addr -> sin6_port = * ( uint16_t * ) ( server -> buf -> data + offset )		106534	0		=			
ANR	107691	PtrMemberAccess	addr -> sin6_port		106534	0					
ANR	107692	Identifier	addr		106534	0					
ANR	107693	Identifier	sin6_port		106534	1					
ANR	107694	UnaryOperationExpression	* ( uint16_t * ) ( server -> buf -> data + offset )		106534	1					
ANR	107695	UnaryOperator	*		106534	0					
ANR	107696	CastExpression	( uint16_t * ) ( server -> buf -> data + offset )		106534	1					
ANR	107697	CastTarget	uint16_t *		106534	0					
ANR	107698	AdditiveExpression	server -> buf -> data + offset		106534	1		+			
ANR	107699	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107700	PtrMemberAccess	server -> buf		106534	0					
ANR	107701	Identifier	server		106534	0					
ANR	107702	Identifier	buf		106534	1					
ANR	107703	Identifier	data		106534	1					
ANR	107704	Identifier	offset		106534	1					
ANR	107705	ExpressionStatement	info . ai_family = AF_INET6	839:12:26470:26497	106534	5	True				
ANR	107706	AssignmentExpression	info . ai_family = AF_INET6		106534	0		=			
ANR	107707	MemberAccess	info . ai_family		106534	0					
ANR	107708	Identifier	info		106534	0					
ANR	107709	Identifier	ai_family		106534	1					
ANR	107710	Identifier	AF_INET6		106534	1					
ANR	107711	ExpressionStatement	info . ai_socktype = SOCK_STREAM	840:12:26511:26541	106534	6	True				
ANR	107712	AssignmentExpression	info . ai_socktype = SOCK_STREAM		106534	0		=			
ANR	107713	MemberAccess	info . ai_socktype		106534	0					
ANR	107714	Identifier	info		106534	0					
ANR	107715	Identifier	ai_socktype		106534	1					
ANR	107716	Identifier	SOCK_STREAM		106534	1					
ANR	107717	ExpressionStatement	info . ai_protocol = IPPROTO_TCP	841:12:26555:26585	106534	7	True				
ANR	107718	AssignmentExpression	info . ai_protocol = IPPROTO_TCP		106534	0		=			
ANR	107719	MemberAccess	info . ai_protocol		106534	0					
ANR	107720	Identifier	info		106534	0					
ANR	107721	Identifier	ai_protocol		106534	1					
ANR	107722	Identifier	IPPROTO_TCP		106534	1					
ANR	107723	ExpressionStatement	info . ai_addrlen = sizeof ( struct sockaddr_in6 )	842:12:26599:26645	106534	8	True				
ANR	107724	AssignmentExpression	info . ai_addrlen = sizeof ( struct sockaddr_in6 )		106534	0		=			
ANR	107725	MemberAccess	info . ai_addrlen		106534	0					
ANR	107726	Identifier	info		106534	0					
ANR	107727	Identifier	ai_addrlen		106534	1					
ANR	107728	SizeofExpression	sizeof ( struct sockaddr_in6 )		106534	1					
ANR	107729	Sizeof	sizeof		106534	0					
ANR	107730	SizeofOperand	struct sockaddr_in6		106534	1					
ANR	107731	ExpressionStatement	info . ai_addr = ( struct sockaddr * ) addr	843:12:26659:26701	106534	9	True				
ANR	107732	AssignmentExpression	info . ai_addr = ( struct sockaddr * ) addr		106534	0		=			
ANR	107733	MemberAccess	info . ai_addr		106534	0					
ANR	107734	Identifier	info		106534	0					
ANR	107735	Identifier	ai_addr		106534	1					
ANR	107736	CastExpression	( struct sockaddr * ) addr		106534	1					
ANR	107737	CastTarget	struct sockaddr *		106534	0					
ANR	107738	Identifier	addr		106534	1					
ANR	107739	IfStatement	if ( offset == 1 )		106534	10					
ANR	107740	Condition	offset == 1	846:12:26726:26736	106534	0	True				
ANR	107741	EqualityExpression	offset == 1		106534	0		==			
ANR	107742	Identifier	offset		106534	0					
ANR	107743	PrimaryExpression	1		106534	1					
ANR	107744	CompoundStatement		194:25:7769:7769	106534	1					
ANR	107745	ExpressionStatement	"report_addr ( server -> fd , MALFORMED , ""invalid address type"" )"	847:12:26753:26811	106534	0	True				
ANR	107746	CallExpression	"report_addr ( server -> fd , MALFORMED , ""invalid address type"" )"		106534	0					
ANR	107747	Callee	report_addr		106534	0					
ANR	107748	Identifier	report_addr		106534	0					
ANR	107749	ArgumentList	server -> fd		106534	1					
ANR	107750	Argument	server -> fd		106534	0					
ANR	107751	PtrMemberAccess	server -> fd		106534	0					
ANR	107752	Identifier	server		106534	0					
ANR	107753	Identifier	fd		106534	1					
ANR	107754	Argument	MALFORMED		106534	1					
ANR	107755	Identifier	MALFORMED		106534	0					
ANR	107756	Argument	"""invalid address type"""		106534	2					
ANR	107757	PrimaryExpression	"""invalid address type"""		106534	0					
ANR	107758	Statement	close_and_free_server	848:12:26825:26845	106534	1	True				
ANR	107759	Statement	(	848:33:26846:26846	106534	2	True				
ANR	107760	Statement	EV_A_	848:34:26847:26851	106534	3	True				
ANR	107761	Statement	server	848:40:26853:26858	106534	4	True				
ANR	107762	Statement	)	848:46:26859:26859	106534	5	True				
ANR	107763	ExpressionStatement		848:47:26860:26860	106534	6	True				
ANR	107764	ReturnStatement	return ;	849:12:26874:26880	106534	7	True				
ANR	107765	ExpressionStatement	port = ( * ( uint16_t * ) ( server -> buf -> data + offset ) )	852:8:26901:26951	106534	11	True				
ANR	107766	AssignmentExpression	port = ( * ( uint16_t * ) ( server -> buf -> data + offset ) )		106534	0		=			
ANR	107767	Identifier	port		106534	0					
ANR	107768	UnaryOperationExpression	* ( uint16_t * ) ( server -> buf -> data + offset )		106534	1					
ANR	107769	UnaryOperator	*		106534	0					
ANR	107770	CastExpression	( uint16_t * ) ( server -> buf -> data + offset )		106534	1					
ANR	107771	CastTarget	uint16_t *		106534	0					
ANR	107772	AdditiveExpression	server -> buf -> data + offset		106534	1		+			
ANR	107773	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107774	PtrMemberAccess	server -> buf		106534	0					
ANR	107775	Identifier	server		106534	0					
ANR	107776	Identifier	buf		106534	1					
ANR	107777	Identifier	data		106534	1					
ANR	107778	Identifier	offset		106534	1					
ANR	107779	ExpressionStatement	offset += 2	854:8:26962:26973	106534	12	True				
ANR	107780	AssignmentExpression	offset += 2		106534	0		+=			
ANR	107781	Identifier	offset		106534	0					
ANR	107782	PrimaryExpression	2		106534	1					
ANR	107783	IfStatement	if ( server -> buf -> len < offset )		106534	13					
ANR	107784	Condition	server -> buf -> len < offset	856:12:26988:27012	106534	0	True				
ANR	107785	RelationalExpression	server -> buf -> len < offset		106534	0		<			
ANR	107786	PtrMemberAccess	server -> buf -> len		106534	0					
ANR	107787	PtrMemberAccess	server -> buf		106534	0					
ANR	107788	Identifier	server		106534	0					
ANR	107789	Identifier	buf		106534	1					
ANR	107790	Identifier	len		106534	1					
ANR	107791	Identifier	offset		106534	1					
ANR	107792	CompoundStatement		204:39:8045:8045	106534	1					
ANR	107793	ExpressionStatement	"report_addr ( server -> fd , MALFORMED , ""invalid request length"" )"	857:12:27029:27089	106534	0	True				
ANR	107794	CallExpression	"report_addr ( server -> fd , MALFORMED , ""invalid request length"" )"		106534	0					
ANR	107795	Callee	report_addr		106534	0					
ANR	107796	Identifier	report_addr		106534	0					
ANR	107797	ArgumentList	server -> fd		106534	1					
ANR	107798	Argument	server -> fd		106534	0					
ANR	107799	PtrMemberAccess	server -> fd		106534	0					
ANR	107800	Identifier	server		106534	0					
ANR	107801	Identifier	fd		106534	1					
ANR	107802	Argument	MALFORMED		106534	1					
ANR	107803	Identifier	MALFORMED		106534	0					
ANR	107804	Argument	"""invalid request length"""		106534	2					
ANR	107805	PrimaryExpression	"""invalid request length"""		106534	0					
ANR	107806	Statement	close_and_free_server	858:12:27103:27123	106534	1	True				
ANR	107807	Statement	(	858:33:27124:27124	106534	2	True				
ANR	107808	Statement	EV_A_	858:34:27125:27129	106534	3	True				
ANR	107809	Statement	server	858:40:27131:27136	106534	4	True				
ANR	107810	Statement	)	858:46:27137:27137	106534	5	True				
ANR	107811	ExpressionStatement		858:47:27138:27138	106534	6	True				
ANR	107812	ReturnStatement	return ;	859:12:27152:27158	106534	7	True				
ANR	107813	ElseStatement	else		106534	0					
ANR	107814	CompoundStatement		208:15:8205:8205	106534	0					
ANR	107815	ExpressionStatement	server -> buf -> len -= offset	861:12:27189:27215	106534	0	True				
ANR	107816	AssignmentExpression	server -> buf -> len -= offset		106534	0		-=			
ANR	107817	PtrMemberAccess	server -> buf -> len		106534	0					
ANR	107818	PtrMemberAccess	server -> buf		106534	0					
ANR	107819	Identifier	server		106534	0					
ANR	107820	Identifier	buf		106534	1					
ANR	107821	Identifier	len		106534	1					
ANR	107822	Identifier	offset		106534	1					
ANR	107823	ExpressionStatement	"memmove ( server -> buf -> data , server -> buf -> data + offset , server -> buf -> len )"	862:12:27229:27301	106534	1	True				
ANR	107824	CallExpression	"memmove ( server -> buf -> data , server -> buf -> data + offset , server -> buf -> len )"		106534	0					
ANR	107825	Callee	memmove		106534	0					
ANR	107826	Identifier	memmove		106534	0					
ANR	107827	ArgumentList	server -> buf -> data		106534	1					
ANR	107828	Argument	server -> buf -> data		106534	0					
ANR	107829	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107830	PtrMemberAccess	server -> buf		106534	0					
ANR	107831	Identifier	server		106534	0					
ANR	107832	Identifier	buf		106534	1					
ANR	107833	Identifier	data		106534	1					
ANR	107834	Argument	server -> buf -> data + offset		106534	1					
ANR	107835	AdditiveExpression	server -> buf -> data + offset		106534	0		+			
ANR	107836	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107837	PtrMemberAccess	server -> buf		106534	0					
ANR	107838	Identifier	server		106534	0					
ANR	107839	Identifier	buf		106534	1					
ANR	107840	Identifier	data		106534	1					
ANR	107841	Identifier	offset		106534	1					
ANR	107842	Argument	server -> buf -> len		106534	2					
ANR	107843	PtrMemberAccess	server -> buf -> len		106534	0					
ANR	107844	PtrMemberAccess	server -> buf		106534	0					
ANR	107845	Identifier	server		106534	0					
ANR	107846	Identifier	buf		106534	1					
ANR	107847	Identifier	len		106534	1					
ANR	107848	IfStatement	if ( verbose )		106534	14					
ANR	107849	Condition	verbose	865:12:27326:27332	106534	0	True				
ANR	107850	Identifier	verbose		106534	0					
ANR	107851	CompoundStatement		213:21:8365:8365	106534	1					
ANR	107852	IfStatement	if ( ( atyp & ADDRTYPE_MASK ) == 4 )		106534	0					
ANR	107853	Condition	( atyp & ADDRTYPE_MASK ) == 4	866:16:27353:27379	106534	0	True				
ANR	107854	EqualityExpression	( atyp & ADDRTYPE_MASK ) == 4		106534	0		==			
ANR	107855	BitAndExpression	atyp & ADDRTYPE_MASK		106534	0		&			
ANR	107856	Identifier	atyp		106534	0					
ANR	107857	Identifier	ADDRTYPE_MASK		106534	1					
ANR	107858	PrimaryExpression	4		106534	1					
ANR	107859	ExpressionStatement	"LOGI ( ""connect to [%s]:%d"" , host , ntohs ( port ) )"	867:16:27398:27443	106534	1	True				
ANR	107860	CallExpression	"LOGI ( ""connect to [%s]:%d"" , host , ntohs ( port ) )"		106534	0					
ANR	107861	Callee	LOGI		106534	0					
ANR	107862	Identifier	LOGI		106534	0					
ANR	107863	ArgumentList	"""connect to [%s]:%d"""		106534	1					
ANR	107864	Argument	"""connect to [%s]:%d"""		106534	0					
ANR	107865	PrimaryExpression	"""connect to [%s]:%d"""		106534	0					
ANR	107866	Argument	host		106534	1					
ANR	107867	Identifier	host		106534	0					
ANR	107868	Argument	ntohs ( port )		106534	2					
ANR	107869	CallExpression	ntohs ( port )		106534	0					
ANR	107870	Callee	ntohs		106534	0					
ANR	107871	Identifier	ntohs		106534	0					
ANR	107872	ArgumentList	port		106534	1					
ANR	107873	Argument	port		106534	0					
ANR	107874	Identifier	port		106534	0					
ANR	107875	ElseStatement	else		106534	0					
ANR	107876	ExpressionStatement	"LOGI ( ""connect to %s:%d"" , host , ntohs ( port ) )"	869:16:27478:27521	106534	0	True				
ANR	107877	CallExpression	"LOGI ( ""connect to %s:%d"" , host , ntohs ( port ) )"		106534	0					
ANR	107878	Callee	LOGI		106534	0					
ANR	107879	Identifier	LOGI		106534	0					
ANR	107880	ArgumentList	"""connect to %s:%d"""		106534	1					
ANR	107881	Argument	"""connect to %s:%d"""		106534	0					
ANR	107882	PrimaryExpression	"""connect to %s:%d"""		106534	0					
ANR	107883	Argument	host		106534	1					
ANR	107884	Identifier	host		106534	0					
ANR	107885	Argument	ntohs ( port )		106534	2					
ANR	107886	CallExpression	ntohs ( port )		106534	0					
ANR	107887	Callee	ntohs		106534	0					
ANR	107888	Identifier	ntohs		106534	0					
ANR	107889	ArgumentList	port		106534	1					
ANR	107890	Argument	port		106534	0					
ANR	107891	Identifier	port		106534	0					
ANR	107892	IfStatement	if ( ! need_query )		106534	15					
ANR	107893	Condition	! need_query	872:12:27546:27556	106534	0	True				
ANR	107894	UnaryOperationExpression	! need_query		106534	0					
ANR	107895	UnaryOperator	!		106534	0					
ANR	107896	Identifier	need_query		106534	1					
ANR	107897	CompoundStatement		221:12:8603:8661	106534	1					
ANR	107898	IdentifierDeclStatement	"remote_t * remote = connect_to_remote ( EV_A_ & info , server ) ;"	873:12:27573:27631	106534	0	True				
ANR	107899	IdentifierDecl	"* remote = connect_to_remote ( EV_A_ & info , server )"		106534	0					
ANR	107900	IdentifierDeclType	remote_t *		106534	0					
ANR	107901	Identifier	remote		106534	1					
ANR	107902	AssignmentExpression	"* remote = connect_to_remote ( EV_A_ & info , server )"		106534	2		=			
ANR	107903	Identifier	remote		106534	0					
ANR	107904	CallExpression	"connect_to_remote ( EV_A_ & info , server )"		106534	1					
ANR	107905	Callee	connect_to_remote		106534	0					
ANR	107906	Identifier	connect_to_remote		106534	0					
ANR	107907	ArgumentList	EV_A_ & info		106534	1					
ANR	107908	Argument	EV_A_ & info		106534	0					
ANR	107909	BitAndExpression	EV_A_ & info		106534	0		&			
ANR	107910	Identifier	EV_A_		106534	0					
ANR	107911	Identifier	info		106534	1					
ANR	107912	Argument	server		106534	1					
ANR	107913	Identifier	server		106534	0					
ANR	107914	IfStatement	if ( remote == NULL )		106534	1					
ANR	107915	Condition	remote == NULL	875:16:27650:27663	106534	0	True				
ANR	107916	EqualityExpression	remote == NULL		106534	0		==			
ANR	107917	Identifier	remote		106534	0					
ANR	107918	Identifier	NULL		106534	1					
ANR	107919	CompoundStatement		223:32:8696:8696	106534	1					
ANR	107920	ExpressionStatement	"LOGE ( ""connect error"" )"	876:16:27684:27705	106534	0	True				
ANR	107921	CallExpression	"LOGE ( ""connect error"" )"		106534	0					
ANR	107922	Callee	LOGE		106534	0					
ANR	107923	Identifier	LOGE		106534	0					
ANR	107924	ArgumentList	"""connect error"""		106534	1					
ANR	107925	Argument	"""connect error"""		106534	0					
ANR	107926	PrimaryExpression	"""connect error"""		106534	0					
ANR	107927	Statement	close_and_free_server	877:16:27723:27743	106534	1	True				
ANR	107928	Statement	(	877:37:27744:27744	106534	2	True				
ANR	107929	Statement	EV_A_	877:38:27745:27749	106534	3	True				
ANR	107930	Statement	server	877:44:27751:27756	106534	4	True				
ANR	107931	Statement	)	877:50:27757:27757	106534	5	True				
ANR	107932	ExpressionStatement		877:51:27758:27758	106534	6	True				
ANR	107933	ReturnStatement	return ;	878:16:27776:27782	106534	7	True				
ANR	107934	ElseStatement	else		106534	0					
ANR	107935	CompoundStatement		227:19:8833:8833	106534	0					
ANR	107936	ExpressionStatement	server -> remote = remote	880:16:27821:27844	106534	0	True				
ANR	107937	AssignmentExpression	server -> remote = remote		106534	0		=			
ANR	107938	PtrMemberAccess	server -> remote		106534	0					
ANR	107939	Identifier	server		106534	0					
ANR	107940	Identifier	remote		106534	1					
ANR	107941	Identifier	remote		106534	1					
ANR	107942	ExpressionStatement	remote -> server = server	881:16:27862:27885	106534	1	True				
ANR	107943	AssignmentExpression	remote -> server = server		106534	0		=			
ANR	107944	PtrMemberAccess	remote -> server		106534	0					
ANR	107945	Identifier	remote		106534	0					
ANR	107946	Identifier	server		106534	1					
ANR	107947	Identifier	server		106534	1					
ANR	107948	IfStatement	if ( server -> buf -> len > 0 )		106534	2					
ANR	107949	Condition	server -> buf -> len > 0	884:20:27963:27982	106534	0	True				
ANR	107950	RelationalExpression	server -> buf -> len > 0		106534	0		>			
ANR	107951	PtrMemberAccess	server -> buf -> len		106534	0					
ANR	107952	PtrMemberAccess	server -> buf		106534	0					
ANR	107953	Identifier	server		106534	0					
ANR	107954	Identifier	buf		106534	1					
ANR	107955	Identifier	len		106534	1					
ANR	107956	PrimaryExpression	0		106534	1					
ANR	107957	CompoundStatement		232:42:9015:9015	106534	1					
ANR	107958	ExpressionStatement	"brealloc ( remote -> buf , server -> buf -> len , BUF_SIZE )"	885:20:28007:28056	106534	0	True				
ANR	107959	CallExpression	"brealloc ( remote -> buf , server -> buf -> len , BUF_SIZE )"		106534	0					
ANR	107960	Callee	brealloc		106534	0					
ANR	107961	Identifier	brealloc		106534	0					
ANR	107962	ArgumentList	remote -> buf		106534	1					
ANR	107963	Argument	remote -> buf		106534	0					
ANR	107964	PtrMemberAccess	remote -> buf		106534	0					
ANR	107965	Identifier	remote		106534	0					
ANR	107966	Identifier	buf		106534	1					
ANR	107967	Argument	server -> buf -> len		106534	1					
ANR	107968	PtrMemberAccess	server -> buf -> len		106534	0					
ANR	107969	PtrMemberAccess	server -> buf		106534	0					
ANR	107970	Identifier	server		106534	0					
ANR	107971	Identifier	buf		106534	1					
ANR	107972	Identifier	len		106534	1					
ANR	107973	Argument	BUF_SIZE		106534	2					
ANR	107974	Identifier	BUF_SIZE		106534	0					
ANR	107975	ExpressionStatement	"memcpy ( remote -> buf -> data , server -> buf -> data + server -> buf -> idx , server -> buf -> len )"	886:20:28078:28187	106534	1	True				
ANR	107976	CallExpression	"memcpy ( remote -> buf -> data , server -> buf -> data + server -> buf -> idx , server -> buf -> len )"		106534	0					
ANR	107977	Callee	memcpy		106534	0					
ANR	107978	Identifier	memcpy		106534	0					
ANR	107979	ArgumentList	remote -> buf -> data		106534	1					
ANR	107980	Argument	remote -> buf -> data		106534	0					
ANR	107981	PtrMemberAccess	remote -> buf -> data		106534	0					
ANR	107982	PtrMemberAccess	remote -> buf		106534	0					
ANR	107983	Identifier	remote		106534	0					
ANR	107984	Identifier	buf		106534	1					
ANR	107985	Identifier	data		106534	1					
ANR	107986	Argument	server -> buf -> data + server -> buf -> idx		106534	1					
ANR	107987	AdditiveExpression	server -> buf -> data + server -> buf -> idx		106534	0		+			
ANR	107988	PtrMemberAccess	server -> buf -> data		106534	0					
ANR	107989	PtrMemberAccess	server -> buf		106534	0					
ANR	107990	Identifier	server		106534	0					
ANR	107991	Identifier	buf		106534	1					
ANR	107992	Identifier	data		106534	1					
ANR	107993	PtrMemberAccess	server -> buf -> idx		106534	1					
ANR	107994	PtrMemberAccess	server -> buf		106534	0					
ANR	107995	Identifier	server		106534	0					
ANR	107996	Identifier	buf		106534	1					
ANR	107997	Identifier	idx		106534	1					
ANR	107998	Argument	server -> buf -> len		106534	2					
ANR	107999	PtrMemberAccess	server -> buf -> len		106534	0					
ANR	108000	PtrMemberAccess	server -> buf		106534	0					
ANR	108001	Identifier	server		106534	0					
ANR	108002	Identifier	buf		106534	1					
ANR	108003	Identifier	len		106534	1					
ANR	108004	ExpressionStatement	remote -> buf -> len = server -> buf -> len	888:20:28209:28244	106534	2	True				
ANR	108005	AssignmentExpression	remote -> buf -> len = server -> buf -> len		106534	0		=			
ANR	108006	PtrMemberAccess	remote -> buf -> len		106534	0					
ANR	108007	PtrMemberAccess	remote -> buf		106534	0					
ANR	108008	Identifier	remote		106534	0					
ANR	108009	Identifier	buf		106534	1					
ANR	108010	Identifier	len		106534	1					
ANR	108011	PtrMemberAccess	server -> buf -> len		106534	1					
ANR	108012	PtrMemberAccess	server -> buf		106534	0					
ANR	108013	Identifier	server		106534	0					
ANR	108014	Identifier	buf		106534	1					
ANR	108015	Identifier	len		106534	1					
ANR	108016	ExpressionStatement	remote -> buf -> idx = 0	889:20:28266:28286	106534	3	True				
ANR	108017	AssignmentExpression	remote -> buf -> idx = 0		106534	0		=			
ANR	108018	PtrMemberAccess	remote -> buf -> idx		106534	0					
ANR	108019	PtrMemberAccess	remote -> buf		106534	0					
ANR	108020	Identifier	remote		106534	0					
ANR	108021	Identifier	buf		106534	1					
ANR	108022	Identifier	idx		106534	1					
ANR	108023	PrimaryExpression	0		106534	1					
ANR	108024	ExpressionStatement	server -> buf -> len = 0	890:20:28308:28328	106534	4	True				
ANR	108025	AssignmentExpression	server -> buf -> len = 0		106534	0		=			
ANR	108026	PtrMemberAccess	server -> buf -> len		106534	0					
ANR	108027	PtrMemberAccess	server -> buf		106534	0					
ANR	108028	Identifier	server		106534	0					
ANR	108029	Identifier	buf		106534	1					
ANR	108030	Identifier	len		106534	1					
ANR	108031	PrimaryExpression	0		106534	1					
ANR	108032	ExpressionStatement	server -> buf -> idx = 0	891:20:28350:28370	106534	5	True				
ANR	108033	AssignmentExpression	server -> buf -> idx = 0		106534	0		=			
ANR	108034	PtrMemberAccess	server -> buf -> idx		106534	0					
ANR	108035	PtrMemberAccess	server -> buf		106534	0					
ANR	108036	Identifier	server		106534	0					
ANR	108037	Identifier	buf		106534	1					
ANR	108038	Identifier	idx		106534	1					
ANR	108039	PrimaryExpression	0		106534	1					
ANR	108040	ExpressionStatement	ev_io_stop ( EV_A_ & server_recv_ctx -> io )	895:16:28460:28499	106534	3	True				
ANR	108041	CallExpression	ev_io_stop ( EV_A_ & server_recv_ctx -> io )		106534	0					
ANR	108042	Callee	ev_io_stop		106534	0					
ANR	108043	Identifier	ev_io_stop		106534	0					
ANR	108044	ArgumentList	EV_A_ & server_recv_ctx -> io		106534	1					
ANR	108045	Argument	EV_A_ & server_recv_ctx -> io		106534	0					
ANR	108046	BitAndExpression	EV_A_ & server_recv_ctx -> io		106534	0		&			
ANR	108047	Identifier	EV_A_		106534	0					
ANR	108048	PtrMemberAccess	server_recv_ctx -> io		106534	1					
ANR	108049	Identifier	server_recv_ctx		106534	0					
ANR	108050	Identifier	io		106534	1					
ANR	108051	ExpressionStatement	ev_io_start ( EV_A_ & remote -> send_ctx -> io )	896:16:28517:28558	106534	4	True				
ANR	108052	CallExpression	ev_io_start ( EV_A_ & remote -> send_ctx -> io )		106534	0					
ANR	108053	Callee	ev_io_start		106534	0					
ANR	108054	Identifier	ev_io_start		106534	0					
ANR	108055	ArgumentList	EV_A_ & remote -> send_ctx -> io		106534	1					
ANR	108056	Argument	EV_A_ & remote -> send_ctx -> io		106534	0					
ANR	108057	BitAndExpression	EV_A_ & remote -> send_ctx -> io		106534	0		&			
ANR	108058	Identifier	EV_A_		106534	0					
ANR	108059	PtrMemberAccess	remote -> send_ctx -> io		106534	1					
ANR	108060	PtrMemberAccess	remote -> send_ctx		106534	0					
ANR	108061	Identifier	remote		106534	0					
ANR	108062	Identifier	send_ctx		106534	1					
ANR	108063	Identifier	io		106534	1					
ANR	108064	ElseStatement	else		106534	0					
ANR	108065	CompoundStatement		254:12:9908:10011	106534	0					
ANR	108066	IdentifierDeclStatement	query_t * query = ss_malloc ( sizeof ( query_t ) ) ;	899:12:28603:28646	106534	0	True				
ANR	108067	IdentifierDecl	* query = ss_malloc ( sizeof ( query_t ) )		106534	0					
ANR	108068	IdentifierDeclType	query_t *		106534	0					
ANR	108069	Identifier	query		106534	1					
ANR	108070	AssignmentExpression	* query = ss_malloc ( sizeof ( query_t ) )		106534	2		=			
ANR	108071	Identifier	query		106534	0					
ANR	108072	CallExpression	ss_malloc ( sizeof ( query_t ) )		106534	1					
ANR	108073	Callee	ss_malloc		106534	0					
ANR	108074	Identifier	ss_malloc		106534	0					
ANR	108075	ArgumentList	sizeof ( query_t )		106534	1					
ANR	108076	Argument	sizeof ( query_t )		106534	0					
ANR	108077	SizeofExpression	sizeof ( query_t )		106534	0					
ANR	108078	Sizeof	sizeof		106534	0					
ANR	108079	SizeofOperand	query_t		106534	1					
ANR	108080	ExpressionStatement	"memset ( query , 0 , sizeof ( query_t ) )"	900:12:28660:28693	106534	1	True				
ANR	108081	CallExpression	"memset ( query , 0 , sizeof ( query_t ) )"		106534	0					
ANR	108082	Callee	memset		106534	0					
ANR	108083	Identifier	memset		106534	0					
ANR	108084	ArgumentList	query		106534	1					
ANR	108085	Argument	query		106534	0					
ANR	108086	Identifier	query		106534	0					
ANR	108087	Argument	0		106534	1					
ANR	108088	PrimaryExpression	0		106534	0					
ANR	108089	Argument	sizeof ( query_t )		106534	2					
ANR	108090	SizeofExpression	sizeof ( query_t )		106534	0					
ANR	108091	Sizeof	sizeof		106534	0					
ANR	108092	SizeofOperand	query_t		106534	1					
ANR	108093	ExpressionStatement	query -> server = server	901:12:28707:28729	106534	2	True				
ANR	108094	AssignmentExpression	query -> server = server		106534	0		=			
ANR	108095	PtrMemberAccess	query -> server		106534	0					
ANR	108096	Identifier	query		106534	0					
ANR	108097	Identifier	server		106534	1					
ANR	108098	Identifier	server		106534	1					
ANR	108099	ExpressionStatement	server -> query = query	902:12:28743:28764	106534	3	True				
ANR	108100	AssignmentExpression	server -> query = query		106534	0		=			
ANR	108101	PtrMemberAccess	server -> query		106534	0					
ANR	108102	Identifier	server		106534	0					
ANR	108103	Identifier	query		106534	1					
ANR	108104	Identifier	query		106534	1					
ANR	108105	ExpressionStatement	"snprintf ( query -> hostname , 256 , ""%s"" , host )"	903:12:28778:28820	106534	4	True				
ANR	108106	CallExpression	"snprintf ( query -> hostname , 256 , ""%s"" , host )"		106534	0					
ANR	108107	Callee	snprintf		106534	0					
ANR	108108	Identifier	snprintf		106534	0					
ANR	108109	ArgumentList	query -> hostname		106534	1					
ANR	108110	Argument	query -> hostname		106534	0					
ANR	108111	PtrMemberAccess	query -> hostname		106534	0					
ANR	108112	Identifier	query		106534	0					
ANR	108113	Identifier	hostname		106534	1					
ANR	108114	Argument	256		106534	1					
ANR	108115	PrimaryExpression	256		106534	0					
ANR	108116	Argument	"""%s"""		106534	2					
ANR	108117	PrimaryExpression	"""%s"""		106534	0					
ANR	108118	Argument	host		106534	3					
ANR	108119	Identifier	host		106534	0					
ANR	108120	ExpressionStatement	server -> stage = STAGE_RESOLVE	905:12:28835:28864	106534	5	True				
ANR	108121	AssignmentExpression	server -> stage = STAGE_RESOLVE		106534	0		=			
ANR	108122	PtrMemberAccess	server -> stage		106534	0					
ANR	108123	Identifier	server		106534	0					
ANR	108124	Identifier	stage		106534	1					
ANR	108125	Identifier	STAGE_RESOLVE		106534	1					
ANR	108126	IdentifierDeclStatement	"struct resolv_query * q = resolv_start ( host , port , resolv_cb , resolv_free_cb , query ) ;"	906:12:28878:28981	106534	6	True				
ANR	108127	IdentifierDecl	"* q = resolv_start ( host , port , resolv_cb , resolv_free_cb , query )"		106534	0					
ANR	108128	IdentifierDeclType	struct resolv_query *		106534	0					
ANR	108129	Identifier	q		106534	1					
ANR	108130	AssignmentExpression	"* q = resolv_start ( host , port , resolv_cb , resolv_free_cb , query )"		106534	2		=			
ANR	108131	Identifier	q		106534	0					
ANR	108132	CallExpression	"resolv_start ( host , port , resolv_cb , resolv_free_cb , query )"		106534	1					
ANR	108133	Callee	resolv_start		106534	0					
ANR	108134	Identifier	resolv_start		106534	0					
ANR	108135	ArgumentList	host		106534	1					
ANR	108136	Argument	host		106534	0					
ANR	108137	Identifier	host		106534	0					
ANR	108138	Argument	port		106534	1					
ANR	108139	Identifier	port		106534	0					
ANR	108140	Argument	resolv_cb		106534	2					
ANR	108141	Identifier	resolv_cb		106534	0					
ANR	108142	Argument	resolv_free_cb		106534	3					
ANR	108143	Identifier	resolv_free_cb		106534	0					
ANR	108144	Argument	query		106534	4					
ANR	108145	Identifier	query		106534	0					
ANR	108146	IfStatement	if ( q == NULL )		106534	7					
ANR	108147	Condition	q == NULL	909:16:29000:29008	106534	0	True				
ANR	108148	EqualityExpression	q == NULL		106534	0		==			
ANR	108149	Identifier	q		106534	0					
ANR	108150	Identifier	NULL		106534	1					
ANR	108151	CompoundStatement		257:27:10041:10041	106534	1					
ANR	108152	IfStatement	if ( query != NULL )		106534	0					
ANR	108153	Condition	query != NULL	910:20:29033:29045	106534	0	True				
ANR	108154	EqualityExpression	query != NULL		106534	0		!=			
ANR	108155	Identifier	query		106534	0					
ANR	108156	Identifier	NULL		106534	1					
ANR	108157	ExpressionStatement	ss_free ( query )	910:35:29048:29062	106534	1	True				
ANR	108158	CallExpression	ss_free ( query )		106534	0					
ANR	108159	Callee	ss_free		106534	0					
ANR	108160	Identifier	ss_free		106534	0					
ANR	108161	ArgumentList	query		106534	1					
ANR	108162	Argument	query		106534	0					
ANR	108163	Identifier	query		106534	0					
ANR	108164	ExpressionStatement	server -> query = NULL	911:16:29080:29100	106534	1	True				
ANR	108165	AssignmentExpression	server -> query = NULL		106534	0		=			
ANR	108166	PtrMemberAccess	server -> query		106534	0					
ANR	108167	Identifier	server		106534	0					
ANR	108168	Identifier	query		106534	1					
ANR	108169	Identifier	NULL		106534	1					
ANR	108170	Statement	close_and_free_server	912:16:29118:29138	106534	2	True				
ANR	108171	Statement	(	912:37:29139:29139	106534	3	True				
ANR	108172	Statement	EV_A_	912:38:29140:29144	106534	4	True				
ANR	108173	Statement	server	912:44:29146:29151	106534	5	True				
ANR	108174	Statement	)	912:50:29152:29152	106534	6	True				
ANR	108175	ExpressionStatement		912:51:29153:29153	106534	7	True				
ANR	108176	ReturnStatement	return ;	913:16:29171:29177	106534	8	True				
ANR	108177	ExpressionStatement	ev_io_stop ( EV_A_ & server_recv_ctx -> io )	916:12:29206:29245	106534	8	True				
ANR	108178	CallExpression	ev_io_stop ( EV_A_ & server_recv_ctx -> io )		106534	0					
ANR	108179	Callee	ev_io_stop		106534	0					
ANR	108180	Identifier	ev_io_stop		106534	0					
ANR	108181	ArgumentList	EV_A_ & server_recv_ctx -> io		106534	1					
ANR	108182	Argument	EV_A_ & server_recv_ctx -> io		106534	0					
ANR	108183	BitAndExpression	EV_A_ & server_recv_ctx -> io		106534	0		&			
ANR	108184	Identifier	EV_A_		106534	0					
ANR	108185	PtrMemberAccess	server_recv_ctx -> io		106534	1					
ANR	108186	Identifier	server_recv_ctx		106534	0					
ANR	108187	Identifier	io		106534	1					
ANR	108188	ReturnStatement	return ;	919:8:29266:29272	106534	16	True				
ANR	108189	ExpressionStatement	"FATAL ( ""server context error"" )"	922:4:29313:29342	106534	12	True				
ANR	108190	CallExpression	"FATAL ( ""server context error"" )"		106534	0					
ANR	108191	Callee	FATAL		106534	0					
ANR	108192	Identifier	FATAL		106534	0					
ANR	108193	ArgumentList	"""server context error"""		106534	1					
ANR	108194	Argument	"""server context error"""		106534	0					
ANR	108195	PrimaryExpression	"""server context error"""		106534	0					
ANR	108196	ReturnType	static void		106534	1					
ANR	108197	Identifier	server_recv_cb		106534	2					
ANR	108198	ParameterList	"EV_P_ ev_io * w , int revents"		106534	3					
ANR	108199	Parameter	EV_P_ ev_io * w	652:15:18940:18953	106534	0	True				
ANR	108200	ParameterType	EV_P_ ev_io *		106534	0					
ANR	108201	Identifier	w		106534	1					
ANR	108202	Parameter	int revents	652:31:18956:18966	106534	1	True				
ANR	108203	ParameterType	int		106534	0					
ANR	108204	Identifier	revents		106534	1					
ANR	108205	CFGEntryNode	ENTRY		106534		True				
ANR	108206	CFGExitNode	EXIT		106534		True				
ANR	108207	Symbol	need_query		106534						
ANR	108208	Symbol	STAGE_RESOLVE		106534						
ANR	108209	Symbol	addr -> sin_family		106534						
ANR	108210	Symbol	server -> remote		106534						
ANR	108211	Symbol	addr -> sin_port		106534						
ANR	108212	Symbol	remote		106534						
ANR	108213	Symbol	server -> recv_ctx -> watcher		106534						
ANR	108214	Symbol	* ( struct in_addr * ) ( server -> buf -> data + offset )		106534						
ANR	108215	Symbol	info . ai_addrlen		106534						
ANR	108216	Symbol	remote -> buf		106534						
ANR	108217	Symbol	IPPROTO_TCP		106534						
ANR	108218	Symbol	outbound_block_match_host		106534						
ANR	108219	Symbol	* buf		106534						
ANR	108220	Symbol	errno		106534						
ANR	108221	Symbol	server -> buf -> data		106534						
ANR	108222	Symbol	* server -> buf		106534						
ANR	108223	Symbol	ip		106534						
ANR	108224	Symbol	* ( uint8_t * ) ( server -> buf -> data + offset )		106534						
ANR	108225	Symbol	AF_INET		106534						
ANR	108226	Symbol	crypto -> decrypt		106534						
ANR	108227	Symbol	remote -> send_ctx		106534						
ANR	108228	Symbol	info . ai_protocol		106534						
ANR	108229	Symbol	server -> buf -> idx		106534						
ANR	108230	Symbol	BUF_SIZE		106534						
ANR	108231	Symbol	* remote -> send_ctx		106534						
ANR	108232	Symbol	cork_ip_init		106534						
ANR	108233	Symbol	remote -> server		106534						
ANR	108234	Symbol	server		106534						
ANR	108235	Symbol	CRYPTO_ERROR		106534						
ANR	108236	Symbol	* server		106534						
ANR	108237	Symbol	server -> stage		106534						
ANR	108238	Symbol	* crypto		106534						
ANR	108239	Symbol	* * server -> buf		106534						
ANR	108240	Symbol	ip . version		106534						
ANR	108241	Symbol	buf -> len		106534						
ANR	108242	Symbol	remote -> buf -> data		106534						
ANR	108243	Symbol	connect_to_remote		106534						
ANR	108244	Symbol	info . ai_family		106534						
ANR	108245	Symbol	info . ai_addr		106534						
ANR	108246	Symbol	err		106534						
ANR	108247	Symbol	remote -> fd		106534						
ANR	108248	Symbol	EAGAIN		106534						
ANR	108249	Symbol	INET_ADDRSTRLEN		106534						
ANR	108250	Symbol	* remote -> buf		106534						
ANR	108251	Symbol	verbose		106534						
ANR	108252	Symbol	& ip		106534						
ANR	108253	Symbol	ntohs		106534						
ANR	108254	Symbol	q		106534						
ANR	108255	Symbol	buf		106534						
ANR	108256	Symbol	r		106534						
ANR	108257	Symbol	remote -> send_ctx -> io		106534						
ANR	108258	Symbol	s		106534						
ANR	108259	Symbol	server -> recv_ctx		106534						
ANR	108260	Symbol	w		106534						
ANR	108261	Symbol	EV_A_		106534						
ANR	108262	Symbol	EWOULDBLOCK		106534						
ANR	108263	Symbol	ss_malloc		106534						
ANR	108264	Symbol	* * server		106534						
ANR	108265	Symbol	addr -> sin6_port		106534						
ANR	108266	Symbol	& storage		106534						
ANR	108267	Symbol	tx		106534						
ANR	108268	Symbol	revents		106534						
ANR	108269	Symbol	addr -> sin6_family		106534						
ANR	108270	Symbol	validate_hostname		106534						
ANR	108271	Symbol	ADDRTYPE_MASK		106534						
ANR	108272	Symbol	resolv_cb		106534						
ANR	108273	Symbol	acl		106534						
ANR	108274	Symbol	server -> frag		106534						
ANR	108275	Symbol	MALFORMED		106534						
ANR	108276	Symbol	host		106534						
ANR	108277	Symbol	server_recv_ctx -> io		106534						
ANR	108278	Symbol	server_recv_ctx		106534						
ANR	108279	Symbol	* query		106534						
ANR	108280	Symbol	query -> server		106534						
ANR	108281	Symbol	info		106534						
ANR	108282	Symbol	query -> hostname		106534						
ANR	108283	Symbol	NULL		106534						
ANR	108284	Symbol	offset		106534						
ANR	108285	Symbol	& info		106534						
ANR	108286	Symbol	* server_recv_ctx		106534						
ANR	108287	Symbol	* ( uint16_t * ) ( server -> buf -> data + offset )		106534						
ANR	108288	Symbol	server -> fd		106534						
ANR	108289	Symbol	atyp		106534						
ANR	108290	Symbol	query		106534						
ANR	108291	Symbol	* * remote		106534						
ANR	108292	Symbol	remote -> buf -> idx		106534						
ANR	108293	Symbol	crypto		106534						
ANR	108294	Symbol	addr -> sin_addr		106534						
ANR	108295	Symbol	buf -> data		106534						
ANR	108296	Symbol	server -> d_ctx		106534						
ANR	108297	Symbol	port		106534						
ANR	108298	Symbol	STAGE_INIT		106534						
ANR	108299	Symbol	MAX_FRAG		106534						
ANR	108300	Symbol	* offset		106534						
ANR	108301	Symbol	in_addr_len		106534						
ANR	108302	Symbol	* addr		106534						
ANR	108303	Symbol	send		106534						
ANR	108304	Symbol	* server -> buf -> data		106534						
ANR	108305	Symbol	& addr -> sin6_addr		106534						
ANR	108306	Symbol	addr -> sin6_addr		106534						
ANR	108307	Symbol	CRYPTO_NEED_MORE		106534						
ANR	108308	Symbol	in6_addr_len		106534						
ANR	108309	Symbol	storage		106534						
ANR	108310	Symbol	STAGE_STREAM		106534						
ANR	108311	Symbol	server -> buf -> len		106534						
ANR	108312	Symbol	SOCK_STREAM		106534						
ANR	108313	Symbol	recv		106534						
ANR	108314	Symbol	remote -> buf -> len		106534						
ANR	108315	Symbol	server_recv_ctx -> server		106534						
ANR	108316	Symbol	& addr -> sin_addr		106534						
ANR	108317	Symbol	name_len		106534						
ANR	108318	Symbol	addr		106534						
ANR	108319	Symbol	MALICIOUS		106534						
ANR	108320	Symbol	resolv_free_cb		106534						
ANR	108321	Symbol	INET6_ADDRSTRLEN		106534						
ANR	108322	Symbol	AF_INET6		106534						
ANR	108323	Symbol	info . ai_socktype		106534						
ANR	108324	Symbol	server -> buf		106534						
ANR	108325	Symbol	* * * server		106534						
ANR	108326	Symbol	resolv_start		106534						
ANR	108327	Symbol	* server -> recv_ctx		106534						
ANR	108328	Symbol	server -> query		106534						
ANR	108329	Symbol	* ( struct in6_addr * ) ( server -> buf -> data + offset )		106534						
ANR	108330	Symbol	* remote		106534						
ANR	108331	Function	server_send_cb	925:0:29347:31107							
ANR	108332	FunctionDef	"server_send_cb (EV_P_ ev_io * w , int revents)"		108331	0					
ANR	108333	CompoundStatement		927:0:29403:31107	108331	0					
ANR	108334	IdentifierDeclStatement	server_ctx_t * server_send_ctx = ( server_ctx_t * ) w ;	928:4:29409:29458	108331	0	True				
ANR	108335	IdentifierDecl	* server_send_ctx = ( server_ctx_t * ) w		108331	0					
ANR	108336	IdentifierDeclType	server_ctx_t *		108331	0					
ANR	108337	Identifier	server_send_ctx		108331	1					
ANR	108338	AssignmentExpression	* server_send_ctx = ( server_ctx_t * ) w		108331	2		=			
ANR	108339	Identifier	server_send_ctx		108331	0					
ANR	108340	CastExpression	( server_ctx_t * ) w		108331	1					
ANR	108341	CastTarget	server_ctx_t *		108331	0					
ANR	108342	Identifier	w		108331	1					
ANR	108343	IdentifierDeclStatement	server_t * server = server_send_ctx -> server ;	929:4:29464:29519	108331	1	True				
ANR	108344	IdentifierDecl	* server = server_send_ctx -> server		108331	0					
ANR	108345	IdentifierDeclType	server_t *		108331	0					
ANR	108346	Identifier	server		108331	1					
ANR	108347	AssignmentExpression	* server = server_send_ctx -> server		108331	2		=			
ANR	108348	Identifier	server		108331	0					
ANR	108349	PtrMemberAccess	server_send_ctx -> server		108331	1					
ANR	108350	Identifier	server_send_ctx		108331	0					
ANR	108351	Identifier	server		108331	1					
ANR	108352	IdentifierDeclStatement	remote_t * remote = server -> remote ;	930:4:29525:29571	108331	2	True				
ANR	108353	IdentifierDecl	* remote = server -> remote		108331	0					
ANR	108354	IdentifierDeclType	remote_t *		108331	0					
ANR	108355	Identifier	remote		108331	1					
ANR	108356	AssignmentExpression	* remote = server -> remote		108331	2		=			
ANR	108357	Identifier	remote		108331	0					
ANR	108358	PtrMemberAccess	server -> remote		108331	1					
ANR	108359	Identifier	server		108331	0					
ANR	108360	Identifier	remote		108331	1					
ANR	108361	IfStatement	if ( remote == NULL )		108331	3					
ANR	108362	Condition	remote == NULL	932:8:29582:29595	108331	0	True				
ANR	108363	EqualityExpression	remote == NULL		108331	0		==			
ANR	108364	Identifier	remote		108331	0					
ANR	108365	Identifier	NULL		108331	1					
ANR	108366	CompoundStatement		6:24:194:194	108331	1					
ANR	108367	ExpressionStatement	"LOGE ( ""invalid server"" )"	933:8:29608:29630	108331	0	True				
ANR	108368	CallExpression	"LOGE ( ""invalid server"" )"		108331	0					
ANR	108369	Callee	LOGE		108331	0					
ANR	108370	Identifier	LOGE		108331	0					
ANR	108371	ArgumentList	"""invalid server"""		108331	1					
ANR	108372	Argument	"""invalid server"""		108331	0					
ANR	108373	PrimaryExpression	"""invalid server"""		108331	0					
ANR	108374	Statement	close_and_free_server	934:8:29640:29660	108331	1	True				
ANR	108375	Statement	(	934:29:29661:29661	108331	2	True				
ANR	108376	Statement	EV_A_	934:30:29662:29666	108331	3	True				
ANR	108377	Statement	server	934:36:29668:29673	108331	4	True				
ANR	108378	Statement	)	934:42:29674:29674	108331	5	True				
ANR	108379	ExpressionStatement		934:43:29675:29675	108331	6	True				
ANR	108380	ReturnStatement	return ;	935:8:29685:29691	108331	7	True				
ANR	108381	IfStatement	if ( server -> buf -> len == 0 )		108331	4					
ANR	108382	Condition	server -> buf -> len == 0	938:8:29708:29728	108331	0	True				
ANR	108383	EqualityExpression	server -> buf -> len == 0		108331	0		==			
ANR	108384	PtrMemberAccess	server -> buf -> len		108331	0					
ANR	108385	PtrMemberAccess	server -> buf		108331	0					
ANR	108386	Identifier	server		108331	0					
ANR	108387	Identifier	buf		108331	1					
ANR	108388	Identifier	len		108331	1					
ANR	108389	PrimaryExpression	0		108331	1					
ANR	108390	CompoundStatement		12:31:327:327	108331	1					
ANR	108391	IfStatement	if ( verbose )		108331	0					
ANR	108392	Condition	verbose	940:12:29771:29777	108331	0	True				
ANR	108393	Identifier	verbose		108331	0					
ANR	108394	CompoundStatement		14:21:376:376	108331	1					
ANR	108395	ExpressionStatement	"LOGI ( ""server_send close the connection"" )"	941:12:29794:29834	108331	0	True				
ANR	108396	CallExpression	"LOGI ( ""server_send close the connection"" )"		108331	0					
ANR	108397	Callee	LOGI		108331	0					
ANR	108398	Identifier	LOGI		108331	0					
ANR	108399	ArgumentList	"""server_send close the connection"""		108331	1					
ANR	108400	Argument	"""server_send close the connection"""		108331	0					
ANR	108401	PrimaryExpression	"""server_send close the connection"""		108331	0					
ANR	108402	Statement	close_and_free_remote	943:8:29854:29874	108331	1	True				
ANR	108403	Statement	(	943:29:29875:29875	108331	2	True				
ANR	108404	Statement	EV_A_	943:30:29876:29880	108331	3	True				
ANR	108405	Statement	remote	943:36:29882:29887	108331	4	True				
ANR	108406	Statement	)	943:42:29888:29888	108331	5	True				
ANR	108407	ExpressionStatement		943:43:29889:29889	108331	6	True				
ANR	108408	Statement	close_and_free_server	944:8:29899:29919	108331	7	True				
ANR	108409	Statement	(	944:29:29920:29920	108331	8	True				
ANR	108410	Statement	EV_A_	944:30:29921:29925	108331	9	True				
ANR	108411	Statement	server	944:36:29927:29932	108331	10	True				
ANR	108412	Statement	)	944:42:29933:29933	108331	11	True				
ANR	108413	ExpressionStatement		944:43:29934:29934	108331	12	True				
ANR	108414	ReturnStatement	return ;	945:8:29944:29950	108331	13	True				
ANR	108415	ElseStatement	else		108331	0					
ANR	108416	CompoundStatement		22:8:597:709	108331	0					
ANR	108417	IdentifierDeclStatement	"ssize_t s = send ( server -> fd , server -> buf -> data + server -> buf -> idx , server -> buf -> len , 0 ) ;"	948:8:30001:30113	108331	0	True				
ANR	108418	IdentifierDecl	"s = send ( server -> fd , server -> buf -> data + server -> buf -> idx , server -> buf -> len , 0 )"		108331	0					
ANR	108419	IdentifierDeclType	ssize_t		108331	0					
ANR	108420	Identifier	s		108331	1					
ANR	108421	AssignmentExpression	"s = send ( server -> fd , server -> buf -> data + server -> buf -> idx , server -> buf -> len , 0 )"		108331	2		=			
ANR	108422	Identifier	s		108331	0					
ANR	108423	CallExpression	"send ( server -> fd , server -> buf -> data + server -> buf -> idx , server -> buf -> len , 0 )"		108331	1					
ANR	108424	Callee	send		108331	0					
ANR	108425	Identifier	send		108331	0					
ANR	108426	ArgumentList	server -> fd		108331	1					
ANR	108427	Argument	server -> fd		108331	0					
ANR	108428	PtrMemberAccess	server -> fd		108331	0					
ANR	108429	Identifier	server		108331	0					
ANR	108430	Identifier	fd		108331	1					
ANR	108431	Argument	server -> buf -> data + server -> buf -> idx		108331	1					
ANR	108432	AdditiveExpression	server -> buf -> data + server -> buf -> idx		108331	0		+			
ANR	108433	PtrMemberAccess	server -> buf -> data		108331	0					
ANR	108434	PtrMemberAccess	server -> buf		108331	0					
ANR	108435	Identifier	server		108331	0					
ANR	108436	Identifier	buf		108331	1					
ANR	108437	Identifier	data		108331	1					
ANR	108438	PtrMemberAccess	server -> buf -> idx		108331	1					
ANR	108439	PtrMemberAccess	server -> buf		108331	0					
ANR	108440	Identifier	server		108331	0					
ANR	108441	Identifier	buf		108331	1					
ANR	108442	Identifier	idx		108331	1					
ANR	108443	Argument	server -> buf -> len		108331	2					
ANR	108444	PtrMemberAccess	server -> buf -> len		108331	0					
ANR	108445	PtrMemberAccess	server -> buf		108331	0					
ANR	108446	Identifier	server		108331	0					
ANR	108447	Identifier	buf		108331	1					
ANR	108448	Identifier	len		108331	1					
ANR	108449	Argument	0		108331	3					
ANR	108450	PrimaryExpression	0		108331	0					
ANR	108451	IfStatement	if ( s == - 1 )		108331	1					
ANR	108452	Condition	s == - 1	950:12:30127:30133	108331	0	True				
ANR	108453	EqualityExpression	s == - 1		108331	0		==			
ANR	108454	Identifier	s		108331	0					
ANR	108455	UnaryOperationExpression	- 1		108331	1					
ANR	108456	UnaryOperator	-		108331	0					
ANR	108457	PrimaryExpression	1		108331	1					
ANR	108458	CompoundStatement		24:21:732:732	108331	1					
ANR	108459	IfStatement	if ( errno != EAGAIN && errno != EWOULDBLOCK )		108331	0					
ANR	108460	Condition	errno != EAGAIN && errno != EWOULDBLOCK	951:16:30154:30192	108331	0	True				
ANR	108461	AndExpression	errno != EAGAIN && errno != EWOULDBLOCK		108331	0		&&			
ANR	108462	EqualityExpression	errno != EAGAIN		108331	0		!=			
ANR	108463	Identifier	errno		108331	0					
ANR	108464	Identifier	EAGAIN		108331	1					
ANR	108465	EqualityExpression	errno != EWOULDBLOCK		108331	1		!=			
ANR	108466	Identifier	errno		108331	0					
ANR	108467	Identifier	EWOULDBLOCK		108331	1					
ANR	108468	CompoundStatement		25:57:791:791	108331	1					
ANR	108469	ExpressionStatement	"ERROR ( ""server_send_send"" )"	952:16:30213:30238	108331	0	True				
ANR	108470	CallExpression	"ERROR ( ""server_send_send"" )"		108331	0					
ANR	108471	Callee	ERROR		108331	0					
ANR	108472	Identifier	ERROR		108331	0					
ANR	108473	ArgumentList	"""server_send_send"""		108331	1					
ANR	108474	Argument	"""server_send_send"""		108331	0					
ANR	108475	PrimaryExpression	"""server_send_send"""		108331	0					
ANR	108476	Statement	close_and_free_remote	953:16:30256:30276	108331	1	True				
ANR	108477	Statement	(	953:37:30277:30277	108331	2	True				
ANR	108478	Statement	EV_A_	953:38:30278:30282	108331	3	True				
ANR	108479	Statement	remote	953:44:30284:30289	108331	4	True				
ANR	108480	Statement	)	953:50:30290:30290	108331	5	True				
ANR	108481	ExpressionStatement		953:51:30291:30291	108331	6	True				
ANR	108482	Statement	close_and_free_server	954:16:30309:30329	108331	7	True				
ANR	108483	Statement	(	954:37:30330:30330	108331	8	True				
ANR	108484	Statement	EV_A_	954:38:30331:30335	108331	9	True				
ANR	108485	Statement	server	954:44:30337:30342	108331	10	True				
ANR	108486	Statement	)	954:50:30343:30343	108331	11	True				
ANR	108487	ExpressionStatement		954:51:30344:30344	108331	12	True				
ANR	108488	ReturnStatement	return ;	956:12:30372:30378	108331	1	True				
ANR	108489	ElseStatement	else		108331	0					
ANR	108490	IfStatement	if ( s < server -> buf -> len )		108331	0					
ANR	108491	Condition	s < server -> buf -> len	957:19:30399:30418	108331	0	True				
ANR	108492	RelationalExpression	s < server -> buf -> len		108331	0		<			
ANR	108493	Identifier	s		108331	0					
ANR	108494	PtrMemberAccess	server -> buf -> len		108331	1					
ANR	108495	PtrMemberAccess	server -> buf		108331	0					
ANR	108496	Identifier	server		108331	0					
ANR	108497	Identifier	buf		108331	1					
ANR	108498	Identifier	len		108331	1					
ANR	108499	CompoundStatement		31:41:1017:1017	108331	1					
ANR	108500	ExpressionStatement	server -> buf -> len -= s	959:12:30507:30528	108331	0	True				
ANR	108501	AssignmentExpression	server -> buf -> len -= s		108331	0		-=			
ANR	108502	PtrMemberAccess	server -> buf -> len		108331	0					
ANR	108503	PtrMemberAccess	server -> buf		108331	0					
ANR	108504	Identifier	server		108331	0					
ANR	108505	Identifier	buf		108331	1					
ANR	108506	Identifier	len		108331	1					
ANR	108507	Identifier	s		108331	1					
ANR	108508	ExpressionStatement	server -> buf -> idx += s	960:12:30542:30563	108331	1	True				
ANR	108509	AssignmentExpression	server -> buf -> idx += s		108331	0		+=			
ANR	108510	PtrMemberAccess	server -> buf -> idx		108331	0					
ANR	108511	PtrMemberAccess	server -> buf		108331	0					
ANR	108512	Identifier	server		108331	0					
ANR	108513	Identifier	buf		108331	1					
ANR	108514	Identifier	idx		108331	1					
ANR	108515	Identifier	s		108331	1					
ANR	108516	ReturnStatement	return ;	961:12:30577:30583	108331	2	True				
ANR	108517	ElseStatement	else		108331	0					
ANR	108518	CompoundStatement		36:15:1196:1196	108331	0					
ANR	108519	ExpressionStatement	server -> buf -> len = 0	964:12:30660:30680	108331	0	True				
ANR	108520	AssignmentExpression	server -> buf -> len = 0		108331	0		=			
ANR	108521	PtrMemberAccess	server -> buf -> len		108331	0					
ANR	108522	PtrMemberAccess	server -> buf		108331	0					
ANR	108523	Identifier	server		108331	0					
ANR	108524	Identifier	buf		108331	1					
ANR	108525	Identifier	len		108331	1					
ANR	108526	PrimaryExpression	0		108331	1					
ANR	108527	ExpressionStatement	server -> buf -> idx = 0	965:12:30694:30714	108331	1	True				
ANR	108528	AssignmentExpression	server -> buf -> idx = 0		108331	0		=			
ANR	108529	PtrMemberAccess	server -> buf -> idx		108331	0					
ANR	108530	PtrMemberAccess	server -> buf		108331	0					
ANR	108531	Identifier	server		108331	0					
ANR	108532	Identifier	buf		108331	1					
ANR	108533	Identifier	idx		108331	1					
ANR	108534	PrimaryExpression	0		108331	1					
ANR	108535	ExpressionStatement	ev_io_stop ( EV_A_ & server_send_ctx -> io )	966:12:30728:30767	108331	2	True				
ANR	108536	CallExpression	ev_io_stop ( EV_A_ & server_send_ctx -> io )		108331	0					
ANR	108537	Callee	ev_io_stop		108331	0					
ANR	108538	Identifier	ev_io_stop		108331	0					
ANR	108539	ArgumentList	EV_A_ & server_send_ctx -> io		108331	1					
ANR	108540	Argument	EV_A_ & server_send_ctx -> io		108331	0					
ANR	108541	BitAndExpression	EV_A_ & server_send_ctx -> io		108331	0		&			
ANR	108542	Identifier	EV_A_		108331	0					
ANR	108543	PtrMemberAccess	server_send_ctx -> io		108331	1					
ANR	108544	Identifier	server_send_ctx		108331	0					
ANR	108545	Identifier	io		108331	1					
ANR	108546	IfStatement	if ( remote != NULL )		108331	3					
ANR	108547	Condition	remote != NULL	967:16:30785:30798	108331	0	True				
ANR	108548	EqualityExpression	remote != NULL		108331	0		!=			
ANR	108549	Identifier	remote		108331	0					
ANR	108550	Identifier	NULL		108331	1					
ANR	108551	CompoundStatement		41:32:1397:1397	108331	1					
ANR	108552	ExpressionStatement	ev_io_start ( EV_A_ & remote -> recv_ctx -> io )	968:16:30819:30860	108331	0	True				
ANR	108553	CallExpression	ev_io_start ( EV_A_ & remote -> recv_ctx -> io )		108331	0					
ANR	108554	Callee	ev_io_start		108331	0					
ANR	108555	Identifier	ev_io_start		108331	0					
ANR	108556	ArgumentList	EV_A_ & remote -> recv_ctx -> io		108331	1					
ANR	108557	Argument	EV_A_ & remote -> recv_ctx -> io		108331	0					
ANR	108558	BitAndExpression	EV_A_ & remote -> recv_ctx -> io		108331	0		&			
ANR	108559	Identifier	EV_A_		108331	0					
ANR	108560	PtrMemberAccess	remote -> recv_ctx -> io		108331	1					
ANR	108561	PtrMemberAccess	remote -> recv_ctx		108331	0					
ANR	108562	Identifier	remote		108331	0					
ANR	108563	Identifier	recv_ctx		108331	1					
ANR	108564	Identifier	io		108331	1					
ANR	108565	ReturnStatement	return ;	969:16:30878:30884	108331	1	True				
ANR	108566	ElseStatement	else		108331	0					
ANR	108567	CompoundStatement		44:19:1501:1501	108331	0					
ANR	108568	ExpressionStatement	"LOGE ( ""invalid remote"" )"	971:16:30923:30945	108331	0	True				
ANR	108569	CallExpression	"LOGE ( ""invalid remote"" )"		108331	0					
ANR	108570	Callee	LOGE		108331	0					
ANR	108571	Identifier	LOGE		108331	0					
ANR	108572	ArgumentList	"""invalid remote"""		108331	1					
ANR	108573	Argument	"""invalid remote"""		108331	0					
ANR	108574	PrimaryExpression	"""invalid remote"""		108331	0					
ANR	108575	Statement	close_and_free_remote	972:16:30963:30983	108331	1	True				
ANR	108576	Statement	(	972:37:30984:30984	108331	2	True				
ANR	108577	Statement	EV_A_	972:38:30985:30989	108331	3	True				
ANR	108578	Statement	remote	972:44:30991:30996	108331	4	True				
ANR	108579	Statement	)	972:50:30997:30997	108331	5	True				
ANR	108580	ExpressionStatement		972:51:30998:30998	108331	6	True				
ANR	108581	Statement	close_and_free_server	973:16:31016:31036	108331	7	True				
ANR	108582	Statement	(	973:37:31037:31037	108331	8	True				
ANR	108583	Statement	EV_A_	973:38:31038:31042	108331	9	True				
ANR	108584	Statement	server	973:44:31044:31049	108331	10	True				
ANR	108585	Statement	)	973:50:31050:31050	108331	11	True				
ANR	108586	ExpressionStatement		973:51:31051:31051	108331	12	True				
ANR	108587	ReturnStatement	return ;	974:16:31069:31075	108331	13	True				
ANR	108588	ReturnType	static void		108331	1					
ANR	108589	Identifier	server_send_cb		108331	2					
ANR	108590	ParameterList	"EV_P_ ev_io * w , int revents"		108331	3					
ANR	108591	Parameter	EV_P_ ev_io * w	926:15:29374:29387	108331	0	True				
ANR	108592	ParameterType	EV_P_ ev_io *		108331	0					
ANR	108593	Identifier	w		108331	1					
ANR	108594	Parameter	int revents	926:31:29390:29400	108331	1	True				
ANR	108595	ParameterType	int		108331	0					
ANR	108596	Identifier	revents		108331	1					
ANR	108597	CFGEntryNode	ENTRY		108331		True				
ANR	108598	CFGExitNode	EXIT		108331		True				
ANR	108599	Symbol	server		108331						
ANR	108600	Symbol	* server		108331						
ANR	108601	Symbol	* remote -> recv_ctx		108331						
ANR	108602	Symbol	revents		108331						
ANR	108603	Symbol	remote -> recv_ctx -> io		108331						
ANR	108604	Symbol	server -> remote		108331						
ANR	108605	Symbol	server_send_ctx -> server		108331						
ANR	108606	Symbol	remote		108331						
ANR	108607	Symbol	server -> buf -> len		108331						
ANR	108608	Symbol	server_send_ctx		108331						
ANR	108609	Symbol	errno		108331						
ANR	108610	Symbol	NULL		108331						
ANR	108611	Symbol	remote -> recv_ctx		108331						
ANR	108612	Symbol	server -> buf -> data		108331						
ANR	108613	Symbol	* server -> buf		108331						
ANR	108614	Symbol	server -> fd		108331						
ANR	108615	Symbol	EAGAIN		108331						
ANR	108616	Symbol	* server_send_ctx		108331						
ANR	108617	Symbol	* * remote		108331						
ANR	108618	Symbol	server_send_ctx -> io		108331						
ANR	108619	Symbol	verbose		108331						
ANR	108620	Symbol	s		108331						
ANR	108621	Symbol	server -> buf		108331						
ANR	108622	Symbol	w		108331						
ANR	108623	Symbol	server -> buf -> idx		108331						
ANR	108624	Symbol	EV_A_		108331						
ANR	108625	Symbol	EWOULDBLOCK		108331						
ANR	108626	Symbol	* * server		108331						
ANR	108627	Symbol	send		108331						
ANR	108628	Symbol	* remote		108331						
ANR	108629	Function	block_list_clear_cb	980:0:31110:31206							
ANR	108630	FunctionDef	"block_list_clear_cb (EV_P_ ev_timer * watcher , int revents)"		108629	0					
ANR	108631	CompoundStatement		982:0:31180:31206	108629	0					
ANR	108632	ExpressionStatement	clear_block_list ( )	983:4:31186:31204	108629	0	True				
ANR	108633	CallExpression	clear_block_list ( )		108629	0					
ANR	108634	Callee	clear_block_list		108629	0					
ANR	108635	Identifier	clear_block_list		108629	0					
ANR	108636	ArgumentList			108629	1					
ANR	108637	ReturnType	static void		108629	1					
ANR	108638	Identifier	block_list_clear_cb		108629	2					
ANR	108639	ParameterList	"EV_P_ ev_timer * watcher , int revents"		108629	3					
ANR	108640	Parameter	EV_P_ ev_timer * watcher	981:20:31142:31164	108629	0	True				
ANR	108641	ParameterType	EV_P_ ev_timer *		108629	0					
ANR	108642	Identifier	watcher		108629	1					
ANR	108643	Parameter	int revents	981:45:31167:31177	108629	1	True				
ANR	108644	ParameterType	int		108629	0					
ANR	108645	Identifier	revents		108629	1					
ANR	108646	CFGEntryNode	ENTRY		108629		True				
ANR	108647	CFGExitNode	EXIT		108629		True				
ANR	108648	Symbol	watcher		108629						
ANR	108649	Symbol	revents		108629						
ANR	108650	Function	server_timeout_cb	986:0:31209:31600							
ANR	108651	FunctionDef	"server_timeout_cb (EV_P_ ev_timer * watcher , int revents)"		108650	0					
ANR	108652	CompoundStatement		988:0:31277:31600	108650	0					
ANR	108653	IdentifierDeclStatement	"server_ctx_t * server_ctx = cork_container_of ( watcher , server_ctx_t , watcher ) ;"	989:4:31283:31367	108650	0	True				
ANR	108654	IdentifierDecl	"* server_ctx = cork_container_of ( watcher , server_ctx_t , watcher )"		108650	0					
ANR	108655	IdentifierDeclType	server_ctx_t *		108650	0					
ANR	108656	Identifier	server_ctx		108650	1					
ANR	108657	AssignmentExpression	"* server_ctx = cork_container_of ( watcher , server_ctx_t , watcher )"		108650	2		=			
ANR	108658	Identifier	server_ctx		108650	0					
ANR	108659	CallExpression	"cork_container_of ( watcher , server_ctx_t , watcher )"		108650	1					
ANR	108660	Callee	cork_container_of		108650	0					
ANR	108661	Identifier	cork_container_of		108650	0					
ANR	108662	ArgumentList	watcher		108650	1					
ANR	108663	Argument	watcher		108650	0					
ANR	108664	Identifier	watcher		108650	0					
ANR	108665	Argument	server_ctx_t		108650	1					
ANR	108666	Identifier	server_ctx_t		108650	0					
ANR	108667	Argument	watcher		108650	2					
ANR	108668	Identifier	watcher		108650	0					
ANR	108669	IdentifierDeclStatement	server_t * server = server_ctx -> server ;	991:4:31373:31410	108650	1	True				
ANR	108670	IdentifierDecl	* server = server_ctx -> server		108650	0					
ANR	108671	IdentifierDeclType	server_t *		108650	0					
ANR	108672	Identifier	server		108650	1					
ANR	108673	AssignmentExpression	* server = server_ctx -> server		108650	2		=			
ANR	108674	Identifier	server		108650	0					
ANR	108675	PtrMemberAccess	server_ctx -> server		108650	1					
ANR	108676	Identifier	server_ctx		108650	0					
ANR	108677	Identifier	server		108650	1					
ANR	108678	IdentifierDeclStatement	remote_t * remote = server -> remote ;	992:4:31416:31449	108650	2	True				
ANR	108679	IdentifierDecl	* remote = server -> remote		108650	0					
ANR	108680	IdentifierDeclType	remote_t *		108650	0					
ANR	108681	Identifier	remote		108650	1					
ANR	108682	AssignmentExpression	* remote = server -> remote		108650	2		=			
ANR	108683	Identifier	remote		108650	0					
ANR	108684	PtrMemberAccess	server -> remote		108650	1					
ANR	108685	Identifier	server		108650	0					
ANR	108686	Identifier	remote		108650	1					
ANR	108687	IfStatement	if ( verbose )		108650	3					
ANR	108688	Condition	verbose	994:8:31460:31466	108650	0	True				
ANR	108689	Identifier	verbose		108650	0					
ANR	108690	CompoundStatement		7:17:191:191	108650	1					
ANR	108691	ExpressionStatement	"LOGI ( ""TCP connection timeout"" )"	995:8:31479:31509	108650	0	True				
ANR	108692	CallExpression	"LOGI ( ""TCP connection timeout"" )"		108650	0					
ANR	108693	Callee	LOGI		108650	0					
ANR	108694	Identifier	LOGI		108650	0					
ANR	108695	ArgumentList	"""TCP connection timeout"""		108650	1					
ANR	108696	Argument	"""TCP connection timeout"""		108650	0					
ANR	108697	PrimaryExpression	"""TCP connection timeout"""		108650	0					
ANR	108698	Statement	close_and_free_remote	998:4:31522:31542	108650	4	True				
ANR	108699	Statement	(	998:25:31543:31543	108650	5	True				
ANR	108700	Statement	EV_A_	998:26:31544:31548	108650	6	True				
ANR	108701	Statement	remote	998:32:31550:31555	108650	7	True				
ANR	108702	Statement	)	998:38:31556:31556	108650	8	True				
ANR	108703	ExpressionStatement		998:39:31557:31557	108650	9	True				
ANR	108704	Statement	close_and_free_server	999:4:31563:31583	108650	10	True				
ANR	108705	Statement	(	999:25:31584:31584	108650	11	True				
ANR	108706	Statement	EV_A_	999:26:31585:31589	108650	12	True				
ANR	108707	Statement	server	999:32:31591:31596	108650	13	True				
ANR	108708	Statement	)	999:38:31597:31597	108650	14	True				
ANR	108709	ExpressionStatement		999:39:31598:31598	108650	15	True				
ANR	108710	ReturnType	static void		108650	1					
ANR	108711	Identifier	server_timeout_cb		108650	2					
ANR	108712	ParameterList	"EV_P_ ev_timer * watcher , int revents"		108650	3					
ANR	108713	Parameter	EV_P_ ev_timer * watcher	987:18:31239:31261	108650	0	True				
ANR	108714	ParameterType	EV_P_ ev_timer *		108650	0					
ANR	108715	Identifier	watcher		108650	1					
ANR	108716	Parameter	int revents	987:43:31264:31274	108650	1	True				
ANR	108717	ParameterType	int		108650	0					
ANR	108718	Identifier	revents		108650	1					
ANR	108719	CFGEntryNode	ENTRY		108650		True				
ANR	108720	CFGExitNode	EXIT		108650		True				
ANR	108721	Symbol	watcher		108650						
ANR	108722	Symbol	cork_container_of		108650						
ANR	108723	Symbol	server		108650						
ANR	108724	Symbol	* server		108650						
ANR	108725	Symbol	server_ctx		108650						
ANR	108726	Symbol	revents		108650						
ANR	108727	Symbol	server -> remote		108650						
ANR	108728	Symbol	server_ctx -> server		108650						
ANR	108729	Symbol	server_ctx_t		108650						
ANR	108730	Symbol	* server_ctx		108650						
ANR	108731	Symbol	remote		108650						
ANR	108732	Symbol	verbose		108650						
ANR	108733	Function	resolv_free_cb	1002:0:31603:31814							
ANR	108734	FunctionDef	resolv_free_cb (void * data)		108733	0					
ANR	108735	CompoundStatement		1004:0:31642:31814	108733	0					
ANR	108736	IdentifierDeclStatement	query_t * query = ( query_t * ) data ;	1005:4:31648:31680	108733	0	True				
ANR	108737	IdentifierDecl	* query = ( query_t * ) data		108733	0					
ANR	108738	IdentifierDeclType	query_t *		108733	0					
ANR	108739	Identifier	query		108733	1					
ANR	108740	AssignmentExpression	* query = ( query_t * ) data		108733	2		=			
ANR	108741	Identifier	query		108733	0					
ANR	108742	CastExpression	( query_t * ) data		108733	1					
ANR	108743	CastTarget	query_t *		108733	0					
ANR	108744	Identifier	data		108733	1					
ANR	108745	IfStatement	if ( query != NULL )		108733	1					
ANR	108746	Condition	query != NULL	1007:8:31691:31703	108733	0	True				
ANR	108747	EqualityExpression	query != NULL		108733	0		!=			
ANR	108748	Identifier	query		108733	0					
ANR	108749	Identifier	NULL		108733	1					
ANR	108750	CompoundStatement		4:23:63:63	108733	1					
ANR	108751	IfStatement	if ( query -> server != NULL )		108733	0					
ANR	108752	Condition	query -> server != NULL	1008:12:31720:31740	108733	0	True				
ANR	108753	EqualityExpression	query -> server != NULL		108733	0		!=			
ANR	108754	PtrMemberAccess	query -> server		108733	0					
ANR	108755	Identifier	query		108733	0					
ANR	108756	Identifier	server		108733	1					
ANR	108757	Identifier	NULL		108733	1					
ANR	108758	ExpressionStatement	query -> server -> query = NULL	1009:12:31755:31782	108733	1	True				
ANR	108759	AssignmentExpression	query -> server -> query = NULL		108733	0		=			
ANR	108760	PtrMemberAccess	query -> server -> query		108733	0					
ANR	108761	PtrMemberAccess	query -> server		108733	0					
ANR	108762	Identifier	query		108733	0					
ANR	108763	Identifier	server		108733	1					
ANR	108764	Identifier	query		108733	1					
ANR	108765	Identifier	NULL		108733	1					
ANR	108766	ExpressionStatement	ss_free ( query )	1010:8:31792:31806	108733	1	True				
ANR	108767	CallExpression	ss_free ( query )		108733	0					
ANR	108768	Callee	ss_free		108733	0					
ANR	108769	Identifier	ss_free		108733	0					
ANR	108770	ArgumentList	query		108733	1					
ANR	108771	Argument	query		108733	0					
ANR	108772	Identifier	query		108733	0					
ANR	108773	ReturnType	static void		108733	1					
ANR	108774	Identifier	resolv_free_cb		108733	2					
ANR	108775	ParameterList	void * data		108733	3					
ANR	108776	Parameter	void * data	1003:15:31630:31639	108733	0	True				
ANR	108777	ParameterType	void *		108733	0					
ANR	108778	Identifier	data		108733	1					
ANR	108779	CFGEntryNode	ENTRY		108733		True				
ANR	108780	CFGExitNode	EXIT		108733		True				
ANR	108781	Symbol	NULL		108733						
ANR	108782	Symbol	* * query		108733						
ANR	108783	Symbol	data		108733						
ANR	108784	Symbol	query		108733						
ANR	108785	Symbol	* query -> server		108733						
ANR	108786	Symbol	query -> server -> query		108733						
ANR	108787	Symbol	* query		108733						
ANR	108788	Symbol	query -> server		108733						
ANR	108789	Function	resolv_cb	1014:0:31817:33600							
ANR	108790	FunctionDef	"resolv_cb (struct sockaddr * addr , void * data)"		108789	0					
ANR	108791	CompoundStatement		1016:0:31874:33600	108789	0					
ANR	108792	IdentifierDeclStatement	query_t * query = ( query_t * ) data ;	1017:4:31880:31918	108789	0	True				
ANR	108793	IdentifierDecl	* query = ( query_t * ) data		108789	0					
ANR	108794	IdentifierDeclType	query_t *		108789	0					
ANR	108795	Identifier	query		108789	1					
ANR	108796	AssignmentExpression	* query = ( query_t * ) data		108789	2		=			
ANR	108797	Identifier	query		108789	0					
ANR	108798	CastExpression	( query_t * ) data		108789	1					
ANR	108799	CastTarget	query_t *		108789	0					
ANR	108800	Identifier	data		108789	1					
ANR	108801	IdentifierDeclStatement	server_t * server = query -> server ;	1018:4:31924:31960	108789	1	True				
ANR	108802	IdentifierDecl	* server = query -> server		108789	0					
ANR	108803	IdentifierDeclType	server_t *		108789	0					
ANR	108804	Identifier	server		108789	1					
ANR	108805	AssignmentExpression	* server = query -> server		108789	2		=			
ANR	108806	Identifier	server		108789	0					
ANR	108807	PtrMemberAccess	query -> server		108789	1					
ANR	108808	Identifier	query		108789	0					
ANR	108809	Identifier	server		108789	1					
ANR	108810	IfStatement	if ( server == NULL )		108789	2					
ANR	108811	Condition	server == NULL	1020:8:31971:31984	108789	0	True				
ANR	108812	EqualityExpression	server == NULL		108789	0		==			
ANR	108813	Identifier	server		108789	0					
ANR	108814	Identifier	NULL		108789	1					
ANR	108815	ReturnStatement	return ;	1020:24:31987:31993	108789	1	True				
ANR	108816	IdentifierDeclStatement	struct ev_loop * loop = server -> listen_ctx -> loop ;	1022:4:32000:32047	108789	3	True				
ANR	108817	IdentifierDecl	* loop = server -> listen_ctx -> loop		108789	0					
ANR	108818	IdentifierDeclType	struct ev_loop *		108789	0					
ANR	108819	Identifier	loop		108789	1					
ANR	108820	AssignmentExpression	* loop = server -> listen_ctx -> loop		108789	2		=			
ANR	108821	Identifier	loop		108789	0					
ANR	108822	PtrMemberAccess	server -> listen_ctx -> loop		108789	1					
ANR	108823	PtrMemberAccess	server -> listen_ctx		108789	0					
ANR	108824	Identifier	server		108789	0					
ANR	108825	Identifier	listen_ctx		108789	1					
ANR	108826	Identifier	loop		108789	1					
ANR	108827	IfStatement	if ( addr == NULL )		108789	4					
ANR	108828	Condition	addr == NULL	1024:8:32058:32069	108789	0	True				
ANR	108829	EqualityExpression	addr == NULL		108789	0		==			
ANR	108830	Identifier	addr		108789	0					
ANR	108831	Identifier	NULL		108789	1					
ANR	108832	CompoundStatement		9:22:197:197	108789	1					
ANR	108833	ExpressionStatement	"LOGE ( ""unable to resolve %s"" , query -> hostname )"	1025:8:32082:32127	108789	0	True				
ANR	108834	CallExpression	"LOGE ( ""unable to resolve %s"" , query -> hostname )"		108789	0					
ANR	108835	Callee	LOGE		108789	0					
ANR	108836	Identifier	LOGE		108789	0					
ANR	108837	ArgumentList	"""unable to resolve %s"""		108789	1					
ANR	108838	Argument	"""unable to resolve %s"""		108789	0					
ANR	108839	PrimaryExpression	"""unable to resolve %s"""		108789	0					
ANR	108840	Argument	query -> hostname		108789	1					
ANR	108841	PtrMemberAccess	query -> hostname		108789	0					
ANR	108842	Identifier	query		108789	0					
ANR	108843	Identifier	hostname		108789	1					
ANR	108844	Statement	close_and_free_server	1026:8:32137:32157	108789	1	True				
ANR	108845	Statement	(	1026:29:32158:32158	108789	2	True				
ANR	108846	Statement	EV_A_	1026:30:32159:32163	108789	3	True				
ANR	108847	Statement	server	1026:36:32165:32170	108789	4	True				
ANR	108848	Statement	)	1026:42:32171:32171	108789	5	True				
ANR	108849	ExpressionStatement		1026:43:32172:32172	108789	6	True				
ANR	108850	ElseStatement	else		108789	0					
ANR	108851	CompoundStatement		31:8:911:969	108789	0					
ANR	108852	IfStatement	if ( verbose )		108789	0					
ANR	108853	Condition	verbose	1028:12:32199:32205	108789	0	True				
ANR	108854	Identifier	verbose		108789	0					
ANR	108855	CompoundStatement		13:21:333:333	108789	1					
ANR	108856	ExpressionStatement	"LOGI ( ""successfully resolved %s"" , query -> hostname )"	1029:12:32222:32271	108789	0	True				
ANR	108857	CallExpression	"LOGI ( ""successfully resolved %s"" , query -> hostname )"		108789	0					
ANR	108858	Callee	LOGI		108789	0					
ANR	108859	Identifier	LOGI		108789	0					
ANR	108860	ArgumentList	"""successfully resolved %s"""		108789	1					
ANR	108861	Argument	"""successfully resolved %s"""		108789	0					
ANR	108862	PrimaryExpression	"""successfully resolved %s"""		108789	0					
ANR	108863	Argument	query -> hostname		108789	1					
ANR	108864	PtrMemberAccess	query -> hostname		108789	0					
ANR	108865	Identifier	query		108789	0					
ANR	108866	Identifier	hostname		108789	1					
ANR	108867	IdentifierDeclStatement	struct addrinfo info ;	1032:8:32292:32312	108789	1	True				
ANR	108868	IdentifierDecl	info		108789	0					
ANR	108869	IdentifierDeclType	struct addrinfo		108789	0					
ANR	108870	Identifier	info		108789	1					
ANR	108871	ExpressionStatement	"memset ( & info , 0 , sizeof ( struct addrinfo ) )"	1033:8:32322:32363	108789	2	True				
ANR	108872	CallExpression	"memset ( & info , 0 , sizeof ( struct addrinfo ) )"		108789	0					
ANR	108873	Callee	memset		108789	0					
ANR	108874	Identifier	memset		108789	0					
ANR	108875	ArgumentList	& info		108789	1					
ANR	108876	Argument	& info		108789	0					
ANR	108877	UnaryOperationExpression	& info		108789	0					
ANR	108878	UnaryOperator	&		108789	0					
ANR	108879	Identifier	info		108789	1					
ANR	108880	Argument	0		108789	1					
ANR	108881	PrimaryExpression	0		108789	0					
ANR	108882	Argument	sizeof ( struct addrinfo )		108789	2					
ANR	108883	SizeofExpression	sizeof ( struct addrinfo )		108789	0					
ANR	108884	Sizeof	sizeof		108789	0					
ANR	108885	SizeofOperand	struct addrinfo		108789	1					
ANR	108886	ExpressionStatement	info . ai_socktype = SOCK_STREAM	1034:8:32373:32403	108789	3	True				
ANR	108887	AssignmentExpression	info . ai_socktype = SOCK_STREAM		108789	0		=			
ANR	108888	MemberAccess	info . ai_socktype		108789	0					
ANR	108889	Identifier	info		108789	0					
ANR	108890	Identifier	ai_socktype		108789	1					
ANR	108891	Identifier	SOCK_STREAM		108789	1					
ANR	108892	ExpressionStatement	info . ai_protocol = IPPROTO_TCP	1035:8:32413:32443	108789	4	True				
ANR	108893	AssignmentExpression	info . ai_protocol = IPPROTO_TCP		108789	0		=			
ANR	108894	MemberAccess	info . ai_protocol		108789	0					
ANR	108895	Identifier	info		108789	0					
ANR	108896	Identifier	ai_protocol		108789	1					
ANR	108897	Identifier	IPPROTO_TCP		108789	1					
ANR	108898	ExpressionStatement	info . ai_addr = addr	1036:8:32453:32476	108789	5	True				
ANR	108899	AssignmentExpression	info . ai_addr = addr		108789	0		=			
ANR	108900	MemberAccess	info . ai_addr		108789	0					
ANR	108901	Identifier	info		108789	0					
ANR	108902	Identifier	ai_addr		108789	1					
ANR	108903	Identifier	addr		108789	1					
ANR	108904	IfStatement	if ( addr -> sa_family == AF_INET )		108789	6					
ANR	108905	Condition	addr -> sa_family == AF_INET	1038:12:32491:32516	108789	0	True				
ANR	108906	EqualityExpression	addr -> sa_family == AF_INET		108789	0		==			
ANR	108907	PtrMemberAccess	addr -> sa_family		108789	0					
ANR	108908	Identifier	addr		108789	0					
ANR	108909	Identifier	sa_family		108789	1					
ANR	108910	Identifier	AF_INET		108789	1					
ANR	108911	CompoundStatement		23:40:644:644	108789	1					
ANR	108912	ExpressionStatement	info . ai_family = AF_INET	1039:12:32533:32558	108789	0	True				
ANR	108913	AssignmentExpression	info . ai_family = AF_INET		108789	0		=			
ANR	108914	MemberAccess	info . ai_family		108789	0					
ANR	108915	Identifier	info		108789	0					
ANR	108916	Identifier	ai_family		108789	1					
ANR	108917	Identifier	AF_INET		108789	1					
ANR	108918	ExpressionStatement	info . ai_addrlen = sizeof ( struct sockaddr_in )	1040:12:32572:32616	108789	1	True				
ANR	108919	AssignmentExpression	info . ai_addrlen = sizeof ( struct sockaddr_in )		108789	0		=			
ANR	108920	MemberAccess	info . ai_addrlen		108789	0					
ANR	108921	Identifier	info		108789	0					
ANR	108922	Identifier	ai_addrlen		108789	1					
ANR	108923	SizeofExpression	sizeof ( struct sockaddr_in )		108789	1					
ANR	108924	Sizeof	sizeof		108789	0					
ANR	108925	SizeofOperand	struct sockaddr_in		108789	1					
ANR	108926	ElseStatement	else		108789	0					
ANR	108927	IfStatement	if ( addr -> sa_family == AF_INET6 )		108789	0					
ANR	108928	Condition	addr -> sa_family == AF_INET6	1041:19:32637:32663	108789	0	True				
ANR	108929	EqualityExpression	addr -> sa_family == AF_INET6		108789	0		==			
ANR	108930	PtrMemberAccess	addr -> sa_family		108789	0					
ANR	108931	Identifier	addr		108789	0					
ANR	108932	Identifier	sa_family		108789	1					
ANR	108933	Identifier	AF_INET6		108789	1					
ANR	108934	CompoundStatement		26:48:791:791	108789	1					
ANR	108935	ExpressionStatement	info . ai_family = AF_INET6	1042:12:32680:32706	108789	0	True				
ANR	108936	AssignmentExpression	info . ai_family = AF_INET6		108789	0		=			
ANR	108937	MemberAccess	info . ai_family		108789	0					
ANR	108938	Identifier	info		108789	0					
ANR	108939	Identifier	ai_family		108789	1					
ANR	108940	Identifier	AF_INET6		108789	1					
ANR	108941	ExpressionStatement	info . ai_addrlen = sizeof ( struct sockaddr_in6 )	1043:12:32720:32765	108789	1	True				
ANR	108942	AssignmentExpression	info . ai_addrlen = sizeof ( struct sockaddr_in6 )		108789	0		=			
ANR	108943	MemberAccess	info . ai_addrlen		108789	0					
ANR	108944	Identifier	info		108789	0					
ANR	108945	Identifier	ai_addrlen		108789	1					
ANR	108946	SizeofExpression	sizeof ( struct sockaddr_in6 )		108789	1					
ANR	108947	Sizeof	sizeof		108789	0					
ANR	108948	SizeofOperand	struct sockaddr_in6		108789	1					
ANR	108949	IdentifierDeclStatement	"remote_t * remote = connect_to_remote ( EV_A_ & info , server ) ;"	1046:8:32786:32844	108789	7	True				
ANR	108950	IdentifierDecl	"* remote = connect_to_remote ( EV_A_ & info , server )"		108789	0					
ANR	108951	IdentifierDeclType	remote_t *		108789	0					
ANR	108952	Identifier	remote		108789	1					
ANR	108953	AssignmentExpression	"* remote = connect_to_remote ( EV_A_ & info , server )"		108789	2		=			
ANR	108954	Identifier	remote		108789	0					
ANR	108955	CallExpression	"connect_to_remote ( EV_A_ & info , server )"		108789	1					
ANR	108956	Callee	connect_to_remote		108789	0					
ANR	108957	Identifier	connect_to_remote		108789	0					
ANR	108958	ArgumentList	EV_A_ & info		108789	1					
ANR	108959	Argument	EV_A_ & info		108789	0					
ANR	108960	BitAndExpression	EV_A_ & info		108789	0		&			
ANR	108961	Identifier	EV_A_		108789	0					
ANR	108962	Identifier	info		108789	1					
ANR	108963	Argument	server		108789	1					
ANR	108964	Identifier	server		108789	0					
ANR	108965	IfStatement	if ( remote == NULL )		108789	8					
ANR	108966	Condition	remote == NULL	1048:12:32859:32872	108789	0	True				
ANR	108967	EqualityExpression	remote == NULL		108789	0		==			
ANR	108968	Identifier	remote		108789	0					
ANR	108969	Identifier	NULL		108789	1					
ANR	108970	CompoundStatement		33:28:1000:1000	108789	1					
ANR	108971	Statement	close_and_free_server	1049:12:32889:32909	108789	0	True				
ANR	108972	Statement	(	1049:33:32910:32910	108789	1	True				
ANR	108973	Statement	EV_A_	1049:34:32911:32915	108789	2	True				
ANR	108974	Statement	server	1049:40:32917:32922	108789	3	True				
ANR	108975	Statement	)	1049:46:32923:32923	108789	4	True				
ANR	108976	ExpressionStatement		1049:47:32924:32924	108789	5	True				
ANR	108977	ElseStatement	else		108789	0					
ANR	108978	CompoundStatement		35:15:1066:1066	108789	0					
ANR	108979	ExpressionStatement	server -> remote = remote	1051:12:32955:32978	108789	0	True				
ANR	108980	AssignmentExpression	server -> remote = remote		108789	0		=			
ANR	108981	PtrMemberAccess	server -> remote		108789	0					
ANR	108982	Identifier	server		108789	0					
ANR	108983	Identifier	remote		108789	1					
ANR	108984	Identifier	remote		108789	1					
ANR	108985	ExpressionStatement	remote -> server = server	1052:12:32992:33015	108789	1	True				
ANR	108986	AssignmentExpression	remote -> server = server		108789	0		=			
ANR	108987	PtrMemberAccess	remote -> server		108789	0					
ANR	108988	Identifier	remote		108789	0					
ANR	108989	Identifier	server		108789	1					
ANR	108990	Identifier	server		108789	1					
ANR	108991	IfStatement	if ( server -> buf -> len > 0 )		108789	2					
ANR	108992	Condition	server -> buf -> len > 0	1055:16:33085:33104	108789	0	True				
ANR	108993	RelationalExpression	server -> buf -> len > 0		108789	0		>			
ANR	108994	PtrMemberAccess	server -> buf -> len		108789	0					
ANR	108995	PtrMemberAccess	server -> buf		108789	0					
ANR	108996	Identifier	server		108789	0					
ANR	108997	Identifier	buf		108789	1					
ANR	108998	Identifier	len		108789	1					
ANR	108999	PrimaryExpression	0		108789	1					
ANR	109000	CompoundStatement		40:38:1232:1232	108789	1					
ANR	109001	ExpressionStatement	"brealloc ( remote -> buf , server -> buf -> len , BUF_SIZE )"	1056:16:33125:33174	108789	0	True				
ANR	109002	CallExpression	"brealloc ( remote -> buf , server -> buf -> len , BUF_SIZE )"		108789	0					
ANR	109003	Callee	brealloc		108789	0					
ANR	109004	Identifier	brealloc		108789	0					
ANR	109005	ArgumentList	remote -> buf		108789	1					
ANR	109006	Argument	remote -> buf		108789	0					
ANR	109007	PtrMemberAccess	remote -> buf		108789	0					
ANR	109008	Identifier	remote		108789	0					
ANR	109009	Identifier	buf		108789	1					
ANR	109010	Argument	server -> buf -> len		108789	1					
ANR	109011	PtrMemberAccess	server -> buf -> len		108789	0					
ANR	109012	PtrMemberAccess	server -> buf		108789	0					
ANR	109013	Identifier	server		108789	0					
ANR	109014	Identifier	buf		108789	1					
ANR	109015	Identifier	len		108789	1					
ANR	109016	Argument	BUF_SIZE		108789	2					
ANR	109017	Identifier	BUF_SIZE		108789	0					
ANR	109018	ExpressionStatement	"memcpy ( remote -> buf -> data , server -> buf -> data + server -> buf -> idx , server -> buf -> len )"	1057:16:33192:33297	108789	1	True				
ANR	109019	CallExpression	"memcpy ( remote -> buf -> data , server -> buf -> data + server -> buf -> idx , server -> buf -> len )"		108789	0					
ANR	109020	Callee	memcpy		108789	0					
ANR	109021	Identifier	memcpy		108789	0					
ANR	109022	ArgumentList	remote -> buf -> data		108789	1					
ANR	109023	Argument	remote -> buf -> data		108789	0					
ANR	109024	PtrMemberAccess	remote -> buf -> data		108789	0					
ANR	109025	PtrMemberAccess	remote -> buf		108789	0					
ANR	109026	Identifier	remote		108789	0					
ANR	109027	Identifier	buf		108789	1					
ANR	109028	Identifier	data		108789	1					
ANR	109029	Argument	server -> buf -> data + server -> buf -> idx		108789	1					
ANR	109030	AdditiveExpression	server -> buf -> data + server -> buf -> idx		108789	0		+			
ANR	109031	PtrMemberAccess	server -> buf -> data		108789	0					
ANR	109032	PtrMemberAccess	server -> buf		108789	0					
ANR	109033	Identifier	server		108789	0					
ANR	109034	Identifier	buf		108789	1					
ANR	109035	Identifier	data		108789	1					
ANR	109036	PtrMemberAccess	server -> buf -> idx		108789	1					
ANR	109037	PtrMemberAccess	server -> buf		108789	0					
ANR	109038	Identifier	server		108789	0					
ANR	109039	Identifier	buf		108789	1					
ANR	109040	Identifier	idx		108789	1					
ANR	109041	Argument	server -> buf -> len		108789	2					
ANR	109042	PtrMemberAccess	server -> buf -> len		108789	0					
ANR	109043	PtrMemberAccess	server -> buf		108789	0					
ANR	109044	Identifier	server		108789	0					
ANR	109045	Identifier	buf		108789	1					
ANR	109046	Identifier	len		108789	1					
ANR	109047	ExpressionStatement	remote -> buf -> len = server -> buf -> len	1059:16:33315:33350	108789	2	True				
ANR	109048	AssignmentExpression	remote -> buf -> len = server -> buf -> len		108789	0		=			
ANR	109049	PtrMemberAccess	remote -> buf -> len		108789	0					
ANR	109050	PtrMemberAccess	remote -> buf		108789	0					
ANR	109051	Identifier	remote		108789	0					
ANR	109052	Identifier	buf		108789	1					
ANR	109053	Identifier	len		108789	1					
ANR	109054	PtrMemberAccess	server -> buf -> len		108789	1					
ANR	109055	PtrMemberAccess	server -> buf		108789	0					
ANR	109056	Identifier	server		108789	0					
ANR	109057	Identifier	buf		108789	1					
ANR	109058	Identifier	len		108789	1					
ANR	109059	ExpressionStatement	remote -> buf -> idx = 0	1060:16:33368:33388	108789	3	True				
ANR	109060	AssignmentExpression	remote -> buf -> idx = 0		108789	0		=			
ANR	109061	PtrMemberAccess	remote -> buf -> idx		108789	0					
ANR	109062	PtrMemberAccess	remote -> buf		108789	0					
ANR	109063	Identifier	remote		108789	0					
ANR	109064	Identifier	buf		108789	1					
ANR	109065	Identifier	idx		108789	1					
ANR	109066	PrimaryExpression	0		108789	1					
ANR	109067	ExpressionStatement	server -> buf -> len = 0	1061:16:33406:33426	108789	4	True				
ANR	109068	AssignmentExpression	server -> buf -> len = 0		108789	0		=			
ANR	109069	PtrMemberAccess	server -> buf -> len		108789	0					
ANR	109070	PtrMemberAccess	server -> buf		108789	0					
ANR	109071	Identifier	server		108789	0					
ANR	109072	Identifier	buf		108789	1					
ANR	109073	Identifier	len		108789	1					
ANR	109074	PrimaryExpression	0		108789	1					
ANR	109075	ExpressionStatement	server -> buf -> idx = 0	1062:16:33444:33464	108789	5	True				
ANR	109076	AssignmentExpression	server -> buf -> idx = 0		108789	0		=			
ANR	109077	PtrMemberAccess	server -> buf -> idx		108789	0					
ANR	109078	PtrMemberAccess	server -> buf		108789	0					
ANR	109079	Identifier	server		108789	0					
ANR	109080	Identifier	buf		108789	1					
ANR	109081	Identifier	idx		108789	1					
ANR	109082	PrimaryExpression	0		108789	1					
ANR	109083	ExpressionStatement	ev_io_start ( EV_A_ & remote -> send_ctx -> io )	1066:12:33541:33582	108789	3	True				
ANR	109084	CallExpression	ev_io_start ( EV_A_ & remote -> send_ctx -> io )		108789	0					
ANR	109085	Callee	ev_io_start		108789	0					
ANR	109086	Identifier	ev_io_start		108789	0					
ANR	109087	ArgumentList	EV_A_ & remote -> send_ctx -> io		108789	1					
ANR	109088	Argument	EV_A_ & remote -> send_ctx -> io		108789	0					
ANR	109089	BitAndExpression	EV_A_ & remote -> send_ctx -> io		108789	0		&			
ANR	109090	Identifier	EV_A_		108789	0					
ANR	109091	PtrMemberAccess	remote -> send_ctx -> io		108789	1					
ANR	109092	PtrMemberAccess	remote -> send_ctx		108789	0					
ANR	109093	Identifier	remote		108789	0					
ANR	109094	Identifier	send_ctx		108789	1					
ANR	109095	Identifier	io		108789	1					
ANR	109096	ReturnType	static void		108789	1					
ANR	109097	Identifier	resolv_cb		108789	2					
ANR	109098	ParameterList	"struct sockaddr * addr , void * data"		108789	3					
ANR	109099	Parameter	struct sockaddr * addr	1015:10:31839:31859	108789	0	True				
ANR	109100	ParameterType	struct sockaddr *		108789	0					
ANR	109101	Identifier	addr		108789	1					
ANR	109102	Parameter	void * data	1015:33:31862:31871	108789	1	True				
ANR	109103	ParameterType	void *		108789	0					
ANR	109104	Identifier	data		108789	1					
ANR	109105	CFGEntryNode	ENTRY		108789		True				
ANR	109106	CFGExitNode	EXIT		108789		True				
ANR	109107	Symbol	addr -> sa_family		108789						
ANR	109108	Symbol	data		108789						
ANR	109109	Symbol	server -> remote		108789						
ANR	109110	Symbol	server -> listen_ctx		108789						
ANR	109111	Symbol	remote		108789						
ANR	109112	Symbol	info . ai_addrlen		108789						
ANR	109113	Symbol	IPPROTO_TCP		108789						
ANR	109114	Symbol	remote -> buf		108789						
ANR	109115	Symbol	loop		108789						
ANR	109116	Symbol	* query		108789						
ANR	109117	Symbol	query -> server		108789						
ANR	109118	Symbol	info		108789						
ANR	109119	Symbol	query -> hostname		108789						
ANR	109120	Symbol	NULL		108789						
ANR	109121	Symbol	& info		108789						
ANR	109122	Symbol	server -> buf -> data		108789						
ANR	109123	Symbol	* server -> buf		108789						
ANR	109124	Symbol	query		108789						
ANR	109125	Symbol	AF_INET		108789						
ANR	109126	Symbol	* * remote		108789						
ANR	109127	Symbol	remote -> buf -> idx		108789						
ANR	109128	Symbol	remote -> send_ctx		108789						
ANR	109129	Symbol	info . ai_protocol		108789						
ANR	109130	Symbol	server -> buf -> idx		108789						
ANR	109131	Symbol	BUF_SIZE		108789						
ANR	109132	Symbol	* remote -> send_ctx		108789						
ANR	109133	Symbol	* addr		108789						
ANR	109134	Symbol	server -> listen_ctx -> loop		108789						
ANR	109135	Symbol	remote -> server		108789						
ANR	109136	Symbol	server		108789						
ANR	109137	Symbol	* server		108789						
ANR	109138	Symbol	server -> buf -> len		108789						
ANR	109139	Symbol	SOCK_STREAM		108789						
ANR	109140	Symbol	remote -> buf -> len		108789						
ANR	109141	Symbol	remote -> buf -> data		108789						
ANR	109142	Symbol	addr		108789						
ANR	109143	Symbol	connect_to_remote		108789						
ANR	109144	Symbol	info . ai_family		108789						
ANR	109145	Symbol	info . ai_addr		108789						
ANR	109146	Symbol	* remote -> buf		108789						
ANR	109147	Symbol	* server -> listen_ctx		108789						
ANR	109148	Symbol	AF_INET6		108789						
ANR	109149	Symbol	verbose		108789						
ANR	109150	Symbol	info . ai_socktype		108789						
ANR	109151	Symbol	remote -> send_ctx -> io		108789						
ANR	109152	Symbol	server -> buf		108789						
ANR	109153	Symbol	EV_A_		108789						
ANR	109154	Symbol	* * server		108789						
ANR	109155	Symbol	* remote		108789						
ANR	109156	Function	remote_recv_cb	1071:0:33603:36067							
ANR	109157	FunctionDef	"remote_recv_cb (EV_P_ ev_io * w , int revents)"		109156	0					
ANR	109158	CompoundStatement		1073:0:33659:36067	109156	0					
ANR	109159	IdentifierDeclStatement	remote_ctx_t * remote_recv_ctx = ( remote_ctx_t * ) w ;	1074:4:33665:33714	109156	0	True				
ANR	109160	IdentifierDecl	* remote_recv_ctx = ( remote_ctx_t * ) w		109156	0					
ANR	109161	IdentifierDeclType	remote_ctx_t *		109156	0					
ANR	109162	Identifier	remote_recv_ctx		109156	1					
ANR	109163	AssignmentExpression	* remote_recv_ctx = ( remote_ctx_t * ) w		109156	2		=			
ANR	109164	Identifier	remote_recv_ctx		109156	0					
ANR	109165	CastExpression	( remote_ctx_t * ) w		109156	1					
ANR	109166	CastTarget	remote_ctx_t *		109156	0					
ANR	109167	Identifier	w		109156	1					
ANR	109168	IdentifierDeclStatement	remote_t * remote = remote_recv_ctx -> remote ;	1075:4:33720:33775	109156	1	True				
ANR	109169	IdentifierDecl	* remote = remote_recv_ctx -> remote		109156	0					
ANR	109170	IdentifierDeclType	remote_t *		109156	0					
ANR	109171	Identifier	remote		109156	1					
ANR	109172	AssignmentExpression	* remote = remote_recv_ctx -> remote		109156	2		=			
ANR	109173	Identifier	remote		109156	0					
ANR	109174	PtrMemberAccess	remote_recv_ctx -> remote		109156	1					
ANR	109175	Identifier	remote_recv_ctx		109156	0					
ANR	109176	Identifier	remote		109156	1					
ANR	109177	IdentifierDeclStatement	server_t * server = remote -> server ;	1076:4:33781:33827	109156	2	True				
ANR	109178	IdentifierDecl	* server = remote -> server		109156	0					
ANR	109179	IdentifierDeclType	server_t *		109156	0					
ANR	109180	Identifier	server		109156	1					
ANR	109181	AssignmentExpression	* server = remote -> server		109156	2		=			
ANR	109182	Identifier	server		109156	0					
ANR	109183	PtrMemberAccess	remote -> server		109156	1					
ANR	109184	Identifier	remote		109156	0					
ANR	109185	Identifier	server		109156	1					
ANR	109186	IfStatement	if ( server == NULL )		109156	3					
ANR	109187	Condition	server == NULL	1078:8:33838:33851	109156	0	True				
ANR	109188	EqualityExpression	server == NULL		109156	0		==			
ANR	109189	Identifier	server		109156	0					
ANR	109190	Identifier	NULL		109156	1					
ANR	109191	CompoundStatement		6:24:194:194	109156	1					
ANR	109192	ExpressionStatement	"LOGE ( ""invalid server"" )"	1079:8:33864:33886	109156	0	True				
ANR	109193	CallExpression	"LOGE ( ""invalid server"" )"		109156	0					
ANR	109194	Callee	LOGE		109156	0					
ANR	109195	Identifier	LOGE		109156	0					
ANR	109196	ArgumentList	"""invalid server"""		109156	1					
ANR	109197	Argument	"""invalid server"""		109156	0					
ANR	109198	PrimaryExpression	"""invalid server"""		109156	0					
ANR	109199	Statement	close_and_free_remote	1080:8:33896:33916	109156	1	True				
ANR	109200	Statement	(	1080:29:33917:33917	109156	2	True				
ANR	109201	Statement	EV_A_	1080:30:33918:33922	109156	3	True				
ANR	109202	Statement	remote	1080:36:33924:33929	109156	4	True				
ANR	109203	Statement	)	1080:42:33930:33930	109156	5	True				
ANR	109204	ExpressionStatement		1080:43:33931:33931	109156	6	True				
ANR	109205	ReturnStatement	return ;	1081:8:33941:33947	109156	7	True				
ANR	109206	ExpressionStatement	ev_timer_again ( EV_A_ & server -> recv_ctx -> watcher )	1084:4:33960:34009	109156	4	True				
ANR	109207	CallExpression	ev_timer_again ( EV_A_ & server -> recv_ctx -> watcher )		109156	0					
ANR	109208	Callee	ev_timer_again		109156	0					
ANR	109209	Identifier	ev_timer_again		109156	0					
ANR	109210	ArgumentList	EV_A_ & server -> recv_ctx -> watcher		109156	1					
ANR	109211	Argument	EV_A_ & server -> recv_ctx -> watcher		109156	0					
ANR	109212	BitAndExpression	EV_A_ & server -> recv_ctx -> watcher		109156	0		&			
ANR	109213	Identifier	EV_A_		109156	0					
ANR	109214	PtrMemberAccess	server -> recv_ctx -> watcher		109156	1					
ANR	109215	PtrMemberAccess	server -> recv_ctx		109156	0					
ANR	109216	Identifier	server		109156	0					
ANR	109217	Identifier	recv_ctx		109156	1					
ANR	109218	Identifier	watcher		109156	1					
ANR	109219	IdentifierDeclStatement	"ssize_t r = recv ( remote -> fd , server -> buf -> data , BUF_SIZE , 0 ) ;"	1086:4:34016:34076	109156	5	True				
ANR	109220	IdentifierDecl	"r = recv ( remote -> fd , server -> buf -> data , BUF_SIZE , 0 )"		109156	0					
ANR	109221	IdentifierDeclType	ssize_t		109156	0					
ANR	109222	Identifier	r		109156	1					
ANR	109223	AssignmentExpression	"r = recv ( remote -> fd , server -> buf -> data , BUF_SIZE , 0 )"		109156	2		=			
ANR	109224	Identifier	r		109156	0					
ANR	109225	CallExpression	"recv ( remote -> fd , server -> buf -> data , BUF_SIZE , 0 )"		109156	1					
ANR	109226	Callee	recv		109156	0					
ANR	109227	Identifier	recv		109156	0					
ANR	109228	ArgumentList	remote -> fd		109156	1					
ANR	109229	Argument	remote -> fd		109156	0					
ANR	109230	PtrMemberAccess	remote -> fd		109156	0					
ANR	109231	Identifier	remote		109156	0					
ANR	109232	Identifier	fd		109156	1					
ANR	109233	Argument	server -> buf -> data		109156	1					
ANR	109234	PtrMemberAccess	server -> buf -> data		109156	0					
ANR	109235	PtrMemberAccess	server -> buf		109156	0					
ANR	109236	Identifier	server		109156	0					
ANR	109237	Identifier	buf		109156	1					
ANR	109238	Identifier	data		109156	1					
ANR	109239	Argument	BUF_SIZE		109156	2					
ANR	109240	Identifier	BUF_SIZE		109156	0					
ANR	109241	Argument	0		109156	3					
ANR	109242	PrimaryExpression	0		109156	0					
ANR	109243	IfStatement	if ( r == 0 )		109156	6					
ANR	109244	Condition	r == 0	1088:8:34087:34092	109156	0	True				
ANR	109245	EqualityExpression	r == 0		109156	0		==			
ANR	109246	Identifier	r		109156	0					
ANR	109247	PrimaryExpression	0		109156	1					
ANR	109248	CompoundStatement		16:16:435:435	109156	1					
ANR	109249	IfStatement	if ( verbose )		109156	0					
ANR	109250	Condition	verbose	1090:12:34138:34144	109156	0	True				
ANR	109251	Identifier	verbose		109156	0					
ANR	109252	CompoundStatement		18:21:487:487	109156	1					
ANR	109253	ExpressionStatement	"LOGI ( ""remote_recv close the connection"" )"	1091:12:34161:34201	109156	0	True				
ANR	109254	CallExpression	"LOGI ( ""remote_recv close the connection"" )"		109156	0					
ANR	109255	Callee	LOGI		109156	0					
ANR	109256	Identifier	LOGI		109156	0					
ANR	109257	ArgumentList	"""remote_recv close the connection"""		109156	1					
ANR	109258	Argument	"""remote_recv close the connection"""		109156	0					
ANR	109259	PrimaryExpression	"""remote_recv close the connection"""		109156	0					
ANR	109260	Statement	close_and_free_remote	1093:8:34221:34241	109156	1	True				
ANR	109261	Statement	(	1093:29:34242:34242	109156	2	True				
ANR	109262	Statement	EV_A_	1093:30:34243:34247	109156	3	True				
ANR	109263	Statement	remote	1093:36:34249:34254	109156	4	True				
ANR	109264	Statement	)	1093:42:34255:34255	109156	5	True				
ANR	109265	ExpressionStatement		1093:43:34256:34256	109156	6	True				
ANR	109266	Statement	close_and_free_server	1094:8:34266:34286	109156	7	True				
ANR	109267	Statement	(	1094:29:34287:34287	109156	8	True				
ANR	109268	Statement	EV_A_	1094:30:34288:34292	109156	9	True				
ANR	109269	Statement	server	1094:36:34294:34299	109156	10	True				
ANR	109270	Statement	)	1094:42:34300:34300	109156	11	True				
ANR	109271	ExpressionStatement		1094:43:34301:34301	109156	12	True				
ANR	109272	ReturnStatement	return ;	1095:8:34311:34317	109156	13	True				
ANR	109273	ElseStatement	else		109156	0					
ANR	109274	IfStatement	if ( r == - 1 )		109156	0					
ANR	109275	Condition	r == - 1	1096:15:34334:34340	109156	0	True				
ANR	109276	EqualityExpression	r == - 1		109156	0		==			
ANR	109277	Identifier	r		109156	0					
ANR	109278	UnaryOperationExpression	- 1		109156	1					
ANR	109279	UnaryOperator	-		109156	0					
ANR	109280	PrimaryExpression	1		109156	1					
ANR	109281	CompoundStatement		24:24:683:683	109156	1					
ANR	109282	IfStatement	if ( errno == EAGAIN || errno == EWOULDBLOCK )		109156	0					
ANR	109283	Condition	errno == EAGAIN || errno == EWOULDBLOCK	1097:12:34357:34395	109156	0	True				
ANR	109284	OrExpression	errno == EAGAIN || errno == EWOULDBLOCK		109156	0		||			
ANR	109285	EqualityExpression	errno == EAGAIN		109156	0		==			
ANR	109286	Identifier	errno		109156	0					
ANR	109287	Identifier	EAGAIN		109156	1					
ANR	109288	EqualityExpression	errno == EWOULDBLOCK		109156	1		==			
ANR	109289	Identifier	errno		109156	0					
ANR	109290	Identifier	EWOULDBLOCK		109156	1					
ANR	109291	CompoundStatement		25:53:738:738	109156	1					
ANR	109292	ReturnStatement	return ;	1100:12:34476:34482	109156	0	True				
ANR	109293	ElseStatement	else		109156	0					
ANR	109294	CompoundStatement		29:15:839:839	109156	0					
ANR	109295	ExpressionStatement	"ERROR ( ""remote recv"" )"	1102:12:34513:34533	109156	0	True				
ANR	109296	CallExpression	"ERROR ( ""remote recv"" )"		109156	0					
ANR	109297	Callee	ERROR		109156	0					
ANR	109298	Identifier	ERROR		109156	0					
ANR	109299	ArgumentList	"""remote recv"""		109156	1					
ANR	109300	Argument	"""remote recv"""		109156	0					
ANR	109301	PrimaryExpression	"""remote recv"""		109156	0					
ANR	109302	Statement	close_and_free_remote	1103:12:34547:34567	109156	1	True				
ANR	109303	Statement	(	1103:33:34568:34568	109156	2	True				
ANR	109304	Statement	EV_A_	1103:34:34569:34573	109156	3	True				
ANR	109305	Statement	remote	1103:40:34575:34580	109156	4	True				
ANR	109306	Statement	)	1103:46:34581:34581	109156	5	True				
ANR	109307	ExpressionStatement		1103:47:34582:34582	109156	6	True				
ANR	109308	Statement	close_and_free_server	1104:12:34596:34616	109156	7	True				
ANR	109309	Statement	(	1104:33:34617:34617	109156	8	True				
ANR	109310	Statement	EV_A_	1104:34:34618:34622	109156	9	True				
ANR	109311	Statement	server	1104:40:34624:34629	109156	10	True				
ANR	109312	Statement	)	1104:46:34630:34630	109156	11	True				
ANR	109313	ExpressionStatement		1104:47:34631:34631	109156	12	True				
ANR	109314	ReturnStatement	return ;	1105:12:34645:34651	109156	13	True				
ANR	109315	ExpressionStatement	rx += r	1109:4:34674:34681	109156	7	True				
ANR	109316	AssignmentExpression	rx += r		109156	0		+=			
ANR	109317	Identifier	rx		109156	0					
ANR	109318	Identifier	r		109156	1					
ANR	109319	ExpressionStatement	server -> buf -> len = r	1111:4:34688:34708	109156	8	True				
ANR	109320	AssignmentExpression	server -> buf -> len = r		109156	0		=			
ANR	109321	PtrMemberAccess	server -> buf -> len		109156	0					
ANR	109322	PtrMemberAccess	server -> buf		109156	0					
ANR	109323	Identifier	server		109156	0					
ANR	109324	Identifier	buf		109156	1					
ANR	109325	Identifier	len		109156	1					
ANR	109326	Identifier	r		109156	1					
ANR	109327	IdentifierDeclStatement	"int err = crypto -> encrypt ( server -> buf , server -> e_ctx , BUF_SIZE ) ;"	1112:4:34714:34777	109156	9	True				
ANR	109328	IdentifierDecl	"err = crypto -> encrypt ( server -> buf , server -> e_ctx , BUF_SIZE )"		109156	0					
ANR	109329	IdentifierDeclType	int		109156	0					
ANR	109330	Identifier	err		109156	1					
ANR	109331	AssignmentExpression	"err = crypto -> encrypt ( server -> buf , server -> e_ctx , BUF_SIZE )"		109156	2		=			
ANR	109332	Identifier	err		109156	0					
ANR	109333	CallExpression	"crypto -> encrypt ( server -> buf , server -> e_ctx , BUF_SIZE )"		109156	1					
ANR	109334	Callee	crypto -> encrypt		109156	0					
ANR	109335	PtrMemberAccess	crypto -> encrypt		109156	0					
ANR	109336	Identifier	crypto		109156	0					
ANR	109337	Identifier	encrypt		109156	1					
ANR	109338	ArgumentList	server -> buf		109156	1					
ANR	109339	Argument	server -> buf		109156	0					
ANR	109340	PtrMemberAccess	server -> buf		109156	0					
ANR	109341	Identifier	server		109156	0					
ANR	109342	Identifier	buf		109156	1					
ANR	109343	Argument	server -> e_ctx		109156	1					
ANR	109344	PtrMemberAccess	server -> e_ctx		109156	0					
ANR	109345	Identifier	server		109156	0					
ANR	109346	Identifier	e_ctx		109156	1					
ANR	109347	Argument	BUF_SIZE		109156	2					
ANR	109348	Identifier	BUF_SIZE		109156	0					
ANR	109349	IfStatement	if ( err )		109156	10					
ANR	109350	Condition	err	1114:8:34788:34790	109156	0	True				
ANR	109351	Identifier	err		109156	0					
ANR	109352	CompoundStatement		42:13:1133:1133	109156	1					
ANR	109353	ExpressionStatement	"LOGE ( ""invalid password or cipher"" )"	1115:8:34803:34837	109156	0	True				
ANR	109354	CallExpression	"LOGE ( ""invalid password or cipher"" )"		109156	0					
ANR	109355	Callee	LOGE		109156	0					
ANR	109356	Identifier	LOGE		109156	0					
ANR	109357	ArgumentList	"""invalid password or cipher"""		109156	1					
ANR	109358	Argument	"""invalid password or cipher"""		109156	0					
ANR	109359	PrimaryExpression	"""invalid password or cipher"""		109156	0					
ANR	109360	Statement	close_and_free_remote	1116:8:34847:34867	109156	1	True				
ANR	109361	Statement	(	1116:29:34868:34868	109156	2	True				
ANR	109362	Statement	EV_A_	1116:30:34869:34873	109156	3	True				
ANR	109363	Statement	remote	1116:36:34875:34880	109156	4	True				
ANR	109364	Statement	)	1116:42:34881:34881	109156	5	True				
ANR	109365	ExpressionStatement		1116:43:34882:34882	109156	6	True				
ANR	109366	Statement	close_and_free_server	1117:8:34892:34912	109156	7	True				
ANR	109367	Statement	(	1117:29:34913:34913	109156	8	True				
ANR	109368	Statement	EV_A_	1117:30:34914:34918	109156	9	True				
ANR	109369	Statement	server	1117:36:34920:34925	109156	10	True				
ANR	109370	Statement	)	1117:42:34926:34926	109156	11	True				
ANR	109371	ExpressionStatement		1117:43:34927:34927	109156	12	True				
ANR	109372	ReturnStatement	return ;	1118:8:34937:34943	109156	13	True				
ANR	109373	ExpressionStatement	"setTosFromConnmark ( remote , server )"	1122:4:34983:35017	109156	11	True				
ANR	109374	CallExpression	"setTosFromConnmark ( remote , server )"		109156	0					
ANR	109375	Callee	setTosFromConnmark		109156	0					
ANR	109376	Identifier	setTosFromConnmark		109156	0					
ANR	109377	ArgumentList	remote		109156	1					
ANR	109378	Argument	remote		109156	0					
ANR	109379	Identifier	remote		109156	0					
ANR	109380	Argument	server		109156	1					
ANR	109381	Identifier	server		109156	0					
ANR	109382	IdentifierDeclStatement	"int s = send ( server -> fd , server -> buf -> data , server -> buf -> len , 0 ) ;"	1124:4:35030:35094	109156	12	True				
ANR	109383	IdentifierDecl	"s = send ( server -> fd , server -> buf -> data , server -> buf -> len , 0 )"		109156	0					
ANR	109384	IdentifierDeclType	int		109156	0					
ANR	109385	Identifier	s		109156	1					
ANR	109386	AssignmentExpression	"s = send ( server -> fd , server -> buf -> data , server -> buf -> len , 0 )"		109156	2		=			
ANR	109387	Identifier	s		109156	0					
ANR	109388	CallExpression	"send ( server -> fd , server -> buf -> data , server -> buf -> len , 0 )"		109156	1					
ANR	109389	Callee	send		109156	0					
ANR	109390	Identifier	send		109156	0					
ANR	109391	ArgumentList	server -> fd		109156	1					
ANR	109392	Argument	server -> fd		109156	0					
ANR	109393	PtrMemberAccess	server -> fd		109156	0					
ANR	109394	Identifier	server		109156	0					
ANR	109395	Identifier	fd		109156	1					
ANR	109396	Argument	server -> buf -> data		109156	1					
ANR	109397	PtrMemberAccess	server -> buf -> data		109156	0					
ANR	109398	PtrMemberAccess	server -> buf		109156	0					
ANR	109399	Identifier	server		109156	0					
ANR	109400	Identifier	buf		109156	1					
ANR	109401	Identifier	data		109156	1					
ANR	109402	Argument	server -> buf -> len		109156	2					
ANR	109403	PtrMemberAccess	server -> buf -> len		109156	0					
ANR	109404	PtrMemberAccess	server -> buf		109156	0					
ANR	109405	Identifier	server		109156	0					
ANR	109406	Identifier	buf		109156	1					
ANR	109407	Identifier	len		109156	1					
ANR	109408	Argument	0		109156	3					
ANR	109409	PrimaryExpression	0		109156	0					
ANR	109410	IfStatement	if ( s == - 1 )		109156	13					
ANR	109411	Condition	s == - 1	1126:8:35105:35111	109156	0	True				
ANR	109412	EqualityExpression	s == - 1		109156	0		==			
ANR	109413	Identifier	s		109156	0					
ANR	109414	UnaryOperationExpression	- 1		109156	1					
ANR	109415	UnaryOperator	-		109156	0					
ANR	109416	PrimaryExpression	1		109156	1					
ANR	109417	CompoundStatement		54:17:1454:1454	109156	1					
ANR	109418	IfStatement	if ( errno == EAGAIN || errno == EWOULDBLOCK )		109156	0					
ANR	109419	Condition	errno == EAGAIN || errno == EWOULDBLOCK	1127:12:35128:35166	109156	0	True				
ANR	109420	OrExpression	errno == EAGAIN || errno == EWOULDBLOCK		109156	0		||			
ANR	109421	EqualityExpression	errno == EAGAIN		109156	0		==			
ANR	109422	Identifier	errno		109156	0					
ANR	109423	Identifier	EAGAIN		109156	1					
ANR	109424	EqualityExpression	errno == EWOULDBLOCK		109156	1		==			
ANR	109425	Identifier	errno		109156	0					
ANR	109426	Identifier	EWOULDBLOCK		109156	1					
ANR	109427	CompoundStatement		55:53:1509:1509	109156	1					
ANR	109428	ExpressionStatement	server -> buf -> idx = 0	1129:12:35221:35241	109156	0	True				
ANR	109429	AssignmentExpression	server -> buf -> idx = 0		109156	0		=			
ANR	109430	PtrMemberAccess	server -> buf -> idx		109156	0					
ANR	109431	PtrMemberAccess	server -> buf		109156	0					
ANR	109432	Identifier	server		109156	0					
ANR	109433	Identifier	buf		109156	1					
ANR	109434	Identifier	idx		109156	1					
ANR	109435	PrimaryExpression	0		109156	1					
ANR	109436	ExpressionStatement	ev_io_stop ( EV_A_ & remote_recv_ctx -> io )	1130:12:35255:35294	109156	1	True				
ANR	109437	CallExpression	ev_io_stop ( EV_A_ & remote_recv_ctx -> io )		109156	0					
ANR	109438	Callee	ev_io_stop		109156	0					
ANR	109439	Identifier	ev_io_stop		109156	0					
ANR	109440	ArgumentList	EV_A_ & remote_recv_ctx -> io		109156	1					
ANR	109441	Argument	EV_A_ & remote_recv_ctx -> io		109156	0					
ANR	109442	BitAndExpression	EV_A_ & remote_recv_ctx -> io		109156	0		&			
ANR	109443	Identifier	EV_A_		109156	0					
ANR	109444	PtrMemberAccess	remote_recv_ctx -> io		109156	1					
ANR	109445	Identifier	remote_recv_ctx		109156	0					
ANR	109446	Identifier	io		109156	1					
ANR	109447	ExpressionStatement	ev_io_start ( EV_A_ & server -> send_ctx -> io )	1131:12:35308:35349	109156	2	True				
ANR	109448	CallExpression	ev_io_start ( EV_A_ & server -> send_ctx -> io )		109156	0					
ANR	109449	Callee	ev_io_start		109156	0					
ANR	109450	Identifier	ev_io_start		109156	0					
ANR	109451	ArgumentList	EV_A_ & server -> send_ctx -> io		109156	1					
ANR	109452	Argument	EV_A_ & server -> send_ctx -> io		109156	0					
ANR	109453	BitAndExpression	EV_A_ & server -> send_ctx -> io		109156	0		&			
ANR	109454	Identifier	EV_A_		109156	0					
ANR	109455	PtrMemberAccess	server -> send_ctx -> io		109156	1					
ANR	109456	PtrMemberAccess	server -> send_ctx		109156	0					
ANR	109457	Identifier	server		109156	0					
ANR	109458	Identifier	send_ctx		109156	1					
ANR	109459	Identifier	io		109156	1					
ANR	109460	ElseStatement	else		109156	0					
ANR	109461	CompoundStatement		60:15:1706:1706	109156	0					
ANR	109462	ExpressionStatement	"ERROR ( ""remote_recv_send"" )"	1133:12:35380:35405	109156	0	True				
ANR	109463	CallExpression	"ERROR ( ""remote_recv_send"" )"		109156	0					
ANR	109464	Callee	ERROR		109156	0					
ANR	109465	Identifier	ERROR		109156	0					
ANR	109466	ArgumentList	"""remote_recv_send"""		109156	1					
ANR	109467	Argument	"""remote_recv_send"""		109156	0					
ANR	109468	PrimaryExpression	"""remote_recv_send"""		109156	0					
ANR	109469	Statement	close_and_free_remote	1134:12:35419:35439	109156	1	True				
ANR	109470	Statement	(	1134:33:35440:35440	109156	2	True				
ANR	109471	Statement	EV_A_	1134:34:35441:35445	109156	3	True				
ANR	109472	Statement	remote	1134:40:35447:35452	109156	4	True				
ANR	109473	Statement	)	1134:46:35453:35453	109156	5	True				
ANR	109474	ExpressionStatement		1134:47:35454:35454	109156	6	True				
ANR	109475	Statement	close_and_free_server	1135:12:35468:35488	109156	7	True				
ANR	109476	Statement	(	1135:33:35489:35489	109156	8	True				
ANR	109477	Statement	EV_A_	1135:34:35490:35494	109156	9	True				
ANR	109478	Statement	server	1135:40:35496:35501	109156	10	True				
ANR	109479	Statement	)	1135:46:35502:35502	109156	11	True				
ANR	109480	ExpressionStatement		1135:47:35503:35503	109156	12	True				
ANR	109481	ReturnStatement	return ;	1136:12:35517:35523	109156	13	True				
ANR	109482	ElseStatement	else		109156	0					
ANR	109483	IfStatement	if ( s < server -> buf -> len )		109156	0					
ANR	109484	Condition	s < server -> buf -> len	1138:15:35550:35569	109156	0	True				
ANR	109485	RelationalExpression	s < server -> buf -> len		109156	0		<			
ANR	109486	Identifier	s		109156	0					
ANR	109487	PtrMemberAccess	server -> buf -> len		109156	1					
ANR	109488	PtrMemberAccess	server -> buf		109156	0					
ANR	109489	Identifier	server		109156	0					
ANR	109490	Identifier	buf		109156	1					
ANR	109491	Identifier	len		109156	1					
ANR	109492	CompoundStatement		66:37:1912:1912	109156	1					
ANR	109493	ExpressionStatement	server -> buf -> len -= s	1139:8:35582:35603	109156	0	True				
ANR	109494	AssignmentExpression	server -> buf -> len -= s		109156	0		-=			
ANR	109495	PtrMemberAccess	server -> buf -> len		109156	0					
ANR	109496	PtrMemberAccess	server -> buf		109156	0					
ANR	109497	Identifier	server		109156	0					
ANR	109498	Identifier	buf		109156	1					
ANR	109499	Identifier	len		109156	1					
ANR	109500	Identifier	s		109156	1					
ANR	109501	ExpressionStatement	server -> buf -> idx = s	1140:8:35613:35634	109156	1	True				
ANR	109502	AssignmentExpression	server -> buf -> idx = s		109156	0		=			
ANR	109503	PtrMemberAccess	server -> buf -> idx		109156	0					
ANR	109504	PtrMemberAccess	server -> buf		109156	0					
ANR	109505	Identifier	server		109156	0					
ANR	109506	Identifier	buf		109156	1					
ANR	109507	Identifier	idx		109156	1					
ANR	109508	Identifier	s		109156	1					
ANR	109509	ExpressionStatement	ev_io_stop ( EV_A_ & remote_recv_ctx -> io )	1141:8:35644:35683	109156	2	True				
ANR	109510	CallExpression	ev_io_stop ( EV_A_ & remote_recv_ctx -> io )		109156	0					
ANR	109511	Callee	ev_io_stop		109156	0					
ANR	109512	Identifier	ev_io_stop		109156	0					
ANR	109513	ArgumentList	EV_A_ & remote_recv_ctx -> io		109156	1					
ANR	109514	Argument	EV_A_ & remote_recv_ctx -> io		109156	0					
ANR	109515	BitAndExpression	EV_A_ & remote_recv_ctx -> io		109156	0		&			
ANR	109516	Identifier	EV_A_		109156	0					
ANR	109517	PtrMemberAccess	remote_recv_ctx -> io		109156	1					
ANR	109518	Identifier	remote_recv_ctx		109156	0					
ANR	109519	Identifier	io		109156	1					
ANR	109520	ExpressionStatement	ev_io_start ( EV_A_ & server -> send_ctx -> io )	1142:8:35693:35734	109156	3	True				
ANR	109521	CallExpression	ev_io_start ( EV_A_ & server -> send_ctx -> io )		109156	0					
ANR	109522	Callee	ev_io_start		109156	0					
ANR	109523	Identifier	ev_io_start		109156	0					
ANR	109524	ArgumentList	EV_A_ & server -> send_ctx -> io		109156	1					
ANR	109525	Argument	EV_A_ & server -> send_ctx -> io		109156	0					
ANR	109526	BitAndExpression	EV_A_ & server -> send_ctx -> io		109156	0		&			
ANR	109527	Identifier	EV_A_		109156	0					
ANR	109528	PtrMemberAccess	server -> send_ctx -> io		109156	1					
ANR	109529	PtrMemberAccess	server -> send_ctx		109156	0					
ANR	109530	Identifier	server		109156	0					
ANR	109531	Identifier	send_ctx		109156	1					
ANR	109532	Identifier	io		109156	1					
ANR	109533	IfStatement	if ( ! remote -> recv_ctx -> connected && ! no_delay )		109156	14					
ANR	109534	Condition	! remote -> recv_ctx -> connected && ! no_delay	1146:8:35812:35852	109156	0	True				
ANR	109535	AndExpression	! remote -> recv_ctx -> connected && ! no_delay		109156	0		&&			
ANR	109536	UnaryOperationExpression	! remote -> recv_ctx -> connected		109156	0					
ANR	109537	UnaryOperator	!		109156	0					
ANR	109538	PtrMemberAccess	remote -> recv_ctx -> connected		109156	1					
ANR	109539	PtrMemberAccess	remote -> recv_ctx		109156	0					
ANR	109540	Identifier	remote		109156	0					
ANR	109541	Identifier	recv_ctx		109156	1					
ANR	109542	Identifier	connected		109156	1					
ANR	109543	UnaryOperationExpression	! no_delay		109156	1					
ANR	109544	UnaryOperator	!		109156	0					
ANR	109545	Identifier	no_delay		109156	1					
ANR	109546	CompoundStatement		75:8:2205:2216	109156	1					
ANR	109547	IdentifierDeclStatement	int opt = 0 ;	1147:8:35865:35876	109156	0	True				
ANR	109548	IdentifierDecl	opt = 0		109156	0					
ANR	109549	IdentifierDeclType	int		109156	0					
ANR	109550	Identifier	opt		109156	1					
ANR	109551	AssignmentExpression	opt = 0		109156	2		=			
ANR	109552	Identifier	opt		109156	0					
ANR	109553	PrimaryExpression	0		109156	1					
ANR	109554	ExpressionStatement	"setsockopt ( server -> fd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"	1148:8:35886:35949	109156	1	True				
ANR	109555	CallExpression	"setsockopt ( server -> fd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"		109156	0					
ANR	109556	Callee	setsockopt		109156	0					
ANR	109557	Identifier	setsockopt		109156	0					
ANR	109558	ArgumentList	server -> fd		109156	1					
ANR	109559	Argument	server -> fd		109156	0					
ANR	109560	PtrMemberAccess	server -> fd		109156	0					
ANR	109561	Identifier	server		109156	0					
ANR	109562	Identifier	fd		109156	1					
ANR	109563	Argument	SOL_TCP		109156	1					
ANR	109564	Identifier	SOL_TCP		109156	0					
ANR	109565	Argument	TCP_NODELAY		109156	2					
ANR	109566	Identifier	TCP_NODELAY		109156	0					
ANR	109567	Argument	& opt		109156	3					
ANR	109568	UnaryOperationExpression	& opt		109156	0					
ANR	109569	UnaryOperator	&		109156	0					
ANR	109570	Identifier	opt		109156	1					
ANR	109571	Argument	sizeof ( opt )		109156	4					
ANR	109572	SizeofExpression	sizeof ( opt )		109156	0					
ANR	109573	Sizeof	sizeof		109156	0					
ANR	109574	SizeofOperand	opt		109156	1					
ANR	109575	ExpressionStatement	"setsockopt ( remote -> fd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"	1149:8:35959:36022	109156	2	True				
ANR	109576	CallExpression	"setsockopt ( remote -> fd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"		109156	0					
ANR	109577	Callee	setsockopt		109156	0					
ANR	109578	Identifier	setsockopt		109156	0					
ANR	109579	ArgumentList	remote -> fd		109156	1					
ANR	109580	Argument	remote -> fd		109156	0					
ANR	109581	PtrMemberAccess	remote -> fd		109156	0					
ANR	109582	Identifier	remote		109156	0					
ANR	109583	Identifier	fd		109156	1					
ANR	109584	Argument	SOL_TCP		109156	1					
ANR	109585	Identifier	SOL_TCP		109156	0					
ANR	109586	Argument	TCP_NODELAY		109156	2					
ANR	109587	Identifier	TCP_NODELAY		109156	0					
ANR	109588	Argument	& opt		109156	3					
ANR	109589	UnaryOperationExpression	& opt		109156	0					
ANR	109590	UnaryOperator	&		109156	0					
ANR	109591	Identifier	opt		109156	1					
ANR	109592	Argument	sizeof ( opt )		109156	4					
ANR	109593	SizeofExpression	sizeof ( opt )		109156	0					
ANR	109594	Sizeof	sizeof		109156	0					
ANR	109595	SizeofOperand	opt		109156	1					
ANR	109596	ExpressionStatement	remote -> recv_ctx -> connected = 1	1151:4:36034:36065	109156	15	True				
ANR	109597	AssignmentExpression	remote -> recv_ctx -> connected = 1		109156	0		=			
ANR	109598	PtrMemberAccess	remote -> recv_ctx -> connected		109156	0					
ANR	109599	PtrMemberAccess	remote -> recv_ctx		109156	0					
ANR	109600	Identifier	remote		109156	0					
ANR	109601	Identifier	recv_ctx		109156	1					
ANR	109602	Identifier	connected		109156	1					
ANR	109603	PrimaryExpression	1		109156	1					
ANR	109604	ReturnType	static void		109156	1					
ANR	109605	Identifier	remote_recv_cb		109156	2					
ANR	109606	ParameterList	"EV_P_ ev_io * w , int revents"		109156	3					
ANR	109607	Parameter	EV_P_ ev_io * w	1072:15:33630:33643	109156	0	True				
ANR	109608	ParameterType	EV_P_ ev_io *		109156	0					
ANR	109609	Identifier	w		109156	1					
ANR	109610	Parameter	int revents	1072:31:33646:33656	109156	1	True				
ANR	109611	ParameterType	int		109156	0					
ANR	109612	Identifier	revents		109156	1					
ANR	109613	CFGEntryNode	ENTRY		109156		True				
ANR	109614	CFGExitNode	EXIT		109156		True				
ANR	109615	Symbol	* remote -> recv_ctx		109156						
ANR	109616	Symbol	revents		109156						
ANR	109617	Symbol	crypto -> encrypt		109156						
ANR	109618	Symbol	remote		109156						
ANR	109619	Symbol	server -> recv_ctx -> watcher		109156						
ANR	109620	Symbol	remote_recv_ctx -> io		109156						
ANR	109621	Symbol	remote_recv_ctx		109156						
ANR	109622	Symbol	& opt		109156						
ANR	109623	Symbol	errno		109156						
ANR	109624	Symbol	NULL		109156						
ANR	109625	Symbol	server -> buf -> data		109156						
ANR	109626	Symbol	* server -> buf		109156						
ANR	109627	Symbol	server -> fd		109156						
ANR	109628	Symbol	server -> e_ctx		109156						
ANR	109629	Symbol	* * remote		109156						
ANR	109630	Symbol	* server -> send_ctx		109156						
ANR	109631	Symbol	crypto		109156						
ANR	109632	Symbol	opt		109156						
ANR	109633	Symbol	server -> send_ctx -> io		109156						
ANR	109634	Symbol	server -> buf -> idx		109156						
ANR	109635	Symbol	BUF_SIZE		109156						
ANR	109636	Symbol	remote -> server		109156						
ANR	109637	Symbol	send		109156						
ANR	109638	Symbol	SOL_TCP		109156						
ANR	109639	Symbol	server -> send_ctx		109156						
ANR	109640	Symbol	server		109156						
ANR	109641	Symbol	* server		109156						
ANR	109642	Symbol	rx		109156						
ANR	109643	Symbol	TCP_NODELAY		109156						
ANR	109644	Symbol	server -> buf -> len		109156						
ANR	109645	Symbol	* crypto		109156						
ANR	109646	Symbol	remote -> recv_ctx -> connected		109156						
ANR	109647	Symbol	recv		109156						
ANR	109648	Symbol	remote -> recv_ctx		109156						
ANR	109649	Symbol	remote -> fd		109156						
ANR	109650	Symbol	err		109156						
ANR	109651	Symbol	* remote_recv_ctx		109156						
ANR	109652	Symbol	no_delay		109156						
ANR	109653	Symbol	EAGAIN		109156						
ANR	109654	Symbol	verbose		109156						
ANR	109655	Symbol	r		109156						
ANR	109656	Symbol	s		109156						
ANR	109657	Symbol	server -> recv_ctx		109156						
ANR	109658	Symbol	server -> buf		109156						
ANR	109659	Symbol	w		109156						
ANR	109660	Symbol	EV_A_		109156						
ANR	109661	Symbol	EWOULDBLOCK		109156						
ANR	109662	Symbol	* * server		109156						
ANR	109663	Symbol	* server -> recv_ctx		109156						
ANR	109664	Symbol	remote_recv_ctx -> remote		109156						
ANR	109665	Symbol	* remote		109156						
ANR	109666	Function	remote_send_cb	1154:0:36070:39025							
ANR	109667	FunctionDef	"remote_send_cb (EV_P_ ev_io * w , int revents)"		109666	0					
ANR	109668	CompoundStatement		1156:0:36126:39025	109666	0					
ANR	109669	IdentifierDeclStatement	remote_ctx_t * remote_send_ctx = ( remote_ctx_t * ) w ;	1157:4:36132:36181	109666	0	True				
ANR	109670	IdentifierDecl	* remote_send_ctx = ( remote_ctx_t * ) w		109666	0					
ANR	109671	IdentifierDeclType	remote_ctx_t *		109666	0					
ANR	109672	Identifier	remote_send_ctx		109666	1					
ANR	109673	AssignmentExpression	* remote_send_ctx = ( remote_ctx_t * ) w		109666	2		=			
ANR	109674	Identifier	remote_send_ctx		109666	0					
ANR	109675	CastExpression	( remote_ctx_t * ) w		109666	1					
ANR	109676	CastTarget	remote_ctx_t *		109666	0					
ANR	109677	Identifier	w		109666	1					
ANR	109678	IdentifierDeclStatement	remote_t * remote = remote_send_ctx -> remote ;	1158:4:36187:36242	109666	1	True				
ANR	109679	IdentifierDecl	* remote = remote_send_ctx -> remote		109666	0					
ANR	109680	IdentifierDeclType	remote_t *		109666	0					
ANR	109681	Identifier	remote		109666	1					
ANR	109682	AssignmentExpression	* remote = remote_send_ctx -> remote		109666	2		=			
ANR	109683	Identifier	remote		109666	0					
ANR	109684	PtrMemberAccess	remote_send_ctx -> remote		109666	1					
ANR	109685	Identifier	remote_send_ctx		109666	0					
ANR	109686	Identifier	remote		109666	1					
ANR	109687	IdentifierDeclStatement	server_t * server = remote -> server ;	1159:4:36248:36294	109666	2	True				
ANR	109688	IdentifierDecl	* server = remote -> server		109666	0					
ANR	109689	IdentifierDeclType	server_t *		109666	0					
ANR	109690	Identifier	server		109666	1					
ANR	109691	AssignmentExpression	* server = remote -> server		109666	2		=			
ANR	109692	Identifier	server		109666	0					
ANR	109693	PtrMemberAccess	remote -> server		109666	1					
ANR	109694	Identifier	remote		109666	0					
ANR	109695	Identifier	server		109666	1					
ANR	109696	IfStatement	if ( server == NULL )		109666	3					
ANR	109697	Condition	server == NULL	1161:8:36305:36318	109666	0	True				
ANR	109698	EqualityExpression	server == NULL		109666	0		==			
ANR	109699	Identifier	server		109666	0					
ANR	109700	Identifier	NULL		109666	1					
ANR	109701	CompoundStatement		6:24:194:194	109666	1					
ANR	109702	ExpressionStatement	"LOGE ( ""invalid server"" )"	1162:8:36331:36353	109666	0	True				
ANR	109703	CallExpression	"LOGE ( ""invalid server"" )"		109666	0					
ANR	109704	Callee	LOGE		109666	0					
ANR	109705	Identifier	LOGE		109666	0					
ANR	109706	ArgumentList	"""invalid server"""		109666	1					
ANR	109707	Argument	"""invalid server"""		109666	0					
ANR	109708	PrimaryExpression	"""invalid server"""		109666	0					
ANR	109709	Statement	close_and_free_remote	1163:8:36363:36383	109666	1	True				
ANR	109710	Statement	(	1163:29:36384:36384	109666	2	True				
ANR	109711	Statement	EV_A_	1163:30:36385:36389	109666	3	True				
ANR	109712	Statement	remote	1163:36:36391:36396	109666	4	True				
ANR	109713	Statement	)	1163:42:36397:36397	109666	5	True				
ANR	109714	ExpressionStatement		1163:43:36398:36398	109666	6	True				
ANR	109715	ReturnStatement	return ;	1164:8:36408:36414	109666	7	True				
ANR	109716	IfStatement	if ( ! remote_send_ctx -> connected )		109666	4					
ANR	109717	Condition	! remote_send_ctx -> connected	1167:8:36431:36457	109666	0	True				
ANR	109718	UnaryOperationExpression	! remote_send_ctx -> connected		109666	0					
ANR	109719	UnaryOperator	!		109666	0					
ANR	109720	PtrMemberAccess	remote_send_ctx -> connected		109666	1					
ANR	109721	Identifier	remote_send_ctx		109666	0					
ANR	109722	Identifier	connected		109666	1					
ANR	109723	CompoundStatement		16:8:469:532	109666	1					
ANR	109724	IdentifierDeclStatement	struct sockaddr_storage addr ;	1168:8:36470:36498	109666	0	True				
ANR	109725	IdentifierDecl	addr		109666	0					
ANR	109726	IdentifierDeclType	struct sockaddr_storage		109666	0					
ANR	109727	Identifier	addr		109666	1					
ANR	109728	IdentifierDeclStatement	socklen_t len = sizeof ( struct sockaddr_storage ) ;	1169:8:36508:36555	109666	1	True				
ANR	109729	IdentifierDecl	len = sizeof ( struct sockaddr_storage )		109666	0					
ANR	109730	IdentifierDeclType	socklen_t		109666	0					
ANR	109731	Identifier	len		109666	1					
ANR	109732	AssignmentExpression	len = sizeof ( struct sockaddr_storage )		109666	2		=			
ANR	109733	Identifier	len		109666	0					
ANR	109734	SizeofExpression	sizeof ( struct sockaddr_storage )		109666	1					
ANR	109735	Sizeof	sizeof		109666	0					
ANR	109736	SizeofOperand	struct sockaddr_storage		109666	1					
ANR	109737	ExpressionStatement	"memset ( & addr , 0 , len )"	1170:8:36565:36586	109666	2	True				
ANR	109738	CallExpression	"memset ( & addr , 0 , len )"		109666	0					
ANR	109739	Callee	memset		109666	0					
ANR	109740	Identifier	memset		109666	0					
ANR	109741	ArgumentList	& addr		109666	1					
ANR	109742	Argument	& addr		109666	0					
ANR	109743	UnaryOperationExpression	& addr		109666	0					
ANR	109744	UnaryOperator	&		109666	0					
ANR	109745	Identifier	addr		109666	1					
ANR	109746	Argument	0		109666	1					
ANR	109747	PrimaryExpression	0		109666	0					
ANR	109748	Argument	len		109666	2					
ANR	109749	Identifier	len		109666	0					
ANR	109750	IdentifierDeclStatement	"int r = getpeername ( remote -> fd , ( struct sockaddr * ) & addr , & len ) ;"	1171:8:36596:36659	109666	3	True				
ANR	109751	IdentifierDecl	"r = getpeername ( remote -> fd , ( struct sockaddr * ) & addr , & len )"		109666	0					
ANR	109752	IdentifierDeclType	int		109666	0					
ANR	109753	Identifier	r		109666	1					
ANR	109754	AssignmentExpression	"r = getpeername ( remote -> fd , ( struct sockaddr * ) & addr , & len )"		109666	2		=			
ANR	109755	Identifier	r		109666	0					
ANR	109756	CallExpression	"getpeername ( remote -> fd , ( struct sockaddr * ) & addr , & len )"		109666	1					
ANR	109757	Callee	getpeername		109666	0					
ANR	109758	Identifier	getpeername		109666	0					
ANR	109759	ArgumentList	remote -> fd		109666	1					
ANR	109760	Argument	remote -> fd		109666	0					
ANR	109761	PtrMemberAccess	remote -> fd		109666	0					
ANR	109762	Identifier	remote		109666	0					
ANR	109763	Identifier	fd		109666	1					
ANR	109764	Argument	( struct sockaddr * ) & addr		109666	1					
ANR	109765	CastExpression	( struct sockaddr * ) & addr		109666	0					
ANR	109766	CastTarget	struct sockaddr *		109666	0					
ANR	109767	UnaryOperationExpression	& addr		109666	1					
ANR	109768	UnaryOperator	&		109666	0					
ANR	109769	Identifier	addr		109666	1					
ANR	109770	Argument	& len		109666	2					
ANR	109771	UnaryOperationExpression	& len		109666	0					
ANR	109772	UnaryOperator	&		109666	0					
ANR	109773	Identifier	len		109666	1					
ANR	109774	IfStatement	if ( r == 0 )		109666	4					
ANR	109775	Condition	r == 0	1172:12:36673:36678	109666	0	True				
ANR	109776	EqualityExpression	r == 0		109666	0		==			
ANR	109777	Identifier	r		109666	0					
ANR	109778	PrimaryExpression	0		109666	1					
ANR	109779	CompoundStatement		17:20:554:554	109666	1					
ANR	109780	IfStatement	if ( verbose )		109666	0					
ANR	109781	Condition	verbose	1173:16:36699:36705	109666	0	True				
ANR	109782	Identifier	verbose		109666	0					
ANR	109783	CompoundStatement		18:25:581:581	109666	1					
ANR	109784	ExpressionStatement	"LOGI ( ""remote connected"" )"	1174:16:36726:36750	109666	0	True				
ANR	109785	CallExpression	"LOGI ( ""remote connected"" )"		109666	0					
ANR	109786	Callee	LOGI		109666	0					
ANR	109787	Identifier	LOGI		109666	0					
ANR	109788	ArgumentList	"""remote connected"""		109666	1					
ANR	109789	Argument	"""remote connected"""		109666	0					
ANR	109790	PrimaryExpression	"""remote connected"""		109666	0					
ANR	109791	ExpressionStatement	remote_send_ctx -> connected = 1	1176:12:36778:36808	109666	1	True				
ANR	109792	AssignmentExpression	remote_send_ctx -> connected = 1		109666	0		=			
ANR	109793	PtrMemberAccess	remote_send_ctx -> connected		109666	0					
ANR	109794	Identifier	remote_send_ctx		109666	0					
ANR	109795	Identifier	connected		109666	1					
ANR	109796	PrimaryExpression	1		109666	1					
ANR	109797	ExpressionStatement	reset_addr ( server -> fd )	1179:12:36888:36910	109666	2	True				
ANR	109798	CallExpression	reset_addr ( server -> fd )		109666	0					
ANR	109799	Callee	reset_addr		109666	0					
ANR	109800	Identifier	reset_addr		109666	0					
ANR	109801	ArgumentList	server -> fd		109666	1					
ANR	109802	Argument	server -> fd		109666	0					
ANR	109803	PtrMemberAccess	server -> fd		109666	0					
ANR	109804	Identifier	server		109666	0					
ANR	109805	Identifier	fd		109666	1					
ANR	109806	IfStatement	if ( remote -> buf -> len == 0 )		109666	3					
ANR	109807	Condition	remote -> buf -> len == 0	1181:16:36929:36949	109666	0	True				
ANR	109808	EqualityExpression	remote -> buf -> len == 0		109666	0		==			
ANR	109809	PtrMemberAccess	remote -> buf -> len		109666	0					
ANR	109810	PtrMemberAccess	remote -> buf		109666	0					
ANR	109811	Identifier	remote		109666	0					
ANR	109812	Identifier	buf		109666	1					
ANR	109813	Identifier	len		109666	1					
ANR	109814	PrimaryExpression	0		109666	1					
ANR	109815	CompoundStatement		26:39:825:825	109666	1					
ANR	109816	ExpressionStatement	server -> stage = STAGE_STREAM	1182:16:36970:36998	109666	0	True				
ANR	109817	AssignmentExpression	server -> stage = STAGE_STREAM		109666	0		=			
ANR	109818	PtrMemberAccess	server -> stage		109666	0					
ANR	109819	Identifier	server		109666	0					
ANR	109820	Identifier	stage		109666	1					
ANR	109821	Identifier	STAGE_STREAM		109666	1					
ANR	109822	ExpressionStatement	ev_io_stop ( EV_A_ & remote_send_ctx -> io )	1183:16:37016:37055	109666	1	True				
ANR	109823	CallExpression	ev_io_stop ( EV_A_ & remote_send_ctx -> io )		109666	0					
ANR	109824	Callee	ev_io_stop		109666	0					
ANR	109825	Identifier	ev_io_stop		109666	0					
ANR	109826	ArgumentList	EV_A_ & remote_send_ctx -> io		109666	1					
ANR	109827	Argument	EV_A_ & remote_send_ctx -> io		109666	0					
ANR	109828	BitAndExpression	EV_A_ & remote_send_ctx -> io		109666	0		&			
ANR	109829	Identifier	EV_A_		109666	0					
ANR	109830	PtrMemberAccess	remote_send_ctx -> io		109666	1					
ANR	109831	Identifier	remote_send_ctx		109666	0					
ANR	109832	Identifier	io		109666	1					
ANR	109833	ExpressionStatement	ev_io_start ( EV_A_ & server -> recv_ctx -> io )	1184:16:37073:37114	109666	2	True				
ANR	109834	CallExpression	ev_io_start ( EV_A_ & server -> recv_ctx -> io )		109666	0					
ANR	109835	Callee	ev_io_start		109666	0					
ANR	109836	Identifier	ev_io_start		109666	0					
ANR	109837	ArgumentList	EV_A_ & server -> recv_ctx -> io		109666	1					
ANR	109838	Argument	EV_A_ & server -> recv_ctx -> io		109666	0					
ANR	109839	BitAndExpression	EV_A_ & server -> recv_ctx -> io		109666	0		&			
ANR	109840	Identifier	EV_A_		109666	0					
ANR	109841	PtrMemberAccess	server -> recv_ctx -> io		109666	1					
ANR	109842	PtrMemberAccess	server -> recv_ctx		109666	0					
ANR	109843	Identifier	server		109666	0					
ANR	109844	Identifier	recv_ctx		109666	1					
ANR	109845	Identifier	io		109666	1					
ANR	109846	ExpressionStatement	ev_io_start ( EV_A_ & remote -> recv_ctx -> io )	1185:16:37132:37173	109666	3	True				
ANR	109847	CallExpression	ev_io_start ( EV_A_ & remote -> recv_ctx -> io )		109666	0					
ANR	109848	Callee	ev_io_start		109666	0					
ANR	109849	Identifier	ev_io_start		109666	0					
ANR	109850	ArgumentList	EV_A_ & remote -> recv_ctx -> io		109666	1					
ANR	109851	Argument	EV_A_ & remote -> recv_ctx -> io		109666	0					
ANR	109852	BitAndExpression	EV_A_ & remote -> recv_ctx -> io		109666	0		&			
ANR	109853	Identifier	EV_A_		109666	0					
ANR	109854	PtrMemberAccess	remote -> recv_ctx -> io		109666	1					
ANR	109855	PtrMemberAccess	remote -> recv_ctx		109666	0					
ANR	109856	Identifier	remote		109666	0					
ANR	109857	Identifier	recv_ctx		109666	1					
ANR	109858	Identifier	io		109666	1					
ANR	109859	ReturnStatement	return ;	1186:16:37191:37197	109666	4	True				
ANR	109860	ElseStatement	else		109666	0					
ANR	109861	CompoundStatement		33:15:1101:1101	109666	0					
ANR	109862	ExpressionStatement	"ERROR ( ""getpeername"" )"	1189:12:37242:37262	109666	0	True				
ANR	109863	CallExpression	"ERROR ( ""getpeername"" )"		109666	0					
ANR	109864	Callee	ERROR		109666	0					
ANR	109865	Identifier	ERROR		109666	0					
ANR	109866	ArgumentList	"""getpeername"""		109666	1					
ANR	109867	Argument	"""getpeername"""		109666	0					
ANR	109868	PrimaryExpression	"""getpeername"""		109666	0					
ANR	109869	Statement	close_and_free_remote	1191:12:37305:37325	109666	1	True				
ANR	109870	Statement	(	1191:33:37326:37326	109666	2	True				
ANR	109871	Statement	EV_A_	1191:34:37327:37331	109666	3	True				
ANR	109872	Statement	remote	1191:40:37333:37338	109666	4	True				
ANR	109873	Statement	)	1191:46:37339:37339	109666	5	True				
ANR	109874	ExpressionStatement		1191:47:37340:37340	109666	6	True				
ANR	109875	Statement	close_and_free_server	1192:12:37354:37374	109666	7	True				
ANR	109876	Statement	(	1192:33:37375:37375	109666	8	True				
ANR	109877	Statement	EV_A_	1192:34:37376:37380	109666	9	True				
ANR	109878	Statement	server	1192:40:37382:37387	109666	10	True				
ANR	109879	Statement	)	1192:46:37388:37388	109666	11	True				
ANR	109880	ExpressionStatement		1192:47:37389:37389	109666	12	True				
ANR	109881	ReturnStatement	return ;	1193:12:37403:37409	109666	13	True				
ANR	109882	IfStatement	if ( remote -> buf -> len == 0 )		109666	5					
ANR	109883	Condition	remote -> buf -> len == 0	1197:8:37436:37456	109666	0	True				
ANR	109884	EqualityExpression	remote -> buf -> len == 0		109666	0		==			
ANR	109885	PtrMemberAccess	remote -> buf -> len		109666	0					
ANR	109886	PtrMemberAccess	remote -> buf		109666	0					
ANR	109887	Identifier	remote		109666	0					
ANR	109888	Identifier	buf		109666	1					
ANR	109889	Identifier	len		109666	1					
ANR	109890	PrimaryExpression	0		109666	1					
ANR	109891	CompoundStatement		42:31:1332:1332	109666	1					
ANR	109892	IfStatement	if ( verbose )		109666	0					
ANR	109893	Condition	verbose	1199:12:37499:37505	109666	0	True				
ANR	109894	Identifier	verbose		109666	0					
ANR	109895	CompoundStatement		44:21:1381:1381	109666	1					
ANR	109896	ExpressionStatement	"LOGI ( ""remote_send close the connection"" )"	1200:12:37522:37562	109666	0	True				
ANR	109897	CallExpression	"LOGI ( ""remote_send close the connection"" )"		109666	0					
ANR	109898	Callee	LOGI		109666	0					
ANR	109899	Identifier	LOGI		109666	0					
ANR	109900	ArgumentList	"""remote_send close the connection"""		109666	1					
ANR	109901	Argument	"""remote_send close the connection"""		109666	0					
ANR	109902	PrimaryExpression	"""remote_send close the connection"""		109666	0					
ANR	109903	Statement	close_and_free_remote	1202:8:37582:37602	109666	1	True				
ANR	109904	Statement	(	1202:29:37603:37603	109666	2	True				
ANR	109905	Statement	EV_A_	1202:30:37604:37608	109666	3	True				
ANR	109906	Statement	remote	1202:36:37610:37615	109666	4	True				
ANR	109907	Statement	)	1202:42:37616:37616	109666	5	True				
ANR	109908	ExpressionStatement		1202:43:37617:37617	109666	6	True				
ANR	109909	Statement	close_and_free_server	1203:8:37627:37647	109666	7	True				
ANR	109910	Statement	(	1203:29:37648:37648	109666	8	True				
ANR	109911	Statement	EV_A_	1203:30:37649:37653	109666	9	True				
ANR	109912	Statement	server	1203:36:37655:37660	109666	10	True				
ANR	109913	Statement	)	1203:42:37661:37661	109666	11	True				
ANR	109914	ExpressionStatement		1203:43:37662:37662	109666	12	True				
ANR	109915	ReturnStatement	return ;	1204:8:37672:37678	109666	13	True				
ANR	109916	ElseStatement	else		109666	0					
ANR	109917	CompoundStatement		52:8:1602:1714	109666	0					
ANR	109918	IdentifierDeclStatement	"ssize_t s = send ( remote -> fd , remote -> buf -> data + remote -> buf -> idx , remote -> buf -> len , 0 ) ;"	1207:8:37729:37841	109666	0	True				
ANR	109919	IdentifierDecl	"s = send ( remote -> fd , remote -> buf -> data + remote -> buf -> idx , remote -> buf -> len , 0 )"		109666	0					
ANR	109920	IdentifierDeclType	ssize_t		109666	0					
ANR	109921	Identifier	s		109666	1					
ANR	109922	AssignmentExpression	"s = send ( remote -> fd , remote -> buf -> data + remote -> buf -> idx , remote -> buf -> len , 0 )"		109666	2		=			
ANR	109923	Identifier	s		109666	0					
ANR	109924	CallExpression	"send ( remote -> fd , remote -> buf -> data + remote -> buf -> idx , remote -> buf -> len , 0 )"		109666	1					
ANR	109925	Callee	send		109666	0					
ANR	109926	Identifier	send		109666	0					
ANR	109927	ArgumentList	remote -> fd		109666	1					
ANR	109928	Argument	remote -> fd		109666	0					
ANR	109929	PtrMemberAccess	remote -> fd		109666	0					
ANR	109930	Identifier	remote		109666	0					
ANR	109931	Identifier	fd		109666	1					
ANR	109932	Argument	remote -> buf -> data + remote -> buf -> idx		109666	1					
ANR	109933	AdditiveExpression	remote -> buf -> data + remote -> buf -> idx		109666	0		+			
ANR	109934	PtrMemberAccess	remote -> buf -> data		109666	0					
ANR	109935	PtrMemberAccess	remote -> buf		109666	0					
ANR	109936	Identifier	remote		109666	0					
ANR	109937	Identifier	buf		109666	1					
ANR	109938	Identifier	data		109666	1					
ANR	109939	PtrMemberAccess	remote -> buf -> idx		109666	1					
ANR	109940	PtrMemberAccess	remote -> buf		109666	0					
ANR	109941	Identifier	remote		109666	0					
ANR	109942	Identifier	buf		109666	1					
ANR	109943	Identifier	idx		109666	1					
ANR	109944	Argument	remote -> buf -> len		109666	2					
ANR	109945	PtrMemberAccess	remote -> buf -> len		109666	0					
ANR	109946	PtrMemberAccess	remote -> buf		109666	0					
ANR	109947	Identifier	remote		109666	0					
ANR	109948	Identifier	buf		109666	1					
ANR	109949	Identifier	len		109666	1					
ANR	109950	Argument	0		109666	3					
ANR	109951	PrimaryExpression	0		109666	0					
ANR	109952	IfStatement	if ( s == - 1 )		109666	1					
ANR	109953	Condition	s == - 1	1209:12:37855:37861	109666	0	True				
ANR	109954	EqualityExpression	s == - 1		109666	0		==			
ANR	109955	Identifier	s		109666	0					
ANR	109956	UnaryOperationExpression	- 1		109666	1					
ANR	109957	UnaryOperator	-		109666	0					
ANR	109958	PrimaryExpression	1		109666	1					
ANR	109959	CompoundStatement		54:21:1737:1737	109666	1					
ANR	109960	IfStatement	if ( errno != EAGAIN && errno != EWOULDBLOCK )		109666	0					
ANR	109961	Condition	errno != EAGAIN && errno != EWOULDBLOCK	1210:16:37882:37920	109666	0	True				
ANR	109962	AndExpression	errno != EAGAIN && errno != EWOULDBLOCK		109666	0		&&			
ANR	109963	EqualityExpression	errno != EAGAIN		109666	0		!=			
ANR	109964	Identifier	errno		109666	0					
ANR	109965	Identifier	EAGAIN		109666	1					
ANR	109966	EqualityExpression	errno != EWOULDBLOCK		109666	1		!=			
ANR	109967	Identifier	errno		109666	0					
ANR	109968	Identifier	EWOULDBLOCK		109666	1					
ANR	109969	CompoundStatement		55:57:1796:1796	109666	1					
ANR	109970	ExpressionStatement	"ERROR ( ""remote_send_send"" )"	1211:16:37941:37966	109666	0	True				
ANR	109971	CallExpression	"ERROR ( ""remote_send_send"" )"		109666	0					
ANR	109972	Callee	ERROR		109666	0					
ANR	109973	Identifier	ERROR		109666	0					
ANR	109974	ArgumentList	"""remote_send_send"""		109666	1					
ANR	109975	Argument	"""remote_send_send"""		109666	0					
ANR	109976	PrimaryExpression	"""remote_send_send"""		109666	0					
ANR	109977	Statement	close_and_free_remote	1213:16:38018:38038	109666	1	True				
ANR	109978	Statement	(	1213:37:38039:38039	109666	2	True				
ANR	109979	Statement	EV_A_	1213:38:38040:38044	109666	3	True				
ANR	109980	Statement	remote	1213:44:38046:38051	109666	4	True				
ANR	109981	Statement	)	1213:50:38052:38052	109666	5	True				
ANR	109982	ExpressionStatement		1213:51:38053:38053	109666	6	True				
ANR	109983	Statement	close_and_free_server	1214:16:38071:38091	109666	7	True				
ANR	109984	Statement	(	1214:37:38092:38092	109666	8	True				
ANR	109985	Statement	EV_A_	1214:38:38093:38097	109666	9	True				
ANR	109986	Statement	server	1214:44:38099:38104	109666	10	True				
ANR	109987	Statement	)	1214:50:38105:38105	109666	11	True				
ANR	109988	ExpressionStatement		1214:51:38106:38106	109666	12	True				
ANR	109989	ReturnStatement	return ;	1216:12:38134:38140	109666	1	True				
ANR	109990	ElseStatement	else		109666	0					
ANR	109991	IfStatement	if ( s < remote -> buf -> len )		109666	0					
ANR	109992	Condition	s < remote -> buf -> len	1217:19:38161:38180	109666	0	True				
ANR	109993	RelationalExpression	s < remote -> buf -> len		109666	0		<			
ANR	109994	Identifier	s		109666	0					
ANR	109995	PtrMemberAccess	remote -> buf -> len		109666	1					
ANR	109996	PtrMemberAccess	remote -> buf		109666	0					
ANR	109997	Identifier	remote		109666	0					
ANR	109998	Identifier	buf		109666	1					
ANR	109999	Identifier	len		109666	1					
ANR	110000	CompoundStatement		62:41:2056:2056	109666	1					
ANR	110001	ExpressionStatement	remote -> buf -> len -= s	1219:12:38269:38290	109666	0	True				
ANR	110002	AssignmentExpression	remote -> buf -> len -= s		109666	0		-=			
ANR	110003	PtrMemberAccess	remote -> buf -> len		109666	0					
ANR	110004	PtrMemberAccess	remote -> buf		109666	0					
ANR	110005	Identifier	remote		109666	0					
ANR	110006	Identifier	buf		109666	1					
ANR	110007	Identifier	len		109666	1					
ANR	110008	Identifier	s		109666	1					
ANR	110009	ExpressionStatement	remote -> buf -> idx += s	1220:12:38304:38325	109666	1	True				
ANR	110010	AssignmentExpression	remote -> buf -> idx += s		109666	0		+=			
ANR	110011	PtrMemberAccess	remote -> buf -> idx		109666	0					
ANR	110012	PtrMemberAccess	remote -> buf		109666	0					
ANR	110013	Identifier	remote		109666	0					
ANR	110014	Identifier	buf		109666	1					
ANR	110015	Identifier	idx		109666	1					
ANR	110016	Identifier	s		109666	1					
ANR	110017	ReturnStatement	return ;	1221:12:38339:38345	109666	2	True				
ANR	110018	ElseStatement	else		109666	0					
ANR	110019	CompoundStatement		67:15:2235:2235	109666	0					
ANR	110020	ExpressionStatement	remote -> buf -> len = 0	1224:12:38422:38442	109666	0	True				
ANR	110021	AssignmentExpression	remote -> buf -> len = 0		109666	0		=			
ANR	110022	PtrMemberAccess	remote -> buf -> len		109666	0					
ANR	110023	PtrMemberAccess	remote -> buf		109666	0					
ANR	110024	Identifier	remote		109666	0					
ANR	110025	Identifier	buf		109666	1					
ANR	110026	Identifier	len		109666	1					
ANR	110027	PrimaryExpression	0		109666	1					
ANR	110028	ExpressionStatement	remote -> buf -> idx = 0	1225:12:38456:38476	109666	1	True				
ANR	110029	AssignmentExpression	remote -> buf -> idx = 0		109666	0		=			
ANR	110030	PtrMemberAccess	remote -> buf -> idx		109666	0					
ANR	110031	PtrMemberAccess	remote -> buf		109666	0					
ANR	110032	Identifier	remote		109666	0					
ANR	110033	Identifier	buf		109666	1					
ANR	110034	Identifier	idx		109666	1					
ANR	110035	PrimaryExpression	0		109666	1					
ANR	110036	ExpressionStatement	ev_io_stop ( EV_A_ & remote_send_ctx -> io )	1226:12:38490:38529	109666	2	True				
ANR	110037	CallExpression	ev_io_stop ( EV_A_ & remote_send_ctx -> io )		109666	0					
ANR	110038	Callee	ev_io_stop		109666	0					
ANR	110039	Identifier	ev_io_stop		109666	0					
ANR	110040	ArgumentList	EV_A_ & remote_send_ctx -> io		109666	1					
ANR	110041	Argument	EV_A_ & remote_send_ctx -> io		109666	0					
ANR	110042	BitAndExpression	EV_A_ & remote_send_ctx -> io		109666	0		&			
ANR	110043	Identifier	EV_A_		109666	0					
ANR	110044	PtrMemberAccess	remote_send_ctx -> io		109666	1					
ANR	110045	Identifier	remote_send_ctx		109666	0					
ANR	110046	Identifier	io		109666	1					
ANR	110047	IfStatement	if ( server != NULL )		109666	3					
ANR	110048	Condition	server != NULL	1227:16:38547:38560	109666	0	True				
ANR	110049	EqualityExpression	server != NULL		109666	0		!=			
ANR	110050	Identifier	server		109666	0					
ANR	110051	Identifier	NULL		109666	1					
ANR	110052	CompoundStatement		72:32:2436:2436	109666	1					
ANR	110053	ExpressionStatement	ev_io_start ( EV_A_ & server -> recv_ctx -> io )	1228:16:38581:38622	109666	0	True				
ANR	110054	CallExpression	ev_io_start ( EV_A_ & server -> recv_ctx -> io )		109666	0					
ANR	110055	Callee	ev_io_start		109666	0					
ANR	110056	Identifier	ev_io_start		109666	0					
ANR	110057	ArgumentList	EV_A_ & server -> recv_ctx -> io		109666	1					
ANR	110058	Argument	EV_A_ & server -> recv_ctx -> io		109666	0					
ANR	110059	BitAndExpression	EV_A_ & server -> recv_ctx -> io		109666	0		&			
ANR	110060	Identifier	EV_A_		109666	0					
ANR	110061	PtrMemberAccess	server -> recv_ctx -> io		109666	1					
ANR	110062	PtrMemberAccess	server -> recv_ctx		109666	0					
ANR	110063	Identifier	server		109666	0					
ANR	110064	Identifier	recv_ctx		109666	1					
ANR	110065	Identifier	io		109666	1					
ANR	110066	IfStatement	if ( server -> stage != STAGE_STREAM )		109666	1					
ANR	110067	Condition	server -> stage != STAGE_STREAM	1229:20:38644:38672	109666	0	True				
ANR	110068	EqualityExpression	server -> stage != STAGE_STREAM		109666	0		!=			
ANR	110069	PtrMemberAccess	server -> stage		109666	0					
ANR	110070	Identifier	server		109666	0					
ANR	110071	Identifier	stage		109666	1					
ANR	110072	Identifier	STAGE_STREAM		109666	1					
ANR	110073	CompoundStatement		74:51:2548:2548	109666	1					
ANR	110074	ExpressionStatement	server -> stage = STAGE_STREAM	1230:20:38697:38725	109666	0	True				
ANR	110075	AssignmentExpression	server -> stage = STAGE_STREAM		109666	0		=			
ANR	110076	PtrMemberAccess	server -> stage		109666	0					
ANR	110077	Identifier	server		109666	0					
ANR	110078	Identifier	stage		109666	1					
ANR	110079	Identifier	STAGE_STREAM		109666	1					
ANR	110080	ExpressionStatement	ev_io_start ( EV_A_ & remote -> recv_ctx -> io )	1231:20:38747:38788	109666	1	True				
ANR	110081	CallExpression	ev_io_start ( EV_A_ & remote -> recv_ctx -> io )		109666	0					
ANR	110082	Callee	ev_io_start		109666	0					
ANR	110083	Identifier	ev_io_start		109666	0					
ANR	110084	ArgumentList	EV_A_ & remote -> recv_ctx -> io		109666	1					
ANR	110085	Argument	EV_A_ & remote -> recv_ctx -> io		109666	0					
ANR	110086	BitAndExpression	EV_A_ & remote -> recv_ctx -> io		109666	0		&			
ANR	110087	Identifier	EV_A_		109666	0					
ANR	110088	PtrMemberAccess	remote -> recv_ctx -> io		109666	1					
ANR	110089	PtrMemberAccess	remote -> recv_ctx		109666	0					
ANR	110090	Identifier	remote		109666	0					
ANR	110091	Identifier	recv_ctx		109666	1					
ANR	110092	Identifier	io		109666	1					
ANR	110093	ElseStatement	else		109666	0					
ANR	110094	CompoundStatement		78:19:2700:2700	109666	0					
ANR	110095	ExpressionStatement	"LOGE ( ""invalid server"" )"	1234:16:38845:38867	109666	0	True				
ANR	110096	CallExpression	"LOGE ( ""invalid server"" )"		109666	0					
ANR	110097	Callee	LOGE		109666	0					
ANR	110098	Identifier	LOGE		109666	0					
ANR	110099	ArgumentList	"""invalid server"""		109666	1					
ANR	110100	Argument	"""invalid server"""		109666	0					
ANR	110101	PrimaryExpression	"""invalid server"""		109666	0					
ANR	110102	Statement	close_and_free_remote	1235:16:38885:38905	109666	1	True				
ANR	110103	Statement	(	1235:37:38906:38906	109666	2	True				
ANR	110104	Statement	EV_A_	1235:38:38907:38911	109666	3	True				
ANR	110105	Statement	remote	1235:44:38913:38918	109666	4	True				
ANR	110106	Statement	)	1235:50:38919:38919	109666	5	True				
ANR	110107	ExpressionStatement		1235:51:38920:38920	109666	6	True				
ANR	110108	Statement	close_and_free_server	1236:16:38938:38958	109666	7	True				
ANR	110109	Statement	(	1236:37:38959:38959	109666	8	True				
ANR	110110	Statement	EV_A_	1236:38:38960:38964	109666	9	True				
ANR	110111	Statement	server	1236:44:38966:38971	109666	10	True				
ANR	110112	Statement	)	1236:50:38972:38972	109666	11	True				
ANR	110113	ExpressionStatement		1236:51:38973:38973	109666	12	True				
ANR	110114	ReturnStatement	return ;	1238:12:39001:39007	109666	4	True				
ANR	110115	ReturnType	static void		109666	1					
ANR	110116	Identifier	remote_send_cb		109666	2					
ANR	110117	ParameterList	"EV_P_ ev_io * w , int revents"		109666	3					
ANR	110118	Parameter	EV_P_ ev_io * w	1155:15:36097:36110	109666	0	True				
ANR	110119	ParameterType	EV_P_ ev_io *		109666	0					
ANR	110120	Identifier	w		109666	1					
ANR	110121	Parameter	int revents	1155:31:36113:36123	109666	1	True				
ANR	110122	ParameterType	int		109666	0					
ANR	110123	Identifier	revents		109666	1					
ANR	110124	CFGEntryNode	ENTRY		109666		True				
ANR	110125	CFGExitNode	EXIT		109666		True				
ANR	110126	Symbol	server -> recv_ctx -> io		109666						
ANR	110127	Symbol	server		109666						
ANR	110128	Symbol	* server		109666						
ANR	110129	Symbol	* remote -> recv_ctx		109666						
ANR	110130	Symbol	revents		109666						
ANR	110131	Symbol	remote -> recv_ctx -> io		109666						
ANR	110132	Symbol	server -> stage		109666						
ANR	110133	Symbol	remote		109666						
ANR	110134	Symbol	STAGE_STREAM		109666						
ANR	110135	Symbol	remote_send_ctx -> io		109666						
ANR	110136	Symbol	len		109666						
ANR	110137	Symbol	remote -> buf		109666						
ANR	110138	Symbol	remote -> buf -> len		109666						
ANR	110139	Symbol	remote -> buf -> data		109666						
ANR	110140	Symbol	addr		109666						
ANR	110141	Symbol	errno		109666						
ANR	110142	Symbol	NULL		109666						
ANR	110143	Symbol	& addr		109666						
ANR	110144	Symbol	remote -> recv_ctx		109666						
ANR	110145	Symbol	remote -> fd		109666						
ANR	110146	Symbol	server -> fd		109666						
ANR	110147	Symbol	EAGAIN		109666						
ANR	110148	Symbol	remote_send_ctx		109666						
ANR	110149	Symbol	* remote_send_ctx		109666						
ANR	110150	Symbol	* remote -> buf		109666						
ANR	110151	Symbol	* * remote		109666						
ANR	110152	Symbol	remote -> buf -> idx		109666						
ANR	110153	Symbol	getpeername		109666						
ANR	110154	Symbol	verbose		109666						
ANR	110155	Symbol	r		109666						
ANR	110156	Symbol	s		109666						
ANR	110157	Symbol	server -> recv_ctx		109666						
ANR	110158	Symbol	w		109666						
ANR	110159	Symbol	remote_send_ctx -> remote		109666						
ANR	110160	Symbol	EV_A_		109666						
ANR	110161	Symbol	EWOULDBLOCK		109666						
ANR	110162	Symbol	* * server		109666						
ANR	110163	Symbol	* server -> recv_ctx		109666						
ANR	110164	Symbol	& len		109666						
ANR	110165	Symbol	remote -> server		109666						
ANR	110166	Symbol	send		109666						
ANR	110167	Symbol	* remote		109666						
ANR	110168	Symbol	remote_send_ctx -> connected		109666						
ANR	110169	Function	new_remote	1243:0:39028:39913							
ANR	110170	FunctionDef	new_remote (int fd)		110169	0					
ANR	110171	CompoundStatement		1245:0:39065:39913	110169	0					
ANR	110172	IfStatement	if ( verbose )		110169	0					
ANR	110173	Condition	verbose	1246:8:39075:39081	110169	0	True				
ANR	110174	Identifier	verbose		110169	0					
ANR	110175	CompoundStatement		2:17:18:18	110169	1					
ANR	110176	ExpressionStatement	remote_conn ++	1247:8:39094:39107	110169	0	True				
ANR	110177	PostIncDecOperationExpression	remote_conn ++		110169	0					
ANR	110178	Identifier	remote_conn		110169	0					
ANR	110179	IncDec	++		110169	1					
ANR	110180	IdentifierDeclStatement	remote_t * remote = ss_malloc ( sizeof ( remote_t ) ) ;	1250:4:39120:39166	110169	1	True				
ANR	110181	IdentifierDecl	* remote = ss_malloc ( sizeof ( remote_t ) )		110169	0					
ANR	110182	IdentifierDeclType	remote_t *		110169	0					
ANR	110183	Identifier	remote		110169	1					
ANR	110184	AssignmentExpression	* remote = ss_malloc ( sizeof ( remote_t ) )		110169	2		=			
ANR	110185	Identifier	remote		110169	0					
ANR	110186	CallExpression	ss_malloc ( sizeof ( remote_t ) )		110169	1					
ANR	110187	Callee	ss_malloc		110169	0					
ANR	110188	Identifier	ss_malloc		110169	0					
ANR	110189	ArgumentList	sizeof ( remote_t )		110169	1					
ANR	110190	Argument	sizeof ( remote_t )		110169	0					
ANR	110191	SizeofExpression	sizeof ( remote_t )		110169	0					
ANR	110192	Sizeof	sizeof		110169	0					
ANR	110193	SizeofOperand	remote_t		110169	1					
ANR	110194	ExpressionStatement	"memset ( remote , 0 , sizeof ( remote_t ) )"	1251:4:39172:39207	110169	2	True				
ANR	110195	CallExpression	"memset ( remote , 0 , sizeof ( remote_t ) )"		110169	0					
ANR	110196	Callee	memset		110169	0					
ANR	110197	Identifier	memset		110169	0					
ANR	110198	ArgumentList	remote		110169	1					
ANR	110199	Argument	remote		110169	0					
ANR	110200	Identifier	remote		110169	0					
ANR	110201	Argument	0		110169	1					
ANR	110202	PrimaryExpression	0		110169	0					
ANR	110203	Argument	sizeof ( remote_t )		110169	2					
ANR	110204	SizeofExpression	sizeof ( remote_t )		110169	0					
ANR	110205	Sizeof	sizeof		110169	0					
ANR	110206	SizeofOperand	remote_t		110169	1					
ANR	110207	ExpressionStatement	remote -> recv_ctx = ss_malloc ( sizeof ( remote_ctx_t ) )	1253:4:39214:39264	110169	3	True				
ANR	110208	AssignmentExpression	remote -> recv_ctx = ss_malloc ( sizeof ( remote_ctx_t ) )		110169	0		=			
ANR	110209	PtrMemberAccess	remote -> recv_ctx		110169	0					
ANR	110210	Identifier	remote		110169	0					
ANR	110211	Identifier	recv_ctx		110169	1					
ANR	110212	CallExpression	ss_malloc ( sizeof ( remote_ctx_t ) )		110169	1					
ANR	110213	Callee	ss_malloc		110169	0					
ANR	110214	Identifier	ss_malloc		110169	0					
ANR	110215	ArgumentList	sizeof ( remote_ctx_t )		110169	1					
ANR	110216	Argument	sizeof ( remote_ctx_t )		110169	0					
ANR	110217	SizeofExpression	sizeof ( remote_ctx_t )		110169	0					
ANR	110218	Sizeof	sizeof		110169	0					
ANR	110219	SizeofOperand	remote_ctx_t		110169	1					
ANR	110220	ExpressionStatement	remote -> send_ctx = ss_malloc ( sizeof ( remote_ctx_t ) )	1254:4:39270:39320	110169	4	True				
ANR	110221	AssignmentExpression	remote -> send_ctx = ss_malloc ( sizeof ( remote_ctx_t ) )		110169	0		=			
ANR	110222	PtrMemberAccess	remote -> send_ctx		110169	0					
ANR	110223	Identifier	remote		110169	0					
ANR	110224	Identifier	send_ctx		110169	1					
ANR	110225	CallExpression	ss_malloc ( sizeof ( remote_ctx_t ) )		110169	1					
ANR	110226	Callee	ss_malloc		110169	0					
ANR	110227	Identifier	ss_malloc		110169	0					
ANR	110228	ArgumentList	sizeof ( remote_ctx_t )		110169	1					
ANR	110229	Argument	sizeof ( remote_ctx_t )		110169	0					
ANR	110230	SizeofExpression	sizeof ( remote_ctx_t )		110169	0					
ANR	110231	Sizeof	sizeof		110169	0					
ANR	110232	SizeofOperand	remote_ctx_t		110169	1					
ANR	110233	ExpressionStatement	remote -> buf = ss_malloc ( sizeof ( buffer_t ) )	1255:4:39326:39372	110169	5	True				
ANR	110234	AssignmentExpression	remote -> buf = ss_malloc ( sizeof ( buffer_t ) )		110169	0		=			
ANR	110235	PtrMemberAccess	remote -> buf		110169	0					
ANR	110236	Identifier	remote		110169	0					
ANR	110237	Identifier	buf		110169	1					
ANR	110238	CallExpression	ss_malloc ( sizeof ( buffer_t ) )		110169	1					
ANR	110239	Callee	ss_malloc		110169	0					
ANR	110240	Identifier	ss_malloc		110169	0					
ANR	110241	ArgumentList	sizeof ( buffer_t )		110169	1					
ANR	110242	Argument	sizeof ( buffer_t )		110169	0					
ANR	110243	SizeofExpression	sizeof ( buffer_t )		110169	0					
ANR	110244	Sizeof	sizeof		110169	0					
ANR	110245	SizeofOperand	buffer_t		110169	1					
ANR	110246	ExpressionStatement	"balloc ( remote -> buf , BUF_SIZE )"	1256:4:39378:39407	110169	6	True				
ANR	110247	CallExpression	"balloc ( remote -> buf , BUF_SIZE )"		110169	0					
ANR	110248	Callee	balloc		110169	0					
ANR	110249	Identifier	balloc		110169	0					
ANR	110250	ArgumentList	remote -> buf		110169	1					
ANR	110251	Argument	remote -> buf		110169	0					
ANR	110252	PtrMemberAccess	remote -> buf		110169	0					
ANR	110253	Identifier	remote		110169	0					
ANR	110254	Identifier	buf		110169	1					
ANR	110255	Argument	BUF_SIZE		110169	1					
ANR	110256	Identifier	BUF_SIZE		110169	0					
ANR	110257	ExpressionStatement	"memset ( remote -> recv_ctx , 0 , sizeof ( remote_ctx_t ) )"	1257:4:39413:39462	110169	7	True				
ANR	110258	CallExpression	"memset ( remote -> recv_ctx , 0 , sizeof ( remote_ctx_t ) )"		110169	0					
ANR	110259	Callee	memset		110169	0					
ANR	110260	Identifier	memset		110169	0					
ANR	110261	ArgumentList	remote -> recv_ctx		110169	1					
ANR	110262	Argument	remote -> recv_ctx		110169	0					
ANR	110263	PtrMemberAccess	remote -> recv_ctx		110169	0					
ANR	110264	Identifier	remote		110169	0					
ANR	110265	Identifier	recv_ctx		110169	1					
ANR	110266	Argument	0		110169	1					
ANR	110267	PrimaryExpression	0		110169	0					
ANR	110268	Argument	sizeof ( remote_ctx_t )		110169	2					
ANR	110269	SizeofExpression	sizeof ( remote_ctx_t )		110169	0					
ANR	110270	Sizeof	sizeof		110169	0					
ANR	110271	SizeofOperand	remote_ctx_t		110169	1					
ANR	110272	ExpressionStatement	"memset ( remote -> send_ctx , 0 , sizeof ( remote_ctx_t ) )"	1258:4:39468:39517	110169	8	True				
ANR	110273	CallExpression	"memset ( remote -> send_ctx , 0 , sizeof ( remote_ctx_t ) )"		110169	0					
ANR	110274	Callee	memset		110169	0					
ANR	110275	Identifier	memset		110169	0					
ANR	110276	ArgumentList	remote -> send_ctx		110169	1					
ANR	110277	Argument	remote -> send_ctx		110169	0					
ANR	110278	PtrMemberAccess	remote -> send_ctx		110169	0					
ANR	110279	Identifier	remote		110169	0					
ANR	110280	Identifier	send_ctx		110169	1					
ANR	110281	Argument	0		110169	1					
ANR	110282	PrimaryExpression	0		110169	0					
ANR	110283	Argument	sizeof ( remote_ctx_t )		110169	2					
ANR	110284	SizeofExpression	sizeof ( remote_ctx_t )		110169	0					
ANR	110285	Sizeof	sizeof		110169	0					
ANR	110286	SizeofOperand	remote_ctx_t		110169	1					
ANR	110287	ExpressionStatement	remote -> fd = fd	1259:4:39523:39555	110169	9	True				
ANR	110288	AssignmentExpression	remote -> fd = fd		110169	0		=			
ANR	110289	PtrMemberAccess	remote -> fd		110169	0					
ANR	110290	Identifier	remote		110169	0					
ANR	110291	Identifier	fd		110169	1					
ANR	110292	Identifier	fd		110169	1					
ANR	110293	ExpressionStatement	remote -> recv_ctx -> remote = remote	1260:4:39561:39597	110169	10	True				
ANR	110294	AssignmentExpression	remote -> recv_ctx -> remote = remote		110169	0		=			
ANR	110295	PtrMemberAccess	remote -> recv_ctx -> remote		110169	0					
ANR	110296	PtrMemberAccess	remote -> recv_ctx		110169	0					
ANR	110297	Identifier	remote		110169	0					
ANR	110298	Identifier	recv_ctx		110169	1					
ANR	110299	Identifier	remote		110169	1					
ANR	110300	Identifier	remote		110169	1					
ANR	110301	ExpressionStatement	remote -> recv_ctx -> connected = 0	1261:4:39603:39634	110169	11	True				
ANR	110302	AssignmentExpression	remote -> recv_ctx -> connected = 0		110169	0		=			
ANR	110303	PtrMemberAccess	remote -> recv_ctx -> connected		110169	0					
ANR	110304	PtrMemberAccess	remote -> recv_ctx		110169	0					
ANR	110305	Identifier	remote		110169	0					
ANR	110306	Identifier	recv_ctx		110169	1					
ANR	110307	Identifier	connected		110169	1					
ANR	110308	PrimaryExpression	0		110169	1					
ANR	110309	ExpressionStatement	remote -> send_ctx -> remote = remote	1262:4:39640:39676	110169	12	True				
ANR	110310	AssignmentExpression	remote -> send_ctx -> remote = remote		110169	0		=			
ANR	110311	PtrMemberAccess	remote -> send_ctx -> remote		110169	0					
ANR	110312	PtrMemberAccess	remote -> send_ctx		110169	0					
ANR	110313	Identifier	remote		110169	0					
ANR	110314	Identifier	send_ctx		110169	1					
ANR	110315	Identifier	remote		110169	1					
ANR	110316	Identifier	remote		110169	1					
ANR	110317	ExpressionStatement	remote -> send_ctx -> connected = 0	1263:4:39682:39713	110169	13	True				
ANR	110318	AssignmentExpression	remote -> send_ctx -> connected = 0		110169	0		=			
ANR	110319	PtrMemberAccess	remote -> send_ctx -> connected		110169	0					
ANR	110320	PtrMemberAccess	remote -> send_ctx		110169	0					
ANR	110321	Identifier	remote		110169	0					
ANR	110322	Identifier	send_ctx		110169	1					
ANR	110323	Identifier	connected		110169	1					
ANR	110324	PrimaryExpression	0		110169	1					
ANR	110325	ExpressionStatement	remote -> server = NULL	1264:4:39719:39753	110169	14	True				
ANR	110326	AssignmentExpression	remote -> server = NULL		110169	0		=			
ANR	110327	PtrMemberAccess	remote -> server		110169	0					
ANR	110328	Identifier	remote		110169	0					
ANR	110329	Identifier	server		110169	1					
ANR	110330	Identifier	NULL		110169	1					
ANR	110331	ExpressionStatement	"ev_io_init ( & remote -> recv_ctx -> io , remote_recv_cb , fd , EV_READ )"	1266:4:39760:39822	110169	15	True				
ANR	110332	CallExpression	"ev_io_init ( & remote -> recv_ctx -> io , remote_recv_cb , fd , EV_READ )"		110169	0					
ANR	110333	Callee	ev_io_init		110169	0					
ANR	110334	Identifier	ev_io_init		110169	0					
ANR	110335	ArgumentList	& remote -> recv_ctx -> io		110169	1					
ANR	110336	Argument	& remote -> recv_ctx -> io		110169	0					
ANR	110337	UnaryOperationExpression	& remote -> recv_ctx -> io		110169	0					
ANR	110338	UnaryOperator	&		110169	0					
ANR	110339	PtrMemberAccess	remote -> recv_ctx -> io		110169	1					
ANR	110340	PtrMemberAccess	remote -> recv_ctx		110169	0					
ANR	110341	Identifier	remote		110169	0					
ANR	110342	Identifier	recv_ctx		110169	1					
ANR	110343	Identifier	io		110169	1					
ANR	110344	Argument	remote_recv_cb		110169	1					
ANR	110345	Identifier	remote_recv_cb		110169	0					
ANR	110346	Argument	fd		110169	2					
ANR	110347	Identifier	fd		110169	0					
ANR	110348	Argument	EV_READ		110169	3					
ANR	110349	Identifier	EV_READ		110169	0					
ANR	110350	ExpressionStatement	"ev_io_init ( & remote -> send_ctx -> io , remote_send_cb , fd , EV_WRITE )"	1267:4:39828:39891	110169	16	True				
ANR	110351	CallExpression	"ev_io_init ( & remote -> send_ctx -> io , remote_send_cb , fd , EV_WRITE )"		110169	0					
ANR	110352	Callee	ev_io_init		110169	0					
ANR	110353	Identifier	ev_io_init		110169	0					
ANR	110354	ArgumentList	& remote -> send_ctx -> io		110169	1					
ANR	110355	Argument	& remote -> send_ctx -> io		110169	0					
ANR	110356	UnaryOperationExpression	& remote -> send_ctx -> io		110169	0					
ANR	110357	UnaryOperator	&		110169	0					
ANR	110358	PtrMemberAccess	remote -> send_ctx -> io		110169	1					
ANR	110359	PtrMemberAccess	remote -> send_ctx		110169	0					
ANR	110360	Identifier	remote		110169	0					
ANR	110361	Identifier	send_ctx		110169	1					
ANR	110362	Identifier	io		110169	1					
ANR	110363	Argument	remote_send_cb		110169	1					
ANR	110364	Identifier	remote_send_cb		110169	0					
ANR	110365	Argument	fd		110169	2					
ANR	110366	Identifier	fd		110169	0					
ANR	110367	Argument	EV_WRITE		110169	3					
ANR	110368	Identifier	EV_WRITE		110169	0					
ANR	110369	ReturnStatement	return remote ;	1269:4:39898:39911	110169	17	True				
ANR	110370	Identifier	remote		110169	0					
ANR	110371	ReturnType	static remote_t *		110169	1					
ANR	110372	Identifier	new_remote		110169	2					
ANR	110373	ParameterList	int fd		110169	3					
ANR	110374	Parameter	int fd	1244:11:39057:39062	110169	0	True				
ANR	110375	ParameterType	int		110169	0					
ANR	110376	Identifier	fd		110169	1					
ANR	110377	CFGEntryNode	ENTRY		110169		True				
ANR	110378	CFGExitNode	EXIT		110169		True				
ANR	110379	Symbol	* remote -> recv_ctx		110169						
ANR	110380	Symbol	remote -> send_ctx -> connected		110169						
ANR	110381	Symbol	EV_READ		110169						
ANR	110382	Symbol	remote		110169						
ANR	110383	Symbol	remote -> send_ctx -> remote		110169						
ANR	110384	Symbol	remote -> recv_ctx -> connected		110169						
ANR	110385	Symbol	remote -> buf		110169						
ANR	110386	Symbol	remote -> recv_ctx -> remote		110169						
ANR	110387	Symbol	& remote -> send_ctx -> io		110169						
ANR	110388	Symbol	remote_send_cb		110169						
ANR	110389	Symbol	remote -> recv_ctx		110169						
ANR	110390	Symbol	NULL		110169						
ANR	110391	Symbol	remote -> fd		110169						
ANR	110392	Symbol	EV_WRITE		110169						
ANR	110393	Symbol	remote_conn		110169						
ANR	110394	Symbol	remote -> send_ctx		110169						
ANR	110395	Symbol	* * remote		110169						
ANR	110396	Symbol	verbose		110169						
ANR	110397	Symbol	ss_malloc		110169						
ANR	110398	Symbol	BUF_SIZE		110169						
ANR	110399	Symbol	* remote -> send_ctx		110169						
ANR	110400	Symbol	& remote -> recv_ctx -> io		110169						
ANR	110401	Symbol	remote -> server		110169						
ANR	110402	Symbol	remote_recv_cb		110169						
ANR	110403	Symbol	fd		110169						
ANR	110404	Symbol	* remote		110169						
ANR	110405	Function	free_remote	1272:0:39916:40217							
ANR	110406	FunctionDef	free_remote (remote_t * remote)		110405	0					
ANR	110407	CompoundStatement		1274:0:39958:40217	110405	0					
ANR	110408	IfStatement	if ( remote -> server != NULL )		110405	0					
ANR	110409	Condition	remote -> server != NULL	1275:8:39968:39989	110405	0	True				
ANR	110410	EqualityExpression	remote -> server != NULL		110405	0		!=			
ANR	110411	PtrMemberAccess	remote -> server		110405	0					
ANR	110412	Identifier	remote		110405	0					
ANR	110413	Identifier	server		110405	1					
ANR	110414	Identifier	NULL		110405	1					
ANR	110415	CompoundStatement		2:32:33:33	110405	1					
ANR	110416	ExpressionStatement	remote -> server -> remote = NULL	1276:8:40002:40031	110405	0	True				
ANR	110417	AssignmentExpression	remote -> server -> remote = NULL		110405	0		=			
ANR	110418	PtrMemberAccess	remote -> server -> remote		110405	0					
ANR	110419	PtrMemberAccess	remote -> server		110405	0					
ANR	110420	Identifier	remote		110405	0					
ANR	110421	Identifier	server		110405	1					
ANR	110422	Identifier	remote		110405	1					
ANR	110423	Identifier	NULL		110405	1					
ANR	110424	IfStatement	if ( remote -> buf != NULL )		110405	1					
ANR	110425	Condition	remote -> buf != NULL	1278:8:40047:40065	110405	0	True				
ANR	110426	EqualityExpression	remote -> buf != NULL		110405	0		!=			
ANR	110427	PtrMemberAccess	remote -> buf		110405	0					
ANR	110428	Identifier	remote		110405	0					
ANR	110429	Identifier	buf		110405	1					
ANR	110430	Identifier	NULL		110405	1					
ANR	110431	CompoundStatement		5:29:109:109	110405	1					
ANR	110432	ExpressionStatement	bfree ( remote -> buf )	1279:8:40078:40096	110405	0	True				
ANR	110433	CallExpression	bfree ( remote -> buf )		110405	0					
ANR	110434	Callee	bfree		110405	0					
ANR	110435	Identifier	bfree		110405	0					
ANR	110436	ArgumentList	remote -> buf		110405	1					
ANR	110437	Argument	remote -> buf		110405	0					
ANR	110438	PtrMemberAccess	remote -> buf		110405	0					
ANR	110439	Identifier	remote		110405	0					
ANR	110440	Identifier	buf		110405	1					
ANR	110441	ExpressionStatement	ss_free ( remote -> buf )	1280:8:40106:40126	110405	1	True				
ANR	110442	CallExpression	ss_free ( remote -> buf )		110405	0					
ANR	110443	Callee	ss_free		110405	0					
ANR	110444	Identifier	ss_free		110405	0					
ANR	110445	ArgumentList	remote -> buf		110405	1					
ANR	110446	Argument	remote -> buf		110405	0					
ANR	110447	PtrMemberAccess	remote -> buf		110405	0					
ANR	110448	Identifier	remote		110405	0					
ANR	110449	Identifier	buf		110405	1					
ANR	110450	ExpressionStatement	ss_free ( remote -> recv_ctx )	1282:4:40138:40163	110405	2	True				
ANR	110451	CallExpression	ss_free ( remote -> recv_ctx )		110405	0					
ANR	110452	Callee	ss_free		110405	0					
ANR	110453	Identifier	ss_free		110405	0					
ANR	110454	ArgumentList	remote -> recv_ctx		110405	1					
ANR	110455	Argument	remote -> recv_ctx		110405	0					
ANR	110456	PtrMemberAccess	remote -> recv_ctx		110405	0					
ANR	110457	Identifier	remote		110405	0					
ANR	110458	Identifier	recv_ctx		110405	1					
ANR	110459	ExpressionStatement	ss_free ( remote -> send_ctx )	1283:4:40169:40194	110405	3	True				
ANR	110460	CallExpression	ss_free ( remote -> send_ctx )		110405	0					
ANR	110461	Callee	ss_free		110405	0					
ANR	110462	Identifier	ss_free		110405	0					
ANR	110463	ArgumentList	remote -> send_ctx		110405	1					
ANR	110464	Argument	remote -> send_ctx		110405	0					
ANR	110465	PtrMemberAccess	remote -> send_ctx		110405	0					
ANR	110466	Identifier	remote		110405	0					
ANR	110467	Identifier	send_ctx		110405	1					
ANR	110468	ExpressionStatement	ss_free ( remote )	1284:4:40200:40215	110405	4	True				
ANR	110469	CallExpression	ss_free ( remote )		110405	0					
ANR	110470	Callee	ss_free		110405	0					
ANR	110471	Identifier	ss_free		110405	0					
ANR	110472	ArgumentList	remote		110405	1					
ANR	110473	Argument	remote		110405	0					
ANR	110474	Identifier	remote		110405	0					
ANR	110475	ReturnType	static void		110405	1					
ANR	110476	Identifier	free_remote		110405	2					
ANR	110477	ParameterList	remote_t * remote		110405	3					
ANR	110478	Parameter	remote_t * remote	1273:12:39940:39955	110405	0	True				
ANR	110479	ParameterType	remote_t *		110405	0					
ANR	110480	Identifier	remote		110405	1					
ANR	110481	CFGEntryNode	ENTRY		110405		True				
ANR	110482	CFGExitNode	EXIT		110405		True				
ANR	110483	Symbol	remote -> server -> remote		110405						
ANR	110484	Symbol	NULL		110405						
ANR	110485	Symbol	remote -> recv_ctx		110405						
ANR	110486	Symbol	remote -> buf		110405						
ANR	110487	Symbol	remote		110405						
ANR	110488	Symbol	* * remote		110405						
ANR	110489	Symbol	remote -> send_ctx		110405						
ANR	110490	Symbol	remote -> server		110405						
ANR	110491	Symbol	* remote -> server		110405						
ANR	110492	Symbol	* remote		110405						
ANR	110493	Function	close_and_free_remote	1287:0:40220:40592							
ANR	110494	FunctionDef	close_and_free_remote (EV_P_ remote_t * remote)		110493	0					
ANR	110495	CompoundStatement		1289:0:40278:40592	110493	0					
ANR	110496	IfStatement	if ( remote != NULL )		110493	0					
ANR	110497	Condition	remote != NULL	1290:8:40288:40301	110493	0	True				
ANR	110498	EqualityExpression	remote != NULL		110493	0		!=			
ANR	110499	Identifier	remote		110493	0					
ANR	110500	Identifier	NULL		110493	1					
ANR	110501	CompoundStatement		2:24:25:25	110493	1					
ANR	110502	ExpressionStatement	ev_io_stop ( EV_A_ & remote -> send_ctx -> io )	1291:8:40314:40354	110493	0	True				
ANR	110503	CallExpression	ev_io_stop ( EV_A_ & remote -> send_ctx -> io )		110493	0					
ANR	110504	Callee	ev_io_stop		110493	0					
ANR	110505	Identifier	ev_io_stop		110493	0					
ANR	110506	ArgumentList	EV_A_ & remote -> send_ctx -> io		110493	1					
ANR	110507	Argument	EV_A_ & remote -> send_ctx -> io		110493	0					
ANR	110508	BitAndExpression	EV_A_ & remote -> send_ctx -> io		110493	0		&			
ANR	110509	Identifier	EV_A_		110493	0					
ANR	110510	PtrMemberAccess	remote -> send_ctx -> io		110493	1					
ANR	110511	PtrMemberAccess	remote -> send_ctx		110493	0					
ANR	110512	Identifier	remote		110493	0					
ANR	110513	Identifier	send_ctx		110493	1					
ANR	110514	Identifier	io		110493	1					
ANR	110515	ExpressionStatement	ev_io_stop ( EV_A_ & remote -> recv_ctx -> io )	1292:8:40364:40404	110493	1	True				
ANR	110516	CallExpression	ev_io_stop ( EV_A_ & remote -> recv_ctx -> io )		110493	0					
ANR	110517	Callee	ev_io_stop		110493	0					
ANR	110518	Identifier	ev_io_stop		110493	0					
ANR	110519	ArgumentList	EV_A_ & remote -> recv_ctx -> io		110493	1					
ANR	110520	Argument	EV_A_ & remote -> recv_ctx -> io		110493	0					
ANR	110521	BitAndExpression	EV_A_ & remote -> recv_ctx -> io		110493	0		&			
ANR	110522	Identifier	EV_A_		110493	0					
ANR	110523	PtrMemberAccess	remote -> recv_ctx -> io		110493	1					
ANR	110524	PtrMemberAccess	remote -> recv_ctx		110493	0					
ANR	110525	Identifier	remote		110493	0					
ANR	110526	Identifier	recv_ctx		110493	1					
ANR	110527	Identifier	io		110493	1					
ANR	110528	ExpressionStatement	close ( remote -> fd )	1293:8:40414:40431	110493	2	True				
ANR	110529	CallExpression	close ( remote -> fd )		110493	0					
ANR	110530	Callee	close		110493	0					
ANR	110531	Identifier	close		110493	0					
ANR	110532	ArgumentList	remote -> fd		110493	1					
ANR	110533	Argument	remote -> fd		110493	0					
ANR	110534	PtrMemberAccess	remote -> fd		110493	0					
ANR	110535	Identifier	remote		110493	0					
ANR	110536	Identifier	fd		110493	1					
ANR	110537	ExpressionStatement	free_remote ( remote )	1294:8:40441:40460	110493	3	True				
ANR	110538	CallExpression	free_remote ( remote )		110493	0					
ANR	110539	Callee	free_remote		110493	0					
ANR	110540	Identifier	free_remote		110493	0					
ANR	110541	ArgumentList	remote		110493	1					
ANR	110542	Argument	remote		110493	0					
ANR	110543	Identifier	remote		110493	0					
ANR	110544	IfStatement	if ( verbose )		110493	4					
ANR	110545	Condition	verbose	1295:12:40474:40480	110493	0	True				
ANR	110546	Identifier	verbose		110493	0					
ANR	110547	CompoundStatement		7:21:204:204	110493	1					
ANR	110548	ExpressionStatement	remote_conn --	1296:12:40497:40510	110493	0	True				
ANR	110549	PostIncDecOperationExpression	remote_conn --		110493	0					
ANR	110550	Identifier	remote_conn		110493	0					
ANR	110551	IncDec	--		110493	1					
ANR	110552	ExpressionStatement	"LOGI ( ""current remote connection: %d"" , remote_conn )"	1297:12:40524:40574	110493	1	True				
ANR	110553	CallExpression	"LOGI ( ""current remote connection: %d"" , remote_conn )"		110493	0					
ANR	110554	Callee	LOGI		110493	0					
ANR	110555	Identifier	LOGI		110493	0					
ANR	110556	ArgumentList	"""current remote connection: %d"""		110493	1					
ANR	110557	Argument	"""current remote connection: %d"""		110493	0					
ANR	110558	PrimaryExpression	"""current remote connection: %d"""		110493	0					
ANR	110559	Argument	remote_conn		110493	1					
ANR	110560	Identifier	remote_conn		110493	0					
ANR	110561	ReturnType	static void		110493	1					
ANR	110562	Identifier	close_and_free_remote		110493	2					
ANR	110563	ParameterList	EV_P_ remote_t * remote		110493	3					
ANR	110564	Parameter	EV_P_ remote_t * remote	1288:22:40254:40275	110493	0	True				
ANR	110565	ParameterType	EV_P_ remote_t *		110493	0					
ANR	110566	Identifier	remote		110493	1					
ANR	110567	CFGEntryNode	ENTRY		110493		True				
ANR	110568	CFGExitNode	EXIT		110493		True				
ANR	110569	Symbol	NULL		110493						
ANR	110570	Symbol	remote -> recv_ctx		110493						
ANR	110571	Symbol	* remote -> recv_ctx		110493						
ANR	110572	Symbol	remote -> fd		110493						
ANR	110573	Symbol	remote -> recv_ctx -> io		110493						
ANR	110574	Symbol	remote_conn		110493						
ANR	110575	Symbol	remote		110493						
ANR	110576	Symbol	* * remote		110493						
ANR	110577	Symbol	remote -> send_ctx		110493						
ANR	110578	Symbol	verbose		110493						
ANR	110579	Symbol	remote -> send_ctx -> io		110493						
ANR	110580	Symbol	EV_A_		110493						
ANR	110581	Symbol	* remote -> send_ctx		110493						
ANR	110582	Symbol	* remote		110493						
ANR	110583	Function	new_server	1302:0:40595:42210							
ANR	110584	FunctionDef	"new_server (int fd , listen_ctx_t * listener)"		110583	0					
ANR	110585	CompoundStatement		1304:0:40656:42210	110583	0					
ANR	110586	IfStatement	if ( verbose )		110583	0					
ANR	110587	Condition	verbose	1305:8:40666:40672	110583	0	True				
ANR	110588	Identifier	verbose		110583	0					
ANR	110589	CompoundStatement		2:17:18:18	110583	1					
ANR	110590	ExpressionStatement	server_conn ++	1306:8:40685:40698	110583	0	True				
ANR	110591	PostIncDecOperationExpression	server_conn ++		110583	0					
ANR	110592	Identifier	server_conn		110583	0					
ANR	110593	IncDec	++		110583	1					
ANR	110594	IdentifierDeclStatement	server_t * server ;	1309:4:40711:40727	110583	1	True				
ANR	110595	IdentifierDecl	* server		110583	0					
ANR	110596	IdentifierDeclType	server_t *		110583	0					
ANR	110597	Identifier	server		110583	1					
ANR	110598	ExpressionStatement	server = ss_malloc ( sizeof ( server_t ) )	1310:4:40733:40769	110583	2	True				
ANR	110599	AssignmentExpression	server = ss_malloc ( sizeof ( server_t ) )		110583	0		=			
ANR	110600	Identifier	server		110583	0					
ANR	110601	CallExpression	ss_malloc ( sizeof ( server_t ) )		110583	1					
ANR	110602	Callee	ss_malloc		110583	0					
ANR	110603	Identifier	ss_malloc		110583	0					
ANR	110604	ArgumentList	sizeof ( server_t )		110583	1					
ANR	110605	Argument	sizeof ( server_t )		110583	0					
ANR	110606	SizeofExpression	sizeof ( server_t )		110583	0					
ANR	110607	Sizeof	sizeof		110583	0					
ANR	110608	SizeofOperand	server_t		110583	1					
ANR	110609	ExpressionStatement	"memset ( server , 0 , sizeof ( server_t ) )"	1312:4:40776:40811	110583	3	True				
ANR	110610	CallExpression	"memset ( server , 0 , sizeof ( server_t ) )"		110583	0					
ANR	110611	Callee	memset		110583	0					
ANR	110612	Identifier	memset		110583	0					
ANR	110613	ArgumentList	server		110583	1					
ANR	110614	Argument	server		110583	0					
ANR	110615	Identifier	server		110583	0					
ANR	110616	Argument	0		110583	1					
ANR	110617	PrimaryExpression	0		110583	0					
ANR	110618	Argument	sizeof ( server_t )		110583	2					
ANR	110619	SizeofExpression	sizeof ( server_t )		110583	0					
ANR	110620	Sizeof	sizeof		110583	0					
ANR	110621	SizeofOperand	server_t		110583	1					
ANR	110622	ExpressionStatement	server -> recv_ctx = ss_malloc ( sizeof ( server_ctx_t ) )	1314:4:40818:40870	110583	4	True				
ANR	110623	AssignmentExpression	server -> recv_ctx = ss_malloc ( sizeof ( server_ctx_t ) )		110583	0		=			
ANR	110624	PtrMemberAccess	server -> recv_ctx		110583	0					
ANR	110625	Identifier	server		110583	0					
ANR	110626	Identifier	recv_ctx		110583	1					
ANR	110627	CallExpression	ss_malloc ( sizeof ( server_ctx_t ) )		110583	1					
ANR	110628	Callee	ss_malloc		110583	0					
ANR	110629	Identifier	ss_malloc		110583	0					
ANR	110630	ArgumentList	sizeof ( server_ctx_t )		110583	1					
ANR	110631	Argument	sizeof ( server_ctx_t )		110583	0					
ANR	110632	SizeofExpression	sizeof ( server_ctx_t )		110583	0					
ANR	110633	Sizeof	sizeof		110583	0					
ANR	110634	SizeofOperand	server_ctx_t		110583	1					
ANR	110635	ExpressionStatement	server -> send_ctx = ss_malloc ( sizeof ( server_ctx_t ) )	1315:4:40876:40928	110583	5	True				
ANR	110636	AssignmentExpression	server -> send_ctx = ss_malloc ( sizeof ( server_ctx_t ) )		110583	0		=			
ANR	110637	PtrMemberAccess	server -> send_ctx		110583	0					
ANR	110638	Identifier	server		110583	0					
ANR	110639	Identifier	send_ctx		110583	1					
ANR	110640	CallExpression	ss_malloc ( sizeof ( server_ctx_t ) )		110583	1					
ANR	110641	Callee	ss_malloc		110583	0					
ANR	110642	Identifier	ss_malloc		110583	0					
ANR	110643	ArgumentList	sizeof ( server_ctx_t )		110583	1					
ANR	110644	Argument	sizeof ( server_ctx_t )		110583	0					
ANR	110645	SizeofExpression	sizeof ( server_ctx_t )		110583	0					
ANR	110646	Sizeof	sizeof		110583	0					
ANR	110647	SizeofOperand	server_ctx_t		110583	1					
ANR	110648	ExpressionStatement	server -> buf = ss_malloc ( sizeof ( buffer_t ) )	1316:4:40934:40982	110583	6	True				
ANR	110649	AssignmentExpression	server -> buf = ss_malloc ( sizeof ( buffer_t ) )		110583	0		=			
ANR	110650	PtrMemberAccess	server -> buf		110583	0					
ANR	110651	Identifier	server		110583	0					
ANR	110652	Identifier	buf		110583	1					
ANR	110653	CallExpression	ss_malloc ( sizeof ( buffer_t ) )		110583	1					
ANR	110654	Callee	ss_malloc		110583	0					
ANR	110655	Identifier	ss_malloc		110583	0					
ANR	110656	ArgumentList	sizeof ( buffer_t )		110583	1					
ANR	110657	Argument	sizeof ( buffer_t )		110583	0					
ANR	110658	SizeofExpression	sizeof ( buffer_t )		110583	0					
ANR	110659	Sizeof	sizeof		110583	0					
ANR	110660	SizeofOperand	buffer_t		110583	1					
ANR	110661	ExpressionStatement	"memset ( server -> recv_ctx , 0 , sizeof ( server_ctx_t ) )"	1317:4:40988:41037	110583	7	True				
ANR	110662	CallExpression	"memset ( server -> recv_ctx , 0 , sizeof ( server_ctx_t ) )"		110583	0					
ANR	110663	Callee	memset		110583	0					
ANR	110664	Identifier	memset		110583	0					
ANR	110665	ArgumentList	server -> recv_ctx		110583	1					
ANR	110666	Argument	server -> recv_ctx		110583	0					
ANR	110667	PtrMemberAccess	server -> recv_ctx		110583	0					
ANR	110668	Identifier	server		110583	0					
ANR	110669	Identifier	recv_ctx		110583	1					
ANR	110670	Argument	0		110583	1					
ANR	110671	PrimaryExpression	0		110583	0					
ANR	110672	Argument	sizeof ( server_ctx_t )		110583	2					
ANR	110673	SizeofExpression	sizeof ( server_ctx_t )		110583	0					
ANR	110674	Sizeof	sizeof		110583	0					
ANR	110675	SizeofOperand	server_ctx_t		110583	1					
ANR	110676	ExpressionStatement	"memset ( server -> send_ctx , 0 , sizeof ( server_ctx_t ) )"	1318:4:41043:41092	110583	8	True				
ANR	110677	CallExpression	"memset ( server -> send_ctx , 0 , sizeof ( server_ctx_t ) )"		110583	0					
ANR	110678	Callee	memset		110583	0					
ANR	110679	Identifier	memset		110583	0					
ANR	110680	ArgumentList	server -> send_ctx		110583	1					
ANR	110681	Argument	server -> send_ctx		110583	0					
ANR	110682	PtrMemberAccess	server -> send_ctx		110583	0					
ANR	110683	Identifier	server		110583	0					
ANR	110684	Identifier	send_ctx		110583	1					
ANR	110685	Argument	0		110583	1					
ANR	110686	PrimaryExpression	0		110583	0					
ANR	110687	Argument	sizeof ( server_ctx_t )		110583	2					
ANR	110688	SizeofExpression	sizeof ( server_ctx_t )		110583	0					
ANR	110689	Sizeof	sizeof		110583	0					
ANR	110690	SizeofOperand	server_ctx_t		110583	1					
ANR	110691	ExpressionStatement	"balloc ( server -> buf , BUF_SIZE )"	1319:4:41098:41127	110583	9	True				
ANR	110692	CallExpression	"balloc ( server -> buf , BUF_SIZE )"		110583	0					
ANR	110693	Callee	balloc		110583	0					
ANR	110694	Identifier	balloc		110583	0					
ANR	110695	ArgumentList	server -> buf		110583	1					
ANR	110696	Argument	server -> buf		110583	0					
ANR	110697	PtrMemberAccess	server -> buf		110583	0					
ANR	110698	Identifier	server		110583	0					
ANR	110699	Identifier	buf		110583	1					
ANR	110700	Argument	BUF_SIZE		110583	1					
ANR	110701	Identifier	BUF_SIZE		110583	0					
ANR	110702	ExpressionStatement	server -> fd = fd	1320:4:41133:41165	110583	10	True				
ANR	110703	AssignmentExpression	server -> fd = fd		110583	0		=			
ANR	110704	PtrMemberAccess	server -> fd		110583	0					
ANR	110705	Identifier	server		110583	0					
ANR	110706	Identifier	fd		110583	1					
ANR	110707	Identifier	fd		110583	1					
ANR	110708	ExpressionStatement	server -> recv_ctx -> server = server	1321:4:41171:41207	110583	11	True				
ANR	110709	AssignmentExpression	server -> recv_ctx -> server = server		110583	0		=			
ANR	110710	PtrMemberAccess	server -> recv_ctx -> server		110583	0					
ANR	110711	PtrMemberAccess	server -> recv_ctx		110583	0					
ANR	110712	Identifier	server		110583	0					
ANR	110713	Identifier	recv_ctx		110583	1					
ANR	110714	Identifier	server		110583	1					
ANR	110715	Identifier	server		110583	1					
ANR	110716	ExpressionStatement	server -> recv_ctx -> connected = 0	1322:4:41213:41244	110583	12	True				
ANR	110717	AssignmentExpression	server -> recv_ctx -> connected = 0		110583	0		=			
ANR	110718	PtrMemberAccess	server -> recv_ctx -> connected		110583	0					
ANR	110719	PtrMemberAccess	server -> recv_ctx		110583	0					
ANR	110720	Identifier	server		110583	0					
ANR	110721	Identifier	recv_ctx		110583	1					
ANR	110722	Identifier	connected		110583	1					
ANR	110723	PrimaryExpression	0		110583	1					
ANR	110724	ExpressionStatement	server -> send_ctx -> server = server	1323:4:41250:41286	110583	13	True				
ANR	110725	AssignmentExpression	server -> send_ctx -> server = server		110583	0		=			
ANR	110726	PtrMemberAccess	server -> send_ctx -> server		110583	0					
ANR	110727	PtrMemberAccess	server -> send_ctx		110583	0					
ANR	110728	Identifier	server		110583	0					
ANR	110729	Identifier	send_ctx		110583	1					
ANR	110730	Identifier	server		110583	1					
ANR	110731	Identifier	server		110583	1					
ANR	110732	ExpressionStatement	server -> send_ctx -> connected = 0	1324:4:41292:41323	110583	14	True				
ANR	110733	AssignmentExpression	server -> send_ctx -> connected = 0		110583	0		=			
ANR	110734	PtrMemberAccess	server -> send_ctx -> connected		110583	0					
ANR	110735	PtrMemberAccess	server -> send_ctx		110583	0					
ANR	110736	Identifier	server		110583	0					
ANR	110737	Identifier	send_ctx		110583	1					
ANR	110738	Identifier	connected		110583	1					
ANR	110739	PrimaryExpression	0		110583	1					
ANR	110740	ExpressionStatement	server -> stage = STAGE_INIT	1325:4:41329:41369	110583	15	True				
ANR	110741	AssignmentExpression	server -> stage = STAGE_INIT		110583	0		=			
ANR	110742	PtrMemberAccess	server -> stage		110583	0					
ANR	110743	Identifier	server		110583	0					
ANR	110744	Identifier	stage		110583	1					
ANR	110745	Identifier	STAGE_INIT		110583	1					
ANR	110746	ExpressionStatement	server -> frag = 0	1326:4:41375:41406	110583	16	True				
ANR	110747	AssignmentExpression	server -> frag = 0		110583	0		=			
ANR	110748	PtrMemberAccess	server -> frag		110583	0					
ANR	110749	Identifier	server		110583	0					
ANR	110750	Identifier	frag		110583	1					
ANR	110751	PrimaryExpression	0		110583	1					
ANR	110752	ExpressionStatement	server -> query = NULL	1327:4:41412:41446	110583	17	True				
ANR	110753	AssignmentExpression	server -> query = NULL		110583	0		=			
ANR	110754	PtrMemberAccess	server -> query		110583	0					
ANR	110755	Identifier	server		110583	0					
ANR	110756	Identifier	query		110583	1					
ANR	110757	Identifier	NULL		110583	1					
ANR	110758	ExpressionStatement	server -> listen_ctx = listener	1328:4:41452:41490	110583	18	True				
ANR	110759	AssignmentExpression	server -> listen_ctx = listener		110583	0		=			
ANR	110760	PtrMemberAccess	server -> listen_ctx		110583	0					
ANR	110761	Identifier	server		110583	0					
ANR	110762	Identifier	listen_ctx		110583	1					
ANR	110763	Identifier	listener		110583	1					
ANR	110764	ExpressionStatement	server -> remote = NULL	1329:4:41496:41530	110583	19	True				
ANR	110765	AssignmentExpression	server -> remote = NULL		110583	0		=			
ANR	110766	PtrMemberAccess	server -> remote		110583	0					
ANR	110767	Identifier	server		110583	0					
ANR	110768	Identifier	remote		110583	1					
ANR	110769	Identifier	NULL		110583	1					
ANR	110770	ExpressionStatement	server -> e_ctx = ss_align ( sizeof ( cipher_ctx_t ) )	1331:4:41537:41583	110583	20	True				
ANR	110771	AssignmentExpression	server -> e_ctx = ss_align ( sizeof ( cipher_ctx_t ) )		110583	0		=			
ANR	110772	PtrMemberAccess	server -> e_ctx		110583	0					
ANR	110773	Identifier	server		110583	0					
ANR	110774	Identifier	e_ctx		110583	1					
ANR	110775	CallExpression	ss_align ( sizeof ( cipher_ctx_t ) )		110583	1					
ANR	110776	Callee	ss_align		110583	0					
ANR	110777	Identifier	ss_align		110583	0					
ANR	110778	ArgumentList	sizeof ( cipher_ctx_t )		110583	1					
ANR	110779	Argument	sizeof ( cipher_ctx_t )		110583	0					
ANR	110780	SizeofExpression	sizeof ( cipher_ctx_t )		110583	0					
ANR	110781	Sizeof	sizeof		110583	0					
ANR	110782	SizeofOperand	cipher_ctx_t		110583	1					
ANR	110783	ExpressionStatement	server -> d_ctx = ss_align ( sizeof ( cipher_ctx_t ) )	1332:4:41589:41635	110583	21	True				
ANR	110784	AssignmentExpression	server -> d_ctx = ss_align ( sizeof ( cipher_ctx_t ) )		110583	0		=			
ANR	110785	PtrMemberAccess	server -> d_ctx		110583	0					
ANR	110786	Identifier	server		110583	0					
ANR	110787	Identifier	d_ctx		110583	1					
ANR	110788	CallExpression	ss_align ( sizeof ( cipher_ctx_t ) )		110583	1					
ANR	110789	Callee	ss_align		110583	0					
ANR	110790	Identifier	ss_align		110583	0					
ANR	110791	ArgumentList	sizeof ( cipher_ctx_t )		110583	1					
ANR	110792	Argument	sizeof ( cipher_ctx_t )		110583	0					
ANR	110793	SizeofExpression	sizeof ( cipher_ctx_t )		110583	0					
ANR	110794	Sizeof	sizeof		110583	0					
ANR	110795	SizeofOperand	cipher_ctx_t		110583	1					
ANR	110796	ExpressionStatement	"crypto -> ctx_init ( crypto -> cipher , server -> e_ctx , 1 )"	1333:4:41641:41691	110583	22	True				
ANR	110797	CallExpression	"crypto -> ctx_init ( crypto -> cipher , server -> e_ctx , 1 )"		110583	0					
ANR	110798	Callee	crypto -> ctx_init		110583	0					
ANR	110799	PtrMemberAccess	crypto -> ctx_init		110583	0					
ANR	110800	Identifier	crypto		110583	0					
ANR	110801	Identifier	ctx_init		110583	1					
ANR	110802	ArgumentList	crypto -> cipher		110583	1					
ANR	110803	Argument	crypto -> cipher		110583	0					
ANR	110804	PtrMemberAccess	crypto -> cipher		110583	0					
ANR	110805	Identifier	crypto		110583	0					
ANR	110806	Identifier	cipher		110583	1					
ANR	110807	Argument	server -> e_ctx		110583	1					
ANR	110808	PtrMemberAccess	server -> e_ctx		110583	0					
ANR	110809	Identifier	server		110583	0					
ANR	110810	Identifier	e_ctx		110583	1					
ANR	110811	Argument	1		110583	2					
ANR	110812	PrimaryExpression	1		110583	0					
ANR	110813	ExpressionStatement	"crypto -> ctx_init ( crypto -> cipher , server -> d_ctx , 0 )"	1334:4:41697:41747	110583	23	True				
ANR	110814	CallExpression	"crypto -> ctx_init ( crypto -> cipher , server -> d_ctx , 0 )"		110583	0					
ANR	110815	Callee	crypto -> ctx_init		110583	0					
ANR	110816	PtrMemberAccess	crypto -> ctx_init		110583	0					
ANR	110817	Identifier	crypto		110583	0					
ANR	110818	Identifier	ctx_init		110583	1					
ANR	110819	ArgumentList	crypto -> cipher		110583	1					
ANR	110820	Argument	crypto -> cipher		110583	0					
ANR	110821	PtrMemberAccess	crypto -> cipher		110583	0					
ANR	110822	Identifier	crypto		110583	0					
ANR	110823	Identifier	cipher		110583	1					
ANR	110824	Argument	server -> d_ctx		110583	1					
ANR	110825	PtrMemberAccess	server -> d_ctx		110583	0					
ANR	110826	Identifier	server		110583	0					
ANR	110827	Identifier	d_ctx		110583	1					
ANR	110828	Argument	0		110583	2					
ANR	110829	PrimaryExpression	0		110583	0					
ANR	110830	IdentifierDeclStatement	"int request_timeout = min ( MAX_REQUEST_TIMEOUT , listener -> timeout ) + rand ( ) % MAX_REQUEST_TIMEOUT ;"	1336:4:41754:41876	110583	24	True				
ANR	110831	IdentifierDecl	"request_timeout = min ( MAX_REQUEST_TIMEOUT , listener -> timeout ) + rand ( ) % MAX_REQUEST_TIMEOUT"		110583	0					
ANR	110832	IdentifierDeclType	int		110583	0					
ANR	110833	Identifier	request_timeout		110583	1					
ANR	110834	AssignmentExpression	"request_timeout = min ( MAX_REQUEST_TIMEOUT , listener -> timeout ) + rand ( ) % MAX_REQUEST_TIMEOUT"		110583	2		=			
ANR	110835	Identifier	request_timeout		110583	0					
ANR	110836	AdditiveExpression	"min ( MAX_REQUEST_TIMEOUT , listener -> timeout ) + rand ( ) % MAX_REQUEST_TIMEOUT"		110583	1		+			
ANR	110837	CallExpression	"min ( MAX_REQUEST_TIMEOUT , listener -> timeout )"		110583	0					
ANR	110838	Callee	min		110583	0					
ANR	110839	Identifier	min		110583	0					
ANR	110840	ArgumentList	MAX_REQUEST_TIMEOUT		110583	1					
ANR	110841	Argument	MAX_REQUEST_TIMEOUT		110583	0					
ANR	110842	Identifier	MAX_REQUEST_TIMEOUT		110583	0					
ANR	110843	Argument	listener -> timeout		110583	1					
ANR	110844	PtrMemberAccess	listener -> timeout		110583	0					
ANR	110845	Identifier	listener		110583	0					
ANR	110846	Identifier	timeout		110583	1					
ANR	110847	MultiplicativeExpression	rand ( ) % MAX_REQUEST_TIMEOUT		110583	1		%			
ANR	110848	CallExpression	rand ( )		110583	0					
ANR	110849	Callee	rand		110583	0					
ANR	110850	Identifier	rand		110583	0					
ANR	110851	ArgumentList			110583	1					
ANR	110852	Identifier	MAX_REQUEST_TIMEOUT		110583	1					
ANR	110853	ExpressionStatement	"ev_io_init ( & server -> recv_ctx -> io , server_recv_cb , fd , EV_READ )"	1339:4:41883:41945	110583	25	True				
ANR	110854	CallExpression	"ev_io_init ( & server -> recv_ctx -> io , server_recv_cb , fd , EV_READ )"		110583	0					
ANR	110855	Callee	ev_io_init		110583	0					
ANR	110856	Identifier	ev_io_init		110583	0					
ANR	110857	ArgumentList	& server -> recv_ctx -> io		110583	1					
ANR	110858	Argument	& server -> recv_ctx -> io		110583	0					
ANR	110859	UnaryOperationExpression	& server -> recv_ctx -> io		110583	0					
ANR	110860	UnaryOperator	&		110583	0					
ANR	110861	PtrMemberAccess	server -> recv_ctx -> io		110583	1					
ANR	110862	PtrMemberAccess	server -> recv_ctx		110583	0					
ANR	110863	Identifier	server		110583	0					
ANR	110864	Identifier	recv_ctx		110583	1					
ANR	110865	Identifier	io		110583	1					
ANR	110866	Argument	server_recv_cb		110583	1					
ANR	110867	Identifier	server_recv_cb		110583	0					
ANR	110868	Argument	fd		110583	2					
ANR	110869	Identifier	fd		110583	0					
ANR	110870	Argument	EV_READ		110583	3					
ANR	110871	Identifier	EV_READ		110583	0					
ANR	110872	ExpressionStatement	"ev_io_init ( & server -> send_ctx -> io , server_send_cb , fd , EV_WRITE )"	1340:4:41951:42014	110583	26	True				
ANR	110873	CallExpression	"ev_io_init ( & server -> send_ctx -> io , server_send_cb , fd , EV_WRITE )"		110583	0					
ANR	110874	Callee	ev_io_init		110583	0					
ANR	110875	Identifier	ev_io_init		110583	0					
ANR	110876	ArgumentList	& server -> send_ctx -> io		110583	1					
ANR	110877	Argument	& server -> send_ctx -> io		110583	0					
ANR	110878	UnaryOperationExpression	& server -> send_ctx -> io		110583	0					
ANR	110879	UnaryOperator	&		110583	0					
ANR	110880	PtrMemberAccess	server -> send_ctx -> io		110583	1					
ANR	110881	PtrMemberAccess	server -> send_ctx		110583	0					
ANR	110882	Identifier	server		110583	0					
ANR	110883	Identifier	send_ctx		110583	1					
ANR	110884	Identifier	io		110583	1					
ANR	110885	Argument	server_send_cb		110583	1					
ANR	110886	Identifier	server_send_cb		110583	0					
ANR	110887	Argument	fd		110583	2					
ANR	110888	Identifier	fd		110583	0					
ANR	110889	Argument	EV_WRITE		110583	3					
ANR	110890	Identifier	EV_WRITE		110583	0					
ANR	110891	ExpressionStatement	"ev_timer_init ( & server -> recv_ctx -> watcher , server_timeout_cb , request_timeout , listener -> timeout )"	1341:4:42020:42134	110583	27	True				
ANR	110892	CallExpression	"ev_timer_init ( & server -> recv_ctx -> watcher , server_timeout_cb , request_timeout , listener -> timeout )"		110583	0					
ANR	110893	Callee	ev_timer_init		110583	0					
ANR	110894	Identifier	ev_timer_init		110583	0					
ANR	110895	ArgumentList	& server -> recv_ctx -> watcher		110583	1					
ANR	110896	Argument	& server -> recv_ctx -> watcher		110583	0					
ANR	110897	UnaryOperationExpression	& server -> recv_ctx -> watcher		110583	0					
ANR	110898	UnaryOperator	&		110583	0					
ANR	110899	PtrMemberAccess	server -> recv_ctx -> watcher		110583	1					
ANR	110900	PtrMemberAccess	server -> recv_ctx		110583	0					
ANR	110901	Identifier	server		110583	0					
ANR	110902	Identifier	recv_ctx		110583	1					
ANR	110903	Identifier	watcher		110583	1					
ANR	110904	Argument	server_timeout_cb		110583	1					
ANR	110905	Identifier	server_timeout_cb		110583	0					
ANR	110906	Argument	request_timeout		110583	2					
ANR	110907	Identifier	request_timeout		110583	0					
ANR	110908	Argument	listener -> timeout		110583	3					
ANR	110909	PtrMemberAccess	listener -> timeout		110583	0					
ANR	110910	Identifier	listener		110583	0					
ANR	110911	Identifier	timeout		110583	1					
ANR	110912	ExpressionStatement	"cork_dllist_add ( & connections , & server -> entries )"	1344:4:42141:42188	110583	28	True				
ANR	110913	CallExpression	"cork_dllist_add ( & connections , & server -> entries )"		110583	0					
ANR	110914	Callee	cork_dllist_add		110583	0					
ANR	110915	Identifier	cork_dllist_add		110583	0					
ANR	110916	ArgumentList	& connections		110583	1					
ANR	110917	Argument	& connections		110583	0					
ANR	110918	UnaryOperationExpression	& connections		110583	0					
ANR	110919	UnaryOperator	&		110583	0					
ANR	110920	Identifier	connections		110583	1					
ANR	110921	Argument	& server -> entries		110583	1					
ANR	110922	UnaryOperationExpression	& server -> entries		110583	0					
ANR	110923	UnaryOperator	&		110583	0					
ANR	110924	PtrMemberAccess	server -> entries		110583	1					
ANR	110925	Identifier	server		110583	0					
ANR	110926	Identifier	entries		110583	1					
ANR	110927	ReturnStatement	return server ;	1346:4:42195:42208	110583	29	True				
ANR	110928	Identifier	server		110583	0					
ANR	110929	ReturnType	static server_t *		110583	1					
ANR	110930	Identifier	new_server		110583	2					
ANR	110931	ParameterList	"int fd , listen_ctx_t * listener"		110583	3					
ANR	110932	Parameter	int fd	1303:11:40624:40629	110583	0	True				
ANR	110933	ParameterType	int		110583	0					
ANR	110934	Identifier	fd		110583	1					
ANR	110935	Parameter	listen_ctx_t * listener	1303:19:40632:40653	110583	1	True				
ANR	110936	ParameterType	listen_ctx_t *		110583	0					
ANR	110937	Identifier	listener		110583	1					
ANR	110938	CFGEntryNode	ENTRY		110583		True				
ANR	110939	CFGExitNode	EXIT		110583		True				
ANR	110940	Symbol	server		110583						
ANR	110941	Symbol	server -> recv_ctx -> server		110583						
ANR	110942	Symbol	* server		110583						
ANR	110943	Symbol	request_timeout		110583						
ANR	110944	Symbol	server -> recv_ctx -> connected		110583						
ANR	110945	Symbol	server -> remote		110583						
ANR	110946	Symbol	listener		110583						
ANR	110947	Symbol	server -> send_ctx -> server		110583						
ANR	110948	Symbol	server -> listen_ctx		110583						
ANR	110949	Symbol	server -> stage		110583						
ANR	110950	Symbol	EV_READ		110583						
ANR	110951	Symbol	server -> frag		110583						
ANR	110952	Symbol	* crypto		110583						
ANR	110953	Symbol	rand		110583						
ANR	110954	Symbol	min		110583						
ANR	110955	Symbol	& server -> entries		110583						
ANR	110956	Symbol	ss_align		110583						
ANR	110957	Symbol	NULL		110583						
ANR	110958	Symbol	crypto -> cipher		110583						
ANR	110959	Symbol	server_send_cb		110583						
ANR	110960	Symbol	EV_WRITE		110583						
ANR	110961	Symbol	server -> fd		110583						
ANR	110962	Symbol	& connections		110583						
ANR	110963	Symbol	server_conn		110583						
ANR	110964	Symbol	server -> e_ctx		110583						
ANR	110965	Symbol	* server -> send_ctx		110583						
ANR	110966	Symbol	listener -> timeout		110583						
ANR	110967	Symbol	& server -> recv_ctx -> io		110583						
ANR	110968	Symbol	verbose		110583						
ANR	110969	Symbol	crypto		110583						
ANR	110970	Symbol	server_timeout_cb		110583						
ANR	110971	Symbol	server -> send_ctx -> connected		110583						
ANR	110972	Symbol	server -> d_ctx		110583						
ANR	110973	Symbol	server -> recv_ctx		110583						
ANR	110974	Symbol	MAX_REQUEST_TIMEOUT		110583						
ANR	110975	Symbol	server -> buf		110583						
ANR	110976	Symbol	& server -> recv_ctx -> watcher		110583						
ANR	110977	Symbol	STAGE_INIT		110583						
ANR	110978	Symbol	ss_malloc		110583						
ANR	110979	Symbol	BUF_SIZE		110583						
ANR	110980	Symbol	server_recv_cb		110583						
ANR	110981	Symbol	* * server		110583						
ANR	110982	Symbol	* server -> recv_ctx		110583						
ANR	110983	Symbol	server -> query		110583						
ANR	110984	Symbol	& server -> send_ctx -> io		110583						
ANR	110985	Symbol	* listener		110583						
ANR	110986	Symbol	fd		110583						
ANR	110987	Symbol	server -> send_ctx		110583						
ANR	110988	Function	free_server	1349:0:42213:43076							
ANR	110989	FunctionDef	free_server (server_t * server)		110988	0					
ANR	110990	CompoundStatement		1351:0:42255:43076	110988	0					
ANR	110991	IfStatement	if ( server -> tracker )		110988	0					
ANR	110992	Condition	server -> tracker	1353:7:42291:42305	110988	0	True				
ANR	110993	PtrMemberAccess	server -> tracker		110988	0					
ANR	110994	Identifier	server		110988	0					
ANR	110995	Identifier	tracker		110988	1					
ANR	110996	CompoundStatement		5:8:117:162	110988	1					
ANR	110997	IdentifierDeclStatement	struct dscptracker * tracker = server -> tracker ;	1354:8:42318:42363	110988	0	True				
ANR	110998	IdentifierDecl	* tracker = server -> tracker		110988	0					
ANR	110999	IdentifierDeclType	struct dscptracker *		110988	0					
ANR	111000	Identifier	tracker		110988	1					
ANR	111001	AssignmentExpression	* tracker = server -> tracker		110988	2		=			
ANR	111002	Identifier	tracker		110988	0					
ANR	111003	PtrMemberAccess	server -> tracker		110988	1					
ANR	111004	Identifier	server		110988	0					
ANR	111005	Identifier	tracker		110988	1					
ANR	111006	IdentifierDeclStatement	struct nf_conntrack * ct = server -> tracker -> ct ;	1355:8:42373:42418	110988	1	True				
ANR	111007	IdentifierDecl	* ct = server -> tracker -> ct		110988	0					
ANR	111008	IdentifierDeclType	struct nf_conntrack *		110988	0					
ANR	111009	Identifier	ct		110988	1					
ANR	111010	AssignmentExpression	* ct = server -> tracker -> ct		110988	2		=			
ANR	111011	Identifier	ct		110988	0					
ANR	111012	PtrMemberAccess	server -> tracker -> ct		110988	1					
ANR	111013	PtrMemberAccess	server -> tracker		110988	0					
ANR	111014	Identifier	server		110988	0					
ANR	111015	Identifier	tracker		110988	1					
ANR	111016	Identifier	ct		110988	1					
ANR	111017	ExpressionStatement	server -> tracker = NULL	1356:8:42428:42450	110988	2	True				
ANR	111018	AssignmentExpression	server -> tracker = NULL		110988	0		=			
ANR	111019	PtrMemberAccess	server -> tracker		110988	0					
ANR	111020	Identifier	server		110988	0					
ANR	111021	Identifier	tracker		110988	1					
ANR	111022	Identifier	NULL		110988	1					
ANR	111023	IfStatement	if ( ct )		110988	3					
ANR	111024	Condition	ct	1357:12:42464:42465	110988	0	True				
ANR	111025	Identifier	ct		110988	0					
ANR	111026	CompoundStatement		7:16:212:212	110988	1					
ANR	111027	ExpressionStatement	nfct_destroy ( ct )	1358:12:42482:42498	110988	0	True				
ANR	111028	CallExpression	nfct_destroy ( ct )		110988	0					
ANR	111029	Callee	nfct_destroy		110988	0					
ANR	111030	Identifier	nfct_destroy		110988	0					
ANR	111031	ArgumentList	ct		110988	1					
ANR	111032	Argument	ct		110988	0					
ANR	111033	Identifier	ct		110988	0					
ANR	111034	ExpressionStatement	free ( tracker )	1360:7:42516:42529	110988	4	True				
ANR	111035	CallExpression	free ( tracker )		110988	0					
ANR	111036	Callee	free		110988	0					
ANR	111037	Identifier	free		110988	0					
ANR	111038	ArgumentList	tracker		110988	1					
ANR	111039	Argument	tracker		110988	0					
ANR	111040	Identifier	tracker		110988	0					
ANR	111041	ExpressionStatement		1361:5:42536:42536	110988	1	True				
ANR	111042	ExpressionStatement	cork_dllist_remove ( & server -> entries )	1363:4:42549:42585	110988	2	True				
ANR	111043	CallExpression	cork_dllist_remove ( & server -> entries )		110988	0					
ANR	111044	Callee	cork_dllist_remove		110988	0					
ANR	111045	Identifier	cork_dllist_remove		110988	0					
ANR	111046	ArgumentList	& server -> entries		110988	1					
ANR	111047	Argument	& server -> entries		110988	0					
ANR	111048	UnaryOperationExpression	& server -> entries		110988	0					
ANR	111049	UnaryOperator	&		110988	0					
ANR	111050	PtrMemberAccess	server -> entries		110988	1					
ANR	111051	Identifier	server		110988	0					
ANR	111052	Identifier	entries		110988	1					
ANR	111053	IfStatement	if ( server -> remote != NULL )		110988	3					
ANR	111054	Condition	server -> remote != NULL	1365:8:42596:42617	110988	0	True				
ANR	111055	EqualityExpression	server -> remote != NULL		110988	0		!=			
ANR	111056	PtrMemberAccess	server -> remote		110988	0					
ANR	111057	Identifier	server		110988	0					
ANR	111058	Identifier	remote		110988	1					
ANR	111059	Identifier	NULL		110988	1					
ANR	111060	CompoundStatement		15:32:364:364	110988	1					
ANR	111061	ExpressionStatement	server -> remote -> server = NULL	1366:8:42630:42659	110988	0	True				
ANR	111062	AssignmentExpression	server -> remote -> server = NULL		110988	0		=			
ANR	111063	PtrMemberAccess	server -> remote -> server		110988	0					
ANR	111064	PtrMemberAccess	server -> remote		110988	0					
ANR	111065	Identifier	server		110988	0					
ANR	111066	Identifier	remote		110988	1					
ANR	111067	Identifier	server		110988	1					
ANR	111068	Identifier	NULL		110988	1					
ANR	111069	IfStatement	if ( server -> e_ctx != NULL )		110988	4					
ANR	111070	Condition	server -> e_ctx != NULL	1368:8:42675:42695	110988	0	True				
ANR	111071	EqualityExpression	server -> e_ctx != NULL		110988	0		!=			
ANR	111072	PtrMemberAccess	server -> e_ctx		110988	0					
ANR	111073	Identifier	server		110988	0					
ANR	111074	Identifier	e_ctx		110988	1					
ANR	111075	Identifier	NULL		110988	1					
ANR	111076	CompoundStatement		18:31:442:442	110988	1					
ANR	111077	ExpressionStatement	crypto -> ctx_release ( server -> e_ctx )	1369:8:42708:42742	110988	0	True				
ANR	111078	CallExpression	crypto -> ctx_release ( server -> e_ctx )		110988	0					
ANR	111079	Callee	crypto -> ctx_release		110988	0					
ANR	111080	PtrMemberAccess	crypto -> ctx_release		110988	0					
ANR	111081	Identifier	crypto		110988	0					
ANR	111082	Identifier	ctx_release		110988	1					
ANR	111083	ArgumentList	server -> e_ctx		110988	1					
ANR	111084	Argument	server -> e_ctx		110988	0					
ANR	111085	PtrMemberAccess	server -> e_ctx		110988	0					
ANR	111086	Identifier	server		110988	0					
ANR	111087	Identifier	e_ctx		110988	1					
ANR	111088	ExpressionStatement	ss_free ( server -> e_ctx )	1370:8:42752:42774	110988	1	True				
ANR	111089	CallExpression	ss_free ( server -> e_ctx )		110988	0					
ANR	111090	Callee	ss_free		110988	0					
ANR	111091	Identifier	ss_free		110988	0					
ANR	111092	ArgumentList	server -> e_ctx		110988	1					
ANR	111093	Argument	server -> e_ctx		110988	0					
ANR	111094	PtrMemberAccess	server -> e_ctx		110988	0					
ANR	111095	Identifier	server		110988	0					
ANR	111096	Identifier	e_ctx		110988	1					
ANR	111097	IfStatement	if ( server -> d_ctx != NULL )		110988	5					
ANR	111098	Condition	server -> d_ctx != NULL	1372:8:42790:42810	110988	0	True				
ANR	111099	EqualityExpression	server -> d_ctx != NULL		110988	0		!=			
ANR	111100	PtrMemberAccess	server -> d_ctx		110988	0					
ANR	111101	Identifier	server		110988	0					
ANR	111102	Identifier	d_ctx		110988	1					
ANR	111103	Identifier	NULL		110988	1					
ANR	111104	CompoundStatement		22:31:557:557	110988	1					
ANR	111105	ExpressionStatement	crypto -> ctx_release ( server -> d_ctx )	1373:8:42823:42857	110988	0	True				
ANR	111106	CallExpression	crypto -> ctx_release ( server -> d_ctx )		110988	0					
ANR	111107	Callee	crypto -> ctx_release		110988	0					
ANR	111108	PtrMemberAccess	crypto -> ctx_release		110988	0					
ANR	111109	Identifier	crypto		110988	0					
ANR	111110	Identifier	ctx_release		110988	1					
ANR	111111	ArgumentList	server -> d_ctx		110988	1					
ANR	111112	Argument	server -> d_ctx		110988	0					
ANR	111113	PtrMemberAccess	server -> d_ctx		110988	0					
ANR	111114	Identifier	server		110988	0					
ANR	111115	Identifier	d_ctx		110988	1					
ANR	111116	ExpressionStatement	ss_free ( server -> d_ctx )	1374:8:42867:42889	110988	1	True				
ANR	111117	CallExpression	ss_free ( server -> d_ctx )		110988	0					
ANR	111118	Callee	ss_free		110988	0					
ANR	111119	Identifier	ss_free		110988	0					
ANR	111120	ArgumentList	server -> d_ctx		110988	1					
ANR	111121	Argument	server -> d_ctx		110988	0					
ANR	111122	PtrMemberAccess	server -> d_ctx		110988	0					
ANR	111123	Identifier	server		110988	0					
ANR	111124	Identifier	d_ctx		110988	1					
ANR	111125	IfStatement	if ( server -> buf != NULL )		110988	6					
ANR	111126	Condition	server -> buf != NULL	1376:8:42905:42923	110988	0	True				
ANR	111127	EqualityExpression	server -> buf != NULL		110988	0		!=			
ANR	111128	PtrMemberAccess	server -> buf		110988	0					
ANR	111129	Identifier	server		110988	0					
ANR	111130	Identifier	buf		110988	1					
ANR	111131	Identifier	NULL		110988	1					
ANR	111132	CompoundStatement		26:29:670:670	110988	1					
ANR	111133	ExpressionStatement	bfree ( server -> buf )	1377:8:42936:42954	110988	0	True				
ANR	111134	CallExpression	bfree ( server -> buf )		110988	0					
ANR	111135	Callee	bfree		110988	0					
ANR	111136	Identifier	bfree		110988	0					
ANR	111137	ArgumentList	server -> buf		110988	1					
ANR	111138	Argument	server -> buf		110988	0					
ANR	111139	PtrMemberAccess	server -> buf		110988	0					
ANR	111140	Identifier	server		110988	0					
ANR	111141	Identifier	buf		110988	1					
ANR	111142	ExpressionStatement	ss_free ( server -> buf )	1378:8:42964:42984	110988	1	True				
ANR	111143	CallExpression	ss_free ( server -> buf )		110988	0					
ANR	111144	Callee	ss_free		110988	0					
ANR	111145	Identifier	ss_free		110988	0					
ANR	111146	ArgumentList	server -> buf		110988	1					
ANR	111147	Argument	server -> buf		110988	0					
ANR	111148	PtrMemberAccess	server -> buf		110988	0					
ANR	111149	Identifier	server		110988	0					
ANR	111150	Identifier	buf		110988	1					
ANR	111151	ExpressionStatement	ss_free ( server -> recv_ctx )	1381:4:42997:43022	110988	7	True				
ANR	111152	CallExpression	ss_free ( server -> recv_ctx )		110988	0					
ANR	111153	Callee	ss_free		110988	0					
ANR	111154	Identifier	ss_free		110988	0					
ANR	111155	ArgumentList	server -> recv_ctx		110988	1					
ANR	111156	Argument	server -> recv_ctx		110988	0					
ANR	111157	PtrMemberAccess	server -> recv_ctx		110988	0					
ANR	111158	Identifier	server		110988	0					
ANR	111159	Identifier	recv_ctx		110988	1					
ANR	111160	ExpressionStatement	ss_free ( server -> send_ctx )	1382:4:43028:43053	110988	8	True				
ANR	111161	CallExpression	ss_free ( server -> send_ctx )		110988	0					
ANR	111162	Callee	ss_free		110988	0					
ANR	111163	Identifier	ss_free		110988	0					
ANR	111164	ArgumentList	server -> send_ctx		110988	1					
ANR	111165	Argument	server -> send_ctx		110988	0					
ANR	111166	PtrMemberAccess	server -> send_ctx		110988	0					
ANR	111167	Identifier	server		110988	0					
ANR	111168	Identifier	send_ctx		110988	1					
ANR	111169	ExpressionStatement	ss_free ( server )	1383:4:43059:43074	110988	9	True				
ANR	111170	CallExpression	ss_free ( server )		110988	0					
ANR	111171	Callee	ss_free		110988	0					
ANR	111172	Identifier	ss_free		110988	0					
ANR	111173	ArgumentList	server		110988	1					
ANR	111174	Argument	server		110988	0					
ANR	111175	Identifier	server		110988	0					
ANR	111176	ReturnType	static void		110988	1					
ANR	111177	Identifier	free_server		110988	2					
ANR	111178	ParameterList	server_t * server		110988	3					
ANR	111179	Parameter	server_t * server	1350:12:42237:42252	110988	0	True				
ANR	111180	ParameterType	server_t *		110988	0					
ANR	111181	Identifier	server		110988	1					
ANR	111182	CFGEntryNode	ENTRY		110988		True				
ANR	111183	CFGExitNode	EXIT		110988		True				
ANR	111184	Symbol	server		110988						
ANR	111185	Symbol	* server		110988						
ANR	111186	Symbol	NULL		110988						
ANR	111187	Symbol	server -> remote		110988						
ANR	111188	Symbol	* server -> remote		110988						
ANR	111189	Symbol	server -> remote -> server		110988						
ANR	111190	Symbol	server -> e_ctx		110988						
ANR	111191	Symbol	crypto		110988						
ANR	111192	Symbol	ct		110988						
ANR	111193	Symbol	* server -> tracker		110988						
ANR	111194	Symbol	server -> d_ctx		110988						
ANR	111195	Symbol	server -> recv_ctx		110988						
ANR	111196	Symbol	server -> buf		110988						
ANR	111197	Symbol	server -> tracker		110988						
ANR	111198	Symbol	tracker		110988						
ANR	111199	Symbol	server -> tracker -> ct		110988						
ANR	111200	Symbol	* * server		110988						
ANR	111201	Symbol	& server -> entries		110988						
ANR	111202	Symbol	server -> send_ctx		110988						
ANR	111203	Function	close_and_free_server	1386:0:43079:43632							
ANR	111204	FunctionDef	close_and_free_server (EV_P_ server_t * server)		111203	0					
ANR	111205	CompoundStatement		1388:0:43137:43632	111203	0					
ANR	111206	IfStatement	if ( server != NULL )		111203	0					
ANR	111207	Condition	server != NULL	1389:8:43147:43160	111203	0	True				
ANR	111208	EqualityExpression	server != NULL		111203	0		!=			
ANR	111209	Identifier	server		111203	0					
ANR	111210	Identifier	NULL		111203	1					
ANR	111211	CompoundStatement		2:24:25:25	111203	1					
ANR	111212	IfStatement	if ( server -> query != NULL )		111203	0					
ANR	111213	Condition	server -> query != NULL	1390:12:43177:43197	111203	0	True				
ANR	111214	EqualityExpression	server -> query != NULL		111203	0		!=			
ANR	111215	PtrMemberAccess	server -> query		111203	0					
ANR	111216	Identifier	server		111203	0					
ANR	111217	Identifier	query		111203	1					
ANR	111218	Identifier	NULL		111203	1					
ANR	111219	CompoundStatement		3:35:62:62	111203	1					
ANR	111220	ExpressionStatement	server -> query -> server = NULL	1391:12:43214:43242	111203	0	True				
ANR	111221	AssignmentExpression	server -> query -> server = NULL		111203	0		=			
ANR	111222	PtrMemberAccess	server -> query -> server		111203	0					
ANR	111223	PtrMemberAccess	server -> query		111203	0					
ANR	111224	Identifier	server		111203	0					
ANR	111225	Identifier	query		111203	1					
ANR	111226	Identifier	server		111203	1					
ANR	111227	Identifier	NULL		111203	1					
ANR	111228	ExpressionStatement	server -> query = NULL	1392:12:43256:43276	111203	1	True				
ANR	111229	AssignmentExpression	server -> query = NULL		111203	0		=			
ANR	111230	PtrMemberAccess	server -> query		111203	0					
ANR	111231	Identifier	server		111203	0					
ANR	111232	Identifier	query		111203	1					
ANR	111233	Identifier	NULL		111203	1					
ANR	111234	ExpressionStatement	ev_io_stop ( EV_A_ & server -> send_ctx -> io )	1394:8:43296:43336	111203	1	True				
ANR	111235	CallExpression	ev_io_stop ( EV_A_ & server -> send_ctx -> io )		111203	0					
ANR	111236	Callee	ev_io_stop		111203	0					
ANR	111237	Identifier	ev_io_stop		111203	0					
ANR	111238	ArgumentList	EV_A_ & server -> send_ctx -> io		111203	1					
ANR	111239	Argument	EV_A_ & server -> send_ctx -> io		111203	0					
ANR	111240	BitAndExpression	EV_A_ & server -> send_ctx -> io		111203	0		&			
ANR	111241	Identifier	EV_A_		111203	0					
ANR	111242	PtrMemberAccess	server -> send_ctx -> io		111203	1					
ANR	111243	PtrMemberAccess	server -> send_ctx		111203	0					
ANR	111244	Identifier	server		111203	0					
ANR	111245	Identifier	send_ctx		111203	1					
ANR	111246	Identifier	io		111203	1					
ANR	111247	ExpressionStatement	ev_io_stop ( EV_A_ & server -> recv_ctx -> io )	1395:8:43346:43386	111203	2	True				
ANR	111248	CallExpression	ev_io_stop ( EV_A_ & server -> recv_ctx -> io )		111203	0					
ANR	111249	Callee	ev_io_stop		111203	0					
ANR	111250	Identifier	ev_io_stop		111203	0					
ANR	111251	ArgumentList	EV_A_ & server -> recv_ctx -> io		111203	1					
ANR	111252	Argument	EV_A_ & server -> recv_ctx -> io		111203	0					
ANR	111253	BitAndExpression	EV_A_ & server -> recv_ctx -> io		111203	0		&			
ANR	111254	Identifier	EV_A_		111203	0					
ANR	111255	PtrMemberAccess	server -> recv_ctx -> io		111203	1					
ANR	111256	PtrMemberAccess	server -> recv_ctx		111203	0					
ANR	111257	Identifier	server		111203	0					
ANR	111258	Identifier	recv_ctx		111203	1					
ANR	111259	Identifier	io		111203	1					
ANR	111260	ExpressionStatement	ev_timer_stop ( EV_A_ & server -> recv_ctx -> watcher )	1396:8:43396:43444	111203	3	True				
ANR	111261	CallExpression	ev_timer_stop ( EV_A_ & server -> recv_ctx -> watcher )		111203	0					
ANR	111262	Callee	ev_timer_stop		111203	0					
ANR	111263	Identifier	ev_timer_stop		111203	0					
ANR	111264	ArgumentList	EV_A_ & server -> recv_ctx -> watcher		111203	1					
ANR	111265	Argument	EV_A_ & server -> recv_ctx -> watcher		111203	0					
ANR	111266	BitAndExpression	EV_A_ & server -> recv_ctx -> watcher		111203	0		&			
ANR	111267	Identifier	EV_A_		111203	0					
ANR	111268	PtrMemberAccess	server -> recv_ctx -> watcher		111203	1					
ANR	111269	PtrMemberAccess	server -> recv_ctx		111203	0					
ANR	111270	Identifier	server		111203	0					
ANR	111271	Identifier	recv_ctx		111203	1					
ANR	111272	Identifier	watcher		111203	1					
ANR	111273	ExpressionStatement	close ( server -> fd )	1397:8:43454:43471	111203	4	True				
ANR	111274	CallExpression	close ( server -> fd )		111203	0					
ANR	111275	Callee	close		111203	0					
ANR	111276	Identifier	close		111203	0					
ANR	111277	ArgumentList	server -> fd		111203	1					
ANR	111278	Argument	server -> fd		111203	0					
ANR	111279	PtrMemberAccess	server -> fd		111203	0					
ANR	111280	Identifier	server		111203	0					
ANR	111281	Identifier	fd		111203	1					
ANR	111282	ExpressionStatement	free_server ( server )	1398:8:43481:43500	111203	5	True				
ANR	111283	CallExpression	free_server ( server )		111203	0					
ANR	111284	Callee	free_server		111203	0					
ANR	111285	Identifier	free_server		111203	0					
ANR	111286	ArgumentList	server		111203	1					
ANR	111287	Argument	server		111203	0					
ANR	111288	Identifier	server		111203	0					
ANR	111289	IfStatement	if ( verbose )		111203	6					
ANR	111290	Condition	verbose	1399:12:43514:43520	111203	0	True				
ANR	111291	Identifier	verbose		111203	0					
ANR	111292	CompoundStatement		12:21:385:385	111203	1					
ANR	111293	ExpressionStatement	server_conn --	1400:12:43537:43550	111203	0	True				
ANR	111294	PostIncDecOperationExpression	server_conn --		111203	0					
ANR	111295	Identifier	server_conn		111203	0					
ANR	111296	IncDec	--		111203	1					
ANR	111297	ExpressionStatement	"LOGI ( ""current server connection: %d"" , server_conn )"	1401:12:43564:43614	111203	1	True				
ANR	111298	CallExpression	"LOGI ( ""current server connection: %d"" , server_conn )"		111203	0					
ANR	111299	Callee	LOGI		111203	0					
ANR	111300	Identifier	LOGI		111203	0					
ANR	111301	ArgumentList	"""current server connection: %d"""		111203	1					
ANR	111302	Argument	"""current server connection: %d"""		111203	0					
ANR	111303	PrimaryExpression	"""current server connection: %d"""		111203	0					
ANR	111304	Argument	server_conn		111203	1					
ANR	111305	Identifier	server_conn		111203	0					
ANR	111306	ReturnType	static void		111203	1					
ANR	111307	Identifier	close_and_free_server		111203	2					
ANR	111308	ParameterList	EV_P_ server_t * server		111203	3					
ANR	111309	Parameter	EV_P_ server_t * server	1387:22:43113:43134	111203	0	True				
ANR	111310	ParameterType	EV_P_ server_t *		111203	0					
ANR	111311	Identifier	server		111203	1					
ANR	111312	CFGEntryNode	ENTRY		111203		True				
ANR	111313	CFGExitNode	EXIT		111203		True				
ANR	111314	Symbol	server -> recv_ctx -> io		111203						
ANR	111315	Symbol	server		111203						
ANR	111316	Symbol	server -> query -> server		111203						
ANR	111317	Symbol	NULL		111203						
ANR	111318	Symbol	* server		111203						
ANR	111319	Symbol	* server -> query		111203						
ANR	111320	Symbol	server -> fd		111203						
ANR	111321	Symbol	server_conn		111203						
ANR	111322	Symbol	server -> recv_ctx -> watcher		111203						
ANR	111323	Symbol	* server -> send_ctx		111203						
ANR	111324	Symbol	verbose		111203						
ANR	111325	Symbol	server -> recv_ctx		111203						
ANR	111326	Symbol	server -> send_ctx -> io		111203						
ANR	111327	Symbol	EV_A_		111203						
ANR	111328	Symbol	* * server		111203						
ANR	111329	Symbol	* server -> recv_ctx		111203						
ANR	111330	Symbol	server -> query		111203						
ANR	111331	Symbol	server -> send_ctx		111203						
ANR	111332	Function	signal_cb	1406:0:43635:44186							
ANR	111333	FunctionDef	"signal_cb (EV_P_ ev_signal * w , int revents)"		111332	0					
ANR	111334	CompoundStatement		1408:0:43690:44186	111332	0					
ANR	111335	IfStatement	if ( revents & EV_SIGNAL )		111332	0					
ANR	111336	Condition	revents & EV_SIGNAL	1409:8:43700:43718	111332	0	True				
ANR	111337	BitAndExpression	revents & EV_SIGNAL		111332	0		&			
ANR	111338	Identifier	revents		111332	0					
ANR	111339	Identifier	EV_SIGNAL		111332	1					
ANR	111340	CompoundStatement		2:29:30:30	111332	1					
ANR	111341	SwitchStatement	switch ( w -> signum )		111332	0					
ANR	111342	Condition	w -> signum	1410:16:43739:43747	111332	0	True				
ANR	111343	PtrMemberAccess	w -> signum		111332	0					
ANR	111344	Identifier	w		111332	0					
ANR	111345	Identifier	signum		111332	1					
ANR	111346	CompoundStatement		3:27:59:59	111332	1					
ANR	111347	Label	case SIGCHLD :	1411:8:43760:43772	111332	0	True				
ANR	111348	Identifier	SIGCHLD		111332	0					
ANR	111349	IfStatement	if ( ! is_plugin_running ( ) )		111332	1					
ANR	111350	Condition	! is_plugin_running ( )	1412:16:43790:43809	111332	0	True				
ANR	111351	UnaryOperationExpression	! is_plugin_running ( )		111332	0					
ANR	111352	UnaryOperator	!		111332	0					
ANR	111353	CallExpression	is_plugin_running ( )		111332	1					
ANR	111354	Callee	is_plugin_running		111332	0					
ANR	111355	Identifier	is_plugin_running		111332	0					
ANR	111356	ArgumentList			111332	1					
ANR	111357	ExpressionStatement	"LOGE ( ""plugin service exit unexpectedly"" )"	1413:16:43828:43868	111332	1	True				
ANR	111358	CallExpression	"LOGE ( ""plugin service exit unexpectedly"" )"		111332	0					
ANR	111359	Callee	LOGE		111332	0					
ANR	111360	Identifier	LOGE		111332	0					
ANR	111361	ArgumentList	"""plugin service exit unexpectedly"""		111332	1					
ANR	111362	Argument	"""plugin service exit unexpectedly"""		111332	0					
ANR	111363	PrimaryExpression	"""plugin service exit unexpectedly"""		111332	0					
ANR	111364	ElseStatement	else		111332	0					
ANR	111365	ReturnStatement	return ;	1415:16:43903:43909	111332	0	True				
ANR	111366	Label	case SIGINT :	1416:8:43919:43930	111332	2	True				
ANR	111367	Identifier	SIGINT		111332	0					
ANR	111368	Label	case SIGTERM :	1417:8:43940:43952	111332	3	True				
ANR	111369	Identifier	SIGTERM		111332	0					
ANR	111370	ExpressionStatement	"ev_signal_stop ( EV_DEFAULT , & sigint_watcher )"	1418:12:43966:44009	111332	4	True				
ANR	111371	CallExpression	"ev_signal_stop ( EV_DEFAULT , & sigint_watcher )"		111332	0					
ANR	111372	Callee	ev_signal_stop		111332	0					
ANR	111373	Identifier	ev_signal_stop		111332	0					
ANR	111374	ArgumentList	EV_DEFAULT		111332	1					
ANR	111375	Argument	EV_DEFAULT		111332	0					
ANR	111376	Identifier	EV_DEFAULT		111332	0					
ANR	111377	Argument	& sigint_watcher		111332	1					
ANR	111378	UnaryOperationExpression	& sigint_watcher		111332	0					
ANR	111379	UnaryOperator	&		111332	0					
ANR	111380	Identifier	sigint_watcher		111332	1					
ANR	111381	ExpressionStatement	"ev_signal_stop ( EV_DEFAULT , & sigterm_watcher )"	1419:12:44023:44067	111332	5	True				
ANR	111382	CallExpression	"ev_signal_stop ( EV_DEFAULT , & sigterm_watcher )"		111332	0					
ANR	111383	Callee	ev_signal_stop		111332	0					
ANR	111384	Identifier	ev_signal_stop		111332	0					
ANR	111385	ArgumentList	EV_DEFAULT		111332	1					
ANR	111386	Argument	EV_DEFAULT		111332	0					
ANR	111387	Identifier	EV_DEFAULT		111332	0					
ANR	111388	Argument	& sigterm_watcher		111332	1					
ANR	111389	UnaryOperationExpression	& sigterm_watcher		111332	0					
ANR	111390	UnaryOperator	&		111332	0					
ANR	111391	Identifier	sigterm_watcher		111332	1					
ANR	111392	ExpressionStatement	"ev_signal_stop ( EV_DEFAULT , & sigchld_watcher )"	1420:12:44081:44125	111332	6	True				
ANR	111393	CallExpression	"ev_signal_stop ( EV_DEFAULT , & sigchld_watcher )"		111332	0					
ANR	111394	Callee	ev_signal_stop		111332	0					
ANR	111395	Identifier	ev_signal_stop		111332	0					
ANR	111396	ArgumentList	EV_DEFAULT		111332	1					
ANR	111397	Argument	EV_DEFAULT		111332	0					
ANR	111398	Identifier	EV_DEFAULT		111332	0					
ANR	111399	Argument	& sigchld_watcher		111332	1					
ANR	111400	UnaryOperationExpression	& sigchld_watcher		111332	0					
ANR	111401	UnaryOperator	&		111332	0					
ANR	111402	Identifier	sigchld_watcher		111332	1					
ANR	111403	Statement	ev_unloop	1421:12:44139:44147	111332	7	True				
ANR	111404	Statement	(	1421:21:44148:44148	111332	8	True				
ANR	111405	Statement	EV_A_	1421:22:44149:44153	111332	9	True				
ANR	111406	Statement	EVUNLOOP_ALL	1421:28:44155:44166	111332	10	True				
ANR	111407	Statement	)	1421:40:44167:44167	111332	11	True				
ANR	111408	ExpressionStatement		1421:41:44168:44168	111332	12	True				
ANR	111409	ReturnType	static void		111332	1					
ANR	111410	Identifier	signal_cb		111332	2					
ANR	111411	ParameterList	"EV_P_ ev_signal * w , int revents"		111332	3					
ANR	111412	Parameter	EV_P_ ev_signal * w	1407:10:43657:43674	111332	0	True				
ANR	111413	ParameterType	EV_P_ ev_signal *		111332	0					
ANR	111414	Identifier	w		111332	1					
ANR	111415	Parameter	int revents	1407:30:43677:43687	111332	1	True				
ANR	111416	ParameterType	int		111332	0					
ANR	111417	Identifier	revents		111332	1					
ANR	111418	CFGEntryNode	ENTRY		111332		True				
ANR	111419	CFGExitNode	EXIT		111332		True				
ANR	111420	Symbol	is_plugin_running		111332						
ANR	111421	Symbol	& sigterm_watcher		111332						
ANR	111422	Symbol	& sigchld_watcher		111332						
ANR	111423	Symbol	w -> signum		111332						
ANR	111424	Symbol	* w		111332						
ANR	111425	Symbol	& sigint_watcher		111332						
ANR	111426	Symbol	EV_DEFAULT		111332						
ANR	111427	Symbol	revents		111332						
ANR	111428	Symbol	w		111332						
ANR	111429	Symbol	EV_SIGNAL		111332						
ANR	111430	Function	accept_cb	1426:0:44189:45664							
ANR	111431	FunctionDef	"accept_cb (EV_P_ ev_io * w , int revents)"		111430	0					
ANR	111432	CompoundStatement		1428:0:44240:45664	111430	0					
ANR	111433	IdentifierDeclStatement	listen_ctx_t * listener = ( listen_ctx_t * ) w ;	1429:4:44246:44288	111430	0	True				
ANR	111434	IdentifierDecl	* listener = ( listen_ctx_t * ) w		111430	0					
ANR	111435	IdentifierDeclType	listen_ctx_t *		111430	0					
ANR	111436	Identifier	listener		111430	1					
ANR	111437	AssignmentExpression	* listener = ( listen_ctx_t * ) w		111430	2		=			
ANR	111438	Identifier	listener		111430	0					
ANR	111439	CastExpression	( listen_ctx_t * ) w		111430	1					
ANR	111440	CastTarget	listen_ctx_t *		111430	0					
ANR	111441	Identifier	w		111430	1					
ANR	111442	IdentifierDeclStatement	"int serverfd = accept ( listener -> fd , NULL , NULL ) ;"	1430:4:44294:44351	111430	1	True				
ANR	111443	IdentifierDecl	"serverfd = accept ( listener -> fd , NULL , NULL )"		111430	0					
ANR	111444	IdentifierDeclType	int		111430	0					
ANR	111445	Identifier	serverfd		111430	1					
ANR	111446	AssignmentExpression	"serverfd = accept ( listener -> fd , NULL , NULL )"		111430	2		=			
ANR	111447	Identifier	serverfd		111430	0					
ANR	111448	CallExpression	"accept ( listener -> fd , NULL , NULL )"		111430	1					
ANR	111449	Callee	accept		111430	0					
ANR	111450	Identifier	accept		111430	0					
ANR	111451	ArgumentList	listener -> fd		111430	1					
ANR	111452	Argument	listener -> fd		111430	0					
ANR	111453	PtrMemberAccess	listener -> fd		111430	0					
ANR	111454	Identifier	listener		111430	0					
ANR	111455	Identifier	fd		111430	1					
ANR	111456	Argument	NULL		111430	1					
ANR	111457	Identifier	NULL		111430	0					
ANR	111458	Argument	NULL		111430	2					
ANR	111459	Identifier	NULL		111430	0					
ANR	111460	IfStatement	if ( serverfd == - 1 )		111430	2					
ANR	111461	Condition	serverfd == - 1	1431:8:44361:44374	111430	0	True				
ANR	111462	EqualityExpression	serverfd == - 1		111430	0		==			
ANR	111463	Identifier	serverfd		111430	0					
ANR	111464	UnaryOperationExpression	- 1		111430	1					
ANR	111465	UnaryOperator	-		111430	0					
ANR	111466	PrimaryExpression	1		111430	1					
ANR	111467	CompoundStatement		4:24:136:136	111430	1					
ANR	111468	ExpressionStatement	"ERROR ( ""accept"" )"	1432:8:44387:44402	111430	0	True				
ANR	111469	CallExpression	"ERROR ( ""accept"" )"		111430	0					
ANR	111470	Callee	ERROR		111430	0					
ANR	111471	Identifier	ERROR		111430	0					
ANR	111472	ArgumentList	"""accept"""		111430	1					
ANR	111473	Argument	"""accept"""		111430	0					
ANR	111474	PrimaryExpression	"""accept"""		111430	0					
ANR	111475	ReturnStatement	return ;	1433:8:44412:44418	111430	1	True				
ANR	111476	IdentifierDeclStatement	char * peer_name = get_peer_name ( serverfd ) ;	1436:4:44431:44472	111430	3	True				
ANR	111477	IdentifierDecl	* peer_name = get_peer_name ( serverfd )		111430	0					
ANR	111478	IdentifierDeclType	char *		111430	0					
ANR	111479	Identifier	peer_name		111430	1					
ANR	111480	AssignmentExpression	* peer_name = get_peer_name ( serverfd )		111430	2		=			
ANR	111481	Identifier	peer_name		111430	0					
ANR	111482	CallExpression	get_peer_name ( serverfd )		111430	1					
ANR	111483	Callee	get_peer_name		111430	0					
ANR	111484	Identifier	get_peer_name		111430	0					
ANR	111485	ArgumentList	serverfd		111430	1					
ANR	111486	Argument	serverfd		111430	0					
ANR	111487	Identifier	serverfd		111430	0					
ANR	111488	IfStatement	if ( peer_name != NULL )		111430	4					
ANR	111489	Condition	peer_name != NULL	1437:8:44482:44498	111430	0	True				
ANR	111490	EqualityExpression	peer_name != NULL		111430	0		!=			
ANR	111491	Identifier	peer_name		111430	0					
ANR	111492	Identifier	NULL		111430	1					
ANR	111493	CompoundStatement		11:8:270:291	111430	1					
ANR	111494	IdentifierDeclStatement	int in_white_list = 0 ;	1438:8:44511:44532	111430	0	True				
ANR	111495	IdentifierDecl	in_white_list = 0		111430	0					
ANR	111496	IdentifierDeclType	int		111430	0					
ANR	111497	Identifier	in_white_list		111430	1					
ANR	111498	AssignmentExpression	in_white_list = 0		111430	2		=			
ANR	111499	Identifier	in_white_list		111430	0					
ANR	111500	PrimaryExpression	0		111430	1					
ANR	111501	IfStatement	if ( acl )		111430	1					
ANR	111502	Condition	acl	1439:12:44546:44548	111430	0	True				
ANR	111503	Identifier	acl		111430	0					
ANR	111504	CompoundStatement		12:17:310:310	111430	1					
ANR	111505	IfStatement	if ( ( get_acl_mode ( ) == BLACK_LIST && acl_match_host ( peer_name ) == 1 ) || ( get_acl_mode ( ) == WHITE_LIST && acl_match_host ( peer_name ) >= 0 ) )		111430	0					
ANR	111506	Condition	( get_acl_mode ( ) == BLACK_LIST && acl_match_host ( peer_name ) == 1 ) || ( get_acl_mode ( ) == WHITE_LIST && acl_match_host ( peer_name ) >= 0 )	1440:16:44569:44716	111430	0	True				
ANR	111507	OrExpression	( get_acl_mode ( ) == BLACK_LIST && acl_match_host ( peer_name ) == 1 ) || ( get_acl_mode ( ) == WHITE_LIST && acl_match_host ( peer_name ) >= 0 )		111430	0		||			
ANR	111508	AndExpression	get_acl_mode ( ) == BLACK_LIST && acl_match_host ( peer_name ) == 1		111430	0		&&			
ANR	111509	EqualityExpression	get_acl_mode ( ) == BLACK_LIST		111430	0		==			
ANR	111510	CallExpression	get_acl_mode ( )		111430	0					
ANR	111511	Callee	get_acl_mode		111430	0					
ANR	111512	Identifier	get_acl_mode		111430	0					
ANR	111513	ArgumentList			111430	1					
ANR	111514	Identifier	BLACK_LIST		111430	1					
ANR	111515	EqualityExpression	acl_match_host ( peer_name ) == 1		111430	1		==			
ANR	111516	CallExpression	acl_match_host ( peer_name )		111430	0					
ANR	111517	Callee	acl_match_host		111430	0					
ANR	111518	Identifier	acl_match_host		111430	0					
ANR	111519	ArgumentList	peer_name		111430	1					
ANR	111520	Argument	peer_name		111430	0					
ANR	111521	Identifier	peer_name		111430	0					
ANR	111522	PrimaryExpression	1		111430	1					
ANR	111523	AndExpression	get_acl_mode ( ) == WHITE_LIST && acl_match_host ( peer_name ) >= 0		111430	1		&&			
ANR	111524	EqualityExpression	get_acl_mode ( ) == WHITE_LIST		111430	0		==			
ANR	111525	CallExpression	get_acl_mode ( )		111430	0					
ANR	111526	Callee	get_acl_mode		111430	0					
ANR	111527	Identifier	get_acl_mode		111430	0					
ANR	111528	ArgumentList			111430	1					
ANR	111529	Identifier	WHITE_LIST		111430	1					
ANR	111530	RelationalExpression	acl_match_host ( peer_name ) >= 0		111430	1		>=			
ANR	111531	CallExpression	acl_match_host ( peer_name )		111430	0					
ANR	111532	Callee	acl_match_host		111430	0					
ANR	111533	Identifier	acl_match_host		111430	0					
ANR	111534	ArgumentList	peer_name		111430	1					
ANR	111535	Argument	peer_name		111430	0					
ANR	111536	Identifier	peer_name		111430	0					
ANR	111537	PrimaryExpression	0		111430	1					
ANR	111538	CompoundStatement		14:85:478:478	111430	1					
ANR	111539	ExpressionStatement	"LOGE ( ""Access denied from %s"" , peer_name )"	1442:16:44737:44777	111430	0	True				
ANR	111540	CallExpression	"LOGE ( ""Access denied from %s"" , peer_name )"		111430	0					
ANR	111541	Callee	LOGE		111430	0					
ANR	111542	Identifier	LOGE		111430	0					
ANR	111543	ArgumentList	"""Access denied from %s"""		111430	1					
ANR	111544	Argument	"""Access denied from %s"""		111430	0					
ANR	111545	PrimaryExpression	"""Access denied from %s"""		111430	0					
ANR	111546	Argument	peer_name		111430	1					
ANR	111547	Identifier	peer_name		111430	0					
ANR	111548	ExpressionStatement	close ( serverfd )	1443:16:44795:44810	111430	1	True				
ANR	111549	CallExpression	close ( serverfd )		111430	0					
ANR	111550	Callee	close		111430	0					
ANR	111551	Identifier	close		111430	0					
ANR	111552	ArgumentList	serverfd		111430	1					
ANR	111553	Argument	serverfd		111430	0					
ANR	111554	Identifier	serverfd		111430	0					
ANR	111555	ReturnStatement	return ;	1444:16:44828:44834	111430	2	True				
ANR	111556	ElseStatement	else		111430	0					
ANR	111557	IfStatement	if ( acl_match_host ( peer_name ) == - 1 )		111430	0					
ANR	111558	Condition	acl_match_host ( peer_name ) == - 1	1445:23:44859:44889	111430	0	True				
ANR	111559	EqualityExpression	acl_match_host ( peer_name ) == - 1		111430	0		==			
ANR	111560	CallExpression	acl_match_host ( peer_name )		111430	0					
ANR	111561	Callee	acl_match_host		111430	0					
ANR	111562	Identifier	acl_match_host		111430	0					
ANR	111563	ArgumentList	peer_name		111430	1					
ANR	111564	Argument	peer_name		111430	0					
ANR	111565	Identifier	peer_name		111430	0					
ANR	111566	UnaryOperationExpression	- 1		111430	1					
ANR	111567	UnaryOperator	-		111430	0					
ANR	111568	PrimaryExpression	1		111430	1					
ANR	111569	CompoundStatement		18:56:651:651	111430	1					
ANR	111570	ExpressionStatement	in_white_list = 1	1446:16:44910:44927	111430	0	True				
ANR	111571	AssignmentExpression	in_white_list = 1		111430	0		=			
ANR	111572	Identifier	in_white_list		111430	0					
ANR	111573	PrimaryExpression	1		111430	1					
ANR	111574	IfStatement	if ( ! in_white_list && plugin == NULL && check_block_list ( peer_name ) )		111430	2					
ANR	111575	Condition	! in_white_list && plugin == NULL && check_block_list ( peer_name )	1449:12:44965:45043	111430	0	True				
ANR	111576	AndExpression	! in_white_list && plugin == NULL && check_block_list ( peer_name )		111430	0		&&			
ANR	111577	UnaryOperationExpression	! in_white_list		111430	0					
ANR	111578	UnaryOperator	!		111430	0					
ANR	111579	Identifier	in_white_list		111430	1					
ANR	111580	AndExpression	plugin == NULL && check_block_list ( peer_name )		111430	1		&&			
ANR	111581	EqualityExpression	plugin == NULL		111430	0		==			
ANR	111582	Identifier	plugin		111430	0					
ANR	111583	Identifier	NULL		111430	1					
ANR	111584	CallExpression	check_block_list ( peer_name )		111430	1					
ANR	111585	Callee	check_block_list		111430	0					
ANR	111586	Identifier	check_block_list		111430	0					
ANR	111587	ArgumentList	peer_name		111430	1					
ANR	111588	Argument	peer_name		111430	0					
ANR	111589	Identifier	peer_name		111430	0					
ANR	111590	CompoundStatement		23:48:805:805	111430	1					
ANR	111591	ExpressionStatement	"LOGE ( ""block all requests from %s"" , peer_name )"	1451:12:45060:45105	111430	0	True				
ANR	111592	CallExpression	"LOGE ( ""block all requests from %s"" , peer_name )"		111430	0					
ANR	111593	Callee	LOGE		111430	0					
ANR	111594	Identifier	LOGE		111430	0					
ANR	111595	ArgumentList	"""block all requests from %s"""		111430	1					
ANR	111596	Argument	"""block all requests from %s"""		111430	0					
ANR	111597	PrimaryExpression	"""block all requests from %s"""		111430	0					
ANR	111598	Argument	peer_name		111430	1					
ANR	111599	Identifier	peer_name		111430	0					
ANR	111600	ExpressionStatement	set_linger ( serverfd )	1453:12:45136:45156	111430	1	True				
ANR	111601	CallExpression	set_linger ( serverfd )		111430	0					
ANR	111602	Callee	set_linger		111430	0					
ANR	111603	Identifier	set_linger		111430	0					
ANR	111604	ArgumentList	serverfd		111430	1					
ANR	111605	Argument	serverfd		111430	0					
ANR	111606	Identifier	serverfd		111430	0					
ANR	111607	ExpressionStatement	close ( serverfd )	1455:12:45177:45192	111430	2	True				
ANR	111608	CallExpression	close ( serverfd )		111430	0					
ANR	111609	Callee	close		111430	0					
ANR	111610	Identifier	close		111430	0					
ANR	111611	ArgumentList	serverfd		111430	1					
ANR	111612	Argument	serverfd		111430	0					
ANR	111613	Identifier	serverfd		111430	0					
ANR	111614	ReturnStatement	return ;	1456:12:45206:45212	111430	3	True				
ANR	111615	IdentifierDeclStatement	int opt = 1 ;	1460:4:45235:45246	111430	5	True				
ANR	111616	IdentifierDecl	opt = 1		111430	0					
ANR	111617	IdentifierDeclType	int		111430	0					
ANR	111618	Identifier	opt		111430	1					
ANR	111619	AssignmentExpression	opt = 1		111430	2		=			
ANR	111620	Identifier	opt		111430	0					
ANR	111621	PrimaryExpression	1		111430	1					
ANR	111622	ExpressionStatement	"setsockopt ( serverfd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"	1461:4:45252:45313	111430	6	True				
ANR	111623	CallExpression	"setsockopt ( serverfd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"		111430	0					
ANR	111624	Callee	setsockopt		111430	0					
ANR	111625	Identifier	setsockopt		111430	0					
ANR	111626	ArgumentList	serverfd		111430	1					
ANR	111627	Argument	serverfd		111430	0					
ANR	111628	Identifier	serverfd		111430	0					
ANR	111629	Argument	SOL_TCP		111430	1					
ANR	111630	Identifier	SOL_TCP		111430	0					
ANR	111631	Argument	TCP_NODELAY		111430	2					
ANR	111632	Identifier	TCP_NODELAY		111430	0					
ANR	111633	Argument	& opt		111430	3					
ANR	111634	UnaryOperationExpression	& opt		111430	0					
ANR	111635	UnaryOperator	&		111430	0					
ANR	111636	Identifier	opt		111430	1					
ANR	111637	Argument	sizeof ( opt )		111430	4					
ANR	111638	SizeofExpression	sizeof ( opt )		111430	0					
ANR	111639	Sizeof	sizeof		111430	0					
ANR	111640	SizeofOperand	opt		111430	1					
ANR	111641	ExpressionStatement	"setsockopt ( serverfd , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"	1463:4:45339:45404	111430	7	True				
ANR	111642	CallExpression	"setsockopt ( serverfd , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"		111430	0					
ANR	111643	Callee	setsockopt		111430	0					
ANR	111644	Identifier	setsockopt		111430	0					
ANR	111645	ArgumentList	serverfd		111430	1					
ANR	111646	Argument	serverfd		111430	0					
ANR	111647	Identifier	serverfd		111430	0					
ANR	111648	Argument	SOL_SOCKET		111430	1					
ANR	111649	Identifier	SOL_SOCKET		111430	0					
ANR	111650	Argument	SO_NOSIGPIPE		111430	2					
ANR	111651	Identifier	SO_NOSIGPIPE		111430	0					
ANR	111652	Argument	& opt		111430	3					
ANR	111653	UnaryOperationExpression	& opt		111430	0					
ANR	111654	UnaryOperator	&		111430	0					
ANR	111655	Identifier	opt		111430	1					
ANR	111656	Argument	sizeof ( opt )		111430	4					
ANR	111657	SizeofExpression	sizeof ( opt )		111430	0					
ANR	111658	Sizeof	sizeof		111430	0					
ANR	111659	SizeofOperand	opt		111430	1					
ANR	111660	ExpressionStatement	setnonblocking ( serverfd )	1465:4:45417:45441	111430	8	True				
ANR	111661	CallExpression	setnonblocking ( serverfd )		111430	0					
ANR	111662	Callee	setnonblocking		111430	0					
ANR	111663	Identifier	setnonblocking		111430	0					
ANR	111664	ArgumentList	serverfd		111430	1					
ANR	111665	Argument	serverfd		111430	0					
ANR	111666	Identifier	serverfd		111430	0					
ANR	111667	IfStatement	if ( verbose )		111430	9					
ANR	111668	Condition	verbose	1467:8:45452:45458	111430	0	True				
ANR	111669	Identifier	verbose		111430	0					
ANR	111670	CompoundStatement		40:17:1220:1220	111430	1					
ANR	111671	ExpressionStatement	"LOGI ( ""accept a connection"" )"	1468:8:45471:45498	111430	0	True				
ANR	111672	CallExpression	"LOGI ( ""accept a connection"" )"		111430	0					
ANR	111673	Callee	LOGI		111430	0					
ANR	111674	Identifier	LOGI		111430	0					
ANR	111675	ArgumentList	"""accept a connection"""		111430	1					
ANR	111676	Argument	"""accept a connection"""		111430	0					
ANR	111677	PrimaryExpression	"""accept a connection"""		111430	0					
ANR	111678	IdentifierDeclStatement	"server_t * server = new_server ( serverfd , listener ) ;"	1471:4:45511:45560	111430	10	True				
ANR	111679	IdentifierDecl	"* server = new_server ( serverfd , listener )"		111430	0					
ANR	111680	IdentifierDeclType	server_t *		111430	0					
ANR	111681	Identifier	server		111430	1					
ANR	111682	AssignmentExpression	"* server = new_server ( serverfd , listener )"		111430	2		=			
ANR	111683	Identifier	server		111430	0					
ANR	111684	CallExpression	"new_server ( serverfd , listener )"		111430	1					
ANR	111685	Callee	new_server		111430	0					
ANR	111686	Identifier	new_server		111430	0					
ANR	111687	ArgumentList	serverfd		111430	1					
ANR	111688	Argument	serverfd		111430	0					
ANR	111689	Identifier	serverfd		111430	0					
ANR	111690	Argument	listener		111430	1					
ANR	111691	Identifier	listener		111430	0					
ANR	111692	ExpressionStatement	ev_io_start ( EV_A_ & server -> recv_ctx -> io )	1472:4:45566:45607	111430	11	True				
ANR	111693	CallExpression	ev_io_start ( EV_A_ & server -> recv_ctx -> io )		111430	0					
ANR	111694	Callee	ev_io_start		111430	0					
ANR	111695	Identifier	ev_io_start		111430	0					
ANR	111696	ArgumentList	EV_A_ & server -> recv_ctx -> io		111430	1					
ANR	111697	Argument	EV_A_ & server -> recv_ctx -> io		111430	0					
ANR	111698	BitAndExpression	EV_A_ & server -> recv_ctx -> io		111430	0		&			
ANR	111699	Identifier	EV_A_		111430	0					
ANR	111700	PtrMemberAccess	server -> recv_ctx -> io		111430	1					
ANR	111701	PtrMemberAccess	server -> recv_ctx		111430	0					
ANR	111702	Identifier	server		111430	0					
ANR	111703	Identifier	recv_ctx		111430	1					
ANR	111704	Identifier	io		111430	1					
ANR	111705	ExpressionStatement	ev_timer_start ( EV_A_ & server -> recv_ctx -> watcher )	1473:4:45613:45662	111430	12	True				
ANR	111706	CallExpression	ev_timer_start ( EV_A_ & server -> recv_ctx -> watcher )		111430	0					
ANR	111707	Callee	ev_timer_start		111430	0					
ANR	111708	Identifier	ev_timer_start		111430	0					
ANR	111709	ArgumentList	EV_A_ & server -> recv_ctx -> watcher		111430	1					
ANR	111710	Argument	EV_A_ & server -> recv_ctx -> watcher		111430	0					
ANR	111711	BitAndExpression	EV_A_ & server -> recv_ctx -> watcher		111430	0		&			
ANR	111712	Identifier	EV_A_		111430	0					
ANR	111713	PtrMemberAccess	server -> recv_ctx -> watcher		111430	1					
ANR	111714	PtrMemberAccess	server -> recv_ctx		111430	0					
ANR	111715	Identifier	server		111430	0					
ANR	111716	Identifier	recv_ctx		111430	1					
ANR	111717	Identifier	watcher		111430	1					
ANR	111718	ReturnType	static void		111430	1					
ANR	111719	Identifier	accept_cb		111430	2					
ANR	111720	ParameterList	"EV_P_ ev_io * w , int revents"		111430	3					
ANR	111721	Parameter	EV_P_ ev_io * w	1427:10:44211:44224	111430	0	True				
ANR	111722	ParameterType	EV_P_ ev_io *		111430	0					
ANR	111723	Identifier	w		111430	1					
ANR	111724	Parameter	int revents	1427:26:44227:44237	111430	1	True				
ANR	111725	ParameterType	int		111430	0					
ANR	111726	Identifier	revents		111430	1					
ANR	111727	CFGEntryNode	ENTRY		111430		True				
ANR	111728	CFGExitNode	EXIT		111430		True				
ANR	111729	Symbol	server -> recv_ctx -> io		111430						
ANR	111730	Symbol	server		111430						
ANR	111731	Symbol	* server		111430						
ANR	111732	Symbol	revents		111430						
ANR	111733	Symbol	WHITE_LIST		111430						
ANR	111734	Symbol	listener		111430						
ANR	111735	Symbol	acl		111430						
ANR	111736	Symbol	listener -> fd		111430						
ANR	111737	Symbol	server -> recv_ctx -> watcher		111430						
ANR	111738	Symbol	TCP_NODELAY		111430						
ANR	111739	Symbol	SO_NOSIGPIPE		111430						
ANR	111740	Symbol	in_white_list		111430						
ANR	111741	Symbol	acl_match_host		111430						
ANR	111742	Symbol	peer_name		111430						
ANR	111743	Symbol	get_peer_name		111430						
ANR	111744	Symbol	& opt		111430						
ANR	111745	Symbol	NULL		111430						
ANR	111746	Symbol	check_block_list		111430						
ANR	111747	Symbol	new_server		111430						
ANR	111748	Symbol	accept		111430						
ANR	111749	Symbol	verbose		111430						
ANR	111750	Symbol	SOL_SOCKET		111430						
ANR	111751	Symbol	serverfd		111430						
ANR	111752	Symbol	opt		111430						
ANR	111753	Symbol	plugin		111430						
ANR	111754	Symbol	server -> recv_ctx		111430						
ANR	111755	Symbol	get_acl_mode		111430						
ANR	111756	Symbol	w		111430						
ANR	111757	Symbol	EV_A_		111430						
ANR	111758	Symbol	BLACK_LIST		111430						
ANR	111759	Symbol	* * server		111430						
ANR	111760	Symbol	* server -> recv_ctx		111430						
ANR	111761	Symbol	* listener		111430						
ANR	111762	Symbol	SOL_TCP		111430						
ANR	111763	Function	main	1476:0:45667:58306							
ANR	111764	FunctionDef	"main (int argc , char * * argv)"		111763	0					
ANR	111765	CompoundStatement		1478:0:45699:58306	111763	0					
ANR	111766	IdentifierDeclStatement	"int i , c ;"	1479:4:45705:45713	111763	0	True				
ANR	111767	IdentifierDecl	i		111763	0					
ANR	111768	IdentifierDeclType	int		111763	0					
ANR	111769	Identifier	i		111763	1					
ANR	111770	IdentifierDecl	c		111763	1					
ANR	111771	IdentifierDeclType	int		111763	0					
ANR	111772	Identifier	c		111763	1					
ANR	111773	IdentifierDeclStatement	int pid_flags = 0 ;	1480:4:45719:45738	111763	1	True				
ANR	111774	IdentifierDecl	pid_flags = 0		111763	0					
ANR	111775	IdentifierDeclType	int		111763	0					
ANR	111776	Identifier	pid_flags		111763	1					
ANR	111777	AssignmentExpression	pid_flags = 0		111763	2		=			
ANR	111778	Identifier	pid_flags		111763	0					
ANR	111779	PrimaryExpression	0		111763	1					
ANR	111780	IdentifierDeclStatement	int mptcp = 0 ;	1481:4:45744:45763	111763	2	True				
ANR	111781	IdentifierDecl	mptcp = 0		111763	0					
ANR	111782	IdentifierDeclType	int		111763	0					
ANR	111783	Identifier	mptcp		111763	1					
ANR	111784	AssignmentExpression	mptcp = 0		111763	2		=			
ANR	111785	Identifier	mptcp		111763	0					
ANR	111786	PrimaryExpression	0		111763	1					
ANR	111787	IdentifierDeclStatement	int mtu = 0 ;	1482:4:45769:45788	111763	3	True				
ANR	111788	IdentifierDecl	mtu = 0		111763	0					
ANR	111789	IdentifierDeclType	int		111763	0					
ANR	111790	Identifier	mtu		111763	1					
ANR	111791	AssignmentExpression	mtu = 0		111763	2		=			
ANR	111792	Identifier	mtu		111763	0					
ANR	111793	PrimaryExpression	0		111763	1					
ANR	111794	IdentifierDeclStatement	char * user = NULL ;	1483:4:45794:45816	111763	4	True				
ANR	111795	IdentifierDecl	* user = NULL		111763	0					
ANR	111796	IdentifierDeclType	char *		111763	0					
ANR	111797	Identifier	user		111763	1					
ANR	111798	AssignmentExpression	* user = NULL		111763	2		=			
ANR	111799	Identifier	NULL		111763	0					
ANR	111800	Identifier	NULL		111763	1					
ANR	111801	IdentifierDeclStatement	char * password = NULL ;	1484:4:45822:45844	111763	5	True				
ANR	111802	IdentifierDecl	* password = NULL		111763	0					
ANR	111803	IdentifierDeclType	char *		111763	0					
ANR	111804	Identifier	password		111763	1					
ANR	111805	AssignmentExpression	* password = NULL		111763	2		=			
ANR	111806	Identifier	NULL		111763	0					
ANR	111807	Identifier	NULL		111763	1					
ANR	111808	IdentifierDeclStatement	char * key = NULL ;	1485:4:45850:45872	111763	6	True				
ANR	111809	IdentifierDecl	* key = NULL		111763	0					
ANR	111810	IdentifierDeclType	char *		111763	0					
ANR	111811	Identifier	key		111763	1					
ANR	111812	AssignmentExpression	* key = NULL		111763	2		=			
ANR	111813	Identifier	NULL		111763	0					
ANR	111814	Identifier	NULL		111763	1					
ANR	111815	IdentifierDeclStatement	char * timeout = NULL ;	1486:4:45878:45900	111763	7	True				
ANR	111816	IdentifierDecl	* timeout = NULL		111763	0					
ANR	111817	IdentifierDeclType	char *		111763	0					
ANR	111818	Identifier	timeout		111763	1					
ANR	111819	AssignmentExpression	* timeout = NULL		111763	2		=			
ANR	111820	Identifier	NULL		111763	0					
ANR	111821	Identifier	NULL		111763	1					
ANR	111822	IdentifierDeclStatement	char * method = NULL ;	1487:4:45906:45928	111763	8	True				
ANR	111823	IdentifierDecl	* method = NULL		111763	0					
ANR	111824	IdentifierDeclType	char *		111763	0					
ANR	111825	Identifier	method		111763	1					
ANR	111826	AssignmentExpression	* method = NULL		111763	2		=			
ANR	111827	Identifier	NULL		111763	0					
ANR	111828	Identifier	NULL		111763	1					
ANR	111829	IdentifierDeclStatement	char * pid_path = NULL ;	1488:4:45934:45956	111763	9	True				
ANR	111830	IdentifierDecl	* pid_path = NULL		111763	0					
ANR	111831	IdentifierDeclType	char *		111763	0					
ANR	111832	Identifier	pid_path		111763	1					
ANR	111833	AssignmentExpression	* pid_path = NULL		111763	2		=			
ANR	111834	Identifier	NULL		111763	0					
ANR	111835	Identifier	NULL		111763	1					
ANR	111836	IdentifierDeclStatement	char * conf_path = NULL ;	1489:4:45962:45984	111763	10	True				
ANR	111837	IdentifierDecl	* conf_path = NULL		111763	0					
ANR	111838	IdentifierDeclType	char *		111763	0					
ANR	111839	Identifier	conf_path		111763	1					
ANR	111840	AssignmentExpression	* conf_path = NULL		111763	2		=			
ANR	111841	Identifier	NULL		111763	0					
ANR	111842	Identifier	NULL		111763	1					
ANR	111843	IdentifierDeclStatement	char * iface = NULL ;	1490:4:45990:46012	111763	11	True				
ANR	111844	IdentifierDecl	* iface = NULL		111763	0					
ANR	111845	IdentifierDeclType	char *		111763	0					
ANR	111846	Identifier	iface		111763	1					
ANR	111847	AssignmentExpression	* iface = NULL		111763	2		=			
ANR	111848	Identifier	NULL		111763	0					
ANR	111849	Identifier	NULL		111763	1					
ANR	111850	IdentifierDeclStatement	char * server_port = NULL ;	1492:4:46019:46043	111763	12	True				
ANR	111851	IdentifierDecl	* server_port = NULL		111763	0					
ANR	111852	IdentifierDeclType	char *		111763	0					
ANR	111853	Identifier	server_port		111763	1					
ANR	111854	AssignmentExpression	* server_port = NULL		111763	2		=			
ANR	111855	Identifier	NULL		111763	0					
ANR	111856	Identifier	NULL		111763	1					
ANR	111857	IdentifierDeclStatement	char * plugin_opts = NULL ;	1493:4:46049:46073	111763	13	True				
ANR	111858	IdentifierDecl	* plugin_opts = NULL		111763	0					
ANR	111859	IdentifierDeclType	char *		111763	0					
ANR	111860	Identifier	plugin_opts		111763	1					
ANR	111861	AssignmentExpression	* plugin_opts = NULL		111763	2		=			
ANR	111862	Identifier	NULL		111763	0					
ANR	111863	Identifier	NULL		111763	1					
ANR	111864	IdentifierDeclStatement	char * plugin_port = NULL ;	1494:4:46079:46103	111763	14	True				
ANR	111865	IdentifierDecl	* plugin_port = NULL		111763	0					
ANR	111866	IdentifierDeclType	char *		111763	0					
ANR	111867	Identifier	plugin_port		111763	1					
ANR	111868	AssignmentExpression	* plugin_port = NULL		111763	2		=			
ANR	111869	Identifier	NULL		111763	0					
ANR	111870	Identifier	NULL		111763	1					
ANR	111871	IdentifierDeclStatement	char tmp_port [ 8 ] ;	1495:4:46109:46125	111763	15	True				
ANR	111872	IdentifierDecl	tmp_port [ 8 ]		111763	0					
ANR	111873	IdentifierDeclType	char [ 8 ]		111763	0					
ANR	111874	Identifier	tmp_port		111763	1					
ANR	111875	PrimaryExpression	8		111763	2					
ANR	111876	IdentifierDeclStatement	int server_num = 0 ;	1497:4:46132:46150	111763	16	True				
ANR	111877	IdentifierDecl	server_num = 0		111763	0					
ANR	111878	IdentifierDeclType	int		111763	0					
ANR	111879	Identifier	server_num		111763	1					
ANR	111880	AssignmentExpression	server_num = 0		111763	2		=			
ANR	111881	Identifier	server_num		111763	0					
ANR	111882	PrimaryExpression	0		111763	1					
ANR	111883	IdentifierDeclStatement	const char * server_host [ MAX_REMOTE_NUM ] ;	1498:4:46156:46195	111763	17	True				
ANR	111884	IdentifierDecl	* server_host [ MAX_REMOTE_NUM ]		111763	0					
ANR	111885	IdentifierDeclType	const char * [ MAX_REMOTE_NUM ]		111763	0					
ANR	111886	Identifier	server_host		111763	1					
ANR	111887	Identifier	MAX_REMOTE_NUM		111763	2					
ANR	111888	IdentifierDeclStatement	char * nameservers = NULL ;	1500:4:46202:46226	111763	18	True				
ANR	111889	IdentifierDecl	* nameservers = NULL		111763	0					
ANR	111890	IdentifierDeclType	char *		111763	0					
ANR	111891	Identifier	nameservers		111763	1					
ANR	111892	AssignmentExpression	* nameservers = NULL		111763	2		=			
ANR	111893	Identifier	NULL		111763	0					
ANR	111894	Identifier	NULL		111763	1					
ANR	111895	Statement	static	1502:4:46233:46238	111763	19	True				
ANR	111896	Statement	struct	1502:11:46240:46245	111763	20	True				
ANR	111897	Statement	option	1502:18:46247:46252	111763	21	True				
ANR	111898	Statement	long_options	1502:25:46254:46265	111763	22	True				
ANR	111899	Statement	[	1502:37:46266:46266	111763	23	True				
ANR	111900	Statement	]	1502:38:46267:46267	111763	24	True				
ANR	111901	Statement	=	1502:40:46269:46269	111763	25	True				
ANR	111902	CompoundStatement		25:42:571:571	111763	26					
ANR	111903	CompoundStatement		26:8:581:581	111763	0					
ANR	111904	Statement	"""fast-open"""	1503:10:46283:46293	111763	0	True				
ANR	111905	Statement	","	1503:21:46294:46294	111763	1	True				
ANR	111906	Statement	no_argument	1503:29:46302:46312	111763	2	True				
ANR	111907	Statement	","	1503:40:46313:46313	111763	3	True				
ANR	111908	Statement	NULL	1503:48:46321:46324	111763	4	True				
ANR	111909	Statement	","	1503:52:46325:46325	111763	5	True				
ANR	111910	Statement	GETOPT_VAL_FAST_OPEN	1503:54:46327:46346	111763	6	True				
ANR	111911	Statement	","	1503:76:46349:46349	111763	1	True				
ANR	111912	CompoundStatement		27:8:659:659	111763	2					
ANR	111913	Statement	"""reuse-port"""	1504:10:46361:46372	111763	0	True				
ANR	111914	Statement	","	1504:22:46373:46373	111763	1	True				
ANR	111915	Statement	no_argument	1504:29:46380:46390	111763	2	True				
ANR	111916	Statement	","	1504:40:46391:46391	111763	3	True				
ANR	111917	Statement	NULL	1504:48:46399:46402	111763	4	True				
ANR	111918	Statement	","	1504:52:46403:46403	111763	5	True				
ANR	111919	Statement	GETOPT_VAL_REUSE_PORT	1504:54:46405:46425	111763	6	True				
ANR	111920	Statement	","	1504:77:46428:46428	111763	3	True				
ANR	111921	CompoundStatement		28:8:738:738	111763	4					
ANR	111922	Statement	"""no-delay"""	1505:10:46440:46449	111763	0	True				
ANR	111923	Statement	","	1505:20:46450:46450	111763	1	True				
ANR	111924	Statement	no_argument	1505:29:46459:46469	111763	2	True				
ANR	111925	Statement	","	1505:40:46470:46470	111763	3	True				
ANR	111926	Statement	NULL	1505:48:46478:46481	111763	4	True				
ANR	111927	Statement	","	1505:52:46482:46482	111763	5	True				
ANR	111928	Statement	GETOPT_VAL_NODELAY	1505:54:46484:46501	111763	6	True				
ANR	111929	Statement	","	1505:74:46504:46504	111763	5	True				
ANR	111930	CompoundStatement		29:8:814:814	111763	6					
ANR	111931	Statement	"""acl"""	1506:10:46516:46520	111763	0	True				
ANR	111932	Statement	","	1506:15:46521:46521	111763	1	True				
ANR	111933	Statement	required_argument	1506:29:46535:46551	111763	2	True				
ANR	111934	Statement	","	1506:46:46552:46552	111763	3	True				
ANR	111935	Statement	NULL	1506:48:46554:46557	111763	4	True				
ANR	111936	Statement	","	1506:52:46558:46558	111763	5	True				
ANR	111937	Statement	GETOPT_VAL_ACL	1506:54:46560:46573	111763	6	True				
ANR	111938	Statement	","	1506:70:46576:46576	111763	7	True				
ANR	111939	CompoundStatement		30:8:886:886	111763	8					
ANR	111940	Statement	"""manager-address"""	1507:10:46588:46604	111763	0	True				
ANR	111941	Statement	","	1507:27:46605:46605	111763	1	True				
ANR	111942	Statement	required_argument	1507:29:46607:46623	111763	2	True				
ANR	111943	Statement	","	1507:46:46624:46624	111763	3	True				
ANR	111944	Statement	NULL	1507:48:46626:46629	111763	4	True				
ANR	111945	Statement	","	1507:52:46630:46630	111763	5	True				
ANR	111946	Statement	GETOPT_VAL_MANAGER_ADDRESS	1508:48:46680:46705	111763	6	True				
ANR	111947	Statement	","	1508:76:46708:46708	111763	9	True				
ANR	111948	CompoundStatement		32:8:1018:1018	111763	10					
ANR	111949	Statement	"""mtu"""	1509:10:46720:46724	111763	0	True				
ANR	111950	Statement	","	1509:15:46725:46725	111763	1	True				
ANR	111951	Statement	required_argument	1509:29:46739:46755	111763	2	True				
ANR	111952	Statement	","	1509:46:46756:46756	111763	3	True				
ANR	111953	Statement	NULL	1509:48:46758:46761	111763	4	True				
ANR	111954	Statement	","	1509:52:46762:46762	111763	5	True				
ANR	111955	Statement	GETOPT_VAL_MTU	1509:54:46764:46777	111763	6	True				
ANR	111956	Statement	","	1509:70:46780:46780	111763	11	True				
ANR	111957	CompoundStatement		33:8:1090:1090	111763	12					
ANR	111958	Statement	"""help"""	1510:10:46792:46797	111763	0	True				
ANR	111959	Statement	","	1510:16:46798:46798	111763	1	True				
ANR	111960	Statement	no_argument	1510:29:46811:46821	111763	2	True				
ANR	111961	Statement	","	1510:40:46822:46822	111763	3	True				
ANR	111962	Statement	NULL	1510:48:46830:46833	111763	4	True				
ANR	111963	Statement	","	1510:52:46834:46834	111763	5	True				
ANR	111964	Statement	GETOPT_VAL_HELP	1510:54:46836:46850	111763	6	True				
ANR	111965	Statement	","	1510:71:46853:46853	111763	13	True				
ANR	111966	CompoundStatement		34:8:1163:1163	111763	14					
ANR	111967	Statement	"""plugin"""	1511:10:46865:46872	111763	0	True				
ANR	111968	Statement	","	1511:18:46873:46873	111763	1	True				
ANR	111969	Statement	required_argument	1511:29:46884:46900	111763	2	True				
ANR	111970	Statement	","	1511:46:46901:46901	111763	3	True				
ANR	111971	Statement	NULL	1511:48:46903:46906	111763	4	True				
ANR	111972	Statement	","	1511:52:46907:46907	111763	5	True				
ANR	111973	Statement	GETOPT_VAL_PLUGIN	1511:54:46909:46925	111763	6	True				
ANR	111974	Statement	","	1511:73:46928:46928	111763	15	True				
ANR	111975	CompoundStatement		35:8:1238:1238	111763	16					
ANR	111976	Statement	"""plugin-opts"""	1512:10:46940:46952	111763	0	True				
ANR	111977	Statement	","	1512:23:46953:46953	111763	1	True				
ANR	111978	Statement	required_argument	1512:29:46959:46975	111763	2	True				
ANR	111979	Statement	","	1512:46:46976:46976	111763	3	True				
ANR	111980	Statement	NULL	1512:48:46978:46981	111763	4	True				
ANR	111981	Statement	","	1512:52:46982:46982	111763	5	True				
ANR	111982	Statement	GETOPT_VAL_PLUGIN_OPTS	1512:54:46984:47005	111763	6	True				
ANR	111983	Statement	","	1512:78:47008:47008	111763	17	True				
ANR	111984	CompoundStatement		36:8:1318:1318	111763	18					
ANR	111985	Statement	"""password"""	1513:10:47020:47029	111763	0	True				
ANR	111986	Statement	","	1513:20:47030:47030	111763	1	True				
ANR	111987	Statement	required_argument	1513:29:47039:47055	111763	2	True				
ANR	111988	Statement	","	1513:46:47056:47056	111763	3	True				
ANR	111989	Statement	NULL	1513:48:47058:47061	111763	4	True				
ANR	111990	Statement	","	1513:52:47062:47062	111763	5	True				
ANR	111991	Statement	GETOPT_VAL_PASSWORD	1513:54:47064:47082	111763	6	True				
ANR	111992	Statement	","	1513:75:47085:47085	111763	19	True				
ANR	111993	CompoundStatement		37:8:1395:1395	111763	20					
ANR	111994	Statement	"""key"""	1514:10:47097:47101	111763	0	True				
ANR	111995	Statement	","	1514:15:47102:47102	111763	1	True				
ANR	111996	Statement	required_argument	1514:29:47116:47132	111763	2	True				
ANR	111997	Statement	","	1514:46:47133:47133	111763	3	True				
ANR	111998	Statement	NULL	1514:48:47135:47138	111763	4	True				
ANR	111999	Statement	","	1514:52:47139:47139	111763	5	True				
ANR	112000	Statement	GETOPT_VAL_KEY	1514:54:47141:47154	111763	6	True				
ANR	112001	Statement	","	1514:70:47157:47157	111763	21	True				
ANR	112002	CompoundStatement		39:8:1484:1484	111763	22					
ANR	112003	Statement	"""mptcp"""	1516:10:47186:47192	111763	0	True				
ANR	112004	Statement	","	1516:17:47193:47193	111763	1	True				
ANR	112005	Statement	no_argument	1516:29:47205:47215	111763	2	True				
ANR	112006	Statement	","	1516:40:47216:47216	111763	3	True				
ANR	112007	Statement	NULL	1516:48:47224:47227	111763	4	True				
ANR	112008	Statement	","	1516:52:47228:47228	111763	5	True				
ANR	112009	Statement	GETOPT_VAL_MPTCP	1516:54:47230:47245	111763	6	True				
ANR	112010	Statement	","	1516:72:47248:47248	111763	23	True				
ANR	112011	CompoundStatement		41:8:1565:1565	111763	24					
ANR	112012	Statement	NULL	1518:10:47267:47270	111763	0	True				
ANR	112013	Statement	","	1518:14:47271:47271	111763	1	True				
ANR	112014	Statement	0	1518:29:47286:47286	111763	2	True				
ANR	112015	Statement	","	1518:30:47287:47287	111763	3	True				
ANR	112016	Statement	NULL	1518:48:47305:47308	111763	4	True				
ANR	112017	Statement	","	1518:52:47309:47309	111763	5	True				
ANR	112018	Statement	0	1518:54:47311:47311	111763	6	True				
ANR	112019	ExpressionStatement		1519:5:47320:47320	111763	27	True				
ANR	112020	ExpressionStatement	opterr = 0	1521:4:47327:47337	111763	28	True				
ANR	112021	AssignmentExpression	opterr = 0		111763	0		=			
ANR	112022	Identifier	opterr		111763	0					
ANR	112023	PrimaryExpression	0		111763	1					
ANR	112024	ExpressionStatement	USE_TTY ( )	1523:4:47344:47353	111763	29	True				
ANR	112025	CallExpression	USE_TTY ( )		111763	0					
ANR	112026	Callee	USE_TTY		111763	0					
ANR	112027	Identifier	USE_TTY		111763	0					
ANR	112028	ArgumentList			111763	1					
ANR	112029	WhileStatement	"while ( ( c = getopt_long ( argc , argv , ""f:s:p:l:k:t:m:b:c:i:d:a:n:huUv6A"" , long_options , NULL ) ) != - 1 )"		111763	30					
ANR	112030	Condition	"( c = getopt_long ( argc , argv , ""f:s:p:l:k:t:m:b:c:i:d:a:n:huUv6A"" , long_options , NULL ) ) != - 1"	1525:11:47367:47485	111763	0	True				
ANR	112031	EqualityExpression	"( c = getopt_long ( argc , argv , ""f:s:p:l:k:t:m:b:c:i:d:a:n:huUv6A"" , long_options , NULL ) ) != - 1"		111763	0		!=			
ANR	112032	AssignmentExpression	"c = getopt_long ( argc , argv , ""f:s:p:l:k:t:m:b:c:i:d:a:n:huUv6A"" , long_options , NULL )"		111763	0		=			
ANR	112033	Identifier	c		111763	0					
ANR	112034	CallExpression	"getopt_long ( argc , argv , ""f:s:p:l:k:t:m:b:c:i:d:a:n:huUv6A"" , long_options , NULL )"		111763	1					
ANR	112035	Callee	getopt_long		111763	0					
ANR	112036	Identifier	getopt_long		111763	0					
ANR	112037	ArgumentList	argc		111763	1					
ANR	112038	Argument	argc		111763	0					
ANR	112039	Identifier	argc		111763	0					
ANR	112040	Argument	argv		111763	1					
ANR	112041	Identifier	argv		111763	0					
ANR	112042	Argument	"""f:s:p:l:k:t:m:b:c:i:d:a:n:huUv6A"""		111763	2					
ANR	112043	PrimaryExpression	"""f:s:p:l:k:t:m:b:c:i:d:a:n:huUv6A"""		111763	0					
ANR	112044	Argument	long_options		111763	3					
ANR	112045	Identifier	long_options		111763	0					
ANR	112046	Argument	NULL		111763	4					
ANR	112047	Identifier	NULL		111763	0					
ANR	112048	UnaryOperationExpression	- 1		111763	1					
ANR	112049	UnaryOperator	-		111763	0					
ANR	112050	PrimaryExpression	1		111763	1					
ANR	112051	CompoundStatement		49:56:1788:1788	111763	1					
ANR	112052	SwitchStatement	switch ( c )		111763	0					
ANR	112053	Condition	c	1527:16:47506:47506	111763	0	True				
ANR	112054	Identifier	c		111763	0					
ANR	112055	CompoundStatement		50:19:1809:1809	111763	1					
ANR	112056	Label	case GETOPT_VAL_FAST_OPEN :	1528:8:47519:47544	111763	0	True				
ANR	112057	Identifier	GETOPT_VAL_FAST_OPEN		111763	0					
ANR	112058	ExpressionStatement	fast_open = 1	1529:12:47558:47571	111763	1	True				
ANR	112059	AssignmentExpression	fast_open = 1		111763	0		=			
ANR	112060	Identifier	fast_open		111763	0					
ANR	112061	PrimaryExpression	1		111763	1					
ANR	112062	BreakStatement	break ;	1530:12:47585:47590	111763	2	True				
ANR	112063	Label	case GETOPT_VAL_NODELAY :	1531:8:47600:47623	111763	3	True				
ANR	112064	Identifier	GETOPT_VAL_NODELAY		111763	0					
ANR	112065	ExpressionStatement	no_delay = 1	1532:12:47637:47649	111763	4	True				
ANR	112066	AssignmentExpression	no_delay = 1		111763	0		=			
ANR	112067	Identifier	no_delay		111763	0					
ANR	112068	PrimaryExpression	1		111763	1					
ANR	112069	ExpressionStatement	"LOGI ( ""enable TCP no-delay"" )"	1533:12:47663:47690	111763	5	True				
ANR	112070	CallExpression	"LOGI ( ""enable TCP no-delay"" )"		111763	0					
ANR	112071	Callee	LOGI		111763	0					
ANR	112072	Identifier	LOGI		111763	0					
ANR	112073	ArgumentList	"""enable TCP no-delay"""		111763	1					
ANR	112074	Argument	"""enable TCP no-delay"""		111763	0					
ANR	112075	PrimaryExpression	"""enable TCP no-delay"""		111763	0					
ANR	112076	BreakStatement	break ;	1534:12:47704:47709	111763	6	True				
ANR	112077	Label	case GETOPT_VAL_ACL :	1535:8:47719:47738	111763	7	True				
ANR	112078	Identifier	GETOPT_VAL_ACL		111763	0					
ANR	112079	ExpressionStatement	"LOGI ( ""initializing acl..."" )"	1536:12:47752:47779	111763	8	True				
ANR	112080	CallExpression	"LOGI ( ""initializing acl..."" )"		111763	0					
ANR	112081	Callee	LOGI		111763	0					
ANR	112082	Identifier	LOGI		111763	0					
ANR	112083	ArgumentList	"""initializing acl..."""		111763	1					
ANR	112084	Argument	"""initializing acl..."""		111763	0					
ANR	112085	PrimaryExpression	"""initializing acl..."""		111763	0					
ANR	112086	ExpressionStatement	acl = ! init_acl ( optarg )	1537:12:47793:47816	111763	9	True				
ANR	112087	AssignmentExpression	acl = ! init_acl ( optarg )		111763	0		=			
ANR	112088	Identifier	acl		111763	0					
ANR	112089	UnaryOperationExpression	! init_acl ( optarg )		111763	1					
ANR	112090	UnaryOperator	!		111763	0					
ANR	112091	CallExpression	init_acl ( optarg )		111763	1					
ANR	112092	Callee	init_acl		111763	0					
ANR	112093	Identifier	init_acl		111763	0					
ANR	112094	ArgumentList	optarg		111763	1					
ANR	112095	Argument	optarg		111763	0					
ANR	112096	Identifier	optarg		111763	0					
ANR	112097	BreakStatement	break ;	1538:12:47830:47835	111763	10	True				
ANR	112098	Label	case GETOPT_VAL_MANAGER_ADDRESS :	1539:8:47845:47876	111763	11	True				
ANR	112099	Identifier	GETOPT_VAL_MANAGER_ADDRESS		111763	0					
ANR	112100	ExpressionStatement	manager_address = optarg	1540:12:47890:47914	111763	12	True				
ANR	112101	AssignmentExpression	manager_address = optarg		111763	0		=			
ANR	112102	Identifier	manager_address		111763	0					
ANR	112103	Identifier	optarg		111763	1					
ANR	112104	BreakStatement	break ;	1541:12:47928:47933	111763	13	True				
ANR	112105	Label	case GETOPT_VAL_MTU :	1542:8:47943:47962	111763	14	True				
ANR	112106	Identifier	GETOPT_VAL_MTU		111763	0					
ANR	112107	ExpressionStatement	mtu = atoi ( optarg )	1543:12:47976:47994	111763	15	True				
ANR	112108	AssignmentExpression	mtu = atoi ( optarg )		111763	0		=			
ANR	112109	Identifier	mtu		111763	0					
ANR	112110	CallExpression	atoi ( optarg )		111763	1					
ANR	112111	Callee	atoi		111763	0					
ANR	112112	Identifier	atoi		111763	0					
ANR	112113	ArgumentList	optarg		111763	1					
ANR	112114	Argument	optarg		111763	0					
ANR	112115	Identifier	optarg		111763	0					
ANR	112116	ExpressionStatement	"LOGI ( ""set MTU to %d"" , mtu )"	1544:12:48008:48034	111763	16	True				
ANR	112117	CallExpression	"LOGI ( ""set MTU to %d"" , mtu )"		111763	0					
ANR	112118	Callee	LOGI		111763	0					
ANR	112119	Identifier	LOGI		111763	0					
ANR	112120	ArgumentList	"""set MTU to %d"""		111763	1					
ANR	112121	Argument	"""set MTU to %d"""		111763	0					
ANR	112122	PrimaryExpression	"""set MTU to %d"""		111763	0					
ANR	112123	Argument	mtu		111763	1					
ANR	112124	Identifier	mtu		111763	0					
ANR	112125	BreakStatement	break ;	1545:12:48048:48053	111763	17	True				
ANR	112126	Label	case GETOPT_VAL_PLUGIN :	1546:8:48063:48085	111763	18	True				
ANR	112127	Identifier	GETOPT_VAL_PLUGIN		111763	0					
ANR	112128	ExpressionStatement	plugin = optarg	1547:12:48099:48114	111763	19	True				
ANR	112129	AssignmentExpression	plugin = optarg		111763	0		=			
ANR	112130	Identifier	plugin		111763	0					
ANR	112131	Identifier	optarg		111763	1					
ANR	112132	BreakStatement	break ;	1548:12:48128:48133	111763	20	True				
ANR	112133	Label	case GETOPT_VAL_PLUGIN_OPTS :	1549:8:48143:48170	111763	21	True				
ANR	112134	Identifier	GETOPT_VAL_PLUGIN_OPTS		111763	0					
ANR	112135	ExpressionStatement	plugin_opts = optarg	1550:12:48184:48204	111763	22	True				
ANR	112136	AssignmentExpression	plugin_opts = optarg		111763	0		=			
ANR	112137	Identifier	plugin_opts		111763	0					
ANR	112138	Identifier	optarg		111763	1					
ANR	112139	BreakStatement	break ;	1551:12:48218:48223	111763	23	True				
ANR	112140	Label	case GETOPT_VAL_MPTCP :	1552:8:48233:48254	111763	24	True				
ANR	112141	Identifier	GETOPT_VAL_MPTCP		111763	0					
ANR	112142	ExpressionStatement	mptcp = 1	1553:12:48268:48277	111763	25	True				
ANR	112143	AssignmentExpression	mptcp = 1		111763	0		=			
ANR	112144	Identifier	mptcp		111763	0					
ANR	112145	PrimaryExpression	1		111763	1					
ANR	112146	ExpressionStatement	"LOGI ( ""enable multipath TCP"" )"	1554:12:48291:48319	111763	26	True				
ANR	112147	CallExpression	"LOGI ( ""enable multipath TCP"" )"		111763	0					
ANR	112148	Callee	LOGI		111763	0					
ANR	112149	Identifier	LOGI		111763	0					
ANR	112150	ArgumentList	"""enable multipath TCP"""		111763	1					
ANR	112151	Argument	"""enable multipath TCP"""		111763	0					
ANR	112152	PrimaryExpression	"""enable multipath TCP"""		111763	0					
ANR	112153	BreakStatement	break ;	1555:12:48333:48338	111763	27	True				
ANR	112154	Label	case GETOPT_VAL_KEY :	1556:8:48348:48367	111763	28	True				
ANR	112155	Identifier	GETOPT_VAL_KEY		111763	0					
ANR	112156	ExpressionStatement	key = optarg	1557:12:48381:48393	111763	29	True				
ANR	112157	AssignmentExpression	key = optarg		111763	0		=			
ANR	112158	Identifier	key		111763	0					
ANR	112159	Identifier	optarg		111763	1					
ANR	112160	BreakStatement	break ;	1558:12:48407:48412	111763	30	True				
ANR	112161	Label	case GETOPT_VAL_REUSE_PORT :	1559:8:48422:48448	111763	31	True				
ANR	112162	Identifier	GETOPT_VAL_REUSE_PORT		111763	0					
ANR	112163	ExpressionStatement	reuse_port = 1	1560:12:48462:48476	111763	32	True				
ANR	112164	AssignmentExpression	reuse_port = 1		111763	0		=			
ANR	112165	Identifier	reuse_port		111763	0					
ANR	112166	PrimaryExpression	1		111763	1					
ANR	112167	BreakStatement	break ;	1561:12:48490:48495	111763	33	True				
ANR	112168	Label	case 's' :	1562:8:48505:48513	111763	34	True				
ANR	112169	IfStatement	if ( server_num < MAX_REMOTE_NUM )		111763	35					
ANR	112170	Condition	server_num < MAX_REMOTE_NUM	1563:16:48531:48557	111763	0	True				
ANR	112171	RelationalExpression	server_num < MAX_REMOTE_NUM		111763	0		<			
ANR	112172	Identifier	server_num		111763	0					
ANR	112173	Identifier	MAX_REMOTE_NUM		111763	1					
ANR	112174	CompoundStatement		86:45:2860:2860	111763	1					
ANR	112175	ExpressionStatement	server_host [ server_num ++ ] = optarg	1564:16:48578:48612	111763	0	True				
ANR	112176	AssignmentExpression	server_host [ server_num ++ ] = optarg		111763	0		=			
ANR	112177	ArrayIndexing	server_host [ server_num ++ ]		111763	0					
ANR	112178	Identifier	server_host		111763	0					
ANR	112179	PostIncDecOperationExpression	server_num ++		111763	1					
ANR	112180	Identifier	server_num		111763	0					
ANR	112181	IncDec	++		111763	1					
ANR	112182	Identifier	optarg		111763	1					
ANR	112183	BreakStatement	break ;	1566:12:48640:48645	111763	36	True				
ANR	112184	Label	case 'b' :	1567:8:48655:48663	111763	37	True				
ANR	112185	ExpressionStatement	bind_address = optarg	1568:12:48677:48698	111763	38	True				
ANR	112186	AssignmentExpression	bind_address = optarg		111763	0		=			
ANR	112187	Identifier	bind_address		111763	0					
ANR	112188	Identifier	optarg		111763	1					
ANR	112189	BreakStatement	break ;	1569:12:48712:48717	111763	39	True				
ANR	112190	Label	case 'p' :	1570:8:48727:48735	111763	40	True				
ANR	112191	ExpressionStatement	server_port = optarg	1571:12:48749:48769	111763	41	True				
ANR	112192	AssignmentExpression	server_port = optarg		111763	0		=			
ANR	112193	Identifier	server_port		111763	0					
ANR	112194	Identifier	optarg		111763	1					
ANR	112195	BreakStatement	break ;	1572:12:48783:48788	111763	42	True				
ANR	112196	Label	case GETOPT_VAL_PASSWORD :	1573:8:48798:48822	111763	43	True				
ANR	112197	Identifier	GETOPT_VAL_PASSWORD		111763	0					
ANR	112198	Label	case 'k' :	1574:8:48832:48840	111763	44	True				
ANR	112199	ExpressionStatement	password = optarg	1575:12:48854:48871	111763	45	True				
ANR	112200	AssignmentExpression	password = optarg		111763	0		=			
ANR	112201	Identifier	password		111763	0					
ANR	112202	Identifier	optarg		111763	1					
ANR	112203	BreakStatement	break ;	1576:12:48885:48890	111763	46	True				
ANR	112204	Label	case 'f' :	1577:8:48900:48908	111763	47	True				
ANR	112205	ExpressionStatement	pid_flags = 1	1578:12:48922:48935	111763	48	True				
ANR	112206	AssignmentExpression	pid_flags = 1		111763	0		=			
ANR	112207	Identifier	pid_flags		111763	0					
ANR	112208	PrimaryExpression	1		111763	1					
ANR	112209	ExpressionStatement	pid_path = optarg	1579:12:48949:48967	111763	49	True				
ANR	112210	AssignmentExpression	pid_path = optarg		111763	0		=			
ANR	112211	Identifier	pid_path		111763	0					
ANR	112212	Identifier	optarg		111763	1					
ANR	112213	BreakStatement	break ;	1580:12:48981:48986	111763	50	True				
ANR	112214	Label	case 't' :	1581:8:48996:49004	111763	51	True				
ANR	112215	ExpressionStatement	timeout = optarg	1582:12:49018:49034	111763	52	True				
ANR	112216	AssignmentExpression	timeout = optarg		111763	0		=			
ANR	112217	Identifier	timeout		111763	0					
ANR	112218	Identifier	optarg		111763	1					
ANR	112219	BreakStatement	break ;	1583:12:49048:49053	111763	53	True				
ANR	112220	Label	case 'm' :	1584:8:49063:49071	111763	54	True				
ANR	112221	ExpressionStatement	method = optarg	1585:12:49085:49100	111763	55	True				
ANR	112222	AssignmentExpression	method = optarg		111763	0		=			
ANR	112223	Identifier	method		111763	0					
ANR	112224	Identifier	optarg		111763	1					
ANR	112225	BreakStatement	break ;	1586:12:49114:49119	111763	56	True				
ANR	112226	Label	case 'c' :	1587:8:49129:49137	111763	57	True				
ANR	112227	ExpressionStatement	conf_path = optarg	1588:12:49151:49169	111763	58	True				
ANR	112228	AssignmentExpression	conf_path = optarg		111763	0		=			
ANR	112229	Identifier	conf_path		111763	0					
ANR	112230	Identifier	optarg		111763	1					
ANR	112231	BreakStatement	break ;	1589:12:49183:49188	111763	59	True				
ANR	112232	Label	case 'i' :	1590:8:49198:49206	111763	60	True				
ANR	112233	ExpressionStatement	iface = optarg	1591:12:49220:49234	111763	61	True				
ANR	112234	AssignmentExpression	iface = optarg		111763	0		=			
ANR	112235	Identifier	iface		111763	0					
ANR	112236	Identifier	optarg		111763	1					
ANR	112237	BreakStatement	break ;	1592:12:49248:49253	111763	62	True				
ANR	112238	Label	case 'd' :	1593:8:49263:49271	111763	63	True				
ANR	112239	ExpressionStatement	nameservers = optarg	1594:12:49285:49305	111763	64	True				
ANR	112240	AssignmentExpression	nameservers = optarg		111763	0		=			
ANR	112241	Identifier	nameservers		111763	0					
ANR	112242	Identifier	optarg		111763	1					
ANR	112243	BreakStatement	break ;	1595:12:49319:49324	111763	65	True				
ANR	112244	Label	case 'a' :	1596:8:49334:49342	111763	66	True				
ANR	112245	ExpressionStatement	user = optarg	1597:12:49356:49369	111763	67	True				
ANR	112246	AssignmentExpression	user = optarg		111763	0		=			
ANR	112247	Identifier	user		111763	0					
ANR	112248	Identifier	optarg		111763	1					
ANR	112249	BreakStatement	break ;	1598:12:49383:49388	111763	68	True				
ANR	112250	Label	case 'n' :	1600:8:49420:49428	111763	69	True				
ANR	112251	ExpressionStatement	nofile = atoi ( optarg )	1601:12:49442:49463	111763	70	True				
ANR	112252	AssignmentExpression	nofile = atoi ( optarg )		111763	0		=			
ANR	112253	Identifier	nofile		111763	0					
ANR	112254	CallExpression	atoi ( optarg )		111763	1					
ANR	112255	Callee	atoi		111763	0					
ANR	112256	Identifier	atoi		111763	0					
ANR	112257	ArgumentList	optarg		111763	1					
ANR	112258	Argument	optarg		111763	0					
ANR	112259	Identifier	optarg		111763	0					
ANR	112260	BreakStatement	break ;	1602:12:49477:49482	111763	71	True				
ANR	112261	Label	case 'u' :	1604:8:49499:49507	111763	72	True				
ANR	112262	ExpressionStatement	mode = TCP_AND_UDP	1605:12:49521:49539	111763	73	True				
ANR	112263	AssignmentExpression	mode = TCP_AND_UDP		111763	0		=			
ANR	112264	Identifier	mode		111763	0					
ANR	112265	Identifier	TCP_AND_UDP		111763	1					
ANR	112266	BreakStatement	break ;	1606:12:49553:49558	111763	74	True				
ANR	112267	Label	case 'U' :	1607:8:49568:49576	111763	75	True				
ANR	112268	ExpressionStatement	mode = UDP_ONLY	1608:12:49590:49605	111763	76	True				
ANR	112269	AssignmentExpression	mode = UDP_ONLY		111763	0		=			
ANR	112270	Identifier	mode		111763	0					
ANR	112271	Identifier	UDP_ONLY		111763	1					
ANR	112272	BreakStatement	break ;	1609:12:49619:49624	111763	77	True				
ANR	112273	Label	case 'v' :	1610:8:49634:49642	111763	78	True				
ANR	112274	ExpressionStatement	verbose = 1	1611:12:49656:49667	111763	79	True				
ANR	112275	AssignmentExpression	verbose = 1		111763	0		=			
ANR	112276	Identifier	verbose		111763	0					
ANR	112277	PrimaryExpression	1		111763	1					
ANR	112278	BreakStatement	break ;	1612:12:49681:49686	111763	80	True				
ANR	112279	Label	case GETOPT_VAL_HELP :	1613:8:49696:49716	111763	81	True				
ANR	112280	Identifier	GETOPT_VAL_HELP		111763	0					
ANR	112281	Label	case 'h' :	1614:8:49726:49734	111763	82	True				
ANR	112282	ExpressionStatement	usage ( )	1615:12:49748:49755	111763	83	True				
ANR	112283	CallExpression	usage ( )		111763	0					
ANR	112284	Callee	usage		111763	0					
ANR	112285	Identifier	usage		111763	0					
ANR	112286	ArgumentList			111763	1					
ANR	112287	ExpressionStatement	exit ( EXIT_SUCCESS )	1616:12:49769:49787	111763	84	True				
ANR	112288	CallExpression	exit ( EXIT_SUCCESS )		111763	0					
ANR	112289	Callee	exit		111763	0					
ANR	112290	Identifier	exit		111763	0					
ANR	112291	ArgumentList	EXIT_SUCCESS		111763	1					
ANR	112292	Argument	EXIT_SUCCESS		111763	0					
ANR	112293	Identifier	EXIT_SUCCESS		111763	0					
ANR	112294	Label	case '6' :	1617:8:49797:49805	111763	85	True				
ANR	112295	ExpressionStatement	ipv6first = 1	1618:12:49819:49832	111763	86	True				
ANR	112296	AssignmentExpression	ipv6first = 1		111763	0		=			
ANR	112297	Identifier	ipv6first		111763	0					
ANR	112298	PrimaryExpression	1		111763	1					
ANR	112299	BreakStatement	break ;	1619:12:49846:49851	111763	87	True				
ANR	112300	Label	case 'A' :	1620:8:49861:49869	111763	88	True				
ANR	112301	ExpressionStatement	"FATAL ( ""One time auth has been deprecated. Try AEAD ciphers instead."" )"	1621:12:49883:49952	111763	89	True				
ANR	112302	CallExpression	"FATAL ( ""One time auth has been deprecated. Try AEAD ciphers instead."" )"		111763	0					
ANR	112303	Callee	FATAL		111763	0					
ANR	112304	Identifier	FATAL		111763	0					
ANR	112305	ArgumentList	"""One time auth has been deprecated. Try AEAD ciphers instead."""		111763	1					
ANR	112306	Argument	"""One time auth has been deprecated. Try AEAD ciphers instead."""		111763	0					
ANR	112307	PrimaryExpression	"""One time auth has been deprecated. Try AEAD ciphers instead."""		111763	0					
ANR	112308	BreakStatement	break ;	1622:12:49966:49971	111763	90	True				
ANR	112309	Label	case '?' :	1623:8:49981:49989	111763	91	True				
ANR	112310	ExpressionStatement	"LOGE ( ""Unrecognized option: %s"" , optarg )"	1625:12:50058:50097	111763	92	True				
ANR	112311	CallExpression	"LOGE ( ""Unrecognized option: %s"" , optarg )"		111763	0					
ANR	112312	Callee	LOGE		111763	0					
ANR	112313	Identifier	LOGE		111763	0					
ANR	112314	ArgumentList	"""Unrecognized option: %s"""		111763	1					
ANR	112315	Argument	"""Unrecognized option: %s"""		111763	0					
ANR	112316	PrimaryExpression	"""Unrecognized option: %s"""		111763	0					
ANR	112317	Argument	optarg		111763	1					
ANR	112318	Identifier	optarg		111763	0					
ANR	112319	ExpressionStatement	opterr = 1	1626:12:50111:50121	111763	93	True				
ANR	112320	AssignmentExpression	opterr = 1		111763	0		=			
ANR	112321	Identifier	opterr		111763	0					
ANR	112322	PrimaryExpression	1		111763	1					
ANR	112323	BreakStatement	break ;	1627:12:50135:50140	111763	94	True				
ANR	112324	IfStatement	if ( opterr )		111763	31					
ANR	112325	Condition	opterr	1631:8:50167:50172	111763	0	True				
ANR	112326	Identifier	opterr		111763	0					
ANR	112327	CompoundStatement		154:16:4475:4475	111763	1					
ANR	112328	ExpressionStatement	usage ( )	1632:8:50185:50192	111763	0	True				
ANR	112329	CallExpression	usage ( )		111763	0					
ANR	112330	Callee	usage		111763	0					
ANR	112331	Identifier	usage		111763	0					
ANR	112332	ArgumentList			111763	1					
ANR	112333	ExpressionStatement	exit ( EXIT_FAILURE )	1633:8:50202:50220	111763	1	True				
ANR	112334	CallExpression	exit ( EXIT_FAILURE )		111763	0					
ANR	112335	Callee	exit		111763	0					
ANR	112336	Identifier	exit		111763	0					
ANR	112337	ArgumentList	EXIT_FAILURE		111763	1					
ANR	112338	Argument	EXIT_FAILURE		111763	0					
ANR	112339	Identifier	EXIT_FAILURE		111763	0					
ANR	112340	IfStatement	if ( argc == 1 )		111763	32					
ANR	112341	Condition	argc == 1	1636:8:50237:50245	111763	0	True				
ANR	112342	EqualityExpression	argc == 1		111763	0		==			
ANR	112343	Identifier	argc		111763	0					
ANR	112344	PrimaryExpression	1		111763	1					
ANR	112345	CompoundStatement		159:19:4548:4548	111763	1					
ANR	112346	IfStatement	if ( conf_path == NULL )		111763	0					
ANR	112347	Condition	conf_path == NULL	1637:12:50262:50278	111763	0	True				
ANR	112348	EqualityExpression	conf_path == NULL		111763	0		==			
ANR	112349	Identifier	conf_path		111763	0					
ANR	112350	Identifier	NULL		111763	1					
ANR	112351	CompoundStatement		160:31:4581:4581	111763	1					
ANR	112352	ExpressionStatement	conf_path = DEFAULT_CONF_PATH	1638:12:50295:50324	111763	0	True				
ANR	112353	AssignmentExpression	conf_path = DEFAULT_CONF_PATH		111763	0		=			
ANR	112354	Identifier	conf_path		111763	0					
ANR	112355	Identifier	DEFAULT_CONF_PATH		111763	1					
ANR	112356	IfStatement	if ( conf_path != NULL )		111763	33					
ANR	112357	Condition	conf_path != NULL	1642:8:50351:50367	111763	0	True				
ANR	112358	EqualityExpression	conf_path != NULL		111763	0		!=			
ANR	112359	Identifier	conf_path		111763	0					
ANR	112360	Identifier	NULL		111763	1					
ANR	112361	CompoundStatement		166:8:4680:4717	111763	1					
ANR	112362	IdentifierDeclStatement	jconf_t * conf = read_jconf ( conf_path ) ;	1643:8:50380:50417	111763	0	True				
ANR	112363	IdentifierDecl	* conf = read_jconf ( conf_path )		111763	0					
ANR	112364	IdentifierDeclType	jconf_t *		111763	0					
ANR	112365	Identifier	conf		111763	1					
ANR	112366	AssignmentExpression	* conf = read_jconf ( conf_path )		111763	2		=			
ANR	112367	Identifier	conf		111763	0					
ANR	112368	CallExpression	read_jconf ( conf_path )		111763	1					
ANR	112369	Callee	read_jconf		111763	0					
ANR	112370	Identifier	read_jconf		111763	0					
ANR	112371	ArgumentList	conf_path		111763	1					
ANR	112372	Argument	conf_path		111763	0					
ANR	112373	Identifier	conf_path		111763	0					
ANR	112374	IfStatement	if ( server_num == 0 )		111763	1					
ANR	112375	Condition	server_num == 0	1644:12:50431:50445	111763	0	True				
ANR	112376	EqualityExpression	server_num == 0		111763	0		==			
ANR	112377	Identifier	server_num		111763	0					
ANR	112378	PrimaryExpression	0		111763	1					
ANR	112379	CompoundStatement		167:29:4748:4748	111763	1					
ANR	112380	ExpressionStatement	server_num = conf -> remote_num	1645:12:50462:50491	111763	0	True				
ANR	112381	AssignmentExpression	server_num = conf -> remote_num		111763	0		=			
ANR	112382	Identifier	server_num		111763	0					
ANR	112383	PtrMemberAccess	conf -> remote_num		111763	1					
ANR	112384	Identifier	conf		111763	0					
ANR	112385	Identifier	remote_num		111763	1					
ANR	112386	ForStatement	for ( i = 0 ; i < server_num ; i ++ )		111763	1					
ANR	112387	ForInit	i = 0 ;	1646:17:50510:50515	111763	0	True				
ANR	112388	AssignmentExpression	i = 0		111763	0		=			
ANR	112389	Identifier	i		111763	0					
ANR	112390	PrimaryExpression	0		111763	1					
ANR	112391	Condition	i < server_num	1646:24:50517:50530	111763	1	True				
ANR	112392	RelationalExpression	i < server_num		111763	0		<			
ANR	112393	Identifier	i		111763	0					
ANR	112394	Identifier	server_num		111763	1					
ANR	112395	PostIncDecOperationExpression	i ++	1646:40:50533:50535	111763	2	True				
ANR	112396	Identifier	i		111763	0					
ANR	112397	IncDec	++		111763	1					
ANR	112398	ExpressionStatement	server_host [ i ] = conf -> remote_addr [ i ] . host	1647:16:50554:50596	111763	3	True				
ANR	112399	AssignmentExpression	server_host [ i ] = conf -> remote_addr [ i ] . host		111763	0		=			
ANR	112400	ArrayIndexing	server_host [ i ]		111763	0					
ANR	112401	Identifier	server_host		111763	0					
ANR	112402	Identifier	i		111763	1					
ANR	112403	MemberAccess	conf -> remote_addr [ i ] . host		111763	1					
ANR	112404	ArrayIndexing	conf -> remote_addr [ i ]		111763	0					
ANR	112405	PtrMemberAccess	conf -> remote_addr		111763	0					
ANR	112406	Identifier	conf		111763	0					
ANR	112407	Identifier	remote_addr		111763	1					
ANR	112408	Identifier	i		111763	1					
ANR	112409	Identifier	host		111763	1					
ANR	112410	IfStatement	if ( server_port == NULL )		111763	2					
ANR	112411	Condition	server_port == NULL	1649:12:50620:50638	111763	0	True				
ANR	112412	EqualityExpression	server_port == NULL		111763	0		==			
ANR	112413	Identifier	server_port		111763	0					
ANR	112414	Identifier	NULL		111763	1					
ANR	112415	CompoundStatement		172:33:4941:4941	111763	1					
ANR	112416	ExpressionStatement	server_port = conf -> remote_port	1650:12:50655:50686	111763	0	True				
ANR	112417	AssignmentExpression	server_port = conf -> remote_port		111763	0		=			
ANR	112418	Identifier	server_port		111763	0					
ANR	112419	PtrMemberAccess	conf -> remote_port		111763	1					
ANR	112420	Identifier	conf		111763	0					
ANR	112421	Identifier	remote_port		111763	1					
ANR	112422	IfStatement	if ( password == NULL )		111763	3					
ANR	112423	Condition	password == NULL	1652:12:50710:50725	111763	0	True				
ANR	112424	EqualityExpression	password == NULL		111763	0		==			
ANR	112425	Identifier	password		111763	0					
ANR	112426	Identifier	NULL		111763	1					
ANR	112427	CompoundStatement		175:30:5028:5028	111763	1					
ANR	112428	ExpressionStatement	password = conf -> password	1653:12:50742:50767	111763	0	True				
ANR	112429	AssignmentExpression	password = conf -> password		111763	0		=			
ANR	112430	Identifier	password		111763	0					
ANR	112431	PtrMemberAccess	conf -> password		111763	1					
ANR	112432	Identifier	conf		111763	0					
ANR	112433	Identifier	password		111763	1					
ANR	112434	IfStatement	if ( key == NULL )		111763	4					
ANR	112435	Condition	key == NULL	1655:12:50791:50801	111763	0	True				
ANR	112436	EqualityExpression	key == NULL		111763	0		==			
ANR	112437	Identifier	key		111763	0					
ANR	112438	Identifier	NULL		111763	1					
ANR	112439	CompoundStatement		178:25:5104:5104	111763	1					
ANR	112440	ExpressionStatement	key = conf -> key	1656:12:50818:50833	111763	0	True				
ANR	112441	AssignmentExpression	key = conf -> key		111763	0		=			
ANR	112442	Identifier	key		111763	0					
ANR	112443	PtrMemberAccess	conf -> key		111763	1					
ANR	112444	Identifier	conf		111763	0					
ANR	112445	Identifier	key		111763	1					
ANR	112446	IfStatement	if ( method == NULL )		111763	5					
ANR	112447	Condition	method == NULL	1658:12:50857:50870	111763	0	True				
ANR	112448	EqualityExpression	method == NULL		111763	0		==			
ANR	112449	Identifier	method		111763	0					
ANR	112450	Identifier	NULL		111763	1					
ANR	112451	CompoundStatement		181:28:5173:5173	111763	1					
ANR	112452	ExpressionStatement	method = conf -> method	1659:12:50887:50908	111763	0	True				
ANR	112453	AssignmentExpression	method = conf -> method		111763	0		=			
ANR	112454	Identifier	method		111763	0					
ANR	112455	PtrMemberAccess	conf -> method		111763	1					
ANR	112456	Identifier	conf		111763	0					
ANR	112457	Identifier	method		111763	1					
ANR	112458	IfStatement	if ( timeout == NULL )		111763	6					
ANR	112459	Condition	timeout == NULL	1661:12:50932:50946	111763	0	True				
ANR	112460	EqualityExpression	timeout == NULL		111763	0		==			
ANR	112461	Identifier	timeout		111763	0					
ANR	112462	Identifier	NULL		111763	1					
ANR	112463	CompoundStatement		184:29:5249:5249	111763	1					
ANR	112464	ExpressionStatement	timeout = conf -> timeout	1662:12:50963:50986	111763	0	True				
ANR	112465	AssignmentExpression	timeout = conf -> timeout		111763	0		=			
ANR	112466	Identifier	timeout		111763	0					
ANR	112467	PtrMemberAccess	conf -> timeout		111763	1					
ANR	112468	Identifier	conf		111763	0					
ANR	112469	Identifier	timeout		111763	1					
ANR	112470	IfStatement	if ( user == NULL )		111763	7					
ANR	112471	Condition	user == NULL	1664:12:51010:51021	111763	0	True				
ANR	112472	EqualityExpression	user == NULL		111763	0		==			
ANR	112473	Identifier	user		111763	0					
ANR	112474	Identifier	NULL		111763	1					
ANR	112475	CompoundStatement		187:26:5324:5324	111763	1					
ANR	112476	ExpressionStatement	user = conf -> user	1665:12:51038:51055	111763	0	True				
ANR	112477	AssignmentExpression	user = conf -> user		111763	0		=			
ANR	112478	Identifier	user		111763	0					
ANR	112479	PtrMemberAccess	conf -> user		111763	1					
ANR	112480	Identifier	conf		111763	0					
ANR	112481	Identifier	user		111763	1					
ANR	112482	IfStatement	if ( plugin == NULL )		111763	8					
ANR	112483	Condition	plugin == NULL	1667:12:51079:51092	111763	0	True				
ANR	112484	EqualityExpression	plugin == NULL		111763	0		==			
ANR	112485	Identifier	plugin		111763	0					
ANR	112486	Identifier	NULL		111763	1					
ANR	112487	CompoundStatement		190:28:5395:5395	111763	1					
ANR	112488	ExpressionStatement	plugin = conf -> plugin	1668:12:51109:51130	111763	0	True				
ANR	112489	AssignmentExpression	plugin = conf -> plugin		111763	0		=			
ANR	112490	Identifier	plugin		111763	0					
ANR	112491	PtrMemberAccess	conf -> plugin		111763	1					
ANR	112492	Identifier	conf		111763	0					
ANR	112493	Identifier	plugin		111763	1					
ANR	112494	IfStatement	if ( plugin_opts == NULL )		111763	9					
ANR	112495	Condition	plugin_opts == NULL	1670:12:51154:51172	111763	0	True				
ANR	112496	EqualityExpression	plugin_opts == NULL		111763	0		==			
ANR	112497	Identifier	plugin_opts		111763	0					
ANR	112498	Identifier	NULL		111763	1					
ANR	112499	CompoundStatement		193:33:5475:5475	111763	1					
ANR	112500	ExpressionStatement	plugin_opts = conf -> plugin_opts	1671:12:51189:51220	111763	0	True				
ANR	112501	AssignmentExpression	plugin_opts = conf -> plugin_opts		111763	0		=			
ANR	112502	Identifier	plugin_opts		111763	0					
ANR	112503	PtrMemberAccess	conf -> plugin_opts		111763	1					
ANR	112504	Identifier	conf		111763	0					
ANR	112505	Identifier	plugin_opts		111763	1					
ANR	112506	IfStatement	if ( mode == TCP_ONLY )		111763	10					
ANR	112507	Condition	mode == TCP_ONLY	1673:12:51244:51259	111763	0	True				
ANR	112508	EqualityExpression	mode == TCP_ONLY		111763	0		==			
ANR	112509	Identifier	mode		111763	0					
ANR	112510	Identifier	TCP_ONLY		111763	1					
ANR	112511	CompoundStatement		196:30:5562:5562	111763	1					
ANR	112512	ExpressionStatement	mode = conf -> mode	1674:12:51276:51293	111763	0	True				
ANR	112513	AssignmentExpression	mode = conf -> mode		111763	0		=			
ANR	112514	Identifier	mode		111763	0					
ANR	112515	PtrMemberAccess	conf -> mode		111763	1					
ANR	112516	Identifier	conf		111763	0					
ANR	112517	Identifier	mode		111763	1					
ANR	112518	IfStatement	if ( mtu == 0 )		111763	11					
ANR	112519	Condition	mtu == 0	1676:12:51317:51324	111763	0	True				
ANR	112520	EqualityExpression	mtu == 0		111763	0		==			
ANR	112521	Identifier	mtu		111763	0					
ANR	112522	PrimaryExpression	0		111763	1					
ANR	112523	CompoundStatement		199:22:5627:5627	111763	1					
ANR	112524	ExpressionStatement	mtu = conf -> mtu	1677:12:51341:51356	111763	0	True				
ANR	112525	AssignmentExpression	mtu = conf -> mtu		111763	0		=			
ANR	112526	Identifier	mtu		111763	0					
ANR	112527	PtrMemberAccess	conf -> mtu		111763	1					
ANR	112528	Identifier	conf		111763	0					
ANR	112529	Identifier	mtu		111763	1					
ANR	112530	IfStatement	if ( mptcp == 0 )		111763	12					
ANR	112531	Condition	mptcp == 0	1679:12:51380:51389	111763	0	True				
ANR	112532	EqualityExpression	mptcp == 0		111763	0		==			
ANR	112533	Identifier	mptcp		111763	0					
ANR	112534	PrimaryExpression	0		111763	1					
ANR	112535	CompoundStatement		202:24:5692:5692	111763	1					
ANR	112536	ExpressionStatement	mptcp = conf -> mptcp	1680:12:51406:51425	111763	0	True				
ANR	112537	AssignmentExpression	mptcp = conf -> mptcp		111763	0		=			
ANR	112538	Identifier	mptcp		111763	0					
ANR	112539	PtrMemberAccess	conf -> mptcp		111763	1					
ANR	112540	Identifier	conf		111763	0					
ANR	112541	Identifier	mptcp		111763	1					
ANR	112542	IfStatement	if ( reuse_port == 0 )		111763	13					
ANR	112543	Condition	reuse_port == 0	1682:12:51449:51463	111763	0	True				
ANR	112544	EqualityExpression	reuse_port == 0		111763	0		==			
ANR	112545	Identifier	reuse_port		111763	0					
ANR	112546	PrimaryExpression	0		111763	1					
ANR	112547	CompoundStatement		205:29:5766:5766	111763	1					
ANR	112548	ExpressionStatement	reuse_port = conf -> reuse_port	1683:12:51480:51509	111763	0	True				
ANR	112549	AssignmentExpression	reuse_port = conf -> reuse_port		111763	0		=			
ANR	112550	Identifier	reuse_port		111763	0					
ANR	112551	PtrMemberAccess	conf -> reuse_port		111763	1					
ANR	112552	Identifier	conf		111763	0					
ANR	112553	Identifier	reuse_port		111763	1					
ANR	112554	IfStatement	if ( fast_open == 0 )		111763	14					
ANR	112555	Condition	fast_open == 0	1685:12:51533:51546	111763	0	True				
ANR	112556	EqualityExpression	fast_open == 0		111763	0		==			
ANR	112557	Identifier	fast_open		111763	0					
ANR	112558	PrimaryExpression	0		111763	1					
ANR	112559	CompoundStatement		208:28:5849:5849	111763	1					
ANR	112560	ExpressionStatement	fast_open = conf -> fast_open	1686:12:51563:51590	111763	0	True				
ANR	112561	AssignmentExpression	fast_open = conf -> fast_open		111763	0		=			
ANR	112562	Identifier	fast_open		111763	0					
ANR	112563	PtrMemberAccess	conf -> fast_open		111763	1					
ANR	112564	Identifier	conf		111763	0					
ANR	112565	Identifier	fast_open		111763	1					
ANR	112566	IfStatement	if ( nofile == 0 )		111763	15					
ANR	112567	Condition	nofile == 0	1689:12:51636:51646	111763	0	True				
ANR	112568	EqualityExpression	nofile == 0		111763	0		==			
ANR	112569	Identifier	nofile		111763	0					
ANR	112570	PrimaryExpression	0		111763	1					
ANR	112571	CompoundStatement		212:25:5949:5949	111763	1					
ANR	112572	ExpressionStatement	nofile = conf -> nofile	1690:12:51663:51684	111763	0	True				
ANR	112573	AssignmentExpression	nofile = conf -> nofile		111763	0		=			
ANR	112574	Identifier	nofile		111763	0					
ANR	112575	PtrMemberAccess	conf -> nofile		111763	1					
ANR	112576	Identifier	conf		111763	0					
ANR	112577	Identifier	nofile		111763	1					
ANR	112578	IfStatement	if ( nameservers == NULL )		111763	16					
ANR	112579	Condition	nameservers == NULL	1693:12:51715:51733	111763	0	True				
ANR	112580	EqualityExpression	nameservers == NULL		111763	0		==			
ANR	112581	Identifier	nameservers		111763	0					
ANR	112582	Identifier	NULL		111763	1					
ANR	112583	CompoundStatement		216:33:6036:6036	111763	1					
ANR	112584	ExpressionStatement	nameservers = conf -> nameserver	1694:12:51750:51780	111763	0	True				
ANR	112585	AssignmentExpression	nameservers = conf -> nameserver		111763	0		=			
ANR	112586	Identifier	nameservers		111763	0					
ANR	112587	PtrMemberAccess	conf -> nameserver		111763	1					
ANR	112588	Identifier	conf		111763	0					
ANR	112589	Identifier	nameserver		111763	1					
ANR	112590	IfStatement	if ( ipv6first == 0 )		111763	17					
ANR	112591	Condition	ipv6first == 0	1696:12:51804:51817	111763	0	True				
ANR	112592	EqualityExpression	ipv6first == 0		111763	0		==			
ANR	112593	Identifier	ipv6first		111763	0					
ANR	112594	PrimaryExpression	0		111763	1					
ANR	112595	CompoundStatement		219:28:6120:6120	111763	1					
ANR	112596	ExpressionStatement	ipv6first = conf -> ipv6_first	1697:12:51834:51862	111763	0	True				
ANR	112597	AssignmentExpression	ipv6first = conf -> ipv6_first		111763	0		=			
ANR	112598	Identifier	ipv6first		111763	0					
ANR	112599	PtrMemberAccess	conf -> ipv6_first		111763	1					
ANR	112600	Identifier	conf		111763	0					
ANR	112601	Identifier	ipv6_first		111763	1					
ANR	112602	IfStatement	if ( server_num == 0 )		111763	34					
ANR	112603	Condition	server_num == 0	1701:8:51889:51903	111763	0	True				
ANR	112604	EqualityExpression	server_num == 0		111763	0		==			
ANR	112605	Identifier	server_num		111763	0					
ANR	112606	PrimaryExpression	0		111763	1					
ANR	112607	CompoundStatement		224:25:6206:6206	111763	1					
ANR	112608	ExpressionStatement	"server_host [ server_num ++ ] = ""0.0.0.0"""	1702:8:51916:51953	111763	0	True				
ANR	112609	AssignmentExpression	"server_host [ server_num ++ ] = ""0.0.0.0"""		111763	0		=			
ANR	112610	ArrayIndexing	server_host [ server_num ++ ]		111763	0					
ANR	112611	Identifier	server_host		111763	0					
ANR	112612	PostIncDecOperationExpression	server_num ++		111763	1					
ANR	112613	Identifier	server_num		111763	0					
ANR	112614	IncDec	++		111763	1					
ANR	112615	PrimaryExpression	"""0.0.0.0"""		111763	1					
ANR	112616	IfStatement	if ( server_num == 0 || server_port == NULL || ( password == NULL && key == NULL ) )		111763	35					
ANR	112617	Condition	server_num == 0 || server_port == NULL || ( password == NULL && key == NULL )	1705:8:51970:52056	111763	0	True				
ANR	112618	OrExpression	server_num == 0 || server_port == NULL || ( password == NULL && key == NULL )		111763	0		||			
ANR	112619	EqualityExpression	server_num == 0		111763	0		==			
ANR	112620	Identifier	server_num		111763	0					
ANR	112621	PrimaryExpression	0		111763	1					
ANR	112622	OrExpression	server_port == NULL || ( password == NULL && key == NULL )		111763	1		||			
ANR	112623	EqualityExpression	server_port == NULL		111763	0		==			
ANR	112624	Identifier	server_port		111763	0					
ANR	112625	Identifier	NULL		111763	1					
ANR	112626	AndExpression	password == NULL && key == NULL		111763	1		&&			
ANR	112627	EqualityExpression	password == NULL		111763	0		==			
ANR	112628	Identifier	password		111763	0					
ANR	112629	Identifier	NULL		111763	1					
ANR	112630	EqualityExpression	key == NULL		111763	1		==			
ANR	112631	Identifier	key		111763	0					
ANR	112632	Identifier	NULL		111763	1					
ANR	112633	CompoundStatement		229:50:6359:6359	111763	1					
ANR	112634	ExpressionStatement	usage ( )	1707:8:52069:52076	111763	0	True				
ANR	112635	CallExpression	usage ( )		111763	0					
ANR	112636	Callee	usage		111763	0					
ANR	112637	Identifier	usage		111763	0					
ANR	112638	ArgumentList			111763	1					
ANR	112639	ExpressionStatement	exit ( EXIT_FAILURE )	1708:8:52086:52104	111763	1	True				
ANR	112640	CallExpression	exit ( EXIT_FAILURE )		111763	0					
ANR	112641	Callee	exit		111763	0					
ANR	112642	Identifier	exit		111763	0					
ANR	112643	ArgumentList	EXIT_FAILURE		111763	1					
ANR	112644	Argument	EXIT_FAILURE		111763	0					
ANR	112645	Identifier	EXIT_FAILURE		111763	0					
ANR	112646	ExpressionStatement	remote_port = server_port	1711:4:52117:52142	111763	36	True				
ANR	112647	AssignmentExpression	remote_port = server_port		111763	0		=			
ANR	112648	Identifier	remote_port		111763	0					
ANR	112649	Identifier	server_port		111763	1					
ANR	112650	IfStatement	if ( plugin != NULL )		111763	37					
ANR	112651	Condition	plugin != NULL	1713:8:52153:52166	111763	0	True				
ANR	112652	EqualityExpression	plugin != NULL		111763	0		!=			
ANR	112653	Identifier	plugin		111763	0					
ANR	112654	Identifier	NULL		111763	1					
ANR	112655	CompoundStatement		237:8:6479:6511	111763	1					
ANR	112656	IdentifierDeclStatement	uint16_t port = get_local_port ( ) ;	1714:8:52179:52211	111763	0	True				
ANR	112657	IdentifierDecl	port = get_local_port ( )		111763	0					
ANR	112658	IdentifierDeclType	uint16_t		111763	0					
ANR	112659	Identifier	port		111763	1					
ANR	112660	AssignmentExpression	port = get_local_port ( )		111763	2		=			
ANR	112661	Identifier	port		111763	0					
ANR	112662	CallExpression	get_local_port ( )		111763	1					
ANR	112663	Callee	get_local_port		111763	0					
ANR	112664	Identifier	get_local_port		111763	0					
ANR	112665	ArgumentList			111763	1					
ANR	112666	IfStatement	if ( port == 0 )		111763	1					
ANR	112667	Condition	port == 0	1715:12:52225:52233	111763	0	True				
ANR	112668	EqualityExpression	port == 0		111763	0		==			
ANR	112669	Identifier	port		111763	0					
ANR	112670	PrimaryExpression	0		111763	1					
ANR	112671	CompoundStatement		238:23:6536:6536	111763	1					
ANR	112672	ExpressionStatement	"FATAL ( ""failed to find a free port"" )"	1716:12:52250:52285	111763	0	True				
ANR	112673	CallExpression	"FATAL ( ""failed to find a free port"" )"		111763	0					
ANR	112674	Callee	FATAL		111763	0					
ANR	112675	Identifier	FATAL		111763	0					
ANR	112676	ArgumentList	"""failed to find a free port"""		111763	1					
ANR	112677	Argument	"""failed to find a free port"""		111763	0					
ANR	112678	PrimaryExpression	"""failed to find a free port"""		111763	0					
ANR	112679	ExpressionStatement	"snprintf ( tmp_port , 8 , ""%d"" , port )"	1718:8:52305:52338	111763	2	True				
ANR	112680	CallExpression	"snprintf ( tmp_port , 8 , ""%d"" , port )"		111763	0					
ANR	112681	Callee	snprintf		111763	0					
ANR	112682	Identifier	snprintf		111763	0					
ANR	112683	ArgumentList	tmp_port		111763	1					
ANR	112684	Argument	tmp_port		111763	0					
ANR	112685	Identifier	tmp_port		111763	0					
ANR	112686	Argument	8		111763	1					
ANR	112687	PrimaryExpression	8		111763	0					
ANR	112688	Argument	"""%d"""		111763	2					
ANR	112689	PrimaryExpression	"""%d"""		111763	0					
ANR	112690	Argument	port		111763	3					
ANR	112691	Identifier	port		111763	0					
ANR	112692	ExpressionStatement	plugin_port = server_port	1719:8:52348:52373	111763	3	True				
ANR	112693	AssignmentExpression	plugin_port = server_port		111763	0		=			
ANR	112694	Identifier	plugin_port		111763	0					
ANR	112695	Identifier	server_port		111763	1					
ANR	112696	ExpressionStatement	server_port = tmp_port	1720:8:52383:52405	111763	4	True				
ANR	112697	AssignmentExpression	server_port = tmp_port		111763	0		=			
ANR	112698	Identifier	server_port		111763	0					
ANR	112699	Identifier	tmp_port		111763	1					
ANR	112700	IfStatement	if ( method == NULL )		111763	38					
ANR	112701	Condition	method == NULL	1723:8:52422:52435	111763	0	True				
ANR	112702	EqualityExpression	method == NULL		111763	0		==			
ANR	112703	Identifier	method		111763	0					
ANR	112704	Identifier	NULL		111763	1					
ANR	112705	CompoundStatement		246:24:6738:6738	111763	1					
ANR	112706	ExpressionStatement	"method = ""rc4-md5"""	1724:8:52448:52466	111763	0	True				
ANR	112707	AssignmentExpression	"method = ""rc4-md5"""		111763	0		=			
ANR	112708	Identifier	method		111763	0					
ANR	112709	PrimaryExpression	"""rc4-md5"""		111763	1					
ANR	112710	IfStatement	if ( timeout == NULL )		111763	39					
ANR	112711	Condition	timeout == NULL	1727:8:52483:52497	111763	0	True				
ANR	112712	EqualityExpression	timeout == NULL		111763	0		==			
ANR	112713	Identifier	timeout		111763	0					
ANR	112714	Identifier	NULL		111763	1					
ANR	112715	CompoundStatement		250:25:6800:6800	111763	1					
ANR	112716	ExpressionStatement	"timeout = ""60"""	1728:8:52510:52524	111763	0	True				
ANR	112717	AssignmentExpression	"timeout = ""60"""		111763	0		=			
ANR	112718	Identifier	timeout		111763	0					
ANR	112719	PrimaryExpression	"""60"""		111763	1					
ANR	112720	IfStatement	if ( nofile > 1024 )		111763	40					
ANR	112721	Condition	nofile > 1024	1736:8:52698:52710	111763	0	True				
ANR	112722	RelationalExpression	nofile > 1024		111763	0		>			
ANR	112723	Identifier	nofile		111763	0					
ANR	112724	PrimaryExpression	1024		111763	1					
ANR	112725	CompoundStatement		259:23:7013:7013	111763	1					
ANR	112726	IfStatement	if ( verbose )		111763	0					
ANR	112727	Condition	verbose	1737:12:52727:52733	111763	0	True				
ANR	112728	Identifier	verbose		111763	0					
ANR	112729	CompoundStatement		260:21:7036:7036	111763	1					
ANR	112730	ExpressionStatement	"LOGI ( ""setting NOFILE to %d"" , nofile )"	1738:12:52750:52786	111763	0	True				
ANR	112731	CallExpression	"LOGI ( ""setting NOFILE to %d"" , nofile )"		111763	0					
ANR	112732	Callee	LOGI		111763	0					
ANR	112733	Identifier	LOGI		111763	0					
ANR	112734	ArgumentList	"""setting NOFILE to %d"""		111763	1					
ANR	112735	Argument	"""setting NOFILE to %d"""		111763	0					
ANR	112736	PrimaryExpression	"""setting NOFILE to %d"""		111763	0					
ANR	112737	Argument	nofile		111763	1					
ANR	112738	Identifier	nofile		111763	0					
ANR	112739	ExpressionStatement	set_nofile ( nofile )	1740:8:52806:52824	111763	1	True				
ANR	112740	CallExpression	set_nofile ( nofile )		111763	0					
ANR	112741	Callee	set_nofile		111763	0					
ANR	112742	Identifier	set_nofile		111763	0					
ANR	112743	ArgumentList	nofile		111763	1					
ANR	112744	Argument	nofile		111763	0					
ANR	112745	Identifier	nofile		111763	0					
ANR	112746	ExpressionStatement	"USE_SYSLOG ( argv [ 0 ] , pid_flags )"	1744:4:52844:52874	111763	41	True				
ANR	112747	CallExpression	"USE_SYSLOG ( argv [ 0 ] , pid_flags )"		111763	0					
ANR	112748	Callee	USE_SYSLOG		111763	0					
ANR	112749	Identifier	USE_SYSLOG		111763	0					
ANR	112750	ArgumentList	argv [ 0 ]		111763	1					
ANR	112751	Argument	argv [ 0 ]		111763	0					
ANR	112752	ArrayIndexing	argv [ 0 ]		111763	0					
ANR	112753	Identifier	argv		111763	0					
ANR	112754	PrimaryExpression	0		111763	1					
ANR	112755	Argument	pid_flags		111763	1					
ANR	112756	Identifier	pid_flags		111763	0					
ANR	112757	IfStatement	if ( pid_flags )		111763	42					
ANR	112758	Condition	pid_flags	1745:8:52884:52892	111763	0	True				
ANR	112759	Identifier	pid_flags		111763	0					
ANR	112760	CompoundStatement		268:19:7195:7195	111763	1					
ANR	112761	ExpressionStatement	daemonize ( pid_path )	1746:8:52905:52924	111763	0	True				
ANR	112762	CallExpression	daemonize ( pid_path )		111763	0					
ANR	112763	Callee	daemonize		111763	0					
ANR	112764	Identifier	daemonize		111763	0					
ANR	112765	ArgumentList	pid_path		111763	1					
ANR	112766	Argument	pid_path		111763	0					
ANR	112767	Identifier	pid_path		111763	0					
ANR	112768	IfStatement	if ( ipv6first )		111763	43					
ANR	112769	Condition	ipv6first	1749:8:52941:52949	111763	0	True				
ANR	112770	Identifier	ipv6first		111763	0					
ANR	112771	CompoundStatement		272:19:7252:7252	111763	1					
ANR	112772	ExpressionStatement	"LOGI ( ""resolving hostname to IPv6 address first"" )"	1750:8:52962:53010	111763	0	True				
ANR	112773	CallExpression	"LOGI ( ""resolving hostname to IPv6 address first"" )"		111763	0					
ANR	112774	Callee	LOGI		111763	0					
ANR	112775	Identifier	LOGI		111763	0					
ANR	112776	ArgumentList	"""resolving hostname to IPv6 address first"""		111763	1					
ANR	112777	Argument	"""resolving hostname to IPv6 address first"""		111763	0					
ANR	112778	PrimaryExpression	"""resolving hostname to IPv6 address first"""		111763	0					
ANR	112779	IfStatement	if ( fast_open == 1 )		111763	44					
ANR	112780	Condition	fast_open == 1	1753:8:53027:53040	111763	0	True				
ANR	112781	EqualityExpression	fast_open == 1		111763	0		==			
ANR	112782	Identifier	fast_open		111763	0					
ANR	112783	PrimaryExpression	1		111763	1					
ANR	112784	CompoundStatement		276:24:7343:7343	111763	1					
ANR	112785	ExpressionStatement	"LOGI ( ""using tcp fast open"" )"	1755:8:53073:53100	111763	0	True				
ANR	112786	CallExpression	"LOGI ( ""using tcp fast open"" )"		111763	0					
ANR	112787	Callee	LOGI		111763	0					
ANR	112788	Identifier	LOGI		111763	0					
ANR	112789	ArgumentList	"""using tcp fast open"""		111763	1					
ANR	112790	Argument	"""using tcp fast open"""		111763	0					
ANR	112791	PrimaryExpression	"""using tcp fast open"""		111763	0					
ANR	112792	IfStatement	if ( plugin != NULL )		111763	45					
ANR	112793	Condition	plugin != NULL	1762:8:53221:53234	111763	0	True				
ANR	112794	EqualityExpression	plugin != NULL		111763	0		!=			
ANR	112795	Identifier	plugin		111763	0					
ANR	112796	Identifier	NULL		111763	1					
ANR	112797	CompoundStatement		285:24:7537:7537	111763	1					
ANR	112798	ExpressionStatement	"LOGI ( ""plugin \\""%s\\"" enabled"" , plugin )"	1763:8:53247:53284	111763	0	True				
ANR	112799	CallExpression	"LOGI ( ""plugin \\""%s\\"" enabled"" , plugin )"		111763	0					
ANR	112800	Callee	LOGI		111763	0					
ANR	112801	Identifier	LOGI		111763	0					
ANR	112802	ArgumentList	"""plugin \\""%s\\"" enabled"""		111763	1					
ANR	112803	Argument	"""plugin \\""%s\\"" enabled"""		111763	0					
ANR	112804	PrimaryExpression	"""plugin \\""%s\\"" enabled"""		111763	0					
ANR	112805	Argument	plugin		111763	1					
ANR	112806	Identifier	plugin		111763	0					
ANR	112807	IfStatement	if ( mode != TCP_ONLY )		111763	46					
ANR	112808	Condition	mode != TCP_ONLY	1766:8:53301:53316	111763	0	True				
ANR	112809	EqualityExpression	mode != TCP_ONLY		111763	0		!=			
ANR	112810	Identifier	mode		111763	0					
ANR	112811	Identifier	TCP_ONLY		111763	1					
ANR	112812	CompoundStatement		289:26:7619:7619	111763	1					
ANR	112813	ExpressionStatement	"LOGI ( ""UDP relay enabled"" )"	1767:8:53329:53354	111763	0	True				
ANR	112814	CallExpression	"LOGI ( ""UDP relay enabled"" )"		111763	0					
ANR	112815	Callee	LOGI		111763	0					
ANR	112816	Identifier	LOGI		111763	0					
ANR	112817	ArgumentList	"""UDP relay enabled"""		111763	1					
ANR	112818	Argument	"""UDP relay enabled"""		111763	0					
ANR	112819	PrimaryExpression	"""UDP relay enabled"""		111763	0					
ANR	112820	IfStatement	if ( mode == UDP_ONLY )		111763	47					
ANR	112821	Condition	mode == UDP_ONLY	1770:8:53371:53386	111763	0	True				
ANR	112822	EqualityExpression	mode == UDP_ONLY		111763	0		==			
ANR	112823	Identifier	mode		111763	0					
ANR	112824	Identifier	UDP_ONLY		111763	1					
ANR	112825	CompoundStatement		293:26:7689:7689	111763	1					
ANR	112826	ExpressionStatement	"LOGI ( ""TCP relay disabled"" )"	1771:8:53399:53425	111763	0	True				
ANR	112827	CallExpression	"LOGI ( ""TCP relay disabled"" )"		111763	0					
ANR	112828	Callee	LOGI		111763	0					
ANR	112829	Identifier	LOGI		111763	0					
ANR	112830	ArgumentList	"""TCP relay disabled"""		111763	1					
ANR	112831	Argument	"""TCP relay disabled"""		111763	0					
ANR	112832	PrimaryExpression	"""TCP relay disabled"""		111763	0					
ANR	112833	ExpressionStatement	"signal ( SIGPIPE , SIG_IGN )"	1775:4:53460:53484	111763	48	True				
ANR	112834	CallExpression	"signal ( SIGPIPE , SIG_IGN )"		111763	0					
ANR	112835	Callee	signal		111763	0					
ANR	112836	Identifier	signal		111763	0					
ANR	112837	ArgumentList	SIGPIPE		111763	1					
ANR	112838	Argument	SIGPIPE		111763	0					
ANR	112839	Identifier	SIGPIPE		111763	0					
ANR	112840	Argument	SIG_IGN		111763	1					
ANR	112841	Identifier	SIG_IGN		111763	0					
ANR	112842	ExpressionStatement	"signal ( SIGABRT , SIG_IGN )"	1776:4:53490:53514	111763	49	True				
ANR	112843	CallExpression	"signal ( SIGABRT , SIG_IGN )"		111763	0					
ANR	112844	Callee	signal		111763	0					
ANR	112845	Identifier	signal		111763	0					
ANR	112846	ArgumentList	SIGABRT		111763	1					
ANR	112847	Argument	SIGABRT		111763	0					
ANR	112848	Identifier	SIGABRT		111763	0					
ANR	112849	Argument	SIG_IGN		111763	1					
ANR	112850	Identifier	SIG_IGN		111763	0					
ANR	112851	ExpressionStatement	"ev_signal_init ( & sigint_watcher , signal_cb , SIGINT )"	1778:4:53521:53571	111763	50	True				
ANR	112852	CallExpression	"ev_signal_init ( & sigint_watcher , signal_cb , SIGINT )"		111763	0					
ANR	112853	Callee	ev_signal_init		111763	0					
ANR	112854	Identifier	ev_signal_init		111763	0					
ANR	112855	ArgumentList	& sigint_watcher		111763	1					
ANR	112856	Argument	& sigint_watcher		111763	0					
ANR	112857	UnaryOperationExpression	& sigint_watcher		111763	0					
ANR	112858	UnaryOperator	&		111763	0					
ANR	112859	Identifier	sigint_watcher		111763	1					
ANR	112860	Argument	signal_cb		111763	1					
ANR	112861	Identifier	signal_cb		111763	0					
ANR	112862	Argument	SIGINT		111763	2					
ANR	112863	Identifier	SIGINT		111763	0					
ANR	112864	ExpressionStatement	"ev_signal_init ( & sigterm_watcher , signal_cb , SIGTERM )"	1779:4:53577:53629	111763	51	True				
ANR	112865	CallExpression	"ev_signal_init ( & sigterm_watcher , signal_cb , SIGTERM )"		111763	0					
ANR	112866	Callee	ev_signal_init		111763	0					
ANR	112867	Identifier	ev_signal_init		111763	0					
ANR	112868	ArgumentList	& sigterm_watcher		111763	1					
ANR	112869	Argument	& sigterm_watcher		111763	0					
ANR	112870	UnaryOperationExpression	& sigterm_watcher		111763	0					
ANR	112871	UnaryOperator	&		111763	0					
ANR	112872	Identifier	sigterm_watcher		111763	1					
ANR	112873	Argument	signal_cb		111763	1					
ANR	112874	Identifier	signal_cb		111763	0					
ANR	112875	Argument	SIGTERM		111763	2					
ANR	112876	Identifier	SIGTERM		111763	0					
ANR	112877	ExpressionStatement	"ev_signal_init ( & sigchld_watcher , signal_cb , SIGCHLD )"	1780:4:53635:53687	111763	52	True				
ANR	112878	CallExpression	"ev_signal_init ( & sigchld_watcher , signal_cb , SIGCHLD )"		111763	0					
ANR	112879	Callee	ev_signal_init		111763	0					
ANR	112880	Identifier	ev_signal_init		111763	0					
ANR	112881	ArgumentList	& sigchld_watcher		111763	1					
ANR	112882	Argument	& sigchld_watcher		111763	0					
ANR	112883	UnaryOperationExpression	& sigchld_watcher		111763	0					
ANR	112884	UnaryOperator	&		111763	0					
ANR	112885	Identifier	sigchld_watcher		111763	1					
ANR	112886	Argument	signal_cb		111763	1					
ANR	112887	Identifier	signal_cb		111763	0					
ANR	112888	Argument	SIGCHLD		111763	2					
ANR	112889	Identifier	SIGCHLD		111763	0					
ANR	112890	ExpressionStatement	"ev_signal_start ( EV_DEFAULT , & sigint_watcher )"	1781:4:53693:53737	111763	53	True				
ANR	112891	CallExpression	"ev_signal_start ( EV_DEFAULT , & sigint_watcher )"		111763	0					
ANR	112892	Callee	ev_signal_start		111763	0					
ANR	112893	Identifier	ev_signal_start		111763	0					
ANR	112894	ArgumentList	EV_DEFAULT		111763	1					
ANR	112895	Argument	EV_DEFAULT		111763	0					
ANR	112896	Identifier	EV_DEFAULT		111763	0					
ANR	112897	Argument	& sigint_watcher		111763	1					
ANR	112898	UnaryOperationExpression	& sigint_watcher		111763	0					
ANR	112899	UnaryOperator	&		111763	0					
ANR	112900	Identifier	sigint_watcher		111763	1					
ANR	112901	ExpressionStatement	"ev_signal_start ( EV_DEFAULT , & sigterm_watcher )"	1782:4:53743:53788	111763	54	True				
ANR	112902	CallExpression	"ev_signal_start ( EV_DEFAULT , & sigterm_watcher )"		111763	0					
ANR	112903	Callee	ev_signal_start		111763	0					
ANR	112904	Identifier	ev_signal_start		111763	0					
ANR	112905	ArgumentList	EV_DEFAULT		111763	1					
ANR	112906	Argument	EV_DEFAULT		111763	0					
ANR	112907	Identifier	EV_DEFAULT		111763	0					
ANR	112908	Argument	& sigterm_watcher		111763	1					
ANR	112909	UnaryOperationExpression	& sigterm_watcher		111763	0					
ANR	112910	UnaryOperator	&		111763	0					
ANR	112911	Identifier	sigterm_watcher		111763	1					
ANR	112912	ExpressionStatement	"ev_signal_start ( EV_DEFAULT , & sigchld_watcher )"	1783:4:53794:53839	111763	55	True				
ANR	112913	CallExpression	"ev_signal_start ( EV_DEFAULT , & sigchld_watcher )"		111763	0					
ANR	112914	Callee	ev_signal_start		111763	0					
ANR	112915	Identifier	ev_signal_start		111763	0					
ANR	112916	ArgumentList	EV_DEFAULT		111763	1					
ANR	112917	Argument	EV_DEFAULT		111763	0					
ANR	112918	Identifier	EV_DEFAULT		111763	0					
ANR	112919	Argument	& sigchld_watcher		111763	1					
ANR	112920	UnaryOperationExpression	& sigchld_watcher		111763	0					
ANR	112921	UnaryOperator	&		111763	0					
ANR	112922	Identifier	sigchld_watcher		111763	1					
ANR	112923	ExpressionStatement	"LOGI ( ""initializing ciphers... %s"" , method )"	1786:4:53864:53906	111763	56	True				
ANR	112924	CallExpression	"LOGI ( ""initializing ciphers... %s"" , method )"		111763	0					
ANR	112925	Callee	LOGI		111763	0					
ANR	112926	Identifier	LOGI		111763	0					
ANR	112927	ArgumentList	"""initializing ciphers... %s"""		111763	1					
ANR	112928	Argument	"""initializing ciphers... %s"""		111763	0					
ANR	112929	PrimaryExpression	"""initializing ciphers... %s"""		111763	0					
ANR	112930	Argument	method		111763	1					
ANR	112931	Identifier	method		111763	0					
ANR	112932	ExpressionStatement	"crypto = crypto_init ( password , key , method )"	1787:4:53912:53955	111763	57	True				
ANR	112933	AssignmentExpression	"crypto = crypto_init ( password , key , method )"		111763	0		=			
ANR	112934	Identifier	crypto		111763	0					
ANR	112935	CallExpression	"crypto_init ( password , key , method )"		111763	1					
ANR	112936	Callee	crypto_init		111763	0					
ANR	112937	Identifier	crypto_init		111763	0					
ANR	112938	ArgumentList	password		111763	1					
ANR	112939	Argument	password		111763	0					
ANR	112940	Identifier	password		111763	0					
ANR	112941	Argument	key		111763	1					
ANR	112942	Identifier	key		111763	0					
ANR	112943	Argument	method		111763	2					
ANR	112944	Identifier	method		111763	0					
ANR	112945	IfStatement	if ( crypto == NULL )		111763	58					
ANR	112946	Condition	crypto == NULL	1788:8:53965:53978	111763	0	True				
ANR	112947	EqualityExpression	crypto == NULL		111763	0		==			
ANR	112948	Identifier	crypto		111763	0					
ANR	112949	Identifier	NULL		111763	1					
ANR	112950	ExpressionStatement	"FATAL ( ""failed to initialize ciphers"" )"	1789:8:53989:54026	111763	1	True				
ANR	112951	CallExpression	"FATAL ( ""failed to initialize ciphers"" )"		111763	0					
ANR	112952	Callee	FATAL		111763	0					
ANR	112953	Identifier	FATAL		111763	0					
ANR	112954	ArgumentList	"""failed to initialize ciphers"""		111763	1					
ANR	112955	Argument	"""failed to initialize ciphers"""		111763	0					
ANR	112956	PrimaryExpression	"""failed to initialize ciphers"""		111763	0					
ANR	112957	IdentifierDeclStatement	struct ev_loop * loop = EV_DEFAULT ;	1792:4:54059:54092	111763	59	True				
ANR	112958	IdentifierDecl	* loop = EV_DEFAULT		111763	0					
ANR	112959	IdentifierDeclType	struct ev_loop *		111763	0					
ANR	112960	Identifier	loop		111763	1					
ANR	112961	AssignmentExpression	* loop = EV_DEFAULT		111763	2		=			
ANR	112962	Identifier	EV_DEFAULT		111763	0					
ANR	112963	Identifier	EV_DEFAULT		111763	1					
ANR	112964	ExpressionStatement	"resolv_init ( loop , nameservers , ipv6first )"	1795:4:54116:54157	111763	60	True				
ANR	112965	CallExpression	"resolv_init ( loop , nameservers , ipv6first )"		111763	0					
ANR	112966	Callee	resolv_init		111763	0					
ANR	112967	Identifier	resolv_init		111763	0					
ANR	112968	ArgumentList	loop		111763	1					
ANR	112969	Argument	loop		111763	0					
ANR	112970	Identifier	loop		111763	0					
ANR	112971	Argument	nameservers		111763	1					
ANR	112972	Identifier	nameservers		111763	0					
ANR	112973	Argument	ipv6first		111763	2					
ANR	112974	Identifier	ipv6first		111763	0					
ANR	112975	IfStatement	if ( nameservers != NULL )		111763	61					
ANR	112976	Condition	nameservers != NULL	1797:8:54168:54186	111763	0	True				
ANR	112977	EqualityExpression	nameservers != NULL		111763	0		!=			
ANR	112978	Identifier	nameservers		111763	0					
ANR	112979	Identifier	NULL		111763	1					
ANR	112980	ExpressionStatement	"LOGI ( ""using nameserver: %s"" , nameservers )"	1798:8:54197:54238	111763	1	True				
ANR	112981	CallExpression	"LOGI ( ""using nameserver: %s"" , nameservers )"		111763	0					
ANR	112982	Callee	LOGI		111763	0					
ANR	112983	Identifier	LOGI		111763	0					
ANR	112984	ArgumentList	"""using nameserver: %s"""		111763	1					
ANR	112985	Argument	"""using nameserver: %s"""		111763	0					
ANR	112986	PrimaryExpression	"""using nameserver: %s"""		111763	0					
ANR	112987	Argument	nameservers		111763	1					
ANR	112988	Identifier	nameservers		111763	0					
ANR	112989	IfStatement	if ( plugin != NULL )		111763	62					
ANR	112990	Condition	plugin != NULL	1801:8:54276:54289	111763	0	True				
ANR	112991	EqualityExpression	plugin != NULL		111763	0		!=			
ANR	112992	Identifier	plugin		111763	0					
ANR	112993	Identifier	NULL		111763	1					
ANR	112994	CompoundStatement		336:8:8987:9110	111763	1					
ANR	112995	IdentifierDeclStatement	int len = 0 ;	1802:8:54302:54313	111763	0	True				
ANR	112996	IdentifierDecl	len = 0		111763	0					
ANR	112997	IdentifierDeclType	int		111763	0					
ANR	112998	Identifier	len		111763	1					
ANR	112999	AssignmentExpression	len = 0		111763	2		=			
ANR	113000	Identifier	len		111763	0					
ANR	113001	PrimaryExpression	0		111763	1					
ANR	113002	IdentifierDeclStatement	size_t buf_size = 256 * server_num ;	1803:8:54323:54357	111763	1	True				
ANR	113003	IdentifierDecl	buf_size = 256 * server_num		111763	0					
ANR	113004	IdentifierDeclType	size_t		111763	0					
ANR	113005	Identifier	buf_size		111763	1					
ANR	113006	AssignmentExpression	buf_size = 256 * server_num		111763	2		=			
ANR	113007	Identifier	buf_size		111763	0					
ANR	113008	MultiplicativeExpression	256 * server_num		111763	1		*			
ANR	113009	PrimaryExpression	256		111763	0					
ANR	113010	Identifier	server_num		111763	1					
ANR	113011	IdentifierDeclStatement	char * server_str = ss_malloc ( buf_size ) ;	1804:8:54367:54405	111763	2	True				
ANR	113012	IdentifierDecl	* server_str = ss_malloc ( buf_size )		111763	0					
ANR	113013	IdentifierDeclType	char *		111763	0					
ANR	113014	Identifier	server_str		111763	1					
ANR	113015	AssignmentExpression	* server_str = ss_malloc ( buf_size )		111763	2		=			
ANR	113016	Identifier	server_str		111763	0					
ANR	113017	CallExpression	ss_malloc ( buf_size )		111763	1					
ANR	113018	Callee	ss_malloc		111763	0					
ANR	113019	Identifier	ss_malloc		111763	0					
ANR	113020	ArgumentList	buf_size		111763	1					
ANR	113021	Argument	buf_size		111763	0					
ANR	113022	Identifier	buf_size		111763	0					
ANR	113023	ExpressionStatement	"snprintf ( server_str , buf_size , ""%s"" , server_host [ 0 ] )"	1806:8:54416:54468	111763	3	True				
ANR	113024	CallExpression	"snprintf ( server_str , buf_size , ""%s"" , server_host [ 0 ] )"		111763	0					
ANR	113025	Callee	snprintf		111763	0					
ANR	113026	Identifier	snprintf		111763	0					
ANR	113027	ArgumentList	server_str		111763	1					
ANR	113028	Argument	server_str		111763	0					
ANR	113029	Identifier	server_str		111763	0					
ANR	113030	Argument	buf_size		111763	1					
ANR	113031	Identifier	buf_size		111763	0					
ANR	113032	Argument	"""%s"""		111763	2					
ANR	113033	PrimaryExpression	"""%s"""		111763	0					
ANR	113034	Argument	server_host [ 0 ]		111763	3					
ANR	113035	ArrayIndexing	server_host [ 0 ]		111763	0					
ANR	113036	Identifier	server_host		111763	0					
ANR	113037	PrimaryExpression	0		111763	1					
ANR	113038	ExpressionStatement	len = strlen ( server_str )	1807:8:54478:54502	111763	4	True				
ANR	113039	AssignmentExpression	len = strlen ( server_str )		111763	0		=			
ANR	113040	Identifier	len		111763	0					
ANR	113041	CallExpression	strlen ( server_str )		111763	1					
ANR	113042	Callee	strlen		111763	0					
ANR	113043	Identifier	strlen		111763	0					
ANR	113044	ArgumentList	server_str		111763	1					
ANR	113045	Argument	server_str		111763	0					
ANR	113046	Identifier	server_str		111763	0					
ANR	113047	ForStatement	for ( int i = 1 ; i < server_num ; i ++ )		111763	5					
ANR	113048	ForInit	int i = 1 ;	1808:13:54517:54526	111763	0	True				
ANR	113049	IdentifierDeclStatement	int i = 1 ;		111763	0					
ANR	113050	IdentifierDecl	i = 1		111763	0					
ANR	113051	IdentifierDeclType	int		111763	0					
ANR	113052	Identifier	i		111763	1					
ANR	113053	AssignmentExpression	i = 1		111763	2		=			
ANR	113054	Identifier	i		111763	0					
ANR	113055	PrimaryExpression	1		111763	1					
ANR	113056	Condition	i < server_num	1808:24:54528:54541	111763	1	True				
ANR	113057	RelationalExpression	i < server_num		111763	0		<			
ANR	113058	Identifier	i		111763	0					
ANR	113059	Identifier	server_num		111763	1					
ANR	113060	PostIncDecOperationExpression	i ++	1808:40:54544:54546	111763	2	True				
ANR	113061	Identifier	i		111763	0					
ANR	113062	IncDec	++		111763	1					
ANR	113063	CompoundStatement		331:45:8849:8849	111763	3					
ANR	113064	ExpressionStatement	"snprintf ( server_str + len , buf_size - len , ""|%s"" , server_host [ i ] )"	1809:12:54563:54628	111763	0	True				
ANR	113065	CallExpression	"snprintf ( server_str + len , buf_size - len , ""|%s"" , server_host [ i ] )"		111763	0					
ANR	113066	Callee	snprintf		111763	0					
ANR	113067	Identifier	snprintf		111763	0					
ANR	113068	ArgumentList	server_str + len		111763	1					
ANR	113069	Argument	server_str + len		111763	0					
ANR	113070	AdditiveExpression	server_str + len		111763	0		+			
ANR	113071	Identifier	server_str		111763	0					
ANR	113072	Identifier	len		111763	1					
ANR	113073	Argument	buf_size - len		111763	1					
ANR	113074	AdditiveExpression	buf_size - len		111763	0		-			
ANR	113075	Identifier	buf_size		111763	0					
ANR	113076	Identifier	len		111763	1					
ANR	113077	Argument	"""|%s"""		111763	2					
ANR	113078	PrimaryExpression	"""|%s"""		111763	0					
ANR	113079	Argument	server_host [ i ]		111763	3					
ANR	113080	ArrayIndexing	server_host [ i ]		111763	0					
ANR	113081	Identifier	server_host		111763	0					
ANR	113082	Identifier	i		111763	1					
ANR	113083	ExpressionStatement	len = strlen ( server_str )	1810:12:54642:54666	111763	1	True				
ANR	113084	AssignmentExpression	len = strlen ( server_str )		111763	0		=			
ANR	113085	Identifier	len		111763	0					
ANR	113086	CallExpression	strlen ( server_str )		111763	1					
ANR	113087	Callee	strlen		111763	0					
ANR	113088	Identifier	strlen		111763	0					
ANR	113089	ArgumentList	server_str		111763	1					
ANR	113090	Argument	server_str		111763	0					
ANR	113091	Identifier	server_str		111763	0					
ANR	113092	IdentifierDeclStatement	"int err = start_plugin ( plugin , plugin_opts , server_str , plugin_port , ""127.0.0.1"" , server_port , MODE_SERVER ) ;"	1813:8:54687:54810	111763	6	True				
ANR	113093	IdentifierDecl	"err = start_plugin ( plugin , plugin_opts , server_str , plugin_port , ""127.0.0.1"" , server_port , MODE_SERVER )"		111763	0					
ANR	113094	IdentifierDeclType	int		111763	0					
ANR	113095	Identifier	err		111763	1					
ANR	113096	AssignmentExpression	"err = start_plugin ( plugin , plugin_opts , server_str , plugin_port , ""127.0.0.1"" , server_port , MODE_SERVER )"		111763	2		=			
ANR	113097	Identifier	err		111763	0					
ANR	113098	CallExpression	"start_plugin ( plugin , plugin_opts , server_str , plugin_port , ""127.0.0.1"" , server_port , MODE_SERVER )"		111763	1					
ANR	113099	Callee	start_plugin		111763	0					
ANR	113100	Identifier	start_plugin		111763	0					
ANR	113101	ArgumentList	plugin		111763	1					
ANR	113102	Argument	plugin		111763	0					
ANR	113103	Identifier	plugin		111763	0					
ANR	113104	Argument	plugin_opts		111763	1					
ANR	113105	Identifier	plugin_opts		111763	0					
ANR	113106	Argument	server_str		111763	2					
ANR	113107	Identifier	server_str		111763	0					
ANR	113108	Argument	plugin_port		111763	3					
ANR	113109	Identifier	plugin_port		111763	0					
ANR	113110	Argument	"""127.0.0.1"""		111763	4					
ANR	113111	PrimaryExpression	"""127.0.0.1"""		111763	0					
ANR	113112	Argument	server_port		111763	5					
ANR	113113	Identifier	server_port		111763	0					
ANR	113114	Argument	MODE_SERVER		111763	6					
ANR	113115	Identifier	MODE_SERVER		111763	0					
ANR	113116	IfStatement	if ( err )		111763	7					
ANR	113117	Condition	err	1815:12:54824:54826	111763	0	True				
ANR	113118	Identifier	err		111763	0					
ANR	113119	CompoundStatement		338:17:9129:9129	111763	1					
ANR	113120	ExpressionStatement	"FATAL ( ""failed to start the plugin"" )"	1816:12:54843:54878	111763	0	True				
ANR	113121	CallExpression	"FATAL ( ""failed to start the plugin"" )"		111763	0					
ANR	113122	Callee	FATAL		111763	0					
ANR	113123	Identifier	FATAL		111763	0					
ANR	113124	ArgumentList	"""failed to start the plugin"""		111763	1					
ANR	113125	Argument	"""failed to start the plugin"""		111763	0					
ANR	113126	PrimaryExpression	"""failed to start the plugin"""		111763	0					
ANR	113127	IdentifierDeclStatement	listen_ctx_t listen_ctx_list [ server_num ] ;	1821:4:54934:54974	111763	63	True				
ANR	113128	IdentifierDecl	listen_ctx_list [ server_num ]		111763	0					
ANR	113129	IdentifierDeclType	listen_ctx_t [ server_num ]		111763	0					
ANR	113130	Identifier	listen_ctx_list		111763	1					
ANR	113131	Identifier	server_num		111763	2					
ANR	113132	IfStatement	if ( mode != UDP_ONLY )		111763	64					
ANR	113133	Condition	mode != UDP_ONLY	1824:8:55015:55030	111763	0	True				
ANR	113134	EqualityExpression	mode != UDP_ONLY		111763	0		!=			
ANR	113135	Identifier	mode		111763	0					
ANR	113136	Identifier	UDP_ONLY		111763	1					
ANR	113137	CompoundStatement		347:26:9333:9333	111763	1					
ANR	113138	ForStatement	for ( int i = 0 ; i < server_num ; i ++ )		111763	0					
ANR	113139	ForInit	int i = 0 ;	1825:13:55048:55057	111763	0	True				
ANR	113140	IdentifierDeclStatement	int i = 0 ;		111763	0					
ANR	113141	IdentifierDecl	i = 0		111763	0					
ANR	113142	IdentifierDeclType	int		111763	0					
ANR	113143	Identifier	i		111763	1					
ANR	113144	AssignmentExpression	i = 0		111763	2		=			
ANR	113145	Identifier	i		111763	0					
ANR	113146	PrimaryExpression	0		111763	1					
ANR	113147	Condition	i < server_num	1825:24:55059:55072	111763	1	True				
ANR	113148	RelationalExpression	i < server_num		111763	0		<			
ANR	113149	Identifier	i		111763	0					
ANR	113150	Identifier	server_num		111763	1					
ANR	113151	PostIncDecOperationExpression	i ++	1825:40:55075:55077	111763	2	True				
ANR	113152	Identifier	i		111763	0					
ANR	113153	IncDec	++		111763	1					
ANR	113154	CompoundStatement		366:12:9915:9961	111763	3					
ANR	113155	IdentifierDeclStatement	const char * host = server_host [ i ] ;	1826:12:55094:55127	111763	0	True				
ANR	113156	IdentifierDecl	* host = server_host [ i ]		111763	0					
ANR	113157	IdentifierDeclType	const char *		111763	0					
ANR	113158	Identifier	host		111763	1					
ANR	113159	AssignmentExpression	* host = server_host [ i ]		111763	2		=			
ANR	113160	Identifier	host		111763	0					
ANR	113161	ArrayIndexing	server_host [ i ]		111763	1					
ANR	113162	Identifier	server_host		111763	0					
ANR	113163	Identifier	i		111763	1					
ANR	113164	IfStatement	if ( plugin != NULL )		111763	1					
ANR	113165	Condition	plugin != NULL	1828:16:55146:55159	111763	0	True				
ANR	113166	EqualityExpression	plugin != NULL		111763	0		!=			
ANR	113167	Identifier	plugin		111763	0					
ANR	113168	Identifier	NULL		111763	1					
ANR	113169	CompoundStatement		351:32:9462:9462	111763	1					
ANR	113170	ExpressionStatement	"host = ""127.0.0.1"""	1829:16:55180:55198	111763	0	True				
ANR	113171	AssignmentExpression	"host = ""127.0.0.1"""		111763	0		=			
ANR	113172	Identifier	host		111763	0					
ANR	113173	PrimaryExpression	"""127.0.0.1"""		111763	1					
ANR	113174	IdentifierDeclStatement	int listenfd ;	1833:12:55255:55267	111763	2	True				
ANR	113175	IdentifierDecl	listenfd		111763	0					
ANR	113176	IdentifierDeclType	int		111763	0					
ANR	113177	Identifier	listenfd		111763	1					
ANR	113178	ExpressionStatement	"listenfd = create_and_bind ( host , server_port , mptcp )"	1834:12:55281:55333	111763	3	True				
ANR	113179	AssignmentExpression	"listenfd = create_and_bind ( host , server_port , mptcp )"		111763	0		=			
ANR	113180	Identifier	listenfd		111763	0					
ANR	113181	CallExpression	"create_and_bind ( host , server_port , mptcp )"		111763	1					
ANR	113182	Callee	create_and_bind		111763	0					
ANR	113183	Identifier	create_and_bind		111763	0					
ANR	113184	ArgumentList	host		111763	1					
ANR	113185	Argument	host		111763	0					
ANR	113186	Identifier	host		111763	0					
ANR	113187	Argument	server_port		111763	1					
ANR	113188	Identifier	server_port		111763	0					
ANR	113189	Argument	mptcp		111763	2					
ANR	113190	Identifier	mptcp		111763	0					
ANR	113191	IfStatement	if ( listenfd == - 1 )		111763	4					
ANR	113192	Condition	listenfd == - 1	1835:16:55351:55364	111763	0	True				
ANR	113193	EqualityExpression	listenfd == - 1		111763	0		==			
ANR	113194	Identifier	listenfd		111763	0					
ANR	113195	UnaryOperationExpression	- 1		111763	1					
ANR	113196	UnaryOperator	-		111763	0					
ANR	113197	PrimaryExpression	1		111763	1					
ANR	113198	CompoundStatement		358:32:9667:9667	111763	1					
ANR	113199	ExpressionStatement	"FATAL ( ""bind() error"" )"	1836:16:55385:55406	111763	0	True				
ANR	113200	CallExpression	"FATAL ( ""bind() error"" )"		111763	0					
ANR	113201	Callee	FATAL		111763	0					
ANR	113202	Identifier	FATAL		111763	0					
ANR	113203	ArgumentList	"""bind() error"""		111763	1					
ANR	113204	Argument	"""bind() error"""		111763	0					
ANR	113205	PrimaryExpression	"""bind() error"""		111763	0					
ANR	113206	IfStatement	"if ( listen ( listenfd , SSMAXCONN ) == - 1 )"		111763	5					
ANR	113207	Condition	"listen ( listenfd , SSMAXCONN ) == - 1"	1838:16:55438:55470	111763	0	True				
ANR	113208	EqualityExpression	"listen ( listenfd , SSMAXCONN ) == - 1"		111763	0		==			
ANR	113209	CallExpression	"listen ( listenfd , SSMAXCONN )"		111763	0					
ANR	113210	Callee	listen		111763	0					
ANR	113211	Identifier	listen		111763	0					
ANR	113212	ArgumentList	listenfd		111763	1					
ANR	113213	Argument	listenfd		111763	0					
ANR	113214	Identifier	listenfd		111763	0					
ANR	113215	Argument	SSMAXCONN		111763	1					
ANR	113216	Identifier	SSMAXCONN		111763	0					
ANR	113217	UnaryOperationExpression	- 1		111763	1					
ANR	113218	UnaryOperator	-		111763	0					
ANR	113219	PrimaryExpression	1		111763	1					
ANR	113220	CompoundStatement		361:51:9773:9773	111763	1					
ANR	113221	ExpressionStatement	"FATAL ( ""listen() error"" )"	1839:16:55491:55514	111763	0	True				
ANR	113222	CallExpression	"FATAL ( ""listen() error"" )"		111763	0					
ANR	113223	Callee	FATAL		111763	0					
ANR	113224	Identifier	FATAL		111763	0					
ANR	113225	ArgumentList	"""listen() error"""		111763	1					
ANR	113226	Argument	"""listen() error"""		111763	0					
ANR	113227	PrimaryExpression	"""listen() error"""		111763	0					
ANR	113228	ExpressionStatement	setfastopen ( listenfd )	1841:12:55542:55563	111763	6	True				
ANR	113229	CallExpression	setfastopen ( listenfd )		111763	0					
ANR	113230	Callee	setfastopen		111763	0					
ANR	113231	Identifier	setfastopen		111763	0					
ANR	113232	ArgumentList	listenfd		111763	1					
ANR	113233	Argument	listenfd		111763	0					
ANR	113234	Identifier	listenfd		111763	0					
ANR	113235	ExpressionStatement	setnonblocking ( listenfd )	1842:12:55577:55601	111763	7	True				
ANR	113236	CallExpression	setnonblocking ( listenfd )		111763	0					
ANR	113237	Callee	setnonblocking		111763	0					
ANR	113238	Identifier	setnonblocking		111763	0					
ANR	113239	ArgumentList	listenfd		111763	1					
ANR	113240	Argument	listenfd		111763	0					
ANR	113241	Identifier	listenfd		111763	0					
ANR	113242	IdentifierDeclStatement	listen_ctx_t * listen_ctx = & listen_ctx_list [ i ] ;	1843:12:55615:55661	111763	8	True				
ANR	113243	IdentifierDecl	* listen_ctx = & listen_ctx_list [ i ]		111763	0					
ANR	113244	IdentifierDeclType	listen_ctx_t *		111763	0					
ANR	113245	Identifier	listen_ctx		111763	1					
ANR	113246	AssignmentExpression	* listen_ctx = & listen_ctx_list [ i ]		111763	2		=			
ANR	113247	Identifier	listen_ctx		111763	0					
ANR	113248	UnaryOperationExpression	& listen_ctx_list [ i ]		111763	1					
ANR	113249	UnaryOperator	&		111763	0					
ANR	113250	ArrayIndexing	listen_ctx_list [ i ]		111763	1					
ANR	113251	Identifier	listen_ctx_list		111763	0					
ANR	113252	Identifier	i		111763	1					
ANR	113253	ExpressionStatement	listen_ctx -> timeout = atoi ( timeout )	1846:12:55711:55746	111763	9	True				
ANR	113254	AssignmentExpression	listen_ctx -> timeout = atoi ( timeout )		111763	0		=			
ANR	113255	PtrMemberAccess	listen_ctx -> timeout		111763	0					
ANR	113256	Identifier	listen_ctx		111763	0					
ANR	113257	Identifier	timeout		111763	1					
ANR	113258	CallExpression	atoi ( timeout )		111763	1					
ANR	113259	Callee	atoi		111763	0					
ANR	113260	Identifier	atoi		111763	0					
ANR	113261	ArgumentList	timeout		111763	1					
ANR	113262	Argument	timeout		111763	0					
ANR	113263	Identifier	timeout		111763	0					
ANR	113264	ExpressionStatement	listen_ctx -> fd = listenfd	1847:12:55760:55790	111763	10	True				
ANR	113265	AssignmentExpression	listen_ctx -> fd = listenfd		111763	0		=			
ANR	113266	PtrMemberAccess	listen_ctx -> fd		111763	0					
ANR	113267	Identifier	listen_ctx		111763	0					
ANR	113268	Identifier	fd		111763	1					
ANR	113269	Identifier	listenfd		111763	1					
ANR	113270	ExpressionStatement	listen_ctx -> iface = iface	1848:12:55804:55831	111763	11	True				
ANR	113271	AssignmentExpression	listen_ctx -> iface = iface		111763	0		=			
ANR	113272	PtrMemberAccess	listen_ctx -> iface		111763	0					
ANR	113273	Identifier	listen_ctx		111763	0					
ANR	113274	Identifier	iface		111763	1					
ANR	113275	Identifier	iface		111763	1					
ANR	113276	ExpressionStatement	listen_ctx -> loop = loop	1849:12:55845:55871	111763	12	True				
ANR	113277	AssignmentExpression	listen_ctx -> loop = loop		111763	0		=			
ANR	113278	PtrMemberAccess	listen_ctx -> loop		111763	0					
ANR	113279	Identifier	listen_ctx		111763	0					
ANR	113280	Identifier	loop		111763	1					
ANR	113281	Identifier	loop		111763	1					
ANR	113282	ExpressionStatement	"ev_io_init ( & listen_ctx -> io , accept_cb , listenfd , EV_READ )"	1851:12:55886:55943	111763	13	True				
ANR	113283	CallExpression	"ev_io_init ( & listen_ctx -> io , accept_cb , listenfd , EV_READ )"		111763	0					
ANR	113284	Callee	ev_io_init		111763	0					
ANR	113285	Identifier	ev_io_init		111763	0					
ANR	113286	ArgumentList	& listen_ctx -> io		111763	1					
ANR	113287	Argument	& listen_ctx -> io		111763	0					
ANR	113288	UnaryOperationExpression	& listen_ctx -> io		111763	0					
ANR	113289	UnaryOperator	&		111763	0					
ANR	113290	PtrMemberAccess	listen_ctx -> io		111763	1					
ANR	113291	Identifier	listen_ctx		111763	0					
ANR	113292	Identifier	io		111763	1					
ANR	113293	Argument	accept_cb		111763	1					
ANR	113294	Identifier	accept_cb		111763	0					
ANR	113295	Argument	listenfd		111763	2					
ANR	113296	Identifier	listenfd		111763	0					
ANR	113297	Argument	EV_READ		111763	3					
ANR	113298	Identifier	EV_READ		111763	0					
ANR	113299	ExpressionStatement	"ev_io_start ( loop , & listen_ctx -> io )"	1852:12:55957:55991	111763	14	True				
ANR	113300	CallExpression	"ev_io_start ( loop , & listen_ctx -> io )"		111763	0					
ANR	113301	Callee	ev_io_start		111763	0					
ANR	113302	Identifier	ev_io_start		111763	0					
ANR	113303	ArgumentList	loop		111763	1					
ANR	113304	Argument	loop		111763	0					
ANR	113305	Identifier	loop		111763	0					
ANR	113306	Argument	& listen_ctx -> io		111763	1					
ANR	113307	UnaryOperationExpression	& listen_ctx -> io		111763	0					
ANR	113308	UnaryOperator	&		111763	0					
ANR	113309	PtrMemberAccess	listen_ctx -> io		111763	1					
ANR	113310	Identifier	listen_ctx		111763	0					
ANR	113311	Identifier	io		111763	1					
ANR	113312	IfStatement	"if ( host && strcmp ( host , "":"" ) > 0 )"		111763	15					
ANR	113313	Condition	"host && strcmp ( host , "":"" ) > 0"	1854:16:56010:56038	111763	0	True				
ANR	113314	AndExpression	"host && strcmp ( host , "":"" ) > 0"		111763	0		&&			
ANR	113315	Identifier	host		111763	0					
ANR	113316	RelationalExpression	"strcmp ( host , "":"" ) > 0"		111763	1		>			
ANR	113317	CallExpression	"strcmp ( host , "":"" )"		111763	0					
ANR	113318	Callee	strcmp		111763	0					
ANR	113319	Identifier	strcmp		111763	0					
ANR	113320	ArgumentList	host		111763	1					
ANR	113321	Argument	host		111763	0					
ANR	113322	Identifier	host		111763	0					
ANR	113323	Argument	""":"""		111763	1					
ANR	113324	PrimaryExpression	""":"""		111763	0					
ANR	113325	PrimaryExpression	0		111763	1					
ANR	113326	ExpressionStatement	"LOGI ( ""tcp server listening at [%s]:%s"" , host , server_port )"	1855:16:56057:56115	111763	1	True				
ANR	113327	CallExpression	"LOGI ( ""tcp server listening at [%s]:%s"" , host , server_port )"		111763	0					
ANR	113328	Callee	LOGI		111763	0					
ANR	113329	Identifier	LOGI		111763	0					
ANR	113330	ArgumentList	"""tcp server listening at [%s]:%s"""		111763	1					
ANR	113331	Argument	"""tcp server listening at [%s]:%s"""		111763	0					
ANR	113332	PrimaryExpression	"""tcp server listening at [%s]:%s"""		111763	0					
ANR	113333	Argument	host		111763	1					
ANR	113334	Identifier	host		111763	0					
ANR	113335	Argument	server_port		111763	2					
ANR	113336	Identifier	server_port		111763	0					
ANR	113337	ElseStatement	else		111763	0					
ANR	113338	ExpressionStatement	"LOGI ( ""tcp server listening at %s:%s"" , host ? host : ""0.0.0.0"" , server_port )"	1857:16:56150:56225	111763	0	True				
ANR	113339	CallExpression	"LOGI ( ""tcp server listening at %s:%s"" , host ? host : ""0.0.0.0"" , server_port )"		111763	0					
ANR	113340	Callee	LOGI		111763	0					
ANR	113341	Identifier	LOGI		111763	0					
ANR	113342	ArgumentList	"""tcp server listening at %s:%s"""		111763	1					
ANR	113343	Argument	"""tcp server listening at %s:%s"""		111763	0					
ANR	113344	PrimaryExpression	"""tcp server listening at %s:%s"""		111763	0					
ANR	113345	Argument	"host ? host : ""0.0.0.0"""		111763	1					
ANR	113346	ConditionalExpression	"host ? host : ""0.0.0.0"""		111763	0					
ANR	113347	Condition	host		111763	0					
ANR	113348	Identifier	host		111763	0					
ANR	113349	Identifier	host		111763	1					
ANR	113350	PrimaryExpression	"""0.0.0.0"""		111763	2					
ANR	113351	Argument	server_port		111763	2					
ANR	113352	Identifier	server_port		111763	0					
ANR	113353	IfStatement	if ( plugin != NULL )		111763	16					
ANR	113354	Condition	plugin != NULL	1859:16:56244:56257	111763	0	True				
ANR	113355	EqualityExpression	plugin != NULL		111763	0		!=			
ANR	113356	Identifier	plugin		111763	0					
ANR	113357	Identifier	NULL		111763	1					
ANR	113358	BreakStatement	break ;	1859:32:56260:56265	111763	1	True				
ANR	113359	IfStatement	if ( mode != TCP_ONLY )		111763	65					
ANR	113360	Condition	mode != TCP_ONLY	1863:8:56292:56307	111763	0	True				
ANR	113361	EqualityExpression	mode != TCP_ONLY		111763	0		!=			
ANR	113362	Identifier	mode		111763	0					
ANR	113363	Identifier	TCP_ONLY		111763	1					
ANR	113364	CompoundStatement		386:26:10610:10610	111763	1					
ANR	113365	ForStatement	for ( int i = 0 ; i < server_num ; i ++ )		111763	0					
ANR	113366	ForInit	int i = 0 ;	1864:13:56325:56334	111763	0	True				
ANR	113367	IdentifierDeclStatement	int i = 0 ;		111763	0					
ANR	113368	IdentifierDecl	i = 0		111763	0					
ANR	113369	IdentifierDeclType	int		111763	0					
ANR	113370	Identifier	i		111763	1					
ANR	113371	AssignmentExpression	i = 0		111763	2		=			
ANR	113372	Identifier	i		111763	0					
ANR	113373	PrimaryExpression	0		111763	1					
ANR	113374	Condition	i < server_num	1864:24:56336:56349	111763	1	True				
ANR	113375	RelationalExpression	i < server_num		111763	0		<			
ANR	113376	Identifier	i		111763	0					
ANR	113377	Identifier	server_num		111763	1					
ANR	113378	PostIncDecOperationExpression	i ++	1864:40:56352:56354	111763	2	True				
ANR	113379	Identifier	i		111763	0					
ANR	113380	IncDec	++		111763	1					
ANR	113381	CompoundStatement		389:12:10718:10748	111763	3					
ANR	113382	IdentifierDeclStatement	const char * host = server_host [ i ] ;	1865:12:56371:56404	111763	0	True				
ANR	113383	IdentifierDecl	* host = server_host [ i ]		111763	0					
ANR	113384	IdentifierDeclType	const char *		111763	0					
ANR	113385	Identifier	host		111763	1					
ANR	113386	AssignmentExpression	* host = server_host [ i ]		111763	2		=			
ANR	113387	Identifier	host		111763	0					
ANR	113388	ArrayIndexing	server_host [ i ]		111763	1					
ANR	113389	Identifier	server_host		111763	0					
ANR	113390	Identifier	i		111763	1					
ANR	113391	IdentifierDeclStatement	const char * port = server_port ;	1866:12:56418:56448	111763	1	True				
ANR	113392	IdentifierDecl	* port = server_port		111763	0					
ANR	113393	IdentifierDeclType	const char *		111763	0					
ANR	113394	Identifier	port		111763	1					
ANR	113395	AssignmentExpression	* port = server_port		111763	2		=			
ANR	113396	Identifier	server_port		111763	0					
ANR	113397	Identifier	server_port		111763	1					
ANR	113398	IfStatement	if ( plugin != NULL )		111763	2					
ANR	113399	Condition	plugin != NULL	1867:16:56466:56479	111763	0	True				
ANR	113400	EqualityExpression	plugin != NULL		111763	0		!=			
ANR	113401	Identifier	plugin		111763	0					
ANR	113402	Identifier	NULL		111763	1					
ANR	113403	CompoundStatement		390:32:10782:10782	111763	1					
ANR	113404	ExpressionStatement	port = plugin_port	1868:16:56500:56518	111763	0	True				
ANR	113405	AssignmentExpression	port = plugin_port		111763	0		=			
ANR	113406	Identifier	port		111763	0					
ANR	113407	Identifier	plugin_port		111763	1					
ANR	113408	ExpressionStatement	"init_udprelay ( host , port , mtu , crypto , atoi ( timeout ) , iface )"	1871:12:56571:56631	111763	3	True				
ANR	113409	CallExpression	"init_udprelay ( host , port , mtu , crypto , atoi ( timeout ) , iface )"		111763	0					
ANR	113410	Callee	init_udprelay		111763	0					
ANR	113411	Identifier	init_udprelay		111763	0					
ANR	113412	ArgumentList	host		111763	1					
ANR	113413	Argument	host		111763	0					
ANR	113414	Identifier	host		111763	0					
ANR	113415	Argument	port		111763	1					
ANR	113416	Identifier	port		111763	0					
ANR	113417	Argument	mtu		111763	2					
ANR	113418	Identifier	mtu		111763	0					
ANR	113419	Argument	crypto		111763	3					
ANR	113420	Identifier	crypto		111763	0					
ANR	113421	Argument	atoi ( timeout )		111763	4					
ANR	113422	CallExpression	atoi ( timeout )		111763	0					
ANR	113423	Callee	atoi		111763	0					
ANR	113424	Identifier	atoi		111763	0					
ANR	113425	ArgumentList	timeout		111763	1					
ANR	113426	Argument	timeout		111763	0					
ANR	113427	Identifier	timeout		111763	0					
ANR	113428	Argument	iface		111763	5					
ANR	113429	Identifier	iface		111763	0					
ANR	113430	IfStatement	"if ( host && strcmp ( host , "":"" ) > 0 )"		111763	4					
ANR	113431	Condition	"host && strcmp ( host , "":"" ) > 0"	1872:16:56649:56677	111763	0	True				
ANR	113432	AndExpression	"host && strcmp ( host , "":"" ) > 0"		111763	0		&&			
ANR	113433	Identifier	host		111763	0					
ANR	113434	RelationalExpression	"strcmp ( host , "":"" ) > 0"		111763	1		>			
ANR	113435	CallExpression	"strcmp ( host , "":"" )"		111763	0					
ANR	113436	Callee	strcmp		111763	0					
ANR	113437	Identifier	strcmp		111763	0					
ANR	113438	ArgumentList	host		111763	1					
ANR	113439	Argument	host		111763	0					
ANR	113440	Identifier	host		111763	0					
ANR	113441	Argument	""":"""		111763	1					
ANR	113442	PrimaryExpression	""":"""		111763	0					
ANR	113443	PrimaryExpression	0		111763	1					
ANR	113444	ExpressionStatement	"LOGI ( ""udp server listening at [%s]:%s"" , host , port )"	1873:16:56696:56747	111763	1	True				
ANR	113445	CallExpression	"LOGI ( ""udp server listening at [%s]:%s"" , host , port )"		111763	0					
ANR	113446	Callee	LOGI		111763	0					
ANR	113447	Identifier	LOGI		111763	0					
ANR	113448	ArgumentList	"""udp server listening at [%s]:%s"""		111763	1					
ANR	113449	Argument	"""udp server listening at [%s]:%s"""		111763	0					
ANR	113450	PrimaryExpression	"""udp server listening at [%s]:%s"""		111763	0					
ANR	113451	Argument	host		111763	1					
ANR	113452	Identifier	host		111763	0					
ANR	113453	Argument	port		111763	2					
ANR	113454	Identifier	port		111763	0					
ANR	113455	ElseStatement	else		111763	0					
ANR	113456	ExpressionStatement	"LOGI ( ""udp server listening at %s:%s"" , host ? host : ""0.0.0.0"" , port )"	1875:16:56782:56850	111763	0	True				
ANR	113457	CallExpression	"LOGI ( ""udp server listening at %s:%s"" , host ? host : ""0.0.0.0"" , port )"		111763	0					
ANR	113458	Callee	LOGI		111763	0					
ANR	113459	Identifier	LOGI		111763	0					
ANR	113460	ArgumentList	"""udp server listening at %s:%s"""		111763	1					
ANR	113461	Argument	"""udp server listening at %s:%s"""		111763	0					
ANR	113462	PrimaryExpression	"""udp server listening at %s:%s"""		111763	0					
ANR	113463	Argument	"host ? host : ""0.0.0.0"""		111763	1					
ANR	113464	ConditionalExpression	"host ? host : ""0.0.0.0"""		111763	0					
ANR	113465	Condition	host		111763	0					
ANR	113466	Identifier	host		111763	0					
ANR	113467	Identifier	host		111763	1					
ANR	113468	PrimaryExpression	"""0.0.0.0"""		111763	2					
ANR	113469	Argument	port		111763	2					
ANR	113470	Identifier	port		111763	0					
ANR	113471	IfStatement	if ( manager_address != NULL )		111763	66					
ANR	113472	Condition	manager_address != NULL	1879:8:56877:56899	111763	0	True				
ANR	113473	EqualityExpression	manager_address != NULL		111763	0		!=			
ANR	113474	Identifier	manager_address		111763	0					
ANR	113475	Identifier	NULL		111763	1					
ANR	113476	CompoundStatement		402:33:11202:11202	111763	1					
ANR	113477	ExpressionStatement	"ev_timer_init ( & stat_update_watcher , stat_update_cb , UPDATE_INTERVAL , UPDATE_INTERVAL )"	1880:8:56912:56997	111763	0	True				
ANR	113478	CallExpression	"ev_timer_init ( & stat_update_watcher , stat_update_cb , UPDATE_INTERVAL , UPDATE_INTERVAL )"		111763	0					
ANR	113479	Callee	ev_timer_init		111763	0					
ANR	113480	Identifier	ev_timer_init		111763	0					
ANR	113481	ArgumentList	& stat_update_watcher		111763	1					
ANR	113482	Argument	& stat_update_watcher		111763	0					
ANR	113483	UnaryOperationExpression	& stat_update_watcher		111763	0					
ANR	113484	UnaryOperator	&		111763	0					
ANR	113485	Identifier	stat_update_watcher		111763	1					
ANR	113486	Argument	stat_update_cb		111763	1					
ANR	113487	Identifier	stat_update_cb		111763	0					
ANR	113488	Argument	UPDATE_INTERVAL		111763	2					
ANR	113489	Identifier	UPDATE_INTERVAL		111763	0					
ANR	113490	Argument	UPDATE_INTERVAL		111763	3					
ANR	113491	Identifier	UPDATE_INTERVAL		111763	0					
ANR	113492	ExpressionStatement	"ev_timer_start ( EV_DEFAULT , & stat_update_watcher )"	1881:8:57007:57055	111763	1	True				
ANR	113493	CallExpression	"ev_timer_start ( EV_DEFAULT , & stat_update_watcher )"		111763	0					
ANR	113494	Callee	ev_timer_start		111763	0					
ANR	113495	Identifier	ev_timer_start		111763	0					
ANR	113496	ArgumentList	EV_DEFAULT		111763	1					
ANR	113497	Argument	EV_DEFAULT		111763	0					
ANR	113498	Identifier	EV_DEFAULT		111763	0					
ANR	113499	Argument	& stat_update_watcher		111763	1					
ANR	113500	UnaryOperationExpression	& stat_update_watcher		111763	0					
ANR	113501	UnaryOperator	&		111763	0					
ANR	113502	Identifier	stat_update_watcher		111763	1					
ANR	113503	ExpressionStatement	"ev_timer_init ( & block_list_watcher , block_list_clear_cb , UPDATE_INTERVAL , UPDATE_INTERVAL )"	1884:4:57068:57157	111763	67	True				
ANR	113504	CallExpression	"ev_timer_init ( & block_list_watcher , block_list_clear_cb , UPDATE_INTERVAL , UPDATE_INTERVAL )"		111763	0					
ANR	113505	Callee	ev_timer_init		111763	0					
ANR	113506	Identifier	ev_timer_init		111763	0					
ANR	113507	ArgumentList	& block_list_watcher		111763	1					
ANR	113508	Argument	& block_list_watcher		111763	0					
ANR	113509	UnaryOperationExpression	& block_list_watcher		111763	0					
ANR	113510	UnaryOperator	&		111763	0					
ANR	113511	Identifier	block_list_watcher		111763	1					
ANR	113512	Argument	block_list_clear_cb		111763	1					
ANR	113513	Identifier	block_list_clear_cb		111763	0					
ANR	113514	Argument	UPDATE_INTERVAL		111763	2					
ANR	113515	Identifier	UPDATE_INTERVAL		111763	0					
ANR	113516	Argument	UPDATE_INTERVAL		111763	3					
ANR	113517	Identifier	UPDATE_INTERVAL		111763	0					
ANR	113518	ExpressionStatement	"ev_timer_start ( EV_DEFAULT , & block_list_watcher )"	1885:4:57163:57210	111763	68	True				
ANR	113519	CallExpression	"ev_timer_start ( EV_DEFAULT , & block_list_watcher )"		111763	0					
ANR	113520	Callee	ev_timer_start		111763	0					
ANR	113521	Identifier	ev_timer_start		111763	0					
ANR	113522	ArgumentList	EV_DEFAULT		111763	1					
ANR	113523	Argument	EV_DEFAULT		111763	0					
ANR	113524	Identifier	EV_DEFAULT		111763	0					
ANR	113525	Argument	& block_list_watcher		111763	1					
ANR	113526	UnaryOperationExpression	& block_list_watcher		111763	0					
ANR	113527	UnaryOperator	&		111763	0					
ANR	113528	Identifier	block_list_watcher		111763	1					
ANR	113529	IfStatement	if ( user != NULL && ! run_as ( user ) )		111763	69					
ANR	113530	Condition	user != NULL && ! run_as ( user )	1888:8:57235:57263	111763	0	True				
ANR	113531	AndExpression	user != NULL && ! run_as ( user )		111763	0		&&			
ANR	113532	EqualityExpression	user != NULL		111763	0		!=			
ANR	113533	Identifier	user		111763	0					
ANR	113534	Identifier	NULL		111763	1					
ANR	113535	UnaryOperationExpression	! run_as ( user )		111763	1					
ANR	113536	UnaryOperator	!		111763	0					
ANR	113537	CallExpression	run_as ( user )		111763	1					
ANR	113538	Callee	run_as		111763	0					
ANR	113539	Identifier	run_as		111763	0					
ANR	113540	ArgumentList	user		111763	1					
ANR	113541	Argument	user		111763	0					
ANR	113542	Identifier	user		111763	0					
ANR	113543	CompoundStatement		411:39:11566:11566	111763	1					
ANR	113544	ExpressionStatement	"FATAL ( ""failed to switch user"" )"	1889:8:57276:57306	111763	0	True				
ANR	113545	CallExpression	"FATAL ( ""failed to switch user"" )"		111763	0					
ANR	113546	Callee	FATAL		111763	0					
ANR	113547	Identifier	FATAL		111763	0					
ANR	113548	ArgumentList	"""failed to switch user"""		111763	1					
ANR	113549	Argument	"""failed to switch user"""		111763	0					
ANR	113550	PrimaryExpression	"""failed to switch user"""		111763	0					
ANR	113551	IfStatement	if ( geteuid ( ) == 0 )		111763	70					
ANR	113552	Condition	geteuid ( ) == 0	1892:8:57323:57336	111763	0	True				
ANR	113553	EqualityExpression	geteuid ( ) == 0		111763	0		==			
ANR	113554	CallExpression	geteuid ( )		111763	0					
ANR	113555	Callee	geteuid		111763	0					
ANR	113556	Identifier	geteuid		111763	0					
ANR	113557	ArgumentList			111763	1					
ANR	113558	PrimaryExpression	0		111763	1					
ANR	113559	CompoundStatement		415:24:11639:11639	111763	1					
ANR	113560	ExpressionStatement	"LOGI ( ""running from root user"" )"	1893:8:57349:57379	111763	0	True				
ANR	113561	CallExpression	"LOGI ( ""running from root user"" )"		111763	0					
ANR	113562	Callee	LOGI		111763	0					
ANR	113563	Identifier	LOGI		111763	0					
ANR	113564	ArgumentList	"""running from root user"""		111763	1					
ANR	113565	Argument	"""running from root user"""		111763	0					
ANR	113566	PrimaryExpression	"""running from root user"""		111763	0					
ANR	113567	ExpressionStatement	init_block_list ( )	1897:4:57415:57432	111763	71	True				
ANR	113568	CallExpression	init_block_list ( )		111763	0					
ANR	113569	Callee	init_block_list		111763	0					
ANR	113570	Identifier	init_block_list		111763	0					
ANR	113571	ArgumentList			111763	1					
ANR	113572	ExpressionStatement	cork_dllist_init ( & connections )	1900:4:57463:57493	111763	72	True				
ANR	113573	CallExpression	cork_dllist_init ( & connections )		111763	0					
ANR	113574	Callee	cork_dllist_init		111763	0					
ANR	113575	Identifier	cork_dllist_init		111763	0					
ANR	113576	ArgumentList	& connections		111763	1					
ANR	113577	Argument	& connections		111763	0					
ANR	113578	UnaryOperationExpression	& connections		111763	0					
ANR	113579	UnaryOperator	&		111763	0					
ANR	113580	Identifier	connections		111763	1					
ANR	113581	ExpressionStatement	"ev_run ( loop , 0 )"	1903:4:57521:57536	111763	73	True				
ANR	113582	CallExpression	"ev_run ( loop , 0 )"		111763	0					
ANR	113583	Callee	ev_run		111763	0					
ANR	113584	Identifier	ev_run		111763	0					
ANR	113585	ArgumentList	loop		111763	1					
ANR	113586	Argument	loop		111763	0					
ANR	113587	Identifier	loop		111763	0					
ANR	113588	Argument	0		111763	1					
ANR	113589	PrimaryExpression	0		111763	0					
ANR	113590	IfStatement	if ( verbose )		111763	74					
ANR	113591	Condition	verbose	1905:8:57547:57553	111763	0	True				
ANR	113592	Identifier	verbose		111763	0					
ANR	113593	CompoundStatement		428:17:11856:11856	111763	1					
ANR	113594	ExpressionStatement	"LOGI ( ""closed gracefully"" )"	1906:8:57566:57591	111763	0	True				
ANR	113595	CallExpression	"LOGI ( ""closed gracefully"" )"		111763	0					
ANR	113596	Callee	LOGI		111763	0					
ANR	113597	Identifier	LOGI		111763	0					
ANR	113598	ArgumentList	"""closed gracefully"""		111763	1					
ANR	113599	Argument	"""closed gracefully"""		111763	0					
ANR	113600	PrimaryExpression	"""closed gracefully"""		111763	0					
ANR	113601	ExpressionStatement	free_block_list ( )	1910:4:57627:57644	111763	75	True				
ANR	113602	CallExpression	free_block_list ( )		111763	0					
ANR	113603	Callee	free_block_list		111763	0					
ANR	113604	Identifier	free_block_list		111763	0					
ANR	113605	ArgumentList			111763	1					
ANR	113606	IfStatement	if ( manager_address != NULL )		111763	76					
ANR	113607	Condition	manager_address != NULL	1912:8:57655:57677	111763	0	True				
ANR	113608	EqualityExpression	manager_address != NULL		111763	0		!=			
ANR	113609	Identifier	manager_address		111763	0					
ANR	113610	Identifier	NULL		111763	1					
ANR	113611	CompoundStatement		435:33:11980:11980	111763	1					
ANR	113612	ExpressionStatement	"ev_timer_stop ( EV_DEFAULT , & stat_update_watcher )"	1913:8:57690:57737	111763	0	True				
ANR	113613	CallExpression	"ev_timer_stop ( EV_DEFAULT , & stat_update_watcher )"		111763	0					
ANR	113614	Callee	ev_timer_stop		111763	0					
ANR	113615	Identifier	ev_timer_stop		111763	0					
ANR	113616	ArgumentList	EV_DEFAULT		111763	1					
ANR	113617	Argument	EV_DEFAULT		111763	0					
ANR	113618	Identifier	EV_DEFAULT		111763	0					
ANR	113619	Argument	& stat_update_watcher		111763	1					
ANR	113620	UnaryOperationExpression	& stat_update_watcher		111763	0					
ANR	113621	UnaryOperator	&		111763	0					
ANR	113622	Identifier	stat_update_watcher		111763	1					
ANR	113623	ExpressionStatement	"ev_timer_stop ( EV_DEFAULT , & block_list_watcher )"	1916:4:57750:57796	111763	77	True				
ANR	113624	CallExpression	"ev_timer_stop ( EV_DEFAULT , & block_list_watcher )"		111763	0					
ANR	113625	Callee	ev_timer_stop		111763	0					
ANR	113626	Identifier	ev_timer_stop		111763	0					
ANR	113627	ArgumentList	EV_DEFAULT		111763	1					
ANR	113628	Argument	EV_DEFAULT		111763	0					
ANR	113629	Identifier	EV_DEFAULT		111763	0					
ANR	113630	Argument	& block_list_watcher		111763	1					
ANR	113631	UnaryOperationExpression	& block_list_watcher		111763	0					
ANR	113632	UnaryOperator	&		111763	0					
ANR	113633	Identifier	block_list_watcher		111763	1					
ANR	113634	IfStatement	if ( plugin != NULL )		111763	78					
ANR	113635	Condition	plugin != NULL	1918:8:57807:57820	111763	0	True				
ANR	113636	EqualityExpression	plugin != NULL		111763	0		!=			
ANR	113637	Identifier	plugin		111763	0					
ANR	113638	Identifier	NULL		111763	1					
ANR	113639	CompoundStatement		441:24:12123:12123	111763	1					
ANR	113640	ExpressionStatement	stop_plugin ( )	1919:8:57833:57846	111763	0	True				
ANR	113641	CallExpression	stop_plugin ( )		111763	0					
ANR	113642	Callee	stop_plugin		111763	0					
ANR	113643	Identifier	stop_plugin		111763	0					
ANR	113644	ArgumentList			111763	1					
ANR	113645	ExpressionStatement	resolv_shutdown ( loop )	1924:4:57876:57897	111763	79	True				
ANR	113646	CallExpression	resolv_shutdown ( loop )		111763	0					
ANR	113647	Callee	resolv_shutdown		111763	0					
ANR	113648	Identifier	resolv_shutdown		111763	0					
ANR	113649	ArgumentList	loop		111763	1					
ANR	113650	Argument	loop		111763	0					
ANR	113651	Identifier	loop		111763	0					
ANR	113652	ForStatement	for ( int i = 0 ; i < server_num ; i ++ )		111763	80					
ANR	113653	ForInit	int i = 0 ;	1926:9:57909:57918	111763	0	True				
ANR	113654	IdentifierDeclStatement	int i = 0 ;		111763	0					
ANR	113655	IdentifierDecl	i = 0		111763	0					
ANR	113656	IdentifierDeclType	int		111763	0					
ANR	113657	Identifier	i		111763	1					
ANR	113658	AssignmentExpression	i = 0		111763	2		=			
ANR	113659	Identifier	i		111763	0					
ANR	113660	PrimaryExpression	0		111763	1					
ANR	113661	Condition	i < server_num	1926:20:57920:57933	111763	1	True				
ANR	113662	RelationalExpression	i < server_num		111763	0		<			
ANR	113663	Identifier	i		111763	0					
ANR	113664	Identifier	server_num		111763	1					
ANR	113665	PostIncDecOperationExpression	i ++	1926:36:57936:57938	111763	2	True				
ANR	113666	Identifier	i		111763	0					
ANR	113667	IncDec	++		111763	1					
ANR	113668	CompoundStatement		450:8:12251:12297	111763	3					
ANR	113669	IdentifierDeclStatement	listen_ctx_t * listen_ctx = & listen_ctx_list [ i ] ;	1927:8:57951:57997	111763	0	True				
ANR	113670	IdentifierDecl	* listen_ctx = & listen_ctx_list [ i ]		111763	0					
ANR	113671	IdentifierDeclType	listen_ctx_t *		111763	0					
ANR	113672	Identifier	listen_ctx		111763	1					
ANR	113673	AssignmentExpression	* listen_ctx = & listen_ctx_list [ i ]		111763	2		=			
ANR	113674	Identifier	listen_ctx		111763	0					
ANR	113675	UnaryOperationExpression	& listen_ctx_list [ i ]		111763	1					
ANR	113676	UnaryOperator	&		111763	0					
ANR	113677	ArrayIndexing	listen_ctx_list [ i ]		111763	1					
ANR	113678	Identifier	listen_ctx_list		111763	0					
ANR	113679	Identifier	i		111763	1					
ANR	113680	IfStatement	if ( mode != UDP_ONLY )		111763	1					
ANR	113681	Condition	mode != UDP_ONLY	1928:12:58011:58026	111763	0	True				
ANR	113682	EqualityExpression	mode != UDP_ONLY		111763	0		!=			
ANR	113683	Identifier	mode		111763	0					
ANR	113684	Identifier	UDP_ONLY		111763	1					
ANR	113685	CompoundStatement		451:30:12329:12329	111763	1					
ANR	113686	ExpressionStatement	"ev_io_stop ( loop , & listen_ctx -> io )"	1929:12:58043:58076	111763	0	True				
ANR	113687	CallExpression	"ev_io_stop ( loop , & listen_ctx -> io )"		111763	0					
ANR	113688	Callee	ev_io_stop		111763	0					
ANR	113689	Identifier	ev_io_stop		111763	0					
ANR	113690	ArgumentList	loop		111763	1					
ANR	113691	Argument	loop		111763	0					
ANR	113692	Identifier	loop		111763	0					
ANR	113693	Argument	& listen_ctx -> io		111763	1					
ANR	113694	UnaryOperationExpression	& listen_ctx -> io		111763	0					
ANR	113695	UnaryOperator	&		111763	0					
ANR	113696	PtrMemberAccess	listen_ctx -> io		111763	1					
ANR	113697	Identifier	listen_ctx		111763	0					
ANR	113698	Identifier	io		111763	1					
ANR	113699	ExpressionStatement	close ( listen_ctx -> fd )	1930:12:58090:58111	111763	1	True				
ANR	113700	CallExpression	close ( listen_ctx -> fd )		111763	0					
ANR	113701	Callee	close		111763	0					
ANR	113702	Identifier	close		111763	0					
ANR	113703	ArgumentList	listen_ctx -> fd		111763	1					
ANR	113704	Argument	listen_ctx -> fd		111763	0					
ANR	113705	PtrMemberAccess	listen_ctx -> fd		111763	0					
ANR	113706	Identifier	listen_ctx		111763	0					
ANR	113707	Identifier	fd		111763	1					
ANR	113708	IfStatement	if ( plugin != NULL )		111763	2					
ANR	113709	Condition	plugin != NULL	1932:12:58135:58148	111763	0	True				
ANR	113710	EqualityExpression	plugin != NULL		111763	0		!=			
ANR	113711	Identifier	plugin		111763	0					
ANR	113712	Identifier	NULL		111763	1					
ANR	113713	BreakStatement	break ;	1932:28:58151:58156	111763	1	True				
ANR	113714	IfStatement	if ( mode != UDP_ONLY )		111763	81					
ANR	113715	Condition	mode != UDP_ONLY	1935:8:58173:58188	111763	0	True				
ANR	113716	EqualityExpression	mode != UDP_ONLY		111763	0		!=			
ANR	113717	Identifier	mode		111763	0					
ANR	113718	Identifier	UDP_ONLY		111763	1					
ANR	113719	CompoundStatement		458:26:12491:12491	111763	1					
ANR	113720	ExpressionStatement	free_connections ( loop )	1936:8:58201:58223	111763	0	True				
ANR	113721	CallExpression	free_connections ( loop )		111763	0					
ANR	113722	Callee	free_connections		111763	0					
ANR	113723	Identifier	free_connections		111763	0					
ANR	113724	ArgumentList	loop		111763	1					
ANR	113725	Argument	loop		111763	0					
ANR	113726	Identifier	loop		111763	0					
ANR	113727	IfStatement	if ( mode != TCP_ONLY )		111763	82					
ANR	113728	Condition	mode != TCP_ONLY	1939:8:58240:58255	111763	0	True				
ANR	113729	EqualityExpression	mode != TCP_ONLY		111763	0		!=			
ANR	113730	Identifier	mode		111763	0					
ANR	113731	Identifier	TCP_ONLY		111763	1					
ANR	113732	CompoundStatement		462:26:12558:12558	111763	1					
ANR	113733	ExpressionStatement	free_udprelay ( )	1940:8:58268:58283	111763	0	True				
ANR	113734	CallExpression	free_udprelay ( )		111763	0					
ANR	113735	Callee	free_udprelay		111763	0					
ANR	113736	Identifier	free_udprelay		111763	0					
ANR	113737	ArgumentList			111763	1					
ANR	113738	ReturnStatement	return 0 ;	1943:4:58296:58304	111763	83	True				
ANR	113739	PrimaryExpression	0		111763	0					
ANR	113740	ReturnType	int		111763	1					
ANR	113741	Identifier	main		111763	2					
ANR	113742	ParameterList	"int argc , char * * argv"		111763	3					
ANR	113743	Parameter	int argc	1477:5:45676:45683	111763	0	True				
ANR	113744	ParameterType	int		111763	0					
ANR	113745	Identifier	argc		111763	1					
ANR	113746	Parameter	char * * argv	1477:15:45686:45696	111763	1	True				
ANR	113747	ParameterType	char * *		111763	0					
ANR	113748	Identifier	argv		111763	1					
ANR	113749	CFGEntryNode	ENTRY		111763		True				
ANR	113750	CFGExitNode	EXIT		111763		True				
ANR	113751	Symbol	MODE_SERVER		111763						
ANR	113752	Symbol	optarg		111763						
ANR	113753	Symbol	conf		111763						
ANR	113754	Symbol	password		111763						
ANR	113755	Symbol	len		111763						
ANR	113756	Symbol	opterr		111763						
ANR	113757	Symbol	server_str		111763						
ANR	113758	Symbol	listen_ctx -> fd		111763						
ANR	113759	Symbol	method		111763						
ANR	113760	Symbol	& connections		111763						
ANR	113761	Symbol	SIG_IGN		111763						
ANR	113762	Symbol	conf -> remote_port		111763						
ANR	113763	Symbol	fast_open		111763						
ANR	113764	Symbol	conf -> plugin_opts		111763						
ANR	113765	Symbol	MAX_REMOTE_NUM		111763						
ANR	113766	Symbol	accept_cb		111763						
ANR	113767	Symbol	tmp_port		111763						
ANR	113768	Symbol	TCP_AND_UDP		111763						
ANR	113769	Symbol	EXIT_FAILURE		111763						
ANR	113770	Symbol	EXIT_SUCCESS		111763						
ANR	113771	Symbol	server_port		111763						
ANR	113772	Symbol	conf -> fast_open		111763						
ANR	113773	Symbol	SSMAXCONN		111763						
ANR	113774	Symbol	UDP_ONLY		111763						
ANR	113775	Symbol	* * conf		111763						
ANR	113776	Symbol	conf -> mptcp		111763						
ANR	113777	Symbol	run_as		111763						
ANR	113778	Symbol	EV_READ		111763						
ANR	113779	Symbol	conf -> mtu		111763						
ANR	113780	Symbol	conf -> plugin		111763						
ANR	113781	Symbol	listen_ctx -> loop		111763						
ANR	113782	Symbol	* server_host		111763						
ANR	113783	Symbol	& listen_ctx -> io		111763						
ANR	113784	Symbol	pid_path		111763						
ANR	113785	Symbol	key		111763						
ANR	113786	Symbol	atoi		111763						
ANR	113787	Symbol	conf -> method		111763						
ANR	113788	Symbol	c		111763						
ANR	113789	Symbol	conf -> reuse_port		111763						
ANR	113790	Symbol	create_and_bind		111763						
ANR	113791	Symbol	err		111763						
ANR	113792	Symbol	getopt_long		111763						
ANR	113793	Symbol	conf -> remote_addr [ i ] . host		111763						
ANR	113794	Symbol	remote_port		111763						
ANR	113795	Symbol	i		111763						
ANR	113796	Symbol	stat_update_cb		111763						
ANR	113797	Symbol	mptcp		111763						
ANR	113798	Symbol	DEFAULT_CONF_PATH		111763						
ANR	113799	Symbol	SIGABRT		111763						
ANR	113800	Symbol	& block_list_watcher		111763						
ANR	113801	Symbol	TCP_ONLY		111763						
ANR	113802	Symbol	conf -> timeout		111763						
ANR	113803	Symbol	verbose		111763						
ANR	113804	Symbol	plugin_port		111763						
ANR	113805	Symbol	plugin		111763						
ANR	113806	Symbol	* conf -> remote_addr		111763						
ANR	113807	Symbol	conf -> password		111763						
ANR	113808	Symbol	ss_malloc		111763						
ANR	113809	Symbol	conf -> remote_num		111763						
ANR	113810	Symbol	conf -> nofile		111763						
ANR	113811	Symbol	ipv6first		111763						
ANR	113812	Symbol	listen_ctx_list		111763						
ANR	113813	Symbol	UPDATE_INTERVAL		111763						
ANR	113814	Symbol	* argv		111763						
ANR	113815	Symbol	acl		111763						
ANR	113816	Symbol	listen		111763						
ANR	113817	Symbol	mode		111763						
ANR	113818	Symbol	conf -> remote_addr		111763						
ANR	113819	Symbol	strlen		111763						
ANR	113820	Symbol	long_options		111763						
ANR	113821	Symbol	loop		111763						
ANR	113822	Symbol	conf -> key		111763						
ANR	113823	Symbol	host		111763						
ANR	113824	Symbol	SIGPIPE		111763						
ANR	113825	Symbol	block_list_clear_cb		111763						
ANR	113826	Symbol	get_local_port		111763						
ANR	113827	Symbol	strcmp		111763						
ANR	113828	Symbol	NULL		111763						
ANR	113829	Symbol	EV_DEFAULT		111763						
ANR	113830	Symbol	server_num		111763						
ANR	113831	Symbol	buf_size		111763						
ANR	113832	Symbol	geteuid		111763						
ANR	113833	Symbol	mtu		111763						
ANR	113834	Symbol	signal_cb		111763						
ANR	113835	Symbol	crypto		111763						
ANR	113836	Symbol	& sigterm_watcher		111763						
ANR	113837	Symbol	iface		111763						
ANR	113838	Symbol	& stat_update_watcher		111763						
ANR	113839	Symbol	read_jconf		111763						
ANR	113840	Symbol	* listen_ctx		111763						
ANR	113841	Symbol	listen_ctx		111763						
ANR	113842	Symbol	port		111763						
ANR	113843	Symbol	SIGINT		111763						
ANR	113844	Symbol	conf -> mode		111763						
ANR	113845	Symbol	listen_ctx -> iface		111763						
ANR	113846	Symbol	nofile		111763						
ANR	113847	Symbol	reuse_port		111763						
ANR	113848	Symbol	& sigchld_watcher		111763						
ANR	113849	Symbol	& sigint_watcher		111763						
ANR	113850	Symbol	* conf		111763						
ANR	113851	Symbol	start_plugin		111763						
ANR	113852	Symbol	argv		111763						
ANR	113853	Symbol	bind_address		111763						
ANR	113854	Symbol	conf -> user		111763						
ANR	113855	Symbol	timeout		111763						
ANR	113856	Symbol	manager_address		111763						
ANR	113857	Symbol	plugin_opts		111763						
ANR	113858	Symbol	SIGTERM		111763						
ANR	113859	Symbol	conf -> nameserver		111763						
ANR	113860	Symbol	init_acl		111763						
ANR	113861	Symbol	argc		111763						
ANR	113862	Symbol	conf_path		111763						
ANR	113863	Symbol	crypto_init		111763						
ANR	113864	Symbol	server_host		111763						
ANR	113865	Symbol	no_delay		111763						
ANR	113866	Symbol	SIGCHLD		111763						
ANR	113867	Symbol	nameservers		111763						
ANR	113868	Symbol	* i		111763						
ANR	113869	Symbol	pid_flags		111763						
ANR	113870	Symbol	conf -> ipv6_first		111763						
ANR	113871	Symbol	listen_ctx -> timeout		111763						
ANR	113872	Symbol	listenfd		111763						
ANR	113873	Symbol	user		111763						
