command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	26786	File	data/converged/CVE-2017-15924_shadowsocks-libev/manager.c								
ANR	26787	DeclStmt									
ANR	26788	Decl							int	int	verbose
ANR	26789	DeclStmt									
ANR	26790	Decl							char	char *	executable
ANR	26791	DeclStmt									
ANR	26792	Decl							char	char *	working_dir
ANR	26793	DeclStmt									
ANR	26794	Decl							int	int	working_dir_size
ANR	26795	DeclStmt									
ANR	26796	Decl							struct cork_hash_table	struct cork_hash_table *	server_table
ANR	26797	Function	setnonblocking	75:0:1835:2011							
ANR	26798	FunctionDef	setnonblocking (int fd)		26797	0					
ANR	26799	CompoundStatement		77:0:1869:2011	26797	0					
ANR	26800	IdentifierDeclStatement	int flags ;	78:4:1875:1884	26797	0	True				
ANR	26801	IdentifierDecl	flags		26797	0					
ANR	26802	IdentifierDeclType	int		26797	0					
ANR	26803	Identifier	flags		26797	1					
ANR	26804	IfStatement	"if ( - 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) ) )"		26797	1					
ANR	26805	Condition	"- 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) )"	79:8:1894:1930	26797	0	True				
ANR	26806	EqualityExpression	"- 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) )"		26797	0		==			
ANR	26807	UnaryOperationExpression	- 1		26797	0					
ANR	26808	UnaryOperator	-		26797	0					
ANR	26809	PrimaryExpression	1		26797	1					
ANR	26810	AssignmentExpression	"flags = fcntl ( fd , F_GETFL , 0 )"		26797	1		=			
ANR	26811	Identifier	flags		26797	0					
ANR	26812	CallExpression	"fcntl ( fd , F_GETFL , 0 )"		26797	1					
ANR	26813	Callee	fcntl		26797	0					
ANR	26814	Identifier	fcntl		26797	0					
ANR	26815	ArgumentList	fd		26797	1					
ANR	26816	Argument	fd		26797	0					
ANR	26817	Identifier	fd		26797	0					
ANR	26818	Argument	F_GETFL		26797	1					
ANR	26819	Identifier	F_GETFL		26797	0					
ANR	26820	Argument	0		26797	2					
ANR	26821	PrimaryExpression	0		26797	0					
ANR	26822	CompoundStatement		3:47:63:63	26797	1					
ANR	26823	ExpressionStatement	flags = 0	80:8:1943:1952	26797	0	True				
ANR	26824	AssignmentExpression	flags = 0		26797	0		=			
ANR	26825	Identifier	flags		26797	0					
ANR	26826	PrimaryExpression	0		26797	1					
ANR	26827	ReturnStatement	"return fcntl ( fd , F_SETFL , flags | O_NONBLOCK ) ;"	82:4:1964:2009	26797	2	True				
ANR	26828	CallExpression	"fcntl ( fd , F_SETFL , flags | O_NONBLOCK )"		26797	0					
ANR	26829	Callee	fcntl		26797	0					
ANR	26830	Identifier	fcntl		26797	0					
ANR	26831	ArgumentList	fd		26797	1					
ANR	26832	Argument	fd		26797	0					
ANR	26833	Identifier	fd		26797	0					
ANR	26834	Argument	F_SETFL		26797	1					
ANR	26835	Identifier	F_SETFL		26797	0					
ANR	26836	Argument	flags | O_NONBLOCK		26797	2					
ANR	26837	InclusiveOrExpression	flags | O_NONBLOCK		26797	0		|			
ANR	26838	Identifier	flags		26797	0					
ANR	26839	Identifier	O_NONBLOCK		26797	1					
ANR	26840	ReturnType	static int		26797	1					
ANR	26841	Identifier	setnonblocking		26797	2					
ANR	26842	ParameterList	int fd		26797	3					
ANR	26843	Parameter	int fd	76:15:1861:1866	26797	0	True				
ANR	26844	ParameterType	int		26797	0					
ANR	26845	Identifier	fd		26797	1					
ANR	26846	CFGEntryNode	ENTRY		26797		True				
ANR	26847	CFGExitNode	EXIT		26797		True				
ANR	26848	Symbol	fcntl		26797						
ANR	26849	Symbol	O_NONBLOCK		26797						
ANR	26850	Symbol	flags		26797						
ANR	26851	Symbol	F_GETFL		26797						
ANR	26852	Symbol	F_SETFL		26797						
ANR	26853	Symbol	fd		26797						
ANR	26854	Function	destroy_server	85:0:2014:2328							
ANR	26855	FunctionDef	destroy_server (struct server * server)		26854	0					
ANR	26856	CompoundStatement		86:38:2064:2328	26854	0					
ANR	26857	IfStatement	if ( server -> method )		26854	0					
ANR	26858	Condition	server -> method	88:8:2134:2147	26854	0	True				
ANR	26859	PtrMemberAccess	server -> method		26854	0					
ANR	26860	Identifier	server		26854	0					
ANR	26861	Identifier	method		26854	1					
ANR	26862	ExpressionStatement	ss_free ( server -> method )	88:24:2150:2173	26854	1	True				
ANR	26863	CallExpression	ss_free ( server -> method )		26854	0					
ANR	26864	Callee	ss_free		26854	0					
ANR	26865	Identifier	ss_free		26854	0					
ANR	26866	ArgumentList	server -> method		26854	1					
ANR	26867	Argument	server -> method		26854	0					
ANR	26868	PtrMemberAccess	server -> method		26854	0					
ANR	26869	Identifier	server		26854	0					
ANR	26870	Identifier	method		26854	1					
ANR	26871	IfStatement	if ( server -> plugin )		26854	1					
ANR	26872	Condition	server -> plugin	89:8:2183:2196	26854	0	True				
ANR	26873	PtrMemberAccess	server -> plugin		26854	0					
ANR	26874	Identifier	server		26854	0					
ANR	26875	Identifier	plugin		26854	1					
ANR	26876	ExpressionStatement	ss_free ( server -> plugin )	89:24:2199:2222	26854	1	True				
ANR	26877	CallExpression	ss_free ( server -> plugin )		26854	0					
ANR	26878	Callee	ss_free		26854	0					
ANR	26879	Identifier	ss_free		26854	0					
ANR	26880	ArgumentList	server -> plugin		26854	1					
ANR	26881	Argument	server -> plugin		26854	0					
ANR	26882	PtrMemberAccess	server -> plugin		26854	0					
ANR	26883	Identifier	server		26854	0					
ANR	26884	Identifier	plugin		26854	1					
ANR	26885	IfStatement	if ( server -> plugin_opts )		26854	2					
ANR	26886	Condition	server -> plugin_opts	90:8:2232:2250	26854	0	True				
ANR	26887	PtrMemberAccess	server -> plugin_opts		26854	0					
ANR	26888	Identifier	server		26854	0					
ANR	26889	Identifier	plugin_opts		26854	1					
ANR	26890	ExpressionStatement	ss_free ( server -> plugin_opts )	90:29:2253:2281	26854	1	True				
ANR	26891	CallExpression	ss_free ( server -> plugin_opts )		26854	0					
ANR	26892	Callee	ss_free		26854	0					
ANR	26893	Identifier	ss_free		26854	0					
ANR	26894	ArgumentList	server -> plugin_opts		26854	1					
ANR	26895	Argument	server -> plugin_opts		26854	0					
ANR	26896	PtrMemberAccess	server -> plugin_opts		26854	0					
ANR	26897	Identifier	server		26854	0					
ANR	26898	Identifier	plugin_opts		26854	1					
ANR	26899	IfStatement	if ( server -> mode )		26854	3					
ANR	26900	Condition	server -> mode	91:8:2291:2302	26854	0	True				
ANR	26901	PtrMemberAccess	server -> mode		26854	0					
ANR	26902	Identifier	server		26854	0					
ANR	26903	Identifier	mode		26854	1					
ANR	26904	ExpressionStatement	ss_free ( server -> mode )	91:22:2305:2326	26854	1	True				
ANR	26905	CallExpression	ss_free ( server -> mode )		26854	0					
ANR	26906	Callee	ss_free		26854	0					
ANR	26907	Identifier	ss_free		26854	0					
ANR	26908	ArgumentList	server -> mode		26854	1					
ANR	26909	Argument	server -> mode		26854	0					
ANR	26910	PtrMemberAccess	server -> mode		26854	0					
ANR	26911	Identifier	server		26854	0					
ANR	26912	Identifier	mode		26854	1					
ANR	26913	ReturnType	static void		26854	1					
ANR	26914	Identifier	destroy_server		26854	2					
ANR	26915	ParameterList	struct server * server		26854	3					
ANR	26916	Parameter	struct server * server	86:15:2041:2061	26854	0	True				
ANR	26917	ParameterType	struct server *		26854	0					
ANR	26918	Identifier	server		26854	1					
ANR	26919	CFGEntryNode	ENTRY		26854		True				
ANR	26920	CFGExitNode	EXIT		26854		True				
ANR	26921	Symbol	server		26854						
ANR	26922	Symbol	* server		26854						
ANR	26923	Symbol	server -> plugin_opts		26854						
ANR	26924	Symbol	server -> mode		26854						
ANR	26925	Symbol	server -> method		26854						
ANR	26926	Symbol	server -> plugin		26854						
ANR	26927	Function	build_config	94:0:2331:3379							
ANR	26928	FunctionDef	"build_config (char * prefix , struct server * server)"		26927	0					
ANR	26929	CompoundStatement		96:0:2393:3379	26927	0					
ANR	26930	IdentifierDeclStatement	char * path = NULL ;	97:4:2399:2419	26927	0	True				
ANR	26931	IdentifierDecl	* path = NULL		26927	0					
ANR	26932	IdentifierDeclType	char *		26927	0					
ANR	26933	Identifier	path		26927	1					
ANR	26934	AssignmentExpression	* path = NULL		26927	2		=			
ANR	26935	Identifier	NULL		26927	0					
ANR	26936	Identifier	NULL		26927	1					
ANR	26937	IdentifierDeclStatement	int path_size = strlen ( prefix ) + strlen ( server -> port ) + 20 ;	98:4:2425:2483	26927	1	True				
ANR	26938	IdentifierDecl	path_size = strlen ( prefix ) + strlen ( server -> port ) + 20		26927	0					
ANR	26939	IdentifierDeclType	int		26927	0					
ANR	26940	Identifier	path_size		26927	1					
ANR	26941	AssignmentExpression	path_size = strlen ( prefix ) + strlen ( server -> port ) + 20		26927	2		=			
ANR	26942	Identifier	path_size		26927	0					
ANR	26943	AdditiveExpression	strlen ( prefix ) + strlen ( server -> port ) + 20		26927	1		+			
ANR	26944	CallExpression	strlen ( prefix )		26927	0					
ANR	26945	Callee	strlen		26927	0					
ANR	26946	Identifier	strlen		26927	0					
ANR	26947	ArgumentList	prefix		26927	1					
ANR	26948	Argument	prefix		26927	0					
ANR	26949	Identifier	prefix		26927	0					
ANR	26950	AdditiveExpression	strlen ( server -> port ) + 20		26927	1		+			
ANR	26951	CallExpression	strlen ( server -> port )		26927	0					
ANR	26952	Callee	strlen		26927	0					
ANR	26953	Identifier	strlen		26927	0					
ANR	26954	ArgumentList	server -> port		26927	1					
ANR	26955	Argument	server -> port		26927	0					
ANR	26956	PtrMemberAccess	server -> port		26927	0					
ANR	26957	Identifier	server		26927	0					
ANR	26958	Identifier	port		26927	1					
ANR	26959	PrimaryExpression	20		26927	1					
ANR	26960	ExpressionStatement	path = ss_malloc ( path_size )	100:4:2490:2517	26927	2	True				
ANR	26961	AssignmentExpression	path = ss_malloc ( path_size )		26927	0		=			
ANR	26962	Identifier	path		26927	0					
ANR	26963	CallExpression	ss_malloc ( path_size )		26927	1					
ANR	26964	Callee	ss_malloc		26927	0					
ANR	26965	Identifier	ss_malloc		26927	0					
ANR	26966	ArgumentList	path_size		26927	1					
ANR	26967	Argument	path_size		26927	0					
ANR	26968	Identifier	path_size		26927	0					
ANR	26969	ExpressionStatement	"snprintf ( path , path_size , ""%s/.shadowsocks_%s.conf"" , prefix , server -> port )"	101:4:2523:2597	26927	3	True				
ANR	26970	CallExpression	"snprintf ( path , path_size , ""%s/.shadowsocks_%s.conf"" , prefix , server -> port )"		26927	0					
ANR	26971	Callee	snprintf		26927	0					
ANR	26972	Identifier	snprintf		26927	0					
ANR	26973	ArgumentList	path		26927	1					
ANR	26974	Argument	path		26927	0					
ANR	26975	Identifier	path		26927	0					
ANR	26976	Argument	path_size		26927	1					
ANR	26977	Identifier	path_size		26927	0					
ANR	26978	Argument	"""%s/.shadowsocks_%s.conf"""		26927	2					
ANR	26979	PrimaryExpression	"""%s/.shadowsocks_%s.conf"""		26927	0					
ANR	26980	Argument	prefix		26927	3					
ANR	26981	Identifier	prefix		26927	0					
ANR	26982	Argument	server -> port		26927	4					
ANR	26983	PtrMemberAccess	server -> port		26927	0					
ANR	26984	Identifier	server		26927	0					
ANR	26985	Identifier	port		26927	1					
ANR	26986	IdentifierDeclStatement	"FILE * f = fopen ( path , ""w+"" ) ;"	102:4:2603:2630	26927	4	True				
ANR	26987	IdentifierDecl	"* f = fopen ( path , ""w+"" )"		26927	0					
ANR	26988	IdentifierDeclType	FILE *		26927	0					
ANR	26989	Identifier	f		26927	1					
ANR	26990	AssignmentExpression	"* f = fopen ( path , ""w+"" )"		26927	2		=			
ANR	26991	Identifier	f		26927	0					
ANR	26992	CallExpression	"fopen ( path , ""w+"" )"		26927	1					
ANR	26993	Callee	fopen		26927	0					
ANR	26994	Identifier	fopen		26927	0					
ANR	26995	ArgumentList	path		26927	1					
ANR	26996	Argument	path		26927	0					
ANR	26997	Identifier	path		26927	0					
ANR	26998	Argument	"""w+"""		26927	1					
ANR	26999	PrimaryExpression	"""w+"""		26927	0					
ANR	27000	IfStatement	if ( f == NULL )		26927	5					
ANR	27001	Condition	f == NULL	103:8:2640:2648	26927	0	True				
ANR	27002	EqualityExpression	f == NULL		26927	0		==			
ANR	27003	Identifier	f		26927	0					
ANR	27004	Identifier	NULL		26927	1					
ANR	27005	CompoundStatement		8:19:257:257	26927	1					
ANR	27006	IfStatement	if ( verbose )		26927	0					
ANR	27007	Condition	verbose	104:12:2665:2671	26927	0	True				
ANR	27008	Identifier	verbose		26927	0					
ANR	27009	CompoundStatement		9:21:280:280	26927	1					
ANR	27010	ExpressionStatement	"LOGE ( ""unable to open config file"" )"	105:12:2688:2722	26927	0	True				
ANR	27011	CallExpression	"LOGE ( ""unable to open config file"" )"		26927	0					
ANR	27012	Callee	LOGE		26927	0					
ANR	27013	Identifier	LOGE		26927	0					
ANR	27014	ArgumentList	"""unable to open config file"""		26927	1					
ANR	27015	Argument	"""unable to open config file"""		26927	0					
ANR	27016	PrimaryExpression	"""unable to open config file"""		26927	0					
ANR	27017	ExpressionStatement	ss_free ( path )	107:8:2742:2755	26927	1	True				
ANR	27018	CallExpression	ss_free ( path )		26927	0					
ANR	27019	Callee	ss_free		26927	0					
ANR	27020	Identifier	ss_free		26927	0					
ANR	27021	ArgumentList	path		26927	1					
ANR	27022	Argument	path		26927	0					
ANR	27023	Identifier	path		26927	0					
ANR	27024	ReturnStatement	return ;	108:8:2765:2771	26927	2	True				
ANR	27025	ExpressionStatement	"fprintf ( f , ""{\\n"" )"	110:4:2783:2800	26927	6	True				
ANR	27026	CallExpression	"fprintf ( f , ""{\\n"" )"		26927	0					
ANR	27027	Callee	fprintf		26927	0					
ANR	27028	Identifier	fprintf		26927	0					
ANR	27029	ArgumentList	f		26927	1					
ANR	27030	Argument	f		26927	0					
ANR	27031	Identifier	f		26927	0					
ANR	27032	Argument	"""{\\n"""		26927	1					
ANR	27033	PrimaryExpression	"""{\\n"""		26927	0					
ANR	27034	ExpressionStatement	"fprintf ( f , ""\\""server_port\\"":%d,\\n"" , atoi ( server -> port ) )"	111:4:2806:2861	26927	7	True				
ANR	27035	CallExpression	"fprintf ( f , ""\\""server_port\\"":%d,\\n"" , atoi ( server -> port ) )"		26927	0					
ANR	27036	Callee	fprintf		26927	0					
ANR	27037	Identifier	fprintf		26927	0					
ANR	27038	ArgumentList	f		26927	1					
ANR	27039	Argument	f		26927	0					
ANR	27040	Identifier	f		26927	0					
ANR	27041	Argument	"""\\""server_port\\"":%d,\\n"""		26927	1					
ANR	27042	PrimaryExpression	"""\\""server_port\\"":%d,\\n"""		26927	0					
ANR	27043	Argument	atoi ( server -> port )		26927	2					
ANR	27044	CallExpression	atoi ( server -> port )		26927	0					
ANR	27045	Callee	atoi		26927	0					
ANR	27046	Identifier	atoi		26927	0					
ANR	27047	ArgumentList	server -> port		26927	1					
ANR	27048	Argument	server -> port		26927	0					
ANR	27049	PtrMemberAccess	server -> port		26927	0					
ANR	27050	Identifier	server		26927	0					
ANR	27051	Identifier	port		26927	1					
ANR	27052	ExpressionStatement	"fprintf ( f , ""\\""password\\"":\\""%s\\"""" , server -> password )"	112:4:2867:2918	26927	8	True				
ANR	27053	CallExpression	"fprintf ( f , ""\\""password\\"":\\""%s\\"""" , server -> password )"		26927	0					
ANR	27054	Callee	fprintf		26927	0					
ANR	27055	Identifier	fprintf		26927	0					
ANR	27056	ArgumentList	f		26927	1					
ANR	27057	Argument	f		26927	0					
ANR	27058	Identifier	f		26927	0					
ANR	27059	Argument	"""\\""password\\"":\\""%s\\"""""		26927	1					
ANR	27060	PrimaryExpression	"""\\""password\\"":\\""%s\\"""""		26927	0					
ANR	27061	Argument	server -> password		26927	2					
ANR	27062	PtrMemberAccess	server -> password		26927	0					
ANR	27063	Identifier	server		26927	0					
ANR	27064	Identifier	password		26927	1					
ANR	27065	IfStatement	if ( server -> fast_open [ 0 ] )		26927	9					
ANR	27066	Condition	server -> fast_open [ 0 ]	113:8:2928:2947	26927	0	True				
ANR	27067	ArrayIndexing	server -> fast_open [ 0 ]		26927	0					
ANR	27068	PtrMemberAccess	server -> fast_open		26927	0					
ANR	27069	Identifier	server		26927	0					
ANR	27070	Identifier	fast_open		26927	1					
ANR	27071	PrimaryExpression	0		26927	1					
ANR	27072	ExpressionStatement	"fprintf ( f , "",\\n\\""fast_open\\"": %s"" , server -> fast_open )"	113:30:2950:3003	26927	1	True				
ANR	27073	CallExpression	"fprintf ( f , "",\\n\\""fast_open\\"": %s"" , server -> fast_open )"		26927	0					
ANR	27074	Callee	fprintf		26927	0					
ANR	27075	Identifier	fprintf		26927	0					
ANR	27076	ArgumentList	f		26927	1					
ANR	27077	Argument	f		26927	0					
ANR	27078	Identifier	f		26927	0					
ANR	27079	Argument	""",\\n\\""fast_open\\"": %s"""		26927	1					
ANR	27080	PrimaryExpression	""",\\n\\""fast_open\\"": %s"""		26927	0					
ANR	27081	Argument	server -> fast_open		26927	2					
ANR	27082	PtrMemberAccess	server -> fast_open		26927	0					
ANR	27083	Identifier	server		26927	0					
ANR	27084	Identifier	fast_open		26927	1					
ANR	27085	IfStatement	if ( server -> mode )		26927	10					
ANR	27086	Condition	server -> mode	114:8:3013:3024	26927	0	True				
ANR	27087	PtrMemberAccess	server -> mode		26927	0					
ANR	27088	Identifier	server		26927	0					
ANR	27089	Identifier	mode		26927	1					
ANR	27090	ExpressionStatement	"fprintf ( f , "",\\n\\""mode\\"":\\""%s\\"""" , server -> mode )"	114:24:3029:3075	26927	1	True				
ANR	27091	CallExpression	"fprintf ( f , "",\\n\\""mode\\"":\\""%s\\"""" , server -> mode )"		26927	0					
ANR	27092	Callee	fprintf		26927	0					
ANR	27093	Identifier	fprintf		26927	0					
ANR	27094	ArgumentList	f		26927	1					
ANR	27095	Argument	f		26927	0					
ANR	27096	Identifier	f		26927	0					
ANR	27097	Argument	""",\\n\\""mode\\"":\\""%s\\"""""		26927	1					
ANR	27098	PrimaryExpression	""",\\n\\""mode\\"":\\""%s\\"""""		26927	0					
ANR	27099	Argument	server -> mode		26927	2					
ANR	27100	PtrMemberAccess	server -> mode		26927	0					
ANR	27101	Identifier	server		26927	0					
ANR	27102	Identifier	mode		26927	1					
ANR	27103	IfStatement	if ( server -> method )		26927	11					
ANR	27104	Condition	server -> method	115:8:3085:3098	26927	0	True				
ANR	27105	PtrMemberAccess	server -> method		26927	0					
ANR	27106	Identifier	server		26927	0					
ANR	27107	Identifier	method		26927	1					
ANR	27108	ExpressionStatement	"fprintf ( f , "",\\n\\""method\\"":\\""%s\\"""" , server -> method )"	115:24:3101:3151	26927	1	True				
ANR	27109	CallExpression	"fprintf ( f , "",\\n\\""method\\"":\\""%s\\"""" , server -> method )"		26927	0					
ANR	27110	Callee	fprintf		26927	0					
ANR	27111	Identifier	fprintf		26927	0					
ANR	27112	ArgumentList	f		26927	1					
ANR	27113	Argument	f		26927	0					
ANR	27114	Identifier	f		26927	0					
ANR	27115	Argument	""",\\n\\""method\\"":\\""%s\\"""""		26927	1					
ANR	27116	PrimaryExpression	""",\\n\\""method\\"":\\""%s\\"""""		26927	0					
ANR	27117	Argument	server -> method		26927	2					
ANR	27118	PtrMemberAccess	server -> method		26927	0					
ANR	27119	Identifier	server		26927	0					
ANR	27120	Identifier	method		26927	1					
ANR	27121	IfStatement	if ( server -> plugin )		26927	12					
ANR	27122	Condition	server -> plugin	116:8:3161:3174	26927	0	True				
ANR	27123	PtrMemberAccess	server -> plugin		26927	0					
ANR	27124	Identifier	server		26927	0					
ANR	27125	Identifier	plugin		26927	1					
ANR	27126	ExpressionStatement	"fprintf ( f , "",\\n\\""plugin\\"":\\""%s\\"""" , server -> plugin )"	116:24:3177:3227	26927	1	True				
ANR	27127	CallExpression	"fprintf ( f , "",\\n\\""plugin\\"":\\""%s\\"""" , server -> plugin )"		26927	0					
ANR	27128	Callee	fprintf		26927	0					
ANR	27129	Identifier	fprintf		26927	0					
ANR	27130	ArgumentList	f		26927	1					
ANR	27131	Argument	f		26927	0					
ANR	27132	Identifier	f		26927	0					
ANR	27133	Argument	""",\\n\\""plugin\\"":\\""%s\\"""""		26927	1					
ANR	27134	PrimaryExpression	""",\\n\\""plugin\\"":\\""%s\\"""""		26927	0					
ANR	27135	Argument	server -> plugin		26927	2					
ANR	27136	PtrMemberAccess	server -> plugin		26927	0					
ANR	27137	Identifier	server		26927	0					
ANR	27138	Identifier	plugin		26927	1					
ANR	27139	IfStatement	if ( server -> plugin_opts )		26927	13					
ANR	27140	Condition	server -> plugin_opts	117:8:3237:3255	26927	0	True				
ANR	27141	PtrMemberAccess	server -> plugin_opts		26927	0					
ANR	27142	Identifier	server		26927	0					
ANR	27143	Identifier	plugin_opts		26927	1					
ANR	27144	ExpressionStatement	"fprintf ( f , "",\\n\\""plugin_opts\\"":\\""%s\\"""" , server -> plugin_opts )"	117:29:3258:3318	26927	1	True				
ANR	27145	CallExpression	"fprintf ( f , "",\\n\\""plugin_opts\\"":\\""%s\\"""" , server -> plugin_opts )"		26927	0					
ANR	27146	Callee	fprintf		26927	0					
ANR	27147	Identifier	fprintf		26927	0					
ANR	27148	ArgumentList	f		26927	1					
ANR	27149	Argument	f		26927	0					
ANR	27150	Identifier	f		26927	0					
ANR	27151	Argument	""",\\n\\""plugin_opts\\"":\\""%s\\"""""		26927	1					
ANR	27152	PrimaryExpression	""",\\n\\""plugin_opts\\"":\\""%s\\"""""		26927	0					
ANR	27153	Argument	server -> plugin_opts		26927	2					
ANR	27154	PtrMemberAccess	server -> plugin_opts		26927	0					
ANR	27155	Identifier	server		26927	0					
ANR	27156	Identifier	plugin_opts		26927	1					
ANR	27157	ExpressionStatement	"fprintf ( f , ""\\n}\\n"" )"	118:4:3324:3343	26927	14	True				
ANR	27158	CallExpression	"fprintf ( f , ""\\n}\\n"" )"		26927	0					
ANR	27159	Callee	fprintf		26927	0					
ANR	27160	Identifier	fprintf		26927	0					
ANR	27161	ArgumentList	f		26927	1					
ANR	27162	Argument	f		26927	0					
ANR	27163	Identifier	f		26927	0					
ANR	27164	Argument	"""\\n}\\n"""		26927	1					
ANR	27165	PrimaryExpression	"""\\n}\\n"""		26927	0					
ANR	27166	ExpressionStatement	fclose ( f )	119:4:3349:3358	26927	15	True				
ANR	27167	CallExpression	fclose ( f )		26927	0					
ANR	27168	Callee	fclose		26927	0					
ANR	27169	Identifier	fclose		26927	0					
ANR	27170	ArgumentList	f		26927	1					
ANR	27171	Argument	f		26927	0					
ANR	27172	Identifier	f		26927	0					
ANR	27173	ExpressionStatement	ss_free ( path )	120:4:3364:3377	26927	16	True				
ANR	27174	CallExpression	ss_free ( path )		26927	0					
ANR	27175	Callee	ss_free		26927	0					
ANR	27176	Identifier	ss_free		26927	0					
ANR	27177	ArgumentList	path		26927	1					
ANR	27178	Argument	path		26927	0					
ANR	27179	Identifier	path		26927	0					
ANR	27180	ReturnType	static void		26927	1					
ANR	27181	Identifier	build_config		26927	2					
ANR	27182	ParameterList	"char * prefix , struct server * server"		26927	3					
ANR	27183	Parameter	char * prefix	95:13:2356:2367	26927	0	True				
ANR	27184	ParameterType	char *		26927	0					
ANR	27185	Identifier	prefix		26927	1					
ANR	27186	Parameter	struct server * server	95:27:2370:2390	26927	1	True				
ANR	27187	ParameterType	struct server *		26927	0					
ANR	27188	Identifier	server		26927	1					
ANR	27189	CFGEntryNode	ENTRY		26927		True				
ANR	27190	CFGExitNode	EXIT		26927		True				
ANR	27191	Symbol	atoi		26927						
ANR	27192	Symbol	server		26927						
ANR	27193	Symbol	fopen		26927						
ANR	27194	Symbol	NULL		26927						
ANR	27195	Symbol	* server		26927						
ANR	27196	Symbol	path_size		26927						
ANR	27197	Symbol	server -> fast_open		26927						
ANR	27198	Symbol	prefix		26927						
ANR	27199	Symbol	f		26927						
ANR	27200	Symbol	server -> plugin_opts		26927						
ANR	27201	Symbol	server -> password		26927						
ANR	27202	Symbol	server -> method		26927						
ANR	27203	Symbol	verbose		26927						
ANR	27204	Symbol	path		26927						
ANR	27205	Symbol	strlen		26927						
ANR	27206	Symbol	* server -> fast_open		26927						
ANR	27207	Symbol	ss_malloc		26927						
ANR	27208	Symbol	server -> mode		26927						
ANR	27209	Symbol	* * server		26927						
ANR	27210	Symbol	server -> port		26927						
ANR	27211	Symbol	server -> plugin		26927						
ANR	27212	Function	construct_command_line	123:0:3382:6247							
ANR	27213	FunctionDef	"construct_command_line (struct manager_ctx * manager , struct server * server)"		27212	0					
ANR	27214	CompoundStatement		125:0:3471:6247	27212	0					
ANR	27215	Statement	static	126:4:3477:3482	27212	0	True				
ANR	27216	IdentifierDeclStatement	char cmd [ BUF_SIZE ] ;	126:11:3484:3502	27212	1	True				
ANR	27217	IdentifierDecl	cmd [ BUF_SIZE ]		27212	0					
ANR	27218	IdentifierDeclType	char [ BUF_SIZE ]		27212	0					
ANR	27219	Identifier	cmd		27212	1					
ANR	27220	Identifier	BUF_SIZE		27212	2					
ANR	27221	IdentifierDeclStatement	char * method = manager -> method ;	127:4:3508:3538	27212	2	True				
ANR	27222	IdentifierDecl	* method = manager -> method		27212	0					
ANR	27223	IdentifierDeclType	char *		27212	0					
ANR	27224	Identifier	method		27212	1					
ANR	27225	AssignmentExpression	* method = manager -> method		27212	2		=			
ANR	27226	Identifier	method		27212	0					
ANR	27227	PtrMemberAccess	manager -> method		27212	1					
ANR	27228	Identifier	manager		27212	0					
ANR	27229	Identifier	method		27212	1					
ANR	27230	IdentifierDeclStatement	int i ;	128:4:3544:3549	27212	3	True				
ANR	27231	IdentifierDecl	i		27212	0					
ANR	27232	IdentifierDeclType	int		27212	0					
ANR	27233	Identifier	i		27212	1					
ANR	27234	ExpressionStatement	"build_config ( working_dir , server )"	130:4:3556:3589	27212	4	True				
ANR	27235	CallExpression	"build_config ( working_dir , server )"		27212	0					
ANR	27236	Callee	build_config		27212	0					
ANR	27237	Identifier	build_config		27212	0					
ANR	27238	ArgumentList	working_dir		27212	1					
ANR	27239	Argument	working_dir		27212	0					
ANR	27240	Identifier	working_dir		27212	0					
ANR	27241	Argument	server		27212	1					
ANR	27242	Identifier	server		27212	0					
ANR	27243	IfStatement	if ( server -> method )		27212	5					
ANR	27244	Condition	server -> method	132:8:3600:3613	27212	0	True				
ANR	27245	PtrMemberAccess	server -> method		27212	0					
ANR	27246	Identifier	server		27212	0					
ANR	27247	Identifier	method		27212	1					
ANR	27248	ExpressionStatement	method = server -> method	132:24:3616:3639	27212	1	True				
ANR	27249	AssignmentExpression	method = server -> method		27212	0		=			
ANR	27250	Identifier	method		27212	0					
ANR	27251	PtrMemberAccess	server -> method		27212	1					
ANR	27252	Identifier	server		27212	0					
ANR	27253	Identifier	method		27212	1					
ANR	27254	ExpressionStatement	"memset ( cmd , 0 , BUF_SIZE )"	133:4:3645:3669	27212	6	True				
ANR	27255	CallExpression	"memset ( cmd , 0 , BUF_SIZE )"		27212	0					
ANR	27256	Callee	memset		27212	0					
ANR	27257	Identifier	memset		27212	0					
ANR	27258	ArgumentList	cmd		27212	1					
ANR	27259	Argument	cmd		27212	0					
ANR	27260	Identifier	cmd		27212	0					
ANR	27261	Argument	0		27212	1					
ANR	27262	PrimaryExpression	0		27212	0					
ANR	27263	Argument	BUF_SIZE		27212	2					
ANR	27264	Identifier	BUF_SIZE		27212	0					
ANR	27265	ExpressionStatement	"snprintf ( cmd , BUF_SIZE , ""%s -m %s --manager-address %s -f %s/.shadowsocks_%s.pid -c %s/.shadowsocks_%s.conf"" , executable , method , manager -> manager_address , working_dir , server -> port , working_dir , server -> port )"	134:4:3675:3923	27212	7	True				
ANR	27266	CallExpression	"snprintf ( cmd , BUF_SIZE , ""%s -m %s --manager-address %s -f %s/.shadowsocks_%s.pid -c %s/.shadowsocks_%s.conf"" , executable , method , manager -> manager_address , working_dir , server -> port , working_dir , server -> port )"		27212	0					
ANR	27267	Callee	snprintf		27212	0					
ANR	27268	Identifier	snprintf		27212	0					
ANR	27269	ArgumentList	cmd		27212	1					
ANR	27270	Argument	cmd		27212	0					
ANR	27271	Identifier	cmd		27212	0					
ANR	27272	Argument	BUF_SIZE		27212	1					
ANR	27273	Identifier	BUF_SIZE		27212	0					
ANR	27274	Argument	"""%s -m %s --manager-address %s -f %s/.shadowsocks_%s.pid -c %s/.shadowsocks_%s.conf"""		27212	2					
ANR	27275	PrimaryExpression	"""%s -m %s --manager-address %s -f %s/.shadowsocks_%s.pid -c %s/.shadowsocks_%s.conf"""		27212	0					
ANR	27276	Argument	executable		27212	3					
ANR	27277	Identifier	executable		27212	0					
ANR	27278	Argument	method		27212	4					
ANR	27279	Identifier	method		27212	0					
ANR	27280	Argument	manager -> manager_address		27212	5					
ANR	27281	PtrMemberAccess	manager -> manager_address		27212	0					
ANR	27282	Identifier	manager		27212	0					
ANR	27283	Identifier	manager_address		27212	1					
ANR	27284	Argument	working_dir		27212	6					
ANR	27285	Identifier	working_dir		27212	0					
ANR	27286	Argument	server -> port		27212	7					
ANR	27287	PtrMemberAccess	server -> port		27212	0					
ANR	27288	Identifier	server		27212	0					
ANR	27289	Identifier	port		27212	1					
ANR	27290	Argument	working_dir		27212	8					
ANR	27291	Identifier	working_dir		27212	0					
ANR	27292	Argument	server -> port		27212	9					
ANR	27293	PtrMemberAccess	server -> port		27212	0					
ANR	27294	Identifier	server		27212	0					
ANR	27295	Identifier	port		27212	1					
ANR	27296	IfStatement	if ( manager -> acl != NULL )		27212	8					
ANR	27297	Condition	manager -> acl != NULL	139:8:3934:3953	27212	0	True				
ANR	27298	EqualityExpression	manager -> acl != NULL		27212	0		!=			
ANR	27299	PtrMemberAccess	manager -> acl		27212	0					
ANR	27300	Identifier	manager		27212	0					
ANR	27301	Identifier	acl		27212	1					
ANR	27302	Identifier	NULL		27212	1					
ANR	27303	CompoundStatement		16:8:494:515	27212	1					
ANR	27304	IdentifierDeclStatement	int len = strlen ( cmd ) ;	140:8:3966:3987	27212	0	True				
ANR	27305	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27306	IdentifierDeclType	int		27212	0					
ANR	27307	Identifier	len		27212	1					
ANR	27308	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27309	Identifier	len		27212	0					
ANR	27310	CallExpression	strlen ( cmd )		27212	1					
ANR	27311	Callee	strlen		27212	0					
ANR	27312	Identifier	strlen		27212	0					
ANR	27313	ArgumentList	cmd		27212	1					
ANR	27314	Argument	cmd		27212	0					
ANR	27315	Identifier	cmd		27212	0					
ANR	27316	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" --acl %s"" , manager -> acl )"	141:8:3997:4059	27212	1	True				
ANR	27317	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" --acl %s"" , manager -> acl )"		27212	0					
ANR	27318	Callee	snprintf		27212	0					
ANR	27319	Identifier	snprintf		27212	0					
ANR	27320	ArgumentList	cmd + len		27212	1					
ANR	27321	Argument	cmd + len		27212	0					
ANR	27322	AdditiveExpression	cmd + len		27212	0		+			
ANR	27323	Identifier	cmd		27212	0					
ANR	27324	Identifier	len		27212	1					
ANR	27325	Argument	BUF_SIZE - len		27212	1					
ANR	27326	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27327	Identifier	BUF_SIZE		27212	0					
ANR	27328	Identifier	len		27212	1					
ANR	27329	Argument	""" --acl %s"""		27212	2					
ANR	27330	PrimaryExpression	""" --acl %s"""		27212	0					
ANR	27331	Argument	manager -> acl		27212	3					
ANR	27332	PtrMemberAccess	manager -> acl		27212	0					
ANR	27333	Identifier	manager		27212	0					
ANR	27334	Identifier	acl		27212	1					
ANR	27335	IfStatement	if ( manager -> timeout != NULL )		27212	9					
ANR	27336	Condition	manager -> timeout != NULL	143:8:4075:4098	27212	0	True				
ANR	27337	EqualityExpression	manager -> timeout != NULL		27212	0		!=			
ANR	27338	PtrMemberAccess	manager -> timeout		27212	0					
ANR	27339	Identifier	manager		27212	0					
ANR	27340	Identifier	timeout		27212	1					
ANR	27341	Identifier	NULL		27212	1					
ANR	27342	CompoundStatement		20:8:639:660	27212	1					
ANR	27343	IdentifierDeclStatement	int len = strlen ( cmd ) ;	144:8:4111:4132	27212	0	True				
ANR	27344	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27345	IdentifierDeclType	int		27212	0					
ANR	27346	Identifier	len		27212	1					
ANR	27347	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27348	Identifier	len		27212	0					
ANR	27349	CallExpression	strlen ( cmd )		27212	1					
ANR	27350	Callee	strlen		27212	0					
ANR	27351	Identifier	strlen		27212	0					
ANR	27352	ArgumentList	cmd		27212	1					
ANR	27353	Argument	cmd		27212	0					
ANR	27354	Identifier	cmd		27212	0					
ANR	27355	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -t %s"" , manager -> timeout )"	145:8:4142:4205	27212	1	True				
ANR	27356	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -t %s"" , manager -> timeout )"		27212	0					
ANR	27357	Callee	snprintf		27212	0					
ANR	27358	Identifier	snprintf		27212	0					
ANR	27359	ArgumentList	cmd + len		27212	1					
ANR	27360	Argument	cmd + len		27212	0					
ANR	27361	AdditiveExpression	cmd + len		27212	0		+			
ANR	27362	Identifier	cmd		27212	0					
ANR	27363	Identifier	len		27212	1					
ANR	27364	Argument	BUF_SIZE - len		27212	1					
ANR	27365	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27366	Identifier	BUF_SIZE		27212	0					
ANR	27367	Identifier	len		27212	1					
ANR	27368	Argument	""" -t %s"""		27212	2					
ANR	27369	PrimaryExpression	""" -t %s"""		27212	0					
ANR	27370	Argument	manager -> timeout		27212	3					
ANR	27371	PtrMemberAccess	manager -> timeout		27212	0					
ANR	27372	Identifier	manager		27212	0					
ANR	27373	Identifier	timeout		27212	1					
ANR	27374	IfStatement	if ( manager -> nofile )		27212	10					
ANR	27375	Condition	manager -> nofile	148:8:4243:4257	27212	0	True				
ANR	27376	PtrMemberAccess	manager -> nofile		27212	0					
ANR	27377	Identifier	manager		27212	0					
ANR	27378	Identifier	nofile		27212	1					
ANR	27379	CompoundStatement		25:8:798:819	27212	1					
ANR	27380	IdentifierDeclStatement	int len = strlen ( cmd ) ;	149:8:4270:4291	27212	0	True				
ANR	27381	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27382	IdentifierDeclType	int		27212	0					
ANR	27383	Identifier	len		27212	1					
ANR	27384	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27385	Identifier	len		27212	0					
ANR	27386	CallExpression	strlen ( cmd )		27212	1					
ANR	27387	Callee	strlen		27212	0					
ANR	27388	Identifier	strlen		27212	0					
ANR	27389	ArgumentList	cmd		27212	1					
ANR	27390	Argument	cmd		27212	0					
ANR	27391	Identifier	cmd		27212	0					
ANR	27392	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -n %d"" , manager -> nofile )"	150:8:4301:4363	27212	1	True				
ANR	27393	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -n %d"" , manager -> nofile )"		27212	0					
ANR	27394	Callee	snprintf		27212	0					
ANR	27395	Identifier	snprintf		27212	0					
ANR	27396	ArgumentList	cmd + len		27212	1					
ANR	27397	Argument	cmd + len		27212	0					
ANR	27398	AdditiveExpression	cmd + len		27212	0		+			
ANR	27399	Identifier	cmd		27212	0					
ANR	27400	Identifier	len		27212	1					
ANR	27401	Argument	BUF_SIZE - len		27212	1					
ANR	27402	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27403	Identifier	BUF_SIZE		27212	0					
ANR	27404	Identifier	len		27212	1					
ANR	27405	Argument	""" -n %d"""		27212	2					
ANR	27406	PrimaryExpression	""" -n %d"""		27212	0					
ANR	27407	Argument	manager -> nofile		27212	3					
ANR	27408	PtrMemberAccess	manager -> nofile		27212	0					
ANR	27409	Identifier	manager		27212	0					
ANR	27410	Identifier	nofile		27212	1					
ANR	27411	IfStatement	if ( manager -> user != NULL )		27212	11					
ANR	27412	Condition	manager -> user != NULL	153:8:4386:4406	27212	0	True				
ANR	27413	EqualityExpression	manager -> user != NULL		27212	0		!=			
ANR	27414	PtrMemberAccess	manager -> user		27212	0					
ANR	27415	Identifier	manager		27212	0					
ANR	27416	Identifier	user		27212	1					
ANR	27417	Identifier	NULL		27212	1					
ANR	27418	CompoundStatement		30:8:947:968	27212	1					
ANR	27419	IdentifierDeclStatement	int len = strlen ( cmd ) ;	154:8:4419:4440	27212	0	True				
ANR	27420	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27421	IdentifierDeclType	int		27212	0					
ANR	27422	Identifier	len		27212	1					
ANR	27423	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27424	Identifier	len		27212	0					
ANR	27425	CallExpression	strlen ( cmd )		27212	1					
ANR	27426	Callee	strlen		27212	0					
ANR	27427	Identifier	strlen		27212	0					
ANR	27428	ArgumentList	cmd		27212	1					
ANR	27429	Argument	cmd		27212	0					
ANR	27430	Identifier	cmd		27212	0					
ANR	27431	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -a %s"" , manager -> user )"	155:8:4450:4510	27212	1	True				
ANR	27432	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -a %s"" , manager -> user )"		27212	0					
ANR	27433	Callee	snprintf		27212	0					
ANR	27434	Identifier	snprintf		27212	0					
ANR	27435	ArgumentList	cmd + len		27212	1					
ANR	27436	Argument	cmd + len		27212	0					
ANR	27437	AdditiveExpression	cmd + len		27212	0		+			
ANR	27438	Identifier	cmd		27212	0					
ANR	27439	Identifier	len		27212	1					
ANR	27440	Argument	BUF_SIZE - len		27212	1					
ANR	27441	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27442	Identifier	BUF_SIZE		27212	0					
ANR	27443	Identifier	len		27212	1					
ANR	27444	Argument	""" -a %s"""		27212	2					
ANR	27445	PrimaryExpression	""" -a %s"""		27212	0					
ANR	27446	Argument	manager -> user		27212	3					
ANR	27447	PtrMemberAccess	manager -> user		27212	0					
ANR	27448	Identifier	manager		27212	0					
ANR	27449	Identifier	user		27212	1					
ANR	27450	IfStatement	if ( manager -> verbose )		27212	12					
ANR	27451	Condition	manager -> verbose	157:8:4526:4541	27212	0	True				
ANR	27452	PtrMemberAccess	manager -> verbose		27212	0					
ANR	27453	Identifier	manager		27212	0					
ANR	27454	Identifier	verbose		27212	1					
ANR	27455	CompoundStatement		34:8:1082:1103	27212	1					
ANR	27456	IdentifierDeclStatement	int len = strlen ( cmd ) ;	158:8:4554:4575	27212	0	True				
ANR	27457	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27458	IdentifierDeclType	int		27212	0					
ANR	27459	Identifier	len		27212	1					
ANR	27460	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27461	Identifier	len		27212	0					
ANR	27462	CallExpression	strlen ( cmd )		27212	1					
ANR	27463	Callee	strlen		27212	0					
ANR	27464	Identifier	strlen		27212	0					
ANR	27465	ArgumentList	cmd		27212	1					
ANR	27466	Argument	cmd		27212	0					
ANR	27467	Identifier	cmd		27212	0					
ANR	27468	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -v"" )"	159:8:4585:4627	27212	1	True				
ANR	27469	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -v"" )"		27212	0					
ANR	27470	Callee	snprintf		27212	0					
ANR	27471	Identifier	snprintf		27212	0					
ANR	27472	ArgumentList	cmd + len		27212	1					
ANR	27473	Argument	cmd + len		27212	0					
ANR	27474	AdditiveExpression	cmd + len		27212	0		+			
ANR	27475	Identifier	cmd		27212	0					
ANR	27476	Identifier	len		27212	1					
ANR	27477	Argument	BUF_SIZE - len		27212	1					
ANR	27478	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27479	Identifier	BUF_SIZE		27212	0					
ANR	27480	Identifier	len		27212	1					
ANR	27481	Argument	""" -v"""		27212	2					
ANR	27482	PrimaryExpression	""" -v"""		27212	0					
ANR	27483	IfStatement	if ( server -> mode == NULL && manager -> mode == UDP_ONLY )		27212	13					
ANR	27484	Condition	server -> mode == NULL && manager -> mode == UDP_ONLY	161:8:4643:4691	27212	0	True				
ANR	27485	AndExpression	server -> mode == NULL && manager -> mode == UDP_ONLY		27212	0		&&			
ANR	27486	EqualityExpression	server -> mode == NULL		27212	0		==			
ANR	27487	PtrMemberAccess	server -> mode		27212	0					
ANR	27488	Identifier	server		27212	0					
ANR	27489	Identifier	mode		27212	1					
ANR	27490	Identifier	NULL		27212	1					
ANR	27491	EqualityExpression	manager -> mode == UDP_ONLY		27212	1		==			
ANR	27492	PtrMemberAccess	manager -> mode		27212	0					
ANR	27493	Identifier	manager		27212	0					
ANR	27494	Identifier	mode		27212	1					
ANR	27495	Identifier	UDP_ONLY		27212	1					
ANR	27496	CompoundStatement		38:8:1232:1253	27212	1					
ANR	27497	IdentifierDeclStatement	int len = strlen ( cmd ) ;	162:8:4704:4725	27212	0	True				
ANR	27498	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27499	IdentifierDeclType	int		27212	0					
ANR	27500	Identifier	len		27212	1					
ANR	27501	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27502	Identifier	len		27212	0					
ANR	27503	CallExpression	strlen ( cmd )		27212	1					
ANR	27504	Callee	strlen		27212	0					
ANR	27505	Identifier	strlen		27212	0					
ANR	27506	ArgumentList	cmd		27212	1					
ANR	27507	Argument	cmd		27212	0					
ANR	27508	Identifier	cmd		27212	0					
ANR	27509	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -U"" )"	163:8:4735:4777	27212	1	True				
ANR	27510	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -U"" )"		27212	0					
ANR	27511	Callee	snprintf		27212	0					
ANR	27512	Identifier	snprintf		27212	0					
ANR	27513	ArgumentList	cmd + len		27212	1					
ANR	27514	Argument	cmd + len		27212	0					
ANR	27515	AdditiveExpression	cmd + len		27212	0		+			
ANR	27516	Identifier	cmd		27212	0					
ANR	27517	Identifier	len		27212	1					
ANR	27518	Argument	BUF_SIZE - len		27212	1					
ANR	27519	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27520	Identifier	BUF_SIZE		27212	0					
ANR	27521	Identifier	len		27212	1					
ANR	27522	Argument	""" -U"""		27212	2					
ANR	27523	PrimaryExpression	""" -U"""		27212	0					
ANR	27524	IfStatement	if ( server -> mode == NULL && manager -> mode == TCP_AND_UDP )		27212	14					
ANR	27525	Condition	server -> mode == NULL && manager -> mode == TCP_AND_UDP	165:8:4793:4844	27212	0	True				
ANR	27526	AndExpression	server -> mode == NULL && manager -> mode == TCP_AND_UDP		27212	0		&&			
ANR	27527	EqualityExpression	server -> mode == NULL		27212	0		==			
ANR	27528	PtrMemberAccess	server -> mode		27212	0					
ANR	27529	Identifier	server		27212	0					
ANR	27530	Identifier	mode		27212	1					
ANR	27531	Identifier	NULL		27212	1					
ANR	27532	EqualityExpression	manager -> mode == TCP_AND_UDP		27212	1		==			
ANR	27533	PtrMemberAccess	manager -> mode		27212	0					
ANR	27534	Identifier	manager		27212	0					
ANR	27535	Identifier	mode		27212	1					
ANR	27536	Identifier	TCP_AND_UDP		27212	1					
ANR	27537	CompoundStatement		42:8:1385:1406	27212	1					
ANR	27538	IdentifierDeclStatement	int len = strlen ( cmd ) ;	166:8:4857:4878	27212	0	True				
ANR	27539	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27540	IdentifierDeclType	int		27212	0					
ANR	27541	Identifier	len		27212	1					
ANR	27542	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27543	Identifier	len		27212	0					
ANR	27544	CallExpression	strlen ( cmd )		27212	1					
ANR	27545	Callee	strlen		27212	0					
ANR	27546	Identifier	strlen		27212	0					
ANR	27547	ArgumentList	cmd		27212	1					
ANR	27548	Argument	cmd		27212	0					
ANR	27549	Identifier	cmd		27212	0					
ANR	27550	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -u"" )"	167:8:4888:4930	27212	1	True				
ANR	27551	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -u"" )"		27212	0					
ANR	27552	Callee	snprintf		27212	0					
ANR	27553	Identifier	snprintf		27212	0					
ANR	27554	ArgumentList	cmd + len		27212	1					
ANR	27555	Argument	cmd + len		27212	0					
ANR	27556	AdditiveExpression	cmd + len		27212	0		+			
ANR	27557	Identifier	cmd		27212	0					
ANR	27558	Identifier	len		27212	1					
ANR	27559	Argument	BUF_SIZE - len		27212	1					
ANR	27560	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27561	Identifier	BUF_SIZE		27212	0					
ANR	27562	Identifier	len		27212	1					
ANR	27563	Argument	""" -u"""		27212	2					
ANR	27564	PrimaryExpression	""" -u"""		27212	0					
ANR	27565	IfStatement	if ( server -> fast_open [ 0 ] == 0 && manager -> fast_open )		27212	15					
ANR	27566	Condition	server -> fast_open [ 0 ] == 0 && manager -> fast_open	169:8:4946:4992	27212	0	True				
ANR	27567	AndExpression	server -> fast_open [ 0 ] == 0 && manager -> fast_open		27212	0		&&			
ANR	27568	EqualityExpression	server -> fast_open [ 0 ] == 0		27212	0		==			
ANR	27569	ArrayIndexing	server -> fast_open [ 0 ]		27212	0					
ANR	27570	PtrMemberAccess	server -> fast_open		27212	0					
ANR	27571	Identifier	server		27212	0					
ANR	27572	Identifier	fast_open		27212	1					
ANR	27573	PrimaryExpression	0		27212	1					
ANR	27574	PrimaryExpression	0		27212	1					
ANR	27575	PtrMemberAccess	manager -> fast_open		27212	1					
ANR	27576	Identifier	manager		27212	0					
ANR	27577	Identifier	fast_open		27212	1					
ANR	27578	CompoundStatement		46:8:1533:1554	27212	1					
ANR	27579	IdentifierDeclStatement	int len = strlen ( cmd ) ;	170:8:5005:5026	27212	0	True				
ANR	27580	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27581	IdentifierDeclType	int		27212	0					
ANR	27582	Identifier	len		27212	1					
ANR	27583	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27584	Identifier	len		27212	0					
ANR	27585	CallExpression	strlen ( cmd )		27212	1					
ANR	27586	Callee	strlen		27212	0					
ANR	27587	Identifier	strlen		27212	0					
ANR	27588	ArgumentList	cmd		27212	1					
ANR	27589	Argument	cmd		27212	0					
ANR	27590	Identifier	cmd		27212	0					
ANR	27591	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" --fast-open"" )"	171:8:5036:5087	27212	1	True				
ANR	27592	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" --fast-open"" )"		27212	0					
ANR	27593	Callee	snprintf		27212	0					
ANR	27594	Identifier	snprintf		27212	0					
ANR	27595	ArgumentList	cmd + len		27212	1					
ANR	27596	Argument	cmd + len		27212	0					
ANR	27597	AdditiveExpression	cmd + len		27212	0		+			
ANR	27598	Identifier	cmd		27212	0					
ANR	27599	Identifier	len		27212	1					
ANR	27600	Argument	BUF_SIZE - len		27212	1					
ANR	27601	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27602	Identifier	BUF_SIZE		27212	0					
ANR	27603	Identifier	len		27212	1					
ANR	27604	Argument	""" --fast-open"""		27212	2					
ANR	27605	PrimaryExpression	""" --fast-open"""		27212	0					
ANR	27606	IfStatement	if ( manager -> ipv6first )		27212	16					
ANR	27607	Condition	manager -> ipv6first	173:8:5103:5120	27212	0	True				
ANR	27608	PtrMemberAccess	manager -> ipv6first		27212	0					
ANR	27609	Identifier	manager		27212	0					
ANR	27610	Identifier	ipv6first		27212	1					
ANR	27611	CompoundStatement		50:8:1661:1682	27212	1					
ANR	27612	IdentifierDeclStatement	int len = strlen ( cmd ) ;	174:8:5133:5154	27212	0	True				
ANR	27613	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27614	IdentifierDeclType	int		27212	0					
ANR	27615	Identifier	len		27212	1					
ANR	27616	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27617	Identifier	len		27212	0					
ANR	27618	CallExpression	strlen ( cmd )		27212	1					
ANR	27619	Callee	strlen		27212	0					
ANR	27620	Identifier	strlen		27212	0					
ANR	27621	ArgumentList	cmd		27212	1					
ANR	27622	Argument	cmd		27212	0					
ANR	27623	Identifier	cmd		27212	0					
ANR	27624	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -6"" )"	175:8:5164:5206	27212	1	True				
ANR	27625	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -6"" )"		27212	0					
ANR	27626	Callee	snprintf		27212	0					
ANR	27627	Identifier	snprintf		27212	0					
ANR	27628	ArgumentList	cmd + len		27212	1					
ANR	27629	Argument	cmd + len		27212	0					
ANR	27630	AdditiveExpression	cmd + len		27212	0		+			
ANR	27631	Identifier	cmd		27212	0					
ANR	27632	Identifier	len		27212	1					
ANR	27633	Argument	BUF_SIZE - len		27212	1					
ANR	27634	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27635	Identifier	BUF_SIZE		27212	0					
ANR	27636	Identifier	len		27212	1					
ANR	27637	Argument	""" -6"""		27212	2					
ANR	27638	PrimaryExpression	""" -6"""		27212	0					
ANR	27639	IfStatement	if ( manager -> mtu )		27212	17					
ANR	27640	Condition	manager -> mtu	177:8:5222:5233	27212	0	True				
ANR	27641	PtrMemberAccess	manager -> mtu		27212	0					
ANR	27642	Identifier	manager		27212	0					
ANR	27643	Identifier	mtu		27212	1					
ANR	27644	CompoundStatement		54:8:1774:1795	27212	1					
ANR	27645	IdentifierDeclStatement	int len = strlen ( cmd ) ;	178:8:5246:5267	27212	0	True				
ANR	27646	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27647	IdentifierDeclType	int		27212	0					
ANR	27648	Identifier	len		27212	1					
ANR	27649	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27650	Identifier	len		27212	0					
ANR	27651	CallExpression	strlen ( cmd )		27212	1					
ANR	27652	Callee	strlen		27212	0					
ANR	27653	Identifier	strlen		27212	0					
ANR	27654	ArgumentList	cmd		27212	1					
ANR	27655	Argument	cmd		27212	0					
ANR	27656	Identifier	cmd		27212	0					
ANR	27657	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" --mtu %d"" , manager -> mtu )"	179:8:5277:5339	27212	1	True				
ANR	27658	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" --mtu %d"" , manager -> mtu )"		27212	0					
ANR	27659	Callee	snprintf		27212	0					
ANR	27660	Identifier	snprintf		27212	0					
ANR	27661	ArgumentList	cmd + len		27212	1					
ANR	27662	Argument	cmd + len		27212	0					
ANR	27663	AdditiveExpression	cmd + len		27212	0		+			
ANR	27664	Identifier	cmd		27212	0					
ANR	27665	Identifier	len		27212	1					
ANR	27666	Argument	BUF_SIZE - len		27212	1					
ANR	27667	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27668	Identifier	BUF_SIZE		27212	0					
ANR	27669	Identifier	len		27212	1					
ANR	27670	Argument	""" --mtu %d"""		27212	2					
ANR	27671	PrimaryExpression	""" --mtu %d"""		27212	0					
ANR	27672	Argument	manager -> mtu		27212	3					
ANR	27673	PtrMemberAccess	manager -> mtu		27212	0					
ANR	27674	Identifier	manager		27212	0					
ANR	27675	Identifier	mtu		27212	1					
ANR	27676	IfStatement	if ( server -> plugin == NULL && manager -> plugin )		27212	18					
ANR	27677	Condition	server -> plugin == NULL && manager -> plugin	181:8:5355:5395	27212	0	True				
ANR	27678	AndExpression	server -> plugin == NULL && manager -> plugin		27212	0		&&			
ANR	27679	EqualityExpression	server -> plugin == NULL		27212	0		==			
ANR	27680	PtrMemberAccess	server -> plugin		27212	0					
ANR	27681	Identifier	server		27212	0					
ANR	27682	Identifier	plugin		27212	1					
ANR	27683	Identifier	NULL		27212	1					
ANR	27684	PtrMemberAccess	manager -> plugin		27212	1					
ANR	27685	Identifier	manager		27212	0					
ANR	27686	Identifier	plugin		27212	1					
ANR	27687	CompoundStatement		58:8:1936:1957	27212	1					
ANR	27688	IdentifierDeclStatement	int len = strlen ( cmd ) ;	182:8:5408:5429	27212	0	True				
ANR	27689	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27690	IdentifierDeclType	int		27212	0					
ANR	27691	Identifier	len		27212	1					
ANR	27692	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27693	Identifier	len		27212	0					
ANR	27694	CallExpression	strlen ( cmd )		27212	1					
ANR	27695	Callee	strlen		27212	0					
ANR	27696	Identifier	strlen		27212	0					
ANR	27697	ArgumentList	cmd		27212	1					
ANR	27698	Argument	cmd		27212	0					
ANR	27699	Identifier	cmd		27212	0					
ANR	27700	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" --plugin \\""%s\\"""" , manager -> plugin )"	183:8:5439:5511	27212	1	True				
ANR	27701	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" --plugin \\""%s\\"""" , manager -> plugin )"		27212	0					
ANR	27702	Callee	snprintf		27212	0					
ANR	27703	Identifier	snprintf		27212	0					
ANR	27704	ArgumentList	cmd + len		27212	1					
ANR	27705	Argument	cmd + len		27212	0					
ANR	27706	AdditiveExpression	cmd + len		27212	0		+			
ANR	27707	Identifier	cmd		27212	0					
ANR	27708	Identifier	len		27212	1					
ANR	27709	Argument	BUF_SIZE - len		27212	1					
ANR	27710	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27711	Identifier	BUF_SIZE		27212	0					
ANR	27712	Identifier	len		27212	1					
ANR	27713	Argument	""" --plugin \\""%s\\"""""		27212	2					
ANR	27714	PrimaryExpression	""" --plugin \\""%s\\"""""		27212	0					
ANR	27715	Argument	manager -> plugin		27212	3					
ANR	27716	PtrMemberAccess	manager -> plugin		27212	0					
ANR	27717	Identifier	manager		27212	0					
ANR	27718	Identifier	plugin		27212	1					
ANR	27719	IfStatement	if ( server -> plugin_opts == NULL && manager -> plugin_opts )		27212	19					
ANR	27720	Condition	server -> plugin_opts == NULL && manager -> plugin_opts	185:8:5527:5577	27212	0	True				
ANR	27721	AndExpression	server -> plugin_opts == NULL && manager -> plugin_opts		27212	0		&&			
ANR	27722	EqualityExpression	server -> plugin_opts == NULL		27212	0		==			
ANR	27723	PtrMemberAccess	server -> plugin_opts		27212	0					
ANR	27724	Identifier	server		27212	0					
ANR	27725	Identifier	plugin_opts		27212	1					
ANR	27726	Identifier	NULL		27212	1					
ANR	27727	PtrMemberAccess	manager -> plugin_opts		27212	1					
ANR	27728	Identifier	manager		27212	0					
ANR	27729	Identifier	plugin_opts		27212	1					
ANR	27730	CompoundStatement		62:8:2118:2139	27212	1					
ANR	27731	IdentifierDeclStatement	int len = strlen ( cmd ) ;	186:8:5590:5611	27212	0	True				
ANR	27732	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27733	IdentifierDeclType	int		27212	0					
ANR	27734	Identifier	len		27212	1					
ANR	27735	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27736	Identifier	len		27212	0					
ANR	27737	CallExpression	strlen ( cmd )		27212	1					
ANR	27738	Callee	strlen		27212	0					
ANR	27739	Identifier	strlen		27212	0					
ANR	27740	ArgumentList	cmd		27212	1					
ANR	27741	Argument	cmd		27212	0					
ANR	27742	Identifier	cmd		27212	0					
ANR	27743	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" --plugin-opts \\""%s\\"""" , manager -> plugin_opts )"	187:8:5621:5703	27212	1	True				
ANR	27744	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" --plugin-opts \\""%s\\"""" , manager -> plugin_opts )"		27212	0					
ANR	27745	Callee	snprintf		27212	0					
ANR	27746	Identifier	snprintf		27212	0					
ANR	27747	ArgumentList	cmd + len		27212	1					
ANR	27748	Argument	cmd + len		27212	0					
ANR	27749	AdditiveExpression	cmd + len		27212	0		+			
ANR	27750	Identifier	cmd		27212	0					
ANR	27751	Identifier	len		27212	1					
ANR	27752	Argument	BUF_SIZE - len		27212	1					
ANR	27753	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27754	Identifier	BUF_SIZE		27212	0					
ANR	27755	Identifier	len		27212	1					
ANR	27756	Argument	""" --plugin-opts \\""%s\\"""""		27212	2					
ANR	27757	PrimaryExpression	""" --plugin-opts \\""%s\\"""""		27212	0					
ANR	27758	Argument	manager -> plugin_opts		27212	3					
ANR	27759	PtrMemberAccess	manager -> plugin_opts		27212	0					
ANR	27760	Identifier	manager		27212	0					
ANR	27761	Identifier	plugin_opts		27212	1					
ANR	27762	ForStatement	for ( i = 0 ; i < manager -> nameserver_num ; i ++ )		27212	20					
ANR	27763	ForInit	i = 0 ;	189:9:5720:5725	27212	0	True				
ANR	27764	AssignmentExpression	i = 0		27212	0		=			
ANR	27765	Identifier	i		27212	0					
ANR	27766	PrimaryExpression	0		27212	1					
ANR	27767	Condition	i < manager -> nameserver_num	189:16:5727:5753	27212	1	True				
ANR	27768	RelationalExpression	i < manager -> nameserver_num		27212	0		<			
ANR	27769	Identifier	i		27212	0					
ANR	27770	PtrMemberAccess	manager -> nameserver_num		27212	1					
ANR	27771	Identifier	manager		27212	0					
ANR	27772	Identifier	nameserver_num		27212	1					
ANR	27773	PostIncDecOperationExpression	i ++	189:45:5756:5758	27212	2	True				
ANR	27774	Identifier	i		27212	0					
ANR	27775	IncDec	++		27212	1					
ANR	27776	CompoundStatement		66:8:2299:2320	27212	3					
ANR	27777	IdentifierDeclStatement	int len = strlen ( cmd ) ;	190:8:5771:5792	27212	0	True				
ANR	27778	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27779	IdentifierDeclType	int		27212	0					
ANR	27780	Identifier	len		27212	1					
ANR	27781	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27782	Identifier	len		27212	0					
ANR	27783	CallExpression	strlen ( cmd )		27212	1					
ANR	27784	Callee	strlen		27212	0					
ANR	27785	Identifier	strlen		27212	0					
ANR	27786	ArgumentList	cmd		27212	1					
ANR	27787	Argument	cmd		27212	0					
ANR	27788	Identifier	cmd		27212	0					
ANR	27789	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -d %s"" , manager -> nameservers [ i ] )"	191:8:5802:5872	27212	1	True				
ANR	27790	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -d %s"" , manager -> nameservers [ i ] )"		27212	0					
ANR	27791	Callee	snprintf		27212	0					
ANR	27792	Identifier	snprintf		27212	0					
ANR	27793	ArgumentList	cmd + len		27212	1					
ANR	27794	Argument	cmd + len		27212	0					
ANR	27795	AdditiveExpression	cmd + len		27212	0		+			
ANR	27796	Identifier	cmd		27212	0					
ANR	27797	Identifier	len		27212	1					
ANR	27798	Argument	BUF_SIZE - len		27212	1					
ANR	27799	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27800	Identifier	BUF_SIZE		27212	0					
ANR	27801	Identifier	len		27212	1					
ANR	27802	Argument	""" -d %s"""		27212	2					
ANR	27803	PrimaryExpression	""" -d %s"""		27212	0					
ANR	27804	Argument	manager -> nameservers [ i ]		27212	3					
ANR	27805	ArrayIndexing	manager -> nameservers [ i ]		27212	0					
ANR	27806	PtrMemberAccess	manager -> nameservers		27212	0					
ANR	27807	Identifier	manager		27212	0					
ANR	27808	Identifier	nameservers		27212	1					
ANR	27809	Identifier	i		27212	1					
ANR	27810	ForStatement	for ( i = 0 ; i < manager -> host_num ; i ++ )		27212	21					
ANR	27811	ForInit	i = 0 ;	193:9:5889:5894	27212	0	True				
ANR	27812	AssignmentExpression	i = 0		27212	0		=			
ANR	27813	Identifier	i		27212	0					
ANR	27814	PrimaryExpression	0		27212	1					
ANR	27815	Condition	i < manager -> host_num	193:16:5896:5916	27212	1	True				
ANR	27816	RelationalExpression	i < manager -> host_num		27212	0		<			
ANR	27817	Identifier	i		27212	0					
ANR	27818	PtrMemberAccess	manager -> host_num		27212	1					
ANR	27819	Identifier	manager		27212	0					
ANR	27820	Identifier	host_num		27212	1					
ANR	27821	PostIncDecOperationExpression	i ++	193:39:5919:5921	27212	2	True				
ANR	27822	Identifier	i		27212	0					
ANR	27823	IncDec	++		27212	1					
ANR	27824	CompoundStatement		70:8:2462:2483	27212	3					
ANR	27825	IdentifierDeclStatement	int len = strlen ( cmd ) ;	194:8:5934:5955	27212	0	True				
ANR	27826	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27827	IdentifierDeclType	int		27212	0					
ANR	27828	Identifier	len		27212	1					
ANR	27829	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27830	Identifier	len		27212	0					
ANR	27831	CallExpression	strlen ( cmd )		27212	1					
ANR	27832	Callee	strlen		27212	0					
ANR	27833	Identifier	strlen		27212	0					
ANR	27834	ArgumentList	cmd		27212	1					
ANR	27835	Argument	cmd		27212	0					
ANR	27836	Identifier	cmd		27212	0					
ANR	27837	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -s %s"" , manager -> hosts [ i ] )"	195:8:5965:6029	27212	1	True				
ANR	27838	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -s %s"" , manager -> hosts [ i ] )"		27212	0					
ANR	27839	Callee	snprintf		27212	0					
ANR	27840	Identifier	snprintf		27212	0					
ANR	27841	ArgumentList	cmd + len		27212	1					
ANR	27842	Argument	cmd + len		27212	0					
ANR	27843	AdditiveExpression	cmd + len		27212	0		+			
ANR	27844	Identifier	cmd		27212	0					
ANR	27845	Identifier	len		27212	1					
ANR	27846	Argument	BUF_SIZE - len		27212	1					
ANR	27847	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27848	Identifier	BUF_SIZE		27212	0					
ANR	27849	Identifier	len		27212	1					
ANR	27850	Argument	""" -s %s"""		27212	2					
ANR	27851	PrimaryExpression	""" -s %s"""		27212	0					
ANR	27852	Argument	manager -> hosts [ i ]		27212	3					
ANR	27853	ArrayIndexing	manager -> hosts [ i ]		27212	0					
ANR	27854	PtrMemberAccess	manager -> hosts		27212	0					
ANR	27855	Identifier	manager		27212	0					
ANR	27856	Identifier	hosts		27212	1					
ANR	27857	Identifier	i		27212	1					
ANR	27858	CompoundStatement		75:8:2611:2632	27212	22					
ANR	27859	IdentifierDeclStatement	int len = strlen ( cmd ) ;	199:8:6083:6104	27212	0	True				
ANR	27860	IdentifierDecl	len = strlen ( cmd )		27212	0					
ANR	27861	IdentifierDeclType	int		27212	0					
ANR	27862	Identifier	len		27212	1					
ANR	27863	AssignmentExpression	len = strlen ( cmd )		27212	2		=			
ANR	27864	Identifier	len		27212	0					
ANR	27865	CallExpression	strlen ( cmd )		27212	1					
ANR	27866	Callee	strlen		27212	0					
ANR	27867	Identifier	strlen		27212	0					
ANR	27868	ArgumentList	cmd		27212	1					
ANR	27869	Argument	cmd		27212	0					
ANR	27870	Identifier	cmd		27212	0					
ANR	27871	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" --reuse-port"" )"	200:8:6114:6166	27212	1	True				
ANR	27872	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" --reuse-port"" )"		27212	0					
ANR	27873	Callee	snprintf		27212	0					
ANR	27874	Identifier	snprintf		27212	0					
ANR	27875	ArgumentList	cmd + len		27212	1					
ANR	27876	Argument	cmd + len		27212	0					
ANR	27877	AdditiveExpression	cmd + len		27212	0		+			
ANR	27878	Identifier	cmd		27212	0					
ANR	27879	Identifier	len		27212	1					
ANR	27880	Argument	BUF_SIZE - len		27212	1					
ANR	27881	AdditiveExpression	BUF_SIZE - len		27212	0		-			
ANR	27882	Identifier	BUF_SIZE		27212	0					
ANR	27883	Identifier	len		27212	1					
ANR	27884	Argument	""" --reuse-port"""		27212	2					
ANR	27885	PrimaryExpression	""" --reuse-port"""		27212	0					
ANR	27886	IfStatement	if ( verbose )		27212	23					
ANR	27887	Condition	verbose	203:8:6183:6189	27212	0	True				
ANR	27888	Identifier	verbose		27212	0					
ANR	27889	CompoundStatement		79:17:2720:2720	27212	1					
ANR	27890	ExpressionStatement	"LOGI ( ""cmd: %s"" , cmd )"	204:8:6202:6222	27212	0	True				
ANR	27891	CallExpression	"LOGI ( ""cmd: %s"" , cmd )"		27212	0					
ANR	27892	Callee	LOGI		27212	0					
ANR	27893	Identifier	LOGI		27212	0					
ANR	27894	ArgumentList	"""cmd: %s"""		27212	1					
ANR	27895	Argument	"""cmd: %s"""		27212	0					
ANR	27896	PrimaryExpression	"""cmd: %s"""		27212	0					
ANR	27897	Argument	cmd		27212	1					
ANR	27898	Identifier	cmd		27212	0					
ANR	27899	ReturnStatement	return cmd ;	207:4:6235:6245	27212	24	True				
ANR	27900	Identifier	cmd		27212	0					
ANR	27901	ReturnType	static char *		27212	1					
ANR	27902	Identifier	construct_command_line		27212	2					
ANR	27903	ParameterList	"struct manager_ctx * manager , struct server * server"		27212	3					
ANR	27904	Parameter	struct manager_ctx * manager	124:23:3419:3445	27212	0	True				
ANR	27905	ParameterType	struct manager_ctx *		27212	0					
ANR	27906	Identifier	manager		27212	1					
ANR	27907	Parameter	struct server * server	124:52:3448:3468	27212	1	True				
ANR	27908	ParameterType	struct server *		27212	0					
ANR	27909	Identifier	server		27212	1					
ANR	27910	CFGEntryNode	ENTRY		27212		True				
ANR	27911	CFGExitNode	EXIT		27212		True				
ANR	27912	Symbol	manager -> acl		27212						
ANR	27913	Symbol	server		27212						
ANR	27914	Symbol	* server		27212						
ANR	27915	Symbol	manager -> manager_address		27212						
ANR	27916	Symbol	UDP_ONLY		27212						
ANR	27917	Symbol	server -> fast_open		27212						
ANR	27918	Symbol	working_dir		27212						
ANR	27919	Symbol	server -> plugin_opts		27212						
ANR	27920	Symbol	manager -> user		27212						
ANR	27921	Symbol	manager -> nofile		27212						
ANR	27922	Symbol	manager -> ipv6first		27212						
ANR	27923	Symbol	strlen		27212						
ANR	27924	Symbol	manager -> plugin		27212						
ANR	27925	Symbol	manager -> nameservers		27212						
ANR	27926	Symbol	len		27212						
ANR	27927	Symbol	* server -> fast_open		27212						
ANR	27928	Symbol	manager -> mode		27212						
ANR	27929	Symbol	* manager -> hosts		27212						
ANR	27930	Symbol	manager -> host_num		27212						
ANR	27931	Symbol	server -> port		27212						
ANR	27932	Symbol	* * manager		27212						
ANR	27933	Symbol	server -> plugin		27212						
ANR	27934	Symbol	* manager		27212						
ANR	27935	Symbol	manager -> verbose		27212						
ANR	27936	Symbol	NULL		27212						
ANR	27937	Symbol	manager		27212						
ANR	27938	Symbol	method		27212						
ANR	27939	Symbol	manager -> method		27212						
ANR	27940	Symbol	manager -> hosts		27212						
ANR	27941	Symbol	i		27212						
ANR	27942	Symbol	manager -> fast_open		27212						
ANR	27943	Symbol	server -> method		27212						
ANR	27944	Symbol	executable		27212						
ANR	27945	Symbol	manager -> plugin_opts		27212						
ANR	27946	Symbol	verbose		27212						
ANR	27947	Symbol	manager -> nameserver_num		27212						
ANR	27948	Symbol	* manager -> nameservers		27212						
ANR	27949	Symbol	* i		27212						
ANR	27950	Symbol	TCP_AND_UDP		27212						
ANR	27951	Symbol	BUF_SIZE		27212						
ANR	27952	Symbol	server -> mode		27212						
ANR	27953	Symbol	* * server		27212						
ANR	27954	Symbol	cmd		27212						
ANR	27955	Symbol	manager -> mtu		27212						
ANR	27956	Symbol	manager -> timeout		27212						
ANR	27957	Function	get_data	210:0:6250:6478							
ANR	27958	FunctionDef	"get_data (char * buf , int len)"		27957	0					
ANR	27959	CompoundStatement		212:0:6293:6478	27957	0					
ANR	27960	IdentifierDeclStatement	char * data ;	213:4:6299:6309	27957	0	True				
ANR	27961	IdentifierDecl	* data		27957	0					
ANR	27962	IdentifierDeclType	char *		27957	0					
ANR	27963	Identifier	data		27957	1					
ANR	27964	IdentifierDeclStatement	int pos = 0 ;	214:4:6315:6326	27957	1	True				
ANR	27965	IdentifierDecl	pos = 0		27957	0					
ANR	27966	IdentifierDeclType	int		27957	0					
ANR	27967	Identifier	pos		27957	1					
ANR	27968	AssignmentExpression	pos = 0		27957	2		=			
ANR	27969	Identifier	pos		27957	0					
ANR	27970	PrimaryExpression	0		27957	1					
ANR	27971	WhileStatement	while ( pos < len && buf [ pos ] != '{' )		27957	2					
ANR	27972	Condition	pos < len && buf [ pos ] != '{'	216:11:6340:6367	27957	0	True				
ANR	27973	AndExpression	pos < len && buf [ pos ] != '{'		27957	0		&&			
ANR	27974	RelationalExpression	pos < len		27957	0		<			
ANR	27975	Identifier	pos		27957	0					
ANR	27976	Identifier	len		27957	1					
ANR	27977	EqualityExpression	buf [ pos ] != '{'		27957	1		!=			
ANR	27978	ArrayIndexing	buf [ pos ]		27957	0					
ANR	27979	Identifier	buf		27957	0					
ANR	27980	Identifier	pos		27957	1					
ANR	27981	PrimaryExpression	'{'		27957	1					
ANR	27982	ExpressionStatement	pos ++	217:8:6378:6383	27957	1	True				
ANR	27983	PostIncDecOperationExpression	pos ++		27957	0					
ANR	27984	Identifier	pos		27957	0					
ANR	27985	IncDec	++		27957	1					
ANR	27986	IfStatement	if ( pos == len )		27957	3					
ANR	27987	Condition	pos == len	218:8:6393:6402	27957	0	True				
ANR	27988	EqualityExpression	pos == len		27957	0		==			
ANR	27989	Identifier	pos		27957	0					
ANR	27990	Identifier	len		27957	1					
ANR	27991	CompoundStatement		7:20:111:111	27957	1					
ANR	27992	ReturnStatement	return NULL ;	219:8:6415:6426	27957	0	True				
ANR	27993	Identifier	NULL		27957	0					
ANR	27994	ExpressionStatement	data = buf + pos - 1	221:4:6438:6458	27957	4	True				
ANR	27995	AssignmentExpression	data = buf + pos - 1		27957	0		=			
ANR	27996	Identifier	data		27957	0					
ANR	27997	AdditiveExpression	buf + pos - 1		27957	1		+			
ANR	27998	Identifier	buf		27957	0					
ANR	27999	AdditiveExpression	pos - 1		27957	1		-			
ANR	28000	Identifier	pos		27957	0					
ANR	28001	PrimaryExpression	1		27957	1					
ANR	28002	ReturnStatement	return data ;	223:4:6465:6476	27957	5	True				
ANR	28003	Identifier	data		27957	0					
ANR	28004	ReturnType	static char *		27957	1					
ANR	28005	Identifier	get_data		27957	2					
ANR	28006	ParameterList	"char * buf , int len"		27957	3					
ANR	28007	Parameter	char * buf	211:9:6273:6281	27957	0	True				
ANR	28008	ParameterType	char *		27957	0					
ANR	28009	Identifier	buf		27957	1					
ANR	28010	Parameter	int len	211:20:6284:6290	27957	1	True				
ANR	28011	ParameterType	int		27957	0					
ANR	28012	Identifier	len		27957	1					
ANR	28013	CFGEntryNode	ENTRY		27957		True				
ANR	28014	CFGExitNode	EXIT		27957		True				
ANR	28015	Symbol	buf		27957						
ANR	28016	Symbol	* buf		27957						
ANR	28017	Symbol	NULL		27957						
ANR	28018	Symbol	len		27957						
ANR	28019	Symbol	data		27957						
ANR	28020	Symbol	pos		27957						
ANR	28021	Symbol	* pos		27957						
ANR	28022	Function	get_action	226:0:6481:6847							
ANR	28023	FunctionDef	"get_action (char * buf , int len)"		28022	0					
ANR	28024	CompoundStatement		228:0:6526:6847	28022	0					
ANR	28025	IdentifierDeclStatement	char * action ;	229:4:6532:6544	28022	0	True				
ANR	28026	IdentifierDecl	* action		28022	0					
ANR	28027	IdentifierDeclType	char *		28022	0					
ANR	28028	Identifier	action		28022	1					
ANR	28029	IdentifierDeclStatement	int pos = 0 ;	230:4:6550:6561	28022	1	True				
ANR	28030	IdentifierDecl	pos = 0		28022	0					
ANR	28031	IdentifierDeclType	int		28022	0					
ANR	28032	Identifier	pos		28022	1					
ANR	28033	AssignmentExpression	pos = 0		28022	2		=			
ANR	28034	Identifier	pos		28022	0					
ANR	28035	PrimaryExpression	0		28022	1					
ANR	28036	WhileStatement	while ( pos < len && isspace ( ( unsigned char ) buf [ pos ] ) )		28022	2					
ANR	28037	Condition	pos < len && isspace ( ( unsigned char ) buf [ pos ] )	232:11:6575:6619	28022	0	True				
ANR	28038	AndExpression	pos < len && isspace ( ( unsigned char ) buf [ pos ] )		28022	0		&&			
ANR	28039	RelationalExpression	pos < len		28022	0		<			
ANR	28040	Identifier	pos		28022	0					
ANR	28041	Identifier	len		28022	1					
ANR	28042	CallExpression	isspace ( ( unsigned char ) buf [ pos ] )		28022	1					
ANR	28043	Callee	isspace		28022	0					
ANR	28044	Identifier	isspace		28022	0					
ANR	28045	ArgumentList	( unsigned char ) buf [ pos ]		28022	1					
ANR	28046	Argument	( unsigned char ) buf [ pos ]		28022	0					
ANR	28047	CastExpression	( unsigned char ) buf [ pos ]		28022	0					
ANR	28048	CastTarget	unsigned char		28022	0					
ANR	28049	ArrayIndexing	buf [ pos ]		28022	1					
ANR	28050	Identifier	buf		28022	0					
ANR	28051	Identifier	pos		28022	1					
ANR	28052	ExpressionStatement	pos ++	233:8:6630:6635	28022	1	True				
ANR	28053	PostIncDecOperationExpression	pos ++		28022	0					
ANR	28054	Identifier	pos		28022	0					
ANR	28055	IncDec	++		28022	1					
ANR	28056	IfStatement	if ( pos == len )		28022	3					
ANR	28057	Condition	pos == len	234:8:6645:6654	28022	0	True				
ANR	28058	EqualityExpression	pos == len		28022	0		==			
ANR	28059	Identifier	pos		28022	0					
ANR	28060	Identifier	len		28022	1					
ANR	28061	CompoundStatement		7:20:130:130	28022	1					
ANR	28062	ReturnStatement	return NULL ;	235:8:6667:6678	28022	0	True				
ANR	28063	Identifier	NULL		28022	0					
ANR	28064	ExpressionStatement	action = buf + pos	237:4:6690:6708	28022	4	True				
ANR	28065	AssignmentExpression	action = buf + pos		28022	0		=			
ANR	28066	Identifier	action		28022	0					
ANR	28067	AdditiveExpression	buf + pos		28022	1		+			
ANR	28068	Identifier	buf		28022	0					
ANR	28069	Identifier	pos		28022	1					
ANR	28070	WhileStatement	while ( pos < len && ( ! isspace ( ( unsigned char ) buf [ pos ] ) && buf [ pos ] != ':' ) )		28022	5					
ANR	28071	Condition	pos < len && ( ! isspace ( ( unsigned char ) buf [ pos ] ) && buf [ pos ] != ':' )	239:11:6722:6788	28022	0	True				
ANR	28072	AndExpression	pos < len && ( ! isspace ( ( unsigned char ) buf [ pos ] ) && buf [ pos ] != ':' )		28022	0		&&			
ANR	28073	RelationalExpression	pos < len		28022	0		<			
ANR	28074	Identifier	pos		28022	0					
ANR	28075	Identifier	len		28022	1					
ANR	28076	AndExpression	! isspace ( ( unsigned char ) buf [ pos ] ) && buf [ pos ] != ':'		28022	1		&&			
ANR	28077	UnaryOperationExpression	! isspace ( ( unsigned char ) buf [ pos ] )		28022	0					
ANR	28078	UnaryOperator	!		28022	0					
ANR	28079	CallExpression	isspace ( ( unsigned char ) buf [ pos ] )		28022	1					
ANR	28080	Callee	isspace		28022	0					
ANR	28081	Identifier	isspace		28022	0					
ANR	28082	ArgumentList	( unsigned char ) buf [ pos ]		28022	1					
ANR	28083	Argument	( unsigned char ) buf [ pos ]		28022	0					
ANR	28084	CastExpression	( unsigned char ) buf [ pos ]		28022	0					
ANR	28085	CastTarget	unsigned char		28022	0					
ANR	28086	ArrayIndexing	buf [ pos ]		28022	1					
ANR	28087	Identifier	buf		28022	0					
ANR	28088	Identifier	pos		28022	1					
ANR	28089	EqualityExpression	buf [ pos ] != ':'		28022	1		!=			
ANR	28090	ArrayIndexing	buf [ pos ]		28022	0					
ANR	28091	Identifier	buf		28022	0					
ANR	28092	Identifier	pos		28022	1					
ANR	28093	PrimaryExpression	':'		28022	1					
ANR	28094	ExpressionStatement	pos ++	240:8:6799:6804	28022	1	True				
ANR	28095	PostIncDecOperationExpression	pos ++		28022	0					
ANR	28096	Identifier	pos		28022	0					
ANR	28097	IncDec	++		28022	1					
ANR	28098	ExpressionStatement	buf [ pos ] = '\\0'	241:4:6810:6825	28022	6	True				
ANR	28099	AssignmentExpression	buf [ pos ] = '\\0'		28022	0		=			
ANR	28100	ArrayIndexing	buf [ pos ]		28022	0					
ANR	28101	Identifier	buf		28022	0					
ANR	28102	Identifier	pos		28022	1					
ANR	28103	PrimaryExpression	'\\0'		28022	1					
ANR	28104	ReturnStatement	return action ;	243:4:6832:6845	28022	7	True				
ANR	28105	Identifier	action		28022	0					
ANR	28106	ReturnType	static char *		28022	1					
ANR	28107	Identifier	get_action		28022	2					
ANR	28108	ParameterList	"char * buf , int len"		28022	3					
ANR	28109	Parameter	char * buf	227:11:6506:6514	28022	0	True				
ANR	28110	ParameterType	char *		28022	0					
ANR	28111	Identifier	buf		28022	1					
ANR	28112	Parameter	int len	227:22:6517:6523	28022	1	True				
ANR	28113	ParameterType	int		28022	0					
ANR	28114	Identifier	len		28022	1					
ANR	28115	CFGEntryNode	ENTRY		28022		True				
ANR	28116	CFGExitNode	EXIT		28022		True				
ANR	28117	Symbol	buf		28022						
ANR	28118	Symbol	* buf		28022						
ANR	28119	Symbol	NULL		28022						
ANR	28120	Symbol	len		28022						
ANR	28121	Symbol	pos		28022						
ANR	28122	Symbol	isspace		28022						
ANR	28123	Symbol	action		28022						
ANR	28124	Symbol	* pos		28022						
ANR	28125	Function	get_server	246:0:6850:9262							
ANR	28126	FunctionDef	"get_server (char * buf , int len)"		28125	0					
ANR	28127	CompoundStatement		248:0:6904:9262	28125	0					
ANR	28128	IdentifierDeclStatement	"char * data = get_data ( buf , len ) ;"	249:4:6910:6941	28125	0	True				
ANR	28129	IdentifierDecl	"* data = get_data ( buf , len )"		28125	0					
ANR	28130	IdentifierDeclType	char *		28125	0					
ANR	28131	Identifier	data		28125	1					
ANR	28132	AssignmentExpression	"* data = get_data ( buf , len )"		28125	2		=			
ANR	28133	Identifier	data		28125	0					
ANR	28134	CallExpression	"get_data ( buf , len )"		28125	1					
ANR	28135	Callee	get_data		28125	0					
ANR	28136	Identifier	get_data		28125	0					
ANR	28137	ArgumentList	buf		28125	1					
ANR	28138	Argument	buf		28125	0					
ANR	28139	Identifier	buf		28125	0					
ANR	28140	Argument	len		28125	1					
ANR	28141	Identifier	len		28125	0					
ANR	28142	IdentifierDeclStatement	char error_buf [ 512 ] ;	250:4:6947:6966	28125	1	True				
ANR	28143	IdentifierDecl	error_buf [ 512 ]		28125	0					
ANR	28144	IdentifierDeclType	char [ 512 ]		28125	0					
ANR	28145	Identifier	error_buf		28125	1					
ANR	28146	PrimaryExpression	512		28125	2					
ANR	28147	IfStatement	if ( data == NULL )		28125	2					
ANR	28148	Condition	data == NULL	252:8:6977:6988	28125	0	True				
ANR	28149	EqualityExpression	data == NULL		28125	0		==			
ANR	28150	Identifier	data		28125	0					
ANR	28151	Identifier	NULL		28125	1					
ANR	28152	CompoundStatement		5:22:86:86	28125	1					
ANR	28153	ExpressionStatement	"LOGE ( ""No data found"" )"	253:8:7001:7022	28125	0	True				
ANR	28154	CallExpression	"LOGE ( ""No data found"" )"		28125	0					
ANR	28155	Callee	LOGE		28125	0					
ANR	28156	Identifier	LOGE		28125	0					
ANR	28157	ArgumentList	"""No data found"""		28125	1					
ANR	28158	Argument	"""No data found"""		28125	0					
ANR	28159	PrimaryExpression	"""No data found"""		28125	0					
ANR	28160	ReturnStatement	return NULL ;	254:8:7032:7043	28125	1	True				
ANR	28161	Identifier	NULL		28125	0					
ANR	28162	IdentifierDeclStatement	json_settings settings = { 0 } ;	257:4:7056:7086	28125	3	True				
ANR	28163	IdentifierDecl	settings = { 0 }		28125	0					
ANR	28164	IdentifierDeclType	json_settings		28125	0					
ANR	28165	Identifier	settings		28125	1					
ANR	28166	AssignmentExpression	settings = { 0 }		28125	2		=			
ANR	28167	Identifier	settings		28125	0					
ANR	28168	InitializerList	0		28125	1					
ANR	28169	PrimaryExpression	0		28125	0					
ANR	28170	IdentifierDeclStatement	"json_value * obj = json_parse_ex ( & settings , data , strlen ( data ) , error_buf ) ;"	258:4:7092:7172	28125	4	True				
ANR	28171	IdentifierDecl	"* obj = json_parse_ex ( & settings , data , strlen ( data ) , error_buf )"		28125	0					
ANR	28172	IdentifierDeclType	json_value *		28125	0					
ANR	28173	Identifier	obj		28125	1					
ANR	28174	AssignmentExpression	"* obj = json_parse_ex ( & settings , data , strlen ( data ) , error_buf )"		28125	2		=			
ANR	28175	Identifier	obj		28125	0					
ANR	28176	CallExpression	"json_parse_ex ( & settings , data , strlen ( data ) , error_buf )"		28125	1					
ANR	28177	Callee	json_parse_ex		28125	0					
ANR	28178	Identifier	json_parse_ex		28125	0					
ANR	28179	ArgumentList	& settings		28125	1					
ANR	28180	Argument	& settings		28125	0					
ANR	28181	UnaryOperationExpression	& settings		28125	0					
ANR	28182	UnaryOperator	&		28125	0					
ANR	28183	Identifier	settings		28125	1					
ANR	28184	Argument	data		28125	1					
ANR	28185	Identifier	data		28125	0					
ANR	28186	Argument	strlen ( data )		28125	2					
ANR	28187	CallExpression	strlen ( data )		28125	0					
ANR	28188	Callee	strlen		28125	0					
ANR	28189	Identifier	strlen		28125	0					
ANR	28190	ArgumentList	data		28125	1					
ANR	28191	Argument	data		28125	0					
ANR	28192	Identifier	data		28125	0					
ANR	28193	Argument	error_buf		28125	3					
ANR	28194	Identifier	error_buf		28125	0					
ANR	28195	IfStatement	if ( obj == NULL )		28125	5					
ANR	28196	Condition	obj == NULL	260:8:7183:7193	28125	0	True				
ANR	28197	EqualityExpression	obj == NULL		28125	0		==			
ANR	28198	Identifier	obj		28125	0					
ANR	28199	Identifier	NULL		28125	1					
ANR	28200	CompoundStatement		13:21:291:291	28125	1					
ANR	28201	ExpressionStatement	"LOGE ( ""%s"" , error_buf )"	261:8:7206:7227	28125	0	True				
ANR	28202	CallExpression	"LOGE ( ""%s"" , error_buf )"		28125	0					
ANR	28203	Callee	LOGE		28125	0					
ANR	28204	Identifier	LOGE		28125	0					
ANR	28205	ArgumentList	"""%s"""		28125	1					
ANR	28206	Argument	"""%s"""		28125	0					
ANR	28207	PrimaryExpression	"""%s"""		28125	0					
ANR	28208	Argument	error_buf		28125	1					
ANR	28209	Identifier	error_buf		28125	0					
ANR	28210	ReturnStatement	return NULL ;	262:8:7237:7248	28125	1	True				
ANR	28211	Identifier	NULL		28125	0					
ANR	28212	IdentifierDeclStatement	struct server * server = ss_malloc ( sizeof ( struct server ) ) ;	265:4:7261:7317	28125	6	True				
ANR	28213	IdentifierDecl	* server = ss_malloc ( sizeof ( struct server ) )		28125	0					
ANR	28214	IdentifierDeclType	struct server *		28125	0					
ANR	28215	Identifier	server		28125	1					
ANR	28216	AssignmentExpression	* server = ss_malloc ( sizeof ( struct server ) )		28125	2		=			
ANR	28217	Identifier	server		28125	0					
ANR	28218	CallExpression	ss_malloc ( sizeof ( struct server ) )		28125	1					
ANR	28219	Callee	ss_malloc		28125	0					
ANR	28220	Identifier	ss_malloc		28125	0					
ANR	28221	ArgumentList	sizeof ( struct server )		28125	1					
ANR	28222	Argument	sizeof ( struct server )		28125	0					
ANR	28223	SizeofExpression	sizeof ( struct server )		28125	0					
ANR	28224	Sizeof	sizeof		28125	0					
ANR	28225	SizeofOperand	struct server		28125	1					
ANR	28226	ExpressionStatement	"memset ( server , 0 , sizeof ( struct server ) )"	266:4:7323:7363	28125	7	True				
ANR	28227	CallExpression	"memset ( server , 0 , sizeof ( struct server ) )"		28125	0					
ANR	28228	Callee	memset		28125	0					
ANR	28229	Identifier	memset		28125	0					
ANR	28230	ArgumentList	server		28125	1					
ANR	28231	Argument	server		28125	0					
ANR	28232	Identifier	server		28125	0					
ANR	28233	Argument	0		28125	1					
ANR	28234	PrimaryExpression	0		28125	0					
ANR	28235	Argument	sizeof ( struct server )		28125	2					
ANR	28236	SizeofExpression	sizeof ( struct server )		28125	0					
ANR	28237	Sizeof	sizeof		28125	0					
ANR	28238	SizeofOperand	struct server		28125	1					
ANR	28239	IfStatement	if ( obj -> type == json_object )		28125	8					
ANR	28240	Condition	obj -> type == json_object	267:8:7373:7396	28125	0	True				
ANR	28241	EqualityExpression	obj -> type == json_object		28125	0		==			
ANR	28242	PtrMemberAccess	obj -> type		28125	0					
ANR	28243	Identifier	obj		28125	0					
ANR	28244	Identifier	type		28125	1					
ANR	28245	Identifier	json_object		28125	1					
ANR	28246	CompoundStatement		21:8:504:513	28125	1					
ANR	28247	IdentifierDeclStatement	int i = 0 ;	268:8:7409:7418	28125	0	True				
ANR	28248	IdentifierDecl	i = 0		28125	0					
ANR	28249	IdentifierDeclType	int		28125	0					
ANR	28250	Identifier	i		28125	1					
ANR	28251	AssignmentExpression	i = 0		28125	2		=			
ANR	28252	Identifier	i		28125	0					
ANR	28253	PrimaryExpression	0		28125	1					
ANR	28254	ForStatement	for ( i = 0 ; i < obj -> u . object . length ; i ++ )		28125	1					
ANR	28255	ForInit	i = 0 ;	269:13:7433:7438	28125	0	True				
ANR	28256	AssignmentExpression	i = 0		28125	0		=			
ANR	28257	Identifier	i		28125	0					
ANR	28258	PrimaryExpression	0		28125	1					
ANR	28259	Condition	i < obj -> u . object . length	269:20:7440:7463	28125	1	True				
ANR	28260	RelationalExpression	i < obj -> u . object . length		28125	0		<			
ANR	28261	Identifier	i		28125	0					
ANR	28262	MemberAccess	obj -> u . object . length		28125	1					
ANR	28263	MemberAccess	obj -> u . object		28125	0					
ANR	28264	PtrMemberAccess	obj -> u		28125	0					
ANR	28265	Identifier	obj		28125	0					
ANR	28266	Identifier	u		28125	1					
ANR	28267	Identifier	object		28125	1					
ANR	28268	Identifier	length		28125	1					
ANR	28269	PostIncDecOperationExpression	i ++	269:46:7466:7468	28125	2	True				
ANR	28270	Identifier	i		28125	0					
ANR	28271	IncDec	++		28125	1					
ANR	28272	CompoundStatement		24:12:642:691	28125	3					
ANR	28273	IdentifierDeclStatement	char * name = obj -> u . object . values [ i ] . name ;	270:12:7485:7533	28125	0	True				
ANR	28274	IdentifierDecl	* name = obj -> u . object . values [ i ] . name		28125	0					
ANR	28275	IdentifierDeclType	char *		28125	0					
ANR	28276	Identifier	name		28125	1					
ANR	28277	AssignmentExpression	* name = obj -> u . object . values [ i ] . name		28125	2		=			
ANR	28278	Identifier	name		28125	0					
ANR	28279	MemberAccess	obj -> u . object . values [ i ] . name		28125	1					
ANR	28280	ArrayIndexing	obj -> u . object . values [ i ]		28125	0					
ANR	28281	MemberAccess	obj -> u . object . values		28125	0					
ANR	28282	MemberAccess	obj -> u . object		28125	0					
ANR	28283	PtrMemberAccess	obj -> u		28125	0					
ANR	28284	Identifier	obj		28125	0					
ANR	28285	Identifier	u		28125	1					
ANR	28286	Identifier	object		28125	1					
ANR	28287	Identifier	values		28125	1					
ANR	28288	Identifier	i		28125	1					
ANR	28289	Identifier	name		28125	1					
ANR	28290	IdentifierDeclStatement	json_value * value = obj -> u . object . values [ i ] . value ;	271:12:7547:7596	28125	1	True				
ANR	28291	IdentifierDecl	* value = obj -> u . object . values [ i ] . value		28125	0					
ANR	28292	IdentifierDeclType	json_value *		28125	0					
ANR	28293	Identifier	value		28125	1					
ANR	28294	AssignmentExpression	* value = obj -> u . object . values [ i ] . value		28125	2		=			
ANR	28295	Identifier	value		28125	0					
ANR	28296	MemberAccess	obj -> u . object . values [ i ] . value		28125	1					
ANR	28297	ArrayIndexing	obj -> u . object . values [ i ]		28125	0					
ANR	28298	MemberAccess	obj -> u . object . values		28125	0					
ANR	28299	MemberAccess	obj -> u . object		28125	0					
ANR	28300	PtrMemberAccess	obj -> u		28125	0					
ANR	28301	Identifier	obj		28125	0					
ANR	28302	Identifier	u		28125	1					
ANR	28303	Identifier	object		28125	1					
ANR	28304	Identifier	values		28125	1					
ANR	28305	Identifier	i		28125	1					
ANR	28306	Identifier	value		28125	1					
ANR	28307	IfStatement	"if ( strcmp ( name , ""server_port"" ) == 0 )"		28125	2					
ANR	28308	Condition	"strcmp ( name , ""server_port"" ) == 0"	272:16:7614:7645	28125	0	True				
ANR	28309	EqualityExpression	"strcmp ( name , ""server_port"" ) == 0"		28125	0		==			
ANR	28310	CallExpression	"strcmp ( name , ""server_port"" )"		28125	0					
ANR	28311	Callee	strcmp		28125	0					
ANR	28312	Identifier	strcmp		28125	0					
ANR	28313	ArgumentList	name		28125	1					
ANR	28314	Argument	name		28125	0					
ANR	28315	Identifier	name		28125	0					
ANR	28316	Argument	"""server_port"""		28125	1					
ANR	28317	PrimaryExpression	"""server_port"""		28125	0					
ANR	28318	PrimaryExpression	0		28125	1					
ANR	28319	CompoundStatement		25:50:743:743	28125	1					
ANR	28320	IfStatement	if ( value -> type == json_string )		28125	0					
ANR	28321	Condition	value -> type == json_string	273:20:7670:7695	28125	0	True				
ANR	28322	EqualityExpression	value -> type == json_string		28125	0		==			
ANR	28323	PtrMemberAccess	value -> type		28125	0					
ANR	28324	Identifier	value		28125	0					
ANR	28325	Identifier	type		28125	1					
ANR	28326	Identifier	json_string		28125	1					
ANR	28327	CompoundStatement		26:48:793:793	28125	1					
ANR	28328	ExpressionStatement	"strncpy ( server -> port , value -> u . string . ptr , 8 )"	274:20:7720:7765	28125	0	True				
ANR	28329	CallExpression	"strncpy ( server -> port , value -> u . string . ptr , 8 )"		28125	0					
ANR	28330	Callee	strncpy		28125	0					
ANR	28331	Identifier	strncpy		28125	0					
ANR	28332	ArgumentList	server -> port		28125	1					
ANR	28333	Argument	server -> port		28125	0					
ANR	28334	PtrMemberAccess	server -> port		28125	0					
ANR	28335	Identifier	server		28125	0					
ANR	28336	Identifier	port		28125	1					
ANR	28337	Argument	value -> u . string . ptr		28125	1					
ANR	28338	MemberAccess	value -> u . string . ptr		28125	0					
ANR	28339	MemberAccess	value -> u . string		28125	0					
ANR	28340	PtrMemberAccess	value -> u		28125	0					
ANR	28341	Identifier	value		28125	0					
ANR	28342	Identifier	u		28125	1					
ANR	28343	Identifier	string		28125	1					
ANR	28344	Identifier	ptr		28125	1					
ANR	28345	Argument	8		28125	2					
ANR	28346	PrimaryExpression	8		28125	0					
ANR	28347	ElseStatement	else		28125	0					
ANR	28348	IfStatement	if ( value -> type == json_integer )		28125	0					
ANR	28349	Condition	value -> type == json_integer	275:27:7794:7820	28125	0	True				
ANR	28350	EqualityExpression	value -> type == json_integer		28125	0		==			
ANR	28351	PtrMemberAccess	value -> type		28125	0					
ANR	28352	Identifier	value		28125	0					
ANR	28353	Identifier	type		28125	1					
ANR	28354	Identifier	json_integer		28125	1					
ANR	28355	CompoundStatement		28:56:918:918	28125	1					
ANR	28356	Statement	snprintf	276:20:7845:7852	28125	0	True				
ANR	28357	Statement	(	276:28:7853:7853	28125	1	True				
ANR	28358	Statement	server	276:29:7854:7859	28125	2	True				
ANR	28359	Statement	->	276:35:7860:7861	28125	3	True				
ANR	28360	Statement	port	276:37:7862:7865	28125	4	True				
ANR	28361	Statement	","	276:41:7866:7866	28125	5	True				
ANR	28362	Statement	8	276:43:7868:7868	28125	6	True				
ANR	28363	Statement	","	276:44:7869:7869	28125	7	True				
ANR	28364	Statement	"""%"""	276:46:7871:7873	28125	8	True				
ANR	28365	Statement	PRIu64	276:50:7875:7880	28125	9	True				
ANR	28366	Statement	""""""	276:57:7882:7883	28125	10	True				
ANR	28367	Statement	","	276:59:7884:7884	28125	11	True				
ANR	28368	Statement	value	276:61:7886:7890	28125	12	True				
ANR	28369	Statement	->	276:66:7891:7892	28125	13	True				
ANR	28370	Statement	u	276:68:7893:7893	28125	14	True				
ANR	28371	Statement	.	276:69:7894:7894	28125	15	True				
ANR	28372	Statement	integer	276:70:7895:7901	28125	16	True				
ANR	28373	Statement	)	276:77:7902:7902	28125	17	True				
ANR	28374	ExpressionStatement		276:78:7903:7903	28125	18	True				
ANR	28375	ElseStatement	else		28125	0					
ANR	28376	IfStatement	"if ( strcmp ( name , ""password"" ) == 0 )"		28125	0					
ANR	28377	Condition	"strcmp ( name , ""password"" ) == 0"	278:23:7946:7974	28125	0	True				
ANR	28378	EqualityExpression	"strcmp ( name , ""password"" ) == 0"		28125	0		==			
ANR	28379	CallExpression	"strcmp ( name , ""password"" )"		28125	0					
ANR	28380	Callee	strcmp		28125	0					
ANR	28381	Identifier	strcmp		28125	0					
ANR	28382	ArgumentList	name		28125	1					
ANR	28383	Argument	name		28125	0					
ANR	28384	Identifier	name		28125	0					
ANR	28385	Argument	"""password"""		28125	1					
ANR	28386	PrimaryExpression	"""password"""		28125	0					
ANR	28387	PrimaryExpression	0		28125	1					
ANR	28388	CompoundStatement		31:54:1072:1072	28125	1					
ANR	28389	IfStatement	if ( value -> type == json_string )		28125	0					
ANR	28390	Condition	value -> type == json_string	279:20:7999:8024	28125	0	True				
ANR	28391	EqualityExpression	value -> type == json_string		28125	0		==			
ANR	28392	PtrMemberAccess	value -> type		28125	0					
ANR	28393	Identifier	value		28125	0					
ANR	28394	Identifier	type		28125	1					
ANR	28395	Identifier	json_string		28125	1					
ANR	28396	CompoundStatement		32:48:1122:1122	28125	1					
ANR	28397	ExpressionStatement	"strncpy ( server -> password , value -> u . string . ptr , 128 )"	280:20:8049:8100	28125	0	True				
ANR	28398	CallExpression	"strncpy ( server -> password , value -> u . string . ptr , 128 )"		28125	0					
ANR	28399	Callee	strncpy		28125	0					
ANR	28400	Identifier	strncpy		28125	0					
ANR	28401	ArgumentList	server -> password		28125	1					
ANR	28402	Argument	server -> password		28125	0					
ANR	28403	PtrMemberAccess	server -> password		28125	0					
ANR	28404	Identifier	server		28125	0					
ANR	28405	Identifier	password		28125	1					
ANR	28406	Argument	value -> u . string . ptr		28125	1					
ANR	28407	MemberAccess	value -> u . string . ptr		28125	0					
ANR	28408	MemberAccess	value -> u . string		28125	0					
ANR	28409	PtrMemberAccess	value -> u		28125	0					
ANR	28410	Identifier	value		28125	0					
ANR	28411	Identifier	u		28125	1					
ANR	28412	Identifier	string		28125	1					
ANR	28413	Identifier	ptr		28125	1					
ANR	28414	Argument	128		28125	2					
ANR	28415	PrimaryExpression	128		28125	0					
ANR	28416	ElseStatement	else		28125	0					
ANR	28417	IfStatement	"if ( strcmp ( name , ""method"" ) == 0 )"		28125	0					
ANR	28418	Condition	"strcmp ( name , ""method"" ) == 0"	282:23:8143:8169	28125	0	True				
ANR	28419	EqualityExpression	"strcmp ( name , ""method"" ) == 0"		28125	0		==			
ANR	28420	CallExpression	"strcmp ( name , ""method"" )"		28125	0					
ANR	28421	Callee	strcmp		28125	0					
ANR	28422	Identifier	strcmp		28125	0					
ANR	28423	ArgumentList	name		28125	1					
ANR	28424	Argument	name		28125	0					
ANR	28425	Identifier	name		28125	0					
ANR	28426	Argument	"""method"""		28125	1					
ANR	28427	PrimaryExpression	"""method"""		28125	0					
ANR	28428	PrimaryExpression	0		28125	1					
ANR	28429	CompoundStatement		35:52:1267:1267	28125	1					
ANR	28430	IfStatement	if ( value -> type == json_string )		28125	0					
ANR	28431	Condition	value -> type == json_string	283:20:8194:8219	28125	0	True				
ANR	28432	EqualityExpression	value -> type == json_string		28125	0		==			
ANR	28433	PtrMemberAccess	value -> type		28125	0					
ANR	28434	Identifier	value		28125	0					
ANR	28435	Identifier	type		28125	1					
ANR	28436	Identifier	json_string		28125	1					
ANR	28437	CompoundStatement		36:48:1317:1317	28125	1					
ANR	28438	ExpressionStatement	server -> method = strdup ( value -> u . string . ptr )	284:20:8244:8288	28125	0	True				
ANR	28439	AssignmentExpression	server -> method = strdup ( value -> u . string . ptr )		28125	0		=			
ANR	28440	PtrMemberAccess	server -> method		28125	0					
ANR	28441	Identifier	server		28125	0					
ANR	28442	Identifier	method		28125	1					
ANR	28443	CallExpression	strdup ( value -> u . string . ptr )		28125	1					
ANR	28444	Callee	strdup		28125	0					
ANR	28445	Identifier	strdup		28125	0					
ANR	28446	ArgumentList	value -> u . string . ptr		28125	1					
ANR	28447	Argument	value -> u . string . ptr		28125	0					
ANR	28448	MemberAccess	value -> u . string . ptr		28125	0					
ANR	28449	MemberAccess	value -> u . string		28125	0					
ANR	28450	PtrMemberAccess	value -> u		28125	0					
ANR	28451	Identifier	value		28125	0					
ANR	28452	Identifier	u		28125	1					
ANR	28453	Identifier	string		28125	1					
ANR	28454	Identifier	ptr		28125	1					
ANR	28455	ElseStatement	else		28125	0					
ANR	28456	IfStatement	"if ( strcmp ( name , ""fast_open"" ) == 0 )"		28125	0					
ANR	28457	Condition	"strcmp ( name , ""fast_open"" ) == 0"	286:23:8331:8360	28125	0	True				
ANR	28458	EqualityExpression	"strcmp ( name , ""fast_open"" ) == 0"		28125	0		==			
ANR	28459	CallExpression	"strcmp ( name , ""fast_open"" )"		28125	0					
ANR	28460	Callee	strcmp		28125	0					
ANR	28461	Identifier	strcmp		28125	0					
ANR	28462	ArgumentList	name		28125	1					
ANR	28463	Argument	name		28125	0					
ANR	28464	Identifier	name		28125	0					
ANR	28465	Argument	"""fast_open"""		28125	1					
ANR	28466	PrimaryExpression	"""fast_open"""		28125	0					
ANR	28467	PrimaryExpression	0		28125	1					
ANR	28468	CompoundStatement		39:55:1458:1458	28125	1					
ANR	28469	IfStatement	if ( value -> type == json_boolean )		28125	0					
ANR	28470	Condition	value -> type == json_boolean	287:20:8385:8411	28125	0	True				
ANR	28471	EqualityExpression	value -> type == json_boolean		28125	0		==			
ANR	28472	PtrMemberAccess	value -> type		28125	0					
ANR	28473	Identifier	value		28125	0					
ANR	28474	Identifier	type		28125	1					
ANR	28475	Identifier	json_boolean		28125	1					
ANR	28476	CompoundStatement		40:49:1509:1509	28125	1					
ANR	28477	ExpressionStatement	"strncpy ( server -> fast_open , ( value -> u . boolean ? ""true"" : ""false"" ) , 8 )"	288:20:8436:8504	28125	0	True				
ANR	28478	CallExpression	"strncpy ( server -> fast_open , ( value -> u . boolean ? ""true"" : ""false"" ) , 8 )"		28125	0					
ANR	28479	Callee	strncpy		28125	0					
ANR	28480	Identifier	strncpy		28125	0					
ANR	28481	ArgumentList	server -> fast_open		28125	1					
ANR	28482	Argument	server -> fast_open		28125	0					
ANR	28483	PtrMemberAccess	server -> fast_open		28125	0					
ANR	28484	Identifier	server		28125	0					
ANR	28485	Identifier	fast_open		28125	1					
ANR	28486	Argument	"value -> u . boolean ? ""true"" : ""false"""		28125	1					
ANR	28487	ConditionalExpression	"value -> u . boolean ? ""true"" : ""false"""		28125	0					
ANR	28488	Condition	value -> u . boolean		28125	0					
ANR	28489	MemberAccess	value -> u . boolean		28125	0					
ANR	28490	PtrMemberAccess	value -> u		28125	0					
ANR	28491	Identifier	value		28125	0					
ANR	28492	Identifier	u		28125	1					
ANR	28493	Identifier	boolean		28125	1					
ANR	28494	PrimaryExpression	"""true"""		28125	1					
ANR	28495	PrimaryExpression	"""false"""		28125	2					
ANR	28496	Argument	8		28125	2					
ANR	28497	PrimaryExpression	8		28125	0					
ANR	28498	ElseStatement	else		28125	0					
ANR	28499	IfStatement	"if ( strcmp ( name , ""plugin"" ) == 0 )"		28125	0					
ANR	28500	Condition	"strcmp ( name , ""plugin"" ) == 0"	290:23:8547:8573	28125	0	True				
ANR	28501	EqualityExpression	"strcmp ( name , ""plugin"" ) == 0"		28125	0		==			
ANR	28502	CallExpression	"strcmp ( name , ""plugin"" )"		28125	0					
ANR	28503	Callee	strcmp		28125	0					
ANR	28504	Identifier	strcmp		28125	0					
ANR	28505	ArgumentList	name		28125	1					
ANR	28506	Argument	name		28125	0					
ANR	28507	Identifier	name		28125	0					
ANR	28508	Argument	"""plugin"""		28125	1					
ANR	28509	PrimaryExpression	"""plugin"""		28125	0					
ANR	28510	PrimaryExpression	0		28125	1					
ANR	28511	CompoundStatement		43:52:1671:1671	28125	1					
ANR	28512	IfStatement	if ( value -> type == json_string )		28125	0					
ANR	28513	Condition	value -> type == json_string	291:20:8598:8623	28125	0	True				
ANR	28514	EqualityExpression	value -> type == json_string		28125	0		==			
ANR	28515	PtrMemberAccess	value -> type		28125	0					
ANR	28516	Identifier	value		28125	0					
ANR	28517	Identifier	type		28125	1					
ANR	28518	Identifier	json_string		28125	1					
ANR	28519	CompoundStatement		44:48:1721:1721	28125	1					
ANR	28520	ExpressionStatement	server -> plugin = strdup ( value -> u . string . ptr )	292:20:8648:8692	28125	0	True				
ANR	28521	AssignmentExpression	server -> plugin = strdup ( value -> u . string . ptr )		28125	0		=			
ANR	28522	PtrMemberAccess	server -> plugin		28125	0					
ANR	28523	Identifier	server		28125	0					
ANR	28524	Identifier	plugin		28125	1					
ANR	28525	CallExpression	strdup ( value -> u . string . ptr )		28125	1					
ANR	28526	Callee	strdup		28125	0					
ANR	28527	Identifier	strdup		28125	0					
ANR	28528	ArgumentList	value -> u . string . ptr		28125	1					
ANR	28529	Argument	value -> u . string . ptr		28125	0					
ANR	28530	MemberAccess	value -> u . string . ptr		28125	0					
ANR	28531	MemberAccess	value -> u . string		28125	0					
ANR	28532	PtrMemberAccess	value -> u		28125	0					
ANR	28533	Identifier	value		28125	0					
ANR	28534	Identifier	u		28125	1					
ANR	28535	Identifier	string		28125	1					
ANR	28536	Identifier	ptr		28125	1					
ANR	28537	ElseStatement	else		28125	0					
ANR	28538	IfStatement	"if ( strcmp ( name , ""plugin_opts"" ) == 0 )"		28125	0					
ANR	28539	Condition	"strcmp ( name , ""plugin_opts"" ) == 0"	294:23:8735:8766	28125	0	True				
ANR	28540	EqualityExpression	"strcmp ( name , ""plugin_opts"" ) == 0"		28125	0		==			
ANR	28541	CallExpression	"strcmp ( name , ""plugin_opts"" )"		28125	0					
ANR	28542	Callee	strcmp		28125	0					
ANR	28543	Identifier	strcmp		28125	0					
ANR	28544	ArgumentList	name		28125	1					
ANR	28545	Argument	name		28125	0					
ANR	28546	Identifier	name		28125	0					
ANR	28547	Argument	"""plugin_opts"""		28125	1					
ANR	28548	PrimaryExpression	"""plugin_opts"""		28125	0					
ANR	28549	PrimaryExpression	0		28125	1					
ANR	28550	CompoundStatement		47:57:1864:1864	28125	1					
ANR	28551	IfStatement	if ( value -> type == json_string )		28125	0					
ANR	28552	Condition	value -> type == json_string	295:20:8791:8816	28125	0	True				
ANR	28553	EqualityExpression	value -> type == json_string		28125	0		==			
ANR	28554	PtrMemberAccess	value -> type		28125	0					
ANR	28555	Identifier	value		28125	0					
ANR	28556	Identifier	type		28125	1					
ANR	28557	Identifier	json_string		28125	1					
ANR	28558	CompoundStatement		48:48:1914:1914	28125	1					
ANR	28559	ExpressionStatement	server -> plugin_opts = strdup ( value -> u . string . ptr )	296:20:8841:8890	28125	0	True				
ANR	28560	AssignmentExpression	server -> plugin_opts = strdup ( value -> u . string . ptr )		28125	0		=			
ANR	28561	PtrMemberAccess	server -> plugin_opts		28125	0					
ANR	28562	Identifier	server		28125	0					
ANR	28563	Identifier	plugin_opts		28125	1					
ANR	28564	CallExpression	strdup ( value -> u . string . ptr )		28125	1					
ANR	28565	Callee	strdup		28125	0					
ANR	28566	Identifier	strdup		28125	0					
ANR	28567	ArgumentList	value -> u . string . ptr		28125	1					
ANR	28568	Argument	value -> u . string . ptr		28125	0					
ANR	28569	MemberAccess	value -> u . string . ptr		28125	0					
ANR	28570	MemberAccess	value -> u . string		28125	0					
ANR	28571	PtrMemberAccess	value -> u		28125	0					
ANR	28572	Identifier	value		28125	0					
ANR	28573	Identifier	u		28125	1					
ANR	28574	Identifier	string		28125	1					
ANR	28575	Identifier	ptr		28125	1					
ANR	28576	ElseStatement	else		28125	0					
ANR	28577	IfStatement	"if ( strcmp ( name , ""mode"" ) == 0 )"		28125	0					
ANR	28578	Condition	"strcmp ( name , ""mode"" ) == 0"	298:23:8933:8957	28125	0	True				
ANR	28579	EqualityExpression	"strcmp ( name , ""mode"" ) == 0"		28125	0		==			
ANR	28580	CallExpression	"strcmp ( name , ""mode"" )"		28125	0					
ANR	28581	Callee	strcmp		28125	0					
ANR	28582	Identifier	strcmp		28125	0					
ANR	28583	ArgumentList	name		28125	1					
ANR	28584	Argument	name		28125	0					
ANR	28585	Identifier	name		28125	0					
ANR	28586	Argument	"""mode"""		28125	1					
ANR	28587	PrimaryExpression	"""mode"""		28125	0					
ANR	28588	PrimaryExpression	0		28125	1					
ANR	28589	CompoundStatement		51:50:2055:2055	28125	1					
ANR	28590	IfStatement	if ( value -> type == json_string )		28125	0					
ANR	28591	Condition	value -> type == json_string	299:20:8982:9007	28125	0	True				
ANR	28592	EqualityExpression	value -> type == json_string		28125	0		==			
ANR	28593	PtrMemberAccess	value -> type		28125	0					
ANR	28594	Identifier	value		28125	0					
ANR	28595	Identifier	type		28125	1					
ANR	28596	Identifier	json_string		28125	1					
ANR	28597	CompoundStatement		52:48:2105:2105	28125	1					
ANR	28598	ExpressionStatement	server -> mode = strdup ( value -> u . string . ptr )	300:20:9032:9074	28125	0	True				
ANR	28599	AssignmentExpression	server -> mode = strdup ( value -> u . string . ptr )		28125	0		=			
ANR	28600	PtrMemberAccess	server -> mode		28125	0					
ANR	28601	Identifier	server		28125	0					
ANR	28602	Identifier	mode		28125	1					
ANR	28603	CallExpression	strdup ( value -> u . string . ptr )		28125	1					
ANR	28604	Callee	strdup		28125	0					
ANR	28605	Identifier	strdup		28125	0					
ANR	28606	ArgumentList	value -> u . string . ptr		28125	1					
ANR	28607	Argument	value -> u . string . ptr		28125	0					
ANR	28608	MemberAccess	value -> u . string . ptr		28125	0					
ANR	28609	MemberAccess	value -> u . string		28125	0					
ANR	28610	PtrMemberAccess	value -> u		28125	0					
ANR	28611	Identifier	value		28125	0					
ANR	28612	Identifier	u		28125	1					
ANR	28613	Identifier	string		28125	1					
ANR	28614	Identifier	ptr		28125	1					
ANR	28615	ElseStatement	else		28125	0					
ANR	28616	CompoundStatement		55:19:2208:2208	28125	0					
ANR	28617	ExpressionStatement	"LOGE ( ""invalid data: %s"" , data )"	303:16:9131:9161	28125	0	True				
ANR	28618	CallExpression	"LOGE ( ""invalid data: %s"" , data )"		28125	0					
ANR	28619	Callee	LOGE		28125	0					
ANR	28620	Identifier	LOGE		28125	0					
ANR	28621	ArgumentList	"""invalid data: %s"""		28125	1					
ANR	28622	Argument	"""invalid data: %s"""		28125	0					
ANR	28623	PrimaryExpression	"""invalid data: %s"""		28125	0					
ANR	28624	Argument	data		28125	1					
ANR	28625	Identifier	data		28125	0					
ANR	28626	BreakStatement	break ;	304:16:9179:9184	28125	1	True				
ANR	28627	ExpressionStatement	json_value_free ( obj )	309:4:9221:9241	28125	9	True				
ANR	28628	CallExpression	json_value_free ( obj )		28125	0					
ANR	28629	Callee	json_value_free		28125	0					
ANR	28630	Identifier	json_value_free		28125	0					
ANR	28631	ArgumentList	obj		28125	1					
ANR	28632	Argument	obj		28125	0					
ANR	28633	Identifier	obj		28125	0					
ANR	28634	ReturnStatement	return server ;	310:4:9247:9260	28125	10	True				
ANR	28635	Identifier	server		28125	0					
ANR	28636	ReturnType	static struct server *		28125	1					
ANR	28637	Identifier	get_server		28125	2					
ANR	28638	ParameterList	"char * buf , int len"		28125	3					
ANR	28639	Parameter	char * buf	247:11:6884:6892	28125	0	True				
ANR	28640	ParameterType	char *		28125	0					
ANR	28641	Identifier	buf		28125	1					
ANR	28642	Parameter	int len	247:22:6895:6901	28125	1	True				
ANR	28643	ParameterType	int		28125	0					
ANR	28644	Identifier	len		28125	1					
ANR	28645	CFGEntryNode	ENTRY		28125		True				
ANR	28646	CFGExitNode	EXIT		28125		True				
ANR	28647	Symbol	obj -> u . object . values [ i ] . value		28125						
ANR	28648	Symbol	data		28125						
ANR	28649	Symbol	server -> fast_open		28125						
ANR	28650	Symbol	server -> password		28125						
ANR	28651	Symbol	strlen		28125						
ANR	28652	Symbol	len		28125						
ANR	28653	Symbol	error_buf		28125						
ANR	28654	Symbol	* obj -> u		28125						
ANR	28655	Symbol	server -> port		28125						
ANR	28656	Symbol	server -> plugin		28125						
ANR	28657	Symbol	obj -> type		28125						
ANR	28658	Symbol	strcmp		28125						
ANR	28659	Symbol	settings		28125						
ANR	28660	Symbol	NULL		28125						
ANR	28661	Symbol	value -> u		28125						
ANR	28662	Symbol	json_boolean		28125						
ANR	28663	Symbol	* obj -> u . object . values		28125						
ANR	28664	Symbol	json_integer		28125						
ANR	28665	Symbol	& settings		28125						
ANR	28666	Symbol	json_string		28125						
ANR	28667	Symbol	value -> u . string		28125						
ANR	28668	Symbol	obj -> u		28125						
ANR	28669	Symbol	obj -> u . object		28125						
ANR	28670	Symbol	name		28125						
ANR	28671	Symbol	get_data		28125						
ANR	28672	Symbol	value -> type		28125						
ANR	28673	Symbol	json_parse_ex		28125						
ANR	28674	Symbol	server		28125						
ANR	28675	Symbol	* server		28125						
ANR	28676	Symbol	server -> plugin_opts		28125						
ANR	28677	Symbol	* * obj		28125						
ANR	28678	Symbol	value -> u . string . ptr		28125						
ANR	28679	Symbol	obj -> u . object . values [ i ] . name		28125						
ANR	28680	Symbol	value -> u . boolean		28125						
ANR	28681	Symbol	value		28125						
ANR	28682	Symbol	* obj		28125						
ANR	28683	Symbol	i		28125						
ANR	28684	Symbol	server -> method		28125						
ANR	28685	Symbol	obj -> u . object . values		28125						
ANR	28686	Symbol	* obj -> u . object		28125						
ANR	28687	Symbol	buf		28125						
ANR	28688	Symbol	* i		28125						
ANR	28689	Symbol	obj		28125						
ANR	28690	Symbol	* value		28125						
ANR	28691	Symbol	ss_malloc		28125						
ANR	28692	Symbol	server -> mode		28125						
ANR	28693	Symbol	json_object		28125						
ANR	28694	Symbol	strdup		28125						
ANR	28695	Symbol	obj -> u . object . length		28125						
ANR	28696	Function	parse_traffic	313:0:9265:10118							
ANR	28697	FunctionDef	"parse_traffic (char * buf , int len , char * port , uint64_t * traffic)"		28696	0					
ANR	28698	CompoundStatement		315:0:9341:10118	28696	0					
ANR	28699	IdentifierDeclStatement	"char * data = get_data ( buf , len ) ;"	316:4:9347:9378	28696	0	True				
ANR	28700	IdentifierDecl	"* data = get_data ( buf , len )"		28696	0					
ANR	28701	IdentifierDeclType	char *		28696	0					
ANR	28702	Identifier	data		28696	1					
ANR	28703	AssignmentExpression	"* data = get_data ( buf , len )"		28696	2		=			
ANR	28704	Identifier	data		28696	0					
ANR	28705	CallExpression	"get_data ( buf , len )"		28696	1					
ANR	28706	Callee	get_data		28696	0					
ANR	28707	Identifier	get_data		28696	0					
ANR	28708	ArgumentList	buf		28696	1					
ANR	28709	Argument	buf		28696	0					
ANR	28710	Identifier	buf		28696	0					
ANR	28711	Argument	len		28696	1					
ANR	28712	Identifier	len		28696	0					
ANR	28713	IdentifierDeclStatement	char error_buf [ 512 ] ;	317:4:9384:9403	28696	1	True				
ANR	28714	IdentifierDecl	error_buf [ 512 ]		28696	0					
ANR	28715	IdentifierDeclType	char [ 512 ]		28696	0					
ANR	28716	Identifier	error_buf		28696	1					
ANR	28717	PrimaryExpression	512		28696	2					
ANR	28718	IdentifierDeclStatement	json_settings settings = { 0 } ;	318:4:9409:9439	28696	2	True				
ANR	28719	IdentifierDecl	settings = { 0 }		28696	0					
ANR	28720	IdentifierDeclType	json_settings		28696	0					
ANR	28721	Identifier	settings		28696	1					
ANR	28722	AssignmentExpression	settings = { 0 }		28696	2		=			
ANR	28723	Identifier	settings		28696	0					
ANR	28724	InitializerList	0		28696	1					
ANR	28725	PrimaryExpression	0		28696	0					
ANR	28726	IfStatement	if ( data == NULL )		28696	3					
ANR	28727	Condition	data == NULL	320:8:9450:9461	28696	0	True				
ANR	28728	EqualityExpression	data == NULL		28696	0		==			
ANR	28729	Identifier	data		28696	0					
ANR	28730	Identifier	NULL		28696	1					
ANR	28731	CompoundStatement		6:22:122:122	28696	1					
ANR	28732	ExpressionStatement	"LOGE ( ""No data found"" )"	321:8:9474:9495	28696	0	True				
ANR	28733	CallExpression	"LOGE ( ""No data found"" )"		28696	0					
ANR	28734	Callee	LOGE		28696	0					
ANR	28735	Identifier	LOGE		28696	0					
ANR	28736	ArgumentList	"""No data found"""		28696	1					
ANR	28737	Argument	"""No data found"""		28696	0					
ANR	28738	PrimaryExpression	"""No data found"""		28696	0					
ANR	28739	ReturnStatement	return - 1 ;	322:8:9505:9514	28696	1	True				
ANR	28740	UnaryOperationExpression	- 1		28696	0					
ANR	28741	UnaryOperator	-		28696	0					
ANR	28742	PrimaryExpression	1		28696	1					
ANR	28743	IdentifierDeclStatement	"json_value * obj = json_parse_ex ( & settings , data , strlen ( data ) , error_buf ) ;"	325:4:9527:9600	28696	4	True				
ANR	28744	IdentifierDecl	"* obj = json_parse_ex ( & settings , data , strlen ( data ) , error_buf )"		28696	0					
ANR	28745	IdentifierDeclType	json_value *		28696	0					
ANR	28746	Identifier	obj		28696	1					
ANR	28747	AssignmentExpression	"* obj = json_parse_ex ( & settings , data , strlen ( data ) , error_buf )"		28696	2		=			
ANR	28748	Identifier	obj		28696	0					
ANR	28749	CallExpression	"json_parse_ex ( & settings , data , strlen ( data ) , error_buf )"		28696	1					
ANR	28750	Callee	json_parse_ex		28696	0					
ANR	28751	Identifier	json_parse_ex		28696	0					
ANR	28752	ArgumentList	& settings		28696	1					
ANR	28753	Argument	& settings		28696	0					
ANR	28754	UnaryOperationExpression	& settings		28696	0					
ANR	28755	UnaryOperator	&		28696	0					
ANR	28756	Identifier	settings		28696	1					
ANR	28757	Argument	data		28696	1					
ANR	28758	Identifier	data		28696	0					
ANR	28759	Argument	strlen ( data )		28696	2					
ANR	28760	CallExpression	strlen ( data )		28696	0					
ANR	28761	Callee	strlen		28696	0					
ANR	28762	Identifier	strlen		28696	0					
ANR	28763	ArgumentList	data		28696	1					
ANR	28764	Argument	data		28696	0					
ANR	28765	Identifier	data		28696	0					
ANR	28766	Argument	error_buf		28696	3					
ANR	28767	Identifier	error_buf		28696	0					
ANR	28768	IfStatement	if ( obj == NULL )		28696	5					
ANR	28769	Condition	obj == NULL	326:8:9610:9620	28696	0	True				
ANR	28770	EqualityExpression	obj == NULL		28696	0		==			
ANR	28771	Identifier	obj		28696	0					
ANR	28772	Identifier	NULL		28696	1					
ANR	28773	CompoundStatement		12:21:281:281	28696	1					
ANR	28774	ExpressionStatement	"LOGE ( ""%s"" , error_buf )"	327:8:9633:9654	28696	0	True				
ANR	28775	CallExpression	"LOGE ( ""%s"" , error_buf )"		28696	0					
ANR	28776	Callee	LOGE		28696	0					
ANR	28777	Identifier	LOGE		28696	0					
ANR	28778	ArgumentList	"""%s"""		28696	1					
ANR	28779	Argument	"""%s"""		28696	0					
ANR	28780	PrimaryExpression	"""%s"""		28696	0					
ANR	28781	Argument	error_buf		28696	1					
ANR	28782	Identifier	error_buf		28696	0					
ANR	28783	ReturnStatement	return - 1 ;	328:8:9664:9673	28696	1	True				
ANR	28784	UnaryOperationExpression	- 1		28696	0					
ANR	28785	UnaryOperator	-		28696	0					
ANR	28786	PrimaryExpression	1		28696	1					
ANR	28787	IfStatement	if ( obj -> type == json_object )		28696	6					
ANR	28788	Condition	obj -> type == json_object	331:8:9690:9713	28696	0	True				
ANR	28789	EqualityExpression	obj -> type == json_object		28696	0		==			
ANR	28790	PtrMemberAccess	obj -> type		28696	0					
ANR	28791	Identifier	obj		28696	0					
ANR	28792	Identifier	type		28696	1					
ANR	28793	Identifier	json_object		28696	1					
ANR	28794	CompoundStatement		18:8:384:393	28696	1					
ANR	28795	IdentifierDeclStatement	int i = 0 ;	332:8:9726:9735	28696	0	True				
ANR	28796	IdentifierDecl	i = 0		28696	0					
ANR	28797	IdentifierDeclType	int		28696	0					
ANR	28798	Identifier	i		28696	1					
ANR	28799	AssignmentExpression	i = 0		28696	2		=			
ANR	28800	Identifier	i		28696	0					
ANR	28801	PrimaryExpression	0		28696	1					
ANR	28802	ForStatement	for ( i = 0 ; i < obj -> u . object . length ; i ++ )		28696	1					
ANR	28803	ForInit	i = 0 ;	333:13:9750:9755	28696	0	True				
ANR	28804	AssignmentExpression	i = 0		28696	0		=			
ANR	28805	Identifier	i		28696	0					
ANR	28806	PrimaryExpression	0		28696	1					
ANR	28807	Condition	i < obj -> u . object . length	333:20:9757:9780	28696	1	True				
ANR	28808	RelationalExpression	i < obj -> u . object . length		28696	0		<			
ANR	28809	Identifier	i		28696	0					
ANR	28810	MemberAccess	obj -> u . object . length		28696	1					
ANR	28811	MemberAccess	obj -> u . object		28696	0					
ANR	28812	PtrMemberAccess	obj -> u		28696	0					
ANR	28813	Identifier	obj		28696	0					
ANR	28814	Identifier	u		28696	1					
ANR	28815	Identifier	object		28696	1					
ANR	28816	Identifier	length		28696	1					
ANR	28817	PostIncDecOperationExpression	i ++	333:46:9783:9785	28696	2	True				
ANR	28818	Identifier	i		28696	0					
ANR	28819	IncDec	++		28696	1					
ANR	28820	CompoundStatement		21:12:522:571	28696	3					
ANR	28821	IdentifierDeclStatement	char * name = obj -> u . object . values [ i ] . name ;	334:12:9802:9850	28696	0	True				
ANR	28822	IdentifierDecl	* name = obj -> u . object . values [ i ] . name		28696	0					
ANR	28823	IdentifierDeclType	char *		28696	0					
ANR	28824	Identifier	name		28696	1					
ANR	28825	AssignmentExpression	* name = obj -> u . object . values [ i ] . name		28696	2		=			
ANR	28826	Identifier	name		28696	0					
ANR	28827	MemberAccess	obj -> u . object . values [ i ] . name		28696	1					
ANR	28828	ArrayIndexing	obj -> u . object . values [ i ]		28696	0					
ANR	28829	MemberAccess	obj -> u . object . values		28696	0					
ANR	28830	MemberAccess	obj -> u . object		28696	0					
ANR	28831	PtrMemberAccess	obj -> u		28696	0					
ANR	28832	Identifier	obj		28696	0					
ANR	28833	Identifier	u		28696	1					
ANR	28834	Identifier	object		28696	1					
ANR	28835	Identifier	values		28696	1					
ANR	28836	Identifier	i		28696	1					
ANR	28837	Identifier	name		28696	1					
ANR	28838	IdentifierDeclStatement	json_value * value = obj -> u . object . values [ i ] . value ;	335:12:9864:9913	28696	1	True				
ANR	28839	IdentifierDecl	* value = obj -> u . object . values [ i ] . value		28696	0					
ANR	28840	IdentifierDeclType	json_value *		28696	0					
ANR	28841	Identifier	value		28696	1					
ANR	28842	AssignmentExpression	* value = obj -> u . object . values [ i ] . value		28696	2		=			
ANR	28843	Identifier	value		28696	0					
ANR	28844	MemberAccess	obj -> u . object . values [ i ] . value		28696	1					
ANR	28845	ArrayIndexing	obj -> u . object . values [ i ]		28696	0					
ANR	28846	MemberAccess	obj -> u . object . values		28696	0					
ANR	28847	MemberAccess	obj -> u . object		28696	0					
ANR	28848	PtrMemberAccess	obj -> u		28696	0					
ANR	28849	Identifier	obj		28696	0					
ANR	28850	Identifier	u		28696	1					
ANR	28851	Identifier	object		28696	1					
ANR	28852	Identifier	values		28696	1					
ANR	28853	Identifier	i		28696	1					
ANR	28854	Identifier	value		28696	1					
ANR	28855	IfStatement	if ( value -> type == json_integer )		28696	2					
ANR	28856	Condition	value -> type == json_integer	336:16:9931:9957	28696	0	True				
ANR	28857	EqualityExpression	value -> type == json_integer		28696	0		==			
ANR	28858	PtrMemberAccess	value -> type		28696	0					
ANR	28859	Identifier	value		28696	0					
ANR	28860	Identifier	type		28696	1					
ANR	28861	Identifier	json_integer		28696	1					
ANR	28862	CompoundStatement		22:45:618:618	28696	1					
ANR	28863	ExpressionStatement	"strncpy ( port , name , 8 )"	337:16:9978:10000	28696	0	True				
ANR	28864	CallExpression	"strncpy ( port , name , 8 )"		28696	0					
ANR	28865	Callee	strncpy		28696	0					
ANR	28866	Identifier	strncpy		28696	0					
ANR	28867	ArgumentList	port		28696	1					
ANR	28868	Argument	port		28696	0					
ANR	28869	Identifier	port		28696	0					
ANR	28870	Argument	name		28696	1					
ANR	28871	Identifier	name		28696	0					
ANR	28872	Argument	8		28696	2					
ANR	28873	PrimaryExpression	8		28696	0					
ANR	28874	ExpressionStatement	* traffic = value -> u . integer	338:16:10018:10045	28696	1	True				
ANR	28875	AssignmentExpression	* traffic = value -> u . integer		28696	0		=			
ANR	28876	UnaryOperationExpression	* traffic		28696	0					
ANR	28877	UnaryOperator	*		28696	0					
ANR	28878	Identifier	traffic		28696	1					
ANR	28879	MemberAccess	value -> u . integer		28696	1					
ANR	28880	PtrMemberAccess	value -> u		28696	0					
ANR	28881	Identifier	value		28696	0					
ANR	28882	Identifier	u		28696	1					
ANR	28883	Identifier	integer		28696	1					
ANR	28884	ExpressionStatement	json_value_free ( obj )	343:4:10082:10102	28696	7	True				
ANR	28885	CallExpression	json_value_free ( obj )		28696	0					
ANR	28886	Callee	json_value_free		28696	0					
ANR	28887	Identifier	json_value_free		28696	0					
ANR	28888	ArgumentList	obj		28696	1					
ANR	28889	Argument	obj		28696	0					
ANR	28890	Identifier	obj		28696	0					
ANR	28891	ReturnStatement	return 0 ;	344:4:10108:10116	28696	8	True				
ANR	28892	PrimaryExpression	0		28696	0					
ANR	28893	ReturnType	static int		28696	1					
ANR	28894	Identifier	parse_traffic		28696	2					
ANR	28895	ParameterList	"char * buf , int len , char * port , uint64_t * traffic"		28696	3					
ANR	28896	Parameter	char * buf	314:14:9290:9298	28696	0	True				
ANR	28897	ParameterType	char *		28696	0					
ANR	28898	Identifier	buf		28696	1					
ANR	28899	Parameter	int len	314:25:9301:9307	28696	1	True				
ANR	28900	ParameterType	int		28696	0					
ANR	28901	Identifier	len		28696	1					
ANR	28902	Parameter	char * port	314:34:9310:9319	28696	2	True				
ANR	28903	ParameterType	char *		28696	0					
ANR	28904	Identifier	port		28696	1					
ANR	28905	Parameter	uint64_t * traffic	314:46:9322:9338	28696	3	True				
ANR	28906	ParameterType	uint64_t *		28696	0					
ANR	28907	Identifier	traffic		28696	1					
ANR	28908	CFGEntryNode	ENTRY		28696		True				
ANR	28909	CFGExitNode	EXIT		28696		True				
ANR	28910	Symbol	obj -> u . object . values [ i ] . value		28696						
ANR	28911	Symbol	json_parse_ex		28696						
ANR	28912	Symbol	data		28696						
ANR	28913	Symbol	* traffic		28696						
ANR	28914	Symbol	* * obj		28696						
ANR	28915	Symbol	strlen		28696						
ANR	28916	Symbol	len		28696						
ANR	28917	Symbol	obj -> u . object . values [ i ] . name		28696						
ANR	28918	Symbol	error_buf		28696						
ANR	28919	Symbol	value -> u . integer		28696						
ANR	28920	Symbol	* obj -> u		28696						
ANR	28921	Symbol	value		28696						
ANR	28922	Symbol	traffic		28696						
ANR	28923	Symbol	obj -> type		28696						
ANR	28924	Symbol	settings		28696						
ANR	28925	Symbol	* obj		28696						
ANR	28926	Symbol	NULL		28696						
ANR	28927	Symbol	value -> u		28696						
ANR	28928	Symbol	* obj -> u . object . values		28696						
ANR	28929	Symbol	json_integer		28696						
ANR	28930	Symbol	i		28696						
ANR	28931	Symbol	& settings		28696						
ANR	28932	Symbol	obj -> u . object . values		28696						
ANR	28933	Symbol	* obj -> u . object		28696						
ANR	28934	Symbol	obj -> u . object		28696						
ANR	28935	Symbol	obj -> u		28696						
ANR	28936	Symbol	buf		28696						
ANR	28937	Symbol	* i		28696						
ANR	28938	Symbol	port		28696						
ANR	28939	Symbol	obj		28696						
ANR	28940	Symbol	* value		28696						
ANR	28941	Symbol	name		28696						
ANR	28942	Symbol	get_data		28696						
ANR	28943	Symbol	json_object		28696						
ANR	28944	Symbol	obj -> u . object . length		28696						
ANR	28945	Symbol	value -> type		28696						
ANR	28946	Function	create_and_bind	347:0:10121:12627							
ANR	28947	FunctionDef	"create_and_bind (const char * host , const char * port , int protocol)"		28946	0					
ANR	28948	CompoundStatement		349:0:10198:12627	28946	0					
ANR	28949	IdentifierDeclStatement	struct addrinfo hints ;	350:4:10204:10225	28946	0	True				
ANR	28950	IdentifierDecl	hints		28946	0					
ANR	28951	IdentifierDeclType	struct addrinfo		28946	0					
ANR	28952	Identifier	hints		28946	1					
ANR	28953	IdentifierDeclStatement	"struct addrinfo * result , * rp , * ipv4v6bindall ;"	351:4:10231:10275	28946	1	True				
ANR	28954	IdentifierDecl	* result		28946	0					
ANR	28955	IdentifierDeclType	struct addrinfo *		28946	0					
ANR	28956	Identifier	result		28946	1					
ANR	28957	IdentifierDecl	* rp		28946	1					
ANR	28958	IdentifierDeclType	struct addrinfo *		28946	0					
ANR	28959	Identifier	rp		28946	1					
ANR	28960	IdentifierDecl	* ipv4v6bindall		28946	2					
ANR	28961	IdentifierDeclType	struct addrinfo *		28946	0					
ANR	28962	Identifier	ipv4v6bindall		28946	1					
ANR	28963	IdentifierDeclStatement	"int s , listen_sock = - 1 ;"	352:4:10281:10304	28946	2	True				
ANR	28964	IdentifierDecl	s		28946	0					
ANR	28965	IdentifierDeclType	int		28946	0					
ANR	28966	Identifier	s		28946	1					
ANR	28967	IdentifierDecl	listen_sock = - 1		28946	1					
ANR	28968	IdentifierDeclType	int		28946	0					
ANR	28969	Identifier	listen_sock		28946	1					
ANR	28970	AssignmentExpression	listen_sock = - 1		28946	2		=			
ANR	28971	Identifier	listen_sock		28946	0					
ANR	28972	UnaryOperationExpression	- 1		28946	1					
ANR	28973	UnaryOperator	-		28946	0					
ANR	28974	PrimaryExpression	1		28946	1					
ANR	28975	ExpressionStatement	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"	354:4:10311:10353	28946	3	True				
ANR	28976	CallExpression	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"		28946	0					
ANR	28977	Callee	memset		28946	0					
ANR	28978	Identifier	memset		28946	0					
ANR	28979	ArgumentList	& hints		28946	1					
ANR	28980	Argument	& hints		28946	0					
ANR	28981	UnaryOperationExpression	& hints		28946	0					
ANR	28982	UnaryOperator	&		28946	0					
ANR	28983	Identifier	hints		28946	1					
ANR	28984	Argument	0		28946	1					
ANR	28985	PrimaryExpression	0		28946	0					
ANR	28986	Argument	sizeof ( struct addrinfo )		28946	2					
ANR	28987	SizeofExpression	sizeof ( struct addrinfo )		28946	0					
ANR	28988	Sizeof	sizeof		28946	0					
ANR	28989	SizeofOperand	struct addrinfo		28946	1					
ANR	28990	ExpressionStatement	hints . ai_family = AF_UNSPEC	355:4:10359:10388	28946	4	True				
ANR	28991	AssignmentExpression	hints . ai_family = AF_UNSPEC		28946	0		=			
ANR	28992	MemberAccess	hints . ai_family		28946	0					
ANR	28993	Identifier	hints		28946	0					
ANR	28994	Identifier	ai_family		28946	1					
ANR	28995	Identifier	AF_UNSPEC		28946	1					
ANR	28996	ExpressionStatement	hints . ai_socktype = protocol == IPPROTO_TCP ? SOCK_STREAM : SOCK_DGRAM	356:4:10446:10540	28946	5	True				
ANR	28997	AssignmentExpression	hints . ai_socktype = protocol == IPPROTO_TCP ? SOCK_STREAM : SOCK_DGRAM		28946	0		=			
ANR	28998	MemberAccess	hints . ai_socktype		28946	0					
ANR	28999	Identifier	hints		28946	0					
ANR	29000	Identifier	ai_socktype		28946	1					
ANR	29001	ConditionalExpression	protocol == IPPROTO_TCP ? SOCK_STREAM : SOCK_DGRAM		28946	1					
ANR	29002	Condition	protocol == IPPROTO_TCP		28946	0					
ANR	29003	EqualityExpression	protocol == IPPROTO_TCP		28946	0		==			
ANR	29004	Identifier	protocol		28946	0					
ANR	29005	Identifier	IPPROTO_TCP		28946	1					
ANR	29006	Identifier	SOCK_STREAM		28946	1					
ANR	29007	Identifier	SOCK_DGRAM		28946	2					
ANR	29008	ExpressionStatement	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG	358:4:10582:10628	28946	6	True				
ANR	29009	AssignmentExpression	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG		28946	0		=			
ANR	29010	MemberAccess	hints . ai_flags		28946	0					
ANR	29011	Identifier	hints		28946	0					
ANR	29012	Identifier	ai_flags		28946	1					
ANR	29013	InclusiveOrExpression	AI_PASSIVE | AI_ADDRCONFIG		28946	1		|			
ANR	29014	Identifier	AI_PASSIVE		28946	0					
ANR	29015	Identifier	AI_ADDRCONFIG		28946	1					
ANR	29016	ExpressionStatement	hints . ai_protocol = protocol	359:4:10664:10692	28946	7	True				
ANR	29017	AssignmentExpression	hints . ai_protocol = protocol		28946	0		=			
ANR	29018	MemberAccess	hints . ai_protocol		28946	0					
ANR	29019	Identifier	hints		28946	0					
ANR	29020	Identifier	ai_protocol		28946	1					
ANR	29021	Identifier	protocol		28946	1					
ANR	29022	ExpressionStatement	"s = getaddrinfo ( host , port , & hints , & result )"	361:4:10699:10743	28946	8	True				
ANR	29023	AssignmentExpression	"s = getaddrinfo ( host , port , & hints , & result )"		28946	0		=			
ANR	29024	Identifier	s		28946	0					
ANR	29025	CallExpression	"getaddrinfo ( host , port , & hints , & result )"		28946	1					
ANR	29026	Callee	getaddrinfo		28946	0					
ANR	29027	Identifier	getaddrinfo		28946	0					
ANR	29028	ArgumentList	host		28946	1					
ANR	29029	Argument	host		28946	0					
ANR	29030	Identifier	host		28946	0					
ANR	29031	Argument	port		28946	1					
ANR	29032	Identifier	port		28946	0					
ANR	29033	Argument	& hints		28946	2					
ANR	29034	UnaryOperationExpression	& hints		28946	0					
ANR	29035	UnaryOperator	&		28946	0					
ANR	29036	Identifier	hints		28946	1					
ANR	29037	Argument	& result		28946	3					
ANR	29038	UnaryOperationExpression	& result		28946	0					
ANR	29039	UnaryOperator	&		28946	0					
ANR	29040	Identifier	result		28946	1					
ANR	29041	IfStatement	if ( s != 0 )		28946	9					
ANR	29042	Condition	s != 0	363:8:10754:10759	28946	0	True				
ANR	29043	EqualityExpression	s != 0		28946	0		!=			
ANR	29044	Identifier	s		28946	0					
ANR	29045	PrimaryExpression	0		28946	1					
ANR	29046	CompoundStatement		15:16:563:563	28946	1					
ANR	29047	ExpressionStatement	"LOGE ( ""getaddrinfo: %s"" , gai_strerror ( s ) )"	364:8:10772:10812	28946	0	True				
ANR	29048	CallExpression	"LOGE ( ""getaddrinfo: %s"" , gai_strerror ( s ) )"		28946	0					
ANR	29049	Callee	LOGE		28946	0					
ANR	29050	Identifier	LOGE		28946	0					
ANR	29051	ArgumentList	"""getaddrinfo: %s"""		28946	1					
ANR	29052	Argument	"""getaddrinfo: %s"""		28946	0					
ANR	29053	PrimaryExpression	"""getaddrinfo: %s"""		28946	0					
ANR	29054	Argument	gai_strerror ( s )		28946	1					
ANR	29055	CallExpression	gai_strerror ( s )		28946	0					
ANR	29056	Callee	gai_strerror		28946	0					
ANR	29057	Identifier	gai_strerror		28946	0					
ANR	29058	ArgumentList	s		28946	1					
ANR	29059	Argument	s		28946	0					
ANR	29060	Identifier	s		28946	0					
ANR	29061	ReturnStatement	return - 1 ;	365:8:10822:10831	28946	1	True				
ANR	29062	UnaryOperationExpression	- 1		28946	0					
ANR	29063	UnaryOperator	-		28946	0					
ANR	29064	PrimaryExpression	1		28946	1					
ANR	29065	ExpressionStatement	rp = result	368:4:10844:10855	28946	10	True				
ANR	29066	AssignmentExpression	rp = result		28946	0		=			
ANR	29067	Identifier	rp		28946	0					
ANR	29068	Identifier	result		28946	1					
ANR	29069	IfStatement	if ( ! host )		28946	11					
ANR	29070	Condition	! host	376:8:11199:11203	28946	0	True				
ANR	29071	UnaryOperationExpression	! host		28946	0					
ANR	29072	UnaryOperator	!		28946	0					
ANR	29073	Identifier	host		28946	1					
ANR	29074	CompoundStatement		28:15:1007:1007	28946	1					
ANR	29075	ExpressionStatement	ipv4v6bindall = result	377:8:11216:11238	28946	0	True				
ANR	29076	AssignmentExpression	ipv4v6bindall = result		28946	0		=			
ANR	29077	Identifier	ipv4v6bindall		28946	0					
ANR	29078	Identifier	result		28946	1					
ANR	29079	WhileStatement	while ( ipv4v6bindall )		28946	1					
ANR	29080	Condition	ipv4v6bindall	380:15:11335:11347	28946	0	True				
ANR	29081	Identifier	ipv4v6bindall		28946	0					
ANR	29082	CompoundStatement		32:30:1151:1151	28946	1					
ANR	29083	IfStatement	if ( ipv4v6bindall -> ai_family == AF_INET6 )		28946	0					
ANR	29084	Condition	ipv4v6bindall -> ai_family == AF_INET6	381:16:11368:11403	28946	0	True				
ANR	29085	EqualityExpression	ipv4v6bindall -> ai_family == AF_INET6		28946	0		==			
ANR	29086	PtrMemberAccess	ipv4v6bindall -> ai_family		28946	0					
ANR	29087	Identifier	ipv4v6bindall		28946	0					
ANR	29088	Identifier	ai_family		28946	1					
ANR	29089	Identifier	AF_INET6		28946	1					
ANR	29090	CompoundStatement		33:54:1207:1207	28946	1					
ANR	29091	ExpressionStatement	rp = ipv4v6bindall	382:16:11424:11442	28946	0	True				
ANR	29092	AssignmentExpression	rp = ipv4v6bindall		28946	0		=			
ANR	29093	Identifier	rp		28946	0					
ANR	29094	Identifier	ipv4v6bindall		28946	1					
ANR	29095	BreakStatement	break ;	383:16:11500:11505	28946	1	True				
ANR	29096	ExpressionStatement	ipv4v6bindall = ipv4v6bindall -> ai_next	385:12:11533:11571	28946	1	True				
ANR	29097	AssignmentExpression	ipv4v6bindall = ipv4v6bindall -> ai_next		28946	0		=			
ANR	29098	Identifier	ipv4v6bindall		28946	0					
ANR	29099	PtrMemberAccess	ipv4v6bindall -> ai_next		28946	1					
ANR	29100	Identifier	ipv4v6bindall		28946	0					
ANR	29101	Identifier	ai_next		28946	1					
ANR	29102	ForStatement	for ( ; rp != NULL ; rp = rp -> ai_next )		28946	12					
ANR	29103	Condition	rp != NULL	389:26:11652:11661	28946	0	True				
ANR	29104	EqualityExpression	rp != NULL		28946	0		!=			
ANR	29105	Identifier	rp		28946	0					
ANR	29106	Identifier	NULL		28946	1					
ANR	29107	AssignmentExpression	rp = rp -> ai_next	389:38:11664:11679	28946	1	True	=			
ANR	29108	Identifier	rp		28946	0					
ANR	29109	PtrMemberAccess	rp -> ai_next		28946	1					
ANR	29110	Identifier	rp		28946	0					
ANR	29111	Identifier	ai_next		28946	1					
ANR	29112	CompoundStatement		52:8:1824:1835	28946	2					
ANR	29113	ExpressionStatement	"listen_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"	390:8:11692:11761	28946	0	True				
ANR	29114	AssignmentExpression	"listen_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		28946	0		=			
ANR	29115	Identifier	listen_sock		28946	0					
ANR	29116	CallExpression	"socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		28946	1					
ANR	29117	Callee	socket		28946	0					
ANR	29118	Identifier	socket		28946	0					
ANR	29119	ArgumentList	rp -> ai_family		28946	1					
ANR	29120	Argument	rp -> ai_family		28946	0					
ANR	29121	PtrMemberAccess	rp -> ai_family		28946	0					
ANR	29122	Identifier	rp		28946	0					
ANR	29123	Identifier	ai_family		28946	1					
ANR	29124	Argument	rp -> ai_socktype		28946	1					
ANR	29125	PtrMemberAccess	rp -> ai_socktype		28946	0					
ANR	29126	Identifier	rp		28946	0					
ANR	29127	Identifier	ai_socktype		28946	1					
ANR	29128	Argument	rp -> ai_protocol		28946	2					
ANR	29129	PtrMemberAccess	rp -> ai_protocol		28946	0					
ANR	29130	Identifier	rp		28946	0					
ANR	29131	Identifier	ai_protocol		28946	1					
ANR	29132	IfStatement	if ( listen_sock == - 1 )		28946	1					
ANR	29133	Condition	listen_sock == - 1	391:12:11775:11791	28946	0	True				
ANR	29134	EqualityExpression	listen_sock == - 1		28946	0		==			
ANR	29135	Identifier	listen_sock		28946	0					
ANR	29136	UnaryOperationExpression	- 1		28946	1					
ANR	29137	UnaryOperator	-		28946	0					
ANR	29138	PrimaryExpression	1		28946	1					
ANR	29139	CompoundStatement		43:31:1595:1595	28946	1					
ANR	29140	ContinueStatement	continue ;	392:12:11808:11816	28946	0	True				
ANR	29141	IfStatement	if ( rp -> ai_family == AF_INET6 )		28946	2					
ANR	29142	Condition	rp -> ai_family == AF_INET6	395:12:11841:11865	28946	0	True				
ANR	29143	EqualityExpression	rp -> ai_family == AF_INET6		28946	0		==			
ANR	29144	PtrMemberAccess	rp -> ai_family		28946	0					
ANR	29145	Identifier	rp		28946	0					
ANR	29146	Identifier	ai_family		28946	1					
ANR	29147	Identifier	AF_INET6		28946	1					
ANR	29148	CompoundStatement		48:12:1683:1710	28946	1					
ANR	29149	IdentifierDeclStatement	int ipv6only = host ? 1 : 0 ;	396:12:11882:11909	28946	0	True				
ANR	29150	IdentifierDecl	ipv6only = host ? 1 : 0		28946	0					
ANR	29151	IdentifierDeclType	int		28946	0					
ANR	29152	Identifier	ipv6only		28946	1					
ANR	29153	AssignmentExpression	ipv6only = host ? 1 : 0		28946	2		=			
ANR	29154	Identifier	ipv6only		28946	0					
ANR	29155	ConditionalExpression	host ? 1 : 0		28946	1					
ANR	29156	Condition	host		28946	0					
ANR	29157	Identifier	host		28946	0					
ANR	29158	PrimaryExpression	1		28946	1					
ANR	29159	PrimaryExpression	0		28946	2					
ANR	29160	ExpressionStatement	"setsockopt ( listen_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"	397:12:11923:12002	28946	1	True				
ANR	29161	CallExpression	"setsockopt ( listen_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"		28946	0					
ANR	29162	Callee	setsockopt		28946	0					
ANR	29163	Identifier	setsockopt		28946	0					
ANR	29164	ArgumentList	listen_sock		28946	1					
ANR	29165	Argument	listen_sock		28946	0					
ANR	29166	Identifier	listen_sock		28946	0					
ANR	29167	Argument	IPPROTO_IPV6		28946	1					
ANR	29168	Identifier	IPPROTO_IPV6		28946	0					
ANR	29169	Argument	IPV6_V6ONLY		28946	2					
ANR	29170	Identifier	IPV6_V6ONLY		28946	0					
ANR	29171	Argument	& ipv6only		28946	3					
ANR	29172	UnaryOperationExpression	& ipv6only		28946	0					
ANR	29173	UnaryOperator	&		28946	0					
ANR	29174	Identifier	ipv6only		28946	1					
ANR	29175	Argument	sizeof ( ipv6only )		28946	4					
ANR	29176	SizeofExpression	sizeof ( ipv6only )		28946	0					
ANR	29177	Sizeof	sizeof		28946	0					
ANR	29178	SizeofOperand	ipv6only		28946	1					
ANR	29179	IdentifierDeclStatement	int opt = 1 ;	400:8:12023:12034	28946	3	True				
ANR	29180	IdentifierDecl	opt = 1		28946	0					
ANR	29181	IdentifierDeclType	int		28946	0					
ANR	29182	Identifier	opt		28946	1					
ANR	29183	AssignmentExpression	opt = 1		28946	2		=			
ANR	29184	Identifier	opt		28946	0					
ANR	29185	PrimaryExpression	1		28946	1					
ANR	29186	ExpressionStatement	"setsockopt ( listen_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"	401:8:12044:12112	28946	4	True				
ANR	29187	CallExpression	"setsockopt ( listen_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"		28946	0					
ANR	29188	Callee	setsockopt		28946	0					
ANR	29189	Identifier	setsockopt		28946	0					
ANR	29190	ArgumentList	listen_sock		28946	1					
ANR	29191	Argument	listen_sock		28946	0					
ANR	29192	Identifier	listen_sock		28946	0					
ANR	29193	Argument	SOL_SOCKET		28946	1					
ANR	29194	Identifier	SOL_SOCKET		28946	0					
ANR	29195	Argument	SO_REUSEADDR		28946	2					
ANR	29196	Identifier	SO_REUSEADDR		28946	0					
ANR	29197	Argument	& opt		28946	3					
ANR	29198	UnaryOperationExpression	& opt		28946	0					
ANR	29199	UnaryOperator	&		28946	0					
ANR	29200	Identifier	opt		28946	1					
ANR	29201	Argument	sizeof ( opt )		28946	4					
ANR	29202	SizeofExpression	sizeof ( opt )		28946	0					
ANR	29203	Sizeof	sizeof		28946	0					
ANR	29204	SizeofOperand	opt		28946	1					
ANR	29205	ExpressionStatement	"setsockopt ( listen_sock , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"	403:8:12142:12210	28946	5	True				
ANR	29206	CallExpression	"setsockopt ( listen_sock , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"		28946	0					
ANR	29207	Callee	setsockopt		28946	0					
ANR	29208	Identifier	setsockopt		28946	0					
ANR	29209	ArgumentList	listen_sock		28946	1					
ANR	29210	Argument	listen_sock		28946	0					
ANR	29211	Identifier	listen_sock		28946	0					
ANR	29212	Argument	SOL_SOCKET		28946	1					
ANR	29213	Identifier	SOL_SOCKET		28946	0					
ANR	29214	Argument	SO_NOSIGPIPE		28946	2					
ANR	29215	Identifier	SO_NOSIGPIPE		28946	0					
ANR	29216	Argument	& opt		28946	3					
ANR	29217	UnaryOperationExpression	& opt		28946	0					
ANR	29218	UnaryOperator	&		28946	0					
ANR	29219	Identifier	opt		28946	1					
ANR	29220	Argument	sizeof ( opt )		28946	4					
ANR	29221	SizeofExpression	sizeof ( opt )		28946	0					
ANR	29222	Sizeof	sizeof		28946	0					
ANR	29223	SizeofOperand	opt		28946	1					
ANR	29224	ExpressionStatement	"s = bind ( listen_sock , rp -> ai_addr , rp -> ai_addrlen )"	406:8:12228:12278	28946	6	True				
ANR	29225	AssignmentExpression	"s = bind ( listen_sock , rp -> ai_addr , rp -> ai_addrlen )"		28946	0		=			
ANR	29226	Identifier	s		28946	0					
ANR	29227	CallExpression	"bind ( listen_sock , rp -> ai_addr , rp -> ai_addrlen )"		28946	1					
ANR	29228	Callee	bind		28946	0					
ANR	29229	Identifier	bind		28946	0					
ANR	29230	ArgumentList	listen_sock		28946	1					
ANR	29231	Argument	listen_sock		28946	0					
ANR	29232	Identifier	listen_sock		28946	0					
ANR	29233	Argument	rp -> ai_addr		28946	1					
ANR	29234	PtrMemberAccess	rp -> ai_addr		28946	0					
ANR	29235	Identifier	rp		28946	0					
ANR	29236	Identifier	ai_addr		28946	1					
ANR	29237	Argument	rp -> ai_addrlen		28946	2					
ANR	29238	PtrMemberAccess	rp -> ai_addrlen		28946	0					
ANR	29239	Identifier	rp		28946	0					
ANR	29240	Identifier	ai_addrlen		28946	1					
ANR	29241	IfStatement	if ( s == 0 )		28946	7					
ANR	29242	Condition	s == 0	407:12:12292:12297	28946	0	True				
ANR	29243	EqualityExpression	s == 0		28946	0		==			
ANR	29244	Identifier	s		28946	0					
ANR	29245	PrimaryExpression	0		28946	1					
ANR	29246	CompoundStatement		59:20:2101:2101	28946	1					
ANR	29247	ExpressionStatement	close ( listen_sock )	410:12:12366:12384	28946	0	True				
ANR	29248	CallExpression	close ( listen_sock )		28946	0					
ANR	29249	Callee	close		28946	0					
ANR	29250	Identifier	close		28946	0					
ANR	29251	ArgumentList	listen_sock		28946	1					
ANR	29252	Argument	listen_sock		28946	0					
ANR	29253	Identifier	listen_sock		28946	0					
ANR	29254	BreakStatement	break ;	412:12:12399:12404	28946	1	True				
ANR	29255	ElseStatement	else		28946	0					
ANR	29256	CompoundStatement		65:15:2222:2222	28946	0					
ANR	29257	ExpressionStatement	"ERROR ( ""bind"" )"	414:12:12435:12448	28946	0	True				
ANR	29258	CallExpression	"ERROR ( ""bind"" )"		28946	0					
ANR	29259	Callee	ERROR		28946	0					
ANR	29260	Identifier	ERROR		28946	0					
ANR	29261	ArgumentList	"""bind"""		28946	1					
ANR	29262	Argument	"""bind"""		28946	0					
ANR	29263	PrimaryExpression	"""bind"""		28946	0					
ANR	29264	IfStatement	if ( ! result )		28946	13					
ANR	29265	Condition	! result	418:8:12475:12481	28946	0	True				
ANR	29266	UnaryOperationExpression	! result		28946	0					
ANR	29267	UnaryOperator	!		28946	0					
ANR	29268	Identifier	result		28946	1					
ANR	29269	CompoundStatement		70:17:2285:2285	28946	1					
ANR	29270	ExpressionStatement	freeaddrinfo ( result )	419:8:12494:12514	28946	0	True				
ANR	29271	CallExpression	freeaddrinfo ( result )		28946	0					
ANR	29272	Callee	freeaddrinfo		28946	0					
ANR	29273	Identifier	freeaddrinfo		28946	0					
ANR	29274	ArgumentList	result		28946	1					
ANR	29275	Argument	result		28946	0					
ANR	29276	Identifier	result		28946	0					
ANR	29277	IfStatement	if ( rp == NULL )		28946	14					
ANR	29278	Condition	rp == NULL	422:8:12531:12540	28946	0	True				
ANR	29279	EqualityExpression	rp == NULL		28946	0		==			
ANR	29280	Identifier	rp		28946	0					
ANR	29281	Identifier	NULL		28946	1					
ANR	29282	CompoundStatement		74:20:2344:2344	28946	1					
ANR	29283	ExpressionStatement	"LOGE ( ""Could not bind"" )"	423:8:12553:12575	28946	0	True				
ANR	29284	CallExpression	"LOGE ( ""Could not bind"" )"		28946	0					
ANR	29285	Callee	LOGE		28946	0					
ANR	29286	Identifier	LOGE		28946	0					
ANR	29287	ArgumentList	"""Could not bind"""		28946	1					
ANR	29288	Argument	"""Could not bind"""		28946	0					
ANR	29289	PrimaryExpression	"""Could not bind"""		28946	0					
ANR	29290	ReturnStatement	return - 1 ;	424:8:12585:12594	28946	1	True				
ANR	29291	UnaryOperationExpression	- 1		28946	0					
ANR	29292	UnaryOperator	-		28946	0					
ANR	29293	PrimaryExpression	1		28946	1					
ANR	29294	ReturnStatement	return listen_sock ;	427:4:12607:12625	28946	15	True				
ANR	29295	Identifier	listen_sock		28946	0					
ANR	29296	ReturnType	static int		28946	1					
ANR	29297	Identifier	create_and_bind		28946	2					
ANR	29298	ParameterList	"const char * host , const char * port , int protocol"		28946	3					
ANR	29299	Parameter	const char * host	348:16:10148:10163	28946	0	True				
ANR	29300	ParameterType	const char *		28946	0					
ANR	29301	Identifier	host		28946	1					
ANR	29302	Parameter	const char * port	348:34:10166:10181	28946	1	True				
ANR	29303	ParameterType	const char *		28946	0					
ANR	29304	Identifier	port		28946	1					
ANR	29305	Parameter	int protocol	348:52:10184:10195	28946	2	True				
ANR	29306	ParameterType	int		28946	0					
ANR	29307	Identifier	protocol		28946	1					
ANR	29308	CFGEntryNode	ENTRY		28946		True				
ANR	29309	CFGExitNode	EXIT		28946		True				
ANR	29310	Symbol	rp -> ai_addr		28946						
ANR	29311	Symbol	rp -> ai_protocol		28946						
ANR	29312	Symbol	rp -> ai_addrlen		28946						
ANR	29313	Symbol	hints . ai_flags		28946						
ANR	29314	Symbol	gai_strerror		28946						
ANR	29315	Symbol	ipv6only		28946						
ANR	29316	Symbol	AF_UNSPEC		28946						
ANR	29317	Symbol	result		28946						
ANR	29318	Symbol	hints . ai_family		28946						
ANR	29319	Symbol	ipv4v6bindall -> ai_family		28946						
ANR	29320	Symbol	protocol		28946						
ANR	29321	Symbol	SOCK_STREAM		28946						
ANR	29322	Symbol	* ipv4v6bindall		28946						
ANR	29323	Symbol	SO_NOSIGPIPE		28946						
ANR	29324	Symbol	bind		28946						
ANR	29325	Symbol	IPPROTO_TCP		28946						
ANR	29326	Symbol	AI_ADDRCONFIG		28946						
ANR	29327	Symbol	& result		28946						
ANR	29328	Symbol	host		28946						
ANR	29329	Symbol	ipv4v6bindall		28946						
ANR	29330	Symbol	& opt		28946						
ANR	29331	Symbol	& ipv6only		28946						
ANR	29332	Symbol	listen_sock		28946						
ANR	29333	Symbol	& hints		28946						
ANR	29334	Symbol	NULL		28946						
ANR	29335	Symbol	hints		28946						
ANR	29336	Symbol	* rp		28946						
ANR	29337	Symbol	getaddrinfo		28946						
ANR	29338	Symbol	rp -> ai_socktype		28946						
ANR	29339	Symbol	SO_REUSEADDR		28946						
ANR	29340	Symbol	SOCK_DGRAM		28946						
ANR	29341	Symbol	hints . ai_protocol		28946						
ANR	29342	Symbol	AF_INET6		28946						
ANR	29343	Symbol	SOL_SOCKET		28946						
ANR	29344	Symbol	hints . ai_socktype		28946						
ANR	29345	Symbol	IPV6_V6ONLY		28946						
ANR	29346	Symbol	ipv4v6bindall -> ai_next		28946						
ANR	29347	Symbol	opt		28946						
ANR	29348	Symbol	s		28946						
ANR	29349	Symbol	port		28946						
ANR	29350	Symbol	rp -> ai_family		28946						
ANR	29351	Symbol	IPPROTO_IPV6		28946						
ANR	29352	Symbol	socket		28946						
ANR	29353	Symbol	rp -> ai_next		28946						
ANR	29354	Symbol	rp		28946						
ANR	29355	Symbol	AI_PASSIVE		28946						
ANR	29356	Function	check_port	430:0:12630:13895							
ANR	29357	FunctionDef	"check_port (struct manager_ctx * manager , struct server * server)"		29356	0					
ANR	29358	CompoundStatement		432:0:12704:13895	29356	0					
ANR	29359	IdentifierDeclStatement	bool both_tcp_udp = manager -> mode == TCP_AND_UDP ;	433:4:12710:12758	29356	0	True				
ANR	29360	IdentifierDecl	both_tcp_udp = manager -> mode == TCP_AND_UDP		29356	0					
ANR	29361	IdentifierDeclType	bool		29356	0					
ANR	29362	Identifier	both_tcp_udp		29356	1					
ANR	29363	AssignmentExpression	both_tcp_udp = manager -> mode == TCP_AND_UDP		29356	2		=			
ANR	29364	Identifier	both_tcp_udp		29356	0					
ANR	29365	EqualityExpression	manager -> mode == TCP_AND_UDP		29356	1		==			
ANR	29366	PtrMemberAccess	manager -> mode		29356	0					
ANR	29367	Identifier	manager		29356	0					
ANR	29368	Identifier	mode		29356	1					
ANR	29369	Identifier	TCP_AND_UDP		29356	1					
ANR	29370	IdentifierDeclStatement	int fd_count = manager -> host_num * ( both_tcp_udp ? 2 : 1 ) ;	434:4:12764:12826	29356	1	True				
ANR	29371	IdentifierDecl	fd_count = manager -> host_num * ( both_tcp_udp ? 2 : 1 )		29356	0					
ANR	29372	IdentifierDeclType	int		29356	0					
ANR	29373	Identifier	fd_count		29356	1					
ANR	29374	AssignmentExpression	fd_count = manager -> host_num * ( both_tcp_udp ? 2 : 1 )		29356	2		=			
ANR	29375	Identifier	fd_count		29356	0					
ANR	29376	MultiplicativeExpression	manager -> host_num * ( both_tcp_udp ? 2 : 1 )		29356	1		*			
ANR	29377	PtrMemberAccess	manager -> host_num		29356	0					
ANR	29378	Identifier	manager		29356	0					
ANR	29379	Identifier	host_num		29356	1					
ANR	29380	ConditionalExpression	both_tcp_udp ? 2 : 1		29356	1					
ANR	29381	Condition	both_tcp_udp		29356	0					
ANR	29382	Identifier	both_tcp_udp		29356	0					
ANR	29383	PrimaryExpression	2		29356	1					
ANR	29384	PrimaryExpression	1		29356	2					
ANR	29385	IdentifierDeclStatement	int bind_err = 0 ;	435:4:12832:12853	29356	2	True				
ANR	29386	IdentifierDecl	bind_err = 0		29356	0					
ANR	29387	IdentifierDeclType	int		29356	0					
ANR	29388	Identifier	bind_err		29356	1					
ANR	29389	AssignmentExpression	bind_err = 0		29356	2		=			
ANR	29390	Identifier	bind_err		29356	0					
ANR	29391	PrimaryExpression	0		29356	1					
ANR	29392	IdentifierDeclStatement	int * sock_fds = ( int * ) ss_malloc ( fd_count * sizeof ( int ) ) ;	437:4:12860:12916	29356	3	True				
ANR	29393	IdentifierDecl	* sock_fds = ( int * ) ss_malloc ( fd_count * sizeof ( int ) )		29356	0					
ANR	29394	IdentifierDeclType	int *		29356	0					
ANR	29395	Identifier	sock_fds		29356	1					
ANR	29396	AssignmentExpression	* sock_fds = ( int * ) ss_malloc ( fd_count * sizeof ( int ) )		29356	2		=			
ANR	29397	Identifier	sock_fds		29356	0					
ANR	29398	CastExpression	( int * ) ss_malloc ( fd_count * sizeof ( int ) )		29356	1					
ANR	29399	CastTarget	int *		29356	0					
ANR	29400	CallExpression	ss_malloc ( fd_count * sizeof ( int ) )		29356	1					
ANR	29401	Callee	ss_malloc		29356	0					
ANR	29402	Identifier	ss_malloc		29356	0					
ANR	29403	ArgumentList	fd_count * sizeof ( int )		29356	1					
ANR	29404	Argument	fd_count * sizeof ( int )		29356	0					
ANR	29405	MultiplicativeExpression	fd_count * sizeof ( int )		29356	0		*			
ANR	29406	Identifier	fd_count		29356	0					
ANR	29407	SizeofExpression	sizeof ( int )		29356	1					
ANR	29408	Sizeof	sizeof		29356	0					
ANR	29409	SizeofOperand	int		29356	1					
ANR	29410	ExpressionStatement	"memset ( sock_fds , 0 , fd_count * sizeof ( int ) )"	438:4:12922:12965	29356	4	True				
ANR	29411	CallExpression	"memset ( sock_fds , 0 , fd_count * sizeof ( int ) )"		29356	0					
ANR	29412	Callee	memset		29356	0					
ANR	29413	Identifier	memset		29356	0					
ANR	29414	ArgumentList	sock_fds		29356	1					
ANR	29415	Argument	sock_fds		29356	0					
ANR	29416	Identifier	sock_fds		29356	0					
ANR	29417	Argument	0		29356	1					
ANR	29418	PrimaryExpression	0		29356	0					
ANR	29419	Argument	fd_count * sizeof ( int )		29356	2					
ANR	29420	MultiplicativeExpression	fd_count * sizeof ( int )		29356	0		*			
ANR	29421	Identifier	fd_count		29356	0					
ANR	29422	SizeofExpression	sizeof ( int )		29356	1					
ANR	29423	Sizeof	sizeof		29356	0					
ANR	29424	SizeofOperand	int		29356	1					
ANR	29425	ForStatement	for ( int i = 0 ; i < manager -> host_num ; i ++ )		29356	5					
ANR	29426	ForInit	int i = 0 ;	441:9:13014:13023	29356	0	True				
ANR	29427	IdentifierDeclStatement	int i = 0 ;		29356	0					
ANR	29428	IdentifierDecl	i = 0		29356	0					
ANR	29429	IdentifierDeclType	int		29356	0					
ANR	29430	Identifier	i		29356	1					
ANR	29431	AssignmentExpression	i = 0		29356	2		=			
ANR	29432	Identifier	i		29356	0					
ANR	29433	PrimaryExpression	0		29356	1					
ANR	29434	Condition	i < manager -> host_num	441:20:13025:13045	29356	1	True				
ANR	29435	RelationalExpression	i < manager -> host_num		29356	0		<			
ANR	29436	Identifier	i		29356	0					
ANR	29437	PtrMemberAccess	manager -> host_num		29356	1					
ANR	29438	Identifier	manager		29356	0					
ANR	29439	Identifier	host_num		29356	1					
ANR	29440	PostIncDecOperationExpression	i ++	441:43:13048:13050	29356	2	True				
ANR	29441	Identifier	i		29356	0					
ANR	29442	IncDec	++		29356	1					
ANR	29443	CompoundStatement		10:48:348:348	29356	3					
ANR	29444	ExpressionStatement	"LOGI ( ""try to bind interface: %s, port: %s"" , manager -> hosts [ i ] , server -> port )"	442:8:13063:13139	29356	0	True				
ANR	29445	CallExpression	"LOGI ( ""try to bind interface: %s, port: %s"" , manager -> hosts [ i ] , server -> port )"		29356	0					
ANR	29446	Callee	LOGI		29356	0					
ANR	29447	Identifier	LOGI		29356	0					
ANR	29448	ArgumentList	"""try to bind interface: %s, port: %s"""		29356	1					
ANR	29449	Argument	"""try to bind interface: %s, port: %s"""		29356	0					
ANR	29450	PrimaryExpression	"""try to bind interface: %s, port: %s"""		29356	0					
ANR	29451	Argument	manager -> hosts [ i ]		29356	1					
ANR	29452	ArrayIndexing	manager -> hosts [ i ]		29356	0					
ANR	29453	PtrMemberAccess	manager -> hosts		29356	0					
ANR	29454	Identifier	manager		29356	0					
ANR	29455	Identifier	hosts		29356	1					
ANR	29456	Identifier	i		29356	1					
ANR	29457	Argument	server -> port		29356	2					
ANR	29458	PtrMemberAccess	server -> port		29356	0					
ANR	29459	Identifier	server		29356	0					
ANR	29460	Identifier	port		29356	1					
ANR	29461	IfStatement	if ( manager -> mode == UDP_ONLY )		29356	1					
ANR	29462	Condition	manager -> mode == UDP_ONLY	444:12:13154:13178	29356	0	True				
ANR	29463	EqualityExpression	manager -> mode == UDP_ONLY		29356	0		==			
ANR	29464	PtrMemberAccess	manager -> mode		29356	0					
ANR	29465	Identifier	manager		29356	0					
ANR	29466	Identifier	mode		29356	1					
ANR	29467	Identifier	UDP_ONLY		29356	1					
ANR	29468	CompoundStatement		13:39:476:476	29356	1					
ANR	29469	ExpressionStatement	"sock_fds [ i ] = create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_UDP )"	445:12:13195:13270	29356	0	True				
ANR	29470	AssignmentExpression	"sock_fds [ i ] = create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_UDP )"		29356	0		=			
ANR	29471	ArrayIndexing	sock_fds [ i ]		29356	0					
ANR	29472	Identifier	sock_fds		29356	0					
ANR	29473	Identifier	i		29356	1					
ANR	29474	CallExpression	"create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_UDP )"		29356	1					
ANR	29475	Callee	create_and_bind		29356	0					
ANR	29476	Identifier	create_and_bind		29356	0					
ANR	29477	ArgumentList	manager -> hosts [ i ]		29356	1					
ANR	29478	Argument	manager -> hosts [ i ]		29356	0					
ANR	29479	ArrayIndexing	manager -> hosts [ i ]		29356	0					
ANR	29480	PtrMemberAccess	manager -> hosts		29356	0					
ANR	29481	Identifier	manager		29356	0					
ANR	29482	Identifier	hosts		29356	1					
ANR	29483	Identifier	i		29356	1					
ANR	29484	Argument	server -> port		29356	1					
ANR	29485	PtrMemberAccess	server -> port		29356	0					
ANR	29486	Identifier	server		29356	0					
ANR	29487	Identifier	port		29356	1					
ANR	29488	Argument	IPPROTO_UDP		29356	2					
ANR	29489	Identifier	IPPROTO_UDP		29356	0					
ANR	29490	ElseStatement	else		29356	0					
ANR	29491	CompoundStatement		15:15:582:582	29356	0					
ANR	29492	ExpressionStatement	"sock_fds [ i ] = create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_TCP )"	447:12:13301:13376	29356	0	True				
ANR	29493	AssignmentExpression	"sock_fds [ i ] = create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_TCP )"		29356	0		=			
ANR	29494	ArrayIndexing	sock_fds [ i ]		29356	0					
ANR	29495	Identifier	sock_fds		29356	0					
ANR	29496	Identifier	i		29356	1					
ANR	29497	CallExpression	"create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_TCP )"		29356	1					
ANR	29498	Callee	create_and_bind		29356	0					
ANR	29499	Identifier	create_and_bind		29356	0					
ANR	29500	ArgumentList	manager -> hosts [ i ]		29356	1					
ANR	29501	Argument	manager -> hosts [ i ]		29356	0					
ANR	29502	ArrayIndexing	manager -> hosts [ i ]		29356	0					
ANR	29503	PtrMemberAccess	manager -> hosts		29356	0					
ANR	29504	Identifier	manager		29356	0					
ANR	29505	Identifier	hosts		29356	1					
ANR	29506	Identifier	i		29356	1					
ANR	29507	Argument	server -> port		29356	1					
ANR	29508	PtrMemberAccess	server -> port		29356	0					
ANR	29509	Identifier	server		29356	0					
ANR	29510	Identifier	port		29356	1					
ANR	29511	Argument	IPPROTO_TCP		29356	2					
ANR	29512	Identifier	IPPROTO_TCP		29356	0					
ANR	29513	IfStatement	if ( both_tcp_udp )		29356	2					
ANR	29514	Condition	both_tcp_udp	450:12:13401:13412	29356	0	True				
ANR	29515	Identifier	both_tcp_udp		29356	0					
ANR	29516	CompoundStatement		19:26:710:710	29356	1					
ANR	29517	ExpressionStatement	"sock_fds [ i + manager -> host_num ] = create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_UDP )"	451:12:13429:13524	29356	0	True				
ANR	29518	AssignmentExpression	"sock_fds [ i + manager -> host_num ] = create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_UDP )"		29356	0		=			
ANR	29519	ArrayIndexing	sock_fds [ i + manager -> host_num ]		29356	0					
ANR	29520	Identifier	sock_fds		29356	0					
ANR	29521	AdditiveExpression	i + manager -> host_num		29356	1		+			
ANR	29522	Identifier	i		29356	0					
ANR	29523	PtrMemberAccess	manager -> host_num		29356	1					
ANR	29524	Identifier	manager		29356	0					
ANR	29525	Identifier	host_num		29356	1					
ANR	29526	CallExpression	"create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_UDP )"		29356	1					
ANR	29527	Callee	create_and_bind		29356	0					
ANR	29528	Identifier	create_and_bind		29356	0					
ANR	29529	ArgumentList	manager -> hosts [ i ]		29356	1					
ANR	29530	Argument	manager -> hosts [ i ]		29356	0					
ANR	29531	ArrayIndexing	manager -> hosts [ i ]		29356	0					
ANR	29532	PtrMemberAccess	manager -> hosts		29356	0					
ANR	29533	Identifier	manager		29356	0					
ANR	29534	Identifier	hosts		29356	1					
ANR	29535	Identifier	i		29356	1					
ANR	29536	Argument	server -> port		29356	1					
ANR	29537	PtrMemberAccess	server -> port		29356	0					
ANR	29538	Identifier	server		29356	0					
ANR	29539	Identifier	port		29356	1					
ANR	29540	Argument	IPPROTO_UDP		29356	2					
ANR	29541	Identifier	IPPROTO_UDP		29356	0					
ANR	29542	IfStatement	if ( sock_fds [ i ] == - 1 || ( both_tcp_udp && sock_fds [ i + manager -> host_num ] == - 1 ) )		29356	3					
ANR	29543	Condition	sock_fds [ i ] == - 1 || ( both_tcp_udp && sock_fds [ i + manager -> host_num ] == - 1 )	454:12:13549:13624	29356	0	True				
ANR	29544	OrExpression	sock_fds [ i ] == - 1 || ( both_tcp_udp && sock_fds [ i + manager -> host_num ] == - 1 )		29356	0		||			
ANR	29545	EqualityExpression	sock_fds [ i ] == - 1		29356	0		==			
ANR	29546	ArrayIndexing	sock_fds [ i ]		29356	0					
ANR	29547	Identifier	sock_fds		29356	0					
ANR	29548	Identifier	i		29356	1					
ANR	29549	UnaryOperationExpression	- 1		29356	1					
ANR	29550	UnaryOperator	-		29356	0					
ANR	29551	PrimaryExpression	1		29356	1					
ANR	29552	AndExpression	both_tcp_udp && sock_fds [ i + manager -> host_num ] == - 1		29356	1		&&			
ANR	29553	Identifier	both_tcp_udp		29356	0					
ANR	29554	EqualityExpression	sock_fds [ i + manager -> host_num ] == - 1		29356	1		==			
ANR	29555	ArrayIndexing	sock_fds [ i + manager -> host_num ]		29356	0					
ANR	29556	Identifier	sock_fds		29356	0					
ANR	29557	AdditiveExpression	i + manager -> host_num		29356	1		+			
ANR	29558	Identifier	i		29356	0					
ANR	29559	PtrMemberAccess	manager -> host_num		29356	1					
ANR	29560	Identifier	manager		29356	0					
ANR	29561	Identifier	host_num		29356	1					
ANR	29562	UnaryOperationExpression	- 1		29356	1					
ANR	29563	UnaryOperator	-		29356	0					
ANR	29564	PrimaryExpression	1		29356	1					
ANR	29565	CompoundStatement		23:90:922:922	29356	1					
ANR	29566	ExpressionStatement	bind_err = - 1	455:12:13641:13654	29356	0	True				
ANR	29567	AssignmentExpression	bind_err = - 1		29356	0		=			
ANR	29568	Identifier	bind_err		29356	0					
ANR	29569	UnaryOperationExpression	- 1		29356	1					
ANR	29570	UnaryOperator	-		29356	0					
ANR	29571	PrimaryExpression	1		29356	1					
ANR	29572	BreakStatement	break ;	456:12:13668:13673	29356	1	True				
ANR	29573	ForStatement	for ( int i = 0 ; i < fd_count ; i ++ )		29356	6					
ANR	29574	ForInit	int i = 0 ;	461:9:13723:13732	29356	0	True				
ANR	29575	IdentifierDeclStatement	int i = 0 ;		29356	0					
ANR	29576	IdentifierDecl	i = 0		29356	0					
ANR	29577	IdentifierDeclType	int		29356	0					
ANR	29578	Identifier	i		29356	1					
ANR	29579	AssignmentExpression	i = 0		29356	2		=			
ANR	29580	Identifier	i		29356	0					
ANR	29581	PrimaryExpression	0		29356	1					
ANR	29582	Condition	i < fd_count	461:20:13734:13745	29356	1	True				
ANR	29583	RelationalExpression	i < fd_count		29356	0		<			
ANR	29584	Identifier	i		29356	0					
ANR	29585	Identifier	fd_count		29356	1					
ANR	29586	PostIncDecOperationExpression	i ++	461:34:13748:13750	29356	2	True				
ANR	29587	Identifier	i		29356	0					
ANR	29588	IncDec	++		29356	1					
ANR	29589	CompoundStatement		30:39:1048:1048	29356	3					
ANR	29590	IfStatement	if ( sock_fds [ i ] > 0 )		29356	0					
ANR	29591	Condition	sock_fds [ i ] > 0	462:12:13767:13781	29356	0	True				
ANR	29592	RelationalExpression	sock_fds [ i ] > 0		29356	0		>			
ANR	29593	ArrayIndexing	sock_fds [ i ]		29356	0					
ANR	29594	Identifier	sock_fds		29356	0					
ANR	29595	Identifier	i		29356	1					
ANR	29596	PrimaryExpression	0		29356	1					
ANR	29597	CompoundStatement		31:29:1079:1079	29356	1					
ANR	29598	ExpressionStatement	close ( sock_fds [ i ] )	463:12:13798:13816	29356	0	True				
ANR	29599	CallExpression	close ( sock_fds [ i ] )		29356	0					
ANR	29600	Callee	close		29356	0					
ANR	29601	Identifier	close		29356	0					
ANR	29602	ArgumentList	sock_fds [ i ]		29356	1					
ANR	29603	Argument	sock_fds [ i ]		29356	0					
ANR	29604	ArrayIndexing	sock_fds [ i ]		29356	0					
ANR	29605	Identifier	sock_fds		29356	0					
ANR	29606	Identifier	i		29356	1					
ANR	29607	ExpressionStatement	ss_free ( sock_fds )	467:4:13839:13856	29356	7	True				
ANR	29608	CallExpression	ss_free ( sock_fds )		29356	0					
ANR	29609	Callee	ss_free		29356	0					
ANR	29610	Identifier	ss_free		29356	0					
ANR	29611	ArgumentList	sock_fds		29356	1					
ANR	29612	Argument	sock_fds		29356	0					
ANR	29613	Identifier	sock_fds		29356	0					
ANR	29614	ReturnStatement	return bind_err == - 1 ? - 1 : 0 ;	469:4:13863:13893	29356	8	True				
ANR	29615	ConditionalExpression	bind_err == - 1 ? - 1 : 0		29356	0					
ANR	29616	Condition	bind_err == - 1		29356	0					
ANR	29617	EqualityExpression	bind_err == - 1		29356	0		==			
ANR	29618	Identifier	bind_err		29356	0					
ANR	29619	UnaryOperationExpression	- 1		29356	1					
ANR	29620	UnaryOperator	-		29356	0					
ANR	29621	PrimaryExpression	1		29356	1					
ANR	29622	UnaryOperationExpression	- 1		29356	1					
ANR	29623	UnaryOperator	-		29356	0					
ANR	29624	PrimaryExpression	1		29356	1					
ANR	29625	PrimaryExpression	0		29356	2					
ANR	29626	ReturnType	static int		29356	1					
ANR	29627	Identifier	check_port		29356	2					
ANR	29628	ParameterList	"struct manager_ctx * manager , struct server * server"		29356	3					
ANR	29629	Parameter	struct manager_ctx * manager	431:11:12652:12678	29356	0	True				
ANR	29630	ParameterType	struct manager_ctx *		29356	0					
ANR	29631	Identifier	manager		29356	1					
ANR	29632	Parameter	struct server * server	431:40:12681:12701	29356	1	True				
ANR	29633	ParameterType	struct server *		29356	0					
ANR	29634	Identifier	server		29356	1					
ANR	29635	CFGEntryNode	ENTRY		29356		True				
ANR	29636	CFGExitNode	EXIT		29356		True				
ANR	29637	Symbol	server		29356						
ANR	29638	Symbol	sock_fds		29356						
ANR	29639	Symbol	* server		29356						
ANR	29640	Symbol	create_and_bind		29356						
ANR	29641	Symbol	manager		29356						
ANR	29642	Symbol	fd_count		29356						
ANR	29643	Symbol	UDP_ONLY		29356						
ANR	29644	Symbol	* sock_fds		29356						
ANR	29645	Symbol	bind_err		29356						
ANR	29646	Symbol	manager -> hosts		29356						
ANR	29647	Symbol	i		29356						
ANR	29648	Symbol	both_tcp_udp		29356						
ANR	29649	Symbol	* i		29356						
ANR	29650	Symbol	TCP_AND_UDP		29356						
ANR	29651	Symbol	IPPROTO_UDP		29356						
ANR	29652	Symbol	IPPROTO_TCP		29356						
ANR	29653	Symbol	manager -> mode		29356						
ANR	29654	Symbol	* manager -> host_num		29356						
ANR	29655	Symbol	* manager -> hosts		29356						
ANR	29656	Symbol	ss_malloc		29356						
ANR	29657	Symbol	manager -> host_num		29356						
ANR	29658	Symbol	server -> port		29356						
ANR	29659	Symbol	* * manager		29356						
ANR	29660	Symbol	* manager		29356						
ANR	29661	Function	add_server	472:0:13898:14399							
ANR	29662	FunctionDef	"add_server (struct manager_ctx * manager , struct server * server)"		29661	0					
ANR	29663	CompoundStatement		474:0:13972:14399	29661	0					
ANR	29664	IdentifierDeclStatement	"int ret = check_port ( manager , server ) ;"	475:4:13978:14015	29661	0	True				
ANR	29665	IdentifierDecl	"ret = check_port ( manager , server )"		29661	0					
ANR	29666	IdentifierDeclType	int		29661	0					
ANR	29667	Identifier	ret		29661	1					
ANR	29668	AssignmentExpression	"ret = check_port ( manager , server )"		29661	2		=			
ANR	29669	Identifier	ret		29661	0					
ANR	29670	CallExpression	"check_port ( manager , server )"		29661	1					
ANR	29671	Callee	check_port		29661	0					
ANR	29672	Identifier	check_port		29661	0					
ANR	29673	ArgumentList	manager		29661	1					
ANR	29674	Argument	manager		29661	0					
ANR	29675	Identifier	manager		29661	0					
ANR	29676	Argument	server		29661	1					
ANR	29677	Identifier	server		29661	0					
ANR	29678	IfStatement	if ( ret == - 1 )		29661	1					
ANR	29679	Condition	ret == - 1	477:8:14026:14034	29661	0	True				
ANR	29680	EqualityExpression	ret == - 1		29661	0		==			
ANR	29681	Identifier	ret		29661	0					
ANR	29682	UnaryOperationExpression	- 1		29661	1					
ANR	29683	UnaryOperator	-		29661	0					
ANR	29684	PrimaryExpression	1		29661	1					
ANR	29685	CompoundStatement		4:19:64:64	29661	1					
ANR	29686	ExpressionStatement	"LOGE ( ""port is not available, please check."" )"	478:8:14047:14091	29661	0	True				
ANR	29687	CallExpression	"LOGE ( ""port is not available, please check."" )"		29661	0					
ANR	29688	Callee	LOGE		29661	0					
ANR	29689	Identifier	LOGE		29661	0					
ANR	29690	ArgumentList	"""port is not available, please check."""		29661	1					
ANR	29691	Argument	"""port is not available, please check."""		29661	0					
ANR	29692	PrimaryExpression	"""port is not available, please check."""		29661	0					
ANR	29693	ReturnStatement	return - 1 ;	479:8:14101:14110	29661	1	True				
ANR	29694	UnaryOperationExpression	- 1		29661	0					
ANR	29695	UnaryOperator	-		29661	0					
ANR	29696	PrimaryExpression	1		29661	1					
ANR	29697	Statement	bool	482:4:14123:14126	29661	2	True				
ANR	29698	Statement	new	482:9:14128:14130	29661	3	True				
ANR	29699	Statement	=	482:13:14132:14132	29661	4	True				
ANR	29700	ExpressionStatement	false	482:15:14134:14139	29661	5	True				
ANR	29701	Identifier	false		29661	0					
ANR	29702	Statement	cork_hash_table_put	483:4:14145:14163	29661	6	True				
ANR	29703	Statement	(	483:23:14164:14164	29661	7	True				
ANR	29704	Statement	server_table	483:24:14165:14176	29661	8	True				
ANR	29705	Statement	","	483:36:14177:14177	29661	9	True				
ANR	29706	Statement	(	483:38:14179:14179	29661	10	True				
ANR	29707	Statement	void	483:39:14180:14183	29661	11	True				
ANR	29708	Statement	*	483:44:14185:14185	29661	12	True				
ANR	29709	Statement	)	483:45:14186:14186	29661	13	True				
ANR	29710	Statement	server	483:46:14187:14192	29661	14	True				
ANR	29711	Statement	->	483:52:14193:14194	29661	15	True				
ANR	29712	Statement	port	483:54:14195:14198	29661	16	True				
ANR	29713	Statement	","	483:58:14199:14199	29661	17	True				
ANR	29714	Statement	(	483:60:14201:14201	29661	18	True				
ANR	29715	Statement	void	483:61:14202:14205	29661	19	True				
ANR	29716	Statement	*	483:66:14207:14207	29661	20	True				
ANR	29717	Statement	)	483:67:14208:14208	29661	21	True				
ANR	29718	Statement	server	483:68:14209:14214	29661	22	True				
ANR	29719	Statement	","	483:74:14215:14215	29661	23	True				
ANR	29720	Statement	&	483:76:14217:14217	29661	24	True				
ANR	29721	Statement	new	483:77:14218:14220	29661	25	True				
ANR	29722	Statement	","	483:80:14221:14221	29661	26	True				
ANR	29723	Statement	NULL	483:82:14223:14226	29661	27	True				
ANR	29724	Statement	","	483:86:14227:14227	29661	28	True				
ANR	29725	Statement	NULL	483:88:14229:14232	29661	29	True				
ANR	29726	Statement	)	483:92:14233:14233	29661	30	True				
ANR	29727	ExpressionStatement		483:93:14234:14234	29661	31	True				
ANR	29728	IdentifierDeclStatement	"char * cmd = construct_command_line ( manager , server ) ;"	485:4:14241:14292	29661	32	True				
ANR	29729	IdentifierDecl	"* cmd = construct_command_line ( manager , server )"		29661	0					
ANR	29730	IdentifierDeclType	char *		29661	0					
ANR	29731	Identifier	cmd		29661	1					
ANR	29732	AssignmentExpression	"* cmd = construct_command_line ( manager , server )"		29661	2		=			
ANR	29733	Identifier	cmd		29661	0					
ANR	29734	CallExpression	"construct_command_line ( manager , server )"		29661	1					
ANR	29735	Callee	construct_command_line		29661	0					
ANR	29736	Identifier	construct_command_line		29661	0					
ANR	29737	ArgumentList	manager		29661	1					
ANR	29738	Argument	manager		29661	0					
ANR	29739	Identifier	manager		29661	0					
ANR	29740	Argument	server		29661	1					
ANR	29741	Identifier	server		29661	0					
ANR	29742	IfStatement	if ( system ( cmd ) == - 1 )		29661	33					
ANR	29743	Condition	system ( cmd ) == - 1	486:8:14302:14318	29661	0	True				
ANR	29744	EqualityExpression	system ( cmd ) == - 1		29661	0		==			
ANR	29745	CallExpression	system ( cmd )		29661	0					
ANR	29746	Callee	system		29661	0					
ANR	29747	Identifier	system		29661	0					
ANR	29748	ArgumentList	cmd		29661	1					
ANR	29749	Argument	cmd		29661	0					
ANR	29750	Identifier	cmd		29661	0					
ANR	29751	UnaryOperationExpression	- 1		29661	1					
ANR	29752	UnaryOperator	-		29661	0					
ANR	29753	PrimaryExpression	1		29661	1					
ANR	29754	CompoundStatement		13:27:348:348	29661	1					
ANR	29755	ExpressionStatement	"ERROR ( ""add_server_system"" )"	487:8:14331:14357	29661	0	True				
ANR	29756	CallExpression	"ERROR ( ""add_server_system"" )"		29661	0					
ANR	29757	Callee	ERROR		29661	0					
ANR	29758	Identifier	ERROR		29661	0					
ANR	29759	ArgumentList	"""add_server_system"""		29661	1					
ANR	29760	Argument	"""add_server_system"""		29661	0					
ANR	29761	PrimaryExpression	"""add_server_system"""		29661	0					
ANR	29762	ReturnStatement	return - 1 ;	488:8:14367:14376	29661	1	True				
ANR	29763	UnaryOperationExpression	- 1		29661	0					
ANR	29764	UnaryOperator	-		29661	0					
ANR	29765	PrimaryExpression	1		29661	1					
ANR	29766	ReturnStatement	return 0 ;	491:4:14389:14397	29661	34	True				
ANR	29767	PrimaryExpression	0		29661	0					
ANR	29768	ReturnType	static int		29661	1					
ANR	29769	Identifier	add_server		29661	2					
ANR	29770	ParameterList	"struct manager_ctx * manager , struct server * server"		29661	3					
ANR	29771	Parameter	struct manager_ctx * manager	473:11:13920:13946	29661	0	True				
ANR	29772	ParameterType	struct manager_ctx *		29661	0					
ANR	29773	Identifier	manager		29661	1					
ANR	29774	Parameter	struct server * server	473:40:13949:13969	29661	1	True				
ANR	29775	ParameterType	struct server *		29661	0					
ANR	29776	Identifier	server		29661	1					
ANR	29777	CFGEntryNode	ENTRY		29661		True				
ANR	29778	CFGExitNode	EXIT		29661		True				
ANR	29779	Symbol	ret		29661						
ANR	29780	Symbol	server		29661						
ANR	29781	Symbol	check_port		29661						
ANR	29782	Symbol	system		29661						
ANR	29783	Symbol	manager		29661						
ANR	29784	Symbol	construct_command_line		29661						
ANR	29785	Symbol	cmd		29661						
ANR	29786	Function	kill_server	494:0:14402:14938							
ANR	29787	FunctionDef	"kill_server (char * prefix , char * pid_file)"		29786	0					
ANR	29788	CompoundStatement		496:0:14456:14938	29786	0					
ANR	29789	IdentifierDeclStatement	char * path = NULL ;	497:4:14462:14479	29786	0	True				
ANR	29790	IdentifierDecl	* path = NULL		29786	0					
ANR	29791	IdentifierDeclType	char *		29786	0					
ANR	29792	Identifier	path		29786	1					
ANR	29793	AssignmentExpression	* path = NULL		29786	2		=			
ANR	29794	Identifier	NULL		29786	0					
ANR	29795	Identifier	NULL		29786	1					
ANR	29796	IdentifierDeclStatement	"int pid , path_size = strlen ( prefix ) + strlen ( pid_file ) + 2 ;"	498:4:14485:14543	29786	1	True				
ANR	29797	IdentifierDecl	pid		29786	0					
ANR	29798	IdentifierDeclType	int		29786	0					
ANR	29799	Identifier	pid		29786	1					
ANR	29800	IdentifierDecl	path_size = strlen ( prefix ) + strlen ( pid_file ) + 2		29786	1					
ANR	29801	IdentifierDeclType	int		29786	0					
ANR	29802	Identifier	path_size		29786	1					
ANR	29803	AssignmentExpression	path_size = strlen ( prefix ) + strlen ( pid_file ) + 2		29786	2		=			
ANR	29804	Identifier	path_size		29786	0					
ANR	29805	AdditiveExpression	strlen ( prefix ) + strlen ( pid_file ) + 2		29786	1		+			
ANR	29806	CallExpression	strlen ( prefix )		29786	0					
ANR	29807	Callee	strlen		29786	0					
ANR	29808	Identifier	strlen		29786	0					
ANR	29809	ArgumentList	prefix		29786	1					
ANR	29810	Argument	prefix		29786	0					
ANR	29811	Identifier	prefix		29786	0					
ANR	29812	AdditiveExpression	strlen ( pid_file ) + 2		29786	1		+			
ANR	29813	CallExpression	strlen ( pid_file )		29786	0					
ANR	29814	Callee	strlen		29786	0					
ANR	29815	Identifier	strlen		29786	0					
ANR	29816	ArgumentList	pid_file		29786	1					
ANR	29817	Argument	pid_file		29786	0					
ANR	29818	Identifier	pid_file		29786	0					
ANR	29819	PrimaryExpression	2		29786	1					
ANR	29820	ExpressionStatement	path = ss_malloc ( path_size )	499:4:14549:14576	29786	2	True				
ANR	29821	AssignmentExpression	path = ss_malloc ( path_size )		29786	0		=			
ANR	29822	Identifier	path		29786	0					
ANR	29823	CallExpression	ss_malloc ( path_size )		29786	1					
ANR	29824	Callee	ss_malloc		29786	0					
ANR	29825	Identifier	ss_malloc		29786	0					
ANR	29826	ArgumentList	path_size		29786	1					
ANR	29827	Argument	path_size		29786	0					
ANR	29828	Identifier	path_size		29786	0					
ANR	29829	ExpressionStatement	"snprintf ( path , path_size , ""%s/%s"" , prefix , pid_file )"	500:4:14582:14634	29786	3	True				
ANR	29830	CallExpression	"snprintf ( path , path_size , ""%s/%s"" , prefix , pid_file )"		29786	0					
ANR	29831	Callee	snprintf		29786	0					
ANR	29832	Identifier	snprintf		29786	0					
ANR	29833	ArgumentList	path		29786	1					
ANR	29834	Argument	path		29786	0					
ANR	29835	Identifier	path		29786	0					
ANR	29836	Argument	path_size		29786	1					
ANR	29837	Identifier	path_size		29786	0					
ANR	29838	Argument	"""%s/%s"""		29786	2					
ANR	29839	PrimaryExpression	"""%s/%s"""		29786	0					
ANR	29840	Argument	prefix		29786	3					
ANR	29841	Identifier	prefix		29786	0					
ANR	29842	Argument	pid_file		29786	4					
ANR	29843	Identifier	pid_file		29786	0					
ANR	29844	IdentifierDeclStatement	"FILE * f = fopen ( path , ""r"" ) ;"	501:4:14640:14666	29786	4	True				
ANR	29845	IdentifierDecl	"* f = fopen ( path , ""r"" )"		29786	0					
ANR	29846	IdentifierDeclType	FILE *		29786	0					
ANR	29847	Identifier	f		29786	1					
ANR	29848	AssignmentExpression	"* f = fopen ( path , ""r"" )"		29786	2		=			
ANR	29849	Identifier	f		29786	0					
ANR	29850	CallExpression	"fopen ( path , ""r"" )"		29786	1					
ANR	29851	Callee	fopen		29786	0					
ANR	29852	Identifier	fopen		29786	0					
ANR	29853	ArgumentList	path		29786	1					
ANR	29854	Argument	path		29786	0					
ANR	29855	Identifier	path		29786	0					
ANR	29856	Argument	"""r"""		29786	1					
ANR	29857	PrimaryExpression	"""r"""		29786	0					
ANR	29858	IfStatement	if ( f == NULL )		29786	5					
ANR	29859	Condition	f == NULL	502:8:14676:14684	29786	0	True				
ANR	29860	EqualityExpression	f == NULL		29786	0		==			
ANR	29861	Identifier	f		29786	0					
ANR	29862	Identifier	NULL		29786	1					
ANR	29863	CompoundStatement		7:19:230:230	29786	1					
ANR	29864	IfStatement	if ( verbose )		29786	0					
ANR	29865	Condition	verbose	503:12:14701:14707	29786	0	True				
ANR	29866	Identifier	verbose		29786	0					
ANR	29867	CompoundStatement		8:21:253:253	29786	1					
ANR	29868	ExpressionStatement	"LOGE ( ""unable to open pid file"" )"	504:12:14724:14755	29786	0	True				
ANR	29869	CallExpression	"LOGE ( ""unable to open pid file"" )"		29786	0					
ANR	29870	Callee	LOGE		29786	0					
ANR	29871	Identifier	LOGE		29786	0					
ANR	29872	ArgumentList	"""unable to open pid file"""		29786	1					
ANR	29873	Argument	"""unable to open pid file"""		29786	0					
ANR	29874	PrimaryExpression	"""unable to open pid file"""		29786	0					
ANR	29875	ExpressionStatement	ss_free ( path )	506:8:14775:14788	29786	1	True				
ANR	29876	CallExpression	ss_free ( path )		29786	0					
ANR	29877	Callee	ss_free		29786	0					
ANR	29878	Identifier	ss_free		29786	0					
ANR	29879	ArgumentList	path		29786	1					
ANR	29880	Argument	path		29786	0					
ANR	29881	Identifier	path		29786	0					
ANR	29882	ReturnStatement	return ;	507:8:14798:14804	29786	2	True				
ANR	29883	IfStatement	"if ( fscanf ( f , ""%d"" , & pid ) != EOF )"		29786	6					
ANR	29884	Condition	"fscanf ( f , ""%d"" , & pid ) != EOF"	509:8:14820:14847	29786	0	True				
ANR	29885	EqualityExpression	"fscanf ( f , ""%d"" , & pid ) != EOF"		29786	0		!=			
ANR	29886	CallExpression	"fscanf ( f , ""%d"" , & pid )"		29786	0					
ANR	29887	Callee	fscanf		29786	0					
ANR	29888	Identifier	fscanf		29786	0					
ANR	29889	ArgumentList	f		29786	1					
ANR	29890	Argument	f		29786	0					
ANR	29891	Identifier	f		29786	0					
ANR	29892	Argument	"""%d"""		29786	1					
ANR	29893	PrimaryExpression	"""%d"""		29786	0					
ANR	29894	Argument	& pid		29786	2					
ANR	29895	UnaryOperationExpression	& pid		29786	0					
ANR	29896	UnaryOperator	&		29786	0					
ANR	29897	Identifier	pid		29786	1					
ANR	29898	Identifier	EOF		29786	1					
ANR	29899	CompoundStatement		14:38:393:393	29786	1					
ANR	29900	ExpressionStatement	"kill ( pid , SIGTERM )"	510:8:14860:14878	29786	0	True				
ANR	29901	CallExpression	"kill ( pid , SIGTERM )"		29786	0					
ANR	29902	Callee	kill		29786	0					
ANR	29903	Identifier	kill		29786	0					
ANR	29904	ArgumentList	pid		29786	1					
ANR	29905	Argument	pid		29786	0					
ANR	29906	Identifier	pid		29786	0					
ANR	29907	Argument	SIGTERM		29786	1					
ANR	29908	Identifier	SIGTERM		29786	0					
ANR	29909	ExpressionStatement	fclose ( f )	512:4:14890:14899	29786	7	True				
ANR	29910	CallExpression	fclose ( f )		29786	0					
ANR	29911	Callee	fclose		29786	0					
ANR	29912	Identifier	fclose		29786	0					
ANR	29913	ArgumentList	f		29786	1					
ANR	29914	Argument	f		29786	0					
ANR	29915	Identifier	f		29786	0					
ANR	29916	ExpressionStatement	remove ( path )	513:4:14905:14917	29786	8	True				
ANR	29917	CallExpression	remove ( path )		29786	0					
ANR	29918	Callee	remove		29786	0					
ANR	29919	Identifier	remove		29786	0					
ANR	29920	ArgumentList	path		29786	1					
ANR	29921	Argument	path		29786	0					
ANR	29922	Identifier	path		29786	0					
ANR	29923	ExpressionStatement	ss_free ( path )	514:4:14923:14936	29786	9	True				
ANR	29924	CallExpression	ss_free ( path )		29786	0					
ANR	29925	Callee	ss_free		29786	0					
ANR	29926	Identifier	ss_free		29786	0					
ANR	29927	ArgumentList	path		29786	1					
ANR	29928	Argument	path		29786	0					
ANR	29929	Identifier	path		29786	0					
ANR	29930	ReturnType	static void		29786	1					
ANR	29931	Identifier	kill_server		29786	2					
ANR	29932	ParameterList	"char * prefix , char * pid_file"		29786	3					
ANR	29933	Parameter	char * prefix	495:12:14426:14437	29786	0	True				
ANR	29934	ParameterType	char *		29786	0					
ANR	29935	Identifier	prefix		29786	1					
ANR	29936	Parameter	char * pid_file	495:26:14440:14453	29786	1	True				
ANR	29937	ParameterType	char *		29786	0					
ANR	29938	Identifier	pid_file		29786	1					
ANR	29939	CFGEntryNode	ENTRY		29786		True				
ANR	29940	CFGExitNode	EXIT		29786		True				
ANR	29941	Symbol	fopen		29786						
ANR	29942	Symbol	NULL		29786						
ANR	29943	Symbol	path_size		29786						
ANR	29944	Symbol	prefix		29786						
ANR	29945	Symbol	f		29786						
ANR	29946	Symbol	pid		29786						
ANR	29947	Symbol	verbose		29786						
ANR	29948	Symbol	pid_file		29786						
ANR	29949	Symbol	path		29786						
ANR	29950	Symbol	strlen		29786						
ANR	29951	Symbol	fscanf		29786						
ANR	29952	Symbol	& pid		29786						
ANR	29953	Symbol	ss_malloc		29786						
ANR	29954	Symbol	SIGTERM		29786						
ANR	29955	Symbol	EOF		29786						
ANR	29956	Function	stop_server	517:0:14941:15465							
ANR	29957	FunctionDef	"stop_server (char * prefix , char * port)"		29956	0					
ANR	29958	CompoundStatement		519:0:14991:15465	29956	0					
ANR	29959	IdentifierDeclStatement	char * path = NULL ;	520:4:14997:15014	29956	0	True				
ANR	29960	IdentifierDecl	* path = NULL		29956	0					
ANR	29961	IdentifierDeclType	char *		29956	0					
ANR	29962	Identifier	path		29956	1					
ANR	29963	AssignmentExpression	* path = NULL		29956	2		=			
ANR	29964	Identifier	NULL		29956	0					
ANR	29965	Identifier	NULL		29956	1					
ANR	29966	IdentifierDeclStatement	"int pid , path_size = strlen ( prefix ) + strlen ( port ) + 20 ;"	521:4:15020:15075	29956	1	True				
ANR	29967	IdentifierDecl	pid		29956	0					
ANR	29968	IdentifierDeclType	int		29956	0					
ANR	29969	Identifier	pid		29956	1					
ANR	29970	IdentifierDecl	path_size = strlen ( prefix ) + strlen ( port ) + 20		29956	1					
ANR	29971	IdentifierDeclType	int		29956	0					
ANR	29972	Identifier	path_size		29956	1					
ANR	29973	AssignmentExpression	path_size = strlen ( prefix ) + strlen ( port ) + 20		29956	2		=			
ANR	29974	Identifier	path_size		29956	0					
ANR	29975	AdditiveExpression	strlen ( prefix ) + strlen ( port ) + 20		29956	1		+			
ANR	29976	CallExpression	strlen ( prefix )		29956	0					
ANR	29977	Callee	strlen		29956	0					
ANR	29978	Identifier	strlen		29956	0					
ANR	29979	ArgumentList	prefix		29956	1					
ANR	29980	Argument	prefix		29956	0					
ANR	29981	Identifier	prefix		29956	0					
ANR	29982	AdditiveExpression	strlen ( port ) + 20		29956	1		+			
ANR	29983	CallExpression	strlen ( port )		29956	0					
ANR	29984	Callee	strlen		29956	0					
ANR	29985	Identifier	strlen		29956	0					
ANR	29986	ArgumentList	port		29956	1					
ANR	29987	Argument	port		29956	0					
ANR	29988	Identifier	port		29956	0					
ANR	29989	PrimaryExpression	20		29956	1					
ANR	29990	ExpressionStatement	path = ss_malloc ( path_size )	522:4:15081:15108	29956	2	True				
ANR	29991	AssignmentExpression	path = ss_malloc ( path_size )		29956	0		=			
ANR	29992	Identifier	path		29956	0					
ANR	29993	CallExpression	ss_malloc ( path_size )		29956	1					
ANR	29994	Callee	ss_malloc		29956	0					
ANR	29995	Identifier	ss_malloc		29956	0					
ANR	29996	ArgumentList	path_size		29956	1					
ANR	29997	Argument	path_size		29956	0					
ANR	29998	Identifier	path_size		29956	0					
ANR	29999	ExpressionStatement	"snprintf ( path , path_size , ""%s/.shadowsocks_%s.pid"" , prefix , port )"	523:4:15114:15179	29956	3	True				
ANR	30000	CallExpression	"snprintf ( path , path_size , ""%s/.shadowsocks_%s.pid"" , prefix , port )"		29956	0					
ANR	30001	Callee	snprintf		29956	0					
ANR	30002	Identifier	snprintf		29956	0					
ANR	30003	ArgumentList	path		29956	1					
ANR	30004	Argument	path		29956	0					
ANR	30005	Identifier	path		29956	0					
ANR	30006	Argument	path_size		29956	1					
ANR	30007	Identifier	path_size		29956	0					
ANR	30008	Argument	"""%s/.shadowsocks_%s.pid"""		29956	2					
ANR	30009	PrimaryExpression	"""%s/.shadowsocks_%s.pid"""		29956	0					
ANR	30010	Argument	prefix		29956	3					
ANR	30011	Identifier	prefix		29956	0					
ANR	30012	Argument	port		29956	4					
ANR	30013	Identifier	port		29956	0					
ANR	30014	IdentifierDeclStatement	"FILE * f = fopen ( path , ""r"" ) ;"	524:4:15185:15211	29956	4	True				
ANR	30015	IdentifierDecl	"* f = fopen ( path , ""r"" )"		29956	0					
ANR	30016	IdentifierDeclType	FILE *		29956	0					
ANR	30017	Identifier	f		29956	1					
ANR	30018	AssignmentExpression	"* f = fopen ( path , ""r"" )"		29956	2		=			
ANR	30019	Identifier	f		29956	0					
ANR	30020	CallExpression	"fopen ( path , ""r"" )"		29956	1					
ANR	30021	Callee	fopen		29956	0					
ANR	30022	Identifier	fopen		29956	0					
ANR	30023	ArgumentList	path		29956	1					
ANR	30024	Argument	path		29956	0					
ANR	30025	Identifier	path		29956	0					
ANR	30026	Argument	"""r"""		29956	1					
ANR	30027	PrimaryExpression	"""r"""		29956	0					
ANR	30028	IfStatement	if ( f == NULL )		29956	5					
ANR	30029	Condition	f == NULL	525:8:15221:15229	29956	0	True				
ANR	30030	EqualityExpression	f == NULL		29956	0		==			
ANR	30031	Identifier	f		29956	0					
ANR	30032	Identifier	NULL		29956	1					
ANR	30033	CompoundStatement		7:19:240:240	29956	1					
ANR	30034	IfStatement	if ( verbose )		29956	0					
ANR	30035	Condition	verbose	526:12:15246:15252	29956	0	True				
ANR	30036	Identifier	verbose		29956	0					
ANR	30037	CompoundStatement		8:21:263:263	29956	1					
ANR	30038	ExpressionStatement	"LOGE ( ""unable to open pid file"" )"	527:12:15269:15300	29956	0	True				
ANR	30039	CallExpression	"LOGE ( ""unable to open pid file"" )"		29956	0					
ANR	30040	Callee	LOGE		29956	0					
ANR	30041	Identifier	LOGE		29956	0					
ANR	30042	ArgumentList	"""unable to open pid file"""		29956	1					
ANR	30043	Argument	"""unable to open pid file"""		29956	0					
ANR	30044	PrimaryExpression	"""unable to open pid file"""		29956	0					
ANR	30045	ExpressionStatement	ss_free ( path )	529:8:15320:15333	29956	1	True				
ANR	30046	CallExpression	ss_free ( path )		29956	0					
ANR	30047	Callee	ss_free		29956	0					
ANR	30048	Identifier	ss_free		29956	0					
ANR	30049	ArgumentList	path		29956	1					
ANR	30050	Argument	path		29956	0					
ANR	30051	Identifier	path		29956	0					
ANR	30052	ReturnStatement	return ;	530:8:15343:15349	29956	2	True				
ANR	30053	IfStatement	"if ( fscanf ( f , ""%d"" , & pid ) != EOF )"		29956	6					
ANR	30054	Condition	"fscanf ( f , ""%d"" , & pid ) != EOF"	532:8:15365:15392	29956	0	True				
ANR	30055	EqualityExpression	"fscanf ( f , ""%d"" , & pid ) != EOF"		29956	0		!=			
ANR	30056	CallExpression	"fscanf ( f , ""%d"" , & pid )"		29956	0					
ANR	30057	Callee	fscanf		29956	0					
ANR	30058	Identifier	fscanf		29956	0					
ANR	30059	ArgumentList	f		29956	1					
ANR	30060	Argument	f		29956	0					
ANR	30061	Identifier	f		29956	0					
ANR	30062	Argument	"""%d"""		29956	1					
ANR	30063	PrimaryExpression	"""%d"""		29956	0					
ANR	30064	Argument	& pid		29956	2					
ANR	30065	UnaryOperationExpression	& pid		29956	0					
ANR	30066	UnaryOperator	&		29956	0					
ANR	30067	Identifier	pid		29956	1					
ANR	30068	Identifier	EOF		29956	1					
ANR	30069	CompoundStatement		14:38:403:403	29956	1					
ANR	30070	ExpressionStatement	"kill ( pid , SIGTERM )"	533:8:15405:15423	29956	0	True				
ANR	30071	CallExpression	"kill ( pid , SIGTERM )"		29956	0					
ANR	30072	Callee	kill		29956	0					
ANR	30073	Identifier	kill		29956	0					
ANR	30074	ArgumentList	pid		29956	1					
ANR	30075	Argument	pid		29956	0					
ANR	30076	Identifier	pid		29956	0					
ANR	30077	Argument	SIGTERM		29956	1					
ANR	30078	Identifier	SIGTERM		29956	0					
ANR	30079	ExpressionStatement	fclose ( f )	535:4:15435:15444	29956	7	True				
ANR	30080	CallExpression	fclose ( f )		29956	0					
ANR	30081	Callee	fclose		29956	0					
ANR	30082	Identifier	fclose		29956	0					
ANR	30083	ArgumentList	f		29956	1					
ANR	30084	Argument	f		29956	0					
ANR	30085	Identifier	f		29956	0					
ANR	30086	ExpressionStatement	ss_free ( path )	536:4:15450:15463	29956	8	True				
ANR	30087	CallExpression	ss_free ( path )		29956	0					
ANR	30088	Callee	ss_free		29956	0					
ANR	30089	Identifier	ss_free		29956	0					
ANR	30090	ArgumentList	path		29956	1					
ANR	30091	Argument	path		29956	0					
ANR	30092	Identifier	path		29956	0					
ANR	30093	ReturnType	static void		29956	1					
ANR	30094	Identifier	stop_server		29956	2					
ANR	30095	ParameterList	"char * prefix , char * port"		29956	3					
ANR	30096	Parameter	char * prefix	518:12:14965:14976	29956	0	True				
ANR	30097	ParameterType	char *		29956	0					
ANR	30098	Identifier	prefix		29956	1					
ANR	30099	Parameter	char * port	518:26:14979:14988	29956	1	True				
ANR	30100	ParameterType	char *		29956	0					
ANR	30101	Identifier	port		29956	1					
ANR	30102	CFGEntryNode	ENTRY		29956		True				
ANR	30103	CFGExitNode	EXIT		29956		True				
ANR	30104	Symbol	fopen		29956						
ANR	30105	Symbol	NULL		29956						
ANR	30106	Symbol	path_size		29956						
ANR	30107	Symbol	prefix		29956						
ANR	30108	Symbol	f		29956						
ANR	30109	Symbol	pid		29956						
ANR	30110	Symbol	verbose		29956						
ANR	30111	Symbol	path		29956						
ANR	30112	Symbol	strlen		29956						
ANR	30113	Symbol	fscanf		29956						
ANR	30114	Symbol	port		29956						
ANR	30115	Symbol	& pid		29956						
ANR	30116	Symbol	ss_malloc		29956						
ANR	30117	Symbol	SIGTERM		29956						
ANR	30118	Symbol	EOF		29956						
ANR	30119	Function	remove_server	539:0:15468:15831							
ANR	30120	FunctionDef	"remove_server (char * prefix , char * port)"		30119	0					
ANR	30121	CompoundStatement		541:0:15520:15831	30119	0					
ANR	30122	IdentifierDeclStatement	char * old_port = NULL ;	542:4:15526:15558	30119	0	True				
ANR	30123	IdentifierDecl	* old_port = NULL		30119	0					
ANR	30124	IdentifierDeclType	char *		30119	0					
ANR	30125	Identifier	old_port		30119	1					
ANR	30126	AssignmentExpression	* old_port = NULL		30119	2		=			
ANR	30127	Identifier	NULL		30119	0					
ANR	30128	Identifier	NULL		30119	1					
ANR	30129	IdentifierDeclStatement	struct server * old_server = NULL ;	543:4:15564:15596	30119	1	True				
ANR	30130	IdentifierDecl	* old_server = NULL		30119	0					
ANR	30131	IdentifierDeclType	struct server *		30119	0					
ANR	30132	Identifier	old_server		30119	1					
ANR	30133	AssignmentExpression	* old_server = NULL		30119	2		=			
ANR	30134	Identifier	NULL		30119	0					
ANR	30135	Identifier	NULL		30119	1					
ANR	30136	ExpressionStatement	"cork_hash_table_delete ( server_table , ( void * ) port , ( void * * ) & old_port , ( void * * ) & old_server )"	545:4:15603:15695	30119	2	True				
ANR	30137	CallExpression	"cork_hash_table_delete ( server_table , ( void * ) port , ( void * * ) & old_port , ( void * * ) & old_server )"		30119	0					
ANR	30138	Callee	cork_hash_table_delete		30119	0					
ANR	30139	Identifier	cork_hash_table_delete		30119	0					
ANR	30140	ArgumentList	server_table		30119	1					
ANR	30141	Argument	server_table		30119	0					
ANR	30142	Identifier	server_table		30119	0					
ANR	30143	Argument	( void * ) port		30119	1					
ANR	30144	CastExpression	( void * ) port		30119	0					
ANR	30145	CastTarget	void *		30119	0					
ANR	30146	Identifier	port		30119	1					
ANR	30147	Argument	( void * * ) & old_port		30119	2					
ANR	30148	CastExpression	( void * * ) & old_port		30119	0					
ANR	30149	CastTarget	void * *		30119	0					
ANR	30150	UnaryOperationExpression	& old_port		30119	1					
ANR	30151	UnaryOperator	&		30119	0					
ANR	30152	Identifier	old_port		30119	1					
ANR	30153	Argument	( void * * ) & old_server		30119	3					
ANR	30154	CastExpression	( void * * ) & old_server		30119	0					
ANR	30155	CastTarget	void * *		30119	0					
ANR	30156	UnaryOperationExpression	& old_server		30119	1					
ANR	30157	UnaryOperator	&		30119	0					
ANR	30158	Identifier	old_server		30119	1					
ANR	30159	IfStatement	if ( old_server != NULL )		30119	3					
ANR	30160	Condition	old_server != NULL	547:8:15706:15723	30119	0	True				
ANR	30161	EqualityExpression	old_server != NULL		30119	0		!=			
ANR	30162	Identifier	old_server		30119	0					
ANR	30163	Identifier	NULL		30119	1					
ANR	30164	CompoundStatement		7:28:205:205	30119	1					
ANR	30165	ExpressionStatement	destroy_server ( old_server )	548:8:15736:15762	30119	0	True				
ANR	30166	CallExpression	destroy_server ( old_server )		30119	0					
ANR	30167	Callee	destroy_server		30119	0					
ANR	30168	Identifier	destroy_server		30119	0					
ANR	30169	ArgumentList	old_server		30119	1					
ANR	30170	Argument	old_server		30119	0					
ANR	30171	Identifier	old_server		30119	0					
ANR	30172	ExpressionStatement	ss_free ( old_server )	549:8:15772:15791	30119	1	True				
ANR	30173	CallExpression	ss_free ( old_server )		30119	0					
ANR	30174	Callee	ss_free		30119	0					
ANR	30175	Identifier	ss_free		30119	0					
ANR	30176	ArgumentList	old_server		30119	1					
ANR	30177	Argument	old_server		30119	0					
ANR	30178	Identifier	old_server		30119	0					
ANR	30179	ExpressionStatement	"stop_server ( prefix , port )"	552:4:15804:15829	30119	4	True				
ANR	30180	CallExpression	"stop_server ( prefix , port )"		30119	0					
ANR	30181	Callee	stop_server		30119	0					
ANR	30182	Identifier	stop_server		30119	0					
ANR	30183	ArgumentList	prefix		30119	1					
ANR	30184	Argument	prefix		30119	0					
ANR	30185	Identifier	prefix		30119	0					
ANR	30186	Argument	port		30119	1					
ANR	30187	Identifier	port		30119	0					
ANR	30188	ReturnType	static void		30119	1					
ANR	30189	Identifier	remove_server		30119	2					
ANR	30190	ParameterList	"char * prefix , char * port"		30119	3					
ANR	30191	Parameter	char * prefix	540:14:15494:15505	30119	0	True				
ANR	30192	ParameterType	char *		30119	0					
ANR	30193	Identifier	prefix		30119	1					
ANR	30194	Parameter	char * port	540:28:15508:15517	30119	1	True				
ANR	30195	ParameterType	char *		30119	0					
ANR	30196	Identifier	port		30119	1					
ANR	30197	CFGEntryNode	ENTRY		30119		True				
ANR	30198	CFGExitNode	EXIT		30119		True				
ANR	30199	Symbol	NULL		30119						
ANR	30200	Symbol	server_table		30119						
ANR	30201	Symbol	port		30119						
ANR	30202	Symbol	old_server		30119						
ANR	30203	Symbol	prefix		30119						
ANR	30204	Symbol	& old_server		30119						
ANR	30205	Symbol	old_port		30119						
ANR	30206	Symbol	& old_port		30119						
ANR	30207	Function	update_stat	555:0:15834:16169							
ANR	30208	FunctionDef	"update_stat (char * port , uint64_t traffic)"		30207	0					
ANR	30209	CompoundStatement		557:0:15888:16169	30207	0					
ANR	30210	IfStatement	if ( verbose )		30207	0					
ANR	30211	Condition	verbose	558:8:15898:15904	30207	0	True				
ANR	30212	Identifier	verbose		30207	0					
ANR	30213	CompoundStatement		2:17:18:18	30207	1					
ANR	30214	Statement	LOGI	559:8:15917:15920	30207	0	True				
ANR	30215	Statement	(	559:12:15921:15921	30207	1	True				
ANR	30216	Statement	"""update traffic %"""	559:13:15922:15939	30207	2	True				
ANR	30217	Statement	PRIu64	559:32:15941:15946	30207	3	True				
ANR	30218	Statement	""" for port %s"""	559:39:15948:15961	30207	4	True				
ANR	30219	Statement	","	559:53:15962:15962	30207	5	True				
ANR	30220	Statement	traffic	559:55:15964:15970	30207	6	True				
ANR	30221	Statement	","	559:62:15971:15971	30207	7	True				
ANR	30222	Statement	port	559:64:15973:15976	30207	8	True				
ANR	30223	Statement	)	559:68:15977:15977	30207	9	True				
ANR	30224	ExpressionStatement		559:69:15978:15978	30207	10	True				
ANR	30225	IdentifierDeclStatement	"void * ret = cork_hash_table_get ( server_table , ( void * ) port ) ;"	561:4:15990:16049	30207	1	True				
ANR	30226	IdentifierDecl	"* ret = cork_hash_table_get ( server_table , ( void * ) port )"		30207	0					
ANR	30227	IdentifierDeclType	void *		30207	0					
ANR	30228	Identifier	ret		30207	1					
ANR	30229	AssignmentExpression	"* ret = cork_hash_table_get ( server_table , ( void * ) port )"		30207	2		=			
ANR	30230	Identifier	ret		30207	0					
ANR	30231	CallExpression	"cork_hash_table_get ( server_table , ( void * ) port )"		30207	1					
ANR	30232	Callee	cork_hash_table_get		30207	0					
ANR	30233	Identifier	cork_hash_table_get		30207	0					
ANR	30234	ArgumentList	server_table		30207	1					
ANR	30235	Argument	server_table		30207	0					
ANR	30236	Identifier	server_table		30207	0					
ANR	30237	Argument	( void * ) port		30207	1					
ANR	30238	CastExpression	( void * ) port		30207	0					
ANR	30239	CastTarget	void *		30207	0					
ANR	30240	Identifier	port		30207	1					
ANR	30241	IfStatement	if ( ret != NULL )		30207	2					
ANR	30242	Condition	ret != NULL	562:8:16059:16069	30207	0	True				
ANR	30243	EqualityExpression	ret != NULL		30207	0		!=			
ANR	30244	Identifier	ret		30207	0					
ANR	30245	Identifier	NULL		30207	1					
ANR	30246	CompoundStatement		7:8:193:237	30207	1					
ANR	30247	IdentifierDeclStatement	struct server * server = ( struct server * ) ret ;	563:8:16082:16126	30207	0	True				
ANR	30248	IdentifierDecl	* server = ( struct server * ) ret		30207	0					
ANR	30249	IdentifierDeclType	struct server *		30207	0					
ANR	30250	Identifier	server		30207	1					
ANR	30251	AssignmentExpression	* server = ( struct server * ) ret		30207	2		=			
ANR	30252	Identifier	server		30207	0					
ANR	30253	CastExpression	( struct server * ) ret		30207	1					
ANR	30254	CastTarget	struct server *		30207	0					
ANR	30255	Identifier	ret		30207	1					
ANR	30256	ExpressionStatement	server -> traffic = traffic	564:8:16136:16161	30207	1	True				
ANR	30257	AssignmentExpression	server -> traffic = traffic		30207	0		=			
ANR	30258	PtrMemberAccess	server -> traffic		30207	0					
ANR	30259	Identifier	server		30207	0					
ANR	30260	Identifier	traffic		30207	1					
ANR	30261	Identifier	traffic		30207	1					
ANR	30262	ReturnType	static void		30207	1					
ANR	30263	Identifier	update_stat		30207	2					
ANR	30264	ParameterList	"char * port , uint64_t traffic"		30207	3					
ANR	30265	Parameter	char * port	556:12:15858:15867	30207	0	True				
ANR	30266	ParameterType	char *		30207	0					
ANR	30267	Identifier	port		30207	1					
ANR	30268	Parameter	uint64_t traffic	556:24:15870:15885	30207	1	True				
ANR	30269	ParameterType	uint64_t		30207	0					
ANR	30270	Identifier	traffic		30207	1					
ANR	30271	CFGEntryNode	ENTRY		30207		True				
ANR	30272	CFGExitNode	EXIT		30207		True				
ANR	30273	Symbol	ret		30207						
ANR	30274	Symbol	server		30207						
ANR	30275	Symbol	server_table		30207						
ANR	30276	Symbol	NULL		30207						
ANR	30277	Symbol	* server		30207						
ANR	30278	Symbol	port		30207						
ANR	30279	Symbol	server -> traffic		30207						
ANR	30280	Symbol	cork_hash_table_get		30207						
ANR	30281	Symbol	traffic		30207						
ANR	30282	Symbol	verbose		30207						
ANR	30283	Function	manager_recv_cb	568:0:16172:21383							
ANR	30284	FunctionDef	"manager_recv_cb (EV_P_ ev_io * w , int revents)"		30283	0					
ANR	30285	CompoundStatement		570:0:16229:21383	30283	0					
ANR	30286	IdentifierDeclStatement	struct manager_ctx * manager = ( struct manager_ctx * ) w ;	571:4:16235:16288	30283	0	True				
ANR	30287	IdentifierDecl	* manager = ( struct manager_ctx * ) w		30283	0					
ANR	30288	IdentifierDeclType	struct manager_ctx *		30283	0					
ANR	30289	Identifier	manager		30283	1					
ANR	30290	AssignmentExpression	* manager = ( struct manager_ctx * ) w		30283	2		=			
ANR	30291	Identifier	manager		30283	0					
ANR	30292	CastExpression	( struct manager_ctx * ) w		30283	1					
ANR	30293	CastTarget	struct manager_ctx *		30283	0					
ANR	30294	Identifier	w		30283	1					
ANR	30295	IdentifierDeclStatement	socklen_t len ;	572:4:16294:16307	30283	1	True				
ANR	30296	IdentifierDecl	len		30283	0					
ANR	30297	IdentifierDeclType	socklen_t		30283	0					
ANR	30298	Identifier	len		30283	1					
ANR	30299	IdentifierDeclStatement	ssize_t r ;	573:4:16313:16322	30283	2	True				
ANR	30300	IdentifierDecl	r		30283	0					
ANR	30301	IdentifierDeclType	ssize_t		30283	0					
ANR	30302	Identifier	r		30283	1					
ANR	30303	IdentifierDeclStatement	struct sockaddr_un claddr ;	574:4:16328:16353	30283	3	True				
ANR	30304	IdentifierDecl	claddr		30283	0					
ANR	30305	IdentifierDeclType	struct sockaddr_un		30283	0					
ANR	30306	Identifier	claddr		30283	1					
ANR	30307	IdentifierDeclStatement	char buf [ BUF_SIZE ] ;	575:4:16359:16377	30283	4	True				
ANR	30308	IdentifierDecl	buf [ BUF_SIZE ]		30283	0					
ANR	30309	IdentifierDeclType	char [ BUF_SIZE ]		30283	0					
ANR	30310	Identifier	buf		30283	1					
ANR	30311	Identifier	BUF_SIZE		30283	2					
ANR	30312	ExpressionStatement	"memset ( buf , 0 , BUF_SIZE )"	577:4:16384:16408	30283	5	True				
ANR	30313	CallExpression	"memset ( buf , 0 , BUF_SIZE )"		30283	0					
ANR	30314	Callee	memset		30283	0					
ANR	30315	Identifier	memset		30283	0					
ANR	30316	ArgumentList	buf		30283	1					
ANR	30317	Argument	buf		30283	0					
ANR	30318	Identifier	buf		30283	0					
ANR	30319	Argument	0		30283	1					
ANR	30320	PrimaryExpression	0		30283	0					
ANR	30321	Argument	BUF_SIZE		30283	2					
ANR	30322	Identifier	BUF_SIZE		30283	0					
ANR	30323	ExpressionStatement	len = sizeof ( struct sockaddr_un )	579:4:16415:16447	30283	6	True				
ANR	30324	AssignmentExpression	len = sizeof ( struct sockaddr_un )		30283	0		=			
ANR	30325	Identifier	len		30283	0					
ANR	30326	SizeofExpression	sizeof ( struct sockaddr_un )		30283	1					
ANR	30327	Sizeof	sizeof		30283	0					
ANR	30328	SizeofOperand	struct sockaddr_un		30283	1					
ANR	30329	ExpressionStatement	"r = recvfrom ( manager -> fd , buf , BUF_SIZE , 0 , ( struct sockaddr * ) & claddr , & len )"	580:4:16453:16532	30283	7	True				
ANR	30330	AssignmentExpression	"r = recvfrom ( manager -> fd , buf , BUF_SIZE , 0 , ( struct sockaddr * ) & claddr , & len )"		30283	0		=			
ANR	30331	Identifier	r		30283	0					
ANR	30332	CallExpression	"recvfrom ( manager -> fd , buf , BUF_SIZE , 0 , ( struct sockaddr * ) & claddr , & len )"		30283	1					
ANR	30333	Callee	recvfrom		30283	0					
ANR	30334	Identifier	recvfrom		30283	0					
ANR	30335	ArgumentList	manager -> fd		30283	1					
ANR	30336	Argument	manager -> fd		30283	0					
ANR	30337	PtrMemberAccess	manager -> fd		30283	0					
ANR	30338	Identifier	manager		30283	0					
ANR	30339	Identifier	fd		30283	1					
ANR	30340	Argument	buf		30283	1					
ANR	30341	Identifier	buf		30283	0					
ANR	30342	Argument	BUF_SIZE		30283	2					
ANR	30343	Identifier	BUF_SIZE		30283	0					
ANR	30344	Argument	0		30283	3					
ANR	30345	PrimaryExpression	0		30283	0					
ANR	30346	Argument	( struct sockaddr * ) & claddr		30283	4					
ANR	30347	CastExpression	( struct sockaddr * ) & claddr		30283	0					
ANR	30348	CastTarget	struct sockaddr *		30283	0					
ANR	30349	UnaryOperationExpression	& claddr		30283	1					
ANR	30350	UnaryOperator	&		30283	0					
ANR	30351	Identifier	claddr		30283	1					
ANR	30352	Argument	& len		30283	5					
ANR	30353	UnaryOperationExpression	& len		30283	0					
ANR	30354	UnaryOperator	&		30283	0					
ANR	30355	Identifier	len		30283	1					
ANR	30356	IfStatement	if ( r == - 1 )		30283	8					
ANR	30357	Condition	r == - 1	581:8:16542:16548	30283	0	True				
ANR	30358	EqualityExpression	r == - 1		30283	0		==			
ANR	30359	Identifier	r		30283	0					
ANR	30360	UnaryOperationExpression	- 1		30283	1					
ANR	30361	UnaryOperator	-		30283	0					
ANR	30362	PrimaryExpression	1		30283	1					
ANR	30363	CompoundStatement		12:17:321:321	30283	1					
ANR	30364	ExpressionStatement	"ERROR ( ""manager_recvfrom"" )"	582:8:16561:16586	30283	0	True				
ANR	30365	CallExpression	"ERROR ( ""manager_recvfrom"" )"		30283	0					
ANR	30366	Callee	ERROR		30283	0					
ANR	30367	Identifier	ERROR		30283	0					
ANR	30368	ArgumentList	"""manager_recvfrom"""		30283	1					
ANR	30369	Argument	"""manager_recvfrom"""		30283	0					
ANR	30370	PrimaryExpression	"""manager_recvfrom"""		30283	0					
ANR	30371	ReturnStatement	return ;	583:8:16596:16602	30283	1	True				
ANR	30372	IfStatement	if ( r > BUF_SIZE / 2 )		30283	9					
ANR	30373	Condition	r > BUF_SIZE / 2	586:8:16619:16634	30283	0	True				
ANR	30374	RelationalExpression	r > BUF_SIZE / 2		30283	0		>			
ANR	30375	Identifier	r		30283	0					
ANR	30376	MultiplicativeExpression	BUF_SIZE / 2		30283	1		/			
ANR	30377	Identifier	BUF_SIZE		30283	0					
ANR	30378	PrimaryExpression	2		30283	1					
ANR	30379	CompoundStatement		17:26:407:407	30283	1					
ANR	30380	ExpressionStatement	"LOGE ( ""too large request: %d"" , ( int ) r )"	587:8:16647:16684	30283	0	True				
ANR	30381	CallExpression	"LOGE ( ""too large request: %d"" , ( int ) r )"		30283	0					
ANR	30382	Callee	LOGE		30283	0					
ANR	30383	Identifier	LOGE		30283	0					
ANR	30384	ArgumentList	"""too large request: %d"""		30283	1					
ANR	30385	Argument	"""too large request: %d"""		30283	0					
ANR	30386	PrimaryExpression	"""too large request: %d"""		30283	0					
ANR	30387	Argument	( int ) r		30283	1					
ANR	30388	CastExpression	( int ) r		30283	0					
ANR	30389	CastTarget	int		30283	0					
ANR	30390	Identifier	r		30283	1					
ANR	30391	ReturnStatement	return ;	588:8:16694:16700	30283	1	True				
ANR	30392	IdentifierDeclStatement	"char * action = get_action ( buf , r ) ;"	591:4:16713:16746	30283	10	True				
ANR	30393	IdentifierDecl	"* action = get_action ( buf , r )"		30283	0					
ANR	30394	IdentifierDeclType	char *		30283	0					
ANR	30395	Identifier	action		30283	1					
ANR	30396	AssignmentExpression	"* action = get_action ( buf , r )"		30283	2		=			
ANR	30397	Identifier	action		30283	0					
ANR	30398	CallExpression	"get_action ( buf , r )"		30283	1					
ANR	30399	Callee	get_action		30283	0					
ANR	30400	Identifier	get_action		30283	0					
ANR	30401	ArgumentList	buf		30283	1					
ANR	30402	Argument	buf		30283	0					
ANR	30403	Identifier	buf		30283	0					
ANR	30404	Argument	r		30283	1					
ANR	30405	Identifier	r		30283	0					
ANR	30406	IfStatement	if ( action == NULL )		30283	11					
ANR	30407	Condition	action == NULL	592:8:16756:16769	30283	0	True				
ANR	30408	EqualityExpression	action == NULL		30283	0		==			
ANR	30409	Identifier	action		30283	0					
ANR	30410	Identifier	NULL		30283	1					
ANR	30411	CompoundStatement		23:24:542:542	30283	1					
ANR	30412	ReturnStatement	return ;	593:8:16782:16788	30283	0	True				
ANR	30413	IfStatement	"if ( strcmp ( action , ""add"" ) == 0 )"		30283	12					
ANR	30414	Condition	"strcmp ( action , ""add"" ) == 0"	596:8:16805:16830	30283	0	True				
ANR	30415	EqualityExpression	"strcmp ( action , ""add"" ) == 0"		30283	0		==			
ANR	30416	CallExpression	"strcmp ( action , ""add"" )"		30283	0					
ANR	30417	Callee	strcmp		30283	0					
ANR	30418	Identifier	strcmp		30283	0					
ANR	30419	ArgumentList	action		30283	1					
ANR	30420	Argument	action		30283	0					
ANR	30421	Identifier	action		30283	0					
ANR	30422	Argument	"""add"""		30283	1					
ANR	30423	PrimaryExpression	"""add"""		30283	0					
ANR	30424	PrimaryExpression	0		30283	1					
ANR	30425	CompoundStatement		43:8:1092:1103	30283	1					
ANR	30426	IdentifierDeclStatement	"struct server * server = get_server ( buf , r ) ;"	597:8:16843:16885	30283	0	True				
ANR	30427	IdentifierDecl	"* server = get_server ( buf , r )"		30283	0					
ANR	30428	IdentifierDeclType	struct server *		30283	0					
ANR	30429	Identifier	server		30283	1					
ANR	30430	AssignmentExpression	"* server = get_server ( buf , r )"		30283	2		=			
ANR	30431	Identifier	server		30283	0					
ANR	30432	CallExpression	"get_server ( buf , r )"		30283	1					
ANR	30433	Callee	get_server		30283	0					
ANR	30434	Identifier	get_server		30283	0					
ANR	30435	ArgumentList	buf		30283	1					
ANR	30436	Argument	buf		30283	0					
ANR	30437	Identifier	buf		30283	0					
ANR	30438	Argument	r		30283	1					
ANR	30439	Identifier	r		30283	0					
ANR	30440	IfStatement	if ( server == NULL || server -> port [ 0 ] == 0 || server -> password [ 0 ] == 0 )		30283	1					
ANR	30441	Condition	server == NULL || server -> port [ 0 ] == 0 || server -> password [ 0 ] == 0	599:12:16900:16965	30283	0	True				
ANR	30442	OrExpression	server == NULL || server -> port [ 0 ] == 0 || server -> password [ 0 ] == 0		30283	0		||			
ANR	30443	EqualityExpression	server == NULL		30283	0		==			
ANR	30444	Identifier	server		30283	0					
ANR	30445	Identifier	NULL		30283	1					
ANR	30446	OrExpression	server -> port [ 0 ] == 0 || server -> password [ 0 ] == 0		30283	1		||			
ANR	30447	EqualityExpression	server -> port [ 0 ] == 0		30283	0		==			
ANR	30448	ArrayIndexing	server -> port [ 0 ]		30283	0					
ANR	30449	PtrMemberAccess	server -> port		30283	0					
ANR	30450	Identifier	server		30283	0					
ANR	30451	Identifier	port		30283	1					
ANR	30452	PrimaryExpression	0		30283	1					
ANR	30453	PrimaryExpression	0		30283	1					
ANR	30454	EqualityExpression	server -> password [ 0 ] == 0		30283	1		==			
ANR	30455	ArrayIndexing	server -> password [ 0 ]		30283	0					
ANR	30456	PtrMemberAccess	server -> password		30283	0					
ANR	30457	Identifier	server		30283	0					
ANR	30458	Identifier	password		30283	1					
ANR	30459	PrimaryExpression	0		30283	1					
ANR	30460	PrimaryExpression	0		30283	1					
ANR	30461	CompoundStatement		30:80:738:738	30283	1					
ANR	30462	ExpressionStatement	"LOGE ( ""invalid command: %s:%s"" , buf , get_data ( buf , r ) )"	600:12:16982:17035	30283	0	True				
ANR	30463	CallExpression	"LOGE ( ""invalid command: %s:%s"" , buf , get_data ( buf , r ) )"		30283	0					
ANR	30464	Callee	LOGE		30283	0					
ANR	30465	Identifier	LOGE		30283	0					
ANR	30466	ArgumentList	"""invalid command: %s:%s"""		30283	1					
ANR	30467	Argument	"""invalid command: %s:%s"""		30283	0					
ANR	30468	PrimaryExpression	"""invalid command: %s:%s"""		30283	0					
ANR	30469	Argument	buf		30283	1					
ANR	30470	Identifier	buf		30283	0					
ANR	30471	Argument	"get_data ( buf , r )"		30283	2					
ANR	30472	CallExpression	"get_data ( buf , r )"		30283	0					
ANR	30473	Callee	get_data		30283	0					
ANR	30474	Identifier	get_data		30283	0					
ANR	30475	ArgumentList	buf		30283	1					
ANR	30476	Argument	buf		30283	0					
ANR	30477	Identifier	buf		30283	0					
ANR	30478	Argument	r		30283	1					
ANR	30479	Identifier	r		30283	0					
ANR	30480	IfStatement	if ( server != NULL )		30283	1					
ANR	30481	Condition	server != NULL	601:16:17053:17066	30283	0	True				
ANR	30482	EqualityExpression	server != NULL		30283	0		!=			
ANR	30483	Identifier	server		30283	0					
ANR	30484	Identifier	NULL		30283	1					
ANR	30485	CompoundStatement		32:32:839:839	30283	1					
ANR	30486	ExpressionStatement	destroy_server ( server )	602:16:17087:17109	30283	0	True				
ANR	30487	CallExpression	destroy_server ( server )		30283	0					
ANR	30488	Callee	destroy_server		30283	0					
ANR	30489	Identifier	destroy_server		30283	0					
ANR	30490	ArgumentList	server		30283	1					
ANR	30491	Argument	server		30283	0					
ANR	30492	Identifier	server		30283	0					
ANR	30493	ExpressionStatement	ss_free ( server )	603:16:17127:17142	30283	1	True				
ANR	30494	CallExpression	ss_free ( server )		30283	0					
ANR	30495	Callee	ss_free		30283	0					
ANR	30496	Identifier	ss_free		30283	0					
ANR	30497	ArgumentList	server		30283	1					
ANR	30498	Argument	server		30283	0					
ANR	30499	Identifier	server		30283	0					
ANR	30500	GotoStatement	goto ERROR_MSG ;	605:12:17170:17184	30283	2	True				
ANR	30501	Identifier	ERROR_MSG		30283	0					
ANR	30502	ExpressionStatement	"remove_server ( working_dir , server -> port )"	608:8:17205:17245	30283	2	True				
ANR	30503	CallExpression	"remove_server ( working_dir , server -> port )"		30283	0					
ANR	30504	Callee	remove_server		30283	0					
ANR	30505	Identifier	remove_server		30283	0					
ANR	30506	ArgumentList	working_dir		30283	1					
ANR	30507	Argument	working_dir		30283	0					
ANR	30508	Identifier	working_dir		30283	0					
ANR	30509	Argument	server -> port		30283	1					
ANR	30510	PtrMemberAccess	server -> port		30283	0					
ANR	30511	Identifier	server		30283	0					
ANR	30512	Identifier	port		30283	1					
ANR	30513	IdentifierDeclStatement	"int ret = add_server ( manager , server ) ;"	609:8:17255:17292	30283	3	True				
ANR	30514	IdentifierDecl	"ret = add_server ( manager , server )"		30283	0					
ANR	30515	IdentifierDeclType	int		30283	0					
ANR	30516	Identifier	ret		30283	1					
ANR	30517	AssignmentExpression	"ret = add_server ( manager , server )"		30283	2		=			
ANR	30518	Identifier	ret		30283	0					
ANR	30519	CallExpression	"add_server ( manager , server )"		30283	1					
ANR	30520	Callee	add_server		30283	0					
ANR	30521	Identifier	add_server		30283	0					
ANR	30522	ArgumentList	manager		30283	1					
ANR	30523	Argument	manager		30283	0					
ANR	30524	Identifier	manager		30283	0					
ANR	30525	Argument	server		30283	1					
ANR	30526	Identifier	server		30283	0					
ANR	30527	IdentifierDeclStatement	char * msg ;	611:8:17303:17312	30283	4	True				
ANR	30528	IdentifierDecl	* msg		30283	0					
ANR	30529	IdentifierDeclType	char *		30283	0					
ANR	30530	Identifier	msg		30283	1					
ANR	30531	IdentifierDeclStatement	int msg_len ;	612:8:17322:17333	30283	5	True				
ANR	30532	IdentifierDecl	msg_len		30283	0					
ANR	30533	IdentifierDeclType	int		30283	0					
ANR	30534	Identifier	msg_len		30283	1					
ANR	30535	IfStatement	if ( ret == - 1 )		30283	6					
ANR	30536	Condition	ret == - 1	614:12:17348:17356	30283	0	True				
ANR	30537	EqualityExpression	ret == - 1		30283	0		==			
ANR	30538	Identifier	ret		30283	0					
ANR	30539	UnaryOperationExpression	- 1		30283	1					
ANR	30540	UnaryOperator	-		30283	0					
ANR	30541	PrimaryExpression	1		30283	1					
ANR	30542	CompoundStatement		45:23:1129:1129	30283	1					
ANR	30543	ExpressionStatement	"msg = ""port is not available"""	615:12:17373:17406	30283	0	True				
ANR	30544	AssignmentExpression	"msg = ""port is not available"""		30283	0		=			
ANR	30545	Identifier	msg		30283	0					
ANR	30546	PrimaryExpression	"""port is not available"""		30283	1					
ANR	30547	ExpressionStatement	msg_len = 21	616:12:17420:17432	30283	1	True				
ANR	30548	AssignmentExpression	msg_len = 21		30283	0		=			
ANR	30549	Identifier	msg_len		30283	0					
ANR	30550	PrimaryExpression	21		30283	1					
ANR	30551	ElseStatement	else		30283	0					
ANR	30552	CompoundStatement		48:15:1219:1219	30283	0					
ANR	30553	ExpressionStatement	"msg = ""ok"""	618:12:17463:17477	30283	0	True				
ANR	30554	AssignmentExpression	"msg = ""ok"""		30283	0		=			
ANR	30555	Identifier	msg		30283	0					
ANR	30556	PrimaryExpression	"""ok"""		30283	1					
ANR	30557	ExpressionStatement	msg_len = 2	619:12:17491:17502	30283	1	True				
ANR	30558	AssignmentExpression	msg_len = 2		30283	0		=			
ANR	30559	Identifier	msg_len		30283	0					
ANR	30560	PrimaryExpression	2		30283	1					
ANR	30561	IfStatement	"if ( sendto ( manager -> fd , msg , msg_len , 0 , ( struct sockaddr * ) & claddr , len ) != 2 )"		30283	7					
ANR	30562	Condition	"sendto ( manager -> fd , msg , msg_len , 0 , ( struct sockaddr * ) & claddr , len ) != 2"	622:12:17527:17600	30283	0	True				
ANR	30563	EqualityExpression	"sendto ( manager -> fd , msg , msg_len , 0 , ( struct sockaddr * ) & claddr , len ) != 2"		30283	0		!=			
ANR	30564	CallExpression	"sendto ( manager -> fd , msg , msg_len , 0 , ( struct sockaddr * ) & claddr , len )"		30283	0					
ANR	30565	Callee	sendto		30283	0					
ANR	30566	Identifier	sendto		30283	0					
ANR	30567	ArgumentList	manager -> fd		30283	1					
ANR	30568	Argument	manager -> fd		30283	0					
ANR	30569	PtrMemberAccess	manager -> fd		30283	0					
ANR	30570	Identifier	manager		30283	0					
ANR	30571	Identifier	fd		30283	1					
ANR	30572	Argument	msg		30283	1					
ANR	30573	Identifier	msg		30283	0					
ANR	30574	Argument	msg_len		30283	2					
ANR	30575	Identifier	msg_len		30283	0					
ANR	30576	Argument	0		30283	3					
ANR	30577	PrimaryExpression	0		30283	0					
ANR	30578	Argument	( struct sockaddr * ) & claddr		30283	4					
ANR	30579	CastExpression	( struct sockaddr * ) & claddr		30283	0					
ANR	30580	CastTarget	struct sockaddr *		30283	0					
ANR	30581	UnaryOperationExpression	& claddr		30283	1					
ANR	30582	UnaryOperator	&		30283	0					
ANR	30583	Identifier	claddr		30283	1					
ANR	30584	Argument	len		30283	5					
ANR	30585	Identifier	len		30283	0					
ANR	30586	PrimaryExpression	2		30283	1					
ANR	30587	CompoundStatement		53:88:1373:1373	30283	1					
ANR	30588	ExpressionStatement	"ERROR ( ""add_sendto"" )"	623:12:17617:17636	30283	0	True				
ANR	30589	CallExpression	"ERROR ( ""add_sendto"" )"		30283	0					
ANR	30590	Callee	ERROR		30283	0					
ANR	30591	Identifier	ERROR		30283	0					
ANR	30592	ArgumentList	"""add_sendto"""		30283	1					
ANR	30593	Argument	"""add_sendto"""		30283	0					
ANR	30594	PrimaryExpression	"""add_sendto"""		30283	0					
ANR	30595	ElseStatement	else		30283	0					
ANR	30596	IfStatement	"if ( strcmp ( action , ""list"" ) == 0 )"		30283	0					
ANR	30597	Condition	"strcmp ( action , ""list"" ) == 0"	625:15:17663:17689	30283	0	True				
ANR	30598	EqualityExpression	"strcmp ( action , ""list"" ) == 0"		30283	0		==			
ANR	30599	CallExpression	"strcmp ( action , ""list"" )"		30283	0					
ANR	30600	Callee	strcmp		30283	0					
ANR	30601	Identifier	strcmp		30283	0					
ANR	30602	ArgumentList	action		30283	1					
ANR	30603	Argument	action		30283	0					
ANR	30604	Identifier	action		30283	0					
ANR	30605	Argument	"""list"""		30283	1					
ANR	30606	PrimaryExpression	"""list"""		30283	0					
ANR	30607	PrimaryExpression	0		30283	1					
ANR	30608	CompoundStatement		82:8:2542:2566	30283	1					
ANR	30609	IdentifierDeclStatement	struct cork_hash_table_iterator iter ;	626:8:17702:17739	30283	0	True				
ANR	30610	IdentifierDecl	iter		30283	0					
ANR	30611	IdentifierDeclType	struct cork_hash_table_iterator		30283	0					
ANR	30612	Identifier	iter		30283	1					
ANR	30613	IdentifierDeclStatement	struct cork_hash_table_entry * entry ;	627:8:17749:17785	30283	1	True				
ANR	30614	IdentifierDecl	* entry		30283	0					
ANR	30615	IdentifierDeclType	struct cork_hash_table_entry *		30283	0					
ANR	30616	Identifier	entry		30283	1					
ANR	30617	IdentifierDeclStatement	char buf [ BUF_SIZE ] ;	628:8:17795:17813	30283	2	True				
ANR	30618	IdentifierDecl	buf [ BUF_SIZE ]		30283	0					
ANR	30619	IdentifierDeclType	char [ BUF_SIZE ]		30283	0					
ANR	30620	Identifier	buf		30283	1					
ANR	30621	Identifier	BUF_SIZE		30283	2					
ANR	30622	ExpressionStatement	"memset ( buf , 0 , BUF_SIZE )"	629:8:17823:17847	30283	3	True				
ANR	30623	CallExpression	"memset ( buf , 0 , BUF_SIZE )"		30283	0					
ANR	30624	Callee	memset		30283	0					
ANR	30625	Identifier	memset		30283	0					
ANR	30626	ArgumentList	buf		30283	1					
ANR	30627	Argument	buf		30283	0					
ANR	30628	Identifier	buf		30283	0					
ANR	30629	Argument	0		30283	1					
ANR	30630	PrimaryExpression	0		30283	0					
ANR	30631	Argument	BUF_SIZE		30283	2					
ANR	30632	Identifier	BUF_SIZE		30283	0					
ANR	30633	ExpressionStatement	"sprintf ( buf , ""["" )"	630:8:17857:17874	30283	4	True				
ANR	30634	CallExpression	"sprintf ( buf , ""["" )"		30283	0					
ANR	30635	Callee	sprintf		30283	0					
ANR	30636	Identifier	sprintf		30283	0					
ANR	30637	ArgumentList	buf		30283	1					
ANR	30638	Argument	buf		30283	0					
ANR	30639	Identifier	buf		30283	0					
ANR	30640	Argument	"""["""		30283	1					
ANR	30641	PrimaryExpression	"""["""		30283	0					
ANR	30642	ExpressionStatement	"cork_hash_table_iterator_init ( server_table , & iter )"	632:8:17885:17935	30283	5	True				
ANR	30643	CallExpression	"cork_hash_table_iterator_init ( server_table , & iter )"		30283	0					
ANR	30644	Callee	cork_hash_table_iterator_init		30283	0					
ANR	30645	Identifier	cork_hash_table_iterator_init		30283	0					
ANR	30646	ArgumentList	server_table		30283	1					
ANR	30647	Argument	server_table		30283	0					
ANR	30648	Identifier	server_table		30283	0					
ANR	30649	Argument	& iter		30283	1					
ANR	30650	UnaryOperationExpression	& iter		30283	0					
ANR	30651	UnaryOperator	&		30283	0					
ANR	30652	Identifier	iter		30283	1					
ANR	30653	WhileStatement	while ( ( entry = cork_hash_table_iterator_next ( & iter ) ) != NULL )		30283	6					
ANR	30654	Condition	( entry = cork_hash_table_iterator_next ( & iter ) ) != NULL	633:15:17952:18005	30283	0	True				
ANR	30655	EqualityExpression	( entry = cork_hash_table_iterator_next ( & iter ) ) != NULL		30283	0		!=			
ANR	30656	AssignmentExpression	entry = cork_hash_table_iterator_next ( & iter )		30283	0		=			
ANR	30657	Identifier	entry		30283	0					
ANR	30658	CallExpression	cork_hash_table_iterator_next ( & iter )		30283	1					
ANR	30659	Callee	cork_hash_table_iterator_next		30283	0					
ANR	30660	Identifier	cork_hash_table_iterator_next		30283	0					
ANR	30661	ArgumentList	& iter		30283	1					
ANR	30662	Argument	& iter		30283	0					
ANR	30663	UnaryOperationExpression	& iter		30283	0					
ANR	30664	UnaryOperator	&		30283	0					
ANR	30665	Identifier	iter		30283	1					
ANR	30666	Identifier	NULL		30283	1					
ANR	30667	CompoundStatement		68:12:1971:2054	30283	1					
ANR	30668	IdentifierDeclStatement	struct server * server = ( struct server * ) entry -> value ;	634:12:18022:18075	30283	0	True				
ANR	30669	IdentifierDecl	* server = ( struct server * ) entry -> value		30283	0					
ANR	30670	IdentifierDeclType	struct server *		30283	0					
ANR	30671	Identifier	server		30283	1					
ANR	30672	AssignmentExpression	* server = ( struct server * ) entry -> value		30283	2		=			
ANR	30673	Identifier	server		30283	0					
ANR	30674	CastExpression	( struct server * ) entry -> value		30283	1					
ANR	30675	CastTarget	struct server *		30283	0					
ANR	30676	PtrMemberAccess	entry -> value		30283	1					
ANR	30677	Identifier	entry		30283	0					
ANR	30678	Identifier	value		30283	1					
ANR	30679	IdentifierDeclStatement	char * method = server -> method ? server -> method : manager -> method ;	635:12:18089:18149	30283	1	True				
ANR	30680	IdentifierDecl	* method = server -> method ? server -> method : manager -> method		30283	0					
ANR	30681	IdentifierDeclType	char *		30283	0					
ANR	30682	Identifier	method		30283	1					
ANR	30683	AssignmentExpression	* method = server -> method ? server -> method : manager -> method		30283	2		=			
ANR	30684	Identifier	method		30283	0					
ANR	30685	ConditionalExpression	server -> method ? server -> method : manager -> method		30283	1					
ANR	30686	Condition	server -> method		30283	0					
ANR	30687	PtrMemberAccess	server -> method		30283	0					
ANR	30688	Identifier	server		30283	0					
ANR	30689	Identifier	method		30283	1					
ANR	30690	PtrMemberAccess	server -> method		30283	1					
ANR	30691	Identifier	server		30283	0					
ANR	30692	Identifier	method		30283	1					
ANR	30693	PtrMemberAccess	manager -> method		30283	2					
ANR	30694	Identifier	manager		30283	0					
ANR	30695	Identifier	method		30283	1					
ANR	30696	IdentifierDeclStatement	size_t pos = strlen ( buf ) ;	636:12:18163:18187	30283	2	True				
ANR	30697	IdentifierDecl	pos = strlen ( buf )		30283	0					
ANR	30698	IdentifierDeclType	size_t		30283	0					
ANR	30699	Identifier	pos		30283	1					
ANR	30700	AssignmentExpression	pos = strlen ( buf )		30283	2		=			
ANR	30701	Identifier	pos		30283	0					
ANR	30702	CallExpression	strlen ( buf )		30283	1					
ANR	30703	Callee	strlen		30283	0					
ANR	30704	Identifier	strlen		30283	0					
ANR	30705	ArgumentList	buf		30283	1					
ANR	30706	Argument	buf		30283	0					
ANR	30707	Identifier	buf		30283	0					
ANR	30708	IdentifierDeclStatement	size_t entry_len = strlen ( server -> port ) + strlen ( server -> password ) + strlen ( method ) ;	637:12:18201:18284	30283	3	True				
ANR	30709	IdentifierDecl	entry_len = strlen ( server -> port ) + strlen ( server -> password ) + strlen ( method )		30283	0					
ANR	30710	IdentifierDeclType	size_t		30283	0					
ANR	30711	Identifier	entry_len		30283	1					
ANR	30712	AssignmentExpression	entry_len = strlen ( server -> port ) + strlen ( server -> password ) + strlen ( method )		30283	2		=			
ANR	30713	Identifier	entry_len		30283	0					
ANR	30714	AdditiveExpression	strlen ( server -> port ) + strlen ( server -> password ) + strlen ( method )		30283	1		+			
ANR	30715	CallExpression	strlen ( server -> port )		30283	0					
ANR	30716	Callee	strlen		30283	0					
ANR	30717	Identifier	strlen		30283	0					
ANR	30718	ArgumentList	server -> port		30283	1					
ANR	30719	Argument	server -> port		30283	0					
ANR	30720	PtrMemberAccess	server -> port		30283	0					
ANR	30721	Identifier	server		30283	0					
ANR	30722	Identifier	port		30283	1					
ANR	30723	AdditiveExpression	strlen ( server -> password ) + strlen ( method )		30283	1		+			
ANR	30724	CallExpression	strlen ( server -> password )		30283	0					
ANR	30725	Callee	strlen		30283	0					
ANR	30726	Identifier	strlen		30283	0					
ANR	30727	ArgumentList	server -> password		30283	1					
ANR	30728	Argument	server -> password		30283	0					
ANR	30729	PtrMemberAccess	server -> password		30283	0					
ANR	30730	Identifier	server		30283	0					
ANR	30731	Identifier	password		30283	1					
ANR	30732	CallExpression	strlen ( method )		30283	1					
ANR	30733	Callee	strlen		30283	0					
ANR	30734	Identifier	strlen		30283	0					
ANR	30735	ArgumentList	method		30283	1					
ANR	30736	Argument	method		30283	0					
ANR	30737	Identifier	method		30283	0					
ANR	30738	IfStatement	if ( pos > BUF_SIZE - entry_len - 50 )		30283	4					
ANR	30739	Condition	pos > BUF_SIZE - entry_len - 50	638:16:18302:18328	30283	0	True				
ANR	30740	RelationalExpression	pos > BUF_SIZE - entry_len - 50		30283	0		>			
ANR	30741	Identifier	pos		30283	0					
ANR	30742	AdditiveExpression	BUF_SIZE - entry_len - 50		30283	1		-			
ANR	30743	Identifier	BUF_SIZE		30283	0					
ANR	30744	AdditiveExpression	entry_len - 50		30283	1		-			
ANR	30745	Identifier	entry_len		30283	0					
ANR	30746	PrimaryExpression	50		30283	1					
ANR	30747	CompoundStatement		69:45:2101:2101	30283	1					
ANR	30748	IfStatement	"if ( sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos )"		30283	0					
ANR	30749	Condition	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"	639:20:18353:18444	30283	0	True				
ANR	30750	EqualityExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"		30283	0		!=			
ANR	30751	CallExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len )"		30283	0					
ANR	30752	Callee	sendto		30283	0					
ANR	30753	Identifier	sendto		30283	0					
ANR	30754	ArgumentList	manager -> fd		30283	1					
ANR	30755	Argument	manager -> fd		30283	0					
ANR	30756	PtrMemberAccess	manager -> fd		30283	0					
ANR	30757	Identifier	manager		30283	0					
ANR	30758	Identifier	fd		30283	1					
ANR	30759	Argument	buf		30283	1					
ANR	30760	Identifier	buf		30283	0					
ANR	30761	Argument	pos		30283	2					
ANR	30762	Identifier	pos		30283	0					
ANR	30763	Argument	0		30283	3					
ANR	30764	PrimaryExpression	0		30283	0					
ANR	30765	Argument	( struct sockaddr * ) & claddr		30283	4					
ANR	30766	CastExpression	( struct sockaddr * ) & claddr		30283	0					
ANR	30767	CastTarget	struct sockaddr *		30283	0					
ANR	30768	UnaryOperationExpression	& claddr		30283	1					
ANR	30769	UnaryOperator	&		30283	0					
ANR	30770	Identifier	claddr		30283	1					
ANR	30771	Argument	len		30283	5					
ANR	30772	Identifier	len		30283	0					
ANR	30773	Identifier	pos		30283	1					
ANR	30774	CompoundStatement		71:28:2217:2217	30283	1					
ANR	30775	ExpressionStatement	"ERROR ( ""list_sendto"" )"	641:20:18469:18489	30283	0	True				
ANR	30776	CallExpression	"ERROR ( ""list_sendto"" )"		30283	0					
ANR	30777	Callee	ERROR		30283	0					
ANR	30778	Identifier	ERROR		30283	0					
ANR	30779	ArgumentList	"""list_sendto"""		30283	1					
ANR	30780	Argument	"""list_sendto"""		30283	0					
ANR	30781	PrimaryExpression	"""list_sendto"""		30283	0					
ANR	30782	ExpressionStatement	"memset ( buf , 0 , BUF_SIZE )"	643:16:18525:18549	30283	1	True				
ANR	30783	CallExpression	"memset ( buf , 0 , BUF_SIZE )"		30283	0					
ANR	30784	Callee	memset		30283	0					
ANR	30785	Identifier	memset		30283	0					
ANR	30786	ArgumentList	buf		30283	1					
ANR	30787	Argument	buf		30283	0					
ANR	30788	Identifier	buf		30283	0					
ANR	30789	Argument	0		30283	1					
ANR	30790	PrimaryExpression	0		30283	0					
ANR	30791	Argument	BUF_SIZE		30283	2					
ANR	30792	Identifier	BUF_SIZE		30283	0					
ANR	30793	ExpressionStatement	pos = 0	644:16:18567:18574	30283	2	True				
ANR	30794	AssignmentExpression	pos = 0		30283	0		=			
ANR	30795	Identifier	pos		30283	0					
ANR	30796	PrimaryExpression	0		30283	1					
ANR	30797	ExpressionStatement	"sprintf ( buf + pos , ""\\n\\t{\\""server_port\\"":\\""%s\\"",\\""password\\"":\\""%s\\"",\\""method\\"":\\""%s\\""},"" , server -> port , server -> password , method )"	646:12:18602:18750	30283	5	True				
ANR	30798	CallExpression	"sprintf ( buf + pos , ""\\n\\t{\\""server_port\\"":\\""%s\\"",\\""password\\"":\\""%s\\"",\\""method\\"":\\""%s\\""},"" , server -> port , server -> password , method )"		30283	0					
ANR	30799	Callee	sprintf		30283	0					
ANR	30800	Identifier	sprintf		30283	0					
ANR	30801	ArgumentList	buf + pos		30283	1					
ANR	30802	Argument	buf + pos		30283	0					
ANR	30803	AdditiveExpression	buf + pos		30283	0		+			
ANR	30804	Identifier	buf		30283	0					
ANR	30805	Identifier	pos		30283	1					
ANR	30806	Argument	"""\\n\\t{\\""server_port\\"":\\""%s\\"",\\""password\\"":\\""%s\\"",\\""method\\"":\\""%s\\""},"""		30283	1					
ANR	30807	PrimaryExpression	"""\\n\\t{\\""server_port\\"":\\""%s\\"",\\""password\\"":\\""%s\\"",\\""method\\"":\\""%s\\""},"""		30283	0					
ANR	30808	Argument	server -> port		30283	2					
ANR	30809	PtrMemberAccess	server -> port		30283	0					
ANR	30810	Identifier	server		30283	0					
ANR	30811	Identifier	port		30283	1					
ANR	30812	Argument	server -> password		30283	3					
ANR	30813	PtrMemberAccess	server -> password		30283	0					
ANR	30814	Identifier	server		30283	0					
ANR	30815	Identifier	password		30283	1					
ANR	30816	Argument	method		30283	4					
ANR	30817	Identifier	method		30283	0					
ANR	30818	IdentifierDeclStatement	size_t pos = strlen ( buf ) ;	651:8:18772:18796	30283	7	True				
ANR	30819	IdentifierDecl	pos = strlen ( buf )		30283	0					
ANR	30820	IdentifierDeclType	size_t		30283	0					
ANR	30821	Identifier	pos		30283	1					
ANR	30822	AssignmentExpression	pos = strlen ( buf )		30283	2		=			
ANR	30823	Identifier	pos		30283	0					
ANR	30824	CallExpression	strlen ( buf )		30283	1					
ANR	30825	Callee	strlen		30283	0					
ANR	30826	Identifier	strlen		30283	0					
ANR	30827	ArgumentList	buf		30283	1					
ANR	30828	Argument	buf		30283	0					
ANR	30829	Identifier	buf		30283	0					
ANR	30830	ExpressionStatement	"strcpy ( buf + pos - 1 , ""\\n]"" )"	652:8:18806:18834	30283	8	True				
ANR	30831	CallExpression	"strcpy ( buf + pos - 1 , ""\\n]"" )"		30283	0					
ANR	30832	Callee	strcpy		30283	0					
ANR	30833	Identifier	strcpy		30283	0					
ANR	30834	ArgumentList	buf + pos - 1		30283	1					
ANR	30835	Argument	buf + pos - 1		30283	0					
ANR	30836	AdditiveExpression	buf + pos - 1		30283	0		+			
ANR	30837	Identifier	buf		30283	0					
ANR	30838	AdditiveExpression	pos - 1		30283	1		-			
ANR	30839	Identifier	pos		30283	0					
ANR	30840	PrimaryExpression	1		30283	1					
ANR	30841	Argument	"""\\n]"""		30283	1					
ANR	30842	PrimaryExpression	"""\\n]"""		30283	0					
ANR	30843	ExpressionStatement	pos = strlen ( buf )	653:8:18866:18883	30283	9	True				
ANR	30844	AssignmentExpression	pos = strlen ( buf )		30283	0		=			
ANR	30845	Identifier	pos		30283	0					
ANR	30846	CallExpression	strlen ( buf )		30283	1					
ANR	30847	Callee	strlen		30283	0					
ANR	30848	Identifier	strlen		30283	0					
ANR	30849	ArgumentList	buf		30283	1					
ANR	30850	Argument	buf		30283	0					
ANR	30851	Identifier	buf		30283	0					
ANR	30852	IfStatement	"if ( sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos )"		30283	10					
ANR	30853	Condition	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"	654:12:18897:18980	30283	0	True				
ANR	30854	EqualityExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"		30283	0		!=			
ANR	30855	CallExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len )"		30283	0					
ANR	30856	Callee	sendto		30283	0					
ANR	30857	Identifier	sendto		30283	0					
ANR	30858	ArgumentList	manager -> fd		30283	1					
ANR	30859	Argument	manager -> fd		30283	0					
ANR	30860	PtrMemberAccess	manager -> fd		30283	0					
ANR	30861	Identifier	manager		30283	0					
ANR	30862	Identifier	fd		30283	1					
ANR	30863	Argument	buf		30283	1					
ANR	30864	Identifier	buf		30283	0					
ANR	30865	Argument	pos		30283	2					
ANR	30866	Identifier	pos		30283	0					
ANR	30867	Argument	0		30283	3					
ANR	30868	PrimaryExpression	0		30283	0					
ANR	30869	Argument	( struct sockaddr * ) & claddr		30283	4					
ANR	30870	CastExpression	( struct sockaddr * ) & claddr		30283	0					
ANR	30871	CastTarget	struct sockaddr *		30283	0					
ANR	30872	UnaryOperationExpression	& claddr		30283	1					
ANR	30873	UnaryOperator	&		30283	0					
ANR	30874	Identifier	claddr		30283	1					
ANR	30875	Argument	len		30283	5					
ANR	30876	Identifier	len		30283	0					
ANR	30877	Identifier	pos		30283	1					
ANR	30878	CompoundStatement		86:20:2753:2753	30283	1					
ANR	30879	ExpressionStatement	"ERROR ( ""list_sendto"" )"	656:12:18997:19017	30283	0	True				
ANR	30880	CallExpression	"ERROR ( ""list_sendto"" )"		30283	0					
ANR	30881	Callee	ERROR		30283	0					
ANR	30882	Identifier	ERROR		30283	0					
ANR	30883	ArgumentList	"""list_sendto"""		30283	1					
ANR	30884	Argument	"""list_sendto"""		30283	0					
ANR	30885	PrimaryExpression	"""list_sendto"""		30283	0					
ANR	30886	ElseStatement	else		30283	0					
ANR	30887	IfStatement	"if ( strcmp ( action , ""remove"" ) == 0 )"		30283	0					
ANR	30888	Condition	"strcmp ( action , ""remove"" ) == 0"	658:15:19044:19072	30283	0	True				
ANR	30889	EqualityExpression	"strcmp ( action , ""remove"" ) == 0"		30283	0		==			
ANR	30890	CallExpression	"strcmp ( action , ""remove"" )"		30283	0					
ANR	30891	Callee	strcmp		30283	0					
ANR	30892	Identifier	strcmp		30283	0					
ANR	30893	ArgumentList	action		30283	1					
ANR	30894	Argument	action		30283	0					
ANR	30895	Identifier	action		30283	0					
ANR	30896	Argument	"""remove"""		30283	1					
ANR	30897	PrimaryExpression	"""remove"""		30283	0					
ANR	30898	PrimaryExpression	0		30283	1					
ANR	30899	CompoundStatement		105:8:3297:3315	30283	1					
ANR	30900	IdentifierDeclStatement	"struct server * server = get_server ( buf , r ) ;"	659:8:19085:19127	30283	0	True				
ANR	30901	IdentifierDecl	"* server = get_server ( buf , r )"		30283	0					
ANR	30902	IdentifierDeclType	struct server *		30283	0					
ANR	30903	Identifier	server		30283	1					
ANR	30904	AssignmentExpression	"* server = get_server ( buf , r )"		30283	2		=			
ANR	30905	Identifier	server		30283	0					
ANR	30906	CallExpression	"get_server ( buf , r )"		30283	1					
ANR	30907	Callee	get_server		30283	0					
ANR	30908	Identifier	get_server		30283	0					
ANR	30909	ArgumentList	buf		30283	1					
ANR	30910	Argument	buf		30283	0					
ANR	30911	Identifier	buf		30283	0					
ANR	30912	Argument	r		30283	1					
ANR	30913	Identifier	r		30283	0					
ANR	30914	IfStatement	if ( server == NULL || server -> port [ 0 ] == 0 )		30283	1					
ANR	30915	Condition	server == NULL || server -> port [ 0 ] == 0	661:12:19142:19179	30283	0	True				
ANR	30916	OrExpression	server == NULL || server -> port [ 0 ] == 0		30283	0		||			
ANR	30917	EqualityExpression	server == NULL		30283	0		==			
ANR	30918	Identifier	server		30283	0					
ANR	30919	Identifier	NULL		30283	1					
ANR	30920	EqualityExpression	server -> port [ 0 ] == 0		30283	1		==			
ANR	30921	ArrayIndexing	server -> port [ 0 ]		30283	0					
ANR	30922	PtrMemberAccess	server -> port		30283	0					
ANR	30923	Identifier	server		30283	0					
ANR	30924	Identifier	port		30283	1					
ANR	30925	PrimaryExpression	0		30283	1					
ANR	30926	PrimaryExpression	0		30283	1					
ANR	30927	CompoundStatement		92:52:2952:2952	30283	1					
ANR	30928	ExpressionStatement	"LOGE ( ""invalid command: %s:%s"" , buf , get_data ( buf , r ) )"	662:12:19196:19249	30283	0	True				
ANR	30929	CallExpression	"LOGE ( ""invalid command: %s:%s"" , buf , get_data ( buf , r ) )"		30283	0					
ANR	30930	Callee	LOGE		30283	0					
ANR	30931	Identifier	LOGE		30283	0					
ANR	30932	ArgumentList	"""invalid command: %s:%s"""		30283	1					
ANR	30933	Argument	"""invalid command: %s:%s"""		30283	0					
ANR	30934	PrimaryExpression	"""invalid command: %s:%s"""		30283	0					
ANR	30935	Argument	buf		30283	1					
ANR	30936	Identifier	buf		30283	0					
ANR	30937	Argument	"get_data ( buf , r )"		30283	2					
ANR	30938	CallExpression	"get_data ( buf , r )"		30283	0					
ANR	30939	Callee	get_data		30283	0					
ANR	30940	Identifier	get_data		30283	0					
ANR	30941	ArgumentList	buf		30283	1					
ANR	30942	Argument	buf		30283	0					
ANR	30943	Identifier	buf		30283	0					
ANR	30944	Argument	r		30283	1					
ANR	30945	Identifier	r		30283	0					
ANR	30946	IfStatement	if ( server != NULL )		30283	1					
ANR	30947	Condition	server != NULL	663:16:19267:19280	30283	0	True				
ANR	30948	EqualityExpression	server != NULL		30283	0		!=			
ANR	30949	Identifier	server		30283	0					
ANR	30950	Identifier	NULL		30283	1					
ANR	30951	CompoundStatement		94:32:3053:3053	30283	1					
ANR	30952	ExpressionStatement	destroy_server ( server )	664:16:19301:19323	30283	0	True				
ANR	30953	CallExpression	destroy_server ( server )		30283	0					
ANR	30954	Callee	destroy_server		30283	0					
ANR	30955	Identifier	destroy_server		30283	0					
ANR	30956	ArgumentList	server		30283	1					
ANR	30957	Argument	server		30283	0					
ANR	30958	Identifier	server		30283	0					
ANR	30959	ExpressionStatement	ss_free ( server )	665:16:19341:19356	30283	1	True				
ANR	30960	CallExpression	ss_free ( server )		30283	0					
ANR	30961	Callee	ss_free		30283	0					
ANR	30962	Identifier	ss_free		30283	0					
ANR	30963	ArgumentList	server		30283	1					
ANR	30964	Argument	server		30283	0					
ANR	30965	Identifier	server		30283	0					
ANR	30966	GotoStatement	goto ERROR_MSG ;	667:12:19384:19398	30283	2	True				
ANR	30967	Identifier	ERROR_MSG		30283	0					
ANR	30968	ExpressionStatement	"remove_server ( working_dir , server -> port )"	670:8:19419:19459	30283	2	True				
ANR	30969	CallExpression	"remove_server ( working_dir , server -> port )"		30283	0					
ANR	30970	Callee	remove_server		30283	0					
ANR	30971	Identifier	remove_server		30283	0					
ANR	30972	ArgumentList	working_dir		30283	1					
ANR	30973	Argument	working_dir		30283	0					
ANR	30974	Identifier	working_dir		30283	0					
ANR	30975	Argument	server -> port		30283	1					
ANR	30976	PtrMemberAccess	server -> port		30283	0					
ANR	30977	Identifier	server		30283	0					
ANR	30978	Identifier	port		30283	1					
ANR	30979	ExpressionStatement	destroy_server ( server )	671:8:19469:19491	30283	3	True				
ANR	30980	CallExpression	destroy_server ( server )		30283	0					
ANR	30981	Callee	destroy_server		30283	0					
ANR	30982	Identifier	destroy_server		30283	0					
ANR	30983	ArgumentList	server		30283	1					
ANR	30984	Argument	server		30283	0					
ANR	30985	Identifier	server		30283	0					
ANR	30986	ExpressionStatement	ss_free ( server )	672:8:19501:19516	30283	4	True				
ANR	30987	CallExpression	ss_free ( server )		30283	0					
ANR	30988	Callee	ss_free		30283	0					
ANR	30989	Identifier	ss_free		30283	0					
ANR	30990	ArgumentList	server		30283	1					
ANR	30991	Argument	server		30283	0					
ANR	30992	Identifier	server		30283	0					
ANR	30993	IdentifierDeclStatement	"char msg [ 3 ] = ""ok"" ;"	674:8:19527:19545	30283	5	True				
ANR	30994	IdentifierDecl	"msg [ 3 ] = ""ok"""		30283	0					
ANR	30995	IdentifierDeclType	char [ 3 ]		30283	0					
ANR	30996	Identifier	msg		30283	1					
ANR	30997	PrimaryExpression	3		30283	2					
ANR	30998	AssignmentExpression	"msg [ 3 ] = ""ok"""		30283	3		=			
ANR	30999	Identifier	msg		30283	0					
ANR	31000	PrimaryExpression	"""ok"""		30283	1					
ANR	31001	IfStatement	"if ( sendto ( manager -> fd , msg , 2 , 0 , ( struct sockaddr * ) & claddr , len ) != 2 )"		30283	6					
ANR	31002	Condition	"sendto ( manager -> fd , msg , 2 , 0 , ( struct sockaddr * ) & claddr , len ) != 2"	675:12:19559:19626	30283	0	True				
ANR	31003	EqualityExpression	"sendto ( manager -> fd , msg , 2 , 0 , ( struct sockaddr * ) & claddr , len ) != 2"		30283	0		!=			
ANR	31004	CallExpression	"sendto ( manager -> fd , msg , 2 , 0 , ( struct sockaddr * ) & claddr , len )"		30283	0					
ANR	31005	Callee	sendto		30283	0					
ANR	31006	Identifier	sendto		30283	0					
ANR	31007	ArgumentList	manager -> fd		30283	1					
ANR	31008	Argument	manager -> fd		30283	0					
ANR	31009	PtrMemberAccess	manager -> fd		30283	0					
ANR	31010	Identifier	manager		30283	0					
ANR	31011	Identifier	fd		30283	1					
ANR	31012	Argument	msg		30283	1					
ANR	31013	Identifier	msg		30283	0					
ANR	31014	Argument	2		30283	2					
ANR	31015	PrimaryExpression	2		30283	0					
ANR	31016	Argument	0		30283	3					
ANR	31017	PrimaryExpression	0		30283	0					
ANR	31018	Argument	( struct sockaddr * ) & claddr		30283	4					
ANR	31019	CastExpression	( struct sockaddr * ) & claddr		30283	0					
ANR	31020	CastTarget	struct sockaddr *		30283	0					
ANR	31021	UnaryOperationExpression	& claddr		30283	1					
ANR	31022	UnaryOperator	&		30283	0					
ANR	31023	Identifier	claddr		30283	1					
ANR	31024	Argument	len		30283	5					
ANR	31025	Identifier	len		30283	0					
ANR	31026	PrimaryExpression	2		30283	1					
ANR	31027	CompoundStatement		106:82:3399:3399	30283	1					
ANR	31028	ExpressionStatement	"ERROR ( ""remove_sendto"" )"	676:12:19643:19665	30283	0	True				
ANR	31029	CallExpression	"ERROR ( ""remove_sendto"" )"		30283	0					
ANR	31030	Callee	ERROR		30283	0					
ANR	31031	Identifier	ERROR		30283	0					
ANR	31032	ArgumentList	"""remove_sendto"""		30283	1					
ANR	31033	Argument	"""remove_sendto"""		30283	0					
ANR	31034	PrimaryExpression	"""remove_sendto"""		30283	0					
ANR	31035	ElseStatement	else		30283	0					
ANR	31036	IfStatement	"if ( strcmp ( action , ""stat"" ) == 0 )"		30283	0					
ANR	31037	Condition	"strcmp ( action , ""stat"" ) == 0"	678:15:19692:19718	30283	0	True				
ANR	31038	EqualityExpression	"strcmp ( action , ""stat"" ) == 0"		30283	0		==			
ANR	31039	CallExpression	"strcmp ( action , ""stat"" )"		30283	0					
ANR	31040	Callee	strcmp		30283	0					
ANR	31041	Identifier	strcmp		30283	0					
ANR	31042	ArgumentList	action		30283	1					
ANR	31043	Argument	action		30283	0					
ANR	31044	Identifier	action		30283	0					
ANR	31045	Argument	"""stat"""		30283	1					
ANR	31046	PrimaryExpression	"""stat"""		30283	0					
ANR	31047	PrimaryExpression	0		30283	1					
ANR	31048	CompoundStatement		111:8:3523:3543	30283	1					
ANR	31049	IdentifierDeclStatement	char port [ 8 ] ;	679:8:19731:19743	30283	0	True				
ANR	31050	IdentifierDecl	port [ 8 ]		30283	0					
ANR	31051	IdentifierDeclType	char [ 8 ]		30283	0					
ANR	31052	Identifier	port		30283	1					
ANR	31053	PrimaryExpression	8		30283	2					
ANR	31054	IdentifierDeclStatement	uint64_t traffic = 0 ;	680:8:19753:19773	30283	1	True				
ANR	31055	IdentifierDecl	traffic = 0		30283	0					
ANR	31056	IdentifierDeclType	uint64_t		30283	0					
ANR	31057	Identifier	traffic		30283	1					
ANR	31058	AssignmentExpression	traffic = 0		30283	2		=			
ANR	31059	Identifier	traffic		30283	0					
ANR	31060	PrimaryExpression	0		30283	1					
ANR	31061	IfStatement	"if ( parse_traffic ( buf , r , port , & traffic ) == - 1 )"		30283	2					
ANR	31062	Condition	"parse_traffic ( buf , r , port , & traffic ) == - 1"	682:12:19788:19830	30283	0	True				
ANR	31063	EqualityExpression	"parse_traffic ( buf , r , port , & traffic ) == - 1"		30283	0		==			
ANR	31064	CallExpression	"parse_traffic ( buf , r , port , & traffic )"		30283	0					
ANR	31065	Callee	parse_traffic		30283	0					
ANR	31066	Identifier	parse_traffic		30283	0					
ANR	31067	ArgumentList	buf		30283	1					
ANR	31068	Argument	buf		30283	0					
ANR	31069	Identifier	buf		30283	0					
ANR	31070	Argument	r		30283	1					
ANR	31071	Identifier	r		30283	0					
ANR	31072	Argument	port		30283	2					
ANR	31073	Identifier	port		30283	0					
ANR	31074	Argument	& traffic		30283	3					
ANR	31075	UnaryOperationExpression	& traffic		30283	0					
ANR	31076	UnaryOperator	&		30283	0					
ANR	31077	Identifier	traffic		30283	1					
ANR	31078	UnaryOperationExpression	- 1		30283	1					
ANR	31079	UnaryOperator	-		30283	0					
ANR	31080	PrimaryExpression	1		30283	1					
ANR	31081	CompoundStatement		113:57:3603:3603	30283	1					
ANR	31082	ExpressionStatement	"LOGE ( ""invalid command: %s:%s"" , buf , get_data ( buf , r ) )"	683:12:19847:19900	30283	0	True				
ANR	31083	CallExpression	"LOGE ( ""invalid command: %s:%s"" , buf , get_data ( buf , r ) )"		30283	0					
ANR	31084	Callee	LOGE		30283	0					
ANR	31085	Identifier	LOGE		30283	0					
ANR	31086	ArgumentList	"""invalid command: %s:%s"""		30283	1					
ANR	31087	Argument	"""invalid command: %s:%s"""		30283	0					
ANR	31088	PrimaryExpression	"""invalid command: %s:%s"""		30283	0					
ANR	31089	Argument	buf		30283	1					
ANR	31090	Identifier	buf		30283	0					
ANR	31091	Argument	"get_data ( buf , r )"		30283	2					
ANR	31092	CallExpression	"get_data ( buf , r )"		30283	0					
ANR	31093	Callee	get_data		30283	0					
ANR	31094	Identifier	get_data		30283	0					
ANR	31095	ArgumentList	buf		30283	1					
ANR	31096	Argument	buf		30283	0					
ANR	31097	Identifier	buf		30283	0					
ANR	31098	Argument	r		30283	1					
ANR	31099	Identifier	r		30283	0					
ANR	31100	ReturnStatement	return ;	684:12:19914:19920	30283	1	True				
ANR	31101	ExpressionStatement	"update_stat ( port , traffic )"	687:8:19941:19967	30283	3	True				
ANR	31102	CallExpression	"update_stat ( port , traffic )"		30283	0					
ANR	31103	Callee	update_stat		30283	0					
ANR	31104	Identifier	update_stat		30283	0					
ANR	31105	ArgumentList	port		30283	1					
ANR	31106	Argument	port		30283	0					
ANR	31107	Identifier	port		30283	0					
ANR	31108	Argument	traffic		30283	1					
ANR	31109	Identifier	traffic		30283	0					
ANR	31110	ElseStatement	else		30283	0					
ANR	31111	IfStatement	"if ( strcmp ( action , ""ping"" ) == 0 )"		30283	0					
ANR	31112	Condition	"strcmp ( action , ""ping"" ) == 0"	688:15:19984:20010	30283	0	True				
ANR	31113	EqualityExpression	"strcmp ( action , ""ping"" ) == 0"		30283	0		==			
ANR	31114	CallExpression	"strcmp ( action , ""ping"" )"		30283	0					
ANR	31115	Callee	strcmp		30283	0					
ANR	31116	Identifier	strcmp		30283	0					
ANR	31117	ArgumentList	action		30283	1					
ANR	31118	Argument	action		30283	0					
ANR	31119	Identifier	action		30283	0					
ANR	31120	Argument	"""ping"""		30283	1					
ANR	31121	PrimaryExpression	"""ping"""		30283	0					
ANR	31122	PrimaryExpression	0		30283	1					
ANR	31123	CompoundStatement		145:8:4681:4705	30283	1					
ANR	31124	IdentifierDeclStatement	struct cork_hash_table_entry * entry ;	689:8:20023:20058	30283	0	True				
ANR	31125	IdentifierDecl	* entry		30283	0					
ANR	31126	IdentifierDeclType	struct cork_hash_table_entry *		30283	0					
ANR	31127	Identifier	entry		30283	1					
ANR	31128	IdentifierDeclStatement	struct cork_hash_table_iterator server_iter ;	690:8:20068:20111	30283	1	True				
ANR	31129	IdentifierDecl	server_iter		30283	0					
ANR	31130	IdentifierDeclType	struct cork_hash_table_iterator		30283	0					
ANR	31131	Identifier	server_iter		30283	1					
ANR	31132	IdentifierDeclStatement	char buf [ BUF_SIZE ] ;	692:8:20122:20140	30283	2	True				
ANR	31133	IdentifierDecl	buf [ BUF_SIZE ]		30283	0					
ANR	31134	IdentifierDeclType	char [ BUF_SIZE ]		30283	0					
ANR	31135	Identifier	buf		30283	1					
ANR	31136	Identifier	BUF_SIZE		30283	2					
ANR	31137	ExpressionStatement	"memset ( buf , 0 , BUF_SIZE )"	694:8:20151:20175	30283	3	True				
ANR	31138	CallExpression	"memset ( buf , 0 , BUF_SIZE )"		30283	0					
ANR	31139	Callee	memset		30283	0					
ANR	31140	Identifier	memset		30283	0					
ANR	31141	ArgumentList	buf		30283	1					
ANR	31142	Argument	buf		30283	0					
ANR	31143	Identifier	buf		30283	0					
ANR	31144	Argument	0		30283	1					
ANR	31145	PrimaryExpression	0		30283	0					
ANR	31146	Argument	BUF_SIZE		30283	2					
ANR	31147	Identifier	BUF_SIZE		30283	0					
ANR	31148	ExpressionStatement	"sprintf ( buf , ""stat: {"" )"	695:8:20185:20208	30283	4	True				
ANR	31149	CallExpression	"sprintf ( buf , ""stat: {"" )"		30283	0					
ANR	31150	Callee	sprintf		30283	0					
ANR	31151	Identifier	sprintf		30283	0					
ANR	31152	ArgumentList	buf		30283	1					
ANR	31153	Argument	buf		30283	0					
ANR	31154	Identifier	buf		30283	0					
ANR	31155	Argument	"""stat: {"""		30283	1					
ANR	31156	PrimaryExpression	"""stat: {"""		30283	0					
ANR	31157	ExpressionStatement	"cork_hash_table_iterator_init ( server_table , & server_iter )"	697:8:20219:20276	30283	5	True				
ANR	31158	CallExpression	"cork_hash_table_iterator_init ( server_table , & server_iter )"		30283	0					
ANR	31159	Callee	cork_hash_table_iterator_init		30283	0					
ANR	31160	Identifier	cork_hash_table_iterator_init		30283	0					
ANR	31161	ArgumentList	server_table		30283	1					
ANR	31162	Argument	server_table		30283	0					
ANR	31163	Identifier	server_table		30283	0					
ANR	31164	Argument	& server_iter		30283	1					
ANR	31165	UnaryOperationExpression	& server_iter		30283	0					
ANR	31166	UnaryOperator	&		30283	0					
ANR	31167	Identifier	server_iter		30283	1					
ANR	31168	WhileStatement	while ( ( entry = cork_hash_table_iterator_next ( & server_iter ) ) != NULL )		30283	6					
ANR	31169	Condition	( entry = cork_hash_table_iterator_next ( & server_iter ) ) != NULL	699:15:20294:20354	30283	0	True				
ANR	31170	EqualityExpression	( entry = cork_hash_table_iterator_next ( & server_iter ) ) != NULL		30283	0		!=			
ANR	31171	AssignmentExpression	entry = cork_hash_table_iterator_next ( & server_iter )		30283	0		=			
ANR	31172	Identifier	entry		30283	0					
ANR	31173	CallExpression	cork_hash_table_iterator_next ( & server_iter )		30283	1					
ANR	31174	Callee	cork_hash_table_iterator_next		30283	0					
ANR	31175	Identifier	cork_hash_table_iterator_next		30283	0					
ANR	31176	ArgumentList	& server_iter		30283	1					
ANR	31177	Argument	& server_iter		30283	0					
ANR	31178	UnaryOperationExpression	& server_iter		30283	0					
ANR	31179	UnaryOperator	&		30283	0					
ANR	31180	Identifier	server_iter		30283	1					
ANR	31181	Identifier	NULL		30283	1					
ANR	31182	CompoundStatement		132:12:4208:4243	30283	1					
ANR	31183	IdentifierDeclStatement	struct server * server = ( struct server * ) entry -> value ;	700:12:20371:20424	30283	0	True				
ANR	31184	IdentifierDecl	* server = ( struct server * ) entry -> value		30283	0					
ANR	31185	IdentifierDeclType	struct server *		30283	0					
ANR	31186	Identifier	server		30283	1					
ANR	31187	AssignmentExpression	* server = ( struct server * ) entry -> value		30283	2		=			
ANR	31188	Identifier	server		30283	0					
ANR	31189	CastExpression	( struct server * ) entry -> value		30283	1					
ANR	31190	CastTarget	struct server *		30283	0					
ANR	31191	PtrMemberAccess	entry -> value		30283	1					
ANR	31192	Identifier	entry		30283	0					
ANR	31193	Identifier	value		30283	1					
ANR	31194	IdentifierDeclStatement	size_t pos = strlen ( buf ) ;	701:12:20438:20473	30283	1	True				
ANR	31195	IdentifierDecl	pos = strlen ( buf )		30283	0					
ANR	31196	IdentifierDeclType	size_t		30283	0					
ANR	31197	Identifier	pos		30283	1					
ANR	31198	AssignmentExpression	pos = strlen ( buf )		30283	2		=			
ANR	31199	Identifier	pos		30283	0					
ANR	31200	CallExpression	strlen ( buf )		30283	1					
ANR	31201	Callee	strlen		30283	0					
ANR	31202	Identifier	strlen		30283	0					
ANR	31203	ArgumentList	buf		30283	1					
ANR	31204	Argument	buf		30283	0					
ANR	31205	Identifier	buf		30283	0					
ANR	31206	IfStatement	if ( pos > BUF_SIZE / 2 )		30283	2					
ANR	31207	Condition	pos > BUF_SIZE / 2	702:16:20491:20508	30283	0	True				
ANR	31208	RelationalExpression	pos > BUF_SIZE / 2		30283	0		>			
ANR	31209	Identifier	pos		30283	0					
ANR	31210	MultiplicativeExpression	BUF_SIZE / 2		30283	1		/			
ANR	31211	Identifier	BUF_SIZE		30283	0					
ANR	31212	PrimaryExpression	2		30283	1					
ANR	31213	CompoundStatement		133:36:4281:4281	30283	1					
ANR	31214	ExpressionStatement	buf [ pos - 1 ] = '}'	703:16:20529:20547	30283	0	True				
ANR	31215	AssignmentExpression	buf [ pos - 1 ] = '}'		30283	0		=			
ANR	31216	ArrayIndexing	buf [ pos - 1 ]		30283	0					
ANR	31217	Identifier	buf		30283	0					
ANR	31218	AdditiveExpression	pos - 1		30283	1		-			
ANR	31219	Identifier	pos		30283	0					
ANR	31220	PrimaryExpression	1		30283	1					
ANR	31221	PrimaryExpression	'}'		30283	1					
ANR	31222	IfStatement	"if ( sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos )"		30283	1					
ANR	31223	Condition	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"	704:20:20569:20660	30283	0	True				
ANR	31224	EqualityExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"		30283	0		!=			
ANR	31225	CallExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len )"		30283	0					
ANR	31226	Callee	sendto		30283	0					
ANR	31227	Identifier	sendto		30283	0					
ANR	31228	ArgumentList	manager -> fd		30283	1					
ANR	31229	Argument	manager -> fd		30283	0					
ANR	31230	PtrMemberAccess	manager -> fd		30283	0					
ANR	31231	Identifier	manager		30283	0					
ANR	31232	Identifier	fd		30283	1					
ANR	31233	Argument	buf		30283	1					
ANR	31234	Identifier	buf		30283	0					
ANR	31235	Argument	pos		30283	2					
ANR	31236	Identifier	pos		30283	0					
ANR	31237	Argument	0		30283	3					
ANR	31238	PrimaryExpression	0		30283	0					
ANR	31239	Argument	( struct sockaddr * ) & claddr		30283	4					
ANR	31240	CastExpression	( struct sockaddr * ) & claddr		30283	0					
ANR	31241	CastTarget	struct sockaddr *		30283	0					
ANR	31242	UnaryOperationExpression	& claddr		30283	1					
ANR	31243	UnaryOperator	&		30283	0					
ANR	31244	Identifier	claddr		30283	1					
ANR	31245	Argument	len		30283	5					
ANR	31246	Identifier	len		30283	0					
ANR	31247	Identifier	pos		30283	1					
ANR	31248	CompoundStatement		136:28:4433:4433	30283	1					
ANR	31249	ExpressionStatement	"ERROR ( ""ping_sendto"" )"	706:20:20685:20705	30283	0	True				
ANR	31250	CallExpression	"ERROR ( ""ping_sendto"" )"		30283	0					
ANR	31251	Callee	ERROR		30283	0					
ANR	31252	Identifier	ERROR		30283	0					
ANR	31253	ArgumentList	"""ping_sendto"""		30283	1					
ANR	31254	Argument	"""ping_sendto"""		30283	0					
ANR	31255	PrimaryExpression	"""ping_sendto"""		30283	0					
ANR	31256	ExpressionStatement	"memset ( buf , 0 , BUF_SIZE )"	708:16:20741:20765	30283	2	True				
ANR	31257	CallExpression	"memset ( buf , 0 , BUF_SIZE )"		30283	0					
ANR	31258	Callee	memset		30283	0					
ANR	31259	Identifier	memset		30283	0					
ANR	31260	ArgumentList	buf		30283	1					
ANR	31261	Argument	buf		30283	0					
ANR	31262	Identifier	buf		30283	0					
ANR	31263	Argument	0		30283	1					
ANR	31264	PrimaryExpression	0		30283	0					
ANR	31265	Argument	BUF_SIZE		30283	2					
ANR	31266	Identifier	BUF_SIZE		30283	0					
ANR	31267	ElseStatement	else		30283	0					
ANR	31268	CompoundStatement		140:19:4556:4556	30283	0					
ANR	31269	Statement	sprintf	710:16:20804:20810	30283	0	True				
ANR	31270	Statement	(	710:23:20811:20811	30283	1	True				
ANR	31271	Statement	buf	710:24:20812:20814	30283	2	True				
ANR	31272	Statement	+	710:28:20816:20816	30283	3	True				
ANR	31273	Statement	pos	710:30:20818:20820	30283	4	True				
ANR	31274	Statement	","	710:33:20821:20821	30283	5	True				
ANR	31275	Statement	"""\\""%s\\"":%"""	710:35:20823:20832	30283	6	True				
ANR	31276	Statement	PRIu64	710:46:20834:20839	30283	7	True				
ANR	31277	Statement	""","""	710:53:20841:20843	30283	8	True				
ANR	31278	Statement	","	710:56:20844:20844	30283	9	True				
ANR	31279	Statement	server	710:58:20846:20851	30283	10	True				
ANR	31280	Statement	->	710:64:20852:20853	30283	11	True				
ANR	31281	Statement	port	710:66:20854:20857	30283	12	True				
ANR	31282	Statement	","	710:70:20858:20858	30283	13	True				
ANR	31283	Statement	server	710:72:20860:20865	30283	14	True				
ANR	31284	Statement	->	710:78:20866:20867	30283	15	True				
ANR	31285	Statement	traffic	710:80:20868:20874	30283	16	True				
ANR	31286	Statement	)	710:87:20875:20875	30283	17	True				
ANR	31287	ExpressionStatement		710:88:20876:20876	30283	18	True				
ANR	31288	IdentifierDeclStatement	size_t pos = strlen ( buf ) ;	714:8:20911:20935	30283	7	True				
ANR	31289	IdentifierDecl	pos = strlen ( buf )		30283	0					
ANR	31290	IdentifierDeclType	size_t		30283	0					
ANR	31291	Identifier	pos		30283	1					
ANR	31292	AssignmentExpression	pos = strlen ( buf )		30283	2		=			
ANR	31293	Identifier	pos		30283	0					
ANR	31294	CallExpression	strlen ( buf )		30283	1					
ANR	31295	Callee	strlen		30283	0					
ANR	31296	Identifier	strlen		30283	0					
ANR	31297	ArgumentList	buf		30283	1					
ANR	31298	Argument	buf		30283	0					
ANR	31299	Identifier	buf		30283	0					
ANR	31300	IfStatement	if ( pos > 7 )		30283	8					
ANR	31301	Condition	pos > 7	715:12:20949:20955	30283	0	True				
ANR	31302	RelationalExpression	pos > 7		30283	0		>			
ANR	31303	Identifier	pos		30283	0					
ANR	31304	PrimaryExpression	7		30283	1					
ANR	31305	CompoundStatement		146:21:4728:4728	30283	1					
ANR	31306	ExpressionStatement	buf [ pos - 1 ] = '}'	716:12:20972:20990	30283	0	True				
ANR	31307	AssignmentExpression	buf [ pos - 1 ] = '}'		30283	0		=			
ANR	31308	ArrayIndexing	buf [ pos - 1 ]		30283	0					
ANR	31309	Identifier	buf		30283	0					
ANR	31310	AdditiveExpression	pos - 1		30283	1		-			
ANR	31311	Identifier	pos		30283	0					
ANR	31312	PrimaryExpression	1		30283	1					
ANR	31313	PrimaryExpression	'}'		30283	1					
ANR	31314	ElseStatement	else		30283	0					
ANR	31315	CompoundStatement		148:15:4777:4777	30283	0					
ANR	31316	ExpressionStatement	buf [ pos ] = '}'	718:12:21021:21035	30283	0	True				
ANR	31317	AssignmentExpression	buf [ pos ] = '}'		30283	0		=			
ANR	31318	ArrayIndexing	buf [ pos ]		30283	0					
ANR	31319	Identifier	buf		30283	0					
ANR	31320	Identifier	pos		30283	1					
ANR	31321	PrimaryExpression	'}'		30283	1					
ANR	31322	ExpressionStatement	pos ++	719:12:21049:21054	30283	1	True				
ANR	31323	PostIncDecOperationExpression	pos ++		30283	0					
ANR	31324	Identifier	pos		30283	0					
ANR	31325	IncDec	++		30283	1					
ANR	31326	IfStatement	"if ( sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos )"		30283	9					
ANR	31327	Condition	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"	722:12:21079:21162	30283	0	True				
ANR	31328	EqualityExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"		30283	0		!=			
ANR	31329	CallExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len )"		30283	0					
ANR	31330	Callee	sendto		30283	0					
ANR	31331	Identifier	sendto		30283	0					
ANR	31332	ArgumentList	manager -> fd		30283	1					
ANR	31333	Argument	manager -> fd		30283	0					
ANR	31334	PtrMemberAccess	manager -> fd		30283	0					
ANR	31335	Identifier	manager		30283	0					
ANR	31336	Identifier	fd		30283	1					
ANR	31337	Argument	buf		30283	1					
ANR	31338	Identifier	buf		30283	0					
ANR	31339	Argument	pos		30283	2					
ANR	31340	Identifier	pos		30283	0					
ANR	31341	Argument	0		30283	3					
ANR	31342	PrimaryExpression	0		30283	0					
ANR	31343	Argument	( struct sockaddr * ) & claddr		30283	4					
ANR	31344	CastExpression	( struct sockaddr * ) & claddr		30283	0					
ANR	31345	CastTarget	struct sockaddr *		30283	0					
ANR	31346	UnaryOperationExpression	& claddr		30283	1					
ANR	31347	UnaryOperator	&		30283	0					
ANR	31348	Identifier	claddr		30283	1					
ANR	31349	Argument	len		30283	5					
ANR	31350	Identifier	len		30283	0					
ANR	31351	Identifier	pos		30283	1					
ANR	31352	CompoundStatement		154:20:4935:4935	30283	1					
ANR	31353	ExpressionStatement	"ERROR ( ""ping_sendto"" )"	724:12:21179:21199	30283	0	True				
ANR	31354	CallExpression	"ERROR ( ""ping_sendto"" )"		30283	0					
ANR	31355	Callee	ERROR		30283	0					
ANR	31356	Identifier	ERROR		30283	0					
ANR	31357	ArgumentList	"""ping_sendto"""		30283	1					
ANR	31358	Argument	"""ping_sendto"""		30283	0					
ANR	31359	PrimaryExpression	"""ping_sendto"""		30283	0					
ANR	31360	ReturnStatement	return ;	728:4:21222:21228	30283	13	True				
ANR	31361	Label	ERROR_MSG :	730:0:21231:21240	30283	14	True				
ANR	31362	Identifier	ERROR_MSG		30283	0					
ANR	31363	ExpressionStatement	"strcpy ( buf , ""err"" )"	731:4:21246:21264	30283	15	True				
ANR	31364	CallExpression	"strcpy ( buf , ""err"" )"		30283	0					
ANR	31365	Callee	strcpy		30283	0					
ANR	31366	Identifier	strcpy		30283	0					
ANR	31367	ArgumentList	buf		30283	1					
ANR	31368	Argument	buf		30283	0					
ANR	31369	Identifier	buf		30283	0					
ANR	31370	Argument	"""err"""		30283	1					
ANR	31371	PrimaryExpression	"""err"""		30283	0					
ANR	31372	IfStatement	"if ( sendto ( manager -> fd , buf , 3 , 0 , ( struct sockaddr * ) & claddr , len ) != 3 )"		30283	16					
ANR	31373	Condition	"sendto ( manager -> fd , buf , 3 , 0 , ( struct sockaddr * ) & claddr , len ) != 3"	732:8:21274:21341	30283	0	True				
ANR	31374	EqualityExpression	"sendto ( manager -> fd , buf , 3 , 0 , ( struct sockaddr * ) & claddr , len ) != 3"		30283	0		!=			
ANR	31375	CallExpression	"sendto ( manager -> fd , buf , 3 , 0 , ( struct sockaddr * ) & claddr , len )"		30283	0					
ANR	31376	Callee	sendto		30283	0					
ANR	31377	Identifier	sendto		30283	0					
ANR	31378	ArgumentList	manager -> fd		30283	1					
ANR	31379	Argument	manager -> fd		30283	0					
ANR	31380	PtrMemberAccess	manager -> fd		30283	0					
ANR	31381	Identifier	manager		30283	0					
ANR	31382	Identifier	fd		30283	1					
ANR	31383	Argument	buf		30283	1					
ANR	31384	Identifier	buf		30283	0					
ANR	31385	Argument	3		30283	2					
ANR	31386	PrimaryExpression	3		30283	0					
ANR	31387	Argument	0		30283	3					
ANR	31388	PrimaryExpression	0		30283	0					
ANR	31389	Argument	( struct sockaddr * ) & claddr		30283	4					
ANR	31390	CastExpression	( struct sockaddr * ) & claddr		30283	0					
ANR	31391	CastTarget	struct sockaddr *		30283	0					
ANR	31392	UnaryOperationExpression	& claddr		30283	1					
ANR	31393	UnaryOperator	&		30283	0					
ANR	31394	Identifier	claddr		30283	1					
ANR	31395	Argument	len		30283	5					
ANR	31396	Identifier	len		30283	0					
ANR	31397	PrimaryExpression	3		30283	1					
ANR	31398	CompoundStatement		163:78:5114:5114	30283	1					
ANR	31399	ExpressionStatement	"ERROR ( ""error_sendto"" )"	733:8:21354:21375	30283	0	True				
ANR	31400	CallExpression	"ERROR ( ""error_sendto"" )"		30283	0					
ANR	31401	Callee	ERROR		30283	0					
ANR	31402	Identifier	ERROR		30283	0					
ANR	31403	ArgumentList	"""error_sendto"""		30283	1					
ANR	31404	Argument	"""error_sendto"""		30283	0					
ANR	31405	PrimaryExpression	"""error_sendto"""		30283	0					
ANR	31406	ReturnType	static void		30283	1					
ANR	31407	Identifier	manager_recv_cb		30283	2					
ANR	31408	ParameterList	"EV_P_ ev_io * w , int revents"		30283	3					
ANR	31409	Parameter	EV_P_ ev_io * w	569:16:16200:16213	30283	0	True				
ANR	31410	ParameterType	EV_P_ ev_io *		30283	0					
ANR	31411	Identifier	w		30283	1					
ANR	31412	Parameter	int revents	569:32:16216:16226	30283	1	True				
ANR	31413	ParameterType	int		30283	0					
ANR	31414	Identifier	revents		30283	1					
ANR	31415	CFGEntryNode	ENTRY		30283		True				
ANR	31416	CFGExitNode	EXIT		30283		True				
ANR	31417	Symbol	msg		30283						
ANR	31418	Symbol	sendto		30283						
ANR	31419	Symbol	server_table		30283						
ANR	31420	Symbol	revents		30283						
ANR	31421	Symbol	server -> password		30283						
ANR	31422	Symbol	get_action		30283						
ANR	31423	Symbol	strlen		30283						
ANR	31424	Symbol	manager -> fd		30283						
ANR	31425	Symbol	len		30283						
ANR	31426	Symbol	parse_traffic		30283						
ANR	31427	Symbol	action		30283						
ANR	31428	Symbol	server -> port		30283						
ANR	31429	Symbol	& iter		30283						
ANR	31430	Symbol	* manager		30283						
ANR	31431	Symbol	traffic		30283						
ANR	31432	Symbol	strcmp		30283						
ANR	31433	Symbol	ret		30283						
ANR	31434	Symbol	* buf		30283						
ANR	31435	Symbol	NULL		30283						
ANR	31436	Symbol	* server -> password		30283						
ANR	31437	Symbol	method		30283						
ANR	31438	Symbol	manager -> method		30283						
ANR	31439	Symbol	iter		30283						
ANR	31440	Symbol	recvfrom		30283						
ANR	31441	Symbol	entry		30283						
ANR	31442	Symbol	& traffic		30283						
ANR	31443	Symbol	port		30283						
ANR	31444	Symbol	entry -> value		30283						
ANR	31445	Symbol	BUF_SIZE		30283						
ANR	31446	Symbol	get_data		30283						
ANR	31447	Symbol	entry_len		30283						
ANR	31448	Symbol	& len		30283						
ANR	31449	Symbol	* pos		30283						
ANR	31450	Symbol	server		30283						
ANR	31451	Symbol	* server		30283						
ANR	31452	Symbol	working_dir		30283						
ANR	31453	Symbol	get_server		30283						
ANR	31454	Symbol	msg_len		30283						
ANR	31455	Symbol	server_iter		30283						
ANR	31456	Symbol	claddr		30283						
ANR	31457	Symbol	pos		30283						
ANR	31458	Symbol	& claddr		30283						
ANR	31459	Symbol	add_server		30283						
ANR	31460	Symbol	* entry		30283						
ANR	31461	Symbol	* server -> port		30283						
ANR	31462	Symbol	manager		30283						
ANR	31463	Symbol	server -> method		30283						
ANR	31464	Symbol	cork_hash_table_iterator_next		30283						
ANR	31465	Symbol	& server_iter		30283						
ANR	31466	Symbol	r		30283						
ANR	31467	Symbol	buf		30283						
ANR	31468	Symbol	w		30283						
ANR	31469	Symbol	* * server		30283						
ANR	31470	Function	signal_cb	737:0:21386:21605							
ANR	31471	FunctionDef	"signal_cb (EV_P_ ev_signal * w , int revents)"		31470	0					
ANR	31472	CompoundStatement		739:0:21441:21605	31470	0					
ANR	31473	IfStatement	if ( revents & EV_SIGNAL )		31470	0					
ANR	31474	Condition	revents & EV_SIGNAL	740:8:21451:21469	31470	0	True				
ANR	31475	BitAndExpression	revents & EV_SIGNAL		31470	0		&			
ANR	31476	Identifier	revents		31470	0					
ANR	31477	Identifier	EV_SIGNAL		31470	1					
ANR	31478	CompoundStatement		2:29:30:30	31470	1					
ANR	31479	SwitchStatement	switch ( w -> signum )		31470	0					
ANR	31480	Condition	w -> signum	741:16:21490:21498	31470	0	True				
ANR	31481	PtrMemberAccess	w -> signum		31470	0					
ANR	31482	Identifier	w		31470	0					
ANR	31483	Identifier	signum		31470	1					
ANR	31484	CompoundStatement		3:27:59:59	31470	1					
ANR	31485	Label	case SIGINT :	742:8:21511:21522	31470	0	True				
ANR	31486	Identifier	SIGINT		31470	0					
ANR	31487	Label	case SIGTERM :	743:8:21532:21544	31470	1	True				
ANR	31488	Identifier	SIGTERM		31470	0					
ANR	31489	Statement	ev_unloop	744:12:21558:21566	31470	2	True				
ANR	31490	Statement	(	744:21:21567:21567	31470	3	True				
ANR	31491	Statement	EV_A_	744:22:21568:21572	31470	4	True				
ANR	31492	Statement	EVUNLOOP_ALL	744:28:21574:21585	31470	5	True				
ANR	31493	Statement	)	744:40:21586:21586	31470	6	True				
ANR	31494	ExpressionStatement		744:41:21587:21587	31470	7	True				
ANR	31495	ReturnType	static void		31470	1					
ANR	31496	Identifier	signal_cb		31470	2					
ANR	31497	ParameterList	"EV_P_ ev_signal * w , int revents"		31470	3					
ANR	31498	Parameter	EV_P_ ev_signal * w	738:10:21408:21425	31470	0	True				
ANR	31499	ParameterType	EV_P_ ev_signal *		31470	0					
ANR	31500	Identifier	w		31470	1					
ANR	31501	Parameter	int revents	738:30:21428:21438	31470	1	True				
ANR	31502	ParameterType	int		31470	0					
ANR	31503	Identifier	revents		31470	1					
ANR	31504	CFGEntryNode	ENTRY		31470		True				
ANR	31505	CFGExitNode	EXIT		31470		True				
ANR	31506	Symbol	* w		31470						
ANR	31507	Symbol	w -> signum		31470						
ANR	31508	Symbol	revents		31470						
ANR	31509	Symbol	w		31470						
ANR	31510	Symbol	EV_SIGNAL		31470						
ANR	31511	Function	create_server_socket	749:0:21608:23890							
ANR	31512	FunctionDef	"create_server_socket (const char * host , const char * port)"		31511	0					
ANR	31513	CompoundStatement		751:0:21669:23890	31511	0					
ANR	31514	IdentifierDeclStatement	struct addrinfo hints ;	752:4:21675:21696	31511	0	True				
ANR	31515	IdentifierDecl	hints		31511	0					
ANR	31516	IdentifierDeclType	struct addrinfo		31511	0					
ANR	31517	Identifier	hints		31511	1					
ANR	31518	IdentifierDeclStatement	"struct addrinfo * result , * rp , * ipv4v6bindall ;"	753:4:21702:21746	31511	1	True				
ANR	31519	IdentifierDecl	* result		31511	0					
ANR	31520	IdentifierDeclType	struct addrinfo *		31511	0					
ANR	31521	Identifier	result		31511	1					
ANR	31522	IdentifierDecl	* rp		31511	1					
ANR	31523	IdentifierDeclType	struct addrinfo *		31511	0					
ANR	31524	Identifier	rp		31511	1					
ANR	31525	IdentifierDecl	* ipv4v6bindall		31511	2					
ANR	31526	IdentifierDeclType	struct addrinfo *		31511	0					
ANR	31527	Identifier	ipv4v6bindall		31511	1					
ANR	31528	IdentifierDeclStatement	"int s , server_sock ;"	754:4:21752:21770	31511	2	True				
ANR	31529	IdentifierDecl	s		31511	0					
ANR	31530	IdentifierDeclType	int		31511	0					
ANR	31531	Identifier	s		31511	1					
ANR	31532	IdentifierDecl	server_sock		31511	1					
ANR	31533	IdentifierDeclType	int		31511	0					
ANR	31534	Identifier	server_sock		31511	1					
ANR	31535	ExpressionStatement	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"	756:4:21777:21819	31511	3	True				
ANR	31536	CallExpression	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"		31511	0					
ANR	31537	Callee	memset		31511	0					
ANR	31538	Identifier	memset		31511	0					
ANR	31539	ArgumentList	& hints		31511	1					
ANR	31540	Argument	& hints		31511	0					
ANR	31541	UnaryOperationExpression	& hints		31511	0					
ANR	31542	UnaryOperator	&		31511	0					
ANR	31543	Identifier	hints		31511	1					
ANR	31544	Argument	0		31511	1					
ANR	31545	PrimaryExpression	0		31511	0					
ANR	31546	Argument	sizeof ( struct addrinfo )		31511	2					
ANR	31547	SizeofExpression	sizeof ( struct addrinfo )		31511	0					
ANR	31548	Sizeof	sizeof		31511	0					
ANR	31549	SizeofOperand	struct addrinfo		31511	1					
ANR	31550	ExpressionStatement	hints . ai_family = AF_UNSPEC	757:4:21825:21854	31511	4	True				
ANR	31551	AssignmentExpression	hints . ai_family = AF_UNSPEC		31511	0		=			
ANR	31552	MemberAccess	hints . ai_family		31511	0					
ANR	31553	Identifier	hints		31511	0					
ANR	31554	Identifier	ai_family		31511	1					
ANR	31555	Identifier	AF_UNSPEC		31511	1					
ANR	31556	ExpressionStatement	hints . ai_socktype = SOCK_DGRAM	758:4:21909:21939	31511	5	True				
ANR	31557	AssignmentExpression	hints . ai_socktype = SOCK_DGRAM		31511	0		=			
ANR	31558	MemberAccess	hints . ai_socktype		31511	0					
ANR	31559	Identifier	hints		31511	0					
ANR	31560	Identifier	ai_socktype		31511	1					
ANR	31561	Identifier	SOCK_DGRAM		31511	1					
ANR	31562	ExpressionStatement	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG	759:4:21985:22031	31511	6	True				
ANR	31563	AssignmentExpression	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG		31511	0		=			
ANR	31564	MemberAccess	hints . ai_flags		31511	0					
ANR	31565	Identifier	hints		31511	0					
ANR	31566	Identifier	ai_flags		31511	1					
ANR	31567	InclusiveOrExpression	AI_PASSIVE | AI_ADDRCONFIG		31511	1		|			
ANR	31568	Identifier	AI_PASSIVE		31511	0					
ANR	31569	Identifier	AI_ADDRCONFIG		31511	1					
ANR	31570	ExpressionStatement	hints . ai_protocol = IPPROTO_UDP	760:4:22067:22098	31511	7	True				
ANR	31571	AssignmentExpression	hints . ai_protocol = IPPROTO_UDP		31511	0		=			
ANR	31572	MemberAccess	hints . ai_protocol		31511	0					
ANR	31573	Identifier	hints		31511	0					
ANR	31574	Identifier	ai_protocol		31511	1					
ANR	31575	Identifier	IPPROTO_UDP		31511	1					
ANR	31576	ExpressionStatement	"s = getaddrinfo ( host , port , & hints , & result )"	762:4:22105:22149	31511	8	True				
ANR	31577	AssignmentExpression	"s = getaddrinfo ( host , port , & hints , & result )"		31511	0		=			
ANR	31578	Identifier	s		31511	0					
ANR	31579	CallExpression	"getaddrinfo ( host , port , & hints , & result )"		31511	1					
ANR	31580	Callee	getaddrinfo		31511	0					
ANR	31581	Identifier	getaddrinfo		31511	0					
ANR	31582	ArgumentList	host		31511	1					
ANR	31583	Argument	host		31511	0					
ANR	31584	Identifier	host		31511	0					
ANR	31585	Argument	port		31511	1					
ANR	31586	Identifier	port		31511	0					
ANR	31587	Argument	& hints		31511	2					
ANR	31588	UnaryOperationExpression	& hints		31511	0					
ANR	31589	UnaryOperator	&		31511	0					
ANR	31590	Identifier	hints		31511	1					
ANR	31591	Argument	& result		31511	3					
ANR	31592	UnaryOperationExpression	& result		31511	0					
ANR	31593	UnaryOperator	&		31511	0					
ANR	31594	Identifier	result		31511	1					
ANR	31595	IfStatement	if ( s != 0 )		31511	9					
ANR	31596	Condition	s != 0	763:8:22159:22164	31511	0	True				
ANR	31597	EqualityExpression	s != 0		31511	0		!=			
ANR	31598	Identifier	s		31511	0					
ANR	31599	PrimaryExpression	0		31511	1					
ANR	31600	CompoundStatement		13:16:497:497	31511	1					
ANR	31601	ExpressionStatement	"LOGE ( ""getaddrinfo: %s"" , gai_strerror ( s ) )"	764:8:22177:22217	31511	0	True				
ANR	31602	CallExpression	"LOGE ( ""getaddrinfo: %s"" , gai_strerror ( s ) )"		31511	0					
ANR	31603	Callee	LOGE		31511	0					
ANR	31604	Identifier	LOGE		31511	0					
ANR	31605	ArgumentList	"""getaddrinfo: %s"""		31511	1					
ANR	31606	Argument	"""getaddrinfo: %s"""		31511	0					
ANR	31607	PrimaryExpression	"""getaddrinfo: %s"""		31511	0					
ANR	31608	Argument	gai_strerror ( s )		31511	1					
ANR	31609	CallExpression	gai_strerror ( s )		31511	0					
ANR	31610	Callee	gai_strerror		31511	0					
ANR	31611	Identifier	gai_strerror		31511	0					
ANR	31612	ArgumentList	s		31511	1					
ANR	31613	Argument	s		31511	0					
ANR	31614	Identifier	s		31511	0					
ANR	31615	ReturnStatement	return - 1 ;	765:8:22227:22236	31511	1	True				
ANR	31616	UnaryOperationExpression	- 1		31511	0					
ANR	31617	UnaryOperator	-		31511	0					
ANR	31618	PrimaryExpression	1		31511	1					
ANR	31619	ExpressionStatement	rp = result	768:4:22249:22260	31511	10	True				
ANR	31620	AssignmentExpression	rp = result		31511	0		=			
ANR	31621	Identifier	rp		31511	0					
ANR	31622	Identifier	result		31511	1					
ANR	31623	IfStatement	if ( ! host )		31511	11					
ANR	31624	Condition	! host	776:8:22604:22608	31511	0	True				
ANR	31625	UnaryOperationExpression	! host		31511	0					
ANR	31626	UnaryOperator	!		31511	0					
ANR	31627	Identifier	host		31511	1					
ANR	31628	CompoundStatement		26:15:941:941	31511	1					
ANR	31629	ExpressionStatement	ipv4v6bindall = result	777:8:22621:22643	31511	0	True				
ANR	31630	AssignmentExpression	ipv4v6bindall = result		31511	0		=			
ANR	31631	Identifier	ipv4v6bindall		31511	0					
ANR	31632	Identifier	result		31511	1					
ANR	31633	WhileStatement	while ( ipv4v6bindall )		31511	1					
ANR	31634	Condition	ipv4v6bindall	780:15:22740:22752	31511	0	True				
ANR	31635	Identifier	ipv4v6bindall		31511	0					
ANR	31636	CompoundStatement		30:30:1085:1085	31511	1					
ANR	31637	IfStatement	if ( ipv4v6bindall -> ai_family == AF_INET6 )		31511	0					
ANR	31638	Condition	ipv4v6bindall -> ai_family == AF_INET6	781:16:22773:22808	31511	0	True				
ANR	31639	EqualityExpression	ipv4v6bindall -> ai_family == AF_INET6		31511	0		==			
ANR	31640	PtrMemberAccess	ipv4v6bindall -> ai_family		31511	0					
ANR	31641	Identifier	ipv4v6bindall		31511	0					
ANR	31642	Identifier	ai_family		31511	1					
ANR	31643	Identifier	AF_INET6		31511	1					
ANR	31644	CompoundStatement		31:54:1141:1141	31511	1					
ANR	31645	ExpressionStatement	rp = ipv4v6bindall	782:16:22829:22847	31511	0	True				
ANR	31646	AssignmentExpression	rp = ipv4v6bindall		31511	0		=			
ANR	31647	Identifier	rp		31511	0					
ANR	31648	Identifier	ipv4v6bindall		31511	1					
ANR	31649	BreakStatement	break ;	783:16:22905:22910	31511	1	True				
ANR	31650	ExpressionStatement	ipv4v6bindall = ipv4v6bindall -> ai_next	785:12:22938:22976	31511	1	True				
ANR	31651	AssignmentExpression	ipv4v6bindall = ipv4v6bindall -> ai_next		31511	0		=			
ANR	31652	Identifier	ipv4v6bindall		31511	0					
ANR	31653	PtrMemberAccess	ipv4v6bindall -> ai_next		31511	1					
ANR	31654	Identifier	ipv4v6bindall		31511	0					
ANR	31655	Identifier	ai_next		31511	1					
ANR	31656	ForStatement	for ( ; rp != NULL ; rp = rp -> ai_next )		31511	12					
ANR	31657	Condition	rp != NULL	789:26:23057:23066	31511	0	True				
ANR	31658	EqualityExpression	rp != NULL		31511	0		!=			
ANR	31659	Identifier	rp		31511	0					
ANR	31660	Identifier	NULL		31511	1					
ANR	31661	AssignmentExpression	rp = rp -> ai_next	789:38:23069:23084	31511	1	True	=			
ANR	31662	Identifier	rp		31511	0					
ANR	31663	PtrMemberAccess	rp -> ai_next		31511	1					
ANR	31664	Identifier	rp		31511	0					
ANR	31665	Identifier	ai_next		31511	1					
ANR	31666	CompoundStatement		50:8:1758:1769	31511	2					
ANR	31667	ExpressionStatement	"server_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"	790:8:23097:23166	31511	0	True				
ANR	31668	AssignmentExpression	"server_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		31511	0		=			
ANR	31669	Identifier	server_sock		31511	0					
ANR	31670	CallExpression	"socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		31511	1					
ANR	31671	Callee	socket		31511	0					
ANR	31672	Identifier	socket		31511	0					
ANR	31673	ArgumentList	rp -> ai_family		31511	1					
ANR	31674	Argument	rp -> ai_family		31511	0					
ANR	31675	PtrMemberAccess	rp -> ai_family		31511	0					
ANR	31676	Identifier	rp		31511	0					
ANR	31677	Identifier	ai_family		31511	1					
ANR	31678	Argument	rp -> ai_socktype		31511	1					
ANR	31679	PtrMemberAccess	rp -> ai_socktype		31511	0					
ANR	31680	Identifier	rp		31511	0					
ANR	31681	Identifier	ai_socktype		31511	1					
ANR	31682	Argument	rp -> ai_protocol		31511	2					
ANR	31683	PtrMemberAccess	rp -> ai_protocol		31511	0					
ANR	31684	Identifier	rp		31511	0					
ANR	31685	Identifier	ai_protocol		31511	1					
ANR	31686	IfStatement	if ( server_sock == - 1 )		31511	1					
ANR	31687	Condition	server_sock == - 1	791:12:23180:23196	31511	0	True				
ANR	31688	EqualityExpression	server_sock == - 1		31511	0		==			
ANR	31689	Identifier	server_sock		31511	0					
ANR	31690	UnaryOperationExpression	- 1		31511	1					
ANR	31691	UnaryOperator	-		31511	0					
ANR	31692	PrimaryExpression	1		31511	1					
ANR	31693	CompoundStatement		41:31:1529:1529	31511	1					
ANR	31694	ContinueStatement	continue ;	792:12:23213:23221	31511	0	True				
ANR	31695	IfStatement	if ( rp -> ai_family == AF_INET6 )		31511	2					
ANR	31696	Condition	rp -> ai_family == AF_INET6	795:12:23246:23270	31511	0	True				
ANR	31697	EqualityExpression	rp -> ai_family == AF_INET6		31511	0		==			
ANR	31698	PtrMemberAccess	rp -> ai_family		31511	0					
ANR	31699	Identifier	rp		31511	0					
ANR	31700	Identifier	ai_family		31511	1					
ANR	31701	Identifier	AF_INET6		31511	1					
ANR	31702	CompoundStatement		46:12:1617:1644	31511	1					
ANR	31703	IdentifierDeclStatement	int ipv6only = host ? 1 : 0 ;	796:12:23287:23314	31511	0	True				
ANR	31704	IdentifierDecl	ipv6only = host ? 1 : 0		31511	0					
ANR	31705	IdentifierDeclType	int		31511	0					
ANR	31706	Identifier	ipv6only		31511	1					
ANR	31707	AssignmentExpression	ipv6only = host ? 1 : 0		31511	2		=			
ANR	31708	Identifier	ipv6only		31511	0					
ANR	31709	ConditionalExpression	host ? 1 : 0		31511	1					
ANR	31710	Condition	host		31511	0					
ANR	31711	Identifier	host		31511	0					
ANR	31712	PrimaryExpression	1		31511	1					
ANR	31713	PrimaryExpression	0		31511	2					
ANR	31714	ExpressionStatement	"setsockopt ( server_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"	797:12:23328:23407	31511	1	True				
ANR	31715	CallExpression	"setsockopt ( server_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"		31511	0					
ANR	31716	Callee	setsockopt		31511	0					
ANR	31717	Identifier	setsockopt		31511	0					
ANR	31718	ArgumentList	server_sock		31511	1					
ANR	31719	Argument	server_sock		31511	0					
ANR	31720	Identifier	server_sock		31511	0					
ANR	31721	Argument	IPPROTO_IPV6		31511	1					
ANR	31722	Identifier	IPPROTO_IPV6		31511	0					
ANR	31723	Argument	IPV6_V6ONLY		31511	2					
ANR	31724	Identifier	IPV6_V6ONLY		31511	0					
ANR	31725	Argument	& ipv6only		31511	3					
ANR	31726	UnaryOperationExpression	& ipv6only		31511	0					
ANR	31727	UnaryOperator	&		31511	0					
ANR	31728	Identifier	ipv6only		31511	1					
ANR	31729	Argument	sizeof ( ipv6only )		31511	4					
ANR	31730	SizeofExpression	sizeof ( ipv6only )		31511	0					
ANR	31731	Sizeof	sizeof		31511	0					
ANR	31732	SizeofOperand	ipv6only		31511	1					
ANR	31733	IdentifierDeclStatement	int opt = 1 ;	800:8:23428:23439	31511	3	True				
ANR	31734	IdentifierDecl	opt = 1		31511	0					
ANR	31735	IdentifierDeclType	int		31511	0					
ANR	31736	Identifier	opt		31511	1					
ANR	31737	AssignmentExpression	opt = 1		31511	2		=			
ANR	31738	Identifier	opt		31511	0					
ANR	31739	PrimaryExpression	1		31511	1					
ANR	31740	ExpressionStatement	"setsockopt ( server_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"	801:8:23449:23517	31511	4	True				
ANR	31741	CallExpression	"setsockopt ( server_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"		31511	0					
ANR	31742	Callee	setsockopt		31511	0					
ANR	31743	Identifier	setsockopt		31511	0					
ANR	31744	ArgumentList	server_sock		31511	1					
ANR	31745	Argument	server_sock		31511	0					
ANR	31746	Identifier	server_sock		31511	0					
ANR	31747	Argument	SOL_SOCKET		31511	1					
ANR	31748	Identifier	SOL_SOCKET		31511	0					
ANR	31749	Argument	SO_REUSEADDR		31511	2					
ANR	31750	Identifier	SO_REUSEADDR		31511	0					
ANR	31751	Argument	& opt		31511	3					
ANR	31752	UnaryOperationExpression	& opt		31511	0					
ANR	31753	UnaryOperator	&		31511	0					
ANR	31754	Identifier	opt		31511	1					
ANR	31755	Argument	sizeof ( opt )		31511	4					
ANR	31756	SizeofExpression	sizeof ( opt )		31511	0					
ANR	31757	Sizeof	sizeof		31511	0					
ANR	31758	SizeofOperand	opt		31511	1					
ANR	31759	ExpressionStatement	"s = bind ( server_sock , rp -> ai_addr , rp -> ai_addrlen )"	803:8:23528:23578	31511	5	True				
ANR	31760	AssignmentExpression	"s = bind ( server_sock , rp -> ai_addr , rp -> ai_addrlen )"		31511	0		=			
ANR	31761	Identifier	s		31511	0					
ANR	31762	CallExpression	"bind ( server_sock , rp -> ai_addr , rp -> ai_addrlen )"		31511	1					
ANR	31763	Callee	bind		31511	0					
ANR	31764	Identifier	bind		31511	0					
ANR	31765	ArgumentList	server_sock		31511	1					
ANR	31766	Argument	server_sock		31511	0					
ANR	31767	Identifier	server_sock		31511	0					
ANR	31768	Argument	rp -> ai_addr		31511	1					
ANR	31769	PtrMemberAccess	rp -> ai_addr		31511	0					
ANR	31770	Identifier	rp		31511	0					
ANR	31771	Identifier	ai_addr		31511	1					
ANR	31772	Argument	rp -> ai_addrlen		31511	2					
ANR	31773	PtrMemberAccess	rp -> ai_addrlen		31511	0					
ANR	31774	Identifier	rp		31511	0					
ANR	31775	Identifier	ai_addrlen		31511	1					
ANR	31776	IfStatement	if ( s == 0 )		31511	6					
ANR	31777	Condition	s == 0	804:12:23592:23597	31511	0	True				
ANR	31778	EqualityExpression	s == 0		31511	0		==			
ANR	31779	Identifier	s		31511	0					
ANR	31780	PrimaryExpression	0		31511	1					
ANR	31781	CompoundStatement		54:20:1930:1930	31511	1					
ANR	31782	BreakStatement	break ;	806:12:23665:23670	31511	0	True				
ANR	31783	ElseStatement	else		31511	0					
ANR	31784	CompoundStatement		57:15:2017:2017	31511	0					
ANR	31785	ExpressionStatement	"ERROR ( ""bind"" )"	808:12:23701:23714	31511	0	True				
ANR	31786	CallExpression	"ERROR ( ""bind"" )"		31511	0					
ANR	31787	Callee	ERROR		31511	0					
ANR	31788	Identifier	ERROR		31511	0					
ANR	31789	ArgumentList	"""bind"""		31511	1					
ANR	31790	Argument	"""bind"""		31511	0					
ANR	31791	PrimaryExpression	"""bind"""		31511	0					
ANR	31792	ExpressionStatement	close ( server_sock )	811:8:23735:23753	31511	7	True				
ANR	31793	CallExpression	close ( server_sock )		31511	0					
ANR	31794	Callee	close		31511	0					
ANR	31795	Identifier	close		31511	0					
ANR	31796	ArgumentList	server_sock		31511	1					
ANR	31797	Argument	server_sock		31511	0					
ANR	31798	Identifier	server_sock		31511	0					
ANR	31799	IfStatement	if ( rp == NULL )		31511	13					
ANR	31800	Condition	rp == NULL	814:8:23770:23779	31511	0	True				
ANR	31801	EqualityExpression	rp == NULL		31511	0		==			
ANR	31802	Identifier	rp		31511	0					
ANR	31803	Identifier	NULL		31511	1					
ANR	31804	CompoundStatement		64:20:2112:2112	31511	1					
ANR	31805	ExpressionStatement	"LOGE ( ""cannot bind"" )"	815:8:23792:23811	31511	0	True				
ANR	31806	CallExpression	"LOGE ( ""cannot bind"" )"		31511	0					
ANR	31807	Callee	LOGE		31511	0					
ANR	31808	Identifier	LOGE		31511	0					
ANR	31809	ArgumentList	"""cannot bind"""		31511	1					
ANR	31810	Argument	"""cannot bind"""		31511	0					
ANR	31811	PrimaryExpression	"""cannot bind"""		31511	0					
ANR	31812	ReturnStatement	return - 1 ;	816:8:23821:23830	31511	1	True				
ANR	31813	UnaryOperationExpression	- 1		31511	0					
ANR	31814	UnaryOperator	-		31511	0					
ANR	31815	PrimaryExpression	1		31511	1					
ANR	31816	ExpressionStatement	freeaddrinfo ( result )	819:4:23843:23863	31511	14	True				
ANR	31817	CallExpression	freeaddrinfo ( result )		31511	0					
ANR	31818	Callee	freeaddrinfo		31511	0					
ANR	31819	Identifier	freeaddrinfo		31511	0					
ANR	31820	ArgumentList	result		31511	1					
ANR	31821	Argument	result		31511	0					
ANR	31822	Identifier	result		31511	0					
ANR	31823	ReturnStatement	return server_sock ;	821:4:23870:23888	31511	15	True				
ANR	31824	Identifier	server_sock		31511	0					
ANR	31825	ReturnType	int		31511	1					
ANR	31826	Identifier	create_server_socket		31511	2					
ANR	31827	ParameterList	"const char * host , const char * port"		31511	3					
ANR	31828	Parameter	const char * host	750:21:21633:21648	31511	0	True				
ANR	31829	ParameterType	const char *		31511	0					
ANR	31830	Identifier	host		31511	1					
ANR	31831	Parameter	const char * port	750:39:21651:21666	31511	1	True				
ANR	31832	ParameterType	const char *		31511	0					
ANR	31833	Identifier	port		31511	1					
ANR	31834	CFGEntryNode	ENTRY		31511		True				
ANR	31835	CFGExitNode	EXIT		31511		True				
ANR	31836	Symbol	rp -> ai_addr		31511						
ANR	31837	Symbol	rp -> ai_protocol		31511						
ANR	31838	Symbol	rp -> ai_addrlen		31511						
ANR	31839	Symbol	server_sock		31511						
ANR	31840	Symbol	hints . ai_flags		31511						
ANR	31841	Symbol	gai_strerror		31511						
ANR	31842	Symbol	ipv6only		31511						
ANR	31843	Symbol	AF_UNSPEC		31511						
ANR	31844	Symbol	result		31511						
ANR	31845	Symbol	hints . ai_family		31511						
ANR	31846	Symbol	ipv4v6bindall -> ai_family		31511						
ANR	31847	Symbol	* ipv4v6bindall		31511						
ANR	31848	Symbol	bind		31511						
ANR	31849	Symbol	AI_ADDRCONFIG		31511						
ANR	31850	Symbol	& result		31511						
ANR	31851	Symbol	host		31511						
ANR	31852	Symbol	ipv4v6bindall		31511						
ANR	31853	Symbol	& opt		31511						
ANR	31854	Symbol	& ipv6only		31511						
ANR	31855	Symbol	& hints		31511						
ANR	31856	Symbol	NULL		31511						
ANR	31857	Symbol	hints		31511						
ANR	31858	Symbol	* rp		31511						
ANR	31859	Symbol	getaddrinfo		31511						
ANR	31860	Symbol	rp -> ai_socktype		31511						
ANR	31861	Symbol	SO_REUSEADDR		31511						
ANR	31862	Symbol	SOCK_DGRAM		31511						
ANR	31863	Symbol	hints . ai_protocol		31511						
ANR	31864	Symbol	AF_INET6		31511						
ANR	31865	Symbol	SOL_SOCKET		31511						
ANR	31866	Symbol	hints . ai_socktype		31511						
ANR	31867	Symbol	IPV6_V6ONLY		31511						
ANR	31868	Symbol	ipv4v6bindall -> ai_next		31511						
ANR	31869	Symbol	opt		31511						
ANR	31870	Symbol	s		31511						
ANR	31871	Symbol	port		31511						
ANR	31872	Symbol	IPPROTO_UDP		31511						
ANR	31873	Symbol	rp -> ai_family		31511						
ANR	31874	Symbol	IPPROTO_IPV6		31511						
ANR	31875	Symbol	socket		31511						
ANR	31876	Symbol	rp -> ai_next		31511						
ANR	31877	Symbol	rp		31511						
ANR	31878	Symbol	AI_PASSIVE		31511						
ANR	31879	Function	main	824:0:23893:35058							
ANR	31880	FunctionDef	"main (int argc , char * * argv)"		31879	0					
ANR	31881	CompoundStatement		826:0:23925:35058	31879	0					
ANR	31882	IdentifierDeclStatement	"int i , c ;"	827:4:23931:23939	31879	0	True				
ANR	31883	IdentifierDecl	i		31879	0					
ANR	31884	IdentifierDeclType	int		31879	0					
ANR	31885	Identifier	i		31879	1					
ANR	31886	IdentifierDecl	c		31879	1					
ANR	31887	IdentifierDeclType	int		31879	0					
ANR	31888	Identifier	c		31879	1					
ANR	31889	IdentifierDeclStatement	int pid_flags = 0 ;	828:4:23945:23970	31879	1	True				
ANR	31890	IdentifierDecl	pid_flags = 0		31879	0					
ANR	31891	IdentifierDeclType	int		31879	0					
ANR	31892	Identifier	pid_flags		31879	1					
ANR	31893	AssignmentExpression	pid_flags = 0		31879	2		=			
ANR	31894	Identifier	pid_flags		31879	0					
ANR	31895	PrimaryExpression	0		31879	1					
ANR	31896	IdentifierDeclStatement	char * acl = NULL ;	829:4:23976:24004	31879	2	True				
ANR	31897	IdentifierDecl	* acl = NULL		31879	0					
ANR	31898	IdentifierDeclType	char *		31879	0					
ANR	31899	Identifier	acl		31879	1					
ANR	31900	AssignmentExpression	* acl = NULL		31879	2		=			
ANR	31901	Identifier	NULL		31879	0					
ANR	31902	Identifier	NULL		31879	1					
ANR	31903	IdentifierDeclStatement	char * user = NULL ;	830:4:24010:24038	31879	3	True				
ANR	31904	IdentifierDecl	* user = NULL		31879	0					
ANR	31905	IdentifierDeclType	char *		31879	0					
ANR	31906	Identifier	user		31879	1					
ANR	31907	AssignmentExpression	* user = NULL		31879	2		=			
ANR	31908	Identifier	NULL		31879	0					
ANR	31909	Identifier	NULL		31879	1					
ANR	31910	IdentifierDeclStatement	char * password = NULL ;	831:4:24044:24072	31879	4	True				
ANR	31911	IdentifierDecl	* password = NULL		31879	0					
ANR	31912	IdentifierDeclType	char *		31879	0					
ANR	31913	Identifier	password		31879	1					
ANR	31914	AssignmentExpression	* password = NULL		31879	2		=			
ANR	31915	Identifier	NULL		31879	0					
ANR	31916	Identifier	NULL		31879	1					
ANR	31917	IdentifierDeclStatement	char * timeout = NULL ;	832:4:24078:24106	31879	5	True				
ANR	31918	IdentifierDecl	* timeout = NULL		31879	0					
ANR	31919	IdentifierDeclType	char *		31879	0					
ANR	31920	Identifier	timeout		31879	1					
ANR	31921	AssignmentExpression	* timeout = NULL		31879	2		=			
ANR	31922	Identifier	NULL		31879	0					
ANR	31923	Identifier	NULL		31879	1					
ANR	31924	IdentifierDeclStatement	char * method = NULL ;	833:4:24112:24140	31879	6	True				
ANR	31925	IdentifierDecl	* method = NULL		31879	0					
ANR	31926	IdentifierDeclType	char *		31879	0					
ANR	31927	Identifier	method		31879	1					
ANR	31928	AssignmentExpression	* method = NULL		31879	2		=			
ANR	31929	Identifier	NULL		31879	0					
ANR	31930	Identifier	NULL		31879	1					
ANR	31931	IdentifierDeclStatement	char * pid_path = NULL ;	834:4:24146:24174	31879	7	True				
ANR	31932	IdentifierDecl	* pid_path = NULL		31879	0					
ANR	31933	IdentifierDeclType	char *		31879	0					
ANR	31934	Identifier	pid_path		31879	1					
ANR	31935	AssignmentExpression	* pid_path = NULL		31879	2		=			
ANR	31936	Identifier	NULL		31879	0					
ANR	31937	Identifier	NULL		31879	1					
ANR	31938	IdentifierDeclStatement	char * conf_path = NULL ;	835:4:24180:24208	31879	8	True				
ANR	31939	IdentifierDecl	* conf_path = NULL		31879	0					
ANR	31940	IdentifierDeclType	char *		31879	0					
ANR	31941	Identifier	conf_path		31879	1					
ANR	31942	AssignmentExpression	* conf_path = NULL		31879	2		=			
ANR	31943	Identifier	NULL		31879	0					
ANR	31944	Identifier	NULL		31879	1					
ANR	31945	IdentifierDeclStatement	char * iface = NULL ;	836:4:24214:24242	31879	9	True				
ANR	31946	IdentifierDecl	* iface = NULL		31879	0					
ANR	31947	IdentifierDeclType	char *		31879	0					
ANR	31948	Identifier	iface		31879	1					
ANR	31949	AssignmentExpression	* iface = NULL		31879	2		=			
ANR	31950	Identifier	NULL		31879	0					
ANR	31951	Identifier	NULL		31879	1					
ANR	31952	IdentifierDeclStatement	char * manager_address = NULL ;	837:4:24248:24276	31879	10	True				
ANR	31953	IdentifierDecl	* manager_address = NULL		31879	0					
ANR	31954	IdentifierDeclType	char *		31879	0					
ANR	31955	Identifier	manager_address		31879	1					
ANR	31956	AssignmentExpression	* manager_address = NULL		31879	2		=			
ANR	31957	Identifier	NULL		31879	0					
ANR	31958	Identifier	NULL		31879	1					
ANR	31959	IdentifierDeclStatement	char * plugin = NULL ;	838:4:24282:24310	31879	11	True				
ANR	31960	IdentifierDecl	* plugin = NULL		31879	0					
ANR	31961	IdentifierDeclType	char *		31879	0					
ANR	31962	Identifier	plugin		31879	1					
ANR	31963	AssignmentExpression	* plugin = NULL		31879	2		=			
ANR	31964	Identifier	NULL		31879	0					
ANR	31965	Identifier	NULL		31879	1					
ANR	31966	IdentifierDeclStatement	char * plugin_opts = NULL ;	839:4:24316:24344	31879	12	True				
ANR	31967	IdentifierDecl	* plugin_opts = NULL		31879	0					
ANR	31968	IdentifierDeclType	char *		31879	0					
ANR	31969	Identifier	plugin_opts		31879	1					
ANR	31970	AssignmentExpression	* plugin_opts = NULL		31879	2		=			
ANR	31971	Identifier	NULL		31879	0					
ANR	31972	Identifier	NULL		31879	1					
ANR	31973	IdentifierDeclStatement	int fast_open = 0 ;	841:4:24351:24369	31879	13	True				
ANR	31974	IdentifierDecl	fast_open = 0		31879	0					
ANR	31975	IdentifierDeclType	int		31879	0					
ANR	31976	Identifier	fast_open		31879	1					
ANR	31977	AssignmentExpression	fast_open = 0		31879	2		=			
ANR	31978	Identifier	fast_open		31879	0					
ANR	31979	PrimaryExpression	0		31879	1					
ANR	31980	IdentifierDeclStatement	int reuse_port = 0 ;	842:4:24375:24393	31879	14	True				
ANR	31981	IdentifierDecl	reuse_port = 0		31879	0					
ANR	31982	IdentifierDeclType	int		31879	0					
ANR	31983	Identifier	reuse_port		31879	1					
ANR	31984	AssignmentExpression	reuse_port = 0		31879	2		=			
ANR	31985	Identifier	reuse_port		31879	0					
ANR	31986	PrimaryExpression	0		31879	1					
ANR	31987	IdentifierDeclStatement	int mode = TCP_ONLY ;	843:4:24399:24424	31879	15	True				
ANR	31988	IdentifierDecl	mode = TCP_ONLY		31879	0					
ANR	31989	IdentifierDeclType	int		31879	0					
ANR	31990	Identifier	mode		31879	1					
ANR	31991	AssignmentExpression	mode = TCP_ONLY		31879	2		=			
ANR	31992	Identifier	TCP_ONLY		31879	0					
ANR	31993	Identifier	TCP_ONLY		31879	1					
ANR	31994	IdentifierDeclStatement	int mtu = 0 ;	844:4:24430:24448	31879	16	True				
ANR	31995	IdentifierDecl	mtu = 0		31879	0					
ANR	31996	IdentifierDeclType	int		31879	0					
ANR	31997	Identifier	mtu		31879	1					
ANR	31998	AssignmentExpression	mtu = 0		31879	2		=			
ANR	31999	Identifier	mtu		31879	0					
ANR	32000	PrimaryExpression	0		31879	1					
ANR	32001	IdentifierDeclStatement	int ipv6first = 0 ;	845:4:24454:24472	31879	17	True				
ANR	32002	IdentifierDecl	ipv6first = 0		31879	0					
ANR	32003	IdentifierDeclType	int		31879	0					
ANR	32004	Identifier	ipv6first		31879	1					
ANR	32005	AssignmentExpression	ipv6first = 0		31879	2		=			
ANR	32006	Identifier	ipv6first		31879	0					
ANR	32007	PrimaryExpression	0		31879	1					
ANR	32008	Statement	static	848:4:24501:24506	31879	18	True				
ANR	32009	IdentifierDeclStatement	int nofile = 0 ;	848:11:24508:24522	31879	19	True				
ANR	32010	IdentifierDecl	nofile = 0		31879	0					
ANR	32011	IdentifierDeclType	int		31879	0					
ANR	32012	Identifier	nofile		31879	1					
ANR	32013	AssignmentExpression	nofile = 0		31879	2		=			
ANR	32014	Identifier	nofile		31879	0					
ANR	32015	PrimaryExpression	0		31879	1					
ANR	32016	IdentifierDeclStatement	int server_num = 0 ;	851:4:24536:24554	31879	20	True				
ANR	32017	IdentifierDecl	server_num = 0		31879	0					
ANR	32018	IdentifierDeclType	int		31879	0					
ANR	32019	Identifier	server_num		31879	1					
ANR	32020	AssignmentExpression	server_num = 0		31879	2		=			
ANR	32021	Identifier	server_num		31879	0					
ANR	32022	PrimaryExpression	0		31879	1					
ANR	32023	IdentifierDeclStatement	char * server_host [ MAX_REMOTE_NUM ] ;	852:4:24560:24593	31879	21	True				
ANR	32024	IdentifierDecl	* server_host [ MAX_REMOTE_NUM ]		31879	0					
ANR	32025	IdentifierDeclType	char * [ MAX_REMOTE_NUM ]		31879	0					
ANR	32026	Identifier	server_host		31879	1					
ANR	32027	Identifier	MAX_REMOTE_NUM		31879	2					
ANR	32028	IdentifierDeclStatement	char * nameservers [ MAX_DNS_NUM + 1 ] ;	854:4:24600:24634	31879	22	True				
ANR	32029	IdentifierDecl	* nameservers [ MAX_DNS_NUM + 1 ]		31879	0					
ANR	32030	IdentifierDeclType	char * [ MAX_DNS_NUM + 1 ]		31879	0					
ANR	32031	Identifier	nameservers		31879	1					
ANR	32032	AdditiveExpression	MAX_DNS_NUM + 1		31879	2		+			
ANR	32033	Identifier	MAX_DNS_NUM		31879	0					
ANR	32034	PrimaryExpression	1		31879	1					
ANR	32035	IdentifierDeclStatement	int nameserver_num = 0 ;	855:4:24640:24662	31879	23	True				
ANR	32036	IdentifierDecl	nameserver_num = 0		31879	0					
ANR	32037	IdentifierDeclType	int		31879	0					
ANR	32038	Identifier	nameserver_num		31879	1					
ANR	32039	AssignmentExpression	nameserver_num = 0		31879	2		=			
ANR	32040	Identifier	nameserver_num		31879	0					
ANR	32041	PrimaryExpression	0		31879	1					
ANR	32042	IdentifierDeclStatement	jconf_t * conf = NULL ;	857:4:24669:24689	31879	24	True				
ANR	32043	IdentifierDecl	* conf = NULL		31879	0					
ANR	32044	IdentifierDeclType	jconf_t *		31879	0					
ANR	32045	Identifier	conf		31879	1					
ANR	32046	AssignmentExpression	* conf = NULL		31879	2		=			
ANR	32047	Identifier	NULL		31879	0					
ANR	32048	Identifier	NULL		31879	1					
ANR	32049	Statement	static	859:4:24696:24701	31879	25	True				
ANR	32050	IdentifierDeclStatement	"struct option long_options [ ] = { { ""fast-open"" , no_argument , NULL , GETOPT_VAL_FAST_OPEN } , { ""reuse-port"" , no_argument , NULL , GETOPT_VAL_REUSE_PORT } , { ""acl"" , required_argument , NULL , GETOPT_VAL_ACL } , { ""manager-address"" , required_argument , NULL , GETOPT_VAL_MANAGER_ADDRESS } , { ""executable"" , required_argument , NULL , GETOPT_VAL_EXECUTABLE } , { ""mtu"" , required_argument , NULL , GETOPT_VAL_MTU } , { ""plugin"" , required_argument , NULL , GETOPT_VAL_PLUGIN } , { ""plugin-opts"" , required_argument , NULL , GETOPT_VAL_PLUGIN_OPTS } , { ""password"" , required_argument , NULL , GETOPT_VAL_PASSWORD } , { ""help"" , no_argument , NULL , GETOPT_VAL_HELP } , { NULL , 0 , NULL , 0 } } ;"	859:11:24703:25664	31879	26	True				
ANR	32051	IdentifierDecl	"long_options [ ] = { { ""fast-open"" , no_argument , NULL , GETOPT_VAL_FAST_OPEN } , { ""reuse-port"" , no_argument , NULL , GETOPT_VAL_REUSE_PORT } , { ""acl"" , required_argument , NULL , GETOPT_VAL_ACL } , { ""manager-address"" , required_argument , NULL , GETOPT_VAL_MANAGER_ADDRESS } , { ""executable"" , required_argument , NULL , GETOPT_VAL_EXECUTABLE } , { ""mtu"" , required_argument , NULL , GETOPT_VAL_MTU } , { ""plugin"" , required_argument , NULL , GETOPT_VAL_PLUGIN } , { ""plugin-opts"" , required_argument , NULL , GETOPT_VAL_PLUGIN_OPTS } , { ""password"" , required_argument , NULL , GETOPT_VAL_PASSWORD } , { ""help"" , no_argument , NULL , GETOPT_VAL_HELP } , { NULL , 0 , NULL , 0 } }"		31879	0					
ANR	32052	IdentifierDeclType	struct option [ ]		31879	0					
ANR	32053	Identifier	long_options		31879	1					
ANR	32054	AssignmentExpression	"long_options [ ] = { { ""fast-open"" , no_argument , NULL , GETOPT_VAL_FAST_OPEN } , { ""reuse-port"" , no_argument , NULL , GETOPT_VAL_REUSE_PORT } , { ""acl"" , required_argument , NULL , GETOPT_VAL_ACL } , { ""manager-address"" , required_argument , NULL , GETOPT_VAL_MANAGER_ADDRESS } , { ""executable"" , required_argument , NULL , GETOPT_VAL_EXECUTABLE } , { ""mtu"" , required_argument , NULL , GETOPT_VAL_MTU } , { ""plugin"" , required_argument , NULL , GETOPT_VAL_PLUGIN } , { ""plugin-opts"" , required_argument , NULL , GETOPT_VAL_PLUGIN_OPTS } , { ""password"" , required_argument , NULL , GETOPT_VAL_PASSWORD } , { ""help"" , no_argument , NULL , GETOPT_VAL_HELP } , { NULL , 0 , NULL , 0 } }"		31879	2		=			
ANR	32055	Identifier	long_options		31879	0					
ANR	32056	InitializerList	"""fast-open"""		31879	1					
ANR	32057	InitializerList	"""fast-open"""		31879	0					
ANR	32058	PrimaryExpression	"""fast-open"""		31879	0					
ANR	32059	Identifier	no_argument		31879	1					
ANR	32060	Identifier	NULL		31879	2					
ANR	32061	Identifier	GETOPT_VAL_FAST_OPEN		31879	3					
ANR	32062	InitializerList	"""reuse-port"""		31879	1					
ANR	32063	PrimaryExpression	"""reuse-port"""		31879	0					
ANR	32064	Identifier	no_argument		31879	1					
ANR	32065	Identifier	NULL		31879	2					
ANR	32066	Identifier	GETOPT_VAL_REUSE_PORT		31879	3					
ANR	32067	InitializerList	"""acl"""		31879	2					
ANR	32068	PrimaryExpression	"""acl"""		31879	0					
ANR	32069	Identifier	required_argument		31879	1					
ANR	32070	Identifier	NULL		31879	2					
ANR	32071	Identifier	GETOPT_VAL_ACL		31879	3					
ANR	32072	InitializerList	"""manager-address"""		31879	3					
ANR	32073	PrimaryExpression	"""manager-address"""		31879	0					
ANR	32074	Identifier	required_argument		31879	1					
ANR	32075	Identifier	NULL		31879	2					
ANR	32076	Identifier	GETOPT_VAL_MANAGER_ADDRESS		31879	3					
ANR	32077	InitializerList	"""executable"""		31879	4					
ANR	32078	PrimaryExpression	"""executable"""		31879	0					
ANR	32079	Identifier	required_argument		31879	1					
ANR	32080	Identifier	NULL		31879	2					
ANR	32081	Identifier	GETOPT_VAL_EXECUTABLE		31879	3					
ANR	32082	InitializerList	"""mtu"""		31879	5					
ANR	32083	PrimaryExpression	"""mtu"""		31879	0					
ANR	32084	Identifier	required_argument		31879	1					
ANR	32085	Identifier	NULL		31879	2					
ANR	32086	Identifier	GETOPT_VAL_MTU		31879	3					
ANR	32087	InitializerList	"""plugin"""		31879	6					
ANR	32088	PrimaryExpression	"""plugin"""		31879	0					
ANR	32089	Identifier	required_argument		31879	1					
ANR	32090	Identifier	NULL		31879	2					
ANR	32091	Identifier	GETOPT_VAL_PLUGIN		31879	3					
ANR	32092	InitializerList	"""plugin-opts"""		31879	7					
ANR	32093	PrimaryExpression	"""plugin-opts"""		31879	0					
ANR	32094	Identifier	required_argument		31879	1					
ANR	32095	Identifier	NULL		31879	2					
ANR	32096	Identifier	GETOPT_VAL_PLUGIN_OPTS		31879	3					
ANR	32097	InitializerList	"""password"""		31879	8					
ANR	32098	PrimaryExpression	"""password"""		31879	0					
ANR	32099	Identifier	required_argument		31879	1					
ANR	32100	Identifier	NULL		31879	2					
ANR	32101	Identifier	GETOPT_VAL_PASSWORD		31879	3					
ANR	32102	InitializerList	"""help"""		31879	9					
ANR	32103	PrimaryExpression	"""help"""		31879	0					
ANR	32104	Identifier	no_argument		31879	1					
ANR	32105	Identifier	NULL		31879	2					
ANR	32106	Identifier	GETOPT_VAL_HELP		31879	3					
ANR	32107	InitializerList	NULL		31879	10					
ANR	32108	Identifier	NULL		31879	0					
ANR	32109	PrimaryExpression	0		31879	1					
ANR	32110	Identifier	NULL		31879	2					
ANR	32111	PrimaryExpression	0		31879	3					
ANR	32112	ExpressionStatement	opterr = 0	875:4:25671:25681	31879	27	True				
ANR	32113	AssignmentExpression	opterr = 0		31879	0		=			
ANR	32114	Identifier	opterr		31879	0					
ANR	32115	PrimaryExpression	0		31879	1					
ANR	32116	ExpressionStatement	USE_TTY ( )	877:4:25688:25697	31879	28	True				
ANR	32117	CallExpression	USE_TTY ( )		31879	0					
ANR	32118	Callee	USE_TTY		31879	0					
ANR	32119	Identifier	USE_TTY		31879	0					
ANR	32120	ArgumentList			31879	1					
ANR	32121	WhileStatement	"while ( ( c = getopt_long ( argc , argv , ""f:s:l:k:t:m:c:i:d:a:n:6huUvA"" , long_options , NULL ) ) != - 1 )"		31879	29					
ANR	32122	Condition	"( c = getopt_long ( argc , argv , ""f:s:l:k:t:m:c:i:d:a:n:6huUvA"" , long_options , NULL ) ) != - 1"	879:11:25711:25825	31879	0	True				
ANR	32123	EqualityExpression	"( c = getopt_long ( argc , argv , ""f:s:l:k:t:m:c:i:d:a:n:6huUvA"" , long_options , NULL ) ) != - 1"		31879	0		!=			
ANR	32124	AssignmentExpression	"c = getopt_long ( argc , argv , ""f:s:l:k:t:m:c:i:d:a:n:6huUvA"" , long_options , NULL )"		31879	0		=			
ANR	32125	Identifier	c		31879	0					
ANR	32126	CallExpression	"getopt_long ( argc , argv , ""f:s:l:k:t:m:c:i:d:a:n:6huUvA"" , long_options , NULL )"		31879	1					
ANR	32127	Callee	getopt_long		31879	0					
ANR	32128	Identifier	getopt_long		31879	0					
ANR	32129	ArgumentList	argc		31879	1					
ANR	32130	Argument	argc		31879	0					
ANR	32131	Identifier	argc		31879	0					
ANR	32132	Argument	argv		31879	1					
ANR	32133	Identifier	argv		31879	0					
ANR	32134	Argument	"""f:s:l:k:t:m:c:i:d:a:n:6huUvA"""		31879	2					
ANR	32135	PrimaryExpression	"""f:s:l:k:t:m:c:i:d:a:n:6huUvA"""		31879	0					
ANR	32136	Argument	long_options		31879	3					
ANR	32137	Identifier	long_options		31879	0					
ANR	32138	Argument	NULL		31879	4					
ANR	32139	Identifier	NULL		31879	0					
ANR	32140	UnaryOperationExpression	- 1		31879	1					
ANR	32141	UnaryOperator	-		31879	0					
ANR	32142	PrimaryExpression	1		31879	1					
ANR	32143	SwitchStatement	switch ( c )		31879	1					
ANR	32144	Condition	c	881:16:25844:25844	31879	0	True				
ANR	32145	Identifier	c		31879	0					
ANR	32146	CompoundStatement		56:19:1921:1921	31879	1					
ANR	32147	Label	case GETOPT_VAL_REUSE_PORT :	882:8:25857:25883	31879	0	True				
ANR	32148	Identifier	GETOPT_VAL_REUSE_PORT		31879	0					
ANR	32149	ExpressionStatement	reuse_port = 1	883:12:25897:25911	31879	1	True				
ANR	32150	AssignmentExpression	reuse_port = 1		31879	0		=			
ANR	32151	Identifier	reuse_port		31879	0					
ANR	32152	PrimaryExpression	1		31879	1					
ANR	32153	BreakStatement	break ;	884:12:25925:25930	31879	2	True				
ANR	32154	Label	case GETOPT_VAL_FAST_OPEN :	885:8:25940:25965	31879	3	True				
ANR	32155	Identifier	GETOPT_VAL_FAST_OPEN		31879	0					
ANR	32156	ExpressionStatement	fast_open = 1	886:12:25979:25992	31879	4	True				
ANR	32157	AssignmentExpression	fast_open = 1		31879	0		=			
ANR	32158	Identifier	fast_open		31879	0					
ANR	32159	PrimaryExpression	1		31879	1					
ANR	32160	BreakStatement	break ;	887:12:26006:26011	31879	5	True				
ANR	32161	Label	case GETOPT_VAL_ACL :	888:8:26021:26040	31879	6	True				
ANR	32162	Identifier	GETOPT_VAL_ACL		31879	0					
ANR	32163	ExpressionStatement	acl = optarg	889:12:26054:26066	31879	7	True				
ANR	32164	AssignmentExpression	acl = optarg		31879	0		=			
ANR	32165	Identifier	acl		31879	0					
ANR	32166	Identifier	optarg		31879	1					
ANR	32167	BreakStatement	break ;	890:12:26080:26085	31879	8	True				
ANR	32168	Label	case GETOPT_VAL_MANAGER_ADDRESS :	891:8:26095:26126	31879	9	True				
ANR	32169	Identifier	GETOPT_VAL_MANAGER_ADDRESS		31879	0					
ANR	32170	ExpressionStatement	manager_address = optarg	892:12:26140:26164	31879	10	True				
ANR	32171	AssignmentExpression	manager_address = optarg		31879	0		=			
ANR	32172	Identifier	manager_address		31879	0					
ANR	32173	Identifier	optarg		31879	1					
ANR	32174	BreakStatement	break ;	893:12:26178:26183	31879	11	True				
ANR	32175	Label	case GETOPT_VAL_EXECUTABLE :	894:8:26193:26219	31879	12	True				
ANR	32176	Identifier	GETOPT_VAL_EXECUTABLE		31879	0					
ANR	32177	ExpressionStatement	executable = optarg	895:12:26233:26252	31879	13	True				
ANR	32178	AssignmentExpression	executable = optarg		31879	0		=			
ANR	32179	Identifier	executable		31879	0					
ANR	32180	Identifier	optarg		31879	1					
ANR	32181	BreakStatement	break ;	896:12:26266:26271	31879	14	True				
ANR	32182	Label	case GETOPT_VAL_MTU :	897:8:26281:26300	31879	15	True				
ANR	32183	Identifier	GETOPT_VAL_MTU		31879	0					
ANR	32184	ExpressionStatement	mtu = atoi ( optarg )	898:12:26314:26332	31879	16	True				
ANR	32185	AssignmentExpression	mtu = atoi ( optarg )		31879	0		=			
ANR	32186	Identifier	mtu		31879	0					
ANR	32187	CallExpression	atoi ( optarg )		31879	1					
ANR	32188	Callee	atoi		31879	0					
ANR	32189	Identifier	atoi		31879	0					
ANR	32190	ArgumentList	optarg		31879	1					
ANR	32191	Argument	optarg		31879	0					
ANR	32192	Identifier	optarg		31879	0					
ANR	32193	BreakStatement	break ;	899:12:26346:26351	31879	17	True				
ANR	32194	Label	case GETOPT_VAL_PLUGIN :	900:8:26361:26383	31879	18	True				
ANR	32195	Identifier	GETOPT_VAL_PLUGIN		31879	0					
ANR	32196	ExpressionStatement	plugin = optarg	901:12:26397:26412	31879	19	True				
ANR	32197	AssignmentExpression	plugin = optarg		31879	0		=			
ANR	32198	Identifier	plugin		31879	0					
ANR	32199	Identifier	optarg		31879	1					
ANR	32200	BreakStatement	break ;	902:12:26426:26431	31879	20	True				
ANR	32201	Label	case GETOPT_VAL_PLUGIN_OPTS :	903:8:26441:26468	31879	21	True				
ANR	32202	Identifier	GETOPT_VAL_PLUGIN_OPTS		31879	0					
ANR	32203	ExpressionStatement	plugin_opts = optarg	904:12:26482:26502	31879	22	True				
ANR	32204	AssignmentExpression	plugin_opts = optarg		31879	0		=			
ANR	32205	Identifier	plugin_opts		31879	0					
ANR	32206	Identifier	optarg		31879	1					
ANR	32207	BreakStatement	break ;	905:12:26516:26521	31879	23	True				
ANR	32208	Label	case 's' :	906:8:26531:26539	31879	24	True				
ANR	32209	IfStatement	if ( server_num < MAX_REMOTE_NUM )		31879	25					
ANR	32210	Condition	server_num < MAX_REMOTE_NUM	907:16:26557:26583	31879	0	True				
ANR	32211	RelationalExpression	server_num < MAX_REMOTE_NUM		31879	0		<			
ANR	32212	Identifier	server_num		31879	0					
ANR	32213	Identifier	MAX_REMOTE_NUM		31879	1					
ANR	32214	CompoundStatement		82:45:2660:2660	31879	1					
ANR	32215	ExpressionStatement	server_host [ server_num ++ ] = optarg	908:16:26604:26638	31879	0	True				
ANR	32216	AssignmentExpression	server_host [ server_num ++ ] = optarg		31879	0		=			
ANR	32217	ArrayIndexing	server_host [ server_num ++ ]		31879	0					
ANR	32218	Identifier	server_host		31879	0					
ANR	32219	PostIncDecOperationExpression	server_num ++		31879	1					
ANR	32220	Identifier	server_num		31879	0					
ANR	32221	IncDec	++		31879	1					
ANR	32222	Identifier	optarg		31879	1					
ANR	32223	BreakStatement	break ;	910:12:26666:26671	31879	26	True				
ANR	32224	Label	case GETOPT_VAL_PASSWORD :	911:8:26681:26705	31879	27	True				
ANR	32225	Identifier	GETOPT_VAL_PASSWORD		31879	0					
ANR	32226	Label	case 'k' :	912:8:26715:26723	31879	28	True				
ANR	32227	ExpressionStatement	password = optarg	913:12:26737:26754	31879	29	True				
ANR	32228	AssignmentExpression	password = optarg		31879	0		=			
ANR	32229	Identifier	password		31879	0					
ANR	32230	Identifier	optarg		31879	1					
ANR	32231	BreakStatement	break ;	914:12:26768:26773	31879	30	True				
ANR	32232	Label	case 'f' :	915:8:26783:26791	31879	31	True				
ANR	32233	ExpressionStatement	pid_flags = 1	916:12:26805:26818	31879	32	True				
ANR	32234	AssignmentExpression	pid_flags = 1		31879	0		=			
ANR	32235	Identifier	pid_flags		31879	0					
ANR	32236	PrimaryExpression	1		31879	1					
ANR	32237	ExpressionStatement	pid_path = optarg	917:12:26832:26850	31879	33	True				
ANR	32238	AssignmentExpression	pid_path = optarg		31879	0		=			
ANR	32239	Identifier	pid_path		31879	0					
ANR	32240	Identifier	optarg		31879	1					
ANR	32241	BreakStatement	break ;	918:12:26864:26869	31879	34	True				
ANR	32242	Label	case 't' :	919:8:26879:26887	31879	35	True				
ANR	32243	ExpressionStatement	timeout = optarg	920:12:26901:26917	31879	36	True				
ANR	32244	AssignmentExpression	timeout = optarg		31879	0		=			
ANR	32245	Identifier	timeout		31879	0					
ANR	32246	Identifier	optarg		31879	1					
ANR	32247	BreakStatement	break ;	921:12:26931:26936	31879	37	True				
ANR	32248	Label	case 'm' :	922:8:26946:26954	31879	38	True				
ANR	32249	ExpressionStatement	method = optarg	923:12:26968:26983	31879	39	True				
ANR	32250	AssignmentExpression	method = optarg		31879	0		=			
ANR	32251	Identifier	method		31879	0					
ANR	32252	Identifier	optarg		31879	1					
ANR	32253	BreakStatement	break ;	924:12:26997:27002	31879	40	True				
ANR	32254	Label	case 'c' :	925:8:27012:27020	31879	41	True				
ANR	32255	ExpressionStatement	conf_path = optarg	926:12:27034:27052	31879	42	True				
ANR	32256	AssignmentExpression	conf_path = optarg		31879	0		=			
ANR	32257	Identifier	conf_path		31879	0					
ANR	32258	Identifier	optarg		31879	1					
ANR	32259	BreakStatement	break ;	927:12:27066:27071	31879	43	True				
ANR	32260	Label	case 'i' :	928:8:27081:27089	31879	44	True				
ANR	32261	ExpressionStatement	iface = optarg	929:12:27103:27117	31879	45	True				
ANR	32262	AssignmentExpression	iface = optarg		31879	0		=			
ANR	32263	Identifier	iface		31879	0					
ANR	32264	Identifier	optarg		31879	1					
ANR	32265	BreakStatement	break ;	930:12:27131:27136	31879	46	True				
ANR	32266	Label	case 'd' :	931:8:27146:27154	31879	47	True				
ANR	32267	IfStatement	if ( nameserver_num < MAX_DNS_NUM )		31879	48					
ANR	32268	Condition	nameserver_num < MAX_DNS_NUM	932:16:27172:27199	31879	0	True				
ANR	32269	RelationalExpression	nameserver_num < MAX_DNS_NUM		31879	0		<			
ANR	32270	Identifier	nameserver_num		31879	0					
ANR	32271	Identifier	MAX_DNS_NUM		31879	1					
ANR	32272	CompoundStatement		107:46:3276:3276	31879	1					
ANR	32273	ExpressionStatement	nameservers [ nameserver_num ++ ] = optarg	933:16:27220:27258	31879	0	True				
ANR	32274	AssignmentExpression	nameservers [ nameserver_num ++ ] = optarg		31879	0		=			
ANR	32275	ArrayIndexing	nameservers [ nameserver_num ++ ]		31879	0					
ANR	32276	Identifier	nameservers		31879	0					
ANR	32277	PostIncDecOperationExpression	nameserver_num ++		31879	1					
ANR	32278	Identifier	nameserver_num		31879	0					
ANR	32279	IncDec	++		31879	1					
ANR	32280	Identifier	optarg		31879	1					
ANR	32281	BreakStatement	break ;	935:12:27286:27291	31879	49	True				
ANR	32282	Label	case 'a' :	936:8:27301:27309	31879	50	True				
ANR	32283	ExpressionStatement	user = optarg	937:12:27323:27336	31879	51	True				
ANR	32284	AssignmentExpression	user = optarg		31879	0		=			
ANR	32285	Identifier	user		31879	0					
ANR	32286	Identifier	optarg		31879	1					
ANR	32287	BreakStatement	break ;	938:12:27350:27355	31879	52	True				
ANR	32288	Label	case 'u' :	939:8:27365:27373	31879	53	True				
ANR	32289	ExpressionStatement	mode = TCP_AND_UDP	940:12:27387:27405	31879	54	True				
ANR	32290	AssignmentExpression	mode = TCP_AND_UDP		31879	0		=			
ANR	32291	Identifier	mode		31879	0					
ANR	32292	Identifier	TCP_AND_UDP		31879	1					
ANR	32293	BreakStatement	break ;	941:12:27419:27424	31879	55	True				
ANR	32294	Label	case 'U' :	942:8:27434:27442	31879	56	True				
ANR	32295	ExpressionStatement	mode = UDP_ONLY	943:12:27456:27471	31879	57	True				
ANR	32296	AssignmentExpression	mode = UDP_ONLY		31879	0		=			
ANR	32297	Identifier	mode		31879	0					
ANR	32298	Identifier	UDP_ONLY		31879	1					
ANR	32299	BreakStatement	break ;	944:12:27485:27490	31879	58	True				
ANR	32300	Label	case '6' :	945:8:27500:27508	31879	59	True				
ANR	32301	ExpressionStatement	ipv6first = 1	946:12:27522:27535	31879	60	True				
ANR	32302	AssignmentExpression	ipv6first = 1		31879	0		=			
ANR	32303	Identifier	ipv6first		31879	0					
ANR	32304	PrimaryExpression	1		31879	1					
ANR	32305	BreakStatement	break ;	947:12:27549:27554	31879	61	True				
ANR	32306	Label	case 'v' :	948:8:27564:27572	31879	62	True				
ANR	32307	ExpressionStatement	verbose = 1	949:12:27586:27597	31879	63	True				
ANR	32308	AssignmentExpression	verbose = 1		31879	0		=			
ANR	32309	Identifier	verbose		31879	0					
ANR	32310	PrimaryExpression	1		31879	1					
ANR	32311	BreakStatement	break ;	950:12:27611:27616	31879	64	True				
ANR	32312	Label	case GETOPT_VAL_HELP :	951:8:27626:27646	31879	65	True				
ANR	32313	Identifier	GETOPT_VAL_HELP		31879	0					
ANR	32314	Label	case 'h' :	952:8:27656:27664	31879	66	True				
ANR	32315	ExpressionStatement	usage ( )	953:12:27678:27685	31879	67	True				
ANR	32316	CallExpression	usage ( )		31879	0					
ANR	32317	Callee	usage		31879	0					
ANR	32318	Identifier	usage		31879	0					
ANR	32319	ArgumentList			31879	1					
ANR	32320	ExpressionStatement	exit ( EXIT_SUCCESS )	954:12:27699:27717	31879	68	True				
ANR	32321	CallExpression	exit ( EXIT_SUCCESS )		31879	0					
ANR	32322	Callee	exit		31879	0					
ANR	32323	Identifier	exit		31879	0					
ANR	32324	ArgumentList	EXIT_SUCCESS		31879	1					
ANR	32325	Argument	EXIT_SUCCESS		31879	0					
ANR	32326	Identifier	EXIT_SUCCESS		31879	0					
ANR	32327	Label	case 'n' :	956:8:27749:27757	31879	69	True				
ANR	32328	ExpressionStatement	nofile = atoi ( optarg )	957:12:27771:27792	31879	70	True				
ANR	32329	AssignmentExpression	nofile = atoi ( optarg )		31879	0		=			
ANR	32330	Identifier	nofile		31879	0					
ANR	32331	CallExpression	atoi ( optarg )		31879	1					
ANR	32332	Callee	atoi		31879	0					
ANR	32333	Identifier	atoi		31879	0					
ANR	32334	ArgumentList	optarg		31879	1					
ANR	32335	Argument	optarg		31879	0					
ANR	32336	Identifier	optarg		31879	0					
ANR	32337	BreakStatement	break ;	958:12:27806:27811	31879	71	True				
ANR	32338	Label	case 'A' :	960:8:27828:27836	31879	72	True				
ANR	32339	ExpressionStatement	"FATAL ( ""One time auth has been deprecated. Try AEAD ciphers instead."" )"	961:12:27850:27919	31879	73	True				
ANR	32340	CallExpression	"FATAL ( ""One time auth has been deprecated. Try AEAD ciphers instead."" )"		31879	0					
ANR	32341	Callee	FATAL		31879	0					
ANR	32342	Identifier	FATAL		31879	0					
ANR	32343	ArgumentList	"""One time auth has been deprecated. Try AEAD ciphers instead."""		31879	1					
ANR	32344	Argument	"""One time auth has been deprecated. Try AEAD ciphers instead."""		31879	0					
ANR	32345	PrimaryExpression	"""One time auth has been deprecated. Try AEAD ciphers instead."""		31879	0					
ANR	32346	BreakStatement	break ;	962:12:27933:27938	31879	74	True				
ANR	32347	Label	case '?' :	963:8:27948:27956	31879	75	True				
ANR	32348	ExpressionStatement	"LOGE ( ""Unrecognized option: %s"" , optarg )"	965:12:28025:28064	31879	76	True				
ANR	32349	CallExpression	"LOGE ( ""Unrecognized option: %s"" , optarg )"		31879	0					
ANR	32350	Callee	LOGE		31879	0					
ANR	32351	Identifier	LOGE		31879	0					
ANR	32352	ArgumentList	"""Unrecognized option: %s"""		31879	1					
ANR	32353	Argument	"""Unrecognized option: %s"""		31879	0					
ANR	32354	PrimaryExpression	"""Unrecognized option: %s"""		31879	0					
ANR	32355	Argument	optarg		31879	1					
ANR	32356	Identifier	optarg		31879	0					
ANR	32357	ExpressionStatement	opterr = 1	966:12:28078:28088	31879	77	True				
ANR	32358	AssignmentExpression	opterr = 1		31879	0		=			
ANR	32359	Identifier	opterr		31879	0					
ANR	32360	PrimaryExpression	1		31879	1					
ANR	32361	BreakStatement	break ;	967:12:28102:28107	31879	78	True				
ANR	32362	IfStatement	if ( opterr )		31879	30					
ANR	32363	Condition	opterr	970:8:28128:28133	31879	0	True				
ANR	32364	Identifier	opterr		31879	0					
ANR	32365	CompoundStatement		145:16:4210:4210	31879	1					
ANR	32366	ExpressionStatement	usage ( )	971:8:28146:28153	31879	0	True				
ANR	32367	CallExpression	usage ( )		31879	0					
ANR	32368	Callee	usage		31879	0					
ANR	32369	Identifier	usage		31879	0					
ANR	32370	ArgumentList			31879	1					
ANR	32371	ExpressionStatement	exit ( EXIT_FAILURE )	972:8:28163:28181	31879	1	True				
ANR	32372	CallExpression	exit ( EXIT_FAILURE )		31879	0					
ANR	32373	Callee	exit		31879	0					
ANR	32374	Identifier	exit		31879	0					
ANR	32375	ArgumentList	EXIT_FAILURE		31879	1					
ANR	32376	Argument	EXIT_FAILURE		31879	0					
ANR	32377	Identifier	EXIT_FAILURE		31879	0					
ANR	32378	IfStatement	if ( conf_path != NULL )		31879	31					
ANR	32379	Condition	conf_path != NULL	975:8:28198:28214	31879	0	True				
ANR	32380	EqualityExpression	conf_path != NULL		31879	0		!=			
ANR	32381	Identifier	conf_path		31879	0					
ANR	32382	Identifier	NULL		31879	1					
ANR	32383	CompoundStatement		150:27:4291:4291	31879	1					
ANR	32384	ExpressionStatement	conf = read_jconf ( conf_path )	976:8:28227:28255	31879	0	True				
ANR	32385	AssignmentExpression	conf = read_jconf ( conf_path )		31879	0		=			
ANR	32386	Identifier	conf		31879	0					
ANR	32387	CallExpression	read_jconf ( conf_path )		31879	1					
ANR	32388	Callee	read_jconf		31879	0					
ANR	32389	Identifier	read_jconf		31879	0					
ANR	32390	ArgumentList	conf_path		31879	1					
ANR	32391	Argument	conf_path		31879	0					
ANR	32392	Identifier	conf_path		31879	0					
ANR	32393	IfStatement	if ( server_num == 0 )		31879	1					
ANR	32394	Condition	server_num == 0	977:12:28269:28283	31879	0	True				
ANR	32395	EqualityExpression	server_num == 0		31879	0		==			
ANR	32396	Identifier	server_num		31879	0					
ANR	32397	PrimaryExpression	0		31879	1					
ANR	32398	CompoundStatement		152:29:4360:4360	31879	1					
ANR	32399	ExpressionStatement	server_num = conf -> remote_num	978:12:28300:28329	31879	0	True				
ANR	32400	AssignmentExpression	server_num = conf -> remote_num		31879	0		=			
ANR	32401	Identifier	server_num		31879	0					
ANR	32402	PtrMemberAccess	conf -> remote_num		31879	1					
ANR	32403	Identifier	conf		31879	0					
ANR	32404	Identifier	remote_num		31879	1					
ANR	32405	ForStatement	for ( i = 0 ; i < server_num ; i ++ )		31879	1					
ANR	32406	ForInit	i = 0 ;	979:17:28348:28353	31879	0	True				
ANR	32407	AssignmentExpression	i = 0		31879	0		=			
ANR	32408	Identifier	i		31879	0					
ANR	32409	PrimaryExpression	0		31879	1					
ANR	32410	Condition	i < server_num	979:24:28355:28368	31879	1	True				
ANR	32411	RelationalExpression	i < server_num		31879	0		<			
ANR	32412	Identifier	i		31879	0					
ANR	32413	Identifier	server_num		31879	1					
ANR	32414	PostIncDecOperationExpression	i ++	979:40:28371:28373	31879	2	True				
ANR	32415	Identifier	i		31879	0					
ANR	32416	IncDec	++		31879	1					
ANR	32417	ExpressionStatement	server_host [ i ] = conf -> remote_addr [ i ] . host	980:16:28392:28434	31879	3	True				
ANR	32418	AssignmentExpression	server_host [ i ] = conf -> remote_addr [ i ] . host		31879	0		=			
ANR	32419	ArrayIndexing	server_host [ i ]		31879	0					
ANR	32420	Identifier	server_host		31879	0					
ANR	32421	Identifier	i		31879	1					
ANR	32422	MemberAccess	conf -> remote_addr [ i ] . host		31879	1					
ANR	32423	ArrayIndexing	conf -> remote_addr [ i ]		31879	0					
ANR	32424	PtrMemberAccess	conf -> remote_addr		31879	0					
ANR	32425	Identifier	conf		31879	0					
ANR	32426	Identifier	remote_addr		31879	1					
ANR	32427	Identifier	i		31879	1					
ANR	32428	Identifier	host		31879	1					
ANR	32429	IfStatement	if ( password == NULL )		31879	2					
ANR	32430	Condition	password == NULL	982:12:28458:28473	31879	0	True				
ANR	32431	EqualityExpression	password == NULL		31879	0		==			
ANR	32432	Identifier	password		31879	0					
ANR	32433	Identifier	NULL		31879	1					
ANR	32434	CompoundStatement		157:30:4550:4550	31879	1					
ANR	32435	ExpressionStatement	password = conf -> password	983:12:28490:28515	31879	0	True				
ANR	32436	AssignmentExpression	password = conf -> password		31879	0		=			
ANR	32437	Identifier	password		31879	0					
ANR	32438	PtrMemberAccess	conf -> password		31879	1					
ANR	32439	Identifier	conf		31879	0					
ANR	32440	Identifier	password		31879	1					
ANR	32441	IfStatement	if ( method == NULL )		31879	3					
ANR	32442	Condition	method == NULL	985:12:28539:28552	31879	0	True				
ANR	32443	EqualityExpression	method == NULL		31879	0		==			
ANR	32444	Identifier	method		31879	0					
ANR	32445	Identifier	NULL		31879	1					
ANR	32446	CompoundStatement		160:28:4629:4629	31879	1					
ANR	32447	ExpressionStatement	method = conf -> method	986:12:28569:28590	31879	0	True				
ANR	32448	AssignmentExpression	method = conf -> method		31879	0		=			
ANR	32449	Identifier	method		31879	0					
ANR	32450	PtrMemberAccess	conf -> method		31879	1					
ANR	32451	Identifier	conf		31879	0					
ANR	32452	Identifier	method		31879	1					
ANR	32453	IfStatement	if ( timeout == NULL )		31879	4					
ANR	32454	Condition	timeout == NULL	988:12:28614:28628	31879	0	True				
ANR	32455	EqualityExpression	timeout == NULL		31879	0		==			
ANR	32456	Identifier	timeout		31879	0					
ANR	32457	Identifier	NULL		31879	1					
ANR	32458	CompoundStatement		163:29:4705:4705	31879	1					
ANR	32459	ExpressionStatement	timeout = conf -> timeout	989:12:28645:28668	31879	0	True				
ANR	32460	AssignmentExpression	timeout = conf -> timeout		31879	0		=			
ANR	32461	Identifier	timeout		31879	0					
ANR	32462	PtrMemberAccess	conf -> timeout		31879	1					
ANR	32463	Identifier	conf		31879	0					
ANR	32464	Identifier	timeout		31879	1					
ANR	32465	IfStatement	if ( user == NULL )		31879	5					
ANR	32466	Condition	user == NULL	991:12:28692:28703	31879	0	True				
ANR	32467	EqualityExpression	user == NULL		31879	0		==			
ANR	32468	Identifier	user		31879	0					
ANR	32469	Identifier	NULL		31879	1					
ANR	32470	CompoundStatement		166:26:4780:4780	31879	1					
ANR	32471	ExpressionStatement	user = conf -> user	992:12:28720:28737	31879	0	True				
ANR	32472	AssignmentExpression	user = conf -> user		31879	0		=			
ANR	32473	Identifier	user		31879	0					
ANR	32474	PtrMemberAccess	conf -> user		31879	1					
ANR	32475	Identifier	conf		31879	0					
ANR	32476	Identifier	user		31879	1					
ANR	32477	IfStatement	if ( fast_open == 0 )		31879	6					
ANR	32478	Condition	fast_open == 0	994:12:28761:28774	31879	0	True				
ANR	32479	EqualityExpression	fast_open == 0		31879	0		==			
ANR	32480	Identifier	fast_open		31879	0					
ANR	32481	PrimaryExpression	0		31879	1					
ANR	32482	CompoundStatement		169:28:4851:4851	31879	1					
ANR	32483	ExpressionStatement	fast_open = conf -> fast_open	995:12:28791:28818	31879	0	True				
ANR	32484	AssignmentExpression	fast_open = conf -> fast_open		31879	0		=			
ANR	32485	Identifier	fast_open		31879	0					
ANR	32486	PtrMemberAccess	conf -> fast_open		31879	1					
ANR	32487	Identifier	conf		31879	0					
ANR	32488	Identifier	fast_open		31879	1					
ANR	32489	IfStatement	if ( reuse_port == 0 )		31879	7					
ANR	32490	Condition	reuse_port == 0	997:12:28842:28856	31879	0	True				
ANR	32491	EqualityExpression	reuse_port == 0		31879	0		==			
ANR	32492	Identifier	reuse_port		31879	0					
ANR	32493	PrimaryExpression	0		31879	1					
ANR	32494	CompoundStatement		172:29:4933:4933	31879	1					
ANR	32495	ExpressionStatement	reuse_port = conf -> reuse_port	998:12:28873:28902	31879	0	True				
ANR	32496	AssignmentExpression	reuse_port = conf -> reuse_port		31879	0		=			
ANR	32497	Identifier	reuse_port		31879	0					
ANR	32498	PtrMemberAccess	conf -> reuse_port		31879	1					
ANR	32499	Identifier	conf		31879	0					
ANR	32500	Identifier	reuse_port		31879	1					
ANR	32501	IfStatement	if ( conf -> nameserver != NULL )		31879	8					
ANR	32502	Condition	conf -> nameserver != NULL	1000:12:28926:28949	31879	0	True				
ANR	32503	EqualityExpression	conf -> nameserver != NULL		31879	0		!=			
ANR	32504	PtrMemberAccess	conf -> nameserver		31879	0					
ANR	32505	Identifier	conf		31879	0					
ANR	32506	Identifier	nameserver		31879	1					
ANR	32507	Identifier	NULL		31879	1					
ANR	32508	CompoundStatement		175:38:5026:5026	31879	1					
ANR	32509	ExpressionStatement	nameservers [ nameserver_num ++ ] = conf -> nameserver	1001:12:28966:29014	31879	0	True				
ANR	32510	AssignmentExpression	nameservers [ nameserver_num ++ ] = conf -> nameserver		31879	0		=			
ANR	32511	ArrayIndexing	nameservers [ nameserver_num ++ ]		31879	0					
ANR	32512	Identifier	nameservers		31879	0					
ANR	32513	PostIncDecOperationExpression	nameserver_num ++		31879	1					
ANR	32514	Identifier	nameserver_num		31879	0					
ANR	32515	IncDec	++		31879	1					
ANR	32516	PtrMemberAccess	conf -> nameserver		31879	1					
ANR	32517	Identifier	conf		31879	0					
ANR	32518	Identifier	nameserver		31879	1					
ANR	32519	IfStatement	if ( mode == TCP_ONLY )		31879	9					
ANR	32520	Condition	mode == TCP_ONLY	1003:12:29038:29053	31879	0	True				
ANR	32521	EqualityExpression	mode == TCP_ONLY		31879	0		==			
ANR	32522	Identifier	mode		31879	0					
ANR	32523	Identifier	TCP_ONLY		31879	1					
ANR	32524	CompoundStatement		178:30:5130:5130	31879	1					
ANR	32525	ExpressionStatement	mode = conf -> mode	1004:12:29070:29087	31879	0	True				
ANR	32526	AssignmentExpression	mode = conf -> mode		31879	0		=			
ANR	32527	Identifier	mode		31879	0					
ANR	32528	PtrMemberAccess	conf -> mode		31879	1					
ANR	32529	Identifier	conf		31879	0					
ANR	32530	Identifier	mode		31879	1					
ANR	32531	IfStatement	if ( mtu == 0 )		31879	10					
ANR	32532	Condition	mtu == 0	1006:12:29111:29118	31879	0	True				
ANR	32533	EqualityExpression	mtu == 0		31879	0		==			
ANR	32534	Identifier	mtu		31879	0					
ANR	32535	PrimaryExpression	0		31879	1					
ANR	32536	CompoundStatement		181:22:5195:5195	31879	1					
ANR	32537	ExpressionStatement	mtu = conf -> mtu	1007:12:29135:29150	31879	0	True				
ANR	32538	AssignmentExpression	mtu = conf -> mtu		31879	0		=			
ANR	32539	Identifier	mtu		31879	0					
ANR	32540	PtrMemberAccess	conf -> mtu		31879	1					
ANR	32541	Identifier	conf		31879	0					
ANR	32542	Identifier	mtu		31879	1					
ANR	32543	IfStatement	if ( plugin == NULL )		31879	11					
ANR	32544	Condition	plugin == NULL	1009:12:29174:29187	31879	0	True				
ANR	32545	EqualityExpression	plugin == NULL		31879	0		==			
ANR	32546	Identifier	plugin		31879	0					
ANR	32547	Identifier	NULL		31879	1					
ANR	32548	CompoundStatement		184:28:5264:5264	31879	1					
ANR	32549	ExpressionStatement	plugin = conf -> plugin	1010:12:29204:29225	31879	0	True				
ANR	32550	AssignmentExpression	plugin = conf -> plugin		31879	0		=			
ANR	32551	Identifier	plugin		31879	0					
ANR	32552	PtrMemberAccess	conf -> plugin		31879	1					
ANR	32553	Identifier	conf		31879	0					
ANR	32554	Identifier	plugin		31879	1					
ANR	32555	IfStatement	if ( plugin_opts == NULL )		31879	12					
ANR	32556	Condition	plugin_opts == NULL	1012:12:29249:29267	31879	0	True				
ANR	32557	EqualityExpression	plugin_opts == NULL		31879	0		==			
ANR	32558	Identifier	plugin_opts		31879	0					
ANR	32559	Identifier	NULL		31879	1					
ANR	32560	CompoundStatement		187:33:5344:5344	31879	1					
ANR	32561	ExpressionStatement	plugin_opts = conf -> plugin_opts	1013:12:29284:29315	31879	0	True				
ANR	32562	AssignmentExpression	plugin_opts = conf -> plugin_opts		31879	0		=			
ANR	32563	Identifier	plugin_opts		31879	0					
ANR	32564	PtrMemberAccess	conf -> plugin_opts		31879	1					
ANR	32565	Identifier	conf		31879	0					
ANR	32566	Identifier	plugin_opts		31879	1					
ANR	32567	IfStatement	if ( ipv6first == 0 )		31879	13					
ANR	32568	Condition	ipv6first == 0	1015:12:29339:29352	31879	0	True				
ANR	32569	EqualityExpression	ipv6first == 0		31879	0		==			
ANR	32570	Identifier	ipv6first		31879	0					
ANR	32571	PrimaryExpression	0		31879	1					
ANR	32572	CompoundStatement		190:28:5429:5429	31879	1					
ANR	32573	ExpressionStatement	ipv6first = conf -> ipv6_first	1016:12:29369:29397	31879	0	True				
ANR	32574	AssignmentExpression	ipv6first = conf -> ipv6_first		31879	0		=			
ANR	32575	Identifier	ipv6first		31879	0					
ANR	32576	PtrMemberAccess	conf -> ipv6_first		31879	1					
ANR	32577	Identifier	conf		31879	0					
ANR	32578	Identifier	ipv6_first		31879	1					
ANR	32579	IfStatement	if ( nofile == 0 )		31879	14					
ANR	32580	Condition	nofile == 0	1019:12:29443:29453	31879	0	True				
ANR	32581	EqualityExpression	nofile == 0		31879	0		==			
ANR	32582	Identifier	nofile		31879	0					
ANR	32583	PrimaryExpression	0		31879	1					
ANR	32584	CompoundStatement		194:25:5530:5530	31879	1					
ANR	32585	ExpressionStatement	nofile = conf -> nofile	1020:12:29470:29491	31879	0	True				
ANR	32586	AssignmentExpression	nofile = conf -> nofile		31879	0		=			
ANR	32587	Identifier	nofile		31879	0					
ANR	32588	PtrMemberAccess	conf -> nofile		31879	1					
ANR	32589	Identifier	conf		31879	0					
ANR	32590	Identifier	nofile		31879	1					
ANR	32591	IfStatement	if ( server_num == 0 )		31879	32					
ANR	32592	Condition	server_num == 0	1025:8:29525:29539	31879	0	True				
ANR	32593	EqualityExpression	server_num == 0		31879	0		==			
ANR	32594	Identifier	server_num		31879	0					
ANR	32595	PrimaryExpression	0		31879	1					
ANR	32596	CompoundStatement		200:25:5616:5616	31879	1					
ANR	32597	ExpressionStatement	"server_host [ server_num ++ ] = ""0.0.0.0"""	1026:8:29552:29589	31879	0	True				
ANR	32598	AssignmentExpression	"server_host [ server_num ++ ] = ""0.0.0.0"""		31879	0		=			
ANR	32599	ArrayIndexing	server_host [ server_num ++ ]		31879	0					
ANR	32600	Identifier	server_host		31879	0					
ANR	32601	PostIncDecOperationExpression	server_num ++		31879	1					
ANR	32602	Identifier	server_num		31879	0					
ANR	32603	IncDec	++		31879	1					
ANR	32604	PrimaryExpression	"""0.0.0.0"""		31879	1					
ANR	32605	IfStatement	if ( method == NULL )		31879	33					
ANR	32606	Condition	method == NULL	1029:8:29606:29619	31879	0	True				
ANR	32607	EqualityExpression	method == NULL		31879	0		==			
ANR	32608	Identifier	method		31879	0					
ANR	32609	Identifier	NULL		31879	1					
ANR	32610	CompoundStatement		204:24:5696:5696	31879	1					
ANR	32611	ExpressionStatement	"method = ""table"""	1030:8:29632:29648	31879	0	True				
ANR	32612	AssignmentExpression	"method = ""table"""		31879	0		=			
ANR	32613	Identifier	method		31879	0					
ANR	32614	PrimaryExpression	"""table"""		31879	1					
ANR	32615	IfStatement	if ( timeout == NULL )		31879	34					
ANR	32616	Condition	timeout == NULL	1033:8:29665:29679	31879	0	True				
ANR	32617	EqualityExpression	timeout == NULL		31879	0		==			
ANR	32618	Identifier	timeout		31879	0					
ANR	32619	Identifier	NULL		31879	1					
ANR	32620	CompoundStatement		208:25:5756:5756	31879	1					
ANR	32621	ExpressionStatement	"timeout = ""60"""	1034:8:29692:29706	31879	0	True				
ANR	32622	AssignmentExpression	"timeout = ""60"""		31879	0		=			
ANR	32623	Identifier	timeout		31879	0					
ANR	32624	PrimaryExpression	"""60"""		31879	1					
ANR	32625	ExpressionStatement	"USE_SYSLOG ( argv [ 0 ] , pid_flags )"	1037:4:29719:29749	31879	35	True				
ANR	32626	CallExpression	"USE_SYSLOG ( argv [ 0 ] , pid_flags )"		31879	0					
ANR	32627	Callee	USE_SYSLOG		31879	0					
ANR	32628	Identifier	USE_SYSLOG		31879	0					
ANR	32629	ArgumentList	argv [ 0 ]		31879	1					
ANR	32630	Argument	argv [ 0 ]		31879	0					
ANR	32631	ArrayIndexing	argv [ 0 ]		31879	0					
ANR	32632	Identifier	argv		31879	0					
ANR	32633	PrimaryExpression	0		31879	1					
ANR	32634	Argument	pid_flags		31879	1					
ANR	32635	Identifier	pid_flags		31879	0					
ANR	32636	IfStatement	if ( pid_flags )		31879	36					
ANR	32637	Condition	pid_flags	1038:8:29759:29767	31879	0	True				
ANR	32638	Identifier	pid_flags		31879	0					
ANR	32639	CompoundStatement		213:19:5844:5844	31879	1					
ANR	32640	ExpressionStatement	daemonize ( pid_path )	1039:8:29780:29799	31879	0	True				
ANR	32641	CallExpression	daemonize ( pid_path )		31879	0					
ANR	32642	Callee	daemonize		31879	0					
ANR	32643	Identifier	daemonize		31879	0					
ANR	32644	ArgumentList	pid_path		31879	1					
ANR	32645	Argument	pid_path		31879	0					
ANR	32646	Identifier	pid_path		31879	0					
ANR	32647	IfStatement	if ( manager_address == NULL )		31879	37					
ANR	32648	Condition	manager_address == NULL	1042:8:29816:29838	31879	0	True				
ANR	32649	EqualityExpression	manager_address == NULL		31879	0		==			
ANR	32650	Identifier	manager_address		31879	0					
ANR	32651	Identifier	NULL		31879	1					
ANR	32652	CompoundStatement		217:33:5915:5915	31879	1					
ANR	32653	ExpressionStatement	"manager_address = ""127.0.0.1:8839"""	1043:8:29851:29885	31879	0	True				
ANR	32654	AssignmentExpression	"manager_address = ""127.0.0.1:8839"""		31879	0		=			
ANR	32655	Identifier	manager_address		31879	0					
ANR	32656	PrimaryExpression	"""127.0.0.1:8839"""		31879	1					
ANR	32657	ExpressionStatement	"LOGI ( ""using the default manager address: %s"" , manager_address )"	1044:8:29895:29957	31879	1	True				
ANR	32658	CallExpression	"LOGI ( ""using the default manager address: %s"" , manager_address )"		31879	0					
ANR	32659	Callee	LOGI		31879	0					
ANR	32660	Identifier	LOGI		31879	0					
ANR	32661	ArgumentList	"""using the default manager address: %s"""		31879	1					
ANR	32662	Argument	"""using the default manager address: %s"""		31879	0					
ANR	32663	PrimaryExpression	"""using the default manager address: %s"""		31879	0					
ANR	32664	Argument	manager_address		31879	1					
ANR	32665	Identifier	manager_address		31879	0					
ANR	32666	IfStatement	if ( server_num == 0 || manager_address == NULL )		31879	38					
ANR	32667	Condition	server_num == 0 || manager_address == NULL	1047:8:29974:30015	31879	0	True				
ANR	32668	OrExpression	server_num == 0 || manager_address == NULL		31879	0		||			
ANR	32669	EqualityExpression	server_num == 0		31879	0		==			
ANR	32670	Identifier	server_num		31879	0					
ANR	32671	PrimaryExpression	0		31879	1					
ANR	32672	EqualityExpression	manager_address == NULL		31879	1		==			
ANR	32673	Identifier	manager_address		31879	0					
ANR	32674	Identifier	NULL		31879	1					
ANR	32675	CompoundStatement		222:52:6092:6092	31879	1					
ANR	32676	ExpressionStatement	usage ( )	1048:8:30028:30035	31879	0	True				
ANR	32677	CallExpression	usage ( )		31879	0					
ANR	32678	Callee	usage		31879	0					
ANR	32679	Identifier	usage		31879	0					
ANR	32680	ArgumentList			31879	1					
ANR	32681	ExpressionStatement	exit ( EXIT_FAILURE )	1049:8:30045:30063	31879	1	True				
ANR	32682	CallExpression	exit ( EXIT_FAILURE )		31879	0					
ANR	32683	Callee	exit		31879	0					
ANR	32684	Identifier	exit		31879	0					
ANR	32685	ArgumentList	EXIT_FAILURE		31879	1					
ANR	32686	Argument	EXIT_FAILURE		31879	0					
ANR	32687	Identifier	EXIT_FAILURE		31879	0					
ANR	32688	IfStatement	if ( fast_open == 1 )		31879	39					
ANR	32689	Condition	fast_open == 1	1052:8:30080:30093	31879	0	True				
ANR	32690	EqualityExpression	fast_open == 1		31879	0		==			
ANR	32691	Identifier	fast_open		31879	0					
ANR	32692	PrimaryExpression	1		31879	1					
ANR	32693	CompoundStatement		227:24:6170:6170	31879	1					
ANR	32694	ExpressionStatement	"LOGI ( ""using tcp fast open"" )"	1054:8:30126:30153	31879	0	True				
ANR	32695	CallExpression	"LOGI ( ""using tcp fast open"" )"		31879	0					
ANR	32696	Callee	LOGI		31879	0					
ANR	32697	Identifier	LOGI		31879	0					
ANR	32698	ArgumentList	"""using tcp fast open"""		31879	1					
ANR	32699	Argument	"""using tcp fast open"""		31879	0					
ANR	32700	PrimaryExpression	"""using tcp fast open"""		31879	0					
ANR	32701	ExpressionStatement	"signal ( SIGPIPE , SIG_IGN )"	1061:4:30269:30293	31879	40	True				
ANR	32702	CallExpression	"signal ( SIGPIPE , SIG_IGN )"		31879	0					
ANR	32703	Callee	signal		31879	0					
ANR	32704	Identifier	signal		31879	0					
ANR	32705	ArgumentList	SIGPIPE		31879	1					
ANR	32706	Argument	SIGPIPE		31879	0					
ANR	32707	Identifier	SIGPIPE		31879	0					
ANR	32708	Argument	SIG_IGN		31879	1					
ANR	32709	Identifier	SIG_IGN		31879	0					
ANR	32710	ExpressionStatement	"signal ( SIGCHLD , SIG_IGN )"	1062:4:30299:30323	31879	41	True				
ANR	32711	CallExpression	"signal ( SIGCHLD , SIG_IGN )"		31879	0					
ANR	32712	Callee	signal		31879	0					
ANR	32713	Identifier	signal		31879	0					
ANR	32714	ArgumentList	SIGCHLD		31879	1					
ANR	32715	Argument	SIGCHLD		31879	0					
ANR	32716	Identifier	SIGCHLD		31879	0					
ANR	32717	Argument	SIG_IGN		31879	1					
ANR	32718	Identifier	SIG_IGN		31879	0					
ANR	32719	ExpressionStatement	"signal ( SIGABRT , SIG_IGN )"	1063:4:30329:30353	31879	42	True				
ANR	32720	CallExpression	"signal ( SIGABRT , SIG_IGN )"		31879	0					
ANR	32721	Callee	signal		31879	0					
ANR	32722	Identifier	signal		31879	0					
ANR	32723	ArgumentList	SIGABRT		31879	1					
ANR	32724	Argument	SIGABRT		31879	0					
ANR	32725	Identifier	SIGABRT		31879	0					
ANR	32726	Argument	SIG_IGN		31879	1					
ANR	32727	Identifier	SIG_IGN		31879	0					
ANR	32728	IdentifierDeclStatement	struct ev_signal sigint_watcher ;	1065:4:30360:30391	31879	43	True				
ANR	32729	IdentifierDecl	sigint_watcher		31879	0					
ANR	32730	IdentifierDeclType	struct ev_signal		31879	0					
ANR	32731	Identifier	sigint_watcher		31879	1					
ANR	32732	IdentifierDeclStatement	struct ev_signal sigterm_watcher ;	1066:4:30397:30429	31879	44	True				
ANR	32733	IdentifierDecl	sigterm_watcher		31879	0					
ANR	32734	IdentifierDeclType	struct ev_signal		31879	0					
ANR	32735	Identifier	sigterm_watcher		31879	1					
ANR	32736	ExpressionStatement	"ev_signal_init ( & sigint_watcher , signal_cb , SIGINT )"	1067:4:30435:30485	31879	45	True				
ANR	32737	CallExpression	"ev_signal_init ( & sigint_watcher , signal_cb , SIGINT )"		31879	0					
ANR	32738	Callee	ev_signal_init		31879	0					
ANR	32739	Identifier	ev_signal_init		31879	0					
ANR	32740	ArgumentList	& sigint_watcher		31879	1					
ANR	32741	Argument	& sigint_watcher		31879	0					
ANR	32742	UnaryOperationExpression	& sigint_watcher		31879	0					
ANR	32743	UnaryOperator	&		31879	0					
ANR	32744	Identifier	sigint_watcher		31879	1					
ANR	32745	Argument	signal_cb		31879	1					
ANR	32746	Identifier	signal_cb		31879	0					
ANR	32747	Argument	SIGINT		31879	2					
ANR	32748	Identifier	SIGINT		31879	0					
ANR	32749	ExpressionStatement	"ev_signal_init ( & sigterm_watcher , signal_cb , SIGTERM )"	1068:4:30491:30543	31879	46	True				
ANR	32750	CallExpression	"ev_signal_init ( & sigterm_watcher , signal_cb , SIGTERM )"		31879	0					
ANR	32751	Callee	ev_signal_init		31879	0					
ANR	32752	Identifier	ev_signal_init		31879	0					
ANR	32753	ArgumentList	& sigterm_watcher		31879	1					
ANR	32754	Argument	& sigterm_watcher		31879	0					
ANR	32755	UnaryOperationExpression	& sigterm_watcher		31879	0					
ANR	32756	UnaryOperator	&		31879	0					
ANR	32757	Identifier	sigterm_watcher		31879	1					
ANR	32758	Argument	signal_cb		31879	1					
ANR	32759	Identifier	signal_cb		31879	0					
ANR	32760	Argument	SIGTERM		31879	2					
ANR	32761	Identifier	SIGTERM		31879	0					
ANR	32762	ExpressionStatement	"ev_signal_start ( EV_DEFAULT , & sigint_watcher )"	1069:4:30549:30593	31879	47	True				
ANR	32763	CallExpression	"ev_signal_start ( EV_DEFAULT , & sigint_watcher )"		31879	0					
ANR	32764	Callee	ev_signal_start		31879	0					
ANR	32765	Identifier	ev_signal_start		31879	0					
ANR	32766	ArgumentList	EV_DEFAULT		31879	1					
ANR	32767	Argument	EV_DEFAULT		31879	0					
ANR	32768	Identifier	EV_DEFAULT		31879	0					
ANR	32769	Argument	& sigint_watcher		31879	1					
ANR	32770	UnaryOperationExpression	& sigint_watcher		31879	0					
ANR	32771	UnaryOperator	&		31879	0					
ANR	32772	Identifier	sigint_watcher		31879	1					
ANR	32773	ExpressionStatement	"ev_signal_start ( EV_DEFAULT , & sigterm_watcher )"	1070:4:30599:30644	31879	48	True				
ANR	32774	CallExpression	"ev_signal_start ( EV_DEFAULT , & sigterm_watcher )"		31879	0					
ANR	32775	Callee	ev_signal_start		31879	0					
ANR	32776	Identifier	ev_signal_start		31879	0					
ANR	32777	ArgumentList	EV_DEFAULT		31879	1					
ANR	32778	Argument	EV_DEFAULT		31879	0					
ANR	32779	Identifier	EV_DEFAULT		31879	0					
ANR	32780	Argument	& sigterm_watcher		31879	1					
ANR	32781	UnaryOperationExpression	& sigterm_watcher		31879	0					
ANR	32782	UnaryOperator	&		31879	0					
ANR	32783	Identifier	sigterm_watcher		31879	1					
ANR	32784	IdentifierDeclStatement	struct manager_ctx manager ;	1072:4:30651:30677	31879	49	True				
ANR	32785	IdentifierDecl	manager		31879	0					
ANR	32786	IdentifierDeclType	struct manager_ctx		31879	0					
ANR	32787	Identifier	manager		31879	1					
ANR	32788	ExpressionStatement	"memset ( & manager , 0 , sizeof ( struct manager_ctx ) )"	1073:4:30683:30730	31879	50	True				
ANR	32789	CallExpression	"memset ( & manager , 0 , sizeof ( struct manager_ctx ) )"		31879	0					
ANR	32790	Callee	memset		31879	0					
ANR	32791	Identifier	memset		31879	0					
ANR	32792	ArgumentList	& manager		31879	1					
ANR	32793	Argument	& manager		31879	0					
ANR	32794	UnaryOperationExpression	& manager		31879	0					
ANR	32795	UnaryOperator	&		31879	0					
ANR	32796	Identifier	manager		31879	1					
ANR	32797	Argument	0		31879	1					
ANR	32798	PrimaryExpression	0		31879	0					
ANR	32799	Argument	sizeof ( struct manager_ctx )		31879	2					
ANR	32800	SizeofExpression	sizeof ( struct manager_ctx )		31879	0					
ANR	32801	Sizeof	sizeof		31879	0					
ANR	32802	SizeofOperand	struct manager_ctx		31879	1					
ANR	32803	ExpressionStatement	manager . reuse_port = reuse_port	1075:4:30737:30773	31879	51	True				
ANR	32804	AssignmentExpression	manager . reuse_port = reuse_port		31879	0		=			
ANR	32805	MemberAccess	manager . reuse_port		31879	0					
ANR	32806	Identifier	manager		31879	0					
ANR	32807	Identifier	reuse_port		31879	1					
ANR	32808	Identifier	reuse_port		31879	1					
ANR	32809	ExpressionStatement	manager . fast_open = fast_open	1076:4:30779:30814	31879	52	True				
ANR	32810	AssignmentExpression	manager . fast_open = fast_open		31879	0		=			
ANR	32811	MemberAccess	manager . fast_open		31879	0					
ANR	32812	Identifier	manager		31879	0					
ANR	32813	Identifier	fast_open		31879	1					
ANR	32814	Identifier	fast_open		31879	1					
ANR	32815	ExpressionStatement	manager . verbose = verbose	1077:4:30820:30853	31879	53	True				
ANR	32816	AssignmentExpression	manager . verbose = verbose		31879	0		=			
ANR	32817	MemberAccess	manager . verbose		31879	0					
ANR	32818	Identifier	manager		31879	0					
ANR	32819	Identifier	verbose		31879	1					
ANR	32820	Identifier	verbose		31879	1					
ANR	32821	ExpressionStatement	manager . mode = mode	1078:4:30859:30889	31879	54	True				
ANR	32822	AssignmentExpression	manager . mode = mode		31879	0		=			
ANR	32823	MemberAccess	manager . mode		31879	0					
ANR	32824	Identifier	manager		31879	0					
ANR	32825	Identifier	mode		31879	1					
ANR	32826	Identifier	mode		31879	1					
ANR	32827	ExpressionStatement	manager . password = password	1079:4:30895:30929	31879	55	True				
ANR	32828	AssignmentExpression	manager . password = password		31879	0		=			
ANR	32829	MemberAccess	manager . password		31879	0					
ANR	32830	Identifier	manager		31879	0					
ANR	32831	Identifier	password		31879	1					
ANR	32832	Identifier	password		31879	1					
ANR	32833	ExpressionStatement	manager . timeout = timeout	1080:4:30935:30968	31879	56	True				
ANR	32834	AssignmentExpression	manager . timeout = timeout		31879	0		=			
ANR	32835	MemberAccess	manager . timeout		31879	0					
ANR	32836	Identifier	manager		31879	0					
ANR	32837	Identifier	timeout		31879	1					
ANR	32838	Identifier	timeout		31879	1					
ANR	32839	ExpressionStatement	manager . method = method	1081:4:30974:31006	31879	57	True				
ANR	32840	AssignmentExpression	manager . method = method		31879	0		=			
ANR	32841	MemberAccess	manager . method		31879	0					
ANR	32842	Identifier	manager		31879	0					
ANR	32843	Identifier	method		31879	1					
ANR	32844	Identifier	method		31879	1					
ANR	32845	ExpressionStatement	manager . iface = iface	1082:4:31012:31043	31879	58	True				
ANR	32846	AssignmentExpression	manager . iface = iface		31879	0		=			
ANR	32847	MemberAccess	manager . iface		31879	0					
ANR	32848	Identifier	manager		31879	0					
ANR	32849	Identifier	iface		31879	1					
ANR	32850	Identifier	iface		31879	1					
ANR	32851	ExpressionStatement	manager . acl = acl	1083:4:31049:31078	31879	59	True				
ANR	32852	AssignmentExpression	manager . acl = acl		31879	0		=			
ANR	32853	MemberAccess	manager . acl		31879	0					
ANR	32854	Identifier	manager		31879	0					
ANR	32855	Identifier	acl		31879	1					
ANR	32856	Identifier	acl		31879	1					
ANR	32857	ExpressionStatement	manager . user = user	1084:4:31084:31114	31879	60	True				
ANR	32858	AssignmentExpression	manager . user = user		31879	0		=			
ANR	32859	MemberAccess	manager . user		31879	0					
ANR	32860	Identifier	manager		31879	0					
ANR	32861	Identifier	user		31879	1					
ANR	32862	Identifier	user		31879	1					
ANR	32863	ExpressionStatement	manager . manager_address = manager_address	1085:4:31120:31161	31879	61	True				
ANR	32864	AssignmentExpression	manager . manager_address = manager_address		31879	0		=			
ANR	32865	MemberAccess	manager . manager_address		31879	0					
ANR	32866	Identifier	manager		31879	0					
ANR	32867	Identifier	manager_address		31879	1					
ANR	32868	Identifier	manager_address		31879	1					
ANR	32869	ExpressionStatement	manager . hosts = server_host	1086:4:31167:31204	31879	62	True				
ANR	32870	AssignmentExpression	manager . hosts = server_host		31879	0		=			
ANR	32871	MemberAccess	manager . hosts		31879	0					
ANR	32872	Identifier	manager		31879	0					
ANR	32873	Identifier	hosts		31879	1					
ANR	32874	Identifier	server_host		31879	1					
ANR	32875	ExpressionStatement	manager . host_num = server_num	1087:4:31210:31246	31879	63	True				
ANR	32876	AssignmentExpression	manager . host_num = server_num		31879	0		=			
ANR	32877	MemberAccess	manager . host_num		31879	0					
ANR	32878	Identifier	manager		31879	0					
ANR	32879	Identifier	host_num		31879	1					
ANR	32880	Identifier	server_num		31879	1					
ANR	32881	ExpressionStatement	manager . nameservers = nameservers	1088:4:31252:31289	31879	64	True				
ANR	32882	AssignmentExpression	manager . nameservers = nameservers		31879	0		=			
ANR	32883	MemberAccess	manager . nameservers		31879	0					
ANR	32884	Identifier	manager		31879	0					
ANR	32885	Identifier	nameservers		31879	1					
ANR	32886	Identifier	nameservers		31879	1					
ANR	32887	ExpressionStatement	manager . nameserver_num = nameserver_num	1089:4:31295:31335	31879	65	True				
ANR	32888	AssignmentExpression	manager . nameserver_num = nameserver_num		31879	0		=			
ANR	32889	MemberAccess	manager . nameserver_num		31879	0					
ANR	32890	Identifier	manager		31879	0					
ANR	32891	Identifier	nameserver_num		31879	1					
ANR	32892	Identifier	nameserver_num		31879	1					
ANR	32893	ExpressionStatement	manager . mtu = mtu	1090:4:31341:31370	31879	66	True				
ANR	32894	AssignmentExpression	manager . mtu = mtu		31879	0		=			
ANR	32895	MemberAccess	manager . mtu		31879	0					
ANR	32896	Identifier	manager		31879	0					
ANR	32897	Identifier	mtu		31879	1					
ANR	32898	Identifier	mtu		31879	1					
ANR	32899	ExpressionStatement	manager . plugin = plugin	1091:4:31376:31408	31879	67	True				
ANR	32900	AssignmentExpression	manager . plugin = plugin		31879	0		=			
ANR	32901	MemberAccess	manager . plugin		31879	0					
ANR	32902	Identifier	manager		31879	0					
ANR	32903	Identifier	plugin		31879	1					
ANR	32904	Identifier	plugin		31879	1					
ANR	32905	ExpressionStatement	manager . plugin_opts = plugin_opts	1092:4:31414:31451	31879	68	True				
ANR	32906	AssignmentExpression	manager . plugin_opts = plugin_opts		31879	0		=			
ANR	32907	MemberAccess	manager . plugin_opts		31879	0					
ANR	32908	Identifier	manager		31879	0					
ANR	32909	Identifier	plugin_opts		31879	1					
ANR	32910	Identifier	plugin_opts		31879	1					
ANR	32911	ExpressionStatement	manager . ipv6first = ipv6first	1093:4:31457:31492	31879	69	True				
ANR	32912	AssignmentExpression	manager . ipv6first = ipv6first		31879	0		=			
ANR	32913	MemberAccess	manager . ipv6first		31879	0					
ANR	32914	Identifier	manager		31879	0					
ANR	32915	Identifier	ipv6first		31879	1					
ANR	32916	Identifier	ipv6first		31879	1					
ANR	32917	ExpressionStatement	manager . nofile = nofile	1095:4:31520:31543	31879	70	True				
ANR	32918	AssignmentExpression	manager . nofile = nofile		31879	0		=			
ANR	32919	MemberAccess	manager . nofile		31879	0					
ANR	32920	Identifier	manager		31879	0					
ANR	32921	Identifier	nofile		31879	1					
ANR	32922	Identifier	nofile		31879	1					
ANR	32923	IdentifierDeclStatement	struct ev_loop * loop = EV_DEFAULT ;	1099:4:31583:31616	31879	71	True				
ANR	32924	IdentifierDecl	* loop = EV_DEFAULT		31879	0					
ANR	32925	IdentifierDeclType	struct ev_loop *		31879	0					
ANR	32926	Identifier	loop		31879	1					
ANR	32927	AssignmentExpression	* loop = EV_DEFAULT		31879	2		=			
ANR	32928	Identifier	EV_DEFAULT		31879	0					
ANR	32929	Identifier	EV_DEFAULT		31879	1					
ANR	32930	IfStatement	if ( geteuid ( ) == 0 )		31879	72					
ANR	32931	Condition	geteuid ( ) == 0	1101:8:31627:31640	31879	0	True				
ANR	32932	EqualityExpression	geteuid ( ) == 0		31879	0		==			
ANR	32933	CallExpression	geteuid ( )		31879	0					
ANR	32934	Callee	geteuid		31879	0					
ANR	32935	Identifier	geteuid		31879	0					
ANR	32936	ArgumentList			31879	1					
ANR	32937	PrimaryExpression	0		31879	1					
ANR	32938	CompoundStatement		276:24:7717:7717	31879	1					
ANR	32939	ExpressionStatement	"LOGI ( ""running from root user"" )"	1102:8:31653:31683	31879	0	True				
ANR	32940	CallExpression	"LOGI ( ""running from root user"" )"		31879	0					
ANR	32941	Callee	LOGI		31879	0					
ANR	32942	Identifier	LOGI		31879	0					
ANR	32943	ArgumentList	"""running from root user"""		31879	1					
ANR	32944	Argument	"""running from root user"""		31879	0					
ANR	32945	PrimaryExpression	"""running from root user"""		31879	0					
ANR	32946	IdentifierDeclStatement	struct passwd * pw = getpwuid ( getuid ( ) ) ;	1105:4:31696:31736	31879	73	True				
ANR	32947	IdentifierDecl	* pw = getpwuid ( getuid ( ) )		31879	0					
ANR	32948	IdentifierDeclType	struct passwd *		31879	0					
ANR	32949	Identifier	pw		31879	1					
ANR	32950	AssignmentExpression	* pw = getpwuid ( getuid ( ) )		31879	2		=			
ANR	32951	Identifier	pw		31879	0					
ANR	32952	CallExpression	getpwuid ( getuid ( ) )		31879	1					
ANR	32953	Callee	getpwuid		31879	0					
ANR	32954	Identifier	getpwuid		31879	0					
ANR	32955	ArgumentList	getuid ( )		31879	1					
ANR	32956	Argument	getuid ( )		31879	0					
ANR	32957	CallExpression	getuid ( )		31879	0					
ANR	32958	Callee	getuid		31879	0					
ANR	32959	Identifier	getuid		31879	0					
ANR	32960	ArgumentList			31879	1					
ANR	32961	IdentifierDeclStatement	const char * homedir = pw -> pw_dir ;	1106:4:31742:31774	31879	74	True				
ANR	32962	IdentifierDecl	* homedir = pw -> pw_dir		31879	0					
ANR	32963	IdentifierDeclType	const char *		31879	0					
ANR	32964	Identifier	homedir		31879	1					
ANR	32965	AssignmentExpression	* homedir = pw -> pw_dir		31879	2		=			
ANR	32966	Identifier	homedir		31879	0					
ANR	32967	PtrMemberAccess	pw -> pw_dir		31879	1					
ANR	32968	Identifier	pw		31879	0					
ANR	32969	Identifier	pw_dir		31879	1					
ANR	32970	ExpressionStatement	working_dir_size = strlen ( homedir ) + 15	1107:4:31780:31819	31879	75	True				
ANR	32971	AssignmentExpression	working_dir_size = strlen ( homedir ) + 15		31879	0		=			
ANR	32972	Identifier	working_dir_size		31879	0					
ANR	32973	AdditiveExpression	strlen ( homedir ) + 15		31879	1		+			
ANR	32974	CallExpression	strlen ( homedir )		31879	0					
ANR	32975	Callee	strlen		31879	0					
ANR	32976	Identifier	strlen		31879	0					
ANR	32977	ArgumentList	homedir		31879	1					
ANR	32978	Argument	homedir		31879	0					
ANR	32979	Identifier	homedir		31879	0					
ANR	32980	PrimaryExpression	15		31879	1					
ANR	32981	ExpressionStatement	working_dir = ss_malloc ( working_dir_size )	1108:4:31825:31871	31879	76	True				
ANR	32982	AssignmentExpression	working_dir = ss_malloc ( working_dir_size )		31879	0		=			
ANR	32983	Identifier	working_dir		31879	0					
ANR	32984	CallExpression	ss_malloc ( working_dir_size )		31879	1					
ANR	32985	Callee	ss_malloc		31879	0					
ANR	32986	Identifier	ss_malloc		31879	0					
ANR	32987	ArgumentList	working_dir_size		31879	1					
ANR	32988	Argument	working_dir_size		31879	0					
ANR	32989	Identifier	working_dir_size		31879	0					
ANR	32990	ExpressionStatement	"snprintf ( working_dir , working_dir_size , ""%s/.shadowsocks"" , homedir )"	1109:4:31877:31944	31879	77	True				
ANR	32991	CallExpression	"snprintf ( working_dir , working_dir_size , ""%s/.shadowsocks"" , homedir )"		31879	0					
ANR	32992	Callee	snprintf		31879	0					
ANR	32993	Identifier	snprintf		31879	0					
ANR	32994	ArgumentList	working_dir		31879	1					
ANR	32995	Argument	working_dir		31879	0					
ANR	32996	Identifier	working_dir		31879	0					
ANR	32997	Argument	working_dir_size		31879	1					
ANR	32998	Identifier	working_dir_size		31879	0					
ANR	32999	Argument	"""%s/.shadowsocks"""		31879	2					
ANR	33000	PrimaryExpression	"""%s/.shadowsocks"""		31879	0					
ANR	33001	Argument	homedir		31879	3					
ANR	33002	Identifier	homedir		31879	0					
ANR	33003	IdentifierDeclStatement	"int err = mkdir ( working_dir , S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH ) ;"	1111:4:31951:32018	31879	78	True				
ANR	33004	IdentifierDecl	"err = mkdir ( working_dir , S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH )"		31879	0					
ANR	33005	IdentifierDeclType	int		31879	0					
ANR	33006	Identifier	err		31879	1					
ANR	33007	AssignmentExpression	"err = mkdir ( working_dir , S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH )"		31879	2		=			
ANR	33008	Identifier	err		31879	0					
ANR	33009	CallExpression	"mkdir ( working_dir , S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH )"		31879	1					
ANR	33010	Callee	mkdir		31879	0					
ANR	33011	Identifier	mkdir		31879	0					
ANR	33012	ArgumentList	working_dir		31879	1					
ANR	33013	Argument	working_dir		31879	0					
ANR	33014	Identifier	working_dir		31879	0					
ANR	33015	Argument	S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH		31879	1					
ANR	33016	InclusiveOrExpression	S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH		31879	0		|			
ANR	33017	Identifier	S_IRWXU		31879	0					
ANR	33018	InclusiveOrExpression	S_IRWXG | S_IROTH | S_IXOTH		31879	1		|			
ANR	33019	Identifier	S_IRWXG		31879	0					
ANR	33020	InclusiveOrExpression	S_IROTH | S_IXOTH		31879	1		|			
ANR	33021	Identifier	S_IROTH		31879	0					
ANR	33022	Identifier	S_IXOTH		31879	1					
ANR	33023	IfStatement	if ( err != 0 && errno != EEXIST )		31879	79					
ANR	33024	Condition	err != 0 && errno != EEXIST	1112:8:32028:32054	31879	0	True				
ANR	33025	AndExpression	err != 0 && errno != EEXIST		31879	0		&&			
ANR	33026	EqualityExpression	err != 0		31879	0		!=			
ANR	33027	Identifier	err		31879	0					
ANR	33028	PrimaryExpression	0		31879	1					
ANR	33029	EqualityExpression	errno != EEXIST		31879	1		!=			
ANR	33030	Identifier	errno		31879	0					
ANR	33031	Identifier	EEXIST		31879	1					
ANR	33032	CompoundStatement		287:37:8131:8131	31879	1					
ANR	33033	ExpressionStatement	"ERROR ( ""mkdir"" )"	1113:8:32067:32081	31879	0	True				
ANR	33034	CallExpression	"ERROR ( ""mkdir"" )"		31879	0					
ANR	33035	Callee	ERROR		31879	0					
ANR	33036	Identifier	ERROR		31879	0					
ANR	33037	ArgumentList	"""mkdir"""		31879	1					
ANR	33038	Argument	"""mkdir"""		31879	0					
ANR	33039	PrimaryExpression	"""mkdir"""		31879	0					
ANR	33040	ExpressionStatement	ss_free ( working_dir )	1114:8:32091:32111	31879	1	True				
ANR	33041	CallExpression	ss_free ( working_dir )		31879	0					
ANR	33042	Callee	ss_free		31879	0					
ANR	33043	Identifier	ss_free		31879	0					
ANR	33044	ArgumentList	working_dir		31879	1					
ANR	33045	Argument	working_dir		31879	0					
ANR	33046	Identifier	working_dir		31879	0					
ANR	33047	ExpressionStatement	"FATAL ( ""unable to create working directory"" )"	1115:8:32121:32164	31879	2	True				
ANR	33048	CallExpression	"FATAL ( ""unable to create working directory"" )"		31879	0					
ANR	33049	Callee	FATAL		31879	0					
ANR	33050	Identifier	FATAL		31879	0					
ANR	33051	ArgumentList	"""unable to create working directory"""		31879	1					
ANR	33052	Argument	"""unable to create working directory"""		31879	0					
ANR	33053	PrimaryExpression	"""unable to create working directory"""		31879	0					
ANR	33054	IdentifierDeclStatement	DIR * dp ;	1119:4:32215:32222	31879	80	True				
ANR	33055	IdentifierDecl	* dp		31879	0					
ANR	33056	IdentifierDeclType	DIR *		31879	0					
ANR	33057	Identifier	dp		31879	1					
ANR	33058	IdentifierDeclStatement	struct dirent * ep ;	1120:4:32228:32245	31879	81	True				
ANR	33059	IdentifierDecl	* ep		31879	0					
ANR	33060	IdentifierDeclType	struct dirent *		31879	0					
ANR	33061	Identifier	ep		31879	1					
ANR	33062	ExpressionStatement	dp = opendir ( working_dir )	1121:4:32251:32276	31879	82	True				
ANR	33063	AssignmentExpression	dp = opendir ( working_dir )		31879	0		=			
ANR	33064	Identifier	dp		31879	0					
ANR	33065	CallExpression	opendir ( working_dir )		31879	1					
ANR	33066	Callee	opendir		31879	0					
ANR	33067	Identifier	opendir		31879	0					
ANR	33068	ArgumentList	working_dir		31879	1					
ANR	33069	Argument	working_dir		31879	0					
ANR	33070	Identifier	working_dir		31879	0					
ANR	33071	IfStatement	if ( dp != NULL )		31879	83					
ANR	33072	Condition	dp != NULL	1122:8:32286:32295	31879	0	True				
ANR	33073	EqualityExpression	dp != NULL		31879	0		!=			
ANR	33074	Identifier	dp		31879	0					
ANR	33075	Identifier	NULL		31879	1					
ANR	33076	CompoundStatement		297:20:8372:8372	31879	1					
ANR	33077	WhileStatement	while ( ( ep = readdir ( dp ) ) != NULL )		31879	0					
ANR	33078	Condition	( ep = readdir ( dp ) ) != NULL	1123:15:32315:32340	31879	0	True				
ANR	33079	EqualityExpression	( ep = readdir ( dp ) ) != NULL		31879	0		!=			
ANR	33080	AssignmentExpression	ep = readdir ( dp )		31879	0		=			
ANR	33081	Identifier	ep		31879	0					
ANR	33082	CallExpression	readdir ( dp )		31879	1					
ANR	33083	Callee	readdir		31879	0					
ANR	33084	Identifier	readdir		31879	0					
ANR	33085	ArgumentList	dp		31879	1					
ANR	33086	Argument	dp		31879	0					
ANR	33087	Identifier	dp		31879	0					
ANR	33088	Identifier	NULL		31879	1					
ANR	33089	CompoundStatement		299:12:8431:8462	31879	1					
ANR	33090	IdentifierDeclStatement	size_t len = strlen ( ep -> d_name ) ;	1124:12:32357:32388	31879	0	True				
ANR	33091	IdentifierDecl	len = strlen ( ep -> d_name )		31879	0					
ANR	33092	IdentifierDeclType	size_t		31879	0					
ANR	33093	Identifier	len		31879	1					
ANR	33094	AssignmentExpression	len = strlen ( ep -> d_name )		31879	2		=			
ANR	33095	Identifier	len		31879	0					
ANR	33096	CallExpression	strlen ( ep -> d_name )		31879	1					
ANR	33097	Callee	strlen		31879	0					
ANR	33098	Identifier	strlen		31879	0					
ANR	33099	ArgumentList	ep -> d_name		31879	1					
ANR	33100	Argument	ep -> d_name		31879	0					
ANR	33101	PtrMemberAccess	ep -> d_name		31879	0					
ANR	33102	Identifier	ep		31879	0					
ANR	33103	Identifier	d_name		31879	1					
ANR	33104	IfStatement	"if ( strcmp ( ep -> d_name + len - 3 , ""pid"" ) == 0 )"		31879	1					
ANR	33105	Condition	"strcmp ( ep -> d_name + len - 3 , ""pid"" ) == 0"	1125:16:32406:32445	31879	0	True				
ANR	33106	EqualityExpression	"strcmp ( ep -> d_name + len - 3 , ""pid"" ) == 0"		31879	0		==			
ANR	33107	CallExpression	"strcmp ( ep -> d_name + len - 3 , ""pid"" )"		31879	0					
ANR	33108	Callee	strcmp		31879	0					
ANR	33109	Identifier	strcmp		31879	0					
ANR	33110	ArgumentList	ep -> d_name + len - 3		31879	1					
ANR	33111	Argument	ep -> d_name + len - 3		31879	0					
ANR	33112	AdditiveExpression	ep -> d_name + len - 3		31879	0		+			
ANR	33113	PtrMemberAccess	ep -> d_name		31879	0					
ANR	33114	Identifier	ep		31879	0					
ANR	33115	Identifier	d_name		31879	1					
ANR	33116	AdditiveExpression	len - 3		31879	1		-			
ANR	33117	Identifier	len		31879	0					
ANR	33118	PrimaryExpression	3		31879	1					
ANR	33119	Argument	"""pid"""		31879	1					
ANR	33120	PrimaryExpression	"""pid"""		31879	0					
ANR	33121	PrimaryExpression	0		31879	1					
ANR	33122	CompoundStatement		300:58:8522:8522	31879	1					
ANR	33123	ExpressionStatement	"kill_server ( working_dir , ep -> d_name )"	1126:16:32466:32502	31879	0	True				
ANR	33124	CallExpression	"kill_server ( working_dir , ep -> d_name )"		31879	0					
ANR	33125	Callee	kill_server		31879	0					
ANR	33126	Identifier	kill_server		31879	0					
ANR	33127	ArgumentList	working_dir		31879	1					
ANR	33128	Argument	working_dir		31879	0					
ANR	33129	Identifier	working_dir		31879	0					
ANR	33130	Argument	ep -> d_name		31879	1					
ANR	33131	PtrMemberAccess	ep -> d_name		31879	0					
ANR	33132	Identifier	ep		31879	0					
ANR	33133	Identifier	d_name		31879	1					
ANR	33134	IfStatement	if ( verbose )		31879	1					
ANR	33135	Condition	verbose	1127:20:32524:32530	31879	0	True				
ANR	33136	Identifier	verbose		31879	0					
ANR	33137	ExpressionStatement	"LOGI ( ""kill %s"" , ep -> d_name )"	1128:20:32553:32580	31879	1	True				
ANR	33138	CallExpression	"LOGI ( ""kill %s"" , ep -> d_name )"		31879	0					
ANR	33139	Callee	LOGI		31879	0					
ANR	33140	Identifier	LOGI		31879	0					
ANR	33141	ArgumentList	"""kill %s"""		31879	1					
ANR	33142	Argument	"""kill %s"""		31879	0					
ANR	33143	PrimaryExpression	"""kill %s"""		31879	0					
ANR	33144	Argument	ep -> d_name		31879	1					
ANR	33145	PtrMemberAccess	ep -> d_name		31879	0					
ANR	33146	Identifier	ep		31879	0					
ANR	33147	Identifier	d_name		31879	1					
ANR	33148	ExpressionStatement	closedir ( dp )	1131:8:32614:32626	31879	1	True				
ANR	33149	CallExpression	closedir ( dp )		31879	0					
ANR	33150	Callee	closedir		31879	0					
ANR	33151	Identifier	closedir		31879	0					
ANR	33152	ArgumentList	dp		31879	1					
ANR	33153	Argument	dp		31879	0					
ANR	33154	Identifier	dp		31879	0					
ANR	33155	ElseStatement	else		31879	0					
ANR	33156	CompoundStatement		307:11:8713:8713	31879	0					
ANR	33157	ExpressionStatement	ss_free ( working_dir )	1133:8:32649:32669	31879	0	True				
ANR	33158	CallExpression	ss_free ( working_dir )		31879	0					
ANR	33159	Callee	ss_free		31879	0					
ANR	33160	Identifier	ss_free		31879	0					
ANR	33161	ArgumentList	working_dir		31879	1					
ANR	33162	Argument	working_dir		31879	0					
ANR	33163	Identifier	working_dir		31879	0					
ANR	33164	ExpressionStatement	"FATAL ( ""Couldn't open the directory"" )"	1134:8:32679:32715	31879	1	True				
ANR	33165	CallExpression	"FATAL ( ""Couldn't open the directory"" )"		31879	0					
ANR	33166	Callee	FATAL		31879	0					
ANR	33167	Identifier	FATAL		31879	0					
ANR	33168	ArgumentList	"""Couldn't open the directory"""		31879	1					
ANR	33169	Argument	"""Couldn't open the directory"""		31879	0					
ANR	33170	PrimaryExpression	"""Couldn't open the directory"""		31879	0					
ANR	33171	ExpressionStatement	"server_table = cork_string_hash_table_new ( MAX_PORT_NUM , 0 )"	1137:4:32728:32786	31879	84	True				
ANR	33172	AssignmentExpression	"server_table = cork_string_hash_table_new ( MAX_PORT_NUM , 0 )"		31879	0		=			
ANR	33173	Identifier	server_table		31879	0					
ANR	33174	CallExpression	"cork_string_hash_table_new ( MAX_PORT_NUM , 0 )"		31879	1					
ANR	33175	Callee	cork_string_hash_table_new		31879	0					
ANR	33176	Identifier	cork_string_hash_table_new		31879	0					
ANR	33177	ArgumentList	MAX_PORT_NUM		31879	1					
ANR	33178	Argument	MAX_PORT_NUM		31879	0					
ANR	33179	Identifier	MAX_PORT_NUM		31879	0					
ANR	33180	Argument	0		31879	1					
ANR	33181	PrimaryExpression	0		31879	0					
ANR	33182	IfStatement	if ( conf != NULL )		31879	85					
ANR	33183	Condition	conf != NULL	1139:8:32797:32808	31879	0	True				
ANR	33184	EqualityExpression	conf != NULL		31879	0		!=			
ANR	33185	Identifier	conf		31879	0					
ANR	33186	Identifier	NULL		31879	1					
ANR	33187	CompoundStatement		314:22:8885:8885	31879	1					
ANR	33188	ForStatement	for ( i = 0 ; i < conf -> port_password_num ; i ++ )		31879	0					
ANR	33189	ForInit	i = 0 ;	1140:13:32826:32831	31879	0	True				
ANR	33190	AssignmentExpression	i = 0		31879	0		=			
ANR	33191	Identifier	i		31879	0					
ANR	33192	PrimaryExpression	0		31879	1					
ANR	33193	Condition	i < conf -> port_password_num	1140:20:32833:32859	31879	1	True				
ANR	33194	RelationalExpression	i < conf -> port_password_num		31879	0		<			
ANR	33195	Identifier	i		31879	0					
ANR	33196	PtrMemberAccess	conf -> port_password_num		31879	1					
ANR	33197	Identifier	conf		31879	0					
ANR	33198	Identifier	port_password_num		31879	1					
ANR	33199	PostIncDecOperationExpression	i ++	1140:49:32862:32864	31879	2	True				
ANR	33200	Identifier	i		31879	0					
ANR	33201	IncDec	++		31879	1					
ANR	33202	CompoundStatement		316:12:8955:9011	31879	3					
ANR	33203	IdentifierDeclStatement	struct server * server = ss_malloc ( sizeof ( struct server ) ) ;	1141:12:32881:32937	31879	0	True				
ANR	33204	IdentifierDecl	* server = ss_malloc ( sizeof ( struct server ) )		31879	0					
ANR	33205	IdentifierDeclType	struct server *		31879	0					
ANR	33206	Identifier	server		31879	1					
ANR	33207	AssignmentExpression	* server = ss_malloc ( sizeof ( struct server ) )		31879	2		=			
ANR	33208	Identifier	server		31879	0					
ANR	33209	CallExpression	ss_malloc ( sizeof ( struct server ) )		31879	1					
ANR	33210	Callee	ss_malloc		31879	0					
ANR	33211	Identifier	ss_malloc		31879	0					
ANR	33212	ArgumentList	sizeof ( struct server )		31879	1					
ANR	33213	Argument	sizeof ( struct server )		31879	0					
ANR	33214	SizeofExpression	sizeof ( struct server )		31879	0					
ANR	33215	Sizeof	sizeof		31879	0					
ANR	33216	SizeofOperand	struct server		31879	1					
ANR	33217	ExpressionStatement	"memset ( server , 0 , sizeof ( struct server ) )"	1142:12:32951:32991	31879	1	True				
ANR	33218	CallExpression	"memset ( server , 0 , sizeof ( struct server ) )"		31879	0					
ANR	33219	Callee	memset		31879	0					
ANR	33220	Identifier	memset		31879	0					
ANR	33221	ArgumentList	server		31879	1					
ANR	33222	Argument	server		31879	0					
ANR	33223	Identifier	server		31879	0					
ANR	33224	Argument	0		31879	1					
ANR	33225	PrimaryExpression	0		31879	0					
ANR	33226	Argument	sizeof ( struct server )		31879	2					
ANR	33227	SizeofExpression	sizeof ( struct server )		31879	0					
ANR	33228	Sizeof	sizeof		31879	0					
ANR	33229	SizeofOperand	struct server		31879	1					
ANR	33230	ExpressionStatement	"strncpy ( server -> port , conf -> port_password [ i ] . port , 8 )"	1143:12:33005:33058	31879	2	True				
ANR	33231	CallExpression	"strncpy ( server -> port , conf -> port_password [ i ] . port , 8 )"		31879	0					
ANR	33232	Callee	strncpy		31879	0					
ANR	33233	Identifier	strncpy		31879	0					
ANR	33234	ArgumentList	server -> port		31879	1					
ANR	33235	Argument	server -> port		31879	0					
ANR	33236	PtrMemberAccess	server -> port		31879	0					
ANR	33237	Identifier	server		31879	0					
ANR	33238	Identifier	port		31879	1					
ANR	33239	Argument	conf -> port_password [ i ] . port		31879	1					
ANR	33240	MemberAccess	conf -> port_password [ i ] . port		31879	0					
ANR	33241	ArrayIndexing	conf -> port_password [ i ]		31879	0					
ANR	33242	PtrMemberAccess	conf -> port_password		31879	0					
ANR	33243	Identifier	conf		31879	0					
ANR	33244	Identifier	port_password		31879	1					
ANR	33245	Identifier	i		31879	1					
ANR	33246	Identifier	port		31879	1					
ANR	33247	Argument	8		31879	2					
ANR	33248	PrimaryExpression	8		31879	0					
ANR	33249	ExpressionStatement	"strncpy ( server -> password , conf -> port_password [ i ] . password , 128 )"	1144:12:33072:33135	31879	3	True				
ANR	33250	CallExpression	"strncpy ( server -> password , conf -> port_password [ i ] . password , 128 )"		31879	0					
ANR	33251	Callee	strncpy		31879	0					
ANR	33252	Identifier	strncpy		31879	0					
ANR	33253	ArgumentList	server -> password		31879	1					
ANR	33254	Argument	server -> password		31879	0					
ANR	33255	PtrMemberAccess	server -> password		31879	0					
ANR	33256	Identifier	server		31879	0					
ANR	33257	Identifier	password		31879	1					
ANR	33258	Argument	conf -> port_password [ i ] . password		31879	1					
ANR	33259	MemberAccess	conf -> port_password [ i ] . password		31879	0					
ANR	33260	ArrayIndexing	conf -> port_password [ i ]		31879	0					
ANR	33261	PtrMemberAccess	conf -> port_password		31879	0					
ANR	33262	Identifier	conf		31879	0					
ANR	33263	Identifier	port_password		31879	1					
ANR	33264	Identifier	i		31879	1					
ANR	33265	Identifier	password		31879	1					
ANR	33266	Argument	128		31879	2					
ANR	33267	PrimaryExpression	128		31879	0					
ANR	33268	ExpressionStatement	"add_server ( & manager , server )"	1145:12:33149:33177	31879	4	True				
ANR	33269	CallExpression	"add_server ( & manager , server )"		31879	0					
ANR	33270	Callee	add_server		31879	0					
ANR	33271	Identifier	add_server		31879	0					
ANR	33272	ArgumentList	& manager		31879	1					
ANR	33273	Argument	& manager		31879	0					
ANR	33274	UnaryOperationExpression	& manager		31879	0					
ANR	33275	UnaryOperator	&		31879	0					
ANR	33276	Identifier	manager		31879	1					
ANR	33277	Argument	server		31879	1					
ANR	33278	Identifier	server		31879	0					
ANR	33279	IdentifierDeclStatement	int sfd ;	1149:4:33200:33207	31879	86	True				
ANR	33280	IdentifierDecl	sfd		31879	0					
ANR	33281	IdentifierDeclType	int		31879	0					
ANR	33282	Identifier	sfd		31879	1					
ANR	33283	Statement	ss_addr_t	1150:4:33213:33221	31879	87	True				
ANR	33284	Statement	ip_addr	1150:14:33223:33229	31879	88	True				
ANR	33285	Statement	=	1150:22:33231:33231	31879	89	True				
ANR	33286	CompoundStatement		325:24:9307:9307	31879	90					
ANR	33287	Statement	.	1150:26:33235:33235	31879	0	True				
ANR	33288	Statement	host	1150:27:33236:33239	31879	1	True				
ANR	33289	Statement	=	1150:32:33241:33241	31879	2	True				
ANR	33290	Statement	NULL	1150:34:33243:33246	31879	3	True				
ANR	33291	Statement	","	1150:38:33247:33247	31879	4	True				
ANR	33292	Statement	.	1150:40:33249:33249	31879	5	True				
ANR	33293	Statement	port	1150:41:33250:33253	31879	6	True				
ANR	33294	Statement	=	1150:46:33255:33255	31879	7	True				
ANR	33295	Statement	NULL	1150:48:33257:33260	31879	8	True				
ANR	33296	ExpressionStatement		1150:54:33263:33263	31879	91	True				
ANR	33297	ExpressionStatement	"parse_addr ( manager_address , & ip_addr )"	1151:4:33269:33306	31879	92	True				
ANR	33298	CallExpression	"parse_addr ( manager_address , & ip_addr )"		31879	0					
ANR	33299	Callee	parse_addr		31879	0					
ANR	33300	Identifier	parse_addr		31879	0					
ANR	33301	ArgumentList	manager_address		31879	1					
ANR	33302	Argument	manager_address		31879	0					
ANR	33303	Identifier	manager_address		31879	0					
ANR	33304	Argument	& ip_addr		31879	1					
ANR	33305	UnaryOperationExpression	& ip_addr		31879	0					
ANR	33306	UnaryOperator	&		31879	0					
ANR	33307	Identifier	ip_addr		31879	1					
ANR	33308	IfStatement	if ( ip_addr . host == NULL || ip_addr . port == NULL )		31879	93					
ANR	33309	Condition	ip_addr . host == NULL || ip_addr . port == NULL	1153:8:33317:33360	31879	0	True				
ANR	33310	OrExpression	ip_addr . host == NULL || ip_addr . port == NULL		31879	0		||			
ANR	33311	EqualityExpression	ip_addr . host == NULL		31879	0		==			
ANR	33312	MemberAccess	ip_addr . host		31879	0					
ANR	33313	Identifier	ip_addr		31879	0					
ANR	33314	Identifier	host		31879	1					
ANR	33315	Identifier	NULL		31879	1					
ANR	33316	EqualityExpression	ip_addr . port == NULL		31879	1		==			
ANR	33317	MemberAccess	ip_addr . port		31879	0					
ANR	33318	Identifier	ip_addr		31879	0					
ANR	33319	Identifier	port		31879	1					
ANR	33320	Identifier	NULL		31879	1					
ANR	33321	CompoundStatement		329:8:9447:9472	31879	1					
ANR	33322	IdentifierDeclStatement	struct sockaddr_un svaddr ;	1154:8:33373:33398	31879	0	True				
ANR	33323	IdentifierDecl	svaddr		31879	0					
ANR	33324	IdentifierDeclType	struct sockaddr_un		31879	0					
ANR	33325	Identifier	svaddr		31879	1					
ANR	33326	ExpressionStatement	"sfd = socket ( AF_UNIX , SOCK_DGRAM , 0 )"	1155:8:33408:33444	31879	1	True				
ANR	33327	AssignmentExpression	"sfd = socket ( AF_UNIX , SOCK_DGRAM , 0 )"		31879	0		=			
ANR	33328	Identifier	sfd		31879	0					
ANR	33329	CallExpression	"socket ( AF_UNIX , SOCK_DGRAM , 0 )"		31879	1					
ANR	33330	Callee	socket		31879	0					
ANR	33331	Identifier	socket		31879	0					
ANR	33332	ArgumentList	AF_UNIX		31879	1					
ANR	33333	Argument	AF_UNIX		31879	0					
ANR	33334	Identifier	AF_UNIX		31879	0					
ANR	33335	Argument	SOCK_DGRAM		31879	1					
ANR	33336	Identifier	SOCK_DGRAM		31879	0					
ANR	33337	Argument	0		31879	2					
ANR	33338	PrimaryExpression	0		31879	0					
ANR	33339	IfStatement	if ( sfd == - 1 )		31879	2					
ANR	33340	Condition	sfd == - 1	1156:12:33492:33500	31879	0	True				
ANR	33341	EqualityExpression	sfd == - 1		31879	0		==			
ANR	33342	Identifier	sfd		31879	0					
ANR	33343	UnaryOperationExpression	- 1		31879	1					
ANR	33344	UnaryOperator	-		31879	0					
ANR	33345	PrimaryExpression	1		31879	1					
ANR	33346	CompoundStatement		331:23:9577:9577	31879	1					
ANR	33347	ExpressionStatement	ss_free ( working_dir )	1157:12:33517:33537	31879	0	True				
ANR	33348	CallExpression	ss_free ( working_dir )		31879	0					
ANR	33349	Callee	ss_free		31879	0					
ANR	33350	Identifier	ss_free		31879	0					
ANR	33351	ArgumentList	working_dir		31879	1					
ANR	33352	Argument	working_dir		31879	0					
ANR	33353	Identifier	working_dir		31879	0					
ANR	33354	ExpressionStatement	"FATAL ( ""socket"" )"	1158:12:33551:33566	31879	1	True				
ANR	33355	CallExpression	"FATAL ( ""socket"" )"		31879	0					
ANR	33356	Callee	FATAL		31879	0					
ANR	33357	Identifier	FATAL		31879	0					
ANR	33358	ArgumentList	"""socket"""		31879	1					
ANR	33359	Argument	"""socket"""		31879	0					
ANR	33360	PrimaryExpression	"""socket"""		31879	0					
ANR	33361	ExpressionStatement	setnonblocking ( sfd )	1161:8:33587:33606	31879	3	True				
ANR	33362	CallExpression	setnonblocking ( sfd )		31879	0					
ANR	33363	Callee	setnonblocking		31879	0					
ANR	33364	Identifier	setnonblocking		31879	0					
ANR	33365	ArgumentList	sfd		31879	1					
ANR	33366	Argument	sfd		31879	0					
ANR	33367	Identifier	sfd		31879	0					
ANR	33368	IfStatement	if ( remove ( manager_address ) == - 1 && errno != ENOENT )		31879	4					
ANR	33369	Condition	remove ( manager_address ) == - 1 && errno != ENOENT	1163:12:33621:33668	31879	0	True				
ANR	33370	AndExpression	remove ( manager_address ) == - 1 && errno != ENOENT		31879	0		&&			
ANR	33371	EqualityExpression	remove ( manager_address ) == - 1		31879	0		==			
ANR	33372	CallExpression	remove ( manager_address )		31879	0					
ANR	33373	Callee	remove		31879	0					
ANR	33374	Identifier	remove		31879	0					
ANR	33375	ArgumentList	manager_address		31879	1					
ANR	33376	Argument	manager_address		31879	0					
ANR	33377	Identifier	manager_address		31879	0					
ANR	33378	UnaryOperationExpression	- 1		31879	1					
ANR	33379	UnaryOperator	-		31879	0					
ANR	33380	PrimaryExpression	1		31879	1					
ANR	33381	EqualityExpression	errno != ENOENT		31879	1		!=			
ANR	33382	Identifier	errno		31879	0					
ANR	33383	Identifier	ENOENT		31879	1					
ANR	33384	CompoundStatement		338:62:9745:9745	31879	1					
ANR	33385	ExpressionStatement	"ERROR ( ""bind"" )"	1164:12:33685:33698	31879	0	True				
ANR	33386	CallExpression	"ERROR ( ""bind"" )"		31879	0					
ANR	33387	Callee	ERROR		31879	0					
ANR	33388	Identifier	ERROR		31879	0					
ANR	33389	ArgumentList	"""bind"""		31879	1					
ANR	33390	Argument	"""bind"""		31879	0					
ANR	33391	PrimaryExpression	"""bind"""		31879	0					
ANR	33392	ExpressionStatement	ss_free ( working_dir )	1165:12:33712:33732	31879	1	True				
ANR	33393	CallExpression	ss_free ( working_dir )		31879	0					
ANR	33394	Callee	ss_free		31879	0					
ANR	33395	Identifier	ss_free		31879	0					
ANR	33396	ArgumentList	working_dir		31879	1					
ANR	33397	Argument	working_dir		31879	0					
ANR	33398	Identifier	working_dir		31879	0					
ANR	33399	ExpressionStatement	exit ( EXIT_FAILURE )	1166:12:33746:33764	31879	2	True				
ANR	33400	CallExpression	exit ( EXIT_FAILURE )		31879	0					
ANR	33401	Callee	exit		31879	0					
ANR	33402	Identifier	exit		31879	0					
ANR	33403	ArgumentList	EXIT_FAILURE		31879	1					
ANR	33404	Argument	EXIT_FAILURE		31879	0					
ANR	33405	Identifier	EXIT_FAILURE		31879	0					
ANR	33406	ExpressionStatement	"memset ( & svaddr , 0 , sizeof ( struct sockaddr_un ) )"	1169:8:33785:33831	31879	5	True				
ANR	33407	CallExpression	"memset ( & svaddr , 0 , sizeof ( struct sockaddr_un ) )"		31879	0					
ANR	33408	Callee	memset		31879	0					
ANR	33409	Identifier	memset		31879	0					
ANR	33410	ArgumentList	& svaddr		31879	1					
ANR	33411	Argument	& svaddr		31879	0					
ANR	33412	UnaryOperationExpression	& svaddr		31879	0					
ANR	33413	UnaryOperator	&		31879	0					
ANR	33414	Identifier	svaddr		31879	1					
ANR	33415	Argument	0		31879	1					
ANR	33416	PrimaryExpression	0		31879	0					
ANR	33417	Argument	sizeof ( struct sockaddr_un )		31879	2					
ANR	33418	SizeofExpression	sizeof ( struct sockaddr_un )		31879	0					
ANR	33419	Sizeof	sizeof		31879	0					
ANR	33420	SizeofOperand	struct sockaddr_un		31879	1					
ANR	33421	ExpressionStatement	svaddr . sun_family = AF_UNIX	1170:8:33841:33868	31879	6	True				
ANR	33422	AssignmentExpression	svaddr . sun_family = AF_UNIX		31879	0		=			
ANR	33423	MemberAccess	svaddr . sun_family		31879	0					
ANR	33424	Identifier	svaddr		31879	0					
ANR	33425	Identifier	sun_family		31879	1					
ANR	33426	Identifier	AF_UNIX		31879	1					
ANR	33427	ExpressionStatement	"strncpy ( svaddr . sun_path , manager_address , sizeof ( svaddr . sun_path ) - 1 )"	1171:8:33878:33948	31879	7	True				
ANR	33428	CallExpression	"strncpy ( svaddr . sun_path , manager_address , sizeof ( svaddr . sun_path ) - 1 )"		31879	0					
ANR	33429	Callee	strncpy		31879	0					
ANR	33430	Identifier	strncpy		31879	0					
ANR	33431	ArgumentList	svaddr . sun_path		31879	1					
ANR	33432	Argument	svaddr . sun_path		31879	0					
ANR	33433	MemberAccess	svaddr . sun_path		31879	0					
ANR	33434	Identifier	svaddr		31879	0					
ANR	33435	Identifier	sun_path		31879	1					
ANR	33436	Argument	manager_address		31879	1					
ANR	33437	Identifier	manager_address		31879	0					
ANR	33438	Argument	sizeof ( svaddr . sun_path ) - 1		31879	2					
ANR	33439	AdditiveExpression	sizeof ( svaddr . sun_path ) - 1		31879	0		-			
ANR	33440	SizeofExpression	sizeof ( svaddr . sun_path )		31879	0					
ANR	33441	Sizeof	sizeof		31879	0					
ANR	33442	MemberAccess	svaddr . sun_path		31879	1					
ANR	33443	Identifier	svaddr		31879	0					
ANR	33444	Identifier	sun_path		31879	1					
ANR	33445	PrimaryExpression	1		31879	1					
ANR	33446	IfStatement	"if ( bind ( sfd , ( struct sockaddr * ) & svaddr , sizeof ( struct sockaddr_un ) ) == - 1 )"		31879	8					
ANR	33447	Condition	"bind ( sfd , ( struct sockaddr * ) & svaddr , sizeof ( struct sockaddr_un ) ) == - 1"	1173:12:33963:34033	31879	0	True				
ANR	33448	EqualityExpression	"bind ( sfd , ( struct sockaddr * ) & svaddr , sizeof ( struct sockaddr_un ) ) == - 1"		31879	0		==			
ANR	33449	CallExpression	"bind ( sfd , ( struct sockaddr * ) & svaddr , sizeof ( struct sockaddr_un ) )"		31879	0					
ANR	33450	Callee	bind		31879	0					
ANR	33451	Identifier	bind		31879	0					
ANR	33452	ArgumentList	sfd		31879	1					
ANR	33453	Argument	sfd		31879	0					
ANR	33454	Identifier	sfd		31879	0					
ANR	33455	Argument	( struct sockaddr * ) & svaddr		31879	1					
ANR	33456	CastExpression	( struct sockaddr * ) & svaddr		31879	0					
ANR	33457	CastTarget	struct sockaddr *		31879	0					
ANR	33458	UnaryOperationExpression	& svaddr		31879	1					
ANR	33459	UnaryOperator	&		31879	0					
ANR	33460	Identifier	svaddr		31879	1					
ANR	33461	Argument	sizeof ( struct sockaddr_un )		31879	2					
ANR	33462	SizeofExpression	sizeof ( struct sockaddr_un )		31879	0					
ANR	33463	Sizeof	sizeof		31879	0					
ANR	33464	SizeofOperand	struct sockaddr_un		31879	1					
ANR	33465	UnaryOperationExpression	- 1		31879	1					
ANR	33466	UnaryOperator	-		31879	0					
ANR	33467	PrimaryExpression	1		31879	1					
ANR	33468	CompoundStatement		348:85:10110:10110	31879	1					
ANR	33469	ExpressionStatement	"ERROR ( ""bind"" )"	1174:12:34050:34063	31879	0	True				
ANR	33470	CallExpression	"ERROR ( ""bind"" )"		31879	0					
ANR	33471	Callee	ERROR		31879	0					
ANR	33472	Identifier	ERROR		31879	0					
ANR	33473	ArgumentList	"""bind"""		31879	1					
ANR	33474	Argument	"""bind"""		31879	0					
ANR	33475	PrimaryExpression	"""bind"""		31879	0					
ANR	33476	ExpressionStatement	ss_free ( working_dir )	1175:12:34077:34097	31879	1	True				
ANR	33477	CallExpression	ss_free ( working_dir )		31879	0					
ANR	33478	Callee	ss_free		31879	0					
ANR	33479	Identifier	ss_free		31879	0					
ANR	33480	ArgumentList	working_dir		31879	1					
ANR	33481	Argument	working_dir		31879	0					
ANR	33482	Identifier	working_dir		31879	0					
ANR	33483	ExpressionStatement	exit ( EXIT_FAILURE )	1176:12:34111:34129	31879	2	True				
ANR	33484	CallExpression	exit ( EXIT_FAILURE )		31879	0					
ANR	33485	Callee	exit		31879	0					
ANR	33486	Identifier	exit		31879	0					
ANR	33487	ArgumentList	EXIT_FAILURE		31879	1					
ANR	33488	Argument	EXIT_FAILURE		31879	0					
ANR	33489	Identifier	EXIT_FAILURE		31879	0					
ANR	33490	ElseStatement	else		31879	0					
ANR	33491	CompoundStatement		353:11:10226:10226	31879	0					
ANR	33492	ExpressionStatement	"sfd = create_server_socket ( ip_addr . host , ip_addr . port )"	1179:8:34162:34216	31879	0	True				
ANR	33493	AssignmentExpression	"sfd = create_server_socket ( ip_addr . host , ip_addr . port )"		31879	0		=			
ANR	33494	Identifier	sfd		31879	0					
ANR	33495	CallExpression	"create_server_socket ( ip_addr . host , ip_addr . port )"		31879	1					
ANR	33496	Callee	create_server_socket		31879	0					
ANR	33497	Identifier	create_server_socket		31879	0					
ANR	33498	ArgumentList	ip_addr . host		31879	1					
ANR	33499	Argument	ip_addr . host		31879	0					
ANR	33500	MemberAccess	ip_addr . host		31879	0					
ANR	33501	Identifier	ip_addr		31879	0					
ANR	33502	Identifier	host		31879	1					
ANR	33503	Argument	ip_addr . port		31879	1					
ANR	33504	MemberAccess	ip_addr . port		31879	0					
ANR	33505	Identifier	ip_addr		31879	0					
ANR	33506	Identifier	port		31879	1					
ANR	33507	IfStatement	if ( sfd == - 1 )		31879	1					
ANR	33508	Condition	sfd == - 1	1180:12:34230:34238	31879	0	True				
ANR	33509	EqualityExpression	sfd == - 1		31879	0		==			
ANR	33510	Identifier	sfd		31879	0					
ANR	33511	UnaryOperationExpression	- 1		31879	1					
ANR	33512	UnaryOperator	-		31879	0					
ANR	33513	PrimaryExpression	1		31879	1					
ANR	33514	CompoundStatement		355:23:10315:10315	31879	1					
ANR	33515	ExpressionStatement	ss_free ( working_dir )	1181:12:34255:34275	31879	0	True				
ANR	33516	CallExpression	ss_free ( working_dir )		31879	0					
ANR	33517	Callee	ss_free		31879	0					
ANR	33518	Identifier	ss_free		31879	0					
ANR	33519	ArgumentList	working_dir		31879	1					
ANR	33520	Argument	working_dir		31879	0					
ANR	33521	Identifier	working_dir		31879	0					
ANR	33522	ExpressionStatement	"FATAL ( ""socket"" )"	1182:12:34289:34304	31879	1	True				
ANR	33523	CallExpression	"FATAL ( ""socket"" )"		31879	0					
ANR	33524	Callee	FATAL		31879	0					
ANR	33525	Identifier	FATAL		31879	0					
ANR	33526	ArgumentList	"""socket"""		31879	1					
ANR	33527	Argument	"""socket"""		31879	0					
ANR	33528	PrimaryExpression	"""socket"""		31879	0					
ANR	33529	ExpressionStatement	manager . fd = sfd	1186:4:34327:34343	31879	94	True				
ANR	33530	AssignmentExpression	manager . fd = sfd		31879	0		=			
ANR	33531	MemberAccess	manager . fd		31879	0					
ANR	33532	Identifier	manager		31879	0					
ANR	33533	Identifier	fd		31879	1					
ANR	33534	Identifier	sfd		31879	1					
ANR	33535	ExpressionStatement	"ev_io_init ( & manager . io , manager_recv_cb , manager . fd , EV_READ )"	1187:4:34349:34410	31879	95	True				
ANR	33536	CallExpression	"ev_io_init ( & manager . io , manager_recv_cb , manager . fd , EV_READ )"		31879	0					
ANR	33537	Callee	ev_io_init		31879	0					
ANR	33538	Identifier	ev_io_init		31879	0					
ANR	33539	ArgumentList	& manager . io		31879	1					
ANR	33540	Argument	& manager . io		31879	0					
ANR	33541	UnaryOperationExpression	& manager . io		31879	0					
ANR	33542	UnaryOperator	&		31879	0					
ANR	33543	MemberAccess	manager . io		31879	1					
ANR	33544	Identifier	manager		31879	0					
ANR	33545	Identifier	io		31879	1					
ANR	33546	Argument	manager_recv_cb		31879	1					
ANR	33547	Identifier	manager_recv_cb		31879	0					
ANR	33548	Argument	manager . fd		31879	2					
ANR	33549	MemberAccess	manager . fd		31879	0					
ANR	33550	Identifier	manager		31879	0					
ANR	33551	Identifier	fd		31879	1					
ANR	33552	Argument	EV_READ		31879	3					
ANR	33553	Identifier	EV_READ		31879	0					
ANR	33554	ExpressionStatement	"ev_io_start ( loop , & manager . io )"	1188:4:34416:34446	31879	96	True				
ANR	33555	CallExpression	"ev_io_start ( loop , & manager . io )"		31879	0					
ANR	33556	Callee	ev_io_start		31879	0					
ANR	33557	Identifier	ev_io_start		31879	0					
ANR	33558	ArgumentList	loop		31879	1					
ANR	33559	Argument	loop		31879	0					
ANR	33560	Identifier	loop		31879	0					
ANR	33561	Argument	& manager . io		31879	1					
ANR	33562	UnaryOperationExpression	& manager . io		31879	0					
ANR	33563	UnaryOperator	&		31879	0					
ANR	33564	MemberAccess	manager . io		31879	1					
ANR	33565	Identifier	manager		31879	0					
ANR	33566	Identifier	io		31879	1					
ANR	33567	ExpressionStatement	"ev_run ( loop , 0 )"	1191:4:34474:34489	31879	97	True				
ANR	33568	CallExpression	"ev_run ( loop , 0 )"		31879	0					
ANR	33569	Callee	ev_run		31879	0					
ANR	33570	Identifier	ev_run		31879	0					
ANR	33571	ArgumentList	loop		31879	1					
ANR	33572	Argument	loop		31879	0					
ANR	33573	Identifier	loop		31879	0					
ANR	33574	Argument	0		31879	1					
ANR	33575	PrimaryExpression	0		31879	0					
ANR	33576	IfStatement	if ( verbose )		31879	98					
ANR	33577	Condition	verbose	1193:8:34500:34506	31879	0	True				
ANR	33578	Identifier	verbose		31879	0					
ANR	33579	CompoundStatement		368:17:10583:10583	31879	1					
ANR	33580	ExpressionStatement	"LOGI ( ""closed gracefully"" )"	1194:8:34519:34544	31879	0	True				
ANR	33581	CallExpression	"LOGI ( ""closed gracefully"" )"		31879	0					
ANR	33582	Callee	LOGI		31879	0					
ANR	33583	Identifier	LOGI		31879	0					
ANR	33584	ArgumentList	"""closed gracefully"""		31879	1					
ANR	33585	Argument	"""closed gracefully"""		31879	0					
ANR	33586	PrimaryExpression	"""closed gracefully"""		31879	0					
ANR	33587	IdentifierDeclStatement	struct cork_hash_table_entry * entry ;	1198:4:34573:34608	31879	99	True				
ANR	33588	IdentifierDecl	* entry		31879	0					
ANR	33589	IdentifierDeclType	struct cork_hash_table_entry *		31879	0					
ANR	33590	Identifier	entry		31879	1					
ANR	33591	IdentifierDeclStatement	struct cork_hash_table_iterator server_iter ;	1199:4:34614:34657	31879	100	True				
ANR	33592	IdentifierDecl	server_iter		31879	0					
ANR	33593	IdentifierDeclType	struct cork_hash_table_iterator		31879	0					
ANR	33594	Identifier	server_iter		31879	1					
ANR	33595	ExpressionStatement	"cork_hash_table_iterator_init ( server_table , & server_iter )"	1201:4:34664:34721	31879	101	True				
ANR	33596	CallExpression	"cork_hash_table_iterator_init ( server_table , & server_iter )"		31879	0					
ANR	33597	Callee	cork_hash_table_iterator_init		31879	0					
ANR	33598	Identifier	cork_hash_table_iterator_init		31879	0					
ANR	33599	ArgumentList	server_table		31879	1					
ANR	33600	Argument	server_table		31879	0					
ANR	33601	Identifier	server_table		31879	0					
ANR	33602	Argument	& server_iter		31879	1					
ANR	33603	UnaryOperationExpression	& server_iter		31879	0					
ANR	33604	UnaryOperator	&		31879	0					
ANR	33605	Identifier	server_iter		31879	1					
ANR	33606	WhileStatement	while ( ( entry = cork_hash_table_iterator_next ( & server_iter ) ) != NULL )		31879	102					
ANR	33607	Condition	( entry = cork_hash_table_iterator_next ( & server_iter ) ) != NULL	1203:11:34735:34795	31879	0	True				
ANR	33608	EqualityExpression	( entry = cork_hash_table_iterator_next ( & server_iter ) ) != NULL		31879	0		!=			
ANR	33609	AssignmentExpression	entry = cork_hash_table_iterator_next ( & server_iter )		31879	0		=			
ANR	33610	Identifier	entry		31879	0					
ANR	33611	CallExpression	cork_hash_table_iterator_next ( & server_iter )		31879	1					
ANR	33612	Callee	cork_hash_table_iterator_next		31879	0					
ANR	33613	Identifier	cork_hash_table_iterator_next		31879	0					
ANR	33614	ArgumentList	& server_iter		31879	1					
ANR	33615	Argument	& server_iter		31879	0					
ANR	33616	UnaryOperationExpression	& server_iter		31879	0					
ANR	33617	UnaryOperator	&		31879	0					
ANR	33618	Identifier	server_iter		31879	1					
ANR	33619	Identifier	NULL		31879	1					
ANR	33620	CompoundStatement		379:8:10882:10935	31879	1					
ANR	33621	IdentifierDeclStatement	struct server * server = ( struct server * ) entry -> value ;	1204:8:34808:34861	31879	0	True				
ANR	33622	IdentifierDecl	* server = ( struct server * ) entry -> value		31879	0					
ANR	33623	IdentifierDeclType	struct server *		31879	0					
ANR	33624	Identifier	server		31879	1					
ANR	33625	AssignmentExpression	* server = ( struct server * ) entry -> value		31879	2		=			
ANR	33626	Identifier	server		31879	0					
ANR	33627	CastExpression	( struct server * ) entry -> value		31879	1					
ANR	33628	CastTarget	struct server *		31879	0					
ANR	33629	PtrMemberAccess	entry -> value		31879	1					
ANR	33630	Identifier	entry		31879	0					
ANR	33631	Identifier	value		31879	1					
ANR	33632	ExpressionStatement	"stop_server ( working_dir , server -> port )"	1205:8:34871:34909	31879	1	True				
ANR	33633	CallExpression	"stop_server ( working_dir , server -> port )"		31879	0					
ANR	33634	Callee	stop_server		31879	0					
ANR	33635	Identifier	stop_server		31879	0					
ANR	33636	ArgumentList	working_dir		31879	1					
ANR	33637	Argument	working_dir		31879	0					
ANR	33638	Identifier	working_dir		31879	0					
ANR	33639	Argument	server -> port		31879	1					
ANR	33640	PtrMemberAccess	server -> port		31879	0					
ANR	33641	Identifier	server		31879	0					
ANR	33642	Identifier	port		31879	1					
ANR	33643	ExpressionStatement	"ev_signal_stop ( EV_DEFAULT , & sigint_watcher )"	1208:4:34922:34965	31879	103	True				
ANR	33644	CallExpression	"ev_signal_stop ( EV_DEFAULT , & sigint_watcher )"		31879	0					
ANR	33645	Callee	ev_signal_stop		31879	0					
ANR	33646	Identifier	ev_signal_stop		31879	0					
ANR	33647	ArgumentList	EV_DEFAULT		31879	1					
ANR	33648	Argument	EV_DEFAULT		31879	0					
ANR	33649	Identifier	EV_DEFAULT		31879	0					
ANR	33650	Argument	& sigint_watcher		31879	1					
ANR	33651	UnaryOperationExpression	& sigint_watcher		31879	0					
ANR	33652	UnaryOperator	&		31879	0					
ANR	33653	Identifier	sigint_watcher		31879	1					
ANR	33654	ExpressionStatement	"ev_signal_stop ( EV_DEFAULT , & sigterm_watcher )"	1209:4:34971:35015	31879	104	True				
ANR	33655	CallExpression	"ev_signal_stop ( EV_DEFAULT , & sigterm_watcher )"		31879	0					
ANR	33656	Callee	ev_signal_stop		31879	0					
ANR	33657	Identifier	ev_signal_stop		31879	0					
ANR	33658	ArgumentList	EV_DEFAULT		31879	1					
ANR	33659	Argument	EV_DEFAULT		31879	0					
ANR	33660	Identifier	EV_DEFAULT		31879	0					
ANR	33661	Argument	& sigterm_watcher		31879	1					
ANR	33662	UnaryOperationExpression	& sigterm_watcher		31879	0					
ANR	33663	UnaryOperator	&		31879	0					
ANR	33664	Identifier	sigterm_watcher		31879	1					
ANR	33665	ExpressionStatement	ss_free ( working_dir )	1210:4:35021:35041	31879	105	True				
ANR	33666	CallExpression	ss_free ( working_dir )		31879	0					
ANR	33667	Callee	ss_free		31879	0					
ANR	33668	Identifier	ss_free		31879	0					
ANR	33669	ArgumentList	working_dir		31879	1					
ANR	33670	Argument	working_dir		31879	0					
ANR	33671	Identifier	working_dir		31879	0					
ANR	33672	ReturnStatement	return 0 ;	1212:4:35048:35056	31879	106	True				
ANR	33673	PrimaryExpression	0		31879	0					
ANR	33674	ReturnType	int		31879	1					
ANR	33675	Identifier	main		31879	2					
ANR	33676	ParameterList	"int argc , char * * argv"		31879	3					
ANR	33677	Parameter	int argc	825:5:23902:23909	31879	0	True				
ANR	33678	ParameterType	int		31879	0					
ANR	33679	Identifier	argc		31879	1					
ANR	33680	Parameter	char * * argv	825:15:23912:23922	31879	1	True				
ANR	33681	ParameterType	char * *		31879	0					
ANR	33682	Identifier	argv		31879	1					
ANR	33683	CFGEntryNode	ENTRY		31879		True				
ANR	33684	CFGExitNode	EXIT		31879		True				
ANR	33685	Symbol	EEXIST		31879						
ANR	33686	Symbol	MAX_PORT_NUM		31879						
ANR	33687	Symbol	pw		31879						
ANR	33688	Symbol	optarg		31879						
ANR	33689	Symbol	conf		31879						
ANR	33690	Symbol	server -> password		31879						
ANR	33691	Symbol	manager . method		31879						
ANR	33692	Symbol	manager . reuse_port		31879						
ANR	33693	Symbol	GETOPT_VAL_PASSWORD		31879						
ANR	33694	Symbol	password		31879						
ANR	33695	Symbol	GETOPT_VAL_PLUGIN_OPTS		31879						
ANR	33696	Symbol	GETOPT_VAL_FAST_OPEN		31879						
ANR	33697	Symbol	& svaddr		31879						
ANR	33698	Symbol	bind		31879						
ANR	33699	Symbol	len		31879						
ANR	33700	Symbol	manager . fd		31879						
ANR	33701	Symbol	opterr		31879						
ANR	33702	Symbol	sigint_watcher		31879						
ANR	33703	Symbol	mkdir		31879						
ANR	33704	Symbol	ep -> d_name		31879						
ANR	33705	Symbol	server -> port		31879						
ANR	33706	Symbol	errno		31879						
ANR	33707	Symbol	method		31879						
ANR	33708	Symbol	AF_UNIX		31879						
ANR	33709	Symbol	SIG_IGN		31879						
ANR	33710	Symbol	working_dir_size		31879						
ANR	33711	Symbol	GETOPT_VAL_MANAGER_ADDRESS		31879						
ANR	33712	Symbol	conf -> port_password		31879						
ANR	33713	Symbol	SOCK_DGRAM		31879						
ANR	33714	Symbol	fast_open		31879						
ANR	33715	Symbol	manager . acl		31879						
ANR	33716	Symbol	conf -> plugin_opts		31879						
ANR	33717	Symbol	MAX_REMOTE_NUM		31879						
ANR	33718	Symbol	S_IRWXU		31879						
ANR	33719	Symbol	GETOPT_VAL_PLUGIN		31879						
ANR	33720	Symbol	TCP_AND_UDP		31879						
ANR	33721	Symbol	EXIT_FAILURE		31879						
ANR	33722	Symbol	EXIT_SUCCESS		31879						
ANR	33723	Symbol	manager . mode		31879						
ANR	33724	Symbol	entry -> value		31879						
ANR	33725	Symbol	conf -> port_password [ i ] . port		31879						
ANR	33726	Symbol	conf -> fast_open		31879						
ANR	33727	Symbol	S_IRWXG		31879						
ANR	33728	Symbol	svaddr		31879						
ANR	33729	Symbol	svaddr . sun_family		31879						
ANR	33730	Symbol	server		31879						
ANR	33731	Symbol	* server		31879						
ANR	33732	Symbol	UDP_ONLY		31879						
ANR	33733	Symbol	* * conf		31879						
ANR	33734	Symbol	& manager . io		31879						
ANR	33735	Symbol	sigterm_watcher		31879						
ANR	33736	Symbol	EV_READ		31879						
ANR	33737	Symbol	& ip_addr		31879						
ANR	33738	Symbol	conf -> mtu		31879						
ANR	33739	Symbol	conf -> plugin		31879						
ANR	33740	Symbol	server_iter		31879						
ANR	33741	Symbol	readdir		31879						
ANR	33742	Symbol	GETOPT_VAL_REUSE_PORT		31879						
ANR	33743	Symbol	* server_host		31879						
ANR	33744	Symbol	pid_path		31879						
ANR	33745	Symbol	atoi		31879						
ANR	33746	Symbol	conf -> method		31879						
ANR	33747	Symbol	manager . timeout		31879						
ANR	33748	Symbol	c		31879						
ANR	33749	Symbol	conf -> reuse_port		31879						
ANR	33750	Symbol	manager		31879						
ANR	33751	Symbol	err		31879						
ANR	33752	Symbol	manager_recv_cb		31879						
ANR	33753	Symbol	getopt_long		31879						
ANR	33754	Symbol	conf -> remote_addr [ i ] . host		31879						
ANR	33755	Symbol	manager . nofile		31879						
ANR	33756	Symbol	S_IXOTH		31879						
ANR	33757	Symbol	i		31879						
ANR	33758	Symbol	SIGABRT		31879						
ANR	33759	Symbol	ENOENT		31879						
ANR	33760	Symbol	TCP_ONLY		31879						
ANR	33761	Symbol	executable		31879						
ANR	33762	Symbol	conf -> timeout		31879						
ANR	33763	Symbol	verbose		31879						
ANR	33764	Symbol	homedir		31879						
ANR	33765	Symbol	manager . hosts		31879						
ANR	33766	Symbol	sfd		31879						
ANR	33767	Symbol	* ep		31879						
ANR	33768	Symbol	manager . user		31879						
ANR	33769	Symbol	plugin		31879						
ANR	33770	Symbol	* conf -> remote_addr		31879						
ANR	33771	Symbol	conf -> password		31879						
ANR	33772	Symbol	ss_malloc		31879						
ANR	33773	Symbol	conf -> remote_num		31879						
ANR	33774	Symbol	conf -> nofile		31879						
ANR	33775	Symbol	ipv6first		31879						
ANR	33776	Symbol	server_table		31879						
ANR	33777	Symbol	* argv		31879						
ANR	33778	Symbol	acl		31879						
ANR	33779	Symbol	cork_string_hash_table_new		31879						
ANR	33780	Symbol	required_argument		31879						
ANR	33781	Symbol	dp		31879						
ANR	33782	Symbol	mode		31879						
ANR	33783	Symbol	conf -> remote_addr		31879						
ANR	33784	Symbol	manager . nameserver_num		31879						
ANR	33785	Symbol	getpwuid		31879						
ANR	33786	Symbol	strlen		31879						
ANR	33787	Symbol	long_options		31879						
ANR	33788	Symbol	manager . password		31879						
ANR	33789	Symbol	loop		31879						
ANR	33790	Symbol	conf -> port_password_num		31879						
ANR	33791	Symbol	SIGPIPE		31879						
ANR	33792	Symbol	ip_addr . host		31879						
ANR	33793	Symbol	manager . ipv6first		31879						
ANR	33794	Symbol	strcmp		31879						
ANR	33795	Symbol	S_IROTH		31879						
ANR	33796	Symbol	NULL		31879						
ANR	33797	Symbol	EV_DEFAULT		31879						
ANR	33798	Symbol	& manager		31879						
ANR	33799	Symbol	server_num		31879						
ANR	33800	Symbol	* nameservers		31879						
ANR	33801	Symbol	manager . manager_address		31879						
ANR	33802	Symbol	nameserver_num		31879						
ANR	33803	Symbol	ep		31879						
ANR	33804	Symbol	geteuid		31879						
ANR	33805	Symbol	conf -> port_password [ i ] . password		31879						
ANR	33806	Symbol	GETOPT_VAL_HELP		31879						
ANR	33807	Symbol	pw -> pw_dir		31879						
ANR	33808	Symbol	* pw		31879						
ANR	33809	Symbol	mtu		31879						
ANR	33810	Symbol	signal_cb		31879						
ANR	33811	Symbol	MAX_DNS_NUM		31879						
ANR	33812	Symbol	& sigterm_watcher		31879						
ANR	33813	Symbol	iface		31879						
ANR	33814	Symbol	manager . host_num		31879						
ANR	33815	Symbol	entry		31879						
ANR	33816	Symbol	getuid		31879						
ANR	33817	Symbol	read_jconf		31879						
ANR	33818	Symbol	SIGINT		31879						
ANR	33819	Symbol	opendir		31879						
ANR	33820	Symbol	conf -> mode		31879						
ANR	33821	Symbol	no_argument		31879						
ANR	33822	Symbol	nofile		31879						
ANR	33823	Symbol	reuse_port		31879						
ANR	33824	Symbol	svaddr . sun_path		31879						
ANR	33825	Symbol	manager . verbose		31879						
ANR	33826	Symbol	& sigint_watcher		31879						
ANR	33827	Symbol	manager . mtu		31879						
ANR	33828	Symbol	working_dir		31879						
ANR	33829	Symbol	* conf		31879						
ANR	33830	Symbol	GETOPT_VAL_ACL		31879						
ANR	33831	Symbol	argv		31879						
ANR	33832	Symbol	conf -> user		31879						
ANR	33833	Symbol	timeout		31879						
ANR	33834	Symbol	remove		31879						
ANR	33835	Symbol	manager_address		31879						
ANR	33836	Symbol	manager . plugin		31879						
ANR	33837	Symbol	create_server_socket		31879						
ANR	33838	Symbol	plugin_opts		31879						
ANR	33839	Symbol	* conf -> port_password		31879						
ANR	33840	Symbol	manager . nameservers		31879						
ANR	33841	Symbol	SIGTERM		31879						
ANR	33842	Symbol	conf -> nameserver		31879						
ANR	33843	Symbol	* entry		31879						
ANR	33844	Symbol	argc		31879						
ANR	33845	Symbol	conf_path		31879						
ANR	33846	Symbol	ip_addr . port		31879						
ANR	33847	Symbol	server_host		31879						
ANR	33848	Symbol	GETOPT_VAL_MTU		31879						
ANR	33849	Symbol	GETOPT_VAL_EXECUTABLE		31879						
ANR	33850	Symbol	cork_hash_table_iterator_next		31879						
ANR	33851	Symbol	SIGCHLD		31879						
ANR	33852	Symbol	& server_iter		31879						
ANR	33853	Symbol	nameservers		31879						
ANR	33854	Symbol	* i		31879						
ANR	33855	Symbol	pid_flags		31879						
ANR	33856	Symbol	conf -> ipv6_first		31879						
ANR	33857	Symbol	manager . plugin_opts		31879						
ANR	33858	Symbol	socket		31879						
ANR	33859	Symbol	manager . fast_open		31879						
ANR	33860	Symbol	ip_addr		31879						
ANR	33861	Symbol	user		31879						
ANR	33862	Symbol	manager . iface		31879						
