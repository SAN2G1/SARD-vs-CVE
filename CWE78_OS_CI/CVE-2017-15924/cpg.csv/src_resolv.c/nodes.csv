command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	101503	File	data/converged/CVE-2017-15924_shadowsocks-libev/src_resolv.c								
ANR	101504	ClassDef	resolv_ctx	60:0:1879:2007							
ANR	101505	DeclStmt									
ANR	101506	Decl							struct ev_io	struct ev_io	io
ANR	101507	DeclStmt									
ANR	101508	Decl							struct ev_timer	struct ev_timer	tw
ANR	101509	DeclStmt									
ANR	101510	Decl							ares_channel	ares_channel	channel
ANR	101511	DeclStmt									
ANR	101512	Decl							struct ares_options	struct ares_options	options
ANR	101513	ClassDef	resolv_query	68:0:2011:2250							
ANR	101514	DeclStmt									
ANR	101515	Decl							int	int [ 2 ]	requests
ANR	101516	DeclStmt									
ANR	101517	Decl							size_t	size_t	response_count
ANR	101518	DeclStmt									
ANR	101519	Decl							struct sockaddr	struct sockaddr * *	responses
ANR	101520	DeclStmt									
ANR	101521	Decl							"void ( * ) ( struct sockaddr * , void * )"	"void ( * ) ( struct sockaddr * , void * )"	client_cb
ANR	101522	DeclStmt									
ANR	101523	Decl							void ( * ) ( void * )	void ( * ) ( void * )	free_cb
ANR	101524	DeclStmt									
ANR	101525	Decl							uint16_t	uint16_t	port
ANR	101526	DeclStmt									
ANR	101527	Decl							void	void *	data
ANR	101528	DeclStmt									
ANR	101529	Decl							int	int	is_closed
ANR	101530	DeclStmt									
ANR	101531	Decl							extern int	extern int	verbose
ANR	101532	DeclStmt									
ANR	101533	Decl							struct resolv_ctx	struct resolv_ctx	default_ctx
ANR	101534	DeclStmt									
ANR	101535	Decl							struct ev_loop	struct ev_loop *	default_loop
ANR	101536	ClassDef	<unnamed>	88:0:2344:2415							
ANR	101537	DeclStmt									
ANR	101538	Decl									RESOLV_MODE
ANR	101539	DeclStmt									
ANR	101540	Decl							int	int	resolv_mode
ANR	101541	DeclStmt									
ANR	101542	Decl							void	"void ( struct ev_loop * , struct ev_io * , int )"	resolv_sock_cb
ANR	101543	DeclStmt									
ANR	101544	Decl							void	"void ( struct ev_loop * , struct ev_timer * , int )"	resolv_timeout_cb
ANR	101545	DeclStmt									
ANR	101546	Decl							void	"void ( void * , int , int , int )"	resolv_sock_state_cb
ANR	101547	DeclStmt									
ANR	101548	Decl							void	"void ( void * , int , int , struct hostent * )"	dns_query_v4_cb
ANR	101549	DeclStmt									
ANR	101550	Decl							void	"void ( void * , int , int , struct hostent * )"	dns_query_v6_cb
ANR	101551	DeclStmt									
ANR	101552	Decl							void	void ( struct resolv_query * )	process_client_callback
ANR	101553	DeclStmt									
ANR	101554	Decl							int	int ( struct resolv_query * )	all_requests_are_null
ANR	101555	DeclStmt									
ANR	101556	Decl							struct sockaddr	struct sockaddr * ( struct resolv_query * )	choose_ipv4_first
ANR	101557	DeclStmt									
ANR	101558	Decl							struct sockaddr	struct sockaddr * ( struct resolv_query * )	choose_ipv6_first
ANR	101559	DeclStmt									
ANR	101560	Decl							struct sockaddr	struct sockaddr * ( struct resolv_query * )	choose_any
ANR	101561	DeclStmt									
ANR	101562	Decl							void	void ( )	reset_timer
ANR	101563	Function	resolv_sock_cb	115:0:3187:3528							
ANR	101564	FunctionDef	"resolv_sock_cb (EV_P_ ev_io * w , int revents)"		101563	0					
ANR	101565	CompoundStatement		117:0:3243:3528	101563	0					
ANR	101566	IdentifierDeclStatement	struct resolv_ctx * ctx = ( struct resolv_ctx * ) w ;	118:4:3249:3297	101563	0	True				
ANR	101567	IdentifierDecl	* ctx = ( struct resolv_ctx * ) w		101563	0					
ANR	101568	IdentifierDeclType	struct resolv_ctx *		101563	0					
ANR	101569	Identifier	ctx		101563	1					
ANR	101570	AssignmentExpression	* ctx = ( struct resolv_ctx * ) w		101563	2		=			
ANR	101571	Identifier	ctx		101563	0					
ANR	101572	CastExpression	( struct resolv_ctx * ) w		101563	1					
ANR	101573	CastTarget	struct resolv_ctx *		101563	0					
ANR	101574	Identifier	w		101563	1					
ANR	101575	IdentifierDeclStatement	"ares_socket_t rfd = ARES_SOCKET_BAD , wfd = ARES_SOCKET_BAD ;"	120:4:3304:3362	101563	1	True				
ANR	101576	IdentifierDecl	rfd = ARES_SOCKET_BAD		101563	0					
ANR	101577	IdentifierDeclType	ares_socket_t		101563	0					
ANR	101578	Identifier	rfd		101563	1					
ANR	101579	AssignmentExpression	rfd = ARES_SOCKET_BAD		101563	2		=			
ANR	101580	Identifier	ARES_SOCKET_BAD		101563	0					
ANR	101581	Identifier	ARES_SOCKET_BAD		101563	1					
ANR	101582	IdentifierDecl	wfd = ARES_SOCKET_BAD		101563	1					
ANR	101583	IdentifierDeclType	ares_socket_t		101563	0					
ANR	101584	Identifier	wfd		101563	1					
ANR	101585	AssignmentExpression	wfd = ARES_SOCKET_BAD		101563	2		=			
ANR	101586	Identifier	ARES_SOCKET_BAD		101563	0					
ANR	101587	Identifier	ARES_SOCKET_BAD		101563	1					
ANR	101588	IfStatement	if ( revents & EV_READ )		101563	2					
ANR	101589	Condition	revents & EV_READ	122:8:3373:3389	101563	0	True				
ANR	101590	BitAndExpression	revents & EV_READ		101563	0		&			
ANR	101591	Identifier	revents		101563	0					
ANR	101592	Identifier	EV_READ		101563	1					
ANR	101593	ExpressionStatement	rfd = w -> fd	123:8:3400:3411	101563	1	True				
ANR	101594	AssignmentExpression	rfd = w -> fd		101563	0		=			
ANR	101595	Identifier	rfd		101563	0					
ANR	101596	PtrMemberAccess	w -> fd		101563	1					
ANR	101597	Identifier	w		101563	0					
ANR	101598	Identifier	fd		101563	1					
ANR	101599	IfStatement	if ( revents & EV_WRITE )		101563	3					
ANR	101600	Condition	revents & EV_WRITE	124:8:3421:3438	101563	0	True				
ANR	101601	BitAndExpression	revents & EV_WRITE		101563	0		&			
ANR	101602	Identifier	revents		101563	0					
ANR	101603	Identifier	EV_WRITE		101563	1					
ANR	101604	ExpressionStatement	wfd = w -> fd	125:8:3449:3460	101563	1	True				
ANR	101605	AssignmentExpression	wfd = w -> fd		101563	0		=			
ANR	101606	Identifier	wfd		101563	0					
ANR	101607	PtrMemberAccess	w -> fd		101563	1					
ANR	101608	Identifier	w		101563	0					
ANR	101609	Identifier	fd		101563	1					
ANR	101610	ExpressionStatement	"ares_process_fd ( ctx -> channel , rfd , wfd )"	127:4:3467:3506	101563	4	True				
ANR	101611	CallExpression	"ares_process_fd ( ctx -> channel , rfd , wfd )"		101563	0					
ANR	101612	Callee	ares_process_fd		101563	0					
ANR	101613	Identifier	ares_process_fd		101563	0					
ANR	101614	ArgumentList	ctx -> channel		101563	1					
ANR	101615	Argument	ctx -> channel		101563	0					
ANR	101616	PtrMemberAccess	ctx -> channel		101563	0					
ANR	101617	Identifier	ctx		101563	0					
ANR	101618	Identifier	channel		101563	1					
ANR	101619	Argument	rfd		101563	1					
ANR	101620	Identifier	rfd		101563	0					
ANR	101621	Argument	wfd		101563	2					
ANR	101622	Identifier	wfd		101563	0					
ANR	101623	ExpressionStatement	reset_timer ( )	129:4:3513:3526	101563	5	True				
ANR	101624	CallExpression	reset_timer ( )		101563	0					
ANR	101625	Callee	reset_timer		101563	0					
ANR	101626	Identifier	reset_timer		101563	0					
ANR	101627	ArgumentList			101563	1					
ANR	101628	ReturnType	static void		101563	1					
ANR	101629	Identifier	resolv_sock_cb		101563	2					
ANR	101630	ParameterList	"EV_P_ ev_io * w , int revents"		101563	3					
ANR	101631	Parameter	EV_P_ ev_io * w	116:15:3214:3227	101563	0	True				
ANR	101632	ParameterType	EV_P_ ev_io *		101563	0					
ANR	101633	Identifier	w		101563	1					
ANR	101634	Parameter	int revents	116:31:3230:3240	101563	1	True				
ANR	101635	ParameterType	int		101563	0					
ANR	101636	Identifier	revents		101563	1					
ANR	101637	CFGEntryNode	ENTRY		101563		True				
ANR	101638	CFGExitNode	EXIT		101563		True				
ANR	101639	Symbol	rfd		101563						
ANR	101640	Symbol	* w		101563						
ANR	101641	Symbol	ctx -> channel		101563						
ANR	101642	Symbol	w -> fd		101563						
ANR	101643	Symbol	wfd		101563						
ANR	101644	Symbol	EV_WRITE		101563						
ANR	101645	Symbol	revents		101563						
ANR	101646	Symbol	ctx		101563						
ANR	101647	Symbol	w		101563						
ANR	101648	Symbol	ARES_SOCKET_BAD		101563						
ANR	101649	Symbol	EV_READ		101563						
ANR	101650	Symbol	* ctx		101563						
ANR	101651	Function	resolv_init	132:0:3531:4997							
ANR	101652	FunctionDef	"resolv_init (struct ev_loop * loop , char * nameservers , int ipv6first)"		101651	0					
ANR	101653	CompoundStatement		134:0:3603:4997	101651	0					
ANR	101654	IdentifierDeclStatement	int status ;	135:4:3609:3619	101651	0	True				
ANR	101655	IdentifierDecl	status		101651	0					
ANR	101656	IdentifierDeclType	int		101651	0					
ANR	101657	Identifier	status		101651	1					
ANR	101658	IfStatement	if ( ipv6first )		101651	1					
ANR	101659	Condition	ipv6first	137:8:3630:3638	101651	0	True				
ANR	101660	Identifier	ipv6first		101651	0					
ANR	101661	ExpressionStatement	resolv_mode = MODE_IPV6_FIRST	138:8:3649:3678	101651	1	True				
ANR	101662	AssignmentExpression	resolv_mode = MODE_IPV6_FIRST		101651	0		=			
ANR	101663	Identifier	resolv_mode		101651	0					
ANR	101664	Identifier	MODE_IPV6_FIRST		101651	1					
ANR	101665	ElseStatement	else		101651	0					
ANR	101666	ExpressionStatement	resolv_mode = MODE_IPV4_FIRST	140:8:3697:3726	101651	0	True				
ANR	101667	AssignmentExpression	resolv_mode = MODE_IPV4_FIRST		101651	0		=			
ANR	101668	Identifier	resolv_mode		101651	0					
ANR	101669	Identifier	MODE_IPV4_FIRST		101651	1					
ANR	101670	ExpressionStatement	default_loop = loop	142:4:3733:3752	101651	2	True				
ANR	101671	AssignmentExpression	default_loop = loop		101651	0		=			
ANR	101672	Identifier	default_loop		101651	0					
ANR	101673	Identifier	loop		101651	1					
ANR	101674	IfStatement	if ( ( status = ares_library_init ( ARES_LIB_INIT_ALL ) ) != ARES_SUCCESS )		101651	3					
ANR	101675	Condition	( status = ares_library_init ( ARES_LIB_INIT_ALL ) ) != ARES_SUCCESS	144:8:3763:3825	101651	0	True				
ANR	101676	EqualityExpression	( status = ares_library_init ( ARES_LIB_INIT_ALL ) ) != ARES_SUCCESS		101651	0		!=			
ANR	101677	AssignmentExpression	status = ares_library_init ( ARES_LIB_INIT_ALL )		101651	0		=			
ANR	101678	Identifier	status		101651	0					
ANR	101679	CallExpression	ares_library_init ( ARES_LIB_INIT_ALL )		101651	1					
ANR	101680	Callee	ares_library_init		101651	0					
ANR	101681	Identifier	ares_library_init		101651	0					
ANR	101682	ArgumentList	ARES_LIB_INIT_ALL		101651	1					
ANR	101683	Argument	ARES_LIB_INIT_ALL		101651	0					
ANR	101684	Identifier	ARES_LIB_INIT_ALL		101651	0					
ANR	101685	Identifier	ARES_SUCCESS		101651	1					
ANR	101686	CompoundStatement		11:73:224:224	101651	1					
ANR	101687	ExpressionStatement	"LOGE ( ""c-ares error: %s"" , ares_strerror ( status ) )"	145:8:3838:3885	101651	0	True				
ANR	101688	CallExpression	"LOGE ( ""c-ares error: %s"" , ares_strerror ( status ) )"		101651	0					
ANR	101689	Callee	LOGE		101651	0					
ANR	101690	Identifier	LOGE		101651	0					
ANR	101691	ArgumentList	"""c-ares error: %s"""		101651	1					
ANR	101692	Argument	"""c-ares error: %s"""		101651	0					
ANR	101693	PrimaryExpression	"""c-ares error: %s"""		101651	0					
ANR	101694	Argument	ares_strerror ( status )		101651	1					
ANR	101695	CallExpression	ares_strerror ( status )		101651	0					
ANR	101696	Callee	ares_strerror		101651	0					
ANR	101697	Identifier	ares_strerror		101651	0					
ANR	101698	ArgumentList	status		101651	1					
ANR	101699	Argument	status		101651	0					
ANR	101700	Identifier	status		101651	0					
ANR	101701	ExpressionStatement	"FATAL ( ""failed to initialize c-ares"" )"	146:8:3895:3931	101651	1	True				
ANR	101702	CallExpression	"FATAL ( ""failed to initialize c-ares"" )"		101651	0					
ANR	101703	Callee	FATAL		101651	0					
ANR	101704	Identifier	FATAL		101651	0					
ANR	101705	ArgumentList	"""failed to initialize c-ares"""		101651	1					
ANR	101706	Argument	"""failed to initialize c-ares"""		101651	0					
ANR	101707	PrimaryExpression	"""failed to initialize c-ares"""		101651	0					
ANR	101708	ExpressionStatement	"memset ( & default_ctx , 0 , sizeof ( struct resolv_ctx ) )"	149:4:3944:3994	101651	4	True				
ANR	101709	CallExpression	"memset ( & default_ctx , 0 , sizeof ( struct resolv_ctx ) )"		101651	0					
ANR	101710	Callee	memset		101651	0					
ANR	101711	Identifier	memset		101651	0					
ANR	101712	ArgumentList	& default_ctx		101651	1					
ANR	101713	Argument	& default_ctx		101651	0					
ANR	101714	UnaryOperationExpression	& default_ctx		101651	0					
ANR	101715	UnaryOperator	&		101651	0					
ANR	101716	Identifier	default_ctx		101651	1					
ANR	101717	Argument	0		101651	1					
ANR	101718	PrimaryExpression	0		101651	0					
ANR	101719	Argument	sizeof ( struct resolv_ctx )		101651	2					
ANR	101720	SizeofExpression	sizeof ( struct resolv_ctx )		101651	0					
ANR	101721	Sizeof	sizeof		101651	0					
ANR	101722	SizeofOperand	struct resolv_ctx		101651	1					
ANR	101723	ExpressionStatement	default_ctx . options . sock_state_cb_data = & default_ctx	151:4:4001:4054	101651	5	True				
ANR	101724	AssignmentExpression	default_ctx . options . sock_state_cb_data = & default_ctx		101651	0		=			
ANR	101725	MemberAccess	default_ctx . options . sock_state_cb_data		101651	0					
ANR	101726	MemberAccess	default_ctx . options		101651	0					
ANR	101727	Identifier	default_ctx		101651	0					
ANR	101728	Identifier	options		101651	1					
ANR	101729	Identifier	sock_state_cb_data		101651	1					
ANR	101730	UnaryOperationExpression	& default_ctx		101651	1					
ANR	101731	UnaryOperator	&		101651	0					
ANR	101732	Identifier	default_ctx		101651	1					
ANR	101733	ExpressionStatement	default_ctx . options . sock_state_cb = resolv_sock_state_cb	152:4:4060:4116	101651	6	True				
ANR	101734	AssignmentExpression	default_ctx . options . sock_state_cb = resolv_sock_state_cb		101651	0		=			
ANR	101735	MemberAccess	default_ctx . options . sock_state_cb		101651	0					
ANR	101736	MemberAccess	default_ctx . options		101651	0					
ANR	101737	Identifier	default_ctx		101651	0					
ANR	101738	Identifier	options		101651	1					
ANR	101739	Identifier	sock_state_cb		101651	1					
ANR	101740	Identifier	resolv_sock_state_cb		101651	1					
ANR	101741	ExpressionStatement	default_ctx . options . timeout = 3000	153:4:4122:4156	101651	7	True				
ANR	101742	AssignmentExpression	default_ctx . options . timeout = 3000		101651	0		=			
ANR	101743	MemberAccess	default_ctx . options . timeout		101651	0					
ANR	101744	MemberAccess	default_ctx . options		101651	0					
ANR	101745	Identifier	default_ctx		101651	0					
ANR	101746	Identifier	options		101651	1					
ANR	101747	Identifier	timeout		101651	1					
ANR	101748	PrimaryExpression	3000		101651	1					
ANR	101749	ExpressionStatement	default_ctx . options . tries = 2	154:4:4162:4191	101651	8	True				
ANR	101750	AssignmentExpression	default_ctx . options . tries = 2		101651	0		=			
ANR	101751	MemberAccess	default_ctx . options . tries		101651	0					
ANR	101752	MemberAccess	default_ctx . options		101651	0					
ANR	101753	Identifier	default_ctx		101651	0					
ANR	101754	Identifier	options		101651	1					
ANR	101755	Identifier	tries		101651	1					
ANR	101756	PrimaryExpression	2		101651	1					
ANR	101757	Statement	status	156:4:4198:4203	101651	9	True				
ANR	101758	Statement	=	156:11:4205:4205	101651	10	True				
ANR	101759	Statement	ares_init_options	156:13:4207:4223	101651	11	True				
ANR	101760	Statement	(	156:30:4224:4224	101651	12	True				
ANR	101761	Statement	&	156:31:4225:4225	101651	13	True				
ANR	101762	Statement	default_ctx	156:32:4226:4236	101651	14	True				
ANR	101763	Statement	.	156:43:4237:4237	101651	15	True				
ANR	101764	Statement	channel	156:44:4238:4244	101651	16	True				
ANR	101765	Statement	","	156:51:4245:4245	101651	17	True				
ANR	101766	Statement	&	156:53:4247:4247	101651	18	True				
ANR	101767	Statement	default_ctx	156:54:4248:4258	101651	19	True				
ANR	101768	Statement	.	156:65:4259:4259	101651	20	True				
ANR	101769	Statement	options	156:66:4260:4266	101651	21	True				
ANR	101770	Statement	","	156:73:4267:4267	101651	22	True				
ANR	101771	Statement	ARES_OPT_NOROTATE	158:12:4337:4353	101651	23	True				
ANR	101772	Statement	|	158:30:4355:4355	101651	24	True				
ANR	101773	Statement	ARES_OPT_TIMEOUTMS	160:12:4376:4393	101651	25	True				
ANR	101774	Statement	|	160:31:4395:4395	101651	26	True				
ANR	101775	Statement	ARES_OPT_TRIES	160:33:4397:4410	101651	27	True				
ANR	101776	Statement	|	160:48:4412:4412	101651	28	True				
ANR	101777	Statement	ARES_OPT_SOCK_STATE_CB	160:50:4414:4435	101651	29	True				
ANR	101778	Statement	)	160:72:4436:4436	101651	30	True				
ANR	101779	ExpressionStatement		160:73:4437:4437	101651	31	True				
ANR	101780	IfStatement	if ( status != ARES_SUCCESS )		101651	32					
ANR	101781	Condition	status != ARES_SUCCESS	162:8:4448:4469	101651	0	True				
ANR	101782	EqualityExpression	status != ARES_SUCCESS		101651	0		!=			
ANR	101783	Identifier	status		101651	0					
ANR	101784	Identifier	ARES_SUCCESS		101651	1					
ANR	101785	CompoundStatement		29:32:868:868	101651	1					
ANR	101786	ExpressionStatement	"FATAL ( ""failed to initialize c-ares"" )"	163:8:4482:4518	101651	0	True				
ANR	101787	CallExpression	"FATAL ( ""failed to initialize c-ares"" )"		101651	0					
ANR	101788	Callee	FATAL		101651	0					
ANR	101789	Identifier	FATAL		101651	0					
ANR	101790	ArgumentList	"""failed to initialize c-ares"""		101651	1					
ANR	101791	Argument	"""failed to initialize c-ares"""		101651	0					
ANR	101792	PrimaryExpression	"""failed to initialize c-ares"""		101651	0					
ANR	101793	IfStatement	if ( nameservers != NULL )		101651	33					
ANR	101794	Condition	nameservers != NULL	166:8:4535:4553	101651	0	True				
ANR	101795	EqualityExpression	nameservers != NULL		101651	0		!=			
ANR	101796	Identifier	nameservers		101651	0					
ANR	101797	Identifier	NULL		101651	1					
ANR	101798	CompoundStatement		33:29:952:952	101651	1					
ANR	101799	ExpressionStatement	"status = ares_set_servers_ports_csv ( default_ctx . channel , nameservers )"	168:8:4622:4691	101651	0	True				
ANR	101800	AssignmentExpression	"status = ares_set_servers_ports_csv ( default_ctx . channel , nameservers )"		101651	0		=			
ANR	101801	Identifier	status		101651	0					
ANR	101802	CallExpression	"ares_set_servers_ports_csv ( default_ctx . channel , nameservers )"		101651	1					
ANR	101803	Callee	ares_set_servers_ports_csv		101651	0					
ANR	101804	Identifier	ares_set_servers_ports_csv		101651	0					
ANR	101805	ArgumentList	default_ctx . channel		101651	1					
ANR	101806	Argument	default_ctx . channel		101651	0					
ANR	101807	MemberAccess	default_ctx . channel		101651	0					
ANR	101808	Identifier	default_ctx		101651	0					
ANR	101809	Identifier	channel		101651	1					
ANR	101810	Argument	nameservers		101651	1					
ANR	101811	Identifier	nameservers		101651	0					
ANR	101812	IfStatement	if ( status != ARES_SUCCESS )		101651	34					
ANR	101813	Condition	status != ARES_SUCCESS	174:8:4794:4815	101651	0	True				
ANR	101814	EqualityExpression	status != ARES_SUCCESS		101651	0		!=			
ANR	101815	Identifier	status		101651	0					
ANR	101816	Identifier	ARES_SUCCESS		101651	1					
ANR	101817	CompoundStatement		41:32:1214:1214	101651	1					
ANR	101818	ExpressionStatement	"FATAL ( ""failed to set nameservers"" )"	175:8:4828:4862	101651	0	True				
ANR	101819	CallExpression	"FATAL ( ""failed to set nameservers"" )"		101651	0					
ANR	101820	Callee	FATAL		101651	0					
ANR	101821	Identifier	FATAL		101651	0					
ANR	101822	ArgumentList	"""failed to set nameservers"""		101651	1					
ANR	101823	Argument	"""failed to set nameservers"""		101651	0					
ANR	101824	PrimaryExpression	"""failed to set nameservers"""		101651	0					
ANR	101825	ExpressionStatement	"ev_init ( & default_ctx . io , resolv_sock_cb )"	178:4:4875:4915	101651	35	True				
ANR	101826	CallExpression	"ev_init ( & default_ctx . io , resolv_sock_cb )"		101651	0					
ANR	101827	Callee	ev_init		101651	0					
ANR	101828	Identifier	ev_init		101651	0					
ANR	101829	ArgumentList	& default_ctx . io		101651	1					
ANR	101830	Argument	& default_ctx . io		101651	0					
ANR	101831	UnaryOperationExpression	& default_ctx . io		101651	0					
ANR	101832	UnaryOperator	&		101651	0					
ANR	101833	MemberAccess	default_ctx . io		101651	1					
ANR	101834	Identifier	default_ctx		101651	0					
ANR	101835	Identifier	io		101651	1					
ANR	101836	Argument	resolv_sock_cb		101651	1					
ANR	101837	Identifier	resolv_sock_cb		101651	0					
ANR	101838	ExpressionStatement	"ev_timer_init ( & default_ctx . tw , resolv_timeout_cb , 0.0 , 0.0 )"	179:4:4921:4980	101651	36	True				
ANR	101839	CallExpression	"ev_timer_init ( & default_ctx . tw , resolv_timeout_cb , 0.0 , 0.0 )"		101651	0					
ANR	101840	Callee	ev_timer_init		101651	0					
ANR	101841	Identifier	ev_timer_init		101651	0					
ANR	101842	ArgumentList	& default_ctx . tw		101651	1					
ANR	101843	Argument	& default_ctx . tw		101651	0					
ANR	101844	UnaryOperationExpression	& default_ctx . tw		101651	0					
ANR	101845	UnaryOperator	&		101651	0					
ANR	101846	MemberAccess	default_ctx . tw		101651	1					
ANR	101847	Identifier	default_ctx		101651	0					
ANR	101848	Identifier	tw		101651	1					
ANR	101849	Argument	resolv_timeout_cb		101651	1					
ANR	101850	Identifier	resolv_timeout_cb		101651	0					
ANR	101851	Argument	0.0		101651	2					
ANR	101852	PrimaryExpression	0.0		101651	0					
ANR	101853	Argument	0.0		101651	3					
ANR	101854	PrimaryExpression	0.0		101651	0					
ANR	101855	ReturnStatement	return 0 ;	181:4:4987:4995	101651	37	True				
ANR	101856	PrimaryExpression	0		101651	0					
ANR	101857	ReturnType	int		101651	1					
ANR	101858	Identifier	resolv_init		101651	2					
ANR	101859	ParameterList	"struct ev_loop * loop , char * nameservers , int ipv6first"		101651	3					
ANR	101860	Parameter	struct ev_loop * loop	133:12:3547:3566	101651	0	True				
ANR	101861	ParameterType	struct ev_loop *		101651	0					
ANR	101862	Identifier	loop		101651	1					
ANR	101863	Parameter	char * nameservers	133:34:3569:3585	101651	1	True				
ANR	101864	ParameterType	char *		101651	0					
ANR	101865	Identifier	nameservers		101651	1					
ANR	101866	Parameter	int ipv6first	133:53:3588:3600	101651	2	True				
ANR	101867	ParameterType	int		101651	0					
ANR	101868	Identifier	ipv6first		101651	1					
ANR	101869	CFGEntryNode	ENTRY		101651		True				
ANR	101870	CFGExitNode	EXIT		101651		True				
ANR	101871	Symbol	ipv6first		101651						
ANR	101872	Symbol	ares_set_servers_ports_csv		101651						
ANR	101873	Symbol	ARES_LIB_INIT_ALL		101651						
ANR	101874	Symbol	ares_library_init		101651						
ANR	101875	Symbol	& default_ctx		101651						
ANR	101876	Symbol	default_ctx		101651						
ANR	101877	Symbol	MODE_IPV6_FIRST		101651						
ANR	101878	Symbol	resolv_mode		101651						
ANR	101879	Symbol	loop		101651						
ANR	101880	Symbol	& default_ctx . tw		101651						
ANR	101881	Symbol	default_loop		101651						
ANR	101882	Symbol	default_ctx . options		101651						
ANR	101883	Symbol	default_ctx . options . sock_state_cb_data		101651						
ANR	101884	Symbol	default_ctx . options . timeout		101651						
ANR	101885	Symbol	NULL		101651						
ANR	101886	Symbol	MODE_IPV4_FIRST		101651						
ANR	101887	Symbol	default_ctx . channel		101651						
ANR	101888	Symbol	resolv_sock_cb		101651						
ANR	101889	Symbol	ARES_SUCCESS		101651						
ANR	101890	Symbol	default_ctx . options . tries		101651						
ANR	101891	Symbol	resolv_timeout_cb		101651						
ANR	101892	Symbol	ares_strerror		101651						
ANR	101893	Symbol	nameservers		101651						
ANR	101894	Symbol	resolv_sock_state_cb		101651						
ANR	101895	Symbol	default_ctx . options . sock_state_cb		101651						
ANR	101896	Symbol	& default_ctx . io		101651						
ANR	101897	Symbol	status		101651						
ANR	101898	Function	resolv_shutdown	184:0:5000:5151							
ANR	101899	FunctionDef	resolv_shutdown (struct ev_loop * loop)		101898	0					
ANR	101900	CompoundStatement		186:0:5043:5151	101898	0					
ANR	101901	ExpressionStatement	ares_cancel ( default_ctx . channel )	187:4:5049:5081	101898	0	True				
ANR	101902	CallExpression	ares_cancel ( default_ctx . channel )		101898	0					
ANR	101903	Callee	ares_cancel		101898	0					
ANR	101904	Identifier	ares_cancel		101898	0					
ANR	101905	ArgumentList	default_ctx . channel		101898	1					
ANR	101906	Argument	default_ctx . channel		101898	0					
ANR	101907	MemberAccess	default_ctx . channel		101898	0					
ANR	101908	Identifier	default_ctx		101898	0					
ANR	101909	Identifier	channel		101898	1					
ANR	101910	ExpressionStatement	ares_destroy ( default_ctx . channel )	188:4:5087:5120	101898	1	True				
ANR	101911	CallExpression	ares_destroy ( default_ctx . channel )		101898	0					
ANR	101912	Callee	ares_destroy		101898	0					
ANR	101913	Identifier	ares_destroy		101898	0					
ANR	101914	ArgumentList	default_ctx . channel		101898	1					
ANR	101915	Argument	default_ctx . channel		101898	0					
ANR	101916	MemberAccess	default_ctx . channel		101898	0					
ANR	101917	Identifier	default_ctx		101898	0					
ANR	101918	Identifier	channel		101898	1					
ANR	101919	ExpressionStatement	ares_library_cleanup ( )	190:4:5127:5149	101898	2	True				
ANR	101920	CallExpression	ares_library_cleanup ( )		101898	0					
ANR	101921	Callee	ares_library_cleanup		101898	0					
ANR	101922	Identifier	ares_library_cleanup		101898	0					
ANR	101923	ArgumentList			101898	1					
ANR	101924	ReturnType	void		101898	1					
ANR	101925	Identifier	resolv_shutdown		101898	2					
ANR	101926	ParameterList	struct ev_loop * loop		101898	3					
ANR	101927	Parameter	struct ev_loop * loop	185:16:5021:5040	101898	0	True				
ANR	101928	ParameterType	struct ev_loop *		101898	0					
ANR	101929	Identifier	loop		101898	1					
ANR	101930	CFGEntryNode	ENTRY		101898		True				
ANR	101931	CFGExitNode	EXIT		101898		True				
ANR	101932	Symbol	default_ctx		101898						
ANR	101933	Symbol	loop		101898						
ANR	101934	Symbol	default_ctx . channel		101898						
ANR	101935	Function	resolv_start	193:0:5154:6136							
ANR	101936	FunctionDef	"resolv_start (const char * hostname , uint16_t port , void ( * client_cb ) ( struct sockaddr * , void * ) , void ( * free_cb ) ( void * ) , void * data)"		101935	0					
ANR	101937	CompoundStatement		197:0:5324:6136	101935	0					
ANR	101938	IdentifierDeclStatement	struct resolv_query * query = ss_malloc ( sizeof ( struct resolv_query ) ) ;	202:4:5388:5455	101935	0	True				
ANR	101939	IdentifierDecl	* query = ss_malloc ( sizeof ( struct resolv_query ) )		101935	0					
ANR	101940	IdentifierDeclType	struct resolv_query *		101935	0					
ANR	101941	Identifier	query		101935	1					
ANR	101942	AssignmentExpression	* query = ss_malloc ( sizeof ( struct resolv_query ) )		101935	2		=			
ANR	101943	Identifier	query		101935	0					
ANR	101944	CallExpression	ss_malloc ( sizeof ( struct resolv_query ) )		101935	1					
ANR	101945	Callee	ss_malloc		101935	0					
ANR	101946	Identifier	ss_malloc		101935	0					
ANR	101947	ArgumentList	sizeof ( struct resolv_query )		101935	1					
ANR	101948	Argument	sizeof ( struct resolv_query )		101935	0					
ANR	101949	SizeofExpression	sizeof ( struct resolv_query )		101935	0					
ANR	101950	Sizeof	sizeof		101935	0					
ANR	101951	SizeofOperand	struct resolv_query		101935	1					
ANR	101952	IfStatement	if ( query == NULL )		101935	1					
ANR	101953	Condition	query == NULL	204:8:5466:5478	101935	0	True				
ANR	101954	EqualityExpression	query == NULL		101935	0		==			
ANR	101955	Identifier	query		101935	0					
ANR	101956	Identifier	NULL		101935	1					
ANR	101957	CompoundStatement		8:23:156:156	101935	1					
ANR	101958	ExpressionStatement	"LOGE ( ""failed to allocate memory for DNS query callback data."" )"	205:8:5491:5553	101935	0	True				
ANR	101959	CallExpression	"LOGE ( ""failed to allocate memory for DNS query callback data."" )"		101935	0					
ANR	101960	Callee	LOGE		101935	0					
ANR	101961	Identifier	LOGE		101935	0					
ANR	101962	ArgumentList	"""failed to allocate memory for DNS query callback data."""		101935	1					
ANR	101963	Argument	"""failed to allocate memory for DNS query callback data."""		101935	0					
ANR	101964	PrimaryExpression	"""failed to allocate memory for DNS query callback data."""		101935	0					
ANR	101965	ReturnStatement	return NULL ;	206:8:5563:5574	101935	1	True				
ANR	101966	Identifier	NULL		101935	0					
ANR	101967	ExpressionStatement	"memset ( query , 0 , sizeof ( struct resolv_query ) )"	209:4:5587:5632	101935	2	True				
ANR	101968	CallExpression	"memset ( query , 0 , sizeof ( struct resolv_query ) )"		101935	0					
ANR	101969	Callee	memset		101935	0					
ANR	101970	Identifier	memset		101935	0					
ANR	101971	ArgumentList	query		101935	1					
ANR	101972	Argument	query		101935	0					
ANR	101973	Identifier	query		101935	0					
ANR	101974	Argument	0		101935	1					
ANR	101975	PrimaryExpression	0		101935	0					
ANR	101976	Argument	sizeof ( struct resolv_query )		101935	2					
ANR	101977	SizeofExpression	sizeof ( struct resolv_query )		101935	0					
ANR	101978	Sizeof	sizeof		101935	0					
ANR	101979	SizeofOperand	struct resolv_query		101935	1					
ANR	101980	ExpressionStatement	query -> port = port	211:4:5639:5667	101935	3	True				
ANR	101981	AssignmentExpression	query -> port = port		101935	0		=			
ANR	101982	PtrMemberAccess	query -> port		101935	0					
ANR	101983	Identifier	query		101935	0					
ANR	101984	Identifier	port		101935	1					
ANR	101985	Identifier	port		101935	1					
ANR	101986	ExpressionStatement	query -> client_cb = client_cb	212:4:5673:5706	101935	4	True				
ANR	101987	AssignmentExpression	query -> client_cb = client_cb		101935	0		=			
ANR	101988	PtrMemberAccess	query -> client_cb		101935	0					
ANR	101989	Identifier	query		101935	0					
ANR	101990	Identifier	client_cb		101935	1					
ANR	101991	Identifier	client_cb		101935	1					
ANR	101992	ExpressionStatement	query -> response_count = 0	213:4:5712:5737	101935	5	True				
ANR	101993	AssignmentExpression	query -> response_count = 0		101935	0		=			
ANR	101994	PtrMemberAccess	query -> response_count		101935	0					
ANR	101995	Identifier	query		101935	0					
ANR	101996	Identifier	response_count		101935	1					
ANR	101997	PrimaryExpression	0		101935	1					
ANR	101998	ExpressionStatement	query -> responses = NULL	214:4:5743:5771	101935	6	True				
ANR	101999	AssignmentExpression	query -> responses = NULL		101935	0		=			
ANR	102000	PtrMemberAccess	query -> responses		101935	0					
ANR	102001	Identifier	query		101935	0					
ANR	102002	Identifier	responses		101935	1					
ANR	102003	Identifier	NULL		101935	1					
ANR	102004	ExpressionStatement	query -> data = data	215:4:5777:5805	101935	7	True				
ANR	102005	AssignmentExpression	query -> data = data		101935	0		=			
ANR	102006	PtrMemberAccess	query -> data		101935	0					
ANR	102007	Identifier	query		101935	0					
ANR	102008	Identifier	data		101935	1					
ANR	102009	Identifier	data		101935	1					
ANR	102010	ExpressionStatement	query -> free_cb = free_cb	216:4:5811:5842	101935	8	True				
ANR	102011	AssignmentExpression	query -> free_cb = free_cb		101935	0		=			
ANR	102012	PtrMemberAccess	query -> free_cb		101935	0					
ANR	102013	Identifier	query		101935	0					
ANR	102014	Identifier	free_cb		101935	1					
ANR	102015	Identifier	free_cb		101935	1					
ANR	102016	ExpressionStatement	query -> requests [ 0 ] = AF_INET	218:4:5849:5879	101935	9	True				
ANR	102017	AssignmentExpression	query -> requests [ 0 ] = AF_INET		101935	0		=			
ANR	102018	ArrayIndexing	query -> requests [ 0 ]		101935	0					
ANR	102019	PtrMemberAccess	query -> requests		101935	0					
ANR	102020	Identifier	query		101935	0					
ANR	102021	Identifier	requests		101935	1					
ANR	102022	PrimaryExpression	0		101935	1					
ANR	102023	Identifier	AF_INET		101935	1					
ANR	102024	ExpressionStatement	query -> requests [ 1 ] = AF_INET6	219:4:5885:5916	101935	10	True				
ANR	102025	AssignmentExpression	query -> requests [ 1 ] = AF_INET6		101935	0		=			
ANR	102026	ArrayIndexing	query -> requests [ 1 ]		101935	0					
ANR	102027	PtrMemberAccess	query -> requests		101935	0					
ANR	102028	Identifier	query		101935	0					
ANR	102029	Identifier	requests		101935	1					
ANR	102030	PrimaryExpression	1		101935	1					
ANR	102031	Identifier	AF_INET6		101935	1					
ANR	102032	ExpressionStatement	"ares_gethostbyname ( default_ctx . channel , hostname , AF_INET , dns_query_v4_cb , query )"	221:4:5923:6006	101935	11	True				
ANR	102033	CallExpression	"ares_gethostbyname ( default_ctx . channel , hostname , AF_INET , dns_query_v4_cb , query )"		101935	0					
ANR	102034	Callee	ares_gethostbyname		101935	0					
ANR	102035	Identifier	ares_gethostbyname		101935	0					
ANR	102036	ArgumentList	default_ctx . channel		101935	1					
ANR	102037	Argument	default_ctx . channel		101935	0					
ANR	102038	MemberAccess	default_ctx . channel		101935	0					
ANR	102039	Identifier	default_ctx		101935	0					
ANR	102040	Identifier	channel		101935	1					
ANR	102041	Argument	hostname		101935	1					
ANR	102042	Identifier	hostname		101935	0					
ANR	102043	Argument	AF_INET		101935	2					
ANR	102044	Identifier	AF_INET		101935	0					
ANR	102045	Argument	dns_query_v4_cb		101935	3					
ANR	102046	Identifier	dns_query_v4_cb		101935	0					
ANR	102047	Argument	query		101935	4					
ANR	102048	Identifier	query		101935	0					
ANR	102049	ExpressionStatement	"ares_gethostbyname ( default_ctx . channel , hostname , AF_INET6 , dns_query_v6_cb , query )"	222:4:6012:6095	101935	12	True				
ANR	102050	CallExpression	"ares_gethostbyname ( default_ctx . channel , hostname , AF_INET6 , dns_query_v6_cb , query )"		101935	0					
ANR	102051	Callee	ares_gethostbyname		101935	0					
ANR	102052	Identifier	ares_gethostbyname		101935	0					
ANR	102053	ArgumentList	default_ctx . channel		101935	1					
ANR	102054	Argument	default_ctx . channel		101935	0					
ANR	102055	MemberAccess	default_ctx . channel		101935	0					
ANR	102056	Identifier	default_ctx		101935	0					
ANR	102057	Identifier	channel		101935	1					
ANR	102058	Argument	hostname		101935	1					
ANR	102059	Identifier	hostname		101935	0					
ANR	102060	Argument	AF_INET6		101935	2					
ANR	102061	Identifier	AF_INET6		101935	0					
ANR	102062	Argument	dns_query_v6_cb		101935	3					
ANR	102063	Identifier	dns_query_v6_cb		101935	0					
ANR	102064	Argument	query		101935	4					
ANR	102065	Identifier	query		101935	0					
ANR	102066	ExpressionStatement	reset_timer ( )	224:4:6102:6115	101935	13	True				
ANR	102067	CallExpression	reset_timer ( )		101935	0					
ANR	102068	Callee	reset_timer		101935	0					
ANR	102069	Identifier	reset_timer		101935	0					
ANR	102070	ArgumentList			101935	1					
ANR	102071	ReturnStatement	return query ;	226:4:6122:6134	101935	14	True				
ANR	102072	Identifier	query		101935	0					
ANR	102073	ReturnType	struct resolv_query *		101935	1					
ANR	102074	Identifier	resolv_start		101935	2					
ANR	102075	ParameterList	"const char * hostname , uint16_t port , void ( * client_cb ) ( struct sockaddr * , void * ) , void ( * free_cb ) ( void * ) , void * data"		101935	3					
ANR	102076	Parameter	const char * hostname	194:13:5189:5208	101935	0	True				
ANR	102077	ParameterType	const char *		101935	0					
ANR	102078	Identifier	hostname		101935	1					
ANR	102079	Parameter	uint16_t port	194:35:5211:5223	101935	1	True				
ANR	102080	ParameterType	uint16_t		101935	0					
ANR	102081	Identifier	port		101935	1					
ANR	102082	Parameter	"void ( * client_cb ) ( struct sockaddr * , void * )"	195:8:5234:5277	101935	2	True				
ANR	102083	ParameterType	"(( struct sockaddr * , void * ) void) *"		101935	0					
ANR	102084	Identifier	client_cb		101935	1					
ANR	102085	Parameter	void ( * free_cb ) ( void * )	196:8:5288:5309	101935	3	True				
ANR	102086	ParameterType	(( void * ) void) *		101935	0					
ANR	102087	Identifier	free_cb		101935	1					
ANR	102088	Parameter	void * data	196:32:5312:5321	101935	4	True				
ANR	102089	ParameterType	void *		101935	0					
ANR	102090	Identifier	data		101935	1					
ANR	102091	CFGEntryNode	ENTRY		101935		True				
ANR	102092	CFGExitNode	EXIT		101935		True				
ANR	102093	Symbol	* query -> requests		101935						
ANR	102094	Symbol	NULL		101935						
ANR	102095	Symbol	data		101935						
ANR	102096	Symbol	query		101935						
ANR	102097	Symbol	default_ctx . channel		101935						
ANR	102098	Symbol	dns_query_v4_cb		101935						
ANR	102099	Symbol	dns_query_v6_cb		101935						
ANR	102100	Symbol	query -> data		101935						
ANR	102101	Symbol	AF_INET		101935						
ANR	102102	Symbol	query -> requests		101935						
ANR	102103	Symbol	query -> responses		101935						
ANR	102104	Symbol	query -> free_cb		101935						
ANR	102105	Symbol	AF_INET6		101935						
ANR	102106	Symbol	free_cb		101935						
ANR	102107	Symbol	default_ctx		101935						
ANR	102108	Symbol	hostname		101935						
ANR	102109	Symbol	client_cb		101935						
ANR	102110	Symbol	* * query		101935						
ANR	102111	Symbol	port		101935						
ANR	102112	Symbol	query -> port		101935						
ANR	102113	Symbol	query -> client_cb		101935						
ANR	102114	Symbol	query -> response_count		101935						
ANR	102115	Symbol	ss_malloc		101935						
ANR	102116	Symbol	* query		101935						
ANR	102117	Function	dns_query_v4_cb	232:0:6198:8035							
ANR	102118	FunctionDef	"dns_query_v4_cb (void * arg , int status , int timeouts , struct hostent * he)"		102117	0					
ANR	102119	CompoundStatement		234:0:6283:8035	102117	0					
ANR	102120	IdentifierDeclStatement	"int i , n ;"	235:4:6289:6297	102117	0	True				
ANR	102121	IdentifierDecl	i		102117	0					
ANR	102122	IdentifierDeclType	int		102117	0					
ANR	102123	Identifier	i		102117	1					
ANR	102124	IdentifierDecl	n		102117	1					
ANR	102125	IdentifierDeclType	int		102117	0					
ANR	102126	Identifier	n		102117	1					
ANR	102127	IdentifierDeclStatement	struct resolv_query * query = ( struct resolv_query * ) arg ;	236:4:6303:6358	102117	1	True				
ANR	102128	IdentifierDecl	* query = ( struct resolv_query * ) arg		102117	0					
ANR	102129	IdentifierDeclType	struct resolv_query *		102117	0					
ANR	102130	Identifier	query		102117	1					
ANR	102131	AssignmentExpression	* query = ( struct resolv_query * ) arg		102117	2		=			
ANR	102132	Identifier	query		102117	0					
ANR	102133	CastExpression	( struct resolv_query * ) arg		102117	1					
ANR	102134	CastTarget	struct resolv_query *		102117	0					
ANR	102135	Identifier	arg		102117	1					
ANR	102136	IfStatement	if ( status == ARES_EDESTRUCTION )		102117	2					
ANR	102137	Condition	status == ARES_EDESTRUCTION	238:8:6369:6395	102117	0	True				
ANR	102138	EqualityExpression	status == ARES_EDESTRUCTION		102117	0		==			
ANR	102139	Identifier	status		102117	0					
ANR	102140	Identifier	ARES_EDESTRUCTION		102117	1					
ANR	102141	CompoundStatement		5:37:114:114	102117	1					
ANR	102142	ReturnStatement	return ;	239:8:6408:6414	102117	0	True				
ANR	102143	IfStatement	if ( ! he || status != ARES_SUCCESS )		102117	3					
ANR	102144	Condition	! he || status != ARES_SUCCESS	242:7:6430:6458	102117	0	True				
ANR	102145	OrExpression	! he || status != ARES_SUCCESS		102117	0		||			
ANR	102146	UnaryOperationExpression	! he		102117	0					
ANR	102147	UnaryOperator	!		102117	0					
ANR	102148	Identifier	he		102117	1					
ANR	102149	EqualityExpression	status != ARES_SUCCESS		102117	1		!=			
ANR	102150	Identifier	status		102117	0					
ANR	102151	Identifier	ARES_SUCCESS		102117	1					
ANR	102152	CompoundStatement		9:37:176:176	102117	1					
ANR	102153	IfStatement	if ( verbose )		102117	0					
ANR	102154	Condition	verbose	243:12:6474:6480	102117	0	True				
ANR	102155	Identifier	verbose		102117	0					
ANR	102156	CompoundStatement		10:21:199:199	102117	1					
ANR	102157	ExpressionStatement	"LOGI ( ""failed to lookup v4 address %s"" , ares_strerror ( status ) )"	244:12:6497:6558	102117	0	True				
ANR	102158	CallExpression	"LOGI ( ""failed to lookup v4 address %s"" , ares_strerror ( status ) )"		102117	0					
ANR	102159	Callee	LOGI		102117	0					
ANR	102160	Identifier	LOGI		102117	0					
ANR	102161	ArgumentList	"""failed to lookup v4 address %s"""		102117	1					
ANR	102162	Argument	"""failed to lookup v4 address %s"""		102117	0					
ANR	102163	PrimaryExpression	"""failed to lookup v4 address %s"""		102117	0					
ANR	102164	Argument	ares_strerror ( status )		102117	1					
ANR	102165	CallExpression	ares_strerror ( status )		102117	0					
ANR	102166	Callee	ares_strerror		102117	0					
ANR	102167	Identifier	ares_strerror		102117	0					
ANR	102168	ArgumentList	status		102117	1					
ANR	102169	Argument	status		102117	0					
ANR	102170	Identifier	status		102117	0					
ANR	102171	GotoStatement	goto CLEANUP ;	246:8:6578:6590	102117	1	True				
ANR	102172	Identifier	CLEANUP		102117	0					
ANR	102173	IfStatement	if ( verbose )		102117	4					
ANR	102174	Condition	verbose	249:8:6607:6613	102117	0	True				
ANR	102175	Identifier	verbose		102117	0					
ANR	102176	CompoundStatement		16:17:332:332	102117	1					
ANR	102177	ExpressionStatement	"LOGI ( ""found address name v4 address %s"" , he -> h_name )"	250:8:6626:6678	102117	0	True				
ANR	102178	CallExpression	"LOGI ( ""found address name v4 address %s"" , he -> h_name )"		102117	0					
ANR	102179	Callee	LOGI		102117	0					
ANR	102180	Identifier	LOGI		102117	0					
ANR	102181	ArgumentList	"""found address name v4 address %s"""		102117	1					
ANR	102182	Argument	"""found address name v4 address %s"""		102117	0					
ANR	102183	PrimaryExpression	"""found address name v4 address %s"""		102117	0					
ANR	102184	Argument	he -> h_name		102117	1					
ANR	102185	PtrMemberAccess	he -> h_name		102117	0					
ANR	102186	Identifier	he		102117	0					
ANR	102187	Identifier	h_name		102117	1					
ANR	102188	ExpressionStatement	n = 0	253:4:6691:6696	102117	5	True				
ANR	102189	AssignmentExpression	n = 0		102117	0		=			
ANR	102190	Identifier	n		102117	0					
ANR	102191	PrimaryExpression	0		102117	1					
ANR	102192	WhileStatement	while ( he -> h_addr_list [ n ] )		102117	6					
ANR	102193	Condition	he -> h_addr_list [ n ]	254:11:6709:6726	102117	0	True				
ANR	102194	ArrayIndexing	he -> h_addr_list [ n ]		102117	0					
ANR	102195	PtrMemberAccess	he -> h_addr_list		102117	0					
ANR	102196	Identifier	he		102117	0					
ANR	102197	Identifier	h_addr_list		102117	1					
ANR	102198	Identifier	n		102117	1					
ANR	102199	CompoundStatement		21:31:445:445	102117	1					
ANR	102200	ExpressionStatement	n ++	255:8:6739:6742	102117	0	True				
ANR	102201	PostIncDecOperationExpression	n ++		102117	0					
ANR	102202	Identifier	n		102117	0					
ANR	102203	IncDec	++		102117	1					
ANR	102204	IfStatement	if ( n > 0 )		102117	7					
ANR	102205	Condition	n > 0	258:8:6759:6763	102117	0	True				
ANR	102206	RelationalExpression	n > 0		102117	0		>			
ANR	102207	Identifier	n		102117	0					
ANR	102208	PrimaryExpression	0		102117	1					
ANR	102209	CompoundStatement		26:8:492:643	102117	1					
ANR	102210	IdentifierDeclStatement	"struct sockaddr * * new_responses = ss_realloc ( query -> responses , ( query -> response_count + n ) * sizeof ( struct sockaddr * ) ) ;"	259:8:6776:6927	102117	0	True				
ANR	102211	IdentifierDecl	"* * new_responses = ss_realloc ( query -> responses , ( query -> response_count + n ) * sizeof ( struct sockaddr * ) )"		102117	0					
ANR	102212	IdentifierDeclType	struct sockaddr * *		102117	0					
ANR	102213	Identifier	new_responses		102117	1					
ANR	102214	AssignmentExpression	"* * new_responses = ss_realloc ( query -> responses , ( query -> response_count + n ) * sizeof ( struct sockaddr * ) )"		102117	2		=			
ANR	102215	Identifier	new_responses		102117	0					
ANR	102216	CallExpression	"ss_realloc ( query -> responses , ( query -> response_count + n ) * sizeof ( struct sockaddr * ) )"		102117	1					
ANR	102217	Callee	ss_realloc		102117	0					
ANR	102218	Identifier	ss_realloc		102117	0					
ANR	102219	ArgumentList	query -> responses		102117	1					
ANR	102220	Argument	query -> responses		102117	0					
ANR	102221	PtrMemberAccess	query -> responses		102117	0					
ANR	102222	Identifier	query		102117	0					
ANR	102223	Identifier	responses		102117	1					
ANR	102224	Argument	( query -> response_count + n ) * sizeof ( struct sockaddr * )		102117	1					
ANR	102225	MultiplicativeExpression	( query -> response_count + n ) * sizeof ( struct sockaddr * )		102117	0		*			
ANR	102226	AdditiveExpression	query -> response_count + n		102117	0		+			
ANR	102227	PtrMemberAccess	query -> response_count		102117	0					
ANR	102228	Identifier	query		102117	0					
ANR	102229	Identifier	response_count		102117	1					
ANR	102230	Identifier	n		102117	1					
ANR	102231	SizeofExpression	sizeof ( struct sockaddr * )		102117	1					
ANR	102232	Sizeof	sizeof		102117	0					
ANR	102233	SizeofOperand	struct sockaddr *		102117	1					
ANR	102234	IfStatement	if ( new_responses == NULL )		102117	1					
ANR	102235	Condition	new_responses == NULL	263:12:6942:6962	102117	0	True				
ANR	102236	EqualityExpression	new_responses == NULL		102117	0		==			
ANR	102237	Identifier	new_responses		102117	0					
ANR	102238	Identifier	NULL		102117	1					
ANR	102239	CompoundStatement		30:35:681:681	102117	1					
ANR	102240	ExpressionStatement	"LOGE ( ""failed to allocate memory for additional DNS responses"" )"	264:12:6979:7041	102117	0	True				
ANR	102241	CallExpression	"LOGE ( ""failed to allocate memory for additional DNS responses"" )"		102117	0					
ANR	102242	Callee	LOGE		102117	0					
ANR	102243	Identifier	LOGE		102117	0					
ANR	102244	ArgumentList	"""failed to allocate memory for additional DNS responses"""		102117	1					
ANR	102245	Argument	"""failed to allocate memory for additional DNS responses"""		102117	0					
ANR	102246	PrimaryExpression	"""failed to allocate memory for additional DNS responses"""		102117	0					
ANR	102247	ElseStatement	else		102117	0					
ANR	102248	CompoundStatement		32:15:774:774	102117	0					
ANR	102249	ExpressionStatement	query -> responses = new_responses	266:12:7072:7104	102117	0	True				
ANR	102250	AssignmentExpression	query -> responses = new_responses		102117	0		=			
ANR	102251	PtrMemberAccess	query -> responses		102117	0					
ANR	102252	Identifier	query		102117	0					
ANR	102253	Identifier	responses		102117	1					
ANR	102254	Identifier	new_responses		102117	1					
ANR	102255	ForStatement	for ( i = 0 ; i < n ; i ++ )		102117	1					
ANR	102256	ForInit	i = 0 ;	268:17:7124:7129	102117	0	True				
ANR	102257	AssignmentExpression	i = 0		102117	0		=			
ANR	102258	Identifier	i		102117	0					
ANR	102259	PrimaryExpression	0		102117	1					
ANR	102260	Condition	i < n	268:24:7131:7135	102117	1	True				
ANR	102261	RelationalExpression	i < n		102117	0		<			
ANR	102262	Identifier	i		102117	0					
ANR	102263	Identifier	n		102117	1					
ANR	102264	PostIncDecOperationExpression	i ++	268:31:7138:7140	102117	2	True				
ANR	102265	Identifier	i		102117	0					
ANR	102266	IncDec	++		102117	1					
ANR	102267	CompoundStatement		36:16:877:939	102117	3					
ANR	102268	IdentifierDeclStatement	struct sockaddr_in * sa = ss_malloc ( sizeof ( struct sockaddr_in ) ) ;	269:16:7161:7223	102117	0	True				
ANR	102269	IdentifierDecl	* sa = ss_malloc ( sizeof ( struct sockaddr_in ) )		102117	0					
ANR	102270	IdentifierDeclType	struct sockaddr_in *		102117	0					
ANR	102271	Identifier	sa		102117	1					
ANR	102272	AssignmentExpression	* sa = ss_malloc ( sizeof ( struct sockaddr_in ) )		102117	2		=			
ANR	102273	Identifier	sa		102117	0					
ANR	102274	CallExpression	ss_malloc ( sizeof ( struct sockaddr_in ) )		102117	1					
ANR	102275	Callee	ss_malloc		102117	0					
ANR	102276	Identifier	ss_malloc		102117	0					
ANR	102277	ArgumentList	sizeof ( struct sockaddr_in )		102117	1					
ANR	102278	Argument	sizeof ( struct sockaddr_in )		102117	0					
ANR	102279	SizeofExpression	sizeof ( struct sockaddr_in )		102117	0					
ANR	102280	Sizeof	sizeof		102117	0					
ANR	102281	SizeofOperand	struct sockaddr_in		102117	1					
ANR	102282	ExpressionStatement	"memset ( sa , 0 , sizeof ( struct sockaddr_in ) )"	270:16:7241:7282	102117	1	True				
ANR	102283	CallExpression	"memset ( sa , 0 , sizeof ( struct sockaddr_in ) )"		102117	0					
ANR	102284	Callee	memset		102117	0					
ANR	102285	Identifier	memset		102117	0					
ANR	102286	ArgumentList	sa		102117	1					
ANR	102287	Argument	sa		102117	0					
ANR	102288	Identifier	sa		102117	0					
ANR	102289	Argument	0		102117	1					
ANR	102290	PrimaryExpression	0		102117	0					
ANR	102291	Argument	sizeof ( struct sockaddr_in )		102117	2					
ANR	102292	SizeofExpression	sizeof ( struct sockaddr_in )		102117	0					
ANR	102293	Sizeof	sizeof		102117	0					
ANR	102294	SizeofOperand	struct sockaddr_in		102117	1					
ANR	102295	ExpressionStatement	sa -> sin_family = AF_INET	271:16:7300:7324	102117	2	True				
ANR	102296	AssignmentExpression	sa -> sin_family = AF_INET		102117	0		=			
ANR	102297	PtrMemberAccess	sa -> sin_family		102117	0					
ANR	102298	Identifier	sa		102117	0					
ANR	102299	Identifier	sin_family		102117	1					
ANR	102300	Identifier	AF_INET		102117	1					
ANR	102301	ExpressionStatement	sa -> sin_port = query -> port	272:16:7342:7370	102117	3	True				
ANR	102302	AssignmentExpression	sa -> sin_port = query -> port		102117	0		=			
ANR	102303	PtrMemberAccess	sa -> sin_port		102117	0					
ANR	102304	Identifier	sa		102117	0					
ANR	102305	Identifier	sin_port		102117	1					
ANR	102306	PtrMemberAccess	query -> port		102117	1					
ANR	102307	Identifier	query		102117	0					
ANR	102308	Identifier	port		102117	1					
ANR	102309	ExpressionStatement	"memcpy ( & sa -> sin_addr , he -> h_addr_list [ i ] , he -> h_length )"	273:16:7388:7443	102117	4	True				
ANR	102310	CallExpression	"memcpy ( & sa -> sin_addr , he -> h_addr_list [ i ] , he -> h_length )"		102117	0					
ANR	102311	Callee	memcpy		102117	0					
ANR	102312	Identifier	memcpy		102117	0					
ANR	102313	ArgumentList	& sa -> sin_addr		102117	1					
ANR	102314	Argument	& sa -> sin_addr		102117	0					
ANR	102315	UnaryOperationExpression	& sa -> sin_addr		102117	0					
ANR	102316	UnaryOperator	&		102117	0					
ANR	102317	PtrMemberAccess	sa -> sin_addr		102117	1					
ANR	102318	Identifier	sa		102117	0					
ANR	102319	Identifier	sin_addr		102117	1					
ANR	102320	Argument	he -> h_addr_list [ i ]		102117	1					
ANR	102321	ArrayIndexing	he -> h_addr_list [ i ]		102117	0					
ANR	102322	PtrMemberAccess	he -> h_addr_list		102117	0					
ANR	102323	Identifier	he		102117	0					
ANR	102324	Identifier	h_addr_list		102117	1					
ANR	102325	Identifier	i		102117	1					
ANR	102326	Argument	he -> h_length		102117	2					
ANR	102327	PtrMemberAccess	he -> h_length		102117	0					
ANR	102328	Identifier	he		102117	0					
ANR	102329	Identifier	h_length		102117	1					
ANR	102330	ExpressionStatement	query -> responses [ query -> response_count ] = ( struct sockaddr * ) sa	275:16:7462:7524	102117	5	True				
ANR	102331	AssignmentExpression	query -> responses [ query -> response_count ] = ( struct sockaddr * ) sa		102117	0		=			
ANR	102332	ArrayIndexing	query -> responses [ query -> response_count ]		102117	0					
ANR	102333	PtrMemberAccess	query -> responses		102117	0					
ANR	102334	Identifier	query		102117	0					
ANR	102335	Identifier	responses		102117	1					
ANR	102336	PtrMemberAccess	query -> response_count		102117	1					
ANR	102337	Identifier	query		102117	0					
ANR	102338	Identifier	response_count		102117	1					
ANR	102339	CastExpression	( struct sockaddr * ) sa		102117	1					
ANR	102340	CastTarget	struct sockaddr *		102117	0					
ANR	102341	Identifier	sa		102117	1					
ANR	102342	IfStatement	if ( query -> responses [ query -> response_count ] == NULL )		102117	6					
ANR	102343	Condition	query -> responses [ query -> response_count ] == NULL	276:20:7546:7592	102117	0	True				
ANR	102344	EqualityExpression	query -> responses [ query -> response_count ] == NULL		102117	0		==			
ANR	102345	ArrayIndexing	query -> responses [ query -> response_count ]		102117	0					
ANR	102346	PtrMemberAccess	query -> responses		102117	0					
ANR	102347	Identifier	query		102117	0					
ANR	102348	Identifier	responses		102117	1					
ANR	102349	PtrMemberAccess	query -> response_count		102117	1					
ANR	102350	Identifier	query		102117	0					
ANR	102351	Identifier	response_count		102117	1					
ANR	102352	Identifier	NULL		102117	1					
ANR	102353	CompoundStatement		43:69:1311:1311	102117	1					
ANR	102354	ExpressionStatement	"LOGE ( ""failed to allocate memory for DNS query result address"" )"	277:20:7617:7679	102117	0	True				
ANR	102355	CallExpression	"LOGE ( ""failed to allocate memory for DNS query result address"" )"		102117	0					
ANR	102356	Callee	LOGE		102117	0					
ANR	102357	Identifier	LOGE		102117	0					
ANR	102358	ArgumentList	"""failed to allocate memory for DNS query result address"""		102117	1					
ANR	102359	Argument	"""failed to allocate memory for DNS query result address"""		102117	0					
ANR	102360	PrimaryExpression	"""failed to allocate memory for DNS query result address"""		102117	0					
ANR	102361	ElseStatement	else		102117	0					
ANR	102362	CompoundStatement		45:23:1420:1420	102117	0					
ANR	102363	ExpressionStatement	query -> response_count ++	279:20:7726:7749	102117	0	True				
ANR	102364	PostIncDecOperationExpression	query -> response_count ++		102117	0					
ANR	102365	PtrMemberAccess	query -> response_count		102117	0					
ANR	102366	Identifier	query		102117	0					
ANR	102367	Identifier	response_count		102117	1					
ANR	102368	IncDec	++		102117	1					
ANR	102369	Label	CLEANUP :	285:0:7800:7807	102117	8	True				
ANR	102370	Identifier	CLEANUP		102117	0					
ANR	102371	ExpressionStatement	query -> requests [ 0 ] = 0	287:4:7814:7836	102117	9	True				
ANR	102372	AssignmentExpression	query -> requests [ 0 ] = 0		102117	0		=			
ANR	102373	ArrayIndexing	query -> requests [ 0 ]		102117	0					
ANR	102374	PtrMemberAccess	query -> requests		102117	0					
ANR	102375	Identifier	query		102117	0					
ANR	102376	Identifier	requests		102117	1					
ANR	102377	PrimaryExpression	0		102117	1					
ANR	102378	PrimaryExpression	0		102117	1					
ANR	102379	IfStatement	if ( all_requests_are_null ( query ) )		102117	10					
ANR	102380	Condition	all_requests_are_null ( query )	290:8:7950:7977	102117	0	True				
ANR	102381	CallExpression	all_requests_are_null ( query )		102117	0					
ANR	102382	Callee	all_requests_are_null		102117	0					
ANR	102383	Identifier	all_requests_are_null		102117	0					
ANR	102384	ArgumentList	query		102117	1					
ANR	102385	Argument	query		102117	0					
ANR	102386	Identifier	query		102117	0					
ANR	102387	CompoundStatement		57:38:1696:1696	102117	1					
ANR	102388	ReturnStatement	return process_client_callback ( query ) ;	291:8:7990:8027	102117	0	True				
ANR	102389	CallExpression	process_client_callback ( query )		102117	0					
ANR	102390	Callee	process_client_callback		102117	0					
ANR	102391	Identifier	process_client_callback		102117	0					
ANR	102392	ArgumentList	query		102117	1					
ANR	102393	Argument	query		102117	0					
ANR	102394	Identifier	query		102117	0					
ANR	102395	ReturnType	static void		102117	1					
ANR	102396	Identifier	dns_query_v4_cb		102117	2					
ANR	102397	ParameterList	"void * arg , int status , int timeouts , struct hostent * he"		102117	3					
ANR	102398	Parameter	void * arg	233:16:6226:6234	102117	0	True				
ANR	102399	ParameterType	void *		102117	0					
ANR	102400	Identifier	arg		102117	1					
ANR	102401	Parameter	int status	233:27:6237:6246	102117	1	True				
ANR	102402	ParameterType	int		102117	0					
ANR	102403	Identifier	status		102117	1					
ANR	102404	Parameter	int timeouts	233:39:6249:6260	102117	2	True				
ANR	102405	ParameterType	int		102117	0					
ANR	102406	Identifier	timeouts		102117	1					
ANR	102407	Parameter	struct hostent * he	233:53:6263:6280	102117	3	True				
ANR	102408	ParameterType	struct hostent *		102117	0					
ANR	102409	Identifier	he		102117	1					
ANR	102410	CFGEntryNode	ENTRY		102117		True				
ANR	102411	CFGExitNode	EXIT		102117		True				
ANR	102412	Symbol	all_requests_are_null		102117						
ANR	102413	Symbol	sa -> sin_port		102117						
ANR	102414	Symbol	timeouts		102117						
ANR	102415	Symbol	sa -> sin_family		102117						
ANR	102416	Symbol	he -> h_length		102117						
ANR	102417	Symbol	query -> requests		102117						
ANR	102418	Symbol	query -> responses		102117						
ANR	102419	Symbol	sa		102117						
ANR	102420	Symbol	arg		102117						
ANR	102421	Symbol	query -> response_count		102117						
ANR	102422	Symbol	* sa		102117						
ANR	102423	Symbol	query -> port		102117						
ANR	102424	Symbol	* query		102117						
ANR	102425	Symbol	* he		102117						
ANR	102426	Symbol	& sa -> sin_addr		102117						
ANR	102427	Symbol	* query -> requests		102117						
ANR	102428	Symbol	NULL		102117						
ANR	102429	Symbol	query		102117						
ANR	102430	Symbol	i		102117						
ANR	102431	Symbol	ARES_EDESTRUCTION		102117						
ANR	102432	Symbol	ARES_SUCCESS		102117						
ANR	102433	Symbol	* * he		102117						
ANR	102434	Symbol	AF_INET		102117						
ANR	102435	Symbol	* query -> response_count		102117						
ANR	102436	Symbol	new_responses		102117						
ANR	102437	Symbol	n		102117						
ANR	102438	Symbol	verbose		102117						
ANR	102439	Symbol	process_client_callback		102117						
ANR	102440	Symbol	ares_strerror		102117						
ANR	102441	Symbol	he -> h_addr_list		102117						
ANR	102442	Symbol	* i		102117						
ANR	102443	Symbol	* * query		102117						
ANR	102444	Symbol	ss_realloc		102117						
ANR	102445	Symbol	* n		102117						
ANR	102446	Symbol	* he -> h_addr_list		102117						
ANR	102447	Symbol	ss_malloc		102117						
ANR	102448	Symbol	he		102117						
ANR	102449	Symbol	status		102117						
ANR	102450	Symbol	he -> h_name		102117						
ANR	102451	Symbol	* query -> responses		102117						
ANR	102452	Function	dns_query_v6_cb	295:0:8038:9882							
ANR	102453	FunctionDef	"dns_query_v6_cb (void * arg , int status , int timeouts , struct hostent * he)"		102452	0					
ANR	102454	CompoundStatement		297:0:8123:9882	102452	0					
ANR	102455	IdentifierDeclStatement	"int i , n ;"	298:4:8129:8137	102452	0	True				
ANR	102456	IdentifierDecl	i		102452	0					
ANR	102457	IdentifierDeclType	int		102452	0					
ANR	102458	Identifier	i		102452	1					
ANR	102459	IdentifierDecl	n		102452	1					
ANR	102460	IdentifierDeclType	int		102452	0					
ANR	102461	Identifier	n		102452	1					
ANR	102462	IdentifierDeclStatement	struct resolv_query * query = ( struct resolv_query * ) arg ;	299:4:8143:8198	102452	1	True				
ANR	102463	IdentifierDecl	* query = ( struct resolv_query * ) arg		102452	0					
ANR	102464	IdentifierDeclType	struct resolv_query *		102452	0					
ANR	102465	Identifier	query		102452	1					
ANR	102466	AssignmentExpression	* query = ( struct resolv_query * ) arg		102452	2		=			
ANR	102467	Identifier	query		102452	0					
ANR	102468	CastExpression	( struct resolv_query * ) arg		102452	1					
ANR	102469	CastTarget	struct resolv_query *		102452	0					
ANR	102470	Identifier	arg		102452	1					
ANR	102471	IfStatement	if ( status == ARES_EDESTRUCTION )		102452	2					
ANR	102472	Condition	status == ARES_EDESTRUCTION	301:8:8209:8235	102452	0	True				
ANR	102473	EqualityExpression	status == ARES_EDESTRUCTION		102452	0		==			
ANR	102474	Identifier	status		102452	0					
ANR	102475	Identifier	ARES_EDESTRUCTION		102452	1					
ANR	102476	CompoundStatement		5:37:114:114	102452	1					
ANR	102477	ReturnStatement	return ;	302:8:8248:8254	102452	0	True				
ANR	102478	IfStatement	if ( ! he || status != ARES_SUCCESS )		102452	3					
ANR	102479	Condition	! he || status != ARES_SUCCESS	305:7:8270:8298	102452	0	True				
ANR	102480	OrExpression	! he || status != ARES_SUCCESS		102452	0		||			
ANR	102481	UnaryOperationExpression	! he		102452	0					
ANR	102482	UnaryOperator	!		102452	0					
ANR	102483	Identifier	he		102452	1					
ANR	102484	EqualityExpression	status != ARES_SUCCESS		102452	1		!=			
ANR	102485	Identifier	status		102452	0					
ANR	102486	Identifier	ARES_SUCCESS		102452	1					
ANR	102487	CompoundStatement		9:37:176:176	102452	1					
ANR	102488	IfStatement	if ( verbose )		102452	0					
ANR	102489	Condition	verbose	306:12:8314:8320	102452	0	True				
ANR	102490	Identifier	verbose		102452	0					
ANR	102491	CompoundStatement		10:21:199:199	102452	1					
ANR	102492	ExpressionStatement	"LOGI ( ""failed to lookup v6 address %s"" , ares_strerror ( status ) )"	307:12:8337:8398	102452	0	True				
ANR	102493	CallExpression	"LOGI ( ""failed to lookup v6 address %s"" , ares_strerror ( status ) )"		102452	0					
ANR	102494	Callee	LOGI		102452	0					
ANR	102495	Identifier	LOGI		102452	0					
ANR	102496	ArgumentList	"""failed to lookup v6 address %s"""		102452	1					
ANR	102497	Argument	"""failed to lookup v6 address %s"""		102452	0					
ANR	102498	PrimaryExpression	"""failed to lookup v6 address %s"""		102452	0					
ANR	102499	Argument	ares_strerror ( status )		102452	1					
ANR	102500	CallExpression	ares_strerror ( status )		102452	0					
ANR	102501	Callee	ares_strerror		102452	0					
ANR	102502	Identifier	ares_strerror		102452	0					
ANR	102503	ArgumentList	status		102452	1					
ANR	102504	Argument	status		102452	0					
ANR	102505	Identifier	status		102452	0					
ANR	102506	GotoStatement	goto CLEANUP ;	309:8:8418:8430	102452	1	True				
ANR	102507	Identifier	CLEANUP		102452	0					
ANR	102508	IfStatement	if ( verbose )		102452	4					
ANR	102509	Condition	verbose	312:8:8447:8453	102452	0	True				
ANR	102510	Identifier	verbose		102452	0					
ANR	102511	CompoundStatement		16:17:332:332	102452	1					
ANR	102512	ExpressionStatement	"LOGI ( ""found address name v6 address %s"" , he -> h_name )"	313:8:8466:8518	102452	0	True				
ANR	102513	CallExpression	"LOGI ( ""found address name v6 address %s"" , he -> h_name )"		102452	0					
ANR	102514	Callee	LOGI		102452	0					
ANR	102515	Identifier	LOGI		102452	0					
ANR	102516	ArgumentList	"""found address name v6 address %s"""		102452	1					
ANR	102517	Argument	"""found address name v6 address %s"""		102452	0					
ANR	102518	PrimaryExpression	"""found address name v6 address %s"""		102452	0					
ANR	102519	Argument	he -> h_name		102452	1					
ANR	102520	PtrMemberAccess	he -> h_name		102452	0					
ANR	102521	Identifier	he		102452	0					
ANR	102522	Identifier	h_name		102452	1					
ANR	102523	ExpressionStatement	n = 0	316:4:8531:8536	102452	5	True				
ANR	102524	AssignmentExpression	n = 0		102452	0		=			
ANR	102525	Identifier	n		102452	0					
ANR	102526	PrimaryExpression	0		102452	1					
ANR	102527	WhileStatement	while ( he -> h_addr_list [ n ] )		102452	6					
ANR	102528	Condition	he -> h_addr_list [ n ]	317:11:8549:8566	102452	0	True				
ANR	102529	ArrayIndexing	he -> h_addr_list [ n ]		102452	0					
ANR	102530	PtrMemberAccess	he -> h_addr_list		102452	0					
ANR	102531	Identifier	he		102452	0					
ANR	102532	Identifier	h_addr_list		102452	1					
ANR	102533	Identifier	n		102452	1					
ANR	102534	CompoundStatement		21:31:445:445	102452	1					
ANR	102535	ExpressionStatement	n ++	318:8:8579:8582	102452	0	True				
ANR	102536	PostIncDecOperationExpression	n ++		102452	0					
ANR	102537	Identifier	n		102452	0					
ANR	102538	IncDec	++		102452	1					
ANR	102539	IfStatement	if ( n > 0 )		102452	7					
ANR	102540	Condition	n > 0	321:8:8599:8603	102452	0	True				
ANR	102541	RelationalExpression	n > 0		102452	0		>			
ANR	102542	Identifier	n		102452	0					
ANR	102543	PrimaryExpression	0		102452	1					
ANR	102544	CompoundStatement		26:8:492:643	102452	1					
ANR	102545	IdentifierDeclStatement	"struct sockaddr * * new_responses = ss_realloc ( query -> responses , ( query -> response_count + n ) * sizeof ( struct sockaddr * ) ) ;"	322:8:8616:8767	102452	0	True				
ANR	102546	IdentifierDecl	"* * new_responses = ss_realloc ( query -> responses , ( query -> response_count + n ) * sizeof ( struct sockaddr * ) )"		102452	0					
ANR	102547	IdentifierDeclType	struct sockaddr * *		102452	0					
ANR	102548	Identifier	new_responses		102452	1					
ANR	102549	AssignmentExpression	"* * new_responses = ss_realloc ( query -> responses , ( query -> response_count + n ) * sizeof ( struct sockaddr * ) )"		102452	2		=			
ANR	102550	Identifier	new_responses		102452	0					
ANR	102551	CallExpression	"ss_realloc ( query -> responses , ( query -> response_count + n ) * sizeof ( struct sockaddr * ) )"		102452	1					
ANR	102552	Callee	ss_realloc		102452	0					
ANR	102553	Identifier	ss_realloc		102452	0					
ANR	102554	ArgumentList	query -> responses		102452	1					
ANR	102555	Argument	query -> responses		102452	0					
ANR	102556	PtrMemberAccess	query -> responses		102452	0					
ANR	102557	Identifier	query		102452	0					
ANR	102558	Identifier	responses		102452	1					
ANR	102559	Argument	( query -> response_count + n ) * sizeof ( struct sockaddr * )		102452	1					
ANR	102560	MultiplicativeExpression	( query -> response_count + n ) * sizeof ( struct sockaddr * )		102452	0		*			
ANR	102561	AdditiveExpression	query -> response_count + n		102452	0		+			
ANR	102562	PtrMemberAccess	query -> response_count		102452	0					
ANR	102563	Identifier	query		102452	0					
ANR	102564	Identifier	response_count		102452	1					
ANR	102565	Identifier	n		102452	1					
ANR	102566	SizeofExpression	sizeof ( struct sockaddr * )		102452	1					
ANR	102567	Sizeof	sizeof		102452	0					
ANR	102568	SizeofOperand	struct sockaddr *		102452	1					
ANR	102569	IfStatement	if ( new_responses == NULL )		102452	1					
ANR	102570	Condition	new_responses == NULL	326:12:8782:8802	102452	0	True				
ANR	102571	EqualityExpression	new_responses == NULL		102452	0		==			
ANR	102572	Identifier	new_responses		102452	0					
ANR	102573	Identifier	NULL		102452	1					
ANR	102574	CompoundStatement		30:35:681:681	102452	1					
ANR	102575	ExpressionStatement	"LOGE ( ""failed to allocate memory for additional DNS responses"" )"	327:12:8819:8881	102452	0	True				
ANR	102576	CallExpression	"LOGE ( ""failed to allocate memory for additional DNS responses"" )"		102452	0					
ANR	102577	Callee	LOGE		102452	0					
ANR	102578	Identifier	LOGE		102452	0					
ANR	102579	ArgumentList	"""failed to allocate memory for additional DNS responses"""		102452	1					
ANR	102580	Argument	"""failed to allocate memory for additional DNS responses"""		102452	0					
ANR	102581	PrimaryExpression	"""failed to allocate memory for additional DNS responses"""		102452	0					
ANR	102582	ElseStatement	else		102452	0					
ANR	102583	CompoundStatement		32:15:774:774	102452	0					
ANR	102584	ExpressionStatement	query -> responses = new_responses	329:12:8912:8944	102452	0	True				
ANR	102585	AssignmentExpression	query -> responses = new_responses		102452	0		=			
ANR	102586	PtrMemberAccess	query -> responses		102452	0					
ANR	102587	Identifier	query		102452	0					
ANR	102588	Identifier	responses		102452	1					
ANR	102589	Identifier	new_responses		102452	1					
ANR	102590	ForStatement	for ( i = 0 ; i < n ; i ++ )		102452	1					
ANR	102591	ForInit	i = 0 ;	331:17:8964:8969	102452	0	True				
ANR	102592	AssignmentExpression	i = 0		102452	0		=			
ANR	102593	Identifier	i		102452	0					
ANR	102594	PrimaryExpression	0		102452	1					
ANR	102595	Condition	i < n	331:24:8971:8975	102452	1	True				
ANR	102596	RelationalExpression	i < n		102452	0		<			
ANR	102597	Identifier	i		102452	0					
ANR	102598	Identifier	n		102452	1					
ANR	102599	PostIncDecOperationExpression	i ++	331:31:8978:8980	102452	2	True				
ANR	102600	Identifier	i		102452	0					
ANR	102601	IncDec	++		102452	1					
ANR	102602	CompoundStatement		36:16:877:941	102452	3					
ANR	102603	IdentifierDeclStatement	struct sockaddr_in6 * sa = ss_malloc ( sizeof ( struct sockaddr_in6 ) ) ;	332:16:9001:9065	102452	0	True				
ANR	102604	IdentifierDecl	* sa = ss_malloc ( sizeof ( struct sockaddr_in6 ) )		102452	0					
ANR	102605	IdentifierDeclType	struct sockaddr_in6 *		102452	0					
ANR	102606	Identifier	sa		102452	1					
ANR	102607	AssignmentExpression	* sa = ss_malloc ( sizeof ( struct sockaddr_in6 ) )		102452	2		=			
ANR	102608	Identifier	sa		102452	0					
ANR	102609	CallExpression	ss_malloc ( sizeof ( struct sockaddr_in6 ) )		102452	1					
ANR	102610	Callee	ss_malloc		102452	0					
ANR	102611	Identifier	ss_malloc		102452	0					
ANR	102612	ArgumentList	sizeof ( struct sockaddr_in6 )		102452	1					
ANR	102613	Argument	sizeof ( struct sockaddr_in6 )		102452	0					
ANR	102614	SizeofExpression	sizeof ( struct sockaddr_in6 )		102452	0					
ANR	102615	Sizeof	sizeof		102452	0					
ANR	102616	SizeofOperand	struct sockaddr_in6		102452	1					
ANR	102617	ExpressionStatement	"memset ( sa , 0 , sizeof ( struct sockaddr_in6 ) )"	333:16:9083:9125	102452	1	True				
ANR	102618	CallExpression	"memset ( sa , 0 , sizeof ( struct sockaddr_in6 ) )"		102452	0					
ANR	102619	Callee	memset		102452	0					
ANR	102620	Identifier	memset		102452	0					
ANR	102621	ArgumentList	sa		102452	1					
ANR	102622	Argument	sa		102452	0					
ANR	102623	Identifier	sa		102452	0					
ANR	102624	Argument	0		102452	1					
ANR	102625	PrimaryExpression	0		102452	0					
ANR	102626	Argument	sizeof ( struct sockaddr_in6 )		102452	2					
ANR	102627	SizeofExpression	sizeof ( struct sockaddr_in6 )		102452	0					
ANR	102628	Sizeof	sizeof		102452	0					
ANR	102629	SizeofOperand	struct sockaddr_in6		102452	1					
ANR	102630	ExpressionStatement	sa -> sin6_family = AF_INET6	334:16:9143:9169	102452	2	True				
ANR	102631	AssignmentExpression	sa -> sin6_family = AF_INET6		102452	0		=			
ANR	102632	PtrMemberAccess	sa -> sin6_family		102452	0					
ANR	102633	Identifier	sa		102452	0					
ANR	102634	Identifier	sin6_family		102452	1					
ANR	102635	Identifier	AF_INET6		102452	1					
ANR	102636	ExpressionStatement	sa -> sin6_port = query -> port	335:16:9187:9216	102452	3	True				
ANR	102637	AssignmentExpression	sa -> sin6_port = query -> port		102452	0		=			
ANR	102638	PtrMemberAccess	sa -> sin6_port		102452	0					
ANR	102639	Identifier	sa		102452	0					
ANR	102640	Identifier	sin6_port		102452	1					
ANR	102641	PtrMemberAccess	query -> port		102452	1					
ANR	102642	Identifier	query		102452	0					
ANR	102643	Identifier	port		102452	1					
ANR	102644	ExpressionStatement	"memcpy ( & sa -> sin6_addr , he -> h_addr_list [ i ] , he -> h_length )"	336:16:9234:9290	102452	4	True				
ANR	102645	CallExpression	"memcpy ( & sa -> sin6_addr , he -> h_addr_list [ i ] , he -> h_length )"		102452	0					
ANR	102646	Callee	memcpy		102452	0					
ANR	102647	Identifier	memcpy		102452	0					
ANR	102648	ArgumentList	& sa -> sin6_addr		102452	1					
ANR	102649	Argument	& sa -> sin6_addr		102452	0					
ANR	102650	UnaryOperationExpression	& sa -> sin6_addr		102452	0					
ANR	102651	UnaryOperator	&		102452	0					
ANR	102652	PtrMemberAccess	sa -> sin6_addr		102452	1					
ANR	102653	Identifier	sa		102452	0					
ANR	102654	Identifier	sin6_addr		102452	1					
ANR	102655	Argument	he -> h_addr_list [ i ]		102452	1					
ANR	102656	ArrayIndexing	he -> h_addr_list [ i ]		102452	0					
ANR	102657	PtrMemberAccess	he -> h_addr_list		102452	0					
ANR	102658	Identifier	he		102452	0					
ANR	102659	Identifier	h_addr_list		102452	1					
ANR	102660	Identifier	i		102452	1					
ANR	102661	Argument	he -> h_length		102452	2					
ANR	102662	PtrMemberAccess	he -> h_length		102452	0					
ANR	102663	Identifier	he		102452	0					
ANR	102664	Identifier	h_length		102452	1					
ANR	102665	ExpressionStatement	query -> responses [ query -> response_count ] = ( struct sockaddr * ) sa	338:16:9309:9371	102452	5	True				
ANR	102666	AssignmentExpression	query -> responses [ query -> response_count ] = ( struct sockaddr * ) sa		102452	0		=			
ANR	102667	ArrayIndexing	query -> responses [ query -> response_count ]		102452	0					
ANR	102668	PtrMemberAccess	query -> responses		102452	0					
ANR	102669	Identifier	query		102452	0					
ANR	102670	Identifier	responses		102452	1					
ANR	102671	PtrMemberAccess	query -> response_count		102452	1					
ANR	102672	Identifier	query		102452	0					
ANR	102673	Identifier	response_count		102452	1					
ANR	102674	CastExpression	( struct sockaddr * ) sa		102452	1					
ANR	102675	CastTarget	struct sockaddr *		102452	0					
ANR	102676	Identifier	sa		102452	1					
ANR	102677	IfStatement	if ( query -> responses [ query -> response_count ] == NULL )		102452	6					
ANR	102678	Condition	query -> responses [ query -> response_count ] == NULL	339:20:9393:9439	102452	0	True				
ANR	102679	EqualityExpression	query -> responses [ query -> response_count ] == NULL		102452	0		==			
ANR	102680	ArrayIndexing	query -> responses [ query -> response_count ]		102452	0					
ANR	102681	PtrMemberAccess	query -> responses		102452	0					
ANR	102682	Identifier	query		102452	0					
ANR	102683	Identifier	responses		102452	1					
ANR	102684	PtrMemberAccess	query -> response_count		102452	1					
ANR	102685	Identifier	query		102452	0					
ANR	102686	Identifier	response_count		102452	1					
ANR	102687	Identifier	NULL		102452	1					
ANR	102688	CompoundStatement		43:69:1318:1318	102452	1					
ANR	102689	ExpressionStatement	"LOGE ( ""failed to allocate memory for DNS query result address"" )"	340:20:9464:9526	102452	0	True				
ANR	102690	CallExpression	"LOGE ( ""failed to allocate memory for DNS query result address"" )"		102452	0					
ANR	102691	Callee	LOGE		102452	0					
ANR	102692	Identifier	LOGE		102452	0					
ANR	102693	ArgumentList	"""failed to allocate memory for DNS query result address"""		102452	1					
ANR	102694	Argument	"""failed to allocate memory for DNS query result address"""		102452	0					
ANR	102695	PrimaryExpression	"""failed to allocate memory for DNS query result address"""		102452	0					
ANR	102696	ElseStatement	else		102452	0					
ANR	102697	CompoundStatement		45:23:1427:1427	102452	0					
ANR	102698	ExpressionStatement	query -> response_count ++	342:20:9573:9596	102452	0	True				
ANR	102699	PostIncDecOperationExpression	query -> response_count ++		102452	0					
ANR	102700	PtrMemberAccess	query -> response_count		102452	0					
ANR	102701	Identifier	query		102452	0					
ANR	102702	Identifier	response_count		102452	1					
ANR	102703	IncDec	++		102452	1					
ANR	102704	Label	CLEANUP :	348:0:9647:9654	102452	8	True				
ANR	102705	Identifier	CLEANUP		102452	0					
ANR	102706	ExpressionStatement	query -> requests [ 1 ] = 0	350:4:9661:9683	102452	9	True				
ANR	102707	AssignmentExpression	query -> requests [ 1 ] = 0		102452	0		=			
ANR	102708	ArrayIndexing	query -> requests [ 1 ]		102452	0					
ANR	102709	PtrMemberAccess	query -> requests		102452	0					
ANR	102710	Identifier	query		102452	0					
ANR	102711	Identifier	requests		102452	1					
ANR	102712	PrimaryExpression	1		102452	1					
ANR	102713	PrimaryExpression	0		102452	1					
ANR	102714	IfStatement	if ( all_requests_are_null ( query ) )		102452	10					
ANR	102715	Condition	all_requests_are_null ( query )	353:8:9797:9824	102452	0	True				
ANR	102716	CallExpression	all_requests_are_null ( query )		102452	0					
ANR	102717	Callee	all_requests_are_null		102452	0					
ANR	102718	Identifier	all_requests_are_null		102452	0					
ANR	102719	ArgumentList	query		102452	1					
ANR	102720	Argument	query		102452	0					
ANR	102721	Identifier	query		102452	0					
ANR	102722	CompoundStatement		57:38:1703:1703	102452	1					
ANR	102723	ReturnStatement	return process_client_callback ( query ) ;	354:8:9837:9874	102452	0	True				
ANR	102724	CallExpression	process_client_callback ( query )		102452	0					
ANR	102725	Callee	process_client_callback		102452	0					
ANR	102726	Identifier	process_client_callback		102452	0					
ANR	102727	ArgumentList	query		102452	1					
ANR	102728	Argument	query		102452	0					
ANR	102729	Identifier	query		102452	0					
ANR	102730	ReturnType	static void		102452	1					
ANR	102731	Identifier	dns_query_v6_cb		102452	2					
ANR	102732	ParameterList	"void * arg , int status , int timeouts , struct hostent * he"		102452	3					
ANR	102733	Parameter	void * arg	296:16:8066:8074	102452	0	True				
ANR	102734	ParameterType	void *		102452	0					
ANR	102735	Identifier	arg		102452	1					
ANR	102736	Parameter	int status	296:27:8077:8086	102452	1	True				
ANR	102737	ParameterType	int		102452	0					
ANR	102738	Identifier	status		102452	1					
ANR	102739	Parameter	int timeouts	296:39:8089:8100	102452	2	True				
ANR	102740	ParameterType	int		102452	0					
ANR	102741	Identifier	timeouts		102452	1					
ANR	102742	Parameter	struct hostent * he	296:53:8103:8120	102452	3	True				
ANR	102743	ParameterType	struct hostent *		102452	0					
ANR	102744	Identifier	he		102452	1					
ANR	102745	CFGEntryNode	ENTRY		102452		True				
ANR	102746	CFGExitNode	EXIT		102452		True				
ANR	102747	Symbol	all_requests_are_null		102452						
ANR	102748	Symbol	sa -> sin6_port		102452						
ANR	102749	Symbol	timeouts		102452						
ANR	102750	Symbol	he -> h_length		102452						
ANR	102751	Symbol	query -> requests		102452						
ANR	102752	Symbol	query -> responses		102452						
ANR	102753	Symbol	sa		102452						
ANR	102754	Symbol	& sa -> sin6_addr		102452						
ANR	102755	Symbol	arg		102452						
ANR	102756	Symbol	query -> response_count		102452						
ANR	102757	Symbol	* sa		102452						
ANR	102758	Symbol	query -> port		102452						
ANR	102759	Symbol	* query		102452						
ANR	102760	Symbol	* he		102452						
ANR	102761	Symbol	* query -> requests		102452						
ANR	102762	Symbol	NULL		102452						
ANR	102763	Symbol	query		102452						
ANR	102764	Symbol	i		102452						
ANR	102765	Symbol	ARES_EDESTRUCTION		102452						
ANR	102766	Symbol	ARES_SUCCESS		102452						
ANR	102767	Symbol	* * he		102452						
ANR	102768	Symbol	* query -> response_count		102452						
ANR	102769	Symbol	new_responses		102452						
ANR	102770	Symbol	n		102452						
ANR	102771	Symbol	AF_INET6		102452						
ANR	102772	Symbol	verbose		102452						
ANR	102773	Symbol	process_client_callback		102452						
ANR	102774	Symbol	sa -> sin6_family		102452						
ANR	102775	Symbol	ares_strerror		102452						
ANR	102776	Symbol	he -> h_addr_list		102452						
ANR	102777	Symbol	* i		102452						
ANR	102778	Symbol	* * query		102452						
ANR	102779	Symbol	ss_realloc		102452						
ANR	102780	Symbol	* he -> h_addr_list		102452						
ANR	102781	Symbol	* n		102452						
ANR	102782	Symbol	ss_malloc		102452						
ANR	102783	Symbol	he		102452						
ANR	102784	Symbol	status		102452						
ANR	102785	Symbol	he -> h_name		102452						
ANR	102786	Symbol	* query -> responses		102452						
ANR	102787	Function	process_client_callback	361:0:9940:10602							
ANR	102788	FunctionDef	process_client_callback (struct resolv_query * query)		102787	0					
ANR	102789	CompoundStatement		363:0:10004:10602	102787	0					
ANR	102790	IdentifierDeclStatement	struct sockaddr * best_address = NULL ;	364:4:10010:10046	102787	0	True				
ANR	102791	IdentifierDecl	* best_address = NULL		102787	0					
ANR	102792	IdentifierDeclType	struct sockaddr *		102787	0					
ANR	102793	Identifier	best_address		102787	1					
ANR	102794	AssignmentExpression	* best_address = NULL		102787	2		=			
ANR	102795	Identifier	NULL		102787	0					
ANR	102796	Identifier	NULL		102787	1					
ANR	102797	IfStatement	if ( resolv_mode == MODE_IPV4_FIRST )		102787	1					
ANR	102798	Condition	resolv_mode == MODE_IPV4_FIRST	366:8:10057:10086	102787	0	True				
ANR	102799	EqualityExpression	resolv_mode == MODE_IPV4_FIRST		102787	0		==			
ANR	102800	Identifier	resolv_mode		102787	0					
ANR	102801	Identifier	MODE_IPV4_FIRST		102787	1					
ANR	102802	CompoundStatement		4:40:84:84	102787	1					
ANR	102803	ExpressionStatement	best_address = choose_ipv4_first ( query )	367:8:10099:10138	102787	0	True				
ANR	102804	AssignmentExpression	best_address = choose_ipv4_first ( query )		102787	0		=			
ANR	102805	Identifier	best_address		102787	0					
ANR	102806	CallExpression	choose_ipv4_first ( query )		102787	1					
ANR	102807	Callee	choose_ipv4_first		102787	0					
ANR	102808	Identifier	choose_ipv4_first		102787	0					
ANR	102809	ArgumentList	query		102787	1					
ANR	102810	Argument	query		102787	0					
ANR	102811	Identifier	query		102787	0					
ANR	102812	ElseStatement	else		102787	0					
ANR	102813	IfStatement	if ( resolv_mode == MODE_IPV6_FIRST )		102787	0					
ANR	102814	Condition	resolv_mode == MODE_IPV6_FIRST	368:15:10155:10184	102787	0	True				
ANR	102815	EqualityExpression	resolv_mode == MODE_IPV6_FIRST		102787	0		==			
ANR	102816	Identifier	resolv_mode		102787	0					
ANR	102817	Identifier	MODE_IPV6_FIRST		102787	1					
ANR	102818	CompoundStatement		6:47:182:182	102787	1					
ANR	102819	ExpressionStatement	best_address = choose_ipv6_first ( query )	369:8:10197:10236	102787	0	True				
ANR	102820	AssignmentExpression	best_address = choose_ipv6_first ( query )		102787	0		=			
ANR	102821	Identifier	best_address		102787	0					
ANR	102822	CallExpression	choose_ipv6_first ( query )		102787	1					
ANR	102823	Callee	choose_ipv6_first		102787	0					
ANR	102824	Identifier	choose_ipv6_first		102787	0					
ANR	102825	ArgumentList	query		102787	1					
ANR	102826	Argument	query		102787	0					
ANR	102827	Identifier	query		102787	0					
ANR	102828	ElseStatement	else		102787	0					
ANR	102829	CompoundStatement		8:11:244:244	102787	0					
ANR	102830	ExpressionStatement	best_address = choose_any ( query )	371:8:10259:10291	102787	0	True				
ANR	102831	AssignmentExpression	best_address = choose_any ( query )		102787	0		=			
ANR	102832	Identifier	best_address		102787	0					
ANR	102833	CallExpression	choose_any ( query )		102787	1					
ANR	102834	Callee	choose_any		102787	0					
ANR	102835	Identifier	choose_any		102787	0					
ANR	102836	ArgumentList	query		102787	1					
ANR	102837	Argument	query		102787	0					
ANR	102838	Identifier	query		102787	0					
ANR	102839	ExpressionStatement	"query -> client_cb ( best_address , query -> data )"	374:4:10304:10347	102787	2	True				
ANR	102840	CallExpression	"query -> client_cb ( best_address , query -> data )"		102787	0					
ANR	102841	Callee	query -> client_cb		102787	0					
ANR	102842	PtrMemberAccess	query -> client_cb		102787	0					
ANR	102843	Identifier	query		102787	0					
ANR	102844	Identifier	client_cb		102787	1					
ANR	102845	ArgumentList	best_address		102787	1					
ANR	102846	Argument	best_address		102787	0					
ANR	102847	Identifier	best_address		102787	0					
ANR	102848	Argument	query -> data		102787	1					
ANR	102849	PtrMemberAccess	query -> data		102787	0					
ANR	102850	Identifier	query		102787	0					
ANR	102851	Identifier	data		102787	1					
ANR	102852	ForStatement	for ( int i = 0 ; i < query -> response_count ; i ++ )		102787	3					
ANR	102853	ForInit	int i = 0 ;	376:9:10359:10368	102787	0	True				
ANR	102854	IdentifierDeclStatement	int i = 0 ;		102787	0					
ANR	102855	IdentifierDecl	i = 0		102787	0					
ANR	102856	IdentifierDeclType	int		102787	0					
ANR	102857	Identifier	i		102787	1					
ANR	102858	AssignmentExpression	i = 0		102787	2		=			
ANR	102859	Identifier	i		102787	0					
ANR	102860	PrimaryExpression	0		102787	1					
ANR	102861	Condition	i < query -> response_count	376:20:10370:10394	102787	1	True				
ANR	102862	RelationalExpression	i < query -> response_count		102787	0		<			
ANR	102863	Identifier	i		102787	0					
ANR	102864	PtrMemberAccess	query -> response_count		102787	1					
ANR	102865	Identifier	query		102787	0					
ANR	102866	Identifier	response_count		102787	1					
ANR	102867	PostIncDecOperationExpression	i ++	376:47:10397:10399	102787	2	True				
ANR	102868	Identifier	i		102787	0					
ANR	102869	IncDec	++		102787	1					
ANR	102870	ExpressionStatement	ss_free ( query -> responses [ i ] )	377:8:10410:10438	102787	3	True				
ANR	102871	CallExpression	ss_free ( query -> responses [ i ] )		102787	0					
ANR	102872	Callee	ss_free		102787	0					
ANR	102873	Identifier	ss_free		102787	0					
ANR	102874	ArgumentList	query -> responses [ i ]		102787	1					
ANR	102875	Argument	query -> responses [ i ]		102787	0					
ANR	102876	ArrayIndexing	query -> responses [ i ]		102787	0					
ANR	102877	PtrMemberAccess	query -> responses		102787	0					
ANR	102878	Identifier	query		102787	0					
ANR	102879	Identifier	responses		102787	1					
ANR	102880	Identifier	i		102787	1					
ANR	102881	ExpressionStatement	ss_free ( query -> responses )	379:4:10445:10470	102787	4	True				
ANR	102882	CallExpression	ss_free ( query -> responses )		102787	0					
ANR	102883	Callee	ss_free		102787	0					
ANR	102884	Identifier	ss_free		102787	0					
ANR	102885	ArgumentList	query -> responses		102787	1					
ANR	102886	Argument	query -> responses		102787	0					
ANR	102887	PtrMemberAccess	query -> responses		102787	0					
ANR	102888	Identifier	query		102787	0					
ANR	102889	Identifier	responses		102787	1					
ANR	102890	IfStatement	if ( query -> free_cb != NULL )		102787	5					
ANR	102891	Condition	query -> free_cb != NULL	381:8:10481:10502	102787	0	True				
ANR	102892	EqualityExpression	query -> free_cb != NULL		102787	0		!=			
ANR	102893	PtrMemberAccess	query -> free_cb		102787	0					
ANR	102894	Identifier	query		102787	0					
ANR	102895	Identifier	free_cb		102787	1					
ANR	102896	Identifier	NULL		102787	1					
ANR	102897	ExpressionStatement	query -> free_cb ( query -> data )	382:8:10513:10540	102787	1	True				
ANR	102898	CallExpression	query -> free_cb ( query -> data )		102787	0					
ANR	102899	Callee	query -> free_cb		102787	0					
ANR	102900	PtrMemberAccess	query -> free_cb		102787	0					
ANR	102901	Identifier	query		102787	0					
ANR	102902	Identifier	free_cb		102787	1					
ANR	102903	ArgumentList	query -> data		102787	1					
ANR	102904	Argument	query -> data		102787	0					
ANR	102905	PtrMemberAccess	query -> data		102787	0					
ANR	102906	Identifier	query		102787	0					
ANR	102907	Identifier	data		102787	1					
ANR	102908	ElseStatement	else		102787	0					
ANR	102909	ExpressionStatement	ss_free ( query -> data )	384:8:10559:10579	102787	0	True				
ANR	102910	CallExpression	ss_free ( query -> data )		102787	0					
ANR	102911	Callee	ss_free		102787	0					
ANR	102912	Identifier	ss_free		102787	0					
ANR	102913	ArgumentList	query -> data		102787	1					
ANR	102914	Argument	query -> data		102787	0					
ANR	102915	PtrMemberAccess	query -> data		102787	0					
ANR	102916	Identifier	query		102787	0					
ANR	102917	Identifier	data		102787	1					
ANR	102918	ExpressionStatement	ss_free ( query )	386:4:10586:10600	102787	6	True				
ANR	102919	CallExpression	ss_free ( query )		102787	0					
ANR	102920	Callee	ss_free		102787	0					
ANR	102921	Identifier	ss_free		102787	0					
ANR	102922	ArgumentList	query		102787	1					
ANR	102923	Argument	query		102787	0					
ANR	102924	Identifier	query		102787	0					
ANR	102925	ReturnType	static void		102787	1					
ANR	102926	Identifier	process_client_callback		102787	2					
ANR	102927	ParameterList	struct resolv_query * query		102787	3					
ANR	102928	Parameter	struct resolv_query * query	362:24:9976:10001	102787	0	True				
ANR	102929	ParameterType	struct resolv_query *		102787	0					
ANR	102930	Identifier	query		102787	1					
ANR	102931	CFGEntryNode	ENTRY		102787		True				
ANR	102932	CFGExitNode	EXIT		102787		True				
ANR	102933	Symbol	NULL		102787						
ANR	102934	Symbol	choose_ipv4_first		102787						
ANR	102935	Symbol	MODE_IPV4_FIRST		102787						
ANR	102936	Symbol	query		102787						
ANR	102937	Symbol	choose_ipv6_first		102787						
ANR	102938	Symbol	choose_any		102787						
ANR	102939	Symbol	i		102787						
ANR	102940	Symbol	query -> data		102787						
ANR	102941	Symbol	query -> responses		102787						
ANR	102942	Symbol	query -> free_cb		102787						
ANR	102943	Symbol	* * query		102787						
ANR	102944	Symbol	* i		102787						
ANR	102945	Symbol	MODE_IPV6_FIRST		102787						
ANR	102946	Symbol	resolv_mode		102787						
ANR	102947	Symbol	query -> response_count		102787						
ANR	102948	Symbol	best_address		102787						
ANR	102949	Symbol	* query		102787						
ANR	102950	Symbol	* query -> responses		102787						
ANR	102951	Function	choose_ipv4_first	389:0:10605:10868							
ANR	102952	FunctionDef	choose_ipv4_first (struct resolv_query * query)		102951	0					
ANR	102953	CompoundStatement		391:0:10676:10868	102951	0					
ANR	102954	ForStatement	for ( int i = 0 ; i < query -> response_count ; i ++ )		102951	0					
ANR	102955	ForInit	int i = 0 ;	392:9:10687:10696	102951	0	True				
ANR	102956	IdentifierDeclStatement	int i = 0 ;		102951	0					
ANR	102957	IdentifierDecl	i = 0		102951	0					
ANR	102958	IdentifierDeclType	int		102951	0					
ANR	102959	Identifier	i		102951	1					
ANR	102960	AssignmentExpression	i = 0		102951	2		=			
ANR	102961	Identifier	i		102951	0					
ANR	102962	PrimaryExpression	0		102951	1					
ANR	102963	Condition	i < query -> response_count	392:20:10698:10722	102951	1	True				
ANR	102964	RelationalExpression	i < query -> response_count		102951	0		<			
ANR	102965	Identifier	i		102951	0					
ANR	102966	PtrMemberAccess	query -> response_count		102951	1					
ANR	102967	Identifier	query		102951	0					
ANR	102968	Identifier	response_count		102951	1					
ANR	102969	PostIncDecOperationExpression	i ++	392:47:10725:10727	102951	2	True				
ANR	102970	Identifier	i		102951	0					
ANR	102971	IncDec	++		102951	1					
ANR	102972	IfStatement	if ( query -> responses [ i ] -> sa_family == AF_INET )		102951	3					
ANR	102973	Condition	query -> responses [ i ] -> sa_family == AF_INET	393:12:10742:10782	102951	0	True				
ANR	102974	EqualityExpression	query -> responses [ i ] -> sa_family == AF_INET		102951	0		==			
ANR	102975	PtrMemberAccess	query -> responses [ i ] -> sa_family		102951	0					
ANR	102976	ArrayIndexing	query -> responses [ i ]		102951	0					
ANR	102977	PtrMemberAccess	query -> responses		102951	0					
ANR	102978	Identifier	query		102951	0					
ANR	102979	Identifier	responses		102951	1					
ANR	102980	Identifier	i		102951	1					
ANR	102981	Identifier	sa_family		102951	1					
ANR	102982	Identifier	AF_INET		102951	1					
ANR	102983	CompoundStatement		3:55:108:108	102951	1					
ANR	102984	ReturnStatement	return query -> responses [ i ] ;	394:12:10799:10825	102951	0	True				
ANR	102985	ArrayIndexing	query -> responses [ i ]		102951	0					
ANR	102986	PtrMemberAccess	query -> responses		102951	0					
ANR	102987	Identifier	query		102951	0					
ANR	102988	Identifier	responses		102951	1					
ANR	102989	Identifier	i		102951	1					
ANR	102990	ReturnStatement	return choose_any ( query ) ;	397:4:10842:10866	102951	1	True				
ANR	102991	CallExpression	choose_any ( query )		102951	0					
ANR	102992	Callee	choose_any		102951	0					
ANR	102993	Identifier	choose_any		102951	0					
ANR	102994	ArgumentList	query		102951	1					
ANR	102995	Argument	query		102951	0					
ANR	102996	Identifier	query		102951	0					
ANR	102997	ReturnType	static struct sockaddr *		102951	1					
ANR	102998	Identifier	choose_ipv4_first		102951	2					
ANR	102999	ParameterList	struct resolv_query * query		102951	3					
ANR	103000	Parameter	struct resolv_query * query	390:18:10648:10673	102951	0	True				
ANR	103001	ParameterType	struct resolv_query *		102951	0					
ANR	103002	Identifier	query		102951	1					
ANR	103003	CFGEntryNode	ENTRY		102951		True				
ANR	103004	CFGExitNode	EXIT		102951		True				
ANR	103005	Symbol	* * i		102951						
ANR	103006	Symbol	* * * query		102951						
ANR	103007	Symbol	query		102951						
ANR	103008	Symbol	choose_any		102951						
ANR	103009	Symbol	i		102951						
ANR	103010	Symbol	AF_INET		102951						
ANR	103011	Symbol	query -> responses		102951						
ANR	103012	Symbol	query -> responses [ i ] -> sa_family		102951						
ANR	103013	Symbol	* i		102951						
ANR	103014	Symbol	* * query		102951						
ANR	103015	Symbol	query -> response_count		102951						
ANR	103016	Symbol	* * query -> responses		102951						
ANR	103017	Symbol	* query		102951						
ANR	103018	Symbol	* query -> responses		102951						
ANR	103019	Function	choose_ipv6_first	400:0:10871:11135							
ANR	103020	FunctionDef	choose_ipv6_first (struct resolv_query * query)		103019	0					
ANR	103021	CompoundStatement		402:0:10942:11135	103019	0					
ANR	103022	ForStatement	for ( int i = 0 ; i < query -> response_count ; i ++ )		103019	0					
ANR	103023	ForInit	int i = 0 ;	403:9:10953:10962	103019	0	True				
ANR	103024	IdentifierDeclStatement	int i = 0 ;		103019	0					
ANR	103025	IdentifierDecl	i = 0		103019	0					
ANR	103026	IdentifierDeclType	int		103019	0					
ANR	103027	Identifier	i		103019	1					
ANR	103028	AssignmentExpression	i = 0		103019	2		=			
ANR	103029	Identifier	i		103019	0					
ANR	103030	PrimaryExpression	0		103019	1					
ANR	103031	Condition	i < query -> response_count	403:20:10964:10988	103019	1	True				
ANR	103032	RelationalExpression	i < query -> response_count		103019	0		<			
ANR	103033	Identifier	i		103019	0					
ANR	103034	PtrMemberAccess	query -> response_count		103019	1					
ANR	103035	Identifier	query		103019	0					
ANR	103036	Identifier	response_count		103019	1					
ANR	103037	PostIncDecOperationExpression	i ++	403:47:10991:10993	103019	2	True				
ANR	103038	Identifier	i		103019	0					
ANR	103039	IncDec	++		103019	1					
ANR	103040	IfStatement	if ( query -> responses [ i ] -> sa_family == AF_INET6 )		103019	3					
ANR	103041	Condition	query -> responses [ i ] -> sa_family == AF_INET6	404:12:11008:11049	103019	0	True				
ANR	103042	EqualityExpression	query -> responses [ i ] -> sa_family == AF_INET6		103019	0		==			
ANR	103043	PtrMemberAccess	query -> responses [ i ] -> sa_family		103019	0					
ANR	103044	ArrayIndexing	query -> responses [ i ]		103019	0					
ANR	103045	PtrMemberAccess	query -> responses		103019	0					
ANR	103046	Identifier	query		103019	0					
ANR	103047	Identifier	responses		103019	1					
ANR	103048	Identifier	i		103019	1					
ANR	103049	Identifier	sa_family		103019	1					
ANR	103050	Identifier	AF_INET6		103019	1					
ANR	103051	CompoundStatement		3:56:109:109	103019	1					
ANR	103052	ReturnStatement	return query -> responses [ i ] ;	405:12:11066:11092	103019	0	True				
ANR	103053	ArrayIndexing	query -> responses [ i ]		103019	0					
ANR	103054	PtrMemberAccess	query -> responses		103019	0					
ANR	103055	Identifier	query		103019	0					
ANR	103056	Identifier	responses		103019	1					
ANR	103057	Identifier	i		103019	1					
ANR	103058	ReturnStatement	return choose_any ( query ) ;	408:4:11109:11133	103019	1	True				
ANR	103059	CallExpression	choose_any ( query )		103019	0					
ANR	103060	Callee	choose_any		103019	0					
ANR	103061	Identifier	choose_any		103019	0					
ANR	103062	ArgumentList	query		103019	1					
ANR	103063	Argument	query		103019	0					
ANR	103064	Identifier	query		103019	0					
ANR	103065	ReturnType	static struct sockaddr *		103019	1					
ANR	103066	Identifier	choose_ipv6_first		103019	2					
ANR	103067	ParameterList	struct resolv_query * query		103019	3					
ANR	103068	Parameter	struct resolv_query * query	401:18:10914:10939	103019	0	True				
ANR	103069	ParameterType	struct resolv_query *		103019	0					
ANR	103070	Identifier	query		103019	1					
ANR	103071	CFGEntryNode	ENTRY		103019		True				
ANR	103072	CFGExitNode	EXIT		103019		True				
ANR	103073	Symbol	* * i		103019						
ANR	103074	Symbol	* * * query		103019						
ANR	103075	Symbol	query		103019						
ANR	103076	Symbol	choose_any		103019						
ANR	103077	Symbol	i		103019						
ANR	103078	Symbol	query -> responses		103019						
ANR	103079	Symbol	AF_INET6		103019						
ANR	103080	Symbol	query -> responses [ i ] -> sa_family		103019						
ANR	103081	Symbol	* i		103019						
ANR	103082	Symbol	* * query		103019						
ANR	103083	Symbol	query -> response_count		103019						
ANR	103084	Symbol	* * query -> responses		103019						
ANR	103085	Symbol	* query		103019						
ANR	103086	Symbol	* query -> responses		103019						
ANR	103087	Function	choose_any	411:0:11138:11302							
ANR	103088	FunctionDef	choose_any (struct resolv_query * query)		103087	0					
ANR	103089	CompoundStatement		413:0:11202:11302	103087	0					
ANR	103090	IfStatement	if ( query -> response_count >= 1 )		103087	0					
ANR	103091	Condition	query -> response_count >= 1	414:8:11212:11237	103087	0	True				
ANR	103092	RelationalExpression	query -> response_count >= 1		103087	0		>=			
ANR	103093	PtrMemberAccess	query -> response_count		103087	0					
ANR	103094	Identifier	query		103087	0					
ANR	103095	Identifier	response_count		103087	1					
ANR	103096	PrimaryExpression	1		103087	1					
ANR	103097	CompoundStatement		2:36:37:37	103087	1					
ANR	103098	ReturnStatement	return query -> responses [ 0 ] ;	415:8:11250:11276	103087	0	True				
ANR	103099	ArrayIndexing	query -> responses [ 0 ]		103087	0					
ANR	103100	PtrMemberAccess	query -> responses		103087	0					
ANR	103101	Identifier	query		103087	0					
ANR	103102	Identifier	responses		103087	1					
ANR	103103	PrimaryExpression	0		103087	1					
ANR	103104	ReturnStatement	return NULL ;	418:4:11289:11300	103087	1	True				
ANR	103105	Identifier	NULL		103087	0					
ANR	103106	ReturnType	static struct sockaddr *		103087	1					
ANR	103107	Identifier	choose_any		103087	2					
ANR	103108	ParameterList	struct resolv_query * query		103087	3					
ANR	103109	Parameter	struct resolv_query * query	412:11:11174:11199	103087	0	True				
ANR	103110	ParameterType	struct resolv_query *		103087	0					
ANR	103111	Identifier	query		103087	1					
ANR	103112	CFGEntryNode	ENTRY		103087		True				
ANR	103113	CFGExitNode	EXIT		103087		True				
ANR	103114	Symbol	* * query		103087						
ANR	103115	Symbol	NULL		103087						
ANR	103116	Symbol	query		103087						
ANR	103117	Symbol	query -> response_count		103087						
ANR	103118	Symbol	* query		103087						
ANR	103119	Symbol	query -> responses		103087						
ANR	103120	Symbol	* query -> responses		103087						
ANR	103121	Function	all_requests_are_null	421:0:11305:11560							
ANR	103122	FunctionDef	all_requests_are_null (struct resolv_query * query)		103121	0					
ANR	103123	CompoundStatement		423:0:11373:11560	103121	0					
ANR	103124	IdentifierDeclStatement	int result = 1 ;	424:4:11379:11393	103121	0	True				
ANR	103125	IdentifierDecl	result = 1		103121	0					
ANR	103126	IdentifierDeclType	int		103121	0					
ANR	103127	Identifier	result		103121	1					
ANR	103128	AssignmentExpression	result = 1		103121	2		=			
ANR	103129	Identifier	result		103121	0					
ANR	103130	PrimaryExpression	1		103121	1					
ANR	103131	ForStatement	for ( int i = 0 ; i < sizeof ( query -> requests ) / sizeof ( query -> requests [ 0 ] ) ; i ++ )		103121	1					
ANR	103132	ForInit	int i = 0 ;	426:9:11405:11414	103121	0	True				
ANR	103133	IdentifierDeclStatement	int i = 0 ;		103121	0					
ANR	103134	IdentifierDecl	i = 0		103121	0					
ANR	103135	IdentifierDeclType	int		103121	0					
ANR	103136	Identifier	i		103121	1					
ANR	103137	AssignmentExpression	i = 0		103121	2		=			
ANR	103138	Identifier	i		103121	0					
ANR	103139	PrimaryExpression	0		103121	1					
ANR	103140	Condition	i < sizeof ( query -> requests ) / sizeof ( query -> requests [ 0 ] )	426:20:11416:11471	103121	1	True				
ANR	103141	RelationalExpression	i < sizeof ( query -> requests ) / sizeof ( query -> requests [ 0 ] )		103121	0		<			
ANR	103142	Identifier	i		103121	0					
ANR	103143	MultiplicativeExpression	sizeof ( query -> requests ) / sizeof ( query -> requests [ 0 ] )		103121	1		/			
ANR	103144	SizeofExpression	sizeof ( query -> requests )		103121	0					
ANR	103145	Sizeof	sizeof		103121	0					
ANR	103146	PtrMemberAccess	query -> requests		103121	1					
ANR	103147	Identifier	query		103121	0					
ANR	103148	Identifier	requests		103121	1					
ANR	103149	SizeofExpression	sizeof ( query -> requests [ 0 ] )		103121	1					
ANR	103150	Sizeof	sizeof		103121	0					
ANR	103151	ArrayIndexing	query -> requests [ 0 ]		103121	1					
ANR	103152	PtrMemberAccess	query -> requests		103121	0					
ANR	103153	Identifier	query		103121	0					
ANR	103154	Identifier	requests		103121	1					
ANR	103155	PrimaryExpression	0		103121	1					
ANR	103156	PostIncDecOperationExpression	i ++	427:9:11483:11485	103121	2	True				
ANR	103157	Identifier	i		103121	0					
ANR	103158	IncDec	++		103121	1					
ANR	103159	ExpressionStatement	result = result && query -> requests [ i ] == 0	428:8:11496:11538	103121	3	True				
ANR	103160	AssignmentExpression	result = result && query -> requests [ i ] == 0		103121	0		=			
ANR	103161	Identifier	result		103121	0					
ANR	103162	AndExpression	result && query -> requests [ i ] == 0		103121	1		&&			
ANR	103163	Identifier	result		103121	0					
ANR	103164	EqualityExpression	query -> requests [ i ] == 0		103121	1		==			
ANR	103165	ArrayIndexing	query -> requests [ i ]		103121	0					
ANR	103166	PtrMemberAccess	query -> requests		103121	0					
ANR	103167	Identifier	query		103121	0					
ANR	103168	Identifier	requests		103121	1					
ANR	103169	Identifier	i		103121	1					
ANR	103170	PrimaryExpression	0		103121	1					
ANR	103171	ReturnStatement	return result ;	430:4:11545:11558	103121	2	True				
ANR	103172	Identifier	result		103121	0					
ANR	103173	ReturnType	static inline int		103121	1					
ANR	103174	Identifier	all_requests_are_null		103121	2					
ANR	103175	ParameterList	struct resolv_query * query		103121	3					
ANR	103176	Parameter	struct resolv_query * query	422:22:11345:11370	103121	0	True				
ANR	103177	ParameterType	struct resolv_query *		103121	0					
ANR	103178	Identifier	query		103121	1					
ANR	103179	CFGEntryNode	ENTRY		103121		True				
ANR	103180	CFGExitNode	EXIT		103121		True				
ANR	103181	Symbol	result		103121						
ANR	103182	Symbol	* query -> requests		103121						
ANR	103183	Symbol	* * query		103121						
ANR	103184	Symbol	* i		103121						
ANR	103185	Symbol	query		103121						
ANR	103186	Symbol	i		103121						
ANR	103187	Symbol	* query		103121						
ANR	103188	Symbol	query -> requests		103121						
ANR	103189	Function	resolv_timeout_cb	436:0:11595:11845							
ANR	103190	FunctionDef	"resolv_timeout_cb (struct ev_loop * loop , struct ev_timer * w , int revents)"		103189	0					
ANR	103191	CompoundStatement		438:0:11680:11845	103189	0					
ANR	103192	Statement	struct	439:4:11686:11691	103189	0	True				
ANR	103193	Statement	resolv_ctx	439:11:11693:11702	103189	1	True				
ANR	103194	Statement	*	439:22:11704:11704	103189	2	True				
ANR	103195	Statement	ctx	439:23:11705:11707	103189	3	True				
ANR	103196	Statement	=	439:26:11708:11708	103189	4	True				
ANR	103197	Statement	cork_container_of	439:28:11710:11726	103189	5	True				
ANR	103198	Statement	(	439:45:11727:11727	103189	6	True				
ANR	103199	Statement	w	439:46:11728:11728	103189	7	True				
ANR	103200	Statement	","	439:47:11729:11729	103189	8	True				
ANR	103201	Statement	struct	439:49:11731:11736	103189	9	True				
ANR	103202	Statement	resolv_ctx	439:56:11738:11747	103189	10	True				
ANR	103203	Statement	","	439:66:11748:11748	103189	11	True				
ANR	103204	Statement	tw	439:68:11750:11751	103189	12	True				
ANR	103205	Statement	)	439:70:11752:11752	103189	13	True				
ANR	103206	ExpressionStatement		439:71:11753:11753	103189	14	True				
ANR	103207	ExpressionStatement	"ares_process_fd ( ctx -> channel , ARES_SOCKET_BAD , ARES_SOCKET_BAD )"	441:4:11760:11823	103189	15	True				
ANR	103208	CallExpression	"ares_process_fd ( ctx -> channel , ARES_SOCKET_BAD , ARES_SOCKET_BAD )"		103189	0					
ANR	103209	Callee	ares_process_fd		103189	0					
ANR	103210	Identifier	ares_process_fd		103189	0					
ANR	103211	ArgumentList	ctx -> channel		103189	1					
ANR	103212	Argument	ctx -> channel		103189	0					
ANR	103213	PtrMemberAccess	ctx -> channel		103189	0					
ANR	103214	Identifier	ctx		103189	0					
ANR	103215	Identifier	channel		103189	1					
ANR	103216	Argument	ARES_SOCKET_BAD		103189	1					
ANR	103217	Identifier	ARES_SOCKET_BAD		103189	0					
ANR	103218	Argument	ARES_SOCKET_BAD		103189	2					
ANR	103219	Identifier	ARES_SOCKET_BAD		103189	0					
ANR	103220	ExpressionStatement	reset_timer ( )	443:4:11830:11843	103189	16	True				
ANR	103221	CallExpression	reset_timer ( )		103189	0					
ANR	103222	Callee	reset_timer		103189	0					
ANR	103223	Identifier	reset_timer		103189	0					
ANR	103224	ArgumentList			103189	1					
ANR	103225	ReturnType	static void		103189	1					
ANR	103226	Identifier	resolv_timeout_cb		103189	2					
ANR	103227	ParameterList	"struct ev_loop * loop , struct ev_timer * w , int revents"		103189	3					
ANR	103228	Parameter	struct ev_loop * loop	437:18:11625:11644	103189	0	True				
ANR	103229	ParameterType	struct ev_loop *		103189	0					
ANR	103230	Identifier	loop		103189	1					
ANR	103231	Parameter	struct ev_timer * w	437:40:11647:11664	103189	1	True				
ANR	103232	ParameterType	struct ev_timer *		103189	0					
ANR	103233	Identifier	w		103189	1					
ANR	103234	Parameter	int revents	437:60:11667:11677	103189	2	True				
ANR	103235	ParameterType	int		103189	0					
ANR	103236	Identifier	revents		103189	1					
ANR	103237	CFGEntryNode	ENTRY		103189		True				
ANR	103238	CFGExitNode	EXIT		103189		True				
ANR	103239	Symbol	ctx -> channel		103189						
ANR	103240	Symbol	revents		103189						
ANR	103241	Symbol	loop		103189						
ANR	103242	Symbol	ctx		103189						
ANR	103243	Symbol	w		103189						
ANR	103244	Symbol	ARES_SOCKET_BAD		103189						
ANR	103245	Symbol	* ctx		103189						
ANR	103246	Function	reset_timer	446:0:11848:12185							
ANR	103247	FunctionDef	reset_timer ()		103246	0					
ANR	103248	CompoundStatement		448:0:11874:12185	103246	0					
ANR	103249	IdentifierDeclStatement	struct timeval tvout ;	449:4:11880:11900	103246	0	True				
ANR	103250	IdentifierDecl	tvout		103246	0					
ANR	103251	IdentifierDeclType	struct timeval		103246	0					
ANR	103252	Identifier	tvout		103246	1					
ANR	103253	IdentifierDeclStatement	"struct timeval * tv = ares_timeout ( default_ctx . channel , NULL , & tvout ) ;"	450:4:11906:11974	103246	1	True				
ANR	103254	IdentifierDecl	"* tv = ares_timeout ( default_ctx . channel , NULL , & tvout )"		103246	0					
ANR	103255	IdentifierDeclType	struct timeval *		103246	0					
ANR	103256	Identifier	tv		103246	1					
ANR	103257	AssignmentExpression	"* tv = ares_timeout ( default_ctx . channel , NULL , & tvout )"		103246	2		=			
ANR	103258	Identifier	tv		103246	0					
ANR	103259	CallExpression	"ares_timeout ( default_ctx . channel , NULL , & tvout )"		103246	1					
ANR	103260	Callee	ares_timeout		103246	0					
ANR	103261	Identifier	ares_timeout		103246	0					
ANR	103262	ArgumentList	default_ctx . channel		103246	1					
ANR	103263	Argument	default_ctx . channel		103246	0					
ANR	103264	MemberAccess	default_ctx . channel		103246	0					
ANR	103265	Identifier	default_ctx		103246	0					
ANR	103266	Identifier	channel		103246	1					
ANR	103267	Argument	NULL		103246	1					
ANR	103268	Identifier	NULL		103246	0					
ANR	103269	Argument	& tvout		103246	2					
ANR	103270	UnaryOperationExpression	& tvout		103246	0					
ANR	103271	UnaryOperator	&		103246	0					
ANR	103272	Identifier	tvout		103246	1					
ANR	103273	IfStatement	if ( tv == NULL )		103246	2					
ANR	103274	Condition	tv == NULL	451:8:11984:11993	103246	0	True				
ANR	103275	EqualityExpression	tv == NULL		103246	0		==			
ANR	103276	Identifier	tv		103246	0					
ANR	103277	Identifier	NULL		103246	1					
ANR	103278	CompoundStatement		4:20:121:121	103246	1					
ANR	103279	ReturnStatement	return ;	452:8:12006:12012	103246	0	True				
ANR	103280	IdentifierDeclStatement	float repeat = tv -> tv_sec + tv -> tv_usec / 1000000. + 1e-9 ;	454:4:12024:12081	103246	3	True				
ANR	103281	IdentifierDecl	repeat = tv -> tv_sec + tv -> tv_usec / 1000000. + 1e-9		103246	0					
ANR	103282	IdentifierDeclType	float		103246	0					
ANR	103283	Identifier	repeat		103246	1					
ANR	103284	AssignmentExpression	repeat = tv -> tv_sec + tv -> tv_usec / 1000000. + 1e-9		103246	2		=			
ANR	103285	Identifier	repeat		103246	0					
ANR	103286	AdditiveExpression	tv -> tv_sec + tv -> tv_usec / 1000000. + 1e-9		103246	1		+			
ANR	103287	PtrMemberAccess	tv -> tv_sec		103246	0					
ANR	103288	Identifier	tv		103246	0					
ANR	103289	Identifier	tv_sec		103246	1					
ANR	103290	AdditiveExpression	tv -> tv_usec / 1000000. + 1e-9		103246	1		+			
ANR	103291	MultiplicativeExpression	tv -> tv_usec / 1000000.		103246	0		/			
ANR	103292	PtrMemberAccess	tv -> tv_usec		103246	0					
ANR	103293	Identifier	tv		103246	0					
ANR	103294	Identifier	tv_usec		103246	1					
ANR	103295	PrimaryExpression	1000000.		103246	1					
ANR	103296	PrimaryExpression	1e-9		103246	1					
ANR	103297	ExpressionStatement	"ev_timer_set ( & default_ctx . tw , repeat , repeat )"	455:4:12087:12132	103246	4	True				
ANR	103298	CallExpression	"ev_timer_set ( & default_ctx . tw , repeat , repeat )"		103246	0					
ANR	103299	Callee	ev_timer_set		103246	0					
ANR	103300	Identifier	ev_timer_set		103246	0					
ANR	103301	ArgumentList	& default_ctx . tw		103246	1					
ANR	103302	Argument	& default_ctx . tw		103246	0					
ANR	103303	UnaryOperationExpression	& default_ctx . tw		103246	0					
ANR	103304	UnaryOperator	&		103246	0					
ANR	103305	MemberAccess	default_ctx . tw		103246	1					
ANR	103306	Identifier	default_ctx		103246	0					
ANR	103307	Identifier	tw		103246	1					
ANR	103308	Argument	repeat		103246	1					
ANR	103309	Identifier	repeat		103246	0					
ANR	103310	Argument	repeat		103246	2					
ANR	103311	Identifier	repeat		103246	0					
ANR	103312	ExpressionStatement	"ev_timer_again ( default_loop , & default_ctx . tw )"	456:4:12138:12183	103246	5	True				
ANR	103313	CallExpression	"ev_timer_again ( default_loop , & default_ctx . tw )"		103246	0					
ANR	103314	Callee	ev_timer_again		103246	0					
ANR	103315	Identifier	ev_timer_again		103246	0					
ANR	103316	ArgumentList	default_loop		103246	1					
ANR	103317	Argument	default_loop		103246	0					
ANR	103318	Identifier	default_loop		103246	0					
ANR	103319	Argument	& default_ctx . tw		103246	1					
ANR	103320	UnaryOperationExpression	& default_ctx . tw		103246	0					
ANR	103321	UnaryOperator	&		103246	0					
ANR	103322	MemberAccess	default_ctx . tw		103246	1					
ANR	103323	Identifier	default_ctx		103246	0					
ANR	103324	Identifier	tw		103246	1					
ANR	103325	ReturnType	static void		103246	1					
ANR	103326	Identifier	reset_timer		103246	2					
ANR	103327	ParameterList			103246	3					
ANR	103328	CFGEntryNode	ENTRY		103246		True				
ANR	103329	CFGExitNode	EXIT		103246		True				
ANR	103330	Symbol	tv		103246						
ANR	103331	Symbol	NULL		103246						
ANR	103332	Symbol	default_ctx . channel		103246						
ANR	103333	Symbol	tv -> tv_sec		103246						
ANR	103334	Symbol	* tv		103246						
ANR	103335	Symbol	& default_ctx		103246						
ANR	103336	Symbol	default_ctx		103246						
ANR	103337	Symbol	tv -> tv_usec		103246						
ANR	103338	Symbol	& tvout		103246						
ANR	103339	Symbol	tvout		103246						
ANR	103340	Symbol	& default_ctx . tw		103246						
ANR	103341	Symbol	repeat		103246						
ANR	103342	Symbol	default_loop		103246						
ANR	103343	Symbol	ares_timeout		103246						
ANR	103344	Function	resolv_sock_state_cb	462:0:12219:12747							
ANR	103345	FunctionDef	"resolv_sock_state_cb (void * data , int s , int read , int write)"		103344	0					
ANR	103346	CompoundStatement		463:61:12292:12747	103344	0					
ANR	103347	IdentifierDeclStatement	struct resolv_ctx * ctx = ( struct resolv_ctx * ) data ;	465:4:12299:12350	103344	0	True				
ANR	103348	IdentifierDecl	* ctx = ( struct resolv_ctx * ) data		103344	0					
ANR	103349	IdentifierDeclType	struct resolv_ctx *		103344	0					
ANR	103350	Identifier	ctx		103344	1					
ANR	103351	AssignmentExpression	* ctx = ( struct resolv_ctx * ) data		103344	2		=			
ANR	103352	Identifier	ctx		103344	0					
ANR	103353	CastExpression	( struct resolv_ctx * ) data		103344	1					
ANR	103354	CastTarget	struct resolv_ctx *		103344	0					
ANR	103355	Identifier	data		103344	1					
ANR	103356	IdentifierDeclStatement	int io_active = ev_is_active ( & ctx -> io ) ;	466:4:12356:12394	103344	1	True				
ANR	103357	IdentifierDecl	io_active = ev_is_active ( & ctx -> io )		103344	0					
ANR	103358	IdentifierDeclType	int		103344	0					
ANR	103359	Identifier	io_active		103344	1					
ANR	103360	AssignmentExpression	io_active = ev_is_active ( & ctx -> io )		103344	2		=			
ANR	103361	Identifier	io_active		103344	0					
ANR	103362	CallExpression	ev_is_active ( & ctx -> io )		103344	1					
ANR	103363	Callee	ev_is_active		103344	0					
ANR	103364	Identifier	ev_is_active		103344	0					
ANR	103365	ArgumentList	& ctx -> io		103344	1					
ANR	103366	Argument	& ctx -> io		103344	0					
ANR	103367	UnaryOperationExpression	& ctx -> io		103344	0					
ANR	103368	UnaryOperator	&		103344	0					
ANR	103369	PtrMemberAccess	ctx -> io		103344	1					
ANR	103370	Identifier	ctx		103344	0					
ANR	103371	Identifier	io		103344	1					
ANR	103372	IfStatement	if ( read || write )		103344	2					
ANR	103373	Condition	read || write	468:8:12405:12417	103344	0	True				
ANR	103374	OrExpression	read || write		103344	0		||			
ANR	103375	Identifier	read		103344	0					
ANR	103376	Identifier	write		103344	1					
ANR	103377	CompoundStatement		6:23:127:127	103344	1					
ANR	103378	IfStatement	if ( io_active && ctx -> io . fd != s )		103344	0					
ANR	103379	Condition	io_active && ctx -> io . fd != s	469:12:12434:12461	103344	0	True				
ANR	103380	AndExpression	io_active && ctx -> io . fd != s		103344	0		&&			
ANR	103381	Identifier	io_active		103344	0					
ANR	103382	EqualityExpression	ctx -> io . fd != s		103344	1		!=			
ANR	103383	MemberAccess	ctx -> io . fd		103344	0					
ANR	103384	PtrMemberAccess	ctx -> io		103344	0					
ANR	103385	Identifier	ctx		103344	0					
ANR	103386	Identifier	io		103344	1					
ANR	103387	Identifier	fd		103344	1					
ANR	103388	Identifier	s		103344	1					
ANR	103389	CompoundStatement		7:42:171:171	103344	1					
ANR	103390	ExpressionStatement	"ev_io_stop ( default_loop , & ctx -> io )"	470:12:12478:12512	103344	0	True				
ANR	103391	CallExpression	"ev_io_stop ( default_loop , & ctx -> io )"		103344	0					
ANR	103392	Callee	ev_io_stop		103344	0					
ANR	103393	Identifier	ev_io_stop		103344	0					
ANR	103394	ArgumentList	default_loop		103344	1					
ANR	103395	Argument	default_loop		103344	0					
ANR	103396	Identifier	default_loop		103344	0					
ANR	103397	Argument	& ctx -> io		103344	1					
ANR	103398	UnaryOperationExpression	& ctx -> io		103344	0					
ANR	103399	UnaryOperator	&		103344	0					
ANR	103400	PtrMemberAccess	ctx -> io		103344	1					
ANR	103401	Identifier	ctx		103344	0					
ANR	103402	Identifier	io		103344	1					
ANR	103403	ExpressionStatement	"ev_io_set ( & ctx -> io , s , ( read ? EV_READ : 0 ) | ( write ? EV_WRITE : 0 ) )"	472:8:12532:12601	103344	1	True				
ANR	103404	CallExpression	"ev_io_set ( & ctx -> io , s , ( read ? EV_READ : 0 ) | ( write ? EV_WRITE : 0 ) )"		103344	0					
ANR	103405	Callee	ev_io_set		103344	0					
ANR	103406	Identifier	ev_io_set		103344	0					
ANR	103407	ArgumentList	& ctx -> io		103344	1					
ANR	103408	Argument	& ctx -> io		103344	0					
ANR	103409	UnaryOperationExpression	& ctx -> io		103344	0					
ANR	103410	UnaryOperator	&		103344	0					
ANR	103411	PtrMemberAccess	ctx -> io		103344	1					
ANR	103412	Identifier	ctx		103344	0					
ANR	103413	Identifier	io		103344	1					
ANR	103414	Argument	s		103344	1					
ANR	103415	Identifier	s		103344	0					
ANR	103416	Argument	( read ? EV_READ : 0 ) | ( write ? EV_WRITE : 0 )		103344	2					
ANR	103417	InclusiveOrExpression	( read ? EV_READ : 0 ) | ( write ? EV_WRITE : 0 )		103344	0		|			
ANR	103418	ConditionalExpression	read ? EV_READ : 0		103344	0					
ANR	103419	Condition	read		103344	0					
ANR	103420	Identifier	read		103344	0					
ANR	103421	Identifier	EV_READ		103344	1					
ANR	103422	PrimaryExpression	0		103344	2					
ANR	103423	ConditionalExpression	write ? EV_WRITE : 0		103344	1					
ANR	103424	Condition	write		103344	0					
ANR	103425	Identifier	write		103344	0					
ANR	103426	Identifier	EV_WRITE		103344	1					
ANR	103427	PrimaryExpression	0		103344	2					
ANR	103428	ExpressionStatement	"ev_io_start ( default_loop , & ctx -> io )"	473:8:12611:12646	103344	2	True				
ANR	103429	CallExpression	"ev_io_start ( default_loop , & ctx -> io )"		103344	0					
ANR	103430	Callee	ev_io_start		103344	0					
ANR	103431	Identifier	ev_io_start		103344	0					
ANR	103432	ArgumentList	default_loop		103344	1					
ANR	103433	Argument	default_loop		103344	0					
ANR	103434	Identifier	default_loop		103344	0					
ANR	103435	Argument	& ctx -> io		103344	1					
ANR	103436	UnaryOperationExpression	& ctx -> io		103344	0					
ANR	103437	UnaryOperator	&		103344	0					
ANR	103438	PtrMemberAccess	ctx -> io		103344	1					
ANR	103439	Identifier	ctx		103344	0					
ANR	103440	Identifier	io		103344	1					
ANR	103441	ElseStatement	else		103344	0					
ANR	103442	CompoundStatement		12:11:366:366	103344	0					
ANR	103443	ExpressionStatement	"ev_io_stop ( default_loop , & ctx -> io )"	475:8:12669:12703	103344	0	True				
ANR	103444	CallExpression	"ev_io_stop ( default_loop , & ctx -> io )"		103344	0					
ANR	103445	Callee	ev_io_stop		103344	0					
ANR	103446	Identifier	ev_io_stop		103344	0					
ANR	103447	ArgumentList	default_loop		103344	1					
ANR	103448	Argument	default_loop		103344	0					
ANR	103449	Identifier	default_loop		103344	0					
ANR	103450	Argument	& ctx -> io		103344	1					
ANR	103451	UnaryOperationExpression	& ctx -> io		103344	0					
ANR	103452	UnaryOperator	&		103344	0					
ANR	103453	PtrMemberAccess	ctx -> io		103344	1					
ANR	103454	Identifier	ctx		103344	0					
ANR	103455	Identifier	io		103344	1					
ANR	103456	ExpressionStatement	"ev_io_set ( & ctx -> io , - 1 , 0 )"	476:8:12713:12739	103344	1	True				
ANR	103457	CallExpression	"ev_io_set ( & ctx -> io , - 1 , 0 )"		103344	0					
ANR	103458	Callee	ev_io_set		103344	0					
ANR	103459	Identifier	ev_io_set		103344	0					
ANR	103460	ArgumentList	& ctx -> io		103344	1					
ANR	103461	Argument	& ctx -> io		103344	0					
ANR	103462	UnaryOperationExpression	& ctx -> io		103344	0					
ANR	103463	UnaryOperator	&		103344	0					
ANR	103464	PtrMemberAccess	ctx -> io		103344	1					
ANR	103465	Identifier	ctx		103344	0					
ANR	103466	Identifier	io		103344	1					
ANR	103467	Argument	- 1		103344	1					
ANR	103468	UnaryOperationExpression	- 1		103344	0					
ANR	103469	UnaryOperator	-		103344	0					
ANR	103470	PrimaryExpression	1		103344	1					
ANR	103471	Argument	0		103344	2					
ANR	103472	PrimaryExpression	0		103344	0					
ANR	103473	ReturnType	static void		103344	1					
ANR	103474	Identifier	resolv_sock_state_cb		103344	2					
ANR	103475	ParameterList	"void * data , int s , int read , int write"		103344	3					
ANR	103476	Parameter	void * data	463:21:12252:12261	103344	0	True				
ANR	103477	ParameterType	void *		103344	0					
ANR	103478	Identifier	data		103344	1					
ANR	103479	Parameter	int s	463:33:12264:12268	103344	1	True				
ANR	103480	ParameterType	int		103344	0					
ANR	103481	Identifier	s		103344	1					
ANR	103482	Parameter	int read	463:40:12271:12278	103344	2	True				
ANR	103483	ParameterType	int		103344	0					
ANR	103484	Identifier	read		103344	1					
ANR	103485	Parameter	int write	463:50:12281:12289	103344	3	True				
ANR	103486	ParameterType	int		103344	0					
ANR	103487	Identifier	write		103344	1					
ANR	103488	CFGEntryNode	ENTRY		103344		True				
ANR	103489	CFGExitNode	EXIT		103344		True				
ANR	103490	Symbol	ctx -> io		103344						
ANR	103491	Symbol	read		103344						
ANR	103492	Symbol	data		103344						
ANR	103493	Symbol	EV_WRITE		103344						
ANR	103494	Symbol	ctx -> io . fd		103344						
ANR	103495	Symbol	ctx		103344						
ANR	103496	Symbol	EV_READ		103344						
ANR	103497	Symbol	io_active		103344						
ANR	103498	Symbol	* ctx		103344						
ANR	103499	Symbol	s		103344						
ANR	103500	Symbol	ev_is_active		103344						
ANR	103501	Symbol	default_loop		103344						
ANR	103502	Symbol	write		103344						
ANR	103503	Symbol	& ctx -> io		103344						
