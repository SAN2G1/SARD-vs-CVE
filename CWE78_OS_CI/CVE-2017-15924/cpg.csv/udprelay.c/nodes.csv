command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	142247	File	data/converged/CVE-2017-15924_shadowsocks-libev/udprelay.c								
ANR	142248	DeclStmt									
ANR	142249	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	server_recv_cb
ANR	142250	DeclStmt									
ANR	142251	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	remote_recv_cb
ANR	142252	DeclStmt									
ANR	142253	Decl							void	"void ( EV_P_ ev_timer * watcher , int revents )"	remote_timeout_cb
ANR	142254	DeclStmt									
ANR	142255	Decl							char	"char * ( const int af , const struct sockaddr_storage * addr )"	hash_key
ANR	142256	DeclStmt									
ANR	142257	Decl							void	void ( void * data )	resolv_free_cb
ANR	142258	DeclStmt									
ANR	142259	Decl							void	"void ( struct sockaddr * addr , void * data )"	resolv_cb
ANR	142260	DeclStmt									
ANR	142261	Decl							void	void ( EV_P_ remote_ctx_t * ctx )	close_and_free_remote
ANR	142262	DeclStmt									
ANR	142263	Decl							remote_ctx_t	"remote_ctx_t * ( int fd , server_ctx_t * server_ctx )"	new_remote
ANR	142264	DeclStmt									
ANR	142265	Decl							extern uint64_t	extern uint64_t	tx
ANR	142266	DeclStmt									
ANR	142267	Decl							extern uint64_t	extern uint64_t	rx
ANR	142268	DeclStmt									
ANR	142269	Decl							extern int	extern int	vpn
ANR	142270	DeclStmt									
ANR	142271	Decl							extern void	extern void ( )	stat_update_cb
ANR	142272	DeclStmt									
ANR	142273	Decl							extern int	extern int	verbose
ANR	142274	DeclStmt									
ANR	142275	Decl							extern int	extern int	reuse_port
ANR	142276	DeclStmt									
ANR	142277	Decl							extern uint64_t	extern uint64_t	tx
ANR	142278	DeclStmt									
ANR	142279	Decl							extern uint64_t	extern uint64_t	rx
ANR	142280	DeclStmt									
ANR	142281	Decl							int	int	packet_size
ANR	142282	DeclStmt									
ANR	142283	Decl							int	int	buf_size
ANR	142284	DeclStmt									
ANR	142285	Decl							int	int	server_num
ANR	142286	DeclStmt									
ANR	142287	Decl							server_ctx_t	server_ctx_t * [ MAX_REMOTE_NUM ]	server_ctx_list
ANR	142288	Function	setnonblocking	107:0:2799:2975							
ANR	142289	FunctionDef	setnonblocking (int fd)		142288	0					
ANR	142290	CompoundStatement		109:0:2833:2975	142288	0					
ANR	142291	IdentifierDeclStatement	int flags ;	110:4:2839:2848	142288	0	True				
ANR	142292	IdentifierDecl	flags		142288	0					
ANR	142293	IdentifierDeclType	int		142288	0					
ANR	142294	Identifier	flags		142288	1					
ANR	142295	IfStatement	"if ( - 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) ) )"		142288	1					
ANR	142296	Condition	"- 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) )"	111:8:2858:2894	142288	0	True				
ANR	142297	EqualityExpression	"- 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) )"		142288	0		==			
ANR	142298	UnaryOperationExpression	- 1		142288	0					
ANR	142299	UnaryOperator	-		142288	0					
ANR	142300	PrimaryExpression	1		142288	1					
ANR	142301	AssignmentExpression	"flags = fcntl ( fd , F_GETFL , 0 )"		142288	1		=			
ANR	142302	Identifier	flags		142288	0					
ANR	142303	CallExpression	"fcntl ( fd , F_GETFL , 0 )"		142288	1					
ANR	142304	Callee	fcntl		142288	0					
ANR	142305	Identifier	fcntl		142288	0					
ANR	142306	ArgumentList	fd		142288	1					
ANR	142307	Argument	fd		142288	0					
ANR	142308	Identifier	fd		142288	0					
ANR	142309	Argument	F_GETFL		142288	1					
ANR	142310	Identifier	F_GETFL		142288	0					
ANR	142311	Argument	0		142288	2					
ANR	142312	PrimaryExpression	0		142288	0					
ANR	142313	CompoundStatement		3:47:63:63	142288	1					
ANR	142314	ExpressionStatement	flags = 0	112:8:2907:2916	142288	0	True				
ANR	142315	AssignmentExpression	flags = 0		142288	0		=			
ANR	142316	Identifier	flags		142288	0					
ANR	142317	PrimaryExpression	0		142288	1					
ANR	142318	ReturnStatement	"return fcntl ( fd , F_SETFL , flags | O_NONBLOCK ) ;"	114:4:2928:2973	142288	2	True				
ANR	142319	CallExpression	"fcntl ( fd , F_SETFL , flags | O_NONBLOCK )"		142288	0					
ANR	142320	Callee	fcntl		142288	0					
ANR	142321	Identifier	fcntl		142288	0					
ANR	142322	ArgumentList	fd		142288	1					
ANR	142323	Argument	fd		142288	0					
ANR	142324	Identifier	fd		142288	0					
ANR	142325	Argument	F_SETFL		142288	1					
ANR	142326	Identifier	F_SETFL		142288	0					
ANR	142327	Argument	flags | O_NONBLOCK		142288	2					
ANR	142328	InclusiveOrExpression	flags | O_NONBLOCK		142288	0		|			
ANR	142329	Identifier	flags		142288	0					
ANR	142330	Identifier	O_NONBLOCK		142288	1					
ANR	142331	ReturnType	static int		142288	1					
ANR	142332	Identifier	setnonblocking		142288	2					
ANR	142333	ParameterList	int fd		142288	3					
ANR	142334	Parameter	int fd	108:15:2825:2830	142288	0	True				
ANR	142335	ParameterType	int		142288	0					
ANR	142336	Identifier	fd		142288	1					
ANR	142337	CFGEntryNode	ENTRY		142288		True				
ANR	142338	CFGExitNode	EXIT		142288		True				
ANR	142339	Symbol	fcntl		142288						
ANR	142340	Symbol	O_NONBLOCK		142288						
ANR	142341	Symbol	flags		142288						
ANR	142342	Symbol	F_GETFL		142288						
ANR	142343	Symbol	F_SETFL		142288						
ANR	142344	Symbol	fd		142288						
ANR	142345	Function	set_broadcast	118:0:3030:3168							
ANR	142346	FunctionDef	set_broadcast (int socket_fd)		142345	0					
ANR	142347	CompoundStatement		120:0:3070:3168	142345	0					
ANR	142348	IdentifierDeclStatement	int opt = 1 ;	121:4:3076:3087	142345	0	True				
ANR	142349	IdentifierDecl	opt = 1		142345	0					
ANR	142350	IdentifierDeclType	int		142345	0					
ANR	142351	Identifier	opt		142345	1					
ANR	142352	AssignmentExpression	opt = 1		142345	2		=			
ANR	142353	Identifier	opt		142345	0					
ANR	142354	PrimaryExpression	1		142345	1					
ANR	142355	ReturnStatement	"return setsockopt ( socket_fd , SOL_SOCKET , SO_BROADCAST , & opt , sizeof ( opt ) ) ;"	122:4:3093:3166	142345	1	True				
ANR	142356	CallExpression	"setsockopt ( socket_fd , SOL_SOCKET , SO_BROADCAST , & opt , sizeof ( opt ) )"		142345	0					
ANR	142357	Callee	setsockopt		142345	0					
ANR	142358	Identifier	setsockopt		142345	0					
ANR	142359	ArgumentList	socket_fd		142345	1					
ANR	142360	Argument	socket_fd		142345	0					
ANR	142361	Identifier	socket_fd		142345	0					
ANR	142362	Argument	SOL_SOCKET		142345	1					
ANR	142363	Identifier	SOL_SOCKET		142345	0					
ANR	142364	Argument	SO_BROADCAST		142345	2					
ANR	142365	Identifier	SO_BROADCAST		142345	0					
ANR	142366	Argument	& opt		142345	3					
ANR	142367	UnaryOperationExpression	& opt		142345	0					
ANR	142368	UnaryOperator	&		142345	0					
ANR	142369	Identifier	opt		142345	1					
ANR	142370	Argument	sizeof ( opt )		142345	4					
ANR	142371	SizeofExpression	sizeof ( opt )		142345	0					
ANR	142372	Sizeof	sizeof		142345	0					
ANR	142373	SizeofOperand	opt		142345	1					
ANR	142374	ReturnType	static int		142345	1					
ANR	142375	Identifier	set_broadcast		142345	2					
ANR	142376	ParameterList	int socket_fd		142345	3					
ANR	142377	Parameter	int socket_fd	119:14:3055:3067	142345	0	True				
ANR	142378	ParameterType	int		142345	0					
ANR	142379	Identifier	socket_fd		142345	1					
ANR	142380	CFGEntryNode	ENTRY		142345		True				
ANR	142381	CFGExitNode	EXIT		142345		True				
ANR	142382	Symbol	SOL_SOCKET		142345						
ANR	142383	Symbol	opt		142345						
ANR	142384	Symbol	SO_BROADCAST		142345						
ANR	142385	Symbol	setsockopt		142345						
ANR	142386	Symbol	& opt		142345						
ANR	142387	Symbol	socket_fd		142345						
ANR	142388	Function	set_nosigpipe	128:0:3199:3337							
ANR	142389	FunctionDef	set_nosigpipe (int socket_fd)		142388	0					
ANR	142390	CompoundStatement		130:0:3239:3337	142388	0					
ANR	142391	IdentifierDeclStatement	int opt = 1 ;	131:4:3245:3256	142388	0	True				
ANR	142392	IdentifierDecl	opt = 1		142388	0					
ANR	142393	IdentifierDeclType	int		142388	0					
ANR	142394	Identifier	opt		142388	1					
ANR	142395	AssignmentExpression	opt = 1		142388	2		=			
ANR	142396	Identifier	opt		142388	0					
ANR	142397	PrimaryExpression	1		142388	1					
ANR	142398	ReturnStatement	"return setsockopt ( socket_fd , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) ) ;"	132:4:3262:3335	142388	1	True				
ANR	142399	CallExpression	"setsockopt ( socket_fd , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"		142388	0					
ANR	142400	Callee	setsockopt		142388	0					
ANR	142401	Identifier	setsockopt		142388	0					
ANR	142402	ArgumentList	socket_fd		142388	1					
ANR	142403	Argument	socket_fd		142388	0					
ANR	142404	Identifier	socket_fd		142388	0					
ANR	142405	Argument	SOL_SOCKET		142388	1					
ANR	142406	Identifier	SOL_SOCKET		142388	0					
ANR	142407	Argument	SO_NOSIGPIPE		142388	2					
ANR	142408	Identifier	SO_NOSIGPIPE		142388	0					
ANR	142409	Argument	& opt		142388	3					
ANR	142410	UnaryOperationExpression	& opt		142388	0					
ANR	142411	UnaryOperator	&		142388	0					
ANR	142412	Identifier	opt		142388	1					
ANR	142413	Argument	sizeof ( opt )		142388	4					
ANR	142414	SizeofExpression	sizeof ( opt )		142388	0					
ANR	142415	Sizeof	sizeof		142388	0					
ANR	142416	SizeofOperand	opt		142388	1					
ANR	142417	ReturnType	static int		142388	1					
ANR	142418	Identifier	set_nosigpipe		142388	2					
ANR	142419	ParameterList	int socket_fd		142388	3					
ANR	142420	Parameter	int socket_fd	129:14:3224:3236	142388	0	True				
ANR	142421	ParameterType	int		142388	0					
ANR	142422	Identifier	socket_fd		142388	1					
ANR	142423	CFGEntryNode	ENTRY		142388		True				
ANR	142424	CFGExitNode	EXIT		142388		True				
ANR	142425	Symbol	SOL_SOCKET		142388						
ANR	142426	Symbol	opt		142388						
ANR	142427	Symbol	SO_NOSIGPIPE		142388						
ANR	142428	Symbol	setsockopt		142388						
ANR	142429	Symbol	& opt		142388						
ANR	142430	Symbol	socket_fd		142388						
ANR	142431	Function	get_dstaddr	159:0:3736:4403							
ANR	142432	FunctionDef	"get_dstaddr (struct msghdr * msg , struct sockaddr_storage * dstaddr)"		142431	0					
ANR	142433	CompoundStatement		161:0:3813:4403	142431	0					
ANR	142434	IdentifierDeclStatement	struct cmsghdr * cmsg ;	162:4:3819:3839	142431	0	True				
ANR	142435	IdentifierDecl	* cmsg		142431	0					
ANR	142436	IdentifierDeclType	struct cmsghdr *		142431	0					
ANR	142437	Identifier	cmsg		142431	1					
ANR	142438	ForStatement	"for ( cmsg = CMSG_FIRSTHDR ( msg ) ; cmsg ; cmsg = CMSG_NXTHDR ( msg , cmsg ) )"		142431	1					
ANR	142439	ForInit	cmsg = CMSG_FIRSTHDR ( msg ) ;	164:9:3851:3876	142431	0	True				
ANR	142440	AssignmentExpression	cmsg = CMSG_FIRSTHDR ( msg )		142431	0		=			
ANR	142441	Identifier	cmsg		142431	0					
ANR	142442	CallExpression	CMSG_FIRSTHDR ( msg )		142431	1					
ANR	142443	Callee	CMSG_FIRSTHDR		142431	0					
ANR	142444	Identifier	CMSG_FIRSTHDR		142431	0					
ANR	142445	ArgumentList	msg		142431	1					
ANR	142446	Argument	msg		142431	0					
ANR	142447	Identifier	msg		142431	0					
ANR	142448	Condition	cmsg	164:36:3878:3881	142431	1	True				
ANR	142449	Identifier	cmsg		142431	0					
ANR	142450	AssignmentExpression	"cmsg = CMSG_NXTHDR ( msg , cmsg )"	164:42:3884:3912	142431	2	True	=			
ANR	142451	Identifier	cmsg		142431	0					
ANR	142452	CallExpression	"CMSG_NXTHDR ( msg , cmsg )"		142431	1					
ANR	142453	Callee	CMSG_NXTHDR		142431	0					
ANR	142454	Identifier	CMSG_NXTHDR		142431	0					
ANR	142455	ArgumentList	msg		142431	1					
ANR	142456	Argument	msg		142431	0					
ANR	142457	Identifier	msg		142431	0					
ANR	142458	Argument	cmsg		142431	1					
ANR	142459	Identifier	cmsg		142431	0					
ANR	142460	CompoundStatement		4:73:101:101	142431	3					
ANR	142461	IfStatement	if ( cmsg -> cmsg_level == SOL_IP && cmsg -> cmsg_type == IP_RECVORIGDSTADDR )		142431	0					
ANR	142462	Condition	cmsg -> cmsg_level == SOL_IP && cmsg -> cmsg_type == IP_RECVORIGDSTADDR	165:12:3929:3995	142431	0	True				
ANR	142463	AndExpression	cmsg -> cmsg_level == SOL_IP && cmsg -> cmsg_type == IP_RECVORIGDSTADDR		142431	0		&&			
ANR	142464	EqualityExpression	cmsg -> cmsg_level == SOL_IP		142431	0		==			
ANR	142465	PtrMemberAccess	cmsg -> cmsg_level		142431	0					
ANR	142466	Identifier	cmsg		142431	0					
ANR	142467	Identifier	cmsg_level		142431	1					
ANR	142468	Identifier	SOL_IP		142431	1					
ANR	142469	EqualityExpression	cmsg -> cmsg_type == IP_RECVORIGDSTADDR		142431	1		==			
ANR	142470	PtrMemberAccess	cmsg -> cmsg_type		142431	0					
ANR	142471	Identifier	cmsg		142431	0					
ANR	142472	Identifier	cmsg_type		142431	1					
ANR	142473	Identifier	IP_RECVORIGDSTADDR		142431	1					
ANR	142474	CompoundStatement		5:81:184:184	142431	1					
ANR	142475	ExpressionStatement	"memcpy ( dstaddr , CMSG_DATA ( cmsg ) , sizeof ( struct sockaddr_in ) )"	166:12:4012:4072	142431	0	True				
ANR	142476	CallExpression	"memcpy ( dstaddr , CMSG_DATA ( cmsg ) , sizeof ( struct sockaddr_in ) )"		142431	0					
ANR	142477	Callee	memcpy		142431	0					
ANR	142478	Identifier	memcpy		142431	0					
ANR	142479	ArgumentList	dstaddr		142431	1					
ANR	142480	Argument	dstaddr		142431	0					
ANR	142481	Identifier	dstaddr		142431	0					
ANR	142482	Argument	CMSG_DATA ( cmsg )		142431	1					
ANR	142483	CallExpression	CMSG_DATA ( cmsg )		142431	0					
ANR	142484	Callee	CMSG_DATA		142431	0					
ANR	142485	Identifier	CMSG_DATA		142431	0					
ANR	142486	ArgumentList	cmsg		142431	1					
ANR	142487	Argument	cmsg		142431	0					
ANR	142488	Identifier	cmsg		142431	0					
ANR	142489	Argument	sizeof ( struct sockaddr_in )		142431	2					
ANR	142490	SizeofExpression	sizeof ( struct sockaddr_in )		142431	0					
ANR	142491	Sizeof	sizeof		142431	0					
ANR	142492	SizeofOperand	struct sockaddr_in		142431	1					
ANR	142493	ExpressionStatement	dstaddr -> ss_family = AF_INET	167:12:4086:4114	142431	1	True				
ANR	142494	AssignmentExpression	dstaddr -> ss_family = AF_INET		142431	0		=			
ANR	142495	PtrMemberAccess	dstaddr -> ss_family		142431	0					
ANR	142496	Identifier	dstaddr		142431	0					
ANR	142497	Identifier	ss_family		142431	1					
ANR	142498	Identifier	AF_INET		142431	1					
ANR	142499	ReturnStatement	return 0 ;	168:12:4128:4136	142431	2	True				
ANR	142500	PrimaryExpression	0		142431	0					
ANR	142501	ElseStatement	else		142431	0					
ANR	142502	IfStatement	if ( cmsg -> cmsg_level == SOL_IPV6 && cmsg -> cmsg_type == IPV6_RECVORIGDSTADDR )		142431	0					
ANR	142503	Condition	cmsg -> cmsg_level == SOL_IPV6 && cmsg -> cmsg_type == IPV6_RECVORIGDSTADDR	169:19:4157:4227	142431	0	True				
ANR	142504	AndExpression	cmsg -> cmsg_level == SOL_IPV6 && cmsg -> cmsg_type == IPV6_RECVORIGDSTADDR		142431	0		&&			
ANR	142505	EqualityExpression	cmsg -> cmsg_level == SOL_IPV6		142431	0		==			
ANR	142506	PtrMemberAccess	cmsg -> cmsg_level		142431	0					
ANR	142507	Identifier	cmsg		142431	0					
ANR	142508	Identifier	cmsg_level		142431	1					
ANR	142509	Identifier	SOL_IPV6		142431	1					
ANR	142510	EqualityExpression	cmsg -> cmsg_type == IPV6_RECVORIGDSTADDR		142431	1		==			
ANR	142511	PtrMemberAccess	cmsg -> cmsg_type		142431	0					
ANR	142512	Identifier	cmsg		142431	0					
ANR	142513	Identifier	cmsg_type		142431	1					
ANR	142514	Identifier	IPV6_RECVORIGDSTADDR		142431	1					
ANR	142515	CompoundStatement		9:92:416:416	142431	1					
ANR	142516	ExpressionStatement	"memcpy ( dstaddr , CMSG_DATA ( cmsg ) , sizeof ( struct sockaddr_in6 ) )"	170:12:4244:4305	142431	0	True				
ANR	142517	CallExpression	"memcpy ( dstaddr , CMSG_DATA ( cmsg ) , sizeof ( struct sockaddr_in6 ) )"		142431	0					
ANR	142518	Callee	memcpy		142431	0					
ANR	142519	Identifier	memcpy		142431	0					
ANR	142520	ArgumentList	dstaddr		142431	1					
ANR	142521	Argument	dstaddr		142431	0					
ANR	142522	Identifier	dstaddr		142431	0					
ANR	142523	Argument	CMSG_DATA ( cmsg )		142431	1					
ANR	142524	CallExpression	CMSG_DATA ( cmsg )		142431	0					
ANR	142525	Callee	CMSG_DATA		142431	0					
ANR	142526	Identifier	CMSG_DATA		142431	0					
ANR	142527	ArgumentList	cmsg		142431	1					
ANR	142528	Argument	cmsg		142431	0					
ANR	142529	Identifier	cmsg		142431	0					
ANR	142530	Argument	sizeof ( struct sockaddr_in6 )		142431	2					
ANR	142531	SizeofExpression	sizeof ( struct sockaddr_in6 )		142431	0					
ANR	142532	Sizeof	sizeof		142431	0					
ANR	142533	SizeofOperand	struct sockaddr_in6		142431	1					
ANR	142534	ExpressionStatement	dstaddr -> ss_family = AF_INET6	171:12:4319:4348	142431	1	True				
ANR	142535	AssignmentExpression	dstaddr -> ss_family = AF_INET6		142431	0		=			
ANR	142536	PtrMemberAccess	dstaddr -> ss_family		142431	0					
ANR	142537	Identifier	dstaddr		142431	0					
ANR	142538	Identifier	ss_family		142431	1					
ANR	142539	Identifier	AF_INET6		142431	1					
ANR	142540	ReturnStatement	return 0 ;	172:12:4362:4370	142431	2	True				
ANR	142541	PrimaryExpression	0		142431	0					
ANR	142542	ReturnStatement	return 1 ;	176:4:4393:4401	142431	2	True				
ANR	142543	PrimaryExpression	1		142431	0					
ANR	142544	ReturnType	static int		142431	1					
ANR	142545	Identifier	get_dstaddr		142431	2					
ANR	142546	ParameterList	"struct msghdr * msg , struct sockaddr_storage * dstaddr"		142431	3					
ANR	142547	Parameter	struct msghdr * msg	160:12:3759:3776	142431	0	True				
ANR	142548	ParameterType	struct msghdr *		142431	0					
ANR	142549	Identifier	msg		142431	1					
ANR	142550	Parameter	struct sockaddr_storage * dstaddr	160:32:3779:3810	142431	1	True				
ANR	142551	ParameterType	struct sockaddr_storage *		142431	0					
ANR	142552	Identifier	dstaddr		142431	1					
ANR	142553	CFGEntryNode	ENTRY		142431		True				
ANR	142554	CFGExitNode	EXIT		142431		True				
ANR	142555	Symbol	msg		142431						
ANR	142556	Symbol	CMSG_DATA		142431						
ANR	142557	Symbol	CMSG_FIRSTHDR		142431						
ANR	142558	Symbol	IP_RECVORIGDSTADDR		142431						
ANR	142559	Symbol	* cmsg		142431						
ANR	142560	Symbol	SOL_IP		142431						
ANR	142561	Symbol	dstaddr		142431						
ANR	142562	Symbol	IPV6_RECVORIGDSTADDR		142431						
ANR	142563	Symbol	cmsg -> cmsg_level		142431						
ANR	142564	Symbol	AF_INET		142431						
ANR	142565	Symbol	SOL_IPV6		142431						
ANR	142566	Symbol	AF_INET6		142431						
ANR	142567	Symbol	cmsg		142431						
ANR	142568	Symbol	CMSG_NXTHDR		142431						
ANR	142569	Symbol	cmsg -> cmsg_type		142431						
ANR	142570	Symbol	dstaddr -> ss_family		142431						
ANR	142571	Symbol	* dstaddr		142431						
ANR	142572	Function	hash_key	182:0:4481:4798							
ANR	142573	FunctionDef	"hash_key (const int af , const struct sockaddr_storage * addr)"		142572	0					
ANR	142574	CompoundStatement		184:0:4555:4798	142572	0					
ANR	142575	IdentifierDeclStatement	size_t addr_len = sizeof ( struct sockaddr_storage ) ;	185:4:4561:4610	142572	0	True				
ANR	142576	IdentifierDecl	addr_len = sizeof ( struct sockaddr_storage )		142572	0					
ANR	142577	IdentifierDeclType	size_t		142572	0					
ANR	142578	Identifier	addr_len		142572	1					
ANR	142579	AssignmentExpression	addr_len = sizeof ( struct sockaddr_storage )		142572	2		=			
ANR	142580	Identifier	addr_len		142572	0					
ANR	142581	SizeofExpression	sizeof ( struct sockaddr_storage )		142572	1					
ANR	142582	Sizeof	sizeof		142572	0					
ANR	142583	SizeofOperand	struct sockaddr_storage		142572	1					
ANR	142584	Statement	static	186:4:4616:4621	142572	1	True				
ANR	142585	IdentifierDeclStatement	char key [ HASH_KEY_LEN ] ;	186:11:4623:4645	142572	2	True				
ANR	142586	IdentifierDecl	key [ HASH_KEY_LEN ]		142572	0					
ANR	142587	IdentifierDeclType	char [ HASH_KEY_LEN ]		142572	0					
ANR	142588	Identifier	key		142572	1					
ANR	142589	Identifier	HASH_KEY_LEN		142572	2					
ANR	142590	ExpressionStatement	"memset ( key , 0 , HASH_KEY_LEN )"	188:4:4652:4680	142572	3	True				
ANR	142591	CallExpression	"memset ( key , 0 , HASH_KEY_LEN )"		142572	0					
ANR	142592	Callee	memset		142572	0					
ANR	142593	Identifier	memset		142572	0					
ANR	142594	ArgumentList	key		142572	1					
ANR	142595	Argument	key		142572	0					
ANR	142596	Identifier	key		142572	0					
ANR	142597	Argument	0		142572	1					
ANR	142598	PrimaryExpression	0		142572	0					
ANR	142599	Argument	HASH_KEY_LEN		142572	2					
ANR	142600	Identifier	HASH_KEY_LEN		142572	0					
ANR	142601	ExpressionStatement	"memcpy ( key , & af , sizeof ( int ) )"	189:4:4686:4715	142572	4	True				
ANR	142602	CallExpression	"memcpy ( key , & af , sizeof ( int ) )"		142572	0					
ANR	142603	Callee	memcpy		142572	0					
ANR	142604	Identifier	memcpy		142572	0					
ANR	142605	ArgumentList	key		142572	1					
ANR	142606	Argument	key		142572	0					
ANR	142607	Identifier	key		142572	0					
ANR	142608	Argument	& af		142572	1					
ANR	142609	UnaryOperationExpression	& af		142572	0					
ANR	142610	UnaryOperator	&		142572	0					
ANR	142611	Identifier	af		142572	1					
ANR	142612	Argument	sizeof ( int )		142572	2					
ANR	142613	SizeofExpression	sizeof ( int )		142572	0					
ANR	142614	Sizeof	sizeof		142572	0					
ANR	142615	SizeofOperand	int		142572	1					
ANR	142616	ExpressionStatement	"memcpy ( key + sizeof ( int ) , ( const uint8_t * ) addr , addr_len )"	190:4:4721:4779	142572	5	True				
ANR	142617	CallExpression	"memcpy ( key + sizeof ( int ) , ( const uint8_t * ) addr , addr_len )"		142572	0					
ANR	142618	Callee	memcpy		142572	0					
ANR	142619	Identifier	memcpy		142572	0					
ANR	142620	ArgumentList	key + sizeof ( int )		142572	1					
ANR	142621	Argument	key + sizeof ( int )		142572	0					
ANR	142622	AdditiveExpression	key + sizeof ( int )		142572	0		+			
ANR	142623	Identifier	key		142572	0					
ANR	142624	SizeofExpression	sizeof ( int )		142572	1					
ANR	142625	Sizeof	sizeof		142572	0					
ANR	142626	SizeofOperand	int		142572	1					
ANR	142627	Argument	( const uint8_t * ) addr		142572	1					
ANR	142628	CastExpression	( const uint8_t * ) addr		142572	0					
ANR	142629	CastTarget	const uint8_t *		142572	0					
ANR	142630	Identifier	addr		142572	1					
ANR	142631	Argument	addr_len		142572	2					
ANR	142632	Identifier	addr_len		142572	0					
ANR	142633	ReturnStatement	return key ;	192:4:4786:4796	142572	6	True				
ANR	142634	Identifier	key		142572	0					
ANR	142635	ReturnType	static char *		142572	1					
ANR	142636	Identifier	hash_key		142572	2					
ANR	142637	ParameterList	"const int af , const struct sockaddr_storage * addr"		142572	3					
ANR	142638	Parameter	const int af	183:9:4504:4515	142572	0	True				
ANR	142639	ParameterType	const int		142572	0					
ANR	142640	Identifier	af		142572	1					
ANR	142641	Parameter	const struct sockaddr_storage * addr	183:23:4518:4552	142572	1	True				
ANR	142642	ParameterType	const struct sockaddr_storage *		142572	0					
ANR	142643	Identifier	addr		142572	1					
ANR	142644	CFGEntryNode	ENTRY		142572		True				
ANR	142645	CFGExitNode	EXIT		142572		True				
ANR	142646	Symbol	af		142572						
ANR	142647	Symbol	addr		142572						
ANR	142648	Symbol	addr_len		142572						
ANR	142649	Symbol	key		142572						
ANR	142650	Symbol	HASH_KEY_LEN		142572						
ANR	142651	Symbol	& af		142572						
ANR	142652	Function	construct_udprelay_header	196:0:4827:5895							
ANR	142653	FunctionDef	"construct_udprelay_header (const struct sockaddr_storage * in_addr , char * addr_header)"		142652	0					
ANR	142654	CompoundStatement		199:0:4949:5895	142652	0					
ANR	142655	IdentifierDeclStatement	int addr_header_len = 0 ;	200:4:4955:4978	142652	0	True				
ANR	142656	IdentifierDecl	addr_header_len = 0		142652	0					
ANR	142657	IdentifierDeclType	int		142652	0					
ANR	142658	Identifier	addr_header_len		142652	1					
ANR	142659	AssignmentExpression	addr_header_len = 0		142652	2		=			
ANR	142660	Identifier	addr_header_len		142652	0					
ANR	142661	PrimaryExpression	0		142652	1					
ANR	142662	IfStatement	if ( in_addr -> ss_family == AF_INET )		142652	1					
ANR	142663	Condition	in_addr -> ss_family == AF_INET	201:8:4988:5016	142652	0	True				
ANR	142664	EqualityExpression	in_addr -> ss_family == AF_INET		142652	0		==			
ANR	142665	PtrMemberAccess	in_addr -> ss_family		142652	0					
ANR	142666	Identifier	in_addr		142652	0					
ANR	142667	Identifier	ss_family		142652	1					
ANR	142668	Identifier	AF_INET		142652	1					
ANR	142669	CompoundStatement		5:8:145:194	142652	1					
ANR	142670	IdentifierDeclStatement	struct sockaddr_in * addr = ( struct sockaddr_in * ) in_addr ;	202:8:5029:5085	142652	0	True				
ANR	142671	IdentifierDecl	* addr = ( struct sockaddr_in * ) in_addr		142652	0					
ANR	142672	IdentifierDeclType	struct sockaddr_in *		142652	0					
ANR	142673	Identifier	addr		142652	1					
ANR	142674	AssignmentExpression	* addr = ( struct sockaddr_in * ) in_addr		142652	2		=			
ANR	142675	Identifier	addr		142652	0					
ANR	142676	CastExpression	( struct sockaddr_in * ) in_addr		142652	1					
ANR	142677	CastTarget	struct sockaddr_in *		142652	0					
ANR	142678	Identifier	in_addr		142652	1					
ANR	142679	IdentifierDeclStatement	size_t addr_len = sizeof ( struct in_addr ) ;	203:8:5095:5144	142652	1	True				
ANR	142680	IdentifierDecl	addr_len = sizeof ( struct in_addr )		142652	0					
ANR	142681	IdentifierDeclType	size_t		142652	0					
ANR	142682	Identifier	addr_len		142652	1					
ANR	142683	AssignmentExpression	addr_len = sizeof ( struct in_addr )		142652	2		=			
ANR	142684	Identifier	addr_len		142652	0					
ANR	142685	SizeofExpression	sizeof ( struct in_addr )		142652	1					
ANR	142686	Sizeof	sizeof		142652	0					
ANR	142687	SizeofOperand	struct in_addr		142652	1					
ANR	142688	ExpressionStatement	addr_header [ addr_header_len ++ ] = 1	204:8:5154:5188	142652	2	True				
ANR	142689	AssignmentExpression	addr_header [ addr_header_len ++ ] = 1		142652	0		=			
ANR	142690	ArrayIndexing	addr_header [ addr_header_len ++ ]		142652	0					
ANR	142691	Identifier	addr_header		142652	0					
ANR	142692	PostIncDecOperationExpression	addr_header_len ++		142652	1					
ANR	142693	Identifier	addr_header_len		142652	0					
ANR	142694	IncDec	++		142652	1					
ANR	142695	PrimaryExpression	1		142652	1					
ANR	142696	ExpressionStatement	"memcpy ( addr_header + addr_header_len , & addr -> sin_addr , addr_len )"	205:8:5198:5262	142652	3	True				
ANR	142697	CallExpression	"memcpy ( addr_header + addr_header_len , & addr -> sin_addr , addr_len )"		142652	0					
ANR	142698	Callee	memcpy		142652	0					
ANR	142699	Identifier	memcpy		142652	0					
ANR	142700	ArgumentList	addr_header + addr_header_len		142652	1					
ANR	142701	Argument	addr_header + addr_header_len		142652	0					
ANR	142702	AdditiveExpression	addr_header + addr_header_len		142652	0		+			
ANR	142703	Identifier	addr_header		142652	0					
ANR	142704	Identifier	addr_header_len		142652	1					
ANR	142705	Argument	& addr -> sin_addr		142652	1					
ANR	142706	UnaryOperationExpression	& addr -> sin_addr		142652	0					
ANR	142707	UnaryOperator	&		142652	0					
ANR	142708	PtrMemberAccess	addr -> sin_addr		142652	1					
ANR	142709	Identifier	addr		142652	0					
ANR	142710	Identifier	sin_addr		142652	1					
ANR	142711	Argument	addr_len		142652	2					
ANR	142712	Identifier	addr_len		142652	0					
ANR	142713	ExpressionStatement	addr_header_len += addr_len	206:8:5272:5299	142652	4	True				
ANR	142714	AssignmentExpression	addr_header_len += addr_len		142652	0		+=			
ANR	142715	Identifier	addr_header_len		142652	0					
ANR	142716	Identifier	addr_len		142652	1					
ANR	142717	ExpressionStatement	"memcpy ( addr_header + addr_header_len , & addr -> sin_port , 2 )"	207:8:5309:5366	142652	5	True				
ANR	142718	CallExpression	"memcpy ( addr_header + addr_header_len , & addr -> sin_port , 2 )"		142652	0					
ANR	142719	Callee	memcpy		142652	0					
ANR	142720	Identifier	memcpy		142652	0					
ANR	142721	ArgumentList	addr_header + addr_header_len		142652	1					
ANR	142722	Argument	addr_header + addr_header_len		142652	0					
ANR	142723	AdditiveExpression	addr_header + addr_header_len		142652	0		+			
ANR	142724	Identifier	addr_header		142652	0					
ANR	142725	Identifier	addr_header_len		142652	1					
ANR	142726	Argument	& addr -> sin_port		142652	1					
ANR	142727	UnaryOperationExpression	& addr -> sin_port		142652	0					
ANR	142728	UnaryOperator	&		142652	0					
ANR	142729	PtrMemberAccess	addr -> sin_port		142652	1					
ANR	142730	Identifier	addr		142652	0					
ANR	142731	Identifier	sin_port		142652	1					
ANR	142732	Argument	2		142652	2					
ANR	142733	PrimaryExpression	2		142652	0					
ANR	142734	ExpressionStatement	addr_header_len += 2	208:8:5376:5396	142652	6	True				
ANR	142735	AssignmentExpression	addr_header_len += 2		142652	0		+=			
ANR	142736	Identifier	addr_header_len		142652	0					
ANR	142737	PrimaryExpression	2		142652	1					
ANR	142738	ElseStatement	else		142652	0					
ANR	142739	IfStatement	if ( in_addr -> ss_family == AF_INET6 )		142652	0					
ANR	142740	Condition	in_addr -> ss_family == AF_INET6	209:15:5413:5442	142652	0	True				
ANR	142741	EqualityExpression	in_addr -> ss_family == AF_INET6		142652	0		==			
ANR	142742	PtrMemberAccess	in_addr -> ss_family		142652	0					
ANR	142743	Identifier	in_addr		142652	0					
ANR	142744	Identifier	ss_family		142652	1					
ANR	142745	Identifier	AF_INET6		142652	1					
ANR	142746	CompoundStatement		13:8:573:624	142652	1					
ANR	142747	IdentifierDeclStatement	struct sockaddr_in6 * addr = ( struct sockaddr_in6 * ) in_addr ;	210:8:5455:5513	142652	0	True				
ANR	142748	IdentifierDecl	* addr = ( struct sockaddr_in6 * ) in_addr		142652	0					
ANR	142749	IdentifierDeclType	struct sockaddr_in6 *		142652	0					
ANR	142750	Identifier	addr		142652	1					
ANR	142751	AssignmentExpression	* addr = ( struct sockaddr_in6 * ) in_addr		142652	2		=			
ANR	142752	Identifier	addr		142652	0					
ANR	142753	CastExpression	( struct sockaddr_in6 * ) in_addr		142652	1					
ANR	142754	CastTarget	struct sockaddr_in6 *		142652	0					
ANR	142755	Identifier	in_addr		142652	1					
ANR	142756	IdentifierDeclStatement	size_t addr_len = sizeof ( struct in6_addr ) ;	211:8:5523:5574	142652	1	True				
ANR	142757	IdentifierDecl	addr_len = sizeof ( struct in6_addr )		142652	0					
ANR	142758	IdentifierDeclType	size_t		142652	0					
ANR	142759	Identifier	addr_len		142652	1					
ANR	142760	AssignmentExpression	addr_len = sizeof ( struct in6_addr )		142652	2		=			
ANR	142761	Identifier	addr_len		142652	0					
ANR	142762	SizeofExpression	sizeof ( struct in6_addr )		142652	1					
ANR	142763	Sizeof	sizeof		142652	0					
ANR	142764	SizeofOperand	struct in6_addr		142652	1					
ANR	142765	ExpressionStatement	addr_header [ addr_header_len ++ ] = 4	212:8:5584:5618	142652	2	True				
ANR	142766	AssignmentExpression	addr_header [ addr_header_len ++ ] = 4		142652	0		=			
ANR	142767	ArrayIndexing	addr_header [ addr_header_len ++ ]		142652	0					
ANR	142768	Identifier	addr_header		142652	0					
ANR	142769	PostIncDecOperationExpression	addr_header_len ++		142652	1					
ANR	142770	Identifier	addr_header_len		142652	0					
ANR	142771	IncDec	++		142652	1					
ANR	142772	PrimaryExpression	4		142652	1					
ANR	142773	ExpressionStatement	"memcpy ( addr_header + addr_header_len , & addr -> sin6_addr , addr_len )"	213:8:5628:5693	142652	3	True				
ANR	142774	CallExpression	"memcpy ( addr_header + addr_header_len , & addr -> sin6_addr , addr_len )"		142652	0					
ANR	142775	Callee	memcpy		142652	0					
ANR	142776	Identifier	memcpy		142652	0					
ANR	142777	ArgumentList	addr_header + addr_header_len		142652	1					
ANR	142778	Argument	addr_header + addr_header_len		142652	0					
ANR	142779	AdditiveExpression	addr_header + addr_header_len		142652	0		+			
ANR	142780	Identifier	addr_header		142652	0					
ANR	142781	Identifier	addr_header_len		142652	1					
ANR	142782	Argument	& addr -> sin6_addr		142652	1					
ANR	142783	UnaryOperationExpression	& addr -> sin6_addr		142652	0					
ANR	142784	UnaryOperator	&		142652	0					
ANR	142785	PtrMemberAccess	addr -> sin6_addr		142652	1					
ANR	142786	Identifier	addr		142652	0					
ANR	142787	Identifier	sin6_addr		142652	1					
ANR	142788	Argument	addr_len		142652	2					
ANR	142789	Identifier	addr_len		142652	0					
ANR	142790	ExpressionStatement	addr_header_len += addr_len	214:8:5703:5730	142652	4	True				
ANR	142791	AssignmentExpression	addr_header_len += addr_len		142652	0		+=			
ANR	142792	Identifier	addr_header_len		142652	0					
ANR	142793	Identifier	addr_len		142652	1					
ANR	142794	ExpressionStatement	"memcpy ( addr_header + addr_header_len , & addr -> sin6_port , 2 )"	215:8:5740:5798	142652	5	True				
ANR	142795	CallExpression	"memcpy ( addr_header + addr_header_len , & addr -> sin6_port , 2 )"		142652	0					
ANR	142796	Callee	memcpy		142652	0					
ANR	142797	Identifier	memcpy		142652	0					
ANR	142798	ArgumentList	addr_header + addr_header_len		142652	1					
ANR	142799	Argument	addr_header + addr_header_len		142652	0					
ANR	142800	AdditiveExpression	addr_header + addr_header_len		142652	0		+			
ANR	142801	Identifier	addr_header		142652	0					
ANR	142802	Identifier	addr_header_len		142652	1					
ANR	142803	Argument	& addr -> sin6_port		142652	1					
ANR	142804	UnaryOperationExpression	& addr -> sin6_port		142652	0					
ANR	142805	UnaryOperator	&		142652	0					
ANR	142806	PtrMemberAccess	addr -> sin6_port		142652	1					
ANR	142807	Identifier	addr		142652	0					
ANR	142808	Identifier	sin6_port		142652	1					
ANR	142809	Argument	2		142652	2					
ANR	142810	PrimaryExpression	2		142652	0					
ANR	142811	ExpressionStatement	addr_header_len += 2	216:8:5808:5828	142652	6	True				
ANR	142812	AssignmentExpression	addr_header_len += 2		142652	0		+=			
ANR	142813	Identifier	addr_header_len		142652	0					
ANR	142814	PrimaryExpression	2		142652	1					
ANR	142815	ElseStatement	else		142652	0					
ANR	142816	CompoundStatement		19:11:891:891	142652	0					
ANR	142817	ReturnStatement	return 0 ;	218:8:5851:5859	142652	0	True				
ANR	142818	PrimaryExpression	0		142652	0					
ANR	142819	ReturnStatement	return addr_header_len ;	220:4:5871:5893	142652	2	True				
ANR	142820	Identifier	addr_header_len		142652	0					
ANR	142821	ReturnType	static int		142652	1					
ANR	142822	Identifier	construct_udprelay_header		142652	2					
ANR	142823	ParameterList	"const struct sockaddr_storage * in_addr , char * addr_header"		142652	3					
ANR	142824	Parameter	const struct sockaddr_storage * in_addr	197:26:4864:4901	142652	0	True				
ANR	142825	ParameterType	const struct sockaddr_storage *		142652	0					
ANR	142826	Identifier	in_addr		142652	1					
ANR	142827	Parameter	char * addr_header	198:26:4930:4946	142652	1	True				
ANR	142828	ParameterType	char *		142652	0					
ANR	142829	Identifier	addr_header		142652	1					
ANR	142830	CFGEntryNode	ENTRY		142652		True				
ANR	142831	CFGExitNode	EXIT		142652		True				
ANR	142832	Symbol	in_addr		142652						
ANR	142833	Symbol	& addr -> sin6_addr		142652						
ANR	142834	Symbol	addr_header_len		142652						
ANR	142835	Symbol	addr_header		142652						
ANR	142836	Symbol	AF_INET		142652						
ANR	142837	Symbol	in_addr -> ss_family		142652						
ANR	142838	Symbol	AF_INET6		142652						
ANR	142839	Symbol	& addr -> sin_port		142652						
ANR	142840	Symbol	* addr_header		142652						
ANR	142841	Symbol	& addr -> sin6_port		142652						
ANR	142842	Symbol	& addr -> sin_addr		142652						
ANR	142843	Symbol	addr		142652						
ANR	142844	Symbol	* in_addr		142652						
ANR	142845	Symbol	addr_len		142652						
ANR	142846	Function	parse_udprelay_header	225:0:5906:9037							
ANR	142847	FunctionDef	"parse_udprelay_header (const char * buf , const size_t buf_len , char * host , char * port , struct sockaddr_storage * storage)"		142846	0					
ANR	142848	CompoundStatement		228:0:6058:9037	142846	0					
ANR	142849	IdentifierDeclStatement	const uint8_t atyp = * ( uint8_t * ) buf ;	229:4:6064:6100	142846	0	True				
ANR	142850	IdentifierDecl	atyp = * ( uint8_t * ) buf		142846	0					
ANR	142851	IdentifierDeclType	const uint8_t		142846	0					
ANR	142852	Identifier	atyp		142846	1					
ANR	142853	AssignmentExpression	atyp = * ( uint8_t * ) buf		142846	2		=			
ANR	142854	Identifier	atyp		142846	0					
ANR	142855	UnaryOperationExpression	* ( uint8_t * ) buf		142846	1					
ANR	142856	UnaryOperator	*		142846	0					
ANR	142857	CastExpression	( uint8_t * ) buf		142846	1					
ANR	142858	CastTarget	uint8_t *		142846	0					
ANR	142859	Identifier	buf		142846	1					
ANR	142860	IdentifierDeclStatement	int offset = 1 ;	230:4:6106:6128	142846	1	True				
ANR	142861	IdentifierDecl	offset = 1		142846	0					
ANR	142862	IdentifierDeclType	int		142846	0					
ANR	142863	Identifier	offset		142846	1					
ANR	142864	AssignmentExpression	offset = 1		142846	2		=			
ANR	142865	Identifier	offset		142846	0					
ANR	142866	PrimaryExpression	1		142846	1					
ANR	142867	IfStatement	if ( ( atyp & ADDRTYPE_MASK ) == 1 )		142846	2					
ANR	142868	Condition	( atyp & ADDRTYPE_MASK ) == 1	233:8:6171:6197	142846	0	True				
ANR	142869	EqualityExpression	( atyp & ADDRTYPE_MASK ) == 1		142846	0		==			
ANR	142870	BitAndExpression	atyp & ADDRTYPE_MASK		142846	0		&			
ANR	142871	Identifier	atyp		142846	0					
ANR	142872	Identifier	ADDRTYPE_MASK		142846	1					
ANR	142873	PrimaryExpression	1		142846	1					
ANR	142874	CompoundStatement		8:8:168:211	142846	1					
ANR	142875	IdentifierDeclStatement	size_t in_addr_len = sizeof ( struct in_addr ) ;	235:8:6227:6270	142846	0	True				
ANR	142876	IdentifierDecl	in_addr_len = sizeof ( struct in_addr )		142846	0					
ANR	142877	IdentifierDeclType	size_t		142846	0					
ANR	142878	Identifier	in_addr_len		142846	1					
ANR	142879	AssignmentExpression	in_addr_len = sizeof ( struct in_addr )		142846	2		=			
ANR	142880	Identifier	in_addr_len		142846	0					
ANR	142881	SizeofExpression	sizeof ( struct in_addr )		142846	1					
ANR	142882	Sizeof	sizeof		142846	0					
ANR	142883	SizeofOperand	struct in_addr		142846	1					
ANR	142884	IfStatement	if ( buf_len >= in_addr_len + 3 )		142846	1					
ANR	142885	Condition	buf_len >= in_addr_len + 3	236:12:6284:6309	142846	0	True				
ANR	142886	RelationalExpression	buf_len >= in_addr_len + 3		142846	0		>=			
ANR	142887	Identifier	buf_len		142846	0					
ANR	142888	AdditiveExpression	in_addr_len + 3		142846	1		+			
ANR	142889	Identifier	in_addr_len		142846	0					
ANR	142890	PrimaryExpression	3		142846	1					
ANR	142891	CompoundStatement		9:40:253:253	142846	1					
ANR	142892	IfStatement	if ( storage != NULL )		142846	0					
ANR	142893	Condition	storage != NULL	237:16:6330:6344	142846	0	True				
ANR	142894	EqualityExpression	storage != NULL		142846	0		!=			
ANR	142895	Identifier	storage		142846	0					
ANR	142896	Identifier	NULL		142846	1					
ANR	142897	CompoundStatement		11:16:306:362	142846	1					
ANR	142898	IdentifierDeclStatement	struct sockaddr_in * addr = ( struct sockaddr_in * ) storage ;	238:16:6365:6421	142846	0	True				
ANR	142899	IdentifierDecl	* addr = ( struct sockaddr_in * ) storage		142846	0					
ANR	142900	IdentifierDeclType	struct sockaddr_in *		142846	0					
ANR	142901	Identifier	addr		142846	1					
ANR	142902	AssignmentExpression	* addr = ( struct sockaddr_in * ) storage		142846	2		=			
ANR	142903	Identifier	addr		142846	0					
ANR	142904	CastExpression	( struct sockaddr_in * ) storage		142846	1					
ANR	142905	CastTarget	struct sockaddr_in *		142846	0					
ANR	142906	Identifier	storage		142846	1					
ANR	142907	ExpressionStatement	addr -> sin_family = AF_INET	239:16:6439:6465	142846	1	True				
ANR	142908	AssignmentExpression	addr -> sin_family = AF_INET		142846	0		=			
ANR	142909	PtrMemberAccess	addr -> sin_family		142846	0					
ANR	142910	Identifier	addr		142846	0					
ANR	142911	Identifier	sin_family		142846	1					
ANR	142912	Identifier	AF_INET		142846	1					
ANR	142913	ExpressionStatement	addr -> sin_addr = * ( struct in_addr * ) ( buf + offset )	240:16:6483:6535	142846	2	True				
ANR	142914	AssignmentExpression	addr -> sin_addr = * ( struct in_addr * ) ( buf + offset )		142846	0		=			
ANR	142915	PtrMemberAccess	addr -> sin_addr		142846	0					
ANR	142916	Identifier	addr		142846	0					
ANR	142917	Identifier	sin_addr		142846	1					
ANR	142918	UnaryOperationExpression	* ( struct in_addr * ) ( buf + offset )		142846	1					
ANR	142919	UnaryOperator	*		142846	0					
ANR	142920	CastExpression	( struct in_addr * ) ( buf + offset )		142846	1					
ANR	142921	CastTarget	struct in_addr *		142846	0					
ANR	142922	AdditiveExpression	buf + offset		142846	1		+			
ANR	142923	Identifier	buf		142846	0					
ANR	142924	Identifier	offset		142846	1					
ANR	142925	ExpressionStatement	addr -> sin_port = * ( uint16_t * ) ( buf + offset + in_addr_len )	241:16:6553:6613	142846	3	True				
ANR	142926	AssignmentExpression	addr -> sin_port = * ( uint16_t * ) ( buf + offset + in_addr_len )		142846	0		=			
ANR	142927	PtrMemberAccess	addr -> sin_port		142846	0					
ANR	142928	Identifier	addr		142846	0					
ANR	142929	Identifier	sin_port		142846	1					
ANR	142930	UnaryOperationExpression	* ( uint16_t * ) ( buf + offset + in_addr_len )		142846	1					
ANR	142931	UnaryOperator	*		142846	0					
ANR	142932	CastExpression	( uint16_t * ) ( buf + offset + in_addr_len )		142846	1					
ANR	142933	CastTarget	uint16_t *		142846	0					
ANR	142934	AdditiveExpression	buf + offset + in_addr_len		142846	1		+			
ANR	142935	Identifier	buf		142846	0					
ANR	142936	AdditiveExpression	offset + in_addr_len		142846	1		+			
ANR	142937	Identifier	offset		142846	0					
ANR	142938	Identifier	in_addr_len		142846	1					
ANR	142939	IfStatement	if ( host != NULL )		142846	1					
ANR	142940	Condition	host != NULL	243:16:6645:6656	142846	0	True				
ANR	142941	EqualityExpression	host != NULL		142846	0		!=			
ANR	142942	Identifier	host		142846	0					
ANR	142943	Identifier	NULL		142846	1					
ANR	142944	CompoundStatement		16:30:600:600	142846	1					
ANR	142945	ExpressionStatement	"inet_ntop ( AF_INET , ( const void * ) ( buf + offset ) , host , INET_ADDRSTRLEN )"	244:16:6677:6773	142846	0	True				
ANR	142946	CallExpression	"inet_ntop ( AF_INET , ( const void * ) ( buf + offset ) , host , INET_ADDRSTRLEN )"		142846	0					
ANR	142947	Callee	inet_ntop		142846	0					
ANR	142948	Identifier	inet_ntop		142846	0					
ANR	142949	ArgumentList	AF_INET		142846	1					
ANR	142950	Argument	AF_INET		142846	0					
ANR	142951	Identifier	AF_INET		142846	0					
ANR	142952	Argument	( const void * ) ( buf + offset )		142846	1					
ANR	142953	CastExpression	( const void * ) ( buf + offset )		142846	0					
ANR	142954	CastTarget	const void *		142846	0					
ANR	142955	AdditiveExpression	buf + offset		142846	1		+			
ANR	142956	Identifier	buf		142846	0					
ANR	142957	Identifier	offset		142846	1					
ANR	142958	Argument	host		142846	2					
ANR	142959	Identifier	host		142846	0					
ANR	142960	Argument	INET_ADDRSTRLEN		142846	3					
ANR	142961	Identifier	INET_ADDRSTRLEN		142846	0					
ANR	142962	ExpressionStatement	offset += in_addr_len	247:12:6801:6822	142846	2	True				
ANR	142963	AssignmentExpression	offset += in_addr_len		142846	0		+=			
ANR	142964	Identifier	offset		142846	0					
ANR	142965	Identifier	in_addr_len		142846	1					
ANR	142966	ElseStatement	else		142846	0					
ANR	142967	IfStatement	if ( ( atyp & ADDRTYPE_MASK ) == 3 )		142846	0					
ANR	142968	Condition	( atyp & ADDRTYPE_MASK ) == 3	249:15:6849:6875	142846	0	True				
ANR	142969	EqualityExpression	( atyp & ADDRTYPE_MASK ) == 3		142846	0		==			
ANR	142970	BitAndExpression	atyp & ADDRTYPE_MASK		142846	0		&			
ANR	142971	Identifier	atyp		142846	0					
ANR	142972	Identifier	ADDRTYPE_MASK		142846	1					
ANR	142973	PrimaryExpression	3		142846	1					
ANR	142974	CompoundStatement		24:8:852:897	142846	1					
ANR	142975	IdentifierDeclStatement	uint8_t name_len = * ( uint8_t * ) ( buf + offset ) ;	251:8:6911:6956	142846	0	True				
ANR	142976	IdentifierDecl	name_len = * ( uint8_t * ) ( buf + offset )		142846	0					
ANR	142977	IdentifierDeclType	uint8_t		142846	0					
ANR	142978	Identifier	name_len		142846	1					
ANR	142979	AssignmentExpression	name_len = * ( uint8_t * ) ( buf + offset )		142846	2		=			
ANR	142980	Identifier	name_len		142846	0					
ANR	142981	UnaryOperationExpression	* ( uint8_t * ) ( buf + offset )		142846	1					
ANR	142982	UnaryOperator	*		142846	0					
ANR	142983	CastExpression	( uint8_t * ) ( buf + offset )		142846	1					
ANR	142984	CastTarget	uint8_t *		142846	0					
ANR	142985	AdditiveExpression	buf + offset		142846	1		+			
ANR	142986	Identifier	buf		142846	0					
ANR	142987	Identifier	offset		142846	1					
ANR	142988	IfStatement	if ( name_len + 4 <= buf_len )		142846	1					
ANR	142989	Condition	name_len + 4 <= buf_len	252:12:6970:6992	142846	0	True				
ANR	142990	RelationalExpression	name_len + 4 <= buf_len		142846	0		<=			
ANR	142991	AdditiveExpression	name_len + 4		142846	0		+			
ANR	142992	Identifier	name_len		142846	0					
ANR	142993	PrimaryExpression	4		142846	1					
ANR	142994	Identifier	buf_len		142846	1					
ANR	142995	CompoundStatement		25:37:936:936	142846	1					
ANR	142996	IfStatement	if ( storage != NULL )		142846	0					
ANR	142997	Condition	storage != NULL	253:16:7013:7027	142846	0	True				
ANR	142998	EqualityExpression	storage != NULL		142846	0		!=			
ANR	142999	Identifier	storage		142846	0					
ANR	143000	Identifier	NULL		142846	1					
ANR	143001	CompoundStatement		28:16:1028:1045	142846	1					
ANR	143002	IdentifierDeclStatement	char tmp [ 257 ] = { 0 } ;	254:16:7048:7069	142846	0	True				
ANR	143003	IdentifierDecl	tmp [ 257 ] = { 0 }		142846	0					
ANR	143004	IdentifierDeclType	char [ 257 ]		142846	0					
ANR	143005	Identifier	tmp		142846	1					
ANR	143006	PrimaryExpression	257		142846	2					
ANR	143007	AssignmentExpression	tmp [ 257 ] = { 0 }		142846	3		=			
ANR	143008	Identifier	tmp		142846	0					
ANR	143009	InitializerList	0		142846	1					
ANR	143010	PrimaryExpression	0		142846	0					
ANR	143011	IdentifierDeclStatement	struct cork_ip ip ;	255:16:7087:7104	142846	1	True				
ANR	143012	IdentifierDecl	ip		142846	0					
ANR	143013	IdentifierDeclType	struct cork_ip		142846	0					
ANR	143014	Identifier	ip		142846	1					
ANR	143015	ExpressionStatement	"memcpy ( tmp , buf + offset + 1 , name_len )"	256:16:7122:7161	142846	2	True				
ANR	143016	CallExpression	"memcpy ( tmp , buf + offset + 1 , name_len )"		142846	0					
ANR	143017	Callee	memcpy		142846	0					
ANR	143018	Identifier	memcpy		142846	0					
ANR	143019	ArgumentList	tmp		142846	1					
ANR	143020	Argument	tmp		142846	0					
ANR	143021	Identifier	tmp		142846	0					
ANR	143022	Argument	buf + offset + 1		142846	1					
ANR	143023	AdditiveExpression	buf + offset + 1		142846	0		+			
ANR	143024	Identifier	buf		142846	0					
ANR	143025	AdditiveExpression	offset + 1		142846	1		+			
ANR	143026	Identifier	offset		142846	0					
ANR	143027	PrimaryExpression	1		142846	1					
ANR	143028	Argument	name_len		142846	2					
ANR	143029	Identifier	name_len		142846	0					
ANR	143030	IfStatement	"if ( cork_ip_init ( & ip , tmp ) != - 1 )"		142846	3					
ANR	143031	Condition	"cork_ip_init ( & ip , tmp ) != - 1"	257:20:7183:7210	142846	0	True				
ANR	143032	EqualityExpression	"cork_ip_init ( & ip , tmp ) != - 1"		142846	0		!=			
ANR	143033	CallExpression	"cork_ip_init ( & ip , tmp )"		142846	0					
ANR	143034	Callee	cork_ip_init		142846	0					
ANR	143035	Identifier	cork_ip_init		142846	0					
ANR	143036	ArgumentList	& ip		142846	1					
ANR	143037	Argument	& ip		142846	0					
ANR	143038	UnaryOperationExpression	& ip		142846	0					
ANR	143039	UnaryOperator	&		142846	0					
ANR	143040	Identifier	ip		142846	1					
ANR	143041	Argument	tmp		142846	1					
ANR	143042	Identifier	tmp		142846	0					
ANR	143043	UnaryOperationExpression	- 1		142846	1					
ANR	143044	UnaryOperator	-		142846	0					
ANR	143045	PrimaryExpression	1		142846	1					
ANR	143046	CompoundStatement		30:50:1154:1154	142846	1					
ANR	143047	IfStatement	if ( ip . version == 4 )		142846	0					
ANR	143048	Condition	ip . version == 4	258:24:7239:7253	142846	0	True				
ANR	143049	EqualityExpression	ip . version == 4		142846	0		==			
ANR	143050	MemberAccess	ip . version		142846	0					
ANR	143051	Identifier	ip		142846	0					
ANR	143052	Identifier	version		142846	1					
ANR	143053	PrimaryExpression	4		142846	1					
ANR	143054	CompoundStatement		32:24:1223:1279	142846	1					
ANR	143055	IdentifierDeclStatement	struct sockaddr_in * addr = ( struct sockaddr_in * ) storage ;	259:24:7282:7338	142846	0	True				
ANR	143056	IdentifierDecl	* addr = ( struct sockaddr_in * ) storage		142846	0					
ANR	143057	IdentifierDeclType	struct sockaddr_in *		142846	0					
ANR	143058	Identifier	addr		142846	1					
ANR	143059	AssignmentExpression	* addr = ( struct sockaddr_in * ) storage		142846	2		=			
ANR	143060	Identifier	addr		142846	0					
ANR	143061	CastExpression	( struct sockaddr_in * ) storage		142846	1					
ANR	143062	CastTarget	struct sockaddr_in *		142846	0					
ANR	143063	Identifier	storage		142846	1					
ANR	143064	ExpressionStatement	"inet_pton ( AF_INET , tmp , & ( addr -> sin_addr ) )"	260:24:7364:7406	142846	1	True				
ANR	143065	CallExpression	"inet_pton ( AF_INET , tmp , & ( addr -> sin_addr ) )"		142846	0					
ANR	143066	Callee	inet_pton		142846	0					
ANR	143067	Identifier	inet_pton		142846	0					
ANR	143068	ArgumentList	AF_INET		142846	1					
ANR	143069	Argument	AF_INET		142846	0					
ANR	143070	Identifier	AF_INET		142846	0					
ANR	143071	Argument	tmp		142846	1					
ANR	143072	Identifier	tmp		142846	0					
ANR	143073	Argument	& ( addr -> sin_addr )		142846	2					
ANR	143074	UnaryOperationExpression	& ( addr -> sin_addr )		142846	0					
ANR	143075	UnaryOperator	&		142846	0					
ANR	143076	PtrMemberAccess	addr -> sin_addr		142846	1					
ANR	143077	Identifier	addr		142846	0					
ANR	143078	Identifier	sin_addr		142846	1					
ANR	143079	ExpressionStatement	addr -> sin_port = * ( uint16_t * ) ( buf + offset + 1 + name_len )	261:24:7432:7493	142846	2	True				
ANR	143080	AssignmentExpression	addr -> sin_port = * ( uint16_t * ) ( buf + offset + 1 + name_len )		142846	0		=			
ANR	143081	PtrMemberAccess	addr -> sin_port		142846	0					
ANR	143082	Identifier	addr		142846	0					
ANR	143083	Identifier	sin_port		142846	1					
ANR	143084	UnaryOperationExpression	* ( uint16_t * ) ( buf + offset + 1 + name_len )		142846	1					
ANR	143085	UnaryOperator	*		142846	0					
ANR	143086	CastExpression	( uint16_t * ) ( buf + offset + 1 + name_len )		142846	1					
ANR	143087	CastTarget	uint16_t *		142846	0					
ANR	143088	AdditiveExpression	buf + offset + 1 + name_len		142846	1		+			
ANR	143089	Identifier	buf		142846	0					
ANR	143090	AdditiveExpression	offset + 1 + name_len		142846	1		+			
ANR	143091	Identifier	offset		142846	0					
ANR	143092	AdditiveExpression	1 + name_len		142846	1		+			
ANR	143093	PrimaryExpression	1		142846	0					
ANR	143094	Identifier	name_len		142846	1					
ANR	143095	ExpressionStatement	addr -> sin_family = AF_INET	262:24:7519:7545	142846	3	True				
ANR	143096	AssignmentExpression	addr -> sin_family = AF_INET		142846	0		=			
ANR	143097	PtrMemberAccess	addr -> sin_family		142846	0					
ANR	143098	Identifier	addr		142846	0					
ANR	143099	Identifier	sin_family		142846	1					
ANR	143100	Identifier	AF_INET		142846	1					
ANR	143101	ElseStatement	else		142846	0					
ANR	143102	IfStatement	if ( ip . version == 6 )		142846	0					
ANR	143103	Condition	ip . version == 6	263:31:7578:7592	142846	0	True				
ANR	143104	EqualityExpression	ip . version == 6		142846	0		==			
ANR	143105	MemberAccess	ip . version		142846	0					
ANR	143106	Identifier	ip		142846	0					
ANR	143107	Identifier	version		142846	1					
ANR	143108	PrimaryExpression	6		142846	1					
ANR	143109	CompoundStatement		37:24:1562:1620	142846	1					
ANR	143110	IdentifierDeclStatement	struct sockaddr_in6 * addr = ( struct sockaddr_in6 * ) storage ;	264:24:7621:7679	142846	0	True				
ANR	143111	IdentifierDecl	* addr = ( struct sockaddr_in6 * ) storage		142846	0					
ANR	143112	IdentifierDeclType	struct sockaddr_in6 *		142846	0					
ANR	143113	Identifier	addr		142846	1					
ANR	143114	AssignmentExpression	* addr = ( struct sockaddr_in6 * ) storage		142846	2		=			
ANR	143115	Identifier	addr		142846	0					
ANR	143116	CastExpression	( struct sockaddr_in6 * ) storage		142846	1					
ANR	143117	CastTarget	struct sockaddr_in6 *		142846	0					
ANR	143118	Identifier	storage		142846	1					
ANR	143119	ExpressionStatement	"inet_pton ( AF_INET , tmp , & ( addr -> sin6_addr ) )"	265:24:7705:7748	142846	1	True				
ANR	143120	CallExpression	"inet_pton ( AF_INET , tmp , & ( addr -> sin6_addr ) )"		142846	0					
ANR	143121	Callee	inet_pton		142846	0					
ANR	143122	Identifier	inet_pton		142846	0					
ANR	143123	ArgumentList	AF_INET		142846	1					
ANR	143124	Argument	AF_INET		142846	0					
ANR	143125	Identifier	AF_INET		142846	0					
ANR	143126	Argument	tmp		142846	1					
ANR	143127	Identifier	tmp		142846	0					
ANR	143128	Argument	& ( addr -> sin6_addr )		142846	2					
ANR	143129	UnaryOperationExpression	& ( addr -> sin6_addr )		142846	0					
ANR	143130	UnaryOperator	&		142846	0					
ANR	143131	PtrMemberAccess	addr -> sin6_addr		142846	1					
ANR	143132	Identifier	addr		142846	0					
ANR	143133	Identifier	sin6_addr		142846	1					
ANR	143134	ExpressionStatement	addr -> sin6_port = * ( uint16_t * ) ( buf + offset + 1 + name_len )	266:24:7774:7836	142846	2	True				
ANR	143135	AssignmentExpression	addr -> sin6_port = * ( uint16_t * ) ( buf + offset + 1 + name_len )		142846	0		=			
ANR	143136	PtrMemberAccess	addr -> sin6_port		142846	0					
ANR	143137	Identifier	addr		142846	0					
ANR	143138	Identifier	sin6_port		142846	1					
ANR	143139	UnaryOperationExpression	* ( uint16_t * ) ( buf + offset + 1 + name_len )		142846	1					
ANR	143140	UnaryOperator	*		142846	0					
ANR	143141	CastExpression	( uint16_t * ) ( buf + offset + 1 + name_len )		142846	1					
ANR	143142	CastTarget	uint16_t *		142846	0					
ANR	143143	AdditiveExpression	buf + offset + 1 + name_len		142846	1		+			
ANR	143144	Identifier	buf		142846	0					
ANR	143145	AdditiveExpression	offset + 1 + name_len		142846	1		+			
ANR	143146	Identifier	offset		142846	0					
ANR	143147	AdditiveExpression	1 + name_len		142846	1		+			
ANR	143148	PrimaryExpression	1		142846	0					
ANR	143149	Identifier	name_len		142846	1					
ANR	143150	ExpressionStatement	addr -> sin6_family = AF_INET6	267:24:7862:7890	142846	3	True				
ANR	143151	AssignmentExpression	addr -> sin6_family = AF_INET6		142846	0		=			
ANR	143152	PtrMemberAccess	addr -> sin6_family		142846	0					
ANR	143153	Identifier	addr		142846	0					
ANR	143154	Identifier	sin6_family		142846	1					
ANR	143155	Identifier	AF_INET6		142846	1					
ANR	143156	IfStatement	if ( host != NULL )		142846	1					
ANR	143157	Condition	host != NULL	271:16:7962:7973	142846	0	True				
ANR	143158	EqualityExpression	host != NULL		142846	0		!=			
ANR	143159	Identifier	host		142846	0					
ANR	143160	Identifier	NULL		142846	1					
ANR	143161	CompoundStatement		44:30:1917:1917	142846	1					
ANR	143162	ExpressionStatement	"memcpy ( host , buf + offset + 1 , name_len )"	272:16:7994:8034	142846	0	True				
ANR	143163	CallExpression	"memcpy ( host , buf + offset + 1 , name_len )"		142846	0					
ANR	143164	Callee	memcpy		142846	0					
ANR	143165	Identifier	memcpy		142846	0					
ANR	143166	ArgumentList	host		142846	1					
ANR	143167	Argument	host		142846	0					
ANR	143168	Identifier	host		142846	0					
ANR	143169	Argument	buf + offset + 1		142846	1					
ANR	143170	AdditiveExpression	buf + offset + 1		142846	0		+			
ANR	143171	Identifier	buf		142846	0					
ANR	143172	AdditiveExpression	offset + 1		142846	1		+			
ANR	143173	Identifier	offset		142846	0					
ANR	143174	PrimaryExpression	1		142846	1					
ANR	143175	Argument	name_len		142846	2					
ANR	143176	Identifier	name_len		142846	0					
ANR	143177	ExpressionStatement	offset += 1 + name_len	274:12:8062:8084	142846	2	True				
ANR	143178	AssignmentExpression	offset += 1 + name_len		142846	0		+=			
ANR	143179	Identifier	offset		142846	0					
ANR	143180	AdditiveExpression	1 + name_len		142846	1		+			
ANR	143181	PrimaryExpression	1		142846	0					
ANR	143182	Identifier	name_len		142846	1					
ANR	143183	ElseStatement	else		142846	0					
ANR	143184	IfStatement	if ( ( atyp & ADDRTYPE_MASK ) == 4 )		142846	0					
ANR	143185	Condition	( atyp & ADDRTYPE_MASK ) == 4	276:15:8111:8137	142846	0	True				
ANR	143186	EqualityExpression	( atyp & ADDRTYPE_MASK ) == 4		142846	0		==			
ANR	143187	BitAndExpression	atyp & ADDRTYPE_MASK		142846	0		&			
ANR	143188	Identifier	atyp		142846	0					
ANR	143189	Identifier	ADDRTYPE_MASK		142846	1					
ANR	143190	PrimaryExpression	4		142846	1					
ANR	143191	CompoundStatement		51:8:2108:2153	142846	1					
ANR	143192	IdentifierDeclStatement	size_t in6_addr_len = sizeof ( struct in6_addr ) ;	278:8:8167:8212	142846	0	True				
ANR	143193	IdentifierDecl	in6_addr_len = sizeof ( struct in6_addr )		142846	0					
ANR	143194	IdentifierDeclType	size_t		142846	0					
ANR	143195	Identifier	in6_addr_len		142846	1					
ANR	143196	AssignmentExpression	in6_addr_len = sizeof ( struct in6_addr )		142846	2		=			
ANR	143197	Identifier	in6_addr_len		142846	0					
ANR	143198	SizeofExpression	sizeof ( struct in6_addr )		142846	1					
ANR	143199	Sizeof	sizeof		142846	0					
ANR	143200	SizeofOperand	struct in6_addr		142846	1					
ANR	143201	IfStatement	if ( buf_len >= in6_addr_len + 3 )		142846	1					
ANR	143202	Condition	buf_len >= in6_addr_len + 3	279:12:8226:8252	142846	0	True				
ANR	143203	RelationalExpression	buf_len >= in6_addr_len + 3		142846	0		>=			
ANR	143204	Identifier	buf_len		142846	0					
ANR	143205	AdditiveExpression	in6_addr_len + 3		142846	1		+			
ANR	143206	Identifier	in6_addr_len		142846	0					
ANR	143207	PrimaryExpression	3		142846	1					
ANR	143208	CompoundStatement		52:41:2196:2196	142846	1					
ANR	143209	IfStatement	if ( storage != NULL )		142846	0					
ANR	143210	Condition	storage != NULL	280:16:8273:8287	142846	0	True				
ANR	143211	EqualityExpression	storage != NULL		142846	0		!=			
ANR	143212	Identifier	storage		142846	0					
ANR	143213	Identifier	NULL		142846	1					
ANR	143214	CompoundStatement		54:16:2249:2307	142846	1					
ANR	143215	IdentifierDeclStatement	struct sockaddr_in6 * addr = ( struct sockaddr_in6 * ) storage ;	281:16:8308:8366	142846	0	True				
ANR	143216	IdentifierDecl	* addr = ( struct sockaddr_in6 * ) storage		142846	0					
ANR	143217	IdentifierDeclType	struct sockaddr_in6 *		142846	0					
ANR	143218	Identifier	addr		142846	1					
ANR	143219	AssignmentExpression	* addr = ( struct sockaddr_in6 * ) storage		142846	2		=			
ANR	143220	Identifier	addr		142846	0					
ANR	143221	CastExpression	( struct sockaddr_in6 * ) storage		142846	1					
ANR	143222	CastTarget	struct sockaddr_in6 *		142846	0					
ANR	143223	Identifier	storage		142846	1					
ANR	143224	ExpressionStatement	addr -> sin6_family = AF_INET6	282:16:8384:8412	142846	1	True				
ANR	143225	AssignmentExpression	addr -> sin6_family = AF_INET6		142846	0		=			
ANR	143226	PtrMemberAccess	addr -> sin6_family		142846	0					
ANR	143227	Identifier	addr		142846	0					
ANR	143228	Identifier	sin6_family		142846	1					
ANR	143229	Identifier	AF_INET6		142846	1					
ANR	143230	ExpressionStatement	addr -> sin6_addr = * ( struct in6_addr * ) ( buf + offset )	283:16:8430:8484	142846	2	True				
ANR	143231	AssignmentExpression	addr -> sin6_addr = * ( struct in6_addr * ) ( buf + offset )		142846	0		=			
ANR	143232	PtrMemberAccess	addr -> sin6_addr		142846	0					
ANR	143233	Identifier	addr		142846	0					
ANR	143234	Identifier	sin6_addr		142846	1					
ANR	143235	UnaryOperationExpression	* ( struct in6_addr * ) ( buf + offset )		142846	1					
ANR	143236	UnaryOperator	*		142846	0					
ANR	143237	CastExpression	( struct in6_addr * ) ( buf + offset )		142846	1					
ANR	143238	CastTarget	struct in6_addr *		142846	0					
ANR	143239	AdditiveExpression	buf + offset		142846	1		+			
ANR	143240	Identifier	buf		142846	0					
ANR	143241	Identifier	offset		142846	1					
ANR	143242	ExpressionStatement	addr -> sin6_port = * ( uint16_t * ) ( buf + offset + in6_addr_len )	284:16:8502:8564	142846	3	True				
ANR	143243	AssignmentExpression	addr -> sin6_port = * ( uint16_t * ) ( buf + offset + in6_addr_len )		142846	0		=			
ANR	143244	PtrMemberAccess	addr -> sin6_port		142846	0					
ANR	143245	Identifier	addr		142846	0					
ANR	143246	Identifier	sin6_port		142846	1					
ANR	143247	UnaryOperationExpression	* ( uint16_t * ) ( buf + offset + in6_addr_len )		142846	1					
ANR	143248	UnaryOperator	*		142846	0					
ANR	143249	CastExpression	( uint16_t * ) ( buf + offset + in6_addr_len )		142846	1					
ANR	143250	CastTarget	uint16_t *		142846	0					
ANR	143251	AdditiveExpression	buf + offset + in6_addr_len		142846	1		+			
ANR	143252	Identifier	buf		142846	0					
ANR	143253	AdditiveExpression	offset + in6_addr_len		142846	1		+			
ANR	143254	Identifier	offset		142846	0					
ANR	143255	Identifier	in6_addr_len		142846	1					
ANR	143256	IfStatement	if ( host != NULL )		142846	1					
ANR	143257	Condition	host != NULL	286:16:8596:8607	142846	0	True				
ANR	143258	EqualityExpression	host != NULL		142846	0		!=			
ANR	143259	Identifier	host		142846	0					
ANR	143260	Identifier	NULL		142846	1					
ANR	143261	CompoundStatement		59:30:2551:2551	142846	1					
ANR	143262	ExpressionStatement	"inet_ntop ( AF_INET6 , ( const void * ) ( buf + offset ) , host , INET6_ADDRSTRLEN )"	287:16:8628:8726	142846	0	True				
ANR	143263	CallExpression	"inet_ntop ( AF_INET6 , ( const void * ) ( buf + offset ) , host , INET6_ADDRSTRLEN )"		142846	0					
ANR	143264	Callee	inet_ntop		142846	0					
ANR	143265	Identifier	inet_ntop		142846	0					
ANR	143266	ArgumentList	AF_INET6		142846	1					
ANR	143267	Argument	AF_INET6		142846	0					
ANR	143268	Identifier	AF_INET6		142846	0					
ANR	143269	Argument	( const void * ) ( buf + offset )		142846	1					
ANR	143270	CastExpression	( const void * ) ( buf + offset )		142846	0					
ANR	143271	CastTarget	const void *		142846	0					
ANR	143272	AdditiveExpression	buf + offset		142846	1		+			
ANR	143273	Identifier	buf		142846	0					
ANR	143274	Identifier	offset		142846	1					
ANR	143275	Argument	host		142846	2					
ANR	143276	Identifier	host		142846	0					
ANR	143277	Argument	INET6_ADDRSTRLEN		142846	3					
ANR	143278	Identifier	INET6_ADDRSTRLEN		142846	0					
ANR	143279	ExpressionStatement	offset += in6_addr_len	290:12:8754:8776	142846	2	True				
ANR	143280	AssignmentExpression	offset += in6_addr_len		142846	0		+=			
ANR	143281	Identifier	offset		142846	0					
ANR	143282	Identifier	in6_addr_len		142846	1					
ANR	143283	IfStatement	if ( offset == 1 )		142846	3					
ANR	143284	Condition	offset == 1	294:8:8803:8813	142846	0	True				
ANR	143285	EqualityExpression	offset == 1		142846	0		==			
ANR	143286	Identifier	offset		142846	0					
ANR	143287	PrimaryExpression	1		142846	1					
ANR	143288	CompoundStatement		67:21:2757:2757	142846	1					
ANR	143289	ExpressionStatement	"LOGE ( ""[udp] invalid header with addr type %d"" , atyp )"	295:8:8826:8878	142846	0	True				
ANR	143290	CallExpression	"LOGE ( ""[udp] invalid header with addr type %d"" , atyp )"		142846	0					
ANR	143291	Callee	LOGE		142846	0					
ANR	143292	Identifier	LOGE		142846	0					
ANR	143293	ArgumentList	"""[udp] invalid header with addr type %d"""		142846	1					
ANR	143294	Argument	"""[udp] invalid header with addr type %d"""		142846	0					
ANR	143295	PrimaryExpression	"""[udp] invalid header with addr type %d"""		142846	0					
ANR	143296	Argument	atyp		142846	1					
ANR	143297	Identifier	atyp		142846	0					
ANR	143298	ReturnStatement	return 0 ;	296:8:8888:8896	142846	1	True				
ANR	143299	PrimaryExpression	0		142846	0					
ANR	143300	IfStatement	if ( port != NULL )		142846	4					
ANR	143301	Condition	port != NULL	299:8:8913:8924	142846	0	True				
ANR	143302	EqualityExpression	port != NULL		142846	0		!=			
ANR	143303	Identifier	port		142846	0					
ANR	143304	Identifier	NULL		142846	1					
ANR	143305	CompoundStatement		72:22:2868:2868	142846	1					
ANR	143306	ExpressionStatement	"sprintf ( port , ""%d"" , ntohs ( * ( uint16_t * ) ( buf + offset ) ) )"	300:8:8937:8992	142846	0	True				
ANR	143307	CallExpression	"sprintf ( port , ""%d"" , ntohs ( * ( uint16_t * ) ( buf + offset ) ) )"		142846	0					
ANR	143308	Callee	sprintf		142846	0					
ANR	143309	Identifier	sprintf		142846	0					
ANR	143310	ArgumentList	port		142846	1					
ANR	143311	Argument	port		142846	0					
ANR	143312	Identifier	port		142846	0					
ANR	143313	Argument	"""%d"""		142846	1					
ANR	143314	PrimaryExpression	"""%d"""		142846	0					
ANR	143315	Argument	ntohs ( * ( uint16_t * ) ( buf + offset ) )		142846	2					
ANR	143316	CallExpression	ntohs ( * ( uint16_t * ) ( buf + offset ) )		142846	0					
ANR	143317	Callee	ntohs		142846	0					
ANR	143318	Identifier	ntohs		142846	0					
ANR	143319	ArgumentList	* ( uint16_t * ) ( buf + offset )		142846	1					
ANR	143320	Argument	* ( uint16_t * ) ( buf + offset )		142846	0					
ANR	143321	UnaryOperationExpression	* ( uint16_t * ) ( buf + offset )		142846	0					
ANR	143322	UnaryOperator	*		142846	0					
ANR	143323	CastExpression	( uint16_t * ) ( buf + offset )		142846	1					
ANR	143324	CastTarget	uint16_t *		142846	0					
ANR	143325	AdditiveExpression	buf + offset		142846	1		+			
ANR	143326	Identifier	buf		142846	0					
ANR	143327	Identifier	offset		142846	1					
ANR	143328	ExpressionStatement	offset += 2	302:4:9004:9015	142846	5	True				
ANR	143329	AssignmentExpression	offset += 2		142846	0		+=			
ANR	143330	Identifier	offset		142846	0					
ANR	143331	PrimaryExpression	2		142846	1					
ANR	143332	ReturnStatement	return offset ;	304:4:9022:9035	142846	6	True				
ANR	143333	Identifier	offset		142846	0					
ANR	143334	ReturnType	static int		142846	1					
ANR	143335	Identifier	parse_udprelay_header		142846	2					
ANR	143336	ParameterList	"const char * buf , const size_t buf_len , char * host , char * port , struct sockaddr_storage * storage"		142846	3					
ANR	143337	Parameter	const char * buf	226:22:5939:5953	142846	0	True				
ANR	143338	ParameterType	const char *		142846	0					
ANR	143339	Identifier	buf		142846	1					
ANR	143340	Parameter	const size_t buf_len	226:39:5956:5975	142846	1	True				
ANR	143341	ParameterType	const size_t		142846	0					
ANR	143342	Identifier	buf_len		142846	1					
ANR	143343	Parameter	char * host	227:22:6000:6009	142846	2	True				
ANR	143344	ParameterType	char *		142846	0					
ANR	143345	Identifier	host		142846	1					
ANR	143346	Parameter	char * port	227:34:6012:6021	142846	3	True				
ANR	143347	ParameterType	char *		142846	0					
ANR	143348	Identifier	port		142846	1					
ANR	143349	Parameter	struct sockaddr_storage * storage	227:46:6024:6055	142846	4	True				
ANR	143350	ParameterType	struct sockaddr_storage *		142846	0					
ANR	143351	Identifier	storage		142846	1					
ANR	143352	CFGEntryNode	ENTRY		142846		True				
ANR	143353	CFGExitNode	EXIT		142846		True				
ANR	143354	Symbol	& addr -> sin6_addr		142846						
ANR	143355	Symbol	addr -> sin6_addr		142846						
ANR	143356	Symbol	addr -> sin_family		142846						
ANR	143357	Symbol	* name_len		142846						
ANR	143358	Symbol	addr -> sin6_family		142846						
ANR	143359	Symbol	ADDRTYPE_MASK		142846						
ANR	143360	Symbol	addr -> sin_port		142846						
ANR	143361	Symbol	in6_addr_len		142846						
ANR	143362	Symbol	* ( struct in6_addr * ) ( buf + offset )		142846						
ANR	143363	Symbol	* ( uint16_t * ) ( buf + offset )		142846						
ANR	143364	Symbol	storage		142846						
ANR	143365	Symbol	ip . version		142846						
ANR	143366	Symbol	* ( uint16_t * ) ( buf + offset + 1 + name_len )		142846						
ANR	143367	Symbol	tmp		142846						
ANR	143368	Symbol	* ( uint16_t * ) ( buf + offset + in6_addr_len )		142846						
ANR	143369	Symbol	host		142846						
ANR	143370	Symbol	& addr -> sin_addr		142846						
ANR	143371	Symbol	buf_len		142846						
ANR	143372	Symbol	name_len		142846						
ANR	143373	Symbol	addr		142846						
ANR	143374	Symbol	* buf		142846						
ANR	143375	Symbol	NULL		142846						
ANR	143376	Symbol	offset		142846						
ANR	143377	Symbol	* in_addr_len		142846						
ANR	143378	Symbol	atyp		142846						
ANR	143379	Symbol	ip		142846						
ANR	143380	Symbol	INET_ADDRSTRLEN		142846						
ANR	143381	Symbol	* in6_addr_len		142846						
ANR	143382	Symbol	AF_INET		142846						
ANR	143383	Symbol	INET6_ADDRSTRLEN		142846						
ANR	143384	Symbol	AF_INET6		142846						
ANR	143385	Symbol	* ( uint8_t * ) buf		142846						
ANR	143386	Symbol	addr -> sin_addr		142846						
ANR	143387	Symbol	& ip		142846						
ANR	143388	Symbol	ntohs		142846						
ANR	143389	Symbol	buf		142846						
ANR	143390	Symbol	port		142846						
ANR	143391	Symbol	* ( uint16_t * ) ( buf + offset + in_addr_len )		142846						
ANR	143392	Symbol	* offset		142846						
ANR	143393	Symbol	* ( struct in_addr * ) ( buf + offset )		142846						
ANR	143394	Symbol	* ( uint8_t * ) ( buf + offset )		142846						
ANR	143395	Symbol	cork_ip_init		142846						
ANR	143396	Symbol	in_addr_len		142846						
ANR	143397	Symbol	* addr		142846						
ANR	143398	Symbol	addr -> sin6_port		142846						
ANR	143399	Function	get_addr_str	307:0:9040:10010							
ANR	143400	FunctionDef	get_addr_str (const struct sockaddr * sa)		143399	0					
ANR	143401	CompoundStatement		309:0:9094:10010	143399	0					
ANR	143402	Statement	static	310:4:9100:9105	143399	0	True				
ANR	143403	IdentifierDeclStatement	char s [ SS_ADDRSTRLEN ] ;	310:11:9107:9128	143399	1	True				
ANR	143404	IdentifierDecl	s [ SS_ADDRSTRLEN ]		143399	0					
ANR	143405	IdentifierDeclType	char [ SS_ADDRSTRLEN ]		143399	0					
ANR	143406	Identifier	s		143399	1					
ANR	143407	Identifier	SS_ADDRSTRLEN		143399	2					
ANR	143408	ExpressionStatement	"memset ( s , 0 , SS_ADDRSTRLEN )"	311:4:9134:9161	143399	2	True				
ANR	143409	CallExpression	"memset ( s , 0 , SS_ADDRSTRLEN )"		143399	0					
ANR	143410	Callee	memset		143399	0					
ANR	143411	Identifier	memset		143399	0					
ANR	143412	ArgumentList	s		143399	1					
ANR	143413	Argument	s		143399	0					
ANR	143414	Identifier	s		143399	0					
ANR	143415	Argument	0		143399	1					
ANR	143416	PrimaryExpression	0		143399	0					
ANR	143417	Argument	SS_ADDRSTRLEN		143399	2					
ANR	143418	Identifier	SS_ADDRSTRLEN		143399	0					
ANR	143419	IdentifierDeclStatement	char addr [ INET6_ADDRSTRLEN ] = { 0 } ;	312:4:9167:9202	143399	3	True				
ANR	143420	IdentifierDecl	addr [ INET6_ADDRSTRLEN ] = { 0 }		143399	0					
ANR	143421	IdentifierDeclType	char [ INET6_ADDRSTRLEN ]		143399	0					
ANR	143422	Identifier	addr		143399	1					
ANR	143423	Identifier	INET6_ADDRSTRLEN		143399	2					
ANR	143424	AssignmentExpression	addr [ INET6_ADDRSTRLEN ] = { 0 }		143399	3		=			
ANR	143425	Identifier	INET6_ADDRSTRLEN		143399	0					
ANR	143426	InitializerList	0		143399	1					
ANR	143427	PrimaryExpression	0		143399	0					
ANR	143428	IdentifierDeclStatement	char port [ PORTSTRLEN ] = { 0 } ;	313:4:9208:9243	143399	4	True				
ANR	143429	IdentifierDecl	port [ PORTSTRLEN ] = { 0 }		143399	0					
ANR	143430	IdentifierDeclType	char [ PORTSTRLEN ]		143399	0					
ANR	143431	Identifier	port		143399	1					
ANR	143432	Identifier	PORTSTRLEN		143399	2					
ANR	143433	AssignmentExpression	port [ PORTSTRLEN ] = { 0 }		143399	3		=			
ANR	143434	Identifier	PORTSTRLEN		143399	0					
ANR	143435	InitializerList	0		143399	1					
ANR	143436	PrimaryExpression	0		143399	0					
ANR	143437	IdentifierDeclStatement	uint16_t p ;	314:4:9249:9259	143399	5	True				
ANR	143438	IdentifierDecl	p		143399	0					
ANR	143439	IdentifierDeclType	uint16_t		143399	0					
ANR	143440	Identifier	p		143399	1					
ANR	143441	SwitchStatement	switch ( sa -> sa_family )		143399	6					
ANR	143442	Condition	sa -> sa_family	316:12:9274:9286	143399	0	True				
ANR	143443	PtrMemberAccess	sa -> sa_family		143399	0					
ANR	143444	Identifier	sa		143399	0					
ANR	143445	Identifier	sa_family		143399	1					
ANR	143446	CompoundStatement		8:27:194:194	143399	1					
ANR	143447	Label	case AF_INET :	317:4:9295:9307	143399	0	True				
ANR	143448	Identifier	AF_INET		143399	0					
ANR	143449	ExpressionStatement	"inet_ntop ( AF_INET , & ( ( ( struct sockaddr_in * ) sa ) -> sin_addr ) , addr , INET_ADDRSTRLEN )"	318:8:9317:9416	143399	1	True				
ANR	143450	CallExpression	"inet_ntop ( AF_INET , & ( ( ( struct sockaddr_in * ) sa ) -> sin_addr ) , addr , INET_ADDRSTRLEN )"		143399	0					
ANR	143451	Callee	inet_ntop		143399	0					
ANR	143452	Identifier	inet_ntop		143399	0					
ANR	143453	ArgumentList	AF_INET		143399	1					
ANR	143454	Argument	AF_INET		143399	0					
ANR	143455	Identifier	AF_INET		143399	0					
ANR	143456	Argument	& ( ( ( struct sockaddr_in * ) sa ) -> sin_addr )		143399	1					
ANR	143457	UnaryOperationExpression	& ( ( ( struct sockaddr_in * ) sa ) -> sin_addr )		143399	0					
ANR	143458	UnaryOperator	&		143399	0					
ANR	143459	PtrMemberAccess	( ( struct sockaddr_in * ) sa ) -> sin_addr		143399	1					
ANR	143460	CastExpression	( struct sockaddr_in * ) sa		143399	0					
ANR	143461	CastTarget	struct sockaddr_in *		143399	0					
ANR	143462	Identifier	sa		143399	1					
ANR	143463	Identifier	sin_addr		143399	1					
ANR	143464	Argument	addr		143399	2					
ANR	143465	Identifier	addr		143399	0					
ANR	143466	Argument	INET_ADDRSTRLEN		143399	3					
ANR	143467	Identifier	INET_ADDRSTRLEN		143399	0					
ANR	143468	ExpressionStatement	p = ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )	320:8:9426:9473	143399	2	True				
ANR	143469	AssignmentExpression	p = ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )		143399	0		=			
ANR	143470	Identifier	p		143399	0					
ANR	143471	CallExpression	ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )		143399	1					
ANR	143472	Callee	ntohs		143399	0					
ANR	143473	Identifier	ntohs		143399	0					
ANR	143474	ArgumentList	( ( struct sockaddr_in * ) sa ) -> sin_port		143399	1					
ANR	143475	Argument	( ( struct sockaddr_in * ) sa ) -> sin_port		143399	0					
ANR	143476	PtrMemberAccess	( ( struct sockaddr_in * ) sa ) -> sin_port		143399	0					
ANR	143477	CastExpression	( struct sockaddr_in * ) sa		143399	0					
ANR	143478	CastTarget	struct sockaddr_in *		143399	0					
ANR	143479	Identifier	sa		143399	1					
ANR	143480	Identifier	sin_port		143399	1					
ANR	143481	ExpressionStatement	"sprintf ( port , ""%d"" , p )"	321:8:9483:9505	143399	3	True				
ANR	143482	CallExpression	"sprintf ( port , ""%d"" , p )"		143399	0					
ANR	143483	Callee	sprintf		143399	0					
ANR	143484	Identifier	sprintf		143399	0					
ANR	143485	ArgumentList	port		143399	1					
ANR	143486	Argument	port		143399	0					
ANR	143487	Identifier	port		143399	0					
ANR	143488	Argument	"""%d"""		143399	1					
ANR	143489	PrimaryExpression	"""%d"""		143399	0					
ANR	143490	Argument	p		143399	2					
ANR	143491	Identifier	p		143399	0					
ANR	143492	BreakStatement	break ;	322:8:9515:9520	143399	4	True				
ANR	143493	Label	case AF_INET6 :	324:4:9527:9540	143399	5	True				
ANR	143494	Identifier	AF_INET6		143399	0					
ANR	143495	ExpressionStatement	"inet_ntop ( AF_INET6 , & ( ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr ) , addr , INET6_ADDRSTRLEN )"	325:8:9550:9653	143399	6	True				
ANR	143496	CallExpression	"inet_ntop ( AF_INET6 , & ( ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr ) , addr , INET6_ADDRSTRLEN )"		143399	0					
ANR	143497	Callee	inet_ntop		143399	0					
ANR	143498	Identifier	inet_ntop		143399	0					
ANR	143499	ArgumentList	AF_INET6		143399	1					
ANR	143500	Argument	AF_INET6		143399	0					
ANR	143501	Identifier	AF_INET6		143399	0					
ANR	143502	Argument	& ( ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr )		143399	1					
ANR	143503	UnaryOperationExpression	& ( ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr )		143399	0					
ANR	143504	UnaryOperator	&		143399	0					
ANR	143505	PtrMemberAccess	( ( struct sockaddr_in6 * ) sa ) -> sin6_addr		143399	1					
ANR	143506	CastExpression	( struct sockaddr_in6 * ) sa		143399	0					
ANR	143507	CastTarget	struct sockaddr_in6 *		143399	0					
ANR	143508	Identifier	sa		143399	1					
ANR	143509	Identifier	sin6_addr		143399	1					
ANR	143510	Argument	addr		143399	2					
ANR	143511	Identifier	addr		143399	0					
ANR	143512	Argument	INET6_ADDRSTRLEN		143399	3					
ANR	143513	Identifier	INET6_ADDRSTRLEN		143399	0					
ANR	143514	ExpressionStatement	p = ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )	327:8:9663:9710	143399	7	True				
ANR	143515	AssignmentExpression	p = ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )		143399	0		=			
ANR	143516	Identifier	p		143399	0					
ANR	143517	CallExpression	ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )		143399	1					
ANR	143518	Callee	ntohs		143399	0					
ANR	143519	Identifier	ntohs		143399	0					
ANR	143520	ArgumentList	( ( struct sockaddr_in * ) sa ) -> sin_port		143399	1					
ANR	143521	Argument	( ( struct sockaddr_in * ) sa ) -> sin_port		143399	0					
ANR	143522	PtrMemberAccess	( ( struct sockaddr_in * ) sa ) -> sin_port		143399	0					
ANR	143523	CastExpression	( struct sockaddr_in * ) sa		143399	0					
ANR	143524	CastTarget	struct sockaddr_in *		143399	0					
ANR	143525	Identifier	sa		143399	1					
ANR	143526	Identifier	sin_port		143399	1					
ANR	143527	ExpressionStatement	"sprintf ( port , ""%d"" , p )"	328:8:9720:9742	143399	8	True				
ANR	143528	CallExpression	"sprintf ( port , ""%d"" , p )"		143399	0					
ANR	143529	Callee	sprintf		143399	0					
ANR	143530	Identifier	sprintf		143399	0					
ANR	143531	ArgumentList	port		143399	1					
ANR	143532	Argument	port		143399	0					
ANR	143533	Identifier	port		143399	0					
ANR	143534	Argument	"""%d"""		143399	1					
ANR	143535	PrimaryExpression	"""%d"""		143399	0					
ANR	143536	Argument	p		143399	2					
ANR	143537	Identifier	p		143399	0					
ANR	143538	BreakStatement	break ;	329:8:9752:9757	143399	9	True				
ANR	143539	Label	default :	331:4:9764:9771	143399	10	True				
ANR	143540	Identifier	default		143399	0					
ANR	143541	ExpressionStatement	"strncpy ( s , ""Unknown AF"" , SS_ADDRSTRLEN )"	332:8:9781:9820	143399	11	True				
ANR	143542	CallExpression	"strncpy ( s , ""Unknown AF"" , SS_ADDRSTRLEN )"		143399	0					
ANR	143543	Callee	strncpy		143399	0					
ANR	143544	Identifier	strncpy		143399	0					
ANR	143545	ArgumentList	s		143399	1					
ANR	143546	Argument	s		143399	0					
ANR	143547	Identifier	s		143399	0					
ANR	143548	Argument	"""Unknown AF"""		143399	1					
ANR	143549	PrimaryExpression	"""Unknown AF"""		143399	0					
ANR	143550	Argument	SS_ADDRSTRLEN		143399	2					
ANR	143551	Identifier	SS_ADDRSTRLEN		143399	0					
ANR	143552	IdentifierDeclStatement	int addr_len = strlen ( addr ) ;	335:4:9833:9860	143399	7	True				
ANR	143553	IdentifierDecl	addr_len = strlen ( addr )		143399	0					
ANR	143554	IdentifierDeclType	int		143399	0					
ANR	143555	Identifier	addr_len		143399	1					
ANR	143556	AssignmentExpression	addr_len = strlen ( addr )		143399	2		=			
ANR	143557	Identifier	addr_len		143399	0					
ANR	143558	CallExpression	strlen ( addr )		143399	1					
ANR	143559	Callee	strlen		143399	0					
ANR	143560	Identifier	strlen		143399	0					
ANR	143561	ArgumentList	addr		143399	1					
ANR	143562	Argument	addr		143399	0					
ANR	143563	Identifier	addr		143399	0					
ANR	143564	IdentifierDeclStatement	int port_len = strlen ( port ) ;	336:4:9866:9893	143399	8	True				
ANR	143565	IdentifierDecl	port_len = strlen ( port )		143399	0					
ANR	143566	IdentifierDeclType	int		143399	0					
ANR	143567	Identifier	port_len		143399	1					
ANR	143568	AssignmentExpression	port_len = strlen ( port )		143399	2		=			
ANR	143569	Identifier	port_len		143399	0					
ANR	143570	CallExpression	strlen ( port )		143399	1					
ANR	143571	Callee	strlen		143399	0					
ANR	143572	Identifier	strlen		143399	0					
ANR	143573	ArgumentList	port		143399	1					
ANR	143574	Argument	port		143399	0					
ANR	143575	Identifier	port		143399	0					
ANR	143576	ExpressionStatement	"memcpy ( s , addr , addr_len )"	337:4:9899:9924	143399	9	True				
ANR	143577	CallExpression	"memcpy ( s , addr , addr_len )"		143399	0					
ANR	143578	Callee	memcpy		143399	0					
ANR	143579	Identifier	memcpy		143399	0					
ANR	143580	ArgumentList	s		143399	1					
ANR	143581	Argument	s		143399	0					
ANR	143582	Identifier	s		143399	0					
ANR	143583	Argument	addr		143399	1					
ANR	143584	Identifier	addr		143399	0					
ANR	143585	Argument	addr_len		143399	2					
ANR	143586	Identifier	addr_len		143399	0					
ANR	143587	ExpressionStatement	"memcpy ( s + addr_len + 1 , port , port_len )"	338:4:9930:9970	143399	10	True				
ANR	143588	CallExpression	"memcpy ( s + addr_len + 1 , port , port_len )"		143399	0					
ANR	143589	Callee	memcpy		143399	0					
ANR	143590	Identifier	memcpy		143399	0					
ANR	143591	ArgumentList	s + addr_len + 1		143399	1					
ANR	143592	Argument	s + addr_len + 1		143399	0					
ANR	143593	AdditiveExpression	s + addr_len + 1		143399	0		+			
ANR	143594	Identifier	s		143399	0					
ANR	143595	AdditiveExpression	addr_len + 1		143399	1		+			
ANR	143596	Identifier	addr_len		143399	0					
ANR	143597	PrimaryExpression	1		143399	1					
ANR	143598	Argument	port		143399	1					
ANR	143599	Identifier	port		143399	0					
ANR	143600	Argument	port_len		143399	2					
ANR	143601	Identifier	port_len		143399	0					
ANR	143602	ExpressionStatement	s [ addr_len ] = ':'	339:4:9976:9993	143399	11	True				
ANR	143603	AssignmentExpression	s [ addr_len ] = ':'		143399	0		=			
ANR	143604	ArrayIndexing	s [ addr_len ]		143399	0					
ANR	143605	Identifier	s		143399	0					
ANR	143606	Identifier	addr_len		143399	1					
ANR	143607	PrimaryExpression	':'		143399	1					
ANR	143608	ReturnStatement	return s ;	341:4:10000:10008	143399	12	True				
ANR	143609	Identifier	s		143399	0					
ANR	143610	ReturnType	static char *		143399	1					
ANR	143611	Identifier	get_addr_str		143399	2					
ANR	143612	ParameterList	const struct sockaddr * sa		143399	3					
ANR	143613	Parameter	const struct sockaddr * sa	308:13:9067:9091	143399	0	True				
ANR	143614	ParameterType	const struct sockaddr *		143399	0					
ANR	143615	Identifier	sa		143399	1					
ANR	143616	CFGEntryNode	ENTRY		143399		True				
ANR	143617	CFGExitNode	EXIT		143399		True				
ANR	143618	Symbol	PORTSTRLEN		143399						
ANR	143619	Symbol	sa -> sa_family		143399						
ANR	143620	Symbol	SS_ADDRSTRLEN		143399						
ANR	143621	Symbol	INET_ADDRSTRLEN		143399						
ANR	143622	Symbol	INET6_ADDRSTRLEN		143399						
ANR	143623	Symbol	AF_INET		143399						
ANR	143624	Symbol	& ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr		143399						
ANR	143625	Symbol	sa		143399						
ANR	143626	Symbol	( ( struct sockaddr_in * ) sa ) -> sin_port		143399						
ANR	143627	Symbol	AF_INET6		143399						
ANR	143628	Symbol	* addr_len		143399						
ANR	143629	Symbol	p		143399						
ANR	143630	Symbol	ntohs		143399						
ANR	143631	Symbol	& ( ( struct sockaddr_in * ) sa ) -> sin_addr		143399						
ANR	143632	Symbol	strlen		143399						
ANR	143633	Symbol	s		143399						
ANR	143634	Symbol	port		143399						
ANR	143635	Symbol	* sa		143399						
ANR	143636	Symbol	port_len		143399						
ANR	143637	Symbol	addr		143399						
ANR	143638	Symbol	* s		143399						
ANR	143639	Symbol	addr_len		143399						
ANR	143640	Function	create_remote_socket	344:0:10013:11267							
ANR	143641	FunctionDef	create_remote_socket (int ipv6)		143640	0					
ANR	143642	CompoundStatement		346:0:10048:11267	143640	0					
ANR	143643	IdentifierDeclStatement	int remote_sock ;	347:4:10054:10069	143640	0	True				
ANR	143644	IdentifierDecl	remote_sock		143640	0					
ANR	143645	IdentifierDeclType	int		143640	0					
ANR	143646	Identifier	remote_sock		143640	1					
ANR	143647	IfStatement	if ( ipv6 )		143640	1					
ANR	143648	Condition	ipv6	349:8:10080:10083	143640	0	True				
ANR	143649	Identifier	ipv6		143640	0					
ANR	143650	CompoundStatement		6:8:81:105	143640	1					
ANR	143651	IdentifierDeclStatement	struct sockaddr_in6 addr ;	351:8:10130:10154	143640	0	True				
ANR	143652	IdentifierDecl	addr		143640	0					
ANR	143653	IdentifierDeclType	struct sockaddr_in6		143640	0					
ANR	143654	Identifier	addr		143640	1					
ANR	143655	ExpressionStatement	"memset ( & addr , 0 , sizeof ( struct sockaddr_in6 ) )"	352:8:10164:10209	143640	1	True				
ANR	143656	CallExpression	"memset ( & addr , 0 , sizeof ( struct sockaddr_in6 ) )"		143640	0					
ANR	143657	Callee	memset		143640	0					
ANR	143658	Identifier	memset		143640	0					
ANR	143659	ArgumentList	& addr		143640	1					
ANR	143660	Argument	& addr		143640	0					
ANR	143661	UnaryOperationExpression	& addr		143640	0					
ANR	143662	UnaryOperator	&		143640	0					
ANR	143663	Identifier	addr		143640	1					
ANR	143664	Argument	0		143640	1					
ANR	143665	PrimaryExpression	0		143640	0					
ANR	143666	Argument	sizeof ( struct sockaddr_in6 )		143640	2					
ANR	143667	SizeofExpression	sizeof ( struct sockaddr_in6 )		143640	0					
ANR	143668	Sizeof	sizeof		143640	0					
ANR	143669	SizeofOperand	struct sockaddr_in6		143640	1					
ANR	143670	ExpressionStatement	addr . sin6_family = AF_INET6	353:8:10219:10246	143640	2	True				
ANR	143671	AssignmentExpression	addr . sin6_family = AF_INET6		143640	0		=			
ANR	143672	MemberAccess	addr . sin6_family		143640	0					
ANR	143673	Identifier	addr		143640	0					
ANR	143674	Identifier	sin6_family		143640	1					
ANR	143675	Identifier	AF_INET6		143640	1					
ANR	143676	ExpressionStatement	addr . sin6_addr = in6addr_any	354:8:10256:10286	143640	3	True				
ANR	143677	AssignmentExpression	addr . sin6_addr = in6addr_any		143640	0		=			
ANR	143678	MemberAccess	addr . sin6_addr		143640	0					
ANR	143679	Identifier	addr		143640	0					
ANR	143680	Identifier	sin6_addr		143640	1					
ANR	143681	Identifier	in6addr_any		143640	1					
ANR	143682	ExpressionStatement	addr . sin6_port = 0	355:8:10296:10316	143640	4	True				
ANR	143683	AssignmentExpression	addr . sin6_port = 0		143640	0		=			
ANR	143684	MemberAccess	addr . sin6_port		143640	0					
ANR	143685	Identifier	addr		143640	0					
ANR	143686	Identifier	sin6_port		143640	1					
ANR	143687	PrimaryExpression	0		143640	1					
ANR	143688	ExpressionStatement	"remote_sock = socket ( AF_INET6 , SOCK_DGRAM , 0 )"	356:8:10326:10376	143640	5	True				
ANR	143689	AssignmentExpression	"remote_sock = socket ( AF_INET6 , SOCK_DGRAM , 0 )"		143640	0		=			
ANR	143690	Identifier	remote_sock		143640	0					
ANR	143691	CallExpression	"socket ( AF_INET6 , SOCK_DGRAM , 0 )"		143640	1					
ANR	143692	Callee	socket		143640	0					
ANR	143693	Identifier	socket		143640	0					
ANR	143694	ArgumentList	AF_INET6		143640	1					
ANR	143695	Argument	AF_INET6		143640	0					
ANR	143696	Identifier	AF_INET6		143640	0					
ANR	143697	Argument	SOCK_DGRAM		143640	1					
ANR	143698	Identifier	SOCK_DGRAM		143640	0					
ANR	143699	Argument	0		143640	2					
ANR	143700	PrimaryExpression	0		143640	0					
ANR	143701	IfStatement	if ( remote_sock == - 1 )		143640	6					
ANR	143702	Condition	remote_sock == - 1	357:12:10390:10406	143640	0	True				
ANR	143703	EqualityExpression	remote_sock == - 1		143640	0		==			
ANR	143704	Identifier	remote_sock		143640	0					
ANR	143705	UnaryOperationExpression	- 1		143640	1					
ANR	143706	UnaryOperator	-		143640	0					
ANR	143707	PrimaryExpression	1		143640	1					
ANR	143708	CompoundStatement		12:31:360:360	143640	1					
ANR	143709	ExpressionStatement	"ERROR ( ""[udp] cannot create socket"" )"	358:12:10423:10458	143640	0	True				
ANR	143710	CallExpression	"ERROR ( ""[udp] cannot create socket"" )"		143640	0					
ANR	143711	Callee	ERROR		143640	0					
ANR	143712	Identifier	ERROR		143640	0					
ANR	143713	ArgumentList	"""[udp] cannot create socket"""		143640	1					
ANR	143714	Argument	"""[udp] cannot create socket"""		143640	0					
ANR	143715	PrimaryExpression	"""[udp] cannot create socket"""		143640	0					
ANR	143716	ReturnStatement	return - 1 ;	359:12:10472:10481	143640	1	True				
ANR	143717	UnaryOperationExpression	- 1		143640	0					
ANR	143718	UnaryOperator	-		143640	0					
ANR	143719	PrimaryExpression	1		143640	1					
ANR	143720	IfStatement	"if ( bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) != 0 )"		143640	7					
ANR	143721	Condition	"bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) != 0"	361:12:10505:10566	143640	0	True				
ANR	143722	EqualityExpression	"bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) != 0"		143640	0		!=			
ANR	143723	CallExpression	"bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) )"		143640	0					
ANR	143724	Callee	bind		143640	0					
ANR	143725	Identifier	bind		143640	0					
ANR	143726	ArgumentList	remote_sock		143640	1					
ANR	143727	Argument	remote_sock		143640	0					
ANR	143728	Identifier	remote_sock		143640	0					
ANR	143729	Argument	( struct sockaddr * ) & addr		143640	1					
ANR	143730	CastExpression	( struct sockaddr * ) & addr		143640	0					
ANR	143731	CastTarget	struct sockaddr *		143640	0					
ANR	143732	UnaryOperationExpression	& addr		143640	1					
ANR	143733	UnaryOperator	&		143640	0					
ANR	143734	Identifier	addr		143640	1					
ANR	143735	Argument	sizeof ( addr )		143640	2					
ANR	143736	SizeofExpression	sizeof ( addr )		143640	0					
ANR	143737	Sizeof	sizeof		143640	0					
ANR	143738	SizeofOperand	addr		143640	1					
ANR	143739	PrimaryExpression	0		143640	1					
ANR	143740	CompoundStatement		16:76:520:520	143640	1					
ANR	143741	ExpressionStatement	"FATAL ( ""[udp] cannot bind remote"" )"	362:12:10583:10616	143640	0	True				
ANR	143742	CallExpression	"FATAL ( ""[udp] cannot bind remote"" )"		143640	0					
ANR	143743	Callee	FATAL		143640	0					
ANR	143744	Identifier	FATAL		143640	0					
ANR	143745	ArgumentList	"""[udp] cannot bind remote"""		143640	1					
ANR	143746	Argument	"""[udp] cannot bind remote"""		143640	0					
ANR	143747	PrimaryExpression	"""[udp] cannot bind remote"""		143640	0					
ANR	143748	ReturnStatement	return - 1 ;	363:12:10630:10639	143640	1	True				
ANR	143749	UnaryOperationExpression	- 1		143640	0					
ANR	143750	UnaryOperator	-		143640	0					
ANR	143751	PrimaryExpression	1		143640	1					
ANR	143752	ElseStatement	else		143640	0					
ANR	143753	CompoundStatement		22:8:655:678	143640	0					
ANR	143754	IdentifierDeclStatement	struct sockaddr_in addr ;	367:8:10704:10727	143640	0	True				
ANR	143755	IdentifierDecl	addr		143640	0					
ANR	143756	IdentifierDeclType	struct sockaddr_in		143640	0					
ANR	143757	Identifier	addr		143640	1					
ANR	143758	ExpressionStatement	"memset ( & addr , 0 , sizeof ( struct sockaddr_in ) )"	368:8:10737:10781	143640	1	True				
ANR	143759	CallExpression	"memset ( & addr , 0 , sizeof ( struct sockaddr_in ) )"		143640	0					
ANR	143760	Callee	memset		143640	0					
ANR	143761	Identifier	memset		143640	0					
ANR	143762	ArgumentList	& addr		143640	1					
ANR	143763	Argument	& addr		143640	0					
ANR	143764	UnaryOperationExpression	& addr		143640	0					
ANR	143765	UnaryOperator	&		143640	0					
ANR	143766	Identifier	addr		143640	1					
ANR	143767	Argument	0		143640	1					
ANR	143768	PrimaryExpression	0		143640	0					
ANR	143769	Argument	sizeof ( struct sockaddr_in )		143640	2					
ANR	143770	SizeofExpression	sizeof ( struct sockaddr_in )		143640	0					
ANR	143771	Sizeof	sizeof		143640	0					
ANR	143772	SizeofOperand	struct sockaddr_in		143640	1					
ANR	143773	ExpressionStatement	addr . sin_family = AF_INET	369:8:10791:10821	143640	2	True				
ANR	143774	AssignmentExpression	addr . sin_family = AF_INET		143640	0		=			
ANR	143775	MemberAccess	addr . sin_family		143640	0					
ANR	143776	Identifier	addr		143640	0					
ANR	143777	Identifier	sin_family		143640	1					
ANR	143778	Identifier	AF_INET		143640	1					
ANR	143779	ExpressionStatement	addr . sin_addr . s_addr = INADDR_ANY	370:8:10831:10864	143640	3	True				
ANR	143780	AssignmentExpression	addr . sin_addr . s_addr = INADDR_ANY		143640	0		=			
ANR	143781	MemberAccess	addr . sin_addr . s_addr		143640	0					
ANR	143782	MemberAccess	addr . sin_addr		143640	0					
ANR	143783	Identifier	addr		143640	0					
ANR	143784	Identifier	sin_addr		143640	1					
ANR	143785	Identifier	s_addr		143640	1					
ANR	143786	Identifier	INADDR_ANY		143640	1					
ANR	143787	ExpressionStatement	addr . sin_port = 0	371:8:10874:10898	143640	4	True				
ANR	143788	AssignmentExpression	addr . sin_port = 0		143640	0		=			
ANR	143789	MemberAccess	addr . sin_port		143640	0					
ANR	143790	Identifier	addr		143640	0					
ANR	143791	Identifier	sin_port		143640	1					
ANR	143792	PrimaryExpression	0		143640	1					
ANR	143793	ExpressionStatement	"remote_sock = socket ( AF_INET , SOCK_DGRAM , 0 )"	372:8:10908:10961	143640	5	True				
ANR	143794	AssignmentExpression	"remote_sock = socket ( AF_INET , SOCK_DGRAM , 0 )"		143640	0		=			
ANR	143795	Identifier	remote_sock		143640	0					
ANR	143796	CallExpression	"socket ( AF_INET , SOCK_DGRAM , 0 )"		143640	1					
ANR	143797	Callee	socket		143640	0					
ANR	143798	Identifier	socket		143640	0					
ANR	143799	ArgumentList	AF_INET		143640	1					
ANR	143800	Argument	AF_INET		143640	0					
ANR	143801	Identifier	AF_INET		143640	0					
ANR	143802	Argument	SOCK_DGRAM		143640	1					
ANR	143803	Identifier	SOCK_DGRAM		143640	0					
ANR	143804	Argument	0		143640	2					
ANR	143805	PrimaryExpression	0		143640	0					
ANR	143806	IfStatement	if ( remote_sock == - 1 )		143640	6					
ANR	143807	Condition	remote_sock == - 1	373:12:10975:10991	143640	0	True				
ANR	143808	EqualityExpression	remote_sock == - 1		143640	0		==			
ANR	143809	Identifier	remote_sock		143640	0					
ANR	143810	UnaryOperationExpression	- 1		143640	1					
ANR	143811	UnaryOperator	-		143640	0					
ANR	143812	PrimaryExpression	1		143640	1					
ANR	143813	CompoundStatement		28:31:945:945	143640	1					
ANR	143814	ExpressionStatement	"ERROR ( ""[udp] cannot create socket"" )"	374:12:11008:11043	143640	0	True				
ANR	143815	CallExpression	"ERROR ( ""[udp] cannot create socket"" )"		143640	0					
ANR	143816	Callee	ERROR		143640	0					
ANR	143817	Identifier	ERROR		143640	0					
ANR	143818	ArgumentList	"""[udp] cannot create socket"""		143640	1					
ANR	143819	Argument	"""[udp] cannot create socket"""		143640	0					
ANR	143820	PrimaryExpression	"""[udp] cannot create socket"""		143640	0					
ANR	143821	ReturnStatement	return - 1 ;	375:12:11057:11066	143640	1	True				
ANR	143822	UnaryOperationExpression	- 1		143640	0					
ANR	143823	UnaryOperator	-		143640	0					
ANR	143824	PrimaryExpression	1		143640	1					
ANR	143825	IfStatement	"if ( bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) != 0 )"		143640	7					
ANR	143826	Condition	"bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) != 0"	378:12:11091:11152	143640	0	True				
ANR	143827	EqualityExpression	"bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) != 0"		143640	0		!=			
ANR	143828	CallExpression	"bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) )"		143640	0					
ANR	143829	Callee	bind		143640	0					
ANR	143830	Identifier	bind		143640	0					
ANR	143831	ArgumentList	remote_sock		143640	1					
ANR	143832	Argument	remote_sock		143640	0					
ANR	143833	Identifier	remote_sock		143640	0					
ANR	143834	Argument	( struct sockaddr * ) & addr		143640	1					
ANR	143835	CastExpression	( struct sockaddr * ) & addr		143640	0					
ANR	143836	CastTarget	struct sockaddr *		143640	0					
ANR	143837	UnaryOperationExpression	& addr		143640	1					
ANR	143838	UnaryOperator	&		143640	0					
ANR	143839	Identifier	addr		143640	1					
ANR	143840	Argument	sizeof ( addr )		143640	2					
ANR	143841	SizeofExpression	sizeof ( addr )		143640	0					
ANR	143842	Sizeof	sizeof		143640	0					
ANR	143843	SizeofOperand	addr		143640	1					
ANR	143844	PrimaryExpression	0		143640	1					
ANR	143845	CompoundStatement		33:76:1106:1106	143640	1					
ANR	143846	ExpressionStatement	"FATAL ( ""[udp] cannot bind remote"" )"	379:12:11169:11202	143640	0	True				
ANR	143847	CallExpression	"FATAL ( ""[udp] cannot bind remote"" )"		143640	0					
ANR	143848	Callee	FATAL		143640	0					
ANR	143849	Identifier	FATAL		143640	0					
ANR	143850	ArgumentList	"""[udp] cannot bind remote"""		143640	1					
ANR	143851	Argument	"""[udp] cannot bind remote"""		143640	0					
ANR	143852	PrimaryExpression	"""[udp] cannot bind remote"""		143640	0					
ANR	143853	ReturnStatement	return - 1 ;	380:12:11216:11225	143640	1	True				
ANR	143854	UnaryOperationExpression	- 1		143640	0					
ANR	143855	UnaryOperator	-		143640	0					
ANR	143856	PrimaryExpression	1		143640	1					
ANR	143857	ReturnStatement	return remote_sock ;	383:4:11247:11265	143640	2	True				
ANR	143858	Identifier	remote_sock		143640	0					
ANR	143859	ReturnType	int		143640	1					
ANR	143860	Identifier	create_remote_socket		143640	2					
ANR	143861	ParameterList	int ipv6		143640	3					
ANR	143862	Parameter	int ipv6	345:21:10038:10045	143640	0	True				
ANR	143863	ParameterType	int		143640	0					
ANR	143864	Identifier	ipv6		143640	1					
ANR	143865	CFGEntryNode	ENTRY		143640		True				
ANR	143866	CFGExitNode	EXIT		143640		True				
ANR	143867	Symbol	addr . sin_family		143640						
ANR	143868	Symbol	addr . sin_addr		143640						
ANR	143869	Symbol	& addr		143640						
ANR	143870	Symbol	addr . sin_port		143640						
ANR	143871	Symbol	in6addr_any		143640						
ANR	143872	Symbol	AF_INET		143640						
ANR	143873	Symbol	SOCK_DGRAM		143640						
ANR	143874	Symbol	addr . sin6_port		143640						
ANR	143875	Symbol	remote_sock		143640						
ANR	143876	Symbol	AF_INET6		143640						
ANR	143877	Symbol	addr . sin6_family		143640						
ANR	143878	Symbol	bind		143640						
ANR	143879	Symbol	addr . sin6_addr		143640						
ANR	143880	Symbol	addr . sin_addr . s_addr		143640						
ANR	143881	Symbol	ipv6		143640						
ANR	143882	Symbol	socket		143640						
ANR	143883	Symbol	INADDR_ANY		143640						
ANR	143884	Symbol	addr		143640						
ANR	143885	Function	create_server_socket	386:0:11270:14620							
ANR	143886	FunctionDef	"create_server_socket (const char * host , const char * port)"		143885	0					
ANR	143887	CompoundStatement		388:0:11331:14620	143885	0					
ANR	143888	IdentifierDeclStatement	struct addrinfo hints ;	389:4:11337:11358	143885	0	True				
ANR	143889	IdentifierDecl	hints		143885	0					
ANR	143890	IdentifierDeclType	struct addrinfo		143885	0					
ANR	143891	Identifier	hints		143885	1					
ANR	143892	IdentifierDeclStatement	"struct addrinfo * result , * rp , * ipv4v6bindall ;"	390:4:11364:11408	143885	1	True				
ANR	143893	IdentifierDecl	* result		143885	0					
ANR	143894	IdentifierDeclType	struct addrinfo *		143885	0					
ANR	143895	Identifier	result		143885	1					
ANR	143896	IdentifierDecl	* rp		143885	1					
ANR	143897	IdentifierDeclType	struct addrinfo *		143885	0					
ANR	143898	Identifier	rp		143885	1					
ANR	143899	IdentifierDecl	* ipv4v6bindall		143885	2					
ANR	143900	IdentifierDeclType	struct addrinfo *		143885	0					
ANR	143901	Identifier	ipv4v6bindall		143885	1					
ANR	143902	IdentifierDeclStatement	"int s , server_sock ;"	391:4:11414:11432	143885	2	True				
ANR	143903	IdentifierDecl	s		143885	0					
ANR	143904	IdentifierDeclType	int		143885	0					
ANR	143905	Identifier	s		143885	1					
ANR	143906	IdentifierDecl	server_sock		143885	1					
ANR	143907	IdentifierDeclType	int		143885	0					
ANR	143908	Identifier	server_sock		143885	1					
ANR	143909	ExpressionStatement	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"	393:4:11439:11481	143885	3	True				
ANR	143910	CallExpression	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"		143885	0					
ANR	143911	Callee	memset		143885	0					
ANR	143912	Identifier	memset		143885	0					
ANR	143913	ArgumentList	& hints		143885	1					
ANR	143914	Argument	& hints		143885	0					
ANR	143915	UnaryOperationExpression	& hints		143885	0					
ANR	143916	UnaryOperator	&		143885	0					
ANR	143917	Identifier	hints		143885	1					
ANR	143918	Argument	0		143885	1					
ANR	143919	PrimaryExpression	0		143885	0					
ANR	143920	Argument	sizeof ( struct addrinfo )		143885	2					
ANR	143921	SizeofExpression	sizeof ( struct addrinfo )		143885	0					
ANR	143922	Sizeof	sizeof		143885	0					
ANR	143923	SizeofOperand	struct addrinfo		143885	1					
ANR	143924	ExpressionStatement	hints . ai_family = AF_UNSPEC	394:4:11487:11516	143885	4	True				
ANR	143925	AssignmentExpression	hints . ai_family = AF_UNSPEC		143885	0		=			
ANR	143926	MemberAccess	hints . ai_family		143885	0					
ANR	143927	Identifier	hints		143885	0					
ANR	143928	Identifier	ai_family		143885	1					
ANR	143929	Identifier	AF_UNSPEC		143885	1					
ANR	143930	ExpressionStatement	hints . ai_socktype = SOCK_DGRAM	395:4:11571:11601	143885	5	True				
ANR	143931	AssignmentExpression	hints . ai_socktype = SOCK_DGRAM		143885	0		=			
ANR	143932	MemberAccess	hints . ai_socktype		143885	0					
ANR	143933	Identifier	hints		143885	0					
ANR	143934	Identifier	ai_socktype		143885	1					
ANR	143935	Identifier	SOCK_DGRAM		143885	1					
ANR	143936	ExpressionStatement	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG	396:4:11647:11693	143885	6	True				
ANR	143937	AssignmentExpression	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG		143885	0		=			
ANR	143938	MemberAccess	hints . ai_flags		143885	0					
ANR	143939	Identifier	hints		143885	0					
ANR	143940	Identifier	ai_flags		143885	1					
ANR	143941	InclusiveOrExpression	AI_PASSIVE | AI_ADDRCONFIG		143885	1		|			
ANR	143942	Identifier	AI_PASSIVE		143885	0					
ANR	143943	Identifier	AI_ADDRCONFIG		143885	1					
ANR	143944	ExpressionStatement	hints . ai_protocol = IPPROTO_UDP	397:4:11729:11760	143885	7	True				
ANR	143945	AssignmentExpression	hints . ai_protocol = IPPROTO_UDP		143885	0		=			
ANR	143946	MemberAccess	hints . ai_protocol		143885	0					
ANR	143947	Identifier	hints		143885	0					
ANR	143948	Identifier	ai_protocol		143885	1					
ANR	143949	Identifier	IPPROTO_UDP		143885	1					
ANR	143950	ExpressionStatement	"s = getaddrinfo ( host , port , & hints , & result )"	399:4:11767:11811	143885	8	True				
ANR	143951	AssignmentExpression	"s = getaddrinfo ( host , port , & hints , & result )"		143885	0		=			
ANR	143952	Identifier	s		143885	0					
ANR	143953	CallExpression	"getaddrinfo ( host , port , & hints , & result )"		143885	1					
ANR	143954	Callee	getaddrinfo		143885	0					
ANR	143955	Identifier	getaddrinfo		143885	0					
ANR	143956	ArgumentList	host		143885	1					
ANR	143957	Argument	host		143885	0					
ANR	143958	Identifier	host		143885	0					
ANR	143959	Argument	port		143885	1					
ANR	143960	Identifier	port		143885	0					
ANR	143961	Argument	& hints		143885	2					
ANR	143962	UnaryOperationExpression	& hints		143885	0					
ANR	143963	UnaryOperator	&		143885	0					
ANR	143964	Identifier	hints		143885	1					
ANR	143965	Argument	& result		143885	3					
ANR	143966	UnaryOperationExpression	& result		143885	0					
ANR	143967	UnaryOperator	&		143885	0					
ANR	143968	Identifier	result		143885	1					
ANR	143969	IfStatement	if ( s != 0 )		143885	9					
ANR	143970	Condition	s != 0	400:8:11821:11826	143885	0	True				
ANR	143971	EqualityExpression	s != 0		143885	0		!=			
ANR	143972	Identifier	s		143885	0					
ANR	143973	PrimaryExpression	0		143885	1					
ANR	143974	CompoundStatement		13:16:497:497	143885	1					
ANR	143975	ExpressionStatement	"LOGE ( ""[udp] getaddrinfo: %s"" , gai_strerror ( s ) )"	401:8:11839:11885	143885	0	True				
ANR	143976	CallExpression	"LOGE ( ""[udp] getaddrinfo: %s"" , gai_strerror ( s ) )"		143885	0					
ANR	143977	Callee	LOGE		143885	0					
ANR	143978	Identifier	LOGE		143885	0					
ANR	143979	ArgumentList	"""[udp] getaddrinfo: %s"""		143885	1					
ANR	143980	Argument	"""[udp] getaddrinfo: %s"""		143885	0					
ANR	143981	PrimaryExpression	"""[udp] getaddrinfo: %s"""		143885	0					
ANR	143982	Argument	gai_strerror ( s )		143885	1					
ANR	143983	CallExpression	gai_strerror ( s )		143885	0					
ANR	143984	Callee	gai_strerror		143885	0					
ANR	143985	Identifier	gai_strerror		143885	0					
ANR	143986	ArgumentList	s		143885	1					
ANR	143987	Argument	s		143885	0					
ANR	143988	Identifier	s		143885	0					
ANR	143989	ReturnStatement	return - 1 ;	402:8:11895:11904	143885	1	True				
ANR	143990	UnaryOperationExpression	- 1		143885	0					
ANR	143991	UnaryOperator	-		143885	0					
ANR	143992	PrimaryExpression	1		143885	1					
ANR	143993	IfStatement	if ( result == NULL )		143885	10					
ANR	143994	Condition	result == NULL	405:8:11921:11934	143885	0	True				
ANR	143995	EqualityExpression	result == NULL		143885	0		==			
ANR	143996	Identifier	result		143885	0					
ANR	143997	Identifier	NULL		143885	1					
ANR	143998	CompoundStatement		18:24:605:605	143885	1					
ANR	143999	ExpressionStatement	"LOGE ( ""[udp] cannot bind"" )"	406:8:11947:11972	143885	0	True				
ANR	144000	CallExpression	"LOGE ( ""[udp] cannot bind"" )"		143885	0					
ANR	144001	Callee	LOGE		143885	0					
ANR	144002	Identifier	LOGE		143885	0					
ANR	144003	ArgumentList	"""[udp] cannot bind"""		143885	1					
ANR	144004	Argument	"""[udp] cannot bind"""		143885	0					
ANR	144005	PrimaryExpression	"""[udp] cannot bind"""		143885	0					
ANR	144006	ReturnStatement	return - 1 ;	407:8:11982:11991	143885	1	True				
ANR	144007	UnaryOperationExpression	- 1		143885	0					
ANR	144008	UnaryOperator	-		143885	0					
ANR	144009	PrimaryExpression	1		143885	1					
ANR	144010	ExpressionStatement	rp = result	410:4:12004:12015	143885	11	True				
ANR	144011	AssignmentExpression	rp = result		143885	0		=			
ANR	144012	Identifier	rp		143885	0					
ANR	144013	Identifier	result		143885	1					
ANR	144014	IfStatement	if ( ! host )		143885	12					
ANR	144015	Condition	! host	418:8:12359:12363	143885	0	True				
ANR	144016	UnaryOperationExpression	! host		143885	0					
ANR	144017	UnaryOperator	!		143885	0					
ANR	144018	Identifier	host		143885	1					
ANR	144019	CompoundStatement		31:15:1034:1034	143885	1					
ANR	144020	ExpressionStatement	ipv4v6bindall = result	419:8:12376:12398	143885	0	True				
ANR	144021	AssignmentExpression	ipv4v6bindall = result		143885	0		=			
ANR	144022	Identifier	ipv4v6bindall		143885	0					
ANR	144023	Identifier	result		143885	1					
ANR	144024	WhileStatement	while ( ipv4v6bindall )		143885	1					
ANR	144025	Condition	ipv4v6bindall	422:15:12495:12507	143885	0	True				
ANR	144026	Identifier	ipv4v6bindall		143885	0					
ANR	144027	CompoundStatement		35:30:1178:1178	143885	1					
ANR	144028	IfStatement	if ( ipv4v6bindall -> ai_family == AF_INET6 )		143885	0					
ANR	144029	Condition	ipv4v6bindall -> ai_family == AF_INET6	423:16:12528:12563	143885	0	True				
ANR	144030	EqualityExpression	ipv4v6bindall -> ai_family == AF_INET6		143885	0		==			
ANR	144031	PtrMemberAccess	ipv4v6bindall -> ai_family		143885	0					
ANR	144032	Identifier	ipv4v6bindall		143885	0					
ANR	144033	Identifier	ai_family		143885	1					
ANR	144034	Identifier	AF_INET6		143885	1					
ANR	144035	CompoundStatement		36:54:1234:1234	143885	1					
ANR	144036	ExpressionStatement	rp = ipv4v6bindall	424:16:12584:12602	143885	0	True				
ANR	144037	AssignmentExpression	rp = ipv4v6bindall		143885	0		=			
ANR	144038	Identifier	rp		143885	0					
ANR	144039	Identifier	ipv4v6bindall		143885	1					
ANR	144040	BreakStatement	break ;	425:16:12660:12665	143885	1	True				
ANR	144041	ExpressionStatement	ipv4v6bindall = ipv4v6bindall -> ai_next	427:12:12693:12731	143885	1	True				
ANR	144042	AssignmentExpression	ipv4v6bindall = ipv4v6bindall -> ai_next		143885	0		=			
ANR	144043	Identifier	ipv4v6bindall		143885	0					
ANR	144044	PtrMemberAccess	ipv4v6bindall -> ai_next		143885	1					
ANR	144045	Identifier	ipv4v6bindall		143885	0					
ANR	144046	Identifier	ai_next		143885	1					
ANR	144047	ForStatement	for ( ; rp != NULL ; rp = rp -> ai_next )		143885	13					
ANR	144048	Condition	rp != NULL	431:26:12812:12821	143885	0	True				
ANR	144049	EqualityExpression	rp != NULL		143885	0		!=			
ANR	144050	Identifier	rp		143885	0					
ANR	144051	Identifier	NULL		143885	1					
ANR	144052	AssignmentExpression	rp = rp -> ai_next	431:38:12824:12839	143885	1	True	=			
ANR	144053	Identifier	rp		143885	0					
ANR	144054	PtrMemberAccess	rp -> ai_next		143885	1					
ANR	144055	Identifier	rp		143885	0					
ANR	144056	Identifier	ai_next		143885	1					
ANR	144057	CompoundStatement		68:8:2227:2239	143885	2					
ANR	144058	ExpressionStatement	"server_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"	432:8:12852:12921	143885	0	True				
ANR	144059	AssignmentExpression	"server_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		143885	0		=			
ANR	144060	Identifier	server_sock		143885	0					
ANR	144061	CallExpression	"socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		143885	1					
ANR	144062	Callee	socket		143885	0					
ANR	144063	Identifier	socket		143885	0					
ANR	144064	ArgumentList	rp -> ai_family		143885	1					
ANR	144065	Argument	rp -> ai_family		143885	0					
ANR	144066	PtrMemberAccess	rp -> ai_family		143885	0					
ANR	144067	Identifier	rp		143885	0					
ANR	144068	Identifier	ai_family		143885	1					
ANR	144069	Argument	rp -> ai_socktype		143885	1					
ANR	144070	PtrMemberAccess	rp -> ai_socktype		143885	0					
ANR	144071	Identifier	rp		143885	0					
ANR	144072	Identifier	ai_socktype		143885	1					
ANR	144073	Argument	rp -> ai_protocol		143885	2					
ANR	144074	PtrMemberAccess	rp -> ai_protocol		143885	0					
ANR	144075	Identifier	rp		143885	0					
ANR	144076	Identifier	ai_protocol		143885	1					
ANR	144077	IfStatement	if ( server_sock == - 1 )		143885	1					
ANR	144078	Condition	server_sock == - 1	433:12:12935:12951	143885	0	True				
ANR	144079	EqualityExpression	server_sock == - 1		143885	0		==			
ANR	144080	Identifier	server_sock		143885	0					
ANR	144081	UnaryOperationExpression	- 1		143885	1					
ANR	144082	UnaryOperator	-		143885	0					
ANR	144083	PrimaryExpression	1		143885	1					
ANR	144084	CompoundStatement		46:31:1622:1622	143885	1					
ANR	144085	ContinueStatement	continue ;	434:12:12968:12976	143885	0	True				
ANR	144086	IfStatement	if ( rp -> ai_family == AF_INET6 )		143885	2					
ANR	144087	Condition	rp -> ai_family == AF_INET6	437:12:13001:13025	143885	0	True				
ANR	144088	EqualityExpression	rp -> ai_family == AF_INET6		143885	0		==			
ANR	144089	PtrMemberAccess	rp -> ai_family		143885	0					
ANR	144090	Identifier	rp		143885	0					
ANR	144091	Identifier	ai_family		143885	1					
ANR	144092	Identifier	AF_INET6		143885	1					
ANR	144093	CompoundStatement		51:12:1710:1737	143885	1					
ANR	144094	IdentifierDeclStatement	int ipv6only = host ? 1 : 0 ;	438:12:13042:13069	143885	0	True				
ANR	144095	IdentifierDecl	ipv6only = host ? 1 : 0		143885	0					
ANR	144096	IdentifierDeclType	int		143885	0					
ANR	144097	Identifier	ipv6only		143885	1					
ANR	144098	AssignmentExpression	ipv6only = host ? 1 : 0		143885	2		=			
ANR	144099	Identifier	ipv6only		143885	0					
ANR	144100	ConditionalExpression	host ? 1 : 0		143885	1					
ANR	144101	Condition	host		143885	0					
ANR	144102	Identifier	host		143885	0					
ANR	144103	PrimaryExpression	1		143885	1					
ANR	144104	PrimaryExpression	0		143885	2					
ANR	144105	ExpressionStatement	"setsockopt ( server_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"	439:12:13083:13162	143885	1	True				
ANR	144106	CallExpression	"setsockopt ( server_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"		143885	0					
ANR	144107	Callee	setsockopt		143885	0					
ANR	144108	Identifier	setsockopt		143885	0					
ANR	144109	ArgumentList	server_sock		143885	1					
ANR	144110	Argument	server_sock		143885	0					
ANR	144111	Identifier	server_sock		143885	0					
ANR	144112	Argument	IPPROTO_IPV6		143885	1					
ANR	144113	Identifier	IPPROTO_IPV6		143885	0					
ANR	144114	Argument	IPV6_V6ONLY		143885	2					
ANR	144115	Identifier	IPV6_V6ONLY		143885	0					
ANR	144116	Argument	& ipv6only		143885	3					
ANR	144117	UnaryOperationExpression	& ipv6only		143885	0					
ANR	144118	UnaryOperator	&		143885	0					
ANR	144119	Identifier	ipv6only		143885	1					
ANR	144120	Argument	sizeof ( ipv6only )		143885	4					
ANR	144121	SizeofExpression	sizeof ( ipv6only )		143885	0					
ANR	144122	Sizeof	sizeof		143885	0					
ANR	144123	SizeofOperand	ipv6only		143885	1					
ANR	144124	IdentifierDeclStatement	int opt = 1 ;	442:8:13183:13194	143885	3	True				
ANR	144125	IdentifierDecl	opt = 1		143885	0					
ANR	144126	IdentifierDeclType	int		143885	0					
ANR	144127	Identifier	opt		143885	1					
ANR	144128	AssignmentExpression	opt = 1		143885	2		=			
ANR	144129	Identifier	opt		143885	0					
ANR	144130	PrimaryExpression	1		143885	1					
ANR	144131	ExpressionStatement	"setsockopt ( server_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"	443:8:13204:13272	143885	4	True				
ANR	144132	CallExpression	"setsockopt ( server_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"		143885	0					
ANR	144133	Callee	setsockopt		143885	0					
ANR	144134	Identifier	setsockopt		143885	0					
ANR	144135	ArgumentList	server_sock		143885	1					
ANR	144136	Argument	server_sock		143885	0					
ANR	144137	Identifier	server_sock		143885	0					
ANR	144138	Argument	SOL_SOCKET		143885	1					
ANR	144139	Identifier	SOL_SOCKET		143885	0					
ANR	144140	Argument	SO_REUSEADDR		143885	2					
ANR	144141	Identifier	SO_REUSEADDR		143885	0					
ANR	144142	Argument	& opt		143885	3					
ANR	144143	UnaryOperationExpression	& opt		143885	0					
ANR	144144	UnaryOperator	&		143885	0					
ANR	144145	Identifier	opt		143885	1					
ANR	144146	Argument	sizeof ( opt )		143885	4					
ANR	144147	SizeofExpression	sizeof ( opt )		143885	0					
ANR	144148	Sizeof	sizeof		143885	0					
ANR	144149	SizeofOperand	opt		143885	1					
ANR	144150	ExpressionStatement	set_nosigpipe ( server_sock )	445:8:13302:13328	143885	5	True				
ANR	144151	CallExpression	set_nosigpipe ( server_sock )		143885	0					
ANR	144152	Callee	set_nosigpipe		143885	0					
ANR	144153	Identifier	set_nosigpipe		143885	0					
ANR	144154	ArgumentList	server_sock		143885	1					
ANR	144155	Argument	server_sock		143885	0					
ANR	144156	Identifier	server_sock		143885	0					
ANR	144157	IfStatement	if ( reuse_port )		143885	6					
ANR	144158	Condition	reuse_port	447:12:13349:13358	143885	0	True				
ANR	144159	Identifier	reuse_port		143885	0					
ANR	144160	CompoundStatement		61:12:2043:2079	143885	1					
ANR	144161	IdentifierDeclStatement	int err = set_reuseport ( server_sock ) ;	448:12:13375:13411	143885	0	True				
ANR	144162	IdentifierDecl	err = set_reuseport ( server_sock )		143885	0					
ANR	144163	IdentifierDeclType	int		143885	0					
ANR	144164	Identifier	err		143885	1					
ANR	144165	AssignmentExpression	err = set_reuseport ( server_sock )		143885	2		=			
ANR	144166	Identifier	err		143885	0					
ANR	144167	CallExpression	set_reuseport ( server_sock )		143885	1					
ANR	144168	Callee	set_reuseport		143885	0					
ANR	144169	Identifier	set_reuseport		143885	0					
ANR	144170	ArgumentList	server_sock		143885	1					
ANR	144171	Argument	server_sock		143885	0					
ANR	144172	Identifier	server_sock		143885	0					
ANR	144173	IfStatement	if ( err == 0 )		143885	1					
ANR	144174	Condition	err == 0	449:16:13429:13436	143885	0	True				
ANR	144175	EqualityExpression	err == 0		143885	0		==			
ANR	144176	Identifier	err		143885	0					
ANR	144177	PrimaryExpression	0		143885	1					
ANR	144178	CompoundStatement		62:26:2107:2107	143885	1					
ANR	144179	ExpressionStatement	"LOGI ( ""udp port reuse enabled"" )"	450:16:13457:13487	143885	0	True				
ANR	144180	CallExpression	"LOGI ( ""udp port reuse enabled"" )"		143885	0					
ANR	144181	Callee	LOGI		143885	0					
ANR	144182	Identifier	LOGI		143885	0					
ANR	144183	ArgumentList	"""udp port reuse enabled"""		143885	1					
ANR	144184	Argument	"""udp port reuse enabled"""		143885	0					
ANR	144185	PrimaryExpression	"""udp port reuse enabled"""		143885	0					
ANR	144186	IdentifierDeclStatement	int tos = 46 ;	455:8:13559:13571	143885	7	True				
ANR	144187	IdentifierDecl	tos = 46		143885	0					
ANR	144188	IdentifierDeclType	int		143885	0					
ANR	144189	Identifier	tos		143885	1					
ANR	144190	AssignmentExpression	tos = 46		143885	2		=			
ANR	144191	Identifier	tos		143885	0					
ANR	144192	PrimaryExpression	46		143885	1					
ANR	144193	ExpressionStatement	"setsockopt ( server_sock , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"	456:8:13581:13643	143885	8	True				
ANR	144194	CallExpression	"setsockopt ( server_sock , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"		143885	0					
ANR	144195	Callee	setsockopt		143885	0					
ANR	144196	Identifier	setsockopt		143885	0					
ANR	144197	ArgumentList	server_sock		143885	1					
ANR	144198	Argument	server_sock		143885	0					
ANR	144199	Identifier	server_sock		143885	0					
ANR	144200	Argument	IPPROTO_IP		143885	1					
ANR	144201	Identifier	IPPROTO_IP		143885	0					
ANR	144202	Argument	IP_TOS		143885	2					
ANR	144203	Identifier	IP_TOS		143885	0					
ANR	144204	Argument	& tos		143885	3					
ANR	144205	UnaryOperationExpression	& tos		143885	0					
ANR	144206	UnaryOperator	&		143885	0					
ANR	144207	Identifier	tos		143885	1					
ANR	144208	Argument	sizeof ( tos )		143885	4					
ANR	144209	SizeofExpression	sizeof ( tos )		143885	0					
ANR	144210	Sizeof	sizeof		143885	0					
ANR	144211	SizeofOperand	tos		143885	1					
ANR	144212	IfStatement	"if ( setsockopt ( server_sock , SOL_IP , IP_TRANSPARENT , & opt , sizeof ( opt ) ) )"		143885	9					
ANR	144213	Condition	"setsockopt ( server_sock , SOL_IP , IP_TRANSPARENT , & opt , sizeof ( opt ) )"	460:12:13685:13750	143885	0	True				
ANR	144214	CallExpression	"setsockopt ( server_sock , SOL_IP , IP_TRANSPARENT , & opt , sizeof ( opt ) )"		143885	0					
ANR	144215	Callee	setsockopt		143885	0					
ANR	144216	Identifier	setsockopt		143885	0					
ANR	144217	ArgumentList	server_sock		143885	1					
ANR	144218	Argument	server_sock		143885	0					
ANR	144219	Identifier	server_sock		143885	0					
ANR	144220	Argument	SOL_IP		143885	1					
ANR	144221	Identifier	SOL_IP		143885	0					
ANR	144222	Argument	IP_TRANSPARENT		143885	2					
ANR	144223	Identifier	IP_TRANSPARENT		143885	0					
ANR	144224	Argument	& opt		143885	3					
ANR	144225	UnaryOperationExpression	& opt		143885	0					
ANR	144226	UnaryOperator	&		143885	0					
ANR	144227	Identifier	opt		143885	1					
ANR	144228	Argument	sizeof ( opt )		143885	4					
ANR	144229	SizeofExpression	sizeof ( opt )		143885	0					
ANR	144230	Sizeof	sizeof		143885	0					
ANR	144231	SizeofOperand	opt		143885	1					
ANR	144232	CompoundStatement		73:80:2421:2421	143885	1					
ANR	144233	ExpressionStatement	"ERROR ( ""[udp] setsockopt IP_TRANSPARENT"" )"	461:12:13767:13807	143885	0	True				
ANR	144234	CallExpression	"ERROR ( ""[udp] setsockopt IP_TRANSPARENT"" )"		143885	0					
ANR	144235	Callee	ERROR		143885	0					
ANR	144236	Identifier	ERROR		143885	0					
ANR	144237	ArgumentList	"""[udp] setsockopt IP_TRANSPARENT"""		143885	1					
ANR	144238	Argument	"""[udp] setsockopt IP_TRANSPARENT"""		143885	0					
ANR	144239	PrimaryExpression	"""[udp] setsockopt IP_TRANSPARENT"""		143885	0					
ANR	144240	ExpressionStatement	exit ( EXIT_FAILURE )	462:12:13821:13839	143885	1	True				
ANR	144241	CallExpression	exit ( EXIT_FAILURE )		143885	0					
ANR	144242	Callee	exit		143885	0					
ANR	144243	Identifier	exit		143885	0					
ANR	144244	ArgumentList	EXIT_FAILURE		143885	1					
ANR	144245	Argument	EXIT_FAILURE		143885	0					
ANR	144246	Identifier	EXIT_FAILURE		143885	0					
ANR	144247	IfStatement	if ( rp -> ai_family == AF_INET )		143885	10					
ANR	144248	Condition	rp -> ai_family == AF_INET	464:12:13863:13886	143885	0	True				
ANR	144249	EqualityExpression	rp -> ai_family == AF_INET		143885	0		==			
ANR	144250	PtrMemberAccess	rp -> ai_family		143885	0					
ANR	144251	Identifier	rp		143885	0					
ANR	144252	Identifier	ai_family		143885	1					
ANR	144253	Identifier	AF_INET		143885	1					
ANR	144254	CompoundStatement		77:38:2557:2557	143885	1					
ANR	144255	IfStatement	"if ( setsockopt ( server_sock , SOL_IP , IP_RECVORIGDSTADDR , & opt , sizeof ( opt ) ) )"		143885	0					
ANR	144256	Condition	"setsockopt ( server_sock , SOL_IP , IP_RECVORIGDSTADDR , & opt , sizeof ( opt ) )"	465:16:13907:13976	143885	0	True				
ANR	144257	CallExpression	"setsockopt ( server_sock , SOL_IP , IP_RECVORIGDSTADDR , & opt , sizeof ( opt ) )"		143885	0					
ANR	144258	Callee	setsockopt		143885	0					
ANR	144259	Identifier	setsockopt		143885	0					
ANR	144260	ArgumentList	server_sock		143885	1					
ANR	144261	Argument	server_sock		143885	0					
ANR	144262	Identifier	server_sock		143885	0					
ANR	144263	Argument	SOL_IP		143885	1					
ANR	144264	Identifier	SOL_IP		143885	0					
ANR	144265	Argument	IP_RECVORIGDSTADDR		143885	2					
ANR	144266	Identifier	IP_RECVORIGDSTADDR		143885	0					
ANR	144267	Argument	& opt		143885	3					
ANR	144268	UnaryOperationExpression	& opt		143885	0					
ANR	144269	UnaryOperator	&		143885	0					
ANR	144270	Identifier	opt		143885	1					
ANR	144271	Argument	sizeof ( opt )		143885	4					
ANR	144272	SizeofExpression	sizeof ( opt )		143885	0					
ANR	144273	Sizeof	sizeof		143885	0					
ANR	144274	SizeofOperand	opt		143885	1					
ANR	144275	CompoundStatement		78:88:2647:2647	143885	1					
ANR	144276	ExpressionStatement	"FATAL ( ""[udp] setsockopt IP_RECVORIGDSTADDR"" )"	466:16:13997:14041	143885	0	True				
ANR	144277	CallExpression	"FATAL ( ""[udp] setsockopt IP_RECVORIGDSTADDR"" )"		143885	0					
ANR	144278	Callee	FATAL		143885	0					
ANR	144279	Identifier	FATAL		143885	0					
ANR	144280	ArgumentList	"""[udp] setsockopt IP_RECVORIGDSTADDR"""		143885	1					
ANR	144281	Argument	"""[udp] setsockopt IP_RECVORIGDSTADDR"""		143885	0					
ANR	144282	PrimaryExpression	"""[udp] setsockopt IP_RECVORIGDSTADDR"""		143885	0					
ANR	144283	ElseStatement	else		143885	0					
ANR	144284	IfStatement	if ( rp -> ai_family == AF_INET6 )		143885	0					
ANR	144285	Condition	rp -> ai_family == AF_INET6	468:19:14076:14100	143885	0	True				
ANR	144286	EqualityExpression	rp -> ai_family == AF_INET6		143885	0		==			
ANR	144287	PtrMemberAccess	rp -> ai_family		143885	0					
ANR	144288	Identifier	rp		143885	0					
ANR	144289	Identifier	ai_family		143885	1					
ANR	144290	Identifier	AF_INET6		143885	1					
ANR	144291	CompoundStatement		81:46:2771:2771	143885	1					
ANR	144292	IfStatement	"if ( setsockopt ( server_sock , SOL_IPV6 , IPV6_RECVORIGDSTADDR , & opt , sizeof ( opt ) ) )"		143885	0					
ANR	144293	Condition	"setsockopt ( server_sock , SOL_IPV6 , IPV6_RECVORIGDSTADDR , & opt , sizeof ( opt ) )"	469:16:14121:14194	143885	0	True				
ANR	144294	CallExpression	"setsockopt ( server_sock , SOL_IPV6 , IPV6_RECVORIGDSTADDR , & opt , sizeof ( opt ) )"		143885	0					
ANR	144295	Callee	setsockopt		143885	0					
ANR	144296	Identifier	setsockopt		143885	0					
ANR	144297	ArgumentList	server_sock		143885	1					
ANR	144298	Argument	server_sock		143885	0					
ANR	144299	Identifier	server_sock		143885	0					
ANR	144300	Argument	SOL_IPV6		143885	1					
ANR	144301	Identifier	SOL_IPV6		143885	0					
ANR	144302	Argument	IPV6_RECVORIGDSTADDR		143885	2					
ANR	144303	Identifier	IPV6_RECVORIGDSTADDR		143885	0					
ANR	144304	Argument	& opt		143885	3					
ANR	144305	UnaryOperationExpression	& opt		143885	0					
ANR	144306	UnaryOperator	&		143885	0					
ANR	144307	Identifier	opt		143885	1					
ANR	144308	Argument	sizeof ( opt )		143885	4					
ANR	144309	SizeofExpression	sizeof ( opt )		143885	0					
ANR	144310	Sizeof	sizeof		143885	0					
ANR	144311	SizeofOperand	opt		143885	1					
ANR	144312	CompoundStatement		82:92:2865:2865	143885	1					
ANR	144313	ExpressionStatement	"FATAL ( ""[udp] setsockopt IPV6_RECVORIGDSTADDR"" )"	470:16:14215:14261	143885	0	True				
ANR	144314	CallExpression	"FATAL ( ""[udp] setsockopt IPV6_RECVORIGDSTADDR"" )"		143885	0					
ANR	144315	Callee	FATAL		143885	0					
ANR	144316	Identifier	FATAL		143885	0					
ANR	144317	ArgumentList	"""[udp] setsockopt IPV6_RECVORIGDSTADDR"""		143885	1					
ANR	144318	Argument	"""[udp] setsockopt IPV6_RECVORIGDSTADDR"""		143885	0					
ANR	144319	PrimaryExpression	"""[udp] setsockopt IPV6_RECVORIGDSTADDR"""		143885	0					
ANR	144320	ExpressionStatement	"s = bind ( server_sock , rp -> ai_addr , rp -> ai_addrlen )"	475:8:14303:14353	143885	11	True				
ANR	144321	AssignmentExpression	"s = bind ( server_sock , rp -> ai_addr , rp -> ai_addrlen )"		143885	0		=			
ANR	144322	Identifier	s		143885	0					
ANR	144323	CallExpression	"bind ( server_sock , rp -> ai_addr , rp -> ai_addrlen )"		143885	1					
ANR	144324	Callee	bind		143885	0					
ANR	144325	Identifier	bind		143885	0					
ANR	144326	ArgumentList	server_sock		143885	1					
ANR	144327	Argument	server_sock		143885	0					
ANR	144328	Identifier	server_sock		143885	0					
ANR	144329	Argument	rp -> ai_addr		143885	1					
ANR	144330	PtrMemberAccess	rp -> ai_addr		143885	0					
ANR	144331	Identifier	rp		143885	0					
ANR	144332	Identifier	ai_addr		143885	1					
ANR	144333	Argument	rp -> ai_addrlen		143885	2					
ANR	144334	PtrMemberAccess	rp -> ai_addrlen		143885	0					
ANR	144335	Identifier	rp		143885	0					
ANR	144336	Identifier	ai_addrlen		143885	1					
ANR	144337	IfStatement	if ( s == 0 )		143885	12					
ANR	144338	Condition	s == 0	476:12:14367:14372	143885	0	True				
ANR	144339	EqualityExpression	s == 0		143885	0		==			
ANR	144340	Identifier	s		143885	0					
ANR	144341	PrimaryExpression	0		143885	1					
ANR	144342	CompoundStatement		89:20:3043:3043	143885	1					
ANR	144343	BreakStatement	break ;	478:12:14440:14445	143885	0	True				
ANR	144344	ElseStatement	else		143885	0					
ANR	144345	CompoundStatement		92:15:3130:3130	143885	0					
ANR	144346	ExpressionStatement	"ERROR ( ""[udp] bind"" )"	480:12:14476:14495	143885	0	True				
ANR	144347	CallExpression	"ERROR ( ""[udp] bind"" )"		143885	0					
ANR	144348	Callee	ERROR		143885	0					
ANR	144349	Identifier	ERROR		143885	0					
ANR	144350	ArgumentList	"""[udp] bind"""		143885	1					
ANR	144351	Argument	"""[udp] bind"""		143885	0					
ANR	144352	PrimaryExpression	"""[udp] bind"""		143885	0					
ANR	144353	ExpressionStatement	close ( server_sock )	483:8:14516:14534	143885	13	True				
ANR	144354	CallExpression	close ( server_sock )		143885	0					
ANR	144355	Callee	close		143885	0					
ANR	144356	Identifier	close		143885	0					
ANR	144357	ArgumentList	server_sock		143885	1					
ANR	144358	Argument	server_sock		143885	0					
ANR	144359	Identifier	server_sock		143885	0					
ANR	144360	ExpressionStatement	server_sock = - 1	484:8:14544:14560	143885	14	True				
ANR	144361	AssignmentExpression	server_sock = - 1		143885	0		=			
ANR	144362	Identifier	server_sock		143885	0					
ANR	144363	UnaryOperationExpression	- 1		143885	1					
ANR	144364	UnaryOperator	-		143885	0					
ANR	144365	PrimaryExpression	1		143885	1					
ANR	144366	ExpressionStatement	freeaddrinfo ( result )	487:4:14573:14593	143885	14	True				
ANR	144367	CallExpression	freeaddrinfo ( result )		143885	0					
ANR	144368	Callee	freeaddrinfo		143885	0					
ANR	144369	Identifier	freeaddrinfo		143885	0					
ANR	144370	ArgumentList	result		143885	1					
ANR	144371	Argument	result		143885	0					
ANR	144372	Identifier	result		143885	0					
ANR	144373	ReturnStatement	return server_sock ;	489:4:14600:14618	143885	15	True				
ANR	144374	Identifier	server_sock		143885	0					
ANR	144375	ReturnType	int		143885	1					
ANR	144376	Identifier	create_server_socket		143885	2					
ANR	144377	ParameterList	"const char * host , const char * port"		143885	3					
ANR	144378	Parameter	const char * host	387:21:11295:11310	143885	0	True				
ANR	144379	ParameterType	const char *		143885	0					
ANR	144380	Identifier	host		143885	1					
ANR	144381	Parameter	const char * port	387:39:11313:11328	143885	1	True				
ANR	144382	ParameterType	const char *		143885	0					
ANR	144383	Identifier	port		143885	1					
ANR	144384	CFGEntryNode	ENTRY		143885		True				
ANR	144385	CFGExitNode	EXIT		143885		True				
ANR	144386	Symbol	rp -> ai_protocol		143885						
ANR	144387	Symbol	IP_TOS		143885						
ANR	144388	Symbol	set_reuseport		143885						
ANR	144389	Symbol	IP_RECVORIGDSTADDR		143885						
ANR	144390	Symbol	rp -> ai_addrlen		143885						
ANR	144391	Symbol	server_sock		143885						
ANR	144392	Symbol	hints . ai_flags		143885						
ANR	144393	Symbol	gai_strerror		143885						
ANR	144394	Symbol	ipv6only		143885						
ANR	144395	Symbol	ipv4v6bindall -> ai_family		143885						
ANR	144396	Symbol	* ipv4v6bindall		143885						
ANR	144397	Symbol	bind		143885						
ANR	144398	Symbol	AI_ADDRCONFIG		143885						
ANR	144399	Symbol	IP_TRANSPARENT		143885						
ANR	144400	Symbol	host		143885						
ANR	144401	Symbol	ipv4v6bindall		143885						
ANR	144402	Symbol	& opt		143885						
ANR	144403	Symbol	IPPROTO_IP		143885						
ANR	144404	Symbol	NULL		143885						
ANR	144405	Symbol	hints		143885						
ANR	144406	Symbol	getaddrinfo		143885						
ANR	144407	Symbol	SO_REUSEADDR		143885						
ANR	144408	Symbol	IPV6_RECVORIGDSTADDR		143885						
ANR	144409	Symbol	AF_INET		143885						
ANR	144410	Symbol	SOCK_DGRAM		143885						
ANR	144411	Symbol	hints . ai_socktype		143885						
ANR	144412	Symbol	ipv4v6bindall -> ai_next		143885						
ANR	144413	Symbol	opt		143885						
ANR	144414	Symbol	port		143885						
ANR	144415	Symbol	EXIT_FAILURE		143885						
ANR	144416	Symbol	IPPROTO_IPV6		143885						
ANR	144417	Symbol	rp		143885						
ANR	144418	Symbol	AI_PASSIVE		143885						
ANR	144419	Symbol	reuse_port		143885						
ANR	144420	Symbol	rp -> ai_addr		143885						
ANR	144421	Symbol	SOL_IP		143885						
ANR	144422	Symbol	setsockopt		143885						
ANR	144423	Symbol	AF_UNSPEC		143885						
ANR	144424	Symbol	result		143885						
ANR	144425	Symbol	hints . ai_family		143885						
ANR	144426	Symbol	& result		143885						
ANR	144427	Symbol	tos		143885						
ANR	144428	Symbol	& ipv6only		143885						
ANR	144429	Symbol	& hints		143885						
ANR	144430	Symbol	err		143885						
ANR	144431	Symbol	* rp		143885						
ANR	144432	Symbol	rp -> ai_socktype		143885						
ANR	144433	Symbol	hints . ai_protocol		143885						
ANR	144434	Symbol	SOL_IPV6		143885						
ANR	144435	Symbol	AF_INET6		143885						
ANR	144436	Symbol	SOL_SOCKET		143885						
ANR	144437	Symbol	IPV6_V6ONLY		143885						
ANR	144438	Symbol	s		143885						
ANR	144439	Symbol	IPPROTO_UDP		143885						
ANR	144440	Symbol	rp -> ai_family		143885						
ANR	144441	Symbol	& tos		143885						
ANR	144442	Symbol	socket		143885						
ANR	144443	Symbol	rp -> ai_next		143885						
ANR	144444	Function	new_remote	492:0:14623:15064							
ANR	144445	FunctionDef	"new_remote (int fd , server_ctx_t * server_ctx)"		144444	0					
ANR	144446	CompoundStatement		494:0:14683:15064	144444	0					
ANR	144447	IdentifierDeclStatement	remote_ctx_t * ctx = ss_malloc ( sizeof ( remote_ctx_t ) ) ;	495:4:14689:14740	144444	0	True				
ANR	144448	IdentifierDecl	* ctx = ss_malloc ( sizeof ( remote_ctx_t ) )		144444	0					
ANR	144449	IdentifierDeclType	remote_ctx_t *		144444	0					
ANR	144450	Identifier	ctx		144444	1					
ANR	144451	AssignmentExpression	* ctx = ss_malloc ( sizeof ( remote_ctx_t ) )		144444	2		=			
ANR	144452	Identifier	ctx		144444	0					
ANR	144453	CallExpression	ss_malloc ( sizeof ( remote_ctx_t ) )		144444	1					
ANR	144454	Callee	ss_malloc		144444	0					
ANR	144455	Identifier	ss_malloc		144444	0					
ANR	144456	ArgumentList	sizeof ( remote_ctx_t )		144444	1					
ANR	144457	Argument	sizeof ( remote_ctx_t )		144444	0					
ANR	144458	SizeofExpression	sizeof ( remote_ctx_t )		144444	0					
ANR	144459	Sizeof	sizeof		144444	0					
ANR	144460	SizeofOperand	remote_ctx_t		144444	1					
ANR	144461	ExpressionStatement	"memset ( ctx , 0 , sizeof ( remote_ctx_t ) )"	496:4:14746:14782	144444	1	True				
ANR	144462	CallExpression	"memset ( ctx , 0 , sizeof ( remote_ctx_t ) )"		144444	0					
ANR	144463	Callee	memset		144444	0					
ANR	144464	Identifier	memset		144444	0					
ANR	144465	ArgumentList	ctx		144444	1					
ANR	144466	Argument	ctx		144444	0					
ANR	144467	Identifier	ctx		144444	0					
ANR	144468	Argument	0		144444	1					
ANR	144469	PrimaryExpression	0		144444	0					
ANR	144470	Argument	sizeof ( remote_ctx_t )		144444	2					
ANR	144471	SizeofExpression	sizeof ( remote_ctx_t )		144444	0					
ANR	144472	Sizeof	sizeof		144444	0					
ANR	144473	SizeofOperand	remote_ctx_t		144444	1					
ANR	144474	ExpressionStatement	ctx -> fd = fd	498:4:14789:14809	144444	2	True				
ANR	144475	AssignmentExpression	ctx -> fd = fd		144444	0		=			
ANR	144476	PtrMemberAccess	ctx -> fd		144444	0					
ANR	144477	Identifier	ctx		144444	0					
ANR	144478	Identifier	fd		144444	1					
ANR	144479	Identifier	fd		144444	1					
ANR	144480	ExpressionStatement	ctx -> server_ctx = server_ctx	499:4:14815:14843	144444	3	True				
ANR	144481	AssignmentExpression	ctx -> server_ctx = server_ctx		144444	0		=			
ANR	144482	PtrMemberAccess	ctx -> server_ctx		144444	0					
ANR	144483	Identifier	ctx		144444	0					
ANR	144484	Identifier	server_ctx		144444	1					
ANR	144485	Identifier	server_ctx		144444	1					
ANR	144486	ExpressionStatement	ctx -> af = AF_UNSPEC	500:4:14849:14876	144444	4	True				
ANR	144487	AssignmentExpression	ctx -> af = AF_UNSPEC		144444	0		=			
ANR	144488	PtrMemberAccess	ctx -> af		144444	0					
ANR	144489	Identifier	ctx		144444	0					
ANR	144490	Identifier	af		144444	1					
ANR	144491	Identifier	AF_UNSPEC		144444	1					
ANR	144492	ExpressionStatement	"ev_io_init ( & ctx -> io , remote_recv_cb , fd , EV_READ )"	502:4:14883:14932	144444	5	True				
ANR	144493	CallExpression	"ev_io_init ( & ctx -> io , remote_recv_cb , fd , EV_READ )"		144444	0					
ANR	144494	Callee	ev_io_init		144444	0					
ANR	144495	Identifier	ev_io_init		144444	0					
ANR	144496	ArgumentList	& ctx -> io		144444	1					
ANR	144497	Argument	& ctx -> io		144444	0					
ANR	144498	UnaryOperationExpression	& ctx -> io		144444	0					
ANR	144499	UnaryOperator	&		144444	0					
ANR	144500	PtrMemberAccess	ctx -> io		144444	1					
ANR	144501	Identifier	ctx		144444	0					
ANR	144502	Identifier	io		144444	1					
ANR	144503	Argument	remote_recv_cb		144444	1					
ANR	144504	Identifier	remote_recv_cb		144444	0					
ANR	144505	Argument	fd		144444	2					
ANR	144506	Identifier	fd		144444	0					
ANR	144507	Argument	EV_READ		144444	3					
ANR	144508	Identifier	EV_READ		144444	0					
ANR	144509	ExpressionStatement	"ev_timer_init ( & ctx -> watcher , remote_timeout_cb , server_ctx -> timeout , server_ctx -> timeout )"	503:4:14938:15045	144444	6	True				
ANR	144510	CallExpression	"ev_timer_init ( & ctx -> watcher , remote_timeout_cb , server_ctx -> timeout , server_ctx -> timeout )"		144444	0					
ANR	144511	Callee	ev_timer_init		144444	0					
ANR	144512	Identifier	ev_timer_init		144444	0					
ANR	144513	ArgumentList	& ctx -> watcher		144444	1					
ANR	144514	Argument	& ctx -> watcher		144444	0					
ANR	144515	UnaryOperationExpression	& ctx -> watcher		144444	0					
ANR	144516	UnaryOperator	&		144444	0					
ANR	144517	PtrMemberAccess	ctx -> watcher		144444	1					
ANR	144518	Identifier	ctx		144444	0					
ANR	144519	Identifier	watcher		144444	1					
ANR	144520	Argument	remote_timeout_cb		144444	1					
ANR	144521	Identifier	remote_timeout_cb		144444	0					
ANR	144522	Argument	server_ctx -> timeout		144444	2					
ANR	144523	PtrMemberAccess	server_ctx -> timeout		144444	0					
ANR	144524	Identifier	server_ctx		144444	0					
ANR	144525	Identifier	timeout		144444	1					
ANR	144526	Argument	server_ctx -> timeout		144444	3					
ANR	144527	PtrMemberAccess	server_ctx -> timeout		144444	0					
ANR	144528	Identifier	server_ctx		144444	0					
ANR	144529	Identifier	timeout		144444	1					
ANR	144530	ReturnStatement	return ctx ;	506:4:15052:15062	144444	7	True				
ANR	144531	Identifier	ctx		144444	0					
ANR	144532	ReturnType	remote_ctx_t *		144444	1					
ANR	144533	Identifier	new_remote		144444	2					
ANR	144534	ParameterList	"int fd , server_ctx_t * server_ctx"		144444	3					
ANR	144535	Parameter	int fd	493:11:14649:14654	144444	0	True				
ANR	144536	ParameterType	int		144444	0					
ANR	144537	Identifier	fd		144444	1					
ANR	144538	Parameter	server_ctx_t * server_ctx	493:19:14657:14680	144444	1	True				
ANR	144539	ParameterType	server_ctx_t *		144444	0					
ANR	144540	Identifier	server_ctx		144444	1					
ANR	144541	CFGEntryNode	ENTRY		144444		True				
ANR	144542	CFGExitNode	EXIT		144444		True				
ANR	144543	Symbol	server_ctx		144444						
ANR	144544	Symbol	server_ctx -> timeout		144444						
ANR	144545	Symbol	ctx		144444						
ANR	144546	Symbol	ctx -> af		144444						
ANR	144547	Symbol	ctx -> fd		144444						
ANR	144548	Symbol	* server_ctx		144444						
ANR	144549	Symbol	EV_READ		144444						
ANR	144550	Symbol	remote_timeout_cb		144444						
ANR	144551	Symbol	* ctx		144444						
ANR	144552	Symbol	AF_UNSPEC		144444						
ANR	144553	Symbol	ctx -> server_ctx		144444						
ANR	144554	Symbol	& ctx -> watcher		144444						
ANR	144555	Symbol	ss_malloc		144444						
ANR	144556	Symbol	remote_recv_cb		144444						
ANR	144557	Symbol	fd		144444						
ANR	144558	Symbol	& ctx -> io		144444						
ANR	144559	Function	new_server_ctx	509:0:15067:15298							
ANR	144560	FunctionDef	new_server_ctx (int fd)		144559	0					
ANR	144561	CompoundStatement		511:0:15105:15298	144559	0					
ANR	144562	IdentifierDeclStatement	server_ctx_t * ctx = ss_malloc ( sizeof ( server_ctx_t ) ) ;	512:4:15111:15162	144559	0	True				
ANR	144563	IdentifierDecl	* ctx = ss_malloc ( sizeof ( server_ctx_t ) )		144559	0					
ANR	144564	IdentifierDeclType	server_ctx_t *		144559	0					
ANR	144565	Identifier	ctx		144559	1					
ANR	144566	AssignmentExpression	* ctx = ss_malloc ( sizeof ( server_ctx_t ) )		144559	2		=			
ANR	144567	Identifier	ctx		144559	0					
ANR	144568	CallExpression	ss_malloc ( sizeof ( server_ctx_t ) )		144559	1					
ANR	144569	Callee	ss_malloc		144559	0					
ANR	144570	Identifier	ss_malloc		144559	0					
ANR	144571	ArgumentList	sizeof ( server_ctx_t )		144559	1					
ANR	144572	Argument	sizeof ( server_ctx_t )		144559	0					
ANR	144573	SizeofExpression	sizeof ( server_ctx_t )		144559	0					
ANR	144574	Sizeof	sizeof		144559	0					
ANR	144575	SizeofOperand	server_ctx_t		144559	1					
ANR	144576	ExpressionStatement	"memset ( ctx , 0 , sizeof ( server_ctx_t ) )"	513:4:15168:15204	144559	1	True				
ANR	144577	CallExpression	"memset ( ctx , 0 , sizeof ( server_ctx_t ) )"		144559	0					
ANR	144578	Callee	memset		144559	0					
ANR	144579	Identifier	memset		144559	0					
ANR	144580	ArgumentList	ctx		144559	1					
ANR	144581	Argument	ctx		144559	0					
ANR	144582	Identifier	ctx		144559	0					
ANR	144583	Argument	0		144559	1					
ANR	144584	PrimaryExpression	0		144559	0					
ANR	144585	Argument	sizeof ( server_ctx_t )		144559	2					
ANR	144586	SizeofExpression	sizeof ( server_ctx_t )		144559	0					
ANR	144587	Sizeof	sizeof		144559	0					
ANR	144588	SizeofOperand	server_ctx_t		144559	1					
ANR	144589	ExpressionStatement	ctx -> fd = fd	515:4:15211:15223	144559	2	True				
ANR	144590	AssignmentExpression	ctx -> fd = fd		144559	0		=			
ANR	144591	PtrMemberAccess	ctx -> fd		144559	0					
ANR	144592	Identifier	ctx		144559	0					
ANR	144593	Identifier	fd		144559	1					
ANR	144594	Identifier	fd		144559	1					
ANR	144595	ExpressionStatement	"ev_io_init ( & ctx -> io , server_recv_cb , fd , EV_READ )"	517:4:15230:15279	144559	3	True				
ANR	144596	CallExpression	"ev_io_init ( & ctx -> io , server_recv_cb , fd , EV_READ )"		144559	0					
ANR	144597	Callee	ev_io_init		144559	0					
ANR	144598	Identifier	ev_io_init		144559	0					
ANR	144599	ArgumentList	& ctx -> io		144559	1					
ANR	144600	Argument	& ctx -> io		144559	0					
ANR	144601	UnaryOperationExpression	& ctx -> io		144559	0					
ANR	144602	UnaryOperator	&		144559	0					
ANR	144603	PtrMemberAccess	ctx -> io		144559	1					
ANR	144604	Identifier	ctx		144559	0					
ANR	144605	Identifier	io		144559	1					
ANR	144606	Argument	server_recv_cb		144559	1					
ANR	144607	Identifier	server_recv_cb		144559	0					
ANR	144608	Argument	fd		144559	2					
ANR	144609	Identifier	fd		144559	0					
ANR	144610	Argument	EV_READ		144559	3					
ANR	144611	Identifier	EV_READ		144559	0					
ANR	144612	ReturnStatement	return ctx ;	519:4:15286:15296	144559	4	True				
ANR	144613	Identifier	ctx		144559	0					
ANR	144614	ReturnType	server_ctx_t *		144559	1					
ANR	144615	Identifier	new_server_ctx		144559	2					
ANR	144616	ParameterList	int fd		144559	3					
ANR	144617	Parameter	int fd	510:15:15097:15102	144559	0	True				
ANR	144618	ParameterType	int		144559	0					
ANR	144619	Identifier	fd		144559	1					
ANR	144620	CFGEntryNode	ENTRY		144559		True				
ANR	144621	CFGExitNode	EXIT		144559		True				
ANR	144622	Symbol	ctx		144559						
ANR	144623	Symbol	ctx -> fd		144559						
ANR	144624	Symbol	ss_malloc		144559						
ANR	144625	Symbol	server_recv_cb		144559						
ANR	144626	Symbol	EV_READ		144559						
ANR	144627	Symbol	fd		144559						
ANR	144628	Symbol	* ctx		144559						
ANR	144629	Symbol	& ctx -> io		144559						
ANR	144630	Function	new_query_ctx	523:0:15322:15641							
ANR	144631	FunctionDef	"new_query_ctx (char * buf , size_t len)"		144630	0					
ANR	144632	CompoundStatement		525:0:15378:15641	144630	0					
ANR	144633	IdentifierDeclStatement	struct query_ctx * ctx = ss_malloc ( sizeof ( struct query_ctx ) ) ;	526:4:15384:15443	144630	0	True				
ANR	144634	IdentifierDecl	* ctx = ss_malloc ( sizeof ( struct query_ctx ) )		144630	0					
ANR	144635	IdentifierDeclType	struct query_ctx *		144630	0					
ANR	144636	Identifier	ctx		144630	1					
ANR	144637	AssignmentExpression	* ctx = ss_malloc ( sizeof ( struct query_ctx ) )		144630	2		=			
ANR	144638	Identifier	ctx		144630	0					
ANR	144639	CallExpression	ss_malloc ( sizeof ( struct query_ctx ) )		144630	1					
ANR	144640	Callee	ss_malloc		144630	0					
ANR	144641	Identifier	ss_malloc		144630	0					
ANR	144642	ArgumentList	sizeof ( struct query_ctx )		144630	1					
ANR	144643	Argument	sizeof ( struct query_ctx )		144630	0					
ANR	144644	SizeofExpression	sizeof ( struct query_ctx )		144630	0					
ANR	144645	Sizeof	sizeof		144630	0					
ANR	144646	SizeofOperand	struct query_ctx		144630	1					
ANR	144647	ExpressionStatement	"memset ( ctx , 0 , sizeof ( struct query_ctx ) )"	527:4:15449:15489	144630	1	True				
ANR	144648	CallExpression	"memset ( ctx , 0 , sizeof ( struct query_ctx ) )"		144630	0					
ANR	144649	Callee	memset		144630	0					
ANR	144650	Identifier	memset		144630	0					
ANR	144651	ArgumentList	ctx		144630	1					
ANR	144652	Argument	ctx		144630	0					
ANR	144653	Identifier	ctx		144630	0					
ANR	144654	Argument	0		144630	1					
ANR	144655	PrimaryExpression	0		144630	0					
ANR	144656	Argument	sizeof ( struct query_ctx )		144630	2					
ANR	144657	SizeofExpression	sizeof ( struct query_ctx )		144630	0					
ANR	144658	Sizeof	sizeof		144630	0					
ANR	144659	SizeofOperand	struct query_ctx		144630	1					
ANR	144660	ExpressionStatement	ctx -> buf = ss_malloc ( sizeof ( buffer_t ) )	528:4:15495:15533	144630	2	True				
ANR	144661	AssignmentExpression	ctx -> buf = ss_malloc ( sizeof ( buffer_t ) )		144630	0		=			
ANR	144662	PtrMemberAccess	ctx -> buf		144630	0					
ANR	144663	Identifier	ctx		144630	0					
ANR	144664	Identifier	buf		144630	1					
ANR	144665	CallExpression	ss_malloc ( sizeof ( buffer_t ) )		144630	1					
ANR	144666	Callee	ss_malloc		144630	0					
ANR	144667	Identifier	ss_malloc		144630	0					
ANR	144668	ArgumentList	sizeof ( buffer_t )		144630	1					
ANR	144669	Argument	sizeof ( buffer_t )		144630	0					
ANR	144670	SizeofExpression	sizeof ( buffer_t )		144630	0					
ANR	144671	Sizeof	sizeof		144630	0					
ANR	144672	SizeofOperand	buffer_t		144630	1					
ANR	144673	ExpressionStatement	"balloc ( ctx -> buf , len )"	529:4:15539:15560	144630	3	True				
ANR	144674	CallExpression	"balloc ( ctx -> buf , len )"		144630	0					
ANR	144675	Callee	balloc		144630	0					
ANR	144676	Identifier	balloc		144630	0					
ANR	144677	ArgumentList	ctx -> buf		144630	1					
ANR	144678	Argument	ctx -> buf		144630	0					
ANR	144679	PtrMemberAccess	ctx -> buf		144630	0					
ANR	144680	Identifier	ctx		144630	0					
ANR	144681	Identifier	buf		144630	1					
ANR	144682	Argument	len		144630	1					
ANR	144683	Identifier	len		144630	0					
ANR	144684	ExpressionStatement	"memcpy ( ctx -> buf -> data , buf , len )"	530:4:15566:15598	144630	4	True				
ANR	144685	CallExpression	"memcpy ( ctx -> buf -> data , buf , len )"		144630	0					
ANR	144686	Callee	memcpy		144630	0					
ANR	144687	Identifier	memcpy		144630	0					
ANR	144688	ArgumentList	ctx -> buf -> data		144630	1					
ANR	144689	Argument	ctx -> buf -> data		144630	0					
ANR	144690	PtrMemberAccess	ctx -> buf -> data		144630	0					
ANR	144691	PtrMemberAccess	ctx -> buf		144630	0					
ANR	144692	Identifier	ctx		144630	0					
ANR	144693	Identifier	buf		144630	1					
ANR	144694	Identifier	data		144630	1					
ANR	144695	Argument	buf		144630	1					
ANR	144696	Identifier	buf		144630	0					
ANR	144697	Argument	len		144630	2					
ANR	144698	Identifier	len		144630	0					
ANR	144699	ExpressionStatement	ctx -> buf -> len = len	531:4:15604:15623	144630	5	True				
ANR	144700	AssignmentExpression	ctx -> buf -> len = len		144630	0		=			
ANR	144701	PtrMemberAccess	ctx -> buf -> len		144630	0					
ANR	144702	PtrMemberAccess	ctx -> buf		144630	0					
ANR	144703	Identifier	ctx		144630	0					
ANR	144704	Identifier	buf		144630	1					
ANR	144705	Identifier	len		144630	1					
ANR	144706	Identifier	len		144630	1					
ANR	144707	ReturnStatement	return ctx ;	532:4:15629:15639	144630	6	True				
ANR	144708	Identifier	ctx		144630	0					
ANR	144709	ReturnType	struct query_ctx *		144630	1					
ANR	144710	Identifier	new_query_ctx		144630	2					
ANR	144711	ParameterList	"char * buf , size_t len"		144630	3					
ANR	144712	Parameter	char * buf	524:14:15355:15363	144630	0	True				
ANR	144713	ParameterType	char *		144630	0					
ANR	144714	Identifier	buf		144630	1					
ANR	144715	Parameter	size_t len	524:25:15366:15375	144630	1	True				
ANR	144716	ParameterType	size_t		144630	0					
ANR	144717	Identifier	len		144630	1					
ANR	144718	CFGEntryNode	ENTRY		144630		True				
ANR	144719	CFGExitNode	EXIT		144630		True				
ANR	144720	Symbol	ctx -> buf -> len		144630						
ANR	144721	Symbol	buf		144630						
ANR	144722	Symbol	len		144630						
ANR	144723	Symbol	ctx		144630						
ANR	144724	Symbol	ss_malloc		144630						
ANR	144725	Symbol	* * ctx		144630						
ANR	144726	Symbol	ctx -> buf		144630						
ANR	144727	Symbol	ctx -> buf -> data		144630						
ANR	144728	Symbol	* ctx		144630						
ANR	144729	Symbol	* ctx -> buf		144630						
ANR	144730	Function	close_and_free_remote	549:0:15865:16076							
ANR	144731	FunctionDef	close_and_free_remote (EV_P_ remote_ctx_t * ctx)		144730	0					
ANR	144732	CompoundStatement		551:0:15917:16076	144730	0					
ANR	144733	IfStatement	if ( ctx != NULL )		144730	0					
ANR	144734	Condition	ctx != NULL	552:8:15927:15937	144730	0	True				
ANR	144735	EqualityExpression	ctx != NULL		144730	0		!=			
ANR	144736	Identifier	ctx		144730	0					
ANR	144737	Identifier	NULL		144730	1					
ANR	144738	CompoundStatement		2:21:22:22	144730	1					
ANR	144739	ExpressionStatement	ev_timer_stop ( EV_A_ & ctx -> watcher )	553:8:15950:15985	144730	0	True				
ANR	144740	CallExpression	ev_timer_stop ( EV_A_ & ctx -> watcher )		144730	0					
ANR	144741	Callee	ev_timer_stop		144730	0					
ANR	144742	Identifier	ev_timer_stop		144730	0					
ANR	144743	ArgumentList	EV_A_ & ctx -> watcher		144730	1					
ANR	144744	Argument	EV_A_ & ctx -> watcher		144730	0					
ANR	144745	BitAndExpression	EV_A_ & ctx -> watcher		144730	0		&			
ANR	144746	Identifier	EV_A_		144730	0					
ANR	144747	PtrMemberAccess	ctx -> watcher		144730	1					
ANR	144748	Identifier	ctx		144730	0					
ANR	144749	Identifier	watcher		144730	1					
ANR	144750	ExpressionStatement	ev_io_stop ( EV_A_ & ctx -> io )	554:8:15995:16022	144730	1	True				
ANR	144751	CallExpression	ev_io_stop ( EV_A_ & ctx -> io )		144730	0					
ANR	144752	Callee	ev_io_stop		144730	0					
ANR	144753	Identifier	ev_io_stop		144730	0					
ANR	144754	ArgumentList	EV_A_ & ctx -> io		144730	1					
ANR	144755	Argument	EV_A_ & ctx -> io		144730	0					
ANR	144756	BitAndExpression	EV_A_ & ctx -> io		144730	0		&			
ANR	144757	Identifier	EV_A_		144730	0					
ANR	144758	PtrMemberAccess	ctx -> io		144730	1					
ANR	144759	Identifier	ctx		144730	0					
ANR	144760	Identifier	io		144730	1					
ANR	144761	ExpressionStatement	close ( ctx -> fd )	555:8:16032:16046	144730	2	True				
ANR	144762	CallExpression	close ( ctx -> fd )		144730	0					
ANR	144763	Callee	close		144730	0					
ANR	144764	Identifier	close		144730	0					
ANR	144765	ArgumentList	ctx -> fd		144730	1					
ANR	144766	Argument	ctx -> fd		144730	0					
ANR	144767	PtrMemberAccess	ctx -> fd		144730	0					
ANR	144768	Identifier	ctx		144730	0					
ANR	144769	Identifier	fd		144730	1					
ANR	144770	ExpressionStatement	ss_free ( ctx )	556:8:16056:16068	144730	3	True				
ANR	144771	CallExpression	ss_free ( ctx )		144730	0					
ANR	144772	Callee	ss_free		144730	0					
ANR	144773	Identifier	ss_free		144730	0					
ANR	144774	ArgumentList	ctx		144730	1					
ANR	144775	Argument	ctx		144730	0					
ANR	144776	Identifier	ctx		144730	0					
ANR	144777	ReturnType	void		144730	1					
ANR	144778	Identifier	close_and_free_remote		144730	2					
ANR	144779	ParameterList	EV_P_ remote_ctx_t * ctx		144730	3					
ANR	144780	Parameter	EV_P_ remote_ctx_t * ctx	550:22:15892:15914	144730	0	True				
ANR	144781	ParameterType	EV_P_ remote_ctx_t *		144730	0					
ANR	144782	Identifier	ctx		144730	1					
ANR	144783	CFGEntryNode	ENTRY		144730		True				
ANR	144784	CFGExitNode	EXIT		144730		True				
ANR	144785	Symbol	ctx -> io		144730						
ANR	144786	Symbol	NULL		144730						
ANR	144787	Symbol	ctx		144730						
ANR	144788	Symbol	EV_A_		144730						
ANR	144789	Symbol	ctx -> watcher		144730						
ANR	144790	Symbol	ctx -> fd		144730						
ANR	144791	Symbol	* ctx		144730						
ANR	144792	Function	remote_timeout_cb	560:0:16079:16446							
ANR	144793	FunctionDef	"remote_timeout_cb (EV_P_ ev_timer * watcher , int revents)"		144792	0					
ANR	144794	CompoundStatement		562:0:16147:16446	144792	0					
ANR	144795	IdentifierDeclStatement	"remote_ctx_t * remote_ctx = cork_container_of ( watcher , remote_ctx_t , watcher ) ;"	563:4:16153:16237	144792	0	True				
ANR	144796	IdentifierDecl	"* remote_ctx = cork_container_of ( watcher , remote_ctx_t , watcher )"		144792	0					
ANR	144797	IdentifierDeclType	remote_ctx_t *		144792	0					
ANR	144798	Identifier	remote_ctx		144792	1					
ANR	144799	AssignmentExpression	"* remote_ctx = cork_container_of ( watcher , remote_ctx_t , watcher )"		144792	2		=			
ANR	144800	Identifier	remote_ctx		144792	0					
ANR	144801	CallExpression	"cork_container_of ( watcher , remote_ctx_t , watcher )"		144792	1					
ANR	144802	Callee	cork_container_of		144792	0					
ANR	144803	Identifier	cork_container_of		144792	0					
ANR	144804	ArgumentList	watcher		144792	1					
ANR	144805	Argument	watcher		144792	0					
ANR	144806	Identifier	watcher		144792	0					
ANR	144807	Argument	remote_ctx_t		144792	1					
ANR	144808	Identifier	remote_ctx_t		144792	0					
ANR	144809	Argument	watcher		144792	2					
ANR	144810	Identifier	watcher		144792	0					
ANR	144811	IfStatement	if ( verbose )		144792	1					
ANR	144812	Condition	verbose	566:8:16248:16254	144792	0	True				
ANR	144813	Identifier	verbose		144792	0					
ANR	144814	CompoundStatement		5:17:109:109	144792	1					
ANR	144815	ExpressionStatement	"LOGI ( ""[udp] connection timeout"" )"	567:8:16267:16299	144792	0	True				
ANR	144816	CallExpression	"LOGI ( ""[udp] connection timeout"" )"		144792	0					
ANR	144817	Callee	LOGI		144792	0					
ANR	144818	Identifier	LOGI		144792	0					
ANR	144819	ArgumentList	"""[udp] connection timeout"""		144792	1					
ANR	144820	Argument	"""[udp] connection timeout"""		144792	0					
ANR	144821	PrimaryExpression	"""[udp] connection timeout"""		144792	0					
ANR	144822	IdentifierDeclStatement	"char * key = hash_key ( remote_ctx -> af , & remote_ctx -> src_addr ) ;"	570:4:16312:16371	144792	2	True				
ANR	144823	IdentifierDecl	"* key = hash_key ( remote_ctx -> af , & remote_ctx -> src_addr )"		144792	0					
ANR	144824	IdentifierDeclType	char *		144792	0					
ANR	144825	Identifier	key		144792	1					
ANR	144826	AssignmentExpression	"* key = hash_key ( remote_ctx -> af , & remote_ctx -> src_addr )"		144792	2		=			
ANR	144827	Identifier	key		144792	0					
ANR	144828	CallExpression	"hash_key ( remote_ctx -> af , & remote_ctx -> src_addr )"		144792	1					
ANR	144829	Callee	hash_key		144792	0					
ANR	144830	Identifier	hash_key		144792	0					
ANR	144831	ArgumentList	remote_ctx -> af		144792	1					
ANR	144832	Argument	remote_ctx -> af		144792	0					
ANR	144833	PtrMemberAccess	remote_ctx -> af		144792	0					
ANR	144834	Identifier	remote_ctx		144792	0					
ANR	144835	Identifier	af		144792	1					
ANR	144836	Argument	& remote_ctx -> src_addr		144792	1					
ANR	144837	UnaryOperationExpression	& remote_ctx -> src_addr		144792	0					
ANR	144838	UnaryOperator	&		144792	0					
ANR	144839	PtrMemberAccess	remote_ctx -> src_addr		144792	1					
ANR	144840	Identifier	remote_ctx		144792	0					
ANR	144841	Identifier	src_addr		144792	1					
ANR	144842	ExpressionStatement	"cache_remove ( remote_ctx -> server_ctx -> conn_cache , key , HASH_KEY_LEN )"	571:4:16377:16444	144792	3	True				
ANR	144843	CallExpression	"cache_remove ( remote_ctx -> server_ctx -> conn_cache , key , HASH_KEY_LEN )"		144792	0					
ANR	144844	Callee	cache_remove		144792	0					
ANR	144845	Identifier	cache_remove		144792	0					
ANR	144846	ArgumentList	remote_ctx -> server_ctx -> conn_cache		144792	1					
ANR	144847	Argument	remote_ctx -> server_ctx -> conn_cache		144792	0					
ANR	144848	PtrMemberAccess	remote_ctx -> server_ctx -> conn_cache		144792	0					
ANR	144849	PtrMemberAccess	remote_ctx -> server_ctx		144792	0					
ANR	144850	Identifier	remote_ctx		144792	0					
ANR	144851	Identifier	server_ctx		144792	1					
ANR	144852	Identifier	conn_cache		144792	1					
ANR	144853	Argument	key		144792	1					
ANR	144854	Identifier	key		144792	0					
ANR	144855	Argument	HASH_KEY_LEN		144792	2					
ANR	144856	Identifier	HASH_KEY_LEN		144792	0					
ANR	144857	ReturnType	static void		144792	1					
ANR	144858	Identifier	remote_timeout_cb		144792	2					
ANR	144859	ParameterList	"EV_P_ ev_timer * watcher , int revents"		144792	3					
ANR	144860	Parameter	EV_P_ ev_timer * watcher	561:18:16109:16131	144792	0	True				
ANR	144861	ParameterType	EV_P_ ev_timer *		144792	0					
ANR	144862	Identifier	watcher		144792	1					
ANR	144863	Parameter	int revents	561:43:16134:16144	144792	1	True				
ANR	144864	ParameterType	int		144792	0					
ANR	144865	Identifier	revents		144792	1					
ANR	144866	CFGEntryNode	ENTRY		144792		True				
ANR	144867	CFGExitNode	EXIT		144792		True				
ANR	144868	Symbol	watcher		144792						
ANR	144869	Symbol	revents		144792						
ANR	144870	Symbol	& remote_ctx -> src_addr		144792						
ANR	144871	Symbol	* remote_ctx -> server_ctx		144792						
ANR	144872	Symbol	remote_ctx -> server_ctx -> conn_cache		144792						
ANR	144873	Symbol	remote_ctx_t		144792						
ANR	144874	Symbol	HASH_KEY_LEN		144792						
ANR	144875	Symbol	verbose		144792						
ANR	144876	Symbol	remote_ctx -> server_ctx		144792						
ANR	144877	Symbol	* * remote_ctx		144792						
ANR	144878	Symbol	cork_container_of		144792						
ANR	144879	Symbol	hash_key		144792						
ANR	144880	Symbol	* remote_ctx		144792						
ANR	144881	Symbol	remote_ctx		144792						
ANR	144882	Symbol	remote_ctx -> af		144792						
ANR	144883	Symbol	key		144792						
ANR	144884	Function	resolv_free_cb	575:0:16470:16669							
ANR	144885	FunctionDef	resolv_free_cb (void * data)		144884	0					
ANR	144886	CompoundStatement		577:0:16509:16669	144884	0					
ANR	144887	IdentifierDeclStatement	struct query_ctx * ctx = ( struct query_ctx * ) data ;	578:4:16515:16563	144884	0	True				
ANR	144888	IdentifierDecl	* ctx = ( struct query_ctx * ) data		144884	0					
ANR	144889	IdentifierDeclType	struct query_ctx *		144884	0					
ANR	144890	Identifier	ctx		144884	1					
ANR	144891	AssignmentExpression	* ctx = ( struct query_ctx * ) data		144884	2		=			
ANR	144892	Identifier	ctx		144884	0					
ANR	144893	CastExpression	( struct query_ctx * ) data		144884	1					
ANR	144894	CastTarget	struct query_ctx *		144884	0					
ANR	144895	Identifier	data		144884	1					
ANR	144896	IfStatement	if ( ctx -> buf != NULL )		144884	1					
ANR	144897	Condition	ctx -> buf != NULL	579:8:16573:16588	144884	0	True				
ANR	144898	EqualityExpression	ctx -> buf != NULL		144884	0		!=			
ANR	144899	PtrMemberAccess	ctx -> buf		144884	0					
ANR	144900	Identifier	ctx		144884	0					
ANR	144901	Identifier	buf		144884	1					
ANR	144902	Identifier	NULL		144884	1					
ANR	144903	CompoundStatement		3:26:81:81	144884	1					
ANR	144904	ExpressionStatement	bfree ( ctx -> buf )	580:8:16601:16616	144884	0	True				
ANR	144905	CallExpression	bfree ( ctx -> buf )		144884	0					
ANR	144906	Callee	bfree		144884	0					
ANR	144907	Identifier	bfree		144884	0					
ANR	144908	ArgumentList	ctx -> buf		144884	1					
ANR	144909	Argument	ctx -> buf		144884	0					
ANR	144910	PtrMemberAccess	ctx -> buf		144884	0					
ANR	144911	Identifier	ctx		144884	0					
ANR	144912	Identifier	buf		144884	1					
ANR	144913	ExpressionStatement	ss_free ( ctx -> buf )	581:8:16626:16643	144884	1	True				
ANR	144914	CallExpression	ss_free ( ctx -> buf )		144884	0					
ANR	144915	Callee	ss_free		144884	0					
ANR	144916	Identifier	ss_free		144884	0					
ANR	144917	ArgumentList	ctx -> buf		144884	1					
ANR	144918	Argument	ctx -> buf		144884	0					
ANR	144919	PtrMemberAccess	ctx -> buf		144884	0					
ANR	144920	Identifier	ctx		144884	0					
ANR	144921	Identifier	buf		144884	1					
ANR	144922	ExpressionStatement	ss_free ( ctx )	583:4:16655:16667	144884	2	True				
ANR	144923	CallExpression	ss_free ( ctx )		144884	0					
ANR	144924	Callee	ss_free		144884	0					
ANR	144925	Identifier	ss_free		144884	0					
ANR	144926	ArgumentList	ctx		144884	1					
ANR	144927	Argument	ctx		144884	0					
ANR	144928	Identifier	ctx		144884	0					
ANR	144929	ReturnType	static void		144884	1					
ANR	144930	Identifier	resolv_free_cb		144884	2					
ANR	144931	ParameterList	void * data		144884	3					
ANR	144932	Parameter	void * data	576:15:16497:16506	144884	0	True				
ANR	144933	ParameterType	void *		144884	0					
ANR	144934	Identifier	data		144884	1					
ANR	144935	CFGEntryNode	ENTRY		144884		True				
ANR	144936	CFGExitNode	EXIT		144884		True				
ANR	144937	Symbol	NULL		144884						
ANR	144938	Symbol	data		144884						
ANR	144939	Symbol	ctx		144884						
ANR	144940	Symbol	ctx -> buf		144884						
ANR	144941	Symbol	* ctx		144884						
ANR	144942	Function	resolv_cb	586:0:16672:19655							
ANR	144943	FunctionDef	"resolv_cb (struct sockaddr * addr , void * data)"		144942	0					
ANR	144944	CompoundStatement		588:0:16729:19655	144942	0					
ANR	144945	IdentifierDeclStatement	struct query_ctx * query_ctx = ( struct query_ctx * ) data ;	589:4:16735:16789	144942	0	True				
ANR	144946	IdentifierDecl	* query_ctx = ( struct query_ctx * ) data		144942	0					
ANR	144947	IdentifierDeclType	struct query_ctx *		144942	0					
ANR	144948	Identifier	query_ctx		144942	1					
ANR	144949	AssignmentExpression	* query_ctx = ( struct query_ctx * ) data		144942	2		=			
ANR	144950	Identifier	query_ctx		144942	0					
ANR	144951	CastExpression	( struct query_ctx * ) data		144942	1					
ANR	144952	CastTarget	struct query_ctx *		144942	0					
ANR	144953	Identifier	data		144942	1					
ANR	144954	IdentifierDeclStatement	struct ev_loop * loop = query_ctx -> server_ctx -> loop ;	590:4:16795:16852	144942	1	True				
ANR	144955	IdentifierDecl	* loop = query_ctx -> server_ctx -> loop		144942	0					
ANR	144956	IdentifierDeclType	struct ev_loop *		144942	0					
ANR	144957	Identifier	loop		144942	1					
ANR	144958	AssignmentExpression	* loop = query_ctx -> server_ctx -> loop		144942	2		=			
ANR	144959	Identifier	loop		144942	0					
ANR	144960	PtrMemberAccess	query_ctx -> server_ctx -> loop		144942	1					
ANR	144961	PtrMemberAccess	query_ctx -> server_ctx		144942	0					
ANR	144962	Identifier	query_ctx		144942	0					
ANR	144963	Identifier	server_ctx		144942	1					
ANR	144964	Identifier	loop		144942	1					
ANR	144965	IfStatement	if ( addr == NULL )		144942	2					
ANR	144966	Condition	addr == NULL	592:8:16863:16874	144942	0	True				
ANR	144967	EqualityExpression	addr == NULL		144942	0		==			
ANR	144968	Identifier	addr		144942	0					
ANR	144969	Identifier	NULL		144942	1					
ANR	144970	CompoundStatement		5:22:147:147	144942	1					
ANR	144971	ExpressionStatement	"LOGE ( ""[udp] unable to resolve"" )"	593:8:16887:16918	144942	0	True				
ANR	144972	CallExpression	"LOGE ( ""[udp] unable to resolve"" )"		144942	0					
ANR	144973	Callee	LOGE		144942	0					
ANR	144974	Identifier	LOGE		144942	0					
ANR	144975	ArgumentList	"""[udp] unable to resolve"""		144942	1					
ANR	144976	Argument	"""[udp] unable to resolve"""		144942	0					
ANR	144977	PrimaryExpression	"""[udp] unable to resolve"""		144942	0					
ANR	144978	ElseStatement	else		144942	0					
ANR	144979	CompoundStatement		9:8:269:297	144942	0					
ANR	144980	IdentifierDeclStatement	remote_ctx_t * remote_ctx = query_ctx -> remote_ctx ;	595:8:16941:16989	144942	0	True				
ANR	144981	IdentifierDecl	* remote_ctx = query_ctx -> remote_ctx		144942	0					
ANR	144982	IdentifierDeclType	remote_ctx_t *		144942	0					
ANR	144983	Identifier	remote_ctx		144942	1					
ANR	144984	AssignmentExpression	* remote_ctx = query_ctx -> remote_ctx		144942	2		=			
ANR	144985	Identifier	remote_ctx		144942	0					
ANR	144986	PtrMemberAccess	query_ctx -> remote_ctx		144942	1					
ANR	144987	Identifier	query_ctx		144942	0					
ANR	144988	Identifier	remote_ctx		144942	1					
ANR	144989	IdentifierDeclStatement	int cache_hit = 0 ;	596:8:16999:17027	144942	1	True				
ANR	144990	IdentifierDecl	cache_hit = 0		144942	0					
ANR	144991	IdentifierDeclType	int		144942	0					
ANR	144992	Identifier	cache_hit		144942	1					
ANR	144993	AssignmentExpression	cache_hit = 0		144942	2		=			
ANR	144994	Identifier	cache_hit		144942	0					
ANR	144995	PrimaryExpression	0		144942	1					
ANR	144996	IfStatement	if ( remote_ctx == NULL )		144942	2					
ANR	144997	Condition	remote_ctx == NULL	599:12:17078:17095	144942	0	True				
ANR	144998	EqualityExpression	remote_ctx == NULL		144942	0		==			
ANR	144999	Identifier	remote_ctx		144942	0					
ANR	145000	Identifier	NULL		144942	1					
ANR	145001	CompoundStatement		13:12:382:435	144942	1					
ANR	145002	IdentifierDeclStatement	"char * key = hash_key ( AF_UNSPEC , & query_ctx -> src_addr ) ;"	600:12:17112:17165	144942	0	True				
ANR	145003	IdentifierDecl	"* key = hash_key ( AF_UNSPEC , & query_ctx -> src_addr )"		144942	0					
ANR	145004	IdentifierDeclType	char *		144942	0					
ANR	145005	Identifier	key		144942	1					
ANR	145006	AssignmentExpression	"* key = hash_key ( AF_UNSPEC , & query_ctx -> src_addr )"		144942	2		=			
ANR	145007	Identifier	key		144942	0					
ANR	145008	CallExpression	"hash_key ( AF_UNSPEC , & query_ctx -> src_addr )"		144942	1					
ANR	145009	Callee	hash_key		144942	0					
ANR	145010	Identifier	hash_key		144942	0					
ANR	145011	ArgumentList	AF_UNSPEC		144942	1					
ANR	145012	Argument	AF_UNSPEC		144942	0					
ANR	145013	Identifier	AF_UNSPEC		144942	0					
ANR	145014	Argument	& query_ctx -> src_addr		144942	1					
ANR	145015	UnaryOperationExpression	& query_ctx -> src_addr		144942	0					
ANR	145016	UnaryOperator	&		144942	0					
ANR	145017	PtrMemberAccess	query_ctx -> src_addr		144942	1					
ANR	145018	Identifier	query_ctx		144942	0					
ANR	145019	Identifier	src_addr		144942	1					
ANR	145020	ExpressionStatement	"cache_lookup ( query_ctx -> server_ctx -> conn_cache , key , HASH_KEY_LEN , ( void * ) & remote_ctx )"	601:12:17179:17266	144942	1	True				
ANR	145021	CallExpression	"cache_lookup ( query_ctx -> server_ctx -> conn_cache , key , HASH_KEY_LEN , ( void * ) & remote_ctx )"		144942	0					
ANR	145022	Callee	cache_lookup		144942	0					
ANR	145023	Identifier	cache_lookup		144942	0					
ANR	145024	ArgumentList	query_ctx -> server_ctx -> conn_cache		144942	1					
ANR	145025	Argument	query_ctx -> server_ctx -> conn_cache		144942	0					
ANR	145026	PtrMemberAccess	query_ctx -> server_ctx -> conn_cache		144942	0					
ANR	145027	PtrMemberAccess	query_ctx -> server_ctx		144942	0					
ANR	145028	Identifier	query_ctx		144942	0					
ANR	145029	Identifier	server_ctx		144942	1					
ANR	145030	Identifier	conn_cache		144942	1					
ANR	145031	Argument	key		144942	1					
ANR	145032	Identifier	key		144942	0					
ANR	145033	Argument	HASH_KEY_LEN		144942	2					
ANR	145034	Identifier	HASH_KEY_LEN		144942	0					
ANR	145035	Argument	( void * ) & remote_ctx		144942	3					
ANR	145036	CastExpression	( void * ) & remote_ctx		144942	0					
ANR	145037	CastTarget	void *		144942	0					
ANR	145038	UnaryOperationExpression	& remote_ctx		144942	1					
ANR	145039	UnaryOperator	&		144942	0					
ANR	145040	Identifier	remote_ctx		144942	1					
ANR	145041	IfStatement	if ( remote_ctx == NULL )		144942	3					
ANR	145042	Condition	remote_ctx == NULL	604:12:17291:17308	144942	0	True				
ANR	145043	EqualityExpression	remote_ctx == NULL		144942	0		==			
ANR	145044	Identifier	remote_ctx		144942	0					
ANR	145045	Identifier	NULL		144942	1					
ANR	145046	CompoundStatement		18:12:595:659	144942	1					
ANR	145047	IdentifierDeclStatement	int remotefd = create_remote_socket ( addr -> sa_family == AF_INET6 ) ;	605:12:17325:17389	144942	0	True				
ANR	145048	IdentifierDecl	remotefd = create_remote_socket ( addr -> sa_family == AF_INET6 )		144942	0					
ANR	145049	IdentifierDeclType	int		144942	0					
ANR	145050	Identifier	remotefd		144942	1					
ANR	145051	AssignmentExpression	remotefd = create_remote_socket ( addr -> sa_family == AF_INET6 )		144942	2		=			
ANR	145052	Identifier	remotefd		144942	0					
ANR	145053	CallExpression	create_remote_socket ( addr -> sa_family == AF_INET6 )		144942	1					
ANR	145054	Callee	create_remote_socket		144942	0					
ANR	145055	Identifier	create_remote_socket		144942	0					
ANR	145056	ArgumentList	addr -> sa_family == AF_INET6		144942	1					
ANR	145057	Argument	addr -> sa_family == AF_INET6		144942	0					
ANR	145058	EqualityExpression	addr -> sa_family == AF_INET6		144942	0		==			
ANR	145059	PtrMemberAccess	addr -> sa_family		144942	0					
ANR	145060	Identifier	addr		144942	0					
ANR	145061	Identifier	sa_family		144942	1					
ANR	145062	Identifier	AF_INET6		144942	1					
ANR	145063	IfStatement	if ( remotefd != - 1 )		144942	1					
ANR	145064	Condition	remotefd != - 1	606:16:17407:17420	144942	0	True				
ANR	145065	EqualityExpression	remotefd != - 1		144942	0		!=			
ANR	145066	Identifier	remotefd		144942	0					
ANR	145067	UnaryOperationExpression	- 1		144942	1					
ANR	145068	UnaryOperator	-		144942	0					
ANR	145069	PrimaryExpression	1		144942	1					
ANR	145070	CompoundStatement		29:16:935:947	144942	1					
ANR	145071	ExpressionStatement	setnonblocking ( remotefd )	607:16:17441:17465	144942	0	True				
ANR	145072	CallExpression	setnonblocking ( remotefd )		144942	0					
ANR	145073	Callee	setnonblocking		144942	0					
ANR	145074	Identifier	setnonblocking		144942	0					
ANR	145075	ArgumentList	remotefd		144942	1					
ANR	145076	Argument	remotefd		144942	0					
ANR	145077	Identifier	remotefd		144942	0					
ANR	145078	ExpressionStatement	set_broadcast ( remotefd )	609:16:17503:17526	144942	1	True				
ANR	145079	CallExpression	set_broadcast ( remotefd )		144942	0					
ANR	145080	Callee	set_broadcast		144942	0					
ANR	145081	Identifier	set_broadcast		144942	0					
ANR	145082	ArgumentList	remotefd		144942	1					
ANR	145083	Argument	remotefd		144942	0					
ANR	145084	Identifier	remotefd		144942	0					
ANR	145085	ExpressionStatement	set_nosigpipe ( remotefd )	612:16:17571:17594	144942	2	True				
ANR	145086	CallExpression	set_nosigpipe ( remotefd )		144942	0					
ANR	145087	Callee	set_nosigpipe		144942	0					
ANR	145088	Identifier	set_nosigpipe		144942	0					
ANR	145089	ArgumentList	remotefd		144942	1					
ANR	145090	Argument	remotefd		144942	0					
ANR	145091	Identifier	remotefd		144942	0					
ANR	145092	IdentifierDeclStatement	int tos = 46 ;	616:16:17665:17677	144942	3	True				
ANR	145093	IdentifierDecl	tos = 46		144942	0					
ANR	145094	IdentifierDeclType	int		144942	0					
ANR	145095	Identifier	tos		144942	1					
ANR	145096	AssignmentExpression	tos = 46		144942	2		=			
ANR	145097	Identifier	tos		144942	0					
ANR	145098	PrimaryExpression	46		144942	1					
ANR	145099	ExpressionStatement	"setsockopt ( remotefd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"	617:16:17695:17754	144942	4	True				
ANR	145100	CallExpression	"setsockopt ( remotefd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"		144942	0					
ANR	145101	Callee	setsockopt		144942	0					
ANR	145102	Identifier	setsockopt		144942	0					
ANR	145103	ArgumentList	remotefd		144942	1					
ANR	145104	Argument	remotefd		144942	0					
ANR	145105	Identifier	remotefd		144942	0					
ANR	145106	Argument	IPPROTO_IP		144942	1					
ANR	145107	Identifier	IPPROTO_IP		144942	0					
ANR	145108	Argument	IP_TOS		144942	2					
ANR	145109	Identifier	IP_TOS		144942	0					
ANR	145110	Argument	& tos		144942	3					
ANR	145111	UnaryOperationExpression	& tos		144942	0					
ANR	145112	UnaryOperator	&		144942	0					
ANR	145113	Identifier	tos		144942	1					
ANR	145114	Argument	sizeof ( tos )		144942	4					
ANR	145115	SizeofExpression	sizeof ( tos )		144942	0					
ANR	145116	Sizeof	sizeof		144942	0					
ANR	145117	SizeofOperand	tos		144942	1					
ANR	145118	IfStatement	if ( query_ctx -> server_ctx -> iface )		144942	5					
ANR	145119	Condition	query_ctx -> server_ctx -> iface	620:20:17804:17831	144942	0	True				
ANR	145120	PtrMemberAccess	query_ctx -> server_ctx -> iface		144942	0					
ANR	145121	PtrMemberAccess	query_ctx -> server_ctx		144942	0					
ANR	145122	Identifier	query_ctx		144942	0					
ANR	145123	Identifier	server_ctx		144942	1					
ANR	145124	Identifier	iface		144942	1					
ANR	145125	CompoundStatement		33:50:1104:1104	144942	1					
ANR	145126	IfStatement	"if ( setinterface ( remotefd , query_ctx -> server_ctx -> iface ) == - 1 )"		144942	0					
ANR	145127	Condition	"setinterface ( remotefd , query_ctx -> server_ctx -> iface ) == - 1"	621:24:17860:17917	144942	0	True				
ANR	145128	EqualityExpression	"setinterface ( remotefd , query_ctx -> server_ctx -> iface ) == - 1"		144942	0		==			
ANR	145129	CallExpression	"setinterface ( remotefd , query_ctx -> server_ctx -> iface )"		144942	0					
ANR	145130	Callee	setinterface		144942	0					
ANR	145131	Identifier	setinterface		144942	0					
ANR	145132	ArgumentList	remotefd		144942	1					
ANR	145133	Argument	remotefd		144942	0					
ANR	145134	Identifier	remotefd		144942	0					
ANR	145135	Argument	query_ctx -> server_ctx -> iface		144942	1					
ANR	145136	PtrMemberAccess	query_ctx -> server_ctx -> iface		144942	0					
ANR	145137	PtrMemberAccess	query_ctx -> server_ctx		144942	0					
ANR	145138	Identifier	query_ctx		144942	0					
ANR	145139	Identifier	server_ctx		144942	1					
ANR	145140	Identifier	iface		144942	1					
ANR	145141	UnaryOperationExpression	- 1		144942	1					
ANR	145142	UnaryOperator	-		144942	0					
ANR	145143	PrimaryExpression	1		144942	1					
ANR	145144	ExpressionStatement	"ERROR ( ""setinterface"" )"	622:24:17944:17965	144942	1	True				
ANR	145145	CallExpression	"ERROR ( ""setinterface"" )"		144942	0					
ANR	145146	Callee	ERROR		144942	0					
ANR	145147	Identifier	ERROR		144942	0					
ANR	145148	ArgumentList	"""setinterface"""		144942	1					
ANR	145149	Argument	"""setinterface"""		144942	0					
ANR	145150	PrimaryExpression	"""setinterface"""		144942	0					
ANR	145151	ExpressionStatement	"remote_ctx = new_remote ( remotefd , query_ctx -> server_ctx )"	625:16:18008:18081	144942	6	True				
ANR	145152	AssignmentExpression	"remote_ctx = new_remote ( remotefd , query_ctx -> server_ctx )"		144942	0		=			
ANR	145153	Identifier	remote_ctx		144942	0					
ANR	145154	CallExpression	"new_remote ( remotefd , query_ctx -> server_ctx )"		144942	1					
ANR	145155	Callee	new_remote		144942	0					
ANR	145156	Identifier	new_remote		144942	0					
ANR	145157	ArgumentList	remotefd		144942	1					
ANR	145158	Argument	remotefd		144942	0					
ANR	145159	Identifier	remotefd		144942	0					
ANR	145160	Argument	query_ctx -> server_ctx		144942	1					
ANR	145161	PtrMemberAccess	query_ctx -> server_ctx		144942	0					
ANR	145162	Identifier	query_ctx		144942	0					
ANR	145163	Identifier	server_ctx		144942	1					
ANR	145164	ExpressionStatement	remote_ctx -> src_addr = query_ctx -> src_addr	626:16:18099:18148	144942	7	True				
ANR	145165	AssignmentExpression	remote_ctx -> src_addr = query_ctx -> src_addr		144942	0		=			
ANR	145166	PtrMemberAccess	remote_ctx -> src_addr		144942	0					
ANR	145167	Identifier	remote_ctx		144942	0					
ANR	145168	Identifier	src_addr		144942	1					
ANR	145169	PtrMemberAccess	query_ctx -> src_addr		144942	1					
ANR	145170	Identifier	query_ctx		144942	0					
ANR	145171	Identifier	src_addr		144942	1					
ANR	145172	ExpressionStatement	remote_ctx -> server_ctx = query_ctx -> server_ctx	627:16:18166:18217	144942	8	True				
ANR	145173	AssignmentExpression	remote_ctx -> server_ctx = query_ctx -> server_ctx		144942	0		=			
ANR	145174	PtrMemberAccess	remote_ctx -> server_ctx		144942	0					
ANR	145175	Identifier	remote_ctx		144942	0					
ANR	145176	Identifier	server_ctx		144942	1					
ANR	145177	PtrMemberAccess	query_ctx -> server_ctx		144942	1					
ANR	145178	Identifier	query_ctx		144942	0					
ANR	145179	Identifier	server_ctx		144942	1					
ANR	145180	ExpressionStatement	remote_ctx -> addr_header_len = query_ctx -> addr_header_len	628:16:18235:18291	144942	9	True				
ANR	145181	AssignmentExpression	remote_ctx -> addr_header_len = query_ctx -> addr_header_len		144942	0		=			
ANR	145182	PtrMemberAccess	remote_ctx -> addr_header_len		144942	0					
ANR	145183	Identifier	remote_ctx		144942	0					
ANR	145184	Identifier	addr_header_len		144942	1					
ANR	145185	PtrMemberAccess	query_ctx -> addr_header_len		144942	1					
ANR	145186	Identifier	query_ctx		144942	0					
ANR	145187	Identifier	addr_header_len		144942	1					
ANR	145188	ExpressionStatement	"memcpy ( remote_ctx -> addr_header , query_ctx -> addr_header , query_ctx -> addr_header_len )"	629:16:18309:18415	144942	10	True				
ANR	145189	CallExpression	"memcpy ( remote_ctx -> addr_header , query_ctx -> addr_header , query_ctx -> addr_header_len )"		144942	0					
ANR	145190	Callee	memcpy		144942	0					
ANR	145191	Identifier	memcpy		144942	0					
ANR	145192	ArgumentList	remote_ctx -> addr_header		144942	1					
ANR	145193	Argument	remote_ctx -> addr_header		144942	0					
ANR	145194	PtrMemberAccess	remote_ctx -> addr_header		144942	0					
ANR	145195	Identifier	remote_ctx		144942	0					
ANR	145196	Identifier	addr_header		144942	1					
ANR	145197	Argument	query_ctx -> addr_header		144942	1					
ANR	145198	PtrMemberAccess	query_ctx -> addr_header		144942	0					
ANR	145199	Identifier	query_ctx		144942	0					
ANR	145200	Identifier	addr_header		144942	1					
ANR	145201	Argument	query_ctx -> addr_header_len		144942	2					
ANR	145202	PtrMemberAccess	query_ctx -> addr_header_len		144942	0					
ANR	145203	Identifier	query_ctx		144942	0					
ANR	145204	Identifier	addr_header_len		144942	1					
ANR	145205	ElseStatement	else		144942	0					
ANR	145206	CompoundStatement		44:19:1706:1706	144942	0					
ANR	145207	ExpressionStatement	"ERROR ( ""[udp] bind() error"" )"	632:16:18454:18481	144942	0	True				
ANR	145208	CallExpression	"ERROR ( ""[udp] bind() error"" )"		144942	0					
ANR	145209	Callee	ERROR		144942	0					
ANR	145210	Identifier	ERROR		144942	0					
ANR	145211	ArgumentList	"""[udp] bind() error"""		144942	1					
ANR	145212	Argument	"""[udp] bind() error"""		144942	0					
ANR	145213	PrimaryExpression	"""[udp] bind() error"""		144942	0					
ANR	145214	ElseStatement	else		144942	0					
ANR	145215	CompoundStatement		47:15:1782:1782	144942	0					
ANR	145216	ExpressionStatement	cache_hit = 1	635:12:18526:18539	144942	0	True				
ANR	145217	AssignmentExpression	cache_hit = 1		144942	0		=			
ANR	145218	Identifier	cache_hit		144942	0					
ANR	145219	PrimaryExpression	1		144942	1					
ANR	145220	IfStatement	if ( remote_ctx != NULL )		144942	4					
ANR	145221	Condition	remote_ctx != NULL	638:12:18564:18581	144942	0	True				
ANR	145222	EqualityExpression	remote_ctx != NULL		144942	0		!=			
ANR	145223	Identifier	remote_ctx		144942	0					
ANR	145224	Identifier	NULL		144942	1					
ANR	145225	CompoundStatement		58:12:2147:2286	144942	1					
ANR	145226	IfStatement	if ( addr -> sa_family == AF_INET )		144942	0					
ANR	145227	Condition	addr -> sa_family == AF_INET	639:16:18602:18627	144942	0	True				
ANR	145228	EqualityExpression	addr -> sa_family == AF_INET		144942	0		==			
ANR	145229	PtrMemberAccess	addr -> sa_family		144942	0					
ANR	145230	Identifier	addr		144942	0					
ANR	145231	Identifier	sa_family		144942	1					
ANR	145232	Identifier	AF_INET		144942	1					
ANR	145233	ExpressionStatement	"memcpy ( & remote_ctx -> dst_addr , addr , sizeof ( struct sockaddr_in ) )"	640:16:18646:18709	144942	1	True				
ANR	145234	CallExpression	"memcpy ( & remote_ctx -> dst_addr , addr , sizeof ( struct sockaddr_in ) )"		144942	0					
ANR	145235	Callee	memcpy		144942	0					
ANR	145236	Identifier	memcpy		144942	0					
ANR	145237	ArgumentList	& remote_ctx -> dst_addr		144942	1					
ANR	145238	Argument	& remote_ctx -> dst_addr		144942	0					
ANR	145239	UnaryOperationExpression	& remote_ctx -> dst_addr		144942	0					
ANR	145240	UnaryOperator	&		144942	0					
ANR	145241	PtrMemberAccess	remote_ctx -> dst_addr		144942	1					
ANR	145242	Identifier	remote_ctx		144942	0					
ANR	145243	Identifier	dst_addr		144942	1					
ANR	145244	Argument	addr		144942	1					
ANR	145245	Identifier	addr		144942	0					
ANR	145246	Argument	sizeof ( struct sockaddr_in )		144942	2					
ANR	145247	SizeofExpression	sizeof ( struct sockaddr_in )		144942	0					
ANR	145248	Sizeof	sizeof		144942	0					
ANR	145249	SizeofOperand	struct sockaddr_in		144942	1					
ANR	145250	ElseStatement	else		144942	0					
ANR	145251	ExpressionStatement	"memcpy ( & remote_ctx -> dst_addr , addr , sizeof ( struct sockaddr_in6 ) )"	642:16:18744:18808	144942	0	True				
ANR	145252	CallExpression	"memcpy ( & remote_ctx -> dst_addr , addr , sizeof ( struct sockaddr_in6 ) )"		144942	0					
ANR	145253	Callee	memcpy		144942	0					
ANR	145254	Identifier	memcpy		144942	0					
ANR	145255	ArgumentList	& remote_ctx -> dst_addr		144942	1					
ANR	145256	Argument	& remote_ctx -> dst_addr		144942	0					
ANR	145257	UnaryOperationExpression	& remote_ctx -> dst_addr		144942	0					
ANR	145258	UnaryOperator	&		144942	0					
ANR	145259	PtrMemberAccess	remote_ctx -> dst_addr		144942	1					
ANR	145260	Identifier	remote_ctx		144942	0					
ANR	145261	Identifier	dst_addr		144942	1					
ANR	145262	Argument	addr		144942	1					
ANR	145263	Identifier	addr		144942	0					
ANR	145264	Argument	sizeof ( struct sockaddr_in6 )		144942	2					
ANR	145265	SizeofExpression	sizeof ( struct sockaddr_in6 )		144942	0					
ANR	145266	Sizeof	sizeof		144942	0					
ANR	145267	SizeofOperand	struct sockaddr_in6		144942	1					
ANR	145268	IdentifierDeclStatement	size_t addr_len = get_sockaddr_len ( addr ) ;	644:12:18823:18863	144942	1	True				
ANR	145269	IdentifierDecl	addr_len = get_sockaddr_len ( addr )		144942	0					
ANR	145270	IdentifierDeclType	size_t		144942	0					
ANR	145271	Identifier	addr_len		144942	1					
ANR	145272	AssignmentExpression	addr_len = get_sockaddr_len ( addr )		144942	2		=			
ANR	145273	Identifier	addr_len		144942	0					
ANR	145274	CallExpression	get_sockaddr_len ( addr )		144942	1					
ANR	145275	Callee	get_sockaddr_len		144942	0					
ANR	145276	Identifier	get_sockaddr_len		144942	0					
ANR	145277	ArgumentList	addr		144942	1					
ANR	145278	Argument	addr		144942	0					
ANR	145279	Identifier	addr		144942	0					
ANR	145280	IdentifierDeclStatement	"int s = sendto ( remote_ctx -> fd , query_ctx -> buf -> data , query_ctx -> buf -> len , 0 , addr , addr_len ) ;"	645:12:18877:19016	144942	2	True				
ANR	145281	IdentifierDecl	"s = sendto ( remote_ctx -> fd , query_ctx -> buf -> data , query_ctx -> buf -> len , 0 , addr , addr_len )"		144942	0					
ANR	145282	IdentifierDeclType	int		144942	0					
ANR	145283	Identifier	s		144942	1					
ANR	145284	AssignmentExpression	"s = sendto ( remote_ctx -> fd , query_ctx -> buf -> data , query_ctx -> buf -> len , 0 , addr , addr_len )"		144942	2		=			
ANR	145285	Identifier	s		144942	0					
ANR	145286	CallExpression	"sendto ( remote_ctx -> fd , query_ctx -> buf -> data , query_ctx -> buf -> len , 0 , addr , addr_len )"		144942	1					
ANR	145287	Callee	sendto		144942	0					
ANR	145288	Identifier	sendto		144942	0					
ANR	145289	ArgumentList	remote_ctx -> fd		144942	1					
ANR	145290	Argument	remote_ctx -> fd		144942	0					
ANR	145291	PtrMemberAccess	remote_ctx -> fd		144942	0					
ANR	145292	Identifier	remote_ctx		144942	0					
ANR	145293	Identifier	fd		144942	1					
ANR	145294	Argument	query_ctx -> buf -> data		144942	1					
ANR	145295	PtrMemberAccess	query_ctx -> buf -> data		144942	0					
ANR	145296	PtrMemberAccess	query_ctx -> buf		144942	0					
ANR	145297	Identifier	query_ctx		144942	0					
ANR	145298	Identifier	buf		144942	1					
ANR	145299	Identifier	data		144942	1					
ANR	145300	Argument	query_ctx -> buf -> len		144942	2					
ANR	145301	PtrMemberAccess	query_ctx -> buf -> len		144942	0					
ANR	145302	PtrMemberAccess	query_ctx -> buf		144942	0					
ANR	145303	Identifier	query_ctx		144942	0					
ANR	145304	Identifier	buf		144942	1					
ANR	145305	Identifier	len		144942	1					
ANR	145306	Argument	0		144942	3					
ANR	145307	PrimaryExpression	0		144942	0					
ANR	145308	Argument	addr		144942	4					
ANR	145309	Identifier	addr		144942	0					
ANR	145310	Argument	addr_len		144942	5					
ANR	145311	Identifier	addr_len		144942	0					
ANR	145312	IfStatement	if ( s == - 1 )		144942	3					
ANR	145313	Condition	s == - 1	648:16:19035:19041	144942	0	True				
ANR	145314	EqualityExpression	s == - 1		144942	0		==			
ANR	145315	Identifier	s		144942	0					
ANR	145316	UnaryOperationExpression	- 1		144942	1					
ANR	145317	UnaryOperator	-		144942	0					
ANR	145318	PrimaryExpression	1		144942	1					
ANR	145319	CompoundStatement		61:25:2314:2314	144942	1					
ANR	145320	ExpressionStatement	"ERROR ( ""[udp] sendto_remote"" )"	649:16:19062:19090	144942	0	True				
ANR	145321	CallExpression	"ERROR ( ""[udp] sendto_remote"" )"		144942	0					
ANR	145322	Callee	ERROR		144942	0					
ANR	145323	Identifier	ERROR		144942	0					
ANR	145324	ArgumentList	"""[udp] sendto_remote"""		144942	1					
ANR	145325	Argument	"""[udp] sendto_remote"""		144942	0					
ANR	145326	PrimaryExpression	"""[udp] sendto_remote"""		144942	0					
ANR	145327	IfStatement	if ( ! cache_hit )		144942	1					
ANR	145328	Condition	! cache_hit	650:20:19112:19121	144942	0	True				
ANR	145329	UnaryOperationExpression	! cache_hit		144942	0					
ANR	145330	UnaryOperator	!		144942	0					
ANR	145331	Identifier	cache_hit		144942	1					
ANR	145332	CompoundStatement		63:32:2394:2394	144942	1					
ANR	145333	Statement	close_and_free_remote	651:20:19146:19166	144942	0	True				
ANR	145334	Statement	(	651:41:19167:19167	144942	1	True				
ANR	145335	Statement	EV_A_	651:42:19168:19172	144942	2	True				
ANR	145336	Statement	remote_ctx	651:48:19174:19183	144942	3	True				
ANR	145337	Statement	)	651:58:19184:19184	144942	4	True				
ANR	145338	ExpressionStatement		651:59:19185:19185	144942	5	True				
ANR	145339	ElseStatement	else		144942	0					
ANR	145340	CompoundStatement		66:19:2494:2494	144942	0					
ANR	145341	IfStatement	if ( ! cache_hit )		144942	0					
ANR	145342	Condition	! cache_hit	654:20:19246:19255	144942	0	True				
ANR	145343	UnaryOperationExpression	! cache_hit		144942	0					
ANR	145344	UnaryOperator	!		144942	0					
ANR	145345	Identifier	cache_hit		144942	1					
ANR	145346	CompoundStatement		69:20:2591:2645	144942	1					
ANR	145347	IdentifierDeclStatement	"char * key = hash_key ( AF_UNSPEC , & remote_ctx -> src_addr ) ;"	656:20:19321:19375	144942	0	True				
ANR	145348	IdentifierDecl	"* key = hash_key ( AF_UNSPEC , & remote_ctx -> src_addr )"		144942	0					
ANR	145349	IdentifierDeclType	char *		144942	0					
ANR	145350	Identifier	key		144942	1					
ANR	145351	AssignmentExpression	"* key = hash_key ( AF_UNSPEC , & remote_ctx -> src_addr )"		144942	2		=			
ANR	145352	Identifier	key		144942	0					
ANR	145353	CallExpression	"hash_key ( AF_UNSPEC , & remote_ctx -> src_addr )"		144942	1					
ANR	145354	Callee	hash_key		144942	0					
ANR	145355	Identifier	hash_key		144942	0					
ANR	145356	ArgumentList	AF_UNSPEC		144942	1					
ANR	145357	Argument	AF_UNSPEC		144942	0					
ANR	145358	Identifier	AF_UNSPEC		144942	0					
ANR	145359	Argument	& remote_ctx -> src_addr		144942	1					
ANR	145360	UnaryOperationExpression	& remote_ctx -> src_addr		144942	0					
ANR	145361	UnaryOperator	&		144942	0					
ANR	145362	PtrMemberAccess	remote_ctx -> src_addr		144942	1					
ANR	145363	Identifier	remote_ctx		144942	0					
ANR	145364	Identifier	src_addr		144942	1					
ANR	145365	ExpressionStatement	"cache_insert ( query_ctx -> server_ctx -> conn_cache , key , HASH_KEY_LEN , ( void * ) remote_ctx )"	657:20:19397:19483	144942	1	True				
ANR	145366	CallExpression	"cache_insert ( query_ctx -> server_ctx -> conn_cache , key , HASH_KEY_LEN , ( void * ) remote_ctx )"		144942	0					
ANR	145367	Callee	cache_insert		144942	0					
ANR	145368	Identifier	cache_insert		144942	0					
ANR	145369	ArgumentList	query_ctx -> server_ctx -> conn_cache		144942	1					
ANR	145370	Argument	query_ctx -> server_ctx -> conn_cache		144942	0					
ANR	145371	PtrMemberAccess	query_ctx -> server_ctx -> conn_cache		144942	0					
ANR	145372	PtrMemberAccess	query_ctx -> server_ctx		144942	0					
ANR	145373	Identifier	query_ctx		144942	0					
ANR	145374	Identifier	server_ctx		144942	1					
ANR	145375	Identifier	conn_cache		144942	1					
ANR	145376	Argument	key		144942	1					
ANR	145377	Identifier	key		144942	0					
ANR	145378	Argument	HASH_KEY_LEN		144942	2					
ANR	145379	Identifier	HASH_KEY_LEN		144942	0					
ANR	145380	Argument	( void * ) remote_ctx		144942	3					
ANR	145381	CastExpression	( void * ) remote_ctx		144942	0					
ANR	145382	CastTarget	void *		144942	0					
ANR	145383	Identifier	remote_ctx		144942	1					
ANR	145384	ExpressionStatement	ev_io_start ( EV_A_ & remote_ctx -> io )	658:20:19505:19540	144942	2	True				
ANR	145385	CallExpression	ev_io_start ( EV_A_ & remote_ctx -> io )		144942	0					
ANR	145386	Callee	ev_io_start		144942	0					
ANR	145387	Identifier	ev_io_start		144942	0					
ANR	145388	ArgumentList	EV_A_ & remote_ctx -> io		144942	1					
ANR	145389	Argument	EV_A_ & remote_ctx -> io		144942	0					
ANR	145390	BitAndExpression	EV_A_ & remote_ctx -> io		144942	0		&			
ANR	145391	Identifier	EV_A_		144942	0					
ANR	145392	PtrMemberAccess	remote_ctx -> io		144942	1					
ANR	145393	Identifier	remote_ctx		144942	0					
ANR	145394	Identifier	io		144942	1					
ANR	145395	ExpressionStatement	ev_timer_start ( EV_A_ & remote_ctx -> watcher )	659:20:19562:19605	144942	3	True				
ANR	145396	CallExpression	ev_timer_start ( EV_A_ & remote_ctx -> watcher )		144942	0					
ANR	145397	Callee	ev_timer_start		144942	0					
ANR	145398	Identifier	ev_timer_start		144942	0					
ANR	145399	ArgumentList	EV_A_ & remote_ctx -> watcher		144942	1					
ANR	145400	Argument	EV_A_ & remote_ctx -> watcher		144942	0					
ANR	145401	BitAndExpression	EV_A_ & remote_ctx -> watcher		144942	0		&			
ANR	145402	Identifier	EV_A_		144942	0					
ANR	145403	PtrMemberAccess	remote_ctx -> watcher		144942	1					
ANR	145404	Identifier	remote_ctx		144942	0					
ANR	145405	Identifier	watcher		144942	1					
ANR	145406	ReturnType	static void		144942	1					
ANR	145407	Identifier	resolv_cb		144942	2					
ANR	145408	ParameterList	"struct sockaddr * addr , void * data"		144942	3					
ANR	145409	Parameter	struct sockaddr * addr	587:10:16694:16714	144942	0	True				
ANR	145410	ParameterType	struct sockaddr *		144942	0					
ANR	145411	Identifier	addr		144942	1					
ANR	145412	Parameter	void * data	587:33:16717:16726	144942	1	True				
ANR	145413	ParameterType	void *		144942	0					
ANR	145414	Identifier	data		144942	1					
ANR	145415	CFGEntryNode	ENTRY		144942		True				
ANR	145416	CFGExitNode	EXIT		144942		True				
ANR	145417	Symbol	addr -> sa_family		144942						
ANR	145418	Symbol	sendto		144942						
ANR	145419	Symbol	data		144942						
ANR	145420	Symbol	IP_TOS		144942						
ANR	145421	Symbol	remote_ctx -> addr_header_len		144942						
ANR	145422	Symbol	remote_ctx -> watcher		144942						
ANR	145423	Symbol	query_ctx -> addr_header		144942						
ANR	145424	Symbol	query_ctx -> buf -> len		144942						
ANR	145425	Symbol	query_ctx -> server_ctx -> loop		144942						
ANR	145426	Symbol	query_ctx -> src_addr		144942						
ANR	145427	Symbol	loop		144942						
ANR	145428	Symbol	query_ctx -> server_ctx -> conn_cache		144942						
ANR	145429	Symbol	addr_len		144942						
ANR	145430	Symbol	& remote_ctx -> dst_addr		144942						
ANR	145431	Symbol	IPPROTO_IP		144942						
ANR	145432	Symbol	query_ctx -> remote_ctx		144942						
ANR	145433	Symbol	& query_ctx -> src_addr		144942						
ANR	145434	Symbol	NULL		144942						
ANR	145435	Symbol	& remote_ctx -> src_addr		144942						
ANR	145436	Symbol	AF_INET		144942						
ANR	145437	Symbol	HASH_KEY_LEN		144942						
ANR	145438	Symbol	query_ctx -> buf		144942						
ANR	145439	Symbol	* query_ctx -> buf		144942						
ANR	145440	Symbol	new_remote		144942						
ANR	145441	Symbol	* remote_ctx		144942						
ANR	145442	Symbol	remote_ctx		144942						
ANR	145443	Symbol	* addr		144942						
ANR	145444	Symbol	* query_ctx		144942						
ANR	145445	Symbol	remote_ctx -> fd		144942						
ANR	145446	Symbol	query_ctx -> server_ctx		144942						
ANR	145447	Symbol	query_ctx -> buf -> data		144942						
ANR	145448	Symbol	query_ctx -> addr_header_len		144942						
ANR	145449	Symbol	AF_UNSPEC		144942						
ANR	145450	Symbol	cache_hit		144942						
ANR	145451	Symbol	setinterface		144942						
ANR	145452	Symbol	remote_ctx -> io		144942						
ANR	145453	Symbol	create_remote_socket		144942						
ANR	145454	Symbol	tos		144942						
ANR	145455	Symbol	addr		144942						
ANR	145456	Symbol	key		144942						
ANR	145457	Symbol	query_ctx		144942						
ANR	145458	Symbol	& remote_ctx		144942						
ANR	145459	Symbol	query_ctx -> server_ctx -> iface		144942						
ANR	145460	Symbol	get_sockaddr_len		144942						
ANR	145461	Symbol	remote_ctx -> addr_header		144942						
ANR	145462	Symbol	remotefd		144942						
ANR	145463	Symbol	AF_INET6		144942						
ANR	145464	Symbol	remote_ctx -> server_ctx		144942						
ANR	145465	Symbol	remote_ctx -> src_addr		144942						
ANR	145466	Symbol	* query_ctx -> server_ctx		144942						
ANR	145467	Symbol	s		144942						
ANR	145468	Symbol	hash_key		144942						
ANR	145469	Symbol	EV_A_		144942						
ANR	145470	Symbol	& tos		144942						
ANR	145471	Symbol	* * query_ctx		144942						
ANR	145472	Function	remote_recv_cb	668:0:19666:24405							
ANR	145473	FunctionDef	"remote_recv_cb (EV_P_ ev_io * w , int revents)"		145472	0					
ANR	145474	CompoundStatement		670:0:19722:24405	145472	0					
ANR	145475	IdentifierDeclStatement	ssize_t r ;	671:4:19728:19737	145472	0	True				
ANR	145476	IdentifierDecl	r		145472	0					
ANR	145477	IdentifierDeclType	ssize_t		145472	0					
ANR	145478	Identifier	r		145472	1					
ANR	145479	IdentifierDeclStatement	remote_ctx_t * remote_ctx = ( remote_ctx_t * ) w ;	672:4:19743:19787	145472	1	True				
ANR	145480	IdentifierDecl	* remote_ctx = ( remote_ctx_t * ) w		145472	0					
ANR	145481	IdentifierDeclType	remote_ctx_t *		145472	0					
ANR	145482	Identifier	remote_ctx		145472	1					
ANR	145483	AssignmentExpression	* remote_ctx = ( remote_ctx_t * ) w		145472	2		=			
ANR	145484	Identifier	remote_ctx		145472	0					
ANR	145485	CastExpression	( remote_ctx_t * ) w		145472	1					
ANR	145486	CastTarget	remote_ctx_t *		145472	0					
ANR	145487	Identifier	w		145472	1					
ANR	145488	IdentifierDeclStatement	server_ctx_t * server_ctx = remote_ctx -> server_ctx ;	673:4:19793:19842	145472	2	True				
ANR	145489	IdentifierDecl	* server_ctx = remote_ctx -> server_ctx		145472	0					
ANR	145490	IdentifierDeclType	server_ctx_t *		145472	0					
ANR	145491	Identifier	server_ctx		145472	1					
ANR	145492	AssignmentExpression	* server_ctx = remote_ctx -> server_ctx		145472	2		=			
ANR	145493	Identifier	server_ctx		145472	0					
ANR	145494	PtrMemberAccess	remote_ctx -> server_ctx		145472	1					
ANR	145495	Identifier	remote_ctx		145472	0					
ANR	145496	Identifier	server_ctx		145472	1					
ANR	145497	IfStatement	if ( server_ctx == NULL )		145472	3					
ANR	145498	Condition	server_ctx == NULL	676:8:19883:19900	145472	0	True				
ANR	145499	EqualityExpression	server_ctx == NULL		145472	0		==			
ANR	145500	Identifier	server_ctx		145472	0					
ANR	145501	Identifier	NULL		145472	1					
ANR	145502	CompoundStatement		7:28:180:180	145472	1					
ANR	145503	ExpressionStatement	"LOGE ( ""[udp] invalid server"" )"	677:8:19913:19941	145472	0	True				
ANR	145504	CallExpression	"LOGE ( ""[udp] invalid server"" )"		145472	0					
ANR	145505	Callee	LOGE		145472	0					
ANR	145506	Identifier	LOGE		145472	0					
ANR	145507	ArgumentList	"""[udp] invalid server"""		145472	1					
ANR	145508	Argument	"""[udp] invalid server"""		145472	0					
ANR	145509	PrimaryExpression	"""[udp] invalid server"""		145472	0					
ANR	145510	Statement	close_and_free_remote	678:8:19951:19971	145472	1	True				
ANR	145511	Statement	(	678:29:19972:19972	145472	2	True				
ANR	145512	Statement	EV_A_	678:30:19973:19977	145472	3	True				
ANR	145513	Statement	remote_ctx	678:36:19979:19988	145472	4	True				
ANR	145514	Statement	)	678:46:19989:19989	145472	5	True				
ANR	145515	ExpressionStatement		678:47:19990:19990	145472	6	True				
ANR	145516	ReturnStatement	return ;	679:8:20000:20006	145472	7	True				
ANR	145517	IfStatement	if ( verbose )		145472	4					
ANR	145518	Condition	verbose	682:8:20023:20029	145472	0	True				
ANR	145519	Identifier	verbose		145472	0					
ANR	145520	CompoundStatement		13:17:309:309	145472	1					
ANR	145521	ExpressionStatement	"LOGI ( ""[udp] remote receive a packet"" )"	683:8:20042:20079	145472	0	True				
ANR	145522	CallExpression	"LOGI ( ""[udp] remote receive a packet"" )"		145472	0					
ANR	145523	Callee	LOGI		145472	0					
ANR	145524	Identifier	LOGI		145472	0					
ANR	145525	ArgumentList	"""[udp] remote receive a packet"""		145472	1					
ANR	145526	Argument	"""[udp] remote receive a packet"""		145472	0					
ANR	145527	PrimaryExpression	"""[udp] remote receive a packet"""		145472	0					
ANR	145528	IdentifierDeclStatement	struct sockaddr_storage src_addr ;	686:4:20092:20124	145472	5	True				
ANR	145529	IdentifierDecl	src_addr		145472	0					
ANR	145530	IdentifierDeclType	struct sockaddr_storage		145472	0					
ANR	145531	Identifier	src_addr		145472	1					
ANR	145532	IdentifierDeclStatement	socklen_t src_addr_len = sizeof ( struct sockaddr_storage ) ;	687:4:20130:20186	145472	6	True				
ANR	145533	IdentifierDecl	src_addr_len = sizeof ( struct sockaddr_storage )		145472	0					
ANR	145534	IdentifierDeclType	socklen_t		145472	0					
ANR	145535	Identifier	src_addr_len		145472	1					
ANR	145536	AssignmentExpression	src_addr_len = sizeof ( struct sockaddr_storage )		145472	2		=			
ANR	145537	Identifier	src_addr_len		145472	0					
ANR	145538	SizeofExpression	sizeof ( struct sockaddr_storage )		145472	1					
ANR	145539	Sizeof	sizeof		145472	0					
ANR	145540	SizeofOperand	struct sockaddr_storage		145472	1					
ANR	145541	ExpressionStatement	"memset ( & src_addr , 0 , src_addr_len )"	688:4:20192:20226	145472	7	True				
ANR	145542	CallExpression	"memset ( & src_addr , 0 , src_addr_len )"		145472	0					
ANR	145543	Callee	memset		145472	0					
ANR	145544	Identifier	memset		145472	0					
ANR	145545	ArgumentList	& src_addr		145472	1					
ANR	145546	Argument	& src_addr		145472	0					
ANR	145547	UnaryOperationExpression	& src_addr		145472	0					
ANR	145548	UnaryOperator	&		145472	0					
ANR	145549	Identifier	src_addr		145472	1					
ANR	145550	Argument	0		145472	1					
ANR	145551	PrimaryExpression	0		145472	0					
ANR	145552	Argument	src_addr_len		145472	2					
ANR	145553	Identifier	src_addr_len		145472	0					
ANR	145554	IdentifierDeclStatement	buffer_t * buf = ss_malloc ( sizeof ( buffer_t ) ) ;	690:4:20233:20276	145472	8	True				
ANR	145555	IdentifierDecl	* buf = ss_malloc ( sizeof ( buffer_t ) )		145472	0					
ANR	145556	IdentifierDeclType	buffer_t *		145472	0					
ANR	145557	Identifier	buf		145472	1					
ANR	145558	AssignmentExpression	* buf = ss_malloc ( sizeof ( buffer_t ) )		145472	2		=			
ANR	145559	Identifier	buf		145472	0					
ANR	145560	CallExpression	ss_malloc ( sizeof ( buffer_t ) )		145472	1					
ANR	145561	Callee	ss_malloc		145472	0					
ANR	145562	Identifier	ss_malloc		145472	0					
ANR	145563	ArgumentList	sizeof ( buffer_t )		145472	1					
ANR	145564	Argument	sizeof ( buffer_t )		145472	0					
ANR	145565	SizeofExpression	sizeof ( buffer_t )		145472	0					
ANR	145566	Sizeof	sizeof		145472	0					
ANR	145567	SizeofOperand	buffer_t		145472	1					
ANR	145568	ExpressionStatement	"balloc ( buf , buf_size )"	691:4:20282:20303	145472	9	True				
ANR	145569	CallExpression	"balloc ( buf , buf_size )"		145472	0					
ANR	145570	Callee	balloc		145472	0					
ANR	145571	Identifier	balloc		145472	0					
ANR	145572	ArgumentList	buf		145472	1					
ANR	145573	Argument	buf		145472	0					
ANR	145574	Identifier	buf		145472	0					
ANR	145575	Argument	buf_size		145472	1					
ANR	145576	Identifier	buf_size		145472	0					
ANR	145577	ExpressionStatement	"r = recvfrom ( remote_ctx -> fd , buf -> data , buf_size , 0 , ( struct sockaddr * ) & src_addr , & src_addr_len )"	694:4:20322:20419	145472	10	True				
ANR	145578	AssignmentExpression	"r = recvfrom ( remote_ctx -> fd , buf -> data , buf_size , 0 , ( struct sockaddr * ) & src_addr , & src_addr_len )"		145472	0		=			
ANR	145579	Identifier	r		145472	0					
ANR	145580	CallExpression	"recvfrom ( remote_ctx -> fd , buf -> data , buf_size , 0 , ( struct sockaddr * ) & src_addr , & src_addr_len )"		145472	1					
ANR	145581	Callee	recvfrom		145472	0					
ANR	145582	Identifier	recvfrom		145472	0					
ANR	145583	ArgumentList	remote_ctx -> fd		145472	1					
ANR	145584	Argument	remote_ctx -> fd		145472	0					
ANR	145585	PtrMemberAccess	remote_ctx -> fd		145472	0					
ANR	145586	Identifier	remote_ctx		145472	0					
ANR	145587	Identifier	fd		145472	1					
ANR	145588	Argument	buf -> data		145472	1					
ANR	145589	PtrMemberAccess	buf -> data		145472	0					
ANR	145590	Identifier	buf		145472	0					
ANR	145591	Identifier	data		145472	1					
ANR	145592	Argument	buf_size		145472	2					
ANR	145593	Identifier	buf_size		145472	0					
ANR	145594	Argument	0		145472	3					
ANR	145595	PrimaryExpression	0		145472	0					
ANR	145596	Argument	( struct sockaddr * ) & src_addr		145472	4					
ANR	145597	CastExpression	( struct sockaddr * ) & src_addr		145472	0					
ANR	145598	CastTarget	struct sockaddr *		145472	0					
ANR	145599	UnaryOperationExpression	& src_addr		145472	1					
ANR	145600	UnaryOperator	&		145472	0					
ANR	145601	Identifier	src_addr		145472	1					
ANR	145602	Argument	& src_addr_len		145472	5					
ANR	145603	UnaryOperationExpression	& src_addr_len		145472	0					
ANR	145604	UnaryOperator	&		145472	0					
ANR	145605	Identifier	src_addr_len		145472	1					
ANR	145606	IfStatement	if ( r == - 1 )		145472	11					
ANR	145607	Condition	r == - 1	696:8:20430:20436	145472	0	True				
ANR	145608	EqualityExpression	r == - 1		145472	0		==			
ANR	145609	Identifier	r		145472	0					
ANR	145610	UnaryOperationExpression	- 1		145472	1					
ANR	145611	UnaryOperator	-		145472	0					
ANR	145612	PrimaryExpression	1		145472	1					
ANR	145613	CompoundStatement		27:17:716:716	145472	1					
ANR	145614	ExpressionStatement	"ERROR ( ""[udp] remote_recv_recvfrom"" )"	699:8:20509:20544	145472	0	True				
ANR	145615	CallExpression	"ERROR ( ""[udp] remote_recv_recvfrom"" )"		145472	0					
ANR	145616	Callee	ERROR		145472	0					
ANR	145617	Identifier	ERROR		145472	0					
ANR	145618	ArgumentList	"""[udp] remote_recv_recvfrom"""		145472	1					
ANR	145619	Argument	"""[udp] remote_recv_recvfrom"""		145472	0					
ANR	145620	PrimaryExpression	"""[udp] remote_recv_recvfrom"""		145472	0					
ANR	145621	GotoStatement	goto CLEAN_UP ;	700:8:20554:20567	145472	1	True				
ANR	145622	Identifier	CLEAN_UP		145472	0					
ANR	145623	ElseStatement	else		145472	0					
ANR	145624	IfStatement	if ( r > packet_size )		145472	0					
ANR	145625	Condition	r > packet_size	701:15:20584:20598	145472	0	True				
ANR	145626	RelationalExpression	r > packet_size		145472	0		>			
ANR	145627	Identifier	r		145472	0					
ANR	145628	Identifier	packet_size		145472	1					
ANR	145629	CompoundStatement		32:32:878:878	145472	1					
ANR	145630	IfStatement	if ( verbose )		145472	0					
ANR	145631	Condition	verbose	702:12:20615:20621	145472	0	True				
ANR	145632	Identifier	verbose		145472	0					
ANR	145633	CompoundStatement		33:21:901:901	145472	1					
ANR	145634	ExpressionStatement	"LOGI ( ""[udp] remote_recv_recvfrom fragmentation"" )"	703:12:20638:20686	145472	0	True				
ANR	145635	CallExpression	"LOGI ( ""[udp] remote_recv_recvfrom fragmentation"" )"		145472	0					
ANR	145636	Callee	LOGI		145472	0					
ANR	145637	Identifier	LOGI		145472	0					
ANR	145638	ArgumentList	"""[udp] remote_recv_recvfrom fragmentation"""		145472	1					
ANR	145639	Argument	"""[udp] remote_recv_recvfrom fragmentation"""		145472	0					
ANR	145640	PrimaryExpression	"""[udp] remote_recv_recvfrom fragmentation"""		145472	0					
ANR	145641	ExpressionStatement	buf -> len = r	707:4:20709:20721	145472	12	True				
ANR	145642	AssignmentExpression	buf -> len = r		145472	0		=			
ANR	145643	PtrMemberAccess	buf -> len		145472	0					
ANR	145644	Identifier	buf		145472	0					
ANR	145645	Identifier	len		145472	1					
ANR	145646	Identifier	r		145472	1					
ANR	145647	IdentifierDeclStatement	"int err = server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size ) ;"	710:4:20748:20832	145472	13	True				
ANR	145648	IdentifierDecl	"err = server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		145472	0					
ANR	145649	IdentifierDeclType	int		145472	0					
ANR	145650	Identifier	err		145472	1					
ANR	145651	AssignmentExpression	"err = server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		145472	2		=			
ANR	145652	Identifier	err		145472	0					
ANR	145653	CallExpression	"server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		145472	1					
ANR	145654	Callee	server_ctx -> crypto -> decrypt_all		145472	0					
ANR	145655	PtrMemberAccess	server_ctx -> crypto -> decrypt_all		145472	0					
ANR	145656	PtrMemberAccess	server_ctx -> crypto		145472	0					
ANR	145657	Identifier	server_ctx		145472	0					
ANR	145658	Identifier	crypto		145472	1					
ANR	145659	Identifier	decrypt_all		145472	1					
ANR	145660	ArgumentList	buf		145472	1					
ANR	145661	Argument	buf		145472	0					
ANR	145662	Identifier	buf		145472	0					
ANR	145663	Argument	server_ctx -> crypto -> cipher		145472	1					
ANR	145664	PtrMemberAccess	server_ctx -> crypto -> cipher		145472	0					
ANR	145665	PtrMemberAccess	server_ctx -> crypto		145472	0					
ANR	145666	Identifier	server_ctx		145472	0					
ANR	145667	Identifier	crypto		145472	1					
ANR	145668	Identifier	cipher		145472	1					
ANR	145669	Argument	buf_size		145472	2					
ANR	145670	Identifier	buf_size		145472	0					
ANR	145671	IfStatement	if ( err )		145472	14					
ANR	145672	Condition	err	711:8:20842:20844	145472	0	True				
ANR	145673	Identifier	err		145472	0					
ANR	145674	CompoundStatement		42:13:1124:1124	145472	1					
ANR	145675	GotoStatement	goto CLEAN_UP ;	713:8:20893:20906	145472	0	True				
ANR	145676	Identifier	CLEAN_UP		145472	0					
ANR	145677	IdentifierDeclStatement	struct sockaddr_storage dst_addr ;	717:4:20939:20971	145472	15	True				
ANR	145678	IdentifierDecl	dst_addr		145472	0					
ANR	145679	IdentifierDeclType	struct sockaddr_storage		145472	0					
ANR	145680	Identifier	dst_addr		145472	1					
ANR	145681	ExpressionStatement	"memset ( & dst_addr , 0 , sizeof ( struct sockaddr_storage ) )"	718:4:20977:21030	145472	16	True				
ANR	145682	CallExpression	"memset ( & dst_addr , 0 , sizeof ( struct sockaddr_storage ) )"		145472	0					
ANR	145683	Callee	memset		145472	0					
ANR	145684	Identifier	memset		145472	0					
ANR	145685	ArgumentList	& dst_addr		145472	1					
ANR	145686	Argument	& dst_addr		145472	0					
ANR	145687	UnaryOperationExpression	& dst_addr		145472	0					
ANR	145688	UnaryOperator	&		145472	0					
ANR	145689	Identifier	dst_addr		145472	1					
ANR	145690	Argument	0		145472	1					
ANR	145691	PrimaryExpression	0		145472	0					
ANR	145692	Argument	sizeof ( struct sockaddr_storage )		145472	2					
ANR	145693	SizeofExpression	sizeof ( struct sockaddr_storage )		145472	0					
ANR	145694	Sizeof	sizeof		145472	0					
ANR	145695	SizeofOperand	struct sockaddr_storage		145472	1					
ANR	145696	IdentifierDeclStatement	"int len = parse_udprelay_header ( buf -> data , buf -> len , NULL , NULL , & dst_addr ) ;"	719:4:21036:21111	145472	17	True				
ANR	145697	IdentifierDecl	"len = parse_udprelay_header ( buf -> data , buf -> len , NULL , NULL , & dst_addr )"		145472	0					
ANR	145698	IdentifierDeclType	int		145472	0					
ANR	145699	Identifier	len		145472	1					
ANR	145700	AssignmentExpression	"len = parse_udprelay_header ( buf -> data , buf -> len , NULL , NULL , & dst_addr )"		145472	2		=			
ANR	145701	Identifier	len		145472	0					
ANR	145702	CallExpression	"parse_udprelay_header ( buf -> data , buf -> len , NULL , NULL , & dst_addr )"		145472	1					
ANR	145703	Callee	parse_udprelay_header		145472	0					
ANR	145704	Identifier	parse_udprelay_header		145472	0					
ANR	145705	ArgumentList	buf -> data		145472	1					
ANR	145706	Argument	buf -> data		145472	0					
ANR	145707	PtrMemberAccess	buf -> data		145472	0					
ANR	145708	Identifier	buf		145472	0					
ANR	145709	Identifier	data		145472	1					
ANR	145710	Argument	buf -> len		145472	1					
ANR	145711	PtrMemberAccess	buf -> len		145472	0					
ANR	145712	Identifier	buf		145472	0					
ANR	145713	Identifier	len		145472	1					
ANR	145714	Argument	NULL		145472	2					
ANR	145715	Identifier	NULL		145472	0					
ANR	145716	Argument	NULL		145472	3					
ANR	145717	Identifier	NULL		145472	0					
ANR	145718	Argument	& dst_addr		145472	4					
ANR	145719	UnaryOperationExpression	& dst_addr		145472	0					
ANR	145720	UnaryOperator	&		145472	0					
ANR	145721	Identifier	dst_addr		145472	1					
ANR	145722	IfStatement	if ( dst_addr . ss_family != AF_INET && dst_addr . ss_family != AF_INET6 )		145472	18					
ANR	145723	Condition	dst_addr . ss_family != AF_INET && dst_addr . ss_family != AF_INET6	721:8:21122:21184	145472	0	True				
ANR	145724	AndExpression	dst_addr . ss_family != AF_INET && dst_addr . ss_family != AF_INET6		145472	0		&&			
ANR	145725	EqualityExpression	dst_addr . ss_family != AF_INET		145472	0		!=			
ANR	145726	MemberAccess	dst_addr . ss_family		145472	0					
ANR	145727	Identifier	dst_addr		145472	0					
ANR	145728	Identifier	ss_family		145472	1					
ANR	145729	Identifier	AF_INET		145472	1					
ANR	145730	EqualityExpression	dst_addr . ss_family != AF_INET6		145472	1		!=			
ANR	145731	MemberAccess	dst_addr . ss_family		145472	0					
ANR	145732	Identifier	dst_addr		145472	0					
ANR	145733	Identifier	ss_family		145472	1					
ANR	145734	Identifier	AF_INET6		145472	1					
ANR	145735	CompoundStatement		52:73:1464:1464	145472	1					
ANR	145736	ExpressionStatement	"LOGI ( ""[udp] ss-redir does not support domain name"" )"	722:8:21197:21248	145472	0	True				
ANR	145737	CallExpression	"LOGI ( ""[udp] ss-redir does not support domain name"" )"		145472	0					
ANR	145738	Callee	LOGI		145472	0					
ANR	145739	Identifier	LOGI		145472	0					
ANR	145740	ArgumentList	"""[udp] ss-redir does not support domain name"""		145472	1					
ANR	145741	Argument	"""[udp] ss-redir does not support domain name"""		145472	0					
ANR	145742	PrimaryExpression	"""[udp] ss-redir does not support domain name"""		145472	0					
ANR	145743	GotoStatement	goto CLEAN_UP ;	723:8:21258:21271	145472	1	True				
ANR	145744	Identifier	CLEAN_UP		145472	0					
ANR	145745	IfStatement	if ( len == 0 )		145472	19					
ANR	145746	Condition	len == 0	729:8:21377:21384	145472	0	True				
ANR	145747	EqualityExpression	len == 0		145472	0		==			
ANR	145748	Identifier	len		145472	0					
ANR	145749	PrimaryExpression	0		145472	1					
ANR	145750	CompoundStatement		60:18:1664:1664	145472	1					
ANR	145751	ExpressionStatement	"LOGI ( ""[udp] error in parse header"" )"	730:8:21397:21432	145472	0	True				
ANR	145752	CallExpression	"LOGI ( ""[udp] error in parse header"" )"		145472	0					
ANR	145753	Callee	LOGI		145472	0					
ANR	145754	Identifier	LOGI		145472	0					
ANR	145755	ArgumentList	"""[udp] error in parse header"""		145472	1					
ANR	145756	Argument	"""[udp] error in parse header"""		145472	0					
ANR	145757	PrimaryExpression	"""[udp] error in parse header"""		145472	0					
ANR	145758	GotoStatement	goto CLEAN_UP ;	732:8:21475:21488	145472	1	True				
ANR	145759	Identifier	CLEAN_UP		145472	0					
ANR	145760	ExpressionStatement	buf -> len -= len	739:4:21688:21703	145472	20	True				
ANR	145761	AssignmentExpression	buf -> len -= len		145472	0		-=			
ANR	145762	PtrMemberAccess	buf -> len		145472	0					
ANR	145763	Identifier	buf		145472	0					
ANR	145764	Identifier	len		145472	1					
ANR	145765	Identifier	len		145472	1					
ANR	145766	ExpressionStatement	"memmove ( buf -> data , buf -> data + len , buf -> len )"	740:4:21709:21754	145472	21	True				
ANR	145767	CallExpression	"memmove ( buf -> data , buf -> data + len , buf -> len )"		145472	0					
ANR	145768	Callee	memmove		145472	0					
ANR	145769	Identifier	memmove		145472	0					
ANR	145770	ArgumentList	buf -> data		145472	1					
ANR	145771	Argument	buf -> data		145472	0					
ANR	145772	PtrMemberAccess	buf -> data		145472	0					
ANR	145773	Identifier	buf		145472	0					
ANR	145774	Identifier	data		145472	1					
ANR	145775	Argument	buf -> data + len		145472	1					
ANR	145776	AdditiveExpression	buf -> data + len		145472	0		+			
ANR	145777	PtrMemberAccess	buf -> data		145472	0					
ANR	145778	Identifier	buf		145472	0					
ANR	145779	Identifier	data		145472	1					
ANR	145780	Identifier	len		145472	1					
ANR	145781	Argument	buf -> len		145472	2					
ANR	145782	PtrMemberAccess	buf -> len		145472	0					
ANR	145783	Identifier	buf		145472	0					
ANR	145784	Identifier	len		145472	1					
ANR	145785	ExpressionStatement	rx += buf -> len	757:4:22036:22050	145472	22	True				
ANR	145786	AssignmentExpression	rx += buf -> len		145472	0		+=			
ANR	145787	Identifier	rx		145472	0					
ANR	145788	PtrMemberAccess	buf -> len		145472	1					
ANR	145789	Identifier	buf		145472	0					
ANR	145790	Identifier	len		145472	1					
ANR	145791	IdentifierDeclStatement	char * addr_header = remote_ctx -> addr_header ;	759:4:22057:22102	145472	23	True				
ANR	145792	IdentifierDecl	* addr_header = remote_ctx -> addr_header		145472	0					
ANR	145793	IdentifierDeclType	char *		145472	0					
ANR	145794	Identifier	addr_header		145472	1					
ANR	145795	AssignmentExpression	* addr_header = remote_ctx -> addr_header		145472	2		=			
ANR	145796	Identifier	addr_header		145472	0					
ANR	145797	PtrMemberAccess	remote_ctx -> addr_header		145472	1					
ANR	145798	Identifier	remote_ctx		145472	0					
ANR	145799	Identifier	addr_header		145472	1					
ANR	145800	IdentifierDeclStatement	int addr_header_len = remote_ctx -> addr_header_len ;	760:4:22108:22157	145472	24	True				
ANR	145801	IdentifierDecl	addr_header_len = remote_ctx -> addr_header_len		145472	0					
ANR	145802	IdentifierDeclType	int		145472	0					
ANR	145803	Identifier	addr_header_len		145472	1					
ANR	145804	AssignmentExpression	addr_header_len = remote_ctx -> addr_header_len		145472	2		=			
ANR	145805	Identifier	addr_header_len		145472	0					
ANR	145806	PtrMemberAccess	remote_ctx -> addr_header_len		145472	1					
ANR	145807	Identifier	remote_ctx		145472	0					
ANR	145808	Identifier	addr_header_len		145472	1					
ANR	145809	ExpressionStatement	"brealloc ( buf , buf -> len + addr_header_len , buf_size )"	763:4:22188:22239	145472	25	True				
ANR	145810	CallExpression	"brealloc ( buf , buf -> len + addr_header_len , buf_size )"		145472	0					
ANR	145811	Callee	brealloc		145472	0					
ANR	145812	Identifier	brealloc		145472	0					
ANR	145813	ArgumentList	buf		145472	1					
ANR	145814	Argument	buf		145472	0					
ANR	145815	Identifier	buf		145472	0					
ANR	145816	Argument	buf -> len + addr_header_len		145472	1					
ANR	145817	AdditiveExpression	buf -> len + addr_header_len		145472	0		+			
ANR	145818	PtrMemberAccess	buf -> len		145472	0					
ANR	145819	Identifier	buf		145472	0					
ANR	145820	Identifier	len		145472	1					
ANR	145821	Identifier	addr_header_len		145472	1					
ANR	145822	Argument	buf_size		145472	2					
ANR	145823	Identifier	buf_size		145472	0					
ANR	145824	ExpressionStatement	"memmove ( buf -> data + addr_header_len , buf -> data , buf -> len )"	764:4:22245:22302	145472	26	True				
ANR	145825	CallExpression	"memmove ( buf -> data + addr_header_len , buf -> data , buf -> len )"		145472	0					
ANR	145826	Callee	memmove		145472	0					
ANR	145827	Identifier	memmove		145472	0					
ANR	145828	ArgumentList	buf -> data + addr_header_len		145472	1					
ANR	145829	Argument	buf -> data + addr_header_len		145472	0					
ANR	145830	AdditiveExpression	buf -> data + addr_header_len		145472	0		+			
ANR	145831	PtrMemberAccess	buf -> data		145472	0					
ANR	145832	Identifier	buf		145472	0					
ANR	145833	Identifier	data		145472	1					
ANR	145834	Identifier	addr_header_len		145472	1					
ANR	145835	Argument	buf -> data		145472	1					
ANR	145836	PtrMemberAccess	buf -> data		145472	0					
ANR	145837	Identifier	buf		145472	0					
ANR	145838	Identifier	data		145472	1					
ANR	145839	Argument	buf -> len		145472	2					
ANR	145840	PtrMemberAccess	buf -> len		145472	0					
ANR	145841	Identifier	buf		145472	0					
ANR	145842	Identifier	len		145472	1					
ANR	145843	ExpressionStatement	"memcpy ( buf -> data , addr_header , addr_header_len )"	765:4:22308:22355	145472	27	True				
ANR	145844	CallExpression	"memcpy ( buf -> data , addr_header , addr_header_len )"		145472	0					
ANR	145845	Callee	memcpy		145472	0					
ANR	145846	Identifier	memcpy		145472	0					
ANR	145847	ArgumentList	buf -> data		145472	1					
ANR	145848	Argument	buf -> data		145472	0					
ANR	145849	PtrMemberAccess	buf -> data		145472	0					
ANR	145850	Identifier	buf		145472	0					
ANR	145851	Identifier	data		145472	1					
ANR	145852	Argument	addr_header		145472	1					
ANR	145853	Identifier	addr_header		145472	0					
ANR	145854	Argument	addr_header_len		145472	2					
ANR	145855	Identifier	addr_header_len		145472	0					
ANR	145856	ExpressionStatement	buf -> len += addr_header_len	766:4:22361:22388	145472	28	True				
ANR	145857	AssignmentExpression	buf -> len += addr_header_len		145472	0		+=			
ANR	145858	PtrMemberAccess	buf -> len		145472	0					
ANR	145859	Identifier	buf		145472	0					
ANR	145860	Identifier	len		145472	1					
ANR	145861	Identifier	addr_header_len		145472	1					
ANR	145862	IdentifierDeclStatement	"int err = server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size ) ;"	768:4:22395:22479	145472	29	True				
ANR	145863	IdentifierDecl	"err = server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		145472	0					
ANR	145864	IdentifierDeclType	int		145472	0					
ANR	145865	Identifier	err		145472	1					
ANR	145866	AssignmentExpression	"err = server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		145472	2		=			
ANR	145867	Identifier	err		145472	0					
ANR	145868	CallExpression	"server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		145472	1					
ANR	145869	Callee	server_ctx -> crypto -> encrypt_all		145472	0					
ANR	145870	PtrMemberAccess	server_ctx -> crypto -> encrypt_all		145472	0					
ANR	145871	PtrMemberAccess	server_ctx -> crypto		145472	0					
ANR	145872	Identifier	server_ctx		145472	0					
ANR	145873	Identifier	crypto		145472	1					
ANR	145874	Identifier	encrypt_all		145472	1					
ANR	145875	ArgumentList	buf		145472	1					
ANR	145876	Argument	buf		145472	0					
ANR	145877	Identifier	buf		145472	0					
ANR	145878	Argument	server_ctx -> crypto -> cipher		145472	1					
ANR	145879	PtrMemberAccess	server_ctx -> crypto -> cipher		145472	0					
ANR	145880	PtrMemberAccess	server_ctx -> crypto		145472	0					
ANR	145881	Identifier	server_ctx		145472	0					
ANR	145882	Identifier	crypto		145472	1					
ANR	145883	Identifier	cipher		145472	1					
ANR	145884	Argument	buf_size		145472	2					
ANR	145885	Identifier	buf_size		145472	0					
ANR	145886	IfStatement	if ( err )		145472	30					
ANR	145887	Condition	err	769:8:22489:22491	145472	0	True				
ANR	145888	Identifier	err		145472	0					
ANR	145889	CompoundStatement		100:13:2771:2771	145472	1					
ANR	145890	GotoStatement	goto CLEAN_UP ;	771:8:22540:22553	145472	0	True				
ANR	145891	Identifier	CLEAN_UP		145472	0					
ANR	145892	IfStatement	if ( buf -> len > packet_size )		145472	31					
ANR	145893	Condition	buf -> len > packet_size	776:8:22578:22599	145472	0	True				
ANR	145894	RelationalExpression	buf -> len > packet_size		145472	0		>			
ANR	145895	PtrMemberAccess	buf -> len		145472	0					
ANR	145896	Identifier	buf		145472	0					
ANR	145897	Identifier	len		145472	1					
ANR	145898	Identifier	packet_size		145472	1					
ANR	145899	CompoundStatement		107:32:2879:2879	145472	1					
ANR	145900	IfStatement	if ( verbose )		145472	0					
ANR	145901	Condition	verbose	777:12:22616:22622	145472	0	True				
ANR	145902	Identifier	verbose		145472	0					
ANR	145903	CompoundStatement		108:21:2902:2902	145472	1					
ANR	145904	ExpressionStatement	"LOGI ( ""[udp] remote_recv_sendto fragmentation"" )"	778:12:22639:22685	145472	0	True				
ANR	145905	CallExpression	"LOGI ( ""[udp] remote_recv_sendto fragmentation"" )"		145472	0					
ANR	145906	Callee	LOGI		145472	0					
ANR	145907	Identifier	LOGI		145472	0					
ANR	145908	ArgumentList	"""[udp] remote_recv_sendto fragmentation"""		145472	1					
ANR	145909	Argument	"""[udp] remote_recv_sendto fragmentation"""		145472	0					
ANR	145910	PrimaryExpression	"""[udp] remote_recv_sendto fragmentation"""		145472	0					
ANR	145911	IdentifierDeclStatement	size_t remote_src_addr_len = get_sockaddr_len ( ( struct sockaddr * ) & remote_ctx -> src_addr ) ;	782:4:22708:22795	145472	32	True				
ANR	145912	IdentifierDecl	remote_src_addr_len = get_sockaddr_len ( ( struct sockaddr * ) & remote_ctx -> src_addr )		145472	0					
ANR	145913	IdentifierDeclType	size_t		145472	0					
ANR	145914	Identifier	remote_src_addr_len		145472	1					
ANR	145915	AssignmentExpression	remote_src_addr_len = get_sockaddr_len ( ( struct sockaddr * ) & remote_ctx -> src_addr )		145472	2		=			
ANR	145916	Identifier	remote_src_addr_len		145472	0					
ANR	145917	CallExpression	get_sockaddr_len ( ( struct sockaddr * ) & remote_ctx -> src_addr )		145472	1					
ANR	145918	Callee	get_sockaddr_len		145472	0					
ANR	145919	Identifier	get_sockaddr_len		145472	0					
ANR	145920	ArgumentList	( struct sockaddr * ) & remote_ctx -> src_addr		145472	1					
ANR	145921	Argument	( struct sockaddr * ) & remote_ctx -> src_addr		145472	0					
ANR	145922	CastExpression	( struct sockaddr * ) & remote_ctx -> src_addr		145472	0					
ANR	145923	CastTarget	struct sockaddr *		145472	0					
ANR	145924	UnaryOperationExpression	& remote_ctx -> src_addr		145472	1					
ANR	145925	UnaryOperator	&		145472	0					
ANR	145926	PtrMemberAccess	remote_ctx -> src_addr		145472	1					
ANR	145927	Identifier	remote_ctx		145472	0					
ANR	145928	Identifier	src_addr		145472	1					
ANR	145929	IdentifierDeclStatement	size_t remote_dst_addr_len = get_sockaddr_len ( ( struct sockaddr * ) & dst_addr ) ;	786:4:22823:22898	145472	33	True				
ANR	145930	IdentifierDecl	remote_dst_addr_len = get_sockaddr_len ( ( struct sockaddr * ) & dst_addr )		145472	0					
ANR	145931	IdentifierDeclType	size_t		145472	0					
ANR	145932	Identifier	remote_dst_addr_len		145472	1					
ANR	145933	AssignmentExpression	remote_dst_addr_len = get_sockaddr_len ( ( struct sockaddr * ) & dst_addr )		145472	2		=			
ANR	145934	Identifier	remote_dst_addr_len		145472	0					
ANR	145935	CallExpression	get_sockaddr_len ( ( struct sockaddr * ) & dst_addr )		145472	1					
ANR	145936	Callee	get_sockaddr_len		145472	0					
ANR	145937	Identifier	get_sockaddr_len		145472	0					
ANR	145938	ArgumentList	( struct sockaddr * ) & dst_addr		145472	1					
ANR	145939	Argument	( struct sockaddr * ) & dst_addr		145472	0					
ANR	145940	CastExpression	( struct sockaddr * ) & dst_addr		145472	0					
ANR	145941	CastTarget	struct sockaddr *		145472	0					
ANR	145942	UnaryOperationExpression	& dst_addr		145472	1					
ANR	145943	UnaryOperator	&		145472	0					
ANR	145944	Identifier	dst_addr		145472	1					
ANR	145945	IdentifierDeclStatement	"int src_fd = socket ( remote_ctx -> src_addr . ss_family , SOCK_DGRAM , 0 ) ;"	788:4:22905:22971	145472	34	True				
ANR	145946	IdentifierDecl	"src_fd = socket ( remote_ctx -> src_addr . ss_family , SOCK_DGRAM , 0 )"		145472	0					
ANR	145947	IdentifierDeclType	int		145472	0					
ANR	145948	Identifier	src_fd		145472	1					
ANR	145949	AssignmentExpression	"src_fd = socket ( remote_ctx -> src_addr . ss_family , SOCK_DGRAM , 0 )"		145472	2		=			
ANR	145950	Identifier	src_fd		145472	0					
ANR	145951	CallExpression	"socket ( remote_ctx -> src_addr . ss_family , SOCK_DGRAM , 0 )"		145472	1					
ANR	145952	Callee	socket		145472	0					
ANR	145953	Identifier	socket		145472	0					
ANR	145954	ArgumentList	remote_ctx -> src_addr . ss_family		145472	1					
ANR	145955	Argument	remote_ctx -> src_addr . ss_family		145472	0					
ANR	145956	MemberAccess	remote_ctx -> src_addr . ss_family		145472	0					
ANR	145957	PtrMemberAccess	remote_ctx -> src_addr		145472	0					
ANR	145958	Identifier	remote_ctx		145472	0					
ANR	145959	Identifier	src_addr		145472	1					
ANR	145960	Identifier	ss_family		145472	1					
ANR	145961	Argument	SOCK_DGRAM		145472	1					
ANR	145962	Identifier	SOCK_DGRAM		145472	0					
ANR	145963	Argument	0		145472	2					
ANR	145964	PrimaryExpression	0		145472	0					
ANR	145965	IfStatement	if ( src_fd < 0 )		145472	35					
ANR	145966	Condition	src_fd < 0	789:8:22981:22990	145472	0	True				
ANR	145967	RelationalExpression	src_fd < 0		145472	0		<			
ANR	145968	Identifier	src_fd		145472	0					
ANR	145969	PrimaryExpression	0		145472	1					
ANR	145970	CompoundStatement		120:20:3270:3270	145472	1					
ANR	145971	ExpressionStatement	"ERROR ( ""[udp] remote_recv_socket"" )"	790:8:23003:23036	145472	0	True				
ANR	145972	CallExpression	"ERROR ( ""[udp] remote_recv_socket"" )"		145472	0					
ANR	145973	Callee	ERROR		145472	0					
ANR	145974	Identifier	ERROR		145472	0					
ANR	145975	ArgumentList	"""[udp] remote_recv_socket"""		145472	1					
ANR	145976	Argument	"""[udp] remote_recv_socket"""		145472	0					
ANR	145977	PrimaryExpression	"""[udp] remote_recv_socket"""		145472	0					
ANR	145978	GotoStatement	goto CLEAN_UP ;	791:8:23046:23059	145472	1	True				
ANR	145979	Identifier	CLEAN_UP		145472	0					
ANR	145980	IdentifierDeclStatement	int opt = 1 ;	793:4:23071:23082	145472	36	True				
ANR	145981	IdentifierDecl	opt = 1		145472	0					
ANR	145982	IdentifierDeclType	int		145472	0					
ANR	145983	Identifier	opt		145472	1					
ANR	145984	AssignmentExpression	opt = 1		145472	2		=			
ANR	145985	Identifier	opt		145472	0					
ANR	145986	PrimaryExpression	1		145472	1					
ANR	145987	IfStatement	"if ( setsockopt ( src_fd , SOL_IP , IP_TRANSPARENT , & opt , sizeof ( opt ) ) )"		145472	37					
ANR	145988	Condition	"setsockopt ( src_fd , SOL_IP , IP_TRANSPARENT , & opt , sizeof ( opt ) )"	794:8:23092:23152	145472	0	True				
ANR	145989	CallExpression	"setsockopt ( src_fd , SOL_IP , IP_TRANSPARENT , & opt , sizeof ( opt ) )"		145472	0					
ANR	145990	Callee	setsockopt		145472	0					
ANR	145991	Identifier	setsockopt		145472	0					
ANR	145992	ArgumentList	src_fd		145472	1					
ANR	145993	Argument	src_fd		145472	0					
ANR	145994	Identifier	src_fd		145472	0					
ANR	145995	Argument	SOL_IP		145472	1					
ANR	145996	Identifier	SOL_IP		145472	0					
ANR	145997	Argument	IP_TRANSPARENT		145472	2					
ANR	145998	Identifier	IP_TRANSPARENT		145472	0					
ANR	145999	Argument	& opt		145472	3					
ANR	146000	UnaryOperationExpression	& opt		145472	0					
ANR	146001	UnaryOperator	&		145472	0					
ANR	146002	Identifier	opt		145472	1					
ANR	146003	Argument	sizeof ( opt )		145472	4					
ANR	146004	SizeofExpression	sizeof ( opt )		145472	0					
ANR	146005	Sizeof	sizeof		145472	0					
ANR	146006	SizeofOperand	opt		145472	1					
ANR	146007	CompoundStatement		125:71:3432:3432	145472	1					
ANR	146008	ExpressionStatement	"ERROR ( ""[udp] remote_recv_setsockopt"" )"	795:8:23165:23202	145472	0	True				
ANR	146009	CallExpression	"ERROR ( ""[udp] remote_recv_setsockopt"" )"		145472	0					
ANR	146010	Callee	ERROR		145472	0					
ANR	146011	Identifier	ERROR		145472	0					
ANR	146012	ArgumentList	"""[udp] remote_recv_setsockopt"""		145472	1					
ANR	146013	Argument	"""[udp] remote_recv_setsockopt"""		145472	0					
ANR	146014	PrimaryExpression	"""[udp] remote_recv_setsockopt"""		145472	0					
ANR	146015	ExpressionStatement	close ( src_fd )	796:8:23212:23225	145472	1	True				
ANR	146016	CallExpression	close ( src_fd )		145472	0					
ANR	146017	Callee	close		145472	0					
ANR	146018	Identifier	close		145472	0					
ANR	146019	ArgumentList	src_fd		145472	1					
ANR	146020	Argument	src_fd		145472	0					
ANR	146021	Identifier	src_fd		145472	0					
ANR	146022	GotoStatement	goto CLEAN_UP ;	797:8:23235:23248	145472	2	True				
ANR	146023	Identifier	CLEAN_UP		145472	0					
ANR	146024	IfStatement	"if ( setsockopt ( src_fd , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) ) )"		145472	38					
ANR	146025	Condition	"setsockopt ( src_fd , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"	799:8:23264:23326	145472	0	True				
ANR	146026	CallExpression	"setsockopt ( src_fd , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"		145472	0					
ANR	146027	Callee	setsockopt		145472	0					
ANR	146028	Identifier	setsockopt		145472	0					
ANR	146029	ArgumentList	src_fd		145472	1					
ANR	146030	Argument	src_fd		145472	0					
ANR	146031	Identifier	src_fd		145472	0					
ANR	146032	Argument	SOL_SOCKET		145472	1					
ANR	146033	Identifier	SOL_SOCKET		145472	0					
ANR	146034	Argument	SO_REUSEADDR		145472	2					
ANR	146035	Identifier	SO_REUSEADDR		145472	0					
ANR	146036	Argument	& opt		145472	3					
ANR	146037	UnaryOperationExpression	& opt		145472	0					
ANR	146038	UnaryOperator	&		145472	0					
ANR	146039	Identifier	opt		145472	1					
ANR	146040	Argument	sizeof ( opt )		145472	4					
ANR	146041	SizeofExpression	sizeof ( opt )		145472	0					
ANR	146042	Sizeof	sizeof		145472	0					
ANR	146043	SizeofOperand	opt		145472	1					
ANR	146044	CompoundStatement		130:73:3606:3606	145472	1					
ANR	146045	ExpressionStatement	"ERROR ( ""[udp] remote_recv_setsockopt"" )"	800:8:23339:23376	145472	0	True				
ANR	146046	CallExpression	"ERROR ( ""[udp] remote_recv_setsockopt"" )"		145472	0					
ANR	146047	Callee	ERROR		145472	0					
ANR	146048	Identifier	ERROR		145472	0					
ANR	146049	ArgumentList	"""[udp] remote_recv_setsockopt"""		145472	1					
ANR	146050	Argument	"""[udp] remote_recv_setsockopt"""		145472	0					
ANR	146051	PrimaryExpression	"""[udp] remote_recv_setsockopt"""		145472	0					
ANR	146052	ExpressionStatement	close ( src_fd )	801:8:23386:23399	145472	1	True				
ANR	146053	CallExpression	close ( src_fd )		145472	0					
ANR	146054	Callee	close		145472	0					
ANR	146055	Identifier	close		145472	0					
ANR	146056	ArgumentList	src_fd		145472	1					
ANR	146057	Argument	src_fd		145472	0					
ANR	146058	Identifier	src_fd		145472	0					
ANR	146059	GotoStatement	goto CLEAN_UP ;	802:8:23409:23422	145472	2	True				
ANR	146060	Identifier	CLEAN_UP		145472	0					
ANR	146061	IdentifierDeclStatement	int tos = 46 ;	806:4:23468:23480	145472	39	True				
ANR	146062	IdentifierDecl	tos = 46		145472	0					
ANR	146063	IdentifierDeclType	int		145472	0					
ANR	146064	Identifier	tos		145472	1					
ANR	146065	AssignmentExpression	tos = 46		145472	2		=			
ANR	146066	Identifier	tos		145472	0					
ANR	146067	PrimaryExpression	46		145472	1					
ANR	146068	ExpressionStatement	"setsockopt ( src_fd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"	807:4:23486:23543	145472	40	True				
ANR	146069	CallExpression	"setsockopt ( src_fd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"		145472	0					
ANR	146070	Callee	setsockopt		145472	0					
ANR	146071	Identifier	setsockopt		145472	0					
ANR	146072	ArgumentList	src_fd		145472	1					
ANR	146073	Argument	src_fd		145472	0					
ANR	146074	Identifier	src_fd		145472	0					
ANR	146075	Argument	IPPROTO_IP		145472	1					
ANR	146076	Identifier	IPPROTO_IP		145472	0					
ANR	146077	Argument	IP_TOS		145472	2					
ANR	146078	Identifier	IP_TOS		145472	0					
ANR	146079	Argument	& tos		145472	3					
ANR	146080	UnaryOperationExpression	& tos		145472	0					
ANR	146081	UnaryOperator	&		145472	0					
ANR	146082	Identifier	tos		145472	1					
ANR	146083	Argument	sizeof ( tos )		145472	4					
ANR	146084	SizeofExpression	sizeof ( tos )		145472	0					
ANR	146085	Sizeof	sizeof		145472	0					
ANR	146086	SizeofOperand	tos		145472	1					
ANR	146087	IfStatement	"if ( bind ( src_fd , ( struct sockaddr * ) & dst_addr , remote_dst_addr_len ) != 0 )"		145472	41					
ANR	146088	Condition	"bind ( src_fd , ( struct sockaddr * ) & dst_addr , remote_dst_addr_len ) != 0"	809:8:23560:23627	145472	0	True				
ANR	146089	EqualityExpression	"bind ( src_fd , ( struct sockaddr * ) & dst_addr , remote_dst_addr_len ) != 0"		145472	0		!=			
ANR	146090	CallExpression	"bind ( src_fd , ( struct sockaddr * ) & dst_addr , remote_dst_addr_len )"		145472	0					
ANR	146091	Callee	bind		145472	0					
ANR	146092	Identifier	bind		145472	0					
ANR	146093	ArgumentList	src_fd		145472	1					
ANR	146094	Argument	src_fd		145472	0					
ANR	146095	Identifier	src_fd		145472	0					
ANR	146096	Argument	( struct sockaddr * ) & dst_addr		145472	1					
ANR	146097	CastExpression	( struct sockaddr * ) & dst_addr		145472	0					
ANR	146098	CastTarget	struct sockaddr *		145472	0					
ANR	146099	UnaryOperationExpression	& dst_addr		145472	1					
ANR	146100	UnaryOperator	&		145472	0					
ANR	146101	Identifier	dst_addr		145472	1					
ANR	146102	Argument	remote_dst_addr_len		145472	2					
ANR	146103	Identifier	remote_dst_addr_len		145472	0					
ANR	146104	PrimaryExpression	0		145472	1					
ANR	146105	CompoundStatement		140:78:3907:3907	145472	1					
ANR	146106	ExpressionStatement	"ERROR ( ""[udp] remote_recv_bind"" )"	810:8:23640:23671	145472	0	True				
ANR	146107	CallExpression	"ERROR ( ""[udp] remote_recv_bind"" )"		145472	0					
ANR	146108	Callee	ERROR		145472	0					
ANR	146109	Identifier	ERROR		145472	0					
ANR	146110	ArgumentList	"""[udp] remote_recv_bind"""		145472	1					
ANR	146111	Argument	"""[udp] remote_recv_bind"""		145472	0					
ANR	146112	PrimaryExpression	"""[udp] remote_recv_bind"""		145472	0					
ANR	146113	ExpressionStatement	close ( src_fd )	811:8:23681:23694	145472	1	True				
ANR	146114	CallExpression	close ( src_fd )		145472	0					
ANR	146115	Callee	close		145472	0					
ANR	146116	Identifier	close		145472	0					
ANR	146117	ArgumentList	src_fd		145472	1					
ANR	146118	Argument	src_fd		145472	0					
ANR	146119	Identifier	src_fd		145472	0					
ANR	146120	GotoStatement	goto CLEAN_UP ;	812:8:23704:23717	145472	2	True				
ANR	146121	Identifier	CLEAN_UP		145472	0					
ANR	146122	IdentifierDeclStatement	"int s = sendto ( src_fd , buf -> data , buf -> len , 0 , ( struct sockaddr * ) & remote_ctx -> src_addr , remote_src_addr_len ) ;"	815:4:23730:23858	145472	42	True				
ANR	146123	IdentifierDecl	"s = sendto ( src_fd , buf -> data , buf -> len , 0 , ( struct sockaddr * ) & remote_ctx -> src_addr , remote_src_addr_len )"		145472	0					
ANR	146124	IdentifierDeclType	int		145472	0					
ANR	146125	Identifier	s		145472	1					
ANR	146126	AssignmentExpression	"s = sendto ( src_fd , buf -> data , buf -> len , 0 , ( struct sockaddr * ) & remote_ctx -> src_addr , remote_src_addr_len )"		145472	2		=			
ANR	146127	Identifier	s		145472	0					
ANR	146128	CallExpression	"sendto ( src_fd , buf -> data , buf -> len , 0 , ( struct sockaddr * ) & remote_ctx -> src_addr , remote_src_addr_len )"		145472	1					
ANR	146129	Callee	sendto		145472	0					
ANR	146130	Identifier	sendto		145472	0					
ANR	146131	ArgumentList	src_fd		145472	1					
ANR	146132	Argument	src_fd		145472	0					
ANR	146133	Identifier	src_fd		145472	0					
ANR	146134	Argument	buf -> data		145472	1					
ANR	146135	PtrMemberAccess	buf -> data		145472	0					
ANR	146136	Identifier	buf		145472	0					
ANR	146137	Identifier	data		145472	1					
ANR	146138	Argument	buf -> len		145472	2					
ANR	146139	PtrMemberAccess	buf -> len		145472	0					
ANR	146140	Identifier	buf		145472	0					
ANR	146141	Identifier	len		145472	1					
ANR	146142	Argument	0		145472	3					
ANR	146143	PrimaryExpression	0		145472	0					
ANR	146144	Argument	( struct sockaddr * ) & remote_ctx -> src_addr		145472	4					
ANR	146145	CastExpression	( struct sockaddr * ) & remote_ctx -> src_addr		145472	0					
ANR	146146	CastTarget	struct sockaddr *		145472	0					
ANR	146147	UnaryOperationExpression	& remote_ctx -> src_addr		145472	1					
ANR	146148	UnaryOperator	&		145472	0					
ANR	146149	PtrMemberAccess	remote_ctx -> src_addr		145472	1					
ANR	146150	Identifier	remote_ctx		145472	0					
ANR	146151	Identifier	src_addr		145472	1					
ANR	146152	Argument	remote_src_addr_len		145472	5					
ANR	146153	Identifier	remote_src_addr_len		145472	0					
ANR	146154	IfStatement	if ( s == - 1 )		145472	43					
ANR	146155	Condition	s == - 1	817:8:23868:23874	145472	0	True				
ANR	146156	EqualityExpression	s == - 1		145472	0		==			
ANR	146157	Identifier	s		145472	0					
ANR	146158	UnaryOperationExpression	- 1		145472	1					
ANR	146159	UnaryOperator	-		145472	0					
ANR	146160	PrimaryExpression	1		145472	1					
ANR	146161	CompoundStatement		148:17:4154:4154	145472	1					
ANR	146162	ExpressionStatement	"ERROR ( ""[udp] remote_recv_sendto"" )"	818:8:23887:23920	145472	0	True				
ANR	146163	CallExpression	"ERROR ( ""[udp] remote_recv_sendto"" )"		145472	0					
ANR	146164	Callee	ERROR		145472	0					
ANR	146165	Identifier	ERROR		145472	0					
ANR	146166	ArgumentList	"""[udp] remote_recv_sendto"""		145472	1					
ANR	146167	Argument	"""[udp] remote_recv_sendto"""		145472	0					
ANR	146168	PrimaryExpression	"""[udp] remote_recv_sendto"""		145472	0					
ANR	146169	ExpressionStatement	close ( src_fd )	819:8:23930:23943	145472	1	True				
ANR	146170	CallExpression	close ( src_fd )		145472	0					
ANR	146171	Callee	close		145472	0					
ANR	146172	Identifier	close		145472	0					
ANR	146173	ArgumentList	src_fd		145472	1					
ANR	146174	Argument	src_fd		145472	0					
ANR	146175	Identifier	src_fd		145472	0					
ANR	146176	GotoStatement	goto CLEAN_UP ;	820:8:23953:23966	145472	2	True				
ANR	146177	Identifier	CLEAN_UP		145472	0					
ANR	146178	ExpressionStatement	close ( src_fd )	822:4:23978:23991	145472	44	True				
ANR	146179	CallExpression	close ( src_fd )		145472	0					
ANR	146180	Callee	close		145472	0					
ANR	146181	Identifier	close		145472	0					
ANR	146182	ArgumentList	src_fd		145472	1					
ANR	146183	Argument	src_fd		145472	0					
ANR	146184	Identifier	src_fd		145472	0					
ANR	146185	ExpressionStatement	ev_timer_again ( EV_A_ & remote_ctx -> watcher )	837:4:24314:24357	145472	45	True				
ANR	146186	CallExpression	ev_timer_again ( EV_A_ & remote_ctx -> watcher )		145472	0					
ANR	146187	Callee	ev_timer_again		145472	0					
ANR	146188	Identifier	ev_timer_again		145472	0					
ANR	146189	ArgumentList	EV_A_ & remote_ctx -> watcher		145472	1					
ANR	146190	Argument	EV_A_ & remote_ctx -> watcher		145472	0					
ANR	146191	BitAndExpression	EV_A_ & remote_ctx -> watcher		145472	0		&			
ANR	146192	Identifier	EV_A_		145472	0					
ANR	146193	PtrMemberAccess	remote_ctx -> watcher		145472	1					
ANR	146194	Identifier	remote_ctx		145472	0					
ANR	146195	Identifier	watcher		145472	1					
ANR	146196	Label	CLEAN_UP :	839:0:24360:24368	145472	46	True				
ANR	146197	Identifier	CLEAN_UP		145472	0					
ANR	146198	ExpressionStatement	bfree ( buf )	841:4:24375:24385	145472	47	True				
ANR	146199	CallExpression	bfree ( buf )		145472	0					
ANR	146200	Callee	bfree		145472	0					
ANR	146201	Identifier	bfree		145472	0					
ANR	146202	ArgumentList	buf		145472	1					
ANR	146203	Argument	buf		145472	0					
ANR	146204	Identifier	buf		145472	0					
ANR	146205	ExpressionStatement	ss_free ( buf )	842:4:24391:24403	145472	48	True				
ANR	146206	CallExpression	ss_free ( buf )		145472	0					
ANR	146207	Callee	ss_free		145472	0					
ANR	146208	Identifier	ss_free		145472	0					
ANR	146209	ArgumentList	buf		145472	1					
ANR	146210	Argument	buf		145472	0					
ANR	146211	Identifier	buf		145472	0					
ANR	146212	ReturnType	static void		145472	1					
ANR	146213	Identifier	remote_recv_cb		145472	2					
ANR	146214	ParameterList	"EV_P_ ev_io * w , int revents"		145472	3					
ANR	146215	Parameter	EV_P_ ev_io * w	669:15:19693:19706	145472	0	True				
ANR	146216	ParameterType	EV_P_ ev_io *		145472	0					
ANR	146217	Identifier	w		145472	1					
ANR	146218	Parameter	int revents	669:31:19709:19719	145472	1	True				
ANR	146219	ParameterType	int		145472	0					
ANR	146220	Identifier	revents		145472	1					
ANR	146221	CFGEntryNode	ENTRY		145472		True				
ANR	146222	CFGExitNode	EXIT		145472		True				
ANR	146223	Symbol	server_ctx -> crypto -> encrypt_all		145472						
ANR	146224	Symbol	sendto		145472						
ANR	146225	Symbol	server_ctx		145472						
ANR	146226	Symbol	revents		145472						
ANR	146227	Symbol	IP_TOS		145472						
ANR	146228	Symbol	* server_ctx		145472						
ANR	146229	Symbol	src_addr_len		145472						
ANR	146230	Symbol	remote_ctx -> addr_header_len		145472						
ANR	146231	Symbol	remote_ctx -> watcher		145472						
ANR	146232	Symbol	bind		145472						
ANR	146233	Symbol	len		145472						
ANR	146234	Symbol	IP_TRANSPARENT		145472						
ANR	146235	Symbol	dst_addr		145472						
ANR	146236	Symbol	& opt		145472						
ANR	146237	Symbol	server_ctx -> crypto -> cipher		145472						
ANR	146238	Symbol	IPPROTO_IP		145472						
ANR	146239	Symbol	* buf		145472						
ANR	146240	Symbol	NULL		145472						
ANR	146241	Symbol	addr_header_len		145472						
ANR	146242	Symbol	& remote_ctx -> src_addr		145472						
ANR	146243	Symbol	buf_size		145472						
ANR	146244	Symbol	server_ctx -> crypto -> decrypt_all		145472						
ANR	146245	Symbol	recvfrom		145472						
ANR	146246	Symbol	SO_REUSEADDR		145472						
ANR	146247	Symbol	AF_INET		145472						
ANR	146248	Symbol	SOCK_DGRAM		145472						
ANR	146249	Symbol	buf -> data		145472						
ANR	146250	Symbol	* server_ctx -> crypto		145472						
ANR	146251	Symbol	opt		145472						
ANR	146252	Symbol	* remote_ctx		145472						
ANR	146253	Symbol	remote_ctx		145472						
ANR	146254	Symbol	* * server_ctx		145472						
ANR	146255	Symbol	remote_ctx -> fd		145472						
ANR	146256	Symbol	remote_ctx -> src_addr . ss_family		145472						
ANR	146257	Symbol	rx		145472						
ANR	146258	Symbol	SOL_IP		145472						
ANR	146259	Symbol	server_ctx -> crypto		145472						
ANR	146260	Symbol	src_fd		145472						
ANR	146261	Symbol	setsockopt		145472						
ANR	146262	Symbol	remote_src_addr_len		145472						
ANR	146263	Symbol	buf -> len		145472						
ANR	146264	Symbol	& dst_addr		145472						
ANR	146265	Symbol	tos		145472						
ANR	146266	Symbol	& src_addr		145472						
ANR	146267	Symbol	err		145472						
ANR	146268	Symbol	get_sockaddr_len		145472						
ANR	146269	Symbol	addr_header		145472						
ANR	146270	Symbol	remote_ctx -> addr_header		145472						
ANR	146271	Symbol	remote_dst_addr_len		145472						
ANR	146272	Symbol	src_addr		145472						
ANR	146273	Symbol	& src_addr_len		145472						
ANR	146274	Symbol	parse_udprelay_header		145472						
ANR	146275	Symbol	AF_INET6		145472						
ANR	146276	Symbol	remote_ctx -> server_ctx		145472						
ANR	146277	Symbol	verbose		145472						
ANR	146278	Symbol	SOL_SOCKET		145472						
ANR	146279	Symbol	remote_ctx -> src_addr		145472						
ANR	146280	Symbol	r		145472						
ANR	146281	Symbol	buf		145472						
ANR	146282	Symbol	s		145472						
ANR	146283	Symbol	packet_size		145472						
ANR	146284	Symbol	w		145472						
ANR	146285	Symbol	dst_addr . ss_family		145472						
ANR	146286	Symbol	EV_A_		145472						
ANR	146287	Symbol	ss_malloc		145472						
ANR	146288	Symbol	& tos		145472						
ANR	146289	Symbol	socket		145472						
ANR	146290	Function	server_recv_cb	845:0:24408:39304							
ANR	146291	FunctionDef	"server_recv_cb (EV_P_ ev_io * w , int revents)"		146290	0					
ANR	146292	CompoundStatement		847:0:24464:39304	146290	0					
ANR	146293	IdentifierDeclStatement	server_ctx_t * server_ctx = ( server_ctx_t * ) w ;	848:4:24470:24514	146290	0	True				
ANR	146294	IdentifierDecl	* server_ctx = ( server_ctx_t * ) w		146290	0					
ANR	146295	IdentifierDeclType	server_ctx_t *		146290	0					
ANR	146296	Identifier	server_ctx		146290	1					
ANR	146297	AssignmentExpression	* server_ctx = ( server_ctx_t * ) w		146290	2		=			
ANR	146298	Identifier	server_ctx		146290	0					
ANR	146299	CastExpression	( server_ctx_t * ) w		146290	1					
ANR	146300	CastTarget	server_ctx_t *		146290	0					
ANR	146301	Identifier	w		146290	1					
ANR	146302	IdentifierDeclStatement	struct sockaddr_storage src_addr ;	849:4:24520:24552	146290	1	True				
ANR	146303	IdentifierDecl	src_addr		146290	0					
ANR	146304	IdentifierDeclType	struct sockaddr_storage		146290	0					
ANR	146305	Identifier	src_addr		146290	1					
ANR	146306	ExpressionStatement	"memset ( & src_addr , 0 , sizeof ( struct sockaddr_storage ) )"	850:4:24558:24611	146290	2	True				
ANR	146307	CallExpression	"memset ( & src_addr , 0 , sizeof ( struct sockaddr_storage ) )"		146290	0					
ANR	146308	Callee	memset		146290	0					
ANR	146309	Identifier	memset		146290	0					
ANR	146310	ArgumentList	& src_addr		146290	1					
ANR	146311	Argument	& src_addr		146290	0					
ANR	146312	UnaryOperationExpression	& src_addr		146290	0					
ANR	146313	UnaryOperator	&		146290	0					
ANR	146314	Identifier	src_addr		146290	1					
ANR	146315	Argument	0		146290	1					
ANR	146316	PrimaryExpression	0		146290	0					
ANR	146317	Argument	sizeof ( struct sockaddr_storage )		146290	2					
ANR	146318	SizeofExpression	sizeof ( struct sockaddr_storage )		146290	0					
ANR	146319	Sizeof	sizeof		146290	0					
ANR	146320	SizeofOperand	struct sockaddr_storage		146290	1					
ANR	146321	IdentifierDeclStatement	buffer_t * buf = ss_malloc ( sizeof ( buffer_t ) ) ;	852:4:24618:24661	146290	3	True				
ANR	146322	IdentifierDecl	* buf = ss_malloc ( sizeof ( buffer_t ) )		146290	0					
ANR	146323	IdentifierDeclType	buffer_t *		146290	0					
ANR	146324	Identifier	buf		146290	1					
ANR	146325	AssignmentExpression	* buf = ss_malloc ( sizeof ( buffer_t ) )		146290	2		=			
ANR	146326	Identifier	buf		146290	0					
ANR	146327	CallExpression	ss_malloc ( sizeof ( buffer_t ) )		146290	1					
ANR	146328	Callee	ss_malloc		146290	0					
ANR	146329	Identifier	ss_malloc		146290	0					
ANR	146330	ArgumentList	sizeof ( buffer_t )		146290	1					
ANR	146331	Argument	sizeof ( buffer_t )		146290	0					
ANR	146332	SizeofExpression	sizeof ( buffer_t )		146290	0					
ANR	146333	Sizeof	sizeof		146290	0					
ANR	146334	SizeofOperand	buffer_t		146290	1					
ANR	146335	ExpressionStatement	"balloc ( buf , buf_size )"	853:4:24667:24688	146290	4	True				
ANR	146336	CallExpression	"balloc ( buf , buf_size )"		146290	0					
ANR	146337	Callee	balloc		146290	0					
ANR	146338	Identifier	balloc		146290	0					
ANR	146339	ArgumentList	buf		146290	1					
ANR	146340	Argument	buf		146290	0					
ANR	146341	Identifier	buf		146290	0					
ANR	146342	Argument	buf_size		146290	1					
ANR	146343	Identifier	buf_size		146290	0					
ANR	146344	IdentifierDeclStatement	socklen_t src_addr_len = sizeof ( struct sockaddr_storage ) ;	855:4:24695:24751	146290	5	True				
ANR	146345	IdentifierDecl	src_addr_len = sizeof ( struct sockaddr_storage )		146290	0					
ANR	146346	IdentifierDeclType	socklen_t		146290	0					
ANR	146347	Identifier	src_addr_len		146290	1					
ANR	146348	AssignmentExpression	src_addr_len = sizeof ( struct sockaddr_storage )		146290	2		=			
ANR	146349	Identifier	src_addr_len		146290	0					
ANR	146350	SizeofExpression	sizeof ( struct sockaddr_storage )		146290	1					
ANR	146351	Sizeof	sizeof		146290	0					
ANR	146352	SizeofOperand	struct sockaddr_storage		146290	1					
ANR	146353	IdentifierDeclStatement	unsigned int offset = 0 ;	856:4:24757:24783	146290	6	True				
ANR	146354	IdentifierDecl	offset = 0		146290	0					
ANR	146355	IdentifierDeclType	unsigned int		146290	0					
ANR	146356	Identifier	offset		146290	1					
ANR	146357	AssignmentExpression	offset = 0		146290	2		=			
ANR	146358	Identifier	offset		146290	0					
ANR	146359	PrimaryExpression	0		146290	1					
ANR	146360	IdentifierDeclStatement	char control_buffer [ 64 ] = { 0 } ;	859:4:24810:24841	146290	7	True				
ANR	146361	IdentifierDecl	control_buffer [ 64 ] = { 0 }		146290	0					
ANR	146362	IdentifierDeclType	char [ 64 ]		146290	0					
ANR	146363	Identifier	control_buffer		146290	1					
ANR	146364	PrimaryExpression	64		146290	2					
ANR	146365	AssignmentExpression	control_buffer [ 64 ] = { 0 }		146290	3		=			
ANR	146366	Identifier	control_buffer		146290	0					
ANR	146367	InitializerList	0		146290	1					
ANR	146368	PrimaryExpression	0		146290	0					
ANR	146369	IdentifierDeclStatement	struct msghdr msg ;	860:4:24847:24864	146290	8	True				
ANR	146370	IdentifierDecl	msg		146290	0					
ANR	146371	IdentifierDeclType	struct msghdr		146290	0					
ANR	146372	Identifier	msg		146290	1					
ANR	146373	ExpressionStatement	"memset ( & msg , 0 , sizeof ( struct msghdr ) )"	861:4:24870:24908	146290	9	True				
ANR	146374	CallExpression	"memset ( & msg , 0 , sizeof ( struct msghdr ) )"		146290	0					
ANR	146375	Callee	memset		146290	0					
ANR	146376	Identifier	memset		146290	0					
ANR	146377	ArgumentList	& msg		146290	1					
ANR	146378	Argument	& msg		146290	0					
ANR	146379	UnaryOperationExpression	& msg		146290	0					
ANR	146380	UnaryOperator	&		146290	0					
ANR	146381	Identifier	msg		146290	1					
ANR	146382	Argument	0		146290	1					
ANR	146383	PrimaryExpression	0		146290	0					
ANR	146384	Argument	sizeof ( struct msghdr )		146290	2					
ANR	146385	SizeofExpression	sizeof ( struct msghdr )		146290	0					
ANR	146386	Sizeof	sizeof		146290	0					
ANR	146387	SizeofOperand	struct msghdr		146290	1					
ANR	146388	IdentifierDeclStatement	struct iovec iov [ 1 ] ;	862:4:24914:24933	146290	10	True				
ANR	146389	IdentifierDecl	iov [ 1 ]		146290	0					
ANR	146390	IdentifierDeclType	struct iovec [ 1 ]		146290	0					
ANR	146391	Identifier	iov		146290	1					
ANR	146392	PrimaryExpression	1		146290	2					
ANR	146393	IdentifierDeclStatement	struct sockaddr_storage dst_addr ;	863:4:24939:24971	146290	11	True				
ANR	146394	IdentifierDecl	dst_addr		146290	0					
ANR	146395	IdentifierDeclType	struct sockaddr_storage		146290	0					
ANR	146396	Identifier	dst_addr		146290	1					
ANR	146397	ExpressionStatement	"memset ( & dst_addr , 0 , sizeof ( struct sockaddr_storage ) )"	864:4:24977:25030	146290	12	True				
ANR	146398	CallExpression	"memset ( & dst_addr , 0 , sizeof ( struct sockaddr_storage ) )"		146290	0					
ANR	146399	Callee	memset		146290	0					
ANR	146400	Identifier	memset		146290	0					
ANR	146401	ArgumentList	& dst_addr		146290	1					
ANR	146402	Argument	& dst_addr		146290	0					
ANR	146403	UnaryOperationExpression	& dst_addr		146290	0					
ANR	146404	UnaryOperator	&		146290	0					
ANR	146405	Identifier	dst_addr		146290	1					
ANR	146406	Argument	0		146290	1					
ANR	146407	PrimaryExpression	0		146290	0					
ANR	146408	Argument	sizeof ( struct sockaddr_storage )		146290	2					
ANR	146409	SizeofExpression	sizeof ( struct sockaddr_storage )		146290	0					
ANR	146410	Sizeof	sizeof		146290	0					
ANR	146411	SizeofOperand	struct sockaddr_storage		146290	1					
ANR	146412	ExpressionStatement	msg . msg_name = & src_addr	866:4:25037:25067	146290	13	True				
ANR	146413	AssignmentExpression	msg . msg_name = & src_addr		146290	0		=			
ANR	146414	MemberAccess	msg . msg_name		146290	0					
ANR	146415	Identifier	msg		146290	0					
ANR	146416	Identifier	msg_name		146290	1					
ANR	146417	UnaryOperationExpression	& src_addr		146290	1					
ANR	146418	UnaryOperator	&		146290	0					
ANR	146419	Identifier	src_addr		146290	1					
ANR	146420	ExpressionStatement	msg . msg_namelen = src_addr_len	867:4:25073:25106	146290	14	True				
ANR	146421	AssignmentExpression	msg . msg_namelen = src_addr_len		146290	0		=			
ANR	146422	MemberAccess	msg . msg_namelen		146290	0					
ANR	146423	Identifier	msg		146290	0					
ANR	146424	Identifier	msg_namelen		146290	1					
ANR	146425	Identifier	src_addr_len		146290	1					
ANR	146426	ExpressionStatement	msg . msg_control = control_buffer	868:4:25112:25147	146290	15	True				
ANR	146427	AssignmentExpression	msg . msg_control = control_buffer		146290	0		=			
ANR	146428	MemberAccess	msg . msg_control		146290	0					
ANR	146429	Identifier	msg		146290	0					
ANR	146430	Identifier	msg_control		146290	1					
ANR	146431	Identifier	control_buffer		146290	1					
ANR	146432	ExpressionStatement	msg . msg_controllen = sizeof ( control_buffer )	869:4:25153:25196	146290	16	True				
ANR	146433	AssignmentExpression	msg . msg_controllen = sizeof ( control_buffer )		146290	0		=			
ANR	146434	MemberAccess	msg . msg_controllen		146290	0					
ANR	146435	Identifier	msg		146290	0					
ANR	146436	Identifier	msg_controllen		146290	1					
ANR	146437	SizeofExpression	sizeof ( control_buffer )		146290	1					
ANR	146438	Sizeof	sizeof		146290	0					
ANR	146439	SizeofOperand	control_buffer		146290	1					
ANR	146440	ExpressionStatement	iov [ 0 ] . iov_base = buf -> data	871:4:25203:25230	146290	17	True				
ANR	146441	AssignmentExpression	iov [ 0 ] . iov_base = buf -> data		146290	0		=			
ANR	146442	MemberAccess	iov [ 0 ] . iov_base		146290	0					
ANR	146443	ArrayIndexing	iov [ 0 ]		146290	0					
ANR	146444	Identifier	iov		146290	0					
ANR	146445	PrimaryExpression	0		146290	1					
ANR	146446	Identifier	iov_base		146290	1					
ANR	146447	PtrMemberAccess	buf -> data		146290	1					
ANR	146448	Identifier	buf		146290	0					
ANR	146449	Identifier	data		146290	1					
ANR	146450	ExpressionStatement	iov [ 0 ] . iov_len = buf_size	872:4:25236:25262	146290	18	True				
ANR	146451	AssignmentExpression	iov [ 0 ] . iov_len = buf_size		146290	0		=			
ANR	146452	MemberAccess	iov [ 0 ] . iov_len		146290	0					
ANR	146453	ArrayIndexing	iov [ 0 ]		146290	0					
ANR	146454	Identifier	iov		146290	0					
ANR	146455	PrimaryExpression	0		146290	1					
ANR	146456	Identifier	iov_len		146290	1					
ANR	146457	Identifier	buf_size		146290	1					
ANR	146458	ExpressionStatement	msg . msg_iov = iov	873:4:25268:25289	146290	19	True				
ANR	146459	AssignmentExpression	msg . msg_iov = iov		146290	0		=			
ANR	146460	MemberAccess	msg . msg_iov		146290	0					
ANR	146461	Identifier	msg		146290	0					
ANR	146462	Identifier	msg_iov		146290	1					
ANR	146463	Identifier	iov		146290	1					
ANR	146464	ExpressionStatement	msg . msg_iovlen = 1	874:4:25295:25314	146290	20	True				
ANR	146465	AssignmentExpression	msg . msg_iovlen = 1		146290	0		=			
ANR	146466	MemberAccess	msg . msg_iovlen		146290	0					
ANR	146467	Identifier	msg		146290	0					
ANR	146468	Identifier	msg_iovlen		146290	1					
ANR	146469	PrimaryExpression	1		146290	1					
ANR	146470	ExpressionStatement	"buf -> len = recvmsg ( server_ctx -> fd , & msg , 0 )"	876:4:25321:25364	146290	21	True				
ANR	146471	AssignmentExpression	"buf -> len = recvmsg ( server_ctx -> fd , & msg , 0 )"		146290	0		=			
ANR	146472	PtrMemberAccess	buf -> len		146290	0					
ANR	146473	Identifier	buf		146290	0					
ANR	146474	Identifier	len		146290	1					
ANR	146475	CallExpression	"recvmsg ( server_ctx -> fd , & msg , 0 )"		146290	1					
ANR	146476	Callee	recvmsg		146290	0					
ANR	146477	Identifier	recvmsg		146290	0					
ANR	146478	ArgumentList	server_ctx -> fd		146290	1					
ANR	146479	Argument	server_ctx -> fd		146290	0					
ANR	146480	PtrMemberAccess	server_ctx -> fd		146290	0					
ANR	146481	Identifier	server_ctx		146290	0					
ANR	146482	Identifier	fd		146290	1					
ANR	146483	Argument	& msg		146290	1					
ANR	146484	UnaryOperationExpression	& msg		146290	0					
ANR	146485	UnaryOperator	&		146290	0					
ANR	146486	Identifier	msg		146290	1					
ANR	146487	Argument	0		146290	2					
ANR	146488	PrimaryExpression	0		146290	0					
ANR	146489	IfStatement	if ( buf -> len == - 1 )		146290	22					
ANR	146490	Condition	buf -> len == - 1	877:8:25374:25387	146290	0	True				
ANR	146491	EqualityExpression	buf -> len == - 1		146290	0		==			
ANR	146492	PtrMemberAccess	buf -> len		146290	0					
ANR	146493	Identifier	buf		146290	0					
ANR	146494	Identifier	len		146290	1					
ANR	146495	UnaryOperationExpression	- 1		146290	1					
ANR	146496	UnaryOperator	-		146290	0					
ANR	146497	PrimaryExpression	1		146290	1					
ANR	146498	CompoundStatement		31:24:925:925	146290	1					
ANR	146499	ExpressionStatement	"ERROR ( ""[udp] server_recvmsg"" )"	878:8:25400:25429	146290	0	True				
ANR	146500	CallExpression	"ERROR ( ""[udp] server_recvmsg"" )"		146290	0					
ANR	146501	Callee	ERROR		146290	0					
ANR	146502	Identifier	ERROR		146290	0					
ANR	146503	ArgumentList	"""[udp] server_recvmsg"""		146290	1					
ANR	146504	Argument	"""[udp] server_recvmsg"""		146290	0					
ANR	146505	PrimaryExpression	"""[udp] server_recvmsg"""		146290	0					
ANR	146506	GotoStatement	goto CLEAN_UP ;	879:8:25439:25452	146290	1	True				
ANR	146507	Identifier	CLEAN_UP		146290	0					
ANR	146508	ElseStatement	else		146290	0					
ANR	146509	IfStatement	if ( buf -> len > packet_size )		146290	0					
ANR	146510	Condition	buf -> len > packet_size	880:15:25469:25490	146290	0	True				
ANR	146511	RelationalExpression	buf -> len > packet_size		146290	0		>			
ANR	146512	PtrMemberAccess	buf -> len		146290	0					
ANR	146513	Identifier	buf		146290	0					
ANR	146514	Identifier	len		146290	1					
ANR	146515	Identifier	packet_size		146290	1					
ANR	146516	CompoundStatement		34:39:1028:1028	146290	1					
ANR	146517	IfStatement	if ( verbose )		146290	0					
ANR	146518	Condition	verbose	881:12:25507:25513	146290	0	True				
ANR	146519	Identifier	verbose		146290	0					
ANR	146520	CompoundStatement		35:21:1051:1051	146290	1					
ANR	146521	ExpressionStatement	"LOGI ( ""[udp] UDP server_recv_recvmsg fragmentation"" )"	882:12:25530:25581	146290	0	True				
ANR	146522	CallExpression	"LOGI ( ""[udp] UDP server_recv_recvmsg fragmentation"" )"		146290	0					
ANR	146523	Callee	LOGI		146290	0					
ANR	146524	Identifier	LOGI		146290	0					
ANR	146525	ArgumentList	"""[udp] UDP server_recv_recvmsg fragmentation"""		146290	1					
ANR	146526	Argument	"""[udp] UDP server_recv_recvmsg fragmentation"""		146290	0					
ANR	146527	PrimaryExpression	"""[udp] UDP server_recv_recvmsg fragmentation"""		146290	0					
ANR	146528	IfStatement	"if ( get_dstaddr ( & msg , & dst_addr ) )"		146290	23					
ANR	146529	Condition	"get_dstaddr ( & msg , & dst_addr )"	886:8:25608:25635	146290	0	True				
ANR	146530	CallExpression	"get_dstaddr ( & msg , & dst_addr )"		146290	0					
ANR	146531	Callee	get_dstaddr		146290	0					
ANR	146532	Identifier	get_dstaddr		146290	0					
ANR	146533	ArgumentList	& msg		146290	1					
ANR	146534	Argument	& msg		146290	0					
ANR	146535	UnaryOperationExpression	& msg		146290	0					
ANR	146536	UnaryOperator	&		146290	0					
ANR	146537	Identifier	msg		146290	1					
ANR	146538	Argument	& dst_addr		146290	1					
ANR	146539	UnaryOperationExpression	& dst_addr		146290	0					
ANR	146540	UnaryOperator	&		146290	0					
ANR	146541	Identifier	dst_addr		146290	1					
ANR	146542	CompoundStatement		40:38:1173:1173	146290	1					
ANR	146543	ExpressionStatement	"LOGE ( ""[udp] unable to get dest addr"" )"	887:8:25648:25685	146290	0	True				
ANR	146544	CallExpression	"LOGE ( ""[udp] unable to get dest addr"" )"		146290	0					
ANR	146545	Callee	LOGE		146290	0					
ANR	146546	Identifier	LOGE		146290	0					
ANR	146547	ArgumentList	"""[udp] unable to get dest addr"""		146290	1					
ANR	146548	Argument	"""[udp] unable to get dest addr"""		146290	0					
ANR	146549	PrimaryExpression	"""[udp] unable to get dest addr"""		146290	0					
ANR	146550	GotoStatement	goto CLEAN_UP ;	888:8:25695:25708	146290	1	True				
ANR	146551	Identifier	CLEAN_UP		146290	0					
ANR	146552	ExpressionStatement	src_addr_len = msg . msg_namelen	891:4:25721:25751	146290	24	True				
ANR	146553	AssignmentExpression	src_addr_len = msg . msg_namelen		146290	0		=			
ANR	146554	Identifier	src_addr_len		146290	0					
ANR	146555	MemberAccess	msg . msg_namelen		146290	1					
ANR	146556	Identifier	msg		146290	0					
ANR	146557	Identifier	msg_namelen		146290	1					
ANR	146558	IfStatement	if ( verbose )		146290	25					
ANR	146559	Condition	verbose	911:8:26212:26218	146290	0	True				
ANR	146560	Identifier	verbose		146290	0					
ANR	146561	CompoundStatement		65:17:1756:1756	146290	1					
ANR	146562	ExpressionStatement	"LOGI ( ""[udp] server receive a packet"" )"	912:8:26231:26268	146290	0	True				
ANR	146563	CallExpression	"LOGI ( ""[udp] server receive a packet"" )"		146290	0					
ANR	146564	Callee	LOGI		146290	0					
ANR	146565	Identifier	LOGI		146290	0					
ANR	146566	ArgumentList	"""[udp] server receive a packet"""		146290	1					
ANR	146567	Argument	"""[udp] server receive a packet"""		146290	0					
ANR	146568	PrimaryExpression	"""[udp] server receive a packet"""		146290	0					
ANR	146569	ExpressionStatement	tx += buf -> len	916:4:26302:26316	146290	26	True				
ANR	146570	AssignmentExpression	tx += buf -> len		146290	0		+=			
ANR	146571	Identifier	tx		146290	0					
ANR	146572	PtrMemberAccess	buf -> len		146290	1					
ANR	146573	Identifier	buf		146290	0					
ANR	146574	Identifier	len		146290	1					
ANR	146575	IdentifierDeclStatement	"int err = server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size ) ;"	918:4:26323:26407	146290	27	True				
ANR	146576	IdentifierDecl	"err = server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		146290	0					
ANR	146577	IdentifierDeclType	int		146290	0					
ANR	146578	Identifier	err		146290	1					
ANR	146579	AssignmentExpression	"err = server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		146290	2		=			
ANR	146580	Identifier	err		146290	0					
ANR	146581	CallExpression	"server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		146290	1					
ANR	146582	Callee	server_ctx -> crypto -> decrypt_all		146290	0					
ANR	146583	PtrMemberAccess	server_ctx -> crypto -> decrypt_all		146290	0					
ANR	146584	PtrMemberAccess	server_ctx -> crypto		146290	0					
ANR	146585	Identifier	server_ctx		146290	0					
ANR	146586	Identifier	crypto		146290	1					
ANR	146587	Identifier	decrypt_all		146290	1					
ANR	146588	ArgumentList	buf		146290	1					
ANR	146589	Argument	buf		146290	0					
ANR	146590	Identifier	buf		146290	0					
ANR	146591	Argument	server_ctx -> crypto -> cipher		146290	1					
ANR	146592	PtrMemberAccess	server_ctx -> crypto -> cipher		146290	0					
ANR	146593	PtrMemberAccess	server_ctx -> crypto		146290	0					
ANR	146594	Identifier	server_ctx		146290	0					
ANR	146595	Identifier	crypto		146290	1					
ANR	146596	Identifier	cipher		146290	1					
ANR	146597	Argument	buf_size		146290	2					
ANR	146598	Identifier	buf_size		146290	0					
ANR	146599	IfStatement	if ( err )		146290	28					
ANR	146600	Condition	err	919:8:26417:26419	146290	0	True				
ANR	146601	Identifier	err		146290	0					
ANR	146602	CompoundStatement		73:13:1957:1957	146290	1					
ANR	146603	GotoStatement	goto CLEAN_UP ;	921:8:26468:26481	146290	0	True				
ANR	146604	Identifier	CLEAN_UP		146290	0					
ANR	146605	ExpressionStatement	tx += buf -> len	928:4:26594:26608	146290	29	True				
ANR	146606	AssignmentExpression	tx += buf -> len		146290	0		+=			
ANR	146607	Identifier	tx		146290	0					
ANR	146608	PtrMemberAccess	buf -> len		146290	1					
ANR	146609	Identifier	buf		146290	0					
ANR	146610	Identifier	len		146290	1					
ANR	146611	IdentifierDeclStatement	uint8_t frag = * ( uint8_t * ) ( buf -> data + 2 ) ;	930:4:26621:26663	146290	30	True				
ANR	146612	IdentifierDecl	frag = * ( uint8_t * ) ( buf -> data + 2 )		146290	0					
ANR	146613	IdentifierDeclType	uint8_t		146290	0					
ANR	146614	Identifier	frag		146290	1					
ANR	146615	AssignmentExpression	frag = * ( uint8_t * ) ( buf -> data + 2 )		146290	2		=			
ANR	146616	Identifier	frag		146290	0					
ANR	146617	UnaryOperationExpression	* ( uint8_t * ) ( buf -> data + 2 )		146290	1					
ANR	146618	UnaryOperator	*		146290	0					
ANR	146619	CastExpression	( uint8_t * ) ( buf -> data + 2 )		146290	1					
ANR	146620	CastTarget	uint8_t *		146290	0					
ANR	146621	AdditiveExpression	buf -> data + 2		146290	1		+			
ANR	146622	PtrMemberAccess	buf -> data		146290	0					
ANR	146623	Identifier	buf		146290	0					
ANR	146624	Identifier	data		146290	1					
ANR	146625	PrimaryExpression	2		146290	1					
ANR	146626	ExpressionStatement	offset += 3	931:4:26669:26680	146290	31	True				
ANR	146627	AssignmentExpression	offset += 3		146290	0		+=			
ANR	146628	Identifier	offset		146290	0					
ANR	146629	PrimaryExpression	3		146290	1					
ANR	146630	IdentifierDeclStatement	char addr_header [ 512 ] = { 0 } ;	975:4:28255:28284	146290	32	True				
ANR	146631	IdentifierDecl	addr_header [ 512 ] = { 0 }		146290	0					
ANR	146632	IdentifierDeclType	char [ 512 ]		146290	0					
ANR	146633	Identifier	addr_header		146290	1					
ANR	146634	PrimaryExpression	512		146290	2					
ANR	146635	AssignmentExpression	addr_header [ 512 ] = { 0 }		146290	3		=			
ANR	146636	Identifier	addr_header		146290	0					
ANR	146637	InitializerList	0		146290	1					
ANR	146638	PrimaryExpression	0		146290	0					
ANR	146639	IdentifierDeclStatement	"int addr_header_len = construct_udprelay_header ( & dst_addr , addr_header ) ;"	976:4:28290:28363	146290	33	True				
ANR	146640	IdentifierDecl	"addr_header_len = construct_udprelay_header ( & dst_addr , addr_header )"		146290	0					
ANR	146641	IdentifierDeclType	int		146290	0					
ANR	146642	Identifier	addr_header_len		146290	1					
ANR	146643	AssignmentExpression	"addr_header_len = construct_udprelay_header ( & dst_addr , addr_header )"		146290	2		=			
ANR	146644	Identifier	addr_header_len		146290	0					
ANR	146645	CallExpression	"construct_udprelay_header ( & dst_addr , addr_header )"		146290	1					
ANR	146646	Callee	construct_udprelay_header		146290	0					
ANR	146647	Identifier	construct_udprelay_header		146290	0					
ANR	146648	ArgumentList	& dst_addr		146290	1					
ANR	146649	Argument	& dst_addr		146290	0					
ANR	146650	UnaryOperationExpression	& dst_addr		146290	0					
ANR	146651	UnaryOperator	&		146290	0					
ANR	146652	Identifier	dst_addr		146290	1					
ANR	146653	Argument	addr_header		146290	1					
ANR	146654	Identifier	addr_header		146290	0					
ANR	146655	IfStatement	if ( addr_header_len == 0 )		146290	34					
ANR	146656	Condition	addr_header_len == 0	978:8:28374:28393	146290	0	True				
ANR	146657	EqualityExpression	addr_header_len == 0		146290	0		==			
ANR	146658	Identifier	addr_header_len		146290	0					
ANR	146659	PrimaryExpression	0		146290	1					
ANR	146660	CompoundStatement		132:30:3931:3931	146290	1					
ANR	146661	ExpressionStatement	"LOGE ( ""[udp] failed to parse tproxy addr"" )"	979:8:28406:28447	146290	0	True				
ANR	146662	CallExpression	"LOGE ( ""[udp] failed to parse tproxy addr"" )"		146290	0					
ANR	146663	Callee	LOGE		146290	0					
ANR	146664	Identifier	LOGE		146290	0					
ANR	146665	ArgumentList	"""[udp] failed to parse tproxy addr"""		146290	1					
ANR	146666	Argument	"""[udp] failed to parse tproxy addr"""		146290	0					
ANR	146667	PrimaryExpression	"""[udp] failed to parse tproxy addr"""		146290	0					
ANR	146668	GotoStatement	goto CLEAN_UP ;	980:8:28457:28470	146290	1	True				
ANR	146669	Identifier	CLEAN_UP		146290	0					
ANR	146670	ExpressionStatement	"brealloc ( buf , buf -> len + addr_header_len , buf_size )"	984:4:28513:28564	146290	35	True				
ANR	146671	CallExpression	"brealloc ( buf , buf -> len + addr_header_len , buf_size )"		146290	0					
ANR	146672	Callee	brealloc		146290	0					
ANR	146673	Identifier	brealloc		146290	0					
ANR	146674	ArgumentList	buf		146290	1					
ANR	146675	Argument	buf		146290	0					
ANR	146676	Identifier	buf		146290	0					
ANR	146677	Argument	buf -> len + addr_header_len		146290	1					
ANR	146678	AdditiveExpression	buf -> len + addr_header_len		146290	0		+			
ANR	146679	PtrMemberAccess	buf -> len		146290	0					
ANR	146680	Identifier	buf		146290	0					
ANR	146681	Identifier	len		146290	1					
ANR	146682	Identifier	addr_header_len		146290	1					
ANR	146683	Argument	buf_size		146290	2					
ANR	146684	Identifier	buf_size		146290	0					
ANR	146685	ExpressionStatement	"memmove ( buf -> data + addr_header_len , buf -> data , buf -> len )"	985:4:28570:28627	146290	36	True				
ANR	146686	CallExpression	"memmove ( buf -> data + addr_header_len , buf -> data , buf -> len )"		146290	0					
ANR	146687	Callee	memmove		146290	0					
ANR	146688	Identifier	memmove		146290	0					
ANR	146689	ArgumentList	buf -> data + addr_header_len		146290	1					
ANR	146690	Argument	buf -> data + addr_header_len		146290	0					
ANR	146691	AdditiveExpression	buf -> data + addr_header_len		146290	0		+			
ANR	146692	PtrMemberAccess	buf -> data		146290	0					
ANR	146693	Identifier	buf		146290	0					
ANR	146694	Identifier	data		146290	1					
ANR	146695	Identifier	addr_header_len		146290	1					
ANR	146696	Argument	buf -> data		146290	1					
ANR	146697	PtrMemberAccess	buf -> data		146290	0					
ANR	146698	Identifier	buf		146290	0					
ANR	146699	Identifier	data		146290	1					
ANR	146700	Argument	buf -> len		146290	2					
ANR	146701	PtrMemberAccess	buf -> len		146290	0					
ANR	146702	Identifier	buf		146290	0					
ANR	146703	Identifier	len		146290	1					
ANR	146704	ExpressionStatement	"memcpy ( buf -> data , addr_header , addr_header_len )"	986:4:28633:28680	146290	37	True				
ANR	146705	CallExpression	"memcpy ( buf -> data , addr_header , addr_header_len )"		146290	0					
ANR	146706	Callee	memcpy		146290	0					
ANR	146707	Identifier	memcpy		146290	0					
ANR	146708	ArgumentList	buf -> data		146290	1					
ANR	146709	Argument	buf -> data		146290	0					
ANR	146710	PtrMemberAccess	buf -> data		146290	0					
ANR	146711	Identifier	buf		146290	0					
ANR	146712	Identifier	data		146290	1					
ANR	146713	Argument	addr_header		146290	1					
ANR	146714	Identifier	addr_header		146290	0					
ANR	146715	Argument	addr_header_len		146290	2					
ANR	146716	Identifier	addr_header_len		146290	0					
ANR	146717	ExpressionStatement	buf -> len += addr_header_len	987:4:28686:28713	146290	38	True				
ANR	146718	AssignmentExpression	buf -> len += addr_header_len		146290	0		+=			
ANR	146719	PtrMemberAccess	buf -> len		146290	0					
ANR	146720	Identifier	buf		146290	0					
ANR	146721	Identifier	len		146290	1					
ANR	146722	Identifier	addr_header_len		146290	1					
ANR	146723	IdentifierDeclStatement	"char * key = hash_key ( server_ctx -> remote_addr -> sa_family , & src_addr ) ;"	1063:4:31225:31292	146290	39	True				
ANR	146724	IdentifierDecl	"* key = hash_key ( server_ctx -> remote_addr -> sa_family , & src_addr )"		146290	0					
ANR	146725	IdentifierDeclType	char *		146290	0					
ANR	146726	Identifier	key		146290	1					
ANR	146727	AssignmentExpression	"* key = hash_key ( server_ctx -> remote_addr -> sa_family , & src_addr )"		146290	2		=			
ANR	146728	Identifier	key		146290	0					
ANR	146729	CallExpression	"hash_key ( server_ctx -> remote_addr -> sa_family , & src_addr )"		146290	1					
ANR	146730	Callee	hash_key		146290	0					
ANR	146731	Identifier	hash_key		146290	0					
ANR	146732	ArgumentList	server_ctx -> remote_addr -> sa_family		146290	1					
ANR	146733	Argument	server_ctx -> remote_addr -> sa_family		146290	0					
ANR	146734	PtrMemberAccess	server_ctx -> remote_addr -> sa_family		146290	0					
ANR	146735	PtrMemberAccess	server_ctx -> remote_addr		146290	0					
ANR	146736	Identifier	server_ctx		146290	0					
ANR	146737	Identifier	remote_addr		146290	1					
ANR	146738	Identifier	sa_family		146290	1					
ANR	146739	Argument	& src_addr		146290	1					
ANR	146740	UnaryOperationExpression	& src_addr		146290	0					
ANR	146741	UnaryOperator	&		146290	0					
ANR	146742	Identifier	src_addr		146290	1					
ANR	146743	IdentifierDeclStatement	struct cache * conn_cache = server_ctx -> conn_cache ;	1068:4:31369:31418	146290	40	True				
ANR	146744	IdentifierDecl	* conn_cache = server_ctx -> conn_cache		146290	0					
ANR	146745	IdentifierDeclType	struct cache *		146290	0					
ANR	146746	Identifier	conn_cache		146290	1					
ANR	146747	AssignmentExpression	* conn_cache = server_ctx -> conn_cache		146290	2		=			
ANR	146748	Identifier	conn_cache		146290	0					
ANR	146749	PtrMemberAccess	server_ctx -> conn_cache		146290	1					
ANR	146750	Identifier	server_ctx		146290	0					
ANR	146751	Identifier	conn_cache		146290	1					
ANR	146752	IdentifierDeclStatement	remote_ctx_t * remote_ctx = NULL ;	1070:4:31425:31456	146290	41	True				
ANR	146753	IdentifierDecl	* remote_ctx = NULL		146290	0					
ANR	146754	IdentifierDeclType	remote_ctx_t *		146290	0					
ANR	146755	Identifier	remote_ctx		146290	1					
ANR	146756	AssignmentExpression	* remote_ctx = NULL		146290	2		=			
ANR	146757	Identifier	NULL		146290	0					
ANR	146758	Identifier	NULL		146290	1					
ANR	146759	ExpressionStatement	"cache_lookup ( conn_cache , key , HASH_KEY_LEN , ( void * ) & remote_ctx )"	1071:4:31462:31526	146290	42	True				
ANR	146760	CallExpression	"cache_lookup ( conn_cache , key , HASH_KEY_LEN , ( void * ) & remote_ctx )"		146290	0					
ANR	146761	Callee	cache_lookup		146290	0					
ANR	146762	Identifier	cache_lookup		146290	0					
ANR	146763	ArgumentList	conn_cache		146290	1					
ANR	146764	Argument	conn_cache		146290	0					
ANR	146765	Identifier	conn_cache		146290	0					
ANR	146766	Argument	key		146290	1					
ANR	146767	Identifier	key		146290	0					
ANR	146768	Argument	HASH_KEY_LEN		146290	2					
ANR	146769	Identifier	HASH_KEY_LEN		146290	0					
ANR	146770	Argument	( void * ) & remote_ctx		146290	3					
ANR	146771	CastExpression	( void * ) & remote_ctx		146290	0					
ANR	146772	CastTarget	void *		146290	0					
ANR	146773	UnaryOperationExpression	& remote_ctx		146290	1					
ANR	146774	UnaryOperator	&		146290	0					
ANR	146775	Identifier	remote_ctx		146290	1					
ANR	146776	IfStatement	if ( remote_ctx != NULL )		146290	43					
ANR	146777	Condition	remote_ctx != NULL	1073:8:31537:31554	146290	0	True				
ANR	146778	EqualityExpression	remote_ctx != NULL		146290	0		!=			
ANR	146779	Identifier	remote_ctx		146290	0					
ANR	146780	Identifier	NULL		146290	1					
ANR	146781	CompoundStatement		227:28:7092:7092	146290	1					
ANR	146782	IfStatement	"if ( sockaddr_cmp ( & src_addr , & remote_ctx -> src_addr , sizeof ( src_addr ) ) )"		146290	0					
ANR	146783	Condition	"sockaddr_cmp ( & src_addr , & remote_ctx -> src_addr , sizeof ( src_addr ) )"	1074:12:31571:31634	146290	0	True				
ANR	146784	CallExpression	"sockaddr_cmp ( & src_addr , & remote_ctx -> src_addr , sizeof ( src_addr ) )"		146290	0					
ANR	146785	Callee	sockaddr_cmp		146290	0					
ANR	146786	Identifier	sockaddr_cmp		146290	0					
ANR	146787	ArgumentList	& src_addr		146290	1					
ANR	146788	Argument	& src_addr		146290	0					
ANR	146789	UnaryOperationExpression	& src_addr		146290	0					
ANR	146790	UnaryOperator	&		146290	0					
ANR	146791	Identifier	src_addr		146290	1					
ANR	146792	Argument	& remote_ctx -> src_addr		146290	1					
ANR	146793	UnaryOperationExpression	& remote_ctx -> src_addr		146290	0					
ANR	146794	UnaryOperator	&		146290	0					
ANR	146795	PtrMemberAccess	remote_ctx -> src_addr		146290	1					
ANR	146796	Identifier	remote_ctx		146290	0					
ANR	146797	Identifier	src_addr		146290	1					
ANR	146798	Argument	sizeof ( src_addr )		146290	2					
ANR	146799	SizeofExpression	sizeof ( src_addr )		146290	0					
ANR	146800	Sizeof	sizeof		146290	0					
ANR	146801	SizeofOperand	src_addr		146290	1					
ANR	146802	CompoundStatement		228:78:7172:7172	146290	1					
ANR	146803	ExpressionStatement	remote_ctx = NULL	1075:12:31651:31668	146290	0	True				
ANR	146804	AssignmentExpression	remote_ctx = NULL		146290	0		=			
ANR	146805	Identifier	remote_ctx		146290	0					
ANR	146806	Identifier	NULL		146290	1					
ANR	146807	IfStatement	if ( remote_ctx != NULL )		146290	44					
ANR	146808	Condition	remote_ctx != NULL	1080:8:31718:31735	146290	0	True				
ANR	146809	EqualityExpression	remote_ctx != NULL		146290	0		!=			
ANR	146810	Identifier	remote_ctx		146290	0					
ANR	146811	Identifier	NULL		146290	1					
ANR	146812	CompoundStatement		234:28:7273:7273	146290	1					
ANR	146813	ExpressionStatement	ev_timer_again ( EV_A_ & remote_ctx -> watcher )	1081:8:31748:31791	146290	0	True				
ANR	146814	CallExpression	ev_timer_again ( EV_A_ & remote_ctx -> watcher )		146290	0					
ANR	146815	Callee	ev_timer_again		146290	0					
ANR	146816	Identifier	ev_timer_again		146290	0					
ANR	146817	ArgumentList	EV_A_ & remote_ctx -> watcher		146290	1					
ANR	146818	Argument	EV_A_ & remote_ctx -> watcher		146290	0					
ANR	146819	BitAndExpression	EV_A_ & remote_ctx -> watcher		146290	0		&			
ANR	146820	Identifier	EV_A_		146290	0					
ANR	146821	PtrMemberAccess	remote_ctx -> watcher		146290	1					
ANR	146822	Identifier	remote_ctx		146290	0					
ANR	146823	Identifier	watcher		146290	1					
ANR	146824	IfStatement	if ( remote_ctx == NULL )		146290	45					
ANR	146825	Condition	remote_ctx == NULL	1084:8:31808:31825	146290	0	True				
ANR	146826	EqualityExpression	remote_ctx == NULL		146290	0		==			
ANR	146827	Identifier	remote_ctx		146290	0					
ANR	146828	Identifier	NULL		146290	1					
ANR	146829	CompoundStatement		238:28:7363:7363	146290	1					
ANR	146830	IfStatement	if ( verbose )		146290	0					
ANR	146831	Condition	verbose	1085:12:31842:31848	146290	0	True				
ANR	146832	Identifier	verbose		146290	0					
ANR	146833	CompoundStatement		242:12:7457:7480	146290	1					
ANR	146834	IdentifierDeclStatement	char src [ SS_ADDRSTRLEN ] ;	1087:12:31885:31908	146290	0	True				
ANR	146835	IdentifierDecl	src [ SS_ADDRSTRLEN ]		146290	0					
ANR	146836	IdentifierDeclType	char [ SS_ADDRSTRLEN ]		146290	0					
ANR	146837	Identifier	src		146290	1					
ANR	146838	Identifier	SS_ADDRSTRLEN		146290	2					
ANR	146839	IdentifierDeclStatement	char dst [ SS_ADDRSTRLEN ] ;	1088:12:31922:31945	146290	1	True				
ANR	146840	IdentifierDecl	dst [ SS_ADDRSTRLEN ]		146290	0					
ANR	146841	IdentifierDeclType	char [ SS_ADDRSTRLEN ]		146290	0					
ANR	146842	Identifier	dst		146290	1					
ANR	146843	Identifier	SS_ADDRSTRLEN		146290	2					
ANR	146844	ExpressionStatement	"strcpy ( src , get_addr_str ( ( struct sockaddr * ) & src_addr ) )"	1089:12:31959:32014	146290	2	True				
ANR	146845	CallExpression	"strcpy ( src , get_addr_str ( ( struct sockaddr * ) & src_addr ) )"		146290	0					
ANR	146846	Callee	strcpy		146290	0					
ANR	146847	Identifier	strcpy		146290	0					
ANR	146848	ArgumentList	src		146290	1					
ANR	146849	Argument	src		146290	0					
ANR	146850	Identifier	src		146290	0					
ANR	146851	Argument	get_addr_str ( ( struct sockaddr * ) & src_addr )		146290	1					
ANR	146852	CallExpression	get_addr_str ( ( struct sockaddr * ) & src_addr )		146290	0					
ANR	146853	Callee	get_addr_str		146290	0					
ANR	146854	Identifier	get_addr_str		146290	0					
ANR	146855	ArgumentList	( struct sockaddr * ) & src_addr		146290	1					
ANR	146856	Argument	( struct sockaddr * ) & src_addr		146290	0					
ANR	146857	CastExpression	( struct sockaddr * ) & src_addr		146290	0					
ANR	146858	CastTarget	struct sockaddr *		146290	0					
ANR	146859	UnaryOperationExpression	& src_addr		146290	1					
ANR	146860	UnaryOperator	&		146290	0					
ANR	146861	Identifier	src_addr		146290	1					
ANR	146862	ExpressionStatement	"strcpy ( dst , get_addr_str ( ( struct sockaddr * ) & dst_addr ) )"	1090:12:32028:32083	146290	3	True				
ANR	146863	CallExpression	"strcpy ( dst , get_addr_str ( ( struct sockaddr * ) & dst_addr ) )"		146290	0					
ANR	146864	Callee	strcpy		146290	0					
ANR	146865	Identifier	strcpy		146290	0					
ANR	146866	ArgumentList	dst		146290	1					
ANR	146867	Argument	dst		146290	0					
ANR	146868	Identifier	dst		146290	0					
ANR	146869	Argument	get_addr_str ( ( struct sockaddr * ) & dst_addr )		146290	1					
ANR	146870	CallExpression	get_addr_str ( ( struct sockaddr * ) & dst_addr )		146290	0					
ANR	146871	Callee	get_addr_str		146290	0					
ANR	146872	Identifier	get_addr_str		146290	0					
ANR	146873	ArgumentList	( struct sockaddr * ) & dst_addr		146290	1					
ANR	146874	Argument	( struct sockaddr * ) & dst_addr		146290	0					
ANR	146875	CastExpression	( struct sockaddr * ) & dst_addr		146290	0					
ANR	146876	CastTarget	struct sockaddr *		146290	0					
ANR	146877	UnaryOperationExpression	& dst_addr		146290	1					
ANR	146878	UnaryOperator	&		146290	0					
ANR	146879	Identifier	dst_addr		146290	1					
ANR	146880	ExpressionStatement	"LOGI ( ""[udp] cache miss: %s <-> %s"" , dst , src )"	1091:12:32097:32142	146290	4	True				
ANR	146881	CallExpression	"LOGI ( ""[udp] cache miss: %s <-> %s"" , dst , src )"		146290	0					
ANR	146882	Callee	LOGI		146290	0					
ANR	146883	Identifier	LOGI		146290	0					
ANR	146884	ArgumentList	"""[udp] cache miss: %s <-> %s"""		146290	1					
ANR	146885	Argument	"""[udp] cache miss: %s <-> %s"""		146290	0					
ANR	146886	PrimaryExpression	"""[udp] cache miss: %s <-> %s"""		146290	0					
ANR	146887	Argument	dst		146290	1					
ANR	146888	Identifier	dst		146290	0					
ANR	146889	Argument	src		146290	2					
ANR	146890	Identifier	src		146290	0					
ANR	146891	ElseStatement	else		146290	0					
ANR	146892	CompoundStatement		251:11:7838:7838	146290	0					
ANR	146893	IfStatement	if ( verbose )		146290	0					
ANR	146894	Condition	verbose	1098:12:32317:32323	146290	0	True				
ANR	146895	Identifier	verbose		146290	0					
ANR	146896	CompoundStatement		255:12:7932:7955	146290	1					
ANR	146897	IdentifierDeclStatement	char src [ SS_ADDRSTRLEN ] ;	1100:12:32360:32383	146290	0	True				
ANR	146898	IdentifierDecl	src [ SS_ADDRSTRLEN ]		146290	0					
ANR	146899	IdentifierDeclType	char [ SS_ADDRSTRLEN ]		146290	0					
ANR	146900	Identifier	src		146290	1					
ANR	146901	Identifier	SS_ADDRSTRLEN		146290	2					
ANR	146902	IdentifierDeclStatement	char dst [ SS_ADDRSTRLEN ] ;	1101:12:32397:32420	146290	1	True				
ANR	146903	IdentifierDecl	dst [ SS_ADDRSTRLEN ]		146290	0					
ANR	146904	IdentifierDeclType	char [ SS_ADDRSTRLEN ]		146290	0					
ANR	146905	Identifier	dst		146290	1					
ANR	146906	Identifier	SS_ADDRSTRLEN		146290	2					
ANR	146907	ExpressionStatement	"strcpy ( src , get_addr_str ( ( struct sockaddr * ) & src_addr ) )"	1102:12:32434:32489	146290	2	True				
ANR	146908	CallExpression	"strcpy ( src , get_addr_str ( ( struct sockaddr * ) & src_addr ) )"		146290	0					
ANR	146909	Callee	strcpy		146290	0					
ANR	146910	Identifier	strcpy		146290	0					
ANR	146911	ArgumentList	src		146290	1					
ANR	146912	Argument	src		146290	0					
ANR	146913	Identifier	src		146290	0					
ANR	146914	Argument	get_addr_str ( ( struct sockaddr * ) & src_addr )		146290	1					
ANR	146915	CallExpression	get_addr_str ( ( struct sockaddr * ) & src_addr )		146290	0					
ANR	146916	Callee	get_addr_str		146290	0					
ANR	146917	Identifier	get_addr_str		146290	0					
ANR	146918	ArgumentList	( struct sockaddr * ) & src_addr		146290	1					
ANR	146919	Argument	( struct sockaddr * ) & src_addr		146290	0					
ANR	146920	CastExpression	( struct sockaddr * ) & src_addr		146290	0					
ANR	146921	CastTarget	struct sockaddr *		146290	0					
ANR	146922	UnaryOperationExpression	& src_addr		146290	1					
ANR	146923	UnaryOperator	&		146290	0					
ANR	146924	Identifier	src_addr		146290	1					
ANR	146925	ExpressionStatement	"strcpy ( dst , get_addr_str ( ( struct sockaddr * ) & dst_addr ) )"	1103:12:32503:32558	146290	3	True				
ANR	146926	CallExpression	"strcpy ( dst , get_addr_str ( ( struct sockaddr * ) & dst_addr ) )"		146290	0					
ANR	146927	Callee	strcpy		146290	0					
ANR	146928	Identifier	strcpy		146290	0					
ANR	146929	ArgumentList	dst		146290	1					
ANR	146930	Argument	dst		146290	0					
ANR	146931	Identifier	dst		146290	0					
ANR	146932	Argument	get_addr_str ( ( struct sockaddr * ) & dst_addr )		146290	1					
ANR	146933	CallExpression	get_addr_str ( ( struct sockaddr * ) & dst_addr )		146290	0					
ANR	146934	Callee	get_addr_str		146290	0					
ANR	146935	Identifier	get_addr_str		146290	0					
ANR	146936	ArgumentList	( struct sockaddr * ) & dst_addr		146290	1					
ANR	146937	Argument	( struct sockaddr * ) & dst_addr		146290	0					
ANR	146938	CastExpression	( struct sockaddr * ) & dst_addr		146290	0					
ANR	146939	CastTarget	struct sockaddr *		146290	0					
ANR	146940	UnaryOperationExpression	& dst_addr		146290	1					
ANR	146941	UnaryOperator	&		146290	0					
ANR	146942	Identifier	dst_addr		146290	1					
ANR	146943	ExpressionStatement	"LOGI ( ""[udp] cache hit: %s <-> %s"" , dst , src )"	1104:12:32572:32616	146290	4	True				
ANR	146944	CallExpression	"LOGI ( ""[udp] cache hit: %s <-> %s"" , dst , src )"		146290	0					
ANR	146945	Callee	LOGI		146290	0					
ANR	146946	Identifier	LOGI		146290	0					
ANR	146947	ArgumentList	"""[udp] cache hit: %s <-> %s"""		146290	1					
ANR	146948	Argument	"""[udp] cache hit: %s <-> %s"""		146290	0					
ANR	146949	PrimaryExpression	"""[udp] cache hit: %s <-> %s"""		146290	0					
ANR	146950	Argument	dst		146290	1					
ANR	146951	Identifier	dst		146290	0					
ANR	146952	Argument	src		146290	2					
ANR	146953	Identifier	src		146290	0					
ANR	146954	IfStatement	if ( frag )		146290	46					
ANR	146955	Condition	frag	1115:8:32855:32858	146290	0	True				
ANR	146956	Identifier	frag		146290	0					
ANR	146957	CompoundStatement		269:14:8396:8396	146290	1					
ANR	146958	ExpressionStatement	"LOGE ( ""[udp] drop a message since frag is not 0, but %d"" , frag )"	1116:8:32871:32933	146290	0	True				
ANR	146959	CallExpression	"LOGE ( ""[udp] drop a message since frag is not 0, but %d"" , frag )"		146290	0					
ANR	146960	Callee	LOGE		146290	0					
ANR	146961	Identifier	LOGE		146290	0					
ANR	146962	ArgumentList	"""[udp] drop a message since frag is not 0, but %d"""		146290	1					
ANR	146963	Argument	"""[udp] drop a message since frag is not 0, but %d"""		146290	0					
ANR	146964	PrimaryExpression	"""[udp] drop a message since frag is not 0, but %d"""		146290	0					
ANR	146965	Argument	frag		146290	1					
ANR	146966	Identifier	frag		146290	0					
ANR	146967	GotoStatement	goto CLEAN_UP ;	1117:8:32943:32956	146290	1	True				
ANR	146968	Identifier	CLEAN_UP		146290	0					
ANR	146969	IdentifierDeclStatement	const struct sockaddr * remote_addr = server_ctx -> remote_addr ;	1121:4:32976:33036	146290	47	True				
ANR	146970	IdentifierDecl	* remote_addr = server_ctx -> remote_addr		146290	0					
ANR	146971	IdentifierDeclType	const struct sockaddr *		146290	0					
ANR	146972	Identifier	remote_addr		146290	1					
ANR	146973	AssignmentExpression	* remote_addr = server_ctx -> remote_addr		146290	2		=			
ANR	146974	Identifier	remote_addr		146290	0					
ANR	146975	PtrMemberAccess	server_ctx -> remote_addr		146290	1					
ANR	146976	Identifier	server_ctx		146290	0					
ANR	146977	Identifier	remote_addr		146290	1					
ANR	146978	IdentifierDeclStatement	const int remote_addr_len = server_ctx -> remote_addr_len ;	1122:4:33042:33106	146290	48	True				
ANR	146979	IdentifierDecl	remote_addr_len = server_ctx -> remote_addr_len		146290	0					
ANR	146980	IdentifierDeclType	const int		146290	0					
ANR	146981	Identifier	remote_addr_len		146290	1					
ANR	146982	AssignmentExpression	remote_addr_len = server_ctx -> remote_addr_len		146290	2		=			
ANR	146983	Identifier	remote_addr_len		146290	0					
ANR	146984	PtrMemberAccess	server_ctx -> remote_addr_len		146290	1					
ANR	146985	Identifier	server_ctx		146290	0					
ANR	146986	Identifier	remote_addr_len		146290	1					
ANR	146987	IfStatement	if ( remote_ctx == NULL )		146290	49					
ANR	146988	Condition	remote_ctx == NULL	1124:8:33117:33134	146290	0	True				
ANR	146989	EqualityExpression	remote_ctx == NULL		146290	0		==			
ANR	146990	Identifier	remote_ctx		146290	0					
ANR	146991	Identifier	NULL		146290	1					
ANR	146992	CompoundStatement		292:8:9039:9051	146290	1					
ANR	146993	IdentifierDeclStatement	int remotefd = create_remote_socket ( remote_addr -> sa_family == AF_INET6 ) ;	1126:8:33175:33246	146290	0	True				
ANR	146994	IdentifierDecl	remotefd = create_remote_socket ( remote_addr -> sa_family == AF_INET6 )		146290	0					
ANR	146995	IdentifierDeclType	int		146290	0					
ANR	146996	Identifier	remotefd		146290	1					
ANR	146997	AssignmentExpression	remotefd = create_remote_socket ( remote_addr -> sa_family == AF_INET6 )		146290	2		=			
ANR	146998	Identifier	remotefd		146290	0					
ANR	146999	CallExpression	create_remote_socket ( remote_addr -> sa_family == AF_INET6 )		146290	1					
ANR	147000	Callee	create_remote_socket		146290	0					
ANR	147001	Identifier	create_remote_socket		146290	0					
ANR	147002	ArgumentList	remote_addr -> sa_family == AF_INET6		146290	1					
ANR	147003	Argument	remote_addr -> sa_family == AF_INET6		146290	0					
ANR	147004	EqualityExpression	remote_addr -> sa_family == AF_INET6		146290	0		==			
ANR	147005	PtrMemberAccess	remote_addr -> sa_family		146290	0					
ANR	147006	Identifier	remote_addr		146290	0					
ANR	147007	Identifier	sa_family		146290	1					
ANR	147008	Identifier	AF_INET6		146290	1					
ANR	147009	IfStatement	if ( remotefd < 0 )		146290	1					
ANR	147010	Condition	remotefd < 0	1127:12:33260:33271	146290	0	True				
ANR	147011	RelationalExpression	remotefd < 0		146290	0		<			
ANR	147012	Identifier	remotefd		146290	0					
ANR	147013	PrimaryExpression	0		146290	1					
ANR	147014	CompoundStatement		281:26:8809:8809	146290	1					
ANR	147015	ExpressionStatement	"ERROR ( ""[udp] udprelay bind() error"" )"	1128:12:33288:33324	146290	0	True				
ANR	147016	CallExpression	"ERROR ( ""[udp] udprelay bind() error"" )"		146290	0					
ANR	147017	Callee	ERROR		146290	0					
ANR	147018	Identifier	ERROR		146290	0					
ANR	147019	ArgumentList	"""[udp] udprelay bind() error"""		146290	1					
ANR	147020	Argument	"""[udp] udprelay bind() error"""		146290	0					
ANR	147021	PrimaryExpression	"""[udp] udprelay bind() error"""		146290	0					
ANR	147022	GotoStatement	goto CLEAN_UP ;	1129:12:33338:33351	146290	1	True				
ANR	147023	Identifier	CLEAN_UP		146290	0					
ANR	147024	ExpressionStatement	setnonblocking ( remotefd )	1131:8:33371:33395	146290	2	True				
ANR	147025	CallExpression	setnonblocking ( remotefd )		146290	0					
ANR	147026	Callee	setnonblocking		146290	0					
ANR	147027	Identifier	setnonblocking		146290	0					
ANR	147028	ArgumentList	remotefd		146290	1					
ANR	147029	Argument	remotefd		146290	0					
ANR	147030	Identifier	remotefd		146290	0					
ANR	147031	ExpressionStatement	set_nosigpipe ( remotefd )	1134:8:33426:33449	146290	3	True				
ANR	147032	CallExpression	set_nosigpipe ( remotefd )		146290	0					
ANR	147033	Callee	set_nosigpipe		146290	0					
ANR	147034	Identifier	set_nosigpipe		146290	0					
ANR	147035	ArgumentList	remotefd		146290	1					
ANR	147036	Argument	remotefd		146290	0					
ANR	147037	Identifier	remotefd		146290	0					
ANR	147038	IdentifierDeclStatement	int tos = 46 ;	1138:8:33504:33516	146290	4	True				
ANR	147039	IdentifierDecl	tos = 46		146290	0					
ANR	147040	IdentifierDeclType	int		146290	0					
ANR	147041	Identifier	tos		146290	1					
ANR	147042	AssignmentExpression	tos = 46		146290	2		=			
ANR	147043	Identifier	tos		146290	0					
ANR	147044	PrimaryExpression	46		146290	1					
ANR	147045	ExpressionStatement	"setsockopt ( remotefd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"	1139:8:33526:33585	146290	5	True				
ANR	147046	CallExpression	"setsockopt ( remotefd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"		146290	0					
ANR	147047	Callee	setsockopt		146290	0					
ANR	147048	Identifier	setsockopt		146290	0					
ANR	147049	ArgumentList	remotefd		146290	1					
ANR	147050	Argument	remotefd		146290	0					
ANR	147051	Identifier	remotefd		146290	0					
ANR	147052	Argument	IPPROTO_IP		146290	1					
ANR	147053	Identifier	IPPROTO_IP		146290	0					
ANR	147054	Argument	IP_TOS		146290	2					
ANR	147055	Identifier	IP_TOS		146290	0					
ANR	147056	Argument	& tos		146290	3					
ANR	147057	UnaryOperationExpression	& tos		146290	0					
ANR	147058	UnaryOperator	&		146290	0					
ANR	147059	Identifier	tos		146290	1					
ANR	147060	Argument	sizeof ( tos )		146290	4					
ANR	147061	SizeofExpression	sizeof ( tos )		146290	0					
ANR	147062	Sizeof	sizeof		146290	0					
ANR	147063	SizeofOperand	tos		146290	1					
ANR	147064	IfStatement	if ( server_ctx -> iface )		146290	6					
ANR	147065	Condition	server_ctx -> iface	1142:12:33627:33643	146290	0	True				
ANR	147066	PtrMemberAccess	server_ctx -> iface		146290	0					
ANR	147067	Identifier	server_ctx		146290	0					
ANR	147068	Identifier	iface		146290	1					
ANR	147069	CompoundStatement		296:31:9181:9181	146290	1					
ANR	147070	IfStatement	"if ( setinterface ( remotefd , server_ctx -> iface ) == - 1 )"		146290	0					
ANR	147071	Condition	"setinterface ( remotefd , server_ctx -> iface ) == - 1"	1143:16:33664:33710	146290	0	True				
ANR	147072	EqualityExpression	"setinterface ( remotefd , server_ctx -> iface ) == - 1"		146290	0		==			
ANR	147073	CallExpression	"setinterface ( remotefd , server_ctx -> iface )"		146290	0					
ANR	147074	Callee	setinterface		146290	0					
ANR	147075	Identifier	setinterface		146290	0					
ANR	147076	ArgumentList	remotefd		146290	1					
ANR	147077	Argument	remotefd		146290	0					
ANR	147078	Identifier	remotefd		146290	0					
ANR	147079	Argument	server_ctx -> iface		146290	1					
ANR	147080	PtrMemberAccess	server_ctx -> iface		146290	0					
ANR	147081	Identifier	server_ctx		146290	0					
ANR	147082	Identifier	iface		146290	1					
ANR	147083	UnaryOperationExpression	- 1		146290	1					
ANR	147084	UnaryOperator	-		146290	0					
ANR	147085	PrimaryExpression	1		146290	1					
ANR	147086	ExpressionStatement	"ERROR ( ""setinterface"" )"	1144:16:33729:33750	146290	1	True				
ANR	147087	CallExpression	"ERROR ( ""setinterface"" )"		146290	0					
ANR	147088	Callee	ERROR		146290	0					
ANR	147089	Identifier	ERROR		146290	0					
ANR	147090	ArgumentList	"""setinterface"""		146290	1					
ANR	147091	Argument	"""setinterface"""		146290	0					
ANR	147092	PrimaryExpression	"""setinterface"""		146290	0					
ANR	147093	IfStatement	if ( vpn )		146290	7					
ANR	147094	Condition	vpn	1149:12:33801:33803	146290	0	True				
ANR	147095	Identifier	vpn		146290	0					
ANR	147096	CompoundStatement		303:17:9341:9341	146290	1					
ANR	147097	IfStatement	if ( protect_socket ( remotefd ) == - 1 )		146290	0					
ANR	147098	Condition	protect_socket ( remotefd ) == - 1	1150:16:33824:33853	146290	0	True				
ANR	147099	EqualityExpression	protect_socket ( remotefd ) == - 1		146290	0		==			
ANR	147100	CallExpression	protect_socket ( remotefd )		146290	0					
ANR	147101	Callee	protect_socket		146290	0					
ANR	147102	Identifier	protect_socket		146290	0					
ANR	147103	ArgumentList	remotefd		146290	1					
ANR	147104	Argument	remotefd		146290	0					
ANR	147105	Identifier	remotefd		146290	0					
ANR	147106	UnaryOperationExpression	- 1		146290	1					
ANR	147107	UnaryOperator	-		146290	0					
ANR	147108	PrimaryExpression	1		146290	1					
ANR	147109	CompoundStatement		304:48:9391:9391	146290	1					
ANR	147110	ExpressionStatement	"ERROR ( ""protect_socket"" )"	1151:16:33874:33897	146290	0	True				
ANR	147111	CallExpression	"ERROR ( ""protect_socket"" )"		146290	0					
ANR	147112	Callee	ERROR		146290	0					
ANR	147113	Identifier	ERROR		146290	0					
ANR	147114	ArgumentList	"""protect_socket"""		146290	1					
ANR	147115	Argument	"""protect_socket"""		146290	0					
ANR	147116	PrimaryExpression	"""protect_socket"""		146290	0					
ANR	147117	ExpressionStatement	close ( remotefd )	1152:16:33915:33930	146290	1	True				
ANR	147118	CallExpression	close ( remotefd )		146290	0					
ANR	147119	Callee	close		146290	0					
ANR	147120	Identifier	close		146290	0					
ANR	147121	ArgumentList	remotefd		146290	1					
ANR	147122	Argument	remotefd		146290	0					
ANR	147123	Identifier	remotefd		146290	0					
ANR	147124	GotoStatement	goto CLEAN_UP ;	1153:16:33948:33961	146290	2	True				
ANR	147125	Identifier	CLEAN_UP		146290	0					
ANR	147126	ExpressionStatement	"remote_ctx = new_remote ( remotefd , server_ctx )"	1159:8:34030:34092	146290	8	True				
ANR	147127	AssignmentExpression	"remote_ctx = new_remote ( remotefd , server_ctx )"		146290	0		=			
ANR	147128	Identifier	remote_ctx		146290	0					
ANR	147129	CallExpression	"new_remote ( remotefd , server_ctx )"		146290	1					
ANR	147130	Callee	new_remote		146290	0					
ANR	147131	Identifier	new_remote		146290	0					
ANR	147132	ArgumentList	remotefd		146290	1					
ANR	147133	Argument	remotefd		146290	0					
ANR	147134	Identifier	remotefd		146290	0					
ANR	147135	Argument	server_ctx		146290	1					
ANR	147136	Identifier	server_ctx		146290	0					
ANR	147137	ExpressionStatement	remote_ctx -> src_addr = src_addr	1160:8:34102:34140	146290	9	True				
ANR	147138	AssignmentExpression	remote_ctx -> src_addr = src_addr		146290	0		=			
ANR	147139	PtrMemberAccess	remote_ctx -> src_addr		146290	0					
ANR	147140	Identifier	remote_ctx		146290	0					
ANR	147141	Identifier	src_addr		146290	1					
ANR	147142	Identifier	src_addr		146290	1					
ANR	147143	ExpressionStatement	remote_ctx -> af = remote_addr -> sa_family	1161:8:34150:34202	146290	10	True				
ANR	147144	AssignmentExpression	remote_ctx -> af = remote_addr -> sa_family		146290	0		=			
ANR	147145	PtrMemberAccess	remote_ctx -> af		146290	0					
ANR	147146	Identifier	remote_ctx		146290	0					
ANR	147147	Identifier	af		146290	1					
ANR	147148	PtrMemberAccess	remote_addr -> sa_family		146290	1					
ANR	147149	Identifier	remote_addr		146290	0					
ANR	147150	Identifier	sa_family		146290	1					
ANR	147151	ExpressionStatement	remote_ctx -> addr_header_len = addr_header_len	1162:8:34212:34257	146290	11	True				
ANR	147152	AssignmentExpression	remote_ctx -> addr_header_len = addr_header_len		146290	0		=			
ANR	147153	PtrMemberAccess	remote_ctx -> addr_header_len		146290	0					
ANR	147154	Identifier	remote_ctx		146290	0					
ANR	147155	Identifier	addr_header_len		146290	1					
ANR	147156	Identifier	addr_header_len		146290	1					
ANR	147157	ExpressionStatement	"memcpy ( remote_ctx -> addr_header , addr_header , addr_header_len )"	1163:8:34267:34328	146290	12	True				
ANR	147158	CallExpression	"memcpy ( remote_ctx -> addr_header , addr_header , addr_header_len )"		146290	0					
ANR	147159	Callee	memcpy		146290	0					
ANR	147160	Identifier	memcpy		146290	0					
ANR	147161	ArgumentList	remote_ctx -> addr_header		146290	1					
ANR	147162	Argument	remote_ctx -> addr_header		146290	0					
ANR	147163	PtrMemberAccess	remote_ctx -> addr_header		146290	0					
ANR	147164	Identifier	remote_ctx		146290	0					
ANR	147165	Identifier	addr_header		146290	1					
ANR	147166	Argument	addr_header		146290	1					
ANR	147167	Identifier	addr_header		146290	0					
ANR	147168	Argument	addr_header_len		146290	2					
ANR	147169	Identifier	addr_header_len		146290	0					
ANR	147170	ExpressionStatement	"cache_insert ( conn_cache , key , HASH_KEY_LEN , ( void * ) remote_ctx )"	1166:8:34368:34431	146290	13	True				
ANR	147171	CallExpression	"cache_insert ( conn_cache , key , HASH_KEY_LEN , ( void * ) remote_ctx )"		146290	0					
ANR	147172	Callee	cache_insert		146290	0					
ANR	147173	Identifier	cache_insert		146290	0					
ANR	147174	ArgumentList	conn_cache		146290	1					
ANR	147175	Argument	conn_cache		146290	0					
ANR	147176	Identifier	conn_cache		146290	0					
ANR	147177	Argument	key		146290	1					
ANR	147178	Identifier	key		146290	0					
ANR	147179	Argument	HASH_KEY_LEN		146290	2					
ANR	147180	Identifier	HASH_KEY_LEN		146290	0					
ANR	147181	Argument	( void * ) remote_ctx		146290	3					
ANR	147182	CastExpression	( void * ) remote_ctx		146290	0					
ANR	147183	CastTarget	void *		146290	0					
ANR	147184	Identifier	remote_ctx		146290	1					
ANR	147185	ExpressionStatement	ev_io_start ( EV_A_ & remote_ctx -> io )	1169:8:34469:34504	146290	14	True				
ANR	147186	CallExpression	ev_io_start ( EV_A_ & remote_ctx -> io )		146290	0					
ANR	147187	Callee	ev_io_start		146290	0					
ANR	147188	Identifier	ev_io_start		146290	0					
ANR	147189	ArgumentList	EV_A_ & remote_ctx -> io		146290	1					
ANR	147190	Argument	EV_A_ & remote_ctx -> io		146290	0					
ANR	147191	BitAndExpression	EV_A_ & remote_ctx -> io		146290	0		&			
ANR	147192	Identifier	EV_A_		146290	0					
ANR	147193	PtrMemberAccess	remote_ctx -> io		146290	1					
ANR	147194	Identifier	remote_ctx		146290	0					
ANR	147195	Identifier	io		146290	1					
ANR	147196	ExpressionStatement	ev_timer_start ( EV_A_ & remote_ctx -> watcher )	1170:8:34514:34557	146290	15	True				
ANR	147197	CallExpression	ev_timer_start ( EV_A_ & remote_ctx -> watcher )		146290	0					
ANR	147198	Callee	ev_timer_start		146290	0					
ANR	147199	Identifier	ev_timer_start		146290	0					
ANR	147200	ArgumentList	EV_A_ & remote_ctx -> watcher		146290	1					
ANR	147201	Argument	EV_A_ & remote_ctx -> watcher		146290	0					
ANR	147202	BitAndExpression	EV_A_ & remote_ctx -> watcher		146290	0		&			
ANR	147203	Identifier	EV_A_		146290	0					
ANR	147204	PtrMemberAccess	remote_ctx -> watcher		146290	1					
ANR	147205	Identifier	remote_ctx		146290	0					
ANR	147206	Identifier	watcher		146290	1					
ANR	147207	IfStatement	if ( offset > 0 )		146290	50					
ANR	147208	Condition	offset > 0	1173:8:34574:34583	146290	0	True				
ANR	147209	RelationalExpression	offset > 0		146290	0		>			
ANR	147210	Identifier	offset		146290	0					
ANR	147211	PrimaryExpression	0		146290	1					
ANR	147212	CompoundStatement		327:20:10121:10121	146290	1					
ANR	147213	ExpressionStatement	buf -> len -= offset	1174:8:34596:34614	146290	0	True				
ANR	147214	AssignmentExpression	buf -> len -= offset		146290	0		-=			
ANR	147215	PtrMemberAccess	buf -> len		146290	0					
ANR	147216	Identifier	buf		146290	0					
ANR	147217	Identifier	len		146290	1					
ANR	147218	Identifier	offset		146290	1					
ANR	147219	ExpressionStatement	"memmove ( buf -> data , buf -> data + offset , buf -> len )"	1175:8:34624:34672	146290	1	True				
ANR	147220	CallExpression	"memmove ( buf -> data , buf -> data + offset , buf -> len )"		146290	0					
ANR	147221	Callee	memmove		146290	0					
ANR	147222	Identifier	memmove		146290	0					
ANR	147223	ArgumentList	buf -> data		146290	1					
ANR	147224	Argument	buf -> data		146290	0					
ANR	147225	PtrMemberAccess	buf -> data		146290	0					
ANR	147226	Identifier	buf		146290	0					
ANR	147227	Identifier	data		146290	1					
ANR	147228	Argument	buf -> data + offset		146290	1					
ANR	147229	AdditiveExpression	buf -> data + offset		146290	0		+			
ANR	147230	PtrMemberAccess	buf -> data		146290	0					
ANR	147231	Identifier	buf		146290	0					
ANR	147232	Identifier	data		146290	1					
ANR	147233	Identifier	offset		146290	1					
ANR	147234	Argument	buf -> len		146290	2					
ANR	147235	PtrMemberAccess	buf -> len		146290	0					
ANR	147236	Identifier	buf		146290	0					
ANR	147237	Identifier	len		146290	1					
ANR	147238	IdentifierDeclStatement	"int err = server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size ) ;"	1178:4:34685:34769	146290	51	True				
ANR	147239	IdentifierDecl	"err = server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		146290	0					
ANR	147240	IdentifierDeclType	int		146290	0					
ANR	147241	Identifier	err		146290	1					
ANR	147242	AssignmentExpression	"err = server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		146290	2		=			
ANR	147243	Identifier	err		146290	0					
ANR	147244	CallExpression	"server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		146290	1					
ANR	147245	Callee	server_ctx -> crypto -> encrypt_all		146290	0					
ANR	147246	PtrMemberAccess	server_ctx -> crypto -> encrypt_all		146290	0					
ANR	147247	PtrMemberAccess	server_ctx -> crypto		146290	0					
ANR	147248	Identifier	server_ctx		146290	0					
ANR	147249	Identifier	crypto		146290	1					
ANR	147250	Identifier	encrypt_all		146290	1					
ANR	147251	ArgumentList	buf		146290	1					
ANR	147252	Argument	buf		146290	0					
ANR	147253	Identifier	buf		146290	0					
ANR	147254	Argument	server_ctx -> crypto -> cipher		146290	1					
ANR	147255	PtrMemberAccess	server_ctx -> crypto -> cipher		146290	0					
ANR	147256	PtrMemberAccess	server_ctx -> crypto		146290	0					
ANR	147257	Identifier	server_ctx		146290	0					
ANR	147258	Identifier	crypto		146290	1					
ANR	147259	Identifier	cipher		146290	1					
ANR	147260	Argument	buf_size		146290	2					
ANR	147261	Identifier	buf_size		146290	0					
ANR	147262	IfStatement	if ( err )		146290	52					
ANR	147263	Condition	err	1180:8:34780:34782	146290	0	True				
ANR	147264	Identifier	err		146290	0					
ANR	147265	CompoundStatement		334:13:10320:10320	146290	1					
ANR	147266	GotoStatement	goto CLEAN_UP ;	1182:8:34831:34844	146290	0	True				
ANR	147267	Identifier	CLEAN_UP		146290	0					
ANR	147268	IfStatement	if ( buf -> len > packet_size )		146290	53					
ANR	147269	Condition	buf -> len > packet_size	1185:8:34861:34882	146290	0	True				
ANR	147270	RelationalExpression	buf -> len > packet_size		146290	0		>			
ANR	147271	PtrMemberAccess	buf -> len		146290	0					
ANR	147272	Identifier	buf		146290	0					
ANR	147273	Identifier	len		146290	1					
ANR	147274	Identifier	packet_size		146290	1					
ANR	147275	CompoundStatement		339:32:10420:10420	146290	1					
ANR	147276	IfStatement	if ( verbose )		146290	0					
ANR	147277	Condition	verbose	1186:12:34899:34905	146290	0	True				
ANR	147278	Identifier	verbose		146290	0					
ANR	147279	CompoundStatement		340:21:10443:10443	146290	1					
ANR	147280	ExpressionStatement	"LOGI ( ""[udp] server_recv_sendto fragmentation"" )"	1187:12:34922:34968	146290	0	True				
ANR	147281	CallExpression	"LOGI ( ""[udp] server_recv_sendto fragmentation"" )"		146290	0					
ANR	147282	Callee	LOGI		146290	0					
ANR	147283	Identifier	LOGI		146290	0					
ANR	147284	ArgumentList	"""[udp] server_recv_sendto fragmentation"""		146290	1					
ANR	147285	Argument	"""[udp] server_recv_sendto fragmentation"""		146290	0					
ANR	147286	PrimaryExpression	"""[udp] server_recv_sendto fragmentation"""		146290	0					
ANR	147287	IdentifierDeclStatement	"int s = sendto ( remote_ctx -> fd , buf -> data , buf -> len , 0 , remote_addr , remote_addr_len ) ;"	1191:4:34991:35075	146290	54	True				
ANR	147288	IdentifierDecl	"s = sendto ( remote_ctx -> fd , buf -> data , buf -> len , 0 , remote_addr , remote_addr_len )"		146290	0					
ANR	147289	IdentifierDeclType	int		146290	0					
ANR	147290	Identifier	s		146290	1					
ANR	147291	AssignmentExpression	"s = sendto ( remote_ctx -> fd , buf -> data , buf -> len , 0 , remote_addr , remote_addr_len )"		146290	2		=			
ANR	147292	Identifier	s		146290	0					
ANR	147293	CallExpression	"sendto ( remote_ctx -> fd , buf -> data , buf -> len , 0 , remote_addr , remote_addr_len )"		146290	1					
ANR	147294	Callee	sendto		146290	0					
ANR	147295	Identifier	sendto		146290	0					
ANR	147296	ArgumentList	remote_ctx -> fd		146290	1					
ANR	147297	Argument	remote_ctx -> fd		146290	0					
ANR	147298	PtrMemberAccess	remote_ctx -> fd		146290	0					
ANR	147299	Identifier	remote_ctx		146290	0					
ANR	147300	Identifier	fd		146290	1					
ANR	147301	Argument	buf -> data		146290	1					
ANR	147302	PtrMemberAccess	buf -> data		146290	0					
ANR	147303	Identifier	buf		146290	0					
ANR	147304	Identifier	data		146290	1					
ANR	147305	Argument	buf -> len		146290	2					
ANR	147306	PtrMemberAccess	buf -> len		146290	0					
ANR	147307	Identifier	buf		146290	0					
ANR	147308	Identifier	len		146290	1					
ANR	147309	Argument	0		146290	3					
ANR	147310	PrimaryExpression	0		146290	0					
ANR	147311	Argument	remote_addr		146290	4					
ANR	147312	Identifier	remote_addr		146290	0					
ANR	147313	Argument	remote_addr_len		146290	5					
ANR	147314	Identifier	remote_addr_len		146290	0					
ANR	147315	IfStatement	if ( s == - 1 )		146290	55					
ANR	147316	Condition	s == - 1	1193:8:35086:35092	146290	0	True				
ANR	147317	EqualityExpression	s == - 1		146290	0		==			
ANR	147318	Identifier	s		146290	0					
ANR	147319	UnaryOperationExpression	- 1		146290	1					
ANR	147320	UnaryOperator	-		146290	0					
ANR	147321	PrimaryExpression	1		146290	1					
ANR	147322	CompoundStatement		347:17:10630:10630	146290	1					
ANR	147323	ExpressionStatement	"ERROR ( ""[udp] server_recv_sendto"" )"	1194:8:35105:35138	146290	0	True				
ANR	147324	CallExpression	"ERROR ( ""[udp] server_recv_sendto"" )"		146290	0					
ANR	147325	Callee	ERROR		146290	0					
ANR	147326	Identifier	ERROR		146290	0					
ANR	147327	ArgumentList	"""[udp] server_recv_sendto"""		146290	1					
ANR	147328	Argument	"""[udp] server_recv_sendto"""		146290	0					
ANR	147329	PrimaryExpression	"""[udp] server_recv_sendto"""		146290	0					
ANR	147330	Label	CLEAN_UP :	1309:0:39260:39268	146290	56	True				
ANR	147331	Identifier	CLEAN_UP		146290	0					
ANR	147332	ExpressionStatement	bfree ( buf )	1310:4:39274:39284	146290	57	True				
ANR	147333	CallExpression	bfree ( buf )		146290	0					
ANR	147334	Callee	bfree		146290	0					
ANR	147335	Identifier	bfree		146290	0					
ANR	147336	ArgumentList	buf		146290	1					
ANR	147337	Argument	buf		146290	0					
ANR	147338	Identifier	buf		146290	0					
ANR	147339	ExpressionStatement	ss_free ( buf )	1311:4:39290:39302	146290	58	True				
ANR	147340	CallExpression	ss_free ( buf )		146290	0					
ANR	147341	Callee	ss_free		146290	0					
ANR	147342	Identifier	ss_free		146290	0					
ANR	147343	ArgumentList	buf		146290	1					
ANR	147344	Argument	buf		146290	0					
ANR	147345	Identifier	buf		146290	0					
ANR	147346	ReturnType	static void		146290	1					
ANR	147347	Identifier	server_recv_cb		146290	2					
ANR	147348	ParameterList	"EV_P_ ev_io * w , int revents"		146290	3					
ANR	147349	Parameter	EV_P_ ev_io * w	846:15:24435:24448	146290	0	True				
ANR	147350	ParameterType	EV_P_ ev_io *		146290	0					
ANR	147351	Identifier	w		146290	1					
ANR	147352	Parameter	int revents	846:31:24451:24461	146290	1	True				
ANR	147353	ParameterType	int		146290	0					
ANR	147354	Identifier	revents		146290	1					
ANR	147355	CFGEntryNode	ENTRY		146290		True				
ANR	147356	CFGExitNode	EXIT		146290		True				
ANR	147357	Symbol	msg		146290						
ANR	147358	Symbol	get_dstaddr		146290						
ANR	147359	Symbol	* ( uint8_t * ) ( buf -> data + 2 )		146290						
ANR	147360	Symbol	server_ctx -> crypto -> encrypt_all		146290						
ANR	147361	Symbol	sendto		146290						
ANR	147362	Symbol	server_ctx		146290						
ANR	147363	Symbol	tx		146290						
ANR	147364	Symbol	revents		146290						
ANR	147365	Symbol	server_ctx -> remote_addr -> sa_family		146290						
ANR	147366	Symbol	IP_TOS		146290						
ANR	147367	Symbol	msg . msg_control		146290						
ANR	147368	Symbol	server_ctx -> remote_addr		146290						
ANR	147369	Symbol	* server_ctx		146290						
ANR	147370	Symbol	src_addr_len		146290						
ANR	147371	Symbol	* remote_addr		146290						
ANR	147372	Symbol	remote_ctx -> watcher		146290						
ANR	147373	Symbol	remote_ctx -> addr_header_len		146290						
ANR	147374	Symbol	iov [ 0 ] . iov_len		146290						
ANR	147375	Symbol	remote_addr -> sa_family		146290						
ANR	147376	Symbol	iov		146290						
ANR	147377	Symbol	* server_ctx -> remote_addr		146290						
ANR	147378	Symbol	get_addr_str		146290						
ANR	147379	Symbol	iov [ 0 ] . iov_base		146290						
ANR	147380	Symbol	dst_addr		146290						
ANR	147381	Symbol	protect_socket		146290						
ANR	147382	Symbol	server_ctx -> remote_addr_len		146290						
ANR	147383	Symbol	& msg		146290						
ANR	147384	Symbol	server_ctx -> crypto -> cipher		146290						
ANR	147385	Symbol	IPPROTO_IP		146290						
ANR	147386	Symbol	msg . msg_name		146290						
ANR	147387	Symbol	* buf		146290						
ANR	147388	Symbol	msg . msg_controllen		146290						
ANR	147389	Symbol	msg . msg_iovlen		146290						
ANR	147390	Symbol	addr_header_len		146290						
ANR	147391	Symbol	NULL		146290						
ANR	147392	Symbol	offset		146290						
ANR	147393	Symbol	& remote_ctx -> src_addr		146290						
ANR	147394	Symbol	buf_size		146290						
ANR	147395	Symbol	server_ctx -> crypto -> decrypt_all		146290						
ANR	147396	Symbol	HASH_KEY_LEN		146290						
ANR	147397	Symbol	msg . msg_namelen		146290						
ANR	147398	Symbol	new_remote		146290						
ANR	147399	Symbol	buf -> data		146290						
ANR	147400	Symbol	* server_ctx -> crypto		146290						
ANR	147401	Symbol	* remote_ctx		146290						
ANR	147402	Symbol	remote_ctx		146290						
ANR	147403	Symbol	* * server_ctx		146290						
ANR	147404	Symbol	remote_ctx -> fd		146290						
ANR	147405	Symbol	frag		146290						
ANR	147406	Symbol	dst		146290						
ANR	147407	Symbol	* iov		146290						
ANR	147408	Symbol	construct_udprelay_header		146290						
ANR	147409	Symbol	* * buf		146290						
ANR	147410	Symbol	server_ctx -> crypto		146290						
ANR	147411	Symbol	server_ctx -> iface		146290						
ANR	147412	Symbol	recvmsg		146290						
ANR	147413	Symbol	conn_cache		146290						
ANR	147414	Symbol	setinterface		146290						
ANR	147415	Symbol	& dst_addr		146290						
ANR	147416	Symbol	buf -> len		146290						
ANR	147417	Symbol	server_ctx -> fd		146290						
ANR	147418	Symbol	msg . msg_iov		146290						
ANR	147419	Symbol	control_buffer		146290						
ANR	147420	Symbol	remote_ctx -> io		146290						
ANR	147421	Symbol	create_remote_socket		146290						
ANR	147422	Symbol	tos		146290						
ANR	147423	Symbol	remote_ctx -> af		146290						
ANR	147424	Symbol	& src_addr		146290						
ANR	147425	Symbol	key		146290						
ANR	147426	Symbol	remote_addr		146290						
ANR	147427	Symbol	& remote_ctx		146290						
ANR	147428	Symbol	err		146290						
ANR	147429	Symbol	addr_header		146290						
ANR	147430	Symbol	src		146290						
ANR	147431	Symbol	remote_ctx -> addr_header		146290						
ANR	147432	Symbol	* buf -> data		146290						
ANR	147433	Symbol	server_ctx -> conn_cache		146290						
ANR	147434	Symbol	src_addr		146290						
ANR	147435	Symbol	remotefd		146290						
ANR	147436	Symbol	sockaddr_cmp		146290						
ANR	147437	Symbol	AF_INET6		146290						
ANR	147438	Symbol	verbose		146290						
ANR	147439	Symbol	remote_ctx -> src_addr		146290						
ANR	147440	Symbol	buf		146290						
ANR	147441	Symbol	s		146290						
ANR	147442	Symbol	hash_key		146290						
ANR	147443	Symbol	vpn		146290						
ANR	147444	Symbol	packet_size		146290						
ANR	147445	Symbol	w		146290						
ANR	147446	Symbol	EV_A_		146290						
ANR	147447	Symbol	ss_malloc		146290						
ANR	147448	Symbol	& tos		146290						
ANR	147449	Symbol	remote_addr_len		146290						
ANR	147450	Function	free_cb	1314:0:39307:39526							
ANR	147451	FunctionDef	"free_cb (void * key , void * element)"		147450	0					
ANR	147452	CompoundStatement		1316:0:39346:39526	147450	0					
ANR	147453	IdentifierDeclStatement	remote_ctx_t * remote_ctx = ( remote_ctx_t * ) element ;	1317:4:39352:39402	147450	0	True				
ANR	147454	IdentifierDecl	* remote_ctx = ( remote_ctx_t * ) element		147450	0					
ANR	147455	IdentifierDeclType	remote_ctx_t *		147450	0					
ANR	147456	Identifier	remote_ctx		147450	1					
ANR	147457	AssignmentExpression	* remote_ctx = ( remote_ctx_t * ) element		147450	2		=			
ANR	147458	Identifier	remote_ctx		147450	0					
ANR	147459	CastExpression	( remote_ctx_t * ) element		147450	1					
ANR	147460	CastTarget	remote_ctx_t *		147450	0					
ANR	147461	Identifier	element		147450	1					
ANR	147462	IfStatement	if ( verbose )		147450	1					
ANR	147463	Condition	verbose	1319:8:39413:39419	147450	0	True				
ANR	147464	Identifier	verbose		147450	0					
ANR	147465	CompoundStatement		4:17:75:75	147450	1					
ANR	147466	ExpressionStatement	"LOGI ( ""[udp] one connection freed"" )"	1320:8:39432:39466	147450	0	True				
ANR	147467	CallExpression	"LOGI ( ""[udp] one connection freed"" )"		147450	0					
ANR	147468	Callee	LOGI		147450	0					
ANR	147469	Identifier	LOGI		147450	0					
ANR	147470	ArgumentList	"""[udp] one connection freed"""		147450	1					
ANR	147471	Argument	"""[udp] one connection freed"""		147450	0					
ANR	147472	PrimaryExpression	"""[udp] one connection freed"""		147450	0					
ANR	147473	ExpressionStatement	"close_and_free_remote ( EV_DEFAULT , remote_ctx )"	1323:4:39479:39524	147450	2	True				
ANR	147474	CallExpression	"close_and_free_remote ( EV_DEFAULT , remote_ctx )"		147450	0					
ANR	147475	Callee	close_and_free_remote		147450	0					
ANR	147476	Identifier	close_and_free_remote		147450	0					
ANR	147477	ArgumentList	EV_DEFAULT		147450	1					
ANR	147478	Argument	EV_DEFAULT		147450	0					
ANR	147479	Identifier	EV_DEFAULT		147450	0					
ANR	147480	Argument	remote_ctx		147450	1					
ANR	147481	Identifier	remote_ctx		147450	0					
ANR	147482	ReturnType	void		147450	1					
ANR	147483	Identifier	free_cb		147450	2					
ANR	147484	ParameterList	"void * key , void * element"		147450	3					
ANR	147485	Parameter	void * key	1315:8:39320:39328	147450	0	True				
ANR	147486	ParameterType	void *		147450	0					
ANR	147487	Identifier	key		147450	1					
ANR	147488	Parameter	void * element	1315:19:39331:39343	147450	1	True				
ANR	147489	ParameterType	void *		147450	0					
ANR	147490	Identifier	element		147450	1					
ANR	147491	CFGEntryNode	ENTRY		147450		True				
ANR	147492	CFGExitNode	EXIT		147450		True				
ANR	147493	Symbol	EV_DEFAULT		147450						
ANR	147494	Symbol	remote_ctx		147450						
ANR	147495	Symbol	key		147450						
ANR	147496	Symbol	element		147450						
ANR	147497	Symbol	verbose		147450						
ANR	147498	DeclStmt									
ANR	147499	Decl							struct ev_loop	struct ev_loop *	loop
ANR	147500	DeclStmt									
ANR	147501	Decl							struct cache	struct cache *	conn_cache
ANR	147502	DeclStmt									
ANR	147503	Decl							int	int	serverfd
ANR	147504	DeclStmt									
ANR	147505	Decl							server_ctx_t	server_ctx_t *	server_ctx
ANR	147506	Function	free_udprelay	1382:0:41027:41386							
ANR	147507	FunctionDef	free_udprelay ()		147506	0					
ANR	147508	CompoundStatement		1384:0:41048:41386	147506	0					
ANR	147509	IdentifierDeclStatement	struct ev_loop * loop = EV_DEFAULT ;	1385:4:41054:41087	147506	0	True				
ANR	147510	IdentifierDecl	* loop = EV_DEFAULT		147506	0					
ANR	147511	IdentifierDeclType	struct ev_loop *		147506	0					
ANR	147512	Identifier	loop		147506	1					
ANR	147513	AssignmentExpression	* loop = EV_DEFAULT		147506	2		=			
ANR	147514	Identifier	EV_DEFAULT		147506	0					
ANR	147515	Identifier	EV_DEFAULT		147506	1					
ANR	147516	WhileStatement	while ( server_num -- > 0 )		147506	1					
ANR	147517	Condition	server_num -- > 0	1386:11:41100:41115	147506	0	True				
ANR	147518	RelationalExpression	server_num -- > 0		147506	0		>			
ANR	147519	PostIncDecOperationExpression	server_num --		147506	0					
ANR	147520	Identifier	server_num		147506	0					
ANR	147521	IncDec	--		147506	1					
ANR	147522	PrimaryExpression	0		147506	1					
ANR	147523	CompoundStatement		4:8:79:133	147506	1					
ANR	147524	IdentifierDeclStatement	server_ctx_t * server_ctx = server_ctx_list [ server_num ] ;	1387:8:41128:41182	147506	0	True				
ANR	147525	IdentifierDecl	* server_ctx = server_ctx_list [ server_num ]		147506	0					
ANR	147526	IdentifierDeclType	server_ctx_t *		147506	0					
ANR	147527	Identifier	server_ctx		147506	1					
ANR	147528	AssignmentExpression	* server_ctx = server_ctx_list [ server_num ]		147506	2		=			
ANR	147529	Identifier	server_ctx		147506	0					
ANR	147530	ArrayIndexing	server_ctx_list [ server_num ]		147506	1					
ANR	147531	Identifier	server_ctx_list		147506	0					
ANR	147532	Identifier	server_num		147506	1					
ANR	147533	ExpressionStatement	"ev_io_stop ( loop , & server_ctx -> io )"	1388:8:41192:41225	147506	1	True				
ANR	147534	CallExpression	"ev_io_stop ( loop , & server_ctx -> io )"		147506	0					
ANR	147535	Callee	ev_io_stop		147506	0					
ANR	147536	Identifier	ev_io_stop		147506	0					
ANR	147537	ArgumentList	loop		147506	1					
ANR	147538	Argument	loop		147506	0					
ANR	147539	Identifier	loop		147506	0					
ANR	147540	Argument	& server_ctx -> io		147506	1					
ANR	147541	UnaryOperationExpression	& server_ctx -> io		147506	0					
ANR	147542	UnaryOperator	&		147506	0					
ANR	147543	PtrMemberAccess	server_ctx -> io		147506	1					
ANR	147544	Identifier	server_ctx		147506	0					
ANR	147545	Identifier	io		147506	1					
ANR	147546	ExpressionStatement	close ( server_ctx -> fd )	1389:8:41235:41256	147506	2	True				
ANR	147547	CallExpression	close ( server_ctx -> fd )		147506	0					
ANR	147548	Callee	close		147506	0					
ANR	147549	Identifier	close		147506	0					
ANR	147550	ArgumentList	server_ctx -> fd		147506	1					
ANR	147551	Argument	server_ctx -> fd		147506	0					
ANR	147552	PtrMemberAccess	server_ctx -> fd		147506	0					
ANR	147553	Identifier	server_ctx		147506	0					
ANR	147554	Identifier	fd		147506	1					
ANR	147555	ExpressionStatement	"cache_delete ( server_ctx -> conn_cache , 0 )"	1390:8:41266:41305	147506	3	True				
ANR	147556	CallExpression	"cache_delete ( server_ctx -> conn_cache , 0 )"		147506	0					
ANR	147557	Callee	cache_delete		147506	0					
ANR	147558	Identifier	cache_delete		147506	0					
ANR	147559	ArgumentList	server_ctx -> conn_cache		147506	1					
ANR	147560	Argument	server_ctx -> conn_cache		147506	0					
ANR	147561	PtrMemberAccess	server_ctx -> conn_cache		147506	0					
ANR	147562	Identifier	server_ctx		147506	0					
ANR	147563	Identifier	conn_cache		147506	1					
ANR	147564	Argument	0		147506	1					
ANR	147565	PrimaryExpression	0		147506	0					
ANR	147566	ExpressionStatement	ss_free ( server_ctx )	1391:8:41315:41334	147506	4	True				
ANR	147567	CallExpression	ss_free ( server_ctx )		147506	0					
ANR	147568	Callee	ss_free		147506	0					
ANR	147569	Identifier	ss_free		147506	0					
ANR	147570	ArgumentList	server_ctx		147506	1					
ANR	147571	Argument	server_ctx		147506	0					
ANR	147572	Identifier	server_ctx		147506	0					
ANR	147573	ExpressionStatement	server_ctx_list [ server_num ] = NULL	1392:8:41344:41378	147506	5	True				
ANR	147574	AssignmentExpression	server_ctx_list [ server_num ] = NULL		147506	0		=			
ANR	147575	ArrayIndexing	server_ctx_list [ server_num ]		147506	0					
ANR	147576	Identifier	server_ctx_list		147506	0					
ANR	147577	Identifier	server_num		147506	1					
ANR	147578	Identifier	NULL		147506	1					
ANR	147579	ReturnType	void		147506	1					
ANR	147580	Identifier	free_udprelay		147506	2					
ANR	147581	ParameterList			147506	3					
ANR	147582	CFGEntryNode	ENTRY		147506		True				
ANR	147583	CFGExitNode	EXIT		147506		True				
ANR	147584	Symbol	NULL		147506						
ANR	147585	Symbol	EV_DEFAULT		147506						
ANR	147586	Symbol	server_ctx		147506						
ANR	147587	Symbol	server_ctx -> fd		147506						
ANR	147588	Symbol	server_num		147506						
ANR	147589	Symbol	& server_ctx -> io		147506						
ANR	147590	Symbol	loop		147506						
ANR	147591	Symbol	server_ctx -> conn_cache		147506						
ANR	147592	Symbol	server_ctx_list		147506						
ANR	147593	Symbol	* server_ctx_list		147506						
ANR	147594	Symbol	* server_ctx		147506						
ANR	147595	Symbol	* server_num		147506						
