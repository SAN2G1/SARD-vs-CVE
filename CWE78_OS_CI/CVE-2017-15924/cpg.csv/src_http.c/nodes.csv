command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	66649	File	data/converged/CVE-2017-15924_shadowsocks-libev/src_http.c								
ANR	66650	DeclStmt									
ANR	66651	Decl							int	"int ( const char * , size_t , char * * )"	parse_http_header
ANR	66652	DeclStmt									
ANR	66653	Decl							int	"int ( const char * , const char * , int , char * * )"	get_header
ANR	66654	DeclStmt									
ANR	66655	Decl							int	"int ( const char * * , int * )"	next_header
ANR	66656	DeclStmt									
ANR	66657	Decl							const protocol_t	const protocol_t	http_protocol_st
ANR	66658	Function	parse_http_header	65:0:2412:3055							
ANR	66659	FunctionDef	"parse_http_header (const char * data , size_t data_len , char * * hostname)"		66658	0					
ANR	66660	CompoundStatement		67:0:2493:3055	66658	0					
ANR	66661	IdentifierDeclStatement	"int result , i ;"	68:4:2499:2512	66658	0	True				
ANR	66662	IdentifierDecl	result		66658	0					
ANR	66663	IdentifierDeclType	int		66658	0					
ANR	66664	Identifier	result		66658	1					
ANR	66665	IdentifierDecl	i		66658	1					
ANR	66666	IdentifierDeclType	int		66658	0					
ANR	66667	Identifier	i		66658	1					
ANR	66668	IfStatement	if ( hostname == NULL )		66658	1					
ANR	66669	Condition	hostname == NULL	70:8:2523:2538	66658	0	True				
ANR	66670	EqualityExpression	hostname == NULL		66658	0		==			
ANR	66671	Identifier	hostname		66658	0					
ANR	66672	Identifier	NULL		66658	1					
ANR	66673	ReturnStatement	return - 3 ;	71:8:2549:2558	66658	1	True				
ANR	66674	UnaryOperationExpression	- 3		66658	0					
ANR	66675	UnaryOperator	-		66658	0					
ANR	66676	PrimaryExpression	3		66658	1					
ANR	66677	IfStatement	if ( data_len == 0 )		66658	2					
ANR	66678	Condition	data_len == 0	73:8:2569:2581	66658	0	True				
ANR	66679	EqualityExpression	data_len == 0		66658	0		==			
ANR	66680	Identifier	data_len		66658	0					
ANR	66681	PrimaryExpression	0		66658	1					
ANR	66682	ReturnStatement	return - 1 ;	74:8:2592:2601	66658	1	True				
ANR	66683	UnaryOperationExpression	- 1		66658	0					
ANR	66684	UnaryOperator	-		66658	0					
ANR	66685	PrimaryExpression	1		66658	1					
ANR	66686	ExpressionStatement	"result = get_header ( ""Host:"" , data , data_len , hostname )"	76:4:2608:2662	66658	3	True				
ANR	66687	AssignmentExpression	"result = get_header ( ""Host:"" , data , data_len , hostname )"		66658	0		=			
ANR	66688	Identifier	result		66658	0					
ANR	66689	CallExpression	"get_header ( ""Host:"" , data , data_len , hostname )"		66658	1					
ANR	66690	Callee	get_header		66658	0					
ANR	66691	Identifier	get_header		66658	0					
ANR	66692	ArgumentList	"""Host:"""		66658	1					
ANR	66693	Argument	"""Host:"""		66658	0					
ANR	66694	PrimaryExpression	"""Host:"""		66658	0					
ANR	66695	Argument	data		66658	1					
ANR	66696	Identifier	data		66658	0					
ANR	66697	Argument	data_len		66658	2					
ANR	66698	Identifier	data_len		66658	0					
ANR	66699	Argument	hostname		66658	3					
ANR	66700	Identifier	hostname		66658	0					
ANR	66701	IfStatement	if ( result < 0 )		66658	4					
ANR	66702	Condition	result < 0	77:8:2672:2681	66658	0	True				
ANR	66703	RelationalExpression	result < 0		66658	0		<			
ANR	66704	Identifier	result		66658	0					
ANR	66705	PrimaryExpression	0		66658	1					
ANR	66706	ReturnStatement	return result ;	78:8:2692:2705	66658	1	True				
ANR	66707	Identifier	result		66658	0					
ANR	66708	ForStatement	for ( i = result - 1 ; i >= 0 ; i -- )		66658	5					
ANR	66709	ForInit	i = result - 1 ;	85:9:2873:2887	66658	0	True				
ANR	66710	AssignmentExpression	i = result - 1		66658	0		=			
ANR	66711	Identifier	i		66658	0					
ANR	66712	AdditiveExpression	result - 1		66658	1		-			
ANR	66713	Identifier	result		66658	0					
ANR	66714	PrimaryExpression	1		66658	1					
ANR	66715	Condition	i >= 0	85:25:2889:2894	66658	1	True				
ANR	66716	RelationalExpression	i >= 0		66658	0		>=			
ANR	66717	Identifier	i		66658	0					
ANR	66718	PrimaryExpression	0		66658	1					
ANR	66719	PostIncDecOperationExpression	i --	85:33:2897:2899	66658	2	True				
ANR	66720	Identifier	i		66658	0					
ANR	66721	IncDec	--		66658	1					
ANR	66722	IfStatement	if ( ( * hostname ) [ i ] == ':' )		66658	3					
ANR	66723	Condition	( * hostname ) [ i ] == ':'	86:12:2914:2934	66658	0	True				
ANR	66724	EqualityExpression	( * hostname ) [ i ] == ':'		66658	0		==			
ANR	66725	ArrayIndexing	( * hostname ) [ i ]		66658	0					
ANR	66726	UnaryOperationExpression	* hostname		66658	0					
ANR	66727	UnaryOperator	*		66658	0					
ANR	66728	Identifier	hostname		66658	1					
ANR	66729	Identifier	i		66658	1					
ANR	66730	PrimaryExpression	':'		66658	1					
ANR	66731	CompoundStatement		20:35:443:443	66658	1					
ANR	66732	ExpressionStatement	( * hostname ) [ i ] = '\\0'	87:12:2951:2972	66658	0	True				
ANR	66733	AssignmentExpression	( * hostname ) [ i ] = '\\0'		66658	0		=			
ANR	66734	ArrayIndexing	( * hostname ) [ i ]		66658	0					
ANR	66735	UnaryOperationExpression	* hostname		66658	0					
ANR	66736	UnaryOperator	*		66658	0					
ANR	66737	Identifier	hostname		66658	1					
ANR	66738	Identifier	i		66658	1					
ANR	66739	PrimaryExpression	'\\0'		66658	1					
ANR	66740	ExpressionStatement	result = i	88:12:2986:3004	66658	1	True				
ANR	66741	AssignmentExpression	result = i		66658	0		=			
ANR	66742	Identifier	result		66658	0					
ANR	66743	Identifier	i		66658	1					
ANR	66744	BreakStatement	break ;	89:12:3018:3023	66658	2	True				
ANR	66745	ReturnStatement	return result ;	92:4:3040:3053	66658	6	True				
ANR	66746	Identifier	result		66658	0					
ANR	66747	ReturnType	static int		66658	1					
ANR	66748	Identifier	parse_http_header		66658	2					
ANR	66749	ParameterList	"const char * data , size_t data_len , char * * hostname"		66658	3					
ANR	66750	Parameter	const char * data	66:18:2441:2456	66658	0	True				
ANR	66751	ParameterType	const char *		66658	0					
ANR	66752	Identifier	data		66658	1					
ANR	66753	Parameter	size_t data_len	66:36:2459:2473	66658	1	True				
ANR	66754	ParameterType	size_t		66658	0					
ANR	66755	Identifier	data_len		66658	1					
ANR	66756	Parameter	char * * hostname	66:53:2476:2490	66658	2	True				
ANR	66757	ParameterType	char * *		66658	0					
ANR	66758	Identifier	hostname		66658	1					
ANR	66759	CFGEntryNode	ENTRY		66658		True				
ANR	66760	CFGExitNode	EXIT		66658		True				
ANR	66761	Symbol	result		66658						
ANR	66762	Symbol	hostname		66658						
ANR	66763	Symbol	* hostname		66658						
ANR	66764	Symbol	NULL		66658						
ANR	66765	Symbol	* i		66658						
ANR	66766	Symbol	data		66658						
ANR	66767	Symbol	data_len		66658						
ANR	66768	Symbol	* * hostname		66658						
ANR	66769	Symbol	i		66658						
ANR	66770	Symbol	get_header		66658						
ANR	66771	Function	get_header	95:0:3058:4029							
ANR	66772	FunctionDef	"get_header (const char * header , const char * data , int data_len , char * * value)"		66771	0					
ANR	66773	CompoundStatement		97:0:3146:4029	66771	0					
ANR	66774	IdentifierDeclStatement	"int len , header_len ;"	98:4:3152:3171	66771	0	True				
ANR	66775	IdentifierDecl	len		66771	0					
ANR	66776	IdentifierDeclType	int		66771	0					
ANR	66777	Identifier	len		66771	1					
ANR	66778	IdentifierDecl	header_len		66771	1					
ANR	66779	IdentifierDeclType	int		66771	0					
ANR	66780	Identifier	header_len		66771	1					
ANR	66781	ExpressionStatement	header_len = strlen ( header )	100:4:3178:3205	66771	1	True				
ANR	66782	AssignmentExpression	header_len = strlen ( header )		66771	0		=			
ANR	66783	Identifier	header_len		66771	0					
ANR	66784	CallExpression	strlen ( header )		66771	1					
ANR	66785	Callee	strlen		66771	0					
ANR	66786	Identifier	strlen		66771	0					
ANR	66787	ArgumentList	header		66771	1					
ANR	66788	Argument	header		66771	0					
ANR	66789	Identifier	header		66771	0					
ANR	66790	WhileStatement	"while ( ( len = next_header ( & data , & data_len ) ) != 0 )"		66771	2					
ANR	66791	Condition	"( len = next_header ( & data , & data_len ) ) != 0"	103:11:3279:3320	66771	0	True				
ANR	66792	EqualityExpression	"( len = next_header ( & data , & data_len ) ) != 0"		66771	0		!=			
ANR	66793	AssignmentExpression	"len = next_header ( & data , & data_len )"		66771	0		=			
ANR	66794	Identifier	len		66771	0					
ANR	66795	CallExpression	"next_header ( & data , & data_len )"		66771	1					
ANR	66796	Callee	next_header		66771	0					
ANR	66797	Identifier	next_header		66771	0					
ANR	66798	ArgumentList	& data		66771	1					
ANR	66799	Argument	& data		66771	0					
ANR	66800	UnaryOperationExpression	& data		66771	0					
ANR	66801	UnaryOperator	&		66771	0					
ANR	66802	Identifier	data		66771	1					
ANR	66803	Argument	& data_len		66771	1					
ANR	66804	UnaryOperationExpression	& data_len		66771	0					
ANR	66805	UnaryOperator	&		66771	0					
ANR	66806	Identifier	data_len		66771	1					
ANR	66807	PrimaryExpression	0		66771	1					
ANR	66808	IfStatement	"if ( len > header_len && strncasecmp ( header , data , header_len ) == 0 )"		66771	1					
ANR	66809	Condition	"len > header_len && strncasecmp ( header , data , header_len ) == 0"	104:12:3335:3396	66771	0	True				
ANR	66810	AndExpression	"len > header_len && strncasecmp ( header , data , header_len ) == 0"		66771	0		&&			
ANR	66811	RelationalExpression	len > header_len		66771	0		>			
ANR	66812	Identifier	len		66771	0					
ANR	66813	Identifier	header_len		66771	1					
ANR	66814	EqualityExpression	"strncasecmp ( header , data , header_len ) == 0"		66771	1		==			
ANR	66815	CallExpression	"strncasecmp ( header , data , header_len )"		66771	0					
ANR	66816	Callee	strncasecmp		66771	0					
ANR	66817	Identifier	strncasecmp		66771	0					
ANR	66818	ArgumentList	header		66771	1					
ANR	66819	Argument	header		66771	0					
ANR	66820	Identifier	header		66771	0					
ANR	66821	Argument	data		66771	1					
ANR	66822	Identifier	data		66771	0					
ANR	66823	Argument	header_len		66771	2					
ANR	66824	Identifier	header_len		66771	0					
ANR	66825	PrimaryExpression	0		66771	1					
ANR	66826	CompoundStatement		8:76:252:252	66771	1					
ANR	66827	WhileStatement	while ( header_len < len && isblank ( ( unsigned char ) data [ header_len ] ) )		66771	0					
ANR	66828	Condition	header_len < len && isblank ( ( unsigned char ) data [ header_len ] )	106:19:3461:3520	66771	0	True				
ANR	66829	AndExpression	header_len < len && isblank ( ( unsigned char ) data [ header_len ] )		66771	0		&&			
ANR	66830	RelationalExpression	header_len < len		66771	0		<			
ANR	66831	Identifier	header_len		66771	0					
ANR	66832	Identifier	len		66771	1					
ANR	66833	CallExpression	isblank ( ( unsigned char ) data [ header_len ] )		66771	1					
ANR	66834	Callee	isblank		66771	0					
ANR	66835	Identifier	isblank		66771	0					
ANR	66836	ArgumentList	( unsigned char ) data [ header_len ]		66771	1					
ANR	66837	Argument	( unsigned char ) data [ header_len ]		66771	0					
ANR	66838	CastExpression	( unsigned char ) data [ header_len ]		66771	0					
ANR	66839	CastTarget	unsigned char		66771	0					
ANR	66840	ArrayIndexing	data [ header_len ]		66771	1					
ANR	66841	Identifier	data		66771	0					
ANR	66842	Identifier	header_len		66771	1					
ANR	66843	ExpressionStatement	header_len ++	107:16:3539:3551	66771	1	True				
ANR	66844	PostIncDecOperationExpression	header_len ++		66771	0					
ANR	66845	Identifier	header_len		66771	0					
ANR	66846	IncDec	++		66771	1					
ANR	66847	ExpressionStatement	* value = malloc ( len - header_len + 1 )	109:12:3566:3603	66771	1	True				
ANR	66848	AssignmentExpression	* value = malloc ( len - header_len + 1 )		66771	0		=			
ANR	66849	UnaryOperationExpression	* value		66771	0					
ANR	66850	UnaryOperator	*		66771	0					
ANR	66851	Identifier	value		66771	1					
ANR	66852	CallExpression	malloc ( len - header_len + 1 )		66771	1					
ANR	66853	Callee	malloc		66771	0					
ANR	66854	Identifier	malloc		66771	0					
ANR	66855	ArgumentList	len - header_len + 1		66771	1					
ANR	66856	Argument	len - header_len + 1		66771	0					
ANR	66857	AdditiveExpression	len - header_len + 1		66771	0		-			
ANR	66858	Identifier	len		66771	0					
ANR	66859	AdditiveExpression	header_len + 1		66771	1		+			
ANR	66860	Identifier	header_len		66771	0					
ANR	66861	PrimaryExpression	1		66771	1					
ANR	66862	IfStatement	if ( * value == NULL )		66771	2					
ANR	66863	Condition	* value == NULL	110:16:3621:3634	66771	0	True				
ANR	66864	EqualityExpression	* value == NULL		66771	0		==			
ANR	66865	UnaryOperationExpression	* value		66771	0					
ANR	66866	UnaryOperator	*		66771	0					
ANR	66867	Identifier	value		66771	1					
ANR	66868	Identifier	NULL		66771	1					
ANR	66869	ReturnStatement	return - 4 ;	111:16:3653:3662	66771	1	True				
ANR	66870	UnaryOperationExpression	- 4		66771	0					
ANR	66871	UnaryOperator	-		66771	0					
ANR	66872	PrimaryExpression	4		66771	1					
ANR	66873	ExpressionStatement	"strncpy ( * value , data + header_len , len - header_len )"	113:12:3677:3729	66771	3	True				
ANR	66874	CallExpression	"strncpy ( * value , data + header_len , len - header_len )"		66771	0					
ANR	66875	Callee	strncpy		66771	0					
ANR	66876	Identifier	strncpy		66771	0					
ANR	66877	ArgumentList	* value		66771	1					
ANR	66878	Argument	* value		66771	0					
ANR	66879	UnaryOperationExpression	* value		66771	0					
ANR	66880	UnaryOperator	*		66771	0					
ANR	66881	Identifier	value		66771	1					
ANR	66882	Argument	data + header_len		66771	1					
ANR	66883	AdditiveExpression	data + header_len		66771	0		+			
ANR	66884	Identifier	data		66771	0					
ANR	66885	Identifier	header_len		66771	1					
ANR	66886	Argument	len - header_len		66771	2					
ANR	66887	AdditiveExpression	len - header_len		66771	0		-			
ANR	66888	Identifier	len		66771	0					
ANR	66889	Identifier	header_len		66771	1					
ANR	66890	ExpressionStatement	( * value ) [ len - header_len ] = '\\0'	114:12:3743:3776	66771	4	True				
ANR	66891	AssignmentExpression	( * value ) [ len - header_len ] = '\\0'		66771	0		=			
ANR	66892	ArrayIndexing	( * value ) [ len - header_len ]		66771	0					
ANR	66893	UnaryOperationExpression	* value		66771	0					
ANR	66894	UnaryOperator	*		66771	0					
ANR	66895	Identifier	value		66771	1					
ANR	66896	AdditiveExpression	len - header_len		66771	1		-			
ANR	66897	Identifier	len		66771	0					
ANR	66898	Identifier	header_len		66771	1					
ANR	66899	PrimaryExpression	'\\0'		66771	1					
ANR	66900	ReturnStatement	return len - header_len ;	116:12:3791:3814	66771	5	True				
ANR	66901	AdditiveExpression	len - header_len		66771	0		-			
ANR	66902	Identifier	len		66771	0					
ANR	66903	Identifier	header_len		66771	1					
ANR	66904	IfStatement	if ( data_len == 0 )		66771	3					
ANR	66905	Condition	data_len == 0	121:8:3979:3991	66771	0	True				
ANR	66906	EqualityExpression	data_len == 0		66771	0		==			
ANR	66907	Identifier	data_len		66771	0					
ANR	66908	PrimaryExpression	0		66771	1					
ANR	66909	ReturnStatement	return - 1 ;	122:8:4002:4011	66771	1	True				
ANR	66910	UnaryOperationExpression	- 1		66771	0					
ANR	66911	UnaryOperator	-		66771	0					
ANR	66912	PrimaryExpression	1		66771	1					
ANR	66913	ReturnStatement	return - 2 ;	124:4:4018:4027	66771	4	True				
ANR	66914	UnaryOperationExpression	- 2		66771	0					
ANR	66915	UnaryOperator	-		66771	0					
ANR	66916	PrimaryExpression	2		66771	1					
ANR	66917	ReturnType	static int		66771	1					
ANR	66918	Identifier	get_header		66771	2					
ANR	66919	ParameterList	"const char * header , const char * data , int data_len , char * * value"		66771	3					
ANR	66920	Parameter	const char * header	96:11:3080:3097	66771	0	True				
ANR	66921	ParameterType	const char *		66771	0					
ANR	66922	Identifier	header		66771	1					
ANR	66923	Parameter	const char * data	96:31:3100:3115	66771	1	True				
ANR	66924	ParameterType	const char *		66771	0					
ANR	66925	Identifier	data		66771	1					
ANR	66926	Parameter	int data_len	96:49:3118:3129	66771	2	True				
ANR	66927	ParameterType	int		66771	0					
ANR	66928	Identifier	data_len		66771	1					
ANR	66929	Parameter	char * * value	96:63:3132:3143	66771	3	True				
ANR	66930	ParameterType	char * *		66771	0					
ANR	66931	Identifier	value		66771	1					
ANR	66932	CFGEntryNode	ENTRY		66771		True				
ANR	66933	CFGExitNode	EXIT		66771		True				
ANR	66934	Symbol	header_len		66771						
ANR	66935	Symbol	malloc		66771						
ANR	66936	Symbol	NULL		66771						
ANR	66937	Symbol	data		66771						
ANR	66938	Symbol	& data_len		66771						
ANR	66939	Symbol	next_header		66771						
ANR	66940	Symbol	* header_len		66771						
ANR	66941	Symbol	data_len		66771						
ANR	66942	Symbol	strncasecmp		66771						
ANR	66943	Symbol	* * value		66771						
ANR	66944	Symbol	isblank		66771						
ANR	66945	Symbol	& data		66771						
ANR	66946	Symbol	strlen		66771						
ANR	66947	Symbol	len		66771						
ANR	66948	Symbol	* value		66771						
ANR	66949	Symbol	header		66771						
ANR	66950	Symbol	value		66771						
ANR	66951	Symbol	* data		66771						
ANR	66952	Symbol	* len		66771						
ANR	66953	Function	next_header	127:0:4032:4690							
ANR	66954	FunctionDef	"next_header (const char * * data , int * len)"		66953	0					
ANR	66955	CompoundStatement		129:0:4084:4690	66953	0					
ANR	66956	IdentifierDeclStatement	int header_len ;	130:4:4090:4104	66953	0	True				
ANR	66957	IdentifierDecl	header_len		66953	0					
ANR	66958	IdentifierDeclType	int		66953	0					
ANR	66959	Identifier	header_len		66953	1					
ANR	66960	WhileStatement	while ( * len > 2 && ( * data ) [ 0 ] != '\\r' && ( * data ) [ 1 ] != '\\n' )		66953	1					
ANR	66961	Condition	* len > 2 && ( * data ) [ 0 ] != '\\r' && ( * data ) [ 1 ] != '\\n'	135:11:4282:4333	66953	0	True				
ANR	66962	AndExpression	* len > 2 && ( * data ) [ 0 ] != '\\r' && ( * data ) [ 1 ] != '\\n'		66953	0		&&			
ANR	66963	RelationalExpression	* len > 2		66953	0		>			
ANR	66964	UnaryOperationExpression	* len		66953	0					
ANR	66965	UnaryOperator	*		66953	0					
ANR	66966	Identifier	len		66953	1					
ANR	66967	PrimaryExpression	2		66953	1					
ANR	66968	AndExpression	( * data ) [ 0 ] != '\\r' && ( * data ) [ 1 ] != '\\n'		66953	1		&&			
ANR	66969	EqualityExpression	( * data ) [ 0 ] != '\\r'		66953	0		!=			
ANR	66970	ArrayIndexing	( * data ) [ 0 ]		66953	0					
ANR	66971	UnaryOperationExpression	* data		66953	0					
ANR	66972	UnaryOperator	*		66953	0					
ANR	66973	Identifier	data		66953	1					
ANR	66974	PrimaryExpression	0		66953	1					
ANR	66975	PrimaryExpression	'\\r'		66953	1					
ANR	66976	EqualityExpression	( * data ) [ 1 ] != '\\n'		66953	1		!=			
ANR	66977	ArrayIndexing	( * data ) [ 1 ]		66953	0					
ANR	66978	UnaryOperationExpression	* data		66953	0					
ANR	66979	UnaryOperator	*		66953	0					
ANR	66980	Identifier	data		66953	1					
ANR	66981	PrimaryExpression	1		66953	1					
ANR	66982	PrimaryExpression	'\\n'		66953	1					
ANR	66983	CompoundStatement		7:65:251:251	66953	1					
ANR	66984	ExpressionStatement	( * len ) --	136:8:4346:4354	66953	0	True				
ANR	66985	PostIncDecOperationExpression	( * len ) --		66953	0					
ANR	66986	UnaryOperationExpression	* len		66953	0					
ANR	66987	UnaryOperator	*		66953	0					
ANR	66988	Identifier	len		66953	1					
ANR	66989	IncDec	--		66953	1					
ANR	66990	ExpressionStatement	( * data ) ++	137:8:4364:4373	66953	1	True				
ANR	66991	PostIncDecOperationExpression	( * data ) ++		66953	0					
ANR	66992	UnaryOperationExpression	* data		66953	0					
ANR	66993	UnaryOperator	*		66953	0					
ANR	66994	Identifier	data		66953	1					
ANR	66995	IncDec	++		66953	1					
ANR	66996	ExpressionStatement	* data += 2	141:4:4428:4438	66953	2	True				
ANR	66997	AssignmentExpression	* data += 2		66953	0		+=			
ANR	66998	UnaryOperationExpression	* data		66953	0					
ANR	66999	UnaryOperator	*		66953	0					
ANR	67000	Identifier	data		66953	1					
ANR	67001	PrimaryExpression	2		66953	1					
ANR	67002	ExpressionStatement	* len -= 2	142:4:4444:4454	66953	3	True				
ANR	67003	AssignmentExpression	* len -= 2		66953	0		-=			
ANR	67004	UnaryOperationExpression	* len		66953	0					
ANR	67005	UnaryOperator	*		66953	0					
ANR	67006	Identifier	len		66953	1					
ANR	67007	PrimaryExpression	2		66953	1					
ANR	67008	ExpressionStatement	header_len = 0	145:4:4506:4520	66953	4	True				
ANR	67009	AssignmentExpression	header_len = 0		66953	0		=			
ANR	67010	Identifier	header_len		66953	0					
ANR	67011	PrimaryExpression	0		66953	1					
ANR	67012	WhileStatement	while ( * len > header_len + 1 && ( * data ) [ header_len ] != '\\r' && ( * data ) [ header_len + 1 ] != '\\n' )		66953	5					
ANR	67013	Condition	* len > header_len + 1 && ( * data ) [ header_len ] != '\\r' && ( * data ) [ header_len + 1 ] != '\\n'	146:11:4533:4641	66953	0	True				
ANR	67014	AndExpression	* len > header_len + 1 && ( * data ) [ header_len ] != '\\r' && ( * data ) [ header_len + 1 ] != '\\n'		66953	0		&&			
ANR	67015	RelationalExpression	* len > header_len + 1		66953	0		>			
ANR	67016	UnaryOperationExpression	* len		66953	0					
ANR	67017	UnaryOperator	*		66953	0					
ANR	67018	Identifier	len		66953	1					
ANR	67019	AdditiveExpression	header_len + 1		66953	1		+			
ANR	67020	Identifier	header_len		66953	0					
ANR	67021	PrimaryExpression	1		66953	1					
ANR	67022	AndExpression	( * data ) [ header_len ] != '\\r' && ( * data ) [ header_len + 1 ] != '\\n'		66953	1		&&			
ANR	67023	EqualityExpression	( * data ) [ header_len ] != '\\r'		66953	0		!=			
ANR	67024	ArrayIndexing	( * data ) [ header_len ]		66953	0					
ANR	67025	UnaryOperationExpression	* data		66953	0					
ANR	67026	UnaryOperator	*		66953	0					
ANR	67027	Identifier	data		66953	1					
ANR	67028	Identifier	header_len		66953	1					
ANR	67029	PrimaryExpression	'\\r'		66953	1					
ANR	67030	EqualityExpression	( * data ) [ header_len + 1 ] != '\\n'		66953	1		!=			
ANR	67031	ArrayIndexing	( * data ) [ header_len + 1 ]		66953	0					
ANR	67032	UnaryOperationExpression	* data		66953	0					
ANR	67033	UnaryOperator	*		66953	0					
ANR	67034	Identifier	data		66953	1					
ANR	67035	AdditiveExpression	header_len + 1		66953	1		+			
ANR	67036	Identifier	header_len		66953	0					
ANR	67037	PrimaryExpression	1		66953	1					
ANR	67038	PrimaryExpression	'\\n'		66953	1					
ANR	67039	ExpressionStatement	header_len ++	149:8:4652:4664	66953	1	True				
ANR	67040	PostIncDecOperationExpression	header_len ++		66953	0					
ANR	67041	Identifier	header_len		66953	0					
ANR	67042	IncDec	++		66953	1					
ANR	67043	ReturnStatement	return header_len ;	151:4:4671:4688	66953	6	True				
ANR	67044	Identifier	header_len		66953	0					
ANR	67045	ReturnType	static int		66953	1					
ANR	67046	Identifier	next_header		66953	2					
ANR	67047	ParameterList	"const char * * data , int * len"		66953	3					
ANR	67048	Parameter	const char * * data	128:12:4055:4071	66953	0	True				
ANR	67049	ParameterType	const char * *		66953	0					
ANR	67050	Identifier	data		66953	1					
ANR	67051	Parameter	int * len	128:31:4074:4081	66953	1	True				
ANR	67052	ParameterType	int *		66953	0					
ANR	67053	Identifier	len		66953	1					
ANR	67054	CFGEntryNode	ENTRY		66953		True				
ANR	67055	CFGExitNode	EXIT		66953		True				
ANR	67056	Symbol	header_len		66953						
ANR	67057	Symbol	* * data		66953						
ANR	67058	Symbol	data		66953						
ANR	67059	Symbol	len		66953						
ANR	67060	Symbol	* header_len		66953						
ANR	67061	Symbol	* data		66953						
ANR	67062	Symbol	* len		66953						
