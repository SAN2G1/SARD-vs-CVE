command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	118096	File	data/converged/CVE-2017-15924_shadowsocks-libev/src_tunnel.c								
ANR	118097	DeclStmt									
ANR	118098	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	accept_cb
ANR	118099	DeclStmt									
ANR	118100	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	server_recv_cb
ANR	118101	DeclStmt									
ANR	118102	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	server_send_cb
ANR	118103	DeclStmt									
ANR	118104	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	remote_recv_cb
ANR	118105	DeclStmt									
ANR	118106	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	remote_send_cb
ANR	118107	DeclStmt									
ANR	118108	Decl							remote_t	"remote_t * ( int fd , int timeout )"	new_remote
ANR	118109	DeclStmt									
ANR	118110	Decl							server_t	server_t * ( int fd )	new_server
ANR	118111	DeclStmt									
ANR	118112	Decl							void	void ( remote_t * remote )	free_remote
ANR	118113	DeclStmt									
ANR	118114	Decl							void	void ( EV_P_ remote_t * remote )	close_and_free_remote
ANR	118115	DeclStmt									
ANR	118116	Decl							void	void ( server_t * server )	free_server
ANR	118117	DeclStmt									
ANR	118118	Decl							void	void ( EV_P_ server_t * server )	close_and_free_server
ANR	118119	DeclStmt									
ANR	118120	Decl							int	int	vpn
ANR	118121	DeclStmt									
ANR	118122	Decl							int	int	verbose
ANR	118123	DeclStmt									
ANR	118124	Decl							int	int	reuse_port
ANR	118125	DeclStmt									
ANR	118126	Decl							int	int	keep_resolving
ANR	118127	DeclStmt									
ANR	118128	Decl							crypto_t	crypto_t *	crypto
ANR	118129	DeclStmt									
ANR	118130	Decl							int	int	ipv6first
ANR	118131	DeclStmt									
ANR	118132	Decl							int	int	mode
ANR	118133	DeclStmt									
ANR	118134	Decl							int	int	nofile
ANR	118135	DeclStmt									
ANR	118136	Decl							int	int	no_delay
ANR	118137	DeclStmt									
ANR	118138	Decl							struct ev_signal	struct ev_signal	sigint_watcher
ANR	118139	DeclStmt									
ANR	118140	Decl							struct ev_signal	struct ev_signal	sigterm_watcher
ANR	118141	DeclStmt									
ANR	118142	Decl							struct ev_signal	struct ev_signal	sigchld_watcher
ANR	118143	Function	setnonblocking	103:0:2611:2787							
ANR	118144	FunctionDef	setnonblocking (int fd)		118143	0					
ANR	118145	CompoundStatement		105:0:2645:2787	118143	0					
ANR	118146	IdentifierDeclStatement	int flags ;	106:4:2651:2660	118143	0	True				
ANR	118147	IdentifierDecl	flags		118143	0					
ANR	118148	IdentifierDeclType	int		118143	0					
ANR	118149	Identifier	flags		118143	1					
ANR	118150	IfStatement	"if ( - 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) ) )"		118143	1					
ANR	118151	Condition	"- 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) )"	107:8:2670:2706	118143	0	True				
ANR	118152	EqualityExpression	"- 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) )"		118143	0		==			
ANR	118153	UnaryOperationExpression	- 1		118143	0					
ANR	118154	UnaryOperator	-		118143	0					
ANR	118155	PrimaryExpression	1		118143	1					
ANR	118156	AssignmentExpression	"flags = fcntl ( fd , F_GETFL , 0 )"		118143	1		=			
ANR	118157	Identifier	flags		118143	0					
ANR	118158	CallExpression	"fcntl ( fd , F_GETFL , 0 )"		118143	1					
ANR	118159	Callee	fcntl		118143	0					
ANR	118160	Identifier	fcntl		118143	0					
ANR	118161	ArgumentList	fd		118143	1					
ANR	118162	Argument	fd		118143	0					
ANR	118163	Identifier	fd		118143	0					
ANR	118164	Argument	F_GETFL		118143	1					
ANR	118165	Identifier	F_GETFL		118143	0					
ANR	118166	Argument	0		118143	2					
ANR	118167	PrimaryExpression	0		118143	0					
ANR	118168	CompoundStatement		3:47:63:63	118143	1					
ANR	118169	ExpressionStatement	flags = 0	108:8:2719:2728	118143	0	True				
ANR	118170	AssignmentExpression	flags = 0		118143	0		=			
ANR	118171	Identifier	flags		118143	0					
ANR	118172	PrimaryExpression	0		118143	1					
ANR	118173	ReturnStatement	"return fcntl ( fd , F_SETFL , flags | O_NONBLOCK ) ;"	110:4:2740:2785	118143	2	True				
ANR	118174	CallExpression	"fcntl ( fd , F_SETFL , flags | O_NONBLOCK )"		118143	0					
ANR	118175	Callee	fcntl		118143	0					
ANR	118176	Identifier	fcntl		118143	0					
ANR	118177	ArgumentList	fd		118143	1					
ANR	118178	Argument	fd		118143	0					
ANR	118179	Identifier	fd		118143	0					
ANR	118180	Argument	F_SETFL		118143	1					
ANR	118181	Identifier	F_SETFL		118143	0					
ANR	118182	Argument	flags | O_NONBLOCK		118143	2					
ANR	118183	InclusiveOrExpression	flags | O_NONBLOCK		118143	0		|			
ANR	118184	Identifier	flags		118143	0					
ANR	118185	Identifier	O_NONBLOCK		118143	1					
ANR	118186	ReturnType	static int		118143	1					
ANR	118187	Identifier	setnonblocking		118143	2					
ANR	118188	ParameterList	int fd		118143	3					
ANR	118189	Parameter	int fd	104:15:2637:2642	118143	0	True				
ANR	118190	ParameterType	int		118143	0					
ANR	118191	Identifier	fd		118143	1					
ANR	118192	CFGEntryNode	ENTRY		118143		True				
ANR	118193	CFGExitNode	EXIT		118143		True				
ANR	118194	Symbol	fcntl		118143						
ANR	118195	Symbol	O_NONBLOCK		118143						
ANR	118196	Symbol	flags		118143						
ANR	118197	Symbol	F_GETFL		118143						
ANR	118198	Symbol	F_SETFL		118143						
ANR	118199	Symbol	fd		118143						
ANR	118200	Function	create_and_bind	113:0:2790:4266							
ANR	118201	FunctionDef	"create_and_bind (const char * addr , const char * port)"		118200	0					
ANR	118202	CompoundStatement		115:0:2846:4266	118200	0					
ANR	118203	IdentifierDeclStatement	struct addrinfo hints ;	116:4:2852:2873	118200	0	True				
ANR	118204	IdentifierDecl	hints		118200	0					
ANR	118205	IdentifierDeclType	struct addrinfo		118200	0					
ANR	118206	Identifier	hints		118200	1					
ANR	118207	IdentifierDeclStatement	"struct addrinfo * result , * rp ;"	117:4:2879:2907	118200	1	True				
ANR	118208	IdentifierDecl	* result		118200	0					
ANR	118209	IdentifierDeclType	struct addrinfo *		118200	0					
ANR	118210	Identifier	result		118200	1					
ANR	118211	IdentifierDecl	* rp		118200	1					
ANR	118212	IdentifierDeclType	struct addrinfo *		118200	0					
ANR	118213	Identifier	rp		118200	1					
ANR	118214	IdentifierDeclStatement	"int s , listen_sock ;"	118:4:2913:2931	118200	2	True				
ANR	118215	IdentifierDecl	s		118200	0					
ANR	118216	IdentifierDeclType	int		118200	0					
ANR	118217	Identifier	s		118200	1					
ANR	118218	IdentifierDecl	listen_sock		118200	1					
ANR	118219	IdentifierDeclType	int		118200	0					
ANR	118220	Identifier	listen_sock		118200	1					
ANR	118221	ExpressionStatement	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"	120:4:2938:2980	118200	3	True				
ANR	118222	CallExpression	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"		118200	0					
ANR	118223	Callee	memset		118200	0					
ANR	118224	Identifier	memset		118200	0					
ANR	118225	ArgumentList	& hints		118200	1					
ANR	118226	Argument	& hints		118200	0					
ANR	118227	UnaryOperationExpression	& hints		118200	0					
ANR	118228	UnaryOperator	&		118200	0					
ANR	118229	Identifier	hints		118200	1					
ANR	118230	Argument	0		118200	1					
ANR	118231	PrimaryExpression	0		118200	0					
ANR	118232	Argument	sizeof ( struct addrinfo )		118200	2					
ANR	118233	SizeofExpression	sizeof ( struct addrinfo )		118200	0					
ANR	118234	Sizeof	sizeof		118200	0					
ANR	118235	SizeofOperand	struct addrinfo		118200	1					
ANR	118236	ExpressionStatement	hints . ai_family = AF_UNSPEC	121:4:2986:3015	118200	4	True				
ANR	118237	AssignmentExpression	hints . ai_family = AF_UNSPEC		118200	0		=			
ANR	118238	MemberAccess	hints . ai_family		118200	0					
ANR	118239	Identifier	hints		118200	0					
ANR	118240	Identifier	ai_family		118200	1					
ANR	118241	Identifier	AF_UNSPEC		118200	1					
ANR	118242	ExpressionStatement	hints . ai_socktype = SOCK_STREAM	122:4:3058:3089	118200	5	True				
ANR	118243	AssignmentExpression	hints . ai_socktype = SOCK_STREAM		118200	0		=			
ANR	118244	MemberAccess	hints . ai_socktype		118200	0					
ANR	118245	Identifier	hints		118200	0					
ANR	118246	Identifier	ai_socktype		118200	1					
ANR	118247	Identifier	SOCK_STREAM		118200	1					
ANR	118248	ExpressionStatement	result = NULL	124:4:3123:3136	118200	6	True				
ANR	118249	AssignmentExpression	result = NULL		118200	0		=			
ANR	118250	Identifier	result		118200	0					
ANR	118251	Identifier	NULL		118200	1					
ANR	118252	ExpressionStatement	"s = getaddrinfo ( addr , port , & hints , & result )"	126:4:3143:3187	118200	7	True				
ANR	118253	AssignmentExpression	"s = getaddrinfo ( addr , port , & hints , & result )"		118200	0		=			
ANR	118254	Identifier	s		118200	0					
ANR	118255	CallExpression	"getaddrinfo ( addr , port , & hints , & result )"		118200	1					
ANR	118256	Callee	getaddrinfo		118200	0					
ANR	118257	Identifier	getaddrinfo		118200	0					
ANR	118258	ArgumentList	addr		118200	1					
ANR	118259	Argument	addr		118200	0					
ANR	118260	Identifier	addr		118200	0					
ANR	118261	Argument	port		118200	1					
ANR	118262	Identifier	port		118200	0					
ANR	118263	Argument	& hints		118200	2					
ANR	118264	UnaryOperationExpression	& hints		118200	0					
ANR	118265	UnaryOperator	&		118200	0					
ANR	118266	Identifier	hints		118200	1					
ANR	118267	Argument	& result		118200	3					
ANR	118268	UnaryOperationExpression	& result		118200	0					
ANR	118269	UnaryOperator	&		118200	0					
ANR	118270	Identifier	result		118200	1					
ANR	118271	IfStatement	if ( s != 0 )		118200	8					
ANR	118272	Condition	s != 0	127:8:3197:3202	118200	0	True				
ANR	118273	EqualityExpression	s != 0		118200	0		!=			
ANR	118274	Identifier	s		118200	0					
ANR	118275	PrimaryExpression	0		118200	1					
ANR	118276	CompoundStatement		13:16:358:358	118200	1					
ANR	118277	ExpressionStatement	"LOGI ( ""getaddrinfo: %s"" , gai_strerror ( s ) )"	128:8:3215:3255	118200	0	True				
ANR	118278	CallExpression	"LOGI ( ""getaddrinfo: %s"" , gai_strerror ( s ) )"		118200	0					
ANR	118279	Callee	LOGI		118200	0					
ANR	118280	Identifier	LOGI		118200	0					
ANR	118281	ArgumentList	"""getaddrinfo: %s"""		118200	1					
ANR	118282	Argument	"""getaddrinfo: %s"""		118200	0					
ANR	118283	PrimaryExpression	"""getaddrinfo: %s"""		118200	0					
ANR	118284	Argument	gai_strerror ( s )		118200	1					
ANR	118285	CallExpression	gai_strerror ( s )		118200	0					
ANR	118286	Callee	gai_strerror		118200	0					
ANR	118287	Identifier	gai_strerror		118200	0					
ANR	118288	ArgumentList	s		118200	1					
ANR	118289	Argument	s		118200	0					
ANR	118290	Identifier	s		118200	0					
ANR	118291	ReturnStatement	return - 1 ;	129:8:3265:3274	118200	1	True				
ANR	118292	UnaryOperationExpression	- 1		118200	0					
ANR	118293	UnaryOperator	-		118200	0					
ANR	118294	PrimaryExpression	1		118200	1					
ANR	118295	IfStatement	if ( result == NULL )		118200	9					
ANR	118296	Condition	result == NULL	132:8:3291:3304	118200	0	True				
ANR	118297	EqualityExpression	result == NULL		118200	0		==			
ANR	118298	Identifier	result		118200	0					
ANR	118299	Identifier	NULL		118200	1					
ANR	118300	CompoundStatement		18:24:460:460	118200	1					
ANR	118301	ExpressionStatement	"LOGE ( ""Could not bind"" )"	133:8:3317:3339	118200	0	True				
ANR	118302	CallExpression	"LOGE ( ""Could not bind"" )"		118200	0					
ANR	118303	Callee	LOGE		118200	0					
ANR	118304	Identifier	LOGE		118200	0					
ANR	118305	ArgumentList	"""Could not bind"""		118200	1					
ANR	118306	Argument	"""Could not bind"""		118200	0					
ANR	118307	PrimaryExpression	"""Could not bind"""		118200	0					
ANR	118308	ReturnStatement	return - 1 ;	134:8:3349:3358	118200	1	True				
ANR	118309	UnaryOperationExpression	- 1		118200	0					
ANR	118310	UnaryOperator	-		118200	0					
ANR	118311	PrimaryExpression	1		118200	1					
ANR	118312	ForStatement	for ( rp = result ; rp != NULL ; rp = rp -> ai_next )		118200	10					
ANR	118313	ForInit	rp = result ;	137:9:3376:3387	118200	0	True				
ANR	118314	AssignmentExpression	rp = result		118200	0		=			
ANR	118315	Identifier	rp		118200	0					
ANR	118316	Identifier	result		118200	1					
ANR	118317	Condition	rp != NULL	137:22:3389:3398	118200	1	True				
ANR	118318	EqualityExpression	rp != NULL		118200	0		!=			
ANR	118319	Identifier	rp		118200	0					
ANR	118320	Identifier	NULL		118200	1					
ANR	118321	AssignmentExpression	rp = rp -> ai_next	137:34:3401:3416	118200	2	True	=			
ANR	118322	Identifier	rp		118200	0					
ANR	118323	PtrMemberAccess	rp -> ai_next		118200	1					
ANR	118324	Identifier	rp		118200	0					
ANR	118325	Identifier	ai_next		118200	1					
ANR	118326	CompoundStatement		29:8:727:738	118200	3					
ANR	118327	ExpressionStatement	"listen_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"	138:8:3429:3498	118200	0	True				
ANR	118328	AssignmentExpression	"listen_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		118200	0		=			
ANR	118329	Identifier	listen_sock		118200	0					
ANR	118330	CallExpression	"socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		118200	1					
ANR	118331	Callee	socket		118200	0					
ANR	118332	Identifier	socket		118200	0					
ANR	118333	ArgumentList	rp -> ai_family		118200	1					
ANR	118334	Argument	rp -> ai_family		118200	0					
ANR	118335	PtrMemberAccess	rp -> ai_family		118200	0					
ANR	118336	Identifier	rp		118200	0					
ANR	118337	Identifier	ai_family		118200	1					
ANR	118338	Argument	rp -> ai_socktype		118200	1					
ANR	118339	PtrMemberAccess	rp -> ai_socktype		118200	0					
ANR	118340	Identifier	rp		118200	0					
ANR	118341	Identifier	ai_socktype		118200	1					
ANR	118342	Argument	rp -> ai_protocol		118200	2					
ANR	118343	PtrMemberAccess	rp -> ai_protocol		118200	0					
ANR	118344	Identifier	rp		118200	0					
ANR	118345	Identifier	ai_protocol		118200	1					
ANR	118346	IfStatement	if ( listen_sock == - 1 )		118200	1					
ANR	118347	Condition	listen_sock == - 1	139:12:3512:3528	118200	0	True				
ANR	118348	EqualityExpression	listen_sock == - 1		118200	0		==			
ANR	118349	Identifier	listen_sock		118200	0					
ANR	118350	UnaryOperationExpression	- 1		118200	1					
ANR	118351	UnaryOperator	-		118200	0					
ANR	118352	PrimaryExpression	1		118200	1					
ANR	118353	CompoundStatement		25:31:684:684	118200	1					
ANR	118354	ContinueStatement	continue ;	140:12:3545:3553	118200	0	True				
ANR	118355	IdentifierDeclStatement	int opt = 1 ;	143:8:3574:3585	118200	2	True				
ANR	118356	IdentifierDecl	opt = 1		118200	0					
ANR	118357	IdentifierDeclType	int		118200	0					
ANR	118358	Identifier	opt		118200	1					
ANR	118359	AssignmentExpression	opt = 1		118200	2		=			
ANR	118360	Identifier	opt		118200	0					
ANR	118361	PrimaryExpression	1		118200	1					
ANR	118362	ExpressionStatement	"setsockopt ( listen_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"	144:8:3595:3663	118200	3	True				
ANR	118363	CallExpression	"setsockopt ( listen_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"		118200	0					
ANR	118364	Callee	setsockopt		118200	0					
ANR	118365	Identifier	setsockopt		118200	0					
ANR	118366	ArgumentList	listen_sock		118200	1					
ANR	118367	Argument	listen_sock		118200	0					
ANR	118368	Identifier	listen_sock		118200	0					
ANR	118369	Argument	SOL_SOCKET		118200	1					
ANR	118370	Identifier	SOL_SOCKET		118200	0					
ANR	118371	Argument	SO_REUSEADDR		118200	2					
ANR	118372	Identifier	SO_REUSEADDR		118200	0					
ANR	118373	Argument	& opt		118200	3					
ANR	118374	UnaryOperationExpression	& opt		118200	0					
ANR	118375	UnaryOperator	&		118200	0					
ANR	118376	Identifier	opt		118200	1					
ANR	118377	Argument	sizeof ( opt )		118200	4					
ANR	118378	SizeofExpression	sizeof ( opt )		118200	0					
ANR	118379	Sizeof	sizeof		118200	0					
ANR	118380	SizeofOperand	opt		118200	1					
ANR	118381	ExpressionStatement	"setsockopt ( listen_sock , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"	146:8:3693:3761	118200	4	True				
ANR	118382	CallExpression	"setsockopt ( listen_sock , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"		118200	0					
ANR	118383	Callee	setsockopt		118200	0					
ANR	118384	Identifier	setsockopt		118200	0					
ANR	118385	ArgumentList	listen_sock		118200	1					
ANR	118386	Argument	listen_sock		118200	0					
ANR	118387	Identifier	listen_sock		118200	0					
ANR	118388	Argument	SOL_SOCKET		118200	1					
ANR	118389	Identifier	SOL_SOCKET		118200	0					
ANR	118390	Argument	SO_NOSIGPIPE		118200	2					
ANR	118391	Identifier	SO_NOSIGPIPE		118200	0					
ANR	118392	Argument	& opt		118200	3					
ANR	118393	UnaryOperationExpression	& opt		118200	0					
ANR	118394	UnaryOperator	&		118200	0					
ANR	118395	Identifier	opt		118200	1					
ANR	118396	Argument	sizeof ( opt )		118200	4					
ANR	118397	SizeofExpression	sizeof ( opt )		118200	0					
ANR	118398	Sizeof	sizeof		118200	0					
ANR	118399	SizeofOperand	opt		118200	1					
ANR	118400	IfStatement	if ( reuse_port )		118200	5					
ANR	118401	Condition	reuse_port	148:12:3782:3791	118200	0	True				
ANR	118402	Identifier	reuse_port		118200	0					
ANR	118403	CompoundStatement		35:12:961:997	118200	1					
ANR	118404	IdentifierDeclStatement	int err = set_reuseport ( listen_sock ) ;	149:12:3808:3844	118200	0	True				
ANR	118405	IdentifierDecl	err = set_reuseport ( listen_sock )		118200	0					
ANR	118406	IdentifierDeclType	int		118200	0					
ANR	118407	Identifier	err		118200	1					
ANR	118408	AssignmentExpression	err = set_reuseport ( listen_sock )		118200	2		=			
ANR	118409	Identifier	err		118200	0					
ANR	118410	CallExpression	set_reuseport ( listen_sock )		118200	1					
ANR	118411	Callee	set_reuseport		118200	0					
ANR	118412	Identifier	set_reuseport		118200	0					
ANR	118413	ArgumentList	listen_sock		118200	1					
ANR	118414	Argument	listen_sock		118200	0					
ANR	118415	Identifier	listen_sock		118200	0					
ANR	118416	IfStatement	if ( err == 0 )		118200	1					
ANR	118417	Condition	err == 0	150:16:3862:3869	118200	0	True				
ANR	118418	EqualityExpression	err == 0		118200	0		==			
ANR	118419	Identifier	err		118200	0					
ANR	118420	PrimaryExpression	0		118200	1					
ANR	118421	CompoundStatement		36:26:1025:1025	118200	1					
ANR	118422	ExpressionStatement	"LOGI ( ""tcp port reuse enabled"" )"	151:16:3890:3920	118200	0	True				
ANR	118423	CallExpression	"LOGI ( ""tcp port reuse enabled"" )"		118200	0					
ANR	118424	Callee	LOGI		118200	0					
ANR	118425	Identifier	LOGI		118200	0					
ANR	118426	ArgumentList	"""tcp port reuse enabled"""		118200	1					
ANR	118427	Argument	"""tcp port reuse enabled"""		118200	0					
ANR	118428	PrimaryExpression	"""tcp port reuse enabled"""		118200	0					
ANR	118429	ExpressionStatement	"s = bind ( listen_sock , rp -> ai_addr , rp -> ai_addrlen )"	155:8:3955:4005	118200	6	True				
ANR	118430	AssignmentExpression	"s = bind ( listen_sock , rp -> ai_addr , rp -> ai_addrlen )"		118200	0		=			
ANR	118431	Identifier	s		118200	0					
ANR	118432	CallExpression	"bind ( listen_sock , rp -> ai_addr , rp -> ai_addrlen )"		118200	1					
ANR	118433	Callee	bind		118200	0					
ANR	118434	Identifier	bind		118200	0					
ANR	118435	ArgumentList	listen_sock		118200	1					
ANR	118436	Argument	listen_sock		118200	0					
ANR	118437	Identifier	listen_sock		118200	0					
ANR	118438	Argument	rp -> ai_addr		118200	1					
ANR	118439	PtrMemberAccess	rp -> ai_addr		118200	0					
ANR	118440	Identifier	rp		118200	0					
ANR	118441	Identifier	ai_addr		118200	1					
ANR	118442	Argument	rp -> ai_addrlen		118200	2					
ANR	118443	PtrMemberAccess	rp -> ai_addrlen		118200	0					
ANR	118444	Identifier	rp		118200	0					
ANR	118445	Identifier	ai_addrlen		118200	1					
ANR	118446	IfStatement	if ( s == 0 )		118200	7					
ANR	118447	Condition	s == 0	156:12:4019:4024	118200	0	True				
ANR	118448	EqualityExpression	s == 0		118200	0		==			
ANR	118449	Identifier	s		118200	0					
ANR	118450	PrimaryExpression	0		118200	1					
ANR	118451	CompoundStatement		42:20:1180:1180	118200	1					
ANR	118452	BreakStatement	break ;	158:12:4092:4097	118200	0	True				
ANR	118453	ElseStatement	else		118200	0					
ANR	118454	CompoundStatement		45:15:1267:1267	118200	0					
ANR	118455	ExpressionStatement	"ERROR ( ""bind"" )"	160:12:4128:4141	118200	0	True				
ANR	118456	CallExpression	"ERROR ( ""bind"" )"		118200	0					
ANR	118457	Callee	ERROR		118200	0					
ANR	118458	Identifier	ERROR		118200	0					
ANR	118459	ArgumentList	"""bind"""		118200	1					
ANR	118460	Argument	"""bind"""		118200	0					
ANR	118461	PrimaryExpression	"""bind"""		118200	0					
ANR	118462	ExpressionStatement	close ( listen_sock )	163:8:4162:4180	118200	8	True				
ANR	118463	CallExpression	close ( listen_sock )		118200	0					
ANR	118464	Callee	close		118200	0					
ANR	118465	Identifier	close		118200	0					
ANR	118466	ArgumentList	listen_sock		118200	1					
ANR	118467	Argument	listen_sock		118200	0					
ANR	118468	Identifier	listen_sock		118200	0					
ANR	118469	ExpressionStatement	listen_sock = - 1	164:8:4190:4206	118200	9	True				
ANR	118470	AssignmentExpression	listen_sock = - 1		118200	0		=			
ANR	118471	Identifier	listen_sock		118200	0					
ANR	118472	UnaryOperationExpression	- 1		118200	1					
ANR	118473	UnaryOperator	-		118200	0					
ANR	118474	PrimaryExpression	1		118200	1					
ANR	118475	ExpressionStatement	freeaddrinfo ( result )	167:4:4219:4239	118200	11	True				
ANR	118476	CallExpression	freeaddrinfo ( result )		118200	0					
ANR	118477	Callee	freeaddrinfo		118200	0					
ANR	118478	Identifier	freeaddrinfo		118200	0					
ANR	118479	ArgumentList	result		118200	1					
ANR	118480	Argument	result		118200	0					
ANR	118481	Identifier	result		118200	0					
ANR	118482	ReturnStatement	return listen_sock ;	169:4:4246:4264	118200	12	True				
ANR	118483	Identifier	listen_sock		118200	0					
ANR	118484	ReturnType	int		118200	1					
ANR	118485	Identifier	create_and_bind		118200	2					
ANR	118486	ParameterList	"const char * addr , const char * port"		118200	3					
ANR	118487	Parameter	const char * addr	114:16:2810:2825	118200	0	True				
ANR	118488	ParameterType	const char *		118200	0					
ANR	118489	Identifier	addr		118200	1					
ANR	118490	Parameter	const char * port	114:34:2828:2843	118200	1	True				
ANR	118491	ParameterType	const char *		118200	0					
ANR	118492	Identifier	port		118200	1					
ANR	118493	CFGEntryNode	ENTRY		118200		True				
ANR	118494	CFGExitNode	EXIT		118200		True				
ANR	118495	Symbol	rp -> ai_addr		118200						
ANR	118496	Symbol	rp -> ai_protocol		118200						
ANR	118497	Symbol	set_reuseport		118200						
ANR	118498	Symbol	rp -> ai_addrlen		118200						
ANR	118499	Symbol	gai_strerror		118200						
ANR	118500	Symbol	AF_UNSPEC		118200						
ANR	118501	Symbol	result		118200						
ANR	118502	Symbol	hints . ai_family		118200						
ANR	118503	Symbol	SOCK_STREAM		118200						
ANR	118504	Symbol	SO_NOSIGPIPE		118200						
ANR	118505	Symbol	bind		118200						
ANR	118506	Symbol	& result		118200						
ANR	118507	Symbol	addr		118200						
ANR	118508	Symbol	& opt		118200						
ANR	118509	Symbol	listen_sock		118200						
ANR	118510	Symbol	& hints		118200						
ANR	118511	Symbol	NULL		118200						
ANR	118512	Symbol	err		118200						
ANR	118513	Symbol	hints		118200						
ANR	118514	Symbol	* rp		118200						
ANR	118515	Symbol	getaddrinfo		118200						
ANR	118516	Symbol	rp -> ai_socktype		118200						
ANR	118517	Symbol	SO_REUSEADDR		118200						
ANR	118518	Symbol	SOL_SOCKET		118200						
ANR	118519	Symbol	hints . ai_socktype		118200						
ANR	118520	Symbol	opt		118200						
ANR	118521	Symbol	s		118200						
ANR	118522	Symbol	port		118200						
ANR	118523	Symbol	rp -> ai_family		118200						
ANR	118524	Symbol	socket		118200						
ANR	118525	Symbol	rp -> ai_next		118200						
ANR	118526	Symbol	rp		118200						
ANR	118527	Symbol	reuse_port		118200						
ANR	118528	Function	delayed_connect_cb	172:0:4269:4600							
ANR	118529	FunctionDef	"delayed_connect_cb (EV_P_ ev_timer * watcher , int revents)"		118528	0					
ANR	118530	CompoundStatement		174:0:4338:4600	118528	0					
ANR	118531	IdentifierDeclStatement	"server_t * server = cork_container_of ( watcher , server_t , delayed_connect_watcher ) ;"	175:4:4344:4465	118528	0	True				
ANR	118532	IdentifierDecl	"* server = cork_container_of ( watcher , server_t , delayed_connect_watcher )"		118528	0					
ANR	118533	IdentifierDeclType	server_t *		118528	0					
ANR	118534	Identifier	server		118528	1					
ANR	118535	AssignmentExpression	"* server = cork_container_of ( watcher , server_t , delayed_connect_watcher )"		118528	2		=			
ANR	118536	Identifier	server		118528	0					
ANR	118537	CallExpression	"cork_container_of ( watcher , server_t , delayed_connect_watcher )"		118528	1					
ANR	118538	Callee	cork_container_of		118528	0					
ANR	118539	Identifier	cork_container_of		118528	0					
ANR	118540	ArgumentList	watcher		118528	1					
ANR	118541	Argument	watcher		118528	0					
ANR	118542	Identifier	watcher		118528	0					
ANR	118543	Argument	server_t		118528	1					
ANR	118544	Identifier	server_t		118528	0					
ANR	118545	Argument	delayed_connect_watcher		118528	2					
ANR	118546	Identifier	delayed_connect_watcher		118528	0					
ANR	118547	IdentifierDeclStatement	remote_t * remote = server -> remote ;	177:4:4471:4504	118528	1	True				
ANR	118548	IdentifierDecl	* remote = server -> remote		118528	0					
ANR	118549	IdentifierDeclType	remote_t *		118528	0					
ANR	118550	Identifier	remote		118528	1					
ANR	118551	AssignmentExpression	* remote = server -> remote		118528	2		=			
ANR	118552	Identifier	remote		118528	0					
ANR	118553	PtrMemberAccess	server -> remote		118528	1					
ANR	118554	Identifier	server		118528	0					
ANR	118555	Identifier	remote		118528	1					
ANR	118556	IfStatement	if ( server -> abuf != NULL )		118528	2					
ANR	118557	Condition	server -> abuf != NULL	179:8:4515:4534	118528	0	True				
ANR	118558	EqualityExpression	server -> abuf != NULL		118528	0		!=			
ANR	118559	PtrMemberAccess	server -> abuf		118528	0					
ANR	118560	Identifier	server		118528	0					
ANR	118561	Identifier	abuf		118528	1					
ANR	118562	Identifier	NULL		118528	1					
ANR	118563	ExpressionStatement	"remote_send_cb ( EV_A_ & remote -> send_ctx -> io , revents )"	180:8:4545:4598	118528	1	True				
ANR	118564	CallExpression	"remote_send_cb ( EV_A_ & remote -> send_ctx -> io , revents )"		118528	0					
ANR	118565	Callee	remote_send_cb		118528	0					
ANR	118566	Identifier	remote_send_cb		118528	0					
ANR	118567	ArgumentList	EV_A_ & remote -> send_ctx -> io		118528	1					
ANR	118568	Argument	EV_A_ & remote -> send_ctx -> io		118528	0					
ANR	118569	BitAndExpression	EV_A_ & remote -> send_ctx -> io		118528	0		&			
ANR	118570	Identifier	EV_A_		118528	0					
ANR	118571	PtrMemberAccess	remote -> send_ctx -> io		118528	1					
ANR	118572	PtrMemberAccess	remote -> send_ctx		118528	0					
ANR	118573	Identifier	remote		118528	0					
ANR	118574	Identifier	send_ctx		118528	1					
ANR	118575	Identifier	io		118528	1					
ANR	118576	Argument	revents		118528	1					
ANR	118577	Identifier	revents		118528	0					
ANR	118578	ReturnType	static void		118528	1					
ANR	118579	Identifier	delayed_connect_cb		118528	2					
ANR	118580	ParameterList	"EV_P_ ev_timer * watcher , int revents"		118528	3					
ANR	118581	Parameter	EV_P_ ev_timer * watcher	173:19:4300:4322	118528	0	True				
ANR	118582	ParameterType	EV_P_ ev_timer *		118528	0					
ANR	118583	Identifier	watcher		118528	1					
ANR	118584	Parameter	int revents	173:44:4325:4335	118528	1	True				
ANR	118585	ParameterType	int		118528	0					
ANR	118586	Identifier	revents		118528	1					
ANR	118587	CFGEntryNode	ENTRY		118528		True				
ANR	118588	CFGExitNode	EXIT		118528		True				
ANR	118589	Symbol	watcher		118528						
ANR	118590	Symbol	server		118528						
ANR	118591	Symbol	* server		118528						
ANR	118592	Symbol	server -> abuf		118528						
ANR	118593	Symbol	NULL		118528						
ANR	118594	Symbol	revents		118528						
ANR	118595	Symbol	server -> remote		118528						
ANR	118596	Symbol	server_t		118528						
ANR	118597	Symbol	remote		118528						
ANR	118598	Symbol	* * remote		118528						
ANR	118599	Symbol	remote -> send_ctx		118528						
ANR	118600	Symbol	delayed_connect_watcher		118528						
ANR	118601	Symbol	cork_container_of		118528						
ANR	118602	Symbol	remote -> send_ctx -> io		118528						
ANR	118603	Symbol	EV_A_		118528						
ANR	118604	Symbol	* remote -> send_ctx		118528						
ANR	118605	Symbol	* remote		118528						
ANR	118606	Function	server_recv_cb	183:0:4603:6751							
ANR	118607	FunctionDef	"server_recv_cb (EV_P_ ev_io * w , int revents)"		118606	0					
ANR	118608	CompoundStatement		185:0:4659:6751	118606	0					
ANR	118609	IdentifierDeclStatement	server_ctx_t * server_recv_ctx = ( server_ctx_t * ) w ;	186:4:4665:4714	118606	0	True				
ANR	118610	IdentifierDecl	* server_recv_ctx = ( server_ctx_t * ) w		118606	0					
ANR	118611	IdentifierDeclType	server_ctx_t *		118606	0					
ANR	118612	Identifier	server_recv_ctx		118606	1					
ANR	118613	AssignmentExpression	* server_recv_ctx = ( server_ctx_t * ) w		118606	2		=			
ANR	118614	Identifier	server_recv_ctx		118606	0					
ANR	118615	CastExpression	( server_ctx_t * ) w		118606	1					
ANR	118616	CastTarget	server_ctx_t *		118606	0					
ANR	118617	Identifier	w		118606	1					
ANR	118618	IdentifierDeclStatement	server_t * server = server_recv_ctx -> server ;	187:4:4720:4775	118606	1	True				
ANR	118619	IdentifierDecl	* server = server_recv_ctx -> server		118606	0					
ANR	118620	IdentifierDeclType	server_t *		118606	0					
ANR	118621	Identifier	server		118606	1					
ANR	118622	AssignmentExpression	* server = server_recv_ctx -> server		118606	2		=			
ANR	118623	Identifier	server		118606	0					
ANR	118624	PtrMemberAccess	server_recv_ctx -> server		118606	1					
ANR	118625	Identifier	server_recv_ctx		118606	0					
ANR	118626	Identifier	server		118606	1					
ANR	118627	IdentifierDeclStatement	remote_t * remote = server -> remote ;	188:4:4781:4827	118606	2	True				
ANR	118628	IdentifierDecl	* remote = server -> remote		118606	0					
ANR	118629	IdentifierDeclType	remote_t *		118606	0					
ANR	118630	Identifier	remote		118606	1					
ANR	118631	AssignmentExpression	* remote = server -> remote		118606	2		=			
ANR	118632	Identifier	remote		118606	0					
ANR	118633	PtrMemberAccess	server -> remote		118606	1					
ANR	118634	Identifier	server		118606	0					
ANR	118635	Identifier	remote		118606	1					
ANR	118636	IfStatement	if ( remote == NULL )		118606	3					
ANR	118637	Condition	remote == NULL	190:8:4838:4851	118606	0	True				
ANR	118638	EqualityExpression	remote == NULL		118606	0		==			
ANR	118639	Identifier	remote		118606	0					
ANR	118640	Identifier	NULL		118606	1					
ANR	118641	CompoundStatement		6:24:194:194	118606	1					
ANR	118642	Statement	close_and_free_server	191:8:4864:4884	118606	0	True				
ANR	118643	Statement	(	191:29:4885:4885	118606	1	True				
ANR	118644	Statement	EV_A_	191:30:4886:4890	118606	2	True				
ANR	118645	Statement	server	191:36:4892:4897	118606	3	True				
ANR	118646	Statement	)	191:42:4898:4898	118606	4	True				
ANR	118647	ExpressionStatement		191:43:4899:4899	118606	5	True				
ANR	118648	ReturnStatement	return ;	192:8:4909:4915	118606	6	True				
ANR	118649	IdentifierDeclStatement	"ssize_t r = recv ( server -> fd , remote -> buf -> data , BUF_SIZE , 0 ) ;"	195:4:4928:4988	118606	4	True				
ANR	118650	IdentifierDecl	"r = recv ( server -> fd , remote -> buf -> data , BUF_SIZE , 0 )"		118606	0					
ANR	118651	IdentifierDeclType	ssize_t		118606	0					
ANR	118652	Identifier	r		118606	1					
ANR	118653	AssignmentExpression	"r = recv ( server -> fd , remote -> buf -> data , BUF_SIZE , 0 )"		118606	2		=			
ANR	118654	Identifier	r		118606	0					
ANR	118655	CallExpression	"recv ( server -> fd , remote -> buf -> data , BUF_SIZE , 0 )"		118606	1					
ANR	118656	Callee	recv		118606	0					
ANR	118657	Identifier	recv		118606	0					
ANR	118658	ArgumentList	server -> fd		118606	1					
ANR	118659	Argument	server -> fd		118606	0					
ANR	118660	PtrMemberAccess	server -> fd		118606	0					
ANR	118661	Identifier	server		118606	0					
ANR	118662	Identifier	fd		118606	1					
ANR	118663	Argument	remote -> buf -> data		118606	1					
ANR	118664	PtrMemberAccess	remote -> buf -> data		118606	0					
ANR	118665	PtrMemberAccess	remote -> buf		118606	0					
ANR	118666	Identifier	remote		118606	0					
ANR	118667	Identifier	buf		118606	1					
ANR	118668	Identifier	data		118606	1					
ANR	118669	Argument	BUF_SIZE		118606	2					
ANR	118670	Identifier	BUF_SIZE		118606	0					
ANR	118671	Argument	0		118606	3					
ANR	118672	PrimaryExpression	0		118606	0					
ANR	118673	IfStatement	if ( r == 0 )		118606	5					
ANR	118674	Condition	r == 0	197:8:4999:5004	118606	0	True				
ANR	118675	EqualityExpression	r == 0		118606	0		==			
ANR	118676	Identifier	r		118606	0					
ANR	118677	PrimaryExpression	0		118606	1					
ANR	118678	CompoundStatement		13:16:347:347	118606	1					
ANR	118679	Statement	close_and_free_remote	199:8:5046:5066	118606	0	True				
ANR	118680	Statement	(	199:29:5067:5067	118606	1	True				
ANR	118681	Statement	EV_A_	199:30:5068:5072	118606	2	True				
ANR	118682	Statement	remote	199:36:5074:5079	118606	3	True				
ANR	118683	Statement	)	199:42:5080:5080	118606	4	True				
ANR	118684	ExpressionStatement		199:43:5081:5081	118606	5	True				
ANR	118685	Statement	close_and_free_server	200:8:5091:5111	118606	6	True				
ANR	118686	Statement	(	200:29:5112:5112	118606	7	True				
ANR	118687	Statement	EV_A_	200:30:5113:5117	118606	8	True				
ANR	118688	Statement	server	200:36:5119:5124	118606	9	True				
ANR	118689	Statement	)	200:42:5125:5125	118606	10	True				
ANR	118690	ExpressionStatement		200:43:5126:5126	118606	11	True				
ANR	118691	ReturnStatement	return ;	201:8:5136:5142	118606	12	True				
ANR	118692	ElseStatement	else		118606	0					
ANR	118693	IfStatement	if ( r == - 1 )		118606	0					
ANR	118694	Condition	r == - 1	202:15:5159:5165	118606	0	True				
ANR	118695	EqualityExpression	r == - 1		118606	0		==			
ANR	118696	Identifier	r		118606	0					
ANR	118697	UnaryOperationExpression	- 1		118606	1					
ANR	118698	UnaryOperator	-		118606	0					
ANR	118699	PrimaryExpression	1		118606	1					
ANR	118700	CompoundStatement		18:24:508:508	118606	1					
ANR	118701	IfStatement	if ( errno == EAGAIN || errno == EWOULDBLOCK )		118606	0					
ANR	118702	Condition	errno == EAGAIN || errno == EWOULDBLOCK	203:12:5182:5220	118606	0	True				
ANR	118703	OrExpression	errno == EAGAIN || errno == EWOULDBLOCK		118606	0		||			
ANR	118704	EqualityExpression	errno == EAGAIN		118606	0		==			
ANR	118705	Identifier	errno		118606	0					
ANR	118706	Identifier	EAGAIN		118606	1					
ANR	118707	EqualityExpression	errno == EWOULDBLOCK		118606	1		==			
ANR	118708	Identifier	errno		118606	0					
ANR	118709	Identifier	EWOULDBLOCK		118606	1					
ANR	118710	CompoundStatement		19:53:563:563	118606	1					
ANR	118711	ReturnStatement	return ;	206:12:5301:5307	118606	0	True				
ANR	118712	ElseStatement	else		118606	0					
ANR	118713	CompoundStatement		23:15:664:664	118606	0					
ANR	118714	ExpressionStatement	"ERROR ( ""server recv"" )"	208:12:5338:5358	118606	0	True				
ANR	118715	CallExpression	"ERROR ( ""server recv"" )"		118606	0					
ANR	118716	Callee	ERROR		118606	0					
ANR	118717	Identifier	ERROR		118606	0					
ANR	118718	ArgumentList	"""server recv"""		118606	1					
ANR	118719	Argument	"""server recv"""		118606	0					
ANR	118720	PrimaryExpression	"""server recv"""		118606	0					
ANR	118721	Statement	close_and_free_remote	209:12:5372:5392	118606	1	True				
ANR	118722	Statement	(	209:33:5393:5393	118606	2	True				
ANR	118723	Statement	EV_A_	209:34:5394:5398	118606	3	True				
ANR	118724	Statement	remote	209:40:5400:5405	118606	4	True				
ANR	118725	Statement	)	209:46:5406:5406	118606	5	True				
ANR	118726	ExpressionStatement		209:47:5407:5407	118606	6	True				
ANR	118727	Statement	close_and_free_server	210:12:5421:5441	118606	7	True				
ANR	118728	Statement	(	210:33:5442:5442	118606	8	True				
ANR	118729	Statement	EV_A_	210:34:5443:5447	118606	9	True				
ANR	118730	Statement	server	210:40:5449:5454	118606	10	True				
ANR	118731	Statement	)	210:46:5455:5455	118606	11	True				
ANR	118732	ExpressionStatement		210:47:5456:5456	118606	12	True				
ANR	118733	ReturnStatement	return ;	211:12:5470:5476	118606	13	True				
ANR	118734	ExpressionStatement	remote -> buf -> len = r	215:4:5499:5519	118606	6	True				
ANR	118735	AssignmentExpression	remote -> buf -> len = r		118606	0		=			
ANR	118736	PtrMemberAccess	remote -> buf -> len		118606	0					
ANR	118737	PtrMemberAccess	remote -> buf		118606	0					
ANR	118738	Identifier	remote		118606	0					
ANR	118739	Identifier	buf		118606	1					
ANR	118740	Identifier	len		118606	1					
ANR	118741	Identifier	r		118606	1					
ANR	118742	IdentifierDeclStatement	"int err = crypto -> encrypt ( remote -> buf , server -> e_ctx , BUF_SIZE ) ;"	217:4:5526:5589	118606	7	True				
ANR	118743	IdentifierDecl	"err = crypto -> encrypt ( remote -> buf , server -> e_ctx , BUF_SIZE )"		118606	0					
ANR	118744	IdentifierDeclType	int		118606	0					
ANR	118745	Identifier	err		118606	1					
ANR	118746	AssignmentExpression	"err = crypto -> encrypt ( remote -> buf , server -> e_ctx , BUF_SIZE )"		118606	2		=			
ANR	118747	Identifier	err		118606	0					
ANR	118748	CallExpression	"crypto -> encrypt ( remote -> buf , server -> e_ctx , BUF_SIZE )"		118606	1					
ANR	118749	Callee	crypto -> encrypt		118606	0					
ANR	118750	PtrMemberAccess	crypto -> encrypt		118606	0					
ANR	118751	Identifier	crypto		118606	0					
ANR	118752	Identifier	encrypt		118606	1					
ANR	118753	ArgumentList	remote -> buf		118606	1					
ANR	118754	Argument	remote -> buf		118606	0					
ANR	118755	PtrMemberAccess	remote -> buf		118606	0					
ANR	118756	Identifier	remote		118606	0					
ANR	118757	Identifier	buf		118606	1					
ANR	118758	Argument	server -> e_ctx		118606	1					
ANR	118759	PtrMemberAccess	server -> e_ctx		118606	0					
ANR	118760	Identifier	server		118606	0					
ANR	118761	Identifier	e_ctx		118606	1					
ANR	118762	Argument	BUF_SIZE		118606	2					
ANR	118763	Identifier	BUF_SIZE		118606	0					
ANR	118764	IfStatement	if ( err )		118606	8					
ANR	118765	Condition	err	219:8:5600:5602	118606	0	True				
ANR	118766	Identifier	err		118606	0					
ANR	118767	CompoundStatement		35:13:945:945	118606	1					
ANR	118768	ExpressionStatement	"LOGE ( ""invalid password or cipher"" )"	220:8:5615:5649	118606	0	True				
ANR	118769	CallExpression	"LOGE ( ""invalid password or cipher"" )"		118606	0					
ANR	118770	Callee	LOGE		118606	0					
ANR	118771	Identifier	LOGE		118606	0					
ANR	118772	ArgumentList	"""invalid password or cipher"""		118606	1					
ANR	118773	Argument	"""invalid password or cipher"""		118606	0					
ANR	118774	PrimaryExpression	"""invalid password or cipher"""		118606	0					
ANR	118775	Statement	close_and_free_remote	221:8:5659:5679	118606	1	True				
ANR	118776	Statement	(	221:29:5680:5680	118606	2	True				
ANR	118777	Statement	EV_A_	221:30:5681:5685	118606	3	True				
ANR	118778	Statement	remote	221:36:5687:5692	118606	4	True				
ANR	118779	Statement	)	221:42:5693:5693	118606	5	True				
ANR	118780	ExpressionStatement		221:43:5694:5694	118606	6	True				
ANR	118781	Statement	close_and_free_server	222:8:5704:5724	118606	7	True				
ANR	118782	Statement	(	222:29:5725:5725	118606	8	True				
ANR	118783	Statement	EV_A_	222:30:5726:5730	118606	9	True				
ANR	118784	Statement	server	222:36:5732:5737	118606	10	True				
ANR	118785	Statement	)	222:42:5738:5738	118606	11	True				
ANR	118786	ExpressionStatement		222:43:5739:5739	118606	12	True				
ANR	118787	ReturnStatement	return ;	223:8:5749:5755	118606	13	True				
ANR	118788	IfStatement	if ( server -> abuf != NULL )		118606	9					
ANR	118789	Condition	server -> abuf != NULL	226:8:5772:5791	118606	0	True				
ANR	118790	EqualityExpression	server -> abuf != NULL		118606	0		!=			
ANR	118791	PtrMemberAccess	server -> abuf		118606	0					
ANR	118792	Identifier	server		118606	0					
ANR	118793	Identifier	abuf		118606	1					
ANR	118794	Identifier	NULL		118606	1					
ANR	118795	CompoundStatement		42:30:1134:1134	118606	1					
ANR	118796	ExpressionStatement	ev_timer_stop ( EV_A_ & server -> delayed_connect_watcher )	227:8:5804:5858	118606	0	True				
ANR	118797	CallExpression	ev_timer_stop ( EV_A_ & server -> delayed_connect_watcher )		118606	0					
ANR	118798	Callee	ev_timer_stop		118606	0					
ANR	118799	Identifier	ev_timer_stop		118606	0					
ANR	118800	ArgumentList	EV_A_ & server -> delayed_connect_watcher		118606	1					
ANR	118801	Argument	EV_A_ & server -> delayed_connect_watcher		118606	0					
ANR	118802	BitAndExpression	EV_A_ & server -> delayed_connect_watcher		118606	0		&			
ANR	118803	Identifier	EV_A_		118606	0					
ANR	118804	PtrMemberAccess	server -> delayed_connect_watcher		118606	1					
ANR	118805	Identifier	server		118606	0					
ANR	118806	Identifier	delayed_connect_watcher		118606	1					
ANR	118807	ExpressionStatement	"bprepend ( remote -> buf , server -> abuf , BUF_SIZE )"	228:8:5868:5913	118606	1	True				
ANR	118808	CallExpression	"bprepend ( remote -> buf , server -> abuf , BUF_SIZE )"		118606	0					
ANR	118809	Callee	bprepend		118606	0					
ANR	118810	Identifier	bprepend		118606	0					
ANR	118811	ArgumentList	remote -> buf		118606	1					
ANR	118812	Argument	remote -> buf		118606	0					
ANR	118813	PtrMemberAccess	remote -> buf		118606	0					
ANR	118814	Identifier	remote		118606	0					
ANR	118815	Identifier	buf		118606	1					
ANR	118816	Argument	server -> abuf		118606	1					
ANR	118817	PtrMemberAccess	server -> abuf		118606	0					
ANR	118818	Identifier	server		118606	0					
ANR	118819	Identifier	abuf		118606	1					
ANR	118820	Argument	BUF_SIZE		118606	2					
ANR	118821	Identifier	BUF_SIZE		118606	0					
ANR	118822	ExpressionStatement	bfree ( server -> abuf )	229:8:5923:5942	118606	2	True				
ANR	118823	CallExpression	bfree ( server -> abuf )		118606	0					
ANR	118824	Callee	bfree		118606	0					
ANR	118825	Identifier	bfree		118606	0					
ANR	118826	ArgumentList	server -> abuf		118606	1					
ANR	118827	Argument	server -> abuf		118606	0					
ANR	118828	PtrMemberAccess	server -> abuf		118606	0					
ANR	118829	Identifier	server		118606	0					
ANR	118830	Identifier	abuf		118606	1					
ANR	118831	ExpressionStatement	ss_free ( server -> abuf )	230:8:5952:5973	118606	3	True				
ANR	118832	CallExpression	ss_free ( server -> abuf )		118606	0					
ANR	118833	Callee	ss_free		118606	0					
ANR	118834	Identifier	ss_free		118606	0					
ANR	118835	ArgumentList	server -> abuf		118606	1					
ANR	118836	Argument	server -> abuf		118606	0					
ANR	118837	PtrMemberAccess	server -> abuf		118606	0					
ANR	118838	Identifier	server		118606	0					
ANR	118839	Identifier	abuf		118606	1					
ANR	118840	ExpressionStatement	server -> abuf = NULL	231:8:5983:6002	118606	4	True				
ANR	118841	AssignmentExpression	server -> abuf = NULL		118606	0		=			
ANR	118842	PtrMemberAccess	server -> abuf		118606	0					
ANR	118843	Identifier	server		118606	0					
ANR	118844	Identifier	abuf		118606	1					
ANR	118845	Identifier	NULL		118606	1					
ANR	118846	IdentifierDeclStatement	"int s = send ( remote -> fd , remote -> buf -> data , remote -> buf -> len , 0 ) ;"	234:4:6015:6079	118606	10	True				
ANR	118847	IdentifierDecl	"s = send ( remote -> fd , remote -> buf -> data , remote -> buf -> len , 0 )"		118606	0					
ANR	118848	IdentifierDeclType	int		118606	0					
ANR	118849	Identifier	s		118606	1					
ANR	118850	AssignmentExpression	"s = send ( remote -> fd , remote -> buf -> data , remote -> buf -> len , 0 )"		118606	2		=			
ANR	118851	Identifier	s		118606	0					
ANR	118852	CallExpression	"send ( remote -> fd , remote -> buf -> data , remote -> buf -> len , 0 )"		118606	1					
ANR	118853	Callee	send		118606	0					
ANR	118854	Identifier	send		118606	0					
ANR	118855	ArgumentList	remote -> fd		118606	1					
ANR	118856	Argument	remote -> fd		118606	0					
ANR	118857	PtrMemberAccess	remote -> fd		118606	0					
ANR	118858	Identifier	remote		118606	0					
ANR	118859	Identifier	fd		118606	1					
ANR	118860	Argument	remote -> buf -> data		118606	1					
ANR	118861	PtrMemberAccess	remote -> buf -> data		118606	0					
ANR	118862	PtrMemberAccess	remote -> buf		118606	0					
ANR	118863	Identifier	remote		118606	0					
ANR	118864	Identifier	buf		118606	1					
ANR	118865	Identifier	data		118606	1					
ANR	118866	Argument	remote -> buf -> len		118606	2					
ANR	118867	PtrMemberAccess	remote -> buf -> len		118606	0					
ANR	118868	PtrMemberAccess	remote -> buf		118606	0					
ANR	118869	Identifier	remote		118606	0					
ANR	118870	Identifier	buf		118606	1					
ANR	118871	Identifier	len		118606	1					
ANR	118872	Argument	0		118606	3					
ANR	118873	PrimaryExpression	0		118606	0					
ANR	118874	IfStatement	if ( s == - 1 )		118606	11					
ANR	118875	Condition	s == - 1	236:8:6090:6096	118606	0	True				
ANR	118876	EqualityExpression	s == - 1		118606	0		==			
ANR	118877	Identifier	s		118606	0					
ANR	118878	UnaryOperationExpression	- 1		118606	1					
ANR	118879	UnaryOperator	-		118606	0					
ANR	118880	PrimaryExpression	1		118606	1					
ANR	118881	CompoundStatement		52:17:1439:1439	118606	1					
ANR	118882	IfStatement	if ( errno == EAGAIN || errno == EWOULDBLOCK )		118606	0					
ANR	118883	Condition	errno == EAGAIN || errno == EWOULDBLOCK	237:12:6113:6151	118606	0	True				
ANR	118884	OrExpression	errno == EAGAIN || errno == EWOULDBLOCK		118606	0		||			
ANR	118885	EqualityExpression	errno == EAGAIN		118606	0		==			
ANR	118886	Identifier	errno		118606	0					
ANR	118887	Identifier	EAGAIN		118606	1					
ANR	118888	EqualityExpression	errno == EWOULDBLOCK		118606	1		==			
ANR	118889	Identifier	errno		118606	0					
ANR	118890	Identifier	EWOULDBLOCK		118606	1					
ANR	118891	CompoundStatement		53:53:1494:1494	118606	1					
ANR	118892	ExpressionStatement	remote -> buf -> idx = 0	239:12:6206:6226	118606	0	True				
ANR	118893	AssignmentExpression	remote -> buf -> idx = 0		118606	0		=			
ANR	118894	PtrMemberAccess	remote -> buf -> idx		118606	0					
ANR	118895	PtrMemberAccess	remote -> buf		118606	0					
ANR	118896	Identifier	remote		118606	0					
ANR	118897	Identifier	buf		118606	1					
ANR	118898	Identifier	idx		118606	1					
ANR	118899	PrimaryExpression	0		118606	1					
ANR	118900	ExpressionStatement	ev_io_stop ( EV_A_ & server_recv_ctx -> io )	240:12:6240:6279	118606	1	True				
ANR	118901	CallExpression	ev_io_stop ( EV_A_ & server_recv_ctx -> io )		118606	0					
ANR	118902	Callee	ev_io_stop		118606	0					
ANR	118903	Identifier	ev_io_stop		118606	0					
ANR	118904	ArgumentList	EV_A_ & server_recv_ctx -> io		118606	1					
ANR	118905	Argument	EV_A_ & server_recv_ctx -> io		118606	0					
ANR	118906	BitAndExpression	EV_A_ & server_recv_ctx -> io		118606	0		&			
ANR	118907	Identifier	EV_A_		118606	0					
ANR	118908	PtrMemberAccess	server_recv_ctx -> io		118606	1					
ANR	118909	Identifier	server_recv_ctx		118606	0					
ANR	118910	Identifier	io		118606	1					
ANR	118911	ExpressionStatement	ev_io_start ( EV_A_ & remote -> send_ctx -> io )	241:12:6293:6334	118606	2	True				
ANR	118912	CallExpression	ev_io_start ( EV_A_ & remote -> send_ctx -> io )		118606	0					
ANR	118913	Callee	ev_io_start		118606	0					
ANR	118914	Identifier	ev_io_start		118606	0					
ANR	118915	ArgumentList	EV_A_ & remote -> send_ctx -> io		118606	1					
ANR	118916	Argument	EV_A_ & remote -> send_ctx -> io		118606	0					
ANR	118917	BitAndExpression	EV_A_ & remote -> send_ctx -> io		118606	0		&			
ANR	118918	Identifier	EV_A_		118606	0					
ANR	118919	PtrMemberAccess	remote -> send_ctx -> io		118606	1					
ANR	118920	PtrMemberAccess	remote -> send_ctx		118606	0					
ANR	118921	Identifier	remote		118606	0					
ANR	118922	Identifier	send_ctx		118606	1					
ANR	118923	Identifier	io		118606	1					
ANR	118924	ReturnStatement	return ;	242:12:6348:6354	118606	3	True				
ANR	118925	ElseStatement	else		118606	0					
ANR	118926	CompoundStatement		59:15:1711:1711	118606	0					
ANR	118927	ExpressionStatement	"ERROR ( ""send"" )"	244:12:6385:6398	118606	0	True				
ANR	118928	CallExpression	"ERROR ( ""send"" )"		118606	0					
ANR	118929	Callee	ERROR		118606	0					
ANR	118930	Identifier	ERROR		118606	0					
ANR	118931	ArgumentList	"""send"""		118606	1					
ANR	118932	Argument	"""send"""		118606	0					
ANR	118933	PrimaryExpression	"""send"""		118606	0					
ANR	118934	Statement	close_and_free_remote	245:12:6412:6432	118606	1	True				
ANR	118935	Statement	(	245:33:6433:6433	118606	2	True				
ANR	118936	Statement	EV_A_	245:34:6434:6438	118606	3	True				
ANR	118937	Statement	remote	245:40:6440:6445	118606	4	True				
ANR	118938	Statement	)	245:46:6446:6446	118606	5	True				
ANR	118939	ExpressionStatement		245:47:6447:6447	118606	6	True				
ANR	118940	Statement	close_and_free_server	246:12:6461:6481	118606	7	True				
ANR	118941	Statement	(	246:33:6482:6482	118606	8	True				
ANR	118942	Statement	EV_A_	246:34:6483:6487	118606	9	True				
ANR	118943	Statement	server	246:40:6489:6494	118606	10	True				
ANR	118944	Statement	)	246:46:6495:6495	118606	11	True				
ANR	118945	ExpressionStatement		246:47:6496:6496	118606	12	True				
ANR	118946	ReturnStatement	return ;	247:12:6510:6516	118606	13	True				
ANR	118947	ElseStatement	else		118606	0					
ANR	118948	IfStatement	if ( s < remote -> buf -> len )		118606	0					
ANR	118949	Condition	s < remote -> buf -> len	249:15:6543:6562	118606	0	True				
ANR	118950	RelationalExpression	s < remote -> buf -> len		118606	0		<			
ANR	118951	Identifier	s		118606	0					
ANR	118952	PtrMemberAccess	remote -> buf -> len		118606	1					
ANR	118953	PtrMemberAccess	remote -> buf		118606	0					
ANR	118954	Identifier	remote		118606	0					
ANR	118955	Identifier	buf		118606	1					
ANR	118956	Identifier	len		118606	1					
ANR	118957	CompoundStatement		65:37:1905:1905	118606	1					
ANR	118958	ExpressionStatement	remote -> buf -> len -= s	250:8:6575:6596	118606	0	True				
ANR	118959	AssignmentExpression	remote -> buf -> len -= s		118606	0		-=			
ANR	118960	PtrMemberAccess	remote -> buf -> len		118606	0					
ANR	118961	PtrMemberAccess	remote -> buf		118606	0					
ANR	118962	Identifier	remote		118606	0					
ANR	118963	Identifier	buf		118606	1					
ANR	118964	Identifier	len		118606	1					
ANR	118965	Identifier	s		118606	1					
ANR	118966	ExpressionStatement	remote -> buf -> idx = s	251:8:6606:6627	118606	1	True				
ANR	118967	AssignmentExpression	remote -> buf -> idx = s		118606	0		=			
ANR	118968	PtrMemberAccess	remote -> buf -> idx		118606	0					
ANR	118969	PtrMemberAccess	remote -> buf		118606	0					
ANR	118970	Identifier	remote		118606	0					
ANR	118971	Identifier	buf		118606	1					
ANR	118972	Identifier	idx		118606	1					
ANR	118973	Identifier	s		118606	1					
ANR	118974	ExpressionStatement	ev_io_stop ( EV_A_ & server_recv_ctx -> io )	252:8:6637:6676	118606	2	True				
ANR	118975	CallExpression	ev_io_stop ( EV_A_ & server_recv_ctx -> io )		118606	0					
ANR	118976	Callee	ev_io_stop		118606	0					
ANR	118977	Identifier	ev_io_stop		118606	0					
ANR	118978	ArgumentList	EV_A_ & server_recv_ctx -> io		118606	1					
ANR	118979	Argument	EV_A_ & server_recv_ctx -> io		118606	0					
ANR	118980	BitAndExpression	EV_A_ & server_recv_ctx -> io		118606	0		&			
ANR	118981	Identifier	EV_A_		118606	0					
ANR	118982	PtrMemberAccess	server_recv_ctx -> io		118606	1					
ANR	118983	Identifier	server_recv_ctx		118606	0					
ANR	118984	Identifier	io		118606	1					
ANR	118985	ExpressionStatement	ev_io_start ( EV_A_ & remote -> send_ctx -> io )	253:8:6686:6727	118606	3	True				
ANR	118986	CallExpression	ev_io_start ( EV_A_ & remote -> send_ctx -> io )		118606	0					
ANR	118987	Callee	ev_io_start		118606	0					
ANR	118988	Identifier	ev_io_start		118606	0					
ANR	118989	ArgumentList	EV_A_ & remote -> send_ctx -> io		118606	1					
ANR	118990	Argument	EV_A_ & remote -> send_ctx -> io		118606	0					
ANR	118991	BitAndExpression	EV_A_ & remote -> send_ctx -> io		118606	0		&			
ANR	118992	Identifier	EV_A_		118606	0					
ANR	118993	PtrMemberAccess	remote -> send_ctx -> io		118606	1					
ANR	118994	PtrMemberAccess	remote -> send_ctx		118606	0					
ANR	118995	Identifier	remote		118606	0					
ANR	118996	Identifier	send_ctx		118606	1					
ANR	118997	Identifier	io		118606	1					
ANR	118998	ReturnStatement	return ;	254:8:6737:6743	118606	4	True				
ANR	118999	ReturnType	static void		118606	1					
ANR	119000	Identifier	server_recv_cb		118606	2					
ANR	119001	ParameterList	"EV_P_ ev_io * w , int revents"		118606	3					
ANR	119002	Parameter	EV_P_ ev_io * w	184:15:4630:4643	118606	0	True				
ANR	119003	ParameterType	EV_P_ ev_io *		118606	0					
ANR	119004	Identifier	w		118606	1					
ANR	119005	Parameter	int revents	184:31:4646:4656	118606	1	True				
ANR	119006	ParameterType	int		118606	0					
ANR	119007	Identifier	revents		118606	1					
ANR	119008	CFGEntryNode	ENTRY		118606		True				
ANR	119009	CFGExitNode	EXIT		118606		True				
ANR	119010	Symbol	server		118606						
ANR	119011	Symbol	* server		118606						
ANR	119012	Symbol	server -> abuf		118606						
ANR	119013	Symbol	revents		118606						
ANR	119014	Symbol	crypto -> encrypt		118606						
ANR	119015	Symbol	server -> remote		118606						
ANR	119016	Symbol	remote		118606						
ANR	119017	Symbol	* crypto		118606						
ANR	119018	Symbol	recv		118606						
ANR	119019	Symbol	server -> delayed_connect_watcher		118606						
ANR	119020	Symbol	remote -> buf		118606						
ANR	119021	Symbol	remote -> buf -> len		118606						
ANR	119022	Symbol	server_recv_ctx -> server		118606						
ANR	119023	Symbol	remote -> buf -> data		118606						
ANR	119024	Symbol	server_recv_ctx -> io		118606						
ANR	119025	Symbol	server_recv_ctx		118606						
ANR	119026	Symbol	errno		118606						
ANR	119027	Symbol	NULL		118606						
ANR	119028	Symbol	err		118606						
ANR	119029	Symbol	remote -> fd		118606						
ANR	119030	Symbol	* server_recv_ctx		118606						
ANR	119031	Symbol	server -> fd		118606						
ANR	119032	Symbol	EAGAIN		118606						
ANR	119033	Symbol	* remote -> buf		118606						
ANR	119034	Symbol	* * remote		118606						
ANR	119035	Symbol	server -> e_ctx		118606						
ANR	119036	Symbol	remote -> buf -> idx		118606						
ANR	119037	Symbol	remote -> send_ctx		118606						
ANR	119038	Symbol	crypto		118606						
ANR	119039	Symbol	r		118606						
ANR	119040	Symbol	remote -> send_ctx -> io		118606						
ANR	119041	Symbol	s		118606						
ANR	119042	Symbol	w		118606						
ANR	119043	Symbol	EV_A_		118606						
ANR	119044	Symbol	BUF_SIZE		118606						
ANR	119045	Symbol	EWOULDBLOCK		118606						
ANR	119046	Symbol	* remote -> send_ctx		118606						
ANR	119047	Symbol	send		118606						
ANR	119048	Symbol	* remote		118606						
ANR	119049	Function	server_send_cb	258:0:6754:8224							
ANR	119050	FunctionDef	"server_send_cb (EV_P_ ev_io * w , int revents)"		119049	0					
ANR	119051	CompoundStatement		260:0:6810:8224	119049	0					
ANR	119052	IdentifierDeclStatement	server_ctx_t * server_send_ctx = ( server_ctx_t * ) w ;	261:4:6816:6865	119049	0	True				
ANR	119053	IdentifierDecl	* server_send_ctx = ( server_ctx_t * ) w		119049	0					
ANR	119054	IdentifierDeclType	server_ctx_t *		119049	0					
ANR	119055	Identifier	server_send_ctx		119049	1					
ANR	119056	AssignmentExpression	* server_send_ctx = ( server_ctx_t * ) w		119049	2		=			
ANR	119057	Identifier	server_send_ctx		119049	0					
ANR	119058	CastExpression	( server_ctx_t * ) w		119049	1					
ANR	119059	CastTarget	server_ctx_t *		119049	0					
ANR	119060	Identifier	w		119049	1					
ANR	119061	IdentifierDeclStatement	server_t * server = server_send_ctx -> server ;	262:4:6871:6926	119049	1	True				
ANR	119062	IdentifierDecl	* server = server_send_ctx -> server		119049	0					
ANR	119063	IdentifierDeclType	server_t *		119049	0					
ANR	119064	Identifier	server		119049	1					
ANR	119065	AssignmentExpression	* server = server_send_ctx -> server		119049	2		=			
ANR	119066	Identifier	server		119049	0					
ANR	119067	PtrMemberAccess	server_send_ctx -> server		119049	1					
ANR	119068	Identifier	server_send_ctx		119049	0					
ANR	119069	Identifier	server		119049	1					
ANR	119070	IdentifierDeclStatement	remote_t * remote = server -> remote ;	263:4:6932:6978	119049	2	True				
ANR	119071	IdentifierDecl	* remote = server -> remote		119049	0					
ANR	119072	IdentifierDeclType	remote_t *		119049	0					
ANR	119073	Identifier	remote		119049	1					
ANR	119074	AssignmentExpression	* remote = server -> remote		119049	2		=			
ANR	119075	Identifier	remote		119049	0					
ANR	119076	PtrMemberAccess	server -> remote		119049	1					
ANR	119077	Identifier	server		119049	0					
ANR	119078	Identifier	remote		119049	1					
ANR	119079	IfStatement	if ( server -> buf -> len == 0 )		119049	3					
ANR	119080	Condition	server -> buf -> len == 0	264:8:6988:7008	119049	0	True				
ANR	119081	EqualityExpression	server -> buf -> len == 0		119049	0		==			
ANR	119082	PtrMemberAccess	server -> buf -> len		119049	0					
ANR	119083	PtrMemberAccess	server -> buf		119049	0					
ANR	119084	Identifier	server		119049	0					
ANR	119085	Identifier	buf		119049	1					
ANR	119086	Identifier	len		119049	1					
ANR	119087	PrimaryExpression	0		119049	1					
ANR	119088	CompoundStatement		5:31:200:200	119049	1					
ANR	119089	Statement	close_and_free_remote	266:8:7047:7067	119049	0	True				
ANR	119090	Statement	(	266:29:7068:7068	119049	1	True				
ANR	119091	Statement	EV_A_	266:30:7069:7073	119049	2	True				
ANR	119092	Statement	remote	266:36:7075:7080	119049	3	True				
ANR	119093	Statement	)	266:42:7081:7081	119049	4	True				
ANR	119094	ExpressionStatement		266:43:7082:7082	119049	5	True				
ANR	119095	Statement	close_and_free_server	267:8:7092:7112	119049	6	True				
ANR	119096	Statement	(	267:29:7113:7113	119049	7	True				
ANR	119097	Statement	EV_A_	267:30:7114:7118	119049	8	True				
ANR	119098	Statement	server	267:36:7120:7125	119049	9	True				
ANR	119099	Statement	)	267:42:7126:7126	119049	10	True				
ANR	119100	ExpressionStatement		267:43:7127:7127	119049	11	True				
ANR	119101	ReturnStatement	return ;	268:8:7137:7143	119049	12	True				
ANR	119102	ElseStatement	else		119049	0					
ANR	119103	CompoundStatement		12:8:383:495	119049	0					
ANR	119104	IdentifierDeclStatement	"ssize_t s = send ( server -> fd , server -> buf -> data + server -> buf -> idx , server -> buf -> len , 0 ) ;"	271:8:7194:7306	119049	0	True				
ANR	119105	IdentifierDecl	"s = send ( server -> fd , server -> buf -> data + server -> buf -> idx , server -> buf -> len , 0 )"		119049	0					
ANR	119106	IdentifierDeclType	ssize_t		119049	0					
ANR	119107	Identifier	s		119049	1					
ANR	119108	AssignmentExpression	"s = send ( server -> fd , server -> buf -> data + server -> buf -> idx , server -> buf -> len , 0 )"		119049	2		=			
ANR	119109	Identifier	s		119049	0					
ANR	119110	CallExpression	"send ( server -> fd , server -> buf -> data + server -> buf -> idx , server -> buf -> len , 0 )"		119049	1					
ANR	119111	Callee	send		119049	0					
ANR	119112	Identifier	send		119049	0					
ANR	119113	ArgumentList	server -> fd		119049	1					
ANR	119114	Argument	server -> fd		119049	0					
ANR	119115	PtrMemberAccess	server -> fd		119049	0					
ANR	119116	Identifier	server		119049	0					
ANR	119117	Identifier	fd		119049	1					
ANR	119118	Argument	server -> buf -> data + server -> buf -> idx		119049	1					
ANR	119119	AdditiveExpression	server -> buf -> data + server -> buf -> idx		119049	0		+			
ANR	119120	PtrMemberAccess	server -> buf -> data		119049	0					
ANR	119121	PtrMemberAccess	server -> buf		119049	0					
ANR	119122	Identifier	server		119049	0					
ANR	119123	Identifier	buf		119049	1					
ANR	119124	Identifier	data		119049	1					
ANR	119125	PtrMemberAccess	server -> buf -> idx		119049	1					
ANR	119126	PtrMemberAccess	server -> buf		119049	0					
ANR	119127	Identifier	server		119049	0					
ANR	119128	Identifier	buf		119049	1					
ANR	119129	Identifier	idx		119049	1					
ANR	119130	Argument	server -> buf -> len		119049	2					
ANR	119131	PtrMemberAccess	server -> buf -> len		119049	0					
ANR	119132	PtrMemberAccess	server -> buf		119049	0					
ANR	119133	Identifier	server		119049	0					
ANR	119134	Identifier	buf		119049	1					
ANR	119135	Identifier	len		119049	1					
ANR	119136	Argument	0		119049	3					
ANR	119137	PrimaryExpression	0		119049	0					
ANR	119138	IfStatement	if ( s == - 1 )		119049	1					
ANR	119139	Condition	s == - 1	273:12:7320:7326	119049	0	True				
ANR	119140	EqualityExpression	s == - 1		119049	0		==			
ANR	119141	Identifier	s		119049	0					
ANR	119142	UnaryOperationExpression	- 1		119049	1					
ANR	119143	UnaryOperator	-		119049	0					
ANR	119144	PrimaryExpression	1		119049	1					
ANR	119145	CompoundStatement		14:21:518:518	119049	1					
ANR	119146	IfStatement	if ( errno != EAGAIN && errno != EWOULDBLOCK )		119049	0					
ANR	119147	Condition	errno != EAGAIN && errno != EWOULDBLOCK	274:16:7347:7385	119049	0	True				
ANR	119148	AndExpression	errno != EAGAIN && errno != EWOULDBLOCK		119049	0		&&			
ANR	119149	EqualityExpression	errno != EAGAIN		119049	0		!=			
ANR	119150	Identifier	errno		119049	0					
ANR	119151	Identifier	EAGAIN		119049	1					
ANR	119152	EqualityExpression	errno != EWOULDBLOCK		119049	1		!=			
ANR	119153	Identifier	errno		119049	0					
ANR	119154	Identifier	EWOULDBLOCK		119049	1					
ANR	119155	CompoundStatement		15:57:577:577	119049	1					
ANR	119156	ExpressionStatement	"ERROR ( ""send"" )"	275:16:7406:7419	119049	0	True				
ANR	119157	CallExpression	"ERROR ( ""send"" )"		119049	0					
ANR	119158	Callee	ERROR		119049	0					
ANR	119159	Identifier	ERROR		119049	0					
ANR	119160	ArgumentList	"""send"""		119049	1					
ANR	119161	Argument	"""send"""		119049	0					
ANR	119162	PrimaryExpression	"""send"""		119049	0					
ANR	119163	Statement	close_and_free_remote	276:16:7437:7457	119049	1	True				
ANR	119164	Statement	(	276:37:7458:7458	119049	2	True				
ANR	119165	Statement	EV_A_	276:38:7459:7463	119049	3	True				
ANR	119166	Statement	remote	276:44:7465:7470	119049	4	True				
ANR	119167	Statement	)	276:50:7471:7471	119049	5	True				
ANR	119168	ExpressionStatement		276:51:7472:7472	119049	6	True				
ANR	119169	Statement	close_and_free_server	277:16:7490:7510	119049	7	True				
ANR	119170	Statement	(	277:37:7511:7511	119049	8	True				
ANR	119171	Statement	EV_A_	277:38:7512:7516	119049	9	True				
ANR	119172	Statement	server	277:44:7518:7523	119049	10	True				
ANR	119173	Statement	)	277:50:7524:7524	119049	11	True				
ANR	119174	ExpressionStatement		277:51:7525:7525	119049	12	True				
ANR	119175	ReturnStatement	return ;	279:12:7553:7559	119049	1	True				
ANR	119176	ElseStatement	else		119049	0					
ANR	119177	IfStatement	if ( s < server -> buf -> len )		119049	0					
ANR	119178	Condition	s < server -> buf -> len	280:19:7580:7599	119049	0	True				
ANR	119179	RelationalExpression	s < server -> buf -> len		119049	0		<			
ANR	119180	Identifier	s		119049	0					
ANR	119181	PtrMemberAccess	server -> buf -> len		119049	1					
ANR	119182	PtrMemberAccess	server -> buf		119049	0					
ANR	119183	Identifier	server		119049	0					
ANR	119184	Identifier	buf		119049	1					
ANR	119185	Identifier	len		119049	1					
ANR	119186	CompoundStatement		21:41:791:791	119049	1					
ANR	119187	ExpressionStatement	server -> buf -> len -= s	282:12:7688:7709	119049	0	True				
ANR	119188	AssignmentExpression	server -> buf -> len -= s		119049	0		-=			
ANR	119189	PtrMemberAccess	server -> buf -> len		119049	0					
ANR	119190	PtrMemberAccess	server -> buf		119049	0					
ANR	119191	Identifier	server		119049	0					
ANR	119192	Identifier	buf		119049	1					
ANR	119193	Identifier	len		119049	1					
ANR	119194	Identifier	s		119049	1					
ANR	119195	ExpressionStatement	server -> buf -> idx += s	283:12:7723:7744	119049	1	True				
ANR	119196	AssignmentExpression	server -> buf -> idx += s		119049	0		+=			
ANR	119197	PtrMemberAccess	server -> buf -> idx		119049	0					
ANR	119198	PtrMemberAccess	server -> buf		119049	0					
ANR	119199	Identifier	server		119049	0					
ANR	119200	Identifier	buf		119049	1					
ANR	119201	Identifier	idx		119049	1					
ANR	119202	Identifier	s		119049	1					
ANR	119203	ReturnStatement	return ;	284:12:7758:7764	119049	2	True				
ANR	119204	ElseStatement	else		119049	0					
ANR	119205	CompoundStatement		26:15:970:970	119049	0					
ANR	119206	ExpressionStatement	server -> buf -> len = 0	287:12:7841:7861	119049	0	True				
ANR	119207	AssignmentExpression	server -> buf -> len = 0		119049	0		=			
ANR	119208	PtrMemberAccess	server -> buf -> len		119049	0					
ANR	119209	PtrMemberAccess	server -> buf		119049	0					
ANR	119210	Identifier	server		119049	0					
ANR	119211	Identifier	buf		119049	1					
ANR	119212	Identifier	len		119049	1					
ANR	119213	PrimaryExpression	0		119049	1					
ANR	119214	ExpressionStatement	server -> buf -> idx = 0	288:12:7875:7895	119049	1	True				
ANR	119215	AssignmentExpression	server -> buf -> idx = 0		119049	0		=			
ANR	119216	PtrMemberAccess	server -> buf -> idx		119049	0					
ANR	119217	PtrMemberAccess	server -> buf		119049	0					
ANR	119218	Identifier	server		119049	0					
ANR	119219	Identifier	buf		119049	1					
ANR	119220	Identifier	idx		119049	1					
ANR	119221	PrimaryExpression	0		119049	1					
ANR	119222	ExpressionStatement	ev_io_stop ( EV_A_ & server_send_ctx -> io )	289:12:7909:7948	119049	2	True				
ANR	119223	CallExpression	ev_io_stop ( EV_A_ & server_send_ctx -> io )		119049	0					
ANR	119224	Callee	ev_io_stop		119049	0					
ANR	119225	Identifier	ev_io_stop		119049	0					
ANR	119226	ArgumentList	EV_A_ & server_send_ctx -> io		119049	1					
ANR	119227	Argument	EV_A_ & server_send_ctx -> io		119049	0					
ANR	119228	BitAndExpression	EV_A_ & server_send_ctx -> io		119049	0		&			
ANR	119229	Identifier	EV_A_		119049	0					
ANR	119230	PtrMemberAccess	server_send_ctx -> io		119049	1					
ANR	119231	Identifier	server_send_ctx		119049	0					
ANR	119232	Identifier	io		119049	1					
ANR	119233	IfStatement	if ( remote != NULL )		119049	3					
ANR	119234	Condition	remote != NULL	290:16:7966:7979	119049	0	True				
ANR	119235	EqualityExpression	remote != NULL		119049	0		!=			
ANR	119236	Identifier	remote		119049	0					
ANR	119237	Identifier	NULL		119049	1					
ANR	119238	CompoundStatement		31:32:1171:1171	119049	1					
ANR	119239	ExpressionStatement	ev_io_start ( EV_A_ & remote -> recv_ctx -> io )	291:16:8000:8041	119049	0	True				
ANR	119240	CallExpression	ev_io_start ( EV_A_ & remote -> recv_ctx -> io )		119049	0					
ANR	119241	Callee	ev_io_start		119049	0					
ANR	119242	Identifier	ev_io_start		119049	0					
ANR	119243	ArgumentList	EV_A_ & remote -> recv_ctx -> io		119049	1					
ANR	119244	Argument	EV_A_ & remote -> recv_ctx -> io		119049	0					
ANR	119245	BitAndExpression	EV_A_ & remote -> recv_ctx -> io		119049	0		&			
ANR	119246	Identifier	EV_A_		119049	0					
ANR	119247	PtrMemberAccess	remote -> recv_ctx -> io		119049	1					
ANR	119248	PtrMemberAccess	remote -> recv_ctx		119049	0					
ANR	119249	Identifier	remote		119049	0					
ANR	119250	Identifier	recv_ctx		119049	1					
ANR	119251	Identifier	io		119049	1					
ANR	119252	ElseStatement	else		119049	0					
ANR	119253	CompoundStatement		33:19:1251:1251	119049	0					
ANR	119254	Statement	close_and_free_remote	293:16:8080:8100	119049	0	True				
ANR	119255	Statement	(	293:37:8101:8101	119049	1	True				
ANR	119256	Statement	EV_A_	293:38:8102:8106	119049	2	True				
ANR	119257	Statement	remote	293:44:8108:8113	119049	3	True				
ANR	119258	Statement	)	293:50:8114:8114	119049	4	True				
ANR	119259	ExpressionStatement		293:51:8115:8115	119049	5	True				
ANR	119260	Statement	close_and_free_server	294:16:8133:8153	119049	6	True				
ANR	119261	Statement	(	294:37:8154:8154	119049	7	True				
ANR	119262	Statement	EV_A_	294:38:8155:8159	119049	8	True				
ANR	119263	Statement	server	294:44:8161:8166	119049	9	True				
ANR	119264	Statement	)	294:50:8167:8167	119049	10	True				
ANR	119265	ExpressionStatement		294:51:8168:8168	119049	11	True				
ANR	119266	ReturnStatement	return ;	295:16:8186:8192	119049	12	True				
ANR	119267	ReturnType	static void		119049	1					
ANR	119268	Identifier	server_send_cb		119049	2					
ANR	119269	ParameterList	"EV_P_ ev_io * w , int revents"		119049	3					
ANR	119270	Parameter	EV_P_ ev_io * w	259:15:6781:6794	119049	0	True				
ANR	119271	ParameterType	EV_P_ ev_io *		119049	0					
ANR	119272	Identifier	w		119049	1					
ANR	119273	Parameter	int revents	259:31:6797:6807	119049	1	True				
ANR	119274	ParameterType	int		119049	0					
ANR	119275	Identifier	revents		119049	1					
ANR	119276	CFGEntryNode	ENTRY		119049		True				
ANR	119277	CFGExitNode	EXIT		119049		True				
ANR	119278	Symbol	server		119049						
ANR	119279	Symbol	* server		119049						
ANR	119280	Symbol	* remote -> recv_ctx		119049						
ANR	119281	Symbol	revents		119049						
ANR	119282	Symbol	remote -> recv_ctx -> io		119049						
ANR	119283	Symbol	server -> remote		119049						
ANR	119284	Symbol	server_send_ctx -> server		119049						
ANR	119285	Symbol	remote		119049						
ANR	119286	Symbol	server -> buf -> len		119049						
ANR	119287	Symbol	server_send_ctx		119049						
ANR	119288	Symbol	errno		119049						
ANR	119289	Symbol	NULL		119049						
ANR	119290	Symbol	remote -> recv_ctx		119049						
ANR	119291	Symbol	server -> buf -> data		119049						
ANR	119292	Symbol	* server -> buf		119049						
ANR	119293	Symbol	server -> fd		119049						
ANR	119294	Symbol	EAGAIN		119049						
ANR	119295	Symbol	* server_send_ctx		119049						
ANR	119296	Symbol	* * remote		119049						
ANR	119297	Symbol	server_send_ctx -> io		119049						
ANR	119298	Symbol	s		119049						
ANR	119299	Symbol	server -> buf		119049						
ANR	119300	Symbol	w		119049						
ANR	119301	Symbol	server -> buf -> idx		119049						
ANR	119302	Symbol	EV_A_		119049						
ANR	119303	Symbol	EWOULDBLOCK		119049						
ANR	119304	Symbol	* * server		119049						
ANR	119305	Symbol	send		119049						
ANR	119306	Symbol	* remote		119049						
ANR	119307	Function	remote_timeout_cb	301:0:8227:8654							
ANR	119308	FunctionDef	"remote_timeout_cb (EV_P_ ev_timer * watcher , int revents)"		119307	0					
ANR	119309	CompoundStatement		303:0:8295:8654	119307	0					
ANR	119310	IdentifierDeclStatement	"remote_ctx_t * remote_ctx = cork_container_of ( watcher , remote_ctx_t , watcher ) ;"	304:4:8301:8385	119307	0	True				
ANR	119311	IdentifierDecl	"* remote_ctx = cork_container_of ( watcher , remote_ctx_t , watcher )"		119307	0					
ANR	119312	IdentifierDeclType	remote_ctx_t *		119307	0					
ANR	119313	Identifier	remote_ctx		119307	1					
ANR	119314	AssignmentExpression	"* remote_ctx = cork_container_of ( watcher , remote_ctx_t , watcher )"		119307	2		=			
ANR	119315	Identifier	remote_ctx		119307	0					
ANR	119316	CallExpression	"cork_container_of ( watcher , remote_ctx_t , watcher )"		119307	1					
ANR	119317	Callee	cork_container_of		119307	0					
ANR	119318	Identifier	cork_container_of		119307	0					
ANR	119319	ArgumentList	watcher		119307	1					
ANR	119320	Argument	watcher		119307	0					
ANR	119321	Identifier	watcher		119307	0					
ANR	119322	Argument	remote_ctx_t		119307	1					
ANR	119323	Identifier	remote_ctx_t		119307	0					
ANR	119324	Argument	watcher		119307	2					
ANR	119325	Identifier	watcher		119307	0					
ANR	119326	IdentifierDeclStatement	remote_t * remote = remote_ctx -> remote ;	307:4:8392:8429	119307	1	True				
ANR	119327	IdentifierDecl	* remote = remote_ctx -> remote		119307	0					
ANR	119328	IdentifierDeclType	remote_t *		119307	0					
ANR	119329	Identifier	remote		119307	1					
ANR	119330	AssignmentExpression	* remote = remote_ctx -> remote		119307	2		=			
ANR	119331	Identifier	remote		119307	0					
ANR	119332	PtrMemberAccess	remote_ctx -> remote		119307	1					
ANR	119333	Identifier	remote_ctx		119307	0					
ANR	119334	Identifier	remote		119307	1					
ANR	119335	IdentifierDeclStatement	server_t * server = remote -> server ;	308:4:8435:8468	119307	2	True				
ANR	119336	IdentifierDecl	* server = remote -> server		119307	0					
ANR	119337	IdentifierDeclType	server_t *		119307	0					
ANR	119338	Identifier	server		119307	1					
ANR	119339	AssignmentExpression	* server = remote -> server		119307	2		=			
ANR	119340	Identifier	server		119307	0					
ANR	119341	PtrMemberAccess	remote -> server		119307	1					
ANR	119342	Identifier	remote		119307	0					
ANR	119343	Identifier	server		119307	1					
ANR	119344	IfStatement	if ( verbose )		119307	3					
ANR	119345	Condition	verbose	310:8:8479:8485	119307	0	True				
ANR	119346	Identifier	verbose		119307	0					
ANR	119347	CompoundStatement		8:17:192:192	119307	1					
ANR	119348	ExpressionStatement	"LOGI ( ""TCP connection timeout"" )"	311:8:8498:8528	119307	0	True				
ANR	119349	CallExpression	"LOGI ( ""TCP connection timeout"" )"		119307	0					
ANR	119350	Callee	LOGI		119307	0					
ANR	119351	Identifier	LOGI		119307	0					
ANR	119352	ArgumentList	"""TCP connection timeout"""		119307	1					
ANR	119353	Argument	"""TCP connection timeout"""		119307	0					
ANR	119354	PrimaryExpression	"""TCP connection timeout"""		119307	0					
ANR	119355	Statement	ev_timer_stop	314:4:8541:8553	119307	4	True				
ANR	119356	Statement	(	314:17:8554:8554	119307	5	True				
ANR	119357	Statement	EV_A_	314:18:8555:8559	119307	6	True				
ANR	119358	Statement	watcher	314:24:8561:8567	119307	7	True				
ANR	119359	Statement	)	314:31:8568:8568	119307	8	True				
ANR	119360	ExpressionStatement		314:32:8569:8569	119307	9	True				
ANR	119361	Statement	close_and_free_remote	316:4:8576:8596	119307	10	True				
ANR	119362	Statement	(	316:25:8597:8597	119307	11	True				
ANR	119363	Statement	EV_A_	316:26:8598:8602	119307	12	True				
ANR	119364	Statement	remote	316:32:8604:8609	119307	13	True				
ANR	119365	Statement	)	316:38:8610:8610	119307	14	True				
ANR	119366	ExpressionStatement		316:39:8611:8611	119307	15	True				
ANR	119367	Statement	close_and_free_server	317:4:8617:8637	119307	16	True				
ANR	119368	Statement	(	317:25:8638:8638	119307	17	True				
ANR	119369	Statement	EV_A_	317:26:8639:8643	119307	18	True				
ANR	119370	Statement	server	317:32:8645:8650	119307	19	True				
ANR	119371	Statement	)	317:38:8651:8651	119307	20	True				
ANR	119372	ExpressionStatement		317:39:8652:8652	119307	21	True				
ANR	119373	ReturnType	static void		119307	1					
ANR	119374	Identifier	remote_timeout_cb		119307	2					
ANR	119375	ParameterList	"EV_P_ ev_timer * watcher , int revents"		119307	3					
ANR	119376	Parameter	EV_P_ ev_timer * watcher	302:18:8257:8279	119307	0	True				
ANR	119377	ParameterType	EV_P_ ev_timer *		119307	0					
ANR	119378	Identifier	watcher		119307	1					
ANR	119379	Parameter	int revents	302:43:8282:8292	119307	1	True				
ANR	119380	ParameterType	int		119307	0					
ANR	119381	Identifier	revents		119307	1					
ANR	119382	CFGEntryNode	ENTRY		119307		True				
ANR	119383	CFGExitNode	EXIT		119307		True				
ANR	119384	Symbol	watcher		119307						
ANR	119385	Symbol	cork_container_of		119307						
ANR	119386	Symbol	server		119307						
ANR	119387	Symbol	revents		119307						
ANR	119388	Symbol	* remote_ctx		119307						
ANR	119389	Symbol	remote_ctx -> remote		119307						
ANR	119390	Symbol	remote_ctx_t		119307						
ANR	119391	Symbol	remote_ctx		119307						
ANR	119392	Symbol	remote		119307						
ANR	119393	Symbol	remote -> server		119307						
ANR	119394	Symbol	* remote		119307						
ANR	119395	Symbol	verbose		119307						
ANR	119396	Function	remote_recv_cb	320:0:8657:10843							
ANR	119397	FunctionDef	"remote_recv_cb (EV_P_ ev_io * w , int revents)"		119396	0					
ANR	119398	CompoundStatement		322:0:8713:10843	119396	0					
ANR	119399	IdentifierDeclStatement	remote_ctx_t * remote_recv_ctx = ( remote_ctx_t * ) w ;	323:4:8719:8768	119396	0	True				
ANR	119400	IdentifierDecl	* remote_recv_ctx = ( remote_ctx_t * ) w		119396	0					
ANR	119401	IdentifierDeclType	remote_ctx_t *		119396	0					
ANR	119402	Identifier	remote_recv_ctx		119396	1					
ANR	119403	AssignmentExpression	* remote_recv_ctx = ( remote_ctx_t * ) w		119396	2		=			
ANR	119404	Identifier	remote_recv_ctx		119396	0					
ANR	119405	CastExpression	( remote_ctx_t * ) w		119396	1					
ANR	119406	CastTarget	remote_ctx_t *		119396	0					
ANR	119407	Identifier	w		119396	1					
ANR	119408	IdentifierDeclStatement	remote_t * remote = remote_recv_ctx -> remote ;	324:4:8774:8829	119396	1	True				
ANR	119409	IdentifierDecl	* remote = remote_recv_ctx -> remote		119396	0					
ANR	119410	IdentifierDeclType	remote_t *		119396	0					
ANR	119411	Identifier	remote		119396	1					
ANR	119412	AssignmentExpression	* remote = remote_recv_ctx -> remote		119396	2		=			
ANR	119413	Identifier	remote		119396	0					
ANR	119414	PtrMemberAccess	remote_recv_ctx -> remote		119396	1					
ANR	119415	Identifier	remote_recv_ctx		119396	0					
ANR	119416	Identifier	remote		119396	1					
ANR	119417	IdentifierDeclStatement	server_t * server = remote -> server ;	325:4:8835:8881	119396	2	True				
ANR	119418	IdentifierDecl	* server = remote -> server		119396	0					
ANR	119419	IdentifierDeclType	server_t *		119396	0					
ANR	119420	Identifier	server		119396	1					
ANR	119421	AssignmentExpression	* server = remote -> server		119396	2		=			
ANR	119422	Identifier	server		119396	0					
ANR	119423	PtrMemberAccess	remote -> server		119396	1					
ANR	119424	Identifier	remote		119396	0					
ANR	119425	Identifier	server		119396	1					
ANR	119426	IdentifierDeclStatement	"ssize_t r = recv ( remote -> fd , server -> buf -> data , BUF_SIZE , 0 ) ;"	327:4:8888:8948	119396	3	True				
ANR	119427	IdentifierDecl	"r = recv ( remote -> fd , server -> buf -> data , BUF_SIZE , 0 )"		119396	0					
ANR	119428	IdentifierDeclType	ssize_t		119396	0					
ANR	119429	Identifier	r		119396	1					
ANR	119430	AssignmentExpression	"r = recv ( remote -> fd , server -> buf -> data , BUF_SIZE , 0 )"		119396	2		=			
ANR	119431	Identifier	r		119396	0					
ANR	119432	CallExpression	"recv ( remote -> fd , server -> buf -> data , BUF_SIZE , 0 )"		119396	1					
ANR	119433	Callee	recv		119396	0					
ANR	119434	Identifier	recv		119396	0					
ANR	119435	ArgumentList	remote -> fd		119396	1					
ANR	119436	Argument	remote -> fd		119396	0					
ANR	119437	PtrMemberAccess	remote -> fd		119396	0					
ANR	119438	Identifier	remote		119396	0					
ANR	119439	Identifier	fd		119396	1					
ANR	119440	Argument	server -> buf -> data		119396	1					
ANR	119441	PtrMemberAccess	server -> buf -> data		119396	0					
ANR	119442	PtrMemberAccess	server -> buf		119396	0					
ANR	119443	Identifier	server		119396	0					
ANR	119444	Identifier	buf		119396	1					
ANR	119445	Identifier	data		119396	1					
ANR	119446	Argument	BUF_SIZE		119396	2					
ANR	119447	Identifier	BUF_SIZE		119396	0					
ANR	119448	Argument	0		119396	3					
ANR	119449	PrimaryExpression	0		119396	0					
ANR	119450	IfStatement	if ( r == 0 )		119396	4					
ANR	119451	Condition	r == 0	329:8:8959:8964	119396	0	True				
ANR	119452	EqualityExpression	r == 0		119396	0		==			
ANR	119453	Identifier	r		119396	0					
ANR	119454	PrimaryExpression	0		119396	1					
ANR	119455	CompoundStatement		8:16:253:253	119396	1					
ANR	119456	Statement	close_and_free_remote	331:8:9006:9026	119396	0	True				
ANR	119457	Statement	(	331:29:9027:9027	119396	1	True				
ANR	119458	Statement	EV_A_	331:30:9028:9032	119396	2	True				
ANR	119459	Statement	remote	331:36:9034:9039	119396	3	True				
ANR	119460	Statement	)	331:42:9040:9040	119396	4	True				
ANR	119461	ExpressionStatement		331:43:9041:9041	119396	5	True				
ANR	119462	Statement	close_and_free_server	332:8:9051:9071	119396	6	True				
ANR	119463	Statement	(	332:29:9072:9072	119396	7	True				
ANR	119464	Statement	EV_A_	332:30:9073:9077	119396	8	True				
ANR	119465	Statement	server	332:36:9079:9084	119396	9	True				
ANR	119466	Statement	)	332:42:9085:9085	119396	10	True				
ANR	119467	ExpressionStatement		332:43:9086:9086	119396	11	True				
ANR	119468	ReturnStatement	return ;	333:8:9096:9102	119396	12	True				
ANR	119469	ElseStatement	else		119396	0					
ANR	119470	IfStatement	if ( r == - 1 )		119396	0					
ANR	119471	Condition	r == - 1	334:15:9119:9125	119396	0	True				
ANR	119472	EqualityExpression	r == - 1		119396	0		==			
ANR	119473	Identifier	r		119396	0					
ANR	119474	UnaryOperationExpression	- 1		119396	1					
ANR	119475	UnaryOperator	-		119396	0					
ANR	119476	PrimaryExpression	1		119396	1					
ANR	119477	CompoundStatement		13:24:414:414	119396	1					
ANR	119478	IfStatement	if ( errno == EAGAIN || errno == EWOULDBLOCK )		119396	0					
ANR	119479	Condition	errno == EAGAIN || errno == EWOULDBLOCK	335:12:9142:9180	119396	0	True				
ANR	119480	OrExpression	errno == EAGAIN || errno == EWOULDBLOCK		119396	0		||			
ANR	119481	EqualityExpression	errno == EAGAIN		119396	0		==			
ANR	119482	Identifier	errno		119396	0					
ANR	119483	Identifier	EAGAIN		119396	1					
ANR	119484	EqualityExpression	errno == EWOULDBLOCK		119396	1		==			
ANR	119485	Identifier	errno		119396	0					
ANR	119486	Identifier	EWOULDBLOCK		119396	1					
ANR	119487	CompoundStatement		14:53:469:469	119396	1					
ANR	119488	ReturnStatement	return ;	338:12:9261:9267	119396	0	True				
ANR	119489	ElseStatement	else		119396	0					
ANR	119490	CompoundStatement		18:15:570:570	119396	0					
ANR	119491	ExpressionStatement	"ERROR ( ""remote recv"" )"	340:12:9298:9318	119396	0	True				
ANR	119492	CallExpression	"ERROR ( ""remote recv"" )"		119396	0					
ANR	119493	Callee	ERROR		119396	0					
ANR	119494	Identifier	ERROR		119396	0					
ANR	119495	ArgumentList	"""remote recv"""		119396	1					
ANR	119496	Argument	"""remote recv"""		119396	0					
ANR	119497	PrimaryExpression	"""remote recv"""		119396	0					
ANR	119498	Statement	close_and_free_remote	341:12:9332:9352	119396	1	True				
ANR	119499	Statement	(	341:33:9353:9353	119396	2	True				
ANR	119500	Statement	EV_A_	341:34:9354:9358	119396	3	True				
ANR	119501	Statement	remote	341:40:9360:9365	119396	4	True				
ANR	119502	Statement	)	341:46:9366:9366	119396	5	True				
ANR	119503	ExpressionStatement		341:47:9367:9367	119396	6	True				
ANR	119504	Statement	close_and_free_server	342:12:9381:9401	119396	7	True				
ANR	119505	Statement	(	342:33:9402:9402	119396	8	True				
ANR	119506	Statement	EV_A_	342:34:9403:9407	119396	9	True				
ANR	119507	Statement	server	342:40:9409:9414	119396	10	True				
ANR	119508	Statement	)	342:46:9415:9415	119396	11	True				
ANR	119509	ExpressionStatement		342:47:9416:9416	119396	12	True				
ANR	119510	ReturnStatement	return ;	343:12:9430:9436	119396	13	True				
ANR	119511	ExpressionStatement	server -> buf -> len = r	347:4:9459:9479	119396	5	True				
ANR	119512	AssignmentExpression	server -> buf -> len = r		119396	0		=			
ANR	119513	PtrMemberAccess	server -> buf -> len		119396	0					
ANR	119514	PtrMemberAccess	server -> buf		119396	0					
ANR	119515	Identifier	server		119396	0					
ANR	119516	Identifier	buf		119396	1					
ANR	119517	Identifier	len		119396	1					
ANR	119518	Identifier	r		119396	1					
ANR	119519	IdentifierDeclStatement	"int err = crypto -> decrypt ( server -> buf , server -> d_ctx , BUF_SIZE ) ;"	349:4:9486:9549	119396	6	True				
ANR	119520	IdentifierDecl	"err = crypto -> decrypt ( server -> buf , server -> d_ctx , BUF_SIZE )"		119396	0					
ANR	119521	IdentifierDeclType	int		119396	0					
ANR	119522	Identifier	err		119396	1					
ANR	119523	AssignmentExpression	"err = crypto -> decrypt ( server -> buf , server -> d_ctx , BUF_SIZE )"		119396	2		=			
ANR	119524	Identifier	err		119396	0					
ANR	119525	CallExpression	"crypto -> decrypt ( server -> buf , server -> d_ctx , BUF_SIZE )"		119396	1					
ANR	119526	Callee	crypto -> decrypt		119396	0					
ANR	119527	PtrMemberAccess	crypto -> decrypt		119396	0					
ANR	119528	Identifier	crypto		119396	0					
ANR	119529	Identifier	decrypt		119396	1					
ANR	119530	ArgumentList	server -> buf		119396	1					
ANR	119531	Argument	server -> buf		119396	0					
ANR	119532	PtrMemberAccess	server -> buf		119396	0					
ANR	119533	Identifier	server		119396	0					
ANR	119534	Identifier	buf		119396	1					
ANR	119535	Argument	server -> d_ctx		119396	1					
ANR	119536	PtrMemberAccess	server -> d_ctx		119396	0					
ANR	119537	Identifier	server		119396	0					
ANR	119538	Identifier	d_ctx		119396	1					
ANR	119539	Argument	BUF_SIZE		119396	2					
ANR	119540	Identifier	BUF_SIZE		119396	0					
ANR	119541	IfStatement	if ( err == CRYPTO_ERROR )		119396	7					
ANR	119542	Condition	err == CRYPTO_ERROR	350:8:9559:9577	119396	0	True				
ANR	119543	EqualityExpression	err == CRYPTO_ERROR		119396	0		==			
ANR	119544	Identifier	err		119396	0					
ANR	119545	Identifier	CRYPTO_ERROR		119396	1					
ANR	119546	CompoundStatement		29:29:866:866	119396	1					
ANR	119547	ExpressionStatement	"LOGE ( ""invalid password or cipher"" )"	351:8:9590:9624	119396	0	True				
ANR	119548	CallExpression	"LOGE ( ""invalid password or cipher"" )"		119396	0					
ANR	119549	Callee	LOGE		119396	0					
ANR	119550	Identifier	LOGE		119396	0					
ANR	119551	ArgumentList	"""invalid password or cipher"""		119396	1					
ANR	119552	Argument	"""invalid password or cipher"""		119396	0					
ANR	119553	PrimaryExpression	"""invalid password or cipher"""		119396	0					
ANR	119554	Statement	close_and_free_remote	352:8:9634:9654	119396	1	True				
ANR	119555	Statement	(	352:29:9655:9655	119396	2	True				
ANR	119556	Statement	EV_A_	352:30:9656:9660	119396	3	True				
ANR	119557	Statement	remote	352:36:9662:9667	119396	4	True				
ANR	119558	Statement	)	352:42:9668:9668	119396	5	True				
ANR	119559	ExpressionStatement		352:43:9669:9669	119396	6	True				
ANR	119560	Statement	close_and_free_server	353:8:9679:9699	119396	7	True				
ANR	119561	Statement	(	353:29:9700:9700	119396	8	True				
ANR	119562	Statement	EV_A_	353:30:9701:9705	119396	9	True				
ANR	119563	Statement	server	353:36:9707:9712	119396	10	True				
ANR	119564	Statement	)	353:42:9713:9713	119396	11	True				
ANR	119565	ExpressionStatement		353:43:9714:9714	119396	12	True				
ANR	119566	ReturnStatement	return ;	354:8:9724:9730	119396	13	True				
ANR	119567	ElseStatement	else		119396	0					
ANR	119568	IfStatement	if ( err == CRYPTO_NEED_MORE )		119396	0					
ANR	119569	Condition	err == CRYPTO_NEED_MORE	355:15:9747:9769	119396	0	True				
ANR	119570	EqualityExpression	err == CRYPTO_NEED_MORE		119396	0		==			
ANR	119571	Identifier	err		119396	0					
ANR	119572	Identifier	CRYPTO_NEED_MORE		119396	1					
ANR	119573	CompoundStatement		34:40:1058:1058	119396	1					
ANR	119574	ReturnStatement	return ;	356:8:9782:9788	119396	0	True				
ANR	119575	IdentifierDeclStatement	"int s = send ( server -> fd , server -> buf -> data , server -> buf -> len , 0 ) ;"	359:4:9818:9882	119396	8	True				
ANR	119576	IdentifierDecl	"s = send ( server -> fd , server -> buf -> data , server -> buf -> len , 0 )"		119396	0					
ANR	119577	IdentifierDeclType	int		119396	0					
ANR	119578	Identifier	s		119396	1					
ANR	119579	AssignmentExpression	"s = send ( server -> fd , server -> buf -> data , server -> buf -> len , 0 )"		119396	2		=			
ANR	119580	Identifier	s		119396	0					
ANR	119581	CallExpression	"send ( server -> fd , server -> buf -> data , server -> buf -> len , 0 )"		119396	1					
ANR	119582	Callee	send		119396	0					
ANR	119583	Identifier	send		119396	0					
ANR	119584	ArgumentList	server -> fd		119396	1					
ANR	119585	Argument	server -> fd		119396	0					
ANR	119586	PtrMemberAccess	server -> fd		119396	0					
ANR	119587	Identifier	server		119396	0					
ANR	119588	Identifier	fd		119396	1					
ANR	119589	Argument	server -> buf -> data		119396	1					
ANR	119590	PtrMemberAccess	server -> buf -> data		119396	0					
ANR	119591	PtrMemberAccess	server -> buf		119396	0					
ANR	119592	Identifier	server		119396	0					
ANR	119593	Identifier	buf		119396	1					
ANR	119594	Identifier	data		119396	1					
ANR	119595	Argument	server -> buf -> len		119396	2					
ANR	119596	PtrMemberAccess	server -> buf -> len		119396	0					
ANR	119597	PtrMemberAccess	server -> buf		119396	0					
ANR	119598	Identifier	server		119396	0					
ANR	119599	Identifier	buf		119396	1					
ANR	119600	Identifier	len		119396	1					
ANR	119601	Argument	0		119396	3					
ANR	119602	PrimaryExpression	0		119396	0					
ANR	119603	IfStatement	if ( s == - 1 )		119396	9					
ANR	119604	Condition	s == - 1	361:8:9893:9899	119396	0	True				
ANR	119605	EqualityExpression	s == - 1		119396	0		==			
ANR	119606	Identifier	s		119396	0					
ANR	119607	UnaryOperationExpression	- 1		119396	1					
ANR	119608	UnaryOperator	-		119396	0					
ANR	119609	PrimaryExpression	1		119396	1					
ANR	119610	CompoundStatement		40:17:1188:1188	119396	1					
ANR	119611	IfStatement	if ( errno == EAGAIN || errno == EWOULDBLOCK )		119396	0					
ANR	119612	Condition	errno == EAGAIN || errno == EWOULDBLOCK	362:12:9916:9954	119396	0	True				
ANR	119613	OrExpression	errno == EAGAIN || errno == EWOULDBLOCK		119396	0		||			
ANR	119614	EqualityExpression	errno == EAGAIN		119396	0		==			
ANR	119615	Identifier	errno		119396	0					
ANR	119616	Identifier	EAGAIN		119396	1					
ANR	119617	EqualityExpression	errno == EWOULDBLOCK		119396	1		==			
ANR	119618	Identifier	errno		119396	0					
ANR	119619	Identifier	EWOULDBLOCK		119396	1					
ANR	119620	CompoundStatement		41:53:1243:1243	119396	1					
ANR	119621	ExpressionStatement	server -> buf -> idx = 0	364:12:10009:10029	119396	0	True				
ANR	119622	AssignmentExpression	server -> buf -> idx = 0		119396	0		=			
ANR	119623	PtrMemberAccess	server -> buf -> idx		119396	0					
ANR	119624	PtrMemberAccess	server -> buf		119396	0					
ANR	119625	Identifier	server		119396	0					
ANR	119626	Identifier	buf		119396	1					
ANR	119627	Identifier	idx		119396	1					
ANR	119628	PrimaryExpression	0		119396	1					
ANR	119629	ExpressionStatement	ev_io_stop ( EV_A_ & remote_recv_ctx -> io )	365:12:10043:10082	119396	1	True				
ANR	119630	CallExpression	ev_io_stop ( EV_A_ & remote_recv_ctx -> io )		119396	0					
ANR	119631	Callee	ev_io_stop		119396	0					
ANR	119632	Identifier	ev_io_stop		119396	0					
ANR	119633	ArgumentList	EV_A_ & remote_recv_ctx -> io		119396	1					
ANR	119634	Argument	EV_A_ & remote_recv_ctx -> io		119396	0					
ANR	119635	BitAndExpression	EV_A_ & remote_recv_ctx -> io		119396	0		&			
ANR	119636	Identifier	EV_A_		119396	0					
ANR	119637	PtrMemberAccess	remote_recv_ctx -> io		119396	1					
ANR	119638	Identifier	remote_recv_ctx		119396	0					
ANR	119639	Identifier	io		119396	1					
ANR	119640	ExpressionStatement	ev_io_start ( EV_A_ & server -> send_ctx -> io )	366:12:10096:10137	119396	2	True				
ANR	119641	CallExpression	ev_io_start ( EV_A_ & server -> send_ctx -> io )		119396	0					
ANR	119642	Callee	ev_io_start		119396	0					
ANR	119643	Identifier	ev_io_start		119396	0					
ANR	119644	ArgumentList	EV_A_ & server -> send_ctx -> io		119396	1					
ANR	119645	Argument	EV_A_ & server -> send_ctx -> io		119396	0					
ANR	119646	BitAndExpression	EV_A_ & server -> send_ctx -> io		119396	0		&			
ANR	119647	Identifier	EV_A_		119396	0					
ANR	119648	PtrMemberAccess	server -> send_ctx -> io		119396	1					
ANR	119649	PtrMemberAccess	server -> send_ctx		119396	0					
ANR	119650	Identifier	server		119396	0					
ANR	119651	Identifier	send_ctx		119396	1					
ANR	119652	Identifier	io		119396	1					
ANR	119653	ElseStatement	else		119396	0					
ANR	119654	CompoundStatement		46:15:1440:1440	119396	0					
ANR	119655	ExpressionStatement	"ERROR ( ""send"" )"	368:12:10168:10181	119396	0	True				
ANR	119656	CallExpression	"ERROR ( ""send"" )"		119396	0					
ANR	119657	Callee	ERROR		119396	0					
ANR	119658	Identifier	ERROR		119396	0					
ANR	119659	ArgumentList	"""send"""		119396	1					
ANR	119660	Argument	"""send"""		119396	0					
ANR	119661	PrimaryExpression	"""send"""		119396	0					
ANR	119662	Statement	close_and_free_remote	369:12:10195:10215	119396	1	True				
ANR	119663	Statement	(	369:33:10216:10216	119396	2	True				
ANR	119664	Statement	EV_A_	369:34:10217:10221	119396	3	True				
ANR	119665	Statement	remote	369:40:10223:10228	119396	4	True				
ANR	119666	Statement	)	369:46:10229:10229	119396	5	True				
ANR	119667	ExpressionStatement		369:47:10230:10230	119396	6	True				
ANR	119668	Statement	close_and_free_server	370:12:10244:10264	119396	7	True				
ANR	119669	Statement	(	370:33:10265:10265	119396	8	True				
ANR	119670	Statement	EV_A_	370:34:10266:10270	119396	9	True				
ANR	119671	Statement	server	370:40:10272:10277	119396	10	True				
ANR	119672	Statement	)	370:46:10278:10278	119396	11	True				
ANR	119673	ExpressionStatement		370:47:10279:10279	119396	12	True				
ANR	119674	ReturnStatement	return ;	371:12:10293:10299	119396	13	True				
ANR	119675	ElseStatement	else		119396	0					
ANR	119676	IfStatement	if ( s < server -> buf -> len )		119396	0					
ANR	119677	Condition	s < server -> buf -> len	373:15:10326:10345	119396	0	True				
ANR	119678	RelationalExpression	s < server -> buf -> len		119396	0		<			
ANR	119679	Identifier	s		119396	0					
ANR	119680	PtrMemberAccess	server -> buf -> len		119396	1					
ANR	119681	PtrMemberAccess	server -> buf		119396	0					
ANR	119682	Identifier	server		119396	0					
ANR	119683	Identifier	buf		119396	1					
ANR	119684	Identifier	len		119396	1					
ANR	119685	CompoundStatement		52:37:1634:1634	119396	1					
ANR	119686	ExpressionStatement	server -> buf -> len -= s	374:8:10358:10379	119396	0	True				
ANR	119687	AssignmentExpression	server -> buf -> len -= s		119396	0		-=			
ANR	119688	PtrMemberAccess	server -> buf -> len		119396	0					
ANR	119689	PtrMemberAccess	server -> buf		119396	0					
ANR	119690	Identifier	server		119396	0					
ANR	119691	Identifier	buf		119396	1					
ANR	119692	Identifier	len		119396	1					
ANR	119693	Identifier	s		119396	1					
ANR	119694	ExpressionStatement	server -> buf -> idx = s	375:8:10389:10410	119396	1	True				
ANR	119695	AssignmentExpression	server -> buf -> idx = s		119396	0		=			
ANR	119696	PtrMemberAccess	server -> buf -> idx		119396	0					
ANR	119697	PtrMemberAccess	server -> buf		119396	0					
ANR	119698	Identifier	server		119396	0					
ANR	119699	Identifier	buf		119396	1					
ANR	119700	Identifier	idx		119396	1					
ANR	119701	Identifier	s		119396	1					
ANR	119702	ExpressionStatement	ev_io_stop ( EV_A_ & remote_recv_ctx -> io )	376:8:10420:10459	119396	2	True				
ANR	119703	CallExpression	ev_io_stop ( EV_A_ & remote_recv_ctx -> io )		119396	0					
ANR	119704	Callee	ev_io_stop		119396	0					
ANR	119705	Identifier	ev_io_stop		119396	0					
ANR	119706	ArgumentList	EV_A_ & remote_recv_ctx -> io		119396	1					
ANR	119707	Argument	EV_A_ & remote_recv_ctx -> io		119396	0					
ANR	119708	BitAndExpression	EV_A_ & remote_recv_ctx -> io		119396	0		&			
ANR	119709	Identifier	EV_A_		119396	0					
ANR	119710	PtrMemberAccess	remote_recv_ctx -> io		119396	1					
ANR	119711	Identifier	remote_recv_ctx		119396	0					
ANR	119712	Identifier	io		119396	1					
ANR	119713	ExpressionStatement	ev_io_start ( EV_A_ & server -> send_ctx -> io )	377:8:10469:10510	119396	3	True				
ANR	119714	CallExpression	ev_io_start ( EV_A_ & server -> send_ctx -> io )		119396	0					
ANR	119715	Callee	ev_io_start		119396	0					
ANR	119716	Identifier	ev_io_start		119396	0					
ANR	119717	ArgumentList	EV_A_ & server -> send_ctx -> io		119396	1					
ANR	119718	Argument	EV_A_ & server -> send_ctx -> io		119396	0					
ANR	119719	BitAndExpression	EV_A_ & server -> send_ctx -> io		119396	0		&			
ANR	119720	Identifier	EV_A_		119396	0					
ANR	119721	PtrMemberAccess	server -> send_ctx -> io		119396	1					
ANR	119722	PtrMemberAccess	server -> send_ctx		119396	0					
ANR	119723	Identifier	server		119396	0					
ANR	119724	Identifier	send_ctx		119396	1					
ANR	119725	Identifier	io		119396	1					
ANR	119726	IfStatement	if ( ! remote -> recv_ctx -> connected && ! no_delay )		119396	10					
ANR	119727	Condition	! remote -> recv_ctx -> connected && ! no_delay	381:8:10588:10628	119396	0	True				
ANR	119728	AndExpression	! remote -> recv_ctx -> connected && ! no_delay		119396	0		&&			
ANR	119729	UnaryOperationExpression	! remote -> recv_ctx -> connected		119396	0					
ANR	119730	UnaryOperator	!		119396	0					
ANR	119731	PtrMemberAccess	remote -> recv_ctx -> connected		119396	1					
ANR	119732	PtrMemberAccess	remote -> recv_ctx		119396	0					
ANR	119733	Identifier	remote		119396	0					
ANR	119734	Identifier	recv_ctx		119396	1					
ANR	119735	Identifier	connected		119396	1					
ANR	119736	UnaryOperationExpression	! no_delay		119396	1					
ANR	119737	UnaryOperator	!		119396	0					
ANR	119738	Identifier	no_delay		119396	1					
ANR	119739	CompoundStatement		61:8:1927:1938	119396	1					
ANR	119740	IdentifierDeclStatement	int opt = 0 ;	382:8:10641:10652	119396	0	True				
ANR	119741	IdentifierDecl	opt = 0		119396	0					
ANR	119742	IdentifierDeclType	int		119396	0					
ANR	119743	Identifier	opt		119396	1					
ANR	119744	AssignmentExpression	opt = 0		119396	2		=			
ANR	119745	Identifier	opt		119396	0					
ANR	119746	PrimaryExpression	0		119396	1					
ANR	119747	ExpressionStatement	"setsockopt ( server -> fd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"	383:8:10662:10725	119396	1	True				
ANR	119748	CallExpression	"setsockopt ( server -> fd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"		119396	0					
ANR	119749	Callee	setsockopt		119396	0					
ANR	119750	Identifier	setsockopt		119396	0					
ANR	119751	ArgumentList	server -> fd		119396	1					
ANR	119752	Argument	server -> fd		119396	0					
ANR	119753	PtrMemberAccess	server -> fd		119396	0					
ANR	119754	Identifier	server		119396	0					
ANR	119755	Identifier	fd		119396	1					
ANR	119756	Argument	SOL_TCP		119396	1					
ANR	119757	Identifier	SOL_TCP		119396	0					
ANR	119758	Argument	TCP_NODELAY		119396	2					
ANR	119759	Identifier	TCP_NODELAY		119396	0					
ANR	119760	Argument	& opt		119396	3					
ANR	119761	UnaryOperationExpression	& opt		119396	0					
ANR	119762	UnaryOperator	&		119396	0					
ANR	119763	Identifier	opt		119396	1					
ANR	119764	Argument	sizeof ( opt )		119396	4					
ANR	119765	SizeofExpression	sizeof ( opt )		119396	0					
ANR	119766	Sizeof	sizeof		119396	0					
ANR	119767	SizeofOperand	opt		119396	1					
ANR	119768	ExpressionStatement	"setsockopt ( remote -> fd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"	384:8:10735:10798	119396	2	True				
ANR	119769	CallExpression	"setsockopt ( remote -> fd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"		119396	0					
ANR	119770	Callee	setsockopt		119396	0					
ANR	119771	Identifier	setsockopt		119396	0					
ANR	119772	ArgumentList	remote -> fd		119396	1					
ANR	119773	Argument	remote -> fd		119396	0					
ANR	119774	PtrMemberAccess	remote -> fd		119396	0					
ANR	119775	Identifier	remote		119396	0					
ANR	119776	Identifier	fd		119396	1					
ANR	119777	Argument	SOL_TCP		119396	1					
ANR	119778	Identifier	SOL_TCP		119396	0					
ANR	119779	Argument	TCP_NODELAY		119396	2					
ANR	119780	Identifier	TCP_NODELAY		119396	0					
ANR	119781	Argument	& opt		119396	3					
ANR	119782	UnaryOperationExpression	& opt		119396	0					
ANR	119783	UnaryOperator	&		119396	0					
ANR	119784	Identifier	opt		119396	1					
ANR	119785	Argument	sizeof ( opt )		119396	4					
ANR	119786	SizeofExpression	sizeof ( opt )		119396	0					
ANR	119787	Sizeof	sizeof		119396	0					
ANR	119788	SizeofOperand	opt		119396	1					
ANR	119789	ExpressionStatement	remote -> recv_ctx -> connected = 1	386:4:10810:10841	119396	11	True				
ANR	119790	AssignmentExpression	remote -> recv_ctx -> connected = 1		119396	0		=			
ANR	119791	PtrMemberAccess	remote -> recv_ctx -> connected		119396	0					
ANR	119792	PtrMemberAccess	remote -> recv_ctx		119396	0					
ANR	119793	Identifier	remote		119396	0					
ANR	119794	Identifier	recv_ctx		119396	1					
ANR	119795	Identifier	connected		119396	1					
ANR	119796	PrimaryExpression	1		119396	1					
ANR	119797	ReturnType	static void		119396	1					
ANR	119798	Identifier	remote_recv_cb		119396	2					
ANR	119799	ParameterList	"EV_P_ ev_io * w , int revents"		119396	3					
ANR	119800	Parameter	EV_P_ ev_io * w	321:15:8684:8697	119396	0	True				
ANR	119801	ParameterType	EV_P_ ev_io *		119396	0					
ANR	119802	Identifier	w		119396	1					
ANR	119803	Parameter	int revents	321:31:8700:8710	119396	1	True				
ANR	119804	ParameterType	int		119396	0					
ANR	119805	Identifier	revents		119396	1					
ANR	119806	CFGEntryNode	ENTRY		119396		True				
ANR	119807	CFGExitNode	EXIT		119396		True				
ANR	119808	Symbol	server		119396						
ANR	119809	Symbol	CRYPTO_NEED_MORE		119396						
ANR	119810	Symbol	CRYPTO_ERROR		119396						
ANR	119811	Symbol	* server		119396						
ANR	119812	Symbol	* remote -> recv_ctx		119396						
ANR	119813	Symbol	revents		119396						
ANR	119814	Symbol	remote		119396						
ANR	119815	Symbol	TCP_NODELAY		119396						
ANR	119816	Symbol	server -> buf -> len		119396						
ANR	119817	Symbol	* crypto		119396						
ANR	119818	Symbol	remote -> recv_ctx -> connected		119396						
ANR	119819	Symbol	recv		119396						
ANR	119820	Symbol	remote_recv_ctx -> io		119396						
ANR	119821	Symbol	remote_recv_ctx		119396						
ANR	119822	Symbol	& opt		119396						
ANR	119823	Symbol	errno		119396						
ANR	119824	Symbol	remote -> recv_ctx		119396						
ANR	119825	Symbol	server -> buf -> data		119396						
ANR	119826	Symbol	remote -> fd		119396						
ANR	119827	Symbol	err		119396						
ANR	119828	Symbol	* server -> buf		119396						
ANR	119829	Symbol	server -> fd		119396						
ANR	119830	Symbol	* remote_recv_ctx		119396						
ANR	119831	Symbol	no_delay		119396						
ANR	119832	Symbol	EAGAIN		119396						
ANR	119833	Symbol	crypto -> decrypt		119396						
ANR	119834	Symbol	* * remote		119396						
ANR	119835	Symbol	* server -> send_ctx		119396						
ANR	119836	Symbol	crypto		119396						
ANR	119837	Symbol	r		119396						
ANR	119838	Symbol	opt		119396						
ANR	119839	Symbol	server -> d_ctx		119396						
ANR	119840	Symbol	s		119396						
ANR	119841	Symbol	server -> buf		119396						
ANR	119842	Symbol	server -> send_ctx -> io		119396						
ANR	119843	Symbol	w		119396						
ANR	119844	Symbol	server -> buf -> idx		119396						
ANR	119845	Symbol	EV_A_		119396						
ANR	119846	Symbol	BUF_SIZE		119396						
ANR	119847	Symbol	EWOULDBLOCK		119396						
ANR	119848	Symbol	* * server		119396						
ANR	119849	Symbol	remote_recv_ctx -> remote		119396						
ANR	119850	Symbol	remote -> server		119396						
ANR	119851	Symbol	send		119396						
ANR	119852	Symbol	SOL_TCP		119396						
ANR	119853	Symbol	* remote		119396						
ANR	119854	Symbol	server -> send_ctx		119396						
ANR	119855	Function	remote_send_cb	389:0:10846:15620							
ANR	119856	FunctionDef	"remote_send_cb (EV_P_ ev_io * w , int revents)"		119855	0					
ANR	119857	CompoundStatement		391:0:10902:15620	119855	0					
ANR	119858	IdentifierDeclStatement	remote_ctx_t * remote_send_ctx = ( remote_ctx_t * ) w ;	392:4:10908:10957	119855	0	True				
ANR	119859	IdentifierDecl	* remote_send_ctx = ( remote_ctx_t * ) w		119855	0					
ANR	119860	IdentifierDeclType	remote_ctx_t *		119855	0					
ANR	119861	Identifier	remote_send_ctx		119855	1					
ANR	119862	AssignmentExpression	* remote_send_ctx = ( remote_ctx_t * ) w		119855	2		=			
ANR	119863	Identifier	remote_send_ctx		119855	0					
ANR	119864	CastExpression	( remote_ctx_t * ) w		119855	1					
ANR	119865	CastTarget	remote_ctx_t *		119855	0					
ANR	119866	Identifier	w		119855	1					
ANR	119867	IdentifierDeclStatement	remote_t * remote = remote_send_ctx -> remote ;	393:4:10963:11018	119855	1	True				
ANR	119868	IdentifierDecl	* remote = remote_send_ctx -> remote		119855	0					
ANR	119869	IdentifierDeclType	remote_t *		119855	0					
ANR	119870	Identifier	remote		119855	1					
ANR	119871	AssignmentExpression	* remote = remote_send_ctx -> remote		119855	2		=			
ANR	119872	Identifier	remote		119855	0					
ANR	119873	PtrMemberAccess	remote_send_ctx -> remote		119855	1					
ANR	119874	Identifier	remote_send_ctx		119855	0					
ANR	119875	Identifier	remote		119855	1					
ANR	119876	IdentifierDeclStatement	server_t * server = remote -> server ;	394:4:11024:11070	119855	2	True				
ANR	119877	IdentifierDecl	* server = remote -> server		119855	0					
ANR	119878	IdentifierDeclType	server_t *		119855	0					
ANR	119879	Identifier	server		119855	1					
ANR	119880	AssignmentExpression	* server = remote -> server		119855	2		=			
ANR	119881	Identifier	server		119855	0					
ANR	119882	PtrMemberAccess	remote -> server		119855	1					
ANR	119883	Identifier	remote		119855	0					
ANR	119884	Identifier	server		119855	1					
ANR	119885	IfStatement	if ( ! remote_send_ctx -> connected )		119855	3					
ANR	119886	Condition	! remote_send_ctx -> connected	396:8:11081:11107	119855	0	True				
ANR	119887	UnaryOperationExpression	! remote_send_ctx -> connected		119855	0					
ANR	119888	UnaryOperator	!		119855	0					
ANR	119889	PtrMemberAccess	remote_send_ctx -> connected		119855	1					
ANR	119890	Identifier	remote_send_ctx		119855	0					
ANR	119891	Identifier	connected		119855	1					
ANR	119892	CompoundStatement		10:8:313:376	119855	1					
ANR	119893	IdentifierDeclStatement	struct sockaddr_storage addr ;	397:8:11120:11148	119855	0	True				
ANR	119894	IdentifierDecl	addr		119855	0					
ANR	119895	IdentifierDeclType	struct sockaddr_storage		119855	0					
ANR	119896	Identifier	addr		119855	1					
ANR	119897	IdentifierDeclStatement	socklen_t len = sizeof ( struct sockaddr_storage ) ;	398:8:11158:11205	119855	1	True				
ANR	119898	IdentifierDecl	len = sizeof ( struct sockaddr_storage )		119855	0					
ANR	119899	IdentifierDeclType	socklen_t		119855	0					
ANR	119900	Identifier	len		119855	1					
ANR	119901	AssignmentExpression	len = sizeof ( struct sockaddr_storage )		119855	2		=			
ANR	119902	Identifier	len		119855	0					
ANR	119903	SizeofExpression	sizeof ( struct sockaddr_storage )		119855	1					
ANR	119904	Sizeof	sizeof		119855	0					
ANR	119905	SizeofOperand	struct sockaddr_storage		119855	1					
ANR	119906	IdentifierDeclStatement	"int r = getpeername ( remote -> fd , ( struct sockaddr * ) & addr , & len ) ;"	400:8:11216:11279	119855	2	True				
ANR	119907	IdentifierDecl	"r = getpeername ( remote -> fd , ( struct sockaddr * ) & addr , & len )"		119855	0					
ANR	119908	IdentifierDeclType	int		119855	0					
ANR	119909	Identifier	r		119855	1					
ANR	119910	AssignmentExpression	"r = getpeername ( remote -> fd , ( struct sockaddr * ) & addr , & len )"		119855	2		=			
ANR	119911	Identifier	r		119855	0					
ANR	119912	CallExpression	"getpeername ( remote -> fd , ( struct sockaddr * ) & addr , & len )"		119855	1					
ANR	119913	Callee	getpeername		119855	0					
ANR	119914	Identifier	getpeername		119855	0					
ANR	119915	ArgumentList	remote -> fd		119855	1					
ANR	119916	Argument	remote -> fd		119855	0					
ANR	119917	PtrMemberAccess	remote -> fd		119855	0					
ANR	119918	Identifier	remote		119855	0					
ANR	119919	Identifier	fd		119855	1					
ANR	119920	Argument	( struct sockaddr * ) & addr		119855	1					
ANR	119921	CastExpression	( struct sockaddr * ) & addr		119855	0					
ANR	119922	CastTarget	struct sockaddr *		119855	0					
ANR	119923	UnaryOperationExpression	& addr		119855	1					
ANR	119924	UnaryOperator	&		119855	0					
ANR	119925	Identifier	addr		119855	1					
ANR	119926	Argument	& len		119855	2					
ANR	119927	UnaryOperationExpression	& len		119855	0					
ANR	119928	UnaryOperator	&		119855	0					
ANR	119929	Identifier	len		119855	1					
ANR	119930	IfStatement	if ( r == 0 )		119855	3					
ANR	119931	Condition	r == 0	401:12:11293:11298	119855	0	True				
ANR	119932	EqualityExpression	r == 0		119855	0		==			
ANR	119933	Identifier	r		119855	0					
ANR	119934	PrimaryExpression	0		119855	1					
ANR	119935	CompoundStatement		64:12:2488:2544	119855	1					
ANR	119936	ExpressionStatement	remote_send_ctx -> connected = 1	402:12:11315:11345	119855	0	True				
ANR	119937	AssignmentExpression	remote_send_ctx -> connected = 1		119855	0		=			
ANR	119938	PtrMemberAccess	remote_send_ctx -> connected		119855	0					
ANR	119939	Identifier	remote_send_ctx		119855	0					
ANR	119940	Identifier	connected		119855	1					
ANR	119941	PrimaryExpression	1		119855	1					
ANR	119942	ExpressionStatement	ev_io_stop ( EV_A_ & remote_send_ctx -> io )	403:12:11359:11398	119855	1	True				
ANR	119943	CallExpression	ev_io_stop ( EV_A_ & remote_send_ctx -> io )		119855	0					
ANR	119944	Callee	ev_io_stop		119855	0					
ANR	119945	Identifier	ev_io_stop		119855	0					
ANR	119946	ArgumentList	EV_A_ & remote_send_ctx -> io		119855	1					
ANR	119947	Argument	EV_A_ & remote_send_ctx -> io		119855	0					
ANR	119948	BitAndExpression	EV_A_ & remote_send_ctx -> io		119855	0		&			
ANR	119949	Identifier	EV_A_		119855	0					
ANR	119950	PtrMemberAccess	remote_send_ctx -> io		119855	1					
ANR	119951	Identifier	remote_send_ctx		119855	0					
ANR	119952	Identifier	io		119855	1					
ANR	119953	ExpressionStatement	ev_timer_stop ( EV_A_ & remote_send_ctx -> watcher )	404:12:11412:11459	119855	2	True				
ANR	119954	CallExpression	ev_timer_stop ( EV_A_ & remote_send_ctx -> watcher )		119855	0					
ANR	119955	Callee	ev_timer_stop		119855	0					
ANR	119956	Identifier	ev_timer_stop		119855	0					
ANR	119957	ArgumentList	EV_A_ & remote_send_ctx -> watcher		119855	1					
ANR	119958	Argument	EV_A_ & remote_send_ctx -> watcher		119855	0					
ANR	119959	BitAndExpression	EV_A_ & remote_send_ctx -> watcher		119855	0		&			
ANR	119960	Identifier	EV_A_		119855	0					
ANR	119961	PtrMemberAccess	remote_send_ctx -> watcher		119855	1					
ANR	119962	Identifier	remote_send_ctx		119855	0					
ANR	119963	Identifier	watcher		119855	1					
ANR	119964	ExpressionStatement	server -> abuf = ( buffer_t * ) ss_malloc ( sizeof ( buffer_t ) )	406:12:11474:11528	119855	3	True				
ANR	119965	AssignmentExpression	server -> abuf = ( buffer_t * ) ss_malloc ( sizeof ( buffer_t ) )		119855	0		=			
ANR	119966	PtrMemberAccess	server -> abuf		119855	0					
ANR	119967	Identifier	server		119855	0					
ANR	119968	Identifier	abuf		119855	1					
ANR	119969	CastExpression	( buffer_t * ) ss_malloc ( sizeof ( buffer_t ) )		119855	1					
ANR	119970	CastTarget	buffer_t *		119855	0					
ANR	119971	CallExpression	ss_malloc ( sizeof ( buffer_t ) )		119855	1					
ANR	119972	Callee	ss_malloc		119855	0					
ANR	119973	Identifier	ss_malloc		119855	0					
ANR	119974	ArgumentList	sizeof ( buffer_t )		119855	1					
ANR	119975	Argument	sizeof ( buffer_t )		119855	0					
ANR	119976	SizeofExpression	sizeof ( buffer_t )		119855	0					
ANR	119977	Sizeof	sizeof		119855	0					
ANR	119978	SizeofOperand	buffer_t		119855	1					
ANR	119979	IdentifierDeclStatement	buffer_t * abuf = server -> abuf ;	407:12:11542:11571	119855	4	True				
ANR	119980	IdentifierDecl	* abuf = server -> abuf		119855	0					
ANR	119981	IdentifierDeclType	buffer_t *		119855	0					
ANR	119982	Identifier	abuf		119855	1					
ANR	119983	AssignmentExpression	* abuf = server -> abuf		119855	2		=			
ANR	119984	Identifier	abuf		119855	0					
ANR	119985	PtrMemberAccess	server -> abuf		119855	1					
ANR	119986	Identifier	server		119855	0					
ANR	119987	Identifier	abuf		119855	1					
ANR	119988	ExpressionStatement	"balloc ( abuf , BUF_SIZE )"	408:12:11585:11607	119855	5	True				
ANR	119989	CallExpression	"balloc ( abuf , BUF_SIZE )"		119855	0					
ANR	119990	Callee	balloc		119855	0					
ANR	119991	Identifier	balloc		119855	0					
ANR	119992	ArgumentList	abuf		119855	1					
ANR	119993	Argument	abuf		119855	0					
ANR	119994	Identifier	abuf		119855	0					
ANR	119995	Argument	BUF_SIZE		119855	1					
ANR	119996	Identifier	BUF_SIZE		119855	0					
ANR	119997	IdentifierDeclStatement	ss_addr_t * sa = & server -> destaddr ;	410:12:11622:11655	119855	6	True				
ANR	119998	IdentifierDecl	* sa = & server -> destaddr		119855	0					
ANR	119999	IdentifierDeclType	ss_addr_t *		119855	0					
ANR	120000	Identifier	sa		119855	1					
ANR	120001	AssignmentExpression	* sa = & server -> destaddr		119855	2		=			
ANR	120002	Identifier	sa		119855	0					
ANR	120003	UnaryOperationExpression	& server -> destaddr		119855	1					
ANR	120004	UnaryOperator	&		119855	0					
ANR	120005	PtrMemberAccess	server -> destaddr		119855	1					
ANR	120006	Identifier	server		119855	0					
ANR	120007	Identifier	destaddr		119855	1					
ANR	120008	IdentifierDeclStatement	struct cork_ip ip ;	411:12:11669:11686	119855	7	True				
ANR	120009	IdentifierDecl	ip		119855	0					
ANR	120010	IdentifierDeclType	struct cork_ip		119855	0					
ANR	120011	Identifier	ip		119855	1					
ANR	120012	IfStatement	"if ( cork_ip_init ( & ip , sa -> host ) != - 1 )"		119855	8					
ANR	120013	Condition	"cork_ip_init ( & ip , sa -> host ) != - 1"	412:16:11704:11736	119855	0	True				
ANR	120014	EqualityExpression	"cork_ip_init ( & ip , sa -> host ) != - 1"		119855	0		!=			
ANR	120015	CallExpression	"cork_ip_init ( & ip , sa -> host )"		119855	0					
ANR	120016	Callee	cork_ip_init		119855	0					
ANR	120017	Identifier	cork_ip_init		119855	0					
ANR	120018	ArgumentList	& ip		119855	1					
ANR	120019	Argument	& ip		119855	0					
ANR	120020	UnaryOperationExpression	& ip		119855	0					
ANR	120021	UnaryOperator	&		119855	0					
ANR	120022	Identifier	ip		119855	1					
ANR	120023	Argument	sa -> host		119855	1					
ANR	120024	PtrMemberAccess	sa -> host		119855	0					
ANR	120025	Identifier	sa		119855	0					
ANR	120026	Identifier	host		119855	1					
ANR	120027	UnaryOperationExpression	- 1		119855	1					
ANR	120028	UnaryOperator	-		119855	0					
ANR	120029	PrimaryExpression	1		119855	1					
ANR	120030	CompoundStatement		22:51:836:836	119855	1					
ANR	120031	IfStatement	if ( ip . version == 4 )		119855	0					
ANR	120032	Condition	ip . version == 4	413:20:11761:11775	119855	0	True				
ANR	120033	EqualityExpression	ip . version == 4		119855	0		==			
ANR	120034	MemberAccess	ip . version		119855	0					
ANR	120035	Identifier	ip		119855	0					
ANR	120036	Identifier	version		119855	1					
ANR	120037	PrimaryExpression	4		119855	1					
ANR	120038	CompoundStatement		27:20:1036:1073	119855	1					
ANR	120039	IdentifierDeclStatement	struct in_addr host ;	415:20:11836:11855	119855	0	True				
ANR	120040	IdentifierDecl	host		119855	0					
ANR	120041	IdentifierDeclType	struct in_addr		119855	0					
ANR	120042	Identifier	host		119855	1					
ANR	120043	ExpressionStatement	"memset ( & host , 0 , sizeof ( struct in_addr ) )"	416:20:11877:11917	119855	1	True				
ANR	120044	CallExpression	"memset ( & host , 0 , sizeof ( struct in_addr ) )"		119855	0					
ANR	120045	Callee	memset		119855	0					
ANR	120046	Identifier	memset		119855	0					
ANR	120047	ArgumentList	& host		119855	1					
ANR	120048	Argument	& host		119855	0					
ANR	120049	UnaryOperationExpression	& host		119855	0					
ANR	120050	UnaryOperator	&		119855	0					
ANR	120051	Identifier	host		119855	1					
ANR	120052	Argument	0		119855	1					
ANR	120053	PrimaryExpression	0		119855	0					
ANR	120054	Argument	sizeof ( struct in_addr )		119855	2					
ANR	120055	SizeofExpression	sizeof ( struct in_addr )		119855	0					
ANR	120056	Sizeof	sizeof		119855	0					
ANR	120057	SizeofOperand	struct in_addr		119855	1					
ANR	120058	IdentifierDeclStatement	int host_len = sizeof ( struct in_addr ) ;	417:20:11939:11976	119855	2	True				
ANR	120059	IdentifierDecl	host_len = sizeof ( struct in_addr )		119855	0					
ANR	120060	IdentifierDeclType	int		119855	0					
ANR	120061	Identifier	host_len		119855	1					
ANR	120062	AssignmentExpression	host_len = sizeof ( struct in_addr )		119855	2		=			
ANR	120063	Identifier	host_len		119855	0					
ANR	120064	SizeofExpression	sizeof ( struct in_addr )		119855	1					
ANR	120065	Sizeof	sizeof		119855	0					
ANR	120066	SizeofOperand	struct in_addr		119855	1					
ANR	120067	IfStatement	"if ( inet_pton ( AF_INET , sa -> host , & host ) == - 1 )"		119855	3					
ANR	120068	Condition	"inet_pton ( AF_INET , sa -> host , & host ) == - 1"	419:24:12003:12043	119855	0	True				
ANR	120069	EqualityExpression	"inet_pton ( AF_INET , sa -> host , & host ) == - 1"		119855	0		==			
ANR	120070	CallExpression	"inet_pton ( AF_INET , sa -> host , & host )"		119855	0					
ANR	120071	Callee	inet_pton		119855	0					
ANR	120072	Identifier	inet_pton		119855	0					
ANR	120073	ArgumentList	AF_INET		119855	1					
ANR	120074	Argument	AF_INET		119855	0					
ANR	120075	Identifier	AF_INET		119855	0					
ANR	120076	Argument	sa -> host		119855	1					
ANR	120077	PtrMemberAccess	sa -> host		119855	0					
ANR	120078	Identifier	sa		119855	0					
ANR	120079	Identifier	host		119855	1					
ANR	120080	Argument	& host		119855	2					
ANR	120081	UnaryOperationExpression	& host		119855	0					
ANR	120082	UnaryOperator	&		119855	0					
ANR	120083	Identifier	host		119855	1					
ANR	120084	UnaryOperationExpression	- 1		119855	1					
ANR	120085	UnaryOperator	-		119855	0					
ANR	120086	PrimaryExpression	1		119855	1					
ANR	120087	CompoundStatement		29:67:1143:1143	119855	1					
ANR	120088	ExpressionStatement	"FATAL ( ""IP parser error"" )"	420:24:12072:12096	119855	0	True				
ANR	120089	CallExpression	"FATAL ( ""IP parser error"" )"		119855	0					
ANR	120090	Callee	FATAL		119855	0					
ANR	120091	Identifier	FATAL		119855	0					
ANR	120092	ArgumentList	"""IP parser error"""		119855	1					
ANR	120093	Argument	"""IP parser error"""		119855	0					
ANR	120094	PrimaryExpression	"""IP parser error"""		119855	0					
ANR	120095	ExpressionStatement	abuf -> data [ abuf -> len ++ ] = 1	422:20:12140:12167	119855	4	True				
ANR	120096	AssignmentExpression	abuf -> data [ abuf -> len ++ ] = 1		119855	0		=			
ANR	120097	ArrayIndexing	abuf -> data [ abuf -> len ++ ]		119855	0					
ANR	120098	PtrMemberAccess	abuf -> data		119855	0					
ANR	120099	Identifier	abuf		119855	0					
ANR	120100	Identifier	data		119855	1					
ANR	120101	PostIncDecOperationExpression	abuf -> len ++		119855	1					
ANR	120102	PtrMemberAccess	abuf -> len		119855	0					
ANR	120103	Identifier	abuf		119855	0					
ANR	120104	Identifier	len		119855	1					
ANR	120105	IncDec	++		119855	1					
ANR	120106	PrimaryExpression	1		119855	1					
ANR	120107	ExpressionStatement	"memcpy ( abuf -> data + abuf -> len , & host , host_len )"	423:20:12189:12236	119855	5	True				
ANR	120108	CallExpression	"memcpy ( abuf -> data + abuf -> len , & host , host_len )"		119855	0					
ANR	120109	Callee	memcpy		119855	0					
ANR	120110	Identifier	memcpy		119855	0					
ANR	120111	ArgumentList	abuf -> data + abuf -> len		119855	1					
ANR	120112	Argument	abuf -> data + abuf -> len		119855	0					
ANR	120113	AdditiveExpression	abuf -> data + abuf -> len		119855	0		+			
ANR	120114	PtrMemberAccess	abuf -> data		119855	0					
ANR	120115	Identifier	abuf		119855	0					
ANR	120116	Identifier	data		119855	1					
ANR	120117	PtrMemberAccess	abuf -> len		119855	1					
ANR	120118	Identifier	abuf		119855	0					
ANR	120119	Identifier	len		119855	1					
ANR	120120	Argument	& host		119855	1					
ANR	120121	UnaryOperationExpression	& host		119855	0					
ANR	120122	UnaryOperator	&		119855	0					
ANR	120123	Identifier	host		119855	1					
ANR	120124	Argument	host_len		119855	2					
ANR	120125	Identifier	host_len		119855	0					
ANR	120126	ExpressionStatement	abuf -> len += host_len	424:20:12258:12279	119855	6	True				
ANR	120127	AssignmentExpression	abuf -> len += host_len		119855	0		+=			
ANR	120128	PtrMemberAccess	abuf -> len		119855	0					
ANR	120129	Identifier	abuf		119855	0					
ANR	120130	Identifier	len		119855	1					
ANR	120131	Identifier	host_len		119855	1					
ANR	120132	ElseStatement	else		119855	0					
ANR	120133	IfStatement	if ( ip . version == 6 )		119855	0					
ANR	120134	Condition	ip . version == 6	425:27:12308:12322	119855	0	True				
ANR	120135	EqualityExpression	ip . version == 6		119855	0		==			
ANR	120136	MemberAccess	ip . version		119855	0					
ANR	120137	Identifier	ip		119855	0					
ANR	120138	Identifier	version		119855	1					
ANR	120139	PrimaryExpression	6		119855	1					
ANR	120140	CompoundStatement		39:20:1585:1623	119855	1					
ANR	120141	IdentifierDeclStatement	struct in6_addr host ;	427:20:12383:12403	119855	0	True				
ANR	120142	IdentifierDecl	host		119855	0					
ANR	120143	IdentifierDeclType	struct in6_addr		119855	0					
ANR	120144	Identifier	host		119855	1					
ANR	120145	ExpressionStatement	"memset ( & host , 0 , sizeof ( struct in6_addr ) )"	428:20:12425:12466	119855	1	True				
ANR	120146	CallExpression	"memset ( & host , 0 , sizeof ( struct in6_addr ) )"		119855	0					
ANR	120147	Callee	memset		119855	0					
ANR	120148	Identifier	memset		119855	0					
ANR	120149	ArgumentList	& host		119855	1					
ANR	120150	Argument	& host		119855	0					
ANR	120151	UnaryOperationExpression	& host		119855	0					
ANR	120152	UnaryOperator	&		119855	0					
ANR	120153	Identifier	host		119855	1					
ANR	120154	Argument	0		119855	1					
ANR	120155	PrimaryExpression	0		119855	0					
ANR	120156	Argument	sizeof ( struct in6_addr )		119855	2					
ANR	120157	SizeofExpression	sizeof ( struct in6_addr )		119855	0					
ANR	120158	Sizeof	sizeof		119855	0					
ANR	120159	SizeofOperand	struct in6_addr		119855	1					
ANR	120160	IdentifierDeclStatement	int host_len = sizeof ( struct in6_addr ) ;	429:20:12488:12526	119855	2	True				
ANR	120161	IdentifierDecl	host_len = sizeof ( struct in6_addr )		119855	0					
ANR	120162	IdentifierDeclType	int		119855	0					
ANR	120163	Identifier	host_len		119855	1					
ANR	120164	AssignmentExpression	host_len = sizeof ( struct in6_addr )		119855	2		=			
ANR	120165	Identifier	host_len		119855	0					
ANR	120166	SizeofExpression	sizeof ( struct in6_addr )		119855	1					
ANR	120167	Sizeof	sizeof		119855	0					
ANR	120168	SizeofOperand	struct in6_addr		119855	1					
ANR	120169	IfStatement	"if ( inet_pton ( AF_INET6 , sa -> host , & host ) == - 1 )"		119855	3					
ANR	120170	Condition	"inet_pton ( AF_INET6 , sa -> host , & host ) == - 1"	431:24:12553:12594	119855	0	True				
ANR	120171	EqualityExpression	"inet_pton ( AF_INET6 , sa -> host , & host ) == - 1"		119855	0		==			
ANR	120172	CallExpression	"inet_pton ( AF_INET6 , sa -> host , & host )"		119855	0					
ANR	120173	Callee	inet_pton		119855	0					
ANR	120174	Identifier	inet_pton		119855	0					
ANR	120175	ArgumentList	AF_INET6		119855	1					
ANR	120176	Argument	AF_INET6		119855	0					
ANR	120177	Identifier	AF_INET6		119855	0					
ANR	120178	Argument	sa -> host		119855	1					
ANR	120179	PtrMemberAccess	sa -> host		119855	0					
ANR	120180	Identifier	sa		119855	0					
ANR	120181	Identifier	host		119855	1					
ANR	120182	Argument	& host		119855	2					
ANR	120183	UnaryOperationExpression	& host		119855	0					
ANR	120184	UnaryOperator	&		119855	0					
ANR	120185	Identifier	host		119855	1					
ANR	120186	UnaryOperationExpression	- 1		119855	1					
ANR	120187	UnaryOperator	-		119855	0					
ANR	120188	PrimaryExpression	1		119855	1					
ANR	120189	CompoundStatement		41:68:1694:1694	119855	1					
ANR	120190	ExpressionStatement	"FATAL ( ""IP parser error"" )"	432:24:12623:12647	119855	0	True				
ANR	120191	CallExpression	"FATAL ( ""IP parser error"" )"		119855	0					
ANR	120192	Callee	FATAL		119855	0					
ANR	120193	Identifier	FATAL		119855	0					
ANR	120194	ArgumentList	"""IP parser error"""		119855	1					
ANR	120195	Argument	"""IP parser error"""		119855	0					
ANR	120196	PrimaryExpression	"""IP parser error"""		119855	0					
ANR	120197	ExpressionStatement	abuf -> data [ abuf -> len ++ ] = 4	434:20:12691:12718	119855	4	True				
ANR	120198	AssignmentExpression	abuf -> data [ abuf -> len ++ ] = 4		119855	0		=			
ANR	120199	ArrayIndexing	abuf -> data [ abuf -> len ++ ]		119855	0					
ANR	120200	PtrMemberAccess	abuf -> data		119855	0					
ANR	120201	Identifier	abuf		119855	0					
ANR	120202	Identifier	data		119855	1					
ANR	120203	PostIncDecOperationExpression	abuf -> len ++		119855	1					
ANR	120204	PtrMemberAccess	abuf -> len		119855	0					
ANR	120205	Identifier	abuf		119855	0					
ANR	120206	Identifier	len		119855	1					
ANR	120207	IncDec	++		119855	1					
ANR	120208	PrimaryExpression	4		119855	1					
ANR	120209	ExpressionStatement	"memcpy ( abuf -> data + abuf -> len , & host , host_len )"	435:20:12740:12787	119855	5	True				
ANR	120210	CallExpression	"memcpy ( abuf -> data + abuf -> len , & host , host_len )"		119855	0					
ANR	120211	Callee	memcpy		119855	0					
ANR	120212	Identifier	memcpy		119855	0					
ANR	120213	ArgumentList	abuf -> data + abuf -> len		119855	1					
ANR	120214	Argument	abuf -> data + abuf -> len		119855	0					
ANR	120215	AdditiveExpression	abuf -> data + abuf -> len		119855	0		+			
ANR	120216	PtrMemberAccess	abuf -> data		119855	0					
ANR	120217	Identifier	abuf		119855	0					
ANR	120218	Identifier	data		119855	1					
ANR	120219	PtrMemberAccess	abuf -> len		119855	1					
ANR	120220	Identifier	abuf		119855	0					
ANR	120221	Identifier	len		119855	1					
ANR	120222	Argument	& host		119855	1					
ANR	120223	UnaryOperationExpression	& host		119855	0					
ANR	120224	UnaryOperator	&		119855	0					
ANR	120225	Identifier	host		119855	1					
ANR	120226	Argument	host_len		119855	2					
ANR	120227	Identifier	host_len		119855	0					
ANR	120228	ExpressionStatement	abuf -> len += host_len	436:20:12809:12830	119855	6	True				
ANR	120229	AssignmentExpression	abuf -> len += host_len		119855	0		+=			
ANR	120230	PtrMemberAccess	abuf -> len		119855	0					
ANR	120231	Identifier	abuf		119855	0					
ANR	120232	Identifier	len		119855	1					
ANR	120233	Identifier	host_len		119855	1					
ANR	120234	ElseStatement	else		119855	0					
ANR	120235	CompoundStatement		47:23:1952:1952	119855	0					
ANR	120236	ExpressionStatement	"FATAL ( ""IP parser error"" )"	438:20:12877:12901	119855	0	True				
ANR	120237	CallExpression	"FATAL ( ""IP parser error"" )"		119855	0					
ANR	120238	Callee	FATAL		119855	0					
ANR	120239	Identifier	FATAL		119855	0					
ANR	120240	ArgumentList	"""IP parser error"""		119855	1					
ANR	120241	Argument	"""IP parser error"""		119855	0					
ANR	120242	PrimaryExpression	"""IP parser error"""		119855	0					
ANR	120243	ElseStatement	else		119855	0					
ANR	120244	CompoundStatement		52:16:2089:2120	119855	0					
ANR	120245	IdentifierDeclStatement	int host_len = strlen ( sa -> host ) ;	442:16:12992:13023	119855	0	True				
ANR	120246	IdentifierDecl	host_len = strlen ( sa -> host )		119855	0					
ANR	120247	IdentifierDeclType	int		119855	0					
ANR	120248	Identifier	host_len		119855	1					
ANR	120249	AssignmentExpression	host_len = strlen ( sa -> host )		119855	2		=			
ANR	120250	Identifier	host_len		119855	0					
ANR	120251	CallExpression	strlen ( sa -> host )		119855	1					
ANR	120252	Callee	strlen		119855	0					
ANR	120253	Identifier	strlen		119855	0					
ANR	120254	ArgumentList	sa -> host		119855	1					
ANR	120255	Argument	sa -> host		119855	0					
ANR	120256	PtrMemberAccess	sa -> host		119855	0					
ANR	120257	Identifier	sa		119855	0					
ANR	120258	Identifier	host		119855	1					
ANR	120259	ExpressionStatement	abuf -> data [ abuf -> len ++ ] = 3	444:16:13042:13069	119855	1	True				
ANR	120260	AssignmentExpression	abuf -> data [ abuf -> len ++ ] = 3		119855	0		=			
ANR	120261	ArrayIndexing	abuf -> data [ abuf -> len ++ ]		119855	0					
ANR	120262	PtrMemberAccess	abuf -> data		119855	0					
ANR	120263	Identifier	abuf		119855	0					
ANR	120264	Identifier	data		119855	1					
ANR	120265	PostIncDecOperationExpression	abuf -> len ++		119855	1					
ANR	120266	PtrMemberAccess	abuf -> len		119855	0					
ANR	120267	Identifier	abuf		119855	0					
ANR	120268	Identifier	len		119855	1					
ANR	120269	IncDec	++		119855	1					
ANR	120270	PrimaryExpression	3		119855	1					
ANR	120271	ExpressionStatement	abuf -> data [ abuf -> len ++ ] = host_len	445:16:13087:13121	119855	2	True				
ANR	120272	AssignmentExpression	abuf -> data [ abuf -> len ++ ] = host_len		119855	0		=			
ANR	120273	ArrayIndexing	abuf -> data [ abuf -> len ++ ]		119855	0					
ANR	120274	PtrMemberAccess	abuf -> data		119855	0					
ANR	120275	Identifier	abuf		119855	0					
ANR	120276	Identifier	data		119855	1					
ANR	120277	PostIncDecOperationExpression	abuf -> len ++		119855	1					
ANR	120278	PtrMemberAccess	abuf -> len		119855	0					
ANR	120279	Identifier	abuf		119855	0					
ANR	120280	Identifier	len		119855	1					
ANR	120281	IncDec	++		119855	1					
ANR	120282	Identifier	host_len		119855	1					
ANR	120283	ExpressionStatement	"memcpy ( abuf -> data + abuf -> len , sa -> host , host_len )"	446:16:13139:13189	119855	3	True				
ANR	120284	CallExpression	"memcpy ( abuf -> data + abuf -> len , sa -> host , host_len )"		119855	0					
ANR	120285	Callee	memcpy		119855	0					
ANR	120286	Identifier	memcpy		119855	0					
ANR	120287	ArgumentList	abuf -> data + abuf -> len		119855	1					
ANR	120288	Argument	abuf -> data + abuf -> len		119855	0					
ANR	120289	AdditiveExpression	abuf -> data + abuf -> len		119855	0		+			
ANR	120290	PtrMemberAccess	abuf -> data		119855	0					
ANR	120291	Identifier	abuf		119855	0					
ANR	120292	Identifier	data		119855	1					
ANR	120293	PtrMemberAccess	abuf -> len		119855	1					
ANR	120294	Identifier	abuf		119855	0					
ANR	120295	Identifier	len		119855	1					
ANR	120296	Argument	sa -> host		119855	1					
ANR	120297	PtrMemberAccess	sa -> host		119855	0					
ANR	120298	Identifier	sa		119855	0					
ANR	120299	Identifier	host		119855	1					
ANR	120300	Argument	host_len		119855	2					
ANR	120301	Identifier	host_len		119855	0					
ANR	120302	ExpressionStatement	abuf -> len += host_len	447:16:13207:13228	119855	4	True				
ANR	120303	AssignmentExpression	abuf -> len += host_len		119855	0		+=			
ANR	120304	PtrMemberAccess	abuf -> len		119855	0					
ANR	120305	Identifier	abuf		119855	0					
ANR	120306	Identifier	len		119855	1					
ANR	120307	Identifier	host_len		119855	1					
ANR	120308	IdentifierDeclStatement	uint16_t port = htons ( atoi ( sa -> port ) ) ;	450:12:13257:13294	119855	9	True				
ANR	120309	IdentifierDecl	port = htons ( atoi ( sa -> port ) )		119855	0					
ANR	120310	IdentifierDeclType	uint16_t		119855	0					
ANR	120311	Identifier	port		119855	1					
ANR	120312	AssignmentExpression	port = htons ( atoi ( sa -> port ) )		119855	2		=			
ANR	120313	Identifier	port		119855	0					
ANR	120314	CallExpression	htons ( atoi ( sa -> port ) )		119855	1					
ANR	120315	Callee	htons		119855	0					
ANR	120316	Identifier	htons		119855	0					
ANR	120317	ArgumentList	atoi ( sa -> port )		119855	1					
ANR	120318	Argument	atoi ( sa -> port )		119855	0					
ANR	120319	CallExpression	atoi ( sa -> port )		119855	0					
ANR	120320	Callee	atoi		119855	0					
ANR	120321	Identifier	atoi		119855	0					
ANR	120322	ArgumentList	sa -> port		119855	1					
ANR	120323	Argument	sa -> port		119855	0					
ANR	120324	PtrMemberAccess	sa -> port		119855	0					
ANR	120325	Identifier	sa		119855	0					
ANR	120326	Identifier	port		119855	1					
ANR	120327	ExpressionStatement	"memcpy ( abuf -> data + abuf -> len , & port , 2 )"	451:12:13308:13348	119855	10	True				
ANR	120328	CallExpression	"memcpy ( abuf -> data + abuf -> len , & port , 2 )"		119855	0					
ANR	120329	Callee	memcpy		119855	0					
ANR	120330	Identifier	memcpy		119855	0					
ANR	120331	ArgumentList	abuf -> data + abuf -> len		119855	1					
ANR	120332	Argument	abuf -> data + abuf -> len		119855	0					
ANR	120333	AdditiveExpression	abuf -> data + abuf -> len		119855	0		+			
ANR	120334	PtrMemberAccess	abuf -> data		119855	0					
ANR	120335	Identifier	abuf		119855	0					
ANR	120336	Identifier	data		119855	1					
ANR	120337	PtrMemberAccess	abuf -> len		119855	1					
ANR	120338	Identifier	abuf		119855	0					
ANR	120339	Identifier	len		119855	1					
ANR	120340	Argument	& port		119855	1					
ANR	120341	UnaryOperationExpression	& port		119855	0					
ANR	120342	UnaryOperator	&		119855	0					
ANR	120343	Identifier	port		119855	1					
ANR	120344	Argument	2		119855	2					
ANR	120345	PrimaryExpression	2		119855	0					
ANR	120346	ExpressionStatement	abuf -> len += 2	452:12:13362:13376	119855	11	True				
ANR	120347	AssignmentExpression	abuf -> len += 2		119855	0		+=			
ANR	120348	PtrMemberAccess	abuf -> len		119855	0					
ANR	120349	Identifier	abuf		119855	0					
ANR	120350	Identifier	len		119855	1					
ANR	120351	PrimaryExpression	2		119855	1					
ANR	120352	IdentifierDeclStatement	"int err = crypto -> encrypt ( abuf , server -> e_ctx , BUF_SIZE ) ;"	454:12:13391:13447	119855	12	True				
ANR	120353	IdentifierDecl	"err = crypto -> encrypt ( abuf , server -> e_ctx , BUF_SIZE )"		119855	0					
ANR	120354	IdentifierDeclType	int		119855	0					
ANR	120355	Identifier	err		119855	1					
ANR	120356	AssignmentExpression	"err = crypto -> encrypt ( abuf , server -> e_ctx , BUF_SIZE )"		119855	2		=			
ANR	120357	Identifier	err		119855	0					
ANR	120358	CallExpression	"crypto -> encrypt ( abuf , server -> e_ctx , BUF_SIZE )"		119855	1					
ANR	120359	Callee	crypto -> encrypt		119855	0					
ANR	120360	PtrMemberAccess	crypto -> encrypt		119855	0					
ANR	120361	Identifier	crypto		119855	0					
ANR	120362	Identifier	encrypt		119855	1					
ANR	120363	ArgumentList	abuf		119855	1					
ANR	120364	Argument	abuf		119855	0					
ANR	120365	Identifier	abuf		119855	0					
ANR	120366	Argument	server -> e_ctx		119855	1					
ANR	120367	PtrMemberAccess	server -> e_ctx		119855	0					
ANR	120368	Identifier	server		119855	0					
ANR	120369	Identifier	e_ctx		119855	1					
ANR	120370	Argument	BUF_SIZE		119855	2					
ANR	120371	Identifier	BUF_SIZE		119855	0					
ANR	120372	IfStatement	if ( err )		119855	13					
ANR	120373	Condition	err	456:16:13466:13468	119855	0	True				
ANR	120374	Identifier	err		119855	0					
ANR	120375	CompoundStatement		66:21:2568:2568	119855	1					
ANR	120376	ExpressionStatement	bfree ( abuf )	457:16:13489:13500	119855	0	True				
ANR	120377	CallExpression	bfree ( abuf )		119855	0					
ANR	120378	Callee	bfree		119855	0					
ANR	120379	Identifier	bfree		119855	0					
ANR	120380	ArgumentList	abuf		119855	1					
ANR	120381	Argument	abuf		119855	0					
ANR	120382	Identifier	abuf		119855	0					
ANR	120383	ExpressionStatement	"LOGE ( ""invalid password or cipher"" )"	458:16:13518:13552	119855	1	True				
ANR	120384	CallExpression	"LOGE ( ""invalid password or cipher"" )"		119855	0					
ANR	120385	Callee	LOGE		119855	0					
ANR	120386	Identifier	LOGE		119855	0					
ANR	120387	ArgumentList	"""invalid password or cipher"""		119855	1					
ANR	120388	Argument	"""invalid password or cipher"""		119855	0					
ANR	120389	PrimaryExpression	"""invalid password or cipher"""		119855	0					
ANR	120390	Statement	close_and_free_remote	459:16:13570:13590	119855	2	True				
ANR	120391	Statement	(	459:37:13591:13591	119855	3	True				
ANR	120392	Statement	EV_A_	459:38:13592:13596	119855	4	True				
ANR	120393	Statement	remote	459:44:13598:13603	119855	5	True				
ANR	120394	Statement	)	459:50:13604:13604	119855	6	True				
ANR	120395	ExpressionStatement		459:51:13605:13605	119855	7	True				
ANR	120396	Statement	close_and_free_server	460:16:13623:13643	119855	8	True				
ANR	120397	Statement	(	460:37:13644:13644	119855	9	True				
ANR	120398	Statement	EV_A_	460:38:13645:13649	119855	10	True				
ANR	120399	Statement	server	460:44:13651:13656	119855	11	True				
ANR	120400	Statement	)	460:50:13657:13657	119855	12	True				
ANR	120401	ExpressionStatement		460:51:13658:13658	119855	13	True				
ANR	120402	ReturnStatement	return ;	461:16:13676:13682	119855	14	True				
ANR	120403	ExpressionStatement	ev_timer_start ( EV_A_ & server -> delayed_connect_watcher )	464:12:13711:13766	119855	14	True				
ANR	120404	CallExpression	ev_timer_start ( EV_A_ & server -> delayed_connect_watcher )		119855	0					
ANR	120405	Callee	ev_timer_start		119855	0					
ANR	120406	Identifier	ev_timer_start		119855	0					
ANR	120407	ArgumentList	EV_A_ & server -> delayed_connect_watcher		119855	1					
ANR	120408	Argument	EV_A_ & server -> delayed_connect_watcher		119855	0					
ANR	120409	BitAndExpression	EV_A_ & server -> delayed_connect_watcher		119855	0		&			
ANR	120410	Identifier	EV_A_		119855	0					
ANR	120411	PtrMemberAccess	server -> delayed_connect_watcher		119855	1					
ANR	120412	Identifier	server		119855	0					
ANR	120413	Identifier	delayed_connect_watcher		119855	1					
ANR	120414	ExpressionStatement	ev_io_start ( EV_A_ & remote -> recv_ctx -> io )	465:12:13780:13821	119855	15	True				
ANR	120415	CallExpression	ev_io_start ( EV_A_ & remote -> recv_ctx -> io )		119855	0					
ANR	120416	Callee	ev_io_start		119855	0					
ANR	120417	Identifier	ev_io_start		119855	0					
ANR	120418	ArgumentList	EV_A_ & remote -> recv_ctx -> io		119855	1					
ANR	120419	Argument	EV_A_ & remote -> recv_ctx -> io		119855	0					
ANR	120420	BitAndExpression	EV_A_ & remote -> recv_ctx -> io		119855	0		&			
ANR	120421	Identifier	EV_A_		119855	0					
ANR	120422	PtrMemberAccess	remote -> recv_ctx -> io		119855	1					
ANR	120423	PtrMemberAccess	remote -> recv_ctx		119855	0					
ANR	120424	Identifier	remote		119855	0					
ANR	120425	Identifier	recv_ctx		119855	1					
ANR	120426	Identifier	io		119855	1					
ANR	120427	ExpressionStatement	ev_io_start ( EV_A_ & server -> recv_ctx -> io )	466:12:13835:13876	119855	16	True				
ANR	120428	CallExpression	ev_io_start ( EV_A_ & server -> recv_ctx -> io )		119855	0					
ANR	120429	Callee	ev_io_start		119855	0					
ANR	120430	Identifier	ev_io_start		119855	0					
ANR	120431	ArgumentList	EV_A_ & server -> recv_ctx -> io		119855	1					
ANR	120432	Argument	EV_A_ & server -> recv_ctx -> io		119855	0					
ANR	120433	BitAndExpression	EV_A_ & server -> recv_ctx -> io		119855	0		&			
ANR	120434	Identifier	EV_A_		119855	0					
ANR	120435	PtrMemberAccess	server -> recv_ctx -> io		119855	1					
ANR	120436	PtrMemberAccess	server -> recv_ctx		119855	0					
ANR	120437	Identifier	server		119855	0					
ANR	120438	Identifier	recv_ctx		119855	1					
ANR	120439	Identifier	io		119855	1					
ANR	120440	ReturnStatement	return ;	468:12:13891:13897	119855	17	True				
ANR	120441	ElseStatement	else		119855	0					
ANR	120442	CompoundStatement		79:15:3011:3011	119855	0					
ANR	120443	ExpressionStatement	"ERROR ( ""getpeername"" )"	470:12:13928:13948	119855	0	True				
ANR	120444	CallExpression	"ERROR ( ""getpeername"" )"		119855	0					
ANR	120445	Callee	ERROR		119855	0					
ANR	120446	Identifier	ERROR		119855	0					
ANR	120447	ArgumentList	"""getpeername"""		119855	1					
ANR	120448	Argument	"""getpeername"""		119855	0					
ANR	120449	PrimaryExpression	"""getpeername"""		119855	0					
ANR	120450	Statement	close_and_free_remote	472:12:13991:14011	119855	1	True				
ANR	120451	Statement	(	472:33:14012:14012	119855	2	True				
ANR	120452	Statement	EV_A_	472:34:14013:14017	119855	3	True				
ANR	120453	Statement	remote	472:40:14019:14024	119855	4	True				
ANR	120454	Statement	)	472:46:14025:14025	119855	5	True				
ANR	120455	ExpressionStatement		472:47:14026:14026	119855	6	True				
ANR	120456	Statement	close_and_free_server	473:12:14040:14060	119855	7	True				
ANR	120457	Statement	(	473:33:14061:14061	119855	8	True				
ANR	120458	Statement	EV_A_	473:34:14062:14066	119855	9	True				
ANR	120459	Statement	server	473:40:14068:14073	119855	10	True				
ANR	120460	Statement	)	473:46:14074:14074	119855	11	True				
ANR	120461	ExpressionStatement		473:47:14075:14075	119855	12	True				
ANR	120462	ReturnStatement	return ;	474:12:14089:14095	119855	13	True				
ANR	120463	ElseStatement	else		119855	0					
ANR	120464	CompoundStatement		86:11:3215:3215	119855	0					
ANR	120465	IfStatement	if ( remote -> buf -> len == 0 && server -> abuf -> len == 0 )		119855	0					
ANR	120466	Condition	remote -> buf -> len == 0 && server -> abuf -> len == 0	477:12:14132:14178	119855	0	True				
ANR	120467	AndExpression	remote -> buf -> len == 0 && server -> abuf -> len == 0		119855	0		&&			
ANR	120468	EqualityExpression	remote -> buf -> len == 0		119855	0		==			
ANR	120469	PtrMemberAccess	remote -> buf -> len		119855	0					
ANR	120470	PtrMemberAccess	remote -> buf		119855	0					
ANR	120471	Identifier	remote		119855	0					
ANR	120472	Identifier	buf		119855	1					
ANR	120473	Identifier	len		119855	1					
ANR	120474	PrimaryExpression	0		119855	1					
ANR	120475	EqualityExpression	server -> abuf -> len == 0		119855	1		==			
ANR	120476	PtrMemberAccess	server -> abuf -> len		119855	0					
ANR	120477	PtrMemberAccess	server -> abuf		119855	0					
ANR	120478	Identifier	server		119855	0					
ANR	120479	Identifier	abuf		119855	1					
ANR	120480	Identifier	len		119855	1					
ANR	120481	PrimaryExpression	0		119855	1					
ANR	120482	CompoundStatement		87:61:3278:3278	119855	1					
ANR	120483	Statement	close_and_free_remote	479:12:14225:14245	119855	0	True				
ANR	120484	Statement	(	479:33:14246:14246	119855	1	True				
ANR	120485	Statement	EV_A_	479:34:14247:14251	119855	2	True				
ANR	120486	Statement	remote	479:40:14253:14258	119855	3	True				
ANR	120487	Statement	)	479:46:14259:14259	119855	4	True				
ANR	120488	ExpressionStatement		479:47:14260:14260	119855	5	True				
ANR	120489	Statement	close_and_free_server	480:12:14274:14294	119855	6	True				
ANR	120490	Statement	(	480:33:14295:14295	119855	7	True				
ANR	120491	Statement	EV_A_	480:34:14296:14300	119855	8	True				
ANR	120492	Statement	server	480:40:14302:14307	119855	9	True				
ANR	120493	Statement	)	480:46:14308:14308	119855	10	True				
ANR	120494	ExpressionStatement		480:47:14309:14309	119855	11	True				
ANR	120495	ReturnStatement	return ;	481:12:14323:14329	119855	12	True				
ANR	120496	ElseStatement	else		119855	0					
ANR	120497	CompoundStatement		101:12:3766:3878	119855	0					
ANR	120498	IfStatement	if ( server -> abuf != NULL )		119855	0					
ANR	120499	Condition	server -> abuf != NULL	484:16:14396:14415	119855	0	True				
ANR	120500	EqualityExpression	server -> abuf != NULL		119855	0		!=			
ANR	120501	PtrMemberAccess	server -> abuf		119855	0					
ANR	120502	Identifier	server		119855	0					
ANR	120503	Identifier	abuf		119855	1					
ANR	120504	Identifier	NULL		119855	1					
ANR	120505	CompoundStatement		94:38:3515:3515	119855	1					
ANR	120506	ExpressionStatement	assert ( remote -> buf -> len == 0 )	485:16:14436:14465	119855	0	True				
ANR	120507	CallExpression	assert ( remote -> buf -> len == 0 )		119855	0					
ANR	120508	Callee	assert		119855	0					
ANR	120509	Identifier	assert		119855	0					
ANR	120510	ArgumentList	remote -> buf -> len == 0		119855	1					
ANR	120511	Argument	remote -> buf -> len == 0		119855	0					
ANR	120512	EqualityExpression	remote -> buf -> len == 0		119855	0		==			
ANR	120513	PtrMemberAccess	remote -> buf -> len		119855	0					
ANR	120514	PtrMemberAccess	remote -> buf		119855	0					
ANR	120515	Identifier	remote		119855	0					
ANR	120516	Identifier	buf		119855	1					
ANR	120517	Identifier	len		119855	1					
ANR	120518	PrimaryExpression	0		119855	1					
ANR	120519	ExpressionStatement	"bprepend ( remote -> buf , server -> abuf , BUF_SIZE )"	486:16:14483:14528	119855	1	True				
ANR	120520	CallExpression	"bprepend ( remote -> buf , server -> abuf , BUF_SIZE )"		119855	0					
ANR	120521	Callee	bprepend		119855	0					
ANR	120522	Identifier	bprepend		119855	0					
ANR	120523	ArgumentList	remote -> buf		119855	1					
ANR	120524	Argument	remote -> buf		119855	0					
ANR	120525	PtrMemberAccess	remote -> buf		119855	0					
ANR	120526	Identifier	remote		119855	0					
ANR	120527	Identifier	buf		119855	1					
ANR	120528	Argument	server -> abuf		119855	1					
ANR	120529	PtrMemberAccess	server -> abuf		119855	0					
ANR	120530	Identifier	server		119855	0					
ANR	120531	Identifier	abuf		119855	1					
ANR	120532	Argument	BUF_SIZE		119855	2					
ANR	120533	Identifier	BUF_SIZE		119855	0					
ANR	120534	ExpressionStatement	bfree ( server -> abuf )	487:16:14546:14565	119855	2	True				
ANR	120535	CallExpression	bfree ( server -> abuf )		119855	0					
ANR	120536	Callee	bfree		119855	0					
ANR	120537	Identifier	bfree		119855	0					
ANR	120538	ArgumentList	server -> abuf		119855	1					
ANR	120539	Argument	server -> abuf		119855	0					
ANR	120540	PtrMemberAccess	server -> abuf		119855	0					
ANR	120541	Identifier	server		119855	0					
ANR	120542	Identifier	abuf		119855	1					
ANR	120543	ExpressionStatement	ss_free ( server -> abuf )	488:16:14583:14604	119855	3	True				
ANR	120544	CallExpression	ss_free ( server -> abuf )		119855	0					
ANR	120545	Callee	ss_free		119855	0					
ANR	120546	Identifier	ss_free		119855	0					
ANR	120547	ArgumentList	server -> abuf		119855	1					
ANR	120548	Argument	server -> abuf		119855	0					
ANR	120549	PtrMemberAccess	server -> abuf		119855	0					
ANR	120550	Identifier	server		119855	0					
ANR	120551	Identifier	abuf		119855	1					
ANR	120552	ExpressionStatement	server -> abuf = NULL	489:16:14622:14641	119855	4	True				
ANR	120553	AssignmentExpression	server -> abuf = NULL		119855	0		=			
ANR	120554	PtrMemberAccess	server -> abuf		119855	0					
ANR	120555	Identifier	server		119855	0					
ANR	120556	Identifier	abuf		119855	1					
ANR	120557	Identifier	NULL		119855	1					
ANR	120558	IdentifierDeclStatement	"ssize_t s = send ( remote -> fd , remote -> buf -> data + remote -> buf -> idx , remote -> buf -> len , 0 ) ;"	491:12:14669:14781	119855	1	True				
ANR	120559	IdentifierDecl	"s = send ( remote -> fd , remote -> buf -> data + remote -> buf -> idx , remote -> buf -> len , 0 )"		119855	0					
ANR	120560	IdentifierDeclType	ssize_t		119855	0					
ANR	120561	Identifier	s		119855	1					
ANR	120562	AssignmentExpression	"s = send ( remote -> fd , remote -> buf -> data + remote -> buf -> idx , remote -> buf -> len , 0 )"		119855	2		=			
ANR	120563	Identifier	s		119855	0					
ANR	120564	CallExpression	"send ( remote -> fd , remote -> buf -> data + remote -> buf -> idx , remote -> buf -> len , 0 )"		119855	1					
ANR	120565	Callee	send		119855	0					
ANR	120566	Identifier	send		119855	0					
ANR	120567	ArgumentList	remote -> fd		119855	1					
ANR	120568	Argument	remote -> fd		119855	0					
ANR	120569	PtrMemberAccess	remote -> fd		119855	0					
ANR	120570	Identifier	remote		119855	0					
ANR	120571	Identifier	fd		119855	1					
ANR	120572	Argument	remote -> buf -> data + remote -> buf -> idx		119855	1					
ANR	120573	AdditiveExpression	remote -> buf -> data + remote -> buf -> idx		119855	0		+			
ANR	120574	PtrMemberAccess	remote -> buf -> data		119855	0					
ANR	120575	PtrMemberAccess	remote -> buf		119855	0					
ANR	120576	Identifier	remote		119855	0					
ANR	120577	Identifier	buf		119855	1					
ANR	120578	Identifier	data		119855	1					
ANR	120579	PtrMemberAccess	remote -> buf -> idx		119855	1					
ANR	120580	PtrMemberAccess	remote -> buf		119855	0					
ANR	120581	Identifier	remote		119855	0					
ANR	120582	Identifier	buf		119855	1					
ANR	120583	Identifier	idx		119855	1					
ANR	120584	Argument	remote -> buf -> len		119855	2					
ANR	120585	PtrMemberAccess	remote -> buf -> len		119855	0					
ANR	120586	PtrMemberAccess	remote -> buf		119855	0					
ANR	120587	Identifier	remote		119855	0					
ANR	120588	Identifier	buf		119855	1					
ANR	120589	Identifier	len		119855	1					
ANR	120590	Argument	0		119855	3					
ANR	120591	PrimaryExpression	0		119855	0					
ANR	120592	IfStatement	if ( s == - 1 )		119855	2					
ANR	120593	Condition	s == - 1	493:16:14799:14805	119855	0	True				
ANR	120594	EqualityExpression	s == - 1		119855	0		==			
ANR	120595	Identifier	s		119855	0					
ANR	120596	UnaryOperationExpression	- 1		119855	1					
ANR	120597	UnaryOperator	-		119855	0					
ANR	120598	PrimaryExpression	1		119855	1					
ANR	120599	CompoundStatement		103:25:3905:3905	119855	1					
ANR	120600	IfStatement	if ( errno != EAGAIN && errno != EWOULDBLOCK )		119855	0					
ANR	120601	Condition	errno != EAGAIN && errno != EWOULDBLOCK	494:20:14830:14868	119855	0	True				
ANR	120602	AndExpression	errno != EAGAIN && errno != EWOULDBLOCK		119855	0		&&			
ANR	120603	EqualityExpression	errno != EAGAIN		119855	0		!=			
ANR	120604	Identifier	errno		119855	0					
ANR	120605	Identifier	EAGAIN		119855	1					
ANR	120606	EqualityExpression	errno != EWOULDBLOCK		119855	1		!=			
ANR	120607	Identifier	errno		119855	0					
ANR	120608	Identifier	EWOULDBLOCK		119855	1					
ANR	120609	CompoundStatement		104:61:3968:3968	119855	1					
ANR	120610	ExpressionStatement	"ERROR ( ""send"" )"	495:20:14893:14906	119855	0	True				
ANR	120611	CallExpression	"ERROR ( ""send"" )"		119855	0					
ANR	120612	Callee	ERROR		119855	0					
ANR	120613	Identifier	ERROR		119855	0					
ANR	120614	ArgumentList	"""send"""		119855	1					
ANR	120615	Argument	"""send"""		119855	0					
ANR	120616	PrimaryExpression	"""send"""		119855	0					
ANR	120617	Statement	close_and_free_remote	497:20:14966:14986	119855	1	True				
ANR	120618	Statement	(	497:41:14987:14987	119855	2	True				
ANR	120619	Statement	EV_A_	497:42:14988:14992	119855	3	True				
ANR	120620	Statement	remote	497:48:14994:14999	119855	4	True				
ANR	120621	Statement	)	497:54:15000:15000	119855	5	True				
ANR	120622	ExpressionStatement		497:55:15001:15001	119855	6	True				
ANR	120623	Statement	close_and_free_server	498:20:15023:15043	119855	7	True				
ANR	120624	Statement	(	498:41:15044:15044	119855	8	True				
ANR	120625	Statement	EV_A_	498:42:15045:15049	119855	9	True				
ANR	120626	Statement	server	498:48:15051:15056	119855	10	True				
ANR	120627	Statement	)	498:54:15057:15057	119855	11	True				
ANR	120628	ExpressionStatement		498:55:15058:15058	119855	12	True				
ANR	120629	ReturnStatement	return ;	500:16:15094:15100	119855	1	True				
ANR	120630	ElseStatement	else		119855	0					
ANR	120631	IfStatement	if ( s < remote -> buf -> len )		119855	0					
ANR	120632	Condition	s < remote -> buf -> len	501:23:15125:15144	119855	0	True				
ANR	120633	RelationalExpression	s < remote -> buf -> len		119855	0		<			
ANR	120634	Identifier	s		119855	0					
ANR	120635	PtrMemberAccess	remote -> buf -> len		119855	1					
ANR	120636	PtrMemberAccess	remote -> buf		119855	0					
ANR	120637	Identifier	remote		119855	0					
ANR	120638	Identifier	buf		119855	1					
ANR	120639	Identifier	len		119855	1					
ANR	120640	CompoundStatement		111:45:4244:4244	119855	1					
ANR	120641	ExpressionStatement	remote -> buf -> len -= s	503:16:15241:15262	119855	0	True				
ANR	120642	AssignmentExpression	remote -> buf -> len -= s		119855	0		-=			
ANR	120643	PtrMemberAccess	remote -> buf -> len		119855	0					
ANR	120644	PtrMemberAccess	remote -> buf		119855	0					
ANR	120645	Identifier	remote		119855	0					
ANR	120646	Identifier	buf		119855	1					
ANR	120647	Identifier	len		119855	1					
ANR	120648	Identifier	s		119855	1					
ANR	120649	ExpressionStatement	remote -> buf -> idx += s	504:16:15280:15301	119855	1	True				
ANR	120650	AssignmentExpression	remote -> buf -> idx += s		119855	0		+=			
ANR	120651	PtrMemberAccess	remote -> buf -> idx		119855	0					
ANR	120652	PtrMemberAccess	remote -> buf		119855	0					
ANR	120653	Identifier	remote		119855	0					
ANR	120654	Identifier	buf		119855	1					
ANR	120655	Identifier	idx		119855	1					
ANR	120656	Identifier	s		119855	1					
ANR	120657	ReturnStatement	return ;	505:16:15319:15325	119855	2	True				
ANR	120658	ElseStatement	else		119855	0					
ANR	120659	CompoundStatement		116:19:4443:4443	119855	0					
ANR	120660	ExpressionStatement	remote -> buf -> len = 0	508:16:15414:15434	119855	0	True				
ANR	120661	AssignmentExpression	remote -> buf -> len = 0		119855	0		=			
ANR	120662	PtrMemberAccess	remote -> buf -> len		119855	0					
ANR	120663	PtrMemberAccess	remote -> buf		119855	0					
ANR	120664	Identifier	remote		119855	0					
ANR	120665	Identifier	buf		119855	1					
ANR	120666	Identifier	len		119855	1					
ANR	120667	PrimaryExpression	0		119855	1					
ANR	120668	ExpressionStatement	remote -> buf -> idx = 0	509:16:15452:15472	119855	1	True				
ANR	120669	AssignmentExpression	remote -> buf -> idx = 0		119855	0		=			
ANR	120670	PtrMemberAccess	remote -> buf -> idx		119855	0					
ANR	120671	PtrMemberAccess	remote -> buf		119855	0					
ANR	120672	Identifier	remote		119855	0					
ANR	120673	Identifier	buf		119855	1					
ANR	120674	Identifier	idx		119855	1					
ANR	120675	PrimaryExpression	0		119855	1					
ANR	120676	ExpressionStatement	ev_io_stop ( EV_A_ & remote_send_ctx -> io )	510:16:15490:15529	119855	2	True				
ANR	120677	CallExpression	ev_io_stop ( EV_A_ & remote_send_ctx -> io )		119855	0					
ANR	120678	Callee	ev_io_stop		119855	0					
ANR	120679	Identifier	ev_io_stop		119855	0					
ANR	120680	ArgumentList	EV_A_ & remote_send_ctx -> io		119855	1					
ANR	120681	Argument	EV_A_ & remote_send_ctx -> io		119855	0					
ANR	120682	BitAndExpression	EV_A_ & remote_send_ctx -> io		119855	0		&			
ANR	120683	Identifier	EV_A_		119855	0					
ANR	120684	PtrMemberAccess	remote_send_ctx -> io		119855	1					
ANR	120685	Identifier	remote_send_ctx		119855	0					
ANR	120686	Identifier	io		119855	1					
ANR	120687	ExpressionStatement	ev_io_start ( EV_A_ & server -> recv_ctx -> io )	511:16:15547:15588	119855	3	True				
ANR	120688	CallExpression	ev_io_start ( EV_A_ & server -> recv_ctx -> io )		119855	0					
ANR	120689	Callee	ev_io_start		119855	0					
ANR	120690	Identifier	ev_io_start		119855	0					
ANR	120691	ArgumentList	EV_A_ & server -> recv_ctx -> io		119855	1					
ANR	120692	Argument	EV_A_ & server -> recv_ctx -> io		119855	0					
ANR	120693	BitAndExpression	EV_A_ & server -> recv_ctx -> io		119855	0		&			
ANR	120694	Identifier	EV_A_		119855	0					
ANR	120695	PtrMemberAccess	server -> recv_ctx -> io		119855	1					
ANR	120696	PtrMemberAccess	server -> recv_ctx		119855	0					
ANR	120697	Identifier	server		119855	0					
ANR	120698	Identifier	recv_ctx		119855	1					
ANR	120699	Identifier	io		119855	1					
ANR	120700	ReturnType	static void		119855	1					
ANR	120701	Identifier	remote_send_cb		119855	2					
ANR	120702	ParameterList	"EV_P_ ev_io * w , int revents"		119855	3					
ANR	120703	Parameter	EV_P_ ev_io * w	390:15:10873:10886	119855	0	True				
ANR	120704	ParameterType	EV_P_ ev_io *		119855	0					
ANR	120705	Identifier	w		119855	1					
ANR	120706	Parameter	int revents	390:31:10889:10899	119855	1	True				
ANR	120707	ParameterType	int		119855	0					
ANR	120708	Identifier	revents		119855	1					
ANR	120709	CFGEntryNode	ENTRY		119855		True				
ANR	120710	CFGExitNode	EXIT		119855		True				
ANR	120711	Symbol	server -> recv_ctx -> io		119855						
ANR	120712	Symbol	server -> abuf		119855						
ANR	120713	Symbol	* remote -> recv_ctx		119855						
ANR	120714	Symbol	revents		119855						
ANR	120715	Symbol	abuf -> data		119855						
ANR	120716	Symbol	crypto -> encrypt		119855						
ANR	120717	Symbol	htons		119855						
ANR	120718	Symbol	* * abuf		119855						
ANR	120719	Symbol	remote		119855						
ANR	120720	Symbol	* abuf -> data		119855						
ANR	120721	Symbol	strlen		119855						
ANR	120722	Symbol	len		119855						
ANR	120723	Symbol	server -> delayed_connect_watcher		119855						
ANR	120724	Symbol	remote -> buf		119855						
ANR	120725	Symbol	* sa		119855						
ANR	120726	Symbol	host		119855						
ANR	120727	Symbol	errno		119855						
ANR	120728	Symbol	NULL		119855						
ANR	120729	Symbol	ip		119855						
ANR	120730	Symbol	inet_pton		119855						
ANR	120731	Symbol	AF_INET		119855						
ANR	120732	Symbol	remote_send_ctx		119855						
ANR	120733	Symbol	* remote_send_ctx		119855						
ANR	120734	Symbol	server -> e_ctx		119855						
ANR	120735	Symbol	* * remote		119855						
ANR	120736	Symbol	remote -> buf -> idx		119855						
ANR	120737	Symbol	& host		119855						
ANR	120738	Symbol	sa -> host		119855						
ANR	120739	Symbol	crypto		119855						
ANR	120740	Symbol	* abuf		119855						
ANR	120741	Symbol	port		119855						
ANR	120742	Symbol	BUF_SIZE		119855						
ANR	120743	Symbol	cork_ip_init		119855						
ANR	120744	Symbol	& len		119855						
ANR	120745	Symbol	remote -> server		119855						
ANR	120746	Symbol	send		119855						
ANR	120747	Symbol	remote_send_ctx -> watcher		119855						
ANR	120748	Symbol	server		119855						
ANR	120749	Symbol	* server		119855						
ANR	120750	Symbol	remote -> recv_ctx -> io		119855						
ANR	120751	Symbol	sa		119855						
ANR	120752	Symbol	remote_send_ctx -> io		119855						
ANR	120753	Symbol	* crypto		119855						
ANR	120754	Symbol	ip . version		119855						
ANR	120755	Symbol	remote -> buf -> len		119855						
ANR	120756	Symbol	& server -> destaddr		119855						
ANR	120757	Symbol	remote -> buf -> data		119855						
ANR	120758	Symbol	* server -> abuf		119855						
ANR	120759	Symbol	abuf -> len		119855						
ANR	120760	Symbol	addr		119855						
ANR	120761	Symbol	abuf		119855						
ANR	120762	Symbol	atoi		119855						
ANR	120763	Symbol	& addr		119855						
ANR	120764	Symbol	remote -> recv_ctx		119855						
ANR	120765	Symbol	remote -> fd		119855						
ANR	120766	Symbol	host_len		119855						
ANR	120767	Symbol	err		119855						
ANR	120768	Symbol	EAGAIN		119855						
ANR	120769	Symbol	* remote -> buf		119855						
ANR	120770	Symbol	server -> abuf -> len		119855						
ANR	120771	Symbol	AF_INET6		119855						
ANR	120772	Symbol	getpeername		119855						
ANR	120773	Symbol	& ip		119855						
ANR	120774	Symbol	r		119855						
ANR	120775	Symbol	sa -> port		119855						
ANR	120776	Symbol	s		119855						
ANR	120777	Symbol	& port		119855						
ANR	120778	Symbol	server -> recv_ctx		119855						
ANR	120779	Symbol	w		119855						
ANR	120780	Symbol	remote_send_ctx -> remote		119855						
ANR	120781	Symbol	EV_A_		119855						
ANR	120782	Symbol	ss_malloc		119855						
ANR	120783	Symbol	EWOULDBLOCK		119855						
ANR	120784	Symbol	* * server		119855						
ANR	120785	Symbol	* server -> recv_ctx		119855						
ANR	120786	Symbol	* remote		119855						
ANR	120787	Symbol	remote_send_ctx -> connected		119855						
ANR	120788	Function	new_remote	517:0:15623:16554							
ANR	120789	FunctionDef	"new_remote (int fd , int timeout)"		120788	0					
ANR	120790	CompoundStatement		519:0:15673:16554	120788	0					
ANR	120791	IdentifierDeclStatement	remote_t * remote = ss_malloc ( sizeof ( remote_t ) ) ;	520:4:15679:15725	120788	0	True				
ANR	120792	IdentifierDecl	* remote = ss_malloc ( sizeof ( remote_t ) )		120788	0					
ANR	120793	IdentifierDeclType	remote_t *		120788	0					
ANR	120794	Identifier	remote		120788	1					
ANR	120795	AssignmentExpression	* remote = ss_malloc ( sizeof ( remote_t ) )		120788	2		=			
ANR	120796	Identifier	remote		120788	0					
ANR	120797	CallExpression	ss_malloc ( sizeof ( remote_t ) )		120788	1					
ANR	120798	Callee	ss_malloc		120788	0					
ANR	120799	Identifier	ss_malloc		120788	0					
ANR	120800	ArgumentList	sizeof ( remote_t )		120788	1					
ANR	120801	Argument	sizeof ( remote_t )		120788	0					
ANR	120802	SizeofExpression	sizeof ( remote_t )		120788	0					
ANR	120803	Sizeof	sizeof		120788	0					
ANR	120804	SizeofOperand	remote_t		120788	1					
ANR	120805	ExpressionStatement	"memset ( remote , 0 , sizeof ( remote_t ) )"	521:4:15731:15766	120788	1	True				
ANR	120806	CallExpression	"memset ( remote , 0 , sizeof ( remote_t ) )"		120788	0					
ANR	120807	Callee	memset		120788	0					
ANR	120808	Identifier	memset		120788	0					
ANR	120809	ArgumentList	remote		120788	1					
ANR	120810	Argument	remote		120788	0					
ANR	120811	Identifier	remote		120788	0					
ANR	120812	Argument	0		120788	1					
ANR	120813	PrimaryExpression	0		120788	0					
ANR	120814	Argument	sizeof ( remote_t )		120788	2					
ANR	120815	SizeofExpression	sizeof ( remote_t )		120788	0					
ANR	120816	Sizeof	sizeof		120788	0					
ANR	120817	SizeofOperand	remote_t		120788	1					
ANR	120818	ExpressionStatement	remote -> recv_ctx = ss_malloc ( sizeof ( remote_ctx_t ) )	523:4:15773:15823	120788	2	True				
ANR	120819	AssignmentExpression	remote -> recv_ctx = ss_malloc ( sizeof ( remote_ctx_t ) )		120788	0		=			
ANR	120820	PtrMemberAccess	remote -> recv_ctx		120788	0					
ANR	120821	Identifier	remote		120788	0					
ANR	120822	Identifier	recv_ctx		120788	1					
ANR	120823	CallExpression	ss_malloc ( sizeof ( remote_ctx_t ) )		120788	1					
ANR	120824	Callee	ss_malloc		120788	0					
ANR	120825	Identifier	ss_malloc		120788	0					
ANR	120826	ArgumentList	sizeof ( remote_ctx_t )		120788	1					
ANR	120827	Argument	sizeof ( remote_ctx_t )		120788	0					
ANR	120828	SizeofExpression	sizeof ( remote_ctx_t )		120788	0					
ANR	120829	Sizeof	sizeof		120788	0					
ANR	120830	SizeofOperand	remote_ctx_t		120788	1					
ANR	120831	ExpressionStatement	remote -> send_ctx = ss_malloc ( sizeof ( remote_ctx_t ) )	524:4:15829:15879	120788	3	True				
ANR	120832	AssignmentExpression	remote -> send_ctx = ss_malloc ( sizeof ( remote_ctx_t ) )		120788	0		=			
ANR	120833	PtrMemberAccess	remote -> send_ctx		120788	0					
ANR	120834	Identifier	remote		120788	0					
ANR	120835	Identifier	send_ctx		120788	1					
ANR	120836	CallExpression	ss_malloc ( sizeof ( remote_ctx_t ) )		120788	1					
ANR	120837	Callee	ss_malloc		120788	0					
ANR	120838	Identifier	ss_malloc		120788	0					
ANR	120839	ArgumentList	sizeof ( remote_ctx_t )		120788	1					
ANR	120840	Argument	sizeof ( remote_ctx_t )		120788	0					
ANR	120841	SizeofExpression	sizeof ( remote_ctx_t )		120788	0					
ANR	120842	Sizeof	sizeof		120788	0					
ANR	120843	SizeofOperand	remote_ctx_t		120788	1					
ANR	120844	ExpressionStatement	remote -> buf = ss_malloc ( sizeof ( buffer_t ) )	525:4:15885:15931	120788	4	True				
ANR	120845	AssignmentExpression	remote -> buf = ss_malloc ( sizeof ( buffer_t ) )		120788	0		=			
ANR	120846	PtrMemberAccess	remote -> buf		120788	0					
ANR	120847	Identifier	remote		120788	0					
ANR	120848	Identifier	buf		120788	1					
ANR	120849	CallExpression	ss_malloc ( sizeof ( buffer_t ) )		120788	1					
ANR	120850	Callee	ss_malloc		120788	0					
ANR	120851	Identifier	ss_malloc		120788	0					
ANR	120852	ArgumentList	sizeof ( buffer_t )		120788	1					
ANR	120853	Argument	sizeof ( buffer_t )		120788	0					
ANR	120854	SizeofExpression	sizeof ( buffer_t )		120788	0					
ANR	120855	Sizeof	sizeof		120788	0					
ANR	120856	SizeofOperand	buffer_t		120788	1					
ANR	120857	ExpressionStatement	"balloc ( remote -> buf , BUF_SIZE )"	526:4:15937:15966	120788	5	True				
ANR	120858	CallExpression	"balloc ( remote -> buf , BUF_SIZE )"		120788	0					
ANR	120859	Callee	balloc		120788	0					
ANR	120860	Identifier	balloc		120788	0					
ANR	120861	ArgumentList	remote -> buf		120788	1					
ANR	120862	Argument	remote -> buf		120788	0					
ANR	120863	PtrMemberAccess	remote -> buf		120788	0					
ANR	120864	Identifier	remote		120788	0					
ANR	120865	Identifier	buf		120788	1					
ANR	120866	Argument	BUF_SIZE		120788	1					
ANR	120867	Identifier	BUF_SIZE		120788	0					
ANR	120868	ExpressionStatement	"memset ( remote -> recv_ctx , 0 , sizeof ( remote_ctx_t ) )"	527:4:15972:16021	120788	6	True				
ANR	120869	CallExpression	"memset ( remote -> recv_ctx , 0 , sizeof ( remote_ctx_t ) )"		120788	0					
ANR	120870	Callee	memset		120788	0					
ANR	120871	Identifier	memset		120788	0					
ANR	120872	ArgumentList	remote -> recv_ctx		120788	1					
ANR	120873	Argument	remote -> recv_ctx		120788	0					
ANR	120874	PtrMemberAccess	remote -> recv_ctx		120788	0					
ANR	120875	Identifier	remote		120788	0					
ANR	120876	Identifier	recv_ctx		120788	1					
ANR	120877	Argument	0		120788	1					
ANR	120878	PrimaryExpression	0		120788	0					
ANR	120879	Argument	sizeof ( remote_ctx_t )		120788	2					
ANR	120880	SizeofExpression	sizeof ( remote_ctx_t )		120788	0					
ANR	120881	Sizeof	sizeof		120788	0					
ANR	120882	SizeofOperand	remote_ctx_t		120788	1					
ANR	120883	ExpressionStatement	"memset ( remote -> send_ctx , 0 , sizeof ( remote_ctx_t ) )"	528:4:16027:16076	120788	7	True				
ANR	120884	CallExpression	"memset ( remote -> send_ctx , 0 , sizeof ( remote_ctx_t ) )"		120788	0					
ANR	120885	Callee	memset		120788	0					
ANR	120886	Identifier	memset		120788	0					
ANR	120887	ArgumentList	remote -> send_ctx		120788	1					
ANR	120888	Argument	remote -> send_ctx		120788	0					
ANR	120889	PtrMemberAccess	remote -> send_ctx		120788	0					
ANR	120890	Identifier	remote		120788	0					
ANR	120891	Identifier	send_ctx		120788	1					
ANR	120892	Argument	0		120788	1					
ANR	120893	PrimaryExpression	0		120788	0					
ANR	120894	Argument	sizeof ( remote_ctx_t )		120788	2					
ANR	120895	SizeofExpression	sizeof ( remote_ctx_t )		120788	0					
ANR	120896	Sizeof	sizeof		120788	0					
ANR	120897	SizeofOperand	remote_ctx_t		120788	1					
ANR	120898	ExpressionStatement	remote -> fd = fd	529:4:16082:16114	120788	8	True				
ANR	120899	AssignmentExpression	remote -> fd = fd		120788	0		=			
ANR	120900	PtrMemberAccess	remote -> fd		120788	0					
ANR	120901	Identifier	remote		120788	0					
ANR	120902	Identifier	fd		120788	1					
ANR	120903	Identifier	fd		120788	1					
ANR	120904	ExpressionStatement	remote -> recv_ctx -> remote = remote	530:4:16120:16156	120788	9	True				
ANR	120905	AssignmentExpression	remote -> recv_ctx -> remote = remote		120788	0		=			
ANR	120906	PtrMemberAccess	remote -> recv_ctx -> remote		120788	0					
ANR	120907	PtrMemberAccess	remote -> recv_ctx		120788	0					
ANR	120908	Identifier	remote		120788	0					
ANR	120909	Identifier	recv_ctx		120788	1					
ANR	120910	Identifier	remote		120788	1					
ANR	120911	Identifier	remote		120788	1					
ANR	120912	ExpressionStatement	remote -> recv_ctx -> connected = 0	531:4:16162:16193	120788	10	True				
ANR	120913	AssignmentExpression	remote -> recv_ctx -> connected = 0		120788	0		=			
ANR	120914	PtrMemberAccess	remote -> recv_ctx -> connected		120788	0					
ANR	120915	PtrMemberAccess	remote -> recv_ctx		120788	0					
ANR	120916	Identifier	remote		120788	0					
ANR	120917	Identifier	recv_ctx		120788	1					
ANR	120918	Identifier	connected		120788	1					
ANR	120919	PrimaryExpression	0		120788	1					
ANR	120920	ExpressionStatement	remote -> send_ctx -> remote = remote	532:4:16199:16235	120788	11	True				
ANR	120921	AssignmentExpression	remote -> send_ctx -> remote = remote		120788	0		=			
ANR	120922	PtrMemberAccess	remote -> send_ctx -> remote		120788	0					
ANR	120923	PtrMemberAccess	remote -> send_ctx		120788	0					
ANR	120924	Identifier	remote		120788	0					
ANR	120925	Identifier	send_ctx		120788	1					
ANR	120926	Identifier	remote		120788	1					
ANR	120927	Identifier	remote		120788	1					
ANR	120928	ExpressionStatement	remote -> send_ctx -> connected = 0	533:4:16241:16272	120788	12	True				
ANR	120929	AssignmentExpression	remote -> send_ctx -> connected = 0		120788	0		=			
ANR	120930	PtrMemberAccess	remote -> send_ctx -> connected		120788	0					
ANR	120931	PtrMemberAccess	remote -> send_ctx		120788	0					
ANR	120932	Identifier	remote		120788	0					
ANR	120933	Identifier	send_ctx		120788	1					
ANR	120934	Identifier	connected		120788	1					
ANR	120935	PrimaryExpression	0		120788	1					
ANR	120936	ExpressionStatement	"ev_io_init ( & remote -> recv_ctx -> io , remote_recv_cb , fd , EV_READ )"	535:4:16279:16341	120788	13	True				
ANR	120937	CallExpression	"ev_io_init ( & remote -> recv_ctx -> io , remote_recv_cb , fd , EV_READ )"		120788	0					
ANR	120938	Callee	ev_io_init		120788	0					
ANR	120939	Identifier	ev_io_init		120788	0					
ANR	120940	ArgumentList	& remote -> recv_ctx -> io		120788	1					
ANR	120941	Argument	& remote -> recv_ctx -> io		120788	0					
ANR	120942	UnaryOperationExpression	& remote -> recv_ctx -> io		120788	0					
ANR	120943	UnaryOperator	&		120788	0					
ANR	120944	PtrMemberAccess	remote -> recv_ctx -> io		120788	1					
ANR	120945	PtrMemberAccess	remote -> recv_ctx		120788	0					
ANR	120946	Identifier	remote		120788	0					
ANR	120947	Identifier	recv_ctx		120788	1					
ANR	120948	Identifier	io		120788	1					
ANR	120949	Argument	remote_recv_cb		120788	1					
ANR	120950	Identifier	remote_recv_cb		120788	0					
ANR	120951	Argument	fd		120788	2					
ANR	120952	Identifier	fd		120788	0					
ANR	120953	Argument	EV_READ		120788	3					
ANR	120954	Identifier	EV_READ		120788	0					
ANR	120955	ExpressionStatement	"ev_io_init ( & remote -> send_ctx -> io , remote_send_cb , fd , EV_WRITE )"	536:4:16347:16410	120788	14	True				
ANR	120956	CallExpression	"ev_io_init ( & remote -> send_ctx -> io , remote_send_cb , fd , EV_WRITE )"		120788	0					
ANR	120957	Callee	ev_io_init		120788	0					
ANR	120958	Identifier	ev_io_init		120788	0					
ANR	120959	ArgumentList	& remote -> send_ctx -> io		120788	1					
ANR	120960	Argument	& remote -> send_ctx -> io		120788	0					
ANR	120961	UnaryOperationExpression	& remote -> send_ctx -> io		120788	0					
ANR	120962	UnaryOperator	&		120788	0					
ANR	120963	PtrMemberAccess	remote -> send_ctx -> io		120788	1					
ANR	120964	PtrMemberAccess	remote -> send_ctx		120788	0					
ANR	120965	Identifier	remote		120788	0					
ANR	120966	Identifier	send_ctx		120788	1					
ANR	120967	Identifier	io		120788	1					
ANR	120968	Argument	remote_send_cb		120788	1					
ANR	120969	Identifier	remote_send_cb		120788	0					
ANR	120970	Argument	fd		120788	2					
ANR	120971	Identifier	fd		120788	0					
ANR	120972	Argument	EV_WRITE		120788	3					
ANR	120973	Identifier	EV_WRITE		120788	0					
ANR	120974	ExpressionStatement	"ev_timer_init ( & remote -> send_ctx -> watcher , remote_timeout_cb , min ( MAX_CONNECT_TIMEOUT , timeout ) , 0 )"	537:4:16416:16532	120788	15	True				
ANR	120975	CallExpression	"ev_timer_init ( & remote -> send_ctx -> watcher , remote_timeout_cb , min ( MAX_CONNECT_TIMEOUT , timeout ) , 0 )"		120788	0					
ANR	120976	Callee	ev_timer_init		120788	0					
ANR	120977	Identifier	ev_timer_init		120788	0					
ANR	120978	ArgumentList	& remote -> send_ctx -> watcher		120788	1					
ANR	120979	Argument	& remote -> send_ctx -> watcher		120788	0					
ANR	120980	UnaryOperationExpression	& remote -> send_ctx -> watcher		120788	0					
ANR	120981	UnaryOperator	&		120788	0					
ANR	120982	PtrMemberAccess	remote -> send_ctx -> watcher		120788	1					
ANR	120983	PtrMemberAccess	remote -> send_ctx		120788	0					
ANR	120984	Identifier	remote		120788	0					
ANR	120985	Identifier	send_ctx		120788	1					
ANR	120986	Identifier	watcher		120788	1					
ANR	120987	Argument	remote_timeout_cb		120788	1					
ANR	120988	Identifier	remote_timeout_cb		120788	0					
ANR	120989	Argument	"min ( MAX_CONNECT_TIMEOUT , timeout )"		120788	2					
ANR	120990	CallExpression	"min ( MAX_CONNECT_TIMEOUT , timeout )"		120788	0					
ANR	120991	Callee	min		120788	0					
ANR	120992	Identifier	min		120788	0					
ANR	120993	ArgumentList	MAX_CONNECT_TIMEOUT		120788	1					
ANR	120994	Argument	MAX_CONNECT_TIMEOUT		120788	0					
ANR	120995	Identifier	MAX_CONNECT_TIMEOUT		120788	0					
ANR	120996	Argument	timeout		120788	1					
ANR	120997	Identifier	timeout		120788	0					
ANR	120998	Argument	0		120788	3					
ANR	120999	PrimaryExpression	0		120788	0					
ANR	121000	ReturnStatement	return remote ;	540:4:16539:16552	120788	16	True				
ANR	121001	Identifier	remote		120788	0					
ANR	121002	ReturnType	static remote_t *		120788	1					
ANR	121003	Identifier	new_remote		120788	2					
ANR	121004	ParameterList	"int fd , int timeout"		120788	3					
ANR	121005	Parameter	int fd	518:11:15652:15657	120788	0	True				
ANR	121006	ParameterType	int		120788	0					
ANR	121007	Identifier	fd		120788	1					
ANR	121008	Parameter	int timeout	518:19:15660:15670	120788	1	True				
ANR	121009	ParameterType	int		120788	0					
ANR	121010	Identifier	timeout		120788	1					
ANR	121011	CFGEntryNode	ENTRY		120788		True				
ANR	121012	CFGExitNode	EXIT		120788		True				
ANR	121013	Symbol	* remote -> recv_ctx		120788						
ANR	121014	Symbol	MAX_CONNECT_TIMEOUT		120788						
ANR	121015	Symbol	remote -> send_ctx -> connected		120788						
ANR	121016	Symbol	& remote -> send_ctx -> watcher		120788						
ANR	121017	Symbol	EV_READ		120788						
ANR	121018	Symbol	remote		120788						
ANR	121019	Symbol	remote -> send_ctx -> remote		120788						
ANR	121020	Symbol	timeout		120788						
ANR	121021	Symbol	remote -> recv_ctx -> connected		120788						
ANR	121022	Symbol	min		120788						
ANR	121023	Symbol	remote -> buf		120788						
ANR	121024	Symbol	remote -> recv_ctx -> remote		120788						
ANR	121025	Symbol	& remote -> send_ctx -> io		120788						
ANR	121026	Symbol	remote_send_cb		120788						
ANR	121027	Symbol	remote -> recv_ctx		120788						
ANR	121028	Symbol	remote -> fd		120788						
ANR	121029	Symbol	EV_WRITE		120788						
ANR	121030	Symbol	remote -> send_ctx		120788						
ANR	121031	Symbol	* * remote		120788						
ANR	121032	Symbol	remote_timeout_cb		120788						
ANR	121033	Symbol	ss_malloc		120788						
ANR	121034	Symbol	BUF_SIZE		120788						
ANR	121035	Symbol	* remote -> send_ctx		120788						
ANR	121036	Symbol	& remote -> recv_ctx -> io		120788						
ANR	121037	Symbol	remote_recv_cb		120788						
ANR	121038	Symbol	fd		120788						
ANR	121039	Symbol	* remote		120788						
ANR	121040	Function	free_remote	543:0:16557:16858							
ANR	121041	FunctionDef	free_remote (remote_t * remote)		121040	0					
ANR	121042	CompoundStatement		545:0:16599:16858	121040	0					
ANR	121043	IfStatement	if ( remote -> server != NULL )		121040	0					
ANR	121044	Condition	remote -> server != NULL	546:8:16609:16630	121040	0	True				
ANR	121045	EqualityExpression	remote -> server != NULL		121040	0		!=			
ANR	121046	PtrMemberAccess	remote -> server		121040	0					
ANR	121047	Identifier	remote		121040	0					
ANR	121048	Identifier	server		121040	1					
ANR	121049	Identifier	NULL		121040	1					
ANR	121050	CompoundStatement		2:32:33:33	121040	1					
ANR	121051	ExpressionStatement	remote -> server -> remote = NULL	547:8:16643:16672	121040	0	True				
ANR	121052	AssignmentExpression	remote -> server -> remote = NULL		121040	0		=			
ANR	121053	PtrMemberAccess	remote -> server -> remote		121040	0					
ANR	121054	PtrMemberAccess	remote -> server		121040	0					
ANR	121055	Identifier	remote		121040	0					
ANR	121056	Identifier	server		121040	1					
ANR	121057	Identifier	remote		121040	1					
ANR	121058	Identifier	NULL		121040	1					
ANR	121059	IfStatement	if ( remote -> buf != NULL )		121040	1					
ANR	121060	Condition	remote -> buf != NULL	549:8:16688:16706	121040	0	True				
ANR	121061	EqualityExpression	remote -> buf != NULL		121040	0		!=			
ANR	121062	PtrMemberAccess	remote -> buf		121040	0					
ANR	121063	Identifier	remote		121040	0					
ANR	121064	Identifier	buf		121040	1					
ANR	121065	Identifier	NULL		121040	1					
ANR	121066	CompoundStatement		5:29:109:109	121040	1					
ANR	121067	ExpressionStatement	bfree ( remote -> buf )	550:8:16719:16737	121040	0	True				
ANR	121068	CallExpression	bfree ( remote -> buf )		121040	0					
ANR	121069	Callee	bfree		121040	0					
ANR	121070	Identifier	bfree		121040	0					
ANR	121071	ArgumentList	remote -> buf		121040	1					
ANR	121072	Argument	remote -> buf		121040	0					
ANR	121073	PtrMemberAccess	remote -> buf		121040	0					
ANR	121074	Identifier	remote		121040	0					
ANR	121075	Identifier	buf		121040	1					
ANR	121076	ExpressionStatement	ss_free ( remote -> buf )	551:8:16747:16767	121040	1	True				
ANR	121077	CallExpression	ss_free ( remote -> buf )		121040	0					
ANR	121078	Callee	ss_free		121040	0					
ANR	121079	Identifier	ss_free		121040	0					
ANR	121080	ArgumentList	remote -> buf		121040	1					
ANR	121081	Argument	remote -> buf		121040	0					
ANR	121082	PtrMemberAccess	remote -> buf		121040	0					
ANR	121083	Identifier	remote		121040	0					
ANR	121084	Identifier	buf		121040	1					
ANR	121085	ExpressionStatement	ss_free ( remote -> recv_ctx )	553:4:16779:16804	121040	2	True				
ANR	121086	CallExpression	ss_free ( remote -> recv_ctx )		121040	0					
ANR	121087	Callee	ss_free		121040	0					
ANR	121088	Identifier	ss_free		121040	0					
ANR	121089	ArgumentList	remote -> recv_ctx		121040	1					
ANR	121090	Argument	remote -> recv_ctx		121040	0					
ANR	121091	PtrMemberAccess	remote -> recv_ctx		121040	0					
ANR	121092	Identifier	remote		121040	0					
ANR	121093	Identifier	recv_ctx		121040	1					
ANR	121094	ExpressionStatement	ss_free ( remote -> send_ctx )	554:4:16810:16835	121040	3	True				
ANR	121095	CallExpression	ss_free ( remote -> send_ctx )		121040	0					
ANR	121096	Callee	ss_free		121040	0					
ANR	121097	Identifier	ss_free		121040	0					
ANR	121098	ArgumentList	remote -> send_ctx		121040	1					
ANR	121099	Argument	remote -> send_ctx		121040	0					
ANR	121100	PtrMemberAccess	remote -> send_ctx		121040	0					
ANR	121101	Identifier	remote		121040	0					
ANR	121102	Identifier	send_ctx		121040	1					
ANR	121103	ExpressionStatement	ss_free ( remote )	555:4:16841:16856	121040	4	True				
ANR	121104	CallExpression	ss_free ( remote )		121040	0					
ANR	121105	Callee	ss_free		121040	0					
ANR	121106	Identifier	ss_free		121040	0					
ANR	121107	ArgumentList	remote		121040	1					
ANR	121108	Argument	remote		121040	0					
ANR	121109	Identifier	remote		121040	0					
ANR	121110	ReturnType	static void		121040	1					
ANR	121111	Identifier	free_remote		121040	2					
ANR	121112	ParameterList	remote_t * remote		121040	3					
ANR	121113	Parameter	remote_t * remote	544:12:16581:16596	121040	0	True				
ANR	121114	ParameterType	remote_t *		121040	0					
ANR	121115	Identifier	remote		121040	1					
ANR	121116	CFGEntryNode	ENTRY		121040		True				
ANR	121117	CFGExitNode	EXIT		121040		True				
ANR	121118	Symbol	remote -> server -> remote		121040						
ANR	121119	Symbol	NULL		121040						
ANR	121120	Symbol	remote -> recv_ctx		121040						
ANR	121121	Symbol	remote -> buf		121040						
ANR	121122	Symbol	remote		121040						
ANR	121123	Symbol	* * remote		121040						
ANR	121124	Symbol	remote -> send_ctx		121040						
ANR	121125	Symbol	remote -> server		121040						
ANR	121126	Symbol	* remote -> server		121040						
ANR	121127	Symbol	* remote		121040						
ANR	121128	Function	close_and_free_remote	558:0:16861:17167							
ANR	121129	FunctionDef	close_and_free_remote (EV_P_ remote_t * remote)		121128	0					
ANR	121130	CompoundStatement		560:0:16919:17167	121128	0					
ANR	121131	IfStatement	if ( remote != NULL )		121128	0					
ANR	121132	Condition	remote != NULL	561:8:16929:16942	121128	0	True				
ANR	121133	EqualityExpression	remote != NULL		121128	0		!=			
ANR	121134	Identifier	remote		121128	0					
ANR	121135	Identifier	NULL		121128	1					
ANR	121136	CompoundStatement		2:24:25:25	121128	1					
ANR	121137	ExpressionStatement	ev_timer_stop ( EV_A_ & remote -> send_ctx -> watcher )	562:8:16955:17003	121128	0	True				
ANR	121138	CallExpression	ev_timer_stop ( EV_A_ & remote -> send_ctx -> watcher )		121128	0					
ANR	121139	Callee	ev_timer_stop		121128	0					
ANR	121140	Identifier	ev_timer_stop		121128	0					
ANR	121141	ArgumentList	EV_A_ & remote -> send_ctx -> watcher		121128	1					
ANR	121142	Argument	EV_A_ & remote -> send_ctx -> watcher		121128	0					
ANR	121143	BitAndExpression	EV_A_ & remote -> send_ctx -> watcher		121128	0		&			
ANR	121144	Identifier	EV_A_		121128	0					
ANR	121145	PtrMemberAccess	remote -> send_ctx -> watcher		121128	1					
ANR	121146	PtrMemberAccess	remote -> send_ctx		121128	0					
ANR	121147	Identifier	remote		121128	0					
ANR	121148	Identifier	send_ctx		121128	1					
ANR	121149	Identifier	watcher		121128	1					
ANR	121150	ExpressionStatement	ev_io_stop ( EV_A_ & remote -> send_ctx -> io )	563:8:17013:17053	121128	1	True				
ANR	121151	CallExpression	ev_io_stop ( EV_A_ & remote -> send_ctx -> io )		121128	0					
ANR	121152	Callee	ev_io_stop		121128	0					
ANR	121153	Identifier	ev_io_stop		121128	0					
ANR	121154	ArgumentList	EV_A_ & remote -> send_ctx -> io		121128	1					
ANR	121155	Argument	EV_A_ & remote -> send_ctx -> io		121128	0					
ANR	121156	BitAndExpression	EV_A_ & remote -> send_ctx -> io		121128	0		&			
ANR	121157	Identifier	EV_A_		121128	0					
ANR	121158	PtrMemberAccess	remote -> send_ctx -> io		121128	1					
ANR	121159	PtrMemberAccess	remote -> send_ctx		121128	0					
ANR	121160	Identifier	remote		121128	0					
ANR	121161	Identifier	send_ctx		121128	1					
ANR	121162	Identifier	io		121128	1					
ANR	121163	ExpressionStatement	ev_io_stop ( EV_A_ & remote -> recv_ctx -> io )	564:8:17063:17103	121128	2	True				
ANR	121164	CallExpression	ev_io_stop ( EV_A_ & remote -> recv_ctx -> io )		121128	0					
ANR	121165	Callee	ev_io_stop		121128	0					
ANR	121166	Identifier	ev_io_stop		121128	0					
ANR	121167	ArgumentList	EV_A_ & remote -> recv_ctx -> io		121128	1					
ANR	121168	Argument	EV_A_ & remote -> recv_ctx -> io		121128	0					
ANR	121169	BitAndExpression	EV_A_ & remote -> recv_ctx -> io		121128	0		&			
ANR	121170	Identifier	EV_A_		121128	0					
ANR	121171	PtrMemberAccess	remote -> recv_ctx -> io		121128	1					
ANR	121172	PtrMemberAccess	remote -> recv_ctx		121128	0					
ANR	121173	Identifier	remote		121128	0					
ANR	121174	Identifier	recv_ctx		121128	1					
ANR	121175	Identifier	io		121128	1					
ANR	121176	ExpressionStatement	close ( remote -> fd )	565:8:17113:17130	121128	3	True				
ANR	121177	CallExpression	close ( remote -> fd )		121128	0					
ANR	121178	Callee	close		121128	0					
ANR	121179	Identifier	close		121128	0					
ANR	121180	ArgumentList	remote -> fd		121128	1					
ANR	121181	Argument	remote -> fd		121128	0					
ANR	121182	PtrMemberAccess	remote -> fd		121128	0					
ANR	121183	Identifier	remote		121128	0					
ANR	121184	Identifier	fd		121128	1					
ANR	121185	ExpressionStatement	free_remote ( remote )	566:8:17140:17159	121128	4	True				
ANR	121186	CallExpression	free_remote ( remote )		121128	0					
ANR	121187	Callee	free_remote		121128	0					
ANR	121188	Identifier	free_remote		121128	0					
ANR	121189	ArgumentList	remote		121128	1					
ANR	121190	Argument	remote		121128	0					
ANR	121191	Identifier	remote		121128	0					
ANR	121192	ReturnType	static void		121128	1					
ANR	121193	Identifier	close_and_free_remote		121128	2					
ANR	121194	ParameterList	EV_P_ remote_t * remote		121128	3					
ANR	121195	Parameter	EV_P_ remote_t * remote	559:22:16895:16916	121128	0	True				
ANR	121196	ParameterType	EV_P_ remote_t *		121128	0					
ANR	121197	Identifier	remote		121128	1					
ANR	121198	CFGEntryNode	ENTRY		121128		True				
ANR	121199	CFGExitNode	EXIT		121128		True				
ANR	121200	Symbol	NULL		121128						
ANR	121201	Symbol	remote -> recv_ctx		121128						
ANR	121202	Symbol	* remote -> recv_ctx		121128						
ANR	121203	Symbol	remote -> fd		121128						
ANR	121204	Symbol	remote -> recv_ctx -> io		121128						
ANR	121205	Symbol	remote -> send_ctx -> watcher		121128						
ANR	121206	Symbol	remote		121128						
ANR	121207	Symbol	* * remote		121128						
ANR	121208	Symbol	remote -> send_ctx		121128						
ANR	121209	Symbol	remote -> send_ctx -> io		121128						
ANR	121210	Symbol	EV_A_		121128						
ANR	121211	Symbol	* remote -> send_ctx		121128						
ANR	121212	Symbol	* remote		121128						
ANR	121213	Function	new_server	570:0:17170:18278							
ANR	121214	FunctionDef	new_server (int fd)		121213	0					
ANR	121215	CompoundStatement		572:0:17207:18278	121213	0					
ANR	121216	IdentifierDeclStatement	server_t * server = ss_malloc ( sizeof ( server_t ) ) ;	573:4:17213:17259	121213	0	True				
ANR	121217	IdentifierDecl	* server = ss_malloc ( sizeof ( server_t ) )		121213	0					
ANR	121218	IdentifierDeclType	server_t *		121213	0					
ANR	121219	Identifier	server		121213	1					
ANR	121220	AssignmentExpression	* server = ss_malloc ( sizeof ( server_t ) )		121213	2		=			
ANR	121221	Identifier	server		121213	0					
ANR	121222	CallExpression	ss_malloc ( sizeof ( server_t ) )		121213	1					
ANR	121223	Callee	ss_malloc		121213	0					
ANR	121224	Identifier	ss_malloc		121213	0					
ANR	121225	ArgumentList	sizeof ( server_t )		121213	1					
ANR	121226	Argument	sizeof ( server_t )		121213	0					
ANR	121227	SizeofExpression	sizeof ( server_t )		121213	0					
ANR	121228	Sizeof	sizeof		121213	0					
ANR	121229	SizeofOperand	server_t		121213	1					
ANR	121230	ExpressionStatement	"memset ( server , 0 , sizeof ( server_t ) )"	574:4:17265:17300	121213	1	True				
ANR	121231	CallExpression	"memset ( server , 0 , sizeof ( server_t ) )"		121213	0					
ANR	121232	Callee	memset		121213	0					
ANR	121233	Identifier	memset		121213	0					
ANR	121234	ArgumentList	server		121213	1					
ANR	121235	Argument	server		121213	0					
ANR	121236	Identifier	server		121213	0					
ANR	121237	Argument	0		121213	1					
ANR	121238	PrimaryExpression	0		121213	0					
ANR	121239	Argument	sizeof ( server_t )		121213	2					
ANR	121240	SizeofExpression	sizeof ( server_t )		121213	0					
ANR	121241	Sizeof	sizeof		121213	0					
ANR	121242	SizeofOperand	server_t		121213	1					
ANR	121243	ExpressionStatement	server -> recv_ctx = ss_malloc ( sizeof ( server_ctx_t ) )	576:4:17307:17357	121213	2	True				
ANR	121244	AssignmentExpression	server -> recv_ctx = ss_malloc ( sizeof ( server_ctx_t ) )		121213	0		=			
ANR	121245	PtrMemberAccess	server -> recv_ctx		121213	0					
ANR	121246	Identifier	server		121213	0					
ANR	121247	Identifier	recv_ctx		121213	1					
ANR	121248	CallExpression	ss_malloc ( sizeof ( server_ctx_t ) )		121213	1					
ANR	121249	Callee	ss_malloc		121213	0					
ANR	121250	Identifier	ss_malloc		121213	0					
ANR	121251	ArgumentList	sizeof ( server_ctx_t )		121213	1					
ANR	121252	Argument	sizeof ( server_ctx_t )		121213	0					
ANR	121253	SizeofExpression	sizeof ( server_ctx_t )		121213	0					
ANR	121254	Sizeof	sizeof		121213	0					
ANR	121255	SizeofOperand	server_ctx_t		121213	1					
ANR	121256	ExpressionStatement	server -> send_ctx = ss_malloc ( sizeof ( server_ctx_t ) )	577:4:17363:17413	121213	3	True				
ANR	121257	AssignmentExpression	server -> send_ctx = ss_malloc ( sizeof ( server_ctx_t ) )		121213	0		=			
ANR	121258	PtrMemberAccess	server -> send_ctx		121213	0					
ANR	121259	Identifier	server		121213	0					
ANR	121260	Identifier	send_ctx		121213	1					
ANR	121261	CallExpression	ss_malloc ( sizeof ( server_ctx_t ) )		121213	1					
ANR	121262	Callee	ss_malloc		121213	0					
ANR	121263	Identifier	ss_malloc		121213	0					
ANR	121264	ArgumentList	sizeof ( server_ctx_t )		121213	1					
ANR	121265	Argument	sizeof ( server_ctx_t )		121213	0					
ANR	121266	SizeofExpression	sizeof ( server_ctx_t )		121213	0					
ANR	121267	Sizeof	sizeof		121213	0					
ANR	121268	SizeofOperand	server_ctx_t		121213	1					
ANR	121269	ExpressionStatement	server -> buf = ss_malloc ( sizeof ( buffer_t ) )	578:4:17419:17465	121213	4	True				
ANR	121270	AssignmentExpression	server -> buf = ss_malloc ( sizeof ( buffer_t ) )		121213	0		=			
ANR	121271	PtrMemberAccess	server -> buf		121213	0					
ANR	121272	Identifier	server		121213	0					
ANR	121273	Identifier	buf		121213	1					
ANR	121274	CallExpression	ss_malloc ( sizeof ( buffer_t ) )		121213	1					
ANR	121275	Callee	ss_malloc		121213	0					
ANR	121276	Identifier	ss_malloc		121213	0					
ANR	121277	ArgumentList	sizeof ( buffer_t )		121213	1					
ANR	121278	Argument	sizeof ( buffer_t )		121213	0					
ANR	121279	SizeofExpression	sizeof ( buffer_t )		121213	0					
ANR	121280	Sizeof	sizeof		121213	0					
ANR	121281	SizeofOperand	buffer_t		121213	1					
ANR	121282	ExpressionStatement	"balloc ( server -> buf , BUF_SIZE )"	579:4:17471:17500	121213	5	True				
ANR	121283	CallExpression	"balloc ( server -> buf , BUF_SIZE )"		121213	0					
ANR	121284	Callee	balloc		121213	0					
ANR	121285	Identifier	balloc		121213	0					
ANR	121286	ArgumentList	server -> buf		121213	1					
ANR	121287	Argument	server -> buf		121213	0					
ANR	121288	PtrMemberAccess	server -> buf		121213	0					
ANR	121289	Identifier	server		121213	0					
ANR	121290	Identifier	buf		121213	1					
ANR	121291	Argument	BUF_SIZE		121213	1					
ANR	121292	Identifier	BUF_SIZE		121213	0					
ANR	121293	ExpressionStatement	"memset ( server -> recv_ctx , 0 , sizeof ( server_ctx_t ) )"	580:4:17506:17555	121213	6	True				
ANR	121294	CallExpression	"memset ( server -> recv_ctx , 0 , sizeof ( server_ctx_t ) )"		121213	0					
ANR	121295	Callee	memset		121213	0					
ANR	121296	Identifier	memset		121213	0					
ANR	121297	ArgumentList	server -> recv_ctx		121213	1					
ANR	121298	Argument	server -> recv_ctx		121213	0					
ANR	121299	PtrMemberAccess	server -> recv_ctx		121213	0					
ANR	121300	Identifier	server		121213	0					
ANR	121301	Identifier	recv_ctx		121213	1					
ANR	121302	Argument	0		121213	1					
ANR	121303	PrimaryExpression	0		121213	0					
ANR	121304	Argument	sizeof ( server_ctx_t )		121213	2					
ANR	121305	SizeofExpression	sizeof ( server_ctx_t )		121213	0					
ANR	121306	Sizeof	sizeof		121213	0					
ANR	121307	SizeofOperand	server_ctx_t		121213	1					
ANR	121308	ExpressionStatement	"memset ( server -> send_ctx , 0 , sizeof ( server_ctx_t ) )"	581:4:17561:17610	121213	7	True				
ANR	121309	CallExpression	"memset ( server -> send_ctx , 0 , sizeof ( server_ctx_t ) )"		121213	0					
ANR	121310	Callee	memset		121213	0					
ANR	121311	Identifier	memset		121213	0					
ANR	121312	ArgumentList	server -> send_ctx		121213	1					
ANR	121313	Argument	server -> send_ctx		121213	0					
ANR	121314	PtrMemberAccess	server -> send_ctx		121213	0					
ANR	121315	Identifier	server		121213	0					
ANR	121316	Identifier	send_ctx		121213	1					
ANR	121317	Argument	0		121213	1					
ANR	121318	PrimaryExpression	0		121213	0					
ANR	121319	Argument	sizeof ( server_ctx_t )		121213	2					
ANR	121320	SizeofExpression	sizeof ( server_ctx_t )		121213	0					
ANR	121321	Sizeof	sizeof		121213	0					
ANR	121322	SizeofOperand	server_ctx_t		121213	1					
ANR	121323	ExpressionStatement	server -> fd = fd	582:4:17616:17648	121213	8	True				
ANR	121324	AssignmentExpression	server -> fd = fd		121213	0		=			
ANR	121325	PtrMemberAccess	server -> fd		121213	0					
ANR	121326	Identifier	server		121213	0					
ANR	121327	Identifier	fd		121213	1					
ANR	121328	Identifier	fd		121213	1					
ANR	121329	ExpressionStatement	server -> recv_ctx -> server = server	583:4:17654:17690	121213	9	True				
ANR	121330	AssignmentExpression	server -> recv_ctx -> server = server		121213	0		=			
ANR	121331	PtrMemberAccess	server -> recv_ctx -> server		121213	0					
ANR	121332	PtrMemberAccess	server -> recv_ctx		121213	0					
ANR	121333	Identifier	server		121213	0					
ANR	121334	Identifier	recv_ctx		121213	1					
ANR	121335	Identifier	server		121213	1					
ANR	121336	Identifier	server		121213	1					
ANR	121337	ExpressionStatement	server -> recv_ctx -> connected = 0	584:4:17696:17727	121213	10	True				
ANR	121338	AssignmentExpression	server -> recv_ctx -> connected = 0		121213	0		=			
ANR	121339	PtrMemberAccess	server -> recv_ctx -> connected		121213	0					
ANR	121340	PtrMemberAccess	server -> recv_ctx		121213	0					
ANR	121341	Identifier	server		121213	0					
ANR	121342	Identifier	recv_ctx		121213	1					
ANR	121343	Identifier	connected		121213	1					
ANR	121344	PrimaryExpression	0		121213	1					
ANR	121345	ExpressionStatement	server -> send_ctx -> server = server	585:4:17733:17769	121213	11	True				
ANR	121346	AssignmentExpression	server -> send_ctx -> server = server		121213	0		=			
ANR	121347	PtrMemberAccess	server -> send_ctx -> server		121213	0					
ANR	121348	PtrMemberAccess	server -> send_ctx		121213	0					
ANR	121349	Identifier	server		121213	0					
ANR	121350	Identifier	send_ctx		121213	1					
ANR	121351	Identifier	server		121213	1					
ANR	121352	Identifier	server		121213	1					
ANR	121353	ExpressionStatement	server -> send_ctx -> connected = 0	586:4:17775:17806	121213	12	True				
ANR	121354	AssignmentExpression	server -> send_ctx -> connected = 0		121213	0		=			
ANR	121355	PtrMemberAccess	server -> send_ctx -> connected		121213	0					
ANR	121356	PtrMemberAccess	server -> send_ctx		121213	0					
ANR	121357	Identifier	server		121213	0					
ANR	121358	Identifier	send_ctx		121213	1					
ANR	121359	Identifier	connected		121213	1					
ANR	121360	PrimaryExpression	0		121213	1					
ANR	121361	ExpressionStatement	server -> e_ctx = ss_align ( sizeof ( cipher_ctx_t ) )	588:4:17813:17859	121213	13	True				
ANR	121362	AssignmentExpression	server -> e_ctx = ss_align ( sizeof ( cipher_ctx_t ) )		121213	0		=			
ANR	121363	PtrMemberAccess	server -> e_ctx		121213	0					
ANR	121364	Identifier	server		121213	0					
ANR	121365	Identifier	e_ctx		121213	1					
ANR	121366	CallExpression	ss_align ( sizeof ( cipher_ctx_t ) )		121213	1					
ANR	121367	Callee	ss_align		121213	0					
ANR	121368	Identifier	ss_align		121213	0					
ANR	121369	ArgumentList	sizeof ( cipher_ctx_t )		121213	1					
ANR	121370	Argument	sizeof ( cipher_ctx_t )		121213	0					
ANR	121371	SizeofExpression	sizeof ( cipher_ctx_t )		121213	0					
ANR	121372	Sizeof	sizeof		121213	0					
ANR	121373	SizeofOperand	cipher_ctx_t		121213	1					
ANR	121374	ExpressionStatement	server -> d_ctx = ss_align ( sizeof ( cipher_ctx_t ) )	589:4:17865:17911	121213	14	True				
ANR	121375	AssignmentExpression	server -> d_ctx = ss_align ( sizeof ( cipher_ctx_t ) )		121213	0		=			
ANR	121376	PtrMemberAccess	server -> d_ctx		121213	0					
ANR	121377	Identifier	server		121213	0					
ANR	121378	Identifier	d_ctx		121213	1					
ANR	121379	CallExpression	ss_align ( sizeof ( cipher_ctx_t ) )		121213	1					
ANR	121380	Callee	ss_align		121213	0					
ANR	121381	Identifier	ss_align		121213	0					
ANR	121382	ArgumentList	sizeof ( cipher_ctx_t )		121213	1					
ANR	121383	Argument	sizeof ( cipher_ctx_t )		121213	0					
ANR	121384	SizeofExpression	sizeof ( cipher_ctx_t )		121213	0					
ANR	121385	Sizeof	sizeof		121213	0					
ANR	121386	SizeofOperand	cipher_ctx_t		121213	1					
ANR	121387	ExpressionStatement	"crypto -> ctx_init ( crypto -> cipher , server -> e_ctx , 1 )"	590:4:17917:17967	121213	15	True				
ANR	121388	CallExpression	"crypto -> ctx_init ( crypto -> cipher , server -> e_ctx , 1 )"		121213	0					
ANR	121389	Callee	crypto -> ctx_init		121213	0					
ANR	121390	PtrMemberAccess	crypto -> ctx_init		121213	0					
ANR	121391	Identifier	crypto		121213	0					
ANR	121392	Identifier	ctx_init		121213	1					
ANR	121393	ArgumentList	crypto -> cipher		121213	1					
ANR	121394	Argument	crypto -> cipher		121213	0					
ANR	121395	PtrMemberAccess	crypto -> cipher		121213	0					
ANR	121396	Identifier	crypto		121213	0					
ANR	121397	Identifier	cipher		121213	1					
ANR	121398	Argument	server -> e_ctx		121213	1					
ANR	121399	PtrMemberAccess	server -> e_ctx		121213	0					
ANR	121400	Identifier	server		121213	0					
ANR	121401	Identifier	e_ctx		121213	1					
ANR	121402	Argument	1		121213	2					
ANR	121403	PrimaryExpression	1		121213	0					
ANR	121404	ExpressionStatement	"crypto -> ctx_init ( crypto -> cipher , server -> d_ctx , 0 )"	591:4:17973:18023	121213	16	True				
ANR	121405	CallExpression	"crypto -> ctx_init ( crypto -> cipher , server -> d_ctx , 0 )"		121213	0					
ANR	121406	Callee	crypto -> ctx_init		121213	0					
ANR	121407	PtrMemberAccess	crypto -> ctx_init		121213	0					
ANR	121408	Identifier	crypto		121213	0					
ANR	121409	Identifier	ctx_init		121213	1					
ANR	121410	ArgumentList	crypto -> cipher		121213	1					
ANR	121411	Argument	crypto -> cipher		121213	0					
ANR	121412	PtrMemberAccess	crypto -> cipher		121213	0					
ANR	121413	Identifier	crypto		121213	0					
ANR	121414	Identifier	cipher		121213	1					
ANR	121415	Argument	server -> d_ctx		121213	1					
ANR	121416	PtrMemberAccess	server -> d_ctx		121213	0					
ANR	121417	Identifier	server		121213	0					
ANR	121418	Identifier	d_ctx		121213	1					
ANR	121419	Argument	0		121213	2					
ANR	121420	PrimaryExpression	0		121213	0					
ANR	121421	ExpressionStatement	"ev_io_init ( & server -> recv_ctx -> io , server_recv_cb , fd , EV_READ )"	593:4:18030:18092	121213	17	True				
ANR	121422	CallExpression	"ev_io_init ( & server -> recv_ctx -> io , server_recv_cb , fd , EV_READ )"		121213	0					
ANR	121423	Callee	ev_io_init		121213	0					
ANR	121424	Identifier	ev_io_init		121213	0					
ANR	121425	ArgumentList	& server -> recv_ctx -> io		121213	1					
ANR	121426	Argument	& server -> recv_ctx -> io		121213	0					
ANR	121427	UnaryOperationExpression	& server -> recv_ctx -> io		121213	0					
ANR	121428	UnaryOperator	&		121213	0					
ANR	121429	PtrMemberAccess	server -> recv_ctx -> io		121213	1					
ANR	121430	PtrMemberAccess	server -> recv_ctx		121213	0					
ANR	121431	Identifier	server		121213	0					
ANR	121432	Identifier	recv_ctx		121213	1					
ANR	121433	Identifier	io		121213	1					
ANR	121434	Argument	server_recv_cb		121213	1					
ANR	121435	Identifier	server_recv_cb		121213	0					
ANR	121436	Argument	fd		121213	2					
ANR	121437	Identifier	fd		121213	0					
ANR	121438	Argument	EV_READ		121213	3					
ANR	121439	Identifier	EV_READ		121213	0					
ANR	121440	ExpressionStatement	"ev_io_init ( & server -> send_ctx -> io , server_send_cb , fd , EV_WRITE )"	594:4:18098:18161	121213	18	True				
ANR	121441	CallExpression	"ev_io_init ( & server -> send_ctx -> io , server_send_cb , fd , EV_WRITE )"		121213	0					
ANR	121442	Callee	ev_io_init		121213	0					
ANR	121443	Identifier	ev_io_init		121213	0					
ANR	121444	ArgumentList	& server -> send_ctx -> io		121213	1					
ANR	121445	Argument	& server -> send_ctx -> io		121213	0					
ANR	121446	UnaryOperationExpression	& server -> send_ctx -> io		121213	0					
ANR	121447	UnaryOperator	&		121213	0					
ANR	121448	PtrMemberAccess	server -> send_ctx -> io		121213	1					
ANR	121449	PtrMemberAccess	server -> send_ctx		121213	0					
ANR	121450	Identifier	server		121213	0					
ANR	121451	Identifier	send_ctx		121213	1					
ANR	121452	Identifier	io		121213	1					
ANR	121453	Argument	server_send_cb		121213	1					
ANR	121454	Identifier	server_send_cb		121213	0					
ANR	121455	Argument	fd		121213	2					
ANR	121456	Identifier	fd		121213	0					
ANR	121457	Argument	EV_WRITE		121213	3					
ANR	121458	Identifier	EV_WRITE		121213	0					
ANR	121459	ExpressionStatement	"ev_timer_init ( & server -> delayed_connect_watcher , delayed_connect_cb , 0.05 , 0 )"	596:4:18168:18256	121213	19	True				
ANR	121460	CallExpression	"ev_timer_init ( & server -> delayed_connect_watcher , delayed_connect_cb , 0.05 , 0 )"		121213	0					
ANR	121461	Callee	ev_timer_init		121213	0					
ANR	121462	Identifier	ev_timer_init		121213	0					
ANR	121463	ArgumentList	& server -> delayed_connect_watcher		121213	1					
ANR	121464	Argument	& server -> delayed_connect_watcher		121213	0					
ANR	121465	UnaryOperationExpression	& server -> delayed_connect_watcher		121213	0					
ANR	121466	UnaryOperator	&		121213	0					
ANR	121467	PtrMemberAccess	server -> delayed_connect_watcher		121213	1					
ANR	121468	Identifier	server		121213	0					
ANR	121469	Identifier	delayed_connect_watcher		121213	1					
ANR	121470	Argument	delayed_connect_cb		121213	1					
ANR	121471	Identifier	delayed_connect_cb		121213	0					
ANR	121472	Argument	0.05		121213	2					
ANR	121473	PrimaryExpression	0.05		121213	0					
ANR	121474	Argument	0		121213	3					
ANR	121475	PrimaryExpression	0		121213	0					
ANR	121476	ReturnStatement	return server ;	599:4:18263:18276	121213	20	True				
ANR	121477	Identifier	server		121213	0					
ANR	121478	ReturnType	static server_t *		121213	1					
ANR	121479	Identifier	new_server		121213	2					
ANR	121480	ParameterList	int fd		121213	3					
ANR	121481	Parameter	int fd	571:11:17199:17204	121213	0	True				
ANR	121482	ParameterType	int		121213	0					
ANR	121483	Identifier	fd		121213	1					
ANR	121484	CFGEntryNode	ENTRY		121213		True				
ANR	121485	CFGExitNode	EXIT		121213		True				
ANR	121486	Symbol	server		121213						
ANR	121487	Symbol	server -> recv_ctx -> server		121213						
ANR	121488	Symbol	* server		121213						
ANR	121489	Symbol	server -> recv_ctx -> connected		121213						
ANR	121490	Symbol	server -> send_ctx -> server		121213						
ANR	121491	Symbol	EV_READ		121213						
ANR	121492	Symbol	* crypto		121213						
ANR	121493	Symbol	ss_align		121213						
ANR	121494	Symbol	crypto -> cipher		121213						
ANR	121495	Symbol	EV_WRITE		121213						
ANR	121496	Symbol	server_send_cb		121213						
ANR	121497	Symbol	server -> fd		121213						
ANR	121498	Symbol	delayed_connect_cb		121213						
ANR	121499	Symbol	server -> e_ctx		121213						
ANR	121500	Symbol	* server -> send_ctx		121213						
ANR	121501	Symbol	& server -> recv_ctx -> io		121213						
ANR	121502	Symbol	crypto		121213						
ANR	121503	Symbol	& server -> delayed_connect_watcher		121213						
ANR	121504	Symbol	server -> send_ctx -> connected		121213						
ANR	121505	Symbol	server -> d_ctx		121213						
ANR	121506	Symbol	server -> recv_ctx		121213						
ANR	121507	Symbol	server -> buf		121213						
ANR	121508	Symbol	ss_malloc		121213						
ANR	121509	Symbol	BUF_SIZE		121213						
ANR	121510	Symbol	server_recv_cb		121213						
ANR	121511	Symbol	* * server		121213						
ANR	121512	Symbol	* server -> recv_ctx		121213						
ANR	121513	Symbol	& server -> send_ctx -> io		121213						
ANR	121514	Symbol	fd		121213						
ANR	121515	Symbol	server -> send_ctx		121213						
ANR	121516	Function	free_server	602:0:18281:18910							
ANR	121517	FunctionDef	free_server (server_t * server)		121516	0					
ANR	121518	CompoundStatement		604:0:18323:18910	121516	0					
ANR	121519	IfStatement	if ( server -> remote != NULL )		121516	0					
ANR	121520	Condition	server -> remote != NULL	605:8:18333:18354	121516	0	True				
ANR	121521	EqualityExpression	server -> remote != NULL		121516	0		!=			
ANR	121522	PtrMemberAccess	server -> remote		121516	0					
ANR	121523	Identifier	server		121516	0					
ANR	121524	Identifier	remote		121516	1					
ANR	121525	Identifier	NULL		121516	1					
ANR	121526	CompoundStatement		2:32:33:33	121516	1					
ANR	121527	ExpressionStatement	server -> remote -> server = NULL	606:8:18367:18396	121516	0	True				
ANR	121528	AssignmentExpression	server -> remote -> server = NULL		121516	0		=			
ANR	121529	PtrMemberAccess	server -> remote -> server		121516	0					
ANR	121530	PtrMemberAccess	server -> remote		121516	0					
ANR	121531	Identifier	server		121516	0					
ANR	121532	Identifier	remote		121516	1					
ANR	121533	Identifier	server		121516	1					
ANR	121534	Identifier	NULL		121516	1					
ANR	121535	IfStatement	if ( server -> e_ctx != NULL )		121516	1					
ANR	121536	Condition	server -> e_ctx != NULL	608:8:18412:18432	121516	0	True				
ANR	121537	EqualityExpression	server -> e_ctx != NULL		121516	0		!=			
ANR	121538	PtrMemberAccess	server -> e_ctx		121516	0					
ANR	121539	Identifier	server		121516	0					
ANR	121540	Identifier	e_ctx		121516	1					
ANR	121541	Identifier	NULL		121516	1					
ANR	121542	CompoundStatement		5:31:111:111	121516	1					
ANR	121543	ExpressionStatement	crypto -> ctx_release ( server -> e_ctx )	609:8:18445:18479	121516	0	True				
ANR	121544	CallExpression	crypto -> ctx_release ( server -> e_ctx )		121516	0					
ANR	121545	Callee	crypto -> ctx_release		121516	0					
ANR	121546	PtrMemberAccess	crypto -> ctx_release		121516	0					
ANR	121547	Identifier	crypto		121516	0					
ANR	121548	Identifier	ctx_release		121516	1					
ANR	121549	ArgumentList	server -> e_ctx		121516	1					
ANR	121550	Argument	server -> e_ctx		121516	0					
ANR	121551	PtrMemberAccess	server -> e_ctx		121516	0					
ANR	121552	Identifier	server		121516	0					
ANR	121553	Identifier	e_ctx		121516	1					
ANR	121554	ExpressionStatement	ss_free ( server -> e_ctx )	610:8:18489:18511	121516	1	True				
ANR	121555	CallExpression	ss_free ( server -> e_ctx )		121516	0					
ANR	121556	Callee	ss_free		121516	0					
ANR	121557	Identifier	ss_free		121516	0					
ANR	121558	ArgumentList	server -> e_ctx		121516	1					
ANR	121559	Argument	server -> e_ctx		121516	0					
ANR	121560	PtrMemberAccess	server -> e_ctx		121516	0					
ANR	121561	Identifier	server		121516	0					
ANR	121562	Identifier	e_ctx		121516	1					
ANR	121563	IfStatement	if ( server -> d_ctx != NULL )		121516	2					
ANR	121564	Condition	server -> d_ctx != NULL	612:8:18527:18547	121516	0	True				
ANR	121565	EqualityExpression	server -> d_ctx != NULL		121516	0		!=			
ANR	121566	PtrMemberAccess	server -> d_ctx		121516	0					
ANR	121567	Identifier	server		121516	0					
ANR	121568	Identifier	d_ctx		121516	1					
ANR	121569	Identifier	NULL		121516	1					
ANR	121570	CompoundStatement		9:31:226:226	121516	1					
ANR	121571	ExpressionStatement	crypto -> ctx_release ( server -> d_ctx )	613:8:18560:18594	121516	0	True				
ANR	121572	CallExpression	crypto -> ctx_release ( server -> d_ctx )		121516	0					
ANR	121573	Callee	crypto -> ctx_release		121516	0					
ANR	121574	PtrMemberAccess	crypto -> ctx_release		121516	0					
ANR	121575	Identifier	crypto		121516	0					
ANR	121576	Identifier	ctx_release		121516	1					
ANR	121577	ArgumentList	server -> d_ctx		121516	1					
ANR	121578	Argument	server -> d_ctx		121516	0					
ANR	121579	PtrMemberAccess	server -> d_ctx		121516	0					
ANR	121580	Identifier	server		121516	0					
ANR	121581	Identifier	d_ctx		121516	1					
ANR	121582	ExpressionStatement	ss_free ( server -> d_ctx )	614:8:18604:18626	121516	1	True				
ANR	121583	CallExpression	ss_free ( server -> d_ctx )		121516	0					
ANR	121584	Callee	ss_free		121516	0					
ANR	121585	Identifier	ss_free		121516	0					
ANR	121586	ArgumentList	server -> d_ctx		121516	1					
ANR	121587	Argument	server -> d_ctx		121516	0					
ANR	121588	PtrMemberAccess	server -> d_ctx		121516	0					
ANR	121589	Identifier	server		121516	0					
ANR	121590	Identifier	d_ctx		121516	1					
ANR	121591	IfStatement	if ( server -> abuf != NULL )		121516	3					
ANR	121592	Condition	server -> abuf != NULL	616:8:18642:18661	121516	0	True				
ANR	121593	EqualityExpression	server -> abuf != NULL		121516	0		!=			
ANR	121594	PtrMemberAccess	server -> abuf		121516	0					
ANR	121595	Identifier	server		121516	0					
ANR	121596	Identifier	abuf		121516	1					
ANR	121597	Identifier	NULL		121516	1					
ANR	121598	CompoundStatement		13:30:340:340	121516	1					
ANR	121599	ExpressionStatement	bfree ( server -> abuf )	617:8:18674:18693	121516	0	True				
ANR	121600	CallExpression	bfree ( server -> abuf )		121516	0					
ANR	121601	Callee	bfree		121516	0					
ANR	121602	Identifier	bfree		121516	0					
ANR	121603	ArgumentList	server -> abuf		121516	1					
ANR	121604	Argument	server -> abuf		121516	0					
ANR	121605	PtrMemberAccess	server -> abuf		121516	0					
ANR	121606	Identifier	server		121516	0					
ANR	121607	Identifier	abuf		121516	1					
ANR	121608	ExpressionStatement	ss_free ( server -> abuf )	618:8:18703:18724	121516	1	True				
ANR	121609	CallExpression	ss_free ( server -> abuf )		121516	0					
ANR	121610	Callee	ss_free		121516	0					
ANR	121611	Identifier	ss_free		121516	0					
ANR	121612	ArgumentList	server -> abuf		121516	1					
ANR	121613	Argument	server -> abuf		121516	0					
ANR	121614	PtrMemberAccess	server -> abuf		121516	0					
ANR	121615	Identifier	server		121516	0					
ANR	121616	Identifier	abuf		121516	1					
ANR	121617	IfStatement	if ( server -> buf != NULL )		121516	4					
ANR	121618	Condition	server -> buf != NULL	620:8:18740:18758	121516	0	True				
ANR	121619	EqualityExpression	server -> buf != NULL		121516	0		!=			
ANR	121620	PtrMemberAccess	server -> buf		121516	0					
ANR	121621	Identifier	server		121516	0					
ANR	121622	Identifier	buf		121516	1					
ANR	121623	Identifier	NULL		121516	1					
ANR	121624	CompoundStatement		17:29:437:437	121516	1					
ANR	121625	ExpressionStatement	bfree ( server -> buf )	621:8:18771:18789	121516	0	True				
ANR	121626	CallExpression	bfree ( server -> buf )		121516	0					
ANR	121627	Callee	bfree		121516	0					
ANR	121628	Identifier	bfree		121516	0					
ANR	121629	ArgumentList	server -> buf		121516	1					
ANR	121630	Argument	server -> buf		121516	0					
ANR	121631	PtrMemberAccess	server -> buf		121516	0					
ANR	121632	Identifier	server		121516	0					
ANR	121633	Identifier	buf		121516	1					
ANR	121634	ExpressionStatement	ss_free ( server -> buf )	622:8:18799:18819	121516	1	True				
ANR	121635	CallExpression	ss_free ( server -> buf )		121516	0					
ANR	121636	Callee	ss_free		121516	0					
ANR	121637	Identifier	ss_free		121516	0					
ANR	121638	ArgumentList	server -> buf		121516	1					
ANR	121639	Argument	server -> buf		121516	0					
ANR	121640	PtrMemberAccess	server -> buf		121516	0					
ANR	121641	Identifier	server		121516	0					
ANR	121642	Identifier	buf		121516	1					
ANR	121643	ExpressionStatement	ss_free ( server -> recv_ctx )	624:4:18831:18856	121516	5	True				
ANR	121644	CallExpression	ss_free ( server -> recv_ctx )		121516	0					
ANR	121645	Callee	ss_free		121516	0					
ANR	121646	Identifier	ss_free		121516	0					
ANR	121647	ArgumentList	server -> recv_ctx		121516	1					
ANR	121648	Argument	server -> recv_ctx		121516	0					
ANR	121649	PtrMemberAccess	server -> recv_ctx		121516	0					
ANR	121650	Identifier	server		121516	0					
ANR	121651	Identifier	recv_ctx		121516	1					
ANR	121652	ExpressionStatement	ss_free ( server -> send_ctx )	625:4:18862:18887	121516	6	True				
ANR	121653	CallExpression	ss_free ( server -> send_ctx )		121516	0					
ANR	121654	Callee	ss_free		121516	0					
ANR	121655	Identifier	ss_free		121516	0					
ANR	121656	ArgumentList	server -> send_ctx		121516	1					
ANR	121657	Argument	server -> send_ctx		121516	0					
ANR	121658	PtrMemberAccess	server -> send_ctx		121516	0					
ANR	121659	Identifier	server		121516	0					
ANR	121660	Identifier	send_ctx		121516	1					
ANR	121661	ExpressionStatement	ss_free ( server )	626:4:18893:18908	121516	7	True				
ANR	121662	CallExpression	ss_free ( server )		121516	0					
ANR	121663	Callee	ss_free		121516	0					
ANR	121664	Identifier	ss_free		121516	0					
ANR	121665	ArgumentList	server		121516	1					
ANR	121666	Argument	server		121516	0					
ANR	121667	Identifier	server		121516	0					
ANR	121668	ReturnType	static void		121516	1					
ANR	121669	Identifier	free_server		121516	2					
ANR	121670	ParameterList	server_t * server		121516	3					
ANR	121671	Parameter	server_t * server	603:12:18305:18320	121516	0	True				
ANR	121672	ParameterType	server_t *		121516	0					
ANR	121673	Identifier	server		121516	1					
ANR	121674	CFGEntryNode	ENTRY		121516		True				
ANR	121675	CFGExitNode	EXIT		121516		True				
ANR	121676	Symbol	server		121516						
ANR	121677	Symbol	NULL		121516						
ANR	121678	Symbol	* server		121516						
ANR	121679	Symbol	server -> abuf		121516						
ANR	121680	Symbol	server -> remote		121516						
ANR	121681	Symbol	* server -> remote		121516						
ANR	121682	Symbol	server -> remote -> server		121516						
ANR	121683	Symbol	server -> e_ctx		121516						
ANR	121684	Symbol	crypto		121516						
ANR	121685	Symbol	server -> d_ctx		121516						
ANR	121686	Symbol	server -> recv_ctx		121516						
ANR	121687	Symbol	server -> buf		121516						
ANR	121688	Symbol	* * server		121516						
ANR	121689	Symbol	server -> send_ctx		121516						
ANR	121690	Function	close_and_free_server	629:0:18913:19161							
ANR	121691	FunctionDef	close_and_free_server (EV_P_ server_t * server)		121690	0					
ANR	121692	CompoundStatement		631:0:18971:19161	121690	0					
ANR	121693	IfStatement	if ( server != NULL )		121690	0					
ANR	121694	Condition	server != NULL	632:8:18981:18994	121690	0	True				
ANR	121695	EqualityExpression	server != NULL		121690	0		!=			
ANR	121696	Identifier	server		121690	0					
ANR	121697	Identifier	NULL		121690	1					
ANR	121698	CompoundStatement		2:24:25:25	121690	1					
ANR	121699	ExpressionStatement	ev_io_stop ( EV_A_ & server -> send_ctx -> io )	633:8:19007:19047	121690	0	True				
ANR	121700	CallExpression	ev_io_stop ( EV_A_ & server -> send_ctx -> io )		121690	0					
ANR	121701	Callee	ev_io_stop		121690	0					
ANR	121702	Identifier	ev_io_stop		121690	0					
ANR	121703	ArgumentList	EV_A_ & server -> send_ctx -> io		121690	1					
ANR	121704	Argument	EV_A_ & server -> send_ctx -> io		121690	0					
ANR	121705	BitAndExpression	EV_A_ & server -> send_ctx -> io		121690	0		&			
ANR	121706	Identifier	EV_A_		121690	0					
ANR	121707	PtrMemberAccess	server -> send_ctx -> io		121690	1					
ANR	121708	PtrMemberAccess	server -> send_ctx		121690	0					
ANR	121709	Identifier	server		121690	0					
ANR	121710	Identifier	send_ctx		121690	1					
ANR	121711	Identifier	io		121690	1					
ANR	121712	ExpressionStatement	ev_io_stop ( EV_A_ & server -> recv_ctx -> io )	634:8:19057:19097	121690	1	True				
ANR	121713	CallExpression	ev_io_stop ( EV_A_ & server -> recv_ctx -> io )		121690	0					
ANR	121714	Callee	ev_io_stop		121690	0					
ANR	121715	Identifier	ev_io_stop		121690	0					
ANR	121716	ArgumentList	EV_A_ & server -> recv_ctx -> io		121690	1					
ANR	121717	Argument	EV_A_ & server -> recv_ctx -> io		121690	0					
ANR	121718	BitAndExpression	EV_A_ & server -> recv_ctx -> io		121690	0		&			
ANR	121719	Identifier	EV_A_		121690	0					
ANR	121720	PtrMemberAccess	server -> recv_ctx -> io		121690	1					
ANR	121721	PtrMemberAccess	server -> recv_ctx		121690	0					
ANR	121722	Identifier	server		121690	0					
ANR	121723	Identifier	recv_ctx		121690	1					
ANR	121724	Identifier	io		121690	1					
ANR	121725	ExpressionStatement	close ( server -> fd )	635:8:19107:19124	121690	2	True				
ANR	121726	CallExpression	close ( server -> fd )		121690	0					
ANR	121727	Callee	close		121690	0					
ANR	121728	Identifier	close		121690	0					
ANR	121729	ArgumentList	server -> fd		121690	1					
ANR	121730	Argument	server -> fd		121690	0					
ANR	121731	PtrMemberAccess	server -> fd		121690	0					
ANR	121732	Identifier	server		121690	0					
ANR	121733	Identifier	fd		121690	1					
ANR	121734	ExpressionStatement	free_server ( server )	636:8:19134:19153	121690	3	True				
ANR	121735	CallExpression	free_server ( server )		121690	0					
ANR	121736	Callee	free_server		121690	0					
ANR	121737	Identifier	free_server		121690	0					
ANR	121738	ArgumentList	server		121690	1					
ANR	121739	Argument	server		121690	0					
ANR	121740	Identifier	server		121690	0					
ANR	121741	ReturnType	static void		121690	1					
ANR	121742	Identifier	close_and_free_server		121690	2					
ANR	121743	ParameterList	EV_P_ server_t * server		121690	3					
ANR	121744	Parameter	EV_P_ server_t * server	630:22:18947:18968	121690	0	True				
ANR	121745	ParameterType	EV_P_ server_t *		121690	0					
ANR	121746	Identifier	server		121690	1					
ANR	121747	CFGEntryNode	ENTRY		121690		True				
ANR	121748	CFGExitNode	EXIT		121690		True				
ANR	121749	Symbol	server -> recv_ctx -> io		121690						
ANR	121750	Symbol	server		121690						
ANR	121751	Symbol	NULL		121690						
ANR	121752	Symbol	* server		121690						
ANR	121753	Symbol	server -> recv_ctx		121690						
ANR	121754	Symbol	server -> send_ctx -> io		121690						
ANR	121755	Symbol	server -> fd		121690						
ANR	121756	Symbol	EV_A_		121690						
ANR	121757	Symbol	* * server		121690						
ANR	121758	Symbol	* server -> recv_ctx		121690						
ANR	121759	Symbol	* server -> send_ctx		121690						
ANR	121760	Symbol	server -> send_ctx		121690						
ANR	121761	Function	accept_cb	640:0:19164:22018							
ANR	121762	FunctionDef	"accept_cb (EV_P_ ev_io * w , int revents)"		121761	0					
ANR	121763	CompoundStatement		642:0:19215:22018	121761	0					
ANR	121764	IdentifierDeclStatement	struct listen_ctx * listener = ( struct listen_ctx * ) w ;	643:4:19221:19273	121761	0	True				
ANR	121765	IdentifierDecl	* listener = ( struct listen_ctx * ) w		121761	0					
ANR	121766	IdentifierDeclType	struct listen_ctx *		121761	0					
ANR	121767	Identifier	listener		121761	1					
ANR	121768	AssignmentExpression	* listener = ( struct listen_ctx * ) w		121761	2		=			
ANR	121769	Identifier	listener		121761	0					
ANR	121770	CastExpression	( struct listen_ctx * ) w		121761	1					
ANR	121771	CastTarget	struct listen_ctx *		121761	0					
ANR	121772	Identifier	w		121761	1					
ANR	121773	IdentifierDeclStatement	"int serverfd = accept ( listener -> fd , NULL , NULL ) ;"	644:4:19279:19341	121761	1	True				
ANR	121774	IdentifierDecl	"serverfd = accept ( listener -> fd , NULL , NULL )"		121761	0					
ANR	121775	IdentifierDeclType	int		121761	0					
ANR	121776	Identifier	serverfd		121761	1					
ANR	121777	AssignmentExpression	"serverfd = accept ( listener -> fd , NULL , NULL )"		121761	2		=			
ANR	121778	Identifier	serverfd		121761	0					
ANR	121779	CallExpression	"accept ( listener -> fd , NULL , NULL )"		121761	1					
ANR	121780	Callee	accept		121761	0					
ANR	121781	Identifier	accept		121761	0					
ANR	121782	ArgumentList	listener -> fd		121761	1					
ANR	121783	Argument	listener -> fd		121761	0					
ANR	121784	PtrMemberAccess	listener -> fd		121761	0					
ANR	121785	Identifier	listener		121761	0					
ANR	121786	Identifier	fd		121761	1					
ANR	121787	Argument	NULL		121761	1					
ANR	121788	Identifier	NULL		121761	0					
ANR	121789	Argument	NULL		121761	2					
ANR	121790	Identifier	NULL		121761	0					
ANR	121791	IfStatement	if ( serverfd == - 1 )		121761	2					
ANR	121792	Condition	serverfd == - 1	645:8:19351:19364	121761	0	True				
ANR	121793	EqualityExpression	serverfd == - 1		121761	0		==			
ANR	121794	Identifier	serverfd		121761	0					
ANR	121795	UnaryOperationExpression	- 1		121761	1					
ANR	121796	UnaryOperator	-		121761	0					
ANR	121797	PrimaryExpression	1		121761	1					
ANR	121798	CompoundStatement		4:24:151:151	121761	1					
ANR	121799	ExpressionStatement	"ERROR ( ""accept"" )"	646:8:19377:19392	121761	0	True				
ANR	121800	CallExpression	"ERROR ( ""accept"" )"		121761	0					
ANR	121801	Callee	ERROR		121761	0					
ANR	121802	Identifier	ERROR		121761	0					
ANR	121803	ArgumentList	"""accept"""		121761	1					
ANR	121804	Argument	"""accept"""		121761	0					
ANR	121805	PrimaryExpression	"""accept"""		121761	0					
ANR	121806	ReturnStatement	return ;	647:8:19402:19408	121761	1	True				
ANR	121807	ExpressionStatement	setnonblocking ( serverfd )	649:4:19420:19444	121761	3	True				
ANR	121808	CallExpression	setnonblocking ( serverfd )		121761	0					
ANR	121809	Callee	setnonblocking		121761	0					
ANR	121810	Identifier	setnonblocking		121761	0					
ANR	121811	ArgumentList	serverfd		121761	1					
ANR	121812	Argument	serverfd		121761	0					
ANR	121813	Identifier	serverfd		121761	0					
ANR	121814	IdentifierDeclStatement	int opt = 1 ;	650:4:19450:19461	121761	4	True				
ANR	121815	IdentifierDecl	opt = 1		121761	0					
ANR	121816	IdentifierDeclType	int		121761	0					
ANR	121817	Identifier	opt		121761	1					
ANR	121818	AssignmentExpression	opt = 1		121761	2		=			
ANR	121819	Identifier	opt		121761	0					
ANR	121820	PrimaryExpression	1		121761	1					
ANR	121821	ExpressionStatement	"setsockopt ( serverfd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"	651:4:19467:19528	121761	5	True				
ANR	121822	CallExpression	"setsockopt ( serverfd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"		121761	0					
ANR	121823	Callee	setsockopt		121761	0					
ANR	121824	Identifier	setsockopt		121761	0					
ANR	121825	ArgumentList	serverfd		121761	1					
ANR	121826	Argument	serverfd		121761	0					
ANR	121827	Identifier	serverfd		121761	0					
ANR	121828	Argument	SOL_TCP		121761	1					
ANR	121829	Identifier	SOL_TCP		121761	0					
ANR	121830	Argument	TCP_NODELAY		121761	2					
ANR	121831	Identifier	TCP_NODELAY		121761	0					
ANR	121832	Argument	& opt		121761	3					
ANR	121833	UnaryOperationExpression	& opt		121761	0					
ANR	121834	UnaryOperator	&		121761	0					
ANR	121835	Identifier	opt		121761	1					
ANR	121836	Argument	sizeof ( opt )		121761	4					
ANR	121837	SizeofExpression	sizeof ( opt )		121761	0					
ANR	121838	Sizeof	sizeof		121761	0					
ANR	121839	SizeofOperand	opt		121761	1					
ANR	121840	ExpressionStatement	"setsockopt ( serverfd , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"	653:4:19554:19619	121761	6	True				
ANR	121841	CallExpression	"setsockopt ( serverfd , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"		121761	0					
ANR	121842	Callee	setsockopt		121761	0					
ANR	121843	Identifier	setsockopt		121761	0					
ANR	121844	ArgumentList	serverfd		121761	1					
ANR	121845	Argument	serverfd		121761	0					
ANR	121846	Identifier	serverfd		121761	0					
ANR	121847	Argument	SOL_SOCKET		121761	1					
ANR	121848	Identifier	SOL_SOCKET		121761	0					
ANR	121849	Argument	SO_NOSIGPIPE		121761	2					
ANR	121850	Identifier	SO_NOSIGPIPE		121761	0					
ANR	121851	Argument	& opt		121761	3					
ANR	121852	UnaryOperationExpression	& opt		121761	0					
ANR	121853	UnaryOperator	&		121761	0					
ANR	121854	Identifier	opt		121761	1					
ANR	121855	Argument	sizeof ( opt )		121761	4					
ANR	121856	SizeofExpression	sizeof ( opt )		121761	0					
ANR	121857	Sizeof	sizeof		121761	0					
ANR	121858	SizeofOperand	opt		121761	1					
ANR	121859	IdentifierDeclStatement	int index = rand ( ) % listener -> remote_num ;	656:4:19633:19693	121761	7	True				
ANR	121860	IdentifierDecl	index = rand ( ) % listener -> remote_num		121761	0					
ANR	121861	IdentifierDeclType	int		121761	0					
ANR	121862	Identifier	index		121761	1					
ANR	121863	AssignmentExpression	index = rand ( ) % listener -> remote_num		121761	2		=			
ANR	121864	Identifier	index		121761	0					
ANR	121865	MultiplicativeExpression	rand ( ) % listener -> remote_num		121761	1		%			
ANR	121866	CallExpression	rand ( )		121761	0					
ANR	121867	Callee	rand		121761	0					
ANR	121868	Identifier	rand		121761	0					
ANR	121869	ArgumentList			121761	1					
ANR	121870	PtrMemberAccess	listener -> remote_num		121761	1					
ANR	121871	Identifier	listener		121761	0					
ANR	121872	Identifier	remote_num		121761	1					
ANR	121873	IdentifierDeclStatement	struct sockaddr * remote_addr = listener -> remote_addr [ index ] ;	657:4:19699:19758	121761	8	True				
ANR	121874	IdentifierDecl	* remote_addr = listener -> remote_addr [ index ]		121761	0					
ANR	121875	IdentifierDeclType	struct sockaddr *		121761	0					
ANR	121876	Identifier	remote_addr		121761	1					
ANR	121877	AssignmentExpression	* remote_addr = listener -> remote_addr [ index ]		121761	2		=			
ANR	121878	Identifier	remote_addr		121761	0					
ANR	121879	ArrayIndexing	listener -> remote_addr [ index ]		121761	1					
ANR	121880	PtrMemberAccess	listener -> remote_addr		121761	0					
ANR	121881	Identifier	listener		121761	0					
ANR	121882	Identifier	remote_addr		121761	1					
ANR	121883	Identifier	index		121761	1					
ANR	121884	IdentifierDeclStatement	"int remotefd = socket ( remote_addr -> sa_family , SOCK_STREAM , IPPROTO_TCP ) ;"	659:4:19765:19836	121761	9	True				
ANR	121885	IdentifierDecl	"remotefd = socket ( remote_addr -> sa_family , SOCK_STREAM , IPPROTO_TCP )"		121761	0					
ANR	121886	IdentifierDeclType	int		121761	0					
ANR	121887	Identifier	remotefd		121761	1					
ANR	121888	AssignmentExpression	"remotefd = socket ( remote_addr -> sa_family , SOCK_STREAM , IPPROTO_TCP )"		121761	2		=			
ANR	121889	Identifier	remotefd		121761	0					
ANR	121890	CallExpression	"socket ( remote_addr -> sa_family , SOCK_STREAM , IPPROTO_TCP )"		121761	1					
ANR	121891	Callee	socket		121761	0					
ANR	121892	Identifier	socket		121761	0					
ANR	121893	ArgumentList	remote_addr -> sa_family		121761	1					
ANR	121894	Argument	remote_addr -> sa_family		121761	0					
ANR	121895	PtrMemberAccess	remote_addr -> sa_family		121761	0					
ANR	121896	Identifier	remote_addr		121761	0					
ANR	121897	Identifier	sa_family		121761	1					
ANR	121898	Argument	SOCK_STREAM		121761	1					
ANR	121899	Identifier	SOCK_STREAM		121761	0					
ANR	121900	Argument	IPPROTO_TCP		121761	2					
ANR	121901	Identifier	IPPROTO_TCP		121761	0					
ANR	121902	IfStatement	if ( remotefd == - 1 )		121761	10					
ANR	121903	Condition	remotefd == - 1	660:8:19846:19859	121761	0	True				
ANR	121904	EqualityExpression	remotefd == - 1		121761	0		==			
ANR	121905	Identifier	remotefd		121761	0					
ANR	121906	UnaryOperationExpression	- 1		121761	1					
ANR	121907	UnaryOperator	-		121761	0					
ANR	121908	PrimaryExpression	1		121761	1					
ANR	121909	CompoundStatement		19:24:646:646	121761	1					
ANR	121910	ExpressionStatement	"ERROR ( ""socket"" )"	661:8:19872:19887	121761	0	True				
ANR	121911	CallExpression	"ERROR ( ""socket"" )"		121761	0					
ANR	121912	Callee	ERROR		121761	0					
ANR	121913	Identifier	ERROR		121761	0					
ANR	121914	ArgumentList	"""socket"""		121761	1					
ANR	121915	Argument	"""socket"""		121761	0					
ANR	121916	PrimaryExpression	"""socket"""		121761	0					
ANR	121917	ReturnStatement	return ;	662:8:19897:19903	121761	1	True				
ANR	121918	IfStatement	if ( vpn )		121761	11					
ANR	121919	Condition	vpn	666:8:19939:19941	121761	0	True				
ANR	121920	Identifier	vpn		121761	0					
ANR	121921	CompoundStatement		26:8:738:757	121761	1					
ANR	121922	IdentifierDeclStatement	int not_protect = 0 ;	667:8:19954:19973	121761	0	True				
ANR	121923	IdentifierDecl	not_protect = 0		121761	0					
ANR	121924	IdentifierDeclType	int		121761	0					
ANR	121925	Identifier	not_protect		121761	1					
ANR	121926	AssignmentExpression	not_protect = 0		121761	2		=			
ANR	121927	Identifier	not_protect		121761	0					
ANR	121928	PrimaryExpression	0		121761	1					
ANR	121929	IfStatement	if ( remote_addr -> sa_family == AF_INET )		121761	1					
ANR	121930	Condition	remote_addr -> sa_family == AF_INET	668:12:19987:20019	121761	0	True				
ANR	121931	EqualityExpression	remote_addr -> sa_family == AF_INET		121761	0		==			
ANR	121932	PtrMemberAccess	remote_addr -> sa_family		121761	0					
ANR	121933	Identifier	remote_addr		121761	0					
ANR	121934	Identifier	sa_family		121761	1					
ANR	121935	Identifier	AF_INET		121761	1					
ANR	121936	CompoundStatement		28:12:820:877	121761	1					
ANR	121937	IdentifierDeclStatement	struct sockaddr_in * s = ( struct sockaddr_in * ) remote_addr ;	669:12:20036:20093	121761	0	True				
ANR	121938	IdentifierDecl	* s = ( struct sockaddr_in * ) remote_addr		121761	0					
ANR	121939	IdentifierDeclType	struct sockaddr_in *		121761	0					
ANR	121940	Identifier	s		121761	1					
ANR	121941	AssignmentExpression	* s = ( struct sockaddr_in * ) remote_addr		121761	2		=			
ANR	121942	Identifier	s		121761	0					
ANR	121943	CastExpression	( struct sockaddr_in * ) remote_addr		121761	1					
ANR	121944	CastTarget	struct sockaddr_in *		121761	0					
ANR	121945	Identifier	remote_addr		121761	1					
ANR	121946	IfStatement	"if ( s -> sin_addr . s_addr == inet_addr ( ""127.0.0.1"" ) )"		121761	1					
ANR	121947	Condition	"s -> sin_addr . s_addr == inet_addr ( ""127.0.0.1"" )"	670:16:20111:20154	121761	0	True				
ANR	121948	EqualityExpression	"s -> sin_addr . s_addr == inet_addr ( ""127.0.0.1"" )"		121761	0		==			
ANR	121949	MemberAccess	s -> sin_addr . s_addr		121761	0					
ANR	121950	PtrMemberAccess	s -> sin_addr		121761	0					
ANR	121951	Identifier	s		121761	0					
ANR	121952	Identifier	sin_addr		121761	1					
ANR	121953	Identifier	s_addr		121761	1					
ANR	121954	CallExpression	"inet_addr ( ""127.0.0.1"" )"		121761	1					
ANR	121955	Callee	inet_addr		121761	0					
ANR	121956	Identifier	inet_addr		121761	0					
ANR	121957	ArgumentList	"""127.0.0.1"""		121761	1					
ANR	121958	Argument	"""127.0.0.1"""		121761	0					
ANR	121959	PrimaryExpression	"""127.0.0.1"""		121761	0					
ANR	121960	ExpressionStatement	not_protect = 1	671:16:20173:20188	121761	1	True				
ANR	121961	AssignmentExpression	not_protect = 1		121761	0		=			
ANR	121962	Identifier	not_protect		121761	0					
ANR	121963	PrimaryExpression	1		121761	1					
ANR	121964	IfStatement	if ( ! not_protect )		121761	2					
ANR	121965	Condition	! not_protect	673:12:20212:20223	121761	0	True				
ANR	121966	UnaryOperationExpression	! not_protect		121761	0					
ANR	121967	UnaryOperator	!		121761	0					
ANR	121968	Identifier	not_protect		121761	1					
ANR	121969	CompoundStatement		32:26:1010:1010	121761	1					
ANR	121970	IfStatement	if ( protect_socket ( remotefd ) == - 1 )		121761	0					
ANR	121971	Condition	protect_socket ( remotefd ) == - 1	674:16:20244:20273	121761	0	True				
ANR	121972	EqualityExpression	protect_socket ( remotefd ) == - 1		121761	0		==			
ANR	121973	CallExpression	protect_socket ( remotefd )		121761	0					
ANR	121974	Callee	protect_socket		121761	0					
ANR	121975	Identifier	protect_socket		121761	0					
ANR	121976	ArgumentList	remotefd		121761	1					
ANR	121977	Argument	remotefd		121761	0					
ANR	121978	Identifier	remotefd		121761	0					
ANR	121979	UnaryOperationExpression	- 1		121761	1					
ANR	121980	UnaryOperator	-		121761	0					
ANR	121981	PrimaryExpression	1		121761	1					
ANR	121982	CompoundStatement		33:48:1060:1060	121761	1					
ANR	121983	ExpressionStatement	"ERROR ( ""protect_socket"" )"	675:16:20294:20317	121761	0	True				
ANR	121984	CallExpression	"ERROR ( ""protect_socket"" )"		121761	0					
ANR	121985	Callee	ERROR		121761	0					
ANR	121986	Identifier	ERROR		121761	0					
ANR	121987	ArgumentList	"""protect_socket"""		121761	1					
ANR	121988	Argument	"""protect_socket"""		121761	0					
ANR	121989	PrimaryExpression	"""protect_socket"""		121761	0					
ANR	121990	ExpressionStatement	close ( remotefd )	676:16:20335:20350	121761	1	True				
ANR	121991	CallExpression	close ( remotefd )		121761	0					
ANR	121992	Callee	close		121761	0					
ANR	121993	Identifier	close		121761	0					
ANR	121994	ArgumentList	remotefd		121761	1					
ANR	121995	Argument	remotefd		121761	0					
ANR	121996	Identifier	remotefd		121761	0					
ANR	121997	ReturnStatement	return ;	677:16:20368:20374	121761	2	True				
ANR	121998	ExpressionStatement	"setsockopt ( remotefd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"	683:4:20418:20479	121761	12	True				
ANR	121999	CallExpression	"setsockopt ( remotefd , SOL_TCP , TCP_NODELAY , & opt , sizeof ( opt ) )"		121761	0					
ANR	122000	Callee	setsockopt		121761	0					
ANR	122001	Identifier	setsockopt		121761	0					
ANR	122002	ArgumentList	remotefd		121761	1					
ANR	122003	Argument	remotefd		121761	0					
ANR	122004	Identifier	remotefd		121761	0					
ANR	122005	Argument	SOL_TCP		121761	1					
ANR	122006	Identifier	SOL_TCP		121761	0					
ANR	122007	Argument	TCP_NODELAY		121761	2					
ANR	122008	Identifier	TCP_NODELAY		121761	0					
ANR	122009	Argument	& opt		121761	3					
ANR	122010	UnaryOperationExpression	& opt		121761	0					
ANR	122011	UnaryOperator	&		121761	0					
ANR	122012	Identifier	opt		121761	1					
ANR	122013	Argument	sizeof ( opt )		121761	4					
ANR	122014	SizeofExpression	sizeof ( opt )		121761	0					
ANR	122015	Sizeof	sizeof		121761	0					
ANR	122016	SizeofOperand	opt		121761	1					
ANR	122017	ExpressionStatement	"setsockopt ( remotefd , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"	685:4:20505:20570	121761	13	True				
ANR	122018	CallExpression	"setsockopt ( remotefd , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"		121761	0					
ANR	122019	Callee	setsockopt		121761	0					
ANR	122020	Identifier	setsockopt		121761	0					
ANR	122021	ArgumentList	remotefd		121761	1					
ANR	122022	Argument	remotefd		121761	0					
ANR	122023	Identifier	remotefd		121761	0					
ANR	122024	Argument	SOL_SOCKET		121761	1					
ANR	122025	Identifier	SOL_SOCKET		121761	0					
ANR	122026	Argument	SO_NOSIGPIPE		121761	2					
ANR	122027	Identifier	SO_NOSIGPIPE		121761	0					
ANR	122028	Argument	& opt		121761	3					
ANR	122029	UnaryOperationExpression	& opt		121761	0					
ANR	122030	UnaryOperator	&		121761	0					
ANR	122031	Identifier	opt		121761	1					
ANR	122032	Argument	sizeof ( opt )		121761	4					
ANR	122033	SizeofExpression	sizeof ( opt )		121761	0					
ANR	122034	Sizeof	sizeof		121761	0					
ANR	122035	SizeofOperand	opt		121761	1					
ANR	122036	IfStatement	if ( listener -> mptcp > 1 )		121761	14					
ANR	122037	Condition	listener -> mptcp > 1	688:8:20588:20606	121761	0	True				
ANR	122038	RelationalExpression	listener -> mptcp > 1		121761	0		>			
ANR	122039	PtrMemberAccess	listener -> mptcp		121761	0					
ANR	122040	Identifier	listener		121761	0					
ANR	122041	Identifier	mptcp		121761	1					
ANR	122042	PrimaryExpression	1		121761	1					
ANR	122043	CompoundStatement		48:8:1403:1478	121761	1					
ANR	122044	IdentifierDeclStatement	"int err = setsockopt ( remotefd , SOL_TCP , listener -> mptcp , & opt , sizeof ( opt ) ) ;"	689:8:20619:20694	121761	0	True				
ANR	122045	IdentifierDecl	"err = setsockopt ( remotefd , SOL_TCP , listener -> mptcp , & opt , sizeof ( opt ) )"		121761	0					
ANR	122046	IdentifierDeclType	int		121761	0					
ANR	122047	Identifier	err		121761	1					
ANR	122048	AssignmentExpression	"err = setsockopt ( remotefd , SOL_TCP , listener -> mptcp , & opt , sizeof ( opt ) )"		121761	2		=			
ANR	122049	Identifier	err		121761	0					
ANR	122050	CallExpression	"setsockopt ( remotefd , SOL_TCP , listener -> mptcp , & opt , sizeof ( opt ) )"		121761	1					
ANR	122051	Callee	setsockopt		121761	0					
ANR	122052	Identifier	setsockopt		121761	0					
ANR	122053	ArgumentList	remotefd		121761	1					
ANR	122054	Argument	remotefd		121761	0					
ANR	122055	Identifier	remotefd		121761	0					
ANR	122056	Argument	SOL_TCP		121761	1					
ANR	122057	Identifier	SOL_TCP		121761	0					
ANR	122058	Argument	listener -> mptcp		121761	2					
ANR	122059	PtrMemberAccess	listener -> mptcp		121761	0					
ANR	122060	Identifier	listener		121761	0					
ANR	122061	Identifier	mptcp		121761	1					
ANR	122062	Argument	& opt		121761	3					
ANR	122063	UnaryOperationExpression	& opt		121761	0					
ANR	122064	UnaryOperator	&		121761	0					
ANR	122065	Identifier	opt		121761	1					
ANR	122066	Argument	sizeof ( opt )		121761	4					
ANR	122067	SizeofExpression	sizeof ( opt )		121761	0					
ANR	122068	Sizeof	sizeof		121761	0					
ANR	122069	SizeofOperand	opt		121761	1					
ANR	122070	IfStatement	if ( err == - 1 )		121761	1					
ANR	122071	Condition	err == - 1	690:12:20708:20716	121761	0	True				
ANR	122072	EqualityExpression	err == - 1		121761	0		==			
ANR	122073	Identifier	err		121761	0					
ANR	122074	UnaryOperationExpression	- 1		121761	1					
ANR	122075	UnaryOperator	-		121761	0					
ANR	122076	PrimaryExpression	1		121761	1					
ANR	122077	CompoundStatement		49:23:1503:1503	121761	1					
ANR	122078	ExpressionStatement	"ERROR ( ""failed to enable multipath TCP"" )"	691:12:20733:20772	121761	0	True				
ANR	122079	CallExpression	"ERROR ( ""failed to enable multipath TCP"" )"		121761	0					
ANR	122080	Callee	ERROR		121761	0					
ANR	122081	Identifier	ERROR		121761	0					
ANR	122082	ArgumentList	"""failed to enable multipath TCP"""		121761	1					
ANR	122083	Argument	"""failed to enable multipath TCP"""		121761	0					
ANR	122084	PrimaryExpression	"""failed to enable multipath TCP"""		121761	0					
ANR	122085	ElseStatement	else		121761	0					
ANR	122086	IfStatement	if ( listener -> mptcp == 1 )		121761	0					
ANR	122087	Condition	listener -> mptcp == 1	693:15:20799:20818	121761	0	True				
ANR	122088	EqualityExpression	listener -> mptcp == 1		121761	0		==			
ANR	122089	PtrMemberAccess	listener -> mptcp		121761	0					
ANR	122090	Identifier	listener		121761	0					
ANR	122091	Identifier	mptcp		121761	1					
ANR	122092	PrimaryExpression	1		121761	1					
ANR	122093	CompoundStatement		53:7:1614:1623	121761	1					
ANR	122094	IdentifierDeclStatement	int i = 0 ;	694:7:20830:20839	121761	0	True				
ANR	122095	IdentifierDecl	i = 0		121761	0					
ANR	122096	IdentifierDeclType	int		121761	0					
ANR	122097	Identifier	i		121761	1					
ANR	122098	AssignmentExpression	i = 0		121761	2		=			
ANR	122099	Identifier	i		121761	0					
ANR	122100	PrimaryExpression	0		121761	1					
ANR	122101	WhileStatement	while ( ( listener -> mptcp = mptcp_enabled_values [ i ] ) > 0 )		121761	1					
ANR	122102	Condition	( listener -> mptcp = mptcp_enabled_values [ i ] ) > 0	695:13:20854:20900	121761	0	True				
ANR	122103	RelationalExpression	( listener -> mptcp = mptcp_enabled_values [ i ] ) > 0		121761	0		>			
ANR	122104	AssignmentExpression	listener -> mptcp = mptcp_enabled_values [ i ]		121761	0		=			
ANR	122105	PtrMemberAccess	listener -> mptcp		121761	0					
ANR	122106	Identifier	listener		121761	0					
ANR	122107	Identifier	mptcp		121761	1					
ANR	122108	ArrayIndexing	mptcp_enabled_values [ i ]		121761	1					
ANR	122109	Identifier	mptcp_enabled_values		121761	0					
ANR	122110	Identifier	i		121761	1					
ANR	122111	PrimaryExpression	0		121761	1					
ANR	122112	CompoundStatement		55:12:1701:1776	121761	1					
ANR	122113	IdentifierDeclStatement	"int err = setsockopt ( remotefd , SOL_TCP , listener -> mptcp , & opt , sizeof ( opt ) ) ;"	696:12:20917:20992	121761	0	True				
ANR	122114	IdentifierDecl	"err = setsockopt ( remotefd , SOL_TCP , listener -> mptcp , & opt , sizeof ( opt ) )"		121761	0					
ANR	122115	IdentifierDeclType	int		121761	0					
ANR	122116	Identifier	err		121761	1					
ANR	122117	AssignmentExpression	"err = setsockopt ( remotefd , SOL_TCP , listener -> mptcp , & opt , sizeof ( opt ) )"		121761	2		=			
ANR	122118	Identifier	err		121761	0					
ANR	122119	CallExpression	"setsockopt ( remotefd , SOL_TCP , listener -> mptcp , & opt , sizeof ( opt ) )"		121761	1					
ANR	122120	Callee	setsockopt		121761	0					
ANR	122121	Identifier	setsockopt		121761	0					
ANR	122122	ArgumentList	remotefd		121761	1					
ANR	122123	Argument	remotefd		121761	0					
ANR	122124	Identifier	remotefd		121761	0					
ANR	122125	Argument	SOL_TCP		121761	1					
ANR	122126	Identifier	SOL_TCP		121761	0					
ANR	122127	Argument	listener -> mptcp		121761	2					
ANR	122128	PtrMemberAccess	listener -> mptcp		121761	0					
ANR	122129	Identifier	listener		121761	0					
ANR	122130	Identifier	mptcp		121761	1					
ANR	122131	Argument	& opt		121761	3					
ANR	122132	UnaryOperationExpression	& opt		121761	0					
ANR	122133	UnaryOperator	&		121761	0					
ANR	122134	Identifier	opt		121761	1					
ANR	122135	Argument	sizeof ( opt )		121761	4					
ANR	122136	SizeofExpression	sizeof ( opt )		121761	0					
ANR	122137	Sizeof	sizeof		121761	0					
ANR	122138	SizeofOperand	opt		121761	1					
ANR	122139	IfStatement	if ( err != - 1 )		121761	1					
ANR	122140	Condition	err != - 1	697:16:21010:21018	121761	0	True				
ANR	122141	EqualityExpression	err != - 1		121761	0		!=			
ANR	122142	Identifier	err		121761	0					
ANR	122143	UnaryOperationExpression	- 1		121761	1					
ANR	122144	UnaryOperator	-		121761	0					
ANR	122145	PrimaryExpression	1		121761	1					
ANR	122146	CompoundStatement		56:27:1805:1805	121761	1					
ANR	122147	BreakStatement	break ;	698:16:21039:21044	121761	0	True				
ANR	122148	ExpressionStatement	i ++	700:12:21072:21075	121761	2	True				
ANR	122149	PostIncDecOperationExpression	i ++		121761	0					
ANR	122150	Identifier	i		121761	0					
ANR	122151	IncDec	++		121761	1					
ANR	122152	IfStatement	if ( listener -> mptcp == 0 )		121761	2					
ANR	122153	Condition	listener -> mptcp == 0	702:12:21099:21118	121761	0	True				
ANR	122154	EqualityExpression	listener -> mptcp == 0		121761	0		==			
ANR	122155	PtrMemberAccess	listener -> mptcp		121761	0					
ANR	122156	Identifier	listener		121761	0					
ANR	122157	Identifier	mptcp		121761	1					
ANR	122158	PrimaryExpression	0		121761	1					
ANR	122159	CompoundStatement		61:34:1905:1905	121761	1					
ANR	122160	ExpressionStatement	"ERROR ( ""failed to enable multipath TCP"" )"	703:12:21135:21174	121761	0	True				
ANR	122161	CallExpression	"ERROR ( ""failed to enable multipath TCP"" )"		121761	0					
ANR	122162	Callee	ERROR		121761	0					
ANR	122163	Identifier	ERROR		121761	0					
ANR	122164	ArgumentList	"""failed to enable multipath TCP"""		121761	1					
ANR	122165	Argument	"""failed to enable multipath TCP"""		121761	0					
ANR	122166	PrimaryExpression	"""failed to enable multipath TCP"""		121761	0					
ANR	122167	ExpressionStatement	setnonblocking ( remotefd )	708:4:21210:21234	121761	15	True				
ANR	122168	CallExpression	setnonblocking ( remotefd )		121761	0					
ANR	122169	Callee	setnonblocking		121761	0					
ANR	122170	Identifier	setnonblocking		121761	0					
ANR	122171	ArgumentList	remotefd		121761	1					
ANR	122172	Argument	remotefd		121761	0					
ANR	122173	Identifier	remotefd		121761	0					
ANR	122174	IfStatement	if ( listener -> iface )		121761	16					
ANR	122175	Condition	listener -> iface	710:8:21265:21279	121761	0	True				
ANR	122176	PtrMemberAccess	listener -> iface		121761	0					
ANR	122177	Identifier	listener		121761	0					
ANR	122178	Identifier	iface		121761	1					
ANR	122179	CompoundStatement		69:25:2066:2066	121761	1					
ANR	122180	IfStatement	"if ( setinterface ( remotefd , listener -> iface ) == - 1 )"		121761	0					
ANR	122181	Condition	"setinterface ( remotefd , listener -> iface ) == - 1"	711:12:21296:21340	121761	0	True				
ANR	122182	EqualityExpression	"setinterface ( remotefd , listener -> iface ) == - 1"		121761	0		==			
ANR	122183	CallExpression	"setinterface ( remotefd , listener -> iface )"		121761	0					
ANR	122184	Callee	setinterface		121761	0					
ANR	122185	Identifier	setinterface		121761	0					
ANR	122186	ArgumentList	remotefd		121761	1					
ANR	122187	Argument	remotefd		121761	0					
ANR	122188	Identifier	remotefd		121761	0					
ANR	122189	Argument	listener -> iface		121761	1					
ANR	122190	PtrMemberAccess	listener -> iface		121761	0					
ANR	122191	Identifier	listener		121761	0					
ANR	122192	Identifier	iface		121761	1					
ANR	122193	UnaryOperationExpression	- 1		121761	1					
ANR	122194	UnaryOperator	-		121761	0					
ANR	122195	PrimaryExpression	1		121761	1					
ANR	122196	ExpressionStatement	"ERROR ( ""setinterface"" )"	712:12:21355:21376	121761	1	True				
ANR	122197	CallExpression	"ERROR ( ""setinterface"" )"		121761	0					
ANR	122198	Callee	ERROR		121761	0					
ANR	122199	Identifier	ERROR		121761	0					
ANR	122200	ArgumentList	"""setinterface"""		121761	1					
ANR	122201	Argument	"""setinterface"""		121761	0					
ANR	122202	PrimaryExpression	"""setinterface"""		121761	0					
ANR	122203	IdentifierDeclStatement	server_t * server = new_server ( serverfd ) ;	716:4:21396:21435	121761	17	True				
ANR	122204	IdentifierDecl	* server = new_server ( serverfd )		121761	0					
ANR	122205	IdentifierDeclType	server_t *		121761	0					
ANR	122206	Identifier	server		121761	1					
ANR	122207	AssignmentExpression	* server = new_server ( serverfd )		121761	2		=			
ANR	122208	Identifier	server		121761	0					
ANR	122209	CallExpression	new_server ( serverfd )		121761	1					
ANR	122210	Callee	new_server		121761	0					
ANR	122211	Identifier	new_server		121761	0					
ANR	122212	ArgumentList	serverfd		121761	1					
ANR	122213	Argument	serverfd		121761	0					
ANR	122214	Identifier	serverfd		121761	0					
ANR	122215	IdentifierDeclStatement	"remote_t * remote = new_remote ( remotefd , listener -> timeout ) ;"	717:4:21441:21499	121761	18	True				
ANR	122216	IdentifierDecl	"* remote = new_remote ( remotefd , listener -> timeout )"		121761	0					
ANR	122217	IdentifierDeclType	remote_t *		121761	0					
ANR	122218	Identifier	remote		121761	1					
ANR	122219	AssignmentExpression	"* remote = new_remote ( remotefd , listener -> timeout )"		121761	2		=			
ANR	122220	Identifier	remote		121761	0					
ANR	122221	CallExpression	"new_remote ( remotefd , listener -> timeout )"		121761	1					
ANR	122222	Callee	new_remote		121761	0					
ANR	122223	Identifier	new_remote		121761	0					
ANR	122224	ArgumentList	remotefd		121761	1					
ANR	122225	Argument	remotefd		121761	0					
ANR	122226	Identifier	remotefd		121761	0					
ANR	122227	Argument	listener -> timeout		121761	1					
ANR	122228	PtrMemberAccess	listener -> timeout		121761	0					
ANR	122229	Identifier	listener		121761	0					
ANR	122230	Identifier	timeout		121761	1					
ANR	122231	ExpressionStatement	server -> destaddr = listener -> tunnel_addr	718:4:21505:21545	121761	19	True				
ANR	122232	AssignmentExpression	server -> destaddr = listener -> tunnel_addr		121761	0		=			
ANR	122233	PtrMemberAccess	server -> destaddr		121761	0					
ANR	122234	Identifier	server		121761	0					
ANR	122235	Identifier	destaddr		121761	1					
ANR	122236	PtrMemberAccess	listener -> tunnel_addr		121761	1					
ANR	122237	Identifier	listener		121761	0					
ANR	122238	Identifier	tunnel_addr		121761	1					
ANR	122239	ExpressionStatement	server -> remote = remote	719:4:21551:21576	121761	20	True				
ANR	122240	AssignmentExpression	server -> remote = remote		121761	0		=			
ANR	122241	PtrMemberAccess	server -> remote		121761	0					
ANR	122242	Identifier	server		121761	0					
ANR	122243	Identifier	remote		121761	1					
ANR	122244	Identifier	remote		121761	1					
ANR	122245	ExpressionStatement	remote -> server = server	720:4:21582:21607	121761	21	True				
ANR	122246	AssignmentExpression	remote -> server = server		121761	0		=			
ANR	122247	PtrMemberAccess	remote -> server		121761	0					
ANR	122248	Identifier	remote		121761	0					
ANR	122249	Identifier	server		121761	1					
ANR	122250	Identifier	server		121761	1					
ANR	122251	IdentifierDeclStatement	"int r = connect ( remotefd , remote_addr , get_sockaddr_len ( remote_addr ) ) ;"	722:4:21614:21683	121761	22	True				
ANR	122252	IdentifierDecl	"r = connect ( remotefd , remote_addr , get_sockaddr_len ( remote_addr ) )"		121761	0					
ANR	122253	IdentifierDeclType	int		121761	0					
ANR	122254	Identifier	r		121761	1					
ANR	122255	AssignmentExpression	"r = connect ( remotefd , remote_addr , get_sockaddr_len ( remote_addr ) )"		121761	2		=			
ANR	122256	Identifier	r		121761	0					
ANR	122257	CallExpression	"connect ( remotefd , remote_addr , get_sockaddr_len ( remote_addr ) )"		121761	1					
ANR	122258	Callee	connect		121761	0					
ANR	122259	Identifier	connect		121761	0					
ANR	122260	ArgumentList	remotefd		121761	1					
ANR	122261	Argument	remotefd		121761	0					
ANR	122262	Identifier	remotefd		121761	0					
ANR	122263	Argument	remote_addr		121761	1					
ANR	122264	Identifier	remote_addr		121761	0					
ANR	122265	Argument	get_sockaddr_len ( remote_addr )		121761	2					
ANR	122266	CallExpression	get_sockaddr_len ( remote_addr )		121761	0					
ANR	122267	Callee	get_sockaddr_len		121761	0					
ANR	122268	Identifier	get_sockaddr_len		121761	0					
ANR	122269	ArgumentList	remote_addr		121761	1					
ANR	122270	Argument	remote_addr		121761	0					
ANR	122271	Identifier	remote_addr		121761	0					
ANR	122272	IfStatement	if ( r == - 1 && errno != CONNECT_IN_PROGRESS )		121761	23					
ANR	122273	Condition	r == - 1 && errno != CONNECT_IN_PROGRESS	724:8:21694:21732	121761	0	True				
ANR	122274	AndExpression	r == - 1 && errno != CONNECT_IN_PROGRESS		121761	0		&&			
ANR	122275	EqualityExpression	r == - 1		121761	0		==			
ANR	122276	Identifier	r		121761	0					
ANR	122277	UnaryOperationExpression	- 1		121761	1					
ANR	122278	UnaryOperator	-		121761	0					
ANR	122279	PrimaryExpression	1		121761	1					
ANR	122280	EqualityExpression	errno != CONNECT_IN_PROGRESS		121761	1		!=			
ANR	122281	Identifier	errno		121761	0					
ANR	122282	Identifier	CONNECT_IN_PROGRESS		121761	1					
ANR	122283	CompoundStatement		83:49:2519:2519	121761	1					
ANR	122284	ExpressionStatement	"ERROR ( ""connect"" )"	725:8:21745:21761	121761	0	True				
ANR	122285	CallExpression	"ERROR ( ""connect"" )"		121761	0					
ANR	122286	Callee	ERROR		121761	0					
ANR	122287	Identifier	ERROR		121761	0					
ANR	122288	ArgumentList	"""connect"""		121761	1					
ANR	122289	Argument	"""connect"""		121761	0					
ANR	122290	PrimaryExpression	"""connect"""		121761	0					
ANR	122291	Statement	close_and_free_remote	726:8:21771:21791	121761	1	True				
ANR	122292	Statement	(	726:29:21792:21792	121761	2	True				
ANR	122293	Statement	EV_A_	726:30:21793:21797	121761	3	True				
ANR	122294	Statement	remote	726:36:21799:21804	121761	4	True				
ANR	122295	Statement	)	726:42:21805:21805	121761	5	True				
ANR	122296	ExpressionStatement		726:43:21806:21806	121761	6	True				
ANR	122297	Statement	close_and_free_server	727:8:21816:21836	121761	7	True				
ANR	122298	Statement	(	727:29:21837:21837	121761	8	True				
ANR	122299	Statement	EV_A_	727:30:21838:21842	121761	9	True				
ANR	122300	Statement	server	727:36:21844:21849	121761	10	True				
ANR	122301	Statement	)	727:42:21850:21850	121761	11	True				
ANR	122302	ExpressionStatement		727:43:21851:21851	121761	12	True				
ANR	122303	ReturnStatement	return ;	728:8:21861:21867	121761	13	True				
ANR	122304	ExpressionStatement	ev_io_start ( EV_A_ & remote -> send_ctx -> io )	732:4:21920:21961	121761	24	True				
ANR	122305	CallExpression	ev_io_start ( EV_A_ & remote -> send_ctx -> io )		121761	0					
ANR	122306	Callee	ev_io_start		121761	0					
ANR	122307	Identifier	ev_io_start		121761	0					
ANR	122308	ArgumentList	EV_A_ & remote -> send_ctx -> io		121761	1					
ANR	122309	Argument	EV_A_ & remote -> send_ctx -> io		121761	0					
ANR	122310	BitAndExpression	EV_A_ & remote -> send_ctx -> io		121761	0		&			
ANR	122311	Identifier	EV_A_		121761	0					
ANR	122312	PtrMemberAccess	remote -> send_ctx -> io		121761	1					
ANR	122313	PtrMemberAccess	remote -> send_ctx		121761	0					
ANR	122314	Identifier	remote		121761	0					
ANR	122315	Identifier	send_ctx		121761	1					
ANR	122316	Identifier	io		121761	1					
ANR	122317	ExpressionStatement	ev_timer_start ( EV_A_ & remote -> send_ctx -> watcher )	733:4:21967:22016	121761	25	True				
ANR	122318	CallExpression	ev_timer_start ( EV_A_ & remote -> send_ctx -> watcher )		121761	0					
ANR	122319	Callee	ev_timer_start		121761	0					
ANR	122320	Identifier	ev_timer_start		121761	0					
ANR	122321	ArgumentList	EV_A_ & remote -> send_ctx -> watcher		121761	1					
ANR	122322	Argument	EV_A_ & remote -> send_ctx -> watcher		121761	0					
ANR	122323	BitAndExpression	EV_A_ & remote -> send_ctx -> watcher		121761	0		&			
ANR	122324	Identifier	EV_A_		121761	0					
ANR	122325	PtrMemberAccess	remote -> send_ctx -> watcher		121761	1					
ANR	122326	PtrMemberAccess	remote -> send_ctx		121761	0					
ANR	122327	Identifier	remote		121761	0					
ANR	122328	Identifier	send_ctx		121761	1					
ANR	122329	Identifier	watcher		121761	1					
ANR	122330	ReturnType	static void		121761	1					
ANR	122331	Identifier	accept_cb		121761	2					
ANR	122332	ParameterList	"EV_P_ ev_io * w , int revents"		121761	3					
ANR	122333	Parameter	EV_P_ ev_io * w	641:10:19186:19199	121761	0	True				
ANR	122334	ParameterType	EV_P_ ev_io *		121761	0					
ANR	122335	Identifier	w		121761	1					
ANR	122336	Parameter	int revents	641:26:19202:19212	121761	1	True				
ANR	122337	ParameterType	int		121761	0					
ANR	122338	Identifier	revents		121761	1					
ANR	122339	CFGEntryNode	ENTRY		121761		True				
ANR	122340	CFGExitNode	EXIT		121761		True				
ANR	122341	Symbol	revents		121761						
ANR	122342	Symbol	* listener -> remote_addr		121761						
ANR	122343	Symbol	* index		121761						
ANR	122344	Symbol	server -> remote		121761						
ANR	122345	Symbol	listener		121761						
ANR	122346	Symbol	mptcp_enabled_values		121761						
ANR	122347	Symbol	* remote_addr		121761						
ANR	122348	Symbol	listener -> fd		121761						
ANR	122349	Symbol	remote		121761						
ANR	122350	Symbol	rand		121761						
ANR	122351	Symbol	remote_addr -> sa_family		121761						
ANR	122352	Symbol	server -> destaddr		121761						
ANR	122353	Symbol	s -> sin_addr		121761						
ANR	122354	Symbol	s -> sin_addr . s_addr		121761						
ANR	122355	Symbol	IPPROTO_TCP		121761						
ANR	122356	Symbol	listener -> tunnel_addr		121761						
ANR	122357	Symbol	protect_socket		121761						
ANR	122358	Symbol	& opt		121761						
ANR	122359	Symbol	listener -> remote_num		121761						
ANR	122360	Symbol	not_protect		121761						
ANR	122361	Symbol	errno		121761						
ANR	122362	Symbol	NULL		121761						
ANR	122363	Symbol	listener -> mptcp		121761						
ANR	122364	Symbol	remote -> send_ctx -> watcher		121761						
ANR	122365	Symbol	index		121761						
ANR	122366	Symbol	AF_INET		121761						
ANR	122367	Symbol	remote -> send_ctx		121761						
ANR	122368	Symbol	* * remote		121761						
ANR	122369	Symbol	accept		121761						
ANR	122370	Symbol	new_remote		121761						
ANR	122371	Symbol	opt		121761						
ANR	122372	Symbol	* * listener		121761						
ANR	122373	Symbol	* remote -> send_ctx		121761						
ANR	122374	Symbol	* listener		121761						
ANR	122375	Symbol	SOL_TCP		121761						
ANR	122376	Symbol	remote -> server		121761						
ANR	122377	Symbol	inet_addr		121761						
ANR	122378	Symbol	server		121761						
ANR	122379	Symbol	* server		121761						
ANR	122380	Symbol	setsockopt		121761						
ANR	122381	Symbol	TCP_NODELAY		121761						
ANR	122382	Symbol	SOCK_STREAM		121761						
ANR	122383	Symbol	SO_NOSIGPIPE		121761						
ANR	122384	Symbol	setinterface		121761						
ANR	122385	Symbol	connect		121761						
ANR	122386	Symbol	remote_addr		121761						
ANR	122387	Symbol	err		121761						
ANR	122388	Symbol	get_sockaddr_len		121761						
ANR	122389	Symbol	i		121761						
ANR	122390	Symbol	remotefd		121761						
ANR	122391	Symbol	* mptcp_enabled_values		121761						
ANR	122392	Symbol	new_server		121761						
ANR	122393	Symbol	listener -> timeout		121761						
ANR	122394	Symbol	SOL_SOCKET		121761						
ANR	122395	Symbol	serverfd		121761						
ANR	122396	Symbol	r		121761						
ANR	122397	Symbol	CONNECT_IN_PROGRESS		121761						
ANR	122398	Symbol	remote -> send_ctx -> io		121761						
ANR	122399	Symbol	s		121761						
ANR	122400	Symbol	* i		121761						
ANR	122401	Symbol	vpn		121761						
ANR	122402	Symbol	w		121761						
ANR	122403	Symbol	EV_A_		121761						
ANR	122404	Symbol	listener -> iface		121761						
ANR	122405	Symbol	socket		121761						
ANR	122406	Symbol	* s		121761						
ANR	122407	Symbol	listener -> remote_addr		121761						
ANR	122408	Symbol	* remote		121761						
ANR	122409	Function	signal_cb	736:0:22021:22604							
ANR	122410	FunctionDef	"signal_cb (EV_P_ ev_signal * w , int revents)"		122409	0					
ANR	122411	CompoundStatement		738:0:22076:22604	122409	0					
ANR	122412	IfStatement	if ( revents & EV_SIGNAL )		122409	0					
ANR	122413	Condition	revents & EV_SIGNAL	739:8:22086:22104	122409	0	True				
ANR	122414	BitAndExpression	revents & EV_SIGNAL		122409	0		&			
ANR	122415	Identifier	revents		122409	0					
ANR	122416	Identifier	EV_SIGNAL		122409	1					
ANR	122417	CompoundStatement		2:29:30:30	122409	1					
ANR	122418	SwitchStatement	switch ( w -> signum )		122409	0					
ANR	122419	Condition	w -> signum	740:16:22125:22133	122409	0	True				
ANR	122420	PtrMemberAccess	w -> signum		122409	0					
ANR	122421	Identifier	w		122409	0					
ANR	122422	Identifier	signum		122409	1					
ANR	122423	CompoundStatement		3:27:59:59	122409	1					
ANR	122424	Label	case SIGCHLD :	741:8:22146:22158	122409	0	True				
ANR	122425	Identifier	SIGCHLD		122409	0					
ANR	122426	IfStatement	if ( ! is_plugin_running ( ) )		122409	1					
ANR	122427	Condition	! is_plugin_running ( )	742:16:22176:22195	122409	0	True				
ANR	122428	UnaryOperationExpression	! is_plugin_running ( )		122409	0					
ANR	122429	UnaryOperator	!		122409	0					
ANR	122430	CallExpression	is_plugin_running ( )		122409	1					
ANR	122431	Callee	is_plugin_running		122409	0					
ANR	122432	Identifier	is_plugin_running		122409	0					
ANR	122433	ArgumentList			122409	1					
ANR	122434	ExpressionStatement	"LOGE ( ""plugin service exit unexpectedly"" )"	743:16:22214:22254	122409	1	True				
ANR	122435	CallExpression	"LOGE ( ""plugin service exit unexpectedly"" )"		122409	0					
ANR	122436	Callee	LOGE		122409	0					
ANR	122437	Identifier	LOGE		122409	0					
ANR	122438	ArgumentList	"""plugin service exit unexpectedly"""		122409	1					
ANR	122439	Argument	"""plugin service exit unexpectedly"""		122409	0					
ANR	122440	PrimaryExpression	"""plugin service exit unexpectedly"""		122409	0					
ANR	122441	ElseStatement	else		122409	0					
ANR	122442	ReturnStatement	return ;	745:16:22289:22295	122409	0	True				
ANR	122443	Label	case SIGINT :	746:8:22305:22316	122409	2	True				
ANR	122444	Identifier	SIGINT		122409	0					
ANR	122445	Label	case SIGTERM :	747:8:22326:22338	122409	3	True				
ANR	122446	Identifier	SIGTERM		122409	0					
ANR	122447	ExpressionStatement	"ev_signal_stop ( EV_DEFAULT , & sigint_watcher )"	748:12:22352:22395	122409	4	True				
ANR	122448	CallExpression	"ev_signal_stop ( EV_DEFAULT , & sigint_watcher )"		122409	0					
ANR	122449	Callee	ev_signal_stop		122409	0					
ANR	122450	Identifier	ev_signal_stop		122409	0					
ANR	122451	ArgumentList	EV_DEFAULT		122409	1					
ANR	122452	Argument	EV_DEFAULT		122409	0					
ANR	122453	Identifier	EV_DEFAULT		122409	0					
ANR	122454	Argument	& sigint_watcher		122409	1					
ANR	122455	UnaryOperationExpression	& sigint_watcher		122409	0					
ANR	122456	UnaryOperator	&		122409	0					
ANR	122457	Identifier	sigint_watcher		122409	1					
ANR	122458	ExpressionStatement	"ev_signal_stop ( EV_DEFAULT , & sigterm_watcher )"	749:12:22409:22453	122409	5	True				
ANR	122459	CallExpression	"ev_signal_stop ( EV_DEFAULT , & sigterm_watcher )"		122409	0					
ANR	122460	Callee	ev_signal_stop		122409	0					
ANR	122461	Identifier	ev_signal_stop		122409	0					
ANR	122462	ArgumentList	EV_DEFAULT		122409	1					
ANR	122463	Argument	EV_DEFAULT		122409	0					
ANR	122464	Identifier	EV_DEFAULT		122409	0					
ANR	122465	Argument	& sigterm_watcher		122409	1					
ANR	122466	UnaryOperationExpression	& sigterm_watcher		122409	0					
ANR	122467	UnaryOperator	&		122409	0					
ANR	122468	Identifier	sigterm_watcher		122409	1					
ANR	122469	ExpressionStatement	"ev_signal_stop ( EV_DEFAULT , & sigchld_watcher )"	750:12:22467:22511	122409	6	True				
ANR	122470	CallExpression	"ev_signal_stop ( EV_DEFAULT , & sigchld_watcher )"		122409	0					
ANR	122471	Callee	ev_signal_stop		122409	0					
ANR	122472	Identifier	ev_signal_stop		122409	0					
ANR	122473	ArgumentList	EV_DEFAULT		122409	1					
ANR	122474	Argument	EV_DEFAULT		122409	0					
ANR	122475	Identifier	EV_DEFAULT		122409	0					
ANR	122476	Argument	& sigchld_watcher		122409	1					
ANR	122477	UnaryOperationExpression	& sigchld_watcher		122409	0					
ANR	122478	UnaryOperator	&		122409	0					
ANR	122479	Identifier	sigchld_watcher		122409	1					
ANR	122480	ExpressionStatement	keep_resolving = 0	751:12:22525:22543	122409	7	True				
ANR	122481	AssignmentExpression	keep_resolving = 0		122409	0		=			
ANR	122482	Identifier	keep_resolving		122409	0					
ANR	122483	PrimaryExpression	0		122409	1					
ANR	122484	Statement	ev_unloop	752:12:22557:22565	122409	8	True				
ANR	122485	Statement	(	752:21:22566:22566	122409	9	True				
ANR	122486	Statement	EV_A_	752:22:22567:22571	122409	10	True				
ANR	122487	Statement	EVUNLOOP_ALL	752:28:22573:22584	122409	11	True				
ANR	122488	Statement	)	752:40:22585:22585	122409	12	True				
ANR	122489	ExpressionStatement		752:41:22586:22586	122409	13	True				
ANR	122490	ReturnType	static void		122409	1					
ANR	122491	Identifier	signal_cb		122409	2					
ANR	122492	ParameterList	"EV_P_ ev_signal * w , int revents"		122409	3					
ANR	122493	Parameter	EV_P_ ev_signal * w	737:10:22043:22060	122409	0	True				
ANR	122494	ParameterType	EV_P_ ev_signal *		122409	0					
ANR	122495	Identifier	w		122409	1					
ANR	122496	Parameter	int revents	737:30:22063:22073	122409	1	True				
ANR	122497	ParameterType	int		122409	0					
ANR	122498	Identifier	revents		122409	1					
ANR	122499	CFGEntryNode	ENTRY		122409		True				
ANR	122500	CFGExitNode	EXIT		122409		True				
ANR	122501	Symbol	is_plugin_running		122409						
ANR	122502	Symbol	& sigterm_watcher		122409						
ANR	122503	Symbol	& sigchld_watcher		122409						
ANR	122504	Symbol	w -> signum		122409						
ANR	122505	Symbol	* w		122409						
ANR	122506	Symbol	& sigint_watcher		122409						
ANR	122507	Symbol	EV_DEFAULT		122409						
ANR	122508	Symbol	revents		122409						
ANR	122509	Symbol	keep_resolving		122409						
ANR	122510	Symbol	w		122409						
ANR	122511	Symbol	EV_SIGNAL		122409						
ANR	122512	Function	main	757:0:22607:34104							
ANR	122513	FunctionDef	"main (int argc , char * * argv)"		122512	0					
ANR	122514	CompoundStatement		759:0:22639:34104	122512	0					
ANR	122515	ExpressionStatement	srand ( time ( NULL ) )	760:4:22645:22662	122512	0	True				
ANR	122516	CallExpression	srand ( time ( NULL ) )		122512	0					
ANR	122517	Callee	srand		122512	0					
ANR	122518	Identifier	srand		122512	0					
ANR	122519	ArgumentList	time ( NULL )		122512	1					
ANR	122520	Argument	time ( NULL )		122512	0					
ANR	122521	CallExpression	time ( NULL )		122512	0					
ANR	122522	Callee	time		122512	0					
ANR	122523	Identifier	time		122512	0					
ANR	122524	ArgumentList	NULL		122512	1					
ANR	122525	Argument	NULL		122512	0					
ANR	122526	Identifier	NULL		122512	0					
ANR	122527	IdentifierDeclStatement	"int i , c ;"	762:4:22669:22677	122512	1	True				
ANR	122528	IdentifierDecl	i		122512	0					
ANR	122529	IdentifierDeclType	int		122512	0					
ANR	122530	Identifier	i		122512	1					
ANR	122531	IdentifierDecl	c		122512	1					
ANR	122532	IdentifierDeclType	int		122512	0					
ANR	122533	Identifier	c		122512	1					
ANR	122534	IdentifierDeclStatement	int pid_flags = 0 ;	763:4:22683:22703	122512	2	True				
ANR	122535	IdentifierDecl	pid_flags = 0		122512	0					
ANR	122536	IdentifierDeclType	int		122512	0					
ANR	122537	Identifier	pid_flags		122512	1					
ANR	122538	AssignmentExpression	pid_flags = 0		122512	2		=			
ANR	122539	Identifier	pid_flags		122512	0					
ANR	122540	PrimaryExpression	0		122512	1					
ANR	122541	IdentifierDeclStatement	int mptcp = 0 ;	764:4:22709:22729	122512	3	True				
ANR	122542	IdentifierDecl	mptcp = 0		122512	0					
ANR	122543	IdentifierDeclType	int		122512	0					
ANR	122544	Identifier	mptcp		122512	1					
ANR	122545	AssignmentExpression	mptcp = 0		122512	2		=			
ANR	122546	Identifier	mptcp		122512	0					
ANR	122547	PrimaryExpression	0		122512	1					
ANR	122548	IdentifierDeclStatement	int mtu = 0 ;	765:4:22735:22755	122512	4	True				
ANR	122549	IdentifierDecl	mtu = 0		122512	0					
ANR	122550	IdentifierDeclType	int		122512	0					
ANR	122551	Identifier	mtu		122512	1					
ANR	122552	AssignmentExpression	mtu = 0		122512	2		=			
ANR	122553	Identifier	mtu		122512	0					
ANR	122554	PrimaryExpression	0		122512	1					
ANR	122555	IdentifierDeclStatement	char * user = NULL ;	766:4:22761:22784	122512	5	True				
ANR	122556	IdentifierDecl	* user = NULL		122512	0					
ANR	122557	IdentifierDeclType	char *		122512	0					
ANR	122558	Identifier	user		122512	1					
ANR	122559	AssignmentExpression	* user = NULL		122512	2		=			
ANR	122560	Identifier	NULL		122512	0					
ANR	122561	Identifier	NULL		122512	1					
ANR	122562	IdentifierDeclStatement	char * local_port = NULL ;	767:4:22790:22813	122512	6	True				
ANR	122563	IdentifierDecl	* local_port = NULL		122512	0					
ANR	122564	IdentifierDeclType	char *		122512	0					
ANR	122565	Identifier	local_port		122512	1					
ANR	122566	AssignmentExpression	* local_port = NULL		122512	2		=			
ANR	122567	Identifier	NULL		122512	0					
ANR	122568	Identifier	NULL		122512	1					
ANR	122569	IdentifierDeclStatement	char * local_addr = NULL ;	768:4:22819:22842	122512	7	True				
ANR	122570	IdentifierDecl	* local_addr = NULL		122512	0					
ANR	122571	IdentifierDeclType	char *		122512	0					
ANR	122572	Identifier	local_addr		122512	1					
ANR	122573	AssignmentExpression	* local_addr = NULL		122512	2		=			
ANR	122574	Identifier	NULL		122512	0					
ANR	122575	Identifier	NULL		122512	1					
ANR	122576	IdentifierDeclStatement	char * password = NULL ;	769:4:22848:22871	122512	8	True				
ANR	122577	IdentifierDecl	* password = NULL		122512	0					
ANR	122578	IdentifierDeclType	char *		122512	0					
ANR	122579	Identifier	password		122512	1					
ANR	122580	AssignmentExpression	* password = NULL		122512	2		=			
ANR	122581	Identifier	NULL		122512	0					
ANR	122582	Identifier	NULL		122512	1					
ANR	122583	IdentifierDeclStatement	char * key = NULL ;	770:4:22877:22900	122512	9	True				
ANR	122584	IdentifierDecl	* key = NULL		122512	0					
ANR	122585	IdentifierDeclType	char *		122512	0					
ANR	122586	Identifier	key		122512	1					
ANR	122587	AssignmentExpression	* key = NULL		122512	2		=			
ANR	122588	Identifier	NULL		122512	0					
ANR	122589	Identifier	NULL		122512	1					
ANR	122590	IdentifierDeclStatement	char * timeout = NULL ;	771:4:22906:22929	122512	10	True				
ANR	122591	IdentifierDecl	* timeout = NULL		122512	0					
ANR	122592	IdentifierDeclType	char *		122512	0					
ANR	122593	Identifier	timeout		122512	1					
ANR	122594	AssignmentExpression	* timeout = NULL		122512	2		=			
ANR	122595	Identifier	NULL		122512	0					
ANR	122596	Identifier	NULL		122512	1					
ANR	122597	IdentifierDeclStatement	char * method = NULL ;	772:4:22935:22958	122512	11	True				
ANR	122598	IdentifierDecl	* method = NULL		122512	0					
ANR	122599	IdentifierDeclType	char *		122512	0					
ANR	122600	Identifier	method		122512	1					
ANR	122601	AssignmentExpression	* method = NULL		122512	2		=			
ANR	122602	Identifier	NULL		122512	0					
ANR	122603	Identifier	NULL		122512	1					
ANR	122604	IdentifierDeclStatement	char * pid_path = NULL ;	773:4:22964:22987	122512	12	True				
ANR	122605	IdentifierDecl	* pid_path = NULL		122512	0					
ANR	122606	IdentifierDeclType	char *		122512	0					
ANR	122607	Identifier	pid_path		122512	1					
ANR	122608	AssignmentExpression	* pid_path = NULL		122512	2		=			
ANR	122609	Identifier	NULL		122512	0					
ANR	122610	Identifier	NULL		122512	1					
ANR	122611	IdentifierDeclStatement	char * conf_path = NULL ;	774:4:22993:23016	122512	13	True				
ANR	122612	IdentifierDecl	* conf_path = NULL		122512	0					
ANR	122613	IdentifierDeclType	char *		122512	0					
ANR	122614	Identifier	conf_path		122512	1					
ANR	122615	AssignmentExpression	* conf_path = NULL		122512	2		=			
ANR	122616	Identifier	NULL		122512	0					
ANR	122617	Identifier	NULL		122512	1					
ANR	122618	IdentifierDeclStatement	char * iface = NULL ;	775:4:23022:23045	122512	14	True				
ANR	122619	IdentifierDecl	* iface = NULL		122512	0					
ANR	122620	IdentifierDeclType	char *		122512	0					
ANR	122621	Identifier	iface		122512	1					
ANR	122622	AssignmentExpression	* iface = NULL		122512	2		=			
ANR	122623	Identifier	NULL		122512	0					
ANR	122624	Identifier	NULL		122512	1					
ANR	122625	IdentifierDeclStatement	char * plugin = NULL ;	777:4:23052:23076	122512	15	True				
ANR	122626	IdentifierDecl	* plugin = NULL		122512	0					
ANR	122627	IdentifierDeclType	char *		122512	0					
ANR	122628	Identifier	plugin		122512	1					
ANR	122629	AssignmentExpression	* plugin = NULL		122512	2		=			
ANR	122630	Identifier	NULL		122512	0					
ANR	122631	Identifier	NULL		122512	1					
ANR	122632	IdentifierDeclStatement	char * plugin_opts = NULL ;	778:4:23082:23106	122512	16	True				
ANR	122633	IdentifierDecl	* plugin_opts = NULL		122512	0					
ANR	122634	IdentifierDeclType	char *		122512	0					
ANR	122635	Identifier	plugin_opts		122512	1					
ANR	122636	AssignmentExpression	* plugin_opts = NULL		122512	2		=			
ANR	122637	Identifier	NULL		122512	0					
ANR	122638	Identifier	NULL		122512	1					
ANR	122639	IdentifierDeclStatement	char * plugin_host = NULL ;	779:4:23112:23136	122512	17	True				
ANR	122640	IdentifierDecl	* plugin_host = NULL		122512	0					
ANR	122641	IdentifierDeclType	char *		122512	0					
ANR	122642	Identifier	plugin_host		122512	1					
ANR	122643	AssignmentExpression	* plugin_host = NULL		122512	2		=			
ANR	122644	Identifier	NULL		122512	0					
ANR	122645	Identifier	NULL		122512	1					
ANR	122646	IdentifierDeclStatement	char * plugin_port = NULL ;	780:4:23142:23166	122512	18	True				
ANR	122647	IdentifierDecl	* plugin_port = NULL		122512	0					
ANR	122648	IdentifierDeclType	char *		122512	0					
ANR	122649	Identifier	plugin_port		122512	1					
ANR	122650	AssignmentExpression	* plugin_port = NULL		122512	2		=			
ANR	122651	Identifier	NULL		122512	0					
ANR	122652	Identifier	NULL		122512	1					
ANR	122653	IdentifierDeclStatement	char tmp_port [ 8 ] ;	781:4:23172:23188	122512	19	True				
ANR	122654	IdentifierDecl	tmp_port [ 8 ]		122512	0					
ANR	122655	IdentifierDeclType	char [ 8 ]		122512	0					
ANR	122656	Identifier	tmp_port		122512	1					
ANR	122657	PrimaryExpression	8		122512	2					
ANR	122658	IdentifierDeclStatement	int remote_num = 0 ;	783:4:23195:23213	122512	20	True				
ANR	122659	IdentifierDecl	remote_num = 0		122512	0					
ANR	122660	IdentifierDeclType	int		122512	0					
ANR	122661	Identifier	remote_num		122512	1					
ANR	122662	AssignmentExpression	remote_num = 0		122512	2		=			
ANR	122663	Identifier	remote_num		122512	0					
ANR	122664	PrimaryExpression	0		122512	1					
ANR	122665	IdentifierDeclStatement	ss_addr_t remote_addr [ MAX_REMOTE_NUM ] ;	784:4:23219:23256	122512	21	True				
ANR	122666	IdentifierDecl	remote_addr [ MAX_REMOTE_NUM ]		122512	0					
ANR	122667	IdentifierDeclType	ss_addr_t [ MAX_REMOTE_NUM ]		122512	0					
ANR	122668	Identifier	remote_addr		122512	1					
ANR	122669	Identifier	MAX_REMOTE_NUM		122512	2					
ANR	122670	IdentifierDeclStatement	char * remote_port = NULL ;	785:4:23262:23286	122512	22	True				
ANR	122671	IdentifierDecl	* remote_port = NULL		122512	0					
ANR	122672	IdentifierDeclType	char *		122512	0					
ANR	122673	Identifier	remote_port		122512	1					
ANR	122674	AssignmentExpression	* remote_port = NULL		122512	2		=			
ANR	122675	Identifier	NULL		122512	0					
ANR	122676	Identifier	NULL		122512	1					
ANR	122677	Statement	ss_addr_t	787:4:23293:23301	122512	23	True				
ANR	122678	Statement	tunnel_addr	787:14:23303:23313	122512	24	True				
ANR	122679	Statement	=	787:26:23315:23315	122512	25	True				
ANR	122680	CompoundStatement		29:28:677:677	122512	26					
ANR	122681	Statement	.	787:30:23319:23319	122512	0	True				
ANR	122682	Statement	host	787:31:23320:23323	122512	1	True				
ANR	122683	Statement	=	787:36:23325:23325	122512	2	True				
ANR	122684	Statement	NULL	787:38:23327:23330	122512	3	True				
ANR	122685	Statement	","	787:42:23331:23331	122512	4	True				
ANR	122686	Statement	.	787:44:23333:23333	122512	5	True				
ANR	122687	Statement	port	787:45:23334:23337	122512	6	True				
ANR	122688	Statement	=	787:50:23339:23339	122512	7	True				
ANR	122689	Statement	NULL	787:52:23341:23344	122512	8	True				
ANR	122690	ExpressionStatement		787:58:23347:23347	122512	27	True				
ANR	122691	IdentifierDeclStatement	char * tunnel_addr_str = NULL ;	788:4:23353:23381	122512	28	True				
ANR	122692	IdentifierDecl	* tunnel_addr_str = NULL		122512	0					
ANR	122693	IdentifierDeclType	char *		122512	0					
ANR	122694	Identifier	tunnel_addr_str		122512	1					
ANR	122695	AssignmentExpression	* tunnel_addr_str = NULL		122512	2		=			
ANR	122696	Identifier	NULL		122512	0					
ANR	122697	Identifier	NULL		122512	1					
ANR	122698	Statement	static	790:4:23388:23393	122512	29	True				
ANR	122699	IdentifierDeclStatement	"struct option long_options [ ] = { { ""mtu"" , required_argument , NULL , GETOPT_VAL_MTU } , { ""no-delay"" , no_argument , NULL , GETOPT_VAL_NODELAY } , { ""mptcp"" , no_argument , NULL , GETOPT_VAL_MPTCP } , { ""plugin"" , required_argument , NULL , GETOPT_VAL_PLUGIN } , { ""plugin-opts"" , required_argument , NULL , GETOPT_VAL_PLUGIN_OPTS } , { ""reuse-port"" , no_argument , NULL , GETOPT_VAL_REUSE_PORT } , { ""password"" , required_argument , NULL , GETOPT_VAL_PASSWORD } , { ""key"" , required_argument , NULL , GETOPT_VAL_KEY } , { ""help"" , no_argument , NULL , GETOPT_VAL_HELP } , { NULL , 0 , NULL , 0 } } ;"	790:11:23395:24129	122512	30	True				
ANR	122700	IdentifierDecl	"long_options [ ] = { { ""mtu"" , required_argument , NULL , GETOPT_VAL_MTU } , { ""no-delay"" , no_argument , NULL , GETOPT_VAL_NODELAY } , { ""mptcp"" , no_argument , NULL , GETOPT_VAL_MPTCP } , { ""plugin"" , required_argument , NULL , GETOPT_VAL_PLUGIN } , { ""plugin-opts"" , required_argument , NULL , GETOPT_VAL_PLUGIN_OPTS } , { ""reuse-port"" , no_argument , NULL , GETOPT_VAL_REUSE_PORT } , { ""password"" , required_argument , NULL , GETOPT_VAL_PASSWORD } , { ""key"" , required_argument , NULL , GETOPT_VAL_KEY } , { ""help"" , no_argument , NULL , GETOPT_VAL_HELP } , { NULL , 0 , NULL , 0 } }"		122512	0					
ANR	122701	IdentifierDeclType	struct option [ ]		122512	0					
ANR	122702	Identifier	long_options		122512	1					
ANR	122703	AssignmentExpression	"long_options [ ] = { { ""mtu"" , required_argument , NULL , GETOPT_VAL_MTU } , { ""no-delay"" , no_argument , NULL , GETOPT_VAL_NODELAY } , { ""mptcp"" , no_argument , NULL , GETOPT_VAL_MPTCP } , { ""plugin"" , required_argument , NULL , GETOPT_VAL_PLUGIN } , { ""plugin-opts"" , required_argument , NULL , GETOPT_VAL_PLUGIN_OPTS } , { ""reuse-port"" , no_argument , NULL , GETOPT_VAL_REUSE_PORT } , { ""password"" , required_argument , NULL , GETOPT_VAL_PASSWORD } , { ""key"" , required_argument , NULL , GETOPT_VAL_KEY } , { ""help"" , no_argument , NULL , GETOPT_VAL_HELP } , { NULL , 0 , NULL , 0 } }"		122512	2		=			
ANR	122704	Identifier	long_options		122512	0					
ANR	122705	InitializerList	"""mtu"""		122512	1					
ANR	122706	InitializerList	"""mtu"""		122512	0					
ANR	122707	PrimaryExpression	"""mtu"""		122512	0					
ANR	122708	Identifier	required_argument		122512	1					
ANR	122709	Identifier	NULL		122512	2					
ANR	122710	Identifier	GETOPT_VAL_MTU		122512	3					
ANR	122711	InitializerList	"""no-delay"""		122512	1					
ANR	122712	PrimaryExpression	"""no-delay"""		122512	0					
ANR	122713	Identifier	no_argument		122512	1					
ANR	122714	Identifier	NULL		122512	2					
ANR	122715	Identifier	GETOPT_VAL_NODELAY		122512	3					
ANR	122716	InitializerList	"""mptcp"""		122512	2					
ANR	122717	PrimaryExpression	"""mptcp"""		122512	0					
ANR	122718	Identifier	no_argument		122512	1					
ANR	122719	Identifier	NULL		122512	2					
ANR	122720	Identifier	GETOPT_VAL_MPTCP		122512	3					
ANR	122721	InitializerList	"""plugin"""		122512	3					
ANR	122722	PrimaryExpression	"""plugin"""		122512	0					
ANR	122723	Identifier	required_argument		122512	1					
ANR	122724	Identifier	NULL		122512	2					
ANR	122725	Identifier	GETOPT_VAL_PLUGIN		122512	3					
ANR	122726	InitializerList	"""plugin-opts"""		122512	4					
ANR	122727	PrimaryExpression	"""plugin-opts"""		122512	0					
ANR	122728	Identifier	required_argument		122512	1					
ANR	122729	Identifier	NULL		122512	2					
ANR	122730	Identifier	GETOPT_VAL_PLUGIN_OPTS		122512	3					
ANR	122731	InitializerList	"""reuse-port"""		122512	5					
ANR	122732	PrimaryExpression	"""reuse-port"""		122512	0					
ANR	122733	Identifier	no_argument		122512	1					
ANR	122734	Identifier	NULL		122512	2					
ANR	122735	Identifier	GETOPT_VAL_REUSE_PORT		122512	3					
ANR	122736	InitializerList	"""password"""		122512	6					
ANR	122737	PrimaryExpression	"""password"""		122512	0					
ANR	122738	Identifier	required_argument		122512	1					
ANR	122739	Identifier	NULL		122512	2					
ANR	122740	Identifier	GETOPT_VAL_PASSWORD		122512	3					
ANR	122741	InitializerList	"""key"""		122512	7					
ANR	122742	PrimaryExpression	"""key"""		122512	0					
ANR	122743	Identifier	required_argument		122512	1					
ANR	122744	Identifier	NULL		122512	2					
ANR	122745	Identifier	GETOPT_VAL_KEY		122512	3					
ANR	122746	InitializerList	"""help"""		122512	8					
ANR	122747	PrimaryExpression	"""help"""		122512	0					
ANR	122748	Identifier	no_argument		122512	1					
ANR	122749	Identifier	NULL		122512	2					
ANR	122750	Identifier	GETOPT_VAL_HELP		122512	3					
ANR	122751	InitializerList	NULL		122512	9					
ANR	122752	Identifier	NULL		122512	0					
ANR	122753	PrimaryExpression	0		122512	1					
ANR	122754	Identifier	NULL		122512	2					
ANR	122755	PrimaryExpression	0		122512	3					
ANR	122756	ExpressionStatement	opterr = 0	803:4:24136:24146	122512	31	True				
ANR	122757	AssignmentExpression	opterr = 0		122512	0		=			
ANR	122758	Identifier	opterr		122512	0					
ANR	122759	PrimaryExpression	0		122512	1					
ANR	122760	ExpressionStatement	USE_TTY ( )	805:4:24153:24162	122512	32	True				
ANR	122761	CallExpression	USE_TTY ( )		122512	0					
ANR	122762	Callee	USE_TTY		122512	0					
ANR	122763	Identifier	USE_TTY		122512	0					
ANR	122764	ArgumentList			122512	1					
ANR	122765	WhileStatement	"while ( ( c = getopt_long ( argc , argv , ""f:s:p:l:k:t:m:i:c:b:L:a:n:huUvV6A"" , long_options , NULL ) ) != - 1 )"		122512	33					
ANR	122766	Condition	"( c = getopt_long ( argc , argv , ""f:s:p:l:k:t:m:i:c:b:L:a:n:huUvV6A"" , long_options , NULL ) ) != - 1"	808:11:24195:24314	122512	0	True				
ANR	122767	EqualityExpression	"( c = getopt_long ( argc , argv , ""f:s:p:l:k:t:m:i:c:b:L:a:n:huUvV6A"" , long_options , NULL ) ) != - 1"		122512	0		!=			
ANR	122768	AssignmentExpression	"c = getopt_long ( argc , argv , ""f:s:p:l:k:t:m:i:c:b:L:a:n:huUvV6A"" , long_options , NULL )"		122512	0		=			
ANR	122769	Identifier	c		122512	0					
ANR	122770	CallExpression	"getopt_long ( argc , argv , ""f:s:p:l:k:t:m:i:c:b:L:a:n:huUvV6A"" , long_options , NULL )"		122512	1					
ANR	122771	Callee	getopt_long		122512	0					
ANR	122772	Identifier	getopt_long		122512	0					
ANR	122773	ArgumentList	argc		122512	1					
ANR	122774	Argument	argc		122512	0					
ANR	122775	Identifier	argc		122512	0					
ANR	122776	Argument	argv		122512	1					
ANR	122777	Identifier	argv		122512	0					
ANR	122778	Argument	"""f:s:p:l:k:t:m:i:c:b:L:a:n:huUvV6A"""		122512	2					
ANR	122779	PrimaryExpression	"""f:s:p:l:k:t:m:i:c:b:L:a:n:huUvV6A"""		122512	0					
ANR	122780	Argument	long_options		122512	3					
ANR	122781	Identifier	long_options		122512	0					
ANR	122782	Argument	NULL		122512	4					
ANR	122783	Identifier	NULL		122512	0					
ANR	122784	UnaryOperationExpression	- 1		122512	1					
ANR	122785	UnaryOperator	-		122512	0					
ANR	122786	PrimaryExpression	1		122512	1					
ANR	122787	CompoundStatement		51:56:1677:1677	122512	1					
ANR	122788	SwitchStatement	switch ( c )		122512	0					
ANR	122789	Condition	c	814:16:24482:24482	122512	0	True				
ANR	122790	Identifier	c		122512	0					
ANR	122791	CompoundStatement		56:19:1845:1845	122512	1					
ANR	122792	Label	case GETOPT_VAL_MTU :	815:8:24495:24514	122512	0	True				
ANR	122793	Identifier	GETOPT_VAL_MTU		122512	0					
ANR	122794	ExpressionStatement	mtu = atoi ( optarg )	816:12:24528:24546	122512	1	True				
ANR	122795	AssignmentExpression	mtu = atoi ( optarg )		122512	0		=			
ANR	122796	Identifier	mtu		122512	0					
ANR	122797	CallExpression	atoi ( optarg )		122512	1					
ANR	122798	Callee	atoi		122512	0					
ANR	122799	Identifier	atoi		122512	0					
ANR	122800	ArgumentList	optarg		122512	1					
ANR	122801	Argument	optarg		122512	0					
ANR	122802	Identifier	optarg		122512	0					
ANR	122803	ExpressionStatement	"LOGI ( ""set MTU to %d"" , mtu )"	817:12:24560:24586	122512	2	True				
ANR	122804	CallExpression	"LOGI ( ""set MTU to %d"" , mtu )"		122512	0					
ANR	122805	Callee	LOGI		122512	0					
ANR	122806	Identifier	LOGI		122512	0					
ANR	122807	ArgumentList	"""set MTU to %d"""		122512	1					
ANR	122808	Argument	"""set MTU to %d"""		122512	0					
ANR	122809	PrimaryExpression	"""set MTU to %d"""		122512	0					
ANR	122810	Argument	mtu		122512	1					
ANR	122811	Identifier	mtu		122512	0					
ANR	122812	BreakStatement	break ;	818:12:24600:24605	122512	3	True				
ANR	122813	Label	case GETOPT_VAL_MPTCP :	819:8:24615:24636	122512	4	True				
ANR	122814	Identifier	GETOPT_VAL_MPTCP		122512	0					
ANR	122815	ExpressionStatement	mptcp = 1	820:12:24650:24659	122512	5	True				
ANR	122816	AssignmentExpression	mptcp = 1		122512	0		=			
ANR	122817	Identifier	mptcp		122512	0					
ANR	122818	PrimaryExpression	1		122512	1					
ANR	122819	ExpressionStatement	"LOGI ( ""enable multipath TCP"" )"	821:12:24673:24701	122512	6	True				
ANR	122820	CallExpression	"LOGI ( ""enable multipath TCP"" )"		122512	0					
ANR	122821	Callee	LOGI		122512	0					
ANR	122822	Identifier	LOGI		122512	0					
ANR	122823	ArgumentList	"""enable multipath TCP"""		122512	1					
ANR	122824	Argument	"""enable multipath TCP"""		122512	0					
ANR	122825	PrimaryExpression	"""enable multipath TCP"""		122512	0					
ANR	122826	BreakStatement	break ;	822:12:24715:24720	122512	7	True				
ANR	122827	Label	case GETOPT_VAL_NODELAY :	823:8:24730:24753	122512	8	True				
ANR	122828	Identifier	GETOPT_VAL_NODELAY		122512	0					
ANR	122829	ExpressionStatement	no_delay = 1	824:12:24767:24779	122512	9	True				
ANR	122830	AssignmentExpression	no_delay = 1		122512	0		=			
ANR	122831	Identifier	no_delay		122512	0					
ANR	122832	PrimaryExpression	1		122512	1					
ANR	122833	ExpressionStatement	"LOGI ( ""enable TCP no-delay"" )"	825:12:24793:24820	122512	10	True				
ANR	122834	CallExpression	"LOGI ( ""enable TCP no-delay"" )"		122512	0					
ANR	122835	Callee	LOGI		122512	0					
ANR	122836	Identifier	LOGI		122512	0					
ANR	122837	ArgumentList	"""enable TCP no-delay"""		122512	1					
ANR	122838	Argument	"""enable TCP no-delay"""		122512	0					
ANR	122839	PrimaryExpression	"""enable TCP no-delay"""		122512	0					
ANR	122840	BreakStatement	break ;	826:12:24834:24839	122512	11	True				
ANR	122841	Label	case GETOPT_VAL_PLUGIN :	827:8:24849:24871	122512	12	True				
ANR	122842	Identifier	GETOPT_VAL_PLUGIN		122512	0					
ANR	122843	ExpressionStatement	plugin = optarg	828:12:24885:24900	122512	13	True				
ANR	122844	AssignmentExpression	plugin = optarg		122512	0		=			
ANR	122845	Identifier	plugin		122512	0					
ANR	122846	Identifier	optarg		122512	1					
ANR	122847	BreakStatement	break ;	829:12:24914:24919	122512	14	True				
ANR	122848	Label	case GETOPT_VAL_PLUGIN_OPTS :	830:8:24929:24956	122512	15	True				
ANR	122849	Identifier	GETOPT_VAL_PLUGIN_OPTS		122512	0					
ANR	122850	ExpressionStatement	plugin_opts = optarg	831:12:24970:24990	122512	16	True				
ANR	122851	AssignmentExpression	plugin_opts = optarg		122512	0		=			
ANR	122852	Identifier	plugin_opts		122512	0					
ANR	122853	Identifier	optarg		122512	1					
ANR	122854	BreakStatement	break ;	832:12:25004:25009	122512	17	True				
ANR	122855	Label	case GETOPT_VAL_KEY :	833:8:25019:25038	122512	18	True				
ANR	122856	Identifier	GETOPT_VAL_KEY		122512	0					
ANR	122857	ExpressionStatement	key = optarg	834:12:25052:25064	122512	19	True				
ANR	122858	AssignmentExpression	key = optarg		122512	0		=			
ANR	122859	Identifier	key		122512	0					
ANR	122860	Identifier	optarg		122512	1					
ANR	122861	BreakStatement	break ;	835:12:25078:25083	122512	20	True				
ANR	122862	Label	case GETOPT_VAL_REUSE_PORT :	836:8:25093:25119	122512	21	True				
ANR	122863	Identifier	GETOPT_VAL_REUSE_PORT		122512	0					
ANR	122864	ExpressionStatement	reuse_port = 1	837:12:25133:25147	122512	22	True				
ANR	122865	AssignmentExpression	reuse_port = 1		122512	0		=			
ANR	122866	Identifier	reuse_port		122512	0					
ANR	122867	PrimaryExpression	1		122512	1					
ANR	122868	BreakStatement	break ;	838:12:25161:25166	122512	23	True				
ANR	122869	Label	case 's' :	839:8:25176:25184	122512	24	True				
ANR	122870	IfStatement	if ( remote_num < MAX_REMOTE_NUM )		122512	25					
ANR	122871	Condition	remote_num < MAX_REMOTE_NUM	840:16:25202:25228	122512	0	True				
ANR	122872	RelationalExpression	remote_num < MAX_REMOTE_NUM		122512	0		<			
ANR	122873	Identifier	remote_num		122512	0					
ANR	122874	Identifier	MAX_REMOTE_NUM		122512	1					
ANR	122875	CompoundStatement		82:45:2591:2591	122512	1					
ANR	122876	ExpressionStatement	remote_addr [ remote_num ] . host = optarg	841:16:25249:25288	122512	0	True				
ANR	122877	AssignmentExpression	remote_addr [ remote_num ] . host = optarg		122512	0		=			
ANR	122878	MemberAccess	remote_addr [ remote_num ] . host		122512	0					
ANR	122879	ArrayIndexing	remote_addr [ remote_num ]		122512	0					
ANR	122880	Identifier	remote_addr		122512	0					
ANR	122881	Identifier	remote_num		122512	1					
ANR	122882	Identifier	host		122512	1					
ANR	122883	Identifier	optarg		122512	1					
ANR	122884	ExpressionStatement	remote_addr [ remote_num ++ ] . port = NULL	842:16:25306:25343	122512	1	True				
ANR	122885	AssignmentExpression	remote_addr [ remote_num ++ ] . port = NULL		122512	0		=			
ANR	122886	MemberAccess	remote_addr [ remote_num ++ ] . port		122512	0					
ANR	122887	ArrayIndexing	remote_addr [ remote_num ++ ]		122512	0					
ANR	122888	Identifier	remote_addr		122512	0					
ANR	122889	PostIncDecOperationExpression	remote_num ++		122512	1					
ANR	122890	Identifier	remote_num		122512	0					
ANR	122891	IncDec	++		122512	1					
ANR	122892	Identifier	port		122512	1					
ANR	122893	Identifier	NULL		122512	1					
ANR	122894	BreakStatement	break ;	844:12:25371:25376	122512	26	True				
ANR	122895	Label	case 'p' :	845:8:25386:25394	122512	27	True				
ANR	122896	ExpressionStatement	remote_port = optarg	846:12:25408:25428	122512	28	True				
ANR	122897	AssignmentExpression	remote_port = optarg		122512	0		=			
ANR	122898	Identifier	remote_port		122512	0					
ANR	122899	Identifier	optarg		122512	1					
ANR	122900	BreakStatement	break ;	847:12:25442:25447	122512	29	True				
ANR	122901	Label	case 'l' :	848:8:25457:25465	122512	30	True				
ANR	122902	ExpressionStatement	local_port = optarg	849:12:25479:25498	122512	31	True				
ANR	122903	AssignmentExpression	local_port = optarg		122512	0		=			
ANR	122904	Identifier	local_port		122512	0					
ANR	122905	Identifier	optarg		122512	1					
ANR	122906	BreakStatement	break ;	850:12:25512:25517	122512	32	True				
ANR	122907	Label	case GETOPT_VAL_PASSWORD :	851:8:25527:25551	122512	33	True				
ANR	122908	Identifier	GETOPT_VAL_PASSWORD		122512	0					
ANR	122909	Label	case 'k' :	852:8:25561:25569	122512	34	True				
ANR	122910	ExpressionStatement	password = optarg	853:12:25583:25600	122512	35	True				
ANR	122911	AssignmentExpression	password = optarg		122512	0		=			
ANR	122912	Identifier	password		122512	0					
ANR	122913	Identifier	optarg		122512	1					
ANR	122914	BreakStatement	break ;	854:12:25614:25619	122512	36	True				
ANR	122915	Label	case 'f' :	855:8:25629:25637	122512	37	True				
ANR	122916	ExpressionStatement	pid_flags = 1	856:12:25651:25664	122512	38	True				
ANR	122917	AssignmentExpression	pid_flags = 1		122512	0		=			
ANR	122918	Identifier	pid_flags		122512	0					
ANR	122919	PrimaryExpression	1		122512	1					
ANR	122920	ExpressionStatement	pid_path = optarg	857:12:25678:25696	122512	39	True				
ANR	122921	AssignmentExpression	pid_path = optarg		122512	0		=			
ANR	122922	Identifier	pid_path		122512	0					
ANR	122923	Identifier	optarg		122512	1					
ANR	122924	BreakStatement	break ;	858:12:25710:25715	122512	40	True				
ANR	122925	Label	case 't' :	859:8:25725:25733	122512	41	True				
ANR	122926	ExpressionStatement	timeout = optarg	860:12:25747:25763	122512	42	True				
ANR	122927	AssignmentExpression	timeout = optarg		122512	0		=			
ANR	122928	Identifier	timeout		122512	0					
ANR	122929	Identifier	optarg		122512	1					
ANR	122930	BreakStatement	break ;	861:12:25777:25782	122512	43	True				
ANR	122931	Label	case 'm' :	862:8:25792:25800	122512	44	True				
ANR	122932	ExpressionStatement	method = optarg	863:12:25814:25829	122512	45	True				
ANR	122933	AssignmentExpression	method = optarg		122512	0		=			
ANR	122934	Identifier	method		122512	0					
ANR	122935	Identifier	optarg		122512	1					
ANR	122936	BreakStatement	break ;	864:12:25843:25848	122512	46	True				
ANR	122937	Label	case 'c' :	865:8:25858:25866	122512	47	True				
ANR	122938	ExpressionStatement	conf_path = optarg	866:12:25880:25898	122512	48	True				
ANR	122939	AssignmentExpression	conf_path = optarg		122512	0		=			
ANR	122940	Identifier	conf_path		122512	0					
ANR	122941	Identifier	optarg		122512	1					
ANR	122942	BreakStatement	break ;	867:12:25912:25917	122512	49	True				
ANR	122943	Label	case 'i' :	868:8:25927:25935	122512	50	True				
ANR	122944	ExpressionStatement	iface = optarg	869:12:25949:25963	122512	51	True				
ANR	122945	AssignmentExpression	iface = optarg		122512	0		=			
ANR	122946	Identifier	iface		122512	0					
ANR	122947	Identifier	optarg		122512	1					
ANR	122948	BreakStatement	break ;	870:12:25977:25982	122512	52	True				
ANR	122949	Label	case 'b' :	871:8:25992:26000	122512	53	True				
ANR	122950	ExpressionStatement	local_addr = optarg	872:12:26014:26033	122512	54	True				
ANR	122951	AssignmentExpression	local_addr = optarg		122512	0		=			
ANR	122952	Identifier	local_addr		122512	0					
ANR	122953	Identifier	optarg		122512	1					
ANR	122954	BreakStatement	break ;	873:12:26047:26052	122512	55	True				
ANR	122955	Label	case 'u' :	874:8:26062:26070	122512	56	True				
ANR	122956	ExpressionStatement	mode = TCP_AND_UDP	875:12:26084:26102	122512	57	True				
ANR	122957	AssignmentExpression	mode = TCP_AND_UDP		122512	0		=			
ANR	122958	Identifier	mode		122512	0					
ANR	122959	Identifier	TCP_AND_UDP		122512	1					
ANR	122960	BreakStatement	break ;	876:12:26116:26121	122512	58	True				
ANR	122961	Label	case 'U' :	877:8:26131:26139	122512	59	True				
ANR	122962	ExpressionStatement	mode = UDP_ONLY	878:12:26153:26168	122512	60	True				
ANR	122963	AssignmentExpression	mode = UDP_ONLY		122512	0		=			
ANR	122964	Identifier	mode		122512	0					
ANR	122965	Identifier	UDP_ONLY		122512	1					
ANR	122966	BreakStatement	break ;	879:12:26182:26187	122512	61	True				
ANR	122967	Label	case 'L' :	880:8:26197:26205	122512	62	True				
ANR	122968	ExpressionStatement	tunnel_addr_str = optarg	881:12:26219:26243	122512	63	True				
ANR	122969	AssignmentExpression	tunnel_addr_str = optarg		122512	0		=			
ANR	122970	Identifier	tunnel_addr_str		122512	0					
ANR	122971	Identifier	optarg		122512	1					
ANR	122972	BreakStatement	break ;	882:12:26257:26262	122512	64	True				
ANR	122973	Label	case 'a' :	883:8:26272:26280	122512	65	True				
ANR	122974	ExpressionStatement	user = optarg	884:12:26294:26307	122512	66	True				
ANR	122975	AssignmentExpression	user = optarg		122512	0		=			
ANR	122976	Identifier	user		122512	0					
ANR	122977	Identifier	optarg		122512	1					
ANR	122978	BreakStatement	break ;	885:12:26321:26326	122512	67	True				
ANR	122979	Label	case 'n' :	887:8:26358:26366	122512	68	True				
ANR	122980	ExpressionStatement	nofile = atoi ( optarg )	888:12:26380:26401	122512	69	True				
ANR	122981	AssignmentExpression	nofile = atoi ( optarg )		122512	0		=			
ANR	122982	Identifier	nofile		122512	0					
ANR	122983	CallExpression	atoi ( optarg )		122512	1					
ANR	122984	Callee	atoi		122512	0					
ANR	122985	Identifier	atoi		122512	0					
ANR	122986	ArgumentList	optarg		122512	1					
ANR	122987	Argument	optarg		122512	0					
ANR	122988	Identifier	optarg		122512	0					
ANR	122989	BreakStatement	break ;	889:12:26415:26420	122512	70	True				
ANR	122990	Label	case 'v' :	891:8:26437:26445	122512	71	True				
ANR	122991	ExpressionStatement	verbose = 1	892:12:26459:26470	122512	72	True				
ANR	122992	AssignmentExpression	verbose = 1		122512	0		=			
ANR	122993	Identifier	verbose		122512	0					
ANR	122994	PrimaryExpression	1		122512	1					
ANR	122995	BreakStatement	break ;	893:12:26484:26489	122512	73	True				
ANR	122996	Label	case GETOPT_VAL_HELP :	894:8:26499:26519	122512	74	True				
ANR	122997	Identifier	GETOPT_VAL_HELP		122512	0					
ANR	122998	Label	case 'h' :	895:8:26529:26537	122512	75	True				
ANR	122999	ExpressionStatement	usage ( )	896:12:26551:26558	122512	76	True				
ANR	123000	CallExpression	usage ( )		122512	0					
ANR	123001	Callee	usage		122512	0					
ANR	123002	Identifier	usage		122512	0					
ANR	123003	ArgumentList			122512	1					
ANR	123004	ExpressionStatement	exit ( EXIT_SUCCESS )	897:12:26572:26590	122512	77	True				
ANR	123005	CallExpression	exit ( EXIT_SUCCESS )		122512	0					
ANR	123006	Callee	exit		122512	0					
ANR	123007	Identifier	exit		122512	0					
ANR	123008	ArgumentList	EXIT_SUCCESS		122512	1					
ANR	123009	Argument	EXIT_SUCCESS		122512	0					
ANR	123010	Identifier	EXIT_SUCCESS		122512	0					
ANR	123011	Label	case '6' :	898:8:26600:26608	122512	78	True				
ANR	123012	ExpressionStatement	ipv6first = 1	899:12:26622:26635	122512	79	True				
ANR	123013	AssignmentExpression	ipv6first = 1		122512	0		=			
ANR	123014	Identifier	ipv6first		122512	0					
ANR	123015	PrimaryExpression	1		122512	1					
ANR	123016	BreakStatement	break ;	900:12:26649:26654	122512	80	True				
ANR	123017	Label	case 'V' :	902:8:26683:26691	122512	81	True				
ANR	123018	ExpressionStatement	vpn = 1	903:12:26705:26712	122512	82	True				
ANR	123019	AssignmentExpression	vpn = 1		122512	0		=			
ANR	123020	Identifier	vpn		122512	0					
ANR	123021	PrimaryExpression	1		122512	1					
ANR	123022	BreakStatement	break ;	904:12:26726:26731	122512	83	True				
ANR	123023	Label	case 'A' :	906:8:26748:26756	122512	84	True				
ANR	123024	ExpressionStatement	"FATAL ( ""One time auth has been deprecated. Try AEAD ciphers instead."" )"	907:12:26770:26839	122512	85	True				
ANR	123025	CallExpression	"FATAL ( ""One time auth has been deprecated. Try AEAD ciphers instead."" )"		122512	0					
ANR	123026	Callee	FATAL		122512	0					
ANR	123027	Identifier	FATAL		122512	0					
ANR	123028	ArgumentList	"""One time auth has been deprecated. Try AEAD ciphers instead."""		122512	1					
ANR	123029	Argument	"""One time auth has been deprecated. Try AEAD ciphers instead."""		122512	0					
ANR	123030	PrimaryExpression	"""One time auth has been deprecated. Try AEAD ciphers instead."""		122512	0					
ANR	123031	BreakStatement	break ;	908:12:26853:26858	122512	86	True				
ANR	123032	Label	case '?' :	909:8:26868:26876	122512	87	True				
ANR	123033	ExpressionStatement	"LOGE ( ""Unrecognized option: %s"" , optarg )"	911:12:26945:26984	122512	88	True				
ANR	123034	CallExpression	"LOGE ( ""Unrecognized option: %s"" , optarg )"		122512	0					
ANR	123035	Callee	LOGE		122512	0					
ANR	123036	Identifier	LOGE		122512	0					
ANR	123037	ArgumentList	"""Unrecognized option: %s"""		122512	1					
ANR	123038	Argument	"""Unrecognized option: %s"""		122512	0					
ANR	123039	PrimaryExpression	"""Unrecognized option: %s"""		122512	0					
ANR	123040	Argument	optarg		122512	1					
ANR	123041	Identifier	optarg		122512	0					
ANR	123042	ExpressionStatement	opterr = 1	912:12:26998:27008	122512	89	True				
ANR	123043	AssignmentExpression	opterr = 1		122512	0		=			
ANR	123044	Identifier	opterr		122512	0					
ANR	123045	PrimaryExpression	1		122512	1					
ANR	123046	BreakStatement	break ;	913:12:27022:27027	122512	90	True				
ANR	123047	IfStatement	if ( opterr )		122512	34					
ANR	123048	Condition	opterr	917:8:27054:27059	122512	0	True				
ANR	123049	Identifier	opterr		122512	0					
ANR	123050	CompoundStatement		159:16:4422:4422	122512	1					
ANR	123051	ExpressionStatement	usage ( )	918:8:27072:27079	122512	0	True				
ANR	123052	CallExpression	usage ( )		122512	0					
ANR	123053	Callee	usage		122512	0					
ANR	123054	Identifier	usage		122512	0					
ANR	123055	ArgumentList			122512	1					
ANR	123056	ExpressionStatement	exit ( EXIT_FAILURE )	919:8:27089:27107	122512	1	True				
ANR	123057	CallExpression	exit ( EXIT_FAILURE )		122512	0					
ANR	123058	Callee	exit		122512	0					
ANR	123059	Identifier	exit		122512	0					
ANR	123060	ArgumentList	EXIT_FAILURE		122512	1					
ANR	123061	Argument	EXIT_FAILURE		122512	0					
ANR	123062	Identifier	EXIT_FAILURE		122512	0					
ANR	123063	IfStatement	if ( argc == 1 )		122512	35					
ANR	123064	Condition	argc == 1	922:8:27124:27132	122512	0	True				
ANR	123065	EqualityExpression	argc == 1		122512	0		==			
ANR	123066	Identifier	argc		122512	0					
ANR	123067	PrimaryExpression	1		122512	1					
ANR	123068	CompoundStatement		164:19:4495:4495	122512	1					
ANR	123069	IfStatement	if ( conf_path == NULL )		122512	0					
ANR	123070	Condition	conf_path == NULL	923:12:27149:27165	122512	0	True				
ANR	123071	EqualityExpression	conf_path == NULL		122512	0		==			
ANR	123072	Identifier	conf_path		122512	0					
ANR	123073	Identifier	NULL		122512	1					
ANR	123074	CompoundStatement		165:31:4528:4528	122512	1					
ANR	123075	ExpressionStatement	conf_path = DEFAULT_CONF_PATH	924:12:27182:27211	122512	0	True				
ANR	123076	AssignmentExpression	conf_path = DEFAULT_CONF_PATH		122512	0		=			
ANR	123077	Identifier	conf_path		122512	0					
ANR	123078	Identifier	DEFAULT_CONF_PATH		122512	1					
ANR	123079	IfStatement	if ( conf_path != NULL )		122512	36					
ANR	123080	Condition	conf_path != NULL	928:8:27238:27254	122512	0	True				
ANR	123081	EqualityExpression	conf_path != NULL		122512	0		!=			
ANR	123082	Identifier	conf_path		122512	0					
ANR	123083	Identifier	NULL		122512	1					
ANR	123084	CompoundStatement		171:8:4627:4664	122512	1					
ANR	123085	IdentifierDeclStatement	jconf_t * conf = read_jconf ( conf_path ) ;	929:8:27267:27304	122512	0	True				
ANR	123086	IdentifierDecl	* conf = read_jconf ( conf_path )		122512	0					
ANR	123087	IdentifierDeclType	jconf_t *		122512	0					
ANR	123088	Identifier	conf		122512	1					
ANR	123089	AssignmentExpression	* conf = read_jconf ( conf_path )		122512	2		=			
ANR	123090	Identifier	conf		122512	0					
ANR	123091	CallExpression	read_jconf ( conf_path )		122512	1					
ANR	123092	Callee	read_jconf		122512	0					
ANR	123093	Identifier	read_jconf		122512	0					
ANR	123094	ArgumentList	conf_path		122512	1					
ANR	123095	Argument	conf_path		122512	0					
ANR	123096	Identifier	conf_path		122512	0					
ANR	123097	IfStatement	if ( remote_num == 0 )		122512	1					
ANR	123098	Condition	remote_num == 0	930:12:27318:27332	122512	0	True				
ANR	123099	EqualityExpression	remote_num == 0		122512	0		==			
ANR	123100	Identifier	remote_num		122512	0					
ANR	123101	PrimaryExpression	0		122512	1					
ANR	123102	CompoundStatement		172:29:4695:4695	122512	1					
ANR	123103	ExpressionStatement	remote_num = conf -> remote_num	931:12:27349:27378	122512	0	True				
ANR	123104	AssignmentExpression	remote_num = conf -> remote_num		122512	0		=			
ANR	123105	Identifier	remote_num		122512	0					
ANR	123106	PtrMemberAccess	conf -> remote_num		122512	1					
ANR	123107	Identifier	conf		122512	0					
ANR	123108	Identifier	remote_num		122512	1					
ANR	123109	ForStatement	for ( i = 0 ; i < remote_num ; i ++ )		122512	1					
ANR	123110	ForInit	i = 0 ;	932:17:27397:27402	122512	0	True				
ANR	123111	AssignmentExpression	i = 0		122512	0		=			
ANR	123112	Identifier	i		122512	0					
ANR	123113	PrimaryExpression	0		122512	1					
ANR	123114	Condition	i < remote_num	932:24:27404:27417	122512	1	True				
ANR	123115	RelationalExpression	i < remote_num		122512	0		<			
ANR	123116	Identifier	i		122512	0					
ANR	123117	Identifier	remote_num		122512	1					
ANR	123118	PostIncDecOperationExpression	i ++	932:40:27420:27422	122512	2	True				
ANR	123119	Identifier	i		122512	0					
ANR	123120	IncDec	++		122512	1					
ANR	123121	ExpressionStatement	remote_addr [ i ] = conf -> remote_addr [ i ]	933:16:27441:27478	122512	3	True				
ANR	123122	AssignmentExpression	remote_addr [ i ] = conf -> remote_addr [ i ]		122512	0		=			
ANR	123123	ArrayIndexing	remote_addr [ i ]		122512	0					
ANR	123124	Identifier	remote_addr		122512	0					
ANR	123125	Identifier	i		122512	1					
ANR	123126	ArrayIndexing	conf -> remote_addr [ i ]		122512	1					
ANR	123127	PtrMemberAccess	conf -> remote_addr		122512	0					
ANR	123128	Identifier	conf		122512	0					
ANR	123129	Identifier	remote_addr		122512	1					
ANR	123130	Identifier	i		122512	1					
ANR	123131	IfStatement	if ( remote_port == NULL )		122512	2					
ANR	123132	Condition	remote_port == NULL	935:12:27502:27520	122512	0	True				
ANR	123133	EqualityExpression	remote_port == NULL		122512	0		==			
ANR	123134	Identifier	remote_port		122512	0					
ANR	123135	Identifier	NULL		122512	1					
ANR	123136	CompoundStatement		177:33:4883:4883	122512	1					
ANR	123137	ExpressionStatement	remote_port = conf -> remote_port	936:12:27537:27568	122512	0	True				
ANR	123138	AssignmentExpression	remote_port = conf -> remote_port		122512	0		=			
ANR	123139	Identifier	remote_port		122512	0					
ANR	123140	PtrMemberAccess	conf -> remote_port		122512	1					
ANR	123141	Identifier	conf		122512	0					
ANR	123142	Identifier	remote_port		122512	1					
ANR	123143	IfStatement	if ( local_addr == NULL )		122512	3					
ANR	123144	Condition	local_addr == NULL	938:12:27592:27609	122512	0	True				
ANR	123145	EqualityExpression	local_addr == NULL		122512	0		==			
ANR	123146	Identifier	local_addr		122512	0					
ANR	123147	Identifier	NULL		122512	1					
ANR	123148	CompoundStatement		180:32:4972:4972	122512	1					
ANR	123149	ExpressionStatement	local_addr = conf -> local_addr	939:12:27626:27655	122512	0	True				
ANR	123150	AssignmentExpression	local_addr = conf -> local_addr		122512	0		=			
ANR	123151	Identifier	local_addr		122512	0					
ANR	123152	PtrMemberAccess	conf -> local_addr		122512	1					
ANR	123153	Identifier	conf		122512	0					
ANR	123154	Identifier	local_addr		122512	1					
ANR	123155	IfStatement	if ( local_port == NULL )		122512	4					
ANR	123156	Condition	local_port == NULL	941:12:27679:27696	122512	0	True				
ANR	123157	EqualityExpression	local_port == NULL		122512	0		==			
ANR	123158	Identifier	local_port		122512	0					
ANR	123159	Identifier	NULL		122512	1					
ANR	123160	CompoundStatement		183:32:5059:5059	122512	1					
ANR	123161	ExpressionStatement	local_port = conf -> local_port	942:12:27713:27742	122512	0	True				
ANR	123162	AssignmentExpression	local_port = conf -> local_port		122512	0		=			
ANR	123163	Identifier	local_port		122512	0					
ANR	123164	PtrMemberAccess	conf -> local_port		122512	1					
ANR	123165	Identifier	conf		122512	0					
ANR	123166	Identifier	local_port		122512	1					
ANR	123167	IfStatement	if ( password == NULL )		122512	5					
ANR	123168	Condition	password == NULL	944:12:27766:27781	122512	0	True				
ANR	123169	EqualityExpression	password == NULL		122512	0		==			
ANR	123170	Identifier	password		122512	0					
ANR	123171	Identifier	NULL		122512	1					
ANR	123172	CompoundStatement		186:30:5144:5144	122512	1					
ANR	123173	ExpressionStatement	password = conf -> password	945:12:27798:27823	122512	0	True				
ANR	123174	AssignmentExpression	password = conf -> password		122512	0		=			
ANR	123175	Identifier	password		122512	0					
ANR	123176	PtrMemberAccess	conf -> password		122512	1					
ANR	123177	Identifier	conf		122512	0					
ANR	123178	Identifier	password		122512	1					
ANR	123179	IfStatement	if ( key == NULL )		122512	6					
ANR	123180	Condition	key == NULL	947:12:27847:27857	122512	0	True				
ANR	123181	EqualityExpression	key == NULL		122512	0		==			
ANR	123182	Identifier	key		122512	0					
ANR	123183	Identifier	NULL		122512	1					
ANR	123184	CompoundStatement		189:25:5220:5220	122512	1					
ANR	123185	ExpressionStatement	key = conf -> key	948:12:27874:27889	122512	0	True				
ANR	123186	AssignmentExpression	key = conf -> key		122512	0		=			
ANR	123187	Identifier	key		122512	0					
ANR	123188	PtrMemberAccess	conf -> key		122512	1					
ANR	123189	Identifier	conf		122512	0					
ANR	123190	Identifier	key		122512	1					
ANR	123191	IfStatement	if ( method == NULL )		122512	7					
ANR	123192	Condition	method == NULL	950:12:27913:27926	122512	0	True				
ANR	123193	EqualityExpression	method == NULL		122512	0		==			
ANR	123194	Identifier	method		122512	0					
ANR	123195	Identifier	NULL		122512	1					
ANR	123196	CompoundStatement		192:28:5289:5289	122512	1					
ANR	123197	ExpressionStatement	method = conf -> method	951:12:27943:27964	122512	0	True				
ANR	123198	AssignmentExpression	method = conf -> method		122512	0		=			
ANR	123199	Identifier	method		122512	0					
ANR	123200	PtrMemberAccess	conf -> method		122512	1					
ANR	123201	Identifier	conf		122512	0					
ANR	123202	Identifier	method		122512	1					
ANR	123203	IfStatement	if ( timeout == NULL )		122512	8					
ANR	123204	Condition	timeout == NULL	953:12:27988:28002	122512	0	True				
ANR	123205	EqualityExpression	timeout == NULL		122512	0		==			
ANR	123206	Identifier	timeout		122512	0					
ANR	123207	Identifier	NULL		122512	1					
ANR	123208	CompoundStatement		195:29:5365:5365	122512	1					
ANR	123209	ExpressionStatement	timeout = conf -> timeout	954:12:28019:28042	122512	0	True				
ANR	123210	AssignmentExpression	timeout = conf -> timeout		122512	0		=			
ANR	123211	Identifier	timeout		122512	0					
ANR	123212	PtrMemberAccess	conf -> timeout		122512	1					
ANR	123213	Identifier	conf		122512	0					
ANR	123214	Identifier	timeout		122512	1					
ANR	123215	IfStatement	if ( user == NULL )		122512	9					
ANR	123216	Condition	user == NULL	956:12:28066:28077	122512	0	True				
ANR	123217	EqualityExpression	user == NULL		122512	0		==			
ANR	123218	Identifier	user		122512	0					
ANR	123219	Identifier	NULL		122512	1					
ANR	123220	CompoundStatement		198:26:5440:5440	122512	1					
ANR	123221	ExpressionStatement	user = conf -> user	957:12:28094:28111	122512	0	True				
ANR	123222	AssignmentExpression	user = conf -> user		122512	0		=			
ANR	123223	Identifier	user		122512	0					
ANR	123224	PtrMemberAccess	conf -> user		122512	1					
ANR	123225	Identifier	conf		122512	0					
ANR	123226	Identifier	user		122512	1					
ANR	123227	IfStatement	if ( plugin == NULL )		122512	10					
ANR	123228	Condition	plugin == NULL	959:12:28135:28148	122512	0	True				
ANR	123229	EqualityExpression	plugin == NULL		122512	0		==			
ANR	123230	Identifier	plugin		122512	0					
ANR	123231	Identifier	NULL		122512	1					
ANR	123232	CompoundStatement		201:28:5511:5511	122512	1					
ANR	123233	ExpressionStatement	plugin = conf -> plugin	960:12:28165:28186	122512	0	True				
ANR	123234	AssignmentExpression	plugin = conf -> plugin		122512	0		=			
ANR	123235	Identifier	plugin		122512	0					
ANR	123236	PtrMemberAccess	conf -> plugin		122512	1					
ANR	123237	Identifier	conf		122512	0					
ANR	123238	Identifier	plugin		122512	1					
ANR	123239	IfStatement	if ( plugin_opts == NULL )		122512	11					
ANR	123240	Condition	plugin_opts == NULL	962:12:28210:28228	122512	0	True				
ANR	123241	EqualityExpression	plugin_opts == NULL		122512	0		==			
ANR	123242	Identifier	plugin_opts		122512	0					
ANR	123243	Identifier	NULL		122512	1					
ANR	123244	CompoundStatement		204:33:5591:5591	122512	1					
ANR	123245	ExpressionStatement	plugin_opts = conf -> plugin_opts	963:12:28245:28276	122512	0	True				
ANR	123246	AssignmentExpression	plugin_opts = conf -> plugin_opts		122512	0		=			
ANR	123247	Identifier	plugin_opts		122512	0					
ANR	123248	PtrMemberAccess	conf -> plugin_opts		122512	1					
ANR	123249	Identifier	conf		122512	0					
ANR	123250	Identifier	plugin_opts		122512	1					
ANR	123251	IfStatement	if ( tunnel_addr_str == NULL )		122512	12					
ANR	123252	Condition	tunnel_addr_str == NULL	965:12:28300:28322	122512	0	True				
ANR	123253	EqualityExpression	tunnel_addr_str == NULL		122512	0		==			
ANR	123254	Identifier	tunnel_addr_str		122512	0					
ANR	123255	Identifier	NULL		122512	1					
ANR	123256	CompoundStatement		207:37:5685:5685	122512	1					
ANR	123257	ExpressionStatement	tunnel_addr_str = conf -> tunnel_address	966:12:28339:28377	122512	0	True				
ANR	123258	AssignmentExpression	tunnel_addr_str = conf -> tunnel_address		122512	0		=			
ANR	123259	Identifier	tunnel_addr_str		122512	0					
ANR	123260	PtrMemberAccess	conf -> tunnel_address		122512	1					
ANR	123261	Identifier	conf		122512	0					
ANR	123262	Identifier	tunnel_address		122512	1					
ANR	123263	IfStatement	if ( mode == TCP_ONLY )		122512	13					
ANR	123264	Condition	mode == TCP_ONLY	968:12:28401:28416	122512	0	True				
ANR	123265	EqualityExpression	mode == TCP_ONLY		122512	0		==			
ANR	123266	Identifier	mode		122512	0					
ANR	123267	Identifier	TCP_ONLY		122512	1					
ANR	123268	CompoundStatement		210:30:5779:5779	122512	1					
ANR	123269	ExpressionStatement	mode = conf -> mode	969:12:28433:28450	122512	0	True				
ANR	123270	AssignmentExpression	mode = conf -> mode		122512	0		=			
ANR	123271	Identifier	mode		122512	0					
ANR	123272	PtrMemberAccess	conf -> mode		122512	1					
ANR	123273	Identifier	conf		122512	0					
ANR	123274	Identifier	mode		122512	1					
ANR	123275	IfStatement	if ( mtu == 0 )		122512	14					
ANR	123276	Condition	mtu == 0	971:12:28474:28481	122512	0	True				
ANR	123277	EqualityExpression	mtu == 0		122512	0		==			
ANR	123278	Identifier	mtu		122512	0					
ANR	123279	PrimaryExpression	0		122512	1					
ANR	123280	CompoundStatement		213:22:5844:5844	122512	1					
ANR	123281	ExpressionStatement	mtu = conf -> mtu	972:12:28498:28513	122512	0	True				
ANR	123282	AssignmentExpression	mtu = conf -> mtu		122512	0		=			
ANR	123283	Identifier	mtu		122512	0					
ANR	123284	PtrMemberAccess	conf -> mtu		122512	1					
ANR	123285	Identifier	conf		122512	0					
ANR	123286	Identifier	mtu		122512	1					
ANR	123287	IfStatement	if ( mptcp == 0 )		122512	15					
ANR	123288	Condition	mptcp == 0	974:12:28537:28546	122512	0	True				
ANR	123289	EqualityExpression	mptcp == 0		122512	0		==			
ANR	123290	Identifier	mptcp		122512	0					
ANR	123291	PrimaryExpression	0		122512	1					
ANR	123292	CompoundStatement		216:24:5909:5909	122512	1					
ANR	123293	ExpressionStatement	mptcp = conf -> mptcp	975:12:28563:28582	122512	0	True				
ANR	123294	AssignmentExpression	mptcp = conf -> mptcp		122512	0		=			
ANR	123295	Identifier	mptcp		122512	0					
ANR	123296	PtrMemberAccess	conf -> mptcp		122512	1					
ANR	123297	Identifier	conf		122512	0					
ANR	123298	Identifier	mptcp		122512	1					
ANR	123299	IfStatement	if ( reuse_port == 0 )		122512	16					
ANR	123300	Condition	reuse_port == 0	977:12:28606:28620	122512	0	True				
ANR	123301	EqualityExpression	reuse_port == 0		122512	0		==			
ANR	123302	Identifier	reuse_port		122512	0					
ANR	123303	PrimaryExpression	0		122512	1					
ANR	123304	CompoundStatement		219:29:5983:5983	122512	1					
ANR	123305	ExpressionStatement	reuse_port = conf -> reuse_port	978:12:28637:28666	122512	0	True				
ANR	123306	AssignmentExpression	reuse_port = conf -> reuse_port		122512	0		=			
ANR	123307	Identifier	reuse_port		122512	0					
ANR	123308	PtrMemberAccess	conf -> reuse_port		122512	1					
ANR	123309	Identifier	conf		122512	0					
ANR	123310	Identifier	reuse_port		122512	1					
ANR	123311	IfStatement	if ( nofile == 0 )		122512	17					
ANR	123312	Condition	nofile == 0	981:12:28712:28722	122512	0	True				
ANR	123313	EqualityExpression	nofile == 0		122512	0		==			
ANR	123314	Identifier	nofile		122512	0					
ANR	123315	PrimaryExpression	0		122512	1					
ANR	123316	CompoundStatement		223:25:6085:6085	122512	1					
ANR	123317	ExpressionStatement	nofile = conf -> nofile	982:12:28739:28760	122512	0	True				
ANR	123318	AssignmentExpression	nofile = conf -> nofile		122512	0		=			
ANR	123319	Identifier	nofile		122512	0					
ANR	123320	PtrMemberAccess	conf -> nofile		122512	1					
ANR	123321	Identifier	conf		122512	0					
ANR	123322	Identifier	nofile		122512	1					
ANR	123323	IfStatement	if ( remote_num == 0 || remote_port == NULL || tunnel_addr_str == NULL || local_port == NULL || ( password == NULL && key == NULL ) )		122512	37					
ANR	123324	Condition	remote_num == 0 || remote_port == NULL || tunnel_addr_str == NULL || local_port == NULL || ( password == NULL && key == NULL )	987:8:28794:28929	122512	0	True				
ANR	123325	OrExpression	remote_num == 0 || remote_port == NULL || tunnel_addr_str == NULL || local_port == NULL || ( password == NULL && key == NULL )		122512	0		||			
ANR	123326	EqualityExpression	remote_num == 0		122512	0		==			
ANR	123327	Identifier	remote_num		122512	0					
ANR	123328	PrimaryExpression	0		122512	1					
ANR	123329	OrExpression	remote_port == NULL || tunnel_addr_str == NULL || local_port == NULL || ( password == NULL && key == NULL )		122512	1		||			
ANR	123330	EqualityExpression	remote_port == NULL		122512	0		==			
ANR	123331	Identifier	remote_port		122512	0					
ANR	123332	Identifier	NULL		122512	1					
ANR	123333	OrExpression	tunnel_addr_str == NULL || local_port == NULL || ( password == NULL && key == NULL )		122512	1		||			
ANR	123334	EqualityExpression	tunnel_addr_str == NULL		122512	0		==			
ANR	123335	Identifier	tunnel_addr_str		122512	0					
ANR	123336	Identifier	NULL		122512	1					
ANR	123337	OrExpression	local_port == NULL || ( password == NULL && key == NULL )		122512	1		||			
ANR	123338	EqualityExpression	local_port == NULL		122512	0		==			
ANR	123339	Identifier	local_port		122512	0					
ANR	123340	Identifier	NULL		122512	1					
ANR	123341	AndExpression	password == NULL && key == NULL		122512	1		&&			
ANR	123342	EqualityExpression	password == NULL		122512	0		==			
ANR	123343	Identifier	password		122512	0					
ANR	123344	Identifier	NULL		122512	1					
ANR	123345	EqualityExpression	key == NULL		122512	1		==			
ANR	123346	Identifier	key		122512	0					
ANR	123347	Identifier	NULL		122512	1					
ANR	123348	CompoundStatement		230:72:6292:6292	122512	1					
ANR	123349	ExpressionStatement	usage ( )	989:8:28942:28949	122512	0	True				
ANR	123350	CallExpression	usage ( )		122512	0					
ANR	123351	Callee	usage		122512	0					
ANR	123352	Identifier	usage		122512	0					
ANR	123353	ArgumentList			122512	1					
ANR	123354	ExpressionStatement	exit ( EXIT_FAILURE )	990:8:28959:28977	122512	1	True				
ANR	123355	CallExpression	exit ( EXIT_FAILURE )		122512	0					
ANR	123356	Callee	exit		122512	0					
ANR	123357	Identifier	exit		122512	0					
ANR	123358	ArgumentList	EXIT_FAILURE		122512	1					
ANR	123359	Argument	EXIT_FAILURE		122512	0					
ANR	123360	Identifier	EXIT_FAILURE		122512	0					
ANR	123361	IfStatement	if ( plugin != NULL )		122512	38					
ANR	123362	Condition	plugin != NULL	993:8:28994:29007	122512	0	True				
ANR	123363	EqualityExpression	plugin != NULL		122512	0		!=			
ANR	123364	Identifier	plugin		122512	0					
ANR	123365	Identifier	NULL		122512	1					
ANR	123366	CompoundStatement		236:8:6380:6412	122512	1					
ANR	123367	IdentifierDeclStatement	uint16_t port = get_local_port ( ) ;	994:8:29020:29052	122512	0	True				
ANR	123368	IdentifierDecl	port = get_local_port ( )		122512	0					
ANR	123369	IdentifierDeclType	uint16_t		122512	0					
ANR	123370	Identifier	port		122512	1					
ANR	123371	AssignmentExpression	port = get_local_port ( )		122512	2		=			
ANR	123372	Identifier	port		122512	0					
ANR	123373	CallExpression	get_local_port ( )		122512	1					
ANR	123374	Callee	get_local_port		122512	0					
ANR	123375	Identifier	get_local_port		122512	0					
ANR	123376	ArgumentList			122512	1					
ANR	123377	IfStatement	if ( port == 0 )		122512	1					
ANR	123378	Condition	port == 0	995:12:29066:29074	122512	0	True				
ANR	123379	EqualityExpression	port == 0		122512	0		==			
ANR	123380	Identifier	port		122512	0					
ANR	123381	PrimaryExpression	0		122512	1					
ANR	123382	CompoundStatement		237:23:6437:6437	122512	1					
ANR	123383	ExpressionStatement	"FATAL ( ""failed to find a free port"" )"	996:12:29091:29126	122512	0	True				
ANR	123384	CallExpression	"FATAL ( ""failed to find a free port"" )"		122512	0					
ANR	123385	Callee	FATAL		122512	0					
ANR	123386	Identifier	FATAL		122512	0					
ANR	123387	ArgumentList	"""failed to find a free port"""		122512	1					
ANR	123388	Argument	"""failed to find a free port"""		122512	0					
ANR	123389	PrimaryExpression	"""failed to find a free port"""		122512	0					
ANR	123390	ExpressionStatement	"snprintf ( tmp_port , 8 , ""%d"" , port )"	998:8:29146:29179	122512	2	True				
ANR	123391	CallExpression	"snprintf ( tmp_port , 8 , ""%d"" , port )"		122512	0					
ANR	123392	Callee	snprintf		122512	0					
ANR	123393	Identifier	snprintf		122512	0					
ANR	123394	ArgumentList	tmp_port		122512	1					
ANR	123395	Argument	tmp_port		122512	0					
ANR	123396	Identifier	tmp_port		122512	0					
ANR	123397	Argument	8		122512	1					
ANR	123398	PrimaryExpression	8		122512	0					
ANR	123399	Argument	"""%d"""		122512	2					
ANR	123400	PrimaryExpression	"""%d"""		122512	0					
ANR	123401	Argument	port		122512	3					
ANR	123402	Identifier	port		122512	0					
ANR	123403	ExpressionStatement	"plugin_host = ""127.0.0.1"""	999:8:29189:29214	122512	3	True				
ANR	123404	AssignmentExpression	"plugin_host = ""127.0.0.1"""		122512	0		=			
ANR	123405	Identifier	plugin_host		122512	0					
ANR	123406	PrimaryExpression	"""127.0.0.1"""		122512	1					
ANR	123407	ExpressionStatement	plugin_port = tmp_port	1000:8:29224:29246	122512	4	True				
ANR	123408	AssignmentExpression	plugin_port = tmp_port		122512	0		=			
ANR	123409	Identifier	plugin_port		122512	0					
ANR	123410	Identifier	tmp_port		122512	1					
ANR	123411	ExpressionStatement	"LOGI ( ""plugin \\""%s\\"" enabled"" , plugin )"	1002:8:29257:29294	122512	5	True				
ANR	123412	CallExpression	"LOGI ( ""plugin \\""%s\\"" enabled"" , plugin )"		122512	0					
ANR	123413	Callee	LOGI		122512	0					
ANR	123414	Identifier	LOGI		122512	0					
ANR	123415	ArgumentList	"""plugin \\""%s\\"" enabled"""		122512	1					
ANR	123416	Argument	"""plugin \\""%s\\"" enabled"""		122512	0					
ANR	123417	PrimaryExpression	"""plugin \\""%s\\"" enabled"""		122512	0					
ANR	123418	Argument	plugin		122512	1					
ANR	123419	Identifier	plugin		122512	0					
ANR	123420	IfStatement	if ( method == NULL )		122512	39					
ANR	123421	Condition	method == NULL	1005:8:29311:29324	122512	0	True				
ANR	123422	EqualityExpression	method == NULL		122512	0		==			
ANR	123423	Identifier	method		122512	0					
ANR	123424	Identifier	NULL		122512	1					
ANR	123425	CompoundStatement		247:24:6687:6687	122512	1					
ANR	123426	ExpressionStatement	"method = ""rc4-md5"""	1006:8:29337:29355	122512	0	True				
ANR	123427	AssignmentExpression	"method = ""rc4-md5"""		122512	0		=			
ANR	123428	Identifier	method		122512	0					
ANR	123429	PrimaryExpression	"""rc4-md5"""		122512	1					
ANR	123430	IfStatement	if ( timeout == NULL )		122512	40					
ANR	123431	Condition	timeout == NULL	1009:8:29372:29386	122512	0	True				
ANR	123432	EqualityExpression	timeout == NULL		122512	0		==			
ANR	123433	Identifier	timeout		122512	0					
ANR	123434	Identifier	NULL		122512	1					
ANR	123435	CompoundStatement		251:25:6749:6749	122512	1					
ANR	123436	ExpressionStatement	"timeout = ""60"""	1010:8:29399:29413	122512	0	True				
ANR	123437	AssignmentExpression	"timeout = ""60"""		122512	0		=			
ANR	123438	Identifier	timeout		122512	0					
ANR	123439	PrimaryExpression	"""60"""		122512	1					
ANR	123440	IfStatement	if ( nofile > 1024 )		122512	41					
ANR	123441	Condition	nofile > 1024	1018:8:29587:29599	122512	0	True				
ANR	123442	RelationalExpression	nofile > 1024		122512	0		>			
ANR	123443	Identifier	nofile		122512	0					
ANR	123444	PrimaryExpression	1024		122512	1					
ANR	123445	CompoundStatement		260:23:6962:6962	122512	1					
ANR	123446	IfStatement	if ( verbose )		122512	0					
ANR	123447	Condition	verbose	1019:12:29616:29622	122512	0	True				
ANR	123448	Identifier	verbose		122512	0					
ANR	123449	CompoundStatement		261:21:6985:6985	122512	1					
ANR	123450	ExpressionStatement	"LOGI ( ""setting NOFILE to %d"" , nofile )"	1020:12:29639:29675	122512	0	True				
ANR	123451	CallExpression	"LOGI ( ""setting NOFILE to %d"" , nofile )"		122512	0					
ANR	123452	Callee	LOGI		122512	0					
ANR	123453	Identifier	LOGI		122512	0					
ANR	123454	ArgumentList	"""setting NOFILE to %d"""		122512	1					
ANR	123455	Argument	"""setting NOFILE to %d"""		122512	0					
ANR	123456	PrimaryExpression	"""setting NOFILE to %d"""		122512	0					
ANR	123457	Argument	nofile		122512	1					
ANR	123458	Identifier	nofile		122512	0					
ANR	123459	ExpressionStatement	set_nofile ( nofile )	1022:8:29695:29713	122512	1	True				
ANR	123460	CallExpression	set_nofile ( nofile )		122512	0					
ANR	123461	Callee	set_nofile		122512	0					
ANR	123462	Identifier	set_nofile		122512	0					
ANR	123463	ArgumentList	nofile		122512	1					
ANR	123464	Argument	nofile		122512	0					
ANR	123465	Identifier	nofile		122512	0					
ANR	123466	IfStatement	if ( local_addr == NULL )		122512	42					
ANR	123467	Condition	local_addr == NULL	1026:8:29737:29754	122512	0	True				
ANR	123468	EqualityExpression	local_addr == NULL		122512	0		==			
ANR	123469	Identifier	local_addr		122512	0					
ANR	123470	Identifier	NULL		122512	1					
ANR	123471	CompoundStatement		268:28:7117:7117	122512	1					
ANR	123472	ExpressionStatement	"local_addr = ""127.0.0.1"""	1027:8:29767:29791	122512	0	True				
ANR	123473	AssignmentExpression	"local_addr = ""127.0.0.1"""		122512	0		=			
ANR	123474	Identifier	local_addr		122512	0					
ANR	123475	PrimaryExpression	"""127.0.0.1"""		122512	1					
ANR	123476	ExpressionStatement	"USE_SYSLOG ( argv [ 0 ] , pid_flags )"	1030:4:29804:29834	122512	43	True				
ANR	123477	CallExpression	"USE_SYSLOG ( argv [ 0 ] , pid_flags )"		122512	0					
ANR	123478	Callee	USE_SYSLOG		122512	0					
ANR	123479	Identifier	USE_SYSLOG		122512	0					
ANR	123480	ArgumentList	argv [ 0 ]		122512	1					
ANR	123481	Argument	argv [ 0 ]		122512	0					
ANR	123482	ArrayIndexing	argv [ 0 ]		122512	0					
ANR	123483	Identifier	argv		122512	0					
ANR	123484	PrimaryExpression	0		122512	1					
ANR	123485	Argument	pid_flags		122512	1					
ANR	123486	Identifier	pid_flags		122512	0					
ANR	123487	IfStatement	if ( pid_flags )		122512	44					
ANR	123488	Condition	pid_flags	1031:8:29844:29852	122512	0	True				
ANR	123489	Identifier	pid_flags		122512	0					
ANR	123490	CompoundStatement		273:19:7215:7215	122512	1					
ANR	123491	ExpressionStatement	daemonize ( pid_path )	1032:8:29865:29884	122512	0	True				
ANR	123492	CallExpression	daemonize ( pid_path )		122512	0					
ANR	123493	Callee	daemonize		122512	0					
ANR	123494	Identifier	daemonize		122512	0					
ANR	123495	ArgumentList	pid_path		122512	1					
ANR	123496	Argument	pid_path		122512	0					
ANR	123497	Identifier	pid_path		122512	0					
ANR	123498	IfStatement	if ( ipv6first )		122512	45					
ANR	123499	Condition	ipv6first	1035:8:29901:29909	122512	0	True				
ANR	123500	Identifier	ipv6first		122512	0					
ANR	123501	CompoundStatement		277:19:7272:7272	122512	1					
ANR	123502	ExpressionStatement	"LOGI ( ""resolving hostname to IPv6 address first"" )"	1036:8:29922:29970	122512	0	True				
ANR	123503	CallExpression	"LOGI ( ""resolving hostname to IPv6 address first"" )"		122512	0					
ANR	123504	Callee	LOGI		122512	0					
ANR	123505	Identifier	LOGI		122512	0					
ANR	123506	ArgumentList	"""resolving hostname to IPv6 address first"""		122512	1					
ANR	123507	Argument	"""resolving hostname to IPv6 address first"""		122512	0					
ANR	123508	PrimaryExpression	"""resolving hostname to IPv6 address first"""		122512	0					
ANR	123509	ExpressionStatement	"parse_addr ( tunnel_addr_str , & tunnel_addr )"	1040:4:30008:30049	122512	46	True				
ANR	123510	CallExpression	"parse_addr ( tunnel_addr_str , & tunnel_addr )"		122512	0					
ANR	123511	Callee	parse_addr		122512	0					
ANR	123512	Identifier	parse_addr		122512	0					
ANR	123513	ArgumentList	tunnel_addr_str		122512	1					
ANR	123514	Argument	tunnel_addr_str		122512	0					
ANR	123515	Identifier	tunnel_addr_str		122512	0					
ANR	123516	Argument	& tunnel_addr		122512	1					
ANR	123517	UnaryOperationExpression	& tunnel_addr		122512	0					
ANR	123518	UnaryOperator	&		122512	0					
ANR	123519	Identifier	tunnel_addr		122512	1					
ANR	123520	IfStatement	if ( tunnel_addr . port == NULL )		122512	47					
ANR	123521	Condition	tunnel_addr . port == NULL	1042:8:30060:30083	122512	0	True				
ANR	123522	EqualityExpression	tunnel_addr . port == NULL		122512	0		==			
ANR	123523	MemberAccess	tunnel_addr . port		122512	0					
ANR	123524	Identifier	tunnel_addr		122512	0					
ANR	123525	Identifier	port		122512	1					
ANR	123526	Identifier	NULL		122512	1					
ANR	123527	CompoundStatement		284:34:7446:7446	122512	1					
ANR	123528	ExpressionStatement	"FATAL ( ""tunnel port is not defined"" )"	1043:8:30096:30131	122512	0	True				
ANR	123529	CallExpression	"FATAL ( ""tunnel port is not defined"" )"		122512	0					
ANR	123530	Callee	FATAL		122512	0					
ANR	123531	Identifier	FATAL		122512	0					
ANR	123532	ArgumentList	"""tunnel port is not defined"""		122512	1					
ANR	123533	Argument	"""tunnel port is not defined"""		122512	0					
ANR	123534	PrimaryExpression	"""tunnel port is not defined"""		122512	0					
ANR	123535	IfStatement	if ( plugin != NULL )		122512	48					
ANR	123536	Condition	plugin != NULL	1046:8:30148:30161	122512	0	True				
ANR	123537	EqualityExpression	plugin != NULL		122512	0		!=			
ANR	123538	Identifier	plugin		122512	0					
ANR	123539	Identifier	NULL		122512	1					
ANR	123540	CompoundStatement		298:8:7894:8017	122512	1					
ANR	123541	IdentifierDeclStatement	int len = 0 ;	1047:8:30174:30185	122512	0	True				
ANR	123542	IdentifierDecl	len = 0		122512	0					
ANR	123543	IdentifierDeclType	int		122512	0					
ANR	123544	Identifier	len		122512	1					
ANR	123545	AssignmentExpression	len = 0		122512	2		=			
ANR	123546	Identifier	len		122512	0					
ANR	123547	PrimaryExpression	0		122512	1					
ANR	123548	IdentifierDeclStatement	size_t buf_size = 256 * remote_num ;	1048:8:30195:30229	122512	1	True				
ANR	123549	IdentifierDecl	buf_size = 256 * remote_num		122512	0					
ANR	123550	IdentifierDeclType	size_t		122512	0					
ANR	123551	Identifier	buf_size		122512	1					
ANR	123552	AssignmentExpression	buf_size = 256 * remote_num		122512	2		=			
ANR	123553	Identifier	buf_size		122512	0					
ANR	123554	MultiplicativeExpression	256 * remote_num		122512	1		*			
ANR	123555	PrimaryExpression	256		122512	0					
ANR	123556	Identifier	remote_num		122512	1					
ANR	123557	IdentifierDeclStatement	char * remote_str = ss_malloc ( buf_size ) ;	1049:8:30239:30277	122512	2	True				
ANR	123558	IdentifierDecl	* remote_str = ss_malloc ( buf_size )		122512	0					
ANR	123559	IdentifierDeclType	char *		122512	0					
ANR	123560	Identifier	remote_str		122512	1					
ANR	123561	AssignmentExpression	* remote_str = ss_malloc ( buf_size )		122512	2		=			
ANR	123562	Identifier	remote_str		122512	0					
ANR	123563	CallExpression	ss_malloc ( buf_size )		122512	1					
ANR	123564	Callee	ss_malloc		122512	0					
ANR	123565	Identifier	ss_malloc		122512	0					
ANR	123566	ArgumentList	buf_size		122512	1					
ANR	123567	Argument	buf_size		122512	0					
ANR	123568	Identifier	buf_size		122512	0					
ANR	123569	ExpressionStatement	"snprintf ( remote_str , buf_size , ""%s"" , remote_addr [ 0 ] . host )"	1051:8:30288:30345	122512	3	True				
ANR	123570	CallExpression	"snprintf ( remote_str , buf_size , ""%s"" , remote_addr [ 0 ] . host )"		122512	0					
ANR	123571	Callee	snprintf		122512	0					
ANR	123572	Identifier	snprintf		122512	0					
ANR	123573	ArgumentList	remote_str		122512	1					
ANR	123574	Argument	remote_str		122512	0					
ANR	123575	Identifier	remote_str		122512	0					
ANR	123576	Argument	buf_size		122512	1					
ANR	123577	Identifier	buf_size		122512	0					
ANR	123578	Argument	"""%s"""		122512	2					
ANR	123579	PrimaryExpression	"""%s"""		122512	0					
ANR	123580	Argument	remote_addr [ 0 ] . host		122512	3					
ANR	123581	MemberAccess	remote_addr [ 0 ] . host		122512	0					
ANR	123582	ArrayIndexing	remote_addr [ 0 ]		122512	0					
ANR	123583	Identifier	remote_addr		122512	0					
ANR	123584	PrimaryExpression	0		122512	1					
ANR	123585	Identifier	host		122512	1					
ANR	123586	ForStatement	for ( int i = 1 ; i < remote_num ; i ++ )		122512	4					
ANR	123587	ForInit	int i = 1 ;	1052:13:30360:30369	122512	0	True				
ANR	123588	IdentifierDeclStatement	int i = 1 ;		122512	0					
ANR	123589	IdentifierDecl	i = 1		122512	0					
ANR	123590	IdentifierDeclType	int		122512	0					
ANR	123591	Identifier	i		122512	1					
ANR	123592	AssignmentExpression	i = 1		122512	2		=			
ANR	123593	Identifier	i		122512	0					
ANR	123594	PrimaryExpression	1		122512	1					
ANR	123595	Condition	i < remote_num	1052:24:30371:30384	122512	1	True				
ANR	123596	RelationalExpression	i < remote_num		122512	0		<			
ANR	123597	Identifier	i		122512	0					
ANR	123598	Identifier	remote_num		122512	1					
ANR	123599	PostIncDecOperationExpression	i ++	1052:40:30387:30389	122512	2	True				
ANR	123600	Identifier	i		122512	0					
ANR	123601	IncDec	++		122512	1					
ANR	123602	CompoundStatement		294:45:7752:7752	122512	3					
ANR	123603	ExpressionStatement	"snprintf ( remote_str + len , buf_size - len , ""|%s"" , remote_addr [ i ] . host )"	1053:12:30406:30476	122512	0	True				
ANR	123604	CallExpression	"snprintf ( remote_str + len , buf_size - len , ""|%s"" , remote_addr [ i ] . host )"		122512	0					
ANR	123605	Callee	snprintf		122512	0					
ANR	123606	Identifier	snprintf		122512	0					
ANR	123607	ArgumentList	remote_str + len		122512	1					
ANR	123608	Argument	remote_str + len		122512	0					
ANR	123609	AdditiveExpression	remote_str + len		122512	0		+			
ANR	123610	Identifier	remote_str		122512	0					
ANR	123611	Identifier	len		122512	1					
ANR	123612	Argument	buf_size - len		122512	1					
ANR	123613	AdditiveExpression	buf_size - len		122512	0		-			
ANR	123614	Identifier	buf_size		122512	0					
ANR	123615	Identifier	len		122512	1					
ANR	123616	Argument	"""|%s"""		122512	2					
ANR	123617	PrimaryExpression	"""|%s"""		122512	0					
ANR	123618	Argument	remote_addr [ i ] . host		122512	3					
ANR	123619	MemberAccess	remote_addr [ i ] . host		122512	0					
ANR	123620	ArrayIndexing	remote_addr [ i ]		122512	0					
ANR	123621	Identifier	remote_addr		122512	0					
ANR	123622	Identifier	i		122512	1					
ANR	123623	Identifier	host		122512	1					
ANR	123624	ExpressionStatement	len = strlen ( remote_str )	1054:12:30490:30514	122512	1	True				
ANR	123625	AssignmentExpression	len = strlen ( remote_str )		122512	0		=			
ANR	123626	Identifier	len		122512	0					
ANR	123627	CallExpression	strlen ( remote_str )		122512	1					
ANR	123628	Callee	strlen		122512	0					
ANR	123629	Identifier	strlen		122512	0					
ANR	123630	ArgumentList	remote_str		122512	1					
ANR	123631	Argument	remote_str		122512	0					
ANR	123632	Identifier	remote_str		122512	0					
ANR	123633	IdentifierDeclStatement	"int err = start_plugin ( plugin , plugin_opts , remote_str , remote_port , plugin_host , plugin_port , MODE_CLIENT ) ;"	1056:8:30534:30657	122512	5	True				
ANR	123634	IdentifierDecl	"err = start_plugin ( plugin , plugin_opts , remote_str , remote_port , plugin_host , plugin_port , MODE_CLIENT )"		122512	0					
ANR	123635	IdentifierDeclType	int		122512	0					
ANR	123636	Identifier	err		122512	1					
ANR	123637	AssignmentExpression	"err = start_plugin ( plugin , plugin_opts , remote_str , remote_port , plugin_host , plugin_port , MODE_CLIENT )"		122512	2		=			
ANR	123638	Identifier	err		122512	0					
ANR	123639	CallExpression	"start_plugin ( plugin , plugin_opts , remote_str , remote_port , plugin_host , plugin_port , MODE_CLIENT )"		122512	1					
ANR	123640	Callee	start_plugin		122512	0					
ANR	123641	Identifier	start_plugin		122512	0					
ANR	123642	ArgumentList	plugin		122512	1					
ANR	123643	Argument	plugin		122512	0					
ANR	123644	Identifier	plugin		122512	0					
ANR	123645	Argument	plugin_opts		122512	1					
ANR	123646	Identifier	plugin_opts		122512	0					
ANR	123647	Argument	remote_str		122512	2					
ANR	123648	Identifier	remote_str		122512	0					
ANR	123649	Argument	remote_port		122512	3					
ANR	123650	Identifier	remote_port		122512	0					
ANR	123651	Argument	plugin_host		122512	4					
ANR	123652	Identifier	plugin_host		122512	0					
ANR	123653	Argument	plugin_port		122512	5					
ANR	123654	Identifier	plugin_port		122512	0					
ANR	123655	Argument	MODE_CLIENT		122512	6					
ANR	123656	Identifier	MODE_CLIENT		122512	0					
ANR	123657	IfStatement	if ( err )		122512	6					
ANR	123658	Condition	err	1058:12:30671:30673	122512	0	True				
ANR	123659	Identifier	err		122512	0					
ANR	123660	CompoundStatement		300:17:8036:8036	122512	1					
ANR	123661	ExpressionStatement	"FATAL ( ""failed to start the plugin"" )"	1059:12:30690:30725	122512	0	True				
ANR	123662	CallExpression	"FATAL ( ""failed to start the plugin"" )"		122512	0					
ANR	123663	Callee	FATAL		122512	0					
ANR	123664	Identifier	FATAL		122512	0					
ANR	123665	ArgumentList	"""failed to start the plugin"""		122512	1					
ANR	123666	Argument	"""failed to start the plugin"""		122512	0					
ANR	123667	PrimaryExpression	"""failed to start the plugin"""		122512	0					
ANR	123668	ExpressionStatement	"signal ( SIGPIPE , SIG_IGN )"	1064:4:30770:30794	122512	49	True				
ANR	123669	CallExpression	"signal ( SIGPIPE , SIG_IGN )"		122512	0					
ANR	123670	Callee	signal		122512	0					
ANR	123671	Identifier	signal		122512	0					
ANR	123672	ArgumentList	SIGPIPE		122512	1					
ANR	123673	Argument	SIGPIPE		122512	0					
ANR	123674	Identifier	SIGPIPE		122512	0					
ANR	123675	Argument	SIG_IGN		122512	1					
ANR	123676	Identifier	SIG_IGN		122512	0					
ANR	123677	ExpressionStatement	"signal ( SIGABRT , SIG_IGN )"	1065:4:30800:30824	122512	50	True				
ANR	123678	CallExpression	"signal ( SIGABRT , SIG_IGN )"		122512	0					
ANR	123679	Callee	signal		122512	0					
ANR	123680	Identifier	signal		122512	0					
ANR	123681	ArgumentList	SIGABRT		122512	1					
ANR	123682	Argument	SIGABRT		122512	0					
ANR	123683	Identifier	SIGABRT		122512	0					
ANR	123684	Argument	SIG_IGN		122512	1					
ANR	123685	Identifier	SIG_IGN		122512	0					
ANR	123686	ExpressionStatement	"ev_signal_init ( & sigint_watcher , signal_cb , SIGINT )"	1067:4:30831:30881	122512	51	True				
ANR	123687	CallExpression	"ev_signal_init ( & sigint_watcher , signal_cb , SIGINT )"		122512	0					
ANR	123688	Callee	ev_signal_init		122512	0					
ANR	123689	Identifier	ev_signal_init		122512	0					
ANR	123690	ArgumentList	& sigint_watcher		122512	1					
ANR	123691	Argument	& sigint_watcher		122512	0					
ANR	123692	UnaryOperationExpression	& sigint_watcher		122512	0					
ANR	123693	UnaryOperator	&		122512	0					
ANR	123694	Identifier	sigint_watcher		122512	1					
ANR	123695	Argument	signal_cb		122512	1					
ANR	123696	Identifier	signal_cb		122512	0					
ANR	123697	Argument	SIGINT		122512	2					
ANR	123698	Identifier	SIGINT		122512	0					
ANR	123699	ExpressionStatement	"ev_signal_init ( & sigterm_watcher , signal_cb , SIGTERM )"	1068:4:30887:30939	122512	52	True				
ANR	123700	CallExpression	"ev_signal_init ( & sigterm_watcher , signal_cb , SIGTERM )"		122512	0					
ANR	123701	Callee	ev_signal_init		122512	0					
ANR	123702	Identifier	ev_signal_init		122512	0					
ANR	123703	ArgumentList	& sigterm_watcher		122512	1					
ANR	123704	Argument	& sigterm_watcher		122512	0					
ANR	123705	UnaryOperationExpression	& sigterm_watcher		122512	0					
ANR	123706	UnaryOperator	&		122512	0					
ANR	123707	Identifier	sigterm_watcher		122512	1					
ANR	123708	Argument	signal_cb		122512	1					
ANR	123709	Identifier	signal_cb		122512	0					
ANR	123710	Argument	SIGTERM		122512	2					
ANR	123711	Identifier	SIGTERM		122512	0					
ANR	123712	ExpressionStatement	"ev_signal_init ( & sigchld_watcher , signal_cb , SIGCHLD )"	1069:4:30945:30997	122512	53	True				
ANR	123713	CallExpression	"ev_signal_init ( & sigchld_watcher , signal_cb , SIGCHLD )"		122512	0					
ANR	123714	Callee	ev_signal_init		122512	0					
ANR	123715	Identifier	ev_signal_init		122512	0					
ANR	123716	ArgumentList	& sigchld_watcher		122512	1					
ANR	123717	Argument	& sigchld_watcher		122512	0					
ANR	123718	UnaryOperationExpression	& sigchld_watcher		122512	0					
ANR	123719	UnaryOperator	&		122512	0					
ANR	123720	Identifier	sigchld_watcher		122512	1					
ANR	123721	Argument	signal_cb		122512	1					
ANR	123722	Identifier	signal_cb		122512	0					
ANR	123723	Argument	SIGCHLD		122512	2					
ANR	123724	Identifier	SIGCHLD		122512	0					
ANR	123725	ExpressionStatement	"ev_signal_start ( EV_DEFAULT , & sigint_watcher )"	1070:4:31003:31047	122512	54	True				
ANR	123726	CallExpression	"ev_signal_start ( EV_DEFAULT , & sigint_watcher )"		122512	0					
ANR	123727	Callee	ev_signal_start		122512	0					
ANR	123728	Identifier	ev_signal_start		122512	0					
ANR	123729	ArgumentList	EV_DEFAULT		122512	1					
ANR	123730	Argument	EV_DEFAULT		122512	0					
ANR	123731	Identifier	EV_DEFAULT		122512	0					
ANR	123732	Argument	& sigint_watcher		122512	1					
ANR	123733	UnaryOperationExpression	& sigint_watcher		122512	0					
ANR	123734	UnaryOperator	&		122512	0					
ANR	123735	Identifier	sigint_watcher		122512	1					
ANR	123736	ExpressionStatement	"ev_signal_start ( EV_DEFAULT , & sigterm_watcher )"	1071:4:31053:31098	122512	55	True				
ANR	123737	CallExpression	"ev_signal_start ( EV_DEFAULT , & sigterm_watcher )"		122512	0					
ANR	123738	Callee	ev_signal_start		122512	0					
ANR	123739	Identifier	ev_signal_start		122512	0					
ANR	123740	ArgumentList	EV_DEFAULT		122512	1					
ANR	123741	Argument	EV_DEFAULT		122512	0					
ANR	123742	Identifier	EV_DEFAULT		122512	0					
ANR	123743	Argument	& sigterm_watcher		122512	1					
ANR	123744	UnaryOperationExpression	& sigterm_watcher		122512	0					
ANR	123745	UnaryOperator	&		122512	0					
ANR	123746	Identifier	sigterm_watcher		122512	1					
ANR	123747	ExpressionStatement	"ev_signal_start ( EV_DEFAULT , & sigchld_watcher )"	1072:4:31104:31149	122512	56	True				
ANR	123748	CallExpression	"ev_signal_start ( EV_DEFAULT , & sigchld_watcher )"		122512	0					
ANR	123749	Callee	ev_signal_start		122512	0					
ANR	123750	Identifier	ev_signal_start		122512	0					
ANR	123751	ArgumentList	EV_DEFAULT		122512	1					
ANR	123752	Argument	EV_DEFAULT		122512	0					
ANR	123753	Identifier	EV_DEFAULT		122512	0					
ANR	123754	Argument	& sigchld_watcher		122512	1					
ANR	123755	UnaryOperationExpression	& sigchld_watcher		122512	0					
ANR	123756	UnaryOperator	&		122512	0					
ANR	123757	Identifier	sigchld_watcher		122512	1					
ANR	123758	ExpressionStatement	"LOGI ( ""initializing ciphers... %s"" , method )"	1075:4:31174:31216	122512	57	True				
ANR	123759	CallExpression	"LOGI ( ""initializing ciphers... %s"" , method )"		122512	0					
ANR	123760	Callee	LOGI		122512	0					
ANR	123761	Identifier	LOGI		122512	0					
ANR	123762	ArgumentList	"""initializing ciphers... %s"""		122512	1					
ANR	123763	Argument	"""initializing ciphers... %s"""		122512	0					
ANR	123764	PrimaryExpression	"""initializing ciphers... %s"""		122512	0					
ANR	123765	Argument	method		122512	1					
ANR	123766	Identifier	method		122512	0					
ANR	123767	ExpressionStatement	"crypto = crypto_init ( password , key , method )"	1076:4:31222:31265	122512	58	True				
ANR	123768	AssignmentExpression	"crypto = crypto_init ( password , key , method )"		122512	0		=			
ANR	123769	Identifier	crypto		122512	0					
ANR	123770	CallExpression	"crypto_init ( password , key , method )"		122512	1					
ANR	123771	Callee	crypto_init		122512	0					
ANR	123772	Identifier	crypto_init		122512	0					
ANR	123773	ArgumentList	password		122512	1					
ANR	123774	Argument	password		122512	0					
ANR	123775	Identifier	password		122512	0					
ANR	123776	Argument	key		122512	1					
ANR	123777	Identifier	key		122512	0					
ANR	123778	Argument	method		122512	2					
ANR	123779	Identifier	method		122512	0					
ANR	123780	IfStatement	if ( crypto == NULL )		122512	59					
ANR	123781	Condition	crypto == NULL	1077:8:31275:31288	122512	0	True				
ANR	123782	EqualityExpression	crypto == NULL		122512	0		==			
ANR	123783	Identifier	crypto		122512	0					
ANR	123784	Identifier	NULL		122512	1					
ANR	123785	ExpressionStatement	"FATAL ( ""failed to initialize ciphers"" )"	1078:8:31299:31336	122512	1	True				
ANR	123786	CallExpression	"FATAL ( ""failed to initialize ciphers"" )"		122512	0					
ANR	123787	Callee	FATAL		122512	0					
ANR	123788	Identifier	FATAL		122512	0					
ANR	123789	ArgumentList	"""failed to initialize ciphers"""		122512	1					
ANR	123790	Argument	"""failed to initialize ciphers"""		122512	0					
ANR	123791	PrimaryExpression	"""failed to initialize ciphers"""		122512	0					
ANR	123792	IdentifierDeclStatement	struct listen_ctx listen_ctx ;	1081:4:31370:31398	122512	60	True				
ANR	123793	IdentifierDecl	listen_ctx		122512	0					
ANR	123794	IdentifierDeclType	struct listen_ctx		122512	0					
ANR	123795	Identifier	listen_ctx		122512	1					
ANR	123796	ExpressionStatement	"memset ( & listen_ctx , 0 , sizeof ( struct listen_ctx ) )"	1082:4:31404:31453	122512	61	True				
ANR	123797	CallExpression	"memset ( & listen_ctx , 0 , sizeof ( struct listen_ctx ) )"		122512	0					
ANR	123798	Callee	memset		122512	0					
ANR	123799	Identifier	memset		122512	0					
ANR	123800	ArgumentList	& listen_ctx		122512	1					
ANR	123801	Argument	& listen_ctx		122512	0					
ANR	123802	UnaryOperationExpression	& listen_ctx		122512	0					
ANR	123803	UnaryOperator	&		122512	0					
ANR	123804	Identifier	listen_ctx		122512	1					
ANR	123805	Argument	0		122512	1					
ANR	123806	PrimaryExpression	0		122512	0					
ANR	123807	Argument	sizeof ( struct listen_ctx )		122512	2					
ANR	123808	SizeofExpression	sizeof ( struct listen_ctx )		122512	0					
ANR	123809	Sizeof	sizeof		122512	0					
ANR	123810	SizeofOperand	struct listen_ctx		122512	1					
ANR	123811	ExpressionStatement	listen_ctx . tunnel_addr = tunnel_addr	1083:4:31459:31495	122512	62	True				
ANR	123812	AssignmentExpression	listen_ctx . tunnel_addr = tunnel_addr		122512	0		=			
ANR	123813	MemberAccess	listen_ctx . tunnel_addr		122512	0					
ANR	123814	Identifier	listen_ctx		122512	0					
ANR	123815	Identifier	tunnel_addr		122512	1					
ANR	123816	Identifier	tunnel_addr		122512	1					
ANR	123817	ExpressionStatement	listen_ctx . remote_num = remote_num	1084:4:31501:31536	122512	63	True				
ANR	123818	AssignmentExpression	listen_ctx . remote_num = remote_num		122512	0		=			
ANR	123819	MemberAccess	listen_ctx . remote_num		122512	0					
ANR	123820	Identifier	listen_ctx		122512	0					
ANR	123821	Identifier	remote_num		122512	1					
ANR	123822	Identifier	remote_num		122512	1					
ANR	123823	ExpressionStatement	listen_ctx . remote_addr = ss_malloc ( sizeof ( struct sockaddr * ) * remote_num )	1085:4:31542:31616	122512	64	True				
ANR	123824	AssignmentExpression	listen_ctx . remote_addr = ss_malloc ( sizeof ( struct sockaddr * ) * remote_num )		122512	0		=			
ANR	123825	MemberAccess	listen_ctx . remote_addr		122512	0					
ANR	123826	Identifier	listen_ctx		122512	0					
ANR	123827	Identifier	remote_addr		122512	1					
ANR	123828	CallExpression	ss_malloc ( sizeof ( struct sockaddr * ) * remote_num )		122512	1					
ANR	123829	Callee	ss_malloc		122512	0					
ANR	123830	Identifier	ss_malloc		122512	0					
ANR	123831	ArgumentList	sizeof ( struct sockaddr * ) * remote_num		122512	1					
ANR	123832	Argument	sizeof ( struct sockaddr * ) * remote_num		122512	0					
ANR	123833	MultiplicativeExpression	sizeof ( struct sockaddr * ) * remote_num		122512	0		*			
ANR	123834	SizeofExpression	sizeof ( struct sockaddr * )		122512	0					
ANR	123835	Sizeof	sizeof		122512	0					
ANR	123836	SizeofOperand	struct sockaddr *		122512	1					
ANR	123837	Identifier	remote_num		122512	1					
ANR	123838	ExpressionStatement	"memset ( listen_ctx . remote_addr , 0 , sizeof ( struct sockaddr * ) * remote_num )"	1086:4:31622:31695	122512	65	True				
ANR	123839	CallExpression	"memset ( listen_ctx . remote_addr , 0 , sizeof ( struct sockaddr * ) * remote_num )"		122512	0					
ANR	123840	Callee	memset		122512	0					
ANR	123841	Identifier	memset		122512	0					
ANR	123842	ArgumentList	listen_ctx . remote_addr		122512	1					
ANR	123843	Argument	listen_ctx . remote_addr		122512	0					
ANR	123844	MemberAccess	listen_ctx . remote_addr		122512	0					
ANR	123845	Identifier	listen_ctx		122512	0					
ANR	123846	Identifier	remote_addr		122512	1					
ANR	123847	Argument	0		122512	1					
ANR	123848	PrimaryExpression	0		122512	0					
ANR	123849	Argument	sizeof ( struct sockaddr * ) * remote_num		122512	2					
ANR	123850	MultiplicativeExpression	sizeof ( struct sockaddr * ) * remote_num		122512	0		*			
ANR	123851	SizeofExpression	sizeof ( struct sockaddr * )		122512	0					
ANR	123852	Sizeof	sizeof		122512	0					
ANR	123853	SizeofOperand	struct sockaddr *		122512	1					
ANR	123854	Identifier	remote_num		122512	1					
ANR	123855	ForStatement	for ( i = 0 ; i < remote_num ; i ++ )		122512	66					
ANR	123856	ForInit	i = 0 ;	1087:9:31706:31711	122512	0	True				
ANR	123857	AssignmentExpression	i = 0		122512	0		=			
ANR	123858	Identifier	i		122512	0					
ANR	123859	PrimaryExpression	0		122512	1					
ANR	123860	Condition	i < remote_num	1087:16:31713:31726	122512	1	True				
ANR	123861	RelationalExpression	i < remote_num		122512	0		<			
ANR	123862	Identifier	i		122512	0					
ANR	123863	Identifier	remote_num		122512	1					
ANR	123864	PostIncDecOperationExpression	i ++	1087:32:31729:31731	122512	2	True				
ANR	123865	Identifier	i		122512	0					
ANR	123866	IncDec	++		122512	1					
ANR	123867	CompoundStatement		336:8:9336:9413	122512	3					
ANR	123868	IdentifierDeclStatement	char * host = remote_addr [ i ] . host ;	1088:8:31744:31776	122512	0	True				
ANR	123869	IdentifierDecl	* host = remote_addr [ i ] . host		122512	0					
ANR	123870	IdentifierDeclType	char *		122512	0					
ANR	123871	Identifier	host		122512	1					
ANR	123872	AssignmentExpression	* host = remote_addr [ i ] . host		122512	2		=			
ANR	123873	Identifier	host		122512	0					
ANR	123874	MemberAccess	remote_addr [ i ] . host		122512	1					
ANR	123875	ArrayIndexing	remote_addr [ i ]		122512	0					
ANR	123876	Identifier	remote_addr		122512	0					
ANR	123877	Identifier	i		122512	1					
ANR	123878	Identifier	host		122512	1					
ANR	123879	IdentifierDeclStatement	char * port = remote_addr [ i ] . port == NULL ? remote_port : remote_addr [ i ] . port ;	1089:8:31786:31862	122512	1	True				
ANR	123880	IdentifierDecl	* port = remote_addr [ i ] . port == NULL ? remote_port : remote_addr [ i ] . port		122512	0					
ANR	123881	IdentifierDeclType	char *		122512	0					
ANR	123882	Identifier	port		122512	1					
ANR	123883	AssignmentExpression	* port = remote_addr [ i ] . port == NULL ? remote_port : remote_addr [ i ] . port		122512	2		=			
ANR	123884	Identifier	port		122512	0					
ANR	123885	ConditionalExpression	remote_addr [ i ] . port == NULL ? remote_port : remote_addr [ i ] . port		122512	1					
ANR	123886	Condition	remote_addr [ i ] . port == NULL		122512	0					
ANR	123887	EqualityExpression	remote_addr [ i ] . port == NULL		122512	0		==			
ANR	123888	MemberAccess	remote_addr [ i ] . port		122512	0					
ANR	123889	ArrayIndexing	remote_addr [ i ]		122512	0					
ANR	123890	Identifier	remote_addr		122512	0					
ANR	123891	Identifier	i		122512	1					
ANR	123892	Identifier	port		122512	1					
ANR	123893	Identifier	NULL		122512	1					
ANR	123894	Identifier	remote_port		122512	1					
ANR	123895	MemberAccess	remote_addr [ i ] . port		122512	2					
ANR	123896	ArrayIndexing	remote_addr [ i ]		122512	0					
ANR	123897	Identifier	remote_addr		122512	0					
ANR	123898	Identifier	i		122512	1					
ANR	123899	Identifier	port		122512	1					
ANR	123900	IfStatement	if ( plugin != NULL )		122512	2					
ANR	123901	Condition	plugin != NULL	1090:12:31876:31889	122512	0	True				
ANR	123902	EqualityExpression	plugin != NULL		122512	0		!=			
ANR	123903	Identifier	plugin		122512	0					
ANR	123904	Identifier	NULL		122512	1					
ANR	123905	CompoundStatement		332:28:9252:9252	122512	1					
ANR	123906	ExpressionStatement	host = plugin_host	1091:12:31906:31924	122512	0	True				
ANR	123907	AssignmentExpression	host = plugin_host		122512	0		=			
ANR	123908	Identifier	host		122512	0					
ANR	123909	Identifier	plugin_host		122512	1					
ANR	123910	ExpressionStatement	port = plugin_port	1092:12:31938:31956	122512	1	True				
ANR	123911	AssignmentExpression	port = plugin_port		122512	0		=			
ANR	123912	Identifier	port		122512	0					
ANR	123913	Identifier	plugin_port		122512	1					
ANR	123914	IdentifierDeclStatement	struct sockaddr_storage * storage = ss_malloc ( sizeof ( struct sockaddr_storage ) ) ;	1094:8:31976:32053	122512	3	True				
ANR	123915	IdentifierDecl	* storage = ss_malloc ( sizeof ( struct sockaddr_storage ) )		122512	0					
ANR	123916	IdentifierDeclType	struct sockaddr_storage *		122512	0					
ANR	123917	Identifier	storage		122512	1					
ANR	123918	AssignmentExpression	* storage = ss_malloc ( sizeof ( struct sockaddr_storage ) )		122512	2		=			
ANR	123919	Identifier	storage		122512	0					
ANR	123920	CallExpression	ss_malloc ( sizeof ( struct sockaddr_storage ) )		122512	1					
ANR	123921	Callee	ss_malloc		122512	0					
ANR	123922	Identifier	ss_malloc		122512	0					
ANR	123923	ArgumentList	sizeof ( struct sockaddr_storage )		122512	1					
ANR	123924	Argument	sizeof ( struct sockaddr_storage )		122512	0					
ANR	123925	SizeofExpression	sizeof ( struct sockaddr_storage )		122512	0					
ANR	123926	Sizeof	sizeof		122512	0					
ANR	123927	SizeofOperand	struct sockaddr_storage		122512	1					
ANR	123928	ExpressionStatement	"memset ( storage , 0 , sizeof ( struct sockaddr_storage ) )"	1095:8:32063:32114	122512	4	True				
ANR	123929	CallExpression	"memset ( storage , 0 , sizeof ( struct sockaddr_storage ) )"		122512	0					
ANR	123930	Callee	memset		122512	0					
ANR	123931	Identifier	memset		122512	0					
ANR	123932	ArgumentList	storage		122512	1					
ANR	123933	Argument	storage		122512	0					
ANR	123934	Identifier	storage		122512	0					
ANR	123935	Argument	0		122512	1					
ANR	123936	PrimaryExpression	0		122512	0					
ANR	123937	Argument	sizeof ( struct sockaddr_storage )		122512	2					
ANR	123938	SizeofExpression	sizeof ( struct sockaddr_storage )		122512	0					
ANR	123939	Sizeof	sizeof		122512	0					
ANR	123940	SizeofOperand	struct sockaddr_storage		122512	1					
ANR	123941	IfStatement	"if ( get_sockaddr ( host , port , storage , 1 , ipv6first ) == - 1 )"		122512	5					
ANR	123942	Condition	"get_sockaddr ( host , port , storage , 1 , ipv6first ) == - 1"	1096:12:32128:32180	122512	0	True				
ANR	123943	EqualityExpression	"get_sockaddr ( host , port , storage , 1 , ipv6first ) == - 1"		122512	0		==			
ANR	123944	CallExpression	"get_sockaddr ( host , port , storage , 1 , ipv6first )"		122512	0					
ANR	123945	Callee	get_sockaddr		122512	0					
ANR	123946	Identifier	get_sockaddr		122512	0					
ANR	123947	ArgumentList	host		122512	1					
ANR	123948	Argument	host		122512	0					
ANR	123949	Identifier	host		122512	0					
ANR	123950	Argument	port		122512	1					
ANR	123951	Identifier	port		122512	0					
ANR	123952	Argument	storage		122512	2					
ANR	123953	Identifier	storage		122512	0					
ANR	123954	Argument	1		122512	3					
ANR	123955	PrimaryExpression	1		122512	0					
ANR	123956	Argument	ipv6first		122512	4					
ANR	123957	Identifier	ipv6first		122512	0					
ANR	123958	UnaryOperationExpression	- 1		122512	1					
ANR	123959	UnaryOperator	-		122512	0					
ANR	123960	PrimaryExpression	1		122512	1					
ANR	123961	CompoundStatement		338:67:9543:9543	122512	1					
ANR	123962	ExpressionStatement	"FATAL ( ""failed to resolve the provided hostname"" )"	1097:12:32197:32245	122512	0	True				
ANR	123963	CallExpression	"FATAL ( ""failed to resolve the provided hostname"" )"		122512	0					
ANR	123964	Callee	FATAL		122512	0					
ANR	123965	Identifier	FATAL		122512	0					
ANR	123966	ArgumentList	"""failed to resolve the provided hostname"""		122512	1					
ANR	123967	Argument	"""failed to resolve the provided hostname"""		122512	0					
ANR	123968	PrimaryExpression	"""failed to resolve the provided hostname"""		122512	0					
ANR	123969	ExpressionStatement	listen_ctx . remote_addr [ i ] = ( struct sockaddr * ) storage	1099:8:32265:32319	122512	6	True				
ANR	123970	AssignmentExpression	listen_ctx . remote_addr [ i ] = ( struct sockaddr * ) storage		122512	0		=			
ANR	123971	ArrayIndexing	listen_ctx . remote_addr [ i ]		122512	0					
ANR	123972	MemberAccess	listen_ctx . remote_addr		122512	0					
ANR	123973	Identifier	listen_ctx		122512	0					
ANR	123974	Identifier	remote_addr		122512	1					
ANR	123975	Identifier	i		122512	1					
ANR	123976	CastExpression	( struct sockaddr * ) storage		122512	1					
ANR	123977	CastTarget	struct sockaddr *		122512	0					
ANR	123978	Identifier	storage		122512	1					
ANR	123979	IfStatement	if ( plugin != NULL )		122512	7					
ANR	123980	Condition	plugin != NULL	1101:12:32334:32347	122512	0	True				
ANR	123981	EqualityExpression	plugin != NULL		122512	0		!=			
ANR	123982	Identifier	plugin		122512	0					
ANR	123983	Identifier	NULL		122512	1					
ANR	123984	BreakStatement	break ;	1101:28:32350:32355	122512	1	True				
ANR	123985	ExpressionStatement	listen_ctx . timeout = atoi ( timeout )	1103:4:32367:32401	122512	67	True				
ANR	123986	AssignmentExpression	listen_ctx . timeout = atoi ( timeout )		122512	0		=			
ANR	123987	MemberAccess	listen_ctx . timeout		122512	0					
ANR	123988	Identifier	listen_ctx		122512	0					
ANR	123989	Identifier	timeout		122512	1					
ANR	123990	CallExpression	atoi ( timeout )		122512	1					
ANR	123991	Callee	atoi		122512	0					
ANR	123992	Identifier	atoi		122512	0					
ANR	123993	ArgumentList	timeout		122512	1					
ANR	123994	Argument	timeout		122512	0					
ANR	123995	Identifier	timeout		122512	0					
ANR	123996	ExpressionStatement	listen_ctx . iface = iface	1104:4:32407:32433	122512	68	True				
ANR	123997	AssignmentExpression	listen_ctx . iface = iface		122512	0		=			
ANR	123998	MemberAccess	listen_ctx . iface		122512	0					
ANR	123999	Identifier	listen_ctx		122512	0					
ANR	124000	Identifier	iface		122512	1					
ANR	124001	Identifier	iface		122512	1					
ANR	124002	ExpressionStatement	listen_ctx . mptcp = mptcp	1105:4:32439:32465	122512	69	True				
ANR	124003	AssignmentExpression	listen_ctx . mptcp = mptcp		122512	0		=			
ANR	124004	MemberAccess	listen_ctx . mptcp		122512	0					
ANR	124005	Identifier	listen_ctx		122512	0					
ANR	124006	Identifier	mptcp		122512	1					
ANR	124007	Identifier	mptcp		122512	1					
ANR	124008	IdentifierDeclStatement	struct ev_loop * loop = EV_DEFAULT ;	1107:4:32472:32505	122512	70	True				
ANR	124009	IdentifierDecl	* loop = EV_DEFAULT		122512	0					
ANR	124010	IdentifierDeclType	struct ev_loop *		122512	0					
ANR	124011	Identifier	loop		122512	1					
ANR	124012	AssignmentExpression	* loop = EV_DEFAULT		122512	2		=			
ANR	124013	Identifier	EV_DEFAULT		122512	0					
ANR	124014	Identifier	EV_DEFAULT		122512	1					
ANR	124015	IfStatement	if ( mode != UDP_ONLY )		122512	71					
ANR	124016	Condition	mode != UDP_ONLY	1109:8:32516:32531	122512	0	True				
ANR	124017	EqualityExpression	mode != UDP_ONLY		122512	0		!=			
ANR	124018	Identifier	mode		122512	0					
ANR	124019	Identifier	UDP_ONLY		122512	1					
ANR	124020	CompoundStatement		353:8:9928:9940	122512	1					
ANR	124021	IdentifierDeclStatement	int listenfd ;	1111:8:32568:32580	122512	0	True				
ANR	124022	IdentifierDecl	listenfd		122512	0					
ANR	124023	IdentifierDeclType	int		122512	0					
ANR	124024	Identifier	listenfd		122512	1					
ANR	124025	ExpressionStatement	"listenfd = create_and_bind ( local_addr , local_port )"	1112:8:32590:32640	122512	1	True				
ANR	124026	AssignmentExpression	"listenfd = create_and_bind ( local_addr , local_port )"		122512	0		=			
ANR	124027	Identifier	listenfd		122512	0					
ANR	124028	CallExpression	"create_and_bind ( local_addr , local_port )"		122512	1					
ANR	124029	Callee	create_and_bind		122512	0					
ANR	124030	Identifier	create_and_bind		122512	0					
ANR	124031	ArgumentList	local_addr		122512	1					
ANR	124032	Argument	local_addr		122512	0					
ANR	124033	Identifier	local_addr		122512	0					
ANR	124034	Argument	local_port		122512	1					
ANR	124035	Identifier	local_port		122512	0					
ANR	124036	IfStatement	if ( listenfd == - 1 )		122512	2					
ANR	124037	Condition	listenfd == - 1	1113:12:32654:32667	122512	0	True				
ANR	124038	EqualityExpression	listenfd == - 1		122512	0		==			
ANR	124039	Identifier	listenfd		122512	0					
ANR	124040	UnaryOperationExpression	- 1		122512	1					
ANR	124041	UnaryOperator	-		122512	0					
ANR	124042	PrimaryExpression	1		122512	1					
ANR	124043	CompoundStatement		355:28:10030:10030	122512	1					
ANR	124044	ExpressionStatement	"FATAL ( ""bind() error"" )"	1114:12:32684:32705	122512	0	True				
ANR	124045	CallExpression	"FATAL ( ""bind() error"" )"		122512	0					
ANR	124046	Callee	FATAL		122512	0					
ANR	124047	Identifier	FATAL		122512	0					
ANR	124048	ArgumentList	"""bind() error"""		122512	1					
ANR	124049	Argument	"""bind() error"""		122512	0					
ANR	124050	PrimaryExpression	"""bind() error"""		122512	0					
ANR	124051	IfStatement	"if ( listen ( listenfd , SOMAXCONN ) == - 1 )"		122512	3					
ANR	124052	Condition	"listen ( listenfd , SOMAXCONN ) == - 1"	1116:12:32729:32761	122512	0	True				
ANR	124053	EqualityExpression	"listen ( listenfd , SOMAXCONN ) == - 1"		122512	0		==			
ANR	124054	CallExpression	"listen ( listenfd , SOMAXCONN )"		122512	0					
ANR	124055	Callee	listen		122512	0					
ANR	124056	Identifier	listen		122512	0					
ANR	124057	ArgumentList	listenfd		122512	1					
ANR	124058	Argument	listenfd		122512	0					
ANR	124059	Identifier	listenfd		122512	0					
ANR	124060	Argument	SOMAXCONN		122512	1					
ANR	124061	Identifier	SOMAXCONN		122512	0					
ANR	124062	UnaryOperationExpression	- 1		122512	1					
ANR	124063	UnaryOperator	-		122512	0					
ANR	124064	PrimaryExpression	1		122512	1					
ANR	124065	CompoundStatement		358:47:10124:10124	122512	1					
ANR	124066	ExpressionStatement	"FATAL ( ""listen() error"" )"	1117:12:32778:32801	122512	0	True				
ANR	124067	CallExpression	"FATAL ( ""listen() error"" )"		122512	0					
ANR	124068	Callee	FATAL		122512	0					
ANR	124069	Identifier	FATAL		122512	0					
ANR	124070	ArgumentList	"""listen() error"""		122512	1					
ANR	124071	Argument	"""listen() error"""		122512	0					
ANR	124072	PrimaryExpression	"""listen() error"""		122512	0					
ANR	124073	ExpressionStatement	setnonblocking ( listenfd )	1119:8:32821:32845	122512	4	True				
ANR	124074	CallExpression	setnonblocking ( listenfd )		122512	0					
ANR	124075	Callee	setnonblocking		122512	0					
ANR	124076	Identifier	setnonblocking		122512	0					
ANR	124077	ArgumentList	listenfd		122512	1					
ANR	124078	Argument	listenfd		122512	0					
ANR	124079	Identifier	listenfd		122512	0					
ANR	124080	ExpressionStatement	listen_ctx . fd = listenfd	1121:8:32856:32880	122512	5	True				
ANR	124081	AssignmentExpression	listen_ctx . fd = listenfd		122512	0		=			
ANR	124082	MemberAccess	listen_ctx . fd		122512	0					
ANR	124083	Identifier	listen_ctx		122512	0					
ANR	124084	Identifier	fd		122512	1					
ANR	124085	Identifier	listenfd		122512	1					
ANR	124086	ExpressionStatement	"ev_io_init ( & listen_ctx . io , accept_cb , listenfd , EV_READ )"	1123:8:32891:32947	122512	6	True				
ANR	124087	CallExpression	"ev_io_init ( & listen_ctx . io , accept_cb , listenfd , EV_READ )"		122512	0					
ANR	124088	Callee	ev_io_init		122512	0					
ANR	124089	Identifier	ev_io_init		122512	0					
ANR	124090	ArgumentList	& listen_ctx . io		122512	1					
ANR	124091	Argument	& listen_ctx . io		122512	0					
ANR	124092	UnaryOperationExpression	& listen_ctx . io		122512	0					
ANR	124093	UnaryOperator	&		122512	0					
ANR	124094	MemberAccess	listen_ctx . io		122512	1					
ANR	124095	Identifier	listen_ctx		122512	0					
ANR	124096	Identifier	io		122512	1					
ANR	124097	Argument	accept_cb		122512	1					
ANR	124098	Identifier	accept_cb		122512	0					
ANR	124099	Argument	listenfd		122512	2					
ANR	124100	Identifier	listenfd		122512	0					
ANR	124101	Argument	EV_READ		122512	3					
ANR	124102	Identifier	EV_READ		122512	0					
ANR	124103	ExpressionStatement	"ev_io_start ( loop , & listen_ctx . io )"	1124:8:32957:32990	122512	7	True				
ANR	124104	CallExpression	"ev_io_start ( loop , & listen_ctx . io )"		122512	0					
ANR	124105	Callee	ev_io_start		122512	0					
ANR	124106	Identifier	ev_io_start		122512	0					
ANR	124107	ArgumentList	loop		122512	1					
ANR	124108	Argument	loop		122512	0					
ANR	124109	Identifier	loop		122512	0					
ANR	124110	Argument	& listen_ctx . io		122512	1					
ANR	124111	UnaryOperationExpression	& listen_ctx . io		122512	0					
ANR	124112	UnaryOperator	&		122512	0					
ANR	124113	MemberAccess	listen_ctx . io		122512	1					
ANR	124114	Identifier	listen_ctx		122512	0					
ANR	124115	Identifier	io		122512	1					
ANR	124116	IfStatement	if ( mode != TCP_ONLY )		122512	72					
ANR	124117	Condition	mode != TCP_ONLY	1128:8:33024:33039	122512	0	True				
ANR	124118	EqualityExpression	mode != TCP_ONLY		122512	0		!=			
ANR	124119	Identifier	mode		122512	0					
ANR	124120	Identifier	TCP_ONLY		122512	1					
ANR	124121	CompoundStatement		379:8:10864:10914	122512	1					
ANR	124122	ExpressionStatement	"LOGI ( ""UDP relay enabled"" )"	1129:8:33052:33077	122512	0	True				
ANR	124123	CallExpression	"LOGI ( ""UDP relay enabled"" )"		122512	0					
ANR	124124	Callee	LOGI		122512	0					
ANR	124125	Identifier	LOGI		122512	0					
ANR	124126	ArgumentList	"""UDP relay enabled"""		122512	1					
ANR	124127	Argument	"""UDP relay enabled"""		122512	0					
ANR	124128	PrimaryExpression	"""UDP relay enabled"""		122512	0					
ANR	124129	IdentifierDeclStatement	char * host = remote_addr [ 0 ] . host ;	1130:8:33087:33119	122512	1	True				
ANR	124130	IdentifierDecl	* host = remote_addr [ 0 ] . host		122512	0					
ANR	124131	IdentifierDeclType	char *		122512	0					
ANR	124132	Identifier	host		122512	1					
ANR	124133	AssignmentExpression	* host = remote_addr [ 0 ] . host		122512	2		=			
ANR	124134	Identifier	host		122512	0					
ANR	124135	MemberAccess	remote_addr [ 0 ] . host		122512	1					
ANR	124136	ArrayIndexing	remote_addr [ 0 ]		122512	0					
ANR	124137	Identifier	remote_addr		122512	0					
ANR	124138	PrimaryExpression	0		122512	1					
ANR	124139	Identifier	host		122512	1					
ANR	124140	IdentifierDeclStatement	char * port = remote_addr [ 0 ] . port == NULL ? remote_port : remote_addr [ 0 ] . port ;	1131:8:33129:33205	122512	2	True				
ANR	124141	IdentifierDecl	* port = remote_addr [ 0 ] . port == NULL ? remote_port : remote_addr [ 0 ] . port		122512	0					
ANR	124142	IdentifierDeclType	char *		122512	0					
ANR	124143	Identifier	port		122512	1					
ANR	124144	AssignmentExpression	* port = remote_addr [ 0 ] . port == NULL ? remote_port : remote_addr [ 0 ] . port		122512	2		=			
ANR	124145	Identifier	port		122512	0					
ANR	124146	ConditionalExpression	remote_addr [ 0 ] . port == NULL ? remote_port : remote_addr [ 0 ] . port		122512	1					
ANR	124147	Condition	remote_addr [ 0 ] . port == NULL		122512	0					
ANR	124148	EqualityExpression	remote_addr [ 0 ] . port == NULL		122512	0		==			
ANR	124149	MemberAccess	remote_addr [ 0 ] . port		122512	0					
ANR	124150	ArrayIndexing	remote_addr [ 0 ]		122512	0					
ANR	124151	Identifier	remote_addr		122512	0					
ANR	124152	PrimaryExpression	0		122512	1					
ANR	124153	Identifier	port		122512	1					
ANR	124154	Identifier	NULL		122512	1					
ANR	124155	Identifier	remote_port		122512	1					
ANR	124156	MemberAccess	remote_addr [ 0 ] . port		122512	2					
ANR	124157	ArrayIndexing	remote_addr [ 0 ]		122512	0					
ANR	124158	Identifier	remote_addr		122512	0					
ANR	124159	PrimaryExpression	0		122512	1					
ANR	124160	Identifier	port		122512	1					
ANR	124161	IdentifierDeclStatement	struct sockaddr_storage * storage = ss_malloc ( sizeof ( struct sockaddr_storage ) ) ;	1132:8:33215:33292	122512	3	True				
ANR	124162	IdentifierDecl	* storage = ss_malloc ( sizeof ( struct sockaddr_storage ) )		122512	0					
ANR	124163	IdentifierDeclType	struct sockaddr_storage *		122512	0					
ANR	124164	Identifier	storage		122512	1					
ANR	124165	AssignmentExpression	* storage = ss_malloc ( sizeof ( struct sockaddr_storage ) )		122512	2		=			
ANR	124166	Identifier	storage		122512	0					
ANR	124167	CallExpression	ss_malloc ( sizeof ( struct sockaddr_storage ) )		122512	1					
ANR	124168	Callee	ss_malloc		122512	0					
ANR	124169	Identifier	ss_malloc		122512	0					
ANR	124170	ArgumentList	sizeof ( struct sockaddr_storage )		122512	1					
ANR	124171	Argument	sizeof ( struct sockaddr_storage )		122512	0					
ANR	124172	SizeofExpression	sizeof ( struct sockaddr_storage )		122512	0					
ANR	124173	Sizeof	sizeof		122512	0					
ANR	124174	SizeofOperand	struct sockaddr_storage		122512	1					
ANR	124175	ExpressionStatement	"memset ( storage , 0 , sizeof ( struct sockaddr_storage ) )"	1133:8:33302:33353	122512	4	True				
ANR	124176	CallExpression	"memset ( storage , 0 , sizeof ( struct sockaddr_storage ) )"		122512	0					
ANR	124177	Callee	memset		122512	0					
ANR	124178	Identifier	memset		122512	0					
ANR	124179	ArgumentList	storage		122512	1					
ANR	124180	Argument	storage		122512	0					
ANR	124181	Identifier	storage		122512	0					
ANR	124182	Argument	0		122512	1					
ANR	124183	PrimaryExpression	0		122512	0					
ANR	124184	Argument	sizeof ( struct sockaddr_storage )		122512	2					
ANR	124185	SizeofExpression	sizeof ( struct sockaddr_storage )		122512	0					
ANR	124186	Sizeof	sizeof		122512	0					
ANR	124187	SizeofOperand	struct sockaddr_storage		122512	1					
ANR	124188	IfStatement	"if ( get_sockaddr ( host , port , storage , 1 , ipv6first ) == - 1 )"		122512	5					
ANR	124189	Condition	"get_sockaddr ( host , port , storage , 1 , ipv6first ) == - 1"	1134:12:33367:33419	122512	0	True				
ANR	124190	EqualityExpression	"get_sockaddr ( host , port , storage , 1 , ipv6first ) == - 1"		122512	0		==			
ANR	124191	CallExpression	"get_sockaddr ( host , port , storage , 1 , ipv6first )"		122512	0					
ANR	124192	Callee	get_sockaddr		122512	0					
ANR	124193	Identifier	get_sockaddr		122512	0					
ANR	124194	ArgumentList	host		122512	1					
ANR	124195	Argument	host		122512	0					
ANR	124196	Identifier	host		122512	0					
ANR	124197	Argument	port		122512	1					
ANR	124198	Identifier	port		122512	0					
ANR	124199	Argument	storage		122512	2					
ANR	124200	Identifier	storage		122512	0					
ANR	124201	Argument	1		122512	3					
ANR	124202	PrimaryExpression	1		122512	0					
ANR	124203	Argument	ipv6first		122512	4					
ANR	124204	Identifier	ipv6first		122512	0					
ANR	124205	UnaryOperationExpression	- 1		122512	1					
ANR	124206	UnaryOperator	-		122512	0					
ANR	124207	PrimaryExpression	1		122512	1					
ANR	124208	CompoundStatement		376:67:10782:10782	122512	1					
ANR	124209	ExpressionStatement	"FATAL ( ""failed to resolve the provided hostname"" )"	1135:12:33436:33484	122512	0	True				
ANR	124210	CallExpression	"FATAL ( ""failed to resolve the provided hostname"" )"		122512	0					
ANR	124211	Callee	FATAL		122512	0					
ANR	124212	Identifier	FATAL		122512	0					
ANR	124213	ArgumentList	"""failed to resolve the provided hostname"""		122512	1					
ANR	124214	Argument	"""failed to resolve the provided hostname"""		122512	0					
ANR	124215	PrimaryExpression	"""failed to resolve the provided hostname"""		122512	0					
ANR	124216	IdentifierDeclStatement	struct sockaddr * addr = ( struct sockaddr * ) storage ;	1137:8:33504:33554	122512	6	True				
ANR	124217	IdentifierDecl	* addr = ( struct sockaddr * ) storage		122512	0					
ANR	124218	IdentifierDeclType	struct sockaddr *		122512	0					
ANR	124219	Identifier	addr		122512	1					
ANR	124220	AssignmentExpression	* addr = ( struct sockaddr * ) storage		122512	2		=			
ANR	124221	Identifier	addr		122512	0					
ANR	124222	CastExpression	( struct sockaddr * ) storage		122512	1					
ANR	124223	CastTarget	struct sockaddr *		122512	0					
ANR	124224	Identifier	storage		122512	1					
ANR	124225	ExpressionStatement	"init_udprelay ( local_addr , local_port , addr , get_sockaddr_len ( addr ) , tunnel_addr , mtu , crypto , listen_ctx . timeout , iface )"	1138:8:33564:33700	122512	7	True				
ANR	124226	CallExpression	"init_udprelay ( local_addr , local_port , addr , get_sockaddr_len ( addr ) , tunnel_addr , mtu , crypto , listen_ctx . timeout , iface )"		122512	0					
ANR	124227	Callee	init_udprelay		122512	0					
ANR	124228	Identifier	init_udprelay		122512	0					
ANR	124229	ArgumentList	local_addr		122512	1					
ANR	124230	Argument	local_addr		122512	0					
ANR	124231	Identifier	local_addr		122512	0					
ANR	124232	Argument	local_port		122512	1					
ANR	124233	Identifier	local_port		122512	0					
ANR	124234	Argument	addr		122512	2					
ANR	124235	Identifier	addr		122512	0					
ANR	124236	Argument	get_sockaddr_len ( addr )		122512	3					
ANR	124237	CallExpression	get_sockaddr_len ( addr )		122512	0					
ANR	124238	Callee	get_sockaddr_len		122512	0					
ANR	124239	Identifier	get_sockaddr_len		122512	0					
ANR	124240	ArgumentList	addr		122512	1					
ANR	124241	Argument	addr		122512	0					
ANR	124242	Identifier	addr		122512	0					
ANR	124243	Argument	tunnel_addr		122512	4					
ANR	124244	Identifier	tunnel_addr		122512	0					
ANR	124245	Argument	mtu		122512	5					
ANR	124246	Identifier	mtu		122512	0					
ANR	124247	Argument	crypto		122512	6					
ANR	124248	Identifier	crypto		122512	0					
ANR	124249	Argument	listen_ctx . timeout		122512	7					
ANR	124250	MemberAccess	listen_ctx . timeout		122512	0					
ANR	124251	Identifier	listen_ctx		122512	0					
ANR	124252	Identifier	timeout		122512	1					
ANR	124253	Argument	iface		122512	8					
ANR	124254	Identifier	iface		122512	0					
ANR	124255	IfStatement	if ( mode == UDP_ONLY )		122512	73					
ANR	124256	Condition	mode == UDP_ONLY	1142:8:33717:33732	122512	0	True				
ANR	124257	EqualityExpression	mode == UDP_ONLY		122512	0		==			
ANR	124258	Identifier	mode		122512	0					
ANR	124259	Identifier	UDP_ONLY		122512	1					
ANR	124260	CompoundStatement		384:26:11095:11095	122512	1					
ANR	124261	ExpressionStatement	"LOGI ( ""TCP relay disabled"" )"	1143:8:33745:33771	122512	0	True				
ANR	124262	CallExpression	"LOGI ( ""TCP relay disabled"" )"		122512	0					
ANR	124263	Callee	LOGI		122512	0					
ANR	124264	Identifier	LOGI		122512	0					
ANR	124265	ArgumentList	"""TCP relay disabled"""		122512	1					
ANR	124266	Argument	"""TCP relay disabled"""		122512	0					
ANR	124267	PrimaryExpression	"""TCP relay disabled"""		122512	0					
ANR	124268	ExpressionStatement	"LOGI ( ""listening at %s:%s"" , local_addr , local_port )"	1146:4:33784:33834	122512	74	True				
ANR	124269	CallExpression	"LOGI ( ""listening at %s:%s"" , local_addr , local_port )"		122512	0					
ANR	124270	Callee	LOGI		122512	0					
ANR	124271	Identifier	LOGI		122512	0					
ANR	124272	ArgumentList	"""listening at %s:%s"""		122512	1					
ANR	124273	Argument	"""listening at %s:%s"""		122512	0					
ANR	124274	PrimaryExpression	"""listening at %s:%s"""		122512	0					
ANR	124275	Argument	local_addr		122512	1					
ANR	124276	Identifier	local_addr		122512	0					
ANR	124277	Argument	local_port		122512	2					
ANR	124278	Identifier	local_port		122512	0					
ANR	124279	IfStatement	if ( user != NULL && ! run_as ( user ) )		122512	75					
ANR	124280	Condition	user != NULL && ! run_as ( user )	1149:8:33859:33887	122512	0	True				
ANR	124281	AndExpression	user != NULL && ! run_as ( user )		122512	0		&&			
ANR	124282	EqualityExpression	user != NULL		122512	0		!=			
ANR	124283	Identifier	user		122512	0					
ANR	124284	Identifier	NULL		122512	1					
ANR	124285	UnaryOperationExpression	! run_as ( user )		122512	1					
ANR	124286	UnaryOperator	!		122512	0					
ANR	124287	CallExpression	run_as ( user )		122512	1					
ANR	124288	Callee	run_as		122512	0					
ANR	124289	Identifier	run_as		122512	0					
ANR	124290	ArgumentList	user		122512	1					
ANR	124291	Argument	user		122512	0					
ANR	124292	Identifier	user		122512	0					
ANR	124293	CompoundStatement		391:39:11250:11250	122512	1					
ANR	124294	ExpressionStatement	"FATAL ( ""failed to switch user"" )"	1150:8:33900:33930	122512	0	True				
ANR	124295	CallExpression	"FATAL ( ""failed to switch user"" )"		122512	0					
ANR	124296	Callee	FATAL		122512	0					
ANR	124297	Identifier	FATAL		122512	0					
ANR	124298	ArgumentList	"""failed to switch user"""		122512	1					
ANR	124299	Argument	"""failed to switch user"""		122512	0					
ANR	124300	PrimaryExpression	"""failed to switch user"""		122512	0					
ANR	124301	IfStatement	if ( geteuid ( ) == 0 )		122512	76					
ANR	124302	Condition	geteuid ( ) == 0	1153:8:33947:33960	122512	0	True				
ANR	124303	EqualityExpression	geteuid ( ) == 0		122512	0		==			
ANR	124304	CallExpression	geteuid ( )		122512	0					
ANR	124305	Callee	geteuid		122512	0					
ANR	124306	Identifier	geteuid		122512	0					
ANR	124307	ArgumentList			122512	1					
ANR	124308	PrimaryExpression	0		122512	1					
ANR	124309	CompoundStatement		395:24:11323:11323	122512	1					
ANR	124310	ExpressionStatement	"LOGI ( ""running from root user"" )"	1154:8:33973:34003	122512	0	True				
ANR	124311	CallExpression	"LOGI ( ""running from root user"" )"		122512	0					
ANR	124312	Callee	LOGI		122512	0					
ANR	124313	Identifier	LOGI		122512	0					
ANR	124314	ArgumentList	"""running from root user"""		122512	1					
ANR	124315	Argument	"""running from root user"""		122512	0					
ANR	124316	PrimaryExpression	"""running from root user"""		122512	0					
ANR	124317	ExpressionStatement	"ev_run ( loop , 0 )"	1157:4:34016:34031	122512	77	True				
ANR	124318	CallExpression	"ev_run ( loop , 0 )"		122512	0					
ANR	124319	Callee	ev_run		122512	0					
ANR	124320	Identifier	ev_run		122512	0					
ANR	124321	ArgumentList	loop		122512	1					
ANR	124322	Argument	loop		122512	0					
ANR	124323	Identifier	loop		122512	0					
ANR	124324	Argument	0		122512	1					
ANR	124325	PrimaryExpression	0		122512	0					
ANR	124326	IfStatement	if ( plugin != NULL )		122512	78					
ANR	124327	Condition	plugin != NULL	1159:8:34042:34055	122512	0	True				
ANR	124328	EqualityExpression	plugin != NULL		122512	0		!=			
ANR	124329	Identifier	plugin		122512	0					
ANR	124330	Identifier	NULL		122512	1					
ANR	124331	CompoundStatement		401:24:11418:11418	122512	1					
ANR	124332	ExpressionStatement	stop_plugin ( )	1160:8:34068:34081	122512	0	True				
ANR	124333	CallExpression	stop_plugin ( )		122512	0					
ANR	124334	Callee	stop_plugin		122512	0					
ANR	124335	Identifier	stop_plugin		122512	0					
ANR	124336	ArgumentList			122512	1					
ANR	124337	ReturnStatement	return 0 ;	1163:4:34094:34102	122512	79	True				
ANR	124338	PrimaryExpression	0		122512	0					
ANR	124339	ReturnType	int		122512	1					
ANR	124340	Identifier	main		122512	2					
ANR	124341	ParameterList	"int argc , char * * argv"		122512	3					
ANR	124342	Parameter	int argc	758:5:22616:22623	122512	0	True				
ANR	124343	ParameterType	int		122512	0					
ANR	124344	Identifier	argc		122512	1					
ANR	124345	Parameter	char * * argv	758:15:22626:22636	122512	1	True				
ANR	124346	ParameterType	char * *		122512	0					
ANR	124347	Identifier	argv		122512	1					
ANR	124348	CFGEntryNode	ENTRY		122512		True				
ANR	124349	CFGExitNode	EXIT		122512		True				
ANR	124350	Symbol	optarg		122512						
ANR	124351	Symbol	conf		122512						
ANR	124352	Symbol	* remote_addr		122512						
ANR	124353	Symbol	GETOPT_VAL_PASSWORD		122512						
ANR	124354	Symbol	password		122512						
ANR	124355	Symbol	GETOPT_VAL_PLUGIN_OPTS		122512						
ANR	124356	Symbol	* remote_num		122512						
ANR	124357	Symbol	len		122512						
ANR	124358	Symbol	tunnel_addr . port		122512						
ANR	124359	Symbol	remote_addr [ 0 ] . host		122512						
ANR	124360	Symbol	opterr		122512						
ANR	124361	Symbol	GETOPT_VAL_KEY		122512						
ANR	124362	Symbol	remote_num		122512						
ANR	124363	Symbol	get_sockaddr		122512						
ANR	124364	Symbol	method		122512						
ANR	124365	Symbol	SIG_IGN		122512						
ANR	124366	Symbol	conf -> remote_port		122512						
ANR	124367	Symbol	conf -> local_addr		122512						
ANR	124368	Symbol	conf -> plugin_opts		122512						
ANR	124369	Symbol	MAX_REMOTE_NUM		122512						
ANR	124370	Symbol	accept_cb		122512						
ANR	124371	Symbol	tmp_port		122512						
ANR	124372	Symbol	GETOPT_VAL_PLUGIN		122512						
ANR	124373	Symbol	TCP_AND_UDP		122512						
ANR	124374	Symbol	EXIT_FAILURE		122512						
ANR	124375	Symbol	EXIT_SUCCESS		122512						
ANR	124376	Symbol	conf -> tunnel_address		122512						
ANR	124377	Symbol	UDP_ONLY		122512						
ANR	124378	Symbol	* * conf		122512						
ANR	124379	Symbol	conf -> mptcp		122512						
ANR	124380	Symbol	listen_ctx . timeout		122512						
ANR	124381	Symbol	run_as		122512						
ANR	124382	Symbol	EV_READ		122512						
ANR	124383	Symbol	plugin_host		122512						
ANR	124384	Symbol	conf -> mtu		122512						
ANR	124385	Symbol	conf -> plugin		122512						
ANR	124386	Symbol	listen_ctx . tunnel_addr		122512						
ANR	124387	Symbol	GETOPT_VAL_REUSE_PORT		122512						
ANR	124388	Symbol	GETOPT_VAL_NODELAY		122512						
ANR	124389	Symbol	SOMAXCONN		122512						
ANR	124390	Symbol	pid_path		122512						
ANR	124391	Symbol	key		122512						
ANR	124392	Symbol	atoi		122512						
ANR	124393	Symbol	conf -> method		122512						
ANR	124394	Symbol	c		122512						
ANR	124395	Symbol	conf -> reuse_port		122512						
ANR	124396	Symbol	create_and_bind		122512						
ANR	124397	Symbol	err		122512						
ANR	124398	Symbol	get_sockaddr_len		122512						
ANR	124399	Symbol	getopt_long		122512						
ANR	124400	Symbol	local_port		122512						
ANR	124401	Symbol	remote_port		122512						
ANR	124402	Symbol	i		122512						
ANR	124403	Symbol	remote_addr [ remote_num ++ ] . port		122512						
ANR	124404	Symbol	mptcp		122512						
ANR	124405	Symbol	DEFAULT_CONF_PATH		122512						
ANR	124406	Symbol	SIGABRT		122512						
ANR	124407	Symbol	TCP_ONLY		122512						
ANR	124408	Symbol	conf -> timeout		122512						
ANR	124409	Symbol	verbose		122512						
ANR	124410	Symbol	plugin_port		122512						
ANR	124411	Symbol	plugin		122512						
ANR	124412	Symbol	* conf -> remote_addr		122512						
ANR	124413	Symbol	conf -> password		122512						
ANR	124414	Symbol	ss_malloc		122512						
ANR	124415	Symbol	conf -> remote_num		122512						
ANR	124416	Symbol	listen_ctx . mptcp		122512						
ANR	124417	Symbol	conf -> nofile		122512						
ANR	124418	Symbol	ipv6first		122512						
ANR	124419	Symbol	tunnel_addr_str		122512						
ANR	124420	Symbol	* argv		122512						
ANR	124421	Symbol	tunnel_addr		122512						
ANR	124422	Symbol	required_argument		122512						
ANR	124423	Symbol	listen		122512						
ANR	124424	Symbol	MODE_CLIENT		122512						
ANR	124425	Symbol	mode		122512						
ANR	124426	Symbol	conf -> remote_addr		122512						
ANR	124427	Symbol	strlen		122512						
ANR	124428	Symbol	long_options		122512						
ANR	124429	Symbol	conf -> local_port		122512						
ANR	124430	Symbol	remote_addr [ i ] . host		122512						
ANR	124431	Symbol	loop		122512						
ANR	124432	Symbol	listen_ctx . remote_num		122512						
ANR	124433	Symbol	conf -> key		122512						
ANR	124434	Symbol	host		122512						
ANR	124435	Symbol	SIGPIPE		122512						
ANR	124436	Symbol	get_local_port		122512						
ANR	124437	Symbol	NULL		122512						
ANR	124438	Symbol	EV_DEFAULT		122512						
ANR	124439	Symbol	listen_ctx . iface		122512						
ANR	124440	Symbol	buf_size		122512						
ANR	124441	Symbol	& listen_ctx . io		122512						
ANR	124442	Symbol	geteuid		122512						
ANR	124443	Symbol	GETOPT_VAL_HELP		122512						
ANR	124444	Symbol	remote_str		122512						
ANR	124445	Symbol	mtu		122512						
ANR	124446	Symbol	signal_cb		122512						
ANR	124447	Symbol	crypto		122512						
ANR	124448	Symbol	& sigterm_watcher		122512						
ANR	124449	Symbol	iface		122512						
ANR	124450	Symbol	read_jconf		122512						
ANR	124451	Symbol	* listen_ctx		122512						
ANR	124452	Symbol	listen_ctx		122512						
ANR	124453	Symbol	port		122512						
ANR	124454	Symbol	SIGINT		122512						
ANR	124455	Symbol	conf -> mode		122512						
ANR	124456	Symbol	no_argument		122512						
ANR	124457	Symbol	nofile		122512						
ANR	124458	Symbol	reuse_port		122512						
ANR	124459	Symbol	& sigchld_watcher		122512						
ANR	124460	Symbol	GETOPT_VAL_MPTCP		122512						
ANR	124461	Symbol	& sigint_watcher		122512						
ANR	124462	Symbol	remote_addr [ 0 ] . port		122512						
ANR	124463	Symbol	remote_addr [ remote_num ] . host		122512						
ANR	124464	Symbol	* conf		122512						
ANR	124465	Symbol	start_plugin		122512						
ANR	124466	Symbol	storage		122512						
ANR	124467	Symbol	argv		122512						
ANR	124468	Symbol	conf -> user		122512						
ANR	124469	Symbol	timeout		122512						
ANR	124470	Symbol	* listen_ctx . remote_addr		122512						
ANR	124471	Symbol	plugin_opts		122512						
ANR	124472	Symbol	listen_ctx . fd		122512						
ANR	124473	Symbol	SIGTERM		122512						
ANR	124474	Symbol	addr		122512						
ANR	124475	Symbol	argc		122512						
ANR	124476	Symbol	remote_addr		122512						
ANR	124477	Symbol	conf_path		122512						
ANR	124478	Symbol	crypto_init		122512						
ANR	124479	Symbol	& tunnel_addr		122512						
ANR	124480	Symbol	no_delay		122512						
ANR	124481	Symbol	GETOPT_VAL_MTU		122512						
ANR	124482	Symbol	local_addr		122512						
ANR	124483	Symbol	SIGCHLD		122512						
ANR	124484	Symbol	* i		122512						
ANR	124485	Symbol	pid_flags		122512						
ANR	124486	Symbol	vpn		122512						
ANR	124487	Symbol	remote_addr [ i ] . port		122512						
ANR	124488	Symbol	& listen_ctx		122512						
ANR	124489	Symbol	listenfd		122512						
ANR	124490	Symbol	time		122512						
ANR	124491	Symbol	listen_ctx . remote_addr		122512						
ANR	124492	Symbol	user		122512						
