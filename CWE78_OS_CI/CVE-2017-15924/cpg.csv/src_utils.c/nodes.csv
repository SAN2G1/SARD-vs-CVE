command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	130167	File	data/converged/CVE-2017-15924_shadowsocks-libev/src_utils.c								
ANR	130168	DeclStmt									
ANR	130169	Decl							FILE	FILE *	logfile
ANR	130170	DeclStmt									
ANR	130171	Decl							int	int	use_syslog
ANR	130172	Function	ERROR	58:0:1351:1440							
ANR	130173	FunctionDef	ERROR (const char * s)		130172	0					
ANR	130174	CompoundStatement		60:0:1377:1440	130172	0					
ANR	130175	IdentifierDeclStatement	char * msg = strerror ( errno ) ;	61:4:1383:1410	130172	0	True				
ANR	130176	IdentifierDecl	* msg = strerror ( errno )		130172	0					
ANR	130177	IdentifierDeclType	char *		130172	0					
ANR	130178	Identifier	msg		130172	1					
ANR	130179	AssignmentExpression	* msg = strerror ( errno )		130172	2		=			
ANR	130180	Identifier	msg		130172	0					
ANR	130181	CallExpression	strerror ( errno )		130172	1					
ANR	130182	Callee	strerror		130172	0					
ANR	130183	Identifier	strerror		130172	0					
ANR	130184	ArgumentList	errno		130172	1					
ANR	130185	Argument	errno		130172	0					
ANR	130186	Identifier	errno		130172	0					
ANR	130187	ExpressionStatement	"LOGE ( ""%s: %s"" , s , msg )"	62:4:1416:1438	130172	1	True				
ANR	130188	CallExpression	"LOGE ( ""%s: %s"" , s , msg )"		130172	0					
ANR	130189	Callee	LOGE		130172	0					
ANR	130190	Identifier	LOGE		130172	0					
ANR	130191	ArgumentList	"""%s: %s"""		130172	1					
ANR	130192	Argument	"""%s: %s"""		130172	0					
ANR	130193	PrimaryExpression	"""%s: %s"""		130172	0					
ANR	130194	Argument	s		130172	1					
ANR	130195	Identifier	s		130172	0					
ANR	130196	Argument	msg		130172	2					
ANR	130197	Identifier	msg		130172	0					
ANR	130198	ReturnType	void		130172	1					
ANR	130199	Identifier	ERROR		130172	2					
ANR	130200	ParameterList	const char * s		130172	3					
ANR	130201	Parameter	const char * s	59:6:1362:1374	130172	0	True				
ANR	130202	ParameterType	const char *		130172	0					
ANR	130203	Identifier	s		130172	1					
ANR	130204	CFGEntryNode	ENTRY		130172		True				
ANR	130205	CFGExitNode	EXIT		130172		True				
ANR	130206	Symbol	msg		130172						
ANR	130207	Symbol	strerror		130172						
ANR	130208	Symbol	errno		130172						
ANR	130209	Symbol	s		130172						
ANR	130210	DeclStmt									
ANR	130211	Decl							int	int	use_tty
ANR	130212	Function	ss_itoa	67:0:1461:1959							
ANR	130213	FunctionDef	ss_itoa (int i)		130212	0					
ANR	130214	CompoundStatement		69:0:1483:1959	130212	0					
ANR	130215	Statement	static	71:4:1538:1543	130212	0	True				
ANR	130216	IdentifierDeclStatement	char buf [ INT_DIGITS + 2 ] ;	71:11:1545:1569	130212	1	True				
ANR	130217	IdentifierDecl	buf [ INT_DIGITS + 2 ]		130212	0					
ANR	130218	IdentifierDeclType	char [ INT_DIGITS + 2 ]		130212	0					
ANR	130219	Identifier	buf		130212	1					
ANR	130220	AdditiveExpression	INT_DIGITS + 2		130212	2		+			
ANR	130221	Identifier	INT_DIGITS		130212	0					
ANR	130222	PrimaryExpression	2		130212	1					
ANR	130223	IdentifierDeclStatement	char * p = buf + INT_DIGITS + 1 ;	72:4:1575:1605	130212	2	True				
ANR	130224	IdentifierDecl	* p = buf + INT_DIGITS + 1		130212	0					
ANR	130225	IdentifierDeclType	char *		130212	0					
ANR	130226	Identifier	p		130212	1					
ANR	130227	AssignmentExpression	* p = buf + INT_DIGITS + 1		130212	2		=			
ANR	130228	Identifier	p		130212	0					
ANR	130229	AdditiveExpression	buf + INT_DIGITS + 1		130212	1		+			
ANR	130230	Identifier	buf		130212	0					
ANR	130231	AdditiveExpression	INT_DIGITS + 1		130212	1		+			
ANR	130232	Identifier	INT_DIGITS		130212	0					
ANR	130233	PrimaryExpression	1		130212	1					
ANR	130234	IfStatement	if ( i >= 0 )		130212	3					
ANR	130235	Condition	i >= 0	73:8:1652:1657	130212	0	True				
ANR	130236	RelationalExpression	i >= 0		130212	0		>=			
ANR	130237	Identifier	i		130212	0					
ANR	130238	PrimaryExpression	0		130212	1					
ANR	130239	CompoundStatement		5:16:176:176	130212	1					
ANR	130240	DoStatement	do		130212	0					
ANR	130241	CompoundStatement		6:11:189:189	130212	0					
ANR	130242	ExpressionStatement	* -- p = '0' + ( i % 10 )	75:12:1687:1708	130212	0	True				
ANR	130243	AssignmentExpression	* -- p = '0' + ( i % 10 )		130212	0		=			
ANR	130244	UnaryOperationExpression	* -- p		130212	0					
ANR	130245	UnaryOperator	*		130212	0					
ANR	130246	UnaryExpression	-- p		130212	1					
ANR	130247	IncDec	--		130212	0					
ANR	130248	Identifier	p		130212	1					
ANR	130249	AdditiveExpression	'0' + ( i % 10 )		130212	1		+			
ANR	130250	PrimaryExpression	'0'		130212	0					
ANR	130251	MultiplicativeExpression	i % 10		130212	1		%			
ANR	130252	Identifier	i		130212	0					
ANR	130253	PrimaryExpression	10		130212	1					
ANR	130254	ExpressionStatement	i /= 10	76:12:1722:1731	130212	1	True				
ANR	130255	AssignmentExpression	i /= 10		130212	0		/=			
ANR	130256	Identifier	i		130212	0					
ANR	130257	PrimaryExpression	10		130212	1					
ANR	130258	Condition	i != 0	77:17:1750:1755	130212	1	True				
ANR	130259	EqualityExpression	i != 0		130212	0		!=			
ANR	130260	Identifier	i		130212	0					
ANR	130261	PrimaryExpression	0		130212	1					
ANR	130262	ReturnStatement	return p ;	78:8:1767:1775	130212	1	True				
ANR	130263	Identifier	p		130212	0					
ANR	130264	ElseStatement	else		130212	0					
ANR	130265	CompoundStatement		11:11:304:304	130212	0					
ANR	130266	DoStatement	do		130212	0					
ANR	130267	CompoundStatement		12:11:349:349	130212	0					
ANR	130268	ExpressionStatement	* -- p = '0' - ( i % 10 )	81:12:1847:1868	130212	0	True				
ANR	130269	AssignmentExpression	* -- p = '0' - ( i % 10 )		130212	0		=			
ANR	130270	UnaryOperationExpression	* -- p		130212	0					
ANR	130271	UnaryOperator	*		130212	0					
ANR	130272	UnaryExpression	-- p		130212	1					
ANR	130273	IncDec	--		130212	0					
ANR	130274	Identifier	p		130212	1					
ANR	130275	AdditiveExpression	'0' - ( i % 10 )		130212	1		-			
ANR	130276	PrimaryExpression	'0'		130212	0					
ANR	130277	MultiplicativeExpression	i % 10		130212	1		%			
ANR	130278	Identifier	i		130212	0					
ANR	130279	PrimaryExpression	10		130212	1					
ANR	130280	ExpressionStatement	i /= 10	82:12:1882:1891	130212	1	True				
ANR	130281	AssignmentExpression	i /= 10		130212	0		/=			
ANR	130282	Identifier	i		130212	0					
ANR	130283	PrimaryExpression	10		130212	1					
ANR	130284	Condition	i != 0	83:17:1910:1915	130212	1	True				
ANR	130285	EqualityExpression	i != 0		130212	0		!=			
ANR	130286	Identifier	i		130212	0					
ANR	130287	PrimaryExpression	0		130212	1					
ANR	130288	ExpressionStatement	* -- p = '-'	84:8:1927:1937	130212	1	True				
ANR	130289	AssignmentExpression	* -- p = '-'		130212	0		=			
ANR	130290	UnaryOperationExpression	* -- p		130212	0					
ANR	130291	UnaryOperator	*		130212	0					
ANR	130292	UnaryExpression	-- p		130212	1					
ANR	130293	IncDec	--		130212	0					
ANR	130294	Identifier	p		130212	1					
ANR	130295	PrimaryExpression	'-'		130212	1					
ANR	130296	ReturnStatement	return p ;	86:4:1949:1957	130212	4	True				
ANR	130297	Identifier	p		130212	0					
ANR	130298	ReturnType	char *		130212	1					
ANR	130299	Identifier	ss_itoa		130212	2					
ANR	130300	ParameterList	int i		130212	3					
ANR	130301	Parameter	int i	68:8:1476:1480	130212	0	True				
ANR	130302	ParameterType	int		130212	0					
ANR	130303	Identifier	i		130212	1					
ANR	130304	CFGEntryNode	ENTRY		130212		True				
ANR	130305	CFGExitNode	EXIT		130212		True				
ANR	130306	Symbol	p		130212						
ANR	130307	Symbol	buf		130212						
ANR	130308	Symbol	* -- p		130212						
ANR	130309	Symbol	i		130212						
ANR	130310	Symbol	* p		130212						
ANR	130311	Symbol	INT_DIGITS		130212						
ANR	130312	Function	ss_isnumeric	89:0:1962:2108							
ANR	130313	FunctionDef	ss_isnumeric (const char * s)		130312	0					
ANR	130314	CompoundStatement		90:28:1994:2108	130312	0					
ANR	130315	IfStatement	if ( ! s || ! * s )		130312	0					
ANR	130316	Condition	! s || ! * s	91:8:2004:2012	130312	0	True				
ANR	130317	OrExpression	! s || ! * s		130312	0		||			
ANR	130318	UnaryOperationExpression	! s		130312	0					
ANR	130319	UnaryOperator	!		130312	0					
ANR	130320	Identifier	s		130312	1					
ANR	130321	UnaryOperationExpression	! * s		130312	1					
ANR	130322	UnaryOperator	!		130312	0					
ANR	130323	UnaryOperationExpression	* s		130312	1					
ANR	130324	UnaryOperator	*		130312	0					
ANR	130325	Identifier	s		130312	1					
ANR	130326	ReturnStatement	return 0 ;	92:8:2023:2031	130312	1	True				
ANR	130327	PrimaryExpression	0		130312	0					
ANR	130328	WhileStatement	while ( isdigit ( ( unsigned char ) * s ) )		130312	1					
ANR	130329	Condition	isdigit ( ( unsigned char ) * s )	93:11:2044:2069	130312	0	True				
ANR	130330	CallExpression	isdigit ( ( unsigned char ) * s )		130312	0					
ANR	130331	Callee	isdigit		130312	0					
ANR	130332	Identifier	isdigit		130312	0					
ANR	130333	ArgumentList	( unsigned char ) * s		130312	1					
ANR	130334	Argument	( unsigned char ) * s		130312	0					
ANR	130335	CastExpression	( unsigned char ) * s		130312	0					
ANR	130336	CastTarget	unsigned char		130312	0					
ANR	130337	UnaryOperationExpression	* s		130312	1					
ANR	130338	UnaryOperator	*		130312	0					
ANR	130339	Identifier	s		130312	1					
ANR	130340	ExpressionStatement	++ s	94:8:2080:2083	130312	1	True				
ANR	130341	UnaryExpression	++ s		130312	0					
ANR	130342	IncDec	++		130312	0					
ANR	130343	Identifier	s		130312	1					
ANR	130344	ReturnStatement	return * s == '\\0' ;	95:4:2089:2106	130312	2	True				
ANR	130345	EqualityExpression	* s == '\\0'		130312	0		==			
ANR	130346	UnaryOperationExpression	* s		130312	0					
ANR	130347	UnaryOperator	*		130312	0					
ANR	130348	Identifier	s		130312	1					
ANR	130349	PrimaryExpression	'\\0'		130312	1					
ANR	130350	ReturnType	int		130312	1					
ANR	130351	Identifier	ss_isnumeric		130312	2					
ANR	130352	ParameterList	const char * s		130312	3					
ANR	130353	Parameter	const char * s	90:13:1979:1991	130312	0	True				
ANR	130354	ParameterType	const char *		130312	0					
ANR	130355	Identifier	s		130312	1					
ANR	130356	CFGEntryNode	ENTRY		130312		True				
ANR	130357	CFGExitNode	EXIT		130312		True				
ANR	130358	Symbol	s		130312						
ANR	130359	Symbol	* s		130312						
ANR	130360	Symbol	isdigit		130312						
ANR	130361	Function	run_as	101:0:2165:5815							
ANR	130362	FunctionDef	run_as (const char * user)		130361	0					
ANR	130363	CompoundStatement		103:0:2194:5815	130361	0					
ANR	130364	IfStatement	if ( user [ 0 ] )		130361	0					
ANR	130365	Condition	user [ 0 ]	104:8:2204:2210	130361	0	True				
ANR	130366	ArrayIndexing	user [ 0 ]		130361	0					
ANR	130367	Identifier	user		130361	0					
ANR	130368	PrimaryExpression	0		130361	1					
ANR	130369	CompoundStatement		18:8:506:513	130361	1					
ANR	130370	IdentifierDeclStatement	long uid = - 1 ;	107:8:2339:2352	130361	0	True				
ANR	130371	IdentifierDecl	uid = - 1		130361	0					
ANR	130372	IdentifierDeclType	long		130361	0					
ANR	130373	Identifier	uid		130361	1					
ANR	130374	AssignmentExpression	uid = - 1		130361	2		=			
ANR	130375	Identifier	uid		130361	0					
ANR	130376	UnaryOperationExpression	- 1		130361	1					
ANR	130377	UnaryOperator	-		130361	0					
ANR	130378	PrimaryExpression	1		130361	1					
ANR	130379	IfStatement	if ( ss_isnumeric ( user ) )		130361	1					
ANR	130380	Condition	ss_isnumeric ( user )	108:12:2366:2383	130361	0	True				
ANR	130381	CallExpression	ss_isnumeric ( user )		130361	0					
ANR	130382	Callee	ss_isnumeric		130361	0					
ANR	130383	Identifier	ss_isnumeric		130361	0					
ANR	130384	ArgumentList	user		130361	1					
ANR	130385	Argument	user		130361	0					
ANR	130386	Identifier	user		130361	0					
ANR	130387	CompoundStatement		8:12:228:240	130361	1					
ANR	130388	ExpressionStatement	errno = 0	109:12:2400:2409	130361	0	True				
ANR	130389	AssignmentExpression	errno = 0		130361	0		=			
ANR	130390	Identifier	errno		130361	0					
ANR	130391	PrimaryExpression	0		130361	1					
ANR	130392	IdentifierDeclStatement	char * endptr ;	110:12:2423:2435	130361	1	True				
ANR	130393	IdentifierDecl	* endptr		130361	0					
ANR	130394	IdentifierDeclType	char *		130361	0					
ANR	130395	Identifier	endptr		130361	1					
ANR	130396	ExpressionStatement	"uid = strtol ( user , & endptr , 10 )"	111:12:2449:2480	130361	2	True				
ANR	130397	AssignmentExpression	"uid = strtol ( user , & endptr , 10 )"		130361	0		=			
ANR	130398	Identifier	uid		130361	0					
ANR	130399	CallExpression	"strtol ( user , & endptr , 10 )"		130361	1					
ANR	130400	Callee	strtol		130361	0					
ANR	130401	Identifier	strtol		130361	0					
ANR	130402	ArgumentList	user		130361	1					
ANR	130403	Argument	user		130361	0					
ANR	130404	Identifier	user		130361	0					
ANR	130405	Argument	& endptr		130361	1					
ANR	130406	UnaryOperationExpression	& endptr		130361	0					
ANR	130407	UnaryOperator	&		130361	0					
ANR	130408	Identifier	endptr		130361	1					
ANR	130409	Argument	10		130361	2					
ANR	130410	PrimaryExpression	10		130361	0					
ANR	130411	IfStatement	if ( errno || endptr == user )		130361	3					
ANR	130412	Condition	errno || endptr == user	112:16:2498:2520	130361	0	True				
ANR	130413	OrExpression	errno || endptr == user		130361	0		||			
ANR	130414	Identifier	errno		130361	0					
ANR	130415	EqualityExpression	endptr == user		130361	1		==			
ANR	130416	Identifier	endptr		130361	0					
ANR	130417	Identifier	user		130361	1					
ANR	130418	ExpressionStatement	uid = - 1	113:16:2539:2547	130361	1	True				
ANR	130419	AssignmentExpression	uid = - 1		130361	0		=			
ANR	130420	Identifier	uid		130361	0					
ANR	130421	UnaryOperationExpression	- 1		130361	1					
ANR	130422	UnaryOperator	-		130361	0					
ANR	130423	PrimaryExpression	1		130361	1					
ANR	130424	IdentifierDeclStatement	"struct passwd pwdbuf , * pwd ;"	117:8:2591:2617	130361	2	True				
ANR	130425	IdentifierDecl	pwdbuf		130361	0					
ANR	130426	IdentifierDeclType	struct passwd		130361	0					
ANR	130427	Identifier	pwdbuf		130361	1					
ANR	130428	IdentifierDecl	* pwd		130361	1					
ANR	130429	IdentifierDeclType	struct passwd *		130361	0					
ANR	130430	Identifier	pwd		130361	1					
ANR	130431	ExpressionStatement	"memset ( & pwdbuf , 0 , sizeof ( struct passwd ) )"	118:8:2627:2668	130361	3	True				
ANR	130432	CallExpression	"memset ( & pwdbuf , 0 , sizeof ( struct passwd ) )"		130361	0					
ANR	130433	Callee	memset		130361	0					
ANR	130434	Identifier	memset		130361	0					
ANR	130435	ArgumentList	& pwdbuf		130361	1					
ANR	130436	Argument	& pwdbuf		130361	0					
ANR	130437	UnaryOperationExpression	& pwdbuf		130361	0					
ANR	130438	UnaryOperator	&		130361	0					
ANR	130439	Identifier	pwdbuf		130361	1					
ANR	130440	Argument	0		130361	1					
ANR	130441	PrimaryExpression	0		130361	0					
ANR	130442	Argument	sizeof ( struct passwd )		130361	2					
ANR	130443	SizeofExpression	sizeof ( struct passwd )		130361	0					
ANR	130444	Sizeof	sizeof		130361	0					
ANR	130445	SizeofOperand	struct passwd		130361	1					
ANR	130446	IdentifierDeclStatement	size_t buflen ;	119:8:2678:2691	130361	4	True				
ANR	130447	IdentifierDecl	buflen		130361	0					
ANR	130448	IdentifierDeclType	size_t		130361	0					
ANR	130449	Identifier	buflen		130361	1					
ANR	130450	IdentifierDeclStatement	int err ;	120:8:2701:2708	130361	5	True				
ANR	130451	IdentifierDecl	err		130361	0					
ANR	130452	IdentifierDeclType	int		130361	0					
ANR	130453	Identifier	err		130361	1					
ANR	130454	ForStatement	for ( buflen = 128 ; ; buflen *= 2 )		130361	6					
ANR	130455	ForInit	buflen = 128 ;	122:13:2724:2736	130361	0	True				
ANR	130456	AssignmentExpression	buflen = 128		130361	0		=			
ANR	130457	Identifier	buflen		130361	0					
ANR	130458	PrimaryExpression	128		130361	1					
ANR	130459	AssignmentExpression	buflen *= 2	122:28:2739:2749	130361	1	True	*=			
ANR	130460	Identifier	buflen		130361	0					
ANR	130461	PrimaryExpression	2		130361	1					
ANR	130462	CompoundStatement		21:12:571:587	130361	2					
ANR	130463	IdentifierDeclStatement	char buf [ buflen ] ;	123:12:2766:2782	130361	0	True				
ANR	130464	IdentifierDecl	buf [ buflen ]		130361	0					
ANR	130465	IdentifierDeclType	char [ buflen ]		130361	0					
ANR	130466	Identifier	buf		130361	1					
ANR	130467	Identifier	buflen		130361	2					
ANR	130468	ExpressionStatement	"err = uid >= 0 ? getpwuid_r ( ( uid_t ) uid , & pwdbuf , buf , buflen , & pwd ) : getpwnam_r ( user , & pwdbuf , buf , buflen , & pwd )"	128:12:3023:3153	130361	1	True				
ANR	130469	AssignmentExpression	"err = uid >= 0 ? getpwuid_r ( ( uid_t ) uid , & pwdbuf , buf , buflen , & pwd ) : getpwnam_r ( user , & pwdbuf , buf , buflen , & pwd )"		130361	0		=			
ANR	130470	Identifier	err		130361	0					
ANR	130471	ConditionalExpression	"uid >= 0 ? getpwuid_r ( ( uid_t ) uid , & pwdbuf , buf , buflen , & pwd ) : getpwnam_r ( user , & pwdbuf , buf , buflen , & pwd )"		130361	1					
ANR	130472	Condition	uid >= 0		130361	0					
ANR	130473	RelationalExpression	uid >= 0		130361	0		>=			
ANR	130474	Identifier	uid		130361	0					
ANR	130475	PrimaryExpression	0		130361	1					
ANR	130476	CallExpression	"getpwuid_r ( ( uid_t ) uid , & pwdbuf , buf , buflen , & pwd )"		130361	1					
ANR	130477	Callee	getpwuid_r		130361	0					
ANR	130478	Identifier	getpwuid_r		130361	0					
ANR	130479	ArgumentList	( uid_t ) uid		130361	1					
ANR	130480	Argument	( uid_t ) uid		130361	0					
ANR	130481	CastExpression	( uid_t ) uid		130361	0					
ANR	130482	CastTarget	uid_t		130361	0					
ANR	130483	Identifier	uid		130361	1					
ANR	130484	Argument	& pwdbuf		130361	1					
ANR	130485	UnaryOperationExpression	& pwdbuf		130361	0					
ANR	130486	UnaryOperator	&		130361	0					
ANR	130487	Identifier	pwdbuf		130361	1					
ANR	130488	Argument	buf		130361	2					
ANR	130489	Identifier	buf		130361	0					
ANR	130490	Argument	buflen		130361	3					
ANR	130491	Identifier	buflen		130361	0					
ANR	130492	Argument	& pwd		130361	4					
ANR	130493	UnaryOperationExpression	& pwd		130361	0					
ANR	130494	UnaryOperator	&		130361	0					
ANR	130495	Identifier	pwd		130361	1					
ANR	130496	CallExpression	"getpwnam_r ( user , & pwdbuf , buf , buflen , & pwd )"		130361	2					
ANR	130497	Callee	getpwnam_r		130361	0					
ANR	130498	Identifier	getpwnam_r		130361	0					
ANR	130499	ArgumentList	user		130361	1					
ANR	130500	Argument	user		130361	0					
ANR	130501	Identifier	user		130361	0					
ANR	130502	Argument	& pwdbuf		130361	1					
ANR	130503	UnaryOperationExpression	& pwdbuf		130361	0					
ANR	130504	UnaryOperator	&		130361	0					
ANR	130505	Identifier	pwdbuf		130361	1					
ANR	130506	Argument	buf		130361	2					
ANR	130507	Identifier	buf		130361	0					
ANR	130508	Argument	buflen		130361	3					
ANR	130509	Identifier	buflen		130361	0					
ANR	130510	Argument	& pwd		130361	4					
ANR	130511	UnaryOperationExpression	& pwd		130361	0					
ANR	130512	UnaryOperator	&		130361	0					
ANR	130513	Identifier	pwd		130361	1					
ANR	130514	IfStatement	if ( err == 0 && pwd )		130361	2					
ANR	130515	Condition	err == 0 && pwd	131:16:3172:3186	130361	0	True				
ANR	130516	AndExpression	err == 0 && pwd		130361	0		&&			
ANR	130517	EqualityExpression	err == 0		130361	0		==			
ANR	130518	Identifier	err		130361	0					
ANR	130519	PrimaryExpression	0		130361	1					
ANR	130520	Identifier	pwd		130361	1					
ANR	130521	CompoundStatement		29:33:994:994	130361	1					
ANR	130522	IfStatement	if ( setgid ( pwd -> pw_gid ) != 0 )		130361	0					
ANR	130523	Condition	setgid ( pwd -> pw_gid ) != 0	133:20:3307:3330	130361	0	True				
ANR	130524	EqualityExpression	setgid ( pwd -> pw_gid ) != 0		130361	0		!=			
ANR	130525	CallExpression	setgid ( pwd -> pw_gid )		130361	0					
ANR	130526	Callee	setgid		130361	0					
ANR	130527	Identifier	setgid		130361	0					
ANR	130528	ArgumentList	pwd -> pw_gid		130361	1					
ANR	130529	Argument	pwd -> pw_gid		130361	0					
ANR	130530	PtrMemberAccess	pwd -> pw_gid		130361	0					
ANR	130531	Identifier	pwd		130361	0					
ANR	130532	Identifier	pw_gid		130361	1					
ANR	130533	PrimaryExpression	0		130361	1					
ANR	130534	CompoundStatement		31:46:1138:1138	130361	1					
ANR	130535	ExpressionStatement	"LOGE ( ""Could not change group id to that of run_as user '%s': %s"" , pwd -> pw_name , strerror ( errno ) )"	134:20:3355:3500	130361	0	True				
ANR	130536	CallExpression	"LOGE ( ""Could not change group id to that of run_as user '%s': %s"" , pwd -> pw_name , strerror ( errno ) )"		130361	0					
ANR	130537	Callee	LOGE		130361	0					
ANR	130538	Identifier	LOGE		130361	0					
ANR	130539	ArgumentList	"""Could not change group id to that of run_as user '%s': %s"""		130361	1					
ANR	130540	Argument	"""Could not change group id to that of run_as user '%s': %s"""		130361	0					
ANR	130541	PrimaryExpression	"""Could not change group id to that of run_as user '%s': %s"""		130361	0					
ANR	130542	Argument	pwd -> pw_name		130361	1					
ANR	130543	PtrMemberAccess	pwd -> pw_name		130361	0					
ANR	130544	Identifier	pwd		130361	0					
ANR	130545	Identifier	pw_name		130361	1					
ANR	130546	Argument	strerror ( errno )		130361	2					
ANR	130547	CallExpression	strerror ( errno )		130361	0					
ANR	130548	Callee	strerror		130361	0					
ANR	130549	Identifier	strerror		130361	0					
ANR	130550	ArgumentList	errno		130361	1					
ANR	130551	Argument	errno		130361	0					
ANR	130552	Identifier	errno		130361	0					
ANR	130553	ReturnStatement	return 0 ;	137:20:3522:3530	130361	1	True				
ANR	130554	PrimaryExpression	0		130361	0					
ANR	130555	IfStatement	"if ( initgroups ( pwd -> pw_name , pwd -> pw_gid ) == - 1 )"		130361	1					
ANR	130556	Condition	"initgroups ( pwd -> pw_name , pwd -> pw_gid ) == - 1"	141:20:3590:3632	130361	0	True				
ANR	130557	EqualityExpression	"initgroups ( pwd -> pw_name , pwd -> pw_gid ) == - 1"		130361	0		==			
ANR	130558	CallExpression	"initgroups ( pwd -> pw_name , pwd -> pw_gid )"		130361	0					
ANR	130559	Callee	initgroups		130361	0					
ANR	130560	Identifier	initgroups		130361	0					
ANR	130561	ArgumentList	pwd -> pw_name		130361	1					
ANR	130562	Argument	pwd -> pw_name		130361	0					
ANR	130563	PtrMemberAccess	pwd -> pw_name		130361	0					
ANR	130564	Identifier	pwd		130361	0					
ANR	130565	Identifier	pw_name		130361	1					
ANR	130566	Argument	pwd -> pw_gid		130361	1					
ANR	130567	PtrMemberAccess	pwd -> pw_gid		130361	0					
ANR	130568	Identifier	pwd		130361	0					
ANR	130569	Identifier	pw_gid		130361	1					
ANR	130570	UnaryOperationExpression	- 1		130361	1					
ANR	130571	UnaryOperator	-		130361	0					
ANR	130572	PrimaryExpression	1		130361	1					
ANR	130573	CompoundStatement		39:65:1440:1440	130361	1					
ANR	130574	ExpressionStatement	"LOGE ( ""Could not change supplementary groups for user '%s'."" , pwd -> pw_name )"	142:20:3657:3731	130361	0	True				
ANR	130575	CallExpression	"LOGE ( ""Could not change supplementary groups for user '%s'."" , pwd -> pw_name )"		130361	0					
ANR	130576	Callee	LOGE		130361	0					
ANR	130577	Identifier	LOGE		130361	0					
ANR	130578	ArgumentList	"""Could not change supplementary groups for user '%s'."""		130361	1					
ANR	130579	Argument	"""Could not change supplementary groups for user '%s'."""		130361	0					
ANR	130580	PrimaryExpression	"""Could not change supplementary groups for user '%s'."""		130361	0					
ANR	130581	Argument	pwd -> pw_name		130361	1					
ANR	130582	PtrMemberAccess	pwd -> pw_name		130361	0					
ANR	130583	Identifier	pwd		130361	0					
ANR	130584	Identifier	pw_name		130361	1					
ANR	130585	ReturnStatement	return 0 ;	143:20:3753:3761	130361	1	True				
ANR	130586	PrimaryExpression	0		130361	0					
ANR	130587	IfStatement	if ( setuid ( pwd -> pw_uid ) != 0 )		130361	2					
ANR	130588	Condition	setuid ( pwd -> pw_uid ) != 0	147:20:3809:3832	130361	0	True				
ANR	130589	EqualityExpression	setuid ( pwd -> pw_uid ) != 0		130361	0		!=			
ANR	130590	CallExpression	setuid ( pwd -> pw_uid )		130361	0					
ANR	130591	Callee	setuid		130361	0					
ANR	130592	Identifier	setuid		130361	0					
ANR	130593	ArgumentList	pwd -> pw_uid		130361	1					
ANR	130594	Argument	pwd -> pw_uid		130361	0					
ANR	130595	PtrMemberAccess	pwd -> pw_uid		130361	0					
ANR	130596	Identifier	pwd		130361	0					
ANR	130597	Identifier	pw_uid		130361	1					
ANR	130598	PrimaryExpression	0		130361	1					
ANR	130599	CompoundStatement		45:46:1640:1640	130361	1					
ANR	130600	ExpressionStatement	"LOGE ( ""Could not change user id to that of run_as user '%s': %s"" , pwd -> pw_name , strerror ( errno ) )"	148:20:3857:4001	130361	0	True				
ANR	130601	CallExpression	"LOGE ( ""Could not change user id to that of run_as user '%s': %s"" , pwd -> pw_name , strerror ( errno ) )"		130361	0					
ANR	130602	Callee	LOGE		130361	0					
ANR	130603	Identifier	LOGE		130361	0					
ANR	130604	ArgumentList	"""Could not change user id to that of run_as user '%s': %s"""		130361	1					
ANR	130605	Argument	"""Could not change user id to that of run_as user '%s': %s"""		130361	0					
ANR	130606	PrimaryExpression	"""Could not change user id to that of run_as user '%s': %s"""		130361	0					
ANR	130607	Argument	pwd -> pw_name		130361	1					
ANR	130608	PtrMemberAccess	pwd -> pw_name		130361	0					
ANR	130609	Identifier	pwd		130361	0					
ANR	130610	Identifier	pw_name		130361	1					
ANR	130611	Argument	strerror ( errno )		130361	2					
ANR	130612	CallExpression	strerror ( errno )		130361	0					
ANR	130613	Callee	strerror		130361	0					
ANR	130614	Identifier	strerror		130361	0					
ANR	130615	ArgumentList	errno		130361	1					
ANR	130616	Argument	errno		130361	0					
ANR	130617	Identifier	errno		130361	0					
ANR	130618	ReturnStatement	return 0 ;	151:20:4023:4031	130361	1	True				
ANR	130619	PrimaryExpression	0		130361	0					
ANR	130620	BreakStatement	break ;	153:16:4067:4072	130361	3	True				
ANR	130621	ElseStatement	else		130361	0					
ANR	130622	IfStatement	if ( err != ERANGE )		130361	0					
ANR	130623	Condition	err != ERANGE	154:23:4097:4109	130361	0	True				
ANR	130624	EqualityExpression	err != ERANGE		130361	0		!=			
ANR	130625	Identifier	err		130361	0					
ANR	130626	Identifier	ERANGE		130361	1					
ANR	130627	CompoundStatement		52:38:1917:1917	130361	1					
ANR	130628	IfStatement	if ( err )		130361	0					
ANR	130629	Condition	err	155:20:4134:4136	130361	0	True				
ANR	130630	Identifier	err		130361	0					
ANR	130631	CompoundStatement		53:25:1944:1944	130361	1					
ANR	130632	ExpressionStatement	"LOGE ( ""run_as user '%s' could not be found: %s"" , user , strerror ( err ) )"	156:20:4161:4257	130361	0	True				
ANR	130633	CallExpression	"LOGE ( ""run_as user '%s' could not be found: %s"" , user , strerror ( err ) )"		130361	0					
ANR	130634	Callee	LOGE		130361	0					
ANR	130635	Identifier	LOGE		130361	0					
ANR	130636	ArgumentList	"""run_as user '%s' could not be found: %s"""		130361	1					
ANR	130637	Argument	"""run_as user '%s' could not be found: %s"""		130361	0					
ANR	130638	PrimaryExpression	"""run_as user '%s' could not be found: %s"""		130361	0					
ANR	130639	Argument	user		130361	1					
ANR	130640	Identifier	user		130361	0					
ANR	130641	Argument	strerror ( err )		130361	2					
ANR	130642	CallExpression	strerror ( err )		130361	0					
ANR	130643	Callee	strerror		130361	0					
ANR	130644	Identifier	strerror		130361	0					
ANR	130645	ArgumentList	err		130361	1					
ANR	130646	Argument	err		130361	0					
ANR	130647	Identifier	err		130361	0					
ANR	130648	ElseStatement	else		130361	0					
ANR	130649	CompoundStatement		56:23:2087:2087	130361	0					
ANR	130650	ExpressionStatement	"LOGE ( ""run_as user '%s' could not be found."" , user )"	159:20:4304:4354	130361	0	True				
ANR	130651	CallExpression	"LOGE ( ""run_as user '%s' could not be found."" , user )"		130361	0					
ANR	130652	Callee	LOGE		130361	0					
ANR	130653	Identifier	LOGE		130361	0					
ANR	130654	ArgumentList	"""run_as user '%s' could not be found."""		130361	1					
ANR	130655	Argument	"""run_as user '%s' could not be found."""		130361	0					
ANR	130656	PrimaryExpression	"""run_as user '%s' could not be found."""		130361	0					
ANR	130657	Argument	user		130361	1					
ANR	130658	Identifier	user		130361	0					
ANR	130659	ReturnStatement	return 0 ;	161:16:4390:4398	130361	1	True				
ANR	130660	PrimaryExpression	0		130361	0					
ANR	130661	ElseStatement	else		130361	0					
ANR	130662	IfStatement	if ( buflen >= 16 * 1024 )		130361	0					
ANR	130663	Condition	buflen >= 16 * 1024	162:23:4423:4441	130361	0	True				
ANR	130664	RelationalExpression	buflen >= 16 * 1024		130361	0		>=			
ANR	130665	Identifier	buflen		130361	0					
ANR	130666	MultiplicativeExpression	16 * 1024		130361	1		*			
ANR	130667	PrimaryExpression	16		130361	0					
ANR	130668	PrimaryExpression	1024		130361	1					
ANR	130669	CompoundStatement		60:44:2249:2249	130361	1					
ANR	130670	ExpressionStatement	"LOGE ( ""getpwnam_r() requires more than %u bytes of buffer space."" , ( unsigned ) buflen )"	165:16:4617:4741	130361	0	True				
ANR	130671	CallExpression	"LOGE ( ""getpwnam_r() requires more than %u bytes of buffer space."" , ( unsigned ) buflen )"		130361	0					
ANR	130672	Callee	LOGE		130361	0					
ANR	130673	Identifier	LOGE		130361	0					
ANR	130674	ArgumentList	"""getpwnam_r() requires more than %u bytes of buffer space."""		130361	1					
ANR	130675	Argument	"""getpwnam_r() requires more than %u bytes of buffer space."""		130361	0					
ANR	130676	PrimaryExpression	"""getpwnam_r() requires more than %u bytes of buffer space."""		130361	0					
ANR	130677	Argument	( unsigned ) buflen		130361	1					
ANR	130678	CastExpression	( unsigned ) buflen		130361	0					
ANR	130679	CastTarget	unsigned		130361	0					
ANR	130680	Identifier	buflen		130361	1					
ANR	130681	ReturnStatement	return 0 ;	168:16:4759:4767	130361	1	True				
ANR	130682	PrimaryExpression	0		130361	0					
ANR	130683	ReturnStatement	return 1 ;	198:4:5805:5813	130361	1	True				
ANR	130684	PrimaryExpression	1		130361	0					
ANR	130685	ReturnType	int		130361	1					
ANR	130686	Identifier	run_as		130361	2					
ANR	130687	ParameterList	const char * user		130361	3					
ANR	130688	Parameter	const char * user	102:7:2176:2191	130361	0	True				
ANR	130689	ParameterType	const char *		130361	0					
ANR	130690	Identifier	user		130361	1					
ANR	130691	CFGEntryNode	ENTRY		130361		True				
ANR	130692	CFGExitNode	EXIT		130361		True				
ANR	130693	InfiniteForNode	true		130361		True				
ANR	130694	Symbol	ss_isnumeric		130361						
ANR	130695	Symbol	getpwuid_r		130361						
ANR	130696	Symbol	getpwnam_r		130361						
ANR	130697	Symbol	pwdbuf		130361						
ANR	130698	Symbol	uid		130361						
ANR	130699	Symbol	pwd -> pw_name		130361						
ANR	130700	Symbol	strtol		130361						
ANR	130701	Symbol	initgroups		130361						
ANR	130702	Symbol	ERANGE		130361						
ANR	130703	Symbol	buflen		130361						
ANR	130704	Symbol	& pwdbuf		130361						
ANR	130705	Symbol	pwd -> pw_uid		130361						
ANR	130706	Symbol	errno		130361						
ANR	130707	Symbol	setgid		130361						
ANR	130708	Symbol	* user		130361						
ANR	130709	Symbol	err		130361						
ANR	130710	Symbol	& pwd		130361						
ANR	130711	Symbol	endptr		130361						
ANR	130712	Symbol	& endptr		130361						
ANR	130713	Symbol	* pwd		130361						
ANR	130714	Symbol	pwd -> pw_gid		130361						
ANR	130715	Symbol	setuid		130361						
ANR	130716	Symbol	strerror		130361						
ANR	130717	Symbol	buf		130361						
ANR	130718	Symbol	pwd		130361						
ANR	130719	Symbol	user		130361						
ANR	130720	Function	ss_strndup	201:0:5818:6047							
ANR	130721	FunctionDef	"ss_strndup (const char * s , size_t n)"		130720	0					
ANR	130722	CompoundStatement		203:0:5861:6047	130720	0					
ANR	130723	IdentifierDeclStatement	size_t len = strlen ( s ) ;	204:4:5867:5889	130720	0	True				
ANR	130724	IdentifierDecl	len = strlen ( s )		130720	0					
ANR	130725	IdentifierDeclType	size_t		130720	0					
ANR	130726	Identifier	len		130720	1					
ANR	130727	AssignmentExpression	len = strlen ( s )		130720	2		=			
ANR	130728	Identifier	len		130720	0					
ANR	130729	CallExpression	strlen ( s )		130720	1					
ANR	130730	Callee	strlen		130720	0					
ANR	130731	Identifier	strlen		130720	0					
ANR	130732	ArgumentList	s		130720	1					
ANR	130733	Argument	s		130720	0					
ANR	130734	Identifier	s		130720	0					
ANR	130735	IdentifierDeclStatement	char * ret ;	205:4:5895:5904	130720	1	True				
ANR	130736	IdentifierDecl	* ret		130720	0					
ANR	130737	IdentifierDeclType	char *		130720	0					
ANR	130738	Identifier	ret		130720	1					
ANR	130739	IfStatement	if ( len <= n )		130720	2					
ANR	130740	Condition	len <= n	207:8:5915:5922	130720	0	True				
ANR	130741	RelationalExpression	len <= n		130720	0		<=			
ANR	130742	Identifier	len		130720	0					
ANR	130743	Identifier	n		130720	1					
ANR	130744	CompoundStatement		5:18:63:63	130720	1					
ANR	130745	ReturnStatement	return strdup ( s ) ;	208:8:5935:5951	130720	0	True				
ANR	130746	CallExpression	strdup ( s )		130720	0					
ANR	130747	Callee	strdup		130720	0					
ANR	130748	Identifier	strdup		130720	0					
ANR	130749	ArgumentList	s		130720	1					
ANR	130750	Argument	s		130720	0					
ANR	130751	Identifier	s		130720	0					
ANR	130752	ExpressionStatement	ret = ss_malloc ( n + 1 )	211:4:5964:5986	130720	3	True				
ANR	130753	AssignmentExpression	ret = ss_malloc ( n + 1 )		130720	0		=			
ANR	130754	Identifier	ret		130720	0					
ANR	130755	CallExpression	ss_malloc ( n + 1 )		130720	1					
ANR	130756	Callee	ss_malloc		130720	0					
ANR	130757	Identifier	ss_malloc		130720	0					
ANR	130758	ArgumentList	n + 1		130720	1					
ANR	130759	Argument	n + 1		130720	0					
ANR	130760	AdditiveExpression	n + 1		130720	0		+			
ANR	130761	Identifier	n		130720	0					
ANR	130762	PrimaryExpression	1		130720	1					
ANR	130763	ExpressionStatement	"strncpy ( ret , s , n )"	212:4:5992:6010	130720	4	True				
ANR	130764	CallExpression	"strncpy ( ret , s , n )"		130720	0					
ANR	130765	Callee	strncpy		130720	0					
ANR	130766	Identifier	strncpy		130720	0					
ANR	130767	ArgumentList	ret		130720	1					
ANR	130768	Argument	ret		130720	0					
ANR	130769	Identifier	ret		130720	0					
ANR	130770	Argument	s		130720	1					
ANR	130771	Identifier	s		130720	0					
ANR	130772	Argument	n		130720	2					
ANR	130773	Identifier	n		130720	0					
ANR	130774	ExpressionStatement	ret [ n ] = '\\0'	213:4:6016:6029	130720	5	True				
ANR	130775	AssignmentExpression	ret [ n ] = '\\0'		130720	0		=			
ANR	130776	ArrayIndexing	ret [ n ]		130720	0					
ANR	130777	Identifier	ret		130720	0					
ANR	130778	Identifier	n		130720	1					
ANR	130779	PrimaryExpression	'\\0'		130720	1					
ANR	130780	ReturnStatement	return ret ;	214:4:6035:6045	130720	6	True				
ANR	130781	Identifier	ret		130720	0					
ANR	130782	ReturnType	char *		130720	1					
ANR	130783	Identifier	ss_strndup		130720	2					
ANR	130784	ParameterList	"const char * s , size_t n"		130720	3					
ANR	130785	Parameter	const char * s	202:11:5836:5848	130720	0	True				
ANR	130786	ParameterType	const char *		130720	0					
ANR	130787	Identifier	s		130720	1					
ANR	130788	Parameter	size_t n	202:26:5851:5858	130720	1	True				
ANR	130789	ParameterType	size_t		130720	0					
ANR	130790	Identifier	n		130720	1					
ANR	130791	CFGEntryNode	ENTRY		130720		True				
ANR	130792	CFGExitNode	EXIT		130720		True				
ANR	130793	Symbol	ret		130720						
ANR	130794	Symbol	strlen		130720						
ANR	130795	Symbol	s		130720						
ANR	130796	Symbol	len		130720						
ANR	130797	Symbol	* n		130720						
ANR	130798	Symbol	ss_malloc		130720						
ANR	130799	Symbol	strdup		130720						
ANR	130800	Symbol	* ret		130720						
ANR	130801	Symbol	n		130720						
ANR	130802	Function	FATAL	217:0:6050:6115							
ANR	130803	FunctionDef	FATAL (const char * msg)		130802	0					
ANR	130804	CompoundStatement		219:0:6078:6115	130802	0					
ANR	130805	ExpressionStatement	"LOGE ( ""%s"" , msg )"	220:4:6084:6099	130802	0	True				
ANR	130806	CallExpression	"LOGE ( ""%s"" , msg )"		130802	0					
ANR	130807	Callee	LOGE		130802	0					
ANR	130808	Identifier	LOGE		130802	0					
ANR	130809	ArgumentList	"""%s"""		130802	1					
ANR	130810	Argument	"""%s"""		130802	0					
ANR	130811	PrimaryExpression	"""%s"""		130802	0					
ANR	130812	Argument	msg		130802	1					
ANR	130813	Identifier	msg		130802	0					
ANR	130814	ExpressionStatement	exit ( - 1 )	221:4:6105:6113	130802	1	True				
ANR	130815	CallExpression	exit ( - 1 )		130802	0					
ANR	130816	Callee	exit		130802	0					
ANR	130817	Identifier	exit		130802	0					
ANR	130818	ArgumentList	- 1		130802	1					
ANR	130819	Argument	- 1		130802	0					
ANR	130820	UnaryOperationExpression	- 1		130802	0					
ANR	130821	UnaryOperator	-		130802	0					
ANR	130822	PrimaryExpression	1		130802	1					
ANR	130823	ReturnType	void		130802	1					
ANR	130824	Identifier	FATAL		130802	2					
ANR	130825	ParameterList	const char * msg		130802	3					
ANR	130826	Parameter	const char * msg	218:6:6061:6075	130802	0	True				
ANR	130827	ParameterType	const char *		130802	0					
ANR	130828	Identifier	msg		130802	1					
ANR	130829	CFGEntryNode	ENTRY		130802		True				
ANR	130830	CFGExitNode	EXIT		130802		True				
ANR	130831	Symbol	msg		130802						
ANR	130832	Function	ss_malloc	224:0:6118:6245							
ANR	130833	FunctionDef	ss_malloc (size_t size)		130832	0					
ANR	130834	CompoundStatement		226:0:6148:6245	130832	0					
ANR	130835	IdentifierDeclStatement	void * tmp = malloc ( size ) ;	227:4:6154:6178	130832	0	True				
ANR	130836	IdentifierDecl	* tmp = malloc ( size )		130832	0					
ANR	130837	IdentifierDeclType	void *		130832	0					
ANR	130838	Identifier	tmp		130832	1					
ANR	130839	AssignmentExpression	* tmp = malloc ( size )		130832	2		=			
ANR	130840	Identifier	tmp		130832	0					
ANR	130841	CallExpression	malloc ( size )		130832	1					
ANR	130842	Callee	malloc		130832	0					
ANR	130843	Identifier	malloc		130832	0					
ANR	130844	ArgumentList	size		130832	1					
ANR	130845	Argument	size		130832	0					
ANR	130846	Identifier	size		130832	0					
ANR	130847	IfStatement	if ( tmp == NULL )		130832	1					
ANR	130848	Condition	tmp == NULL	228:8:6188:6198	130832	0	True				
ANR	130849	EqualityExpression	tmp == NULL		130832	0		==			
ANR	130850	Identifier	tmp		130832	0					
ANR	130851	Identifier	NULL		130832	1					
ANR	130852	ExpressionStatement	exit ( EXIT_FAILURE )	229:8:6209:6227	130832	1	True				
ANR	130853	CallExpression	exit ( EXIT_FAILURE )		130832	0					
ANR	130854	Callee	exit		130832	0					
ANR	130855	Identifier	exit		130832	0					
ANR	130856	ArgumentList	EXIT_FAILURE		130832	1					
ANR	130857	Argument	EXIT_FAILURE		130832	0					
ANR	130858	Identifier	EXIT_FAILURE		130832	0					
ANR	130859	ReturnStatement	return tmp ;	230:4:6233:6243	130832	2	True				
ANR	130860	Identifier	tmp		130832	0					
ANR	130861	ReturnType	void *		130832	1					
ANR	130862	Identifier	ss_malloc		130832	2					
ANR	130863	ParameterList	size_t size		130832	3					
ANR	130864	Parameter	size_t size	225:10:6135:6145	130832	0	True				
ANR	130865	ParameterType	size_t		130832	0					
ANR	130866	Identifier	size		130832	1					
ANR	130867	CFGEntryNode	ENTRY		130832		True				
ANR	130868	CFGExitNode	EXIT		130832		True				
ANR	130869	Symbol	malloc		130832						
ANR	130870	Symbol	NULL		130832						
ANR	130871	Symbol	size		130832						
ANR	130872	Symbol	EXIT_FAILURE		130832						
ANR	130873	Symbol	tmp		130832						
ANR	130874	Function	ss_align	233:0:6248:6508							
ANR	130875	FunctionDef	ss_align (size_t size)		130874	0					
ANR	130876	CompoundStatement		235:0:6277:6508	130874	0					
ANR	130877	IdentifierDeclStatement	int err ;	236:4:6283:6290	130874	0	True				
ANR	130878	IdentifierDecl	err		130874	0					
ANR	130879	IdentifierDeclType	int		130874	0					
ANR	130880	Identifier	err		130874	1					
ANR	130881	IdentifierDeclStatement	void * tmp = NULL ;	237:4:6296:6312	130874	1	True				
ANR	130882	IdentifierDecl	* tmp = NULL		130874	0					
ANR	130883	IdentifierDeclType	void *		130874	0					
ANR	130884	Identifier	tmp		130874	1					
ANR	130885	AssignmentExpression	* tmp = NULL		130874	2		=			
ANR	130886	Identifier	NULL		130874	0					
ANR	130887	Identifier	NULL		130874	1					
ANR	130888	ExpressionStatement	"err = posix_memalign ( & tmp , sizeof ( void * ) , size )"	239:4:6345:6393	130874	2	True				
ANR	130889	AssignmentExpression	"err = posix_memalign ( & tmp , sizeof ( void * ) , size )"		130874	0		=			
ANR	130890	Identifier	err		130874	0					
ANR	130891	CallExpression	"posix_memalign ( & tmp , sizeof ( void * ) , size )"		130874	1					
ANR	130892	Callee	posix_memalign		130874	0					
ANR	130893	Identifier	posix_memalign		130874	0					
ANR	130894	ArgumentList	& tmp		130874	1					
ANR	130895	Argument	& tmp		130874	0					
ANR	130896	UnaryOperationExpression	& tmp		130874	0					
ANR	130897	UnaryOperator	&		130874	0					
ANR	130898	Identifier	tmp		130874	1					
ANR	130899	Argument	sizeof ( void * )		130874	1					
ANR	130900	SizeofExpression	sizeof ( void * )		130874	0					
ANR	130901	Sizeof	sizeof		130874	0					
ANR	130902	SizeofOperand	void *		130874	1					
ANR	130903	Argument	size		130874	2					
ANR	130904	Identifier	size		130874	0					
ANR	130905	IfStatement	if ( err )		130874	3					
ANR	130906	Condition	err	243:8:6430:6432	130874	0	True				
ANR	130907	Identifier	err		130874	0					
ANR	130908	CompoundStatement		9:13:157:157	130874	1					
ANR	130909	ReturnStatement	return ss_malloc ( size ) ;	244:8:6445:6467	130874	0	True				
ANR	130910	CallExpression	ss_malloc ( size )		130874	0					
ANR	130911	Callee	ss_malloc		130874	0					
ANR	130912	Identifier	ss_malloc		130874	0					
ANR	130913	ArgumentList	size		130874	1					
ANR	130914	Argument	size		130874	0					
ANR	130915	Identifier	size		130874	0					
ANR	130916	ElseStatement	else		130874	0					
ANR	130917	CompoundStatement		11:11:202:202	130874	0					
ANR	130918	ReturnStatement	return tmp ;	246:8:6490:6500	130874	0	True				
ANR	130919	Identifier	tmp		130874	0					
ANR	130920	ReturnType	void *		130874	1					
ANR	130921	Identifier	ss_align		130874	2					
ANR	130922	ParameterList	size_t size		130874	3					
ANR	130923	Parameter	size_t size	234:9:6264:6274	130874	0	True				
ANR	130924	ParameterType	size_t		130874	0					
ANR	130925	Identifier	size		130874	1					
ANR	130926	CFGEntryNode	ENTRY		130874		True				
ANR	130927	CFGExitNode	EXIT		130874		True				
ANR	130928	Symbol	NULL		130874						
ANR	130929	Symbol	size		130874						
ANR	130930	Symbol	err		130874						
ANR	130931	Symbol	tmp		130874						
ANR	130932	Symbol	posix_memalign		130874						
ANR	130933	Symbol	ss_malloc		130874						
ANR	130934	Symbol	& tmp		130874						
ANR	130935	Function	ss_realloc	250:0:6511:6711							
ANR	130936	FunctionDef	"ss_realloc (void * ptr , size_t new_size)"		130935	0					
ANR	130937	CompoundStatement		252:0:6557:6711	130935	0					
ANR	130938	Statement	void	253:4:6563:6566	130935	0	True				
ANR	130939	Statement	*	253:9:6568:6568	130935	1	True				
ANR	130940	Statement	new	253:10:6569:6571	130935	2	True				
ANR	130941	Statement	=	253:14:6573:6573	130935	3	True				
ANR	130942	ExpressionStatement	"realloc ( ptr , new_size )"	253:16:6575:6597	130935	4	True				
ANR	130943	CallExpression	"realloc ( ptr , new_size )"		130935	0					
ANR	130944	Callee	realloc		130935	0					
ANR	130945	Identifier	realloc		130935	0					
ANR	130946	ArgumentList	ptr		130935	1					
ANR	130947	Argument	ptr		130935	0					
ANR	130948	Identifier	ptr		130935	0					
ANR	130949	Argument	new_size		130935	1					
ANR	130950	Identifier	new_size		130935	0					
ANR	130951	Statement	if	254:4:6603:6604	130935	5	True				
ANR	130952	Statement	(	254:7:6606:6606	130935	6	True				
ANR	130953	Statement	new	254:8:6607:6609	130935	7	True				
ANR	130954	Statement	==	254:12:6611:6612	130935	8	True				
ANR	130955	Statement	NULL	254:15:6614:6617	130935	9	True				
ANR	130956	Statement	)	254:19:6618:6618	130935	10	True				
ANR	130957	CompoundStatement		3:21:62:62	130935	11					
ANR	130958	ExpressionStatement	free ( ptr )	255:8:6630:6639	130935	0	True				
ANR	130959	CallExpression	free ( ptr )		130935	0					
ANR	130960	Callee	free		130935	0					
ANR	130961	Identifier	free		130935	0					
ANR	130962	ArgumentList	ptr		130935	1					
ANR	130963	Argument	ptr		130935	0					
ANR	130964	Identifier	ptr		130935	0					
ANR	130965	ExpressionStatement	ptr = NULL	256:8:6649:6659	130935	1	True				
ANR	130966	AssignmentExpression	ptr = NULL		130935	0		=			
ANR	130967	Identifier	ptr		130935	0					
ANR	130968	Identifier	NULL		130935	1					
ANR	130969	ExpressionStatement	exit ( EXIT_FAILURE )	257:8:6669:6687	130935	2	True				
ANR	130970	CallExpression	exit ( EXIT_FAILURE )		130935	0					
ANR	130971	Callee	exit		130935	0					
ANR	130972	Identifier	exit		130935	0					
ANR	130973	ArgumentList	EXIT_FAILURE		130935	1					
ANR	130974	Argument	EXIT_FAILURE		130935	0					
ANR	130975	Identifier	EXIT_FAILURE		130935	0					
ANR	130976	Statement	return	259:4:6699:6704	130935	12	True				
ANR	130977	Statement	new	259:11:6706:6708	130935	13	True				
ANR	130978	ExpressionStatement		259:14:6709:6709	130935	14	True				
ANR	130979	ReturnType	void *		130935	1					
ANR	130980	Identifier	ss_realloc		130935	2					
ANR	130981	ParameterList	"void * ptr , size_t new_size"		130935	3					
ANR	130982	Parameter	void * ptr	251:11:6529:6537	130935	0	True				
ANR	130983	ParameterType	void *		130935	0					
ANR	130984	Identifier	ptr		130935	1					
ANR	130985	Parameter	size_t new_size	251:22:6540:6554	130935	1	True				
ANR	130986	ParameterType	size_t		130935	0					
ANR	130987	Identifier	new_size		130935	1					
ANR	130988	CFGEntryNode	ENTRY		130935		True				
ANR	130989	CFGExitNode	EXIT		130935		True				
ANR	130990	Symbol	NULL		130935						
ANR	130991	Symbol	EXIT_FAILURE		130935						
ANR	130992	Symbol	new_size		130935						
ANR	130993	Symbol	ptr		130935						
ANR	130994	Function	usage	262:0:6714:11592							
ANR	130995	FunctionDef	usage ()		130994	0					
ANR	130996	CompoundStatement		264:0:6727:11592	130994	0					
ANR	130997	ExpressionStatement	"printf ( ""\\n"" )"	265:4:6733:6745	130994	0	True				
ANR	130998	CallExpression	"printf ( ""\\n"" )"		130994	0					
ANR	130999	Callee	printf		130994	0					
ANR	131000	Identifier	printf		130994	0					
ANR	131001	ArgumentList	"""\\n"""		130994	1					
ANR	131002	Argument	"""\\n"""		130994	0					
ANR	131003	PrimaryExpression	"""\\n"""		130994	0					
ANR	131004	ExpressionStatement	"printf ( ""shadowsocks-libev %s\\n\\n"" , VERSION )"	266:4:6751:6794	130994	1	True				
ANR	131005	CallExpression	"printf ( ""shadowsocks-libev %s\\n\\n"" , VERSION )"		130994	0					
ANR	131006	Callee	printf		130994	0					
ANR	131007	Identifier	printf		130994	0					
ANR	131008	ArgumentList	"""shadowsocks-libev %s\\n\\n"""		130994	1					
ANR	131009	Argument	"""shadowsocks-libev %s\\n\\n"""		130994	0					
ANR	131010	PrimaryExpression	"""shadowsocks-libev %s\\n\\n"""		130994	0					
ANR	131011	Argument	VERSION		130994	1					
ANR	131012	Identifier	VERSION		130994	0					
ANR	131013	ExpressionStatement	"printf ( ""  maintained by Max Lv <max.c.lv@gmail.com> and Linus Yang <laokongzi@gmail.com>\\n\\n"" )"	267:4:6800:6903	130994	2	True				
ANR	131014	CallExpression	"printf ( ""  maintained by Max Lv <max.c.lv@gmail.com> and Linus Yang <laokongzi@gmail.com>\\n\\n"" )"		130994	0					
ANR	131015	Callee	printf		130994	0					
ANR	131016	Identifier	printf		130994	0					
ANR	131017	ArgumentList	"""  maintained by Max Lv <max.c.lv@gmail.com> and Linus Yang <laokongzi@gmail.com>\\n\\n"""		130994	1					
ANR	131018	Argument	"""  maintained by Max Lv <max.c.lv@gmail.com> and Linus Yang <laokongzi@gmail.com>\\n\\n"""		130994	0					
ANR	131019	PrimaryExpression	"""  maintained by Max Lv <max.c.lv@gmail.com> and Linus Yang <laokongzi@gmail.com>\\n\\n"""		130994	0					
ANR	131020	ExpressionStatement	"printf ( ""  usage:\\n\\n"" )"	269:4:6909:6931	130994	3	True				
ANR	131021	CallExpression	"printf ( ""  usage:\\n\\n"" )"		130994	0					
ANR	131022	Callee	printf		130994	0					
ANR	131023	Identifier	printf		130994	0					
ANR	131024	ArgumentList	"""  usage:\\n\\n"""		130994	1					
ANR	131025	Argument	"""  usage:\\n\\n"""		130994	0					
ANR	131026	PrimaryExpression	"""  usage:\\n\\n"""		130994	0					
ANR	131027	ExpressionStatement	"printf ( ""    ss-local\\n"" )"	271:4:6957:6981	130994	4	True				
ANR	131028	CallExpression	"printf ( ""    ss-local\\n"" )"		130994	0					
ANR	131029	Callee	printf		130994	0					
ANR	131030	Identifier	printf		130994	0					
ANR	131031	ArgumentList	"""    ss-local\\n"""		130994	1					
ANR	131032	Argument	"""    ss-local\\n"""		130994	0					
ANR	131033	PrimaryExpression	"""    ss-local\\n"""		130994	0					
ANR	131034	ExpressionStatement	"printf ( ""\\n"" )"	281:4:7198:7210	130994	5	True				
ANR	131035	CallExpression	"printf ( ""\\n"" )"		130994	0					
ANR	131036	Callee	printf		130994	0					
ANR	131037	Identifier	printf		130994	0					
ANR	131038	ArgumentList	"""\\n"""		130994	1					
ANR	131039	Argument	"""\\n"""		130994	0					
ANR	131040	PrimaryExpression	"""\\n"""		130994	0					
ANR	131041	ExpressionStatement	"printf ( ""       -s <server_host>           Host name or IP address of your remote server.\\n"" )"	282:4:7216:7317	130994	6	True				
ANR	131042	CallExpression	"printf ( ""       -s <server_host>           Host name or IP address of your remote server.\\n"" )"		130994	0					
ANR	131043	Callee	printf		130994	0					
ANR	131044	Identifier	printf		130994	0					
ANR	131045	ArgumentList	"""       -s <server_host>           Host name or IP address of your remote server.\\n"""		130994	1					
ANR	131046	Argument	"""       -s <server_host>           Host name or IP address of your remote server.\\n"""		130994	0					
ANR	131047	PrimaryExpression	"""       -s <server_host>           Host name or IP address of your remote server.\\n"""		130994	0					
ANR	131048	ExpressionStatement	"printf ( ""       -p <server_port>           Port number of your remote server.\\n"" )"	284:4:7323:7412	130994	7	True				
ANR	131049	CallExpression	"printf ( ""       -p <server_port>           Port number of your remote server.\\n"" )"		130994	0					
ANR	131050	Callee	printf		130994	0					
ANR	131051	Identifier	printf		130994	0					
ANR	131052	ArgumentList	"""       -p <server_port>           Port number of your remote server.\\n"""		130994	1					
ANR	131053	Argument	"""       -p <server_port>           Port number of your remote server.\\n"""		130994	0					
ANR	131054	PrimaryExpression	"""       -p <server_port>           Port number of your remote server.\\n"""		130994	0					
ANR	131055	ExpressionStatement	"printf ( ""       -l <local_port>            Port number of your local server.\\n"" )"	286:4:7418:7506	130994	8	True				
ANR	131056	CallExpression	"printf ( ""       -l <local_port>            Port number of your local server.\\n"" )"		130994	0					
ANR	131057	Callee	printf		130994	0					
ANR	131058	Identifier	printf		130994	0					
ANR	131059	ArgumentList	"""       -l <local_port>            Port number of your local server.\\n"""		130994	1					
ANR	131060	Argument	"""       -l <local_port>            Port number of your local server.\\n"""		130994	0					
ANR	131061	PrimaryExpression	"""       -l <local_port>            Port number of your local server.\\n"""		130994	0					
ANR	131062	ExpressionStatement	"printf ( ""       -k <password>              Password of your remote server.\\n"" )"	288:4:7512:7598	130994	9	True				
ANR	131063	CallExpression	"printf ( ""       -k <password>              Password of your remote server.\\n"" )"		130994	0					
ANR	131064	Callee	printf		130994	0					
ANR	131065	Identifier	printf		130994	0					
ANR	131066	ArgumentList	"""       -k <password>              Password of your remote server.\\n"""		130994	1					
ANR	131067	Argument	"""       -k <password>              Password of your remote server.\\n"""		130994	0					
ANR	131068	PrimaryExpression	"""       -k <password>              Password of your remote server.\\n"""		130994	0					
ANR	131069	ExpressionStatement	"printf ( ""       -m <encrypt_method>        Encrypt method: rc4-md5, \\n"" )"	290:4:7604:7684	130994	10	True				
ANR	131070	CallExpression	"printf ( ""       -m <encrypt_method>        Encrypt method: rc4-md5, \\n"" )"		130994	0					
ANR	131071	Callee	printf		130994	0					
ANR	131072	Identifier	printf		130994	0					
ANR	131073	ArgumentList	"""       -m <encrypt_method>        Encrypt method: rc4-md5, \\n"""		130994	1					
ANR	131074	Argument	"""       -m <encrypt_method>        Encrypt method: rc4-md5, \\n"""		130994	0					
ANR	131075	PrimaryExpression	"""       -m <encrypt_method>        Encrypt method: rc4-md5, \\n"""		130994	0					
ANR	131076	ExpressionStatement	"printf ( ""                                  aes-128-gcm, aes-192-gcm, aes-256-gcm,\\n"" )"	292:4:7690:7783	130994	11	True				
ANR	131077	CallExpression	"printf ( ""                                  aes-128-gcm, aes-192-gcm, aes-256-gcm,\\n"" )"		130994	0					
ANR	131078	Callee	printf		130994	0					
ANR	131079	Identifier	printf		130994	0					
ANR	131080	ArgumentList	"""                                  aes-128-gcm, aes-192-gcm, aes-256-gcm,\\n"""		130994	1					
ANR	131081	Argument	"""                                  aes-128-gcm, aes-192-gcm, aes-256-gcm,\\n"""		130994	0					
ANR	131082	PrimaryExpression	"""                                  aes-128-gcm, aes-192-gcm, aes-256-gcm,\\n"""		130994	0					
ANR	131083	ExpressionStatement	"printf ( ""                                  aes-128-cfb, aes-192-cfb, aes-256-cfb,\\n"" )"	294:4:7789:7882	130994	12	True				
ANR	131084	CallExpression	"printf ( ""                                  aes-128-cfb, aes-192-cfb, aes-256-cfb,\\n"" )"		130994	0					
ANR	131085	Callee	printf		130994	0					
ANR	131086	Identifier	printf		130994	0					
ANR	131087	ArgumentList	"""                                  aes-128-cfb, aes-192-cfb, aes-256-cfb,\\n"""		130994	1					
ANR	131088	Argument	"""                                  aes-128-cfb, aes-192-cfb, aes-256-cfb,\\n"""		130994	0					
ANR	131089	PrimaryExpression	"""                                  aes-128-cfb, aes-192-cfb, aes-256-cfb,\\n"""		130994	0					
ANR	131090	ExpressionStatement	"printf ( ""                                  aes-128-ctr, aes-192-ctr, aes-256-ctr,\\n"" )"	296:4:7888:7981	130994	13	True				
ANR	131091	CallExpression	"printf ( ""                                  aes-128-ctr, aes-192-ctr, aes-256-ctr,\\n"" )"		130994	0					
ANR	131092	Callee	printf		130994	0					
ANR	131093	Identifier	printf		130994	0					
ANR	131094	ArgumentList	"""                                  aes-128-ctr, aes-192-ctr, aes-256-ctr,\\n"""		130994	1					
ANR	131095	Argument	"""                                  aes-128-ctr, aes-192-ctr, aes-256-ctr,\\n"""		130994	0					
ANR	131096	PrimaryExpression	"""                                  aes-128-ctr, aes-192-ctr, aes-256-ctr,\\n"""		130994	0					
ANR	131097	ExpressionStatement	"printf ( ""                                  camellia-128-cfb, camellia-192-cfb,\\n"" )"	298:4:7987:8077	130994	14	True				
ANR	131098	CallExpression	"printf ( ""                                  camellia-128-cfb, camellia-192-cfb,\\n"" )"		130994	0					
ANR	131099	Callee	printf		130994	0					
ANR	131100	Identifier	printf		130994	0					
ANR	131101	ArgumentList	"""                                  camellia-128-cfb, camellia-192-cfb,\\n"""		130994	1					
ANR	131102	Argument	"""                                  camellia-128-cfb, camellia-192-cfb,\\n"""		130994	0					
ANR	131103	PrimaryExpression	"""                                  camellia-128-cfb, camellia-192-cfb,\\n"""		130994	0					
ANR	131104	ExpressionStatement	"printf ( ""                                  camellia-256-cfb, bf-cfb,\\n"" )"	300:4:8083:8163	130994	15	True				
ANR	131105	CallExpression	"printf ( ""                                  camellia-256-cfb, bf-cfb,\\n"" )"		130994	0					
ANR	131106	Callee	printf		130994	0					
ANR	131107	Identifier	printf		130994	0					
ANR	131108	ArgumentList	"""                                  camellia-256-cfb, bf-cfb,\\n"""		130994	1					
ANR	131109	Argument	"""                                  camellia-256-cfb, bf-cfb,\\n"""		130994	0					
ANR	131110	PrimaryExpression	"""                                  camellia-256-cfb, bf-cfb,\\n"""		130994	0					
ANR	131111	ExpressionStatement	"printf ( ""                                  chacha20-ietf-poly1305,\\n"" )"	302:4:8169:8247	130994	16	True				
ANR	131112	CallExpression	"printf ( ""                                  chacha20-ietf-poly1305,\\n"" )"		130994	0					
ANR	131113	Callee	printf		130994	0					
ANR	131114	Identifier	printf		130994	0					
ANR	131115	ArgumentList	"""                                  chacha20-ietf-poly1305,\\n"""		130994	1					
ANR	131116	Argument	"""                                  chacha20-ietf-poly1305,\\n"""		130994	0					
ANR	131117	PrimaryExpression	"""                                  chacha20-ietf-poly1305,\\n"""		130994	0					
ANR	131118	ExpressionStatement	"printf ( ""                                  xchacha20-ietf-poly1305,\\n"" )"	305:4:8282:8361	130994	17	True				
ANR	131119	CallExpression	"printf ( ""                                  xchacha20-ietf-poly1305,\\n"" )"		130994	0					
ANR	131120	Callee	printf		130994	0					
ANR	131121	Identifier	printf		130994	0					
ANR	131122	ArgumentList	"""                                  xchacha20-ietf-poly1305,\\n"""		130994	1					
ANR	131123	Argument	"""                                  xchacha20-ietf-poly1305,\\n"""		130994	0					
ANR	131124	PrimaryExpression	"""                                  xchacha20-ietf-poly1305,\\n"""		130994	0					
ANR	131125	ExpressionStatement	"printf ( ""                                  salsa20, chacha20 and chacha20-ietf.\\n"" )"	308:4:8374:8465	130994	18	True				
ANR	131126	CallExpression	"printf ( ""                                  salsa20, chacha20 and chacha20-ietf.\\n"" )"		130994	0					
ANR	131127	Callee	printf		130994	0					
ANR	131128	Identifier	printf		130994	0					
ANR	131129	ArgumentList	"""                                  salsa20, chacha20 and chacha20-ietf.\\n"""		130994	1					
ANR	131130	Argument	"""                                  salsa20, chacha20 and chacha20-ietf.\\n"""		130994	0					
ANR	131131	PrimaryExpression	"""                                  salsa20, chacha20 and chacha20-ietf.\\n"""		130994	0					
ANR	131132	ExpressionStatement	"printf ( ""                                  The default cipher is rc4-md5.\\n"" )"	310:4:8471:8556	130994	19	True				
ANR	131133	CallExpression	"printf ( ""                                  The default cipher is rc4-md5.\\n"" )"		130994	0					
ANR	131134	Callee	printf		130994	0					
ANR	131135	Identifier	printf		130994	0					
ANR	131136	ArgumentList	"""                                  The default cipher is rc4-md5.\\n"""		130994	1					
ANR	131137	Argument	"""                                  The default cipher is rc4-md5.\\n"""		130994	0					
ANR	131138	PrimaryExpression	"""                                  The default cipher is rc4-md5.\\n"""		130994	0					
ANR	131139	ExpressionStatement	"printf ( ""\\n"" )"	312:4:8562:8574	130994	20	True				
ANR	131140	CallExpression	"printf ( ""\\n"" )"		130994	0					
ANR	131141	Callee	printf		130994	0					
ANR	131142	Identifier	printf		130994	0					
ANR	131143	ArgumentList	"""\\n"""		130994	1					
ANR	131144	Argument	"""\\n"""		130994	0					
ANR	131145	PrimaryExpression	"""\\n"""		130994	0					
ANR	131146	ExpressionStatement	"printf ( ""       [-a <user>]                Run as another user.\\n"" )"	313:4:8580:8655	130994	21	True				
ANR	131147	CallExpression	"printf ( ""       [-a <user>]                Run as another user.\\n"" )"		130994	0					
ANR	131148	Callee	printf		130994	0					
ANR	131149	Identifier	printf		130994	0					
ANR	131150	ArgumentList	"""       [-a <user>]                Run as another user.\\n"""		130994	1					
ANR	131151	Argument	"""       [-a <user>]                Run as another user.\\n"""		130994	0					
ANR	131152	PrimaryExpression	"""       [-a <user>]                Run as another user.\\n"""		130994	0					
ANR	131153	ExpressionStatement	"printf ( ""       [-f <pid_file>]            The file path to store pid.\\n"" )"	315:4:8661:8743	130994	22	True				
ANR	131154	CallExpression	"printf ( ""       [-f <pid_file>]            The file path to store pid.\\n"" )"		130994	0					
ANR	131155	Callee	printf		130994	0					
ANR	131156	Identifier	printf		130994	0					
ANR	131157	ArgumentList	"""       [-f <pid_file>]            The file path to store pid.\\n"""		130994	1					
ANR	131158	Argument	"""       [-f <pid_file>]            The file path to store pid.\\n"""		130994	0					
ANR	131159	PrimaryExpression	"""       [-f <pid_file>]            The file path to store pid.\\n"""		130994	0					
ANR	131160	ExpressionStatement	"printf ( ""       [-t <timeout>]             Socket timeout in seconds.\\n"" )"	317:4:8749:8830	130994	23	True				
ANR	131161	CallExpression	"printf ( ""       [-t <timeout>]             Socket timeout in seconds.\\n"" )"		130994	0					
ANR	131162	Callee	printf		130994	0					
ANR	131163	Identifier	printf		130994	0					
ANR	131164	ArgumentList	"""       [-t <timeout>]             Socket timeout in seconds.\\n"""		130994	1					
ANR	131165	Argument	"""       [-t <timeout>]             Socket timeout in seconds.\\n"""		130994	0					
ANR	131166	PrimaryExpression	"""       [-t <timeout>]             Socket timeout in seconds.\\n"""		130994	0					
ANR	131167	ExpressionStatement	"printf ( ""       [-c <config_file>]         The path to config file.\\n"" )"	319:4:8836:8915	130994	24	True				
ANR	131168	CallExpression	"printf ( ""       [-c <config_file>]         The path to config file.\\n"" )"		130994	0					
ANR	131169	Callee	printf		130994	0					
ANR	131170	Identifier	printf		130994	0					
ANR	131171	ArgumentList	"""       [-c <config_file>]         The path to config file.\\n"""		130994	1					
ANR	131172	Argument	"""       [-c <config_file>]         The path to config file.\\n"""		130994	0					
ANR	131173	PrimaryExpression	"""       [-c <config_file>]         The path to config file.\\n"""		130994	0					
ANR	131174	ExpressionStatement	"printf ( ""       [-n <number>]              Max number of open files.\\n"" )"	322:4:8943:9023	130994	25	True				
ANR	131175	CallExpression	"printf ( ""       [-n <number>]              Max number of open files.\\n"" )"		130994	0					
ANR	131176	Callee	printf		130994	0					
ANR	131177	Identifier	printf		130994	0					
ANR	131178	ArgumentList	"""       [-n <number>]              Max number of open files.\\n"""		130994	1					
ANR	131179	Argument	"""       [-n <number>]              Max number of open files.\\n"""		130994	0					
ANR	131180	PrimaryExpression	"""       [-n <number>]              Max number of open files.\\n"""		130994	0					
ANR	131181	ExpressionStatement	"printf ( ""       [-i <interface>]           Network interface to bind.\\n"" )"	326:4:9057:9138	130994	26	True				
ANR	131182	CallExpression	"printf ( ""       [-i <interface>]           Network interface to bind.\\n"" )"		130994	0					
ANR	131183	Callee	printf		130994	0					
ANR	131184	Identifier	printf		130994	0					
ANR	131185	ArgumentList	"""       [-i <interface>]           Network interface to bind.\\n"""		130994	1					
ANR	131186	Argument	"""       [-i <interface>]           Network interface to bind.\\n"""		130994	0					
ANR	131187	PrimaryExpression	"""       [-i <interface>]           Network interface to bind.\\n"""		130994	0					
ANR	131188	ExpressionStatement	"printf ( ""       [-b <local_address>]       Local address to bind.\\n"" )"	329:4:9151:9228	130994	27	True				
ANR	131189	CallExpression	"printf ( ""       [-b <local_address>]       Local address to bind.\\n"" )"		130994	0					
ANR	131190	Callee	printf		130994	0					
ANR	131191	Identifier	printf		130994	0					
ANR	131192	ArgumentList	"""       [-b <local_address>]       Local address to bind.\\n"""		130994	1					
ANR	131193	Argument	"""       [-b <local_address>]       Local address to bind.\\n"""		130994	0					
ANR	131194	PrimaryExpression	"""       [-b <local_address>]       Local address to bind.\\n"""		130994	0					
ANR	131195	ExpressionStatement	"printf ( ""\\n"" )"	331:4:9234:9246	130994	28	True				
ANR	131196	CallExpression	"printf ( ""\\n"" )"		130994	0					
ANR	131197	Callee	printf		130994	0					
ANR	131198	Identifier	printf		130994	0					
ANR	131199	ArgumentList	"""\\n"""		130994	1					
ANR	131200	Argument	"""\\n"""		130994	0					
ANR	131201	PrimaryExpression	"""\\n"""		130994	0					
ANR	131202	ExpressionStatement	"printf ( ""       [-u]                       Enable UDP relay.\\n"" )"	332:4:9252:9324	130994	29	True				
ANR	131203	CallExpression	"printf ( ""       [-u]                       Enable UDP relay.\\n"" )"		130994	0					
ANR	131204	Callee	printf		130994	0					
ANR	131205	Identifier	printf		130994	0					
ANR	131206	ArgumentList	"""       [-u]                       Enable UDP relay.\\n"""		130994	1					
ANR	131207	Argument	"""       [-u]                       Enable UDP relay.\\n"""		130994	0					
ANR	131208	PrimaryExpression	"""       [-u]                       Enable UDP relay.\\n"""		130994	0					
ANR	131209	ExpressionStatement	"printf ( ""                                  TPROXY is required in redir mode.\\n"" )"	335:4:9350:9438	130994	30	True				
ANR	131210	CallExpression	"printf ( ""                                  TPROXY is required in redir mode.\\n"" )"		130994	0					
ANR	131211	Callee	printf		130994	0					
ANR	131212	Identifier	printf		130994	0					
ANR	131213	ArgumentList	"""                                  TPROXY is required in redir mode.\\n"""		130994	1					
ANR	131214	Argument	"""                                  TPROXY is required in redir mode.\\n"""		130994	0					
ANR	131215	PrimaryExpression	"""                                  TPROXY is required in redir mode.\\n"""		130994	0					
ANR	131216	ExpressionStatement	"printf ( ""       [-U]                       Enable UDP relay and disable TCP relay.\\n"" )"	338:4:9451:9545	130994	31	True				
ANR	131217	CallExpression	"printf ( ""       [-U]                       Enable UDP relay and disable TCP relay.\\n"" )"		130994	0					
ANR	131218	Callee	printf		130994	0					
ANR	131219	Identifier	printf		130994	0					
ANR	131220	ArgumentList	"""       [-U]                       Enable UDP relay and disable TCP relay.\\n"""		130994	1					
ANR	131221	Argument	"""       [-U]                       Enable UDP relay and disable TCP relay.\\n"""		130994	0					
ANR	131222	PrimaryExpression	"""       [-U]                       Enable UDP relay and disable TCP relay.\\n"""		130994	0					
ANR	131223	ExpressionStatement	"printf ( ""       [-6]                       Resovle hostname to IPv6 address first.\\n"" )"	341:4:9572:9666	130994	32	True				
ANR	131224	CallExpression	"printf ( ""       [-6]                       Resovle hostname to IPv6 address first.\\n"" )"		130994	0					
ANR	131225	Callee	printf		130994	0					
ANR	131226	Identifier	printf		130994	0					
ANR	131227	ArgumentList	"""       [-6]                       Resovle hostname to IPv6 address first.\\n"""		130994	1					
ANR	131228	Argument	"""       [-6]                       Resovle hostname to IPv6 address first.\\n"""		130994	0					
ANR	131229	PrimaryExpression	"""       [-6]                       Resovle hostname to IPv6 address first.\\n"""		130994	0					
ANR	131230	ExpressionStatement	"printf ( ""\\n"" )"	344:4:9679:9691	130994	33	True				
ANR	131231	CallExpression	"printf ( ""\\n"" )"		130994	0					
ANR	131232	Callee	printf		130994	0					
ANR	131233	Identifier	printf		130994	0					
ANR	131234	ArgumentList	"""\\n"""		130994	1					
ANR	131235	Argument	"""\\n"""		130994	0					
ANR	131236	PrimaryExpression	"""\\n"""		130994	0					
ANR	131237	ExpressionStatement	"printf ( ""       [-L <addr>:<port>]         Destination server address and port\\n"" )"	346:4:9718:9808	130994	34	True				
ANR	131238	CallExpression	"printf ( ""       [-L <addr>:<port>]         Destination server address and port\\n"" )"		130994	0					
ANR	131239	Callee	printf		130994	0					
ANR	131240	Identifier	printf		130994	0					
ANR	131241	ArgumentList	"""       [-L <addr>:<port>]         Destination server address and port\\n"""		130994	1					
ANR	131242	Argument	"""       [-L <addr>:<port>]         Destination server address and port\\n"""		130994	0					
ANR	131243	PrimaryExpression	"""       [-L <addr>:<port>]         Destination server address and port\\n"""		130994	0					
ANR	131244	ExpressionStatement	"printf ( ""                                  for local port forwarding.\\n"" )"	348:4:9814:9895	130994	35	True				
ANR	131245	CallExpression	"printf ( ""                                  for local port forwarding.\\n"" )"		130994	0					
ANR	131246	Callee	printf		130994	0					
ANR	131247	Identifier	printf		130994	0					
ANR	131248	ArgumentList	"""                                  for local port forwarding.\\n"""		130994	1					
ANR	131249	Argument	"""                                  for local port forwarding.\\n"""		130994	0					
ANR	131250	PrimaryExpression	"""                                  for local port forwarding.\\n"""		130994	0					
ANR	131251	ExpressionStatement	"printf ( ""       [-d <addr>]                Name servers for internal DNS resolver.\\n"" )"	352:4:9929:10023	130994	36	True				
ANR	131252	CallExpression	"printf ( ""       [-d <addr>]                Name servers for internal DNS resolver.\\n"" )"		130994	0					
ANR	131253	Callee	printf		130994	0					
ANR	131254	Identifier	printf		130994	0					
ANR	131255	ArgumentList	"""       [-d <addr>]                Name servers for internal DNS resolver.\\n"""		130994	1					
ANR	131256	Argument	"""       [-d <addr>]                Name servers for internal DNS resolver.\\n"""		130994	0					
ANR	131257	PrimaryExpression	"""       [-d <addr>]                Name servers for internal DNS resolver.\\n"""		130994	0					
ANR	131258	ExpressionStatement	"printf ( ""       [--reuse-port]             Enable port reuse.\\n"" )"	355:4:10036:10109	130994	37	True				
ANR	131259	CallExpression	"printf ( ""       [--reuse-port]             Enable port reuse.\\n"" )"		130994	0					
ANR	131260	Callee	printf		130994	0					
ANR	131261	Identifier	printf		130994	0					
ANR	131262	ArgumentList	"""       [--reuse-port]             Enable port reuse.\\n"""		130994	1					
ANR	131263	Argument	"""       [--reuse-port]             Enable port reuse.\\n"""		130994	0					
ANR	131264	PrimaryExpression	"""       [--reuse-port]             Enable port reuse.\\n"""		130994	0					
ANR	131265	ExpressionStatement	"printf ( ""       [--fast-open]              Enable TCP fast open.\\n"" )"	358:4:10192:10268	130994	38	True				
ANR	131266	CallExpression	"printf ( ""       [--fast-open]              Enable TCP fast open.\\n"" )"		130994	0					
ANR	131267	Callee	printf		130994	0					
ANR	131268	Identifier	printf		130994	0					
ANR	131269	ArgumentList	"""       [--fast-open]              Enable TCP fast open.\\n"""		130994	1					
ANR	131270	Argument	"""       [--fast-open]              Enable TCP fast open.\\n"""		130994	0					
ANR	131271	PrimaryExpression	"""       [--fast-open]              Enable TCP fast open.\\n"""		130994	0					
ANR	131272	ExpressionStatement	"printf ( ""                                  with Linux kernel > 3.7.0.\\n"" )"	360:4:10274:10355	130994	39	True				
ANR	131273	CallExpression	"printf ( ""                                  with Linux kernel > 3.7.0.\\n"" )"		130994	0					
ANR	131274	Callee	printf		130994	0					
ANR	131275	Identifier	printf		130994	0					
ANR	131276	ArgumentList	"""                                  with Linux kernel > 3.7.0.\\n"""		130994	1					
ANR	131277	Argument	"""                                  with Linux kernel > 3.7.0.\\n"""		130994	0					
ANR	131278	PrimaryExpression	"""                                  with Linux kernel > 3.7.0.\\n"""		130994	0					
ANR	131279	ExpressionStatement	"printf ( ""       [--acl <acl_file>]         Path to ACL (Access Control List).\\n"" )"	364:4:10420:10509	130994	40	True				
ANR	131280	CallExpression	"printf ( ""       [--acl <acl_file>]         Path to ACL (Access Control List).\\n"" )"		130994	0					
ANR	131281	Callee	printf		130994	0					
ANR	131282	Identifier	printf		130994	0					
ANR	131283	ArgumentList	"""       [--acl <acl_file>]         Path to ACL (Access Control List).\\n"""		130994	1					
ANR	131284	Argument	"""       [--acl <acl_file>]         Path to ACL (Access Control List).\\n"""		130994	0					
ANR	131285	PrimaryExpression	"""       [--acl <acl_file>]         Path to ACL (Access Control List).\\n"""		130994	0					
ANR	131286	ExpressionStatement	"printf ( ""       [--manager-address <addr>] UNIX domain socket address.\\n"" )"	368:4:10576:10658	130994	41	True				
ANR	131287	CallExpression	"printf ( ""       [--manager-address <addr>] UNIX domain socket address.\\n"" )"		130994	0					
ANR	131288	Callee	printf		130994	0					
ANR	131289	Identifier	printf		130994	0					
ANR	131290	ArgumentList	"""       [--manager-address <addr>] UNIX domain socket address.\\n"""		130994	1					
ANR	131291	Argument	"""       [--manager-address <addr>] UNIX domain socket address.\\n"""		130994	0					
ANR	131292	PrimaryExpression	"""       [--manager-address <addr>] UNIX domain socket address.\\n"""		130994	0					
ANR	131293	ExpressionStatement	"printf ( ""       [--executable <path>]      Path to the executable of ss-server.\\n"" )"	372:4:10693:10784	130994	42	True				
ANR	131294	CallExpression	"printf ( ""       [--executable <path>]      Path to the executable of ss-server.\\n"" )"		130994	0					
ANR	131295	Callee	printf		130994	0					
ANR	131296	Identifier	printf		130994	0					
ANR	131297	ArgumentList	"""       [--executable <path>]      Path to the executable of ss-server.\\n"""		130994	1					
ANR	131298	Argument	"""       [--executable <path>]      Path to the executable of ss-server.\\n"""		130994	0					
ANR	131299	PrimaryExpression	"""       [--executable <path>]      Path to the executable of ss-server.\\n"""		130994	0					
ANR	131300	ExpressionStatement	"printf ( ""       [--mtu <MTU>]              MTU of your network interface.\\n"" )"	375:4:10797:10882	130994	43	True				
ANR	131301	CallExpression	"printf ( ""       [--mtu <MTU>]              MTU of your network interface.\\n"" )"		130994	0					
ANR	131302	Callee	printf		130994	0					
ANR	131303	Identifier	printf		130994	0					
ANR	131304	ArgumentList	"""       [--mtu <MTU>]              MTU of your network interface.\\n"""		130994	1					
ANR	131305	Argument	"""       [--mtu <MTU>]              MTU of your network interface.\\n"""		130994	0					
ANR	131306	PrimaryExpression	"""       [--mtu <MTU>]              MTU of your network interface.\\n"""		130994	0					
ANR	131307	ExpressionStatement	"printf ( ""       [--mptcp]                  Enable Multipath TCP on MPTCP Kernel.\\n"" )"	378:4:10905:10997	130994	44	True				
ANR	131308	CallExpression	"printf ( ""       [--mptcp]                  Enable Multipath TCP on MPTCP Kernel.\\n"" )"		130994	0					
ANR	131309	Callee	printf		130994	0					
ANR	131310	Identifier	printf		130994	0					
ANR	131311	ArgumentList	"""       [--mptcp]                  Enable Multipath TCP on MPTCP Kernel.\\n"""		130994	1					
ANR	131312	Argument	"""       [--mptcp]                  Enable Multipath TCP on MPTCP Kernel.\\n"""		130994	0					
ANR	131313	PrimaryExpression	"""       [--mptcp]                  Enable Multipath TCP on MPTCP Kernel.\\n"""		130994	0					
ANR	131314	ExpressionStatement	"printf ( ""       [--no-delay]               Enable TCP_NODELAY.\\n"" )"	382:4:11033:11107	130994	45	True				
ANR	131315	CallExpression	"printf ( ""       [--no-delay]               Enable TCP_NODELAY.\\n"" )"		130994	0					
ANR	131316	Callee	printf		130994	0					
ANR	131317	Identifier	printf		130994	0					
ANR	131318	ArgumentList	"""       [--no-delay]               Enable TCP_NODELAY.\\n"""		130994	1					
ANR	131319	Argument	"""       [--no-delay]               Enable TCP_NODELAY.\\n"""		130994	0					
ANR	131320	PrimaryExpression	"""       [--no-delay]               Enable TCP_NODELAY.\\n"""		130994	0					
ANR	131321	ExpressionStatement	"printf ( ""       [--key <key_in_base64>]    Key of your remote server.\\n"" )"	384:4:11113:11194	130994	46	True				
ANR	131322	CallExpression	"printf ( ""       [--key <key_in_base64>]    Key of your remote server.\\n"" )"		130994	0					
ANR	131323	Callee	printf		130994	0					
ANR	131324	Identifier	printf		130994	0					
ANR	131325	ArgumentList	"""       [--key <key_in_base64>]    Key of your remote server.\\n"""		130994	1					
ANR	131326	Argument	"""       [--key <key_in_base64>]    Key of your remote server.\\n"""		130994	0					
ANR	131327	PrimaryExpression	"""       [--key <key_in_base64>]    Key of your remote server.\\n"""		130994	0					
ANR	131328	ExpressionStatement	"printf ( ""       [--plugin <name>]          Enable SIP003 plugin. (Experimental)\\n"" )"	387:4:11207:11298	130994	47	True				
ANR	131329	CallExpression	"printf ( ""       [--plugin <name>]          Enable SIP003 plugin. (Experimental)\\n"" )"		130994	0					
ANR	131330	Callee	printf		130994	0					
ANR	131331	Identifier	printf		130994	0					
ANR	131332	ArgumentList	"""       [--plugin <name>]          Enable SIP003 plugin. (Experimental)\\n"""		130994	1					
ANR	131333	Argument	"""       [--plugin <name>]          Enable SIP003 plugin. (Experimental)\\n"""		130994	0					
ANR	131334	PrimaryExpression	"""       [--plugin <name>]          Enable SIP003 plugin. (Experimental)\\n"""		130994	0					
ANR	131335	ExpressionStatement	"printf ( ""       [--plugin-opts <options>]  Set SIP003 plugin options. (Experimental)\\n"" )"	389:4:11304:11400	130994	48	True				
ANR	131336	CallExpression	"printf ( ""       [--plugin-opts <options>]  Set SIP003 plugin options. (Experimental)\\n"" )"		130994	0					
ANR	131337	Callee	printf		130994	0					
ANR	131338	Identifier	printf		130994	0					
ANR	131339	ArgumentList	"""       [--plugin-opts <options>]  Set SIP003 plugin options. (Experimental)\\n"""		130994	1					
ANR	131340	Argument	"""       [--plugin-opts <options>]  Set SIP003 plugin options. (Experimental)\\n"""		130994	0					
ANR	131341	PrimaryExpression	"""       [--plugin-opts <options>]  Set SIP003 plugin options. (Experimental)\\n"""		130994	0					
ANR	131342	ExpressionStatement	"printf ( ""\\n"" )"	391:4:11406:11418	130994	49	True				
ANR	131343	CallExpression	"printf ( ""\\n"" )"		130994	0					
ANR	131344	Callee	printf		130994	0					
ANR	131345	Identifier	printf		130994	0					
ANR	131346	ArgumentList	"""\\n"""		130994	1					
ANR	131347	Argument	"""\\n"""		130994	0					
ANR	131348	PrimaryExpression	"""\\n"""		130994	0					
ANR	131349	ExpressionStatement	"printf ( ""       [-v]                       Verbose mode.\\n"" )"	392:4:11424:11492	130994	50	True				
ANR	131350	CallExpression	"printf ( ""       [-v]                       Verbose mode.\\n"" )"		130994	0					
ANR	131351	Callee	printf		130994	0					
ANR	131352	Identifier	printf		130994	0					
ANR	131353	ArgumentList	"""       [-v]                       Verbose mode.\\n"""		130994	1					
ANR	131354	Argument	"""       [-v]                       Verbose mode.\\n"""		130994	0					
ANR	131355	PrimaryExpression	"""       [-v]                       Verbose mode.\\n"""		130994	0					
ANR	131356	ExpressionStatement	"printf ( ""       [-h, --help]               Print this message.\\n"" )"	394:4:11498:11572	130994	51	True				
ANR	131357	CallExpression	"printf ( ""       [-h, --help]               Print this message.\\n"" )"		130994	0					
ANR	131358	Callee	printf		130994	0					
ANR	131359	Identifier	printf		130994	0					
ANR	131360	ArgumentList	"""       [-h, --help]               Print this message.\\n"""		130994	1					
ANR	131361	Argument	"""       [-h, --help]               Print this message.\\n"""		130994	0					
ANR	131362	PrimaryExpression	"""       [-h, --help]               Print this message.\\n"""		130994	0					
ANR	131363	ExpressionStatement	"printf ( ""\\n"" )"	396:4:11578:11590	130994	52	True				
ANR	131364	CallExpression	"printf ( ""\\n"" )"		130994	0					
ANR	131365	Callee	printf		130994	0					
ANR	131366	Identifier	printf		130994	0					
ANR	131367	ArgumentList	"""\\n"""		130994	1					
ANR	131368	Argument	"""\\n"""		130994	0					
ANR	131369	PrimaryExpression	"""\\n"""		130994	0					
ANR	131370	ReturnType	void		130994	1					
ANR	131371	Identifier	usage		130994	2					
ANR	131372	ParameterList			130994	3					
ANR	131373	CFGEntryNode	ENTRY		130994		True				
ANR	131374	CFGExitNode	EXIT		130994		True				
ANR	131375	Symbol	VERSION		130994						
ANR	131376	Function	daemonize	399:0:11595:12612							
ANR	131377	FunctionDef	daemonize (const char * path)		131376	0					
ANR	131378	CompoundStatement		401:0:11628:12612	131376	0					
ANR	131379	IdentifierDeclStatement	"pid_t pid , sid ;"	403:4:11674:11688	131376	0	True				
ANR	131380	IdentifierDecl	pid		131376	0					
ANR	131381	IdentifierDeclType	pid_t		131376	0					
ANR	131382	Identifier	pid		131376	1					
ANR	131383	IdentifierDecl	sid		131376	1					
ANR	131384	IdentifierDeclType	pid_t		131376	0					
ANR	131385	Identifier	sid		131376	1					
ANR	131386	ExpressionStatement	pid = fork ( )	406:4:11733:11745	131376	1	True				
ANR	131387	AssignmentExpression	pid = fork ( )		131376	0		=			
ANR	131388	Identifier	pid		131376	0					
ANR	131389	CallExpression	fork ( )		131376	1					
ANR	131390	Callee	fork		131376	0					
ANR	131391	Identifier	fork		131376	0					
ANR	131392	ArgumentList			131376	1					
ANR	131393	IfStatement	if ( pid < 0 )		131376	2					
ANR	131394	Condition	pid < 0	407:8:11755:11761	131376	0	True				
ANR	131395	RelationalExpression	pid < 0		131376	0		<			
ANR	131396	Identifier	pid		131376	0					
ANR	131397	PrimaryExpression	0		131376	1					
ANR	131398	CompoundStatement		7:17:135:135	131376	1					
ANR	131399	ExpressionStatement	exit ( EXIT_FAILURE )	408:8:11774:11792	131376	0	True				
ANR	131400	CallExpression	exit ( EXIT_FAILURE )		131376	0					
ANR	131401	Callee	exit		131376	0					
ANR	131402	Identifier	exit		131376	0					
ANR	131403	ArgumentList	EXIT_FAILURE		131376	1					
ANR	131404	Argument	EXIT_FAILURE		131376	0					
ANR	131405	Identifier	EXIT_FAILURE		131376	0					
ANR	131406	IfStatement	if ( pid > 0 )		131376	3					
ANR	131407	Condition	pid > 0	413:8:11885:11891	131376	0	True				
ANR	131408	RelationalExpression	pid > 0		131376	0		>			
ANR	131409	Identifier	pid		131376	0					
ANR	131410	PrimaryExpression	0		131376	1					
ANR	131411	CompoundStatement		14:8:275:304	131376	1					
ANR	131412	IdentifierDeclStatement	"FILE * file = fopen ( path , ""w"" ) ;"	414:8:11904:11933	131376	0	True				
ANR	131413	IdentifierDecl	"* file = fopen ( path , ""w"" )"		131376	0					
ANR	131414	IdentifierDeclType	FILE *		131376	0					
ANR	131415	Identifier	file		131376	1					
ANR	131416	AssignmentExpression	"* file = fopen ( path , ""w"" )"		131376	2		=			
ANR	131417	Identifier	file		131376	0					
ANR	131418	CallExpression	"fopen ( path , ""w"" )"		131376	1					
ANR	131419	Callee	fopen		131376	0					
ANR	131420	Identifier	fopen		131376	0					
ANR	131421	ArgumentList	path		131376	1					
ANR	131422	Argument	path		131376	0					
ANR	131423	Identifier	path		131376	0					
ANR	131424	Argument	"""w"""		131376	1					
ANR	131425	PrimaryExpression	"""w"""		131376	0					
ANR	131426	IfStatement	if ( file == NULL )		131376	1					
ANR	131427	Condition	file == NULL	415:12:11947:11958	131376	0	True				
ANR	131428	EqualityExpression	file == NULL		131376	0		==			
ANR	131429	Identifier	file		131376	0					
ANR	131430	Identifier	NULL		131376	1					
ANR	131431	CompoundStatement		15:26:332:332	131376	1					
ANR	131432	ExpressionStatement	"FATAL ( ""Invalid pid file\\n"" )"	416:12:11975:12002	131376	0	True				
ANR	131433	CallExpression	"FATAL ( ""Invalid pid file\\n"" )"		131376	0					
ANR	131434	Callee	FATAL		131376	0					
ANR	131435	Identifier	FATAL		131376	0					
ANR	131436	ArgumentList	"""Invalid pid file\\n"""		131376	1					
ANR	131437	Argument	"""Invalid pid file\\n"""		131376	0					
ANR	131438	PrimaryExpression	"""Invalid pid file\\n"""		131376	0					
ANR	131439	ExpressionStatement	"fprintf ( file , ""%d"" , ( int ) pid )"	419:8:12023:12052	131376	2	True				
ANR	131440	CallExpression	"fprintf ( file , ""%d"" , ( int ) pid )"		131376	0					
ANR	131441	Callee	fprintf		131376	0					
ANR	131442	Identifier	fprintf		131376	0					
ANR	131443	ArgumentList	file		131376	1					
ANR	131444	Argument	file		131376	0					
ANR	131445	Identifier	file		131376	0					
ANR	131446	Argument	"""%d"""		131376	1					
ANR	131447	PrimaryExpression	"""%d"""		131376	0					
ANR	131448	Argument	( int ) pid		131376	2					
ANR	131449	CastExpression	( int ) pid		131376	0					
ANR	131450	CastTarget	int		131376	0					
ANR	131451	Identifier	pid		131376	1					
ANR	131452	ExpressionStatement	fclose ( file )	420:8:12062:12074	131376	3	True				
ANR	131453	CallExpression	fclose ( file )		131376	0					
ANR	131454	Callee	fclose		131376	0					
ANR	131455	Identifier	fclose		131376	0					
ANR	131456	ArgumentList	file		131376	1					
ANR	131457	Argument	file		131376	0					
ANR	131458	Identifier	file		131376	0					
ANR	131459	ExpressionStatement	exit ( EXIT_SUCCESS )	421:8:12084:12102	131376	4	True				
ANR	131460	CallExpression	exit ( EXIT_SUCCESS )		131376	0					
ANR	131461	Callee	exit		131376	0					
ANR	131462	Identifier	exit		131376	0					
ANR	131463	ArgumentList	EXIT_SUCCESS		131376	1					
ANR	131464	Argument	EXIT_SUCCESS		131376	0					
ANR	131465	Identifier	EXIT_SUCCESS		131376	0					
ANR	131466	ExpressionStatement	umask ( 0 )	425:4:12151:12159	131376	4	True				
ANR	131467	CallExpression	umask ( 0 )		131376	0					
ANR	131468	Callee	umask		131376	0					
ANR	131469	Identifier	umask		131376	0					
ANR	131470	ArgumentList	0		131376	1					
ANR	131471	Argument	0		131376	0					
ANR	131472	PrimaryExpression	0		131376	0					
ANR	131473	ExpressionStatement	sid = setsid ( )	430:4:12245:12259	131376	5	True				
ANR	131474	AssignmentExpression	sid = setsid ( )		131376	0		=			
ANR	131475	Identifier	sid		131376	0					
ANR	131476	CallExpression	setsid ( )		131376	1					
ANR	131477	Callee	setsid		131376	0					
ANR	131478	Identifier	setsid		131376	0					
ANR	131479	ArgumentList			131376	1					
ANR	131480	IfStatement	if ( sid < 0 )		131376	6					
ANR	131481	Condition	sid < 0	431:8:12269:12275	131376	0	True				
ANR	131482	RelationalExpression	sid < 0		131376	0		<			
ANR	131483	Identifier	sid		131376	0					
ANR	131484	PrimaryExpression	0		131376	1					
ANR	131485	CompoundStatement		31:17:649:649	131376	1					
ANR	131486	ExpressionStatement	exit ( EXIT_FAILURE )	433:8:12318:12336	131376	0	True				
ANR	131487	CallExpression	exit ( EXIT_FAILURE )		131376	0					
ANR	131488	Callee	exit		131376	0					
ANR	131489	Identifier	exit		131376	0					
ANR	131490	ArgumentList	EXIT_FAILURE		131376	1					
ANR	131491	Argument	EXIT_FAILURE		131376	0					
ANR	131492	Identifier	EXIT_FAILURE		131376	0					
ANR	131493	IfStatement	"if ( ( chdir ( ""/"" ) ) < 0 )"		131376	7					
ANR	131494	Condition	"( chdir ( ""/"" ) ) < 0"	437:8:12400:12415	131376	0	True				
ANR	131495	RelationalExpression	"( chdir ( ""/"" ) ) < 0"		131376	0		<			
ANR	131496	CallExpression	"chdir ( ""/"" )"		131376	0					
ANR	131497	Callee	chdir		131376	0					
ANR	131498	Identifier	chdir		131376	0					
ANR	131499	ArgumentList	"""/"""		131376	1					
ANR	131500	Argument	"""/"""		131376	0					
ANR	131501	PrimaryExpression	"""/"""		131376	0					
ANR	131502	PrimaryExpression	0		131376	1					
ANR	131503	CompoundStatement		37:26:789:789	131376	1					
ANR	131504	ExpressionStatement	exit ( EXIT_FAILURE )	439:8:12458:12476	131376	0	True				
ANR	131505	CallExpression	exit ( EXIT_FAILURE )		131376	0					
ANR	131506	Callee	exit		131376	0					
ANR	131507	Identifier	exit		131376	0					
ANR	131508	ArgumentList	EXIT_FAILURE		131376	1					
ANR	131509	Argument	EXIT_FAILURE		131376	0					
ANR	131510	Identifier	EXIT_FAILURE		131376	0					
ANR	131511	ExpressionStatement	close ( STDIN_FILENO )	443:4:12539:12558	131376	8	True				
ANR	131512	CallExpression	close ( STDIN_FILENO )		131376	0					
ANR	131513	Callee	close		131376	0					
ANR	131514	Identifier	close		131376	0					
ANR	131515	ArgumentList	STDIN_FILENO		131376	1					
ANR	131516	Argument	STDIN_FILENO		131376	0					
ANR	131517	Identifier	STDIN_FILENO		131376	0					
ANR	131518	ExpressionStatement	close ( STDOUT_FILENO )	444:4:12564:12584	131376	9	True				
ANR	131519	CallExpression	close ( STDOUT_FILENO )		131376	0					
ANR	131520	Callee	close		131376	0					
ANR	131521	Identifier	close		131376	0					
ANR	131522	ArgumentList	STDOUT_FILENO		131376	1					
ANR	131523	Argument	STDOUT_FILENO		131376	0					
ANR	131524	Identifier	STDOUT_FILENO		131376	0					
ANR	131525	ExpressionStatement	close ( STDERR_FILENO )	445:4:12590:12610	131376	10	True				
ANR	131526	CallExpression	close ( STDERR_FILENO )		131376	0					
ANR	131527	Callee	close		131376	0					
ANR	131528	Identifier	close		131376	0					
ANR	131529	ArgumentList	STDERR_FILENO		131376	1					
ANR	131530	Argument	STDERR_FILENO		131376	0					
ANR	131531	Identifier	STDERR_FILENO		131376	0					
ANR	131532	ReturnType	void		131376	1					
ANR	131533	Identifier	daemonize		131376	2					
ANR	131534	ParameterList	const char * path		131376	3					
ANR	131535	Parameter	const char * path	400:10:11610:11625	131376	0	True				
ANR	131536	ParameterType	const char *		131376	0					
ANR	131537	Identifier	path		131376	1					
ANR	131538	CFGEntryNode	ENTRY		131376		True				
ANR	131539	CFGExitNode	EXIT		131376		True				
ANR	131540	Symbol	fopen		131376						
ANR	131541	Symbol	NULL		131376						
ANR	131542	Symbol	STDIN_FILENO		131376						
ANR	131543	Symbol	STDOUT_FILENO		131376						
ANR	131544	Symbol	pid		131376						
ANR	131545	Symbol	chdir		131376						
ANR	131546	Symbol	sid		131376						
ANR	131547	Symbol	setsid		131376						
ANR	131548	Symbol	path		131376						
ANR	131549	Symbol	fork		131376						
ANR	131550	Symbol	file		131376						
ANR	131551	Symbol	EXIT_FAILURE		131376						
ANR	131552	Symbol	EXIT_SUCCESS		131376						
ANR	131553	Symbol	STDERR_FILENO		131376						
ANR	131554	Function	set_nofile	449:0:12637:13289							
ANR	131555	FunctionDef	set_nofile (int nofile)		131554	0					
ANR	131556	CompoundStatement		451:0:12664:13289	131554	0					
ANR	131557	IdentifierDeclStatement	"struct rlimit limit = { nofile , nofile } ;"	452:4:12670:12710	131554	0	True				
ANR	131558	IdentifierDecl	"limit = { nofile , nofile }"		131554	0					
ANR	131559	IdentifierDeclType	struct rlimit		131554	0					
ANR	131560	Identifier	limit		131554	1					
ANR	131561	AssignmentExpression	"limit = { nofile , nofile }"		131554	2		=			
ANR	131562	Identifier	limit		131554	0					
ANR	131563	InitializerList	nofile		131554	1					
ANR	131564	Identifier	nofile		131554	0					
ANR	131565	Identifier	nofile		131554	1					
ANR	131566	IfStatement	if ( nofile <= 0 )		131554	1					
ANR	131567	Condition	nofile <= 0	454:8:12756:12766	131554	0	True				
ANR	131568	RelationalExpression	nofile <= 0		131554	0		<=			
ANR	131569	Identifier	nofile		131554	0					
ANR	131570	PrimaryExpression	0		131554	1					
ANR	131571	CompoundStatement		4:21:104:104	131554	1					
ANR	131572	ExpressionStatement	"FATAL ( ""nofile must be greater than 0\\n"" )"	455:8:12779:12819	131554	0	True				
ANR	131573	CallExpression	"FATAL ( ""nofile must be greater than 0\\n"" )"		131554	0					
ANR	131574	Callee	FATAL		131554	0					
ANR	131575	Identifier	FATAL		131554	0					
ANR	131576	ArgumentList	"""nofile must be greater than 0\\n"""		131554	1					
ANR	131577	Argument	"""nofile must be greater than 0\\n"""		131554	0					
ANR	131578	PrimaryExpression	"""nofile must be greater than 0\\n"""		131554	0					
ANR	131579	IfStatement	"if ( setrlimit ( RLIMIT_NOFILE , & limit ) < 0 )"		131554	2					
ANR	131580	Condition	"setrlimit ( RLIMIT_NOFILE , & limit ) < 0"	458:8:12836:12871	131554	0	True				
ANR	131581	RelationalExpression	"setrlimit ( RLIMIT_NOFILE , & limit ) < 0"		131554	0		<			
ANR	131582	CallExpression	"setrlimit ( RLIMIT_NOFILE , & limit )"		131554	0					
ANR	131583	Callee	setrlimit		131554	0					
ANR	131584	Identifier	setrlimit		131554	0					
ANR	131585	ArgumentList	RLIMIT_NOFILE		131554	1					
ANR	131586	Argument	RLIMIT_NOFILE		131554	0					
ANR	131587	Identifier	RLIMIT_NOFILE		131554	0					
ANR	131588	Argument	& limit		131554	1					
ANR	131589	UnaryOperationExpression	& limit		131554	0					
ANR	131590	UnaryOperator	&		131554	0					
ANR	131591	Identifier	limit		131554	1					
ANR	131592	PrimaryExpression	0		131554	1					
ANR	131593	CompoundStatement		8:46:209:209	131554	1					
ANR	131594	IfStatement	if ( errno == EPERM )		131554	0					
ANR	131595	Condition	errno == EPERM	459:12:12888:12901	131554	0	True				
ANR	131596	EqualityExpression	errno == EPERM		131554	0		==			
ANR	131597	Identifier	errno		131554	0					
ANR	131598	Identifier	EPERM		131554	1					
ANR	131599	CompoundStatement		9:28:239:239	131554	1					
ANR	131600	ExpressionStatement	"LOGE ( ""insufficient permission to change NOFILE, not starting as root?"" )"	460:12:12918:13006	131554	0	True				
ANR	131601	CallExpression	"LOGE ( ""insufficient permission to change NOFILE, not starting as root?"" )"		131554	0					
ANR	131602	Callee	LOGE		131554	0					
ANR	131603	Identifier	LOGE		131554	0					
ANR	131604	ArgumentList	"""insufficient permission to change NOFILE, not starting as root?"""		131554	1					
ANR	131605	Argument	"""insufficient permission to change NOFILE, not starting as root?"""		131554	0					
ANR	131606	PrimaryExpression	"""insufficient permission to change NOFILE, not starting as root?"""		131554	0					
ANR	131607	ReturnStatement	return - 1 ;	462:12:13020:13029	131554	1	True				
ANR	131608	UnaryOperationExpression	- 1		131554	0					
ANR	131609	UnaryOperator	-		131554	0					
ANR	131610	PrimaryExpression	1		131554	1					
ANR	131611	ElseStatement	else		131554	0					
ANR	131612	IfStatement	if ( errno == EINVAL )		131554	0					
ANR	131613	Condition	errno == EINVAL	463:19:13050:13064	131554	0	True				
ANR	131614	EqualityExpression	errno == EINVAL		131554	0		==			
ANR	131615	Identifier	errno		131554	0					
ANR	131616	Identifier	EINVAL		131554	1					
ANR	131617	CompoundStatement		13:36:402:402	131554	1					
ANR	131618	ExpressionStatement	"LOGE ( ""invalid nofile, decrease nofile and try again"" )"	464:12:13081:13134	131554	0	True				
ANR	131619	CallExpression	"LOGE ( ""invalid nofile, decrease nofile and try again"" )"		131554	0					
ANR	131620	Callee	LOGE		131554	0					
ANR	131621	Identifier	LOGE		131554	0					
ANR	131622	ArgumentList	"""invalid nofile, decrease nofile and try again"""		131554	1					
ANR	131623	Argument	"""invalid nofile, decrease nofile and try again"""		131554	0					
ANR	131624	PrimaryExpression	"""invalid nofile, decrease nofile and try again"""		131554	0					
ANR	131625	ReturnStatement	return - 1 ;	465:12:13148:13157	131554	1	True				
ANR	131626	UnaryOperationExpression	- 1		131554	0					
ANR	131627	UnaryOperator	-		131554	0					
ANR	131628	PrimaryExpression	1		131554	1					
ANR	131629	ElseStatement	else		131554	0					
ANR	131630	CompoundStatement		16:15:509:509	131554	0					
ANR	131631	ExpressionStatement	"LOGE ( ""setrlimit failed: %s"" , strerror ( errno ) )"	467:12:13188:13233	131554	0	True				
ANR	131632	CallExpression	"LOGE ( ""setrlimit failed: %s"" , strerror ( errno ) )"		131554	0					
ANR	131633	Callee	LOGE		131554	0					
ANR	131634	Identifier	LOGE		131554	0					
ANR	131635	ArgumentList	"""setrlimit failed: %s"""		131554	1					
ANR	131636	Argument	"""setrlimit failed: %s"""		131554	0					
ANR	131637	PrimaryExpression	"""setrlimit failed: %s"""		131554	0					
ANR	131638	Argument	strerror ( errno )		131554	1					
ANR	131639	CallExpression	strerror ( errno )		131554	0					
ANR	131640	Callee	strerror		131554	0					
ANR	131641	Identifier	strerror		131554	0					
ANR	131642	ArgumentList	errno		131554	1					
ANR	131643	Argument	errno		131554	0					
ANR	131644	Identifier	errno		131554	0					
ANR	131645	ReturnStatement	return - 1 ;	468:12:13247:13256	131554	1	True				
ANR	131646	UnaryOperationExpression	- 1		131554	0					
ANR	131647	UnaryOperator	-		131554	0					
ANR	131648	PrimaryExpression	1		131554	1					
ANR	131649	ReturnStatement	return 0 ;	472:4:13279:13287	131554	3	True				
ANR	131650	PrimaryExpression	0		131554	0					
ANR	131651	ReturnType	int		131554	1					
ANR	131652	Identifier	set_nofile		131554	2					
ANR	131653	ParameterList	int nofile		131554	3					
ANR	131654	Parameter	int nofile	450:11:12652:12661	131554	0	True				
ANR	131655	ParameterType	int		131554	0					
ANR	131656	Identifier	nofile		131554	1					
ANR	131657	CFGEntryNode	ENTRY		131554		True				
ANR	131658	CFGExitNode	EXIT		131554		True				
ANR	131659	Symbol	EINVAL		131554						
ANR	131660	Symbol	strerror		131554						
ANR	131661	Symbol	errno		131554						
ANR	131662	Symbol	EPERM		131554						
ANR	131663	Symbol	limit		131554						
ANR	131664	Symbol	setrlimit		131554						
ANR	131665	Symbol	& limit		131554						
ANR	131666	Symbol	nofile		131554						
ANR	131667	Symbol	RLIMIT_NOFILE		131554						
