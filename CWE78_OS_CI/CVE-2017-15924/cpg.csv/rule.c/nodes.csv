command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	46492	File	data/converged/CVE-2017-15924_shadowsocks-libev/rule.c								
ANR	46493	DeclStmt									
ANR	46494	Decl							void	void ( rule_t * )	free_rule
ANR	46495	Function	new_rule	40:0:1620:1793							
ANR	46496	FunctionDef	new_rule ()		46495	0					
ANR	46497	CompoundStatement		42:0:1640:1793	46495	0					
ANR	46498	IdentifierDeclStatement	rule_t * rule ;	43:4:1646:1658	46495	0	True				
ANR	46499	IdentifierDecl	* rule		46495	0					
ANR	46500	IdentifierDeclType	rule_t *		46495	0					
ANR	46501	Identifier	rule		46495	1					
ANR	46502	ExpressionStatement	"rule = calloc ( 1 , sizeof ( rule_t ) )"	45:4:1665:1697	46495	1	True				
ANR	46503	AssignmentExpression	"rule = calloc ( 1 , sizeof ( rule_t ) )"		46495	0		=			
ANR	46504	Identifier	rule		46495	0					
ANR	46505	CallExpression	"calloc ( 1 , sizeof ( rule_t ) )"		46495	1					
ANR	46506	Callee	calloc		46495	0					
ANR	46507	Identifier	calloc		46495	0					
ANR	46508	ArgumentList	1		46495	1					
ANR	46509	Argument	1		46495	0					
ANR	46510	PrimaryExpression	1		46495	0					
ANR	46511	Argument	sizeof ( rule_t )		46495	1					
ANR	46512	SizeofExpression	sizeof ( rule_t )		46495	0					
ANR	46513	Sizeof	sizeof		46495	0					
ANR	46514	SizeofOperand	rule_t		46495	1					
ANR	46515	IfStatement	if ( rule == NULL )		46495	2					
ANR	46516	Condition	rule == NULL	46:8:1707:1718	46495	0	True				
ANR	46517	EqualityExpression	rule == NULL		46495	0		==			
ANR	46518	Identifier	rule		46495	0					
ANR	46519	Identifier	NULL		46495	1					
ANR	46520	CompoundStatement		5:22:80:80	46495	1					
ANR	46521	ExpressionStatement	"ERROR ( ""malloc"" )"	47:8:1731:1746	46495	0	True				
ANR	46522	CallExpression	"ERROR ( ""malloc"" )"		46495	0					
ANR	46523	Callee	ERROR		46495	0					
ANR	46524	Identifier	ERROR		46495	0					
ANR	46525	ArgumentList	"""malloc"""		46495	1					
ANR	46526	Argument	"""malloc"""		46495	0					
ANR	46527	PrimaryExpression	"""malloc"""		46495	0					
ANR	46528	ReturnStatement	return NULL ;	48:8:1756:1767	46495	1	True				
ANR	46529	Identifier	NULL		46495	0					
ANR	46530	ReturnStatement	return rule ;	51:4:1780:1791	46495	3	True				
ANR	46531	Identifier	rule		46495	0					
ANR	46532	ReturnType	rule_t *		46495	1					
ANR	46533	Identifier	new_rule		46495	2					
ANR	46534	ParameterList			46495	3					
ANR	46535	CFGEntryNode	ENTRY		46495		True				
ANR	46536	CFGExitNode	EXIT		46495		True				
ANR	46537	Symbol	NULL		46495						
ANR	46538	Symbol	rule		46495						
ANR	46539	Symbol	calloc		46495						
ANR	46540	Function	accept_rule_arg	54:0:1796:2135							
ANR	46541	FunctionDef	"accept_rule_arg (rule_t * rule , const char * arg)"		46540	0					
ANR	46542	CompoundStatement		56:0:1847:2135	46540	0					
ANR	46543	IfStatement	if ( rule -> pattern == NULL )		46540	0					
ANR	46544	Condition	rule -> pattern == NULL	57:8:1857:1877	46540	0	True				
ANR	46545	EqualityExpression	rule -> pattern == NULL		46540	0		==			
ANR	46546	PtrMemberAccess	rule -> pattern		46540	0					
ANR	46547	Identifier	rule		46540	0					
ANR	46548	Identifier	pattern		46540	1					
ANR	46549	Identifier	NULL		46540	1					
ANR	46550	CompoundStatement		2:31:32:32	46540	1					
ANR	46551	ExpressionStatement	rule -> pattern = strdup ( arg )	58:8:1890:1917	46540	0	True				
ANR	46552	AssignmentExpression	rule -> pattern = strdup ( arg )		46540	0		=			
ANR	46553	PtrMemberAccess	rule -> pattern		46540	0					
ANR	46554	Identifier	rule		46540	0					
ANR	46555	Identifier	pattern		46540	1					
ANR	46556	CallExpression	strdup ( arg )		46540	1					
ANR	46557	Callee	strdup		46540	0					
ANR	46558	Identifier	strdup		46540	0					
ANR	46559	ArgumentList	arg		46540	1					
ANR	46560	Argument	arg		46540	0					
ANR	46561	Identifier	arg		46540	0					
ANR	46562	IfStatement	if ( rule -> pattern == NULL )		46540	1					
ANR	46563	Condition	rule -> pattern == NULL	59:12:1931:1951	46540	0	True				
ANR	46564	EqualityExpression	rule -> pattern == NULL		46540	0		==			
ANR	46565	PtrMemberAccess	rule -> pattern		46540	0					
ANR	46566	Identifier	rule		46540	0					
ANR	46567	Identifier	pattern		46540	1					
ANR	46568	Identifier	NULL		46540	1					
ANR	46569	CompoundStatement		4:35:106:106	46540	1					
ANR	46570	ExpressionStatement	"ERROR ( ""strdup failed"" )"	60:12:1968:1990	46540	0	True				
ANR	46571	CallExpression	"ERROR ( ""strdup failed"" )"		46540	0					
ANR	46572	Callee	ERROR		46540	0					
ANR	46573	Identifier	ERROR		46540	0					
ANR	46574	ArgumentList	"""strdup failed"""		46540	1					
ANR	46575	Argument	"""strdup failed"""		46540	0					
ANR	46576	PrimaryExpression	"""strdup failed"""		46540	0					
ANR	46577	ReturnStatement	return - 1 ;	61:12:2004:2013	46540	1	True				
ANR	46578	UnaryOperationExpression	- 1		46540	0					
ANR	46579	UnaryOperator	-		46540	0					
ANR	46580	PrimaryExpression	1		46540	1					
ANR	46581	ElseStatement	else		46540	0					
ANR	46582	CompoundStatement		8:11:188:188	46540	0					
ANR	46583	ExpressionStatement	"LOGE ( ""Unexpected table rule argument: %s"" , arg )"	64:8:2046:2093	46540	0	True				
ANR	46584	CallExpression	"LOGE ( ""Unexpected table rule argument: %s"" , arg )"		46540	0					
ANR	46585	Callee	LOGE		46540	0					
ANR	46586	Identifier	LOGE		46540	0					
ANR	46587	ArgumentList	"""Unexpected table rule argument: %s"""		46540	1					
ANR	46588	Argument	"""Unexpected table rule argument: %s"""		46540	0					
ANR	46589	PrimaryExpression	"""Unexpected table rule argument: %s"""		46540	0					
ANR	46590	Argument	arg		46540	1					
ANR	46591	Identifier	arg		46540	0					
ANR	46592	ReturnStatement	return - 1 ;	65:8:2103:2112	46540	1	True				
ANR	46593	UnaryOperationExpression	- 1		46540	0					
ANR	46594	UnaryOperator	-		46540	0					
ANR	46595	PrimaryExpression	1		46540	1					
ANR	46596	ReturnStatement	return 1 ;	68:4:2125:2133	46540	1	True				
ANR	46597	PrimaryExpression	1		46540	0					
ANR	46598	ReturnType	int		46540	1					
ANR	46599	Identifier	accept_rule_arg		46540	2					
ANR	46600	ParameterList	"rule_t * rule , const char * arg"		46540	3					
ANR	46601	Parameter	rule_t * rule	55:16:1816:1827	46540	0	True				
ANR	46602	ParameterType	rule_t *		46540	0					
ANR	46603	Identifier	rule		46540	1					
ANR	46604	Parameter	const char * arg	55:30:1830:1844	46540	1	True				
ANR	46605	ParameterType	const char *		46540	0					
ANR	46606	Identifier	arg		46540	1					
ANR	46607	CFGEntryNode	ENTRY		46540		True				
ANR	46608	CFGExitNode	EXIT		46540		True				
ANR	46609	Symbol	NULL		46540						
ANR	46610	Symbol	rule -> pattern		46540						
ANR	46611	Symbol	* rule		46540						
ANR	46612	Symbol	arg		46540						
ANR	46613	Symbol	rule		46540						
ANR	46614	Symbol	strdup		46540						
ANR	46615	Function	add_rule	71:0:2138:2239							
ANR	46616	FunctionDef	"add_rule (struct cork_dllist * rules , rule_t * rule)"		46615	0					
ANR	46617	CompoundStatement		73:0:2193:2239	46615	0					
ANR	46618	ExpressionStatement	"cork_dllist_add ( rules , & rule -> entries )"	74:4:2199:2237	46615	0	True				
ANR	46619	CallExpression	"cork_dllist_add ( rules , & rule -> entries )"		46615	0					
ANR	46620	Callee	cork_dllist_add		46615	0					
ANR	46621	Identifier	cork_dllist_add		46615	0					
ANR	46622	ArgumentList	rules		46615	1					
ANR	46623	Argument	rules		46615	0					
ANR	46624	Identifier	rules		46615	0					
ANR	46625	Argument	& rule -> entries		46615	1					
ANR	46626	UnaryOperationExpression	& rule -> entries		46615	0					
ANR	46627	UnaryOperator	&		46615	0					
ANR	46628	PtrMemberAccess	rule -> entries		46615	1					
ANR	46629	Identifier	rule		46615	0					
ANR	46630	Identifier	entries		46615	1					
ANR	46631	ReturnType	void		46615	1					
ANR	46632	Identifier	add_rule		46615	2					
ANR	46633	ParameterList	"struct cork_dllist * rules , rule_t * rule"		46615	3					
ANR	46634	Parameter	struct cork_dllist * rules	72:9:2152:2176	46615	0	True				
ANR	46635	ParameterType	struct cork_dllist *		46615	0					
ANR	46636	Identifier	rules		46615	1					
ANR	46637	Parameter	rule_t * rule	72:36:2179:2190	46615	1	True				
ANR	46638	ParameterType	rule_t *		46615	0					
ANR	46639	Identifier	rule		46615	1					
ANR	46640	CFGEntryNode	ENTRY		46615		True				
ANR	46641	CFGExitNode	EXIT		46615		True				
ANR	46642	Symbol	& rule -> entries		46615						
ANR	46643	Symbol	rule		46615						
ANR	46644	Symbol	rules		46615						
ANR	46645	Function	init_rule	77:0:2242:2676							
ANR	46646	FunctionDef	init_rule (rule_t * rule)		46645	0					
ANR	46647	CompoundStatement		79:0:2270:2676	46645	0					
ANR	46648	IfStatement	if ( rule -> pattern_re == NULL )		46645	0					
ANR	46649	Condition	rule -> pattern_re == NULL	80:8:2280:2303	46645	0	True				
ANR	46650	EqualityExpression	rule -> pattern_re == NULL		46645	0		==			
ANR	46651	PtrMemberAccess	rule -> pattern_re		46645	0					
ANR	46652	Identifier	rule		46645	0					
ANR	46653	Identifier	pattern_re		46645	1					
ANR	46654	Identifier	NULL		46645	1					
ANR	46655	CompoundStatement		4:8:72:87	46645	1					
ANR	46656	IdentifierDeclStatement	const char * reerr ;	81:8:2316:2333	46645	0	True				
ANR	46657	IdentifierDecl	* reerr		46645	0					
ANR	46658	IdentifierDeclType	const char *		46645	0					
ANR	46659	Identifier	reerr		46645	1					
ANR	46660	IdentifierDeclStatement	int reerroffset ;	82:8:2343:2358	46645	1	True				
ANR	46661	IdentifierDecl	reerroffset		46645	0					
ANR	46662	IdentifierDeclType	int		46645	0					
ANR	46663	Identifier	reerroffset		46645	1					
ANR	46664	ExpressionStatement	"rule -> pattern_re = pcre_compile ( rule -> pattern , 0 , & reerr , & reerroffset , NULL )"	84:8:2369:2458	46645	2	True				
ANR	46665	AssignmentExpression	"rule -> pattern_re = pcre_compile ( rule -> pattern , 0 , & reerr , & reerroffset , NULL )"		46645	0		=			
ANR	46666	PtrMemberAccess	rule -> pattern_re		46645	0					
ANR	46667	Identifier	rule		46645	0					
ANR	46668	Identifier	pattern_re		46645	1					
ANR	46669	CallExpression	"pcre_compile ( rule -> pattern , 0 , & reerr , & reerroffset , NULL )"		46645	1					
ANR	46670	Callee	pcre_compile		46645	0					
ANR	46671	Identifier	pcre_compile		46645	0					
ANR	46672	ArgumentList	rule -> pattern		46645	1					
ANR	46673	Argument	rule -> pattern		46645	0					
ANR	46674	PtrMemberAccess	rule -> pattern		46645	0					
ANR	46675	Identifier	rule		46645	0					
ANR	46676	Identifier	pattern		46645	1					
ANR	46677	Argument	0		46645	1					
ANR	46678	PrimaryExpression	0		46645	0					
ANR	46679	Argument	& reerr		46645	2					
ANR	46680	UnaryOperationExpression	& reerr		46645	0					
ANR	46681	UnaryOperator	&		46645	0					
ANR	46682	Identifier	reerr		46645	1					
ANR	46683	Argument	& reerroffset		46645	3					
ANR	46684	UnaryOperationExpression	& reerroffset		46645	0					
ANR	46685	UnaryOperator	&		46645	0					
ANR	46686	Identifier	reerroffset		46645	1					
ANR	46687	Argument	NULL		46645	4					
ANR	46688	Identifier	NULL		46645	0					
ANR	46689	IfStatement	if ( rule -> pattern_re == NULL )		46645	3					
ANR	46690	Condition	rule -> pattern_re == NULL	86:12:2472:2495	46645	0	True				
ANR	46691	EqualityExpression	rule -> pattern_re == NULL		46645	0		==			
ANR	46692	PtrMemberAccess	rule -> pattern_re		46645	0					
ANR	46693	Identifier	rule		46645	0					
ANR	46694	Identifier	pattern_re		46645	1					
ANR	46695	Identifier	NULL		46645	1					
ANR	46696	CompoundStatement		8:38:227:227	46645	1					
ANR	46697	ExpressionStatement	"LOGE ( ""Regex compilation of \\""%s\\"" failed: %s, offset %d"" , rule -> pattern , reerr , reerroffset )"	87:12:2512:2621	46645	0	True				
ANR	46698	CallExpression	"LOGE ( ""Regex compilation of \\""%s\\"" failed: %s, offset %d"" , rule -> pattern , reerr , reerroffset )"		46645	0					
ANR	46699	Callee	LOGE		46645	0					
ANR	46700	Identifier	LOGE		46645	0					
ANR	46701	ArgumentList	"""Regex compilation of \\""%s\\"" failed: %s, offset %d"""		46645	1					
ANR	46702	Argument	"""Regex compilation of \\""%s\\"" failed: %s, offset %d"""		46645	0					
ANR	46703	PrimaryExpression	"""Regex compilation of \\""%s\\"" failed: %s, offset %d"""		46645	0					
ANR	46704	Argument	rule -> pattern		46645	1					
ANR	46705	PtrMemberAccess	rule -> pattern		46645	0					
ANR	46706	Identifier	rule		46645	0					
ANR	46707	Identifier	pattern		46645	1					
ANR	46708	Argument	reerr		46645	2					
ANR	46709	Identifier	reerr		46645	0					
ANR	46710	Argument	reerroffset		46645	3					
ANR	46711	Identifier	reerroffset		46645	0					
ANR	46712	ReturnStatement	return 0 ;	89:12:2635:2643	46645	1	True				
ANR	46713	PrimaryExpression	0		46645	0					
ANR	46714	ReturnStatement	return 1 ;	93:4:2666:2674	46645	1	True				
ANR	46715	PrimaryExpression	1		46645	0					
ANR	46716	ReturnType	int		46645	1					
ANR	46717	Identifier	init_rule		46645	2					
ANR	46718	ParameterList	rule_t * rule		46645	3					
ANR	46719	Parameter	rule_t * rule	78:10:2256:2267	46645	0	True				
ANR	46720	ParameterType	rule_t *		46645	0					
ANR	46721	Identifier	rule		46645	1					
ANR	46722	CFGEntryNode	ENTRY		46645		True				
ANR	46723	CFGExitNode	EXIT		46645		True				
ANR	46724	Symbol	reerroffset		46645						
ANR	46725	Symbol	rule -> pattern_re		46645						
ANR	46726	Symbol	NULL		46645						
ANR	46727	Symbol	& reerr		46645						
ANR	46728	Symbol	rule -> pattern		46645						
ANR	46729	Symbol	* rule		46645						
ANR	46730	Symbol	reerr		46645						
ANR	46731	Symbol	& reerroffset		46645						
ANR	46732	Symbol	rule		46645						
ANR	46733	Symbol	pcre_compile		46645						
ANR	46734	Function	lookup_rule	96:0:2679:3158							
ANR	46735	FunctionDef	"lookup_rule (const struct cork_dllist * rules , const char * name , size_t name_len)"		46734	0					
ANR	46736	CompoundStatement		98:0:2768:3158	46734	0					
ANR	46737	IdentifierDeclStatement	"struct cork_dllist_item * curr , * next ;"	99:4:2774:2810	46734	0	True				
ANR	46738	IdentifierDecl	* curr		46734	0					
ANR	46739	IdentifierDeclType	struct cork_dllist_item *		46734	0					
ANR	46740	Identifier	curr		46734	1					
ANR	46741	IdentifierDecl	* next		46734	1					
ANR	46742	IdentifierDeclType	struct cork_dllist_item *		46734	0					
ANR	46743	Identifier	next		46734	1					
ANR	46744	IfStatement	if ( name == NULL )		46734	1					
ANR	46745	Condition	name == NULL	101:8:2821:2832	46734	0	True				
ANR	46746	EqualityExpression	name == NULL		46734	0		==			
ANR	46747	Identifier	name		46734	0					
ANR	46748	Identifier	NULL		46734	1					
ANR	46749	CompoundStatement		4:22:66:66	46734	1					
ANR	46750	ExpressionStatement	"name = """""	102:8:2845:2858	46734	0	True				
ANR	46751	AssignmentExpression	"name = """""		46734	0		=			
ANR	46752	Identifier	name		46734	0					
ANR	46753	PrimaryExpression	""""""		46734	1					
ANR	46754	ExpressionStatement	name_len = 0	103:8:2868:2880	46734	1	True				
ANR	46755	AssignmentExpression	name_len = 0		46734	0		=			
ANR	46756	Identifier	name_len		46734	0					
ANR	46757	PrimaryExpression	0		46734	1					
ANR	46758	Statement	cork_dllist_foreach_void	106:4:2893:2916	46734	2	True				
ANR	46759	Statement	(	106:28:2917:2917	46734	3	True				
ANR	46760	Statement	rules	106:29:2918:2922	46734	4	True				
ANR	46761	Statement	","	106:34:2923:2923	46734	5	True				
ANR	46762	Statement	curr	106:36:2925:2928	46734	6	True				
ANR	46763	Statement	","	106:40:2929:2929	46734	7	True				
ANR	46764	Statement	next	106:42:2931:2934	46734	8	True				
ANR	46765	Statement	)	106:46:2935:2935	46734	9	True				
ANR	46766	CompoundStatement		10:8:178:233	46734	10					
ANR	46767	IdentifierDeclStatement	"rule_t * rule = cork_container_of ( curr , rule_t , entries ) ;"	107:8:2947:3002	46734	0	True				
ANR	46768	IdentifierDecl	"* rule = cork_container_of ( curr , rule_t , entries )"		46734	0					
ANR	46769	IdentifierDeclType	rule_t *		46734	0					
ANR	46770	Identifier	rule		46734	1					
ANR	46771	AssignmentExpression	"* rule = cork_container_of ( curr , rule_t , entries )"		46734	2		=			
ANR	46772	Identifier	rule		46734	0					
ANR	46773	CallExpression	"cork_container_of ( curr , rule_t , entries )"		46734	1					
ANR	46774	Callee	cork_container_of		46734	0					
ANR	46775	Identifier	cork_container_of		46734	0					
ANR	46776	ArgumentList	curr		46734	1					
ANR	46777	Argument	curr		46734	0					
ANR	46778	Identifier	curr		46734	0					
ANR	46779	Argument	rule_t		46734	1					
ANR	46780	Identifier	rule_t		46734	0					
ANR	46781	Argument	entries		46734	2					
ANR	46782	Identifier	entries		46734	0					
ANR	46783	IfStatement	"if ( pcre_exec ( rule -> pattern_re , NULL , name , name_len , 0 , 0 , NULL , 0 ) >= 0 )"		46734	1					
ANR	46784	Condition	"pcre_exec ( rule -> pattern_re , NULL , name , name_len , 0 , 0 , NULL , 0 ) >= 0"	108:12:3016:3106	46734	0	True				
ANR	46785	RelationalExpression	"pcre_exec ( rule -> pattern_re , NULL , name , name_len , 0 , 0 , NULL , 0 ) >= 0"		46734	0		>=			
ANR	46786	CallExpression	"pcre_exec ( rule -> pattern_re , NULL , name , name_len , 0 , 0 , NULL , 0 )"		46734	0					
ANR	46787	Callee	pcre_exec		46734	0					
ANR	46788	Identifier	pcre_exec		46734	0					
ANR	46789	ArgumentList	rule -> pattern_re		46734	1					
ANR	46790	Argument	rule -> pattern_re		46734	0					
ANR	46791	PtrMemberAccess	rule -> pattern_re		46734	0					
ANR	46792	Identifier	rule		46734	0					
ANR	46793	Identifier	pattern_re		46734	1					
ANR	46794	Argument	NULL		46734	1					
ANR	46795	Identifier	NULL		46734	0					
ANR	46796	Argument	name		46734	2					
ANR	46797	Identifier	name		46734	0					
ANR	46798	Argument	name_len		46734	3					
ANR	46799	Identifier	name_len		46734	0					
ANR	46800	Argument	0		46734	4					
ANR	46801	PrimaryExpression	0		46734	0					
ANR	46802	Argument	0		46734	5					
ANR	46803	PrimaryExpression	0		46734	0					
ANR	46804	Argument	NULL		46734	6					
ANR	46805	Identifier	NULL		46734	0					
ANR	46806	Argument	0		46734	7					
ANR	46807	PrimaryExpression	0		46734	0					
ANR	46808	PrimaryExpression	0		46734	1					
ANR	46809	ReturnStatement	return rule ;	110:12:3121:3132	46734	1	True				
ANR	46810	Identifier	rule		46734	0					
ANR	46811	ReturnStatement	return NULL ;	113:4:3145:3156	46734	11	True				
ANR	46812	Identifier	NULL		46734	0					
ANR	46813	ReturnType	rule_t *		46734	1					
ANR	46814	Identifier	lookup_rule		46734	2					
ANR	46815	ParameterList	"const struct cork_dllist * rules , const char * name , size_t name_len"		46734	3					
ANR	46816	Parameter	const struct cork_dllist * rules	97:12:2700:2730	46734	0	True				
ANR	46817	ParameterType	const struct cork_dllist *		46734	0					
ANR	46818	Identifier	rules		46734	1					
ANR	46819	Parameter	const char * name	97:45:2733:2748	46734	1	True				
ANR	46820	ParameterType	const char *		46734	0					
ANR	46821	Identifier	name		46734	1					
ANR	46822	Parameter	size_t name_len	97:63:2751:2765	46734	2	True				
ANR	46823	ParameterType	size_t		46734	0					
ANR	46824	Identifier	name_len		46734	1					
ANR	46825	CFGEntryNode	ENTRY		46734		True				
ANR	46826	CFGExitNode	EXIT		46734		True				
ANR	46827	Symbol	next		46734						
ANR	46828	Symbol	rule -> pattern_re		46734						
ANR	46829	Symbol	NULL		46734						
ANR	46830	Symbol	pcre_exec		46734						
ANR	46831	Symbol	rule		46734						
ANR	46832	Symbol	rules		46734						
ANR	46833	Symbol	cork_container_of		46734						
ANR	46834	Symbol	entries		46734						
ANR	46835	Symbol	* rule		46734						
ANR	46836	Symbol	name		46734						
ANR	46837	Symbol	rule_t		46734						
ANR	46838	Symbol	name_len		46734						
ANR	46839	Symbol	curr		46734						
ANR	46840	Function	remove_rule	116:0:3161:3255							
ANR	46841	FunctionDef	remove_rule (rule_t * rule)		46840	0					
ANR	46842	CompoundStatement		118:0:3192:3255	46840	0					
ANR	46843	ExpressionStatement	cork_dllist_remove ( & rule -> entries )	119:4:3198:3232	46840	0	True				
ANR	46844	CallExpression	cork_dllist_remove ( & rule -> entries )		46840	0					
ANR	46845	Callee	cork_dllist_remove		46840	0					
ANR	46846	Identifier	cork_dllist_remove		46840	0					
ANR	46847	ArgumentList	& rule -> entries		46840	1					
ANR	46848	Argument	& rule -> entries		46840	0					
ANR	46849	UnaryOperationExpression	& rule -> entries		46840	0					
ANR	46850	UnaryOperator	&		46840	0					
ANR	46851	PtrMemberAccess	rule -> entries		46840	1					
ANR	46852	Identifier	rule		46840	0					
ANR	46853	Identifier	entries		46840	1					
ANR	46854	ExpressionStatement	free_rule ( rule )	120:4:3238:3253	46840	1	True				
ANR	46855	CallExpression	free_rule ( rule )		46840	0					
ANR	46856	Callee	free_rule		46840	0					
ANR	46857	Identifier	free_rule		46840	0					
ANR	46858	ArgumentList	rule		46840	1					
ANR	46859	Argument	rule		46840	0					
ANR	46860	Identifier	rule		46840	0					
ANR	46861	ReturnType	void		46840	1					
ANR	46862	Identifier	remove_rule		46840	2					
ANR	46863	ParameterList	rule_t * rule		46840	3					
ANR	46864	Parameter	rule_t * rule	117:12:3178:3189	46840	0	True				
ANR	46865	ParameterType	rule_t *		46840	0					
ANR	46866	Identifier	rule		46840	1					
ANR	46867	CFGEntryNode	ENTRY		46840		True				
ANR	46868	CFGExitNode	EXIT		46840		True				
ANR	46869	Symbol	& rule -> entries		46840						
ANR	46870	Symbol	rule		46840						
ANR	46871	Function	free_rule	123:0:3258:3453							
ANR	46872	FunctionDef	free_rule (rule_t * rule)		46871	0					
ANR	46873	CompoundStatement		125:0:3294:3453	46871	0					
ANR	46874	IfStatement	if ( rule == NULL )		46871	0					
ANR	46875	Condition	rule == NULL	126:8:3304:3315	46871	0	True				
ANR	46876	EqualityExpression	rule == NULL		46871	0		==			
ANR	46877	Identifier	rule		46871	0					
ANR	46878	Identifier	NULL		46871	1					
ANR	46879	ReturnStatement	return ;	127:8:3326:3332	46871	1	True				
ANR	46880	ExpressionStatement	ss_free ( rule -> pattern )	129:4:3339:3361	46871	1	True				
ANR	46881	CallExpression	ss_free ( rule -> pattern )		46871	0					
ANR	46882	Callee	ss_free		46871	0					
ANR	46883	Identifier	ss_free		46871	0					
ANR	46884	ArgumentList	rule -> pattern		46871	1					
ANR	46885	Argument	rule -> pattern		46871	0					
ANR	46886	PtrMemberAccess	rule -> pattern		46871	0					
ANR	46887	Identifier	rule		46871	0					
ANR	46888	Identifier	pattern		46871	1					
ANR	46889	IfStatement	if ( rule -> pattern_re != NULL )		46871	2					
ANR	46890	Condition	rule -> pattern_re != NULL	130:8:3371:3394	46871	0	True				
ANR	46891	EqualityExpression	rule -> pattern_re != NULL		46871	0		!=			
ANR	46892	PtrMemberAccess	rule -> pattern_re		46871	0					
ANR	46893	Identifier	rule		46871	0					
ANR	46894	Identifier	pattern_re		46871	1					
ANR	46895	Identifier	NULL		46871	1					
ANR	46896	ExpressionStatement	pcre_free ( rule -> pattern_re )	131:8:3405:3432	46871	1	True				
ANR	46897	CallExpression	pcre_free ( rule -> pattern_re )		46871	0					
ANR	46898	Callee	pcre_free		46871	0					
ANR	46899	Identifier	pcre_free		46871	0					
ANR	46900	ArgumentList	rule -> pattern_re		46871	1					
ANR	46901	Argument	rule -> pattern_re		46871	0					
ANR	46902	PtrMemberAccess	rule -> pattern_re		46871	0					
ANR	46903	Identifier	rule		46871	0					
ANR	46904	Identifier	pattern_re		46871	1					
ANR	46905	ExpressionStatement	ss_free ( rule )	132:4:3438:3451	46871	3	True				
ANR	46906	CallExpression	ss_free ( rule )		46871	0					
ANR	46907	Callee	ss_free		46871	0					
ANR	46908	Identifier	ss_free		46871	0					
ANR	46909	ArgumentList	rule		46871	1					
ANR	46910	Argument	rule		46871	0					
ANR	46911	Identifier	rule		46871	0					
ANR	46912	ReturnType	static void		46871	1					
ANR	46913	Identifier	free_rule		46871	2					
ANR	46914	ParameterList	rule_t * rule		46871	3					
ANR	46915	Parameter	rule_t * rule	124:10:3280:3291	46871	0	True				
ANR	46916	ParameterType	rule_t *		46871	0					
ANR	46917	Identifier	rule		46871	1					
ANR	46918	CFGEntryNode	ENTRY		46871		True				
ANR	46919	CFGExitNode	EXIT		46871		True				
ANR	46920	Symbol	rule -> pattern_re		46871						
ANR	46921	Symbol	NULL		46871						
ANR	46922	Symbol	rule -> pattern		46871						
ANR	46923	Symbol	* rule		46871						
ANR	46924	Symbol	rule		46871						
