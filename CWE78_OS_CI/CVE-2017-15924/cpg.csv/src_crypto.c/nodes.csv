command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	64687	File	data/converged/CVE-2017-15924_shadowsocks-libev/src_crypto.c								
ANR	64688	Function	balloc	45:0:1234:1414							
ANR	64689	FunctionDef	"balloc (buffer_t * ptr , size_t capacity)"		64688	0					
ANR	64690	CompoundStatement		47:0:1277:1414	64688	0					
ANR	64691	ExpressionStatement	"sodium_memzero ( ptr , sizeof ( buffer_t ) )"	48:4:1283:1320	64688	0	True				
ANR	64692	CallExpression	"sodium_memzero ( ptr , sizeof ( buffer_t ) )"		64688	0					
ANR	64693	Callee	sodium_memzero		64688	0					
ANR	64694	Identifier	sodium_memzero		64688	0					
ANR	64695	ArgumentList	ptr		64688	1					
ANR	64696	Argument	ptr		64688	0					
ANR	64697	Identifier	ptr		64688	0					
ANR	64698	Argument	sizeof ( buffer_t )		64688	1					
ANR	64699	SizeofExpression	sizeof ( buffer_t )		64688	0					
ANR	64700	Sizeof	sizeof		64688	0					
ANR	64701	SizeofOperand	buffer_t		64688	1					
ANR	64702	ExpressionStatement	ptr -> data = ss_malloc ( capacity )	49:4:1326:1361	64688	1	True				
ANR	64703	AssignmentExpression	ptr -> data = ss_malloc ( capacity )		64688	0		=			
ANR	64704	PtrMemberAccess	ptr -> data		64688	0					
ANR	64705	Identifier	ptr		64688	0					
ANR	64706	Identifier	data		64688	1					
ANR	64707	CallExpression	ss_malloc ( capacity )		64688	1					
ANR	64708	Callee	ss_malloc		64688	0					
ANR	64709	Identifier	ss_malloc		64688	0					
ANR	64710	ArgumentList	capacity		64688	1					
ANR	64711	Argument	capacity		64688	0					
ANR	64712	Identifier	capacity		64688	0					
ANR	64713	ExpressionStatement	ptr -> capacity = capacity	50:4:1367:1391	64688	2	True				
ANR	64714	AssignmentExpression	ptr -> capacity = capacity		64688	0		=			
ANR	64715	PtrMemberAccess	ptr -> capacity		64688	0					
ANR	64716	Identifier	ptr		64688	0					
ANR	64717	Identifier	capacity		64688	1					
ANR	64718	Identifier	capacity		64688	1					
ANR	64719	ReturnStatement	return capacity ;	51:4:1397:1412	64688	3	True				
ANR	64720	Identifier	capacity		64688	0					
ANR	64721	ReturnType	int		64688	1					
ANR	64722	Identifier	balloc		64688	2					
ANR	64723	ParameterList	"buffer_t * ptr , size_t capacity"		64688	3					
ANR	64724	Parameter	buffer_t * ptr	46:7:1245:1257	64688	0	True				
ANR	64725	ParameterType	buffer_t *		64688	0					
ANR	64726	Identifier	ptr		64688	1					
ANR	64727	Parameter	size_t capacity	46:22:1260:1274	64688	1	True				
ANR	64728	ParameterType	size_t		64688	0					
ANR	64729	Identifier	capacity		64688	1					
ANR	64730	CFGEntryNode	ENTRY		64688		True				
ANR	64731	CFGExitNode	EXIT		64688		True				
ANR	64732	Symbol	* ptr		64688						
ANR	64733	Symbol	ss_malloc		64688						
ANR	64734	Symbol	ptr -> data		64688						
ANR	64735	Symbol	ptr -> capacity		64688						
ANR	64736	Symbol	ptr		64688						
ANR	64737	Symbol	capacity		64688						
ANR	64738	Function	brealloc	54:0:1417:1737							
ANR	64739	FunctionDef	"brealloc (buffer_t * ptr , size_t len , size_t capacity)"		64738	0					
ANR	64740	CompoundStatement		56:0:1474:1737	64738	0					
ANR	64741	IfStatement	if ( ptr == NULL )		64738	0					
ANR	64742	Condition	ptr == NULL	57:8:1484:1494	64738	0	True				
ANR	64743	EqualityExpression	ptr == NULL		64738	0		==			
ANR	64744	Identifier	ptr		64738	0					
ANR	64745	Identifier	NULL		64738	1					
ANR	64746	ReturnStatement	return - 1 ;	58:8:1505:1514	64738	1	True				
ANR	64747	UnaryOperationExpression	- 1		64738	0					
ANR	64748	UnaryOperator	-		64738	0					
ANR	64749	PrimaryExpression	1		64738	1					
ANR	64750	IdentifierDeclStatement	"size_t real_capacity = max ( len , capacity ) ;"	59:4:1520:1561	64738	1	True				
ANR	64751	IdentifierDecl	"real_capacity = max ( len , capacity )"		64738	0					
ANR	64752	IdentifierDeclType	size_t		64738	0					
ANR	64753	Identifier	real_capacity		64738	1					
ANR	64754	AssignmentExpression	"real_capacity = max ( len , capacity )"		64738	2		=			
ANR	64755	Identifier	real_capacity		64738	0					
ANR	64756	CallExpression	"max ( len , capacity )"		64738	1					
ANR	64757	Callee	max		64738	0					
ANR	64758	Identifier	max		64738	0					
ANR	64759	ArgumentList	len		64738	1					
ANR	64760	Argument	len		64738	0					
ANR	64761	Identifier	len		64738	0					
ANR	64762	Argument	capacity		64738	1					
ANR	64763	Identifier	capacity		64738	0					
ANR	64764	IfStatement	if ( ptr -> capacity < real_capacity )		64738	2					
ANR	64765	Condition	ptr -> capacity < real_capacity	60:8:1571:1599	64738	0	True				
ANR	64766	RelationalExpression	ptr -> capacity < real_capacity		64738	0		<			
ANR	64767	PtrMemberAccess	ptr -> capacity		64738	0					
ANR	64768	Identifier	ptr		64738	0					
ANR	64769	Identifier	capacity		64738	1					
ANR	64770	Identifier	real_capacity		64738	1					
ANR	64771	CompoundStatement		5:39:127:127	64738	1					
ANR	64772	ExpressionStatement	"ptr -> data = ss_realloc ( ptr -> data , real_capacity )"	61:8:1612:1664	64738	0	True				
ANR	64773	AssignmentExpression	"ptr -> data = ss_realloc ( ptr -> data , real_capacity )"		64738	0		=			
ANR	64774	PtrMemberAccess	ptr -> data		64738	0					
ANR	64775	Identifier	ptr		64738	0					
ANR	64776	Identifier	data		64738	1					
ANR	64777	CallExpression	"ss_realloc ( ptr -> data , real_capacity )"		64738	1					
ANR	64778	Callee	ss_realloc		64738	0					
ANR	64779	Identifier	ss_realloc		64738	0					
ANR	64780	ArgumentList	ptr -> data		64738	1					
ANR	64781	Argument	ptr -> data		64738	0					
ANR	64782	PtrMemberAccess	ptr -> data		64738	0					
ANR	64783	Identifier	ptr		64738	0					
ANR	64784	Identifier	data		64738	1					
ANR	64785	Argument	real_capacity		64738	1					
ANR	64786	Identifier	real_capacity		64738	0					
ANR	64787	ExpressionStatement	ptr -> capacity = real_capacity	62:8:1674:1703	64738	1	True				
ANR	64788	AssignmentExpression	ptr -> capacity = real_capacity		64738	0		=			
ANR	64789	PtrMemberAccess	ptr -> capacity		64738	0					
ANR	64790	Identifier	ptr		64738	0					
ANR	64791	Identifier	capacity		64738	1					
ANR	64792	Identifier	real_capacity		64738	1					
ANR	64793	ReturnStatement	return real_capacity ;	64:4:1715:1735	64738	3	True				
ANR	64794	Identifier	real_capacity		64738	0					
ANR	64795	ReturnType	int		64738	1					
ANR	64796	Identifier	brealloc		64738	2					
ANR	64797	ParameterList	"buffer_t * ptr , size_t len , size_t capacity"		64738	3					
ANR	64798	Parameter	buffer_t * ptr	55:9:1430:1442	64738	0	True				
ANR	64799	ParameterType	buffer_t *		64738	0					
ANR	64800	Identifier	ptr		64738	1					
ANR	64801	Parameter	size_t len	55:24:1445:1454	64738	1	True				
ANR	64802	ParameterType	size_t		64738	0					
ANR	64803	Identifier	len		64738	1					
ANR	64804	Parameter	size_t capacity	55:36:1457:1471	64738	2	True				
ANR	64805	ParameterType	size_t		64738	0					
ANR	64806	Identifier	capacity		64738	1					
ANR	64807	CFGEntryNode	ENTRY		64738		True				
ANR	64808	CFGExitNode	EXIT		64738		True				
ANR	64809	Symbol	NULL		64738						
ANR	64810	Symbol	len		64738						
ANR	64811	Symbol	max		64738						
ANR	64812	Symbol	real_capacity		64738						
ANR	64813	Symbol	ss_realloc		64738						
ANR	64814	Symbol	* ptr		64738						
ANR	64815	Symbol	ptr -> capacity		64738						
ANR	64816	Symbol	ptr -> data		64738						
ANR	64817	Symbol	ptr		64738						
ANR	64818	Symbol	capacity		64738						
ANR	64819	Function	bfree	67:0:1740:1937							
ANR	64820	FunctionDef	bfree (buffer_t * ptr)		64819	0					
ANR	64821	CompoundStatement		69:0:1766:1937	64819	0					
ANR	64822	IfStatement	if ( ptr == NULL )		64819	0					
ANR	64823	Condition	ptr == NULL	70:8:1776:1786	64819	0	True				
ANR	64824	EqualityExpression	ptr == NULL		64819	0		==			
ANR	64825	Identifier	ptr		64819	0					
ANR	64826	Identifier	NULL		64819	1					
ANR	64827	ReturnStatement	return ;	71:8:1797:1803	64819	1	True				
ANR	64828	ExpressionStatement	ptr -> idx = 0	72:4:1809:1826	64819	1	True				
ANR	64829	AssignmentExpression	ptr -> idx = 0		64819	0		=			
ANR	64830	PtrMemberAccess	ptr -> idx		64819	0					
ANR	64831	Identifier	ptr		64819	0					
ANR	64832	Identifier	idx		64819	1					
ANR	64833	PrimaryExpression	0		64819	1					
ANR	64834	ExpressionStatement	ptr -> len = 0	73:4:1832:1849	64819	2	True				
ANR	64835	AssignmentExpression	ptr -> len = 0		64819	0		=			
ANR	64836	PtrMemberAccess	ptr -> len		64819	0					
ANR	64837	Identifier	ptr		64819	0					
ANR	64838	Identifier	len		64819	1					
ANR	64839	PrimaryExpression	0		64819	1					
ANR	64840	ExpressionStatement	ptr -> capacity = 0	74:4:1855:1872	64819	3	True				
ANR	64841	AssignmentExpression	ptr -> capacity = 0		64819	0		=			
ANR	64842	PtrMemberAccess	ptr -> capacity		64819	0					
ANR	64843	Identifier	ptr		64819	0					
ANR	64844	Identifier	capacity		64819	1					
ANR	64845	PrimaryExpression	0		64819	1					
ANR	64846	IfStatement	if ( ptr -> data != NULL )		64819	4					
ANR	64847	Condition	ptr -> data != NULL	75:8:1882:1898	64819	0	True				
ANR	64848	EqualityExpression	ptr -> data != NULL		64819	0		!=			
ANR	64849	PtrMemberAccess	ptr -> data		64819	0					
ANR	64850	Identifier	ptr		64819	0					
ANR	64851	Identifier	data		64819	1					
ANR	64852	Identifier	NULL		64819	1					
ANR	64853	CompoundStatement		7:27:134:134	64819	1					
ANR	64854	ExpressionStatement	ss_free ( ptr -> data )	76:8:1911:1929	64819	0	True				
ANR	64855	CallExpression	ss_free ( ptr -> data )		64819	0					
ANR	64856	Callee	ss_free		64819	0					
ANR	64857	Identifier	ss_free		64819	0					
ANR	64858	ArgumentList	ptr -> data		64819	1					
ANR	64859	Argument	ptr -> data		64819	0					
ANR	64860	PtrMemberAccess	ptr -> data		64819	0					
ANR	64861	Identifier	ptr		64819	0					
ANR	64862	Identifier	data		64819	1					
ANR	64863	ReturnType	void		64819	1					
ANR	64864	Identifier	bfree		64819	2					
ANR	64865	ParameterList	buffer_t * ptr		64819	3					
ANR	64866	Parameter	buffer_t * ptr	68:6:1751:1763	64819	0	True				
ANR	64867	ParameterType	buffer_t *		64819	0					
ANR	64868	Identifier	ptr		64819	1					
ANR	64869	CFGEntryNode	ENTRY		64819		True				
ANR	64870	CFGExitNode	EXIT		64819		True				
ANR	64871	Symbol	NULL		64819						
ANR	64872	Symbol	ptr -> idx		64819						
ANR	64873	Symbol	* ptr		64819						
ANR	64874	Symbol	ptr -> capacity		64819						
ANR	64875	Symbol	ptr -> data		64819						
ANR	64876	Symbol	ptr -> len		64819						
ANR	64877	Symbol	ptr		64819						
ANR	64878	Function	bprepend	80:0:1940:2209							
ANR	64879	FunctionDef	"bprepend (buffer_t * dst , buffer_t * src , size_t capacity)"		64878	0					
ANR	64880	CompoundStatement		82:0:2000:2209	64878	0					
ANR	64881	ExpressionStatement	"brealloc ( dst , dst -> len + src -> len , capacity )"	83:4:2006:2050	64878	0	True				
ANR	64882	CallExpression	"brealloc ( dst , dst -> len + src -> len , capacity )"		64878	0					
ANR	64883	Callee	brealloc		64878	0					
ANR	64884	Identifier	brealloc		64878	0					
ANR	64885	ArgumentList	dst		64878	1					
ANR	64886	Argument	dst		64878	0					
ANR	64887	Identifier	dst		64878	0					
ANR	64888	Argument	dst -> len + src -> len		64878	1					
ANR	64889	AdditiveExpression	dst -> len + src -> len		64878	0		+			
ANR	64890	PtrMemberAccess	dst -> len		64878	0					
ANR	64891	Identifier	dst		64878	0					
ANR	64892	Identifier	len		64878	1					
ANR	64893	PtrMemberAccess	src -> len		64878	1					
ANR	64894	Identifier	src		64878	0					
ANR	64895	Identifier	len		64878	1					
ANR	64896	Argument	capacity		64878	2					
ANR	64897	Identifier	capacity		64878	0					
ANR	64898	ExpressionStatement	"memmove ( dst -> data + src -> len , dst -> data , dst -> len )"	84:4:2056:2106	64878	1	True				
ANR	64899	CallExpression	"memmove ( dst -> data + src -> len , dst -> data , dst -> len )"		64878	0					
ANR	64900	Callee	memmove		64878	0					
ANR	64901	Identifier	memmove		64878	0					
ANR	64902	ArgumentList	dst -> data + src -> len		64878	1					
ANR	64903	Argument	dst -> data + src -> len		64878	0					
ANR	64904	AdditiveExpression	dst -> data + src -> len		64878	0		+			
ANR	64905	PtrMemberAccess	dst -> data		64878	0					
ANR	64906	Identifier	dst		64878	0					
ANR	64907	Identifier	data		64878	1					
ANR	64908	PtrMemberAccess	src -> len		64878	1					
ANR	64909	Identifier	src		64878	0					
ANR	64910	Identifier	len		64878	1					
ANR	64911	Argument	dst -> data		64878	1					
ANR	64912	PtrMemberAccess	dst -> data		64878	0					
ANR	64913	Identifier	dst		64878	0					
ANR	64914	Identifier	data		64878	1					
ANR	64915	Argument	dst -> len		64878	2					
ANR	64916	PtrMemberAccess	dst -> len		64878	0					
ANR	64917	Identifier	dst		64878	0					
ANR	64918	Identifier	len		64878	1					
ANR	64919	ExpressionStatement	"memcpy ( dst -> data , src -> data , src -> len )"	85:4:2112:2150	64878	2	True				
ANR	64920	CallExpression	"memcpy ( dst -> data , src -> data , src -> len )"		64878	0					
ANR	64921	Callee	memcpy		64878	0					
ANR	64922	Identifier	memcpy		64878	0					
ANR	64923	ArgumentList	dst -> data		64878	1					
ANR	64924	Argument	dst -> data		64878	0					
ANR	64925	PtrMemberAccess	dst -> data		64878	0					
ANR	64926	Identifier	dst		64878	0					
ANR	64927	Identifier	data		64878	1					
ANR	64928	Argument	src -> data		64878	1					
ANR	64929	PtrMemberAccess	src -> data		64878	0					
ANR	64930	Identifier	src		64878	0					
ANR	64931	Identifier	data		64878	1					
ANR	64932	Argument	src -> len		64878	2					
ANR	64933	PtrMemberAccess	src -> len		64878	0					
ANR	64934	Identifier	src		64878	0					
ANR	64935	Identifier	len		64878	1					
ANR	64936	ExpressionStatement	dst -> len = dst -> len + src -> len	86:4:2156:2186	64878	3	True				
ANR	64937	AssignmentExpression	dst -> len = dst -> len + src -> len		64878	0		=			
ANR	64938	PtrMemberAccess	dst -> len		64878	0					
ANR	64939	Identifier	dst		64878	0					
ANR	64940	Identifier	len		64878	1					
ANR	64941	AdditiveExpression	dst -> len + src -> len		64878	1		+			
ANR	64942	PtrMemberAccess	dst -> len		64878	0					
ANR	64943	Identifier	dst		64878	0					
ANR	64944	Identifier	len		64878	1					
ANR	64945	PtrMemberAccess	src -> len		64878	1					
ANR	64946	Identifier	src		64878	0					
ANR	64947	Identifier	len		64878	1					
ANR	64948	ReturnStatement	return dst -> len ;	87:4:2192:2207	64878	4	True				
ANR	64949	PtrMemberAccess	dst -> len		64878	0					
ANR	64950	Identifier	dst		64878	0					
ANR	64951	Identifier	len		64878	1					
ANR	64952	ReturnType	int		64878	1					
ANR	64953	Identifier	bprepend		64878	2					
ANR	64954	ParameterList	"buffer_t * dst , buffer_t * src , size_t capacity"		64878	3					
ANR	64955	Parameter	buffer_t * dst	81:9:1953:1965	64878	0	True				
ANR	64956	ParameterType	buffer_t *		64878	0					
ANR	64957	Identifier	dst		64878	1					
ANR	64958	Parameter	buffer_t * src	81:24:1968:1980	64878	1	True				
ANR	64959	ParameterType	buffer_t *		64878	0					
ANR	64960	Identifier	src		64878	1					
ANR	64961	Parameter	size_t capacity	81:39:1983:1997	64878	2	True				
ANR	64962	ParameterType	size_t		64878	0					
ANR	64963	Identifier	capacity		64878	1					
ANR	64964	CFGEntryNode	ENTRY		64878		True				
ANR	64965	CFGExitNode	EXIT		64878		True				
ANR	64966	Symbol	* dst		64878						
ANR	64967	Symbol	dst -> len		64878						
ANR	64968	Symbol	dst		64878						
ANR	64969	Symbol	src -> len		64878						
ANR	64970	Symbol	src		64878						
ANR	64971	Symbol	dst -> data		64878						
ANR	64972	Symbol	* src		64878						
ANR	64973	Symbol	src -> data		64878						
ANR	64974	Symbol	capacity		64878						
ANR	64975	Function	rand_bytes	90:0:2212:2329							
ANR	64976	FunctionDef	"rand_bytes (void * output , int len)"		64975	0					
ANR	64977	CompoundStatement		92:0:2250:2329	64975	0					
ANR	64978	ExpressionStatement	"randombytes_buf ( output , len )"	93:4:2256:2284	64975	0	True				
ANR	64979	CallExpression	"randombytes_buf ( output , len )"		64975	0					
ANR	64980	Callee	randombytes_buf		64975	0					
ANR	64981	Identifier	randombytes_buf		64975	0					
ANR	64982	ArgumentList	output		64975	1					
ANR	64983	Argument	output		64975	0					
ANR	64984	Identifier	output		64975	0					
ANR	64985	Argument	len		64975	1					
ANR	64986	Identifier	len		64975	0					
ANR	64987	ReturnStatement	return 0 ;	95:4:2319:2327	64975	1	True				
ANR	64988	PrimaryExpression	0		64975	0					
ANR	64989	ReturnType	int		64975	1					
ANR	64990	Identifier	rand_bytes		64975	2					
ANR	64991	ParameterList	"void * output , int len"		64975	3					
ANR	64992	Parameter	void * output	91:11:2227:2238	64975	0	True				
ANR	64993	ParameterType	void *		64975	0					
ANR	64994	Identifier	output		64975	1					
ANR	64995	Parameter	int len	91:25:2241:2247	64975	1	True				
ANR	64996	ParameterType	int		64975	0					
ANR	64997	Identifier	len		64975	1					
ANR	64998	CFGEntryNode	ENTRY		64975		True				
ANR	64999	CFGExitNode	EXIT		64975		True				
ANR	65000	Symbol	output		64975						
ANR	65001	Symbol	len		64975						
ANR	65002	Function	crypto_md5	98:0:2332:2532							
ANR	65003	FunctionDef	"crypto_md5 (const unsigned char * d , size_t n , unsigned char * md)"		65002	0					
ANR	65004	CompoundStatement		100:0:2412:2532	65002	0					
ANR	65005	Statement	static	101:4:2418:2423	65002	0	True				
ANR	65006	IdentifierDeclStatement	unsigned char m [ 16 ] ;	101:11:2425:2444	65002	1	True				
ANR	65007	IdentifierDecl	m [ 16 ]		65002	0					
ANR	65008	IdentifierDeclType	unsigned char [ 16 ]		65002	0					
ANR	65009	Identifier	m		65002	1					
ANR	65010	PrimaryExpression	16		65002	2					
ANR	65011	IfStatement	if ( md == NULL )		65002	2					
ANR	65012	Condition	md == NULL	102:8:2454:2463	65002	0	True				
ANR	65013	EqualityExpression	md == NULL		65002	0		==			
ANR	65014	Identifier	md		65002	0					
ANR	65015	Identifier	NULL		65002	1					
ANR	65016	CompoundStatement		3:20:53:53	65002	1					
ANR	65017	ExpressionStatement	md = m	103:8:2476:2482	65002	0	True				
ANR	65018	AssignmentExpression	md = m		65002	0		=			
ANR	65019	Identifier	md		65002	0					
ANR	65020	Identifier	m		65002	1					
ANR	65021	ExpressionStatement	"mbedtls_md5 ( d , n , md )"	105:4:2494:2515	65002	3	True				
ANR	65022	CallExpression	"mbedtls_md5 ( d , n , md )"		65002	0					
ANR	65023	Callee	mbedtls_md5		65002	0					
ANR	65024	Identifier	mbedtls_md5		65002	0					
ANR	65025	ArgumentList	d		65002	1					
ANR	65026	Argument	d		65002	0					
ANR	65027	Identifier	d		65002	0					
ANR	65028	Argument	n		65002	1					
ANR	65029	Identifier	n		65002	0					
ANR	65030	Argument	md		65002	2					
ANR	65031	Identifier	md		65002	0					
ANR	65032	ReturnStatement	return md ;	106:4:2521:2530	65002	4	True				
ANR	65033	Identifier	md		65002	0					
ANR	65034	ReturnType	unsigned char *		65002	1					
ANR	65035	Identifier	crypto_md5		65002	2					
ANR	65036	ParameterList	"const unsigned char * d , size_t n , unsigned char * md"		65002	3					
ANR	65037	Parameter	const unsigned char * d	99:11:2359:2380	65002	0	True				
ANR	65038	ParameterType	const unsigned char *		65002	0					
ANR	65039	Identifier	d		65002	1					
ANR	65040	Parameter	size_t n	99:35:2383:2390	65002	1	True				
ANR	65041	ParameterType	size_t		65002	0					
ANR	65042	Identifier	n		65002	1					
ANR	65043	Parameter	unsigned char * md	99:45:2393:2409	65002	2	True				
ANR	65044	ParameterType	unsigned char *		65002	0					
ANR	65045	Identifier	md		65002	1					
ANR	65046	CFGEntryNode	ENTRY		65002		True				
ANR	65047	CFGExitNode	EXIT		65002		True				
ANR	65048	Symbol	NULL		65002						
ANR	65049	Symbol	d		65002						
ANR	65050	Symbol	md		65002						
ANR	65051	Symbol	m		65002						
ANR	65052	Symbol	n		65002						
ANR	65053	Function	entropy_check	109:0:2535:3203							
ANR	65054	FunctionDef	entropy_check ()		65053	0					
ANR	65055	CompoundStatement		111:0:2567:3203	65053	0					
ANR	65056	IdentifierDeclStatement	int fd ;	113:4:2653:2659	65053	0	True				
ANR	65057	IdentifierDecl	fd		65053	0					
ANR	65058	IdentifierDeclType	int		65053	0					
ANR	65059	Identifier	fd		65053	1					
ANR	65060	IdentifierDeclStatement	int c ;	114:4:2665:2670	65053	1	True				
ANR	65061	IdentifierDecl	c		65053	0					
ANR	65062	IdentifierDeclType	int		65053	0					
ANR	65063	Identifier	c		65053	1					
ANR	65064	IfStatement	"if ( ( fd = open ( ""/dev/random"" , O_RDONLY ) ) != - 1 )"		65053	2					
ANR	65065	Condition	"( fd = open ( ""/dev/random"" , O_RDONLY ) ) != - 1"	116:8:2681:2722	65053	0	True				
ANR	65066	EqualityExpression	"( fd = open ( ""/dev/random"" , O_RDONLY ) ) != - 1"		65053	0		!=			
ANR	65067	AssignmentExpression	"fd = open ( ""/dev/random"" , O_RDONLY )"		65053	0		=			
ANR	65068	Identifier	fd		65053	0					
ANR	65069	CallExpression	"open ( ""/dev/random"" , O_RDONLY )"		65053	1					
ANR	65070	Callee	open		65053	0					
ANR	65071	Identifier	open		65053	0					
ANR	65072	ArgumentList	"""/dev/random"""		65053	1					
ANR	65073	Argument	"""/dev/random"""		65053	0					
ANR	65074	PrimaryExpression	"""/dev/random"""		65053	0					
ANR	65075	Argument	O_RDONLY		65053	1					
ANR	65076	Identifier	O_RDONLY		65053	0					
ANR	65077	UnaryOperationExpression	- 1		65053	1					
ANR	65078	UnaryOperator	-		65053	0					
ANR	65079	PrimaryExpression	1		65053	1					
ANR	65080	CompoundStatement		6:52:157:157	65053	1					
ANR	65081	IfStatement	"if ( ioctl ( fd , RNDGETENTCNT , & c ) == 0 && c < 160 )"		65053	0					
ANR	65082	Condition	"ioctl ( fd , RNDGETENTCNT , & c ) == 0 && c < 160"	117:12:2739:2781	65053	0	True				
ANR	65083	AndExpression	"ioctl ( fd , RNDGETENTCNT , & c ) == 0 && c < 160"		65053	0		&&			
ANR	65084	EqualityExpression	"ioctl ( fd , RNDGETENTCNT , & c ) == 0"		65053	0		==			
ANR	65085	CallExpression	"ioctl ( fd , RNDGETENTCNT , & c )"		65053	0					
ANR	65086	Callee	ioctl		65053	0					
ANR	65087	Identifier	ioctl		65053	0					
ANR	65088	ArgumentList	fd		65053	1					
ANR	65089	Argument	fd		65053	0					
ANR	65090	Identifier	fd		65053	0					
ANR	65091	Argument	RNDGETENTCNT		65053	1					
ANR	65092	Identifier	RNDGETENTCNT		65053	0					
ANR	65093	Argument	& c		65053	2					
ANR	65094	UnaryOperationExpression	& c		65053	0					
ANR	65095	UnaryOperator	&		65053	0					
ANR	65096	Identifier	c		65053	1					
ANR	65097	PrimaryExpression	0		65053	1					
ANR	65098	RelationalExpression	c < 160		65053	1		<			
ANR	65099	Identifier	c		65053	0					
ANR	65100	PrimaryExpression	160		65053	1					
ANR	65101	CompoundStatement		7:57:216:216	65053	1					
ANR	65102	Statement	LOGI	118:12:2798:2801	65053	0	True				
ANR	65103	Statement	(	118:16:2802:2802	65053	1	True				
ANR	65104	Statement	"""This system doesn't provide enough entropy to quickly generate high-quality random numbers\\n"""	118:17:2803:2896	65053	2	True				
ANR	65105	Statement	"""Installing the rng-utils/rng-tools or haveged packages may help.\\n"""	119:17:2915:2982	65053	3	True				
ANR	65106	Statement	"""On virtualized Linux environments, also consider using virtio-rng.\\n"""	120:17:3001:3070	65053	4	True				
ANR	65107	Statement	"""The service will not start until enough entropy has been collected."""	121:17:3089:3157	65053	5	True				
ANR	65108	Statement	)	121:86:3158:3158	65053	6	True				
ANR	65109	ExpressionStatement		121:87:3159:3159	65053	7	True				
ANR	65110	ExpressionStatement	close ( fd )	123:8:3179:3188	65053	1	True				
ANR	65111	CallExpression	close ( fd )		65053	0					
ANR	65112	Callee	close		65053	0					
ANR	65113	Identifier	close		65053	0					
ANR	65114	ArgumentList	fd		65053	1					
ANR	65115	Argument	fd		65053	0					
ANR	65116	Identifier	fd		65053	0					
ANR	65117	ReturnType	static void		65053	1					
ANR	65118	Identifier	entropy_check		65053	2					
ANR	65119	ParameterList			65053	3					
ANR	65120	CFGEntryNode	ENTRY		65053		True				
ANR	65121	CFGExitNode	EXIT		65053		True				
ANR	65122	Symbol	c		65053						
ANR	65123	Symbol	O_RDONLY		65053						
ANR	65124	Symbol	RNDGETENTCNT		65053						
ANR	65125	Symbol	& c		65053						
ANR	65126	Symbol	fd		65053						
ANR	65127	Symbol	open		65053						
ANR	65128	Symbol	ioctl		65053						
ANR	65129	Function	crypto_init	128:0:3206:5505							
ANR	65130	FunctionDef	"crypto_init (const char * password , const char * key , const char * method)"		65129	0					
ANR	65131	CompoundStatement		130:0:3288:5505	65129	0					
ANR	65132	IdentifierDeclStatement	"int i , m = - 1 ;"	131:4:3294:3307	65129	0	True				
ANR	65133	IdentifierDecl	i		65129	0					
ANR	65134	IdentifierDeclType	int		65129	0					
ANR	65135	Identifier	i		65129	1					
ANR	65136	IdentifierDecl	m = - 1		65129	1					
ANR	65137	IdentifierDeclType	int		65129	0					
ANR	65138	Identifier	m		65129	1					
ANR	65139	AssignmentExpression	m = - 1		65129	2		=			
ANR	65140	Identifier	m		65129	0					
ANR	65141	UnaryOperationExpression	- 1		65129	1					
ANR	65142	UnaryOperator	-		65129	0					
ANR	65143	PrimaryExpression	1		65129	1					
ANR	65144	ExpressionStatement	entropy_check ( )	133:4:3314:3329	65129	1	True				
ANR	65145	CallExpression	entropy_check ( )		65129	0					
ANR	65146	Callee	entropy_check		65129	0					
ANR	65147	Identifier	entropy_check		65129	0					
ANR	65148	ArgumentList			65129	1					
ANR	65149	IfStatement	if ( sodium_init ( ) == - 1 )		65129	2					
ANR	65150	Condition	sodium_init ( ) == - 1	135:8:3385:3403	65129	0	True				
ANR	65151	EqualityExpression	sodium_init ( ) == - 1		65129	0		==			
ANR	65152	CallExpression	sodium_init ( )		65129	0					
ANR	65153	Callee	sodium_init		65129	0					
ANR	65154	Identifier	sodium_init		65129	0					
ANR	65155	ArgumentList			65129	1					
ANR	65156	UnaryOperationExpression	- 1		65129	1					
ANR	65157	UnaryOperator	-		65129	0					
ANR	65158	PrimaryExpression	1		65129	1					
ANR	65159	CompoundStatement		6:29:117:117	65129	1					
ANR	65160	ExpressionStatement	"FATAL ( ""Failed to initialize sodium"" )"	136:8:3416:3452	65129	0	True				
ANR	65161	CallExpression	"FATAL ( ""Failed to initialize sodium"" )"		65129	0					
ANR	65162	Callee	FATAL		65129	0					
ANR	65163	Identifier	FATAL		65129	0					
ANR	65164	ArgumentList	"""Failed to initialize sodium"""		65129	1					
ANR	65165	Argument	"""Failed to initialize sodium"""		65129	0					
ANR	65166	PrimaryExpression	"""Failed to initialize sodium"""		65129	0					
ANR	65167	ExpressionStatement	"ppbloom_init ( BF_NUM_ENTRIES_FOR_SERVER , BF_ERROR_RATE_FOR_SERVER )"	141:4:3523:3588	65129	3	True				
ANR	65168	CallExpression	"ppbloom_init ( BF_NUM_ENTRIES_FOR_SERVER , BF_ERROR_RATE_FOR_SERVER )"		65129	0					
ANR	65169	Callee	ppbloom_init		65129	0					
ANR	65170	Identifier	ppbloom_init		65129	0					
ANR	65171	ArgumentList	BF_NUM_ENTRIES_FOR_SERVER		65129	1					
ANR	65172	Argument	BF_NUM_ENTRIES_FOR_SERVER		65129	0					
ANR	65173	Identifier	BF_NUM_ENTRIES_FOR_SERVER		65129	0					
ANR	65174	Argument	BF_ERROR_RATE_FOR_SERVER		65129	1					
ANR	65175	Identifier	BF_ERROR_RATE_FOR_SERVER		65129	0					
ANR	65176	IfStatement	if ( method != NULL )		65129	4					
ANR	65177	Condition	method != NULL	146:8:3683:3696	65129	0	True				
ANR	65178	EqualityExpression	method != NULL		65129	0		!=			
ANR	65179	Identifier	method		65129	0					
ANR	65180	Identifier	NULL		65129	1					
ANR	65181	CompoundStatement		17:24:410:410	65129	1					
ANR	65182	ForStatement	for ( i = 0 ; i < STREAM_CIPHER_NUM ; i ++ )		65129	0					
ANR	65183	ForInit	i = 0 ;	147:13:3714:3719	65129	0	True				
ANR	65184	AssignmentExpression	i = 0		65129	0		=			
ANR	65185	Identifier	i		65129	0					
ANR	65186	PrimaryExpression	0		65129	1					
ANR	65187	Condition	i < STREAM_CIPHER_NUM	147:20:3721:3741	65129	1	True				
ANR	65188	RelationalExpression	i < STREAM_CIPHER_NUM		65129	0		<			
ANR	65189	Identifier	i		65129	0					
ANR	65190	Identifier	STREAM_CIPHER_NUM		65129	1					
ANR	65191	PostIncDecOperationExpression	i ++	147:43:3744:3746	65129	2	True				
ANR	65192	Identifier	i		65129	0					
ANR	65193	IncDec	++		65129	1					
ANR	65194	IfStatement	"if ( strcmp ( method , supported_stream_ciphers [ i ] ) == 0 )"		65129	3					
ANR	65195	Condition	"strcmp ( method , supported_stream_ciphers [ i ] ) == 0"	148:16:3765:3812	65129	0	True				
ANR	65196	EqualityExpression	"strcmp ( method , supported_stream_ciphers [ i ] ) == 0"		65129	0		==			
ANR	65197	CallExpression	"strcmp ( method , supported_stream_ciphers [ i ] )"		65129	0					
ANR	65198	Callee	strcmp		65129	0					
ANR	65199	Identifier	strcmp		65129	0					
ANR	65200	ArgumentList	method		65129	1					
ANR	65201	Argument	method		65129	0					
ANR	65202	Identifier	method		65129	0					
ANR	65203	Argument	supported_stream_ciphers [ i ]		65129	1					
ANR	65204	ArrayIndexing	supported_stream_ciphers [ i ]		65129	0					
ANR	65205	Identifier	supported_stream_ciphers		65129	0					
ANR	65206	Identifier	i		65129	1					
ANR	65207	PrimaryExpression	0		65129	1					
ANR	65208	CompoundStatement		19:66:526:526	65129	1					
ANR	65209	ExpressionStatement	m = i	149:16:3833:3838	65129	0	True				
ANR	65210	AssignmentExpression	m = i		65129	0		=			
ANR	65211	Identifier	m		65129	0					
ANR	65212	Identifier	i		65129	1					
ANR	65213	BreakStatement	break ;	150:16:3856:3861	65129	1	True				
ANR	65214	IfStatement	if ( m != - 1 )		65129	1					
ANR	65215	Condition	m != - 1	152:12:3889:3895	65129	0	True				
ANR	65216	EqualityExpression	m != - 1		65129	0		!=			
ANR	65217	Identifier	m		65129	0					
ANR	65218	UnaryOperationExpression	- 1		65129	1					
ANR	65219	UnaryOperator	-		65129	0					
ANR	65220	PrimaryExpression	1		65129	1					
ANR	65221	CompoundStatement		27:12:751:809	65129	1					
ANR	65222	IdentifierDeclStatement	"cipher_t * cipher = stream_init ( password , key , method ) ;"	153:12:3912:3965	65129	0	True				
ANR	65223	IdentifierDecl	"* cipher = stream_init ( password , key , method )"		65129	0					
ANR	65224	IdentifierDeclType	cipher_t *		65129	0					
ANR	65225	Identifier	cipher		65129	1					
ANR	65226	AssignmentExpression	"* cipher = stream_init ( password , key , method )"		65129	2		=			
ANR	65227	Identifier	cipher		65129	0					
ANR	65228	CallExpression	"stream_init ( password , key , method )"		65129	1					
ANR	65229	Callee	stream_init		65129	0					
ANR	65230	Identifier	stream_init		65129	0					
ANR	65231	ArgumentList	password		65129	1					
ANR	65232	Argument	password		65129	0					
ANR	65233	Identifier	password		65129	0					
ANR	65234	Argument	key		65129	1					
ANR	65235	Identifier	key		65129	0					
ANR	65236	Argument	method		65129	2					
ANR	65237	Identifier	method		65129	0					
ANR	65238	IfStatement	if ( cipher == NULL )		65129	1					
ANR	65239	Condition	cipher == NULL	154:16:3983:3996	65129	0	True				
ANR	65240	EqualityExpression	cipher == NULL		65129	0		==			
ANR	65241	Identifier	cipher		65129	0					
ANR	65242	Identifier	NULL		65129	1					
ANR	65243	ReturnStatement	return NULL ;	155:16:4015:4026	65129	1	True				
ANR	65244	Identifier	NULL		65129	0					
ANR	65245	IdentifierDeclStatement	crypto_t * crypto = ( crypto_t * ) ss_malloc ( sizeof ( crypto_t ) ) ;	156:12:4040:4098	65129	2	True				
ANR	65246	IdentifierDecl	* crypto = ( crypto_t * ) ss_malloc ( sizeof ( crypto_t ) )		65129	0					
ANR	65247	IdentifierDeclType	crypto_t *		65129	0					
ANR	65248	Identifier	crypto		65129	1					
ANR	65249	AssignmentExpression	* crypto = ( crypto_t * ) ss_malloc ( sizeof ( crypto_t ) )		65129	2		=			
ANR	65250	Identifier	crypto		65129	0					
ANR	65251	CastExpression	( crypto_t * ) ss_malloc ( sizeof ( crypto_t ) )		65129	1					
ANR	65252	CastTarget	crypto_t *		65129	0					
ANR	65253	CallExpression	ss_malloc ( sizeof ( crypto_t ) )		65129	1					
ANR	65254	Callee	ss_malloc		65129	0					
ANR	65255	Identifier	ss_malloc		65129	0					
ANR	65256	ArgumentList	sizeof ( crypto_t )		65129	1					
ANR	65257	Argument	sizeof ( crypto_t )		65129	0					
ANR	65258	SizeofExpression	sizeof ( crypto_t )		65129	0					
ANR	65259	Sizeof	sizeof		65129	0					
ANR	65260	SizeofOperand	crypto_t		65129	1					
ANR	65261	Statement	crypto_t	157:12:4112:4119	65129	3	True				
ANR	65262	Statement	tmp	157:21:4121:4123	65129	4	True				
ANR	65263	Statement	=	157:29:4129:4129	65129	5	True				
ANR	65264	CompoundStatement		28:31:842:842	65129	6					
ANR	65265	Statement	.	158:16:4149:4149	65129	0	True				
ANR	65266	Statement	cipher	158:17:4150:4155	65129	1	True				
ANR	65267	Statement	=	158:29:4162:4162	65129	2	True				
ANR	65268	Statement	cipher	158:31:4164:4169	65129	3	True				
ANR	65269	Statement	","	158:37:4170:4170	65129	4	True				
ANR	65270	Statement	.	159:16:4188:4188	65129	5	True				
ANR	65271	Statement	encrypt_all	159:17:4189:4199	65129	6	True				
ANR	65272	Statement	=	159:29:4201:4201	65129	7	True				
ANR	65273	Statement	&	159:31:4203:4203	65129	8	True				
ANR	65274	Statement	stream_encrypt_all	159:32:4204:4221	65129	9	True				
ANR	65275	Statement	","	159:50:4222:4222	65129	10	True				
ANR	65276	Statement	.	160:16:4240:4240	65129	11	True				
ANR	65277	Statement	decrypt_all	160:17:4241:4251	65129	12	True				
ANR	65278	Statement	=	160:29:4253:4253	65129	13	True				
ANR	65279	Statement	&	160:31:4255:4255	65129	14	True				
ANR	65280	Statement	stream_decrypt_all	160:32:4256:4273	65129	15	True				
ANR	65281	Statement	","	160:50:4274:4274	65129	16	True				
ANR	65282	Statement	.	161:16:4292:4292	65129	17	True				
ANR	65283	Statement	encrypt	161:17:4293:4299	65129	18	True				
ANR	65284	Statement	=	161:29:4305:4305	65129	19	True				
ANR	65285	Statement	&	161:31:4307:4307	65129	20	True				
ANR	65286	Statement	stream_encrypt	161:32:4308:4321	65129	21	True				
ANR	65287	Statement	","	161:46:4322:4322	65129	22	True				
ANR	65288	Statement	.	162:16:4340:4340	65129	23	True				
ANR	65289	Statement	decrypt	162:17:4341:4347	65129	24	True				
ANR	65290	Statement	=	162:29:4353:4353	65129	25	True				
ANR	65291	Statement	&	162:31:4355:4355	65129	26	True				
ANR	65292	Statement	stream_decrypt	162:32:4356:4369	65129	27	True				
ANR	65293	Statement	","	162:46:4370:4370	65129	28	True				
ANR	65294	Statement	.	163:16:4388:4388	65129	29	True				
ANR	65295	Statement	ctx_init	163:17:4389:4396	65129	30	True				
ANR	65296	Statement	=	163:29:4401:4401	65129	31	True				
ANR	65297	Statement	&	163:31:4403:4403	65129	32	True				
ANR	65298	Statement	stream_ctx_init	163:32:4404:4418	65129	33	True				
ANR	65299	Statement	","	163:47:4419:4419	65129	34	True				
ANR	65300	Statement	.	164:16:4437:4437	65129	35	True				
ANR	65301	Statement	ctx_release	164:17:4438:4448	65129	36	True				
ANR	65302	Statement	=	164:29:4450:4450	65129	37	True				
ANR	65303	Statement	&	164:31:4452:4452	65129	38	True				
ANR	65304	Statement	stream_ctx_release	164:32:4453:4470	65129	39	True				
ANR	65305	Statement	","	164:50:4471:4471	65129	40	True				
ANR	65306	ExpressionStatement		165:13:4486:4486	65129	7	True				
ANR	65307	ExpressionStatement	"memcpy ( crypto , & tmp , sizeof ( crypto_t ) )"	166:12:4500:4538	65129	8	True				
ANR	65308	CallExpression	"memcpy ( crypto , & tmp , sizeof ( crypto_t ) )"		65129	0					
ANR	65309	Callee	memcpy		65129	0					
ANR	65310	Identifier	memcpy		65129	0					
ANR	65311	ArgumentList	crypto		65129	1					
ANR	65312	Argument	crypto		65129	0					
ANR	65313	Identifier	crypto		65129	0					
ANR	65314	Argument	& tmp		65129	1					
ANR	65315	UnaryOperationExpression	& tmp		65129	0					
ANR	65316	UnaryOperator	&		65129	0					
ANR	65317	Identifier	tmp		65129	1					
ANR	65318	Argument	sizeof ( crypto_t )		65129	2					
ANR	65319	SizeofExpression	sizeof ( crypto_t )		65129	0					
ANR	65320	Sizeof	sizeof		65129	0					
ANR	65321	SizeofOperand	crypto_t		65129	1					
ANR	65322	ReturnStatement	return crypto ;	167:12:4552:4565	65129	9	True				
ANR	65323	Identifier	crypto		65129	0					
ANR	65324	ForStatement	for ( i = 0 ; i < AEAD_CIPHER_NUM ; i ++ )		65129	2					
ANR	65325	ForInit	i = 0 ;	170:13:4591:4596	65129	0	True				
ANR	65326	AssignmentExpression	i = 0		65129	0		=			
ANR	65327	Identifier	i		65129	0					
ANR	65328	PrimaryExpression	0		65129	1					
ANR	65329	Condition	i < AEAD_CIPHER_NUM	170:20:4598:4616	65129	1	True				
ANR	65330	RelationalExpression	i < AEAD_CIPHER_NUM		65129	0		<			
ANR	65331	Identifier	i		65129	0					
ANR	65332	Identifier	AEAD_CIPHER_NUM		65129	1					
ANR	65333	PostIncDecOperationExpression	i ++	170:41:4619:4621	65129	2	True				
ANR	65334	Identifier	i		65129	0					
ANR	65335	IncDec	++		65129	1					
ANR	65336	IfStatement	"if ( strcmp ( method , supported_aead_ciphers [ i ] ) == 0 )"		65129	3					
ANR	65337	Condition	"strcmp ( method , supported_aead_ciphers [ i ] ) == 0"	171:16:4640:4685	65129	0	True				
ANR	65338	EqualityExpression	"strcmp ( method , supported_aead_ciphers [ i ] ) == 0"		65129	0		==			
ANR	65339	CallExpression	"strcmp ( method , supported_aead_ciphers [ i ] )"		65129	0					
ANR	65340	Callee	strcmp		65129	0					
ANR	65341	Identifier	strcmp		65129	0					
ANR	65342	ArgumentList	method		65129	1					
ANR	65343	Argument	method		65129	0					
ANR	65344	Identifier	method		65129	0					
ANR	65345	Argument	supported_aead_ciphers [ i ]		65129	1					
ANR	65346	ArrayIndexing	supported_aead_ciphers [ i ]		65129	0					
ANR	65347	Identifier	supported_aead_ciphers		65129	0					
ANR	65348	Identifier	i		65129	1					
ANR	65349	PrimaryExpression	0		65129	1					
ANR	65350	CompoundStatement		42:64:1399:1399	65129	1					
ANR	65351	ExpressionStatement	m = i	172:16:4706:4711	65129	0	True				
ANR	65352	AssignmentExpression	m = i		65129	0		=			
ANR	65353	Identifier	m		65129	0					
ANR	65354	Identifier	i		65129	1					
ANR	65355	BreakStatement	break ;	173:16:4729:4734	65129	1	True				
ANR	65356	IfStatement	if ( m != - 1 )		65129	3					
ANR	65357	Condition	m != - 1	175:12:4762:4768	65129	0	True				
ANR	65358	EqualityExpression	m != - 1		65129	0		!=			
ANR	65359	Identifier	m		65129	0					
ANR	65360	UnaryOperationExpression	- 1		65129	1					
ANR	65361	UnaryOperator	-		65129	0					
ANR	65362	PrimaryExpression	1		65129	1					
ANR	65363	CompoundStatement		50:12:1622:1680	65129	1					
ANR	65364	IdentifierDeclStatement	"cipher_t * cipher = aead_init ( password , key , method ) ;"	176:12:4785:4836	65129	0	True				
ANR	65365	IdentifierDecl	"* cipher = aead_init ( password , key , method )"		65129	0					
ANR	65366	IdentifierDeclType	cipher_t *		65129	0					
ANR	65367	Identifier	cipher		65129	1					
ANR	65368	AssignmentExpression	"* cipher = aead_init ( password , key , method )"		65129	2		=			
ANR	65369	Identifier	cipher		65129	0					
ANR	65370	CallExpression	"aead_init ( password , key , method )"		65129	1					
ANR	65371	Callee	aead_init		65129	0					
ANR	65372	Identifier	aead_init		65129	0					
ANR	65373	ArgumentList	password		65129	1					
ANR	65374	Argument	password		65129	0					
ANR	65375	Identifier	password		65129	0					
ANR	65376	Argument	key		65129	1					
ANR	65377	Identifier	key		65129	0					
ANR	65378	Argument	method		65129	2					
ANR	65379	Identifier	method		65129	0					
ANR	65380	IfStatement	if ( cipher == NULL )		65129	1					
ANR	65381	Condition	cipher == NULL	177:16:4854:4867	65129	0	True				
ANR	65382	EqualityExpression	cipher == NULL		65129	0		==			
ANR	65383	Identifier	cipher		65129	0					
ANR	65384	Identifier	NULL		65129	1					
ANR	65385	ReturnStatement	return NULL ;	178:16:4886:4897	65129	1	True				
ANR	65386	Identifier	NULL		65129	0					
ANR	65387	IdentifierDeclStatement	crypto_t * crypto = ( crypto_t * ) ss_malloc ( sizeof ( crypto_t ) ) ;	179:12:4911:4969	65129	2	True				
ANR	65388	IdentifierDecl	* crypto = ( crypto_t * ) ss_malloc ( sizeof ( crypto_t ) )		65129	0					
ANR	65389	IdentifierDeclType	crypto_t *		65129	0					
ANR	65390	Identifier	crypto		65129	1					
ANR	65391	AssignmentExpression	* crypto = ( crypto_t * ) ss_malloc ( sizeof ( crypto_t ) )		65129	2		=			
ANR	65392	Identifier	crypto		65129	0					
ANR	65393	CastExpression	( crypto_t * ) ss_malloc ( sizeof ( crypto_t ) )		65129	1					
ANR	65394	CastTarget	crypto_t *		65129	0					
ANR	65395	CallExpression	ss_malloc ( sizeof ( crypto_t ) )		65129	1					
ANR	65396	Callee	ss_malloc		65129	0					
ANR	65397	Identifier	ss_malloc		65129	0					
ANR	65398	ArgumentList	sizeof ( crypto_t )		65129	1					
ANR	65399	Argument	sizeof ( crypto_t )		65129	0					
ANR	65400	SizeofExpression	sizeof ( crypto_t )		65129	0					
ANR	65401	Sizeof	sizeof		65129	0					
ANR	65402	SizeofOperand	crypto_t		65129	1					
ANR	65403	Statement	crypto_t	180:12:4983:4990	65129	3	True				
ANR	65404	Statement	tmp	180:21:4992:4994	65129	4	True				
ANR	65405	Statement	=	180:29:5000:5000	65129	5	True				
ANR	65406	CompoundStatement		51:31:1713:1713	65129	6					
ANR	65407	Statement	.	181:16:5020:5020	65129	0	True				
ANR	65408	Statement	cipher	181:17:5021:5026	65129	1	True				
ANR	65409	Statement	=	181:29:5033:5033	65129	2	True				
ANR	65410	Statement	cipher	181:31:5035:5040	65129	3	True				
ANR	65411	Statement	","	181:37:5041:5041	65129	4	True				
ANR	65412	Statement	.	182:16:5059:5059	65129	5	True				
ANR	65413	Statement	encrypt_all	182:17:5060:5070	65129	6	True				
ANR	65414	Statement	=	182:29:5072:5072	65129	7	True				
ANR	65415	Statement	&	182:31:5074:5074	65129	8	True				
ANR	65416	Statement	aead_encrypt_all	182:32:5075:5090	65129	9	True				
ANR	65417	Statement	","	182:48:5091:5091	65129	10	True				
ANR	65418	Statement	.	183:16:5109:5109	65129	11	True				
ANR	65419	Statement	decrypt_all	183:17:5110:5120	65129	12	True				
ANR	65420	Statement	=	183:29:5122:5122	65129	13	True				
ANR	65421	Statement	&	183:31:5124:5124	65129	14	True				
ANR	65422	Statement	aead_decrypt_all	183:32:5125:5140	65129	15	True				
ANR	65423	Statement	","	183:48:5141:5141	65129	16	True				
ANR	65424	Statement	.	184:16:5159:5159	65129	17	True				
ANR	65425	Statement	encrypt	184:17:5160:5166	65129	18	True				
ANR	65426	Statement	=	184:29:5172:5172	65129	19	True				
ANR	65427	Statement	&	184:31:5174:5174	65129	20	True				
ANR	65428	Statement	aead_encrypt	184:32:5175:5186	65129	21	True				
ANR	65429	Statement	","	184:44:5187:5187	65129	22	True				
ANR	65430	Statement	.	185:16:5205:5205	65129	23	True				
ANR	65431	Statement	decrypt	185:17:5206:5212	65129	24	True				
ANR	65432	Statement	=	185:29:5218:5218	65129	25	True				
ANR	65433	Statement	&	185:31:5220:5220	65129	26	True				
ANR	65434	Statement	aead_decrypt	185:32:5221:5232	65129	27	True				
ANR	65435	Statement	","	185:44:5233:5233	65129	28	True				
ANR	65436	Statement	.	186:16:5251:5251	65129	29	True				
ANR	65437	Statement	ctx_init	186:17:5252:5259	65129	30	True				
ANR	65438	Statement	=	186:29:5264:5264	65129	31	True				
ANR	65439	Statement	&	186:31:5266:5266	65129	32	True				
ANR	65440	Statement	aead_ctx_init	186:32:5267:5279	65129	33	True				
ANR	65441	Statement	","	186:45:5280:5280	65129	34	True				
ANR	65442	Statement	.	187:16:5298:5298	65129	35	True				
ANR	65443	Statement	ctx_release	187:17:5299:5309	65129	36	True				
ANR	65444	Statement	=	187:29:5311:5311	65129	37	True				
ANR	65445	Statement	&	187:31:5313:5313	65129	38	True				
ANR	65446	Statement	aead_ctx_release	187:32:5314:5329	65129	39	True				
ANR	65447	Statement	","	187:48:5330:5330	65129	40	True				
ANR	65448	ExpressionStatement		188:13:5345:5345	65129	7	True				
ANR	65449	ExpressionStatement	"memcpy ( crypto , & tmp , sizeof ( crypto_t ) )"	189:12:5359:5397	65129	8	True				
ANR	65450	CallExpression	"memcpy ( crypto , & tmp , sizeof ( crypto_t ) )"		65129	0					
ANR	65451	Callee	memcpy		65129	0					
ANR	65452	Identifier	memcpy		65129	0					
ANR	65453	ArgumentList	crypto		65129	1					
ANR	65454	Argument	crypto		65129	0					
ANR	65455	Identifier	crypto		65129	0					
ANR	65456	Argument	& tmp		65129	1					
ANR	65457	UnaryOperationExpression	& tmp		65129	0					
ANR	65458	UnaryOperator	&		65129	0					
ANR	65459	Identifier	tmp		65129	1					
ANR	65460	Argument	sizeof ( crypto_t )		65129	2					
ANR	65461	SizeofExpression	sizeof ( crypto_t )		65129	0					
ANR	65462	Sizeof	sizeof		65129	0					
ANR	65463	SizeofOperand	crypto_t		65129	1					
ANR	65464	ReturnStatement	return crypto ;	190:12:5411:5424	65129	9	True				
ANR	65465	Identifier	crypto		65129	0					
ANR	65466	ExpressionStatement	"LOGE ( ""invalid cipher name: %s"" , method )"	194:4:5447:5486	65129	5	True				
ANR	65467	CallExpression	"LOGE ( ""invalid cipher name: %s"" , method )"		65129	0					
ANR	65468	Callee	LOGE		65129	0					
ANR	65469	Identifier	LOGE		65129	0					
ANR	65470	ArgumentList	"""invalid cipher name: %s"""		65129	1					
ANR	65471	Argument	"""invalid cipher name: %s"""		65129	0					
ANR	65472	PrimaryExpression	"""invalid cipher name: %s"""		65129	0					
ANR	65473	Argument	method		65129	1					
ANR	65474	Identifier	method		65129	0					
ANR	65475	ReturnStatement	return NULL ;	195:4:5492:5503	65129	6	True				
ANR	65476	Identifier	NULL		65129	0					
ANR	65477	ReturnType	crypto_t *		65129	1					
ANR	65478	Identifier	crypto_init		65129	2					
ANR	65479	ParameterList	"const char * password , const char * key , const char * method"		65129	3					
ANR	65480	Parameter	const char * password	129:12:3229:3248	65129	0	True				
ANR	65481	ParameterType	const char *		65129	0					
ANR	65482	Identifier	password		65129	1					
ANR	65483	Parameter	const char * key	129:34:3251:3265	65129	1	True				
ANR	65484	ParameterType	const char *		65129	0					
ANR	65485	Identifier	key		65129	1					
ANR	65486	Parameter	const char * method	129:51:3268:3285	65129	2	True				
ANR	65487	ParameterType	const char *		65129	0					
ANR	65488	Identifier	method		65129	1					
ANR	65489	CFGEntryNode	ENTRY		65129		True				
ANR	65490	CFGExitNode	EXIT		65129		True				
ANR	65491	Symbol	strcmp		65129						
ANR	65492	Symbol	cipher		65129						
ANR	65493	Symbol	NULL		65129						
ANR	65494	Symbol	method		65129						
ANR	65495	Symbol	* supported_aead_ciphers		65129						
ANR	65496	Symbol	sodium_init		65129						
ANR	65497	Symbol	i		65129						
ANR	65498	Symbol	STREAM_CIPHER_NUM		65129						
ANR	65499	Symbol	BF_NUM_ENTRIES_FOR_SERVER		65129						
ANR	65500	Symbol	* supported_stream_ciphers		65129						
ANR	65501	Symbol	m		65129						
ANR	65502	Symbol	crypto		65129						
ANR	65503	Symbol	supported_stream_ciphers		65129						
ANR	65504	Symbol	password		65129						
ANR	65505	Symbol	* i		65129						
ANR	65506	Symbol	stream_init		65129						
ANR	65507	Symbol	AEAD_CIPHER_NUM		65129						
ANR	65508	Symbol	ss_malloc		65129						
ANR	65509	Symbol	aead_init		65129						
ANR	65510	Symbol	& tmp		65129						
ANR	65511	Symbol	key		65129						
ANR	65512	Symbol	supported_aead_ciphers		65129						
ANR	65513	Symbol	BF_ERROR_RATE_FOR_SERVER		65129						
ANR	65514	Function	crypto_derive_key	198:0:5508:6539							
ANR	65515	FunctionDef	"crypto_derive_key (const char * pass , uint8_t * key , size_t key_len)"		65514	0					
ANR	65516	CompoundStatement		200:0:5578:6539	65514	0					
ANR	65517	IdentifierDeclStatement	size_t datal ;	201:4:5584:5596	65514	0	True				
ANR	65518	IdentifierDecl	datal		65514	0					
ANR	65519	IdentifierDeclType	size_t		65514	0					
ANR	65520	Identifier	datal		65514	1					
ANR	65521	ExpressionStatement	datal = strlen ( ( const char * ) pass )	202:4:5602:5636	65514	1	True				
ANR	65522	AssignmentExpression	datal = strlen ( ( const char * ) pass )		65514	0		=			
ANR	65523	Identifier	datal		65514	0					
ANR	65524	CallExpression	strlen ( ( const char * ) pass )		65514	1					
ANR	65525	Callee	strlen		65514	0					
ANR	65526	Identifier	strlen		65514	0					
ANR	65527	ArgumentList	( const char * ) pass		65514	1					
ANR	65528	Argument	( const char * ) pass		65514	0					
ANR	65529	CastExpression	( const char * ) pass		65514	0					
ANR	65530	CastTarget	const char *		65514	0					
ANR	65531	Identifier	pass		65514	1					
ANR	65532	IdentifierDeclStatement	"const digest_type_t * md = mbedtls_md_info_from_string ( ""MD5"" ) ;"	204:4:5643:5703	65514	2	True				
ANR	65533	IdentifierDecl	"* md = mbedtls_md_info_from_string ( ""MD5"" )"		65514	0					
ANR	65534	IdentifierDeclType	const digest_type_t *		65514	0					
ANR	65535	Identifier	md		65514	1					
ANR	65536	AssignmentExpression	"* md = mbedtls_md_info_from_string ( ""MD5"" )"		65514	2		=			
ANR	65537	Identifier	md		65514	0					
ANR	65538	CallExpression	"mbedtls_md_info_from_string ( ""MD5"" )"		65514	1					
ANR	65539	Callee	mbedtls_md_info_from_string		65514	0					
ANR	65540	Identifier	mbedtls_md_info_from_string		65514	0					
ANR	65541	ArgumentList	"""MD5"""		65514	1					
ANR	65542	Argument	"""MD5"""		65514	0					
ANR	65543	PrimaryExpression	"""MD5"""		65514	0					
ANR	65544	IfStatement	if ( md == NULL )		65514	3					
ANR	65545	Condition	md == NULL	205:8:5713:5722	65514	0	True				
ANR	65546	EqualityExpression	md == NULL		65514	0		==			
ANR	65547	Identifier	md		65514	0					
ANR	65548	Identifier	NULL		65514	1					
ANR	65549	CompoundStatement		6:20:146:146	65514	1					
ANR	65550	ExpressionStatement	"FATAL ( ""MD5 Digest not found in crypto library"" )"	206:8:5735:5782	65514	0	True				
ANR	65551	CallExpression	"FATAL ( ""MD5 Digest not found in crypto library"" )"		65514	0					
ANR	65552	Callee	FATAL		65514	0					
ANR	65553	Identifier	FATAL		65514	0					
ANR	65554	ArgumentList	"""MD5 Digest not found in crypto library"""		65514	1					
ANR	65555	Argument	"""MD5 Digest not found in crypto library"""		65514	0					
ANR	65556	PrimaryExpression	"""MD5 Digest not found in crypto library"""		65514	0					
ANR	65557	IdentifierDeclStatement	mbedtls_md_context_t c ;	209:4:5795:5817	65514	4	True				
ANR	65558	IdentifierDecl	c		65514	0					
ANR	65559	IdentifierDeclType	mbedtls_md_context_t		65514	0					
ANR	65560	Identifier	c		65514	1					
ANR	65561	IdentifierDeclStatement	unsigned char md_buf [ MAX_MD_SIZE ] ;	210:4:5823:5856	65514	5	True				
ANR	65562	IdentifierDecl	md_buf [ MAX_MD_SIZE ]		65514	0					
ANR	65563	IdentifierDeclType	unsigned char [ MAX_MD_SIZE ]		65514	0					
ANR	65564	Identifier	md_buf		65514	1					
ANR	65565	Identifier	MAX_MD_SIZE		65514	2					
ANR	65566	IdentifierDeclStatement	int addmd ;	211:4:5862:5871	65514	6	True				
ANR	65567	IdentifierDecl	addmd		65514	0					
ANR	65568	IdentifierDeclType	int		65514	0					
ANR	65569	Identifier	addmd		65514	1					
ANR	65570	IdentifierDeclStatement	"unsigned int i , j , mds ;"	212:4:5877:5899	65514	7	True				
ANR	65571	IdentifierDecl	i		65514	0					
ANR	65572	IdentifierDeclType	unsigned int		65514	0					
ANR	65573	Identifier	i		65514	1					
ANR	65574	IdentifierDecl	j		65514	1					
ANR	65575	IdentifierDeclType	unsigned int		65514	0					
ANR	65576	Identifier	j		65514	1					
ANR	65577	IdentifierDecl	mds		65514	2					
ANR	65578	IdentifierDeclType	unsigned int		65514	0					
ANR	65579	Identifier	mds		65514	1					
ANR	65580	ExpressionStatement	mds = mbedtls_md_get_size ( md )	214:4:5906:5935	65514	8	True				
ANR	65581	AssignmentExpression	mds = mbedtls_md_get_size ( md )		65514	0		=			
ANR	65582	Identifier	mds		65514	0					
ANR	65583	CallExpression	mbedtls_md_get_size ( md )		65514	1					
ANR	65584	Callee	mbedtls_md_get_size		65514	0					
ANR	65585	Identifier	mbedtls_md_get_size		65514	0					
ANR	65586	ArgumentList	md		65514	1					
ANR	65587	Argument	md		65514	0					
ANR	65588	Identifier	md		65514	0					
ANR	65589	ExpressionStatement	"memset ( & c , 0 , sizeof ( mbedtls_md_context_t ) )"	215:4:5941:5984	65514	9	True				
ANR	65590	CallExpression	"memset ( & c , 0 , sizeof ( mbedtls_md_context_t ) )"		65514	0					
ANR	65591	Callee	memset		65514	0					
ANR	65592	Identifier	memset		65514	0					
ANR	65593	ArgumentList	& c		65514	1					
ANR	65594	Argument	& c		65514	0					
ANR	65595	UnaryOperationExpression	& c		65514	0					
ANR	65596	UnaryOperator	&		65514	0					
ANR	65597	Identifier	c		65514	1					
ANR	65598	Argument	0		65514	1					
ANR	65599	PrimaryExpression	0		65514	0					
ANR	65600	Argument	sizeof ( mbedtls_md_context_t )		65514	2					
ANR	65601	SizeofExpression	sizeof ( mbedtls_md_context_t )		65514	0					
ANR	65602	Sizeof	sizeof		65514	0					
ANR	65603	SizeofOperand	mbedtls_md_context_t		65514	1					
ANR	65604	IfStatement	if ( pass == NULL )		65514	10					
ANR	65605	Condition	pass == NULL	217:8:5995:6006	65514	0	True				
ANR	65606	EqualityExpression	pass == NULL		65514	0		==			
ANR	65607	Identifier	pass		65514	0					
ANR	65608	Identifier	NULL		65514	1					
ANR	65609	ReturnStatement	return key_len ;	218:8:6017:6031	65514	1	True				
ANR	65610	Identifier	key_len		65514	0					
ANR	65611	IfStatement	"if ( mbedtls_md_setup ( & c , md , 1 ) )"		65514	11					
ANR	65612	Condition	"mbedtls_md_setup ( & c , md , 1 )"	219:8:6041:6067	65514	0	True				
ANR	65613	CallExpression	"mbedtls_md_setup ( & c , md , 1 )"		65514	0					
ANR	65614	Callee	mbedtls_md_setup		65514	0					
ANR	65615	Identifier	mbedtls_md_setup		65514	0					
ANR	65616	ArgumentList	& c		65514	1					
ANR	65617	Argument	& c		65514	0					
ANR	65618	UnaryOperationExpression	& c		65514	0					
ANR	65619	UnaryOperator	&		65514	0					
ANR	65620	Identifier	c		65514	1					
ANR	65621	Argument	md		65514	1					
ANR	65622	Identifier	md		65514	0					
ANR	65623	Argument	1		65514	2					
ANR	65624	PrimaryExpression	1		65514	0					
ANR	65625	ReturnStatement	return 0 ;	220:8:6078:6086	65514	1	True				
ANR	65626	PrimaryExpression	0		65514	0					
ANR	65627	ForStatement	"for ( j = 0 , addmd = 0 ; j < key_len ; addmd ++ )"		65514	12					
ANR	65628	ForInit	"j = 0 , addmd = 0 ;"	222:9:6098:6114	65514	0	True				
ANR	65629	Expression	"j = 0 , addmd = 0"		65514	0					
ANR	65630	AssignmentExpression	j = 0		65514	0		=			
ANR	65631	Identifier	j		65514	0					
ANR	65632	PrimaryExpression	0		65514	1					
ANR	65633	AssignmentExpression	addmd = 0		65514	1		=			
ANR	65634	Identifier	addmd		65514	0					
ANR	65635	PrimaryExpression	0		65514	1					
ANR	65636	Condition	j < key_len	222:27:6116:6126	65514	1	True				
ANR	65637	RelationalExpression	j < key_len		65514	0		<			
ANR	65638	Identifier	j		65514	0					
ANR	65639	Identifier	key_len		65514	1					
ANR	65640	PostIncDecOperationExpression	addmd ++	222:40:6129:6135	65514	2	True				
ANR	65641	Identifier	addmd		65514	0					
ANR	65642	IncDec	++		65514	1					
ANR	65643	CompoundStatement		23:49:559:559	65514	3					
ANR	65644	ExpressionStatement	mbedtls_md_starts ( & c )	223:8:6148:6169	65514	0	True				
ANR	65645	CallExpression	mbedtls_md_starts ( & c )		65514	0					
ANR	65646	Callee	mbedtls_md_starts		65514	0					
ANR	65647	Identifier	mbedtls_md_starts		65514	0					
ANR	65648	ArgumentList	& c		65514	1					
ANR	65649	Argument	& c		65514	0					
ANR	65650	UnaryOperationExpression	& c		65514	0					
ANR	65651	UnaryOperator	&		65514	0					
ANR	65652	Identifier	c		65514	1					
ANR	65653	IfStatement	if ( addmd )		65514	1					
ANR	65654	Condition	addmd	224:12:6183:6187	65514	0	True				
ANR	65655	Identifier	addmd		65514	0					
ANR	65656	CompoundStatement		25:19:611:611	65514	1					
ANR	65657	ExpressionStatement	"mbedtls_md_update ( & c , md_buf , mds )"	225:12:6204:6238	65514	0	True				
ANR	65658	CallExpression	"mbedtls_md_update ( & c , md_buf , mds )"		65514	0					
ANR	65659	Callee	mbedtls_md_update		65514	0					
ANR	65660	Identifier	mbedtls_md_update		65514	0					
ANR	65661	ArgumentList	& c		65514	1					
ANR	65662	Argument	& c		65514	0					
ANR	65663	UnaryOperationExpression	& c		65514	0					
ANR	65664	UnaryOperator	&		65514	0					
ANR	65665	Identifier	c		65514	1					
ANR	65666	Argument	md_buf		65514	1					
ANR	65667	Identifier	md_buf		65514	0					
ANR	65668	Argument	mds		65514	2					
ANR	65669	Identifier	mds		65514	0					
ANR	65670	ExpressionStatement	"mbedtls_md_update ( & c , ( uint8_t * ) pass , datal )"	227:8:6258:6303	65514	2	True				
ANR	65671	CallExpression	"mbedtls_md_update ( & c , ( uint8_t * ) pass , datal )"		65514	0					
ANR	65672	Callee	mbedtls_md_update		65514	0					
ANR	65673	Identifier	mbedtls_md_update		65514	0					
ANR	65674	ArgumentList	& c		65514	1					
ANR	65675	Argument	& c		65514	0					
ANR	65676	UnaryOperationExpression	& c		65514	0					
ANR	65677	UnaryOperator	&		65514	0					
ANR	65678	Identifier	c		65514	1					
ANR	65679	Argument	( uint8_t * ) pass		65514	1					
ANR	65680	CastExpression	( uint8_t * ) pass		65514	0					
ANR	65681	CastTarget	uint8_t *		65514	0					
ANR	65682	Identifier	pass		65514	1					
ANR	65683	Argument	datal		65514	2					
ANR	65684	Identifier	datal		65514	0					
ANR	65685	ExpressionStatement	"mbedtls_md_finish ( & c , & ( md_buf [ 0 ] ) )"	228:8:6313:6348	65514	3	True				
ANR	65686	CallExpression	"mbedtls_md_finish ( & c , & ( md_buf [ 0 ] ) )"		65514	0					
ANR	65687	Callee	mbedtls_md_finish		65514	0					
ANR	65688	Identifier	mbedtls_md_finish		65514	0					
ANR	65689	ArgumentList	& c		65514	1					
ANR	65690	Argument	& c		65514	0					
ANR	65691	UnaryOperationExpression	& c		65514	0					
ANR	65692	UnaryOperator	&		65514	0					
ANR	65693	Identifier	c		65514	1					
ANR	65694	Argument	& ( md_buf [ 0 ] )		65514	1					
ANR	65695	UnaryOperationExpression	& ( md_buf [ 0 ] )		65514	0					
ANR	65696	UnaryOperator	&		65514	0					
ANR	65697	ArrayIndexing	md_buf [ 0 ]		65514	1					
ANR	65698	Identifier	md_buf		65514	0					
ANR	65699	PrimaryExpression	0		65514	1					
ANR	65700	ForStatement	"for ( i = 0 ; i < mds ; i ++ , j ++ )"		65514	4					
ANR	65701	ForInit	i = 0 ;	230:13:6364:6369	65514	0	True				
ANR	65702	AssignmentExpression	i = 0		65514	0		=			
ANR	65703	Identifier	i		65514	0					
ANR	65704	PrimaryExpression	0		65514	1					
ANR	65705	Condition	i < mds	230:20:6371:6377	65514	1	True				
ANR	65706	RelationalExpression	i < mds		65514	0		<			
ANR	65707	Identifier	i		65514	0					
ANR	65708	Identifier	mds		65514	1					
ANR	65709	Expression	"i ++ , j ++"	230:29:6380:6387	65514	2	True				
ANR	65710	PostIncDecOperationExpression	i ++		65514	0					
ANR	65711	Identifier	i		65514	0					
ANR	65712	IncDec	++		65514	1					
ANR	65713	PostIncDecOperationExpression	j ++		65514	1					
ANR	65714	Identifier	j		65514	0					
ANR	65715	IncDec	++		65514	1					
ANR	65716	CompoundStatement		31:39:811:811	65514	3					
ANR	65717	IfStatement	if ( j >= key_len )		65514	0					
ANR	65718	Condition	j >= key_len	231:16:6408:6419	65514	0	True				
ANR	65719	RelationalExpression	j >= key_len		65514	0		>=			
ANR	65720	Identifier	j		65514	0					
ANR	65721	Identifier	key_len		65514	1					
ANR	65722	BreakStatement	break ;	232:16:6438:6443	65514	1	True				
ANR	65723	ExpressionStatement	key [ j ] = md_buf [ i ]	233:12:6457:6475	65514	1	True				
ANR	65724	AssignmentExpression	key [ j ] = md_buf [ i ]		65514	0		=			
ANR	65725	ArrayIndexing	key [ j ]		65514	0					
ANR	65726	Identifier	key		65514	0					
ANR	65727	Identifier	j		65514	1					
ANR	65728	ArrayIndexing	md_buf [ i ]		65514	1					
ANR	65729	Identifier	md_buf		65514	0					
ANR	65730	Identifier	i		65514	1					
ANR	65731	ExpressionStatement	mbedtls_md_free ( & c )	237:4:6498:6517	65514	13	True				
ANR	65732	CallExpression	mbedtls_md_free ( & c )		65514	0					
ANR	65733	Callee	mbedtls_md_free		65514	0					
ANR	65734	Identifier	mbedtls_md_free		65514	0					
ANR	65735	ArgumentList	& c		65514	1					
ANR	65736	Argument	& c		65514	0					
ANR	65737	UnaryOperationExpression	& c		65514	0					
ANR	65738	UnaryOperator	&		65514	0					
ANR	65739	Identifier	c		65514	1					
ANR	65740	ReturnStatement	return key_len ;	238:4:6523:6537	65514	14	True				
ANR	65741	Identifier	key_len		65514	0					
ANR	65742	ReturnType	int		65514	1					
ANR	65743	Identifier	crypto_derive_key		65514	2					
ANR	65744	ParameterList	"const char * pass , uint8_t * key , size_t key_len"		65514	3					
ANR	65745	Parameter	const char * pass	199:18:5530:5545	65514	0	True				
ANR	65746	ParameterType	const char *		65514	0					
ANR	65747	Identifier	pass		65514	1					
ANR	65748	Parameter	uint8_t * key	199:36:5548:5559	65514	1	True				
ANR	65749	ParameterType	uint8_t *		65514	0					
ANR	65750	Identifier	key		65514	1					
ANR	65751	Parameter	size_t key_len	199:50:5562:5575	65514	2	True				
ANR	65752	ParameterType	size_t		65514	0					
ANR	65753	Identifier	key_len		65514	1					
ANR	65754	CFGEntryNode	ENTRY		65514		True				
ANR	65755	CFGExitNode	EXIT		65514		True				
ANR	65756	Symbol	NULL		65514						
ANR	65757	Symbol	c		65514						
ANR	65758	Symbol	pass		65514						
ANR	65759	Symbol	md_buf		65514						
ANR	65760	Symbol	* md_buf		65514						
ANR	65761	Symbol	i		65514						
ANR	65762	Symbol	& c		65514						
ANR	65763	Symbol	* key		65514						
ANR	65764	Symbol	j		65514						
ANR	65765	Symbol	datal		65514						
ANR	65766	Symbol	mbedtls_md_info_from_string		65514						
ANR	65767	Symbol	strlen		65514						
ANR	65768	Symbol	* i		65514						
ANR	65769	Symbol	* j		65514						
ANR	65770	Symbol	mbedtls_md_get_size		65514						
ANR	65771	Symbol	md		65514						
ANR	65772	Symbol	mbedtls_md_setup		65514						
ANR	65773	Symbol	addmd		65514						
ANR	65774	Symbol	mds		65514						
ANR	65775	Symbol	key		65514						
ANR	65776	Symbol	key_len		65514						
ANR	65777	Function	crypto_hkdf	242:0:6575:7071							
ANR	65778	FunctionDef	"crypto_hkdf (const mbedtls_md_info_t * md , const unsigned char * salt , int salt_len , const unsigned char * ikm , int ikm_len , const unsigned char * info , int info_len , unsigned char * okm , int okm_len)"		65777	0					
ANR	65779	CompoundStatement		246:0:6825:7071	65777	0					
ANR	65780	IdentifierDeclStatement	unsigned char prk [ MBEDTLS_MD_MAX_SIZE ] ;	247:4:6831:6869	65777	0	True				
ANR	65781	IdentifierDecl	prk [ MBEDTLS_MD_MAX_SIZE ]		65777	0					
ANR	65782	IdentifierDeclType	unsigned char [ MBEDTLS_MD_MAX_SIZE ]		65777	0					
ANR	65783	Identifier	prk		65777	1					
ANR	65784	Identifier	MBEDTLS_MD_MAX_SIZE		65777	2					
ANR	65785	ReturnStatement	"return crypto_hkdf_extract ( md , salt , salt_len , ikm , ikm_len , prk ) || crypto_hkdf_expand ( md , prk , mbedtls_md_get_size ( md ) , info , info_len , okm , okm_len ) ;"	249:4:6876:7069	65777	1	True				
ANR	65786	OrExpression	"crypto_hkdf_extract ( md , salt , salt_len , ikm , ikm_len , prk ) || crypto_hkdf_expand ( md , prk , mbedtls_md_get_size ( md ) , info , info_len , okm , okm_len )"		65777	0		||			
ANR	65787	CallExpression	"crypto_hkdf_extract ( md , salt , salt_len , ikm , ikm_len , prk )"		65777	0					
ANR	65788	Callee	crypto_hkdf_extract		65777	0					
ANR	65789	Identifier	crypto_hkdf_extract		65777	0					
ANR	65790	ArgumentList	md		65777	1					
ANR	65791	Argument	md		65777	0					
ANR	65792	Identifier	md		65777	0					
ANR	65793	Argument	salt		65777	1					
ANR	65794	Identifier	salt		65777	0					
ANR	65795	Argument	salt_len		65777	2					
ANR	65796	Identifier	salt_len		65777	0					
ANR	65797	Argument	ikm		65777	3					
ANR	65798	Identifier	ikm		65777	0					
ANR	65799	Argument	ikm_len		65777	4					
ANR	65800	Identifier	ikm_len		65777	0					
ANR	65801	Argument	prk		65777	5					
ANR	65802	Identifier	prk		65777	0					
ANR	65803	CallExpression	"crypto_hkdf_expand ( md , prk , mbedtls_md_get_size ( md ) , info , info_len , okm , okm_len )"		65777	1					
ANR	65804	Callee	crypto_hkdf_expand		65777	0					
ANR	65805	Identifier	crypto_hkdf_expand		65777	0					
ANR	65806	ArgumentList	md		65777	1					
ANR	65807	Argument	md		65777	0					
ANR	65808	Identifier	md		65777	0					
ANR	65809	Argument	prk		65777	1					
ANR	65810	Identifier	prk		65777	0					
ANR	65811	Argument	mbedtls_md_get_size ( md )		65777	2					
ANR	65812	CallExpression	mbedtls_md_get_size ( md )		65777	0					
ANR	65813	Callee	mbedtls_md_get_size		65777	0					
ANR	65814	Identifier	mbedtls_md_get_size		65777	0					
ANR	65815	ArgumentList	md		65777	1					
ANR	65816	Argument	md		65777	0					
ANR	65817	Identifier	md		65777	0					
ANR	65818	Argument	info		65777	3					
ANR	65819	Identifier	info		65777	0					
ANR	65820	Argument	info_len		65777	4					
ANR	65821	Identifier	info_len		65777	0					
ANR	65822	Argument	okm		65777	5					
ANR	65823	Identifier	okm		65777	0					
ANR	65824	Argument	okm_len		65777	6					
ANR	65825	Identifier	okm_len		65777	0					
ANR	65826	ReturnType	int		65777	1					
ANR	65827	Identifier	crypto_hkdf		65777	2					
ANR	65828	ParameterList	"const mbedtls_md_info_t * md , const unsigned char * salt , int salt_len , const unsigned char * ikm , int ikm_len , const unsigned char * info , int info_len , unsigned char * okm , int okm_len"		65777	3					
ANR	65829	Parameter	const mbedtls_md_info_t * md	242:16:6591:6617	65777	0	True				
ANR	65830	ParameterType	const mbedtls_md_info_t *		65777	0					
ANR	65831	Identifier	md		65777	1					
ANR	65832	Parameter	const unsigned char * salt	242:45:6620:6644	65777	1	True				
ANR	65833	ParameterType	const unsigned char *		65777	0					
ANR	65834	Identifier	salt		65777	1					
ANR	65835	Parameter	int salt_len	243:17:6664:6675	65777	2	True				
ANR	65836	ParameterType	int		65777	0					
ANR	65837	Identifier	salt_len		65777	1					
ANR	65838	Parameter	const unsigned char * ikm	243:31:6678:6701	65777	3	True				
ANR	65839	ParameterType	const unsigned char *		65777	0					
ANR	65840	Identifier	ikm		65777	1					
ANR	65841	Parameter	int ikm_len	243:57:6704:6714	65777	4	True				
ANR	65842	ParameterType	int		65777	0					
ANR	65843	Identifier	ikm_len		65777	1					
ANR	65844	Parameter	const unsigned char * info	244:17:6734:6758	65777	5	True				
ANR	65845	ParameterType	const unsigned char *		65777	0					
ANR	65846	Identifier	info		65777	1					
ANR	65847	Parameter	int info_len	244:44:6761:6772	65777	6	True				
ANR	65848	ParameterType	int		65777	0					
ANR	65849	Identifier	info_len		65777	1					
ANR	65850	Parameter	unsigned char * okm	244:58:6775:6792	65777	7	True				
ANR	65851	ParameterType	unsigned char *		65777	0					
ANR	65852	Identifier	okm		65777	1					
ANR	65853	Parameter	int okm_len	245:17:6812:6822	65777	8	True				
ANR	65854	ParameterType	int		65777	0					
ANR	65855	Identifier	okm_len		65777	1					
ANR	65856	CFGEntryNode	ENTRY		65777		True				
ANR	65857	CFGExitNode	EXIT		65777		True				
ANR	65858	Symbol	crypto_hkdf_extract		65777						
ANR	65859	Symbol	salt		65777						
ANR	65860	Symbol	info_len		65777						
ANR	65861	Symbol	prk		65777						
ANR	65862	Symbol	ikm		65777						
ANR	65863	Symbol	ikm_len		65777						
ANR	65864	Symbol	okm		65777						
ANR	65865	Symbol	okm_len		65777						
ANR	65866	Symbol	salt_len		65777						
ANR	65867	Symbol	crypto_hkdf_expand		65777						
ANR	65868	Symbol	mbedtls_md_get_size		65777						
ANR	65869	Symbol	md		65777						
ANR	65870	Symbol	info		65777						
ANR	65871	Function	crypto_hkdf_extract	255:0:7111:7650							
ANR	65872	FunctionDef	"crypto_hkdf_extract (const mbedtls_md_info_t * md , const unsigned char * salt , int salt_len , const unsigned char * ikm , int ikm_len , unsigned char * prk)"		65871	0					
ANR	65873	CompoundStatement		258:0:7314:7650	65871	0					
ANR	65874	IdentifierDeclStatement	int hash_len ;	259:4:7320:7332	65871	0	True				
ANR	65875	IdentifierDecl	hash_len		65871	0					
ANR	65876	IdentifierDeclType	int		65871	0					
ANR	65877	Identifier	hash_len		65871	1					
ANR	65878	IdentifierDeclStatement	unsigned char null_salt [ MBEDTLS_MD_MAX_SIZE ] = { '\\0' } ;	260:4:7338:7393	65871	1	True				
ANR	65879	IdentifierDecl	null_salt [ MBEDTLS_MD_MAX_SIZE ] = { '\\0' }		65871	0					
ANR	65880	IdentifierDeclType	unsigned char [ MBEDTLS_MD_MAX_SIZE ]		65871	0					
ANR	65881	Identifier	null_salt		65871	1					
ANR	65882	Identifier	MBEDTLS_MD_MAX_SIZE		65871	2					
ANR	65883	AssignmentExpression	null_salt [ MBEDTLS_MD_MAX_SIZE ] = { '\\0' }		65871	3		=			
ANR	65884	Identifier	MBEDTLS_MD_MAX_SIZE		65871	0					
ANR	65885	InitializerList	'\\0'		65871	1					
ANR	65886	PrimaryExpression	'\\0'		65871	0					
ANR	65887	IfStatement	if ( salt_len < 0 )		65871	2					
ANR	65888	Condition	salt_len < 0	262:8:7404:7415	65871	0	True				
ANR	65889	RelationalExpression	salt_len < 0		65871	0		<			
ANR	65890	Identifier	salt_len		65871	0					
ANR	65891	PrimaryExpression	0		65871	1					
ANR	65892	CompoundStatement		5:22:103:103	65871	1					
ANR	65893	ReturnStatement	return CRYPTO_ERROR ;	263:8:7428:7447	65871	0	True				
ANR	65894	Identifier	CRYPTO_ERROR		65871	0					
ANR	65895	ExpressionStatement	hash_len = mbedtls_md_get_size ( md )	266:4:7460:7494	65871	3	True				
ANR	65896	AssignmentExpression	hash_len = mbedtls_md_get_size ( md )		65871	0		=			
ANR	65897	Identifier	hash_len		65871	0					
ANR	65898	CallExpression	mbedtls_md_get_size ( md )		65871	1					
ANR	65899	Callee	mbedtls_md_get_size		65871	0					
ANR	65900	Identifier	mbedtls_md_get_size		65871	0					
ANR	65901	ArgumentList	md		65871	1					
ANR	65902	Argument	md		65871	0					
ANR	65903	Identifier	md		65871	0					
ANR	65904	IfStatement	if ( salt == NULL )		65871	4					
ANR	65905	Condition	salt == NULL	268:8:7505:7516	65871	0	True				
ANR	65906	EqualityExpression	salt == NULL		65871	0		==			
ANR	65907	Identifier	salt		65871	0					
ANR	65908	Identifier	NULL		65871	1					
ANR	65909	CompoundStatement		11:22:204:204	65871	1					
ANR	65910	ExpressionStatement	salt = null_salt	269:8:7529:7545	65871	0	True				
ANR	65911	AssignmentExpression	salt = null_salt		65871	0		=			
ANR	65912	Identifier	salt		65871	0					
ANR	65913	Identifier	null_salt		65871	1					
ANR	65914	ExpressionStatement	salt_len = hash_len	270:8:7555:7574	65871	1	True				
ANR	65915	AssignmentExpression	salt_len = hash_len		65871	0		=			
ANR	65916	Identifier	salt_len		65871	0					
ANR	65917	Identifier	hash_len		65871	1					
ANR	65918	ReturnStatement	"return mbedtls_md_hmac ( md , salt , salt_len , ikm , ikm_len , prk ) ;"	273:4:7587:7648	65871	5	True				
ANR	65919	CallExpression	"mbedtls_md_hmac ( md , salt , salt_len , ikm , ikm_len , prk )"		65871	0					
ANR	65920	Callee	mbedtls_md_hmac		65871	0					
ANR	65921	Identifier	mbedtls_md_hmac		65871	0					
ANR	65922	ArgumentList	md		65871	1					
ANR	65923	Argument	md		65871	0					
ANR	65924	Identifier	md		65871	0					
ANR	65925	Argument	salt		65871	1					
ANR	65926	Identifier	salt		65871	0					
ANR	65927	Argument	salt_len		65871	2					
ANR	65928	Identifier	salt_len		65871	0					
ANR	65929	Argument	ikm		65871	3					
ANR	65930	Identifier	ikm		65871	0					
ANR	65931	Argument	ikm_len		65871	4					
ANR	65932	Identifier	ikm_len		65871	0					
ANR	65933	Argument	prk		65871	5					
ANR	65934	Identifier	prk		65871	0					
ANR	65935	ReturnType	int		65871	1					
ANR	65936	Identifier	crypto_hkdf_extract		65871	2					
ANR	65937	ParameterList	"const mbedtls_md_info_t * md , const unsigned char * salt , int salt_len , const unsigned char * ikm , int ikm_len , unsigned char * prk"		65871	3					
ANR	65938	Parameter	const mbedtls_md_info_t * md	255:24:7135:7161	65871	0	True				
ANR	65939	ParameterType	const mbedtls_md_info_t *		65871	0					
ANR	65940	Identifier	md		65871	1					
ANR	65941	Parameter	const unsigned char * salt	255:53:7164:7188	65871	1	True				
ANR	65942	ParameterType	const unsigned char *		65871	0					
ANR	65943	Identifier	salt		65871	1					
ANR	65944	Parameter	int salt_len	256:25:7216:7227	65871	2	True				
ANR	65945	ParameterType	int		65871	0					
ANR	65946	Identifier	salt_len		65871	1					
ANR	65947	Parameter	const unsigned char * ikm	256:39:7230:7253	65871	3	True				
ANR	65948	ParameterType	const unsigned char *		65871	0					
ANR	65949	Identifier	ikm		65871	1					
ANR	65950	Parameter	int ikm_len	256:65:7256:7266	65871	4	True				
ANR	65951	ParameterType	int		65871	0					
ANR	65952	Identifier	ikm_len		65871	1					
ANR	65953	Parameter	unsigned char * prk	257:25:7294:7311	65871	5	True				
ANR	65954	ParameterType	unsigned char *		65871	0					
ANR	65955	Identifier	prk		65871	1					
ANR	65956	CFGEntryNode	ENTRY		65871		True				
ANR	65957	CFGExitNode	EXIT		65871		True				
ANR	65958	Symbol	null_salt		65871						
ANR	65959	Symbol	MBEDTLS_MD_MAX_SIZE		65871						
ANR	65960	Symbol	CRYPTO_ERROR		65871						
ANR	65961	Symbol	salt		65871						
ANR	65962	Symbol	NULL		65871						
ANR	65963	Symbol	prk		65871						
ANR	65964	Symbol	ikm		65871						
ANR	65965	Symbol	ikm_len		65871						
ANR	65966	Symbol	salt_len		65871						
ANR	65967	Symbol	mbedtls_md_get_size		65871						
ANR	65968	Symbol	md		65871						
ANR	65969	Symbol	mbedtls_md_hmac		65871						
ANR	65970	Symbol	hash_len		65871						
ANR	65971	Function	crypto_hkdf_expand	277:0:7692:9336							
ANR	65972	FunctionDef	"crypto_hkdf_expand (const mbedtls_md_info_t * md , const unsigned char * prk , int prk_len , const unsigned char * info , int info_len , unsigned char * okm , int okm_len)"		65971	0					
ANR	65973	CompoundStatement		280:0:7905:9336	65971	0					
ANR	65974	IdentifierDeclStatement	int hash_len ;	281:4:7911:7923	65971	0	True				
ANR	65975	IdentifierDecl	hash_len		65971	0					
ANR	65976	IdentifierDeclType	int		65971	0					
ANR	65977	Identifier	hash_len		65971	1					
ANR	65978	IdentifierDeclStatement	int N ;	282:4:7929:7934	65971	1	True				
ANR	65979	IdentifierDecl	N		65971	0					
ANR	65980	IdentifierDeclType	int		65971	0					
ANR	65981	Identifier	N		65971	1					
ANR	65982	IdentifierDeclStatement	"int T_len = 0 , where = 0 , i , ret ;"	283:4:7940:7972	65971	2	True				
ANR	65983	IdentifierDecl	T_len = 0		65971	0					
ANR	65984	IdentifierDeclType	int		65971	0					
ANR	65985	Identifier	T_len		65971	1					
ANR	65986	AssignmentExpression	T_len = 0		65971	2		=			
ANR	65987	Identifier	T_len		65971	0					
ANR	65988	PrimaryExpression	0		65971	1					
ANR	65989	IdentifierDecl	where = 0		65971	1					
ANR	65990	IdentifierDeclType	int		65971	0					
ANR	65991	Identifier	where		65971	1					
ANR	65992	AssignmentExpression	where = 0		65971	2		=			
ANR	65993	Identifier	where		65971	0					
ANR	65994	PrimaryExpression	0		65971	1					
ANR	65995	IdentifierDecl	i		65971	2					
ANR	65996	IdentifierDeclType	int		65971	0					
ANR	65997	Identifier	i		65971	1					
ANR	65998	IdentifierDecl	ret		65971	3					
ANR	65999	IdentifierDeclType	int		65971	0					
ANR	66000	Identifier	ret		65971	1					
ANR	66001	IdentifierDeclStatement	mbedtls_md_context_t ctx ;	284:4:7978:8002	65971	3	True				
ANR	66002	IdentifierDecl	ctx		65971	0					
ANR	66003	IdentifierDeclType	mbedtls_md_context_t		65971	0					
ANR	66004	Identifier	ctx		65971	1					
ANR	66005	IdentifierDeclStatement	unsigned char T [ MBEDTLS_MD_MAX_SIZE ] ;	285:4:8008:8044	65971	4	True				
ANR	66006	IdentifierDecl	T [ MBEDTLS_MD_MAX_SIZE ]		65971	0					
ANR	66007	IdentifierDeclType	unsigned char [ MBEDTLS_MD_MAX_SIZE ]		65971	0					
ANR	66008	Identifier	T		65971	1					
ANR	66009	Identifier	MBEDTLS_MD_MAX_SIZE		65971	2					
ANR	66010	IfStatement	if ( info_len < 0 || okm_len < 0 || okm == NULL )		65971	5					
ANR	66011	Condition	info_len < 0 || okm_len < 0 || okm == NULL	287:8:8055:8096	65971	0	True				
ANR	66012	OrExpression	info_len < 0 || okm_len < 0 || okm == NULL		65971	0		||			
ANR	66013	RelationalExpression	info_len < 0		65971	0		<			
ANR	66014	Identifier	info_len		65971	0					
ANR	66015	PrimaryExpression	0		65971	1					
ANR	66016	OrExpression	okm_len < 0 || okm == NULL		65971	1		||			
ANR	66017	RelationalExpression	okm_len < 0		65971	0		<			
ANR	66018	Identifier	okm_len		65971	0					
ANR	66019	PrimaryExpression	0		65971	1					
ANR	66020	EqualityExpression	okm == NULL		65971	1		==			
ANR	66021	Identifier	okm		65971	0					
ANR	66022	Identifier	NULL		65971	1					
ANR	66023	CompoundStatement		8:52:193:193	65971	1					
ANR	66024	ReturnStatement	return CRYPTO_ERROR ;	288:8:8109:8128	65971	0	True				
ANR	66025	Identifier	CRYPTO_ERROR		65971	0					
ANR	66026	ExpressionStatement	hash_len = mbedtls_md_get_size ( md )	291:4:8141:8175	65971	6	True				
ANR	66027	AssignmentExpression	hash_len = mbedtls_md_get_size ( md )		65971	0		=			
ANR	66028	Identifier	hash_len		65971	0					
ANR	66029	CallExpression	mbedtls_md_get_size ( md )		65971	1					
ANR	66030	Callee	mbedtls_md_get_size		65971	0					
ANR	66031	Identifier	mbedtls_md_get_size		65971	0					
ANR	66032	ArgumentList	md		65971	1					
ANR	66033	Argument	md		65971	0					
ANR	66034	Identifier	md		65971	0					
ANR	66035	IfStatement	if ( prk_len < hash_len )		65971	7					
ANR	66036	Condition	prk_len < hash_len	293:8:8186:8203	65971	0	True				
ANR	66037	RelationalExpression	prk_len < hash_len		65971	0		<			
ANR	66038	Identifier	prk_len		65971	0					
ANR	66039	Identifier	hash_len		65971	1					
ANR	66040	CompoundStatement		14:28:300:300	65971	1					
ANR	66041	ReturnStatement	return CRYPTO_ERROR ;	294:8:8216:8235	65971	0	True				
ANR	66042	Identifier	CRYPTO_ERROR		65971	0					
ANR	66043	IfStatement	if ( info == NULL )		65971	8					
ANR	66044	Condition	info == NULL	297:8:8252:8263	65971	0	True				
ANR	66045	EqualityExpression	info == NULL		65971	0		==			
ANR	66046	Identifier	info		65971	0					
ANR	66047	Identifier	NULL		65971	1					
ANR	66048	CompoundStatement		18:22:360:360	65971	1					
ANR	66049	ExpressionStatement	"info = ( const unsigned char * ) """""	298:8:8276:8308	65971	0	True				
ANR	66050	AssignmentExpression	"info = ( const unsigned char * ) """""		65971	0		=			
ANR	66051	Identifier	info		65971	0					
ANR	66052	CastExpression	"( const unsigned char * ) """""		65971	1					
ANR	66053	CastTarget	const unsigned char *		65971	0					
ANR	66054	PrimaryExpression	""""""		65971	1					
ANR	66055	ExpressionStatement	N = okm_len / hash_len	301:4:8321:8343	65971	9	True				
ANR	66056	AssignmentExpression	N = okm_len / hash_len		65971	0		=			
ANR	66057	Identifier	N		65971	0					
ANR	66058	MultiplicativeExpression	okm_len / hash_len		65971	1		/			
ANR	66059	Identifier	okm_len		65971	0					
ANR	66060	Identifier	hash_len		65971	1					
ANR	66061	IfStatement	if ( ( okm_len % hash_len ) != 0 )		65971	10					
ANR	66062	Condition	( okm_len % hash_len ) != 0	303:8:8354:8378	65971	0	True				
ANR	66063	EqualityExpression	( okm_len % hash_len ) != 0		65971	0		!=			
ANR	66064	MultiplicativeExpression	okm_len % hash_len		65971	0		%			
ANR	66065	Identifier	okm_len		65971	0					
ANR	66066	Identifier	hash_len		65971	1					
ANR	66067	PrimaryExpression	0		65971	1					
ANR	66068	CompoundStatement		24:35:475:475	65971	1					
ANR	66069	ExpressionStatement	N ++	304:8:8391:8394	65971	0	True				
ANR	66070	PostIncDecOperationExpression	N ++		65971	0					
ANR	66071	Identifier	N		65971	0					
ANR	66072	IncDec	++		65971	1					
ANR	66073	IfStatement	if ( N > 255 )		65971	11					
ANR	66074	Condition	N > 255	307:8:8411:8417	65971	0	True				
ANR	66075	RelationalExpression	N > 255		65971	0		>			
ANR	66076	Identifier	N		65971	0					
ANR	66077	PrimaryExpression	255		65971	1					
ANR	66078	CompoundStatement		28:17:514:514	65971	1					
ANR	66079	ReturnStatement	return CRYPTO_ERROR ;	308:8:8430:8449	65971	0	True				
ANR	66080	Identifier	CRYPTO_ERROR		65971	0					
ANR	66081	ExpressionStatement	mbedtls_md_init ( & ctx )	311:4:8462:8483	65971	12	True				
ANR	66082	CallExpression	mbedtls_md_init ( & ctx )		65971	0					
ANR	66083	Callee	mbedtls_md_init		65971	0					
ANR	66084	Identifier	mbedtls_md_init		65971	0					
ANR	66085	ArgumentList	& ctx		65971	1					
ANR	66086	Argument	& ctx		65971	0					
ANR	66087	UnaryOperationExpression	& ctx		65971	0					
ANR	66088	UnaryOperator	&		65971	0					
ANR	66089	Identifier	ctx		65971	1					
ANR	66090	IfStatement	"if ( ( ret = mbedtls_md_setup ( & ctx , md , 1 ) ) != 0 )"		65971	13					
ANR	66091	Condition	"( ret = mbedtls_md_setup ( & ctx , md , 1 ) ) != 0"	313:8:8494:8535	65971	0	True				
ANR	66092	EqualityExpression	"( ret = mbedtls_md_setup ( & ctx , md , 1 ) ) != 0"		65971	0		!=			
ANR	66093	AssignmentExpression	"ret = mbedtls_md_setup ( & ctx , md , 1 )"		65971	0		=			
ANR	66094	Identifier	ret		65971	0					
ANR	66095	CallExpression	"mbedtls_md_setup ( & ctx , md , 1 )"		65971	1					
ANR	66096	Callee	mbedtls_md_setup		65971	0					
ANR	66097	Identifier	mbedtls_md_setup		65971	0					
ANR	66098	ArgumentList	& ctx		65971	1					
ANR	66099	Argument	& ctx		65971	0					
ANR	66100	UnaryOperationExpression	& ctx		65971	0					
ANR	66101	UnaryOperator	&		65971	0					
ANR	66102	Identifier	ctx		65971	1					
ANR	66103	Argument	md		65971	1					
ANR	66104	Identifier	md		65971	0					
ANR	66105	Argument	1		65971	2					
ANR	66106	PrimaryExpression	1		65971	0					
ANR	66107	PrimaryExpression	0		65971	1					
ANR	66108	CompoundStatement		34:52:632:632	65971	1					
ANR	66109	ExpressionStatement	mbedtls_md_free ( & ctx )	314:8:8548:8569	65971	0	True				
ANR	66110	CallExpression	mbedtls_md_free ( & ctx )		65971	0					
ANR	66111	Callee	mbedtls_md_free		65971	0					
ANR	66112	Identifier	mbedtls_md_free		65971	0					
ANR	66113	ArgumentList	& ctx		65971	1					
ANR	66114	Argument	& ctx		65971	0					
ANR	66115	UnaryOperationExpression	& ctx		65971	0					
ANR	66116	UnaryOperator	&		65971	0					
ANR	66117	Identifier	ctx		65971	1					
ANR	66118	ReturnStatement	return ret ;	315:8:8579:8589	65971	1	True				
ANR	66119	Identifier	ret		65971	0					
ANR	66120	ForStatement	for ( i = 1 ; i <= N ; i ++ )		65971	14					
ANR	66121	ForInit	i = 1 ;	319:9:8630:8635	65971	0	True				
ANR	66122	AssignmentExpression	i = 1		65971	0		=			
ANR	66123	Identifier	i		65971	0					
ANR	66124	PrimaryExpression	1		65971	1					
ANR	66125	Condition	i <= N	319:16:8637:8642	65971	1	True				
ANR	66126	RelationalExpression	i <= N		65971	0		<=			
ANR	66127	Identifier	i		65971	0					
ANR	66128	Identifier	N		65971	1					
ANR	66129	PostIncDecOperationExpression	i ++	319:24:8645:8647	65971	2	True				
ANR	66130	Identifier	i		65971	0					
ANR	66131	IncDec	++		65971	1					
ANR	66132	CompoundStatement		41:8:754:773	65971	3					
ANR	66133	IdentifierDeclStatement	unsigned char c = i ;	320:8:8660:8679	65971	0	True				
ANR	66134	IdentifierDecl	c = i		65971	0					
ANR	66135	IdentifierDeclType	unsigned char		65971	0					
ANR	66136	Identifier	c		65971	1					
ANR	66137	AssignmentExpression	c = i		65971	2		=			
ANR	66138	Identifier	i		65971	0					
ANR	66139	Identifier	i		65971	1					
ANR	66140	ExpressionStatement	"ret = mbedtls_md_hmac_starts ( & ctx , prk , prk_len ) || mbedtls_md_hmac_update ( & ctx , T , T_len ) || mbedtls_md_hmac_update ( & ctx , info , info_len ) || mbedtls_md_hmac_update ( & ctx , & c , 1 ) || mbedtls_md_hmac_finish ( & ctx , T )"	322:8:8690:9064	65971	1	True				
ANR	66141	AssignmentExpression	"ret = mbedtls_md_hmac_starts ( & ctx , prk , prk_len ) || mbedtls_md_hmac_update ( & ctx , T , T_len ) || mbedtls_md_hmac_update ( & ctx , info , info_len ) || mbedtls_md_hmac_update ( & ctx , & c , 1 ) || mbedtls_md_hmac_finish ( & ctx , T )"		65971	0		=			
ANR	66142	Identifier	ret		65971	0					
ANR	66143	OrExpression	"mbedtls_md_hmac_starts ( & ctx , prk , prk_len ) || mbedtls_md_hmac_update ( & ctx , T , T_len ) || mbedtls_md_hmac_update ( & ctx , info , info_len ) || mbedtls_md_hmac_update ( & ctx , & c , 1 ) || mbedtls_md_hmac_finish ( & ctx , T )"		65971	1		||			
ANR	66144	CallExpression	"mbedtls_md_hmac_starts ( & ctx , prk , prk_len )"		65971	0					
ANR	66145	Callee	mbedtls_md_hmac_starts		65971	0					
ANR	66146	Identifier	mbedtls_md_hmac_starts		65971	0					
ANR	66147	ArgumentList	& ctx		65971	1					
ANR	66148	Argument	& ctx		65971	0					
ANR	66149	UnaryOperationExpression	& ctx		65971	0					
ANR	66150	UnaryOperator	&		65971	0					
ANR	66151	Identifier	ctx		65971	1					
ANR	66152	Argument	prk		65971	1					
ANR	66153	Identifier	prk		65971	0					
ANR	66154	Argument	prk_len		65971	2					
ANR	66155	Identifier	prk_len		65971	0					
ANR	66156	OrExpression	"mbedtls_md_hmac_update ( & ctx , T , T_len ) || mbedtls_md_hmac_update ( & ctx , info , info_len ) || mbedtls_md_hmac_update ( & ctx , & c , 1 ) || mbedtls_md_hmac_finish ( & ctx , T )"		65971	1		||			
ANR	66157	CallExpression	"mbedtls_md_hmac_update ( & ctx , T , T_len )"		65971	0					
ANR	66158	Callee	mbedtls_md_hmac_update		65971	0					
ANR	66159	Identifier	mbedtls_md_hmac_update		65971	0					
ANR	66160	ArgumentList	& ctx		65971	1					
ANR	66161	Argument	& ctx		65971	0					
ANR	66162	UnaryOperationExpression	& ctx		65971	0					
ANR	66163	UnaryOperator	&		65971	0					
ANR	66164	Identifier	ctx		65971	1					
ANR	66165	Argument	T		65971	1					
ANR	66166	Identifier	T		65971	0					
ANR	66167	Argument	T_len		65971	2					
ANR	66168	Identifier	T_len		65971	0					
ANR	66169	OrExpression	"mbedtls_md_hmac_update ( & ctx , info , info_len ) || mbedtls_md_hmac_update ( & ctx , & c , 1 ) || mbedtls_md_hmac_finish ( & ctx , T )"		65971	1		||			
ANR	66170	CallExpression	"mbedtls_md_hmac_update ( & ctx , info , info_len )"		65971	0					
ANR	66171	Callee	mbedtls_md_hmac_update		65971	0					
ANR	66172	Identifier	mbedtls_md_hmac_update		65971	0					
ANR	66173	ArgumentList	& ctx		65971	1					
ANR	66174	Argument	& ctx		65971	0					
ANR	66175	UnaryOperationExpression	& ctx		65971	0					
ANR	66176	UnaryOperator	&		65971	0					
ANR	66177	Identifier	ctx		65971	1					
ANR	66178	Argument	info		65971	1					
ANR	66179	Identifier	info		65971	0					
ANR	66180	Argument	info_len		65971	2					
ANR	66181	Identifier	info_len		65971	0					
ANR	66182	OrExpression	"mbedtls_md_hmac_update ( & ctx , & c , 1 ) || mbedtls_md_hmac_finish ( & ctx , T )"		65971	1		||			
ANR	66183	CallExpression	"mbedtls_md_hmac_update ( & ctx , & c , 1 )"		65971	0					
ANR	66184	Callee	mbedtls_md_hmac_update		65971	0					
ANR	66185	Identifier	mbedtls_md_hmac_update		65971	0					
ANR	66186	ArgumentList	& ctx		65971	1					
ANR	66187	Argument	& ctx		65971	0					
ANR	66188	UnaryOperationExpression	& ctx		65971	0					
ANR	66189	UnaryOperator	&		65971	0					
ANR	66190	Identifier	ctx		65971	1					
ANR	66191	Argument	& c		65971	1					
ANR	66192	UnaryOperationExpression	& c		65971	0					
ANR	66193	UnaryOperator	&		65971	0					
ANR	66194	Identifier	c		65971	1					
ANR	66195	Argument	1		65971	2					
ANR	66196	PrimaryExpression	1		65971	0					
ANR	66197	CallExpression	"mbedtls_md_hmac_finish ( & ctx , T )"		65971	1					
ANR	66198	Callee	mbedtls_md_hmac_finish		65971	0					
ANR	66199	Identifier	mbedtls_md_hmac_finish		65971	0					
ANR	66200	ArgumentList	& ctx		65971	1					
ANR	66201	Argument	& ctx		65971	0					
ANR	66202	UnaryOperationExpression	& ctx		65971	0					
ANR	66203	UnaryOperator	&		65971	0					
ANR	66204	Identifier	ctx		65971	1					
ANR	66205	Argument	T		65971	1					
ANR	66206	Identifier	T		65971	0					
ANR	66207	IfStatement	if ( ret != 0 )		65971	2					
ANR	66208	Condition	ret != 0	330:12:9079:9086	65971	0	True				
ANR	66209	EqualityExpression	ret != 0		65971	0		!=			
ANR	66210	Identifier	ret		65971	0					
ANR	66211	PrimaryExpression	0		65971	1					
ANR	66212	CompoundStatement		51:22:1183:1183	65971	1					
ANR	66213	ExpressionStatement	mbedtls_md_free ( & ctx )	331:12:9103:9124	65971	0	True				
ANR	66214	CallExpression	mbedtls_md_free ( & ctx )		65971	0					
ANR	66215	Callee	mbedtls_md_free		65971	0					
ANR	66216	Identifier	mbedtls_md_free		65971	0					
ANR	66217	ArgumentList	& ctx		65971	1					
ANR	66218	Argument	& ctx		65971	0					
ANR	66219	UnaryOperationExpression	& ctx		65971	0					
ANR	66220	UnaryOperator	&		65971	0					
ANR	66221	Identifier	ctx		65971	1					
ANR	66222	ReturnStatement	return ret ;	332:12:9138:9148	65971	1	True				
ANR	66223	Identifier	ret		65971	0					
ANR	66224	ExpressionStatement	"memcpy ( okm + where , T , ( i != N ) ? hash_len : ( okm_len - where ) )"	335:8:9169:9232	65971	3	True				
ANR	66225	CallExpression	"memcpy ( okm + where , T , ( i != N ) ? hash_len : ( okm_len - where ) )"		65971	0					
ANR	66226	Callee	memcpy		65971	0					
ANR	66227	Identifier	memcpy		65971	0					
ANR	66228	ArgumentList	okm + where		65971	1					
ANR	66229	Argument	okm + where		65971	0					
ANR	66230	AdditiveExpression	okm + where		65971	0		+			
ANR	66231	Identifier	okm		65971	0					
ANR	66232	Identifier	where		65971	1					
ANR	66233	Argument	T		65971	1					
ANR	66234	Identifier	T		65971	0					
ANR	66235	Argument	( i != N ) ? hash_len : ( okm_len - where )		65971	2					
ANR	66236	ConditionalExpression	( i != N ) ? hash_len : ( okm_len - where )		65971	0					
ANR	66237	Condition	i != N		65971	0					
ANR	66238	EqualityExpression	i != N		65971	0		!=			
ANR	66239	Identifier	i		65971	0					
ANR	66240	Identifier	N		65971	1					
ANR	66241	Identifier	hash_len		65971	1					
ANR	66242	AdditiveExpression	okm_len - where		65971	2		-			
ANR	66243	Identifier	okm_len		65971	0					
ANR	66244	Identifier	where		65971	1					
ANR	66245	ExpressionStatement	where += hash_len	336:8:9242:9259	65971	4	True				
ANR	66246	AssignmentExpression	where += hash_len		65971	0		+=			
ANR	66247	Identifier	where		65971	0					
ANR	66248	Identifier	hash_len		65971	1					
ANR	66249	ExpressionStatement	T_len = hash_len	337:8:9269:9285	65971	5	True				
ANR	66250	AssignmentExpression	T_len = hash_len		65971	0		=			
ANR	66251	Identifier	T_len		65971	0					
ANR	66252	Identifier	hash_len		65971	1					
ANR	66253	ExpressionStatement	mbedtls_md_free ( & ctx )	340:4:9298:9319	65971	15	True				
ANR	66254	CallExpression	mbedtls_md_free ( & ctx )		65971	0					
ANR	66255	Callee	mbedtls_md_free		65971	0					
ANR	66256	Identifier	mbedtls_md_free		65971	0					
ANR	66257	ArgumentList	& ctx		65971	1					
ANR	66258	Argument	& ctx		65971	0					
ANR	66259	UnaryOperationExpression	& ctx		65971	0					
ANR	66260	UnaryOperator	&		65971	0					
ANR	66261	Identifier	ctx		65971	1					
ANR	66262	ReturnStatement	return 0 ;	342:4:9326:9334	65971	16	True				
ANR	66263	PrimaryExpression	0		65971	0					
ANR	66264	ReturnType	int		65971	1					
ANR	66265	Identifier	crypto_hkdf_expand		65971	2					
ANR	66266	ParameterList	"const mbedtls_md_info_t * md , const unsigned char * prk , int prk_len , const unsigned char * info , int info_len , unsigned char * okm , int okm_len"		65971	3					
ANR	66267	Parameter	const mbedtls_md_info_t * md	277:23:7715:7741	65971	0	True				
ANR	66268	ParameterType	const mbedtls_md_info_t *		65971	0					
ANR	66269	Identifier	md		65971	1					
ANR	66270	Parameter	const unsigned char * prk	277:52:7744:7767	65971	1	True				
ANR	66271	ParameterType	const unsigned char *		65971	0					
ANR	66272	Identifier	prk		65971	1					
ANR	66273	Parameter	int prk_len	278:24:7794:7804	65971	2	True				
ANR	66274	ParameterType	int		65971	0					
ANR	66275	Identifier	prk_len		65971	1					
ANR	66276	Parameter	const unsigned char * info	278:37:7807:7831	65971	3	True				
ANR	66277	ParameterType	const unsigned char *		65971	0					
ANR	66278	Identifier	info		65971	1					
ANR	66279	Parameter	int info_len	278:64:7834:7845	65971	4	True				
ANR	66280	ParameterType	int		65971	0					
ANR	66281	Identifier	info_len		65971	1					
ANR	66282	Parameter	unsigned char * okm	279:24:7872:7889	65971	5	True				
ANR	66283	ParameterType	unsigned char *		65971	0					
ANR	66284	Identifier	okm		65971	1					
ANR	66285	Parameter	int okm_len	279:44:7892:7902	65971	6	True				
ANR	66286	ParameterType	int		65971	0					
ANR	66287	Identifier	okm_len		65971	1					
ANR	66288	CFGEntryNode	ENTRY		65971		True				
ANR	66289	CFGExitNode	EXIT		65971		True				
ANR	66290	Symbol	CRYPTO_ERROR		65971						
ANR	66291	Symbol	& ctx		65971						
ANR	66292	Symbol	N		65971						
ANR	66293	Symbol	okm		65971						
ANR	66294	Symbol	T		65971						
ANR	66295	Symbol	mbedtls_md_get_size		65971						
ANR	66296	Symbol	md		65971						
ANR	66297	Symbol	where		65971						
ANR	66298	Symbol	mbedtls_md_setup		65971						
ANR	66299	Symbol	info		65971						
ANR	66300	Symbol	ret		65971						
ANR	66301	Symbol	NULL		65971						
ANR	66302	Symbol	c		65971						
ANR	66303	Symbol	info_len		65971						
ANR	66304	Symbol	T_len		65971						
ANR	66305	Symbol	ctx		65971						
ANR	66306	Symbol	prk		65971						
ANR	66307	Symbol	i		65971						
ANR	66308	Symbol	& c		65971						
ANR	66309	Symbol	mbedtls_md_hmac_finish		65971						
ANR	66310	Symbol	prk_len		65971						
ANR	66311	Symbol	mbedtls_md_hmac_starts		65971						
ANR	66312	Symbol	okm_len		65971						
ANR	66313	Symbol	mbedtls_md_hmac_update		65971						
ANR	66314	Symbol	hash_len		65971						
ANR	66315	Function	crypto_parse_key	345:0:9339:10154							
ANR	66316	FunctionDef	"crypto_parse_key (const char * base64 , uint8_t * key , size_t key_len)"		66315	0					
ANR	66317	CompoundStatement		347:0:9410:10154	66315	0					
ANR	66318	IdentifierDeclStatement	size_t base64_len = strlen ( base64 ) ;	348:4:9416:9450	66315	0	True				
ANR	66319	IdentifierDecl	base64_len = strlen ( base64 )		66315	0					
ANR	66320	IdentifierDeclType	size_t		66315	0					
ANR	66321	Identifier	base64_len		66315	1					
ANR	66322	AssignmentExpression	base64_len = strlen ( base64 )		66315	2		=			
ANR	66323	Identifier	base64_len		66315	0					
ANR	66324	CallExpression	strlen ( base64 )		66315	1					
ANR	66325	Callee	strlen		66315	0					
ANR	66326	Identifier	strlen		66315	0					
ANR	66327	ArgumentList	base64		66315	1					
ANR	66328	Argument	base64		66315	0					
ANR	66329	Identifier	base64		66315	0					
ANR	66330	IdentifierDeclStatement	int out_len = BASE64_SIZE ( base64_len ) ;	349:4:9456:9493	66315	1	True				
ANR	66331	IdentifierDecl	out_len = BASE64_SIZE ( base64_len )		66315	0					
ANR	66332	IdentifierDeclType	int		66315	0					
ANR	66333	Identifier	out_len		66315	1					
ANR	66334	AssignmentExpression	out_len = BASE64_SIZE ( base64_len )		66315	2		=			
ANR	66335	Identifier	out_len		66315	0					
ANR	66336	CallExpression	BASE64_SIZE ( base64_len )		66315	1					
ANR	66337	Callee	BASE64_SIZE		66315	0					
ANR	66338	Identifier	BASE64_SIZE		66315	0					
ANR	66339	ArgumentList	base64_len		66315	1					
ANR	66340	Argument	base64_len		66315	0					
ANR	66341	Identifier	base64_len		66315	0					
ANR	66342	IdentifierDeclStatement	uint8_t out [ out_len ] ;	350:4:9499:9519	66315	2	True				
ANR	66343	IdentifierDecl	out [ out_len ]		66315	0					
ANR	66344	IdentifierDeclType	uint8_t [ out_len ]		66315	0					
ANR	66345	Identifier	out		66315	1					
ANR	66346	Identifier	out_len		66315	2					
ANR	66347	ExpressionStatement	"out_len = base64_decode ( out , base64 , out_len )"	352:4:9526:9571	66315	3	True				
ANR	66348	AssignmentExpression	"out_len = base64_decode ( out , base64 , out_len )"		66315	0		=			
ANR	66349	Identifier	out_len		66315	0					
ANR	66350	CallExpression	"base64_decode ( out , base64 , out_len )"		66315	1					
ANR	66351	Callee	base64_decode		66315	0					
ANR	66352	Identifier	base64_decode		66315	0					
ANR	66353	ArgumentList	out		66315	1					
ANR	66354	Argument	out		66315	0					
ANR	66355	Identifier	out		66315	0					
ANR	66356	Argument	base64		66315	1					
ANR	66357	Identifier	base64		66315	0					
ANR	66358	Argument	out_len		66315	2					
ANR	66359	Identifier	out_len		66315	0					
ANR	66360	IfStatement	if ( out_len > 0 && out_len >= key_len )		66315	4					
ANR	66361	Condition	out_len > 0 && out_len >= key_len	353:8:9581:9613	66315	0	True				
ANR	66362	AndExpression	out_len > 0 && out_len >= key_len		66315	0		&&			
ANR	66363	RelationalExpression	out_len > 0		66315	0		>			
ANR	66364	Identifier	out_len		66315	0					
ANR	66365	PrimaryExpression	0		66315	1					
ANR	66366	RelationalExpression	out_len >= key_len		66315	1		>=			
ANR	66367	Identifier	out_len		66315	0					
ANR	66368	Identifier	key_len		66315	1					
ANR	66369	CompoundStatement		7:43:205:205	66315	1					
ANR	66370	ExpressionStatement	"memcpy ( key , out , key_len )"	354:8:9626:9651	66315	0	True				
ANR	66371	CallExpression	"memcpy ( key , out , key_len )"		66315	0					
ANR	66372	Callee	memcpy		66315	0					
ANR	66373	Identifier	memcpy		66315	0					
ANR	66374	ArgumentList	key		66315	1					
ANR	66375	Argument	key		66315	0					
ANR	66376	Identifier	key		66315	0					
ANR	66377	Argument	out		66315	1					
ANR	66378	Identifier	out		66315	0					
ANR	66379	Argument	key_len		66315	2					
ANR	66380	Identifier	key_len		66315	0					
ANR	66381	ExpressionStatement	"dump ( ""KEY"" , ( char * ) key , key_len )"	356:8:9677:9709	66315	1	True				
ANR	66382	CallExpression	"dump ( ""KEY"" , ( char * ) key , key_len )"		66315	0					
ANR	66383	Callee	dump		66315	0					
ANR	66384	Identifier	dump		66315	0					
ANR	66385	ArgumentList	"""KEY"""		66315	1					
ANR	66386	Argument	"""KEY"""		66315	0					
ANR	66387	PrimaryExpression	"""KEY"""		66315	0					
ANR	66388	Argument	( char * ) key		66315	1					
ANR	66389	CastExpression	( char * ) key		66315	0					
ANR	66390	CastTarget	char *		66315	0					
ANR	66391	Identifier	key		66315	1					
ANR	66392	Argument	key_len		66315	2					
ANR	66393	Identifier	key_len		66315	0					
ANR	66394	ReturnStatement	return key_len ;	358:8:9726:9740	66315	2	True				
ANR	66395	Identifier	key_len		66315	0					
ANR	66396	ExpressionStatement	out_len = BASE64_SIZE ( key_len )	361:4:9753:9783	66315	5	True				
ANR	66397	AssignmentExpression	out_len = BASE64_SIZE ( key_len )		66315	0		=			
ANR	66398	Identifier	out_len		66315	0					
ANR	66399	CallExpression	BASE64_SIZE ( key_len )		66315	1					
ANR	66400	Callee	BASE64_SIZE		66315	0					
ANR	66401	Identifier	BASE64_SIZE		66315	0					
ANR	66402	ArgumentList	key_len		66315	1					
ANR	66403	Argument	key_len		66315	0					
ANR	66404	Identifier	key_len		66315	0					
ANR	66405	IdentifierDeclStatement	char out_key [ out_len ] ;	362:4:9789:9810	66315	6	True				
ANR	66406	IdentifierDecl	out_key [ out_len ]		66315	0					
ANR	66407	IdentifierDeclType	char [ out_len ]		66315	0					
ANR	66408	Identifier	out_key		66315	1					
ANR	66409	Identifier	out_len		66315	2					
ANR	66410	ExpressionStatement	"rand_bytes ( key , key_len )"	363:4:9816:9840	66315	7	True				
ANR	66411	CallExpression	"rand_bytes ( key , key_len )"		66315	0					
ANR	66412	Callee	rand_bytes		66315	0					
ANR	66413	Identifier	rand_bytes		66315	0					
ANR	66414	ArgumentList	key		66315	1					
ANR	66415	Argument	key		66315	0					
ANR	66416	Identifier	key		66315	0					
ANR	66417	Argument	key_len		66315	1					
ANR	66418	Identifier	key_len		66315	0					
ANR	66419	ExpressionStatement	"base64_encode ( out_key , out_len , key , key_len )"	364:4:9846:9891	66315	8	True				
ANR	66420	CallExpression	"base64_encode ( out_key , out_len , key , key_len )"		66315	0					
ANR	66421	Callee	base64_encode		66315	0					
ANR	66422	Identifier	base64_encode		66315	0					
ANR	66423	ArgumentList	out_key		66315	1					
ANR	66424	Argument	out_key		66315	0					
ANR	66425	Identifier	out_key		66315	0					
ANR	66426	Argument	out_len		66315	1					
ANR	66427	Identifier	out_len		66315	0					
ANR	66428	Argument	key		66315	2					
ANR	66429	Identifier	key		66315	0					
ANR	66430	Argument	key_len		66315	3					
ANR	66431	Identifier	key_len		66315	0					
ANR	66432	ExpressionStatement	"LOGE ( ""Invalid key for your chosen cipher!"" )"	365:4:9897:9940	66315	9	True				
ANR	66433	CallExpression	"LOGE ( ""Invalid key for your chosen cipher!"" )"		66315	0					
ANR	66434	Callee	LOGE		66315	0					
ANR	66435	Identifier	LOGE		66315	0					
ANR	66436	ArgumentList	"""Invalid key for your chosen cipher!"""		66315	1					
ANR	66437	Argument	"""Invalid key for your chosen cipher!"""		66315	0					
ANR	66438	PrimaryExpression	"""Invalid key for your chosen cipher!"""		66315	0					
ANR	66439	ExpressionStatement	"LOGE ( ""It requires a %zu-byte key encoded with URL-safe Base64"" , key_len )"	366:4:9946:10018	66315	10	True				
ANR	66440	CallExpression	"LOGE ( ""It requires a %zu-byte key encoded with URL-safe Base64"" , key_len )"		66315	0					
ANR	66441	Callee	LOGE		66315	0					
ANR	66442	Identifier	LOGE		66315	0					
ANR	66443	ArgumentList	"""It requires a %zu-byte key encoded with URL-safe Base64"""		66315	1					
ANR	66444	Argument	"""It requires a %zu-byte key encoded with URL-safe Base64"""		66315	0					
ANR	66445	PrimaryExpression	"""It requires a %zu-byte key encoded with URL-safe Base64"""		66315	0					
ANR	66446	Argument	key_len		66315	1					
ANR	66447	Identifier	key_len		66315	0					
ANR	66448	ExpressionStatement	"LOGE ( ""Generating a new random key: %s"" , out_key )"	367:4:10024:10072	66315	11	True				
ANR	66449	CallExpression	"LOGE ( ""Generating a new random key: %s"" , out_key )"		66315	0					
ANR	66450	Callee	LOGE		66315	0					
ANR	66451	Identifier	LOGE		66315	0					
ANR	66452	ArgumentList	"""Generating a new random key: %s"""		66315	1					
ANR	66453	Argument	"""Generating a new random key: %s"""		66315	0					
ANR	66454	PrimaryExpression	"""Generating a new random key: %s"""		66315	0					
ANR	66455	Argument	out_key		66315	1					
ANR	66456	Identifier	out_key		66315	0					
ANR	66457	ExpressionStatement	"FATAL ( ""Please use the key above or input a valid key"" )"	368:4:10078:10132	66315	12	True				
ANR	66458	CallExpression	"FATAL ( ""Please use the key above or input a valid key"" )"		66315	0					
ANR	66459	Callee	FATAL		66315	0					
ANR	66460	Identifier	FATAL		66315	0					
ANR	66461	ArgumentList	"""Please use the key above or input a valid key"""		66315	1					
ANR	66462	Argument	"""Please use the key above or input a valid key"""		66315	0					
ANR	66463	PrimaryExpression	"""Please use the key above or input a valid key"""		66315	0					
ANR	66464	ReturnStatement	return key_len ;	369:4:10138:10152	66315	13	True				
ANR	66465	Identifier	key_len		66315	0					
ANR	66466	ReturnType	int		66315	1					
ANR	66467	Identifier	crypto_parse_key		66315	2					
ANR	66468	ParameterList	"const char * base64 , uint8_t * key , size_t key_len"		66315	3					
ANR	66469	Parameter	const char * base64	346:17:9360:9377	66315	0	True				
ANR	66470	ParameterType	const char *		66315	0					
ANR	66471	Identifier	base64		66315	1					
ANR	66472	Parameter	uint8_t * key	346:37:9380:9391	66315	1	True				
ANR	66473	ParameterType	uint8_t *		66315	0					
ANR	66474	Identifier	key		66315	1					
ANR	66475	Parameter	size_t key_len	346:51:9394:9407	66315	2	True				
ANR	66476	ParameterType	size_t		66315	0					
ANR	66477	Identifier	key_len		66315	1					
ANR	66478	CFGEntryNode	ENTRY		66315		True				
ANR	66479	CFGExitNode	EXIT		66315		True				
ANR	66480	Symbol	strlen		66315						
ANR	66481	Symbol	base64_len		66315						
ANR	66482	Symbol	base64_decode		66315						
ANR	66483	Symbol	out_key		66315						
ANR	66484	Symbol	base64		66315						
ANR	66485	Symbol	BASE64_SIZE		66315						
ANR	66486	Symbol	key		66315						
ANR	66487	Symbol	out_len		66315						
ANR	66488	Symbol	key_len		66315						
ANR	66489	Symbol	out		66315						
ANR	66490	Function	dump	373:0:10173:10346							
ANR	66491	FunctionDef	"dump (char * tag , char * text , int len)"		66490	0					
ANR	66492	CompoundStatement		375:0:10215:10346	66490	0					
ANR	66493	IdentifierDeclStatement	int i ;	376:4:10221:10226	66490	0	True				
ANR	66494	IdentifierDecl	i		66490	0					
ANR	66495	IdentifierDeclType	int		66490	0					
ANR	66496	Identifier	i		66490	1					
ANR	66497	ExpressionStatement	"printf ( ""%s: "" , tag )"	377:4:10232:10251	66490	1	True				
ANR	66498	CallExpression	"printf ( ""%s: "" , tag )"		66490	0					
ANR	66499	Callee	printf		66490	0					
ANR	66500	Identifier	printf		66490	0					
ANR	66501	ArgumentList	"""%s: """		66490	1					
ANR	66502	Argument	"""%s: """		66490	0					
ANR	66503	PrimaryExpression	"""%s: """		66490	0					
ANR	66504	Argument	tag		66490	1					
ANR	66505	Identifier	tag		66490	0					
ANR	66506	ForStatement	for ( i = 0 ; i < len ; i ++ )		66490	2					
ANR	66507	ForInit	i = 0 ;	378:9:10262:10267	66490	0	True				
ANR	66508	AssignmentExpression	i = 0		66490	0		=			
ANR	66509	Identifier	i		66490	0					
ANR	66510	PrimaryExpression	0		66490	1					
ANR	66511	Condition	i < len	378:16:10269:10275	66490	1	True				
ANR	66512	RelationalExpression	i < len		66490	0		<			
ANR	66513	Identifier	i		66490	0					
ANR	66514	Identifier	len		66490	1					
ANR	66515	PostIncDecOperationExpression	i ++	378:25:10278:10280	66490	2	True				
ANR	66516	Identifier	i		66490	0					
ANR	66517	IncDec	++		66490	1					
ANR	66518	ExpressionStatement	"printf ( ""0x%02x "" , ( uint8_t ) text [ i ] )"	379:8:10291:10326	66490	3	True				
ANR	66519	CallExpression	"printf ( ""0x%02x "" , ( uint8_t ) text [ i ] )"		66490	0					
ANR	66520	Callee	printf		66490	0					
ANR	66521	Identifier	printf		66490	0					
ANR	66522	ArgumentList	"""0x%02x """		66490	1					
ANR	66523	Argument	"""0x%02x """		66490	0					
ANR	66524	PrimaryExpression	"""0x%02x """		66490	0					
ANR	66525	Argument	( uint8_t ) text [ i ]		66490	1					
ANR	66526	CastExpression	( uint8_t ) text [ i ]		66490	0					
ANR	66527	CastTarget	uint8_t		66490	0					
ANR	66528	ArrayIndexing	text [ i ]		66490	1					
ANR	66529	Identifier	text		66490	0					
ANR	66530	Identifier	i		66490	1					
ANR	66531	ExpressionStatement	"printf ( ""\\n"" )"	380:4:10332:10344	66490	3	True				
ANR	66532	CallExpression	"printf ( ""\\n"" )"		66490	0					
ANR	66533	Callee	printf		66490	0					
ANR	66534	Identifier	printf		66490	0					
ANR	66535	ArgumentList	"""\\n"""		66490	1					
ANR	66536	Argument	"""\\n"""		66490	0					
ANR	66537	PrimaryExpression	"""\\n"""		66490	0					
ANR	66538	ReturnType	void		66490	1					
ANR	66539	Identifier	dump		66490	2					
ANR	66540	ParameterList	"char * tag , char * text , int len"		66490	3					
ANR	66541	Parameter	char * tag	374:5:10183:10191	66490	0	True				
ANR	66542	ParameterType	char *		66490	0					
ANR	66543	Identifier	tag		66490	1					
ANR	66544	Parameter	char * text	374:16:10194:10203	66490	1	True				
ANR	66545	ParameterType	char *		66490	0					
ANR	66546	Identifier	text		66490	1					
ANR	66547	Parameter	int len	374:28:10206:10212	66490	2	True				
ANR	66548	ParameterType	int		66490	0					
ANR	66549	Identifier	len		66490	1					
ANR	66550	CFGEntryNode	ENTRY		66490		True				
ANR	66551	CFGExitNode	EXIT		66490		True				
ANR	66552	Symbol	* i		66490						
ANR	66553	Symbol	len		66490						
ANR	66554	Symbol	* text		66490						
ANR	66555	Symbol	i		66490						
ANR	66556	Symbol	tag		66490						
ANR	66557	Symbol	text		66490						
