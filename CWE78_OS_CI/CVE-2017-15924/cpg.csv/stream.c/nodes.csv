command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	131715	File	data/converged/CVE-2017-15924_shadowsocks-libev/stream.c								
ANR	131716	DeclStmt									
ANR	131717	Decl							const char	const char * [ STREAM_CIPHER_NUM ]	supported_stream_ciphers
ANR	131718	DeclStmt									
ANR	131719	Decl							const char	const char * [ STREAM_CIPHER_NUM ]	supported_stream_ciphers_mbedtls
ANR	131720	DeclStmt									
ANR	131721	Decl							const int	const int [ STREAM_CIPHER_NUM ]	supported_stream_ciphers_nonce_size
ANR	131722	DeclStmt									
ANR	131723	Decl							const int	const int [ STREAM_CIPHER_NUM ]	supported_stream_ciphers_key_size
ANR	131724	Function	crypto_stream_xor_ic	154:0:4168:4693							
ANR	131725	FunctionDef	"crypto_stream_xor_ic (uint8_t * c , const uint8_t * m , uint64_t mlen , const uint8_t * n , uint64_t ic , const uint8_t * k , int method)"		131724	0					
ANR	131726	CompoundStatement		158:0:4348:4693	131724	0					
ANR	131727	SwitchStatement	switch ( method )		131724	0					
ANR	131728	Condition	method	159:12:4362:4367	131724	0	True				
ANR	131729	Identifier	method		131724	0					
ANR	131730	CompoundStatement		2:20:21:21	131724	1					
ANR	131731	Label	case SALSA20 :	160:4:4376:4388	131724	0	True				
ANR	131732	Identifier	SALSA20		131724	0					
ANR	131733	ReturnStatement	"return crypto_stream_salsa20_xor_ic ( c , m , mlen , n , ic , k ) ;"	161:8:4398:4455	131724	1	True				
ANR	131734	CallExpression	"crypto_stream_salsa20_xor_ic ( c , m , mlen , n , ic , k )"		131724	0					
ANR	131735	Callee	crypto_stream_salsa20_xor_ic		131724	0					
ANR	131736	Identifier	crypto_stream_salsa20_xor_ic		131724	0					
ANR	131737	ArgumentList	c		131724	1					
ANR	131738	Argument	c		131724	0					
ANR	131739	Identifier	c		131724	0					
ANR	131740	Argument	m		131724	1					
ANR	131741	Identifier	m		131724	0					
ANR	131742	Argument	mlen		131724	2					
ANR	131743	Identifier	mlen		131724	0					
ANR	131744	Argument	n		131724	3					
ANR	131745	Identifier	n		131724	0					
ANR	131746	Argument	ic		131724	4					
ANR	131747	Identifier	ic		131724	0					
ANR	131748	Argument	k		131724	5					
ANR	131749	Identifier	k		131724	0					
ANR	131750	Label	case CHACHA20 :	162:4:4461:4474	131724	2	True				
ANR	131751	Identifier	CHACHA20		131724	0					
ANR	131752	ReturnStatement	"return crypto_stream_chacha20_xor_ic ( c , m , mlen , n , ic , k ) ;"	163:8:4484:4542	131724	3	True				
ANR	131753	CallExpression	"crypto_stream_chacha20_xor_ic ( c , m , mlen , n , ic , k )"		131724	0					
ANR	131754	Callee	crypto_stream_chacha20_xor_ic		131724	0					
ANR	131755	Identifier	crypto_stream_chacha20_xor_ic		131724	0					
ANR	131756	ArgumentList	c		131724	1					
ANR	131757	Argument	c		131724	0					
ANR	131758	Identifier	c		131724	0					
ANR	131759	Argument	m		131724	1					
ANR	131760	Identifier	m		131724	0					
ANR	131761	Argument	mlen		131724	2					
ANR	131762	Identifier	mlen		131724	0					
ANR	131763	Argument	n		131724	3					
ANR	131764	Identifier	n		131724	0					
ANR	131765	Argument	ic		131724	4					
ANR	131766	Identifier	ic		131724	0					
ANR	131767	Argument	k		131724	5					
ANR	131768	Identifier	k		131724	0					
ANR	131769	Label	case CHACHA20IETF :	164:4:4548:4565	131724	4	True				
ANR	131770	Identifier	CHACHA20IETF		131724	0					
ANR	131771	ReturnStatement	"return crypto_stream_chacha20_ietf_xor_ic ( c , m , mlen , n , ( uint32_t ) ic , k ) ;"	165:8:4575:4648	131724	5	True				
ANR	131772	CallExpression	"crypto_stream_chacha20_ietf_xor_ic ( c , m , mlen , n , ( uint32_t ) ic , k )"		131724	0					
ANR	131773	Callee	crypto_stream_chacha20_ietf_xor_ic		131724	0					
ANR	131774	Identifier	crypto_stream_chacha20_ietf_xor_ic		131724	0					
ANR	131775	ArgumentList	c		131724	1					
ANR	131776	Argument	c		131724	0					
ANR	131777	Identifier	c		131724	0					
ANR	131778	Argument	m		131724	1					
ANR	131779	Identifier	m		131724	0					
ANR	131780	Argument	mlen		131724	2					
ANR	131781	Identifier	mlen		131724	0					
ANR	131782	Argument	n		131724	3					
ANR	131783	Identifier	n		131724	0					
ANR	131784	Argument	( uint32_t ) ic		131724	4					
ANR	131785	CastExpression	( uint32_t ) ic		131724	0					
ANR	131786	CastTarget	uint32_t		131724	0					
ANR	131787	Identifier	ic		131724	1					
ANR	131788	Argument	k		131724	5					
ANR	131789	Identifier	k		131724	0					
ANR	131790	ReturnStatement	return 0 ;	168:4:4683:4691	131724	1	True				
ANR	131791	PrimaryExpression	0		131724	0					
ANR	131792	ReturnType	static int		131724	1					
ANR	131793	Identifier	crypto_stream_xor_ic		131724	2					
ANR	131794	ParameterList	"uint8_t * c , const uint8_t * m , uint64_t mlen , const uint8_t * n , uint64_t ic , const uint8_t * k , int method"		131724	3					
ANR	131795	Parameter	uint8_t * c	155:21:4200:4209	131724	0	True				
ANR	131796	ParameterType	uint8_t *		131724	0					
ANR	131797	Identifier	c		131724	1					
ANR	131798	Parameter	const uint8_t * m	155:33:4212:4227	131724	1	True				
ANR	131799	ParameterType	const uint8_t *		131724	0					
ANR	131800	Identifier	m		131724	1					
ANR	131801	Parameter	uint64_t mlen	155:51:4230:4242	131724	2	True				
ANR	131802	ParameterType	uint64_t		131724	0					
ANR	131803	Identifier	mlen		131724	1					
ANR	131804	Parameter	const uint8_t * n	156:21:4266:4281	131724	3	True				
ANR	131805	ParameterType	const uint8_t *		131724	0					
ANR	131806	Identifier	n		131724	1					
ANR	131807	Parameter	uint64_t ic	156:39:4284:4294	131724	4	True				
ANR	131808	ParameterType	uint64_t		131724	0					
ANR	131809	Identifier	ic		131724	1					
ANR	131810	Parameter	const uint8_t * k	156:52:4297:4312	131724	5	True				
ANR	131811	ParameterType	const uint8_t *		131724	0					
ANR	131812	Identifier	k		131724	1					
ANR	131813	Parameter	int method	157:21:4336:4345	131724	6	True				
ANR	131814	ParameterType	int		131724	0					
ANR	131815	Identifier	method		131724	1					
ANR	131816	CFGEntryNode	ENTRY		131724		True				
ANR	131817	CFGExitNode	EXIT		131724		True				
ANR	131818	Symbol	c		131724						
ANR	131819	Symbol	method		131724						
ANR	131820	Symbol	crypto_stream_salsa20_xor_ic		131724						
ANR	131821	Symbol	crypto_stream_chacha20_ietf_xor_ic		131724						
ANR	131822	Symbol	ic		131724						
ANR	131823	Symbol	mlen		131724						
ANR	131824	Symbol	k		131724						
ANR	131825	Symbol	crypto_stream_chacha20_xor_ic		131724						
ANR	131826	Symbol	m		131724						
ANR	131827	Symbol	n		131724						
ANR	131828	Function	cipher_nonce_size	171:0:4696:4828							
ANR	131829	FunctionDef	cipher_nonce_size (const cipher_t * cipher)		131828	0					
ANR	131830	CompoundStatement		173:0:4742:4828	131828	0					
ANR	131831	IfStatement	if ( cipher == NULL )		131828	0					
ANR	131832	Condition	cipher == NULL	174:8:4752:4765	131828	0	True				
ANR	131833	EqualityExpression	cipher == NULL		131828	0		==			
ANR	131834	Identifier	cipher		131828	0					
ANR	131835	Identifier	NULL		131828	1					
ANR	131836	CompoundStatement		2:24:25:25	131828	1					
ANR	131837	ReturnStatement	return 0 ;	175:8:4778:4786	131828	0	True				
ANR	131838	PrimaryExpression	0		131828	0					
ANR	131839	ReturnStatement	return cipher -> info -> iv_size ;	177:4:4798:4826	131828	1	True				
ANR	131840	PtrMemberAccess	cipher -> info -> iv_size		131828	0					
ANR	131841	PtrMemberAccess	cipher -> info		131828	0					
ANR	131842	Identifier	cipher		131828	0					
ANR	131843	Identifier	info		131828	1					
ANR	131844	Identifier	iv_size		131828	1					
ANR	131845	ReturnType	int		131828	1					
ANR	131846	Identifier	cipher_nonce_size		131828	2					
ANR	131847	ParameterList	const cipher_t * cipher		131828	3					
ANR	131848	Parameter	const cipher_t * cipher	172:18:4718:4739	131828	0	True				
ANR	131849	ParameterType	const cipher_t *		131828	0					
ANR	131850	Identifier	cipher		131828	1					
ANR	131851	CFGEntryNode	ENTRY		131828		True				
ANR	131852	CFGExitNode	EXIT		131828		True				
ANR	131853	Symbol	cipher		131828						
ANR	131854	Symbol	cipher -> info -> iv_size		131828						
ANR	131855	Symbol	NULL		131828						
ANR	131856	Symbol	* cipher		131828						
ANR	131857	Symbol	* * cipher		131828						
ANR	131858	Symbol	cipher -> info		131828						
ANR	131859	Symbol	* cipher -> info		131828						
ANR	131860	Function	cipher_key_size	180:0:4831:5450							
ANR	131861	FunctionDef	cipher_key_size (const cipher_t * cipher)		131860	0					
ANR	131862	CompoundStatement		182:0:4875:5450	131860	0					
ANR	131863	IfStatement	if ( cipher == NULL )		131860	0					
ANR	131864	Condition	cipher == NULL	191:8:5277:5290	131860	0	True				
ANR	131865	EqualityExpression	cipher == NULL		131860	0		==			
ANR	131866	Identifier	cipher		131860	0					
ANR	131867	Identifier	NULL		131860	1					
ANR	131868	CompoundStatement		10:24:417:417	131860	1					
ANR	131869	ReturnStatement	return 0 ;	192:8:5303:5311	131860	0	True				
ANR	131870	PrimaryExpression	0		131860	0					
ANR	131871	ReturnStatement	return cipher -> info -> key_bitlen / 8 ;	195:4:5413:5448	131860	1	True				
ANR	131872	MultiplicativeExpression	cipher -> info -> key_bitlen / 8		131860	0		/			
ANR	131873	PtrMemberAccess	cipher -> info -> key_bitlen		131860	0					
ANR	131874	PtrMemberAccess	cipher -> info		131860	0					
ANR	131875	Identifier	cipher		131860	0					
ANR	131876	Identifier	info		131860	1					
ANR	131877	Identifier	key_bitlen		131860	1					
ANR	131878	PrimaryExpression	8		131860	1					
ANR	131879	ReturnType	int		131860	1					
ANR	131880	Identifier	cipher_key_size		131860	2					
ANR	131881	ParameterList	const cipher_t * cipher		131860	3					
ANR	131882	Parameter	const cipher_t * cipher	181:16:4851:4872	131860	0	True				
ANR	131883	ParameterType	const cipher_t *		131860	0					
ANR	131884	Identifier	cipher		131860	1					
ANR	131885	CFGEntryNode	ENTRY		131860		True				
ANR	131886	CFGExitNode	EXIT		131860		True				
ANR	131887	Symbol	cipher		131860						
ANR	131888	Symbol	NULL		131860						
ANR	131889	Symbol	* cipher		131860						
ANR	131890	Symbol	* * cipher		131860						
ANR	131891	Symbol	cipher -> info		131860						
ANR	131892	Symbol	cipher -> info -> key_bitlen		131860						
ANR	131893	Symbol	* cipher -> info		131860						
ANR	131894	Function	stream_get_cipher_type	198:0:5453:6144							
ANR	131895	FunctionDef	stream_get_cipher_type (int method)		131894	0					
ANR	131896	CompoundStatement		200:0:5508:6144	131894	0					
ANR	131897	IfStatement	if ( method <= TABLE || method >= STREAM_CIPHER_NUM )		131894	0					
ANR	131898	Condition	method <= TABLE || method >= STREAM_CIPHER_NUM	201:8:5518:5563	131894	0	True				
ANR	131899	OrExpression	method <= TABLE || method >= STREAM_CIPHER_NUM		131894	0		||			
ANR	131900	RelationalExpression	method <= TABLE		131894	0		<=			
ANR	131901	Identifier	method		131894	0					
ANR	131902	Identifier	TABLE		131894	1					
ANR	131903	RelationalExpression	method >= STREAM_CIPHER_NUM		131894	1		>=			
ANR	131904	Identifier	method		131894	0					
ANR	131905	Identifier	STREAM_CIPHER_NUM		131894	1					
ANR	131906	CompoundStatement		2:56:57:57	131894	1					
ANR	131907	ExpressionStatement	"LOGE ( ""stream_get_cipher_type(): Illegal method"" )"	202:8:5576:5624	131894	0	True				
ANR	131908	CallExpression	"LOGE ( ""stream_get_cipher_type(): Illegal method"" )"		131894	0					
ANR	131909	Callee	LOGE		131894	0					
ANR	131910	Identifier	LOGE		131894	0					
ANR	131911	ArgumentList	"""stream_get_cipher_type(): Illegal method"""		131894	1					
ANR	131912	Argument	"""stream_get_cipher_type(): Illegal method"""		131894	0					
ANR	131913	PrimaryExpression	"""stream_get_cipher_type(): Illegal method"""		131894	0					
ANR	131914	ReturnStatement	return NULL ;	203:8:5634:5645	131894	1	True				
ANR	131915	Identifier	NULL		131894	0					
ANR	131916	IfStatement	if ( method == RC4_MD5 )		131894	1					
ANR	131917	Condition	method == RC4_MD5	206:8:5662:5678	131894	0	True				
ANR	131918	EqualityExpression	method == RC4_MD5		131894	0		==			
ANR	131919	Identifier	method		131894	0					
ANR	131920	Identifier	RC4_MD5		131894	1					
ANR	131921	CompoundStatement		7:27:172:172	131894	1					
ANR	131922	ExpressionStatement	method = RC4	207:8:5691:5703	131894	0	True				
ANR	131923	AssignmentExpression	method = RC4		131894	0		=			
ANR	131924	Identifier	method		131894	0					
ANR	131925	Identifier	RC4		131894	1					
ANR	131926	IfStatement	if ( method >= SALSA20 )		131894	2					
ANR	131927	Condition	method >= SALSA20	210:8:5720:5736	131894	0	True				
ANR	131928	RelationalExpression	method >= SALSA20		131894	0		>=			
ANR	131929	Identifier	method		131894	0					
ANR	131930	Identifier	SALSA20		131894	1					
ANR	131931	CompoundStatement		11:27:230:230	131894	1					
ANR	131932	ReturnStatement	return NULL ;	211:8:5749:5760	131894	0	True				
ANR	131933	Identifier	NULL		131894	0					
ANR	131934	IdentifierDeclStatement	const char * ciphername = supported_stream_ciphers [ method ] ;	214:4:5773:5831	131894	3	True				
ANR	131935	IdentifierDecl	* ciphername = supported_stream_ciphers [ method ]		131894	0					
ANR	131936	IdentifierDeclType	const char *		131894	0					
ANR	131937	Identifier	ciphername		131894	1					
ANR	131938	AssignmentExpression	* ciphername = supported_stream_ciphers [ method ]		131894	2		=			
ANR	131939	Identifier	ciphername		131894	0					
ANR	131940	ArrayIndexing	supported_stream_ciphers [ method ]		131894	1					
ANR	131941	Identifier	supported_stream_ciphers		131894	0					
ANR	131942	Identifier	method		131894	1					
ANR	131943	IdentifierDeclStatement	const char * mbedtlsname = supported_stream_ciphers_mbedtls [ method ] ;	215:4:5837:5903	131894	4	True				
ANR	131944	IdentifierDecl	* mbedtlsname = supported_stream_ciphers_mbedtls [ method ]		131894	0					
ANR	131945	IdentifierDeclType	const char *		131894	0					
ANR	131946	Identifier	mbedtlsname		131894	1					
ANR	131947	AssignmentExpression	* mbedtlsname = supported_stream_ciphers_mbedtls [ method ]		131894	2		=			
ANR	131948	Identifier	mbedtlsname		131894	0					
ANR	131949	ArrayIndexing	supported_stream_ciphers_mbedtls [ method ]		131894	1					
ANR	131950	Identifier	supported_stream_ciphers_mbedtls		131894	0					
ANR	131951	Identifier	method		131894	1					
ANR	131952	IfStatement	"if ( strcmp ( mbedtlsname , CIPHER_UNSUPPORTED ) == 0 )"		131894	5					
ANR	131953	Condition	"strcmp ( mbedtlsname , CIPHER_UNSUPPORTED ) == 0"	216:8:5913:5956	131894	0	True				
ANR	131954	EqualityExpression	"strcmp ( mbedtlsname , CIPHER_UNSUPPORTED ) == 0"		131894	0		==			
ANR	131955	CallExpression	"strcmp ( mbedtlsname , CIPHER_UNSUPPORTED )"		131894	0					
ANR	131956	Callee	strcmp		131894	0					
ANR	131957	Identifier	strcmp		131894	0					
ANR	131958	ArgumentList	mbedtlsname		131894	1					
ANR	131959	Argument	mbedtlsname		131894	0					
ANR	131960	Identifier	mbedtlsname		131894	0					
ANR	131961	Argument	CIPHER_UNSUPPORTED		131894	1					
ANR	131962	Identifier	CIPHER_UNSUPPORTED		131894	0					
ANR	131963	PrimaryExpression	0		131894	1					
ANR	131964	CompoundStatement		17:54:450:450	131894	1					
ANR	131965	ExpressionStatement	"LOGE ( ""Cipher %s currently is not supported by mbed TLS library"" , ciphername )"	217:8:5969:6058	131894	0	True				
ANR	131966	CallExpression	"LOGE ( ""Cipher %s currently is not supported by mbed TLS library"" , ciphername )"		131894	0					
ANR	131967	Callee	LOGE		131894	0					
ANR	131968	Identifier	LOGE		131894	0					
ANR	131969	ArgumentList	"""Cipher %s currently is not supported by mbed TLS library"""		131894	1					
ANR	131970	Argument	"""Cipher %s currently is not supported by mbed TLS library"""		131894	0					
ANR	131971	PrimaryExpression	"""Cipher %s currently is not supported by mbed TLS library"""		131894	0					
ANR	131972	Argument	ciphername		131894	1					
ANR	131973	Identifier	ciphername		131894	0					
ANR	131974	ReturnStatement	return NULL ;	219:8:6068:6079	131894	1	True				
ANR	131975	Identifier	NULL		131894	0					
ANR	131976	ReturnStatement	return mbedtls_cipher_info_from_string ( mbedtlsname ) ;	221:4:6091:6142	131894	6	True				
ANR	131977	CallExpression	mbedtls_cipher_info_from_string ( mbedtlsname )		131894	0					
ANR	131978	Callee	mbedtls_cipher_info_from_string		131894	0					
ANR	131979	Identifier	mbedtls_cipher_info_from_string		131894	0					
ANR	131980	ArgumentList	mbedtlsname		131894	1					
ANR	131981	Argument	mbedtlsname		131894	0					
ANR	131982	Identifier	mbedtlsname		131894	0					
ANR	131983	ReturnType	const cipher_kt_t *		131894	1					
ANR	131984	Identifier	stream_get_cipher_type		131894	2					
ANR	131985	ParameterList	int method		131894	3					
ANR	131986	Parameter	int method	199:23:5496:5505	131894	0	True				
ANR	131987	ParameterType	int		131894	0					
ANR	131988	Identifier	method		131894	1					
ANR	131989	CFGEntryNode	ENTRY		131894		True				
ANR	131990	CFGExitNode	EXIT		131894		True				
ANR	131991	Symbol	* supported_stream_ciphers_mbedtls		131894						
ANR	131992	Symbol	strcmp		131894						
ANR	131993	Symbol	ciphername		131894						
ANR	131994	Symbol	RC4		131894						
ANR	131995	Symbol	NULL		131894						
ANR	131996	Symbol	method		131894						
ANR	131997	Symbol	* method		131894						
ANR	131998	Symbol	supported_stream_ciphers_mbedtls		131894						
ANR	131999	Symbol	STREAM_CIPHER_NUM		131894						
ANR	132000	Symbol	mbedtlsname		131894						
ANR	132001	Symbol	mbedtls_cipher_info_from_string		131894						
ANR	132002	Symbol	* supported_stream_ciphers		131894						
ANR	132003	Symbol	CIPHER_UNSUPPORTED		131894						
ANR	132004	Symbol	SALSA20		131894						
ANR	132005	Symbol	TABLE		131894						
ANR	132006	Symbol	supported_stream_ciphers		131894						
ANR	132007	Symbol	RC4_MD5		131894						
ANR	132008	Function	stream_cipher_ctx_init	224:0:6147:6961							
ANR	132009	FunctionDef	"stream_cipher_ctx_init (cipher_ctx_t * ctx , int method , int enc)"		132008	0					
ANR	132010	CompoundStatement		226:0:6215:6961	132008	0					
ANR	132011	IfStatement	if ( method <= TABLE || method >= STREAM_CIPHER_NUM )		132008	0					
ANR	132012	Condition	method <= TABLE || method >= STREAM_CIPHER_NUM	227:8:6225:6270	132008	0	True				
ANR	132013	OrExpression	method <= TABLE || method >= STREAM_CIPHER_NUM		132008	0		||			
ANR	132014	RelationalExpression	method <= TABLE		132008	0		<=			
ANR	132015	Identifier	method		132008	0					
ANR	132016	Identifier	TABLE		132008	1					
ANR	132017	RelationalExpression	method >= STREAM_CIPHER_NUM		132008	1		>=			
ANR	132018	Identifier	method		132008	0					
ANR	132019	Identifier	STREAM_CIPHER_NUM		132008	1					
ANR	132020	CompoundStatement		2:56:57:57	132008	1					
ANR	132021	ExpressionStatement	"LOGE ( ""stream_ctx_init(): Illegal method"" )"	228:8:6283:6324	132008	0	True				
ANR	132022	CallExpression	"LOGE ( ""stream_ctx_init(): Illegal method"" )"		132008	0					
ANR	132023	Callee	LOGE		132008	0					
ANR	132024	Identifier	LOGE		132008	0					
ANR	132025	ArgumentList	"""stream_ctx_init(): Illegal method"""		132008	1					
ANR	132026	Argument	"""stream_ctx_init(): Illegal method"""		132008	0					
ANR	132027	PrimaryExpression	"""stream_ctx_init(): Illegal method"""		132008	0					
ANR	132028	ReturnStatement	return ;	229:8:6334:6340	132008	1	True				
ANR	132029	IfStatement	if ( method >= SALSA20 )		132008	1					
ANR	132030	Condition	method >= SALSA20	232:8:6357:6373	132008	0	True				
ANR	132031	RelationalExpression	method >= SALSA20		132008	0		>=			
ANR	132032	Identifier	method		132008	0					
ANR	132033	Identifier	SALSA20		132008	1					
ANR	132034	CompoundStatement		7:27:160:160	132008	1					
ANR	132035	ReturnStatement	return ;	233:8:6386:6392	132008	0	True				
ANR	132036	IdentifierDeclStatement	const char * ciphername = supported_stream_ciphers [ method ] ;	236:4:6405:6465	132008	2	True				
ANR	132037	IdentifierDecl	* ciphername = supported_stream_ciphers [ method ]		132008	0					
ANR	132038	IdentifierDeclType	const char *		132008	0					
ANR	132039	Identifier	ciphername		132008	1					
ANR	132040	AssignmentExpression	* ciphername = supported_stream_ciphers [ method ]		132008	2		=			
ANR	132041	Identifier	ciphername		132008	0					
ANR	132042	ArrayIndexing	supported_stream_ciphers [ method ]		132008	1					
ANR	132043	Identifier	supported_stream_ciphers		132008	0					
ANR	132044	Identifier	method		132008	1					
ANR	132045	IdentifierDeclStatement	const cipher_kt_t * cipher = stream_get_cipher_type ( method ) ;	237:4:6471:6529	132008	3	True				
ANR	132046	IdentifierDecl	* cipher = stream_get_cipher_type ( method )		132008	0					
ANR	132047	IdentifierDeclType	const cipher_kt_t *		132008	0					
ANR	132048	Identifier	cipher		132008	1					
ANR	132049	AssignmentExpression	* cipher = stream_get_cipher_type ( method )		132008	2		=			
ANR	132050	Identifier	cipher		132008	0					
ANR	132051	CallExpression	stream_get_cipher_type ( method )		132008	1					
ANR	132052	Callee	stream_get_cipher_type		132008	0					
ANR	132053	Identifier	stream_get_cipher_type		132008	0					
ANR	132054	ArgumentList	method		132008	1					
ANR	132055	Argument	method		132008	0					
ANR	132056	Identifier	method		132008	0					
ANR	132057	ExpressionStatement	ctx -> evp = ss_malloc ( sizeof ( cipher_evp_t ) )	239:4:6536:6578	132008	4	True				
ANR	132058	AssignmentExpression	ctx -> evp = ss_malloc ( sizeof ( cipher_evp_t ) )		132008	0		=			
ANR	132059	PtrMemberAccess	ctx -> evp		132008	0					
ANR	132060	Identifier	ctx		132008	0					
ANR	132061	Identifier	evp		132008	1					
ANR	132062	CallExpression	ss_malloc ( sizeof ( cipher_evp_t ) )		132008	1					
ANR	132063	Callee	ss_malloc		132008	0					
ANR	132064	Identifier	ss_malloc		132008	0					
ANR	132065	ArgumentList	sizeof ( cipher_evp_t )		132008	1					
ANR	132066	Argument	sizeof ( cipher_evp_t )		132008	0					
ANR	132067	SizeofExpression	sizeof ( cipher_evp_t )		132008	0					
ANR	132068	Sizeof	sizeof		132008	0					
ANR	132069	SizeofOperand	cipher_evp_t		132008	1					
ANR	132070	ExpressionStatement	"memset ( ctx -> evp , 0 , sizeof ( cipher_evp_t ) )"	240:4:6584:6625	132008	5	True				
ANR	132071	CallExpression	"memset ( ctx -> evp , 0 , sizeof ( cipher_evp_t ) )"		132008	0					
ANR	132072	Callee	memset		132008	0					
ANR	132073	Identifier	memset		132008	0					
ANR	132074	ArgumentList	ctx -> evp		132008	1					
ANR	132075	Argument	ctx -> evp		132008	0					
ANR	132076	PtrMemberAccess	ctx -> evp		132008	0					
ANR	132077	Identifier	ctx		132008	0					
ANR	132078	Identifier	evp		132008	1					
ANR	132079	Argument	0		132008	1					
ANR	132080	PrimaryExpression	0		132008	0					
ANR	132081	Argument	sizeof ( cipher_evp_t )		132008	2					
ANR	132082	SizeofExpression	sizeof ( cipher_evp_t )		132008	0					
ANR	132083	Sizeof	sizeof		132008	0					
ANR	132084	SizeofOperand	cipher_evp_t		132008	1					
ANR	132085	IdentifierDeclStatement	cipher_evp_t * evp = ctx -> evp ;	241:4:6631:6659	132008	6	True				
ANR	132086	IdentifierDecl	* evp = ctx -> evp		132008	0					
ANR	132087	IdentifierDeclType	cipher_evp_t *		132008	0					
ANR	132088	Identifier	evp		132008	1					
ANR	132089	AssignmentExpression	* evp = ctx -> evp		132008	2		=			
ANR	132090	Identifier	evp		132008	0					
ANR	132091	PtrMemberAccess	ctx -> evp		132008	1					
ANR	132092	Identifier	ctx		132008	0					
ANR	132093	Identifier	evp		132008	1					
ANR	132094	IfStatement	if ( cipher == NULL )		132008	7					
ANR	132095	Condition	cipher == NULL	243:8:6670:6683	132008	0	True				
ANR	132096	EqualityExpression	cipher == NULL		132008	0		==			
ANR	132097	Identifier	cipher		132008	0					
ANR	132098	Identifier	NULL		132008	1					
ANR	132099	CompoundStatement		18:24:470:470	132008	1					
ANR	132100	ExpressionStatement	"LOGE ( ""Cipher %s not found in mbed TLS library"" , ciphername )"	244:8:6696:6755	132008	0	True				
ANR	132101	CallExpression	"LOGE ( ""Cipher %s not found in mbed TLS library"" , ciphername )"		132008	0					
ANR	132102	Callee	LOGE		132008	0					
ANR	132103	Identifier	LOGE		132008	0					
ANR	132104	ArgumentList	"""Cipher %s not found in mbed TLS library"""		132008	1					
ANR	132105	Argument	"""Cipher %s not found in mbed TLS library"""		132008	0					
ANR	132106	PrimaryExpression	"""Cipher %s not found in mbed TLS library"""		132008	0					
ANR	132107	Argument	ciphername		132008	1					
ANR	132108	Identifier	ciphername		132008	0					
ANR	132109	ExpressionStatement	"FATAL ( ""Cannot initialize mbed TLS cipher"" )"	245:8:6765:6807	132008	1	True				
ANR	132110	CallExpression	"FATAL ( ""Cannot initialize mbed TLS cipher"" )"		132008	0					
ANR	132111	Callee	FATAL		132008	0					
ANR	132112	Identifier	FATAL		132008	0					
ANR	132113	ArgumentList	"""Cannot initialize mbed TLS cipher"""		132008	1					
ANR	132114	Argument	"""Cannot initialize mbed TLS cipher"""		132008	0					
ANR	132115	PrimaryExpression	"""Cannot initialize mbed TLS cipher"""		132008	0					
ANR	132116	ExpressionStatement	mbedtls_cipher_init ( evp )	247:4:6819:6843	132008	8	True				
ANR	132117	CallExpression	mbedtls_cipher_init ( evp )		132008	0					
ANR	132118	Callee	mbedtls_cipher_init		132008	0					
ANR	132119	Identifier	mbedtls_cipher_init		132008	0					
ANR	132120	ArgumentList	evp		132008	1					
ANR	132121	Argument	evp		132008	0					
ANR	132122	Identifier	evp		132008	0					
ANR	132123	IfStatement	"if ( mbedtls_cipher_setup ( evp , cipher ) != 0 )"		132008	9					
ANR	132124	Condition	"mbedtls_cipher_setup ( evp , cipher ) != 0"	248:8:6853:6890	132008	0	True				
ANR	132125	EqualityExpression	"mbedtls_cipher_setup ( evp , cipher ) != 0"		132008	0		!=			
ANR	132126	CallExpression	"mbedtls_cipher_setup ( evp , cipher )"		132008	0					
ANR	132127	Callee	mbedtls_cipher_setup		132008	0					
ANR	132128	Identifier	mbedtls_cipher_setup		132008	0					
ANR	132129	ArgumentList	evp		132008	1					
ANR	132130	Argument	evp		132008	0					
ANR	132131	Identifier	evp		132008	0					
ANR	132132	Argument	cipher		132008	1					
ANR	132133	Identifier	cipher		132008	0					
ANR	132134	PrimaryExpression	0		132008	1					
ANR	132135	CompoundStatement		23:48:677:677	132008	1					
ANR	132136	ExpressionStatement	"FATAL ( ""Cannot initialize mbed TLS cipher context"" )"	249:8:6903:6953	132008	0	True				
ANR	132137	CallExpression	"FATAL ( ""Cannot initialize mbed TLS cipher context"" )"		132008	0					
ANR	132138	Callee	FATAL		132008	0					
ANR	132139	Identifier	FATAL		132008	0					
ANR	132140	ArgumentList	"""Cannot initialize mbed TLS cipher context"""		132008	1					
ANR	132141	Argument	"""Cannot initialize mbed TLS cipher context"""		132008	0					
ANR	132142	PrimaryExpression	"""Cannot initialize mbed TLS cipher context"""		132008	0					
ANR	132143	ReturnType	void		132008	1					
ANR	132144	Identifier	stream_cipher_ctx_init		132008	2					
ANR	132145	ParameterList	"cipher_ctx_t * ctx , int method , int enc"		132008	3					
ANR	132146	Parameter	cipher_ctx_t * ctx	225:23:6175:6191	132008	0	True				
ANR	132147	ParameterType	cipher_ctx_t *		132008	0					
ANR	132148	Identifier	ctx		132008	1					
ANR	132149	Parameter	int method	225:42:6194:6203	132008	1	True				
ANR	132150	ParameterType	int		132008	0					
ANR	132151	Identifier	method		132008	1					
ANR	132152	Parameter	int enc	225:54:6206:6212	132008	2	True				
ANR	132153	ParameterType	int		132008	0					
ANR	132154	Identifier	enc		132008	1					
ANR	132155	CFGEntryNode	ENTRY		132008		True				
ANR	132156	CFGExitNode	EXIT		132008		True				
ANR	132157	Symbol	cipher		132008						
ANR	132158	Symbol	mbedtls_cipher_setup		132008						
ANR	132159	Symbol	ciphername		132008						
ANR	132160	Symbol	stream_get_cipher_type		132008						
ANR	132161	Symbol	NULL		132008						
ANR	132162	Symbol	method		132008						
ANR	132163	Symbol	ctx		132008						
ANR	132164	Symbol	ctx -> evp		132008						
ANR	132165	Symbol	* method		132008						
ANR	132166	Symbol	STREAM_CIPHER_NUM		132008						
ANR	132167	Symbol	* supported_stream_ciphers		132008						
ANR	132168	Symbol	* ctx		132008						
ANR	132169	Symbol	SALSA20		132008						
ANR	132170	Symbol	TABLE		132008						
ANR	132171	Symbol	supported_stream_ciphers		132008						
ANR	132172	Symbol	ss_malloc		132008						
ANR	132173	Symbol	enc		132008						
ANR	132174	Symbol	evp		132008						
ANR	132175	Function	stream_ctx_release	253:0:6964:7308							
ANR	132176	FunctionDef	stream_ctx_release (cipher_ctx_t * cipher_ctx)		132175	0					
ANR	132177	CompoundStatement		255:0:7014:7308	132175	0					
ANR	132178	IfStatement	if ( cipher_ctx -> chunk != NULL )		132175	0					
ANR	132179	Condition	cipher_ctx -> chunk != NULL	256:8:7024:7048	132175	0	True				
ANR	132180	EqualityExpression	cipher_ctx -> chunk != NULL		132175	0		!=			
ANR	132181	PtrMemberAccess	cipher_ctx -> chunk		132175	0					
ANR	132182	Identifier	cipher_ctx		132175	0					
ANR	132183	Identifier	chunk		132175	1					
ANR	132184	Identifier	NULL		132175	1					
ANR	132185	CompoundStatement		2:35:36:36	132175	1					
ANR	132186	ExpressionStatement	bfree ( cipher_ctx -> chunk )	257:8:7061:7085	132175	0	True				
ANR	132187	CallExpression	bfree ( cipher_ctx -> chunk )		132175	0					
ANR	132188	Callee	bfree		132175	0					
ANR	132189	Identifier	bfree		132175	0					
ANR	132190	ArgumentList	cipher_ctx -> chunk		132175	1					
ANR	132191	Argument	cipher_ctx -> chunk		132175	0					
ANR	132192	PtrMemberAccess	cipher_ctx -> chunk		132175	0					
ANR	132193	Identifier	cipher_ctx		132175	0					
ANR	132194	Identifier	chunk		132175	1					
ANR	132195	ExpressionStatement	ss_free ( cipher_ctx -> chunk )	258:8:7095:7121	132175	1	True				
ANR	132196	CallExpression	ss_free ( cipher_ctx -> chunk )		132175	0					
ANR	132197	Callee	ss_free		132175	0					
ANR	132198	Identifier	ss_free		132175	0					
ANR	132199	ArgumentList	cipher_ctx -> chunk		132175	1					
ANR	132200	Argument	cipher_ctx -> chunk		132175	0					
ANR	132201	PtrMemberAccess	cipher_ctx -> chunk		132175	0					
ANR	132202	Identifier	cipher_ctx		132175	0					
ANR	132203	Identifier	chunk		132175	1					
ANR	132204	ExpressionStatement	cipher_ctx -> chunk = NULL	259:8:7131:7155	132175	2	True				
ANR	132205	AssignmentExpression	cipher_ctx -> chunk = NULL		132175	0		=			
ANR	132206	PtrMemberAccess	cipher_ctx -> chunk		132175	0					
ANR	132207	Identifier	cipher_ctx		132175	0					
ANR	132208	Identifier	chunk		132175	1					
ANR	132209	Identifier	NULL		132175	1					
ANR	132210	IfStatement	if ( cipher_ctx -> cipher -> method >= SALSA20 )		132175	1					
ANR	132211	Condition	cipher_ctx -> cipher -> method >= SALSA20	262:8:7172:7208	132175	0	True				
ANR	132212	RelationalExpression	cipher_ctx -> cipher -> method >= SALSA20		132175	0		>=			
ANR	132213	PtrMemberAccess	cipher_ctx -> cipher -> method		132175	0					
ANR	132214	PtrMemberAccess	cipher_ctx -> cipher		132175	0					
ANR	132215	Identifier	cipher_ctx		132175	0					
ANR	132216	Identifier	cipher		132175	1					
ANR	132217	Identifier	method		132175	1					
ANR	132218	Identifier	SALSA20		132175	1					
ANR	132219	CompoundStatement		8:47:196:196	132175	1					
ANR	132220	ReturnStatement	return ;	263:8:7221:7227	132175	0	True				
ANR	132221	ExpressionStatement	mbedtls_cipher_free ( cipher_ctx -> evp )	266:4:7240:7276	132175	2	True				
ANR	132222	CallExpression	mbedtls_cipher_free ( cipher_ctx -> evp )		132175	0					
ANR	132223	Callee	mbedtls_cipher_free		132175	0					
ANR	132224	Identifier	mbedtls_cipher_free		132175	0					
ANR	132225	ArgumentList	cipher_ctx -> evp		132175	1					
ANR	132226	Argument	cipher_ctx -> evp		132175	0					
ANR	132227	PtrMemberAccess	cipher_ctx -> evp		132175	0					
ANR	132228	Identifier	cipher_ctx		132175	0					
ANR	132229	Identifier	evp		132175	1					
ANR	132230	ExpressionStatement	ss_free ( cipher_ctx -> evp )	267:4:7282:7306	132175	3	True				
ANR	132231	CallExpression	ss_free ( cipher_ctx -> evp )		132175	0					
ANR	132232	Callee	ss_free		132175	0					
ANR	132233	Identifier	ss_free		132175	0					
ANR	132234	ArgumentList	cipher_ctx -> evp		132175	1					
ANR	132235	Argument	cipher_ctx -> evp		132175	0					
ANR	132236	PtrMemberAccess	cipher_ctx -> evp		132175	0					
ANR	132237	Identifier	cipher_ctx		132175	0					
ANR	132238	Identifier	evp		132175	1					
ANR	132239	ReturnType	void		132175	1					
ANR	132240	Identifier	stream_ctx_release		132175	2					
ANR	132241	ParameterList	cipher_ctx_t * cipher_ctx		132175	3					
ANR	132242	Parameter	cipher_ctx_t * cipher_ctx	254:19:6988:7011	132175	0	True				
ANR	132243	ParameterType	cipher_ctx_t *		132175	0					
ANR	132244	Identifier	cipher_ctx		132175	1					
ANR	132245	CFGEntryNode	ENTRY		132175		True				
ANR	132246	CFGExitNode	EXIT		132175		True				
ANR	132247	Symbol	* * cipher_ctx		132175						
ANR	132248	Symbol	cipher_ctx -> cipher -> method		132175						
ANR	132249	Symbol	cipher_ctx -> cipher		132175						
ANR	132250	Symbol	cipher_ctx		132175						
ANR	132251	Symbol	NULL		132175						
ANR	132252	Symbol	* cipher_ctx		132175						
ANR	132253	Symbol	cipher_ctx -> evp		132175						
ANR	132254	Symbol	cipher_ctx -> chunk		132175						
ANR	132255	Symbol	* cipher_ctx -> cipher		132175						
ANR	132256	Symbol	SALSA20		132175						
ANR	132257	Function	cipher_ctx_set_nonce	270:0:7311:8679							
ANR	132258	FunctionDef	"cipher_ctx_set_nonce (cipher_ctx_t * cipher_ctx , uint8_t * nonce , size_t nonce_len , int enc)"		132257	0					
ANR	132259	CompoundStatement		273:0:7427:8679	132257	0					
ANR	132260	IdentifierDeclStatement	const unsigned char * true_key ;	274:4:7433:7462	132257	0	True				
ANR	132261	IdentifierDecl	* true_key		132257	0					
ANR	132262	IdentifierDeclType	const unsigned char *		132257	0					
ANR	132263	Identifier	true_key		132257	1					
ANR	132264	IdentifierDeclStatement	cipher_t * cipher = cipher_ctx -> cipher ;	276:4:7469:7506	132257	1	True				
ANR	132265	IdentifierDecl	* cipher = cipher_ctx -> cipher		132257	0					
ANR	132266	IdentifierDeclType	cipher_t *		132257	0					
ANR	132267	Identifier	cipher		132257	1					
ANR	132268	AssignmentExpression	* cipher = cipher_ctx -> cipher		132257	2		=			
ANR	132269	Identifier	cipher		132257	0					
ANR	132270	PtrMemberAccess	cipher_ctx -> cipher		132257	1					
ANR	132271	Identifier	cipher_ctx		132257	0					
ANR	132272	Identifier	cipher		132257	1					
ANR	132273	IfStatement	if ( nonce == NULL )		132257	2					
ANR	132274	Condition	nonce == NULL	278:8:7517:7529	132257	0	True				
ANR	132275	EqualityExpression	nonce == NULL		132257	0		==			
ANR	132276	Identifier	nonce		132257	0					
ANR	132277	Identifier	NULL		132257	1					
ANR	132278	CompoundStatement		6:23:104:104	132257	1					
ANR	132279	ExpressionStatement	"LOGE ( ""cipher_ctx_set_nonce(): NONCE is null"" )"	279:8:7542:7587	132257	0	True				
ANR	132280	CallExpression	"LOGE ( ""cipher_ctx_set_nonce(): NONCE is null"" )"		132257	0					
ANR	132281	Callee	LOGE		132257	0					
ANR	132282	Identifier	LOGE		132257	0					
ANR	132283	ArgumentList	"""cipher_ctx_set_nonce(): NONCE is null"""		132257	1					
ANR	132284	Argument	"""cipher_ctx_set_nonce(): NONCE is null"""		132257	0					
ANR	132285	PrimaryExpression	"""cipher_ctx_set_nonce(): NONCE is null"""		132257	0					
ANR	132286	ReturnStatement	return ;	280:8:7597:7603	132257	1	True				
ANR	132287	IfStatement	if ( cipher -> method >= SALSA20 )		132257	3					
ANR	132288	Condition	cipher -> method >= SALSA20	283:8:7620:7644	132257	0	True				
ANR	132289	RelationalExpression	cipher -> method >= SALSA20		132257	0		>=			
ANR	132290	PtrMemberAccess	cipher -> method		132257	0					
ANR	132291	Identifier	cipher		132257	0					
ANR	132292	Identifier	method		132257	1					
ANR	132293	Identifier	SALSA20		132257	1					
ANR	132294	CompoundStatement		11:35:219:219	132257	1					
ANR	132295	ReturnStatement	return ;	284:8:7657:7663	132257	0	True				
ANR	132296	IfStatement	if ( cipher -> method == RC4_MD5 )		132257	4					
ANR	132297	Condition	cipher -> method == RC4_MD5	287:8:7680:7704	132257	0	True				
ANR	132298	EqualityExpression	cipher -> method == RC4_MD5		132257	0		==			
ANR	132299	PtrMemberAccess	cipher -> method		132257	0					
ANR	132300	Identifier	cipher		132257	0					
ANR	132301	Identifier	method		132257	1					
ANR	132302	Identifier	RC4_MD5		132257	1					
ANR	132303	CompoundStatement		16:8:289:316	132257	1					
ANR	132304	IdentifierDeclStatement	unsigned char key_nonce [ 32 ] ;	288:8:7717:7744	132257	0	True				
ANR	132305	IdentifierDecl	key_nonce [ 32 ]		132257	0					
ANR	132306	IdentifierDeclType	unsigned char [ 32 ]		132257	0					
ANR	132307	Identifier	key_nonce		132257	1					
ANR	132308	PrimaryExpression	32		132257	2					
ANR	132309	ExpressionStatement	"memcpy ( key_nonce , cipher -> key , 16 )"	289:8:7754:7788	132257	1	True				
ANR	132310	CallExpression	"memcpy ( key_nonce , cipher -> key , 16 )"		132257	0					
ANR	132311	Callee	memcpy		132257	0					
ANR	132312	Identifier	memcpy		132257	0					
ANR	132313	ArgumentList	key_nonce		132257	1					
ANR	132314	Argument	key_nonce		132257	0					
ANR	132315	Identifier	key_nonce		132257	0					
ANR	132316	Argument	cipher -> key		132257	1					
ANR	132317	PtrMemberAccess	cipher -> key		132257	0					
ANR	132318	Identifier	cipher		132257	0					
ANR	132319	Identifier	key		132257	1					
ANR	132320	Argument	16		132257	2					
ANR	132321	PrimaryExpression	16		132257	0					
ANR	132322	ExpressionStatement	"memcpy ( key_nonce + 16 , nonce , 16 )"	290:8:7798:7831	132257	2	True				
ANR	132323	CallExpression	"memcpy ( key_nonce + 16 , nonce , 16 )"		132257	0					
ANR	132324	Callee	memcpy		132257	0					
ANR	132325	Identifier	memcpy		132257	0					
ANR	132326	ArgumentList	key_nonce + 16		132257	1					
ANR	132327	Argument	key_nonce + 16		132257	0					
ANR	132328	AdditiveExpression	key_nonce + 16		132257	0		+			
ANR	132329	Identifier	key_nonce		132257	0					
ANR	132330	PrimaryExpression	16		132257	1					
ANR	132331	Argument	nonce		132257	1					
ANR	132332	Identifier	nonce		132257	0					
ANR	132333	Argument	16		132257	2					
ANR	132334	PrimaryExpression	16		132257	0					
ANR	132335	ExpressionStatement	"true_key = crypto_md5 ( key_nonce , 32 , NULL )"	291:8:7841:7884	132257	3	True				
ANR	132336	AssignmentExpression	"true_key = crypto_md5 ( key_nonce , 32 , NULL )"		132257	0		=			
ANR	132337	Identifier	true_key		132257	0					
ANR	132338	CallExpression	"crypto_md5 ( key_nonce , 32 , NULL )"		132257	1					
ANR	132339	Callee	crypto_md5		132257	0					
ANR	132340	Identifier	crypto_md5		132257	0					
ANR	132341	ArgumentList	key_nonce		132257	1					
ANR	132342	Argument	key_nonce		132257	0					
ANR	132343	Identifier	key_nonce		132257	0					
ANR	132344	Argument	32		132257	1					
ANR	132345	PrimaryExpression	32		132257	0					
ANR	132346	Argument	NULL		132257	2					
ANR	132347	Identifier	NULL		132257	0					
ANR	132348	ExpressionStatement	nonce_len = 0	292:8:7894:7907	132257	4	True				
ANR	132349	AssignmentExpression	nonce_len = 0		132257	0		=			
ANR	132350	Identifier	nonce_len		132257	0					
ANR	132351	PrimaryExpression	0		132257	1					
ANR	132352	ElseStatement	else		132257	0					
ANR	132353	CompoundStatement		21:11:492:492	132257	0					
ANR	132354	ExpressionStatement	true_key = cipher -> key	294:8:7930:7952	132257	0	True				
ANR	132355	AssignmentExpression	true_key = cipher -> key		132257	0		=			
ANR	132356	Identifier	true_key		132257	0					
ANR	132357	PtrMemberAccess	cipher -> key		132257	1					
ANR	132358	Identifier	cipher		132257	0					
ANR	132359	Identifier	key		132257	1					
ANR	132360	IdentifierDeclStatement	cipher_evp_t * evp = cipher_ctx -> evp ;	297:4:7965:8000	132257	5	True				
ANR	132361	IdentifierDecl	* evp = cipher_ctx -> evp		132257	0					
ANR	132362	IdentifierDeclType	cipher_evp_t *		132257	0					
ANR	132363	Identifier	evp		132257	1					
ANR	132364	AssignmentExpression	* evp = cipher_ctx -> evp		132257	2		=			
ANR	132365	Identifier	evp		132257	0					
ANR	132366	PtrMemberAccess	cipher_ctx -> evp		132257	1					
ANR	132367	Identifier	cipher_ctx		132257	0					
ANR	132368	Identifier	evp		132257	1					
ANR	132369	IfStatement	if ( evp == NULL )		132257	6					
ANR	132370	Condition	evp == NULL	298:8:8010:8020	132257	0	True				
ANR	132371	EqualityExpression	evp == NULL		132257	0		==			
ANR	132372	Identifier	evp		132257	0					
ANR	132373	Identifier	NULL		132257	1					
ANR	132374	CompoundStatement		26:21:595:595	132257	1					
ANR	132375	ExpressionStatement	"LOGE ( ""cipher_ctx_set_nonce(): Cipher context is null"" )"	299:8:8033:8087	132257	0	True				
ANR	132376	CallExpression	"LOGE ( ""cipher_ctx_set_nonce(): Cipher context is null"" )"		132257	0					
ANR	132377	Callee	LOGE		132257	0					
ANR	132378	Identifier	LOGE		132257	0					
ANR	132379	ArgumentList	"""cipher_ctx_set_nonce(): Cipher context is null"""		132257	1					
ANR	132380	Argument	"""cipher_ctx_set_nonce(): Cipher context is null"""		132257	0					
ANR	132381	PrimaryExpression	"""cipher_ctx_set_nonce(): Cipher context is null"""		132257	0					
ANR	132382	ReturnStatement	return ;	300:8:8097:8103	132257	1	True				
ANR	132383	IfStatement	"if ( mbedtls_cipher_setkey ( evp , true_key , cipher -> key_len * 8 , enc ) != 0 )"		132257	7					
ANR	132384	Condition	"mbedtls_cipher_setkey ( evp , true_key , cipher -> key_len * 8 , enc ) != 0"	302:8:8119:8185	132257	0	True				
ANR	132385	EqualityExpression	"mbedtls_cipher_setkey ( evp , true_key , cipher -> key_len * 8 , enc ) != 0"		132257	0		!=			
ANR	132386	CallExpression	"mbedtls_cipher_setkey ( evp , true_key , cipher -> key_len * 8 , enc )"		132257	0					
ANR	132387	Callee	mbedtls_cipher_setkey		132257	0					
ANR	132388	Identifier	mbedtls_cipher_setkey		132257	0					
ANR	132389	ArgumentList	evp		132257	1					
ANR	132390	Argument	evp		132257	0					
ANR	132391	Identifier	evp		132257	0					
ANR	132392	Argument	true_key		132257	1					
ANR	132393	Identifier	true_key		132257	0					
ANR	132394	Argument	cipher -> key_len * 8		132257	2					
ANR	132395	MultiplicativeExpression	cipher -> key_len * 8		132257	0		*			
ANR	132396	PtrMemberAccess	cipher -> key_len		132257	0					
ANR	132397	Identifier	cipher		132257	0					
ANR	132398	Identifier	key_len		132257	1					
ANR	132399	PrimaryExpression	8		132257	1					
ANR	132400	Argument	enc		132257	3					
ANR	132401	Identifier	enc		132257	0					
ANR	132402	PrimaryExpression	0		132257	1					
ANR	132403	CompoundStatement		30:77:760:760	132257	1					
ANR	132404	ExpressionStatement	mbedtls_cipher_free ( evp )	303:8:8198:8222	132257	0	True				
ANR	132405	CallExpression	mbedtls_cipher_free ( evp )		132257	0					
ANR	132406	Callee	mbedtls_cipher_free		132257	0					
ANR	132407	Identifier	mbedtls_cipher_free		132257	0					
ANR	132408	ArgumentList	evp		132257	1					
ANR	132409	Argument	evp		132257	0					
ANR	132410	Identifier	evp		132257	0					
ANR	132411	ExpressionStatement	"FATAL ( ""Cannot set mbed TLS cipher key"" )"	304:8:8232:8271	132257	1	True				
ANR	132412	CallExpression	"FATAL ( ""Cannot set mbed TLS cipher key"" )"		132257	0					
ANR	132413	Callee	FATAL		132257	0					
ANR	132414	Identifier	FATAL		132257	0					
ANR	132415	ArgumentList	"""Cannot set mbed TLS cipher key"""		132257	1					
ANR	132416	Argument	"""Cannot set mbed TLS cipher key"""		132257	0					
ANR	132417	PrimaryExpression	"""Cannot set mbed TLS cipher key"""		132257	0					
ANR	132418	IfStatement	"if ( mbedtls_cipher_set_iv ( evp , nonce , nonce_len ) != 0 )"		132257	8					
ANR	132419	Condition	"mbedtls_cipher_set_iv ( evp , nonce , nonce_len ) != 0"	306:8:8287:8335	132257	0	True				
ANR	132420	EqualityExpression	"mbedtls_cipher_set_iv ( evp , nonce , nonce_len ) != 0"		132257	0		!=			
ANR	132421	CallExpression	"mbedtls_cipher_set_iv ( evp , nonce , nonce_len )"		132257	0					
ANR	132422	Callee	mbedtls_cipher_set_iv		132257	0					
ANR	132423	Identifier	mbedtls_cipher_set_iv		132257	0					
ANR	132424	ArgumentList	evp		132257	1					
ANR	132425	Argument	evp		132257	0					
ANR	132426	Identifier	evp		132257	0					
ANR	132427	Argument	nonce		132257	1					
ANR	132428	Identifier	nonce		132257	0					
ANR	132429	Argument	nonce_len		132257	2					
ANR	132430	Identifier	nonce_len		132257	0					
ANR	132431	PrimaryExpression	0		132257	1					
ANR	132432	CompoundStatement		34:59:910:910	132257	1					
ANR	132433	ExpressionStatement	mbedtls_cipher_free ( evp )	307:8:8348:8372	132257	0	True				
ANR	132434	CallExpression	mbedtls_cipher_free ( evp )		132257	0					
ANR	132435	Callee	mbedtls_cipher_free		132257	0					
ANR	132436	Identifier	mbedtls_cipher_free		132257	0					
ANR	132437	ArgumentList	evp		132257	1					
ANR	132438	Argument	evp		132257	0					
ANR	132439	Identifier	evp		132257	0					
ANR	132440	ExpressionStatement	"FATAL ( ""Cannot set mbed TLS cipher NONCE"" )"	308:8:8382:8423	132257	1	True				
ANR	132441	CallExpression	"FATAL ( ""Cannot set mbed TLS cipher NONCE"" )"		132257	0					
ANR	132442	Callee	FATAL		132257	0					
ANR	132443	Identifier	FATAL		132257	0					
ANR	132444	ArgumentList	"""Cannot set mbed TLS cipher NONCE"""		132257	1					
ANR	132445	Argument	"""Cannot set mbed TLS cipher NONCE"""		132257	0					
ANR	132446	PrimaryExpression	"""Cannot set mbed TLS cipher NONCE"""		132257	0					
ANR	132447	IfStatement	if ( mbedtls_cipher_reset ( evp ) != 0 )		132257	9					
ANR	132448	Condition	mbedtls_cipher_reset ( evp ) != 0	310:8:8439:8468	132257	0	True				
ANR	132449	EqualityExpression	mbedtls_cipher_reset ( evp ) != 0		132257	0		!=			
ANR	132450	CallExpression	mbedtls_cipher_reset ( evp )		132257	0					
ANR	132451	Callee	mbedtls_cipher_reset		132257	0					
ANR	132452	Identifier	mbedtls_cipher_reset		132257	0					
ANR	132453	ArgumentList	evp		132257	1					
ANR	132454	Argument	evp		132257	0					
ANR	132455	Identifier	evp		132257	0					
ANR	132456	PrimaryExpression	0		132257	1					
ANR	132457	CompoundStatement		38:40:1043:1043	132257	1					
ANR	132458	ExpressionStatement	mbedtls_cipher_free ( evp )	311:8:8481:8505	132257	0	True				
ANR	132459	CallExpression	mbedtls_cipher_free ( evp )		132257	0					
ANR	132460	Callee	mbedtls_cipher_free		132257	0					
ANR	132461	Identifier	mbedtls_cipher_free		132257	0					
ANR	132462	ArgumentList	evp		132257	1					
ANR	132463	Argument	evp		132257	0					
ANR	132464	Identifier	evp		132257	0					
ANR	132465	ExpressionStatement	"FATAL ( ""Cannot finalize mbed TLS cipher context"" )"	312:8:8515:8563	132257	1	True				
ANR	132466	CallExpression	"FATAL ( ""Cannot finalize mbed TLS cipher context"" )"		132257	0					
ANR	132467	Callee	FATAL		132257	0					
ANR	132468	Identifier	FATAL		132257	0					
ANR	132469	ArgumentList	"""Cannot finalize mbed TLS cipher context"""		132257	1					
ANR	132470	Argument	"""Cannot finalize mbed TLS cipher context"""		132257	0					
ANR	132471	PrimaryExpression	"""Cannot finalize mbed TLS cipher context"""		132257	0					
ANR	132472	ExpressionStatement	"dump ( ""NONCE"" , ( char * ) nonce , nonce_len )"	316:4:8592:8631	132257	10	True				
ANR	132473	CallExpression	"dump ( ""NONCE"" , ( char * ) nonce , nonce_len )"		132257	0					
ANR	132474	Callee	dump		132257	0					
ANR	132475	Identifier	dump		132257	0					
ANR	132476	ArgumentList	"""NONCE"""		132257	1					
ANR	132477	Argument	"""NONCE"""		132257	0					
ANR	132478	PrimaryExpression	"""NONCE"""		132257	0					
ANR	132479	Argument	( char * ) nonce		132257	1					
ANR	132480	CastExpression	( char * ) nonce		132257	0					
ANR	132481	CastTarget	char *		132257	0					
ANR	132482	Identifier	nonce		132257	1					
ANR	132483	Argument	nonce_len		132257	2					
ANR	132484	Identifier	nonce_len		132257	0					
ANR	132485	ExpressionStatement	"dump ( ""KEY"" , ( char * ) true_key , 32 )"	317:4:8637:8670	132257	11	True				
ANR	132486	CallExpression	"dump ( ""KEY"" , ( char * ) true_key , 32 )"		132257	0					
ANR	132487	Callee	dump		132257	0					
ANR	132488	Identifier	dump		132257	0					
ANR	132489	ArgumentList	"""KEY"""		132257	1					
ANR	132490	Argument	"""KEY"""		132257	0					
ANR	132491	PrimaryExpression	"""KEY"""		132257	0					
ANR	132492	Argument	( char * ) true_key		132257	1					
ANR	132493	CastExpression	( char * ) true_key		132257	0					
ANR	132494	CastTarget	char *		132257	0					
ANR	132495	Identifier	true_key		132257	1					
ANR	132496	Argument	32		132257	2					
ANR	132497	PrimaryExpression	32		132257	0					
ANR	132498	ReturnType	void		132257	1					
ANR	132499	Identifier	cipher_ctx_set_nonce		132257	2					
ANR	132500	ParameterList	"cipher_ctx_t * cipher_ctx , uint8_t * nonce , size_t nonce_len , int enc"		132257	3					
ANR	132501	Parameter	cipher_ctx_t * cipher_ctx	271:21:7337:7360	132257	0	True				
ANR	132502	ParameterType	cipher_ctx_t *		132257	0					
ANR	132503	Identifier	cipher_ctx		132257	1					
ANR	132504	Parameter	uint8_t * nonce	271:47:7363:7376	132257	1	True				
ANR	132505	ParameterType	uint8_t *		132257	0					
ANR	132506	Identifier	nonce		132257	1					
ANR	132507	Parameter	size_t nonce_len	271:63:7379:7394	132257	2	True				
ANR	132508	ParameterType	size_t		132257	0					
ANR	132509	Identifier	nonce_len		132257	1					
ANR	132510	Parameter	int enc	272:21:7418:7424	132257	3	True				
ANR	132511	ParameterType	int		132257	0					
ANR	132512	Identifier	enc		132257	1					
ANR	132513	CFGEntryNode	ENTRY		132257		True				
ANR	132514	CFGExitNode	EXIT		132257		True				
ANR	132515	Symbol	cipher		132257						
ANR	132516	Symbol	mbedtls_cipher_reset		132257						
ANR	132517	Symbol	cipher_ctx -> cipher		132257						
ANR	132518	Symbol	cipher_ctx		132257						
ANR	132519	Symbol	NULL		132257						
ANR	132520	Symbol	crypto_md5		132257						
ANR	132521	Symbol	* cipher_ctx		132257						
ANR	132522	Symbol	* cipher		132257						
ANR	132523	Symbol	nonce_len		132257						
ANR	132524	Symbol	mbedtls_cipher_set_iv		132257						
ANR	132525	Symbol	nonce		132257						
ANR	132526	Symbol	key_nonce		132257						
ANR	132527	Symbol	SALSA20		132257						
ANR	132528	Symbol	mbedtls_cipher_setkey		132257						
ANR	132529	Symbol	cipher_ctx -> evp		132257						
ANR	132530	Symbol	cipher -> key_len		132257						
ANR	132531	Symbol	cipher -> method		132257						
ANR	132532	Symbol	cipher -> key		132257						
ANR	132533	Symbol	enc		132257						
ANR	132534	Symbol	RC4_MD5		132257						
ANR	132535	Symbol	evp		132257						
ANR	132536	Symbol	true_key		132257						
ANR	132537	Function	cipher_ctx_update	321:0:8682:8977							
ANR	132538	FunctionDef	"cipher_ctx_update (cipher_ctx_t * ctx , uint8_t * output , size_t * olen , const uint8_t * input , size_t ilen)"		132537	0					
ANR	132539	CompoundStatement		324:0:8814:8977	132537	0					
ANR	132540	IdentifierDeclStatement	cipher_evp_t * evp = ctx -> evp ;	325:4:8820:8848	132537	0	True				
ANR	132541	IdentifierDecl	* evp = ctx -> evp		132537	0					
ANR	132542	IdentifierDeclType	cipher_evp_t *		132537	0					
ANR	132543	Identifier	evp		132537	1					
ANR	132544	AssignmentExpression	* evp = ctx -> evp		132537	2		=			
ANR	132545	Identifier	evp		132537	0					
ANR	132546	PtrMemberAccess	ctx -> evp		132537	1					
ANR	132547	Identifier	ctx		132537	0					
ANR	132548	Identifier	evp		132537	1					
ANR	132549	ReturnStatement	"return mbedtls_cipher_update ( evp , ( const uint8_t * ) input , ilen , ( uint8_t * ) output , olen ) ;"	326:4:8854:8975	132537	1	True				
ANR	132550	CallExpression	"mbedtls_cipher_update ( evp , ( const uint8_t * ) input , ilen , ( uint8_t * ) output , olen )"		132537	0					
ANR	132551	Callee	mbedtls_cipher_update		132537	0					
ANR	132552	Identifier	mbedtls_cipher_update		132537	0					
ANR	132553	ArgumentList	evp		132537	1					
ANR	132554	Argument	evp		132537	0					
ANR	132555	Identifier	evp		132537	0					
ANR	132556	Argument	( const uint8_t * ) input		132537	1					
ANR	132557	CastExpression	( const uint8_t * ) input		132537	0					
ANR	132558	CastTarget	const uint8_t *		132537	0					
ANR	132559	Identifier	input		132537	1					
ANR	132560	Argument	ilen		132537	2					
ANR	132561	Identifier	ilen		132537	0					
ANR	132562	Argument	( uint8_t * ) output		132537	3					
ANR	132563	CastExpression	( uint8_t * ) output		132537	0					
ANR	132564	CastTarget	uint8_t *		132537	0					
ANR	132565	Identifier	output		132537	1					
ANR	132566	Argument	olen		132537	4					
ANR	132567	Identifier	olen		132537	0					
ANR	132568	ReturnType	static int		132537	1					
ANR	132569	Identifier	cipher_ctx_update		132537	2					
ANR	132570	ParameterList	"cipher_ctx_t * ctx , uint8_t * output , size_t * olen , const uint8_t * input , size_t ilen"		132537	3					
ANR	132571	Parameter	cipher_ctx_t * ctx	322:18:8711:8727	132537	0	True				
ANR	132572	ParameterType	cipher_ctx_t *		132537	0					
ANR	132573	Identifier	ctx		132537	1					
ANR	132574	Parameter	uint8_t * output	322:37:8730:8744	132537	1	True				
ANR	132575	ParameterType	uint8_t *		132537	0					
ANR	132576	Identifier	output		132537	1					
ANR	132577	Parameter	size_t * olen	322:54:8747:8758	132537	2	True				
ANR	132578	ParameterType	size_t *		132537	0					
ANR	132579	Identifier	olen		132537	1					
ANR	132580	Parameter	const uint8_t * input	323:18:8779:8798	132537	3	True				
ANR	132581	ParameterType	const uint8_t *		132537	0					
ANR	132582	Identifier	input		132537	1					
ANR	132583	Parameter	size_t ilen	323:40:8801:8811	132537	4	True				
ANR	132584	ParameterType	size_t		132537	0					
ANR	132585	Identifier	ilen		132537	1					
ANR	132586	CFGEntryNode	ENTRY		132537		True				
ANR	132587	CFGExitNode	EXIT		132537		True				
ANR	132588	Symbol	output		132537						
ANR	132589	Symbol	input		132537						
ANR	132590	Symbol	olen		132537						
ANR	132591	Symbol	ctx		132537						
ANR	132592	Symbol	ctx -> evp		132537						
ANR	132593	Symbol	mbedtls_cipher_update		132537						
ANR	132594	Symbol	ilen		132537						
ANR	132595	Symbol	evp		132537						
ANR	132596	Symbol	* ctx		132537						
ANR	132597	Function	stream_encrypt_all	330:0:8980:10577							
ANR	132598	FunctionDef	"stream_encrypt_all (buffer_t * plaintext , cipher_t * cipher , size_t capacity)"		132597	0					
ANR	132599	CompoundStatement		332:0:9059:10577	132597	0					
ANR	132600	IdentifierDeclStatement	cipher_ctx_t cipher_ctx ;	333:4:9065:9088	132597	0	True				
ANR	132601	IdentifierDecl	cipher_ctx		132597	0					
ANR	132602	IdentifierDeclType	cipher_ctx_t		132597	0					
ANR	132603	Identifier	cipher_ctx		132597	1					
ANR	132604	ExpressionStatement	"stream_ctx_init ( cipher , & cipher_ctx , 1 )"	334:4:9094:9133	132597	1	True				
ANR	132605	CallExpression	"stream_ctx_init ( cipher , & cipher_ctx , 1 )"		132597	0					
ANR	132606	Callee	stream_ctx_init		132597	0					
ANR	132607	Identifier	stream_ctx_init		132597	0					
ANR	132608	ArgumentList	cipher		132597	1					
ANR	132609	Argument	cipher		132597	0					
ANR	132610	Identifier	cipher		132597	0					
ANR	132611	Argument	& cipher_ctx		132597	1					
ANR	132612	UnaryOperationExpression	& cipher_ctx		132597	0					
ANR	132613	UnaryOperator	&		132597	0					
ANR	132614	Identifier	cipher_ctx		132597	1					
ANR	132615	Argument	1		132597	2					
ANR	132616	PrimaryExpression	1		132597	0					
ANR	132617	IdentifierDeclStatement	size_t nonce_len = cipher -> nonce_len ;	336:4:9140:9176	132597	2	True				
ANR	132618	IdentifierDecl	nonce_len = cipher -> nonce_len		132597	0					
ANR	132619	IdentifierDeclType	size_t		132597	0					
ANR	132620	Identifier	nonce_len		132597	1					
ANR	132621	AssignmentExpression	nonce_len = cipher -> nonce_len		132597	2		=			
ANR	132622	Identifier	nonce_len		132597	0					
ANR	132623	PtrMemberAccess	cipher -> nonce_len		132597	1					
ANR	132624	Identifier	cipher		132597	0					
ANR	132625	Identifier	nonce_len		132597	1					
ANR	132626	IdentifierDeclStatement	int err = CRYPTO_OK ;	337:4:9182:9210	132597	3	True				
ANR	132627	IdentifierDecl	err = CRYPTO_OK		132597	0					
ANR	132628	IdentifierDeclType	int		132597	0					
ANR	132629	Identifier	err		132597	1					
ANR	132630	AssignmentExpression	err = CRYPTO_OK		132597	2		=			
ANR	132631	Identifier	CRYPTO_OK		132597	0					
ANR	132632	Identifier	CRYPTO_OK		132597	1					
ANR	132633	Statement	static	339:4:9217:9222	132597	4	True				
ANR	132634	IdentifierDeclStatement	"buffer_t tmp = { 0 , 0 , 0 , NULL } ;"	339:11:9224:9256	132597	5	True				
ANR	132635	IdentifierDecl	"tmp = { 0 , 0 , 0 , NULL }"		132597	0					
ANR	132636	IdentifierDeclType	buffer_t		132597	0					
ANR	132637	Identifier	tmp		132597	1					
ANR	132638	AssignmentExpression	"tmp = { 0 , 0 , 0 , NULL }"		132597	2		=			
ANR	132639	Identifier	tmp		132597	0					
ANR	132640	InitializerList	0		132597	1					
ANR	132641	PrimaryExpression	0		132597	0					
ANR	132642	PrimaryExpression	0		132597	1					
ANR	132643	PrimaryExpression	0		132597	2					
ANR	132644	Identifier	NULL		132597	3					
ANR	132645	ExpressionStatement	"brealloc ( & tmp , nonce_len + plaintext -> len , capacity )"	340:4:9262:9314	132597	6	True				
ANR	132646	CallExpression	"brealloc ( & tmp , nonce_len + plaintext -> len , capacity )"		132597	0					
ANR	132647	Callee	brealloc		132597	0					
ANR	132648	Identifier	brealloc		132597	0					
ANR	132649	ArgumentList	& tmp		132597	1					
ANR	132650	Argument	& tmp		132597	0					
ANR	132651	UnaryOperationExpression	& tmp		132597	0					
ANR	132652	UnaryOperator	&		132597	0					
ANR	132653	Identifier	tmp		132597	1					
ANR	132654	Argument	nonce_len + plaintext -> len		132597	1					
ANR	132655	AdditiveExpression	nonce_len + plaintext -> len		132597	0		+			
ANR	132656	Identifier	nonce_len		132597	0					
ANR	132657	PtrMemberAccess	plaintext -> len		132597	1					
ANR	132658	Identifier	plaintext		132597	0					
ANR	132659	Identifier	len		132597	1					
ANR	132660	Argument	capacity		132597	2					
ANR	132661	Identifier	capacity		132597	0					
ANR	132662	IdentifierDeclStatement	buffer_t * ciphertext = & tmp ;	341:4:9320:9347	132597	7	True				
ANR	132663	IdentifierDecl	* ciphertext = & tmp		132597	0					
ANR	132664	IdentifierDeclType	buffer_t *		132597	0					
ANR	132665	Identifier	ciphertext		132597	1					
ANR	132666	AssignmentExpression	* ciphertext = & tmp		132597	2		=			
ANR	132667	Identifier	ciphertext		132597	0					
ANR	132668	UnaryOperationExpression	& tmp		132597	1					
ANR	132669	UnaryOperator	&		132597	0					
ANR	132670	Identifier	tmp		132597	1					
ANR	132671	ExpressionStatement	ciphertext -> len = plaintext -> len	342:4:9353:9385	132597	8	True				
ANR	132672	AssignmentExpression	ciphertext -> len = plaintext -> len		132597	0		=			
ANR	132673	PtrMemberAccess	ciphertext -> len		132597	0					
ANR	132674	Identifier	ciphertext		132597	0					
ANR	132675	Identifier	len		132597	1					
ANR	132676	PtrMemberAccess	plaintext -> len		132597	1					
ANR	132677	Identifier	plaintext		132597	0					
ANR	132678	Identifier	len		132597	1					
ANR	132679	IdentifierDeclStatement	uint8_t * nonce = cipher_ctx . nonce ;	344:4:9392:9425	132597	9	True				
ANR	132680	IdentifierDecl	* nonce = cipher_ctx . nonce		132597	0					
ANR	132681	IdentifierDeclType	uint8_t *		132597	0					
ANR	132682	Identifier	nonce		132597	1					
ANR	132683	AssignmentExpression	* nonce = cipher_ctx . nonce		132597	2		=			
ANR	132684	Identifier	nonce		132597	0					
ANR	132685	MemberAccess	cipher_ctx . nonce		132597	1					
ANR	132686	Identifier	cipher_ctx		132597	0					
ANR	132687	Identifier	nonce		132597	1					
ANR	132688	ExpressionStatement	"cipher_ctx_set_nonce ( & cipher_ctx , nonce , nonce_len , 1 )"	345:4:9431:9485	132597	10	True				
ANR	132689	CallExpression	"cipher_ctx_set_nonce ( & cipher_ctx , nonce , nonce_len , 1 )"		132597	0					
ANR	132690	Callee	cipher_ctx_set_nonce		132597	0					
ANR	132691	Identifier	cipher_ctx_set_nonce		132597	0					
ANR	132692	ArgumentList	& cipher_ctx		132597	1					
ANR	132693	Argument	& cipher_ctx		132597	0					
ANR	132694	UnaryOperationExpression	& cipher_ctx		132597	0					
ANR	132695	UnaryOperator	&		132597	0					
ANR	132696	Identifier	cipher_ctx		132597	1					
ANR	132697	Argument	nonce		132597	1					
ANR	132698	Identifier	nonce		132597	0					
ANR	132699	Argument	nonce_len		132597	2					
ANR	132700	Identifier	nonce_len		132597	0					
ANR	132701	Argument	1		132597	3					
ANR	132702	PrimaryExpression	1		132597	0					
ANR	132703	ExpressionStatement	"memcpy ( ciphertext -> data , nonce , nonce_len )"	346:4:9491:9533	132597	11	True				
ANR	132704	CallExpression	"memcpy ( ciphertext -> data , nonce , nonce_len )"		132597	0					
ANR	132705	Callee	memcpy		132597	0					
ANR	132706	Identifier	memcpy		132597	0					
ANR	132707	ArgumentList	ciphertext -> data		132597	1					
ANR	132708	Argument	ciphertext -> data		132597	0					
ANR	132709	PtrMemberAccess	ciphertext -> data		132597	0					
ANR	132710	Identifier	ciphertext		132597	0					
ANR	132711	Identifier	data		132597	1					
ANR	132712	Argument	nonce		132597	1					
ANR	132713	Identifier	nonce		132597	0					
ANR	132714	Argument	nonce_len		132597	2					
ANR	132715	Identifier	nonce_len		132597	0					
ANR	132716	IfStatement	if ( cipher -> method >= SALSA20 )		132597	12					
ANR	132717	Condition	cipher -> method >= SALSA20	348:8:9544:9568	132597	0	True				
ANR	132718	RelationalExpression	cipher -> method >= SALSA20		132597	0		>=			
ANR	132719	PtrMemberAccess	cipher -> method		132597	0					
ANR	132720	Identifier	cipher		132597	0					
ANR	132721	Identifier	method		132597	1					
ANR	132722	Identifier	SALSA20		132597	1					
ANR	132723	CompoundStatement		17:35:511:511	132597	1					
ANR	132724	ExpressionStatement	"crypto_stream_xor_ic ( ( uint8_t * ) ( ciphertext -> data + nonce_len ) , ( const uint8_t * ) plaintext -> data , ( uint64_t ) ( plaintext -> len ) , ( const uint8_t * ) nonce , 0 , cipher -> key , cipher -> method )"	349:8:9581:9849	132597	0	True				
ANR	132725	CallExpression	"crypto_stream_xor_ic ( ( uint8_t * ) ( ciphertext -> data + nonce_len ) , ( const uint8_t * ) plaintext -> data , ( uint64_t ) ( plaintext -> len ) , ( const uint8_t * ) nonce , 0 , cipher -> key , cipher -> method )"		132597	0					
ANR	132726	Callee	crypto_stream_xor_ic		132597	0					
ANR	132727	Identifier	crypto_stream_xor_ic		132597	0					
ANR	132728	ArgumentList	( uint8_t * ) ( ciphertext -> data + nonce_len )		132597	1					
ANR	132729	Argument	( uint8_t * ) ( ciphertext -> data + nonce_len )		132597	0					
ANR	132730	CastExpression	( uint8_t * ) ( ciphertext -> data + nonce_len )		132597	0					
ANR	132731	CastTarget	uint8_t *		132597	0					
ANR	132732	AdditiveExpression	ciphertext -> data + nonce_len		132597	1		+			
ANR	132733	PtrMemberAccess	ciphertext -> data		132597	0					
ANR	132734	Identifier	ciphertext		132597	0					
ANR	132735	Identifier	data		132597	1					
ANR	132736	Identifier	nonce_len		132597	1					
ANR	132737	Argument	( const uint8_t * ) plaintext -> data		132597	1					
ANR	132738	CastExpression	( const uint8_t * ) plaintext -> data		132597	0					
ANR	132739	CastTarget	const uint8_t *		132597	0					
ANR	132740	PtrMemberAccess	plaintext -> data		132597	1					
ANR	132741	Identifier	plaintext		132597	0					
ANR	132742	Identifier	data		132597	1					
ANR	132743	Argument	( uint64_t ) ( plaintext -> len )		132597	2					
ANR	132744	CastExpression	( uint64_t ) ( plaintext -> len )		132597	0					
ANR	132745	CastTarget	uint64_t		132597	0					
ANR	132746	PtrMemberAccess	plaintext -> len		132597	1					
ANR	132747	Identifier	plaintext		132597	0					
ANR	132748	Identifier	len		132597	1					
ANR	132749	Argument	( const uint8_t * ) nonce		132597	3					
ANR	132750	CastExpression	( const uint8_t * ) nonce		132597	0					
ANR	132751	CastTarget	const uint8_t *		132597	0					
ANR	132752	Identifier	nonce		132597	1					
ANR	132753	Argument	0		132597	4					
ANR	132754	PrimaryExpression	0		132597	0					
ANR	132755	Argument	cipher -> key		132597	5					
ANR	132756	PtrMemberAccess	cipher -> key		132597	0					
ANR	132757	Identifier	cipher		132597	0					
ANR	132758	Identifier	key		132597	1					
ANR	132759	Argument	cipher -> method		132597	6					
ANR	132760	PtrMemberAccess	cipher -> method		132597	0					
ANR	132761	Identifier	cipher		132597	0					
ANR	132762	Identifier	method		132597	1					
ANR	132763	ElseStatement	else		132597	0					
ANR	132764	CompoundStatement		22:11:802:802	132597	0					
ANR	132765	ExpressionStatement	"err = cipher_ctx_update ( & cipher_ctx , ( uint8_t * ) ( ciphertext -> data + nonce_len ) , & ciphertext -> len , ( const uint8_t * ) plaintext -> data , plaintext -> len )"	354:8:9872:10083	132597	0	True				
ANR	132766	AssignmentExpression	"err = cipher_ctx_update ( & cipher_ctx , ( uint8_t * ) ( ciphertext -> data + nonce_len ) , & ciphertext -> len , ( const uint8_t * ) plaintext -> data , plaintext -> len )"		132597	0		=			
ANR	132767	Identifier	err		132597	0					
ANR	132768	CallExpression	"cipher_ctx_update ( & cipher_ctx , ( uint8_t * ) ( ciphertext -> data + nonce_len ) , & ciphertext -> len , ( const uint8_t * ) plaintext -> data , plaintext -> len )"		132597	1					
ANR	132769	Callee	cipher_ctx_update		132597	0					
ANR	132770	Identifier	cipher_ctx_update		132597	0					
ANR	132771	ArgumentList	& cipher_ctx		132597	1					
ANR	132772	Argument	& cipher_ctx		132597	0					
ANR	132773	UnaryOperationExpression	& cipher_ctx		132597	0					
ANR	132774	UnaryOperator	&		132597	0					
ANR	132775	Identifier	cipher_ctx		132597	1					
ANR	132776	Argument	( uint8_t * ) ( ciphertext -> data + nonce_len )		132597	1					
ANR	132777	CastExpression	( uint8_t * ) ( ciphertext -> data + nonce_len )		132597	0					
ANR	132778	CastTarget	uint8_t *		132597	0					
ANR	132779	AdditiveExpression	ciphertext -> data + nonce_len		132597	1		+			
ANR	132780	PtrMemberAccess	ciphertext -> data		132597	0					
ANR	132781	Identifier	ciphertext		132597	0					
ANR	132782	Identifier	data		132597	1					
ANR	132783	Identifier	nonce_len		132597	1					
ANR	132784	Argument	& ciphertext -> len		132597	2					
ANR	132785	UnaryOperationExpression	& ciphertext -> len		132597	0					
ANR	132786	UnaryOperator	&		132597	0					
ANR	132787	PtrMemberAccess	ciphertext -> len		132597	1					
ANR	132788	Identifier	ciphertext		132597	0					
ANR	132789	Identifier	len		132597	1					
ANR	132790	Argument	( const uint8_t * ) plaintext -> data		132597	3					
ANR	132791	CastExpression	( const uint8_t * ) plaintext -> data		132597	0					
ANR	132792	CastTarget	const uint8_t *		132597	0					
ANR	132793	PtrMemberAccess	plaintext -> data		132597	1					
ANR	132794	Identifier	plaintext		132597	0					
ANR	132795	Identifier	data		132597	1					
ANR	132796	Argument	plaintext -> len		132597	4					
ANR	132797	PtrMemberAccess	plaintext -> len		132597	0					
ANR	132798	Identifier	plaintext		132597	0					
ANR	132799	Identifier	len		132597	1					
ANR	132800	ExpressionStatement	stream_ctx_release ( & cipher_ctx )	359:4:10096:10127	132597	13	True				
ANR	132801	CallExpression	stream_ctx_release ( & cipher_ctx )		132597	0					
ANR	132802	Callee	stream_ctx_release		132597	0					
ANR	132803	Identifier	stream_ctx_release		132597	0					
ANR	132804	ArgumentList	& cipher_ctx		132597	1					
ANR	132805	Argument	& cipher_ctx		132597	0					
ANR	132806	UnaryOperationExpression	& cipher_ctx		132597	0					
ANR	132807	UnaryOperator	&		132597	0					
ANR	132808	Identifier	cipher_ctx		132597	1					
ANR	132809	IfStatement	if ( err )		132597	14					
ANR	132810	Condition	err	361:8:10138:10140	132597	0	True				
ANR	132811	Identifier	err		132597	0					
ANR	132812	ReturnStatement	return CRYPTO_ERROR ;	362:8:10151:10170	132597	1	True				
ANR	132813	Identifier	CRYPTO_ERROR		132597	0					
ANR	132814	ExpressionStatement	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"	365:4:10193:10239	132597	15	True				
ANR	132815	CallExpression	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"		132597	0					
ANR	132816	Callee	dump		132597	0					
ANR	132817	Identifier	dump		132597	0					
ANR	132818	ArgumentList	"""PLAIN"""		132597	1					
ANR	132819	Argument	"""PLAIN"""		132597	0					
ANR	132820	PrimaryExpression	"""PLAIN"""		132597	0					
ANR	132821	Argument	plaintext -> data		132597	1					
ANR	132822	PtrMemberAccess	plaintext -> data		132597	0					
ANR	132823	Identifier	plaintext		132597	0					
ANR	132824	Identifier	data		132597	1					
ANR	132825	Argument	plaintext -> len		132597	2					
ANR	132826	PtrMemberAccess	plaintext -> len		132597	0					
ANR	132827	Identifier	plaintext		132597	0					
ANR	132828	Identifier	len		132597	1					
ANR	132829	ExpressionStatement	"dump ( ""CIPHER"" , ciphertext -> data + nonce_len , ciphertext -> len )"	366:4:10245:10306	132597	16	True				
ANR	132830	CallExpression	"dump ( ""CIPHER"" , ciphertext -> data + nonce_len , ciphertext -> len )"		132597	0					
ANR	132831	Callee	dump		132597	0					
ANR	132832	Identifier	dump		132597	0					
ANR	132833	ArgumentList	"""CIPHER"""		132597	1					
ANR	132834	Argument	"""CIPHER"""		132597	0					
ANR	132835	PrimaryExpression	"""CIPHER"""		132597	0					
ANR	132836	Argument	ciphertext -> data + nonce_len		132597	1					
ANR	132837	AdditiveExpression	ciphertext -> data + nonce_len		132597	0		+			
ANR	132838	PtrMemberAccess	ciphertext -> data		132597	0					
ANR	132839	Identifier	ciphertext		132597	0					
ANR	132840	Identifier	data		132597	1					
ANR	132841	Identifier	nonce_len		132597	1					
ANR	132842	Argument	ciphertext -> len		132597	2					
ANR	132843	PtrMemberAccess	ciphertext -> len		132597	0					
ANR	132844	Identifier	ciphertext		132597	0					
ANR	132845	Identifier	len		132597	1					
ANR	132846	ExpressionStatement	"dump ( ""NONCE"" , ciphertext -> data , nonce_len )"	367:4:10312:10354	132597	17	True				
ANR	132847	CallExpression	"dump ( ""NONCE"" , ciphertext -> data , nonce_len )"		132597	0					
ANR	132848	Callee	dump		132597	0					
ANR	132849	Identifier	dump		132597	0					
ANR	132850	ArgumentList	"""NONCE"""		132597	1					
ANR	132851	Argument	"""NONCE"""		132597	0					
ANR	132852	PrimaryExpression	"""NONCE"""		132597	0					
ANR	132853	Argument	ciphertext -> data		132597	1					
ANR	132854	PtrMemberAccess	ciphertext -> data		132597	0					
ANR	132855	Identifier	ciphertext		132597	0					
ANR	132856	Identifier	data		132597	1					
ANR	132857	Argument	nonce_len		132597	2					
ANR	132858	Identifier	nonce_len		132597	0					
ANR	132859	ExpressionStatement	"brealloc ( plaintext , nonce_len + ciphertext -> len , capacity )"	370:4:10368:10426	132597	18	True				
ANR	132860	CallExpression	"brealloc ( plaintext , nonce_len + ciphertext -> len , capacity )"		132597	0					
ANR	132861	Callee	brealloc		132597	0					
ANR	132862	Identifier	brealloc		132597	0					
ANR	132863	ArgumentList	plaintext		132597	1					
ANR	132864	Argument	plaintext		132597	0					
ANR	132865	Identifier	plaintext		132597	0					
ANR	132866	Argument	nonce_len + ciphertext -> len		132597	1					
ANR	132867	AdditiveExpression	nonce_len + ciphertext -> len		132597	0		+			
ANR	132868	Identifier	nonce_len		132597	0					
ANR	132869	PtrMemberAccess	ciphertext -> len		132597	1					
ANR	132870	Identifier	ciphertext		132597	0					
ANR	132871	Identifier	len		132597	1					
ANR	132872	Argument	capacity		132597	2					
ANR	132873	Identifier	capacity		132597	0					
ANR	132874	ExpressionStatement	"memcpy ( plaintext -> data , ciphertext -> data , nonce_len + ciphertext -> len )"	371:4:10432:10502	132597	19	True				
ANR	132875	CallExpression	"memcpy ( plaintext -> data , ciphertext -> data , nonce_len + ciphertext -> len )"		132597	0					
ANR	132876	Callee	memcpy		132597	0					
ANR	132877	Identifier	memcpy		132597	0					
ANR	132878	ArgumentList	plaintext -> data		132597	1					
ANR	132879	Argument	plaintext -> data		132597	0					
ANR	132880	PtrMemberAccess	plaintext -> data		132597	0					
ANR	132881	Identifier	plaintext		132597	0					
ANR	132882	Identifier	data		132597	1					
ANR	132883	Argument	ciphertext -> data		132597	1					
ANR	132884	PtrMemberAccess	ciphertext -> data		132597	0					
ANR	132885	Identifier	ciphertext		132597	0					
ANR	132886	Identifier	data		132597	1					
ANR	132887	Argument	nonce_len + ciphertext -> len		132597	2					
ANR	132888	AdditiveExpression	nonce_len + ciphertext -> len		132597	0		+			
ANR	132889	Identifier	nonce_len		132597	0					
ANR	132890	PtrMemberAccess	ciphertext -> len		132597	1					
ANR	132891	Identifier	ciphertext		132597	0					
ANR	132892	Identifier	len		132597	1					
ANR	132893	ExpressionStatement	plaintext -> len = nonce_len + ciphertext -> len	372:4:10508:10552	132597	20	True				
ANR	132894	AssignmentExpression	plaintext -> len = nonce_len + ciphertext -> len		132597	0		=			
ANR	132895	PtrMemberAccess	plaintext -> len		132597	0					
ANR	132896	Identifier	plaintext		132597	0					
ANR	132897	Identifier	len		132597	1					
ANR	132898	AdditiveExpression	nonce_len + ciphertext -> len		132597	1		+			
ANR	132899	Identifier	nonce_len		132597	0					
ANR	132900	PtrMemberAccess	ciphertext -> len		132597	1					
ANR	132901	Identifier	ciphertext		132597	0					
ANR	132902	Identifier	len		132597	1					
ANR	132903	ReturnStatement	return CRYPTO_OK ;	374:4:10559:10575	132597	21	True				
ANR	132904	Identifier	CRYPTO_OK		132597	0					
ANR	132905	ReturnType	int		132597	1					
ANR	132906	Identifier	stream_encrypt_all		132597	2					
ANR	132907	ParameterList	"buffer_t * plaintext , cipher_t * cipher , size_t capacity"		132597	3					
ANR	132908	Parameter	buffer_t * plaintext	331:19:9003:9021	132597	0	True				
ANR	132909	ParameterType	buffer_t *		132597	0					
ANR	132910	Identifier	plaintext		132597	1					
ANR	132911	Parameter	cipher_t * cipher	331:40:9024:9039	132597	1	True				
ANR	132912	ParameterType	cipher_t *		132597	0					
ANR	132913	Identifier	cipher		132597	1					
ANR	132914	Parameter	size_t capacity	331:58:9042:9056	132597	2	True				
ANR	132915	ParameterType	size_t		132597	0					
ANR	132916	Identifier	capacity		132597	1					
ANR	132917	CFGEntryNode	ENTRY		132597		True				
ANR	132918	CFGExitNode	EXIT		132597		True				
ANR	132919	Symbol	CRYPTO_ERROR		132597						
ANR	132920	Symbol	CRYPTO_OK		132597						
ANR	132921	Symbol	capacity		132597						
ANR	132922	Symbol	* plaintext		132597						
ANR	132923	Symbol	tmp		132597						
ANR	132924	Symbol	plaintext -> data		132597						
ANR	132925	Symbol	cipher -> key		132597						
ANR	132926	Symbol	cipher		132597						
ANR	132927	Symbol	ciphertext		132597						
ANR	132928	Symbol	ciphertext -> len		132597						
ANR	132929	Symbol	cipher_ctx		132597						
ANR	132930	Symbol	NULL		132597						
ANR	132931	Symbol	err		132597						
ANR	132932	Symbol	* cipher		132597						
ANR	132933	Symbol	nonce_len		132597						
ANR	132934	Symbol	& ciphertext -> len		132597						
ANR	132935	Symbol	& cipher_ctx		132597						
ANR	132936	Symbol	plaintext		132597						
ANR	132937	Symbol	nonce		132597						
ANR	132938	Symbol	cipher_ctx . nonce		132597						
ANR	132939	Symbol	plaintext -> len		132597						
ANR	132940	Symbol	SALSA20		132597						
ANR	132941	Symbol	ciphertext -> data		132597						
ANR	132942	Symbol	cipher -> method		132597						
ANR	132943	Symbol	cipher -> nonce_len		132597						
ANR	132944	Symbol	& tmp		132597						
ANR	132945	Symbol	cipher_ctx_update		132597						
ANR	132946	Symbol	* ciphertext		132597						
ANR	132947	Function	stream_encrypt	377:0:10580:13047							
ANR	132948	FunctionDef	"stream_encrypt (buffer_t * plaintext , cipher_ctx_t * cipher_ctx , size_t capacity)"		132947	0					
ANR	132949	CompoundStatement		379:0:10663:13047	132947	0					
ANR	132950	IfStatement	if ( cipher_ctx == NULL )		132947	0					
ANR	132951	Condition	cipher_ctx == NULL	380:8:10673:10690	132947	0	True				
ANR	132952	EqualityExpression	cipher_ctx == NULL		132947	0		==			
ANR	132953	Identifier	cipher_ctx		132947	0					
ANR	132954	Identifier	NULL		132947	1					
ANR	132955	ReturnStatement	return CRYPTO_ERROR ;	381:8:10701:10720	132947	1	True				
ANR	132956	Identifier	CRYPTO_ERROR		132947	0					
ANR	132957	IdentifierDeclStatement	cipher_t * cipher = cipher_ctx -> cipher ;	383:4:10727:10764	132947	1	True				
ANR	132958	IdentifierDecl	* cipher = cipher_ctx -> cipher		132947	0					
ANR	132959	IdentifierDeclType	cipher_t *		132947	0					
ANR	132960	Identifier	cipher		132947	1					
ANR	132961	AssignmentExpression	* cipher = cipher_ctx -> cipher		132947	2		=			
ANR	132962	Identifier	cipher		132947	0					
ANR	132963	PtrMemberAccess	cipher_ctx -> cipher		132947	1					
ANR	132964	Identifier	cipher_ctx		132947	0					
ANR	132965	Identifier	cipher		132947	1					
ANR	132966	Statement	static	385:4:10771:10776	132947	2	True				
ANR	132967	IdentifierDeclStatement	"buffer_t tmp = { 0 , 0 , 0 , NULL } ;"	385:11:10778:10810	132947	3	True				
ANR	132968	IdentifierDecl	"tmp = { 0 , 0 , 0 , NULL }"		132947	0					
ANR	132969	IdentifierDeclType	buffer_t		132947	0					
ANR	132970	Identifier	tmp		132947	1					
ANR	132971	AssignmentExpression	"tmp = { 0 , 0 , 0 , NULL }"		132947	2		=			
ANR	132972	Identifier	tmp		132947	0					
ANR	132973	InitializerList	0		132947	1					
ANR	132974	PrimaryExpression	0		132947	0					
ANR	132975	PrimaryExpression	0		132947	1					
ANR	132976	PrimaryExpression	0		132947	2					
ANR	132977	Identifier	NULL		132947	3					
ANR	132978	IdentifierDeclStatement	int err = CRYPTO_OK ;	387:4:10817:10845	132947	4	True				
ANR	132979	IdentifierDecl	err = CRYPTO_OK		132947	0					
ANR	132980	IdentifierDeclType	int		132947	0					
ANR	132981	Identifier	err		132947	1					
ANR	132982	AssignmentExpression	err = CRYPTO_OK		132947	2		=			
ANR	132983	Identifier	CRYPTO_OK		132947	0					
ANR	132984	Identifier	CRYPTO_OK		132947	1					
ANR	132985	IdentifierDeclStatement	size_t nonce_len = 0 ;	388:4:10851:10871	132947	5	True				
ANR	132986	IdentifierDecl	nonce_len = 0		132947	0					
ANR	132987	IdentifierDeclType	size_t		132947	0					
ANR	132988	Identifier	nonce_len		132947	1					
ANR	132989	AssignmentExpression	nonce_len = 0		132947	2		=			
ANR	132990	Identifier	nonce_len		132947	0					
ANR	132991	PrimaryExpression	0		132947	1					
ANR	132992	IfStatement	if ( ! cipher_ctx -> init )		132947	6					
ANR	132993	Condition	! cipher_ctx -> init	389:8:10881:10897	132947	0	True				
ANR	132994	UnaryOperationExpression	! cipher_ctx -> init		132947	0					
ANR	132995	UnaryOperator	!		132947	0					
ANR	132996	PtrMemberAccess	cipher_ctx -> init		132947	1					
ANR	132997	Identifier	cipher_ctx		132947	0					
ANR	132998	Identifier	init		132947	1					
ANR	132999	CompoundStatement		11:27:236:236	132947	1					
ANR	133000	ExpressionStatement	nonce_len = cipher_ctx -> cipher -> nonce_len	390:8:10910:10951	132947	0	True				
ANR	133001	AssignmentExpression	nonce_len = cipher_ctx -> cipher -> nonce_len		132947	0		=			
ANR	133002	Identifier	nonce_len		132947	0					
ANR	133003	PtrMemberAccess	cipher_ctx -> cipher -> nonce_len		132947	1					
ANR	133004	PtrMemberAccess	cipher_ctx -> cipher		132947	0					
ANR	133005	Identifier	cipher_ctx		132947	0					
ANR	133006	Identifier	cipher		132947	1					
ANR	133007	Identifier	nonce_len		132947	1					
ANR	133008	ExpressionStatement	"brealloc ( & tmp , nonce_len + plaintext -> len , capacity )"	393:4:10964:11016	132947	7	True				
ANR	133009	CallExpression	"brealloc ( & tmp , nonce_len + plaintext -> len , capacity )"		132947	0					
ANR	133010	Callee	brealloc		132947	0					
ANR	133011	Identifier	brealloc		132947	0					
ANR	133012	ArgumentList	& tmp		132947	1					
ANR	133013	Argument	& tmp		132947	0					
ANR	133014	UnaryOperationExpression	& tmp		132947	0					
ANR	133015	UnaryOperator	&		132947	0					
ANR	133016	Identifier	tmp		132947	1					
ANR	133017	Argument	nonce_len + plaintext -> len		132947	1					
ANR	133018	AdditiveExpression	nonce_len + plaintext -> len		132947	0		+			
ANR	133019	Identifier	nonce_len		132947	0					
ANR	133020	PtrMemberAccess	plaintext -> len		132947	1					
ANR	133021	Identifier	plaintext		132947	0					
ANR	133022	Identifier	len		132947	1					
ANR	133023	Argument	capacity		132947	2					
ANR	133024	Identifier	capacity		132947	0					
ANR	133025	IdentifierDeclStatement	buffer_t * ciphertext = & tmp ;	394:4:11022:11049	132947	8	True				
ANR	133026	IdentifierDecl	* ciphertext = & tmp		132947	0					
ANR	133027	IdentifierDeclType	buffer_t *		132947	0					
ANR	133028	Identifier	ciphertext		132947	1					
ANR	133029	AssignmentExpression	* ciphertext = & tmp		132947	2		=			
ANR	133030	Identifier	ciphertext		132947	0					
ANR	133031	UnaryOperationExpression	& tmp		132947	1					
ANR	133032	UnaryOperator	&		132947	0					
ANR	133033	Identifier	tmp		132947	1					
ANR	133034	ExpressionStatement	ciphertext -> len = plaintext -> len	395:4:11055:11087	132947	9	True				
ANR	133035	AssignmentExpression	ciphertext -> len = plaintext -> len		132947	0		=			
ANR	133036	PtrMemberAccess	ciphertext -> len		132947	0					
ANR	133037	Identifier	ciphertext		132947	0					
ANR	133038	Identifier	len		132947	1					
ANR	133039	PtrMemberAccess	plaintext -> len		132947	1					
ANR	133040	Identifier	plaintext		132947	0					
ANR	133041	Identifier	len		132947	1					
ANR	133042	IfStatement	if ( ! cipher_ctx -> init )		132947	10					
ANR	133043	Condition	! cipher_ctx -> init	397:8:11098:11114	132947	0	True				
ANR	133044	UnaryOperationExpression	! cipher_ctx -> init		132947	0					
ANR	133045	UnaryOperator	!		132947	0					
ANR	133046	PtrMemberAccess	cipher_ctx -> init		132947	1					
ANR	133047	Identifier	cipher_ctx		132947	0					
ANR	133048	Identifier	init		132947	1					
ANR	133049	CompoundStatement		19:27:453:453	132947	1					
ANR	133050	ExpressionStatement	"cipher_ctx_set_nonce ( cipher_ctx , cipher_ctx -> nonce , nonce_len , 1 )"	398:8:11127:11192	132947	0	True				
ANR	133051	CallExpression	"cipher_ctx_set_nonce ( cipher_ctx , cipher_ctx -> nonce , nonce_len , 1 )"		132947	0					
ANR	133052	Callee	cipher_ctx_set_nonce		132947	0					
ANR	133053	Identifier	cipher_ctx_set_nonce		132947	0					
ANR	133054	ArgumentList	cipher_ctx		132947	1					
ANR	133055	Argument	cipher_ctx		132947	0					
ANR	133056	Identifier	cipher_ctx		132947	0					
ANR	133057	Argument	cipher_ctx -> nonce		132947	1					
ANR	133058	PtrMemberAccess	cipher_ctx -> nonce		132947	0					
ANR	133059	Identifier	cipher_ctx		132947	0					
ANR	133060	Identifier	nonce		132947	1					
ANR	133061	Argument	nonce_len		132947	2					
ANR	133062	Identifier	nonce_len		132947	0					
ANR	133063	Argument	1		132947	3					
ANR	133064	PrimaryExpression	1		132947	0					
ANR	133065	ExpressionStatement	"memcpy ( ciphertext -> data , cipher_ctx -> nonce , nonce_len )"	399:8:11202:11256	132947	1	True				
ANR	133066	CallExpression	"memcpy ( ciphertext -> data , cipher_ctx -> nonce , nonce_len )"		132947	0					
ANR	133067	Callee	memcpy		132947	0					
ANR	133068	Identifier	memcpy		132947	0					
ANR	133069	ArgumentList	ciphertext -> data		132947	1					
ANR	133070	Argument	ciphertext -> data		132947	0					
ANR	133071	PtrMemberAccess	ciphertext -> data		132947	0					
ANR	133072	Identifier	ciphertext		132947	0					
ANR	133073	Identifier	data		132947	1					
ANR	133074	Argument	cipher_ctx -> nonce		132947	1					
ANR	133075	PtrMemberAccess	cipher_ctx -> nonce		132947	0					
ANR	133076	Identifier	cipher_ctx		132947	0					
ANR	133077	Identifier	nonce		132947	1					
ANR	133078	Argument	nonce_len		132947	2					
ANR	133079	Identifier	nonce_len		132947	0					
ANR	133080	ExpressionStatement	cipher_ctx -> counter = 0	400:8:11266:11289	132947	2	True				
ANR	133081	AssignmentExpression	cipher_ctx -> counter = 0		132947	0		=			
ANR	133082	PtrMemberAccess	cipher_ctx -> counter		132947	0					
ANR	133083	Identifier	cipher_ctx		132947	0					
ANR	133084	Identifier	counter		132947	1					
ANR	133085	PrimaryExpression	0		132947	1					
ANR	133086	ExpressionStatement	cipher_ctx -> init = 1	401:8:11299:11322	132947	3	True				
ANR	133087	AssignmentExpression	cipher_ctx -> init = 1		132947	0		=			
ANR	133088	PtrMemberAccess	cipher_ctx -> init		132947	0					
ANR	133089	Identifier	cipher_ctx		132947	0					
ANR	133090	Identifier	init		132947	1					
ANR	133091	PrimaryExpression	1		132947	1					
ANR	133092	IfStatement	if ( cipher -> method >= SALSA20 )		132947	11					
ANR	133093	Condition	cipher -> method >= SALSA20	404:8:11339:11363	132947	0	True				
ANR	133094	RelationalExpression	cipher -> method >= SALSA20		132947	0		>=			
ANR	133095	PtrMemberAccess	cipher -> method		132947	0					
ANR	133096	Identifier	cipher		132947	0					
ANR	133097	Identifier	method		132947	1					
ANR	133098	Identifier	SALSA20		132947	1					
ANR	133099	CompoundStatement		27:8:712:765	132947	1					
ANR	133100	IdentifierDeclStatement	int padding = cipher_ctx -> counter % SODIUM_BLOCK_SIZE ;	405:8:11376:11429	132947	0	True				
ANR	133101	IdentifierDecl	padding = cipher_ctx -> counter % SODIUM_BLOCK_SIZE		132947	0					
ANR	133102	IdentifierDeclType	int		132947	0					
ANR	133103	Identifier	padding		132947	1					
ANR	133104	AssignmentExpression	padding = cipher_ctx -> counter % SODIUM_BLOCK_SIZE		132947	2		=			
ANR	133105	Identifier	padding		132947	0					
ANR	133106	MultiplicativeExpression	cipher_ctx -> counter % SODIUM_BLOCK_SIZE		132947	1		%			
ANR	133107	PtrMemberAccess	cipher_ctx -> counter		132947	0					
ANR	133108	Identifier	cipher_ctx		132947	0					
ANR	133109	Identifier	counter		132947	1					
ANR	133110	Identifier	SODIUM_BLOCK_SIZE		132947	1					
ANR	133111	ExpressionStatement	"brealloc ( ciphertext , nonce_len + ( padding + ciphertext -> len ) * 2 , capacity )"	406:8:11439:11514	132947	1	True				
ANR	133112	CallExpression	"brealloc ( ciphertext , nonce_len + ( padding + ciphertext -> len ) * 2 , capacity )"		132947	0					
ANR	133113	Callee	brealloc		132947	0					
ANR	133114	Identifier	brealloc		132947	0					
ANR	133115	ArgumentList	ciphertext		132947	1					
ANR	133116	Argument	ciphertext		132947	0					
ANR	133117	Identifier	ciphertext		132947	0					
ANR	133118	Argument	nonce_len + ( padding + ciphertext -> len ) * 2		132947	1					
ANR	133119	AdditiveExpression	nonce_len + ( padding + ciphertext -> len ) * 2		132947	0		+			
ANR	133120	Identifier	nonce_len		132947	0					
ANR	133121	MultiplicativeExpression	( padding + ciphertext -> len ) * 2		132947	1		*			
ANR	133122	AdditiveExpression	padding + ciphertext -> len		132947	0		+			
ANR	133123	Identifier	padding		132947	0					
ANR	133124	PtrMemberAccess	ciphertext -> len		132947	1					
ANR	133125	Identifier	ciphertext		132947	0					
ANR	133126	Identifier	len		132947	1					
ANR	133127	PrimaryExpression	2		132947	1					
ANR	133128	Argument	capacity		132947	2					
ANR	133129	Identifier	capacity		132947	0					
ANR	133130	IfStatement	if ( padding )		132947	2					
ANR	133131	Condition	padding	407:12:11528:11534	132947	0	True				
ANR	133132	Identifier	padding		132947	0					
ANR	133133	CompoundStatement		29:21:873:873	132947	1					
ANR	133134	ExpressionStatement	"brealloc ( plaintext , plaintext -> len + padding , capacity )"	408:12:11551:11606	132947	0	True				
ANR	133135	CallExpression	"brealloc ( plaintext , plaintext -> len + padding , capacity )"		132947	0					
ANR	133136	Callee	brealloc		132947	0					
ANR	133137	Identifier	brealloc		132947	0					
ANR	133138	ArgumentList	plaintext		132947	1					
ANR	133139	Argument	plaintext		132947	0					
ANR	133140	Identifier	plaintext		132947	0					
ANR	133141	Argument	plaintext -> len + padding		132947	1					
ANR	133142	AdditiveExpression	plaintext -> len + padding		132947	0		+			
ANR	133143	PtrMemberAccess	plaintext -> len		132947	0					
ANR	133144	Identifier	plaintext		132947	0					
ANR	133145	Identifier	len		132947	1					
ANR	133146	Identifier	padding		132947	1					
ANR	133147	Argument	capacity		132947	2					
ANR	133148	Identifier	capacity		132947	0					
ANR	133149	ExpressionStatement	"memmove ( plaintext -> data + padding , plaintext -> data , plaintext -> len )"	409:12:11620:11687	132947	1	True				
ANR	133150	CallExpression	"memmove ( plaintext -> data + padding , plaintext -> data , plaintext -> len )"		132947	0					
ANR	133151	Callee	memmove		132947	0					
ANR	133152	Identifier	memmove		132947	0					
ANR	133153	ArgumentList	plaintext -> data + padding		132947	1					
ANR	133154	Argument	plaintext -> data + padding		132947	0					
ANR	133155	AdditiveExpression	plaintext -> data + padding		132947	0		+			
ANR	133156	PtrMemberAccess	plaintext -> data		132947	0					
ANR	133157	Identifier	plaintext		132947	0					
ANR	133158	Identifier	data		132947	1					
ANR	133159	Identifier	padding		132947	1					
ANR	133160	Argument	plaintext -> data		132947	1					
ANR	133161	PtrMemberAccess	plaintext -> data		132947	0					
ANR	133162	Identifier	plaintext		132947	0					
ANR	133163	Identifier	data		132947	1					
ANR	133164	Argument	plaintext -> len		132947	2					
ANR	133165	PtrMemberAccess	plaintext -> len		132947	0					
ANR	133166	Identifier	plaintext		132947	0					
ANR	133167	Identifier	len		132947	1					
ANR	133168	ExpressionStatement	"sodium_memzero ( plaintext -> data , padding )"	410:12:11701:11741	132947	2	True				
ANR	133169	CallExpression	"sodium_memzero ( plaintext -> data , padding )"		132947	0					
ANR	133170	Callee	sodium_memzero		132947	0					
ANR	133171	Identifier	sodium_memzero		132947	0					
ANR	133172	ArgumentList	plaintext -> data		132947	1					
ANR	133173	Argument	plaintext -> data		132947	0					
ANR	133174	PtrMemberAccess	plaintext -> data		132947	0					
ANR	133175	Identifier	plaintext		132947	0					
ANR	133176	Identifier	data		132947	1					
ANR	133177	Argument	padding		132947	1					
ANR	133178	Identifier	padding		132947	0					
ANR	133179	ExpressionStatement	"crypto_stream_xor_ic ( ( uint8_t * ) ( ciphertext -> data + nonce_len ) , ( const uint8_t * ) plaintext -> data , ( uint64_t ) ( plaintext -> len + padding ) , ( const uint8_t * ) cipher_ctx -> nonce , cipher_ctx -> counter / SODIUM_BLOCK_SIZE , cipher -> key , cipher -> method )"	412:8:11761:12147	132947	3	True				
ANR	133180	CallExpression	"crypto_stream_xor_ic ( ( uint8_t * ) ( ciphertext -> data + nonce_len ) , ( const uint8_t * ) plaintext -> data , ( uint64_t ) ( plaintext -> len + padding ) , ( const uint8_t * ) cipher_ctx -> nonce , cipher_ctx -> counter / SODIUM_BLOCK_SIZE , cipher -> key , cipher -> method )"		132947	0					
ANR	133181	Callee	crypto_stream_xor_ic		132947	0					
ANR	133182	Identifier	crypto_stream_xor_ic		132947	0					
ANR	133183	ArgumentList	( uint8_t * ) ( ciphertext -> data + nonce_len )		132947	1					
ANR	133184	Argument	( uint8_t * ) ( ciphertext -> data + nonce_len )		132947	0					
ANR	133185	CastExpression	( uint8_t * ) ( ciphertext -> data + nonce_len )		132947	0					
ANR	133186	CastTarget	uint8_t *		132947	0					
ANR	133187	AdditiveExpression	ciphertext -> data + nonce_len		132947	1		+			
ANR	133188	PtrMemberAccess	ciphertext -> data		132947	0					
ANR	133189	Identifier	ciphertext		132947	0					
ANR	133190	Identifier	data		132947	1					
ANR	133191	Identifier	nonce_len		132947	1					
ANR	133192	Argument	( const uint8_t * ) plaintext -> data		132947	1					
ANR	133193	CastExpression	( const uint8_t * ) plaintext -> data		132947	0					
ANR	133194	CastTarget	const uint8_t *		132947	0					
ANR	133195	PtrMemberAccess	plaintext -> data		132947	1					
ANR	133196	Identifier	plaintext		132947	0					
ANR	133197	Identifier	data		132947	1					
ANR	133198	Argument	( uint64_t ) ( plaintext -> len + padding )		132947	2					
ANR	133199	CastExpression	( uint64_t ) ( plaintext -> len + padding )		132947	0					
ANR	133200	CastTarget	uint64_t		132947	0					
ANR	133201	AdditiveExpression	plaintext -> len + padding		132947	1		+			
ANR	133202	PtrMemberAccess	plaintext -> len		132947	0					
ANR	133203	Identifier	plaintext		132947	0					
ANR	133204	Identifier	len		132947	1					
ANR	133205	Identifier	padding		132947	1					
ANR	133206	Argument	( const uint8_t * ) cipher_ctx -> nonce		132947	3					
ANR	133207	CastExpression	( const uint8_t * ) cipher_ctx -> nonce		132947	0					
ANR	133208	CastTarget	const uint8_t *		132947	0					
ANR	133209	PtrMemberAccess	cipher_ctx -> nonce		132947	1					
ANR	133210	Identifier	cipher_ctx		132947	0					
ANR	133211	Identifier	nonce		132947	1					
ANR	133212	Argument	cipher_ctx -> counter / SODIUM_BLOCK_SIZE		132947	4					
ANR	133213	MultiplicativeExpression	cipher_ctx -> counter / SODIUM_BLOCK_SIZE		132947	0		/			
ANR	133214	PtrMemberAccess	cipher_ctx -> counter		132947	0					
ANR	133215	Identifier	cipher_ctx		132947	0					
ANR	133216	Identifier	counter		132947	1					
ANR	133217	Identifier	SODIUM_BLOCK_SIZE		132947	1					
ANR	133218	Argument	cipher -> key		132947	5					
ANR	133219	PtrMemberAccess	cipher -> key		132947	0					
ANR	133220	Identifier	cipher		132947	0					
ANR	133221	Identifier	key		132947	1					
ANR	133222	Argument	cipher -> method		132947	6					
ANR	133223	PtrMemberAccess	cipher -> method		132947	0					
ANR	133224	Identifier	cipher		132947	0					
ANR	133225	Identifier	method		132947	1					
ANR	133226	ExpressionStatement	cipher_ctx -> counter += plaintext -> len	418:8:12157:12194	132947	4	True				
ANR	133227	AssignmentExpression	cipher_ctx -> counter += plaintext -> len		132947	0		+=			
ANR	133228	PtrMemberAccess	cipher_ctx -> counter		132947	0					
ANR	133229	Identifier	cipher_ctx		132947	0					
ANR	133230	Identifier	counter		132947	1					
ANR	133231	PtrMemberAccess	plaintext -> len		132947	1					
ANR	133232	Identifier	plaintext		132947	0					
ANR	133233	Identifier	len		132947	1					
ANR	133234	IfStatement	if ( padding )		132947	5					
ANR	133235	Condition	padding	419:12:12208:12214	132947	0	True				
ANR	133236	Identifier	padding		132947	0					
ANR	133237	CompoundStatement		41:21:1553:1553	132947	1					
ANR	133238	ExpressionStatement	"memmove ( ciphertext -> data + nonce_len , ciphertext -> data + nonce_len + padding , ciphertext -> len )"	420:12:12231:12345	132947	0	True				
ANR	133239	CallExpression	"memmove ( ciphertext -> data + nonce_len , ciphertext -> data + nonce_len + padding , ciphertext -> len )"		132947	0					
ANR	133240	Callee	memmove		132947	0					
ANR	133241	Identifier	memmove		132947	0					
ANR	133242	ArgumentList	ciphertext -> data + nonce_len		132947	1					
ANR	133243	Argument	ciphertext -> data + nonce_len		132947	0					
ANR	133244	AdditiveExpression	ciphertext -> data + nonce_len		132947	0		+			
ANR	133245	PtrMemberAccess	ciphertext -> data		132947	0					
ANR	133246	Identifier	ciphertext		132947	0					
ANR	133247	Identifier	data		132947	1					
ANR	133248	Identifier	nonce_len		132947	1					
ANR	133249	Argument	ciphertext -> data + nonce_len + padding		132947	1					
ANR	133250	AdditiveExpression	ciphertext -> data + nonce_len + padding		132947	0		+			
ANR	133251	PtrMemberAccess	ciphertext -> data		132947	0					
ANR	133252	Identifier	ciphertext		132947	0					
ANR	133253	Identifier	data		132947	1					
ANR	133254	AdditiveExpression	nonce_len + padding		132947	1		+			
ANR	133255	Identifier	nonce_len		132947	0					
ANR	133256	Identifier	padding		132947	1					
ANR	133257	Argument	ciphertext -> len		132947	2					
ANR	133258	PtrMemberAccess	ciphertext -> len		132947	0					
ANR	133259	Identifier	ciphertext		132947	0					
ANR	133260	Identifier	len		132947	1					
ANR	133261	ElseStatement	else		132947	0					
ANR	133262	CompoundStatement		45:11:1704:1704	132947	0					
ANR	133263	ExpressionStatement	"err = cipher_ctx_update ( cipher_ctx , ( uint8_t * ) ( ciphertext -> data + nonce_len ) , & ciphertext -> len , ( const uint8_t * ) plaintext -> data , plaintext -> len )"	424:8:12378:12620	132947	0	True				
ANR	133264	AssignmentExpression	"err = cipher_ctx_update ( cipher_ctx , ( uint8_t * ) ( ciphertext -> data + nonce_len ) , & ciphertext -> len , ( const uint8_t * ) plaintext -> data , plaintext -> len )"		132947	0		=			
ANR	133265	Identifier	err		132947	0					
ANR	133266	CallExpression	"cipher_ctx_update ( cipher_ctx , ( uint8_t * ) ( ciphertext -> data + nonce_len ) , & ciphertext -> len , ( const uint8_t * ) plaintext -> data , plaintext -> len )"		132947	1					
ANR	133267	Callee	cipher_ctx_update		132947	0					
ANR	133268	Identifier	cipher_ctx_update		132947	0					
ANR	133269	ArgumentList	cipher_ctx		132947	1					
ANR	133270	Argument	cipher_ctx		132947	0					
ANR	133271	Identifier	cipher_ctx		132947	0					
ANR	133272	Argument	( uint8_t * ) ( ciphertext -> data + nonce_len )		132947	1					
ANR	133273	CastExpression	( uint8_t * ) ( ciphertext -> data + nonce_len )		132947	0					
ANR	133274	CastTarget	uint8_t *		132947	0					
ANR	133275	AdditiveExpression	ciphertext -> data + nonce_len		132947	1		+			
ANR	133276	PtrMemberAccess	ciphertext -> data		132947	0					
ANR	133277	Identifier	ciphertext		132947	0					
ANR	133278	Identifier	data		132947	1					
ANR	133279	Identifier	nonce_len		132947	1					
ANR	133280	Argument	& ciphertext -> len		132947	2					
ANR	133281	UnaryOperationExpression	& ciphertext -> len		132947	0					
ANR	133282	UnaryOperator	&		132947	0					
ANR	133283	PtrMemberAccess	ciphertext -> len		132947	1					
ANR	133284	Identifier	ciphertext		132947	0					
ANR	133285	Identifier	len		132947	1					
ANR	133286	Argument	( const uint8_t * ) plaintext -> data		132947	3					
ANR	133287	CastExpression	( const uint8_t * ) plaintext -> data		132947	0					
ANR	133288	CastTarget	const uint8_t *		132947	0					
ANR	133289	PtrMemberAccess	plaintext -> data		132947	1					
ANR	133290	Identifier	plaintext		132947	0					
ANR	133291	Identifier	data		132947	1					
ANR	133292	Argument	plaintext -> len		132947	4					
ANR	133293	PtrMemberAccess	plaintext -> len		132947	0					
ANR	133294	Identifier	plaintext		132947	0					
ANR	133295	Identifier	len		132947	1					
ANR	133296	IfStatement	if ( err )		132947	1					
ANR	133297	Condition	err	428:12:12634:12636	132947	0	True				
ANR	133298	Identifier	err		132947	0					
ANR	133299	CompoundStatement		50:17:1975:1975	132947	1					
ANR	133300	ReturnStatement	return CRYPTO_ERROR ;	429:12:12653:12672	132947	0	True				
ANR	133301	Identifier	CRYPTO_ERROR		132947	0					
ANR	133302	ExpressionStatement	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"	434:4:12711:12757	132947	12	True				
ANR	133303	CallExpression	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"		132947	0					
ANR	133304	Callee	dump		132947	0					
ANR	133305	Identifier	dump		132947	0					
ANR	133306	ArgumentList	"""PLAIN"""		132947	1					
ANR	133307	Argument	"""PLAIN"""		132947	0					
ANR	133308	PrimaryExpression	"""PLAIN"""		132947	0					
ANR	133309	Argument	plaintext -> data		132947	1					
ANR	133310	PtrMemberAccess	plaintext -> data		132947	0					
ANR	133311	Identifier	plaintext		132947	0					
ANR	133312	Identifier	data		132947	1					
ANR	133313	Argument	plaintext -> len		132947	2					
ANR	133314	PtrMemberAccess	plaintext -> len		132947	0					
ANR	133315	Identifier	plaintext		132947	0					
ANR	133316	Identifier	len		132947	1					
ANR	133317	ExpressionStatement	"dump ( ""CIPHER"" , ciphertext -> data + nonce_len , ciphertext -> len )"	435:4:12763:12824	132947	13	True				
ANR	133318	CallExpression	"dump ( ""CIPHER"" , ciphertext -> data + nonce_len , ciphertext -> len )"		132947	0					
ANR	133319	Callee	dump		132947	0					
ANR	133320	Identifier	dump		132947	0					
ANR	133321	ArgumentList	"""CIPHER"""		132947	1					
ANR	133322	Argument	"""CIPHER"""		132947	0					
ANR	133323	PrimaryExpression	"""CIPHER"""		132947	0					
ANR	133324	Argument	ciphertext -> data + nonce_len		132947	1					
ANR	133325	AdditiveExpression	ciphertext -> data + nonce_len		132947	0		+			
ANR	133326	PtrMemberAccess	ciphertext -> data		132947	0					
ANR	133327	Identifier	ciphertext		132947	0					
ANR	133328	Identifier	data		132947	1					
ANR	133329	Identifier	nonce_len		132947	1					
ANR	133330	Argument	ciphertext -> len		132947	2					
ANR	133331	PtrMemberAccess	ciphertext -> len		132947	0					
ANR	133332	Identifier	ciphertext		132947	0					
ANR	133333	Identifier	len		132947	1					
ANR	133334	ExpressionStatement	"brealloc ( plaintext , nonce_len + ciphertext -> len , capacity )"	438:4:12838:12896	132947	14	True				
ANR	133335	CallExpression	"brealloc ( plaintext , nonce_len + ciphertext -> len , capacity )"		132947	0					
ANR	133336	Callee	brealloc		132947	0					
ANR	133337	Identifier	brealloc		132947	0					
ANR	133338	ArgumentList	plaintext		132947	1					
ANR	133339	Argument	plaintext		132947	0					
ANR	133340	Identifier	plaintext		132947	0					
ANR	133341	Argument	nonce_len + ciphertext -> len		132947	1					
ANR	133342	AdditiveExpression	nonce_len + ciphertext -> len		132947	0		+			
ANR	133343	Identifier	nonce_len		132947	0					
ANR	133344	PtrMemberAccess	ciphertext -> len		132947	1					
ANR	133345	Identifier	ciphertext		132947	0					
ANR	133346	Identifier	len		132947	1					
ANR	133347	Argument	capacity		132947	2					
ANR	133348	Identifier	capacity		132947	0					
ANR	133349	ExpressionStatement	"memcpy ( plaintext -> data , ciphertext -> data , nonce_len + ciphertext -> len )"	439:4:12902:12972	132947	15	True				
ANR	133350	CallExpression	"memcpy ( plaintext -> data , ciphertext -> data , nonce_len + ciphertext -> len )"		132947	0					
ANR	133351	Callee	memcpy		132947	0					
ANR	133352	Identifier	memcpy		132947	0					
ANR	133353	ArgumentList	plaintext -> data		132947	1					
ANR	133354	Argument	plaintext -> data		132947	0					
ANR	133355	PtrMemberAccess	plaintext -> data		132947	0					
ANR	133356	Identifier	plaintext		132947	0					
ANR	133357	Identifier	data		132947	1					
ANR	133358	Argument	ciphertext -> data		132947	1					
ANR	133359	PtrMemberAccess	ciphertext -> data		132947	0					
ANR	133360	Identifier	ciphertext		132947	0					
ANR	133361	Identifier	data		132947	1					
ANR	133362	Argument	nonce_len + ciphertext -> len		132947	2					
ANR	133363	AdditiveExpression	nonce_len + ciphertext -> len		132947	0		+			
ANR	133364	Identifier	nonce_len		132947	0					
ANR	133365	PtrMemberAccess	ciphertext -> len		132947	1					
ANR	133366	Identifier	ciphertext		132947	0					
ANR	133367	Identifier	len		132947	1					
ANR	133368	ExpressionStatement	plaintext -> len = nonce_len + ciphertext -> len	440:4:12978:13022	132947	16	True				
ANR	133369	AssignmentExpression	plaintext -> len = nonce_len + ciphertext -> len		132947	0		=			
ANR	133370	PtrMemberAccess	plaintext -> len		132947	0					
ANR	133371	Identifier	plaintext		132947	0					
ANR	133372	Identifier	len		132947	1					
ANR	133373	AdditiveExpression	nonce_len + ciphertext -> len		132947	1		+			
ANR	133374	Identifier	nonce_len		132947	0					
ANR	133375	PtrMemberAccess	ciphertext -> len		132947	1					
ANR	133376	Identifier	ciphertext		132947	0					
ANR	133377	Identifier	len		132947	1					
ANR	133378	ReturnStatement	return CRYPTO_OK ;	442:4:13029:13045	132947	17	True				
ANR	133379	Identifier	CRYPTO_OK		132947	0					
ANR	133380	ReturnType	int		132947	1					
ANR	133381	Identifier	stream_encrypt		132947	2					
ANR	133382	ParameterList	"buffer_t * plaintext , cipher_ctx_t * cipher_ctx , size_t capacity"		132947	3					
ANR	133383	Parameter	buffer_t * plaintext	378:15:10599:10617	132947	0	True				
ANR	133384	ParameterType	buffer_t *		132947	0					
ANR	133385	Identifier	plaintext		132947	1					
ANR	133386	Parameter	cipher_ctx_t * cipher_ctx	378:36:10620:10643	132947	1	True				
ANR	133387	ParameterType	cipher_ctx_t *		132947	0					
ANR	133388	Identifier	cipher_ctx		132947	1					
ANR	133389	Parameter	size_t capacity	378:62:10646:10660	132947	2	True				
ANR	133390	ParameterType	size_t		132947	0					
ANR	133391	Identifier	capacity		132947	1					
ANR	133392	CFGEntryNode	ENTRY		132947		True				
ANR	133393	CFGExitNode	EXIT		132947		True				
ANR	133394	Symbol	cipher_ctx -> cipher		132947						
ANR	133395	Symbol	CRYPTO_ERROR		132947						
ANR	133396	Symbol	CRYPTO_OK		132947						
ANR	133397	Symbol	cipher_ctx -> init		132947						
ANR	133398	Symbol	cipher_ctx -> nonce		132947						
ANR	133399	Symbol	capacity		132947						
ANR	133400	Symbol	* * cipher_ctx		132947						
ANR	133401	Symbol	* plaintext		132947						
ANR	133402	Symbol	cipher_ctx -> cipher -> nonce_len		132947						
ANR	133403	Symbol	tmp		132947						
ANR	133404	Symbol	plaintext -> data		132947						
ANR	133405	Symbol	cipher -> key		132947						
ANR	133406	Symbol	* cipher_ctx -> cipher		132947						
ANR	133407	Symbol	SODIUM_BLOCK_SIZE		132947						
ANR	133408	Symbol	cipher		132947						
ANR	133409	Symbol	padding		132947						
ANR	133410	Symbol	ciphertext		132947						
ANR	133411	Symbol	ciphertext -> len		132947						
ANR	133412	Symbol	cipher_ctx		132947						
ANR	133413	Symbol	NULL		132947						
ANR	133414	Symbol	err		132947						
ANR	133415	Symbol	* cipher_ctx		132947						
ANR	133416	Symbol	* cipher		132947						
ANR	133417	Symbol	nonce_len		132947						
ANR	133418	Symbol	& ciphertext -> len		132947						
ANR	133419	Symbol	plaintext		132947						
ANR	133420	Symbol	cipher_ctx -> counter		132947						
ANR	133421	Symbol	plaintext -> len		132947						
ANR	133422	Symbol	SALSA20		132947						
ANR	133423	Symbol	ciphertext -> data		132947						
ANR	133424	Symbol	cipher -> method		132947						
ANR	133425	Symbol	& tmp		132947						
ANR	133426	Symbol	cipher_ctx_update		132947						
ANR	133427	Symbol	* ciphertext		132947						
ANR	133428	Function	stream_decrypt_all	445:0:13050:14913							
ANR	133429	FunctionDef	"stream_decrypt_all (buffer_t * ciphertext , cipher_t * cipher , size_t capacity)"		133428	0					
ANR	133430	CompoundStatement		447:0:13130:14913	133428	0					
ANR	133431	IdentifierDeclStatement	size_t nonce_len = cipher -> nonce_len ;	448:4:13136:13172	133428	0	True				
ANR	133432	IdentifierDecl	nonce_len = cipher -> nonce_len		133428	0					
ANR	133433	IdentifierDeclType	size_t		133428	0					
ANR	133434	Identifier	nonce_len		133428	1					
ANR	133435	AssignmentExpression	nonce_len = cipher -> nonce_len		133428	2		=			
ANR	133436	Identifier	nonce_len		133428	0					
ANR	133437	PtrMemberAccess	cipher -> nonce_len		133428	1					
ANR	133438	Identifier	cipher		133428	0					
ANR	133439	Identifier	nonce_len		133428	1					
ANR	133440	IdentifierDeclStatement	int err = CRYPTO_OK ;	449:4:13178:13206	133428	1	True				
ANR	133441	IdentifierDecl	err = CRYPTO_OK		133428	0					
ANR	133442	IdentifierDeclType	int		133428	0					
ANR	133443	Identifier	err		133428	1					
ANR	133444	AssignmentExpression	err = CRYPTO_OK		133428	2		=			
ANR	133445	Identifier	CRYPTO_OK		133428	0					
ANR	133446	Identifier	CRYPTO_OK		133428	1					
ANR	133447	IfStatement	if ( ciphertext -> len <= nonce_len )		133428	2					
ANR	133448	Condition	ciphertext -> len <= nonce_len	451:8:13217:13244	133428	0	True				
ANR	133449	RelationalExpression	ciphertext -> len <= nonce_len		133428	0		<=			
ANR	133450	PtrMemberAccess	ciphertext -> len		133428	0					
ANR	133451	Identifier	ciphertext		133428	0					
ANR	133452	Identifier	len		133428	1					
ANR	133453	Identifier	nonce_len		133428	1					
ANR	133454	CompoundStatement		5:38:116:116	133428	1					
ANR	133455	ReturnStatement	return CRYPTO_ERROR ;	452:8:13257:13276	133428	0	True				
ANR	133456	Identifier	CRYPTO_ERROR		133428	0					
ANR	133457	IdentifierDeclStatement	cipher_ctx_t cipher_ctx ;	455:4:13289:13312	133428	3	True				
ANR	133458	IdentifierDecl	cipher_ctx		133428	0					
ANR	133459	IdentifierDeclType	cipher_ctx_t		133428	0					
ANR	133460	Identifier	cipher_ctx		133428	1					
ANR	133461	ExpressionStatement	"stream_ctx_init ( cipher , & cipher_ctx , 0 )"	456:4:13318:13357	133428	4	True				
ANR	133462	CallExpression	"stream_ctx_init ( cipher , & cipher_ctx , 0 )"		133428	0					
ANR	133463	Callee	stream_ctx_init		133428	0					
ANR	133464	Identifier	stream_ctx_init		133428	0					
ANR	133465	ArgumentList	cipher		133428	1					
ANR	133466	Argument	cipher		133428	0					
ANR	133467	Identifier	cipher		133428	0					
ANR	133468	Argument	& cipher_ctx		133428	1					
ANR	133469	UnaryOperationExpression	& cipher_ctx		133428	0					
ANR	133470	UnaryOperator	&		133428	0					
ANR	133471	Identifier	cipher_ctx		133428	1					
ANR	133472	Argument	0		133428	2					
ANR	133473	PrimaryExpression	0		133428	0					
ANR	133474	Statement	static	458:4:13364:13369	133428	5	True				
ANR	133475	IdentifierDeclStatement	"buffer_t tmp = { 0 , 0 , 0 , NULL } ;"	458:11:13371:13403	133428	6	True				
ANR	133476	IdentifierDecl	"tmp = { 0 , 0 , 0 , NULL }"		133428	0					
ANR	133477	IdentifierDeclType	buffer_t		133428	0					
ANR	133478	Identifier	tmp		133428	1					
ANR	133479	AssignmentExpression	"tmp = { 0 , 0 , 0 , NULL }"		133428	2		=			
ANR	133480	Identifier	tmp		133428	0					
ANR	133481	InitializerList	0		133428	1					
ANR	133482	PrimaryExpression	0		133428	0					
ANR	133483	PrimaryExpression	0		133428	1					
ANR	133484	PrimaryExpression	0		133428	2					
ANR	133485	Identifier	NULL		133428	3					
ANR	133486	ExpressionStatement	"brealloc ( & tmp , ciphertext -> len , capacity )"	459:4:13409:13450	133428	7	True				
ANR	133487	CallExpression	"brealloc ( & tmp , ciphertext -> len , capacity )"		133428	0					
ANR	133488	Callee	brealloc		133428	0					
ANR	133489	Identifier	brealloc		133428	0					
ANR	133490	ArgumentList	& tmp		133428	1					
ANR	133491	Argument	& tmp		133428	0					
ANR	133492	UnaryOperationExpression	& tmp		133428	0					
ANR	133493	UnaryOperator	&		133428	0					
ANR	133494	Identifier	tmp		133428	1					
ANR	133495	Argument	ciphertext -> len		133428	1					
ANR	133496	PtrMemberAccess	ciphertext -> len		133428	0					
ANR	133497	Identifier	ciphertext		133428	0					
ANR	133498	Identifier	len		133428	1					
ANR	133499	Argument	capacity		133428	2					
ANR	133500	Identifier	capacity		133428	0					
ANR	133501	IdentifierDeclStatement	buffer_t * plaintext = & tmp ;	460:4:13456:13482	133428	8	True				
ANR	133502	IdentifierDecl	* plaintext = & tmp		133428	0					
ANR	133503	IdentifierDeclType	buffer_t *		133428	0					
ANR	133504	Identifier	plaintext		133428	1					
ANR	133505	AssignmentExpression	* plaintext = & tmp		133428	2		=			
ANR	133506	Identifier	plaintext		133428	0					
ANR	133507	UnaryOperationExpression	& tmp		133428	1					
ANR	133508	UnaryOperator	&		133428	0					
ANR	133509	Identifier	tmp		133428	1					
ANR	133510	ExpressionStatement	plaintext -> len = ciphertext -> len - nonce_len	461:4:13488:13532	133428	9	True				
ANR	133511	AssignmentExpression	plaintext -> len = ciphertext -> len - nonce_len		133428	0		=			
ANR	133512	PtrMemberAccess	plaintext -> len		133428	0					
ANR	133513	Identifier	plaintext		133428	0					
ANR	133514	Identifier	len		133428	1					
ANR	133515	AdditiveExpression	ciphertext -> len - nonce_len		133428	1		-			
ANR	133516	PtrMemberAccess	ciphertext -> len		133428	0					
ANR	133517	Identifier	ciphertext		133428	0					
ANR	133518	Identifier	len		133428	1					
ANR	133519	Identifier	nonce_len		133428	1					
ANR	133520	IdentifierDeclStatement	uint8_t * nonce = cipher_ctx . nonce ;	463:4:13539:13572	133428	10	True				
ANR	133521	IdentifierDecl	* nonce = cipher_ctx . nonce		133428	0					
ANR	133522	IdentifierDeclType	uint8_t *		133428	0					
ANR	133523	Identifier	nonce		133428	1					
ANR	133524	AssignmentExpression	* nonce = cipher_ctx . nonce		133428	2		=			
ANR	133525	Identifier	nonce		133428	0					
ANR	133526	MemberAccess	cipher_ctx . nonce		133428	1					
ANR	133527	Identifier	cipher_ctx		133428	0					
ANR	133528	Identifier	nonce		133428	1					
ANR	133529	ExpressionStatement	"memcpy ( nonce , ciphertext -> data , nonce_len )"	464:4:13578:13620	133428	11	True				
ANR	133530	CallExpression	"memcpy ( nonce , ciphertext -> data , nonce_len )"		133428	0					
ANR	133531	Callee	memcpy		133428	0					
ANR	133532	Identifier	memcpy		133428	0					
ANR	133533	ArgumentList	nonce		133428	1					
ANR	133534	Argument	nonce		133428	0					
ANR	133535	Identifier	nonce		133428	0					
ANR	133536	Argument	ciphertext -> data		133428	1					
ANR	133537	PtrMemberAccess	ciphertext -> data		133428	0					
ANR	133538	Identifier	ciphertext		133428	0					
ANR	133539	Identifier	data		133428	1					
ANR	133540	Argument	nonce_len		133428	2					
ANR	133541	Identifier	nonce_len		133428	0					
ANR	133542	IfStatement	"if ( ppbloom_check ( ( void * ) nonce , nonce_len ) == 1 )"		133428	12					
ANR	133543	Condition	"ppbloom_check ( ( void * ) nonce , nonce_len ) == 1"	466:8:13631:13674	133428	0	True				
ANR	133544	EqualityExpression	"ppbloom_check ( ( void * ) nonce , nonce_len ) == 1"		133428	0		==			
ANR	133545	CallExpression	"ppbloom_check ( ( void * ) nonce , nonce_len )"		133428	0					
ANR	133546	Callee	ppbloom_check		133428	0					
ANR	133547	Identifier	ppbloom_check		133428	0					
ANR	133548	ArgumentList	( void * ) nonce		133428	1					
ANR	133549	Argument	( void * ) nonce		133428	0					
ANR	133550	CastExpression	( void * ) nonce		133428	0					
ANR	133551	CastTarget	void *		133428	0					
ANR	133552	Identifier	nonce		133428	1					
ANR	133553	Argument	nonce_len		133428	1					
ANR	133554	Identifier	nonce_len		133428	0					
ANR	133555	PrimaryExpression	1		133428	1					
ANR	133556	CompoundStatement		20:54:546:546	133428	1					
ANR	133557	ExpressionStatement	"LOGE ( ""crypto: stream: repeat IV detected"" )"	467:8:13687:13729	133428	0	True				
ANR	133558	CallExpression	"LOGE ( ""crypto: stream: repeat IV detected"" )"		133428	0					
ANR	133559	Callee	LOGE		133428	0					
ANR	133560	Identifier	LOGE		133428	0					
ANR	133561	ArgumentList	"""crypto: stream: repeat IV detected"""		133428	1					
ANR	133562	Argument	"""crypto: stream: repeat IV detected"""		133428	0					
ANR	133563	PrimaryExpression	"""crypto: stream: repeat IV detected"""		133428	0					
ANR	133564	ReturnStatement	return CRYPTO_ERROR ;	468:8:13739:13758	133428	1	True				
ANR	133565	Identifier	CRYPTO_ERROR		133428	0					
ANR	133566	ExpressionStatement	"cipher_ctx_set_nonce ( & cipher_ctx , nonce , nonce_len , 0 )"	471:4:13771:13825	133428	13	True				
ANR	133567	CallExpression	"cipher_ctx_set_nonce ( & cipher_ctx , nonce , nonce_len , 0 )"		133428	0					
ANR	133568	Callee	cipher_ctx_set_nonce		133428	0					
ANR	133569	Identifier	cipher_ctx_set_nonce		133428	0					
ANR	133570	ArgumentList	& cipher_ctx		133428	1					
ANR	133571	Argument	& cipher_ctx		133428	0					
ANR	133572	UnaryOperationExpression	& cipher_ctx		133428	0					
ANR	133573	UnaryOperator	&		133428	0					
ANR	133574	Identifier	cipher_ctx		133428	1					
ANR	133575	Argument	nonce		133428	1					
ANR	133576	Identifier	nonce		133428	0					
ANR	133577	Argument	nonce_len		133428	2					
ANR	133578	Identifier	nonce_len		133428	0					
ANR	133579	Argument	0		133428	3					
ANR	133580	PrimaryExpression	0		133428	0					
ANR	133581	IfStatement	if ( cipher -> method >= SALSA20 )		133428	14					
ANR	133582	Condition	cipher -> method >= SALSA20	473:8:13836:13860	133428	0	True				
ANR	133583	RelationalExpression	cipher -> method >= SALSA20		133428	0		>=			
ANR	133584	PtrMemberAccess	cipher -> method		133428	0					
ANR	133585	Identifier	cipher		133428	0					
ANR	133586	Identifier	method		133428	1					
ANR	133587	Identifier	SALSA20		133428	1					
ANR	133588	CompoundStatement		27:35:732:732	133428	1					
ANR	133589	ExpressionStatement	"crypto_stream_xor_ic ( ( uint8_t * ) plaintext -> data , ( const uint8_t * ) ( ciphertext -> data + nonce_len ) , ( uint64_t ) ( ciphertext -> len - nonce_len ) , ( const uint8_t * ) nonce , 0 , cipher -> key , cipher -> method )"	474:8:13873:14154	133428	0	True				
ANR	133590	CallExpression	"crypto_stream_xor_ic ( ( uint8_t * ) plaintext -> data , ( const uint8_t * ) ( ciphertext -> data + nonce_len ) , ( uint64_t ) ( ciphertext -> len - nonce_len ) , ( const uint8_t * ) nonce , 0 , cipher -> key , cipher -> method )"		133428	0					
ANR	133591	Callee	crypto_stream_xor_ic		133428	0					
ANR	133592	Identifier	crypto_stream_xor_ic		133428	0					
ANR	133593	ArgumentList	( uint8_t * ) plaintext -> data		133428	1					
ANR	133594	Argument	( uint8_t * ) plaintext -> data		133428	0					
ANR	133595	CastExpression	( uint8_t * ) plaintext -> data		133428	0					
ANR	133596	CastTarget	uint8_t *		133428	0					
ANR	133597	PtrMemberAccess	plaintext -> data		133428	1					
ANR	133598	Identifier	plaintext		133428	0					
ANR	133599	Identifier	data		133428	1					
ANR	133600	Argument	( const uint8_t * ) ( ciphertext -> data + nonce_len )		133428	1					
ANR	133601	CastExpression	( const uint8_t * ) ( ciphertext -> data + nonce_len )		133428	0					
ANR	133602	CastTarget	const uint8_t *		133428	0					
ANR	133603	AdditiveExpression	ciphertext -> data + nonce_len		133428	1		+			
ANR	133604	PtrMemberAccess	ciphertext -> data		133428	0					
ANR	133605	Identifier	ciphertext		133428	0					
ANR	133606	Identifier	data		133428	1					
ANR	133607	Identifier	nonce_len		133428	1					
ANR	133608	Argument	( uint64_t ) ( ciphertext -> len - nonce_len )		133428	2					
ANR	133609	CastExpression	( uint64_t ) ( ciphertext -> len - nonce_len )		133428	0					
ANR	133610	CastTarget	uint64_t		133428	0					
ANR	133611	AdditiveExpression	ciphertext -> len - nonce_len		133428	1		-			
ANR	133612	PtrMemberAccess	ciphertext -> len		133428	0					
ANR	133613	Identifier	ciphertext		133428	0					
ANR	133614	Identifier	len		133428	1					
ANR	133615	Identifier	nonce_len		133428	1					
ANR	133616	Argument	( const uint8_t * ) nonce		133428	3					
ANR	133617	CastExpression	( const uint8_t * ) nonce		133428	0					
ANR	133618	CastTarget	const uint8_t *		133428	0					
ANR	133619	Identifier	nonce		133428	1					
ANR	133620	Argument	0		133428	4					
ANR	133621	PrimaryExpression	0		133428	0					
ANR	133622	Argument	cipher -> key		133428	5					
ANR	133623	PtrMemberAccess	cipher -> key		133428	0					
ANR	133624	Identifier	cipher		133428	0					
ANR	133625	Identifier	key		133428	1					
ANR	133626	Argument	cipher -> method		133428	6					
ANR	133627	PtrMemberAccess	cipher -> method		133428	0					
ANR	133628	Identifier	cipher		133428	0					
ANR	133629	Identifier	method		133428	1					
ANR	133630	ElseStatement	else		133428	0					
ANR	133631	CompoundStatement		32:11:1036:1036	133428	0					
ANR	133632	ExpressionStatement	"err = cipher_ctx_update ( & cipher_ctx , ( uint8_t * ) plaintext -> data , & plaintext -> len , ( const uint8_t * ) ( ciphertext -> data + nonce_len ) , ciphertext -> len - nonce_len )"	479:8:14177:14400	133428	0	True				
ANR	133633	AssignmentExpression	"err = cipher_ctx_update ( & cipher_ctx , ( uint8_t * ) plaintext -> data , & plaintext -> len , ( const uint8_t * ) ( ciphertext -> data + nonce_len ) , ciphertext -> len - nonce_len )"		133428	0		=			
ANR	133634	Identifier	err		133428	0					
ANR	133635	CallExpression	"cipher_ctx_update ( & cipher_ctx , ( uint8_t * ) plaintext -> data , & plaintext -> len , ( const uint8_t * ) ( ciphertext -> data + nonce_len ) , ciphertext -> len - nonce_len )"		133428	1					
ANR	133636	Callee	cipher_ctx_update		133428	0					
ANR	133637	Identifier	cipher_ctx_update		133428	0					
ANR	133638	ArgumentList	& cipher_ctx		133428	1					
ANR	133639	Argument	& cipher_ctx		133428	0					
ANR	133640	UnaryOperationExpression	& cipher_ctx		133428	0					
ANR	133641	UnaryOperator	&		133428	0					
ANR	133642	Identifier	cipher_ctx		133428	1					
ANR	133643	Argument	( uint8_t * ) plaintext -> data		133428	1					
ANR	133644	CastExpression	( uint8_t * ) plaintext -> data		133428	0					
ANR	133645	CastTarget	uint8_t *		133428	0					
ANR	133646	PtrMemberAccess	plaintext -> data		133428	1					
ANR	133647	Identifier	plaintext		133428	0					
ANR	133648	Identifier	data		133428	1					
ANR	133649	Argument	& plaintext -> len		133428	2					
ANR	133650	UnaryOperationExpression	& plaintext -> len		133428	0					
ANR	133651	UnaryOperator	&		133428	0					
ANR	133652	PtrMemberAccess	plaintext -> len		133428	1					
ANR	133653	Identifier	plaintext		133428	0					
ANR	133654	Identifier	len		133428	1					
ANR	133655	Argument	( const uint8_t * ) ( ciphertext -> data + nonce_len )		133428	3					
ANR	133656	CastExpression	( const uint8_t * ) ( ciphertext -> data + nonce_len )		133428	0					
ANR	133657	CastTarget	const uint8_t *		133428	0					
ANR	133658	AdditiveExpression	ciphertext -> data + nonce_len		133428	1		+			
ANR	133659	PtrMemberAccess	ciphertext -> data		133428	0					
ANR	133660	Identifier	ciphertext		133428	0					
ANR	133661	Identifier	data		133428	1					
ANR	133662	Identifier	nonce_len		133428	1					
ANR	133663	Argument	ciphertext -> len - nonce_len		133428	4					
ANR	133664	AdditiveExpression	ciphertext -> len - nonce_len		133428	0		-			
ANR	133665	PtrMemberAccess	ciphertext -> len		133428	0					
ANR	133666	Identifier	ciphertext		133428	0					
ANR	133667	Identifier	len		133428	1					
ANR	133668	Identifier	nonce_len		133428	1					
ANR	133669	ExpressionStatement	stream_ctx_release ( & cipher_ctx )	484:4:14413:14444	133428	15	True				
ANR	133670	CallExpression	stream_ctx_release ( & cipher_ctx )		133428	0					
ANR	133671	Callee	stream_ctx_release		133428	0					
ANR	133672	Identifier	stream_ctx_release		133428	0					
ANR	133673	ArgumentList	& cipher_ctx		133428	1					
ANR	133674	Argument	& cipher_ctx		133428	0					
ANR	133675	UnaryOperationExpression	& cipher_ctx		133428	0					
ANR	133676	UnaryOperator	&		133428	0					
ANR	133677	Identifier	cipher_ctx		133428	1					
ANR	133678	IfStatement	if ( err )		133428	16					
ANR	133679	Condition	err	486:8:14455:14457	133428	0	True				
ANR	133680	Identifier	err		133428	0					
ANR	133681	ReturnStatement	return CRYPTO_ERROR ;	487:8:14468:14487	133428	1	True				
ANR	133682	Identifier	CRYPTO_ERROR		133428	0					
ANR	133683	ExpressionStatement	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"	490:4:14510:14556	133428	17	True				
ANR	133684	CallExpression	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"		133428	0					
ANR	133685	Callee	dump		133428	0					
ANR	133686	Identifier	dump		133428	0					
ANR	133687	ArgumentList	"""PLAIN"""		133428	1					
ANR	133688	Argument	"""PLAIN"""		133428	0					
ANR	133689	PrimaryExpression	"""PLAIN"""		133428	0					
ANR	133690	Argument	plaintext -> data		133428	1					
ANR	133691	PtrMemberAccess	plaintext -> data		133428	0					
ANR	133692	Identifier	plaintext		133428	0					
ANR	133693	Identifier	data		133428	1					
ANR	133694	Argument	plaintext -> len		133428	2					
ANR	133695	PtrMemberAccess	plaintext -> len		133428	0					
ANR	133696	Identifier	plaintext		133428	0					
ANR	133697	Identifier	len		133428	1					
ANR	133698	ExpressionStatement	"dump ( ""CIPHER"" , ciphertext -> data + nonce_len , ciphertext -> len - nonce_len )"	491:4:14562:14635	133428	18	True				
ANR	133699	CallExpression	"dump ( ""CIPHER"" , ciphertext -> data + nonce_len , ciphertext -> len - nonce_len )"		133428	0					
ANR	133700	Callee	dump		133428	0					
ANR	133701	Identifier	dump		133428	0					
ANR	133702	ArgumentList	"""CIPHER"""		133428	1					
ANR	133703	Argument	"""CIPHER"""		133428	0					
ANR	133704	PrimaryExpression	"""CIPHER"""		133428	0					
ANR	133705	Argument	ciphertext -> data + nonce_len		133428	1					
ANR	133706	AdditiveExpression	ciphertext -> data + nonce_len		133428	0		+			
ANR	133707	PtrMemberAccess	ciphertext -> data		133428	0					
ANR	133708	Identifier	ciphertext		133428	0					
ANR	133709	Identifier	data		133428	1					
ANR	133710	Identifier	nonce_len		133428	1					
ANR	133711	Argument	ciphertext -> len - nonce_len		133428	2					
ANR	133712	AdditiveExpression	ciphertext -> len - nonce_len		133428	0		-			
ANR	133713	PtrMemberAccess	ciphertext -> len		133428	0					
ANR	133714	Identifier	ciphertext		133428	0					
ANR	133715	Identifier	len		133428	1					
ANR	133716	Identifier	nonce_len		133428	1					
ANR	133717	ExpressionStatement	"dump ( ""NONCE"" , ciphertext -> data , nonce_len )"	492:4:14641:14683	133428	19	True				
ANR	133718	CallExpression	"dump ( ""NONCE"" , ciphertext -> data , nonce_len )"		133428	0					
ANR	133719	Callee	dump		133428	0					
ANR	133720	Identifier	dump		133428	0					
ANR	133721	ArgumentList	"""NONCE"""		133428	1					
ANR	133722	Argument	"""NONCE"""		133428	0					
ANR	133723	PrimaryExpression	"""NONCE"""		133428	0					
ANR	133724	Argument	ciphertext -> data		133428	1					
ANR	133725	PtrMemberAccess	ciphertext -> data		133428	0					
ANR	133726	Identifier	ciphertext		133428	0					
ANR	133727	Identifier	data		133428	1					
ANR	133728	Argument	nonce_len		133428	2					
ANR	133729	Identifier	nonce_len		133428	0					
ANR	133730	ExpressionStatement	"ppbloom_add ( ( void * ) nonce , nonce_len )"	495:4:14697:14734	133428	20	True				
ANR	133731	CallExpression	"ppbloom_add ( ( void * ) nonce , nonce_len )"		133428	0					
ANR	133732	Callee	ppbloom_add		133428	0					
ANR	133733	Identifier	ppbloom_add		133428	0					
ANR	133734	ArgumentList	( void * ) nonce		133428	1					
ANR	133735	Argument	( void * ) nonce		133428	0					
ANR	133736	CastExpression	( void * ) nonce		133428	0					
ANR	133737	CastTarget	void *		133428	0					
ANR	133738	Identifier	nonce		133428	1					
ANR	133739	Argument	nonce_len		133428	1					
ANR	133740	Identifier	nonce_len		133428	0					
ANR	133741	ExpressionStatement	"brealloc ( ciphertext , plaintext -> len , capacity )"	497:4:14741:14787	133428	21	True				
ANR	133742	CallExpression	"brealloc ( ciphertext , plaintext -> len , capacity )"		133428	0					
ANR	133743	Callee	brealloc		133428	0					
ANR	133744	Identifier	brealloc		133428	0					
ANR	133745	ArgumentList	ciphertext		133428	1					
ANR	133746	Argument	ciphertext		133428	0					
ANR	133747	Identifier	ciphertext		133428	0					
ANR	133748	Argument	plaintext -> len		133428	1					
ANR	133749	PtrMemberAccess	plaintext -> len		133428	0					
ANR	133750	Identifier	plaintext		133428	0					
ANR	133751	Identifier	len		133428	1					
ANR	133752	Argument	capacity		133428	2					
ANR	133753	Identifier	capacity		133428	0					
ANR	133754	ExpressionStatement	"memcpy ( ciphertext -> data , plaintext -> data , plaintext -> len )"	498:4:14793:14850	133428	22	True				
ANR	133755	CallExpression	"memcpy ( ciphertext -> data , plaintext -> data , plaintext -> len )"		133428	0					
ANR	133756	Callee	memcpy		133428	0					
ANR	133757	Identifier	memcpy		133428	0					
ANR	133758	ArgumentList	ciphertext -> data		133428	1					
ANR	133759	Argument	ciphertext -> data		133428	0					
ANR	133760	PtrMemberAccess	ciphertext -> data		133428	0					
ANR	133761	Identifier	ciphertext		133428	0					
ANR	133762	Identifier	data		133428	1					
ANR	133763	Argument	plaintext -> data		133428	1					
ANR	133764	PtrMemberAccess	plaintext -> data		133428	0					
ANR	133765	Identifier	plaintext		133428	0					
ANR	133766	Identifier	data		133428	1					
ANR	133767	Argument	plaintext -> len		133428	2					
ANR	133768	PtrMemberAccess	plaintext -> len		133428	0					
ANR	133769	Identifier	plaintext		133428	0					
ANR	133770	Identifier	len		133428	1					
ANR	133771	ExpressionStatement	ciphertext -> len = plaintext -> len	499:4:14856:14888	133428	23	True				
ANR	133772	AssignmentExpression	ciphertext -> len = plaintext -> len		133428	0		=			
ANR	133773	PtrMemberAccess	ciphertext -> len		133428	0					
ANR	133774	Identifier	ciphertext		133428	0					
ANR	133775	Identifier	len		133428	1					
ANR	133776	PtrMemberAccess	plaintext -> len		133428	1					
ANR	133777	Identifier	plaintext		133428	0					
ANR	133778	Identifier	len		133428	1					
ANR	133779	ReturnStatement	return CRYPTO_OK ;	501:4:14895:14911	133428	24	True				
ANR	133780	Identifier	CRYPTO_OK		133428	0					
ANR	133781	ReturnType	int		133428	1					
ANR	133782	Identifier	stream_decrypt_all		133428	2					
ANR	133783	ParameterList	"buffer_t * ciphertext , cipher_t * cipher , size_t capacity"		133428	3					
ANR	133784	Parameter	buffer_t * ciphertext	446:19:13073:13092	133428	0	True				
ANR	133785	ParameterType	buffer_t *		133428	0					
ANR	133786	Identifier	ciphertext		133428	1					
ANR	133787	Parameter	cipher_t * cipher	446:41:13095:13110	133428	1	True				
ANR	133788	ParameterType	cipher_t *		133428	0					
ANR	133789	Identifier	cipher		133428	1					
ANR	133790	Parameter	size_t capacity	446:59:13113:13127	133428	2	True				
ANR	133791	ParameterType	size_t		133428	0					
ANR	133792	Identifier	capacity		133428	1					
ANR	133793	CFGEntryNode	ENTRY		133428		True				
ANR	133794	CFGExitNode	EXIT		133428		True				
ANR	133795	Symbol	CRYPTO_ERROR		133428						
ANR	133796	Symbol	CRYPTO_OK		133428						
ANR	133797	Symbol	& plaintext -> len		133428						
ANR	133798	Symbol	capacity		133428						
ANR	133799	Symbol	* plaintext		133428						
ANR	133800	Symbol	tmp		133428						
ANR	133801	Symbol	plaintext -> data		133428						
ANR	133802	Symbol	cipher -> key		133428						
ANR	133803	Symbol	cipher		133428						
ANR	133804	Symbol	ciphertext		133428						
ANR	133805	Symbol	ciphertext -> len		133428						
ANR	133806	Symbol	cipher_ctx		133428						
ANR	133807	Symbol	NULL		133428						
ANR	133808	Symbol	err		133428						
ANR	133809	Symbol	* cipher		133428						
ANR	133810	Symbol	ppbloom_check		133428						
ANR	133811	Symbol	nonce_len		133428						
ANR	133812	Symbol	& cipher_ctx		133428						
ANR	133813	Symbol	plaintext		133428						
ANR	133814	Symbol	nonce		133428						
ANR	133815	Symbol	cipher_ctx . nonce		133428						
ANR	133816	Symbol	plaintext -> len		133428						
ANR	133817	Symbol	SALSA20		133428						
ANR	133818	Symbol	ciphertext -> data		133428						
ANR	133819	Symbol	cipher -> method		133428						
ANR	133820	Symbol	cipher -> nonce_len		133428						
ANR	133821	Symbol	& tmp		133428						
ANR	133822	Symbol	cipher_ctx_update		133428						
ANR	133823	Symbol	* ciphertext		133428						
ANR	133824	Function	stream_decrypt	504:0:14916:18530							
ANR	133825	FunctionDef	"stream_decrypt (buffer_t * ciphertext , cipher_ctx_t * cipher_ctx , size_t capacity)"		133824	0					
ANR	133826	CompoundStatement		506:0:15000:18530	133824	0					
ANR	133827	IfStatement	if ( cipher_ctx == NULL )		133824	0					
ANR	133828	Condition	cipher_ctx == NULL	507:8:15010:15027	133824	0	True				
ANR	133829	EqualityExpression	cipher_ctx == NULL		133824	0		==			
ANR	133830	Identifier	cipher_ctx		133824	0					
ANR	133831	Identifier	NULL		133824	1					
ANR	133832	ReturnStatement	return CRYPTO_ERROR ;	508:8:15038:15057	133824	1	True				
ANR	133833	Identifier	CRYPTO_ERROR		133824	0					
ANR	133834	IdentifierDeclStatement	cipher_t * cipher = cipher_ctx -> cipher ;	510:4:15064:15101	133824	1	True				
ANR	133835	IdentifierDecl	* cipher = cipher_ctx -> cipher		133824	0					
ANR	133836	IdentifierDeclType	cipher_t *		133824	0					
ANR	133837	Identifier	cipher		133824	1					
ANR	133838	AssignmentExpression	* cipher = cipher_ctx -> cipher		133824	2		=			
ANR	133839	Identifier	cipher		133824	0					
ANR	133840	PtrMemberAccess	cipher_ctx -> cipher		133824	1					
ANR	133841	Identifier	cipher_ctx		133824	0					
ANR	133842	Identifier	cipher		133824	1					
ANR	133843	Statement	static	512:4:15108:15113	133824	2	True				
ANR	133844	IdentifierDeclStatement	"buffer_t tmp = { 0 , 0 , 0 , NULL } ;"	512:11:15115:15147	133824	3	True				
ANR	133845	IdentifierDecl	"tmp = { 0 , 0 , 0 , NULL }"		133824	0					
ANR	133846	IdentifierDeclType	buffer_t		133824	0					
ANR	133847	Identifier	tmp		133824	1					
ANR	133848	AssignmentExpression	"tmp = { 0 , 0 , 0 , NULL }"		133824	2		=			
ANR	133849	Identifier	tmp		133824	0					
ANR	133850	InitializerList	0		133824	1					
ANR	133851	PrimaryExpression	0		133824	0					
ANR	133852	PrimaryExpression	0		133824	1					
ANR	133853	PrimaryExpression	0		133824	2					
ANR	133854	Identifier	NULL		133824	3					
ANR	133855	IdentifierDeclStatement	int err = CRYPTO_OK ;	514:4:15154:15173	133824	4	True				
ANR	133856	IdentifierDecl	err = CRYPTO_OK		133824	0					
ANR	133857	IdentifierDeclType	int		133824	0					
ANR	133858	Identifier	err		133824	1					
ANR	133859	AssignmentExpression	err = CRYPTO_OK		133824	2		=			
ANR	133860	Identifier	CRYPTO_OK		133824	0					
ANR	133861	Identifier	CRYPTO_OK		133824	1					
ANR	133862	ExpressionStatement	"brealloc ( & tmp , ciphertext -> len , capacity )"	516:4:15180:15221	133824	5	True				
ANR	133863	CallExpression	"brealloc ( & tmp , ciphertext -> len , capacity )"		133824	0					
ANR	133864	Callee	brealloc		133824	0					
ANR	133865	Identifier	brealloc		133824	0					
ANR	133866	ArgumentList	& tmp		133824	1					
ANR	133867	Argument	& tmp		133824	0					
ANR	133868	UnaryOperationExpression	& tmp		133824	0					
ANR	133869	UnaryOperator	&		133824	0					
ANR	133870	Identifier	tmp		133824	1					
ANR	133871	Argument	ciphertext -> len		133824	1					
ANR	133872	PtrMemberAccess	ciphertext -> len		133824	0					
ANR	133873	Identifier	ciphertext		133824	0					
ANR	133874	Identifier	len		133824	1					
ANR	133875	Argument	capacity		133824	2					
ANR	133876	Identifier	capacity		133824	0					
ANR	133877	IdentifierDeclStatement	buffer_t * plaintext = & tmp ;	517:4:15227:15253	133824	6	True				
ANR	133878	IdentifierDecl	* plaintext = & tmp		133824	0					
ANR	133879	IdentifierDeclType	buffer_t *		133824	0					
ANR	133880	Identifier	plaintext		133824	1					
ANR	133881	AssignmentExpression	* plaintext = & tmp		133824	2		=			
ANR	133882	Identifier	plaintext		133824	0					
ANR	133883	UnaryOperationExpression	& tmp		133824	1					
ANR	133884	UnaryOperator	&		133824	0					
ANR	133885	Identifier	tmp		133824	1					
ANR	133886	ExpressionStatement	plaintext -> len = ciphertext -> len	518:4:15259:15291	133824	7	True				
ANR	133887	AssignmentExpression	plaintext -> len = ciphertext -> len		133824	0		=			
ANR	133888	PtrMemberAccess	plaintext -> len		133824	0					
ANR	133889	Identifier	plaintext		133824	0					
ANR	133890	Identifier	len		133824	1					
ANR	133891	PtrMemberAccess	ciphertext -> len		133824	1					
ANR	133892	Identifier	ciphertext		133824	0					
ANR	133893	Identifier	len		133824	1					
ANR	133894	IfStatement	if ( ! cipher_ctx -> init )		133824	8					
ANR	133895	Condition	! cipher_ctx -> init	520:8:15302:15318	133824	0	True				
ANR	133896	UnaryOperationExpression	! cipher_ctx -> init		133824	0					
ANR	133897	UnaryOperator	!		133824	0					
ANR	133898	PtrMemberAccess	cipher_ctx -> init		133824	1					
ANR	133899	Identifier	cipher_ctx		133824	0					
ANR	133900	Identifier	init		133824	1					
ANR	133901	CompoundStatement		37:8:1185:1221	133824	1					
ANR	133902	IfStatement	if ( cipher_ctx -> chunk == NULL )		133824	0					
ANR	133903	Condition	cipher_ctx -> chunk == NULL	521:12:15335:15359	133824	0	True				
ANR	133904	EqualityExpression	cipher_ctx -> chunk == NULL		133824	0		==			
ANR	133905	PtrMemberAccess	cipher_ctx -> chunk		133824	0					
ANR	133906	Identifier	cipher_ctx		133824	0					
ANR	133907	Identifier	chunk		133824	1					
ANR	133908	Identifier	NULL		133824	1					
ANR	133909	CompoundStatement		16:39:361:361	133824	1					
ANR	133910	ExpressionStatement	cipher_ctx -> chunk = ( buffer_t * ) ss_malloc ( sizeof ( buffer_t ) )	522:12:15376:15435	133824	0	True				
ANR	133911	AssignmentExpression	cipher_ctx -> chunk = ( buffer_t * ) ss_malloc ( sizeof ( buffer_t ) )		133824	0		=			
ANR	133912	PtrMemberAccess	cipher_ctx -> chunk		133824	0					
ANR	133913	Identifier	cipher_ctx		133824	0					
ANR	133914	Identifier	chunk		133824	1					
ANR	133915	CastExpression	( buffer_t * ) ss_malloc ( sizeof ( buffer_t ) )		133824	1					
ANR	133916	CastTarget	buffer_t *		133824	0					
ANR	133917	CallExpression	ss_malloc ( sizeof ( buffer_t ) )		133824	1					
ANR	133918	Callee	ss_malloc		133824	0					
ANR	133919	Identifier	ss_malloc		133824	0					
ANR	133920	ArgumentList	sizeof ( buffer_t )		133824	1					
ANR	133921	Argument	sizeof ( buffer_t )		133824	0					
ANR	133922	SizeofExpression	sizeof ( buffer_t )		133824	0					
ANR	133923	Sizeof	sizeof		133824	0					
ANR	133924	SizeofOperand	buffer_t		133824	1					
ANR	133925	ExpressionStatement	"memset ( cipher_ctx -> chunk , 0 , sizeof ( buffer_t ) )"	523:12:15449:15495	133824	1	True				
ANR	133926	CallExpression	"memset ( cipher_ctx -> chunk , 0 , sizeof ( buffer_t ) )"		133824	0					
ANR	133927	Callee	memset		133824	0					
ANR	133928	Identifier	memset		133824	0					
ANR	133929	ArgumentList	cipher_ctx -> chunk		133824	1					
ANR	133930	Argument	cipher_ctx -> chunk		133824	0					
ANR	133931	PtrMemberAccess	cipher_ctx -> chunk		133824	0					
ANR	133932	Identifier	cipher_ctx		133824	0					
ANR	133933	Identifier	chunk		133824	1					
ANR	133934	Argument	0		133824	1					
ANR	133935	PrimaryExpression	0		133824	0					
ANR	133936	Argument	sizeof ( buffer_t )		133824	2					
ANR	133937	SizeofExpression	sizeof ( buffer_t )		133824	0					
ANR	133938	Sizeof	sizeof		133824	0					
ANR	133939	SizeofOperand	buffer_t		133824	1					
ANR	133940	ExpressionStatement	"balloc ( cipher_ctx -> chunk , cipher -> nonce_len )"	524:12:15509:15553	133824	2	True				
ANR	133941	CallExpression	"balloc ( cipher_ctx -> chunk , cipher -> nonce_len )"		133824	0					
ANR	133942	Callee	balloc		133824	0					
ANR	133943	Identifier	balloc		133824	0					
ANR	133944	ArgumentList	cipher_ctx -> chunk		133824	1					
ANR	133945	Argument	cipher_ctx -> chunk		133824	0					
ANR	133946	PtrMemberAccess	cipher_ctx -> chunk		133824	0					
ANR	133947	Identifier	cipher_ctx		133824	0					
ANR	133948	Identifier	chunk		133824	1					
ANR	133949	Argument	cipher -> nonce_len		133824	1					
ANR	133950	PtrMemberAccess	cipher -> nonce_len		133824	0					
ANR	133951	Identifier	cipher		133824	0					
ANR	133952	Identifier	nonce_len		133824	1					
ANR	133953	IdentifierDeclStatement	"size_t left_len = min ( cipher -> nonce_len - cipher_ctx -> chunk -> len , ciphertext -> len ) ;"	527:8:15574:15686	133824	1	True				
ANR	133954	IdentifierDecl	"left_len = min ( cipher -> nonce_len - cipher_ctx -> chunk -> len , ciphertext -> len )"		133824	0					
ANR	133955	IdentifierDeclType	size_t		133824	0					
ANR	133956	Identifier	left_len		133824	1					
ANR	133957	AssignmentExpression	"left_len = min ( cipher -> nonce_len - cipher_ctx -> chunk -> len , ciphertext -> len )"		133824	2		=			
ANR	133958	Identifier	left_len		133824	0					
ANR	133959	CallExpression	"min ( cipher -> nonce_len - cipher_ctx -> chunk -> len , ciphertext -> len )"		133824	1					
ANR	133960	Callee	min		133824	0					
ANR	133961	Identifier	min		133824	0					
ANR	133962	ArgumentList	cipher -> nonce_len - cipher_ctx -> chunk -> len		133824	1					
ANR	133963	Argument	cipher -> nonce_len - cipher_ctx -> chunk -> len		133824	0					
ANR	133964	AdditiveExpression	cipher -> nonce_len - cipher_ctx -> chunk -> len		133824	0		-			
ANR	133965	PtrMemberAccess	cipher -> nonce_len		133824	0					
ANR	133966	Identifier	cipher		133824	0					
ANR	133967	Identifier	nonce_len		133824	1					
ANR	133968	PtrMemberAccess	cipher_ctx -> chunk -> len		133824	1					
ANR	133969	PtrMemberAccess	cipher_ctx -> chunk		133824	0					
ANR	133970	Identifier	cipher_ctx		133824	0					
ANR	133971	Identifier	chunk		133824	1					
ANR	133972	Identifier	len		133824	1					
ANR	133973	Argument	ciphertext -> len		133824	1					
ANR	133974	PtrMemberAccess	ciphertext -> len		133824	0					
ANR	133975	Identifier	ciphertext		133824	0					
ANR	133976	Identifier	len		133824	1					
ANR	133977	IfStatement	if ( left_len > 0 )		133824	2					
ANR	133978	Condition	left_len > 0	530:12:15701:15712	133824	0	True				
ANR	133979	RelationalExpression	left_len > 0		133824	0		>			
ANR	133980	Identifier	left_len		133824	0					
ANR	133981	PrimaryExpression	0		133824	1					
ANR	133982	CompoundStatement		25:26:714:714	133824	1					
ANR	133983	ExpressionStatement	"memcpy ( cipher_ctx -> chunk -> data + cipher_ctx -> chunk -> len , ciphertext -> data , left_len )"	531:12:15729:15813	133824	0	True				
ANR	133984	CallExpression	"memcpy ( cipher_ctx -> chunk -> data + cipher_ctx -> chunk -> len , ciphertext -> data , left_len )"		133824	0					
ANR	133985	Callee	memcpy		133824	0					
ANR	133986	Identifier	memcpy		133824	0					
ANR	133987	ArgumentList	cipher_ctx -> chunk -> data + cipher_ctx -> chunk -> len		133824	1					
ANR	133988	Argument	cipher_ctx -> chunk -> data + cipher_ctx -> chunk -> len		133824	0					
ANR	133989	AdditiveExpression	cipher_ctx -> chunk -> data + cipher_ctx -> chunk -> len		133824	0		+			
ANR	133990	PtrMemberAccess	cipher_ctx -> chunk -> data		133824	0					
ANR	133991	PtrMemberAccess	cipher_ctx -> chunk		133824	0					
ANR	133992	Identifier	cipher_ctx		133824	0					
ANR	133993	Identifier	chunk		133824	1					
ANR	133994	Identifier	data		133824	1					
ANR	133995	PtrMemberAccess	cipher_ctx -> chunk -> len		133824	1					
ANR	133996	PtrMemberAccess	cipher_ctx -> chunk		133824	0					
ANR	133997	Identifier	cipher_ctx		133824	0					
ANR	133998	Identifier	chunk		133824	1					
ANR	133999	Identifier	len		133824	1					
ANR	134000	Argument	ciphertext -> data		133824	1					
ANR	134001	PtrMemberAccess	ciphertext -> data		133824	0					
ANR	134002	Identifier	ciphertext		133824	0					
ANR	134003	Identifier	data		133824	1					
ANR	134004	Argument	left_len		133824	2					
ANR	134005	Identifier	left_len		133824	0					
ANR	134006	ExpressionStatement	"memmove ( ciphertext -> data , ciphertext -> data + left_len , ciphertext -> len - left_len )"	532:12:15827:15929	133824	1	True				
ANR	134007	CallExpression	"memmove ( ciphertext -> data , ciphertext -> data + left_len , ciphertext -> len - left_len )"		133824	0					
ANR	134008	Callee	memmove		133824	0					
ANR	134009	Identifier	memmove		133824	0					
ANR	134010	ArgumentList	ciphertext -> data		133824	1					
ANR	134011	Argument	ciphertext -> data		133824	0					
ANR	134012	PtrMemberAccess	ciphertext -> data		133824	0					
ANR	134013	Identifier	ciphertext		133824	0					
ANR	134014	Identifier	data		133824	1					
ANR	134015	Argument	ciphertext -> data + left_len		133824	1					
ANR	134016	AdditiveExpression	ciphertext -> data + left_len		133824	0		+			
ANR	134017	PtrMemberAccess	ciphertext -> data		133824	0					
ANR	134018	Identifier	ciphertext		133824	0					
ANR	134019	Identifier	data		133824	1					
ANR	134020	Identifier	left_len		133824	1					
ANR	134021	Argument	ciphertext -> len - left_len		133824	2					
ANR	134022	AdditiveExpression	ciphertext -> len - left_len		133824	0		-			
ANR	134023	PtrMemberAccess	ciphertext -> len		133824	0					
ANR	134024	Identifier	ciphertext		133824	0					
ANR	134025	Identifier	len		133824	1					
ANR	134026	Identifier	left_len		133824	1					
ANR	134027	ExpressionStatement	cipher_ctx -> chunk -> len += left_len	534:12:15943:15977	133824	2	True				
ANR	134028	AssignmentExpression	cipher_ctx -> chunk -> len += left_len		133824	0		+=			
ANR	134029	PtrMemberAccess	cipher_ctx -> chunk -> len		133824	0					
ANR	134030	PtrMemberAccess	cipher_ctx -> chunk		133824	0					
ANR	134031	Identifier	cipher_ctx		133824	0					
ANR	134032	Identifier	chunk		133824	1					
ANR	134033	Identifier	len		133824	1					
ANR	134034	Identifier	left_len		133824	1					
ANR	134035	ExpressionStatement	ciphertext -> len -= left_len	535:12:15991:16025	133824	3	True				
ANR	134036	AssignmentExpression	ciphertext -> len -= left_len		133824	0		-=			
ANR	134037	PtrMemberAccess	ciphertext -> len		133824	0					
ANR	134038	Identifier	ciphertext		133824	0					
ANR	134039	Identifier	len		133824	1					
ANR	134040	Identifier	left_len		133824	1					
ANR	134041	IfStatement	if ( cipher_ctx -> chunk -> len < cipher -> nonce_len )		133824	3					
ANR	134042	Condition	cipher_ctx -> chunk -> len < cipher -> nonce_len	538:12:16050:16091	133824	0	True				
ANR	134043	RelationalExpression	cipher_ctx -> chunk -> len < cipher -> nonce_len		133824	0		<			
ANR	134044	PtrMemberAccess	cipher_ctx -> chunk -> len		133824	0					
ANR	134045	PtrMemberAccess	cipher_ctx -> chunk		133824	0					
ANR	134046	Identifier	cipher_ctx		133824	0					
ANR	134047	Identifier	chunk		133824	1					
ANR	134048	Identifier	len		133824	1					
ANR	134049	PtrMemberAccess	cipher -> nonce_len		133824	1					
ANR	134050	Identifier	cipher		133824	0					
ANR	134051	Identifier	nonce_len		133824	1					
ANR	134052	ReturnStatement	return CRYPTO_NEED_MORE ;	539:12:16106:16129	133824	1	True				
ANR	134053	Identifier	CRYPTO_NEED_MORE		133824	0					
ANR	134054	IdentifierDeclStatement	uint8_t * nonce = cipher_ctx -> nonce ;	541:8:16140:16176	133824	4	True				
ANR	134055	IdentifierDecl	* nonce = cipher_ctx -> nonce		133824	0					
ANR	134056	IdentifierDeclType	uint8_t *		133824	0					
ANR	134057	Identifier	nonce		133824	1					
ANR	134058	AssignmentExpression	* nonce = cipher_ctx -> nonce		133824	2		=			
ANR	134059	Identifier	nonce		133824	0					
ANR	134060	PtrMemberAccess	cipher_ctx -> nonce		133824	1					
ANR	134061	Identifier	cipher_ctx		133824	0					
ANR	134062	Identifier	nonce		133824	1					
ANR	134063	IdentifierDeclStatement	size_t nonce_len = cipher -> nonce_len ;	542:8:16186:16222	133824	5	True				
ANR	134064	IdentifierDecl	nonce_len = cipher -> nonce_len		133824	0					
ANR	134065	IdentifierDeclType	size_t		133824	0					
ANR	134066	Identifier	nonce_len		133824	1					
ANR	134067	AssignmentExpression	nonce_len = cipher -> nonce_len		133824	2		=			
ANR	134068	Identifier	nonce_len		133824	0					
ANR	134069	PtrMemberAccess	cipher -> nonce_len		133824	1					
ANR	134070	Identifier	cipher		133824	0					
ANR	134071	Identifier	nonce_len		133824	1					
ANR	134072	ExpressionStatement	plaintext -> len -= left_len	543:8:16232:16258	133824	6	True				
ANR	134073	AssignmentExpression	plaintext -> len -= left_len		133824	0		-=			
ANR	134074	PtrMemberAccess	plaintext -> len		133824	0					
ANR	134075	Identifier	plaintext		133824	0					
ANR	134076	Identifier	len		133824	1					
ANR	134077	Identifier	left_len		133824	1					
ANR	134078	ExpressionStatement	"memcpy ( nonce , cipher_ctx -> chunk -> data , nonce_len )"	545:8:16269:16318	133824	7	True				
ANR	134079	CallExpression	"memcpy ( nonce , cipher_ctx -> chunk -> data , nonce_len )"		133824	0					
ANR	134080	Callee	memcpy		133824	0					
ANR	134081	Identifier	memcpy		133824	0					
ANR	134082	ArgumentList	nonce		133824	1					
ANR	134083	Argument	nonce		133824	0					
ANR	134084	Identifier	nonce		133824	0					
ANR	134085	Argument	cipher_ctx -> chunk -> data		133824	1					
ANR	134086	PtrMemberAccess	cipher_ctx -> chunk -> data		133824	0					
ANR	134087	PtrMemberAccess	cipher_ctx -> chunk		133824	0					
ANR	134088	Identifier	cipher_ctx		133824	0					
ANR	134089	Identifier	chunk		133824	1					
ANR	134090	Identifier	data		133824	1					
ANR	134091	Argument	nonce_len		133824	2					
ANR	134092	Identifier	nonce_len		133824	0					
ANR	134093	ExpressionStatement	"cipher_ctx_set_nonce ( cipher_ctx , nonce , nonce_len , 0 )"	546:8:16328:16381	133824	8	True				
ANR	134094	CallExpression	"cipher_ctx_set_nonce ( cipher_ctx , nonce , nonce_len , 0 )"		133824	0					
ANR	134095	Callee	cipher_ctx_set_nonce		133824	0					
ANR	134096	Identifier	cipher_ctx_set_nonce		133824	0					
ANR	134097	ArgumentList	cipher_ctx		133824	1					
ANR	134098	Argument	cipher_ctx		133824	0					
ANR	134099	Identifier	cipher_ctx		133824	0					
ANR	134100	Argument	nonce		133824	1					
ANR	134101	Identifier	nonce		133824	0					
ANR	134102	Argument	nonce_len		133824	2					
ANR	134103	Identifier	nonce_len		133824	0					
ANR	134104	Argument	0		133824	3					
ANR	134105	PrimaryExpression	0		133824	0					
ANR	134106	ExpressionStatement	cipher_ctx -> counter = 0	547:8:16391:16414	133824	9	True				
ANR	134107	AssignmentExpression	cipher_ctx -> counter = 0		133824	0		=			
ANR	134108	PtrMemberAccess	cipher_ctx -> counter		133824	0					
ANR	134109	Identifier	cipher_ctx		133824	0					
ANR	134110	Identifier	counter		133824	1					
ANR	134111	PrimaryExpression	0		133824	1					
ANR	134112	ExpressionStatement	cipher_ctx -> init = 1	548:8:16424:16447	133824	10	True				
ANR	134113	AssignmentExpression	cipher_ctx -> init = 1		133824	0		=			
ANR	134114	PtrMemberAccess	cipher_ctx -> init		133824	0					
ANR	134115	Identifier	cipher_ctx		133824	0					
ANR	134116	Identifier	init		133824	1					
ANR	134117	PrimaryExpression	1		133824	1					
ANR	134118	IfStatement	if ( cipher -> method >= RC4_MD5 )		133824	11					
ANR	134119	Condition	cipher -> method >= RC4_MD5	550:12:16462:16486	133824	0	True				
ANR	134120	RelationalExpression	cipher -> method >= RC4_MD5		133824	0		>=			
ANR	134121	PtrMemberAccess	cipher -> method		133824	0					
ANR	134122	Identifier	cipher		133824	0					
ANR	134123	Identifier	method		133824	1					
ANR	134124	Identifier	RC4_MD5		133824	1					
ANR	134125	CompoundStatement		45:39:1488:1488	133824	1					
ANR	134126	IfStatement	"if ( ppbloom_check ( ( void * ) nonce , nonce_len ) == 1 )"		133824	0					
ANR	134127	Condition	"ppbloom_check ( ( void * ) nonce , nonce_len ) == 1"	551:16:16507:16550	133824	0	True				
ANR	134128	EqualityExpression	"ppbloom_check ( ( void * ) nonce , nonce_len ) == 1"		133824	0		==			
ANR	134129	CallExpression	"ppbloom_check ( ( void * ) nonce , nonce_len )"		133824	0					
ANR	134130	Callee	ppbloom_check		133824	0					
ANR	134131	Identifier	ppbloom_check		133824	0					
ANR	134132	ArgumentList	( void * ) nonce		133824	1					
ANR	134133	Argument	( void * ) nonce		133824	0					
ANR	134134	CastExpression	( void * ) nonce		133824	0					
ANR	134135	CastTarget	void *		133824	0					
ANR	134136	Identifier	nonce		133824	1					
ANR	134137	Argument	nonce_len		133824	1					
ANR	134138	Identifier	nonce_len		133824	0					
ANR	134139	PrimaryExpression	1		133824	1					
ANR	134140	CompoundStatement		46:62:1552:1552	133824	1					
ANR	134141	ExpressionStatement	"LOGE ( ""crypto: stream: repeat IV detected"" )"	552:16:16571:16613	133824	0	True				
ANR	134142	CallExpression	"LOGE ( ""crypto: stream: repeat IV detected"" )"		133824	0					
ANR	134143	Callee	LOGE		133824	0					
ANR	134144	Identifier	LOGE		133824	0					
ANR	134145	ArgumentList	"""crypto: stream: repeat IV detected"""		133824	1					
ANR	134146	Argument	"""crypto: stream: repeat IV detected"""		133824	0					
ANR	134147	PrimaryExpression	"""crypto: stream: repeat IV detected"""		133824	0					
ANR	134148	ReturnStatement	return CRYPTO_ERROR ;	553:16:16631:16650	133824	1	True				
ANR	134149	Identifier	CRYPTO_ERROR		133824	0					
ANR	134150	IfStatement	if ( ciphertext -> len <= 0 )		133824	9					
ANR	134151	Condition	ciphertext -> len <= 0	558:8:16691:16710	133824	0	True				
ANR	134152	RelationalExpression	ciphertext -> len <= 0		133824	0		<=			
ANR	134153	PtrMemberAccess	ciphertext -> len		133824	0					
ANR	134154	Identifier	ciphertext		133824	0					
ANR	134155	Identifier	len		133824	1					
ANR	134156	PrimaryExpression	0		133824	1					
ANR	134157	ReturnStatement	return CRYPTO_NEED_MORE ;	559:8:16721:16744	133824	1	True				
ANR	134158	Identifier	CRYPTO_NEED_MORE		133824	0					
ANR	134159	IfStatement	if ( cipher -> method >= SALSA20 )		133824	10					
ANR	134160	Condition	cipher -> method >= SALSA20	561:8:16755:16779	133824	0	True				
ANR	134161	RelationalExpression	cipher -> method >= SALSA20		133824	0		>=			
ANR	134162	PtrMemberAccess	cipher -> method		133824	0					
ANR	134163	Identifier	cipher		133824	0					
ANR	134164	Identifier	method		133824	1					
ANR	134165	Identifier	SALSA20		133824	1					
ANR	134166	CompoundStatement		57:8:1791:1844	133824	1					
ANR	134167	IdentifierDeclStatement	int padding = cipher_ctx -> counter % SODIUM_BLOCK_SIZE ;	562:8:16792:16845	133824	0	True				
ANR	134168	IdentifierDecl	padding = cipher_ctx -> counter % SODIUM_BLOCK_SIZE		133824	0					
ANR	134169	IdentifierDeclType	int		133824	0					
ANR	134170	Identifier	padding		133824	1					
ANR	134171	AssignmentExpression	padding = cipher_ctx -> counter % SODIUM_BLOCK_SIZE		133824	2		=			
ANR	134172	Identifier	padding		133824	0					
ANR	134173	MultiplicativeExpression	cipher_ctx -> counter % SODIUM_BLOCK_SIZE		133824	1		%			
ANR	134174	PtrMemberAccess	cipher_ctx -> counter		133824	0					
ANR	134175	Identifier	cipher_ctx		133824	0					
ANR	134176	Identifier	counter		133824	1					
ANR	134177	Identifier	SODIUM_BLOCK_SIZE		133824	1					
ANR	134178	ExpressionStatement	"brealloc ( plaintext , ( plaintext -> len + padding ) * 2 , capacity )"	563:8:16855:16916	133824	1	True				
ANR	134179	CallExpression	"brealloc ( plaintext , ( plaintext -> len + padding ) * 2 , capacity )"		133824	0					
ANR	134180	Callee	brealloc		133824	0					
ANR	134181	Identifier	brealloc		133824	0					
ANR	134182	ArgumentList	plaintext		133824	1					
ANR	134183	Argument	plaintext		133824	0					
ANR	134184	Identifier	plaintext		133824	0					
ANR	134185	Argument	( plaintext -> len + padding ) * 2		133824	1					
ANR	134186	MultiplicativeExpression	( plaintext -> len + padding ) * 2		133824	0		*			
ANR	134187	AdditiveExpression	plaintext -> len + padding		133824	0		+			
ANR	134188	PtrMemberAccess	plaintext -> len		133824	0					
ANR	134189	Identifier	plaintext		133824	0					
ANR	134190	Identifier	len		133824	1					
ANR	134191	Identifier	padding		133824	1					
ANR	134192	PrimaryExpression	2		133824	1					
ANR	134193	Argument	capacity		133824	2					
ANR	134194	Identifier	capacity		133824	0					
ANR	134195	IfStatement	if ( padding )		133824	2					
ANR	134196	Condition	padding	565:12:16931:16937	133824	0	True				
ANR	134197	Identifier	padding		133824	0					
ANR	134198	CompoundStatement		60:21:1939:1939	133824	1					
ANR	134199	ExpressionStatement	"brealloc ( ciphertext , ciphertext -> len + padding , capacity )"	566:12:16954:17011	133824	0	True				
ANR	134200	CallExpression	"brealloc ( ciphertext , ciphertext -> len + padding , capacity )"		133824	0					
ANR	134201	Callee	brealloc		133824	0					
ANR	134202	Identifier	brealloc		133824	0					
ANR	134203	ArgumentList	ciphertext		133824	1					
ANR	134204	Argument	ciphertext		133824	0					
ANR	134205	Identifier	ciphertext		133824	0					
ANR	134206	Argument	ciphertext -> len + padding		133824	1					
ANR	134207	AdditiveExpression	ciphertext -> len + padding		133824	0		+			
ANR	134208	PtrMemberAccess	ciphertext -> len		133824	0					
ANR	134209	Identifier	ciphertext		133824	0					
ANR	134210	Identifier	len		133824	1					
ANR	134211	Identifier	padding		133824	1					
ANR	134212	Argument	capacity		133824	2					
ANR	134213	Identifier	capacity		133824	0					
ANR	134214	ExpressionStatement	"memmove ( ciphertext -> data + padding , ciphertext -> data , ciphertext -> len )"	567:12:17025:17115	133824	1	True				
ANR	134215	CallExpression	"memmove ( ciphertext -> data + padding , ciphertext -> data , ciphertext -> len )"		133824	0					
ANR	134216	Callee	memmove		133824	0					
ANR	134217	Identifier	memmove		133824	0					
ANR	134218	ArgumentList	ciphertext -> data + padding		133824	1					
ANR	134219	Argument	ciphertext -> data + padding		133824	0					
ANR	134220	AdditiveExpression	ciphertext -> data + padding		133824	0		+			
ANR	134221	PtrMemberAccess	ciphertext -> data		133824	0					
ANR	134222	Identifier	ciphertext		133824	0					
ANR	134223	Identifier	data		133824	1					
ANR	134224	Identifier	padding		133824	1					
ANR	134225	Argument	ciphertext -> data		133824	1					
ANR	134226	PtrMemberAccess	ciphertext -> data		133824	0					
ANR	134227	Identifier	ciphertext		133824	0					
ANR	134228	Identifier	data		133824	1					
ANR	134229	Argument	ciphertext -> len		133824	2					
ANR	134230	PtrMemberAccess	ciphertext -> len		133824	0					
ANR	134231	Identifier	ciphertext		133824	0					
ANR	134232	Identifier	len		133824	1					
ANR	134233	ExpressionStatement	"sodium_memzero ( ciphertext -> data , padding )"	569:12:17129:17170	133824	2	True				
ANR	134234	CallExpression	"sodium_memzero ( ciphertext -> data , padding )"		133824	0					
ANR	134235	Callee	sodium_memzero		133824	0					
ANR	134236	Identifier	sodium_memzero		133824	0					
ANR	134237	ArgumentList	ciphertext -> data		133824	1					
ANR	134238	Argument	ciphertext -> data		133824	0					
ANR	134239	PtrMemberAccess	ciphertext -> data		133824	0					
ANR	134240	Identifier	ciphertext		133824	0					
ANR	134241	Identifier	data		133824	1					
ANR	134242	Argument	padding		133824	1					
ANR	134243	Identifier	padding		133824	0					
ANR	134244	ExpressionStatement	"crypto_stream_xor_ic ( ( uint8_t * ) plaintext -> data , ( const uint8_t * ) ( ciphertext -> data ) , ( uint64_t ) ( ciphertext -> len + padding ) , ( const uint8_t * ) cipher_ctx -> nonce , cipher_ctx -> counter / SODIUM_BLOCK_SIZE , cipher -> key , cipher -> method )"	571:8:17190:17565	133824	3	True				
ANR	134245	CallExpression	"crypto_stream_xor_ic ( ( uint8_t * ) plaintext -> data , ( const uint8_t * ) ( ciphertext -> data ) , ( uint64_t ) ( ciphertext -> len + padding ) , ( const uint8_t * ) cipher_ctx -> nonce , cipher_ctx -> counter / SODIUM_BLOCK_SIZE , cipher -> key , cipher -> method )"		133824	0					
ANR	134246	Callee	crypto_stream_xor_ic		133824	0					
ANR	134247	Identifier	crypto_stream_xor_ic		133824	0					
ANR	134248	ArgumentList	( uint8_t * ) plaintext -> data		133824	1					
ANR	134249	Argument	( uint8_t * ) plaintext -> data		133824	0					
ANR	134250	CastExpression	( uint8_t * ) plaintext -> data		133824	0					
ANR	134251	CastTarget	uint8_t *		133824	0					
ANR	134252	PtrMemberAccess	plaintext -> data		133824	1					
ANR	134253	Identifier	plaintext		133824	0					
ANR	134254	Identifier	data		133824	1					
ANR	134255	Argument	( const uint8_t * ) ( ciphertext -> data )		133824	1					
ANR	134256	CastExpression	( const uint8_t * ) ( ciphertext -> data )		133824	0					
ANR	134257	CastTarget	const uint8_t *		133824	0					
ANR	134258	PtrMemberAccess	ciphertext -> data		133824	1					
ANR	134259	Identifier	ciphertext		133824	0					
ANR	134260	Identifier	data		133824	1					
ANR	134261	Argument	( uint64_t ) ( ciphertext -> len + padding )		133824	2					
ANR	134262	CastExpression	( uint64_t ) ( ciphertext -> len + padding )		133824	0					
ANR	134263	CastTarget	uint64_t		133824	0					
ANR	134264	AdditiveExpression	ciphertext -> len + padding		133824	1		+			
ANR	134265	PtrMemberAccess	ciphertext -> len		133824	0					
ANR	134266	Identifier	ciphertext		133824	0					
ANR	134267	Identifier	len		133824	1					
ANR	134268	Identifier	padding		133824	1					
ANR	134269	Argument	( const uint8_t * ) cipher_ctx -> nonce		133824	3					
ANR	134270	CastExpression	( const uint8_t * ) cipher_ctx -> nonce		133824	0					
ANR	134271	CastTarget	const uint8_t *		133824	0					
ANR	134272	PtrMemberAccess	cipher_ctx -> nonce		133824	1					
ANR	134273	Identifier	cipher_ctx		133824	0					
ANR	134274	Identifier	nonce		133824	1					
ANR	134275	Argument	cipher_ctx -> counter / SODIUM_BLOCK_SIZE		133824	4					
ANR	134276	MultiplicativeExpression	cipher_ctx -> counter / SODIUM_BLOCK_SIZE		133824	0		/			
ANR	134277	PtrMemberAccess	cipher_ctx -> counter		133824	0					
ANR	134278	Identifier	cipher_ctx		133824	0					
ANR	134279	Identifier	counter		133824	1					
ANR	134280	Identifier	SODIUM_BLOCK_SIZE		133824	1					
ANR	134281	Argument	cipher -> key		133824	5					
ANR	134282	PtrMemberAccess	cipher -> key		133824	0					
ANR	134283	Identifier	cipher		133824	0					
ANR	134284	Identifier	key		133824	1					
ANR	134285	Argument	cipher -> method		133824	6					
ANR	134286	PtrMemberAccess	cipher -> method		133824	0					
ANR	134287	Identifier	cipher		133824	0					
ANR	134288	Identifier	method		133824	1					
ANR	134289	ExpressionStatement	cipher_ctx -> counter += ciphertext -> len	577:8:17575:17613	133824	4	True				
ANR	134290	AssignmentExpression	cipher_ctx -> counter += ciphertext -> len		133824	0		+=			
ANR	134291	PtrMemberAccess	cipher_ctx -> counter		133824	0					
ANR	134292	Identifier	cipher_ctx		133824	0					
ANR	134293	Identifier	counter		133824	1					
ANR	134294	PtrMemberAccess	ciphertext -> len		133824	1					
ANR	134295	Identifier	ciphertext		133824	0					
ANR	134296	Identifier	len		133824	1					
ANR	134297	IfStatement	if ( padding )		133824	5					
ANR	134298	Condition	padding	578:12:17627:17633	133824	0	True				
ANR	134299	Identifier	padding		133824	0					
ANR	134300	CompoundStatement		73:21:2635:2635	133824	1					
ANR	134301	ExpressionStatement	"memmove ( plaintext -> data , plaintext -> data + padding , plaintext -> len )"	579:12:17650:17717	133824	0	True				
ANR	134302	CallExpression	"memmove ( plaintext -> data , plaintext -> data + padding , plaintext -> len )"		133824	0					
ANR	134303	Callee	memmove		133824	0					
ANR	134304	Identifier	memmove		133824	0					
ANR	134305	ArgumentList	plaintext -> data		133824	1					
ANR	134306	Argument	plaintext -> data		133824	0					
ANR	134307	PtrMemberAccess	plaintext -> data		133824	0					
ANR	134308	Identifier	plaintext		133824	0					
ANR	134309	Identifier	data		133824	1					
ANR	134310	Argument	plaintext -> data + padding		133824	1					
ANR	134311	AdditiveExpression	plaintext -> data + padding		133824	0		+			
ANR	134312	PtrMemberAccess	plaintext -> data		133824	0					
ANR	134313	Identifier	plaintext		133824	0					
ANR	134314	Identifier	data		133824	1					
ANR	134315	Identifier	padding		133824	1					
ANR	134316	Argument	plaintext -> len		133824	2					
ANR	134317	PtrMemberAccess	plaintext -> len		133824	0					
ANR	134318	Identifier	plaintext		133824	0					
ANR	134319	Identifier	len		133824	1					
ANR	134320	ElseStatement	else		133824	0					
ANR	134321	CompoundStatement		76:11:2739:2739	133824	0					
ANR	134322	ExpressionStatement	"err = cipher_ctx_update ( cipher_ctx , ( uint8_t * ) plaintext -> data , & plaintext -> len , ( const uint8_t * ) ( ciphertext -> data ) , ciphertext -> len )"	582:8:17750:17948	133824	0	True				
ANR	134323	AssignmentExpression	"err = cipher_ctx_update ( cipher_ctx , ( uint8_t * ) plaintext -> data , & plaintext -> len , ( const uint8_t * ) ( ciphertext -> data ) , ciphertext -> len )"		133824	0		=			
ANR	134324	Identifier	err		133824	0					
ANR	134325	CallExpression	"cipher_ctx_update ( cipher_ctx , ( uint8_t * ) plaintext -> data , & plaintext -> len , ( const uint8_t * ) ( ciphertext -> data ) , ciphertext -> len )"		133824	1					
ANR	134326	Callee	cipher_ctx_update		133824	0					
ANR	134327	Identifier	cipher_ctx_update		133824	0					
ANR	134328	ArgumentList	cipher_ctx		133824	1					
ANR	134329	Argument	cipher_ctx		133824	0					
ANR	134330	Identifier	cipher_ctx		133824	0					
ANR	134331	Argument	( uint8_t * ) plaintext -> data		133824	1					
ANR	134332	CastExpression	( uint8_t * ) plaintext -> data		133824	0					
ANR	134333	CastTarget	uint8_t *		133824	0					
ANR	134334	PtrMemberAccess	plaintext -> data		133824	1					
ANR	134335	Identifier	plaintext		133824	0					
ANR	134336	Identifier	data		133824	1					
ANR	134337	Argument	& plaintext -> len		133824	2					
ANR	134338	UnaryOperationExpression	& plaintext -> len		133824	0					
ANR	134339	UnaryOperator	&		133824	0					
ANR	134340	PtrMemberAccess	plaintext -> len		133824	1					
ANR	134341	Identifier	plaintext		133824	0					
ANR	134342	Identifier	len		133824	1					
ANR	134343	Argument	( const uint8_t * ) ( ciphertext -> data )		133824	3					
ANR	134344	CastExpression	( const uint8_t * ) ( ciphertext -> data )		133824	0					
ANR	134345	CastTarget	const uint8_t *		133824	0					
ANR	134346	PtrMemberAccess	ciphertext -> data		133824	1					
ANR	134347	Identifier	ciphertext		133824	0					
ANR	134348	Identifier	data		133824	1					
ANR	134349	Argument	ciphertext -> len		133824	4					
ANR	134350	PtrMemberAccess	ciphertext -> len		133824	0					
ANR	134351	Identifier	ciphertext		133824	0					
ANR	134352	Identifier	len		133824	1					
ANR	134353	IfStatement	if ( err )		133824	11					
ANR	134354	Condition	err	587:8:17965:17967	133824	0	True				
ANR	134355	Identifier	err		133824	0					
ANR	134356	ReturnStatement	return CRYPTO_ERROR ;	588:8:17978:17997	133824	1	True				
ANR	134357	Identifier	CRYPTO_ERROR		133824	0					
ANR	134358	ExpressionStatement	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"	591:4:18020:18066	133824	12	True				
ANR	134359	CallExpression	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"		133824	0					
ANR	134360	Callee	dump		133824	0					
ANR	134361	Identifier	dump		133824	0					
ANR	134362	ArgumentList	"""PLAIN"""		133824	1					
ANR	134363	Argument	"""PLAIN"""		133824	0					
ANR	134364	PrimaryExpression	"""PLAIN"""		133824	0					
ANR	134365	Argument	plaintext -> data		133824	1					
ANR	134366	PtrMemberAccess	plaintext -> data		133824	0					
ANR	134367	Identifier	plaintext		133824	0					
ANR	134368	Identifier	data		133824	1					
ANR	134369	Argument	plaintext -> len		133824	2					
ANR	134370	PtrMemberAccess	plaintext -> len		133824	0					
ANR	134371	Identifier	plaintext		133824	0					
ANR	134372	Identifier	len		133824	1					
ANR	134373	ExpressionStatement	"dump ( ""CIPHER"" , ciphertext -> data , ciphertext -> len )"	592:4:18072:18121	133824	13	True				
ANR	134374	CallExpression	"dump ( ""CIPHER"" , ciphertext -> data , ciphertext -> len )"		133824	0					
ANR	134375	Callee	dump		133824	0					
ANR	134376	Identifier	dump		133824	0					
ANR	134377	ArgumentList	"""CIPHER"""		133824	1					
ANR	134378	Argument	"""CIPHER"""		133824	0					
ANR	134379	PrimaryExpression	"""CIPHER"""		133824	0					
ANR	134380	Argument	ciphertext -> data		133824	1					
ANR	134381	PtrMemberAccess	ciphertext -> data		133824	0					
ANR	134382	Identifier	ciphertext		133824	0					
ANR	134383	Identifier	data		133824	1					
ANR	134384	Argument	ciphertext -> len		133824	2					
ANR	134385	PtrMemberAccess	ciphertext -> len		133824	0					
ANR	134386	Identifier	ciphertext		133824	0					
ANR	134387	Identifier	len		133824	1					
ANR	134388	ExpressionStatement	"brealloc ( ciphertext , plaintext -> len , capacity )"	595:4:18135:18181	133824	14	True				
ANR	134389	CallExpression	"brealloc ( ciphertext , plaintext -> len , capacity )"		133824	0					
ANR	134390	Callee	brealloc		133824	0					
ANR	134391	Identifier	brealloc		133824	0					
ANR	134392	ArgumentList	ciphertext		133824	1					
ANR	134393	Argument	ciphertext		133824	0					
ANR	134394	Identifier	ciphertext		133824	0					
ANR	134395	Argument	plaintext -> len		133824	1					
ANR	134396	PtrMemberAccess	plaintext -> len		133824	0					
ANR	134397	Identifier	plaintext		133824	0					
ANR	134398	Identifier	len		133824	1					
ANR	134399	Argument	capacity		133824	2					
ANR	134400	Identifier	capacity		133824	0					
ANR	134401	ExpressionStatement	"memcpy ( ciphertext -> data , plaintext -> data , plaintext -> len )"	596:4:18187:18244	133824	15	True				
ANR	134402	CallExpression	"memcpy ( ciphertext -> data , plaintext -> data , plaintext -> len )"		133824	0					
ANR	134403	Callee	memcpy		133824	0					
ANR	134404	Identifier	memcpy		133824	0					
ANR	134405	ArgumentList	ciphertext -> data		133824	1					
ANR	134406	Argument	ciphertext -> data		133824	0					
ANR	134407	PtrMemberAccess	ciphertext -> data		133824	0					
ANR	134408	Identifier	ciphertext		133824	0					
ANR	134409	Identifier	data		133824	1					
ANR	134410	Argument	plaintext -> data		133824	1					
ANR	134411	PtrMemberAccess	plaintext -> data		133824	0					
ANR	134412	Identifier	plaintext		133824	0					
ANR	134413	Identifier	data		133824	1					
ANR	134414	Argument	plaintext -> len		133824	2					
ANR	134415	PtrMemberAccess	plaintext -> len		133824	0					
ANR	134416	Identifier	plaintext		133824	0					
ANR	134417	Identifier	len		133824	1					
ANR	134418	ExpressionStatement	ciphertext -> len = plaintext -> len	597:4:18250:18282	133824	16	True				
ANR	134419	AssignmentExpression	ciphertext -> len = plaintext -> len		133824	0		=			
ANR	134420	PtrMemberAccess	ciphertext -> len		133824	0					
ANR	134421	Identifier	ciphertext		133824	0					
ANR	134422	Identifier	len		133824	1					
ANR	134423	PtrMemberAccess	plaintext -> len		133824	1					
ANR	134424	Identifier	plaintext		133824	0					
ANR	134425	Identifier	len		133824	1					
ANR	134426	IfStatement	if ( cipher_ctx -> init == 1 )		133824	17					
ANR	134427	Condition	cipher_ctx -> init == 1	600:8:18320:18340	133824	0	True				
ANR	134428	EqualityExpression	cipher_ctx -> init == 1		133824	0		==			
ANR	134429	PtrMemberAccess	cipher_ctx -> init		133824	0					
ANR	134430	Identifier	cipher_ctx		133824	0					
ANR	134431	Identifier	init		133824	1					
ANR	134432	PrimaryExpression	1		133824	1					
ANR	134433	CompoundStatement		95:31:3342:3342	133824	1					
ANR	134434	IfStatement	if ( cipher -> method >= RC4_MD5 )		133824	0					
ANR	134435	Condition	cipher -> method >= RC4_MD5	601:12:18357:18381	133824	0	True				
ANR	134436	RelationalExpression	cipher -> method >= RC4_MD5		133824	0		>=			
ANR	134437	PtrMemberAccess	cipher -> method		133824	0					
ANR	134438	Identifier	cipher		133824	0					
ANR	134439	Identifier	method		133824	1					
ANR	134440	Identifier	RC4_MD5		133824	1					
ANR	134441	CompoundStatement		96:39:3383:3383	133824	1					
ANR	134442	ExpressionStatement	"ppbloom_add ( ( void * ) cipher_ctx -> nonce , cipher -> nonce_len )"	602:12:18398:18455	133824	0	True				
ANR	134443	CallExpression	"ppbloom_add ( ( void * ) cipher_ctx -> nonce , cipher -> nonce_len )"		133824	0					
ANR	134444	Callee	ppbloom_add		133824	0					
ANR	134445	Identifier	ppbloom_add		133824	0					
ANR	134446	ArgumentList	( void * ) cipher_ctx -> nonce		133824	1					
ANR	134447	Argument	( void * ) cipher_ctx -> nonce		133824	0					
ANR	134448	CastExpression	( void * ) cipher_ctx -> nonce		133824	0					
ANR	134449	CastTarget	void *		133824	0					
ANR	134450	PtrMemberAccess	cipher_ctx -> nonce		133824	1					
ANR	134451	Identifier	cipher_ctx		133824	0					
ANR	134452	Identifier	nonce		133824	1					
ANR	134453	Argument	cipher -> nonce_len		133824	1					
ANR	134454	PtrMemberAccess	cipher -> nonce_len		133824	0					
ANR	134455	Identifier	cipher		133824	0					
ANR	134456	Identifier	nonce_len		133824	1					
ANR	134457	ExpressionStatement	cipher_ctx -> init = 2	603:12:18469:18489	133824	1	True				
ANR	134458	AssignmentExpression	cipher_ctx -> init = 2		133824	0		=			
ANR	134459	PtrMemberAccess	cipher_ctx -> init		133824	0					
ANR	134460	Identifier	cipher_ctx		133824	0					
ANR	134461	Identifier	init		133824	1					
ANR	134462	PrimaryExpression	2		133824	1					
ANR	134463	ReturnStatement	return CRYPTO_OK ;	607:4:18512:18528	133824	18	True				
ANR	134464	Identifier	CRYPTO_OK		133824	0					
ANR	134465	ReturnType	int		133824	1					
ANR	134466	Identifier	stream_decrypt		133824	2					
ANR	134467	ParameterList	"buffer_t * ciphertext , cipher_ctx_t * cipher_ctx , size_t capacity"		133824	3					
ANR	134468	Parameter	buffer_t * ciphertext	505:15:14935:14954	133824	0	True				
ANR	134469	ParameterType	buffer_t *		133824	0					
ANR	134470	Identifier	ciphertext		133824	1					
ANR	134471	Parameter	cipher_ctx_t * cipher_ctx	505:37:14957:14980	133824	1	True				
ANR	134472	ParameterType	cipher_ctx_t *		133824	0					
ANR	134473	Identifier	cipher_ctx		133824	1					
ANR	134474	Parameter	size_t capacity	505:63:14983:14997	133824	2	True				
ANR	134475	ParameterType	size_t		133824	0					
ANR	134476	Identifier	capacity		133824	1					
ANR	134477	CFGEntryNode	ENTRY		133824		True				
ANR	134478	CFGExitNode	EXIT		133824		True				
ANR	134479	Symbol	cipher_ctx -> cipher		133824						
ANR	134480	Symbol	CRYPTO_NEED_MORE		133824						
ANR	134481	Symbol	CRYPTO_ERROR		133824						
ANR	134482	Symbol	cipher_ctx -> chunk -> len		133824						
ANR	134483	Symbol	CRYPTO_OK		133824						
ANR	134484	Symbol	cipher_ctx -> chunk -> data		133824						
ANR	134485	Symbol	cipher_ctx -> init		133824						
ANR	134486	Symbol	cipher_ctx -> nonce		133824						
ANR	134487	Symbol	& plaintext -> len		133824						
ANR	134488	Symbol	capacity		133824						
ANR	134489	Symbol	* * cipher_ctx		133824						
ANR	134490	Symbol	* plaintext		133824						
ANR	134491	Symbol	min		133824						
ANR	134492	Symbol	tmp		133824						
ANR	134493	Symbol	plaintext -> data		133824						
ANR	134494	Symbol	cipher -> key		133824						
ANR	134495	Symbol	SODIUM_BLOCK_SIZE		133824						
ANR	134496	Symbol	cipher		133824						
ANR	134497	Symbol	padding		133824						
ANR	134498	Symbol	ciphertext		133824						
ANR	134499	Symbol	ciphertext -> len		133824						
ANR	134500	Symbol	cipher_ctx		133824						
ANR	134501	Symbol	NULL		133824						
ANR	134502	Symbol	err		133824						
ANR	134503	Symbol	* cipher_ctx		133824						
ANR	134504	Symbol	* cipher		133824						
ANR	134505	Symbol	ppbloom_check		133824						
ANR	134506	Symbol	nonce_len		133824						
ANR	134507	Symbol	plaintext		133824						
ANR	134508	Symbol	* cipher_ctx -> chunk		133824						
ANR	134509	Symbol	cipher_ctx -> chunk		133824						
ANR	134510	Symbol	nonce		133824						
ANR	134511	Symbol	cipher_ctx -> counter		133824						
ANR	134512	Symbol	plaintext -> len		133824						
ANR	134513	Symbol	left_len		133824						
ANR	134514	Symbol	SALSA20		133824						
ANR	134515	Symbol	ciphertext -> data		133824						
ANR	134516	Symbol	cipher -> method		133824						
ANR	134517	Symbol	ss_malloc		133824						
ANR	134518	Symbol	& tmp		133824						
ANR	134519	Symbol	cipher -> nonce_len		133824						
ANR	134520	Symbol	cipher_ctx_update		133824						
ANR	134521	Symbol	* ciphertext		133824						
ANR	134522	Symbol	RC4_MD5		133824						
ANR	134523	Function	stream_ctx_init	610:0:18533:18837							
ANR	134524	FunctionDef	"stream_ctx_init (cipher_t * cipher , cipher_ctx_t * cipher_ctx , int enc)"		134523	0					
ANR	134525	CompoundStatement		612:0:18607:18837	134523	0					
ANR	134526	ExpressionStatement	"sodium_memzero ( cipher_ctx , sizeof ( cipher_ctx_t ) )"	613:4:18613:18661	134523	0	True				
ANR	134527	CallExpression	"sodium_memzero ( cipher_ctx , sizeof ( cipher_ctx_t ) )"		134523	0					
ANR	134528	Callee	sodium_memzero		134523	0					
ANR	134529	Identifier	sodium_memzero		134523	0					
ANR	134530	ArgumentList	cipher_ctx		134523	1					
ANR	134531	Argument	cipher_ctx		134523	0					
ANR	134532	Identifier	cipher_ctx		134523	0					
ANR	134533	Argument	sizeof ( cipher_ctx_t )		134523	1					
ANR	134534	SizeofExpression	sizeof ( cipher_ctx_t )		134523	0					
ANR	134535	Sizeof	sizeof		134523	0					
ANR	134536	SizeofOperand	cipher_ctx_t		134523	1					
ANR	134537	ExpressionStatement	"stream_cipher_ctx_init ( cipher_ctx , cipher -> method , enc )"	614:4:18667:18722	134523	1	True				
ANR	134538	CallExpression	"stream_cipher_ctx_init ( cipher_ctx , cipher -> method , enc )"		134523	0					
ANR	134539	Callee	stream_cipher_ctx_init		134523	0					
ANR	134540	Identifier	stream_cipher_ctx_init		134523	0					
ANR	134541	ArgumentList	cipher_ctx		134523	1					
ANR	134542	Argument	cipher_ctx		134523	0					
ANR	134543	Identifier	cipher_ctx		134523	0					
ANR	134544	Argument	cipher -> method		134523	1					
ANR	134545	PtrMemberAccess	cipher -> method		134523	0					
ANR	134546	Identifier	cipher		134523	0					
ANR	134547	Identifier	method		134523	1					
ANR	134548	Argument	enc		134523	2					
ANR	134549	Identifier	enc		134523	0					
ANR	134550	ExpressionStatement	cipher_ctx -> cipher = cipher	615:4:18728:18755	134523	2	True				
ANR	134551	AssignmentExpression	cipher_ctx -> cipher = cipher		134523	0		=			
ANR	134552	PtrMemberAccess	cipher_ctx -> cipher		134523	0					
ANR	134553	Identifier	cipher_ctx		134523	0					
ANR	134554	Identifier	cipher		134523	1					
ANR	134555	Identifier	cipher		134523	1					
ANR	134556	IfStatement	if ( enc )		134523	3					
ANR	134557	Condition	enc	617:8:18766:18768	134523	0	True				
ANR	134558	Identifier	enc		134523	0					
ANR	134559	CompoundStatement		6:13:163:163	134523	1					
ANR	134560	ExpressionStatement	"rand_bytes ( cipher_ctx -> nonce , cipher -> nonce_len )"	618:8:18781:18829	134523	0	True				
ANR	134561	CallExpression	"rand_bytes ( cipher_ctx -> nonce , cipher -> nonce_len )"		134523	0					
ANR	134562	Callee	rand_bytes		134523	0					
ANR	134563	Identifier	rand_bytes		134523	0					
ANR	134564	ArgumentList	cipher_ctx -> nonce		134523	1					
ANR	134565	Argument	cipher_ctx -> nonce		134523	0					
ANR	134566	PtrMemberAccess	cipher_ctx -> nonce		134523	0					
ANR	134567	Identifier	cipher_ctx		134523	0					
ANR	134568	Identifier	nonce		134523	1					
ANR	134569	Argument	cipher -> nonce_len		134523	1					
ANR	134570	PtrMemberAccess	cipher -> nonce_len		134523	0					
ANR	134571	Identifier	cipher		134523	0					
ANR	134572	Identifier	nonce_len		134523	1					
ANR	134573	ReturnType	void		134523	1					
ANR	134574	Identifier	stream_ctx_init		134523	2					
ANR	134575	ParameterList	"cipher_t * cipher , cipher_ctx_t * cipher_ctx , int enc"		134523	3					
ANR	134576	Parameter	cipher_t * cipher	611:16:18554:18569	134523	0	True				
ANR	134577	ParameterType	cipher_t *		134523	0					
ANR	134578	Identifier	cipher		134523	1					
ANR	134579	Parameter	cipher_ctx_t * cipher_ctx	611:34:18572:18595	134523	1	True				
ANR	134580	ParameterType	cipher_ctx_t *		134523	0					
ANR	134581	Identifier	cipher_ctx		134523	1					
ANR	134582	Parameter	int enc	611:60:18598:18604	134523	2	True				
ANR	134583	ParameterType	int		134523	0					
ANR	134584	Identifier	enc		134523	1					
ANR	134585	CFGEntryNode	ENTRY		134523		True				
ANR	134586	CFGExitNode	EXIT		134523		True				
ANR	134587	Symbol	cipher		134523						
ANR	134588	Symbol	cipher_ctx -> cipher		134523						
ANR	134589	Symbol	cipher_ctx		134523						
ANR	134590	Symbol	* cipher		134523						
ANR	134591	Symbol	* cipher_ctx		134523						
ANR	134592	Symbol	cipher -> method		134523						
ANR	134593	Symbol	cipher_ctx -> nonce		134523						
ANR	134594	Symbol	cipher -> nonce_len		134523						
ANR	134595	Symbol	enc		134523						
ANR	134596	Function	stream_key_init	622:0:18840:20332							
ANR	134597	FunctionDef	"stream_key_init (int method , const char * pass , const char * key)"		134596	0					
ANR	134598	CompoundStatement		624:0:18914:20332	134596	0					
ANR	134599	IfStatement	if ( method <= TABLE || method >= STREAM_CIPHER_NUM )		134596	0					
ANR	134600	Condition	method <= TABLE || method >= STREAM_CIPHER_NUM	625:8:18924:18969	134596	0	True				
ANR	134601	OrExpression	method <= TABLE || method >= STREAM_CIPHER_NUM		134596	0		||			
ANR	134602	RelationalExpression	method <= TABLE		134596	0		<=			
ANR	134603	Identifier	method		134596	0					
ANR	134604	Identifier	TABLE		134596	1					
ANR	134605	RelationalExpression	method >= STREAM_CIPHER_NUM		134596	1		>=			
ANR	134606	Identifier	method		134596	0					
ANR	134607	Identifier	STREAM_CIPHER_NUM		134596	1					
ANR	134608	CompoundStatement		2:56:57:57	134596	1					
ANR	134609	ExpressionStatement	"LOGE ( ""cipher->key_init(): Illegal method"" )"	626:8:18982:19024	134596	0	True				
ANR	134610	CallExpression	"LOGE ( ""cipher->key_init(): Illegal method"" )"		134596	0					
ANR	134611	Callee	LOGE		134596	0					
ANR	134612	Identifier	LOGE		134596	0					
ANR	134613	ArgumentList	"""cipher->key_init(): Illegal method"""		134596	1					
ANR	134614	Argument	"""cipher->key_init(): Illegal method"""		134596	0					
ANR	134615	PrimaryExpression	"""cipher->key_init(): Illegal method"""		134596	0					
ANR	134616	ReturnStatement	return NULL ;	627:8:19034:19045	134596	1	True				
ANR	134617	Identifier	NULL		134596	0					
ANR	134618	IdentifierDeclStatement	cipher_t * cipher = ( cipher_t * ) ss_malloc ( sizeof ( cipher_t ) ) ;	630:4:19058:19116	134596	1	True				
ANR	134619	IdentifierDecl	* cipher = ( cipher_t * ) ss_malloc ( sizeof ( cipher_t ) )		134596	0					
ANR	134620	IdentifierDeclType	cipher_t *		134596	0					
ANR	134621	Identifier	cipher		134596	1					
ANR	134622	AssignmentExpression	* cipher = ( cipher_t * ) ss_malloc ( sizeof ( cipher_t ) )		134596	2		=			
ANR	134623	Identifier	cipher		134596	0					
ANR	134624	CastExpression	( cipher_t * ) ss_malloc ( sizeof ( cipher_t ) )		134596	1					
ANR	134625	CastTarget	cipher_t *		134596	0					
ANR	134626	CallExpression	ss_malloc ( sizeof ( cipher_t ) )		134596	1					
ANR	134627	Callee	ss_malloc		134596	0					
ANR	134628	Identifier	ss_malloc		134596	0					
ANR	134629	ArgumentList	sizeof ( cipher_t )		134596	1					
ANR	134630	Argument	sizeof ( cipher_t )		134596	0					
ANR	134631	SizeofExpression	sizeof ( cipher_t )		134596	0					
ANR	134632	Sizeof	sizeof		134596	0					
ANR	134633	SizeofOperand	cipher_t		134596	1					
ANR	134634	ExpressionStatement	"memset ( cipher , 0 , sizeof ( cipher_t ) )"	631:4:19122:19157	134596	2	True				
ANR	134635	CallExpression	"memset ( cipher , 0 , sizeof ( cipher_t ) )"		134596	0					
ANR	134636	Callee	memset		134596	0					
ANR	134637	Identifier	memset		134596	0					
ANR	134638	ArgumentList	cipher		134596	1					
ANR	134639	Argument	cipher		134596	0					
ANR	134640	Identifier	cipher		134596	0					
ANR	134641	Argument	0		134596	1					
ANR	134642	PrimaryExpression	0		134596	0					
ANR	134643	Argument	sizeof ( cipher_t )		134596	2					
ANR	134644	SizeofExpression	sizeof ( cipher_t )		134596	0					
ANR	134645	Sizeof	sizeof		134596	0					
ANR	134646	SizeofOperand	cipher_t		134596	1					
ANR	134647	IfStatement	if ( method == SALSA20 || method == CHACHA20 || method == CHACHA20IETF )		134596	3					
ANR	134648	Condition	method == SALSA20 || method == CHACHA20 || method == CHACHA20IETF	633:8:19168:19232	134596	0	True				
ANR	134649	OrExpression	method == SALSA20 || method == CHACHA20 || method == CHACHA20IETF		134596	0		||			
ANR	134650	EqualityExpression	method == SALSA20		134596	0		==			
ANR	134651	Identifier	method		134596	0					
ANR	134652	Identifier	SALSA20		134596	1					
ANR	134653	OrExpression	method == CHACHA20 || method == CHACHA20IETF		134596	1		||			
ANR	134654	EqualityExpression	method == CHACHA20		134596	0		==			
ANR	134655	Identifier	method		134596	0					
ANR	134656	Identifier	CHACHA20		134596	1					
ANR	134657	EqualityExpression	method == CHACHA20IETF		134596	1		==			
ANR	134658	Identifier	method		134596	0					
ANR	134659	Identifier	CHACHA20IETF		134596	1					
ANR	134660	CompoundStatement		11:8:330:402	134596	1					
ANR	134661	IdentifierDeclStatement	cipher_kt_t * cipher_info = ( cipher_kt_t * ) ss_malloc ( sizeof ( cipher_kt_t ) ) ;	634:8:19245:19317	134596	0	True				
ANR	134662	IdentifierDecl	* cipher_info = ( cipher_kt_t * ) ss_malloc ( sizeof ( cipher_kt_t ) )		134596	0					
ANR	134663	IdentifierDeclType	cipher_kt_t *		134596	0					
ANR	134664	Identifier	cipher_info		134596	1					
ANR	134665	AssignmentExpression	* cipher_info = ( cipher_kt_t * ) ss_malloc ( sizeof ( cipher_kt_t ) )		134596	2		=			
ANR	134666	Identifier	cipher_info		134596	0					
ANR	134667	CastExpression	( cipher_kt_t * ) ss_malloc ( sizeof ( cipher_kt_t ) )		134596	1					
ANR	134668	CastTarget	cipher_kt_t *		134596	0					
ANR	134669	CallExpression	ss_malloc ( sizeof ( cipher_kt_t ) )		134596	1					
ANR	134670	Callee	ss_malloc		134596	0					
ANR	134671	Identifier	ss_malloc		134596	0					
ANR	134672	ArgumentList	sizeof ( cipher_kt_t )		134596	1					
ANR	134673	Argument	sizeof ( cipher_kt_t )		134596	0					
ANR	134674	SizeofExpression	sizeof ( cipher_kt_t )		134596	0					
ANR	134675	Sizeof	sizeof		134596	0					
ANR	134676	SizeofOperand	cipher_kt_t		134596	1					
ANR	134677	ExpressionStatement	cipher -> info = cipher_info	635:8:19327:19365	134596	1	True				
ANR	134678	AssignmentExpression	cipher -> info = cipher_info		134596	0		=			
ANR	134679	PtrMemberAccess	cipher -> info		134596	0					
ANR	134680	Identifier	cipher		134596	0					
ANR	134681	Identifier	info		134596	1					
ANR	134682	Identifier	cipher_info		134596	1					
ANR	134683	ExpressionStatement	cipher -> info -> base = NULL	636:8:19375:19406	134596	2	True				
ANR	134684	AssignmentExpression	cipher -> info -> base = NULL		134596	0		=			
ANR	134685	PtrMemberAccess	cipher -> info -> base		134596	0					
ANR	134686	PtrMemberAccess	cipher -> info		134596	0					
ANR	134687	Identifier	cipher		134596	0					
ANR	134688	Identifier	info		134596	1					
ANR	134689	Identifier	base		134596	1					
ANR	134690	Identifier	NULL		134596	1					
ANR	134691	ExpressionStatement	cipher -> info -> key_bitlen = supported_stream_ciphers_key_size [ method ] * 8	637:8:19416:19488	134596	3	True				
ANR	134692	AssignmentExpression	cipher -> info -> key_bitlen = supported_stream_ciphers_key_size [ method ] * 8		134596	0		=			
ANR	134693	PtrMemberAccess	cipher -> info -> key_bitlen		134596	0					
ANR	134694	PtrMemberAccess	cipher -> info		134596	0					
ANR	134695	Identifier	cipher		134596	0					
ANR	134696	Identifier	info		134596	1					
ANR	134697	Identifier	key_bitlen		134596	1					
ANR	134698	MultiplicativeExpression	supported_stream_ciphers_key_size [ method ] * 8		134596	1		*			
ANR	134699	ArrayIndexing	supported_stream_ciphers_key_size [ method ]		134596	0					
ANR	134700	Identifier	supported_stream_ciphers_key_size		134596	0					
ANR	134701	Identifier	method		134596	1					
ANR	134702	PrimaryExpression	8		134596	1					
ANR	134703	ExpressionStatement	cipher -> info -> iv_size = supported_stream_ciphers_nonce_size [ method ]	638:8:19498:19568	134596	4	True				
ANR	134704	AssignmentExpression	cipher -> info -> iv_size = supported_stream_ciphers_nonce_size [ method ]		134596	0		=			
ANR	134705	PtrMemberAccess	cipher -> info -> iv_size		134596	0					
ANR	134706	PtrMemberAccess	cipher -> info		134596	0					
ANR	134707	Identifier	cipher		134596	0					
ANR	134708	Identifier	info		134596	1					
ANR	134709	Identifier	iv_size		134596	1					
ANR	134710	ArrayIndexing	supported_stream_ciphers_nonce_size [ method ]		134596	1					
ANR	134711	Identifier	supported_stream_ciphers_nonce_size		134596	0					
ANR	134712	Identifier	method		134596	1					
ANR	134713	ElseStatement	else		134596	0					
ANR	134714	CompoundStatement		16:11:666:666	134596	0					
ANR	134715	ExpressionStatement	cipher -> info = ( cipher_kt_t * ) stream_get_cipher_type ( method )	640:8:19591:19651	134596	0	True				
ANR	134716	AssignmentExpression	cipher -> info = ( cipher_kt_t * ) stream_get_cipher_type ( method )		134596	0		=			
ANR	134717	PtrMemberAccess	cipher -> info		134596	0					
ANR	134718	Identifier	cipher		134596	0					
ANR	134719	Identifier	info		134596	1					
ANR	134720	CastExpression	( cipher_kt_t * ) stream_get_cipher_type ( method )		134596	1					
ANR	134721	CastTarget	cipher_kt_t *		134596	0					
ANR	134722	CallExpression	stream_get_cipher_type ( method )		134596	1					
ANR	134723	Callee	stream_get_cipher_type		134596	0					
ANR	134724	Identifier	stream_get_cipher_type		134596	0					
ANR	134725	ArgumentList	method		134596	1					
ANR	134726	Argument	method		134596	0					
ANR	134727	Identifier	method		134596	0					
ANR	134728	IfStatement	if ( cipher -> info == NULL && cipher -> key_len == 0 )		134596	4					
ANR	134729	Condition	cipher -> info == NULL && cipher -> key_len == 0	643:8:19668:19711	134596	0	True				
ANR	134730	AndExpression	cipher -> info == NULL && cipher -> key_len == 0		134596	0		&&			
ANR	134731	EqualityExpression	cipher -> info == NULL		134596	0		==			
ANR	134732	PtrMemberAccess	cipher -> info		134596	0					
ANR	134733	Identifier	cipher		134596	0					
ANR	134734	Identifier	info		134596	1					
ANR	134735	Identifier	NULL		134596	1					
ANR	134736	EqualityExpression	cipher -> key_len == 0		134596	1		==			
ANR	134737	PtrMemberAccess	cipher -> key_len		134596	0					
ANR	134738	Identifier	cipher		134596	0					
ANR	134739	Identifier	key_len		134596	1					
ANR	134740	PrimaryExpression	0		134596	1					
ANR	134741	CompoundStatement		20:54:799:799	134596	1					
ANR	134742	ExpressionStatement	"LOGE ( ""Cipher %s not found in crypto library"" , supported_stream_ciphers [ method ] )"	644:8:19724:19803	134596	0	True				
ANR	134743	CallExpression	"LOGE ( ""Cipher %s not found in crypto library"" , supported_stream_ciphers [ method ] )"		134596	0					
ANR	134744	Callee	LOGE		134596	0					
ANR	134745	Identifier	LOGE		134596	0					
ANR	134746	ArgumentList	"""Cipher %s not found in crypto library"""		134596	1					
ANR	134747	Argument	"""Cipher %s not found in crypto library"""		134596	0					
ANR	134748	PrimaryExpression	"""Cipher %s not found in crypto library"""		134596	0					
ANR	134749	Argument	supported_stream_ciphers [ method ]		134596	1					
ANR	134750	ArrayIndexing	supported_stream_ciphers [ method ]		134596	0					
ANR	134751	Identifier	supported_stream_ciphers		134596	0					
ANR	134752	Identifier	method		134596	1					
ANR	134753	ExpressionStatement	"FATAL ( ""Cannot initialize cipher"" )"	645:8:19813:19846	134596	1	True				
ANR	134754	CallExpression	"FATAL ( ""Cannot initialize cipher"" )"		134596	0					
ANR	134755	Callee	FATAL		134596	0					
ANR	134756	Identifier	FATAL		134596	0					
ANR	134757	ArgumentList	"""Cannot initialize cipher"""		134596	1					
ANR	134758	Argument	"""Cannot initialize cipher"""		134596	0					
ANR	134759	PrimaryExpression	"""Cannot initialize cipher"""		134596	0					
ANR	134760	IfStatement	if ( key != NULL )		134596	5					
ANR	134761	Condition	key != NULL	648:8:19863:19873	134596	0	True				
ANR	134762	EqualityExpression	key != NULL		134596	0		!=			
ANR	134763	Identifier	key		134596	0					
ANR	134764	Identifier	NULL		134596	1					
ANR	134765	ExpressionStatement	"cipher -> key_len = crypto_parse_key ( key , cipher -> key , cipher_key_size ( cipher ) )"	649:8:19884:19961	134596	1	True				
ANR	134766	AssignmentExpression	"cipher -> key_len = crypto_parse_key ( key , cipher -> key , cipher_key_size ( cipher ) )"		134596	0		=			
ANR	134767	PtrMemberAccess	cipher -> key_len		134596	0					
ANR	134768	Identifier	cipher		134596	0					
ANR	134769	Identifier	key_len		134596	1					
ANR	134770	CallExpression	"crypto_parse_key ( key , cipher -> key , cipher_key_size ( cipher ) )"		134596	1					
ANR	134771	Callee	crypto_parse_key		134596	0					
ANR	134772	Identifier	crypto_parse_key		134596	0					
ANR	134773	ArgumentList	key		134596	1					
ANR	134774	Argument	key		134596	0					
ANR	134775	Identifier	key		134596	0					
ANR	134776	Argument	cipher -> key		134596	1					
ANR	134777	PtrMemberAccess	cipher -> key		134596	0					
ANR	134778	Identifier	cipher		134596	0					
ANR	134779	Identifier	key		134596	1					
ANR	134780	Argument	cipher_key_size ( cipher )		134596	2					
ANR	134781	CallExpression	cipher_key_size ( cipher )		134596	0					
ANR	134782	Callee	cipher_key_size		134596	0					
ANR	134783	Identifier	cipher_key_size		134596	0					
ANR	134784	ArgumentList	cipher		134596	1					
ANR	134785	Argument	cipher		134596	0					
ANR	134786	Identifier	cipher		134596	0					
ANR	134787	ElseStatement	else		134596	0					
ANR	134788	ExpressionStatement	"cipher -> key_len = crypto_derive_key ( pass , cipher -> key , cipher_key_size ( cipher ) )"	651:8:19980:20059	134596	0	True				
ANR	134789	AssignmentExpression	"cipher -> key_len = crypto_derive_key ( pass , cipher -> key , cipher_key_size ( cipher ) )"		134596	0		=			
ANR	134790	PtrMemberAccess	cipher -> key_len		134596	0					
ANR	134791	Identifier	cipher		134596	0					
ANR	134792	Identifier	key_len		134596	1					
ANR	134793	CallExpression	"crypto_derive_key ( pass , cipher -> key , cipher_key_size ( cipher ) )"		134596	1					
ANR	134794	Callee	crypto_derive_key		134596	0					
ANR	134795	Identifier	crypto_derive_key		134596	0					
ANR	134796	ArgumentList	pass		134596	1					
ANR	134797	Argument	pass		134596	0					
ANR	134798	Identifier	pass		134596	0					
ANR	134799	Argument	cipher -> key		134596	1					
ANR	134800	PtrMemberAccess	cipher -> key		134596	0					
ANR	134801	Identifier	cipher		134596	0					
ANR	134802	Identifier	key		134596	1					
ANR	134803	Argument	cipher_key_size ( cipher )		134596	2					
ANR	134804	CallExpression	cipher_key_size ( cipher )		134596	0					
ANR	134805	Callee	cipher_key_size		134596	0					
ANR	134806	Identifier	cipher_key_size		134596	0					
ANR	134807	ArgumentList	cipher		134596	1					
ANR	134808	Argument	cipher		134596	0					
ANR	134809	Identifier	cipher		134596	0					
ANR	134810	IfStatement	if ( cipher -> key_len == 0 )		134596	6					
ANR	134811	Condition	cipher -> key_len == 0	653:8:20070:20089	134596	0	True				
ANR	134812	EqualityExpression	cipher -> key_len == 0		134596	0		==			
ANR	134813	PtrMemberAccess	cipher -> key_len		134596	0					
ANR	134814	Identifier	cipher		134596	0					
ANR	134815	Identifier	key_len		134596	1					
ANR	134816	PrimaryExpression	0		134596	1					
ANR	134817	CompoundStatement		30:30:1177:1177	134596	1					
ANR	134818	ExpressionStatement	"FATAL ( ""Cannot generate key and NONCE"" )"	654:8:20102:20140	134596	0	True				
ANR	134819	CallExpression	"FATAL ( ""Cannot generate key and NONCE"" )"		134596	0					
ANR	134820	Callee	FATAL		134596	0					
ANR	134821	Identifier	FATAL		134596	0					
ANR	134822	ArgumentList	"""Cannot generate key and NONCE"""		134596	1					
ANR	134823	Argument	"""Cannot generate key and NONCE"""		134596	0					
ANR	134824	PrimaryExpression	"""Cannot generate key and NONCE"""		134596	0					
ANR	134825	IfStatement	if ( method == RC4_MD5 )		134596	7					
ANR	134826	Condition	method == RC4_MD5	656:8:20156:20172	134596	0	True				
ANR	134827	EqualityExpression	method == RC4_MD5		134596	0		==			
ANR	134828	Identifier	method		134596	0					
ANR	134829	Identifier	RC4_MD5		134596	1					
ANR	134830	CompoundStatement		33:27:1260:1260	134596	1					
ANR	134831	ExpressionStatement	cipher -> nonce_len = 16	657:8:20185:20207	134596	0	True				
ANR	134832	AssignmentExpression	cipher -> nonce_len = 16		134596	0		=			
ANR	134833	PtrMemberAccess	cipher -> nonce_len		134596	0					
ANR	134834	Identifier	cipher		134596	0					
ANR	134835	Identifier	nonce_len		134596	1					
ANR	134836	PrimaryExpression	16		134596	1					
ANR	134837	ElseStatement	else		134596	0					
ANR	134838	CompoundStatement		35:11:1305:1305	134596	0					
ANR	134839	ExpressionStatement	cipher -> nonce_len = cipher_nonce_size ( cipher )	659:8:20230:20275	134596	0	True				
ANR	134840	AssignmentExpression	cipher -> nonce_len = cipher_nonce_size ( cipher )		134596	0		=			
ANR	134841	PtrMemberAccess	cipher -> nonce_len		134596	0					
ANR	134842	Identifier	cipher		134596	0					
ANR	134843	Identifier	nonce_len		134596	1					
ANR	134844	CallExpression	cipher_nonce_size ( cipher )		134596	1					
ANR	134845	Callee	cipher_nonce_size		134596	0					
ANR	134846	Identifier	cipher_nonce_size		134596	0					
ANR	134847	ArgumentList	cipher		134596	1					
ANR	134848	Argument	cipher		134596	0					
ANR	134849	Identifier	cipher		134596	0					
ANR	134850	ExpressionStatement	cipher -> method = method	661:4:20287:20310	134596	8	True				
ANR	134851	AssignmentExpression	cipher -> method = method		134596	0		=			
ANR	134852	PtrMemberAccess	cipher -> method		134596	0					
ANR	134853	Identifier	cipher		134596	0					
ANR	134854	Identifier	method		134596	1					
ANR	134855	Identifier	method		134596	1					
ANR	134856	ReturnStatement	return cipher ;	663:4:20317:20330	134596	9	True				
ANR	134857	Identifier	cipher		134596	0					
ANR	134858	ReturnType	cipher_t *		134596	1					
ANR	134859	Identifier	stream_key_init		134596	2					
ANR	134860	ParameterList	"int method , const char * pass , const char * key"		134596	3					
ANR	134861	Parameter	int method	623:16:18867:18876	134596	0	True				
ANR	134862	ParameterType	int		134596	0					
ANR	134863	Identifier	method		134596	1					
ANR	134864	Parameter	const char * pass	623:28:18879:18894	134596	1	True				
ANR	134865	ParameterType	const char *		134596	0					
ANR	134866	Identifier	pass		134596	1					
ANR	134867	Parameter	const char * key	623:46:18897:18911	134596	2	True				
ANR	134868	ParameterType	const char *		134596	0					
ANR	134869	Identifier	key		134596	1					
ANR	134870	CFGEntryNode	ENTRY		134596		True				
ANR	134871	CFGExitNode	EXIT		134596		True				
ANR	134872	Symbol	stream_get_cipher_type		134596						
ANR	134873	Symbol	* * cipher		134596						
ANR	134874	Symbol	STREAM_CIPHER_NUM		134596						
ANR	134875	Symbol	* supported_stream_ciphers		134596						
ANR	134876	Symbol	CHACHA20IETF		134596						
ANR	134877	Symbol	cipher -> info -> key_bitlen		134596						
ANR	134878	Symbol	* cipher -> info		134596						
ANR	134879	Symbol	TABLE		134596						
ANR	134880	Symbol	cipher -> info -> iv_size		134596						
ANR	134881	Symbol	supported_stream_ciphers_nonce_size		134596						
ANR	134882	Symbol	CHACHA20		134596						
ANR	134883	Symbol	cipher_nonce_size		134596						
ANR	134884	Symbol	cipher -> info -> base		134596						
ANR	134885	Symbol	* supported_stream_ciphers_nonce_size		134596						
ANR	134886	Symbol	cipher_key_size		134596						
ANR	134887	Symbol	cipher -> key		134596						
ANR	134888	Symbol	cipher -> info		134596						
ANR	134889	Symbol	key		134596						
ANR	134890	Symbol	cipher		134596						
ANR	134891	Symbol	supported_stream_ciphers_key_size		134596						
ANR	134892	Symbol	NULL		134596						
ANR	134893	Symbol	method		134596						
ANR	134894	Symbol	crypto_parse_key		134596						
ANR	134895	Symbol	pass		134596						
ANR	134896	Symbol	* cipher		134596						
ANR	134897	Symbol	crypto_derive_key		134596						
ANR	134898	Symbol	cipher_info		134596						
ANR	134899	Symbol	* method		134596						
ANR	134900	Symbol	SALSA20		134596						
ANR	134901	Symbol	supported_stream_ciphers		134596						
ANR	134902	Symbol	cipher -> key_len		134596						
ANR	134903	Symbol	cipher -> method		134596						
ANR	134904	Symbol	ss_malloc		134596						
ANR	134905	Symbol	cipher -> nonce_len		134596						
ANR	134906	Symbol	* supported_stream_ciphers_key_size		134596						
ANR	134907	Symbol	RC4_MD5		134596						
ANR	134908	Function	stream_init	666:0:20335:20898							
ANR	134909	FunctionDef	"stream_init (const char * pass , const char * key , const char * method)"		134908	0					
ANR	134910	CompoundStatement		668:0:20413:20898	134908	0					
ANR	134911	IdentifierDeclStatement	int m = TABLE ;	669:4:20419:20432	134908	0	True				
ANR	134912	IdentifierDecl	m = TABLE		134908	0					
ANR	134913	IdentifierDeclType	int		134908	0					
ANR	134914	Identifier	m		134908	1					
ANR	134915	AssignmentExpression	m = TABLE		134908	2		=			
ANR	134916	Identifier	TABLE		134908	0					
ANR	134917	Identifier	TABLE		134908	1					
ANR	134918	IfStatement	if ( method != NULL )		134908	1					
ANR	134919	Condition	method != NULL	670:8:20442:20455	134908	0	True				
ANR	134920	EqualityExpression	method != NULL		134908	0		!=			
ANR	134921	Identifier	method		134908	0					
ANR	134922	Identifier	NULL		134908	1					
ANR	134923	CompoundStatement		3:24:44:44	134908	1					
ANR	134924	ForStatement	for ( m = TABLE ; m < STREAM_CIPHER_NUM ; m ++ )		134908	0					
ANR	134925	ForInit	m = TABLE ;	671:13:20473:20482	134908	0	True				
ANR	134926	AssignmentExpression	m = TABLE		134908	0		=			
ANR	134927	Identifier	m		134908	0					
ANR	134928	Identifier	TABLE		134908	1					
ANR	134929	Condition	m < STREAM_CIPHER_NUM	671:24:20484:20504	134908	1	True				
ANR	134930	RelationalExpression	m < STREAM_CIPHER_NUM		134908	0		<			
ANR	134931	Identifier	m		134908	0					
ANR	134932	Identifier	STREAM_CIPHER_NUM		134908	1					
ANR	134933	PostIncDecOperationExpression	m ++	671:47:20507:20509	134908	2	True				
ANR	134934	Identifier	m		134908	0					
ANR	134935	IncDec	++		134908	1					
ANR	134936	IfStatement	"if ( strcmp ( method , supported_stream_ciphers [ m ] ) == 0 )"		134908	3					
ANR	134937	Condition	"strcmp ( method , supported_stream_ciphers [ m ] ) == 0"	672:16:20528:20575	134908	0	True				
ANR	134938	EqualityExpression	"strcmp ( method , supported_stream_ciphers [ m ] ) == 0"		134908	0		==			
ANR	134939	CallExpression	"strcmp ( method , supported_stream_ciphers [ m ] )"		134908	0					
ANR	134940	Callee	strcmp		134908	0					
ANR	134941	Identifier	strcmp		134908	0					
ANR	134942	ArgumentList	method		134908	1					
ANR	134943	Argument	method		134908	0					
ANR	134944	Identifier	method		134908	0					
ANR	134945	Argument	supported_stream_ciphers [ m ]		134908	1					
ANR	134946	ArrayIndexing	supported_stream_ciphers [ m ]		134908	0					
ANR	134947	Identifier	supported_stream_ciphers		134908	0					
ANR	134948	Identifier	m		134908	1					
ANR	134949	PrimaryExpression	0		134908	1					
ANR	134950	CompoundStatement		5:66:164:164	134908	1					
ANR	134951	BreakStatement	break ;	673:16:20596:20601	134908	0	True				
ANR	134952	IfStatement	if ( m >= STREAM_CIPHER_NUM )		134908	1					
ANR	134953	Condition	m >= STREAM_CIPHER_NUM	675:12:20629:20650	134908	0	True				
ANR	134954	RelationalExpression	m >= STREAM_CIPHER_NUM		134908	0		>=			
ANR	134955	Identifier	m		134908	0					
ANR	134956	Identifier	STREAM_CIPHER_NUM		134908	1					
ANR	134957	CompoundStatement		8:36:239:239	134908	1					
ANR	134958	ExpressionStatement	"LOGE ( ""Invalid cipher name: %s, use rc4-md5 instead"" , method )"	676:12:20667:20727	134908	0	True				
ANR	134959	CallExpression	"LOGE ( ""Invalid cipher name: %s, use rc4-md5 instead"" , method )"		134908	0					
ANR	134960	Callee	LOGE		134908	0					
ANR	134961	Identifier	LOGE		134908	0					
ANR	134962	ArgumentList	"""Invalid cipher name: %s, use rc4-md5 instead"""		134908	1					
ANR	134963	Argument	"""Invalid cipher name: %s, use rc4-md5 instead"""		134908	0					
ANR	134964	PrimaryExpression	"""Invalid cipher name: %s, use rc4-md5 instead"""		134908	0					
ANR	134965	Argument	method		134908	1					
ANR	134966	Identifier	method		134908	0					
ANR	134967	ExpressionStatement	m = RC4_MD5	677:12:20741:20752	134908	1	True				
ANR	134968	AssignmentExpression	m = RC4_MD5		134908	0		=			
ANR	134969	Identifier	m		134908	0					
ANR	134970	Identifier	RC4_MD5		134908	1					
ANR	134971	IfStatement	if ( m == TABLE )		134908	2					
ANR	134972	Condition	m == TABLE	680:8:20778:20787	134908	0	True				
ANR	134973	EqualityExpression	m == TABLE		134908	0		==			
ANR	134974	Identifier	m		134908	0					
ANR	134975	Identifier	TABLE		134908	1					
ANR	134976	CompoundStatement		13:20:376:376	134908	1					
ANR	134977	ExpressionStatement	"LOGE ( ""Table is deprecated"" )"	681:8:20800:20827	134908	0	True				
ANR	134978	CallExpression	"LOGE ( ""Table is deprecated"" )"		134908	0					
ANR	134979	Callee	LOGE		134908	0					
ANR	134980	Identifier	LOGE		134908	0					
ANR	134981	ArgumentList	"""Table is deprecated"""		134908	1					
ANR	134982	Argument	"""Table is deprecated"""		134908	0					
ANR	134983	PrimaryExpression	"""Table is deprecated"""		134908	0					
ANR	134984	ReturnStatement	return NULL ;	682:8:20837:20848	134908	1	True				
ANR	134985	Identifier	NULL		134908	0					
ANR	134986	ReturnStatement	"return stream_key_init ( m , pass , key ) ;"	684:4:20860:20896	134908	3	True				
ANR	134987	CallExpression	"stream_key_init ( m , pass , key )"		134908	0					
ANR	134988	Callee	stream_key_init		134908	0					
ANR	134989	Identifier	stream_key_init		134908	0					
ANR	134990	ArgumentList	m		134908	1					
ANR	134991	Argument	m		134908	0					
ANR	134992	Identifier	m		134908	0					
ANR	134993	Argument	pass		134908	1					
ANR	134994	Identifier	pass		134908	0					
ANR	134995	Argument	key		134908	2					
ANR	134996	Identifier	key		134908	0					
ANR	134997	ReturnType	cipher_t *		134908	1					
ANR	134998	Identifier	stream_init		134908	2					
ANR	134999	ParameterList	"const char * pass , const char * key , const char * method"		134908	3					
ANR	135000	Parameter	const char * pass	667:12:20358:20373	134908	0	True				
ANR	135001	ParameterType	const char *		134908	0					
ANR	135002	Identifier	pass		134908	1					
ANR	135003	Parameter	const char * key	667:30:20376:20390	134908	1	True				
ANR	135004	ParameterType	const char *		134908	0					
ANR	135005	Identifier	key		134908	1					
ANR	135006	Parameter	const char * method	667:47:20393:20410	134908	2	True				
ANR	135007	ParameterType	const char *		134908	0					
ANR	135008	Identifier	method		134908	1					
ANR	135009	CFGEntryNode	ENTRY		134908		True				
ANR	135010	CFGExitNode	EXIT		134908		True				
ANR	135011	Symbol	strcmp		134908						
ANR	135012	Symbol	NULL		134908						
ANR	135013	Symbol	method		134908						
ANR	135014	Symbol	pass		134908						
ANR	135015	Symbol	stream_key_init		134908						
ANR	135016	Symbol	STREAM_CIPHER_NUM		134908						
ANR	135017	Symbol	* supported_stream_ciphers		134908						
ANR	135018	Symbol	m		134908						
ANR	135019	Symbol	TABLE		134908						
ANR	135020	Symbol	supported_stream_ciphers		134908						
ANR	135021	Symbol	* m		134908						
ANR	135022	Symbol	key		134908						
ANR	135023	Symbol	RC4_MD5		134908						
