command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	114039	File	data/converged/CVE-2017-15924_shadowsocks-libev/src_stream.c								
ANR	114040	DeclStmt									
ANR	114041	Decl							const char	const char * [ STREAM_CIPHER_NUM ]	supported_stream_ciphers
ANR	114042	DeclStmt									
ANR	114043	Decl							const char	const char * [ STREAM_CIPHER_NUM ]	supported_stream_ciphers_mbedtls
ANR	114044	DeclStmt									
ANR	114045	Decl							const int	const int [ STREAM_CIPHER_NUM ]	supported_stream_ciphers_nonce_size
ANR	114046	DeclStmt									
ANR	114047	Decl							const int	const int [ STREAM_CIPHER_NUM ]	supported_stream_ciphers_key_size
ANR	114048	Function	crypto_stream_xor_ic	154:0:4168:4693							
ANR	114049	FunctionDef	"crypto_stream_xor_ic (uint8_t * c , const uint8_t * m , uint64_t mlen , const uint8_t * n , uint64_t ic , const uint8_t * k , int method)"		114048	0					
ANR	114050	CompoundStatement		158:0:4348:4693	114048	0					
ANR	114051	SwitchStatement	switch ( method )		114048	0					
ANR	114052	Condition	method	159:12:4362:4367	114048	0	True				
ANR	114053	Identifier	method		114048	0					
ANR	114054	CompoundStatement		2:20:21:21	114048	1					
ANR	114055	Label	case SALSA20 :	160:4:4376:4388	114048	0	True				
ANR	114056	Identifier	SALSA20		114048	0					
ANR	114057	ReturnStatement	"return crypto_stream_salsa20_xor_ic ( c , m , mlen , n , ic , k ) ;"	161:8:4398:4455	114048	1	True				
ANR	114058	CallExpression	"crypto_stream_salsa20_xor_ic ( c , m , mlen , n , ic , k )"		114048	0					
ANR	114059	Callee	crypto_stream_salsa20_xor_ic		114048	0					
ANR	114060	Identifier	crypto_stream_salsa20_xor_ic		114048	0					
ANR	114061	ArgumentList	c		114048	1					
ANR	114062	Argument	c		114048	0					
ANR	114063	Identifier	c		114048	0					
ANR	114064	Argument	m		114048	1					
ANR	114065	Identifier	m		114048	0					
ANR	114066	Argument	mlen		114048	2					
ANR	114067	Identifier	mlen		114048	0					
ANR	114068	Argument	n		114048	3					
ANR	114069	Identifier	n		114048	0					
ANR	114070	Argument	ic		114048	4					
ANR	114071	Identifier	ic		114048	0					
ANR	114072	Argument	k		114048	5					
ANR	114073	Identifier	k		114048	0					
ANR	114074	Label	case CHACHA20 :	162:4:4461:4474	114048	2	True				
ANR	114075	Identifier	CHACHA20		114048	0					
ANR	114076	ReturnStatement	"return crypto_stream_chacha20_xor_ic ( c , m , mlen , n , ic , k ) ;"	163:8:4484:4542	114048	3	True				
ANR	114077	CallExpression	"crypto_stream_chacha20_xor_ic ( c , m , mlen , n , ic , k )"		114048	0					
ANR	114078	Callee	crypto_stream_chacha20_xor_ic		114048	0					
ANR	114079	Identifier	crypto_stream_chacha20_xor_ic		114048	0					
ANR	114080	ArgumentList	c		114048	1					
ANR	114081	Argument	c		114048	0					
ANR	114082	Identifier	c		114048	0					
ANR	114083	Argument	m		114048	1					
ANR	114084	Identifier	m		114048	0					
ANR	114085	Argument	mlen		114048	2					
ANR	114086	Identifier	mlen		114048	0					
ANR	114087	Argument	n		114048	3					
ANR	114088	Identifier	n		114048	0					
ANR	114089	Argument	ic		114048	4					
ANR	114090	Identifier	ic		114048	0					
ANR	114091	Argument	k		114048	5					
ANR	114092	Identifier	k		114048	0					
ANR	114093	Label	case CHACHA20IETF :	164:4:4548:4565	114048	4	True				
ANR	114094	Identifier	CHACHA20IETF		114048	0					
ANR	114095	ReturnStatement	"return crypto_stream_chacha20_ietf_xor_ic ( c , m , mlen , n , ( uint32_t ) ic , k ) ;"	165:8:4575:4648	114048	5	True				
ANR	114096	CallExpression	"crypto_stream_chacha20_ietf_xor_ic ( c , m , mlen , n , ( uint32_t ) ic , k )"		114048	0					
ANR	114097	Callee	crypto_stream_chacha20_ietf_xor_ic		114048	0					
ANR	114098	Identifier	crypto_stream_chacha20_ietf_xor_ic		114048	0					
ANR	114099	ArgumentList	c		114048	1					
ANR	114100	Argument	c		114048	0					
ANR	114101	Identifier	c		114048	0					
ANR	114102	Argument	m		114048	1					
ANR	114103	Identifier	m		114048	0					
ANR	114104	Argument	mlen		114048	2					
ANR	114105	Identifier	mlen		114048	0					
ANR	114106	Argument	n		114048	3					
ANR	114107	Identifier	n		114048	0					
ANR	114108	Argument	( uint32_t ) ic		114048	4					
ANR	114109	CastExpression	( uint32_t ) ic		114048	0					
ANR	114110	CastTarget	uint32_t		114048	0					
ANR	114111	Identifier	ic		114048	1					
ANR	114112	Argument	k		114048	5					
ANR	114113	Identifier	k		114048	0					
ANR	114114	ReturnStatement	return 0 ;	168:4:4683:4691	114048	1	True				
ANR	114115	PrimaryExpression	0		114048	0					
ANR	114116	ReturnType	static int		114048	1					
ANR	114117	Identifier	crypto_stream_xor_ic		114048	2					
ANR	114118	ParameterList	"uint8_t * c , const uint8_t * m , uint64_t mlen , const uint8_t * n , uint64_t ic , const uint8_t * k , int method"		114048	3					
ANR	114119	Parameter	uint8_t * c	155:21:4200:4209	114048	0	True				
ANR	114120	ParameterType	uint8_t *		114048	0					
ANR	114121	Identifier	c		114048	1					
ANR	114122	Parameter	const uint8_t * m	155:33:4212:4227	114048	1	True				
ANR	114123	ParameterType	const uint8_t *		114048	0					
ANR	114124	Identifier	m		114048	1					
ANR	114125	Parameter	uint64_t mlen	155:51:4230:4242	114048	2	True				
ANR	114126	ParameterType	uint64_t		114048	0					
ANR	114127	Identifier	mlen		114048	1					
ANR	114128	Parameter	const uint8_t * n	156:21:4266:4281	114048	3	True				
ANR	114129	ParameterType	const uint8_t *		114048	0					
ANR	114130	Identifier	n		114048	1					
ANR	114131	Parameter	uint64_t ic	156:39:4284:4294	114048	4	True				
ANR	114132	ParameterType	uint64_t		114048	0					
ANR	114133	Identifier	ic		114048	1					
ANR	114134	Parameter	const uint8_t * k	156:52:4297:4312	114048	5	True				
ANR	114135	ParameterType	const uint8_t *		114048	0					
ANR	114136	Identifier	k		114048	1					
ANR	114137	Parameter	int method	157:21:4336:4345	114048	6	True				
ANR	114138	ParameterType	int		114048	0					
ANR	114139	Identifier	method		114048	1					
ANR	114140	CFGEntryNode	ENTRY		114048		True				
ANR	114141	CFGExitNode	EXIT		114048		True				
ANR	114142	Symbol	c		114048						
ANR	114143	Symbol	method		114048						
ANR	114144	Symbol	crypto_stream_salsa20_xor_ic		114048						
ANR	114145	Symbol	crypto_stream_chacha20_ietf_xor_ic		114048						
ANR	114146	Symbol	ic		114048						
ANR	114147	Symbol	mlen		114048						
ANR	114148	Symbol	k		114048						
ANR	114149	Symbol	crypto_stream_chacha20_xor_ic		114048						
ANR	114150	Symbol	m		114048						
ANR	114151	Symbol	n		114048						
ANR	114152	Function	cipher_nonce_size	171:0:4696:4828							
ANR	114153	FunctionDef	cipher_nonce_size (const cipher_t * cipher)		114152	0					
ANR	114154	CompoundStatement		173:0:4742:4828	114152	0					
ANR	114155	IfStatement	if ( cipher == NULL )		114152	0					
ANR	114156	Condition	cipher == NULL	174:8:4752:4765	114152	0	True				
ANR	114157	EqualityExpression	cipher == NULL		114152	0		==			
ANR	114158	Identifier	cipher		114152	0					
ANR	114159	Identifier	NULL		114152	1					
ANR	114160	CompoundStatement		2:24:25:25	114152	1					
ANR	114161	ReturnStatement	return 0 ;	175:8:4778:4786	114152	0	True				
ANR	114162	PrimaryExpression	0		114152	0					
ANR	114163	ReturnStatement	return cipher -> info -> iv_size ;	177:4:4798:4826	114152	1	True				
ANR	114164	PtrMemberAccess	cipher -> info -> iv_size		114152	0					
ANR	114165	PtrMemberAccess	cipher -> info		114152	0					
ANR	114166	Identifier	cipher		114152	0					
ANR	114167	Identifier	info		114152	1					
ANR	114168	Identifier	iv_size		114152	1					
ANR	114169	ReturnType	int		114152	1					
ANR	114170	Identifier	cipher_nonce_size		114152	2					
ANR	114171	ParameterList	const cipher_t * cipher		114152	3					
ANR	114172	Parameter	const cipher_t * cipher	172:18:4718:4739	114152	0	True				
ANR	114173	ParameterType	const cipher_t *		114152	0					
ANR	114174	Identifier	cipher		114152	1					
ANR	114175	CFGEntryNode	ENTRY		114152		True				
ANR	114176	CFGExitNode	EXIT		114152		True				
ANR	114177	Symbol	cipher		114152						
ANR	114178	Symbol	cipher -> info -> iv_size		114152						
ANR	114179	Symbol	NULL		114152						
ANR	114180	Symbol	* cipher		114152						
ANR	114181	Symbol	* * cipher		114152						
ANR	114182	Symbol	cipher -> info		114152						
ANR	114183	Symbol	* cipher -> info		114152						
ANR	114184	Function	cipher_key_size	180:0:4831:5450							
ANR	114185	FunctionDef	cipher_key_size (const cipher_t * cipher)		114184	0					
ANR	114186	CompoundStatement		182:0:4875:5450	114184	0					
ANR	114187	IfStatement	if ( cipher == NULL )		114184	0					
ANR	114188	Condition	cipher == NULL	191:8:5277:5290	114184	0	True				
ANR	114189	EqualityExpression	cipher == NULL		114184	0		==			
ANR	114190	Identifier	cipher		114184	0					
ANR	114191	Identifier	NULL		114184	1					
ANR	114192	CompoundStatement		10:24:417:417	114184	1					
ANR	114193	ReturnStatement	return 0 ;	192:8:5303:5311	114184	0	True				
ANR	114194	PrimaryExpression	0		114184	0					
ANR	114195	ReturnStatement	return cipher -> info -> key_bitlen / 8 ;	195:4:5413:5448	114184	1	True				
ANR	114196	MultiplicativeExpression	cipher -> info -> key_bitlen / 8		114184	0		/			
ANR	114197	PtrMemberAccess	cipher -> info -> key_bitlen		114184	0					
ANR	114198	PtrMemberAccess	cipher -> info		114184	0					
ANR	114199	Identifier	cipher		114184	0					
ANR	114200	Identifier	info		114184	1					
ANR	114201	Identifier	key_bitlen		114184	1					
ANR	114202	PrimaryExpression	8		114184	1					
ANR	114203	ReturnType	int		114184	1					
ANR	114204	Identifier	cipher_key_size		114184	2					
ANR	114205	ParameterList	const cipher_t * cipher		114184	3					
ANR	114206	Parameter	const cipher_t * cipher	181:16:4851:4872	114184	0	True				
ANR	114207	ParameterType	const cipher_t *		114184	0					
ANR	114208	Identifier	cipher		114184	1					
ANR	114209	CFGEntryNode	ENTRY		114184		True				
ANR	114210	CFGExitNode	EXIT		114184		True				
ANR	114211	Symbol	cipher		114184						
ANR	114212	Symbol	NULL		114184						
ANR	114213	Symbol	* cipher		114184						
ANR	114214	Symbol	* * cipher		114184						
ANR	114215	Symbol	cipher -> info		114184						
ANR	114216	Symbol	cipher -> info -> key_bitlen		114184						
ANR	114217	Symbol	* cipher -> info		114184						
ANR	114218	Function	stream_get_cipher_type	198:0:5453:6144							
ANR	114219	FunctionDef	stream_get_cipher_type (int method)		114218	0					
ANR	114220	CompoundStatement		200:0:5508:6144	114218	0					
ANR	114221	IfStatement	if ( method <= TABLE || method >= STREAM_CIPHER_NUM )		114218	0					
ANR	114222	Condition	method <= TABLE || method >= STREAM_CIPHER_NUM	201:8:5518:5563	114218	0	True				
ANR	114223	OrExpression	method <= TABLE || method >= STREAM_CIPHER_NUM		114218	0		||			
ANR	114224	RelationalExpression	method <= TABLE		114218	0		<=			
ANR	114225	Identifier	method		114218	0					
ANR	114226	Identifier	TABLE		114218	1					
ANR	114227	RelationalExpression	method >= STREAM_CIPHER_NUM		114218	1		>=			
ANR	114228	Identifier	method		114218	0					
ANR	114229	Identifier	STREAM_CIPHER_NUM		114218	1					
ANR	114230	CompoundStatement		2:56:57:57	114218	1					
ANR	114231	ExpressionStatement	"LOGE ( ""stream_get_cipher_type(): Illegal method"" )"	202:8:5576:5624	114218	0	True				
ANR	114232	CallExpression	"LOGE ( ""stream_get_cipher_type(): Illegal method"" )"		114218	0					
ANR	114233	Callee	LOGE		114218	0					
ANR	114234	Identifier	LOGE		114218	0					
ANR	114235	ArgumentList	"""stream_get_cipher_type(): Illegal method"""		114218	1					
ANR	114236	Argument	"""stream_get_cipher_type(): Illegal method"""		114218	0					
ANR	114237	PrimaryExpression	"""stream_get_cipher_type(): Illegal method"""		114218	0					
ANR	114238	ReturnStatement	return NULL ;	203:8:5634:5645	114218	1	True				
ANR	114239	Identifier	NULL		114218	0					
ANR	114240	IfStatement	if ( method == RC4_MD5 )		114218	1					
ANR	114241	Condition	method == RC4_MD5	206:8:5662:5678	114218	0	True				
ANR	114242	EqualityExpression	method == RC4_MD5		114218	0		==			
ANR	114243	Identifier	method		114218	0					
ANR	114244	Identifier	RC4_MD5		114218	1					
ANR	114245	CompoundStatement		7:27:172:172	114218	1					
ANR	114246	ExpressionStatement	method = RC4	207:8:5691:5703	114218	0	True				
ANR	114247	AssignmentExpression	method = RC4		114218	0		=			
ANR	114248	Identifier	method		114218	0					
ANR	114249	Identifier	RC4		114218	1					
ANR	114250	IfStatement	if ( method >= SALSA20 )		114218	2					
ANR	114251	Condition	method >= SALSA20	210:8:5720:5736	114218	0	True				
ANR	114252	RelationalExpression	method >= SALSA20		114218	0		>=			
ANR	114253	Identifier	method		114218	0					
ANR	114254	Identifier	SALSA20		114218	1					
ANR	114255	CompoundStatement		11:27:230:230	114218	1					
ANR	114256	ReturnStatement	return NULL ;	211:8:5749:5760	114218	0	True				
ANR	114257	Identifier	NULL		114218	0					
ANR	114258	IdentifierDeclStatement	const char * ciphername = supported_stream_ciphers [ method ] ;	214:4:5773:5831	114218	3	True				
ANR	114259	IdentifierDecl	* ciphername = supported_stream_ciphers [ method ]		114218	0					
ANR	114260	IdentifierDeclType	const char *		114218	0					
ANR	114261	Identifier	ciphername		114218	1					
ANR	114262	AssignmentExpression	* ciphername = supported_stream_ciphers [ method ]		114218	2		=			
ANR	114263	Identifier	ciphername		114218	0					
ANR	114264	ArrayIndexing	supported_stream_ciphers [ method ]		114218	1					
ANR	114265	Identifier	supported_stream_ciphers		114218	0					
ANR	114266	Identifier	method		114218	1					
ANR	114267	IdentifierDeclStatement	const char * mbedtlsname = supported_stream_ciphers_mbedtls [ method ] ;	215:4:5837:5903	114218	4	True				
ANR	114268	IdentifierDecl	* mbedtlsname = supported_stream_ciphers_mbedtls [ method ]		114218	0					
ANR	114269	IdentifierDeclType	const char *		114218	0					
ANR	114270	Identifier	mbedtlsname		114218	1					
ANR	114271	AssignmentExpression	* mbedtlsname = supported_stream_ciphers_mbedtls [ method ]		114218	2		=			
ANR	114272	Identifier	mbedtlsname		114218	0					
ANR	114273	ArrayIndexing	supported_stream_ciphers_mbedtls [ method ]		114218	1					
ANR	114274	Identifier	supported_stream_ciphers_mbedtls		114218	0					
ANR	114275	Identifier	method		114218	1					
ANR	114276	IfStatement	"if ( strcmp ( mbedtlsname , CIPHER_UNSUPPORTED ) == 0 )"		114218	5					
ANR	114277	Condition	"strcmp ( mbedtlsname , CIPHER_UNSUPPORTED ) == 0"	216:8:5913:5956	114218	0	True				
ANR	114278	EqualityExpression	"strcmp ( mbedtlsname , CIPHER_UNSUPPORTED ) == 0"		114218	0		==			
ANR	114279	CallExpression	"strcmp ( mbedtlsname , CIPHER_UNSUPPORTED )"		114218	0					
ANR	114280	Callee	strcmp		114218	0					
ANR	114281	Identifier	strcmp		114218	0					
ANR	114282	ArgumentList	mbedtlsname		114218	1					
ANR	114283	Argument	mbedtlsname		114218	0					
ANR	114284	Identifier	mbedtlsname		114218	0					
ANR	114285	Argument	CIPHER_UNSUPPORTED		114218	1					
ANR	114286	Identifier	CIPHER_UNSUPPORTED		114218	0					
ANR	114287	PrimaryExpression	0		114218	1					
ANR	114288	CompoundStatement		17:54:450:450	114218	1					
ANR	114289	ExpressionStatement	"LOGE ( ""Cipher %s currently is not supported by mbed TLS library"" , ciphername )"	217:8:5969:6058	114218	0	True				
ANR	114290	CallExpression	"LOGE ( ""Cipher %s currently is not supported by mbed TLS library"" , ciphername )"		114218	0					
ANR	114291	Callee	LOGE		114218	0					
ANR	114292	Identifier	LOGE		114218	0					
ANR	114293	ArgumentList	"""Cipher %s currently is not supported by mbed TLS library"""		114218	1					
ANR	114294	Argument	"""Cipher %s currently is not supported by mbed TLS library"""		114218	0					
ANR	114295	PrimaryExpression	"""Cipher %s currently is not supported by mbed TLS library"""		114218	0					
ANR	114296	Argument	ciphername		114218	1					
ANR	114297	Identifier	ciphername		114218	0					
ANR	114298	ReturnStatement	return NULL ;	219:8:6068:6079	114218	1	True				
ANR	114299	Identifier	NULL		114218	0					
ANR	114300	ReturnStatement	return mbedtls_cipher_info_from_string ( mbedtlsname ) ;	221:4:6091:6142	114218	6	True				
ANR	114301	CallExpression	mbedtls_cipher_info_from_string ( mbedtlsname )		114218	0					
ANR	114302	Callee	mbedtls_cipher_info_from_string		114218	0					
ANR	114303	Identifier	mbedtls_cipher_info_from_string		114218	0					
ANR	114304	ArgumentList	mbedtlsname		114218	1					
ANR	114305	Argument	mbedtlsname		114218	0					
ANR	114306	Identifier	mbedtlsname		114218	0					
ANR	114307	ReturnType	const cipher_kt_t *		114218	1					
ANR	114308	Identifier	stream_get_cipher_type		114218	2					
ANR	114309	ParameterList	int method		114218	3					
ANR	114310	Parameter	int method	199:23:5496:5505	114218	0	True				
ANR	114311	ParameterType	int		114218	0					
ANR	114312	Identifier	method		114218	1					
ANR	114313	CFGEntryNode	ENTRY		114218		True				
ANR	114314	CFGExitNode	EXIT		114218		True				
ANR	114315	Symbol	* supported_stream_ciphers_mbedtls		114218						
ANR	114316	Symbol	strcmp		114218						
ANR	114317	Symbol	ciphername		114218						
ANR	114318	Symbol	RC4		114218						
ANR	114319	Symbol	NULL		114218						
ANR	114320	Symbol	method		114218						
ANR	114321	Symbol	* method		114218						
ANR	114322	Symbol	supported_stream_ciphers_mbedtls		114218						
ANR	114323	Symbol	STREAM_CIPHER_NUM		114218						
ANR	114324	Symbol	mbedtlsname		114218						
ANR	114325	Symbol	mbedtls_cipher_info_from_string		114218						
ANR	114326	Symbol	* supported_stream_ciphers		114218						
ANR	114327	Symbol	CIPHER_UNSUPPORTED		114218						
ANR	114328	Symbol	SALSA20		114218						
ANR	114329	Symbol	TABLE		114218						
ANR	114330	Symbol	supported_stream_ciphers		114218						
ANR	114331	Symbol	RC4_MD5		114218						
ANR	114332	Function	stream_cipher_ctx_init	224:0:6147:6961							
ANR	114333	FunctionDef	"stream_cipher_ctx_init (cipher_ctx_t * ctx , int method , int enc)"		114332	0					
ANR	114334	CompoundStatement		226:0:6215:6961	114332	0					
ANR	114335	IfStatement	if ( method <= TABLE || method >= STREAM_CIPHER_NUM )		114332	0					
ANR	114336	Condition	method <= TABLE || method >= STREAM_CIPHER_NUM	227:8:6225:6270	114332	0	True				
ANR	114337	OrExpression	method <= TABLE || method >= STREAM_CIPHER_NUM		114332	0		||			
ANR	114338	RelationalExpression	method <= TABLE		114332	0		<=			
ANR	114339	Identifier	method		114332	0					
ANR	114340	Identifier	TABLE		114332	1					
ANR	114341	RelationalExpression	method >= STREAM_CIPHER_NUM		114332	1		>=			
ANR	114342	Identifier	method		114332	0					
ANR	114343	Identifier	STREAM_CIPHER_NUM		114332	1					
ANR	114344	CompoundStatement		2:56:57:57	114332	1					
ANR	114345	ExpressionStatement	"LOGE ( ""stream_ctx_init(): Illegal method"" )"	228:8:6283:6324	114332	0	True				
ANR	114346	CallExpression	"LOGE ( ""stream_ctx_init(): Illegal method"" )"		114332	0					
ANR	114347	Callee	LOGE		114332	0					
ANR	114348	Identifier	LOGE		114332	0					
ANR	114349	ArgumentList	"""stream_ctx_init(): Illegal method"""		114332	1					
ANR	114350	Argument	"""stream_ctx_init(): Illegal method"""		114332	0					
ANR	114351	PrimaryExpression	"""stream_ctx_init(): Illegal method"""		114332	0					
ANR	114352	ReturnStatement	return ;	229:8:6334:6340	114332	1	True				
ANR	114353	IfStatement	if ( method >= SALSA20 )		114332	1					
ANR	114354	Condition	method >= SALSA20	232:8:6357:6373	114332	0	True				
ANR	114355	RelationalExpression	method >= SALSA20		114332	0		>=			
ANR	114356	Identifier	method		114332	0					
ANR	114357	Identifier	SALSA20		114332	1					
ANR	114358	CompoundStatement		7:27:160:160	114332	1					
ANR	114359	ReturnStatement	return ;	233:8:6386:6392	114332	0	True				
ANR	114360	IdentifierDeclStatement	const char * ciphername = supported_stream_ciphers [ method ] ;	236:4:6405:6465	114332	2	True				
ANR	114361	IdentifierDecl	* ciphername = supported_stream_ciphers [ method ]		114332	0					
ANR	114362	IdentifierDeclType	const char *		114332	0					
ANR	114363	Identifier	ciphername		114332	1					
ANR	114364	AssignmentExpression	* ciphername = supported_stream_ciphers [ method ]		114332	2		=			
ANR	114365	Identifier	ciphername		114332	0					
ANR	114366	ArrayIndexing	supported_stream_ciphers [ method ]		114332	1					
ANR	114367	Identifier	supported_stream_ciphers		114332	0					
ANR	114368	Identifier	method		114332	1					
ANR	114369	IdentifierDeclStatement	const cipher_kt_t * cipher = stream_get_cipher_type ( method ) ;	237:4:6471:6529	114332	3	True				
ANR	114370	IdentifierDecl	* cipher = stream_get_cipher_type ( method )		114332	0					
ANR	114371	IdentifierDeclType	const cipher_kt_t *		114332	0					
ANR	114372	Identifier	cipher		114332	1					
ANR	114373	AssignmentExpression	* cipher = stream_get_cipher_type ( method )		114332	2		=			
ANR	114374	Identifier	cipher		114332	0					
ANR	114375	CallExpression	stream_get_cipher_type ( method )		114332	1					
ANR	114376	Callee	stream_get_cipher_type		114332	0					
ANR	114377	Identifier	stream_get_cipher_type		114332	0					
ANR	114378	ArgumentList	method		114332	1					
ANR	114379	Argument	method		114332	0					
ANR	114380	Identifier	method		114332	0					
ANR	114381	ExpressionStatement	ctx -> evp = ss_malloc ( sizeof ( cipher_evp_t ) )	239:4:6536:6578	114332	4	True				
ANR	114382	AssignmentExpression	ctx -> evp = ss_malloc ( sizeof ( cipher_evp_t ) )		114332	0		=			
ANR	114383	PtrMemberAccess	ctx -> evp		114332	0					
ANR	114384	Identifier	ctx		114332	0					
ANR	114385	Identifier	evp		114332	1					
ANR	114386	CallExpression	ss_malloc ( sizeof ( cipher_evp_t ) )		114332	1					
ANR	114387	Callee	ss_malloc		114332	0					
ANR	114388	Identifier	ss_malloc		114332	0					
ANR	114389	ArgumentList	sizeof ( cipher_evp_t )		114332	1					
ANR	114390	Argument	sizeof ( cipher_evp_t )		114332	0					
ANR	114391	SizeofExpression	sizeof ( cipher_evp_t )		114332	0					
ANR	114392	Sizeof	sizeof		114332	0					
ANR	114393	SizeofOperand	cipher_evp_t		114332	1					
ANR	114394	ExpressionStatement	"memset ( ctx -> evp , 0 , sizeof ( cipher_evp_t ) )"	240:4:6584:6625	114332	5	True				
ANR	114395	CallExpression	"memset ( ctx -> evp , 0 , sizeof ( cipher_evp_t ) )"		114332	0					
ANR	114396	Callee	memset		114332	0					
ANR	114397	Identifier	memset		114332	0					
ANR	114398	ArgumentList	ctx -> evp		114332	1					
ANR	114399	Argument	ctx -> evp		114332	0					
ANR	114400	PtrMemberAccess	ctx -> evp		114332	0					
ANR	114401	Identifier	ctx		114332	0					
ANR	114402	Identifier	evp		114332	1					
ANR	114403	Argument	0		114332	1					
ANR	114404	PrimaryExpression	0		114332	0					
ANR	114405	Argument	sizeof ( cipher_evp_t )		114332	2					
ANR	114406	SizeofExpression	sizeof ( cipher_evp_t )		114332	0					
ANR	114407	Sizeof	sizeof		114332	0					
ANR	114408	SizeofOperand	cipher_evp_t		114332	1					
ANR	114409	IdentifierDeclStatement	cipher_evp_t * evp = ctx -> evp ;	241:4:6631:6659	114332	6	True				
ANR	114410	IdentifierDecl	* evp = ctx -> evp		114332	0					
ANR	114411	IdentifierDeclType	cipher_evp_t *		114332	0					
ANR	114412	Identifier	evp		114332	1					
ANR	114413	AssignmentExpression	* evp = ctx -> evp		114332	2		=			
ANR	114414	Identifier	evp		114332	0					
ANR	114415	PtrMemberAccess	ctx -> evp		114332	1					
ANR	114416	Identifier	ctx		114332	0					
ANR	114417	Identifier	evp		114332	1					
ANR	114418	IfStatement	if ( cipher == NULL )		114332	7					
ANR	114419	Condition	cipher == NULL	243:8:6670:6683	114332	0	True				
ANR	114420	EqualityExpression	cipher == NULL		114332	0		==			
ANR	114421	Identifier	cipher		114332	0					
ANR	114422	Identifier	NULL		114332	1					
ANR	114423	CompoundStatement		18:24:470:470	114332	1					
ANR	114424	ExpressionStatement	"LOGE ( ""Cipher %s not found in mbed TLS library"" , ciphername )"	244:8:6696:6755	114332	0	True				
ANR	114425	CallExpression	"LOGE ( ""Cipher %s not found in mbed TLS library"" , ciphername )"		114332	0					
ANR	114426	Callee	LOGE		114332	0					
ANR	114427	Identifier	LOGE		114332	0					
ANR	114428	ArgumentList	"""Cipher %s not found in mbed TLS library"""		114332	1					
ANR	114429	Argument	"""Cipher %s not found in mbed TLS library"""		114332	0					
ANR	114430	PrimaryExpression	"""Cipher %s not found in mbed TLS library"""		114332	0					
ANR	114431	Argument	ciphername		114332	1					
ANR	114432	Identifier	ciphername		114332	0					
ANR	114433	ExpressionStatement	"FATAL ( ""Cannot initialize mbed TLS cipher"" )"	245:8:6765:6807	114332	1	True				
ANR	114434	CallExpression	"FATAL ( ""Cannot initialize mbed TLS cipher"" )"		114332	0					
ANR	114435	Callee	FATAL		114332	0					
ANR	114436	Identifier	FATAL		114332	0					
ANR	114437	ArgumentList	"""Cannot initialize mbed TLS cipher"""		114332	1					
ANR	114438	Argument	"""Cannot initialize mbed TLS cipher"""		114332	0					
ANR	114439	PrimaryExpression	"""Cannot initialize mbed TLS cipher"""		114332	0					
ANR	114440	ExpressionStatement	mbedtls_cipher_init ( evp )	247:4:6819:6843	114332	8	True				
ANR	114441	CallExpression	mbedtls_cipher_init ( evp )		114332	0					
ANR	114442	Callee	mbedtls_cipher_init		114332	0					
ANR	114443	Identifier	mbedtls_cipher_init		114332	0					
ANR	114444	ArgumentList	evp		114332	1					
ANR	114445	Argument	evp		114332	0					
ANR	114446	Identifier	evp		114332	0					
ANR	114447	IfStatement	"if ( mbedtls_cipher_setup ( evp , cipher ) != 0 )"		114332	9					
ANR	114448	Condition	"mbedtls_cipher_setup ( evp , cipher ) != 0"	248:8:6853:6890	114332	0	True				
ANR	114449	EqualityExpression	"mbedtls_cipher_setup ( evp , cipher ) != 0"		114332	0		!=			
ANR	114450	CallExpression	"mbedtls_cipher_setup ( evp , cipher )"		114332	0					
ANR	114451	Callee	mbedtls_cipher_setup		114332	0					
ANR	114452	Identifier	mbedtls_cipher_setup		114332	0					
ANR	114453	ArgumentList	evp		114332	1					
ANR	114454	Argument	evp		114332	0					
ANR	114455	Identifier	evp		114332	0					
ANR	114456	Argument	cipher		114332	1					
ANR	114457	Identifier	cipher		114332	0					
ANR	114458	PrimaryExpression	0		114332	1					
ANR	114459	CompoundStatement		23:48:677:677	114332	1					
ANR	114460	ExpressionStatement	"FATAL ( ""Cannot initialize mbed TLS cipher context"" )"	249:8:6903:6953	114332	0	True				
ANR	114461	CallExpression	"FATAL ( ""Cannot initialize mbed TLS cipher context"" )"		114332	0					
ANR	114462	Callee	FATAL		114332	0					
ANR	114463	Identifier	FATAL		114332	0					
ANR	114464	ArgumentList	"""Cannot initialize mbed TLS cipher context"""		114332	1					
ANR	114465	Argument	"""Cannot initialize mbed TLS cipher context"""		114332	0					
ANR	114466	PrimaryExpression	"""Cannot initialize mbed TLS cipher context"""		114332	0					
ANR	114467	ReturnType	void		114332	1					
ANR	114468	Identifier	stream_cipher_ctx_init		114332	2					
ANR	114469	ParameterList	"cipher_ctx_t * ctx , int method , int enc"		114332	3					
ANR	114470	Parameter	cipher_ctx_t * ctx	225:23:6175:6191	114332	0	True				
ANR	114471	ParameterType	cipher_ctx_t *		114332	0					
ANR	114472	Identifier	ctx		114332	1					
ANR	114473	Parameter	int method	225:42:6194:6203	114332	1	True				
ANR	114474	ParameterType	int		114332	0					
ANR	114475	Identifier	method		114332	1					
ANR	114476	Parameter	int enc	225:54:6206:6212	114332	2	True				
ANR	114477	ParameterType	int		114332	0					
ANR	114478	Identifier	enc		114332	1					
ANR	114479	CFGEntryNode	ENTRY		114332		True				
ANR	114480	CFGExitNode	EXIT		114332		True				
ANR	114481	Symbol	cipher		114332						
ANR	114482	Symbol	mbedtls_cipher_setup		114332						
ANR	114483	Symbol	ciphername		114332						
ANR	114484	Symbol	stream_get_cipher_type		114332						
ANR	114485	Symbol	NULL		114332						
ANR	114486	Symbol	method		114332						
ANR	114487	Symbol	ctx		114332						
ANR	114488	Symbol	ctx -> evp		114332						
ANR	114489	Symbol	* method		114332						
ANR	114490	Symbol	STREAM_CIPHER_NUM		114332						
ANR	114491	Symbol	* supported_stream_ciphers		114332						
ANR	114492	Symbol	* ctx		114332						
ANR	114493	Symbol	SALSA20		114332						
ANR	114494	Symbol	TABLE		114332						
ANR	114495	Symbol	supported_stream_ciphers		114332						
ANR	114496	Symbol	ss_malloc		114332						
ANR	114497	Symbol	enc		114332						
ANR	114498	Symbol	evp		114332						
ANR	114499	Function	stream_ctx_release	253:0:6964:7308							
ANR	114500	FunctionDef	stream_ctx_release (cipher_ctx_t * cipher_ctx)		114499	0					
ANR	114501	CompoundStatement		255:0:7014:7308	114499	0					
ANR	114502	IfStatement	if ( cipher_ctx -> chunk != NULL )		114499	0					
ANR	114503	Condition	cipher_ctx -> chunk != NULL	256:8:7024:7048	114499	0	True				
ANR	114504	EqualityExpression	cipher_ctx -> chunk != NULL		114499	0		!=			
ANR	114505	PtrMemberAccess	cipher_ctx -> chunk		114499	0					
ANR	114506	Identifier	cipher_ctx		114499	0					
ANR	114507	Identifier	chunk		114499	1					
ANR	114508	Identifier	NULL		114499	1					
ANR	114509	CompoundStatement		2:35:36:36	114499	1					
ANR	114510	ExpressionStatement	bfree ( cipher_ctx -> chunk )	257:8:7061:7085	114499	0	True				
ANR	114511	CallExpression	bfree ( cipher_ctx -> chunk )		114499	0					
ANR	114512	Callee	bfree		114499	0					
ANR	114513	Identifier	bfree		114499	0					
ANR	114514	ArgumentList	cipher_ctx -> chunk		114499	1					
ANR	114515	Argument	cipher_ctx -> chunk		114499	0					
ANR	114516	PtrMemberAccess	cipher_ctx -> chunk		114499	0					
ANR	114517	Identifier	cipher_ctx		114499	0					
ANR	114518	Identifier	chunk		114499	1					
ANR	114519	ExpressionStatement	ss_free ( cipher_ctx -> chunk )	258:8:7095:7121	114499	1	True				
ANR	114520	CallExpression	ss_free ( cipher_ctx -> chunk )		114499	0					
ANR	114521	Callee	ss_free		114499	0					
ANR	114522	Identifier	ss_free		114499	0					
ANR	114523	ArgumentList	cipher_ctx -> chunk		114499	1					
ANR	114524	Argument	cipher_ctx -> chunk		114499	0					
ANR	114525	PtrMemberAccess	cipher_ctx -> chunk		114499	0					
ANR	114526	Identifier	cipher_ctx		114499	0					
ANR	114527	Identifier	chunk		114499	1					
ANR	114528	ExpressionStatement	cipher_ctx -> chunk = NULL	259:8:7131:7155	114499	2	True				
ANR	114529	AssignmentExpression	cipher_ctx -> chunk = NULL		114499	0		=			
ANR	114530	PtrMemberAccess	cipher_ctx -> chunk		114499	0					
ANR	114531	Identifier	cipher_ctx		114499	0					
ANR	114532	Identifier	chunk		114499	1					
ANR	114533	Identifier	NULL		114499	1					
ANR	114534	IfStatement	if ( cipher_ctx -> cipher -> method >= SALSA20 )		114499	1					
ANR	114535	Condition	cipher_ctx -> cipher -> method >= SALSA20	262:8:7172:7208	114499	0	True				
ANR	114536	RelationalExpression	cipher_ctx -> cipher -> method >= SALSA20		114499	0		>=			
ANR	114537	PtrMemberAccess	cipher_ctx -> cipher -> method		114499	0					
ANR	114538	PtrMemberAccess	cipher_ctx -> cipher		114499	0					
ANR	114539	Identifier	cipher_ctx		114499	0					
ANR	114540	Identifier	cipher		114499	1					
ANR	114541	Identifier	method		114499	1					
ANR	114542	Identifier	SALSA20		114499	1					
ANR	114543	CompoundStatement		8:47:196:196	114499	1					
ANR	114544	ReturnStatement	return ;	263:8:7221:7227	114499	0	True				
ANR	114545	ExpressionStatement	mbedtls_cipher_free ( cipher_ctx -> evp )	266:4:7240:7276	114499	2	True				
ANR	114546	CallExpression	mbedtls_cipher_free ( cipher_ctx -> evp )		114499	0					
ANR	114547	Callee	mbedtls_cipher_free		114499	0					
ANR	114548	Identifier	mbedtls_cipher_free		114499	0					
ANR	114549	ArgumentList	cipher_ctx -> evp		114499	1					
ANR	114550	Argument	cipher_ctx -> evp		114499	0					
ANR	114551	PtrMemberAccess	cipher_ctx -> evp		114499	0					
ANR	114552	Identifier	cipher_ctx		114499	0					
ANR	114553	Identifier	evp		114499	1					
ANR	114554	ExpressionStatement	ss_free ( cipher_ctx -> evp )	267:4:7282:7306	114499	3	True				
ANR	114555	CallExpression	ss_free ( cipher_ctx -> evp )		114499	0					
ANR	114556	Callee	ss_free		114499	0					
ANR	114557	Identifier	ss_free		114499	0					
ANR	114558	ArgumentList	cipher_ctx -> evp		114499	1					
ANR	114559	Argument	cipher_ctx -> evp		114499	0					
ANR	114560	PtrMemberAccess	cipher_ctx -> evp		114499	0					
ANR	114561	Identifier	cipher_ctx		114499	0					
ANR	114562	Identifier	evp		114499	1					
ANR	114563	ReturnType	void		114499	1					
ANR	114564	Identifier	stream_ctx_release		114499	2					
ANR	114565	ParameterList	cipher_ctx_t * cipher_ctx		114499	3					
ANR	114566	Parameter	cipher_ctx_t * cipher_ctx	254:19:6988:7011	114499	0	True				
ANR	114567	ParameterType	cipher_ctx_t *		114499	0					
ANR	114568	Identifier	cipher_ctx		114499	1					
ANR	114569	CFGEntryNode	ENTRY		114499		True				
ANR	114570	CFGExitNode	EXIT		114499		True				
ANR	114571	Symbol	* * cipher_ctx		114499						
ANR	114572	Symbol	cipher_ctx -> cipher -> method		114499						
ANR	114573	Symbol	cipher_ctx -> cipher		114499						
ANR	114574	Symbol	cipher_ctx		114499						
ANR	114575	Symbol	NULL		114499						
ANR	114576	Symbol	* cipher_ctx		114499						
ANR	114577	Symbol	cipher_ctx -> evp		114499						
ANR	114578	Symbol	cipher_ctx -> chunk		114499						
ANR	114579	Symbol	SALSA20		114499						
ANR	114580	Symbol	* cipher_ctx -> cipher		114499						
ANR	114581	Function	cipher_ctx_set_nonce	270:0:7311:8679							
ANR	114582	FunctionDef	"cipher_ctx_set_nonce (cipher_ctx_t * cipher_ctx , uint8_t * nonce , size_t nonce_len , int enc)"		114581	0					
ANR	114583	CompoundStatement		273:0:7427:8679	114581	0					
ANR	114584	IdentifierDeclStatement	const unsigned char * true_key ;	274:4:7433:7462	114581	0	True				
ANR	114585	IdentifierDecl	* true_key		114581	0					
ANR	114586	IdentifierDeclType	const unsigned char *		114581	0					
ANR	114587	Identifier	true_key		114581	1					
ANR	114588	IdentifierDeclStatement	cipher_t * cipher = cipher_ctx -> cipher ;	276:4:7469:7506	114581	1	True				
ANR	114589	IdentifierDecl	* cipher = cipher_ctx -> cipher		114581	0					
ANR	114590	IdentifierDeclType	cipher_t *		114581	0					
ANR	114591	Identifier	cipher		114581	1					
ANR	114592	AssignmentExpression	* cipher = cipher_ctx -> cipher		114581	2		=			
ANR	114593	Identifier	cipher		114581	0					
ANR	114594	PtrMemberAccess	cipher_ctx -> cipher		114581	1					
ANR	114595	Identifier	cipher_ctx		114581	0					
ANR	114596	Identifier	cipher		114581	1					
ANR	114597	IfStatement	if ( nonce == NULL )		114581	2					
ANR	114598	Condition	nonce == NULL	278:8:7517:7529	114581	0	True				
ANR	114599	EqualityExpression	nonce == NULL		114581	0		==			
ANR	114600	Identifier	nonce		114581	0					
ANR	114601	Identifier	NULL		114581	1					
ANR	114602	CompoundStatement		6:23:104:104	114581	1					
ANR	114603	ExpressionStatement	"LOGE ( ""cipher_ctx_set_nonce(): NONCE is null"" )"	279:8:7542:7587	114581	0	True				
ANR	114604	CallExpression	"LOGE ( ""cipher_ctx_set_nonce(): NONCE is null"" )"		114581	0					
ANR	114605	Callee	LOGE		114581	0					
ANR	114606	Identifier	LOGE		114581	0					
ANR	114607	ArgumentList	"""cipher_ctx_set_nonce(): NONCE is null"""		114581	1					
ANR	114608	Argument	"""cipher_ctx_set_nonce(): NONCE is null"""		114581	0					
ANR	114609	PrimaryExpression	"""cipher_ctx_set_nonce(): NONCE is null"""		114581	0					
ANR	114610	ReturnStatement	return ;	280:8:7597:7603	114581	1	True				
ANR	114611	IfStatement	if ( cipher -> method >= SALSA20 )		114581	3					
ANR	114612	Condition	cipher -> method >= SALSA20	283:8:7620:7644	114581	0	True				
ANR	114613	RelationalExpression	cipher -> method >= SALSA20		114581	0		>=			
ANR	114614	PtrMemberAccess	cipher -> method		114581	0					
ANR	114615	Identifier	cipher		114581	0					
ANR	114616	Identifier	method		114581	1					
ANR	114617	Identifier	SALSA20		114581	1					
ANR	114618	CompoundStatement		11:35:219:219	114581	1					
ANR	114619	ReturnStatement	return ;	284:8:7657:7663	114581	0	True				
ANR	114620	IfStatement	if ( cipher -> method == RC4_MD5 )		114581	4					
ANR	114621	Condition	cipher -> method == RC4_MD5	287:8:7680:7704	114581	0	True				
ANR	114622	EqualityExpression	cipher -> method == RC4_MD5		114581	0		==			
ANR	114623	PtrMemberAccess	cipher -> method		114581	0					
ANR	114624	Identifier	cipher		114581	0					
ANR	114625	Identifier	method		114581	1					
ANR	114626	Identifier	RC4_MD5		114581	1					
ANR	114627	CompoundStatement		16:8:289:316	114581	1					
ANR	114628	IdentifierDeclStatement	unsigned char key_nonce [ 32 ] ;	288:8:7717:7744	114581	0	True				
ANR	114629	IdentifierDecl	key_nonce [ 32 ]		114581	0					
ANR	114630	IdentifierDeclType	unsigned char [ 32 ]		114581	0					
ANR	114631	Identifier	key_nonce		114581	1					
ANR	114632	PrimaryExpression	32		114581	2					
ANR	114633	ExpressionStatement	"memcpy ( key_nonce , cipher -> key , 16 )"	289:8:7754:7788	114581	1	True				
ANR	114634	CallExpression	"memcpy ( key_nonce , cipher -> key , 16 )"		114581	0					
ANR	114635	Callee	memcpy		114581	0					
ANR	114636	Identifier	memcpy		114581	0					
ANR	114637	ArgumentList	key_nonce		114581	1					
ANR	114638	Argument	key_nonce		114581	0					
ANR	114639	Identifier	key_nonce		114581	0					
ANR	114640	Argument	cipher -> key		114581	1					
ANR	114641	PtrMemberAccess	cipher -> key		114581	0					
ANR	114642	Identifier	cipher		114581	0					
ANR	114643	Identifier	key		114581	1					
ANR	114644	Argument	16		114581	2					
ANR	114645	PrimaryExpression	16		114581	0					
ANR	114646	ExpressionStatement	"memcpy ( key_nonce + 16 , nonce , 16 )"	290:8:7798:7831	114581	2	True				
ANR	114647	CallExpression	"memcpy ( key_nonce + 16 , nonce , 16 )"		114581	0					
ANR	114648	Callee	memcpy		114581	0					
ANR	114649	Identifier	memcpy		114581	0					
ANR	114650	ArgumentList	key_nonce + 16		114581	1					
ANR	114651	Argument	key_nonce + 16		114581	0					
ANR	114652	AdditiveExpression	key_nonce + 16		114581	0		+			
ANR	114653	Identifier	key_nonce		114581	0					
ANR	114654	PrimaryExpression	16		114581	1					
ANR	114655	Argument	nonce		114581	1					
ANR	114656	Identifier	nonce		114581	0					
ANR	114657	Argument	16		114581	2					
ANR	114658	PrimaryExpression	16		114581	0					
ANR	114659	ExpressionStatement	"true_key = crypto_md5 ( key_nonce , 32 , NULL )"	291:8:7841:7884	114581	3	True				
ANR	114660	AssignmentExpression	"true_key = crypto_md5 ( key_nonce , 32 , NULL )"		114581	0		=			
ANR	114661	Identifier	true_key		114581	0					
ANR	114662	CallExpression	"crypto_md5 ( key_nonce , 32 , NULL )"		114581	1					
ANR	114663	Callee	crypto_md5		114581	0					
ANR	114664	Identifier	crypto_md5		114581	0					
ANR	114665	ArgumentList	key_nonce		114581	1					
ANR	114666	Argument	key_nonce		114581	0					
ANR	114667	Identifier	key_nonce		114581	0					
ANR	114668	Argument	32		114581	1					
ANR	114669	PrimaryExpression	32		114581	0					
ANR	114670	Argument	NULL		114581	2					
ANR	114671	Identifier	NULL		114581	0					
ANR	114672	ExpressionStatement	nonce_len = 0	292:8:7894:7907	114581	4	True				
ANR	114673	AssignmentExpression	nonce_len = 0		114581	0		=			
ANR	114674	Identifier	nonce_len		114581	0					
ANR	114675	PrimaryExpression	0		114581	1					
ANR	114676	ElseStatement	else		114581	0					
ANR	114677	CompoundStatement		21:11:492:492	114581	0					
ANR	114678	ExpressionStatement	true_key = cipher -> key	294:8:7930:7952	114581	0	True				
ANR	114679	AssignmentExpression	true_key = cipher -> key		114581	0		=			
ANR	114680	Identifier	true_key		114581	0					
ANR	114681	PtrMemberAccess	cipher -> key		114581	1					
ANR	114682	Identifier	cipher		114581	0					
ANR	114683	Identifier	key		114581	1					
ANR	114684	IdentifierDeclStatement	cipher_evp_t * evp = cipher_ctx -> evp ;	297:4:7965:8000	114581	5	True				
ANR	114685	IdentifierDecl	* evp = cipher_ctx -> evp		114581	0					
ANR	114686	IdentifierDeclType	cipher_evp_t *		114581	0					
ANR	114687	Identifier	evp		114581	1					
ANR	114688	AssignmentExpression	* evp = cipher_ctx -> evp		114581	2		=			
ANR	114689	Identifier	evp		114581	0					
ANR	114690	PtrMemberAccess	cipher_ctx -> evp		114581	1					
ANR	114691	Identifier	cipher_ctx		114581	0					
ANR	114692	Identifier	evp		114581	1					
ANR	114693	IfStatement	if ( evp == NULL )		114581	6					
ANR	114694	Condition	evp == NULL	298:8:8010:8020	114581	0	True				
ANR	114695	EqualityExpression	evp == NULL		114581	0		==			
ANR	114696	Identifier	evp		114581	0					
ANR	114697	Identifier	NULL		114581	1					
ANR	114698	CompoundStatement		26:21:595:595	114581	1					
ANR	114699	ExpressionStatement	"LOGE ( ""cipher_ctx_set_nonce(): Cipher context is null"" )"	299:8:8033:8087	114581	0	True				
ANR	114700	CallExpression	"LOGE ( ""cipher_ctx_set_nonce(): Cipher context is null"" )"		114581	0					
ANR	114701	Callee	LOGE		114581	0					
ANR	114702	Identifier	LOGE		114581	0					
ANR	114703	ArgumentList	"""cipher_ctx_set_nonce(): Cipher context is null"""		114581	1					
ANR	114704	Argument	"""cipher_ctx_set_nonce(): Cipher context is null"""		114581	0					
ANR	114705	PrimaryExpression	"""cipher_ctx_set_nonce(): Cipher context is null"""		114581	0					
ANR	114706	ReturnStatement	return ;	300:8:8097:8103	114581	1	True				
ANR	114707	IfStatement	"if ( mbedtls_cipher_setkey ( evp , true_key , cipher -> key_len * 8 , enc ) != 0 )"		114581	7					
ANR	114708	Condition	"mbedtls_cipher_setkey ( evp , true_key , cipher -> key_len * 8 , enc ) != 0"	302:8:8119:8185	114581	0	True				
ANR	114709	EqualityExpression	"mbedtls_cipher_setkey ( evp , true_key , cipher -> key_len * 8 , enc ) != 0"		114581	0		!=			
ANR	114710	CallExpression	"mbedtls_cipher_setkey ( evp , true_key , cipher -> key_len * 8 , enc )"		114581	0					
ANR	114711	Callee	mbedtls_cipher_setkey		114581	0					
ANR	114712	Identifier	mbedtls_cipher_setkey		114581	0					
ANR	114713	ArgumentList	evp		114581	1					
ANR	114714	Argument	evp		114581	0					
ANR	114715	Identifier	evp		114581	0					
ANR	114716	Argument	true_key		114581	1					
ANR	114717	Identifier	true_key		114581	0					
ANR	114718	Argument	cipher -> key_len * 8		114581	2					
ANR	114719	MultiplicativeExpression	cipher -> key_len * 8		114581	0		*			
ANR	114720	PtrMemberAccess	cipher -> key_len		114581	0					
ANR	114721	Identifier	cipher		114581	0					
ANR	114722	Identifier	key_len		114581	1					
ANR	114723	PrimaryExpression	8		114581	1					
ANR	114724	Argument	enc		114581	3					
ANR	114725	Identifier	enc		114581	0					
ANR	114726	PrimaryExpression	0		114581	1					
ANR	114727	CompoundStatement		30:77:760:760	114581	1					
ANR	114728	ExpressionStatement	mbedtls_cipher_free ( evp )	303:8:8198:8222	114581	0	True				
ANR	114729	CallExpression	mbedtls_cipher_free ( evp )		114581	0					
ANR	114730	Callee	mbedtls_cipher_free		114581	0					
ANR	114731	Identifier	mbedtls_cipher_free		114581	0					
ANR	114732	ArgumentList	evp		114581	1					
ANR	114733	Argument	evp		114581	0					
ANR	114734	Identifier	evp		114581	0					
ANR	114735	ExpressionStatement	"FATAL ( ""Cannot set mbed TLS cipher key"" )"	304:8:8232:8271	114581	1	True				
ANR	114736	CallExpression	"FATAL ( ""Cannot set mbed TLS cipher key"" )"		114581	0					
ANR	114737	Callee	FATAL		114581	0					
ANR	114738	Identifier	FATAL		114581	0					
ANR	114739	ArgumentList	"""Cannot set mbed TLS cipher key"""		114581	1					
ANR	114740	Argument	"""Cannot set mbed TLS cipher key"""		114581	0					
ANR	114741	PrimaryExpression	"""Cannot set mbed TLS cipher key"""		114581	0					
ANR	114742	IfStatement	"if ( mbedtls_cipher_set_iv ( evp , nonce , nonce_len ) != 0 )"		114581	8					
ANR	114743	Condition	"mbedtls_cipher_set_iv ( evp , nonce , nonce_len ) != 0"	306:8:8287:8335	114581	0	True				
ANR	114744	EqualityExpression	"mbedtls_cipher_set_iv ( evp , nonce , nonce_len ) != 0"		114581	0		!=			
ANR	114745	CallExpression	"mbedtls_cipher_set_iv ( evp , nonce , nonce_len )"		114581	0					
ANR	114746	Callee	mbedtls_cipher_set_iv		114581	0					
ANR	114747	Identifier	mbedtls_cipher_set_iv		114581	0					
ANR	114748	ArgumentList	evp		114581	1					
ANR	114749	Argument	evp		114581	0					
ANR	114750	Identifier	evp		114581	0					
ANR	114751	Argument	nonce		114581	1					
ANR	114752	Identifier	nonce		114581	0					
ANR	114753	Argument	nonce_len		114581	2					
ANR	114754	Identifier	nonce_len		114581	0					
ANR	114755	PrimaryExpression	0		114581	1					
ANR	114756	CompoundStatement		34:59:910:910	114581	1					
ANR	114757	ExpressionStatement	mbedtls_cipher_free ( evp )	307:8:8348:8372	114581	0	True				
ANR	114758	CallExpression	mbedtls_cipher_free ( evp )		114581	0					
ANR	114759	Callee	mbedtls_cipher_free		114581	0					
ANR	114760	Identifier	mbedtls_cipher_free		114581	0					
ANR	114761	ArgumentList	evp		114581	1					
ANR	114762	Argument	evp		114581	0					
ANR	114763	Identifier	evp		114581	0					
ANR	114764	ExpressionStatement	"FATAL ( ""Cannot set mbed TLS cipher NONCE"" )"	308:8:8382:8423	114581	1	True				
ANR	114765	CallExpression	"FATAL ( ""Cannot set mbed TLS cipher NONCE"" )"		114581	0					
ANR	114766	Callee	FATAL		114581	0					
ANR	114767	Identifier	FATAL		114581	0					
ANR	114768	ArgumentList	"""Cannot set mbed TLS cipher NONCE"""		114581	1					
ANR	114769	Argument	"""Cannot set mbed TLS cipher NONCE"""		114581	0					
ANR	114770	PrimaryExpression	"""Cannot set mbed TLS cipher NONCE"""		114581	0					
ANR	114771	IfStatement	if ( mbedtls_cipher_reset ( evp ) != 0 )		114581	9					
ANR	114772	Condition	mbedtls_cipher_reset ( evp ) != 0	310:8:8439:8468	114581	0	True				
ANR	114773	EqualityExpression	mbedtls_cipher_reset ( evp ) != 0		114581	0		!=			
ANR	114774	CallExpression	mbedtls_cipher_reset ( evp )		114581	0					
ANR	114775	Callee	mbedtls_cipher_reset		114581	0					
ANR	114776	Identifier	mbedtls_cipher_reset		114581	0					
ANR	114777	ArgumentList	evp		114581	1					
ANR	114778	Argument	evp		114581	0					
ANR	114779	Identifier	evp		114581	0					
ANR	114780	PrimaryExpression	0		114581	1					
ANR	114781	CompoundStatement		38:40:1043:1043	114581	1					
ANR	114782	ExpressionStatement	mbedtls_cipher_free ( evp )	311:8:8481:8505	114581	0	True				
ANR	114783	CallExpression	mbedtls_cipher_free ( evp )		114581	0					
ANR	114784	Callee	mbedtls_cipher_free		114581	0					
ANR	114785	Identifier	mbedtls_cipher_free		114581	0					
ANR	114786	ArgumentList	evp		114581	1					
ANR	114787	Argument	evp		114581	0					
ANR	114788	Identifier	evp		114581	0					
ANR	114789	ExpressionStatement	"FATAL ( ""Cannot finalize mbed TLS cipher context"" )"	312:8:8515:8563	114581	1	True				
ANR	114790	CallExpression	"FATAL ( ""Cannot finalize mbed TLS cipher context"" )"		114581	0					
ANR	114791	Callee	FATAL		114581	0					
ANR	114792	Identifier	FATAL		114581	0					
ANR	114793	ArgumentList	"""Cannot finalize mbed TLS cipher context"""		114581	1					
ANR	114794	Argument	"""Cannot finalize mbed TLS cipher context"""		114581	0					
ANR	114795	PrimaryExpression	"""Cannot finalize mbed TLS cipher context"""		114581	0					
ANR	114796	ExpressionStatement	"dump ( ""NONCE"" , ( char * ) nonce , nonce_len )"	316:4:8592:8631	114581	10	True				
ANR	114797	CallExpression	"dump ( ""NONCE"" , ( char * ) nonce , nonce_len )"		114581	0					
ANR	114798	Callee	dump		114581	0					
ANR	114799	Identifier	dump		114581	0					
ANR	114800	ArgumentList	"""NONCE"""		114581	1					
ANR	114801	Argument	"""NONCE"""		114581	0					
ANR	114802	PrimaryExpression	"""NONCE"""		114581	0					
ANR	114803	Argument	( char * ) nonce		114581	1					
ANR	114804	CastExpression	( char * ) nonce		114581	0					
ANR	114805	CastTarget	char *		114581	0					
ANR	114806	Identifier	nonce		114581	1					
ANR	114807	Argument	nonce_len		114581	2					
ANR	114808	Identifier	nonce_len		114581	0					
ANR	114809	ExpressionStatement	"dump ( ""KEY"" , ( char * ) true_key , 32 )"	317:4:8637:8670	114581	11	True				
ANR	114810	CallExpression	"dump ( ""KEY"" , ( char * ) true_key , 32 )"		114581	0					
ANR	114811	Callee	dump		114581	0					
ANR	114812	Identifier	dump		114581	0					
ANR	114813	ArgumentList	"""KEY"""		114581	1					
ANR	114814	Argument	"""KEY"""		114581	0					
ANR	114815	PrimaryExpression	"""KEY"""		114581	0					
ANR	114816	Argument	( char * ) true_key		114581	1					
ANR	114817	CastExpression	( char * ) true_key		114581	0					
ANR	114818	CastTarget	char *		114581	0					
ANR	114819	Identifier	true_key		114581	1					
ANR	114820	Argument	32		114581	2					
ANR	114821	PrimaryExpression	32		114581	0					
ANR	114822	ReturnType	void		114581	1					
ANR	114823	Identifier	cipher_ctx_set_nonce		114581	2					
ANR	114824	ParameterList	"cipher_ctx_t * cipher_ctx , uint8_t * nonce , size_t nonce_len , int enc"		114581	3					
ANR	114825	Parameter	cipher_ctx_t * cipher_ctx	271:21:7337:7360	114581	0	True				
ANR	114826	ParameterType	cipher_ctx_t *		114581	0					
ANR	114827	Identifier	cipher_ctx		114581	1					
ANR	114828	Parameter	uint8_t * nonce	271:47:7363:7376	114581	1	True				
ANR	114829	ParameterType	uint8_t *		114581	0					
ANR	114830	Identifier	nonce		114581	1					
ANR	114831	Parameter	size_t nonce_len	271:63:7379:7394	114581	2	True				
ANR	114832	ParameterType	size_t		114581	0					
ANR	114833	Identifier	nonce_len		114581	1					
ANR	114834	Parameter	int enc	272:21:7418:7424	114581	3	True				
ANR	114835	ParameterType	int		114581	0					
ANR	114836	Identifier	enc		114581	1					
ANR	114837	CFGEntryNode	ENTRY		114581		True				
ANR	114838	CFGExitNode	EXIT		114581		True				
ANR	114839	Symbol	cipher		114581						
ANR	114840	Symbol	mbedtls_cipher_reset		114581						
ANR	114841	Symbol	cipher_ctx -> cipher		114581						
ANR	114842	Symbol	cipher_ctx		114581						
ANR	114843	Symbol	NULL		114581						
ANR	114844	Symbol	crypto_md5		114581						
ANR	114845	Symbol	* cipher_ctx		114581						
ANR	114846	Symbol	* cipher		114581						
ANR	114847	Symbol	nonce_len		114581						
ANR	114848	Symbol	mbedtls_cipher_set_iv		114581						
ANR	114849	Symbol	nonce		114581						
ANR	114850	Symbol	key_nonce		114581						
ANR	114851	Symbol	SALSA20		114581						
ANR	114852	Symbol	mbedtls_cipher_setkey		114581						
ANR	114853	Symbol	cipher_ctx -> evp		114581						
ANR	114854	Symbol	cipher -> key_len		114581						
ANR	114855	Symbol	cipher -> method		114581						
ANR	114856	Symbol	cipher -> key		114581						
ANR	114857	Symbol	enc		114581						
ANR	114858	Symbol	RC4_MD5		114581						
ANR	114859	Symbol	evp		114581						
ANR	114860	Symbol	true_key		114581						
ANR	114861	Function	cipher_ctx_update	321:0:8682:8977							
ANR	114862	FunctionDef	"cipher_ctx_update (cipher_ctx_t * ctx , uint8_t * output , size_t * olen , const uint8_t * input , size_t ilen)"		114861	0					
ANR	114863	CompoundStatement		324:0:8814:8977	114861	0					
ANR	114864	IdentifierDeclStatement	cipher_evp_t * evp = ctx -> evp ;	325:4:8820:8848	114861	0	True				
ANR	114865	IdentifierDecl	* evp = ctx -> evp		114861	0					
ANR	114866	IdentifierDeclType	cipher_evp_t *		114861	0					
ANR	114867	Identifier	evp		114861	1					
ANR	114868	AssignmentExpression	* evp = ctx -> evp		114861	2		=			
ANR	114869	Identifier	evp		114861	0					
ANR	114870	PtrMemberAccess	ctx -> evp		114861	1					
ANR	114871	Identifier	ctx		114861	0					
ANR	114872	Identifier	evp		114861	1					
ANR	114873	ReturnStatement	"return mbedtls_cipher_update ( evp , ( const uint8_t * ) input , ilen , ( uint8_t * ) output , olen ) ;"	326:4:8854:8975	114861	1	True				
ANR	114874	CallExpression	"mbedtls_cipher_update ( evp , ( const uint8_t * ) input , ilen , ( uint8_t * ) output , olen )"		114861	0					
ANR	114875	Callee	mbedtls_cipher_update		114861	0					
ANR	114876	Identifier	mbedtls_cipher_update		114861	0					
ANR	114877	ArgumentList	evp		114861	1					
ANR	114878	Argument	evp		114861	0					
ANR	114879	Identifier	evp		114861	0					
ANR	114880	Argument	( const uint8_t * ) input		114861	1					
ANR	114881	CastExpression	( const uint8_t * ) input		114861	0					
ANR	114882	CastTarget	const uint8_t *		114861	0					
ANR	114883	Identifier	input		114861	1					
ANR	114884	Argument	ilen		114861	2					
ANR	114885	Identifier	ilen		114861	0					
ANR	114886	Argument	( uint8_t * ) output		114861	3					
ANR	114887	CastExpression	( uint8_t * ) output		114861	0					
ANR	114888	CastTarget	uint8_t *		114861	0					
ANR	114889	Identifier	output		114861	1					
ANR	114890	Argument	olen		114861	4					
ANR	114891	Identifier	olen		114861	0					
ANR	114892	ReturnType	static int		114861	1					
ANR	114893	Identifier	cipher_ctx_update		114861	2					
ANR	114894	ParameterList	"cipher_ctx_t * ctx , uint8_t * output , size_t * olen , const uint8_t * input , size_t ilen"		114861	3					
ANR	114895	Parameter	cipher_ctx_t * ctx	322:18:8711:8727	114861	0	True				
ANR	114896	ParameterType	cipher_ctx_t *		114861	0					
ANR	114897	Identifier	ctx		114861	1					
ANR	114898	Parameter	uint8_t * output	322:37:8730:8744	114861	1	True				
ANR	114899	ParameterType	uint8_t *		114861	0					
ANR	114900	Identifier	output		114861	1					
ANR	114901	Parameter	size_t * olen	322:54:8747:8758	114861	2	True				
ANR	114902	ParameterType	size_t *		114861	0					
ANR	114903	Identifier	olen		114861	1					
ANR	114904	Parameter	const uint8_t * input	323:18:8779:8798	114861	3	True				
ANR	114905	ParameterType	const uint8_t *		114861	0					
ANR	114906	Identifier	input		114861	1					
ANR	114907	Parameter	size_t ilen	323:40:8801:8811	114861	4	True				
ANR	114908	ParameterType	size_t		114861	0					
ANR	114909	Identifier	ilen		114861	1					
ANR	114910	CFGEntryNode	ENTRY		114861		True				
ANR	114911	CFGExitNode	EXIT		114861		True				
ANR	114912	Symbol	output		114861						
ANR	114913	Symbol	input		114861						
ANR	114914	Symbol	olen		114861						
ANR	114915	Symbol	ctx		114861						
ANR	114916	Symbol	ctx -> evp		114861						
ANR	114917	Symbol	mbedtls_cipher_update		114861						
ANR	114918	Symbol	ilen		114861						
ANR	114919	Symbol	evp		114861						
ANR	114920	Symbol	* ctx		114861						
ANR	114921	Function	stream_encrypt_all	330:0:8980:10577							
ANR	114922	FunctionDef	"stream_encrypt_all (buffer_t * plaintext , cipher_t * cipher , size_t capacity)"		114921	0					
ANR	114923	CompoundStatement		332:0:9059:10577	114921	0					
ANR	114924	IdentifierDeclStatement	cipher_ctx_t cipher_ctx ;	333:4:9065:9088	114921	0	True				
ANR	114925	IdentifierDecl	cipher_ctx		114921	0					
ANR	114926	IdentifierDeclType	cipher_ctx_t		114921	0					
ANR	114927	Identifier	cipher_ctx		114921	1					
ANR	114928	ExpressionStatement	"stream_ctx_init ( cipher , & cipher_ctx , 1 )"	334:4:9094:9133	114921	1	True				
ANR	114929	CallExpression	"stream_ctx_init ( cipher , & cipher_ctx , 1 )"		114921	0					
ANR	114930	Callee	stream_ctx_init		114921	0					
ANR	114931	Identifier	stream_ctx_init		114921	0					
ANR	114932	ArgumentList	cipher		114921	1					
ANR	114933	Argument	cipher		114921	0					
ANR	114934	Identifier	cipher		114921	0					
ANR	114935	Argument	& cipher_ctx		114921	1					
ANR	114936	UnaryOperationExpression	& cipher_ctx		114921	0					
ANR	114937	UnaryOperator	&		114921	0					
ANR	114938	Identifier	cipher_ctx		114921	1					
ANR	114939	Argument	1		114921	2					
ANR	114940	PrimaryExpression	1		114921	0					
ANR	114941	IdentifierDeclStatement	size_t nonce_len = cipher -> nonce_len ;	336:4:9140:9176	114921	2	True				
ANR	114942	IdentifierDecl	nonce_len = cipher -> nonce_len		114921	0					
ANR	114943	IdentifierDeclType	size_t		114921	0					
ANR	114944	Identifier	nonce_len		114921	1					
ANR	114945	AssignmentExpression	nonce_len = cipher -> nonce_len		114921	2		=			
ANR	114946	Identifier	nonce_len		114921	0					
ANR	114947	PtrMemberAccess	cipher -> nonce_len		114921	1					
ANR	114948	Identifier	cipher		114921	0					
ANR	114949	Identifier	nonce_len		114921	1					
ANR	114950	IdentifierDeclStatement	int err = CRYPTO_OK ;	337:4:9182:9210	114921	3	True				
ANR	114951	IdentifierDecl	err = CRYPTO_OK		114921	0					
ANR	114952	IdentifierDeclType	int		114921	0					
ANR	114953	Identifier	err		114921	1					
ANR	114954	AssignmentExpression	err = CRYPTO_OK		114921	2		=			
ANR	114955	Identifier	CRYPTO_OK		114921	0					
ANR	114956	Identifier	CRYPTO_OK		114921	1					
ANR	114957	Statement	static	339:4:9217:9222	114921	4	True				
ANR	114958	IdentifierDeclStatement	"buffer_t tmp = { 0 , 0 , 0 , NULL } ;"	339:11:9224:9256	114921	5	True				
ANR	114959	IdentifierDecl	"tmp = { 0 , 0 , 0 , NULL }"		114921	0					
ANR	114960	IdentifierDeclType	buffer_t		114921	0					
ANR	114961	Identifier	tmp		114921	1					
ANR	114962	AssignmentExpression	"tmp = { 0 , 0 , 0 , NULL }"		114921	2		=			
ANR	114963	Identifier	tmp		114921	0					
ANR	114964	InitializerList	0		114921	1					
ANR	114965	PrimaryExpression	0		114921	0					
ANR	114966	PrimaryExpression	0		114921	1					
ANR	114967	PrimaryExpression	0		114921	2					
ANR	114968	Identifier	NULL		114921	3					
ANR	114969	ExpressionStatement	"brealloc ( & tmp , nonce_len + plaintext -> len , capacity )"	340:4:9262:9314	114921	6	True				
ANR	114970	CallExpression	"brealloc ( & tmp , nonce_len + plaintext -> len , capacity )"		114921	0					
ANR	114971	Callee	brealloc		114921	0					
ANR	114972	Identifier	brealloc		114921	0					
ANR	114973	ArgumentList	& tmp		114921	1					
ANR	114974	Argument	& tmp		114921	0					
ANR	114975	UnaryOperationExpression	& tmp		114921	0					
ANR	114976	UnaryOperator	&		114921	0					
ANR	114977	Identifier	tmp		114921	1					
ANR	114978	Argument	nonce_len + plaintext -> len		114921	1					
ANR	114979	AdditiveExpression	nonce_len + plaintext -> len		114921	0		+			
ANR	114980	Identifier	nonce_len		114921	0					
ANR	114981	PtrMemberAccess	plaintext -> len		114921	1					
ANR	114982	Identifier	plaintext		114921	0					
ANR	114983	Identifier	len		114921	1					
ANR	114984	Argument	capacity		114921	2					
ANR	114985	Identifier	capacity		114921	0					
ANR	114986	IdentifierDeclStatement	buffer_t * ciphertext = & tmp ;	341:4:9320:9347	114921	7	True				
ANR	114987	IdentifierDecl	* ciphertext = & tmp		114921	0					
ANR	114988	IdentifierDeclType	buffer_t *		114921	0					
ANR	114989	Identifier	ciphertext		114921	1					
ANR	114990	AssignmentExpression	* ciphertext = & tmp		114921	2		=			
ANR	114991	Identifier	ciphertext		114921	0					
ANR	114992	UnaryOperationExpression	& tmp		114921	1					
ANR	114993	UnaryOperator	&		114921	0					
ANR	114994	Identifier	tmp		114921	1					
ANR	114995	ExpressionStatement	ciphertext -> len = plaintext -> len	342:4:9353:9385	114921	8	True				
ANR	114996	AssignmentExpression	ciphertext -> len = plaintext -> len		114921	0		=			
ANR	114997	PtrMemberAccess	ciphertext -> len		114921	0					
ANR	114998	Identifier	ciphertext		114921	0					
ANR	114999	Identifier	len		114921	1					
ANR	115000	PtrMemberAccess	plaintext -> len		114921	1					
ANR	115001	Identifier	plaintext		114921	0					
ANR	115002	Identifier	len		114921	1					
ANR	115003	IdentifierDeclStatement	uint8_t * nonce = cipher_ctx . nonce ;	344:4:9392:9425	114921	9	True				
ANR	115004	IdentifierDecl	* nonce = cipher_ctx . nonce		114921	0					
ANR	115005	IdentifierDeclType	uint8_t *		114921	0					
ANR	115006	Identifier	nonce		114921	1					
ANR	115007	AssignmentExpression	* nonce = cipher_ctx . nonce		114921	2		=			
ANR	115008	Identifier	nonce		114921	0					
ANR	115009	MemberAccess	cipher_ctx . nonce		114921	1					
ANR	115010	Identifier	cipher_ctx		114921	0					
ANR	115011	Identifier	nonce		114921	1					
ANR	115012	ExpressionStatement	"cipher_ctx_set_nonce ( & cipher_ctx , nonce , nonce_len , 1 )"	345:4:9431:9485	114921	10	True				
ANR	115013	CallExpression	"cipher_ctx_set_nonce ( & cipher_ctx , nonce , nonce_len , 1 )"		114921	0					
ANR	115014	Callee	cipher_ctx_set_nonce		114921	0					
ANR	115015	Identifier	cipher_ctx_set_nonce		114921	0					
ANR	115016	ArgumentList	& cipher_ctx		114921	1					
ANR	115017	Argument	& cipher_ctx		114921	0					
ANR	115018	UnaryOperationExpression	& cipher_ctx		114921	0					
ANR	115019	UnaryOperator	&		114921	0					
ANR	115020	Identifier	cipher_ctx		114921	1					
ANR	115021	Argument	nonce		114921	1					
ANR	115022	Identifier	nonce		114921	0					
ANR	115023	Argument	nonce_len		114921	2					
ANR	115024	Identifier	nonce_len		114921	0					
ANR	115025	Argument	1		114921	3					
ANR	115026	PrimaryExpression	1		114921	0					
ANR	115027	ExpressionStatement	"memcpy ( ciphertext -> data , nonce , nonce_len )"	346:4:9491:9533	114921	11	True				
ANR	115028	CallExpression	"memcpy ( ciphertext -> data , nonce , nonce_len )"		114921	0					
ANR	115029	Callee	memcpy		114921	0					
ANR	115030	Identifier	memcpy		114921	0					
ANR	115031	ArgumentList	ciphertext -> data		114921	1					
ANR	115032	Argument	ciphertext -> data		114921	0					
ANR	115033	PtrMemberAccess	ciphertext -> data		114921	0					
ANR	115034	Identifier	ciphertext		114921	0					
ANR	115035	Identifier	data		114921	1					
ANR	115036	Argument	nonce		114921	1					
ANR	115037	Identifier	nonce		114921	0					
ANR	115038	Argument	nonce_len		114921	2					
ANR	115039	Identifier	nonce_len		114921	0					
ANR	115040	IfStatement	if ( cipher -> method >= SALSA20 )		114921	12					
ANR	115041	Condition	cipher -> method >= SALSA20	348:8:9544:9568	114921	0	True				
ANR	115042	RelationalExpression	cipher -> method >= SALSA20		114921	0		>=			
ANR	115043	PtrMemberAccess	cipher -> method		114921	0					
ANR	115044	Identifier	cipher		114921	0					
ANR	115045	Identifier	method		114921	1					
ANR	115046	Identifier	SALSA20		114921	1					
ANR	115047	CompoundStatement		17:35:511:511	114921	1					
ANR	115048	ExpressionStatement	"crypto_stream_xor_ic ( ( uint8_t * ) ( ciphertext -> data + nonce_len ) , ( const uint8_t * ) plaintext -> data , ( uint64_t ) ( plaintext -> len ) , ( const uint8_t * ) nonce , 0 , cipher -> key , cipher -> method )"	349:8:9581:9849	114921	0	True				
ANR	115049	CallExpression	"crypto_stream_xor_ic ( ( uint8_t * ) ( ciphertext -> data + nonce_len ) , ( const uint8_t * ) plaintext -> data , ( uint64_t ) ( plaintext -> len ) , ( const uint8_t * ) nonce , 0 , cipher -> key , cipher -> method )"		114921	0					
ANR	115050	Callee	crypto_stream_xor_ic		114921	0					
ANR	115051	Identifier	crypto_stream_xor_ic		114921	0					
ANR	115052	ArgumentList	( uint8_t * ) ( ciphertext -> data + nonce_len )		114921	1					
ANR	115053	Argument	( uint8_t * ) ( ciphertext -> data + nonce_len )		114921	0					
ANR	115054	CastExpression	( uint8_t * ) ( ciphertext -> data + nonce_len )		114921	0					
ANR	115055	CastTarget	uint8_t *		114921	0					
ANR	115056	AdditiveExpression	ciphertext -> data + nonce_len		114921	1		+			
ANR	115057	PtrMemberAccess	ciphertext -> data		114921	0					
ANR	115058	Identifier	ciphertext		114921	0					
ANR	115059	Identifier	data		114921	1					
ANR	115060	Identifier	nonce_len		114921	1					
ANR	115061	Argument	( const uint8_t * ) plaintext -> data		114921	1					
ANR	115062	CastExpression	( const uint8_t * ) plaintext -> data		114921	0					
ANR	115063	CastTarget	const uint8_t *		114921	0					
ANR	115064	PtrMemberAccess	plaintext -> data		114921	1					
ANR	115065	Identifier	plaintext		114921	0					
ANR	115066	Identifier	data		114921	1					
ANR	115067	Argument	( uint64_t ) ( plaintext -> len )		114921	2					
ANR	115068	CastExpression	( uint64_t ) ( plaintext -> len )		114921	0					
ANR	115069	CastTarget	uint64_t		114921	0					
ANR	115070	PtrMemberAccess	plaintext -> len		114921	1					
ANR	115071	Identifier	plaintext		114921	0					
ANR	115072	Identifier	len		114921	1					
ANR	115073	Argument	( const uint8_t * ) nonce		114921	3					
ANR	115074	CastExpression	( const uint8_t * ) nonce		114921	0					
ANR	115075	CastTarget	const uint8_t *		114921	0					
ANR	115076	Identifier	nonce		114921	1					
ANR	115077	Argument	0		114921	4					
ANR	115078	PrimaryExpression	0		114921	0					
ANR	115079	Argument	cipher -> key		114921	5					
ANR	115080	PtrMemberAccess	cipher -> key		114921	0					
ANR	115081	Identifier	cipher		114921	0					
ANR	115082	Identifier	key		114921	1					
ANR	115083	Argument	cipher -> method		114921	6					
ANR	115084	PtrMemberAccess	cipher -> method		114921	0					
ANR	115085	Identifier	cipher		114921	0					
ANR	115086	Identifier	method		114921	1					
ANR	115087	ElseStatement	else		114921	0					
ANR	115088	CompoundStatement		22:11:802:802	114921	0					
ANR	115089	ExpressionStatement	"err = cipher_ctx_update ( & cipher_ctx , ( uint8_t * ) ( ciphertext -> data + nonce_len ) , & ciphertext -> len , ( const uint8_t * ) plaintext -> data , plaintext -> len )"	354:8:9872:10083	114921	0	True				
ANR	115090	AssignmentExpression	"err = cipher_ctx_update ( & cipher_ctx , ( uint8_t * ) ( ciphertext -> data + nonce_len ) , & ciphertext -> len , ( const uint8_t * ) plaintext -> data , plaintext -> len )"		114921	0		=			
ANR	115091	Identifier	err		114921	0					
ANR	115092	CallExpression	"cipher_ctx_update ( & cipher_ctx , ( uint8_t * ) ( ciphertext -> data + nonce_len ) , & ciphertext -> len , ( const uint8_t * ) plaintext -> data , plaintext -> len )"		114921	1					
ANR	115093	Callee	cipher_ctx_update		114921	0					
ANR	115094	Identifier	cipher_ctx_update		114921	0					
ANR	115095	ArgumentList	& cipher_ctx		114921	1					
ANR	115096	Argument	& cipher_ctx		114921	0					
ANR	115097	UnaryOperationExpression	& cipher_ctx		114921	0					
ANR	115098	UnaryOperator	&		114921	0					
ANR	115099	Identifier	cipher_ctx		114921	1					
ANR	115100	Argument	( uint8_t * ) ( ciphertext -> data + nonce_len )		114921	1					
ANR	115101	CastExpression	( uint8_t * ) ( ciphertext -> data + nonce_len )		114921	0					
ANR	115102	CastTarget	uint8_t *		114921	0					
ANR	115103	AdditiveExpression	ciphertext -> data + nonce_len		114921	1		+			
ANR	115104	PtrMemberAccess	ciphertext -> data		114921	0					
ANR	115105	Identifier	ciphertext		114921	0					
ANR	115106	Identifier	data		114921	1					
ANR	115107	Identifier	nonce_len		114921	1					
ANR	115108	Argument	& ciphertext -> len		114921	2					
ANR	115109	UnaryOperationExpression	& ciphertext -> len		114921	0					
ANR	115110	UnaryOperator	&		114921	0					
ANR	115111	PtrMemberAccess	ciphertext -> len		114921	1					
ANR	115112	Identifier	ciphertext		114921	0					
ANR	115113	Identifier	len		114921	1					
ANR	115114	Argument	( const uint8_t * ) plaintext -> data		114921	3					
ANR	115115	CastExpression	( const uint8_t * ) plaintext -> data		114921	0					
ANR	115116	CastTarget	const uint8_t *		114921	0					
ANR	115117	PtrMemberAccess	plaintext -> data		114921	1					
ANR	115118	Identifier	plaintext		114921	0					
ANR	115119	Identifier	data		114921	1					
ANR	115120	Argument	plaintext -> len		114921	4					
ANR	115121	PtrMemberAccess	plaintext -> len		114921	0					
ANR	115122	Identifier	plaintext		114921	0					
ANR	115123	Identifier	len		114921	1					
ANR	115124	ExpressionStatement	stream_ctx_release ( & cipher_ctx )	359:4:10096:10127	114921	13	True				
ANR	115125	CallExpression	stream_ctx_release ( & cipher_ctx )		114921	0					
ANR	115126	Callee	stream_ctx_release		114921	0					
ANR	115127	Identifier	stream_ctx_release		114921	0					
ANR	115128	ArgumentList	& cipher_ctx		114921	1					
ANR	115129	Argument	& cipher_ctx		114921	0					
ANR	115130	UnaryOperationExpression	& cipher_ctx		114921	0					
ANR	115131	UnaryOperator	&		114921	0					
ANR	115132	Identifier	cipher_ctx		114921	1					
ANR	115133	IfStatement	if ( err )		114921	14					
ANR	115134	Condition	err	361:8:10138:10140	114921	0	True				
ANR	115135	Identifier	err		114921	0					
ANR	115136	ReturnStatement	return CRYPTO_ERROR ;	362:8:10151:10170	114921	1	True				
ANR	115137	Identifier	CRYPTO_ERROR		114921	0					
ANR	115138	ExpressionStatement	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"	365:4:10193:10239	114921	15	True				
ANR	115139	CallExpression	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"		114921	0					
ANR	115140	Callee	dump		114921	0					
ANR	115141	Identifier	dump		114921	0					
ANR	115142	ArgumentList	"""PLAIN"""		114921	1					
ANR	115143	Argument	"""PLAIN"""		114921	0					
ANR	115144	PrimaryExpression	"""PLAIN"""		114921	0					
ANR	115145	Argument	plaintext -> data		114921	1					
ANR	115146	PtrMemberAccess	plaintext -> data		114921	0					
ANR	115147	Identifier	plaintext		114921	0					
ANR	115148	Identifier	data		114921	1					
ANR	115149	Argument	plaintext -> len		114921	2					
ANR	115150	PtrMemberAccess	plaintext -> len		114921	0					
ANR	115151	Identifier	plaintext		114921	0					
ANR	115152	Identifier	len		114921	1					
ANR	115153	ExpressionStatement	"dump ( ""CIPHER"" , ciphertext -> data + nonce_len , ciphertext -> len )"	366:4:10245:10306	114921	16	True				
ANR	115154	CallExpression	"dump ( ""CIPHER"" , ciphertext -> data + nonce_len , ciphertext -> len )"		114921	0					
ANR	115155	Callee	dump		114921	0					
ANR	115156	Identifier	dump		114921	0					
ANR	115157	ArgumentList	"""CIPHER"""		114921	1					
ANR	115158	Argument	"""CIPHER"""		114921	0					
ANR	115159	PrimaryExpression	"""CIPHER"""		114921	0					
ANR	115160	Argument	ciphertext -> data + nonce_len		114921	1					
ANR	115161	AdditiveExpression	ciphertext -> data + nonce_len		114921	0		+			
ANR	115162	PtrMemberAccess	ciphertext -> data		114921	0					
ANR	115163	Identifier	ciphertext		114921	0					
ANR	115164	Identifier	data		114921	1					
ANR	115165	Identifier	nonce_len		114921	1					
ANR	115166	Argument	ciphertext -> len		114921	2					
ANR	115167	PtrMemberAccess	ciphertext -> len		114921	0					
ANR	115168	Identifier	ciphertext		114921	0					
ANR	115169	Identifier	len		114921	1					
ANR	115170	ExpressionStatement	"dump ( ""NONCE"" , ciphertext -> data , nonce_len )"	367:4:10312:10354	114921	17	True				
ANR	115171	CallExpression	"dump ( ""NONCE"" , ciphertext -> data , nonce_len )"		114921	0					
ANR	115172	Callee	dump		114921	0					
ANR	115173	Identifier	dump		114921	0					
ANR	115174	ArgumentList	"""NONCE"""		114921	1					
ANR	115175	Argument	"""NONCE"""		114921	0					
ANR	115176	PrimaryExpression	"""NONCE"""		114921	0					
ANR	115177	Argument	ciphertext -> data		114921	1					
ANR	115178	PtrMemberAccess	ciphertext -> data		114921	0					
ANR	115179	Identifier	ciphertext		114921	0					
ANR	115180	Identifier	data		114921	1					
ANR	115181	Argument	nonce_len		114921	2					
ANR	115182	Identifier	nonce_len		114921	0					
ANR	115183	ExpressionStatement	"brealloc ( plaintext , nonce_len + ciphertext -> len , capacity )"	370:4:10368:10426	114921	18	True				
ANR	115184	CallExpression	"brealloc ( plaintext , nonce_len + ciphertext -> len , capacity )"		114921	0					
ANR	115185	Callee	brealloc		114921	0					
ANR	115186	Identifier	brealloc		114921	0					
ANR	115187	ArgumentList	plaintext		114921	1					
ANR	115188	Argument	plaintext		114921	0					
ANR	115189	Identifier	plaintext		114921	0					
ANR	115190	Argument	nonce_len + ciphertext -> len		114921	1					
ANR	115191	AdditiveExpression	nonce_len + ciphertext -> len		114921	0		+			
ANR	115192	Identifier	nonce_len		114921	0					
ANR	115193	PtrMemberAccess	ciphertext -> len		114921	1					
ANR	115194	Identifier	ciphertext		114921	0					
ANR	115195	Identifier	len		114921	1					
ANR	115196	Argument	capacity		114921	2					
ANR	115197	Identifier	capacity		114921	0					
ANR	115198	ExpressionStatement	"memcpy ( plaintext -> data , ciphertext -> data , nonce_len + ciphertext -> len )"	371:4:10432:10502	114921	19	True				
ANR	115199	CallExpression	"memcpy ( plaintext -> data , ciphertext -> data , nonce_len + ciphertext -> len )"		114921	0					
ANR	115200	Callee	memcpy		114921	0					
ANR	115201	Identifier	memcpy		114921	0					
ANR	115202	ArgumentList	plaintext -> data		114921	1					
ANR	115203	Argument	plaintext -> data		114921	0					
ANR	115204	PtrMemberAccess	plaintext -> data		114921	0					
ANR	115205	Identifier	plaintext		114921	0					
ANR	115206	Identifier	data		114921	1					
ANR	115207	Argument	ciphertext -> data		114921	1					
ANR	115208	PtrMemberAccess	ciphertext -> data		114921	0					
ANR	115209	Identifier	ciphertext		114921	0					
ANR	115210	Identifier	data		114921	1					
ANR	115211	Argument	nonce_len + ciphertext -> len		114921	2					
ANR	115212	AdditiveExpression	nonce_len + ciphertext -> len		114921	0		+			
ANR	115213	Identifier	nonce_len		114921	0					
ANR	115214	PtrMemberAccess	ciphertext -> len		114921	1					
ANR	115215	Identifier	ciphertext		114921	0					
ANR	115216	Identifier	len		114921	1					
ANR	115217	ExpressionStatement	plaintext -> len = nonce_len + ciphertext -> len	372:4:10508:10552	114921	20	True				
ANR	115218	AssignmentExpression	plaintext -> len = nonce_len + ciphertext -> len		114921	0		=			
ANR	115219	PtrMemberAccess	plaintext -> len		114921	0					
ANR	115220	Identifier	plaintext		114921	0					
ANR	115221	Identifier	len		114921	1					
ANR	115222	AdditiveExpression	nonce_len + ciphertext -> len		114921	1		+			
ANR	115223	Identifier	nonce_len		114921	0					
ANR	115224	PtrMemberAccess	ciphertext -> len		114921	1					
ANR	115225	Identifier	ciphertext		114921	0					
ANR	115226	Identifier	len		114921	1					
ANR	115227	ReturnStatement	return CRYPTO_OK ;	374:4:10559:10575	114921	21	True				
ANR	115228	Identifier	CRYPTO_OK		114921	0					
ANR	115229	ReturnType	int		114921	1					
ANR	115230	Identifier	stream_encrypt_all		114921	2					
ANR	115231	ParameterList	"buffer_t * plaintext , cipher_t * cipher , size_t capacity"		114921	3					
ANR	115232	Parameter	buffer_t * plaintext	331:19:9003:9021	114921	0	True				
ANR	115233	ParameterType	buffer_t *		114921	0					
ANR	115234	Identifier	plaintext		114921	1					
ANR	115235	Parameter	cipher_t * cipher	331:40:9024:9039	114921	1	True				
ANR	115236	ParameterType	cipher_t *		114921	0					
ANR	115237	Identifier	cipher		114921	1					
ANR	115238	Parameter	size_t capacity	331:58:9042:9056	114921	2	True				
ANR	115239	ParameterType	size_t		114921	0					
ANR	115240	Identifier	capacity		114921	1					
ANR	115241	CFGEntryNode	ENTRY		114921		True				
ANR	115242	CFGExitNode	EXIT		114921		True				
ANR	115243	Symbol	CRYPTO_ERROR		114921						
ANR	115244	Symbol	CRYPTO_OK		114921						
ANR	115245	Symbol	capacity		114921						
ANR	115246	Symbol	* plaintext		114921						
ANR	115247	Symbol	tmp		114921						
ANR	115248	Symbol	plaintext -> data		114921						
ANR	115249	Symbol	cipher -> key		114921						
ANR	115250	Symbol	cipher		114921						
ANR	115251	Symbol	ciphertext		114921						
ANR	115252	Symbol	ciphertext -> len		114921						
ANR	115253	Symbol	cipher_ctx		114921						
ANR	115254	Symbol	NULL		114921						
ANR	115255	Symbol	err		114921						
ANR	115256	Symbol	* cipher		114921						
ANR	115257	Symbol	nonce_len		114921						
ANR	115258	Symbol	& ciphertext -> len		114921						
ANR	115259	Symbol	& cipher_ctx		114921						
ANR	115260	Symbol	plaintext		114921						
ANR	115261	Symbol	nonce		114921						
ANR	115262	Symbol	cipher_ctx . nonce		114921						
ANR	115263	Symbol	plaintext -> len		114921						
ANR	115264	Symbol	SALSA20		114921						
ANR	115265	Symbol	ciphertext -> data		114921						
ANR	115266	Symbol	cipher -> method		114921						
ANR	115267	Symbol	cipher -> nonce_len		114921						
ANR	115268	Symbol	& tmp		114921						
ANR	115269	Symbol	cipher_ctx_update		114921						
ANR	115270	Symbol	* ciphertext		114921						
ANR	115271	Function	stream_encrypt	377:0:10580:13047							
ANR	115272	FunctionDef	"stream_encrypt (buffer_t * plaintext , cipher_ctx_t * cipher_ctx , size_t capacity)"		115271	0					
ANR	115273	CompoundStatement		379:0:10663:13047	115271	0					
ANR	115274	IfStatement	if ( cipher_ctx == NULL )		115271	0					
ANR	115275	Condition	cipher_ctx == NULL	380:8:10673:10690	115271	0	True				
ANR	115276	EqualityExpression	cipher_ctx == NULL		115271	0		==			
ANR	115277	Identifier	cipher_ctx		115271	0					
ANR	115278	Identifier	NULL		115271	1					
ANR	115279	ReturnStatement	return CRYPTO_ERROR ;	381:8:10701:10720	115271	1	True				
ANR	115280	Identifier	CRYPTO_ERROR		115271	0					
ANR	115281	IdentifierDeclStatement	cipher_t * cipher = cipher_ctx -> cipher ;	383:4:10727:10764	115271	1	True				
ANR	115282	IdentifierDecl	* cipher = cipher_ctx -> cipher		115271	0					
ANR	115283	IdentifierDeclType	cipher_t *		115271	0					
ANR	115284	Identifier	cipher		115271	1					
ANR	115285	AssignmentExpression	* cipher = cipher_ctx -> cipher		115271	2		=			
ANR	115286	Identifier	cipher		115271	0					
ANR	115287	PtrMemberAccess	cipher_ctx -> cipher		115271	1					
ANR	115288	Identifier	cipher_ctx		115271	0					
ANR	115289	Identifier	cipher		115271	1					
ANR	115290	Statement	static	385:4:10771:10776	115271	2	True				
ANR	115291	IdentifierDeclStatement	"buffer_t tmp = { 0 , 0 , 0 , NULL } ;"	385:11:10778:10810	115271	3	True				
ANR	115292	IdentifierDecl	"tmp = { 0 , 0 , 0 , NULL }"		115271	0					
ANR	115293	IdentifierDeclType	buffer_t		115271	0					
ANR	115294	Identifier	tmp		115271	1					
ANR	115295	AssignmentExpression	"tmp = { 0 , 0 , 0 , NULL }"		115271	2		=			
ANR	115296	Identifier	tmp		115271	0					
ANR	115297	InitializerList	0		115271	1					
ANR	115298	PrimaryExpression	0		115271	0					
ANR	115299	PrimaryExpression	0		115271	1					
ANR	115300	PrimaryExpression	0		115271	2					
ANR	115301	Identifier	NULL		115271	3					
ANR	115302	IdentifierDeclStatement	int err = CRYPTO_OK ;	387:4:10817:10845	115271	4	True				
ANR	115303	IdentifierDecl	err = CRYPTO_OK		115271	0					
ANR	115304	IdentifierDeclType	int		115271	0					
ANR	115305	Identifier	err		115271	1					
ANR	115306	AssignmentExpression	err = CRYPTO_OK		115271	2		=			
ANR	115307	Identifier	CRYPTO_OK		115271	0					
ANR	115308	Identifier	CRYPTO_OK		115271	1					
ANR	115309	IdentifierDeclStatement	size_t nonce_len = 0 ;	388:4:10851:10871	115271	5	True				
ANR	115310	IdentifierDecl	nonce_len = 0		115271	0					
ANR	115311	IdentifierDeclType	size_t		115271	0					
ANR	115312	Identifier	nonce_len		115271	1					
ANR	115313	AssignmentExpression	nonce_len = 0		115271	2		=			
ANR	115314	Identifier	nonce_len		115271	0					
ANR	115315	PrimaryExpression	0		115271	1					
ANR	115316	IfStatement	if ( ! cipher_ctx -> init )		115271	6					
ANR	115317	Condition	! cipher_ctx -> init	389:8:10881:10897	115271	0	True				
ANR	115318	UnaryOperationExpression	! cipher_ctx -> init		115271	0					
ANR	115319	UnaryOperator	!		115271	0					
ANR	115320	PtrMemberAccess	cipher_ctx -> init		115271	1					
ANR	115321	Identifier	cipher_ctx		115271	0					
ANR	115322	Identifier	init		115271	1					
ANR	115323	CompoundStatement		11:27:236:236	115271	1					
ANR	115324	ExpressionStatement	nonce_len = cipher_ctx -> cipher -> nonce_len	390:8:10910:10951	115271	0	True				
ANR	115325	AssignmentExpression	nonce_len = cipher_ctx -> cipher -> nonce_len		115271	0		=			
ANR	115326	Identifier	nonce_len		115271	0					
ANR	115327	PtrMemberAccess	cipher_ctx -> cipher -> nonce_len		115271	1					
ANR	115328	PtrMemberAccess	cipher_ctx -> cipher		115271	0					
ANR	115329	Identifier	cipher_ctx		115271	0					
ANR	115330	Identifier	cipher		115271	1					
ANR	115331	Identifier	nonce_len		115271	1					
ANR	115332	ExpressionStatement	"brealloc ( & tmp , nonce_len + plaintext -> len , capacity )"	393:4:10964:11016	115271	7	True				
ANR	115333	CallExpression	"brealloc ( & tmp , nonce_len + plaintext -> len , capacity )"		115271	0					
ANR	115334	Callee	brealloc		115271	0					
ANR	115335	Identifier	brealloc		115271	0					
ANR	115336	ArgumentList	& tmp		115271	1					
ANR	115337	Argument	& tmp		115271	0					
ANR	115338	UnaryOperationExpression	& tmp		115271	0					
ANR	115339	UnaryOperator	&		115271	0					
ANR	115340	Identifier	tmp		115271	1					
ANR	115341	Argument	nonce_len + plaintext -> len		115271	1					
ANR	115342	AdditiveExpression	nonce_len + plaintext -> len		115271	0		+			
ANR	115343	Identifier	nonce_len		115271	0					
ANR	115344	PtrMemberAccess	plaintext -> len		115271	1					
ANR	115345	Identifier	plaintext		115271	0					
ANR	115346	Identifier	len		115271	1					
ANR	115347	Argument	capacity		115271	2					
ANR	115348	Identifier	capacity		115271	0					
ANR	115349	IdentifierDeclStatement	buffer_t * ciphertext = & tmp ;	394:4:11022:11049	115271	8	True				
ANR	115350	IdentifierDecl	* ciphertext = & tmp		115271	0					
ANR	115351	IdentifierDeclType	buffer_t *		115271	0					
ANR	115352	Identifier	ciphertext		115271	1					
ANR	115353	AssignmentExpression	* ciphertext = & tmp		115271	2		=			
ANR	115354	Identifier	ciphertext		115271	0					
ANR	115355	UnaryOperationExpression	& tmp		115271	1					
ANR	115356	UnaryOperator	&		115271	0					
ANR	115357	Identifier	tmp		115271	1					
ANR	115358	ExpressionStatement	ciphertext -> len = plaintext -> len	395:4:11055:11087	115271	9	True				
ANR	115359	AssignmentExpression	ciphertext -> len = plaintext -> len		115271	0		=			
ANR	115360	PtrMemberAccess	ciphertext -> len		115271	0					
ANR	115361	Identifier	ciphertext		115271	0					
ANR	115362	Identifier	len		115271	1					
ANR	115363	PtrMemberAccess	plaintext -> len		115271	1					
ANR	115364	Identifier	plaintext		115271	0					
ANR	115365	Identifier	len		115271	1					
ANR	115366	IfStatement	if ( ! cipher_ctx -> init )		115271	10					
ANR	115367	Condition	! cipher_ctx -> init	397:8:11098:11114	115271	0	True				
ANR	115368	UnaryOperationExpression	! cipher_ctx -> init		115271	0					
ANR	115369	UnaryOperator	!		115271	0					
ANR	115370	PtrMemberAccess	cipher_ctx -> init		115271	1					
ANR	115371	Identifier	cipher_ctx		115271	0					
ANR	115372	Identifier	init		115271	1					
ANR	115373	CompoundStatement		19:27:453:453	115271	1					
ANR	115374	ExpressionStatement	"cipher_ctx_set_nonce ( cipher_ctx , cipher_ctx -> nonce , nonce_len , 1 )"	398:8:11127:11192	115271	0	True				
ANR	115375	CallExpression	"cipher_ctx_set_nonce ( cipher_ctx , cipher_ctx -> nonce , nonce_len , 1 )"		115271	0					
ANR	115376	Callee	cipher_ctx_set_nonce		115271	0					
ANR	115377	Identifier	cipher_ctx_set_nonce		115271	0					
ANR	115378	ArgumentList	cipher_ctx		115271	1					
ANR	115379	Argument	cipher_ctx		115271	0					
ANR	115380	Identifier	cipher_ctx		115271	0					
ANR	115381	Argument	cipher_ctx -> nonce		115271	1					
ANR	115382	PtrMemberAccess	cipher_ctx -> nonce		115271	0					
ANR	115383	Identifier	cipher_ctx		115271	0					
ANR	115384	Identifier	nonce		115271	1					
ANR	115385	Argument	nonce_len		115271	2					
ANR	115386	Identifier	nonce_len		115271	0					
ANR	115387	Argument	1		115271	3					
ANR	115388	PrimaryExpression	1		115271	0					
ANR	115389	ExpressionStatement	"memcpy ( ciphertext -> data , cipher_ctx -> nonce , nonce_len )"	399:8:11202:11256	115271	1	True				
ANR	115390	CallExpression	"memcpy ( ciphertext -> data , cipher_ctx -> nonce , nonce_len )"		115271	0					
ANR	115391	Callee	memcpy		115271	0					
ANR	115392	Identifier	memcpy		115271	0					
ANR	115393	ArgumentList	ciphertext -> data		115271	1					
ANR	115394	Argument	ciphertext -> data		115271	0					
ANR	115395	PtrMemberAccess	ciphertext -> data		115271	0					
ANR	115396	Identifier	ciphertext		115271	0					
ANR	115397	Identifier	data		115271	1					
ANR	115398	Argument	cipher_ctx -> nonce		115271	1					
ANR	115399	PtrMemberAccess	cipher_ctx -> nonce		115271	0					
ANR	115400	Identifier	cipher_ctx		115271	0					
ANR	115401	Identifier	nonce		115271	1					
ANR	115402	Argument	nonce_len		115271	2					
ANR	115403	Identifier	nonce_len		115271	0					
ANR	115404	ExpressionStatement	cipher_ctx -> counter = 0	400:8:11266:11289	115271	2	True				
ANR	115405	AssignmentExpression	cipher_ctx -> counter = 0		115271	0		=			
ANR	115406	PtrMemberAccess	cipher_ctx -> counter		115271	0					
ANR	115407	Identifier	cipher_ctx		115271	0					
ANR	115408	Identifier	counter		115271	1					
ANR	115409	PrimaryExpression	0		115271	1					
ANR	115410	ExpressionStatement	cipher_ctx -> init = 1	401:8:11299:11322	115271	3	True				
ANR	115411	AssignmentExpression	cipher_ctx -> init = 1		115271	0		=			
ANR	115412	PtrMemberAccess	cipher_ctx -> init		115271	0					
ANR	115413	Identifier	cipher_ctx		115271	0					
ANR	115414	Identifier	init		115271	1					
ANR	115415	PrimaryExpression	1		115271	1					
ANR	115416	IfStatement	if ( cipher -> method >= SALSA20 )		115271	11					
ANR	115417	Condition	cipher -> method >= SALSA20	404:8:11339:11363	115271	0	True				
ANR	115418	RelationalExpression	cipher -> method >= SALSA20		115271	0		>=			
ANR	115419	PtrMemberAccess	cipher -> method		115271	0					
ANR	115420	Identifier	cipher		115271	0					
ANR	115421	Identifier	method		115271	1					
ANR	115422	Identifier	SALSA20		115271	1					
ANR	115423	CompoundStatement		27:8:712:765	115271	1					
ANR	115424	IdentifierDeclStatement	int padding = cipher_ctx -> counter % SODIUM_BLOCK_SIZE ;	405:8:11376:11429	115271	0	True				
ANR	115425	IdentifierDecl	padding = cipher_ctx -> counter % SODIUM_BLOCK_SIZE		115271	0					
ANR	115426	IdentifierDeclType	int		115271	0					
ANR	115427	Identifier	padding		115271	1					
ANR	115428	AssignmentExpression	padding = cipher_ctx -> counter % SODIUM_BLOCK_SIZE		115271	2		=			
ANR	115429	Identifier	padding		115271	0					
ANR	115430	MultiplicativeExpression	cipher_ctx -> counter % SODIUM_BLOCK_SIZE		115271	1		%			
ANR	115431	PtrMemberAccess	cipher_ctx -> counter		115271	0					
ANR	115432	Identifier	cipher_ctx		115271	0					
ANR	115433	Identifier	counter		115271	1					
ANR	115434	Identifier	SODIUM_BLOCK_SIZE		115271	1					
ANR	115435	ExpressionStatement	"brealloc ( ciphertext , nonce_len + ( padding + ciphertext -> len ) * 2 , capacity )"	406:8:11439:11514	115271	1	True				
ANR	115436	CallExpression	"brealloc ( ciphertext , nonce_len + ( padding + ciphertext -> len ) * 2 , capacity )"		115271	0					
ANR	115437	Callee	brealloc		115271	0					
ANR	115438	Identifier	brealloc		115271	0					
ANR	115439	ArgumentList	ciphertext		115271	1					
ANR	115440	Argument	ciphertext		115271	0					
ANR	115441	Identifier	ciphertext		115271	0					
ANR	115442	Argument	nonce_len + ( padding + ciphertext -> len ) * 2		115271	1					
ANR	115443	AdditiveExpression	nonce_len + ( padding + ciphertext -> len ) * 2		115271	0		+			
ANR	115444	Identifier	nonce_len		115271	0					
ANR	115445	MultiplicativeExpression	( padding + ciphertext -> len ) * 2		115271	1		*			
ANR	115446	AdditiveExpression	padding + ciphertext -> len		115271	0		+			
ANR	115447	Identifier	padding		115271	0					
ANR	115448	PtrMemberAccess	ciphertext -> len		115271	1					
ANR	115449	Identifier	ciphertext		115271	0					
ANR	115450	Identifier	len		115271	1					
ANR	115451	PrimaryExpression	2		115271	1					
ANR	115452	Argument	capacity		115271	2					
ANR	115453	Identifier	capacity		115271	0					
ANR	115454	IfStatement	if ( padding )		115271	2					
ANR	115455	Condition	padding	407:12:11528:11534	115271	0	True				
ANR	115456	Identifier	padding		115271	0					
ANR	115457	CompoundStatement		29:21:873:873	115271	1					
ANR	115458	ExpressionStatement	"brealloc ( plaintext , plaintext -> len + padding , capacity )"	408:12:11551:11606	115271	0	True				
ANR	115459	CallExpression	"brealloc ( plaintext , plaintext -> len + padding , capacity )"		115271	0					
ANR	115460	Callee	brealloc		115271	0					
ANR	115461	Identifier	brealloc		115271	0					
ANR	115462	ArgumentList	plaintext		115271	1					
ANR	115463	Argument	plaintext		115271	0					
ANR	115464	Identifier	plaintext		115271	0					
ANR	115465	Argument	plaintext -> len + padding		115271	1					
ANR	115466	AdditiveExpression	plaintext -> len + padding		115271	0		+			
ANR	115467	PtrMemberAccess	plaintext -> len		115271	0					
ANR	115468	Identifier	plaintext		115271	0					
ANR	115469	Identifier	len		115271	1					
ANR	115470	Identifier	padding		115271	1					
ANR	115471	Argument	capacity		115271	2					
ANR	115472	Identifier	capacity		115271	0					
ANR	115473	ExpressionStatement	"memmove ( plaintext -> data + padding , plaintext -> data , plaintext -> len )"	409:12:11620:11687	115271	1	True				
ANR	115474	CallExpression	"memmove ( plaintext -> data + padding , plaintext -> data , plaintext -> len )"		115271	0					
ANR	115475	Callee	memmove		115271	0					
ANR	115476	Identifier	memmove		115271	0					
ANR	115477	ArgumentList	plaintext -> data + padding		115271	1					
ANR	115478	Argument	plaintext -> data + padding		115271	0					
ANR	115479	AdditiveExpression	plaintext -> data + padding		115271	0		+			
ANR	115480	PtrMemberAccess	plaintext -> data		115271	0					
ANR	115481	Identifier	plaintext		115271	0					
ANR	115482	Identifier	data		115271	1					
ANR	115483	Identifier	padding		115271	1					
ANR	115484	Argument	plaintext -> data		115271	1					
ANR	115485	PtrMemberAccess	plaintext -> data		115271	0					
ANR	115486	Identifier	plaintext		115271	0					
ANR	115487	Identifier	data		115271	1					
ANR	115488	Argument	plaintext -> len		115271	2					
ANR	115489	PtrMemberAccess	plaintext -> len		115271	0					
ANR	115490	Identifier	plaintext		115271	0					
ANR	115491	Identifier	len		115271	1					
ANR	115492	ExpressionStatement	"sodium_memzero ( plaintext -> data , padding )"	410:12:11701:11741	115271	2	True				
ANR	115493	CallExpression	"sodium_memzero ( plaintext -> data , padding )"		115271	0					
ANR	115494	Callee	sodium_memzero		115271	0					
ANR	115495	Identifier	sodium_memzero		115271	0					
ANR	115496	ArgumentList	plaintext -> data		115271	1					
ANR	115497	Argument	plaintext -> data		115271	0					
ANR	115498	PtrMemberAccess	plaintext -> data		115271	0					
ANR	115499	Identifier	plaintext		115271	0					
ANR	115500	Identifier	data		115271	1					
ANR	115501	Argument	padding		115271	1					
ANR	115502	Identifier	padding		115271	0					
ANR	115503	ExpressionStatement	"crypto_stream_xor_ic ( ( uint8_t * ) ( ciphertext -> data + nonce_len ) , ( const uint8_t * ) plaintext -> data , ( uint64_t ) ( plaintext -> len + padding ) , ( const uint8_t * ) cipher_ctx -> nonce , cipher_ctx -> counter / SODIUM_BLOCK_SIZE , cipher -> key , cipher -> method )"	412:8:11761:12147	115271	3	True				
ANR	115504	CallExpression	"crypto_stream_xor_ic ( ( uint8_t * ) ( ciphertext -> data + nonce_len ) , ( const uint8_t * ) plaintext -> data , ( uint64_t ) ( plaintext -> len + padding ) , ( const uint8_t * ) cipher_ctx -> nonce , cipher_ctx -> counter / SODIUM_BLOCK_SIZE , cipher -> key , cipher -> method )"		115271	0					
ANR	115505	Callee	crypto_stream_xor_ic		115271	0					
ANR	115506	Identifier	crypto_stream_xor_ic		115271	0					
ANR	115507	ArgumentList	( uint8_t * ) ( ciphertext -> data + nonce_len )		115271	1					
ANR	115508	Argument	( uint8_t * ) ( ciphertext -> data + nonce_len )		115271	0					
ANR	115509	CastExpression	( uint8_t * ) ( ciphertext -> data + nonce_len )		115271	0					
ANR	115510	CastTarget	uint8_t *		115271	0					
ANR	115511	AdditiveExpression	ciphertext -> data + nonce_len		115271	1		+			
ANR	115512	PtrMemberAccess	ciphertext -> data		115271	0					
ANR	115513	Identifier	ciphertext		115271	0					
ANR	115514	Identifier	data		115271	1					
ANR	115515	Identifier	nonce_len		115271	1					
ANR	115516	Argument	( const uint8_t * ) plaintext -> data		115271	1					
ANR	115517	CastExpression	( const uint8_t * ) plaintext -> data		115271	0					
ANR	115518	CastTarget	const uint8_t *		115271	0					
ANR	115519	PtrMemberAccess	plaintext -> data		115271	1					
ANR	115520	Identifier	plaintext		115271	0					
ANR	115521	Identifier	data		115271	1					
ANR	115522	Argument	( uint64_t ) ( plaintext -> len + padding )		115271	2					
ANR	115523	CastExpression	( uint64_t ) ( plaintext -> len + padding )		115271	0					
ANR	115524	CastTarget	uint64_t		115271	0					
ANR	115525	AdditiveExpression	plaintext -> len + padding		115271	1		+			
ANR	115526	PtrMemberAccess	plaintext -> len		115271	0					
ANR	115527	Identifier	plaintext		115271	0					
ANR	115528	Identifier	len		115271	1					
ANR	115529	Identifier	padding		115271	1					
ANR	115530	Argument	( const uint8_t * ) cipher_ctx -> nonce		115271	3					
ANR	115531	CastExpression	( const uint8_t * ) cipher_ctx -> nonce		115271	0					
ANR	115532	CastTarget	const uint8_t *		115271	0					
ANR	115533	PtrMemberAccess	cipher_ctx -> nonce		115271	1					
ANR	115534	Identifier	cipher_ctx		115271	0					
ANR	115535	Identifier	nonce		115271	1					
ANR	115536	Argument	cipher_ctx -> counter / SODIUM_BLOCK_SIZE		115271	4					
ANR	115537	MultiplicativeExpression	cipher_ctx -> counter / SODIUM_BLOCK_SIZE		115271	0		/			
ANR	115538	PtrMemberAccess	cipher_ctx -> counter		115271	0					
ANR	115539	Identifier	cipher_ctx		115271	0					
ANR	115540	Identifier	counter		115271	1					
ANR	115541	Identifier	SODIUM_BLOCK_SIZE		115271	1					
ANR	115542	Argument	cipher -> key		115271	5					
ANR	115543	PtrMemberAccess	cipher -> key		115271	0					
ANR	115544	Identifier	cipher		115271	0					
ANR	115545	Identifier	key		115271	1					
ANR	115546	Argument	cipher -> method		115271	6					
ANR	115547	PtrMemberAccess	cipher -> method		115271	0					
ANR	115548	Identifier	cipher		115271	0					
ANR	115549	Identifier	method		115271	1					
ANR	115550	ExpressionStatement	cipher_ctx -> counter += plaintext -> len	418:8:12157:12194	115271	4	True				
ANR	115551	AssignmentExpression	cipher_ctx -> counter += plaintext -> len		115271	0		+=			
ANR	115552	PtrMemberAccess	cipher_ctx -> counter		115271	0					
ANR	115553	Identifier	cipher_ctx		115271	0					
ANR	115554	Identifier	counter		115271	1					
ANR	115555	PtrMemberAccess	plaintext -> len		115271	1					
ANR	115556	Identifier	plaintext		115271	0					
ANR	115557	Identifier	len		115271	1					
ANR	115558	IfStatement	if ( padding )		115271	5					
ANR	115559	Condition	padding	419:12:12208:12214	115271	0	True				
ANR	115560	Identifier	padding		115271	0					
ANR	115561	CompoundStatement		41:21:1553:1553	115271	1					
ANR	115562	ExpressionStatement	"memmove ( ciphertext -> data + nonce_len , ciphertext -> data + nonce_len + padding , ciphertext -> len )"	420:12:12231:12345	115271	0	True				
ANR	115563	CallExpression	"memmove ( ciphertext -> data + nonce_len , ciphertext -> data + nonce_len + padding , ciphertext -> len )"		115271	0					
ANR	115564	Callee	memmove		115271	0					
ANR	115565	Identifier	memmove		115271	0					
ANR	115566	ArgumentList	ciphertext -> data + nonce_len		115271	1					
ANR	115567	Argument	ciphertext -> data + nonce_len		115271	0					
ANR	115568	AdditiveExpression	ciphertext -> data + nonce_len		115271	0		+			
ANR	115569	PtrMemberAccess	ciphertext -> data		115271	0					
ANR	115570	Identifier	ciphertext		115271	0					
ANR	115571	Identifier	data		115271	1					
ANR	115572	Identifier	nonce_len		115271	1					
ANR	115573	Argument	ciphertext -> data + nonce_len + padding		115271	1					
ANR	115574	AdditiveExpression	ciphertext -> data + nonce_len + padding		115271	0		+			
ANR	115575	PtrMemberAccess	ciphertext -> data		115271	0					
ANR	115576	Identifier	ciphertext		115271	0					
ANR	115577	Identifier	data		115271	1					
ANR	115578	AdditiveExpression	nonce_len + padding		115271	1		+			
ANR	115579	Identifier	nonce_len		115271	0					
ANR	115580	Identifier	padding		115271	1					
ANR	115581	Argument	ciphertext -> len		115271	2					
ANR	115582	PtrMemberAccess	ciphertext -> len		115271	0					
ANR	115583	Identifier	ciphertext		115271	0					
ANR	115584	Identifier	len		115271	1					
ANR	115585	ElseStatement	else		115271	0					
ANR	115586	CompoundStatement		45:11:1704:1704	115271	0					
ANR	115587	ExpressionStatement	"err = cipher_ctx_update ( cipher_ctx , ( uint8_t * ) ( ciphertext -> data + nonce_len ) , & ciphertext -> len , ( const uint8_t * ) plaintext -> data , plaintext -> len )"	424:8:12378:12620	115271	0	True				
ANR	115588	AssignmentExpression	"err = cipher_ctx_update ( cipher_ctx , ( uint8_t * ) ( ciphertext -> data + nonce_len ) , & ciphertext -> len , ( const uint8_t * ) plaintext -> data , plaintext -> len )"		115271	0		=			
ANR	115589	Identifier	err		115271	0					
ANR	115590	CallExpression	"cipher_ctx_update ( cipher_ctx , ( uint8_t * ) ( ciphertext -> data + nonce_len ) , & ciphertext -> len , ( const uint8_t * ) plaintext -> data , plaintext -> len )"		115271	1					
ANR	115591	Callee	cipher_ctx_update		115271	0					
ANR	115592	Identifier	cipher_ctx_update		115271	0					
ANR	115593	ArgumentList	cipher_ctx		115271	1					
ANR	115594	Argument	cipher_ctx		115271	0					
ANR	115595	Identifier	cipher_ctx		115271	0					
ANR	115596	Argument	( uint8_t * ) ( ciphertext -> data + nonce_len )		115271	1					
ANR	115597	CastExpression	( uint8_t * ) ( ciphertext -> data + nonce_len )		115271	0					
ANR	115598	CastTarget	uint8_t *		115271	0					
ANR	115599	AdditiveExpression	ciphertext -> data + nonce_len		115271	1		+			
ANR	115600	PtrMemberAccess	ciphertext -> data		115271	0					
ANR	115601	Identifier	ciphertext		115271	0					
ANR	115602	Identifier	data		115271	1					
ANR	115603	Identifier	nonce_len		115271	1					
ANR	115604	Argument	& ciphertext -> len		115271	2					
ANR	115605	UnaryOperationExpression	& ciphertext -> len		115271	0					
ANR	115606	UnaryOperator	&		115271	0					
ANR	115607	PtrMemberAccess	ciphertext -> len		115271	1					
ANR	115608	Identifier	ciphertext		115271	0					
ANR	115609	Identifier	len		115271	1					
ANR	115610	Argument	( const uint8_t * ) plaintext -> data		115271	3					
ANR	115611	CastExpression	( const uint8_t * ) plaintext -> data		115271	0					
ANR	115612	CastTarget	const uint8_t *		115271	0					
ANR	115613	PtrMemberAccess	plaintext -> data		115271	1					
ANR	115614	Identifier	plaintext		115271	0					
ANR	115615	Identifier	data		115271	1					
ANR	115616	Argument	plaintext -> len		115271	4					
ANR	115617	PtrMemberAccess	plaintext -> len		115271	0					
ANR	115618	Identifier	plaintext		115271	0					
ANR	115619	Identifier	len		115271	1					
ANR	115620	IfStatement	if ( err )		115271	1					
ANR	115621	Condition	err	428:12:12634:12636	115271	0	True				
ANR	115622	Identifier	err		115271	0					
ANR	115623	CompoundStatement		50:17:1975:1975	115271	1					
ANR	115624	ReturnStatement	return CRYPTO_ERROR ;	429:12:12653:12672	115271	0	True				
ANR	115625	Identifier	CRYPTO_ERROR		115271	0					
ANR	115626	ExpressionStatement	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"	434:4:12711:12757	115271	12	True				
ANR	115627	CallExpression	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"		115271	0					
ANR	115628	Callee	dump		115271	0					
ANR	115629	Identifier	dump		115271	0					
ANR	115630	ArgumentList	"""PLAIN"""		115271	1					
ANR	115631	Argument	"""PLAIN"""		115271	0					
ANR	115632	PrimaryExpression	"""PLAIN"""		115271	0					
ANR	115633	Argument	plaintext -> data		115271	1					
ANR	115634	PtrMemberAccess	plaintext -> data		115271	0					
ANR	115635	Identifier	plaintext		115271	0					
ANR	115636	Identifier	data		115271	1					
ANR	115637	Argument	plaintext -> len		115271	2					
ANR	115638	PtrMemberAccess	plaintext -> len		115271	0					
ANR	115639	Identifier	plaintext		115271	0					
ANR	115640	Identifier	len		115271	1					
ANR	115641	ExpressionStatement	"dump ( ""CIPHER"" , ciphertext -> data + nonce_len , ciphertext -> len )"	435:4:12763:12824	115271	13	True				
ANR	115642	CallExpression	"dump ( ""CIPHER"" , ciphertext -> data + nonce_len , ciphertext -> len )"		115271	0					
ANR	115643	Callee	dump		115271	0					
ANR	115644	Identifier	dump		115271	0					
ANR	115645	ArgumentList	"""CIPHER"""		115271	1					
ANR	115646	Argument	"""CIPHER"""		115271	0					
ANR	115647	PrimaryExpression	"""CIPHER"""		115271	0					
ANR	115648	Argument	ciphertext -> data + nonce_len		115271	1					
ANR	115649	AdditiveExpression	ciphertext -> data + nonce_len		115271	0		+			
ANR	115650	PtrMemberAccess	ciphertext -> data		115271	0					
ANR	115651	Identifier	ciphertext		115271	0					
ANR	115652	Identifier	data		115271	1					
ANR	115653	Identifier	nonce_len		115271	1					
ANR	115654	Argument	ciphertext -> len		115271	2					
ANR	115655	PtrMemberAccess	ciphertext -> len		115271	0					
ANR	115656	Identifier	ciphertext		115271	0					
ANR	115657	Identifier	len		115271	1					
ANR	115658	ExpressionStatement	"brealloc ( plaintext , nonce_len + ciphertext -> len , capacity )"	438:4:12838:12896	115271	14	True				
ANR	115659	CallExpression	"brealloc ( plaintext , nonce_len + ciphertext -> len , capacity )"		115271	0					
ANR	115660	Callee	brealloc		115271	0					
ANR	115661	Identifier	brealloc		115271	0					
ANR	115662	ArgumentList	plaintext		115271	1					
ANR	115663	Argument	plaintext		115271	0					
ANR	115664	Identifier	plaintext		115271	0					
ANR	115665	Argument	nonce_len + ciphertext -> len		115271	1					
ANR	115666	AdditiveExpression	nonce_len + ciphertext -> len		115271	0		+			
ANR	115667	Identifier	nonce_len		115271	0					
ANR	115668	PtrMemberAccess	ciphertext -> len		115271	1					
ANR	115669	Identifier	ciphertext		115271	0					
ANR	115670	Identifier	len		115271	1					
ANR	115671	Argument	capacity		115271	2					
ANR	115672	Identifier	capacity		115271	0					
ANR	115673	ExpressionStatement	"memcpy ( plaintext -> data , ciphertext -> data , nonce_len + ciphertext -> len )"	439:4:12902:12972	115271	15	True				
ANR	115674	CallExpression	"memcpy ( plaintext -> data , ciphertext -> data , nonce_len + ciphertext -> len )"		115271	0					
ANR	115675	Callee	memcpy		115271	0					
ANR	115676	Identifier	memcpy		115271	0					
ANR	115677	ArgumentList	plaintext -> data		115271	1					
ANR	115678	Argument	plaintext -> data		115271	0					
ANR	115679	PtrMemberAccess	plaintext -> data		115271	0					
ANR	115680	Identifier	plaintext		115271	0					
ANR	115681	Identifier	data		115271	1					
ANR	115682	Argument	ciphertext -> data		115271	1					
ANR	115683	PtrMemberAccess	ciphertext -> data		115271	0					
ANR	115684	Identifier	ciphertext		115271	0					
ANR	115685	Identifier	data		115271	1					
ANR	115686	Argument	nonce_len + ciphertext -> len		115271	2					
ANR	115687	AdditiveExpression	nonce_len + ciphertext -> len		115271	0		+			
ANR	115688	Identifier	nonce_len		115271	0					
ANR	115689	PtrMemberAccess	ciphertext -> len		115271	1					
ANR	115690	Identifier	ciphertext		115271	0					
ANR	115691	Identifier	len		115271	1					
ANR	115692	ExpressionStatement	plaintext -> len = nonce_len + ciphertext -> len	440:4:12978:13022	115271	16	True				
ANR	115693	AssignmentExpression	plaintext -> len = nonce_len + ciphertext -> len		115271	0		=			
ANR	115694	PtrMemberAccess	plaintext -> len		115271	0					
ANR	115695	Identifier	plaintext		115271	0					
ANR	115696	Identifier	len		115271	1					
ANR	115697	AdditiveExpression	nonce_len + ciphertext -> len		115271	1		+			
ANR	115698	Identifier	nonce_len		115271	0					
ANR	115699	PtrMemberAccess	ciphertext -> len		115271	1					
ANR	115700	Identifier	ciphertext		115271	0					
ANR	115701	Identifier	len		115271	1					
ANR	115702	ReturnStatement	return CRYPTO_OK ;	442:4:13029:13045	115271	17	True				
ANR	115703	Identifier	CRYPTO_OK		115271	0					
ANR	115704	ReturnType	int		115271	1					
ANR	115705	Identifier	stream_encrypt		115271	2					
ANR	115706	ParameterList	"buffer_t * plaintext , cipher_ctx_t * cipher_ctx , size_t capacity"		115271	3					
ANR	115707	Parameter	buffer_t * plaintext	378:15:10599:10617	115271	0	True				
ANR	115708	ParameterType	buffer_t *		115271	0					
ANR	115709	Identifier	plaintext		115271	1					
ANR	115710	Parameter	cipher_ctx_t * cipher_ctx	378:36:10620:10643	115271	1	True				
ANR	115711	ParameterType	cipher_ctx_t *		115271	0					
ANR	115712	Identifier	cipher_ctx		115271	1					
ANR	115713	Parameter	size_t capacity	378:62:10646:10660	115271	2	True				
ANR	115714	ParameterType	size_t		115271	0					
ANR	115715	Identifier	capacity		115271	1					
ANR	115716	CFGEntryNode	ENTRY		115271		True				
ANR	115717	CFGExitNode	EXIT		115271		True				
ANR	115718	Symbol	cipher_ctx -> cipher		115271						
ANR	115719	Symbol	CRYPTO_ERROR		115271						
ANR	115720	Symbol	CRYPTO_OK		115271						
ANR	115721	Symbol	cipher_ctx -> init		115271						
ANR	115722	Symbol	cipher_ctx -> nonce		115271						
ANR	115723	Symbol	capacity		115271						
ANR	115724	Symbol	* * cipher_ctx		115271						
ANR	115725	Symbol	* plaintext		115271						
ANR	115726	Symbol	cipher_ctx -> cipher -> nonce_len		115271						
ANR	115727	Symbol	tmp		115271						
ANR	115728	Symbol	plaintext -> data		115271						
ANR	115729	Symbol	cipher -> key		115271						
ANR	115730	Symbol	* cipher_ctx -> cipher		115271						
ANR	115731	Symbol	SODIUM_BLOCK_SIZE		115271						
ANR	115732	Symbol	cipher		115271						
ANR	115733	Symbol	padding		115271						
ANR	115734	Symbol	ciphertext		115271						
ANR	115735	Symbol	ciphertext -> len		115271						
ANR	115736	Symbol	cipher_ctx		115271						
ANR	115737	Symbol	NULL		115271						
ANR	115738	Symbol	err		115271						
ANR	115739	Symbol	* cipher_ctx		115271						
ANR	115740	Symbol	* cipher		115271						
ANR	115741	Symbol	nonce_len		115271						
ANR	115742	Symbol	& ciphertext -> len		115271						
ANR	115743	Symbol	plaintext		115271						
ANR	115744	Symbol	cipher_ctx -> counter		115271						
ANR	115745	Symbol	plaintext -> len		115271						
ANR	115746	Symbol	SALSA20		115271						
ANR	115747	Symbol	ciphertext -> data		115271						
ANR	115748	Symbol	cipher -> method		115271						
ANR	115749	Symbol	& tmp		115271						
ANR	115750	Symbol	cipher_ctx_update		115271						
ANR	115751	Symbol	* ciphertext		115271						
ANR	115752	Function	stream_decrypt_all	445:0:13050:14913							
ANR	115753	FunctionDef	"stream_decrypt_all (buffer_t * ciphertext , cipher_t * cipher , size_t capacity)"		115752	0					
ANR	115754	CompoundStatement		447:0:13130:14913	115752	0					
ANR	115755	IdentifierDeclStatement	size_t nonce_len = cipher -> nonce_len ;	448:4:13136:13172	115752	0	True				
ANR	115756	IdentifierDecl	nonce_len = cipher -> nonce_len		115752	0					
ANR	115757	IdentifierDeclType	size_t		115752	0					
ANR	115758	Identifier	nonce_len		115752	1					
ANR	115759	AssignmentExpression	nonce_len = cipher -> nonce_len		115752	2		=			
ANR	115760	Identifier	nonce_len		115752	0					
ANR	115761	PtrMemberAccess	cipher -> nonce_len		115752	1					
ANR	115762	Identifier	cipher		115752	0					
ANR	115763	Identifier	nonce_len		115752	1					
ANR	115764	IdentifierDeclStatement	int err = CRYPTO_OK ;	449:4:13178:13206	115752	1	True				
ANR	115765	IdentifierDecl	err = CRYPTO_OK		115752	0					
ANR	115766	IdentifierDeclType	int		115752	0					
ANR	115767	Identifier	err		115752	1					
ANR	115768	AssignmentExpression	err = CRYPTO_OK		115752	2		=			
ANR	115769	Identifier	CRYPTO_OK		115752	0					
ANR	115770	Identifier	CRYPTO_OK		115752	1					
ANR	115771	IfStatement	if ( ciphertext -> len <= nonce_len )		115752	2					
ANR	115772	Condition	ciphertext -> len <= nonce_len	451:8:13217:13244	115752	0	True				
ANR	115773	RelationalExpression	ciphertext -> len <= nonce_len		115752	0		<=			
ANR	115774	PtrMemberAccess	ciphertext -> len		115752	0					
ANR	115775	Identifier	ciphertext		115752	0					
ANR	115776	Identifier	len		115752	1					
ANR	115777	Identifier	nonce_len		115752	1					
ANR	115778	CompoundStatement		5:38:116:116	115752	1					
ANR	115779	ReturnStatement	return CRYPTO_ERROR ;	452:8:13257:13276	115752	0	True				
ANR	115780	Identifier	CRYPTO_ERROR		115752	0					
ANR	115781	IdentifierDeclStatement	cipher_ctx_t cipher_ctx ;	455:4:13289:13312	115752	3	True				
ANR	115782	IdentifierDecl	cipher_ctx		115752	0					
ANR	115783	IdentifierDeclType	cipher_ctx_t		115752	0					
ANR	115784	Identifier	cipher_ctx		115752	1					
ANR	115785	ExpressionStatement	"stream_ctx_init ( cipher , & cipher_ctx , 0 )"	456:4:13318:13357	115752	4	True				
ANR	115786	CallExpression	"stream_ctx_init ( cipher , & cipher_ctx , 0 )"		115752	0					
ANR	115787	Callee	stream_ctx_init		115752	0					
ANR	115788	Identifier	stream_ctx_init		115752	0					
ANR	115789	ArgumentList	cipher		115752	1					
ANR	115790	Argument	cipher		115752	0					
ANR	115791	Identifier	cipher		115752	0					
ANR	115792	Argument	& cipher_ctx		115752	1					
ANR	115793	UnaryOperationExpression	& cipher_ctx		115752	0					
ANR	115794	UnaryOperator	&		115752	0					
ANR	115795	Identifier	cipher_ctx		115752	1					
ANR	115796	Argument	0		115752	2					
ANR	115797	PrimaryExpression	0		115752	0					
ANR	115798	Statement	static	458:4:13364:13369	115752	5	True				
ANR	115799	IdentifierDeclStatement	"buffer_t tmp = { 0 , 0 , 0 , NULL } ;"	458:11:13371:13403	115752	6	True				
ANR	115800	IdentifierDecl	"tmp = { 0 , 0 , 0 , NULL }"		115752	0					
ANR	115801	IdentifierDeclType	buffer_t		115752	0					
ANR	115802	Identifier	tmp		115752	1					
ANR	115803	AssignmentExpression	"tmp = { 0 , 0 , 0 , NULL }"		115752	2		=			
ANR	115804	Identifier	tmp		115752	0					
ANR	115805	InitializerList	0		115752	1					
ANR	115806	PrimaryExpression	0		115752	0					
ANR	115807	PrimaryExpression	0		115752	1					
ANR	115808	PrimaryExpression	0		115752	2					
ANR	115809	Identifier	NULL		115752	3					
ANR	115810	ExpressionStatement	"brealloc ( & tmp , ciphertext -> len , capacity )"	459:4:13409:13450	115752	7	True				
ANR	115811	CallExpression	"brealloc ( & tmp , ciphertext -> len , capacity )"		115752	0					
ANR	115812	Callee	brealloc		115752	0					
ANR	115813	Identifier	brealloc		115752	0					
ANR	115814	ArgumentList	& tmp		115752	1					
ANR	115815	Argument	& tmp		115752	0					
ANR	115816	UnaryOperationExpression	& tmp		115752	0					
ANR	115817	UnaryOperator	&		115752	0					
ANR	115818	Identifier	tmp		115752	1					
ANR	115819	Argument	ciphertext -> len		115752	1					
ANR	115820	PtrMemberAccess	ciphertext -> len		115752	0					
ANR	115821	Identifier	ciphertext		115752	0					
ANR	115822	Identifier	len		115752	1					
ANR	115823	Argument	capacity		115752	2					
ANR	115824	Identifier	capacity		115752	0					
ANR	115825	IdentifierDeclStatement	buffer_t * plaintext = & tmp ;	460:4:13456:13482	115752	8	True				
ANR	115826	IdentifierDecl	* plaintext = & tmp		115752	0					
ANR	115827	IdentifierDeclType	buffer_t *		115752	0					
ANR	115828	Identifier	plaintext		115752	1					
ANR	115829	AssignmentExpression	* plaintext = & tmp		115752	2		=			
ANR	115830	Identifier	plaintext		115752	0					
ANR	115831	UnaryOperationExpression	& tmp		115752	1					
ANR	115832	UnaryOperator	&		115752	0					
ANR	115833	Identifier	tmp		115752	1					
ANR	115834	ExpressionStatement	plaintext -> len = ciphertext -> len - nonce_len	461:4:13488:13532	115752	9	True				
ANR	115835	AssignmentExpression	plaintext -> len = ciphertext -> len - nonce_len		115752	0		=			
ANR	115836	PtrMemberAccess	plaintext -> len		115752	0					
ANR	115837	Identifier	plaintext		115752	0					
ANR	115838	Identifier	len		115752	1					
ANR	115839	AdditiveExpression	ciphertext -> len - nonce_len		115752	1		-			
ANR	115840	PtrMemberAccess	ciphertext -> len		115752	0					
ANR	115841	Identifier	ciphertext		115752	0					
ANR	115842	Identifier	len		115752	1					
ANR	115843	Identifier	nonce_len		115752	1					
ANR	115844	IdentifierDeclStatement	uint8_t * nonce = cipher_ctx . nonce ;	463:4:13539:13572	115752	10	True				
ANR	115845	IdentifierDecl	* nonce = cipher_ctx . nonce		115752	0					
ANR	115846	IdentifierDeclType	uint8_t *		115752	0					
ANR	115847	Identifier	nonce		115752	1					
ANR	115848	AssignmentExpression	* nonce = cipher_ctx . nonce		115752	2		=			
ANR	115849	Identifier	nonce		115752	0					
ANR	115850	MemberAccess	cipher_ctx . nonce		115752	1					
ANR	115851	Identifier	cipher_ctx		115752	0					
ANR	115852	Identifier	nonce		115752	1					
ANR	115853	ExpressionStatement	"memcpy ( nonce , ciphertext -> data , nonce_len )"	464:4:13578:13620	115752	11	True				
ANR	115854	CallExpression	"memcpy ( nonce , ciphertext -> data , nonce_len )"		115752	0					
ANR	115855	Callee	memcpy		115752	0					
ANR	115856	Identifier	memcpy		115752	0					
ANR	115857	ArgumentList	nonce		115752	1					
ANR	115858	Argument	nonce		115752	0					
ANR	115859	Identifier	nonce		115752	0					
ANR	115860	Argument	ciphertext -> data		115752	1					
ANR	115861	PtrMemberAccess	ciphertext -> data		115752	0					
ANR	115862	Identifier	ciphertext		115752	0					
ANR	115863	Identifier	data		115752	1					
ANR	115864	Argument	nonce_len		115752	2					
ANR	115865	Identifier	nonce_len		115752	0					
ANR	115866	IfStatement	"if ( ppbloom_check ( ( void * ) nonce , nonce_len ) == 1 )"		115752	12					
ANR	115867	Condition	"ppbloom_check ( ( void * ) nonce , nonce_len ) == 1"	466:8:13631:13674	115752	0	True				
ANR	115868	EqualityExpression	"ppbloom_check ( ( void * ) nonce , nonce_len ) == 1"		115752	0		==			
ANR	115869	CallExpression	"ppbloom_check ( ( void * ) nonce , nonce_len )"		115752	0					
ANR	115870	Callee	ppbloom_check		115752	0					
ANR	115871	Identifier	ppbloom_check		115752	0					
ANR	115872	ArgumentList	( void * ) nonce		115752	1					
ANR	115873	Argument	( void * ) nonce		115752	0					
ANR	115874	CastExpression	( void * ) nonce		115752	0					
ANR	115875	CastTarget	void *		115752	0					
ANR	115876	Identifier	nonce		115752	1					
ANR	115877	Argument	nonce_len		115752	1					
ANR	115878	Identifier	nonce_len		115752	0					
ANR	115879	PrimaryExpression	1		115752	1					
ANR	115880	CompoundStatement		20:54:546:546	115752	1					
ANR	115881	ExpressionStatement	"LOGE ( ""crypto: stream: repeat IV detected"" )"	467:8:13687:13729	115752	0	True				
ANR	115882	CallExpression	"LOGE ( ""crypto: stream: repeat IV detected"" )"		115752	0					
ANR	115883	Callee	LOGE		115752	0					
ANR	115884	Identifier	LOGE		115752	0					
ANR	115885	ArgumentList	"""crypto: stream: repeat IV detected"""		115752	1					
ANR	115886	Argument	"""crypto: stream: repeat IV detected"""		115752	0					
ANR	115887	PrimaryExpression	"""crypto: stream: repeat IV detected"""		115752	0					
ANR	115888	ReturnStatement	return CRYPTO_ERROR ;	468:8:13739:13758	115752	1	True				
ANR	115889	Identifier	CRYPTO_ERROR		115752	0					
ANR	115890	ExpressionStatement	"cipher_ctx_set_nonce ( & cipher_ctx , nonce , nonce_len , 0 )"	471:4:13771:13825	115752	13	True				
ANR	115891	CallExpression	"cipher_ctx_set_nonce ( & cipher_ctx , nonce , nonce_len , 0 )"		115752	0					
ANR	115892	Callee	cipher_ctx_set_nonce		115752	0					
ANR	115893	Identifier	cipher_ctx_set_nonce		115752	0					
ANR	115894	ArgumentList	& cipher_ctx		115752	1					
ANR	115895	Argument	& cipher_ctx		115752	0					
ANR	115896	UnaryOperationExpression	& cipher_ctx		115752	0					
ANR	115897	UnaryOperator	&		115752	0					
ANR	115898	Identifier	cipher_ctx		115752	1					
ANR	115899	Argument	nonce		115752	1					
ANR	115900	Identifier	nonce		115752	0					
ANR	115901	Argument	nonce_len		115752	2					
ANR	115902	Identifier	nonce_len		115752	0					
ANR	115903	Argument	0		115752	3					
ANR	115904	PrimaryExpression	0		115752	0					
ANR	115905	IfStatement	if ( cipher -> method >= SALSA20 )		115752	14					
ANR	115906	Condition	cipher -> method >= SALSA20	473:8:13836:13860	115752	0	True				
ANR	115907	RelationalExpression	cipher -> method >= SALSA20		115752	0		>=			
ANR	115908	PtrMemberAccess	cipher -> method		115752	0					
ANR	115909	Identifier	cipher		115752	0					
ANR	115910	Identifier	method		115752	1					
ANR	115911	Identifier	SALSA20		115752	1					
ANR	115912	CompoundStatement		27:35:732:732	115752	1					
ANR	115913	ExpressionStatement	"crypto_stream_xor_ic ( ( uint8_t * ) plaintext -> data , ( const uint8_t * ) ( ciphertext -> data + nonce_len ) , ( uint64_t ) ( ciphertext -> len - nonce_len ) , ( const uint8_t * ) nonce , 0 , cipher -> key , cipher -> method )"	474:8:13873:14154	115752	0	True				
ANR	115914	CallExpression	"crypto_stream_xor_ic ( ( uint8_t * ) plaintext -> data , ( const uint8_t * ) ( ciphertext -> data + nonce_len ) , ( uint64_t ) ( ciphertext -> len - nonce_len ) , ( const uint8_t * ) nonce , 0 , cipher -> key , cipher -> method )"		115752	0					
ANR	115915	Callee	crypto_stream_xor_ic		115752	0					
ANR	115916	Identifier	crypto_stream_xor_ic		115752	0					
ANR	115917	ArgumentList	( uint8_t * ) plaintext -> data		115752	1					
ANR	115918	Argument	( uint8_t * ) plaintext -> data		115752	0					
ANR	115919	CastExpression	( uint8_t * ) plaintext -> data		115752	0					
ANR	115920	CastTarget	uint8_t *		115752	0					
ANR	115921	PtrMemberAccess	plaintext -> data		115752	1					
ANR	115922	Identifier	plaintext		115752	0					
ANR	115923	Identifier	data		115752	1					
ANR	115924	Argument	( const uint8_t * ) ( ciphertext -> data + nonce_len )		115752	1					
ANR	115925	CastExpression	( const uint8_t * ) ( ciphertext -> data + nonce_len )		115752	0					
ANR	115926	CastTarget	const uint8_t *		115752	0					
ANR	115927	AdditiveExpression	ciphertext -> data + nonce_len		115752	1		+			
ANR	115928	PtrMemberAccess	ciphertext -> data		115752	0					
ANR	115929	Identifier	ciphertext		115752	0					
ANR	115930	Identifier	data		115752	1					
ANR	115931	Identifier	nonce_len		115752	1					
ANR	115932	Argument	( uint64_t ) ( ciphertext -> len - nonce_len )		115752	2					
ANR	115933	CastExpression	( uint64_t ) ( ciphertext -> len - nonce_len )		115752	0					
ANR	115934	CastTarget	uint64_t		115752	0					
ANR	115935	AdditiveExpression	ciphertext -> len - nonce_len		115752	1		-			
ANR	115936	PtrMemberAccess	ciphertext -> len		115752	0					
ANR	115937	Identifier	ciphertext		115752	0					
ANR	115938	Identifier	len		115752	1					
ANR	115939	Identifier	nonce_len		115752	1					
ANR	115940	Argument	( const uint8_t * ) nonce		115752	3					
ANR	115941	CastExpression	( const uint8_t * ) nonce		115752	0					
ANR	115942	CastTarget	const uint8_t *		115752	0					
ANR	115943	Identifier	nonce		115752	1					
ANR	115944	Argument	0		115752	4					
ANR	115945	PrimaryExpression	0		115752	0					
ANR	115946	Argument	cipher -> key		115752	5					
ANR	115947	PtrMemberAccess	cipher -> key		115752	0					
ANR	115948	Identifier	cipher		115752	0					
ANR	115949	Identifier	key		115752	1					
ANR	115950	Argument	cipher -> method		115752	6					
ANR	115951	PtrMemberAccess	cipher -> method		115752	0					
ANR	115952	Identifier	cipher		115752	0					
ANR	115953	Identifier	method		115752	1					
ANR	115954	ElseStatement	else		115752	0					
ANR	115955	CompoundStatement		32:11:1036:1036	115752	0					
ANR	115956	ExpressionStatement	"err = cipher_ctx_update ( & cipher_ctx , ( uint8_t * ) plaintext -> data , & plaintext -> len , ( const uint8_t * ) ( ciphertext -> data + nonce_len ) , ciphertext -> len - nonce_len )"	479:8:14177:14400	115752	0	True				
ANR	115957	AssignmentExpression	"err = cipher_ctx_update ( & cipher_ctx , ( uint8_t * ) plaintext -> data , & plaintext -> len , ( const uint8_t * ) ( ciphertext -> data + nonce_len ) , ciphertext -> len - nonce_len )"		115752	0		=			
ANR	115958	Identifier	err		115752	0					
ANR	115959	CallExpression	"cipher_ctx_update ( & cipher_ctx , ( uint8_t * ) plaintext -> data , & plaintext -> len , ( const uint8_t * ) ( ciphertext -> data + nonce_len ) , ciphertext -> len - nonce_len )"		115752	1					
ANR	115960	Callee	cipher_ctx_update		115752	0					
ANR	115961	Identifier	cipher_ctx_update		115752	0					
ANR	115962	ArgumentList	& cipher_ctx		115752	1					
ANR	115963	Argument	& cipher_ctx		115752	0					
ANR	115964	UnaryOperationExpression	& cipher_ctx		115752	0					
ANR	115965	UnaryOperator	&		115752	0					
ANR	115966	Identifier	cipher_ctx		115752	1					
ANR	115967	Argument	( uint8_t * ) plaintext -> data		115752	1					
ANR	115968	CastExpression	( uint8_t * ) plaintext -> data		115752	0					
ANR	115969	CastTarget	uint8_t *		115752	0					
ANR	115970	PtrMemberAccess	plaintext -> data		115752	1					
ANR	115971	Identifier	plaintext		115752	0					
ANR	115972	Identifier	data		115752	1					
ANR	115973	Argument	& plaintext -> len		115752	2					
ANR	115974	UnaryOperationExpression	& plaintext -> len		115752	0					
ANR	115975	UnaryOperator	&		115752	0					
ANR	115976	PtrMemberAccess	plaintext -> len		115752	1					
ANR	115977	Identifier	plaintext		115752	0					
ANR	115978	Identifier	len		115752	1					
ANR	115979	Argument	( const uint8_t * ) ( ciphertext -> data + nonce_len )		115752	3					
ANR	115980	CastExpression	( const uint8_t * ) ( ciphertext -> data + nonce_len )		115752	0					
ANR	115981	CastTarget	const uint8_t *		115752	0					
ANR	115982	AdditiveExpression	ciphertext -> data + nonce_len		115752	1		+			
ANR	115983	PtrMemberAccess	ciphertext -> data		115752	0					
ANR	115984	Identifier	ciphertext		115752	0					
ANR	115985	Identifier	data		115752	1					
ANR	115986	Identifier	nonce_len		115752	1					
ANR	115987	Argument	ciphertext -> len - nonce_len		115752	4					
ANR	115988	AdditiveExpression	ciphertext -> len - nonce_len		115752	0		-			
ANR	115989	PtrMemberAccess	ciphertext -> len		115752	0					
ANR	115990	Identifier	ciphertext		115752	0					
ANR	115991	Identifier	len		115752	1					
ANR	115992	Identifier	nonce_len		115752	1					
ANR	115993	ExpressionStatement	stream_ctx_release ( & cipher_ctx )	484:4:14413:14444	115752	15	True				
ANR	115994	CallExpression	stream_ctx_release ( & cipher_ctx )		115752	0					
ANR	115995	Callee	stream_ctx_release		115752	0					
ANR	115996	Identifier	stream_ctx_release		115752	0					
ANR	115997	ArgumentList	& cipher_ctx		115752	1					
ANR	115998	Argument	& cipher_ctx		115752	0					
ANR	115999	UnaryOperationExpression	& cipher_ctx		115752	0					
ANR	116000	UnaryOperator	&		115752	0					
ANR	116001	Identifier	cipher_ctx		115752	1					
ANR	116002	IfStatement	if ( err )		115752	16					
ANR	116003	Condition	err	486:8:14455:14457	115752	0	True				
ANR	116004	Identifier	err		115752	0					
ANR	116005	ReturnStatement	return CRYPTO_ERROR ;	487:8:14468:14487	115752	1	True				
ANR	116006	Identifier	CRYPTO_ERROR		115752	0					
ANR	116007	ExpressionStatement	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"	490:4:14510:14556	115752	17	True				
ANR	116008	CallExpression	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"		115752	0					
ANR	116009	Callee	dump		115752	0					
ANR	116010	Identifier	dump		115752	0					
ANR	116011	ArgumentList	"""PLAIN"""		115752	1					
ANR	116012	Argument	"""PLAIN"""		115752	0					
ANR	116013	PrimaryExpression	"""PLAIN"""		115752	0					
ANR	116014	Argument	plaintext -> data		115752	1					
ANR	116015	PtrMemberAccess	plaintext -> data		115752	0					
ANR	116016	Identifier	plaintext		115752	0					
ANR	116017	Identifier	data		115752	1					
ANR	116018	Argument	plaintext -> len		115752	2					
ANR	116019	PtrMemberAccess	plaintext -> len		115752	0					
ANR	116020	Identifier	plaintext		115752	0					
ANR	116021	Identifier	len		115752	1					
ANR	116022	ExpressionStatement	"dump ( ""CIPHER"" , ciphertext -> data + nonce_len , ciphertext -> len - nonce_len )"	491:4:14562:14635	115752	18	True				
ANR	116023	CallExpression	"dump ( ""CIPHER"" , ciphertext -> data + nonce_len , ciphertext -> len - nonce_len )"		115752	0					
ANR	116024	Callee	dump		115752	0					
ANR	116025	Identifier	dump		115752	0					
ANR	116026	ArgumentList	"""CIPHER"""		115752	1					
ANR	116027	Argument	"""CIPHER"""		115752	0					
ANR	116028	PrimaryExpression	"""CIPHER"""		115752	0					
ANR	116029	Argument	ciphertext -> data + nonce_len		115752	1					
ANR	116030	AdditiveExpression	ciphertext -> data + nonce_len		115752	0		+			
ANR	116031	PtrMemberAccess	ciphertext -> data		115752	0					
ANR	116032	Identifier	ciphertext		115752	0					
ANR	116033	Identifier	data		115752	1					
ANR	116034	Identifier	nonce_len		115752	1					
ANR	116035	Argument	ciphertext -> len - nonce_len		115752	2					
ANR	116036	AdditiveExpression	ciphertext -> len - nonce_len		115752	0		-			
ANR	116037	PtrMemberAccess	ciphertext -> len		115752	0					
ANR	116038	Identifier	ciphertext		115752	0					
ANR	116039	Identifier	len		115752	1					
ANR	116040	Identifier	nonce_len		115752	1					
ANR	116041	ExpressionStatement	"dump ( ""NONCE"" , ciphertext -> data , nonce_len )"	492:4:14641:14683	115752	19	True				
ANR	116042	CallExpression	"dump ( ""NONCE"" , ciphertext -> data , nonce_len )"		115752	0					
ANR	116043	Callee	dump		115752	0					
ANR	116044	Identifier	dump		115752	0					
ANR	116045	ArgumentList	"""NONCE"""		115752	1					
ANR	116046	Argument	"""NONCE"""		115752	0					
ANR	116047	PrimaryExpression	"""NONCE"""		115752	0					
ANR	116048	Argument	ciphertext -> data		115752	1					
ANR	116049	PtrMemberAccess	ciphertext -> data		115752	0					
ANR	116050	Identifier	ciphertext		115752	0					
ANR	116051	Identifier	data		115752	1					
ANR	116052	Argument	nonce_len		115752	2					
ANR	116053	Identifier	nonce_len		115752	0					
ANR	116054	ExpressionStatement	"ppbloom_add ( ( void * ) nonce , nonce_len )"	495:4:14697:14734	115752	20	True				
ANR	116055	CallExpression	"ppbloom_add ( ( void * ) nonce , nonce_len )"		115752	0					
ANR	116056	Callee	ppbloom_add		115752	0					
ANR	116057	Identifier	ppbloom_add		115752	0					
ANR	116058	ArgumentList	( void * ) nonce		115752	1					
ANR	116059	Argument	( void * ) nonce		115752	0					
ANR	116060	CastExpression	( void * ) nonce		115752	0					
ANR	116061	CastTarget	void *		115752	0					
ANR	116062	Identifier	nonce		115752	1					
ANR	116063	Argument	nonce_len		115752	1					
ANR	116064	Identifier	nonce_len		115752	0					
ANR	116065	ExpressionStatement	"brealloc ( ciphertext , plaintext -> len , capacity )"	497:4:14741:14787	115752	21	True				
ANR	116066	CallExpression	"brealloc ( ciphertext , plaintext -> len , capacity )"		115752	0					
ANR	116067	Callee	brealloc		115752	0					
ANR	116068	Identifier	brealloc		115752	0					
ANR	116069	ArgumentList	ciphertext		115752	1					
ANR	116070	Argument	ciphertext		115752	0					
ANR	116071	Identifier	ciphertext		115752	0					
ANR	116072	Argument	plaintext -> len		115752	1					
ANR	116073	PtrMemberAccess	plaintext -> len		115752	0					
ANR	116074	Identifier	plaintext		115752	0					
ANR	116075	Identifier	len		115752	1					
ANR	116076	Argument	capacity		115752	2					
ANR	116077	Identifier	capacity		115752	0					
ANR	116078	ExpressionStatement	"memcpy ( ciphertext -> data , plaintext -> data , plaintext -> len )"	498:4:14793:14850	115752	22	True				
ANR	116079	CallExpression	"memcpy ( ciphertext -> data , plaintext -> data , plaintext -> len )"		115752	0					
ANR	116080	Callee	memcpy		115752	0					
ANR	116081	Identifier	memcpy		115752	0					
ANR	116082	ArgumentList	ciphertext -> data		115752	1					
ANR	116083	Argument	ciphertext -> data		115752	0					
ANR	116084	PtrMemberAccess	ciphertext -> data		115752	0					
ANR	116085	Identifier	ciphertext		115752	0					
ANR	116086	Identifier	data		115752	1					
ANR	116087	Argument	plaintext -> data		115752	1					
ANR	116088	PtrMemberAccess	plaintext -> data		115752	0					
ANR	116089	Identifier	plaintext		115752	0					
ANR	116090	Identifier	data		115752	1					
ANR	116091	Argument	plaintext -> len		115752	2					
ANR	116092	PtrMemberAccess	plaintext -> len		115752	0					
ANR	116093	Identifier	plaintext		115752	0					
ANR	116094	Identifier	len		115752	1					
ANR	116095	ExpressionStatement	ciphertext -> len = plaintext -> len	499:4:14856:14888	115752	23	True				
ANR	116096	AssignmentExpression	ciphertext -> len = plaintext -> len		115752	0		=			
ANR	116097	PtrMemberAccess	ciphertext -> len		115752	0					
ANR	116098	Identifier	ciphertext		115752	0					
ANR	116099	Identifier	len		115752	1					
ANR	116100	PtrMemberAccess	plaintext -> len		115752	1					
ANR	116101	Identifier	plaintext		115752	0					
ANR	116102	Identifier	len		115752	1					
ANR	116103	ReturnStatement	return CRYPTO_OK ;	501:4:14895:14911	115752	24	True				
ANR	116104	Identifier	CRYPTO_OK		115752	0					
ANR	116105	ReturnType	int		115752	1					
ANR	116106	Identifier	stream_decrypt_all		115752	2					
ANR	116107	ParameterList	"buffer_t * ciphertext , cipher_t * cipher , size_t capacity"		115752	3					
ANR	116108	Parameter	buffer_t * ciphertext	446:19:13073:13092	115752	0	True				
ANR	116109	ParameterType	buffer_t *		115752	0					
ANR	116110	Identifier	ciphertext		115752	1					
ANR	116111	Parameter	cipher_t * cipher	446:41:13095:13110	115752	1	True				
ANR	116112	ParameterType	cipher_t *		115752	0					
ANR	116113	Identifier	cipher		115752	1					
ANR	116114	Parameter	size_t capacity	446:59:13113:13127	115752	2	True				
ANR	116115	ParameterType	size_t		115752	0					
ANR	116116	Identifier	capacity		115752	1					
ANR	116117	CFGEntryNode	ENTRY		115752		True				
ANR	116118	CFGExitNode	EXIT		115752		True				
ANR	116119	Symbol	CRYPTO_ERROR		115752						
ANR	116120	Symbol	CRYPTO_OK		115752						
ANR	116121	Symbol	& plaintext -> len		115752						
ANR	116122	Symbol	capacity		115752						
ANR	116123	Symbol	* plaintext		115752						
ANR	116124	Symbol	tmp		115752						
ANR	116125	Symbol	plaintext -> data		115752						
ANR	116126	Symbol	cipher -> key		115752						
ANR	116127	Symbol	cipher		115752						
ANR	116128	Symbol	ciphertext		115752						
ANR	116129	Symbol	ciphertext -> len		115752						
ANR	116130	Symbol	cipher_ctx		115752						
ANR	116131	Symbol	NULL		115752						
ANR	116132	Symbol	err		115752						
ANR	116133	Symbol	* cipher		115752						
ANR	116134	Symbol	ppbloom_check		115752						
ANR	116135	Symbol	nonce_len		115752						
ANR	116136	Symbol	& cipher_ctx		115752						
ANR	116137	Symbol	plaintext		115752						
ANR	116138	Symbol	nonce		115752						
ANR	116139	Symbol	cipher_ctx . nonce		115752						
ANR	116140	Symbol	plaintext -> len		115752						
ANR	116141	Symbol	SALSA20		115752						
ANR	116142	Symbol	ciphertext -> data		115752						
ANR	116143	Symbol	cipher -> method		115752						
ANR	116144	Symbol	cipher -> nonce_len		115752						
ANR	116145	Symbol	& tmp		115752						
ANR	116146	Symbol	cipher_ctx_update		115752						
ANR	116147	Symbol	* ciphertext		115752						
ANR	116148	Function	stream_decrypt	504:0:14916:18530							
ANR	116149	FunctionDef	"stream_decrypt (buffer_t * ciphertext , cipher_ctx_t * cipher_ctx , size_t capacity)"		116148	0					
ANR	116150	CompoundStatement		506:0:15000:18530	116148	0					
ANR	116151	IfStatement	if ( cipher_ctx == NULL )		116148	0					
ANR	116152	Condition	cipher_ctx == NULL	507:8:15010:15027	116148	0	True				
ANR	116153	EqualityExpression	cipher_ctx == NULL		116148	0		==			
ANR	116154	Identifier	cipher_ctx		116148	0					
ANR	116155	Identifier	NULL		116148	1					
ANR	116156	ReturnStatement	return CRYPTO_ERROR ;	508:8:15038:15057	116148	1	True				
ANR	116157	Identifier	CRYPTO_ERROR		116148	0					
ANR	116158	IdentifierDeclStatement	cipher_t * cipher = cipher_ctx -> cipher ;	510:4:15064:15101	116148	1	True				
ANR	116159	IdentifierDecl	* cipher = cipher_ctx -> cipher		116148	0					
ANR	116160	IdentifierDeclType	cipher_t *		116148	0					
ANR	116161	Identifier	cipher		116148	1					
ANR	116162	AssignmentExpression	* cipher = cipher_ctx -> cipher		116148	2		=			
ANR	116163	Identifier	cipher		116148	0					
ANR	116164	PtrMemberAccess	cipher_ctx -> cipher		116148	1					
ANR	116165	Identifier	cipher_ctx		116148	0					
ANR	116166	Identifier	cipher		116148	1					
ANR	116167	Statement	static	512:4:15108:15113	116148	2	True				
ANR	116168	IdentifierDeclStatement	"buffer_t tmp = { 0 , 0 , 0 , NULL } ;"	512:11:15115:15147	116148	3	True				
ANR	116169	IdentifierDecl	"tmp = { 0 , 0 , 0 , NULL }"		116148	0					
ANR	116170	IdentifierDeclType	buffer_t		116148	0					
ANR	116171	Identifier	tmp		116148	1					
ANR	116172	AssignmentExpression	"tmp = { 0 , 0 , 0 , NULL }"		116148	2		=			
ANR	116173	Identifier	tmp		116148	0					
ANR	116174	InitializerList	0		116148	1					
ANR	116175	PrimaryExpression	0		116148	0					
ANR	116176	PrimaryExpression	0		116148	1					
ANR	116177	PrimaryExpression	0		116148	2					
ANR	116178	Identifier	NULL		116148	3					
ANR	116179	IdentifierDeclStatement	int err = CRYPTO_OK ;	514:4:15154:15173	116148	4	True				
ANR	116180	IdentifierDecl	err = CRYPTO_OK		116148	0					
ANR	116181	IdentifierDeclType	int		116148	0					
ANR	116182	Identifier	err		116148	1					
ANR	116183	AssignmentExpression	err = CRYPTO_OK		116148	2		=			
ANR	116184	Identifier	CRYPTO_OK		116148	0					
ANR	116185	Identifier	CRYPTO_OK		116148	1					
ANR	116186	ExpressionStatement	"brealloc ( & tmp , ciphertext -> len , capacity )"	516:4:15180:15221	116148	5	True				
ANR	116187	CallExpression	"brealloc ( & tmp , ciphertext -> len , capacity )"		116148	0					
ANR	116188	Callee	brealloc		116148	0					
ANR	116189	Identifier	brealloc		116148	0					
ANR	116190	ArgumentList	& tmp		116148	1					
ANR	116191	Argument	& tmp		116148	0					
ANR	116192	UnaryOperationExpression	& tmp		116148	0					
ANR	116193	UnaryOperator	&		116148	0					
ANR	116194	Identifier	tmp		116148	1					
ANR	116195	Argument	ciphertext -> len		116148	1					
ANR	116196	PtrMemberAccess	ciphertext -> len		116148	0					
ANR	116197	Identifier	ciphertext		116148	0					
ANR	116198	Identifier	len		116148	1					
ANR	116199	Argument	capacity		116148	2					
ANR	116200	Identifier	capacity		116148	0					
ANR	116201	IdentifierDeclStatement	buffer_t * plaintext = & tmp ;	517:4:15227:15253	116148	6	True				
ANR	116202	IdentifierDecl	* plaintext = & tmp		116148	0					
ANR	116203	IdentifierDeclType	buffer_t *		116148	0					
ANR	116204	Identifier	plaintext		116148	1					
ANR	116205	AssignmentExpression	* plaintext = & tmp		116148	2		=			
ANR	116206	Identifier	plaintext		116148	0					
ANR	116207	UnaryOperationExpression	& tmp		116148	1					
ANR	116208	UnaryOperator	&		116148	0					
ANR	116209	Identifier	tmp		116148	1					
ANR	116210	ExpressionStatement	plaintext -> len = ciphertext -> len	518:4:15259:15291	116148	7	True				
ANR	116211	AssignmentExpression	plaintext -> len = ciphertext -> len		116148	0		=			
ANR	116212	PtrMemberAccess	plaintext -> len		116148	0					
ANR	116213	Identifier	plaintext		116148	0					
ANR	116214	Identifier	len		116148	1					
ANR	116215	PtrMemberAccess	ciphertext -> len		116148	1					
ANR	116216	Identifier	ciphertext		116148	0					
ANR	116217	Identifier	len		116148	1					
ANR	116218	IfStatement	if ( ! cipher_ctx -> init )		116148	8					
ANR	116219	Condition	! cipher_ctx -> init	520:8:15302:15318	116148	0	True				
ANR	116220	UnaryOperationExpression	! cipher_ctx -> init		116148	0					
ANR	116221	UnaryOperator	!		116148	0					
ANR	116222	PtrMemberAccess	cipher_ctx -> init		116148	1					
ANR	116223	Identifier	cipher_ctx		116148	0					
ANR	116224	Identifier	init		116148	1					
ANR	116225	CompoundStatement		37:8:1185:1221	116148	1					
ANR	116226	IfStatement	if ( cipher_ctx -> chunk == NULL )		116148	0					
ANR	116227	Condition	cipher_ctx -> chunk == NULL	521:12:15335:15359	116148	0	True				
ANR	116228	EqualityExpression	cipher_ctx -> chunk == NULL		116148	0		==			
ANR	116229	PtrMemberAccess	cipher_ctx -> chunk		116148	0					
ANR	116230	Identifier	cipher_ctx		116148	0					
ANR	116231	Identifier	chunk		116148	1					
ANR	116232	Identifier	NULL		116148	1					
ANR	116233	CompoundStatement		16:39:361:361	116148	1					
ANR	116234	ExpressionStatement	cipher_ctx -> chunk = ( buffer_t * ) ss_malloc ( sizeof ( buffer_t ) )	522:12:15376:15435	116148	0	True				
ANR	116235	AssignmentExpression	cipher_ctx -> chunk = ( buffer_t * ) ss_malloc ( sizeof ( buffer_t ) )		116148	0		=			
ANR	116236	PtrMemberAccess	cipher_ctx -> chunk		116148	0					
ANR	116237	Identifier	cipher_ctx		116148	0					
ANR	116238	Identifier	chunk		116148	1					
ANR	116239	CastExpression	( buffer_t * ) ss_malloc ( sizeof ( buffer_t ) )		116148	1					
ANR	116240	CastTarget	buffer_t *		116148	0					
ANR	116241	CallExpression	ss_malloc ( sizeof ( buffer_t ) )		116148	1					
ANR	116242	Callee	ss_malloc		116148	0					
ANR	116243	Identifier	ss_malloc		116148	0					
ANR	116244	ArgumentList	sizeof ( buffer_t )		116148	1					
ANR	116245	Argument	sizeof ( buffer_t )		116148	0					
ANR	116246	SizeofExpression	sizeof ( buffer_t )		116148	0					
ANR	116247	Sizeof	sizeof		116148	0					
ANR	116248	SizeofOperand	buffer_t		116148	1					
ANR	116249	ExpressionStatement	"memset ( cipher_ctx -> chunk , 0 , sizeof ( buffer_t ) )"	523:12:15449:15495	116148	1	True				
ANR	116250	CallExpression	"memset ( cipher_ctx -> chunk , 0 , sizeof ( buffer_t ) )"		116148	0					
ANR	116251	Callee	memset		116148	0					
ANR	116252	Identifier	memset		116148	0					
ANR	116253	ArgumentList	cipher_ctx -> chunk		116148	1					
ANR	116254	Argument	cipher_ctx -> chunk		116148	0					
ANR	116255	PtrMemberAccess	cipher_ctx -> chunk		116148	0					
ANR	116256	Identifier	cipher_ctx		116148	0					
ANR	116257	Identifier	chunk		116148	1					
ANR	116258	Argument	0		116148	1					
ANR	116259	PrimaryExpression	0		116148	0					
ANR	116260	Argument	sizeof ( buffer_t )		116148	2					
ANR	116261	SizeofExpression	sizeof ( buffer_t )		116148	0					
ANR	116262	Sizeof	sizeof		116148	0					
ANR	116263	SizeofOperand	buffer_t		116148	1					
ANR	116264	ExpressionStatement	"balloc ( cipher_ctx -> chunk , cipher -> nonce_len )"	524:12:15509:15553	116148	2	True				
ANR	116265	CallExpression	"balloc ( cipher_ctx -> chunk , cipher -> nonce_len )"		116148	0					
ANR	116266	Callee	balloc		116148	0					
ANR	116267	Identifier	balloc		116148	0					
ANR	116268	ArgumentList	cipher_ctx -> chunk		116148	1					
ANR	116269	Argument	cipher_ctx -> chunk		116148	0					
ANR	116270	PtrMemberAccess	cipher_ctx -> chunk		116148	0					
ANR	116271	Identifier	cipher_ctx		116148	0					
ANR	116272	Identifier	chunk		116148	1					
ANR	116273	Argument	cipher -> nonce_len		116148	1					
ANR	116274	PtrMemberAccess	cipher -> nonce_len		116148	0					
ANR	116275	Identifier	cipher		116148	0					
ANR	116276	Identifier	nonce_len		116148	1					
ANR	116277	IdentifierDeclStatement	"size_t left_len = min ( cipher -> nonce_len - cipher_ctx -> chunk -> len , ciphertext -> len ) ;"	527:8:15574:15686	116148	1	True				
ANR	116278	IdentifierDecl	"left_len = min ( cipher -> nonce_len - cipher_ctx -> chunk -> len , ciphertext -> len )"		116148	0					
ANR	116279	IdentifierDeclType	size_t		116148	0					
ANR	116280	Identifier	left_len		116148	1					
ANR	116281	AssignmentExpression	"left_len = min ( cipher -> nonce_len - cipher_ctx -> chunk -> len , ciphertext -> len )"		116148	2		=			
ANR	116282	Identifier	left_len		116148	0					
ANR	116283	CallExpression	"min ( cipher -> nonce_len - cipher_ctx -> chunk -> len , ciphertext -> len )"		116148	1					
ANR	116284	Callee	min		116148	0					
ANR	116285	Identifier	min		116148	0					
ANR	116286	ArgumentList	cipher -> nonce_len - cipher_ctx -> chunk -> len		116148	1					
ANR	116287	Argument	cipher -> nonce_len - cipher_ctx -> chunk -> len		116148	0					
ANR	116288	AdditiveExpression	cipher -> nonce_len - cipher_ctx -> chunk -> len		116148	0		-			
ANR	116289	PtrMemberAccess	cipher -> nonce_len		116148	0					
ANR	116290	Identifier	cipher		116148	0					
ANR	116291	Identifier	nonce_len		116148	1					
ANR	116292	PtrMemberAccess	cipher_ctx -> chunk -> len		116148	1					
ANR	116293	PtrMemberAccess	cipher_ctx -> chunk		116148	0					
ANR	116294	Identifier	cipher_ctx		116148	0					
ANR	116295	Identifier	chunk		116148	1					
ANR	116296	Identifier	len		116148	1					
ANR	116297	Argument	ciphertext -> len		116148	1					
ANR	116298	PtrMemberAccess	ciphertext -> len		116148	0					
ANR	116299	Identifier	ciphertext		116148	0					
ANR	116300	Identifier	len		116148	1					
ANR	116301	IfStatement	if ( left_len > 0 )		116148	2					
ANR	116302	Condition	left_len > 0	530:12:15701:15712	116148	0	True				
ANR	116303	RelationalExpression	left_len > 0		116148	0		>			
ANR	116304	Identifier	left_len		116148	0					
ANR	116305	PrimaryExpression	0		116148	1					
ANR	116306	CompoundStatement		25:26:714:714	116148	1					
ANR	116307	ExpressionStatement	"memcpy ( cipher_ctx -> chunk -> data + cipher_ctx -> chunk -> len , ciphertext -> data , left_len )"	531:12:15729:15813	116148	0	True				
ANR	116308	CallExpression	"memcpy ( cipher_ctx -> chunk -> data + cipher_ctx -> chunk -> len , ciphertext -> data , left_len )"		116148	0					
ANR	116309	Callee	memcpy		116148	0					
ANR	116310	Identifier	memcpy		116148	0					
ANR	116311	ArgumentList	cipher_ctx -> chunk -> data + cipher_ctx -> chunk -> len		116148	1					
ANR	116312	Argument	cipher_ctx -> chunk -> data + cipher_ctx -> chunk -> len		116148	0					
ANR	116313	AdditiveExpression	cipher_ctx -> chunk -> data + cipher_ctx -> chunk -> len		116148	0		+			
ANR	116314	PtrMemberAccess	cipher_ctx -> chunk -> data		116148	0					
ANR	116315	PtrMemberAccess	cipher_ctx -> chunk		116148	0					
ANR	116316	Identifier	cipher_ctx		116148	0					
ANR	116317	Identifier	chunk		116148	1					
ANR	116318	Identifier	data		116148	1					
ANR	116319	PtrMemberAccess	cipher_ctx -> chunk -> len		116148	1					
ANR	116320	PtrMemberAccess	cipher_ctx -> chunk		116148	0					
ANR	116321	Identifier	cipher_ctx		116148	0					
ANR	116322	Identifier	chunk		116148	1					
ANR	116323	Identifier	len		116148	1					
ANR	116324	Argument	ciphertext -> data		116148	1					
ANR	116325	PtrMemberAccess	ciphertext -> data		116148	0					
ANR	116326	Identifier	ciphertext		116148	0					
ANR	116327	Identifier	data		116148	1					
ANR	116328	Argument	left_len		116148	2					
ANR	116329	Identifier	left_len		116148	0					
ANR	116330	ExpressionStatement	"memmove ( ciphertext -> data , ciphertext -> data + left_len , ciphertext -> len - left_len )"	532:12:15827:15929	116148	1	True				
ANR	116331	CallExpression	"memmove ( ciphertext -> data , ciphertext -> data + left_len , ciphertext -> len - left_len )"		116148	0					
ANR	116332	Callee	memmove		116148	0					
ANR	116333	Identifier	memmove		116148	0					
ANR	116334	ArgumentList	ciphertext -> data		116148	1					
ANR	116335	Argument	ciphertext -> data		116148	0					
ANR	116336	PtrMemberAccess	ciphertext -> data		116148	0					
ANR	116337	Identifier	ciphertext		116148	0					
ANR	116338	Identifier	data		116148	1					
ANR	116339	Argument	ciphertext -> data + left_len		116148	1					
ANR	116340	AdditiveExpression	ciphertext -> data + left_len		116148	0		+			
ANR	116341	PtrMemberAccess	ciphertext -> data		116148	0					
ANR	116342	Identifier	ciphertext		116148	0					
ANR	116343	Identifier	data		116148	1					
ANR	116344	Identifier	left_len		116148	1					
ANR	116345	Argument	ciphertext -> len - left_len		116148	2					
ANR	116346	AdditiveExpression	ciphertext -> len - left_len		116148	0		-			
ANR	116347	PtrMemberAccess	ciphertext -> len		116148	0					
ANR	116348	Identifier	ciphertext		116148	0					
ANR	116349	Identifier	len		116148	1					
ANR	116350	Identifier	left_len		116148	1					
ANR	116351	ExpressionStatement	cipher_ctx -> chunk -> len += left_len	534:12:15943:15977	116148	2	True				
ANR	116352	AssignmentExpression	cipher_ctx -> chunk -> len += left_len		116148	0		+=			
ANR	116353	PtrMemberAccess	cipher_ctx -> chunk -> len		116148	0					
ANR	116354	PtrMemberAccess	cipher_ctx -> chunk		116148	0					
ANR	116355	Identifier	cipher_ctx		116148	0					
ANR	116356	Identifier	chunk		116148	1					
ANR	116357	Identifier	len		116148	1					
ANR	116358	Identifier	left_len		116148	1					
ANR	116359	ExpressionStatement	ciphertext -> len -= left_len	535:12:15991:16025	116148	3	True				
ANR	116360	AssignmentExpression	ciphertext -> len -= left_len		116148	0		-=			
ANR	116361	PtrMemberAccess	ciphertext -> len		116148	0					
ANR	116362	Identifier	ciphertext		116148	0					
ANR	116363	Identifier	len		116148	1					
ANR	116364	Identifier	left_len		116148	1					
ANR	116365	IfStatement	if ( cipher_ctx -> chunk -> len < cipher -> nonce_len )		116148	3					
ANR	116366	Condition	cipher_ctx -> chunk -> len < cipher -> nonce_len	538:12:16050:16091	116148	0	True				
ANR	116367	RelationalExpression	cipher_ctx -> chunk -> len < cipher -> nonce_len		116148	0		<			
ANR	116368	PtrMemberAccess	cipher_ctx -> chunk -> len		116148	0					
ANR	116369	PtrMemberAccess	cipher_ctx -> chunk		116148	0					
ANR	116370	Identifier	cipher_ctx		116148	0					
ANR	116371	Identifier	chunk		116148	1					
ANR	116372	Identifier	len		116148	1					
ANR	116373	PtrMemberAccess	cipher -> nonce_len		116148	1					
ANR	116374	Identifier	cipher		116148	0					
ANR	116375	Identifier	nonce_len		116148	1					
ANR	116376	ReturnStatement	return CRYPTO_NEED_MORE ;	539:12:16106:16129	116148	1	True				
ANR	116377	Identifier	CRYPTO_NEED_MORE		116148	0					
ANR	116378	IdentifierDeclStatement	uint8_t * nonce = cipher_ctx -> nonce ;	541:8:16140:16176	116148	4	True				
ANR	116379	IdentifierDecl	* nonce = cipher_ctx -> nonce		116148	0					
ANR	116380	IdentifierDeclType	uint8_t *		116148	0					
ANR	116381	Identifier	nonce		116148	1					
ANR	116382	AssignmentExpression	* nonce = cipher_ctx -> nonce		116148	2		=			
ANR	116383	Identifier	nonce		116148	0					
ANR	116384	PtrMemberAccess	cipher_ctx -> nonce		116148	1					
ANR	116385	Identifier	cipher_ctx		116148	0					
ANR	116386	Identifier	nonce		116148	1					
ANR	116387	IdentifierDeclStatement	size_t nonce_len = cipher -> nonce_len ;	542:8:16186:16222	116148	5	True				
ANR	116388	IdentifierDecl	nonce_len = cipher -> nonce_len		116148	0					
ANR	116389	IdentifierDeclType	size_t		116148	0					
ANR	116390	Identifier	nonce_len		116148	1					
ANR	116391	AssignmentExpression	nonce_len = cipher -> nonce_len		116148	2		=			
ANR	116392	Identifier	nonce_len		116148	0					
ANR	116393	PtrMemberAccess	cipher -> nonce_len		116148	1					
ANR	116394	Identifier	cipher		116148	0					
ANR	116395	Identifier	nonce_len		116148	1					
ANR	116396	ExpressionStatement	plaintext -> len -= left_len	543:8:16232:16258	116148	6	True				
ANR	116397	AssignmentExpression	plaintext -> len -= left_len		116148	0		-=			
ANR	116398	PtrMemberAccess	plaintext -> len		116148	0					
ANR	116399	Identifier	plaintext		116148	0					
ANR	116400	Identifier	len		116148	1					
ANR	116401	Identifier	left_len		116148	1					
ANR	116402	ExpressionStatement	"memcpy ( nonce , cipher_ctx -> chunk -> data , nonce_len )"	545:8:16269:16318	116148	7	True				
ANR	116403	CallExpression	"memcpy ( nonce , cipher_ctx -> chunk -> data , nonce_len )"		116148	0					
ANR	116404	Callee	memcpy		116148	0					
ANR	116405	Identifier	memcpy		116148	0					
ANR	116406	ArgumentList	nonce		116148	1					
ANR	116407	Argument	nonce		116148	0					
ANR	116408	Identifier	nonce		116148	0					
ANR	116409	Argument	cipher_ctx -> chunk -> data		116148	1					
ANR	116410	PtrMemberAccess	cipher_ctx -> chunk -> data		116148	0					
ANR	116411	PtrMemberAccess	cipher_ctx -> chunk		116148	0					
ANR	116412	Identifier	cipher_ctx		116148	0					
ANR	116413	Identifier	chunk		116148	1					
ANR	116414	Identifier	data		116148	1					
ANR	116415	Argument	nonce_len		116148	2					
ANR	116416	Identifier	nonce_len		116148	0					
ANR	116417	ExpressionStatement	"cipher_ctx_set_nonce ( cipher_ctx , nonce , nonce_len , 0 )"	546:8:16328:16381	116148	8	True				
ANR	116418	CallExpression	"cipher_ctx_set_nonce ( cipher_ctx , nonce , nonce_len , 0 )"		116148	0					
ANR	116419	Callee	cipher_ctx_set_nonce		116148	0					
ANR	116420	Identifier	cipher_ctx_set_nonce		116148	0					
ANR	116421	ArgumentList	cipher_ctx		116148	1					
ANR	116422	Argument	cipher_ctx		116148	0					
ANR	116423	Identifier	cipher_ctx		116148	0					
ANR	116424	Argument	nonce		116148	1					
ANR	116425	Identifier	nonce		116148	0					
ANR	116426	Argument	nonce_len		116148	2					
ANR	116427	Identifier	nonce_len		116148	0					
ANR	116428	Argument	0		116148	3					
ANR	116429	PrimaryExpression	0		116148	0					
ANR	116430	ExpressionStatement	cipher_ctx -> counter = 0	547:8:16391:16414	116148	9	True				
ANR	116431	AssignmentExpression	cipher_ctx -> counter = 0		116148	0		=			
ANR	116432	PtrMemberAccess	cipher_ctx -> counter		116148	0					
ANR	116433	Identifier	cipher_ctx		116148	0					
ANR	116434	Identifier	counter		116148	1					
ANR	116435	PrimaryExpression	0		116148	1					
ANR	116436	ExpressionStatement	cipher_ctx -> init = 1	548:8:16424:16447	116148	10	True				
ANR	116437	AssignmentExpression	cipher_ctx -> init = 1		116148	0		=			
ANR	116438	PtrMemberAccess	cipher_ctx -> init		116148	0					
ANR	116439	Identifier	cipher_ctx		116148	0					
ANR	116440	Identifier	init		116148	1					
ANR	116441	PrimaryExpression	1		116148	1					
ANR	116442	IfStatement	if ( cipher -> method >= RC4_MD5 )		116148	11					
ANR	116443	Condition	cipher -> method >= RC4_MD5	550:12:16462:16486	116148	0	True				
ANR	116444	RelationalExpression	cipher -> method >= RC4_MD5		116148	0		>=			
ANR	116445	PtrMemberAccess	cipher -> method		116148	0					
ANR	116446	Identifier	cipher		116148	0					
ANR	116447	Identifier	method		116148	1					
ANR	116448	Identifier	RC4_MD5		116148	1					
ANR	116449	CompoundStatement		45:39:1488:1488	116148	1					
ANR	116450	IfStatement	"if ( ppbloom_check ( ( void * ) nonce , nonce_len ) == 1 )"		116148	0					
ANR	116451	Condition	"ppbloom_check ( ( void * ) nonce , nonce_len ) == 1"	551:16:16507:16550	116148	0	True				
ANR	116452	EqualityExpression	"ppbloom_check ( ( void * ) nonce , nonce_len ) == 1"		116148	0		==			
ANR	116453	CallExpression	"ppbloom_check ( ( void * ) nonce , nonce_len )"		116148	0					
ANR	116454	Callee	ppbloom_check		116148	0					
ANR	116455	Identifier	ppbloom_check		116148	0					
ANR	116456	ArgumentList	( void * ) nonce		116148	1					
ANR	116457	Argument	( void * ) nonce		116148	0					
ANR	116458	CastExpression	( void * ) nonce		116148	0					
ANR	116459	CastTarget	void *		116148	0					
ANR	116460	Identifier	nonce		116148	1					
ANR	116461	Argument	nonce_len		116148	1					
ANR	116462	Identifier	nonce_len		116148	0					
ANR	116463	PrimaryExpression	1		116148	1					
ANR	116464	CompoundStatement		46:62:1552:1552	116148	1					
ANR	116465	ExpressionStatement	"LOGE ( ""crypto: stream: repeat IV detected"" )"	552:16:16571:16613	116148	0	True				
ANR	116466	CallExpression	"LOGE ( ""crypto: stream: repeat IV detected"" )"		116148	0					
ANR	116467	Callee	LOGE		116148	0					
ANR	116468	Identifier	LOGE		116148	0					
ANR	116469	ArgumentList	"""crypto: stream: repeat IV detected"""		116148	1					
ANR	116470	Argument	"""crypto: stream: repeat IV detected"""		116148	0					
ANR	116471	PrimaryExpression	"""crypto: stream: repeat IV detected"""		116148	0					
ANR	116472	ReturnStatement	return CRYPTO_ERROR ;	553:16:16631:16650	116148	1	True				
ANR	116473	Identifier	CRYPTO_ERROR		116148	0					
ANR	116474	IfStatement	if ( ciphertext -> len <= 0 )		116148	9					
ANR	116475	Condition	ciphertext -> len <= 0	558:8:16691:16710	116148	0	True				
ANR	116476	RelationalExpression	ciphertext -> len <= 0		116148	0		<=			
ANR	116477	PtrMemberAccess	ciphertext -> len		116148	0					
ANR	116478	Identifier	ciphertext		116148	0					
ANR	116479	Identifier	len		116148	1					
ANR	116480	PrimaryExpression	0		116148	1					
ANR	116481	ReturnStatement	return CRYPTO_NEED_MORE ;	559:8:16721:16744	116148	1	True				
ANR	116482	Identifier	CRYPTO_NEED_MORE		116148	0					
ANR	116483	IfStatement	if ( cipher -> method >= SALSA20 )		116148	10					
ANR	116484	Condition	cipher -> method >= SALSA20	561:8:16755:16779	116148	0	True				
ANR	116485	RelationalExpression	cipher -> method >= SALSA20		116148	0		>=			
ANR	116486	PtrMemberAccess	cipher -> method		116148	0					
ANR	116487	Identifier	cipher		116148	0					
ANR	116488	Identifier	method		116148	1					
ANR	116489	Identifier	SALSA20		116148	1					
ANR	116490	CompoundStatement		57:8:1791:1844	116148	1					
ANR	116491	IdentifierDeclStatement	int padding = cipher_ctx -> counter % SODIUM_BLOCK_SIZE ;	562:8:16792:16845	116148	0	True				
ANR	116492	IdentifierDecl	padding = cipher_ctx -> counter % SODIUM_BLOCK_SIZE		116148	0					
ANR	116493	IdentifierDeclType	int		116148	0					
ANR	116494	Identifier	padding		116148	1					
ANR	116495	AssignmentExpression	padding = cipher_ctx -> counter % SODIUM_BLOCK_SIZE		116148	2		=			
ANR	116496	Identifier	padding		116148	0					
ANR	116497	MultiplicativeExpression	cipher_ctx -> counter % SODIUM_BLOCK_SIZE		116148	1		%			
ANR	116498	PtrMemberAccess	cipher_ctx -> counter		116148	0					
ANR	116499	Identifier	cipher_ctx		116148	0					
ANR	116500	Identifier	counter		116148	1					
ANR	116501	Identifier	SODIUM_BLOCK_SIZE		116148	1					
ANR	116502	ExpressionStatement	"brealloc ( plaintext , ( plaintext -> len + padding ) * 2 , capacity )"	563:8:16855:16916	116148	1	True				
ANR	116503	CallExpression	"brealloc ( plaintext , ( plaintext -> len + padding ) * 2 , capacity )"		116148	0					
ANR	116504	Callee	brealloc		116148	0					
ANR	116505	Identifier	brealloc		116148	0					
ANR	116506	ArgumentList	plaintext		116148	1					
ANR	116507	Argument	plaintext		116148	0					
ANR	116508	Identifier	plaintext		116148	0					
ANR	116509	Argument	( plaintext -> len + padding ) * 2		116148	1					
ANR	116510	MultiplicativeExpression	( plaintext -> len + padding ) * 2		116148	0		*			
ANR	116511	AdditiveExpression	plaintext -> len + padding		116148	0		+			
ANR	116512	PtrMemberAccess	plaintext -> len		116148	0					
ANR	116513	Identifier	plaintext		116148	0					
ANR	116514	Identifier	len		116148	1					
ANR	116515	Identifier	padding		116148	1					
ANR	116516	PrimaryExpression	2		116148	1					
ANR	116517	Argument	capacity		116148	2					
ANR	116518	Identifier	capacity		116148	0					
ANR	116519	IfStatement	if ( padding )		116148	2					
ANR	116520	Condition	padding	565:12:16931:16937	116148	0	True				
ANR	116521	Identifier	padding		116148	0					
ANR	116522	CompoundStatement		60:21:1939:1939	116148	1					
ANR	116523	ExpressionStatement	"brealloc ( ciphertext , ciphertext -> len + padding , capacity )"	566:12:16954:17011	116148	0	True				
ANR	116524	CallExpression	"brealloc ( ciphertext , ciphertext -> len + padding , capacity )"		116148	0					
ANR	116525	Callee	brealloc		116148	0					
ANR	116526	Identifier	brealloc		116148	0					
ANR	116527	ArgumentList	ciphertext		116148	1					
ANR	116528	Argument	ciphertext		116148	0					
ANR	116529	Identifier	ciphertext		116148	0					
ANR	116530	Argument	ciphertext -> len + padding		116148	1					
ANR	116531	AdditiveExpression	ciphertext -> len + padding		116148	0		+			
ANR	116532	PtrMemberAccess	ciphertext -> len		116148	0					
ANR	116533	Identifier	ciphertext		116148	0					
ANR	116534	Identifier	len		116148	1					
ANR	116535	Identifier	padding		116148	1					
ANR	116536	Argument	capacity		116148	2					
ANR	116537	Identifier	capacity		116148	0					
ANR	116538	ExpressionStatement	"memmove ( ciphertext -> data + padding , ciphertext -> data , ciphertext -> len )"	567:12:17025:17115	116148	1	True				
ANR	116539	CallExpression	"memmove ( ciphertext -> data + padding , ciphertext -> data , ciphertext -> len )"		116148	0					
ANR	116540	Callee	memmove		116148	0					
ANR	116541	Identifier	memmove		116148	0					
ANR	116542	ArgumentList	ciphertext -> data + padding		116148	1					
ANR	116543	Argument	ciphertext -> data + padding		116148	0					
ANR	116544	AdditiveExpression	ciphertext -> data + padding		116148	0		+			
ANR	116545	PtrMemberAccess	ciphertext -> data		116148	0					
ANR	116546	Identifier	ciphertext		116148	0					
ANR	116547	Identifier	data		116148	1					
ANR	116548	Identifier	padding		116148	1					
ANR	116549	Argument	ciphertext -> data		116148	1					
ANR	116550	PtrMemberAccess	ciphertext -> data		116148	0					
ANR	116551	Identifier	ciphertext		116148	0					
ANR	116552	Identifier	data		116148	1					
ANR	116553	Argument	ciphertext -> len		116148	2					
ANR	116554	PtrMemberAccess	ciphertext -> len		116148	0					
ANR	116555	Identifier	ciphertext		116148	0					
ANR	116556	Identifier	len		116148	1					
ANR	116557	ExpressionStatement	"sodium_memzero ( ciphertext -> data , padding )"	569:12:17129:17170	116148	2	True				
ANR	116558	CallExpression	"sodium_memzero ( ciphertext -> data , padding )"		116148	0					
ANR	116559	Callee	sodium_memzero		116148	0					
ANR	116560	Identifier	sodium_memzero		116148	0					
ANR	116561	ArgumentList	ciphertext -> data		116148	1					
ANR	116562	Argument	ciphertext -> data		116148	0					
ANR	116563	PtrMemberAccess	ciphertext -> data		116148	0					
ANR	116564	Identifier	ciphertext		116148	0					
ANR	116565	Identifier	data		116148	1					
ANR	116566	Argument	padding		116148	1					
ANR	116567	Identifier	padding		116148	0					
ANR	116568	ExpressionStatement	"crypto_stream_xor_ic ( ( uint8_t * ) plaintext -> data , ( const uint8_t * ) ( ciphertext -> data ) , ( uint64_t ) ( ciphertext -> len + padding ) , ( const uint8_t * ) cipher_ctx -> nonce , cipher_ctx -> counter / SODIUM_BLOCK_SIZE , cipher -> key , cipher -> method )"	571:8:17190:17565	116148	3	True				
ANR	116569	CallExpression	"crypto_stream_xor_ic ( ( uint8_t * ) plaintext -> data , ( const uint8_t * ) ( ciphertext -> data ) , ( uint64_t ) ( ciphertext -> len + padding ) , ( const uint8_t * ) cipher_ctx -> nonce , cipher_ctx -> counter / SODIUM_BLOCK_SIZE , cipher -> key , cipher -> method )"		116148	0					
ANR	116570	Callee	crypto_stream_xor_ic		116148	0					
ANR	116571	Identifier	crypto_stream_xor_ic		116148	0					
ANR	116572	ArgumentList	( uint8_t * ) plaintext -> data		116148	1					
ANR	116573	Argument	( uint8_t * ) plaintext -> data		116148	0					
ANR	116574	CastExpression	( uint8_t * ) plaintext -> data		116148	0					
ANR	116575	CastTarget	uint8_t *		116148	0					
ANR	116576	PtrMemberAccess	plaintext -> data		116148	1					
ANR	116577	Identifier	plaintext		116148	0					
ANR	116578	Identifier	data		116148	1					
ANR	116579	Argument	( const uint8_t * ) ( ciphertext -> data )		116148	1					
ANR	116580	CastExpression	( const uint8_t * ) ( ciphertext -> data )		116148	0					
ANR	116581	CastTarget	const uint8_t *		116148	0					
ANR	116582	PtrMemberAccess	ciphertext -> data		116148	1					
ANR	116583	Identifier	ciphertext		116148	0					
ANR	116584	Identifier	data		116148	1					
ANR	116585	Argument	( uint64_t ) ( ciphertext -> len + padding )		116148	2					
ANR	116586	CastExpression	( uint64_t ) ( ciphertext -> len + padding )		116148	0					
ANR	116587	CastTarget	uint64_t		116148	0					
ANR	116588	AdditiveExpression	ciphertext -> len + padding		116148	1		+			
ANR	116589	PtrMemberAccess	ciphertext -> len		116148	0					
ANR	116590	Identifier	ciphertext		116148	0					
ANR	116591	Identifier	len		116148	1					
ANR	116592	Identifier	padding		116148	1					
ANR	116593	Argument	( const uint8_t * ) cipher_ctx -> nonce		116148	3					
ANR	116594	CastExpression	( const uint8_t * ) cipher_ctx -> nonce		116148	0					
ANR	116595	CastTarget	const uint8_t *		116148	0					
ANR	116596	PtrMemberAccess	cipher_ctx -> nonce		116148	1					
ANR	116597	Identifier	cipher_ctx		116148	0					
ANR	116598	Identifier	nonce		116148	1					
ANR	116599	Argument	cipher_ctx -> counter / SODIUM_BLOCK_SIZE		116148	4					
ANR	116600	MultiplicativeExpression	cipher_ctx -> counter / SODIUM_BLOCK_SIZE		116148	0		/			
ANR	116601	PtrMemberAccess	cipher_ctx -> counter		116148	0					
ANR	116602	Identifier	cipher_ctx		116148	0					
ANR	116603	Identifier	counter		116148	1					
ANR	116604	Identifier	SODIUM_BLOCK_SIZE		116148	1					
ANR	116605	Argument	cipher -> key		116148	5					
ANR	116606	PtrMemberAccess	cipher -> key		116148	0					
ANR	116607	Identifier	cipher		116148	0					
ANR	116608	Identifier	key		116148	1					
ANR	116609	Argument	cipher -> method		116148	6					
ANR	116610	PtrMemberAccess	cipher -> method		116148	0					
ANR	116611	Identifier	cipher		116148	0					
ANR	116612	Identifier	method		116148	1					
ANR	116613	ExpressionStatement	cipher_ctx -> counter += ciphertext -> len	577:8:17575:17613	116148	4	True				
ANR	116614	AssignmentExpression	cipher_ctx -> counter += ciphertext -> len		116148	0		+=			
ANR	116615	PtrMemberAccess	cipher_ctx -> counter		116148	0					
ANR	116616	Identifier	cipher_ctx		116148	0					
ANR	116617	Identifier	counter		116148	1					
ANR	116618	PtrMemberAccess	ciphertext -> len		116148	1					
ANR	116619	Identifier	ciphertext		116148	0					
ANR	116620	Identifier	len		116148	1					
ANR	116621	IfStatement	if ( padding )		116148	5					
ANR	116622	Condition	padding	578:12:17627:17633	116148	0	True				
ANR	116623	Identifier	padding		116148	0					
ANR	116624	CompoundStatement		73:21:2635:2635	116148	1					
ANR	116625	ExpressionStatement	"memmove ( plaintext -> data , plaintext -> data + padding , plaintext -> len )"	579:12:17650:17717	116148	0	True				
ANR	116626	CallExpression	"memmove ( plaintext -> data , plaintext -> data + padding , plaintext -> len )"		116148	0					
ANR	116627	Callee	memmove		116148	0					
ANR	116628	Identifier	memmove		116148	0					
ANR	116629	ArgumentList	plaintext -> data		116148	1					
ANR	116630	Argument	plaintext -> data		116148	0					
ANR	116631	PtrMemberAccess	plaintext -> data		116148	0					
ANR	116632	Identifier	plaintext		116148	0					
ANR	116633	Identifier	data		116148	1					
ANR	116634	Argument	plaintext -> data + padding		116148	1					
ANR	116635	AdditiveExpression	plaintext -> data + padding		116148	0		+			
ANR	116636	PtrMemberAccess	plaintext -> data		116148	0					
ANR	116637	Identifier	plaintext		116148	0					
ANR	116638	Identifier	data		116148	1					
ANR	116639	Identifier	padding		116148	1					
ANR	116640	Argument	plaintext -> len		116148	2					
ANR	116641	PtrMemberAccess	plaintext -> len		116148	0					
ANR	116642	Identifier	plaintext		116148	0					
ANR	116643	Identifier	len		116148	1					
ANR	116644	ElseStatement	else		116148	0					
ANR	116645	CompoundStatement		76:11:2739:2739	116148	0					
ANR	116646	ExpressionStatement	"err = cipher_ctx_update ( cipher_ctx , ( uint8_t * ) plaintext -> data , & plaintext -> len , ( const uint8_t * ) ( ciphertext -> data ) , ciphertext -> len )"	582:8:17750:17948	116148	0	True				
ANR	116647	AssignmentExpression	"err = cipher_ctx_update ( cipher_ctx , ( uint8_t * ) plaintext -> data , & plaintext -> len , ( const uint8_t * ) ( ciphertext -> data ) , ciphertext -> len )"		116148	0		=			
ANR	116648	Identifier	err		116148	0					
ANR	116649	CallExpression	"cipher_ctx_update ( cipher_ctx , ( uint8_t * ) plaintext -> data , & plaintext -> len , ( const uint8_t * ) ( ciphertext -> data ) , ciphertext -> len )"		116148	1					
ANR	116650	Callee	cipher_ctx_update		116148	0					
ANR	116651	Identifier	cipher_ctx_update		116148	0					
ANR	116652	ArgumentList	cipher_ctx		116148	1					
ANR	116653	Argument	cipher_ctx		116148	0					
ANR	116654	Identifier	cipher_ctx		116148	0					
ANR	116655	Argument	( uint8_t * ) plaintext -> data		116148	1					
ANR	116656	CastExpression	( uint8_t * ) plaintext -> data		116148	0					
ANR	116657	CastTarget	uint8_t *		116148	0					
ANR	116658	PtrMemberAccess	plaintext -> data		116148	1					
ANR	116659	Identifier	plaintext		116148	0					
ANR	116660	Identifier	data		116148	1					
ANR	116661	Argument	& plaintext -> len		116148	2					
ANR	116662	UnaryOperationExpression	& plaintext -> len		116148	0					
ANR	116663	UnaryOperator	&		116148	0					
ANR	116664	PtrMemberAccess	plaintext -> len		116148	1					
ANR	116665	Identifier	plaintext		116148	0					
ANR	116666	Identifier	len		116148	1					
ANR	116667	Argument	( const uint8_t * ) ( ciphertext -> data )		116148	3					
ANR	116668	CastExpression	( const uint8_t * ) ( ciphertext -> data )		116148	0					
ANR	116669	CastTarget	const uint8_t *		116148	0					
ANR	116670	PtrMemberAccess	ciphertext -> data		116148	1					
ANR	116671	Identifier	ciphertext		116148	0					
ANR	116672	Identifier	data		116148	1					
ANR	116673	Argument	ciphertext -> len		116148	4					
ANR	116674	PtrMemberAccess	ciphertext -> len		116148	0					
ANR	116675	Identifier	ciphertext		116148	0					
ANR	116676	Identifier	len		116148	1					
ANR	116677	IfStatement	if ( err )		116148	11					
ANR	116678	Condition	err	587:8:17965:17967	116148	0	True				
ANR	116679	Identifier	err		116148	0					
ANR	116680	ReturnStatement	return CRYPTO_ERROR ;	588:8:17978:17997	116148	1	True				
ANR	116681	Identifier	CRYPTO_ERROR		116148	0					
ANR	116682	ExpressionStatement	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"	591:4:18020:18066	116148	12	True				
ANR	116683	CallExpression	"dump ( ""PLAIN"" , plaintext -> data , plaintext -> len )"		116148	0					
ANR	116684	Callee	dump		116148	0					
ANR	116685	Identifier	dump		116148	0					
ANR	116686	ArgumentList	"""PLAIN"""		116148	1					
ANR	116687	Argument	"""PLAIN"""		116148	0					
ANR	116688	PrimaryExpression	"""PLAIN"""		116148	0					
ANR	116689	Argument	plaintext -> data		116148	1					
ANR	116690	PtrMemberAccess	plaintext -> data		116148	0					
ANR	116691	Identifier	plaintext		116148	0					
ANR	116692	Identifier	data		116148	1					
ANR	116693	Argument	plaintext -> len		116148	2					
ANR	116694	PtrMemberAccess	plaintext -> len		116148	0					
ANR	116695	Identifier	plaintext		116148	0					
ANR	116696	Identifier	len		116148	1					
ANR	116697	ExpressionStatement	"dump ( ""CIPHER"" , ciphertext -> data , ciphertext -> len )"	592:4:18072:18121	116148	13	True				
ANR	116698	CallExpression	"dump ( ""CIPHER"" , ciphertext -> data , ciphertext -> len )"		116148	0					
ANR	116699	Callee	dump		116148	0					
ANR	116700	Identifier	dump		116148	0					
ANR	116701	ArgumentList	"""CIPHER"""		116148	1					
ANR	116702	Argument	"""CIPHER"""		116148	0					
ANR	116703	PrimaryExpression	"""CIPHER"""		116148	0					
ANR	116704	Argument	ciphertext -> data		116148	1					
ANR	116705	PtrMemberAccess	ciphertext -> data		116148	0					
ANR	116706	Identifier	ciphertext		116148	0					
ANR	116707	Identifier	data		116148	1					
ANR	116708	Argument	ciphertext -> len		116148	2					
ANR	116709	PtrMemberAccess	ciphertext -> len		116148	0					
ANR	116710	Identifier	ciphertext		116148	0					
ANR	116711	Identifier	len		116148	1					
ANR	116712	ExpressionStatement	"brealloc ( ciphertext , plaintext -> len , capacity )"	595:4:18135:18181	116148	14	True				
ANR	116713	CallExpression	"brealloc ( ciphertext , plaintext -> len , capacity )"		116148	0					
ANR	116714	Callee	brealloc		116148	0					
ANR	116715	Identifier	brealloc		116148	0					
ANR	116716	ArgumentList	ciphertext		116148	1					
ANR	116717	Argument	ciphertext		116148	0					
ANR	116718	Identifier	ciphertext		116148	0					
ANR	116719	Argument	plaintext -> len		116148	1					
ANR	116720	PtrMemberAccess	plaintext -> len		116148	0					
ANR	116721	Identifier	plaintext		116148	0					
ANR	116722	Identifier	len		116148	1					
ANR	116723	Argument	capacity		116148	2					
ANR	116724	Identifier	capacity		116148	0					
ANR	116725	ExpressionStatement	"memcpy ( ciphertext -> data , plaintext -> data , plaintext -> len )"	596:4:18187:18244	116148	15	True				
ANR	116726	CallExpression	"memcpy ( ciphertext -> data , plaintext -> data , plaintext -> len )"		116148	0					
ANR	116727	Callee	memcpy		116148	0					
ANR	116728	Identifier	memcpy		116148	0					
ANR	116729	ArgumentList	ciphertext -> data		116148	1					
ANR	116730	Argument	ciphertext -> data		116148	0					
ANR	116731	PtrMemberAccess	ciphertext -> data		116148	0					
ANR	116732	Identifier	ciphertext		116148	0					
ANR	116733	Identifier	data		116148	1					
ANR	116734	Argument	plaintext -> data		116148	1					
ANR	116735	PtrMemberAccess	plaintext -> data		116148	0					
ANR	116736	Identifier	plaintext		116148	0					
ANR	116737	Identifier	data		116148	1					
ANR	116738	Argument	plaintext -> len		116148	2					
ANR	116739	PtrMemberAccess	plaintext -> len		116148	0					
ANR	116740	Identifier	plaintext		116148	0					
ANR	116741	Identifier	len		116148	1					
ANR	116742	ExpressionStatement	ciphertext -> len = plaintext -> len	597:4:18250:18282	116148	16	True				
ANR	116743	AssignmentExpression	ciphertext -> len = plaintext -> len		116148	0		=			
ANR	116744	PtrMemberAccess	ciphertext -> len		116148	0					
ANR	116745	Identifier	ciphertext		116148	0					
ANR	116746	Identifier	len		116148	1					
ANR	116747	PtrMemberAccess	plaintext -> len		116148	1					
ANR	116748	Identifier	plaintext		116148	0					
ANR	116749	Identifier	len		116148	1					
ANR	116750	IfStatement	if ( cipher_ctx -> init == 1 )		116148	17					
ANR	116751	Condition	cipher_ctx -> init == 1	600:8:18320:18340	116148	0	True				
ANR	116752	EqualityExpression	cipher_ctx -> init == 1		116148	0		==			
ANR	116753	PtrMemberAccess	cipher_ctx -> init		116148	0					
ANR	116754	Identifier	cipher_ctx		116148	0					
ANR	116755	Identifier	init		116148	1					
ANR	116756	PrimaryExpression	1		116148	1					
ANR	116757	CompoundStatement		95:31:3342:3342	116148	1					
ANR	116758	IfStatement	if ( cipher -> method >= RC4_MD5 )		116148	0					
ANR	116759	Condition	cipher -> method >= RC4_MD5	601:12:18357:18381	116148	0	True				
ANR	116760	RelationalExpression	cipher -> method >= RC4_MD5		116148	0		>=			
ANR	116761	PtrMemberAccess	cipher -> method		116148	0					
ANR	116762	Identifier	cipher		116148	0					
ANR	116763	Identifier	method		116148	1					
ANR	116764	Identifier	RC4_MD5		116148	1					
ANR	116765	CompoundStatement		96:39:3383:3383	116148	1					
ANR	116766	ExpressionStatement	"ppbloom_add ( ( void * ) cipher_ctx -> nonce , cipher -> nonce_len )"	602:12:18398:18455	116148	0	True				
ANR	116767	CallExpression	"ppbloom_add ( ( void * ) cipher_ctx -> nonce , cipher -> nonce_len )"		116148	0					
ANR	116768	Callee	ppbloom_add		116148	0					
ANR	116769	Identifier	ppbloom_add		116148	0					
ANR	116770	ArgumentList	( void * ) cipher_ctx -> nonce		116148	1					
ANR	116771	Argument	( void * ) cipher_ctx -> nonce		116148	0					
ANR	116772	CastExpression	( void * ) cipher_ctx -> nonce		116148	0					
ANR	116773	CastTarget	void *		116148	0					
ANR	116774	PtrMemberAccess	cipher_ctx -> nonce		116148	1					
ANR	116775	Identifier	cipher_ctx		116148	0					
ANR	116776	Identifier	nonce		116148	1					
ANR	116777	Argument	cipher -> nonce_len		116148	1					
ANR	116778	PtrMemberAccess	cipher -> nonce_len		116148	0					
ANR	116779	Identifier	cipher		116148	0					
ANR	116780	Identifier	nonce_len		116148	1					
ANR	116781	ExpressionStatement	cipher_ctx -> init = 2	603:12:18469:18489	116148	1	True				
ANR	116782	AssignmentExpression	cipher_ctx -> init = 2		116148	0		=			
ANR	116783	PtrMemberAccess	cipher_ctx -> init		116148	0					
ANR	116784	Identifier	cipher_ctx		116148	0					
ANR	116785	Identifier	init		116148	1					
ANR	116786	PrimaryExpression	2		116148	1					
ANR	116787	ReturnStatement	return CRYPTO_OK ;	607:4:18512:18528	116148	18	True				
ANR	116788	Identifier	CRYPTO_OK		116148	0					
ANR	116789	ReturnType	int		116148	1					
ANR	116790	Identifier	stream_decrypt		116148	2					
ANR	116791	ParameterList	"buffer_t * ciphertext , cipher_ctx_t * cipher_ctx , size_t capacity"		116148	3					
ANR	116792	Parameter	buffer_t * ciphertext	505:15:14935:14954	116148	0	True				
ANR	116793	ParameterType	buffer_t *		116148	0					
ANR	116794	Identifier	ciphertext		116148	1					
ANR	116795	Parameter	cipher_ctx_t * cipher_ctx	505:37:14957:14980	116148	1	True				
ANR	116796	ParameterType	cipher_ctx_t *		116148	0					
ANR	116797	Identifier	cipher_ctx		116148	1					
ANR	116798	Parameter	size_t capacity	505:63:14983:14997	116148	2	True				
ANR	116799	ParameterType	size_t		116148	0					
ANR	116800	Identifier	capacity		116148	1					
ANR	116801	CFGEntryNode	ENTRY		116148		True				
ANR	116802	CFGExitNode	EXIT		116148		True				
ANR	116803	Symbol	cipher_ctx -> cipher		116148						
ANR	116804	Symbol	CRYPTO_NEED_MORE		116148						
ANR	116805	Symbol	CRYPTO_ERROR		116148						
ANR	116806	Symbol	cipher_ctx -> chunk -> len		116148						
ANR	116807	Symbol	CRYPTO_OK		116148						
ANR	116808	Symbol	cipher_ctx -> chunk -> data		116148						
ANR	116809	Symbol	cipher_ctx -> init		116148						
ANR	116810	Symbol	cipher_ctx -> nonce		116148						
ANR	116811	Symbol	& plaintext -> len		116148						
ANR	116812	Symbol	capacity		116148						
ANR	116813	Symbol	* * cipher_ctx		116148						
ANR	116814	Symbol	* plaintext		116148						
ANR	116815	Symbol	min		116148						
ANR	116816	Symbol	tmp		116148						
ANR	116817	Symbol	plaintext -> data		116148						
ANR	116818	Symbol	cipher -> key		116148						
ANR	116819	Symbol	SODIUM_BLOCK_SIZE		116148						
ANR	116820	Symbol	cipher		116148						
ANR	116821	Symbol	padding		116148						
ANR	116822	Symbol	ciphertext		116148						
ANR	116823	Symbol	ciphertext -> len		116148						
ANR	116824	Symbol	cipher_ctx		116148						
ANR	116825	Symbol	NULL		116148						
ANR	116826	Symbol	err		116148						
ANR	116827	Symbol	* cipher_ctx		116148						
ANR	116828	Symbol	* cipher		116148						
ANR	116829	Symbol	ppbloom_check		116148						
ANR	116830	Symbol	nonce_len		116148						
ANR	116831	Symbol	plaintext		116148						
ANR	116832	Symbol	* cipher_ctx -> chunk		116148						
ANR	116833	Symbol	cipher_ctx -> chunk		116148						
ANR	116834	Symbol	nonce		116148						
ANR	116835	Symbol	cipher_ctx -> counter		116148						
ANR	116836	Symbol	plaintext -> len		116148						
ANR	116837	Symbol	left_len		116148						
ANR	116838	Symbol	SALSA20		116148						
ANR	116839	Symbol	ciphertext -> data		116148						
ANR	116840	Symbol	cipher -> method		116148						
ANR	116841	Symbol	ss_malloc		116148						
ANR	116842	Symbol	& tmp		116148						
ANR	116843	Symbol	cipher -> nonce_len		116148						
ANR	116844	Symbol	cipher_ctx_update		116148						
ANR	116845	Symbol	* ciphertext		116148						
ANR	116846	Symbol	RC4_MD5		116148						
ANR	116847	Function	stream_ctx_init	610:0:18533:18837							
ANR	116848	FunctionDef	"stream_ctx_init (cipher_t * cipher , cipher_ctx_t * cipher_ctx , int enc)"		116847	0					
ANR	116849	CompoundStatement		612:0:18607:18837	116847	0					
ANR	116850	ExpressionStatement	"sodium_memzero ( cipher_ctx , sizeof ( cipher_ctx_t ) )"	613:4:18613:18661	116847	0	True				
ANR	116851	CallExpression	"sodium_memzero ( cipher_ctx , sizeof ( cipher_ctx_t ) )"		116847	0					
ANR	116852	Callee	sodium_memzero		116847	0					
ANR	116853	Identifier	sodium_memzero		116847	0					
ANR	116854	ArgumentList	cipher_ctx		116847	1					
ANR	116855	Argument	cipher_ctx		116847	0					
ANR	116856	Identifier	cipher_ctx		116847	0					
ANR	116857	Argument	sizeof ( cipher_ctx_t )		116847	1					
ANR	116858	SizeofExpression	sizeof ( cipher_ctx_t )		116847	0					
ANR	116859	Sizeof	sizeof		116847	0					
ANR	116860	SizeofOperand	cipher_ctx_t		116847	1					
ANR	116861	ExpressionStatement	"stream_cipher_ctx_init ( cipher_ctx , cipher -> method , enc )"	614:4:18667:18722	116847	1	True				
ANR	116862	CallExpression	"stream_cipher_ctx_init ( cipher_ctx , cipher -> method , enc )"		116847	0					
ANR	116863	Callee	stream_cipher_ctx_init		116847	0					
ANR	116864	Identifier	stream_cipher_ctx_init		116847	0					
ANR	116865	ArgumentList	cipher_ctx		116847	1					
ANR	116866	Argument	cipher_ctx		116847	0					
ANR	116867	Identifier	cipher_ctx		116847	0					
ANR	116868	Argument	cipher -> method		116847	1					
ANR	116869	PtrMemberAccess	cipher -> method		116847	0					
ANR	116870	Identifier	cipher		116847	0					
ANR	116871	Identifier	method		116847	1					
ANR	116872	Argument	enc		116847	2					
ANR	116873	Identifier	enc		116847	0					
ANR	116874	ExpressionStatement	cipher_ctx -> cipher = cipher	615:4:18728:18755	116847	2	True				
ANR	116875	AssignmentExpression	cipher_ctx -> cipher = cipher		116847	0		=			
ANR	116876	PtrMemberAccess	cipher_ctx -> cipher		116847	0					
ANR	116877	Identifier	cipher_ctx		116847	0					
ANR	116878	Identifier	cipher		116847	1					
ANR	116879	Identifier	cipher		116847	1					
ANR	116880	IfStatement	if ( enc )		116847	3					
ANR	116881	Condition	enc	617:8:18766:18768	116847	0	True				
ANR	116882	Identifier	enc		116847	0					
ANR	116883	CompoundStatement		6:13:163:163	116847	1					
ANR	116884	ExpressionStatement	"rand_bytes ( cipher_ctx -> nonce , cipher -> nonce_len )"	618:8:18781:18829	116847	0	True				
ANR	116885	CallExpression	"rand_bytes ( cipher_ctx -> nonce , cipher -> nonce_len )"		116847	0					
ANR	116886	Callee	rand_bytes		116847	0					
ANR	116887	Identifier	rand_bytes		116847	0					
ANR	116888	ArgumentList	cipher_ctx -> nonce		116847	1					
ANR	116889	Argument	cipher_ctx -> nonce		116847	0					
ANR	116890	PtrMemberAccess	cipher_ctx -> nonce		116847	0					
ANR	116891	Identifier	cipher_ctx		116847	0					
ANR	116892	Identifier	nonce		116847	1					
ANR	116893	Argument	cipher -> nonce_len		116847	1					
ANR	116894	PtrMemberAccess	cipher -> nonce_len		116847	0					
ANR	116895	Identifier	cipher		116847	0					
ANR	116896	Identifier	nonce_len		116847	1					
ANR	116897	ReturnType	void		116847	1					
ANR	116898	Identifier	stream_ctx_init		116847	2					
ANR	116899	ParameterList	"cipher_t * cipher , cipher_ctx_t * cipher_ctx , int enc"		116847	3					
ANR	116900	Parameter	cipher_t * cipher	611:16:18554:18569	116847	0	True				
ANR	116901	ParameterType	cipher_t *		116847	0					
ANR	116902	Identifier	cipher		116847	1					
ANR	116903	Parameter	cipher_ctx_t * cipher_ctx	611:34:18572:18595	116847	1	True				
ANR	116904	ParameterType	cipher_ctx_t *		116847	0					
ANR	116905	Identifier	cipher_ctx		116847	1					
ANR	116906	Parameter	int enc	611:60:18598:18604	116847	2	True				
ANR	116907	ParameterType	int		116847	0					
ANR	116908	Identifier	enc		116847	1					
ANR	116909	CFGEntryNode	ENTRY		116847		True				
ANR	116910	CFGExitNode	EXIT		116847		True				
ANR	116911	Symbol	cipher		116847						
ANR	116912	Symbol	cipher_ctx -> cipher		116847						
ANR	116913	Symbol	cipher_ctx		116847						
ANR	116914	Symbol	* cipher		116847						
ANR	116915	Symbol	* cipher_ctx		116847						
ANR	116916	Symbol	cipher -> method		116847						
ANR	116917	Symbol	cipher_ctx -> nonce		116847						
ANR	116918	Symbol	cipher -> nonce_len		116847						
ANR	116919	Symbol	enc		116847						
ANR	116920	Function	stream_key_init	622:0:18840:20332							
ANR	116921	FunctionDef	"stream_key_init (int method , const char * pass , const char * key)"		116920	0					
ANR	116922	CompoundStatement		624:0:18914:20332	116920	0					
ANR	116923	IfStatement	if ( method <= TABLE || method >= STREAM_CIPHER_NUM )		116920	0					
ANR	116924	Condition	method <= TABLE || method >= STREAM_CIPHER_NUM	625:8:18924:18969	116920	0	True				
ANR	116925	OrExpression	method <= TABLE || method >= STREAM_CIPHER_NUM		116920	0		||			
ANR	116926	RelationalExpression	method <= TABLE		116920	0		<=			
ANR	116927	Identifier	method		116920	0					
ANR	116928	Identifier	TABLE		116920	1					
ANR	116929	RelationalExpression	method >= STREAM_CIPHER_NUM		116920	1		>=			
ANR	116930	Identifier	method		116920	0					
ANR	116931	Identifier	STREAM_CIPHER_NUM		116920	1					
ANR	116932	CompoundStatement		2:56:57:57	116920	1					
ANR	116933	ExpressionStatement	"LOGE ( ""cipher->key_init(): Illegal method"" )"	626:8:18982:19024	116920	0	True				
ANR	116934	CallExpression	"LOGE ( ""cipher->key_init(): Illegal method"" )"		116920	0					
ANR	116935	Callee	LOGE		116920	0					
ANR	116936	Identifier	LOGE		116920	0					
ANR	116937	ArgumentList	"""cipher->key_init(): Illegal method"""		116920	1					
ANR	116938	Argument	"""cipher->key_init(): Illegal method"""		116920	0					
ANR	116939	PrimaryExpression	"""cipher->key_init(): Illegal method"""		116920	0					
ANR	116940	ReturnStatement	return NULL ;	627:8:19034:19045	116920	1	True				
ANR	116941	Identifier	NULL		116920	0					
ANR	116942	IdentifierDeclStatement	cipher_t * cipher = ( cipher_t * ) ss_malloc ( sizeof ( cipher_t ) ) ;	630:4:19058:19116	116920	1	True				
ANR	116943	IdentifierDecl	* cipher = ( cipher_t * ) ss_malloc ( sizeof ( cipher_t ) )		116920	0					
ANR	116944	IdentifierDeclType	cipher_t *		116920	0					
ANR	116945	Identifier	cipher		116920	1					
ANR	116946	AssignmentExpression	* cipher = ( cipher_t * ) ss_malloc ( sizeof ( cipher_t ) )		116920	2		=			
ANR	116947	Identifier	cipher		116920	0					
ANR	116948	CastExpression	( cipher_t * ) ss_malloc ( sizeof ( cipher_t ) )		116920	1					
ANR	116949	CastTarget	cipher_t *		116920	0					
ANR	116950	CallExpression	ss_malloc ( sizeof ( cipher_t ) )		116920	1					
ANR	116951	Callee	ss_malloc		116920	0					
ANR	116952	Identifier	ss_malloc		116920	0					
ANR	116953	ArgumentList	sizeof ( cipher_t )		116920	1					
ANR	116954	Argument	sizeof ( cipher_t )		116920	0					
ANR	116955	SizeofExpression	sizeof ( cipher_t )		116920	0					
ANR	116956	Sizeof	sizeof		116920	0					
ANR	116957	SizeofOperand	cipher_t		116920	1					
ANR	116958	ExpressionStatement	"memset ( cipher , 0 , sizeof ( cipher_t ) )"	631:4:19122:19157	116920	2	True				
ANR	116959	CallExpression	"memset ( cipher , 0 , sizeof ( cipher_t ) )"		116920	0					
ANR	116960	Callee	memset		116920	0					
ANR	116961	Identifier	memset		116920	0					
ANR	116962	ArgumentList	cipher		116920	1					
ANR	116963	Argument	cipher		116920	0					
ANR	116964	Identifier	cipher		116920	0					
ANR	116965	Argument	0		116920	1					
ANR	116966	PrimaryExpression	0		116920	0					
ANR	116967	Argument	sizeof ( cipher_t )		116920	2					
ANR	116968	SizeofExpression	sizeof ( cipher_t )		116920	0					
ANR	116969	Sizeof	sizeof		116920	0					
ANR	116970	SizeofOperand	cipher_t		116920	1					
ANR	116971	IfStatement	if ( method == SALSA20 || method == CHACHA20 || method == CHACHA20IETF )		116920	3					
ANR	116972	Condition	method == SALSA20 || method == CHACHA20 || method == CHACHA20IETF	633:8:19168:19232	116920	0	True				
ANR	116973	OrExpression	method == SALSA20 || method == CHACHA20 || method == CHACHA20IETF		116920	0		||			
ANR	116974	EqualityExpression	method == SALSA20		116920	0		==			
ANR	116975	Identifier	method		116920	0					
ANR	116976	Identifier	SALSA20		116920	1					
ANR	116977	OrExpression	method == CHACHA20 || method == CHACHA20IETF		116920	1		||			
ANR	116978	EqualityExpression	method == CHACHA20		116920	0		==			
ANR	116979	Identifier	method		116920	0					
ANR	116980	Identifier	CHACHA20		116920	1					
ANR	116981	EqualityExpression	method == CHACHA20IETF		116920	1		==			
ANR	116982	Identifier	method		116920	0					
ANR	116983	Identifier	CHACHA20IETF		116920	1					
ANR	116984	CompoundStatement		11:8:330:402	116920	1					
ANR	116985	IdentifierDeclStatement	cipher_kt_t * cipher_info = ( cipher_kt_t * ) ss_malloc ( sizeof ( cipher_kt_t ) ) ;	634:8:19245:19317	116920	0	True				
ANR	116986	IdentifierDecl	* cipher_info = ( cipher_kt_t * ) ss_malloc ( sizeof ( cipher_kt_t ) )		116920	0					
ANR	116987	IdentifierDeclType	cipher_kt_t *		116920	0					
ANR	116988	Identifier	cipher_info		116920	1					
ANR	116989	AssignmentExpression	* cipher_info = ( cipher_kt_t * ) ss_malloc ( sizeof ( cipher_kt_t ) )		116920	2		=			
ANR	116990	Identifier	cipher_info		116920	0					
ANR	116991	CastExpression	( cipher_kt_t * ) ss_malloc ( sizeof ( cipher_kt_t ) )		116920	1					
ANR	116992	CastTarget	cipher_kt_t *		116920	0					
ANR	116993	CallExpression	ss_malloc ( sizeof ( cipher_kt_t ) )		116920	1					
ANR	116994	Callee	ss_malloc		116920	0					
ANR	116995	Identifier	ss_malloc		116920	0					
ANR	116996	ArgumentList	sizeof ( cipher_kt_t )		116920	1					
ANR	116997	Argument	sizeof ( cipher_kt_t )		116920	0					
ANR	116998	SizeofExpression	sizeof ( cipher_kt_t )		116920	0					
ANR	116999	Sizeof	sizeof		116920	0					
ANR	117000	SizeofOperand	cipher_kt_t		116920	1					
ANR	117001	ExpressionStatement	cipher -> info = cipher_info	635:8:19327:19365	116920	1	True				
ANR	117002	AssignmentExpression	cipher -> info = cipher_info		116920	0		=			
ANR	117003	PtrMemberAccess	cipher -> info		116920	0					
ANR	117004	Identifier	cipher		116920	0					
ANR	117005	Identifier	info		116920	1					
ANR	117006	Identifier	cipher_info		116920	1					
ANR	117007	ExpressionStatement	cipher -> info -> base = NULL	636:8:19375:19406	116920	2	True				
ANR	117008	AssignmentExpression	cipher -> info -> base = NULL		116920	0		=			
ANR	117009	PtrMemberAccess	cipher -> info -> base		116920	0					
ANR	117010	PtrMemberAccess	cipher -> info		116920	0					
ANR	117011	Identifier	cipher		116920	0					
ANR	117012	Identifier	info		116920	1					
ANR	117013	Identifier	base		116920	1					
ANR	117014	Identifier	NULL		116920	1					
ANR	117015	ExpressionStatement	cipher -> info -> key_bitlen = supported_stream_ciphers_key_size [ method ] * 8	637:8:19416:19488	116920	3	True				
ANR	117016	AssignmentExpression	cipher -> info -> key_bitlen = supported_stream_ciphers_key_size [ method ] * 8		116920	0		=			
ANR	117017	PtrMemberAccess	cipher -> info -> key_bitlen		116920	0					
ANR	117018	PtrMemberAccess	cipher -> info		116920	0					
ANR	117019	Identifier	cipher		116920	0					
ANR	117020	Identifier	info		116920	1					
ANR	117021	Identifier	key_bitlen		116920	1					
ANR	117022	MultiplicativeExpression	supported_stream_ciphers_key_size [ method ] * 8		116920	1		*			
ANR	117023	ArrayIndexing	supported_stream_ciphers_key_size [ method ]		116920	0					
ANR	117024	Identifier	supported_stream_ciphers_key_size		116920	0					
ANR	117025	Identifier	method		116920	1					
ANR	117026	PrimaryExpression	8		116920	1					
ANR	117027	ExpressionStatement	cipher -> info -> iv_size = supported_stream_ciphers_nonce_size [ method ]	638:8:19498:19568	116920	4	True				
ANR	117028	AssignmentExpression	cipher -> info -> iv_size = supported_stream_ciphers_nonce_size [ method ]		116920	0		=			
ANR	117029	PtrMemberAccess	cipher -> info -> iv_size		116920	0					
ANR	117030	PtrMemberAccess	cipher -> info		116920	0					
ANR	117031	Identifier	cipher		116920	0					
ANR	117032	Identifier	info		116920	1					
ANR	117033	Identifier	iv_size		116920	1					
ANR	117034	ArrayIndexing	supported_stream_ciphers_nonce_size [ method ]		116920	1					
ANR	117035	Identifier	supported_stream_ciphers_nonce_size		116920	0					
ANR	117036	Identifier	method		116920	1					
ANR	117037	ElseStatement	else		116920	0					
ANR	117038	CompoundStatement		16:11:666:666	116920	0					
ANR	117039	ExpressionStatement	cipher -> info = ( cipher_kt_t * ) stream_get_cipher_type ( method )	640:8:19591:19651	116920	0	True				
ANR	117040	AssignmentExpression	cipher -> info = ( cipher_kt_t * ) stream_get_cipher_type ( method )		116920	0		=			
ANR	117041	PtrMemberAccess	cipher -> info		116920	0					
ANR	117042	Identifier	cipher		116920	0					
ANR	117043	Identifier	info		116920	1					
ANR	117044	CastExpression	( cipher_kt_t * ) stream_get_cipher_type ( method )		116920	1					
ANR	117045	CastTarget	cipher_kt_t *		116920	0					
ANR	117046	CallExpression	stream_get_cipher_type ( method )		116920	1					
ANR	117047	Callee	stream_get_cipher_type		116920	0					
ANR	117048	Identifier	stream_get_cipher_type		116920	0					
ANR	117049	ArgumentList	method		116920	1					
ANR	117050	Argument	method		116920	0					
ANR	117051	Identifier	method		116920	0					
ANR	117052	IfStatement	if ( cipher -> info == NULL && cipher -> key_len == 0 )		116920	4					
ANR	117053	Condition	cipher -> info == NULL && cipher -> key_len == 0	643:8:19668:19711	116920	0	True				
ANR	117054	AndExpression	cipher -> info == NULL && cipher -> key_len == 0		116920	0		&&			
ANR	117055	EqualityExpression	cipher -> info == NULL		116920	0		==			
ANR	117056	PtrMemberAccess	cipher -> info		116920	0					
ANR	117057	Identifier	cipher		116920	0					
ANR	117058	Identifier	info		116920	1					
ANR	117059	Identifier	NULL		116920	1					
ANR	117060	EqualityExpression	cipher -> key_len == 0		116920	1		==			
ANR	117061	PtrMemberAccess	cipher -> key_len		116920	0					
ANR	117062	Identifier	cipher		116920	0					
ANR	117063	Identifier	key_len		116920	1					
ANR	117064	PrimaryExpression	0		116920	1					
ANR	117065	CompoundStatement		20:54:799:799	116920	1					
ANR	117066	ExpressionStatement	"LOGE ( ""Cipher %s not found in crypto library"" , supported_stream_ciphers [ method ] )"	644:8:19724:19803	116920	0	True				
ANR	117067	CallExpression	"LOGE ( ""Cipher %s not found in crypto library"" , supported_stream_ciphers [ method ] )"		116920	0					
ANR	117068	Callee	LOGE		116920	0					
ANR	117069	Identifier	LOGE		116920	0					
ANR	117070	ArgumentList	"""Cipher %s not found in crypto library"""		116920	1					
ANR	117071	Argument	"""Cipher %s not found in crypto library"""		116920	0					
ANR	117072	PrimaryExpression	"""Cipher %s not found in crypto library"""		116920	0					
ANR	117073	Argument	supported_stream_ciphers [ method ]		116920	1					
ANR	117074	ArrayIndexing	supported_stream_ciphers [ method ]		116920	0					
ANR	117075	Identifier	supported_stream_ciphers		116920	0					
ANR	117076	Identifier	method		116920	1					
ANR	117077	ExpressionStatement	"FATAL ( ""Cannot initialize cipher"" )"	645:8:19813:19846	116920	1	True				
ANR	117078	CallExpression	"FATAL ( ""Cannot initialize cipher"" )"		116920	0					
ANR	117079	Callee	FATAL		116920	0					
ANR	117080	Identifier	FATAL		116920	0					
ANR	117081	ArgumentList	"""Cannot initialize cipher"""		116920	1					
ANR	117082	Argument	"""Cannot initialize cipher"""		116920	0					
ANR	117083	PrimaryExpression	"""Cannot initialize cipher"""		116920	0					
ANR	117084	IfStatement	if ( key != NULL )		116920	5					
ANR	117085	Condition	key != NULL	648:8:19863:19873	116920	0	True				
ANR	117086	EqualityExpression	key != NULL		116920	0		!=			
ANR	117087	Identifier	key		116920	0					
ANR	117088	Identifier	NULL		116920	1					
ANR	117089	ExpressionStatement	"cipher -> key_len = crypto_parse_key ( key , cipher -> key , cipher_key_size ( cipher ) )"	649:8:19884:19961	116920	1	True				
ANR	117090	AssignmentExpression	"cipher -> key_len = crypto_parse_key ( key , cipher -> key , cipher_key_size ( cipher ) )"		116920	0		=			
ANR	117091	PtrMemberAccess	cipher -> key_len		116920	0					
ANR	117092	Identifier	cipher		116920	0					
ANR	117093	Identifier	key_len		116920	1					
ANR	117094	CallExpression	"crypto_parse_key ( key , cipher -> key , cipher_key_size ( cipher ) )"		116920	1					
ANR	117095	Callee	crypto_parse_key		116920	0					
ANR	117096	Identifier	crypto_parse_key		116920	0					
ANR	117097	ArgumentList	key		116920	1					
ANR	117098	Argument	key		116920	0					
ANR	117099	Identifier	key		116920	0					
ANR	117100	Argument	cipher -> key		116920	1					
ANR	117101	PtrMemberAccess	cipher -> key		116920	0					
ANR	117102	Identifier	cipher		116920	0					
ANR	117103	Identifier	key		116920	1					
ANR	117104	Argument	cipher_key_size ( cipher )		116920	2					
ANR	117105	CallExpression	cipher_key_size ( cipher )		116920	0					
ANR	117106	Callee	cipher_key_size		116920	0					
ANR	117107	Identifier	cipher_key_size		116920	0					
ANR	117108	ArgumentList	cipher		116920	1					
ANR	117109	Argument	cipher		116920	0					
ANR	117110	Identifier	cipher		116920	0					
ANR	117111	ElseStatement	else		116920	0					
ANR	117112	ExpressionStatement	"cipher -> key_len = crypto_derive_key ( pass , cipher -> key , cipher_key_size ( cipher ) )"	651:8:19980:20059	116920	0	True				
ANR	117113	AssignmentExpression	"cipher -> key_len = crypto_derive_key ( pass , cipher -> key , cipher_key_size ( cipher ) )"		116920	0		=			
ANR	117114	PtrMemberAccess	cipher -> key_len		116920	0					
ANR	117115	Identifier	cipher		116920	0					
ANR	117116	Identifier	key_len		116920	1					
ANR	117117	CallExpression	"crypto_derive_key ( pass , cipher -> key , cipher_key_size ( cipher ) )"		116920	1					
ANR	117118	Callee	crypto_derive_key		116920	0					
ANR	117119	Identifier	crypto_derive_key		116920	0					
ANR	117120	ArgumentList	pass		116920	1					
ANR	117121	Argument	pass		116920	0					
ANR	117122	Identifier	pass		116920	0					
ANR	117123	Argument	cipher -> key		116920	1					
ANR	117124	PtrMemberAccess	cipher -> key		116920	0					
ANR	117125	Identifier	cipher		116920	0					
ANR	117126	Identifier	key		116920	1					
ANR	117127	Argument	cipher_key_size ( cipher )		116920	2					
ANR	117128	CallExpression	cipher_key_size ( cipher )		116920	0					
ANR	117129	Callee	cipher_key_size		116920	0					
ANR	117130	Identifier	cipher_key_size		116920	0					
ANR	117131	ArgumentList	cipher		116920	1					
ANR	117132	Argument	cipher		116920	0					
ANR	117133	Identifier	cipher		116920	0					
ANR	117134	IfStatement	if ( cipher -> key_len == 0 )		116920	6					
ANR	117135	Condition	cipher -> key_len == 0	653:8:20070:20089	116920	0	True				
ANR	117136	EqualityExpression	cipher -> key_len == 0		116920	0		==			
ANR	117137	PtrMemberAccess	cipher -> key_len		116920	0					
ANR	117138	Identifier	cipher		116920	0					
ANR	117139	Identifier	key_len		116920	1					
ANR	117140	PrimaryExpression	0		116920	1					
ANR	117141	CompoundStatement		30:30:1177:1177	116920	1					
ANR	117142	ExpressionStatement	"FATAL ( ""Cannot generate key and NONCE"" )"	654:8:20102:20140	116920	0	True				
ANR	117143	CallExpression	"FATAL ( ""Cannot generate key and NONCE"" )"		116920	0					
ANR	117144	Callee	FATAL		116920	0					
ANR	117145	Identifier	FATAL		116920	0					
ANR	117146	ArgumentList	"""Cannot generate key and NONCE"""		116920	1					
ANR	117147	Argument	"""Cannot generate key and NONCE"""		116920	0					
ANR	117148	PrimaryExpression	"""Cannot generate key and NONCE"""		116920	0					
ANR	117149	IfStatement	if ( method == RC4_MD5 )		116920	7					
ANR	117150	Condition	method == RC4_MD5	656:8:20156:20172	116920	0	True				
ANR	117151	EqualityExpression	method == RC4_MD5		116920	0		==			
ANR	117152	Identifier	method		116920	0					
ANR	117153	Identifier	RC4_MD5		116920	1					
ANR	117154	CompoundStatement		33:27:1260:1260	116920	1					
ANR	117155	ExpressionStatement	cipher -> nonce_len = 16	657:8:20185:20207	116920	0	True				
ANR	117156	AssignmentExpression	cipher -> nonce_len = 16		116920	0		=			
ANR	117157	PtrMemberAccess	cipher -> nonce_len		116920	0					
ANR	117158	Identifier	cipher		116920	0					
ANR	117159	Identifier	nonce_len		116920	1					
ANR	117160	PrimaryExpression	16		116920	1					
ANR	117161	ElseStatement	else		116920	0					
ANR	117162	CompoundStatement		35:11:1305:1305	116920	0					
ANR	117163	ExpressionStatement	cipher -> nonce_len = cipher_nonce_size ( cipher )	659:8:20230:20275	116920	0	True				
ANR	117164	AssignmentExpression	cipher -> nonce_len = cipher_nonce_size ( cipher )		116920	0		=			
ANR	117165	PtrMemberAccess	cipher -> nonce_len		116920	0					
ANR	117166	Identifier	cipher		116920	0					
ANR	117167	Identifier	nonce_len		116920	1					
ANR	117168	CallExpression	cipher_nonce_size ( cipher )		116920	1					
ANR	117169	Callee	cipher_nonce_size		116920	0					
ANR	117170	Identifier	cipher_nonce_size		116920	0					
ANR	117171	ArgumentList	cipher		116920	1					
ANR	117172	Argument	cipher		116920	0					
ANR	117173	Identifier	cipher		116920	0					
ANR	117174	ExpressionStatement	cipher -> method = method	661:4:20287:20310	116920	8	True				
ANR	117175	AssignmentExpression	cipher -> method = method		116920	0		=			
ANR	117176	PtrMemberAccess	cipher -> method		116920	0					
ANR	117177	Identifier	cipher		116920	0					
ANR	117178	Identifier	method		116920	1					
ANR	117179	Identifier	method		116920	1					
ANR	117180	ReturnStatement	return cipher ;	663:4:20317:20330	116920	9	True				
ANR	117181	Identifier	cipher		116920	0					
ANR	117182	ReturnType	cipher_t *		116920	1					
ANR	117183	Identifier	stream_key_init		116920	2					
ANR	117184	ParameterList	"int method , const char * pass , const char * key"		116920	3					
ANR	117185	Parameter	int method	623:16:18867:18876	116920	0	True				
ANR	117186	ParameterType	int		116920	0					
ANR	117187	Identifier	method		116920	1					
ANR	117188	Parameter	const char * pass	623:28:18879:18894	116920	1	True				
ANR	117189	ParameterType	const char *		116920	0					
ANR	117190	Identifier	pass		116920	1					
ANR	117191	Parameter	const char * key	623:46:18897:18911	116920	2	True				
ANR	117192	ParameterType	const char *		116920	0					
ANR	117193	Identifier	key		116920	1					
ANR	117194	CFGEntryNode	ENTRY		116920		True				
ANR	117195	CFGExitNode	EXIT		116920		True				
ANR	117196	Symbol	stream_get_cipher_type		116920						
ANR	117197	Symbol	* * cipher		116920						
ANR	117198	Symbol	STREAM_CIPHER_NUM		116920						
ANR	117199	Symbol	* supported_stream_ciphers		116920						
ANR	117200	Symbol	CHACHA20IETF		116920						
ANR	117201	Symbol	cipher -> info -> key_bitlen		116920						
ANR	117202	Symbol	* cipher -> info		116920						
ANR	117203	Symbol	TABLE		116920						
ANR	117204	Symbol	cipher -> info -> iv_size		116920						
ANR	117205	Symbol	supported_stream_ciphers_nonce_size		116920						
ANR	117206	Symbol	CHACHA20		116920						
ANR	117207	Symbol	cipher_nonce_size		116920						
ANR	117208	Symbol	cipher -> info -> base		116920						
ANR	117209	Symbol	* supported_stream_ciphers_nonce_size		116920						
ANR	117210	Symbol	cipher_key_size		116920						
ANR	117211	Symbol	cipher -> key		116920						
ANR	117212	Symbol	cipher -> info		116920						
ANR	117213	Symbol	key		116920						
ANR	117214	Symbol	cipher		116920						
ANR	117215	Symbol	supported_stream_ciphers_key_size		116920						
ANR	117216	Symbol	NULL		116920						
ANR	117217	Symbol	method		116920						
ANR	117218	Symbol	crypto_parse_key		116920						
ANR	117219	Symbol	pass		116920						
ANR	117220	Symbol	* cipher		116920						
ANR	117221	Symbol	crypto_derive_key		116920						
ANR	117222	Symbol	cipher_info		116920						
ANR	117223	Symbol	* method		116920						
ANR	117224	Symbol	SALSA20		116920						
ANR	117225	Symbol	supported_stream_ciphers		116920						
ANR	117226	Symbol	cipher -> key_len		116920						
ANR	117227	Symbol	cipher -> method		116920						
ANR	117228	Symbol	ss_malloc		116920						
ANR	117229	Symbol	cipher -> nonce_len		116920						
ANR	117230	Symbol	* supported_stream_ciphers_key_size		116920						
ANR	117231	Symbol	RC4_MD5		116920						
ANR	117232	Function	stream_init	666:0:20335:20898							
ANR	117233	FunctionDef	"stream_init (const char * pass , const char * key , const char * method)"		117232	0					
ANR	117234	CompoundStatement		668:0:20413:20898	117232	0					
ANR	117235	IdentifierDeclStatement	int m = TABLE ;	669:4:20419:20432	117232	0	True				
ANR	117236	IdentifierDecl	m = TABLE		117232	0					
ANR	117237	IdentifierDeclType	int		117232	0					
ANR	117238	Identifier	m		117232	1					
ANR	117239	AssignmentExpression	m = TABLE		117232	2		=			
ANR	117240	Identifier	TABLE		117232	0					
ANR	117241	Identifier	TABLE		117232	1					
ANR	117242	IfStatement	if ( method != NULL )		117232	1					
ANR	117243	Condition	method != NULL	670:8:20442:20455	117232	0	True				
ANR	117244	EqualityExpression	method != NULL		117232	0		!=			
ANR	117245	Identifier	method		117232	0					
ANR	117246	Identifier	NULL		117232	1					
ANR	117247	CompoundStatement		3:24:44:44	117232	1					
ANR	117248	ForStatement	for ( m = TABLE ; m < STREAM_CIPHER_NUM ; m ++ )		117232	0					
ANR	117249	ForInit	m = TABLE ;	671:13:20473:20482	117232	0	True				
ANR	117250	AssignmentExpression	m = TABLE		117232	0		=			
ANR	117251	Identifier	m		117232	0					
ANR	117252	Identifier	TABLE		117232	1					
ANR	117253	Condition	m < STREAM_CIPHER_NUM	671:24:20484:20504	117232	1	True				
ANR	117254	RelationalExpression	m < STREAM_CIPHER_NUM		117232	0		<			
ANR	117255	Identifier	m		117232	0					
ANR	117256	Identifier	STREAM_CIPHER_NUM		117232	1					
ANR	117257	PostIncDecOperationExpression	m ++	671:47:20507:20509	117232	2	True				
ANR	117258	Identifier	m		117232	0					
ANR	117259	IncDec	++		117232	1					
ANR	117260	IfStatement	"if ( strcmp ( method , supported_stream_ciphers [ m ] ) == 0 )"		117232	3					
ANR	117261	Condition	"strcmp ( method , supported_stream_ciphers [ m ] ) == 0"	672:16:20528:20575	117232	0	True				
ANR	117262	EqualityExpression	"strcmp ( method , supported_stream_ciphers [ m ] ) == 0"		117232	0		==			
ANR	117263	CallExpression	"strcmp ( method , supported_stream_ciphers [ m ] )"		117232	0					
ANR	117264	Callee	strcmp		117232	0					
ANR	117265	Identifier	strcmp		117232	0					
ANR	117266	ArgumentList	method		117232	1					
ANR	117267	Argument	method		117232	0					
ANR	117268	Identifier	method		117232	0					
ANR	117269	Argument	supported_stream_ciphers [ m ]		117232	1					
ANR	117270	ArrayIndexing	supported_stream_ciphers [ m ]		117232	0					
ANR	117271	Identifier	supported_stream_ciphers		117232	0					
ANR	117272	Identifier	m		117232	1					
ANR	117273	PrimaryExpression	0		117232	1					
ANR	117274	CompoundStatement		5:66:164:164	117232	1					
ANR	117275	BreakStatement	break ;	673:16:20596:20601	117232	0	True				
ANR	117276	IfStatement	if ( m >= STREAM_CIPHER_NUM )		117232	1					
ANR	117277	Condition	m >= STREAM_CIPHER_NUM	675:12:20629:20650	117232	0	True				
ANR	117278	RelationalExpression	m >= STREAM_CIPHER_NUM		117232	0		>=			
ANR	117279	Identifier	m		117232	0					
ANR	117280	Identifier	STREAM_CIPHER_NUM		117232	1					
ANR	117281	CompoundStatement		8:36:239:239	117232	1					
ANR	117282	ExpressionStatement	"LOGE ( ""Invalid cipher name: %s, use rc4-md5 instead"" , method )"	676:12:20667:20727	117232	0	True				
ANR	117283	CallExpression	"LOGE ( ""Invalid cipher name: %s, use rc4-md5 instead"" , method )"		117232	0					
ANR	117284	Callee	LOGE		117232	0					
ANR	117285	Identifier	LOGE		117232	0					
ANR	117286	ArgumentList	"""Invalid cipher name: %s, use rc4-md5 instead"""		117232	1					
ANR	117287	Argument	"""Invalid cipher name: %s, use rc4-md5 instead"""		117232	0					
ANR	117288	PrimaryExpression	"""Invalid cipher name: %s, use rc4-md5 instead"""		117232	0					
ANR	117289	Argument	method		117232	1					
ANR	117290	Identifier	method		117232	0					
ANR	117291	ExpressionStatement	m = RC4_MD5	677:12:20741:20752	117232	1	True				
ANR	117292	AssignmentExpression	m = RC4_MD5		117232	0		=			
ANR	117293	Identifier	m		117232	0					
ANR	117294	Identifier	RC4_MD5		117232	1					
ANR	117295	IfStatement	if ( m == TABLE )		117232	2					
ANR	117296	Condition	m == TABLE	680:8:20778:20787	117232	0	True				
ANR	117297	EqualityExpression	m == TABLE		117232	0		==			
ANR	117298	Identifier	m		117232	0					
ANR	117299	Identifier	TABLE		117232	1					
ANR	117300	CompoundStatement		13:20:376:376	117232	1					
ANR	117301	ExpressionStatement	"LOGE ( ""Table is deprecated"" )"	681:8:20800:20827	117232	0	True				
ANR	117302	CallExpression	"LOGE ( ""Table is deprecated"" )"		117232	0					
ANR	117303	Callee	LOGE		117232	0					
ANR	117304	Identifier	LOGE		117232	0					
ANR	117305	ArgumentList	"""Table is deprecated"""		117232	1					
ANR	117306	Argument	"""Table is deprecated"""		117232	0					
ANR	117307	PrimaryExpression	"""Table is deprecated"""		117232	0					
ANR	117308	ReturnStatement	return NULL ;	682:8:20837:20848	117232	1	True				
ANR	117309	Identifier	NULL		117232	0					
ANR	117310	ReturnStatement	"return stream_key_init ( m , pass , key ) ;"	684:4:20860:20896	117232	3	True				
ANR	117311	CallExpression	"stream_key_init ( m , pass , key )"		117232	0					
ANR	117312	Callee	stream_key_init		117232	0					
ANR	117313	Identifier	stream_key_init		117232	0					
ANR	117314	ArgumentList	m		117232	1					
ANR	117315	Argument	m		117232	0					
ANR	117316	Identifier	m		117232	0					
ANR	117317	Argument	pass		117232	1					
ANR	117318	Identifier	pass		117232	0					
ANR	117319	Argument	key		117232	2					
ANR	117320	Identifier	key		117232	0					
ANR	117321	ReturnType	cipher_t *		117232	1					
ANR	117322	Identifier	stream_init		117232	2					
ANR	117323	ParameterList	"const char * pass , const char * key , const char * method"		117232	3					
ANR	117324	Parameter	const char * pass	667:12:20358:20373	117232	0	True				
ANR	117325	ParameterType	const char *		117232	0					
ANR	117326	Identifier	pass		117232	1					
ANR	117327	Parameter	const char * key	667:30:20376:20390	117232	1	True				
ANR	117328	ParameterType	const char *		117232	0					
ANR	117329	Identifier	key		117232	1					
ANR	117330	Parameter	const char * method	667:47:20393:20410	117232	2	True				
ANR	117331	ParameterType	const char *		117232	0					
ANR	117332	Identifier	method		117232	1					
ANR	117333	CFGEntryNode	ENTRY		117232		True				
ANR	117334	CFGExitNode	EXIT		117232		True				
ANR	117335	Symbol	strcmp		117232						
ANR	117336	Symbol	NULL		117232						
ANR	117337	Symbol	method		117232						
ANR	117338	Symbol	pass		117232						
ANR	117339	Symbol	stream_key_init		117232						
ANR	117340	Symbol	STREAM_CIPHER_NUM		117232						
ANR	117341	Symbol	* supported_stream_ciphers		117232						
ANR	117342	Symbol	m		117232						
ANR	117343	Symbol	TABLE		117232						
ANR	117344	Symbol	supported_stream_ciphers		117232						
ANR	117345	Symbol	* m		117232						
ANR	117346	Symbol	key		117232						
ANR	117347	Symbol	RC4_MD5		117232						
