command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	83805	File	data/converged/CVE-2017-15924_shadowsocks-libev/src_manager.c								
ANR	83806	DeclStmt									
ANR	83807	Decl							int	int	verbose
ANR	83808	DeclStmt									
ANR	83809	Decl							char	char *	executable
ANR	83810	DeclStmt									
ANR	83811	Decl							char	char *	working_dir
ANR	83812	DeclStmt									
ANR	83813	Decl							int	int	working_dir_size
ANR	83814	DeclStmt									
ANR	83815	Decl							struct cork_hash_table	struct cork_hash_table *	server_table
ANR	83816	Function	setnonblocking	75:0:1835:2011							
ANR	83817	FunctionDef	setnonblocking (int fd)		83816	0					
ANR	83818	CompoundStatement		77:0:1869:2011	83816	0					
ANR	83819	IdentifierDeclStatement	int flags ;	78:4:1875:1884	83816	0	True				
ANR	83820	IdentifierDecl	flags		83816	0					
ANR	83821	IdentifierDeclType	int		83816	0					
ANR	83822	Identifier	flags		83816	1					
ANR	83823	IfStatement	"if ( - 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) ) )"		83816	1					
ANR	83824	Condition	"- 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) )"	79:8:1894:1930	83816	0	True				
ANR	83825	EqualityExpression	"- 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) )"		83816	0		==			
ANR	83826	UnaryOperationExpression	- 1		83816	0					
ANR	83827	UnaryOperator	-		83816	0					
ANR	83828	PrimaryExpression	1		83816	1					
ANR	83829	AssignmentExpression	"flags = fcntl ( fd , F_GETFL , 0 )"		83816	1		=			
ANR	83830	Identifier	flags		83816	0					
ANR	83831	CallExpression	"fcntl ( fd , F_GETFL , 0 )"		83816	1					
ANR	83832	Callee	fcntl		83816	0					
ANR	83833	Identifier	fcntl		83816	0					
ANR	83834	ArgumentList	fd		83816	1					
ANR	83835	Argument	fd		83816	0					
ANR	83836	Identifier	fd		83816	0					
ANR	83837	Argument	F_GETFL		83816	1					
ANR	83838	Identifier	F_GETFL		83816	0					
ANR	83839	Argument	0		83816	2					
ANR	83840	PrimaryExpression	0		83816	0					
ANR	83841	CompoundStatement		3:47:63:63	83816	1					
ANR	83842	ExpressionStatement	flags = 0	80:8:1943:1952	83816	0	True				
ANR	83843	AssignmentExpression	flags = 0		83816	0		=			
ANR	83844	Identifier	flags		83816	0					
ANR	83845	PrimaryExpression	0		83816	1					
ANR	83846	ReturnStatement	"return fcntl ( fd , F_SETFL , flags | O_NONBLOCK ) ;"	82:4:1964:2009	83816	2	True				
ANR	83847	CallExpression	"fcntl ( fd , F_SETFL , flags | O_NONBLOCK )"		83816	0					
ANR	83848	Callee	fcntl		83816	0					
ANR	83849	Identifier	fcntl		83816	0					
ANR	83850	ArgumentList	fd		83816	1					
ANR	83851	Argument	fd		83816	0					
ANR	83852	Identifier	fd		83816	0					
ANR	83853	Argument	F_SETFL		83816	1					
ANR	83854	Identifier	F_SETFL		83816	0					
ANR	83855	Argument	flags | O_NONBLOCK		83816	2					
ANR	83856	InclusiveOrExpression	flags | O_NONBLOCK		83816	0		|			
ANR	83857	Identifier	flags		83816	0					
ANR	83858	Identifier	O_NONBLOCK		83816	1					
ANR	83859	ReturnType	static int		83816	1					
ANR	83860	Identifier	setnonblocking		83816	2					
ANR	83861	ParameterList	int fd		83816	3					
ANR	83862	Parameter	int fd	76:15:1861:1866	83816	0	True				
ANR	83863	ParameterType	int		83816	0					
ANR	83864	Identifier	fd		83816	1					
ANR	83865	CFGEntryNode	ENTRY		83816		True				
ANR	83866	CFGExitNode	EXIT		83816		True				
ANR	83867	Symbol	fcntl		83816						
ANR	83868	Symbol	O_NONBLOCK		83816						
ANR	83869	Symbol	flags		83816						
ANR	83870	Symbol	F_GETFL		83816						
ANR	83871	Symbol	F_SETFL		83816						
ANR	83872	Symbol	fd		83816						
ANR	83873	Function	destroy_server	85:0:2014:2328							
ANR	83874	FunctionDef	destroy_server (struct server * server)		83873	0					
ANR	83875	CompoundStatement		86:38:2064:2328	83873	0					
ANR	83876	IfStatement	if ( server -> method )		83873	0					
ANR	83877	Condition	server -> method	88:8:2134:2147	83873	0	True				
ANR	83878	PtrMemberAccess	server -> method		83873	0					
ANR	83879	Identifier	server		83873	0					
ANR	83880	Identifier	method		83873	1					
ANR	83881	ExpressionStatement	ss_free ( server -> method )	88:24:2150:2173	83873	1	True				
ANR	83882	CallExpression	ss_free ( server -> method )		83873	0					
ANR	83883	Callee	ss_free		83873	0					
ANR	83884	Identifier	ss_free		83873	0					
ANR	83885	ArgumentList	server -> method		83873	1					
ANR	83886	Argument	server -> method		83873	0					
ANR	83887	PtrMemberAccess	server -> method		83873	0					
ANR	83888	Identifier	server		83873	0					
ANR	83889	Identifier	method		83873	1					
ANR	83890	IfStatement	if ( server -> plugin )		83873	1					
ANR	83891	Condition	server -> plugin	89:8:2183:2196	83873	0	True				
ANR	83892	PtrMemberAccess	server -> plugin		83873	0					
ANR	83893	Identifier	server		83873	0					
ANR	83894	Identifier	plugin		83873	1					
ANR	83895	ExpressionStatement	ss_free ( server -> plugin )	89:24:2199:2222	83873	1	True				
ANR	83896	CallExpression	ss_free ( server -> plugin )		83873	0					
ANR	83897	Callee	ss_free		83873	0					
ANR	83898	Identifier	ss_free		83873	0					
ANR	83899	ArgumentList	server -> plugin		83873	1					
ANR	83900	Argument	server -> plugin		83873	0					
ANR	83901	PtrMemberAccess	server -> plugin		83873	0					
ANR	83902	Identifier	server		83873	0					
ANR	83903	Identifier	plugin		83873	1					
ANR	83904	IfStatement	if ( server -> plugin_opts )		83873	2					
ANR	83905	Condition	server -> plugin_opts	90:8:2232:2250	83873	0	True				
ANR	83906	PtrMemberAccess	server -> plugin_opts		83873	0					
ANR	83907	Identifier	server		83873	0					
ANR	83908	Identifier	plugin_opts		83873	1					
ANR	83909	ExpressionStatement	ss_free ( server -> plugin_opts )	90:29:2253:2281	83873	1	True				
ANR	83910	CallExpression	ss_free ( server -> plugin_opts )		83873	0					
ANR	83911	Callee	ss_free		83873	0					
ANR	83912	Identifier	ss_free		83873	0					
ANR	83913	ArgumentList	server -> plugin_opts		83873	1					
ANR	83914	Argument	server -> plugin_opts		83873	0					
ANR	83915	PtrMemberAccess	server -> plugin_opts		83873	0					
ANR	83916	Identifier	server		83873	0					
ANR	83917	Identifier	plugin_opts		83873	1					
ANR	83918	IfStatement	if ( server -> mode )		83873	3					
ANR	83919	Condition	server -> mode	91:8:2291:2302	83873	0	True				
ANR	83920	PtrMemberAccess	server -> mode		83873	0					
ANR	83921	Identifier	server		83873	0					
ANR	83922	Identifier	mode		83873	1					
ANR	83923	ExpressionStatement	ss_free ( server -> mode )	91:22:2305:2326	83873	1	True				
ANR	83924	CallExpression	ss_free ( server -> mode )		83873	0					
ANR	83925	Callee	ss_free		83873	0					
ANR	83926	Identifier	ss_free		83873	0					
ANR	83927	ArgumentList	server -> mode		83873	1					
ANR	83928	Argument	server -> mode		83873	0					
ANR	83929	PtrMemberAccess	server -> mode		83873	0					
ANR	83930	Identifier	server		83873	0					
ANR	83931	Identifier	mode		83873	1					
ANR	83932	ReturnType	static void		83873	1					
ANR	83933	Identifier	destroy_server		83873	2					
ANR	83934	ParameterList	struct server * server		83873	3					
ANR	83935	Parameter	struct server * server	86:15:2041:2061	83873	0	True				
ANR	83936	ParameterType	struct server *		83873	0					
ANR	83937	Identifier	server		83873	1					
ANR	83938	CFGEntryNode	ENTRY		83873		True				
ANR	83939	CFGExitNode	EXIT		83873		True				
ANR	83940	Symbol	server		83873						
ANR	83941	Symbol	* server		83873						
ANR	83942	Symbol	server -> plugin_opts		83873						
ANR	83943	Symbol	server -> mode		83873						
ANR	83944	Symbol	server -> method		83873						
ANR	83945	Symbol	server -> plugin		83873						
ANR	83946	Function	build_config	94:0:2331:3379							
ANR	83947	FunctionDef	"build_config (char * prefix , struct server * server)"		83946	0					
ANR	83948	CompoundStatement		96:0:2393:3379	83946	0					
ANR	83949	IdentifierDeclStatement	char * path = NULL ;	97:4:2399:2419	83946	0	True				
ANR	83950	IdentifierDecl	* path = NULL		83946	0					
ANR	83951	IdentifierDeclType	char *		83946	0					
ANR	83952	Identifier	path		83946	1					
ANR	83953	AssignmentExpression	* path = NULL		83946	2		=			
ANR	83954	Identifier	NULL		83946	0					
ANR	83955	Identifier	NULL		83946	1					
ANR	83956	IdentifierDeclStatement	int path_size = strlen ( prefix ) + strlen ( server -> port ) + 20 ;	98:4:2425:2483	83946	1	True				
ANR	83957	IdentifierDecl	path_size = strlen ( prefix ) + strlen ( server -> port ) + 20		83946	0					
ANR	83958	IdentifierDeclType	int		83946	0					
ANR	83959	Identifier	path_size		83946	1					
ANR	83960	AssignmentExpression	path_size = strlen ( prefix ) + strlen ( server -> port ) + 20		83946	2		=			
ANR	83961	Identifier	path_size		83946	0					
ANR	83962	AdditiveExpression	strlen ( prefix ) + strlen ( server -> port ) + 20		83946	1		+			
ANR	83963	CallExpression	strlen ( prefix )		83946	0					
ANR	83964	Callee	strlen		83946	0					
ANR	83965	Identifier	strlen		83946	0					
ANR	83966	ArgumentList	prefix		83946	1					
ANR	83967	Argument	prefix		83946	0					
ANR	83968	Identifier	prefix		83946	0					
ANR	83969	AdditiveExpression	strlen ( server -> port ) + 20		83946	1		+			
ANR	83970	CallExpression	strlen ( server -> port )		83946	0					
ANR	83971	Callee	strlen		83946	0					
ANR	83972	Identifier	strlen		83946	0					
ANR	83973	ArgumentList	server -> port		83946	1					
ANR	83974	Argument	server -> port		83946	0					
ANR	83975	PtrMemberAccess	server -> port		83946	0					
ANR	83976	Identifier	server		83946	0					
ANR	83977	Identifier	port		83946	1					
ANR	83978	PrimaryExpression	20		83946	1					
ANR	83979	ExpressionStatement	path = ss_malloc ( path_size )	100:4:2490:2517	83946	2	True				
ANR	83980	AssignmentExpression	path = ss_malloc ( path_size )		83946	0		=			
ANR	83981	Identifier	path		83946	0					
ANR	83982	CallExpression	ss_malloc ( path_size )		83946	1					
ANR	83983	Callee	ss_malloc		83946	0					
ANR	83984	Identifier	ss_malloc		83946	0					
ANR	83985	ArgumentList	path_size		83946	1					
ANR	83986	Argument	path_size		83946	0					
ANR	83987	Identifier	path_size		83946	0					
ANR	83988	ExpressionStatement	"snprintf ( path , path_size , ""%s/.shadowsocks_%s.conf"" , prefix , server -> port )"	101:4:2523:2597	83946	3	True				
ANR	83989	CallExpression	"snprintf ( path , path_size , ""%s/.shadowsocks_%s.conf"" , prefix , server -> port )"		83946	0					
ANR	83990	Callee	snprintf		83946	0					
ANR	83991	Identifier	snprintf		83946	0					
ANR	83992	ArgumentList	path		83946	1					
ANR	83993	Argument	path		83946	0					
ANR	83994	Identifier	path		83946	0					
ANR	83995	Argument	path_size		83946	1					
ANR	83996	Identifier	path_size		83946	0					
ANR	83997	Argument	"""%s/.shadowsocks_%s.conf"""		83946	2					
ANR	83998	PrimaryExpression	"""%s/.shadowsocks_%s.conf"""		83946	0					
ANR	83999	Argument	prefix		83946	3					
ANR	84000	Identifier	prefix		83946	0					
ANR	84001	Argument	server -> port		83946	4					
ANR	84002	PtrMemberAccess	server -> port		83946	0					
ANR	84003	Identifier	server		83946	0					
ANR	84004	Identifier	port		83946	1					
ANR	84005	IdentifierDeclStatement	"FILE * f = fopen ( path , ""w+"" ) ;"	102:4:2603:2630	83946	4	True				
ANR	84006	IdentifierDecl	"* f = fopen ( path , ""w+"" )"		83946	0					
ANR	84007	IdentifierDeclType	FILE *		83946	0					
ANR	84008	Identifier	f		83946	1					
ANR	84009	AssignmentExpression	"* f = fopen ( path , ""w+"" )"		83946	2		=			
ANR	84010	Identifier	f		83946	0					
ANR	84011	CallExpression	"fopen ( path , ""w+"" )"		83946	1					
ANR	84012	Callee	fopen		83946	0					
ANR	84013	Identifier	fopen		83946	0					
ANR	84014	ArgumentList	path		83946	1					
ANR	84015	Argument	path		83946	0					
ANR	84016	Identifier	path		83946	0					
ANR	84017	Argument	"""w+"""		83946	1					
ANR	84018	PrimaryExpression	"""w+"""		83946	0					
ANR	84019	IfStatement	if ( f == NULL )		83946	5					
ANR	84020	Condition	f == NULL	103:8:2640:2648	83946	0	True				
ANR	84021	EqualityExpression	f == NULL		83946	0		==			
ANR	84022	Identifier	f		83946	0					
ANR	84023	Identifier	NULL		83946	1					
ANR	84024	CompoundStatement		8:19:257:257	83946	1					
ANR	84025	IfStatement	if ( verbose )		83946	0					
ANR	84026	Condition	verbose	104:12:2665:2671	83946	0	True				
ANR	84027	Identifier	verbose		83946	0					
ANR	84028	CompoundStatement		9:21:280:280	83946	1					
ANR	84029	ExpressionStatement	"LOGE ( ""unable to open config file"" )"	105:12:2688:2722	83946	0	True				
ANR	84030	CallExpression	"LOGE ( ""unable to open config file"" )"		83946	0					
ANR	84031	Callee	LOGE		83946	0					
ANR	84032	Identifier	LOGE		83946	0					
ANR	84033	ArgumentList	"""unable to open config file"""		83946	1					
ANR	84034	Argument	"""unable to open config file"""		83946	0					
ANR	84035	PrimaryExpression	"""unable to open config file"""		83946	0					
ANR	84036	ExpressionStatement	ss_free ( path )	107:8:2742:2755	83946	1	True				
ANR	84037	CallExpression	ss_free ( path )		83946	0					
ANR	84038	Callee	ss_free		83946	0					
ANR	84039	Identifier	ss_free		83946	0					
ANR	84040	ArgumentList	path		83946	1					
ANR	84041	Argument	path		83946	0					
ANR	84042	Identifier	path		83946	0					
ANR	84043	ReturnStatement	return ;	108:8:2765:2771	83946	2	True				
ANR	84044	ExpressionStatement	"fprintf ( f , ""{\\n"" )"	110:4:2783:2800	83946	6	True				
ANR	84045	CallExpression	"fprintf ( f , ""{\\n"" )"		83946	0					
ANR	84046	Callee	fprintf		83946	0					
ANR	84047	Identifier	fprintf		83946	0					
ANR	84048	ArgumentList	f		83946	1					
ANR	84049	Argument	f		83946	0					
ANR	84050	Identifier	f		83946	0					
ANR	84051	Argument	"""{\\n"""		83946	1					
ANR	84052	PrimaryExpression	"""{\\n"""		83946	0					
ANR	84053	ExpressionStatement	"fprintf ( f , ""\\""server_port\\"":%d,\\n"" , atoi ( server -> port ) )"	111:4:2806:2861	83946	7	True				
ANR	84054	CallExpression	"fprintf ( f , ""\\""server_port\\"":%d,\\n"" , atoi ( server -> port ) )"		83946	0					
ANR	84055	Callee	fprintf		83946	0					
ANR	84056	Identifier	fprintf		83946	0					
ANR	84057	ArgumentList	f		83946	1					
ANR	84058	Argument	f		83946	0					
ANR	84059	Identifier	f		83946	0					
ANR	84060	Argument	"""\\""server_port\\"":%d,\\n"""		83946	1					
ANR	84061	PrimaryExpression	"""\\""server_port\\"":%d,\\n"""		83946	0					
ANR	84062	Argument	atoi ( server -> port )		83946	2					
ANR	84063	CallExpression	atoi ( server -> port )		83946	0					
ANR	84064	Callee	atoi		83946	0					
ANR	84065	Identifier	atoi		83946	0					
ANR	84066	ArgumentList	server -> port		83946	1					
ANR	84067	Argument	server -> port		83946	0					
ANR	84068	PtrMemberAccess	server -> port		83946	0					
ANR	84069	Identifier	server		83946	0					
ANR	84070	Identifier	port		83946	1					
ANR	84071	ExpressionStatement	"fprintf ( f , ""\\""password\\"":\\""%s\\"""" , server -> password )"	112:4:2867:2918	83946	8	True				
ANR	84072	CallExpression	"fprintf ( f , ""\\""password\\"":\\""%s\\"""" , server -> password )"		83946	0					
ANR	84073	Callee	fprintf		83946	0					
ANR	84074	Identifier	fprintf		83946	0					
ANR	84075	ArgumentList	f		83946	1					
ANR	84076	Argument	f		83946	0					
ANR	84077	Identifier	f		83946	0					
ANR	84078	Argument	"""\\""password\\"":\\""%s\\"""""		83946	1					
ANR	84079	PrimaryExpression	"""\\""password\\"":\\""%s\\"""""		83946	0					
ANR	84080	Argument	server -> password		83946	2					
ANR	84081	PtrMemberAccess	server -> password		83946	0					
ANR	84082	Identifier	server		83946	0					
ANR	84083	Identifier	password		83946	1					
ANR	84084	IfStatement	if ( server -> fast_open [ 0 ] )		83946	9					
ANR	84085	Condition	server -> fast_open [ 0 ]	113:8:2928:2947	83946	0	True				
ANR	84086	ArrayIndexing	server -> fast_open [ 0 ]		83946	0					
ANR	84087	PtrMemberAccess	server -> fast_open		83946	0					
ANR	84088	Identifier	server		83946	0					
ANR	84089	Identifier	fast_open		83946	1					
ANR	84090	PrimaryExpression	0		83946	1					
ANR	84091	ExpressionStatement	"fprintf ( f , "",\\n\\""fast_open\\"": %s"" , server -> fast_open )"	113:30:2950:3003	83946	1	True				
ANR	84092	CallExpression	"fprintf ( f , "",\\n\\""fast_open\\"": %s"" , server -> fast_open )"		83946	0					
ANR	84093	Callee	fprintf		83946	0					
ANR	84094	Identifier	fprintf		83946	0					
ANR	84095	ArgumentList	f		83946	1					
ANR	84096	Argument	f		83946	0					
ANR	84097	Identifier	f		83946	0					
ANR	84098	Argument	""",\\n\\""fast_open\\"": %s"""		83946	1					
ANR	84099	PrimaryExpression	""",\\n\\""fast_open\\"": %s"""		83946	0					
ANR	84100	Argument	server -> fast_open		83946	2					
ANR	84101	PtrMemberAccess	server -> fast_open		83946	0					
ANR	84102	Identifier	server		83946	0					
ANR	84103	Identifier	fast_open		83946	1					
ANR	84104	IfStatement	if ( server -> mode )		83946	10					
ANR	84105	Condition	server -> mode	114:8:3013:3024	83946	0	True				
ANR	84106	PtrMemberAccess	server -> mode		83946	0					
ANR	84107	Identifier	server		83946	0					
ANR	84108	Identifier	mode		83946	1					
ANR	84109	ExpressionStatement	"fprintf ( f , "",\\n\\""mode\\"":\\""%s\\"""" , server -> mode )"	114:24:3029:3075	83946	1	True				
ANR	84110	CallExpression	"fprintf ( f , "",\\n\\""mode\\"":\\""%s\\"""" , server -> mode )"		83946	0					
ANR	84111	Callee	fprintf		83946	0					
ANR	84112	Identifier	fprintf		83946	0					
ANR	84113	ArgumentList	f		83946	1					
ANR	84114	Argument	f		83946	0					
ANR	84115	Identifier	f		83946	0					
ANR	84116	Argument	""",\\n\\""mode\\"":\\""%s\\"""""		83946	1					
ANR	84117	PrimaryExpression	""",\\n\\""mode\\"":\\""%s\\"""""		83946	0					
ANR	84118	Argument	server -> mode		83946	2					
ANR	84119	PtrMemberAccess	server -> mode		83946	0					
ANR	84120	Identifier	server		83946	0					
ANR	84121	Identifier	mode		83946	1					
ANR	84122	IfStatement	if ( server -> method )		83946	11					
ANR	84123	Condition	server -> method	115:8:3085:3098	83946	0	True				
ANR	84124	PtrMemberAccess	server -> method		83946	0					
ANR	84125	Identifier	server		83946	0					
ANR	84126	Identifier	method		83946	1					
ANR	84127	ExpressionStatement	"fprintf ( f , "",\\n\\""method\\"":\\""%s\\"""" , server -> method )"	115:24:3101:3151	83946	1	True				
ANR	84128	CallExpression	"fprintf ( f , "",\\n\\""method\\"":\\""%s\\"""" , server -> method )"		83946	0					
ANR	84129	Callee	fprintf		83946	0					
ANR	84130	Identifier	fprintf		83946	0					
ANR	84131	ArgumentList	f		83946	1					
ANR	84132	Argument	f		83946	0					
ANR	84133	Identifier	f		83946	0					
ANR	84134	Argument	""",\\n\\""method\\"":\\""%s\\"""""		83946	1					
ANR	84135	PrimaryExpression	""",\\n\\""method\\"":\\""%s\\"""""		83946	0					
ANR	84136	Argument	server -> method		83946	2					
ANR	84137	PtrMemberAccess	server -> method		83946	0					
ANR	84138	Identifier	server		83946	0					
ANR	84139	Identifier	method		83946	1					
ANR	84140	IfStatement	if ( server -> plugin )		83946	12					
ANR	84141	Condition	server -> plugin	116:8:3161:3174	83946	0	True				
ANR	84142	PtrMemberAccess	server -> plugin		83946	0					
ANR	84143	Identifier	server		83946	0					
ANR	84144	Identifier	plugin		83946	1					
ANR	84145	ExpressionStatement	"fprintf ( f , "",\\n\\""plugin\\"":\\""%s\\"""" , server -> plugin )"	116:24:3177:3227	83946	1	True				
ANR	84146	CallExpression	"fprintf ( f , "",\\n\\""plugin\\"":\\""%s\\"""" , server -> plugin )"		83946	0					
ANR	84147	Callee	fprintf		83946	0					
ANR	84148	Identifier	fprintf		83946	0					
ANR	84149	ArgumentList	f		83946	1					
ANR	84150	Argument	f		83946	0					
ANR	84151	Identifier	f		83946	0					
ANR	84152	Argument	""",\\n\\""plugin\\"":\\""%s\\"""""		83946	1					
ANR	84153	PrimaryExpression	""",\\n\\""plugin\\"":\\""%s\\"""""		83946	0					
ANR	84154	Argument	server -> plugin		83946	2					
ANR	84155	PtrMemberAccess	server -> plugin		83946	0					
ANR	84156	Identifier	server		83946	0					
ANR	84157	Identifier	plugin		83946	1					
ANR	84158	IfStatement	if ( server -> plugin_opts )		83946	13					
ANR	84159	Condition	server -> plugin_opts	117:8:3237:3255	83946	0	True				
ANR	84160	PtrMemberAccess	server -> plugin_opts		83946	0					
ANR	84161	Identifier	server		83946	0					
ANR	84162	Identifier	plugin_opts		83946	1					
ANR	84163	ExpressionStatement	"fprintf ( f , "",\\n\\""plugin_opts\\"":\\""%s\\"""" , server -> plugin_opts )"	117:29:3258:3318	83946	1	True				
ANR	84164	CallExpression	"fprintf ( f , "",\\n\\""plugin_opts\\"":\\""%s\\"""" , server -> plugin_opts )"		83946	0					
ANR	84165	Callee	fprintf		83946	0					
ANR	84166	Identifier	fprintf		83946	0					
ANR	84167	ArgumentList	f		83946	1					
ANR	84168	Argument	f		83946	0					
ANR	84169	Identifier	f		83946	0					
ANR	84170	Argument	""",\\n\\""plugin_opts\\"":\\""%s\\"""""		83946	1					
ANR	84171	PrimaryExpression	""",\\n\\""plugin_opts\\"":\\""%s\\"""""		83946	0					
ANR	84172	Argument	server -> plugin_opts		83946	2					
ANR	84173	PtrMemberAccess	server -> plugin_opts		83946	0					
ANR	84174	Identifier	server		83946	0					
ANR	84175	Identifier	plugin_opts		83946	1					
ANR	84176	ExpressionStatement	"fprintf ( f , ""\\n}\\n"" )"	118:4:3324:3343	83946	14	True				
ANR	84177	CallExpression	"fprintf ( f , ""\\n}\\n"" )"		83946	0					
ANR	84178	Callee	fprintf		83946	0					
ANR	84179	Identifier	fprintf		83946	0					
ANR	84180	ArgumentList	f		83946	1					
ANR	84181	Argument	f		83946	0					
ANR	84182	Identifier	f		83946	0					
ANR	84183	Argument	"""\\n}\\n"""		83946	1					
ANR	84184	PrimaryExpression	"""\\n}\\n"""		83946	0					
ANR	84185	ExpressionStatement	fclose ( f )	119:4:3349:3358	83946	15	True				
ANR	84186	CallExpression	fclose ( f )		83946	0					
ANR	84187	Callee	fclose		83946	0					
ANR	84188	Identifier	fclose		83946	0					
ANR	84189	ArgumentList	f		83946	1					
ANR	84190	Argument	f		83946	0					
ANR	84191	Identifier	f		83946	0					
ANR	84192	ExpressionStatement	ss_free ( path )	120:4:3364:3377	83946	16	True				
ANR	84193	CallExpression	ss_free ( path )		83946	0					
ANR	84194	Callee	ss_free		83946	0					
ANR	84195	Identifier	ss_free		83946	0					
ANR	84196	ArgumentList	path		83946	1					
ANR	84197	Argument	path		83946	0					
ANR	84198	Identifier	path		83946	0					
ANR	84199	ReturnType	static void		83946	1					
ANR	84200	Identifier	build_config		83946	2					
ANR	84201	ParameterList	"char * prefix , struct server * server"		83946	3					
ANR	84202	Parameter	char * prefix	95:13:2356:2367	83946	0	True				
ANR	84203	ParameterType	char *		83946	0					
ANR	84204	Identifier	prefix		83946	1					
ANR	84205	Parameter	struct server * server	95:27:2370:2390	83946	1	True				
ANR	84206	ParameterType	struct server *		83946	0					
ANR	84207	Identifier	server		83946	1					
ANR	84208	CFGEntryNode	ENTRY		83946		True				
ANR	84209	CFGExitNode	EXIT		83946		True				
ANR	84210	Symbol	atoi		83946						
ANR	84211	Symbol	server		83946						
ANR	84212	Symbol	fopen		83946						
ANR	84213	Symbol	NULL		83946						
ANR	84214	Symbol	* server		83946						
ANR	84215	Symbol	path_size		83946						
ANR	84216	Symbol	server -> fast_open		83946						
ANR	84217	Symbol	prefix		83946						
ANR	84218	Symbol	f		83946						
ANR	84219	Symbol	server -> plugin_opts		83946						
ANR	84220	Symbol	server -> password		83946						
ANR	84221	Symbol	server -> method		83946						
ANR	84222	Symbol	verbose		83946						
ANR	84223	Symbol	path		83946						
ANR	84224	Symbol	strlen		83946						
ANR	84225	Symbol	* server -> fast_open		83946						
ANR	84226	Symbol	ss_malloc		83946						
ANR	84227	Symbol	server -> mode		83946						
ANR	84228	Symbol	* * server		83946						
ANR	84229	Symbol	server -> port		83946						
ANR	84230	Symbol	server -> plugin		83946						
ANR	84231	Function	construct_command_line	123:0:3382:6247							
ANR	84232	FunctionDef	"construct_command_line (struct manager_ctx * manager , struct server * server)"		84231	0					
ANR	84233	CompoundStatement		125:0:3471:6247	84231	0					
ANR	84234	Statement	static	126:4:3477:3482	84231	0	True				
ANR	84235	IdentifierDeclStatement	char cmd [ BUF_SIZE ] ;	126:11:3484:3502	84231	1	True				
ANR	84236	IdentifierDecl	cmd [ BUF_SIZE ]		84231	0					
ANR	84237	IdentifierDeclType	char [ BUF_SIZE ]		84231	0					
ANR	84238	Identifier	cmd		84231	1					
ANR	84239	Identifier	BUF_SIZE		84231	2					
ANR	84240	IdentifierDeclStatement	char * method = manager -> method ;	127:4:3508:3538	84231	2	True				
ANR	84241	IdentifierDecl	* method = manager -> method		84231	0					
ANR	84242	IdentifierDeclType	char *		84231	0					
ANR	84243	Identifier	method		84231	1					
ANR	84244	AssignmentExpression	* method = manager -> method		84231	2		=			
ANR	84245	Identifier	method		84231	0					
ANR	84246	PtrMemberAccess	manager -> method		84231	1					
ANR	84247	Identifier	manager		84231	0					
ANR	84248	Identifier	method		84231	1					
ANR	84249	IdentifierDeclStatement	int i ;	128:4:3544:3549	84231	3	True				
ANR	84250	IdentifierDecl	i		84231	0					
ANR	84251	IdentifierDeclType	int		84231	0					
ANR	84252	Identifier	i		84231	1					
ANR	84253	ExpressionStatement	"build_config ( working_dir , server )"	130:4:3556:3589	84231	4	True				
ANR	84254	CallExpression	"build_config ( working_dir , server )"		84231	0					
ANR	84255	Callee	build_config		84231	0					
ANR	84256	Identifier	build_config		84231	0					
ANR	84257	ArgumentList	working_dir		84231	1					
ANR	84258	Argument	working_dir		84231	0					
ANR	84259	Identifier	working_dir		84231	0					
ANR	84260	Argument	server		84231	1					
ANR	84261	Identifier	server		84231	0					
ANR	84262	IfStatement	if ( server -> method )		84231	5					
ANR	84263	Condition	server -> method	132:8:3600:3613	84231	0	True				
ANR	84264	PtrMemberAccess	server -> method		84231	0					
ANR	84265	Identifier	server		84231	0					
ANR	84266	Identifier	method		84231	1					
ANR	84267	ExpressionStatement	method = server -> method	132:24:3616:3639	84231	1	True				
ANR	84268	AssignmentExpression	method = server -> method		84231	0		=			
ANR	84269	Identifier	method		84231	0					
ANR	84270	PtrMemberAccess	server -> method		84231	1					
ANR	84271	Identifier	server		84231	0					
ANR	84272	Identifier	method		84231	1					
ANR	84273	ExpressionStatement	"memset ( cmd , 0 , BUF_SIZE )"	133:4:3645:3669	84231	6	True				
ANR	84274	CallExpression	"memset ( cmd , 0 , BUF_SIZE )"		84231	0					
ANR	84275	Callee	memset		84231	0					
ANR	84276	Identifier	memset		84231	0					
ANR	84277	ArgumentList	cmd		84231	1					
ANR	84278	Argument	cmd		84231	0					
ANR	84279	Identifier	cmd		84231	0					
ANR	84280	Argument	0		84231	1					
ANR	84281	PrimaryExpression	0		84231	0					
ANR	84282	Argument	BUF_SIZE		84231	2					
ANR	84283	Identifier	BUF_SIZE		84231	0					
ANR	84284	ExpressionStatement	"snprintf ( cmd , BUF_SIZE , ""%s -m %s --manager-address %s -f %s/.shadowsocks_%s.pid -c %s/.shadowsocks_%s.conf"" , executable , method , manager -> manager_address , working_dir , server -> port , working_dir , server -> port )"	134:4:3675:3923	84231	7	True				
ANR	84285	CallExpression	"snprintf ( cmd , BUF_SIZE , ""%s -m %s --manager-address %s -f %s/.shadowsocks_%s.pid -c %s/.shadowsocks_%s.conf"" , executable , method , manager -> manager_address , working_dir , server -> port , working_dir , server -> port )"		84231	0					
ANR	84286	Callee	snprintf		84231	0					
ANR	84287	Identifier	snprintf		84231	0					
ANR	84288	ArgumentList	cmd		84231	1					
ANR	84289	Argument	cmd		84231	0					
ANR	84290	Identifier	cmd		84231	0					
ANR	84291	Argument	BUF_SIZE		84231	1					
ANR	84292	Identifier	BUF_SIZE		84231	0					
ANR	84293	Argument	"""%s -m %s --manager-address %s -f %s/.shadowsocks_%s.pid -c %s/.shadowsocks_%s.conf"""		84231	2					
ANR	84294	PrimaryExpression	"""%s -m %s --manager-address %s -f %s/.shadowsocks_%s.pid -c %s/.shadowsocks_%s.conf"""		84231	0					
ANR	84295	Argument	executable		84231	3					
ANR	84296	Identifier	executable		84231	0					
ANR	84297	Argument	method		84231	4					
ANR	84298	Identifier	method		84231	0					
ANR	84299	Argument	manager -> manager_address		84231	5					
ANR	84300	PtrMemberAccess	manager -> manager_address		84231	0					
ANR	84301	Identifier	manager		84231	0					
ANR	84302	Identifier	manager_address		84231	1					
ANR	84303	Argument	working_dir		84231	6					
ANR	84304	Identifier	working_dir		84231	0					
ANR	84305	Argument	server -> port		84231	7					
ANR	84306	PtrMemberAccess	server -> port		84231	0					
ANR	84307	Identifier	server		84231	0					
ANR	84308	Identifier	port		84231	1					
ANR	84309	Argument	working_dir		84231	8					
ANR	84310	Identifier	working_dir		84231	0					
ANR	84311	Argument	server -> port		84231	9					
ANR	84312	PtrMemberAccess	server -> port		84231	0					
ANR	84313	Identifier	server		84231	0					
ANR	84314	Identifier	port		84231	1					
ANR	84315	IfStatement	if ( manager -> acl != NULL )		84231	8					
ANR	84316	Condition	manager -> acl != NULL	139:8:3934:3953	84231	0	True				
ANR	84317	EqualityExpression	manager -> acl != NULL		84231	0		!=			
ANR	84318	PtrMemberAccess	manager -> acl		84231	0					
ANR	84319	Identifier	manager		84231	0					
ANR	84320	Identifier	acl		84231	1					
ANR	84321	Identifier	NULL		84231	1					
ANR	84322	CompoundStatement		16:8:494:515	84231	1					
ANR	84323	IdentifierDeclStatement	int len = strlen ( cmd ) ;	140:8:3966:3987	84231	0	True				
ANR	84324	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84325	IdentifierDeclType	int		84231	0					
ANR	84326	Identifier	len		84231	1					
ANR	84327	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84328	Identifier	len		84231	0					
ANR	84329	CallExpression	strlen ( cmd )		84231	1					
ANR	84330	Callee	strlen		84231	0					
ANR	84331	Identifier	strlen		84231	0					
ANR	84332	ArgumentList	cmd		84231	1					
ANR	84333	Argument	cmd		84231	0					
ANR	84334	Identifier	cmd		84231	0					
ANR	84335	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" --acl %s"" , manager -> acl )"	141:8:3997:4059	84231	1	True				
ANR	84336	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" --acl %s"" , manager -> acl )"		84231	0					
ANR	84337	Callee	snprintf		84231	0					
ANR	84338	Identifier	snprintf		84231	0					
ANR	84339	ArgumentList	cmd + len		84231	1					
ANR	84340	Argument	cmd + len		84231	0					
ANR	84341	AdditiveExpression	cmd + len		84231	0		+			
ANR	84342	Identifier	cmd		84231	0					
ANR	84343	Identifier	len		84231	1					
ANR	84344	Argument	BUF_SIZE - len		84231	1					
ANR	84345	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84346	Identifier	BUF_SIZE		84231	0					
ANR	84347	Identifier	len		84231	1					
ANR	84348	Argument	""" --acl %s"""		84231	2					
ANR	84349	PrimaryExpression	""" --acl %s"""		84231	0					
ANR	84350	Argument	manager -> acl		84231	3					
ANR	84351	PtrMemberAccess	manager -> acl		84231	0					
ANR	84352	Identifier	manager		84231	0					
ANR	84353	Identifier	acl		84231	1					
ANR	84354	IfStatement	if ( manager -> timeout != NULL )		84231	9					
ANR	84355	Condition	manager -> timeout != NULL	143:8:4075:4098	84231	0	True				
ANR	84356	EqualityExpression	manager -> timeout != NULL		84231	0		!=			
ANR	84357	PtrMemberAccess	manager -> timeout		84231	0					
ANR	84358	Identifier	manager		84231	0					
ANR	84359	Identifier	timeout		84231	1					
ANR	84360	Identifier	NULL		84231	1					
ANR	84361	CompoundStatement		20:8:639:660	84231	1					
ANR	84362	IdentifierDeclStatement	int len = strlen ( cmd ) ;	144:8:4111:4132	84231	0	True				
ANR	84363	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84364	IdentifierDeclType	int		84231	0					
ANR	84365	Identifier	len		84231	1					
ANR	84366	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84367	Identifier	len		84231	0					
ANR	84368	CallExpression	strlen ( cmd )		84231	1					
ANR	84369	Callee	strlen		84231	0					
ANR	84370	Identifier	strlen		84231	0					
ANR	84371	ArgumentList	cmd		84231	1					
ANR	84372	Argument	cmd		84231	0					
ANR	84373	Identifier	cmd		84231	0					
ANR	84374	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -t %s"" , manager -> timeout )"	145:8:4142:4205	84231	1	True				
ANR	84375	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -t %s"" , manager -> timeout )"		84231	0					
ANR	84376	Callee	snprintf		84231	0					
ANR	84377	Identifier	snprintf		84231	0					
ANR	84378	ArgumentList	cmd + len		84231	1					
ANR	84379	Argument	cmd + len		84231	0					
ANR	84380	AdditiveExpression	cmd + len		84231	0		+			
ANR	84381	Identifier	cmd		84231	0					
ANR	84382	Identifier	len		84231	1					
ANR	84383	Argument	BUF_SIZE - len		84231	1					
ANR	84384	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84385	Identifier	BUF_SIZE		84231	0					
ANR	84386	Identifier	len		84231	1					
ANR	84387	Argument	""" -t %s"""		84231	2					
ANR	84388	PrimaryExpression	""" -t %s"""		84231	0					
ANR	84389	Argument	manager -> timeout		84231	3					
ANR	84390	PtrMemberAccess	manager -> timeout		84231	0					
ANR	84391	Identifier	manager		84231	0					
ANR	84392	Identifier	timeout		84231	1					
ANR	84393	IfStatement	if ( manager -> nofile )		84231	10					
ANR	84394	Condition	manager -> nofile	148:8:4243:4257	84231	0	True				
ANR	84395	PtrMemberAccess	manager -> nofile		84231	0					
ANR	84396	Identifier	manager		84231	0					
ANR	84397	Identifier	nofile		84231	1					
ANR	84398	CompoundStatement		25:8:798:819	84231	1					
ANR	84399	IdentifierDeclStatement	int len = strlen ( cmd ) ;	149:8:4270:4291	84231	0	True				
ANR	84400	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84401	IdentifierDeclType	int		84231	0					
ANR	84402	Identifier	len		84231	1					
ANR	84403	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84404	Identifier	len		84231	0					
ANR	84405	CallExpression	strlen ( cmd )		84231	1					
ANR	84406	Callee	strlen		84231	0					
ANR	84407	Identifier	strlen		84231	0					
ANR	84408	ArgumentList	cmd		84231	1					
ANR	84409	Argument	cmd		84231	0					
ANR	84410	Identifier	cmd		84231	0					
ANR	84411	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -n %d"" , manager -> nofile )"	150:8:4301:4363	84231	1	True				
ANR	84412	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -n %d"" , manager -> nofile )"		84231	0					
ANR	84413	Callee	snprintf		84231	0					
ANR	84414	Identifier	snprintf		84231	0					
ANR	84415	ArgumentList	cmd + len		84231	1					
ANR	84416	Argument	cmd + len		84231	0					
ANR	84417	AdditiveExpression	cmd + len		84231	0		+			
ANR	84418	Identifier	cmd		84231	0					
ANR	84419	Identifier	len		84231	1					
ANR	84420	Argument	BUF_SIZE - len		84231	1					
ANR	84421	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84422	Identifier	BUF_SIZE		84231	0					
ANR	84423	Identifier	len		84231	1					
ANR	84424	Argument	""" -n %d"""		84231	2					
ANR	84425	PrimaryExpression	""" -n %d"""		84231	0					
ANR	84426	Argument	manager -> nofile		84231	3					
ANR	84427	PtrMemberAccess	manager -> nofile		84231	0					
ANR	84428	Identifier	manager		84231	0					
ANR	84429	Identifier	nofile		84231	1					
ANR	84430	IfStatement	if ( manager -> user != NULL )		84231	11					
ANR	84431	Condition	manager -> user != NULL	153:8:4386:4406	84231	0	True				
ANR	84432	EqualityExpression	manager -> user != NULL		84231	0		!=			
ANR	84433	PtrMemberAccess	manager -> user		84231	0					
ANR	84434	Identifier	manager		84231	0					
ANR	84435	Identifier	user		84231	1					
ANR	84436	Identifier	NULL		84231	1					
ANR	84437	CompoundStatement		30:8:947:968	84231	1					
ANR	84438	IdentifierDeclStatement	int len = strlen ( cmd ) ;	154:8:4419:4440	84231	0	True				
ANR	84439	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84440	IdentifierDeclType	int		84231	0					
ANR	84441	Identifier	len		84231	1					
ANR	84442	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84443	Identifier	len		84231	0					
ANR	84444	CallExpression	strlen ( cmd )		84231	1					
ANR	84445	Callee	strlen		84231	0					
ANR	84446	Identifier	strlen		84231	0					
ANR	84447	ArgumentList	cmd		84231	1					
ANR	84448	Argument	cmd		84231	0					
ANR	84449	Identifier	cmd		84231	0					
ANR	84450	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -a %s"" , manager -> user )"	155:8:4450:4510	84231	1	True				
ANR	84451	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -a %s"" , manager -> user )"		84231	0					
ANR	84452	Callee	snprintf		84231	0					
ANR	84453	Identifier	snprintf		84231	0					
ANR	84454	ArgumentList	cmd + len		84231	1					
ANR	84455	Argument	cmd + len		84231	0					
ANR	84456	AdditiveExpression	cmd + len		84231	0		+			
ANR	84457	Identifier	cmd		84231	0					
ANR	84458	Identifier	len		84231	1					
ANR	84459	Argument	BUF_SIZE - len		84231	1					
ANR	84460	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84461	Identifier	BUF_SIZE		84231	0					
ANR	84462	Identifier	len		84231	1					
ANR	84463	Argument	""" -a %s"""		84231	2					
ANR	84464	PrimaryExpression	""" -a %s"""		84231	0					
ANR	84465	Argument	manager -> user		84231	3					
ANR	84466	PtrMemberAccess	manager -> user		84231	0					
ANR	84467	Identifier	manager		84231	0					
ANR	84468	Identifier	user		84231	1					
ANR	84469	IfStatement	if ( manager -> verbose )		84231	12					
ANR	84470	Condition	manager -> verbose	157:8:4526:4541	84231	0	True				
ANR	84471	PtrMemberAccess	manager -> verbose		84231	0					
ANR	84472	Identifier	manager		84231	0					
ANR	84473	Identifier	verbose		84231	1					
ANR	84474	CompoundStatement		34:8:1082:1103	84231	1					
ANR	84475	IdentifierDeclStatement	int len = strlen ( cmd ) ;	158:8:4554:4575	84231	0	True				
ANR	84476	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84477	IdentifierDeclType	int		84231	0					
ANR	84478	Identifier	len		84231	1					
ANR	84479	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84480	Identifier	len		84231	0					
ANR	84481	CallExpression	strlen ( cmd )		84231	1					
ANR	84482	Callee	strlen		84231	0					
ANR	84483	Identifier	strlen		84231	0					
ANR	84484	ArgumentList	cmd		84231	1					
ANR	84485	Argument	cmd		84231	0					
ANR	84486	Identifier	cmd		84231	0					
ANR	84487	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -v"" )"	159:8:4585:4627	84231	1	True				
ANR	84488	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -v"" )"		84231	0					
ANR	84489	Callee	snprintf		84231	0					
ANR	84490	Identifier	snprintf		84231	0					
ANR	84491	ArgumentList	cmd + len		84231	1					
ANR	84492	Argument	cmd + len		84231	0					
ANR	84493	AdditiveExpression	cmd + len		84231	0		+			
ANR	84494	Identifier	cmd		84231	0					
ANR	84495	Identifier	len		84231	1					
ANR	84496	Argument	BUF_SIZE - len		84231	1					
ANR	84497	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84498	Identifier	BUF_SIZE		84231	0					
ANR	84499	Identifier	len		84231	1					
ANR	84500	Argument	""" -v"""		84231	2					
ANR	84501	PrimaryExpression	""" -v"""		84231	0					
ANR	84502	IfStatement	if ( server -> mode == NULL && manager -> mode == UDP_ONLY )		84231	13					
ANR	84503	Condition	server -> mode == NULL && manager -> mode == UDP_ONLY	161:8:4643:4691	84231	0	True				
ANR	84504	AndExpression	server -> mode == NULL && manager -> mode == UDP_ONLY		84231	0		&&			
ANR	84505	EqualityExpression	server -> mode == NULL		84231	0		==			
ANR	84506	PtrMemberAccess	server -> mode		84231	0					
ANR	84507	Identifier	server		84231	0					
ANR	84508	Identifier	mode		84231	1					
ANR	84509	Identifier	NULL		84231	1					
ANR	84510	EqualityExpression	manager -> mode == UDP_ONLY		84231	1		==			
ANR	84511	PtrMemberAccess	manager -> mode		84231	0					
ANR	84512	Identifier	manager		84231	0					
ANR	84513	Identifier	mode		84231	1					
ANR	84514	Identifier	UDP_ONLY		84231	1					
ANR	84515	CompoundStatement		38:8:1232:1253	84231	1					
ANR	84516	IdentifierDeclStatement	int len = strlen ( cmd ) ;	162:8:4704:4725	84231	0	True				
ANR	84517	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84518	IdentifierDeclType	int		84231	0					
ANR	84519	Identifier	len		84231	1					
ANR	84520	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84521	Identifier	len		84231	0					
ANR	84522	CallExpression	strlen ( cmd )		84231	1					
ANR	84523	Callee	strlen		84231	0					
ANR	84524	Identifier	strlen		84231	0					
ANR	84525	ArgumentList	cmd		84231	1					
ANR	84526	Argument	cmd		84231	0					
ANR	84527	Identifier	cmd		84231	0					
ANR	84528	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -U"" )"	163:8:4735:4777	84231	1	True				
ANR	84529	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -U"" )"		84231	0					
ANR	84530	Callee	snprintf		84231	0					
ANR	84531	Identifier	snprintf		84231	0					
ANR	84532	ArgumentList	cmd + len		84231	1					
ANR	84533	Argument	cmd + len		84231	0					
ANR	84534	AdditiveExpression	cmd + len		84231	0		+			
ANR	84535	Identifier	cmd		84231	0					
ANR	84536	Identifier	len		84231	1					
ANR	84537	Argument	BUF_SIZE - len		84231	1					
ANR	84538	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84539	Identifier	BUF_SIZE		84231	0					
ANR	84540	Identifier	len		84231	1					
ANR	84541	Argument	""" -U"""		84231	2					
ANR	84542	PrimaryExpression	""" -U"""		84231	0					
ANR	84543	IfStatement	if ( server -> mode == NULL && manager -> mode == TCP_AND_UDP )		84231	14					
ANR	84544	Condition	server -> mode == NULL && manager -> mode == TCP_AND_UDP	165:8:4793:4844	84231	0	True				
ANR	84545	AndExpression	server -> mode == NULL && manager -> mode == TCP_AND_UDP		84231	0		&&			
ANR	84546	EqualityExpression	server -> mode == NULL		84231	0		==			
ANR	84547	PtrMemberAccess	server -> mode		84231	0					
ANR	84548	Identifier	server		84231	0					
ANR	84549	Identifier	mode		84231	1					
ANR	84550	Identifier	NULL		84231	1					
ANR	84551	EqualityExpression	manager -> mode == TCP_AND_UDP		84231	1		==			
ANR	84552	PtrMemberAccess	manager -> mode		84231	0					
ANR	84553	Identifier	manager		84231	0					
ANR	84554	Identifier	mode		84231	1					
ANR	84555	Identifier	TCP_AND_UDP		84231	1					
ANR	84556	CompoundStatement		42:8:1385:1406	84231	1					
ANR	84557	IdentifierDeclStatement	int len = strlen ( cmd ) ;	166:8:4857:4878	84231	0	True				
ANR	84558	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84559	IdentifierDeclType	int		84231	0					
ANR	84560	Identifier	len		84231	1					
ANR	84561	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84562	Identifier	len		84231	0					
ANR	84563	CallExpression	strlen ( cmd )		84231	1					
ANR	84564	Callee	strlen		84231	0					
ANR	84565	Identifier	strlen		84231	0					
ANR	84566	ArgumentList	cmd		84231	1					
ANR	84567	Argument	cmd		84231	0					
ANR	84568	Identifier	cmd		84231	0					
ANR	84569	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -u"" )"	167:8:4888:4930	84231	1	True				
ANR	84570	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -u"" )"		84231	0					
ANR	84571	Callee	snprintf		84231	0					
ANR	84572	Identifier	snprintf		84231	0					
ANR	84573	ArgumentList	cmd + len		84231	1					
ANR	84574	Argument	cmd + len		84231	0					
ANR	84575	AdditiveExpression	cmd + len		84231	0		+			
ANR	84576	Identifier	cmd		84231	0					
ANR	84577	Identifier	len		84231	1					
ANR	84578	Argument	BUF_SIZE - len		84231	1					
ANR	84579	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84580	Identifier	BUF_SIZE		84231	0					
ANR	84581	Identifier	len		84231	1					
ANR	84582	Argument	""" -u"""		84231	2					
ANR	84583	PrimaryExpression	""" -u"""		84231	0					
ANR	84584	IfStatement	if ( server -> fast_open [ 0 ] == 0 && manager -> fast_open )		84231	15					
ANR	84585	Condition	server -> fast_open [ 0 ] == 0 && manager -> fast_open	169:8:4946:4992	84231	0	True				
ANR	84586	AndExpression	server -> fast_open [ 0 ] == 0 && manager -> fast_open		84231	0		&&			
ANR	84587	EqualityExpression	server -> fast_open [ 0 ] == 0		84231	0		==			
ANR	84588	ArrayIndexing	server -> fast_open [ 0 ]		84231	0					
ANR	84589	PtrMemberAccess	server -> fast_open		84231	0					
ANR	84590	Identifier	server		84231	0					
ANR	84591	Identifier	fast_open		84231	1					
ANR	84592	PrimaryExpression	0		84231	1					
ANR	84593	PrimaryExpression	0		84231	1					
ANR	84594	PtrMemberAccess	manager -> fast_open		84231	1					
ANR	84595	Identifier	manager		84231	0					
ANR	84596	Identifier	fast_open		84231	1					
ANR	84597	CompoundStatement		46:8:1533:1554	84231	1					
ANR	84598	IdentifierDeclStatement	int len = strlen ( cmd ) ;	170:8:5005:5026	84231	0	True				
ANR	84599	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84600	IdentifierDeclType	int		84231	0					
ANR	84601	Identifier	len		84231	1					
ANR	84602	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84603	Identifier	len		84231	0					
ANR	84604	CallExpression	strlen ( cmd )		84231	1					
ANR	84605	Callee	strlen		84231	0					
ANR	84606	Identifier	strlen		84231	0					
ANR	84607	ArgumentList	cmd		84231	1					
ANR	84608	Argument	cmd		84231	0					
ANR	84609	Identifier	cmd		84231	0					
ANR	84610	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" --fast-open"" )"	171:8:5036:5087	84231	1	True				
ANR	84611	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" --fast-open"" )"		84231	0					
ANR	84612	Callee	snprintf		84231	0					
ANR	84613	Identifier	snprintf		84231	0					
ANR	84614	ArgumentList	cmd + len		84231	1					
ANR	84615	Argument	cmd + len		84231	0					
ANR	84616	AdditiveExpression	cmd + len		84231	0		+			
ANR	84617	Identifier	cmd		84231	0					
ANR	84618	Identifier	len		84231	1					
ANR	84619	Argument	BUF_SIZE - len		84231	1					
ANR	84620	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84621	Identifier	BUF_SIZE		84231	0					
ANR	84622	Identifier	len		84231	1					
ANR	84623	Argument	""" --fast-open"""		84231	2					
ANR	84624	PrimaryExpression	""" --fast-open"""		84231	0					
ANR	84625	IfStatement	if ( manager -> ipv6first )		84231	16					
ANR	84626	Condition	manager -> ipv6first	173:8:5103:5120	84231	0	True				
ANR	84627	PtrMemberAccess	manager -> ipv6first		84231	0					
ANR	84628	Identifier	manager		84231	0					
ANR	84629	Identifier	ipv6first		84231	1					
ANR	84630	CompoundStatement		50:8:1661:1682	84231	1					
ANR	84631	IdentifierDeclStatement	int len = strlen ( cmd ) ;	174:8:5133:5154	84231	0	True				
ANR	84632	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84633	IdentifierDeclType	int		84231	0					
ANR	84634	Identifier	len		84231	1					
ANR	84635	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84636	Identifier	len		84231	0					
ANR	84637	CallExpression	strlen ( cmd )		84231	1					
ANR	84638	Callee	strlen		84231	0					
ANR	84639	Identifier	strlen		84231	0					
ANR	84640	ArgumentList	cmd		84231	1					
ANR	84641	Argument	cmd		84231	0					
ANR	84642	Identifier	cmd		84231	0					
ANR	84643	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -6"" )"	175:8:5164:5206	84231	1	True				
ANR	84644	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -6"" )"		84231	0					
ANR	84645	Callee	snprintf		84231	0					
ANR	84646	Identifier	snprintf		84231	0					
ANR	84647	ArgumentList	cmd + len		84231	1					
ANR	84648	Argument	cmd + len		84231	0					
ANR	84649	AdditiveExpression	cmd + len		84231	0		+			
ANR	84650	Identifier	cmd		84231	0					
ANR	84651	Identifier	len		84231	1					
ANR	84652	Argument	BUF_SIZE - len		84231	1					
ANR	84653	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84654	Identifier	BUF_SIZE		84231	0					
ANR	84655	Identifier	len		84231	1					
ANR	84656	Argument	""" -6"""		84231	2					
ANR	84657	PrimaryExpression	""" -6"""		84231	0					
ANR	84658	IfStatement	if ( manager -> mtu )		84231	17					
ANR	84659	Condition	manager -> mtu	177:8:5222:5233	84231	0	True				
ANR	84660	PtrMemberAccess	manager -> mtu		84231	0					
ANR	84661	Identifier	manager		84231	0					
ANR	84662	Identifier	mtu		84231	1					
ANR	84663	CompoundStatement		54:8:1774:1795	84231	1					
ANR	84664	IdentifierDeclStatement	int len = strlen ( cmd ) ;	178:8:5246:5267	84231	0	True				
ANR	84665	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84666	IdentifierDeclType	int		84231	0					
ANR	84667	Identifier	len		84231	1					
ANR	84668	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84669	Identifier	len		84231	0					
ANR	84670	CallExpression	strlen ( cmd )		84231	1					
ANR	84671	Callee	strlen		84231	0					
ANR	84672	Identifier	strlen		84231	0					
ANR	84673	ArgumentList	cmd		84231	1					
ANR	84674	Argument	cmd		84231	0					
ANR	84675	Identifier	cmd		84231	0					
ANR	84676	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" --mtu %d"" , manager -> mtu )"	179:8:5277:5339	84231	1	True				
ANR	84677	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" --mtu %d"" , manager -> mtu )"		84231	0					
ANR	84678	Callee	snprintf		84231	0					
ANR	84679	Identifier	snprintf		84231	0					
ANR	84680	ArgumentList	cmd + len		84231	1					
ANR	84681	Argument	cmd + len		84231	0					
ANR	84682	AdditiveExpression	cmd + len		84231	0		+			
ANR	84683	Identifier	cmd		84231	0					
ANR	84684	Identifier	len		84231	1					
ANR	84685	Argument	BUF_SIZE - len		84231	1					
ANR	84686	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84687	Identifier	BUF_SIZE		84231	0					
ANR	84688	Identifier	len		84231	1					
ANR	84689	Argument	""" --mtu %d"""		84231	2					
ANR	84690	PrimaryExpression	""" --mtu %d"""		84231	0					
ANR	84691	Argument	manager -> mtu		84231	3					
ANR	84692	PtrMemberAccess	manager -> mtu		84231	0					
ANR	84693	Identifier	manager		84231	0					
ANR	84694	Identifier	mtu		84231	1					
ANR	84695	IfStatement	if ( server -> plugin == NULL && manager -> plugin )		84231	18					
ANR	84696	Condition	server -> plugin == NULL && manager -> plugin	181:8:5355:5395	84231	0	True				
ANR	84697	AndExpression	server -> plugin == NULL && manager -> plugin		84231	0		&&			
ANR	84698	EqualityExpression	server -> plugin == NULL		84231	0		==			
ANR	84699	PtrMemberAccess	server -> plugin		84231	0					
ANR	84700	Identifier	server		84231	0					
ANR	84701	Identifier	plugin		84231	1					
ANR	84702	Identifier	NULL		84231	1					
ANR	84703	PtrMemberAccess	manager -> plugin		84231	1					
ANR	84704	Identifier	manager		84231	0					
ANR	84705	Identifier	plugin		84231	1					
ANR	84706	CompoundStatement		58:8:1936:1957	84231	1					
ANR	84707	IdentifierDeclStatement	int len = strlen ( cmd ) ;	182:8:5408:5429	84231	0	True				
ANR	84708	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84709	IdentifierDeclType	int		84231	0					
ANR	84710	Identifier	len		84231	1					
ANR	84711	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84712	Identifier	len		84231	0					
ANR	84713	CallExpression	strlen ( cmd )		84231	1					
ANR	84714	Callee	strlen		84231	0					
ANR	84715	Identifier	strlen		84231	0					
ANR	84716	ArgumentList	cmd		84231	1					
ANR	84717	Argument	cmd		84231	0					
ANR	84718	Identifier	cmd		84231	0					
ANR	84719	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" --plugin \\""%s\\"""" , manager -> plugin )"	183:8:5439:5511	84231	1	True				
ANR	84720	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" --plugin \\""%s\\"""" , manager -> plugin )"		84231	0					
ANR	84721	Callee	snprintf		84231	0					
ANR	84722	Identifier	snprintf		84231	0					
ANR	84723	ArgumentList	cmd + len		84231	1					
ANR	84724	Argument	cmd + len		84231	0					
ANR	84725	AdditiveExpression	cmd + len		84231	0		+			
ANR	84726	Identifier	cmd		84231	0					
ANR	84727	Identifier	len		84231	1					
ANR	84728	Argument	BUF_SIZE - len		84231	1					
ANR	84729	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84730	Identifier	BUF_SIZE		84231	0					
ANR	84731	Identifier	len		84231	1					
ANR	84732	Argument	""" --plugin \\""%s\\"""""		84231	2					
ANR	84733	PrimaryExpression	""" --plugin \\""%s\\"""""		84231	0					
ANR	84734	Argument	manager -> plugin		84231	3					
ANR	84735	PtrMemberAccess	manager -> plugin		84231	0					
ANR	84736	Identifier	manager		84231	0					
ANR	84737	Identifier	plugin		84231	1					
ANR	84738	IfStatement	if ( server -> plugin_opts == NULL && manager -> plugin_opts )		84231	19					
ANR	84739	Condition	server -> plugin_opts == NULL && manager -> plugin_opts	185:8:5527:5577	84231	0	True				
ANR	84740	AndExpression	server -> plugin_opts == NULL && manager -> plugin_opts		84231	0		&&			
ANR	84741	EqualityExpression	server -> plugin_opts == NULL		84231	0		==			
ANR	84742	PtrMemberAccess	server -> plugin_opts		84231	0					
ANR	84743	Identifier	server		84231	0					
ANR	84744	Identifier	plugin_opts		84231	1					
ANR	84745	Identifier	NULL		84231	1					
ANR	84746	PtrMemberAccess	manager -> plugin_opts		84231	1					
ANR	84747	Identifier	manager		84231	0					
ANR	84748	Identifier	plugin_opts		84231	1					
ANR	84749	CompoundStatement		62:8:2118:2139	84231	1					
ANR	84750	IdentifierDeclStatement	int len = strlen ( cmd ) ;	186:8:5590:5611	84231	0	True				
ANR	84751	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84752	IdentifierDeclType	int		84231	0					
ANR	84753	Identifier	len		84231	1					
ANR	84754	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84755	Identifier	len		84231	0					
ANR	84756	CallExpression	strlen ( cmd )		84231	1					
ANR	84757	Callee	strlen		84231	0					
ANR	84758	Identifier	strlen		84231	0					
ANR	84759	ArgumentList	cmd		84231	1					
ANR	84760	Argument	cmd		84231	0					
ANR	84761	Identifier	cmd		84231	0					
ANR	84762	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" --plugin-opts \\""%s\\"""" , manager -> plugin_opts )"	187:8:5621:5703	84231	1	True				
ANR	84763	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" --plugin-opts \\""%s\\"""" , manager -> plugin_opts )"		84231	0					
ANR	84764	Callee	snprintf		84231	0					
ANR	84765	Identifier	snprintf		84231	0					
ANR	84766	ArgumentList	cmd + len		84231	1					
ANR	84767	Argument	cmd + len		84231	0					
ANR	84768	AdditiveExpression	cmd + len		84231	0		+			
ANR	84769	Identifier	cmd		84231	0					
ANR	84770	Identifier	len		84231	1					
ANR	84771	Argument	BUF_SIZE - len		84231	1					
ANR	84772	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84773	Identifier	BUF_SIZE		84231	0					
ANR	84774	Identifier	len		84231	1					
ANR	84775	Argument	""" --plugin-opts \\""%s\\"""""		84231	2					
ANR	84776	PrimaryExpression	""" --plugin-opts \\""%s\\"""""		84231	0					
ANR	84777	Argument	manager -> plugin_opts		84231	3					
ANR	84778	PtrMemberAccess	manager -> plugin_opts		84231	0					
ANR	84779	Identifier	manager		84231	0					
ANR	84780	Identifier	plugin_opts		84231	1					
ANR	84781	ForStatement	for ( i = 0 ; i < manager -> nameserver_num ; i ++ )		84231	20					
ANR	84782	ForInit	i = 0 ;	189:9:5720:5725	84231	0	True				
ANR	84783	AssignmentExpression	i = 0		84231	0		=			
ANR	84784	Identifier	i		84231	0					
ANR	84785	PrimaryExpression	0		84231	1					
ANR	84786	Condition	i < manager -> nameserver_num	189:16:5727:5753	84231	1	True				
ANR	84787	RelationalExpression	i < manager -> nameserver_num		84231	0		<			
ANR	84788	Identifier	i		84231	0					
ANR	84789	PtrMemberAccess	manager -> nameserver_num		84231	1					
ANR	84790	Identifier	manager		84231	0					
ANR	84791	Identifier	nameserver_num		84231	1					
ANR	84792	PostIncDecOperationExpression	i ++	189:45:5756:5758	84231	2	True				
ANR	84793	Identifier	i		84231	0					
ANR	84794	IncDec	++		84231	1					
ANR	84795	CompoundStatement		66:8:2299:2320	84231	3					
ANR	84796	IdentifierDeclStatement	int len = strlen ( cmd ) ;	190:8:5771:5792	84231	0	True				
ANR	84797	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84798	IdentifierDeclType	int		84231	0					
ANR	84799	Identifier	len		84231	1					
ANR	84800	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84801	Identifier	len		84231	0					
ANR	84802	CallExpression	strlen ( cmd )		84231	1					
ANR	84803	Callee	strlen		84231	0					
ANR	84804	Identifier	strlen		84231	0					
ANR	84805	ArgumentList	cmd		84231	1					
ANR	84806	Argument	cmd		84231	0					
ANR	84807	Identifier	cmd		84231	0					
ANR	84808	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -d %s"" , manager -> nameservers [ i ] )"	191:8:5802:5872	84231	1	True				
ANR	84809	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -d %s"" , manager -> nameservers [ i ] )"		84231	0					
ANR	84810	Callee	snprintf		84231	0					
ANR	84811	Identifier	snprintf		84231	0					
ANR	84812	ArgumentList	cmd + len		84231	1					
ANR	84813	Argument	cmd + len		84231	0					
ANR	84814	AdditiveExpression	cmd + len		84231	0		+			
ANR	84815	Identifier	cmd		84231	0					
ANR	84816	Identifier	len		84231	1					
ANR	84817	Argument	BUF_SIZE - len		84231	1					
ANR	84818	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84819	Identifier	BUF_SIZE		84231	0					
ANR	84820	Identifier	len		84231	1					
ANR	84821	Argument	""" -d %s"""		84231	2					
ANR	84822	PrimaryExpression	""" -d %s"""		84231	0					
ANR	84823	Argument	manager -> nameservers [ i ]		84231	3					
ANR	84824	ArrayIndexing	manager -> nameservers [ i ]		84231	0					
ANR	84825	PtrMemberAccess	manager -> nameservers		84231	0					
ANR	84826	Identifier	manager		84231	0					
ANR	84827	Identifier	nameservers		84231	1					
ANR	84828	Identifier	i		84231	1					
ANR	84829	ForStatement	for ( i = 0 ; i < manager -> host_num ; i ++ )		84231	21					
ANR	84830	ForInit	i = 0 ;	193:9:5889:5894	84231	0	True				
ANR	84831	AssignmentExpression	i = 0		84231	0		=			
ANR	84832	Identifier	i		84231	0					
ANR	84833	PrimaryExpression	0		84231	1					
ANR	84834	Condition	i < manager -> host_num	193:16:5896:5916	84231	1	True				
ANR	84835	RelationalExpression	i < manager -> host_num		84231	0		<			
ANR	84836	Identifier	i		84231	0					
ANR	84837	PtrMemberAccess	manager -> host_num		84231	1					
ANR	84838	Identifier	manager		84231	0					
ANR	84839	Identifier	host_num		84231	1					
ANR	84840	PostIncDecOperationExpression	i ++	193:39:5919:5921	84231	2	True				
ANR	84841	Identifier	i		84231	0					
ANR	84842	IncDec	++		84231	1					
ANR	84843	CompoundStatement		70:8:2462:2483	84231	3					
ANR	84844	IdentifierDeclStatement	int len = strlen ( cmd ) ;	194:8:5934:5955	84231	0	True				
ANR	84845	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84846	IdentifierDeclType	int		84231	0					
ANR	84847	Identifier	len		84231	1					
ANR	84848	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84849	Identifier	len		84231	0					
ANR	84850	CallExpression	strlen ( cmd )		84231	1					
ANR	84851	Callee	strlen		84231	0					
ANR	84852	Identifier	strlen		84231	0					
ANR	84853	ArgumentList	cmd		84231	1					
ANR	84854	Argument	cmd		84231	0					
ANR	84855	Identifier	cmd		84231	0					
ANR	84856	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" -s %s"" , manager -> hosts [ i ] )"	195:8:5965:6029	84231	1	True				
ANR	84857	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" -s %s"" , manager -> hosts [ i ] )"		84231	0					
ANR	84858	Callee	snprintf		84231	0					
ANR	84859	Identifier	snprintf		84231	0					
ANR	84860	ArgumentList	cmd + len		84231	1					
ANR	84861	Argument	cmd + len		84231	0					
ANR	84862	AdditiveExpression	cmd + len		84231	0		+			
ANR	84863	Identifier	cmd		84231	0					
ANR	84864	Identifier	len		84231	1					
ANR	84865	Argument	BUF_SIZE - len		84231	1					
ANR	84866	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84867	Identifier	BUF_SIZE		84231	0					
ANR	84868	Identifier	len		84231	1					
ANR	84869	Argument	""" -s %s"""		84231	2					
ANR	84870	PrimaryExpression	""" -s %s"""		84231	0					
ANR	84871	Argument	manager -> hosts [ i ]		84231	3					
ANR	84872	ArrayIndexing	manager -> hosts [ i ]		84231	0					
ANR	84873	PtrMemberAccess	manager -> hosts		84231	0					
ANR	84874	Identifier	manager		84231	0					
ANR	84875	Identifier	hosts		84231	1					
ANR	84876	Identifier	i		84231	1					
ANR	84877	CompoundStatement		75:8:2611:2632	84231	22					
ANR	84878	IdentifierDeclStatement	int len = strlen ( cmd ) ;	199:8:6083:6104	84231	0	True				
ANR	84879	IdentifierDecl	len = strlen ( cmd )		84231	0					
ANR	84880	IdentifierDeclType	int		84231	0					
ANR	84881	Identifier	len		84231	1					
ANR	84882	AssignmentExpression	len = strlen ( cmd )		84231	2		=			
ANR	84883	Identifier	len		84231	0					
ANR	84884	CallExpression	strlen ( cmd )		84231	1					
ANR	84885	Callee	strlen		84231	0					
ANR	84886	Identifier	strlen		84231	0					
ANR	84887	ArgumentList	cmd		84231	1					
ANR	84888	Argument	cmd		84231	0					
ANR	84889	Identifier	cmd		84231	0					
ANR	84890	ExpressionStatement	"snprintf ( cmd + len , BUF_SIZE - len , "" --reuse-port"" )"	200:8:6114:6166	84231	1	True				
ANR	84891	CallExpression	"snprintf ( cmd + len , BUF_SIZE - len , "" --reuse-port"" )"		84231	0					
ANR	84892	Callee	snprintf		84231	0					
ANR	84893	Identifier	snprintf		84231	0					
ANR	84894	ArgumentList	cmd + len		84231	1					
ANR	84895	Argument	cmd + len		84231	0					
ANR	84896	AdditiveExpression	cmd + len		84231	0		+			
ANR	84897	Identifier	cmd		84231	0					
ANR	84898	Identifier	len		84231	1					
ANR	84899	Argument	BUF_SIZE - len		84231	1					
ANR	84900	AdditiveExpression	BUF_SIZE - len		84231	0		-			
ANR	84901	Identifier	BUF_SIZE		84231	0					
ANR	84902	Identifier	len		84231	1					
ANR	84903	Argument	""" --reuse-port"""		84231	2					
ANR	84904	PrimaryExpression	""" --reuse-port"""		84231	0					
ANR	84905	IfStatement	if ( verbose )		84231	23					
ANR	84906	Condition	verbose	203:8:6183:6189	84231	0	True				
ANR	84907	Identifier	verbose		84231	0					
ANR	84908	CompoundStatement		79:17:2720:2720	84231	1					
ANR	84909	ExpressionStatement	"LOGI ( ""cmd: %s"" , cmd )"	204:8:6202:6222	84231	0	True				
ANR	84910	CallExpression	"LOGI ( ""cmd: %s"" , cmd )"		84231	0					
ANR	84911	Callee	LOGI		84231	0					
ANR	84912	Identifier	LOGI		84231	0					
ANR	84913	ArgumentList	"""cmd: %s"""		84231	1					
ANR	84914	Argument	"""cmd: %s"""		84231	0					
ANR	84915	PrimaryExpression	"""cmd: %s"""		84231	0					
ANR	84916	Argument	cmd		84231	1					
ANR	84917	Identifier	cmd		84231	0					
ANR	84918	ReturnStatement	return cmd ;	207:4:6235:6245	84231	24	True				
ANR	84919	Identifier	cmd		84231	0					
ANR	84920	ReturnType	static char *		84231	1					
ANR	84921	Identifier	construct_command_line		84231	2					
ANR	84922	ParameterList	"struct manager_ctx * manager , struct server * server"		84231	3					
ANR	84923	Parameter	struct manager_ctx * manager	124:23:3419:3445	84231	0	True				
ANR	84924	ParameterType	struct manager_ctx *		84231	0					
ANR	84925	Identifier	manager		84231	1					
ANR	84926	Parameter	struct server * server	124:52:3448:3468	84231	1	True				
ANR	84927	ParameterType	struct server *		84231	0					
ANR	84928	Identifier	server		84231	1					
ANR	84929	CFGEntryNode	ENTRY		84231		True				
ANR	84930	CFGExitNode	EXIT		84231		True				
ANR	84931	Symbol	manager -> acl		84231						
ANR	84932	Symbol	server		84231						
ANR	84933	Symbol	* server		84231						
ANR	84934	Symbol	manager -> manager_address		84231						
ANR	84935	Symbol	UDP_ONLY		84231						
ANR	84936	Symbol	server -> fast_open		84231						
ANR	84937	Symbol	working_dir		84231						
ANR	84938	Symbol	server -> plugin_opts		84231						
ANR	84939	Symbol	manager -> user		84231						
ANR	84940	Symbol	manager -> nofile		84231						
ANR	84941	Symbol	manager -> ipv6first		84231						
ANR	84942	Symbol	strlen		84231						
ANR	84943	Symbol	manager -> plugin		84231						
ANR	84944	Symbol	manager -> nameservers		84231						
ANR	84945	Symbol	len		84231						
ANR	84946	Symbol	* server -> fast_open		84231						
ANR	84947	Symbol	manager -> mode		84231						
ANR	84948	Symbol	* manager -> hosts		84231						
ANR	84949	Symbol	manager -> host_num		84231						
ANR	84950	Symbol	server -> port		84231						
ANR	84951	Symbol	* * manager		84231						
ANR	84952	Symbol	server -> plugin		84231						
ANR	84953	Symbol	* manager		84231						
ANR	84954	Symbol	manager -> verbose		84231						
ANR	84955	Symbol	NULL		84231						
ANR	84956	Symbol	manager		84231						
ANR	84957	Symbol	method		84231						
ANR	84958	Symbol	manager -> method		84231						
ANR	84959	Symbol	manager -> hosts		84231						
ANR	84960	Symbol	i		84231						
ANR	84961	Symbol	manager -> fast_open		84231						
ANR	84962	Symbol	server -> method		84231						
ANR	84963	Symbol	executable		84231						
ANR	84964	Symbol	manager -> plugin_opts		84231						
ANR	84965	Symbol	verbose		84231						
ANR	84966	Symbol	manager -> nameserver_num		84231						
ANR	84967	Symbol	* manager -> nameservers		84231						
ANR	84968	Symbol	* i		84231						
ANR	84969	Symbol	TCP_AND_UDP		84231						
ANR	84970	Symbol	BUF_SIZE		84231						
ANR	84971	Symbol	server -> mode		84231						
ANR	84972	Symbol	* * server		84231						
ANR	84973	Symbol	cmd		84231						
ANR	84974	Symbol	manager -> mtu		84231						
ANR	84975	Symbol	manager -> timeout		84231						
ANR	84976	Function	get_data	210:0:6250:6478							
ANR	84977	FunctionDef	"get_data (char * buf , int len)"		84976	0					
ANR	84978	CompoundStatement		212:0:6293:6478	84976	0					
ANR	84979	IdentifierDeclStatement	char * data ;	213:4:6299:6309	84976	0	True				
ANR	84980	IdentifierDecl	* data		84976	0					
ANR	84981	IdentifierDeclType	char *		84976	0					
ANR	84982	Identifier	data		84976	1					
ANR	84983	IdentifierDeclStatement	int pos = 0 ;	214:4:6315:6326	84976	1	True				
ANR	84984	IdentifierDecl	pos = 0		84976	0					
ANR	84985	IdentifierDeclType	int		84976	0					
ANR	84986	Identifier	pos		84976	1					
ANR	84987	AssignmentExpression	pos = 0		84976	2		=			
ANR	84988	Identifier	pos		84976	0					
ANR	84989	PrimaryExpression	0		84976	1					
ANR	84990	WhileStatement	while ( pos < len && buf [ pos ] != '{' )		84976	2					
ANR	84991	Condition	pos < len && buf [ pos ] != '{'	216:11:6340:6367	84976	0	True				
ANR	84992	AndExpression	pos < len && buf [ pos ] != '{'		84976	0		&&			
ANR	84993	RelationalExpression	pos < len		84976	0		<			
ANR	84994	Identifier	pos		84976	0					
ANR	84995	Identifier	len		84976	1					
ANR	84996	EqualityExpression	buf [ pos ] != '{'		84976	1		!=			
ANR	84997	ArrayIndexing	buf [ pos ]		84976	0					
ANR	84998	Identifier	buf		84976	0					
ANR	84999	Identifier	pos		84976	1					
ANR	85000	PrimaryExpression	'{'		84976	1					
ANR	85001	ExpressionStatement	pos ++	217:8:6378:6383	84976	1	True				
ANR	85002	PostIncDecOperationExpression	pos ++		84976	0					
ANR	85003	Identifier	pos		84976	0					
ANR	85004	IncDec	++		84976	1					
ANR	85005	IfStatement	if ( pos == len )		84976	3					
ANR	85006	Condition	pos == len	218:8:6393:6402	84976	0	True				
ANR	85007	EqualityExpression	pos == len		84976	0		==			
ANR	85008	Identifier	pos		84976	0					
ANR	85009	Identifier	len		84976	1					
ANR	85010	CompoundStatement		7:20:111:111	84976	1					
ANR	85011	ReturnStatement	return NULL ;	219:8:6415:6426	84976	0	True				
ANR	85012	Identifier	NULL		84976	0					
ANR	85013	ExpressionStatement	data = buf + pos - 1	221:4:6438:6458	84976	4	True				
ANR	85014	AssignmentExpression	data = buf + pos - 1		84976	0		=			
ANR	85015	Identifier	data		84976	0					
ANR	85016	AdditiveExpression	buf + pos - 1		84976	1		+			
ANR	85017	Identifier	buf		84976	0					
ANR	85018	AdditiveExpression	pos - 1		84976	1		-			
ANR	85019	Identifier	pos		84976	0					
ANR	85020	PrimaryExpression	1		84976	1					
ANR	85021	ReturnStatement	return data ;	223:4:6465:6476	84976	5	True				
ANR	85022	Identifier	data		84976	0					
ANR	85023	ReturnType	static char *		84976	1					
ANR	85024	Identifier	get_data		84976	2					
ANR	85025	ParameterList	"char * buf , int len"		84976	3					
ANR	85026	Parameter	char * buf	211:9:6273:6281	84976	0	True				
ANR	85027	ParameterType	char *		84976	0					
ANR	85028	Identifier	buf		84976	1					
ANR	85029	Parameter	int len	211:20:6284:6290	84976	1	True				
ANR	85030	ParameterType	int		84976	0					
ANR	85031	Identifier	len		84976	1					
ANR	85032	CFGEntryNode	ENTRY		84976		True				
ANR	85033	CFGExitNode	EXIT		84976		True				
ANR	85034	Symbol	buf		84976						
ANR	85035	Symbol	* buf		84976						
ANR	85036	Symbol	NULL		84976						
ANR	85037	Symbol	len		84976						
ANR	85038	Symbol	data		84976						
ANR	85039	Symbol	pos		84976						
ANR	85040	Symbol	* pos		84976						
ANR	85041	Function	get_action	226:0:6481:6847							
ANR	85042	FunctionDef	"get_action (char * buf , int len)"		85041	0					
ANR	85043	CompoundStatement		228:0:6526:6847	85041	0					
ANR	85044	IdentifierDeclStatement	char * action ;	229:4:6532:6544	85041	0	True				
ANR	85045	IdentifierDecl	* action		85041	0					
ANR	85046	IdentifierDeclType	char *		85041	0					
ANR	85047	Identifier	action		85041	1					
ANR	85048	IdentifierDeclStatement	int pos = 0 ;	230:4:6550:6561	85041	1	True				
ANR	85049	IdentifierDecl	pos = 0		85041	0					
ANR	85050	IdentifierDeclType	int		85041	0					
ANR	85051	Identifier	pos		85041	1					
ANR	85052	AssignmentExpression	pos = 0		85041	2		=			
ANR	85053	Identifier	pos		85041	0					
ANR	85054	PrimaryExpression	0		85041	1					
ANR	85055	WhileStatement	while ( pos < len && isspace ( ( unsigned char ) buf [ pos ] ) )		85041	2					
ANR	85056	Condition	pos < len && isspace ( ( unsigned char ) buf [ pos ] )	232:11:6575:6619	85041	0	True				
ANR	85057	AndExpression	pos < len && isspace ( ( unsigned char ) buf [ pos ] )		85041	0		&&			
ANR	85058	RelationalExpression	pos < len		85041	0		<			
ANR	85059	Identifier	pos		85041	0					
ANR	85060	Identifier	len		85041	1					
ANR	85061	CallExpression	isspace ( ( unsigned char ) buf [ pos ] )		85041	1					
ANR	85062	Callee	isspace		85041	0					
ANR	85063	Identifier	isspace		85041	0					
ANR	85064	ArgumentList	( unsigned char ) buf [ pos ]		85041	1					
ANR	85065	Argument	( unsigned char ) buf [ pos ]		85041	0					
ANR	85066	CastExpression	( unsigned char ) buf [ pos ]		85041	0					
ANR	85067	CastTarget	unsigned char		85041	0					
ANR	85068	ArrayIndexing	buf [ pos ]		85041	1					
ANR	85069	Identifier	buf		85041	0					
ANR	85070	Identifier	pos		85041	1					
ANR	85071	ExpressionStatement	pos ++	233:8:6630:6635	85041	1	True				
ANR	85072	PostIncDecOperationExpression	pos ++		85041	0					
ANR	85073	Identifier	pos		85041	0					
ANR	85074	IncDec	++		85041	1					
ANR	85075	IfStatement	if ( pos == len )		85041	3					
ANR	85076	Condition	pos == len	234:8:6645:6654	85041	0	True				
ANR	85077	EqualityExpression	pos == len		85041	0		==			
ANR	85078	Identifier	pos		85041	0					
ANR	85079	Identifier	len		85041	1					
ANR	85080	CompoundStatement		7:20:130:130	85041	1					
ANR	85081	ReturnStatement	return NULL ;	235:8:6667:6678	85041	0	True				
ANR	85082	Identifier	NULL		85041	0					
ANR	85083	ExpressionStatement	action = buf + pos	237:4:6690:6708	85041	4	True				
ANR	85084	AssignmentExpression	action = buf + pos		85041	0		=			
ANR	85085	Identifier	action		85041	0					
ANR	85086	AdditiveExpression	buf + pos		85041	1		+			
ANR	85087	Identifier	buf		85041	0					
ANR	85088	Identifier	pos		85041	1					
ANR	85089	WhileStatement	while ( pos < len && ( ! isspace ( ( unsigned char ) buf [ pos ] ) && buf [ pos ] != ':' ) )		85041	5					
ANR	85090	Condition	pos < len && ( ! isspace ( ( unsigned char ) buf [ pos ] ) && buf [ pos ] != ':' )	239:11:6722:6788	85041	0	True				
ANR	85091	AndExpression	pos < len && ( ! isspace ( ( unsigned char ) buf [ pos ] ) && buf [ pos ] != ':' )		85041	0		&&			
ANR	85092	RelationalExpression	pos < len		85041	0		<			
ANR	85093	Identifier	pos		85041	0					
ANR	85094	Identifier	len		85041	1					
ANR	85095	AndExpression	! isspace ( ( unsigned char ) buf [ pos ] ) && buf [ pos ] != ':'		85041	1		&&			
ANR	85096	UnaryOperationExpression	! isspace ( ( unsigned char ) buf [ pos ] )		85041	0					
ANR	85097	UnaryOperator	!		85041	0					
ANR	85098	CallExpression	isspace ( ( unsigned char ) buf [ pos ] )		85041	1					
ANR	85099	Callee	isspace		85041	0					
ANR	85100	Identifier	isspace		85041	0					
ANR	85101	ArgumentList	( unsigned char ) buf [ pos ]		85041	1					
ANR	85102	Argument	( unsigned char ) buf [ pos ]		85041	0					
ANR	85103	CastExpression	( unsigned char ) buf [ pos ]		85041	0					
ANR	85104	CastTarget	unsigned char		85041	0					
ANR	85105	ArrayIndexing	buf [ pos ]		85041	1					
ANR	85106	Identifier	buf		85041	0					
ANR	85107	Identifier	pos		85041	1					
ANR	85108	EqualityExpression	buf [ pos ] != ':'		85041	1		!=			
ANR	85109	ArrayIndexing	buf [ pos ]		85041	0					
ANR	85110	Identifier	buf		85041	0					
ANR	85111	Identifier	pos		85041	1					
ANR	85112	PrimaryExpression	':'		85041	1					
ANR	85113	ExpressionStatement	pos ++	240:8:6799:6804	85041	1	True				
ANR	85114	PostIncDecOperationExpression	pos ++		85041	0					
ANR	85115	Identifier	pos		85041	0					
ANR	85116	IncDec	++		85041	1					
ANR	85117	ExpressionStatement	buf [ pos ] = '\\0'	241:4:6810:6825	85041	6	True				
ANR	85118	AssignmentExpression	buf [ pos ] = '\\0'		85041	0		=			
ANR	85119	ArrayIndexing	buf [ pos ]		85041	0					
ANR	85120	Identifier	buf		85041	0					
ANR	85121	Identifier	pos		85041	1					
ANR	85122	PrimaryExpression	'\\0'		85041	1					
ANR	85123	ReturnStatement	return action ;	243:4:6832:6845	85041	7	True				
ANR	85124	Identifier	action		85041	0					
ANR	85125	ReturnType	static char *		85041	1					
ANR	85126	Identifier	get_action		85041	2					
ANR	85127	ParameterList	"char * buf , int len"		85041	3					
ANR	85128	Parameter	char * buf	227:11:6506:6514	85041	0	True				
ANR	85129	ParameterType	char *		85041	0					
ANR	85130	Identifier	buf		85041	1					
ANR	85131	Parameter	int len	227:22:6517:6523	85041	1	True				
ANR	85132	ParameterType	int		85041	0					
ANR	85133	Identifier	len		85041	1					
ANR	85134	CFGEntryNode	ENTRY		85041		True				
ANR	85135	CFGExitNode	EXIT		85041		True				
ANR	85136	Symbol	buf		85041						
ANR	85137	Symbol	* buf		85041						
ANR	85138	Symbol	NULL		85041						
ANR	85139	Symbol	len		85041						
ANR	85140	Symbol	pos		85041						
ANR	85141	Symbol	isspace		85041						
ANR	85142	Symbol	action		85041						
ANR	85143	Symbol	* pos		85041						
ANR	85144	Function	get_server	246:0:6850:9262							
ANR	85145	FunctionDef	"get_server (char * buf , int len)"		85144	0					
ANR	85146	CompoundStatement		248:0:6904:9262	85144	0					
ANR	85147	IdentifierDeclStatement	"char * data = get_data ( buf , len ) ;"	249:4:6910:6941	85144	0	True				
ANR	85148	IdentifierDecl	"* data = get_data ( buf , len )"		85144	0					
ANR	85149	IdentifierDeclType	char *		85144	0					
ANR	85150	Identifier	data		85144	1					
ANR	85151	AssignmentExpression	"* data = get_data ( buf , len )"		85144	2		=			
ANR	85152	Identifier	data		85144	0					
ANR	85153	CallExpression	"get_data ( buf , len )"		85144	1					
ANR	85154	Callee	get_data		85144	0					
ANR	85155	Identifier	get_data		85144	0					
ANR	85156	ArgumentList	buf		85144	1					
ANR	85157	Argument	buf		85144	0					
ANR	85158	Identifier	buf		85144	0					
ANR	85159	Argument	len		85144	1					
ANR	85160	Identifier	len		85144	0					
ANR	85161	IdentifierDeclStatement	char error_buf [ 512 ] ;	250:4:6947:6966	85144	1	True				
ANR	85162	IdentifierDecl	error_buf [ 512 ]		85144	0					
ANR	85163	IdentifierDeclType	char [ 512 ]		85144	0					
ANR	85164	Identifier	error_buf		85144	1					
ANR	85165	PrimaryExpression	512		85144	2					
ANR	85166	IfStatement	if ( data == NULL )		85144	2					
ANR	85167	Condition	data == NULL	252:8:6977:6988	85144	0	True				
ANR	85168	EqualityExpression	data == NULL		85144	0		==			
ANR	85169	Identifier	data		85144	0					
ANR	85170	Identifier	NULL		85144	1					
ANR	85171	CompoundStatement		5:22:86:86	85144	1					
ANR	85172	ExpressionStatement	"LOGE ( ""No data found"" )"	253:8:7001:7022	85144	0	True				
ANR	85173	CallExpression	"LOGE ( ""No data found"" )"		85144	0					
ANR	85174	Callee	LOGE		85144	0					
ANR	85175	Identifier	LOGE		85144	0					
ANR	85176	ArgumentList	"""No data found"""		85144	1					
ANR	85177	Argument	"""No data found"""		85144	0					
ANR	85178	PrimaryExpression	"""No data found"""		85144	0					
ANR	85179	ReturnStatement	return NULL ;	254:8:7032:7043	85144	1	True				
ANR	85180	Identifier	NULL		85144	0					
ANR	85181	IdentifierDeclStatement	json_settings settings = { 0 } ;	257:4:7056:7086	85144	3	True				
ANR	85182	IdentifierDecl	settings = { 0 }		85144	0					
ANR	85183	IdentifierDeclType	json_settings		85144	0					
ANR	85184	Identifier	settings		85144	1					
ANR	85185	AssignmentExpression	settings = { 0 }		85144	2		=			
ANR	85186	Identifier	settings		85144	0					
ANR	85187	InitializerList	0		85144	1					
ANR	85188	PrimaryExpression	0		85144	0					
ANR	85189	IdentifierDeclStatement	"json_value * obj = json_parse_ex ( & settings , data , strlen ( data ) , error_buf ) ;"	258:4:7092:7172	85144	4	True				
ANR	85190	IdentifierDecl	"* obj = json_parse_ex ( & settings , data , strlen ( data ) , error_buf )"		85144	0					
ANR	85191	IdentifierDeclType	json_value *		85144	0					
ANR	85192	Identifier	obj		85144	1					
ANR	85193	AssignmentExpression	"* obj = json_parse_ex ( & settings , data , strlen ( data ) , error_buf )"		85144	2		=			
ANR	85194	Identifier	obj		85144	0					
ANR	85195	CallExpression	"json_parse_ex ( & settings , data , strlen ( data ) , error_buf )"		85144	1					
ANR	85196	Callee	json_parse_ex		85144	0					
ANR	85197	Identifier	json_parse_ex		85144	0					
ANR	85198	ArgumentList	& settings		85144	1					
ANR	85199	Argument	& settings		85144	0					
ANR	85200	UnaryOperationExpression	& settings		85144	0					
ANR	85201	UnaryOperator	&		85144	0					
ANR	85202	Identifier	settings		85144	1					
ANR	85203	Argument	data		85144	1					
ANR	85204	Identifier	data		85144	0					
ANR	85205	Argument	strlen ( data )		85144	2					
ANR	85206	CallExpression	strlen ( data )		85144	0					
ANR	85207	Callee	strlen		85144	0					
ANR	85208	Identifier	strlen		85144	0					
ANR	85209	ArgumentList	data		85144	1					
ANR	85210	Argument	data		85144	0					
ANR	85211	Identifier	data		85144	0					
ANR	85212	Argument	error_buf		85144	3					
ANR	85213	Identifier	error_buf		85144	0					
ANR	85214	IfStatement	if ( obj == NULL )		85144	5					
ANR	85215	Condition	obj == NULL	260:8:7183:7193	85144	0	True				
ANR	85216	EqualityExpression	obj == NULL		85144	0		==			
ANR	85217	Identifier	obj		85144	0					
ANR	85218	Identifier	NULL		85144	1					
ANR	85219	CompoundStatement		13:21:291:291	85144	1					
ANR	85220	ExpressionStatement	"LOGE ( ""%s"" , error_buf )"	261:8:7206:7227	85144	0	True				
ANR	85221	CallExpression	"LOGE ( ""%s"" , error_buf )"		85144	0					
ANR	85222	Callee	LOGE		85144	0					
ANR	85223	Identifier	LOGE		85144	0					
ANR	85224	ArgumentList	"""%s"""		85144	1					
ANR	85225	Argument	"""%s"""		85144	0					
ANR	85226	PrimaryExpression	"""%s"""		85144	0					
ANR	85227	Argument	error_buf		85144	1					
ANR	85228	Identifier	error_buf		85144	0					
ANR	85229	ReturnStatement	return NULL ;	262:8:7237:7248	85144	1	True				
ANR	85230	Identifier	NULL		85144	0					
ANR	85231	IdentifierDeclStatement	struct server * server = ss_malloc ( sizeof ( struct server ) ) ;	265:4:7261:7317	85144	6	True				
ANR	85232	IdentifierDecl	* server = ss_malloc ( sizeof ( struct server ) )		85144	0					
ANR	85233	IdentifierDeclType	struct server *		85144	0					
ANR	85234	Identifier	server		85144	1					
ANR	85235	AssignmentExpression	* server = ss_malloc ( sizeof ( struct server ) )		85144	2		=			
ANR	85236	Identifier	server		85144	0					
ANR	85237	CallExpression	ss_malloc ( sizeof ( struct server ) )		85144	1					
ANR	85238	Callee	ss_malloc		85144	0					
ANR	85239	Identifier	ss_malloc		85144	0					
ANR	85240	ArgumentList	sizeof ( struct server )		85144	1					
ANR	85241	Argument	sizeof ( struct server )		85144	0					
ANR	85242	SizeofExpression	sizeof ( struct server )		85144	0					
ANR	85243	Sizeof	sizeof		85144	0					
ANR	85244	SizeofOperand	struct server		85144	1					
ANR	85245	ExpressionStatement	"memset ( server , 0 , sizeof ( struct server ) )"	266:4:7323:7363	85144	7	True				
ANR	85246	CallExpression	"memset ( server , 0 , sizeof ( struct server ) )"		85144	0					
ANR	85247	Callee	memset		85144	0					
ANR	85248	Identifier	memset		85144	0					
ANR	85249	ArgumentList	server		85144	1					
ANR	85250	Argument	server		85144	0					
ANR	85251	Identifier	server		85144	0					
ANR	85252	Argument	0		85144	1					
ANR	85253	PrimaryExpression	0		85144	0					
ANR	85254	Argument	sizeof ( struct server )		85144	2					
ANR	85255	SizeofExpression	sizeof ( struct server )		85144	0					
ANR	85256	Sizeof	sizeof		85144	0					
ANR	85257	SizeofOperand	struct server		85144	1					
ANR	85258	IfStatement	if ( obj -> type == json_object )		85144	8					
ANR	85259	Condition	obj -> type == json_object	267:8:7373:7396	85144	0	True				
ANR	85260	EqualityExpression	obj -> type == json_object		85144	0		==			
ANR	85261	PtrMemberAccess	obj -> type		85144	0					
ANR	85262	Identifier	obj		85144	0					
ANR	85263	Identifier	type		85144	1					
ANR	85264	Identifier	json_object		85144	1					
ANR	85265	CompoundStatement		21:8:504:513	85144	1					
ANR	85266	IdentifierDeclStatement	int i = 0 ;	268:8:7409:7418	85144	0	True				
ANR	85267	IdentifierDecl	i = 0		85144	0					
ANR	85268	IdentifierDeclType	int		85144	0					
ANR	85269	Identifier	i		85144	1					
ANR	85270	AssignmentExpression	i = 0		85144	2		=			
ANR	85271	Identifier	i		85144	0					
ANR	85272	PrimaryExpression	0		85144	1					
ANR	85273	ForStatement	for ( i = 0 ; i < obj -> u . object . length ; i ++ )		85144	1					
ANR	85274	ForInit	i = 0 ;	269:13:7433:7438	85144	0	True				
ANR	85275	AssignmentExpression	i = 0		85144	0		=			
ANR	85276	Identifier	i		85144	0					
ANR	85277	PrimaryExpression	0		85144	1					
ANR	85278	Condition	i < obj -> u . object . length	269:20:7440:7463	85144	1	True				
ANR	85279	RelationalExpression	i < obj -> u . object . length		85144	0		<			
ANR	85280	Identifier	i		85144	0					
ANR	85281	MemberAccess	obj -> u . object . length		85144	1					
ANR	85282	MemberAccess	obj -> u . object		85144	0					
ANR	85283	PtrMemberAccess	obj -> u		85144	0					
ANR	85284	Identifier	obj		85144	0					
ANR	85285	Identifier	u		85144	1					
ANR	85286	Identifier	object		85144	1					
ANR	85287	Identifier	length		85144	1					
ANR	85288	PostIncDecOperationExpression	i ++	269:46:7466:7468	85144	2	True				
ANR	85289	Identifier	i		85144	0					
ANR	85290	IncDec	++		85144	1					
ANR	85291	CompoundStatement		24:12:642:691	85144	3					
ANR	85292	IdentifierDeclStatement	char * name = obj -> u . object . values [ i ] . name ;	270:12:7485:7533	85144	0	True				
ANR	85293	IdentifierDecl	* name = obj -> u . object . values [ i ] . name		85144	0					
ANR	85294	IdentifierDeclType	char *		85144	0					
ANR	85295	Identifier	name		85144	1					
ANR	85296	AssignmentExpression	* name = obj -> u . object . values [ i ] . name		85144	2		=			
ANR	85297	Identifier	name		85144	0					
ANR	85298	MemberAccess	obj -> u . object . values [ i ] . name		85144	1					
ANR	85299	ArrayIndexing	obj -> u . object . values [ i ]		85144	0					
ANR	85300	MemberAccess	obj -> u . object . values		85144	0					
ANR	85301	MemberAccess	obj -> u . object		85144	0					
ANR	85302	PtrMemberAccess	obj -> u		85144	0					
ANR	85303	Identifier	obj		85144	0					
ANR	85304	Identifier	u		85144	1					
ANR	85305	Identifier	object		85144	1					
ANR	85306	Identifier	values		85144	1					
ANR	85307	Identifier	i		85144	1					
ANR	85308	Identifier	name		85144	1					
ANR	85309	IdentifierDeclStatement	json_value * value = obj -> u . object . values [ i ] . value ;	271:12:7547:7596	85144	1	True				
ANR	85310	IdentifierDecl	* value = obj -> u . object . values [ i ] . value		85144	0					
ANR	85311	IdentifierDeclType	json_value *		85144	0					
ANR	85312	Identifier	value		85144	1					
ANR	85313	AssignmentExpression	* value = obj -> u . object . values [ i ] . value		85144	2		=			
ANR	85314	Identifier	value		85144	0					
ANR	85315	MemberAccess	obj -> u . object . values [ i ] . value		85144	1					
ANR	85316	ArrayIndexing	obj -> u . object . values [ i ]		85144	0					
ANR	85317	MemberAccess	obj -> u . object . values		85144	0					
ANR	85318	MemberAccess	obj -> u . object		85144	0					
ANR	85319	PtrMemberAccess	obj -> u		85144	0					
ANR	85320	Identifier	obj		85144	0					
ANR	85321	Identifier	u		85144	1					
ANR	85322	Identifier	object		85144	1					
ANR	85323	Identifier	values		85144	1					
ANR	85324	Identifier	i		85144	1					
ANR	85325	Identifier	value		85144	1					
ANR	85326	IfStatement	"if ( strcmp ( name , ""server_port"" ) == 0 )"		85144	2					
ANR	85327	Condition	"strcmp ( name , ""server_port"" ) == 0"	272:16:7614:7645	85144	0	True				
ANR	85328	EqualityExpression	"strcmp ( name , ""server_port"" ) == 0"		85144	0		==			
ANR	85329	CallExpression	"strcmp ( name , ""server_port"" )"		85144	0					
ANR	85330	Callee	strcmp		85144	0					
ANR	85331	Identifier	strcmp		85144	0					
ANR	85332	ArgumentList	name		85144	1					
ANR	85333	Argument	name		85144	0					
ANR	85334	Identifier	name		85144	0					
ANR	85335	Argument	"""server_port"""		85144	1					
ANR	85336	PrimaryExpression	"""server_port"""		85144	0					
ANR	85337	PrimaryExpression	0		85144	1					
ANR	85338	CompoundStatement		25:50:743:743	85144	1					
ANR	85339	IfStatement	if ( value -> type == json_string )		85144	0					
ANR	85340	Condition	value -> type == json_string	273:20:7670:7695	85144	0	True				
ANR	85341	EqualityExpression	value -> type == json_string		85144	0		==			
ANR	85342	PtrMemberAccess	value -> type		85144	0					
ANR	85343	Identifier	value		85144	0					
ANR	85344	Identifier	type		85144	1					
ANR	85345	Identifier	json_string		85144	1					
ANR	85346	CompoundStatement		26:48:793:793	85144	1					
ANR	85347	ExpressionStatement	"strncpy ( server -> port , value -> u . string . ptr , 8 )"	274:20:7720:7765	85144	0	True				
ANR	85348	CallExpression	"strncpy ( server -> port , value -> u . string . ptr , 8 )"		85144	0					
ANR	85349	Callee	strncpy		85144	0					
ANR	85350	Identifier	strncpy		85144	0					
ANR	85351	ArgumentList	server -> port		85144	1					
ANR	85352	Argument	server -> port		85144	0					
ANR	85353	PtrMemberAccess	server -> port		85144	0					
ANR	85354	Identifier	server		85144	0					
ANR	85355	Identifier	port		85144	1					
ANR	85356	Argument	value -> u . string . ptr		85144	1					
ANR	85357	MemberAccess	value -> u . string . ptr		85144	0					
ANR	85358	MemberAccess	value -> u . string		85144	0					
ANR	85359	PtrMemberAccess	value -> u		85144	0					
ANR	85360	Identifier	value		85144	0					
ANR	85361	Identifier	u		85144	1					
ANR	85362	Identifier	string		85144	1					
ANR	85363	Identifier	ptr		85144	1					
ANR	85364	Argument	8		85144	2					
ANR	85365	PrimaryExpression	8		85144	0					
ANR	85366	ElseStatement	else		85144	0					
ANR	85367	IfStatement	if ( value -> type == json_integer )		85144	0					
ANR	85368	Condition	value -> type == json_integer	275:27:7794:7820	85144	0	True				
ANR	85369	EqualityExpression	value -> type == json_integer		85144	0		==			
ANR	85370	PtrMemberAccess	value -> type		85144	0					
ANR	85371	Identifier	value		85144	0					
ANR	85372	Identifier	type		85144	1					
ANR	85373	Identifier	json_integer		85144	1					
ANR	85374	CompoundStatement		28:56:918:918	85144	1					
ANR	85375	Statement	snprintf	276:20:7845:7852	85144	0	True				
ANR	85376	Statement	(	276:28:7853:7853	85144	1	True				
ANR	85377	Statement	server	276:29:7854:7859	85144	2	True				
ANR	85378	Statement	->	276:35:7860:7861	85144	3	True				
ANR	85379	Statement	port	276:37:7862:7865	85144	4	True				
ANR	85380	Statement	","	276:41:7866:7866	85144	5	True				
ANR	85381	Statement	8	276:43:7868:7868	85144	6	True				
ANR	85382	Statement	","	276:44:7869:7869	85144	7	True				
ANR	85383	Statement	"""%"""	276:46:7871:7873	85144	8	True				
ANR	85384	Statement	PRIu64	276:50:7875:7880	85144	9	True				
ANR	85385	Statement	""""""	276:57:7882:7883	85144	10	True				
ANR	85386	Statement	","	276:59:7884:7884	85144	11	True				
ANR	85387	Statement	value	276:61:7886:7890	85144	12	True				
ANR	85388	Statement	->	276:66:7891:7892	85144	13	True				
ANR	85389	Statement	u	276:68:7893:7893	85144	14	True				
ANR	85390	Statement	.	276:69:7894:7894	85144	15	True				
ANR	85391	Statement	integer	276:70:7895:7901	85144	16	True				
ANR	85392	Statement	)	276:77:7902:7902	85144	17	True				
ANR	85393	ExpressionStatement		276:78:7903:7903	85144	18	True				
ANR	85394	ElseStatement	else		85144	0					
ANR	85395	IfStatement	"if ( strcmp ( name , ""password"" ) == 0 )"		85144	0					
ANR	85396	Condition	"strcmp ( name , ""password"" ) == 0"	278:23:7946:7974	85144	0	True				
ANR	85397	EqualityExpression	"strcmp ( name , ""password"" ) == 0"		85144	0		==			
ANR	85398	CallExpression	"strcmp ( name , ""password"" )"		85144	0					
ANR	85399	Callee	strcmp		85144	0					
ANR	85400	Identifier	strcmp		85144	0					
ANR	85401	ArgumentList	name		85144	1					
ANR	85402	Argument	name		85144	0					
ANR	85403	Identifier	name		85144	0					
ANR	85404	Argument	"""password"""		85144	1					
ANR	85405	PrimaryExpression	"""password"""		85144	0					
ANR	85406	PrimaryExpression	0		85144	1					
ANR	85407	CompoundStatement		31:54:1072:1072	85144	1					
ANR	85408	IfStatement	if ( value -> type == json_string )		85144	0					
ANR	85409	Condition	value -> type == json_string	279:20:7999:8024	85144	0	True				
ANR	85410	EqualityExpression	value -> type == json_string		85144	0		==			
ANR	85411	PtrMemberAccess	value -> type		85144	0					
ANR	85412	Identifier	value		85144	0					
ANR	85413	Identifier	type		85144	1					
ANR	85414	Identifier	json_string		85144	1					
ANR	85415	CompoundStatement		32:48:1122:1122	85144	1					
ANR	85416	ExpressionStatement	"strncpy ( server -> password , value -> u . string . ptr , 128 )"	280:20:8049:8100	85144	0	True				
ANR	85417	CallExpression	"strncpy ( server -> password , value -> u . string . ptr , 128 )"		85144	0					
ANR	85418	Callee	strncpy		85144	0					
ANR	85419	Identifier	strncpy		85144	0					
ANR	85420	ArgumentList	server -> password		85144	1					
ANR	85421	Argument	server -> password		85144	0					
ANR	85422	PtrMemberAccess	server -> password		85144	0					
ANR	85423	Identifier	server		85144	0					
ANR	85424	Identifier	password		85144	1					
ANR	85425	Argument	value -> u . string . ptr		85144	1					
ANR	85426	MemberAccess	value -> u . string . ptr		85144	0					
ANR	85427	MemberAccess	value -> u . string		85144	0					
ANR	85428	PtrMemberAccess	value -> u		85144	0					
ANR	85429	Identifier	value		85144	0					
ANR	85430	Identifier	u		85144	1					
ANR	85431	Identifier	string		85144	1					
ANR	85432	Identifier	ptr		85144	1					
ANR	85433	Argument	128		85144	2					
ANR	85434	PrimaryExpression	128		85144	0					
ANR	85435	ElseStatement	else		85144	0					
ANR	85436	IfStatement	"if ( strcmp ( name , ""method"" ) == 0 )"		85144	0					
ANR	85437	Condition	"strcmp ( name , ""method"" ) == 0"	282:23:8143:8169	85144	0	True				
ANR	85438	EqualityExpression	"strcmp ( name , ""method"" ) == 0"		85144	0		==			
ANR	85439	CallExpression	"strcmp ( name , ""method"" )"		85144	0					
ANR	85440	Callee	strcmp		85144	0					
ANR	85441	Identifier	strcmp		85144	0					
ANR	85442	ArgumentList	name		85144	1					
ANR	85443	Argument	name		85144	0					
ANR	85444	Identifier	name		85144	0					
ANR	85445	Argument	"""method"""		85144	1					
ANR	85446	PrimaryExpression	"""method"""		85144	0					
ANR	85447	PrimaryExpression	0		85144	1					
ANR	85448	CompoundStatement		35:52:1267:1267	85144	1					
ANR	85449	IfStatement	if ( value -> type == json_string )		85144	0					
ANR	85450	Condition	value -> type == json_string	283:20:8194:8219	85144	0	True				
ANR	85451	EqualityExpression	value -> type == json_string		85144	0		==			
ANR	85452	PtrMemberAccess	value -> type		85144	0					
ANR	85453	Identifier	value		85144	0					
ANR	85454	Identifier	type		85144	1					
ANR	85455	Identifier	json_string		85144	1					
ANR	85456	CompoundStatement		36:48:1317:1317	85144	1					
ANR	85457	ExpressionStatement	server -> method = strdup ( value -> u . string . ptr )	284:20:8244:8288	85144	0	True				
ANR	85458	AssignmentExpression	server -> method = strdup ( value -> u . string . ptr )		85144	0		=			
ANR	85459	PtrMemberAccess	server -> method		85144	0					
ANR	85460	Identifier	server		85144	0					
ANR	85461	Identifier	method		85144	1					
ANR	85462	CallExpression	strdup ( value -> u . string . ptr )		85144	1					
ANR	85463	Callee	strdup		85144	0					
ANR	85464	Identifier	strdup		85144	0					
ANR	85465	ArgumentList	value -> u . string . ptr		85144	1					
ANR	85466	Argument	value -> u . string . ptr		85144	0					
ANR	85467	MemberAccess	value -> u . string . ptr		85144	0					
ANR	85468	MemberAccess	value -> u . string		85144	0					
ANR	85469	PtrMemberAccess	value -> u		85144	0					
ANR	85470	Identifier	value		85144	0					
ANR	85471	Identifier	u		85144	1					
ANR	85472	Identifier	string		85144	1					
ANR	85473	Identifier	ptr		85144	1					
ANR	85474	ElseStatement	else		85144	0					
ANR	85475	IfStatement	"if ( strcmp ( name , ""fast_open"" ) == 0 )"		85144	0					
ANR	85476	Condition	"strcmp ( name , ""fast_open"" ) == 0"	286:23:8331:8360	85144	0	True				
ANR	85477	EqualityExpression	"strcmp ( name , ""fast_open"" ) == 0"		85144	0		==			
ANR	85478	CallExpression	"strcmp ( name , ""fast_open"" )"		85144	0					
ANR	85479	Callee	strcmp		85144	0					
ANR	85480	Identifier	strcmp		85144	0					
ANR	85481	ArgumentList	name		85144	1					
ANR	85482	Argument	name		85144	0					
ANR	85483	Identifier	name		85144	0					
ANR	85484	Argument	"""fast_open"""		85144	1					
ANR	85485	PrimaryExpression	"""fast_open"""		85144	0					
ANR	85486	PrimaryExpression	0		85144	1					
ANR	85487	CompoundStatement		39:55:1458:1458	85144	1					
ANR	85488	IfStatement	if ( value -> type == json_boolean )		85144	0					
ANR	85489	Condition	value -> type == json_boolean	287:20:8385:8411	85144	0	True				
ANR	85490	EqualityExpression	value -> type == json_boolean		85144	0		==			
ANR	85491	PtrMemberAccess	value -> type		85144	0					
ANR	85492	Identifier	value		85144	0					
ANR	85493	Identifier	type		85144	1					
ANR	85494	Identifier	json_boolean		85144	1					
ANR	85495	CompoundStatement		40:49:1509:1509	85144	1					
ANR	85496	ExpressionStatement	"strncpy ( server -> fast_open , ( value -> u . boolean ? ""true"" : ""false"" ) , 8 )"	288:20:8436:8504	85144	0	True				
ANR	85497	CallExpression	"strncpy ( server -> fast_open , ( value -> u . boolean ? ""true"" : ""false"" ) , 8 )"		85144	0					
ANR	85498	Callee	strncpy		85144	0					
ANR	85499	Identifier	strncpy		85144	0					
ANR	85500	ArgumentList	server -> fast_open		85144	1					
ANR	85501	Argument	server -> fast_open		85144	0					
ANR	85502	PtrMemberAccess	server -> fast_open		85144	0					
ANR	85503	Identifier	server		85144	0					
ANR	85504	Identifier	fast_open		85144	1					
ANR	85505	Argument	"value -> u . boolean ? ""true"" : ""false"""		85144	1					
ANR	85506	ConditionalExpression	"value -> u . boolean ? ""true"" : ""false"""		85144	0					
ANR	85507	Condition	value -> u . boolean		85144	0					
ANR	85508	MemberAccess	value -> u . boolean		85144	0					
ANR	85509	PtrMemberAccess	value -> u		85144	0					
ANR	85510	Identifier	value		85144	0					
ANR	85511	Identifier	u		85144	1					
ANR	85512	Identifier	boolean		85144	1					
ANR	85513	PrimaryExpression	"""true"""		85144	1					
ANR	85514	PrimaryExpression	"""false"""		85144	2					
ANR	85515	Argument	8		85144	2					
ANR	85516	PrimaryExpression	8		85144	0					
ANR	85517	ElseStatement	else		85144	0					
ANR	85518	IfStatement	"if ( strcmp ( name , ""plugin"" ) == 0 )"		85144	0					
ANR	85519	Condition	"strcmp ( name , ""plugin"" ) == 0"	290:23:8547:8573	85144	0	True				
ANR	85520	EqualityExpression	"strcmp ( name , ""plugin"" ) == 0"		85144	0		==			
ANR	85521	CallExpression	"strcmp ( name , ""plugin"" )"		85144	0					
ANR	85522	Callee	strcmp		85144	0					
ANR	85523	Identifier	strcmp		85144	0					
ANR	85524	ArgumentList	name		85144	1					
ANR	85525	Argument	name		85144	0					
ANR	85526	Identifier	name		85144	0					
ANR	85527	Argument	"""plugin"""		85144	1					
ANR	85528	PrimaryExpression	"""plugin"""		85144	0					
ANR	85529	PrimaryExpression	0		85144	1					
ANR	85530	CompoundStatement		43:52:1671:1671	85144	1					
ANR	85531	IfStatement	if ( value -> type == json_string )		85144	0					
ANR	85532	Condition	value -> type == json_string	291:20:8598:8623	85144	0	True				
ANR	85533	EqualityExpression	value -> type == json_string		85144	0		==			
ANR	85534	PtrMemberAccess	value -> type		85144	0					
ANR	85535	Identifier	value		85144	0					
ANR	85536	Identifier	type		85144	1					
ANR	85537	Identifier	json_string		85144	1					
ANR	85538	CompoundStatement		44:48:1721:1721	85144	1					
ANR	85539	ExpressionStatement	server -> plugin = strdup ( value -> u . string . ptr )	292:20:8648:8692	85144	0	True				
ANR	85540	AssignmentExpression	server -> plugin = strdup ( value -> u . string . ptr )		85144	0		=			
ANR	85541	PtrMemberAccess	server -> plugin		85144	0					
ANR	85542	Identifier	server		85144	0					
ANR	85543	Identifier	plugin		85144	1					
ANR	85544	CallExpression	strdup ( value -> u . string . ptr )		85144	1					
ANR	85545	Callee	strdup		85144	0					
ANR	85546	Identifier	strdup		85144	0					
ANR	85547	ArgumentList	value -> u . string . ptr		85144	1					
ANR	85548	Argument	value -> u . string . ptr		85144	0					
ANR	85549	MemberAccess	value -> u . string . ptr		85144	0					
ANR	85550	MemberAccess	value -> u . string		85144	0					
ANR	85551	PtrMemberAccess	value -> u		85144	0					
ANR	85552	Identifier	value		85144	0					
ANR	85553	Identifier	u		85144	1					
ANR	85554	Identifier	string		85144	1					
ANR	85555	Identifier	ptr		85144	1					
ANR	85556	ElseStatement	else		85144	0					
ANR	85557	IfStatement	"if ( strcmp ( name , ""plugin_opts"" ) == 0 )"		85144	0					
ANR	85558	Condition	"strcmp ( name , ""plugin_opts"" ) == 0"	294:23:8735:8766	85144	0	True				
ANR	85559	EqualityExpression	"strcmp ( name , ""plugin_opts"" ) == 0"		85144	0		==			
ANR	85560	CallExpression	"strcmp ( name , ""plugin_opts"" )"		85144	0					
ANR	85561	Callee	strcmp		85144	0					
ANR	85562	Identifier	strcmp		85144	0					
ANR	85563	ArgumentList	name		85144	1					
ANR	85564	Argument	name		85144	0					
ANR	85565	Identifier	name		85144	0					
ANR	85566	Argument	"""plugin_opts"""		85144	1					
ANR	85567	PrimaryExpression	"""plugin_opts"""		85144	0					
ANR	85568	PrimaryExpression	0		85144	1					
ANR	85569	CompoundStatement		47:57:1864:1864	85144	1					
ANR	85570	IfStatement	if ( value -> type == json_string )		85144	0					
ANR	85571	Condition	value -> type == json_string	295:20:8791:8816	85144	0	True				
ANR	85572	EqualityExpression	value -> type == json_string		85144	0		==			
ANR	85573	PtrMemberAccess	value -> type		85144	0					
ANR	85574	Identifier	value		85144	0					
ANR	85575	Identifier	type		85144	1					
ANR	85576	Identifier	json_string		85144	1					
ANR	85577	CompoundStatement		48:48:1914:1914	85144	1					
ANR	85578	ExpressionStatement	server -> plugin_opts = strdup ( value -> u . string . ptr )	296:20:8841:8890	85144	0	True				
ANR	85579	AssignmentExpression	server -> plugin_opts = strdup ( value -> u . string . ptr )		85144	0		=			
ANR	85580	PtrMemberAccess	server -> plugin_opts		85144	0					
ANR	85581	Identifier	server		85144	0					
ANR	85582	Identifier	plugin_opts		85144	1					
ANR	85583	CallExpression	strdup ( value -> u . string . ptr )		85144	1					
ANR	85584	Callee	strdup		85144	0					
ANR	85585	Identifier	strdup		85144	0					
ANR	85586	ArgumentList	value -> u . string . ptr		85144	1					
ANR	85587	Argument	value -> u . string . ptr		85144	0					
ANR	85588	MemberAccess	value -> u . string . ptr		85144	0					
ANR	85589	MemberAccess	value -> u . string		85144	0					
ANR	85590	PtrMemberAccess	value -> u		85144	0					
ANR	85591	Identifier	value		85144	0					
ANR	85592	Identifier	u		85144	1					
ANR	85593	Identifier	string		85144	1					
ANR	85594	Identifier	ptr		85144	1					
ANR	85595	ElseStatement	else		85144	0					
ANR	85596	IfStatement	"if ( strcmp ( name , ""mode"" ) == 0 )"		85144	0					
ANR	85597	Condition	"strcmp ( name , ""mode"" ) == 0"	298:23:8933:8957	85144	0	True				
ANR	85598	EqualityExpression	"strcmp ( name , ""mode"" ) == 0"		85144	0		==			
ANR	85599	CallExpression	"strcmp ( name , ""mode"" )"		85144	0					
ANR	85600	Callee	strcmp		85144	0					
ANR	85601	Identifier	strcmp		85144	0					
ANR	85602	ArgumentList	name		85144	1					
ANR	85603	Argument	name		85144	0					
ANR	85604	Identifier	name		85144	0					
ANR	85605	Argument	"""mode"""		85144	1					
ANR	85606	PrimaryExpression	"""mode"""		85144	0					
ANR	85607	PrimaryExpression	0		85144	1					
ANR	85608	CompoundStatement		51:50:2055:2055	85144	1					
ANR	85609	IfStatement	if ( value -> type == json_string )		85144	0					
ANR	85610	Condition	value -> type == json_string	299:20:8982:9007	85144	0	True				
ANR	85611	EqualityExpression	value -> type == json_string		85144	0		==			
ANR	85612	PtrMemberAccess	value -> type		85144	0					
ANR	85613	Identifier	value		85144	0					
ANR	85614	Identifier	type		85144	1					
ANR	85615	Identifier	json_string		85144	1					
ANR	85616	CompoundStatement		52:48:2105:2105	85144	1					
ANR	85617	ExpressionStatement	server -> mode = strdup ( value -> u . string . ptr )	300:20:9032:9074	85144	0	True				
ANR	85618	AssignmentExpression	server -> mode = strdup ( value -> u . string . ptr )		85144	0		=			
ANR	85619	PtrMemberAccess	server -> mode		85144	0					
ANR	85620	Identifier	server		85144	0					
ANR	85621	Identifier	mode		85144	1					
ANR	85622	CallExpression	strdup ( value -> u . string . ptr )		85144	1					
ANR	85623	Callee	strdup		85144	0					
ANR	85624	Identifier	strdup		85144	0					
ANR	85625	ArgumentList	value -> u . string . ptr		85144	1					
ANR	85626	Argument	value -> u . string . ptr		85144	0					
ANR	85627	MemberAccess	value -> u . string . ptr		85144	0					
ANR	85628	MemberAccess	value -> u . string		85144	0					
ANR	85629	PtrMemberAccess	value -> u		85144	0					
ANR	85630	Identifier	value		85144	0					
ANR	85631	Identifier	u		85144	1					
ANR	85632	Identifier	string		85144	1					
ANR	85633	Identifier	ptr		85144	1					
ANR	85634	ElseStatement	else		85144	0					
ANR	85635	CompoundStatement		55:19:2208:2208	85144	0					
ANR	85636	ExpressionStatement	"LOGE ( ""invalid data: %s"" , data )"	303:16:9131:9161	85144	0	True				
ANR	85637	CallExpression	"LOGE ( ""invalid data: %s"" , data )"		85144	0					
ANR	85638	Callee	LOGE		85144	0					
ANR	85639	Identifier	LOGE		85144	0					
ANR	85640	ArgumentList	"""invalid data: %s"""		85144	1					
ANR	85641	Argument	"""invalid data: %s"""		85144	0					
ANR	85642	PrimaryExpression	"""invalid data: %s"""		85144	0					
ANR	85643	Argument	data		85144	1					
ANR	85644	Identifier	data		85144	0					
ANR	85645	BreakStatement	break ;	304:16:9179:9184	85144	1	True				
ANR	85646	ExpressionStatement	json_value_free ( obj )	309:4:9221:9241	85144	9	True				
ANR	85647	CallExpression	json_value_free ( obj )		85144	0					
ANR	85648	Callee	json_value_free		85144	0					
ANR	85649	Identifier	json_value_free		85144	0					
ANR	85650	ArgumentList	obj		85144	1					
ANR	85651	Argument	obj		85144	0					
ANR	85652	Identifier	obj		85144	0					
ANR	85653	ReturnStatement	return server ;	310:4:9247:9260	85144	10	True				
ANR	85654	Identifier	server		85144	0					
ANR	85655	ReturnType	static struct server *		85144	1					
ANR	85656	Identifier	get_server		85144	2					
ANR	85657	ParameterList	"char * buf , int len"		85144	3					
ANR	85658	Parameter	char * buf	247:11:6884:6892	85144	0	True				
ANR	85659	ParameterType	char *		85144	0					
ANR	85660	Identifier	buf		85144	1					
ANR	85661	Parameter	int len	247:22:6895:6901	85144	1	True				
ANR	85662	ParameterType	int		85144	0					
ANR	85663	Identifier	len		85144	1					
ANR	85664	CFGEntryNode	ENTRY		85144		True				
ANR	85665	CFGExitNode	EXIT		85144		True				
ANR	85666	Symbol	obj -> u . object . values [ i ] . value		85144						
ANR	85667	Symbol	data		85144						
ANR	85668	Symbol	server -> fast_open		85144						
ANR	85669	Symbol	server -> password		85144						
ANR	85670	Symbol	strlen		85144						
ANR	85671	Symbol	len		85144						
ANR	85672	Symbol	error_buf		85144						
ANR	85673	Symbol	* obj -> u		85144						
ANR	85674	Symbol	server -> port		85144						
ANR	85675	Symbol	server -> plugin		85144						
ANR	85676	Symbol	obj -> type		85144						
ANR	85677	Symbol	strcmp		85144						
ANR	85678	Symbol	settings		85144						
ANR	85679	Symbol	NULL		85144						
ANR	85680	Symbol	value -> u		85144						
ANR	85681	Symbol	json_boolean		85144						
ANR	85682	Symbol	* obj -> u . object . values		85144						
ANR	85683	Symbol	json_integer		85144						
ANR	85684	Symbol	& settings		85144						
ANR	85685	Symbol	json_string		85144						
ANR	85686	Symbol	value -> u . string		85144						
ANR	85687	Symbol	obj -> u		85144						
ANR	85688	Symbol	obj -> u . object		85144						
ANR	85689	Symbol	name		85144						
ANR	85690	Symbol	get_data		85144						
ANR	85691	Symbol	value -> type		85144						
ANR	85692	Symbol	json_parse_ex		85144						
ANR	85693	Symbol	server		85144						
ANR	85694	Symbol	* server		85144						
ANR	85695	Symbol	server -> plugin_opts		85144						
ANR	85696	Symbol	* * obj		85144						
ANR	85697	Symbol	value -> u . string . ptr		85144						
ANR	85698	Symbol	obj -> u . object . values [ i ] . name		85144						
ANR	85699	Symbol	value -> u . boolean		85144						
ANR	85700	Symbol	value		85144						
ANR	85701	Symbol	* obj		85144						
ANR	85702	Symbol	i		85144						
ANR	85703	Symbol	server -> method		85144						
ANR	85704	Symbol	obj -> u . object . values		85144						
ANR	85705	Symbol	* obj -> u . object		85144						
ANR	85706	Symbol	buf		85144						
ANR	85707	Symbol	* i		85144						
ANR	85708	Symbol	obj		85144						
ANR	85709	Symbol	* value		85144						
ANR	85710	Symbol	ss_malloc		85144						
ANR	85711	Symbol	server -> mode		85144						
ANR	85712	Symbol	json_object		85144						
ANR	85713	Symbol	strdup		85144						
ANR	85714	Symbol	obj -> u . object . length		85144						
ANR	85715	Function	parse_traffic	313:0:9265:10118							
ANR	85716	FunctionDef	"parse_traffic (char * buf , int len , char * port , uint64_t * traffic)"		85715	0					
ANR	85717	CompoundStatement		315:0:9341:10118	85715	0					
ANR	85718	IdentifierDeclStatement	"char * data = get_data ( buf , len ) ;"	316:4:9347:9378	85715	0	True				
ANR	85719	IdentifierDecl	"* data = get_data ( buf , len )"		85715	0					
ANR	85720	IdentifierDeclType	char *		85715	0					
ANR	85721	Identifier	data		85715	1					
ANR	85722	AssignmentExpression	"* data = get_data ( buf , len )"		85715	2		=			
ANR	85723	Identifier	data		85715	0					
ANR	85724	CallExpression	"get_data ( buf , len )"		85715	1					
ANR	85725	Callee	get_data		85715	0					
ANR	85726	Identifier	get_data		85715	0					
ANR	85727	ArgumentList	buf		85715	1					
ANR	85728	Argument	buf		85715	0					
ANR	85729	Identifier	buf		85715	0					
ANR	85730	Argument	len		85715	1					
ANR	85731	Identifier	len		85715	0					
ANR	85732	IdentifierDeclStatement	char error_buf [ 512 ] ;	317:4:9384:9403	85715	1	True				
ANR	85733	IdentifierDecl	error_buf [ 512 ]		85715	0					
ANR	85734	IdentifierDeclType	char [ 512 ]		85715	0					
ANR	85735	Identifier	error_buf		85715	1					
ANR	85736	PrimaryExpression	512		85715	2					
ANR	85737	IdentifierDeclStatement	json_settings settings = { 0 } ;	318:4:9409:9439	85715	2	True				
ANR	85738	IdentifierDecl	settings = { 0 }		85715	0					
ANR	85739	IdentifierDeclType	json_settings		85715	0					
ANR	85740	Identifier	settings		85715	1					
ANR	85741	AssignmentExpression	settings = { 0 }		85715	2		=			
ANR	85742	Identifier	settings		85715	0					
ANR	85743	InitializerList	0		85715	1					
ANR	85744	PrimaryExpression	0		85715	0					
ANR	85745	IfStatement	if ( data == NULL )		85715	3					
ANR	85746	Condition	data == NULL	320:8:9450:9461	85715	0	True				
ANR	85747	EqualityExpression	data == NULL		85715	0		==			
ANR	85748	Identifier	data		85715	0					
ANR	85749	Identifier	NULL		85715	1					
ANR	85750	CompoundStatement		6:22:122:122	85715	1					
ANR	85751	ExpressionStatement	"LOGE ( ""No data found"" )"	321:8:9474:9495	85715	0	True				
ANR	85752	CallExpression	"LOGE ( ""No data found"" )"		85715	0					
ANR	85753	Callee	LOGE		85715	0					
ANR	85754	Identifier	LOGE		85715	0					
ANR	85755	ArgumentList	"""No data found"""		85715	1					
ANR	85756	Argument	"""No data found"""		85715	0					
ANR	85757	PrimaryExpression	"""No data found"""		85715	0					
ANR	85758	ReturnStatement	return - 1 ;	322:8:9505:9514	85715	1	True				
ANR	85759	UnaryOperationExpression	- 1		85715	0					
ANR	85760	UnaryOperator	-		85715	0					
ANR	85761	PrimaryExpression	1		85715	1					
ANR	85762	IdentifierDeclStatement	"json_value * obj = json_parse_ex ( & settings , data , strlen ( data ) , error_buf ) ;"	325:4:9527:9600	85715	4	True				
ANR	85763	IdentifierDecl	"* obj = json_parse_ex ( & settings , data , strlen ( data ) , error_buf )"		85715	0					
ANR	85764	IdentifierDeclType	json_value *		85715	0					
ANR	85765	Identifier	obj		85715	1					
ANR	85766	AssignmentExpression	"* obj = json_parse_ex ( & settings , data , strlen ( data ) , error_buf )"		85715	2		=			
ANR	85767	Identifier	obj		85715	0					
ANR	85768	CallExpression	"json_parse_ex ( & settings , data , strlen ( data ) , error_buf )"		85715	1					
ANR	85769	Callee	json_parse_ex		85715	0					
ANR	85770	Identifier	json_parse_ex		85715	0					
ANR	85771	ArgumentList	& settings		85715	1					
ANR	85772	Argument	& settings		85715	0					
ANR	85773	UnaryOperationExpression	& settings		85715	0					
ANR	85774	UnaryOperator	&		85715	0					
ANR	85775	Identifier	settings		85715	1					
ANR	85776	Argument	data		85715	1					
ANR	85777	Identifier	data		85715	0					
ANR	85778	Argument	strlen ( data )		85715	2					
ANR	85779	CallExpression	strlen ( data )		85715	0					
ANR	85780	Callee	strlen		85715	0					
ANR	85781	Identifier	strlen		85715	0					
ANR	85782	ArgumentList	data		85715	1					
ANR	85783	Argument	data		85715	0					
ANR	85784	Identifier	data		85715	0					
ANR	85785	Argument	error_buf		85715	3					
ANR	85786	Identifier	error_buf		85715	0					
ANR	85787	IfStatement	if ( obj == NULL )		85715	5					
ANR	85788	Condition	obj == NULL	326:8:9610:9620	85715	0	True				
ANR	85789	EqualityExpression	obj == NULL		85715	0		==			
ANR	85790	Identifier	obj		85715	0					
ANR	85791	Identifier	NULL		85715	1					
ANR	85792	CompoundStatement		12:21:281:281	85715	1					
ANR	85793	ExpressionStatement	"LOGE ( ""%s"" , error_buf )"	327:8:9633:9654	85715	0	True				
ANR	85794	CallExpression	"LOGE ( ""%s"" , error_buf )"		85715	0					
ANR	85795	Callee	LOGE		85715	0					
ANR	85796	Identifier	LOGE		85715	0					
ANR	85797	ArgumentList	"""%s"""		85715	1					
ANR	85798	Argument	"""%s"""		85715	0					
ANR	85799	PrimaryExpression	"""%s"""		85715	0					
ANR	85800	Argument	error_buf		85715	1					
ANR	85801	Identifier	error_buf		85715	0					
ANR	85802	ReturnStatement	return - 1 ;	328:8:9664:9673	85715	1	True				
ANR	85803	UnaryOperationExpression	- 1		85715	0					
ANR	85804	UnaryOperator	-		85715	0					
ANR	85805	PrimaryExpression	1		85715	1					
ANR	85806	IfStatement	if ( obj -> type == json_object )		85715	6					
ANR	85807	Condition	obj -> type == json_object	331:8:9690:9713	85715	0	True				
ANR	85808	EqualityExpression	obj -> type == json_object		85715	0		==			
ANR	85809	PtrMemberAccess	obj -> type		85715	0					
ANR	85810	Identifier	obj		85715	0					
ANR	85811	Identifier	type		85715	1					
ANR	85812	Identifier	json_object		85715	1					
ANR	85813	CompoundStatement		18:8:384:393	85715	1					
ANR	85814	IdentifierDeclStatement	int i = 0 ;	332:8:9726:9735	85715	0	True				
ANR	85815	IdentifierDecl	i = 0		85715	0					
ANR	85816	IdentifierDeclType	int		85715	0					
ANR	85817	Identifier	i		85715	1					
ANR	85818	AssignmentExpression	i = 0		85715	2		=			
ANR	85819	Identifier	i		85715	0					
ANR	85820	PrimaryExpression	0		85715	1					
ANR	85821	ForStatement	for ( i = 0 ; i < obj -> u . object . length ; i ++ )		85715	1					
ANR	85822	ForInit	i = 0 ;	333:13:9750:9755	85715	0	True				
ANR	85823	AssignmentExpression	i = 0		85715	0		=			
ANR	85824	Identifier	i		85715	0					
ANR	85825	PrimaryExpression	0		85715	1					
ANR	85826	Condition	i < obj -> u . object . length	333:20:9757:9780	85715	1	True				
ANR	85827	RelationalExpression	i < obj -> u . object . length		85715	0		<			
ANR	85828	Identifier	i		85715	0					
ANR	85829	MemberAccess	obj -> u . object . length		85715	1					
ANR	85830	MemberAccess	obj -> u . object		85715	0					
ANR	85831	PtrMemberAccess	obj -> u		85715	0					
ANR	85832	Identifier	obj		85715	0					
ANR	85833	Identifier	u		85715	1					
ANR	85834	Identifier	object		85715	1					
ANR	85835	Identifier	length		85715	1					
ANR	85836	PostIncDecOperationExpression	i ++	333:46:9783:9785	85715	2	True				
ANR	85837	Identifier	i		85715	0					
ANR	85838	IncDec	++		85715	1					
ANR	85839	CompoundStatement		21:12:522:571	85715	3					
ANR	85840	IdentifierDeclStatement	char * name = obj -> u . object . values [ i ] . name ;	334:12:9802:9850	85715	0	True				
ANR	85841	IdentifierDecl	* name = obj -> u . object . values [ i ] . name		85715	0					
ANR	85842	IdentifierDeclType	char *		85715	0					
ANR	85843	Identifier	name		85715	1					
ANR	85844	AssignmentExpression	* name = obj -> u . object . values [ i ] . name		85715	2		=			
ANR	85845	Identifier	name		85715	0					
ANR	85846	MemberAccess	obj -> u . object . values [ i ] . name		85715	1					
ANR	85847	ArrayIndexing	obj -> u . object . values [ i ]		85715	0					
ANR	85848	MemberAccess	obj -> u . object . values		85715	0					
ANR	85849	MemberAccess	obj -> u . object		85715	0					
ANR	85850	PtrMemberAccess	obj -> u		85715	0					
ANR	85851	Identifier	obj		85715	0					
ANR	85852	Identifier	u		85715	1					
ANR	85853	Identifier	object		85715	1					
ANR	85854	Identifier	values		85715	1					
ANR	85855	Identifier	i		85715	1					
ANR	85856	Identifier	name		85715	1					
ANR	85857	IdentifierDeclStatement	json_value * value = obj -> u . object . values [ i ] . value ;	335:12:9864:9913	85715	1	True				
ANR	85858	IdentifierDecl	* value = obj -> u . object . values [ i ] . value		85715	0					
ANR	85859	IdentifierDeclType	json_value *		85715	0					
ANR	85860	Identifier	value		85715	1					
ANR	85861	AssignmentExpression	* value = obj -> u . object . values [ i ] . value		85715	2		=			
ANR	85862	Identifier	value		85715	0					
ANR	85863	MemberAccess	obj -> u . object . values [ i ] . value		85715	1					
ANR	85864	ArrayIndexing	obj -> u . object . values [ i ]		85715	0					
ANR	85865	MemberAccess	obj -> u . object . values		85715	0					
ANR	85866	MemberAccess	obj -> u . object		85715	0					
ANR	85867	PtrMemberAccess	obj -> u		85715	0					
ANR	85868	Identifier	obj		85715	0					
ANR	85869	Identifier	u		85715	1					
ANR	85870	Identifier	object		85715	1					
ANR	85871	Identifier	values		85715	1					
ANR	85872	Identifier	i		85715	1					
ANR	85873	Identifier	value		85715	1					
ANR	85874	IfStatement	if ( value -> type == json_integer )		85715	2					
ANR	85875	Condition	value -> type == json_integer	336:16:9931:9957	85715	0	True				
ANR	85876	EqualityExpression	value -> type == json_integer		85715	0		==			
ANR	85877	PtrMemberAccess	value -> type		85715	0					
ANR	85878	Identifier	value		85715	0					
ANR	85879	Identifier	type		85715	1					
ANR	85880	Identifier	json_integer		85715	1					
ANR	85881	CompoundStatement		22:45:618:618	85715	1					
ANR	85882	ExpressionStatement	"strncpy ( port , name , 8 )"	337:16:9978:10000	85715	0	True				
ANR	85883	CallExpression	"strncpy ( port , name , 8 )"		85715	0					
ANR	85884	Callee	strncpy		85715	0					
ANR	85885	Identifier	strncpy		85715	0					
ANR	85886	ArgumentList	port		85715	1					
ANR	85887	Argument	port		85715	0					
ANR	85888	Identifier	port		85715	0					
ANR	85889	Argument	name		85715	1					
ANR	85890	Identifier	name		85715	0					
ANR	85891	Argument	8		85715	2					
ANR	85892	PrimaryExpression	8		85715	0					
ANR	85893	ExpressionStatement	* traffic = value -> u . integer	338:16:10018:10045	85715	1	True				
ANR	85894	AssignmentExpression	* traffic = value -> u . integer		85715	0		=			
ANR	85895	UnaryOperationExpression	* traffic		85715	0					
ANR	85896	UnaryOperator	*		85715	0					
ANR	85897	Identifier	traffic		85715	1					
ANR	85898	MemberAccess	value -> u . integer		85715	1					
ANR	85899	PtrMemberAccess	value -> u		85715	0					
ANR	85900	Identifier	value		85715	0					
ANR	85901	Identifier	u		85715	1					
ANR	85902	Identifier	integer		85715	1					
ANR	85903	ExpressionStatement	json_value_free ( obj )	343:4:10082:10102	85715	7	True				
ANR	85904	CallExpression	json_value_free ( obj )		85715	0					
ANR	85905	Callee	json_value_free		85715	0					
ANR	85906	Identifier	json_value_free		85715	0					
ANR	85907	ArgumentList	obj		85715	1					
ANR	85908	Argument	obj		85715	0					
ANR	85909	Identifier	obj		85715	0					
ANR	85910	ReturnStatement	return 0 ;	344:4:10108:10116	85715	8	True				
ANR	85911	PrimaryExpression	0		85715	0					
ANR	85912	ReturnType	static int		85715	1					
ANR	85913	Identifier	parse_traffic		85715	2					
ANR	85914	ParameterList	"char * buf , int len , char * port , uint64_t * traffic"		85715	3					
ANR	85915	Parameter	char * buf	314:14:9290:9298	85715	0	True				
ANR	85916	ParameterType	char *		85715	0					
ANR	85917	Identifier	buf		85715	1					
ANR	85918	Parameter	int len	314:25:9301:9307	85715	1	True				
ANR	85919	ParameterType	int		85715	0					
ANR	85920	Identifier	len		85715	1					
ANR	85921	Parameter	char * port	314:34:9310:9319	85715	2	True				
ANR	85922	ParameterType	char *		85715	0					
ANR	85923	Identifier	port		85715	1					
ANR	85924	Parameter	uint64_t * traffic	314:46:9322:9338	85715	3	True				
ANR	85925	ParameterType	uint64_t *		85715	0					
ANR	85926	Identifier	traffic		85715	1					
ANR	85927	CFGEntryNode	ENTRY		85715		True				
ANR	85928	CFGExitNode	EXIT		85715		True				
ANR	85929	Symbol	obj -> u . object . values [ i ] . value		85715						
ANR	85930	Symbol	json_parse_ex		85715						
ANR	85931	Symbol	data		85715						
ANR	85932	Symbol	* traffic		85715						
ANR	85933	Symbol	* * obj		85715						
ANR	85934	Symbol	strlen		85715						
ANR	85935	Symbol	len		85715						
ANR	85936	Symbol	obj -> u . object . values [ i ] . name		85715						
ANR	85937	Symbol	error_buf		85715						
ANR	85938	Symbol	value -> u . integer		85715						
ANR	85939	Symbol	* obj -> u		85715						
ANR	85940	Symbol	value		85715						
ANR	85941	Symbol	traffic		85715						
ANR	85942	Symbol	obj -> type		85715						
ANR	85943	Symbol	settings		85715						
ANR	85944	Symbol	* obj		85715						
ANR	85945	Symbol	NULL		85715						
ANR	85946	Symbol	value -> u		85715						
ANR	85947	Symbol	* obj -> u . object . values		85715						
ANR	85948	Symbol	json_integer		85715						
ANR	85949	Symbol	i		85715						
ANR	85950	Symbol	& settings		85715						
ANR	85951	Symbol	obj -> u . object . values		85715						
ANR	85952	Symbol	* obj -> u . object		85715						
ANR	85953	Symbol	obj -> u		85715						
ANR	85954	Symbol	obj -> u . object		85715						
ANR	85955	Symbol	buf		85715						
ANR	85956	Symbol	* i		85715						
ANR	85957	Symbol	port		85715						
ANR	85958	Symbol	obj		85715						
ANR	85959	Symbol	* value		85715						
ANR	85960	Symbol	name		85715						
ANR	85961	Symbol	get_data		85715						
ANR	85962	Symbol	json_object		85715						
ANR	85963	Symbol	obj -> u . object . length		85715						
ANR	85964	Symbol	value -> type		85715						
ANR	85965	Function	create_and_bind	347:0:10121:12627							
ANR	85966	FunctionDef	"create_and_bind (const char * host , const char * port , int protocol)"		85965	0					
ANR	85967	CompoundStatement		349:0:10198:12627	85965	0					
ANR	85968	IdentifierDeclStatement	struct addrinfo hints ;	350:4:10204:10225	85965	0	True				
ANR	85969	IdentifierDecl	hints		85965	0					
ANR	85970	IdentifierDeclType	struct addrinfo		85965	0					
ANR	85971	Identifier	hints		85965	1					
ANR	85972	IdentifierDeclStatement	"struct addrinfo * result , * rp , * ipv4v6bindall ;"	351:4:10231:10275	85965	1	True				
ANR	85973	IdentifierDecl	* result		85965	0					
ANR	85974	IdentifierDeclType	struct addrinfo *		85965	0					
ANR	85975	Identifier	result		85965	1					
ANR	85976	IdentifierDecl	* rp		85965	1					
ANR	85977	IdentifierDeclType	struct addrinfo *		85965	0					
ANR	85978	Identifier	rp		85965	1					
ANR	85979	IdentifierDecl	* ipv4v6bindall		85965	2					
ANR	85980	IdentifierDeclType	struct addrinfo *		85965	0					
ANR	85981	Identifier	ipv4v6bindall		85965	1					
ANR	85982	IdentifierDeclStatement	"int s , listen_sock = - 1 ;"	352:4:10281:10304	85965	2	True				
ANR	85983	IdentifierDecl	s		85965	0					
ANR	85984	IdentifierDeclType	int		85965	0					
ANR	85985	Identifier	s		85965	1					
ANR	85986	IdentifierDecl	listen_sock = - 1		85965	1					
ANR	85987	IdentifierDeclType	int		85965	0					
ANR	85988	Identifier	listen_sock		85965	1					
ANR	85989	AssignmentExpression	listen_sock = - 1		85965	2		=			
ANR	85990	Identifier	listen_sock		85965	0					
ANR	85991	UnaryOperationExpression	- 1		85965	1					
ANR	85992	UnaryOperator	-		85965	0					
ANR	85993	PrimaryExpression	1		85965	1					
ANR	85994	ExpressionStatement	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"	354:4:10311:10353	85965	3	True				
ANR	85995	CallExpression	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"		85965	0					
ANR	85996	Callee	memset		85965	0					
ANR	85997	Identifier	memset		85965	0					
ANR	85998	ArgumentList	& hints		85965	1					
ANR	85999	Argument	& hints		85965	0					
ANR	86000	UnaryOperationExpression	& hints		85965	0					
ANR	86001	UnaryOperator	&		85965	0					
ANR	86002	Identifier	hints		85965	1					
ANR	86003	Argument	0		85965	1					
ANR	86004	PrimaryExpression	0		85965	0					
ANR	86005	Argument	sizeof ( struct addrinfo )		85965	2					
ANR	86006	SizeofExpression	sizeof ( struct addrinfo )		85965	0					
ANR	86007	Sizeof	sizeof		85965	0					
ANR	86008	SizeofOperand	struct addrinfo		85965	1					
ANR	86009	ExpressionStatement	hints . ai_family = AF_UNSPEC	355:4:10359:10388	85965	4	True				
ANR	86010	AssignmentExpression	hints . ai_family = AF_UNSPEC		85965	0		=			
ANR	86011	MemberAccess	hints . ai_family		85965	0					
ANR	86012	Identifier	hints		85965	0					
ANR	86013	Identifier	ai_family		85965	1					
ANR	86014	Identifier	AF_UNSPEC		85965	1					
ANR	86015	ExpressionStatement	hints . ai_socktype = protocol == IPPROTO_TCP ? SOCK_STREAM : SOCK_DGRAM	356:4:10446:10540	85965	5	True				
ANR	86016	AssignmentExpression	hints . ai_socktype = protocol == IPPROTO_TCP ? SOCK_STREAM : SOCK_DGRAM		85965	0		=			
ANR	86017	MemberAccess	hints . ai_socktype		85965	0					
ANR	86018	Identifier	hints		85965	0					
ANR	86019	Identifier	ai_socktype		85965	1					
ANR	86020	ConditionalExpression	protocol == IPPROTO_TCP ? SOCK_STREAM : SOCK_DGRAM		85965	1					
ANR	86021	Condition	protocol == IPPROTO_TCP		85965	0					
ANR	86022	EqualityExpression	protocol == IPPROTO_TCP		85965	0		==			
ANR	86023	Identifier	protocol		85965	0					
ANR	86024	Identifier	IPPROTO_TCP		85965	1					
ANR	86025	Identifier	SOCK_STREAM		85965	1					
ANR	86026	Identifier	SOCK_DGRAM		85965	2					
ANR	86027	ExpressionStatement	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG	358:4:10582:10628	85965	6	True				
ANR	86028	AssignmentExpression	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG		85965	0		=			
ANR	86029	MemberAccess	hints . ai_flags		85965	0					
ANR	86030	Identifier	hints		85965	0					
ANR	86031	Identifier	ai_flags		85965	1					
ANR	86032	InclusiveOrExpression	AI_PASSIVE | AI_ADDRCONFIG		85965	1		|			
ANR	86033	Identifier	AI_PASSIVE		85965	0					
ANR	86034	Identifier	AI_ADDRCONFIG		85965	1					
ANR	86035	ExpressionStatement	hints . ai_protocol = protocol	359:4:10664:10692	85965	7	True				
ANR	86036	AssignmentExpression	hints . ai_protocol = protocol		85965	0		=			
ANR	86037	MemberAccess	hints . ai_protocol		85965	0					
ANR	86038	Identifier	hints		85965	0					
ANR	86039	Identifier	ai_protocol		85965	1					
ANR	86040	Identifier	protocol		85965	1					
ANR	86041	ExpressionStatement	"s = getaddrinfo ( host , port , & hints , & result )"	361:4:10699:10743	85965	8	True				
ANR	86042	AssignmentExpression	"s = getaddrinfo ( host , port , & hints , & result )"		85965	0		=			
ANR	86043	Identifier	s		85965	0					
ANR	86044	CallExpression	"getaddrinfo ( host , port , & hints , & result )"		85965	1					
ANR	86045	Callee	getaddrinfo		85965	0					
ANR	86046	Identifier	getaddrinfo		85965	0					
ANR	86047	ArgumentList	host		85965	1					
ANR	86048	Argument	host		85965	0					
ANR	86049	Identifier	host		85965	0					
ANR	86050	Argument	port		85965	1					
ANR	86051	Identifier	port		85965	0					
ANR	86052	Argument	& hints		85965	2					
ANR	86053	UnaryOperationExpression	& hints		85965	0					
ANR	86054	UnaryOperator	&		85965	0					
ANR	86055	Identifier	hints		85965	1					
ANR	86056	Argument	& result		85965	3					
ANR	86057	UnaryOperationExpression	& result		85965	0					
ANR	86058	UnaryOperator	&		85965	0					
ANR	86059	Identifier	result		85965	1					
ANR	86060	IfStatement	if ( s != 0 )		85965	9					
ANR	86061	Condition	s != 0	363:8:10754:10759	85965	0	True				
ANR	86062	EqualityExpression	s != 0		85965	0		!=			
ANR	86063	Identifier	s		85965	0					
ANR	86064	PrimaryExpression	0		85965	1					
ANR	86065	CompoundStatement		15:16:563:563	85965	1					
ANR	86066	ExpressionStatement	"LOGE ( ""getaddrinfo: %s"" , gai_strerror ( s ) )"	364:8:10772:10812	85965	0	True				
ANR	86067	CallExpression	"LOGE ( ""getaddrinfo: %s"" , gai_strerror ( s ) )"		85965	0					
ANR	86068	Callee	LOGE		85965	0					
ANR	86069	Identifier	LOGE		85965	0					
ANR	86070	ArgumentList	"""getaddrinfo: %s"""		85965	1					
ANR	86071	Argument	"""getaddrinfo: %s"""		85965	0					
ANR	86072	PrimaryExpression	"""getaddrinfo: %s"""		85965	0					
ANR	86073	Argument	gai_strerror ( s )		85965	1					
ANR	86074	CallExpression	gai_strerror ( s )		85965	0					
ANR	86075	Callee	gai_strerror		85965	0					
ANR	86076	Identifier	gai_strerror		85965	0					
ANR	86077	ArgumentList	s		85965	1					
ANR	86078	Argument	s		85965	0					
ANR	86079	Identifier	s		85965	0					
ANR	86080	ReturnStatement	return - 1 ;	365:8:10822:10831	85965	1	True				
ANR	86081	UnaryOperationExpression	- 1		85965	0					
ANR	86082	UnaryOperator	-		85965	0					
ANR	86083	PrimaryExpression	1		85965	1					
ANR	86084	ExpressionStatement	rp = result	368:4:10844:10855	85965	10	True				
ANR	86085	AssignmentExpression	rp = result		85965	0		=			
ANR	86086	Identifier	rp		85965	0					
ANR	86087	Identifier	result		85965	1					
ANR	86088	IfStatement	if ( ! host )		85965	11					
ANR	86089	Condition	! host	376:8:11199:11203	85965	0	True				
ANR	86090	UnaryOperationExpression	! host		85965	0					
ANR	86091	UnaryOperator	!		85965	0					
ANR	86092	Identifier	host		85965	1					
ANR	86093	CompoundStatement		28:15:1007:1007	85965	1					
ANR	86094	ExpressionStatement	ipv4v6bindall = result	377:8:11216:11238	85965	0	True				
ANR	86095	AssignmentExpression	ipv4v6bindall = result		85965	0		=			
ANR	86096	Identifier	ipv4v6bindall		85965	0					
ANR	86097	Identifier	result		85965	1					
ANR	86098	WhileStatement	while ( ipv4v6bindall )		85965	1					
ANR	86099	Condition	ipv4v6bindall	380:15:11335:11347	85965	0	True				
ANR	86100	Identifier	ipv4v6bindall		85965	0					
ANR	86101	CompoundStatement		32:30:1151:1151	85965	1					
ANR	86102	IfStatement	if ( ipv4v6bindall -> ai_family == AF_INET6 )		85965	0					
ANR	86103	Condition	ipv4v6bindall -> ai_family == AF_INET6	381:16:11368:11403	85965	0	True				
ANR	86104	EqualityExpression	ipv4v6bindall -> ai_family == AF_INET6		85965	0		==			
ANR	86105	PtrMemberAccess	ipv4v6bindall -> ai_family		85965	0					
ANR	86106	Identifier	ipv4v6bindall		85965	0					
ANR	86107	Identifier	ai_family		85965	1					
ANR	86108	Identifier	AF_INET6		85965	1					
ANR	86109	CompoundStatement		33:54:1207:1207	85965	1					
ANR	86110	ExpressionStatement	rp = ipv4v6bindall	382:16:11424:11442	85965	0	True				
ANR	86111	AssignmentExpression	rp = ipv4v6bindall		85965	0		=			
ANR	86112	Identifier	rp		85965	0					
ANR	86113	Identifier	ipv4v6bindall		85965	1					
ANR	86114	BreakStatement	break ;	383:16:11500:11505	85965	1	True				
ANR	86115	ExpressionStatement	ipv4v6bindall = ipv4v6bindall -> ai_next	385:12:11533:11571	85965	1	True				
ANR	86116	AssignmentExpression	ipv4v6bindall = ipv4v6bindall -> ai_next		85965	0		=			
ANR	86117	Identifier	ipv4v6bindall		85965	0					
ANR	86118	PtrMemberAccess	ipv4v6bindall -> ai_next		85965	1					
ANR	86119	Identifier	ipv4v6bindall		85965	0					
ANR	86120	Identifier	ai_next		85965	1					
ANR	86121	ForStatement	for ( ; rp != NULL ; rp = rp -> ai_next )		85965	12					
ANR	86122	Condition	rp != NULL	389:26:11652:11661	85965	0	True				
ANR	86123	EqualityExpression	rp != NULL		85965	0		!=			
ANR	86124	Identifier	rp		85965	0					
ANR	86125	Identifier	NULL		85965	1					
ANR	86126	AssignmentExpression	rp = rp -> ai_next	389:38:11664:11679	85965	1	True	=			
ANR	86127	Identifier	rp		85965	0					
ANR	86128	PtrMemberAccess	rp -> ai_next		85965	1					
ANR	86129	Identifier	rp		85965	0					
ANR	86130	Identifier	ai_next		85965	1					
ANR	86131	CompoundStatement		52:8:1824:1835	85965	2					
ANR	86132	ExpressionStatement	"listen_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"	390:8:11692:11761	85965	0	True				
ANR	86133	AssignmentExpression	"listen_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		85965	0		=			
ANR	86134	Identifier	listen_sock		85965	0					
ANR	86135	CallExpression	"socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		85965	1					
ANR	86136	Callee	socket		85965	0					
ANR	86137	Identifier	socket		85965	0					
ANR	86138	ArgumentList	rp -> ai_family		85965	1					
ANR	86139	Argument	rp -> ai_family		85965	0					
ANR	86140	PtrMemberAccess	rp -> ai_family		85965	0					
ANR	86141	Identifier	rp		85965	0					
ANR	86142	Identifier	ai_family		85965	1					
ANR	86143	Argument	rp -> ai_socktype		85965	1					
ANR	86144	PtrMemberAccess	rp -> ai_socktype		85965	0					
ANR	86145	Identifier	rp		85965	0					
ANR	86146	Identifier	ai_socktype		85965	1					
ANR	86147	Argument	rp -> ai_protocol		85965	2					
ANR	86148	PtrMemberAccess	rp -> ai_protocol		85965	0					
ANR	86149	Identifier	rp		85965	0					
ANR	86150	Identifier	ai_protocol		85965	1					
ANR	86151	IfStatement	if ( listen_sock == - 1 )		85965	1					
ANR	86152	Condition	listen_sock == - 1	391:12:11775:11791	85965	0	True				
ANR	86153	EqualityExpression	listen_sock == - 1		85965	0		==			
ANR	86154	Identifier	listen_sock		85965	0					
ANR	86155	UnaryOperationExpression	- 1		85965	1					
ANR	86156	UnaryOperator	-		85965	0					
ANR	86157	PrimaryExpression	1		85965	1					
ANR	86158	CompoundStatement		43:31:1595:1595	85965	1					
ANR	86159	ContinueStatement	continue ;	392:12:11808:11816	85965	0	True				
ANR	86160	IfStatement	if ( rp -> ai_family == AF_INET6 )		85965	2					
ANR	86161	Condition	rp -> ai_family == AF_INET6	395:12:11841:11865	85965	0	True				
ANR	86162	EqualityExpression	rp -> ai_family == AF_INET6		85965	0		==			
ANR	86163	PtrMemberAccess	rp -> ai_family		85965	0					
ANR	86164	Identifier	rp		85965	0					
ANR	86165	Identifier	ai_family		85965	1					
ANR	86166	Identifier	AF_INET6		85965	1					
ANR	86167	CompoundStatement		48:12:1683:1710	85965	1					
ANR	86168	IdentifierDeclStatement	int ipv6only = host ? 1 : 0 ;	396:12:11882:11909	85965	0	True				
ANR	86169	IdentifierDecl	ipv6only = host ? 1 : 0		85965	0					
ANR	86170	IdentifierDeclType	int		85965	0					
ANR	86171	Identifier	ipv6only		85965	1					
ANR	86172	AssignmentExpression	ipv6only = host ? 1 : 0		85965	2		=			
ANR	86173	Identifier	ipv6only		85965	0					
ANR	86174	ConditionalExpression	host ? 1 : 0		85965	1					
ANR	86175	Condition	host		85965	0					
ANR	86176	Identifier	host		85965	0					
ANR	86177	PrimaryExpression	1		85965	1					
ANR	86178	PrimaryExpression	0		85965	2					
ANR	86179	ExpressionStatement	"setsockopt ( listen_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"	397:12:11923:12002	85965	1	True				
ANR	86180	CallExpression	"setsockopt ( listen_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"		85965	0					
ANR	86181	Callee	setsockopt		85965	0					
ANR	86182	Identifier	setsockopt		85965	0					
ANR	86183	ArgumentList	listen_sock		85965	1					
ANR	86184	Argument	listen_sock		85965	0					
ANR	86185	Identifier	listen_sock		85965	0					
ANR	86186	Argument	IPPROTO_IPV6		85965	1					
ANR	86187	Identifier	IPPROTO_IPV6		85965	0					
ANR	86188	Argument	IPV6_V6ONLY		85965	2					
ANR	86189	Identifier	IPV6_V6ONLY		85965	0					
ANR	86190	Argument	& ipv6only		85965	3					
ANR	86191	UnaryOperationExpression	& ipv6only		85965	0					
ANR	86192	UnaryOperator	&		85965	0					
ANR	86193	Identifier	ipv6only		85965	1					
ANR	86194	Argument	sizeof ( ipv6only )		85965	4					
ANR	86195	SizeofExpression	sizeof ( ipv6only )		85965	0					
ANR	86196	Sizeof	sizeof		85965	0					
ANR	86197	SizeofOperand	ipv6only		85965	1					
ANR	86198	IdentifierDeclStatement	int opt = 1 ;	400:8:12023:12034	85965	3	True				
ANR	86199	IdentifierDecl	opt = 1		85965	0					
ANR	86200	IdentifierDeclType	int		85965	0					
ANR	86201	Identifier	opt		85965	1					
ANR	86202	AssignmentExpression	opt = 1		85965	2		=			
ANR	86203	Identifier	opt		85965	0					
ANR	86204	PrimaryExpression	1		85965	1					
ANR	86205	ExpressionStatement	"setsockopt ( listen_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"	401:8:12044:12112	85965	4	True				
ANR	86206	CallExpression	"setsockopt ( listen_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"		85965	0					
ANR	86207	Callee	setsockopt		85965	0					
ANR	86208	Identifier	setsockopt		85965	0					
ANR	86209	ArgumentList	listen_sock		85965	1					
ANR	86210	Argument	listen_sock		85965	0					
ANR	86211	Identifier	listen_sock		85965	0					
ANR	86212	Argument	SOL_SOCKET		85965	1					
ANR	86213	Identifier	SOL_SOCKET		85965	0					
ANR	86214	Argument	SO_REUSEADDR		85965	2					
ANR	86215	Identifier	SO_REUSEADDR		85965	0					
ANR	86216	Argument	& opt		85965	3					
ANR	86217	UnaryOperationExpression	& opt		85965	0					
ANR	86218	UnaryOperator	&		85965	0					
ANR	86219	Identifier	opt		85965	1					
ANR	86220	Argument	sizeof ( opt )		85965	4					
ANR	86221	SizeofExpression	sizeof ( opt )		85965	0					
ANR	86222	Sizeof	sizeof		85965	0					
ANR	86223	SizeofOperand	opt		85965	1					
ANR	86224	ExpressionStatement	"setsockopt ( listen_sock , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"	403:8:12142:12210	85965	5	True				
ANR	86225	CallExpression	"setsockopt ( listen_sock , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"		85965	0					
ANR	86226	Callee	setsockopt		85965	0					
ANR	86227	Identifier	setsockopt		85965	0					
ANR	86228	ArgumentList	listen_sock		85965	1					
ANR	86229	Argument	listen_sock		85965	0					
ANR	86230	Identifier	listen_sock		85965	0					
ANR	86231	Argument	SOL_SOCKET		85965	1					
ANR	86232	Identifier	SOL_SOCKET		85965	0					
ANR	86233	Argument	SO_NOSIGPIPE		85965	2					
ANR	86234	Identifier	SO_NOSIGPIPE		85965	0					
ANR	86235	Argument	& opt		85965	3					
ANR	86236	UnaryOperationExpression	& opt		85965	0					
ANR	86237	UnaryOperator	&		85965	0					
ANR	86238	Identifier	opt		85965	1					
ANR	86239	Argument	sizeof ( opt )		85965	4					
ANR	86240	SizeofExpression	sizeof ( opt )		85965	0					
ANR	86241	Sizeof	sizeof		85965	0					
ANR	86242	SizeofOperand	opt		85965	1					
ANR	86243	ExpressionStatement	"s = bind ( listen_sock , rp -> ai_addr , rp -> ai_addrlen )"	406:8:12228:12278	85965	6	True				
ANR	86244	AssignmentExpression	"s = bind ( listen_sock , rp -> ai_addr , rp -> ai_addrlen )"		85965	0		=			
ANR	86245	Identifier	s		85965	0					
ANR	86246	CallExpression	"bind ( listen_sock , rp -> ai_addr , rp -> ai_addrlen )"		85965	1					
ANR	86247	Callee	bind		85965	0					
ANR	86248	Identifier	bind		85965	0					
ANR	86249	ArgumentList	listen_sock		85965	1					
ANR	86250	Argument	listen_sock		85965	0					
ANR	86251	Identifier	listen_sock		85965	0					
ANR	86252	Argument	rp -> ai_addr		85965	1					
ANR	86253	PtrMemberAccess	rp -> ai_addr		85965	0					
ANR	86254	Identifier	rp		85965	0					
ANR	86255	Identifier	ai_addr		85965	1					
ANR	86256	Argument	rp -> ai_addrlen		85965	2					
ANR	86257	PtrMemberAccess	rp -> ai_addrlen		85965	0					
ANR	86258	Identifier	rp		85965	0					
ANR	86259	Identifier	ai_addrlen		85965	1					
ANR	86260	IfStatement	if ( s == 0 )		85965	7					
ANR	86261	Condition	s == 0	407:12:12292:12297	85965	0	True				
ANR	86262	EqualityExpression	s == 0		85965	0		==			
ANR	86263	Identifier	s		85965	0					
ANR	86264	PrimaryExpression	0		85965	1					
ANR	86265	CompoundStatement		59:20:2101:2101	85965	1					
ANR	86266	ExpressionStatement	close ( listen_sock )	410:12:12366:12384	85965	0	True				
ANR	86267	CallExpression	close ( listen_sock )		85965	0					
ANR	86268	Callee	close		85965	0					
ANR	86269	Identifier	close		85965	0					
ANR	86270	ArgumentList	listen_sock		85965	1					
ANR	86271	Argument	listen_sock		85965	0					
ANR	86272	Identifier	listen_sock		85965	0					
ANR	86273	BreakStatement	break ;	412:12:12399:12404	85965	1	True				
ANR	86274	ElseStatement	else		85965	0					
ANR	86275	CompoundStatement		65:15:2222:2222	85965	0					
ANR	86276	ExpressionStatement	"ERROR ( ""bind"" )"	414:12:12435:12448	85965	0	True				
ANR	86277	CallExpression	"ERROR ( ""bind"" )"		85965	0					
ANR	86278	Callee	ERROR		85965	0					
ANR	86279	Identifier	ERROR		85965	0					
ANR	86280	ArgumentList	"""bind"""		85965	1					
ANR	86281	Argument	"""bind"""		85965	0					
ANR	86282	PrimaryExpression	"""bind"""		85965	0					
ANR	86283	IfStatement	if ( ! result )		85965	13					
ANR	86284	Condition	! result	418:8:12475:12481	85965	0	True				
ANR	86285	UnaryOperationExpression	! result		85965	0					
ANR	86286	UnaryOperator	!		85965	0					
ANR	86287	Identifier	result		85965	1					
ANR	86288	CompoundStatement		70:17:2285:2285	85965	1					
ANR	86289	ExpressionStatement	freeaddrinfo ( result )	419:8:12494:12514	85965	0	True				
ANR	86290	CallExpression	freeaddrinfo ( result )		85965	0					
ANR	86291	Callee	freeaddrinfo		85965	0					
ANR	86292	Identifier	freeaddrinfo		85965	0					
ANR	86293	ArgumentList	result		85965	1					
ANR	86294	Argument	result		85965	0					
ANR	86295	Identifier	result		85965	0					
ANR	86296	IfStatement	if ( rp == NULL )		85965	14					
ANR	86297	Condition	rp == NULL	422:8:12531:12540	85965	0	True				
ANR	86298	EqualityExpression	rp == NULL		85965	0		==			
ANR	86299	Identifier	rp		85965	0					
ANR	86300	Identifier	NULL		85965	1					
ANR	86301	CompoundStatement		74:20:2344:2344	85965	1					
ANR	86302	ExpressionStatement	"LOGE ( ""Could not bind"" )"	423:8:12553:12575	85965	0	True				
ANR	86303	CallExpression	"LOGE ( ""Could not bind"" )"		85965	0					
ANR	86304	Callee	LOGE		85965	0					
ANR	86305	Identifier	LOGE		85965	0					
ANR	86306	ArgumentList	"""Could not bind"""		85965	1					
ANR	86307	Argument	"""Could not bind"""		85965	0					
ANR	86308	PrimaryExpression	"""Could not bind"""		85965	0					
ANR	86309	ReturnStatement	return - 1 ;	424:8:12585:12594	85965	1	True				
ANR	86310	UnaryOperationExpression	- 1		85965	0					
ANR	86311	UnaryOperator	-		85965	0					
ANR	86312	PrimaryExpression	1		85965	1					
ANR	86313	ReturnStatement	return listen_sock ;	427:4:12607:12625	85965	15	True				
ANR	86314	Identifier	listen_sock		85965	0					
ANR	86315	ReturnType	static int		85965	1					
ANR	86316	Identifier	create_and_bind		85965	2					
ANR	86317	ParameterList	"const char * host , const char * port , int protocol"		85965	3					
ANR	86318	Parameter	const char * host	348:16:10148:10163	85965	0	True				
ANR	86319	ParameterType	const char *		85965	0					
ANR	86320	Identifier	host		85965	1					
ANR	86321	Parameter	const char * port	348:34:10166:10181	85965	1	True				
ANR	86322	ParameterType	const char *		85965	0					
ANR	86323	Identifier	port		85965	1					
ANR	86324	Parameter	int protocol	348:52:10184:10195	85965	2	True				
ANR	86325	ParameterType	int		85965	0					
ANR	86326	Identifier	protocol		85965	1					
ANR	86327	CFGEntryNode	ENTRY		85965		True				
ANR	86328	CFGExitNode	EXIT		85965		True				
ANR	86329	Symbol	rp -> ai_addr		85965						
ANR	86330	Symbol	rp -> ai_protocol		85965						
ANR	86331	Symbol	rp -> ai_addrlen		85965						
ANR	86332	Symbol	hints . ai_flags		85965						
ANR	86333	Symbol	gai_strerror		85965						
ANR	86334	Symbol	ipv6only		85965						
ANR	86335	Symbol	AF_UNSPEC		85965						
ANR	86336	Symbol	result		85965						
ANR	86337	Symbol	hints . ai_family		85965						
ANR	86338	Symbol	ipv4v6bindall -> ai_family		85965						
ANR	86339	Symbol	protocol		85965						
ANR	86340	Symbol	SOCK_STREAM		85965						
ANR	86341	Symbol	* ipv4v6bindall		85965						
ANR	86342	Symbol	SO_NOSIGPIPE		85965						
ANR	86343	Symbol	bind		85965						
ANR	86344	Symbol	IPPROTO_TCP		85965						
ANR	86345	Symbol	AI_ADDRCONFIG		85965						
ANR	86346	Symbol	& result		85965						
ANR	86347	Symbol	host		85965						
ANR	86348	Symbol	ipv4v6bindall		85965						
ANR	86349	Symbol	& opt		85965						
ANR	86350	Symbol	& ipv6only		85965						
ANR	86351	Symbol	listen_sock		85965						
ANR	86352	Symbol	& hints		85965						
ANR	86353	Symbol	NULL		85965						
ANR	86354	Symbol	hints		85965						
ANR	86355	Symbol	* rp		85965						
ANR	86356	Symbol	getaddrinfo		85965						
ANR	86357	Symbol	rp -> ai_socktype		85965						
ANR	86358	Symbol	SO_REUSEADDR		85965						
ANR	86359	Symbol	SOCK_DGRAM		85965						
ANR	86360	Symbol	hints . ai_protocol		85965						
ANR	86361	Symbol	AF_INET6		85965						
ANR	86362	Symbol	SOL_SOCKET		85965						
ANR	86363	Symbol	hints . ai_socktype		85965						
ANR	86364	Symbol	IPV6_V6ONLY		85965						
ANR	86365	Symbol	ipv4v6bindall -> ai_next		85965						
ANR	86366	Symbol	opt		85965						
ANR	86367	Symbol	s		85965						
ANR	86368	Symbol	port		85965						
ANR	86369	Symbol	rp -> ai_family		85965						
ANR	86370	Symbol	IPPROTO_IPV6		85965						
ANR	86371	Symbol	socket		85965						
ANR	86372	Symbol	rp -> ai_next		85965						
ANR	86373	Symbol	rp		85965						
ANR	86374	Symbol	AI_PASSIVE		85965						
ANR	86375	Function	check_port	430:0:12630:13895							
ANR	86376	FunctionDef	"check_port (struct manager_ctx * manager , struct server * server)"		86375	0					
ANR	86377	CompoundStatement		432:0:12704:13895	86375	0					
ANR	86378	IdentifierDeclStatement	bool both_tcp_udp = manager -> mode == TCP_AND_UDP ;	433:4:12710:12758	86375	0	True				
ANR	86379	IdentifierDecl	both_tcp_udp = manager -> mode == TCP_AND_UDP		86375	0					
ANR	86380	IdentifierDeclType	bool		86375	0					
ANR	86381	Identifier	both_tcp_udp		86375	1					
ANR	86382	AssignmentExpression	both_tcp_udp = manager -> mode == TCP_AND_UDP		86375	2		=			
ANR	86383	Identifier	both_tcp_udp		86375	0					
ANR	86384	EqualityExpression	manager -> mode == TCP_AND_UDP		86375	1		==			
ANR	86385	PtrMemberAccess	manager -> mode		86375	0					
ANR	86386	Identifier	manager		86375	0					
ANR	86387	Identifier	mode		86375	1					
ANR	86388	Identifier	TCP_AND_UDP		86375	1					
ANR	86389	IdentifierDeclStatement	int fd_count = manager -> host_num * ( both_tcp_udp ? 2 : 1 ) ;	434:4:12764:12826	86375	1	True				
ANR	86390	IdentifierDecl	fd_count = manager -> host_num * ( both_tcp_udp ? 2 : 1 )		86375	0					
ANR	86391	IdentifierDeclType	int		86375	0					
ANR	86392	Identifier	fd_count		86375	1					
ANR	86393	AssignmentExpression	fd_count = manager -> host_num * ( both_tcp_udp ? 2 : 1 )		86375	2		=			
ANR	86394	Identifier	fd_count		86375	0					
ANR	86395	MultiplicativeExpression	manager -> host_num * ( both_tcp_udp ? 2 : 1 )		86375	1		*			
ANR	86396	PtrMemberAccess	manager -> host_num		86375	0					
ANR	86397	Identifier	manager		86375	0					
ANR	86398	Identifier	host_num		86375	1					
ANR	86399	ConditionalExpression	both_tcp_udp ? 2 : 1		86375	1					
ANR	86400	Condition	both_tcp_udp		86375	0					
ANR	86401	Identifier	both_tcp_udp		86375	0					
ANR	86402	PrimaryExpression	2		86375	1					
ANR	86403	PrimaryExpression	1		86375	2					
ANR	86404	IdentifierDeclStatement	int bind_err = 0 ;	435:4:12832:12853	86375	2	True				
ANR	86405	IdentifierDecl	bind_err = 0		86375	0					
ANR	86406	IdentifierDeclType	int		86375	0					
ANR	86407	Identifier	bind_err		86375	1					
ANR	86408	AssignmentExpression	bind_err = 0		86375	2		=			
ANR	86409	Identifier	bind_err		86375	0					
ANR	86410	PrimaryExpression	0		86375	1					
ANR	86411	IdentifierDeclStatement	int * sock_fds = ( int * ) ss_malloc ( fd_count * sizeof ( int ) ) ;	437:4:12860:12916	86375	3	True				
ANR	86412	IdentifierDecl	* sock_fds = ( int * ) ss_malloc ( fd_count * sizeof ( int ) )		86375	0					
ANR	86413	IdentifierDeclType	int *		86375	0					
ANR	86414	Identifier	sock_fds		86375	1					
ANR	86415	AssignmentExpression	* sock_fds = ( int * ) ss_malloc ( fd_count * sizeof ( int ) )		86375	2		=			
ANR	86416	Identifier	sock_fds		86375	0					
ANR	86417	CastExpression	( int * ) ss_malloc ( fd_count * sizeof ( int ) )		86375	1					
ANR	86418	CastTarget	int *		86375	0					
ANR	86419	CallExpression	ss_malloc ( fd_count * sizeof ( int ) )		86375	1					
ANR	86420	Callee	ss_malloc		86375	0					
ANR	86421	Identifier	ss_malloc		86375	0					
ANR	86422	ArgumentList	fd_count * sizeof ( int )		86375	1					
ANR	86423	Argument	fd_count * sizeof ( int )		86375	0					
ANR	86424	MultiplicativeExpression	fd_count * sizeof ( int )		86375	0		*			
ANR	86425	Identifier	fd_count		86375	0					
ANR	86426	SizeofExpression	sizeof ( int )		86375	1					
ANR	86427	Sizeof	sizeof		86375	0					
ANR	86428	SizeofOperand	int		86375	1					
ANR	86429	ExpressionStatement	"memset ( sock_fds , 0 , fd_count * sizeof ( int ) )"	438:4:12922:12965	86375	4	True				
ANR	86430	CallExpression	"memset ( sock_fds , 0 , fd_count * sizeof ( int ) )"		86375	0					
ANR	86431	Callee	memset		86375	0					
ANR	86432	Identifier	memset		86375	0					
ANR	86433	ArgumentList	sock_fds		86375	1					
ANR	86434	Argument	sock_fds		86375	0					
ANR	86435	Identifier	sock_fds		86375	0					
ANR	86436	Argument	0		86375	1					
ANR	86437	PrimaryExpression	0		86375	0					
ANR	86438	Argument	fd_count * sizeof ( int )		86375	2					
ANR	86439	MultiplicativeExpression	fd_count * sizeof ( int )		86375	0		*			
ANR	86440	Identifier	fd_count		86375	0					
ANR	86441	SizeofExpression	sizeof ( int )		86375	1					
ANR	86442	Sizeof	sizeof		86375	0					
ANR	86443	SizeofOperand	int		86375	1					
ANR	86444	ForStatement	for ( int i = 0 ; i < manager -> host_num ; i ++ )		86375	5					
ANR	86445	ForInit	int i = 0 ;	441:9:13014:13023	86375	0	True				
ANR	86446	IdentifierDeclStatement	int i = 0 ;		86375	0					
ANR	86447	IdentifierDecl	i = 0		86375	0					
ANR	86448	IdentifierDeclType	int		86375	0					
ANR	86449	Identifier	i		86375	1					
ANR	86450	AssignmentExpression	i = 0		86375	2		=			
ANR	86451	Identifier	i		86375	0					
ANR	86452	PrimaryExpression	0		86375	1					
ANR	86453	Condition	i < manager -> host_num	441:20:13025:13045	86375	1	True				
ANR	86454	RelationalExpression	i < manager -> host_num		86375	0		<			
ANR	86455	Identifier	i		86375	0					
ANR	86456	PtrMemberAccess	manager -> host_num		86375	1					
ANR	86457	Identifier	manager		86375	0					
ANR	86458	Identifier	host_num		86375	1					
ANR	86459	PostIncDecOperationExpression	i ++	441:43:13048:13050	86375	2	True				
ANR	86460	Identifier	i		86375	0					
ANR	86461	IncDec	++		86375	1					
ANR	86462	CompoundStatement		10:48:348:348	86375	3					
ANR	86463	ExpressionStatement	"LOGI ( ""try to bind interface: %s, port: %s"" , manager -> hosts [ i ] , server -> port )"	442:8:13063:13139	86375	0	True				
ANR	86464	CallExpression	"LOGI ( ""try to bind interface: %s, port: %s"" , manager -> hosts [ i ] , server -> port )"		86375	0					
ANR	86465	Callee	LOGI		86375	0					
ANR	86466	Identifier	LOGI		86375	0					
ANR	86467	ArgumentList	"""try to bind interface: %s, port: %s"""		86375	1					
ANR	86468	Argument	"""try to bind interface: %s, port: %s"""		86375	0					
ANR	86469	PrimaryExpression	"""try to bind interface: %s, port: %s"""		86375	0					
ANR	86470	Argument	manager -> hosts [ i ]		86375	1					
ANR	86471	ArrayIndexing	manager -> hosts [ i ]		86375	0					
ANR	86472	PtrMemberAccess	manager -> hosts		86375	0					
ANR	86473	Identifier	manager		86375	0					
ANR	86474	Identifier	hosts		86375	1					
ANR	86475	Identifier	i		86375	1					
ANR	86476	Argument	server -> port		86375	2					
ANR	86477	PtrMemberAccess	server -> port		86375	0					
ANR	86478	Identifier	server		86375	0					
ANR	86479	Identifier	port		86375	1					
ANR	86480	IfStatement	if ( manager -> mode == UDP_ONLY )		86375	1					
ANR	86481	Condition	manager -> mode == UDP_ONLY	444:12:13154:13178	86375	0	True				
ANR	86482	EqualityExpression	manager -> mode == UDP_ONLY		86375	0		==			
ANR	86483	PtrMemberAccess	manager -> mode		86375	0					
ANR	86484	Identifier	manager		86375	0					
ANR	86485	Identifier	mode		86375	1					
ANR	86486	Identifier	UDP_ONLY		86375	1					
ANR	86487	CompoundStatement		13:39:476:476	86375	1					
ANR	86488	ExpressionStatement	"sock_fds [ i ] = create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_UDP )"	445:12:13195:13270	86375	0	True				
ANR	86489	AssignmentExpression	"sock_fds [ i ] = create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_UDP )"		86375	0		=			
ANR	86490	ArrayIndexing	sock_fds [ i ]		86375	0					
ANR	86491	Identifier	sock_fds		86375	0					
ANR	86492	Identifier	i		86375	1					
ANR	86493	CallExpression	"create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_UDP )"		86375	1					
ANR	86494	Callee	create_and_bind		86375	0					
ANR	86495	Identifier	create_and_bind		86375	0					
ANR	86496	ArgumentList	manager -> hosts [ i ]		86375	1					
ANR	86497	Argument	manager -> hosts [ i ]		86375	0					
ANR	86498	ArrayIndexing	manager -> hosts [ i ]		86375	0					
ANR	86499	PtrMemberAccess	manager -> hosts		86375	0					
ANR	86500	Identifier	manager		86375	0					
ANR	86501	Identifier	hosts		86375	1					
ANR	86502	Identifier	i		86375	1					
ANR	86503	Argument	server -> port		86375	1					
ANR	86504	PtrMemberAccess	server -> port		86375	0					
ANR	86505	Identifier	server		86375	0					
ANR	86506	Identifier	port		86375	1					
ANR	86507	Argument	IPPROTO_UDP		86375	2					
ANR	86508	Identifier	IPPROTO_UDP		86375	0					
ANR	86509	ElseStatement	else		86375	0					
ANR	86510	CompoundStatement		15:15:582:582	86375	0					
ANR	86511	ExpressionStatement	"sock_fds [ i ] = create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_TCP )"	447:12:13301:13376	86375	0	True				
ANR	86512	AssignmentExpression	"sock_fds [ i ] = create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_TCP )"		86375	0		=			
ANR	86513	ArrayIndexing	sock_fds [ i ]		86375	0					
ANR	86514	Identifier	sock_fds		86375	0					
ANR	86515	Identifier	i		86375	1					
ANR	86516	CallExpression	"create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_TCP )"		86375	1					
ANR	86517	Callee	create_and_bind		86375	0					
ANR	86518	Identifier	create_and_bind		86375	0					
ANR	86519	ArgumentList	manager -> hosts [ i ]		86375	1					
ANR	86520	Argument	manager -> hosts [ i ]		86375	0					
ANR	86521	ArrayIndexing	manager -> hosts [ i ]		86375	0					
ANR	86522	PtrMemberAccess	manager -> hosts		86375	0					
ANR	86523	Identifier	manager		86375	0					
ANR	86524	Identifier	hosts		86375	1					
ANR	86525	Identifier	i		86375	1					
ANR	86526	Argument	server -> port		86375	1					
ANR	86527	PtrMemberAccess	server -> port		86375	0					
ANR	86528	Identifier	server		86375	0					
ANR	86529	Identifier	port		86375	1					
ANR	86530	Argument	IPPROTO_TCP		86375	2					
ANR	86531	Identifier	IPPROTO_TCP		86375	0					
ANR	86532	IfStatement	if ( both_tcp_udp )		86375	2					
ANR	86533	Condition	both_tcp_udp	450:12:13401:13412	86375	0	True				
ANR	86534	Identifier	both_tcp_udp		86375	0					
ANR	86535	CompoundStatement		19:26:710:710	86375	1					
ANR	86536	ExpressionStatement	"sock_fds [ i + manager -> host_num ] = create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_UDP )"	451:12:13429:13524	86375	0	True				
ANR	86537	AssignmentExpression	"sock_fds [ i + manager -> host_num ] = create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_UDP )"		86375	0		=			
ANR	86538	ArrayIndexing	sock_fds [ i + manager -> host_num ]		86375	0					
ANR	86539	Identifier	sock_fds		86375	0					
ANR	86540	AdditiveExpression	i + manager -> host_num		86375	1		+			
ANR	86541	Identifier	i		86375	0					
ANR	86542	PtrMemberAccess	manager -> host_num		86375	1					
ANR	86543	Identifier	manager		86375	0					
ANR	86544	Identifier	host_num		86375	1					
ANR	86545	CallExpression	"create_and_bind ( manager -> hosts [ i ] , server -> port , IPPROTO_UDP )"		86375	1					
ANR	86546	Callee	create_and_bind		86375	0					
ANR	86547	Identifier	create_and_bind		86375	0					
ANR	86548	ArgumentList	manager -> hosts [ i ]		86375	1					
ANR	86549	Argument	manager -> hosts [ i ]		86375	0					
ANR	86550	ArrayIndexing	manager -> hosts [ i ]		86375	0					
ANR	86551	PtrMemberAccess	manager -> hosts		86375	0					
ANR	86552	Identifier	manager		86375	0					
ANR	86553	Identifier	hosts		86375	1					
ANR	86554	Identifier	i		86375	1					
ANR	86555	Argument	server -> port		86375	1					
ANR	86556	PtrMemberAccess	server -> port		86375	0					
ANR	86557	Identifier	server		86375	0					
ANR	86558	Identifier	port		86375	1					
ANR	86559	Argument	IPPROTO_UDP		86375	2					
ANR	86560	Identifier	IPPROTO_UDP		86375	0					
ANR	86561	IfStatement	if ( sock_fds [ i ] == - 1 || ( both_tcp_udp && sock_fds [ i + manager -> host_num ] == - 1 ) )		86375	3					
ANR	86562	Condition	sock_fds [ i ] == - 1 || ( both_tcp_udp && sock_fds [ i + manager -> host_num ] == - 1 )	454:12:13549:13624	86375	0	True				
ANR	86563	OrExpression	sock_fds [ i ] == - 1 || ( both_tcp_udp && sock_fds [ i + manager -> host_num ] == - 1 )		86375	0		||			
ANR	86564	EqualityExpression	sock_fds [ i ] == - 1		86375	0		==			
ANR	86565	ArrayIndexing	sock_fds [ i ]		86375	0					
ANR	86566	Identifier	sock_fds		86375	0					
ANR	86567	Identifier	i		86375	1					
ANR	86568	UnaryOperationExpression	- 1		86375	1					
ANR	86569	UnaryOperator	-		86375	0					
ANR	86570	PrimaryExpression	1		86375	1					
ANR	86571	AndExpression	both_tcp_udp && sock_fds [ i + manager -> host_num ] == - 1		86375	1		&&			
ANR	86572	Identifier	both_tcp_udp		86375	0					
ANR	86573	EqualityExpression	sock_fds [ i + manager -> host_num ] == - 1		86375	1		==			
ANR	86574	ArrayIndexing	sock_fds [ i + manager -> host_num ]		86375	0					
ANR	86575	Identifier	sock_fds		86375	0					
ANR	86576	AdditiveExpression	i + manager -> host_num		86375	1		+			
ANR	86577	Identifier	i		86375	0					
ANR	86578	PtrMemberAccess	manager -> host_num		86375	1					
ANR	86579	Identifier	manager		86375	0					
ANR	86580	Identifier	host_num		86375	1					
ANR	86581	UnaryOperationExpression	- 1		86375	1					
ANR	86582	UnaryOperator	-		86375	0					
ANR	86583	PrimaryExpression	1		86375	1					
ANR	86584	CompoundStatement		23:90:922:922	86375	1					
ANR	86585	ExpressionStatement	bind_err = - 1	455:12:13641:13654	86375	0	True				
ANR	86586	AssignmentExpression	bind_err = - 1		86375	0		=			
ANR	86587	Identifier	bind_err		86375	0					
ANR	86588	UnaryOperationExpression	- 1		86375	1					
ANR	86589	UnaryOperator	-		86375	0					
ANR	86590	PrimaryExpression	1		86375	1					
ANR	86591	BreakStatement	break ;	456:12:13668:13673	86375	1	True				
ANR	86592	ForStatement	for ( int i = 0 ; i < fd_count ; i ++ )		86375	6					
ANR	86593	ForInit	int i = 0 ;	461:9:13723:13732	86375	0	True				
ANR	86594	IdentifierDeclStatement	int i = 0 ;		86375	0					
ANR	86595	IdentifierDecl	i = 0		86375	0					
ANR	86596	IdentifierDeclType	int		86375	0					
ANR	86597	Identifier	i		86375	1					
ANR	86598	AssignmentExpression	i = 0		86375	2		=			
ANR	86599	Identifier	i		86375	0					
ANR	86600	PrimaryExpression	0		86375	1					
ANR	86601	Condition	i < fd_count	461:20:13734:13745	86375	1	True				
ANR	86602	RelationalExpression	i < fd_count		86375	0		<			
ANR	86603	Identifier	i		86375	0					
ANR	86604	Identifier	fd_count		86375	1					
ANR	86605	PostIncDecOperationExpression	i ++	461:34:13748:13750	86375	2	True				
ANR	86606	Identifier	i		86375	0					
ANR	86607	IncDec	++		86375	1					
ANR	86608	CompoundStatement		30:39:1048:1048	86375	3					
ANR	86609	IfStatement	if ( sock_fds [ i ] > 0 )		86375	0					
ANR	86610	Condition	sock_fds [ i ] > 0	462:12:13767:13781	86375	0	True				
ANR	86611	RelationalExpression	sock_fds [ i ] > 0		86375	0		>			
ANR	86612	ArrayIndexing	sock_fds [ i ]		86375	0					
ANR	86613	Identifier	sock_fds		86375	0					
ANR	86614	Identifier	i		86375	1					
ANR	86615	PrimaryExpression	0		86375	1					
ANR	86616	CompoundStatement		31:29:1079:1079	86375	1					
ANR	86617	ExpressionStatement	close ( sock_fds [ i ] )	463:12:13798:13816	86375	0	True				
ANR	86618	CallExpression	close ( sock_fds [ i ] )		86375	0					
ANR	86619	Callee	close		86375	0					
ANR	86620	Identifier	close		86375	0					
ANR	86621	ArgumentList	sock_fds [ i ]		86375	1					
ANR	86622	Argument	sock_fds [ i ]		86375	0					
ANR	86623	ArrayIndexing	sock_fds [ i ]		86375	0					
ANR	86624	Identifier	sock_fds		86375	0					
ANR	86625	Identifier	i		86375	1					
ANR	86626	ExpressionStatement	ss_free ( sock_fds )	467:4:13839:13856	86375	7	True				
ANR	86627	CallExpression	ss_free ( sock_fds )		86375	0					
ANR	86628	Callee	ss_free		86375	0					
ANR	86629	Identifier	ss_free		86375	0					
ANR	86630	ArgumentList	sock_fds		86375	1					
ANR	86631	Argument	sock_fds		86375	0					
ANR	86632	Identifier	sock_fds		86375	0					
ANR	86633	ReturnStatement	return bind_err == - 1 ? - 1 : 0 ;	469:4:13863:13893	86375	8	True				
ANR	86634	ConditionalExpression	bind_err == - 1 ? - 1 : 0		86375	0					
ANR	86635	Condition	bind_err == - 1		86375	0					
ANR	86636	EqualityExpression	bind_err == - 1		86375	0		==			
ANR	86637	Identifier	bind_err		86375	0					
ANR	86638	UnaryOperationExpression	- 1		86375	1					
ANR	86639	UnaryOperator	-		86375	0					
ANR	86640	PrimaryExpression	1		86375	1					
ANR	86641	UnaryOperationExpression	- 1		86375	1					
ANR	86642	UnaryOperator	-		86375	0					
ANR	86643	PrimaryExpression	1		86375	1					
ANR	86644	PrimaryExpression	0		86375	2					
ANR	86645	ReturnType	static int		86375	1					
ANR	86646	Identifier	check_port		86375	2					
ANR	86647	ParameterList	"struct manager_ctx * manager , struct server * server"		86375	3					
ANR	86648	Parameter	struct manager_ctx * manager	431:11:12652:12678	86375	0	True				
ANR	86649	ParameterType	struct manager_ctx *		86375	0					
ANR	86650	Identifier	manager		86375	1					
ANR	86651	Parameter	struct server * server	431:40:12681:12701	86375	1	True				
ANR	86652	ParameterType	struct server *		86375	0					
ANR	86653	Identifier	server		86375	1					
ANR	86654	CFGEntryNode	ENTRY		86375		True				
ANR	86655	CFGExitNode	EXIT		86375		True				
ANR	86656	Symbol	server		86375						
ANR	86657	Symbol	sock_fds		86375						
ANR	86658	Symbol	* server		86375						
ANR	86659	Symbol	create_and_bind		86375						
ANR	86660	Symbol	manager		86375						
ANR	86661	Symbol	fd_count		86375						
ANR	86662	Symbol	UDP_ONLY		86375						
ANR	86663	Symbol	* sock_fds		86375						
ANR	86664	Symbol	bind_err		86375						
ANR	86665	Symbol	manager -> hosts		86375						
ANR	86666	Symbol	i		86375						
ANR	86667	Symbol	both_tcp_udp		86375						
ANR	86668	Symbol	* i		86375						
ANR	86669	Symbol	TCP_AND_UDP		86375						
ANR	86670	Symbol	IPPROTO_UDP		86375						
ANR	86671	Symbol	IPPROTO_TCP		86375						
ANR	86672	Symbol	manager -> mode		86375						
ANR	86673	Symbol	* manager -> host_num		86375						
ANR	86674	Symbol	* manager -> hosts		86375						
ANR	86675	Symbol	ss_malloc		86375						
ANR	86676	Symbol	manager -> host_num		86375						
ANR	86677	Symbol	* * manager		86375						
ANR	86678	Symbol	server -> port		86375						
ANR	86679	Symbol	* manager		86375						
ANR	86680	Function	add_server	472:0:13898:14399							
ANR	86681	FunctionDef	"add_server (struct manager_ctx * manager , struct server * server)"		86680	0					
ANR	86682	CompoundStatement		474:0:13972:14399	86680	0					
ANR	86683	IdentifierDeclStatement	"int ret = check_port ( manager , server ) ;"	475:4:13978:14015	86680	0	True				
ANR	86684	IdentifierDecl	"ret = check_port ( manager , server )"		86680	0					
ANR	86685	IdentifierDeclType	int		86680	0					
ANR	86686	Identifier	ret		86680	1					
ANR	86687	AssignmentExpression	"ret = check_port ( manager , server )"		86680	2		=			
ANR	86688	Identifier	ret		86680	0					
ANR	86689	CallExpression	"check_port ( manager , server )"		86680	1					
ANR	86690	Callee	check_port		86680	0					
ANR	86691	Identifier	check_port		86680	0					
ANR	86692	ArgumentList	manager		86680	1					
ANR	86693	Argument	manager		86680	0					
ANR	86694	Identifier	manager		86680	0					
ANR	86695	Argument	server		86680	1					
ANR	86696	Identifier	server		86680	0					
ANR	86697	IfStatement	if ( ret == - 1 )		86680	1					
ANR	86698	Condition	ret == - 1	477:8:14026:14034	86680	0	True				
ANR	86699	EqualityExpression	ret == - 1		86680	0		==			
ANR	86700	Identifier	ret		86680	0					
ANR	86701	UnaryOperationExpression	- 1		86680	1					
ANR	86702	UnaryOperator	-		86680	0					
ANR	86703	PrimaryExpression	1		86680	1					
ANR	86704	CompoundStatement		4:19:64:64	86680	1					
ANR	86705	ExpressionStatement	"LOGE ( ""port is not available, please check."" )"	478:8:14047:14091	86680	0	True				
ANR	86706	CallExpression	"LOGE ( ""port is not available, please check."" )"		86680	0					
ANR	86707	Callee	LOGE		86680	0					
ANR	86708	Identifier	LOGE		86680	0					
ANR	86709	ArgumentList	"""port is not available, please check."""		86680	1					
ANR	86710	Argument	"""port is not available, please check."""		86680	0					
ANR	86711	PrimaryExpression	"""port is not available, please check."""		86680	0					
ANR	86712	ReturnStatement	return - 1 ;	479:8:14101:14110	86680	1	True				
ANR	86713	UnaryOperationExpression	- 1		86680	0					
ANR	86714	UnaryOperator	-		86680	0					
ANR	86715	PrimaryExpression	1		86680	1					
ANR	86716	Statement	bool	482:4:14123:14126	86680	2	True				
ANR	86717	Statement	new	482:9:14128:14130	86680	3	True				
ANR	86718	Statement	=	482:13:14132:14132	86680	4	True				
ANR	86719	ExpressionStatement	false	482:15:14134:14139	86680	5	True				
ANR	86720	Identifier	false		86680	0					
ANR	86721	Statement	cork_hash_table_put	483:4:14145:14163	86680	6	True				
ANR	86722	Statement	(	483:23:14164:14164	86680	7	True				
ANR	86723	Statement	server_table	483:24:14165:14176	86680	8	True				
ANR	86724	Statement	","	483:36:14177:14177	86680	9	True				
ANR	86725	Statement	(	483:38:14179:14179	86680	10	True				
ANR	86726	Statement	void	483:39:14180:14183	86680	11	True				
ANR	86727	Statement	*	483:44:14185:14185	86680	12	True				
ANR	86728	Statement	)	483:45:14186:14186	86680	13	True				
ANR	86729	Statement	server	483:46:14187:14192	86680	14	True				
ANR	86730	Statement	->	483:52:14193:14194	86680	15	True				
ANR	86731	Statement	port	483:54:14195:14198	86680	16	True				
ANR	86732	Statement	","	483:58:14199:14199	86680	17	True				
ANR	86733	Statement	(	483:60:14201:14201	86680	18	True				
ANR	86734	Statement	void	483:61:14202:14205	86680	19	True				
ANR	86735	Statement	*	483:66:14207:14207	86680	20	True				
ANR	86736	Statement	)	483:67:14208:14208	86680	21	True				
ANR	86737	Statement	server	483:68:14209:14214	86680	22	True				
ANR	86738	Statement	","	483:74:14215:14215	86680	23	True				
ANR	86739	Statement	&	483:76:14217:14217	86680	24	True				
ANR	86740	Statement	new	483:77:14218:14220	86680	25	True				
ANR	86741	Statement	","	483:80:14221:14221	86680	26	True				
ANR	86742	Statement	NULL	483:82:14223:14226	86680	27	True				
ANR	86743	Statement	","	483:86:14227:14227	86680	28	True				
ANR	86744	Statement	NULL	483:88:14229:14232	86680	29	True				
ANR	86745	Statement	)	483:92:14233:14233	86680	30	True				
ANR	86746	ExpressionStatement		483:93:14234:14234	86680	31	True				
ANR	86747	IdentifierDeclStatement	"char * cmd = construct_command_line ( manager , server ) ;"	485:4:14241:14292	86680	32	True				
ANR	86748	IdentifierDecl	"* cmd = construct_command_line ( manager , server )"		86680	0					
ANR	86749	IdentifierDeclType	char *		86680	0					
ANR	86750	Identifier	cmd		86680	1					
ANR	86751	AssignmentExpression	"* cmd = construct_command_line ( manager , server )"		86680	2		=			
ANR	86752	Identifier	cmd		86680	0					
ANR	86753	CallExpression	"construct_command_line ( manager , server )"		86680	1					
ANR	86754	Callee	construct_command_line		86680	0					
ANR	86755	Identifier	construct_command_line		86680	0					
ANR	86756	ArgumentList	manager		86680	1					
ANR	86757	Argument	manager		86680	0					
ANR	86758	Identifier	manager		86680	0					
ANR	86759	Argument	server		86680	1					
ANR	86760	Identifier	server		86680	0					
ANR	86761	IfStatement	if ( system ( cmd ) == - 1 )		86680	33					
ANR	86762	Condition	system ( cmd ) == - 1	486:8:14302:14318	86680	0	True				
ANR	86763	EqualityExpression	system ( cmd ) == - 1		86680	0		==			
ANR	86764	CallExpression	system ( cmd )		86680	0					
ANR	86765	Callee	system		86680	0					
ANR	86766	Identifier	system		86680	0					
ANR	86767	ArgumentList	cmd		86680	1					
ANR	86768	Argument	cmd		86680	0					
ANR	86769	Identifier	cmd		86680	0					
ANR	86770	UnaryOperationExpression	- 1		86680	1					
ANR	86771	UnaryOperator	-		86680	0					
ANR	86772	PrimaryExpression	1		86680	1					
ANR	86773	CompoundStatement		13:27:348:348	86680	1					
ANR	86774	ExpressionStatement	"ERROR ( ""add_server_system"" )"	487:8:14331:14357	86680	0	True				
ANR	86775	CallExpression	"ERROR ( ""add_server_system"" )"		86680	0					
ANR	86776	Callee	ERROR		86680	0					
ANR	86777	Identifier	ERROR		86680	0					
ANR	86778	ArgumentList	"""add_server_system"""		86680	1					
ANR	86779	Argument	"""add_server_system"""		86680	0					
ANR	86780	PrimaryExpression	"""add_server_system"""		86680	0					
ANR	86781	ReturnStatement	return - 1 ;	488:8:14367:14376	86680	1	True				
ANR	86782	UnaryOperationExpression	- 1		86680	0					
ANR	86783	UnaryOperator	-		86680	0					
ANR	86784	PrimaryExpression	1		86680	1					
ANR	86785	ReturnStatement	return 0 ;	491:4:14389:14397	86680	34	True				
ANR	86786	PrimaryExpression	0		86680	0					
ANR	86787	ReturnType	static int		86680	1					
ANR	86788	Identifier	add_server		86680	2					
ANR	86789	ParameterList	"struct manager_ctx * manager , struct server * server"		86680	3					
ANR	86790	Parameter	struct manager_ctx * manager	473:11:13920:13946	86680	0	True				
ANR	86791	ParameterType	struct manager_ctx *		86680	0					
ANR	86792	Identifier	manager		86680	1					
ANR	86793	Parameter	struct server * server	473:40:13949:13969	86680	1	True				
ANR	86794	ParameterType	struct server *		86680	0					
ANR	86795	Identifier	server		86680	1					
ANR	86796	CFGEntryNode	ENTRY		86680		True				
ANR	86797	CFGExitNode	EXIT		86680		True				
ANR	86798	Symbol	ret		86680						
ANR	86799	Symbol	server		86680						
ANR	86800	Symbol	check_port		86680						
ANR	86801	Symbol	system		86680						
ANR	86802	Symbol	manager		86680						
ANR	86803	Symbol	construct_command_line		86680						
ANR	86804	Symbol	cmd		86680						
ANR	86805	Function	kill_server	494:0:14402:14938							
ANR	86806	FunctionDef	"kill_server (char * prefix , char * pid_file)"		86805	0					
ANR	86807	CompoundStatement		496:0:14456:14938	86805	0					
ANR	86808	IdentifierDeclStatement	char * path = NULL ;	497:4:14462:14479	86805	0	True				
ANR	86809	IdentifierDecl	* path = NULL		86805	0					
ANR	86810	IdentifierDeclType	char *		86805	0					
ANR	86811	Identifier	path		86805	1					
ANR	86812	AssignmentExpression	* path = NULL		86805	2		=			
ANR	86813	Identifier	NULL		86805	0					
ANR	86814	Identifier	NULL		86805	1					
ANR	86815	IdentifierDeclStatement	"int pid , path_size = strlen ( prefix ) + strlen ( pid_file ) + 2 ;"	498:4:14485:14543	86805	1	True				
ANR	86816	IdentifierDecl	pid		86805	0					
ANR	86817	IdentifierDeclType	int		86805	0					
ANR	86818	Identifier	pid		86805	1					
ANR	86819	IdentifierDecl	path_size = strlen ( prefix ) + strlen ( pid_file ) + 2		86805	1					
ANR	86820	IdentifierDeclType	int		86805	0					
ANR	86821	Identifier	path_size		86805	1					
ANR	86822	AssignmentExpression	path_size = strlen ( prefix ) + strlen ( pid_file ) + 2		86805	2		=			
ANR	86823	Identifier	path_size		86805	0					
ANR	86824	AdditiveExpression	strlen ( prefix ) + strlen ( pid_file ) + 2		86805	1		+			
ANR	86825	CallExpression	strlen ( prefix )		86805	0					
ANR	86826	Callee	strlen		86805	0					
ANR	86827	Identifier	strlen		86805	0					
ANR	86828	ArgumentList	prefix		86805	1					
ANR	86829	Argument	prefix		86805	0					
ANR	86830	Identifier	prefix		86805	0					
ANR	86831	AdditiveExpression	strlen ( pid_file ) + 2		86805	1		+			
ANR	86832	CallExpression	strlen ( pid_file )		86805	0					
ANR	86833	Callee	strlen		86805	0					
ANR	86834	Identifier	strlen		86805	0					
ANR	86835	ArgumentList	pid_file		86805	1					
ANR	86836	Argument	pid_file		86805	0					
ANR	86837	Identifier	pid_file		86805	0					
ANR	86838	PrimaryExpression	2		86805	1					
ANR	86839	ExpressionStatement	path = ss_malloc ( path_size )	499:4:14549:14576	86805	2	True				
ANR	86840	AssignmentExpression	path = ss_malloc ( path_size )		86805	0		=			
ANR	86841	Identifier	path		86805	0					
ANR	86842	CallExpression	ss_malloc ( path_size )		86805	1					
ANR	86843	Callee	ss_malloc		86805	0					
ANR	86844	Identifier	ss_malloc		86805	0					
ANR	86845	ArgumentList	path_size		86805	1					
ANR	86846	Argument	path_size		86805	0					
ANR	86847	Identifier	path_size		86805	0					
ANR	86848	ExpressionStatement	"snprintf ( path , path_size , ""%s/%s"" , prefix , pid_file )"	500:4:14582:14634	86805	3	True				
ANR	86849	CallExpression	"snprintf ( path , path_size , ""%s/%s"" , prefix , pid_file )"		86805	0					
ANR	86850	Callee	snprintf		86805	0					
ANR	86851	Identifier	snprintf		86805	0					
ANR	86852	ArgumentList	path		86805	1					
ANR	86853	Argument	path		86805	0					
ANR	86854	Identifier	path		86805	0					
ANR	86855	Argument	path_size		86805	1					
ANR	86856	Identifier	path_size		86805	0					
ANR	86857	Argument	"""%s/%s"""		86805	2					
ANR	86858	PrimaryExpression	"""%s/%s"""		86805	0					
ANR	86859	Argument	prefix		86805	3					
ANR	86860	Identifier	prefix		86805	0					
ANR	86861	Argument	pid_file		86805	4					
ANR	86862	Identifier	pid_file		86805	0					
ANR	86863	IdentifierDeclStatement	"FILE * f = fopen ( path , ""r"" ) ;"	501:4:14640:14666	86805	4	True				
ANR	86864	IdentifierDecl	"* f = fopen ( path , ""r"" )"		86805	0					
ANR	86865	IdentifierDeclType	FILE *		86805	0					
ANR	86866	Identifier	f		86805	1					
ANR	86867	AssignmentExpression	"* f = fopen ( path , ""r"" )"		86805	2		=			
ANR	86868	Identifier	f		86805	0					
ANR	86869	CallExpression	"fopen ( path , ""r"" )"		86805	1					
ANR	86870	Callee	fopen		86805	0					
ANR	86871	Identifier	fopen		86805	0					
ANR	86872	ArgumentList	path		86805	1					
ANR	86873	Argument	path		86805	0					
ANR	86874	Identifier	path		86805	0					
ANR	86875	Argument	"""r"""		86805	1					
ANR	86876	PrimaryExpression	"""r"""		86805	0					
ANR	86877	IfStatement	if ( f == NULL )		86805	5					
ANR	86878	Condition	f == NULL	502:8:14676:14684	86805	0	True				
ANR	86879	EqualityExpression	f == NULL		86805	0		==			
ANR	86880	Identifier	f		86805	0					
ANR	86881	Identifier	NULL		86805	1					
ANR	86882	CompoundStatement		7:19:230:230	86805	1					
ANR	86883	IfStatement	if ( verbose )		86805	0					
ANR	86884	Condition	verbose	503:12:14701:14707	86805	0	True				
ANR	86885	Identifier	verbose		86805	0					
ANR	86886	CompoundStatement		8:21:253:253	86805	1					
ANR	86887	ExpressionStatement	"LOGE ( ""unable to open pid file"" )"	504:12:14724:14755	86805	0	True				
ANR	86888	CallExpression	"LOGE ( ""unable to open pid file"" )"		86805	0					
ANR	86889	Callee	LOGE		86805	0					
ANR	86890	Identifier	LOGE		86805	0					
ANR	86891	ArgumentList	"""unable to open pid file"""		86805	1					
ANR	86892	Argument	"""unable to open pid file"""		86805	0					
ANR	86893	PrimaryExpression	"""unable to open pid file"""		86805	0					
ANR	86894	ExpressionStatement	ss_free ( path )	506:8:14775:14788	86805	1	True				
ANR	86895	CallExpression	ss_free ( path )		86805	0					
ANR	86896	Callee	ss_free		86805	0					
ANR	86897	Identifier	ss_free		86805	0					
ANR	86898	ArgumentList	path		86805	1					
ANR	86899	Argument	path		86805	0					
ANR	86900	Identifier	path		86805	0					
ANR	86901	ReturnStatement	return ;	507:8:14798:14804	86805	2	True				
ANR	86902	IfStatement	"if ( fscanf ( f , ""%d"" , & pid ) != EOF )"		86805	6					
ANR	86903	Condition	"fscanf ( f , ""%d"" , & pid ) != EOF"	509:8:14820:14847	86805	0	True				
ANR	86904	EqualityExpression	"fscanf ( f , ""%d"" , & pid ) != EOF"		86805	0		!=			
ANR	86905	CallExpression	"fscanf ( f , ""%d"" , & pid )"		86805	0					
ANR	86906	Callee	fscanf		86805	0					
ANR	86907	Identifier	fscanf		86805	0					
ANR	86908	ArgumentList	f		86805	1					
ANR	86909	Argument	f		86805	0					
ANR	86910	Identifier	f		86805	0					
ANR	86911	Argument	"""%d"""		86805	1					
ANR	86912	PrimaryExpression	"""%d"""		86805	0					
ANR	86913	Argument	& pid		86805	2					
ANR	86914	UnaryOperationExpression	& pid		86805	0					
ANR	86915	UnaryOperator	&		86805	0					
ANR	86916	Identifier	pid		86805	1					
ANR	86917	Identifier	EOF		86805	1					
ANR	86918	CompoundStatement		14:38:393:393	86805	1					
ANR	86919	ExpressionStatement	"kill ( pid , SIGTERM )"	510:8:14860:14878	86805	0	True				
ANR	86920	CallExpression	"kill ( pid , SIGTERM )"		86805	0					
ANR	86921	Callee	kill		86805	0					
ANR	86922	Identifier	kill		86805	0					
ANR	86923	ArgumentList	pid		86805	1					
ANR	86924	Argument	pid		86805	0					
ANR	86925	Identifier	pid		86805	0					
ANR	86926	Argument	SIGTERM		86805	1					
ANR	86927	Identifier	SIGTERM		86805	0					
ANR	86928	ExpressionStatement	fclose ( f )	512:4:14890:14899	86805	7	True				
ANR	86929	CallExpression	fclose ( f )		86805	0					
ANR	86930	Callee	fclose		86805	0					
ANR	86931	Identifier	fclose		86805	0					
ANR	86932	ArgumentList	f		86805	1					
ANR	86933	Argument	f		86805	0					
ANR	86934	Identifier	f		86805	0					
ANR	86935	ExpressionStatement	remove ( path )	513:4:14905:14917	86805	8	True				
ANR	86936	CallExpression	remove ( path )		86805	0					
ANR	86937	Callee	remove		86805	0					
ANR	86938	Identifier	remove		86805	0					
ANR	86939	ArgumentList	path		86805	1					
ANR	86940	Argument	path		86805	0					
ANR	86941	Identifier	path		86805	0					
ANR	86942	ExpressionStatement	ss_free ( path )	514:4:14923:14936	86805	9	True				
ANR	86943	CallExpression	ss_free ( path )		86805	0					
ANR	86944	Callee	ss_free		86805	0					
ANR	86945	Identifier	ss_free		86805	0					
ANR	86946	ArgumentList	path		86805	1					
ANR	86947	Argument	path		86805	0					
ANR	86948	Identifier	path		86805	0					
ANR	86949	ReturnType	static void		86805	1					
ANR	86950	Identifier	kill_server		86805	2					
ANR	86951	ParameterList	"char * prefix , char * pid_file"		86805	3					
ANR	86952	Parameter	char * prefix	495:12:14426:14437	86805	0	True				
ANR	86953	ParameterType	char *		86805	0					
ANR	86954	Identifier	prefix		86805	1					
ANR	86955	Parameter	char * pid_file	495:26:14440:14453	86805	1	True				
ANR	86956	ParameterType	char *		86805	0					
ANR	86957	Identifier	pid_file		86805	1					
ANR	86958	CFGEntryNode	ENTRY		86805		True				
ANR	86959	CFGExitNode	EXIT		86805		True				
ANR	86960	Symbol	fopen		86805						
ANR	86961	Symbol	NULL		86805						
ANR	86962	Symbol	path_size		86805						
ANR	86963	Symbol	prefix		86805						
ANR	86964	Symbol	f		86805						
ANR	86965	Symbol	pid		86805						
ANR	86966	Symbol	verbose		86805						
ANR	86967	Symbol	pid_file		86805						
ANR	86968	Symbol	path		86805						
ANR	86969	Symbol	strlen		86805						
ANR	86970	Symbol	fscanf		86805						
ANR	86971	Symbol	& pid		86805						
ANR	86972	Symbol	ss_malloc		86805						
ANR	86973	Symbol	SIGTERM		86805						
ANR	86974	Symbol	EOF		86805						
ANR	86975	Function	stop_server	517:0:14941:15465							
ANR	86976	FunctionDef	"stop_server (char * prefix , char * port)"		86975	0					
ANR	86977	CompoundStatement		519:0:14991:15465	86975	0					
ANR	86978	IdentifierDeclStatement	char * path = NULL ;	520:4:14997:15014	86975	0	True				
ANR	86979	IdentifierDecl	* path = NULL		86975	0					
ANR	86980	IdentifierDeclType	char *		86975	0					
ANR	86981	Identifier	path		86975	1					
ANR	86982	AssignmentExpression	* path = NULL		86975	2		=			
ANR	86983	Identifier	NULL		86975	0					
ANR	86984	Identifier	NULL		86975	1					
ANR	86985	IdentifierDeclStatement	"int pid , path_size = strlen ( prefix ) + strlen ( port ) + 20 ;"	521:4:15020:15075	86975	1	True				
ANR	86986	IdentifierDecl	pid		86975	0					
ANR	86987	IdentifierDeclType	int		86975	0					
ANR	86988	Identifier	pid		86975	1					
ANR	86989	IdentifierDecl	path_size = strlen ( prefix ) + strlen ( port ) + 20		86975	1					
ANR	86990	IdentifierDeclType	int		86975	0					
ANR	86991	Identifier	path_size		86975	1					
ANR	86992	AssignmentExpression	path_size = strlen ( prefix ) + strlen ( port ) + 20		86975	2		=			
ANR	86993	Identifier	path_size		86975	0					
ANR	86994	AdditiveExpression	strlen ( prefix ) + strlen ( port ) + 20		86975	1		+			
ANR	86995	CallExpression	strlen ( prefix )		86975	0					
ANR	86996	Callee	strlen		86975	0					
ANR	86997	Identifier	strlen		86975	0					
ANR	86998	ArgumentList	prefix		86975	1					
ANR	86999	Argument	prefix		86975	0					
ANR	87000	Identifier	prefix		86975	0					
ANR	87001	AdditiveExpression	strlen ( port ) + 20		86975	1		+			
ANR	87002	CallExpression	strlen ( port )		86975	0					
ANR	87003	Callee	strlen		86975	0					
ANR	87004	Identifier	strlen		86975	0					
ANR	87005	ArgumentList	port		86975	1					
ANR	87006	Argument	port		86975	0					
ANR	87007	Identifier	port		86975	0					
ANR	87008	PrimaryExpression	20		86975	1					
ANR	87009	ExpressionStatement	path = ss_malloc ( path_size )	522:4:15081:15108	86975	2	True				
ANR	87010	AssignmentExpression	path = ss_malloc ( path_size )		86975	0		=			
ANR	87011	Identifier	path		86975	0					
ANR	87012	CallExpression	ss_malloc ( path_size )		86975	1					
ANR	87013	Callee	ss_malloc		86975	0					
ANR	87014	Identifier	ss_malloc		86975	0					
ANR	87015	ArgumentList	path_size		86975	1					
ANR	87016	Argument	path_size		86975	0					
ANR	87017	Identifier	path_size		86975	0					
ANR	87018	ExpressionStatement	"snprintf ( path , path_size , ""%s/.shadowsocks_%s.pid"" , prefix , port )"	523:4:15114:15179	86975	3	True				
ANR	87019	CallExpression	"snprintf ( path , path_size , ""%s/.shadowsocks_%s.pid"" , prefix , port )"		86975	0					
ANR	87020	Callee	snprintf		86975	0					
ANR	87021	Identifier	snprintf		86975	0					
ANR	87022	ArgumentList	path		86975	1					
ANR	87023	Argument	path		86975	0					
ANR	87024	Identifier	path		86975	0					
ANR	87025	Argument	path_size		86975	1					
ANR	87026	Identifier	path_size		86975	0					
ANR	87027	Argument	"""%s/.shadowsocks_%s.pid"""		86975	2					
ANR	87028	PrimaryExpression	"""%s/.shadowsocks_%s.pid"""		86975	0					
ANR	87029	Argument	prefix		86975	3					
ANR	87030	Identifier	prefix		86975	0					
ANR	87031	Argument	port		86975	4					
ANR	87032	Identifier	port		86975	0					
ANR	87033	IdentifierDeclStatement	"FILE * f = fopen ( path , ""r"" ) ;"	524:4:15185:15211	86975	4	True				
ANR	87034	IdentifierDecl	"* f = fopen ( path , ""r"" )"		86975	0					
ANR	87035	IdentifierDeclType	FILE *		86975	0					
ANR	87036	Identifier	f		86975	1					
ANR	87037	AssignmentExpression	"* f = fopen ( path , ""r"" )"		86975	2		=			
ANR	87038	Identifier	f		86975	0					
ANR	87039	CallExpression	"fopen ( path , ""r"" )"		86975	1					
ANR	87040	Callee	fopen		86975	0					
ANR	87041	Identifier	fopen		86975	0					
ANR	87042	ArgumentList	path		86975	1					
ANR	87043	Argument	path		86975	0					
ANR	87044	Identifier	path		86975	0					
ANR	87045	Argument	"""r"""		86975	1					
ANR	87046	PrimaryExpression	"""r"""		86975	0					
ANR	87047	IfStatement	if ( f == NULL )		86975	5					
ANR	87048	Condition	f == NULL	525:8:15221:15229	86975	0	True				
ANR	87049	EqualityExpression	f == NULL		86975	0		==			
ANR	87050	Identifier	f		86975	0					
ANR	87051	Identifier	NULL		86975	1					
ANR	87052	CompoundStatement		7:19:240:240	86975	1					
ANR	87053	IfStatement	if ( verbose )		86975	0					
ANR	87054	Condition	verbose	526:12:15246:15252	86975	0	True				
ANR	87055	Identifier	verbose		86975	0					
ANR	87056	CompoundStatement		8:21:263:263	86975	1					
ANR	87057	ExpressionStatement	"LOGE ( ""unable to open pid file"" )"	527:12:15269:15300	86975	0	True				
ANR	87058	CallExpression	"LOGE ( ""unable to open pid file"" )"		86975	0					
ANR	87059	Callee	LOGE		86975	0					
ANR	87060	Identifier	LOGE		86975	0					
ANR	87061	ArgumentList	"""unable to open pid file"""		86975	1					
ANR	87062	Argument	"""unable to open pid file"""		86975	0					
ANR	87063	PrimaryExpression	"""unable to open pid file"""		86975	0					
ANR	87064	ExpressionStatement	ss_free ( path )	529:8:15320:15333	86975	1	True				
ANR	87065	CallExpression	ss_free ( path )		86975	0					
ANR	87066	Callee	ss_free		86975	0					
ANR	87067	Identifier	ss_free		86975	0					
ANR	87068	ArgumentList	path		86975	1					
ANR	87069	Argument	path		86975	0					
ANR	87070	Identifier	path		86975	0					
ANR	87071	ReturnStatement	return ;	530:8:15343:15349	86975	2	True				
ANR	87072	IfStatement	"if ( fscanf ( f , ""%d"" , & pid ) != EOF )"		86975	6					
ANR	87073	Condition	"fscanf ( f , ""%d"" , & pid ) != EOF"	532:8:15365:15392	86975	0	True				
ANR	87074	EqualityExpression	"fscanf ( f , ""%d"" , & pid ) != EOF"		86975	0		!=			
ANR	87075	CallExpression	"fscanf ( f , ""%d"" , & pid )"		86975	0					
ANR	87076	Callee	fscanf		86975	0					
ANR	87077	Identifier	fscanf		86975	0					
ANR	87078	ArgumentList	f		86975	1					
ANR	87079	Argument	f		86975	0					
ANR	87080	Identifier	f		86975	0					
ANR	87081	Argument	"""%d"""		86975	1					
ANR	87082	PrimaryExpression	"""%d"""		86975	0					
ANR	87083	Argument	& pid		86975	2					
ANR	87084	UnaryOperationExpression	& pid		86975	0					
ANR	87085	UnaryOperator	&		86975	0					
ANR	87086	Identifier	pid		86975	1					
ANR	87087	Identifier	EOF		86975	1					
ANR	87088	CompoundStatement		14:38:403:403	86975	1					
ANR	87089	ExpressionStatement	"kill ( pid , SIGTERM )"	533:8:15405:15423	86975	0	True				
ANR	87090	CallExpression	"kill ( pid , SIGTERM )"		86975	0					
ANR	87091	Callee	kill		86975	0					
ANR	87092	Identifier	kill		86975	0					
ANR	87093	ArgumentList	pid		86975	1					
ANR	87094	Argument	pid		86975	0					
ANR	87095	Identifier	pid		86975	0					
ANR	87096	Argument	SIGTERM		86975	1					
ANR	87097	Identifier	SIGTERM		86975	0					
ANR	87098	ExpressionStatement	fclose ( f )	535:4:15435:15444	86975	7	True				
ANR	87099	CallExpression	fclose ( f )		86975	0					
ANR	87100	Callee	fclose		86975	0					
ANR	87101	Identifier	fclose		86975	0					
ANR	87102	ArgumentList	f		86975	1					
ANR	87103	Argument	f		86975	0					
ANR	87104	Identifier	f		86975	0					
ANR	87105	ExpressionStatement	ss_free ( path )	536:4:15450:15463	86975	8	True				
ANR	87106	CallExpression	ss_free ( path )		86975	0					
ANR	87107	Callee	ss_free		86975	0					
ANR	87108	Identifier	ss_free		86975	0					
ANR	87109	ArgumentList	path		86975	1					
ANR	87110	Argument	path		86975	0					
ANR	87111	Identifier	path		86975	0					
ANR	87112	ReturnType	static void		86975	1					
ANR	87113	Identifier	stop_server		86975	2					
ANR	87114	ParameterList	"char * prefix , char * port"		86975	3					
ANR	87115	Parameter	char * prefix	518:12:14965:14976	86975	0	True				
ANR	87116	ParameterType	char *		86975	0					
ANR	87117	Identifier	prefix		86975	1					
ANR	87118	Parameter	char * port	518:26:14979:14988	86975	1	True				
ANR	87119	ParameterType	char *		86975	0					
ANR	87120	Identifier	port		86975	1					
ANR	87121	CFGEntryNode	ENTRY		86975		True				
ANR	87122	CFGExitNode	EXIT		86975		True				
ANR	87123	Symbol	fopen		86975						
ANR	87124	Symbol	NULL		86975						
ANR	87125	Symbol	path_size		86975						
ANR	87126	Symbol	prefix		86975						
ANR	87127	Symbol	f		86975						
ANR	87128	Symbol	pid		86975						
ANR	87129	Symbol	verbose		86975						
ANR	87130	Symbol	path		86975						
ANR	87131	Symbol	strlen		86975						
ANR	87132	Symbol	fscanf		86975						
ANR	87133	Symbol	port		86975						
ANR	87134	Symbol	& pid		86975						
ANR	87135	Symbol	ss_malloc		86975						
ANR	87136	Symbol	SIGTERM		86975						
ANR	87137	Symbol	EOF		86975						
ANR	87138	Function	remove_server	539:0:15468:15831							
ANR	87139	FunctionDef	"remove_server (char * prefix , char * port)"		87138	0					
ANR	87140	CompoundStatement		541:0:15520:15831	87138	0					
ANR	87141	IdentifierDeclStatement	char * old_port = NULL ;	542:4:15526:15558	87138	0	True				
ANR	87142	IdentifierDecl	* old_port = NULL		87138	0					
ANR	87143	IdentifierDeclType	char *		87138	0					
ANR	87144	Identifier	old_port		87138	1					
ANR	87145	AssignmentExpression	* old_port = NULL		87138	2		=			
ANR	87146	Identifier	NULL		87138	0					
ANR	87147	Identifier	NULL		87138	1					
ANR	87148	IdentifierDeclStatement	struct server * old_server = NULL ;	543:4:15564:15596	87138	1	True				
ANR	87149	IdentifierDecl	* old_server = NULL		87138	0					
ANR	87150	IdentifierDeclType	struct server *		87138	0					
ANR	87151	Identifier	old_server		87138	1					
ANR	87152	AssignmentExpression	* old_server = NULL		87138	2		=			
ANR	87153	Identifier	NULL		87138	0					
ANR	87154	Identifier	NULL		87138	1					
ANR	87155	ExpressionStatement	"cork_hash_table_delete ( server_table , ( void * ) port , ( void * * ) & old_port , ( void * * ) & old_server )"	545:4:15603:15695	87138	2	True				
ANR	87156	CallExpression	"cork_hash_table_delete ( server_table , ( void * ) port , ( void * * ) & old_port , ( void * * ) & old_server )"		87138	0					
ANR	87157	Callee	cork_hash_table_delete		87138	0					
ANR	87158	Identifier	cork_hash_table_delete		87138	0					
ANR	87159	ArgumentList	server_table		87138	1					
ANR	87160	Argument	server_table		87138	0					
ANR	87161	Identifier	server_table		87138	0					
ANR	87162	Argument	( void * ) port		87138	1					
ANR	87163	CastExpression	( void * ) port		87138	0					
ANR	87164	CastTarget	void *		87138	0					
ANR	87165	Identifier	port		87138	1					
ANR	87166	Argument	( void * * ) & old_port		87138	2					
ANR	87167	CastExpression	( void * * ) & old_port		87138	0					
ANR	87168	CastTarget	void * *		87138	0					
ANR	87169	UnaryOperationExpression	& old_port		87138	1					
ANR	87170	UnaryOperator	&		87138	0					
ANR	87171	Identifier	old_port		87138	1					
ANR	87172	Argument	( void * * ) & old_server		87138	3					
ANR	87173	CastExpression	( void * * ) & old_server		87138	0					
ANR	87174	CastTarget	void * *		87138	0					
ANR	87175	UnaryOperationExpression	& old_server		87138	1					
ANR	87176	UnaryOperator	&		87138	0					
ANR	87177	Identifier	old_server		87138	1					
ANR	87178	IfStatement	if ( old_server != NULL )		87138	3					
ANR	87179	Condition	old_server != NULL	547:8:15706:15723	87138	0	True				
ANR	87180	EqualityExpression	old_server != NULL		87138	0		!=			
ANR	87181	Identifier	old_server		87138	0					
ANR	87182	Identifier	NULL		87138	1					
ANR	87183	CompoundStatement		7:28:205:205	87138	1					
ANR	87184	ExpressionStatement	destroy_server ( old_server )	548:8:15736:15762	87138	0	True				
ANR	87185	CallExpression	destroy_server ( old_server )		87138	0					
ANR	87186	Callee	destroy_server		87138	0					
ANR	87187	Identifier	destroy_server		87138	0					
ANR	87188	ArgumentList	old_server		87138	1					
ANR	87189	Argument	old_server		87138	0					
ANR	87190	Identifier	old_server		87138	0					
ANR	87191	ExpressionStatement	ss_free ( old_server )	549:8:15772:15791	87138	1	True				
ANR	87192	CallExpression	ss_free ( old_server )		87138	0					
ANR	87193	Callee	ss_free		87138	0					
ANR	87194	Identifier	ss_free		87138	0					
ANR	87195	ArgumentList	old_server		87138	1					
ANR	87196	Argument	old_server		87138	0					
ANR	87197	Identifier	old_server		87138	0					
ANR	87198	ExpressionStatement	"stop_server ( prefix , port )"	552:4:15804:15829	87138	4	True				
ANR	87199	CallExpression	"stop_server ( prefix , port )"		87138	0					
ANR	87200	Callee	stop_server		87138	0					
ANR	87201	Identifier	stop_server		87138	0					
ANR	87202	ArgumentList	prefix		87138	1					
ANR	87203	Argument	prefix		87138	0					
ANR	87204	Identifier	prefix		87138	0					
ANR	87205	Argument	port		87138	1					
ANR	87206	Identifier	port		87138	0					
ANR	87207	ReturnType	static void		87138	1					
ANR	87208	Identifier	remove_server		87138	2					
ANR	87209	ParameterList	"char * prefix , char * port"		87138	3					
ANR	87210	Parameter	char * prefix	540:14:15494:15505	87138	0	True				
ANR	87211	ParameterType	char *		87138	0					
ANR	87212	Identifier	prefix		87138	1					
ANR	87213	Parameter	char * port	540:28:15508:15517	87138	1	True				
ANR	87214	ParameterType	char *		87138	0					
ANR	87215	Identifier	port		87138	1					
ANR	87216	CFGEntryNode	ENTRY		87138		True				
ANR	87217	CFGExitNode	EXIT		87138		True				
ANR	87218	Symbol	NULL		87138						
ANR	87219	Symbol	server_table		87138						
ANR	87220	Symbol	port		87138						
ANR	87221	Symbol	old_server		87138						
ANR	87222	Symbol	prefix		87138						
ANR	87223	Symbol	& old_server		87138						
ANR	87224	Symbol	old_port		87138						
ANR	87225	Symbol	& old_port		87138						
ANR	87226	Function	update_stat	555:0:15834:16169							
ANR	87227	FunctionDef	"update_stat (char * port , uint64_t traffic)"		87226	0					
ANR	87228	CompoundStatement		557:0:15888:16169	87226	0					
ANR	87229	IfStatement	if ( verbose )		87226	0					
ANR	87230	Condition	verbose	558:8:15898:15904	87226	0	True				
ANR	87231	Identifier	verbose		87226	0					
ANR	87232	CompoundStatement		2:17:18:18	87226	1					
ANR	87233	Statement	LOGI	559:8:15917:15920	87226	0	True				
ANR	87234	Statement	(	559:12:15921:15921	87226	1	True				
ANR	87235	Statement	"""update traffic %"""	559:13:15922:15939	87226	2	True				
ANR	87236	Statement	PRIu64	559:32:15941:15946	87226	3	True				
ANR	87237	Statement	""" for port %s"""	559:39:15948:15961	87226	4	True				
ANR	87238	Statement	","	559:53:15962:15962	87226	5	True				
ANR	87239	Statement	traffic	559:55:15964:15970	87226	6	True				
ANR	87240	Statement	","	559:62:15971:15971	87226	7	True				
ANR	87241	Statement	port	559:64:15973:15976	87226	8	True				
ANR	87242	Statement	)	559:68:15977:15977	87226	9	True				
ANR	87243	ExpressionStatement		559:69:15978:15978	87226	10	True				
ANR	87244	IdentifierDeclStatement	"void * ret = cork_hash_table_get ( server_table , ( void * ) port ) ;"	561:4:15990:16049	87226	1	True				
ANR	87245	IdentifierDecl	"* ret = cork_hash_table_get ( server_table , ( void * ) port )"		87226	0					
ANR	87246	IdentifierDeclType	void *		87226	0					
ANR	87247	Identifier	ret		87226	1					
ANR	87248	AssignmentExpression	"* ret = cork_hash_table_get ( server_table , ( void * ) port )"		87226	2		=			
ANR	87249	Identifier	ret		87226	0					
ANR	87250	CallExpression	"cork_hash_table_get ( server_table , ( void * ) port )"		87226	1					
ANR	87251	Callee	cork_hash_table_get		87226	0					
ANR	87252	Identifier	cork_hash_table_get		87226	0					
ANR	87253	ArgumentList	server_table		87226	1					
ANR	87254	Argument	server_table		87226	0					
ANR	87255	Identifier	server_table		87226	0					
ANR	87256	Argument	( void * ) port		87226	1					
ANR	87257	CastExpression	( void * ) port		87226	0					
ANR	87258	CastTarget	void *		87226	0					
ANR	87259	Identifier	port		87226	1					
ANR	87260	IfStatement	if ( ret != NULL )		87226	2					
ANR	87261	Condition	ret != NULL	562:8:16059:16069	87226	0	True				
ANR	87262	EqualityExpression	ret != NULL		87226	0		!=			
ANR	87263	Identifier	ret		87226	0					
ANR	87264	Identifier	NULL		87226	1					
ANR	87265	CompoundStatement		7:8:193:237	87226	1					
ANR	87266	IdentifierDeclStatement	struct server * server = ( struct server * ) ret ;	563:8:16082:16126	87226	0	True				
ANR	87267	IdentifierDecl	* server = ( struct server * ) ret		87226	0					
ANR	87268	IdentifierDeclType	struct server *		87226	0					
ANR	87269	Identifier	server		87226	1					
ANR	87270	AssignmentExpression	* server = ( struct server * ) ret		87226	2		=			
ANR	87271	Identifier	server		87226	0					
ANR	87272	CastExpression	( struct server * ) ret		87226	1					
ANR	87273	CastTarget	struct server *		87226	0					
ANR	87274	Identifier	ret		87226	1					
ANR	87275	ExpressionStatement	server -> traffic = traffic	564:8:16136:16161	87226	1	True				
ANR	87276	AssignmentExpression	server -> traffic = traffic		87226	0		=			
ANR	87277	PtrMemberAccess	server -> traffic		87226	0					
ANR	87278	Identifier	server		87226	0					
ANR	87279	Identifier	traffic		87226	1					
ANR	87280	Identifier	traffic		87226	1					
ANR	87281	ReturnType	static void		87226	1					
ANR	87282	Identifier	update_stat		87226	2					
ANR	87283	ParameterList	"char * port , uint64_t traffic"		87226	3					
ANR	87284	Parameter	char * port	556:12:15858:15867	87226	0	True				
ANR	87285	ParameterType	char *		87226	0					
ANR	87286	Identifier	port		87226	1					
ANR	87287	Parameter	uint64_t traffic	556:24:15870:15885	87226	1	True				
ANR	87288	ParameterType	uint64_t		87226	0					
ANR	87289	Identifier	traffic		87226	1					
ANR	87290	CFGEntryNode	ENTRY		87226		True				
ANR	87291	CFGExitNode	EXIT		87226		True				
ANR	87292	Symbol	ret		87226						
ANR	87293	Symbol	server		87226						
ANR	87294	Symbol	server_table		87226						
ANR	87295	Symbol	NULL		87226						
ANR	87296	Symbol	* server		87226						
ANR	87297	Symbol	port		87226						
ANR	87298	Symbol	server -> traffic		87226						
ANR	87299	Symbol	cork_hash_table_get		87226						
ANR	87300	Symbol	traffic		87226						
ANR	87301	Symbol	verbose		87226						
ANR	87302	Function	manager_recv_cb	568:0:16172:21383							
ANR	87303	FunctionDef	"manager_recv_cb (EV_P_ ev_io * w , int revents)"		87302	0					
ANR	87304	CompoundStatement		570:0:16229:21383	87302	0					
ANR	87305	IdentifierDeclStatement	struct manager_ctx * manager = ( struct manager_ctx * ) w ;	571:4:16235:16288	87302	0	True				
ANR	87306	IdentifierDecl	* manager = ( struct manager_ctx * ) w		87302	0					
ANR	87307	IdentifierDeclType	struct manager_ctx *		87302	0					
ANR	87308	Identifier	manager		87302	1					
ANR	87309	AssignmentExpression	* manager = ( struct manager_ctx * ) w		87302	2		=			
ANR	87310	Identifier	manager		87302	0					
ANR	87311	CastExpression	( struct manager_ctx * ) w		87302	1					
ANR	87312	CastTarget	struct manager_ctx *		87302	0					
ANR	87313	Identifier	w		87302	1					
ANR	87314	IdentifierDeclStatement	socklen_t len ;	572:4:16294:16307	87302	1	True				
ANR	87315	IdentifierDecl	len		87302	0					
ANR	87316	IdentifierDeclType	socklen_t		87302	0					
ANR	87317	Identifier	len		87302	1					
ANR	87318	IdentifierDeclStatement	ssize_t r ;	573:4:16313:16322	87302	2	True				
ANR	87319	IdentifierDecl	r		87302	0					
ANR	87320	IdentifierDeclType	ssize_t		87302	0					
ANR	87321	Identifier	r		87302	1					
ANR	87322	IdentifierDeclStatement	struct sockaddr_un claddr ;	574:4:16328:16353	87302	3	True				
ANR	87323	IdentifierDecl	claddr		87302	0					
ANR	87324	IdentifierDeclType	struct sockaddr_un		87302	0					
ANR	87325	Identifier	claddr		87302	1					
ANR	87326	IdentifierDeclStatement	char buf [ BUF_SIZE ] ;	575:4:16359:16377	87302	4	True				
ANR	87327	IdentifierDecl	buf [ BUF_SIZE ]		87302	0					
ANR	87328	IdentifierDeclType	char [ BUF_SIZE ]		87302	0					
ANR	87329	Identifier	buf		87302	1					
ANR	87330	Identifier	BUF_SIZE		87302	2					
ANR	87331	ExpressionStatement	"memset ( buf , 0 , BUF_SIZE )"	577:4:16384:16408	87302	5	True				
ANR	87332	CallExpression	"memset ( buf , 0 , BUF_SIZE )"		87302	0					
ANR	87333	Callee	memset		87302	0					
ANR	87334	Identifier	memset		87302	0					
ANR	87335	ArgumentList	buf		87302	1					
ANR	87336	Argument	buf		87302	0					
ANR	87337	Identifier	buf		87302	0					
ANR	87338	Argument	0		87302	1					
ANR	87339	PrimaryExpression	0		87302	0					
ANR	87340	Argument	BUF_SIZE		87302	2					
ANR	87341	Identifier	BUF_SIZE		87302	0					
ANR	87342	ExpressionStatement	len = sizeof ( struct sockaddr_un )	579:4:16415:16447	87302	6	True				
ANR	87343	AssignmentExpression	len = sizeof ( struct sockaddr_un )		87302	0		=			
ANR	87344	Identifier	len		87302	0					
ANR	87345	SizeofExpression	sizeof ( struct sockaddr_un )		87302	1					
ANR	87346	Sizeof	sizeof		87302	0					
ANR	87347	SizeofOperand	struct sockaddr_un		87302	1					
ANR	87348	ExpressionStatement	"r = recvfrom ( manager -> fd , buf , BUF_SIZE , 0 , ( struct sockaddr * ) & claddr , & len )"	580:4:16453:16532	87302	7	True				
ANR	87349	AssignmentExpression	"r = recvfrom ( manager -> fd , buf , BUF_SIZE , 0 , ( struct sockaddr * ) & claddr , & len )"		87302	0		=			
ANR	87350	Identifier	r		87302	0					
ANR	87351	CallExpression	"recvfrom ( manager -> fd , buf , BUF_SIZE , 0 , ( struct sockaddr * ) & claddr , & len )"		87302	1					
ANR	87352	Callee	recvfrom		87302	0					
ANR	87353	Identifier	recvfrom		87302	0					
ANR	87354	ArgumentList	manager -> fd		87302	1					
ANR	87355	Argument	manager -> fd		87302	0					
ANR	87356	PtrMemberAccess	manager -> fd		87302	0					
ANR	87357	Identifier	manager		87302	0					
ANR	87358	Identifier	fd		87302	1					
ANR	87359	Argument	buf		87302	1					
ANR	87360	Identifier	buf		87302	0					
ANR	87361	Argument	BUF_SIZE		87302	2					
ANR	87362	Identifier	BUF_SIZE		87302	0					
ANR	87363	Argument	0		87302	3					
ANR	87364	PrimaryExpression	0		87302	0					
ANR	87365	Argument	( struct sockaddr * ) & claddr		87302	4					
ANR	87366	CastExpression	( struct sockaddr * ) & claddr		87302	0					
ANR	87367	CastTarget	struct sockaddr *		87302	0					
ANR	87368	UnaryOperationExpression	& claddr		87302	1					
ANR	87369	UnaryOperator	&		87302	0					
ANR	87370	Identifier	claddr		87302	1					
ANR	87371	Argument	& len		87302	5					
ANR	87372	UnaryOperationExpression	& len		87302	0					
ANR	87373	UnaryOperator	&		87302	0					
ANR	87374	Identifier	len		87302	1					
ANR	87375	IfStatement	if ( r == - 1 )		87302	8					
ANR	87376	Condition	r == - 1	581:8:16542:16548	87302	0	True				
ANR	87377	EqualityExpression	r == - 1		87302	0		==			
ANR	87378	Identifier	r		87302	0					
ANR	87379	UnaryOperationExpression	- 1		87302	1					
ANR	87380	UnaryOperator	-		87302	0					
ANR	87381	PrimaryExpression	1		87302	1					
ANR	87382	CompoundStatement		12:17:321:321	87302	1					
ANR	87383	ExpressionStatement	"ERROR ( ""manager_recvfrom"" )"	582:8:16561:16586	87302	0	True				
ANR	87384	CallExpression	"ERROR ( ""manager_recvfrom"" )"		87302	0					
ANR	87385	Callee	ERROR		87302	0					
ANR	87386	Identifier	ERROR		87302	0					
ANR	87387	ArgumentList	"""manager_recvfrom"""		87302	1					
ANR	87388	Argument	"""manager_recvfrom"""		87302	0					
ANR	87389	PrimaryExpression	"""manager_recvfrom"""		87302	0					
ANR	87390	ReturnStatement	return ;	583:8:16596:16602	87302	1	True				
ANR	87391	IfStatement	if ( r > BUF_SIZE / 2 )		87302	9					
ANR	87392	Condition	r > BUF_SIZE / 2	586:8:16619:16634	87302	0	True				
ANR	87393	RelationalExpression	r > BUF_SIZE / 2		87302	0		>			
ANR	87394	Identifier	r		87302	0					
ANR	87395	MultiplicativeExpression	BUF_SIZE / 2		87302	1		/			
ANR	87396	Identifier	BUF_SIZE		87302	0					
ANR	87397	PrimaryExpression	2		87302	1					
ANR	87398	CompoundStatement		17:26:407:407	87302	1					
ANR	87399	ExpressionStatement	"LOGE ( ""too large request: %d"" , ( int ) r )"	587:8:16647:16684	87302	0	True				
ANR	87400	CallExpression	"LOGE ( ""too large request: %d"" , ( int ) r )"		87302	0					
ANR	87401	Callee	LOGE		87302	0					
ANR	87402	Identifier	LOGE		87302	0					
ANR	87403	ArgumentList	"""too large request: %d"""		87302	1					
ANR	87404	Argument	"""too large request: %d"""		87302	0					
ANR	87405	PrimaryExpression	"""too large request: %d"""		87302	0					
ANR	87406	Argument	( int ) r		87302	1					
ANR	87407	CastExpression	( int ) r		87302	0					
ANR	87408	CastTarget	int		87302	0					
ANR	87409	Identifier	r		87302	1					
ANR	87410	ReturnStatement	return ;	588:8:16694:16700	87302	1	True				
ANR	87411	IdentifierDeclStatement	"char * action = get_action ( buf , r ) ;"	591:4:16713:16746	87302	10	True				
ANR	87412	IdentifierDecl	"* action = get_action ( buf , r )"		87302	0					
ANR	87413	IdentifierDeclType	char *		87302	0					
ANR	87414	Identifier	action		87302	1					
ANR	87415	AssignmentExpression	"* action = get_action ( buf , r )"		87302	2		=			
ANR	87416	Identifier	action		87302	0					
ANR	87417	CallExpression	"get_action ( buf , r )"		87302	1					
ANR	87418	Callee	get_action		87302	0					
ANR	87419	Identifier	get_action		87302	0					
ANR	87420	ArgumentList	buf		87302	1					
ANR	87421	Argument	buf		87302	0					
ANR	87422	Identifier	buf		87302	0					
ANR	87423	Argument	r		87302	1					
ANR	87424	Identifier	r		87302	0					
ANR	87425	IfStatement	if ( action == NULL )		87302	11					
ANR	87426	Condition	action == NULL	592:8:16756:16769	87302	0	True				
ANR	87427	EqualityExpression	action == NULL		87302	0		==			
ANR	87428	Identifier	action		87302	0					
ANR	87429	Identifier	NULL		87302	1					
ANR	87430	CompoundStatement		23:24:542:542	87302	1					
ANR	87431	ReturnStatement	return ;	593:8:16782:16788	87302	0	True				
ANR	87432	IfStatement	"if ( strcmp ( action , ""add"" ) == 0 )"		87302	12					
ANR	87433	Condition	"strcmp ( action , ""add"" ) == 0"	596:8:16805:16830	87302	0	True				
ANR	87434	EqualityExpression	"strcmp ( action , ""add"" ) == 0"		87302	0		==			
ANR	87435	CallExpression	"strcmp ( action , ""add"" )"		87302	0					
ANR	87436	Callee	strcmp		87302	0					
ANR	87437	Identifier	strcmp		87302	0					
ANR	87438	ArgumentList	action		87302	1					
ANR	87439	Argument	action		87302	0					
ANR	87440	Identifier	action		87302	0					
ANR	87441	Argument	"""add"""		87302	1					
ANR	87442	PrimaryExpression	"""add"""		87302	0					
ANR	87443	PrimaryExpression	0		87302	1					
ANR	87444	CompoundStatement		43:8:1092:1103	87302	1					
ANR	87445	IdentifierDeclStatement	"struct server * server = get_server ( buf , r ) ;"	597:8:16843:16885	87302	0	True				
ANR	87446	IdentifierDecl	"* server = get_server ( buf , r )"		87302	0					
ANR	87447	IdentifierDeclType	struct server *		87302	0					
ANR	87448	Identifier	server		87302	1					
ANR	87449	AssignmentExpression	"* server = get_server ( buf , r )"		87302	2		=			
ANR	87450	Identifier	server		87302	0					
ANR	87451	CallExpression	"get_server ( buf , r )"		87302	1					
ANR	87452	Callee	get_server		87302	0					
ANR	87453	Identifier	get_server		87302	0					
ANR	87454	ArgumentList	buf		87302	1					
ANR	87455	Argument	buf		87302	0					
ANR	87456	Identifier	buf		87302	0					
ANR	87457	Argument	r		87302	1					
ANR	87458	Identifier	r		87302	0					
ANR	87459	IfStatement	if ( server == NULL || server -> port [ 0 ] == 0 || server -> password [ 0 ] == 0 )		87302	1					
ANR	87460	Condition	server == NULL || server -> port [ 0 ] == 0 || server -> password [ 0 ] == 0	599:12:16900:16965	87302	0	True				
ANR	87461	OrExpression	server == NULL || server -> port [ 0 ] == 0 || server -> password [ 0 ] == 0		87302	0		||			
ANR	87462	EqualityExpression	server == NULL		87302	0		==			
ANR	87463	Identifier	server		87302	0					
ANR	87464	Identifier	NULL		87302	1					
ANR	87465	OrExpression	server -> port [ 0 ] == 0 || server -> password [ 0 ] == 0		87302	1		||			
ANR	87466	EqualityExpression	server -> port [ 0 ] == 0		87302	0		==			
ANR	87467	ArrayIndexing	server -> port [ 0 ]		87302	0					
ANR	87468	PtrMemberAccess	server -> port		87302	0					
ANR	87469	Identifier	server		87302	0					
ANR	87470	Identifier	port		87302	1					
ANR	87471	PrimaryExpression	0		87302	1					
ANR	87472	PrimaryExpression	0		87302	1					
ANR	87473	EqualityExpression	server -> password [ 0 ] == 0		87302	1		==			
ANR	87474	ArrayIndexing	server -> password [ 0 ]		87302	0					
ANR	87475	PtrMemberAccess	server -> password		87302	0					
ANR	87476	Identifier	server		87302	0					
ANR	87477	Identifier	password		87302	1					
ANR	87478	PrimaryExpression	0		87302	1					
ANR	87479	PrimaryExpression	0		87302	1					
ANR	87480	CompoundStatement		30:80:738:738	87302	1					
ANR	87481	ExpressionStatement	"LOGE ( ""invalid command: %s:%s"" , buf , get_data ( buf , r ) )"	600:12:16982:17035	87302	0	True				
ANR	87482	CallExpression	"LOGE ( ""invalid command: %s:%s"" , buf , get_data ( buf , r ) )"		87302	0					
ANR	87483	Callee	LOGE		87302	0					
ANR	87484	Identifier	LOGE		87302	0					
ANR	87485	ArgumentList	"""invalid command: %s:%s"""		87302	1					
ANR	87486	Argument	"""invalid command: %s:%s"""		87302	0					
ANR	87487	PrimaryExpression	"""invalid command: %s:%s"""		87302	0					
ANR	87488	Argument	buf		87302	1					
ANR	87489	Identifier	buf		87302	0					
ANR	87490	Argument	"get_data ( buf , r )"		87302	2					
ANR	87491	CallExpression	"get_data ( buf , r )"		87302	0					
ANR	87492	Callee	get_data		87302	0					
ANR	87493	Identifier	get_data		87302	0					
ANR	87494	ArgumentList	buf		87302	1					
ANR	87495	Argument	buf		87302	0					
ANR	87496	Identifier	buf		87302	0					
ANR	87497	Argument	r		87302	1					
ANR	87498	Identifier	r		87302	0					
ANR	87499	IfStatement	if ( server != NULL )		87302	1					
ANR	87500	Condition	server != NULL	601:16:17053:17066	87302	0	True				
ANR	87501	EqualityExpression	server != NULL		87302	0		!=			
ANR	87502	Identifier	server		87302	0					
ANR	87503	Identifier	NULL		87302	1					
ANR	87504	CompoundStatement		32:32:839:839	87302	1					
ANR	87505	ExpressionStatement	destroy_server ( server )	602:16:17087:17109	87302	0	True				
ANR	87506	CallExpression	destroy_server ( server )		87302	0					
ANR	87507	Callee	destroy_server		87302	0					
ANR	87508	Identifier	destroy_server		87302	0					
ANR	87509	ArgumentList	server		87302	1					
ANR	87510	Argument	server		87302	0					
ANR	87511	Identifier	server		87302	0					
ANR	87512	ExpressionStatement	ss_free ( server )	603:16:17127:17142	87302	1	True				
ANR	87513	CallExpression	ss_free ( server )		87302	0					
ANR	87514	Callee	ss_free		87302	0					
ANR	87515	Identifier	ss_free		87302	0					
ANR	87516	ArgumentList	server		87302	1					
ANR	87517	Argument	server		87302	0					
ANR	87518	Identifier	server		87302	0					
ANR	87519	GotoStatement	goto ERROR_MSG ;	605:12:17170:17184	87302	2	True				
ANR	87520	Identifier	ERROR_MSG		87302	0					
ANR	87521	ExpressionStatement	"remove_server ( working_dir , server -> port )"	608:8:17205:17245	87302	2	True				
ANR	87522	CallExpression	"remove_server ( working_dir , server -> port )"		87302	0					
ANR	87523	Callee	remove_server		87302	0					
ANR	87524	Identifier	remove_server		87302	0					
ANR	87525	ArgumentList	working_dir		87302	1					
ANR	87526	Argument	working_dir		87302	0					
ANR	87527	Identifier	working_dir		87302	0					
ANR	87528	Argument	server -> port		87302	1					
ANR	87529	PtrMemberAccess	server -> port		87302	0					
ANR	87530	Identifier	server		87302	0					
ANR	87531	Identifier	port		87302	1					
ANR	87532	IdentifierDeclStatement	"int ret = add_server ( manager , server ) ;"	609:8:17255:17292	87302	3	True				
ANR	87533	IdentifierDecl	"ret = add_server ( manager , server )"		87302	0					
ANR	87534	IdentifierDeclType	int		87302	0					
ANR	87535	Identifier	ret		87302	1					
ANR	87536	AssignmentExpression	"ret = add_server ( manager , server )"		87302	2		=			
ANR	87537	Identifier	ret		87302	0					
ANR	87538	CallExpression	"add_server ( manager , server )"		87302	1					
ANR	87539	Callee	add_server		87302	0					
ANR	87540	Identifier	add_server		87302	0					
ANR	87541	ArgumentList	manager		87302	1					
ANR	87542	Argument	manager		87302	0					
ANR	87543	Identifier	manager		87302	0					
ANR	87544	Argument	server		87302	1					
ANR	87545	Identifier	server		87302	0					
ANR	87546	IdentifierDeclStatement	char * msg ;	611:8:17303:17312	87302	4	True				
ANR	87547	IdentifierDecl	* msg		87302	0					
ANR	87548	IdentifierDeclType	char *		87302	0					
ANR	87549	Identifier	msg		87302	1					
ANR	87550	IdentifierDeclStatement	int msg_len ;	612:8:17322:17333	87302	5	True				
ANR	87551	IdentifierDecl	msg_len		87302	0					
ANR	87552	IdentifierDeclType	int		87302	0					
ANR	87553	Identifier	msg_len		87302	1					
ANR	87554	IfStatement	if ( ret == - 1 )		87302	6					
ANR	87555	Condition	ret == - 1	614:12:17348:17356	87302	0	True				
ANR	87556	EqualityExpression	ret == - 1		87302	0		==			
ANR	87557	Identifier	ret		87302	0					
ANR	87558	UnaryOperationExpression	- 1		87302	1					
ANR	87559	UnaryOperator	-		87302	0					
ANR	87560	PrimaryExpression	1		87302	1					
ANR	87561	CompoundStatement		45:23:1129:1129	87302	1					
ANR	87562	ExpressionStatement	"msg = ""port is not available"""	615:12:17373:17406	87302	0	True				
ANR	87563	AssignmentExpression	"msg = ""port is not available"""		87302	0		=			
ANR	87564	Identifier	msg		87302	0					
ANR	87565	PrimaryExpression	"""port is not available"""		87302	1					
ANR	87566	ExpressionStatement	msg_len = 21	616:12:17420:17432	87302	1	True				
ANR	87567	AssignmentExpression	msg_len = 21		87302	0		=			
ANR	87568	Identifier	msg_len		87302	0					
ANR	87569	PrimaryExpression	21		87302	1					
ANR	87570	ElseStatement	else		87302	0					
ANR	87571	CompoundStatement		48:15:1219:1219	87302	0					
ANR	87572	ExpressionStatement	"msg = ""ok"""	618:12:17463:17477	87302	0	True				
ANR	87573	AssignmentExpression	"msg = ""ok"""		87302	0		=			
ANR	87574	Identifier	msg		87302	0					
ANR	87575	PrimaryExpression	"""ok"""		87302	1					
ANR	87576	ExpressionStatement	msg_len = 2	619:12:17491:17502	87302	1	True				
ANR	87577	AssignmentExpression	msg_len = 2		87302	0		=			
ANR	87578	Identifier	msg_len		87302	0					
ANR	87579	PrimaryExpression	2		87302	1					
ANR	87580	IfStatement	"if ( sendto ( manager -> fd , msg , msg_len , 0 , ( struct sockaddr * ) & claddr , len ) != 2 )"		87302	7					
ANR	87581	Condition	"sendto ( manager -> fd , msg , msg_len , 0 , ( struct sockaddr * ) & claddr , len ) != 2"	622:12:17527:17600	87302	0	True				
ANR	87582	EqualityExpression	"sendto ( manager -> fd , msg , msg_len , 0 , ( struct sockaddr * ) & claddr , len ) != 2"		87302	0		!=			
ANR	87583	CallExpression	"sendto ( manager -> fd , msg , msg_len , 0 , ( struct sockaddr * ) & claddr , len )"		87302	0					
ANR	87584	Callee	sendto		87302	0					
ANR	87585	Identifier	sendto		87302	0					
ANR	87586	ArgumentList	manager -> fd		87302	1					
ANR	87587	Argument	manager -> fd		87302	0					
ANR	87588	PtrMemberAccess	manager -> fd		87302	0					
ANR	87589	Identifier	manager		87302	0					
ANR	87590	Identifier	fd		87302	1					
ANR	87591	Argument	msg		87302	1					
ANR	87592	Identifier	msg		87302	0					
ANR	87593	Argument	msg_len		87302	2					
ANR	87594	Identifier	msg_len		87302	0					
ANR	87595	Argument	0		87302	3					
ANR	87596	PrimaryExpression	0		87302	0					
ANR	87597	Argument	( struct sockaddr * ) & claddr		87302	4					
ANR	87598	CastExpression	( struct sockaddr * ) & claddr		87302	0					
ANR	87599	CastTarget	struct sockaddr *		87302	0					
ANR	87600	UnaryOperationExpression	& claddr		87302	1					
ANR	87601	UnaryOperator	&		87302	0					
ANR	87602	Identifier	claddr		87302	1					
ANR	87603	Argument	len		87302	5					
ANR	87604	Identifier	len		87302	0					
ANR	87605	PrimaryExpression	2		87302	1					
ANR	87606	CompoundStatement		53:88:1373:1373	87302	1					
ANR	87607	ExpressionStatement	"ERROR ( ""add_sendto"" )"	623:12:17617:17636	87302	0	True				
ANR	87608	CallExpression	"ERROR ( ""add_sendto"" )"		87302	0					
ANR	87609	Callee	ERROR		87302	0					
ANR	87610	Identifier	ERROR		87302	0					
ANR	87611	ArgumentList	"""add_sendto"""		87302	1					
ANR	87612	Argument	"""add_sendto"""		87302	0					
ANR	87613	PrimaryExpression	"""add_sendto"""		87302	0					
ANR	87614	ElseStatement	else		87302	0					
ANR	87615	IfStatement	"if ( strcmp ( action , ""list"" ) == 0 )"		87302	0					
ANR	87616	Condition	"strcmp ( action , ""list"" ) == 0"	625:15:17663:17689	87302	0	True				
ANR	87617	EqualityExpression	"strcmp ( action , ""list"" ) == 0"		87302	0		==			
ANR	87618	CallExpression	"strcmp ( action , ""list"" )"		87302	0					
ANR	87619	Callee	strcmp		87302	0					
ANR	87620	Identifier	strcmp		87302	0					
ANR	87621	ArgumentList	action		87302	1					
ANR	87622	Argument	action		87302	0					
ANR	87623	Identifier	action		87302	0					
ANR	87624	Argument	"""list"""		87302	1					
ANR	87625	PrimaryExpression	"""list"""		87302	0					
ANR	87626	PrimaryExpression	0		87302	1					
ANR	87627	CompoundStatement		82:8:2542:2566	87302	1					
ANR	87628	IdentifierDeclStatement	struct cork_hash_table_iterator iter ;	626:8:17702:17739	87302	0	True				
ANR	87629	IdentifierDecl	iter		87302	0					
ANR	87630	IdentifierDeclType	struct cork_hash_table_iterator		87302	0					
ANR	87631	Identifier	iter		87302	1					
ANR	87632	IdentifierDeclStatement	struct cork_hash_table_entry * entry ;	627:8:17749:17785	87302	1	True				
ANR	87633	IdentifierDecl	* entry		87302	0					
ANR	87634	IdentifierDeclType	struct cork_hash_table_entry *		87302	0					
ANR	87635	Identifier	entry		87302	1					
ANR	87636	IdentifierDeclStatement	char buf [ BUF_SIZE ] ;	628:8:17795:17813	87302	2	True				
ANR	87637	IdentifierDecl	buf [ BUF_SIZE ]		87302	0					
ANR	87638	IdentifierDeclType	char [ BUF_SIZE ]		87302	0					
ANR	87639	Identifier	buf		87302	1					
ANR	87640	Identifier	BUF_SIZE		87302	2					
ANR	87641	ExpressionStatement	"memset ( buf , 0 , BUF_SIZE )"	629:8:17823:17847	87302	3	True				
ANR	87642	CallExpression	"memset ( buf , 0 , BUF_SIZE )"		87302	0					
ANR	87643	Callee	memset		87302	0					
ANR	87644	Identifier	memset		87302	0					
ANR	87645	ArgumentList	buf		87302	1					
ANR	87646	Argument	buf		87302	0					
ANR	87647	Identifier	buf		87302	0					
ANR	87648	Argument	0		87302	1					
ANR	87649	PrimaryExpression	0		87302	0					
ANR	87650	Argument	BUF_SIZE		87302	2					
ANR	87651	Identifier	BUF_SIZE		87302	0					
ANR	87652	ExpressionStatement	"sprintf ( buf , ""["" )"	630:8:17857:17874	87302	4	True				
ANR	87653	CallExpression	"sprintf ( buf , ""["" )"		87302	0					
ANR	87654	Callee	sprintf		87302	0					
ANR	87655	Identifier	sprintf		87302	0					
ANR	87656	ArgumentList	buf		87302	1					
ANR	87657	Argument	buf		87302	0					
ANR	87658	Identifier	buf		87302	0					
ANR	87659	Argument	"""["""		87302	1					
ANR	87660	PrimaryExpression	"""["""		87302	0					
ANR	87661	ExpressionStatement	"cork_hash_table_iterator_init ( server_table , & iter )"	632:8:17885:17935	87302	5	True				
ANR	87662	CallExpression	"cork_hash_table_iterator_init ( server_table , & iter )"		87302	0					
ANR	87663	Callee	cork_hash_table_iterator_init		87302	0					
ANR	87664	Identifier	cork_hash_table_iterator_init		87302	0					
ANR	87665	ArgumentList	server_table		87302	1					
ANR	87666	Argument	server_table		87302	0					
ANR	87667	Identifier	server_table		87302	0					
ANR	87668	Argument	& iter		87302	1					
ANR	87669	UnaryOperationExpression	& iter		87302	0					
ANR	87670	UnaryOperator	&		87302	0					
ANR	87671	Identifier	iter		87302	1					
ANR	87672	WhileStatement	while ( ( entry = cork_hash_table_iterator_next ( & iter ) ) != NULL )		87302	6					
ANR	87673	Condition	( entry = cork_hash_table_iterator_next ( & iter ) ) != NULL	633:15:17952:18005	87302	0	True				
ANR	87674	EqualityExpression	( entry = cork_hash_table_iterator_next ( & iter ) ) != NULL		87302	0		!=			
ANR	87675	AssignmentExpression	entry = cork_hash_table_iterator_next ( & iter )		87302	0		=			
ANR	87676	Identifier	entry		87302	0					
ANR	87677	CallExpression	cork_hash_table_iterator_next ( & iter )		87302	1					
ANR	87678	Callee	cork_hash_table_iterator_next		87302	0					
ANR	87679	Identifier	cork_hash_table_iterator_next		87302	0					
ANR	87680	ArgumentList	& iter		87302	1					
ANR	87681	Argument	& iter		87302	0					
ANR	87682	UnaryOperationExpression	& iter		87302	0					
ANR	87683	UnaryOperator	&		87302	0					
ANR	87684	Identifier	iter		87302	1					
ANR	87685	Identifier	NULL		87302	1					
ANR	87686	CompoundStatement		68:12:1971:2054	87302	1					
ANR	87687	IdentifierDeclStatement	struct server * server = ( struct server * ) entry -> value ;	634:12:18022:18075	87302	0	True				
ANR	87688	IdentifierDecl	* server = ( struct server * ) entry -> value		87302	0					
ANR	87689	IdentifierDeclType	struct server *		87302	0					
ANR	87690	Identifier	server		87302	1					
ANR	87691	AssignmentExpression	* server = ( struct server * ) entry -> value		87302	2		=			
ANR	87692	Identifier	server		87302	0					
ANR	87693	CastExpression	( struct server * ) entry -> value		87302	1					
ANR	87694	CastTarget	struct server *		87302	0					
ANR	87695	PtrMemberAccess	entry -> value		87302	1					
ANR	87696	Identifier	entry		87302	0					
ANR	87697	Identifier	value		87302	1					
ANR	87698	IdentifierDeclStatement	char * method = server -> method ? server -> method : manager -> method ;	635:12:18089:18149	87302	1	True				
ANR	87699	IdentifierDecl	* method = server -> method ? server -> method : manager -> method		87302	0					
ANR	87700	IdentifierDeclType	char *		87302	0					
ANR	87701	Identifier	method		87302	1					
ANR	87702	AssignmentExpression	* method = server -> method ? server -> method : manager -> method		87302	2		=			
ANR	87703	Identifier	method		87302	0					
ANR	87704	ConditionalExpression	server -> method ? server -> method : manager -> method		87302	1					
ANR	87705	Condition	server -> method		87302	0					
ANR	87706	PtrMemberAccess	server -> method		87302	0					
ANR	87707	Identifier	server		87302	0					
ANR	87708	Identifier	method		87302	1					
ANR	87709	PtrMemberAccess	server -> method		87302	1					
ANR	87710	Identifier	server		87302	0					
ANR	87711	Identifier	method		87302	1					
ANR	87712	PtrMemberAccess	manager -> method		87302	2					
ANR	87713	Identifier	manager		87302	0					
ANR	87714	Identifier	method		87302	1					
ANR	87715	IdentifierDeclStatement	size_t pos = strlen ( buf ) ;	636:12:18163:18187	87302	2	True				
ANR	87716	IdentifierDecl	pos = strlen ( buf )		87302	0					
ANR	87717	IdentifierDeclType	size_t		87302	0					
ANR	87718	Identifier	pos		87302	1					
ANR	87719	AssignmentExpression	pos = strlen ( buf )		87302	2		=			
ANR	87720	Identifier	pos		87302	0					
ANR	87721	CallExpression	strlen ( buf )		87302	1					
ANR	87722	Callee	strlen		87302	0					
ANR	87723	Identifier	strlen		87302	0					
ANR	87724	ArgumentList	buf		87302	1					
ANR	87725	Argument	buf		87302	0					
ANR	87726	Identifier	buf		87302	0					
ANR	87727	IdentifierDeclStatement	size_t entry_len = strlen ( server -> port ) + strlen ( server -> password ) + strlen ( method ) ;	637:12:18201:18284	87302	3	True				
ANR	87728	IdentifierDecl	entry_len = strlen ( server -> port ) + strlen ( server -> password ) + strlen ( method )		87302	0					
ANR	87729	IdentifierDeclType	size_t		87302	0					
ANR	87730	Identifier	entry_len		87302	1					
ANR	87731	AssignmentExpression	entry_len = strlen ( server -> port ) + strlen ( server -> password ) + strlen ( method )		87302	2		=			
ANR	87732	Identifier	entry_len		87302	0					
ANR	87733	AdditiveExpression	strlen ( server -> port ) + strlen ( server -> password ) + strlen ( method )		87302	1		+			
ANR	87734	CallExpression	strlen ( server -> port )		87302	0					
ANR	87735	Callee	strlen		87302	0					
ANR	87736	Identifier	strlen		87302	0					
ANR	87737	ArgumentList	server -> port		87302	1					
ANR	87738	Argument	server -> port		87302	0					
ANR	87739	PtrMemberAccess	server -> port		87302	0					
ANR	87740	Identifier	server		87302	0					
ANR	87741	Identifier	port		87302	1					
ANR	87742	AdditiveExpression	strlen ( server -> password ) + strlen ( method )		87302	1		+			
ANR	87743	CallExpression	strlen ( server -> password )		87302	0					
ANR	87744	Callee	strlen		87302	0					
ANR	87745	Identifier	strlen		87302	0					
ANR	87746	ArgumentList	server -> password		87302	1					
ANR	87747	Argument	server -> password		87302	0					
ANR	87748	PtrMemberAccess	server -> password		87302	0					
ANR	87749	Identifier	server		87302	0					
ANR	87750	Identifier	password		87302	1					
ANR	87751	CallExpression	strlen ( method )		87302	1					
ANR	87752	Callee	strlen		87302	0					
ANR	87753	Identifier	strlen		87302	0					
ANR	87754	ArgumentList	method		87302	1					
ANR	87755	Argument	method		87302	0					
ANR	87756	Identifier	method		87302	0					
ANR	87757	IfStatement	if ( pos > BUF_SIZE - entry_len - 50 )		87302	4					
ANR	87758	Condition	pos > BUF_SIZE - entry_len - 50	638:16:18302:18328	87302	0	True				
ANR	87759	RelationalExpression	pos > BUF_SIZE - entry_len - 50		87302	0		>			
ANR	87760	Identifier	pos		87302	0					
ANR	87761	AdditiveExpression	BUF_SIZE - entry_len - 50		87302	1		-			
ANR	87762	Identifier	BUF_SIZE		87302	0					
ANR	87763	AdditiveExpression	entry_len - 50		87302	1		-			
ANR	87764	Identifier	entry_len		87302	0					
ANR	87765	PrimaryExpression	50		87302	1					
ANR	87766	CompoundStatement		69:45:2101:2101	87302	1					
ANR	87767	IfStatement	"if ( sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos )"		87302	0					
ANR	87768	Condition	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"	639:20:18353:18444	87302	0	True				
ANR	87769	EqualityExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"		87302	0		!=			
ANR	87770	CallExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len )"		87302	0					
ANR	87771	Callee	sendto		87302	0					
ANR	87772	Identifier	sendto		87302	0					
ANR	87773	ArgumentList	manager -> fd		87302	1					
ANR	87774	Argument	manager -> fd		87302	0					
ANR	87775	PtrMemberAccess	manager -> fd		87302	0					
ANR	87776	Identifier	manager		87302	0					
ANR	87777	Identifier	fd		87302	1					
ANR	87778	Argument	buf		87302	1					
ANR	87779	Identifier	buf		87302	0					
ANR	87780	Argument	pos		87302	2					
ANR	87781	Identifier	pos		87302	0					
ANR	87782	Argument	0		87302	3					
ANR	87783	PrimaryExpression	0		87302	0					
ANR	87784	Argument	( struct sockaddr * ) & claddr		87302	4					
ANR	87785	CastExpression	( struct sockaddr * ) & claddr		87302	0					
ANR	87786	CastTarget	struct sockaddr *		87302	0					
ANR	87787	UnaryOperationExpression	& claddr		87302	1					
ANR	87788	UnaryOperator	&		87302	0					
ANR	87789	Identifier	claddr		87302	1					
ANR	87790	Argument	len		87302	5					
ANR	87791	Identifier	len		87302	0					
ANR	87792	Identifier	pos		87302	1					
ANR	87793	CompoundStatement		71:28:2217:2217	87302	1					
ANR	87794	ExpressionStatement	"ERROR ( ""list_sendto"" )"	641:20:18469:18489	87302	0	True				
ANR	87795	CallExpression	"ERROR ( ""list_sendto"" )"		87302	0					
ANR	87796	Callee	ERROR		87302	0					
ANR	87797	Identifier	ERROR		87302	0					
ANR	87798	ArgumentList	"""list_sendto"""		87302	1					
ANR	87799	Argument	"""list_sendto"""		87302	0					
ANR	87800	PrimaryExpression	"""list_sendto"""		87302	0					
ANR	87801	ExpressionStatement	"memset ( buf , 0 , BUF_SIZE )"	643:16:18525:18549	87302	1	True				
ANR	87802	CallExpression	"memset ( buf , 0 , BUF_SIZE )"		87302	0					
ANR	87803	Callee	memset		87302	0					
ANR	87804	Identifier	memset		87302	0					
ANR	87805	ArgumentList	buf		87302	1					
ANR	87806	Argument	buf		87302	0					
ANR	87807	Identifier	buf		87302	0					
ANR	87808	Argument	0		87302	1					
ANR	87809	PrimaryExpression	0		87302	0					
ANR	87810	Argument	BUF_SIZE		87302	2					
ANR	87811	Identifier	BUF_SIZE		87302	0					
ANR	87812	ExpressionStatement	pos = 0	644:16:18567:18574	87302	2	True				
ANR	87813	AssignmentExpression	pos = 0		87302	0		=			
ANR	87814	Identifier	pos		87302	0					
ANR	87815	PrimaryExpression	0		87302	1					
ANR	87816	ExpressionStatement	"sprintf ( buf + pos , ""\\n\\t{\\""server_port\\"":\\""%s\\"",\\""password\\"":\\""%s\\"",\\""method\\"":\\""%s\\""},"" , server -> port , server -> password , method )"	646:12:18602:18750	87302	5	True				
ANR	87817	CallExpression	"sprintf ( buf + pos , ""\\n\\t{\\""server_port\\"":\\""%s\\"",\\""password\\"":\\""%s\\"",\\""method\\"":\\""%s\\""},"" , server -> port , server -> password , method )"		87302	0					
ANR	87818	Callee	sprintf		87302	0					
ANR	87819	Identifier	sprintf		87302	0					
ANR	87820	ArgumentList	buf + pos		87302	1					
ANR	87821	Argument	buf + pos		87302	0					
ANR	87822	AdditiveExpression	buf + pos		87302	0		+			
ANR	87823	Identifier	buf		87302	0					
ANR	87824	Identifier	pos		87302	1					
ANR	87825	Argument	"""\\n\\t{\\""server_port\\"":\\""%s\\"",\\""password\\"":\\""%s\\"",\\""method\\"":\\""%s\\""},"""		87302	1					
ANR	87826	PrimaryExpression	"""\\n\\t{\\""server_port\\"":\\""%s\\"",\\""password\\"":\\""%s\\"",\\""method\\"":\\""%s\\""},"""		87302	0					
ANR	87827	Argument	server -> port		87302	2					
ANR	87828	PtrMemberAccess	server -> port		87302	0					
ANR	87829	Identifier	server		87302	0					
ANR	87830	Identifier	port		87302	1					
ANR	87831	Argument	server -> password		87302	3					
ANR	87832	PtrMemberAccess	server -> password		87302	0					
ANR	87833	Identifier	server		87302	0					
ANR	87834	Identifier	password		87302	1					
ANR	87835	Argument	method		87302	4					
ANR	87836	Identifier	method		87302	0					
ANR	87837	IdentifierDeclStatement	size_t pos = strlen ( buf ) ;	651:8:18772:18796	87302	7	True				
ANR	87838	IdentifierDecl	pos = strlen ( buf )		87302	0					
ANR	87839	IdentifierDeclType	size_t		87302	0					
ANR	87840	Identifier	pos		87302	1					
ANR	87841	AssignmentExpression	pos = strlen ( buf )		87302	2		=			
ANR	87842	Identifier	pos		87302	0					
ANR	87843	CallExpression	strlen ( buf )		87302	1					
ANR	87844	Callee	strlen		87302	0					
ANR	87845	Identifier	strlen		87302	0					
ANR	87846	ArgumentList	buf		87302	1					
ANR	87847	Argument	buf		87302	0					
ANR	87848	Identifier	buf		87302	0					
ANR	87849	ExpressionStatement	"strcpy ( buf + pos - 1 , ""\\n]"" )"	652:8:18806:18834	87302	8	True				
ANR	87850	CallExpression	"strcpy ( buf + pos - 1 , ""\\n]"" )"		87302	0					
ANR	87851	Callee	strcpy		87302	0					
ANR	87852	Identifier	strcpy		87302	0					
ANR	87853	ArgumentList	buf + pos - 1		87302	1					
ANR	87854	Argument	buf + pos - 1		87302	0					
ANR	87855	AdditiveExpression	buf + pos - 1		87302	0		+			
ANR	87856	Identifier	buf		87302	0					
ANR	87857	AdditiveExpression	pos - 1		87302	1		-			
ANR	87858	Identifier	pos		87302	0					
ANR	87859	PrimaryExpression	1		87302	1					
ANR	87860	Argument	"""\\n]"""		87302	1					
ANR	87861	PrimaryExpression	"""\\n]"""		87302	0					
ANR	87862	ExpressionStatement	pos = strlen ( buf )	653:8:18866:18883	87302	9	True				
ANR	87863	AssignmentExpression	pos = strlen ( buf )		87302	0		=			
ANR	87864	Identifier	pos		87302	0					
ANR	87865	CallExpression	strlen ( buf )		87302	1					
ANR	87866	Callee	strlen		87302	0					
ANR	87867	Identifier	strlen		87302	0					
ANR	87868	ArgumentList	buf		87302	1					
ANR	87869	Argument	buf		87302	0					
ANR	87870	Identifier	buf		87302	0					
ANR	87871	IfStatement	"if ( sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos )"		87302	10					
ANR	87872	Condition	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"	654:12:18897:18980	87302	0	True				
ANR	87873	EqualityExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"		87302	0		!=			
ANR	87874	CallExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len )"		87302	0					
ANR	87875	Callee	sendto		87302	0					
ANR	87876	Identifier	sendto		87302	0					
ANR	87877	ArgumentList	manager -> fd		87302	1					
ANR	87878	Argument	manager -> fd		87302	0					
ANR	87879	PtrMemberAccess	manager -> fd		87302	0					
ANR	87880	Identifier	manager		87302	0					
ANR	87881	Identifier	fd		87302	1					
ANR	87882	Argument	buf		87302	1					
ANR	87883	Identifier	buf		87302	0					
ANR	87884	Argument	pos		87302	2					
ANR	87885	Identifier	pos		87302	0					
ANR	87886	Argument	0		87302	3					
ANR	87887	PrimaryExpression	0		87302	0					
ANR	87888	Argument	( struct sockaddr * ) & claddr		87302	4					
ANR	87889	CastExpression	( struct sockaddr * ) & claddr		87302	0					
ANR	87890	CastTarget	struct sockaddr *		87302	0					
ANR	87891	UnaryOperationExpression	& claddr		87302	1					
ANR	87892	UnaryOperator	&		87302	0					
ANR	87893	Identifier	claddr		87302	1					
ANR	87894	Argument	len		87302	5					
ANR	87895	Identifier	len		87302	0					
ANR	87896	Identifier	pos		87302	1					
ANR	87897	CompoundStatement		86:20:2753:2753	87302	1					
ANR	87898	ExpressionStatement	"ERROR ( ""list_sendto"" )"	656:12:18997:19017	87302	0	True				
ANR	87899	CallExpression	"ERROR ( ""list_sendto"" )"		87302	0					
ANR	87900	Callee	ERROR		87302	0					
ANR	87901	Identifier	ERROR		87302	0					
ANR	87902	ArgumentList	"""list_sendto"""		87302	1					
ANR	87903	Argument	"""list_sendto"""		87302	0					
ANR	87904	PrimaryExpression	"""list_sendto"""		87302	0					
ANR	87905	ElseStatement	else		87302	0					
ANR	87906	IfStatement	"if ( strcmp ( action , ""remove"" ) == 0 )"		87302	0					
ANR	87907	Condition	"strcmp ( action , ""remove"" ) == 0"	658:15:19044:19072	87302	0	True				
ANR	87908	EqualityExpression	"strcmp ( action , ""remove"" ) == 0"		87302	0		==			
ANR	87909	CallExpression	"strcmp ( action , ""remove"" )"		87302	0					
ANR	87910	Callee	strcmp		87302	0					
ANR	87911	Identifier	strcmp		87302	0					
ANR	87912	ArgumentList	action		87302	1					
ANR	87913	Argument	action		87302	0					
ANR	87914	Identifier	action		87302	0					
ANR	87915	Argument	"""remove"""		87302	1					
ANR	87916	PrimaryExpression	"""remove"""		87302	0					
ANR	87917	PrimaryExpression	0		87302	1					
ANR	87918	CompoundStatement		105:8:3297:3315	87302	1					
ANR	87919	IdentifierDeclStatement	"struct server * server = get_server ( buf , r ) ;"	659:8:19085:19127	87302	0	True				
ANR	87920	IdentifierDecl	"* server = get_server ( buf , r )"		87302	0					
ANR	87921	IdentifierDeclType	struct server *		87302	0					
ANR	87922	Identifier	server		87302	1					
ANR	87923	AssignmentExpression	"* server = get_server ( buf , r )"		87302	2		=			
ANR	87924	Identifier	server		87302	0					
ANR	87925	CallExpression	"get_server ( buf , r )"		87302	1					
ANR	87926	Callee	get_server		87302	0					
ANR	87927	Identifier	get_server		87302	0					
ANR	87928	ArgumentList	buf		87302	1					
ANR	87929	Argument	buf		87302	0					
ANR	87930	Identifier	buf		87302	0					
ANR	87931	Argument	r		87302	1					
ANR	87932	Identifier	r		87302	0					
ANR	87933	IfStatement	if ( server == NULL || server -> port [ 0 ] == 0 )		87302	1					
ANR	87934	Condition	server == NULL || server -> port [ 0 ] == 0	661:12:19142:19179	87302	0	True				
ANR	87935	OrExpression	server == NULL || server -> port [ 0 ] == 0		87302	0		||			
ANR	87936	EqualityExpression	server == NULL		87302	0		==			
ANR	87937	Identifier	server		87302	0					
ANR	87938	Identifier	NULL		87302	1					
ANR	87939	EqualityExpression	server -> port [ 0 ] == 0		87302	1		==			
ANR	87940	ArrayIndexing	server -> port [ 0 ]		87302	0					
ANR	87941	PtrMemberAccess	server -> port		87302	0					
ANR	87942	Identifier	server		87302	0					
ANR	87943	Identifier	port		87302	1					
ANR	87944	PrimaryExpression	0		87302	1					
ANR	87945	PrimaryExpression	0		87302	1					
ANR	87946	CompoundStatement		92:52:2952:2952	87302	1					
ANR	87947	ExpressionStatement	"LOGE ( ""invalid command: %s:%s"" , buf , get_data ( buf , r ) )"	662:12:19196:19249	87302	0	True				
ANR	87948	CallExpression	"LOGE ( ""invalid command: %s:%s"" , buf , get_data ( buf , r ) )"		87302	0					
ANR	87949	Callee	LOGE		87302	0					
ANR	87950	Identifier	LOGE		87302	0					
ANR	87951	ArgumentList	"""invalid command: %s:%s"""		87302	1					
ANR	87952	Argument	"""invalid command: %s:%s"""		87302	0					
ANR	87953	PrimaryExpression	"""invalid command: %s:%s"""		87302	0					
ANR	87954	Argument	buf		87302	1					
ANR	87955	Identifier	buf		87302	0					
ANR	87956	Argument	"get_data ( buf , r )"		87302	2					
ANR	87957	CallExpression	"get_data ( buf , r )"		87302	0					
ANR	87958	Callee	get_data		87302	0					
ANR	87959	Identifier	get_data		87302	0					
ANR	87960	ArgumentList	buf		87302	1					
ANR	87961	Argument	buf		87302	0					
ANR	87962	Identifier	buf		87302	0					
ANR	87963	Argument	r		87302	1					
ANR	87964	Identifier	r		87302	0					
ANR	87965	IfStatement	if ( server != NULL )		87302	1					
ANR	87966	Condition	server != NULL	663:16:19267:19280	87302	0	True				
ANR	87967	EqualityExpression	server != NULL		87302	0		!=			
ANR	87968	Identifier	server		87302	0					
ANR	87969	Identifier	NULL		87302	1					
ANR	87970	CompoundStatement		94:32:3053:3053	87302	1					
ANR	87971	ExpressionStatement	destroy_server ( server )	664:16:19301:19323	87302	0	True				
ANR	87972	CallExpression	destroy_server ( server )		87302	0					
ANR	87973	Callee	destroy_server		87302	0					
ANR	87974	Identifier	destroy_server		87302	0					
ANR	87975	ArgumentList	server		87302	1					
ANR	87976	Argument	server		87302	0					
ANR	87977	Identifier	server		87302	0					
ANR	87978	ExpressionStatement	ss_free ( server )	665:16:19341:19356	87302	1	True				
ANR	87979	CallExpression	ss_free ( server )		87302	0					
ANR	87980	Callee	ss_free		87302	0					
ANR	87981	Identifier	ss_free		87302	0					
ANR	87982	ArgumentList	server		87302	1					
ANR	87983	Argument	server		87302	0					
ANR	87984	Identifier	server		87302	0					
ANR	87985	GotoStatement	goto ERROR_MSG ;	667:12:19384:19398	87302	2	True				
ANR	87986	Identifier	ERROR_MSG		87302	0					
ANR	87987	ExpressionStatement	"remove_server ( working_dir , server -> port )"	670:8:19419:19459	87302	2	True				
ANR	87988	CallExpression	"remove_server ( working_dir , server -> port )"		87302	0					
ANR	87989	Callee	remove_server		87302	0					
ANR	87990	Identifier	remove_server		87302	0					
ANR	87991	ArgumentList	working_dir		87302	1					
ANR	87992	Argument	working_dir		87302	0					
ANR	87993	Identifier	working_dir		87302	0					
ANR	87994	Argument	server -> port		87302	1					
ANR	87995	PtrMemberAccess	server -> port		87302	0					
ANR	87996	Identifier	server		87302	0					
ANR	87997	Identifier	port		87302	1					
ANR	87998	ExpressionStatement	destroy_server ( server )	671:8:19469:19491	87302	3	True				
ANR	87999	CallExpression	destroy_server ( server )		87302	0					
ANR	88000	Callee	destroy_server		87302	0					
ANR	88001	Identifier	destroy_server		87302	0					
ANR	88002	ArgumentList	server		87302	1					
ANR	88003	Argument	server		87302	0					
ANR	88004	Identifier	server		87302	0					
ANR	88005	ExpressionStatement	ss_free ( server )	672:8:19501:19516	87302	4	True				
ANR	88006	CallExpression	ss_free ( server )		87302	0					
ANR	88007	Callee	ss_free		87302	0					
ANR	88008	Identifier	ss_free		87302	0					
ANR	88009	ArgumentList	server		87302	1					
ANR	88010	Argument	server		87302	0					
ANR	88011	Identifier	server		87302	0					
ANR	88012	IdentifierDeclStatement	"char msg [ 3 ] = ""ok"" ;"	674:8:19527:19545	87302	5	True				
ANR	88013	IdentifierDecl	"msg [ 3 ] = ""ok"""		87302	0					
ANR	88014	IdentifierDeclType	char [ 3 ]		87302	0					
ANR	88015	Identifier	msg		87302	1					
ANR	88016	PrimaryExpression	3		87302	2					
ANR	88017	AssignmentExpression	"msg [ 3 ] = ""ok"""		87302	3		=			
ANR	88018	Identifier	msg		87302	0					
ANR	88019	PrimaryExpression	"""ok"""		87302	1					
ANR	88020	IfStatement	"if ( sendto ( manager -> fd , msg , 2 , 0 , ( struct sockaddr * ) & claddr , len ) != 2 )"		87302	6					
ANR	88021	Condition	"sendto ( manager -> fd , msg , 2 , 0 , ( struct sockaddr * ) & claddr , len ) != 2"	675:12:19559:19626	87302	0	True				
ANR	88022	EqualityExpression	"sendto ( manager -> fd , msg , 2 , 0 , ( struct sockaddr * ) & claddr , len ) != 2"		87302	0		!=			
ANR	88023	CallExpression	"sendto ( manager -> fd , msg , 2 , 0 , ( struct sockaddr * ) & claddr , len )"		87302	0					
ANR	88024	Callee	sendto		87302	0					
ANR	88025	Identifier	sendto		87302	0					
ANR	88026	ArgumentList	manager -> fd		87302	1					
ANR	88027	Argument	manager -> fd		87302	0					
ANR	88028	PtrMemberAccess	manager -> fd		87302	0					
ANR	88029	Identifier	manager		87302	0					
ANR	88030	Identifier	fd		87302	1					
ANR	88031	Argument	msg		87302	1					
ANR	88032	Identifier	msg		87302	0					
ANR	88033	Argument	2		87302	2					
ANR	88034	PrimaryExpression	2		87302	0					
ANR	88035	Argument	0		87302	3					
ANR	88036	PrimaryExpression	0		87302	0					
ANR	88037	Argument	( struct sockaddr * ) & claddr		87302	4					
ANR	88038	CastExpression	( struct sockaddr * ) & claddr		87302	0					
ANR	88039	CastTarget	struct sockaddr *		87302	0					
ANR	88040	UnaryOperationExpression	& claddr		87302	1					
ANR	88041	UnaryOperator	&		87302	0					
ANR	88042	Identifier	claddr		87302	1					
ANR	88043	Argument	len		87302	5					
ANR	88044	Identifier	len		87302	0					
ANR	88045	PrimaryExpression	2		87302	1					
ANR	88046	CompoundStatement		106:82:3399:3399	87302	1					
ANR	88047	ExpressionStatement	"ERROR ( ""remove_sendto"" )"	676:12:19643:19665	87302	0	True				
ANR	88048	CallExpression	"ERROR ( ""remove_sendto"" )"		87302	0					
ANR	88049	Callee	ERROR		87302	0					
ANR	88050	Identifier	ERROR		87302	0					
ANR	88051	ArgumentList	"""remove_sendto"""		87302	1					
ANR	88052	Argument	"""remove_sendto"""		87302	0					
ANR	88053	PrimaryExpression	"""remove_sendto"""		87302	0					
ANR	88054	ElseStatement	else		87302	0					
ANR	88055	IfStatement	"if ( strcmp ( action , ""stat"" ) == 0 )"		87302	0					
ANR	88056	Condition	"strcmp ( action , ""stat"" ) == 0"	678:15:19692:19718	87302	0	True				
ANR	88057	EqualityExpression	"strcmp ( action , ""stat"" ) == 0"		87302	0		==			
ANR	88058	CallExpression	"strcmp ( action , ""stat"" )"		87302	0					
ANR	88059	Callee	strcmp		87302	0					
ANR	88060	Identifier	strcmp		87302	0					
ANR	88061	ArgumentList	action		87302	1					
ANR	88062	Argument	action		87302	0					
ANR	88063	Identifier	action		87302	0					
ANR	88064	Argument	"""stat"""		87302	1					
ANR	88065	PrimaryExpression	"""stat"""		87302	0					
ANR	88066	PrimaryExpression	0		87302	1					
ANR	88067	CompoundStatement		111:8:3523:3543	87302	1					
ANR	88068	IdentifierDeclStatement	char port [ 8 ] ;	679:8:19731:19743	87302	0	True				
ANR	88069	IdentifierDecl	port [ 8 ]		87302	0					
ANR	88070	IdentifierDeclType	char [ 8 ]		87302	0					
ANR	88071	Identifier	port		87302	1					
ANR	88072	PrimaryExpression	8		87302	2					
ANR	88073	IdentifierDeclStatement	uint64_t traffic = 0 ;	680:8:19753:19773	87302	1	True				
ANR	88074	IdentifierDecl	traffic = 0		87302	0					
ANR	88075	IdentifierDeclType	uint64_t		87302	0					
ANR	88076	Identifier	traffic		87302	1					
ANR	88077	AssignmentExpression	traffic = 0		87302	2		=			
ANR	88078	Identifier	traffic		87302	0					
ANR	88079	PrimaryExpression	0		87302	1					
ANR	88080	IfStatement	"if ( parse_traffic ( buf , r , port , & traffic ) == - 1 )"		87302	2					
ANR	88081	Condition	"parse_traffic ( buf , r , port , & traffic ) == - 1"	682:12:19788:19830	87302	0	True				
ANR	88082	EqualityExpression	"parse_traffic ( buf , r , port , & traffic ) == - 1"		87302	0		==			
ANR	88083	CallExpression	"parse_traffic ( buf , r , port , & traffic )"		87302	0					
ANR	88084	Callee	parse_traffic		87302	0					
ANR	88085	Identifier	parse_traffic		87302	0					
ANR	88086	ArgumentList	buf		87302	1					
ANR	88087	Argument	buf		87302	0					
ANR	88088	Identifier	buf		87302	0					
ANR	88089	Argument	r		87302	1					
ANR	88090	Identifier	r		87302	0					
ANR	88091	Argument	port		87302	2					
ANR	88092	Identifier	port		87302	0					
ANR	88093	Argument	& traffic		87302	3					
ANR	88094	UnaryOperationExpression	& traffic		87302	0					
ANR	88095	UnaryOperator	&		87302	0					
ANR	88096	Identifier	traffic		87302	1					
ANR	88097	UnaryOperationExpression	- 1		87302	1					
ANR	88098	UnaryOperator	-		87302	0					
ANR	88099	PrimaryExpression	1		87302	1					
ANR	88100	CompoundStatement		113:57:3603:3603	87302	1					
ANR	88101	ExpressionStatement	"LOGE ( ""invalid command: %s:%s"" , buf , get_data ( buf , r ) )"	683:12:19847:19900	87302	0	True				
ANR	88102	CallExpression	"LOGE ( ""invalid command: %s:%s"" , buf , get_data ( buf , r ) )"		87302	0					
ANR	88103	Callee	LOGE		87302	0					
ANR	88104	Identifier	LOGE		87302	0					
ANR	88105	ArgumentList	"""invalid command: %s:%s"""		87302	1					
ANR	88106	Argument	"""invalid command: %s:%s"""		87302	0					
ANR	88107	PrimaryExpression	"""invalid command: %s:%s"""		87302	0					
ANR	88108	Argument	buf		87302	1					
ANR	88109	Identifier	buf		87302	0					
ANR	88110	Argument	"get_data ( buf , r )"		87302	2					
ANR	88111	CallExpression	"get_data ( buf , r )"		87302	0					
ANR	88112	Callee	get_data		87302	0					
ANR	88113	Identifier	get_data		87302	0					
ANR	88114	ArgumentList	buf		87302	1					
ANR	88115	Argument	buf		87302	0					
ANR	88116	Identifier	buf		87302	0					
ANR	88117	Argument	r		87302	1					
ANR	88118	Identifier	r		87302	0					
ANR	88119	ReturnStatement	return ;	684:12:19914:19920	87302	1	True				
ANR	88120	ExpressionStatement	"update_stat ( port , traffic )"	687:8:19941:19967	87302	3	True				
ANR	88121	CallExpression	"update_stat ( port , traffic )"		87302	0					
ANR	88122	Callee	update_stat		87302	0					
ANR	88123	Identifier	update_stat		87302	0					
ANR	88124	ArgumentList	port		87302	1					
ANR	88125	Argument	port		87302	0					
ANR	88126	Identifier	port		87302	0					
ANR	88127	Argument	traffic		87302	1					
ANR	88128	Identifier	traffic		87302	0					
ANR	88129	ElseStatement	else		87302	0					
ANR	88130	IfStatement	"if ( strcmp ( action , ""ping"" ) == 0 )"		87302	0					
ANR	88131	Condition	"strcmp ( action , ""ping"" ) == 0"	688:15:19984:20010	87302	0	True				
ANR	88132	EqualityExpression	"strcmp ( action , ""ping"" ) == 0"		87302	0		==			
ANR	88133	CallExpression	"strcmp ( action , ""ping"" )"		87302	0					
ANR	88134	Callee	strcmp		87302	0					
ANR	88135	Identifier	strcmp		87302	0					
ANR	88136	ArgumentList	action		87302	1					
ANR	88137	Argument	action		87302	0					
ANR	88138	Identifier	action		87302	0					
ANR	88139	Argument	"""ping"""		87302	1					
ANR	88140	PrimaryExpression	"""ping"""		87302	0					
ANR	88141	PrimaryExpression	0		87302	1					
ANR	88142	CompoundStatement		145:8:4681:4705	87302	1					
ANR	88143	IdentifierDeclStatement	struct cork_hash_table_entry * entry ;	689:8:20023:20058	87302	0	True				
ANR	88144	IdentifierDecl	* entry		87302	0					
ANR	88145	IdentifierDeclType	struct cork_hash_table_entry *		87302	0					
ANR	88146	Identifier	entry		87302	1					
ANR	88147	IdentifierDeclStatement	struct cork_hash_table_iterator server_iter ;	690:8:20068:20111	87302	1	True				
ANR	88148	IdentifierDecl	server_iter		87302	0					
ANR	88149	IdentifierDeclType	struct cork_hash_table_iterator		87302	0					
ANR	88150	Identifier	server_iter		87302	1					
ANR	88151	IdentifierDeclStatement	char buf [ BUF_SIZE ] ;	692:8:20122:20140	87302	2	True				
ANR	88152	IdentifierDecl	buf [ BUF_SIZE ]		87302	0					
ANR	88153	IdentifierDeclType	char [ BUF_SIZE ]		87302	0					
ANR	88154	Identifier	buf		87302	1					
ANR	88155	Identifier	BUF_SIZE		87302	2					
ANR	88156	ExpressionStatement	"memset ( buf , 0 , BUF_SIZE )"	694:8:20151:20175	87302	3	True				
ANR	88157	CallExpression	"memset ( buf , 0 , BUF_SIZE )"		87302	0					
ANR	88158	Callee	memset		87302	0					
ANR	88159	Identifier	memset		87302	0					
ANR	88160	ArgumentList	buf		87302	1					
ANR	88161	Argument	buf		87302	0					
ANR	88162	Identifier	buf		87302	0					
ANR	88163	Argument	0		87302	1					
ANR	88164	PrimaryExpression	0		87302	0					
ANR	88165	Argument	BUF_SIZE		87302	2					
ANR	88166	Identifier	BUF_SIZE		87302	0					
ANR	88167	ExpressionStatement	"sprintf ( buf , ""stat: {"" )"	695:8:20185:20208	87302	4	True				
ANR	88168	CallExpression	"sprintf ( buf , ""stat: {"" )"		87302	0					
ANR	88169	Callee	sprintf		87302	0					
ANR	88170	Identifier	sprintf		87302	0					
ANR	88171	ArgumentList	buf		87302	1					
ANR	88172	Argument	buf		87302	0					
ANR	88173	Identifier	buf		87302	0					
ANR	88174	Argument	"""stat: {"""		87302	1					
ANR	88175	PrimaryExpression	"""stat: {"""		87302	0					
ANR	88176	ExpressionStatement	"cork_hash_table_iterator_init ( server_table , & server_iter )"	697:8:20219:20276	87302	5	True				
ANR	88177	CallExpression	"cork_hash_table_iterator_init ( server_table , & server_iter )"		87302	0					
ANR	88178	Callee	cork_hash_table_iterator_init		87302	0					
ANR	88179	Identifier	cork_hash_table_iterator_init		87302	0					
ANR	88180	ArgumentList	server_table		87302	1					
ANR	88181	Argument	server_table		87302	0					
ANR	88182	Identifier	server_table		87302	0					
ANR	88183	Argument	& server_iter		87302	1					
ANR	88184	UnaryOperationExpression	& server_iter		87302	0					
ANR	88185	UnaryOperator	&		87302	0					
ANR	88186	Identifier	server_iter		87302	1					
ANR	88187	WhileStatement	while ( ( entry = cork_hash_table_iterator_next ( & server_iter ) ) != NULL )		87302	6					
ANR	88188	Condition	( entry = cork_hash_table_iterator_next ( & server_iter ) ) != NULL	699:15:20294:20354	87302	0	True				
ANR	88189	EqualityExpression	( entry = cork_hash_table_iterator_next ( & server_iter ) ) != NULL		87302	0		!=			
ANR	88190	AssignmentExpression	entry = cork_hash_table_iterator_next ( & server_iter )		87302	0		=			
ANR	88191	Identifier	entry		87302	0					
ANR	88192	CallExpression	cork_hash_table_iterator_next ( & server_iter )		87302	1					
ANR	88193	Callee	cork_hash_table_iterator_next		87302	0					
ANR	88194	Identifier	cork_hash_table_iterator_next		87302	0					
ANR	88195	ArgumentList	& server_iter		87302	1					
ANR	88196	Argument	& server_iter		87302	0					
ANR	88197	UnaryOperationExpression	& server_iter		87302	0					
ANR	88198	UnaryOperator	&		87302	0					
ANR	88199	Identifier	server_iter		87302	1					
ANR	88200	Identifier	NULL		87302	1					
ANR	88201	CompoundStatement		132:12:4208:4243	87302	1					
ANR	88202	IdentifierDeclStatement	struct server * server = ( struct server * ) entry -> value ;	700:12:20371:20424	87302	0	True				
ANR	88203	IdentifierDecl	* server = ( struct server * ) entry -> value		87302	0					
ANR	88204	IdentifierDeclType	struct server *		87302	0					
ANR	88205	Identifier	server		87302	1					
ANR	88206	AssignmentExpression	* server = ( struct server * ) entry -> value		87302	2		=			
ANR	88207	Identifier	server		87302	0					
ANR	88208	CastExpression	( struct server * ) entry -> value		87302	1					
ANR	88209	CastTarget	struct server *		87302	0					
ANR	88210	PtrMemberAccess	entry -> value		87302	1					
ANR	88211	Identifier	entry		87302	0					
ANR	88212	Identifier	value		87302	1					
ANR	88213	IdentifierDeclStatement	size_t pos = strlen ( buf ) ;	701:12:20438:20473	87302	1	True				
ANR	88214	IdentifierDecl	pos = strlen ( buf )		87302	0					
ANR	88215	IdentifierDeclType	size_t		87302	0					
ANR	88216	Identifier	pos		87302	1					
ANR	88217	AssignmentExpression	pos = strlen ( buf )		87302	2		=			
ANR	88218	Identifier	pos		87302	0					
ANR	88219	CallExpression	strlen ( buf )		87302	1					
ANR	88220	Callee	strlen		87302	0					
ANR	88221	Identifier	strlen		87302	0					
ANR	88222	ArgumentList	buf		87302	1					
ANR	88223	Argument	buf		87302	0					
ANR	88224	Identifier	buf		87302	0					
ANR	88225	IfStatement	if ( pos > BUF_SIZE / 2 )		87302	2					
ANR	88226	Condition	pos > BUF_SIZE / 2	702:16:20491:20508	87302	0	True				
ANR	88227	RelationalExpression	pos > BUF_SIZE / 2		87302	0		>			
ANR	88228	Identifier	pos		87302	0					
ANR	88229	MultiplicativeExpression	BUF_SIZE / 2		87302	1		/			
ANR	88230	Identifier	BUF_SIZE		87302	0					
ANR	88231	PrimaryExpression	2		87302	1					
ANR	88232	CompoundStatement		133:36:4281:4281	87302	1					
ANR	88233	ExpressionStatement	buf [ pos - 1 ] = '}'	703:16:20529:20547	87302	0	True				
ANR	88234	AssignmentExpression	buf [ pos - 1 ] = '}'		87302	0		=			
ANR	88235	ArrayIndexing	buf [ pos - 1 ]		87302	0					
ANR	88236	Identifier	buf		87302	0					
ANR	88237	AdditiveExpression	pos - 1		87302	1		-			
ANR	88238	Identifier	pos		87302	0					
ANR	88239	PrimaryExpression	1		87302	1					
ANR	88240	PrimaryExpression	'}'		87302	1					
ANR	88241	IfStatement	"if ( sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos )"		87302	1					
ANR	88242	Condition	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"	704:20:20569:20660	87302	0	True				
ANR	88243	EqualityExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"		87302	0		!=			
ANR	88244	CallExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len )"		87302	0					
ANR	88245	Callee	sendto		87302	0					
ANR	88246	Identifier	sendto		87302	0					
ANR	88247	ArgumentList	manager -> fd		87302	1					
ANR	88248	Argument	manager -> fd		87302	0					
ANR	88249	PtrMemberAccess	manager -> fd		87302	0					
ANR	88250	Identifier	manager		87302	0					
ANR	88251	Identifier	fd		87302	1					
ANR	88252	Argument	buf		87302	1					
ANR	88253	Identifier	buf		87302	0					
ANR	88254	Argument	pos		87302	2					
ANR	88255	Identifier	pos		87302	0					
ANR	88256	Argument	0		87302	3					
ANR	88257	PrimaryExpression	0		87302	0					
ANR	88258	Argument	( struct sockaddr * ) & claddr		87302	4					
ANR	88259	CastExpression	( struct sockaddr * ) & claddr		87302	0					
ANR	88260	CastTarget	struct sockaddr *		87302	0					
ANR	88261	UnaryOperationExpression	& claddr		87302	1					
ANR	88262	UnaryOperator	&		87302	0					
ANR	88263	Identifier	claddr		87302	1					
ANR	88264	Argument	len		87302	5					
ANR	88265	Identifier	len		87302	0					
ANR	88266	Identifier	pos		87302	1					
ANR	88267	CompoundStatement		136:28:4433:4433	87302	1					
ANR	88268	ExpressionStatement	"ERROR ( ""ping_sendto"" )"	706:20:20685:20705	87302	0	True				
ANR	88269	CallExpression	"ERROR ( ""ping_sendto"" )"		87302	0					
ANR	88270	Callee	ERROR		87302	0					
ANR	88271	Identifier	ERROR		87302	0					
ANR	88272	ArgumentList	"""ping_sendto"""		87302	1					
ANR	88273	Argument	"""ping_sendto"""		87302	0					
ANR	88274	PrimaryExpression	"""ping_sendto"""		87302	0					
ANR	88275	ExpressionStatement	"memset ( buf , 0 , BUF_SIZE )"	708:16:20741:20765	87302	2	True				
ANR	88276	CallExpression	"memset ( buf , 0 , BUF_SIZE )"		87302	0					
ANR	88277	Callee	memset		87302	0					
ANR	88278	Identifier	memset		87302	0					
ANR	88279	ArgumentList	buf		87302	1					
ANR	88280	Argument	buf		87302	0					
ANR	88281	Identifier	buf		87302	0					
ANR	88282	Argument	0		87302	1					
ANR	88283	PrimaryExpression	0		87302	0					
ANR	88284	Argument	BUF_SIZE		87302	2					
ANR	88285	Identifier	BUF_SIZE		87302	0					
ANR	88286	ElseStatement	else		87302	0					
ANR	88287	CompoundStatement		140:19:4556:4556	87302	0					
ANR	88288	Statement	sprintf	710:16:20804:20810	87302	0	True				
ANR	88289	Statement	(	710:23:20811:20811	87302	1	True				
ANR	88290	Statement	buf	710:24:20812:20814	87302	2	True				
ANR	88291	Statement	+	710:28:20816:20816	87302	3	True				
ANR	88292	Statement	pos	710:30:20818:20820	87302	4	True				
ANR	88293	Statement	","	710:33:20821:20821	87302	5	True				
ANR	88294	Statement	"""\\""%s\\"":%"""	710:35:20823:20832	87302	6	True				
ANR	88295	Statement	PRIu64	710:46:20834:20839	87302	7	True				
ANR	88296	Statement	""","""	710:53:20841:20843	87302	8	True				
ANR	88297	Statement	","	710:56:20844:20844	87302	9	True				
ANR	88298	Statement	server	710:58:20846:20851	87302	10	True				
ANR	88299	Statement	->	710:64:20852:20853	87302	11	True				
ANR	88300	Statement	port	710:66:20854:20857	87302	12	True				
ANR	88301	Statement	","	710:70:20858:20858	87302	13	True				
ANR	88302	Statement	server	710:72:20860:20865	87302	14	True				
ANR	88303	Statement	->	710:78:20866:20867	87302	15	True				
ANR	88304	Statement	traffic	710:80:20868:20874	87302	16	True				
ANR	88305	Statement	)	710:87:20875:20875	87302	17	True				
ANR	88306	ExpressionStatement		710:88:20876:20876	87302	18	True				
ANR	88307	IdentifierDeclStatement	size_t pos = strlen ( buf ) ;	714:8:20911:20935	87302	7	True				
ANR	88308	IdentifierDecl	pos = strlen ( buf )		87302	0					
ANR	88309	IdentifierDeclType	size_t		87302	0					
ANR	88310	Identifier	pos		87302	1					
ANR	88311	AssignmentExpression	pos = strlen ( buf )		87302	2		=			
ANR	88312	Identifier	pos		87302	0					
ANR	88313	CallExpression	strlen ( buf )		87302	1					
ANR	88314	Callee	strlen		87302	0					
ANR	88315	Identifier	strlen		87302	0					
ANR	88316	ArgumentList	buf		87302	1					
ANR	88317	Argument	buf		87302	0					
ANR	88318	Identifier	buf		87302	0					
ANR	88319	IfStatement	if ( pos > 7 )		87302	8					
ANR	88320	Condition	pos > 7	715:12:20949:20955	87302	0	True				
ANR	88321	RelationalExpression	pos > 7		87302	0		>			
ANR	88322	Identifier	pos		87302	0					
ANR	88323	PrimaryExpression	7		87302	1					
ANR	88324	CompoundStatement		146:21:4728:4728	87302	1					
ANR	88325	ExpressionStatement	buf [ pos - 1 ] = '}'	716:12:20972:20990	87302	0	True				
ANR	88326	AssignmentExpression	buf [ pos - 1 ] = '}'		87302	0		=			
ANR	88327	ArrayIndexing	buf [ pos - 1 ]		87302	0					
ANR	88328	Identifier	buf		87302	0					
ANR	88329	AdditiveExpression	pos - 1		87302	1		-			
ANR	88330	Identifier	pos		87302	0					
ANR	88331	PrimaryExpression	1		87302	1					
ANR	88332	PrimaryExpression	'}'		87302	1					
ANR	88333	ElseStatement	else		87302	0					
ANR	88334	CompoundStatement		148:15:4777:4777	87302	0					
ANR	88335	ExpressionStatement	buf [ pos ] = '}'	718:12:21021:21035	87302	0	True				
ANR	88336	AssignmentExpression	buf [ pos ] = '}'		87302	0		=			
ANR	88337	ArrayIndexing	buf [ pos ]		87302	0					
ANR	88338	Identifier	buf		87302	0					
ANR	88339	Identifier	pos		87302	1					
ANR	88340	PrimaryExpression	'}'		87302	1					
ANR	88341	ExpressionStatement	pos ++	719:12:21049:21054	87302	1	True				
ANR	88342	PostIncDecOperationExpression	pos ++		87302	0					
ANR	88343	Identifier	pos		87302	0					
ANR	88344	IncDec	++		87302	1					
ANR	88345	IfStatement	"if ( sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos )"		87302	9					
ANR	88346	Condition	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"	722:12:21079:21162	87302	0	True				
ANR	88347	EqualityExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len ) != pos"		87302	0		!=			
ANR	88348	CallExpression	"sendto ( manager -> fd , buf , pos , 0 , ( struct sockaddr * ) & claddr , len )"		87302	0					
ANR	88349	Callee	sendto		87302	0					
ANR	88350	Identifier	sendto		87302	0					
ANR	88351	ArgumentList	manager -> fd		87302	1					
ANR	88352	Argument	manager -> fd		87302	0					
ANR	88353	PtrMemberAccess	manager -> fd		87302	0					
ANR	88354	Identifier	manager		87302	0					
ANR	88355	Identifier	fd		87302	1					
ANR	88356	Argument	buf		87302	1					
ANR	88357	Identifier	buf		87302	0					
ANR	88358	Argument	pos		87302	2					
ANR	88359	Identifier	pos		87302	0					
ANR	88360	Argument	0		87302	3					
ANR	88361	PrimaryExpression	0		87302	0					
ANR	88362	Argument	( struct sockaddr * ) & claddr		87302	4					
ANR	88363	CastExpression	( struct sockaddr * ) & claddr		87302	0					
ANR	88364	CastTarget	struct sockaddr *		87302	0					
ANR	88365	UnaryOperationExpression	& claddr		87302	1					
ANR	88366	UnaryOperator	&		87302	0					
ANR	88367	Identifier	claddr		87302	1					
ANR	88368	Argument	len		87302	5					
ANR	88369	Identifier	len		87302	0					
ANR	88370	Identifier	pos		87302	1					
ANR	88371	CompoundStatement		154:20:4935:4935	87302	1					
ANR	88372	ExpressionStatement	"ERROR ( ""ping_sendto"" )"	724:12:21179:21199	87302	0	True				
ANR	88373	CallExpression	"ERROR ( ""ping_sendto"" )"		87302	0					
ANR	88374	Callee	ERROR		87302	0					
ANR	88375	Identifier	ERROR		87302	0					
ANR	88376	ArgumentList	"""ping_sendto"""		87302	1					
ANR	88377	Argument	"""ping_sendto"""		87302	0					
ANR	88378	PrimaryExpression	"""ping_sendto"""		87302	0					
ANR	88379	ReturnStatement	return ;	728:4:21222:21228	87302	13	True				
ANR	88380	Label	ERROR_MSG :	730:0:21231:21240	87302	14	True				
ANR	88381	Identifier	ERROR_MSG		87302	0					
ANR	88382	ExpressionStatement	"strcpy ( buf , ""err"" )"	731:4:21246:21264	87302	15	True				
ANR	88383	CallExpression	"strcpy ( buf , ""err"" )"		87302	0					
ANR	88384	Callee	strcpy		87302	0					
ANR	88385	Identifier	strcpy		87302	0					
ANR	88386	ArgumentList	buf		87302	1					
ANR	88387	Argument	buf		87302	0					
ANR	88388	Identifier	buf		87302	0					
ANR	88389	Argument	"""err"""		87302	1					
ANR	88390	PrimaryExpression	"""err"""		87302	0					
ANR	88391	IfStatement	"if ( sendto ( manager -> fd , buf , 3 , 0 , ( struct sockaddr * ) & claddr , len ) != 3 )"		87302	16					
ANR	88392	Condition	"sendto ( manager -> fd , buf , 3 , 0 , ( struct sockaddr * ) & claddr , len ) != 3"	732:8:21274:21341	87302	0	True				
ANR	88393	EqualityExpression	"sendto ( manager -> fd , buf , 3 , 0 , ( struct sockaddr * ) & claddr , len ) != 3"		87302	0		!=			
ANR	88394	CallExpression	"sendto ( manager -> fd , buf , 3 , 0 , ( struct sockaddr * ) & claddr , len )"		87302	0					
ANR	88395	Callee	sendto		87302	0					
ANR	88396	Identifier	sendto		87302	0					
ANR	88397	ArgumentList	manager -> fd		87302	1					
ANR	88398	Argument	manager -> fd		87302	0					
ANR	88399	PtrMemberAccess	manager -> fd		87302	0					
ANR	88400	Identifier	manager		87302	0					
ANR	88401	Identifier	fd		87302	1					
ANR	88402	Argument	buf		87302	1					
ANR	88403	Identifier	buf		87302	0					
ANR	88404	Argument	3		87302	2					
ANR	88405	PrimaryExpression	3		87302	0					
ANR	88406	Argument	0		87302	3					
ANR	88407	PrimaryExpression	0		87302	0					
ANR	88408	Argument	( struct sockaddr * ) & claddr		87302	4					
ANR	88409	CastExpression	( struct sockaddr * ) & claddr		87302	0					
ANR	88410	CastTarget	struct sockaddr *		87302	0					
ANR	88411	UnaryOperationExpression	& claddr		87302	1					
ANR	88412	UnaryOperator	&		87302	0					
ANR	88413	Identifier	claddr		87302	1					
ANR	88414	Argument	len		87302	5					
ANR	88415	Identifier	len		87302	0					
ANR	88416	PrimaryExpression	3		87302	1					
ANR	88417	CompoundStatement		163:78:5114:5114	87302	1					
ANR	88418	ExpressionStatement	"ERROR ( ""error_sendto"" )"	733:8:21354:21375	87302	0	True				
ANR	88419	CallExpression	"ERROR ( ""error_sendto"" )"		87302	0					
ANR	88420	Callee	ERROR		87302	0					
ANR	88421	Identifier	ERROR		87302	0					
ANR	88422	ArgumentList	"""error_sendto"""		87302	1					
ANR	88423	Argument	"""error_sendto"""		87302	0					
ANR	88424	PrimaryExpression	"""error_sendto"""		87302	0					
ANR	88425	ReturnType	static void		87302	1					
ANR	88426	Identifier	manager_recv_cb		87302	2					
ANR	88427	ParameterList	"EV_P_ ev_io * w , int revents"		87302	3					
ANR	88428	Parameter	EV_P_ ev_io * w	569:16:16200:16213	87302	0	True				
ANR	88429	ParameterType	EV_P_ ev_io *		87302	0					
ANR	88430	Identifier	w		87302	1					
ANR	88431	Parameter	int revents	569:32:16216:16226	87302	1	True				
ANR	88432	ParameterType	int		87302	0					
ANR	88433	Identifier	revents		87302	1					
ANR	88434	CFGEntryNode	ENTRY		87302		True				
ANR	88435	CFGExitNode	EXIT		87302		True				
ANR	88436	Symbol	msg		87302						
ANR	88437	Symbol	sendto		87302						
ANR	88438	Symbol	server_table		87302						
ANR	88439	Symbol	revents		87302						
ANR	88440	Symbol	server -> password		87302						
ANR	88441	Symbol	get_action		87302						
ANR	88442	Symbol	strlen		87302						
ANR	88443	Symbol	manager -> fd		87302						
ANR	88444	Symbol	len		87302						
ANR	88445	Symbol	parse_traffic		87302						
ANR	88446	Symbol	action		87302						
ANR	88447	Symbol	server -> port		87302						
ANR	88448	Symbol	& iter		87302						
ANR	88449	Symbol	* manager		87302						
ANR	88450	Symbol	traffic		87302						
ANR	88451	Symbol	strcmp		87302						
ANR	88452	Symbol	ret		87302						
ANR	88453	Symbol	* buf		87302						
ANR	88454	Symbol	NULL		87302						
ANR	88455	Symbol	* server -> password		87302						
ANR	88456	Symbol	method		87302						
ANR	88457	Symbol	manager -> method		87302						
ANR	88458	Symbol	iter		87302						
ANR	88459	Symbol	recvfrom		87302						
ANR	88460	Symbol	entry		87302						
ANR	88461	Symbol	& traffic		87302						
ANR	88462	Symbol	port		87302						
ANR	88463	Symbol	entry -> value		87302						
ANR	88464	Symbol	BUF_SIZE		87302						
ANR	88465	Symbol	get_data		87302						
ANR	88466	Symbol	entry_len		87302						
ANR	88467	Symbol	& len		87302						
ANR	88468	Symbol	* pos		87302						
ANR	88469	Symbol	server		87302						
ANR	88470	Symbol	* server		87302						
ANR	88471	Symbol	working_dir		87302						
ANR	88472	Symbol	get_server		87302						
ANR	88473	Symbol	msg_len		87302						
ANR	88474	Symbol	server_iter		87302						
ANR	88475	Symbol	claddr		87302						
ANR	88476	Symbol	pos		87302						
ANR	88477	Symbol	& claddr		87302						
ANR	88478	Symbol	add_server		87302						
ANR	88479	Symbol	* entry		87302						
ANR	88480	Symbol	* server -> port		87302						
ANR	88481	Symbol	manager		87302						
ANR	88482	Symbol	server -> method		87302						
ANR	88483	Symbol	cork_hash_table_iterator_next		87302						
ANR	88484	Symbol	& server_iter		87302						
ANR	88485	Symbol	r		87302						
ANR	88486	Symbol	buf		87302						
ANR	88487	Symbol	w		87302						
ANR	88488	Symbol	* * server		87302						
ANR	88489	Function	signal_cb	737:0:21386:21605							
ANR	88490	FunctionDef	"signal_cb (EV_P_ ev_signal * w , int revents)"		88489	0					
ANR	88491	CompoundStatement		739:0:21441:21605	88489	0					
ANR	88492	IfStatement	if ( revents & EV_SIGNAL )		88489	0					
ANR	88493	Condition	revents & EV_SIGNAL	740:8:21451:21469	88489	0	True				
ANR	88494	BitAndExpression	revents & EV_SIGNAL		88489	0		&			
ANR	88495	Identifier	revents		88489	0					
ANR	88496	Identifier	EV_SIGNAL		88489	1					
ANR	88497	CompoundStatement		2:29:30:30	88489	1					
ANR	88498	SwitchStatement	switch ( w -> signum )		88489	0					
ANR	88499	Condition	w -> signum	741:16:21490:21498	88489	0	True				
ANR	88500	PtrMemberAccess	w -> signum		88489	0					
ANR	88501	Identifier	w		88489	0					
ANR	88502	Identifier	signum		88489	1					
ANR	88503	CompoundStatement		3:27:59:59	88489	1					
ANR	88504	Label	case SIGINT :	742:8:21511:21522	88489	0	True				
ANR	88505	Identifier	SIGINT		88489	0					
ANR	88506	Label	case SIGTERM :	743:8:21532:21544	88489	1	True				
ANR	88507	Identifier	SIGTERM		88489	0					
ANR	88508	Statement	ev_unloop	744:12:21558:21566	88489	2	True				
ANR	88509	Statement	(	744:21:21567:21567	88489	3	True				
ANR	88510	Statement	EV_A_	744:22:21568:21572	88489	4	True				
ANR	88511	Statement	EVUNLOOP_ALL	744:28:21574:21585	88489	5	True				
ANR	88512	Statement	)	744:40:21586:21586	88489	6	True				
ANR	88513	ExpressionStatement		744:41:21587:21587	88489	7	True				
ANR	88514	ReturnType	static void		88489	1					
ANR	88515	Identifier	signal_cb		88489	2					
ANR	88516	ParameterList	"EV_P_ ev_signal * w , int revents"		88489	3					
ANR	88517	Parameter	EV_P_ ev_signal * w	738:10:21408:21425	88489	0	True				
ANR	88518	ParameterType	EV_P_ ev_signal *		88489	0					
ANR	88519	Identifier	w		88489	1					
ANR	88520	Parameter	int revents	738:30:21428:21438	88489	1	True				
ANR	88521	ParameterType	int		88489	0					
ANR	88522	Identifier	revents		88489	1					
ANR	88523	CFGEntryNode	ENTRY		88489		True				
ANR	88524	CFGExitNode	EXIT		88489		True				
ANR	88525	Symbol	* w		88489						
ANR	88526	Symbol	w -> signum		88489						
ANR	88527	Symbol	revents		88489						
ANR	88528	Symbol	w		88489						
ANR	88529	Symbol	EV_SIGNAL		88489						
ANR	88530	Function	create_server_socket	749:0:21608:23890							
ANR	88531	FunctionDef	"create_server_socket (const char * host , const char * port)"		88530	0					
ANR	88532	CompoundStatement		751:0:21669:23890	88530	0					
ANR	88533	IdentifierDeclStatement	struct addrinfo hints ;	752:4:21675:21696	88530	0	True				
ANR	88534	IdentifierDecl	hints		88530	0					
ANR	88535	IdentifierDeclType	struct addrinfo		88530	0					
ANR	88536	Identifier	hints		88530	1					
ANR	88537	IdentifierDeclStatement	"struct addrinfo * result , * rp , * ipv4v6bindall ;"	753:4:21702:21746	88530	1	True				
ANR	88538	IdentifierDecl	* result		88530	0					
ANR	88539	IdentifierDeclType	struct addrinfo *		88530	0					
ANR	88540	Identifier	result		88530	1					
ANR	88541	IdentifierDecl	* rp		88530	1					
ANR	88542	IdentifierDeclType	struct addrinfo *		88530	0					
ANR	88543	Identifier	rp		88530	1					
ANR	88544	IdentifierDecl	* ipv4v6bindall		88530	2					
ANR	88545	IdentifierDeclType	struct addrinfo *		88530	0					
ANR	88546	Identifier	ipv4v6bindall		88530	1					
ANR	88547	IdentifierDeclStatement	"int s , server_sock ;"	754:4:21752:21770	88530	2	True				
ANR	88548	IdentifierDecl	s		88530	0					
ANR	88549	IdentifierDeclType	int		88530	0					
ANR	88550	Identifier	s		88530	1					
ANR	88551	IdentifierDecl	server_sock		88530	1					
ANR	88552	IdentifierDeclType	int		88530	0					
ANR	88553	Identifier	server_sock		88530	1					
ANR	88554	ExpressionStatement	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"	756:4:21777:21819	88530	3	True				
ANR	88555	CallExpression	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"		88530	0					
ANR	88556	Callee	memset		88530	0					
ANR	88557	Identifier	memset		88530	0					
ANR	88558	ArgumentList	& hints		88530	1					
ANR	88559	Argument	& hints		88530	0					
ANR	88560	UnaryOperationExpression	& hints		88530	0					
ANR	88561	UnaryOperator	&		88530	0					
ANR	88562	Identifier	hints		88530	1					
ANR	88563	Argument	0		88530	1					
ANR	88564	PrimaryExpression	0		88530	0					
ANR	88565	Argument	sizeof ( struct addrinfo )		88530	2					
ANR	88566	SizeofExpression	sizeof ( struct addrinfo )		88530	0					
ANR	88567	Sizeof	sizeof		88530	0					
ANR	88568	SizeofOperand	struct addrinfo		88530	1					
ANR	88569	ExpressionStatement	hints . ai_family = AF_UNSPEC	757:4:21825:21854	88530	4	True				
ANR	88570	AssignmentExpression	hints . ai_family = AF_UNSPEC		88530	0		=			
ANR	88571	MemberAccess	hints . ai_family		88530	0					
ANR	88572	Identifier	hints		88530	0					
ANR	88573	Identifier	ai_family		88530	1					
ANR	88574	Identifier	AF_UNSPEC		88530	1					
ANR	88575	ExpressionStatement	hints . ai_socktype = SOCK_DGRAM	758:4:21909:21939	88530	5	True				
ANR	88576	AssignmentExpression	hints . ai_socktype = SOCK_DGRAM		88530	0		=			
ANR	88577	MemberAccess	hints . ai_socktype		88530	0					
ANR	88578	Identifier	hints		88530	0					
ANR	88579	Identifier	ai_socktype		88530	1					
ANR	88580	Identifier	SOCK_DGRAM		88530	1					
ANR	88581	ExpressionStatement	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG	759:4:21985:22031	88530	6	True				
ANR	88582	AssignmentExpression	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG		88530	0		=			
ANR	88583	MemberAccess	hints . ai_flags		88530	0					
ANR	88584	Identifier	hints		88530	0					
ANR	88585	Identifier	ai_flags		88530	1					
ANR	88586	InclusiveOrExpression	AI_PASSIVE | AI_ADDRCONFIG		88530	1		|			
ANR	88587	Identifier	AI_PASSIVE		88530	0					
ANR	88588	Identifier	AI_ADDRCONFIG		88530	1					
ANR	88589	ExpressionStatement	hints . ai_protocol = IPPROTO_UDP	760:4:22067:22098	88530	7	True				
ANR	88590	AssignmentExpression	hints . ai_protocol = IPPROTO_UDP		88530	0		=			
ANR	88591	MemberAccess	hints . ai_protocol		88530	0					
ANR	88592	Identifier	hints		88530	0					
ANR	88593	Identifier	ai_protocol		88530	1					
ANR	88594	Identifier	IPPROTO_UDP		88530	1					
ANR	88595	ExpressionStatement	"s = getaddrinfo ( host , port , & hints , & result )"	762:4:22105:22149	88530	8	True				
ANR	88596	AssignmentExpression	"s = getaddrinfo ( host , port , & hints , & result )"		88530	0		=			
ANR	88597	Identifier	s		88530	0					
ANR	88598	CallExpression	"getaddrinfo ( host , port , & hints , & result )"		88530	1					
ANR	88599	Callee	getaddrinfo		88530	0					
ANR	88600	Identifier	getaddrinfo		88530	0					
ANR	88601	ArgumentList	host		88530	1					
ANR	88602	Argument	host		88530	0					
ANR	88603	Identifier	host		88530	0					
ANR	88604	Argument	port		88530	1					
ANR	88605	Identifier	port		88530	0					
ANR	88606	Argument	& hints		88530	2					
ANR	88607	UnaryOperationExpression	& hints		88530	0					
ANR	88608	UnaryOperator	&		88530	0					
ANR	88609	Identifier	hints		88530	1					
ANR	88610	Argument	& result		88530	3					
ANR	88611	UnaryOperationExpression	& result		88530	0					
ANR	88612	UnaryOperator	&		88530	0					
ANR	88613	Identifier	result		88530	1					
ANR	88614	IfStatement	if ( s != 0 )		88530	9					
ANR	88615	Condition	s != 0	763:8:22159:22164	88530	0	True				
ANR	88616	EqualityExpression	s != 0		88530	0		!=			
ANR	88617	Identifier	s		88530	0					
ANR	88618	PrimaryExpression	0		88530	1					
ANR	88619	CompoundStatement		13:16:497:497	88530	1					
ANR	88620	ExpressionStatement	"LOGE ( ""getaddrinfo: %s"" , gai_strerror ( s ) )"	764:8:22177:22217	88530	0	True				
ANR	88621	CallExpression	"LOGE ( ""getaddrinfo: %s"" , gai_strerror ( s ) )"		88530	0					
ANR	88622	Callee	LOGE		88530	0					
ANR	88623	Identifier	LOGE		88530	0					
ANR	88624	ArgumentList	"""getaddrinfo: %s"""		88530	1					
ANR	88625	Argument	"""getaddrinfo: %s"""		88530	0					
ANR	88626	PrimaryExpression	"""getaddrinfo: %s"""		88530	0					
ANR	88627	Argument	gai_strerror ( s )		88530	1					
ANR	88628	CallExpression	gai_strerror ( s )		88530	0					
ANR	88629	Callee	gai_strerror		88530	0					
ANR	88630	Identifier	gai_strerror		88530	0					
ANR	88631	ArgumentList	s		88530	1					
ANR	88632	Argument	s		88530	0					
ANR	88633	Identifier	s		88530	0					
ANR	88634	ReturnStatement	return - 1 ;	765:8:22227:22236	88530	1	True				
ANR	88635	UnaryOperationExpression	- 1		88530	0					
ANR	88636	UnaryOperator	-		88530	0					
ANR	88637	PrimaryExpression	1		88530	1					
ANR	88638	ExpressionStatement	rp = result	768:4:22249:22260	88530	10	True				
ANR	88639	AssignmentExpression	rp = result		88530	0		=			
ANR	88640	Identifier	rp		88530	0					
ANR	88641	Identifier	result		88530	1					
ANR	88642	IfStatement	if ( ! host )		88530	11					
ANR	88643	Condition	! host	776:8:22604:22608	88530	0	True				
ANR	88644	UnaryOperationExpression	! host		88530	0					
ANR	88645	UnaryOperator	!		88530	0					
ANR	88646	Identifier	host		88530	1					
ANR	88647	CompoundStatement		26:15:941:941	88530	1					
ANR	88648	ExpressionStatement	ipv4v6bindall = result	777:8:22621:22643	88530	0	True				
ANR	88649	AssignmentExpression	ipv4v6bindall = result		88530	0		=			
ANR	88650	Identifier	ipv4v6bindall		88530	0					
ANR	88651	Identifier	result		88530	1					
ANR	88652	WhileStatement	while ( ipv4v6bindall )		88530	1					
ANR	88653	Condition	ipv4v6bindall	780:15:22740:22752	88530	0	True				
ANR	88654	Identifier	ipv4v6bindall		88530	0					
ANR	88655	CompoundStatement		30:30:1085:1085	88530	1					
ANR	88656	IfStatement	if ( ipv4v6bindall -> ai_family == AF_INET6 )		88530	0					
ANR	88657	Condition	ipv4v6bindall -> ai_family == AF_INET6	781:16:22773:22808	88530	0	True				
ANR	88658	EqualityExpression	ipv4v6bindall -> ai_family == AF_INET6		88530	0		==			
ANR	88659	PtrMemberAccess	ipv4v6bindall -> ai_family		88530	0					
ANR	88660	Identifier	ipv4v6bindall		88530	0					
ANR	88661	Identifier	ai_family		88530	1					
ANR	88662	Identifier	AF_INET6		88530	1					
ANR	88663	CompoundStatement		31:54:1141:1141	88530	1					
ANR	88664	ExpressionStatement	rp = ipv4v6bindall	782:16:22829:22847	88530	0	True				
ANR	88665	AssignmentExpression	rp = ipv4v6bindall		88530	0		=			
ANR	88666	Identifier	rp		88530	0					
ANR	88667	Identifier	ipv4v6bindall		88530	1					
ANR	88668	BreakStatement	break ;	783:16:22905:22910	88530	1	True				
ANR	88669	ExpressionStatement	ipv4v6bindall = ipv4v6bindall -> ai_next	785:12:22938:22976	88530	1	True				
ANR	88670	AssignmentExpression	ipv4v6bindall = ipv4v6bindall -> ai_next		88530	0		=			
ANR	88671	Identifier	ipv4v6bindall		88530	0					
ANR	88672	PtrMemberAccess	ipv4v6bindall -> ai_next		88530	1					
ANR	88673	Identifier	ipv4v6bindall		88530	0					
ANR	88674	Identifier	ai_next		88530	1					
ANR	88675	ForStatement	for ( ; rp != NULL ; rp = rp -> ai_next )		88530	12					
ANR	88676	Condition	rp != NULL	789:26:23057:23066	88530	0	True				
ANR	88677	EqualityExpression	rp != NULL		88530	0		!=			
ANR	88678	Identifier	rp		88530	0					
ANR	88679	Identifier	NULL		88530	1					
ANR	88680	AssignmentExpression	rp = rp -> ai_next	789:38:23069:23084	88530	1	True	=			
ANR	88681	Identifier	rp		88530	0					
ANR	88682	PtrMemberAccess	rp -> ai_next		88530	1					
ANR	88683	Identifier	rp		88530	0					
ANR	88684	Identifier	ai_next		88530	1					
ANR	88685	CompoundStatement		50:8:1758:1769	88530	2					
ANR	88686	ExpressionStatement	"server_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"	790:8:23097:23166	88530	0	True				
ANR	88687	AssignmentExpression	"server_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		88530	0		=			
ANR	88688	Identifier	server_sock		88530	0					
ANR	88689	CallExpression	"socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		88530	1					
ANR	88690	Callee	socket		88530	0					
ANR	88691	Identifier	socket		88530	0					
ANR	88692	ArgumentList	rp -> ai_family		88530	1					
ANR	88693	Argument	rp -> ai_family		88530	0					
ANR	88694	PtrMemberAccess	rp -> ai_family		88530	0					
ANR	88695	Identifier	rp		88530	0					
ANR	88696	Identifier	ai_family		88530	1					
ANR	88697	Argument	rp -> ai_socktype		88530	1					
ANR	88698	PtrMemberAccess	rp -> ai_socktype		88530	0					
ANR	88699	Identifier	rp		88530	0					
ANR	88700	Identifier	ai_socktype		88530	1					
ANR	88701	Argument	rp -> ai_protocol		88530	2					
ANR	88702	PtrMemberAccess	rp -> ai_protocol		88530	0					
ANR	88703	Identifier	rp		88530	0					
ANR	88704	Identifier	ai_protocol		88530	1					
ANR	88705	IfStatement	if ( server_sock == - 1 )		88530	1					
ANR	88706	Condition	server_sock == - 1	791:12:23180:23196	88530	0	True				
ANR	88707	EqualityExpression	server_sock == - 1		88530	0		==			
ANR	88708	Identifier	server_sock		88530	0					
ANR	88709	UnaryOperationExpression	- 1		88530	1					
ANR	88710	UnaryOperator	-		88530	0					
ANR	88711	PrimaryExpression	1		88530	1					
ANR	88712	CompoundStatement		41:31:1529:1529	88530	1					
ANR	88713	ContinueStatement	continue ;	792:12:23213:23221	88530	0	True				
ANR	88714	IfStatement	if ( rp -> ai_family == AF_INET6 )		88530	2					
ANR	88715	Condition	rp -> ai_family == AF_INET6	795:12:23246:23270	88530	0	True				
ANR	88716	EqualityExpression	rp -> ai_family == AF_INET6		88530	0		==			
ANR	88717	PtrMemberAccess	rp -> ai_family		88530	0					
ANR	88718	Identifier	rp		88530	0					
ANR	88719	Identifier	ai_family		88530	1					
ANR	88720	Identifier	AF_INET6		88530	1					
ANR	88721	CompoundStatement		46:12:1617:1644	88530	1					
ANR	88722	IdentifierDeclStatement	int ipv6only = host ? 1 : 0 ;	796:12:23287:23314	88530	0	True				
ANR	88723	IdentifierDecl	ipv6only = host ? 1 : 0		88530	0					
ANR	88724	IdentifierDeclType	int		88530	0					
ANR	88725	Identifier	ipv6only		88530	1					
ANR	88726	AssignmentExpression	ipv6only = host ? 1 : 0		88530	2		=			
ANR	88727	Identifier	ipv6only		88530	0					
ANR	88728	ConditionalExpression	host ? 1 : 0		88530	1					
ANR	88729	Condition	host		88530	0					
ANR	88730	Identifier	host		88530	0					
ANR	88731	PrimaryExpression	1		88530	1					
ANR	88732	PrimaryExpression	0		88530	2					
ANR	88733	ExpressionStatement	"setsockopt ( server_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"	797:12:23328:23407	88530	1	True				
ANR	88734	CallExpression	"setsockopt ( server_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"		88530	0					
ANR	88735	Callee	setsockopt		88530	0					
ANR	88736	Identifier	setsockopt		88530	0					
ANR	88737	ArgumentList	server_sock		88530	1					
ANR	88738	Argument	server_sock		88530	0					
ANR	88739	Identifier	server_sock		88530	0					
ANR	88740	Argument	IPPROTO_IPV6		88530	1					
ANR	88741	Identifier	IPPROTO_IPV6		88530	0					
ANR	88742	Argument	IPV6_V6ONLY		88530	2					
ANR	88743	Identifier	IPV6_V6ONLY		88530	0					
ANR	88744	Argument	& ipv6only		88530	3					
ANR	88745	UnaryOperationExpression	& ipv6only		88530	0					
ANR	88746	UnaryOperator	&		88530	0					
ANR	88747	Identifier	ipv6only		88530	1					
ANR	88748	Argument	sizeof ( ipv6only )		88530	4					
ANR	88749	SizeofExpression	sizeof ( ipv6only )		88530	0					
ANR	88750	Sizeof	sizeof		88530	0					
ANR	88751	SizeofOperand	ipv6only		88530	1					
ANR	88752	IdentifierDeclStatement	int opt = 1 ;	800:8:23428:23439	88530	3	True				
ANR	88753	IdentifierDecl	opt = 1		88530	0					
ANR	88754	IdentifierDeclType	int		88530	0					
ANR	88755	Identifier	opt		88530	1					
ANR	88756	AssignmentExpression	opt = 1		88530	2		=			
ANR	88757	Identifier	opt		88530	0					
ANR	88758	PrimaryExpression	1		88530	1					
ANR	88759	ExpressionStatement	"setsockopt ( server_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"	801:8:23449:23517	88530	4	True				
ANR	88760	CallExpression	"setsockopt ( server_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"		88530	0					
ANR	88761	Callee	setsockopt		88530	0					
ANR	88762	Identifier	setsockopt		88530	0					
ANR	88763	ArgumentList	server_sock		88530	1					
ANR	88764	Argument	server_sock		88530	0					
ANR	88765	Identifier	server_sock		88530	0					
ANR	88766	Argument	SOL_SOCKET		88530	1					
ANR	88767	Identifier	SOL_SOCKET		88530	0					
ANR	88768	Argument	SO_REUSEADDR		88530	2					
ANR	88769	Identifier	SO_REUSEADDR		88530	0					
ANR	88770	Argument	& opt		88530	3					
ANR	88771	UnaryOperationExpression	& opt		88530	0					
ANR	88772	UnaryOperator	&		88530	0					
ANR	88773	Identifier	opt		88530	1					
ANR	88774	Argument	sizeof ( opt )		88530	4					
ANR	88775	SizeofExpression	sizeof ( opt )		88530	0					
ANR	88776	Sizeof	sizeof		88530	0					
ANR	88777	SizeofOperand	opt		88530	1					
ANR	88778	ExpressionStatement	"s = bind ( server_sock , rp -> ai_addr , rp -> ai_addrlen )"	803:8:23528:23578	88530	5	True				
ANR	88779	AssignmentExpression	"s = bind ( server_sock , rp -> ai_addr , rp -> ai_addrlen )"		88530	0		=			
ANR	88780	Identifier	s		88530	0					
ANR	88781	CallExpression	"bind ( server_sock , rp -> ai_addr , rp -> ai_addrlen )"		88530	1					
ANR	88782	Callee	bind		88530	0					
ANR	88783	Identifier	bind		88530	0					
ANR	88784	ArgumentList	server_sock		88530	1					
ANR	88785	Argument	server_sock		88530	0					
ANR	88786	Identifier	server_sock		88530	0					
ANR	88787	Argument	rp -> ai_addr		88530	1					
ANR	88788	PtrMemberAccess	rp -> ai_addr		88530	0					
ANR	88789	Identifier	rp		88530	0					
ANR	88790	Identifier	ai_addr		88530	1					
ANR	88791	Argument	rp -> ai_addrlen		88530	2					
ANR	88792	PtrMemberAccess	rp -> ai_addrlen		88530	0					
ANR	88793	Identifier	rp		88530	0					
ANR	88794	Identifier	ai_addrlen		88530	1					
ANR	88795	IfStatement	if ( s == 0 )		88530	6					
ANR	88796	Condition	s == 0	804:12:23592:23597	88530	0	True				
ANR	88797	EqualityExpression	s == 0		88530	0		==			
ANR	88798	Identifier	s		88530	0					
ANR	88799	PrimaryExpression	0		88530	1					
ANR	88800	CompoundStatement		54:20:1930:1930	88530	1					
ANR	88801	BreakStatement	break ;	806:12:23665:23670	88530	0	True				
ANR	88802	ElseStatement	else		88530	0					
ANR	88803	CompoundStatement		57:15:2017:2017	88530	0					
ANR	88804	ExpressionStatement	"ERROR ( ""bind"" )"	808:12:23701:23714	88530	0	True				
ANR	88805	CallExpression	"ERROR ( ""bind"" )"		88530	0					
ANR	88806	Callee	ERROR		88530	0					
ANR	88807	Identifier	ERROR		88530	0					
ANR	88808	ArgumentList	"""bind"""		88530	1					
ANR	88809	Argument	"""bind"""		88530	0					
ANR	88810	PrimaryExpression	"""bind"""		88530	0					
ANR	88811	ExpressionStatement	close ( server_sock )	811:8:23735:23753	88530	7	True				
ANR	88812	CallExpression	close ( server_sock )		88530	0					
ANR	88813	Callee	close		88530	0					
ANR	88814	Identifier	close		88530	0					
ANR	88815	ArgumentList	server_sock		88530	1					
ANR	88816	Argument	server_sock		88530	0					
ANR	88817	Identifier	server_sock		88530	0					
ANR	88818	IfStatement	if ( rp == NULL )		88530	13					
ANR	88819	Condition	rp == NULL	814:8:23770:23779	88530	0	True				
ANR	88820	EqualityExpression	rp == NULL		88530	0		==			
ANR	88821	Identifier	rp		88530	0					
ANR	88822	Identifier	NULL		88530	1					
ANR	88823	CompoundStatement		64:20:2112:2112	88530	1					
ANR	88824	ExpressionStatement	"LOGE ( ""cannot bind"" )"	815:8:23792:23811	88530	0	True				
ANR	88825	CallExpression	"LOGE ( ""cannot bind"" )"		88530	0					
ANR	88826	Callee	LOGE		88530	0					
ANR	88827	Identifier	LOGE		88530	0					
ANR	88828	ArgumentList	"""cannot bind"""		88530	1					
ANR	88829	Argument	"""cannot bind"""		88530	0					
ANR	88830	PrimaryExpression	"""cannot bind"""		88530	0					
ANR	88831	ReturnStatement	return - 1 ;	816:8:23821:23830	88530	1	True				
ANR	88832	UnaryOperationExpression	- 1		88530	0					
ANR	88833	UnaryOperator	-		88530	0					
ANR	88834	PrimaryExpression	1		88530	1					
ANR	88835	ExpressionStatement	freeaddrinfo ( result )	819:4:23843:23863	88530	14	True				
ANR	88836	CallExpression	freeaddrinfo ( result )		88530	0					
ANR	88837	Callee	freeaddrinfo		88530	0					
ANR	88838	Identifier	freeaddrinfo		88530	0					
ANR	88839	ArgumentList	result		88530	1					
ANR	88840	Argument	result		88530	0					
ANR	88841	Identifier	result		88530	0					
ANR	88842	ReturnStatement	return server_sock ;	821:4:23870:23888	88530	15	True				
ANR	88843	Identifier	server_sock		88530	0					
ANR	88844	ReturnType	int		88530	1					
ANR	88845	Identifier	create_server_socket		88530	2					
ANR	88846	ParameterList	"const char * host , const char * port"		88530	3					
ANR	88847	Parameter	const char * host	750:21:21633:21648	88530	0	True				
ANR	88848	ParameterType	const char *		88530	0					
ANR	88849	Identifier	host		88530	1					
ANR	88850	Parameter	const char * port	750:39:21651:21666	88530	1	True				
ANR	88851	ParameterType	const char *		88530	0					
ANR	88852	Identifier	port		88530	1					
ANR	88853	CFGEntryNode	ENTRY		88530		True				
ANR	88854	CFGExitNode	EXIT		88530		True				
ANR	88855	Symbol	rp -> ai_addr		88530						
ANR	88856	Symbol	rp -> ai_protocol		88530						
ANR	88857	Symbol	rp -> ai_addrlen		88530						
ANR	88858	Symbol	server_sock		88530						
ANR	88859	Symbol	hints . ai_flags		88530						
ANR	88860	Symbol	gai_strerror		88530						
ANR	88861	Symbol	ipv6only		88530						
ANR	88862	Symbol	AF_UNSPEC		88530						
ANR	88863	Symbol	result		88530						
ANR	88864	Symbol	hints . ai_family		88530						
ANR	88865	Symbol	ipv4v6bindall -> ai_family		88530						
ANR	88866	Symbol	* ipv4v6bindall		88530						
ANR	88867	Symbol	bind		88530						
ANR	88868	Symbol	AI_ADDRCONFIG		88530						
ANR	88869	Symbol	& result		88530						
ANR	88870	Symbol	host		88530						
ANR	88871	Symbol	ipv4v6bindall		88530						
ANR	88872	Symbol	& opt		88530						
ANR	88873	Symbol	& ipv6only		88530						
ANR	88874	Symbol	& hints		88530						
ANR	88875	Symbol	NULL		88530						
ANR	88876	Symbol	hints		88530						
ANR	88877	Symbol	* rp		88530						
ANR	88878	Symbol	getaddrinfo		88530						
ANR	88879	Symbol	rp -> ai_socktype		88530						
ANR	88880	Symbol	SO_REUSEADDR		88530						
ANR	88881	Symbol	SOCK_DGRAM		88530						
ANR	88882	Symbol	hints . ai_protocol		88530						
ANR	88883	Symbol	AF_INET6		88530						
ANR	88884	Symbol	SOL_SOCKET		88530						
ANR	88885	Symbol	hints . ai_socktype		88530						
ANR	88886	Symbol	IPV6_V6ONLY		88530						
ANR	88887	Symbol	ipv4v6bindall -> ai_next		88530						
ANR	88888	Symbol	opt		88530						
ANR	88889	Symbol	s		88530						
ANR	88890	Symbol	port		88530						
ANR	88891	Symbol	IPPROTO_UDP		88530						
ANR	88892	Symbol	rp -> ai_family		88530						
ANR	88893	Symbol	IPPROTO_IPV6		88530						
ANR	88894	Symbol	socket		88530						
ANR	88895	Symbol	rp -> ai_next		88530						
ANR	88896	Symbol	rp		88530						
ANR	88897	Symbol	AI_PASSIVE		88530						
ANR	88898	Function	main	824:0:23893:35058							
ANR	88899	FunctionDef	"main (int argc , char * * argv)"		88898	0					
ANR	88900	CompoundStatement		826:0:23925:35058	88898	0					
ANR	88901	IdentifierDeclStatement	"int i , c ;"	827:4:23931:23939	88898	0	True				
ANR	88902	IdentifierDecl	i		88898	0					
ANR	88903	IdentifierDeclType	int		88898	0					
ANR	88904	Identifier	i		88898	1					
ANR	88905	IdentifierDecl	c		88898	1					
ANR	88906	IdentifierDeclType	int		88898	0					
ANR	88907	Identifier	c		88898	1					
ANR	88908	IdentifierDeclStatement	int pid_flags = 0 ;	828:4:23945:23970	88898	1	True				
ANR	88909	IdentifierDecl	pid_flags = 0		88898	0					
ANR	88910	IdentifierDeclType	int		88898	0					
ANR	88911	Identifier	pid_flags		88898	1					
ANR	88912	AssignmentExpression	pid_flags = 0		88898	2		=			
ANR	88913	Identifier	pid_flags		88898	0					
ANR	88914	PrimaryExpression	0		88898	1					
ANR	88915	IdentifierDeclStatement	char * acl = NULL ;	829:4:23976:24004	88898	2	True				
ANR	88916	IdentifierDecl	* acl = NULL		88898	0					
ANR	88917	IdentifierDeclType	char *		88898	0					
ANR	88918	Identifier	acl		88898	1					
ANR	88919	AssignmentExpression	* acl = NULL		88898	2		=			
ANR	88920	Identifier	NULL		88898	0					
ANR	88921	Identifier	NULL		88898	1					
ANR	88922	IdentifierDeclStatement	char * user = NULL ;	830:4:24010:24038	88898	3	True				
ANR	88923	IdentifierDecl	* user = NULL		88898	0					
ANR	88924	IdentifierDeclType	char *		88898	0					
ANR	88925	Identifier	user		88898	1					
ANR	88926	AssignmentExpression	* user = NULL		88898	2		=			
ANR	88927	Identifier	NULL		88898	0					
ANR	88928	Identifier	NULL		88898	1					
ANR	88929	IdentifierDeclStatement	char * password = NULL ;	831:4:24044:24072	88898	4	True				
ANR	88930	IdentifierDecl	* password = NULL		88898	0					
ANR	88931	IdentifierDeclType	char *		88898	0					
ANR	88932	Identifier	password		88898	1					
ANR	88933	AssignmentExpression	* password = NULL		88898	2		=			
ANR	88934	Identifier	NULL		88898	0					
ANR	88935	Identifier	NULL		88898	1					
ANR	88936	IdentifierDeclStatement	char * timeout = NULL ;	832:4:24078:24106	88898	5	True				
ANR	88937	IdentifierDecl	* timeout = NULL		88898	0					
ANR	88938	IdentifierDeclType	char *		88898	0					
ANR	88939	Identifier	timeout		88898	1					
ANR	88940	AssignmentExpression	* timeout = NULL		88898	2		=			
ANR	88941	Identifier	NULL		88898	0					
ANR	88942	Identifier	NULL		88898	1					
ANR	88943	IdentifierDeclStatement	char * method = NULL ;	833:4:24112:24140	88898	6	True				
ANR	88944	IdentifierDecl	* method = NULL		88898	0					
ANR	88945	IdentifierDeclType	char *		88898	0					
ANR	88946	Identifier	method		88898	1					
ANR	88947	AssignmentExpression	* method = NULL		88898	2		=			
ANR	88948	Identifier	NULL		88898	0					
ANR	88949	Identifier	NULL		88898	1					
ANR	88950	IdentifierDeclStatement	char * pid_path = NULL ;	834:4:24146:24174	88898	7	True				
ANR	88951	IdentifierDecl	* pid_path = NULL		88898	0					
ANR	88952	IdentifierDeclType	char *		88898	0					
ANR	88953	Identifier	pid_path		88898	1					
ANR	88954	AssignmentExpression	* pid_path = NULL		88898	2		=			
ANR	88955	Identifier	NULL		88898	0					
ANR	88956	Identifier	NULL		88898	1					
ANR	88957	IdentifierDeclStatement	char * conf_path = NULL ;	835:4:24180:24208	88898	8	True				
ANR	88958	IdentifierDecl	* conf_path = NULL		88898	0					
ANR	88959	IdentifierDeclType	char *		88898	0					
ANR	88960	Identifier	conf_path		88898	1					
ANR	88961	AssignmentExpression	* conf_path = NULL		88898	2		=			
ANR	88962	Identifier	NULL		88898	0					
ANR	88963	Identifier	NULL		88898	1					
ANR	88964	IdentifierDeclStatement	char * iface = NULL ;	836:4:24214:24242	88898	9	True				
ANR	88965	IdentifierDecl	* iface = NULL		88898	0					
ANR	88966	IdentifierDeclType	char *		88898	0					
ANR	88967	Identifier	iface		88898	1					
ANR	88968	AssignmentExpression	* iface = NULL		88898	2		=			
ANR	88969	Identifier	NULL		88898	0					
ANR	88970	Identifier	NULL		88898	1					
ANR	88971	IdentifierDeclStatement	char * manager_address = NULL ;	837:4:24248:24276	88898	10	True				
ANR	88972	IdentifierDecl	* manager_address = NULL		88898	0					
ANR	88973	IdentifierDeclType	char *		88898	0					
ANR	88974	Identifier	manager_address		88898	1					
ANR	88975	AssignmentExpression	* manager_address = NULL		88898	2		=			
ANR	88976	Identifier	NULL		88898	0					
ANR	88977	Identifier	NULL		88898	1					
ANR	88978	IdentifierDeclStatement	char * plugin = NULL ;	838:4:24282:24310	88898	11	True				
ANR	88979	IdentifierDecl	* plugin = NULL		88898	0					
ANR	88980	IdentifierDeclType	char *		88898	0					
ANR	88981	Identifier	plugin		88898	1					
ANR	88982	AssignmentExpression	* plugin = NULL		88898	2		=			
ANR	88983	Identifier	NULL		88898	0					
ANR	88984	Identifier	NULL		88898	1					
ANR	88985	IdentifierDeclStatement	char * plugin_opts = NULL ;	839:4:24316:24344	88898	12	True				
ANR	88986	IdentifierDecl	* plugin_opts = NULL		88898	0					
ANR	88987	IdentifierDeclType	char *		88898	0					
ANR	88988	Identifier	plugin_opts		88898	1					
ANR	88989	AssignmentExpression	* plugin_opts = NULL		88898	2		=			
ANR	88990	Identifier	NULL		88898	0					
ANR	88991	Identifier	NULL		88898	1					
ANR	88992	IdentifierDeclStatement	int fast_open = 0 ;	841:4:24351:24369	88898	13	True				
ANR	88993	IdentifierDecl	fast_open = 0		88898	0					
ANR	88994	IdentifierDeclType	int		88898	0					
ANR	88995	Identifier	fast_open		88898	1					
ANR	88996	AssignmentExpression	fast_open = 0		88898	2		=			
ANR	88997	Identifier	fast_open		88898	0					
ANR	88998	PrimaryExpression	0		88898	1					
ANR	88999	IdentifierDeclStatement	int reuse_port = 0 ;	842:4:24375:24393	88898	14	True				
ANR	89000	IdentifierDecl	reuse_port = 0		88898	0					
ANR	89001	IdentifierDeclType	int		88898	0					
ANR	89002	Identifier	reuse_port		88898	1					
ANR	89003	AssignmentExpression	reuse_port = 0		88898	2		=			
ANR	89004	Identifier	reuse_port		88898	0					
ANR	89005	PrimaryExpression	0		88898	1					
ANR	89006	IdentifierDeclStatement	int mode = TCP_ONLY ;	843:4:24399:24424	88898	15	True				
ANR	89007	IdentifierDecl	mode = TCP_ONLY		88898	0					
ANR	89008	IdentifierDeclType	int		88898	0					
ANR	89009	Identifier	mode		88898	1					
ANR	89010	AssignmentExpression	mode = TCP_ONLY		88898	2		=			
ANR	89011	Identifier	TCP_ONLY		88898	0					
ANR	89012	Identifier	TCP_ONLY		88898	1					
ANR	89013	IdentifierDeclStatement	int mtu = 0 ;	844:4:24430:24448	88898	16	True				
ANR	89014	IdentifierDecl	mtu = 0		88898	0					
ANR	89015	IdentifierDeclType	int		88898	0					
ANR	89016	Identifier	mtu		88898	1					
ANR	89017	AssignmentExpression	mtu = 0		88898	2		=			
ANR	89018	Identifier	mtu		88898	0					
ANR	89019	PrimaryExpression	0		88898	1					
ANR	89020	IdentifierDeclStatement	int ipv6first = 0 ;	845:4:24454:24472	88898	17	True				
ANR	89021	IdentifierDecl	ipv6first = 0		88898	0					
ANR	89022	IdentifierDeclType	int		88898	0					
ANR	89023	Identifier	ipv6first		88898	1					
ANR	89024	AssignmentExpression	ipv6first = 0		88898	2		=			
ANR	89025	Identifier	ipv6first		88898	0					
ANR	89026	PrimaryExpression	0		88898	1					
ANR	89027	Statement	static	848:4:24501:24506	88898	18	True				
ANR	89028	IdentifierDeclStatement	int nofile = 0 ;	848:11:24508:24522	88898	19	True				
ANR	89029	IdentifierDecl	nofile = 0		88898	0					
ANR	89030	IdentifierDeclType	int		88898	0					
ANR	89031	Identifier	nofile		88898	1					
ANR	89032	AssignmentExpression	nofile = 0		88898	2		=			
ANR	89033	Identifier	nofile		88898	0					
ANR	89034	PrimaryExpression	0		88898	1					
ANR	89035	IdentifierDeclStatement	int server_num = 0 ;	851:4:24536:24554	88898	20	True				
ANR	89036	IdentifierDecl	server_num = 0		88898	0					
ANR	89037	IdentifierDeclType	int		88898	0					
ANR	89038	Identifier	server_num		88898	1					
ANR	89039	AssignmentExpression	server_num = 0		88898	2		=			
ANR	89040	Identifier	server_num		88898	0					
ANR	89041	PrimaryExpression	0		88898	1					
ANR	89042	IdentifierDeclStatement	char * server_host [ MAX_REMOTE_NUM ] ;	852:4:24560:24593	88898	21	True				
ANR	89043	IdentifierDecl	* server_host [ MAX_REMOTE_NUM ]		88898	0					
ANR	89044	IdentifierDeclType	char * [ MAX_REMOTE_NUM ]		88898	0					
ANR	89045	Identifier	server_host		88898	1					
ANR	89046	Identifier	MAX_REMOTE_NUM		88898	2					
ANR	89047	IdentifierDeclStatement	char * nameservers [ MAX_DNS_NUM + 1 ] ;	854:4:24600:24634	88898	22	True				
ANR	89048	IdentifierDecl	* nameservers [ MAX_DNS_NUM + 1 ]		88898	0					
ANR	89049	IdentifierDeclType	char * [ MAX_DNS_NUM + 1 ]		88898	0					
ANR	89050	Identifier	nameservers		88898	1					
ANR	89051	AdditiveExpression	MAX_DNS_NUM + 1		88898	2		+			
ANR	89052	Identifier	MAX_DNS_NUM		88898	0					
ANR	89053	PrimaryExpression	1		88898	1					
ANR	89054	IdentifierDeclStatement	int nameserver_num = 0 ;	855:4:24640:24662	88898	23	True				
ANR	89055	IdentifierDecl	nameserver_num = 0		88898	0					
ANR	89056	IdentifierDeclType	int		88898	0					
ANR	89057	Identifier	nameserver_num		88898	1					
ANR	89058	AssignmentExpression	nameserver_num = 0		88898	2		=			
ANR	89059	Identifier	nameserver_num		88898	0					
ANR	89060	PrimaryExpression	0		88898	1					
ANR	89061	IdentifierDeclStatement	jconf_t * conf = NULL ;	857:4:24669:24689	88898	24	True				
ANR	89062	IdentifierDecl	* conf = NULL		88898	0					
ANR	89063	IdentifierDeclType	jconf_t *		88898	0					
ANR	89064	Identifier	conf		88898	1					
ANR	89065	AssignmentExpression	* conf = NULL		88898	2		=			
ANR	89066	Identifier	NULL		88898	0					
ANR	89067	Identifier	NULL		88898	1					
ANR	89068	Statement	static	859:4:24696:24701	88898	25	True				
ANR	89069	IdentifierDeclStatement	"struct option long_options [ ] = { { ""fast-open"" , no_argument , NULL , GETOPT_VAL_FAST_OPEN } , { ""reuse-port"" , no_argument , NULL , GETOPT_VAL_REUSE_PORT } , { ""acl"" , required_argument , NULL , GETOPT_VAL_ACL } , { ""manager-address"" , required_argument , NULL , GETOPT_VAL_MANAGER_ADDRESS } , { ""executable"" , required_argument , NULL , GETOPT_VAL_EXECUTABLE } , { ""mtu"" , required_argument , NULL , GETOPT_VAL_MTU } , { ""plugin"" , required_argument , NULL , GETOPT_VAL_PLUGIN } , { ""plugin-opts"" , required_argument , NULL , GETOPT_VAL_PLUGIN_OPTS } , { ""password"" , required_argument , NULL , GETOPT_VAL_PASSWORD } , { ""help"" , no_argument , NULL , GETOPT_VAL_HELP } , { NULL , 0 , NULL , 0 } } ;"	859:11:24703:25664	88898	26	True				
ANR	89070	IdentifierDecl	"long_options [ ] = { { ""fast-open"" , no_argument , NULL , GETOPT_VAL_FAST_OPEN } , { ""reuse-port"" , no_argument , NULL , GETOPT_VAL_REUSE_PORT } , { ""acl"" , required_argument , NULL , GETOPT_VAL_ACL } , { ""manager-address"" , required_argument , NULL , GETOPT_VAL_MANAGER_ADDRESS } , { ""executable"" , required_argument , NULL , GETOPT_VAL_EXECUTABLE } , { ""mtu"" , required_argument , NULL , GETOPT_VAL_MTU } , { ""plugin"" , required_argument , NULL , GETOPT_VAL_PLUGIN } , { ""plugin-opts"" , required_argument , NULL , GETOPT_VAL_PLUGIN_OPTS } , { ""password"" , required_argument , NULL , GETOPT_VAL_PASSWORD } , { ""help"" , no_argument , NULL , GETOPT_VAL_HELP } , { NULL , 0 , NULL , 0 } }"		88898	0					
ANR	89071	IdentifierDeclType	struct option [ ]		88898	0					
ANR	89072	Identifier	long_options		88898	1					
ANR	89073	AssignmentExpression	"long_options [ ] = { { ""fast-open"" , no_argument , NULL , GETOPT_VAL_FAST_OPEN } , { ""reuse-port"" , no_argument , NULL , GETOPT_VAL_REUSE_PORT } , { ""acl"" , required_argument , NULL , GETOPT_VAL_ACL } , { ""manager-address"" , required_argument , NULL , GETOPT_VAL_MANAGER_ADDRESS } , { ""executable"" , required_argument , NULL , GETOPT_VAL_EXECUTABLE } , { ""mtu"" , required_argument , NULL , GETOPT_VAL_MTU } , { ""plugin"" , required_argument , NULL , GETOPT_VAL_PLUGIN } , { ""plugin-opts"" , required_argument , NULL , GETOPT_VAL_PLUGIN_OPTS } , { ""password"" , required_argument , NULL , GETOPT_VAL_PASSWORD } , { ""help"" , no_argument , NULL , GETOPT_VAL_HELP } , { NULL , 0 , NULL , 0 } }"		88898	2		=			
ANR	89074	Identifier	long_options		88898	0					
ANR	89075	InitializerList	"""fast-open"""		88898	1					
ANR	89076	InitializerList	"""fast-open"""		88898	0					
ANR	89077	PrimaryExpression	"""fast-open"""		88898	0					
ANR	89078	Identifier	no_argument		88898	1					
ANR	89079	Identifier	NULL		88898	2					
ANR	89080	Identifier	GETOPT_VAL_FAST_OPEN		88898	3					
ANR	89081	InitializerList	"""reuse-port"""		88898	1					
ANR	89082	PrimaryExpression	"""reuse-port"""		88898	0					
ANR	89083	Identifier	no_argument		88898	1					
ANR	89084	Identifier	NULL		88898	2					
ANR	89085	Identifier	GETOPT_VAL_REUSE_PORT		88898	3					
ANR	89086	InitializerList	"""acl"""		88898	2					
ANR	89087	PrimaryExpression	"""acl"""		88898	0					
ANR	89088	Identifier	required_argument		88898	1					
ANR	89089	Identifier	NULL		88898	2					
ANR	89090	Identifier	GETOPT_VAL_ACL		88898	3					
ANR	89091	InitializerList	"""manager-address"""		88898	3					
ANR	89092	PrimaryExpression	"""manager-address"""		88898	0					
ANR	89093	Identifier	required_argument		88898	1					
ANR	89094	Identifier	NULL		88898	2					
ANR	89095	Identifier	GETOPT_VAL_MANAGER_ADDRESS		88898	3					
ANR	89096	InitializerList	"""executable"""		88898	4					
ANR	89097	PrimaryExpression	"""executable"""		88898	0					
ANR	89098	Identifier	required_argument		88898	1					
ANR	89099	Identifier	NULL		88898	2					
ANR	89100	Identifier	GETOPT_VAL_EXECUTABLE		88898	3					
ANR	89101	InitializerList	"""mtu"""		88898	5					
ANR	89102	PrimaryExpression	"""mtu"""		88898	0					
ANR	89103	Identifier	required_argument		88898	1					
ANR	89104	Identifier	NULL		88898	2					
ANR	89105	Identifier	GETOPT_VAL_MTU		88898	3					
ANR	89106	InitializerList	"""plugin"""		88898	6					
ANR	89107	PrimaryExpression	"""plugin"""		88898	0					
ANR	89108	Identifier	required_argument		88898	1					
ANR	89109	Identifier	NULL		88898	2					
ANR	89110	Identifier	GETOPT_VAL_PLUGIN		88898	3					
ANR	89111	InitializerList	"""plugin-opts"""		88898	7					
ANR	89112	PrimaryExpression	"""plugin-opts"""		88898	0					
ANR	89113	Identifier	required_argument		88898	1					
ANR	89114	Identifier	NULL		88898	2					
ANR	89115	Identifier	GETOPT_VAL_PLUGIN_OPTS		88898	3					
ANR	89116	InitializerList	"""password"""		88898	8					
ANR	89117	PrimaryExpression	"""password"""		88898	0					
ANR	89118	Identifier	required_argument		88898	1					
ANR	89119	Identifier	NULL		88898	2					
ANR	89120	Identifier	GETOPT_VAL_PASSWORD		88898	3					
ANR	89121	InitializerList	"""help"""		88898	9					
ANR	89122	PrimaryExpression	"""help"""		88898	0					
ANR	89123	Identifier	no_argument		88898	1					
ANR	89124	Identifier	NULL		88898	2					
ANR	89125	Identifier	GETOPT_VAL_HELP		88898	3					
ANR	89126	InitializerList	NULL		88898	10					
ANR	89127	Identifier	NULL		88898	0					
ANR	89128	PrimaryExpression	0		88898	1					
ANR	89129	Identifier	NULL		88898	2					
ANR	89130	PrimaryExpression	0		88898	3					
ANR	89131	ExpressionStatement	opterr = 0	875:4:25671:25681	88898	27	True				
ANR	89132	AssignmentExpression	opterr = 0		88898	0		=			
ANR	89133	Identifier	opterr		88898	0					
ANR	89134	PrimaryExpression	0		88898	1					
ANR	89135	ExpressionStatement	USE_TTY ( )	877:4:25688:25697	88898	28	True				
ANR	89136	CallExpression	USE_TTY ( )		88898	0					
ANR	89137	Callee	USE_TTY		88898	0					
ANR	89138	Identifier	USE_TTY		88898	0					
ANR	89139	ArgumentList			88898	1					
ANR	89140	WhileStatement	"while ( ( c = getopt_long ( argc , argv , ""f:s:l:k:t:m:c:i:d:a:n:6huUvA"" , long_options , NULL ) ) != - 1 )"		88898	29					
ANR	89141	Condition	"( c = getopt_long ( argc , argv , ""f:s:l:k:t:m:c:i:d:a:n:6huUvA"" , long_options , NULL ) ) != - 1"	879:11:25711:25825	88898	0	True				
ANR	89142	EqualityExpression	"( c = getopt_long ( argc , argv , ""f:s:l:k:t:m:c:i:d:a:n:6huUvA"" , long_options , NULL ) ) != - 1"		88898	0		!=			
ANR	89143	AssignmentExpression	"c = getopt_long ( argc , argv , ""f:s:l:k:t:m:c:i:d:a:n:6huUvA"" , long_options , NULL )"		88898	0		=			
ANR	89144	Identifier	c		88898	0					
ANR	89145	CallExpression	"getopt_long ( argc , argv , ""f:s:l:k:t:m:c:i:d:a:n:6huUvA"" , long_options , NULL )"		88898	1					
ANR	89146	Callee	getopt_long		88898	0					
ANR	89147	Identifier	getopt_long		88898	0					
ANR	89148	ArgumentList	argc		88898	1					
ANR	89149	Argument	argc		88898	0					
ANR	89150	Identifier	argc		88898	0					
ANR	89151	Argument	argv		88898	1					
ANR	89152	Identifier	argv		88898	0					
ANR	89153	Argument	"""f:s:l:k:t:m:c:i:d:a:n:6huUvA"""		88898	2					
ANR	89154	PrimaryExpression	"""f:s:l:k:t:m:c:i:d:a:n:6huUvA"""		88898	0					
ANR	89155	Argument	long_options		88898	3					
ANR	89156	Identifier	long_options		88898	0					
ANR	89157	Argument	NULL		88898	4					
ANR	89158	Identifier	NULL		88898	0					
ANR	89159	UnaryOperationExpression	- 1		88898	1					
ANR	89160	UnaryOperator	-		88898	0					
ANR	89161	PrimaryExpression	1		88898	1					
ANR	89162	SwitchStatement	switch ( c )		88898	1					
ANR	89163	Condition	c	881:16:25844:25844	88898	0	True				
ANR	89164	Identifier	c		88898	0					
ANR	89165	CompoundStatement		56:19:1921:1921	88898	1					
ANR	89166	Label	case GETOPT_VAL_REUSE_PORT :	882:8:25857:25883	88898	0	True				
ANR	89167	Identifier	GETOPT_VAL_REUSE_PORT		88898	0					
ANR	89168	ExpressionStatement	reuse_port = 1	883:12:25897:25911	88898	1	True				
ANR	89169	AssignmentExpression	reuse_port = 1		88898	0		=			
ANR	89170	Identifier	reuse_port		88898	0					
ANR	89171	PrimaryExpression	1		88898	1					
ANR	89172	BreakStatement	break ;	884:12:25925:25930	88898	2	True				
ANR	89173	Label	case GETOPT_VAL_FAST_OPEN :	885:8:25940:25965	88898	3	True				
ANR	89174	Identifier	GETOPT_VAL_FAST_OPEN		88898	0					
ANR	89175	ExpressionStatement	fast_open = 1	886:12:25979:25992	88898	4	True				
ANR	89176	AssignmentExpression	fast_open = 1		88898	0		=			
ANR	89177	Identifier	fast_open		88898	0					
ANR	89178	PrimaryExpression	1		88898	1					
ANR	89179	BreakStatement	break ;	887:12:26006:26011	88898	5	True				
ANR	89180	Label	case GETOPT_VAL_ACL :	888:8:26021:26040	88898	6	True				
ANR	89181	Identifier	GETOPT_VAL_ACL		88898	0					
ANR	89182	ExpressionStatement	acl = optarg	889:12:26054:26066	88898	7	True				
ANR	89183	AssignmentExpression	acl = optarg		88898	0		=			
ANR	89184	Identifier	acl		88898	0					
ANR	89185	Identifier	optarg		88898	1					
ANR	89186	BreakStatement	break ;	890:12:26080:26085	88898	8	True				
ANR	89187	Label	case GETOPT_VAL_MANAGER_ADDRESS :	891:8:26095:26126	88898	9	True				
ANR	89188	Identifier	GETOPT_VAL_MANAGER_ADDRESS		88898	0					
ANR	89189	ExpressionStatement	manager_address = optarg	892:12:26140:26164	88898	10	True				
ANR	89190	AssignmentExpression	manager_address = optarg		88898	0		=			
ANR	89191	Identifier	manager_address		88898	0					
ANR	89192	Identifier	optarg		88898	1					
ANR	89193	BreakStatement	break ;	893:12:26178:26183	88898	11	True				
ANR	89194	Label	case GETOPT_VAL_EXECUTABLE :	894:8:26193:26219	88898	12	True				
ANR	89195	Identifier	GETOPT_VAL_EXECUTABLE		88898	0					
ANR	89196	ExpressionStatement	executable = optarg	895:12:26233:26252	88898	13	True				
ANR	89197	AssignmentExpression	executable = optarg		88898	0		=			
ANR	89198	Identifier	executable		88898	0					
ANR	89199	Identifier	optarg		88898	1					
ANR	89200	BreakStatement	break ;	896:12:26266:26271	88898	14	True				
ANR	89201	Label	case GETOPT_VAL_MTU :	897:8:26281:26300	88898	15	True				
ANR	89202	Identifier	GETOPT_VAL_MTU		88898	0					
ANR	89203	ExpressionStatement	mtu = atoi ( optarg )	898:12:26314:26332	88898	16	True				
ANR	89204	AssignmentExpression	mtu = atoi ( optarg )		88898	0		=			
ANR	89205	Identifier	mtu		88898	0					
ANR	89206	CallExpression	atoi ( optarg )		88898	1					
ANR	89207	Callee	atoi		88898	0					
ANR	89208	Identifier	atoi		88898	0					
ANR	89209	ArgumentList	optarg		88898	1					
ANR	89210	Argument	optarg		88898	0					
ANR	89211	Identifier	optarg		88898	0					
ANR	89212	BreakStatement	break ;	899:12:26346:26351	88898	17	True				
ANR	89213	Label	case GETOPT_VAL_PLUGIN :	900:8:26361:26383	88898	18	True				
ANR	89214	Identifier	GETOPT_VAL_PLUGIN		88898	0					
ANR	89215	ExpressionStatement	plugin = optarg	901:12:26397:26412	88898	19	True				
ANR	89216	AssignmentExpression	plugin = optarg		88898	0		=			
ANR	89217	Identifier	plugin		88898	0					
ANR	89218	Identifier	optarg		88898	1					
ANR	89219	BreakStatement	break ;	902:12:26426:26431	88898	20	True				
ANR	89220	Label	case GETOPT_VAL_PLUGIN_OPTS :	903:8:26441:26468	88898	21	True				
ANR	89221	Identifier	GETOPT_VAL_PLUGIN_OPTS		88898	0					
ANR	89222	ExpressionStatement	plugin_opts = optarg	904:12:26482:26502	88898	22	True				
ANR	89223	AssignmentExpression	plugin_opts = optarg		88898	0		=			
ANR	89224	Identifier	plugin_opts		88898	0					
ANR	89225	Identifier	optarg		88898	1					
ANR	89226	BreakStatement	break ;	905:12:26516:26521	88898	23	True				
ANR	89227	Label	case 's' :	906:8:26531:26539	88898	24	True				
ANR	89228	IfStatement	if ( server_num < MAX_REMOTE_NUM )		88898	25					
ANR	89229	Condition	server_num < MAX_REMOTE_NUM	907:16:26557:26583	88898	0	True				
ANR	89230	RelationalExpression	server_num < MAX_REMOTE_NUM		88898	0		<			
ANR	89231	Identifier	server_num		88898	0					
ANR	89232	Identifier	MAX_REMOTE_NUM		88898	1					
ANR	89233	CompoundStatement		82:45:2660:2660	88898	1					
ANR	89234	ExpressionStatement	server_host [ server_num ++ ] = optarg	908:16:26604:26638	88898	0	True				
ANR	89235	AssignmentExpression	server_host [ server_num ++ ] = optarg		88898	0		=			
ANR	89236	ArrayIndexing	server_host [ server_num ++ ]		88898	0					
ANR	89237	Identifier	server_host		88898	0					
ANR	89238	PostIncDecOperationExpression	server_num ++		88898	1					
ANR	89239	Identifier	server_num		88898	0					
ANR	89240	IncDec	++		88898	1					
ANR	89241	Identifier	optarg		88898	1					
ANR	89242	BreakStatement	break ;	910:12:26666:26671	88898	26	True				
ANR	89243	Label	case GETOPT_VAL_PASSWORD :	911:8:26681:26705	88898	27	True				
ANR	89244	Identifier	GETOPT_VAL_PASSWORD		88898	0					
ANR	89245	Label	case 'k' :	912:8:26715:26723	88898	28	True				
ANR	89246	ExpressionStatement	password = optarg	913:12:26737:26754	88898	29	True				
ANR	89247	AssignmentExpression	password = optarg		88898	0		=			
ANR	89248	Identifier	password		88898	0					
ANR	89249	Identifier	optarg		88898	1					
ANR	89250	BreakStatement	break ;	914:12:26768:26773	88898	30	True				
ANR	89251	Label	case 'f' :	915:8:26783:26791	88898	31	True				
ANR	89252	ExpressionStatement	pid_flags = 1	916:12:26805:26818	88898	32	True				
ANR	89253	AssignmentExpression	pid_flags = 1		88898	0		=			
ANR	89254	Identifier	pid_flags		88898	0					
ANR	89255	PrimaryExpression	1		88898	1					
ANR	89256	ExpressionStatement	pid_path = optarg	917:12:26832:26850	88898	33	True				
ANR	89257	AssignmentExpression	pid_path = optarg		88898	0		=			
ANR	89258	Identifier	pid_path		88898	0					
ANR	89259	Identifier	optarg		88898	1					
ANR	89260	BreakStatement	break ;	918:12:26864:26869	88898	34	True				
ANR	89261	Label	case 't' :	919:8:26879:26887	88898	35	True				
ANR	89262	ExpressionStatement	timeout = optarg	920:12:26901:26917	88898	36	True				
ANR	89263	AssignmentExpression	timeout = optarg		88898	0		=			
ANR	89264	Identifier	timeout		88898	0					
ANR	89265	Identifier	optarg		88898	1					
ANR	89266	BreakStatement	break ;	921:12:26931:26936	88898	37	True				
ANR	89267	Label	case 'm' :	922:8:26946:26954	88898	38	True				
ANR	89268	ExpressionStatement	method = optarg	923:12:26968:26983	88898	39	True				
ANR	89269	AssignmentExpression	method = optarg		88898	0		=			
ANR	89270	Identifier	method		88898	0					
ANR	89271	Identifier	optarg		88898	1					
ANR	89272	BreakStatement	break ;	924:12:26997:27002	88898	40	True				
ANR	89273	Label	case 'c' :	925:8:27012:27020	88898	41	True				
ANR	89274	ExpressionStatement	conf_path = optarg	926:12:27034:27052	88898	42	True				
ANR	89275	AssignmentExpression	conf_path = optarg		88898	0		=			
ANR	89276	Identifier	conf_path		88898	0					
ANR	89277	Identifier	optarg		88898	1					
ANR	89278	BreakStatement	break ;	927:12:27066:27071	88898	43	True				
ANR	89279	Label	case 'i' :	928:8:27081:27089	88898	44	True				
ANR	89280	ExpressionStatement	iface = optarg	929:12:27103:27117	88898	45	True				
ANR	89281	AssignmentExpression	iface = optarg		88898	0		=			
ANR	89282	Identifier	iface		88898	0					
ANR	89283	Identifier	optarg		88898	1					
ANR	89284	BreakStatement	break ;	930:12:27131:27136	88898	46	True				
ANR	89285	Label	case 'd' :	931:8:27146:27154	88898	47	True				
ANR	89286	IfStatement	if ( nameserver_num < MAX_DNS_NUM )		88898	48					
ANR	89287	Condition	nameserver_num < MAX_DNS_NUM	932:16:27172:27199	88898	0	True				
ANR	89288	RelationalExpression	nameserver_num < MAX_DNS_NUM		88898	0		<			
ANR	89289	Identifier	nameserver_num		88898	0					
ANR	89290	Identifier	MAX_DNS_NUM		88898	1					
ANR	89291	CompoundStatement		107:46:3276:3276	88898	1					
ANR	89292	ExpressionStatement	nameservers [ nameserver_num ++ ] = optarg	933:16:27220:27258	88898	0	True				
ANR	89293	AssignmentExpression	nameservers [ nameserver_num ++ ] = optarg		88898	0		=			
ANR	89294	ArrayIndexing	nameservers [ nameserver_num ++ ]		88898	0					
ANR	89295	Identifier	nameservers		88898	0					
ANR	89296	PostIncDecOperationExpression	nameserver_num ++		88898	1					
ANR	89297	Identifier	nameserver_num		88898	0					
ANR	89298	IncDec	++		88898	1					
ANR	89299	Identifier	optarg		88898	1					
ANR	89300	BreakStatement	break ;	935:12:27286:27291	88898	49	True				
ANR	89301	Label	case 'a' :	936:8:27301:27309	88898	50	True				
ANR	89302	ExpressionStatement	user = optarg	937:12:27323:27336	88898	51	True				
ANR	89303	AssignmentExpression	user = optarg		88898	0		=			
ANR	89304	Identifier	user		88898	0					
ANR	89305	Identifier	optarg		88898	1					
ANR	89306	BreakStatement	break ;	938:12:27350:27355	88898	52	True				
ANR	89307	Label	case 'u' :	939:8:27365:27373	88898	53	True				
ANR	89308	ExpressionStatement	mode = TCP_AND_UDP	940:12:27387:27405	88898	54	True				
ANR	89309	AssignmentExpression	mode = TCP_AND_UDP		88898	0		=			
ANR	89310	Identifier	mode		88898	0					
ANR	89311	Identifier	TCP_AND_UDP		88898	1					
ANR	89312	BreakStatement	break ;	941:12:27419:27424	88898	55	True				
ANR	89313	Label	case 'U' :	942:8:27434:27442	88898	56	True				
ANR	89314	ExpressionStatement	mode = UDP_ONLY	943:12:27456:27471	88898	57	True				
ANR	89315	AssignmentExpression	mode = UDP_ONLY		88898	0		=			
ANR	89316	Identifier	mode		88898	0					
ANR	89317	Identifier	UDP_ONLY		88898	1					
ANR	89318	BreakStatement	break ;	944:12:27485:27490	88898	58	True				
ANR	89319	Label	case '6' :	945:8:27500:27508	88898	59	True				
ANR	89320	ExpressionStatement	ipv6first = 1	946:12:27522:27535	88898	60	True				
ANR	89321	AssignmentExpression	ipv6first = 1		88898	0		=			
ANR	89322	Identifier	ipv6first		88898	0					
ANR	89323	PrimaryExpression	1		88898	1					
ANR	89324	BreakStatement	break ;	947:12:27549:27554	88898	61	True				
ANR	89325	Label	case 'v' :	948:8:27564:27572	88898	62	True				
ANR	89326	ExpressionStatement	verbose = 1	949:12:27586:27597	88898	63	True				
ANR	89327	AssignmentExpression	verbose = 1		88898	0		=			
ANR	89328	Identifier	verbose		88898	0					
ANR	89329	PrimaryExpression	1		88898	1					
ANR	89330	BreakStatement	break ;	950:12:27611:27616	88898	64	True				
ANR	89331	Label	case GETOPT_VAL_HELP :	951:8:27626:27646	88898	65	True				
ANR	89332	Identifier	GETOPT_VAL_HELP		88898	0					
ANR	89333	Label	case 'h' :	952:8:27656:27664	88898	66	True				
ANR	89334	ExpressionStatement	usage ( )	953:12:27678:27685	88898	67	True				
ANR	89335	CallExpression	usage ( )		88898	0					
ANR	89336	Callee	usage		88898	0					
ANR	89337	Identifier	usage		88898	0					
ANR	89338	ArgumentList			88898	1					
ANR	89339	ExpressionStatement	exit ( EXIT_SUCCESS )	954:12:27699:27717	88898	68	True				
ANR	89340	CallExpression	exit ( EXIT_SUCCESS )		88898	0					
ANR	89341	Callee	exit		88898	0					
ANR	89342	Identifier	exit		88898	0					
ANR	89343	ArgumentList	EXIT_SUCCESS		88898	1					
ANR	89344	Argument	EXIT_SUCCESS		88898	0					
ANR	89345	Identifier	EXIT_SUCCESS		88898	0					
ANR	89346	Label	case 'n' :	956:8:27749:27757	88898	69	True				
ANR	89347	ExpressionStatement	nofile = atoi ( optarg )	957:12:27771:27792	88898	70	True				
ANR	89348	AssignmentExpression	nofile = atoi ( optarg )		88898	0		=			
ANR	89349	Identifier	nofile		88898	0					
ANR	89350	CallExpression	atoi ( optarg )		88898	1					
ANR	89351	Callee	atoi		88898	0					
ANR	89352	Identifier	atoi		88898	0					
ANR	89353	ArgumentList	optarg		88898	1					
ANR	89354	Argument	optarg		88898	0					
ANR	89355	Identifier	optarg		88898	0					
ANR	89356	BreakStatement	break ;	958:12:27806:27811	88898	71	True				
ANR	89357	Label	case 'A' :	960:8:27828:27836	88898	72	True				
ANR	89358	ExpressionStatement	"FATAL ( ""One time auth has been deprecated. Try AEAD ciphers instead."" )"	961:12:27850:27919	88898	73	True				
ANR	89359	CallExpression	"FATAL ( ""One time auth has been deprecated. Try AEAD ciphers instead."" )"		88898	0					
ANR	89360	Callee	FATAL		88898	0					
ANR	89361	Identifier	FATAL		88898	0					
ANR	89362	ArgumentList	"""One time auth has been deprecated. Try AEAD ciphers instead."""		88898	1					
ANR	89363	Argument	"""One time auth has been deprecated. Try AEAD ciphers instead."""		88898	0					
ANR	89364	PrimaryExpression	"""One time auth has been deprecated. Try AEAD ciphers instead."""		88898	0					
ANR	89365	BreakStatement	break ;	962:12:27933:27938	88898	74	True				
ANR	89366	Label	case '?' :	963:8:27948:27956	88898	75	True				
ANR	89367	ExpressionStatement	"LOGE ( ""Unrecognized option: %s"" , optarg )"	965:12:28025:28064	88898	76	True				
ANR	89368	CallExpression	"LOGE ( ""Unrecognized option: %s"" , optarg )"		88898	0					
ANR	89369	Callee	LOGE		88898	0					
ANR	89370	Identifier	LOGE		88898	0					
ANR	89371	ArgumentList	"""Unrecognized option: %s"""		88898	1					
ANR	89372	Argument	"""Unrecognized option: %s"""		88898	0					
ANR	89373	PrimaryExpression	"""Unrecognized option: %s"""		88898	0					
ANR	89374	Argument	optarg		88898	1					
ANR	89375	Identifier	optarg		88898	0					
ANR	89376	ExpressionStatement	opterr = 1	966:12:28078:28088	88898	77	True				
ANR	89377	AssignmentExpression	opterr = 1		88898	0		=			
ANR	89378	Identifier	opterr		88898	0					
ANR	89379	PrimaryExpression	1		88898	1					
ANR	89380	BreakStatement	break ;	967:12:28102:28107	88898	78	True				
ANR	89381	IfStatement	if ( opterr )		88898	30					
ANR	89382	Condition	opterr	970:8:28128:28133	88898	0	True				
ANR	89383	Identifier	opterr		88898	0					
ANR	89384	CompoundStatement		145:16:4210:4210	88898	1					
ANR	89385	ExpressionStatement	usage ( )	971:8:28146:28153	88898	0	True				
ANR	89386	CallExpression	usage ( )		88898	0					
ANR	89387	Callee	usage		88898	0					
ANR	89388	Identifier	usage		88898	0					
ANR	89389	ArgumentList			88898	1					
ANR	89390	ExpressionStatement	exit ( EXIT_FAILURE )	972:8:28163:28181	88898	1	True				
ANR	89391	CallExpression	exit ( EXIT_FAILURE )		88898	0					
ANR	89392	Callee	exit		88898	0					
ANR	89393	Identifier	exit		88898	0					
ANR	89394	ArgumentList	EXIT_FAILURE		88898	1					
ANR	89395	Argument	EXIT_FAILURE		88898	0					
ANR	89396	Identifier	EXIT_FAILURE		88898	0					
ANR	89397	IfStatement	if ( conf_path != NULL )		88898	31					
ANR	89398	Condition	conf_path != NULL	975:8:28198:28214	88898	0	True				
ANR	89399	EqualityExpression	conf_path != NULL		88898	0		!=			
ANR	89400	Identifier	conf_path		88898	0					
ANR	89401	Identifier	NULL		88898	1					
ANR	89402	CompoundStatement		150:27:4291:4291	88898	1					
ANR	89403	ExpressionStatement	conf = read_jconf ( conf_path )	976:8:28227:28255	88898	0	True				
ANR	89404	AssignmentExpression	conf = read_jconf ( conf_path )		88898	0		=			
ANR	89405	Identifier	conf		88898	0					
ANR	89406	CallExpression	read_jconf ( conf_path )		88898	1					
ANR	89407	Callee	read_jconf		88898	0					
ANR	89408	Identifier	read_jconf		88898	0					
ANR	89409	ArgumentList	conf_path		88898	1					
ANR	89410	Argument	conf_path		88898	0					
ANR	89411	Identifier	conf_path		88898	0					
ANR	89412	IfStatement	if ( server_num == 0 )		88898	1					
ANR	89413	Condition	server_num == 0	977:12:28269:28283	88898	0	True				
ANR	89414	EqualityExpression	server_num == 0		88898	0		==			
ANR	89415	Identifier	server_num		88898	0					
ANR	89416	PrimaryExpression	0		88898	1					
ANR	89417	CompoundStatement		152:29:4360:4360	88898	1					
ANR	89418	ExpressionStatement	server_num = conf -> remote_num	978:12:28300:28329	88898	0	True				
ANR	89419	AssignmentExpression	server_num = conf -> remote_num		88898	0		=			
ANR	89420	Identifier	server_num		88898	0					
ANR	89421	PtrMemberAccess	conf -> remote_num		88898	1					
ANR	89422	Identifier	conf		88898	0					
ANR	89423	Identifier	remote_num		88898	1					
ANR	89424	ForStatement	for ( i = 0 ; i < server_num ; i ++ )		88898	1					
ANR	89425	ForInit	i = 0 ;	979:17:28348:28353	88898	0	True				
ANR	89426	AssignmentExpression	i = 0		88898	0		=			
ANR	89427	Identifier	i		88898	0					
ANR	89428	PrimaryExpression	0		88898	1					
ANR	89429	Condition	i < server_num	979:24:28355:28368	88898	1	True				
ANR	89430	RelationalExpression	i < server_num		88898	0		<			
ANR	89431	Identifier	i		88898	0					
ANR	89432	Identifier	server_num		88898	1					
ANR	89433	PostIncDecOperationExpression	i ++	979:40:28371:28373	88898	2	True				
ANR	89434	Identifier	i		88898	0					
ANR	89435	IncDec	++		88898	1					
ANR	89436	ExpressionStatement	server_host [ i ] = conf -> remote_addr [ i ] . host	980:16:28392:28434	88898	3	True				
ANR	89437	AssignmentExpression	server_host [ i ] = conf -> remote_addr [ i ] . host		88898	0		=			
ANR	89438	ArrayIndexing	server_host [ i ]		88898	0					
ANR	89439	Identifier	server_host		88898	0					
ANR	89440	Identifier	i		88898	1					
ANR	89441	MemberAccess	conf -> remote_addr [ i ] . host		88898	1					
ANR	89442	ArrayIndexing	conf -> remote_addr [ i ]		88898	0					
ANR	89443	PtrMemberAccess	conf -> remote_addr		88898	0					
ANR	89444	Identifier	conf		88898	0					
ANR	89445	Identifier	remote_addr		88898	1					
ANR	89446	Identifier	i		88898	1					
ANR	89447	Identifier	host		88898	1					
ANR	89448	IfStatement	if ( password == NULL )		88898	2					
ANR	89449	Condition	password == NULL	982:12:28458:28473	88898	0	True				
ANR	89450	EqualityExpression	password == NULL		88898	0		==			
ANR	89451	Identifier	password		88898	0					
ANR	89452	Identifier	NULL		88898	1					
ANR	89453	CompoundStatement		157:30:4550:4550	88898	1					
ANR	89454	ExpressionStatement	password = conf -> password	983:12:28490:28515	88898	0	True				
ANR	89455	AssignmentExpression	password = conf -> password		88898	0		=			
ANR	89456	Identifier	password		88898	0					
ANR	89457	PtrMemberAccess	conf -> password		88898	1					
ANR	89458	Identifier	conf		88898	0					
ANR	89459	Identifier	password		88898	1					
ANR	89460	IfStatement	if ( method == NULL )		88898	3					
ANR	89461	Condition	method == NULL	985:12:28539:28552	88898	0	True				
ANR	89462	EqualityExpression	method == NULL		88898	0		==			
ANR	89463	Identifier	method		88898	0					
ANR	89464	Identifier	NULL		88898	1					
ANR	89465	CompoundStatement		160:28:4629:4629	88898	1					
ANR	89466	ExpressionStatement	method = conf -> method	986:12:28569:28590	88898	0	True				
ANR	89467	AssignmentExpression	method = conf -> method		88898	0		=			
ANR	89468	Identifier	method		88898	0					
ANR	89469	PtrMemberAccess	conf -> method		88898	1					
ANR	89470	Identifier	conf		88898	0					
ANR	89471	Identifier	method		88898	1					
ANR	89472	IfStatement	if ( timeout == NULL )		88898	4					
ANR	89473	Condition	timeout == NULL	988:12:28614:28628	88898	0	True				
ANR	89474	EqualityExpression	timeout == NULL		88898	0		==			
ANR	89475	Identifier	timeout		88898	0					
ANR	89476	Identifier	NULL		88898	1					
ANR	89477	CompoundStatement		163:29:4705:4705	88898	1					
ANR	89478	ExpressionStatement	timeout = conf -> timeout	989:12:28645:28668	88898	0	True				
ANR	89479	AssignmentExpression	timeout = conf -> timeout		88898	0		=			
ANR	89480	Identifier	timeout		88898	0					
ANR	89481	PtrMemberAccess	conf -> timeout		88898	1					
ANR	89482	Identifier	conf		88898	0					
ANR	89483	Identifier	timeout		88898	1					
ANR	89484	IfStatement	if ( user == NULL )		88898	5					
ANR	89485	Condition	user == NULL	991:12:28692:28703	88898	0	True				
ANR	89486	EqualityExpression	user == NULL		88898	0		==			
ANR	89487	Identifier	user		88898	0					
ANR	89488	Identifier	NULL		88898	1					
ANR	89489	CompoundStatement		166:26:4780:4780	88898	1					
ANR	89490	ExpressionStatement	user = conf -> user	992:12:28720:28737	88898	0	True				
ANR	89491	AssignmentExpression	user = conf -> user		88898	0		=			
ANR	89492	Identifier	user		88898	0					
ANR	89493	PtrMemberAccess	conf -> user		88898	1					
ANR	89494	Identifier	conf		88898	0					
ANR	89495	Identifier	user		88898	1					
ANR	89496	IfStatement	if ( fast_open == 0 )		88898	6					
ANR	89497	Condition	fast_open == 0	994:12:28761:28774	88898	0	True				
ANR	89498	EqualityExpression	fast_open == 0		88898	0		==			
ANR	89499	Identifier	fast_open		88898	0					
ANR	89500	PrimaryExpression	0		88898	1					
ANR	89501	CompoundStatement		169:28:4851:4851	88898	1					
ANR	89502	ExpressionStatement	fast_open = conf -> fast_open	995:12:28791:28818	88898	0	True				
ANR	89503	AssignmentExpression	fast_open = conf -> fast_open		88898	0		=			
ANR	89504	Identifier	fast_open		88898	0					
ANR	89505	PtrMemberAccess	conf -> fast_open		88898	1					
ANR	89506	Identifier	conf		88898	0					
ANR	89507	Identifier	fast_open		88898	1					
ANR	89508	IfStatement	if ( reuse_port == 0 )		88898	7					
ANR	89509	Condition	reuse_port == 0	997:12:28842:28856	88898	0	True				
ANR	89510	EqualityExpression	reuse_port == 0		88898	0		==			
ANR	89511	Identifier	reuse_port		88898	0					
ANR	89512	PrimaryExpression	0		88898	1					
ANR	89513	CompoundStatement		172:29:4933:4933	88898	1					
ANR	89514	ExpressionStatement	reuse_port = conf -> reuse_port	998:12:28873:28902	88898	0	True				
ANR	89515	AssignmentExpression	reuse_port = conf -> reuse_port		88898	0		=			
ANR	89516	Identifier	reuse_port		88898	0					
ANR	89517	PtrMemberAccess	conf -> reuse_port		88898	1					
ANR	89518	Identifier	conf		88898	0					
ANR	89519	Identifier	reuse_port		88898	1					
ANR	89520	IfStatement	if ( conf -> nameserver != NULL )		88898	8					
ANR	89521	Condition	conf -> nameserver != NULL	1000:12:28926:28949	88898	0	True				
ANR	89522	EqualityExpression	conf -> nameserver != NULL		88898	0		!=			
ANR	89523	PtrMemberAccess	conf -> nameserver		88898	0					
ANR	89524	Identifier	conf		88898	0					
ANR	89525	Identifier	nameserver		88898	1					
ANR	89526	Identifier	NULL		88898	1					
ANR	89527	CompoundStatement		175:38:5026:5026	88898	1					
ANR	89528	ExpressionStatement	nameservers [ nameserver_num ++ ] = conf -> nameserver	1001:12:28966:29014	88898	0	True				
ANR	89529	AssignmentExpression	nameservers [ nameserver_num ++ ] = conf -> nameserver		88898	0		=			
ANR	89530	ArrayIndexing	nameservers [ nameserver_num ++ ]		88898	0					
ANR	89531	Identifier	nameservers		88898	0					
ANR	89532	PostIncDecOperationExpression	nameserver_num ++		88898	1					
ANR	89533	Identifier	nameserver_num		88898	0					
ANR	89534	IncDec	++		88898	1					
ANR	89535	PtrMemberAccess	conf -> nameserver		88898	1					
ANR	89536	Identifier	conf		88898	0					
ANR	89537	Identifier	nameserver		88898	1					
ANR	89538	IfStatement	if ( mode == TCP_ONLY )		88898	9					
ANR	89539	Condition	mode == TCP_ONLY	1003:12:29038:29053	88898	0	True				
ANR	89540	EqualityExpression	mode == TCP_ONLY		88898	0		==			
ANR	89541	Identifier	mode		88898	0					
ANR	89542	Identifier	TCP_ONLY		88898	1					
ANR	89543	CompoundStatement		178:30:5130:5130	88898	1					
ANR	89544	ExpressionStatement	mode = conf -> mode	1004:12:29070:29087	88898	0	True				
ANR	89545	AssignmentExpression	mode = conf -> mode		88898	0		=			
ANR	89546	Identifier	mode		88898	0					
ANR	89547	PtrMemberAccess	conf -> mode		88898	1					
ANR	89548	Identifier	conf		88898	0					
ANR	89549	Identifier	mode		88898	1					
ANR	89550	IfStatement	if ( mtu == 0 )		88898	10					
ANR	89551	Condition	mtu == 0	1006:12:29111:29118	88898	0	True				
ANR	89552	EqualityExpression	mtu == 0		88898	0		==			
ANR	89553	Identifier	mtu		88898	0					
ANR	89554	PrimaryExpression	0		88898	1					
ANR	89555	CompoundStatement		181:22:5195:5195	88898	1					
ANR	89556	ExpressionStatement	mtu = conf -> mtu	1007:12:29135:29150	88898	0	True				
ANR	89557	AssignmentExpression	mtu = conf -> mtu		88898	0		=			
ANR	89558	Identifier	mtu		88898	0					
ANR	89559	PtrMemberAccess	conf -> mtu		88898	1					
ANR	89560	Identifier	conf		88898	0					
ANR	89561	Identifier	mtu		88898	1					
ANR	89562	IfStatement	if ( plugin == NULL )		88898	11					
ANR	89563	Condition	plugin == NULL	1009:12:29174:29187	88898	0	True				
ANR	89564	EqualityExpression	plugin == NULL		88898	0		==			
ANR	89565	Identifier	plugin		88898	0					
ANR	89566	Identifier	NULL		88898	1					
ANR	89567	CompoundStatement		184:28:5264:5264	88898	1					
ANR	89568	ExpressionStatement	plugin = conf -> plugin	1010:12:29204:29225	88898	0	True				
ANR	89569	AssignmentExpression	plugin = conf -> plugin		88898	0		=			
ANR	89570	Identifier	plugin		88898	0					
ANR	89571	PtrMemberAccess	conf -> plugin		88898	1					
ANR	89572	Identifier	conf		88898	0					
ANR	89573	Identifier	plugin		88898	1					
ANR	89574	IfStatement	if ( plugin_opts == NULL )		88898	12					
ANR	89575	Condition	plugin_opts == NULL	1012:12:29249:29267	88898	0	True				
ANR	89576	EqualityExpression	plugin_opts == NULL		88898	0		==			
ANR	89577	Identifier	plugin_opts		88898	0					
ANR	89578	Identifier	NULL		88898	1					
ANR	89579	CompoundStatement		187:33:5344:5344	88898	1					
ANR	89580	ExpressionStatement	plugin_opts = conf -> plugin_opts	1013:12:29284:29315	88898	0	True				
ANR	89581	AssignmentExpression	plugin_opts = conf -> plugin_opts		88898	0		=			
ANR	89582	Identifier	plugin_opts		88898	0					
ANR	89583	PtrMemberAccess	conf -> plugin_opts		88898	1					
ANR	89584	Identifier	conf		88898	0					
ANR	89585	Identifier	plugin_opts		88898	1					
ANR	89586	IfStatement	if ( ipv6first == 0 )		88898	13					
ANR	89587	Condition	ipv6first == 0	1015:12:29339:29352	88898	0	True				
ANR	89588	EqualityExpression	ipv6first == 0		88898	0		==			
ANR	89589	Identifier	ipv6first		88898	0					
ANR	89590	PrimaryExpression	0		88898	1					
ANR	89591	CompoundStatement		190:28:5429:5429	88898	1					
ANR	89592	ExpressionStatement	ipv6first = conf -> ipv6_first	1016:12:29369:29397	88898	0	True				
ANR	89593	AssignmentExpression	ipv6first = conf -> ipv6_first		88898	0		=			
ANR	89594	Identifier	ipv6first		88898	0					
ANR	89595	PtrMemberAccess	conf -> ipv6_first		88898	1					
ANR	89596	Identifier	conf		88898	0					
ANR	89597	Identifier	ipv6_first		88898	1					
ANR	89598	IfStatement	if ( nofile == 0 )		88898	14					
ANR	89599	Condition	nofile == 0	1019:12:29443:29453	88898	0	True				
ANR	89600	EqualityExpression	nofile == 0		88898	0		==			
ANR	89601	Identifier	nofile		88898	0					
ANR	89602	PrimaryExpression	0		88898	1					
ANR	89603	CompoundStatement		194:25:5530:5530	88898	1					
ANR	89604	ExpressionStatement	nofile = conf -> nofile	1020:12:29470:29491	88898	0	True				
ANR	89605	AssignmentExpression	nofile = conf -> nofile		88898	0		=			
ANR	89606	Identifier	nofile		88898	0					
ANR	89607	PtrMemberAccess	conf -> nofile		88898	1					
ANR	89608	Identifier	conf		88898	0					
ANR	89609	Identifier	nofile		88898	1					
ANR	89610	IfStatement	if ( server_num == 0 )		88898	32					
ANR	89611	Condition	server_num == 0	1025:8:29525:29539	88898	0	True				
ANR	89612	EqualityExpression	server_num == 0		88898	0		==			
ANR	89613	Identifier	server_num		88898	0					
ANR	89614	PrimaryExpression	0		88898	1					
ANR	89615	CompoundStatement		200:25:5616:5616	88898	1					
ANR	89616	ExpressionStatement	"server_host [ server_num ++ ] = ""0.0.0.0"""	1026:8:29552:29589	88898	0	True				
ANR	89617	AssignmentExpression	"server_host [ server_num ++ ] = ""0.0.0.0"""		88898	0		=			
ANR	89618	ArrayIndexing	server_host [ server_num ++ ]		88898	0					
ANR	89619	Identifier	server_host		88898	0					
ANR	89620	PostIncDecOperationExpression	server_num ++		88898	1					
ANR	89621	Identifier	server_num		88898	0					
ANR	89622	IncDec	++		88898	1					
ANR	89623	PrimaryExpression	"""0.0.0.0"""		88898	1					
ANR	89624	IfStatement	if ( method == NULL )		88898	33					
ANR	89625	Condition	method == NULL	1029:8:29606:29619	88898	0	True				
ANR	89626	EqualityExpression	method == NULL		88898	0		==			
ANR	89627	Identifier	method		88898	0					
ANR	89628	Identifier	NULL		88898	1					
ANR	89629	CompoundStatement		204:24:5696:5696	88898	1					
ANR	89630	ExpressionStatement	"method = ""table"""	1030:8:29632:29648	88898	0	True				
ANR	89631	AssignmentExpression	"method = ""table"""		88898	0		=			
ANR	89632	Identifier	method		88898	0					
ANR	89633	PrimaryExpression	"""table"""		88898	1					
ANR	89634	IfStatement	if ( timeout == NULL )		88898	34					
ANR	89635	Condition	timeout == NULL	1033:8:29665:29679	88898	0	True				
ANR	89636	EqualityExpression	timeout == NULL		88898	0		==			
ANR	89637	Identifier	timeout		88898	0					
ANR	89638	Identifier	NULL		88898	1					
ANR	89639	CompoundStatement		208:25:5756:5756	88898	1					
ANR	89640	ExpressionStatement	"timeout = ""60"""	1034:8:29692:29706	88898	0	True				
ANR	89641	AssignmentExpression	"timeout = ""60"""		88898	0		=			
ANR	89642	Identifier	timeout		88898	0					
ANR	89643	PrimaryExpression	"""60"""		88898	1					
ANR	89644	ExpressionStatement	"USE_SYSLOG ( argv [ 0 ] , pid_flags )"	1037:4:29719:29749	88898	35	True				
ANR	89645	CallExpression	"USE_SYSLOG ( argv [ 0 ] , pid_flags )"		88898	0					
ANR	89646	Callee	USE_SYSLOG		88898	0					
ANR	89647	Identifier	USE_SYSLOG		88898	0					
ANR	89648	ArgumentList	argv [ 0 ]		88898	1					
ANR	89649	Argument	argv [ 0 ]		88898	0					
ANR	89650	ArrayIndexing	argv [ 0 ]		88898	0					
ANR	89651	Identifier	argv		88898	0					
ANR	89652	PrimaryExpression	0		88898	1					
ANR	89653	Argument	pid_flags		88898	1					
ANR	89654	Identifier	pid_flags		88898	0					
ANR	89655	IfStatement	if ( pid_flags )		88898	36					
ANR	89656	Condition	pid_flags	1038:8:29759:29767	88898	0	True				
ANR	89657	Identifier	pid_flags		88898	0					
ANR	89658	CompoundStatement		213:19:5844:5844	88898	1					
ANR	89659	ExpressionStatement	daemonize ( pid_path )	1039:8:29780:29799	88898	0	True				
ANR	89660	CallExpression	daemonize ( pid_path )		88898	0					
ANR	89661	Callee	daemonize		88898	0					
ANR	89662	Identifier	daemonize		88898	0					
ANR	89663	ArgumentList	pid_path		88898	1					
ANR	89664	Argument	pid_path		88898	0					
ANR	89665	Identifier	pid_path		88898	0					
ANR	89666	IfStatement	if ( manager_address == NULL )		88898	37					
ANR	89667	Condition	manager_address == NULL	1042:8:29816:29838	88898	0	True				
ANR	89668	EqualityExpression	manager_address == NULL		88898	0		==			
ANR	89669	Identifier	manager_address		88898	0					
ANR	89670	Identifier	NULL		88898	1					
ANR	89671	CompoundStatement		217:33:5915:5915	88898	1					
ANR	89672	ExpressionStatement	"manager_address = ""127.0.0.1:8839"""	1043:8:29851:29885	88898	0	True				
ANR	89673	AssignmentExpression	"manager_address = ""127.0.0.1:8839"""		88898	0		=			
ANR	89674	Identifier	manager_address		88898	0					
ANR	89675	PrimaryExpression	"""127.0.0.1:8839"""		88898	1					
ANR	89676	ExpressionStatement	"LOGI ( ""using the default manager address: %s"" , manager_address )"	1044:8:29895:29957	88898	1	True				
ANR	89677	CallExpression	"LOGI ( ""using the default manager address: %s"" , manager_address )"		88898	0					
ANR	89678	Callee	LOGI		88898	0					
ANR	89679	Identifier	LOGI		88898	0					
ANR	89680	ArgumentList	"""using the default manager address: %s"""		88898	1					
ANR	89681	Argument	"""using the default manager address: %s"""		88898	0					
ANR	89682	PrimaryExpression	"""using the default manager address: %s"""		88898	0					
ANR	89683	Argument	manager_address		88898	1					
ANR	89684	Identifier	manager_address		88898	0					
ANR	89685	IfStatement	if ( server_num == 0 || manager_address == NULL )		88898	38					
ANR	89686	Condition	server_num == 0 || manager_address == NULL	1047:8:29974:30015	88898	0	True				
ANR	89687	OrExpression	server_num == 0 || manager_address == NULL		88898	0		||			
ANR	89688	EqualityExpression	server_num == 0		88898	0		==			
ANR	89689	Identifier	server_num		88898	0					
ANR	89690	PrimaryExpression	0		88898	1					
ANR	89691	EqualityExpression	manager_address == NULL		88898	1		==			
ANR	89692	Identifier	manager_address		88898	0					
ANR	89693	Identifier	NULL		88898	1					
ANR	89694	CompoundStatement		222:52:6092:6092	88898	1					
ANR	89695	ExpressionStatement	usage ( )	1048:8:30028:30035	88898	0	True				
ANR	89696	CallExpression	usage ( )		88898	0					
ANR	89697	Callee	usage		88898	0					
ANR	89698	Identifier	usage		88898	0					
ANR	89699	ArgumentList			88898	1					
ANR	89700	ExpressionStatement	exit ( EXIT_FAILURE )	1049:8:30045:30063	88898	1	True				
ANR	89701	CallExpression	exit ( EXIT_FAILURE )		88898	0					
ANR	89702	Callee	exit		88898	0					
ANR	89703	Identifier	exit		88898	0					
ANR	89704	ArgumentList	EXIT_FAILURE		88898	1					
ANR	89705	Argument	EXIT_FAILURE		88898	0					
ANR	89706	Identifier	EXIT_FAILURE		88898	0					
ANR	89707	IfStatement	if ( fast_open == 1 )		88898	39					
ANR	89708	Condition	fast_open == 1	1052:8:30080:30093	88898	0	True				
ANR	89709	EqualityExpression	fast_open == 1		88898	0		==			
ANR	89710	Identifier	fast_open		88898	0					
ANR	89711	PrimaryExpression	1		88898	1					
ANR	89712	CompoundStatement		227:24:6170:6170	88898	1					
ANR	89713	ExpressionStatement	"LOGI ( ""using tcp fast open"" )"	1054:8:30126:30153	88898	0	True				
ANR	89714	CallExpression	"LOGI ( ""using tcp fast open"" )"		88898	0					
ANR	89715	Callee	LOGI		88898	0					
ANR	89716	Identifier	LOGI		88898	0					
ANR	89717	ArgumentList	"""using tcp fast open"""		88898	1					
ANR	89718	Argument	"""using tcp fast open"""		88898	0					
ANR	89719	PrimaryExpression	"""using tcp fast open"""		88898	0					
ANR	89720	ExpressionStatement	"signal ( SIGPIPE , SIG_IGN )"	1061:4:30269:30293	88898	40	True				
ANR	89721	CallExpression	"signal ( SIGPIPE , SIG_IGN )"		88898	0					
ANR	89722	Callee	signal		88898	0					
ANR	89723	Identifier	signal		88898	0					
ANR	89724	ArgumentList	SIGPIPE		88898	1					
ANR	89725	Argument	SIGPIPE		88898	0					
ANR	89726	Identifier	SIGPIPE		88898	0					
ANR	89727	Argument	SIG_IGN		88898	1					
ANR	89728	Identifier	SIG_IGN		88898	0					
ANR	89729	ExpressionStatement	"signal ( SIGCHLD , SIG_IGN )"	1062:4:30299:30323	88898	41	True				
ANR	89730	CallExpression	"signal ( SIGCHLD , SIG_IGN )"		88898	0					
ANR	89731	Callee	signal		88898	0					
ANR	89732	Identifier	signal		88898	0					
ANR	89733	ArgumentList	SIGCHLD		88898	1					
ANR	89734	Argument	SIGCHLD		88898	0					
ANR	89735	Identifier	SIGCHLD		88898	0					
ANR	89736	Argument	SIG_IGN		88898	1					
ANR	89737	Identifier	SIG_IGN		88898	0					
ANR	89738	ExpressionStatement	"signal ( SIGABRT , SIG_IGN )"	1063:4:30329:30353	88898	42	True				
ANR	89739	CallExpression	"signal ( SIGABRT , SIG_IGN )"		88898	0					
ANR	89740	Callee	signal		88898	0					
ANR	89741	Identifier	signal		88898	0					
ANR	89742	ArgumentList	SIGABRT		88898	1					
ANR	89743	Argument	SIGABRT		88898	0					
ANR	89744	Identifier	SIGABRT		88898	0					
ANR	89745	Argument	SIG_IGN		88898	1					
ANR	89746	Identifier	SIG_IGN		88898	0					
ANR	89747	IdentifierDeclStatement	struct ev_signal sigint_watcher ;	1065:4:30360:30391	88898	43	True				
ANR	89748	IdentifierDecl	sigint_watcher		88898	0					
ANR	89749	IdentifierDeclType	struct ev_signal		88898	0					
ANR	89750	Identifier	sigint_watcher		88898	1					
ANR	89751	IdentifierDeclStatement	struct ev_signal sigterm_watcher ;	1066:4:30397:30429	88898	44	True				
ANR	89752	IdentifierDecl	sigterm_watcher		88898	0					
ANR	89753	IdentifierDeclType	struct ev_signal		88898	0					
ANR	89754	Identifier	sigterm_watcher		88898	1					
ANR	89755	ExpressionStatement	"ev_signal_init ( & sigint_watcher , signal_cb , SIGINT )"	1067:4:30435:30485	88898	45	True				
ANR	89756	CallExpression	"ev_signal_init ( & sigint_watcher , signal_cb , SIGINT )"		88898	0					
ANR	89757	Callee	ev_signal_init		88898	0					
ANR	89758	Identifier	ev_signal_init		88898	0					
ANR	89759	ArgumentList	& sigint_watcher		88898	1					
ANR	89760	Argument	& sigint_watcher		88898	0					
ANR	89761	UnaryOperationExpression	& sigint_watcher		88898	0					
ANR	89762	UnaryOperator	&		88898	0					
ANR	89763	Identifier	sigint_watcher		88898	1					
ANR	89764	Argument	signal_cb		88898	1					
ANR	89765	Identifier	signal_cb		88898	0					
ANR	89766	Argument	SIGINT		88898	2					
ANR	89767	Identifier	SIGINT		88898	0					
ANR	89768	ExpressionStatement	"ev_signal_init ( & sigterm_watcher , signal_cb , SIGTERM )"	1068:4:30491:30543	88898	46	True				
ANR	89769	CallExpression	"ev_signal_init ( & sigterm_watcher , signal_cb , SIGTERM )"		88898	0					
ANR	89770	Callee	ev_signal_init		88898	0					
ANR	89771	Identifier	ev_signal_init		88898	0					
ANR	89772	ArgumentList	& sigterm_watcher		88898	1					
ANR	89773	Argument	& sigterm_watcher		88898	0					
ANR	89774	UnaryOperationExpression	& sigterm_watcher		88898	0					
ANR	89775	UnaryOperator	&		88898	0					
ANR	89776	Identifier	sigterm_watcher		88898	1					
ANR	89777	Argument	signal_cb		88898	1					
ANR	89778	Identifier	signal_cb		88898	0					
ANR	89779	Argument	SIGTERM		88898	2					
ANR	89780	Identifier	SIGTERM		88898	0					
ANR	89781	ExpressionStatement	"ev_signal_start ( EV_DEFAULT , & sigint_watcher )"	1069:4:30549:30593	88898	47	True				
ANR	89782	CallExpression	"ev_signal_start ( EV_DEFAULT , & sigint_watcher )"		88898	0					
ANR	89783	Callee	ev_signal_start		88898	0					
ANR	89784	Identifier	ev_signal_start		88898	0					
ANR	89785	ArgumentList	EV_DEFAULT		88898	1					
ANR	89786	Argument	EV_DEFAULT		88898	0					
ANR	89787	Identifier	EV_DEFAULT		88898	0					
ANR	89788	Argument	& sigint_watcher		88898	1					
ANR	89789	UnaryOperationExpression	& sigint_watcher		88898	0					
ANR	89790	UnaryOperator	&		88898	0					
ANR	89791	Identifier	sigint_watcher		88898	1					
ANR	89792	ExpressionStatement	"ev_signal_start ( EV_DEFAULT , & sigterm_watcher )"	1070:4:30599:30644	88898	48	True				
ANR	89793	CallExpression	"ev_signal_start ( EV_DEFAULT , & sigterm_watcher )"		88898	0					
ANR	89794	Callee	ev_signal_start		88898	0					
ANR	89795	Identifier	ev_signal_start		88898	0					
ANR	89796	ArgumentList	EV_DEFAULT		88898	1					
ANR	89797	Argument	EV_DEFAULT		88898	0					
ANR	89798	Identifier	EV_DEFAULT		88898	0					
ANR	89799	Argument	& sigterm_watcher		88898	1					
ANR	89800	UnaryOperationExpression	& sigterm_watcher		88898	0					
ANR	89801	UnaryOperator	&		88898	0					
ANR	89802	Identifier	sigterm_watcher		88898	1					
ANR	89803	IdentifierDeclStatement	struct manager_ctx manager ;	1072:4:30651:30677	88898	49	True				
ANR	89804	IdentifierDecl	manager		88898	0					
ANR	89805	IdentifierDeclType	struct manager_ctx		88898	0					
ANR	89806	Identifier	manager		88898	1					
ANR	89807	ExpressionStatement	"memset ( & manager , 0 , sizeof ( struct manager_ctx ) )"	1073:4:30683:30730	88898	50	True				
ANR	89808	CallExpression	"memset ( & manager , 0 , sizeof ( struct manager_ctx ) )"		88898	0					
ANR	89809	Callee	memset		88898	0					
ANR	89810	Identifier	memset		88898	0					
ANR	89811	ArgumentList	& manager		88898	1					
ANR	89812	Argument	& manager		88898	0					
ANR	89813	UnaryOperationExpression	& manager		88898	0					
ANR	89814	UnaryOperator	&		88898	0					
ANR	89815	Identifier	manager		88898	1					
ANR	89816	Argument	0		88898	1					
ANR	89817	PrimaryExpression	0		88898	0					
ANR	89818	Argument	sizeof ( struct manager_ctx )		88898	2					
ANR	89819	SizeofExpression	sizeof ( struct manager_ctx )		88898	0					
ANR	89820	Sizeof	sizeof		88898	0					
ANR	89821	SizeofOperand	struct manager_ctx		88898	1					
ANR	89822	ExpressionStatement	manager . reuse_port = reuse_port	1075:4:30737:30773	88898	51	True				
ANR	89823	AssignmentExpression	manager . reuse_port = reuse_port		88898	0		=			
ANR	89824	MemberAccess	manager . reuse_port		88898	0					
ANR	89825	Identifier	manager		88898	0					
ANR	89826	Identifier	reuse_port		88898	1					
ANR	89827	Identifier	reuse_port		88898	1					
ANR	89828	ExpressionStatement	manager . fast_open = fast_open	1076:4:30779:30814	88898	52	True				
ANR	89829	AssignmentExpression	manager . fast_open = fast_open		88898	0		=			
ANR	89830	MemberAccess	manager . fast_open		88898	0					
ANR	89831	Identifier	manager		88898	0					
ANR	89832	Identifier	fast_open		88898	1					
ANR	89833	Identifier	fast_open		88898	1					
ANR	89834	ExpressionStatement	manager . verbose = verbose	1077:4:30820:30853	88898	53	True				
ANR	89835	AssignmentExpression	manager . verbose = verbose		88898	0		=			
ANR	89836	MemberAccess	manager . verbose		88898	0					
ANR	89837	Identifier	manager		88898	0					
ANR	89838	Identifier	verbose		88898	1					
ANR	89839	Identifier	verbose		88898	1					
ANR	89840	ExpressionStatement	manager . mode = mode	1078:4:30859:30889	88898	54	True				
ANR	89841	AssignmentExpression	manager . mode = mode		88898	0		=			
ANR	89842	MemberAccess	manager . mode		88898	0					
ANR	89843	Identifier	manager		88898	0					
ANR	89844	Identifier	mode		88898	1					
ANR	89845	Identifier	mode		88898	1					
ANR	89846	ExpressionStatement	manager . password = password	1079:4:30895:30929	88898	55	True				
ANR	89847	AssignmentExpression	manager . password = password		88898	0		=			
ANR	89848	MemberAccess	manager . password		88898	0					
ANR	89849	Identifier	manager		88898	0					
ANR	89850	Identifier	password		88898	1					
ANR	89851	Identifier	password		88898	1					
ANR	89852	ExpressionStatement	manager . timeout = timeout	1080:4:30935:30968	88898	56	True				
ANR	89853	AssignmentExpression	manager . timeout = timeout		88898	0		=			
ANR	89854	MemberAccess	manager . timeout		88898	0					
ANR	89855	Identifier	manager		88898	0					
ANR	89856	Identifier	timeout		88898	1					
ANR	89857	Identifier	timeout		88898	1					
ANR	89858	ExpressionStatement	manager . method = method	1081:4:30974:31006	88898	57	True				
ANR	89859	AssignmentExpression	manager . method = method		88898	0		=			
ANR	89860	MemberAccess	manager . method		88898	0					
ANR	89861	Identifier	manager		88898	0					
ANR	89862	Identifier	method		88898	1					
ANR	89863	Identifier	method		88898	1					
ANR	89864	ExpressionStatement	manager . iface = iface	1082:4:31012:31043	88898	58	True				
ANR	89865	AssignmentExpression	manager . iface = iface		88898	0		=			
ANR	89866	MemberAccess	manager . iface		88898	0					
ANR	89867	Identifier	manager		88898	0					
ANR	89868	Identifier	iface		88898	1					
ANR	89869	Identifier	iface		88898	1					
ANR	89870	ExpressionStatement	manager . acl = acl	1083:4:31049:31078	88898	59	True				
ANR	89871	AssignmentExpression	manager . acl = acl		88898	0		=			
ANR	89872	MemberAccess	manager . acl		88898	0					
ANR	89873	Identifier	manager		88898	0					
ANR	89874	Identifier	acl		88898	1					
ANR	89875	Identifier	acl		88898	1					
ANR	89876	ExpressionStatement	manager . user = user	1084:4:31084:31114	88898	60	True				
ANR	89877	AssignmentExpression	manager . user = user		88898	0		=			
ANR	89878	MemberAccess	manager . user		88898	0					
ANR	89879	Identifier	manager		88898	0					
ANR	89880	Identifier	user		88898	1					
ANR	89881	Identifier	user		88898	1					
ANR	89882	ExpressionStatement	manager . manager_address = manager_address	1085:4:31120:31161	88898	61	True				
ANR	89883	AssignmentExpression	manager . manager_address = manager_address		88898	0		=			
ANR	89884	MemberAccess	manager . manager_address		88898	0					
ANR	89885	Identifier	manager		88898	0					
ANR	89886	Identifier	manager_address		88898	1					
ANR	89887	Identifier	manager_address		88898	1					
ANR	89888	ExpressionStatement	manager . hosts = server_host	1086:4:31167:31204	88898	62	True				
ANR	89889	AssignmentExpression	manager . hosts = server_host		88898	0		=			
ANR	89890	MemberAccess	manager . hosts		88898	0					
ANR	89891	Identifier	manager		88898	0					
ANR	89892	Identifier	hosts		88898	1					
ANR	89893	Identifier	server_host		88898	1					
ANR	89894	ExpressionStatement	manager . host_num = server_num	1087:4:31210:31246	88898	63	True				
ANR	89895	AssignmentExpression	manager . host_num = server_num		88898	0		=			
ANR	89896	MemberAccess	manager . host_num		88898	0					
ANR	89897	Identifier	manager		88898	0					
ANR	89898	Identifier	host_num		88898	1					
ANR	89899	Identifier	server_num		88898	1					
ANR	89900	ExpressionStatement	manager . nameservers = nameservers	1088:4:31252:31289	88898	64	True				
ANR	89901	AssignmentExpression	manager . nameservers = nameservers		88898	0		=			
ANR	89902	MemberAccess	manager . nameservers		88898	0					
ANR	89903	Identifier	manager		88898	0					
ANR	89904	Identifier	nameservers		88898	1					
ANR	89905	Identifier	nameservers		88898	1					
ANR	89906	ExpressionStatement	manager . nameserver_num = nameserver_num	1089:4:31295:31335	88898	65	True				
ANR	89907	AssignmentExpression	manager . nameserver_num = nameserver_num		88898	0		=			
ANR	89908	MemberAccess	manager . nameserver_num		88898	0					
ANR	89909	Identifier	manager		88898	0					
ANR	89910	Identifier	nameserver_num		88898	1					
ANR	89911	Identifier	nameserver_num		88898	1					
ANR	89912	ExpressionStatement	manager . mtu = mtu	1090:4:31341:31370	88898	66	True				
ANR	89913	AssignmentExpression	manager . mtu = mtu		88898	0		=			
ANR	89914	MemberAccess	manager . mtu		88898	0					
ANR	89915	Identifier	manager		88898	0					
ANR	89916	Identifier	mtu		88898	1					
ANR	89917	Identifier	mtu		88898	1					
ANR	89918	ExpressionStatement	manager . plugin = plugin	1091:4:31376:31408	88898	67	True				
ANR	89919	AssignmentExpression	manager . plugin = plugin		88898	0		=			
ANR	89920	MemberAccess	manager . plugin		88898	0					
ANR	89921	Identifier	manager		88898	0					
ANR	89922	Identifier	plugin		88898	1					
ANR	89923	Identifier	plugin		88898	1					
ANR	89924	ExpressionStatement	manager . plugin_opts = plugin_opts	1092:4:31414:31451	88898	68	True				
ANR	89925	AssignmentExpression	manager . plugin_opts = plugin_opts		88898	0		=			
ANR	89926	MemberAccess	manager . plugin_opts		88898	0					
ANR	89927	Identifier	manager		88898	0					
ANR	89928	Identifier	plugin_opts		88898	1					
ANR	89929	Identifier	plugin_opts		88898	1					
ANR	89930	ExpressionStatement	manager . ipv6first = ipv6first	1093:4:31457:31492	88898	69	True				
ANR	89931	AssignmentExpression	manager . ipv6first = ipv6first		88898	0		=			
ANR	89932	MemberAccess	manager . ipv6first		88898	0					
ANR	89933	Identifier	manager		88898	0					
ANR	89934	Identifier	ipv6first		88898	1					
ANR	89935	Identifier	ipv6first		88898	1					
ANR	89936	ExpressionStatement	manager . nofile = nofile	1095:4:31520:31543	88898	70	True				
ANR	89937	AssignmentExpression	manager . nofile = nofile		88898	0		=			
ANR	89938	MemberAccess	manager . nofile		88898	0					
ANR	89939	Identifier	manager		88898	0					
ANR	89940	Identifier	nofile		88898	1					
ANR	89941	Identifier	nofile		88898	1					
ANR	89942	IdentifierDeclStatement	struct ev_loop * loop = EV_DEFAULT ;	1099:4:31583:31616	88898	71	True				
ANR	89943	IdentifierDecl	* loop = EV_DEFAULT		88898	0					
ANR	89944	IdentifierDeclType	struct ev_loop *		88898	0					
ANR	89945	Identifier	loop		88898	1					
ANR	89946	AssignmentExpression	* loop = EV_DEFAULT		88898	2		=			
ANR	89947	Identifier	EV_DEFAULT		88898	0					
ANR	89948	Identifier	EV_DEFAULT		88898	1					
ANR	89949	IfStatement	if ( geteuid ( ) == 0 )		88898	72					
ANR	89950	Condition	geteuid ( ) == 0	1101:8:31627:31640	88898	0	True				
ANR	89951	EqualityExpression	geteuid ( ) == 0		88898	0		==			
ANR	89952	CallExpression	geteuid ( )		88898	0					
ANR	89953	Callee	geteuid		88898	0					
ANR	89954	Identifier	geteuid		88898	0					
ANR	89955	ArgumentList			88898	1					
ANR	89956	PrimaryExpression	0		88898	1					
ANR	89957	CompoundStatement		276:24:7717:7717	88898	1					
ANR	89958	ExpressionStatement	"LOGI ( ""running from root user"" )"	1102:8:31653:31683	88898	0	True				
ANR	89959	CallExpression	"LOGI ( ""running from root user"" )"		88898	0					
ANR	89960	Callee	LOGI		88898	0					
ANR	89961	Identifier	LOGI		88898	0					
ANR	89962	ArgumentList	"""running from root user"""		88898	1					
ANR	89963	Argument	"""running from root user"""		88898	0					
ANR	89964	PrimaryExpression	"""running from root user"""		88898	0					
ANR	89965	IdentifierDeclStatement	struct passwd * pw = getpwuid ( getuid ( ) ) ;	1105:4:31696:31736	88898	73	True				
ANR	89966	IdentifierDecl	* pw = getpwuid ( getuid ( ) )		88898	0					
ANR	89967	IdentifierDeclType	struct passwd *		88898	0					
ANR	89968	Identifier	pw		88898	1					
ANR	89969	AssignmentExpression	* pw = getpwuid ( getuid ( ) )		88898	2		=			
ANR	89970	Identifier	pw		88898	0					
ANR	89971	CallExpression	getpwuid ( getuid ( ) )		88898	1					
ANR	89972	Callee	getpwuid		88898	0					
ANR	89973	Identifier	getpwuid		88898	0					
ANR	89974	ArgumentList	getuid ( )		88898	1					
ANR	89975	Argument	getuid ( )		88898	0					
ANR	89976	CallExpression	getuid ( )		88898	0					
ANR	89977	Callee	getuid		88898	0					
ANR	89978	Identifier	getuid		88898	0					
ANR	89979	ArgumentList			88898	1					
ANR	89980	IdentifierDeclStatement	const char * homedir = pw -> pw_dir ;	1106:4:31742:31774	88898	74	True				
ANR	89981	IdentifierDecl	* homedir = pw -> pw_dir		88898	0					
ANR	89982	IdentifierDeclType	const char *		88898	0					
ANR	89983	Identifier	homedir		88898	1					
ANR	89984	AssignmentExpression	* homedir = pw -> pw_dir		88898	2		=			
ANR	89985	Identifier	homedir		88898	0					
ANR	89986	PtrMemberAccess	pw -> pw_dir		88898	1					
ANR	89987	Identifier	pw		88898	0					
ANR	89988	Identifier	pw_dir		88898	1					
ANR	89989	ExpressionStatement	working_dir_size = strlen ( homedir ) + 15	1107:4:31780:31819	88898	75	True				
ANR	89990	AssignmentExpression	working_dir_size = strlen ( homedir ) + 15		88898	0		=			
ANR	89991	Identifier	working_dir_size		88898	0					
ANR	89992	AdditiveExpression	strlen ( homedir ) + 15		88898	1		+			
ANR	89993	CallExpression	strlen ( homedir )		88898	0					
ANR	89994	Callee	strlen		88898	0					
ANR	89995	Identifier	strlen		88898	0					
ANR	89996	ArgumentList	homedir		88898	1					
ANR	89997	Argument	homedir		88898	0					
ANR	89998	Identifier	homedir		88898	0					
ANR	89999	PrimaryExpression	15		88898	1					
ANR	90000	ExpressionStatement	working_dir = ss_malloc ( working_dir_size )	1108:4:31825:31871	88898	76	True				
ANR	90001	AssignmentExpression	working_dir = ss_malloc ( working_dir_size )		88898	0		=			
ANR	90002	Identifier	working_dir		88898	0					
ANR	90003	CallExpression	ss_malloc ( working_dir_size )		88898	1					
ANR	90004	Callee	ss_malloc		88898	0					
ANR	90005	Identifier	ss_malloc		88898	0					
ANR	90006	ArgumentList	working_dir_size		88898	1					
ANR	90007	Argument	working_dir_size		88898	0					
ANR	90008	Identifier	working_dir_size		88898	0					
ANR	90009	ExpressionStatement	"snprintf ( working_dir , working_dir_size , ""%s/.shadowsocks"" , homedir )"	1109:4:31877:31944	88898	77	True				
ANR	90010	CallExpression	"snprintf ( working_dir , working_dir_size , ""%s/.shadowsocks"" , homedir )"		88898	0					
ANR	90011	Callee	snprintf		88898	0					
ANR	90012	Identifier	snprintf		88898	0					
ANR	90013	ArgumentList	working_dir		88898	1					
ANR	90014	Argument	working_dir		88898	0					
ANR	90015	Identifier	working_dir		88898	0					
ANR	90016	Argument	working_dir_size		88898	1					
ANR	90017	Identifier	working_dir_size		88898	0					
ANR	90018	Argument	"""%s/.shadowsocks"""		88898	2					
ANR	90019	PrimaryExpression	"""%s/.shadowsocks"""		88898	0					
ANR	90020	Argument	homedir		88898	3					
ANR	90021	Identifier	homedir		88898	0					
ANR	90022	IdentifierDeclStatement	"int err = mkdir ( working_dir , S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH ) ;"	1111:4:31951:32018	88898	78	True				
ANR	90023	IdentifierDecl	"err = mkdir ( working_dir , S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH )"		88898	0					
ANR	90024	IdentifierDeclType	int		88898	0					
ANR	90025	Identifier	err		88898	1					
ANR	90026	AssignmentExpression	"err = mkdir ( working_dir , S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH )"		88898	2		=			
ANR	90027	Identifier	err		88898	0					
ANR	90028	CallExpression	"mkdir ( working_dir , S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH )"		88898	1					
ANR	90029	Callee	mkdir		88898	0					
ANR	90030	Identifier	mkdir		88898	0					
ANR	90031	ArgumentList	working_dir		88898	1					
ANR	90032	Argument	working_dir		88898	0					
ANR	90033	Identifier	working_dir		88898	0					
ANR	90034	Argument	S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH		88898	1					
ANR	90035	InclusiveOrExpression	S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH		88898	0		|			
ANR	90036	Identifier	S_IRWXU		88898	0					
ANR	90037	InclusiveOrExpression	S_IRWXG | S_IROTH | S_IXOTH		88898	1		|			
ANR	90038	Identifier	S_IRWXG		88898	0					
ANR	90039	InclusiveOrExpression	S_IROTH | S_IXOTH		88898	1		|			
ANR	90040	Identifier	S_IROTH		88898	0					
ANR	90041	Identifier	S_IXOTH		88898	1					
ANR	90042	IfStatement	if ( err != 0 && errno != EEXIST )		88898	79					
ANR	90043	Condition	err != 0 && errno != EEXIST	1112:8:32028:32054	88898	0	True				
ANR	90044	AndExpression	err != 0 && errno != EEXIST		88898	0		&&			
ANR	90045	EqualityExpression	err != 0		88898	0		!=			
ANR	90046	Identifier	err		88898	0					
ANR	90047	PrimaryExpression	0		88898	1					
ANR	90048	EqualityExpression	errno != EEXIST		88898	1		!=			
ANR	90049	Identifier	errno		88898	0					
ANR	90050	Identifier	EEXIST		88898	1					
ANR	90051	CompoundStatement		287:37:8131:8131	88898	1					
ANR	90052	ExpressionStatement	"ERROR ( ""mkdir"" )"	1113:8:32067:32081	88898	0	True				
ANR	90053	CallExpression	"ERROR ( ""mkdir"" )"		88898	0					
ANR	90054	Callee	ERROR		88898	0					
ANR	90055	Identifier	ERROR		88898	0					
ANR	90056	ArgumentList	"""mkdir"""		88898	1					
ANR	90057	Argument	"""mkdir"""		88898	0					
ANR	90058	PrimaryExpression	"""mkdir"""		88898	0					
ANR	90059	ExpressionStatement	ss_free ( working_dir )	1114:8:32091:32111	88898	1	True				
ANR	90060	CallExpression	ss_free ( working_dir )		88898	0					
ANR	90061	Callee	ss_free		88898	0					
ANR	90062	Identifier	ss_free		88898	0					
ANR	90063	ArgumentList	working_dir		88898	1					
ANR	90064	Argument	working_dir		88898	0					
ANR	90065	Identifier	working_dir		88898	0					
ANR	90066	ExpressionStatement	"FATAL ( ""unable to create working directory"" )"	1115:8:32121:32164	88898	2	True				
ANR	90067	CallExpression	"FATAL ( ""unable to create working directory"" )"		88898	0					
ANR	90068	Callee	FATAL		88898	0					
ANR	90069	Identifier	FATAL		88898	0					
ANR	90070	ArgumentList	"""unable to create working directory"""		88898	1					
ANR	90071	Argument	"""unable to create working directory"""		88898	0					
ANR	90072	PrimaryExpression	"""unable to create working directory"""		88898	0					
ANR	90073	IdentifierDeclStatement	DIR * dp ;	1119:4:32215:32222	88898	80	True				
ANR	90074	IdentifierDecl	* dp		88898	0					
ANR	90075	IdentifierDeclType	DIR *		88898	0					
ANR	90076	Identifier	dp		88898	1					
ANR	90077	IdentifierDeclStatement	struct dirent * ep ;	1120:4:32228:32245	88898	81	True				
ANR	90078	IdentifierDecl	* ep		88898	0					
ANR	90079	IdentifierDeclType	struct dirent *		88898	0					
ANR	90080	Identifier	ep		88898	1					
ANR	90081	ExpressionStatement	dp = opendir ( working_dir )	1121:4:32251:32276	88898	82	True				
ANR	90082	AssignmentExpression	dp = opendir ( working_dir )		88898	0		=			
ANR	90083	Identifier	dp		88898	0					
ANR	90084	CallExpression	opendir ( working_dir )		88898	1					
ANR	90085	Callee	opendir		88898	0					
ANR	90086	Identifier	opendir		88898	0					
ANR	90087	ArgumentList	working_dir		88898	1					
ANR	90088	Argument	working_dir		88898	0					
ANR	90089	Identifier	working_dir		88898	0					
ANR	90090	IfStatement	if ( dp != NULL )		88898	83					
ANR	90091	Condition	dp != NULL	1122:8:32286:32295	88898	0	True				
ANR	90092	EqualityExpression	dp != NULL		88898	0		!=			
ANR	90093	Identifier	dp		88898	0					
ANR	90094	Identifier	NULL		88898	1					
ANR	90095	CompoundStatement		297:20:8372:8372	88898	1					
ANR	90096	WhileStatement	while ( ( ep = readdir ( dp ) ) != NULL )		88898	0					
ANR	90097	Condition	( ep = readdir ( dp ) ) != NULL	1123:15:32315:32340	88898	0	True				
ANR	90098	EqualityExpression	( ep = readdir ( dp ) ) != NULL		88898	0		!=			
ANR	90099	AssignmentExpression	ep = readdir ( dp )		88898	0		=			
ANR	90100	Identifier	ep		88898	0					
ANR	90101	CallExpression	readdir ( dp )		88898	1					
ANR	90102	Callee	readdir		88898	0					
ANR	90103	Identifier	readdir		88898	0					
ANR	90104	ArgumentList	dp		88898	1					
ANR	90105	Argument	dp		88898	0					
ANR	90106	Identifier	dp		88898	0					
ANR	90107	Identifier	NULL		88898	1					
ANR	90108	CompoundStatement		299:12:8431:8462	88898	1					
ANR	90109	IdentifierDeclStatement	size_t len = strlen ( ep -> d_name ) ;	1124:12:32357:32388	88898	0	True				
ANR	90110	IdentifierDecl	len = strlen ( ep -> d_name )		88898	0					
ANR	90111	IdentifierDeclType	size_t		88898	0					
ANR	90112	Identifier	len		88898	1					
ANR	90113	AssignmentExpression	len = strlen ( ep -> d_name )		88898	2		=			
ANR	90114	Identifier	len		88898	0					
ANR	90115	CallExpression	strlen ( ep -> d_name )		88898	1					
ANR	90116	Callee	strlen		88898	0					
ANR	90117	Identifier	strlen		88898	0					
ANR	90118	ArgumentList	ep -> d_name		88898	1					
ANR	90119	Argument	ep -> d_name		88898	0					
ANR	90120	PtrMemberAccess	ep -> d_name		88898	0					
ANR	90121	Identifier	ep		88898	0					
ANR	90122	Identifier	d_name		88898	1					
ANR	90123	IfStatement	"if ( strcmp ( ep -> d_name + len - 3 , ""pid"" ) == 0 )"		88898	1					
ANR	90124	Condition	"strcmp ( ep -> d_name + len - 3 , ""pid"" ) == 0"	1125:16:32406:32445	88898	0	True				
ANR	90125	EqualityExpression	"strcmp ( ep -> d_name + len - 3 , ""pid"" ) == 0"		88898	0		==			
ANR	90126	CallExpression	"strcmp ( ep -> d_name + len - 3 , ""pid"" )"		88898	0					
ANR	90127	Callee	strcmp		88898	0					
ANR	90128	Identifier	strcmp		88898	0					
ANR	90129	ArgumentList	ep -> d_name + len - 3		88898	1					
ANR	90130	Argument	ep -> d_name + len - 3		88898	0					
ANR	90131	AdditiveExpression	ep -> d_name + len - 3		88898	0		+			
ANR	90132	PtrMemberAccess	ep -> d_name		88898	0					
ANR	90133	Identifier	ep		88898	0					
ANR	90134	Identifier	d_name		88898	1					
ANR	90135	AdditiveExpression	len - 3		88898	1		-			
ANR	90136	Identifier	len		88898	0					
ANR	90137	PrimaryExpression	3		88898	1					
ANR	90138	Argument	"""pid"""		88898	1					
ANR	90139	PrimaryExpression	"""pid"""		88898	0					
ANR	90140	PrimaryExpression	0		88898	1					
ANR	90141	CompoundStatement		300:58:8522:8522	88898	1					
ANR	90142	ExpressionStatement	"kill_server ( working_dir , ep -> d_name )"	1126:16:32466:32502	88898	0	True				
ANR	90143	CallExpression	"kill_server ( working_dir , ep -> d_name )"		88898	0					
ANR	90144	Callee	kill_server		88898	0					
ANR	90145	Identifier	kill_server		88898	0					
ANR	90146	ArgumentList	working_dir		88898	1					
ANR	90147	Argument	working_dir		88898	0					
ANR	90148	Identifier	working_dir		88898	0					
ANR	90149	Argument	ep -> d_name		88898	1					
ANR	90150	PtrMemberAccess	ep -> d_name		88898	0					
ANR	90151	Identifier	ep		88898	0					
ANR	90152	Identifier	d_name		88898	1					
ANR	90153	IfStatement	if ( verbose )		88898	1					
ANR	90154	Condition	verbose	1127:20:32524:32530	88898	0	True				
ANR	90155	Identifier	verbose		88898	0					
ANR	90156	ExpressionStatement	"LOGI ( ""kill %s"" , ep -> d_name )"	1128:20:32553:32580	88898	1	True				
ANR	90157	CallExpression	"LOGI ( ""kill %s"" , ep -> d_name )"		88898	0					
ANR	90158	Callee	LOGI		88898	0					
ANR	90159	Identifier	LOGI		88898	0					
ANR	90160	ArgumentList	"""kill %s"""		88898	1					
ANR	90161	Argument	"""kill %s"""		88898	0					
ANR	90162	PrimaryExpression	"""kill %s"""		88898	0					
ANR	90163	Argument	ep -> d_name		88898	1					
ANR	90164	PtrMemberAccess	ep -> d_name		88898	0					
ANR	90165	Identifier	ep		88898	0					
ANR	90166	Identifier	d_name		88898	1					
ANR	90167	ExpressionStatement	closedir ( dp )	1131:8:32614:32626	88898	1	True				
ANR	90168	CallExpression	closedir ( dp )		88898	0					
ANR	90169	Callee	closedir		88898	0					
ANR	90170	Identifier	closedir		88898	0					
ANR	90171	ArgumentList	dp		88898	1					
ANR	90172	Argument	dp		88898	0					
ANR	90173	Identifier	dp		88898	0					
ANR	90174	ElseStatement	else		88898	0					
ANR	90175	CompoundStatement		307:11:8713:8713	88898	0					
ANR	90176	ExpressionStatement	ss_free ( working_dir )	1133:8:32649:32669	88898	0	True				
ANR	90177	CallExpression	ss_free ( working_dir )		88898	0					
ANR	90178	Callee	ss_free		88898	0					
ANR	90179	Identifier	ss_free		88898	0					
ANR	90180	ArgumentList	working_dir		88898	1					
ANR	90181	Argument	working_dir		88898	0					
ANR	90182	Identifier	working_dir		88898	0					
ANR	90183	ExpressionStatement	"FATAL ( ""Couldn't open the directory"" )"	1134:8:32679:32715	88898	1	True				
ANR	90184	CallExpression	"FATAL ( ""Couldn't open the directory"" )"		88898	0					
ANR	90185	Callee	FATAL		88898	0					
ANR	90186	Identifier	FATAL		88898	0					
ANR	90187	ArgumentList	"""Couldn't open the directory"""		88898	1					
ANR	90188	Argument	"""Couldn't open the directory"""		88898	0					
ANR	90189	PrimaryExpression	"""Couldn't open the directory"""		88898	0					
ANR	90190	ExpressionStatement	"server_table = cork_string_hash_table_new ( MAX_PORT_NUM , 0 )"	1137:4:32728:32786	88898	84	True				
ANR	90191	AssignmentExpression	"server_table = cork_string_hash_table_new ( MAX_PORT_NUM , 0 )"		88898	0		=			
ANR	90192	Identifier	server_table		88898	0					
ANR	90193	CallExpression	"cork_string_hash_table_new ( MAX_PORT_NUM , 0 )"		88898	1					
ANR	90194	Callee	cork_string_hash_table_new		88898	0					
ANR	90195	Identifier	cork_string_hash_table_new		88898	0					
ANR	90196	ArgumentList	MAX_PORT_NUM		88898	1					
ANR	90197	Argument	MAX_PORT_NUM		88898	0					
ANR	90198	Identifier	MAX_PORT_NUM		88898	0					
ANR	90199	Argument	0		88898	1					
ANR	90200	PrimaryExpression	0		88898	0					
ANR	90201	IfStatement	if ( conf != NULL )		88898	85					
ANR	90202	Condition	conf != NULL	1139:8:32797:32808	88898	0	True				
ANR	90203	EqualityExpression	conf != NULL		88898	0		!=			
ANR	90204	Identifier	conf		88898	0					
ANR	90205	Identifier	NULL		88898	1					
ANR	90206	CompoundStatement		314:22:8885:8885	88898	1					
ANR	90207	ForStatement	for ( i = 0 ; i < conf -> port_password_num ; i ++ )		88898	0					
ANR	90208	ForInit	i = 0 ;	1140:13:32826:32831	88898	0	True				
ANR	90209	AssignmentExpression	i = 0		88898	0		=			
ANR	90210	Identifier	i		88898	0					
ANR	90211	PrimaryExpression	0		88898	1					
ANR	90212	Condition	i < conf -> port_password_num	1140:20:32833:32859	88898	1	True				
ANR	90213	RelationalExpression	i < conf -> port_password_num		88898	0		<			
ANR	90214	Identifier	i		88898	0					
ANR	90215	PtrMemberAccess	conf -> port_password_num		88898	1					
ANR	90216	Identifier	conf		88898	0					
ANR	90217	Identifier	port_password_num		88898	1					
ANR	90218	PostIncDecOperationExpression	i ++	1140:49:32862:32864	88898	2	True				
ANR	90219	Identifier	i		88898	0					
ANR	90220	IncDec	++		88898	1					
ANR	90221	CompoundStatement		316:12:8955:9011	88898	3					
ANR	90222	IdentifierDeclStatement	struct server * server = ss_malloc ( sizeof ( struct server ) ) ;	1141:12:32881:32937	88898	0	True				
ANR	90223	IdentifierDecl	* server = ss_malloc ( sizeof ( struct server ) )		88898	0					
ANR	90224	IdentifierDeclType	struct server *		88898	0					
ANR	90225	Identifier	server		88898	1					
ANR	90226	AssignmentExpression	* server = ss_malloc ( sizeof ( struct server ) )		88898	2		=			
ANR	90227	Identifier	server		88898	0					
ANR	90228	CallExpression	ss_malloc ( sizeof ( struct server ) )		88898	1					
ANR	90229	Callee	ss_malloc		88898	0					
ANR	90230	Identifier	ss_malloc		88898	0					
ANR	90231	ArgumentList	sizeof ( struct server )		88898	1					
ANR	90232	Argument	sizeof ( struct server )		88898	0					
ANR	90233	SizeofExpression	sizeof ( struct server )		88898	0					
ANR	90234	Sizeof	sizeof		88898	0					
ANR	90235	SizeofOperand	struct server		88898	1					
ANR	90236	ExpressionStatement	"memset ( server , 0 , sizeof ( struct server ) )"	1142:12:32951:32991	88898	1	True				
ANR	90237	CallExpression	"memset ( server , 0 , sizeof ( struct server ) )"		88898	0					
ANR	90238	Callee	memset		88898	0					
ANR	90239	Identifier	memset		88898	0					
ANR	90240	ArgumentList	server		88898	1					
ANR	90241	Argument	server		88898	0					
ANR	90242	Identifier	server		88898	0					
ANR	90243	Argument	0		88898	1					
ANR	90244	PrimaryExpression	0		88898	0					
ANR	90245	Argument	sizeof ( struct server )		88898	2					
ANR	90246	SizeofExpression	sizeof ( struct server )		88898	0					
ANR	90247	Sizeof	sizeof		88898	0					
ANR	90248	SizeofOperand	struct server		88898	1					
ANR	90249	ExpressionStatement	"strncpy ( server -> port , conf -> port_password [ i ] . port , 8 )"	1143:12:33005:33058	88898	2	True				
ANR	90250	CallExpression	"strncpy ( server -> port , conf -> port_password [ i ] . port , 8 )"		88898	0					
ANR	90251	Callee	strncpy		88898	0					
ANR	90252	Identifier	strncpy		88898	0					
ANR	90253	ArgumentList	server -> port		88898	1					
ANR	90254	Argument	server -> port		88898	0					
ANR	90255	PtrMemberAccess	server -> port		88898	0					
ANR	90256	Identifier	server		88898	0					
ANR	90257	Identifier	port		88898	1					
ANR	90258	Argument	conf -> port_password [ i ] . port		88898	1					
ANR	90259	MemberAccess	conf -> port_password [ i ] . port		88898	0					
ANR	90260	ArrayIndexing	conf -> port_password [ i ]		88898	0					
ANR	90261	PtrMemberAccess	conf -> port_password		88898	0					
ANR	90262	Identifier	conf		88898	0					
ANR	90263	Identifier	port_password		88898	1					
ANR	90264	Identifier	i		88898	1					
ANR	90265	Identifier	port		88898	1					
ANR	90266	Argument	8		88898	2					
ANR	90267	PrimaryExpression	8		88898	0					
ANR	90268	ExpressionStatement	"strncpy ( server -> password , conf -> port_password [ i ] . password , 128 )"	1144:12:33072:33135	88898	3	True				
ANR	90269	CallExpression	"strncpy ( server -> password , conf -> port_password [ i ] . password , 128 )"		88898	0					
ANR	90270	Callee	strncpy		88898	0					
ANR	90271	Identifier	strncpy		88898	0					
ANR	90272	ArgumentList	server -> password		88898	1					
ANR	90273	Argument	server -> password		88898	0					
ANR	90274	PtrMemberAccess	server -> password		88898	0					
ANR	90275	Identifier	server		88898	0					
ANR	90276	Identifier	password		88898	1					
ANR	90277	Argument	conf -> port_password [ i ] . password		88898	1					
ANR	90278	MemberAccess	conf -> port_password [ i ] . password		88898	0					
ANR	90279	ArrayIndexing	conf -> port_password [ i ]		88898	0					
ANR	90280	PtrMemberAccess	conf -> port_password		88898	0					
ANR	90281	Identifier	conf		88898	0					
ANR	90282	Identifier	port_password		88898	1					
ANR	90283	Identifier	i		88898	1					
ANR	90284	Identifier	password		88898	1					
ANR	90285	Argument	128		88898	2					
ANR	90286	PrimaryExpression	128		88898	0					
ANR	90287	ExpressionStatement	"add_server ( & manager , server )"	1145:12:33149:33177	88898	4	True				
ANR	90288	CallExpression	"add_server ( & manager , server )"		88898	0					
ANR	90289	Callee	add_server		88898	0					
ANR	90290	Identifier	add_server		88898	0					
ANR	90291	ArgumentList	& manager		88898	1					
ANR	90292	Argument	& manager		88898	0					
ANR	90293	UnaryOperationExpression	& manager		88898	0					
ANR	90294	UnaryOperator	&		88898	0					
ANR	90295	Identifier	manager		88898	1					
ANR	90296	Argument	server		88898	1					
ANR	90297	Identifier	server		88898	0					
ANR	90298	IdentifierDeclStatement	int sfd ;	1149:4:33200:33207	88898	86	True				
ANR	90299	IdentifierDecl	sfd		88898	0					
ANR	90300	IdentifierDeclType	int		88898	0					
ANR	90301	Identifier	sfd		88898	1					
ANR	90302	Statement	ss_addr_t	1150:4:33213:33221	88898	87	True				
ANR	90303	Statement	ip_addr	1150:14:33223:33229	88898	88	True				
ANR	90304	Statement	=	1150:22:33231:33231	88898	89	True				
ANR	90305	CompoundStatement		325:24:9307:9307	88898	90					
ANR	90306	Statement	.	1150:26:33235:33235	88898	0	True				
ANR	90307	Statement	host	1150:27:33236:33239	88898	1	True				
ANR	90308	Statement	=	1150:32:33241:33241	88898	2	True				
ANR	90309	Statement	NULL	1150:34:33243:33246	88898	3	True				
ANR	90310	Statement	","	1150:38:33247:33247	88898	4	True				
ANR	90311	Statement	.	1150:40:33249:33249	88898	5	True				
ANR	90312	Statement	port	1150:41:33250:33253	88898	6	True				
ANR	90313	Statement	=	1150:46:33255:33255	88898	7	True				
ANR	90314	Statement	NULL	1150:48:33257:33260	88898	8	True				
ANR	90315	ExpressionStatement		1150:54:33263:33263	88898	91	True				
ANR	90316	ExpressionStatement	"parse_addr ( manager_address , & ip_addr )"	1151:4:33269:33306	88898	92	True				
ANR	90317	CallExpression	"parse_addr ( manager_address , & ip_addr )"		88898	0					
ANR	90318	Callee	parse_addr		88898	0					
ANR	90319	Identifier	parse_addr		88898	0					
ANR	90320	ArgumentList	manager_address		88898	1					
ANR	90321	Argument	manager_address		88898	0					
ANR	90322	Identifier	manager_address		88898	0					
ANR	90323	Argument	& ip_addr		88898	1					
ANR	90324	UnaryOperationExpression	& ip_addr		88898	0					
ANR	90325	UnaryOperator	&		88898	0					
ANR	90326	Identifier	ip_addr		88898	1					
ANR	90327	IfStatement	if ( ip_addr . host == NULL || ip_addr . port == NULL )		88898	93					
ANR	90328	Condition	ip_addr . host == NULL || ip_addr . port == NULL	1153:8:33317:33360	88898	0	True				
ANR	90329	OrExpression	ip_addr . host == NULL || ip_addr . port == NULL		88898	0		||			
ANR	90330	EqualityExpression	ip_addr . host == NULL		88898	0		==			
ANR	90331	MemberAccess	ip_addr . host		88898	0					
ANR	90332	Identifier	ip_addr		88898	0					
ANR	90333	Identifier	host		88898	1					
ANR	90334	Identifier	NULL		88898	1					
ANR	90335	EqualityExpression	ip_addr . port == NULL		88898	1		==			
ANR	90336	MemberAccess	ip_addr . port		88898	0					
ANR	90337	Identifier	ip_addr		88898	0					
ANR	90338	Identifier	port		88898	1					
ANR	90339	Identifier	NULL		88898	1					
ANR	90340	CompoundStatement		329:8:9447:9472	88898	1					
ANR	90341	IdentifierDeclStatement	struct sockaddr_un svaddr ;	1154:8:33373:33398	88898	0	True				
ANR	90342	IdentifierDecl	svaddr		88898	0					
ANR	90343	IdentifierDeclType	struct sockaddr_un		88898	0					
ANR	90344	Identifier	svaddr		88898	1					
ANR	90345	ExpressionStatement	"sfd = socket ( AF_UNIX , SOCK_DGRAM , 0 )"	1155:8:33408:33444	88898	1	True				
ANR	90346	AssignmentExpression	"sfd = socket ( AF_UNIX , SOCK_DGRAM , 0 )"		88898	0		=			
ANR	90347	Identifier	sfd		88898	0					
ANR	90348	CallExpression	"socket ( AF_UNIX , SOCK_DGRAM , 0 )"		88898	1					
ANR	90349	Callee	socket		88898	0					
ANR	90350	Identifier	socket		88898	0					
ANR	90351	ArgumentList	AF_UNIX		88898	1					
ANR	90352	Argument	AF_UNIX		88898	0					
ANR	90353	Identifier	AF_UNIX		88898	0					
ANR	90354	Argument	SOCK_DGRAM		88898	1					
ANR	90355	Identifier	SOCK_DGRAM		88898	0					
ANR	90356	Argument	0		88898	2					
ANR	90357	PrimaryExpression	0		88898	0					
ANR	90358	IfStatement	if ( sfd == - 1 )		88898	2					
ANR	90359	Condition	sfd == - 1	1156:12:33492:33500	88898	0	True				
ANR	90360	EqualityExpression	sfd == - 1		88898	0		==			
ANR	90361	Identifier	sfd		88898	0					
ANR	90362	UnaryOperationExpression	- 1		88898	1					
ANR	90363	UnaryOperator	-		88898	0					
ANR	90364	PrimaryExpression	1		88898	1					
ANR	90365	CompoundStatement		331:23:9577:9577	88898	1					
ANR	90366	ExpressionStatement	ss_free ( working_dir )	1157:12:33517:33537	88898	0	True				
ANR	90367	CallExpression	ss_free ( working_dir )		88898	0					
ANR	90368	Callee	ss_free		88898	0					
ANR	90369	Identifier	ss_free		88898	0					
ANR	90370	ArgumentList	working_dir		88898	1					
ANR	90371	Argument	working_dir		88898	0					
ANR	90372	Identifier	working_dir		88898	0					
ANR	90373	ExpressionStatement	"FATAL ( ""socket"" )"	1158:12:33551:33566	88898	1	True				
ANR	90374	CallExpression	"FATAL ( ""socket"" )"		88898	0					
ANR	90375	Callee	FATAL		88898	0					
ANR	90376	Identifier	FATAL		88898	0					
ANR	90377	ArgumentList	"""socket"""		88898	1					
ANR	90378	Argument	"""socket"""		88898	0					
ANR	90379	PrimaryExpression	"""socket"""		88898	0					
ANR	90380	ExpressionStatement	setnonblocking ( sfd )	1161:8:33587:33606	88898	3	True				
ANR	90381	CallExpression	setnonblocking ( sfd )		88898	0					
ANR	90382	Callee	setnonblocking		88898	0					
ANR	90383	Identifier	setnonblocking		88898	0					
ANR	90384	ArgumentList	sfd		88898	1					
ANR	90385	Argument	sfd		88898	0					
ANR	90386	Identifier	sfd		88898	0					
ANR	90387	IfStatement	if ( remove ( manager_address ) == - 1 && errno != ENOENT )		88898	4					
ANR	90388	Condition	remove ( manager_address ) == - 1 && errno != ENOENT	1163:12:33621:33668	88898	0	True				
ANR	90389	AndExpression	remove ( manager_address ) == - 1 && errno != ENOENT		88898	0		&&			
ANR	90390	EqualityExpression	remove ( manager_address ) == - 1		88898	0		==			
ANR	90391	CallExpression	remove ( manager_address )		88898	0					
ANR	90392	Callee	remove		88898	0					
ANR	90393	Identifier	remove		88898	0					
ANR	90394	ArgumentList	manager_address		88898	1					
ANR	90395	Argument	manager_address		88898	0					
ANR	90396	Identifier	manager_address		88898	0					
ANR	90397	UnaryOperationExpression	- 1		88898	1					
ANR	90398	UnaryOperator	-		88898	0					
ANR	90399	PrimaryExpression	1		88898	1					
ANR	90400	EqualityExpression	errno != ENOENT		88898	1		!=			
ANR	90401	Identifier	errno		88898	0					
ANR	90402	Identifier	ENOENT		88898	1					
ANR	90403	CompoundStatement		338:62:9745:9745	88898	1					
ANR	90404	ExpressionStatement	"ERROR ( ""bind"" )"	1164:12:33685:33698	88898	0	True				
ANR	90405	CallExpression	"ERROR ( ""bind"" )"		88898	0					
ANR	90406	Callee	ERROR		88898	0					
ANR	90407	Identifier	ERROR		88898	0					
ANR	90408	ArgumentList	"""bind"""		88898	1					
ANR	90409	Argument	"""bind"""		88898	0					
ANR	90410	PrimaryExpression	"""bind"""		88898	0					
ANR	90411	ExpressionStatement	ss_free ( working_dir )	1165:12:33712:33732	88898	1	True				
ANR	90412	CallExpression	ss_free ( working_dir )		88898	0					
ANR	90413	Callee	ss_free		88898	0					
ANR	90414	Identifier	ss_free		88898	0					
ANR	90415	ArgumentList	working_dir		88898	1					
ANR	90416	Argument	working_dir		88898	0					
ANR	90417	Identifier	working_dir		88898	0					
ANR	90418	ExpressionStatement	exit ( EXIT_FAILURE )	1166:12:33746:33764	88898	2	True				
ANR	90419	CallExpression	exit ( EXIT_FAILURE )		88898	0					
ANR	90420	Callee	exit		88898	0					
ANR	90421	Identifier	exit		88898	0					
ANR	90422	ArgumentList	EXIT_FAILURE		88898	1					
ANR	90423	Argument	EXIT_FAILURE		88898	0					
ANR	90424	Identifier	EXIT_FAILURE		88898	0					
ANR	90425	ExpressionStatement	"memset ( & svaddr , 0 , sizeof ( struct sockaddr_un ) )"	1169:8:33785:33831	88898	5	True				
ANR	90426	CallExpression	"memset ( & svaddr , 0 , sizeof ( struct sockaddr_un ) )"		88898	0					
ANR	90427	Callee	memset		88898	0					
ANR	90428	Identifier	memset		88898	0					
ANR	90429	ArgumentList	& svaddr		88898	1					
ANR	90430	Argument	& svaddr		88898	0					
ANR	90431	UnaryOperationExpression	& svaddr		88898	0					
ANR	90432	UnaryOperator	&		88898	0					
ANR	90433	Identifier	svaddr		88898	1					
ANR	90434	Argument	0		88898	1					
ANR	90435	PrimaryExpression	0		88898	0					
ANR	90436	Argument	sizeof ( struct sockaddr_un )		88898	2					
ANR	90437	SizeofExpression	sizeof ( struct sockaddr_un )		88898	0					
ANR	90438	Sizeof	sizeof		88898	0					
ANR	90439	SizeofOperand	struct sockaddr_un		88898	1					
ANR	90440	ExpressionStatement	svaddr . sun_family = AF_UNIX	1170:8:33841:33868	88898	6	True				
ANR	90441	AssignmentExpression	svaddr . sun_family = AF_UNIX		88898	0		=			
ANR	90442	MemberAccess	svaddr . sun_family		88898	0					
ANR	90443	Identifier	svaddr		88898	0					
ANR	90444	Identifier	sun_family		88898	1					
ANR	90445	Identifier	AF_UNIX		88898	1					
ANR	90446	ExpressionStatement	"strncpy ( svaddr . sun_path , manager_address , sizeof ( svaddr . sun_path ) - 1 )"	1171:8:33878:33948	88898	7	True				
ANR	90447	CallExpression	"strncpy ( svaddr . sun_path , manager_address , sizeof ( svaddr . sun_path ) - 1 )"		88898	0					
ANR	90448	Callee	strncpy		88898	0					
ANR	90449	Identifier	strncpy		88898	0					
ANR	90450	ArgumentList	svaddr . sun_path		88898	1					
ANR	90451	Argument	svaddr . sun_path		88898	0					
ANR	90452	MemberAccess	svaddr . sun_path		88898	0					
ANR	90453	Identifier	svaddr		88898	0					
ANR	90454	Identifier	sun_path		88898	1					
ANR	90455	Argument	manager_address		88898	1					
ANR	90456	Identifier	manager_address		88898	0					
ANR	90457	Argument	sizeof ( svaddr . sun_path ) - 1		88898	2					
ANR	90458	AdditiveExpression	sizeof ( svaddr . sun_path ) - 1		88898	0		-			
ANR	90459	SizeofExpression	sizeof ( svaddr . sun_path )		88898	0					
ANR	90460	Sizeof	sizeof		88898	0					
ANR	90461	MemberAccess	svaddr . sun_path		88898	1					
ANR	90462	Identifier	svaddr		88898	0					
ANR	90463	Identifier	sun_path		88898	1					
ANR	90464	PrimaryExpression	1		88898	1					
ANR	90465	IfStatement	"if ( bind ( sfd , ( struct sockaddr * ) & svaddr , sizeof ( struct sockaddr_un ) ) == - 1 )"		88898	8					
ANR	90466	Condition	"bind ( sfd , ( struct sockaddr * ) & svaddr , sizeof ( struct sockaddr_un ) ) == - 1"	1173:12:33963:34033	88898	0	True				
ANR	90467	EqualityExpression	"bind ( sfd , ( struct sockaddr * ) & svaddr , sizeof ( struct sockaddr_un ) ) == - 1"		88898	0		==			
ANR	90468	CallExpression	"bind ( sfd , ( struct sockaddr * ) & svaddr , sizeof ( struct sockaddr_un ) )"		88898	0					
ANR	90469	Callee	bind		88898	0					
ANR	90470	Identifier	bind		88898	0					
ANR	90471	ArgumentList	sfd		88898	1					
ANR	90472	Argument	sfd		88898	0					
ANR	90473	Identifier	sfd		88898	0					
ANR	90474	Argument	( struct sockaddr * ) & svaddr		88898	1					
ANR	90475	CastExpression	( struct sockaddr * ) & svaddr		88898	0					
ANR	90476	CastTarget	struct sockaddr *		88898	0					
ANR	90477	UnaryOperationExpression	& svaddr		88898	1					
ANR	90478	UnaryOperator	&		88898	0					
ANR	90479	Identifier	svaddr		88898	1					
ANR	90480	Argument	sizeof ( struct sockaddr_un )		88898	2					
ANR	90481	SizeofExpression	sizeof ( struct sockaddr_un )		88898	0					
ANR	90482	Sizeof	sizeof		88898	0					
ANR	90483	SizeofOperand	struct sockaddr_un		88898	1					
ANR	90484	UnaryOperationExpression	- 1		88898	1					
ANR	90485	UnaryOperator	-		88898	0					
ANR	90486	PrimaryExpression	1		88898	1					
ANR	90487	CompoundStatement		348:85:10110:10110	88898	1					
ANR	90488	ExpressionStatement	"ERROR ( ""bind"" )"	1174:12:34050:34063	88898	0	True				
ANR	90489	CallExpression	"ERROR ( ""bind"" )"		88898	0					
ANR	90490	Callee	ERROR		88898	0					
ANR	90491	Identifier	ERROR		88898	0					
ANR	90492	ArgumentList	"""bind"""		88898	1					
ANR	90493	Argument	"""bind"""		88898	0					
ANR	90494	PrimaryExpression	"""bind"""		88898	0					
ANR	90495	ExpressionStatement	ss_free ( working_dir )	1175:12:34077:34097	88898	1	True				
ANR	90496	CallExpression	ss_free ( working_dir )		88898	0					
ANR	90497	Callee	ss_free		88898	0					
ANR	90498	Identifier	ss_free		88898	0					
ANR	90499	ArgumentList	working_dir		88898	1					
ANR	90500	Argument	working_dir		88898	0					
ANR	90501	Identifier	working_dir		88898	0					
ANR	90502	ExpressionStatement	exit ( EXIT_FAILURE )	1176:12:34111:34129	88898	2	True				
ANR	90503	CallExpression	exit ( EXIT_FAILURE )		88898	0					
ANR	90504	Callee	exit		88898	0					
ANR	90505	Identifier	exit		88898	0					
ANR	90506	ArgumentList	EXIT_FAILURE		88898	1					
ANR	90507	Argument	EXIT_FAILURE		88898	0					
ANR	90508	Identifier	EXIT_FAILURE		88898	0					
ANR	90509	ElseStatement	else		88898	0					
ANR	90510	CompoundStatement		353:11:10226:10226	88898	0					
ANR	90511	ExpressionStatement	"sfd = create_server_socket ( ip_addr . host , ip_addr . port )"	1179:8:34162:34216	88898	0	True				
ANR	90512	AssignmentExpression	"sfd = create_server_socket ( ip_addr . host , ip_addr . port )"		88898	0		=			
ANR	90513	Identifier	sfd		88898	0					
ANR	90514	CallExpression	"create_server_socket ( ip_addr . host , ip_addr . port )"		88898	1					
ANR	90515	Callee	create_server_socket		88898	0					
ANR	90516	Identifier	create_server_socket		88898	0					
ANR	90517	ArgumentList	ip_addr . host		88898	1					
ANR	90518	Argument	ip_addr . host		88898	0					
ANR	90519	MemberAccess	ip_addr . host		88898	0					
ANR	90520	Identifier	ip_addr		88898	0					
ANR	90521	Identifier	host		88898	1					
ANR	90522	Argument	ip_addr . port		88898	1					
ANR	90523	MemberAccess	ip_addr . port		88898	0					
ANR	90524	Identifier	ip_addr		88898	0					
ANR	90525	Identifier	port		88898	1					
ANR	90526	IfStatement	if ( sfd == - 1 )		88898	1					
ANR	90527	Condition	sfd == - 1	1180:12:34230:34238	88898	0	True				
ANR	90528	EqualityExpression	sfd == - 1		88898	0		==			
ANR	90529	Identifier	sfd		88898	0					
ANR	90530	UnaryOperationExpression	- 1		88898	1					
ANR	90531	UnaryOperator	-		88898	0					
ANR	90532	PrimaryExpression	1		88898	1					
ANR	90533	CompoundStatement		355:23:10315:10315	88898	1					
ANR	90534	ExpressionStatement	ss_free ( working_dir )	1181:12:34255:34275	88898	0	True				
ANR	90535	CallExpression	ss_free ( working_dir )		88898	0					
ANR	90536	Callee	ss_free		88898	0					
ANR	90537	Identifier	ss_free		88898	0					
ANR	90538	ArgumentList	working_dir		88898	1					
ANR	90539	Argument	working_dir		88898	0					
ANR	90540	Identifier	working_dir		88898	0					
ANR	90541	ExpressionStatement	"FATAL ( ""socket"" )"	1182:12:34289:34304	88898	1	True				
ANR	90542	CallExpression	"FATAL ( ""socket"" )"		88898	0					
ANR	90543	Callee	FATAL		88898	0					
ANR	90544	Identifier	FATAL		88898	0					
ANR	90545	ArgumentList	"""socket"""		88898	1					
ANR	90546	Argument	"""socket"""		88898	0					
ANR	90547	PrimaryExpression	"""socket"""		88898	0					
ANR	90548	ExpressionStatement	manager . fd = sfd	1186:4:34327:34343	88898	94	True				
ANR	90549	AssignmentExpression	manager . fd = sfd		88898	0		=			
ANR	90550	MemberAccess	manager . fd		88898	0					
ANR	90551	Identifier	manager		88898	0					
ANR	90552	Identifier	fd		88898	1					
ANR	90553	Identifier	sfd		88898	1					
ANR	90554	ExpressionStatement	"ev_io_init ( & manager . io , manager_recv_cb , manager . fd , EV_READ )"	1187:4:34349:34410	88898	95	True				
ANR	90555	CallExpression	"ev_io_init ( & manager . io , manager_recv_cb , manager . fd , EV_READ )"		88898	0					
ANR	90556	Callee	ev_io_init		88898	0					
ANR	90557	Identifier	ev_io_init		88898	0					
ANR	90558	ArgumentList	& manager . io		88898	1					
ANR	90559	Argument	& manager . io		88898	0					
ANR	90560	UnaryOperationExpression	& manager . io		88898	0					
ANR	90561	UnaryOperator	&		88898	0					
ANR	90562	MemberAccess	manager . io		88898	1					
ANR	90563	Identifier	manager		88898	0					
ANR	90564	Identifier	io		88898	1					
ANR	90565	Argument	manager_recv_cb		88898	1					
ANR	90566	Identifier	manager_recv_cb		88898	0					
ANR	90567	Argument	manager . fd		88898	2					
ANR	90568	MemberAccess	manager . fd		88898	0					
ANR	90569	Identifier	manager		88898	0					
ANR	90570	Identifier	fd		88898	1					
ANR	90571	Argument	EV_READ		88898	3					
ANR	90572	Identifier	EV_READ		88898	0					
ANR	90573	ExpressionStatement	"ev_io_start ( loop , & manager . io )"	1188:4:34416:34446	88898	96	True				
ANR	90574	CallExpression	"ev_io_start ( loop , & manager . io )"		88898	0					
ANR	90575	Callee	ev_io_start		88898	0					
ANR	90576	Identifier	ev_io_start		88898	0					
ANR	90577	ArgumentList	loop		88898	1					
ANR	90578	Argument	loop		88898	0					
ANR	90579	Identifier	loop		88898	0					
ANR	90580	Argument	& manager . io		88898	1					
ANR	90581	UnaryOperationExpression	& manager . io		88898	0					
ANR	90582	UnaryOperator	&		88898	0					
ANR	90583	MemberAccess	manager . io		88898	1					
ANR	90584	Identifier	manager		88898	0					
ANR	90585	Identifier	io		88898	1					
ANR	90586	ExpressionStatement	"ev_run ( loop , 0 )"	1191:4:34474:34489	88898	97	True				
ANR	90587	CallExpression	"ev_run ( loop , 0 )"		88898	0					
ANR	90588	Callee	ev_run		88898	0					
ANR	90589	Identifier	ev_run		88898	0					
ANR	90590	ArgumentList	loop		88898	1					
ANR	90591	Argument	loop		88898	0					
ANR	90592	Identifier	loop		88898	0					
ANR	90593	Argument	0		88898	1					
ANR	90594	PrimaryExpression	0		88898	0					
ANR	90595	IfStatement	if ( verbose )		88898	98					
ANR	90596	Condition	verbose	1193:8:34500:34506	88898	0	True				
ANR	90597	Identifier	verbose		88898	0					
ANR	90598	CompoundStatement		368:17:10583:10583	88898	1					
ANR	90599	ExpressionStatement	"LOGI ( ""closed gracefully"" )"	1194:8:34519:34544	88898	0	True				
ANR	90600	CallExpression	"LOGI ( ""closed gracefully"" )"		88898	0					
ANR	90601	Callee	LOGI		88898	0					
ANR	90602	Identifier	LOGI		88898	0					
ANR	90603	ArgumentList	"""closed gracefully"""		88898	1					
ANR	90604	Argument	"""closed gracefully"""		88898	0					
ANR	90605	PrimaryExpression	"""closed gracefully"""		88898	0					
ANR	90606	IdentifierDeclStatement	struct cork_hash_table_entry * entry ;	1198:4:34573:34608	88898	99	True				
ANR	90607	IdentifierDecl	* entry		88898	0					
ANR	90608	IdentifierDeclType	struct cork_hash_table_entry *		88898	0					
ANR	90609	Identifier	entry		88898	1					
ANR	90610	IdentifierDeclStatement	struct cork_hash_table_iterator server_iter ;	1199:4:34614:34657	88898	100	True				
ANR	90611	IdentifierDecl	server_iter		88898	0					
ANR	90612	IdentifierDeclType	struct cork_hash_table_iterator		88898	0					
ANR	90613	Identifier	server_iter		88898	1					
ANR	90614	ExpressionStatement	"cork_hash_table_iterator_init ( server_table , & server_iter )"	1201:4:34664:34721	88898	101	True				
ANR	90615	CallExpression	"cork_hash_table_iterator_init ( server_table , & server_iter )"		88898	0					
ANR	90616	Callee	cork_hash_table_iterator_init		88898	0					
ANR	90617	Identifier	cork_hash_table_iterator_init		88898	0					
ANR	90618	ArgumentList	server_table		88898	1					
ANR	90619	Argument	server_table		88898	0					
ANR	90620	Identifier	server_table		88898	0					
ANR	90621	Argument	& server_iter		88898	1					
ANR	90622	UnaryOperationExpression	& server_iter		88898	0					
ANR	90623	UnaryOperator	&		88898	0					
ANR	90624	Identifier	server_iter		88898	1					
ANR	90625	WhileStatement	while ( ( entry = cork_hash_table_iterator_next ( & server_iter ) ) != NULL )		88898	102					
ANR	90626	Condition	( entry = cork_hash_table_iterator_next ( & server_iter ) ) != NULL	1203:11:34735:34795	88898	0	True				
ANR	90627	EqualityExpression	( entry = cork_hash_table_iterator_next ( & server_iter ) ) != NULL		88898	0		!=			
ANR	90628	AssignmentExpression	entry = cork_hash_table_iterator_next ( & server_iter )		88898	0		=			
ANR	90629	Identifier	entry		88898	0					
ANR	90630	CallExpression	cork_hash_table_iterator_next ( & server_iter )		88898	1					
ANR	90631	Callee	cork_hash_table_iterator_next		88898	0					
ANR	90632	Identifier	cork_hash_table_iterator_next		88898	0					
ANR	90633	ArgumentList	& server_iter		88898	1					
ANR	90634	Argument	& server_iter		88898	0					
ANR	90635	UnaryOperationExpression	& server_iter		88898	0					
ANR	90636	UnaryOperator	&		88898	0					
ANR	90637	Identifier	server_iter		88898	1					
ANR	90638	Identifier	NULL		88898	1					
ANR	90639	CompoundStatement		379:8:10882:10935	88898	1					
ANR	90640	IdentifierDeclStatement	struct server * server = ( struct server * ) entry -> value ;	1204:8:34808:34861	88898	0	True				
ANR	90641	IdentifierDecl	* server = ( struct server * ) entry -> value		88898	0					
ANR	90642	IdentifierDeclType	struct server *		88898	0					
ANR	90643	Identifier	server		88898	1					
ANR	90644	AssignmentExpression	* server = ( struct server * ) entry -> value		88898	2		=			
ANR	90645	Identifier	server		88898	0					
ANR	90646	CastExpression	( struct server * ) entry -> value		88898	1					
ANR	90647	CastTarget	struct server *		88898	0					
ANR	90648	PtrMemberAccess	entry -> value		88898	1					
ANR	90649	Identifier	entry		88898	0					
ANR	90650	Identifier	value		88898	1					
ANR	90651	ExpressionStatement	"stop_server ( working_dir , server -> port )"	1205:8:34871:34909	88898	1	True				
ANR	90652	CallExpression	"stop_server ( working_dir , server -> port )"		88898	0					
ANR	90653	Callee	stop_server		88898	0					
ANR	90654	Identifier	stop_server		88898	0					
ANR	90655	ArgumentList	working_dir		88898	1					
ANR	90656	Argument	working_dir		88898	0					
ANR	90657	Identifier	working_dir		88898	0					
ANR	90658	Argument	server -> port		88898	1					
ANR	90659	PtrMemberAccess	server -> port		88898	0					
ANR	90660	Identifier	server		88898	0					
ANR	90661	Identifier	port		88898	1					
ANR	90662	ExpressionStatement	"ev_signal_stop ( EV_DEFAULT , & sigint_watcher )"	1208:4:34922:34965	88898	103	True				
ANR	90663	CallExpression	"ev_signal_stop ( EV_DEFAULT , & sigint_watcher )"		88898	0					
ANR	90664	Callee	ev_signal_stop		88898	0					
ANR	90665	Identifier	ev_signal_stop		88898	0					
ANR	90666	ArgumentList	EV_DEFAULT		88898	1					
ANR	90667	Argument	EV_DEFAULT		88898	0					
ANR	90668	Identifier	EV_DEFAULT		88898	0					
ANR	90669	Argument	& sigint_watcher		88898	1					
ANR	90670	UnaryOperationExpression	& sigint_watcher		88898	0					
ANR	90671	UnaryOperator	&		88898	0					
ANR	90672	Identifier	sigint_watcher		88898	1					
ANR	90673	ExpressionStatement	"ev_signal_stop ( EV_DEFAULT , & sigterm_watcher )"	1209:4:34971:35015	88898	104	True				
ANR	90674	CallExpression	"ev_signal_stop ( EV_DEFAULT , & sigterm_watcher )"		88898	0					
ANR	90675	Callee	ev_signal_stop		88898	0					
ANR	90676	Identifier	ev_signal_stop		88898	0					
ANR	90677	ArgumentList	EV_DEFAULT		88898	1					
ANR	90678	Argument	EV_DEFAULT		88898	0					
ANR	90679	Identifier	EV_DEFAULT		88898	0					
ANR	90680	Argument	& sigterm_watcher		88898	1					
ANR	90681	UnaryOperationExpression	& sigterm_watcher		88898	0					
ANR	90682	UnaryOperator	&		88898	0					
ANR	90683	Identifier	sigterm_watcher		88898	1					
ANR	90684	ExpressionStatement	ss_free ( working_dir )	1210:4:35021:35041	88898	105	True				
ANR	90685	CallExpression	ss_free ( working_dir )		88898	0					
ANR	90686	Callee	ss_free		88898	0					
ANR	90687	Identifier	ss_free		88898	0					
ANR	90688	ArgumentList	working_dir		88898	1					
ANR	90689	Argument	working_dir		88898	0					
ANR	90690	Identifier	working_dir		88898	0					
ANR	90691	ReturnStatement	return 0 ;	1212:4:35048:35056	88898	106	True				
ANR	90692	PrimaryExpression	0		88898	0					
ANR	90693	ReturnType	int		88898	1					
ANR	90694	Identifier	main		88898	2					
ANR	90695	ParameterList	"int argc , char * * argv"		88898	3					
ANR	90696	Parameter	int argc	825:5:23902:23909	88898	0	True				
ANR	90697	ParameterType	int		88898	0					
ANR	90698	Identifier	argc		88898	1					
ANR	90699	Parameter	char * * argv	825:15:23912:23922	88898	1	True				
ANR	90700	ParameterType	char * *		88898	0					
ANR	90701	Identifier	argv		88898	1					
ANR	90702	CFGEntryNode	ENTRY		88898		True				
ANR	90703	CFGExitNode	EXIT		88898		True				
ANR	90704	Symbol	EEXIST		88898						
ANR	90705	Symbol	MAX_PORT_NUM		88898						
ANR	90706	Symbol	pw		88898						
ANR	90707	Symbol	optarg		88898						
ANR	90708	Symbol	conf		88898						
ANR	90709	Symbol	server -> password		88898						
ANR	90710	Symbol	manager . method		88898						
ANR	90711	Symbol	manager . reuse_port		88898						
ANR	90712	Symbol	GETOPT_VAL_PASSWORD		88898						
ANR	90713	Symbol	password		88898						
ANR	90714	Symbol	GETOPT_VAL_PLUGIN_OPTS		88898						
ANR	90715	Symbol	GETOPT_VAL_FAST_OPEN		88898						
ANR	90716	Symbol	& svaddr		88898						
ANR	90717	Symbol	bind		88898						
ANR	90718	Symbol	len		88898						
ANR	90719	Symbol	manager . fd		88898						
ANR	90720	Symbol	opterr		88898						
ANR	90721	Symbol	sigint_watcher		88898						
ANR	90722	Symbol	mkdir		88898						
ANR	90723	Symbol	ep -> d_name		88898						
ANR	90724	Symbol	server -> port		88898						
ANR	90725	Symbol	errno		88898						
ANR	90726	Symbol	method		88898						
ANR	90727	Symbol	AF_UNIX		88898						
ANR	90728	Symbol	SIG_IGN		88898						
ANR	90729	Symbol	working_dir_size		88898						
ANR	90730	Symbol	GETOPT_VAL_MANAGER_ADDRESS		88898						
ANR	90731	Symbol	conf -> port_password		88898						
ANR	90732	Symbol	SOCK_DGRAM		88898						
ANR	90733	Symbol	fast_open		88898						
ANR	90734	Symbol	manager . acl		88898						
ANR	90735	Symbol	conf -> plugin_opts		88898						
ANR	90736	Symbol	MAX_REMOTE_NUM		88898						
ANR	90737	Symbol	S_IRWXU		88898						
ANR	90738	Symbol	GETOPT_VAL_PLUGIN		88898						
ANR	90739	Symbol	TCP_AND_UDP		88898						
ANR	90740	Symbol	EXIT_FAILURE		88898						
ANR	90741	Symbol	EXIT_SUCCESS		88898						
ANR	90742	Symbol	manager . mode		88898						
ANR	90743	Symbol	entry -> value		88898						
ANR	90744	Symbol	conf -> port_password [ i ] . port		88898						
ANR	90745	Symbol	conf -> fast_open		88898						
ANR	90746	Symbol	S_IRWXG		88898						
ANR	90747	Symbol	svaddr		88898						
ANR	90748	Symbol	svaddr . sun_family		88898						
ANR	90749	Symbol	server		88898						
ANR	90750	Symbol	* server		88898						
ANR	90751	Symbol	UDP_ONLY		88898						
ANR	90752	Symbol	* * conf		88898						
ANR	90753	Symbol	& manager . io		88898						
ANR	90754	Symbol	sigterm_watcher		88898						
ANR	90755	Symbol	EV_READ		88898						
ANR	90756	Symbol	& ip_addr		88898						
ANR	90757	Symbol	conf -> mtu		88898						
ANR	90758	Symbol	conf -> plugin		88898						
ANR	90759	Symbol	server_iter		88898						
ANR	90760	Symbol	readdir		88898						
ANR	90761	Symbol	GETOPT_VAL_REUSE_PORT		88898						
ANR	90762	Symbol	* server_host		88898						
ANR	90763	Symbol	pid_path		88898						
ANR	90764	Symbol	atoi		88898						
ANR	90765	Symbol	conf -> method		88898						
ANR	90766	Symbol	manager . timeout		88898						
ANR	90767	Symbol	c		88898						
ANR	90768	Symbol	conf -> reuse_port		88898						
ANR	90769	Symbol	manager		88898						
ANR	90770	Symbol	err		88898						
ANR	90771	Symbol	manager_recv_cb		88898						
ANR	90772	Symbol	getopt_long		88898						
ANR	90773	Symbol	conf -> remote_addr [ i ] . host		88898						
ANR	90774	Symbol	manager . nofile		88898						
ANR	90775	Symbol	S_IXOTH		88898						
ANR	90776	Symbol	i		88898						
ANR	90777	Symbol	SIGABRT		88898						
ANR	90778	Symbol	ENOENT		88898						
ANR	90779	Symbol	TCP_ONLY		88898						
ANR	90780	Symbol	executable		88898						
ANR	90781	Symbol	conf -> timeout		88898						
ANR	90782	Symbol	verbose		88898						
ANR	90783	Symbol	homedir		88898						
ANR	90784	Symbol	manager . hosts		88898						
ANR	90785	Symbol	sfd		88898						
ANR	90786	Symbol	* ep		88898						
ANR	90787	Symbol	manager . user		88898						
ANR	90788	Symbol	plugin		88898						
ANR	90789	Symbol	* conf -> remote_addr		88898						
ANR	90790	Symbol	conf -> password		88898						
ANR	90791	Symbol	ss_malloc		88898						
ANR	90792	Symbol	conf -> remote_num		88898						
ANR	90793	Symbol	conf -> nofile		88898						
ANR	90794	Symbol	ipv6first		88898						
ANR	90795	Symbol	server_table		88898						
ANR	90796	Symbol	* argv		88898						
ANR	90797	Symbol	acl		88898						
ANR	90798	Symbol	cork_string_hash_table_new		88898						
ANR	90799	Symbol	required_argument		88898						
ANR	90800	Symbol	dp		88898						
ANR	90801	Symbol	mode		88898						
ANR	90802	Symbol	conf -> remote_addr		88898						
ANR	90803	Symbol	manager . nameserver_num		88898						
ANR	90804	Symbol	getpwuid		88898						
ANR	90805	Symbol	strlen		88898						
ANR	90806	Symbol	long_options		88898						
ANR	90807	Symbol	manager . password		88898						
ANR	90808	Symbol	loop		88898						
ANR	90809	Symbol	conf -> port_password_num		88898						
ANR	90810	Symbol	SIGPIPE		88898						
ANR	90811	Symbol	ip_addr . host		88898						
ANR	90812	Symbol	manager . ipv6first		88898						
ANR	90813	Symbol	strcmp		88898						
ANR	90814	Symbol	S_IROTH		88898						
ANR	90815	Symbol	NULL		88898						
ANR	90816	Symbol	EV_DEFAULT		88898						
ANR	90817	Symbol	& manager		88898						
ANR	90818	Symbol	server_num		88898						
ANR	90819	Symbol	* nameservers		88898						
ANR	90820	Symbol	manager . manager_address		88898						
ANR	90821	Symbol	nameserver_num		88898						
ANR	90822	Symbol	ep		88898						
ANR	90823	Symbol	geteuid		88898						
ANR	90824	Symbol	conf -> port_password [ i ] . password		88898						
ANR	90825	Symbol	GETOPT_VAL_HELP		88898						
ANR	90826	Symbol	pw -> pw_dir		88898						
ANR	90827	Symbol	* pw		88898						
ANR	90828	Symbol	mtu		88898						
ANR	90829	Symbol	signal_cb		88898						
ANR	90830	Symbol	MAX_DNS_NUM		88898						
ANR	90831	Symbol	& sigterm_watcher		88898						
ANR	90832	Symbol	iface		88898						
ANR	90833	Symbol	manager . host_num		88898						
ANR	90834	Symbol	entry		88898						
ANR	90835	Symbol	getuid		88898						
ANR	90836	Symbol	read_jconf		88898						
ANR	90837	Symbol	SIGINT		88898						
ANR	90838	Symbol	opendir		88898						
ANR	90839	Symbol	conf -> mode		88898						
ANR	90840	Symbol	no_argument		88898						
ANR	90841	Symbol	nofile		88898						
ANR	90842	Symbol	reuse_port		88898						
ANR	90843	Symbol	svaddr . sun_path		88898						
ANR	90844	Symbol	manager . verbose		88898						
ANR	90845	Symbol	& sigint_watcher		88898						
ANR	90846	Symbol	manager . mtu		88898						
ANR	90847	Symbol	working_dir		88898						
ANR	90848	Symbol	* conf		88898						
ANR	90849	Symbol	GETOPT_VAL_ACL		88898						
ANR	90850	Symbol	argv		88898						
ANR	90851	Symbol	conf -> user		88898						
ANR	90852	Symbol	timeout		88898						
ANR	90853	Symbol	remove		88898						
ANR	90854	Symbol	manager_address		88898						
ANR	90855	Symbol	manager . plugin		88898						
ANR	90856	Symbol	create_server_socket		88898						
ANR	90857	Symbol	plugin_opts		88898						
ANR	90858	Symbol	* conf -> port_password		88898						
ANR	90859	Symbol	manager . nameservers		88898						
ANR	90860	Symbol	SIGTERM		88898						
ANR	90861	Symbol	conf -> nameserver		88898						
ANR	90862	Symbol	* entry		88898						
ANR	90863	Symbol	argc		88898						
ANR	90864	Symbol	conf_path		88898						
ANR	90865	Symbol	ip_addr . port		88898						
ANR	90866	Symbol	server_host		88898						
ANR	90867	Symbol	GETOPT_VAL_MTU		88898						
ANR	90868	Symbol	GETOPT_VAL_EXECUTABLE		88898						
ANR	90869	Symbol	cork_hash_table_iterator_next		88898						
ANR	90870	Symbol	SIGCHLD		88898						
ANR	90871	Symbol	& server_iter		88898						
ANR	90872	Symbol	nameservers		88898						
ANR	90873	Symbol	* i		88898						
ANR	90874	Symbol	pid_flags		88898						
ANR	90875	Symbol	conf -> ipv6_first		88898						
ANR	90876	Symbol	manager . plugin_opts		88898						
ANR	90877	Symbol	socket		88898						
ANR	90878	Symbol	manager . fast_open		88898						
ANR	90879	Symbol	ip_addr		88898						
ANR	90880	Symbol	user		88898						
ANR	90881	Symbol	manager . iface		88898						
