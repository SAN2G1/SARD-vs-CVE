command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	124571	File	data/converged/CVE-2017-15924_shadowsocks-libev/src_udprelay.c								
ANR	124572	DeclStmt									
ANR	124573	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	server_recv_cb
ANR	124574	DeclStmt									
ANR	124575	Decl							void	"void ( EV_P_ ev_io * w , int revents )"	remote_recv_cb
ANR	124576	DeclStmt									
ANR	124577	Decl							void	"void ( EV_P_ ev_timer * watcher , int revents )"	remote_timeout_cb
ANR	124578	DeclStmt									
ANR	124579	Decl							char	"char * ( const int af , const struct sockaddr_storage * addr )"	hash_key
ANR	124580	DeclStmt									
ANR	124581	Decl							void	void ( void * data )	resolv_free_cb
ANR	124582	DeclStmt									
ANR	124583	Decl							void	"void ( struct sockaddr * addr , void * data )"	resolv_cb
ANR	124584	DeclStmt									
ANR	124585	Decl							void	void ( EV_P_ remote_ctx_t * ctx )	close_and_free_remote
ANR	124586	DeclStmt									
ANR	124587	Decl							remote_ctx_t	"remote_ctx_t * ( int fd , server_ctx_t * server_ctx )"	new_remote
ANR	124588	DeclStmt									
ANR	124589	Decl							extern uint64_t	extern uint64_t	tx
ANR	124590	DeclStmt									
ANR	124591	Decl							extern uint64_t	extern uint64_t	rx
ANR	124592	DeclStmt									
ANR	124593	Decl							extern int	extern int	vpn
ANR	124594	DeclStmt									
ANR	124595	Decl							extern void	extern void ( )	stat_update_cb
ANR	124596	DeclStmt									
ANR	124597	Decl							extern int	extern int	verbose
ANR	124598	DeclStmt									
ANR	124599	Decl							extern int	extern int	reuse_port
ANR	124600	DeclStmt									
ANR	124601	Decl							extern uint64_t	extern uint64_t	tx
ANR	124602	DeclStmt									
ANR	124603	Decl							extern uint64_t	extern uint64_t	rx
ANR	124604	DeclStmt									
ANR	124605	Decl							int	int	packet_size
ANR	124606	DeclStmt									
ANR	124607	Decl							int	int	buf_size
ANR	124608	DeclStmt									
ANR	124609	Decl							int	int	server_num
ANR	124610	DeclStmt									
ANR	124611	Decl							server_ctx_t	server_ctx_t * [ MAX_REMOTE_NUM ]	server_ctx_list
ANR	124612	Function	setnonblocking	107:0:2799:2975							
ANR	124613	FunctionDef	setnonblocking (int fd)		124612	0					
ANR	124614	CompoundStatement		109:0:2833:2975	124612	0					
ANR	124615	IdentifierDeclStatement	int flags ;	110:4:2839:2848	124612	0	True				
ANR	124616	IdentifierDecl	flags		124612	0					
ANR	124617	IdentifierDeclType	int		124612	0					
ANR	124618	Identifier	flags		124612	1					
ANR	124619	IfStatement	"if ( - 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) ) )"		124612	1					
ANR	124620	Condition	"- 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) )"	111:8:2858:2894	124612	0	True				
ANR	124621	EqualityExpression	"- 1 == ( flags = fcntl ( fd , F_GETFL , 0 ) )"		124612	0		==			
ANR	124622	UnaryOperationExpression	- 1		124612	0					
ANR	124623	UnaryOperator	-		124612	0					
ANR	124624	PrimaryExpression	1		124612	1					
ANR	124625	AssignmentExpression	"flags = fcntl ( fd , F_GETFL , 0 )"		124612	1		=			
ANR	124626	Identifier	flags		124612	0					
ANR	124627	CallExpression	"fcntl ( fd , F_GETFL , 0 )"		124612	1					
ANR	124628	Callee	fcntl		124612	0					
ANR	124629	Identifier	fcntl		124612	0					
ANR	124630	ArgumentList	fd		124612	1					
ANR	124631	Argument	fd		124612	0					
ANR	124632	Identifier	fd		124612	0					
ANR	124633	Argument	F_GETFL		124612	1					
ANR	124634	Identifier	F_GETFL		124612	0					
ANR	124635	Argument	0		124612	2					
ANR	124636	PrimaryExpression	0		124612	0					
ANR	124637	CompoundStatement		3:47:63:63	124612	1					
ANR	124638	ExpressionStatement	flags = 0	112:8:2907:2916	124612	0	True				
ANR	124639	AssignmentExpression	flags = 0		124612	0		=			
ANR	124640	Identifier	flags		124612	0					
ANR	124641	PrimaryExpression	0		124612	1					
ANR	124642	ReturnStatement	"return fcntl ( fd , F_SETFL , flags | O_NONBLOCK ) ;"	114:4:2928:2973	124612	2	True				
ANR	124643	CallExpression	"fcntl ( fd , F_SETFL , flags | O_NONBLOCK )"		124612	0					
ANR	124644	Callee	fcntl		124612	0					
ANR	124645	Identifier	fcntl		124612	0					
ANR	124646	ArgumentList	fd		124612	1					
ANR	124647	Argument	fd		124612	0					
ANR	124648	Identifier	fd		124612	0					
ANR	124649	Argument	F_SETFL		124612	1					
ANR	124650	Identifier	F_SETFL		124612	0					
ANR	124651	Argument	flags | O_NONBLOCK		124612	2					
ANR	124652	InclusiveOrExpression	flags | O_NONBLOCK		124612	0		|			
ANR	124653	Identifier	flags		124612	0					
ANR	124654	Identifier	O_NONBLOCK		124612	1					
ANR	124655	ReturnType	static int		124612	1					
ANR	124656	Identifier	setnonblocking		124612	2					
ANR	124657	ParameterList	int fd		124612	3					
ANR	124658	Parameter	int fd	108:15:2825:2830	124612	0	True				
ANR	124659	ParameterType	int		124612	0					
ANR	124660	Identifier	fd		124612	1					
ANR	124661	CFGEntryNode	ENTRY		124612		True				
ANR	124662	CFGExitNode	EXIT		124612		True				
ANR	124663	Symbol	fcntl		124612						
ANR	124664	Symbol	O_NONBLOCK		124612						
ANR	124665	Symbol	flags		124612						
ANR	124666	Symbol	F_GETFL		124612						
ANR	124667	Symbol	F_SETFL		124612						
ANR	124668	Symbol	fd		124612						
ANR	124669	Function	set_broadcast	118:0:3030:3168							
ANR	124670	FunctionDef	set_broadcast (int socket_fd)		124669	0					
ANR	124671	CompoundStatement		120:0:3070:3168	124669	0					
ANR	124672	IdentifierDeclStatement	int opt = 1 ;	121:4:3076:3087	124669	0	True				
ANR	124673	IdentifierDecl	opt = 1		124669	0					
ANR	124674	IdentifierDeclType	int		124669	0					
ANR	124675	Identifier	opt		124669	1					
ANR	124676	AssignmentExpression	opt = 1		124669	2		=			
ANR	124677	Identifier	opt		124669	0					
ANR	124678	PrimaryExpression	1		124669	1					
ANR	124679	ReturnStatement	"return setsockopt ( socket_fd , SOL_SOCKET , SO_BROADCAST , & opt , sizeof ( opt ) ) ;"	122:4:3093:3166	124669	1	True				
ANR	124680	CallExpression	"setsockopt ( socket_fd , SOL_SOCKET , SO_BROADCAST , & opt , sizeof ( opt ) )"		124669	0					
ANR	124681	Callee	setsockopt		124669	0					
ANR	124682	Identifier	setsockopt		124669	0					
ANR	124683	ArgumentList	socket_fd		124669	1					
ANR	124684	Argument	socket_fd		124669	0					
ANR	124685	Identifier	socket_fd		124669	0					
ANR	124686	Argument	SOL_SOCKET		124669	1					
ANR	124687	Identifier	SOL_SOCKET		124669	0					
ANR	124688	Argument	SO_BROADCAST		124669	2					
ANR	124689	Identifier	SO_BROADCAST		124669	0					
ANR	124690	Argument	& opt		124669	3					
ANR	124691	UnaryOperationExpression	& opt		124669	0					
ANR	124692	UnaryOperator	&		124669	0					
ANR	124693	Identifier	opt		124669	1					
ANR	124694	Argument	sizeof ( opt )		124669	4					
ANR	124695	SizeofExpression	sizeof ( opt )		124669	0					
ANR	124696	Sizeof	sizeof		124669	0					
ANR	124697	SizeofOperand	opt		124669	1					
ANR	124698	ReturnType	static int		124669	1					
ANR	124699	Identifier	set_broadcast		124669	2					
ANR	124700	ParameterList	int socket_fd		124669	3					
ANR	124701	Parameter	int socket_fd	119:14:3055:3067	124669	0	True				
ANR	124702	ParameterType	int		124669	0					
ANR	124703	Identifier	socket_fd		124669	1					
ANR	124704	CFGEntryNode	ENTRY		124669		True				
ANR	124705	CFGExitNode	EXIT		124669		True				
ANR	124706	Symbol	SOL_SOCKET		124669						
ANR	124707	Symbol	opt		124669						
ANR	124708	Symbol	SO_BROADCAST		124669						
ANR	124709	Symbol	setsockopt		124669						
ANR	124710	Symbol	& opt		124669						
ANR	124711	Symbol	socket_fd		124669						
ANR	124712	Function	set_nosigpipe	128:0:3199:3337							
ANR	124713	FunctionDef	set_nosigpipe (int socket_fd)		124712	0					
ANR	124714	CompoundStatement		130:0:3239:3337	124712	0					
ANR	124715	IdentifierDeclStatement	int opt = 1 ;	131:4:3245:3256	124712	0	True				
ANR	124716	IdentifierDecl	opt = 1		124712	0					
ANR	124717	IdentifierDeclType	int		124712	0					
ANR	124718	Identifier	opt		124712	1					
ANR	124719	AssignmentExpression	opt = 1		124712	2		=			
ANR	124720	Identifier	opt		124712	0					
ANR	124721	PrimaryExpression	1		124712	1					
ANR	124722	ReturnStatement	"return setsockopt ( socket_fd , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) ) ;"	132:4:3262:3335	124712	1	True				
ANR	124723	CallExpression	"setsockopt ( socket_fd , SOL_SOCKET , SO_NOSIGPIPE , & opt , sizeof ( opt ) )"		124712	0					
ANR	124724	Callee	setsockopt		124712	0					
ANR	124725	Identifier	setsockopt		124712	0					
ANR	124726	ArgumentList	socket_fd		124712	1					
ANR	124727	Argument	socket_fd		124712	0					
ANR	124728	Identifier	socket_fd		124712	0					
ANR	124729	Argument	SOL_SOCKET		124712	1					
ANR	124730	Identifier	SOL_SOCKET		124712	0					
ANR	124731	Argument	SO_NOSIGPIPE		124712	2					
ANR	124732	Identifier	SO_NOSIGPIPE		124712	0					
ANR	124733	Argument	& opt		124712	3					
ANR	124734	UnaryOperationExpression	& opt		124712	0					
ANR	124735	UnaryOperator	&		124712	0					
ANR	124736	Identifier	opt		124712	1					
ANR	124737	Argument	sizeof ( opt )		124712	4					
ANR	124738	SizeofExpression	sizeof ( opt )		124712	0					
ANR	124739	Sizeof	sizeof		124712	0					
ANR	124740	SizeofOperand	opt		124712	1					
ANR	124741	ReturnType	static int		124712	1					
ANR	124742	Identifier	set_nosigpipe		124712	2					
ANR	124743	ParameterList	int socket_fd		124712	3					
ANR	124744	Parameter	int socket_fd	129:14:3224:3236	124712	0	True				
ANR	124745	ParameterType	int		124712	0					
ANR	124746	Identifier	socket_fd		124712	1					
ANR	124747	CFGEntryNode	ENTRY		124712		True				
ANR	124748	CFGExitNode	EXIT		124712		True				
ANR	124749	Symbol	SOL_SOCKET		124712						
ANR	124750	Symbol	opt		124712						
ANR	124751	Symbol	SO_NOSIGPIPE		124712						
ANR	124752	Symbol	setsockopt		124712						
ANR	124753	Symbol	& opt		124712						
ANR	124754	Symbol	socket_fd		124712						
ANR	124755	Function	get_dstaddr	159:0:3736:4403							
ANR	124756	FunctionDef	"get_dstaddr (struct msghdr * msg , struct sockaddr_storage * dstaddr)"		124755	0					
ANR	124757	CompoundStatement		161:0:3813:4403	124755	0					
ANR	124758	IdentifierDeclStatement	struct cmsghdr * cmsg ;	162:4:3819:3839	124755	0	True				
ANR	124759	IdentifierDecl	* cmsg		124755	0					
ANR	124760	IdentifierDeclType	struct cmsghdr *		124755	0					
ANR	124761	Identifier	cmsg		124755	1					
ANR	124762	ForStatement	"for ( cmsg = CMSG_FIRSTHDR ( msg ) ; cmsg ; cmsg = CMSG_NXTHDR ( msg , cmsg ) )"		124755	1					
ANR	124763	ForInit	cmsg = CMSG_FIRSTHDR ( msg ) ;	164:9:3851:3876	124755	0	True				
ANR	124764	AssignmentExpression	cmsg = CMSG_FIRSTHDR ( msg )		124755	0		=			
ANR	124765	Identifier	cmsg		124755	0					
ANR	124766	CallExpression	CMSG_FIRSTHDR ( msg )		124755	1					
ANR	124767	Callee	CMSG_FIRSTHDR		124755	0					
ANR	124768	Identifier	CMSG_FIRSTHDR		124755	0					
ANR	124769	ArgumentList	msg		124755	1					
ANR	124770	Argument	msg		124755	0					
ANR	124771	Identifier	msg		124755	0					
ANR	124772	Condition	cmsg	164:36:3878:3881	124755	1	True				
ANR	124773	Identifier	cmsg		124755	0					
ANR	124774	AssignmentExpression	"cmsg = CMSG_NXTHDR ( msg , cmsg )"	164:42:3884:3912	124755	2	True	=			
ANR	124775	Identifier	cmsg		124755	0					
ANR	124776	CallExpression	"CMSG_NXTHDR ( msg , cmsg )"		124755	1					
ANR	124777	Callee	CMSG_NXTHDR		124755	0					
ANR	124778	Identifier	CMSG_NXTHDR		124755	0					
ANR	124779	ArgumentList	msg		124755	1					
ANR	124780	Argument	msg		124755	0					
ANR	124781	Identifier	msg		124755	0					
ANR	124782	Argument	cmsg		124755	1					
ANR	124783	Identifier	cmsg		124755	0					
ANR	124784	CompoundStatement		4:73:101:101	124755	3					
ANR	124785	IfStatement	if ( cmsg -> cmsg_level == SOL_IP && cmsg -> cmsg_type == IP_RECVORIGDSTADDR )		124755	0					
ANR	124786	Condition	cmsg -> cmsg_level == SOL_IP && cmsg -> cmsg_type == IP_RECVORIGDSTADDR	165:12:3929:3995	124755	0	True				
ANR	124787	AndExpression	cmsg -> cmsg_level == SOL_IP && cmsg -> cmsg_type == IP_RECVORIGDSTADDR		124755	0		&&			
ANR	124788	EqualityExpression	cmsg -> cmsg_level == SOL_IP		124755	0		==			
ANR	124789	PtrMemberAccess	cmsg -> cmsg_level		124755	0					
ANR	124790	Identifier	cmsg		124755	0					
ANR	124791	Identifier	cmsg_level		124755	1					
ANR	124792	Identifier	SOL_IP		124755	1					
ANR	124793	EqualityExpression	cmsg -> cmsg_type == IP_RECVORIGDSTADDR		124755	1		==			
ANR	124794	PtrMemberAccess	cmsg -> cmsg_type		124755	0					
ANR	124795	Identifier	cmsg		124755	0					
ANR	124796	Identifier	cmsg_type		124755	1					
ANR	124797	Identifier	IP_RECVORIGDSTADDR		124755	1					
ANR	124798	CompoundStatement		5:81:184:184	124755	1					
ANR	124799	ExpressionStatement	"memcpy ( dstaddr , CMSG_DATA ( cmsg ) , sizeof ( struct sockaddr_in ) )"	166:12:4012:4072	124755	0	True				
ANR	124800	CallExpression	"memcpy ( dstaddr , CMSG_DATA ( cmsg ) , sizeof ( struct sockaddr_in ) )"		124755	0					
ANR	124801	Callee	memcpy		124755	0					
ANR	124802	Identifier	memcpy		124755	0					
ANR	124803	ArgumentList	dstaddr		124755	1					
ANR	124804	Argument	dstaddr		124755	0					
ANR	124805	Identifier	dstaddr		124755	0					
ANR	124806	Argument	CMSG_DATA ( cmsg )		124755	1					
ANR	124807	CallExpression	CMSG_DATA ( cmsg )		124755	0					
ANR	124808	Callee	CMSG_DATA		124755	0					
ANR	124809	Identifier	CMSG_DATA		124755	0					
ANR	124810	ArgumentList	cmsg		124755	1					
ANR	124811	Argument	cmsg		124755	0					
ANR	124812	Identifier	cmsg		124755	0					
ANR	124813	Argument	sizeof ( struct sockaddr_in )		124755	2					
ANR	124814	SizeofExpression	sizeof ( struct sockaddr_in )		124755	0					
ANR	124815	Sizeof	sizeof		124755	0					
ANR	124816	SizeofOperand	struct sockaddr_in		124755	1					
ANR	124817	ExpressionStatement	dstaddr -> ss_family = AF_INET	167:12:4086:4114	124755	1	True				
ANR	124818	AssignmentExpression	dstaddr -> ss_family = AF_INET		124755	0		=			
ANR	124819	PtrMemberAccess	dstaddr -> ss_family		124755	0					
ANR	124820	Identifier	dstaddr		124755	0					
ANR	124821	Identifier	ss_family		124755	1					
ANR	124822	Identifier	AF_INET		124755	1					
ANR	124823	ReturnStatement	return 0 ;	168:12:4128:4136	124755	2	True				
ANR	124824	PrimaryExpression	0		124755	0					
ANR	124825	ElseStatement	else		124755	0					
ANR	124826	IfStatement	if ( cmsg -> cmsg_level == SOL_IPV6 && cmsg -> cmsg_type == IPV6_RECVORIGDSTADDR )		124755	0					
ANR	124827	Condition	cmsg -> cmsg_level == SOL_IPV6 && cmsg -> cmsg_type == IPV6_RECVORIGDSTADDR	169:19:4157:4227	124755	0	True				
ANR	124828	AndExpression	cmsg -> cmsg_level == SOL_IPV6 && cmsg -> cmsg_type == IPV6_RECVORIGDSTADDR		124755	0		&&			
ANR	124829	EqualityExpression	cmsg -> cmsg_level == SOL_IPV6		124755	0		==			
ANR	124830	PtrMemberAccess	cmsg -> cmsg_level		124755	0					
ANR	124831	Identifier	cmsg		124755	0					
ANR	124832	Identifier	cmsg_level		124755	1					
ANR	124833	Identifier	SOL_IPV6		124755	1					
ANR	124834	EqualityExpression	cmsg -> cmsg_type == IPV6_RECVORIGDSTADDR		124755	1		==			
ANR	124835	PtrMemberAccess	cmsg -> cmsg_type		124755	0					
ANR	124836	Identifier	cmsg		124755	0					
ANR	124837	Identifier	cmsg_type		124755	1					
ANR	124838	Identifier	IPV6_RECVORIGDSTADDR		124755	1					
ANR	124839	CompoundStatement		9:92:416:416	124755	1					
ANR	124840	ExpressionStatement	"memcpy ( dstaddr , CMSG_DATA ( cmsg ) , sizeof ( struct sockaddr_in6 ) )"	170:12:4244:4305	124755	0	True				
ANR	124841	CallExpression	"memcpy ( dstaddr , CMSG_DATA ( cmsg ) , sizeof ( struct sockaddr_in6 ) )"		124755	0					
ANR	124842	Callee	memcpy		124755	0					
ANR	124843	Identifier	memcpy		124755	0					
ANR	124844	ArgumentList	dstaddr		124755	1					
ANR	124845	Argument	dstaddr		124755	0					
ANR	124846	Identifier	dstaddr		124755	0					
ANR	124847	Argument	CMSG_DATA ( cmsg )		124755	1					
ANR	124848	CallExpression	CMSG_DATA ( cmsg )		124755	0					
ANR	124849	Callee	CMSG_DATA		124755	0					
ANR	124850	Identifier	CMSG_DATA		124755	0					
ANR	124851	ArgumentList	cmsg		124755	1					
ANR	124852	Argument	cmsg		124755	0					
ANR	124853	Identifier	cmsg		124755	0					
ANR	124854	Argument	sizeof ( struct sockaddr_in6 )		124755	2					
ANR	124855	SizeofExpression	sizeof ( struct sockaddr_in6 )		124755	0					
ANR	124856	Sizeof	sizeof		124755	0					
ANR	124857	SizeofOperand	struct sockaddr_in6		124755	1					
ANR	124858	ExpressionStatement	dstaddr -> ss_family = AF_INET6	171:12:4319:4348	124755	1	True				
ANR	124859	AssignmentExpression	dstaddr -> ss_family = AF_INET6		124755	0		=			
ANR	124860	PtrMemberAccess	dstaddr -> ss_family		124755	0					
ANR	124861	Identifier	dstaddr		124755	0					
ANR	124862	Identifier	ss_family		124755	1					
ANR	124863	Identifier	AF_INET6		124755	1					
ANR	124864	ReturnStatement	return 0 ;	172:12:4362:4370	124755	2	True				
ANR	124865	PrimaryExpression	0		124755	0					
ANR	124866	ReturnStatement	return 1 ;	176:4:4393:4401	124755	2	True				
ANR	124867	PrimaryExpression	1		124755	0					
ANR	124868	ReturnType	static int		124755	1					
ANR	124869	Identifier	get_dstaddr		124755	2					
ANR	124870	ParameterList	"struct msghdr * msg , struct sockaddr_storage * dstaddr"		124755	3					
ANR	124871	Parameter	struct msghdr * msg	160:12:3759:3776	124755	0	True				
ANR	124872	ParameterType	struct msghdr *		124755	0					
ANR	124873	Identifier	msg		124755	1					
ANR	124874	Parameter	struct sockaddr_storage * dstaddr	160:32:3779:3810	124755	1	True				
ANR	124875	ParameterType	struct sockaddr_storage *		124755	0					
ANR	124876	Identifier	dstaddr		124755	1					
ANR	124877	CFGEntryNode	ENTRY		124755		True				
ANR	124878	CFGExitNode	EXIT		124755		True				
ANR	124879	Symbol	msg		124755						
ANR	124880	Symbol	CMSG_DATA		124755						
ANR	124881	Symbol	CMSG_FIRSTHDR		124755						
ANR	124882	Symbol	IP_RECVORIGDSTADDR		124755						
ANR	124883	Symbol	SOL_IP		124755						
ANR	124884	Symbol	* cmsg		124755						
ANR	124885	Symbol	dstaddr		124755						
ANR	124886	Symbol	IPV6_RECVORIGDSTADDR		124755						
ANR	124887	Symbol	cmsg -> cmsg_level		124755						
ANR	124888	Symbol	AF_INET		124755						
ANR	124889	Symbol	SOL_IPV6		124755						
ANR	124890	Symbol	AF_INET6		124755						
ANR	124891	Symbol	cmsg		124755						
ANR	124892	Symbol	CMSG_NXTHDR		124755						
ANR	124893	Symbol	cmsg -> cmsg_type		124755						
ANR	124894	Symbol	dstaddr -> ss_family		124755						
ANR	124895	Symbol	* dstaddr		124755						
ANR	124896	Function	hash_key	182:0:4481:4798							
ANR	124897	FunctionDef	"hash_key (const int af , const struct sockaddr_storage * addr)"		124896	0					
ANR	124898	CompoundStatement		184:0:4555:4798	124896	0					
ANR	124899	IdentifierDeclStatement	size_t addr_len = sizeof ( struct sockaddr_storage ) ;	185:4:4561:4610	124896	0	True				
ANR	124900	IdentifierDecl	addr_len = sizeof ( struct sockaddr_storage )		124896	0					
ANR	124901	IdentifierDeclType	size_t		124896	0					
ANR	124902	Identifier	addr_len		124896	1					
ANR	124903	AssignmentExpression	addr_len = sizeof ( struct sockaddr_storage )		124896	2		=			
ANR	124904	Identifier	addr_len		124896	0					
ANR	124905	SizeofExpression	sizeof ( struct sockaddr_storage )		124896	1					
ANR	124906	Sizeof	sizeof		124896	0					
ANR	124907	SizeofOperand	struct sockaddr_storage		124896	1					
ANR	124908	Statement	static	186:4:4616:4621	124896	1	True				
ANR	124909	IdentifierDeclStatement	char key [ HASH_KEY_LEN ] ;	186:11:4623:4645	124896	2	True				
ANR	124910	IdentifierDecl	key [ HASH_KEY_LEN ]		124896	0					
ANR	124911	IdentifierDeclType	char [ HASH_KEY_LEN ]		124896	0					
ANR	124912	Identifier	key		124896	1					
ANR	124913	Identifier	HASH_KEY_LEN		124896	2					
ANR	124914	ExpressionStatement	"memset ( key , 0 , HASH_KEY_LEN )"	188:4:4652:4680	124896	3	True				
ANR	124915	CallExpression	"memset ( key , 0 , HASH_KEY_LEN )"		124896	0					
ANR	124916	Callee	memset		124896	0					
ANR	124917	Identifier	memset		124896	0					
ANR	124918	ArgumentList	key		124896	1					
ANR	124919	Argument	key		124896	0					
ANR	124920	Identifier	key		124896	0					
ANR	124921	Argument	0		124896	1					
ANR	124922	PrimaryExpression	0		124896	0					
ANR	124923	Argument	HASH_KEY_LEN		124896	2					
ANR	124924	Identifier	HASH_KEY_LEN		124896	0					
ANR	124925	ExpressionStatement	"memcpy ( key , & af , sizeof ( int ) )"	189:4:4686:4715	124896	4	True				
ANR	124926	CallExpression	"memcpy ( key , & af , sizeof ( int ) )"		124896	0					
ANR	124927	Callee	memcpy		124896	0					
ANR	124928	Identifier	memcpy		124896	0					
ANR	124929	ArgumentList	key		124896	1					
ANR	124930	Argument	key		124896	0					
ANR	124931	Identifier	key		124896	0					
ANR	124932	Argument	& af		124896	1					
ANR	124933	UnaryOperationExpression	& af		124896	0					
ANR	124934	UnaryOperator	&		124896	0					
ANR	124935	Identifier	af		124896	1					
ANR	124936	Argument	sizeof ( int )		124896	2					
ANR	124937	SizeofExpression	sizeof ( int )		124896	0					
ANR	124938	Sizeof	sizeof		124896	0					
ANR	124939	SizeofOperand	int		124896	1					
ANR	124940	ExpressionStatement	"memcpy ( key + sizeof ( int ) , ( const uint8_t * ) addr , addr_len )"	190:4:4721:4779	124896	5	True				
ANR	124941	CallExpression	"memcpy ( key + sizeof ( int ) , ( const uint8_t * ) addr , addr_len )"		124896	0					
ANR	124942	Callee	memcpy		124896	0					
ANR	124943	Identifier	memcpy		124896	0					
ANR	124944	ArgumentList	key + sizeof ( int )		124896	1					
ANR	124945	Argument	key + sizeof ( int )		124896	0					
ANR	124946	AdditiveExpression	key + sizeof ( int )		124896	0		+			
ANR	124947	Identifier	key		124896	0					
ANR	124948	SizeofExpression	sizeof ( int )		124896	1					
ANR	124949	Sizeof	sizeof		124896	0					
ANR	124950	SizeofOperand	int		124896	1					
ANR	124951	Argument	( const uint8_t * ) addr		124896	1					
ANR	124952	CastExpression	( const uint8_t * ) addr		124896	0					
ANR	124953	CastTarget	const uint8_t *		124896	0					
ANR	124954	Identifier	addr		124896	1					
ANR	124955	Argument	addr_len		124896	2					
ANR	124956	Identifier	addr_len		124896	0					
ANR	124957	ReturnStatement	return key ;	192:4:4786:4796	124896	6	True				
ANR	124958	Identifier	key		124896	0					
ANR	124959	ReturnType	static char *		124896	1					
ANR	124960	Identifier	hash_key		124896	2					
ANR	124961	ParameterList	"const int af , const struct sockaddr_storage * addr"		124896	3					
ANR	124962	Parameter	const int af	183:9:4504:4515	124896	0	True				
ANR	124963	ParameterType	const int		124896	0					
ANR	124964	Identifier	af		124896	1					
ANR	124965	Parameter	const struct sockaddr_storage * addr	183:23:4518:4552	124896	1	True				
ANR	124966	ParameterType	const struct sockaddr_storage *		124896	0					
ANR	124967	Identifier	addr		124896	1					
ANR	124968	CFGEntryNode	ENTRY		124896		True				
ANR	124969	CFGExitNode	EXIT		124896		True				
ANR	124970	Symbol	af		124896						
ANR	124971	Symbol	addr		124896						
ANR	124972	Symbol	addr_len		124896						
ANR	124973	Symbol	key		124896						
ANR	124974	Symbol	HASH_KEY_LEN		124896						
ANR	124975	Symbol	& af		124896						
ANR	124976	Function	construct_udprelay_header	196:0:4827:5895							
ANR	124977	FunctionDef	"construct_udprelay_header (const struct sockaddr_storage * in_addr , char * addr_header)"		124976	0					
ANR	124978	CompoundStatement		199:0:4949:5895	124976	0					
ANR	124979	IdentifierDeclStatement	int addr_header_len = 0 ;	200:4:4955:4978	124976	0	True				
ANR	124980	IdentifierDecl	addr_header_len = 0		124976	0					
ANR	124981	IdentifierDeclType	int		124976	0					
ANR	124982	Identifier	addr_header_len		124976	1					
ANR	124983	AssignmentExpression	addr_header_len = 0		124976	2		=			
ANR	124984	Identifier	addr_header_len		124976	0					
ANR	124985	PrimaryExpression	0		124976	1					
ANR	124986	IfStatement	if ( in_addr -> ss_family == AF_INET )		124976	1					
ANR	124987	Condition	in_addr -> ss_family == AF_INET	201:8:4988:5016	124976	0	True				
ANR	124988	EqualityExpression	in_addr -> ss_family == AF_INET		124976	0		==			
ANR	124989	PtrMemberAccess	in_addr -> ss_family		124976	0					
ANR	124990	Identifier	in_addr		124976	0					
ANR	124991	Identifier	ss_family		124976	1					
ANR	124992	Identifier	AF_INET		124976	1					
ANR	124993	CompoundStatement		5:8:145:194	124976	1					
ANR	124994	IdentifierDeclStatement	struct sockaddr_in * addr = ( struct sockaddr_in * ) in_addr ;	202:8:5029:5085	124976	0	True				
ANR	124995	IdentifierDecl	* addr = ( struct sockaddr_in * ) in_addr		124976	0					
ANR	124996	IdentifierDeclType	struct sockaddr_in *		124976	0					
ANR	124997	Identifier	addr		124976	1					
ANR	124998	AssignmentExpression	* addr = ( struct sockaddr_in * ) in_addr		124976	2		=			
ANR	124999	Identifier	addr		124976	0					
ANR	125000	CastExpression	( struct sockaddr_in * ) in_addr		124976	1					
ANR	125001	CastTarget	struct sockaddr_in *		124976	0					
ANR	125002	Identifier	in_addr		124976	1					
ANR	125003	IdentifierDeclStatement	size_t addr_len = sizeof ( struct in_addr ) ;	203:8:5095:5144	124976	1	True				
ANR	125004	IdentifierDecl	addr_len = sizeof ( struct in_addr )		124976	0					
ANR	125005	IdentifierDeclType	size_t		124976	0					
ANR	125006	Identifier	addr_len		124976	1					
ANR	125007	AssignmentExpression	addr_len = sizeof ( struct in_addr )		124976	2		=			
ANR	125008	Identifier	addr_len		124976	0					
ANR	125009	SizeofExpression	sizeof ( struct in_addr )		124976	1					
ANR	125010	Sizeof	sizeof		124976	0					
ANR	125011	SizeofOperand	struct in_addr		124976	1					
ANR	125012	ExpressionStatement	addr_header [ addr_header_len ++ ] = 1	204:8:5154:5188	124976	2	True				
ANR	125013	AssignmentExpression	addr_header [ addr_header_len ++ ] = 1		124976	0		=			
ANR	125014	ArrayIndexing	addr_header [ addr_header_len ++ ]		124976	0					
ANR	125015	Identifier	addr_header		124976	0					
ANR	125016	PostIncDecOperationExpression	addr_header_len ++		124976	1					
ANR	125017	Identifier	addr_header_len		124976	0					
ANR	125018	IncDec	++		124976	1					
ANR	125019	PrimaryExpression	1		124976	1					
ANR	125020	ExpressionStatement	"memcpy ( addr_header + addr_header_len , & addr -> sin_addr , addr_len )"	205:8:5198:5262	124976	3	True				
ANR	125021	CallExpression	"memcpy ( addr_header + addr_header_len , & addr -> sin_addr , addr_len )"		124976	0					
ANR	125022	Callee	memcpy		124976	0					
ANR	125023	Identifier	memcpy		124976	0					
ANR	125024	ArgumentList	addr_header + addr_header_len		124976	1					
ANR	125025	Argument	addr_header + addr_header_len		124976	0					
ANR	125026	AdditiveExpression	addr_header + addr_header_len		124976	0		+			
ANR	125027	Identifier	addr_header		124976	0					
ANR	125028	Identifier	addr_header_len		124976	1					
ANR	125029	Argument	& addr -> sin_addr		124976	1					
ANR	125030	UnaryOperationExpression	& addr -> sin_addr		124976	0					
ANR	125031	UnaryOperator	&		124976	0					
ANR	125032	PtrMemberAccess	addr -> sin_addr		124976	1					
ANR	125033	Identifier	addr		124976	0					
ANR	125034	Identifier	sin_addr		124976	1					
ANR	125035	Argument	addr_len		124976	2					
ANR	125036	Identifier	addr_len		124976	0					
ANR	125037	ExpressionStatement	addr_header_len += addr_len	206:8:5272:5299	124976	4	True				
ANR	125038	AssignmentExpression	addr_header_len += addr_len		124976	0		+=			
ANR	125039	Identifier	addr_header_len		124976	0					
ANR	125040	Identifier	addr_len		124976	1					
ANR	125041	ExpressionStatement	"memcpy ( addr_header + addr_header_len , & addr -> sin_port , 2 )"	207:8:5309:5366	124976	5	True				
ANR	125042	CallExpression	"memcpy ( addr_header + addr_header_len , & addr -> sin_port , 2 )"		124976	0					
ANR	125043	Callee	memcpy		124976	0					
ANR	125044	Identifier	memcpy		124976	0					
ANR	125045	ArgumentList	addr_header + addr_header_len		124976	1					
ANR	125046	Argument	addr_header + addr_header_len		124976	0					
ANR	125047	AdditiveExpression	addr_header + addr_header_len		124976	0		+			
ANR	125048	Identifier	addr_header		124976	0					
ANR	125049	Identifier	addr_header_len		124976	1					
ANR	125050	Argument	& addr -> sin_port		124976	1					
ANR	125051	UnaryOperationExpression	& addr -> sin_port		124976	0					
ANR	125052	UnaryOperator	&		124976	0					
ANR	125053	PtrMemberAccess	addr -> sin_port		124976	1					
ANR	125054	Identifier	addr		124976	0					
ANR	125055	Identifier	sin_port		124976	1					
ANR	125056	Argument	2		124976	2					
ANR	125057	PrimaryExpression	2		124976	0					
ANR	125058	ExpressionStatement	addr_header_len += 2	208:8:5376:5396	124976	6	True				
ANR	125059	AssignmentExpression	addr_header_len += 2		124976	0		+=			
ANR	125060	Identifier	addr_header_len		124976	0					
ANR	125061	PrimaryExpression	2		124976	1					
ANR	125062	ElseStatement	else		124976	0					
ANR	125063	IfStatement	if ( in_addr -> ss_family == AF_INET6 )		124976	0					
ANR	125064	Condition	in_addr -> ss_family == AF_INET6	209:15:5413:5442	124976	0	True				
ANR	125065	EqualityExpression	in_addr -> ss_family == AF_INET6		124976	0		==			
ANR	125066	PtrMemberAccess	in_addr -> ss_family		124976	0					
ANR	125067	Identifier	in_addr		124976	0					
ANR	125068	Identifier	ss_family		124976	1					
ANR	125069	Identifier	AF_INET6		124976	1					
ANR	125070	CompoundStatement		13:8:573:624	124976	1					
ANR	125071	IdentifierDeclStatement	struct sockaddr_in6 * addr = ( struct sockaddr_in6 * ) in_addr ;	210:8:5455:5513	124976	0	True				
ANR	125072	IdentifierDecl	* addr = ( struct sockaddr_in6 * ) in_addr		124976	0					
ANR	125073	IdentifierDeclType	struct sockaddr_in6 *		124976	0					
ANR	125074	Identifier	addr		124976	1					
ANR	125075	AssignmentExpression	* addr = ( struct sockaddr_in6 * ) in_addr		124976	2		=			
ANR	125076	Identifier	addr		124976	0					
ANR	125077	CastExpression	( struct sockaddr_in6 * ) in_addr		124976	1					
ANR	125078	CastTarget	struct sockaddr_in6 *		124976	0					
ANR	125079	Identifier	in_addr		124976	1					
ANR	125080	IdentifierDeclStatement	size_t addr_len = sizeof ( struct in6_addr ) ;	211:8:5523:5574	124976	1	True				
ANR	125081	IdentifierDecl	addr_len = sizeof ( struct in6_addr )		124976	0					
ANR	125082	IdentifierDeclType	size_t		124976	0					
ANR	125083	Identifier	addr_len		124976	1					
ANR	125084	AssignmentExpression	addr_len = sizeof ( struct in6_addr )		124976	2		=			
ANR	125085	Identifier	addr_len		124976	0					
ANR	125086	SizeofExpression	sizeof ( struct in6_addr )		124976	1					
ANR	125087	Sizeof	sizeof		124976	0					
ANR	125088	SizeofOperand	struct in6_addr		124976	1					
ANR	125089	ExpressionStatement	addr_header [ addr_header_len ++ ] = 4	212:8:5584:5618	124976	2	True				
ANR	125090	AssignmentExpression	addr_header [ addr_header_len ++ ] = 4		124976	0		=			
ANR	125091	ArrayIndexing	addr_header [ addr_header_len ++ ]		124976	0					
ANR	125092	Identifier	addr_header		124976	0					
ANR	125093	PostIncDecOperationExpression	addr_header_len ++		124976	1					
ANR	125094	Identifier	addr_header_len		124976	0					
ANR	125095	IncDec	++		124976	1					
ANR	125096	PrimaryExpression	4		124976	1					
ANR	125097	ExpressionStatement	"memcpy ( addr_header + addr_header_len , & addr -> sin6_addr , addr_len )"	213:8:5628:5693	124976	3	True				
ANR	125098	CallExpression	"memcpy ( addr_header + addr_header_len , & addr -> sin6_addr , addr_len )"		124976	0					
ANR	125099	Callee	memcpy		124976	0					
ANR	125100	Identifier	memcpy		124976	0					
ANR	125101	ArgumentList	addr_header + addr_header_len		124976	1					
ANR	125102	Argument	addr_header + addr_header_len		124976	0					
ANR	125103	AdditiveExpression	addr_header + addr_header_len		124976	0		+			
ANR	125104	Identifier	addr_header		124976	0					
ANR	125105	Identifier	addr_header_len		124976	1					
ANR	125106	Argument	& addr -> sin6_addr		124976	1					
ANR	125107	UnaryOperationExpression	& addr -> sin6_addr		124976	0					
ANR	125108	UnaryOperator	&		124976	0					
ANR	125109	PtrMemberAccess	addr -> sin6_addr		124976	1					
ANR	125110	Identifier	addr		124976	0					
ANR	125111	Identifier	sin6_addr		124976	1					
ANR	125112	Argument	addr_len		124976	2					
ANR	125113	Identifier	addr_len		124976	0					
ANR	125114	ExpressionStatement	addr_header_len += addr_len	214:8:5703:5730	124976	4	True				
ANR	125115	AssignmentExpression	addr_header_len += addr_len		124976	0		+=			
ANR	125116	Identifier	addr_header_len		124976	0					
ANR	125117	Identifier	addr_len		124976	1					
ANR	125118	ExpressionStatement	"memcpy ( addr_header + addr_header_len , & addr -> sin6_port , 2 )"	215:8:5740:5798	124976	5	True				
ANR	125119	CallExpression	"memcpy ( addr_header + addr_header_len , & addr -> sin6_port , 2 )"		124976	0					
ANR	125120	Callee	memcpy		124976	0					
ANR	125121	Identifier	memcpy		124976	0					
ANR	125122	ArgumentList	addr_header + addr_header_len		124976	1					
ANR	125123	Argument	addr_header + addr_header_len		124976	0					
ANR	125124	AdditiveExpression	addr_header + addr_header_len		124976	0		+			
ANR	125125	Identifier	addr_header		124976	0					
ANR	125126	Identifier	addr_header_len		124976	1					
ANR	125127	Argument	& addr -> sin6_port		124976	1					
ANR	125128	UnaryOperationExpression	& addr -> sin6_port		124976	0					
ANR	125129	UnaryOperator	&		124976	0					
ANR	125130	PtrMemberAccess	addr -> sin6_port		124976	1					
ANR	125131	Identifier	addr		124976	0					
ANR	125132	Identifier	sin6_port		124976	1					
ANR	125133	Argument	2		124976	2					
ANR	125134	PrimaryExpression	2		124976	0					
ANR	125135	ExpressionStatement	addr_header_len += 2	216:8:5808:5828	124976	6	True				
ANR	125136	AssignmentExpression	addr_header_len += 2		124976	0		+=			
ANR	125137	Identifier	addr_header_len		124976	0					
ANR	125138	PrimaryExpression	2		124976	1					
ANR	125139	ElseStatement	else		124976	0					
ANR	125140	CompoundStatement		19:11:891:891	124976	0					
ANR	125141	ReturnStatement	return 0 ;	218:8:5851:5859	124976	0	True				
ANR	125142	PrimaryExpression	0		124976	0					
ANR	125143	ReturnStatement	return addr_header_len ;	220:4:5871:5893	124976	2	True				
ANR	125144	Identifier	addr_header_len		124976	0					
ANR	125145	ReturnType	static int		124976	1					
ANR	125146	Identifier	construct_udprelay_header		124976	2					
ANR	125147	ParameterList	"const struct sockaddr_storage * in_addr , char * addr_header"		124976	3					
ANR	125148	Parameter	const struct sockaddr_storage * in_addr	197:26:4864:4901	124976	0	True				
ANR	125149	ParameterType	const struct sockaddr_storage *		124976	0					
ANR	125150	Identifier	in_addr		124976	1					
ANR	125151	Parameter	char * addr_header	198:26:4930:4946	124976	1	True				
ANR	125152	ParameterType	char *		124976	0					
ANR	125153	Identifier	addr_header		124976	1					
ANR	125154	CFGEntryNode	ENTRY		124976		True				
ANR	125155	CFGExitNode	EXIT		124976		True				
ANR	125156	Symbol	in_addr		124976						
ANR	125157	Symbol	& addr -> sin6_addr		124976						
ANR	125158	Symbol	addr_header_len		124976						
ANR	125159	Symbol	addr_header		124976						
ANR	125160	Symbol	AF_INET		124976						
ANR	125161	Symbol	in_addr -> ss_family		124976						
ANR	125162	Symbol	AF_INET6		124976						
ANR	125163	Symbol	& addr -> sin_port		124976						
ANR	125164	Symbol	* addr_header		124976						
ANR	125165	Symbol	& addr -> sin6_port		124976						
ANR	125166	Symbol	& addr -> sin_addr		124976						
ANR	125167	Symbol	addr		124976						
ANR	125168	Symbol	* in_addr		124976						
ANR	125169	Symbol	addr_len		124976						
ANR	125170	Function	parse_udprelay_header	225:0:5906:9037							
ANR	125171	FunctionDef	"parse_udprelay_header (const char * buf , const size_t buf_len , char * host , char * port , struct sockaddr_storage * storage)"		125170	0					
ANR	125172	CompoundStatement		228:0:6058:9037	125170	0					
ANR	125173	IdentifierDeclStatement	const uint8_t atyp = * ( uint8_t * ) buf ;	229:4:6064:6100	125170	0	True				
ANR	125174	IdentifierDecl	atyp = * ( uint8_t * ) buf		125170	0					
ANR	125175	IdentifierDeclType	const uint8_t		125170	0					
ANR	125176	Identifier	atyp		125170	1					
ANR	125177	AssignmentExpression	atyp = * ( uint8_t * ) buf		125170	2		=			
ANR	125178	Identifier	atyp		125170	0					
ANR	125179	UnaryOperationExpression	* ( uint8_t * ) buf		125170	1					
ANR	125180	UnaryOperator	*		125170	0					
ANR	125181	CastExpression	( uint8_t * ) buf		125170	1					
ANR	125182	CastTarget	uint8_t *		125170	0					
ANR	125183	Identifier	buf		125170	1					
ANR	125184	IdentifierDeclStatement	int offset = 1 ;	230:4:6106:6128	125170	1	True				
ANR	125185	IdentifierDecl	offset = 1		125170	0					
ANR	125186	IdentifierDeclType	int		125170	0					
ANR	125187	Identifier	offset		125170	1					
ANR	125188	AssignmentExpression	offset = 1		125170	2		=			
ANR	125189	Identifier	offset		125170	0					
ANR	125190	PrimaryExpression	1		125170	1					
ANR	125191	IfStatement	if ( ( atyp & ADDRTYPE_MASK ) == 1 )		125170	2					
ANR	125192	Condition	( atyp & ADDRTYPE_MASK ) == 1	233:8:6171:6197	125170	0	True				
ANR	125193	EqualityExpression	( atyp & ADDRTYPE_MASK ) == 1		125170	0		==			
ANR	125194	BitAndExpression	atyp & ADDRTYPE_MASK		125170	0		&			
ANR	125195	Identifier	atyp		125170	0					
ANR	125196	Identifier	ADDRTYPE_MASK		125170	1					
ANR	125197	PrimaryExpression	1		125170	1					
ANR	125198	CompoundStatement		8:8:168:211	125170	1					
ANR	125199	IdentifierDeclStatement	size_t in_addr_len = sizeof ( struct in_addr ) ;	235:8:6227:6270	125170	0	True				
ANR	125200	IdentifierDecl	in_addr_len = sizeof ( struct in_addr )		125170	0					
ANR	125201	IdentifierDeclType	size_t		125170	0					
ANR	125202	Identifier	in_addr_len		125170	1					
ANR	125203	AssignmentExpression	in_addr_len = sizeof ( struct in_addr )		125170	2		=			
ANR	125204	Identifier	in_addr_len		125170	0					
ANR	125205	SizeofExpression	sizeof ( struct in_addr )		125170	1					
ANR	125206	Sizeof	sizeof		125170	0					
ANR	125207	SizeofOperand	struct in_addr		125170	1					
ANR	125208	IfStatement	if ( buf_len >= in_addr_len + 3 )		125170	1					
ANR	125209	Condition	buf_len >= in_addr_len + 3	236:12:6284:6309	125170	0	True				
ANR	125210	RelationalExpression	buf_len >= in_addr_len + 3		125170	0		>=			
ANR	125211	Identifier	buf_len		125170	0					
ANR	125212	AdditiveExpression	in_addr_len + 3		125170	1		+			
ANR	125213	Identifier	in_addr_len		125170	0					
ANR	125214	PrimaryExpression	3		125170	1					
ANR	125215	CompoundStatement		9:40:253:253	125170	1					
ANR	125216	IfStatement	if ( storage != NULL )		125170	0					
ANR	125217	Condition	storage != NULL	237:16:6330:6344	125170	0	True				
ANR	125218	EqualityExpression	storage != NULL		125170	0		!=			
ANR	125219	Identifier	storage		125170	0					
ANR	125220	Identifier	NULL		125170	1					
ANR	125221	CompoundStatement		11:16:306:362	125170	1					
ANR	125222	IdentifierDeclStatement	struct sockaddr_in * addr = ( struct sockaddr_in * ) storage ;	238:16:6365:6421	125170	0	True				
ANR	125223	IdentifierDecl	* addr = ( struct sockaddr_in * ) storage		125170	0					
ANR	125224	IdentifierDeclType	struct sockaddr_in *		125170	0					
ANR	125225	Identifier	addr		125170	1					
ANR	125226	AssignmentExpression	* addr = ( struct sockaddr_in * ) storage		125170	2		=			
ANR	125227	Identifier	addr		125170	0					
ANR	125228	CastExpression	( struct sockaddr_in * ) storage		125170	1					
ANR	125229	CastTarget	struct sockaddr_in *		125170	0					
ANR	125230	Identifier	storage		125170	1					
ANR	125231	ExpressionStatement	addr -> sin_family = AF_INET	239:16:6439:6465	125170	1	True				
ANR	125232	AssignmentExpression	addr -> sin_family = AF_INET		125170	0		=			
ANR	125233	PtrMemberAccess	addr -> sin_family		125170	0					
ANR	125234	Identifier	addr		125170	0					
ANR	125235	Identifier	sin_family		125170	1					
ANR	125236	Identifier	AF_INET		125170	1					
ANR	125237	ExpressionStatement	addr -> sin_addr = * ( struct in_addr * ) ( buf + offset )	240:16:6483:6535	125170	2	True				
ANR	125238	AssignmentExpression	addr -> sin_addr = * ( struct in_addr * ) ( buf + offset )		125170	0		=			
ANR	125239	PtrMemberAccess	addr -> sin_addr		125170	0					
ANR	125240	Identifier	addr		125170	0					
ANR	125241	Identifier	sin_addr		125170	1					
ANR	125242	UnaryOperationExpression	* ( struct in_addr * ) ( buf + offset )		125170	1					
ANR	125243	UnaryOperator	*		125170	0					
ANR	125244	CastExpression	( struct in_addr * ) ( buf + offset )		125170	1					
ANR	125245	CastTarget	struct in_addr *		125170	0					
ANR	125246	AdditiveExpression	buf + offset		125170	1		+			
ANR	125247	Identifier	buf		125170	0					
ANR	125248	Identifier	offset		125170	1					
ANR	125249	ExpressionStatement	addr -> sin_port = * ( uint16_t * ) ( buf + offset + in_addr_len )	241:16:6553:6613	125170	3	True				
ANR	125250	AssignmentExpression	addr -> sin_port = * ( uint16_t * ) ( buf + offset + in_addr_len )		125170	0		=			
ANR	125251	PtrMemberAccess	addr -> sin_port		125170	0					
ANR	125252	Identifier	addr		125170	0					
ANR	125253	Identifier	sin_port		125170	1					
ANR	125254	UnaryOperationExpression	* ( uint16_t * ) ( buf + offset + in_addr_len )		125170	1					
ANR	125255	UnaryOperator	*		125170	0					
ANR	125256	CastExpression	( uint16_t * ) ( buf + offset + in_addr_len )		125170	1					
ANR	125257	CastTarget	uint16_t *		125170	0					
ANR	125258	AdditiveExpression	buf + offset + in_addr_len		125170	1		+			
ANR	125259	Identifier	buf		125170	0					
ANR	125260	AdditiveExpression	offset + in_addr_len		125170	1		+			
ANR	125261	Identifier	offset		125170	0					
ANR	125262	Identifier	in_addr_len		125170	1					
ANR	125263	IfStatement	if ( host != NULL )		125170	1					
ANR	125264	Condition	host != NULL	243:16:6645:6656	125170	0	True				
ANR	125265	EqualityExpression	host != NULL		125170	0		!=			
ANR	125266	Identifier	host		125170	0					
ANR	125267	Identifier	NULL		125170	1					
ANR	125268	CompoundStatement		16:30:600:600	125170	1					
ANR	125269	ExpressionStatement	"inet_ntop ( AF_INET , ( const void * ) ( buf + offset ) , host , INET_ADDRSTRLEN )"	244:16:6677:6773	125170	0	True				
ANR	125270	CallExpression	"inet_ntop ( AF_INET , ( const void * ) ( buf + offset ) , host , INET_ADDRSTRLEN )"		125170	0					
ANR	125271	Callee	inet_ntop		125170	0					
ANR	125272	Identifier	inet_ntop		125170	0					
ANR	125273	ArgumentList	AF_INET		125170	1					
ANR	125274	Argument	AF_INET		125170	0					
ANR	125275	Identifier	AF_INET		125170	0					
ANR	125276	Argument	( const void * ) ( buf + offset )		125170	1					
ANR	125277	CastExpression	( const void * ) ( buf + offset )		125170	0					
ANR	125278	CastTarget	const void *		125170	0					
ANR	125279	AdditiveExpression	buf + offset		125170	1		+			
ANR	125280	Identifier	buf		125170	0					
ANR	125281	Identifier	offset		125170	1					
ANR	125282	Argument	host		125170	2					
ANR	125283	Identifier	host		125170	0					
ANR	125284	Argument	INET_ADDRSTRLEN		125170	3					
ANR	125285	Identifier	INET_ADDRSTRLEN		125170	0					
ANR	125286	ExpressionStatement	offset += in_addr_len	247:12:6801:6822	125170	2	True				
ANR	125287	AssignmentExpression	offset += in_addr_len		125170	0		+=			
ANR	125288	Identifier	offset		125170	0					
ANR	125289	Identifier	in_addr_len		125170	1					
ANR	125290	ElseStatement	else		125170	0					
ANR	125291	IfStatement	if ( ( atyp & ADDRTYPE_MASK ) == 3 )		125170	0					
ANR	125292	Condition	( atyp & ADDRTYPE_MASK ) == 3	249:15:6849:6875	125170	0	True				
ANR	125293	EqualityExpression	( atyp & ADDRTYPE_MASK ) == 3		125170	0		==			
ANR	125294	BitAndExpression	atyp & ADDRTYPE_MASK		125170	0		&			
ANR	125295	Identifier	atyp		125170	0					
ANR	125296	Identifier	ADDRTYPE_MASK		125170	1					
ANR	125297	PrimaryExpression	3		125170	1					
ANR	125298	CompoundStatement		24:8:852:897	125170	1					
ANR	125299	IdentifierDeclStatement	uint8_t name_len = * ( uint8_t * ) ( buf + offset ) ;	251:8:6911:6956	125170	0	True				
ANR	125300	IdentifierDecl	name_len = * ( uint8_t * ) ( buf + offset )		125170	0					
ANR	125301	IdentifierDeclType	uint8_t		125170	0					
ANR	125302	Identifier	name_len		125170	1					
ANR	125303	AssignmentExpression	name_len = * ( uint8_t * ) ( buf + offset )		125170	2		=			
ANR	125304	Identifier	name_len		125170	0					
ANR	125305	UnaryOperationExpression	* ( uint8_t * ) ( buf + offset )		125170	1					
ANR	125306	UnaryOperator	*		125170	0					
ANR	125307	CastExpression	( uint8_t * ) ( buf + offset )		125170	1					
ANR	125308	CastTarget	uint8_t *		125170	0					
ANR	125309	AdditiveExpression	buf + offset		125170	1		+			
ANR	125310	Identifier	buf		125170	0					
ANR	125311	Identifier	offset		125170	1					
ANR	125312	IfStatement	if ( name_len + 4 <= buf_len )		125170	1					
ANR	125313	Condition	name_len + 4 <= buf_len	252:12:6970:6992	125170	0	True				
ANR	125314	RelationalExpression	name_len + 4 <= buf_len		125170	0		<=			
ANR	125315	AdditiveExpression	name_len + 4		125170	0		+			
ANR	125316	Identifier	name_len		125170	0					
ANR	125317	PrimaryExpression	4		125170	1					
ANR	125318	Identifier	buf_len		125170	1					
ANR	125319	CompoundStatement		25:37:936:936	125170	1					
ANR	125320	IfStatement	if ( storage != NULL )		125170	0					
ANR	125321	Condition	storage != NULL	253:16:7013:7027	125170	0	True				
ANR	125322	EqualityExpression	storage != NULL		125170	0		!=			
ANR	125323	Identifier	storage		125170	0					
ANR	125324	Identifier	NULL		125170	1					
ANR	125325	CompoundStatement		28:16:1028:1045	125170	1					
ANR	125326	IdentifierDeclStatement	char tmp [ 257 ] = { 0 } ;	254:16:7048:7069	125170	0	True				
ANR	125327	IdentifierDecl	tmp [ 257 ] = { 0 }		125170	0					
ANR	125328	IdentifierDeclType	char [ 257 ]		125170	0					
ANR	125329	Identifier	tmp		125170	1					
ANR	125330	PrimaryExpression	257		125170	2					
ANR	125331	AssignmentExpression	tmp [ 257 ] = { 0 }		125170	3		=			
ANR	125332	Identifier	tmp		125170	0					
ANR	125333	InitializerList	0		125170	1					
ANR	125334	PrimaryExpression	0		125170	0					
ANR	125335	IdentifierDeclStatement	struct cork_ip ip ;	255:16:7087:7104	125170	1	True				
ANR	125336	IdentifierDecl	ip		125170	0					
ANR	125337	IdentifierDeclType	struct cork_ip		125170	0					
ANR	125338	Identifier	ip		125170	1					
ANR	125339	ExpressionStatement	"memcpy ( tmp , buf + offset + 1 , name_len )"	256:16:7122:7161	125170	2	True				
ANR	125340	CallExpression	"memcpy ( tmp , buf + offset + 1 , name_len )"		125170	0					
ANR	125341	Callee	memcpy		125170	0					
ANR	125342	Identifier	memcpy		125170	0					
ANR	125343	ArgumentList	tmp		125170	1					
ANR	125344	Argument	tmp		125170	0					
ANR	125345	Identifier	tmp		125170	0					
ANR	125346	Argument	buf + offset + 1		125170	1					
ANR	125347	AdditiveExpression	buf + offset + 1		125170	0		+			
ANR	125348	Identifier	buf		125170	0					
ANR	125349	AdditiveExpression	offset + 1		125170	1		+			
ANR	125350	Identifier	offset		125170	0					
ANR	125351	PrimaryExpression	1		125170	1					
ANR	125352	Argument	name_len		125170	2					
ANR	125353	Identifier	name_len		125170	0					
ANR	125354	IfStatement	"if ( cork_ip_init ( & ip , tmp ) != - 1 )"		125170	3					
ANR	125355	Condition	"cork_ip_init ( & ip , tmp ) != - 1"	257:20:7183:7210	125170	0	True				
ANR	125356	EqualityExpression	"cork_ip_init ( & ip , tmp ) != - 1"		125170	0		!=			
ANR	125357	CallExpression	"cork_ip_init ( & ip , tmp )"		125170	0					
ANR	125358	Callee	cork_ip_init		125170	0					
ANR	125359	Identifier	cork_ip_init		125170	0					
ANR	125360	ArgumentList	& ip		125170	1					
ANR	125361	Argument	& ip		125170	0					
ANR	125362	UnaryOperationExpression	& ip		125170	0					
ANR	125363	UnaryOperator	&		125170	0					
ANR	125364	Identifier	ip		125170	1					
ANR	125365	Argument	tmp		125170	1					
ANR	125366	Identifier	tmp		125170	0					
ANR	125367	UnaryOperationExpression	- 1		125170	1					
ANR	125368	UnaryOperator	-		125170	0					
ANR	125369	PrimaryExpression	1		125170	1					
ANR	125370	CompoundStatement		30:50:1154:1154	125170	1					
ANR	125371	IfStatement	if ( ip . version == 4 )		125170	0					
ANR	125372	Condition	ip . version == 4	258:24:7239:7253	125170	0	True				
ANR	125373	EqualityExpression	ip . version == 4		125170	0		==			
ANR	125374	MemberAccess	ip . version		125170	0					
ANR	125375	Identifier	ip		125170	0					
ANR	125376	Identifier	version		125170	1					
ANR	125377	PrimaryExpression	4		125170	1					
ANR	125378	CompoundStatement		32:24:1223:1279	125170	1					
ANR	125379	IdentifierDeclStatement	struct sockaddr_in * addr = ( struct sockaddr_in * ) storage ;	259:24:7282:7338	125170	0	True				
ANR	125380	IdentifierDecl	* addr = ( struct sockaddr_in * ) storage		125170	0					
ANR	125381	IdentifierDeclType	struct sockaddr_in *		125170	0					
ANR	125382	Identifier	addr		125170	1					
ANR	125383	AssignmentExpression	* addr = ( struct sockaddr_in * ) storage		125170	2		=			
ANR	125384	Identifier	addr		125170	0					
ANR	125385	CastExpression	( struct sockaddr_in * ) storage		125170	1					
ANR	125386	CastTarget	struct sockaddr_in *		125170	0					
ANR	125387	Identifier	storage		125170	1					
ANR	125388	ExpressionStatement	"inet_pton ( AF_INET , tmp , & ( addr -> sin_addr ) )"	260:24:7364:7406	125170	1	True				
ANR	125389	CallExpression	"inet_pton ( AF_INET , tmp , & ( addr -> sin_addr ) )"		125170	0					
ANR	125390	Callee	inet_pton		125170	0					
ANR	125391	Identifier	inet_pton		125170	0					
ANR	125392	ArgumentList	AF_INET		125170	1					
ANR	125393	Argument	AF_INET		125170	0					
ANR	125394	Identifier	AF_INET		125170	0					
ANR	125395	Argument	tmp		125170	1					
ANR	125396	Identifier	tmp		125170	0					
ANR	125397	Argument	& ( addr -> sin_addr )		125170	2					
ANR	125398	UnaryOperationExpression	& ( addr -> sin_addr )		125170	0					
ANR	125399	UnaryOperator	&		125170	0					
ANR	125400	PtrMemberAccess	addr -> sin_addr		125170	1					
ANR	125401	Identifier	addr		125170	0					
ANR	125402	Identifier	sin_addr		125170	1					
ANR	125403	ExpressionStatement	addr -> sin_port = * ( uint16_t * ) ( buf + offset + 1 + name_len )	261:24:7432:7493	125170	2	True				
ANR	125404	AssignmentExpression	addr -> sin_port = * ( uint16_t * ) ( buf + offset + 1 + name_len )		125170	0		=			
ANR	125405	PtrMemberAccess	addr -> sin_port		125170	0					
ANR	125406	Identifier	addr		125170	0					
ANR	125407	Identifier	sin_port		125170	1					
ANR	125408	UnaryOperationExpression	* ( uint16_t * ) ( buf + offset + 1 + name_len )		125170	1					
ANR	125409	UnaryOperator	*		125170	0					
ANR	125410	CastExpression	( uint16_t * ) ( buf + offset + 1 + name_len )		125170	1					
ANR	125411	CastTarget	uint16_t *		125170	0					
ANR	125412	AdditiveExpression	buf + offset + 1 + name_len		125170	1		+			
ANR	125413	Identifier	buf		125170	0					
ANR	125414	AdditiveExpression	offset + 1 + name_len		125170	1		+			
ANR	125415	Identifier	offset		125170	0					
ANR	125416	AdditiveExpression	1 + name_len		125170	1		+			
ANR	125417	PrimaryExpression	1		125170	0					
ANR	125418	Identifier	name_len		125170	1					
ANR	125419	ExpressionStatement	addr -> sin_family = AF_INET	262:24:7519:7545	125170	3	True				
ANR	125420	AssignmentExpression	addr -> sin_family = AF_INET		125170	0		=			
ANR	125421	PtrMemberAccess	addr -> sin_family		125170	0					
ANR	125422	Identifier	addr		125170	0					
ANR	125423	Identifier	sin_family		125170	1					
ANR	125424	Identifier	AF_INET		125170	1					
ANR	125425	ElseStatement	else		125170	0					
ANR	125426	IfStatement	if ( ip . version == 6 )		125170	0					
ANR	125427	Condition	ip . version == 6	263:31:7578:7592	125170	0	True				
ANR	125428	EqualityExpression	ip . version == 6		125170	0		==			
ANR	125429	MemberAccess	ip . version		125170	0					
ANR	125430	Identifier	ip		125170	0					
ANR	125431	Identifier	version		125170	1					
ANR	125432	PrimaryExpression	6		125170	1					
ANR	125433	CompoundStatement		37:24:1562:1620	125170	1					
ANR	125434	IdentifierDeclStatement	struct sockaddr_in6 * addr = ( struct sockaddr_in6 * ) storage ;	264:24:7621:7679	125170	0	True				
ANR	125435	IdentifierDecl	* addr = ( struct sockaddr_in6 * ) storage		125170	0					
ANR	125436	IdentifierDeclType	struct sockaddr_in6 *		125170	0					
ANR	125437	Identifier	addr		125170	1					
ANR	125438	AssignmentExpression	* addr = ( struct sockaddr_in6 * ) storage		125170	2		=			
ANR	125439	Identifier	addr		125170	0					
ANR	125440	CastExpression	( struct sockaddr_in6 * ) storage		125170	1					
ANR	125441	CastTarget	struct sockaddr_in6 *		125170	0					
ANR	125442	Identifier	storage		125170	1					
ANR	125443	ExpressionStatement	"inet_pton ( AF_INET , tmp , & ( addr -> sin6_addr ) )"	265:24:7705:7748	125170	1	True				
ANR	125444	CallExpression	"inet_pton ( AF_INET , tmp , & ( addr -> sin6_addr ) )"		125170	0					
ANR	125445	Callee	inet_pton		125170	0					
ANR	125446	Identifier	inet_pton		125170	0					
ANR	125447	ArgumentList	AF_INET		125170	1					
ANR	125448	Argument	AF_INET		125170	0					
ANR	125449	Identifier	AF_INET		125170	0					
ANR	125450	Argument	tmp		125170	1					
ANR	125451	Identifier	tmp		125170	0					
ANR	125452	Argument	& ( addr -> sin6_addr )		125170	2					
ANR	125453	UnaryOperationExpression	& ( addr -> sin6_addr )		125170	0					
ANR	125454	UnaryOperator	&		125170	0					
ANR	125455	PtrMemberAccess	addr -> sin6_addr		125170	1					
ANR	125456	Identifier	addr		125170	0					
ANR	125457	Identifier	sin6_addr		125170	1					
ANR	125458	ExpressionStatement	addr -> sin6_port = * ( uint16_t * ) ( buf + offset + 1 + name_len )	266:24:7774:7836	125170	2	True				
ANR	125459	AssignmentExpression	addr -> sin6_port = * ( uint16_t * ) ( buf + offset + 1 + name_len )		125170	0		=			
ANR	125460	PtrMemberAccess	addr -> sin6_port		125170	0					
ANR	125461	Identifier	addr		125170	0					
ANR	125462	Identifier	sin6_port		125170	1					
ANR	125463	UnaryOperationExpression	* ( uint16_t * ) ( buf + offset + 1 + name_len )		125170	1					
ANR	125464	UnaryOperator	*		125170	0					
ANR	125465	CastExpression	( uint16_t * ) ( buf + offset + 1 + name_len )		125170	1					
ANR	125466	CastTarget	uint16_t *		125170	0					
ANR	125467	AdditiveExpression	buf + offset + 1 + name_len		125170	1		+			
ANR	125468	Identifier	buf		125170	0					
ANR	125469	AdditiveExpression	offset + 1 + name_len		125170	1		+			
ANR	125470	Identifier	offset		125170	0					
ANR	125471	AdditiveExpression	1 + name_len		125170	1		+			
ANR	125472	PrimaryExpression	1		125170	0					
ANR	125473	Identifier	name_len		125170	1					
ANR	125474	ExpressionStatement	addr -> sin6_family = AF_INET6	267:24:7862:7890	125170	3	True				
ANR	125475	AssignmentExpression	addr -> sin6_family = AF_INET6		125170	0		=			
ANR	125476	PtrMemberAccess	addr -> sin6_family		125170	0					
ANR	125477	Identifier	addr		125170	0					
ANR	125478	Identifier	sin6_family		125170	1					
ANR	125479	Identifier	AF_INET6		125170	1					
ANR	125480	IfStatement	if ( host != NULL )		125170	1					
ANR	125481	Condition	host != NULL	271:16:7962:7973	125170	0	True				
ANR	125482	EqualityExpression	host != NULL		125170	0		!=			
ANR	125483	Identifier	host		125170	0					
ANR	125484	Identifier	NULL		125170	1					
ANR	125485	CompoundStatement		44:30:1917:1917	125170	1					
ANR	125486	ExpressionStatement	"memcpy ( host , buf + offset + 1 , name_len )"	272:16:7994:8034	125170	0	True				
ANR	125487	CallExpression	"memcpy ( host , buf + offset + 1 , name_len )"		125170	0					
ANR	125488	Callee	memcpy		125170	0					
ANR	125489	Identifier	memcpy		125170	0					
ANR	125490	ArgumentList	host		125170	1					
ANR	125491	Argument	host		125170	0					
ANR	125492	Identifier	host		125170	0					
ANR	125493	Argument	buf + offset + 1		125170	1					
ANR	125494	AdditiveExpression	buf + offset + 1		125170	0		+			
ANR	125495	Identifier	buf		125170	0					
ANR	125496	AdditiveExpression	offset + 1		125170	1		+			
ANR	125497	Identifier	offset		125170	0					
ANR	125498	PrimaryExpression	1		125170	1					
ANR	125499	Argument	name_len		125170	2					
ANR	125500	Identifier	name_len		125170	0					
ANR	125501	ExpressionStatement	offset += 1 + name_len	274:12:8062:8084	125170	2	True				
ANR	125502	AssignmentExpression	offset += 1 + name_len		125170	0		+=			
ANR	125503	Identifier	offset		125170	0					
ANR	125504	AdditiveExpression	1 + name_len		125170	1		+			
ANR	125505	PrimaryExpression	1		125170	0					
ANR	125506	Identifier	name_len		125170	1					
ANR	125507	ElseStatement	else		125170	0					
ANR	125508	IfStatement	if ( ( atyp & ADDRTYPE_MASK ) == 4 )		125170	0					
ANR	125509	Condition	( atyp & ADDRTYPE_MASK ) == 4	276:15:8111:8137	125170	0	True				
ANR	125510	EqualityExpression	( atyp & ADDRTYPE_MASK ) == 4		125170	0		==			
ANR	125511	BitAndExpression	atyp & ADDRTYPE_MASK		125170	0		&			
ANR	125512	Identifier	atyp		125170	0					
ANR	125513	Identifier	ADDRTYPE_MASK		125170	1					
ANR	125514	PrimaryExpression	4		125170	1					
ANR	125515	CompoundStatement		51:8:2108:2153	125170	1					
ANR	125516	IdentifierDeclStatement	size_t in6_addr_len = sizeof ( struct in6_addr ) ;	278:8:8167:8212	125170	0	True				
ANR	125517	IdentifierDecl	in6_addr_len = sizeof ( struct in6_addr )		125170	0					
ANR	125518	IdentifierDeclType	size_t		125170	0					
ANR	125519	Identifier	in6_addr_len		125170	1					
ANR	125520	AssignmentExpression	in6_addr_len = sizeof ( struct in6_addr )		125170	2		=			
ANR	125521	Identifier	in6_addr_len		125170	0					
ANR	125522	SizeofExpression	sizeof ( struct in6_addr )		125170	1					
ANR	125523	Sizeof	sizeof		125170	0					
ANR	125524	SizeofOperand	struct in6_addr		125170	1					
ANR	125525	IfStatement	if ( buf_len >= in6_addr_len + 3 )		125170	1					
ANR	125526	Condition	buf_len >= in6_addr_len + 3	279:12:8226:8252	125170	0	True				
ANR	125527	RelationalExpression	buf_len >= in6_addr_len + 3		125170	0		>=			
ANR	125528	Identifier	buf_len		125170	0					
ANR	125529	AdditiveExpression	in6_addr_len + 3		125170	1		+			
ANR	125530	Identifier	in6_addr_len		125170	0					
ANR	125531	PrimaryExpression	3		125170	1					
ANR	125532	CompoundStatement		52:41:2196:2196	125170	1					
ANR	125533	IfStatement	if ( storage != NULL )		125170	0					
ANR	125534	Condition	storage != NULL	280:16:8273:8287	125170	0	True				
ANR	125535	EqualityExpression	storage != NULL		125170	0		!=			
ANR	125536	Identifier	storage		125170	0					
ANR	125537	Identifier	NULL		125170	1					
ANR	125538	CompoundStatement		54:16:2249:2307	125170	1					
ANR	125539	IdentifierDeclStatement	struct sockaddr_in6 * addr = ( struct sockaddr_in6 * ) storage ;	281:16:8308:8366	125170	0	True				
ANR	125540	IdentifierDecl	* addr = ( struct sockaddr_in6 * ) storage		125170	0					
ANR	125541	IdentifierDeclType	struct sockaddr_in6 *		125170	0					
ANR	125542	Identifier	addr		125170	1					
ANR	125543	AssignmentExpression	* addr = ( struct sockaddr_in6 * ) storage		125170	2		=			
ANR	125544	Identifier	addr		125170	0					
ANR	125545	CastExpression	( struct sockaddr_in6 * ) storage		125170	1					
ANR	125546	CastTarget	struct sockaddr_in6 *		125170	0					
ANR	125547	Identifier	storage		125170	1					
ANR	125548	ExpressionStatement	addr -> sin6_family = AF_INET6	282:16:8384:8412	125170	1	True				
ANR	125549	AssignmentExpression	addr -> sin6_family = AF_INET6		125170	0		=			
ANR	125550	PtrMemberAccess	addr -> sin6_family		125170	0					
ANR	125551	Identifier	addr		125170	0					
ANR	125552	Identifier	sin6_family		125170	1					
ANR	125553	Identifier	AF_INET6		125170	1					
ANR	125554	ExpressionStatement	addr -> sin6_addr = * ( struct in6_addr * ) ( buf + offset )	283:16:8430:8484	125170	2	True				
ANR	125555	AssignmentExpression	addr -> sin6_addr = * ( struct in6_addr * ) ( buf + offset )		125170	0		=			
ANR	125556	PtrMemberAccess	addr -> sin6_addr		125170	0					
ANR	125557	Identifier	addr		125170	0					
ANR	125558	Identifier	sin6_addr		125170	1					
ANR	125559	UnaryOperationExpression	* ( struct in6_addr * ) ( buf + offset )		125170	1					
ANR	125560	UnaryOperator	*		125170	0					
ANR	125561	CastExpression	( struct in6_addr * ) ( buf + offset )		125170	1					
ANR	125562	CastTarget	struct in6_addr *		125170	0					
ANR	125563	AdditiveExpression	buf + offset		125170	1		+			
ANR	125564	Identifier	buf		125170	0					
ANR	125565	Identifier	offset		125170	1					
ANR	125566	ExpressionStatement	addr -> sin6_port = * ( uint16_t * ) ( buf + offset + in6_addr_len )	284:16:8502:8564	125170	3	True				
ANR	125567	AssignmentExpression	addr -> sin6_port = * ( uint16_t * ) ( buf + offset + in6_addr_len )		125170	0		=			
ANR	125568	PtrMemberAccess	addr -> sin6_port		125170	0					
ANR	125569	Identifier	addr		125170	0					
ANR	125570	Identifier	sin6_port		125170	1					
ANR	125571	UnaryOperationExpression	* ( uint16_t * ) ( buf + offset + in6_addr_len )		125170	1					
ANR	125572	UnaryOperator	*		125170	0					
ANR	125573	CastExpression	( uint16_t * ) ( buf + offset + in6_addr_len )		125170	1					
ANR	125574	CastTarget	uint16_t *		125170	0					
ANR	125575	AdditiveExpression	buf + offset + in6_addr_len		125170	1		+			
ANR	125576	Identifier	buf		125170	0					
ANR	125577	AdditiveExpression	offset + in6_addr_len		125170	1		+			
ANR	125578	Identifier	offset		125170	0					
ANR	125579	Identifier	in6_addr_len		125170	1					
ANR	125580	IfStatement	if ( host != NULL )		125170	1					
ANR	125581	Condition	host != NULL	286:16:8596:8607	125170	0	True				
ANR	125582	EqualityExpression	host != NULL		125170	0		!=			
ANR	125583	Identifier	host		125170	0					
ANR	125584	Identifier	NULL		125170	1					
ANR	125585	CompoundStatement		59:30:2551:2551	125170	1					
ANR	125586	ExpressionStatement	"inet_ntop ( AF_INET6 , ( const void * ) ( buf + offset ) , host , INET6_ADDRSTRLEN )"	287:16:8628:8726	125170	0	True				
ANR	125587	CallExpression	"inet_ntop ( AF_INET6 , ( const void * ) ( buf + offset ) , host , INET6_ADDRSTRLEN )"		125170	0					
ANR	125588	Callee	inet_ntop		125170	0					
ANR	125589	Identifier	inet_ntop		125170	0					
ANR	125590	ArgumentList	AF_INET6		125170	1					
ANR	125591	Argument	AF_INET6		125170	0					
ANR	125592	Identifier	AF_INET6		125170	0					
ANR	125593	Argument	( const void * ) ( buf + offset )		125170	1					
ANR	125594	CastExpression	( const void * ) ( buf + offset )		125170	0					
ANR	125595	CastTarget	const void *		125170	0					
ANR	125596	AdditiveExpression	buf + offset		125170	1		+			
ANR	125597	Identifier	buf		125170	0					
ANR	125598	Identifier	offset		125170	1					
ANR	125599	Argument	host		125170	2					
ANR	125600	Identifier	host		125170	0					
ANR	125601	Argument	INET6_ADDRSTRLEN		125170	3					
ANR	125602	Identifier	INET6_ADDRSTRLEN		125170	0					
ANR	125603	ExpressionStatement	offset += in6_addr_len	290:12:8754:8776	125170	2	True				
ANR	125604	AssignmentExpression	offset += in6_addr_len		125170	0		+=			
ANR	125605	Identifier	offset		125170	0					
ANR	125606	Identifier	in6_addr_len		125170	1					
ANR	125607	IfStatement	if ( offset == 1 )		125170	3					
ANR	125608	Condition	offset == 1	294:8:8803:8813	125170	0	True				
ANR	125609	EqualityExpression	offset == 1		125170	0		==			
ANR	125610	Identifier	offset		125170	0					
ANR	125611	PrimaryExpression	1		125170	1					
ANR	125612	CompoundStatement		67:21:2757:2757	125170	1					
ANR	125613	ExpressionStatement	"LOGE ( ""[udp] invalid header with addr type %d"" , atyp )"	295:8:8826:8878	125170	0	True				
ANR	125614	CallExpression	"LOGE ( ""[udp] invalid header with addr type %d"" , atyp )"		125170	0					
ANR	125615	Callee	LOGE		125170	0					
ANR	125616	Identifier	LOGE		125170	0					
ANR	125617	ArgumentList	"""[udp] invalid header with addr type %d"""		125170	1					
ANR	125618	Argument	"""[udp] invalid header with addr type %d"""		125170	0					
ANR	125619	PrimaryExpression	"""[udp] invalid header with addr type %d"""		125170	0					
ANR	125620	Argument	atyp		125170	1					
ANR	125621	Identifier	atyp		125170	0					
ANR	125622	ReturnStatement	return 0 ;	296:8:8888:8896	125170	1	True				
ANR	125623	PrimaryExpression	0		125170	0					
ANR	125624	IfStatement	if ( port != NULL )		125170	4					
ANR	125625	Condition	port != NULL	299:8:8913:8924	125170	0	True				
ANR	125626	EqualityExpression	port != NULL		125170	0		!=			
ANR	125627	Identifier	port		125170	0					
ANR	125628	Identifier	NULL		125170	1					
ANR	125629	CompoundStatement		72:22:2868:2868	125170	1					
ANR	125630	ExpressionStatement	"sprintf ( port , ""%d"" , ntohs ( * ( uint16_t * ) ( buf + offset ) ) )"	300:8:8937:8992	125170	0	True				
ANR	125631	CallExpression	"sprintf ( port , ""%d"" , ntohs ( * ( uint16_t * ) ( buf + offset ) ) )"		125170	0					
ANR	125632	Callee	sprintf		125170	0					
ANR	125633	Identifier	sprintf		125170	0					
ANR	125634	ArgumentList	port		125170	1					
ANR	125635	Argument	port		125170	0					
ANR	125636	Identifier	port		125170	0					
ANR	125637	Argument	"""%d"""		125170	1					
ANR	125638	PrimaryExpression	"""%d"""		125170	0					
ANR	125639	Argument	ntohs ( * ( uint16_t * ) ( buf + offset ) )		125170	2					
ANR	125640	CallExpression	ntohs ( * ( uint16_t * ) ( buf + offset ) )		125170	0					
ANR	125641	Callee	ntohs		125170	0					
ANR	125642	Identifier	ntohs		125170	0					
ANR	125643	ArgumentList	* ( uint16_t * ) ( buf + offset )		125170	1					
ANR	125644	Argument	* ( uint16_t * ) ( buf + offset )		125170	0					
ANR	125645	UnaryOperationExpression	* ( uint16_t * ) ( buf + offset )		125170	0					
ANR	125646	UnaryOperator	*		125170	0					
ANR	125647	CastExpression	( uint16_t * ) ( buf + offset )		125170	1					
ANR	125648	CastTarget	uint16_t *		125170	0					
ANR	125649	AdditiveExpression	buf + offset		125170	1		+			
ANR	125650	Identifier	buf		125170	0					
ANR	125651	Identifier	offset		125170	1					
ANR	125652	ExpressionStatement	offset += 2	302:4:9004:9015	125170	5	True				
ANR	125653	AssignmentExpression	offset += 2		125170	0		+=			
ANR	125654	Identifier	offset		125170	0					
ANR	125655	PrimaryExpression	2		125170	1					
ANR	125656	ReturnStatement	return offset ;	304:4:9022:9035	125170	6	True				
ANR	125657	Identifier	offset		125170	0					
ANR	125658	ReturnType	static int		125170	1					
ANR	125659	Identifier	parse_udprelay_header		125170	2					
ANR	125660	ParameterList	"const char * buf , const size_t buf_len , char * host , char * port , struct sockaddr_storage * storage"		125170	3					
ANR	125661	Parameter	const char * buf	226:22:5939:5953	125170	0	True				
ANR	125662	ParameterType	const char *		125170	0					
ANR	125663	Identifier	buf		125170	1					
ANR	125664	Parameter	const size_t buf_len	226:39:5956:5975	125170	1	True				
ANR	125665	ParameterType	const size_t		125170	0					
ANR	125666	Identifier	buf_len		125170	1					
ANR	125667	Parameter	char * host	227:22:6000:6009	125170	2	True				
ANR	125668	ParameterType	char *		125170	0					
ANR	125669	Identifier	host		125170	1					
ANR	125670	Parameter	char * port	227:34:6012:6021	125170	3	True				
ANR	125671	ParameterType	char *		125170	0					
ANR	125672	Identifier	port		125170	1					
ANR	125673	Parameter	struct sockaddr_storage * storage	227:46:6024:6055	125170	4	True				
ANR	125674	ParameterType	struct sockaddr_storage *		125170	0					
ANR	125675	Identifier	storage		125170	1					
ANR	125676	CFGEntryNode	ENTRY		125170		True				
ANR	125677	CFGExitNode	EXIT		125170		True				
ANR	125678	Symbol	& addr -> sin6_addr		125170						
ANR	125679	Symbol	addr -> sin6_addr		125170						
ANR	125680	Symbol	addr -> sin_family		125170						
ANR	125681	Symbol	* name_len		125170						
ANR	125682	Symbol	addr -> sin6_family		125170						
ANR	125683	Symbol	ADDRTYPE_MASK		125170						
ANR	125684	Symbol	addr -> sin_port		125170						
ANR	125685	Symbol	in6_addr_len		125170						
ANR	125686	Symbol	* ( struct in6_addr * ) ( buf + offset )		125170						
ANR	125687	Symbol	* ( uint16_t * ) ( buf + offset )		125170						
ANR	125688	Symbol	storage		125170						
ANR	125689	Symbol	ip . version		125170						
ANR	125690	Symbol	* ( uint16_t * ) ( buf + offset + 1 + name_len )		125170						
ANR	125691	Symbol	tmp		125170						
ANR	125692	Symbol	* ( uint16_t * ) ( buf + offset + in6_addr_len )		125170						
ANR	125693	Symbol	host		125170						
ANR	125694	Symbol	& addr -> sin_addr		125170						
ANR	125695	Symbol	buf_len		125170						
ANR	125696	Symbol	name_len		125170						
ANR	125697	Symbol	addr		125170						
ANR	125698	Symbol	* buf		125170						
ANR	125699	Symbol	NULL		125170						
ANR	125700	Symbol	offset		125170						
ANR	125701	Symbol	* in_addr_len		125170						
ANR	125702	Symbol	atyp		125170						
ANR	125703	Symbol	ip		125170						
ANR	125704	Symbol	INET_ADDRSTRLEN		125170						
ANR	125705	Symbol	* in6_addr_len		125170						
ANR	125706	Symbol	AF_INET		125170						
ANR	125707	Symbol	INET6_ADDRSTRLEN		125170						
ANR	125708	Symbol	AF_INET6		125170						
ANR	125709	Symbol	* ( uint8_t * ) buf		125170						
ANR	125710	Symbol	addr -> sin_addr		125170						
ANR	125711	Symbol	& ip		125170						
ANR	125712	Symbol	ntohs		125170						
ANR	125713	Symbol	buf		125170						
ANR	125714	Symbol	port		125170						
ANR	125715	Symbol	* ( uint16_t * ) ( buf + offset + in_addr_len )		125170						
ANR	125716	Symbol	* offset		125170						
ANR	125717	Symbol	* ( struct in_addr * ) ( buf + offset )		125170						
ANR	125718	Symbol	* ( uint8_t * ) ( buf + offset )		125170						
ANR	125719	Symbol	cork_ip_init		125170						
ANR	125720	Symbol	in_addr_len		125170						
ANR	125721	Symbol	* addr		125170						
ANR	125722	Symbol	addr -> sin6_port		125170						
ANR	125723	Function	get_addr_str	307:0:9040:10010							
ANR	125724	FunctionDef	get_addr_str (const struct sockaddr * sa)		125723	0					
ANR	125725	CompoundStatement		309:0:9094:10010	125723	0					
ANR	125726	Statement	static	310:4:9100:9105	125723	0	True				
ANR	125727	IdentifierDeclStatement	char s [ SS_ADDRSTRLEN ] ;	310:11:9107:9128	125723	1	True				
ANR	125728	IdentifierDecl	s [ SS_ADDRSTRLEN ]		125723	0					
ANR	125729	IdentifierDeclType	char [ SS_ADDRSTRLEN ]		125723	0					
ANR	125730	Identifier	s		125723	1					
ANR	125731	Identifier	SS_ADDRSTRLEN		125723	2					
ANR	125732	ExpressionStatement	"memset ( s , 0 , SS_ADDRSTRLEN )"	311:4:9134:9161	125723	2	True				
ANR	125733	CallExpression	"memset ( s , 0 , SS_ADDRSTRLEN )"		125723	0					
ANR	125734	Callee	memset		125723	0					
ANR	125735	Identifier	memset		125723	0					
ANR	125736	ArgumentList	s		125723	1					
ANR	125737	Argument	s		125723	0					
ANR	125738	Identifier	s		125723	0					
ANR	125739	Argument	0		125723	1					
ANR	125740	PrimaryExpression	0		125723	0					
ANR	125741	Argument	SS_ADDRSTRLEN		125723	2					
ANR	125742	Identifier	SS_ADDRSTRLEN		125723	0					
ANR	125743	IdentifierDeclStatement	char addr [ INET6_ADDRSTRLEN ] = { 0 } ;	312:4:9167:9202	125723	3	True				
ANR	125744	IdentifierDecl	addr [ INET6_ADDRSTRLEN ] = { 0 }		125723	0					
ANR	125745	IdentifierDeclType	char [ INET6_ADDRSTRLEN ]		125723	0					
ANR	125746	Identifier	addr		125723	1					
ANR	125747	Identifier	INET6_ADDRSTRLEN		125723	2					
ANR	125748	AssignmentExpression	addr [ INET6_ADDRSTRLEN ] = { 0 }		125723	3		=			
ANR	125749	Identifier	INET6_ADDRSTRLEN		125723	0					
ANR	125750	InitializerList	0		125723	1					
ANR	125751	PrimaryExpression	0		125723	0					
ANR	125752	IdentifierDeclStatement	char port [ PORTSTRLEN ] = { 0 } ;	313:4:9208:9243	125723	4	True				
ANR	125753	IdentifierDecl	port [ PORTSTRLEN ] = { 0 }		125723	0					
ANR	125754	IdentifierDeclType	char [ PORTSTRLEN ]		125723	0					
ANR	125755	Identifier	port		125723	1					
ANR	125756	Identifier	PORTSTRLEN		125723	2					
ANR	125757	AssignmentExpression	port [ PORTSTRLEN ] = { 0 }		125723	3		=			
ANR	125758	Identifier	PORTSTRLEN		125723	0					
ANR	125759	InitializerList	0		125723	1					
ANR	125760	PrimaryExpression	0		125723	0					
ANR	125761	IdentifierDeclStatement	uint16_t p ;	314:4:9249:9259	125723	5	True				
ANR	125762	IdentifierDecl	p		125723	0					
ANR	125763	IdentifierDeclType	uint16_t		125723	0					
ANR	125764	Identifier	p		125723	1					
ANR	125765	SwitchStatement	switch ( sa -> sa_family )		125723	6					
ANR	125766	Condition	sa -> sa_family	316:12:9274:9286	125723	0	True				
ANR	125767	PtrMemberAccess	sa -> sa_family		125723	0					
ANR	125768	Identifier	sa		125723	0					
ANR	125769	Identifier	sa_family		125723	1					
ANR	125770	CompoundStatement		8:27:194:194	125723	1					
ANR	125771	Label	case AF_INET :	317:4:9295:9307	125723	0	True				
ANR	125772	Identifier	AF_INET		125723	0					
ANR	125773	ExpressionStatement	"inet_ntop ( AF_INET , & ( ( ( struct sockaddr_in * ) sa ) -> sin_addr ) , addr , INET_ADDRSTRLEN )"	318:8:9317:9416	125723	1	True				
ANR	125774	CallExpression	"inet_ntop ( AF_INET , & ( ( ( struct sockaddr_in * ) sa ) -> sin_addr ) , addr , INET_ADDRSTRLEN )"		125723	0					
ANR	125775	Callee	inet_ntop		125723	0					
ANR	125776	Identifier	inet_ntop		125723	0					
ANR	125777	ArgumentList	AF_INET		125723	1					
ANR	125778	Argument	AF_INET		125723	0					
ANR	125779	Identifier	AF_INET		125723	0					
ANR	125780	Argument	& ( ( ( struct sockaddr_in * ) sa ) -> sin_addr )		125723	1					
ANR	125781	UnaryOperationExpression	& ( ( ( struct sockaddr_in * ) sa ) -> sin_addr )		125723	0					
ANR	125782	UnaryOperator	&		125723	0					
ANR	125783	PtrMemberAccess	( ( struct sockaddr_in * ) sa ) -> sin_addr		125723	1					
ANR	125784	CastExpression	( struct sockaddr_in * ) sa		125723	0					
ANR	125785	CastTarget	struct sockaddr_in *		125723	0					
ANR	125786	Identifier	sa		125723	1					
ANR	125787	Identifier	sin_addr		125723	1					
ANR	125788	Argument	addr		125723	2					
ANR	125789	Identifier	addr		125723	0					
ANR	125790	Argument	INET_ADDRSTRLEN		125723	3					
ANR	125791	Identifier	INET_ADDRSTRLEN		125723	0					
ANR	125792	ExpressionStatement	p = ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )	320:8:9426:9473	125723	2	True				
ANR	125793	AssignmentExpression	p = ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )		125723	0		=			
ANR	125794	Identifier	p		125723	0					
ANR	125795	CallExpression	ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )		125723	1					
ANR	125796	Callee	ntohs		125723	0					
ANR	125797	Identifier	ntohs		125723	0					
ANR	125798	ArgumentList	( ( struct sockaddr_in * ) sa ) -> sin_port		125723	1					
ANR	125799	Argument	( ( struct sockaddr_in * ) sa ) -> sin_port		125723	0					
ANR	125800	PtrMemberAccess	( ( struct sockaddr_in * ) sa ) -> sin_port		125723	0					
ANR	125801	CastExpression	( struct sockaddr_in * ) sa		125723	0					
ANR	125802	CastTarget	struct sockaddr_in *		125723	0					
ANR	125803	Identifier	sa		125723	1					
ANR	125804	Identifier	sin_port		125723	1					
ANR	125805	ExpressionStatement	"sprintf ( port , ""%d"" , p )"	321:8:9483:9505	125723	3	True				
ANR	125806	CallExpression	"sprintf ( port , ""%d"" , p )"		125723	0					
ANR	125807	Callee	sprintf		125723	0					
ANR	125808	Identifier	sprintf		125723	0					
ANR	125809	ArgumentList	port		125723	1					
ANR	125810	Argument	port		125723	0					
ANR	125811	Identifier	port		125723	0					
ANR	125812	Argument	"""%d"""		125723	1					
ANR	125813	PrimaryExpression	"""%d"""		125723	0					
ANR	125814	Argument	p		125723	2					
ANR	125815	Identifier	p		125723	0					
ANR	125816	BreakStatement	break ;	322:8:9515:9520	125723	4	True				
ANR	125817	Label	case AF_INET6 :	324:4:9527:9540	125723	5	True				
ANR	125818	Identifier	AF_INET6		125723	0					
ANR	125819	ExpressionStatement	"inet_ntop ( AF_INET6 , & ( ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr ) , addr , INET6_ADDRSTRLEN )"	325:8:9550:9653	125723	6	True				
ANR	125820	CallExpression	"inet_ntop ( AF_INET6 , & ( ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr ) , addr , INET6_ADDRSTRLEN )"		125723	0					
ANR	125821	Callee	inet_ntop		125723	0					
ANR	125822	Identifier	inet_ntop		125723	0					
ANR	125823	ArgumentList	AF_INET6		125723	1					
ANR	125824	Argument	AF_INET6		125723	0					
ANR	125825	Identifier	AF_INET6		125723	0					
ANR	125826	Argument	& ( ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr )		125723	1					
ANR	125827	UnaryOperationExpression	& ( ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr )		125723	0					
ANR	125828	UnaryOperator	&		125723	0					
ANR	125829	PtrMemberAccess	( ( struct sockaddr_in6 * ) sa ) -> sin6_addr		125723	1					
ANR	125830	CastExpression	( struct sockaddr_in6 * ) sa		125723	0					
ANR	125831	CastTarget	struct sockaddr_in6 *		125723	0					
ANR	125832	Identifier	sa		125723	1					
ANR	125833	Identifier	sin6_addr		125723	1					
ANR	125834	Argument	addr		125723	2					
ANR	125835	Identifier	addr		125723	0					
ANR	125836	Argument	INET6_ADDRSTRLEN		125723	3					
ANR	125837	Identifier	INET6_ADDRSTRLEN		125723	0					
ANR	125838	ExpressionStatement	p = ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )	327:8:9663:9710	125723	7	True				
ANR	125839	AssignmentExpression	p = ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )		125723	0		=			
ANR	125840	Identifier	p		125723	0					
ANR	125841	CallExpression	ntohs ( ( ( struct sockaddr_in * ) sa ) -> sin_port )		125723	1					
ANR	125842	Callee	ntohs		125723	0					
ANR	125843	Identifier	ntohs		125723	0					
ANR	125844	ArgumentList	( ( struct sockaddr_in * ) sa ) -> sin_port		125723	1					
ANR	125845	Argument	( ( struct sockaddr_in * ) sa ) -> sin_port		125723	0					
ANR	125846	PtrMemberAccess	( ( struct sockaddr_in * ) sa ) -> sin_port		125723	0					
ANR	125847	CastExpression	( struct sockaddr_in * ) sa		125723	0					
ANR	125848	CastTarget	struct sockaddr_in *		125723	0					
ANR	125849	Identifier	sa		125723	1					
ANR	125850	Identifier	sin_port		125723	1					
ANR	125851	ExpressionStatement	"sprintf ( port , ""%d"" , p )"	328:8:9720:9742	125723	8	True				
ANR	125852	CallExpression	"sprintf ( port , ""%d"" , p )"		125723	0					
ANR	125853	Callee	sprintf		125723	0					
ANR	125854	Identifier	sprintf		125723	0					
ANR	125855	ArgumentList	port		125723	1					
ANR	125856	Argument	port		125723	0					
ANR	125857	Identifier	port		125723	0					
ANR	125858	Argument	"""%d"""		125723	1					
ANR	125859	PrimaryExpression	"""%d"""		125723	0					
ANR	125860	Argument	p		125723	2					
ANR	125861	Identifier	p		125723	0					
ANR	125862	BreakStatement	break ;	329:8:9752:9757	125723	9	True				
ANR	125863	Label	default :	331:4:9764:9771	125723	10	True				
ANR	125864	Identifier	default		125723	0					
ANR	125865	ExpressionStatement	"strncpy ( s , ""Unknown AF"" , SS_ADDRSTRLEN )"	332:8:9781:9820	125723	11	True				
ANR	125866	CallExpression	"strncpy ( s , ""Unknown AF"" , SS_ADDRSTRLEN )"		125723	0					
ANR	125867	Callee	strncpy		125723	0					
ANR	125868	Identifier	strncpy		125723	0					
ANR	125869	ArgumentList	s		125723	1					
ANR	125870	Argument	s		125723	0					
ANR	125871	Identifier	s		125723	0					
ANR	125872	Argument	"""Unknown AF"""		125723	1					
ANR	125873	PrimaryExpression	"""Unknown AF"""		125723	0					
ANR	125874	Argument	SS_ADDRSTRLEN		125723	2					
ANR	125875	Identifier	SS_ADDRSTRLEN		125723	0					
ANR	125876	IdentifierDeclStatement	int addr_len = strlen ( addr ) ;	335:4:9833:9860	125723	7	True				
ANR	125877	IdentifierDecl	addr_len = strlen ( addr )		125723	0					
ANR	125878	IdentifierDeclType	int		125723	0					
ANR	125879	Identifier	addr_len		125723	1					
ANR	125880	AssignmentExpression	addr_len = strlen ( addr )		125723	2		=			
ANR	125881	Identifier	addr_len		125723	0					
ANR	125882	CallExpression	strlen ( addr )		125723	1					
ANR	125883	Callee	strlen		125723	0					
ANR	125884	Identifier	strlen		125723	0					
ANR	125885	ArgumentList	addr		125723	1					
ANR	125886	Argument	addr		125723	0					
ANR	125887	Identifier	addr		125723	0					
ANR	125888	IdentifierDeclStatement	int port_len = strlen ( port ) ;	336:4:9866:9893	125723	8	True				
ANR	125889	IdentifierDecl	port_len = strlen ( port )		125723	0					
ANR	125890	IdentifierDeclType	int		125723	0					
ANR	125891	Identifier	port_len		125723	1					
ANR	125892	AssignmentExpression	port_len = strlen ( port )		125723	2		=			
ANR	125893	Identifier	port_len		125723	0					
ANR	125894	CallExpression	strlen ( port )		125723	1					
ANR	125895	Callee	strlen		125723	0					
ANR	125896	Identifier	strlen		125723	0					
ANR	125897	ArgumentList	port		125723	1					
ANR	125898	Argument	port		125723	0					
ANR	125899	Identifier	port		125723	0					
ANR	125900	ExpressionStatement	"memcpy ( s , addr , addr_len )"	337:4:9899:9924	125723	9	True				
ANR	125901	CallExpression	"memcpy ( s , addr , addr_len )"		125723	0					
ANR	125902	Callee	memcpy		125723	0					
ANR	125903	Identifier	memcpy		125723	0					
ANR	125904	ArgumentList	s		125723	1					
ANR	125905	Argument	s		125723	0					
ANR	125906	Identifier	s		125723	0					
ANR	125907	Argument	addr		125723	1					
ANR	125908	Identifier	addr		125723	0					
ANR	125909	Argument	addr_len		125723	2					
ANR	125910	Identifier	addr_len		125723	0					
ANR	125911	ExpressionStatement	"memcpy ( s + addr_len + 1 , port , port_len )"	338:4:9930:9970	125723	10	True				
ANR	125912	CallExpression	"memcpy ( s + addr_len + 1 , port , port_len )"		125723	0					
ANR	125913	Callee	memcpy		125723	0					
ANR	125914	Identifier	memcpy		125723	0					
ANR	125915	ArgumentList	s + addr_len + 1		125723	1					
ANR	125916	Argument	s + addr_len + 1		125723	0					
ANR	125917	AdditiveExpression	s + addr_len + 1		125723	0		+			
ANR	125918	Identifier	s		125723	0					
ANR	125919	AdditiveExpression	addr_len + 1		125723	1		+			
ANR	125920	Identifier	addr_len		125723	0					
ANR	125921	PrimaryExpression	1		125723	1					
ANR	125922	Argument	port		125723	1					
ANR	125923	Identifier	port		125723	0					
ANR	125924	Argument	port_len		125723	2					
ANR	125925	Identifier	port_len		125723	0					
ANR	125926	ExpressionStatement	s [ addr_len ] = ':'	339:4:9976:9993	125723	11	True				
ANR	125927	AssignmentExpression	s [ addr_len ] = ':'		125723	0		=			
ANR	125928	ArrayIndexing	s [ addr_len ]		125723	0					
ANR	125929	Identifier	s		125723	0					
ANR	125930	Identifier	addr_len		125723	1					
ANR	125931	PrimaryExpression	':'		125723	1					
ANR	125932	ReturnStatement	return s ;	341:4:10000:10008	125723	12	True				
ANR	125933	Identifier	s		125723	0					
ANR	125934	ReturnType	static char *		125723	1					
ANR	125935	Identifier	get_addr_str		125723	2					
ANR	125936	ParameterList	const struct sockaddr * sa		125723	3					
ANR	125937	Parameter	const struct sockaddr * sa	308:13:9067:9091	125723	0	True				
ANR	125938	ParameterType	const struct sockaddr *		125723	0					
ANR	125939	Identifier	sa		125723	1					
ANR	125940	CFGEntryNode	ENTRY		125723		True				
ANR	125941	CFGExitNode	EXIT		125723		True				
ANR	125942	Symbol	PORTSTRLEN		125723						
ANR	125943	Symbol	sa -> sa_family		125723						
ANR	125944	Symbol	SS_ADDRSTRLEN		125723						
ANR	125945	Symbol	INET_ADDRSTRLEN		125723						
ANR	125946	Symbol	INET6_ADDRSTRLEN		125723						
ANR	125947	Symbol	AF_INET		125723						
ANR	125948	Symbol	& ( ( struct sockaddr_in6 * ) sa ) -> sin6_addr		125723						
ANR	125949	Symbol	sa		125723						
ANR	125950	Symbol	( ( struct sockaddr_in * ) sa ) -> sin_port		125723						
ANR	125951	Symbol	AF_INET6		125723						
ANR	125952	Symbol	* addr_len		125723						
ANR	125953	Symbol	p		125723						
ANR	125954	Symbol	ntohs		125723						
ANR	125955	Symbol	& ( ( struct sockaddr_in * ) sa ) -> sin_addr		125723						
ANR	125956	Symbol	strlen		125723						
ANR	125957	Symbol	s		125723						
ANR	125958	Symbol	port		125723						
ANR	125959	Symbol	* sa		125723						
ANR	125960	Symbol	port_len		125723						
ANR	125961	Symbol	addr		125723						
ANR	125962	Symbol	* s		125723						
ANR	125963	Symbol	addr_len		125723						
ANR	125964	Function	create_remote_socket	344:0:10013:11267							
ANR	125965	FunctionDef	create_remote_socket (int ipv6)		125964	0					
ANR	125966	CompoundStatement		346:0:10048:11267	125964	0					
ANR	125967	IdentifierDeclStatement	int remote_sock ;	347:4:10054:10069	125964	0	True				
ANR	125968	IdentifierDecl	remote_sock		125964	0					
ANR	125969	IdentifierDeclType	int		125964	0					
ANR	125970	Identifier	remote_sock		125964	1					
ANR	125971	IfStatement	if ( ipv6 )		125964	1					
ANR	125972	Condition	ipv6	349:8:10080:10083	125964	0	True				
ANR	125973	Identifier	ipv6		125964	0					
ANR	125974	CompoundStatement		6:8:81:105	125964	1					
ANR	125975	IdentifierDeclStatement	struct sockaddr_in6 addr ;	351:8:10130:10154	125964	0	True				
ANR	125976	IdentifierDecl	addr		125964	0					
ANR	125977	IdentifierDeclType	struct sockaddr_in6		125964	0					
ANR	125978	Identifier	addr		125964	1					
ANR	125979	ExpressionStatement	"memset ( & addr , 0 , sizeof ( struct sockaddr_in6 ) )"	352:8:10164:10209	125964	1	True				
ANR	125980	CallExpression	"memset ( & addr , 0 , sizeof ( struct sockaddr_in6 ) )"		125964	0					
ANR	125981	Callee	memset		125964	0					
ANR	125982	Identifier	memset		125964	0					
ANR	125983	ArgumentList	& addr		125964	1					
ANR	125984	Argument	& addr		125964	0					
ANR	125985	UnaryOperationExpression	& addr		125964	0					
ANR	125986	UnaryOperator	&		125964	0					
ANR	125987	Identifier	addr		125964	1					
ANR	125988	Argument	0		125964	1					
ANR	125989	PrimaryExpression	0		125964	0					
ANR	125990	Argument	sizeof ( struct sockaddr_in6 )		125964	2					
ANR	125991	SizeofExpression	sizeof ( struct sockaddr_in6 )		125964	0					
ANR	125992	Sizeof	sizeof		125964	0					
ANR	125993	SizeofOperand	struct sockaddr_in6		125964	1					
ANR	125994	ExpressionStatement	addr . sin6_family = AF_INET6	353:8:10219:10246	125964	2	True				
ANR	125995	AssignmentExpression	addr . sin6_family = AF_INET6		125964	0		=			
ANR	125996	MemberAccess	addr . sin6_family		125964	0					
ANR	125997	Identifier	addr		125964	0					
ANR	125998	Identifier	sin6_family		125964	1					
ANR	125999	Identifier	AF_INET6		125964	1					
ANR	126000	ExpressionStatement	addr . sin6_addr = in6addr_any	354:8:10256:10286	125964	3	True				
ANR	126001	AssignmentExpression	addr . sin6_addr = in6addr_any		125964	0		=			
ANR	126002	MemberAccess	addr . sin6_addr		125964	0					
ANR	126003	Identifier	addr		125964	0					
ANR	126004	Identifier	sin6_addr		125964	1					
ANR	126005	Identifier	in6addr_any		125964	1					
ANR	126006	ExpressionStatement	addr . sin6_port = 0	355:8:10296:10316	125964	4	True				
ANR	126007	AssignmentExpression	addr . sin6_port = 0		125964	0		=			
ANR	126008	MemberAccess	addr . sin6_port		125964	0					
ANR	126009	Identifier	addr		125964	0					
ANR	126010	Identifier	sin6_port		125964	1					
ANR	126011	PrimaryExpression	0		125964	1					
ANR	126012	ExpressionStatement	"remote_sock = socket ( AF_INET6 , SOCK_DGRAM , 0 )"	356:8:10326:10376	125964	5	True				
ANR	126013	AssignmentExpression	"remote_sock = socket ( AF_INET6 , SOCK_DGRAM , 0 )"		125964	0		=			
ANR	126014	Identifier	remote_sock		125964	0					
ANR	126015	CallExpression	"socket ( AF_INET6 , SOCK_DGRAM , 0 )"		125964	1					
ANR	126016	Callee	socket		125964	0					
ANR	126017	Identifier	socket		125964	0					
ANR	126018	ArgumentList	AF_INET6		125964	1					
ANR	126019	Argument	AF_INET6		125964	0					
ANR	126020	Identifier	AF_INET6		125964	0					
ANR	126021	Argument	SOCK_DGRAM		125964	1					
ANR	126022	Identifier	SOCK_DGRAM		125964	0					
ANR	126023	Argument	0		125964	2					
ANR	126024	PrimaryExpression	0		125964	0					
ANR	126025	IfStatement	if ( remote_sock == - 1 )		125964	6					
ANR	126026	Condition	remote_sock == - 1	357:12:10390:10406	125964	0	True				
ANR	126027	EqualityExpression	remote_sock == - 1		125964	0		==			
ANR	126028	Identifier	remote_sock		125964	0					
ANR	126029	UnaryOperationExpression	- 1		125964	1					
ANR	126030	UnaryOperator	-		125964	0					
ANR	126031	PrimaryExpression	1		125964	1					
ANR	126032	CompoundStatement		12:31:360:360	125964	1					
ANR	126033	ExpressionStatement	"ERROR ( ""[udp] cannot create socket"" )"	358:12:10423:10458	125964	0	True				
ANR	126034	CallExpression	"ERROR ( ""[udp] cannot create socket"" )"		125964	0					
ANR	126035	Callee	ERROR		125964	0					
ANR	126036	Identifier	ERROR		125964	0					
ANR	126037	ArgumentList	"""[udp] cannot create socket"""		125964	1					
ANR	126038	Argument	"""[udp] cannot create socket"""		125964	0					
ANR	126039	PrimaryExpression	"""[udp] cannot create socket"""		125964	0					
ANR	126040	ReturnStatement	return - 1 ;	359:12:10472:10481	125964	1	True				
ANR	126041	UnaryOperationExpression	- 1		125964	0					
ANR	126042	UnaryOperator	-		125964	0					
ANR	126043	PrimaryExpression	1		125964	1					
ANR	126044	IfStatement	"if ( bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) != 0 )"		125964	7					
ANR	126045	Condition	"bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) != 0"	361:12:10505:10566	125964	0	True				
ANR	126046	EqualityExpression	"bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) != 0"		125964	0		!=			
ANR	126047	CallExpression	"bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) )"		125964	0					
ANR	126048	Callee	bind		125964	0					
ANR	126049	Identifier	bind		125964	0					
ANR	126050	ArgumentList	remote_sock		125964	1					
ANR	126051	Argument	remote_sock		125964	0					
ANR	126052	Identifier	remote_sock		125964	0					
ANR	126053	Argument	( struct sockaddr * ) & addr		125964	1					
ANR	126054	CastExpression	( struct sockaddr * ) & addr		125964	0					
ANR	126055	CastTarget	struct sockaddr *		125964	0					
ANR	126056	UnaryOperationExpression	& addr		125964	1					
ANR	126057	UnaryOperator	&		125964	0					
ANR	126058	Identifier	addr		125964	1					
ANR	126059	Argument	sizeof ( addr )		125964	2					
ANR	126060	SizeofExpression	sizeof ( addr )		125964	0					
ANR	126061	Sizeof	sizeof		125964	0					
ANR	126062	SizeofOperand	addr		125964	1					
ANR	126063	PrimaryExpression	0		125964	1					
ANR	126064	CompoundStatement		16:76:520:520	125964	1					
ANR	126065	ExpressionStatement	"FATAL ( ""[udp] cannot bind remote"" )"	362:12:10583:10616	125964	0	True				
ANR	126066	CallExpression	"FATAL ( ""[udp] cannot bind remote"" )"		125964	0					
ANR	126067	Callee	FATAL		125964	0					
ANR	126068	Identifier	FATAL		125964	0					
ANR	126069	ArgumentList	"""[udp] cannot bind remote"""		125964	1					
ANR	126070	Argument	"""[udp] cannot bind remote"""		125964	0					
ANR	126071	PrimaryExpression	"""[udp] cannot bind remote"""		125964	0					
ANR	126072	ReturnStatement	return - 1 ;	363:12:10630:10639	125964	1	True				
ANR	126073	UnaryOperationExpression	- 1		125964	0					
ANR	126074	UnaryOperator	-		125964	0					
ANR	126075	PrimaryExpression	1		125964	1					
ANR	126076	ElseStatement	else		125964	0					
ANR	126077	CompoundStatement		22:8:655:678	125964	0					
ANR	126078	IdentifierDeclStatement	struct sockaddr_in addr ;	367:8:10704:10727	125964	0	True				
ANR	126079	IdentifierDecl	addr		125964	0					
ANR	126080	IdentifierDeclType	struct sockaddr_in		125964	0					
ANR	126081	Identifier	addr		125964	1					
ANR	126082	ExpressionStatement	"memset ( & addr , 0 , sizeof ( struct sockaddr_in ) )"	368:8:10737:10781	125964	1	True				
ANR	126083	CallExpression	"memset ( & addr , 0 , sizeof ( struct sockaddr_in ) )"		125964	0					
ANR	126084	Callee	memset		125964	0					
ANR	126085	Identifier	memset		125964	0					
ANR	126086	ArgumentList	& addr		125964	1					
ANR	126087	Argument	& addr		125964	0					
ANR	126088	UnaryOperationExpression	& addr		125964	0					
ANR	126089	UnaryOperator	&		125964	0					
ANR	126090	Identifier	addr		125964	1					
ANR	126091	Argument	0		125964	1					
ANR	126092	PrimaryExpression	0		125964	0					
ANR	126093	Argument	sizeof ( struct sockaddr_in )		125964	2					
ANR	126094	SizeofExpression	sizeof ( struct sockaddr_in )		125964	0					
ANR	126095	Sizeof	sizeof		125964	0					
ANR	126096	SizeofOperand	struct sockaddr_in		125964	1					
ANR	126097	ExpressionStatement	addr . sin_family = AF_INET	369:8:10791:10821	125964	2	True				
ANR	126098	AssignmentExpression	addr . sin_family = AF_INET		125964	0		=			
ANR	126099	MemberAccess	addr . sin_family		125964	0					
ANR	126100	Identifier	addr		125964	0					
ANR	126101	Identifier	sin_family		125964	1					
ANR	126102	Identifier	AF_INET		125964	1					
ANR	126103	ExpressionStatement	addr . sin_addr . s_addr = INADDR_ANY	370:8:10831:10864	125964	3	True				
ANR	126104	AssignmentExpression	addr . sin_addr . s_addr = INADDR_ANY		125964	0		=			
ANR	126105	MemberAccess	addr . sin_addr . s_addr		125964	0					
ANR	126106	MemberAccess	addr . sin_addr		125964	0					
ANR	126107	Identifier	addr		125964	0					
ANR	126108	Identifier	sin_addr		125964	1					
ANR	126109	Identifier	s_addr		125964	1					
ANR	126110	Identifier	INADDR_ANY		125964	1					
ANR	126111	ExpressionStatement	addr . sin_port = 0	371:8:10874:10898	125964	4	True				
ANR	126112	AssignmentExpression	addr . sin_port = 0		125964	0		=			
ANR	126113	MemberAccess	addr . sin_port		125964	0					
ANR	126114	Identifier	addr		125964	0					
ANR	126115	Identifier	sin_port		125964	1					
ANR	126116	PrimaryExpression	0		125964	1					
ANR	126117	ExpressionStatement	"remote_sock = socket ( AF_INET , SOCK_DGRAM , 0 )"	372:8:10908:10961	125964	5	True				
ANR	126118	AssignmentExpression	"remote_sock = socket ( AF_INET , SOCK_DGRAM , 0 )"		125964	0		=			
ANR	126119	Identifier	remote_sock		125964	0					
ANR	126120	CallExpression	"socket ( AF_INET , SOCK_DGRAM , 0 )"		125964	1					
ANR	126121	Callee	socket		125964	0					
ANR	126122	Identifier	socket		125964	0					
ANR	126123	ArgumentList	AF_INET		125964	1					
ANR	126124	Argument	AF_INET		125964	0					
ANR	126125	Identifier	AF_INET		125964	0					
ANR	126126	Argument	SOCK_DGRAM		125964	1					
ANR	126127	Identifier	SOCK_DGRAM		125964	0					
ANR	126128	Argument	0		125964	2					
ANR	126129	PrimaryExpression	0		125964	0					
ANR	126130	IfStatement	if ( remote_sock == - 1 )		125964	6					
ANR	126131	Condition	remote_sock == - 1	373:12:10975:10991	125964	0	True				
ANR	126132	EqualityExpression	remote_sock == - 1		125964	0		==			
ANR	126133	Identifier	remote_sock		125964	0					
ANR	126134	UnaryOperationExpression	- 1		125964	1					
ANR	126135	UnaryOperator	-		125964	0					
ANR	126136	PrimaryExpression	1		125964	1					
ANR	126137	CompoundStatement		28:31:945:945	125964	1					
ANR	126138	ExpressionStatement	"ERROR ( ""[udp] cannot create socket"" )"	374:12:11008:11043	125964	0	True				
ANR	126139	CallExpression	"ERROR ( ""[udp] cannot create socket"" )"		125964	0					
ANR	126140	Callee	ERROR		125964	0					
ANR	126141	Identifier	ERROR		125964	0					
ANR	126142	ArgumentList	"""[udp] cannot create socket"""		125964	1					
ANR	126143	Argument	"""[udp] cannot create socket"""		125964	0					
ANR	126144	PrimaryExpression	"""[udp] cannot create socket"""		125964	0					
ANR	126145	ReturnStatement	return - 1 ;	375:12:11057:11066	125964	1	True				
ANR	126146	UnaryOperationExpression	- 1		125964	0					
ANR	126147	UnaryOperator	-		125964	0					
ANR	126148	PrimaryExpression	1		125964	1					
ANR	126149	IfStatement	"if ( bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) != 0 )"		125964	7					
ANR	126150	Condition	"bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) != 0"	378:12:11091:11152	125964	0	True				
ANR	126151	EqualityExpression	"bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) ) != 0"		125964	0		!=			
ANR	126152	CallExpression	"bind ( remote_sock , ( struct sockaddr * ) & addr , sizeof ( addr ) )"		125964	0					
ANR	126153	Callee	bind		125964	0					
ANR	126154	Identifier	bind		125964	0					
ANR	126155	ArgumentList	remote_sock		125964	1					
ANR	126156	Argument	remote_sock		125964	0					
ANR	126157	Identifier	remote_sock		125964	0					
ANR	126158	Argument	( struct sockaddr * ) & addr		125964	1					
ANR	126159	CastExpression	( struct sockaddr * ) & addr		125964	0					
ANR	126160	CastTarget	struct sockaddr *		125964	0					
ANR	126161	UnaryOperationExpression	& addr		125964	1					
ANR	126162	UnaryOperator	&		125964	0					
ANR	126163	Identifier	addr		125964	1					
ANR	126164	Argument	sizeof ( addr )		125964	2					
ANR	126165	SizeofExpression	sizeof ( addr )		125964	0					
ANR	126166	Sizeof	sizeof		125964	0					
ANR	126167	SizeofOperand	addr		125964	1					
ANR	126168	PrimaryExpression	0		125964	1					
ANR	126169	CompoundStatement		33:76:1106:1106	125964	1					
ANR	126170	ExpressionStatement	"FATAL ( ""[udp] cannot bind remote"" )"	379:12:11169:11202	125964	0	True				
ANR	126171	CallExpression	"FATAL ( ""[udp] cannot bind remote"" )"		125964	0					
ANR	126172	Callee	FATAL		125964	0					
ANR	126173	Identifier	FATAL		125964	0					
ANR	126174	ArgumentList	"""[udp] cannot bind remote"""		125964	1					
ANR	126175	Argument	"""[udp] cannot bind remote"""		125964	0					
ANR	126176	PrimaryExpression	"""[udp] cannot bind remote"""		125964	0					
ANR	126177	ReturnStatement	return - 1 ;	380:12:11216:11225	125964	1	True				
ANR	126178	UnaryOperationExpression	- 1		125964	0					
ANR	126179	UnaryOperator	-		125964	0					
ANR	126180	PrimaryExpression	1		125964	1					
ANR	126181	ReturnStatement	return remote_sock ;	383:4:11247:11265	125964	2	True				
ANR	126182	Identifier	remote_sock		125964	0					
ANR	126183	ReturnType	int		125964	1					
ANR	126184	Identifier	create_remote_socket		125964	2					
ANR	126185	ParameterList	int ipv6		125964	3					
ANR	126186	Parameter	int ipv6	345:21:10038:10045	125964	0	True				
ANR	126187	ParameterType	int		125964	0					
ANR	126188	Identifier	ipv6		125964	1					
ANR	126189	CFGEntryNode	ENTRY		125964		True				
ANR	126190	CFGExitNode	EXIT		125964		True				
ANR	126191	Symbol	addr . sin_family		125964						
ANR	126192	Symbol	addr . sin_addr		125964						
ANR	126193	Symbol	& addr		125964						
ANR	126194	Symbol	addr . sin_port		125964						
ANR	126195	Symbol	in6addr_any		125964						
ANR	126196	Symbol	AF_INET		125964						
ANR	126197	Symbol	SOCK_DGRAM		125964						
ANR	126198	Symbol	addr . sin6_port		125964						
ANR	126199	Symbol	remote_sock		125964						
ANR	126200	Symbol	AF_INET6		125964						
ANR	126201	Symbol	addr . sin6_family		125964						
ANR	126202	Symbol	bind		125964						
ANR	126203	Symbol	addr . sin6_addr		125964						
ANR	126204	Symbol	addr . sin_addr . s_addr		125964						
ANR	126205	Symbol	ipv6		125964						
ANR	126206	Symbol	socket		125964						
ANR	126207	Symbol	INADDR_ANY		125964						
ANR	126208	Symbol	addr		125964						
ANR	126209	Function	create_server_socket	386:0:11270:14620							
ANR	126210	FunctionDef	"create_server_socket (const char * host , const char * port)"		126209	0					
ANR	126211	CompoundStatement		388:0:11331:14620	126209	0					
ANR	126212	IdentifierDeclStatement	struct addrinfo hints ;	389:4:11337:11358	126209	0	True				
ANR	126213	IdentifierDecl	hints		126209	0					
ANR	126214	IdentifierDeclType	struct addrinfo		126209	0					
ANR	126215	Identifier	hints		126209	1					
ANR	126216	IdentifierDeclStatement	"struct addrinfo * result , * rp , * ipv4v6bindall ;"	390:4:11364:11408	126209	1	True				
ANR	126217	IdentifierDecl	* result		126209	0					
ANR	126218	IdentifierDeclType	struct addrinfo *		126209	0					
ANR	126219	Identifier	result		126209	1					
ANR	126220	IdentifierDecl	* rp		126209	1					
ANR	126221	IdentifierDeclType	struct addrinfo *		126209	0					
ANR	126222	Identifier	rp		126209	1					
ANR	126223	IdentifierDecl	* ipv4v6bindall		126209	2					
ANR	126224	IdentifierDeclType	struct addrinfo *		126209	0					
ANR	126225	Identifier	ipv4v6bindall		126209	1					
ANR	126226	IdentifierDeclStatement	"int s , server_sock ;"	391:4:11414:11432	126209	2	True				
ANR	126227	IdentifierDecl	s		126209	0					
ANR	126228	IdentifierDeclType	int		126209	0					
ANR	126229	Identifier	s		126209	1					
ANR	126230	IdentifierDecl	server_sock		126209	1					
ANR	126231	IdentifierDeclType	int		126209	0					
ANR	126232	Identifier	server_sock		126209	1					
ANR	126233	ExpressionStatement	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"	393:4:11439:11481	126209	3	True				
ANR	126234	CallExpression	"memset ( & hints , 0 , sizeof ( struct addrinfo ) )"		126209	0					
ANR	126235	Callee	memset		126209	0					
ANR	126236	Identifier	memset		126209	0					
ANR	126237	ArgumentList	& hints		126209	1					
ANR	126238	Argument	& hints		126209	0					
ANR	126239	UnaryOperationExpression	& hints		126209	0					
ANR	126240	UnaryOperator	&		126209	0					
ANR	126241	Identifier	hints		126209	1					
ANR	126242	Argument	0		126209	1					
ANR	126243	PrimaryExpression	0		126209	0					
ANR	126244	Argument	sizeof ( struct addrinfo )		126209	2					
ANR	126245	SizeofExpression	sizeof ( struct addrinfo )		126209	0					
ANR	126246	Sizeof	sizeof		126209	0					
ANR	126247	SizeofOperand	struct addrinfo		126209	1					
ANR	126248	ExpressionStatement	hints . ai_family = AF_UNSPEC	394:4:11487:11516	126209	4	True				
ANR	126249	AssignmentExpression	hints . ai_family = AF_UNSPEC		126209	0		=			
ANR	126250	MemberAccess	hints . ai_family		126209	0					
ANR	126251	Identifier	hints		126209	0					
ANR	126252	Identifier	ai_family		126209	1					
ANR	126253	Identifier	AF_UNSPEC		126209	1					
ANR	126254	ExpressionStatement	hints . ai_socktype = SOCK_DGRAM	395:4:11571:11601	126209	5	True				
ANR	126255	AssignmentExpression	hints . ai_socktype = SOCK_DGRAM		126209	0		=			
ANR	126256	MemberAccess	hints . ai_socktype		126209	0					
ANR	126257	Identifier	hints		126209	0					
ANR	126258	Identifier	ai_socktype		126209	1					
ANR	126259	Identifier	SOCK_DGRAM		126209	1					
ANR	126260	ExpressionStatement	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG	396:4:11647:11693	126209	6	True				
ANR	126261	AssignmentExpression	hints . ai_flags = AI_PASSIVE | AI_ADDRCONFIG		126209	0		=			
ANR	126262	MemberAccess	hints . ai_flags		126209	0					
ANR	126263	Identifier	hints		126209	0					
ANR	126264	Identifier	ai_flags		126209	1					
ANR	126265	InclusiveOrExpression	AI_PASSIVE | AI_ADDRCONFIG		126209	1		|			
ANR	126266	Identifier	AI_PASSIVE		126209	0					
ANR	126267	Identifier	AI_ADDRCONFIG		126209	1					
ANR	126268	ExpressionStatement	hints . ai_protocol = IPPROTO_UDP	397:4:11729:11760	126209	7	True				
ANR	126269	AssignmentExpression	hints . ai_protocol = IPPROTO_UDP		126209	0		=			
ANR	126270	MemberAccess	hints . ai_protocol		126209	0					
ANR	126271	Identifier	hints		126209	0					
ANR	126272	Identifier	ai_protocol		126209	1					
ANR	126273	Identifier	IPPROTO_UDP		126209	1					
ANR	126274	ExpressionStatement	"s = getaddrinfo ( host , port , & hints , & result )"	399:4:11767:11811	126209	8	True				
ANR	126275	AssignmentExpression	"s = getaddrinfo ( host , port , & hints , & result )"		126209	0		=			
ANR	126276	Identifier	s		126209	0					
ANR	126277	CallExpression	"getaddrinfo ( host , port , & hints , & result )"		126209	1					
ANR	126278	Callee	getaddrinfo		126209	0					
ANR	126279	Identifier	getaddrinfo		126209	0					
ANR	126280	ArgumentList	host		126209	1					
ANR	126281	Argument	host		126209	0					
ANR	126282	Identifier	host		126209	0					
ANR	126283	Argument	port		126209	1					
ANR	126284	Identifier	port		126209	0					
ANR	126285	Argument	& hints		126209	2					
ANR	126286	UnaryOperationExpression	& hints		126209	0					
ANR	126287	UnaryOperator	&		126209	0					
ANR	126288	Identifier	hints		126209	1					
ANR	126289	Argument	& result		126209	3					
ANR	126290	UnaryOperationExpression	& result		126209	0					
ANR	126291	UnaryOperator	&		126209	0					
ANR	126292	Identifier	result		126209	1					
ANR	126293	IfStatement	if ( s != 0 )		126209	9					
ANR	126294	Condition	s != 0	400:8:11821:11826	126209	0	True				
ANR	126295	EqualityExpression	s != 0		126209	0		!=			
ANR	126296	Identifier	s		126209	0					
ANR	126297	PrimaryExpression	0		126209	1					
ANR	126298	CompoundStatement		13:16:497:497	126209	1					
ANR	126299	ExpressionStatement	"LOGE ( ""[udp] getaddrinfo: %s"" , gai_strerror ( s ) )"	401:8:11839:11885	126209	0	True				
ANR	126300	CallExpression	"LOGE ( ""[udp] getaddrinfo: %s"" , gai_strerror ( s ) )"		126209	0					
ANR	126301	Callee	LOGE		126209	0					
ANR	126302	Identifier	LOGE		126209	0					
ANR	126303	ArgumentList	"""[udp] getaddrinfo: %s"""		126209	1					
ANR	126304	Argument	"""[udp] getaddrinfo: %s"""		126209	0					
ANR	126305	PrimaryExpression	"""[udp] getaddrinfo: %s"""		126209	0					
ANR	126306	Argument	gai_strerror ( s )		126209	1					
ANR	126307	CallExpression	gai_strerror ( s )		126209	0					
ANR	126308	Callee	gai_strerror		126209	0					
ANR	126309	Identifier	gai_strerror		126209	0					
ANR	126310	ArgumentList	s		126209	1					
ANR	126311	Argument	s		126209	0					
ANR	126312	Identifier	s		126209	0					
ANR	126313	ReturnStatement	return - 1 ;	402:8:11895:11904	126209	1	True				
ANR	126314	UnaryOperationExpression	- 1		126209	0					
ANR	126315	UnaryOperator	-		126209	0					
ANR	126316	PrimaryExpression	1		126209	1					
ANR	126317	IfStatement	if ( result == NULL )		126209	10					
ANR	126318	Condition	result == NULL	405:8:11921:11934	126209	0	True				
ANR	126319	EqualityExpression	result == NULL		126209	0		==			
ANR	126320	Identifier	result		126209	0					
ANR	126321	Identifier	NULL		126209	1					
ANR	126322	CompoundStatement		18:24:605:605	126209	1					
ANR	126323	ExpressionStatement	"LOGE ( ""[udp] cannot bind"" )"	406:8:11947:11972	126209	0	True				
ANR	126324	CallExpression	"LOGE ( ""[udp] cannot bind"" )"		126209	0					
ANR	126325	Callee	LOGE		126209	0					
ANR	126326	Identifier	LOGE		126209	0					
ANR	126327	ArgumentList	"""[udp] cannot bind"""		126209	1					
ANR	126328	Argument	"""[udp] cannot bind"""		126209	0					
ANR	126329	PrimaryExpression	"""[udp] cannot bind"""		126209	0					
ANR	126330	ReturnStatement	return - 1 ;	407:8:11982:11991	126209	1	True				
ANR	126331	UnaryOperationExpression	- 1		126209	0					
ANR	126332	UnaryOperator	-		126209	0					
ANR	126333	PrimaryExpression	1		126209	1					
ANR	126334	ExpressionStatement	rp = result	410:4:12004:12015	126209	11	True				
ANR	126335	AssignmentExpression	rp = result		126209	0		=			
ANR	126336	Identifier	rp		126209	0					
ANR	126337	Identifier	result		126209	1					
ANR	126338	IfStatement	if ( ! host )		126209	12					
ANR	126339	Condition	! host	418:8:12359:12363	126209	0	True				
ANR	126340	UnaryOperationExpression	! host		126209	0					
ANR	126341	UnaryOperator	!		126209	0					
ANR	126342	Identifier	host		126209	1					
ANR	126343	CompoundStatement		31:15:1034:1034	126209	1					
ANR	126344	ExpressionStatement	ipv4v6bindall = result	419:8:12376:12398	126209	0	True				
ANR	126345	AssignmentExpression	ipv4v6bindall = result		126209	0		=			
ANR	126346	Identifier	ipv4v6bindall		126209	0					
ANR	126347	Identifier	result		126209	1					
ANR	126348	WhileStatement	while ( ipv4v6bindall )		126209	1					
ANR	126349	Condition	ipv4v6bindall	422:15:12495:12507	126209	0	True				
ANR	126350	Identifier	ipv4v6bindall		126209	0					
ANR	126351	CompoundStatement		35:30:1178:1178	126209	1					
ANR	126352	IfStatement	if ( ipv4v6bindall -> ai_family == AF_INET6 )		126209	0					
ANR	126353	Condition	ipv4v6bindall -> ai_family == AF_INET6	423:16:12528:12563	126209	0	True				
ANR	126354	EqualityExpression	ipv4v6bindall -> ai_family == AF_INET6		126209	0		==			
ANR	126355	PtrMemberAccess	ipv4v6bindall -> ai_family		126209	0					
ANR	126356	Identifier	ipv4v6bindall		126209	0					
ANR	126357	Identifier	ai_family		126209	1					
ANR	126358	Identifier	AF_INET6		126209	1					
ANR	126359	CompoundStatement		36:54:1234:1234	126209	1					
ANR	126360	ExpressionStatement	rp = ipv4v6bindall	424:16:12584:12602	126209	0	True				
ANR	126361	AssignmentExpression	rp = ipv4v6bindall		126209	0		=			
ANR	126362	Identifier	rp		126209	0					
ANR	126363	Identifier	ipv4v6bindall		126209	1					
ANR	126364	BreakStatement	break ;	425:16:12660:12665	126209	1	True				
ANR	126365	ExpressionStatement	ipv4v6bindall = ipv4v6bindall -> ai_next	427:12:12693:12731	126209	1	True				
ANR	126366	AssignmentExpression	ipv4v6bindall = ipv4v6bindall -> ai_next		126209	0		=			
ANR	126367	Identifier	ipv4v6bindall		126209	0					
ANR	126368	PtrMemberAccess	ipv4v6bindall -> ai_next		126209	1					
ANR	126369	Identifier	ipv4v6bindall		126209	0					
ANR	126370	Identifier	ai_next		126209	1					
ANR	126371	ForStatement	for ( ; rp != NULL ; rp = rp -> ai_next )		126209	13					
ANR	126372	Condition	rp != NULL	431:26:12812:12821	126209	0	True				
ANR	126373	EqualityExpression	rp != NULL		126209	0		!=			
ANR	126374	Identifier	rp		126209	0					
ANR	126375	Identifier	NULL		126209	1					
ANR	126376	AssignmentExpression	rp = rp -> ai_next	431:38:12824:12839	126209	1	True	=			
ANR	126377	Identifier	rp		126209	0					
ANR	126378	PtrMemberAccess	rp -> ai_next		126209	1					
ANR	126379	Identifier	rp		126209	0					
ANR	126380	Identifier	ai_next		126209	1					
ANR	126381	CompoundStatement		68:8:2227:2239	126209	2					
ANR	126382	ExpressionStatement	"server_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"	432:8:12852:12921	126209	0	True				
ANR	126383	AssignmentExpression	"server_sock = socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		126209	0		=			
ANR	126384	Identifier	server_sock		126209	0					
ANR	126385	CallExpression	"socket ( rp -> ai_family , rp -> ai_socktype , rp -> ai_protocol )"		126209	1					
ANR	126386	Callee	socket		126209	0					
ANR	126387	Identifier	socket		126209	0					
ANR	126388	ArgumentList	rp -> ai_family		126209	1					
ANR	126389	Argument	rp -> ai_family		126209	0					
ANR	126390	PtrMemberAccess	rp -> ai_family		126209	0					
ANR	126391	Identifier	rp		126209	0					
ANR	126392	Identifier	ai_family		126209	1					
ANR	126393	Argument	rp -> ai_socktype		126209	1					
ANR	126394	PtrMemberAccess	rp -> ai_socktype		126209	0					
ANR	126395	Identifier	rp		126209	0					
ANR	126396	Identifier	ai_socktype		126209	1					
ANR	126397	Argument	rp -> ai_protocol		126209	2					
ANR	126398	PtrMemberAccess	rp -> ai_protocol		126209	0					
ANR	126399	Identifier	rp		126209	0					
ANR	126400	Identifier	ai_protocol		126209	1					
ANR	126401	IfStatement	if ( server_sock == - 1 )		126209	1					
ANR	126402	Condition	server_sock == - 1	433:12:12935:12951	126209	0	True				
ANR	126403	EqualityExpression	server_sock == - 1		126209	0		==			
ANR	126404	Identifier	server_sock		126209	0					
ANR	126405	UnaryOperationExpression	- 1		126209	1					
ANR	126406	UnaryOperator	-		126209	0					
ANR	126407	PrimaryExpression	1		126209	1					
ANR	126408	CompoundStatement		46:31:1622:1622	126209	1					
ANR	126409	ContinueStatement	continue ;	434:12:12968:12976	126209	0	True				
ANR	126410	IfStatement	if ( rp -> ai_family == AF_INET6 )		126209	2					
ANR	126411	Condition	rp -> ai_family == AF_INET6	437:12:13001:13025	126209	0	True				
ANR	126412	EqualityExpression	rp -> ai_family == AF_INET6		126209	0		==			
ANR	126413	PtrMemberAccess	rp -> ai_family		126209	0					
ANR	126414	Identifier	rp		126209	0					
ANR	126415	Identifier	ai_family		126209	1					
ANR	126416	Identifier	AF_INET6		126209	1					
ANR	126417	CompoundStatement		51:12:1710:1737	126209	1					
ANR	126418	IdentifierDeclStatement	int ipv6only = host ? 1 : 0 ;	438:12:13042:13069	126209	0	True				
ANR	126419	IdentifierDecl	ipv6only = host ? 1 : 0		126209	0					
ANR	126420	IdentifierDeclType	int		126209	0					
ANR	126421	Identifier	ipv6only		126209	1					
ANR	126422	AssignmentExpression	ipv6only = host ? 1 : 0		126209	2		=			
ANR	126423	Identifier	ipv6only		126209	0					
ANR	126424	ConditionalExpression	host ? 1 : 0		126209	1					
ANR	126425	Condition	host		126209	0					
ANR	126426	Identifier	host		126209	0					
ANR	126427	PrimaryExpression	1		126209	1					
ANR	126428	PrimaryExpression	0		126209	2					
ANR	126429	ExpressionStatement	"setsockopt ( server_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"	439:12:13083:13162	126209	1	True				
ANR	126430	CallExpression	"setsockopt ( server_sock , IPPROTO_IPV6 , IPV6_V6ONLY , & ipv6only , sizeof ( ipv6only ) )"		126209	0					
ANR	126431	Callee	setsockopt		126209	0					
ANR	126432	Identifier	setsockopt		126209	0					
ANR	126433	ArgumentList	server_sock		126209	1					
ANR	126434	Argument	server_sock		126209	0					
ANR	126435	Identifier	server_sock		126209	0					
ANR	126436	Argument	IPPROTO_IPV6		126209	1					
ANR	126437	Identifier	IPPROTO_IPV6		126209	0					
ANR	126438	Argument	IPV6_V6ONLY		126209	2					
ANR	126439	Identifier	IPV6_V6ONLY		126209	0					
ANR	126440	Argument	& ipv6only		126209	3					
ANR	126441	UnaryOperationExpression	& ipv6only		126209	0					
ANR	126442	UnaryOperator	&		126209	0					
ANR	126443	Identifier	ipv6only		126209	1					
ANR	126444	Argument	sizeof ( ipv6only )		126209	4					
ANR	126445	SizeofExpression	sizeof ( ipv6only )		126209	0					
ANR	126446	Sizeof	sizeof		126209	0					
ANR	126447	SizeofOperand	ipv6only		126209	1					
ANR	126448	IdentifierDeclStatement	int opt = 1 ;	442:8:13183:13194	126209	3	True				
ANR	126449	IdentifierDecl	opt = 1		126209	0					
ANR	126450	IdentifierDeclType	int		126209	0					
ANR	126451	Identifier	opt		126209	1					
ANR	126452	AssignmentExpression	opt = 1		126209	2		=			
ANR	126453	Identifier	opt		126209	0					
ANR	126454	PrimaryExpression	1		126209	1					
ANR	126455	ExpressionStatement	"setsockopt ( server_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"	443:8:13204:13272	126209	4	True				
ANR	126456	CallExpression	"setsockopt ( server_sock , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"		126209	0					
ANR	126457	Callee	setsockopt		126209	0					
ANR	126458	Identifier	setsockopt		126209	0					
ANR	126459	ArgumentList	server_sock		126209	1					
ANR	126460	Argument	server_sock		126209	0					
ANR	126461	Identifier	server_sock		126209	0					
ANR	126462	Argument	SOL_SOCKET		126209	1					
ANR	126463	Identifier	SOL_SOCKET		126209	0					
ANR	126464	Argument	SO_REUSEADDR		126209	2					
ANR	126465	Identifier	SO_REUSEADDR		126209	0					
ANR	126466	Argument	& opt		126209	3					
ANR	126467	UnaryOperationExpression	& opt		126209	0					
ANR	126468	UnaryOperator	&		126209	0					
ANR	126469	Identifier	opt		126209	1					
ANR	126470	Argument	sizeof ( opt )		126209	4					
ANR	126471	SizeofExpression	sizeof ( opt )		126209	0					
ANR	126472	Sizeof	sizeof		126209	0					
ANR	126473	SizeofOperand	opt		126209	1					
ANR	126474	ExpressionStatement	set_nosigpipe ( server_sock )	445:8:13302:13328	126209	5	True				
ANR	126475	CallExpression	set_nosigpipe ( server_sock )		126209	0					
ANR	126476	Callee	set_nosigpipe		126209	0					
ANR	126477	Identifier	set_nosigpipe		126209	0					
ANR	126478	ArgumentList	server_sock		126209	1					
ANR	126479	Argument	server_sock		126209	0					
ANR	126480	Identifier	server_sock		126209	0					
ANR	126481	IfStatement	if ( reuse_port )		126209	6					
ANR	126482	Condition	reuse_port	447:12:13349:13358	126209	0	True				
ANR	126483	Identifier	reuse_port		126209	0					
ANR	126484	CompoundStatement		61:12:2043:2079	126209	1					
ANR	126485	IdentifierDeclStatement	int err = set_reuseport ( server_sock ) ;	448:12:13375:13411	126209	0	True				
ANR	126486	IdentifierDecl	err = set_reuseport ( server_sock )		126209	0					
ANR	126487	IdentifierDeclType	int		126209	0					
ANR	126488	Identifier	err		126209	1					
ANR	126489	AssignmentExpression	err = set_reuseport ( server_sock )		126209	2		=			
ANR	126490	Identifier	err		126209	0					
ANR	126491	CallExpression	set_reuseport ( server_sock )		126209	1					
ANR	126492	Callee	set_reuseport		126209	0					
ANR	126493	Identifier	set_reuseport		126209	0					
ANR	126494	ArgumentList	server_sock		126209	1					
ANR	126495	Argument	server_sock		126209	0					
ANR	126496	Identifier	server_sock		126209	0					
ANR	126497	IfStatement	if ( err == 0 )		126209	1					
ANR	126498	Condition	err == 0	449:16:13429:13436	126209	0	True				
ANR	126499	EqualityExpression	err == 0		126209	0		==			
ANR	126500	Identifier	err		126209	0					
ANR	126501	PrimaryExpression	0		126209	1					
ANR	126502	CompoundStatement		62:26:2107:2107	126209	1					
ANR	126503	ExpressionStatement	"LOGI ( ""udp port reuse enabled"" )"	450:16:13457:13487	126209	0	True				
ANR	126504	CallExpression	"LOGI ( ""udp port reuse enabled"" )"		126209	0					
ANR	126505	Callee	LOGI		126209	0					
ANR	126506	Identifier	LOGI		126209	0					
ANR	126507	ArgumentList	"""udp port reuse enabled"""		126209	1					
ANR	126508	Argument	"""udp port reuse enabled"""		126209	0					
ANR	126509	PrimaryExpression	"""udp port reuse enabled"""		126209	0					
ANR	126510	IdentifierDeclStatement	int tos = 46 ;	455:8:13559:13571	126209	7	True				
ANR	126511	IdentifierDecl	tos = 46		126209	0					
ANR	126512	IdentifierDeclType	int		126209	0					
ANR	126513	Identifier	tos		126209	1					
ANR	126514	AssignmentExpression	tos = 46		126209	2		=			
ANR	126515	Identifier	tos		126209	0					
ANR	126516	PrimaryExpression	46		126209	1					
ANR	126517	ExpressionStatement	"setsockopt ( server_sock , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"	456:8:13581:13643	126209	8	True				
ANR	126518	CallExpression	"setsockopt ( server_sock , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"		126209	0					
ANR	126519	Callee	setsockopt		126209	0					
ANR	126520	Identifier	setsockopt		126209	0					
ANR	126521	ArgumentList	server_sock		126209	1					
ANR	126522	Argument	server_sock		126209	0					
ANR	126523	Identifier	server_sock		126209	0					
ANR	126524	Argument	IPPROTO_IP		126209	1					
ANR	126525	Identifier	IPPROTO_IP		126209	0					
ANR	126526	Argument	IP_TOS		126209	2					
ANR	126527	Identifier	IP_TOS		126209	0					
ANR	126528	Argument	& tos		126209	3					
ANR	126529	UnaryOperationExpression	& tos		126209	0					
ANR	126530	UnaryOperator	&		126209	0					
ANR	126531	Identifier	tos		126209	1					
ANR	126532	Argument	sizeof ( tos )		126209	4					
ANR	126533	SizeofExpression	sizeof ( tos )		126209	0					
ANR	126534	Sizeof	sizeof		126209	0					
ANR	126535	SizeofOperand	tos		126209	1					
ANR	126536	IfStatement	"if ( setsockopt ( server_sock , SOL_IP , IP_TRANSPARENT , & opt , sizeof ( opt ) ) )"		126209	9					
ANR	126537	Condition	"setsockopt ( server_sock , SOL_IP , IP_TRANSPARENT , & opt , sizeof ( opt ) )"	460:12:13685:13750	126209	0	True				
ANR	126538	CallExpression	"setsockopt ( server_sock , SOL_IP , IP_TRANSPARENT , & opt , sizeof ( opt ) )"		126209	0					
ANR	126539	Callee	setsockopt		126209	0					
ANR	126540	Identifier	setsockopt		126209	0					
ANR	126541	ArgumentList	server_sock		126209	1					
ANR	126542	Argument	server_sock		126209	0					
ANR	126543	Identifier	server_sock		126209	0					
ANR	126544	Argument	SOL_IP		126209	1					
ANR	126545	Identifier	SOL_IP		126209	0					
ANR	126546	Argument	IP_TRANSPARENT		126209	2					
ANR	126547	Identifier	IP_TRANSPARENT		126209	0					
ANR	126548	Argument	& opt		126209	3					
ANR	126549	UnaryOperationExpression	& opt		126209	0					
ANR	126550	UnaryOperator	&		126209	0					
ANR	126551	Identifier	opt		126209	1					
ANR	126552	Argument	sizeof ( opt )		126209	4					
ANR	126553	SizeofExpression	sizeof ( opt )		126209	0					
ANR	126554	Sizeof	sizeof		126209	0					
ANR	126555	SizeofOperand	opt		126209	1					
ANR	126556	CompoundStatement		73:80:2421:2421	126209	1					
ANR	126557	ExpressionStatement	"ERROR ( ""[udp] setsockopt IP_TRANSPARENT"" )"	461:12:13767:13807	126209	0	True				
ANR	126558	CallExpression	"ERROR ( ""[udp] setsockopt IP_TRANSPARENT"" )"		126209	0					
ANR	126559	Callee	ERROR		126209	0					
ANR	126560	Identifier	ERROR		126209	0					
ANR	126561	ArgumentList	"""[udp] setsockopt IP_TRANSPARENT"""		126209	1					
ANR	126562	Argument	"""[udp] setsockopt IP_TRANSPARENT"""		126209	0					
ANR	126563	PrimaryExpression	"""[udp] setsockopt IP_TRANSPARENT"""		126209	0					
ANR	126564	ExpressionStatement	exit ( EXIT_FAILURE )	462:12:13821:13839	126209	1	True				
ANR	126565	CallExpression	exit ( EXIT_FAILURE )		126209	0					
ANR	126566	Callee	exit		126209	0					
ANR	126567	Identifier	exit		126209	0					
ANR	126568	ArgumentList	EXIT_FAILURE		126209	1					
ANR	126569	Argument	EXIT_FAILURE		126209	0					
ANR	126570	Identifier	EXIT_FAILURE		126209	0					
ANR	126571	IfStatement	if ( rp -> ai_family == AF_INET )		126209	10					
ANR	126572	Condition	rp -> ai_family == AF_INET	464:12:13863:13886	126209	0	True				
ANR	126573	EqualityExpression	rp -> ai_family == AF_INET		126209	0		==			
ANR	126574	PtrMemberAccess	rp -> ai_family		126209	0					
ANR	126575	Identifier	rp		126209	0					
ANR	126576	Identifier	ai_family		126209	1					
ANR	126577	Identifier	AF_INET		126209	1					
ANR	126578	CompoundStatement		77:38:2557:2557	126209	1					
ANR	126579	IfStatement	"if ( setsockopt ( server_sock , SOL_IP , IP_RECVORIGDSTADDR , & opt , sizeof ( opt ) ) )"		126209	0					
ANR	126580	Condition	"setsockopt ( server_sock , SOL_IP , IP_RECVORIGDSTADDR , & opt , sizeof ( opt ) )"	465:16:13907:13976	126209	0	True				
ANR	126581	CallExpression	"setsockopt ( server_sock , SOL_IP , IP_RECVORIGDSTADDR , & opt , sizeof ( opt ) )"		126209	0					
ANR	126582	Callee	setsockopt		126209	0					
ANR	126583	Identifier	setsockopt		126209	0					
ANR	126584	ArgumentList	server_sock		126209	1					
ANR	126585	Argument	server_sock		126209	0					
ANR	126586	Identifier	server_sock		126209	0					
ANR	126587	Argument	SOL_IP		126209	1					
ANR	126588	Identifier	SOL_IP		126209	0					
ANR	126589	Argument	IP_RECVORIGDSTADDR		126209	2					
ANR	126590	Identifier	IP_RECVORIGDSTADDR		126209	0					
ANR	126591	Argument	& opt		126209	3					
ANR	126592	UnaryOperationExpression	& opt		126209	0					
ANR	126593	UnaryOperator	&		126209	0					
ANR	126594	Identifier	opt		126209	1					
ANR	126595	Argument	sizeof ( opt )		126209	4					
ANR	126596	SizeofExpression	sizeof ( opt )		126209	0					
ANR	126597	Sizeof	sizeof		126209	0					
ANR	126598	SizeofOperand	opt		126209	1					
ANR	126599	CompoundStatement		78:88:2647:2647	126209	1					
ANR	126600	ExpressionStatement	"FATAL ( ""[udp] setsockopt IP_RECVORIGDSTADDR"" )"	466:16:13997:14041	126209	0	True				
ANR	126601	CallExpression	"FATAL ( ""[udp] setsockopt IP_RECVORIGDSTADDR"" )"		126209	0					
ANR	126602	Callee	FATAL		126209	0					
ANR	126603	Identifier	FATAL		126209	0					
ANR	126604	ArgumentList	"""[udp] setsockopt IP_RECVORIGDSTADDR"""		126209	1					
ANR	126605	Argument	"""[udp] setsockopt IP_RECVORIGDSTADDR"""		126209	0					
ANR	126606	PrimaryExpression	"""[udp] setsockopt IP_RECVORIGDSTADDR"""		126209	0					
ANR	126607	ElseStatement	else		126209	0					
ANR	126608	IfStatement	if ( rp -> ai_family == AF_INET6 )		126209	0					
ANR	126609	Condition	rp -> ai_family == AF_INET6	468:19:14076:14100	126209	0	True				
ANR	126610	EqualityExpression	rp -> ai_family == AF_INET6		126209	0		==			
ANR	126611	PtrMemberAccess	rp -> ai_family		126209	0					
ANR	126612	Identifier	rp		126209	0					
ANR	126613	Identifier	ai_family		126209	1					
ANR	126614	Identifier	AF_INET6		126209	1					
ANR	126615	CompoundStatement		81:46:2771:2771	126209	1					
ANR	126616	IfStatement	"if ( setsockopt ( server_sock , SOL_IPV6 , IPV6_RECVORIGDSTADDR , & opt , sizeof ( opt ) ) )"		126209	0					
ANR	126617	Condition	"setsockopt ( server_sock , SOL_IPV6 , IPV6_RECVORIGDSTADDR , & opt , sizeof ( opt ) )"	469:16:14121:14194	126209	0	True				
ANR	126618	CallExpression	"setsockopt ( server_sock , SOL_IPV6 , IPV6_RECVORIGDSTADDR , & opt , sizeof ( opt ) )"		126209	0					
ANR	126619	Callee	setsockopt		126209	0					
ANR	126620	Identifier	setsockopt		126209	0					
ANR	126621	ArgumentList	server_sock		126209	1					
ANR	126622	Argument	server_sock		126209	0					
ANR	126623	Identifier	server_sock		126209	0					
ANR	126624	Argument	SOL_IPV6		126209	1					
ANR	126625	Identifier	SOL_IPV6		126209	0					
ANR	126626	Argument	IPV6_RECVORIGDSTADDR		126209	2					
ANR	126627	Identifier	IPV6_RECVORIGDSTADDR		126209	0					
ANR	126628	Argument	& opt		126209	3					
ANR	126629	UnaryOperationExpression	& opt		126209	0					
ANR	126630	UnaryOperator	&		126209	0					
ANR	126631	Identifier	opt		126209	1					
ANR	126632	Argument	sizeof ( opt )		126209	4					
ANR	126633	SizeofExpression	sizeof ( opt )		126209	0					
ANR	126634	Sizeof	sizeof		126209	0					
ANR	126635	SizeofOperand	opt		126209	1					
ANR	126636	CompoundStatement		82:92:2865:2865	126209	1					
ANR	126637	ExpressionStatement	"FATAL ( ""[udp] setsockopt IPV6_RECVORIGDSTADDR"" )"	470:16:14215:14261	126209	0	True				
ANR	126638	CallExpression	"FATAL ( ""[udp] setsockopt IPV6_RECVORIGDSTADDR"" )"		126209	0					
ANR	126639	Callee	FATAL		126209	0					
ANR	126640	Identifier	FATAL		126209	0					
ANR	126641	ArgumentList	"""[udp] setsockopt IPV6_RECVORIGDSTADDR"""		126209	1					
ANR	126642	Argument	"""[udp] setsockopt IPV6_RECVORIGDSTADDR"""		126209	0					
ANR	126643	PrimaryExpression	"""[udp] setsockopt IPV6_RECVORIGDSTADDR"""		126209	0					
ANR	126644	ExpressionStatement	"s = bind ( server_sock , rp -> ai_addr , rp -> ai_addrlen )"	475:8:14303:14353	126209	11	True				
ANR	126645	AssignmentExpression	"s = bind ( server_sock , rp -> ai_addr , rp -> ai_addrlen )"		126209	0		=			
ANR	126646	Identifier	s		126209	0					
ANR	126647	CallExpression	"bind ( server_sock , rp -> ai_addr , rp -> ai_addrlen )"		126209	1					
ANR	126648	Callee	bind		126209	0					
ANR	126649	Identifier	bind		126209	0					
ANR	126650	ArgumentList	server_sock		126209	1					
ANR	126651	Argument	server_sock		126209	0					
ANR	126652	Identifier	server_sock		126209	0					
ANR	126653	Argument	rp -> ai_addr		126209	1					
ANR	126654	PtrMemberAccess	rp -> ai_addr		126209	0					
ANR	126655	Identifier	rp		126209	0					
ANR	126656	Identifier	ai_addr		126209	1					
ANR	126657	Argument	rp -> ai_addrlen		126209	2					
ANR	126658	PtrMemberAccess	rp -> ai_addrlen		126209	0					
ANR	126659	Identifier	rp		126209	0					
ANR	126660	Identifier	ai_addrlen		126209	1					
ANR	126661	IfStatement	if ( s == 0 )		126209	12					
ANR	126662	Condition	s == 0	476:12:14367:14372	126209	0	True				
ANR	126663	EqualityExpression	s == 0		126209	0		==			
ANR	126664	Identifier	s		126209	0					
ANR	126665	PrimaryExpression	0		126209	1					
ANR	126666	CompoundStatement		89:20:3043:3043	126209	1					
ANR	126667	BreakStatement	break ;	478:12:14440:14445	126209	0	True				
ANR	126668	ElseStatement	else		126209	0					
ANR	126669	CompoundStatement		92:15:3130:3130	126209	0					
ANR	126670	ExpressionStatement	"ERROR ( ""[udp] bind"" )"	480:12:14476:14495	126209	0	True				
ANR	126671	CallExpression	"ERROR ( ""[udp] bind"" )"		126209	0					
ANR	126672	Callee	ERROR		126209	0					
ANR	126673	Identifier	ERROR		126209	0					
ANR	126674	ArgumentList	"""[udp] bind"""		126209	1					
ANR	126675	Argument	"""[udp] bind"""		126209	0					
ANR	126676	PrimaryExpression	"""[udp] bind"""		126209	0					
ANR	126677	ExpressionStatement	close ( server_sock )	483:8:14516:14534	126209	13	True				
ANR	126678	CallExpression	close ( server_sock )		126209	0					
ANR	126679	Callee	close		126209	0					
ANR	126680	Identifier	close		126209	0					
ANR	126681	ArgumentList	server_sock		126209	1					
ANR	126682	Argument	server_sock		126209	0					
ANR	126683	Identifier	server_sock		126209	0					
ANR	126684	ExpressionStatement	server_sock = - 1	484:8:14544:14560	126209	14	True				
ANR	126685	AssignmentExpression	server_sock = - 1		126209	0		=			
ANR	126686	Identifier	server_sock		126209	0					
ANR	126687	UnaryOperationExpression	- 1		126209	1					
ANR	126688	UnaryOperator	-		126209	0					
ANR	126689	PrimaryExpression	1		126209	1					
ANR	126690	ExpressionStatement	freeaddrinfo ( result )	487:4:14573:14593	126209	14	True				
ANR	126691	CallExpression	freeaddrinfo ( result )		126209	0					
ANR	126692	Callee	freeaddrinfo		126209	0					
ANR	126693	Identifier	freeaddrinfo		126209	0					
ANR	126694	ArgumentList	result		126209	1					
ANR	126695	Argument	result		126209	0					
ANR	126696	Identifier	result		126209	0					
ANR	126697	ReturnStatement	return server_sock ;	489:4:14600:14618	126209	15	True				
ANR	126698	Identifier	server_sock		126209	0					
ANR	126699	ReturnType	int		126209	1					
ANR	126700	Identifier	create_server_socket		126209	2					
ANR	126701	ParameterList	"const char * host , const char * port"		126209	3					
ANR	126702	Parameter	const char * host	387:21:11295:11310	126209	0	True				
ANR	126703	ParameterType	const char *		126209	0					
ANR	126704	Identifier	host		126209	1					
ANR	126705	Parameter	const char * port	387:39:11313:11328	126209	1	True				
ANR	126706	ParameterType	const char *		126209	0					
ANR	126707	Identifier	port		126209	1					
ANR	126708	CFGEntryNode	ENTRY		126209		True				
ANR	126709	CFGExitNode	EXIT		126209		True				
ANR	126710	Symbol	rp -> ai_protocol		126209						
ANR	126711	Symbol	IP_TOS		126209						
ANR	126712	Symbol	set_reuseport		126209						
ANR	126713	Symbol	IP_RECVORIGDSTADDR		126209						
ANR	126714	Symbol	rp -> ai_addrlen		126209						
ANR	126715	Symbol	server_sock		126209						
ANR	126716	Symbol	hints . ai_flags		126209						
ANR	126717	Symbol	gai_strerror		126209						
ANR	126718	Symbol	ipv6only		126209						
ANR	126719	Symbol	ipv4v6bindall -> ai_family		126209						
ANR	126720	Symbol	* ipv4v6bindall		126209						
ANR	126721	Symbol	bind		126209						
ANR	126722	Symbol	AI_ADDRCONFIG		126209						
ANR	126723	Symbol	IP_TRANSPARENT		126209						
ANR	126724	Symbol	host		126209						
ANR	126725	Symbol	ipv4v6bindall		126209						
ANR	126726	Symbol	& opt		126209						
ANR	126727	Symbol	IPPROTO_IP		126209						
ANR	126728	Symbol	NULL		126209						
ANR	126729	Symbol	hints		126209						
ANR	126730	Symbol	getaddrinfo		126209						
ANR	126731	Symbol	SO_REUSEADDR		126209						
ANR	126732	Symbol	IPV6_RECVORIGDSTADDR		126209						
ANR	126733	Symbol	AF_INET		126209						
ANR	126734	Symbol	SOCK_DGRAM		126209						
ANR	126735	Symbol	hints . ai_socktype		126209						
ANR	126736	Symbol	ipv4v6bindall -> ai_next		126209						
ANR	126737	Symbol	opt		126209						
ANR	126738	Symbol	port		126209						
ANR	126739	Symbol	EXIT_FAILURE		126209						
ANR	126740	Symbol	IPPROTO_IPV6		126209						
ANR	126741	Symbol	rp		126209						
ANR	126742	Symbol	AI_PASSIVE		126209						
ANR	126743	Symbol	reuse_port		126209						
ANR	126744	Symbol	rp -> ai_addr		126209						
ANR	126745	Symbol	SOL_IP		126209						
ANR	126746	Symbol	setsockopt		126209						
ANR	126747	Symbol	AF_UNSPEC		126209						
ANR	126748	Symbol	result		126209						
ANR	126749	Symbol	hints . ai_family		126209						
ANR	126750	Symbol	& result		126209						
ANR	126751	Symbol	tos		126209						
ANR	126752	Symbol	& ipv6only		126209						
ANR	126753	Symbol	& hints		126209						
ANR	126754	Symbol	err		126209						
ANR	126755	Symbol	* rp		126209						
ANR	126756	Symbol	rp -> ai_socktype		126209						
ANR	126757	Symbol	hints . ai_protocol		126209						
ANR	126758	Symbol	SOL_IPV6		126209						
ANR	126759	Symbol	AF_INET6		126209						
ANR	126760	Symbol	SOL_SOCKET		126209						
ANR	126761	Symbol	IPV6_V6ONLY		126209						
ANR	126762	Symbol	s		126209						
ANR	126763	Symbol	IPPROTO_UDP		126209						
ANR	126764	Symbol	rp -> ai_family		126209						
ANR	126765	Symbol	& tos		126209						
ANR	126766	Symbol	socket		126209						
ANR	126767	Symbol	rp -> ai_next		126209						
ANR	126768	Function	new_remote	492:0:14623:15064							
ANR	126769	FunctionDef	"new_remote (int fd , server_ctx_t * server_ctx)"		126768	0					
ANR	126770	CompoundStatement		494:0:14683:15064	126768	0					
ANR	126771	IdentifierDeclStatement	remote_ctx_t * ctx = ss_malloc ( sizeof ( remote_ctx_t ) ) ;	495:4:14689:14740	126768	0	True				
ANR	126772	IdentifierDecl	* ctx = ss_malloc ( sizeof ( remote_ctx_t ) )		126768	0					
ANR	126773	IdentifierDeclType	remote_ctx_t *		126768	0					
ANR	126774	Identifier	ctx		126768	1					
ANR	126775	AssignmentExpression	* ctx = ss_malloc ( sizeof ( remote_ctx_t ) )		126768	2		=			
ANR	126776	Identifier	ctx		126768	0					
ANR	126777	CallExpression	ss_malloc ( sizeof ( remote_ctx_t ) )		126768	1					
ANR	126778	Callee	ss_malloc		126768	0					
ANR	126779	Identifier	ss_malloc		126768	0					
ANR	126780	ArgumentList	sizeof ( remote_ctx_t )		126768	1					
ANR	126781	Argument	sizeof ( remote_ctx_t )		126768	0					
ANR	126782	SizeofExpression	sizeof ( remote_ctx_t )		126768	0					
ANR	126783	Sizeof	sizeof		126768	0					
ANR	126784	SizeofOperand	remote_ctx_t		126768	1					
ANR	126785	ExpressionStatement	"memset ( ctx , 0 , sizeof ( remote_ctx_t ) )"	496:4:14746:14782	126768	1	True				
ANR	126786	CallExpression	"memset ( ctx , 0 , sizeof ( remote_ctx_t ) )"		126768	0					
ANR	126787	Callee	memset		126768	0					
ANR	126788	Identifier	memset		126768	0					
ANR	126789	ArgumentList	ctx		126768	1					
ANR	126790	Argument	ctx		126768	0					
ANR	126791	Identifier	ctx		126768	0					
ANR	126792	Argument	0		126768	1					
ANR	126793	PrimaryExpression	0		126768	0					
ANR	126794	Argument	sizeof ( remote_ctx_t )		126768	2					
ANR	126795	SizeofExpression	sizeof ( remote_ctx_t )		126768	0					
ANR	126796	Sizeof	sizeof		126768	0					
ANR	126797	SizeofOperand	remote_ctx_t		126768	1					
ANR	126798	ExpressionStatement	ctx -> fd = fd	498:4:14789:14809	126768	2	True				
ANR	126799	AssignmentExpression	ctx -> fd = fd		126768	0		=			
ANR	126800	PtrMemberAccess	ctx -> fd		126768	0					
ANR	126801	Identifier	ctx		126768	0					
ANR	126802	Identifier	fd		126768	1					
ANR	126803	Identifier	fd		126768	1					
ANR	126804	ExpressionStatement	ctx -> server_ctx = server_ctx	499:4:14815:14843	126768	3	True				
ANR	126805	AssignmentExpression	ctx -> server_ctx = server_ctx		126768	0		=			
ANR	126806	PtrMemberAccess	ctx -> server_ctx		126768	0					
ANR	126807	Identifier	ctx		126768	0					
ANR	126808	Identifier	server_ctx		126768	1					
ANR	126809	Identifier	server_ctx		126768	1					
ANR	126810	ExpressionStatement	ctx -> af = AF_UNSPEC	500:4:14849:14876	126768	4	True				
ANR	126811	AssignmentExpression	ctx -> af = AF_UNSPEC		126768	0		=			
ANR	126812	PtrMemberAccess	ctx -> af		126768	0					
ANR	126813	Identifier	ctx		126768	0					
ANR	126814	Identifier	af		126768	1					
ANR	126815	Identifier	AF_UNSPEC		126768	1					
ANR	126816	ExpressionStatement	"ev_io_init ( & ctx -> io , remote_recv_cb , fd , EV_READ )"	502:4:14883:14932	126768	5	True				
ANR	126817	CallExpression	"ev_io_init ( & ctx -> io , remote_recv_cb , fd , EV_READ )"		126768	0					
ANR	126818	Callee	ev_io_init		126768	0					
ANR	126819	Identifier	ev_io_init		126768	0					
ANR	126820	ArgumentList	& ctx -> io		126768	1					
ANR	126821	Argument	& ctx -> io		126768	0					
ANR	126822	UnaryOperationExpression	& ctx -> io		126768	0					
ANR	126823	UnaryOperator	&		126768	0					
ANR	126824	PtrMemberAccess	ctx -> io		126768	1					
ANR	126825	Identifier	ctx		126768	0					
ANR	126826	Identifier	io		126768	1					
ANR	126827	Argument	remote_recv_cb		126768	1					
ANR	126828	Identifier	remote_recv_cb		126768	0					
ANR	126829	Argument	fd		126768	2					
ANR	126830	Identifier	fd		126768	0					
ANR	126831	Argument	EV_READ		126768	3					
ANR	126832	Identifier	EV_READ		126768	0					
ANR	126833	ExpressionStatement	"ev_timer_init ( & ctx -> watcher , remote_timeout_cb , server_ctx -> timeout , server_ctx -> timeout )"	503:4:14938:15045	126768	6	True				
ANR	126834	CallExpression	"ev_timer_init ( & ctx -> watcher , remote_timeout_cb , server_ctx -> timeout , server_ctx -> timeout )"		126768	0					
ANR	126835	Callee	ev_timer_init		126768	0					
ANR	126836	Identifier	ev_timer_init		126768	0					
ANR	126837	ArgumentList	& ctx -> watcher		126768	1					
ANR	126838	Argument	& ctx -> watcher		126768	0					
ANR	126839	UnaryOperationExpression	& ctx -> watcher		126768	0					
ANR	126840	UnaryOperator	&		126768	0					
ANR	126841	PtrMemberAccess	ctx -> watcher		126768	1					
ANR	126842	Identifier	ctx		126768	0					
ANR	126843	Identifier	watcher		126768	1					
ANR	126844	Argument	remote_timeout_cb		126768	1					
ANR	126845	Identifier	remote_timeout_cb		126768	0					
ANR	126846	Argument	server_ctx -> timeout		126768	2					
ANR	126847	PtrMemberAccess	server_ctx -> timeout		126768	0					
ANR	126848	Identifier	server_ctx		126768	0					
ANR	126849	Identifier	timeout		126768	1					
ANR	126850	Argument	server_ctx -> timeout		126768	3					
ANR	126851	PtrMemberAccess	server_ctx -> timeout		126768	0					
ANR	126852	Identifier	server_ctx		126768	0					
ANR	126853	Identifier	timeout		126768	1					
ANR	126854	ReturnStatement	return ctx ;	506:4:15052:15062	126768	7	True				
ANR	126855	Identifier	ctx		126768	0					
ANR	126856	ReturnType	remote_ctx_t *		126768	1					
ANR	126857	Identifier	new_remote		126768	2					
ANR	126858	ParameterList	"int fd , server_ctx_t * server_ctx"		126768	3					
ANR	126859	Parameter	int fd	493:11:14649:14654	126768	0	True				
ANR	126860	ParameterType	int		126768	0					
ANR	126861	Identifier	fd		126768	1					
ANR	126862	Parameter	server_ctx_t * server_ctx	493:19:14657:14680	126768	1	True				
ANR	126863	ParameterType	server_ctx_t *		126768	0					
ANR	126864	Identifier	server_ctx		126768	1					
ANR	126865	CFGEntryNode	ENTRY		126768		True				
ANR	126866	CFGExitNode	EXIT		126768		True				
ANR	126867	Symbol	server_ctx		126768						
ANR	126868	Symbol	server_ctx -> timeout		126768						
ANR	126869	Symbol	ctx		126768						
ANR	126870	Symbol	ctx -> af		126768						
ANR	126871	Symbol	ctx -> fd		126768						
ANR	126872	Symbol	* server_ctx		126768						
ANR	126873	Symbol	EV_READ		126768						
ANR	126874	Symbol	remote_timeout_cb		126768						
ANR	126875	Symbol	* ctx		126768						
ANR	126876	Symbol	AF_UNSPEC		126768						
ANR	126877	Symbol	ctx -> server_ctx		126768						
ANR	126878	Symbol	& ctx -> watcher		126768						
ANR	126879	Symbol	ss_malloc		126768						
ANR	126880	Symbol	remote_recv_cb		126768						
ANR	126881	Symbol	fd		126768						
ANR	126882	Symbol	& ctx -> io		126768						
ANR	126883	Function	new_server_ctx	509:0:15067:15298							
ANR	126884	FunctionDef	new_server_ctx (int fd)		126883	0					
ANR	126885	CompoundStatement		511:0:15105:15298	126883	0					
ANR	126886	IdentifierDeclStatement	server_ctx_t * ctx = ss_malloc ( sizeof ( server_ctx_t ) ) ;	512:4:15111:15162	126883	0	True				
ANR	126887	IdentifierDecl	* ctx = ss_malloc ( sizeof ( server_ctx_t ) )		126883	0					
ANR	126888	IdentifierDeclType	server_ctx_t *		126883	0					
ANR	126889	Identifier	ctx		126883	1					
ANR	126890	AssignmentExpression	* ctx = ss_malloc ( sizeof ( server_ctx_t ) )		126883	2		=			
ANR	126891	Identifier	ctx		126883	0					
ANR	126892	CallExpression	ss_malloc ( sizeof ( server_ctx_t ) )		126883	1					
ANR	126893	Callee	ss_malloc		126883	0					
ANR	126894	Identifier	ss_malloc		126883	0					
ANR	126895	ArgumentList	sizeof ( server_ctx_t )		126883	1					
ANR	126896	Argument	sizeof ( server_ctx_t )		126883	0					
ANR	126897	SizeofExpression	sizeof ( server_ctx_t )		126883	0					
ANR	126898	Sizeof	sizeof		126883	0					
ANR	126899	SizeofOperand	server_ctx_t		126883	1					
ANR	126900	ExpressionStatement	"memset ( ctx , 0 , sizeof ( server_ctx_t ) )"	513:4:15168:15204	126883	1	True				
ANR	126901	CallExpression	"memset ( ctx , 0 , sizeof ( server_ctx_t ) )"		126883	0					
ANR	126902	Callee	memset		126883	0					
ANR	126903	Identifier	memset		126883	0					
ANR	126904	ArgumentList	ctx		126883	1					
ANR	126905	Argument	ctx		126883	0					
ANR	126906	Identifier	ctx		126883	0					
ANR	126907	Argument	0		126883	1					
ANR	126908	PrimaryExpression	0		126883	0					
ANR	126909	Argument	sizeof ( server_ctx_t )		126883	2					
ANR	126910	SizeofExpression	sizeof ( server_ctx_t )		126883	0					
ANR	126911	Sizeof	sizeof		126883	0					
ANR	126912	SizeofOperand	server_ctx_t		126883	1					
ANR	126913	ExpressionStatement	ctx -> fd = fd	515:4:15211:15223	126883	2	True				
ANR	126914	AssignmentExpression	ctx -> fd = fd		126883	0		=			
ANR	126915	PtrMemberAccess	ctx -> fd		126883	0					
ANR	126916	Identifier	ctx		126883	0					
ANR	126917	Identifier	fd		126883	1					
ANR	126918	Identifier	fd		126883	1					
ANR	126919	ExpressionStatement	"ev_io_init ( & ctx -> io , server_recv_cb , fd , EV_READ )"	517:4:15230:15279	126883	3	True				
ANR	126920	CallExpression	"ev_io_init ( & ctx -> io , server_recv_cb , fd , EV_READ )"		126883	0					
ANR	126921	Callee	ev_io_init		126883	0					
ANR	126922	Identifier	ev_io_init		126883	0					
ANR	126923	ArgumentList	& ctx -> io		126883	1					
ANR	126924	Argument	& ctx -> io		126883	0					
ANR	126925	UnaryOperationExpression	& ctx -> io		126883	0					
ANR	126926	UnaryOperator	&		126883	0					
ANR	126927	PtrMemberAccess	ctx -> io		126883	1					
ANR	126928	Identifier	ctx		126883	0					
ANR	126929	Identifier	io		126883	1					
ANR	126930	Argument	server_recv_cb		126883	1					
ANR	126931	Identifier	server_recv_cb		126883	0					
ANR	126932	Argument	fd		126883	2					
ANR	126933	Identifier	fd		126883	0					
ANR	126934	Argument	EV_READ		126883	3					
ANR	126935	Identifier	EV_READ		126883	0					
ANR	126936	ReturnStatement	return ctx ;	519:4:15286:15296	126883	4	True				
ANR	126937	Identifier	ctx		126883	0					
ANR	126938	ReturnType	server_ctx_t *		126883	1					
ANR	126939	Identifier	new_server_ctx		126883	2					
ANR	126940	ParameterList	int fd		126883	3					
ANR	126941	Parameter	int fd	510:15:15097:15102	126883	0	True				
ANR	126942	ParameterType	int		126883	0					
ANR	126943	Identifier	fd		126883	1					
ANR	126944	CFGEntryNode	ENTRY		126883		True				
ANR	126945	CFGExitNode	EXIT		126883		True				
ANR	126946	Symbol	ctx		126883						
ANR	126947	Symbol	ctx -> fd		126883						
ANR	126948	Symbol	ss_malloc		126883						
ANR	126949	Symbol	server_recv_cb		126883						
ANR	126950	Symbol	EV_READ		126883						
ANR	126951	Symbol	fd		126883						
ANR	126952	Symbol	* ctx		126883						
ANR	126953	Symbol	& ctx -> io		126883						
ANR	126954	Function	new_query_ctx	523:0:15322:15641							
ANR	126955	FunctionDef	"new_query_ctx (char * buf , size_t len)"		126954	0					
ANR	126956	CompoundStatement		525:0:15378:15641	126954	0					
ANR	126957	IdentifierDeclStatement	struct query_ctx * ctx = ss_malloc ( sizeof ( struct query_ctx ) ) ;	526:4:15384:15443	126954	0	True				
ANR	126958	IdentifierDecl	* ctx = ss_malloc ( sizeof ( struct query_ctx ) )		126954	0					
ANR	126959	IdentifierDeclType	struct query_ctx *		126954	0					
ANR	126960	Identifier	ctx		126954	1					
ANR	126961	AssignmentExpression	* ctx = ss_malloc ( sizeof ( struct query_ctx ) )		126954	2		=			
ANR	126962	Identifier	ctx		126954	0					
ANR	126963	CallExpression	ss_malloc ( sizeof ( struct query_ctx ) )		126954	1					
ANR	126964	Callee	ss_malloc		126954	0					
ANR	126965	Identifier	ss_malloc		126954	0					
ANR	126966	ArgumentList	sizeof ( struct query_ctx )		126954	1					
ANR	126967	Argument	sizeof ( struct query_ctx )		126954	0					
ANR	126968	SizeofExpression	sizeof ( struct query_ctx )		126954	0					
ANR	126969	Sizeof	sizeof		126954	0					
ANR	126970	SizeofOperand	struct query_ctx		126954	1					
ANR	126971	ExpressionStatement	"memset ( ctx , 0 , sizeof ( struct query_ctx ) )"	527:4:15449:15489	126954	1	True				
ANR	126972	CallExpression	"memset ( ctx , 0 , sizeof ( struct query_ctx ) )"		126954	0					
ANR	126973	Callee	memset		126954	0					
ANR	126974	Identifier	memset		126954	0					
ANR	126975	ArgumentList	ctx		126954	1					
ANR	126976	Argument	ctx		126954	0					
ANR	126977	Identifier	ctx		126954	0					
ANR	126978	Argument	0		126954	1					
ANR	126979	PrimaryExpression	0		126954	0					
ANR	126980	Argument	sizeof ( struct query_ctx )		126954	2					
ANR	126981	SizeofExpression	sizeof ( struct query_ctx )		126954	0					
ANR	126982	Sizeof	sizeof		126954	0					
ANR	126983	SizeofOperand	struct query_ctx		126954	1					
ANR	126984	ExpressionStatement	ctx -> buf = ss_malloc ( sizeof ( buffer_t ) )	528:4:15495:15533	126954	2	True				
ANR	126985	AssignmentExpression	ctx -> buf = ss_malloc ( sizeof ( buffer_t ) )		126954	0		=			
ANR	126986	PtrMemberAccess	ctx -> buf		126954	0					
ANR	126987	Identifier	ctx		126954	0					
ANR	126988	Identifier	buf		126954	1					
ANR	126989	CallExpression	ss_malloc ( sizeof ( buffer_t ) )		126954	1					
ANR	126990	Callee	ss_malloc		126954	0					
ANR	126991	Identifier	ss_malloc		126954	0					
ANR	126992	ArgumentList	sizeof ( buffer_t )		126954	1					
ANR	126993	Argument	sizeof ( buffer_t )		126954	0					
ANR	126994	SizeofExpression	sizeof ( buffer_t )		126954	0					
ANR	126995	Sizeof	sizeof		126954	0					
ANR	126996	SizeofOperand	buffer_t		126954	1					
ANR	126997	ExpressionStatement	"balloc ( ctx -> buf , len )"	529:4:15539:15560	126954	3	True				
ANR	126998	CallExpression	"balloc ( ctx -> buf , len )"		126954	0					
ANR	126999	Callee	balloc		126954	0					
ANR	127000	Identifier	balloc		126954	0					
ANR	127001	ArgumentList	ctx -> buf		126954	1					
ANR	127002	Argument	ctx -> buf		126954	0					
ANR	127003	PtrMemberAccess	ctx -> buf		126954	0					
ANR	127004	Identifier	ctx		126954	0					
ANR	127005	Identifier	buf		126954	1					
ANR	127006	Argument	len		126954	1					
ANR	127007	Identifier	len		126954	0					
ANR	127008	ExpressionStatement	"memcpy ( ctx -> buf -> data , buf , len )"	530:4:15566:15598	126954	4	True				
ANR	127009	CallExpression	"memcpy ( ctx -> buf -> data , buf , len )"		126954	0					
ANR	127010	Callee	memcpy		126954	0					
ANR	127011	Identifier	memcpy		126954	0					
ANR	127012	ArgumentList	ctx -> buf -> data		126954	1					
ANR	127013	Argument	ctx -> buf -> data		126954	0					
ANR	127014	PtrMemberAccess	ctx -> buf -> data		126954	0					
ANR	127015	PtrMemberAccess	ctx -> buf		126954	0					
ANR	127016	Identifier	ctx		126954	0					
ANR	127017	Identifier	buf		126954	1					
ANR	127018	Identifier	data		126954	1					
ANR	127019	Argument	buf		126954	1					
ANR	127020	Identifier	buf		126954	0					
ANR	127021	Argument	len		126954	2					
ANR	127022	Identifier	len		126954	0					
ANR	127023	ExpressionStatement	ctx -> buf -> len = len	531:4:15604:15623	126954	5	True				
ANR	127024	AssignmentExpression	ctx -> buf -> len = len		126954	0		=			
ANR	127025	PtrMemberAccess	ctx -> buf -> len		126954	0					
ANR	127026	PtrMemberAccess	ctx -> buf		126954	0					
ANR	127027	Identifier	ctx		126954	0					
ANR	127028	Identifier	buf		126954	1					
ANR	127029	Identifier	len		126954	1					
ANR	127030	Identifier	len		126954	1					
ANR	127031	ReturnStatement	return ctx ;	532:4:15629:15639	126954	6	True				
ANR	127032	Identifier	ctx		126954	0					
ANR	127033	ReturnType	struct query_ctx *		126954	1					
ANR	127034	Identifier	new_query_ctx		126954	2					
ANR	127035	ParameterList	"char * buf , size_t len"		126954	3					
ANR	127036	Parameter	char * buf	524:14:15355:15363	126954	0	True				
ANR	127037	ParameterType	char *		126954	0					
ANR	127038	Identifier	buf		126954	1					
ANR	127039	Parameter	size_t len	524:25:15366:15375	126954	1	True				
ANR	127040	ParameterType	size_t		126954	0					
ANR	127041	Identifier	len		126954	1					
ANR	127042	CFGEntryNode	ENTRY		126954		True				
ANR	127043	CFGExitNode	EXIT		126954		True				
ANR	127044	Symbol	ctx -> buf -> len		126954						
ANR	127045	Symbol	buf		126954						
ANR	127046	Symbol	len		126954						
ANR	127047	Symbol	ctx		126954						
ANR	127048	Symbol	ss_malloc		126954						
ANR	127049	Symbol	* * ctx		126954						
ANR	127050	Symbol	ctx -> buf		126954						
ANR	127051	Symbol	ctx -> buf -> data		126954						
ANR	127052	Symbol	* ctx		126954						
ANR	127053	Symbol	* ctx -> buf		126954						
ANR	127054	Function	close_and_free_remote	549:0:15865:16076							
ANR	127055	FunctionDef	close_and_free_remote (EV_P_ remote_ctx_t * ctx)		127054	0					
ANR	127056	CompoundStatement		551:0:15917:16076	127054	0					
ANR	127057	IfStatement	if ( ctx != NULL )		127054	0					
ANR	127058	Condition	ctx != NULL	552:8:15927:15937	127054	0	True				
ANR	127059	EqualityExpression	ctx != NULL		127054	0		!=			
ANR	127060	Identifier	ctx		127054	0					
ANR	127061	Identifier	NULL		127054	1					
ANR	127062	CompoundStatement		2:21:22:22	127054	1					
ANR	127063	ExpressionStatement	ev_timer_stop ( EV_A_ & ctx -> watcher )	553:8:15950:15985	127054	0	True				
ANR	127064	CallExpression	ev_timer_stop ( EV_A_ & ctx -> watcher )		127054	0					
ANR	127065	Callee	ev_timer_stop		127054	0					
ANR	127066	Identifier	ev_timer_stop		127054	0					
ANR	127067	ArgumentList	EV_A_ & ctx -> watcher		127054	1					
ANR	127068	Argument	EV_A_ & ctx -> watcher		127054	0					
ANR	127069	BitAndExpression	EV_A_ & ctx -> watcher		127054	0		&			
ANR	127070	Identifier	EV_A_		127054	0					
ANR	127071	PtrMemberAccess	ctx -> watcher		127054	1					
ANR	127072	Identifier	ctx		127054	0					
ANR	127073	Identifier	watcher		127054	1					
ANR	127074	ExpressionStatement	ev_io_stop ( EV_A_ & ctx -> io )	554:8:15995:16022	127054	1	True				
ANR	127075	CallExpression	ev_io_stop ( EV_A_ & ctx -> io )		127054	0					
ANR	127076	Callee	ev_io_stop		127054	0					
ANR	127077	Identifier	ev_io_stop		127054	0					
ANR	127078	ArgumentList	EV_A_ & ctx -> io		127054	1					
ANR	127079	Argument	EV_A_ & ctx -> io		127054	0					
ANR	127080	BitAndExpression	EV_A_ & ctx -> io		127054	0		&			
ANR	127081	Identifier	EV_A_		127054	0					
ANR	127082	PtrMemberAccess	ctx -> io		127054	1					
ANR	127083	Identifier	ctx		127054	0					
ANR	127084	Identifier	io		127054	1					
ANR	127085	ExpressionStatement	close ( ctx -> fd )	555:8:16032:16046	127054	2	True				
ANR	127086	CallExpression	close ( ctx -> fd )		127054	0					
ANR	127087	Callee	close		127054	0					
ANR	127088	Identifier	close		127054	0					
ANR	127089	ArgumentList	ctx -> fd		127054	1					
ANR	127090	Argument	ctx -> fd		127054	0					
ANR	127091	PtrMemberAccess	ctx -> fd		127054	0					
ANR	127092	Identifier	ctx		127054	0					
ANR	127093	Identifier	fd		127054	1					
ANR	127094	ExpressionStatement	ss_free ( ctx )	556:8:16056:16068	127054	3	True				
ANR	127095	CallExpression	ss_free ( ctx )		127054	0					
ANR	127096	Callee	ss_free		127054	0					
ANR	127097	Identifier	ss_free		127054	0					
ANR	127098	ArgumentList	ctx		127054	1					
ANR	127099	Argument	ctx		127054	0					
ANR	127100	Identifier	ctx		127054	0					
ANR	127101	ReturnType	void		127054	1					
ANR	127102	Identifier	close_and_free_remote		127054	2					
ANR	127103	ParameterList	EV_P_ remote_ctx_t * ctx		127054	3					
ANR	127104	Parameter	EV_P_ remote_ctx_t * ctx	550:22:15892:15914	127054	0	True				
ANR	127105	ParameterType	EV_P_ remote_ctx_t *		127054	0					
ANR	127106	Identifier	ctx		127054	1					
ANR	127107	CFGEntryNode	ENTRY		127054		True				
ANR	127108	CFGExitNode	EXIT		127054		True				
ANR	127109	Symbol	ctx -> io		127054						
ANR	127110	Symbol	NULL		127054						
ANR	127111	Symbol	ctx		127054						
ANR	127112	Symbol	EV_A_		127054						
ANR	127113	Symbol	ctx -> watcher		127054						
ANR	127114	Symbol	ctx -> fd		127054						
ANR	127115	Symbol	* ctx		127054						
ANR	127116	Function	remote_timeout_cb	560:0:16079:16446							
ANR	127117	FunctionDef	"remote_timeout_cb (EV_P_ ev_timer * watcher , int revents)"		127116	0					
ANR	127118	CompoundStatement		562:0:16147:16446	127116	0					
ANR	127119	IdentifierDeclStatement	"remote_ctx_t * remote_ctx = cork_container_of ( watcher , remote_ctx_t , watcher ) ;"	563:4:16153:16237	127116	0	True				
ANR	127120	IdentifierDecl	"* remote_ctx = cork_container_of ( watcher , remote_ctx_t , watcher )"		127116	0					
ANR	127121	IdentifierDeclType	remote_ctx_t *		127116	0					
ANR	127122	Identifier	remote_ctx		127116	1					
ANR	127123	AssignmentExpression	"* remote_ctx = cork_container_of ( watcher , remote_ctx_t , watcher )"		127116	2		=			
ANR	127124	Identifier	remote_ctx		127116	0					
ANR	127125	CallExpression	"cork_container_of ( watcher , remote_ctx_t , watcher )"		127116	1					
ANR	127126	Callee	cork_container_of		127116	0					
ANR	127127	Identifier	cork_container_of		127116	0					
ANR	127128	ArgumentList	watcher		127116	1					
ANR	127129	Argument	watcher		127116	0					
ANR	127130	Identifier	watcher		127116	0					
ANR	127131	Argument	remote_ctx_t		127116	1					
ANR	127132	Identifier	remote_ctx_t		127116	0					
ANR	127133	Argument	watcher		127116	2					
ANR	127134	Identifier	watcher		127116	0					
ANR	127135	IfStatement	if ( verbose )		127116	1					
ANR	127136	Condition	verbose	566:8:16248:16254	127116	0	True				
ANR	127137	Identifier	verbose		127116	0					
ANR	127138	CompoundStatement		5:17:109:109	127116	1					
ANR	127139	ExpressionStatement	"LOGI ( ""[udp] connection timeout"" )"	567:8:16267:16299	127116	0	True				
ANR	127140	CallExpression	"LOGI ( ""[udp] connection timeout"" )"		127116	0					
ANR	127141	Callee	LOGI		127116	0					
ANR	127142	Identifier	LOGI		127116	0					
ANR	127143	ArgumentList	"""[udp] connection timeout"""		127116	1					
ANR	127144	Argument	"""[udp] connection timeout"""		127116	0					
ANR	127145	PrimaryExpression	"""[udp] connection timeout"""		127116	0					
ANR	127146	IdentifierDeclStatement	"char * key = hash_key ( remote_ctx -> af , & remote_ctx -> src_addr ) ;"	570:4:16312:16371	127116	2	True				
ANR	127147	IdentifierDecl	"* key = hash_key ( remote_ctx -> af , & remote_ctx -> src_addr )"		127116	0					
ANR	127148	IdentifierDeclType	char *		127116	0					
ANR	127149	Identifier	key		127116	1					
ANR	127150	AssignmentExpression	"* key = hash_key ( remote_ctx -> af , & remote_ctx -> src_addr )"		127116	2		=			
ANR	127151	Identifier	key		127116	0					
ANR	127152	CallExpression	"hash_key ( remote_ctx -> af , & remote_ctx -> src_addr )"		127116	1					
ANR	127153	Callee	hash_key		127116	0					
ANR	127154	Identifier	hash_key		127116	0					
ANR	127155	ArgumentList	remote_ctx -> af		127116	1					
ANR	127156	Argument	remote_ctx -> af		127116	0					
ANR	127157	PtrMemberAccess	remote_ctx -> af		127116	0					
ANR	127158	Identifier	remote_ctx		127116	0					
ANR	127159	Identifier	af		127116	1					
ANR	127160	Argument	& remote_ctx -> src_addr		127116	1					
ANR	127161	UnaryOperationExpression	& remote_ctx -> src_addr		127116	0					
ANR	127162	UnaryOperator	&		127116	0					
ANR	127163	PtrMemberAccess	remote_ctx -> src_addr		127116	1					
ANR	127164	Identifier	remote_ctx		127116	0					
ANR	127165	Identifier	src_addr		127116	1					
ANR	127166	ExpressionStatement	"cache_remove ( remote_ctx -> server_ctx -> conn_cache , key , HASH_KEY_LEN )"	571:4:16377:16444	127116	3	True				
ANR	127167	CallExpression	"cache_remove ( remote_ctx -> server_ctx -> conn_cache , key , HASH_KEY_LEN )"		127116	0					
ANR	127168	Callee	cache_remove		127116	0					
ANR	127169	Identifier	cache_remove		127116	0					
ANR	127170	ArgumentList	remote_ctx -> server_ctx -> conn_cache		127116	1					
ANR	127171	Argument	remote_ctx -> server_ctx -> conn_cache		127116	0					
ANR	127172	PtrMemberAccess	remote_ctx -> server_ctx -> conn_cache		127116	0					
ANR	127173	PtrMemberAccess	remote_ctx -> server_ctx		127116	0					
ANR	127174	Identifier	remote_ctx		127116	0					
ANR	127175	Identifier	server_ctx		127116	1					
ANR	127176	Identifier	conn_cache		127116	1					
ANR	127177	Argument	key		127116	1					
ANR	127178	Identifier	key		127116	0					
ANR	127179	Argument	HASH_KEY_LEN		127116	2					
ANR	127180	Identifier	HASH_KEY_LEN		127116	0					
ANR	127181	ReturnType	static void		127116	1					
ANR	127182	Identifier	remote_timeout_cb		127116	2					
ANR	127183	ParameterList	"EV_P_ ev_timer * watcher , int revents"		127116	3					
ANR	127184	Parameter	EV_P_ ev_timer * watcher	561:18:16109:16131	127116	0	True				
ANR	127185	ParameterType	EV_P_ ev_timer *		127116	0					
ANR	127186	Identifier	watcher		127116	1					
ANR	127187	Parameter	int revents	561:43:16134:16144	127116	1	True				
ANR	127188	ParameterType	int		127116	0					
ANR	127189	Identifier	revents		127116	1					
ANR	127190	CFGEntryNode	ENTRY		127116		True				
ANR	127191	CFGExitNode	EXIT		127116		True				
ANR	127192	Symbol	watcher		127116						
ANR	127193	Symbol	revents		127116						
ANR	127194	Symbol	& remote_ctx -> src_addr		127116						
ANR	127195	Symbol	* remote_ctx -> server_ctx		127116						
ANR	127196	Symbol	remote_ctx -> server_ctx -> conn_cache		127116						
ANR	127197	Symbol	remote_ctx_t		127116						
ANR	127198	Symbol	HASH_KEY_LEN		127116						
ANR	127199	Symbol	verbose		127116						
ANR	127200	Symbol	remote_ctx -> server_ctx		127116						
ANR	127201	Symbol	* * remote_ctx		127116						
ANR	127202	Symbol	cork_container_of		127116						
ANR	127203	Symbol	hash_key		127116						
ANR	127204	Symbol	* remote_ctx		127116						
ANR	127205	Symbol	remote_ctx		127116						
ANR	127206	Symbol	remote_ctx -> af		127116						
ANR	127207	Symbol	key		127116						
ANR	127208	Function	resolv_free_cb	575:0:16470:16669							
ANR	127209	FunctionDef	resolv_free_cb (void * data)		127208	0					
ANR	127210	CompoundStatement		577:0:16509:16669	127208	0					
ANR	127211	IdentifierDeclStatement	struct query_ctx * ctx = ( struct query_ctx * ) data ;	578:4:16515:16563	127208	0	True				
ANR	127212	IdentifierDecl	* ctx = ( struct query_ctx * ) data		127208	0					
ANR	127213	IdentifierDeclType	struct query_ctx *		127208	0					
ANR	127214	Identifier	ctx		127208	1					
ANR	127215	AssignmentExpression	* ctx = ( struct query_ctx * ) data		127208	2		=			
ANR	127216	Identifier	ctx		127208	0					
ANR	127217	CastExpression	( struct query_ctx * ) data		127208	1					
ANR	127218	CastTarget	struct query_ctx *		127208	0					
ANR	127219	Identifier	data		127208	1					
ANR	127220	IfStatement	if ( ctx -> buf != NULL )		127208	1					
ANR	127221	Condition	ctx -> buf != NULL	579:8:16573:16588	127208	0	True				
ANR	127222	EqualityExpression	ctx -> buf != NULL		127208	0		!=			
ANR	127223	PtrMemberAccess	ctx -> buf		127208	0					
ANR	127224	Identifier	ctx		127208	0					
ANR	127225	Identifier	buf		127208	1					
ANR	127226	Identifier	NULL		127208	1					
ANR	127227	CompoundStatement		3:26:81:81	127208	1					
ANR	127228	ExpressionStatement	bfree ( ctx -> buf )	580:8:16601:16616	127208	0	True				
ANR	127229	CallExpression	bfree ( ctx -> buf )		127208	0					
ANR	127230	Callee	bfree		127208	0					
ANR	127231	Identifier	bfree		127208	0					
ANR	127232	ArgumentList	ctx -> buf		127208	1					
ANR	127233	Argument	ctx -> buf		127208	0					
ANR	127234	PtrMemberAccess	ctx -> buf		127208	0					
ANR	127235	Identifier	ctx		127208	0					
ANR	127236	Identifier	buf		127208	1					
ANR	127237	ExpressionStatement	ss_free ( ctx -> buf )	581:8:16626:16643	127208	1	True				
ANR	127238	CallExpression	ss_free ( ctx -> buf )		127208	0					
ANR	127239	Callee	ss_free		127208	0					
ANR	127240	Identifier	ss_free		127208	0					
ANR	127241	ArgumentList	ctx -> buf		127208	1					
ANR	127242	Argument	ctx -> buf		127208	0					
ANR	127243	PtrMemberAccess	ctx -> buf		127208	0					
ANR	127244	Identifier	ctx		127208	0					
ANR	127245	Identifier	buf		127208	1					
ANR	127246	ExpressionStatement	ss_free ( ctx )	583:4:16655:16667	127208	2	True				
ANR	127247	CallExpression	ss_free ( ctx )		127208	0					
ANR	127248	Callee	ss_free		127208	0					
ANR	127249	Identifier	ss_free		127208	0					
ANR	127250	ArgumentList	ctx		127208	1					
ANR	127251	Argument	ctx		127208	0					
ANR	127252	Identifier	ctx		127208	0					
ANR	127253	ReturnType	static void		127208	1					
ANR	127254	Identifier	resolv_free_cb		127208	2					
ANR	127255	ParameterList	void * data		127208	3					
ANR	127256	Parameter	void * data	576:15:16497:16506	127208	0	True				
ANR	127257	ParameterType	void *		127208	0					
ANR	127258	Identifier	data		127208	1					
ANR	127259	CFGEntryNode	ENTRY		127208		True				
ANR	127260	CFGExitNode	EXIT		127208		True				
ANR	127261	Symbol	NULL		127208						
ANR	127262	Symbol	data		127208						
ANR	127263	Symbol	ctx		127208						
ANR	127264	Symbol	ctx -> buf		127208						
ANR	127265	Symbol	* ctx		127208						
ANR	127266	Function	resolv_cb	586:0:16672:19655							
ANR	127267	FunctionDef	"resolv_cb (struct sockaddr * addr , void * data)"		127266	0					
ANR	127268	CompoundStatement		588:0:16729:19655	127266	0					
ANR	127269	IdentifierDeclStatement	struct query_ctx * query_ctx = ( struct query_ctx * ) data ;	589:4:16735:16789	127266	0	True				
ANR	127270	IdentifierDecl	* query_ctx = ( struct query_ctx * ) data		127266	0					
ANR	127271	IdentifierDeclType	struct query_ctx *		127266	0					
ANR	127272	Identifier	query_ctx		127266	1					
ANR	127273	AssignmentExpression	* query_ctx = ( struct query_ctx * ) data		127266	2		=			
ANR	127274	Identifier	query_ctx		127266	0					
ANR	127275	CastExpression	( struct query_ctx * ) data		127266	1					
ANR	127276	CastTarget	struct query_ctx *		127266	0					
ANR	127277	Identifier	data		127266	1					
ANR	127278	IdentifierDeclStatement	struct ev_loop * loop = query_ctx -> server_ctx -> loop ;	590:4:16795:16852	127266	1	True				
ANR	127279	IdentifierDecl	* loop = query_ctx -> server_ctx -> loop		127266	0					
ANR	127280	IdentifierDeclType	struct ev_loop *		127266	0					
ANR	127281	Identifier	loop		127266	1					
ANR	127282	AssignmentExpression	* loop = query_ctx -> server_ctx -> loop		127266	2		=			
ANR	127283	Identifier	loop		127266	0					
ANR	127284	PtrMemberAccess	query_ctx -> server_ctx -> loop		127266	1					
ANR	127285	PtrMemberAccess	query_ctx -> server_ctx		127266	0					
ANR	127286	Identifier	query_ctx		127266	0					
ANR	127287	Identifier	server_ctx		127266	1					
ANR	127288	Identifier	loop		127266	1					
ANR	127289	IfStatement	if ( addr == NULL )		127266	2					
ANR	127290	Condition	addr == NULL	592:8:16863:16874	127266	0	True				
ANR	127291	EqualityExpression	addr == NULL		127266	0		==			
ANR	127292	Identifier	addr		127266	0					
ANR	127293	Identifier	NULL		127266	1					
ANR	127294	CompoundStatement		5:22:147:147	127266	1					
ANR	127295	ExpressionStatement	"LOGE ( ""[udp] unable to resolve"" )"	593:8:16887:16918	127266	0	True				
ANR	127296	CallExpression	"LOGE ( ""[udp] unable to resolve"" )"		127266	0					
ANR	127297	Callee	LOGE		127266	0					
ANR	127298	Identifier	LOGE		127266	0					
ANR	127299	ArgumentList	"""[udp] unable to resolve"""		127266	1					
ANR	127300	Argument	"""[udp] unable to resolve"""		127266	0					
ANR	127301	PrimaryExpression	"""[udp] unable to resolve"""		127266	0					
ANR	127302	ElseStatement	else		127266	0					
ANR	127303	CompoundStatement		9:8:269:297	127266	0					
ANR	127304	IdentifierDeclStatement	remote_ctx_t * remote_ctx = query_ctx -> remote_ctx ;	595:8:16941:16989	127266	0	True				
ANR	127305	IdentifierDecl	* remote_ctx = query_ctx -> remote_ctx		127266	0					
ANR	127306	IdentifierDeclType	remote_ctx_t *		127266	0					
ANR	127307	Identifier	remote_ctx		127266	1					
ANR	127308	AssignmentExpression	* remote_ctx = query_ctx -> remote_ctx		127266	2		=			
ANR	127309	Identifier	remote_ctx		127266	0					
ANR	127310	PtrMemberAccess	query_ctx -> remote_ctx		127266	1					
ANR	127311	Identifier	query_ctx		127266	0					
ANR	127312	Identifier	remote_ctx		127266	1					
ANR	127313	IdentifierDeclStatement	int cache_hit = 0 ;	596:8:16999:17027	127266	1	True				
ANR	127314	IdentifierDecl	cache_hit = 0		127266	0					
ANR	127315	IdentifierDeclType	int		127266	0					
ANR	127316	Identifier	cache_hit		127266	1					
ANR	127317	AssignmentExpression	cache_hit = 0		127266	2		=			
ANR	127318	Identifier	cache_hit		127266	0					
ANR	127319	PrimaryExpression	0		127266	1					
ANR	127320	IfStatement	if ( remote_ctx == NULL )		127266	2					
ANR	127321	Condition	remote_ctx == NULL	599:12:17078:17095	127266	0	True				
ANR	127322	EqualityExpression	remote_ctx == NULL		127266	0		==			
ANR	127323	Identifier	remote_ctx		127266	0					
ANR	127324	Identifier	NULL		127266	1					
ANR	127325	CompoundStatement		13:12:382:435	127266	1					
ANR	127326	IdentifierDeclStatement	"char * key = hash_key ( AF_UNSPEC , & query_ctx -> src_addr ) ;"	600:12:17112:17165	127266	0	True				
ANR	127327	IdentifierDecl	"* key = hash_key ( AF_UNSPEC , & query_ctx -> src_addr )"		127266	0					
ANR	127328	IdentifierDeclType	char *		127266	0					
ANR	127329	Identifier	key		127266	1					
ANR	127330	AssignmentExpression	"* key = hash_key ( AF_UNSPEC , & query_ctx -> src_addr )"		127266	2		=			
ANR	127331	Identifier	key		127266	0					
ANR	127332	CallExpression	"hash_key ( AF_UNSPEC , & query_ctx -> src_addr )"		127266	1					
ANR	127333	Callee	hash_key		127266	0					
ANR	127334	Identifier	hash_key		127266	0					
ANR	127335	ArgumentList	AF_UNSPEC		127266	1					
ANR	127336	Argument	AF_UNSPEC		127266	0					
ANR	127337	Identifier	AF_UNSPEC		127266	0					
ANR	127338	Argument	& query_ctx -> src_addr		127266	1					
ANR	127339	UnaryOperationExpression	& query_ctx -> src_addr		127266	0					
ANR	127340	UnaryOperator	&		127266	0					
ANR	127341	PtrMemberAccess	query_ctx -> src_addr		127266	1					
ANR	127342	Identifier	query_ctx		127266	0					
ANR	127343	Identifier	src_addr		127266	1					
ANR	127344	ExpressionStatement	"cache_lookup ( query_ctx -> server_ctx -> conn_cache , key , HASH_KEY_LEN , ( void * ) & remote_ctx )"	601:12:17179:17266	127266	1	True				
ANR	127345	CallExpression	"cache_lookup ( query_ctx -> server_ctx -> conn_cache , key , HASH_KEY_LEN , ( void * ) & remote_ctx )"		127266	0					
ANR	127346	Callee	cache_lookup		127266	0					
ANR	127347	Identifier	cache_lookup		127266	0					
ANR	127348	ArgumentList	query_ctx -> server_ctx -> conn_cache		127266	1					
ANR	127349	Argument	query_ctx -> server_ctx -> conn_cache		127266	0					
ANR	127350	PtrMemberAccess	query_ctx -> server_ctx -> conn_cache		127266	0					
ANR	127351	PtrMemberAccess	query_ctx -> server_ctx		127266	0					
ANR	127352	Identifier	query_ctx		127266	0					
ANR	127353	Identifier	server_ctx		127266	1					
ANR	127354	Identifier	conn_cache		127266	1					
ANR	127355	Argument	key		127266	1					
ANR	127356	Identifier	key		127266	0					
ANR	127357	Argument	HASH_KEY_LEN		127266	2					
ANR	127358	Identifier	HASH_KEY_LEN		127266	0					
ANR	127359	Argument	( void * ) & remote_ctx		127266	3					
ANR	127360	CastExpression	( void * ) & remote_ctx		127266	0					
ANR	127361	CastTarget	void *		127266	0					
ANR	127362	UnaryOperationExpression	& remote_ctx		127266	1					
ANR	127363	UnaryOperator	&		127266	0					
ANR	127364	Identifier	remote_ctx		127266	1					
ANR	127365	IfStatement	if ( remote_ctx == NULL )		127266	3					
ANR	127366	Condition	remote_ctx == NULL	604:12:17291:17308	127266	0	True				
ANR	127367	EqualityExpression	remote_ctx == NULL		127266	0		==			
ANR	127368	Identifier	remote_ctx		127266	0					
ANR	127369	Identifier	NULL		127266	1					
ANR	127370	CompoundStatement		18:12:595:659	127266	1					
ANR	127371	IdentifierDeclStatement	int remotefd = create_remote_socket ( addr -> sa_family == AF_INET6 ) ;	605:12:17325:17389	127266	0	True				
ANR	127372	IdentifierDecl	remotefd = create_remote_socket ( addr -> sa_family == AF_INET6 )		127266	0					
ANR	127373	IdentifierDeclType	int		127266	0					
ANR	127374	Identifier	remotefd		127266	1					
ANR	127375	AssignmentExpression	remotefd = create_remote_socket ( addr -> sa_family == AF_INET6 )		127266	2		=			
ANR	127376	Identifier	remotefd		127266	0					
ANR	127377	CallExpression	create_remote_socket ( addr -> sa_family == AF_INET6 )		127266	1					
ANR	127378	Callee	create_remote_socket		127266	0					
ANR	127379	Identifier	create_remote_socket		127266	0					
ANR	127380	ArgumentList	addr -> sa_family == AF_INET6		127266	1					
ANR	127381	Argument	addr -> sa_family == AF_INET6		127266	0					
ANR	127382	EqualityExpression	addr -> sa_family == AF_INET6		127266	0		==			
ANR	127383	PtrMemberAccess	addr -> sa_family		127266	0					
ANR	127384	Identifier	addr		127266	0					
ANR	127385	Identifier	sa_family		127266	1					
ANR	127386	Identifier	AF_INET6		127266	1					
ANR	127387	IfStatement	if ( remotefd != - 1 )		127266	1					
ANR	127388	Condition	remotefd != - 1	606:16:17407:17420	127266	0	True				
ANR	127389	EqualityExpression	remotefd != - 1		127266	0		!=			
ANR	127390	Identifier	remotefd		127266	0					
ANR	127391	UnaryOperationExpression	- 1		127266	1					
ANR	127392	UnaryOperator	-		127266	0					
ANR	127393	PrimaryExpression	1		127266	1					
ANR	127394	CompoundStatement		29:16:935:947	127266	1					
ANR	127395	ExpressionStatement	setnonblocking ( remotefd )	607:16:17441:17465	127266	0	True				
ANR	127396	CallExpression	setnonblocking ( remotefd )		127266	0					
ANR	127397	Callee	setnonblocking		127266	0					
ANR	127398	Identifier	setnonblocking		127266	0					
ANR	127399	ArgumentList	remotefd		127266	1					
ANR	127400	Argument	remotefd		127266	0					
ANR	127401	Identifier	remotefd		127266	0					
ANR	127402	ExpressionStatement	set_broadcast ( remotefd )	609:16:17503:17526	127266	1	True				
ANR	127403	CallExpression	set_broadcast ( remotefd )		127266	0					
ANR	127404	Callee	set_broadcast		127266	0					
ANR	127405	Identifier	set_broadcast		127266	0					
ANR	127406	ArgumentList	remotefd		127266	1					
ANR	127407	Argument	remotefd		127266	0					
ANR	127408	Identifier	remotefd		127266	0					
ANR	127409	ExpressionStatement	set_nosigpipe ( remotefd )	612:16:17571:17594	127266	2	True				
ANR	127410	CallExpression	set_nosigpipe ( remotefd )		127266	0					
ANR	127411	Callee	set_nosigpipe		127266	0					
ANR	127412	Identifier	set_nosigpipe		127266	0					
ANR	127413	ArgumentList	remotefd		127266	1					
ANR	127414	Argument	remotefd		127266	0					
ANR	127415	Identifier	remotefd		127266	0					
ANR	127416	IdentifierDeclStatement	int tos = 46 ;	616:16:17665:17677	127266	3	True				
ANR	127417	IdentifierDecl	tos = 46		127266	0					
ANR	127418	IdentifierDeclType	int		127266	0					
ANR	127419	Identifier	tos		127266	1					
ANR	127420	AssignmentExpression	tos = 46		127266	2		=			
ANR	127421	Identifier	tos		127266	0					
ANR	127422	PrimaryExpression	46		127266	1					
ANR	127423	ExpressionStatement	"setsockopt ( remotefd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"	617:16:17695:17754	127266	4	True				
ANR	127424	CallExpression	"setsockopt ( remotefd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"		127266	0					
ANR	127425	Callee	setsockopt		127266	0					
ANR	127426	Identifier	setsockopt		127266	0					
ANR	127427	ArgumentList	remotefd		127266	1					
ANR	127428	Argument	remotefd		127266	0					
ANR	127429	Identifier	remotefd		127266	0					
ANR	127430	Argument	IPPROTO_IP		127266	1					
ANR	127431	Identifier	IPPROTO_IP		127266	0					
ANR	127432	Argument	IP_TOS		127266	2					
ANR	127433	Identifier	IP_TOS		127266	0					
ANR	127434	Argument	& tos		127266	3					
ANR	127435	UnaryOperationExpression	& tos		127266	0					
ANR	127436	UnaryOperator	&		127266	0					
ANR	127437	Identifier	tos		127266	1					
ANR	127438	Argument	sizeof ( tos )		127266	4					
ANR	127439	SizeofExpression	sizeof ( tos )		127266	0					
ANR	127440	Sizeof	sizeof		127266	0					
ANR	127441	SizeofOperand	tos		127266	1					
ANR	127442	IfStatement	if ( query_ctx -> server_ctx -> iface )		127266	5					
ANR	127443	Condition	query_ctx -> server_ctx -> iface	620:20:17804:17831	127266	0	True				
ANR	127444	PtrMemberAccess	query_ctx -> server_ctx -> iface		127266	0					
ANR	127445	PtrMemberAccess	query_ctx -> server_ctx		127266	0					
ANR	127446	Identifier	query_ctx		127266	0					
ANR	127447	Identifier	server_ctx		127266	1					
ANR	127448	Identifier	iface		127266	1					
ANR	127449	CompoundStatement		33:50:1104:1104	127266	1					
ANR	127450	IfStatement	"if ( setinterface ( remotefd , query_ctx -> server_ctx -> iface ) == - 1 )"		127266	0					
ANR	127451	Condition	"setinterface ( remotefd , query_ctx -> server_ctx -> iface ) == - 1"	621:24:17860:17917	127266	0	True				
ANR	127452	EqualityExpression	"setinterface ( remotefd , query_ctx -> server_ctx -> iface ) == - 1"		127266	0		==			
ANR	127453	CallExpression	"setinterface ( remotefd , query_ctx -> server_ctx -> iface )"		127266	0					
ANR	127454	Callee	setinterface		127266	0					
ANR	127455	Identifier	setinterface		127266	0					
ANR	127456	ArgumentList	remotefd		127266	1					
ANR	127457	Argument	remotefd		127266	0					
ANR	127458	Identifier	remotefd		127266	0					
ANR	127459	Argument	query_ctx -> server_ctx -> iface		127266	1					
ANR	127460	PtrMemberAccess	query_ctx -> server_ctx -> iface		127266	0					
ANR	127461	PtrMemberAccess	query_ctx -> server_ctx		127266	0					
ANR	127462	Identifier	query_ctx		127266	0					
ANR	127463	Identifier	server_ctx		127266	1					
ANR	127464	Identifier	iface		127266	1					
ANR	127465	UnaryOperationExpression	- 1		127266	1					
ANR	127466	UnaryOperator	-		127266	0					
ANR	127467	PrimaryExpression	1		127266	1					
ANR	127468	ExpressionStatement	"ERROR ( ""setinterface"" )"	622:24:17944:17965	127266	1	True				
ANR	127469	CallExpression	"ERROR ( ""setinterface"" )"		127266	0					
ANR	127470	Callee	ERROR		127266	0					
ANR	127471	Identifier	ERROR		127266	0					
ANR	127472	ArgumentList	"""setinterface"""		127266	1					
ANR	127473	Argument	"""setinterface"""		127266	0					
ANR	127474	PrimaryExpression	"""setinterface"""		127266	0					
ANR	127475	ExpressionStatement	"remote_ctx = new_remote ( remotefd , query_ctx -> server_ctx )"	625:16:18008:18081	127266	6	True				
ANR	127476	AssignmentExpression	"remote_ctx = new_remote ( remotefd , query_ctx -> server_ctx )"		127266	0		=			
ANR	127477	Identifier	remote_ctx		127266	0					
ANR	127478	CallExpression	"new_remote ( remotefd , query_ctx -> server_ctx )"		127266	1					
ANR	127479	Callee	new_remote		127266	0					
ANR	127480	Identifier	new_remote		127266	0					
ANR	127481	ArgumentList	remotefd		127266	1					
ANR	127482	Argument	remotefd		127266	0					
ANR	127483	Identifier	remotefd		127266	0					
ANR	127484	Argument	query_ctx -> server_ctx		127266	1					
ANR	127485	PtrMemberAccess	query_ctx -> server_ctx		127266	0					
ANR	127486	Identifier	query_ctx		127266	0					
ANR	127487	Identifier	server_ctx		127266	1					
ANR	127488	ExpressionStatement	remote_ctx -> src_addr = query_ctx -> src_addr	626:16:18099:18148	127266	7	True				
ANR	127489	AssignmentExpression	remote_ctx -> src_addr = query_ctx -> src_addr		127266	0		=			
ANR	127490	PtrMemberAccess	remote_ctx -> src_addr		127266	0					
ANR	127491	Identifier	remote_ctx		127266	0					
ANR	127492	Identifier	src_addr		127266	1					
ANR	127493	PtrMemberAccess	query_ctx -> src_addr		127266	1					
ANR	127494	Identifier	query_ctx		127266	0					
ANR	127495	Identifier	src_addr		127266	1					
ANR	127496	ExpressionStatement	remote_ctx -> server_ctx = query_ctx -> server_ctx	627:16:18166:18217	127266	8	True				
ANR	127497	AssignmentExpression	remote_ctx -> server_ctx = query_ctx -> server_ctx		127266	0		=			
ANR	127498	PtrMemberAccess	remote_ctx -> server_ctx		127266	0					
ANR	127499	Identifier	remote_ctx		127266	0					
ANR	127500	Identifier	server_ctx		127266	1					
ANR	127501	PtrMemberAccess	query_ctx -> server_ctx		127266	1					
ANR	127502	Identifier	query_ctx		127266	0					
ANR	127503	Identifier	server_ctx		127266	1					
ANR	127504	ExpressionStatement	remote_ctx -> addr_header_len = query_ctx -> addr_header_len	628:16:18235:18291	127266	9	True				
ANR	127505	AssignmentExpression	remote_ctx -> addr_header_len = query_ctx -> addr_header_len		127266	0		=			
ANR	127506	PtrMemberAccess	remote_ctx -> addr_header_len		127266	0					
ANR	127507	Identifier	remote_ctx		127266	0					
ANR	127508	Identifier	addr_header_len		127266	1					
ANR	127509	PtrMemberAccess	query_ctx -> addr_header_len		127266	1					
ANR	127510	Identifier	query_ctx		127266	0					
ANR	127511	Identifier	addr_header_len		127266	1					
ANR	127512	ExpressionStatement	"memcpy ( remote_ctx -> addr_header , query_ctx -> addr_header , query_ctx -> addr_header_len )"	629:16:18309:18415	127266	10	True				
ANR	127513	CallExpression	"memcpy ( remote_ctx -> addr_header , query_ctx -> addr_header , query_ctx -> addr_header_len )"		127266	0					
ANR	127514	Callee	memcpy		127266	0					
ANR	127515	Identifier	memcpy		127266	0					
ANR	127516	ArgumentList	remote_ctx -> addr_header		127266	1					
ANR	127517	Argument	remote_ctx -> addr_header		127266	0					
ANR	127518	PtrMemberAccess	remote_ctx -> addr_header		127266	0					
ANR	127519	Identifier	remote_ctx		127266	0					
ANR	127520	Identifier	addr_header		127266	1					
ANR	127521	Argument	query_ctx -> addr_header		127266	1					
ANR	127522	PtrMemberAccess	query_ctx -> addr_header		127266	0					
ANR	127523	Identifier	query_ctx		127266	0					
ANR	127524	Identifier	addr_header		127266	1					
ANR	127525	Argument	query_ctx -> addr_header_len		127266	2					
ANR	127526	PtrMemberAccess	query_ctx -> addr_header_len		127266	0					
ANR	127527	Identifier	query_ctx		127266	0					
ANR	127528	Identifier	addr_header_len		127266	1					
ANR	127529	ElseStatement	else		127266	0					
ANR	127530	CompoundStatement		44:19:1706:1706	127266	0					
ANR	127531	ExpressionStatement	"ERROR ( ""[udp] bind() error"" )"	632:16:18454:18481	127266	0	True				
ANR	127532	CallExpression	"ERROR ( ""[udp] bind() error"" )"		127266	0					
ANR	127533	Callee	ERROR		127266	0					
ANR	127534	Identifier	ERROR		127266	0					
ANR	127535	ArgumentList	"""[udp] bind() error"""		127266	1					
ANR	127536	Argument	"""[udp] bind() error"""		127266	0					
ANR	127537	PrimaryExpression	"""[udp] bind() error"""		127266	0					
ANR	127538	ElseStatement	else		127266	0					
ANR	127539	CompoundStatement		47:15:1782:1782	127266	0					
ANR	127540	ExpressionStatement	cache_hit = 1	635:12:18526:18539	127266	0	True				
ANR	127541	AssignmentExpression	cache_hit = 1		127266	0		=			
ANR	127542	Identifier	cache_hit		127266	0					
ANR	127543	PrimaryExpression	1		127266	1					
ANR	127544	IfStatement	if ( remote_ctx != NULL )		127266	4					
ANR	127545	Condition	remote_ctx != NULL	638:12:18564:18581	127266	0	True				
ANR	127546	EqualityExpression	remote_ctx != NULL		127266	0		!=			
ANR	127547	Identifier	remote_ctx		127266	0					
ANR	127548	Identifier	NULL		127266	1					
ANR	127549	CompoundStatement		58:12:2147:2286	127266	1					
ANR	127550	IfStatement	if ( addr -> sa_family == AF_INET )		127266	0					
ANR	127551	Condition	addr -> sa_family == AF_INET	639:16:18602:18627	127266	0	True				
ANR	127552	EqualityExpression	addr -> sa_family == AF_INET		127266	0		==			
ANR	127553	PtrMemberAccess	addr -> sa_family		127266	0					
ANR	127554	Identifier	addr		127266	0					
ANR	127555	Identifier	sa_family		127266	1					
ANR	127556	Identifier	AF_INET		127266	1					
ANR	127557	ExpressionStatement	"memcpy ( & remote_ctx -> dst_addr , addr , sizeof ( struct sockaddr_in ) )"	640:16:18646:18709	127266	1	True				
ANR	127558	CallExpression	"memcpy ( & remote_ctx -> dst_addr , addr , sizeof ( struct sockaddr_in ) )"		127266	0					
ANR	127559	Callee	memcpy		127266	0					
ANR	127560	Identifier	memcpy		127266	0					
ANR	127561	ArgumentList	& remote_ctx -> dst_addr		127266	1					
ANR	127562	Argument	& remote_ctx -> dst_addr		127266	0					
ANR	127563	UnaryOperationExpression	& remote_ctx -> dst_addr		127266	0					
ANR	127564	UnaryOperator	&		127266	0					
ANR	127565	PtrMemberAccess	remote_ctx -> dst_addr		127266	1					
ANR	127566	Identifier	remote_ctx		127266	0					
ANR	127567	Identifier	dst_addr		127266	1					
ANR	127568	Argument	addr		127266	1					
ANR	127569	Identifier	addr		127266	0					
ANR	127570	Argument	sizeof ( struct sockaddr_in )		127266	2					
ANR	127571	SizeofExpression	sizeof ( struct sockaddr_in )		127266	0					
ANR	127572	Sizeof	sizeof		127266	0					
ANR	127573	SizeofOperand	struct sockaddr_in		127266	1					
ANR	127574	ElseStatement	else		127266	0					
ANR	127575	ExpressionStatement	"memcpy ( & remote_ctx -> dst_addr , addr , sizeof ( struct sockaddr_in6 ) )"	642:16:18744:18808	127266	0	True				
ANR	127576	CallExpression	"memcpy ( & remote_ctx -> dst_addr , addr , sizeof ( struct sockaddr_in6 ) )"		127266	0					
ANR	127577	Callee	memcpy		127266	0					
ANR	127578	Identifier	memcpy		127266	0					
ANR	127579	ArgumentList	& remote_ctx -> dst_addr		127266	1					
ANR	127580	Argument	& remote_ctx -> dst_addr		127266	0					
ANR	127581	UnaryOperationExpression	& remote_ctx -> dst_addr		127266	0					
ANR	127582	UnaryOperator	&		127266	0					
ANR	127583	PtrMemberAccess	remote_ctx -> dst_addr		127266	1					
ANR	127584	Identifier	remote_ctx		127266	0					
ANR	127585	Identifier	dst_addr		127266	1					
ANR	127586	Argument	addr		127266	1					
ANR	127587	Identifier	addr		127266	0					
ANR	127588	Argument	sizeof ( struct sockaddr_in6 )		127266	2					
ANR	127589	SizeofExpression	sizeof ( struct sockaddr_in6 )		127266	0					
ANR	127590	Sizeof	sizeof		127266	0					
ANR	127591	SizeofOperand	struct sockaddr_in6		127266	1					
ANR	127592	IdentifierDeclStatement	size_t addr_len = get_sockaddr_len ( addr ) ;	644:12:18823:18863	127266	1	True				
ANR	127593	IdentifierDecl	addr_len = get_sockaddr_len ( addr )		127266	0					
ANR	127594	IdentifierDeclType	size_t		127266	0					
ANR	127595	Identifier	addr_len		127266	1					
ANR	127596	AssignmentExpression	addr_len = get_sockaddr_len ( addr )		127266	2		=			
ANR	127597	Identifier	addr_len		127266	0					
ANR	127598	CallExpression	get_sockaddr_len ( addr )		127266	1					
ANR	127599	Callee	get_sockaddr_len		127266	0					
ANR	127600	Identifier	get_sockaddr_len		127266	0					
ANR	127601	ArgumentList	addr		127266	1					
ANR	127602	Argument	addr		127266	0					
ANR	127603	Identifier	addr		127266	0					
ANR	127604	IdentifierDeclStatement	"int s = sendto ( remote_ctx -> fd , query_ctx -> buf -> data , query_ctx -> buf -> len , 0 , addr , addr_len ) ;"	645:12:18877:19016	127266	2	True				
ANR	127605	IdentifierDecl	"s = sendto ( remote_ctx -> fd , query_ctx -> buf -> data , query_ctx -> buf -> len , 0 , addr , addr_len )"		127266	0					
ANR	127606	IdentifierDeclType	int		127266	0					
ANR	127607	Identifier	s		127266	1					
ANR	127608	AssignmentExpression	"s = sendto ( remote_ctx -> fd , query_ctx -> buf -> data , query_ctx -> buf -> len , 0 , addr , addr_len )"		127266	2		=			
ANR	127609	Identifier	s		127266	0					
ANR	127610	CallExpression	"sendto ( remote_ctx -> fd , query_ctx -> buf -> data , query_ctx -> buf -> len , 0 , addr , addr_len )"		127266	1					
ANR	127611	Callee	sendto		127266	0					
ANR	127612	Identifier	sendto		127266	0					
ANR	127613	ArgumentList	remote_ctx -> fd		127266	1					
ANR	127614	Argument	remote_ctx -> fd		127266	0					
ANR	127615	PtrMemberAccess	remote_ctx -> fd		127266	0					
ANR	127616	Identifier	remote_ctx		127266	0					
ANR	127617	Identifier	fd		127266	1					
ANR	127618	Argument	query_ctx -> buf -> data		127266	1					
ANR	127619	PtrMemberAccess	query_ctx -> buf -> data		127266	0					
ANR	127620	PtrMemberAccess	query_ctx -> buf		127266	0					
ANR	127621	Identifier	query_ctx		127266	0					
ANR	127622	Identifier	buf		127266	1					
ANR	127623	Identifier	data		127266	1					
ANR	127624	Argument	query_ctx -> buf -> len		127266	2					
ANR	127625	PtrMemberAccess	query_ctx -> buf -> len		127266	0					
ANR	127626	PtrMemberAccess	query_ctx -> buf		127266	0					
ANR	127627	Identifier	query_ctx		127266	0					
ANR	127628	Identifier	buf		127266	1					
ANR	127629	Identifier	len		127266	1					
ANR	127630	Argument	0		127266	3					
ANR	127631	PrimaryExpression	0		127266	0					
ANR	127632	Argument	addr		127266	4					
ANR	127633	Identifier	addr		127266	0					
ANR	127634	Argument	addr_len		127266	5					
ANR	127635	Identifier	addr_len		127266	0					
ANR	127636	IfStatement	if ( s == - 1 )		127266	3					
ANR	127637	Condition	s == - 1	648:16:19035:19041	127266	0	True				
ANR	127638	EqualityExpression	s == - 1		127266	0		==			
ANR	127639	Identifier	s		127266	0					
ANR	127640	UnaryOperationExpression	- 1		127266	1					
ANR	127641	UnaryOperator	-		127266	0					
ANR	127642	PrimaryExpression	1		127266	1					
ANR	127643	CompoundStatement		61:25:2314:2314	127266	1					
ANR	127644	ExpressionStatement	"ERROR ( ""[udp] sendto_remote"" )"	649:16:19062:19090	127266	0	True				
ANR	127645	CallExpression	"ERROR ( ""[udp] sendto_remote"" )"		127266	0					
ANR	127646	Callee	ERROR		127266	0					
ANR	127647	Identifier	ERROR		127266	0					
ANR	127648	ArgumentList	"""[udp] sendto_remote"""		127266	1					
ANR	127649	Argument	"""[udp] sendto_remote"""		127266	0					
ANR	127650	PrimaryExpression	"""[udp] sendto_remote"""		127266	0					
ANR	127651	IfStatement	if ( ! cache_hit )		127266	1					
ANR	127652	Condition	! cache_hit	650:20:19112:19121	127266	0	True				
ANR	127653	UnaryOperationExpression	! cache_hit		127266	0					
ANR	127654	UnaryOperator	!		127266	0					
ANR	127655	Identifier	cache_hit		127266	1					
ANR	127656	CompoundStatement		63:32:2394:2394	127266	1					
ANR	127657	Statement	close_and_free_remote	651:20:19146:19166	127266	0	True				
ANR	127658	Statement	(	651:41:19167:19167	127266	1	True				
ANR	127659	Statement	EV_A_	651:42:19168:19172	127266	2	True				
ANR	127660	Statement	remote_ctx	651:48:19174:19183	127266	3	True				
ANR	127661	Statement	)	651:58:19184:19184	127266	4	True				
ANR	127662	ExpressionStatement		651:59:19185:19185	127266	5	True				
ANR	127663	ElseStatement	else		127266	0					
ANR	127664	CompoundStatement		66:19:2494:2494	127266	0					
ANR	127665	IfStatement	if ( ! cache_hit )		127266	0					
ANR	127666	Condition	! cache_hit	654:20:19246:19255	127266	0	True				
ANR	127667	UnaryOperationExpression	! cache_hit		127266	0					
ANR	127668	UnaryOperator	!		127266	0					
ANR	127669	Identifier	cache_hit		127266	1					
ANR	127670	CompoundStatement		69:20:2591:2645	127266	1					
ANR	127671	IdentifierDeclStatement	"char * key = hash_key ( AF_UNSPEC , & remote_ctx -> src_addr ) ;"	656:20:19321:19375	127266	0	True				
ANR	127672	IdentifierDecl	"* key = hash_key ( AF_UNSPEC , & remote_ctx -> src_addr )"		127266	0					
ANR	127673	IdentifierDeclType	char *		127266	0					
ANR	127674	Identifier	key		127266	1					
ANR	127675	AssignmentExpression	"* key = hash_key ( AF_UNSPEC , & remote_ctx -> src_addr )"		127266	2		=			
ANR	127676	Identifier	key		127266	0					
ANR	127677	CallExpression	"hash_key ( AF_UNSPEC , & remote_ctx -> src_addr )"		127266	1					
ANR	127678	Callee	hash_key		127266	0					
ANR	127679	Identifier	hash_key		127266	0					
ANR	127680	ArgumentList	AF_UNSPEC		127266	1					
ANR	127681	Argument	AF_UNSPEC		127266	0					
ANR	127682	Identifier	AF_UNSPEC		127266	0					
ANR	127683	Argument	& remote_ctx -> src_addr		127266	1					
ANR	127684	UnaryOperationExpression	& remote_ctx -> src_addr		127266	0					
ANR	127685	UnaryOperator	&		127266	0					
ANR	127686	PtrMemberAccess	remote_ctx -> src_addr		127266	1					
ANR	127687	Identifier	remote_ctx		127266	0					
ANR	127688	Identifier	src_addr		127266	1					
ANR	127689	ExpressionStatement	"cache_insert ( query_ctx -> server_ctx -> conn_cache , key , HASH_KEY_LEN , ( void * ) remote_ctx )"	657:20:19397:19483	127266	1	True				
ANR	127690	CallExpression	"cache_insert ( query_ctx -> server_ctx -> conn_cache , key , HASH_KEY_LEN , ( void * ) remote_ctx )"		127266	0					
ANR	127691	Callee	cache_insert		127266	0					
ANR	127692	Identifier	cache_insert		127266	0					
ANR	127693	ArgumentList	query_ctx -> server_ctx -> conn_cache		127266	1					
ANR	127694	Argument	query_ctx -> server_ctx -> conn_cache		127266	0					
ANR	127695	PtrMemberAccess	query_ctx -> server_ctx -> conn_cache		127266	0					
ANR	127696	PtrMemberAccess	query_ctx -> server_ctx		127266	0					
ANR	127697	Identifier	query_ctx		127266	0					
ANR	127698	Identifier	server_ctx		127266	1					
ANR	127699	Identifier	conn_cache		127266	1					
ANR	127700	Argument	key		127266	1					
ANR	127701	Identifier	key		127266	0					
ANR	127702	Argument	HASH_KEY_LEN		127266	2					
ANR	127703	Identifier	HASH_KEY_LEN		127266	0					
ANR	127704	Argument	( void * ) remote_ctx		127266	3					
ANR	127705	CastExpression	( void * ) remote_ctx		127266	0					
ANR	127706	CastTarget	void *		127266	0					
ANR	127707	Identifier	remote_ctx		127266	1					
ANR	127708	ExpressionStatement	ev_io_start ( EV_A_ & remote_ctx -> io )	658:20:19505:19540	127266	2	True				
ANR	127709	CallExpression	ev_io_start ( EV_A_ & remote_ctx -> io )		127266	0					
ANR	127710	Callee	ev_io_start		127266	0					
ANR	127711	Identifier	ev_io_start		127266	0					
ANR	127712	ArgumentList	EV_A_ & remote_ctx -> io		127266	1					
ANR	127713	Argument	EV_A_ & remote_ctx -> io		127266	0					
ANR	127714	BitAndExpression	EV_A_ & remote_ctx -> io		127266	0		&			
ANR	127715	Identifier	EV_A_		127266	0					
ANR	127716	PtrMemberAccess	remote_ctx -> io		127266	1					
ANR	127717	Identifier	remote_ctx		127266	0					
ANR	127718	Identifier	io		127266	1					
ANR	127719	ExpressionStatement	ev_timer_start ( EV_A_ & remote_ctx -> watcher )	659:20:19562:19605	127266	3	True				
ANR	127720	CallExpression	ev_timer_start ( EV_A_ & remote_ctx -> watcher )		127266	0					
ANR	127721	Callee	ev_timer_start		127266	0					
ANR	127722	Identifier	ev_timer_start		127266	0					
ANR	127723	ArgumentList	EV_A_ & remote_ctx -> watcher		127266	1					
ANR	127724	Argument	EV_A_ & remote_ctx -> watcher		127266	0					
ANR	127725	BitAndExpression	EV_A_ & remote_ctx -> watcher		127266	0		&			
ANR	127726	Identifier	EV_A_		127266	0					
ANR	127727	PtrMemberAccess	remote_ctx -> watcher		127266	1					
ANR	127728	Identifier	remote_ctx		127266	0					
ANR	127729	Identifier	watcher		127266	1					
ANR	127730	ReturnType	static void		127266	1					
ANR	127731	Identifier	resolv_cb		127266	2					
ANR	127732	ParameterList	"struct sockaddr * addr , void * data"		127266	3					
ANR	127733	Parameter	struct sockaddr * addr	587:10:16694:16714	127266	0	True				
ANR	127734	ParameterType	struct sockaddr *		127266	0					
ANR	127735	Identifier	addr		127266	1					
ANR	127736	Parameter	void * data	587:33:16717:16726	127266	1	True				
ANR	127737	ParameterType	void *		127266	0					
ANR	127738	Identifier	data		127266	1					
ANR	127739	CFGEntryNode	ENTRY		127266		True				
ANR	127740	CFGExitNode	EXIT		127266		True				
ANR	127741	Symbol	addr -> sa_family		127266						
ANR	127742	Symbol	sendto		127266						
ANR	127743	Symbol	data		127266						
ANR	127744	Symbol	IP_TOS		127266						
ANR	127745	Symbol	remote_ctx -> addr_header_len		127266						
ANR	127746	Symbol	remote_ctx -> watcher		127266						
ANR	127747	Symbol	query_ctx -> addr_header		127266						
ANR	127748	Symbol	query_ctx -> buf -> len		127266						
ANR	127749	Symbol	query_ctx -> server_ctx -> loop		127266						
ANR	127750	Symbol	query_ctx -> src_addr		127266						
ANR	127751	Symbol	loop		127266						
ANR	127752	Symbol	query_ctx -> server_ctx -> conn_cache		127266						
ANR	127753	Symbol	addr_len		127266						
ANR	127754	Symbol	& remote_ctx -> dst_addr		127266						
ANR	127755	Symbol	IPPROTO_IP		127266						
ANR	127756	Symbol	query_ctx -> remote_ctx		127266						
ANR	127757	Symbol	& query_ctx -> src_addr		127266						
ANR	127758	Symbol	NULL		127266						
ANR	127759	Symbol	& remote_ctx -> src_addr		127266						
ANR	127760	Symbol	AF_INET		127266						
ANR	127761	Symbol	HASH_KEY_LEN		127266						
ANR	127762	Symbol	query_ctx -> buf		127266						
ANR	127763	Symbol	* query_ctx -> buf		127266						
ANR	127764	Symbol	new_remote		127266						
ANR	127765	Symbol	* remote_ctx		127266						
ANR	127766	Symbol	remote_ctx		127266						
ANR	127767	Symbol	* addr		127266						
ANR	127768	Symbol	* query_ctx		127266						
ANR	127769	Symbol	remote_ctx -> fd		127266						
ANR	127770	Symbol	query_ctx -> server_ctx		127266						
ANR	127771	Symbol	query_ctx -> buf -> data		127266						
ANR	127772	Symbol	query_ctx -> addr_header_len		127266						
ANR	127773	Symbol	AF_UNSPEC		127266						
ANR	127774	Symbol	cache_hit		127266						
ANR	127775	Symbol	setinterface		127266						
ANR	127776	Symbol	remote_ctx -> io		127266						
ANR	127777	Symbol	create_remote_socket		127266						
ANR	127778	Symbol	tos		127266						
ANR	127779	Symbol	addr		127266						
ANR	127780	Symbol	key		127266						
ANR	127781	Symbol	query_ctx		127266						
ANR	127782	Symbol	& remote_ctx		127266						
ANR	127783	Symbol	query_ctx -> server_ctx -> iface		127266						
ANR	127784	Symbol	get_sockaddr_len		127266						
ANR	127785	Symbol	remote_ctx -> addr_header		127266						
ANR	127786	Symbol	remotefd		127266						
ANR	127787	Symbol	AF_INET6		127266						
ANR	127788	Symbol	remote_ctx -> server_ctx		127266						
ANR	127789	Symbol	remote_ctx -> src_addr		127266						
ANR	127790	Symbol	* query_ctx -> server_ctx		127266						
ANR	127791	Symbol	s		127266						
ANR	127792	Symbol	hash_key		127266						
ANR	127793	Symbol	EV_A_		127266						
ANR	127794	Symbol	& tos		127266						
ANR	127795	Symbol	* * query_ctx		127266						
ANR	127796	Function	remote_recv_cb	668:0:19666:24405							
ANR	127797	FunctionDef	"remote_recv_cb (EV_P_ ev_io * w , int revents)"		127796	0					
ANR	127798	CompoundStatement		670:0:19722:24405	127796	0					
ANR	127799	IdentifierDeclStatement	ssize_t r ;	671:4:19728:19737	127796	0	True				
ANR	127800	IdentifierDecl	r		127796	0					
ANR	127801	IdentifierDeclType	ssize_t		127796	0					
ANR	127802	Identifier	r		127796	1					
ANR	127803	IdentifierDeclStatement	remote_ctx_t * remote_ctx = ( remote_ctx_t * ) w ;	672:4:19743:19787	127796	1	True				
ANR	127804	IdentifierDecl	* remote_ctx = ( remote_ctx_t * ) w		127796	0					
ANR	127805	IdentifierDeclType	remote_ctx_t *		127796	0					
ANR	127806	Identifier	remote_ctx		127796	1					
ANR	127807	AssignmentExpression	* remote_ctx = ( remote_ctx_t * ) w		127796	2		=			
ANR	127808	Identifier	remote_ctx		127796	0					
ANR	127809	CastExpression	( remote_ctx_t * ) w		127796	1					
ANR	127810	CastTarget	remote_ctx_t *		127796	0					
ANR	127811	Identifier	w		127796	1					
ANR	127812	IdentifierDeclStatement	server_ctx_t * server_ctx = remote_ctx -> server_ctx ;	673:4:19793:19842	127796	2	True				
ANR	127813	IdentifierDecl	* server_ctx = remote_ctx -> server_ctx		127796	0					
ANR	127814	IdentifierDeclType	server_ctx_t *		127796	0					
ANR	127815	Identifier	server_ctx		127796	1					
ANR	127816	AssignmentExpression	* server_ctx = remote_ctx -> server_ctx		127796	2		=			
ANR	127817	Identifier	server_ctx		127796	0					
ANR	127818	PtrMemberAccess	remote_ctx -> server_ctx		127796	1					
ANR	127819	Identifier	remote_ctx		127796	0					
ANR	127820	Identifier	server_ctx		127796	1					
ANR	127821	IfStatement	if ( server_ctx == NULL )		127796	3					
ANR	127822	Condition	server_ctx == NULL	676:8:19883:19900	127796	0	True				
ANR	127823	EqualityExpression	server_ctx == NULL		127796	0		==			
ANR	127824	Identifier	server_ctx		127796	0					
ANR	127825	Identifier	NULL		127796	1					
ANR	127826	CompoundStatement		7:28:180:180	127796	1					
ANR	127827	ExpressionStatement	"LOGE ( ""[udp] invalid server"" )"	677:8:19913:19941	127796	0	True				
ANR	127828	CallExpression	"LOGE ( ""[udp] invalid server"" )"		127796	0					
ANR	127829	Callee	LOGE		127796	0					
ANR	127830	Identifier	LOGE		127796	0					
ANR	127831	ArgumentList	"""[udp] invalid server"""		127796	1					
ANR	127832	Argument	"""[udp] invalid server"""		127796	0					
ANR	127833	PrimaryExpression	"""[udp] invalid server"""		127796	0					
ANR	127834	Statement	close_and_free_remote	678:8:19951:19971	127796	1	True				
ANR	127835	Statement	(	678:29:19972:19972	127796	2	True				
ANR	127836	Statement	EV_A_	678:30:19973:19977	127796	3	True				
ANR	127837	Statement	remote_ctx	678:36:19979:19988	127796	4	True				
ANR	127838	Statement	)	678:46:19989:19989	127796	5	True				
ANR	127839	ExpressionStatement		678:47:19990:19990	127796	6	True				
ANR	127840	ReturnStatement	return ;	679:8:20000:20006	127796	7	True				
ANR	127841	IfStatement	if ( verbose )		127796	4					
ANR	127842	Condition	verbose	682:8:20023:20029	127796	0	True				
ANR	127843	Identifier	verbose		127796	0					
ANR	127844	CompoundStatement		13:17:309:309	127796	1					
ANR	127845	ExpressionStatement	"LOGI ( ""[udp] remote receive a packet"" )"	683:8:20042:20079	127796	0	True				
ANR	127846	CallExpression	"LOGI ( ""[udp] remote receive a packet"" )"		127796	0					
ANR	127847	Callee	LOGI		127796	0					
ANR	127848	Identifier	LOGI		127796	0					
ANR	127849	ArgumentList	"""[udp] remote receive a packet"""		127796	1					
ANR	127850	Argument	"""[udp] remote receive a packet"""		127796	0					
ANR	127851	PrimaryExpression	"""[udp] remote receive a packet"""		127796	0					
ANR	127852	IdentifierDeclStatement	struct sockaddr_storage src_addr ;	686:4:20092:20124	127796	5	True				
ANR	127853	IdentifierDecl	src_addr		127796	0					
ANR	127854	IdentifierDeclType	struct sockaddr_storage		127796	0					
ANR	127855	Identifier	src_addr		127796	1					
ANR	127856	IdentifierDeclStatement	socklen_t src_addr_len = sizeof ( struct sockaddr_storage ) ;	687:4:20130:20186	127796	6	True				
ANR	127857	IdentifierDecl	src_addr_len = sizeof ( struct sockaddr_storage )		127796	0					
ANR	127858	IdentifierDeclType	socklen_t		127796	0					
ANR	127859	Identifier	src_addr_len		127796	1					
ANR	127860	AssignmentExpression	src_addr_len = sizeof ( struct sockaddr_storage )		127796	2		=			
ANR	127861	Identifier	src_addr_len		127796	0					
ANR	127862	SizeofExpression	sizeof ( struct sockaddr_storage )		127796	1					
ANR	127863	Sizeof	sizeof		127796	0					
ANR	127864	SizeofOperand	struct sockaddr_storage		127796	1					
ANR	127865	ExpressionStatement	"memset ( & src_addr , 0 , src_addr_len )"	688:4:20192:20226	127796	7	True				
ANR	127866	CallExpression	"memset ( & src_addr , 0 , src_addr_len )"		127796	0					
ANR	127867	Callee	memset		127796	0					
ANR	127868	Identifier	memset		127796	0					
ANR	127869	ArgumentList	& src_addr		127796	1					
ANR	127870	Argument	& src_addr		127796	0					
ANR	127871	UnaryOperationExpression	& src_addr		127796	0					
ANR	127872	UnaryOperator	&		127796	0					
ANR	127873	Identifier	src_addr		127796	1					
ANR	127874	Argument	0		127796	1					
ANR	127875	PrimaryExpression	0		127796	0					
ANR	127876	Argument	src_addr_len		127796	2					
ANR	127877	Identifier	src_addr_len		127796	0					
ANR	127878	IdentifierDeclStatement	buffer_t * buf = ss_malloc ( sizeof ( buffer_t ) ) ;	690:4:20233:20276	127796	8	True				
ANR	127879	IdentifierDecl	* buf = ss_malloc ( sizeof ( buffer_t ) )		127796	0					
ANR	127880	IdentifierDeclType	buffer_t *		127796	0					
ANR	127881	Identifier	buf		127796	1					
ANR	127882	AssignmentExpression	* buf = ss_malloc ( sizeof ( buffer_t ) )		127796	2		=			
ANR	127883	Identifier	buf		127796	0					
ANR	127884	CallExpression	ss_malloc ( sizeof ( buffer_t ) )		127796	1					
ANR	127885	Callee	ss_malloc		127796	0					
ANR	127886	Identifier	ss_malloc		127796	0					
ANR	127887	ArgumentList	sizeof ( buffer_t )		127796	1					
ANR	127888	Argument	sizeof ( buffer_t )		127796	0					
ANR	127889	SizeofExpression	sizeof ( buffer_t )		127796	0					
ANR	127890	Sizeof	sizeof		127796	0					
ANR	127891	SizeofOperand	buffer_t		127796	1					
ANR	127892	ExpressionStatement	"balloc ( buf , buf_size )"	691:4:20282:20303	127796	9	True				
ANR	127893	CallExpression	"balloc ( buf , buf_size )"		127796	0					
ANR	127894	Callee	balloc		127796	0					
ANR	127895	Identifier	balloc		127796	0					
ANR	127896	ArgumentList	buf		127796	1					
ANR	127897	Argument	buf		127796	0					
ANR	127898	Identifier	buf		127796	0					
ANR	127899	Argument	buf_size		127796	1					
ANR	127900	Identifier	buf_size		127796	0					
ANR	127901	ExpressionStatement	"r = recvfrom ( remote_ctx -> fd , buf -> data , buf_size , 0 , ( struct sockaddr * ) & src_addr , & src_addr_len )"	694:4:20322:20419	127796	10	True				
ANR	127902	AssignmentExpression	"r = recvfrom ( remote_ctx -> fd , buf -> data , buf_size , 0 , ( struct sockaddr * ) & src_addr , & src_addr_len )"		127796	0		=			
ANR	127903	Identifier	r		127796	0					
ANR	127904	CallExpression	"recvfrom ( remote_ctx -> fd , buf -> data , buf_size , 0 , ( struct sockaddr * ) & src_addr , & src_addr_len )"		127796	1					
ANR	127905	Callee	recvfrom		127796	0					
ANR	127906	Identifier	recvfrom		127796	0					
ANR	127907	ArgumentList	remote_ctx -> fd		127796	1					
ANR	127908	Argument	remote_ctx -> fd		127796	0					
ANR	127909	PtrMemberAccess	remote_ctx -> fd		127796	0					
ANR	127910	Identifier	remote_ctx		127796	0					
ANR	127911	Identifier	fd		127796	1					
ANR	127912	Argument	buf -> data		127796	1					
ANR	127913	PtrMemberAccess	buf -> data		127796	0					
ANR	127914	Identifier	buf		127796	0					
ANR	127915	Identifier	data		127796	1					
ANR	127916	Argument	buf_size		127796	2					
ANR	127917	Identifier	buf_size		127796	0					
ANR	127918	Argument	0		127796	3					
ANR	127919	PrimaryExpression	0		127796	0					
ANR	127920	Argument	( struct sockaddr * ) & src_addr		127796	4					
ANR	127921	CastExpression	( struct sockaddr * ) & src_addr		127796	0					
ANR	127922	CastTarget	struct sockaddr *		127796	0					
ANR	127923	UnaryOperationExpression	& src_addr		127796	1					
ANR	127924	UnaryOperator	&		127796	0					
ANR	127925	Identifier	src_addr		127796	1					
ANR	127926	Argument	& src_addr_len		127796	5					
ANR	127927	UnaryOperationExpression	& src_addr_len		127796	0					
ANR	127928	UnaryOperator	&		127796	0					
ANR	127929	Identifier	src_addr_len		127796	1					
ANR	127930	IfStatement	if ( r == - 1 )		127796	11					
ANR	127931	Condition	r == - 1	696:8:20430:20436	127796	0	True				
ANR	127932	EqualityExpression	r == - 1		127796	0		==			
ANR	127933	Identifier	r		127796	0					
ANR	127934	UnaryOperationExpression	- 1		127796	1					
ANR	127935	UnaryOperator	-		127796	0					
ANR	127936	PrimaryExpression	1		127796	1					
ANR	127937	CompoundStatement		27:17:716:716	127796	1					
ANR	127938	ExpressionStatement	"ERROR ( ""[udp] remote_recv_recvfrom"" )"	699:8:20509:20544	127796	0	True				
ANR	127939	CallExpression	"ERROR ( ""[udp] remote_recv_recvfrom"" )"		127796	0					
ANR	127940	Callee	ERROR		127796	0					
ANR	127941	Identifier	ERROR		127796	0					
ANR	127942	ArgumentList	"""[udp] remote_recv_recvfrom"""		127796	1					
ANR	127943	Argument	"""[udp] remote_recv_recvfrom"""		127796	0					
ANR	127944	PrimaryExpression	"""[udp] remote_recv_recvfrom"""		127796	0					
ANR	127945	GotoStatement	goto CLEAN_UP ;	700:8:20554:20567	127796	1	True				
ANR	127946	Identifier	CLEAN_UP		127796	0					
ANR	127947	ElseStatement	else		127796	0					
ANR	127948	IfStatement	if ( r > packet_size )		127796	0					
ANR	127949	Condition	r > packet_size	701:15:20584:20598	127796	0	True				
ANR	127950	RelationalExpression	r > packet_size		127796	0		>			
ANR	127951	Identifier	r		127796	0					
ANR	127952	Identifier	packet_size		127796	1					
ANR	127953	CompoundStatement		32:32:878:878	127796	1					
ANR	127954	IfStatement	if ( verbose )		127796	0					
ANR	127955	Condition	verbose	702:12:20615:20621	127796	0	True				
ANR	127956	Identifier	verbose		127796	0					
ANR	127957	CompoundStatement		33:21:901:901	127796	1					
ANR	127958	ExpressionStatement	"LOGI ( ""[udp] remote_recv_recvfrom fragmentation"" )"	703:12:20638:20686	127796	0	True				
ANR	127959	CallExpression	"LOGI ( ""[udp] remote_recv_recvfrom fragmentation"" )"		127796	0					
ANR	127960	Callee	LOGI		127796	0					
ANR	127961	Identifier	LOGI		127796	0					
ANR	127962	ArgumentList	"""[udp] remote_recv_recvfrom fragmentation"""		127796	1					
ANR	127963	Argument	"""[udp] remote_recv_recvfrom fragmentation"""		127796	0					
ANR	127964	PrimaryExpression	"""[udp] remote_recv_recvfrom fragmentation"""		127796	0					
ANR	127965	ExpressionStatement	buf -> len = r	707:4:20709:20721	127796	12	True				
ANR	127966	AssignmentExpression	buf -> len = r		127796	0		=			
ANR	127967	PtrMemberAccess	buf -> len		127796	0					
ANR	127968	Identifier	buf		127796	0					
ANR	127969	Identifier	len		127796	1					
ANR	127970	Identifier	r		127796	1					
ANR	127971	IdentifierDeclStatement	"int err = server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size ) ;"	710:4:20748:20832	127796	13	True				
ANR	127972	IdentifierDecl	"err = server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		127796	0					
ANR	127973	IdentifierDeclType	int		127796	0					
ANR	127974	Identifier	err		127796	1					
ANR	127975	AssignmentExpression	"err = server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		127796	2		=			
ANR	127976	Identifier	err		127796	0					
ANR	127977	CallExpression	"server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		127796	1					
ANR	127978	Callee	server_ctx -> crypto -> decrypt_all		127796	0					
ANR	127979	PtrMemberAccess	server_ctx -> crypto -> decrypt_all		127796	0					
ANR	127980	PtrMemberAccess	server_ctx -> crypto		127796	0					
ANR	127981	Identifier	server_ctx		127796	0					
ANR	127982	Identifier	crypto		127796	1					
ANR	127983	Identifier	decrypt_all		127796	1					
ANR	127984	ArgumentList	buf		127796	1					
ANR	127985	Argument	buf		127796	0					
ANR	127986	Identifier	buf		127796	0					
ANR	127987	Argument	server_ctx -> crypto -> cipher		127796	1					
ANR	127988	PtrMemberAccess	server_ctx -> crypto -> cipher		127796	0					
ANR	127989	PtrMemberAccess	server_ctx -> crypto		127796	0					
ANR	127990	Identifier	server_ctx		127796	0					
ANR	127991	Identifier	crypto		127796	1					
ANR	127992	Identifier	cipher		127796	1					
ANR	127993	Argument	buf_size		127796	2					
ANR	127994	Identifier	buf_size		127796	0					
ANR	127995	IfStatement	if ( err )		127796	14					
ANR	127996	Condition	err	711:8:20842:20844	127796	0	True				
ANR	127997	Identifier	err		127796	0					
ANR	127998	CompoundStatement		42:13:1124:1124	127796	1					
ANR	127999	GotoStatement	goto CLEAN_UP ;	713:8:20893:20906	127796	0	True				
ANR	128000	Identifier	CLEAN_UP		127796	0					
ANR	128001	IdentifierDeclStatement	struct sockaddr_storage dst_addr ;	717:4:20939:20971	127796	15	True				
ANR	128002	IdentifierDecl	dst_addr		127796	0					
ANR	128003	IdentifierDeclType	struct sockaddr_storage		127796	0					
ANR	128004	Identifier	dst_addr		127796	1					
ANR	128005	ExpressionStatement	"memset ( & dst_addr , 0 , sizeof ( struct sockaddr_storage ) )"	718:4:20977:21030	127796	16	True				
ANR	128006	CallExpression	"memset ( & dst_addr , 0 , sizeof ( struct sockaddr_storage ) )"		127796	0					
ANR	128007	Callee	memset		127796	0					
ANR	128008	Identifier	memset		127796	0					
ANR	128009	ArgumentList	& dst_addr		127796	1					
ANR	128010	Argument	& dst_addr		127796	0					
ANR	128011	UnaryOperationExpression	& dst_addr		127796	0					
ANR	128012	UnaryOperator	&		127796	0					
ANR	128013	Identifier	dst_addr		127796	1					
ANR	128014	Argument	0		127796	1					
ANR	128015	PrimaryExpression	0		127796	0					
ANR	128016	Argument	sizeof ( struct sockaddr_storage )		127796	2					
ANR	128017	SizeofExpression	sizeof ( struct sockaddr_storage )		127796	0					
ANR	128018	Sizeof	sizeof		127796	0					
ANR	128019	SizeofOperand	struct sockaddr_storage		127796	1					
ANR	128020	IdentifierDeclStatement	"int len = parse_udprelay_header ( buf -> data , buf -> len , NULL , NULL , & dst_addr ) ;"	719:4:21036:21111	127796	17	True				
ANR	128021	IdentifierDecl	"len = parse_udprelay_header ( buf -> data , buf -> len , NULL , NULL , & dst_addr )"		127796	0					
ANR	128022	IdentifierDeclType	int		127796	0					
ANR	128023	Identifier	len		127796	1					
ANR	128024	AssignmentExpression	"len = parse_udprelay_header ( buf -> data , buf -> len , NULL , NULL , & dst_addr )"		127796	2		=			
ANR	128025	Identifier	len		127796	0					
ANR	128026	CallExpression	"parse_udprelay_header ( buf -> data , buf -> len , NULL , NULL , & dst_addr )"		127796	1					
ANR	128027	Callee	parse_udprelay_header		127796	0					
ANR	128028	Identifier	parse_udprelay_header		127796	0					
ANR	128029	ArgumentList	buf -> data		127796	1					
ANR	128030	Argument	buf -> data		127796	0					
ANR	128031	PtrMemberAccess	buf -> data		127796	0					
ANR	128032	Identifier	buf		127796	0					
ANR	128033	Identifier	data		127796	1					
ANR	128034	Argument	buf -> len		127796	1					
ANR	128035	PtrMemberAccess	buf -> len		127796	0					
ANR	128036	Identifier	buf		127796	0					
ANR	128037	Identifier	len		127796	1					
ANR	128038	Argument	NULL		127796	2					
ANR	128039	Identifier	NULL		127796	0					
ANR	128040	Argument	NULL		127796	3					
ANR	128041	Identifier	NULL		127796	0					
ANR	128042	Argument	& dst_addr		127796	4					
ANR	128043	UnaryOperationExpression	& dst_addr		127796	0					
ANR	128044	UnaryOperator	&		127796	0					
ANR	128045	Identifier	dst_addr		127796	1					
ANR	128046	IfStatement	if ( dst_addr . ss_family != AF_INET && dst_addr . ss_family != AF_INET6 )		127796	18					
ANR	128047	Condition	dst_addr . ss_family != AF_INET && dst_addr . ss_family != AF_INET6	721:8:21122:21184	127796	0	True				
ANR	128048	AndExpression	dst_addr . ss_family != AF_INET && dst_addr . ss_family != AF_INET6		127796	0		&&			
ANR	128049	EqualityExpression	dst_addr . ss_family != AF_INET		127796	0		!=			
ANR	128050	MemberAccess	dst_addr . ss_family		127796	0					
ANR	128051	Identifier	dst_addr		127796	0					
ANR	128052	Identifier	ss_family		127796	1					
ANR	128053	Identifier	AF_INET		127796	1					
ANR	128054	EqualityExpression	dst_addr . ss_family != AF_INET6		127796	1		!=			
ANR	128055	MemberAccess	dst_addr . ss_family		127796	0					
ANR	128056	Identifier	dst_addr		127796	0					
ANR	128057	Identifier	ss_family		127796	1					
ANR	128058	Identifier	AF_INET6		127796	1					
ANR	128059	CompoundStatement		52:73:1464:1464	127796	1					
ANR	128060	ExpressionStatement	"LOGI ( ""[udp] ss-redir does not support domain name"" )"	722:8:21197:21248	127796	0	True				
ANR	128061	CallExpression	"LOGI ( ""[udp] ss-redir does not support domain name"" )"		127796	0					
ANR	128062	Callee	LOGI		127796	0					
ANR	128063	Identifier	LOGI		127796	0					
ANR	128064	ArgumentList	"""[udp] ss-redir does not support domain name"""		127796	1					
ANR	128065	Argument	"""[udp] ss-redir does not support domain name"""		127796	0					
ANR	128066	PrimaryExpression	"""[udp] ss-redir does not support domain name"""		127796	0					
ANR	128067	GotoStatement	goto CLEAN_UP ;	723:8:21258:21271	127796	1	True				
ANR	128068	Identifier	CLEAN_UP		127796	0					
ANR	128069	IfStatement	if ( len == 0 )		127796	19					
ANR	128070	Condition	len == 0	729:8:21377:21384	127796	0	True				
ANR	128071	EqualityExpression	len == 0		127796	0		==			
ANR	128072	Identifier	len		127796	0					
ANR	128073	PrimaryExpression	0		127796	1					
ANR	128074	CompoundStatement		60:18:1664:1664	127796	1					
ANR	128075	ExpressionStatement	"LOGI ( ""[udp] error in parse header"" )"	730:8:21397:21432	127796	0	True				
ANR	128076	CallExpression	"LOGI ( ""[udp] error in parse header"" )"		127796	0					
ANR	128077	Callee	LOGI		127796	0					
ANR	128078	Identifier	LOGI		127796	0					
ANR	128079	ArgumentList	"""[udp] error in parse header"""		127796	1					
ANR	128080	Argument	"""[udp] error in parse header"""		127796	0					
ANR	128081	PrimaryExpression	"""[udp] error in parse header"""		127796	0					
ANR	128082	GotoStatement	goto CLEAN_UP ;	732:8:21475:21488	127796	1	True				
ANR	128083	Identifier	CLEAN_UP		127796	0					
ANR	128084	ExpressionStatement	buf -> len -= len	739:4:21688:21703	127796	20	True				
ANR	128085	AssignmentExpression	buf -> len -= len		127796	0		-=			
ANR	128086	PtrMemberAccess	buf -> len		127796	0					
ANR	128087	Identifier	buf		127796	0					
ANR	128088	Identifier	len		127796	1					
ANR	128089	Identifier	len		127796	1					
ANR	128090	ExpressionStatement	"memmove ( buf -> data , buf -> data + len , buf -> len )"	740:4:21709:21754	127796	21	True				
ANR	128091	CallExpression	"memmove ( buf -> data , buf -> data + len , buf -> len )"		127796	0					
ANR	128092	Callee	memmove		127796	0					
ANR	128093	Identifier	memmove		127796	0					
ANR	128094	ArgumentList	buf -> data		127796	1					
ANR	128095	Argument	buf -> data		127796	0					
ANR	128096	PtrMemberAccess	buf -> data		127796	0					
ANR	128097	Identifier	buf		127796	0					
ANR	128098	Identifier	data		127796	1					
ANR	128099	Argument	buf -> data + len		127796	1					
ANR	128100	AdditiveExpression	buf -> data + len		127796	0		+			
ANR	128101	PtrMemberAccess	buf -> data		127796	0					
ANR	128102	Identifier	buf		127796	0					
ANR	128103	Identifier	data		127796	1					
ANR	128104	Identifier	len		127796	1					
ANR	128105	Argument	buf -> len		127796	2					
ANR	128106	PtrMemberAccess	buf -> len		127796	0					
ANR	128107	Identifier	buf		127796	0					
ANR	128108	Identifier	len		127796	1					
ANR	128109	ExpressionStatement	rx += buf -> len	757:4:22036:22050	127796	22	True				
ANR	128110	AssignmentExpression	rx += buf -> len		127796	0		+=			
ANR	128111	Identifier	rx		127796	0					
ANR	128112	PtrMemberAccess	buf -> len		127796	1					
ANR	128113	Identifier	buf		127796	0					
ANR	128114	Identifier	len		127796	1					
ANR	128115	IdentifierDeclStatement	char * addr_header = remote_ctx -> addr_header ;	759:4:22057:22102	127796	23	True				
ANR	128116	IdentifierDecl	* addr_header = remote_ctx -> addr_header		127796	0					
ANR	128117	IdentifierDeclType	char *		127796	0					
ANR	128118	Identifier	addr_header		127796	1					
ANR	128119	AssignmentExpression	* addr_header = remote_ctx -> addr_header		127796	2		=			
ANR	128120	Identifier	addr_header		127796	0					
ANR	128121	PtrMemberAccess	remote_ctx -> addr_header		127796	1					
ANR	128122	Identifier	remote_ctx		127796	0					
ANR	128123	Identifier	addr_header		127796	1					
ANR	128124	IdentifierDeclStatement	int addr_header_len = remote_ctx -> addr_header_len ;	760:4:22108:22157	127796	24	True				
ANR	128125	IdentifierDecl	addr_header_len = remote_ctx -> addr_header_len		127796	0					
ANR	128126	IdentifierDeclType	int		127796	0					
ANR	128127	Identifier	addr_header_len		127796	1					
ANR	128128	AssignmentExpression	addr_header_len = remote_ctx -> addr_header_len		127796	2		=			
ANR	128129	Identifier	addr_header_len		127796	0					
ANR	128130	PtrMemberAccess	remote_ctx -> addr_header_len		127796	1					
ANR	128131	Identifier	remote_ctx		127796	0					
ANR	128132	Identifier	addr_header_len		127796	1					
ANR	128133	ExpressionStatement	"brealloc ( buf , buf -> len + addr_header_len , buf_size )"	763:4:22188:22239	127796	25	True				
ANR	128134	CallExpression	"brealloc ( buf , buf -> len + addr_header_len , buf_size )"		127796	0					
ANR	128135	Callee	brealloc		127796	0					
ANR	128136	Identifier	brealloc		127796	0					
ANR	128137	ArgumentList	buf		127796	1					
ANR	128138	Argument	buf		127796	0					
ANR	128139	Identifier	buf		127796	0					
ANR	128140	Argument	buf -> len + addr_header_len		127796	1					
ANR	128141	AdditiveExpression	buf -> len + addr_header_len		127796	0		+			
ANR	128142	PtrMemberAccess	buf -> len		127796	0					
ANR	128143	Identifier	buf		127796	0					
ANR	128144	Identifier	len		127796	1					
ANR	128145	Identifier	addr_header_len		127796	1					
ANR	128146	Argument	buf_size		127796	2					
ANR	128147	Identifier	buf_size		127796	0					
ANR	128148	ExpressionStatement	"memmove ( buf -> data + addr_header_len , buf -> data , buf -> len )"	764:4:22245:22302	127796	26	True				
ANR	128149	CallExpression	"memmove ( buf -> data + addr_header_len , buf -> data , buf -> len )"		127796	0					
ANR	128150	Callee	memmove		127796	0					
ANR	128151	Identifier	memmove		127796	0					
ANR	128152	ArgumentList	buf -> data + addr_header_len		127796	1					
ANR	128153	Argument	buf -> data + addr_header_len		127796	0					
ANR	128154	AdditiveExpression	buf -> data + addr_header_len		127796	0		+			
ANR	128155	PtrMemberAccess	buf -> data		127796	0					
ANR	128156	Identifier	buf		127796	0					
ANR	128157	Identifier	data		127796	1					
ANR	128158	Identifier	addr_header_len		127796	1					
ANR	128159	Argument	buf -> data		127796	1					
ANR	128160	PtrMemberAccess	buf -> data		127796	0					
ANR	128161	Identifier	buf		127796	0					
ANR	128162	Identifier	data		127796	1					
ANR	128163	Argument	buf -> len		127796	2					
ANR	128164	PtrMemberAccess	buf -> len		127796	0					
ANR	128165	Identifier	buf		127796	0					
ANR	128166	Identifier	len		127796	1					
ANR	128167	ExpressionStatement	"memcpy ( buf -> data , addr_header , addr_header_len )"	765:4:22308:22355	127796	27	True				
ANR	128168	CallExpression	"memcpy ( buf -> data , addr_header , addr_header_len )"		127796	0					
ANR	128169	Callee	memcpy		127796	0					
ANR	128170	Identifier	memcpy		127796	0					
ANR	128171	ArgumentList	buf -> data		127796	1					
ANR	128172	Argument	buf -> data		127796	0					
ANR	128173	PtrMemberAccess	buf -> data		127796	0					
ANR	128174	Identifier	buf		127796	0					
ANR	128175	Identifier	data		127796	1					
ANR	128176	Argument	addr_header		127796	1					
ANR	128177	Identifier	addr_header		127796	0					
ANR	128178	Argument	addr_header_len		127796	2					
ANR	128179	Identifier	addr_header_len		127796	0					
ANR	128180	ExpressionStatement	buf -> len += addr_header_len	766:4:22361:22388	127796	28	True				
ANR	128181	AssignmentExpression	buf -> len += addr_header_len		127796	0		+=			
ANR	128182	PtrMemberAccess	buf -> len		127796	0					
ANR	128183	Identifier	buf		127796	0					
ANR	128184	Identifier	len		127796	1					
ANR	128185	Identifier	addr_header_len		127796	1					
ANR	128186	IdentifierDeclStatement	"int err = server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size ) ;"	768:4:22395:22479	127796	29	True				
ANR	128187	IdentifierDecl	"err = server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		127796	0					
ANR	128188	IdentifierDeclType	int		127796	0					
ANR	128189	Identifier	err		127796	1					
ANR	128190	AssignmentExpression	"err = server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		127796	2		=			
ANR	128191	Identifier	err		127796	0					
ANR	128192	CallExpression	"server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		127796	1					
ANR	128193	Callee	server_ctx -> crypto -> encrypt_all		127796	0					
ANR	128194	PtrMemberAccess	server_ctx -> crypto -> encrypt_all		127796	0					
ANR	128195	PtrMemberAccess	server_ctx -> crypto		127796	0					
ANR	128196	Identifier	server_ctx		127796	0					
ANR	128197	Identifier	crypto		127796	1					
ANR	128198	Identifier	encrypt_all		127796	1					
ANR	128199	ArgumentList	buf		127796	1					
ANR	128200	Argument	buf		127796	0					
ANR	128201	Identifier	buf		127796	0					
ANR	128202	Argument	server_ctx -> crypto -> cipher		127796	1					
ANR	128203	PtrMemberAccess	server_ctx -> crypto -> cipher		127796	0					
ANR	128204	PtrMemberAccess	server_ctx -> crypto		127796	0					
ANR	128205	Identifier	server_ctx		127796	0					
ANR	128206	Identifier	crypto		127796	1					
ANR	128207	Identifier	cipher		127796	1					
ANR	128208	Argument	buf_size		127796	2					
ANR	128209	Identifier	buf_size		127796	0					
ANR	128210	IfStatement	if ( err )		127796	30					
ANR	128211	Condition	err	769:8:22489:22491	127796	0	True				
ANR	128212	Identifier	err		127796	0					
ANR	128213	CompoundStatement		100:13:2771:2771	127796	1					
ANR	128214	GotoStatement	goto CLEAN_UP ;	771:8:22540:22553	127796	0	True				
ANR	128215	Identifier	CLEAN_UP		127796	0					
ANR	128216	IfStatement	if ( buf -> len > packet_size )		127796	31					
ANR	128217	Condition	buf -> len > packet_size	776:8:22578:22599	127796	0	True				
ANR	128218	RelationalExpression	buf -> len > packet_size		127796	0		>			
ANR	128219	PtrMemberAccess	buf -> len		127796	0					
ANR	128220	Identifier	buf		127796	0					
ANR	128221	Identifier	len		127796	1					
ANR	128222	Identifier	packet_size		127796	1					
ANR	128223	CompoundStatement		107:32:2879:2879	127796	1					
ANR	128224	IfStatement	if ( verbose )		127796	0					
ANR	128225	Condition	verbose	777:12:22616:22622	127796	0	True				
ANR	128226	Identifier	verbose		127796	0					
ANR	128227	CompoundStatement		108:21:2902:2902	127796	1					
ANR	128228	ExpressionStatement	"LOGI ( ""[udp] remote_recv_sendto fragmentation"" )"	778:12:22639:22685	127796	0	True				
ANR	128229	CallExpression	"LOGI ( ""[udp] remote_recv_sendto fragmentation"" )"		127796	0					
ANR	128230	Callee	LOGI		127796	0					
ANR	128231	Identifier	LOGI		127796	0					
ANR	128232	ArgumentList	"""[udp] remote_recv_sendto fragmentation"""		127796	1					
ANR	128233	Argument	"""[udp] remote_recv_sendto fragmentation"""		127796	0					
ANR	128234	PrimaryExpression	"""[udp] remote_recv_sendto fragmentation"""		127796	0					
ANR	128235	IdentifierDeclStatement	size_t remote_src_addr_len = get_sockaddr_len ( ( struct sockaddr * ) & remote_ctx -> src_addr ) ;	782:4:22708:22795	127796	32	True				
ANR	128236	IdentifierDecl	remote_src_addr_len = get_sockaddr_len ( ( struct sockaddr * ) & remote_ctx -> src_addr )		127796	0					
ANR	128237	IdentifierDeclType	size_t		127796	0					
ANR	128238	Identifier	remote_src_addr_len		127796	1					
ANR	128239	AssignmentExpression	remote_src_addr_len = get_sockaddr_len ( ( struct sockaddr * ) & remote_ctx -> src_addr )		127796	2		=			
ANR	128240	Identifier	remote_src_addr_len		127796	0					
ANR	128241	CallExpression	get_sockaddr_len ( ( struct sockaddr * ) & remote_ctx -> src_addr )		127796	1					
ANR	128242	Callee	get_sockaddr_len		127796	0					
ANR	128243	Identifier	get_sockaddr_len		127796	0					
ANR	128244	ArgumentList	( struct sockaddr * ) & remote_ctx -> src_addr		127796	1					
ANR	128245	Argument	( struct sockaddr * ) & remote_ctx -> src_addr		127796	0					
ANR	128246	CastExpression	( struct sockaddr * ) & remote_ctx -> src_addr		127796	0					
ANR	128247	CastTarget	struct sockaddr *		127796	0					
ANR	128248	UnaryOperationExpression	& remote_ctx -> src_addr		127796	1					
ANR	128249	UnaryOperator	&		127796	0					
ANR	128250	PtrMemberAccess	remote_ctx -> src_addr		127796	1					
ANR	128251	Identifier	remote_ctx		127796	0					
ANR	128252	Identifier	src_addr		127796	1					
ANR	128253	IdentifierDeclStatement	size_t remote_dst_addr_len = get_sockaddr_len ( ( struct sockaddr * ) & dst_addr ) ;	786:4:22823:22898	127796	33	True				
ANR	128254	IdentifierDecl	remote_dst_addr_len = get_sockaddr_len ( ( struct sockaddr * ) & dst_addr )		127796	0					
ANR	128255	IdentifierDeclType	size_t		127796	0					
ANR	128256	Identifier	remote_dst_addr_len		127796	1					
ANR	128257	AssignmentExpression	remote_dst_addr_len = get_sockaddr_len ( ( struct sockaddr * ) & dst_addr )		127796	2		=			
ANR	128258	Identifier	remote_dst_addr_len		127796	0					
ANR	128259	CallExpression	get_sockaddr_len ( ( struct sockaddr * ) & dst_addr )		127796	1					
ANR	128260	Callee	get_sockaddr_len		127796	0					
ANR	128261	Identifier	get_sockaddr_len		127796	0					
ANR	128262	ArgumentList	( struct sockaddr * ) & dst_addr		127796	1					
ANR	128263	Argument	( struct sockaddr * ) & dst_addr		127796	0					
ANR	128264	CastExpression	( struct sockaddr * ) & dst_addr		127796	0					
ANR	128265	CastTarget	struct sockaddr *		127796	0					
ANR	128266	UnaryOperationExpression	& dst_addr		127796	1					
ANR	128267	UnaryOperator	&		127796	0					
ANR	128268	Identifier	dst_addr		127796	1					
ANR	128269	IdentifierDeclStatement	"int src_fd = socket ( remote_ctx -> src_addr . ss_family , SOCK_DGRAM , 0 ) ;"	788:4:22905:22971	127796	34	True				
ANR	128270	IdentifierDecl	"src_fd = socket ( remote_ctx -> src_addr . ss_family , SOCK_DGRAM , 0 )"		127796	0					
ANR	128271	IdentifierDeclType	int		127796	0					
ANR	128272	Identifier	src_fd		127796	1					
ANR	128273	AssignmentExpression	"src_fd = socket ( remote_ctx -> src_addr . ss_family , SOCK_DGRAM , 0 )"		127796	2		=			
ANR	128274	Identifier	src_fd		127796	0					
ANR	128275	CallExpression	"socket ( remote_ctx -> src_addr . ss_family , SOCK_DGRAM , 0 )"		127796	1					
ANR	128276	Callee	socket		127796	0					
ANR	128277	Identifier	socket		127796	0					
ANR	128278	ArgumentList	remote_ctx -> src_addr . ss_family		127796	1					
ANR	128279	Argument	remote_ctx -> src_addr . ss_family		127796	0					
ANR	128280	MemberAccess	remote_ctx -> src_addr . ss_family		127796	0					
ANR	128281	PtrMemberAccess	remote_ctx -> src_addr		127796	0					
ANR	128282	Identifier	remote_ctx		127796	0					
ANR	128283	Identifier	src_addr		127796	1					
ANR	128284	Identifier	ss_family		127796	1					
ANR	128285	Argument	SOCK_DGRAM		127796	1					
ANR	128286	Identifier	SOCK_DGRAM		127796	0					
ANR	128287	Argument	0		127796	2					
ANR	128288	PrimaryExpression	0		127796	0					
ANR	128289	IfStatement	if ( src_fd < 0 )		127796	35					
ANR	128290	Condition	src_fd < 0	789:8:22981:22990	127796	0	True				
ANR	128291	RelationalExpression	src_fd < 0		127796	0		<			
ANR	128292	Identifier	src_fd		127796	0					
ANR	128293	PrimaryExpression	0		127796	1					
ANR	128294	CompoundStatement		120:20:3270:3270	127796	1					
ANR	128295	ExpressionStatement	"ERROR ( ""[udp] remote_recv_socket"" )"	790:8:23003:23036	127796	0	True				
ANR	128296	CallExpression	"ERROR ( ""[udp] remote_recv_socket"" )"		127796	0					
ANR	128297	Callee	ERROR		127796	0					
ANR	128298	Identifier	ERROR		127796	0					
ANR	128299	ArgumentList	"""[udp] remote_recv_socket"""		127796	1					
ANR	128300	Argument	"""[udp] remote_recv_socket"""		127796	0					
ANR	128301	PrimaryExpression	"""[udp] remote_recv_socket"""		127796	0					
ANR	128302	GotoStatement	goto CLEAN_UP ;	791:8:23046:23059	127796	1	True				
ANR	128303	Identifier	CLEAN_UP		127796	0					
ANR	128304	IdentifierDeclStatement	int opt = 1 ;	793:4:23071:23082	127796	36	True				
ANR	128305	IdentifierDecl	opt = 1		127796	0					
ANR	128306	IdentifierDeclType	int		127796	0					
ANR	128307	Identifier	opt		127796	1					
ANR	128308	AssignmentExpression	opt = 1		127796	2		=			
ANR	128309	Identifier	opt		127796	0					
ANR	128310	PrimaryExpression	1		127796	1					
ANR	128311	IfStatement	"if ( setsockopt ( src_fd , SOL_IP , IP_TRANSPARENT , & opt , sizeof ( opt ) ) )"		127796	37					
ANR	128312	Condition	"setsockopt ( src_fd , SOL_IP , IP_TRANSPARENT , & opt , sizeof ( opt ) )"	794:8:23092:23152	127796	0	True				
ANR	128313	CallExpression	"setsockopt ( src_fd , SOL_IP , IP_TRANSPARENT , & opt , sizeof ( opt ) )"		127796	0					
ANR	128314	Callee	setsockopt		127796	0					
ANR	128315	Identifier	setsockopt		127796	0					
ANR	128316	ArgumentList	src_fd		127796	1					
ANR	128317	Argument	src_fd		127796	0					
ANR	128318	Identifier	src_fd		127796	0					
ANR	128319	Argument	SOL_IP		127796	1					
ANR	128320	Identifier	SOL_IP		127796	0					
ANR	128321	Argument	IP_TRANSPARENT		127796	2					
ANR	128322	Identifier	IP_TRANSPARENT		127796	0					
ANR	128323	Argument	& opt		127796	3					
ANR	128324	UnaryOperationExpression	& opt		127796	0					
ANR	128325	UnaryOperator	&		127796	0					
ANR	128326	Identifier	opt		127796	1					
ANR	128327	Argument	sizeof ( opt )		127796	4					
ANR	128328	SizeofExpression	sizeof ( opt )		127796	0					
ANR	128329	Sizeof	sizeof		127796	0					
ANR	128330	SizeofOperand	opt		127796	1					
ANR	128331	CompoundStatement		125:71:3432:3432	127796	1					
ANR	128332	ExpressionStatement	"ERROR ( ""[udp] remote_recv_setsockopt"" )"	795:8:23165:23202	127796	0	True				
ANR	128333	CallExpression	"ERROR ( ""[udp] remote_recv_setsockopt"" )"		127796	0					
ANR	128334	Callee	ERROR		127796	0					
ANR	128335	Identifier	ERROR		127796	0					
ANR	128336	ArgumentList	"""[udp] remote_recv_setsockopt"""		127796	1					
ANR	128337	Argument	"""[udp] remote_recv_setsockopt"""		127796	0					
ANR	128338	PrimaryExpression	"""[udp] remote_recv_setsockopt"""		127796	0					
ANR	128339	ExpressionStatement	close ( src_fd )	796:8:23212:23225	127796	1	True				
ANR	128340	CallExpression	close ( src_fd )		127796	0					
ANR	128341	Callee	close		127796	0					
ANR	128342	Identifier	close		127796	0					
ANR	128343	ArgumentList	src_fd		127796	1					
ANR	128344	Argument	src_fd		127796	0					
ANR	128345	Identifier	src_fd		127796	0					
ANR	128346	GotoStatement	goto CLEAN_UP ;	797:8:23235:23248	127796	2	True				
ANR	128347	Identifier	CLEAN_UP		127796	0					
ANR	128348	IfStatement	"if ( setsockopt ( src_fd , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) ) )"		127796	38					
ANR	128349	Condition	"setsockopt ( src_fd , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"	799:8:23264:23326	127796	0	True				
ANR	128350	CallExpression	"setsockopt ( src_fd , SOL_SOCKET , SO_REUSEADDR , & opt , sizeof ( opt ) )"		127796	0					
ANR	128351	Callee	setsockopt		127796	0					
ANR	128352	Identifier	setsockopt		127796	0					
ANR	128353	ArgumentList	src_fd		127796	1					
ANR	128354	Argument	src_fd		127796	0					
ANR	128355	Identifier	src_fd		127796	0					
ANR	128356	Argument	SOL_SOCKET		127796	1					
ANR	128357	Identifier	SOL_SOCKET		127796	0					
ANR	128358	Argument	SO_REUSEADDR		127796	2					
ANR	128359	Identifier	SO_REUSEADDR		127796	0					
ANR	128360	Argument	& opt		127796	3					
ANR	128361	UnaryOperationExpression	& opt		127796	0					
ANR	128362	UnaryOperator	&		127796	0					
ANR	128363	Identifier	opt		127796	1					
ANR	128364	Argument	sizeof ( opt )		127796	4					
ANR	128365	SizeofExpression	sizeof ( opt )		127796	0					
ANR	128366	Sizeof	sizeof		127796	0					
ANR	128367	SizeofOperand	opt		127796	1					
ANR	128368	CompoundStatement		130:73:3606:3606	127796	1					
ANR	128369	ExpressionStatement	"ERROR ( ""[udp] remote_recv_setsockopt"" )"	800:8:23339:23376	127796	0	True				
ANR	128370	CallExpression	"ERROR ( ""[udp] remote_recv_setsockopt"" )"		127796	0					
ANR	128371	Callee	ERROR		127796	0					
ANR	128372	Identifier	ERROR		127796	0					
ANR	128373	ArgumentList	"""[udp] remote_recv_setsockopt"""		127796	1					
ANR	128374	Argument	"""[udp] remote_recv_setsockopt"""		127796	0					
ANR	128375	PrimaryExpression	"""[udp] remote_recv_setsockopt"""		127796	0					
ANR	128376	ExpressionStatement	close ( src_fd )	801:8:23386:23399	127796	1	True				
ANR	128377	CallExpression	close ( src_fd )		127796	0					
ANR	128378	Callee	close		127796	0					
ANR	128379	Identifier	close		127796	0					
ANR	128380	ArgumentList	src_fd		127796	1					
ANR	128381	Argument	src_fd		127796	0					
ANR	128382	Identifier	src_fd		127796	0					
ANR	128383	GotoStatement	goto CLEAN_UP ;	802:8:23409:23422	127796	2	True				
ANR	128384	Identifier	CLEAN_UP		127796	0					
ANR	128385	IdentifierDeclStatement	int tos = 46 ;	806:4:23468:23480	127796	39	True				
ANR	128386	IdentifierDecl	tos = 46		127796	0					
ANR	128387	IdentifierDeclType	int		127796	0					
ANR	128388	Identifier	tos		127796	1					
ANR	128389	AssignmentExpression	tos = 46		127796	2		=			
ANR	128390	Identifier	tos		127796	0					
ANR	128391	PrimaryExpression	46		127796	1					
ANR	128392	ExpressionStatement	"setsockopt ( src_fd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"	807:4:23486:23543	127796	40	True				
ANR	128393	CallExpression	"setsockopt ( src_fd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"		127796	0					
ANR	128394	Callee	setsockopt		127796	0					
ANR	128395	Identifier	setsockopt		127796	0					
ANR	128396	ArgumentList	src_fd		127796	1					
ANR	128397	Argument	src_fd		127796	0					
ANR	128398	Identifier	src_fd		127796	0					
ANR	128399	Argument	IPPROTO_IP		127796	1					
ANR	128400	Identifier	IPPROTO_IP		127796	0					
ANR	128401	Argument	IP_TOS		127796	2					
ANR	128402	Identifier	IP_TOS		127796	0					
ANR	128403	Argument	& tos		127796	3					
ANR	128404	UnaryOperationExpression	& tos		127796	0					
ANR	128405	UnaryOperator	&		127796	0					
ANR	128406	Identifier	tos		127796	1					
ANR	128407	Argument	sizeof ( tos )		127796	4					
ANR	128408	SizeofExpression	sizeof ( tos )		127796	0					
ANR	128409	Sizeof	sizeof		127796	0					
ANR	128410	SizeofOperand	tos		127796	1					
ANR	128411	IfStatement	"if ( bind ( src_fd , ( struct sockaddr * ) & dst_addr , remote_dst_addr_len ) != 0 )"		127796	41					
ANR	128412	Condition	"bind ( src_fd , ( struct sockaddr * ) & dst_addr , remote_dst_addr_len ) != 0"	809:8:23560:23627	127796	0	True				
ANR	128413	EqualityExpression	"bind ( src_fd , ( struct sockaddr * ) & dst_addr , remote_dst_addr_len ) != 0"		127796	0		!=			
ANR	128414	CallExpression	"bind ( src_fd , ( struct sockaddr * ) & dst_addr , remote_dst_addr_len )"		127796	0					
ANR	128415	Callee	bind		127796	0					
ANR	128416	Identifier	bind		127796	0					
ANR	128417	ArgumentList	src_fd		127796	1					
ANR	128418	Argument	src_fd		127796	0					
ANR	128419	Identifier	src_fd		127796	0					
ANR	128420	Argument	( struct sockaddr * ) & dst_addr		127796	1					
ANR	128421	CastExpression	( struct sockaddr * ) & dst_addr		127796	0					
ANR	128422	CastTarget	struct sockaddr *		127796	0					
ANR	128423	UnaryOperationExpression	& dst_addr		127796	1					
ANR	128424	UnaryOperator	&		127796	0					
ANR	128425	Identifier	dst_addr		127796	1					
ANR	128426	Argument	remote_dst_addr_len		127796	2					
ANR	128427	Identifier	remote_dst_addr_len		127796	0					
ANR	128428	PrimaryExpression	0		127796	1					
ANR	128429	CompoundStatement		140:78:3907:3907	127796	1					
ANR	128430	ExpressionStatement	"ERROR ( ""[udp] remote_recv_bind"" )"	810:8:23640:23671	127796	0	True				
ANR	128431	CallExpression	"ERROR ( ""[udp] remote_recv_bind"" )"		127796	0					
ANR	128432	Callee	ERROR		127796	0					
ANR	128433	Identifier	ERROR		127796	0					
ANR	128434	ArgumentList	"""[udp] remote_recv_bind"""		127796	1					
ANR	128435	Argument	"""[udp] remote_recv_bind"""		127796	0					
ANR	128436	PrimaryExpression	"""[udp] remote_recv_bind"""		127796	0					
ANR	128437	ExpressionStatement	close ( src_fd )	811:8:23681:23694	127796	1	True				
ANR	128438	CallExpression	close ( src_fd )		127796	0					
ANR	128439	Callee	close		127796	0					
ANR	128440	Identifier	close		127796	0					
ANR	128441	ArgumentList	src_fd		127796	1					
ANR	128442	Argument	src_fd		127796	0					
ANR	128443	Identifier	src_fd		127796	0					
ANR	128444	GotoStatement	goto CLEAN_UP ;	812:8:23704:23717	127796	2	True				
ANR	128445	Identifier	CLEAN_UP		127796	0					
ANR	128446	IdentifierDeclStatement	"int s = sendto ( src_fd , buf -> data , buf -> len , 0 , ( struct sockaddr * ) & remote_ctx -> src_addr , remote_src_addr_len ) ;"	815:4:23730:23858	127796	42	True				
ANR	128447	IdentifierDecl	"s = sendto ( src_fd , buf -> data , buf -> len , 0 , ( struct sockaddr * ) & remote_ctx -> src_addr , remote_src_addr_len )"		127796	0					
ANR	128448	IdentifierDeclType	int		127796	0					
ANR	128449	Identifier	s		127796	1					
ANR	128450	AssignmentExpression	"s = sendto ( src_fd , buf -> data , buf -> len , 0 , ( struct sockaddr * ) & remote_ctx -> src_addr , remote_src_addr_len )"		127796	2		=			
ANR	128451	Identifier	s		127796	0					
ANR	128452	CallExpression	"sendto ( src_fd , buf -> data , buf -> len , 0 , ( struct sockaddr * ) & remote_ctx -> src_addr , remote_src_addr_len )"		127796	1					
ANR	128453	Callee	sendto		127796	0					
ANR	128454	Identifier	sendto		127796	0					
ANR	128455	ArgumentList	src_fd		127796	1					
ANR	128456	Argument	src_fd		127796	0					
ANR	128457	Identifier	src_fd		127796	0					
ANR	128458	Argument	buf -> data		127796	1					
ANR	128459	PtrMemberAccess	buf -> data		127796	0					
ANR	128460	Identifier	buf		127796	0					
ANR	128461	Identifier	data		127796	1					
ANR	128462	Argument	buf -> len		127796	2					
ANR	128463	PtrMemberAccess	buf -> len		127796	0					
ANR	128464	Identifier	buf		127796	0					
ANR	128465	Identifier	len		127796	1					
ANR	128466	Argument	0		127796	3					
ANR	128467	PrimaryExpression	0		127796	0					
ANR	128468	Argument	( struct sockaddr * ) & remote_ctx -> src_addr		127796	4					
ANR	128469	CastExpression	( struct sockaddr * ) & remote_ctx -> src_addr		127796	0					
ANR	128470	CastTarget	struct sockaddr *		127796	0					
ANR	128471	UnaryOperationExpression	& remote_ctx -> src_addr		127796	1					
ANR	128472	UnaryOperator	&		127796	0					
ANR	128473	PtrMemberAccess	remote_ctx -> src_addr		127796	1					
ANR	128474	Identifier	remote_ctx		127796	0					
ANR	128475	Identifier	src_addr		127796	1					
ANR	128476	Argument	remote_src_addr_len		127796	5					
ANR	128477	Identifier	remote_src_addr_len		127796	0					
ANR	128478	IfStatement	if ( s == - 1 )		127796	43					
ANR	128479	Condition	s == - 1	817:8:23868:23874	127796	0	True				
ANR	128480	EqualityExpression	s == - 1		127796	0		==			
ANR	128481	Identifier	s		127796	0					
ANR	128482	UnaryOperationExpression	- 1		127796	1					
ANR	128483	UnaryOperator	-		127796	0					
ANR	128484	PrimaryExpression	1		127796	1					
ANR	128485	CompoundStatement		148:17:4154:4154	127796	1					
ANR	128486	ExpressionStatement	"ERROR ( ""[udp] remote_recv_sendto"" )"	818:8:23887:23920	127796	0	True				
ANR	128487	CallExpression	"ERROR ( ""[udp] remote_recv_sendto"" )"		127796	0					
ANR	128488	Callee	ERROR		127796	0					
ANR	128489	Identifier	ERROR		127796	0					
ANR	128490	ArgumentList	"""[udp] remote_recv_sendto"""		127796	1					
ANR	128491	Argument	"""[udp] remote_recv_sendto"""		127796	0					
ANR	128492	PrimaryExpression	"""[udp] remote_recv_sendto"""		127796	0					
ANR	128493	ExpressionStatement	close ( src_fd )	819:8:23930:23943	127796	1	True				
ANR	128494	CallExpression	close ( src_fd )		127796	0					
ANR	128495	Callee	close		127796	0					
ANR	128496	Identifier	close		127796	0					
ANR	128497	ArgumentList	src_fd		127796	1					
ANR	128498	Argument	src_fd		127796	0					
ANR	128499	Identifier	src_fd		127796	0					
ANR	128500	GotoStatement	goto CLEAN_UP ;	820:8:23953:23966	127796	2	True				
ANR	128501	Identifier	CLEAN_UP		127796	0					
ANR	128502	ExpressionStatement	close ( src_fd )	822:4:23978:23991	127796	44	True				
ANR	128503	CallExpression	close ( src_fd )		127796	0					
ANR	128504	Callee	close		127796	0					
ANR	128505	Identifier	close		127796	0					
ANR	128506	ArgumentList	src_fd		127796	1					
ANR	128507	Argument	src_fd		127796	0					
ANR	128508	Identifier	src_fd		127796	0					
ANR	128509	ExpressionStatement	ev_timer_again ( EV_A_ & remote_ctx -> watcher )	837:4:24314:24357	127796	45	True				
ANR	128510	CallExpression	ev_timer_again ( EV_A_ & remote_ctx -> watcher )		127796	0					
ANR	128511	Callee	ev_timer_again		127796	0					
ANR	128512	Identifier	ev_timer_again		127796	0					
ANR	128513	ArgumentList	EV_A_ & remote_ctx -> watcher		127796	1					
ANR	128514	Argument	EV_A_ & remote_ctx -> watcher		127796	0					
ANR	128515	BitAndExpression	EV_A_ & remote_ctx -> watcher		127796	0		&			
ANR	128516	Identifier	EV_A_		127796	0					
ANR	128517	PtrMemberAccess	remote_ctx -> watcher		127796	1					
ANR	128518	Identifier	remote_ctx		127796	0					
ANR	128519	Identifier	watcher		127796	1					
ANR	128520	Label	CLEAN_UP :	839:0:24360:24368	127796	46	True				
ANR	128521	Identifier	CLEAN_UP		127796	0					
ANR	128522	ExpressionStatement	bfree ( buf )	841:4:24375:24385	127796	47	True				
ANR	128523	CallExpression	bfree ( buf )		127796	0					
ANR	128524	Callee	bfree		127796	0					
ANR	128525	Identifier	bfree		127796	0					
ANR	128526	ArgumentList	buf		127796	1					
ANR	128527	Argument	buf		127796	0					
ANR	128528	Identifier	buf		127796	0					
ANR	128529	ExpressionStatement	ss_free ( buf )	842:4:24391:24403	127796	48	True				
ANR	128530	CallExpression	ss_free ( buf )		127796	0					
ANR	128531	Callee	ss_free		127796	0					
ANR	128532	Identifier	ss_free		127796	0					
ANR	128533	ArgumentList	buf		127796	1					
ANR	128534	Argument	buf		127796	0					
ANR	128535	Identifier	buf		127796	0					
ANR	128536	ReturnType	static void		127796	1					
ANR	128537	Identifier	remote_recv_cb		127796	2					
ANR	128538	ParameterList	"EV_P_ ev_io * w , int revents"		127796	3					
ANR	128539	Parameter	EV_P_ ev_io * w	669:15:19693:19706	127796	0	True				
ANR	128540	ParameterType	EV_P_ ev_io *		127796	0					
ANR	128541	Identifier	w		127796	1					
ANR	128542	Parameter	int revents	669:31:19709:19719	127796	1	True				
ANR	128543	ParameterType	int		127796	0					
ANR	128544	Identifier	revents		127796	1					
ANR	128545	CFGEntryNode	ENTRY		127796		True				
ANR	128546	CFGExitNode	EXIT		127796		True				
ANR	128547	Symbol	server_ctx -> crypto -> encrypt_all		127796						
ANR	128548	Symbol	sendto		127796						
ANR	128549	Symbol	server_ctx		127796						
ANR	128550	Symbol	revents		127796						
ANR	128551	Symbol	IP_TOS		127796						
ANR	128552	Symbol	* server_ctx		127796						
ANR	128553	Symbol	src_addr_len		127796						
ANR	128554	Symbol	remote_ctx -> addr_header_len		127796						
ANR	128555	Symbol	remote_ctx -> watcher		127796						
ANR	128556	Symbol	bind		127796						
ANR	128557	Symbol	len		127796						
ANR	128558	Symbol	IP_TRANSPARENT		127796						
ANR	128559	Symbol	dst_addr		127796						
ANR	128560	Symbol	& opt		127796						
ANR	128561	Symbol	server_ctx -> crypto -> cipher		127796						
ANR	128562	Symbol	IPPROTO_IP		127796						
ANR	128563	Symbol	* buf		127796						
ANR	128564	Symbol	NULL		127796						
ANR	128565	Symbol	addr_header_len		127796						
ANR	128566	Symbol	& remote_ctx -> src_addr		127796						
ANR	128567	Symbol	buf_size		127796						
ANR	128568	Symbol	server_ctx -> crypto -> decrypt_all		127796						
ANR	128569	Symbol	recvfrom		127796						
ANR	128570	Symbol	SO_REUSEADDR		127796						
ANR	128571	Symbol	AF_INET		127796						
ANR	128572	Symbol	SOCK_DGRAM		127796						
ANR	128573	Symbol	buf -> data		127796						
ANR	128574	Symbol	* server_ctx -> crypto		127796						
ANR	128575	Symbol	opt		127796						
ANR	128576	Symbol	* remote_ctx		127796						
ANR	128577	Symbol	remote_ctx		127796						
ANR	128578	Symbol	* * server_ctx		127796						
ANR	128579	Symbol	remote_ctx -> fd		127796						
ANR	128580	Symbol	remote_ctx -> src_addr . ss_family		127796						
ANR	128581	Symbol	rx		127796						
ANR	128582	Symbol	SOL_IP		127796						
ANR	128583	Symbol	server_ctx -> crypto		127796						
ANR	128584	Symbol	src_fd		127796						
ANR	128585	Symbol	setsockopt		127796						
ANR	128586	Symbol	remote_src_addr_len		127796						
ANR	128587	Symbol	buf -> len		127796						
ANR	128588	Symbol	& dst_addr		127796						
ANR	128589	Symbol	tos		127796						
ANR	128590	Symbol	& src_addr		127796						
ANR	128591	Symbol	err		127796						
ANR	128592	Symbol	get_sockaddr_len		127796						
ANR	128593	Symbol	addr_header		127796						
ANR	128594	Symbol	remote_ctx -> addr_header		127796						
ANR	128595	Symbol	remote_dst_addr_len		127796						
ANR	128596	Symbol	src_addr		127796						
ANR	128597	Symbol	& src_addr_len		127796						
ANR	128598	Symbol	parse_udprelay_header		127796						
ANR	128599	Symbol	AF_INET6		127796						
ANR	128600	Symbol	remote_ctx -> server_ctx		127796						
ANR	128601	Symbol	verbose		127796						
ANR	128602	Symbol	SOL_SOCKET		127796						
ANR	128603	Symbol	remote_ctx -> src_addr		127796						
ANR	128604	Symbol	r		127796						
ANR	128605	Symbol	buf		127796						
ANR	128606	Symbol	s		127796						
ANR	128607	Symbol	packet_size		127796						
ANR	128608	Symbol	w		127796						
ANR	128609	Symbol	dst_addr . ss_family		127796						
ANR	128610	Symbol	EV_A_		127796						
ANR	128611	Symbol	ss_malloc		127796						
ANR	128612	Symbol	& tos		127796						
ANR	128613	Symbol	socket		127796						
ANR	128614	Function	server_recv_cb	845:0:24408:39304							
ANR	128615	FunctionDef	"server_recv_cb (EV_P_ ev_io * w , int revents)"		128614	0					
ANR	128616	CompoundStatement		847:0:24464:39304	128614	0					
ANR	128617	IdentifierDeclStatement	server_ctx_t * server_ctx = ( server_ctx_t * ) w ;	848:4:24470:24514	128614	0	True				
ANR	128618	IdentifierDecl	* server_ctx = ( server_ctx_t * ) w		128614	0					
ANR	128619	IdentifierDeclType	server_ctx_t *		128614	0					
ANR	128620	Identifier	server_ctx		128614	1					
ANR	128621	AssignmentExpression	* server_ctx = ( server_ctx_t * ) w		128614	2		=			
ANR	128622	Identifier	server_ctx		128614	0					
ANR	128623	CastExpression	( server_ctx_t * ) w		128614	1					
ANR	128624	CastTarget	server_ctx_t *		128614	0					
ANR	128625	Identifier	w		128614	1					
ANR	128626	IdentifierDeclStatement	struct sockaddr_storage src_addr ;	849:4:24520:24552	128614	1	True				
ANR	128627	IdentifierDecl	src_addr		128614	0					
ANR	128628	IdentifierDeclType	struct sockaddr_storage		128614	0					
ANR	128629	Identifier	src_addr		128614	1					
ANR	128630	ExpressionStatement	"memset ( & src_addr , 0 , sizeof ( struct sockaddr_storage ) )"	850:4:24558:24611	128614	2	True				
ANR	128631	CallExpression	"memset ( & src_addr , 0 , sizeof ( struct sockaddr_storage ) )"		128614	0					
ANR	128632	Callee	memset		128614	0					
ANR	128633	Identifier	memset		128614	0					
ANR	128634	ArgumentList	& src_addr		128614	1					
ANR	128635	Argument	& src_addr		128614	0					
ANR	128636	UnaryOperationExpression	& src_addr		128614	0					
ANR	128637	UnaryOperator	&		128614	0					
ANR	128638	Identifier	src_addr		128614	1					
ANR	128639	Argument	0		128614	1					
ANR	128640	PrimaryExpression	0		128614	0					
ANR	128641	Argument	sizeof ( struct sockaddr_storage )		128614	2					
ANR	128642	SizeofExpression	sizeof ( struct sockaddr_storage )		128614	0					
ANR	128643	Sizeof	sizeof		128614	0					
ANR	128644	SizeofOperand	struct sockaddr_storage		128614	1					
ANR	128645	IdentifierDeclStatement	buffer_t * buf = ss_malloc ( sizeof ( buffer_t ) ) ;	852:4:24618:24661	128614	3	True				
ANR	128646	IdentifierDecl	* buf = ss_malloc ( sizeof ( buffer_t ) )		128614	0					
ANR	128647	IdentifierDeclType	buffer_t *		128614	0					
ANR	128648	Identifier	buf		128614	1					
ANR	128649	AssignmentExpression	* buf = ss_malloc ( sizeof ( buffer_t ) )		128614	2		=			
ANR	128650	Identifier	buf		128614	0					
ANR	128651	CallExpression	ss_malloc ( sizeof ( buffer_t ) )		128614	1					
ANR	128652	Callee	ss_malloc		128614	0					
ANR	128653	Identifier	ss_malloc		128614	0					
ANR	128654	ArgumentList	sizeof ( buffer_t )		128614	1					
ANR	128655	Argument	sizeof ( buffer_t )		128614	0					
ANR	128656	SizeofExpression	sizeof ( buffer_t )		128614	0					
ANR	128657	Sizeof	sizeof		128614	0					
ANR	128658	SizeofOperand	buffer_t		128614	1					
ANR	128659	ExpressionStatement	"balloc ( buf , buf_size )"	853:4:24667:24688	128614	4	True				
ANR	128660	CallExpression	"balloc ( buf , buf_size )"		128614	0					
ANR	128661	Callee	balloc		128614	0					
ANR	128662	Identifier	balloc		128614	0					
ANR	128663	ArgumentList	buf		128614	1					
ANR	128664	Argument	buf		128614	0					
ANR	128665	Identifier	buf		128614	0					
ANR	128666	Argument	buf_size		128614	1					
ANR	128667	Identifier	buf_size		128614	0					
ANR	128668	IdentifierDeclStatement	socklen_t src_addr_len = sizeof ( struct sockaddr_storage ) ;	855:4:24695:24751	128614	5	True				
ANR	128669	IdentifierDecl	src_addr_len = sizeof ( struct sockaddr_storage )		128614	0					
ANR	128670	IdentifierDeclType	socklen_t		128614	0					
ANR	128671	Identifier	src_addr_len		128614	1					
ANR	128672	AssignmentExpression	src_addr_len = sizeof ( struct sockaddr_storage )		128614	2		=			
ANR	128673	Identifier	src_addr_len		128614	0					
ANR	128674	SizeofExpression	sizeof ( struct sockaddr_storage )		128614	1					
ANR	128675	Sizeof	sizeof		128614	0					
ANR	128676	SizeofOperand	struct sockaddr_storage		128614	1					
ANR	128677	IdentifierDeclStatement	unsigned int offset = 0 ;	856:4:24757:24783	128614	6	True				
ANR	128678	IdentifierDecl	offset = 0		128614	0					
ANR	128679	IdentifierDeclType	unsigned int		128614	0					
ANR	128680	Identifier	offset		128614	1					
ANR	128681	AssignmentExpression	offset = 0		128614	2		=			
ANR	128682	Identifier	offset		128614	0					
ANR	128683	PrimaryExpression	0		128614	1					
ANR	128684	IdentifierDeclStatement	char control_buffer [ 64 ] = { 0 } ;	859:4:24810:24841	128614	7	True				
ANR	128685	IdentifierDecl	control_buffer [ 64 ] = { 0 }		128614	0					
ANR	128686	IdentifierDeclType	char [ 64 ]		128614	0					
ANR	128687	Identifier	control_buffer		128614	1					
ANR	128688	PrimaryExpression	64		128614	2					
ANR	128689	AssignmentExpression	control_buffer [ 64 ] = { 0 }		128614	3		=			
ANR	128690	Identifier	control_buffer		128614	0					
ANR	128691	InitializerList	0		128614	1					
ANR	128692	PrimaryExpression	0		128614	0					
ANR	128693	IdentifierDeclStatement	struct msghdr msg ;	860:4:24847:24864	128614	8	True				
ANR	128694	IdentifierDecl	msg		128614	0					
ANR	128695	IdentifierDeclType	struct msghdr		128614	0					
ANR	128696	Identifier	msg		128614	1					
ANR	128697	ExpressionStatement	"memset ( & msg , 0 , sizeof ( struct msghdr ) )"	861:4:24870:24908	128614	9	True				
ANR	128698	CallExpression	"memset ( & msg , 0 , sizeof ( struct msghdr ) )"		128614	0					
ANR	128699	Callee	memset		128614	0					
ANR	128700	Identifier	memset		128614	0					
ANR	128701	ArgumentList	& msg		128614	1					
ANR	128702	Argument	& msg		128614	0					
ANR	128703	UnaryOperationExpression	& msg		128614	0					
ANR	128704	UnaryOperator	&		128614	0					
ANR	128705	Identifier	msg		128614	1					
ANR	128706	Argument	0		128614	1					
ANR	128707	PrimaryExpression	0		128614	0					
ANR	128708	Argument	sizeof ( struct msghdr )		128614	2					
ANR	128709	SizeofExpression	sizeof ( struct msghdr )		128614	0					
ANR	128710	Sizeof	sizeof		128614	0					
ANR	128711	SizeofOperand	struct msghdr		128614	1					
ANR	128712	IdentifierDeclStatement	struct iovec iov [ 1 ] ;	862:4:24914:24933	128614	10	True				
ANR	128713	IdentifierDecl	iov [ 1 ]		128614	0					
ANR	128714	IdentifierDeclType	struct iovec [ 1 ]		128614	0					
ANR	128715	Identifier	iov		128614	1					
ANR	128716	PrimaryExpression	1		128614	2					
ANR	128717	IdentifierDeclStatement	struct sockaddr_storage dst_addr ;	863:4:24939:24971	128614	11	True				
ANR	128718	IdentifierDecl	dst_addr		128614	0					
ANR	128719	IdentifierDeclType	struct sockaddr_storage		128614	0					
ANR	128720	Identifier	dst_addr		128614	1					
ANR	128721	ExpressionStatement	"memset ( & dst_addr , 0 , sizeof ( struct sockaddr_storage ) )"	864:4:24977:25030	128614	12	True				
ANR	128722	CallExpression	"memset ( & dst_addr , 0 , sizeof ( struct sockaddr_storage ) )"		128614	0					
ANR	128723	Callee	memset		128614	0					
ANR	128724	Identifier	memset		128614	0					
ANR	128725	ArgumentList	& dst_addr		128614	1					
ANR	128726	Argument	& dst_addr		128614	0					
ANR	128727	UnaryOperationExpression	& dst_addr		128614	0					
ANR	128728	UnaryOperator	&		128614	0					
ANR	128729	Identifier	dst_addr		128614	1					
ANR	128730	Argument	0		128614	1					
ANR	128731	PrimaryExpression	0		128614	0					
ANR	128732	Argument	sizeof ( struct sockaddr_storage )		128614	2					
ANR	128733	SizeofExpression	sizeof ( struct sockaddr_storage )		128614	0					
ANR	128734	Sizeof	sizeof		128614	0					
ANR	128735	SizeofOperand	struct sockaddr_storage		128614	1					
ANR	128736	ExpressionStatement	msg . msg_name = & src_addr	866:4:25037:25067	128614	13	True				
ANR	128737	AssignmentExpression	msg . msg_name = & src_addr		128614	0		=			
ANR	128738	MemberAccess	msg . msg_name		128614	0					
ANR	128739	Identifier	msg		128614	0					
ANR	128740	Identifier	msg_name		128614	1					
ANR	128741	UnaryOperationExpression	& src_addr		128614	1					
ANR	128742	UnaryOperator	&		128614	0					
ANR	128743	Identifier	src_addr		128614	1					
ANR	128744	ExpressionStatement	msg . msg_namelen = src_addr_len	867:4:25073:25106	128614	14	True				
ANR	128745	AssignmentExpression	msg . msg_namelen = src_addr_len		128614	0		=			
ANR	128746	MemberAccess	msg . msg_namelen		128614	0					
ANR	128747	Identifier	msg		128614	0					
ANR	128748	Identifier	msg_namelen		128614	1					
ANR	128749	Identifier	src_addr_len		128614	1					
ANR	128750	ExpressionStatement	msg . msg_control = control_buffer	868:4:25112:25147	128614	15	True				
ANR	128751	AssignmentExpression	msg . msg_control = control_buffer		128614	0		=			
ANR	128752	MemberAccess	msg . msg_control		128614	0					
ANR	128753	Identifier	msg		128614	0					
ANR	128754	Identifier	msg_control		128614	1					
ANR	128755	Identifier	control_buffer		128614	1					
ANR	128756	ExpressionStatement	msg . msg_controllen = sizeof ( control_buffer )	869:4:25153:25196	128614	16	True				
ANR	128757	AssignmentExpression	msg . msg_controllen = sizeof ( control_buffer )		128614	0		=			
ANR	128758	MemberAccess	msg . msg_controllen		128614	0					
ANR	128759	Identifier	msg		128614	0					
ANR	128760	Identifier	msg_controllen		128614	1					
ANR	128761	SizeofExpression	sizeof ( control_buffer )		128614	1					
ANR	128762	Sizeof	sizeof		128614	0					
ANR	128763	SizeofOperand	control_buffer		128614	1					
ANR	128764	ExpressionStatement	iov [ 0 ] . iov_base = buf -> data	871:4:25203:25230	128614	17	True				
ANR	128765	AssignmentExpression	iov [ 0 ] . iov_base = buf -> data		128614	0		=			
ANR	128766	MemberAccess	iov [ 0 ] . iov_base		128614	0					
ANR	128767	ArrayIndexing	iov [ 0 ]		128614	0					
ANR	128768	Identifier	iov		128614	0					
ANR	128769	PrimaryExpression	0		128614	1					
ANR	128770	Identifier	iov_base		128614	1					
ANR	128771	PtrMemberAccess	buf -> data		128614	1					
ANR	128772	Identifier	buf		128614	0					
ANR	128773	Identifier	data		128614	1					
ANR	128774	ExpressionStatement	iov [ 0 ] . iov_len = buf_size	872:4:25236:25262	128614	18	True				
ANR	128775	AssignmentExpression	iov [ 0 ] . iov_len = buf_size		128614	0		=			
ANR	128776	MemberAccess	iov [ 0 ] . iov_len		128614	0					
ANR	128777	ArrayIndexing	iov [ 0 ]		128614	0					
ANR	128778	Identifier	iov		128614	0					
ANR	128779	PrimaryExpression	0		128614	1					
ANR	128780	Identifier	iov_len		128614	1					
ANR	128781	Identifier	buf_size		128614	1					
ANR	128782	ExpressionStatement	msg . msg_iov = iov	873:4:25268:25289	128614	19	True				
ANR	128783	AssignmentExpression	msg . msg_iov = iov		128614	0		=			
ANR	128784	MemberAccess	msg . msg_iov		128614	0					
ANR	128785	Identifier	msg		128614	0					
ANR	128786	Identifier	msg_iov		128614	1					
ANR	128787	Identifier	iov		128614	1					
ANR	128788	ExpressionStatement	msg . msg_iovlen = 1	874:4:25295:25314	128614	20	True				
ANR	128789	AssignmentExpression	msg . msg_iovlen = 1		128614	0		=			
ANR	128790	MemberAccess	msg . msg_iovlen		128614	0					
ANR	128791	Identifier	msg		128614	0					
ANR	128792	Identifier	msg_iovlen		128614	1					
ANR	128793	PrimaryExpression	1		128614	1					
ANR	128794	ExpressionStatement	"buf -> len = recvmsg ( server_ctx -> fd , & msg , 0 )"	876:4:25321:25364	128614	21	True				
ANR	128795	AssignmentExpression	"buf -> len = recvmsg ( server_ctx -> fd , & msg , 0 )"		128614	0		=			
ANR	128796	PtrMemberAccess	buf -> len		128614	0					
ANR	128797	Identifier	buf		128614	0					
ANR	128798	Identifier	len		128614	1					
ANR	128799	CallExpression	"recvmsg ( server_ctx -> fd , & msg , 0 )"		128614	1					
ANR	128800	Callee	recvmsg		128614	0					
ANR	128801	Identifier	recvmsg		128614	0					
ANR	128802	ArgumentList	server_ctx -> fd		128614	1					
ANR	128803	Argument	server_ctx -> fd		128614	0					
ANR	128804	PtrMemberAccess	server_ctx -> fd		128614	0					
ANR	128805	Identifier	server_ctx		128614	0					
ANR	128806	Identifier	fd		128614	1					
ANR	128807	Argument	& msg		128614	1					
ANR	128808	UnaryOperationExpression	& msg		128614	0					
ANR	128809	UnaryOperator	&		128614	0					
ANR	128810	Identifier	msg		128614	1					
ANR	128811	Argument	0		128614	2					
ANR	128812	PrimaryExpression	0		128614	0					
ANR	128813	IfStatement	if ( buf -> len == - 1 )		128614	22					
ANR	128814	Condition	buf -> len == - 1	877:8:25374:25387	128614	0	True				
ANR	128815	EqualityExpression	buf -> len == - 1		128614	0		==			
ANR	128816	PtrMemberAccess	buf -> len		128614	0					
ANR	128817	Identifier	buf		128614	0					
ANR	128818	Identifier	len		128614	1					
ANR	128819	UnaryOperationExpression	- 1		128614	1					
ANR	128820	UnaryOperator	-		128614	0					
ANR	128821	PrimaryExpression	1		128614	1					
ANR	128822	CompoundStatement		31:24:925:925	128614	1					
ANR	128823	ExpressionStatement	"ERROR ( ""[udp] server_recvmsg"" )"	878:8:25400:25429	128614	0	True				
ANR	128824	CallExpression	"ERROR ( ""[udp] server_recvmsg"" )"		128614	0					
ANR	128825	Callee	ERROR		128614	0					
ANR	128826	Identifier	ERROR		128614	0					
ANR	128827	ArgumentList	"""[udp] server_recvmsg"""		128614	1					
ANR	128828	Argument	"""[udp] server_recvmsg"""		128614	0					
ANR	128829	PrimaryExpression	"""[udp] server_recvmsg"""		128614	0					
ANR	128830	GotoStatement	goto CLEAN_UP ;	879:8:25439:25452	128614	1	True				
ANR	128831	Identifier	CLEAN_UP		128614	0					
ANR	128832	ElseStatement	else		128614	0					
ANR	128833	IfStatement	if ( buf -> len > packet_size )		128614	0					
ANR	128834	Condition	buf -> len > packet_size	880:15:25469:25490	128614	0	True				
ANR	128835	RelationalExpression	buf -> len > packet_size		128614	0		>			
ANR	128836	PtrMemberAccess	buf -> len		128614	0					
ANR	128837	Identifier	buf		128614	0					
ANR	128838	Identifier	len		128614	1					
ANR	128839	Identifier	packet_size		128614	1					
ANR	128840	CompoundStatement		34:39:1028:1028	128614	1					
ANR	128841	IfStatement	if ( verbose )		128614	0					
ANR	128842	Condition	verbose	881:12:25507:25513	128614	0	True				
ANR	128843	Identifier	verbose		128614	0					
ANR	128844	CompoundStatement		35:21:1051:1051	128614	1					
ANR	128845	ExpressionStatement	"LOGI ( ""[udp] UDP server_recv_recvmsg fragmentation"" )"	882:12:25530:25581	128614	0	True				
ANR	128846	CallExpression	"LOGI ( ""[udp] UDP server_recv_recvmsg fragmentation"" )"		128614	0					
ANR	128847	Callee	LOGI		128614	0					
ANR	128848	Identifier	LOGI		128614	0					
ANR	128849	ArgumentList	"""[udp] UDP server_recv_recvmsg fragmentation"""		128614	1					
ANR	128850	Argument	"""[udp] UDP server_recv_recvmsg fragmentation"""		128614	0					
ANR	128851	PrimaryExpression	"""[udp] UDP server_recv_recvmsg fragmentation"""		128614	0					
ANR	128852	IfStatement	"if ( get_dstaddr ( & msg , & dst_addr ) )"		128614	23					
ANR	128853	Condition	"get_dstaddr ( & msg , & dst_addr )"	886:8:25608:25635	128614	0	True				
ANR	128854	CallExpression	"get_dstaddr ( & msg , & dst_addr )"		128614	0					
ANR	128855	Callee	get_dstaddr		128614	0					
ANR	128856	Identifier	get_dstaddr		128614	0					
ANR	128857	ArgumentList	& msg		128614	1					
ANR	128858	Argument	& msg		128614	0					
ANR	128859	UnaryOperationExpression	& msg		128614	0					
ANR	128860	UnaryOperator	&		128614	0					
ANR	128861	Identifier	msg		128614	1					
ANR	128862	Argument	& dst_addr		128614	1					
ANR	128863	UnaryOperationExpression	& dst_addr		128614	0					
ANR	128864	UnaryOperator	&		128614	0					
ANR	128865	Identifier	dst_addr		128614	1					
ANR	128866	CompoundStatement		40:38:1173:1173	128614	1					
ANR	128867	ExpressionStatement	"LOGE ( ""[udp] unable to get dest addr"" )"	887:8:25648:25685	128614	0	True				
ANR	128868	CallExpression	"LOGE ( ""[udp] unable to get dest addr"" )"		128614	0					
ANR	128869	Callee	LOGE		128614	0					
ANR	128870	Identifier	LOGE		128614	0					
ANR	128871	ArgumentList	"""[udp] unable to get dest addr"""		128614	1					
ANR	128872	Argument	"""[udp] unable to get dest addr"""		128614	0					
ANR	128873	PrimaryExpression	"""[udp] unable to get dest addr"""		128614	0					
ANR	128874	GotoStatement	goto CLEAN_UP ;	888:8:25695:25708	128614	1	True				
ANR	128875	Identifier	CLEAN_UP		128614	0					
ANR	128876	ExpressionStatement	src_addr_len = msg . msg_namelen	891:4:25721:25751	128614	24	True				
ANR	128877	AssignmentExpression	src_addr_len = msg . msg_namelen		128614	0		=			
ANR	128878	Identifier	src_addr_len		128614	0					
ANR	128879	MemberAccess	msg . msg_namelen		128614	1					
ANR	128880	Identifier	msg		128614	0					
ANR	128881	Identifier	msg_namelen		128614	1					
ANR	128882	IfStatement	if ( verbose )		128614	25					
ANR	128883	Condition	verbose	911:8:26212:26218	128614	0	True				
ANR	128884	Identifier	verbose		128614	0					
ANR	128885	CompoundStatement		65:17:1756:1756	128614	1					
ANR	128886	ExpressionStatement	"LOGI ( ""[udp] server receive a packet"" )"	912:8:26231:26268	128614	0	True				
ANR	128887	CallExpression	"LOGI ( ""[udp] server receive a packet"" )"		128614	0					
ANR	128888	Callee	LOGI		128614	0					
ANR	128889	Identifier	LOGI		128614	0					
ANR	128890	ArgumentList	"""[udp] server receive a packet"""		128614	1					
ANR	128891	Argument	"""[udp] server receive a packet"""		128614	0					
ANR	128892	PrimaryExpression	"""[udp] server receive a packet"""		128614	0					
ANR	128893	ExpressionStatement	tx += buf -> len	916:4:26302:26316	128614	26	True				
ANR	128894	AssignmentExpression	tx += buf -> len		128614	0		+=			
ANR	128895	Identifier	tx		128614	0					
ANR	128896	PtrMemberAccess	buf -> len		128614	1					
ANR	128897	Identifier	buf		128614	0					
ANR	128898	Identifier	len		128614	1					
ANR	128899	IdentifierDeclStatement	"int err = server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size ) ;"	918:4:26323:26407	128614	27	True				
ANR	128900	IdentifierDecl	"err = server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		128614	0					
ANR	128901	IdentifierDeclType	int		128614	0					
ANR	128902	Identifier	err		128614	1					
ANR	128903	AssignmentExpression	"err = server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		128614	2		=			
ANR	128904	Identifier	err		128614	0					
ANR	128905	CallExpression	"server_ctx -> crypto -> decrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		128614	1					
ANR	128906	Callee	server_ctx -> crypto -> decrypt_all		128614	0					
ANR	128907	PtrMemberAccess	server_ctx -> crypto -> decrypt_all		128614	0					
ANR	128908	PtrMemberAccess	server_ctx -> crypto		128614	0					
ANR	128909	Identifier	server_ctx		128614	0					
ANR	128910	Identifier	crypto		128614	1					
ANR	128911	Identifier	decrypt_all		128614	1					
ANR	128912	ArgumentList	buf		128614	1					
ANR	128913	Argument	buf		128614	0					
ANR	128914	Identifier	buf		128614	0					
ANR	128915	Argument	server_ctx -> crypto -> cipher		128614	1					
ANR	128916	PtrMemberAccess	server_ctx -> crypto -> cipher		128614	0					
ANR	128917	PtrMemberAccess	server_ctx -> crypto		128614	0					
ANR	128918	Identifier	server_ctx		128614	0					
ANR	128919	Identifier	crypto		128614	1					
ANR	128920	Identifier	cipher		128614	1					
ANR	128921	Argument	buf_size		128614	2					
ANR	128922	Identifier	buf_size		128614	0					
ANR	128923	IfStatement	if ( err )		128614	28					
ANR	128924	Condition	err	919:8:26417:26419	128614	0	True				
ANR	128925	Identifier	err		128614	0					
ANR	128926	CompoundStatement		73:13:1957:1957	128614	1					
ANR	128927	GotoStatement	goto CLEAN_UP ;	921:8:26468:26481	128614	0	True				
ANR	128928	Identifier	CLEAN_UP		128614	0					
ANR	128929	ExpressionStatement	tx += buf -> len	928:4:26594:26608	128614	29	True				
ANR	128930	AssignmentExpression	tx += buf -> len		128614	0		+=			
ANR	128931	Identifier	tx		128614	0					
ANR	128932	PtrMemberAccess	buf -> len		128614	1					
ANR	128933	Identifier	buf		128614	0					
ANR	128934	Identifier	len		128614	1					
ANR	128935	IdentifierDeclStatement	uint8_t frag = * ( uint8_t * ) ( buf -> data + 2 ) ;	930:4:26621:26663	128614	30	True				
ANR	128936	IdentifierDecl	frag = * ( uint8_t * ) ( buf -> data + 2 )		128614	0					
ANR	128937	IdentifierDeclType	uint8_t		128614	0					
ANR	128938	Identifier	frag		128614	1					
ANR	128939	AssignmentExpression	frag = * ( uint8_t * ) ( buf -> data + 2 )		128614	2		=			
ANR	128940	Identifier	frag		128614	0					
ANR	128941	UnaryOperationExpression	* ( uint8_t * ) ( buf -> data + 2 )		128614	1					
ANR	128942	UnaryOperator	*		128614	0					
ANR	128943	CastExpression	( uint8_t * ) ( buf -> data + 2 )		128614	1					
ANR	128944	CastTarget	uint8_t *		128614	0					
ANR	128945	AdditiveExpression	buf -> data + 2		128614	1		+			
ANR	128946	PtrMemberAccess	buf -> data		128614	0					
ANR	128947	Identifier	buf		128614	0					
ANR	128948	Identifier	data		128614	1					
ANR	128949	PrimaryExpression	2		128614	1					
ANR	128950	ExpressionStatement	offset += 3	931:4:26669:26680	128614	31	True				
ANR	128951	AssignmentExpression	offset += 3		128614	0		+=			
ANR	128952	Identifier	offset		128614	0					
ANR	128953	PrimaryExpression	3		128614	1					
ANR	128954	IdentifierDeclStatement	char addr_header [ 512 ] = { 0 } ;	975:4:28255:28284	128614	32	True				
ANR	128955	IdentifierDecl	addr_header [ 512 ] = { 0 }		128614	0					
ANR	128956	IdentifierDeclType	char [ 512 ]		128614	0					
ANR	128957	Identifier	addr_header		128614	1					
ANR	128958	PrimaryExpression	512		128614	2					
ANR	128959	AssignmentExpression	addr_header [ 512 ] = { 0 }		128614	3		=			
ANR	128960	Identifier	addr_header		128614	0					
ANR	128961	InitializerList	0		128614	1					
ANR	128962	PrimaryExpression	0		128614	0					
ANR	128963	IdentifierDeclStatement	"int addr_header_len = construct_udprelay_header ( & dst_addr , addr_header ) ;"	976:4:28290:28363	128614	33	True				
ANR	128964	IdentifierDecl	"addr_header_len = construct_udprelay_header ( & dst_addr , addr_header )"		128614	0					
ANR	128965	IdentifierDeclType	int		128614	0					
ANR	128966	Identifier	addr_header_len		128614	1					
ANR	128967	AssignmentExpression	"addr_header_len = construct_udprelay_header ( & dst_addr , addr_header )"		128614	2		=			
ANR	128968	Identifier	addr_header_len		128614	0					
ANR	128969	CallExpression	"construct_udprelay_header ( & dst_addr , addr_header )"		128614	1					
ANR	128970	Callee	construct_udprelay_header		128614	0					
ANR	128971	Identifier	construct_udprelay_header		128614	0					
ANR	128972	ArgumentList	& dst_addr		128614	1					
ANR	128973	Argument	& dst_addr		128614	0					
ANR	128974	UnaryOperationExpression	& dst_addr		128614	0					
ANR	128975	UnaryOperator	&		128614	0					
ANR	128976	Identifier	dst_addr		128614	1					
ANR	128977	Argument	addr_header		128614	1					
ANR	128978	Identifier	addr_header		128614	0					
ANR	128979	IfStatement	if ( addr_header_len == 0 )		128614	34					
ANR	128980	Condition	addr_header_len == 0	978:8:28374:28393	128614	0	True				
ANR	128981	EqualityExpression	addr_header_len == 0		128614	0		==			
ANR	128982	Identifier	addr_header_len		128614	0					
ANR	128983	PrimaryExpression	0		128614	1					
ANR	128984	CompoundStatement		132:30:3931:3931	128614	1					
ANR	128985	ExpressionStatement	"LOGE ( ""[udp] failed to parse tproxy addr"" )"	979:8:28406:28447	128614	0	True				
ANR	128986	CallExpression	"LOGE ( ""[udp] failed to parse tproxy addr"" )"		128614	0					
ANR	128987	Callee	LOGE		128614	0					
ANR	128988	Identifier	LOGE		128614	0					
ANR	128989	ArgumentList	"""[udp] failed to parse tproxy addr"""		128614	1					
ANR	128990	Argument	"""[udp] failed to parse tproxy addr"""		128614	0					
ANR	128991	PrimaryExpression	"""[udp] failed to parse tproxy addr"""		128614	0					
ANR	128992	GotoStatement	goto CLEAN_UP ;	980:8:28457:28470	128614	1	True				
ANR	128993	Identifier	CLEAN_UP		128614	0					
ANR	128994	ExpressionStatement	"brealloc ( buf , buf -> len + addr_header_len , buf_size )"	984:4:28513:28564	128614	35	True				
ANR	128995	CallExpression	"brealloc ( buf , buf -> len + addr_header_len , buf_size )"		128614	0					
ANR	128996	Callee	brealloc		128614	0					
ANR	128997	Identifier	brealloc		128614	0					
ANR	128998	ArgumentList	buf		128614	1					
ANR	128999	Argument	buf		128614	0					
ANR	129000	Identifier	buf		128614	0					
ANR	129001	Argument	buf -> len + addr_header_len		128614	1					
ANR	129002	AdditiveExpression	buf -> len + addr_header_len		128614	0		+			
ANR	129003	PtrMemberAccess	buf -> len		128614	0					
ANR	129004	Identifier	buf		128614	0					
ANR	129005	Identifier	len		128614	1					
ANR	129006	Identifier	addr_header_len		128614	1					
ANR	129007	Argument	buf_size		128614	2					
ANR	129008	Identifier	buf_size		128614	0					
ANR	129009	ExpressionStatement	"memmove ( buf -> data + addr_header_len , buf -> data , buf -> len )"	985:4:28570:28627	128614	36	True				
ANR	129010	CallExpression	"memmove ( buf -> data + addr_header_len , buf -> data , buf -> len )"		128614	0					
ANR	129011	Callee	memmove		128614	0					
ANR	129012	Identifier	memmove		128614	0					
ANR	129013	ArgumentList	buf -> data + addr_header_len		128614	1					
ANR	129014	Argument	buf -> data + addr_header_len		128614	0					
ANR	129015	AdditiveExpression	buf -> data + addr_header_len		128614	0		+			
ANR	129016	PtrMemberAccess	buf -> data		128614	0					
ANR	129017	Identifier	buf		128614	0					
ANR	129018	Identifier	data		128614	1					
ANR	129019	Identifier	addr_header_len		128614	1					
ANR	129020	Argument	buf -> data		128614	1					
ANR	129021	PtrMemberAccess	buf -> data		128614	0					
ANR	129022	Identifier	buf		128614	0					
ANR	129023	Identifier	data		128614	1					
ANR	129024	Argument	buf -> len		128614	2					
ANR	129025	PtrMemberAccess	buf -> len		128614	0					
ANR	129026	Identifier	buf		128614	0					
ANR	129027	Identifier	len		128614	1					
ANR	129028	ExpressionStatement	"memcpy ( buf -> data , addr_header , addr_header_len )"	986:4:28633:28680	128614	37	True				
ANR	129029	CallExpression	"memcpy ( buf -> data , addr_header , addr_header_len )"		128614	0					
ANR	129030	Callee	memcpy		128614	0					
ANR	129031	Identifier	memcpy		128614	0					
ANR	129032	ArgumentList	buf -> data		128614	1					
ANR	129033	Argument	buf -> data		128614	0					
ANR	129034	PtrMemberAccess	buf -> data		128614	0					
ANR	129035	Identifier	buf		128614	0					
ANR	129036	Identifier	data		128614	1					
ANR	129037	Argument	addr_header		128614	1					
ANR	129038	Identifier	addr_header		128614	0					
ANR	129039	Argument	addr_header_len		128614	2					
ANR	129040	Identifier	addr_header_len		128614	0					
ANR	129041	ExpressionStatement	buf -> len += addr_header_len	987:4:28686:28713	128614	38	True				
ANR	129042	AssignmentExpression	buf -> len += addr_header_len		128614	0		+=			
ANR	129043	PtrMemberAccess	buf -> len		128614	0					
ANR	129044	Identifier	buf		128614	0					
ANR	129045	Identifier	len		128614	1					
ANR	129046	Identifier	addr_header_len		128614	1					
ANR	129047	IdentifierDeclStatement	"char * key = hash_key ( server_ctx -> remote_addr -> sa_family , & src_addr ) ;"	1063:4:31225:31292	128614	39	True				
ANR	129048	IdentifierDecl	"* key = hash_key ( server_ctx -> remote_addr -> sa_family , & src_addr )"		128614	0					
ANR	129049	IdentifierDeclType	char *		128614	0					
ANR	129050	Identifier	key		128614	1					
ANR	129051	AssignmentExpression	"* key = hash_key ( server_ctx -> remote_addr -> sa_family , & src_addr )"		128614	2		=			
ANR	129052	Identifier	key		128614	0					
ANR	129053	CallExpression	"hash_key ( server_ctx -> remote_addr -> sa_family , & src_addr )"		128614	1					
ANR	129054	Callee	hash_key		128614	0					
ANR	129055	Identifier	hash_key		128614	0					
ANR	129056	ArgumentList	server_ctx -> remote_addr -> sa_family		128614	1					
ANR	129057	Argument	server_ctx -> remote_addr -> sa_family		128614	0					
ANR	129058	PtrMemberAccess	server_ctx -> remote_addr -> sa_family		128614	0					
ANR	129059	PtrMemberAccess	server_ctx -> remote_addr		128614	0					
ANR	129060	Identifier	server_ctx		128614	0					
ANR	129061	Identifier	remote_addr		128614	1					
ANR	129062	Identifier	sa_family		128614	1					
ANR	129063	Argument	& src_addr		128614	1					
ANR	129064	UnaryOperationExpression	& src_addr		128614	0					
ANR	129065	UnaryOperator	&		128614	0					
ANR	129066	Identifier	src_addr		128614	1					
ANR	129067	IdentifierDeclStatement	struct cache * conn_cache = server_ctx -> conn_cache ;	1068:4:31369:31418	128614	40	True				
ANR	129068	IdentifierDecl	* conn_cache = server_ctx -> conn_cache		128614	0					
ANR	129069	IdentifierDeclType	struct cache *		128614	0					
ANR	129070	Identifier	conn_cache		128614	1					
ANR	129071	AssignmentExpression	* conn_cache = server_ctx -> conn_cache		128614	2		=			
ANR	129072	Identifier	conn_cache		128614	0					
ANR	129073	PtrMemberAccess	server_ctx -> conn_cache		128614	1					
ANR	129074	Identifier	server_ctx		128614	0					
ANR	129075	Identifier	conn_cache		128614	1					
ANR	129076	IdentifierDeclStatement	remote_ctx_t * remote_ctx = NULL ;	1070:4:31425:31456	128614	41	True				
ANR	129077	IdentifierDecl	* remote_ctx = NULL		128614	0					
ANR	129078	IdentifierDeclType	remote_ctx_t *		128614	0					
ANR	129079	Identifier	remote_ctx		128614	1					
ANR	129080	AssignmentExpression	* remote_ctx = NULL		128614	2		=			
ANR	129081	Identifier	NULL		128614	0					
ANR	129082	Identifier	NULL		128614	1					
ANR	129083	ExpressionStatement	"cache_lookup ( conn_cache , key , HASH_KEY_LEN , ( void * ) & remote_ctx )"	1071:4:31462:31526	128614	42	True				
ANR	129084	CallExpression	"cache_lookup ( conn_cache , key , HASH_KEY_LEN , ( void * ) & remote_ctx )"		128614	0					
ANR	129085	Callee	cache_lookup		128614	0					
ANR	129086	Identifier	cache_lookup		128614	0					
ANR	129087	ArgumentList	conn_cache		128614	1					
ANR	129088	Argument	conn_cache		128614	0					
ANR	129089	Identifier	conn_cache		128614	0					
ANR	129090	Argument	key		128614	1					
ANR	129091	Identifier	key		128614	0					
ANR	129092	Argument	HASH_KEY_LEN		128614	2					
ANR	129093	Identifier	HASH_KEY_LEN		128614	0					
ANR	129094	Argument	( void * ) & remote_ctx		128614	3					
ANR	129095	CastExpression	( void * ) & remote_ctx		128614	0					
ANR	129096	CastTarget	void *		128614	0					
ANR	129097	UnaryOperationExpression	& remote_ctx		128614	1					
ANR	129098	UnaryOperator	&		128614	0					
ANR	129099	Identifier	remote_ctx		128614	1					
ANR	129100	IfStatement	if ( remote_ctx != NULL )		128614	43					
ANR	129101	Condition	remote_ctx != NULL	1073:8:31537:31554	128614	0	True				
ANR	129102	EqualityExpression	remote_ctx != NULL		128614	0		!=			
ANR	129103	Identifier	remote_ctx		128614	0					
ANR	129104	Identifier	NULL		128614	1					
ANR	129105	CompoundStatement		227:28:7092:7092	128614	1					
ANR	129106	IfStatement	"if ( sockaddr_cmp ( & src_addr , & remote_ctx -> src_addr , sizeof ( src_addr ) ) )"		128614	0					
ANR	129107	Condition	"sockaddr_cmp ( & src_addr , & remote_ctx -> src_addr , sizeof ( src_addr ) )"	1074:12:31571:31634	128614	0	True				
ANR	129108	CallExpression	"sockaddr_cmp ( & src_addr , & remote_ctx -> src_addr , sizeof ( src_addr ) )"		128614	0					
ANR	129109	Callee	sockaddr_cmp		128614	0					
ANR	129110	Identifier	sockaddr_cmp		128614	0					
ANR	129111	ArgumentList	& src_addr		128614	1					
ANR	129112	Argument	& src_addr		128614	0					
ANR	129113	UnaryOperationExpression	& src_addr		128614	0					
ANR	129114	UnaryOperator	&		128614	0					
ANR	129115	Identifier	src_addr		128614	1					
ANR	129116	Argument	& remote_ctx -> src_addr		128614	1					
ANR	129117	UnaryOperationExpression	& remote_ctx -> src_addr		128614	0					
ANR	129118	UnaryOperator	&		128614	0					
ANR	129119	PtrMemberAccess	remote_ctx -> src_addr		128614	1					
ANR	129120	Identifier	remote_ctx		128614	0					
ANR	129121	Identifier	src_addr		128614	1					
ANR	129122	Argument	sizeof ( src_addr )		128614	2					
ANR	129123	SizeofExpression	sizeof ( src_addr )		128614	0					
ANR	129124	Sizeof	sizeof		128614	0					
ANR	129125	SizeofOperand	src_addr		128614	1					
ANR	129126	CompoundStatement		228:78:7172:7172	128614	1					
ANR	129127	ExpressionStatement	remote_ctx = NULL	1075:12:31651:31668	128614	0	True				
ANR	129128	AssignmentExpression	remote_ctx = NULL		128614	0		=			
ANR	129129	Identifier	remote_ctx		128614	0					
ANR	129130	Identifier	NULL		128614	1					
ANR	129131	IfStatement	if ( remote_ctx != NULL )		128614	44					
ANR	129132	Condition	remote_ctx != NULL	1080:8:31718:31735	128614	0	True				
ANR	129133	EqualityExpression	remote_ctx != NULL		128614	0		!=			
ANR	129134	Identifier	remote_ctx		128614	0					
ANR	129135	Identifier	NULL		128614	1					
ANR	129136	CompoundStatement		234:28:7273:7273	128614	1					
ANR	129137	ExpressionStatement	ev_timer_again ( EV_A_ & remote_ctx -> watcher )	1081:8:31748:31791	128614	0	True				
ANR	129138	CallExpression	ev_timer_again ( EV_A_ & remote_ctx -> watcher )		128614	0					
ANR	129139	Callee	ev_timer_again		128614	0					
ANR	129140	Identifier	ev_timer_again		128614	0					
ANR	129141	ArgumentList	EV_A_ & remote_ctx -> watcher		128614	1					
ANR	129142	Argument	EV_A_ & remote_ctx -> watcher		128614	0					
ANR	129143	BitAndExpression	EV_A_ & remote_ctx -> watcher		128614	0		&			
ANR	129144	Identifier	EV_A_		128614	0					
ANR	129145	PtrMemberAccess	remote_ctx -> watcher		128614	1					
ANR	129146	Identifier	remote_ctx		128614	0					
ANR	129147	Identifier	watcher		128614	1					
ANR	129148	IfStatement	if ( remote_ctx == NULL )		128614	45					
ANR	129149	Condition	remote_ctx == NULL	1084:8:31808:31825	128614	0	True				
ANR	129150	EqualityExpression	remote_ctx == NULL		128614	0		==			
ANR	129151	Identifier	remote_ctx		128614	0					
ANR	129152	Identifier	NULL		128614	1					
ANR	129153	CompoundStatement		238:28:7363:7363	128614	1					
ANR	129154	IfStatement	if ( verbose )		128614	0					
ANR	129155	Condition	verbose	1085:12:31842:31848	128614	0	True				
ANR	129156	Identifier	verbose		128614	0					
ANR	129157	CompoundStatement		242:12:7457:7480	128614	1					
ANR	129158	IdentifierDeclStatement	char src [ SS_ADDRSTRLEN ] ;	1087:12:31885:31908	128614	0	True				
ANR	129159	IdentifierDecl	src [ SS_ADDRSTRLEN ]		128614	0					
ANR	129160	IdentifierDeclType	char [ SS_ADDRSTRLEN ]		128614	0					
ANR	129161	Identifier	src		128614	1					
ANR	129162	Identifier	SS_ADDRSTRLEN		128614	2					
ANR	129163	IdentifierDeclStatement	char dst [ SS_ADDRSTRLEN ] ;	1088:12:31922:31945	128614	1	True				
ANR	129164	IdentifierDecl	dst [ SS_ADDRSTRLEN ]		128614	0					
ANR	129165	IdentifierDeclType	char [ SS_ADDRSTRLEN ]		128614	0					
ANR	129166	Identifier	dst		128614	1					
ANR	129167	Identifier	SS_ADDRSTRLEN		128614	2					
ANR	129168	ExpressionStatement	"strcpy ( src , get_addr_str ( ( struct sockaddr * ) & src_addr ) )"	1089:12:31959:32014	128614	2	True				
ANR	129169	CallExpression	"strcpy ( src , get_addr_str ( ( struct sockaddr * ) & src_addr ) )"		128614	0					
ANR	129170	Callee	strcpy		128614	0					
ANR	129171	Identifier	strcpy		128614	0					
ANR	129172	ArgumentList	src		128614	1					
ANR	129173	Argument	src		128614	0					
ANR	129174	Identifier	src		128614	0					
ANR	129175	Argument	get_addr_str ( ( struct sockaddr * ) & src_addr )		128614	1					
ANR	129176	CallExpression	get_addr_str ( ( struct sockaddr * ) & src_addr )		128614	0					
ANR	129177	Callee	get_addr_str		128614	0					
ANR	129178	Identifier	get_addr_str		128614	0					
ANR	129179	ArgumentList	( struct sockaddr * ) & src_addr		128614	1					
ANR	129180	Argument	( struct sockaddr * ) & src_addr		128614	0					
ANR	129181	CastExpression	( struct sockaddr * ) & src_addr		128614	0					
ANR	129182	CastTarget	struct sockaddr *		128614	0					
ANR	129183	UnaryOperationExpression	& src_addr		128614	1					
ANR	129184	UnaryOperator	&		128614	0					
ANR	129185	Identifier	src_addr		128614	1					
ANR	129186	ExpressionStatement	"strcpy ( dst , get_addr_str ( ( struct sockaddr * ) & dst_addr ) )"	1090:12:32028:32083	128614	3	True				
ANR	129187	CallExpression	"strcpy ( dst , get_addr_str ( ( struct sockaddr * ) & dst_addr ) )"		128614	0					
ANR	129188	Callee	strcpy		128614	0					
ANR	129189	Identifier	strcpy		128614	0					
ANR	129190	ArgumentList	dst		128614	1					
ANR	129191	Argument	dst		128614	0					
ANR	129192	Identifier	dst		128614	0					
ANR	129193	Argument	get_addr_str ( ( struct sockaddr * ) & dst_addr )		128614	1					
ANR	129194	CallExpression	get_addr_str ( ( struct sockaddr * ) & dst_addr )		128614	0					
ANR	129195	Callee	get_addr_str		128614	0					
ANR	129196	Identifier	get_addr_str		128614	0					
ANR	129197	ArgumentList	( struct sockaddr * ) & dst_addr		128614	1					
ANR	129198	Argument	( struct sockaddr * ) & dst_addr		128614	0					
ANR	129199	CastExpression	( struct sockaddr * ) & dst_addr		128614	0					
ANR	129200	CastTarget	struct sockaddr *		128614	0					
ANR	129201	UnaryOperationExpression	& dst_addr		128614	1					
ANR	129202	UnaryOperator	&		128614	0					
ANR	129203	Identifier	dst_addr		128614	1					
ANR	129204	ExpressionStatement	"LOGI ( ""[udp] cache miss: %s <-> %s"" , dst , src )"	1091:12:32097:32142	128614	4	True				
ANR	129205	CallExpression	"LOGI ( ""[udp] cache miss: %s <-> %s"" , dst , src )"		128614	0					
ANR	129206	Callee	LOGI		128614	0					
ANR	129207	Identifier	LOGI		128614	0					
ANR	129208	ArgumentList	"""[udp] cache miss: %s <-> %s"""		128614	1					
ANR	129209	Argument	"""[udp] cache miss: %s <-> %s"""		128614	0					
ANR	129210	PrimaryExpression	"""[udp] cache miss: %s <-> %s"""		128614	0					
ANR	129211	Argument	dst		128614	1					
ANR	129212	Identifier	dst		128614	0					
ANR	129213	Argument	src		128614	2					
ANR	129214	Identifier	src		128614	0					
ANR	129215	ElseStatement	else		128614	0					
ANR	129216	CompoundStatement		251:11:7838:7838	128614	0					
ANR	129217	IfStatement	if ( verbose )		128614	0					
ANR	129218	Condition	verbose	1098:12:32317:32323	128614	0	True				
ANR	129219	Identifier	verbose		128614	0					
ANR	129220	CompoundStatement		255:12:7932:7955	128614	1					
ANR	129221	IdentifierDeclStatement	char src [ SS_ADDRSTRLEN ] ;	1100:12:32360:32383	128614	0	True				
ANR	129222	IdentifierDecl	src [ SS_ADDRSTRLEN ]		128614	0					
ANR	129223	IdentifierDeclType	char [ SS_ADDRSTRLEN ]		128614	0					
ANR	129224	Identifier	src		128614	1					
ANR	129225	Identifier	SS_ADDRSTRLEN		128614	2					
ANR	129226	IdentifierDeclStatement	char dst [ SS_ADDRSTRLEN ] ;	1101:12:32397:32420	128614	1	True				
ANR	129227	IdentifierDecl	dst [ SS_ADDRSTRLEN ]		128614	0					
ANR	129228	IdentifierDeclType	char [ SS_ADDRSTRLEN ]		128614	0					
ANR	129229	Identifier	dst		128614	1					
ANR	129230	Identifier	SS_ADDRSTRLEN		128614	2					
ANR	129231	ExpressionStatement	"strcpy ( src , get_addr_str ( ( struct sockaddr * ) & src_addr ) )"	1102:12:32434:32489	128614	2	True				
ANR	129232	CallExpression	"strcpy ( src , get_addr_str ( ( struct sockaddr * ) & src_addr ) )"		128614	0					
ANR	129233	Callee	strcpy		128614	0					
ANR	129234	Identifier	strcpy		128614	0					
ANR	129235	ArgumentList	src		128614	1					
ANR	129236	Argument	src		128614	0					
ANR	129237	Identifier	src		128614	0					
ANR	129238	Argument	get_addr_str ( ( struct sockaddr * ) & src_addr )		128614	1					
ANR	129239	CallExpression	get_addr_str ( ( struct sockaddr * ) & src_addr )		128614	0					
ANR	129240	Callee	get_addr_str		128614	0					
ANR	129241	Identifier	get_addr_str		128614	0					
ANR	129242	ArgumentList	( struct sockaddr * ) & src_addr		128614	1					
ANR	129243	Argument	( struct sockaddr * ) & src_addr		128614	0					
ANR	129244	CastExpression	( struct sockaddr * ) & src_addr		128614	0					
ANR	129245	CastTarget	struct sockaddr *		128614	0					
ANR	129246	UnaryOperationExpression	& src_addr		128614	1					
ANR	129247	UnaryOperator	&		128614	0					
ANR	129248	Identifier	src_addr		128614	1					
ANR	129249	ExpressionStatement	"strcpy ( dst , get_addr_str ( ( struct sockaddr * ) & dst_addr ) )"	1103:12:32503:32558	128614	3	True				
ANR	129250	CallExpression	"strcpy ( dst , get_addr_str ( ( struct sockaddr * ) & dst_addr ) )"		128614	0					
ANR	129251	Callee	strcpy		128614	0					
ANR	129252	Identifier	strcpy		128614	0					
ANR	129253	ArgumentList	dst		128614	1					
ANR	129254	Argument	dst		128614	0					
ANR	129255	Identifier	dst		128614	0					
ANR	129256	Argument	get_addr_str ( ( struct sockaddr * ) & dst_addr )		128614	1					
ANR	129257	CallExpression	get_addr_str ( ( struct sockaddr * ) & dst_addr )		128614	0					
ANR	129258	Callee	get_addr_str		128614	0					
ANR	129259	Identifier	get_addr_str		128614	0					
ANR	129260	ArgumentList	( struct sockaddr * ) & dst_addr		128614	1					
ANR	129261	Argument	( struct sockaddr * ) & dst_addr		128614	0					
ANR	129262	CastExpression	( struct sockaddr * ) & dst_addr		128614	0					
ANR	129263	CastTarget	struct sockaddr *		128614	0					
ANR	129264	UnaryOperationExpression	& dst_addr		128614	1					
ANR	129265	UnaryOperator	&		128614	0					
ANR	129266	Identifier	dst_addr		128614	1					
ANR	129267	ExpressionStatement	"LOGI ( ""[udp] cache hit: %s <-> %s"" , dst , src )"	1104:12:32572:32616	128614	4	True				
ANR	129268	CallExpression	"LOGI ( ""[udp] cache hit: %s <-> %s"" , dst , src )"		128614	0					
ANR	129269	Callee	LOGI		128614	0					
ANR	129270	Identifier	LOGI		128614	0					
ANR	129271	ArgumentList	"""[udp] cache hit: %s <-> %s"""		128614	1					
ANR	129272	Argument	"""[udp] cache hit: %s <-> %s"""		128614	0					
ANR	129273	PrimaryExpression	"""[udp] cache hit: %s <-> %s"""		128614	0					
ANR	129274	Argument	dst		128614	1					
ANR	129275	Identifier	dst		128614	0					
ANR	129276	Argument	src		128614	2					
ANR	129277	Identifier	src		128614	0					
ANR	129278	IfStatement	if ( frag )		128614	46					
ANR	129279	Condition	frag	1115:8:32855:32858	128614	0	True				
ANR	129280	Identifier	frag		128614	0					
ANR	129281	CompoundStatement		269:14:8396:8396	128614	1					
ANR	129282	ExpressionStatement	"LOGE ( ""[udp] drop a message since frag is not 0, but %d"" , frag )"	1116:8:32871:32933	128614	0	True				
ANR	129283	CallExpression	"LOGE ( ""[udp] drop a message since frag is not 0, but %d"" , frag )"		128614	0					
ANR	129284	Callee	LOGE		128614	0					
ANR	129285	Identifier	LOGE		128614	0					
ANR	129286	ArgumentList	"""[udp] drop a message since frag is not 0, but %d"""		128614	1					
ANR	129287	Argument	"""[udp] drop a message since frag is not 0, but %d"""		128614	0					
ANR	129288	PrimaryExpression	"""[udp] drop a message since frag is not 0, but %d"""		128614	0					
ANR	129289	Argument	frag		128614	1					
ANR	129290	Identifier	frag		128614	0					
ANR	129291	GotoStatement	goto CLEAN_UP ;	1117:8:32943:32956	128614	1	True				
ANR	129292	Identifier	CLEAN_UP		128614	0					
ANR	129293	IdentifierDeclStatement	const struct sockaddr * remote_addr = server_ctx -> remote_addr ;	1121:4:32976:33036	128614	47	True				
ANR	129294	IdentifierDecl	* remote_addr = server_ctx -> remote_addr		128614	0					
ANR	129295	IdentifierDeclType	const struct sockaddr *		128614	0					
ANR	129296	Identifier	remote_addr		128614	1					
ANR	129297	AssignmentExpression	* remote_addr = server_ctx -> remote_addr		128614	2		=			
ANR	129298	Identifier	remote_addr		128614	0					
ANR	129299	PtrMemberAccess	server_ctx -> remote_addr		128614	1					
ANR	129300	Identifier	server_ctx		128614	0					
ANR	129301	Identifier	remote_addr		128614	1					
ANR	129302	IdentifierDeclStatement	const int remote_addr_len = server_ctx -> remote_addr_len ;	1122:4:33042:33106	128614	48	True				
ANR	129303	IdentifierDecl	remote_addr_len = server_ctx -> remote_addr_len		128614	0					
ANR	129304	IdentifierDeclType	const int		128614	0					
ANR	129305	Identifier	remote_addr_len		128614	1					
ANR	129306	AssignmentExpression	remote_addr_len = server_ctx -> remote_addr_len		128614	2		=			
ANR	129307	Identifier	remote_addr_len		128614	0					
ANR	129308	PtrMemberAccess	server_ctx -> remote_addr_len		128614	1					
ANR	129309	Identifier	server_ctx		128614	0					
ANR	129310	Identifier	remote_addr_len		128614	1					
ANR	129311	IfStatement	if ( remote_ctx == NULL )		128614	49					
ANR	129312	Condition	remote_ctx == NULL	1124:8:33117:33134	128614	0	True				
ANR	129313	EqualityExpression	remote_ctx == NULL		128614	0		==			
ANR	129314	Identifier	remote_ctx		128614	0					
ANR	129315	Identifier	NULL		128614	1					
ANR	129316	CompoundStatement		292:8:9039:9051	128614	1					
ANR	129317	IdentifierDeclStatement	int remotefd = create_remote_socket ( remote_addr -> sa_family == AF_INET6 ) ;	1126:8:33175:33246	128614	0	True				
ANR	129318	IdentifierDecl	remotefd = create_remote_socket ( remote_addr -> sa_family == AF_INET6 )		128614	0					
ANR	129319	IdentifierDeclType	int		128614	0					
ANR	129320	Identifier	remotefd		128614	1					
ANR	129321	AssignmentExpression	remotefd = create_remote_socket ( remote_addr -> sa_family == AF_INET6 )		128614	2		=			
ANR	129322	Identifier	remotefd		128614	0					
ANR	129323	CallExpression	create_remote_socket ( remote_addr -> sa_family == AF_INET6 )		128614	1					
ANR	129324	Callee	create_remote_socket		128614	0					
ANR	129325	Identifier	create_remote_socket		128614	0					
ANR	129326	ArgumentList	remote_addr -> sa_family == AF_INET6		128614	1					
ANR	129327	Argument	remote_addr -> sa_family == AF_INET6		128614	0					
ANR	129328	EqualityExpression	remote_addr -> sa_family == AF_INET6		128614	0		==			
ANR	129329	PtrMemberAccess	remote_addr -> sa_family		128614	0					
ANR	129330	Identifier	remote_addr		128614	0					
ANR	129331	Identifier	sa_family		128614	1					
ANR	129332	Identifier	AF_INET6		128614	1					
ANR	129333	IfStatement	if ( remotefd < 0 )		128614	1					
ANR	129334	Condition	remotefd < 0	1127:12:33260:33271	128614	0	True				
ANR	129335	RelationalExpression	remotefd < 0		128614	0		<			
ANR	129336	Identifier	remotefd		128614	0					
ANR	129337	PrimaryExpression	0		128614	1					
ANR	129338	CompoundStatement		281:26:8809:8809	128614	1					
ANR	129339	ExpressionStatement	"ERROR ( ""[udp] udprelay bind() error"" )"	1128:12:33288:33324	128614	0	True				
ANR	129340	CallExpression	"ERROR ( ""[udp] udprelay bind() error"" )"		128614	0					
ANR	129341	Callee	ERROR		128614	0					
ANR	129342	Identifier	ERROR		128614	0					
ANR	129343	ArgumentList	"""[udp] udprelay bind() error"""		128614	1					
ANR	129344	Argument	"""[udp] udprelay bind() error"""		128614	0					
ANR	129345	PrimaryExpression	"""[udp] udprelay bind() error"""		128614	0					
ANR	129346	GotoStatement	goto CLEAN_UP ;	1129:12:33338:33351	128614	1	True				
ANR	129347	Identifier	CLEAN_UP		128614	0					
ANR	129348	ExpressionStatement	setnonblocking ( remotefd )	1131:8:33371:33395	128614	2	True				
ANR	129349	CallExpression	setnonblocking ( remotefd )		128614	0					
ANR	129350	Callee	setnonblocking		128614	0					
ANR	129351	Identifier	setnonblocking		128614	0					
ANR	129352	ArgumentList	remotefd		128614	1					
ANR	129353	Argument	remotefd		128614	0					
ANR	129354	Identifier	remotefd		128614	0					
ANR	129355	ExpressionStatement	set_nosigpipe ( remotefd )	1134:8:33426:33449	128614	3	True				
ANR	129356	CallExpression	set_nosigpipe ( remotefd )		128614	0					
ANR	129357	Callee	set_nosigpipe		128614	0					
ANR	129358	Identifier	set_nosigpipe		128614	0					
ANR	129359	ArgumentList	remotefd		128614	1					
ANR	129360	Argument	remotefd		128614	0					
ANR	129361	Identifier	remotefd		128614	0					
ANR	129362	IdentifierDeclStatement	int tos = 46 ;	1138:8:33504:33516	128614	4	True				
ANR	129363	IdentifierDecl	tos = 46		128614	0					
ANR	129364	IdentifierDeclType	int		128614	0					
ANR	129365	Identifier	tos		128614	1					
ANR	129366	AssignmentExpression	tos = 46		128614	2		=			
ANR	129367	Identifier	tos		128614	0					
ANR	129368	PrimaryExpression	46		128614	1					
ANR	129369	ExpressionStatement	"setsockopt ( remotefd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"	1139:8:33526:33585	128614	5	True				
ANR	129370	CallExpression	"setsockopt ( remotefd , IPPROTO_IP , IP_TOS , & tos , sizeof ( tos ) )"		128614	0					
ANR	129371	Callee	setsockopt		128614	0					
ANR	129372	Identifier	setsockopt		128614	0					
ANR	129373	ArgumentList	remotefd		128614	1					
ANR	129374	Argument	remotefd		128614	0					
ANR	129375	Identifier	remotefd		128614	0					
ANR	129376	Argument	IPPROTO_IP		128614	1					
ANR	129377	Identifier	IPPROTO_IP		128614	0					
ANR	129378	Argument	IP_TOS		128614	2					
ANR	129379	Identifier	IP_TOS		128614	0					
ANR	129380	Argument	& tos		128614	3					
ANR	129381	UnaryOperationExpression	& tos		128614	0					
ANR	129382	UnaryOperator	&		128614	0					
ANR	129383	Identifier	tos		128614	1					
ANR	129384	Argument	sizeof ( tos )		128614	4					
ANR	129385	SizeofExpression	sizeof ( tos )		128614	0					
ANR	129386	Sizeof	sizeof		128614	0					
ANR	129387	SizeofOperand	tos		128614	1					
ANR	129388	IfStatement	if ( server_ctx -> iface )		128614	6					
ANR	129389	Condition	server_ctx -> iface	1142:12:33627:33643	128614	0	True				
ANR	129390	PtrMemberAccess	server_ctx -> iface		128614	0					
ANR	129391	Identifier	server_ctx		128614	0					
ANR	129392	Identifier	iface		128614	1					
ANR	129393	CompoundStatement		296:31:9181:9181	128614	1					
ANR	129394	IfStatement	"if ( setinterface ( remotefd , server_ctx -> iface ) == - 1 )"		128614	0					
ANR	129395	Condition	"setinterface ( remotefd , server_ctx -> iface ) == - 1"	1143:16:33664:33710	128614	0	True				
ANR	129396	EqualityExpression	"setinterface ( remotefd , server_ctx -> iface ) == - 1"		128614	0		==			
ANR	129397	CallExpression	"setinterface ( remotefd , server_ctx -> iface )"		128614	0					
ANR	129398	Callee	setinterface		128614	0					
ANR	129399	Identifier	setinterface		128614	0					
ANR	129400	ArgumentList	remotefd		128614	1					
ANR	129401	Argument	remotefd		128614	0					
ANR	129402	Identifier	remotefd		128614	0					
ANR	129403	Argument	server_ctx -> iface		128614	1					
ANR	129404	PtrMemberAccess	server_ctx -> iface		128614	0					
ANR	129405	Identifier	server_ctx		128614	0					
ANR	129406	Identifier	iface		128614	1					
ANR	129407	UnaryOperationExpression	- 1		128614	1					
ANR	129408	UnaryOperator	-		128614	0					
ANR	129409	PrimaryExpression	1		128614	1					
ANR	129410	ExpressionStatement	"ERROR ( ""setinterface"" )"	1144:16:33729:33750	128614	1	True				
ANR	129411	CallExpression	"ERROR ( ""setinterface"" )"		128614	0					
ANR	129412	Callee	ERROR		128614	0					
ANR	129413	Identifier	ERROR		128614	0					
ANR	129414	ArgumentList	"""setinterface"""		128614	1					
ANR	129415	Argument	"""setinterface"""		128614	0					
ANR	129416	PrimaryExpression	"""setinterface"""		128614	0					
ANR	129417	IfStatement	if ( vpn )		128614	7					
ANR	129418	Condition	vpn	1149:12:33801:33803	128614	0	True				
ANR	129419	Identifier	vpn		128614	0					
ANR	129420	CompoundStatement		303:17:9341:9341	128614	1					
ANR	129421	IfStatement	if ( protect_socket ( remotefd ) == - 1 )		128614	0					
ANR	129422	Condition	protect_socket ( remotefd ) == - 1	1150:16:33824:33853	128614	0	True				
ANR	129423	EqualityExpression	protect_socket ( remotefd ) == - 1		128614	0		==			
ANR	129424	CallExpression	protect_socket ( remotefd )		128614	0					
ANR	129425	Callee	protect_socket		128614	0					
ANR	129426	Identifier	protect_socket		128614	0					
ANR	129427	ArgumentList	remotefd		128614	1					
ANR	129428	Argument	remotefd		128614	0					
ANR	129429	Identifier	remotefd		128614	0					
ANR	129430	UnaryOperationExpression	- 1		128614	1					
ANR	129431	UnaryOperator	-		128614	0					
ANR	129432	PrimaryExpression	1		128614	1					
ANR	129433	CompoundStatement		304:48:9391:9391	128614	1					
ANR	129434	ExpressionStatement	"ERROR ( ""protect_socket"" )"	1151:16:33874:33897	128614	0	True				
ANR	129435	CallExpression	"ERROR ( ""protect_socket"" )"		128614	0					
ANR	129436	Callee	ERROR		128614	0					
ANR	129437	Identifier	ERROR		128614	0					
ANR	129438	ArgumentList	"""protect_socket"""		128614	1					
ANR	129439	Argument	"""protect_socket"""		128614	0					
ANR	129440	PrimaryExpression	"""protect_socket"""		128614	0					
ANR	129441	ExpressionStatement	close ( remotefd )	1152:16:33915:33930	128614	1	True				
ANR	129442	CallExpression	close ( remotefd )		128614	0					
ANR	129443	Callee	close		128614	0					
ANR	129444	Identifier	close		128614	0					
ANR	129445	ArgumentList	remotefd		128614	1					
ANR	129446	Argument	remotefd		128614	0					
ANR	129447	Identifier	remotefd		128614	0					
ANR	129448	GotoStatement	goto CLEAN_UP ;	1153:16:33948:33961	128614	2	True				
ANR	129449	Identifier	CLEAN_UP		128614	0					
ANR	129450	ExpressionStatement	"remote_ctx = new_remote ( remotefd , server_ctx )"	1159:8:34030:34092	128614	8	True				
ANR	129451	AssignmentExpression	"remote_ctx = new_remote ( remotefd , server_ctx )"		128614	0		=			
ANR	129452	Identifier	remote_ctx		128614	0					
ANR	129453	CallExpression	"new_remote ( remotefd , server_ctx )"		128614	1					
ANR	129454	Callee	new_remote		128614	0					
ANR	129455	Identifier	new_remote		128614	0					
ANR	129456	ArgumentList	remotefd		128614	1					
ANR	129457	Argument	remotefd		128614	0					
ANR	129458	Identifier	remotefd		128614	0					
ANR	129459	Argument	server_ctx		128614	1					
ANR	129460	Identifier	server_ctx		128614	0					
ANR	129461	ExpressionStatement	remote_ctx -> src_addr = src_addr	1160:8:34102:34140	128614	9	True				
ANR	129462	AssignmentExpression	remote_ctx -> src_addr = src_addr		128614	0		=			
ANR	129463	PtrMemberAccess	remote_ctx -> src_addr		128614	0					
ANR	129464	Identifier	remote_ctx		128614	0					
ANR	129465	Identifier	src_addr		128614	1					
ANR	129466	Identifier	src_addr		128614	1					
ANR	129467	ExpressionStatement	remote_ctx -> af = remote_addr -> sa_family	1161:8:34150:34202	128614	10	True				
ANR	129468	AssignmentExpression	remote_ctx -> af = remote_addr -> sa_family		128614	0		=			
ANR	129469	PtrMemberAccess	remote_ctx -> af		128614	0					
ANR	129470	Identifier	remote_ctx		128614	0					
ANR	129471	Identifier	af		128614	1					
ANR	129472	PtrMemberAccess	remote_addr -> sa_family		128614	1					
ANR	129473	Identifier	remote_addr		128614	0					
ANR	129474	Identifier	sa_family		128614	1					
ANR	129475	ExpressionStatement	remote_ctx -> addr_header_len = addr_header_len	1162:8:34212:34257	128614	11	True				
ANR	129476	AssignmentExpression	remote_ctx -> addr_header_len = addr_header_len		128614	0		=			
ANR	129477	PtrMemberAccess	remote_ctx -> addr_header_len		128614	0					
ANR	129478	Identifier	remote_ctx		128614	0					
ANR	129479	Identifier	addr_header_len		128614	1					
ANR	129480	Identifier	addr_header_len		128614	1					
ANR	129481	ExpressionStatement	"memcpy ( remote_ctx -> addr_header , addr_header , addr_header_len )"	1163:8:34267:34328	128614	12	True				
ANR	129482	CallExpression	"memcpy ( remote_ctx -> addr_header , addr_header , addr_header_len )"		128614	0					
ANR	129483	Callee	memcpy		128614	0					
ANR	129484	Identifier	memcpy		128614	0					
ANR	129485	ArgumentList	remote_ctx -> addr_header		128614	1					
ANR	129486	Argument	remote_ctx -> addr_header		128614	0					
ANR	129487	PtrMemberAccess	remote_ctx -> addr_header		128614	0					
ANR	129488	Identifier	remote_ctx		128614	0					
ANR	129489	Identifier	addr_header		128614	1					
ANR	129490	Argument	addr_header		128614	1					
ANR	129491	Identifier	addr_header		128614	0					
ANR	129492	Argument	addr_header_len		128614	2					
ANR	129493	Identifier	addr_header_len		128614	0					
ANR	129494	ExpressionStatement	"cache_insert ( conn_cache , key , HASH_KEY_LEN , ( void * ) remote_ctx )"	1166:8:34368:34431	128614	13	True				
ANR	129495	CallExpression	"cache_insert ( conn_cache , key , HASH_KEY_LEN , ( void * ) remote_ctx )"		128614	0					
ANR	129496	Callee	cache_insert		128614	0					
ANR	129497	Identifier	cache_insert		128614	0					
ANR	129498	ArgumentList	conn_cache		128614	1					
ANR	129499	Argument	conn_cache		128614	0					
ANR	129500	Identifier	conn_cache		128614	0					
ANR	129501	Argument	key		128614	1					
ANR	129502	Identifier	key		128614	0					
ANR	129503	Argument	HASH_KEY_LEN		128614	2					
ANR	129504	Identifier	HASH_KEY_LEN		128614	0					
ANR	129505	Argument	( void * ) remote_ctx		128614	3					
ANR	129506	CastExpression	( void * ) remote_ctx		128614	0					
ANR	129507	CastTarget	void *		128614	0					
ANR	129508	Identifier	remote_ctx		128614	1					
ANR	129509	ExpressionStatement	ev_io_start ( EV_A_ & remote_ctx -> io )	1169:8:34469:34504	128614	14	True				
ANR	129510	CallExpression	ev_io_start ( EV_A_ & remote_ctx -> io )		128614	0					
ANR	129511	Callee	ev_io_start		128614	0					
ANR	129512	Identifier	ev_io_start		128614	0					
ANR	129513	ArgumentList	EV_A_ & remote_ctx -> io		128614	1					
ANR	129514	Argument	EV_A_ & remote_ctx -> io		128614	0					
ANR	129515	BitAndExpression	EV_A_ & remote_ctx -> io		128614	0		&			
ANR	129516	Identifier	EV_A_		128614	0					
ANR	129517	PtrMemberAccess	remote_ctx -> io		128614	1					
ANR	129518	Identifier	remote_ctx		128614	0					
ANR	129519	Identifier	io		128614	1					
ANR	129520	ExpressionStatement	ev_timer_start ( EV_A_ & remote_ctx -> watcher )	1170:8:34514:34557	128614	15	True				
ANR	129521	CallExpression	ev_timer_start ( EV_A_ & remote_ctx -> watcher )		128614	0					
ANR	129522	Callee	ev_timer_start		128614	0					
ANR	129523	Identifier	ev_timer_start		128614	0					
ANR	129524	ArgumentList	EV_A_ & remote_ctx -> watcher		128614	1					
ANR	129525	Argument	EV_A_ & remote_ctx -> watcher		128614	0					
ANR	129526	BitAndExpression	EV_A_ & remote_ctx -> watcher		128614	0		&			
ANR	129527	Identifier	EV_A_		128614	0					
ANR	129528	PtrMemberAccess	remote_ctx -> watcher		128614	1					
ANR	129529	Identifier	remote_ctx		128614	0					
ANR	129530	Identifier	watcher		128614	1					
ANR	129531	IfStatement	if ( offset > 0 )		128614	50					
ANR	129532	Condition	offset > 0	1173:8:34574:34583	128614	0	True				
ANR	129533	RelationalExpression	offset > 0		128614	0		>			
ANR	129534	Identifier	offset		128614	0					
ANR	129535	PrimaryExpression	0		128614	1					
ANR	129536	CompoundStatement		327:20:10121:10121	128614	1					
ANR	129537	ExpressionStatement	buf -> len -= offset	1174:8:34596:34614	128614	0	True				
ANR	129538	AssignmentExpression	buf -> len -= offset		128614	0		-=			
ANR	129539	PtrMemberAccess	buf -> len		128614	0					
ANR	129540	Identifier	buf		128614	0					
ANR	129541	Identifier	len		128614	1					
ANR	129542	Identifier	offset		128614	1					
ANR	129543	ExpressionStatement	"memmove ( buf -> data , buf -> data + offset , buf -> len )"	1175:8:34624:34672	128614	1	True				
ANR	129544	CallExpression	"memmove ( buf -> data , buf -> data + offset , buf -> len )"		128614	0					
ANR	129545	Callee	memmove		128614	0					
ANR	129546	Identifier	memmove		128614	0					
ANR	129547	ArgumentList	buf -> data		128614	1					
ANR	129548	Argument	buf -> data		128614	0					
ANR	129549	PtrMemberAccess	buf -> data		128614	0					
ANR	129550	Identifier	buf		128614	0					
ANR	129551	Identifier	data		128614	1					
ANR	129552	Argument	buf -> data + offset		128614	1					
ANR	129553	AdditiveExpression	buf -> data + offset		128614	0		+			
ANR	129554	PtrMemberAccess	buf -> data		128614	0					
ANR	129555	Identifier	buf		128614	0					
ANR	129556	Identifier	data		128614	1					
ANR	129557	Identifier	offset		128614	1					
ANR	129558	Argument	buf -> len		128614	2					
ANR	129559	PtrMemberAccess	buf -> len		128614	0					
ANR	129560	Identifier	buf		128614	0					
ANR	129561	Identifier	len		128614	1					
ANR	129562	IdentifierDeclStatement	"int err = server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size ) ;"	1178:4:34685:34769	128614	51	True				
ANR	129563	IdentifierDecl	"err = server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		128614	0					
ANR	129564	IdentifierDeclType	int		128614	0					
ANR	129565	Identifier	err		128614	1					
ANR	129566	AssignmentExpression	"err = server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		128614	2		=			
ANR	129567	Identifier	err		128614	0					
ANR	129568	CallExpression	"server_ctx -> crypto -> encrypt_all ( buf , server_ctx -> crypto -> cipher , buf_size )"		128614	1					
ANR	129569	Callee	server_ctx -> crypto -> encrypt_all		128614	0					
ANR	129570	PtrMemberAccess	server_ctx -> crypto -> encrypt_all		128614	0					
ANR	129571	PtrMemberAccess	server_ctx -> crypto		128614	0					
ANR	129572	Identifier	server_ctx		128614	0					
ANR	129573	Identifier	crypto		128614	1					
ANR	129574	Identifier	encrypt_all		128614	1					
ANR	129575	ArgumentList	buf		128614	1					
ANR	129576	Argument	buf		128614	0					
ANR	129577	Identifier	buf		128614	0					
ANR	129578	Argument	server_ctx -> crypto -> cipher		128614	1					
ANR	129579	PtrMemberAccess	server_ctx -> crypto -> cipher		128614	0					
ANR	129580	PtrMemberAccess	server_ctx -> crypto		128614	0					
ANR	129581	Identifier	server_ctx		128614	0					
ANR	129582	Identifier	crypto		128614	1					
ANR	129583	Identifier	cipher		128614	1					
ANR	129584	Argument	buf_size		128614	2					
ANR	129585	Identifier	buf_size		128614	0					
ANR	129586	IfStatement	if ( err )		128614	52					
ANR	129587	Condition	err	1180:8:34780:34782	128614	0	True				
ANR	129588	Identifier	err		128614	0					
ANR	129589	CompoundStatement		334:13:10320:10320	128614	1					
ANR	129590	GotoStatement	goto CLEAN_UP ;	1182:8:34831:34844	128614	0	True				
ANR	129591	Identifier	CLEAN_UP		128614	0					
ANR	129592	IfStatement	if ( buf -> len > packet_size )		128614	53					
ANR	129593	Condition	buf -> len > packet_size	1185:8:34861:34882	128614	0	True				
ANR	129594	RelationalExpression	buf -> len > packet_size		128614	0		>			
ANR	129595	PtrMemberAccess	buf -> len		128614	0					
ANR	129596	Identifier	buf		128614	0					
ANR	129597	Identifier	len		128614	1					
ANR	129598	Identifier	packet_size		128614	1					
ANR	129599	CompoundStatement		339:32:10420:10420	128614	1					
ANR	129600	IfStatement	if ( verbose )		128614	0					
ANR	129601	Condition	verbose	1186:12:34899:34905	128614	0	True				
ANR	129602	Identifier	verbose		128614	0					
ANR	129603	CompoundStatement		340:21:10443:10443	128614	1					
ANR	129604	ExpressionStatement	"LOGI ( ""[udp] server_recv_sendto fragmentation"" )"	1187:12:34922:34968	128614	0	True				
ANR	129605	CallExpression	"LOGI ( ""[udp] server_recv_sendto fragmentation"" )"		128614	0					
ANR	129606	Callee	LOGI		128614	0					
ANR	129607	Identifier	LOGI		128614	0					
ANR	129608	ArgumentList	"""[udp] server_recv_sendto fragmentation"""		128614	1					
ANR	129609	Argument	"""[udp] server_recv_sendto fragmentation"""		128614	0					
ANR	129610	PrimaryExpression	"""[udp] server_recv_sendto fragmentation"""		128614	0					
ANR	129611	IdentifierDeclStatement	"int s = sendto ( remote_ctx -> fd , buf -> data , buf -> len , 0 , remote_addr , remote_addr_len ) ;"	1191:4:34991:35075	128614	54	True				
ANR	129612	IdentifierDecl	"s = sendto ( remote_ctx -> fd , buf -> data , buf -> len , 0 , remote_addr , remote_addr_len )"		128614	0					
ANR	129613	IdentifierDeclType	int		128614	0					
ANR	129614	Identifier	s		128614	1					
ANR	129615	AssignmentExpression	"s = sendto ( remote_ctx -> fd , buf -> data , buf -> len , 0 , remote_addr , remote_addr_len )"		128614	2		=			
ANR	129616	Identifier	s		128614	0					
ANR	129617	CallExpression	"sendto ( remote_ctx -> fd , buf -> data , buf -> len , 0 , remote_addr , remote_addr_len )"		128614	1					
ANR	129618	Callee	sendto		128614	0					
ANR	129619	Identifier	sendto		128614	0					
ANR	129620	ArgumentList	remote_ctx -> fd		128614	1					
ANR	129621	Argument	remote_ctx -> fd		128614	0					
ANR	129622	PtrMemberAccess	remote_ctx -> fd		128614	0					
ANR	129623	Identifier	remote_ctx		128614	0					
ANR	129624	Identifier	fd		128614	1					
ANR	129625	Argument	buf -> data		128614	1					
ANR	129626	PtrMemberAccess	buf -> data		128614	0					
ANR	129627	Identifier	buf		128614	0					
ANR	129628	Identifier	data		128614	1					
ANR	129629	Argument	buf -> len		128614	2					
ANR	129630	PtrMemberAccess	buf -> len		128614	0					
ANR	129631	Identifier	buf		128614	0					
ANR	129632	Identifier	len		128614	1					
ANR	129633	Argument	0		128614	3					
ANR	129634	PrimaryExpression	0		128614	0					
ANR	129635	Argument	remote_addr		128614	4					
ANR	129636	Identifier	remote_addr		128614	0					
ANR	129637	Argument	remote_addr_len		128614	5					
ANR	129638	Identifier	remote_addr_len		128614	0					
ANR	129639	IfStatement	if ( s == - 1 )		128614	55					
ANR	129640	Condition	s == - 1	1193:8:35086:35092	128614	0	True				
ANR	129641	EqualityExpression	s == - 1		128614	0		==			
ANR	129642	Identifier	s		128614	0					
ANR	129643	UnaryOperationExpression	- 1		128614	1					
ANR	129644	UnaryOperator	-		128614	0					
ANR	129645	PrimaryExpression	1		128614	1					
ANR	129646	CompoundStatement		347:17:10630:10630	128614	1					
ANR	129647	ExpressionStatement	"ERROR ( ""[udp] server_recv_sendto"" )"	1194:8:35105:35138	128614	0	True				
ANR	129648	CallExpression	"ERROR ( ""[udp] server_recv_sendto"" )"		128614	0					
ANR	129649	Callee	ERROR		128614	0					
ANR	129650	Identifier	ERROR		128614	0					
ANR	129651	ArgumentList	"""[udp] server_recv_sendto"""		128614	1					
ANR	129652	Argument	"""[udp] server_recv_sendto"""		128614	0					
ANR	129653	PrimaryExpression	"""[udp] server_recv_sendto"""		128614	0					
ANR	129654	Label	CLEAN_UP :	1309:0:39260:39268	128614	56	True				
ANR	129655	Identifier	CLEAN_UP		128614	0					
ANR	129656	ExpressionStatement	bfree ( buf )	1310:4:39274:39284	128614	57	True				
ANR	129657	CallExpression	bfree ( buf )		128614	0					
ANR	129658	Callee	bfree		128614	0					
ANR	129659	Identifier	bfree		128614	0					
ANR	129660	ArgumentList	buf		128614	1					
ANR	129661	Argument	buf		128614	0					
ANR	129662	Identifier	buf		128614	0					
ANR	129663	ExpressionStatement	ss_free ( buf )	1311:4:39290:39302	128614	58	True				
ANR	129664	CallExpression	ss_free ( buf )		128614	0					
ANR	129665	Callee	ss_free		128614	0					
ANR	129666	Identifier	ss_free		128614	0					
ANR	129667	ArgumentList	buf		128614	1					
ANR	129668	Argument	buf		128614	0					
ANR	129669	Identifier	buf		128614	0					
ANR	129670	ReturnType	static void		128614	1					
ANR	129671	Identifier	server_recv_cb		128614	2					
ANR	129672	ParameterList	"EV_P_ ev_io * w , int revents"		128614	3					
ANR	129673	Parameter	EV_P_ ev_io * w	846:15:24435:24448	128614	0	True				
ANR	129674	ParameterType	EV_P_ ev_io *		128614	0					
ANR	129675	Identifier	w		128614	1					
ANR	129676	Parameter	int revents	846:31:24451:24461	128614	1	True				
ANR	129677	ParameterType	int		128614	0					
ANR	129678	Identifier	revents		128614	1					
ANR	129679	CFGEntryNode	ENTRY		128614		True				
ANR	129680	CFGExitNode	EXIT		128614		True				
ANR	129681	Symbol	msg		128614						
ANR	129682	Symbol	get_dstaddr		128614						
ANR	129683	Symbol	* ( uint8_t * ) ( buf -> data + 2 )		128614						
ANR	129684	Symbol	server_ctx -> crypto -> encrypt_all		128614						
ANR	129685	Symbol	sendto		128614						
ANR	129686	Symbol	server_ctx		128614						
ANR	129687	Symbol	tx		128614						
ANR	129688	Symbol	revents		128614						
ANR	129689	Symbol	server_ctx -> remote_addr -> sa_family		128614						
ANR	129690	Symbol	IP_TOS		128614						
ANR	129691	Symbol	msg . msg_control		128614						
ANR	129692	Symbol	server_ctx -> remote_addr		128614						
ANR	129693	Symbol	* server_ctx		128614						
ANR	129694	Symbol	src_addr_len		128614						
ANR	129695	Symbol	* remote_addr		128614						
ANR	129696	Symbol	remote_ctx -> watcher		128614						
ANR	129697	Symbol	remote_ctx -> addr_header_len		128614						
ANR	129698	Symbol	iov [ 0 ] . iov_len		128614						
ANR	129699	Symbol	remote_addr -> sa_family		128614						
ANR	129700	Symbol	iov		128614						
ANR	129701	Symbol	* server_ctx -> remote_addr		128614						
ANR	129702	Symbol	get_addr_str		128614						
ANR	129703	Symbol	iov [ 0 ] . iov_base		128614						
ANR	129704	Symbol	dst_addr		128614						
ANR	129705	Symbol	protect_socket		128614						
ANR	129706	Symbol	server_ctx -> remote_addr_len		128614						
ANR	129707	Symbol	& msg		128614						
ANR	129708	Symbol	server_ctx -> crypto -> cipher		128614						
ANR	129709	Symbol	IPPROTO_IP		128614						
ANR	129710	Symbol	msg . msg_name		128614						
ANR	129711	Symbol	* buf		128614						
ANR	129712	Symbol	msg . msg_controllen		128614						
ANR	129713	Symbol	msg . msg_iovlen		128614						
ANR	129714	Symbol	addr_header_len		128614						
ANR	129715	Symbol	NULL		128614						
ANR	129716	Symbol	offset		128614						
ANR	129717	Symbol	& remote_ctx -> src_addr		128614						
ANR	129718	Symbol	buf_size		128614						
ANR	129719	Symbol	server_ctx -> crypto -> decrypt_all		128614						
ANR	129720	Symbol	HASH_KEY_LEN		128614						
ANR	129721	Symbol	msg . msg_namelen		128614						
ANR	129722	Symbol	new_remote		128614						
ANR	129723	Symbol	buf -> data		128614						
ANR	129724	Symbol	* server_ctx -> crypto		128614						
ANR	129725	Symbol	* remote_ctx		128614						
ANR	129726	Symbol	remote_ctx		128614						
ANR	129727	Symbol	* * server_ctx		128614						
ANR	129728	Symbol	remote_ctx -> fd		128614						
ANR	129729	Symbol	frag		128614						
ANR	129730	Symbol	dst		128614						
ANR	129731	Symbol	* iov		128614						
ANR	129732	Symbol	construct_udprelay_header		128614						
ANR	129733	Symbol	* * buf		128614						
ANR	129734	Symbol	server_ctx -> crypto		128614						
ANR	129735	Symbol	server_ctx -> iface		128614						
ANR	129736	Symbol	recvmsg		128614						
ANR	129737	Symbol	conn_cache		128614						
ANR	129738	Symbol	setinterface		128614						
ANR	129739	Symbol	& dst_addr		128614						
ANR	129740	Symbol	server_ctx -> fd		128614						
ANR	129741	Symbol	buf -> len		128614						
ANR	129742	Symbol	msg . msg_iov		128614						
ANR	129743	Symbol	control_buffer		128614						
ANR	129744	Symbol	remote_ctx -> io		128614						
ANR	129745	Symbol	create_remote_socket		128614						
ANR	129746	Symbol	tos		128614						
ANR	129747	Symbol	remote_ctx -> af		128614						
ANR	129748	Symbol	& src_addr		128614						
ANR	129749	Symbol	key		128614						
ANR	129750	Symbol	remote_addr		128614						
ANR	129751	Symbol	& remote_ctx		128614						
ANR	129752	Symbol	err		128614						
ANR	129753	Symbol	addr_header		128614						
ANR	129754	Symbol	src		128614						
ANR	129755	Symbol	remote_ctx -> addr_header		128614						
ANR	129756	Symbol	* buf -> data		128614						
ANR	129757	Symbol	server_ctx -> conn_cache		128614						
ANR	129758	Symbol	src_addr		128614						
ANR	129759	Symbol	remotefd		128614						
ANR	129760	Symbol	sockaddr_cmp		128614						
ANR	129761	Symbol	AF_INET6		128614						
ANR	129762	Symbol	verbose		128614						
ANR	129763	Symbol	remote_ctx -> src_addr		128614						
ANR	129764	Symbol	buf		128614						
ANR	129765	Symbol	s		128614						
ANR	129766	Symbol	hash_key		128614						
ANR	129767	Symbol	vpn		128614						
ANR	129768	Symbol	packet_size		128614						
ANR	129769	Symbol	w		128614						
ANR	129770	Symbol	EV_A_		128614						
ANR	129771	Symbol	ss_malloc		128614						
ANR	129772	Symbol	& tos		128614						
ANR	129773	Symbol	remote_addr_len		128614						
ANR	129774	Function	free_cb	1314:0:39307:39526							
ANR	129775	FunctionDef	"free_cb (void * key , void * element)"		129774	0					
ANR	129776	CompoundStatement		1316:0:39346:39526	129774	0					
ANR	129777	IdentifierDeclStatement	remote_ctx_t * remote_ctx = ( remote_ctx_t * ) element ;	1317:4:39352:39402	129774	0	True				
ANR	129778	IdentifierDecl	* remote_ctx = ( remote_ctx_t * ) element		129774	0					
ANR	129779	IdentifierDeclType	remote_ctx_t *		129774	0					
ANR	129780	Identifier	remote_ctx		129774	1					
ANR	129781	AssignmentExpression	* remote_ctx = ( remote_ctx_t * ) element		129774	2		=			
ANR	129782	Identifier	remote_ctx		129774	0					
ANR	129783	CastExpression	( remote_ctx_t * ) element		129774	1					
ANR	129784	CastTarget	remote_ctx_t *		129774	0					
ANR	129785	Identifier	element		129774	1					
ANR	129786	IfStatement	if ( verbose )		129774	1					
ANR	129787	Condition	verbose	1319:8:39413:39419	129774	0	True				
ANR	129788	Identifier	verbose		129774	0					
ANR	129789	CompoundStatement		4:17:75:75	129774	1					
ANR	129790	ExpressionStatement	"LOGI ( ""[udp] one connection freed"" )"	1320:8:39432:39466	129774	0	True				
ANR	129791	CallExpression	"LOGI ( ""[udp] one connection freed"" )"		129774	0					
ANR	129792	Callee	LOGI		129774	0					
ANR	129793	Identifier	LOGI		129774	0					
ANR	129794	ArgumentList	"""[udp] one connection freed"""		129774	1					
ANR	129795	Argument	"""[udp] one connection freed"""		129774	0					
ANR	129796	PrimaryExpression	"""[udp] one connection freed"""		129774	0					
ANR	129797	ExpressionStatement	"close_and_free_remote ( EV_DEFAULT , remote_ctx )"	1323:4:39479:39524	129774	2	True				
ANR	129798	CallExpression	"close_and_free_remote ( EV_DEFAULT , remote_ctx )"		129774	0					
ANR	129799	Callee	close_and_free_remote		129774	0					
ANR	129800	Identifier	close_and_free_remote		129774	0					
ANR	129801	ArgumentList	EV_DEFAULT		129774	1					
ANR	129802	Argument	EV_DEFAULT		129774	0					
ANR	129803	Identifier	EV_DEFAULT		129774	0					
ANR	129804	Argument	remote_ctx		129774	1					
ANR	129805	Identifier	remote_ctx		129774	0					
ANR	129806	ReturnType	void		129774	1					
ANR	129807	Identifier	free_cb		129774	2					
ANR	129808	ParameterList	"void * key , void * element"		129774	3					
ANR	129809	Parameter	void * key	1315:8:39320:39328	129774	0	True				
ANR	129810	ParameterType	void *		129774	0					
ANR	129811	Identifier	key		129774	1					
ANR	129812	Parameter	void * element	1315:19:39331:39343	129774	1	True				
ANR	129813	ParameterType	void *		129774	0					
ANR	129814	Identifier	element		129774	1					
ANR	129815	CFGEntryNode	ENTRY		129774		True				
ANR	129816	CFGExitNode	EXIT		129774		True				
ANR	129817	Symbol	EV_DEFAULT		129774						
ANR	129818	Symbol	remote_ctx		129774						
ANR	129819	Symbol	key		129774						
ANR	129820	Symbol	element		129774						
ANR	129821	Symbol	verbose		129774						
ANR	129822	DeclStmt									
ANR	129823	Decl							struct ev_loop	struct ev_loop *	loop
ANR	129824	DeclStmt									
ANR	129825	Decl							struct cache	struct cache *	conn_cache
ANR	129826	DeclStmt									
ANR	129827	Decl							int	int	serverfd
ANR	129828	DeclStmt									
ANR	129829	Decl							server_ctx_t	server_ctx_t *	server_ctx
ANR	129830	Function	free_udprelay	1382:0:41027:41386							
ANR	129831	FunctionDef	free_udprelay ()		129830	0					
ANR	129832	CompoundStatement		1384:0:41048:41386	129830	0					
ANR	129833	IdentifierDeclStatement	struct ev_loop * loop = EV_DEFAULT ;	1385:4:41054:41087	129830	0	True				
ANR	129834	IdentifierDecl	* loop = EV_DEFAULT		129830	0					
ANR	129835	IdentifierDeclType	struct ev_loop *		129830	0					
ANR	129836	Identifier	loop		129830	1					
ANR	129837	AssignmentExpression	* loop = EV_DEFAULT		129830	2		=			
ANR	129838	Identifier	EV_DEFAULT		129830	0					
ANR	129839	Identifier	EV_DEFAULT		129830	1					
ANR	129840	WhileStatement	while ( server_num -- > 0 )		129830	1					
ANR	129841	Condition	server_num -- > 0	1386:11:41100:41115	129830	0	True				
ANR	129842	RelationalExpression	server_num -- > 0		129830	0		>			
ANR	129843	PostIncDecOperationExpression	server_num --		129830	0					
ANR	129844	Identifier	server_num		129830	0					
ANR	129845	IncDec	--		129830	1					
ANR	129846	PrimaryExpression	0		129830	1					
ANR	129847	CompoundStatement		4:8:79:133	129830	1					
ANR	129848	IdentifierDeclStatement	server_ctx_t * server_ctx = server_ctx_list [ server_num ] ;	1387:8:41128:41182	129830	0	True				
ANR	129849	IdentifierDecl	* server_ctx = server_ctx_list [ server_num ]		129830	0					
ANR	129850	IdentifierDeclType	server_ctx_t *		129830	0					
ANR	129851	Identifier	server_ctx		129830	1					
ANR	129852	AssignmentExpression	* server_ctx = server_ctx_list [ server_num ]		129830	2		=			
ANR	129853	Identifier	server_ctx		129830	0					
ANR	129854	ArrayIndexing	server_ctx_list [ server_num ]		129830	1					
ANR	129855	Identifier	server_ctx_list		129830	0					
ANR	129856	Identifier	server_num		129830	1					
ANR	129857	ExpressionStatement	"ev_io_stop ( loop , & server_ctx -> io )"	1388:8:41192:41225	129830	1	True				
ANR	129858	CallExpression	"ev_io_stop ( loop , & server_ctx -> io )"		129830	0					
ANR	129859	Callee	ev_io_stop		129830	0					
ANR	129860	Identifier	ev_io_stop		129830	0					
ANR	129861	ArgumentList	loop		129830	1					
ANR	129862	Argument	loop		129830	0					
ANR	129863	Identifier	loop		129830	0					
ANR	129864	Argument	& server_ctx -> io		129830	1					
ANR	129865	UnaryOperationExpression	& server_ctx -> io		129830	0					
ANR	129866	UnaryOperator	&		129830	0					
ANR	129867	PtrMemberAccess	server_ctx -> io		129830	1					
ANR	129868	Identifier	server_ctx		129830	0					
ANR	129869	Identifier	io		129830	1					
ANR	129870	ExpressionStatement	close ( server_ctx -> fd )	1389:8:41235:41256	129830	2	True				
ANR	129871	CallExpression	close ( server_ctx -> fd )		129830	0					
ANR	129872	Callee	close		129830	0					
ANR	129873	Identifier	close		129830	0					
ANR	129874	ArgumentList	server_ctx -> fd		129830	1					
ANR	129875	Argument	server_ctx -> fd		129830	0					
ANR	129876	PtrMemberAccess	server_ctx -> fd		129830	0					
ANR	129877	Identifier	server_ctx		129830	0					
ANR	129878	Identifier	fd		129830	1					
ANR	129879	ExpressionStatement	"cache_delete ( server_ctx -> conn_cache , 0 )"	1390:8:41266:41305	129830	3	True				
ANR	129880	CallExpression	"cache_delete ( server_ctx -> conn_cache , 0 )"		129830	0					
ANR	129881	Callee	cache_delete		129830	0					
ANR	129882	Identifier	cache_delete		129830	0					
ANR	129883	ArgumentList	server_ctx -> conn_cache		129830	1					
ANR	129884	Argument	server_ctx -> conn_cache		129830	0					
ANR	129885	PtrMemberAccess	server_ctx -> conn_cache		129830	0					
ANR	129886	Identifier	server_ctx		129830	0					
ANR	129887	Identifier	conn_cache		129830	1					
ANR	129888	Argument	0		129830	1					
ANR	129889	PrimaryExpression	0		129830	0					
ANR	129890	ExpressionStatement	ss_free ( server_ctx )	1391:8:41315:41334	129830	4	True				
ANR	129891	CallExpression	ss_free ( server_ctx )		129830	0					
ANR	129892	Callee	ss_free		129830	0					
ANR	129893	Identifier	ss_free		129830	0					
ANR	129894	ArgumentList	server_ctx		129830	1					
ANR	129895	Argument	server_ctx		129830	0					
ANR	129896	Identifier	server_ctx		129830	0					
ANR	129897	ExpressionStatement	server_ctx_list [ server_num ] = NULL	1392:8:41344:41378	129830	5	True				
ANR	129898	AssignmentExpression	server_ctx_list [ server_num ] = NULL		129830	0		=			
ANR	129899	ArrayIndexing	server_ctx_list [ server_num ]		129830	0					
ANR	129900	Identifier	server_ctx_list		129830	0					
ANR	129901	Identifier	server_num		129830	1					
ANR	129902	Identifier	NULL		129830	1					
ANR	129903	ReturnType	void		129830	1					
ANR	129904	Identifier	free_udprelay		129830	2					
ANR	129905	ParameterList			129830	3					
ANR	129906	CFGEntryNode	ENTRY		129830		True				
ANR	129907	CFGExitNode	EXIT		129830		True				
ANR	129908	Symbol	NULL		129830						
ANR	129909	Symbol	EV_DEFAULT		129830						
ANR	129910	Symbol	server_ctx		129830						
ANR	129911	Symbol	server_ctx -> fd		129830						
ANR	129912	Symbol	server_num		129830						
ANR	129913	Symbol	& server_ctx -> io		129830						
ANR	129914	Symbol	loop		129830						
ANR	129915	Symbol	server_ctx -> conn_cache		129830						
ANR	129916	Symbol	* server_ctx_list		129830						
ANR	129917	Symbol	server_ctx_list		129830						
ANR	129918	Symbol	* server_ctx		129830						
ANR	129919	Symbol	* server_num		129830						
