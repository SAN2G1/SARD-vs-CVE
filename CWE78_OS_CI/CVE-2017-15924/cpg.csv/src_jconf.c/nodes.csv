command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	67064	File	data/converged/CVE-2017-15924_shadowsocks-libev/src_jconf.c								
ANR	67065	Function	to_string	41:0:1222:1650							
ANR	67066	FunctionDef	to_string (const json_value * value)		67065	0					
ANR	67067	CompoundStatement		43:0:1271:1650	67065	0					
ANR	67068	IfStatement	if ( value -> type == json_string )		67065	0					
ANR	67069	Condition	value -> type == json_string	44:8:1281:1306	67065	0	True				
ANR	67070	EqualityExpression	value -> type == json_string		67065	0		==			
ANR	67071	PtrMemberAccess	value -> type		67065	0					
ANR	67072	Identifier	value		67065	0					
ANR	67073	Identifier	type		67065	1					
ANR	67074	Identifier	json_string		67065	1					
ANR	67075	CompoundStatement		2:36:37:37	67065	1					
ANR	67076	ReturnStatement	"return ss_strndup ( value -> u . string . ptr , value -> u . string . length ) ;"	45:8:1319:1381	67065	0	True				
ANR	67077	CallExpression	"ss_strndup ( value -> u . string . ptr , value -> u . string . length )"		67065	0					
ANR	67078	Callee	ss_strndup		67065	0					
ANR	67079	Identifier	ss_strndup		67065	0					
ANR	67080	ArgumentList	value -> u . string . ptr		67065	1					
ANR	67081	Argument	value -> u . string . ptr		67065	0					
ANR	67082	MemberAccess	value -> u . string . ptr		67065	0					
ANR	67083	MemberAccess	value -> u . string		67065	0					
ANR	67084	PtrMemberAccess	value -> u		67065	0					
ANR	67085	Identifier	value		67065	0					
ANR	67086	Identifier	u		67065	1					
ANR	67087	Identifier	string		67065	1					
ANR	67088	Identifier	ptr		67065	1					
ANR	67089	Argument	value -> u . string . length		67065	1					
ANR	67090	MemberAccess	value -> u . string . length		67065	0					
ANR	67091	MemberAccess	value -> u . string		67065	0					
ANR	67092	PtrMemberAccess	value -> u		67065	0					
ANR	67093	Identifier	value		67065	0					
ANR	67094	Identifier	u		67065	1					
ANR	67095	Identifier	string		67065	1					
ANR	67096	Identifier	length		67065	1					
ANR	67097	ElseStatement	else		67065	0					
ANR	67098	IfStatement	if ( value -> type == json_integer )		67065	0					
ANR	67099	Condition	value -> type == json_integer	46:15:1398:1424	67065	0	True				
ANR	67100	EqualityExpression	value -> type == json_integer		67065	0		==			
ANR	67101	PtrMemberAccess	value -> type		67065	0					
ANR	67102	Identifier	value		67065	0					
ANR	67103	Identifier	type		67065	1					
ANR	67104	Identifier	json_integer		67065	1					
ANR	67105	CompoundStatement		4:44:155:155	67065	1					
ANR	67106	ReturnStatement	return strdup ( ss_itoa ( value -> u . integer ) ) ;	47:8:1437:1477	67065	0	True				
ANR	67107	CallExpression	strdup ( ss_itoa ( value -> u . integer ) )		67065	0					
ANR	67108	Callee	strdup		67065	0					
ANR	67109	Identifier	strdup		67065	0					
ANR	67110	ArgumentList	ss_itoa ( value -> u . integer )		67065	1					
ANR	67111	Argument	ss_itoa ( value -> u . integer )		67065	0					
ANR	67112	CallExpression	ss_itoa ( value -> u . integer )		67065	0					
ANR	67113	Callee	ss_itoa		67065	0					
ANR	67114	Identifier	ss_itoa		67065	0					
ANR	67115	ArgumentList	value -> u . integer		67065	1					
ANR	67116	Argument	value -> u . integer		67065	0					
ANR	67117	MemberAccess	value -> u . integer		67065	0					
ANR	67118	PtrMemberAccess	value -> u		67065	0					
ANR	67119	Identifier	value		67065	0					
ANR	67120	Identifier	u		67065	1					
ANR	67121	Identifier	integer		67065	1					
ANR	67122	ElseStatement	else		67065	0					
ANR	67123	IfStatement	if ( value -> type == json_null )		67065	0					
ANR	67124	Condition	value -> type == json_null	48:15:1494:1517	67065	0	True				
ANR	67125	EqualityExpression	value -> type == json_null		67065	0		==			
ANR	67126	PtrMemberAccess	value -> type		67065	0					
ANR	67127	Identifier	value		67065	0					
ANR	67128	Identifier	type		67065	1					
ANR	67129	Identifier	json_null		67065	1					
ANR	67130	CompoundStatement		6:41:248:248	67065	1					
ANR	67131	ReturnStatement	return NULL ;	49:8:1530:1541	67065	0	True				
ANR	67132	Identifier	NULL		67065	0					
ANR	67133	ElseStatement	else		67065	0					
ANR	67134	CompoundStatement		8:11:282:282	67065	0					
ANR	67135	ExpressionStatement	"LOGE ( ""%d"" , value -> type )"	51:8:1564:1587	67065	0	True				
ANR	67136	CallExpression	"LOGE ( ""%d"" , value -> type )"		67065	0					
ANR	67137	Callee	LOGE		67065	0					
ANR	67138	Identifier	LOGE		67065	0					
ANR	67139	ArgumentList	"""%d"""		67065	1					
ANR	67140	Argument	"""%d"""		67065	0					
ANR	67141	PrimaryExpression	"""%d"""		67065	0					
ANR	67142	Argument	value -> type		67065	1					
ANR	67143	PtrMemberAccess	value -> type		67065	0					
ANR	67144	Identifier	value		67065	0					
ANR	67145	Identifier	type		67065	1					
ANR	67146	ExpressionStatement	"FATAL ( ""Invalid config format."" )"	52:8:1597:1628	67065	1	True				
ANR	67147	CallExpression	"FATAL ( ""Invalid config format."" )"		67065	0					
ANR	67148	Callee	FATAL		67065	0					
ANR	67149	Identifier	FATAL		67065	0					
ANR	67150	ArgumentList	"""Invalid config format."""		67065	1					
ANR	67151	Argument	"""Invalid config format."""		67065	0					
ANR	67152	PrimaryExpression	"""Invalid config format."""		67065	0					
ANR	67153	ReturnStatement	return 0 ;	54:4:1640:1648	67065	1	True				
ANR	67154	PrimaryExpression	0		67065	0					
ANR	67155	ReturnType	static char *		67065	1					
ANR	67156	Identifier	to_string		67065	2					
ANR	67157	ParameterList	const json_value * value		67065	3					
ANR	67158	Parameter	const json_value * value	42:10:1246:1268	67065	0	True				
ANR	67159	ParameterType	const json_value *		67065	0					
ANR	67160	Identifier	value		67065	1					
ANR	67161	CFGEntryNode	ENTRY		67065		True				
ANR	67162	CFGExitNode	EXIT		67065		True				
ANR	67163	Symbol	NULL		67065						
ANR	67164	Symbol	value -> u		67065						
ANR	67165	Symbol	ss_strndup		67065						
ANR	67166	Symbol	json_integer		67065						
ANR	67167	Symbol	json_string		67065						
ANR	67168	Symbol	ss_itoa		67065						
ANR	67169	Symbol	json_null		67065						
ANR	67170	Symbol	value -> u . string		67065						
ANR	67171	Symbol	value -> u . string . ptr		67065						
ANR	67172	Symbol	value -> u . string . length		67065						
ANR	67173	Symbol	* value		67065						
ANR	67174	Symbol	value -> u . integer		67065						
ANR	67175	Symbol	strdup		67065						
ANR	67176	Symbol	value		67065						
ANR	67177	Symbol	value -> type		67065						
ANR	67178	Function	free_addr	57:0:1653:1737							
ANR	67179	FunctionDef	free_addr (ss_addr_t * addr)		67178	0					
ANR	67180	CompoundStatement		59:0:1685:1737	67178	0					
ANR	67181	ExpressionStatement	ss_free ( addr -> host )	60:4:1691:1710	67178	0	True				
ANR	67182	CallExpression	ss_free ( addr -> host )		67178	0					
ANR	67183	Callee	ss_free		67178	0					
ANR	67184	Identifier	ss_free		67178	0					
ANR	67185	ArgumentList	addr -> host		67178	1					
ANR	67186	Argument	addr -> host		67178	0					
ANR	67187	PtrMemberAccess	addr -> host		67178	0					
ANR	67188	Identifier	addr		67178	0					
ANR	67189	Identifier	host		67178	1					
ANR	67190	ExpressionStatement	ss_free ( addr -> port )	61:4:1716:1735	67178	1	True				
ANR	67191	CallExpression	ss_free ( addr -> port )		67178	0					
ANR	67192	Callee	ss_free		67178	0					
ANR	67193	Identifier	ss_free		67178	0					
ANR	67194	ArgumentList	addr -> port		67178	1					
ANR	67195	Argument	addr -> port		67178	0					
ANR	67196	PtrMemberAccess	addr -> port		67178	0					
ANR	67197	Identifier	addr		67178	0					
ANR	67198	Identifier	port		67178	1					
ANR	67199	ReturnType	void		67178	1					
ANR	67200	Identifier	free_addr		67178	2					
ANR	67201	ParameterList	ss_addr_t * addr		67178	3					
ANR	67202	Parameter	ss_addr_t * addr	58:10:1668:1682	67178	0	True				
ANR	67203	ParameterType	ss_addr_t *		67178	0					
ANR	67204	Identifier	addr		67178	1					
ANR	67205	CFGEntryNode	ENTRY		67178		True				
ANR	67206	CFGExitNode	EXIT		67178		True				
ANR	67207	Symbol	addr -> port		67178						
ANR	67208	Symbol	addr -> host		67178						
ANR	67209	Symbol	* addr		67178						
ANR	67210	Symbol	addr		67178						
ANR	67211	Function	parse_addr	64:0:1740:2717							
ANR	67212	FunctionDef	"parse_addr (const char * str_in , ss_addr_t * addr)"		67211	0					
ANR	67213	CompoundStatement		66:0:1793:2717	67211	0					
ANR	67214	IfStatement	if ( str_in == NULL )		67211	0					
ANR	67215	Condition	str_in == NULL	67:8:1803:1816	67211	0	True				
ANR	67216	EqualityExpression	str_in == NULL		67211	0		==			
ANR	67217	Identifier	str_in		67211	0					
ANR	67218	Identifier	NULL		67211	1					
ANR	67219	ReturnStatement	return ;	67:24:1819:1825	67211	1	True				
ANR	67220	IdentifierDeclStatement	"int ipv6 = 0 , ret = - 1 , n = 0 ;"	69:4:1832:1861	67211	1	True				
ANR	67221	IdentifierDecl	ipv6 = 0		67211	0					
ANR	67222	IdentifierDeclType	int		67211	0					
ANR	67223	Identifier	ipv6		67211	1					
ANR	67224	AssignmentExpression	ipv6 = 0		67211	2		=			
ANR	67225	Identifier	ipv6		67211	0					
ANR	67226	PrimaryExpression	0		67211	1					
ANR	67227	IdentifierDecl	ret = - 1		67211	1					
ANR	67228	IdentifierDeclType	int		67211	0					
ANR	67229	Identifier	ret		67211	1					
ANR	67230	AssignmentExpression	ret = - 1		67211	2		=			
ANR	67231	Identifier	ret		67211	0					
ANR	67232	UnaryOperationExpression	- 1		67211	1					
ANR	67233	UnaryOperator	-		67211	0					
ANR	67234	PrimaryExpression	1		67211	1					
ANR	67235	IdentifierDecl	n = 0		67211	2					
ANR	67236	IdentifierDeclType	int		67211	0					
ANR	67237	Identifier	n		67211	1					
ANR	67238	AssignmentExpression	n = 0		67211	2		=			
ANR	67239	Identifier	n		67211	0					
ANR	67240	PrimaryExpression	0		67211	1					
ANR	67241	IdentifierDeclStatement	char * pch ;	70:4:1867:1876	67211	2	True				
ANR	67242	IdentifierDecl	* pch		67211	0					
ANR	67243	IdentifierDeclType	char *		67211	0					
ANR	67244	Identifier	pch		67211	1					
ANR	67245	IdentifierDeclStatement	char * str = strdup ( str_in ) ;	71:4:1882:1908	67211	3	True				
ANR	67246	IdentifierDecl	* str = strdup ( str_in )		67211	0					
ANR	67247	IdentifierDeclType	char *		67211	0					
ANR	67248	Identifier	str		67211	1					
ANR	67249	AssignmentExpression	* str = strdup ( str_in )		67211	2		=			
ANR	67250	Identifier	str		67211	0					
ANR	67251	CallExpression	strdup ( str_in )		67211	1					
ANR	67252	Callee	strdup		67211	0					
ANR	67253	Identifier	strdup		67211	0					
ANR	67254	ArgumentList	str_in		67211	1					
ANR	67255	Argument	str_in		67211	0					
ANR	67256	Identifier	str_in		67211	0					
ANR	67257	IdentifierDeclStatement	struct cork_ip ip ;	73:4:1915:1932	67211	4	True				
ANR	67258	IdentifierDecl	ip		67211	0					
ANR	67259	IdentifierDeclType	struct cork_ip		67211	0					
ANR	67260	Identifier	ip		67211	1					
ANR	67261	IfStatement	"if ( cork_ip_init ( & ip , str ) != - 1 )"		67211	5					
ANR	67262	Condition	"cork_ip_init ( & ip , str ) != - 1"	74:8:1942:1969	67211	0	True				
ANR	67263	EqualityExpression	"cork_ip_init ( & ip , str ) != - 1"		67211	0		!=			
ANR	67264	CallExpression	"cork_ip_init ( & ip , str )"		67211	0					
ANR	67265	Callee	cork_ip_init		67211	0					
ANR	67266	Identifier	cork_ip_init		67211	0					
ANR	67267	ArgumentList	& ip		67211	1					
ANR	67268	Argument	& ip		67211	0					
ANR	67269	UnaryOperationExpression	& ip		67211	0					
ANR	67270	UnaryOperator	&		67211	0					
ANR	67271	Identifier	ip		67211	1					
ANR	67272	Argument	str		67211	1					
ANR	67273	Identifier	str		67211	0					
ANR	67274	UnaryOperationExpression	- 1		67211	1					
ANR	67275	UnaryOperator	-		67211	0					
ANR	67276	PrimaryExpression	1		67211	1					
ANR	67277	CompoundStatement		9:38:178:178	67211	1					
ANR	67278	ExpressionStatement	addr -> host = str	75:8:1982:1998	67211	0	True				
ANR	67279	AssignmentExpression	addr -> host = str		67211	0		=			
ANR	67280	PtrMemberAccess	addr -> host		67211	0					
ANR	67281	Identifier	addr		67211	0					
ANR	67282	Identifier	host		67211	1					
ANR	67283	Identifier	str		67211	1					
ANR	67284	ExpressionStatement	addr -> port = NULL	76:8:2008:2025	67211	1	True				
ANR	67285	AssignmentExpression	addr -> port = NULL		67211	0		=			
ANR	67286	PtrMemberAccess	addr -> port		67211	0					
ANR	67287	Identifier	addr		67211	0					
ANR	67288	Identifier	port		67211	1					
ANR	67289	Identifier	NULL		67211	1					
ANR	67290	ReturnStatement	return ;	77:8:2035:2041	67211	2	True				
ANR	67291	ExpressionStatement	"pch = strchr ( str , ':' )"	80:4:2054:2076	67211	6	True				
ANR	67292	AssignmentExpression	"pch = strchr ( str , ':' )"		67211	0		=			
ANR	67293	Identifier	pch		67211	0					
ANR	67294	CallExpression	"strchr ( str , ':' )"		67211	1					
ANR	67295	Callee	strchr		67211	0					
ANR	67296	Identifier	strchr		67211	0					
ANR	67297	ArgumentList	str		67211	1					
ANR	67298	Argument	str		67211	0					
ANR	67299	Identifier	str		67211	0					
ANR	67300	Argument	':'		67211	1					
ANR	67301	PrimaryExpression	':'		67211	0					
ANR	67302	WhileStatement	while ( pch != NULL )		67211	7					
ANR	67303	Condition	pch != NULL	81:11:2089:2099	67211	0	True				
ANR	67304	EqualityExpression	pch != NULL		67211	0		!=			
ANR	67305	Identifier	pch		67211	0					
ANR	67306	Identifier	NULL		67211	1					
ANR	67307	CompoundStatement		16:24:308:308	67211	1					
ANR	67308	ExpressionStatement	n ++	82:8:2112:2115	67211	0	True				
ANR	67309	PostIncDecOperationExpression	n ++		67211	0					
ANR	67310	Identifier	n		67211	0					
ANR	67311	IncDec	++		67211	1					
ANR	67312	ExpressionStatement	ret = pch - str	83:8:2125:2140	67211	1	True				
ANR	67313	AssignmentExpression	ret = pch - str		67211	0		=			
ANR	67314	Identifier	ret		67211	0					
ANR	67315	AdditiveExpression	pch - str		67211	1		-			
ANR	67316	Identifier	pch		67211	0					
ANR	67317	Identifier	str		67211	1					
ANR	67318	ExpressionStatement	"pch = strchr ( pch + 1 , ':' )"	84:8:2150:2176	67211	2	True				
ANR	67319	AssignmentExpression	"pch = strchr ( pch + 1 , ':' )"		67211	0		=			
ANR	67320	Identifier	pch		67211	0					
ANR	67321	CallExpression	"strchr ( pch + 1 , ':' )"		67211	1					
ANR	67322	Callee	strchr		67211	0					
ANR	67323	Identifier	strchr		67211	0					
ANR	67324	ArgumentList	pch + 1		67211	1					
ANR	67325	Argument	pch + 1		67211	0					
ANR	67326	AdditiveExpression	pch + 1		67211	0		+			
ANR	67327	Identifier	pch		67211	0					
ANR	67328	PrimaryExpression	1		67211	1					
ANR	67329	Argument	':'		67211	1					
ANR	67330	PrimaryExpression	':'		67211	0					
ANR	67331	IfStatement	if ( n > 1 )		67211	8					
ANR	67332	Condition	n > 1	86:8:2192:2196	67211	0	True				
ANR	67333	RelationalExpression	n > 1		67211	0		>			
ANR	67334	Identifier	n		67211	0					
ANR	67335	PrimaryExpression	1		67211	1					
ANR	67336	CompoundStatement		21:15:405:405	67211	1					
ANR	67337	ExpressionStatement	ipv6 = 1	87:8:2209:2217	67211	0	True				
ANR	67338	AssignmentExpression	ipv6 = 1		67211	0		=			
ANR	67339	Identifier	ipv6		67211	0					
ANR	67340	PrimaryExpression	1		67211	1					
ANR	67341	IfStatement	if ( str [ ret - 1 ] != ']' )		67211	1					
ANR	67342	Condition	str [ ret - 1 ] != ']'	88:12:2231:2249	67211	0	True				
ANR	67343	EqualityExpression	str [ ret - 1 ] != ']'		67211	0		!=			
ANR	67344	ArrayIndexing	str [ ret - 1 ]		67211	0					
ANR	67345	Identifier	str		67211	0					
ANR	67346	AdditiveExpression	ret - 1		67211	1		-			
ANR	67347	Identifier	ret		67211	0					
ANR	67348	PrimaryExpression	1		67211	1					
ANR	67349	PrimaryExpression	']'		67211	1					
ANR	67350	CompoundStatement		23:33:458:458	67211	1					
ANR	67351	ExpressionStatement	ret = - 1	89:12:2266:2274	67211	0	True				
ANR	67352	AssignmentExpression	ret = - 1		67211	0		=			
ANR	67353	Identifier	ret		67211	0					
ANR	67354	UnaryOperationExpression	- 1		67211	1					
ANR	67355	UnaryOperator	-		67211	0					
ANR	67356	PrimaryExpression	1		67211	1					
ANR	67357	IfStatement	if ( ret == - 1 )		67211	9					
ANR	67358	Condition	ret == - 1	93:8:2301:2309	67211	0	True				
ANR	67359	EqualityExpression	ret == - 1		67211	0		==			
ANR	67360	Identifier	ret		67211	0					
ANR	67361	UnaryOperationExpression	- 1		67211	1					
ANR	67362	UnaryOperator	-		67211	0					
ANR	67363	PrimaryExpression	1		67211	1					
ANR	67364	CompoundStatement		28:19:518:518	67211	1					
ANR	67365	IfStatement	if ( ipv6 )		67211	0					
ANR	67366	Condition	ipv6	94:12:2326:2329	67211	0	True				
ANR	67367	Identifier	ipv6		67211	0					
ANR	67368	CompoundStatement		29:18:538:538	67211	1					
ANR	67369	ExpressionStatement	"addr -> host = ss_strndup ( str + 1 , strlen ( str ) - 2 )"	95:12:2346:2395	67211	0	True				
ANR	67370	AssignmentExpression	"addr -> host = ss_strndup ( str + 1 , strlen ( str ) - 2 )"		67211	0		=			
ANR	67371	PtrMemberAccess	addr -> host		67211	0					
ANR	67372	Identifier	addr		67211	0					
ANR	67373	Identifier	host		67211	1					
ANR	67374	CallExpression	"ss_strndup ( str + 1 , strlen ( str ) - 2 )"		67211	1					
ANR	67375	Callee	ss_strndup		67211	0					
ANR	67376	Identifier	ss_strndup		67211	0					
ANR	67377	ArgumentList	str + 1		67211	1					
ANR	67378	Argument	str + 1		67211	0					
ANR	67379	AdditiveExpression	str + 1		67211	0		+			
ANR	67380	Identifier	str		67211	0					
ANR	67381	PrimaryExpression	1		67211	1					
ANR	67382	Argument	strlen ( str ) - 2		67211	1					
ANR	67383	AdditiveExpression	strlen ( str ) - 2		67211	0		-			
ANR	67384	CallExpression	strlen ( str )		67211	0					
ANR	67385	Callee	strlen		67211	0					
ANR	67386	Identifier	strlen		67211	0					
ANR	67387	ArgumentList	str		67211	1					
ANR	67388	Argument	str		67211	0					
ANR	67389	Identifier	str		67211	0					
ANR	67390	PrimaryExpression	2		67211	1					
ANR	67391	ElseStatement	else		67211	0					
ANR	67392	CompoundStatement		31:15:618:618	67211	0					
ANR	67393	ExpressionStatement	addr -> host = strdup ( str )	97:12:2426:2450	67211	0	True				
ANR	67394	AssignmentExpression	addr -> host = strdup ( str )		67211	0		=			
ANR	67395	PtrMemberAccess	addr -> host		67211	0					
ANR	67396	Identifier	addr		67211	0					
ANR	67397	Identifier	host		67211	1					
ANR	67398	CallExpression	strdup ( str )		67211	1					
ANR	67399	Callee	strdup		67211	0					
ANR	67400	Identifier	strdup		67211	0					
ANR	67401	ArgumentList	str		67211	1					
ANR	67402	Argument	str		67211	0					
ANR	67403	Identifier	str		67211	0					
ANR	67404	ExpressionStatement	addr -> port = NULL	99:8:2470:2487	67211	1	True				
ANR	67405	AssignmentExpression	addr -> port = NULL		67211	0		=			
ANR	67406	PtrMemberAccess	addr -> port		67211	0					
ANR	67407	Identifier	addr		67211	0					
ANR	67408	Identifier	port		67211	1					
ANR	67409	Identifier	NULL		67211	1					
ANR	67410	ElseStatement	else		67211	0					
ANR	67411	CompoundStatement		35:11:706:706	67211	0					
ANR	67412	IfStatement	if ( ipv6 )		67211	0					
ANR	67413	Condition	ipv6	101:12:2514:2517	67211	0	True				
ANR	67414	Identifier	ipv6		67211	0					
ANR	67415	CompoundStatement		36:18:726:726	67211	1					
ANR	67416	ExpressionStatement	"addr -> host = ss_strndup ( str + 1 , ret - 2 )"	102:12:2534:2575	67211	0	True				
ANR	67417	AssignmentExpression	"addr -> host = ss_strndup ( str + 1 , ret - 2 )"		67211	0		=			
ANR	67418	PtrMemberAccess	addr -> host		67211	0					
ANR	67419	Identifier	addr		67211	0					
ANR	67420	Identifier	host		67211	1					
ANR	67421	CallExpression	"ss_strndup ( str + 1 , ret - 2 )"		67211	1					
ANR	67422	Callee	ss_strndup		67211	0					
ANR	67423	Identifier	ss_strndup		67211	0					
ANR	67424	ArgumentList	str + 1		67211	1					
ANR	67425	Argument	str + 1		67211	0					
ANR	67426	AdditiveExpression	str + 1		67211	0		+			
ANR	67427	Identifier	str		67211	0					
ANR	67428	PrimaryExpression	1		67211	1					
ANR	67429	Argument	ret - 2		67211	1					
ANR	67430	AdditiveExpression	ret - 2		67211	0		-			
ANR	67431	Identifier	ret		67211	0					
ANR	67432	PrimaryExpression	2		67211	1					
ANR	67433	ElseStatement	else		67211	0					
ANR	67434	CompoundStatement		38:15:798:798	67211	0					
ANR	67435	ExpressionStatement	"addr -> host = ss_strndup ( str , ret )"	104:12:2606:2639	67211	0	True				
ANR	67436	AssignmentExpression	"addr -> host = ss_strndup ( str , ret )"		67211	0		=			
ANR	67437	PtrMemberAccess	addr -> host		67211	0					
ANR	67438	Identifier	addr		67211	0					
ANR	67439	Identifier	host		67211	1					
ANR	67440	CallExpression	"ss_strndup ( str , ret )"		67211	1					
ANR	67441	Callee	ss_strndup		67211	0					
ANR	67442	Identifier	ss_strndup		67211	0					
ANR	67443	ArgumentList	str		67211	1					
ANR	67444	Argument	str		67211	0					
ANR	67445	Identifier	str		67211	0					
ANR	67446	Argument	ret		67211	1					
ANR	67447	Identifier	ret		67211	0					
ANR	67448	ExpressionStatement	addr -> port = strdup ( str + ret + 1 )	106:8:2659:2693	67211	1	True				
ANR	67449	AssignmentExpression	addr -> port = strdup ( str + ret + 1 )		67211	0		=			
ANR	67450	PtrMemberAccess	addr -> port		67211	0					
ANR	67451	Identifier	addr		67211	0					
ANR	67452	Identifier	port		67211	1					
ANR	67453	CallExpression	strdup ( str + ret + 1 )		67211	1					
ANR	67454	Callee	strdup		67211	0					
ANR	67455	Identifier	strdup		67211	0					
ANR	67456	ArgumentList	str + ret + 1		67211	1					
ANR	67457	Argument	str + ret + 1		67211	0					
ANR	67458	AdditiveExpression	str + ret + 1		67211	0		+			
ANR	67459	Identifier	str		67211	0					
ANR	67460	AdditiveExpression	ret + 1		67211	1		+			
ANR	67461	Identifier	ret		67211	0					
ANR	67462	PrimaryExpression	1		67211	1					
ANR	67463	ExpressionStatement	free ( str )	109:4:2706:2715	67211	10	True				
ANR	67464	CallExpression	free ( str )		67211	0					
ANR	67465	Callee	free		67211	0					
ANR	67466	Identifier	free		67211	0					
ANR	67467	ArgumentList	str		67211	1					
ANR	67468	Argument	str		67211	0					
ANR	67469	Identifier	str		67211	0					
ANR	67470	ReturnType	void		67211	1					
ANR	67471	Identifier	parse_addr		67211	2					
ANR	67472	ParameterList	"const char * str_in , ss_addr_t * addr"		67211	3					
ANR	67473	Parameter	const char * str_in	65:11:1756:1773	67211	0	True				
ANR	67474	ParameterType	const char *		67211	0					
ANR	67475	Identifier	str_in		67211	1					
ANR	67476	Parameter	ss_addr_t * addr	65:31:1776:1790	67211	1	True				
ANR	67477	ParameterType	ss_addr_t *		67211	0					
ANR	67478	Identifier	addr		67211	1					
ANR	67479	CFGEntryNode	ENTRY		67211		True				
ANR	67480	CFGExitNode	EXIT		67211		True				
ANR	67481	Symbol	ret		67211						
ANR	67482	Symbol	NULL		67211						
ANR	67483	Symbol	addr -> host		67211						
ANR	67484	Symbol	str_in		67211						
ANR	67485	Symbol	ip		67211						
ANR	67486	Symbol	ss_strndup		67211						
ANR	67487	Symbol	strchr		67211						
ANR	67488	Symbol	* ret		67211						
ANR	67489	Symbol	n		67211						
ANR	67490	Symbol	str		67211						
ANR	67491	Symbol	& ip		67211						
ANR	67492	Symbol	addr -> port		67211						
ANR	67493	Symbol	strlen		67211						
ANR	67494	Symbol	pch		67211						
ANR	67495	Symbol	ipv6		67211						
ANR	67496	Symbol	cork_ip_init		67211						
ANR	67497	Symbol	strdup		67211						
ANR	67498	Symbol	* addr		67211						
ANR	67499	Symbol	* str		67211						
ANR	67500	Symbol	addr		67211						
ANR	67501	Function	parse_dscp	112:0:2720:3636							
ANR	67502	FunctionDef	parse_dscp (char * str)		67501	0					
ANR	67503	CompoundStatement		114:0:2753:3636	67501	0					
ANR	67504	IdentifierDeclStatement	size_t str_len = strlen ( str ) ;	115:4:2759:2787	67501	0	True				
ANR	67505	IdentifierDecl	str_len = strlen ( str )		67501	0					
ANR	67506	IdentifierDeclType	size_t		67501	0					
ANR	67507	Identifier	str_len		67501	1					
ANR	67508	AssignmentExpression	str_len = strlen ( str )		67501	2		=			
ANR	67509	Identifier	str_len		67501	0					
ANR	67510	CallExpression	strlen ( str )		67501	1					
ANR	67511	Callee	strlen		67501	0					
ANR	67512	Identifier	strlen		67501	0					
ANR	67513	ArgumentList	str		67501	1					
ANR	67514	Argument	str		67501	0					
ANR	67515	Identifier	str		67501	0					
ANR	67516	IfStatement	"if ( str_len == 2 && strcasecmp ( str , ""EF"" ) == 0 )"		67501	1					
ANR	67517	Condition	"str_len == 2 && strcasecmp ( str , ""EF"" ) == 0"	118:8:2840:2881	67501	0	True				
ANR	67518	AndExpression	"str_len == 2 && strcasecmp ( str , ""EF"" ) == 0"		67501	0		&&			
ANR	67519	EqualityExpression	str_len == 2		67501	0		==			
ANR	67520	Identifier	str_len		67501	0					
ANR	67521	PrimaryExpression	2		67501	1					
ANR	67522	EqualityExpression	"strcasecmp ( str , ""EF"" ) == 0"		67501	1		==			
ANR	67523	CallExpression	"strcasecmp ( str , ""EF"" )"		67501	0					
ANR	67524	Callee	strcasecmp		67501	0					
ANR	67525	Identifier	strcasecmp		67501	0					
ANR	67526	ArgumentList	str		67501	1					
ANR	67527	Argument	str		67501	0					
ANR	67528	Identifier	str		67501	0					
ANR	67529	Argument	"""EF"""		67501	1					
ANR	67530	PrimaryExpression	"""EF"""		67501	0					
ANR	67531	PrimaryExpression	0		67501	1					
ANR	67532	CompoundStatement		5:52:130:130	67501	1					
ANR	67533	ReturnStatement	return DSCP_EF ;	119:8:2894:2908	67501	0	True				
ANR	67534	Identifier	DSCP_EF		67501	0					
ANR	67535	IfStatement	"if ( str_len == DSCP_CS_LEN && strncasecmp ( str , ""CS"" , 2 ) == 0 )"		67501	2					
ANR	67536	Condition	"str_len == DSCP_CS_LEN && strncasecmp ( str , ""CS"" , 2 ) == 0"	122:8:2925:2980	67501	0	True				
ANR	67537	AndExpression	"str_len == DSCP_CS_LEN && strncasecmp ( str , ""CS"" , 2 ) == 0"		67501	0		&&			
ANR	67538	EqualityExpression	str_len == DSCP_CS_LEN		67501	0		==			
ANR	67539	Identifier	str_len		67501	0					
ANR	67540	Identifier	DSCP_CS_LEN		67501	1					
ANR	67541	EqualityExpression	"strncasecmp ( str , ""CS"" , 2 ) == 0"		67501	1		==			
ANR	67542	CallExpression	"strncasecmp ( str , ""CS"" , 2 )"		67501	0					
ANR	67543	Callee	strncasecmp		67501	0					
ANR	67544	Identifier	strncasecmp		67501	0					
ANR	67545	ArgumentList	str		67501	1					
ANR	67546	Argument	str		67501	0					
ANR	67547	Identifier	str		67501	0					
ANR	67548	Argument	"""CS"""		67501	1					
ANR	67549	PrimaryExpression	"""CS"""		67501	0					
ANR	67550	Argument	2		67501	2					
ANR	67551	PrimaryExpression	2		67501	0					
ANR	67552	PrimaryExpression	0		67501	1					
ANR	67553	CompoundStatement		9:66:229:229	67501	1					
ANR	67554	IfStatement	if ( str [ 2 ] >= '0' && str [ 2 ] <= '7' )		67501	0					
ANR	67555	Condition	str [ 2 ] >= '0' && str [ 2 ] <= '7'	123:12:2997:3026	67501	0	True				
ANR	67556	AndExpression	str [ 2 ] >= '0' && str [ 2 ] <= '7'		67501	0		&&			
ANR	67557	RelationalExpression	str [ 2 ] >= '0'		67501	0		>=			
ANR	67558	ArrayIndexing	str [ 2 ]		67501	0					
ANR	67559	Identifier	str		67501	0					
ANR	67560	PrimaryExpression	2		67501	1					
ANR	67561	PrimaryExpression	'0'		67501	1					
ANR	67562	RelationalExpression	str [ 2 ] <= '7'		67501	1		<=			
ANR	67563	ArrayIndexing	str [ 2 ]		67501	0					
ANR	67564	Identifier	str		67501	0					
ANR	67565	PrimaryExpression	2		67501	1					
ANR	67566	PrimaryExpression	'7'		67501	1					
ANR	67567	CompoundStatement		10:44:275:275	67501	1					
ANR	67568	ReturnStatement	return ( str [ 2 ] - '0' ) << 3 ;	125:12:3067:3093	67501	0	True				
ANR	67569	ShiftExpression	( str [ 2 ] - '0' ) << 3		67501	0		<<			
ANR	67570	AdditiveExpression	str [ 2 ] - '0'		67501	0		-			
ANR	67571	ArrayIndexing	str [ 2 ]		67501	0					
ANR	67572	Identifier	str		67501	0					
ANR	67573	PrimaryExpression	2		67501	1					
ANR	67574	PrimaryExpression	'0'		67501	1					
ANR	67575	PrimaryExpression	3		67501	1					
ANR	67576	IfStatement	"if ( str_len == DSCP_AF_LEN && strncasecmp ( str , ""AF"" , 2 ) == 0 )"		67501	3					
ANR	67577	Condition	"str_len == DSCP_AF_LEN && strncasecmp ( str , ""AF"" , 2 ) == 0"	129:8:3120:3175	67501	0	True				
ANR	67578	AndExpression	"str_len == DSCP_AF_LEN && strncasecmp ( str , ""AF"" , 2 ) == 0"		67501	0		&&			
ANR	67579	EqualityExpression	str_len == DSCP_AF_LEN		67501	0		==			
ANR	67580	Identifier	str_len		67501	0					
ANR	67581	Identifier	DSCP_AF_LEN		67501	1					
ANR	67582	EqualityExpression	"strncasecmp ( str , ""AF"" , 2 ) == 0"		67501	1		==			
ANR	67583	CallExpression	"strncasecmp ( str , ""AF"" , 2 )"		67501	0					
ANR	67584	Callee	strncasecmp		67501	0					
ANR	67585	Identifier	strncasecmp		67501	0					
ANR	67586	ArgumentList	str		67501	1					
ANR	67587	Argument	str		67501	0					
ANR	67588	Identifier	str		67501	0					
ANR	67589	Argument	"""AF"""		67501	1					
ANR	67590	PrimaryExpression	"""AF"""		67501	0					
ANR	67591	Argument	2		67501	2					
ANR	67592	PrimaryExpression	2		67501	0					
ANR	67593	PrimaryExpression	0		67501	1					
ANR	67594	CompoundStatement		16:66:424:424	67501	1					
ANR	67595	IfStatement	if ( str [ 2 ] >= '1' && str [ 2 ] <= '4' && str [ 3 ] >= '1' && str [ 3 ] <= '3' )		67501	0					
ANR	67596	Condition	str [ 2 ] >= '1' && str [ 2 ] <= '4' && str [ 3 ] >= '1' && str [ 3 ] <= '3'	130:12:3192:3255	67501	0	True				
ANR	67597	AndExpression	str [ 2 ] >= '1' && str [ 2 ] <= '4' && str [ 3 ] >= '1' && str [ 3 ] <= '3'		67501	0		&&			
ANR	67598	RelationalExpression	str [ 2 ] >= '1'		67501	0		>=			
ANR	67599	ArrayIndexing	str [ 2 ]		67501	0					
ANR	67600	Identifier	str		67501	0					
ANR	67601	PrimaryExpression	2		67501	1					
ANR	67602	PrimaryExpression	'1'		67501	1					
ANR	67603	AndExpression	str [ 2 ] <= '4' && str [ 3 ] >= '1' && str [ 3 ] <= '3'		67501	1		&&			
ANR	67604	RelationalExpression	str [ 2 ] <= '4'		67501	0		<=			
ANR	67605	ArrayIndexing	str [ 2 ]		67501	0					
ANR	67606	Identifier	str		67501	0					
ANR	67607	PrimaryExpression	2		67501	1					
ANR	67608	PrimaryExpression	'4'		67501	1					
ANR	67609	AndExpression	str [ 3 ] >= '1' && str [ 3 ] <= '3'		67501	1		&&			
ANR	67610	RelationalExpression	str [ 3 ] >= '1'		67501	0		>=			
ANR	67611	ArrayIndexing	str [ 3 ]		67501	0					
ANR	67612	Identifier	str		67501	0					
ANR	67613	PrimaryExpression	3		67501	1					
ANR	67614	PrimaryExpression	'1'		67501	1					
ANR	67615	RelationalExpression	str [ 3 ] <= '3'		67501	1		<=			
ANR	67616	ArrayIndexing	str [ 3 ]		67501	0					
ANR	67617	Identifier	str		67501	0					
ANR	67618	PrimaryExpression	3		67501	1					
ANR	67619	PrimaryExpression	'3'		67501	1					
ANR	67620	CompoundStatement		17:78:504:504	67501	1					
ANR	67621	ReturnStatement	return ( ( str [ 2 ] - '0' ) << 3 ) | ( ( str [ 3 ] - '0' ) << 1 ) ;	132:12:3302:3354	67501	0	True				
ANR	67622	InclusiveOrExpression	( ( str [ 2 ] - '0' ) << 3 ) | ( ( str [ 3 ] - '0' ) << 1 )		67501	0		|			
ANR	67623	ShiftExpression	( str [ 2 ] - '0' ) << 3		67501	0		<<			
ANR	67624	AdditiveExpression	str [ 2 ] - '0'		67501	0		-			
ANR	67625	ArrayIndexing	str [ 2 ]		67501	0					
ANR	67626	Identifier	str		67501	0					
ANR	67627	PrimaryExpression	2		67501	1					
ANR	67628	PrimaryExpression	'0'		67501	1					
ANR	67629	PrimaryExpression	3		67501	1					
ANR	67630	ShiftExpression	( str [ 3 ] - '0' ) << 1		67501	1		<<			
ANR	67631	AdditiveExpression	str [ 3 ] - '0'		67501	0		-			
ANR	67632	ArrayIndexing	str [ 3 ]		67501	0					
ANR	67633	Identifier	str		67501	0					
ANR	67634	PrimaryExpression	3		67501	1					
ANR	67635	PrimaryExpression	'0'		67501	1					
ANR	67636	PrimaryExpression	1		67501	1					
ANR	67637	IdentifierDeclStatement	char * endptr ;	137:4:3415:3427	67501	4	True				
ANR	67638	IdentifierDecl	* endptr		67501	0					
ANR	67639	IdentifierDeclType	char *		67501	0					
ANR	67640	Identifier	endptr		67501	1					
ANR	67641	IdentifierDeclStatement	"int dscp = ( int ) strtol ( str , & endptr , 0 ) ;"	138:4:3433:3472	67501	5	True				
ANR	67642	IdentifierDecl	"dscp = ( int ) strtol ( str , & endptr , 0 )"		67501	0					
ANR	67643	IdentifierDeclType	int		67501	0					
ANR	67644	Identifier	dscp		67501	1					
ANR	67645	AssignmentExpression	"dscp = ( int ) strtol ( str , & endptr , 0 )"		67501	2		=			
ANR	67646	Identifier	dscp		67501	0					
ANR	67647	CastExpression	"( int ) strtol ( str , & endptr , 0 )"		67501	1					
ANR	67648	CastTarget	int		67501	0					
ANR	67649	CallExpression	"strtol ( str , & endptr , 0 )"		67501	1					
ANR	67650	Callee	strtol		67501	0					
ANR	67651	Identifier	strtol		67501	0					
ANR	67652	ArgumentList	str		67501	1					
ANR	67653	Argument	str		67501	0					
ANR	67654	Identifier	str		67501	0					
ANR	67655	Argument	& endptr		67501	1					
ANR	67656	UnaryOperationExpression	& endptr		67501	0					
ANR	67657	UnaryOperator	&		67501	0					
ANR	67658	Identifier	endptr		67501	1					
ANR	67659	Argument	0		67501	2					
ANR	67660	PrimaryExpression	0		67501	0					
ANR	67661	IfStatement	if ( * endptr == '\\0' && dscp >= DSCP_MIN && dscp <= DSCP_MAX )		67501	6					
ANR	67662	Condition	* endptr == '\\0' && dscp >= DSCP_MIN && dscp <= DSCP_MAX	139:8:3482:3536	67501	0	True				
ANR	67663	AndExpression	* endptr == '\\0' && dscp >= DSCP_MIN && dscp <= DSCP_MAX		67501	0		&&			
ANR	67664	EqualityExpression	* endptr == '\\0'		67501	0		==			
ANR	67665	UnaryOperationExpression	* endptr		67501	0					
ANR	67666	UnaryOperator	*		67501	0					
ANR	67667	Identifier	endptr		67501	1					
ANR	67668	PrimaryExpression	'\\0'		67501	1					
ANR	67669	AndExpression	dscp >= DSCP_MIN && dscp <= DSCP_MAX		67501	1		&&			
ANR	67670	RelationalExpression	dscp >= DSCP_MIN		67501	0		>=			
ANR	67671	Identifier	dscp		67501	0					
ANR	67672	Identifier	DSCP_MIN		67501	1					
ANR	67673	RelationalExpression	dscp <= DSCP_MAX		67501	1		<=			
ANR	67674	Identifier	dscp		67501	0					
ANR	67675	Identifier	DSCP_MAX		67501	1					
ANR	67676	CompoundStatement		26:65:785:785	67501	1					
ANR	67677	ReturnStatement	return dscp ;	140:8:3549:3560	67501	0	True				
ANR	67678	Identifier	dscp		67501	0					
ANR	67679	ExpressionStatement	"LOGE ( ""Invalid DSCP value (%s)"" , str )"	143:4:3573:3609	67501	7	True				
ANR	67680	CallExpression	"LOGE ( ""Invalid DSCP value (%s)"" , str )"		67501	0					
ANR	67681	Callee	LOGE		67501	0					
ANR	67682	Identifier	LOGE		67501	0					
ANR	67683	ArgumentList	"""Invalid DSCP value (%s)"""		67501	1					
ANR	67684	Argument	"""Invalid DSCP value (%s)"""		67501	0					
ANR	67685	PrimaryExpression	"""Invalid DSCP value (%s)"""		67501	0					
ANR	67686	Argument	str		67501	1					
ANR	67687	Identifier	str		67501	0					
ANR	67688	ReturnStatement	return DSCP_DEFAULT ;	144:4:3615:3634	67501	8	True				
ANR	67689	Identifier	DSCP_DEFAULT		67501	0					
ANR	67690	ReturnType	static int		67501	1					
ANR	67691	Identifier	parse_dscp		67501	2					
ANR	67692	ParameterList	char * str		67501	3					
ANR	67693	Parameter	char * str	113:11:2742:2750	67501	0	True				
ANR	67694	ParameterType	char *		67501	0					
ANR	67695	Identifier	str		67501	1					
ANR	67696	CFGEntryNode	ENTRY		67501		True				
ANR	67697	CFGExitNode	EXIT		67501		True				
ANR	67698	Symbol	endptr		67501						
ANR	67699	Symbol	* endptr		67501						
ANR	67700	Symbol	& endptr		67501						
ANR	67701	Symbol	strncasecmp		67501						
ANR	67702	Symbol	DSCP_AF_LEN		67501						
ANR	67703	Symbol	str		67501						
ANR	67704	Symbol	strlen		67501						
ANR	67705	Symbol	DSCP_CS_LEN		67501						
ANR	67706	Symbol	DSCP_MIN		67501						
ANR	67707	Symbol	dscp		67501						
ANR	67708	Symbol	str_len		67501						
ANR	67709	Symbol	strtol		67501						
ANR	67710	Symbol	DSCP_EF		67501						
ANR	67711	Symbol	* str		67501						
ANR	67712	Symbol	strcasecmp		67501						
ANR	67713	Symbol	DSCP_MAX		67501						
ANR	67714	Symbol	DSCP_DEFAULT		67501						
ANR	67715	Function	read_jconf	147:0:3639:11616							
ANR	67716	FunctionDef	read_jconf (const char * file)		67715	0					
ANR	67717	CompoundStatement		149:0:3678:11616	67715	0					
ANR	67718	Statement	static	150:4:3684:3689	67715	0	True				
ANR	67719	IdentifierDeclStatement	jconf_t conf ;	150:11:3691:3703	67715	1	True				
ANR	67720	IdentifierDecl	conf		67715	0					
ANR	67721	IdentifierDeclType	jconf_t		67715	0					
ANR	67722	Identifier	conf		67715	1					
ANR	67723	ExpressionStatement	"memset ( & conf , 0 , sizeof ( jconf_t ) )"	152:4:3710:3743	67715	2	True				
ANR	67724	CallExpression	"memset ( & conf , 0 , sizeof ( jconf_t ) )"		67715	0					
ANR	67725	Callee	memset		67715	0					
ANR	67726	Identifier	memset		67715	0					
ANR	67727	ArgumentList	& conf		67715	1					
ANR	67728	Argument	& conf		67715	0					
ANR	67729	UnaryOperationExpression	& conf		67715	0					
ANR	67730	UnaryOperator	&		67715	0					
ANR	67731	Identifier	conf		67715	1					
ANR	67732	Argument	0		67715	1					
ANR	67733	PrimaryExpression	0		67715	0					
ANR	67734	Argument	sizeof ( jconf_t )		67715	2					
ANR	67735	SizeofExpression	sizeof ( jconf_t )		67715	0					
ANR	67736	Sizeof	sizeof		67715	0					
ANR	67737	SizeofOperand	jconf_t		67715	1					
ANR	67738	IdentifierDeclStatement	char * buf ;	154:4:3750:3759	67715	3	True				
ANR	67739	IdentifierDecl	* buf		67715	0					
ANR	67740	IdentifierDeclType	char *		67715	0					
ANR	67741	Identifier	buf		67715	1					
ANR	67742	IdentifierDeclStatement	json_value * obj ;	155:4:3765:3780	67715	4	True				
ANR	67743	IdentifierDecl	* obj		67715	0					
ANR	67744	IdentifierDeclType	json_value *		67715	0					
ANR	67745	Identifier	obj		67715	1					
ANR	67746	IdentifierDeclStatement	"FILE * f = fopen ( file , ""rb"" ) ;"	157:4:3787:3814	67715	5	True				
ANR	67747	IdentifierDecl	"* f = fopen ( file , ""rb"" )"		67715	0					
ANR	67748	IdentifierDeclType	FILE *		67715	0					
ANR	67749	Identifier	f		67715	1					
ANR	67750	AssignmentExpression	"* f = fopen ( file , ""rb"" )"		67715	2		=			
ANR	67751	Identifier	f		67715	0					
ANR	67752	CallExpression	"fopen ( file , ""rb"" )"		67715	1					
ANR	67753	Callee	fopen		67715	0					
ANR	67754	Identifier	fopen		67715	0					
ANR	67755	ArgumentList	file		67715	1					
ANR	67756	Argument	file		67715	0					
ANR	67757	Identifier	file		67715	0					
ANR	67758	Argument	"""rb"""		67715	1					
ANR	67759	PrimaryExpression	"""rb"""		67715	0					
ANR	67760	IfStatement	if ( f == NULL )		67715	6					
ANR	67761	Condition	f == NULL	158:8:3824:3832	67715	0	True				
ANR	67762	EqualityExpression	f == NULL		67715	0		==			
ANR	67763	Identifier	f		67715	0					
ANR	67764	Identifier	NULL		67715	1					
ANR	67765	CompoundStatement		10:19:156:156	67715	1					
ANR	67766	ExpressionStatement	"FATAL ( ""Invalid config path."" )"	159:8:3845:3874	67715	0	True				
ANR	67767	CallExpression	"FATAL ( ""Invalid config path."" )"		67715	0					
ANR	67768	Callee	FATAL		67715	0					
ANR	67769	Identifier	FATAL		67715	0					
ANR	67770	ArgumentList	"""Invalid config path."""		67715	1					
ANR	67771	Argument	"""Invalid config path."""		67715	0					
ANR	67772	PrimaryExpression	"""Invalid config path."""		67715	0					
ANR	67773	ExpressionStatement	"fseek ( f , 0 , SEEK_END )"	162:4:3887:3908	67715	7	True				
ANR	67774	CallExpression	"fseek ( f , 0 , SEEK_END )"		67715	0					
ANR	67775	Callee	fseek		67715	0					
ANR	67776	Identifier	fseek		67715	0					
ANR	67777	ArgumentList	f		67715	1					
ANR	67778	Argument	f		67715	0					
ANR	67779	Identifier	f		67715	0					
ANR	67780	Argument	0		67715	1					
ANR	67781	PrimaryExpression	0		67715	0					
ANR	67782	Argument	SEEK_END		67715	2					
ANR	67783	Identifier	SEEK_END		67715	0					
ANR	67784	IdentifierDeclStatement	long pos = ftell ( f ) ;	163:4:3914:3933	67715	8	True				
ANR	67785	IdentifierDecl	pos = ftell ( f )		67715	0					
ANR	67786	IdentifierDeclType	long		67715	0					
ANR	67787	Identifier	pos		67715	1					
ANR	67788	AssignmentExpression	pos = ftell ( f )		67715	2		=			
ANR	67789	Identifier	pos		67715	0					
ANR	67790	CallExpression	ftell ( f )		67715	1					
ANR	67791	Callee	ftell		67715	0					
ANR	67792	Identifier	ftell		67715	0					
ANR	67793	ArgumentList	f		67715	1					
ANR	67794	Argument	f		67715	0					
ANR	67795	Identifier	f		67715	0					
ANR	67796	ExpressionStatement	"fseek ( f , 0 , SEEK_SET )"	164:4:3939:3960	67715	9	True				
ANR	67797	CallExpression	"fseek ( f , 0 , SEEK_SET )"		67715	0					
ANR	67798	Callee	fseek		67715	0					
ANR	67799	Identifier	fseek		67715	0					
ANR	67800	ArgumentList	f		67715	1					
ANR	67801	Argument	f		67715	0					
ANR	67802	Identifier	f		67715	0					
ANR	67803	Argument	0		67715	1					
ANR	67804	PrimaryExpression	0		67715	0					
ANR	67805	Argument	SEEK_SET		67715	2					
ANR	67806	Identifier	SEEK_SET		67715	0					
ANR	67807	IfStatement	if ( pos < 0 )		67715	10					
ANR	67808	Condition	pos < 0	166:8:3971:3977	67715	0	True				
ANR	67809	RelationalExpression	pos < 0		67715	0		<			
ANR	67810	Identifier	pos		67715	0					
ANR	67811	PrimaryExpression	0		67715	1					
ANR	67812	CompoundStatement		18:17:301:301	67715	1					
ANR	67813	ExpressionStatement	"FATAL ( ""Invalid config path."" )"	167:8:3990:4019	67715	0	True				
ANR	67814	CallExpression	"FATAL ( ""Invalid config path."" )"		67715	0					
ANR	67815	Callee	FATAL		67715	0					
ANR	67816	Identifier	FATAL		67715	0					
ANR	67817	ArgumentList	"""Invalid config path."""		67715	1					
ANR	67818	Argument	"""Invalid config path."""		67715	0					
ANR	67819	PrimaryExpression	"""Invalid config path."""		67715	0					
ANR	67820	IfStatement	if ( pos >= MAX_CONF_SIZE )		67715	11					
ANR	67821	Condition	pos >= MAX_CONF_SIZE	170:8:4036:4055	67715	0	True				
ANR	67822	RelationalExpression	pos >= MAX_CONF_SIZE		67715	0		>=			
ANR	67823	Identifier	pos		67715	0					
ANR	67824	Identifier	MAX_CONF_SIZE		67715	1					
ANR	67825	CompoundStatement		22:30:379:379	67715	1					
ANR	67826	ExpressionStatement	"FATAL ( ""Too large config file."" )"	171:8:4068:4099	67715	0	True				
ANR	67827	CallExpression	"FATAL ( ""Too large config file."" )"		67715	0					
ANR	67828	Callee	FATAL		67715	0					
ANR	67829	Identifier	FATAL		67715	0					
ANR	67830	ArgumentList	"""Too large config file."""		67715	1					
ANR	67831	Argument	"""Too large config file."""		67715	0					
ANR	67832	PrimaryExpression	"""Too large config file."""		67715	0					
ANR	67833	ExpressionStatement	buf = ss_malloc ( pos + 1 )	174:4:4112:4136	67715	12	True				
ANR	67834	AssignmentExpression	buf = ss_malloc ( pos + 1 )		67715	0		=			
ANR	67835	Identifier	buf		67715	0					
ANR	67836	CallExpression	ss_malloc ( pos + 1 )		67715	1					
ANR	67837	Callee	ss_malloc		67715	0					
ANR	67838	Identifier	ss_malloc		67715	0					
ANR	67839	ArgumentList	pos + 1		67715	1					
ANR	67840	Argument	pos + 1		67715	0					
ANR	67841	AdditiveExpression	pos + 1		67715	0		+			
ANR	67842	Identifier	pos		67715	0					
ANR	67843	PrimaryExpression	1		67715	1					
ANR	67844	IfStatement	if ( buf == NULL )		67715	13					
ANR	67845	Condition	buf == NULL	175:8:4146:4156	67715	0	True				
ANR	67846	EqualityExpression	buf == NULL		67715	0		==			
ANR	67847	Identifier	buf		67715	0					
ANR	67848	Identifier	NULL		67715	1					
ANR	67849	CompoundStatement		27:21:480:480	67715	1					
ANR	67850	ExpressionStatement	"FATAL ( ""No enough memory."" )"	176:8:4169:4195	67715	0	True				
ANR	67851	CallExpression	"FATAL ( ""No enough memory."" )"		67715	0					
ANR	67852	Callee	FATAL		67715	0					
ANR	67853	Identifier	FATAL		67715	0					
ANR	67854	ArgumentList	"""No enough memory."""		67715	1					
ANR	67855	Argument	"""No enough memory."""		67715	0					
ANR	67856	PrimaryExpression	"""No enough memory."""		67715	0					
ANR	67857	IdentifierDeclStatement	"int nread = fread ( buf , pos , 1 , f ) ;"	179:4:4208:4241	67715	14	True				
ANR	67858	IdentifierDecl	"nread = fread ( buf , pos , 1 , f )"		67715	0					
ANR	67859	IdentifierDeclType	int		67715	0					
ANR	67860	Identifier	nread		67715	1					
ANR	67861	AssignmentExpression	"nread = fread ( buf , pos , 1 , f )"		67715	2		=			
ANR	67862	Identifier	nread		67715	0					
ANR	67863	CallExpression	"fread ( buf , pos , 1 , f )"		67715	1					
ANR	67864	Callee	fread		67715	0					
ANR	67865	Identifier	fread		67715	0					
ANR	67866	ArgumentList	buf		67715	1					
ANR	67867	Argument	buf		67715	0					
ANR	67868	Identifier	buf		67715	0					
ANR	67869	Argument	pos		67715	1					
ANR	67870	Identifier	pos		67715	0					
ANR	67871	Argument	1		67715	2					
ANR	67872	PrimaryExpression	1		67715	0					
ANR	67873	Argument	f		67715	3					
ANR	67874	Identifier	f		67715	0					
ANR	67875	IfStatement	if ( ! nread )		67715	15					
ANR	67876	Condition	! nread	180:8:4251:4256	67715	0	True				
ANR	67877	UnaryOperationExpression	! nread		67715	0					
ANR	67878	UnaryOperator	!		67715	0					
ANR	67879	Identifier	nread		67715	1					
ANR	67880	CompoundStatement		32:16:580:580	67715	1					
ANR	67881	ExpressionStatement	"FATAL ( ""Failed to read the config file."" )"	181:8:4269:4309	67715	0	True				
ANR	67882	CallExpression	"FATAL ( ""Failed to read the config file."" )"		67715	0					
ANR	67883	Callee	FATAL		67715	0					
ANR	67884	Identifier	FATAL		67715	0					
ANR	67885	ArgumentList	"""Failed to read the config file."""		67715	1					
ANR	67886	Argument	"""Failed to read the config file."""		67715	0					
ANR	67887	PrimaryExpression	"""Failed to read the config file."""		67715	0					
ANR	67888	ExpressionStatement	fclose ( f )	183:4:4321:4330	67715	16	True				
ANR	67889	CallExpression	fclose ( f )		67715	0					
ANR	67890	Callee	fclose		67715	0					
ANR	67891	Identifier	fclose		67715	0					
ANR	67892	ArgumentList	f		67715	1					
ANR	67893	Argument	f		67715	0					
ANR	67894	Identifier	f		67715	0					
ANR	67895	ExpressionStatement	buf [ pos ] = '\\0'	185:4:4337:4352	67715	17	True				
ANR	67896	AssignmentExpression	buf [ pos ] = '\\0'		67715	0		=			
ANR	67897	ArrayIndexing	buf [ pos ]		67715	0					
ANR	67898	Identifier	buf		67715	0					
ANR	67899	Identifier	pos		67715	1					
ANR	67900	PrimaryExpression	'\\0'		67715	1					
ANR	67901	IdentifierDeclStatement	"json_settings settings = { 0UL , 0 , NULL , NULL , NULL } ;"	187:4:4376:4429	67715	18	True				
ANR	67902	IdentifierDecl	"settings = { 0UL , 0 , NULL , NULL , NULL }"		67715	0					
ANR	67903	IdentifierDeclType	json_settings		67715	0					
ANR	67904	Identifier	settings		67715	1					
ANR	67905	AssignmentExpression	"settings = { 0UL , 0 , NULL , NULL , NULL }"		67715	2		=			
ANR	67906	Identifier	settings		67715	0					
ANR	67907	InitializerList	0UL		67715	1					
ANR	67908	PrimaryExpression	0UL		67715	0					
ANR	67909	PrimaryExpression	0		67715	1					
ANR	67910	Identifier	NULL		67715	2					
ANR	67911	Identifier	NULL		67715	3					
ANR	67912	Identifier	NULL		67715	4					
ANR	67913	IdentifierDeclStatement	char error_buf [ 512 ] ;	188:4:4435:4454	67715	19	True				
ANR	67914	IdentifierDecl	error_buf [ 512 ]		67715	0					
ANR	67915	IdentifierDeclType	char [ 512 ]		67715	0					
ANR	67916	Identifier	error_buf		67715	1					
ANR	67917	PrimaryExpression	512		67715	2					
ANR	67918	ExpressionStatement	"obj = json_parse_ex ( & settings , buf , pos , error_buf )"	189:4:4460:4511	67715	20	True				
ANR	67919	AssignmentExpression	"obj = json_parse_ex ( & settings , buf , pos , error_buf )"		67715	0		=			
ANR	67920	Identifier	obj		67715	0					
ANR	67921	CallExpression	"json_parse_ex ( & settings , buf , pos , error_buf )"		67715	1					
ANR	67922	Callee	json_parse_ex		67715	0					
ANR	67923	Identifier	json_parse_ex		67715	0					
ANR	67924	ArgumentList	& settings		67715	1					
ANR	67925	Argument	& settings		67715	0					
ANR	67926	UnaryOperationExpression	& settings		67715	0					
ANR	67927	UnaryOperator	&		67715	0					
ANR	67928	Identifier	settings		67715	1					
ANR	67929	Argument	buf		67715	1					
ANR	67930	Identifier	buf		67715	0					
ANR	67931	Argument	pos		67715	2					
ANR	67932	Identifier	pos		67715	0					
ANR	67933	Argument	error_buf		67715	3					
ANR	67934	Identifier	error_buf		67715	0					
ANR	67935	IfStatement	if ( obj == NULL )		67715	21					
ANR	67936	Condition	obj == NULL	191:8:4522:4532	67715	0	True				
ANR	67937	EqualityExpression	obj == NULL		67715	0		==			
ANR	67938	Identifier	obj		67715	0					
ANR	67939	Identifier	NULL		67715	1					
ANR	67940	CompoundStatement		43:21:856:856	67715	1					
ANR	67941	ExpressionStatement	FATAL ( error_buf )	192:8:4545:4561	67715	0	True				
ANR	67942	CallExpression	FATAL ( error_buf )		67715	0					
ANR	67943	Callee	FATAL		67715	0					
ANR	67944	Identifier	FATAL		67715	0					
ANR	67945	ArgumentList	error_buf		67715	1					
ANR	67946	Argument	error_buf		67715	0					
ANR	67947	Identifier	error_buf		67715	0					
ANR	67948	IfStatement	if ( obj -> type == json_object )		67715	22					
ANR	67949	Condition	obj -> type == json_object	195:8:4578:4601	67715	0	True				
ANR	67950	EqualityExpression	obj -> type == json_object		67715	0		==			
ANR	67951	PtrMemberAccess	obj -> type		67715	0					
ANR	67952	Identifier	obj		67715	0					
ANR	67953	Identifier	type		67715	1					
ANR	67954	Identifier	json_object		67715	1					
ANR	67955	CompoundStatement		48:8:935:952	67715	1					
ANR	67956	IdentifierDeclStatement	"unsigned int i , j ;"	196:8:4614:4631	67715	0	True				
ANR	67957	IdentifierDecl	i		67715	0					
ANR	67958	IdentifierDeclType	unsigned int		67715	0					
ANR	67959	Identifier	i		67715	1					
ANR	67960	IdentifierDecl	j		67715	1					
ANR	67961	IdentifierDeclType	unsigned int		67715	0					
ANR	67962	Identifier	j		67715	1					
ANR	67963	ForStatement	for ( i = 0 ; i < obj -> u . object . length ; i ++ )		67715	1					
ANR	67964	ForInit	i = 0 ;	197:13:4646:4651	67715	0	True				
ANR	67965	AssignmentExpression	i = 0		67715	0		=			
ANR	67966	Identifier	i		67715	0					
ANR	67967	PrimaryExpression	0		67715	1					
ANR	67968	Condition	i < obj -> u . object . length	197:20:4653:4676	67715	1	True				
ANR	67969	RelationalExpression	i < obj -> u . object . length		67715	0		<			
ANR	67970	Identifier	i		67715	0					
ANR	67971	MemberAccess	obj -> u . object . length		67715	1					
ANR	67972	MemberAccess	obj -> u . object		67715	0					
ANR	67973	PtrMemberAccess	obj -> u		67715	0					
ANR	67974	Identifier	obj		67715	0					
ANR	67975	Identifier	u		67715	1					
ANR	67976	Identifier	object		67715	1					
ANR	67977	Identifier	length		67715	1					
ANR	67978	PostIncDecOperationExpression	i ++	197:46:4679:4681	67715	2	True				
ANR	67979	Identifier	i		67715	0					
ANR	67980	IncDec	++		67715	1					
ANR	67981	CompoundStatement		51:12:1081:1130	67715	3					
ANR	67982	IdentifierDeclStatement	char * name = obj -> u . object . values [ i ] . name ;	198:12:4698:4746	67715	0	True				
ANR	67983	IdentifierDecl	* name = obj -> u . object . values [ i ] . name		67715	0					
ANR	67984	IdentifierDeclType	char *		67715	0					
ANR	67985	Identifier	name		67715	1					
ANR	67986	AssignmentExpression	* name = obj -> u . object . values [ i ] . name		67715	2		=			
ANR	67987	Identifier	name		67715	0					
ANR	67988	MemberAccess	obj -> u . object . values [ i ] . name		67715	1					
ANR	67989	ArrayIndexing	obj -> u . object . values [ i ]		67715	0					
ANR	67990	MemberAccess	obj -> u . object . values		67715	0					
ANR	67991	MemberAccess	obj -> u . object		67715	0					
ANR	67992	PtrMemberAccess	obj -> u		67715	0					
ANR	67993	Identifier	obj		67715	0					
ANR	67994	Identifier	u		67715	1					
ANR	67995	Identifier	object		67715	1					
ANR	67996	Identifier	values		67715	1					
ANR	67997	Identifier	i		67715	1					
ANR	67998	Identifier	name		67715	1					
ANR	67999	IdentifierDeclStatement	json_value * value = obj -> u . object . values [ i ] . value ;	199:12:4760:4809	67715	1	True				
ANR	68000	IdentifierDecl	* value = obj -> u . object . values [ i ] . value		67715	0					
ANR	68001	IdentifierDeclType	json_value *		67715	0					
ANR	68002	Identifier	value		67715	1					
ANR	68003	AssignmentExpression	* value = obj -> u . object . values [ i ] . value		67715	2		=			
ANR	68004	Identifier	value		67715	0					
ANR	68005	MemberAccess	obj -> u . object . values [ i ] . value		67715	1					
ANR	68006	ArrayIndexing	obj -> u . object . values [ i ]		67715	0					
ANR	68007	MemberAccess	obj -> u . object . values		67715	0					
ANR	68008	MemberAccess	obj -> u . object		67715	0					
ANR	68009	PtrMemberAccess	obj -> u		67715	0					
ANR	68010	Identifier	obj		67715	0					
ANR	68011	Identifier	u		67715	1					
ANR	68012	Identifier	object		67715	1					
ANR	68013	Identifier	values		67715	1					
ANR	68014	Identifier	i		67715	1					
ANR	68015	Identifier	value		67715	1					
ANR	68016	IfStatement	"if ( strcmp ( name , ""server"" ) == 0 )"		67715	2					
ANR	68017	Condition	"strcmp ( name , ""server"" ) == 0"	200:16:4827:4853	67715	0	True				
ANR	68018	EqualityExpression	"strcmp ( name , ""server"" ) == 0"		67715	0		==			
ANR	68019	CallExpression	"strcmp ( name , ""server"" )"		67715	0					
ANR	68020	Callee	strcmp		67715	0					
ANR	68021	Identifier	strcmp		67715	0					
ANR	68022	ArgumentList	name		67715	1					
ANR	68023	Argument	name		67715	0					
ANR	68024	Identifier	name		67715	0					
ANR	68025	Argument	"""server"""		67715	1					
ANR	68026	PrimaryExpression	"""server"""		67715	0					
ANR	68027	PrimaryExpression	0		67715	1					
ANR	68028	CompoundStatement		52:45:1177:1177	67715	1					
ANR	68029	IfStatement	if ( value -> type == json_array )		67715	0					
ANR	68030	Condition	value -> type == json_array	201:20:4878:4902	67715	0	True				
ANR	68031	EqualityExpression	value -> type == json_array		67715	0		==			
ANR	68032	PtrMemberAccess	value -> type		67715	0					
ANR	68033	Identifier	value		67715	0					
ANR	68034	Identifier	type		67715	1					
ANR	68035	Identifier	json_array		67715	1					
ANR	68036	CompoundStatement		53:47:1226:1226	67715	1					
ANR	68037	ForStatement	for ( j = 0 ; j < value -> u . array . length ; j ++ )		67715	0					
ANR	68038	ForInit	j = 0 ;	202:25:4932:4937	67715	0	True				
ANR	68039	AssignmentExpression	j = 0		67715	0		=			
ANR	68040	Identifier	j		67715	0					
ANR	68041	PrimaryExpression	0		67715	1					
ANR	68042	Condition	j < value -> u . array . length	202:32:4939:4963	67715	1	True				
ANR	68043	RelationalExpression	j < value -> u . array . length		67715	0		<			
ANR	68044	Identifier	j		67715	0					
ANR	68045	MemberAccess	value -> u . array . length		67715	1					
ANR	68046	MemberAccess	value -> u . array		67715	0					
ANR	68047	PtrMemberAccess	value -> u		67715	0					
ANR	68048	Identifier	value		67715	0					
ANR	68049	Identifier	u		67715	1					
ANR	68050	Identifier	array		67715	1					
ANR	68051	Identifier	length		67715	1					
ANR	68052	PostIncDecOperationExpression	j ++	202:59:4966:4968	67715	2	True				
ANR	68053	Identifier	j		67715	0					
ANR	68054	IncDec	++		67715	1					
ANR	68055	CompoundStatement		59:24:1496:1525	67715	3					
ANR	68056	IfStatement	if ( j >= MAX_REMOTE_NUM )		67715	0					
ANR	68057	Condition	j >= MAX_REMOTE_NUM	203:28:5001:5019	67715	0	True				
ANR	68058	RelationalExpression	j >= MAX_REMOTE_NUM		67715	0		>=			
ANR	68059	Identifier	j		67715	0					
ANR	68060	Identifier	MAX_REMOTE_NUM		67715	1					
ANR	68061	CompoundStatement		55:49:1343:1343	67715	1					
ANR	68062	BreakStatement	break ;	204:28:5052:5057	67715	0	True				
ANR	68063	IdentifierDeclStatement	json_value * v = value -> u . array . values [ j ] ;	206:24:5109:5149	67715	1	True				
ANR	68064	IdentifierDecl	* v = value -> u . array . values [ j ]		67715	0					
ANR	68065	IdentifierDeclType	json_value *		67715	0					
ANR	68066	Identifier	v		67715	1					
ANR	68067	AssignmentExpression	* v = value -> u . array . values [ j ]		67715	2		=			
ANR	68068	Identifier	v		67715	0					
ANR	68069	ArrayIndexing	value -> u . array . values [ j ]		67715	1					
ANR	68070	MemberAccess	value -> u . array . values		67715	0					
ANR	68071	MemberAccess	value -> u . array		67715	0					
ANR	68072	PtrMemberAccess	value -> u		67715	0					
ANR	68073	Identifier	value		67715	0					
ANR	68074	Identifier	u		67715	1					
ANR	68075	Identifier	array		67715	1					
ANR	68076	Identifier	values		67715	1					
ANR	68077	Identifier	j		67715	1					
ANR	68078	IdentifierDeclStatement	char * addr_str = to_string ( v ) ;	207:24:5175:5204	67715	2	True				
ANR	68079	IdentifierDecl	* addr_str = to_string ( v )		67715	0					
ANR	68080	IdentifierDeclType	char *		67715	0					
ANR	68081	Identifier	addr_str		67715	1					
ANR	68082	AssignmentExpression	* addr_str = to_string ( v )		67715	2		=			
ANR	68083	Identifier	addr_str		67715	0					
ANR	68084	CallExpression	to_string ( v )		67715	1					
ANR	68085	Callee	to_string		67715	0					
ANR	68086	Identifier	to_string		67715	0					
ANR	68087	ArgumentList	v		67715	1					
ANR	68088	Argument	v		67715	0					
ANR	68089	Identifier	v		67715	0					
ANR	68090	ExpressionStatement	"parse_addr ( addr_str , conf . remote_addr + j )"	208:24:5230:5272	67715	3	True				
ANR	68091	CallExpression	"parse_addr ( addr_str , conf . remote_addr + j )"		67715	0					
ANR	68092	Callee	parse_addr		67715	0					
ANR	68093	Identifier	parse_addr		67715	0					
ANR	68094	ArgumentList	addr_str		67715	1					
ANR	68095	Argument	addr_str		67715	0					
ANR	68096	Identifier	addr_str		67715	0					
ANR	68097	Argument	conf . remote_addr + j		67715	1					
ANR	68098	AdditiveExpression	conf . remote_addr + j		67715	0		+			
ANR	68099	MemberAccess	conf . remote_addr		67715	0					
ANR	68100	Identifier	conf		67715	0					
ANR	68101	Identifier	remote_addr		67715	1					
ANR	68102	Identifier	j		67715	1					
ANR	68103	ExpressionStatement	ss_free ( addr_str )	209:24:5298:5315	67715	4	True				
ANR	68104	CallExpression	ss_free ( addr_str )		67715	0					
ANR	68105	Callee	ss_free		67715	0					
ANR	68106	Identifier	ss_free		67715	0					
ANR	68107	ArgumentList	addr_str		67715	1					
ANR	68108	Argument	addr_str		67715	0					
ANR	68109	Identifier	addr_str		67715	0					
ANR	68110	ExpressionStatement	conf . remote_num = j + 1	210:24:5341:5364	67715	5	True				
ANR	68111	AssignmentExpression	conf . remote_num = j + 1		67715	0		=			
ANR	68112	MemberAccess	conf . remote_num		67715	0					
ANR	68113	Identifier	conf		67715	0					
ANR	68114	Identifier	remote_num		67715	1					
ANR	68115	AdditiveExpression	j + 1		67715	1		+			
ANR	68116	Identifier	j		67715	0					
ANR	68117	PrimaryExpression	1		67715	1					
ANR	68118	ElseStatement	else		67715	0					
ANR	68119	IfStatement	if ( value -> type == json_string )		67715	0					
ANR	68120	Condition	value -> type == json_string	212:27:5415:5440	67715	0	True				
ANR	68121	EqualityExpression	value -> type == json_string		67715	0		==			
ANR	68122	PtrMemberAccess	value -> type		67715	0					
ANR	68123	Identifier	value		67715	0					
ANR	68124	Identifier	type		67715	1					
ANR	68125	Identifier	json_string		67715	1					
ANR	68126	CompoundStatement		64:55:1764:1764	67715	1					
ANR	68127	ExpressionStatement	conf . remote_addr [ 0 ] . host = to_string ( value )	213:20:5465:5508	67715	0	True				
ANR	68128	AssignmentExpression	conf . remote_addr [ 0 ] . host = to_string ( value )		67715	0		=			
ANR	68129	MemberAccess	conf . remote_addr [ 0 ] . host		67715	0					
ANR	68130	ArrayIndexing	conf . remote_addr [ 0 ]		67715	0					
ANR	68131	MemberAccess	conf . remote_addr		67715	0					
ANR	68132	Identifier	conf		67715	0					
ANR	68133	Identifier	remote_addr		67715	1					
ANR	68134	PrimaryExpression	0		67715	1					
ANR	68135	Identifier	host		67715	1					
ANR	68136	CallExpression	to_string ( value )		67715	1					
ANR	68137	Callee	to_string		67715	0					
ANR	68138	Identifier	to_string		67715	0					
ANR	68139	ArgumentList	value		67715	1					
ANR	68140	Argument	value		67715	0					
ANR	68141	Identifier	value		67715	0					
ANR	68142	ExpressionStatement	conf . remote_addr [ 0 ] . port = NULL	214:20:5530:5561	67715	1	True				
ANR	68143	AssignmentExpression	conf . remote_addr [ 0 ] . port = NULL		67715	0		=			
ANR	68144	MemberAccess	conf . remote_addr [ 0 ] . port		67715	0					
ANR	68145	ArrayIndexing	conf . remote_addr [ 0 ]		67715	0					
ANR	68146	MemberAccess	conf . remote_addr		67715	0					
ANR	68147	Identifier	conf		67715	0					
ANR	68148	Identifier	remote_addr		67715	1					
ANR	68149	PrimaryExpression	0		67715	1					
ANR	68150	Identifier	port		67715	1					
ANR	68151	Identifier	NULL		67715	1					
ANR	68152	ExpressionStatement	conf . remote_num = 1	215:20:5583:5611	67715	2	True				
ANR	68153	AssignmentExpression	conf . remote_num = 1		67715	0		=			
ANR	68154	MemberAccess	conf . remote_num		67715	0					
ANR	68155	Identifier	conf		67715	0					
ANR	68156	Identifier	remote_num		67715	1					
ANR	68157	PrimaryExpression	1		67715	1					
ANR	68158	ElseStatement	else		67715	0					
ANR	68159	IfStatement	"if ( strcmp ( name , ""port_password"" ) == 0 )"		67715	0					
ANR	68160	Condition	"strcmp ( name , ""port_password"" ) == 0"	217:23:5654:5687	67715	0	True				
ANR	68161	EqualityExpression	"strcmp ( name , ""port_password"" ) == 0"		67715	0		==			
ANR	68162	CallExpression	"strcmp ( name , ""port_password"" )"		67715	0					
ANR	68163	Callee	strcmp		67715	0					
ANR	68164	Identifier	strcmp		67715	0					
ANR	68165	ArgumentList	name		67715	1					
ANR	68166	Argument	name		67715	0					
ANR	68167	Identifier	name		67715	0					
ANR	68168	Argument	"""port_password"""		67715	1					
ANR	68169	PrimaryExpression	"""port_password"""		67715	0					
ANR	68170	PrimaryExpression	0		67715	1					
ANR	68171	CompoundStatement		69:59:2011:2011	67715	1					
ANR	68172	IfStatement	if ( value -> type == json_object )		67715	0					
ANR	68173	Condition	value -> type == json_object	218:20:5712:5737	67715	0	True				
ANR	68174	EqualityExpression	value -> type == json_object		67715	0		==			
ANR	68175	PtrMemberAccess	value -> type		67715	0					
ANR	68176	Identifier	value		67715	0					
ANR	68177	Identifier	type		67715	1					
ANR	68178	Identifier	json_object		67715	1					
ANR	68179	CompoundStatement		70:48:2061:2061	67715	1					
ANR	68180	ForStatement	for ( j = 0 ; j < value -> u . object . length ; j ++ )		67715	0					
ANR	68181	ForInit	j = 0 ;	219:25:5767:5772	67715	0	True				
ANR	68182	AssignmentExpression	j = 0		67715	0		=			
ANR	68183	Identifier	j		67715	0					
ANR	68184	PrimaryExpression	0		67715	1					
ANR	68185	Condition	j < value -> u . object . length	219:32:5774:5799	67715	1	True				
ANR	68186	RelationalExpression	j < value -> u . object . length		67715	0		<			
ANR	68187	Identifier	j		67715	0					
ANR	68188	MemberAccess	value -> u . object . length		67715	1					
ANR	68189	MemberAccess	value -> u . object		67715	0					
ANR	68190	PtrMemberAccess	value -> u		67715	0					
ANR	68191	Identifier	value		67715	0					
ANR	68192	Identifier	u		67715	1					
ANR	68193	Identifier	object		67715	1					
ANR	68194	Identifier	length		67715	1					
ANR	68195	PostIncDecOperationExpression	j ++	219:60:5802:5804	67715	2	True				
ANR	68196	Identifier	j		67715	0					
ANR	68197	IncDec	++		67715	1					
ANR	68198	CompoundStatement		75:24:2264:2311	67715	3					
ANR	68199	IfStatement	if ( j >= MAX_PORT_NUM )		67715	0					
ANR	68200	Condition	j >= MAX_PORT_NUM	220:28:5837:5853	67715	0	True				
ANR	68201	RelationalExpression	j >= MAX_PORT_NUM		67715	0		>=			
ANR	68202	Identifier	j		67715	0					
ANR	68203	Identifier	MAX_PORT_NUM		67715	1					
ANR	68204	CompoundStatement		72:47:2177:2177	67715	1					
ANR	68205	BreakStatement	break ;	221:28:5886:5891	67715	0	True				
ANR	68206	IdentifierDeclStatement	json_value * v = value -> u . object . values [ j ] . value ;	223:24:5943:5990	67715	1	True				
ANR	68207	IdentifierDecl	* v = value -> u . object . values [ j ] . value		67715	0					
ANR	68208	IdentifierDeclType	json_value *		67715	0					
ANR	68209	Identifier	v		67715	1					
ANR	68210	AssignmentExpression	* v = value -> u . object . values [ j ] . value		67715	2		=			
ANR	68211	Identifier	v		67715	0					
ANR	68212	MemberAccess	value -> u . object . values [ j ] . value		67715	1					
ANR	68213	ArrayIndexing	value -> u . object . values [ j ]		67715	0					
ANR	68214	MemberAccess	value -> u . object . values		67715	0					
ANR	68215	MemberAccess	value -> u . object		67715	0					
ANR	68216	PtrMemberAccess	value -> u		67715	0					
ANR	68217	Identifier	value		67715	0					
ANR	68218	Identifier	u		67715	1					
ANR	68219	Identifier	object		67715	1					
ANR	68220	Identifier	values		67715	1					
ANR	68221	Identifier	j		67715	1					
ANR	68222	Identifier	value		67715	1					
ANR	68223	IfStatement	if ( v -> type == json_string )		67715	2					
ANR	68224	Condition	v -> type == json_string	224:28:6020:6041	67715	0	True				
ANR	68225	EqualityExpression	v -> type == json_string		67715	0		==			
ANR	68226	PtrMemberAccess	v -> type		67715	0					
ANR	68227	Identifier	v		67715	0					
ANR	68228	Identifier	type		67715	1					
ANR	68229	Identifier	json_string		67715	1					
ANR	68230	CompoundStatement		76:52:2365:2365	67715	1					
ANR	68231	ExpressionStatement	"conf . port_password [ j ] . port = ss_strndup ( value -> u . object . values [ j ] . name , value -> u . object . values [ j ] . name_length )"	225:28:6074:6252	67715	0	True				
ANR	68232	AssignmentExpression	"conf . port_password [ j ] . port = ss_strndup ( value -> u . object . values [ j ] . name , value -> u . object . values [ j ] . name_length )"		67715	0		=			
ANR	68233	MemberAccess	conf . port_password [ j ] . port		67715	0					
ANR	68234	ArrayIndexing	conf . port_password [ j ]		67715	0					
ANR	68235	MemberAccess	conf . port_password		67715	0					
ANR	68236	Identifier	conf		67715	0					
ANR	68237	Identifier	port_password		67715	1					
ANR	68238	Identifier	j		67715	1					
ANR	68239	Identifier	port		67715	1					
ANR	68240	CallExpression	"ss_strndup ( value -> u . object . values [ j ] . name , value -> u . object . values [ j ] . name_length )"		67715	1					
ANR	68241	Callee	ss_strndup		67715	0					
ANR	68242	Identifier	ss_strndup		67715	0					
ANR	68243	ArgumentList	value -> u . object . values [ j ] . name		67715	1					
ANR	68244	Argument	value -> u . object . values [ j ] . name		67715	0					
ANR	68245	MemberAccess	value -> u . object . values [ j ] . name		67715	0					
ANR	68246	ArrayIndexing	value -> u . object . values [ j ]		67715	0					
ANR	68247	MemberAccess	value -> u . object . values		67715	0					
ANR	68248	MemberAccess	value -> u . object		67715	0					
ANR	68249	PtrMemberAccess	value -> u		67715	0					
ANR	68250	Identifier	value		67715	0					
ANR	68251	Identifier	u		67715	1					
ANR	68252	Identifier	object		67715	1					
ANR	68253	Identifier	values		67715	1					
ANR	68254	Identifier	j		67715	1					
ANR	68255	Identifier	name		67715	1					
ANR	68256	Argument	value -> u . object . values [ j ] . name_length		67715	1					
ANR	68257	MemberAccess	value -> u . object . values [ j ] . name_length		67715	0					
ANR	68258	ArrayIndexing	value -> u . object . values [ j ]		67715	0					
ANR	68259	MemberAccess	value -> u . object . values		67715	0					
ANR	68260	MemberAccess	value -> u . object		67715	0					
ANR	68261	PtrMemberAccess	value -> u		67715	0					
ANR	68262	Identifier	value		67715	0					
ANR	68263	Identifier	u		67715	1					
ANR	68264	Identifier	object		67715	1					
ANR	68265	Identifier	values		67715	1					
ANR	68266	Identifier	j		67715	1					
ANR	68267	Identifier	name_length		67715	1					
ANR	68268	ExpressionStatement	conf . port_password [ j ] . password = to_string ( v )	227:28:6282:6327	67715	1	True				
ANR	68269	AssignmentExpression	conf . port_password [ j ] . password = to_string ( v )		67715	0		=			
ANR	68270	MemberAccess	conf . port_password [ j ] . password		67715	0					
ANR	68271	ArrayIndexing	conf . port_password [ j ]		67715	0					
ANR	68272	MemberAccess	conf . port_password		67715	0					
ANR	68273	Identifier	conf		67715	0					
ANR	68274	Identifier	port_password		67715	1					
ANR	68275	Identifier	j		67715	1					
ANR	68276	Identifier	password		67715	1					
ANR	68277	CallExpression	to_string ( v )		67715	1					
ANR	68278	Callee	to_string		67715	0					
ANR	68279	Identifier	to_string		67715	0					
ANR	68280	ArgumentList	v		67715	1					
ANR	68281	Argument	v		67715	0					
ANR	68282	Identifier	v		67715	0					
ANR	68283	ExpressionStatement	conf . port_password_num = j + 1	228:28:6357:6395	67715	2	True				
ANR	68284	AssignmentExpression	conf . port_password_num = j + 1		67715	0		=			
ANR	68285	MemberAccess	conf . port_password_num		67715	0					
ANR	68286	Identifier	conf		67715	0					
ANR	68287	Identifier	port_password_num		67715	1					
ANR	68288	AdditiveExpression	j + 1		67715	1		+			
ANR	68289	Identifier	j		67715	0					
ANR	68290	PrimaryExpression	1		67715	1					
ANR	68291	ElseStatement	else		67715	0					
ANR	68292	IfStatement	"if ( strcmp ( name , ""server_port"" ) == 0 )"		67715	0					
ANR	68293	Condition	"strcmp ( name , ""server_port"" ) == 0"	232:23:6486:6517	67715	0	True				
ANR	68294	EqualityExpression	"strcmp ( name , ""server_port"" ) == 0"		67715	0		==			
ANR	68295	CallExpression	"strcmp ( name , ""server_port"" )"		67715	0					
ANR	68296	Callee	strcmp		67715	0					
ANR	68297	Identifier	strcmp		67715	0					
ANR	68298	ArgumentList	name		67715	1					
ANR	68299	Argument	name		67715	0					
ANR	68300	Identifier	name		67715	0					
ANR	68301	Argument	"""server_port"""		67715	1					
ANR	68302	PrimaryExpression	"""server_port"""		67715	0					
ANR	68303	PrimaryExpression	0		67715	1					
ANR	68304	CompoundStatement		84:57:2841:2841	67715	1					
ANR	68305	ExpressionStatement	conf . remote_port = to_string ( value )	233:16:6538:6573	67715	0	True				
ANR	68306	AssignmentExpression	conf . remote_port = to_string ( value )		67715	0		=			
ANR	68307	MemberAccess	conf . remote_port		67715	0					
ANR	68308	Identifier	conf		67715	0					
ANR	68309	Identifier	remote_port		67715	1					
ANR	68310	CallExpression	to_string ( value )		67715	1					
ANR	68311	Callee	to_string		67715	0					
ANR	68312	Identifier	to_string		67715	0					
ANR	68313	ArgumentList	value		67715	1					
ANR	68314	Argument	value		67715	0					
ANR	68315	Identifier	value		67715	0					
ANR	68316	ElseStatement	else		67715	0					
ANR	68317	IfStatement	"if ( strcmp ( name , ""local_address"" ) == 0 )"		67715	0					
ANR	68318	Condition	"strcmp ( name , ""local_address"" ) == 0"	234:23:6598:6631	67715	0	True				
ANR	68319	EqualityExpression	"strcmp ( name , ""local_address"" ) == 0"		67715	0		==			
ANR	68320	CallExpression	"strcmp ( name , ""local_address"" )"		67715	0					
ANR	68321	Callee	strcmp		67715	0					
ANR	68322	Identifier	strcmp		67715	0					
ANR	68323	ArgumentList	name		67715	1					
ANR	68324	Argument	name		67715	0					
ANR	68325	Identifier	name		67715	0					
ANR	68326	Argument	"""local_address"""		67715	1					
ANR	68327	PrimaryExpression	"""local_address"""		67715	0					
ANR	68328	PrimaryExpression	0		67715	1					
ANR	68329	CompoundStatement		86:59:2955:2955	67715	1					
ANR	68330	ExpressionStatement	conf . local_addr = to_string ( value )	235:16:6652:6686	67715	0	True				
ANR	68331	AssignmentExpression	conf . local_addr = to_string ( value )		67715	0		=			
ANR	68332	MemberAccess	conf . local_addr		67715	0					
ANR	68333	Identifier	conf		67715	0					
ANR	68334	Identifier	local_addr		67715	1					
ANR	68335	CallExpression	to_string ( value )		67715	1					
ANR	68336	Callee	to_string		67715	0					
ANR	68337	Identifier	to_string		67715	0					
ANR	68338	ArgumentList	value		67715	1					
ANR	68339	Argument	value		67715	0					
ANR	68340	Identifier	value		67715	0					
ANR	68341	ElseStatement	else		67715	0					
ANR	68342	IfStatement	"if ( strcmp ( name , ""local_port"" ) == 0 )"		67715	0					
ANR	68343	Condition	"strcmp ( name , ""local_port"" ) == 0"	236:23:6711:6741	67715	0	True				
ANR	68344	EqualityExpression	"strcmp ( name , ""local_port"" ) == 0"		67715	0		==			
ANR	68345	CallExpression	"strcmp ( name , ""local_port"" )"		67715	0					
ANR	68346	Callee	strcmp		67715	0					
ANR	68347	Identifier	strcmp		67715	0					
ANR	68348	ArgumentList	name		67715	1					
ANR	68349	Argument	name		67715	0					
ANR	68350	Identifier	name		67715	0					
ANR	68351	Argument	"""local_port"""		67715	1					
ANR	68352	PrimaryExpression	"""local_port"""		67715	0					
ANR	68353	PrimaryExpression	0		67715	1					
ANR	68354	CompoundStatement		88:56:3065:3065	67715	1					
ANR	68355	ExpressionStatement	conf . local_port = to_string ( value )	237:16:6762:6796	67715	0	True				
ANR	68356	AssignmentExpression	conf . local_port = to_string ( value )		67715	0		=			
ANR	68357	MemberAccess	conf . local_port		67715	0					
ANR	68358	Identifier	conf		67715	0					
ANR	68359	Identifier	local_port		67715	1					
ANR	68360	CallExpression	to_string ( value )		67715	1					
ANR	68361	Callee	to_string		67715	0					
ANR	68362	Identifier	to_string		67715	0					
ANR	68363	ArgumentList	value		67715	1					
ANR	68364	Argument	value		67715	0					
ANR	68365	Identifier	value		67715	0					
ANR	68366	ElseStatement	else		67715	0					
ANR	68367	IfStatement	"if ( strcmp ( name , ""password"" ) == 0 )"		67715	0					
ANR	68368	Condition	"strcmp ( name , ""password"" ) == 0"	238:23:6821:6849	67715	0	True				
ANR	68369	EqualityExpression	"strcmp ( name , ""password"" ) == 0"		67715	0		==			
ANR	68370	CallExpression	"strcmp ( name , ""password"" )"		67715	0					
ANR	68371	Callee	strcmp		67715	0					
ANR	68372	Identifier	strcmp		67715	0					
ANR	68373	ArgumentList	name		67715	1					
ANR	68374	Argument	name		67715	0					
ANR	68375	Identifier	name		67715	0					
ANR	68376	Argument	"""password"""		67715	1					
ANR	68377	PrimaryExpression	"""password"""		67715	0					
ANR	68378	PrimaryExpression	0		67715	1					
ANR	68379	CompoundStatement		90:54:3173:3173	67715	1					
ANR	68380	ExpressionStatement	conf . password = to_string ( value )	239:16:6870:6902	67715	0	True				
ANR	68381	AssignmentExpression	conf . password = to_string ( value )		67715	0		=			
ANR	68382	MemberAccess	conf . password		67715	0					
ANR	68383	Identifier	conf		67715	0					
ANR	68384	Identifier	password		67715	1					
ANR	68385	CallExpression	to_string ( value )		67715	1					
ANR	68386	Callee	to_string		67715	0					
ANR	68387	Identifier	to_string		67715	0					
ANR	68388	ArgumentList	value		67715	1					
ANR	68389	Argument	value		67715	0					
ANR	68390	Identifier	value		67715	0					
ANR	68391	ElseStatement	else		67715	0					
ANR	68392	IfStatement	"if ( strcmp ( name , ""key"" ) == 0 )"		67715	0					
ANR	68393	Condition	"strcmp ( name , ""key"" ) == 0"	240:23:6927:6950	67715	0	True				
ANR	68394	EqualityExpression	"strcmp ( name , ""key"" ) == 0"		67715	0		==			
ANR	68395	CallExpression	"strcmp ( name , ""key"" )"		67715	0					
ANR	68396	Callee	strcmp		67715	0					
ANR	68397	Identifier	strcmp		67715	0					
ANR	68398	ArgumentList	name		67715	1					
ANR	68399	Argument	name		67715	0					
ANR	68400	Identifier	name		67715	0					
ANR	68401	Argument	"""key"""		67715	1					
ANR	68402	PrimaryExpression	"""key"""		67715	0					
ANR	68403	PrimaryExpression	0		67715	1					
ANR	68404	CompoundStatement		92:49:3274:3274	67715	1					
ANR	68405	ExpressionStatement	conf . key = to_string ( value )	241:16:6971:6998	67715	0	True				
ANR	68406	AssignmentExpression	conf . key = to_string ( value )		67715	0		=			
ANR	68407	MemberAccess	conf . key		67715	0					
ANR	68408	Identifier	conf		67715	0					
ANR	68409	Identifier	key		67715	1					
ANR	68410	CallExpression	to_string ( value )		67715	1					
ANR	68411	Callee	to_string		67715	0					
ANR	68412	Identifier	to_string		67715	0					
ANR	68413	ArgumentList	value		67715	1					
ANR	68414	Argument	value		67715	0					
ANR	68415	Identifier	value		67715	0					
ANR	68416	ElseStatement	else		67715	0					
ANR	68417	IfStatement	"if ( strcmp ( name , ""method"" ) == 0 )"		67715	0					
ANR	68418	Condition	"strcmp ( name , ""method"" ) == 0"	242:23:7023:7049	67715	0	True				
ANR	68419	EqualityExpression	"strcmp ( name , ""method"" ) == 0"		67715	0		==			
ANR	68420	CallExpression	"strcmp ( name , ""method"" )"		67715	0					
ANR	68421	Callee	strcmp		67715	0					
ANR	68422	Identifier	strcmp		67715	0					
ANR	68423	ArgumentList	name		67715	1					
ANR	68424	Argument	name		67715	0					
ANR	68425	Identifier	name		67715	0					
ANR	68426	Argument	"""method"""		67715	1					
ANR	68427	PrimaryExpression	"""method"""		67715	0					
ANR	68428	PrimaryExpression	0		67715	1					
ANR	68429	CompoundStatement		94:52:3373:3373	67715	1					
ANR	68430	ExpressionStatement	conf . method = to_string ( value )	243:16:7070:7100	67715	0	True				
ANR	68431	AssignmentExpression	conf . method = to_string ( value )		67715	0		=			
ANR	68432	MemberAccess	conf . method		67715	0					
ANR	68433	Identifier	conf		67715	0					
ANR	68434	Identifier	method		67715	1					
ANR	68435	CallExpression	to_string ( value )		67715	1					
ANR	68436	Callee	to_string		67715	0					
ANR	68437	Identifier	to_string		67715	0					
ANR	68438	ArgumentList	value		67715	1					
ANR	68439	Argument	value		67715	0					
ANR	68440	Identifier	value		67715	0					
ANR	68441	ElseStatement	else		67715	0					
ANR	68442	IfStatement	"if ( strcmp ( name , ""timeout"" ) == 0 )"		67715	0					
ANR	68443	Condition	"strcmp ( name , ""timeout"" ) == 0"	244:23:7125:7152	67715	0	True				
ANR	68444	EqualityExpression	"strcmp ( name , ""timeout"" ) == 0"		67715	0		==			
ANR	68445	CallExpression	"strcmp ( name , ""timeout"" )"		67715	0					
ANR	68446	Callee	strcmp		67715	0					
ANR	68447	Identifier	strcmp		67715	0					
ANR	68448	ArgumentList	name		67715	1					
ANR	68449	Argument	name		67715	0					
ANR	68450	Identifier	name		67715	0					
ANR	68451	Argument	"""timeout"""		67715	1					
ANR	68452	PrimaryExpression	"""timeout"""		67715	0					
ANR	68453	PrimaryExpression	0		67715	1					
ANR	68454	CompoundStatement		96:53:3476:3476	67715	1					
ANR	68455	ExpressionStatement	conf . timeout = to_string ( value )	245:16:7173:7204	67715	0	True				
ANR	68456	AssignmentExpression	conf . timeout = to_string ( value )		67715	0		=			
ANR	68457	MemberAccess	conf . timeout		67715	0					
ANR	68458	Identifier	conf		67715	0					
ANR	68459	Identifier	timeout		67715	1					
ANR	68460	CallExpression	to_string ( value )		67715	1					
ANR	68461	Callee	to_string		67715	0					
ANR	68462	Identifier	to_string		67715	0					
ANR	68463	ArgumentList	value		67715	1					
ANR	68464	Argument	value		67715	0					
ANR	68465	Identifier	value		67715	0					
ANR	68466	ElseStatement	else		67715	0					
ANR	68467	IfStatement	"if ( strcmp ( name , ""user"" ) == 0 )"		67715	0					
ANR	68468	Condition	"strcmp ( name , ""user"" ) == 0"	246:23:7229:7253	67715	0	True				
ANR	68469	EqualityExpression	"strcmp ( name , ""user"" ) == 0"		67715	0		==			
ANR	68470	CallExpression	"strcmp ( name , ""user"" )"		67715	0					
ANR	68471	Callee	strcmp		67715	0					
ANR	68472	Identifier	strcmp		67715	0					
ANR	68473	ArgumentList	name		67715	1					
ANR	68474	Argument	name		67715	0					
ANR	68475	Identifier	name		67715	0					
ANR	68476	Argument	"""user"""		67715	1					
ANR	68477	PrimaryExpression	"""user"""		67715	0					
ANR	68478	PrimaryExpression	0		67715	1					
ANR	68479	CompoundStatement		98:50:3577:3577	67715	1					
ANR	68480	ExpressionStatement	conf . user = to_string ( value )	247:16:7274:7302	67715	0	True				
ANR	68481	AssignmentExpression	conf . user = to_string ( value )		67715	0		=			
ANR	68482	MemberAccess	conf . user		67715	0					
ANR	68483	Identifier	conf		67715	0					
ANR	68484	Identifier	user		67715	1					
ANR	68485	CallExpression	to_string ( value )		67715	1					
ANR	68486	Callee	to_string		67715	0					
ANR	68487	Identifier	to_string		67715	0					
ANR	68488	ArgumentList	value		67715	1					
ANR	68489	Argument	value		67715	0					
ANR	68490	Identifier	value		67715	0					
ANR	68491	ElseStatement	else		67715	0					
ANR	68492	IfStatement	"if ( strcmp ( name , ""plugin"" ) == 0 )"		67715	0					
ANR	68493	Condition	"strcmp ( name , ""plugin"" ) == 0"	248:23:7327:7353	67715	0	True				
ANR	68494	EqualityExpression	"strcmp ( name , ""plugin"" ) == 0"		67715	0		==			
ANR	68495	CallExpression	"strcmp ( name , ""plugin"" )"		67715	0					
ANR	68496	Callee	strcmp		67715	0					
ANR	68497	Identifier	strcmp		67715	0					
ANR	68498	ArgumentList	name		67715	1					
ANR	68499	Argument	name		67715	0					
ANR	68500	Identifier	name		67715	0					
ANR	68501	Argument	"""plugin"""		67715	1					
ANR	68502	PrimaryExpression	"""plugin"""		67715	0					
ANR	68503	PrimaryExpression	0		67715	1					
ANR	68504	CompoundStatement		100:52:3677:3677	67715	1					
ANR	68505	ExpressionStatement	conf . plugin = to_string ( value )	249:16:7374:7404	67715	0	True				
ANR	68506	AssignmentExpression	conf . plugin = to_string ( value )		67715	0		=			
ANR	68507	MemberAccess	conf . plugin		67715	0					
ANR	68508	Identifier	conf		67715	0					
ANR	68509	Identifier	plugin		67715	1					
ANR	68510	CallExpression	to_string ( value )		67715	1					
ANR	68511	Callee	to_string		67715	0					
ANR	68512	Identifier	to_string		67715	0					
ANR	68513	ArgumentList	value		67715	1					
ANR	68514	Argument	value		67715	0					
ANR	68515	Identifier	value		67715	0					
ANR	68516	IfStatement	if ( strlen ( conf . plugin ) == 0 )		67715	1					
ANR	68517	Condition	strlen ( conf . plugin ) == 0	250:20:7426:7449	67715	0	True				
ANR	68518	EqualityExpression	strlen ( conf . plugin ) == 0		67715	0		==			
ANR	68519	CallExpression	strlen ( conf . plugin )		67715	0					
ANR	68520	Callee	strlen		67715	0					
ANR	68521	Identifier	strlen		67715	0					
ANR	68522	ArgumentList	conf . plugin		67715	1					
ANR	68523	Argument	conf . plugin		67715	0					
ANR	68524	MemberAccess	conf . plugin		67715	0					
ANR	68525	Identifier	conf		67715	0					
ANR	68526	Identifier	plugin		67715	1					
ANR	68527	PrimaryExpression	0		67715	1					
ANR	68528	CompoundStatement		102:46:3773:3773	67715	1					
ANR	68529	ExpressionStatement	ss_free ( conf . plugin )	251:20:7474:7494	67715	0	True				
ANR	68530	CallExpression	ss_free ( conf . plugin )		67715	0					
ANR	68531	Callee	ss_free		67715	0					
ANR	68532	Identifier	ss_free		67715	0					
ANR	68533	ArgumentList	conf . plugin		67715	1					
ANR	68534	Argument	conf . plugin		67715	0					
ANR	68535	MemberAccess	conf . plugin		67715	0					
ANR	68536	Identifier	conf		67715	0					
ANR	68537	Identifier	plugin		67715	1					
ANR	68538	ExpressionStatement	conf . plugin = NULL	252:20:7516:7534	67715	1	True				
ANR	68539	AssignmentExpression	conf . plugin = NULL		67715	0		=			
ANR	68540	MemberAccess	conf . plugin		67715	0					
ANR	68541	Identifier	conf		67715	0					
ANR	68542	Identifier	plugin		67715	1					
ANR	68543	Identifier	NULL		67715	1					
ANR	68544	ElseStatement	else		67715	0					
ANR	68545	IfStatement	"if ( strcmp ( name , ""plugin_opts"" ) == 0 )"		67715	0					
ANR	68546	Condition	"strcmp ( name , ""plugin_opts"" ) == 0"	254:23:7577:7608	67715	0	True				
ANR	68547	EqualityExpression	"strcmp ( name , ""plugin_opts"" ) == 0"		67715	0		==			
ANR	68548	CallExpression	"strcmp ( name , ""plugin_opts"" )"		67715	0					
ANR	68549	Callee	strcmp		67715	0					
ANR	68550	Identifier	strcmp		67715	0					
ANR	68551	ArgumentList	name		67715	1					
ANR	68552	Argument	name		67715	0					
ANR	68553	Identifier	name		67715	0					
ANR	68554	Argument	"""plugin_opts"""		67715	1					
ANR	68555	PrimaryExpression	"""plugin_opts"""		67715	0					
ANR	68556	PrimaryExpression	0		67715	1					
ANR	68557	CompoundStatement		106:57:3932:3932	67715	1					
ANR	68558	ExpressionStatement	conf . plugin_opts = to_string ( value )	255:16:7629:7664	67715	0	True				
ANR	68559	AssignmentExpression	conf . plugin_opts = to_string ( value )		67715	0		=			
ANR	68560	MemberAccess	conf . plugin_opts		67715	0					
ANR	68561	Identifier	conf		67715	0					
ANR	68562	Identifier	plugin_opts		67715	1					
ANR	68563	CallExpression	to_string ( value )		67715	1					
ANR	68564	Callee	to_string		67715	0					
ANR	68565	Identifier	to_string		67715	0					
ANR	68566	ArgumentList	value		67715	1					
ANR	68567	Argument	value		67715	0					
ANR	68568	Identifier	value		67715	0					
ANR	68569	ElseStatement	else		67715	0					
ANR	68570	IfStatement	"if ( strcmp ( name , ""fast_open"" ) == 0 )"		67715	0					
ANR	68571	Condition	"strcmp ( name , ""fast_open"" ) == 0"	256:23:7689:7718	67715	0	True				
ANR	68572	EqualityExpression	"strcmp ( name , ""fast_open"" ) == 0"		67715	0		==			
ANR	68573	CallExpression	"strcmp ( name , ""fast_open"" )"		67715	0					
ANR	68574	Callee	strcmp		67715	0					
ANR	68575	Identifier	strcmp		67715	0					
ANR	68576	ArgumentList	name		67715	1					
ANR	68577	Argument	name		67715	0					
ANR	68578	Identifier	name		67715	0					
ANR	68579	Argument	"""fast_open"""		67715	1					
ANR	68580	PrimaryExpression	"""fast_open"""		67715	0					
ANR	68581	PrimaryExpression	0		67715	1					
ANR	68582	CompoundStatement		108:55:4042:4042	67715	1					
ANR	68583	ExpressionStatement	"check_json_value_type ( value , json_boolean , ""invalid config file: option 'fast_open' must be a boolean"" )"	257:16:7739:7866	67715	0	True				
ANR	68584	CallExpression	"check_json_value_type ( value , json_boolean , ""invalid config file: option 'fast_open' must be a boolean"" )"		67715	0					
ANR	68585	Callee	check_json_value_type		67715	0					
ANR	68586	Identifier	check_json_value_type		67715	0					
ANR	68587	ArgumentList	value		67715	1					
ANR	68588	Argument	value		67715	0					
ANR	68589	Identifier	value		67715	0					
ANR	68590	Argument	json_boolean		67715	1					
ANR	68591	Identifier	json_boolean		67715	0					
ANR	68592	Argument	"""invalid config file: option 'fast_open' must be a boolean"""		67715	2					
ANR	68593	PrimaryExpression	"""invalid config file: option 'fast_open' must be a boolean"""		67715	0					
ANR	68594	ExpressionStatement	conf . fast_open = value -> u . boolean	259:16:7884:7917	67715	1	True				
ANR	68595	AssignmentExpression	conf . fast_open = value -> u . boolean		67715	0		=			
ANR	68596	MemberAccess	conf . fast_open		67715	0					
ANR	68597	Identifier	conf		67715	0					
ANR	68598	Identifier	fast_open		67715	1					
ANR	68599	MemberAccess	value -> u . boolean		67715	1					
ANR	68600	PtrMemberAccess	value -> u		67715	0					
ANR	68601	Identifier	value		67715	0					
ANR	68602	Identifier	u		67715	1					
ANR	68603	Identifier	boolean		67715	1					
ANR	68604	ElseStatement	else		67715	0					
ANR	68605	IfStatement	"if ( strcmp ( name , ""reuse_port"" ) == 0 )"		67715	0					
ANR	68606	Condition	"strcmp ( name , ""reuse_port"" ) == 0"	260:23:7942:7972	67715	0	True				
ANR	68607	EqualityExpression	"strcmp ( name , ""reuse_port"" ) == 0"		67715	0		==			
ANR	68608	CallExpression	"strcmp ( name , ""reuse_port"" )"		67715	0					
ANR	68609	Callee	strcmp		67715	0					
ANR	68610	Identifier	strcmp		67715	0					
ANR	68611	ArgumentList	name		67715	1					
ANR	68612	Argument	name		67715	0					
ANR	68613	Identifier	name		67715	0					
ANR	68614	Argument	"""reuse_port"""		67715	1					
ANR	68615	PrimaryExpression	"""reuse_port"""		67715	0					
ANR	68616	PrimaryExpression	0		67715	1					
ANR	68617	CompoundStatement		112:56:4296:4296	67715	1					
ANR	68618	ExpressionStatement	"check_json_value_type ( value , json_boolean , ""invalid config file: option 'reuse_port' must be a boolean"" )"	261:16:7993:8121	67715	0	True				
ANR	68619	CallExpression	"check_json_value_type ( value , json_boolean , ""invalid config file: option 'reuse_port' must be a boolean"" )"		67715	0					
ANR	68620	Callee	check_json_value_type		67715	0					
ANR	68621	Identifier	check_json_value_type		67715	0					
ANR	68622	ArgumentList	value		67715	1					
ANR	68623	Argument	value		67715	0					
ANR	68624	Identifier	value		67715	0					
ANR	68625	Argument	json_boolean		67715	1					
ANR	68626	Identifier	json_boolean		67715	0					
ANR	68627	Argument	"""invalid config file: option 'reuse_port' must be a boolean"""		67715	2					
ANR	68628	PrimaryExpression	"""invalid config file: option 'reuse_port' must be a boolean"""		67715	0					
ANR	68629	ExpressionStatement	conf . reuse_port = value -> u . boolean	263:16:8139:8173	67715	1	True				
ANR	68630	AssignmentExpression	conf . reuse_port = value -> u . boolean		67715	0		=			
ANR	68631	MemberAccess	conf . reuse_port		67715	0					
ANR	68632	Identifier	conf		67715	0					
ANR	68633	Identifier	reuse_port		67715	1					
ANR	68634	MemberAccess	value -> u . boolean		67715	1					
ANR	68635	PtrMemberAccess	value -> u		67715	0					
ANR	68636	Identifier	value		67715	0					
ANR	68637	Identifier	u		67715	1					
ANR	68638	Identifier	boolean		67715	1					
ANR	68639	ElseStatement	else		67715	0					
ANR	68640	IfStatement	"if ( strcmp ( name , ""disable_sni"" ) == 0 )"		67715	0					
ANR	68641	Condition	"strcmp ( name , ""disable_sni"" ) == 0"	264:23:8198:8229	67715	0	True				
ANR	68642	EqualityExpression	"strcmp ( name , ""disable_sni"" ) == 0"		67715	0		==			
ANR	68643	CallExpression	"strcmp ( name , ""disable_sni"" )"		67715	0					
ANR	68644	Callee	strcmp		67715	0					
ANR	68645	Identifier	strcmp		67715	0					
ANR	68646	ArgumentList	name		67715	1					
ANR	68647	Argument	name		67715	0					
ANR	68648	Identifier	name		67715	0					
ANR	68649	Argument	"""disable_sni"""		67715	1					
ANR	68650	PrimaryExpression	"""disable_sni"""		67715	0					
ANR	68651	PrimaryExpression	0		67715	1					
ANR	68652	CompoundStatement		116:57:4553:4553	67715	1					
ANR	68653	ExpressionStatement	"check_json_value_type ( value , json_boolean , ""invalid config file: option 'disable_sni' must be a boolean"" )"	265:16:8250:8379	67715	0	True				
ANR	68654	CallExpression	"check_json_value_type ( value , json_boolean , ""invalid config file: option 'disable_sni' must be a boolean"" )"		67715	0					
ANR	68655	Callee	check_json_value_type		67715	0					
ANR	68656	Identifier	check_json_value_type		67715	0					
ANR	68657	ArgumentList	value		67715	1					
ANR	68658	Argument	value		67715	0					
ANR	68659	Identifier	value		67715	0					
ANR	68660	Argument	json_boolean		67715	1					
ANR	68661	Identifier	json_boolean		67715	0					
ANR	68662	Argument	"""invalid config file: option 'disable_sni' must be a boolean"""		67715	2					
ANR	68663	PrimaryExpression	"""invalid config file: option 'disable_sni' must be a boolean"""		67715	0					
ANR	68664	ExpressionStatement	conf . disable_sni = value -> u . boolean	267:16:8397:8432	67715	1	True				
ANR	68665	AssignmentExpression	conf . disable_sni = value -> u . boolean		67715	0		=			
ANR	68666	MemberAccess	conf . disable_sni		67715	0					
ANR	68667	Identifier	conf		67715	0					
ANR	68668	Identifier	disable_sni		67715	1					
ANR	68669	MemberAccess	value -> u . boolean		67715	1					
ANR	68670	PtrMemberAccess	value -> u		67715	0					
ANR	68671	Identifier	value		67715	0					
ANR	68672	Identifier	u		67715	1					
ANR	68673	Identifier	boolean		67715	1					
ANR	68674	ElseStatement	else		67715	0					
ANR	68675	IfStatement	"if ( strcmp ( name , ""auth"" ) == 0 )"		67715	0					
ANR	68676	Condition	"strcmp ( name , ""auth"" ) == 0"	268:23:8457:8481	67715	0	True				
ANR	68677	EqualityExpression	"strcmp ( name , ""auth"" ) == 0"		67715	0		==			
ANR	68678	CallExpression	"strcmp ( name , ""auth"" )"		67715	0					
ANR	68679	Callee	strcmp		67715	0					
ANR	68680	Identifier	strcmp		67715	0					
ANR	68681	ArgumentList	name		67715	1					
ANR	68682	Argument	name		67715	0					
ANR	68683	Identifier	name		67715	0					
ANR	68684	Argument	"""auth"""		67715	1					
ANR	68685	PrimaryExpression	"""auth"""		67715	0					
ANR	68686	PrimaryExpression	0		67715	1					
ANR	68687	CompoundStatement		120:50:4805:4805	67715	1					
ANR	68688	ExpressionStatement	"FATAL ( ""One time auth has been deprecated. Try AEAD ciphers instead."" )"	269:16:8502:8571	67715	0	True				
ANR	68689	CallExpression	"FATAL ( ""One time auth has been deprecated. Try AEAD ciphers instead."" )"		67715	0					
ANR	68690	Callee	FATAL		67715	0					
ANR	68691	Identifier	FATAL		67715	0					
ANR	68692	ArgumentList	"""One time auth has been deprecated. Try AEAD ciphers instead."""		67715	1					
ANR	68693	Argument	"""One time auth has been deprecated. Try AEAD ciphers instead."""		67715	0					
ANR	68694	PrimaryExpression	"""One time auth has been deprecated. Try AEAD ciphers instead."""		67715	0					
ANR	68695	ElseStatement	else		67715	0					
ANR	68696	IfStatement	"if ( strcmp ( name , ""nofile"" ) == 0 )"		67715	0					
ANR	68697	Condition	"strcmp ( name , ""nofile"" ) == 0"	270:23:8596:8622	67715	0	True				
ANR	68698	EqualityExpression	"strcmp ( name , ""nofile"" ) == 0"		67715	0		==			
ANR	68699	CallExpression	"strcmp ( name , ""nofile"" )"		67715	0					
ANR	68700	Callee	strcmp		67715	0					
ANR	68701	Identifier	strcmp		67715	0					
ANR	68702	ArgumentList	name		67715	1					
ANR	68703	Argument	name		67715	0					
ANR	68704	Identifier	name		67715	0					
ANR	68705	Argument	"""nofile"""		67715	1					
ANR	68706	PrimaryExpression	"""nofile"""		67715	0					
ANR	68707	PrimaryExpression	0		67715	1					
ANR	68708	CompoundStatement		122:52:4946:4946	67715	1					
ANR	68709	ExpressionStatement	"check_json_value_type ( value , json_integer , ""invalid config file: option 'nofile' must be an integer"" )"	271:16:8643:8764	67715	0	True				
ANR	68710	CallExpression	"check_json_value_type ( value , json_integer , ""invalid config file: option 'nofile' must be an integer"" )"		67715	0					
ANR	68711	Callee	check_json_value_type		67715	0					
ANR	68712	Identifier	check_json_value_type		67715	0					
ANR	68713	ArgumentList	value		67715	1					
ANR	68714	Argument	value		67715	0					
ANR	68715	Identifier	value		67715	0					
ANR	68716	Argument	json_integer		67715	1					
ANR	68717	Identifier	json_integer		67715	0					
ANR	68718	Argument	"""invalid config file: option 'nofile' must be an integer"""		67715	2					
ANR	68719	PrimaryExpression	"""invalid config file: option 'nofile' must be an integer"""		67715	0					
ANR	68720	ExpressionStatement	conf . nofile = value -> u . integer	273:16:8782:8812	67715	1	True				
ANR	68721	AssignmentExpression	conf . nofile = value -> u . integer		67715	0		=			
ANR	68722	MemberAccess	conf . nofile		67715	0					
ANR	68723	Identifier	conf		67715	0					
ANR	68724	Identifier	nofile		67715	1					
ANR	68725	MemberAccess	value -> u . integer		67715	1					
ANR	68726	PtrMemberAccess	value -> u		67715	0					
ANR	68727	Identifier	value		67715	0					
ANR	68728	Identifier	u		67715	1					
ANR	68729	Identifier	integer		67715	1					
ANR	68730	ElseStatement	else		67715	0					
ANR	68731	IfStatement	"if ( strcmp ( name , ""nameserver"" ) == 0 )"		67715	0					
ANR	68732	Condition	"strcmp ( name , ""nameserver"" ) == 0"	274:23:8837:8867	67715	0	True				
ANR	68733	EqualityExpression	"strcmp ( name , ""nameserver"" ) == 0"		67715	0		==			
ANR	68734	CallExpression	"strcmp ( name , ""nameserver"" )"		67715	0					
ANR	68735	Callee	strcmp		67715	0					
ANR	68736	Identifier	strcmp		67715	0					
ANR	68737	ArgumentList	name		67715	1					
ANR	68738	Argument	name		67715	0					
ANR	68739	Identifier	name		67715	0					
ANR	68740	Argument	"""nameserver"""		67715	1					
ANR	68741	PrimaryExpression	"""nameserver"""		67715	0					
ANR	68742	PrimaryExpression	0		67715	1					
ANR	68743	CompoundStatement		126:56:5191:5191	67715	1					
ANR	68744	ExpressionStatement	conf . nameserver = to_string ( value )	275:16:8888:8922	67715	0	True				
ANR	68745	AssignmentExpression	conf . nameserver = to_string ( value )		67715	0		=			
ANR	68746	MemberAccess	conf . nameserver		67715	0					
ANR	68747	Identifier	conf		67715	0					
ANR	68748	Identifier	nameserver		67715	1					
ANR	68749	CallExpression	to_string ( value )		67715	1					
ANR	68750	Callee	to_string		67715	0					
ANR	68751	Identifier	to_string		67715	0					
ANR	68752	ArgumentList	value		67715	1					
ANR	68753	Argument	value		67715	0					
ANR	68754	Identifier	value		67715	0					
ANR	68755	ElseStatement	else		67715	0					
ANR	68756	IfStatement	"if ( strcmp ( name , ""dscp"" ) == 0 )"		67715	0					
ANR	68757	Condition	"strcmp ( name , ""dscp"" ) == 0"	276:23:8947:8971	67715	0	True				
ANR	68758	EqualityExpression	"strcmp ( name , ""dscp"" ) == 0"		67715	0		==			
ANR	68759	CallExpression	"strcmp ( name , ""dscp"" )"		67715	0					
ANR	68760	Callee	strcmp		67715	0					
ANR	68761	Identifier	strcmp		67715	0					
ANR	68762	ArgumentList	name		67715	1					
ANR	68763	Argument	name		67715	0					
ANR	68764	Identifier	name		67715	0					
ANR	68765	Argument	"""dscp"""		67715	1					
ANR	68766	PrimaryExpression	"""dscp"""		67715	0					
ANR	68767	PrimaryExpression	0		67715	1					
ANR	68768	CompoundStatement		128:50:5295:5295	67715	1					
ANR	68769	IfStatement	if ( value -> type == json_object )		67715	0					
ANR	68770	Condition	value -> type == json_object	277:20:8996:9021	67715	0	True				
ANR	68771	EqualityExpression	value -> type == json_object		67715	0		==			
ANR	68772	PtrMemberAccess	value -> type		67715	0					
ANR	68773	Identifier	value		67715	0					
ANR	68774	Identifier	type		67715	1					
ANR	68775	Identifier	json_object		67715	1					
ANR	68776	CompoundStatement		129:48:5345:5345	67715	1					
ANR	68777	ForStatement	for ( j = 0 ; j < value -> u . object . length ; j ++ )		67715	0					
ANR	68778	ForInit	j = 0 ;	278:25:9051:9056	67715	0	True				
ANR	68779	AssignmentExpression	j = 0		67715	0		=			
ANR	68780	Identifier	j		67715	0					
ANR	68781	PrimaryExpression	0		67715	1					
ANR	68782	Condition	j < value -> u . object . length	278:32:9058:9083	67715	1	True				
ANR	68783	RelationalExpression	j < value -> u . object . length		67715	0		<			
ANR	68784	Identifier	j		67715	0					
ANR	68785	MemberAccess	value -> u . object . length		67715	1					
ANR	68786	MemberAccess	value -> u . object		67715	0					
ANR	68787	PtrMemberAccess	value -> u		67715	0					
ANR	68788	Identifier	value		67715	0					
ANR	68789	Identifier	u		67715	1					
ANR	68790	Identifier	object		67715	1					
ANR	68791	Identifier	length		67715	1					
ANR	68792	PostIncDecOperationExpression	j ++	278:60:9086:9088	67715	2	True				
ANR	68793	Identifier	j		67715	0					
ANR	68794	IncDec	++		67715	1					
ANR	68795	CompoundStatement		134:24:5548:5595	67715	3					
ANR	68796	IfStatement	if ( j >= MAX_DSCP_NUM )		67715	0					
ANR	68797	Condition	j >= MAX_DSCP_NUM	279:28:9121:9137	67715	0	True				
ANR	68798	RelationalExpression	j >= MAX_DSCP_NUM		67715	0		>=			
ANR	68799	Identifier	j		67715	0					
ANR	68800	Identifier	MAX_DSCP_NUM		67715	1					
ANR	68801	CompoundStatement		131:47:5461:5461	67715	1					
ANR	68802	BreakStatement	break ;	280:28:9170:9175	67715	0	True				
ANR	68803	IdentifierDeclStatement	json_value * v = value -> u . object . values [ j ] . value ;	282:24:9227:9274	67715	1	True				
ANR	68804	IdentifierDecl	* v = value -> u . object . values [ j ] . value		67715	0					
ANR	68805	IdentifierDeclType	json_value *		67715	0					
ANR	68806	Identifier	v		67715	1					
ANR	68807	AssignmentExpression	* v = value -> u . object . values [ j ] . value		67715	2		=			
ANR	68808	Identifier	v		67715	0					
ANR	68809	MemberAccess	value -> u . object . values [ j ] . value		67715	1					
ANR	68810	ArrayIndexing	value -> u . object . values [ j ]		67715	0					
ANR	68811	MemberAccess	value -> u . object . values		67715	0					
ANR	68812	MemberAccess	value -> u . object		67715	0					
ANR	68813	PtrMemberAccess	value -> u		67715	0					
ANR	68814	Identifier	value		67715	0					
ANR	68815	Identifier	u		67715	1					
ANR	68816	Identifier	object		67715	1					
ANR	68817	Identifier	values		67715	1					
ANR	68818	Identifier	j		67715	1					
ANR	68819	Identifier	value		67715	1					
ANR	68820	IfStatement	if ( v -> type == json_string )		67715	2					
ANR	68821	Condition	v -> type == json_string	283:28:9304:9325	67715	0	True				
ANR	68822	EqualityExpression	v -> type == json_string		67715	0		==			
ANR	68823	PtrMemberAccess	v -> type		67715	0					
ANR	68824	Identifier	v		67715	0					
ANR	68825	Identifier	type		67715	1					
ANR	68826	Identifier	json_string		67715	1					
ANR	68827	CompoundStatement		137:28:5744:5874	67715	1					
ANR	68828	IdentifierDeclStatement	int dscp = parse_dscp ( to_string ( v ) ) ;	284:28:9358:9393	67715	0	True				
ANR	68829	IdentifierDecl	dscp = parse_dscp ( to_string ( v ) )		67715	0					
ANR	68830	IdentifierDeclType	int		67715	0					
ANR	68831	Identifier	dscp		67715	1					
ANR	68832	AssignmentExpression	dscp = parse_dscp ( to_string ( v ) )		67715	2		=			
ANR	68833	Identifier	dscp		67715	0					
ANR	68834	CallExpression	parse_dscp ( to_string ( v ) )		67715	1					
ANR	68835	Callee	parse_dscp		67715	0					
ANR	68836	Identifier	parse_dscp		67715	0					
ANR	68837	ArgumentList	to_string ( v )		67715	1					
ANR	68838	Argument	to_string ( v )		67715	0					
ANR	68839	CallExpression	to_string ( v )		67715	0					
ANR	68840	Callee	to_string		67715	0					
ANR	68841	Identifier	to_string		67715	0					
ANR	68842	ArgumentList	v		67715	1					
ANR	68843	Argument	v		67715	0					
ANR	68844	Identifier	v		67715	0					
ANR	68845	IdentifierDeclStatement	"char * port = ss_strndup ( value -> u . object . values [ j ] . name , value -> u . object . values [ j ] . name_length ) ;"	285:28:9423:9553	67715	1	True				
ANR	68846	IdentifierDecl	"* port = ss_strndup ( value -> u . object . values [ j ] . name , value -> u . object . values [ j ] . name_length )"		67715	0					
ANR	68847	IdentifierDeclType	char *		67715	0					
ANR	68848	Identifier	port		67715	1					
ANR	68849	AssignmentExpression	"* port = ss_strndup ( value -> u . object . values [ j ] . name , value -> u . object . values [ j ] . name_length )"		67715	2		=			
ANR	68850	Identifier	port		67715	0					
ANR	68851	CallExpression	"ss_strndup ( value -> u . object . values [ j ] . name , value -> u . object . values [ j ] . name_length )"		67715	1					
ANR	68852	Callee	ss_strndup		67715	0					
ANR	68853	Identifier	ss_strndup		67715	0					
ANR	68854	ArgumentList	value -> u . object . values [ j ] . name		67715	1					
ANR	68855	Argument	value -> u . object . values [ j ] . name		67715	0					
ANR	68856	MemberAccess	value -> u . object . values [ j ] . name		67715	0					
ANR	68857	ArrayIndexing	value -> u . object . values [ j ]		67715	0					
ANR	68858	MemberAccess	value -> u . object . values		67715	0					
ANR	68859	MemberAccess	value -> u . object		67715	0					
ANR	68860	PtrMemberAccess	value -> u		67715	0					
ANR	68861	Identifier	value		67715	0					
ANR	68862	Identifier	u		67715	1					
ANR	68863	Identifier	object		67715	1					
ANR	68864	Identifier	values		67715	1					
ANR	68865	Identifier	j		67715	1					
ANR	68866	Identifier	name		67715	1					
ANR	68867	Argument	value -> u . object . values [ j ] . name_length		67715	1					
ANR	68868	MemberAccess	value -> u . object . values [ j ] . name_length		67715	0					
ANR	68869	ArrayIndexing	value -> u . object . values [ j ]		67715	0					
ANR	68870	MemberAccess	value -> u . object . values		67715	0					
ANR	68871	MemberAccess	value -> u . object		67715	0					
ANR	68872	PtrMemberAccess	value -> u		67715	0					
ANR	68873	Identifier	value		67715	0					
ANR	68874	Identifier	u		67715	1					
ANR	68875	Identifier	object		67715	1					
ANR	68876	Identifier	values		67715	1					
ANR	68877	Identifier	j		67715	1					
ANR	68878	Identifier	name_length		67715	1					
ANR	68879	ExpressionStatement	conf . dscp [ j ] . port = port	287:28:9583:9607	67715	2	True				
ANR	68880	AssignmentExpression	conf . dscp [ j ] . port = port		67715	0		=			
ANR	68881	MemberAccess	conf . dscp [ j ] . port		67715	0					
ANR	68882	ArrayIndexing	conf . dscp [ j ]		67715	0					
ANR	68883	MemberAccess	conf . dscp		67715	0					
ANR	68884	Identifier	conf		67715	0					
ANR	68885	Identifier	dscp		67715	1					
ANR	68886	Identifier	j		67715	1					
ANR	68887	Identifier	port		67715	1					
ANR	68888	Identifier	port		67715	1					
ANR	68889	ExpressionStatement	conf . dscp [ j ] . dscp = dscp	288:28:9637:9661	67715	3	True				
ANR	68890	AssignmentExpression	conf . dscp [ j ] . dscp = dscp		67715	0		=			
ANR	68891	MemberAccess	conf . dscp [ j ] . dscp		67715	0					
ANR	68892	ArrayIndexing	conf . dscp [ j ]		67715	0					
ANR	68893	MemberAccess	conf . dscp		67715	0					
ANR	68894	Identifier	conf		67715	0					
ANR	68895	Identifier	dscp		67715	1					
ANR	68896	Identifier	j		67715	1					
ANR	68897	Identifier	dscp		67715	1					
ANR	68898	Identifier	dscp		67715	1					
ANR	68899	ExpressionStatement	conf . dscp_num = j + 1	289:28:9691:9712	67715	4	True				
ANR	68900	AssignmentExpression	conf . dscp_num = j + 1		67715	0		=			
ANR	68901	MemberAccess	conf . dscp_num		67715	0					
ANR	68902	Identifier	conf		67715	0					
ANR	68903	Identifier	dscp_num		67715	1					
ANR	68904	AdditiveExpression	j + 1		67715	1		+			
ANR	68905	Identifier	j		67715	0					
ANR	68906	PrimaryExpression	1		67715	1					
ANR	68907	ElseStatement	else		67715	0					
ANR	68908	IfStatement	"if ( strcmp ( name , ""tunnel_address"" ) == 0 )"		67715	0					
ANR	68909	Condition	"strcmp ( name , ""tunnel_address"" ) == 0"	293:23:9803:9837	67715	0	True				
ANR	68910	EqualityExpression	"strcmp ( name , ""tunnel_address"" ) == 0"		67715	0		==			
ANR	68911	CallExpression	"strcmp ( name , ""tunnel_address"" )"		67715	0					
ANR	68912	Callee	strcmp		67715	0					
ANR	68913	Identifier	strcmp		67715	0					
ANR	68914	ArgumentList	name		67715	1					
ANR	68915	Argument	name		67715	0					
ANR	68916	Identifier	name		67715	0					
ANR	68917	Argument	"""tunnel_address"""		67715	1					
ANR	68918	PrimaryExpression	"""tunnel_address"""		67715	0					
ANR	68919	PrimaryExpression	0		67715	1					
ANR	68920	CompoundStatement		145:60:6161:6161	67715	1					
ANR	68921	ExpressionStatement	conf . tunnel_address = to_string ( value )	294:16:9858:9896	67715	0	True				
ANR	68922	AssignmentExpression	conf . tunnel_address = to_string ( value )		67715	0		=			
ANR	68923	MemberAccess	conf . tunnel_address		67715	0					
ANR	68924	Identifier	conf		67715	0					
ANR	68925	Identifier	tunnel_address		67715	1					
ANR	68926	CallExpression	to_string ( value )		67715	1					
ANR	68927	Callee	to_string		67715	0					
ANR	68928	Identifier	to_string		67715	0					
ANR	68929	ArgumentList	value		67715	1					
ANR	68930	Argument	value		67715	0					
ANR	68931	Identifier	value		67715	0					
ANR	68932	ElseStatement	else		67715	0					
ANR	68933	IfStatement	"if ( strcmp ( name , ""mode"" ) == 0 )"		67715	0					
ANR	68934	Condition	"strcmp ( name , ""mode"" ) == 0"	295:23:9921:9945	67715	0	True				
ANR	68935	EqualityExpression	"strcmp ( name , ""mode"" ) == 0"		67715	0		==			
ANR	68936	CallExpression	"strcmp ( name , ""mode"" )"		67715	0					
ANR	68937	Callee	strcmp		67715	0					
ANR	68938	Identifier	strcmp		67715	0					
ANR	68939	ArgumentList	name		67715	1					
ANR	68940	Argument	name		67715	0					
ANR	68941	Identifier	name		67715	0					
ANR	68942	Argument	"""mode"""		67715	1					
ANR	68943	PrimaryExpression	"""mode"""		67715	0					
ANR	68944	PrimaryExpression	0		67715	1					
ANR	68945	CompoundStatement		148:16:6287:6320	67715	1					
ANR	68946	IdentifierDeclStatement	char * mode_str = to_string ( value ) ;	296:16:9966:9999	67715	0	True				
ANR	68947	IdentifierDecl	* mode_str = to_string ( value )		67715	0					
ANR	68948	IdentifierDeclType	char *		67715	0					
ANR	68949	Identifier	mode_str		67715	1					
ANR	68950	AssignmentExpression	* mode_str = to_string ( value )		67715	2		=			
ANR	68951	Identifier	mode_str		67715	0					
ANR	68952	CallExpression	to_string ( value )		67715	1					
ANR	68953	Callee	to_string		67715	0					
ANR	68954	Identifier	to_string		67715	0					
ANR	68955	ArgumentList	value		67715	1					
ANR	68956	Argument	value		67715	0					
ANR	68957	Identifier	value		67715	0					
ANR	68958	IfStatement	"if ( strcmp ( mode_str , ""tcp_only"" ) == 0 )"		67715	1					
ANR	68959	Condition	"strcmp ( mode_str , ""tcp_only"" ) == 0"	298:20:10022:10054	67715	0	True				
ANR	68960	EqualityExpression	"strcmp ( mode_str , ""tcp_only"" ) == 0"		67715	0		==			
ANR	68961	CallExpression	"strcmp ( mode_str , ""tcp_only"" )"		67715	0					
ANR	68962	Callee	strcmp		67715	0					
ANR	68963	Identifier	strcmp		67715	0					
ANR	68964	ArgumentList	mode_str		67715	1					
ANR	68965	Argument	mode_str		67715	0					
ANR	68966	Identifier	mode_str		67715	0					
ANR	68967	Argument	"""tcp_only"""		67715	1					
ANR	68968	PrimaryExpression	"""tcp_only"""		67715	0					
ANR	68969	PrimaryExpression	0		67715	1					
ANR	68970	ExpressionStatement	conf . mode = TCP_ONLY	299:20:10077:10097	67715	1	True				
ANR	68971	AssignmentExpression	conf . mode = TCP_ONLY		67715	0		=			
ANR	68972	MemberAccess	conf . mode		67715	0					
ANR	68973	Identifier	conf		67715	0					
ANR	68974	Identifier	mode		67715	1					
ANR	68975	Identifier	TCP_ONLY		67715	1					
ANR	68976	ElseStatement	else		67715	0					
ANR	68977	IfStatement	"if ( strcmp ( mode_str , ""tcp_and_udp"" ) == 0 )"		67715	0					
ANR	68978	Condition	"strcmp ( mode_str , ""tcp_and_udp"" ) == 0"	300:25:10124:10159	67715	0	True				
ANR	68979	EqualityExpression	"strcmp ( mode_str , ""tcp_and_udp"" ) == 0"		67715	0		==			
ANR	68980	CallExpression	"strcmp ( mode_str , ""tcp_and_udp"" )"		67715	0					
ANR	68981	Callee	strcmp		67715	0					
ANR	68982	Identifier	strcmp		67715	0					
ANR	68983	ArgumentList	mode_str		67715	1					
ANR	68984	Argument	mode_str		67715	0					
ANR	68985	Identifier	mode_str		67715	0					
ANR	68986	Argument	"""tcp_and_udp"""		67715	1					
ANR	68987	PrimaryExpression	"""tcp_and_udp"""		67715	0					
ANR	68988	PrimaryExpression	0		67715	1					
ANR	68989	ExpressionStatement	conf . mode = TCP_AND_UDP	301:20:10182:10205	67715	1	True				
ANR	68990	AssignmentExpression	conf . mode = TCP_AND_UDP		67715	0		=			
ANR	68991	MemberAccess	conf . mode		67715	0					
ANR	68992	Identifier	conf		67715	0					
ANR	68993	Identifier	mode		67715	1					
ANR	68994	Identifier	TCP_AND_UDP		67715	1					
ANR	68995	ElseStatement	else		67715	0					
ANR	68996	IfStatement	"if ( strcmp ( mode_str , ""udp_only"" ) == 0 )"		67715	0					
ANR	68997	Condition	"strcmp ( mode_str , ""udp_only"" ) == 0"	302:25:10232:10264	67715	0	True				
ANR	68998	EqualityExpression	"strcmp ( mode_str , ""udp_only"" ) == 0"		67715	0		==			
ANR	68999	CallExpression	"strcmp ( mode_str , ""udp_only"" )"		67715	0					
ANR	69000	Callee	strcmp		67715	0					
ANR	69001	Identifier	strcmp		67715	0					
ANR	69002	ArgumentList	mode_str		67715	1					
ANR	69003	Argument	mode_str		67715	0					
ANR	69004	Identifier	mode_str		67715	0					
ANR	69005	Argument	"""udp_only"""		67715	1					
ANR	69006	PrimaryExpression	"""udp_only"""		67715	0					
ANR	69007	PrimaryExpression	0		67715	1					
ANR	69008	ExpressionStatement	conf . mode = UDP_ONLY	303:20:10287:10307	67715	1	True				
ANR	69009	AssignmentExpression	conf . mode = UDP_ONLY		67715	0		=			
ANR	69010	MemberAccess	conf . mode		67715	0					
ANR	69011	Identifier	conf		67715	0					
ANR	69012	Identifier	mode		67715	1					
ANR	69013	Identifier	UDP_ONLY		67715	1					
ANR	69014	ElseStatement	else		67715	0					
ANR	69015	ExpressionStatement	"LOGI ( ""ignore unknown mode: %s, use tcp_only as fallback"" , mode_str )"	305:20:10350:10442	67715	0	True				
ANR	69016	CallExpression	"LOGI ( ""ignore unknown mode: %s, use tcp_only as fallback"" , mode_str )"		67715	0					
ANR	69017	Callee	LOGI		67715	0					
ANR	69018	Identifier	LOGI		67715	0					
ANR	69019	ArgumentList	"""ignore unknown mode: %s, use tcp_only as fallback"""		67715	1					
ANR	69020	Argument	"""ignore unknown mode: %s, use tcp_only as fallback"""		67715	0					
ANR	69021	PrimaryExpression	"""ignore unknown mode: %s, use tcp_only as fallback"""		67715	0					
ANR	69022	Argument	mode_str		67715	1					
ANR	69023	Identifier	mode_str		67715	0					
ANR	69024	ExpressionStatement	ss_free ( mode_str )	307:16:10460:10477	67715	2	True				
ANR	69025	CallExpression	ss_free ( mode_str )		67715	0					
ANR	69026	Callee	ss_free		67715	0					
ANR	69027	Identifier	ss_free		67715	0					
ANR	69028	ArgumentList	mode_str		67715	1					
ANR	69029	Argument	mode_str		67715	0					
ANR	69030	Identifier	mode_str		67715	0					
ANR	69031	ElseStatement	else		67715	0					
ANR	69032	IfStatement	"if ( strcmp ( name , ""mtu"" ) == 0 )"		67715	0					
ANR	69033	Condition	"strcmp ( name , ""mtu"" ) == 0"	308:23:10502:10525	67715	0	True				
ANR	69034	EqualityExpression	"strcmp ( name , ""mtu"" ) == 0"		67715	0		==			
ANR	69035	CallExpression	"strcmp ( name , ""mtu"" )"		67715	0					
ANR	69036	Callee	strcmp		67715	0					
ANR	69037	Identifier	strcmp		67715	0					
ANR	69038	ArgumentList	name		67715	1					
ANR	69039	Argument	name		67715	0					
ANR	69040	Identifier	name		67715	0					
ANR	69041	Argument	"""mtu"""		67715	1					
ANR	69042	PrimaryExpression	"""mtu"""		67715	0					
ANR	69043	PrimaryExpression	0		67715	1					
ANR	69044	CompoundStatement		160:49:6849:6849	67715	1					
ANR	69045	ExpressionStatement	"check_json_value_type ( value , json_integer , ""invalid config file: option 'mtu' must be an integer"" )"	309:16:10546:10664	67715	0	True				
ANR	69046	CallExpression	"check_json_value_type ( value , json_integer , ""invalid config file: option 'mtu' must be an integer"" )"		67715	0					
ANR	69047	Callee	check_json_value_type		67715	0					
ANR	69048	Identifier	check_json_value_type		67715	0					
ANR	69049	ArgumentList	value		67715	1					
ANR	69050	Argument	value		67715	0					
ANR	69051	Identifier	value		67715	0					
ANR	69052	Argument	json_integer		67715	1					
ANR	69053	Identifier	json_integer		67715	0					
ANR	69054	Argument	"""invalid config file: option 'mtu' must be an integer"""		67715	2					
ANR	69055	PrimaryExpression	"""invalid config file: option 'mtu' must be an integer"""		67715	0					
ANR	69056	ExpressionStatement	conf . mtu = value -> u . integer	311:16:10682:10709	67715	1	True				
ANR	69057	AssignmentExpression	conf . mtu = value -> u . integer		67715	0		=			
ANR	69058	MemberAccess	conf . mtu		67715	0					
ANR	69059	Identifier	conf		67715	0					
ANR	69060	Identifier	mtu		67715	1					
ANR	69061	MemberAccess	value -> u . integer		67715	1					
ANR	69062	PtrMemberAccess	value -> u		67715	0					
ANR	69063	Identifier	value		67715	0					
ANR	69064	Identifier	u		67715	1					
ANR	69065	Identifier	integer		67715	1					
ANR	69066	ElseStatement	else		67715	0					
ANR	69067	IfStatement	"if ( strcmp ( name , ""mptcp"" ) == 0 )"		67715	0					
ANR	69068	Condition	"strcmp ( name , ""mptcp"" ) == 0"	312:23:10734:10759	67715	0	True				
ANR	69069	EqualityExpression	"strcmp ( name , ""mptcp"" ) == 0"		67715	0		==			
ANR	69070	CallExpression	"strcmp ( name , ""mptcp"" )"		67715	0					
ANR	69071	Callee	strcmp		67715	0					
ANR	69072	Identifier	strcmp		67715	0					
ANR	69073	ArgumentList	name		67715	1					
ANR	69074	Argument	name		67715	0					
ANR	69075	Identifier	name		67715	0					
ANR	69076	Argument	"""mptcp"""		67715	1					
ANR	69077	PrimaryExpression	"""mptcp"""		67715	0					
ANR	69078	PrimaryExpression	0		67715	1					
ANR	69079	CompoundStatement		164:51:7083:7083	67715	1					
ANR	69080	ExpressionStatement	"check_json_value_type ( value , json_boolean , ""invalid config file: option 'mptcp' must be a boolean"" )"	313:16:10780:10899	67715	0	True				
ANR	69081	CallExpression	"check_json_value_type ( value , json_boolean , ""invalid config file: option 'mptcp' must be a boolean"" )"		67715	0					
ANR	69082	Callee	check_json_value_type		67715	0					
ANR	69083	Identifier	check_json_value_type		67715	0					
ANR	69084	ArgumentList	value		67715	1					
ANR	69085	Argument	value		67715	0					
ANR	69086	Identifier	value		67715	0					
ANR	69087	Argument	json_boolean		67715	1					
ANR	69088	Identifier	json_boolean		67715	0					
ANR	69089	Argument	"""invalid config file: option 'mptcp' must be a boolean"""		67715	2					
ANR	69090	PrimaryExpression	"""invalid config file: option 'mptcp' must be a boolean"""		67715	0					
ANR	69091	ExpressionStatement	conf . mptcp = value -> u . boolean	315:16:10917:10946	67715	1	True				
ANR	69092	AssignmentExpression	conf . mptcp = value -> u . boolean		67715	0		=			
ANR	69093	MemberAccess	conf . mptcp		67715	0					
ANR	69094	Identifier	conf		67715	0					
ANR	69095	Identifier	mptcp		67715	1					
ANR	69096	MemberAccess	value -> u . boolean		67715	1					
ANR	69097	PtrMemberAccess	value -> u		67715	0					
ANR	69098	Identifier	value		67715	0					
ANR	69099	Identifier	u		67715	1					
ANR	69100	Identifier	boolean		67715	1					
ANR	69101	ElseStatement	else		67715	0					
ANR	69102	IfStatement	"if ( strcmp ( name , ""ipv6_first"" ) == 0 )"		67715	0					
ANR	69103	Condition	"strcmp ( name , ""ipv6_first"" ) == 0"	316:23:10971:11001	67715	0	True				
ANR	69104	EqualityExpression	"strcmp ( name , ""ipv6_first"" ) == 0"		67715	0		==			
ANR	69105	CallExpression	"strcmp ( name , ""ipv6_first"" )"		67715	0					
ANR	69106	Callee	strcmp		67715	0					
ANR	69107	Identifier	strcmp		67715	0					
ANR	69108	ArgumentList	name		67715	1					
ANR	69109	Argument	name		67715	0					
ANR	69110	Identifier	name		67715	0					
ANR	69111	Argument	"""ipv6_first"""		67715	1					
ANR	69112	PrimaryExpression	"""ipv6_first"""		67715	0					
ANR	69113	PrimaryExpression	0		67715	1					
ANR	69114	CompoundStatement		168:56:7325:7325	67715	1					
ANR	69115	ExpressionStatement	"check_json_value_type ( value , json_boolean , ""invalid config file: option 'ipv6_first' must be a boolean"" )"	317:16:11022:11146	67715	0	True				
ANR	69116	CallExpression	"check_json_value_type ( value , json_boolean , ""invalid config file: option 'ipv6_first' must be a boolean"" )"		67715	0					
ANR	69117	Callee	check_json_value_type		67715	0					
ANR	69118	Identifier	check_json_value_type		67715	0					
ANR	69119	ArgumentList	value		67715	1					
ANR	69120	Argument	value		67715	0					
ANR	69121	Identifier	value		67715	0					
ANR	69122	Argument	json_boolean		67715	1					
ANR	69123	Identifier	json_boolean		67715	0					
ANR	69124	Argument	"""invalid config file: option 'ipv6_first' must be a boolean"""		67715	2					
ANR	69125	PrimaryExpression	"""invalid config file: option 'ipv6_first' must be a boolean"""		67715	0					
ANR	69126	ExpressionStatement	conf . ipv6_first = value -> u . boolean	319:16:11164:11198	67715	1	True				
ANR	69127	AssignmentExpression	conf . ipv6_first = value -> u . boolean		67715	0		=			
ANR	69128	MemberAccess	conf . ipv6_first		67715	0					
ANR	69129	Identifier	conf		67715	0					
ANR	69130	Identifier	ipv6_first		67715	1					
ANR	69131	MemberAccess	value -> u . boolean		67715	1					
ANR	69132	PtrMemberAccess	value -> u		67715	0					
ANR	69133	Identifier	value		67715	0					
ANR	69134	Identifier	u		67715	1					
ANR	69135	Identifier	boolean		67715	1					
ANR	69136	ElseStatement	else		67715	0					
ANR	69137	IfStatement	"if ( strcmp ( name , ""use_syslog"" ) == 0 )"		67715	0					
ANR	69138	Condition	"strcmp ( name , ""use_syslog"" ) == 0"	321:23:11241:11271	67715	0	True				
ANR	69139	EqualityExpression	"strcmp ( name , ""use_syslog"" ) == 0"		67715	0		==			
ANR	69140	CallExpression	"strcmp ( name , ""use_syslog"" )"		67715	0					
ANR	69141	Callee	strcmp		67715	0					
ANR	69142	Identifier	strcmp		67715	0					
ANR	69143	ArgumentList	name		67715	1					
ANR	69144	Argument	name		67715	0					
ANR	69145	Identifier	name		67715	0					
ANR	69146	Argument	"""use_syslog"""		67715	1					
ANR	69147	PrimaryExpression	"""use_syslog"""		67715	0					
ANR	69148	PrimaryExpression	0		67715	1					
ANR	69149	CompoundStatement		173:56:7595:7595	67715	1					
ANR	69150	ExpressionStatement	"check_json_value_type ( value , json_boolean , ""invalid config file: option 'use_syslog' must be a boolean"" )"	322:16:11292:11416	67715	0	True				
ANR	69151	CallExpression	"check_json_value_type ( value , json_boolean , ""invalid config file: option 'use_syslog' must be a boolean"" )"		67715	0					
ANR	69152	Callee	check_json_value_type		67715	0					
ANR	69153	Identifier	check_json_value_type		67715	0					
ANR	69154	ArgumentList	value		67715	1					
ANR	69155	Argument	value		67715	0					
ANR	69156	Identifier	value		67715	0					
ANR	69157	Argument	json_boolean		67715	1					
ANR	69158	Identifier	json_boolean		67715	0					
ANR	69159	Argument	"""invalid config file: option 'use_syslog' must be a boolean"""		67715	2					
ANR	69160	PrimaryExpression	"""invalid config file: option 'use_syslog' must be a boolean"""		67715	0					
ANR	69161	ExpressionStatement	use_syslog = value -> u . boolean	324:16:11434:11463	67715	1	True				
ANR	69162	AssignmentExpression	use_syslog = value -> u . boolean		67715	0		=			
ANR	69163	Identifier	use_syslog		67715	0					
ANR	69164	MemberAccess	value -> u . boolean		67715	1					
ANR	69165	PtrMemberAccess	value -> u		67715	0					
ANR	69166	Identifier	value		67715	0					
ANR	69167	Identifier	u		67715	1					
ANR	69168	Identifier	boolean		67715	1					
ANR	69169	ElseStatement	else		67715	0					
ANR	69170	CompoundStatement		180:11:7828:7828	67715	0					
ANR	69171	ExpressionStatement	"FATAL ( ""Invalid config file"" )"	329:8:11517:11545	67715	0	True				
ANR	69172	CallExpression	"FATAL ( ""Invalid config file"" )"		67715	0					
ANR	69173	Callee	FATAL		67715	0					
ANR	69174	Identifier	FATAL		67715	0					
ANR	69175	ArgumentList	"""Invalid config file"""		67715	1					
ANR	69176	Argument	"""Invalid config file"""		67715	0					
ANR	69177	PrimaryExpression	"""Invalid config file"""		67715	0					
ANR	69178	ExpressionStatement	ss_free ( buf )	332:4:11558:11570	67715	23	True				
ANR	69179	CallExpression	ss_free ( buf )		67715	0					
ANR	69180	Callee	ss_free		67715	0					
ANR	69181	Identifier	ss_free		67715	0					
ANR	69182	ArgumentList	buf		67715	1					
ANR	69183	Argument	buf		67715	0					
ANR	69184	Identifier	buf		67715	0					
ANR	69185	ExpressionStatement	json_value_free ( obj )	333:4:11576:11596	67715	24	True				
ANR	69186	CallExpression	json_value_free ( obj )		67715	0					
ANR	69187	Callee	json_value_free		67715	0					
ANR	69188	Identifier	json_value_free		67715	0					
ANR	69189	ArgumentList	obj		67715	1					
ANR	69190	Argument	obj		67715	0					
ANR	69191	Identifier	obj		67715	0					
ANR	69192	ReturnStatement	return & conf ;	334:4:11602:11614	67715	25	True				
ANR	69193	UnaryOperationExpression	& conf		67715	0					
ANR	69194	UnaryOperator	&		67715	0					
ANR	69195	Identifier	conf		67715	1					
ANR	69196	ReturnType	jconf_t *		67715	1					
ANR	69197	Identifier	read_jconf		67715	2					
ANR	69198	ParameterList	const char * file		67715	3					
ANR	69199	Parameter	const char * file	148:11:3660:3675	67715	0	True				
ANR	69200	ParameterType	const char *		67715	0					
ANR	69201	Identifier	file		67715	1					
ANR	69202	CFGEntryNode	ENTRY		67715		True				
ANR	69203	CFGExitNode	EXIT		67715		True				
ANR	69204	Symbol	* v		67715						
ANR	69205	Symbol	conf . mtu		67715						
ANR	69206	Symbol	MAX_PORT_NUM		67715						
ANR	69207	Symbol	conf		67715						
ANR	69208	Symbol	conf . remote_addr		67715						
ANR	69209	Symbol	dscp		67715						
ANR	69210	Symbol	error_buf		67715						
ANR	69211	Symbol	value -> u . integer		67715						
ANR	69212	Symbol	& conf		67715						
ANR	69213	Symbol	json_array		67715						
ANR	69214	Symbol	obj -> type		67715						
ANR	69215	Symbol	* conf . dscp		67715						
ANR	69216	Symbol	* buf		67715						
ANR	69217	Symbol	value -> u		67715						
ANR	69218	Symbol	json_boolean		67715						
ANR	69219	Symbol	* obj -> u . object . values		67715						
ANR	69220	Symbol	* value -> u		67715						
ANR	69221	Symbol	json_integer		67715						
ANR	69222	Symbol	conf . dscp_num		67715						
ANR	69223	Symbol	& settings		67715						
ANR	69224	Symbol	json_string		67715						
ANR	69225	Symbol	conf . timeout		67715						
ANR	69226	Symbol	fread		67715						
ANR	69227	Symbol	obj -> u		67715						
ANR	69228	Symbol	obj -> u . object		67715						
ANR	69229	Symbol	MAX_REMOTE_NUM		67715						
ANR	69230	Symbol	conf . password		67715						
ANR	69231	Symbol	conf . remote_num		67715						
ANR	69232	Symbol	conf . fast_open		67715						
ANR	69233	Symbol	TCP_AND_UDP		67715						
ANR	69234	Symbol	* conf . remote_addr		67715						
ANR	69235	Symbol	* pos		67715						
ANR	69236	Symbol	conf . method		67715						
ANR	69237	Symbol	UDP_ONLY		67715						
ANR	69238	Symbol	nread		67715						
ANR	69239	Symbol	conf . tunnel_address		67715						
ANR	69240	Symbol	* * obj		67715						
ANR	69241	Symbol	conf . user		67715						
ANR	69242	Symbol	conf . reuse_port		67715						
ANR	69243	Symbol	file		67715						
ANR	69244	Symbol	conf . remote_addr [ 0 ] . port		67715						
ANR	69245	Symbol	obj -> u . object . values [ i ] . name		67715						
ANR	69246	Symbol	pos		67715						
ANR	69247	Symbol	conf . dscp [ j ] . port		67715						
ANR	69248	Symbol	value -> u . object . values [ j ] . name_length		67715						
ANR	69249	Symbol	fopen		67715						
ANR	69250	Symbol	* obj		67715						
ANR	69251	Symbol	value -> u . array . length		67715						
ANR	69252	Symbol	f		67715						
ANR	69253	Symbol	* * value		67715						
ANR	69254	Symbol	i		67715						
ANR	69255	Symbol	j		67715						
ANR	69256	Symbol	obj -> u . object . values		67715						
ANR	69257	Symbol	* value -> u . object . values		67715						
ANR	69258	Symbol	conf . nofile		67715						
ANR	69259	Symbol	TCP_ONLY		67715						
ANR	69260	Symbol	SEEK_END		67715						
ANR	69261	Symbol	v -> type		67715						
ANR	69262	Symbol	buf		67715						
ANR	69263	Symbol	value -> u . object		67715						
ANR	69264	Symbol	conf . port_password [ j ] . password		67715						
ANR	69265	Symbol	conf . mode		67715						
ANR	69266	Symbol	v		67715						
ANR	69267	Symbol	* value -> u . array		67715						
ANR	69268	Symbol	ss_malloc		67715						
ANR	69269	Symbol	obj -> u . object . length		67715						
ANR	69270	Symbol	obj -> u . object . values [ i ] . value		67715						
ANR	69271	Symbol	mode_str		67715						
ANR	69272	Symbol	ss_strndup		67715						
ANR	69273	Symbol	value -> u . object . values [ j ] . name		67715						
ANR	69274	Symbol	strlen		67715						
ANR	69275	Symbol	conf . nameserver		67715						
ANR	69276	Symbol	value -> u . array . values		67715						
ANR	69277	Symbol	conf . dscp [ j ] . dscp		67715						
ANR	69278	Symbol	* obj -> u		67715						
ANR	69279	Symbol	conf . plugin_opts		67715						
ANR	69280	Symbol	strcmp		67715						
ANR	69281	Symbol	settings		67715						
ANR	69282	Symbol	conf . port_password [ j ] . port		67715						
ANR	69283	Symbol	NULL		67715						
ANR	69284	Symbol	value -> u . object . length		67715						
ANR	69285	Symbol	conf . plugin		67715						
ANR	69286	Symbol	conf . remote_addr [ 0 ] . host		67715						
ANR	69287	Symbol	conf . local_port		67715						
ANR	69288	Symbol	value -> u . object . values [ j ] . value		67715						
ANR	69289	Symbol	conf . key		67715						
ANR	69290	Symbol	port		67715						
ANR	69291	Symbol	conf . port_password		67715						
ANR	69292	Symbol	name		67715						
ANR	69293	Symbol	addr_str		67715						
ANR	69294	Symbol	conf . remote_port		67715						
ANR	69295	Symbol	conf . port_password_num		67715						
ANR	69296	Symbol	value -> type		67715						
ANR	69297	Symbol	use_syslog		67715						
ANR	69298	Symbol	to_string		67715						
ANR	69299	Symbol	json_parse_ex		67715						
ANR	69300	Symbol	MAX_CONF_SIZE		67715						
ANR	69301	Symbol	ftell		67715						
ANR	69302	Symbol	* conf		67715						
ANR	69303	Symbol	conf . ipv6_first		67715						
ANR	69304	Symbol	value -> u . object . values		67715						
ANR	69305	Symbol	conf . dscp		67715						
ANR	69306	Symbol	* conf . port_password		67715						
ANR	69307	Symbol	parse_dscp		67715						
ANR	69308	Symbol	conf . local_addr		67715						
ANR	69309	Symbol	value -> u . boolean		67715						
ANR	69310	Symbol	value -> u . array		67715						
ANR	69311	Symbol	value		67715						
ANR	69312	Symbol	SEEK_SET		67715						
ANR	69313	Symbol	* value -> u . object		67715						
ANR	69314	Symbol	* value -> u . array . values		67715						
ANR	69315	Symbol	* obj -> u . object		67715						
ANR	69316	Symbol	* i		67715						
ANR	69317	Symbol	conf . mptcp		67715						
ANR	69318	Symbol	* j		67715						
ANR	69319	Symbol	obj		67715						
ANR	69320	Symbol	* value		67715						
ANR	69321	Symbol	conf . disable_sni		67715						
ANR	69322	Symbol	json_object		67715						
ANR	69323	Symbol	MAX_DSCP_NUM		67715						
