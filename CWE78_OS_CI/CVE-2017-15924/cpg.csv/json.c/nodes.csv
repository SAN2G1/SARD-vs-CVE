command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	12388	File	data/converged/CVE-2017-15924_shadowsocks-libev/json.c								
ANR	12389	DeclStmt									
ANR	12390	Decl							const struct _json_value	const struct _json_value	json_value_none
ANR	12391	DeclStmt									
ANR	12392	Decl							unsigned int	unsigned int	json_uchar
ANR	12393	Function	hex_value	47:0:1733:2105							
ANR	12394	FunctionDef	hex_value (json_char c)		12393	0					
ANR	12395	CompoundStatement		48:0:1778:2105	12393	0					
ANR	12396	IfStatement	if ( isdigit ( c ) )		12393	0					
ANR	12397	Condition	isdigit ( c )	49:7:1787:1796	12393	0	True				
ANR	12398	CallExpression	isdigit ( c )		12393	0					
ANR	12399	Callee	isdigit		12393	0					
ANR	12400	Identifier	isdigit		12393	0					
ANR	12401	ArgumentList	c		12393	1					
ANR	12402	Argument	c		12393	0					
ANR	12403	Identifier	c		12393	0					
ANR	12404	ReturnStatement	return c - '0' ;	50:6:1805:1819	12393	1	True				
ANR	12405	AdditiveExpression	c - '0'		12393	0		-			
ANR	12406	Identifier	c		12393	0					
ANR	12407	PrimaryExpression	'0'		12393	1					
ANR	12408	SwitchStatement	switch ( c )		12393	1					
ANR	12409	Condition	c	52:11:1833:1833	12393	0	True				
ANR	12410	Identifier	c		12393	0					
ANR	12411	CompoundStatement		5:14:57:57	12393	1					
ANR	12412	Label	case 'a' :	53:6:1844:1852	12393	0	True				
ANR	12413	Label	case 'A' :	53:16:1854:1862	12393	1	True				
ANR	12414	ReturnStatement	return 0x0A ;	53:26:1864:1875	12393	2	True				
ANR	12415	PrimaryExpression	0x0A		12393	0					
ANR	12416	Label	case 'b' :	54:6:1883:1891	12393	3	True				
ANR	12417	Label	case 'B' :	54:16:1893:1901	12393	4	True				
ANR	12418	ReturnStatement	return 0x0B ;	54:26:1903:1914	12393	5	True				
ANR	12419	PrimaryExpression	0x0B		12393	0					
ANR	12420	Label	case 'c' :	55:6:1922:1930	12393	6	True				
ANR	12421	Label	case 'C' :	55:16:1932:1940	12393	7	True				
ANR	12422	ReturnStatement	return 0x0C ;	55:26:1942:1953	12393	8	True				
ANR	12423	PrimaryExpression	0x0C		12393	0					
ANR	12424	Label	case 'd' :	56:6:1961:1969	12393	9	True				
ANR	12425	Label	case 'D' :	56:16:1971:1979	12393	10	True				
ANR	12426	ReturnStatement	return 0x0D ;	56:26:1981:1992	12393	11	True				
ANR	12427	PrimaryExpression	0x0D		12393	0					
ANR	12428	Label	case 'e' :	57:6:2000:2008	12393	12	True				
ANR	12429	Label	case 'E' :	57:16:2010:2018	12393	13	True				
ANR	12430	ReturnStatement	return 0x0E ;	57:26:2020:2031	12393	14	True				
ANR	12431	PrimaryExpression	0x0E		12393	0					
ANR	12432	Label	case 'f' :	58:6:2039:2047	12393	15	True				
ANR	12433	Label	case 'F' :	58:16:2049:2057	12393	16	True				
ANR	12434	ReturnStatement	return 0x0F ;	58:26:2059:2070	12393	17	True				
ANR	12435	PrimaryExpression	0x0F		12393	0					
ANR	12436	Label	default :	59:6:2078:2085	12393	18	True				
ANR	12437	Identifier	default		12393	0					
ANR	12438	ReturnStatement	return 0xFF ;	59:15:2087:2098	12393	19	True				
ANR	12439	PrimaryExpression	0xFF		12393	0					
ANR	12440	ReturnType	static unsigned char		12393	1					
ANR	12441	Identifier	hex_value		12393	2					
ANR	12442	ParameterList	json_char c		12393	3					
ANR	12443	Parameter	json_char c	47:32:1765:1775	12393	0	True				
ANR	12444	ParameterType	json_char		12393	0					
ANR	12445	Identifier	c		12393	1					
ANR	12446	CFGEntryNode	ENTRY		12393		True				
ANR	12447	CFGExitNode	EXIT		12393		True				
ANR	12448	Symbol	c		12393						
ANR	12449	Symbol	isdigit		12393						
ANR	12450	ClassDef	<unnamed>	63:8:2116:2332							
ANR	12451	DeclStmt									
ANR	12452	Decl							unsigned long	unsigned long	used_memory
ANR	12453	DeclStmt									
ANR	12454	Decl							unsigned int	unsigned int	uint_max
ANR	12455	DeclStmt									
ANR	12456	Decl							unsigned long	unsigned long	ulong_max
ANR	12457	DeclStmt									
ANR	12458	Decl							json_settings	json_settings	settings
ANR	12459	DeclStmt									
ANR	12460	Decl							int	int	first_pass
ANR	12461	DeclStmt									
ANR	12462	Decl							const json_char	const json_char *	ptr
ANR	12463	DeclStmt									
ANR	12464	Decl							unsigned int	unsigned int	cur_line
ANR	12465	Decl							unsigned int	unsigned int	cur_col
ANR	12466	DeclStmt									
ANR	12467	Decl									json_state
ANR	12468	Function	default_alloc	78:0:2335:2458							
ANR	12469	FunctionDef	"default_alloc (size_t size , int zero , void * user_data)"		12468	0					
ANR	12470	CompoundStatement		79:0:2405:2458	12468	0					
ANR	12471	ReturnStatement	"return zero ? calloc ( 1 , size ) : malloc ( size ) ;"	80:3:2410:2456	12468	0	True				
ANR	12472	ConditionalExpression	"zero ? calloc ( 1 , size ) : malloc ( size )"		12468	0					
ANR	12473	Condition	zero		12468	0					
ANR	12474	Identifier	zero		12468	0					
ANR	12475	CallExpression	"calloc ( 1 , size )"		12468	1					
ANR	12476	Callee	calloc		12468	0					
ANR	12477	Identifier	calloc		12468	0					
ANR	12478	ArgumentList	1		12468	1					
ANR	12479	Argument	1		12468	0					
ANR	12480	PrimaryExpression	1		12468	0					
ANR	12481	Argument	size		12468	1					
ANR	12482	Identifier	size		12468	0					
ANR	12483	CallExpression	malloc ( size )		12468	2					
ANR	12484	Callee	malloc		12468	0					
ANR	12485	Identifier	malloc		12468	0					
ANR	12486	ArgumentList	size		12468	1					
ANR	12487	Argument	size		12468	0					
ANR	12488	Identifier	size		12468	0					
ANR	12489	ReturnType	static void *		12468	1					
ANR	12490	Identifier	default_alloc		12468	2					
ANR	12491	ParameterList	"size_t size , int zero , void * user_data"		12468	3					
ANR	12492	Parameter	size_t size	78:29:2364:2374	12468	0	True				
ANR	12493	ParameterType	size_t		12468	0					
ANR	12494	Identifier	size		12468	1					
ANR	12495	Parameter	int zero	78:42:2377:2384	12468	1	True				
ANR	12496	ParameterType	int		12468	0					
ANR	12497	Identifier	zero		12468	1					
ANR	12498	Parameter	void * user_data	78:52:2387:2402	12468	2	True				
ANR	12499	ParameterType	void *		12468	0					
ANR	12500	Identifier	user_data		12468	1					
ANR	12501	CFGEntryNode	ENTRY		12468		True				
ANR	12502	CFGExitNode	EXIT		12468		True				
ANR	12503	Symbol	zero		12468						
ANR	12504	Symbol	malloc		12468						
ANR	12505	Symbol	size		12468						
ANR	12506	Symbol	user_data		12468						
ANR	12507	Symbol	calloc		12468						
ANR	12508	Function	default_free	83:0:2461:2534							
ANR	12509	FunctionDef	"default_free (void * ptr , void * user_data)"		12508	0					
ANR	12510	CompoundStatement		84:0:2517:2534	12508	0					
ANR	12511	ExpressionStatement	free ( ptr )	85:3:2522:2532	12508	0	True				
ANR	12512	CallExpression	free ( ptr )		12508	0					
ANR	12513	Callee	free		12508	0					
ANR	12514	Identifier	free		12508	0					
ANR	12515	ArgumentList	ptr		12508	1					
ANR	12516	Argument	ptr		12508	0					
ANR	12517	Identifier	ptr		12508	0					
ANR	12518	ReturnType	static void		12508	1					
ANR	12519	Identifier	default_free		12508	2					
ANR	12520	ParameterList	"void * ptr , void * user_data"		12508	3					
ANR	12521	Parameter	void * ptr	83:26:2487:2496	12508	0	True				
ANR	12522	ParameterType	void *		12508	0					
ANR	12523	Identifier	ptr		12508	1					
ANR	12524	Parameter	void * user_data	83:38:2499:2514	12508	1	True				
ANR	12525	ParameterType	void *		12508	0					
ANR	12526	Identifier	user_data		12508	1					
ANR	12527	CFGEntryNode	ENTRY		12508		True				
ANR	12528	CFGExitNode	EXIT		12508		True				
ANR	12529	Symbol	user_data		12508						
ANR	12530	Symbol	ptr		12508						
ANR	12531	Function	json_alloc	88:0:2537:2896							
ANR	12532	FunctionDef	"json_alloc (json_state * state , unsigned long size , int zero)"		12531	0					
ANR	12533	CompoundStatement		89:0:2613:2896	12531	0					
ANR	12534	IfStatement	if ( ( state -> ulong_max - state -> used_memory ) < size )		12531	0					
ANR	12535	Condition	( state -> ulong_max - state -> used_memory ) < size	90:7:2622:2667	12531	0	True				
ANR	12536	RelationalExpression	( state -> ulong_max - state -> used_memory ) < size		12531	0		<			
ANR	12537	AdditiveExpression	state -> ulong_max - state -> used_memory		12531	0		-			
ANR	12538	PtrMemberAccess	state -> ulong_max		12531	0					
ANR	12539	Identifier	state		12531	0					
ANR	12540	Identifier	ulong_max		12531	1					
ANR	12541	PtrMemberAccess	state -> used_memory		12531	1					
ANR	12542	Identifier	state		12531	0					
ANR	12543	Identifier	used_memory		12531	1					
ANR	12544	Identifier	size		12531	1					
ANR	12545	ReturnStatement	return 0 ;	91:6:2676:2684	12531	1	True				
ANR	12546	PrimaryExpression	0		12531	0					
ANR	12547	IfStatement	if ( state -> settings . max_memory && ( state -> used_memory += size ) > state -> settings . max_memory )		12531	1					
ANR	12548	Condition	state -> settings . max_memory && ( state -> used_memory += size ) > state -> settings . max_memory	93:7:2694:2789	12531	0	True				
ANR	12549	AndExpression	state -> settings . max_memory && ( state -> used_memory += size ) > state -> settings . max_memory		12531	0		&&			
ANR	12550	MemberAccess	state -> settings . max_memory		12531	0					
ANR	12551	PtrMemberAccess	state -> settings		12531	0					
ANR	12552	Identifier	state		12531	0					
ANR	12553	Identifier	settings		12531	1					
ANR	12554	Identifier	max_memory		12531	1					
ANR	12555	RelationalExpression	( state -> used_memory += size ) > state -> settings . max_memory		12531	1		>			
ANR	12556	AssignmentExpression	state -> used_memory += size		12531	0		+=			
ANR	12557	PtrMemberAccess	state -> used_memory		12531	0					
ANR	12558	Identifier	state		12531	0					
ANR	12559	Identifier	used_memory		12531	1					
ANR	12560	Identifier	size		12531	1					
ANR	12561	MemberAccess	state -> settings . max_memory		12531	1					
ANR	12562	PtrMemberAccess	state -> settings		12531	0					
ANR	12563	Identifier	state		12531	0					
ANR	12564	Identifier	settings		12531	1					
ANR	12565	Identifier	max_memory		12531	1					
ANR	12566	CompoundStatement		7:3:181:181	12531	1					
ANR	12567	ReturnStatement	return 0 ;	96:6:2803:2811	12531	0	True				
ANR	12568	PrimaryExpression	0		12531	0					
ANR	12569	ReturnStatement	"return state -> settings . mem_alloc ( size , zero , state -> settings . user_data ) ;"	99:3:2822:2894	12531	2	True				
ANR	12570	CallExpression	"state -> settings . mem_alloc ( size , zero , state -> settings . user_data )"		12531	0					
ANR	12571	Callee	state -> settings . mem_alloc		12531	0					
ANR	12572	MemberAccess	state -> settings . mem_alloc		12531	0					
ANR	12573	PtrMemberAccess	state -> settings		12531	0					
ANR	12574	Identifier	state		12531	0					
ANR	12575	Identifier	settings		12531	1					
ANR	12576	Identifier	mem_alloc		12531	1					
ANR	12577	ArgumentList	size		12531	1					
ANR	12578	Argument	size		12531	0					
ANR	12579	Identifier	size		12531	0					
ANR	12580	Argument	zero		12531	1					
ANR	12581	Identifier	zero		12531	0					
ANR	12582	Argument	state -> settings . user_data		12531	2					
ANR	12583	MemberAccess	state -> settings . user_data		12531	0					
ANR	12584	PtrMemberAccess	state -> settings		12531	0					
ANR	12585	Identifier	state		12531	0					
ANR	12586	Identifier	settings		12531	1					
ANR	12587	Identifier	user_data		12531	1					
ANR	12588	ReturnType	static void *		12531	1					
ANR	12589	Identifier	json_alloc		12531	2					
ANR	12590	ParameterList	"json_state * state , unsigned long size , int zero"		12531	3					
ANR	12591	Parameter	json_state * state	88:26:2563:2580	12531	0	True				
ANR	12592	ParameterType	json_state *		12531	0					
ANR	12593	Identifier	state		12531	1					
ANR	12594	Parameter	unsigned long size	88:46:2583:2600	12531	1	True				
ANR	12595	ParameterType	unsigned long		12531	0					
ANR	12596	Identifier	size		12531	1					
ANR	12597	Parameter	int zero	88:66:2603:2610	12531	2	True				
ANR	12598	ParameterType	int		12531	0					
ANR	12599	Identifier	zero		12531	1					
ANR	12600	CFGEntryNode	ENTRY		12531		True				
ANR	12601	CFGExitNode	EXIT		12531		True				
ANR	12602	Symbol	zero		12531						
ANR	12603	Symbol	* state		12531						
ANR	12604	Symbol	state -> ulong_max		12531						
ANR	12605	Symbol	size		12531						
ANR	12606	Symbol	state -> settings . user_data		12531						
ANR	12607	Symbol	state -> settings . mem_alloc		12531						
ANR	12608	Symbol	state -> settings . max_memory		12531						
ANR	12609	Symbol	state		12531						
ANR	12610	Symbol	state -> used_memory		12531						
ANR	12611	Symbol	state -> settings		12531						
ANR	12612	Function	new_value	102:0:2899:5003							
ANR	12613	FunctionDef	"new_value (json_state * state , json_value * * top , json_value * * root , json_value * * alloc , json_type type)"		12612	0					
ANR	12614	CompoundStatement		105:0:3061:5003	12612	0					
ANR	12615	IdentifierDeclStatement	json_value * value ;	106:3:3066:3084	12612	0	True				
ANR	12616	IdentifierDecl	* value		12612	0					
ANR	12617	IdentifierDeclType	json_value *		12612	0					
ANR	12618	Identifier	value		12612	1					
ANR	12619	IdentifierDeclStatement	int values_size ;	107:3:3089:3104	12612	1	True				
ANR	12620	IdentifierDecl	values_size		12612	0					
ANR	12621	IdentifierDeclType	int		12612	0					
ANR	12622	Identifier	values_size		12612	1					
ANR	12623	IfStatement	if ( ! state -> first_pass )		12612	2					
ANR	12624	Condition	! state -> first_pass	109:7:3114:3131	12612	0	True				
ANR	12625	UnaryOperationExpression	! state -> first_pass		12612	0					
ANR	12626	UnaryOperator	!		12612	0					
ANR	12627	PtrMemberAccess	state -> first_pass		12612	1					
ANR	12628	Identifier	state		12612	0					
ANR	12629	Identifier	first_pass		12612	1					
ANR	12630	CompoundStatement		6:3:75:75	12612	1					
ANR	12631	ExpressionStatement	value = * top = * alloc	111:6:3145:3166	12612	0	True				
ANR	12632	AssignmentExpression	value = * top = * alloc		12612	0		=			
ANR	12633	Identifier	value		12612	0					
ANR	12634	AssignmentExpression	* top = * alloc		12612	1		=			
ANR	12635	UnaryOperationExpression	* top		12612	0					
ANR	12636	UnaryOperator	*		12612	0					
ANR	12637	Identifier	top		12612	1					
ANR	12638	UnaryOperationExpression	* alloc		12612	1					
ANR	12639	UnaryOperator	*		12612	0					
ANR	12640	Identifier	alloc		12612	1					
ANR	12641	ExpressionStatement	* alloc = ( * alloc ) -> _reserved . next_alloc	112:6:3174:3213	12612	1	True				
ANR	12642	AssignmentExpression	* alloc = ( * alloc ) -> _reserved . next_alloc		12612	0		=			
ANR	12643	UnaryOperationExpression	* alloc		12612	0					
ANR	12644	UnaryOperator	*		12612	0					
ANR	12645	Identifier	alloc		12612	1					
ANR	12646	MemberAccess	( * alloc ) -> _reserved . next_alloc		12612	1					
ANR	12647	PtrMemberAccess	( * alloc ) -> _reserved		12612	0					
ANR	12648	UnaryOperationExpression	* alloc		12612	0					
ANR	12649	UnaryOperator	*		12612	0					
ANR	12650	Identifier	alloc		12612	1					
ANR	12651	Identifier	_reserved		12612	1					
ANR	12652	Identifier	next_alloc		12612	1					
ANR	12653	IfStatement	if ( ! * root )		12612	2					
ANR	12654	Condition	! * root	114:10:3226:3231	12612	0	True				
ANR	12655	UnaryOperationExpression	! * root		12612	0					
ANR	12656	UnaryOperator	!		12612	0					
ANR	12657	UnaryOperationExpression	* root		12612	1					
ANR	12658	UnaryOperator	*		12612	0					
ANR	12659	Identifier	root		12612	1					
ANR	12660	ExpressionStatement	* root = value	115:9:3243:3256	12612	1	True				
ANR	12661	AssignmentExpression	* root = value		12612	0		=			
ANR	12662	UnaryOperationExpression	* root		12612	0					
ANR	12663	UnaryOperator	*		12612	0					
ANR	12664	Identifier	root		12612	1					
ANR	12665	Identifier	value		12612	1					
ANR	12666	SwitchStatement	switch ( value -> type )		12612	3					
ANR	12667	Condition	value -> type	117:14:3273:3283	12612	0	True				
ANR	12668	PtrMemberAccess	value -> type		12612	0					
ANR	12669	Identifier	value		12612	0					
ANR	12670	Identifier	type		12612	1					
ANR	12671	CompoundStatement		14:6:230:230	12612	1					
ANR	12672	Label	case json_array :	119:9:3303:3318	12612	0	True				
ANR	12673	Identifier	json_array		12612	0					
ANR	12674	IfStatement	if ( value -> u . array . length == 0 )		12612	1					
ANR	12675	Condition	value -> u . array . length == 0	121:16:3337:3362	12612	0	True				
ANR	12676	EqualityExpression	value -> u . array . length == 0		12612	0		==			
ANR	12677	MemberAccess	value -> u . array . length		12612	0					
ANR	12678	MemberAccess	value -> u . array		12612	0					
ANR	12679	PtrMemberAccess	value -> u		12612	0					
ANR	12680	Identifier	value		12612	0					
ANR	12681	Identifier	u		12612	1					
ANR	12682	Identifier	array		12612	1					
ANR	12683	Identifier	length		12612	1					
ANR	12684	PrimaryExpression	0		12612	1					
ANR	12685	BreakStatement	break ;	122:15:3380:3385	12612	1	True				
ANR	12686	IfStatement	"if ( ! ( value -> u . array . values = ( json_value * * ) json_alloc ( state , value -> u . array . length * sizeof ( json_value * ) , 0 ) ) )"		12612	2					
ANR	12687	Condition	"! ( value -> u . array . values = ( json_value * * ) json_alloc ( state , value -> u . array . length * sizeof ( json_value * ) , 0 ) )"	124:16:3404:3530	12612	0	True				
ANR	12688	UnaryOperationExpression	"! ( value -> u . array . values = ( json_value * * ) json_alloc ( state , value -> u . array . length * sizeof ( json_value * ) , 0 ) )"		12612	0					
ANR	12689	UnaryOperator	!		12612	0					
ANR	12690	AssignmentExpression	"value -> u . array . values = ( json_value * * ) json_alloc ( state , value -> u . array . length * sizeof ( json_value * ) , 0 )"		12612	1		=			
ANR	12691	MemberAccess	value -> u . array . values		12612	0					
ANR	12692	MemberAccess	value -> u . array		12612	0					
ANR	12693	PtrMemberAccess	value -> u		12612	0					
ANR	12694	Identifier	value		12612	0					
ANR	12695	Identifier	u		12612	1					
ANR	12696	Identifier	array		12612	1					
ANR	12697	Identifier	values		12612	1					
ANR	12698	CastExpression	"( json_value * * ) json_alloc ( state , value -> u . array . length * sizeof ( json_value * ) , 0 )"		12612	1					
ANR	12699	CastTarget	json_value * *		12612	0					
ANR	12700	CallExpression	"json_alloc ( state , value -> u . array . length * sizeof ( json_value * ) , 0 )"		12612	1					
ANR	12701	Callee	json_alloc		12612	0					
ANR	12702	Identifier	json_alloc		12612	0					
ANR	12703	ArgumentList	state		12612	1					
ANR	12704	Argument	state		12612	0					
ANR	12705	Identifier	state		12612	0					
ANR	12706	Argument	value -> u . array . length * sizeof ( json_value * )		12612	1					
ANR	12707	MultiplicativeExpression	value -> u . array . length * sizeof ( json_value * )		12612	0		*			
ANR	12708	MemberAccess	value -> u . array . length		12612	0					
ANR	12709	MemberAccess	value -> u . array		12612	0					
ANR	12710	PtrMemberAccess	value -> u		12612	0					
ANR	12711	Identifier	value		12612	0					
ANR	12712	Identifier	u		12612	1					
ANR	12713	Identifier	array		12612	1					
ANR	12714	Identifier	length		12612	1					
ANR	12715	SizeofExpression	sizeof ( json_value * )		12612	1					
ANR	12716	Sizeof	sizeof		12612	0					
ANR	12717	SizeofOperand	json_value *		12612	1					
ANR	12718	Argument	0		12612	2					
ANR	12719	PrimaryExpression	0		12612	0					
ANR	12720	CompoundStatement		22:12:484:484	12612	1					
ANR	12721	ReturnStatement	return 0 ;	127:15:3563:3571	12612	0	True				
ANR	12722	PrimaryExpression	0		12612	0					
ANR	12723	ExpressionStatement	value -> u . array . length = 0	130:12:3600:3625	12612	3	True				
ANR	12724	AssignmentExpression	value -> u . array . length = 0		12612	0		=			
ANR	12725	MemberAccess	value -> u . array . length		12612	0					
ANR	12726	MemberAccess	value -> u . array		12612	0					
ANR	12727	PtrMemberAccess	value -> u		12612	0					
ANR	12728	Identifier	value		12612	0					
ANR	12729	Identifier	u		12612	1					
ANR	12730	Identifier	array		12612	1					
ANR	12731	Identifier	length		12612	1					
ANR	12732	PrimaryExpression	0		12612	1					
ANR	12733	BreakStatement	break ;	131:12:3639:3644	12612	4	True				
ANR	12734	Label	case json_object :	133:9:3656:3672	12612	5	True				
ANR	12735	Identifier	json_object		12612	0					
ANR	12736	IfStatement	if ( value -> u . object . length == 0 )		12612	6					
ANR	12737	Condition	value -> u . object . length == 0	135:16:3691:3717	12612	0	True				
ANR	12738	EqualityExpression	value -> u . object . length == 0		12612	0		==			
ANR	12739	MemberAccess	value -> u . object . length		12612	0					
ANR	12740	MemberAccess	value -> u . object		12612	0					
ANR	12741	PtrMemberAccess	value -> u		12612	0					
ANR	12742	Identifier	value		12612	0					
ANR	12743	Identifier	u		12612	1					
ANR	12744	Identifier	object		12612	1					
ANR	12745	Identifier	length		12612	1					
ANR	12746	PrimaryExpression	0		12612	1					
ANR	12747	BreakStatement	break ;	136:15:3735:3740	12612	1	True				
ANR	12748	ExpressionStatement	values_size = sizeof ( * value -> u . object . values ) * value -> u . object . length	138:12:3755:3826	12612	7	True				
ANR	12749	AssignmentExpression	values_size = sizeof ( * value -> u . object . values ) * value -> u . object . length		12612	0		=			
ANR	12750	Identifier	values_size		12612	0					
ANR	12751	MultiplicativeExpression	sizeof ( * value -> u . object . values ) * value -> u . object . length		12612	1		*			
ANR	12752	SizeofExpression	sizeof ( * value -> u . object . values )		12612	0					
ANR	12753	Sizeof	sizeof		12612	0					
ANR	12754	UnaryOperationExpression	* value -> u . object . values		12612	1					
ANR	12755	UnaryOperator	*		12612	0					
ANR	12756	MemberAccess	value -> u . object . values		12612	1					
ANR	12757	MemberAccess	value -> u . object		12612	0					
ANR	12758	PtrMemberAccess	value -> u		12612	0					
ANR	12759	Identifier	value		12612	0					
ANR	12760	Identifier	u		12612	1					
ANR	12761	Identifier	object		12612	1					
ANR	12762	Identifier	values		12612	1					
ANR	12763	MemberAccess	value -> u . object . length		12612	1					
ANR	12764	MemberAccess	value -> u . object		12612	0					
ANR	12765	PtrMemberAccess	value -> u		12612	0					
ANR	12766	Identifier	value		12612	0					
ANR	12767	Identifier	u		12612	1					
ANR	12768	Identifier	object		12612	1					
ANR	12769	Identifier	length		12612	1					
ANR	12770	IfStatement	"if ( ! ( value -> u . object . values = ( json_object_entry * ) json_alloc ( state , values_size + ( ( unsigned long ) value -> u . object . values ) , 0 ) ) )"		12612	8					
ANR	12771	Condition	"! ( value -> u . object . values = ( json_object_entry * ) json_alloc ( state , values_size + ( ( unsigned long ) value -> u . object . values ) , 0 ) )"	140:16:3845:3990	12612	0	True				
ANR	12772	UnaryOperationExpression	"! ( value -> u . object . values = ( json_object_entry * ) json_alloc ( state , values_size + ( ( unsigned long ) value -> u . object . values ) , 0 ) )"		12612	0					
ANR	12773	UnaryOperator	!		12612	0					
ANR	12774	AssignmentExpression	"value -> u . object . values = ( json_object_entry * ) json_alloc ( state , values_size + ( ( unsigned long ) value -> u . object . values ) , 0 )"		12612	1		=			
ANR	12775	MemberAccess	value -> u . object . values		12612	0					
ANR	12776	MemberAccess	value -> u . object		12612	0					
ANR	12777	PtrMemberAccess	value -> u		12612	0					
ANR	12778	Identifier	value		12612	0					
ANR	12779	Identifier	u		12612	1					
ANR	12780	Identifier	object		12612	1					
ANR	12781	Identifier	values		12612	1					
ANR	12782	CastExpression	"( json_object_entry * ) json_alloc ( state , values_size + ( ( unsigned long ) value -> u . object . values ) , 0 )"		12612	1					
ANR	12783	CastTarget	json_object_entry *		12612	0					
ANR	12784	CallExpression	"json_alloc ( state , values_size + ( ( unsigned long ) value -> u . object . values ) , 0 )"		12612	1					
ANR	12785	Callee	json_alloc		12612	0					
ANR	12786	Identifier	json_alloc		12612	0					
ANR	12787	ArgumentList	state		12612	1					
ANR	12788	Argument	state		12612	0					
ANR	12789	Identifier	state		12612	0					
ANR	12790	Argument	values_size + ( ( unsigned long ) value -> u . object . values )		12612	1					
ANR	12791	AdditiveExpression	values_size + ( ( unsigned long ) value -> u . object . values )		12612	0		+			
ANR	12792	Identifier	values_size		12612	0					
ANR	12793	CastExpression	( unsigned long ) value -> u . object . values		12612	1					
ANR	12794	CastTarget	unsigned long		12612	0					
ANR	12795	MemberAccess	value -> u . object . values		12612	1					
ANR	12796	MemberAccess	value -> u . object		12612	0					
ANR	12797	PtrMemberAccess	value -> u		12612	0					
ANR	12798	Identifier	value		12612	0					
ANR	12799	Identifier	u		12612	1					
ANR	12800	Identifier	object		12612	1					
ANR	12801	Identifier	values		12612	1					
ANR	12802	Argument	0		12612	2					
ANR	12803	PrimaryExpression	0		12612	0					
ANR	12804	CompoundStatement		38:12:944:944	12612	1					
ANR	12805	ReturnStatement	return 0 ;	143:15:4023:4031	12612	0	True				
ANR	12806	PrimaryExpression	0		12612	0					
ANR	12807	ExpressionStatement	value -> _reserved . object_mem = ( * ( char * * ) & value -> u . object . values ) + values_size	146:12:4060:4140	12612	9	True				
ANR	12808	AssignmentExpression	value -> _reserved . object_mem = ( * ( char * * ) & value -> u . object . values ) + values_size		12612	0		=			
ANR	12809	MemberAccess	value -> _reserved . object_mem		12612	0					
ANR	12810	PtrMemberAccess	value -> _reserved		12612	0					
ANR	12811	Identifier	value		12612	0					
ANR	12812	Identifier	_reserved		12612	1					
ANR	12813	Identifier	object_mem		12612	1					
ANR	12814	AdditiveExpression	( * ( char * * ) & value -> u . object . values ) + values_size		12612	1		+			
ANR	12815	UnaryOperationExpression	* ( char * * ) & value -> u . object . values		12612	0					
ANR	12816	UnaryOperator	*		12612	0					
ANR	12817	CastExpression	( char * * ) & value -> u . object . values		12612	1					
ANR	12818	CastTarget	char * *		12612	0					
ANR	12819	UnaryOperationExpression	& value -> u . object . values		12612	1					
ANR	12820	UnaryOperator	&		12612	0					
ANR	12821	MemberAccess	value -> u . object . values		12612	1					
ANR	12822	MemberAccess	value -> u . object		12612	0					
ANR	12823	PtrMemberAccess	value -> u		12612	0					
ANR	12824	Identifier	value		12612	0					
ANR	12825	Identifier	u		12612	1					
ANR	12826	Identifier	object		12612	1					
ANR	12827	Identifier	values		12612	1					
ANR	12828	Identifier	values_size		12612	1					
ANR	12829	ExpressionStatement	value -> u . object . length = 0	148:12:4155:4181	12612	10	True				
ANR	12830	AssignmentExpression	value -> u . object . length = 0		12612	0		=			
ANR	12831	MemberAccess	value -> u . object . length		12612	0					
ANR	12832	MemberAccess	value -> u . object		12612	0					
ANR	12833	PtrMemberAccess	value -> u		12612	0					
ANR	12834	Identifier	value		12612	0					
ANR	12835	Identifier	u		12612	1					
ANR	12836	Identifier	object		12612	1					
ANR	12837	Identifier	length		12612	1					
ANR	12838	PrimaryExpression	0		12612	1					
ANR	12839	BreakStatement	break ;	149:12:4195:4200	12612	11	True				
ANR	12840	Label	case json_string :	151:9:4212:4228	12612	12	True				
ANR	12841	Identifier	json_string		12612	0					
ANR	12842	IfStatement	"if ( ! ( value -> u . string . ptr = ( json_char * ) json_alloc ( state , ( value -> u . string . length + 1 ) * sizeof ( json_char ) , 0 ) ) )"		12612	13					
ANR	12843	Condition	"! ( value -> u . string . ptr = ( json_char * ) json_alloc ( state , ( value -> u . string . length + 1 ) * sizeof ( json_char ) , 0 ) )"	153:16:4247:4373	12612	0	True				
ANR	12844	UnaryOperationExpression	"! ( value -> u . string . ptr = ( json_char * ) json_alloc ( state , ( value -> u . string . length + 1 ) * sizeof ( json_char ) , 0 ) )"		12612	0					
ANR	12845	UnaryOperator	!		12612	0					
ANR	12846	AssignmentExpression	"value -> u . string . ptr = ( json_char * ) json_alloc ( state , ( value -> u . string . length + 1 ) * sizeof ( json_char ) , 0 )"		12612	1		=			
ANR	12847	MemberAccess	value -> u . string . ptr		12612	0					
ANR	12848	MemberAccess	value -> u . string		12612	0					
ANR	12849	PtrMemberAccess	value -> u		12612	0					
ANR	12850	Identifier	value		12612	0					
ANR	12851	Identifier	u		12612	1					
ANR	12852	Identifier	string		12612	1					
ANR	12853	Identifier	ptr		12612	1					
ANR	12854	CastExpression	"( json_char * ) json_alloc ( state , ( value -> u . string . length + 1 ) * sizeof ( json_char ) , 0 )"		12612	1					
ANR	12855	CastTarget	json_char *		12612	0					
ANR	12856	CallExpression	"json_alloc ( state , ( value -> u . string . length + 1 ) * sizeof ( json_char ) , 0 )"		12612	1					
ANR	12857	Callee	json_alloc		12612	0					
ANR	12858	Identifier	json_alloc		12612	0					
ANR	12859	ArgumentList	state		12612	1					
ANR	12860	Argument	state		12612	0					
ANR	12861	Identifier	state		12612	0					
ANR	12862	Argument	( value -> u . string . length + 1 ) * sizeof ( json_char )		12612	1					
ANR	12863	MultiplicativeExpression	( value -> u . string . length + 1 ) * sizeof ( json_char )		12612	0		*			
ANR	12864	AdditiveExpression	value -> u . string . length + 1		12612	0		+			
ANR	12865	MemberAccess	value -> u . string . length		12612	0					
ANR	12866	MemberAccess	value -> u . string		12612	0					
ANR	12867	PtrMemberAccess	value -> u		12612	0					
ANR	12868	Identifier	value		12612	0					
ANR	12869	Identifier	u		12612	1					
ANR	12870	Identifier	string		12612	1					
ANR	12871	Identifier	length		12612	1					
ANR	12872	PrimaryExpression	1		12612	1					
ANR	12873	SizeofExpression	sizeof ( json_char )		12612	1					
ANR	12874	Sizeof	sizeof		12612	0					
ANR	12875	SizeofOperand	json_char		12612	1					
ANR	12876	Argument	0		12612	2					
ANR	12877	PrimaryExpression	0		12612	0					
ANR	12878	CompoundStatement		51:12:1327:1327	12612	1					
ANR	12879	ReturnStatement	return 0 ;	156:15:4406:4414	12612	0	True				
ANR	12880	PrimaryExpression	0		12612	0					
ANR	12881	ExpressionStatement	value -> u . string . length = 0	159:12:4443:4469	12612	14	True				
ANR	12882	AssignmentExpression	value -> u . string . length = 0		12612	0		=			
ANR	12883	MemberAccess	value -> u . string . length		12612	0					
ANR	12884	MemberAccess	value -> u . string		12612	0					
ANR	12885	PtrMemberAccess	value -> u		12612	0					
ANR	12886	Identifier	value		12612	0					
ANR	12887	Identifier	u		12612	1					
ANR	12888	Identifier	string		12612	1					
ANR	12889	Identifier	length		12612	1					
ANR	12890	PrimaryExpression	0		12612	1					
ANR	12891	BreakStatement	break ;	160:12:4483:4488	12612	15	True				
ANR	12892	Label	default :	162:9:4500:4507	12612	16	True				
ANR	12893	Identifier	default		12612	0					
ANR	12894	BreakStatement	break ;	163:12:4521:4526	12612	17	True				
ANR	12895	ExpressionStatement		164:7:4535:4535	12612	4	True				
ANR	12896	ReturnStatement	return 1 ;	166:6:4544:4552	12612	5	True				
ANR	12897	PrimaryExpression	1		12612	0					
ANR	12898	IfStatement	"if ( ! ( value = ( json_value * ) json_alloc ( state , sizeof ( json_value ) + state -> settings . value_extra , 1 ) ) )"		12612	3					
ANR	12899	Condition	"! ( value = ( json_value * ) json_alloc ( state , sizeof ( json_value ) + state -> settings . value_extra , 1 ) )"	169:7:4567:4674	12612	0	True				
ANR	12900	UnaryOperationExpression	"! ( value = ( json_value * ) json_alloc ( state , sizeof ( json_value ) + state -> settings . value_extra , 1 ) )"		12612	0					
ANR	12901	UnaryOperator	!		12612	0					
ANR	12902	AssignmentExpression	"value = ( json_value * ) json_alloc ( state , sizeof ( json_value ) + state -> settings . value_extra , 1 )"		12612	1		=			
ANR	12903	Identifier	value		12612	0					
ANR	12904	CastExpression	"( json_value * ) json_alloc ( state , sizeof ( json_value ) + state -> settings . value_extra , 1 )"		12612	1					
ANR	12905	CastTarget	json_value *		12612	0					
ANR	12906	CallExpression	"json_alloc ( state , sizeof ( json_value ) + state -> settings . value_extra , 1 )"		12612	1					
ANR	12907	Callee	json_alloc		12612	0					
ANR	12908	Identifier	json_alloc		12612	0					
ANR	12909	ArgumentList	state		12612	1					
ANR	12910	Argument	state		12612	0					
ANR	12911	Identifier	state		12612	0					
ANR	12912	Argument	sizeof ( json_value ) + state -> settings . value_extra		12612	1					
ANR	12913	AdditiveExpression	sizeof ( json_value ) + state -> settings . value_extra		12612	0		+			
ANR	12914	SizeofExpression	sizeof ( json_value )		12612	0					
ANR	12915	Sizeof	sizeof		12612	0					
ANR	12916	SizeofOperand	json_value		12612	1					
ANR	12917	MemberAccess	state -> settings . value_extra		12612	1					
ANR	12918	PtrMemberAccess	state -> settings		12612	0					
ANR	12919	Identifier	state		12612	0					
ANR	12920	Identifier	settings		12612	1					
ANR	12921	Identifier	value_extra		12612	1					
ANR	12922	Argument	1		12612	2					
ANR	12923	PrimaryExpression	1		12612	0					
ANR	12924	CompoundStatement		67:3:1618:1618	12612	1					
ANR	12925	ReturnStatement	return 0 ;	172:6:4688:4696	12612	0	True				
ANR	12926	PrimaryExpression	0		12612	0					
ANR	12927	IfStatement	if ( ! * root )		12612	4					
ANR	12928	Condition	! * root	175:7:4711:4716	12612	0	True				
ANR	12929	UnaryOperationExpression	! * root		12612	0					
ANR	12930	UnaryOperator	!		12612	0					
ANR	12931	UnaryOperationExpression	* root		12612	1					
ANR	12932	UnaryOperator	*		12612	0					
ANR	12933	Identifier	root		12612	1					
ANR	12934	ExpressionStatement	* root = value	176:6:4725:4738	12612	1	True				
ANR	12935	AssignmentExpression	* root = value		12612	0		=			
ANR	12936	UnaryOperationExpression	* root		12612	0					
ANR	12937	UnaryOperator	*		12612	0					
ANR	12938	Identifier	root		12612	1					
ANR	12939	Identifier	value		12612	1					
ANR	12940	ExpressionStatement	value -> type = type	178:3:4744:4762	12612	5	True				
ANR	12941	AssignmentExpression	value -> type = type		12612	0		=			
ANR	12942	PtrMemberAccess	value -> type		12612	0					
ANR	12943	Identifier	value		12612	0					
ANR	12944	Identifier	type		12612	1					
ANR	12945	Identifier	type		12612	1					
ANR	12946	ExpressionStatement	value -> parent = * top	179:3:4767:4787	12612	6	True				
ANR	12947	AssignmentExpression	value -> parent = * top		12612	0		=			
ANR	12948	PtrMemberAccess	value -> parent		12612	0					
ANR	12949	Identifier	value		12612	0					
ANR	12950	Identifier	parent		12612	1					
ANR	12951	UnaryOperationExpression	* top		12612	1					
ANR	12952	UnaryOperator	*		12612	0					
ANR	12953	Identifier	top		12612	1					
ANR	12954	ExpressionStatement	value -> line = state -> cur_line	182:6:4824:4853	12612	7	True				
ANR	12955	AssignmentExpression	value -> line = state -> cur_line		12612	0		=			
ANR	12956	PtrMemberAccess	value -> line		12612	0					
ANR	12957	Identifier	value		12612	0					
ANR	12958	Identifier	line		12612	1					
ANR	12959	PtrMemberAccess	state -> cur_line		12612	1					
ANR	12960	Identifier	state		12612	0					
ANR	12961	Identifier	cur_line		12612	1					
ANR	12962	ExpressionStatement	value -> col = state -> cur_col	183:6:4861:4888	12612	8	True				
ANR	12963	AssignmentExpression	value -> col = state -> cur_col		12612	0		=			
ANR	12964	PtrMemberAccess	value -> col		12612	0					
ANR	12965	Identifier	value		12612	0					
ANR	12966	Identifier	col		12612	1					
ANR	12967	PtrMemberAccess	state -> cur_col		12612	1					
ANR	12968	Identifier	state		12612	0					
ANR	12969	Identifier	cur_col		12612	1					
ANR	12970	IfStatement	if ( * alloc )		12612	9					
ANR	12971	Condition	* alloc	186:7:4908:4913	12612	0	True				
ANR	12972	UnaryOperationExpression	* alloc		12612	0					
ANR	12973	UnaryOperator	*		12612	0					
ANR	12974	Identifier	alloc		12612	1					
ANR	12975	ExpressionStatement	( * alloc ) -> _reserved . next_alloc = value	187:6:4922:4960	12612	1	True				
ANR	12976	AssignmentExpression	( * alloc ) -> _reserved . next_alloc = value		12612	0		=			
ANR	12977	MemberAccess	( * alloc ) -> _reserved . next_alloc		12612	0					
ANR	12978	PtrMemberAccess	( * alloc ) -> _reserved		12612	0					
ANR	12979	UnaryOperationExpression	* alloc		12612	0					
ANR	12980	UnaryOperator	*		12612	0					
ANR	12981	Identifier	alloc		12612	1					
ANR	12982	Identifier	_reserved		12612	1					
ANR	12983	Identifier	next_alloc		12612	1					
ANR	12984	Identifier	value		12612	1					
ANR	12985	ExpressionStatement	* alloc = * top = value	189:3:4966:4987	12612	10	True				
ANR	12986	AssignmentExpression	* alloc = * top = value		12612	0		=			
ANR	12987	UnaryOperationExpression	* alloc		12612	0					
ANR	12988	UnaryOperator	*		12612	0					
ANR	12989	Identifier	alloc		12612	1					
ANR	12990	AssignmentExpression	* top = value		12612	1		=			
ANR	12991	UnaryOperationExpression	* top		12612	0					
ANR	12992	UnaryOperator	*		12612	0					
ANR	12993	Identifier	top		12612	1					
ANR	12994	Identifier	value		12612	1					
ANR	12995	ReturnStatement	return 1 ;	191:3:4993:5001	12612	11	True				
ANR	12996	PrimaryExpression	1		12612	0					
ANR	12997	ReturnType	static int		12612	1					
ANR	12998	Identifier	new_value		12612	2					
ANR	12999	ParameterList	"json_state * state , json_value * * top , json_value * * root , json_value * * alloc , json_type type"		12612	3					
ANR	13000	Parameter	json_state * state	102:22:2921:2938	12612	0	True				
ANR	13001	ParameterType	json_state *		12612	0					
ANR	13002	Identifier	state		12612	1					
ANR	13003	Parameter	json_value * * top	103:22:2963:2979	12612	1	True				
ANR	13004	ParameterType	json_value * *		12612	0					
ANR	13005	Identifier	top		12612	1					
ANR	13006	Parameter	json_value * * root	103:41:2982:2999	12612	2	True				
ANR	13007	ParameterType	json_value * *		12612	0					
ANR	13008	Identifier	root		12612	1					
ANR	13009	Parameter	json_value * * alloc	103:61:3002:3020	12612	3	True				
ANR	13010	ParameterType	json_value * *		12612	0					
ANR	13011	Identifier	alloc		12612	1					
ANR	13012	Parameter	json_type type	104:22:3045:3058	12612	4	True				
ANR	13013	ParameterType	json_type		12612	0					
ANR	13014	Identifier	type		12612	1					
ANR	13015	CFGEntryNode	ENTRY		12612		True				
ANR	13016	CFGExitNode	EXIT		12612		True				
ANR	13017	Symbol	json_alloc		12612						
ANR	13018	Symbol	* * alloc		12612						
ANR	13019	Symbol	* ( char * * ) & value -> u . object . values		12612						
ANR	13020	Symbol	value -> parent		12612						
ANR	13021	Symbol	value -> u . object . values		12612						
ANR	13022	Symbol	type		12612						
ANR	13023	Symbol	state -> cur_col		12612						
ANR	13024	Symbol	value -> col		12612						
ANR	13025	Symbol	value -> _reserved . object_mem		12612						
ANR	13026	Symbol	value -> u . string . ptr		12612						
ANR	13027	Symbol	top		12612						
ANR	13028	Symbol	* alloc		12612						
ANR	13029	Symbol	state -> settings . value_extra		12612						
ANR	13030	Symbol	root		12612						
ANR	13031	Symbol	value -> u . array		12612						
ANR	13032	Symbol	value -> u . array . values		12612						
ANR	13033	Symbol	( * alloc ) -> _reserved		12612						
ANR	13034	Symbol	state		12612						
ANR	13035	Symbol	value		12612						
ANR	13036	Symbol	( * alloc ) -> _reserved . next_alloc		12612						
ANR	13037	Symbol	state -> settings		12612						
ANR	13038	Symbol	& value -> u . object . values		12612						
ANR	13039	Symbol	value -> u		12612						
ANR	13040	Symbol	value -> u . array . length		12612						
ANR	13041	Symbol	* value -> u . object		12612						
ANR	13042	Symbol	* value -> u		12612						
ANR	13043	Symbol	value -> u . object . length		12612						
ANR	13044	Symbol	* * value		12612						
ANR	13045	Symbol	& value -> u		12612						
ANR	13046	Symbol	* value -> u . object . values		12612						
ANR	13047	Symbol	value -> u . string		12612						
ANR	13048	Symbol	state -> cur_line		12612						
ANR	13049	Symbol	* state		12612						
ANR	13050	Symbol	state -> first_pass		12612						
ANR	13051	Symbol	value -> u . string . length		12612						
ANR	13052	Symbol	value -> u . object		12612						
ANR	13053	Symbol	value -> line		12612						
ANR	13054	Symbol	* value		12612						
ANR	13055	Symbol	values_size		12612						
ANR	13056	Symbol	* root		12612						
ANR	13057	Symbol	value -> _reserved		12612						
ANR	13058	Symbol	alloc		12612						
ANR	13059	Symbol	& value -> u . object		12612						
ANR	13060	Symbol	value -> type		12612						
ANR	13061	Symbol	* top		12612						
ANR	13062	DeclStmt									
ANR	13063	Decl							const long	const long	flag_next
ANR	13064	Decl							const long	const long	flag_reproc
ANR	13065	Decl							const long	const long	flag_need_comma
ANR	13066	Decl							const long	const long	flag_seek_value
ANR	13067	Decl							const long	const long	flag_escaped
ANR	13068	Decl							const long	const long	flag_string
ANR	13069	Decl							const long	const long	flag_need_colon
ANR	13070	Decl							const long	const long	flag_done
ANR	13071	Decl							const long	const long	flag_num_negative
ANR	13072	Decl							const long	const long	flag_num_zero
ANR	13073	Decl							const long	const long	flag_num_e
ANR	13074	Decl							const long	const long	flag_num_e_got_sign
ANR	13075	Decl							const long	const long	flag_num_e_negative
ANR	13076	Decl							const long	const long	flag_line_comment
ANR	13077	Decl							const long	const long	flag_block_comment
ANR	13078	Function	json_parse_ex	221:0:5841:27927							
ANR	13079	FunctionDef	"json_parse_ex (json_settings * settings , const json_char * json , size_t length , char * error_buf)"		13078	0					
ANR	13080	CompoundStatement		225:0:6036:27927	13078	0					
ANR	13081	IdentifierDeclStatement	json_char error [ json_error_max ] ;	226:3:6041:6073	13078	0	True				
ANR	13082	IdentifierDecl	error [ json_error_max ]		13078	0					
ANR	13083	IdentifierDeclType	json_char [ json_error_max ]		13078	0					
ANR	13084	Identifier	error		13078	1					
ANR	13085	Identifier	json_error_max		13078	2					
ANR	13086	IdentifierDeclStatement	const json_char * end ;	227:3:6078:6099	13078	1	True				
ANR	13087	IdentifierDecl	* end		13078	0					
ANR	13088	IdentifierDeclType	const json_char *		13078	0					
ANR	13089	Identifier	end		13078	1					
ANR	13090	IdentifierDeclStatement	"json_value * top , * root , * alloc = 0 ;"	228:3:6104:6141	13078	2	True				
ANR	13091	IdentifierDecl	* top		13078	0					
ANR	13092	IdentifierDeclType	json_value *		13078	0					
ANR	13093	Identifier	top		13078	1					
ANR	13094	IdentifierDecl	* root		13078	1					
ANR	13095	IdentifierDeclType	json_value *		13078	0					
ANR	13096	Identifier	root		13078	1					
ANR	13097	IdentifierDecl	* alloc = 0		13078	2					
ANR	13098	IdentifierDeclType	json_value *		13078	0					
ANR	13099	Identifier	alloc		13078	1					
ANR	13100	AssignmentExpression	* alloc = 0		13078	2		=			
ANR	13101	Identifier	alloc		13078	0					
ANR	13102	PrimaryExpression	0		13078	1					
ANR	13103	IdentifierDeclStatement	json_state state = { 0 } ;	229:3:6146:6170	13078	3	True				
ANR	13104	IdentifierDecl	state = { 0 }		13078	0					
ANR	13105	IdentifierDeclType	json_state		13078	0					
ANR	13106	Identifier	state		13078	1					
ANR	13107	AssignmentExpression	state = { 0 }		13078	2		=			
ANR	13108	Identifier	state		13078	0					
ANR	13109	InitializerList	0		13078	1					
ANR	13110	PrimaryExpression	0		13078	0					
ANR	13111	IdentifierDeclStatement	long flags ;	230:3:6175:6185	13078	4	True				
ANR	13112	IdentifierDecl	flags		13078	0					
ANR	13113	IdentifierDeclType	long		13078	0					
ANR	13114	Identifier	flags		13078	1					
ANR	13115	IdentifierDeclStatement	"long num_digits = 0 , num_e = 0 ;"	231:3:6190:6220	13078	5	True				
ANR	13116	IdentifierDecl	num_digits = 0		13078	0					
ANR	13117	IdentifierDeclType	long		13078	0					
ANR	13118	Identifier	num_digits		13078	1					
ANR	13119	AssignmentExpression	num_digits = 0		13078	2		=			
ANR	13120	Identifier	num_digits		13078	0					
ANR	13121	PrimaryExpression	0		13078	1					
ANR	13122	IdentifierDecl	num_e = 0		13078	1					
ANR	13123	IdentifierDeclType	long		13078	0					
ANR	13124	Identifier	num_e		13078	1					
ANR	13125	AssignmentExpression	num_e = 0		13078	2		=			
ANR	13126	Identifier	num_e		13078	0					
ANR	13127	PrimaryExpression	0		13078	1					
ANR	13128	IdentifierDeclStatement	json_int_t num_fraction = 0 ;	232:3:6225:6252	13078	6	True				
ANR	13129	IdentifierDecl	num_fraction = 0		13078	0					
ANR	13130	IdentifierDeclType	json_int_t		13078	0					
ANR	13131	Identifier	num_fraction		13078	1					
ANR	13132	AssignmentExpression	num_fraction = 0		13078	2		=			
ANR	13133	Identifier	num_fraction		13078	0					
ANR	13134	PrimaryExpression	0		13078	1					
ANR	13135	IfStatement	if ( length >= 3 && ( ( unsigned char ) json [ 0 ] ) == 0xEF && ( ( unsigned char ) json [ 1 ] ) == 0xBB && ( ( unsigned char ) json [ 2 ] ) == 0xBF )		13078	7					
ANR	13136	Condition	length >= 3 && ( ( unsigned char ) json [ 0 ] ) == 0xEF && ( ( unsigned char ) json [ 1 ] ) == 0xBB && ( ( unsigned char ) json [ 2 ] ) == 0xBF	236:7:6290:6452	13078	0	True				
ANR	13137	AndExpression	length >= 3 && ( ( unsigned char ) json [ 0 ] ) == 0xEF && ( ( unsigned char ) json [ 1 ] ) == 0xBB && ( ( unsigned char ) json [ 2 ] ) == 0xBF		13078	0		&&			
ANR	13138	RelationalExpression	length >= 3		13078	0		>=			
ANR	13139	Identifier	length		13078	0					
ANR	13140	PrimaryExpression	3		13078	1					
ANR	13141	AndExpression	( ( unsigned char ) json [ 0 ] ) == 0xEF && ( ( unsigned char ) json [ 1 ] ) == 0xBB && ( ( unsigned char ) json [ 2 ] ) == 0xBF		13078	1		&&			
ANR	13142	EqualityExpression	( ( unsigned char ) json [ 0 ] ) == 0xEF		13078	0		==			
ANR	13143	CastExpression	( unsigned char ) json [ 0 ]		13078	0					
ANR	13144	CastTarget	unsigned char		13078	0					
ANR	13145	ArrayIndexing	json [ 0 ]		13078	1					
ANR	13146	Identifier	json		13078	0					
ANR	13147	PrimaryExpression	0		13078	1					
ANR	13148	PrimaryExpression	0xEF		13078	1					
ANR	13149	AndExpression	( ( unsigned char ) json [ 1 ] ) == 0xBB && ( ( unsigned char ) json [ 2 ] ) == 0xBF		13078	1		&&			
ANR	13150	EqualityExpression	( ( unsigned char ) json [ 1 ] ) == 0xBB		13078	0		==			
ANR	13151	CastExpression	( unsigned char ) json [ 1 ]		13078	0					
ANR	13152	CastTarget	unsigned char		13078	0					
ANR	13153	ArrayIndexing	json [ 1 ]		13078	1					
ANR	13154	Identifier	json		13078	0					
ANR	13155	PrimaryExpression	1		13078	1					
ANR	13156	PrimaryExpression	0xBB		13078	1					
ANR	13157	EqualityExpression	( ( unsigned char ) json [ 2 ] ) == 0xBF		13078	1		==			
ANR	13158	CastExpression	( unsigned char ) json [ 2 ]		13078	0					
ANR	13159	CastTarget	unsigned char		13078	0					
ANR	13160	ArrayIndexing	json [ 2 ]		13078	1					
ANR	13161	Identifier	json		13078	0					
ANR	13162	PrimaryExpression	2		13078	1					
ANR	13163	PrimaryExpression	0xBF		13078	1					
ANR	13164	CompoundStatement		15:3:421:421	13078	1					
ANR	13165	ExpressionStatement	json += 3	240:6:6466:6475	13078	0	True				
ANR	13166	AssignmentExpression	json += 3		13078	0		+=			
ANR	13167	Identifier	json		13078	0					
ANR	13168	PrimaryExpression	3		13078	1					
ANR	13169	ExpressionStatement	length -= 3	241:6:6483:6494	13078	1	True				
ANR	13170	AssignmentExpression	length -= 3		13078	0		-=			
ANR	13171	Identifier	length		13078	0					
ANR	13172	PrimaryExpression	3		13078	1					
ANR	13173	ExpressionStatement	error [ 0 ] = '\\0'	244:3:6505:6520	13078	8	True				
ANR	13174	AssignmentExpression	error [ 0 ] = '\\0'		13078	0		=			
ANR	13175	ArrayIndexing	error [ 0 ]		13078	0					
ANR	13176	Identifier	error		13078	0					
ANR	13177	PrimaryExpression	0		13078	1					
ANR	13178	PrimaryExpression	'\\0'		13078	1					
ANR	13179	ExpressionStatement	end = ( json + length )	245:3:6525:6546	13078	9	True				
ANR	13180	AssignmentExpression	end = ( json + length )		13078	0		=			
ANR	13181	Identifier	end		13078	0					
ANR	13182	AdditiveExpression	json + length		13078	1		+			
ANR	13183	Identifier	json		13078	0					
ANR	13184	Identifier	length		13078	1					
ANR	13185	ExpressionStatement	"memcpy ( & state . settings , settings , sizeof ( json_settings ) )"	247:3:6552:6610	13078	10	True				
ANR	13186	CallExpression	"memcpy ( & state . settings , settings , sizeof ( json_settings ) )"		13078	0					
ANR	13187	Callee	memcpy		13078	0					
ANR	13188	Identifier	memcpy		13078	0					
ANR	13189	ArgumentList	& state . settings		13078	1					
ANR	13190	Argument	& state . settings		13078	0					
ANR	13191	UnaryOperationExpression	& state . settings		13078	0					
ANR	13192	UnaryOperator	&		13078	0					
ANR	13193	MemberAccess	state . settings		13078	1					
ANR	13194	Identifier	state		13078	0					
ANR	13195	Identifier	settings		13078	1					
ANR	13196	Argument	settings		13078	1					
ANR	13197	Identifier	settings		13078	0					
ANR	13198	Argument	sizeof ( json_settings )		13078	2					
ANR	13199	SizeofExpression	sizeof ( json_settings )		13078	0					
ANR	13200	Sizeof	sizeof		13078	0					
ANR	13201	SizeofOperand	json_settings		13078	1					
ANR	13202	IfStatement	if ( ! state . settings . mem_alloc )		13078	11					
ANR	13203	Condition	! state . settings . mem_alloc	249:7:6620:6644	13078	0	True				
ANR	13204	UnaryOperationExpression	! state . settings . mem_alloc		13078	0					
ANR	13205	UnaryOperator	!		13078	0					
ANR	13206	MemberAccess	state . settings . mem_alloc		13078	1					
ANR	13207	MemberAccess	state . settings		13078	0					
ANR	13208	Identifier	state		13078	0					
ANR	13209	Identifier	settings		13078	1					
ANR	13210	Identifier	mem_alloc		13078	1					
ANR	13211	ExpressionStatement	state . settings . mem_alloc = default_alloc	250:6:6653:6693	13078	1	True				
ANR	13212	AssignmentExpression	state . settings . mem_alloc = default_alloc		13078	0		=			
ANR	13213	MemberAccess	state . settings . mem_alloc		13078	0					
ANR	13214	MemberAccess	state . settings		13078	0					
ANR	13215	Identifier	state		13078	0					
ANR	13216	Identifier	settings		13078	1					
ANR	13217	Identifier	mem_alloc		13078	1					
ANR	13218	Identifier	default_alloc		13078	1					
ANR	13219	IfStatement	if ( ! state . settings . mem_free )		13078	12					
ANR	13220	Condition	! state . settings . mem_free	252:7:6703:6726	13078	0	True				
ANR	13221	UnaryOperationExpression	! state . settings . mem_free		13078	0					
ANR	13222	UnaryOperator	!		13078	0					
ANR	13223	MemberAccess	state . settings . mem_free		13078	1					
ANR	13224	MemberAccess	state . settings		13078	0					
ANR	13225	Identifier	state		13078	0					
ANR	13226	Identifier	settings		13078	1					
ANR	13227	Identifier	mem_free		13078	1					
ANR	13228	ExpressionStatement	state . settings . mem_free = default_free	253:6:6735:6773	13078	1	True				
ANR	13229	AssignmentExpression	state . settings . mem_free = default_free		13078	0		=			
ANR	13230	MemberAccess	state . settings . mem_free		13078	0					
ANR	13231	MemberAccess	state . settings		13078	0					
ANR	13232	Identifier	state		13078	0					
ANR	13233	Identifier	settings		13078	1					
ANR	13234	Identifier	mem_free		13078	1					
ANR	13235	Identifier	default_free		13078	1					
ANR	13236	ExpressionStatement	"memset ( & state . uint_max , 0xFF , sizeof ( state . uint_max ) )"	255:3:6779:6834	13078	13	True				
ANR	13237	CallExpression	"memset ( & state . uint_max , 0xFF , sizeof ( state . uint_max ) )"		13078	0					
ANR	13238	Callee	memset		13078	0					
ANR	13239	Identifier	memset		13078	0					
ANR	13240	ArgumentList	& state . uint_max		13078	1					
ANR	13241	Argument	& state . uint_max		13078	0					
ANR	13242	UnaryOperationExpression	& state . uint_max		13078	0					
ANR	13243	UnaryOperator	&		13078	0					
ANR	13244	MemberAccess	state . uint_max		13078	1					
ANR	13245	Identifier	state		13078	0					
ANR	13246	Identifier	uint_max		13078	1					
ANR	13247	Argument	0xFF		13078	1					
ANR	13248	PrimaryExpression	0xFF		13078	0					
ANR	13249	Argument	sizeof ( state . uint_max )		13078	2					
ANR	13250	SizeofExpression	sizeof ( state . uint_max )		13078	0					
ANR	13251	Sizeof	sizeof		13078	0					
ANR	13252	MemberAccess	state . uint_max		13078	1					
ANR	13253	Identifier	state		13078	0					
ANR	13254	Identifier	uint_max		13078	1					
ANR	13255	ExpressionStatement	"memset ( & state . ulong_max , 0xFF , sizeof ( state . ulong_max ) )"	256:3:6839:6896	13078	14	True				
ANR	13256	CallExpression	"memset ( & state . ulong_max , 0xFF , sizeof ( state . ulong_max ) )"		13078	0					
ANR	13257	Callee	memset		13078	0					
ANR	13258	Identifier	memset		13078	0					
ANR	13259	ArgumentList	& state . ulong_max		13078	1					
ANR	13260	Argument	& state . ulong_max		13078	0					
ANR	13261	UnaryOperationExpression	& state . ulong_max		13078	0					
ANR	13262	UnaryOperator	&		13078	0					
ANR	13263	MemberAccess	state . ulong_max		13078	1					
ANR	13264	Identifier	state		13078	0					
ANR	13265	Identifier	ulong_max		13078	1					
ANR	13266	Argument	0xFF		13078	1					
ANR	13267	PrimaryExpression	0xFF		13078	0					
ANR	13268	Argument	sizeof ( state . ulong_max )		13078	2					
ANR	13269	SizeofExpression	sizeof ( state . ulong_max )		13078	0					
ANR	13270	Sizeof	sizeof		13078	0					
ANR	13271	MemberAccess	state . ulong_max		13078	1					
ANR	13272	Identifier	state		13078	0					
ANR	13273	Identifier	ulong_max		13078	1					
ANR	13274	ExpressionStatement	state . uint_max -= 8	258:3:6902:6921	13078	15	True				
ANR	13275	AssignmentExpression	state . uint_max -= 8		13078	0		-=			
ANR	13276	MemberAccess	state . uint_max		13078	0					
ANR	13277	Identifier	state		13078	0					
ANR	13278	Identifier	uint_max		13078	1					
ANR	13279	PrimaryExpression	8		13078	1					
ANR	13280	ExpressionStatement	state . ulong_max -= 8	259:3:6981:7001	13078	16	True				
ANR	13281	AssignmentExpression	state . ulong_max -= 8		13078	0		-=			
ANR	13282	MemberAccess	state . ulong_max		13078	0					
ANR	13283	Identifier	state		13078	0					
ANR	13284	Identifier	ulong_max		13078	1					
ANR	13285	PrimaryExpression	8		13078	1					
ANR	13286	ForStatement	for ( state . first_pass = 1 ; state . first_pass >= 0 ; -- state . first_pass )		13078	17					
ANR	13287	ForInit	state . first_pass = 1 ;	261:8:7012:7032	13078	0	True				
ANR	13288	AssignmentExpression	state . first_pass = 1		13078	0		=			
ANR	13289	MemberAccess	state . first_pass		13078	0					
ANR	13290	Identifier	state		13078	0					
ANR	13291	Identifier	first_pass		13078	1					
ANR	13292	PrimaryExpression	1		13078	1					
ANR	13293	Condition	state . first_pass >= 0	261:30:7034:7054	13078	1	True				
ANR	13294	RelationalExpression	state . first_pass >= 0		13078	0		>=			
ANR	13295	MemberAccess	state . first_pass		13078	0					
ANR	13296	Identifier	state		13078	0					
ANR	13297	Identifier	first_pass		13078	1					
ANR	13298	PrimaryExpression	0		13078	1					
ANR	13299	UnaryExpression	-- state . first_pass	261:53:7057:7075	13078	2	True				
ANR	13300	IncDec	--		13078	0					
ANR	13301	MemberAccess	state . first_pass		13078	1					
ANR	13302	Identifier	state		13078	0					
ANR	13303	Identifier	first_pass		13078	1					
ANR	13304	CompoundStatement		42:6:1154:1184	13078	3					
ANR	13305	IdentifierDeclStatement	json_uchar uchar ;	263:6:7089:7105	13078	0	True				
ANR	13306	IdentifierDecl	uchar		13078	0					
ANR	13307	IdentifierDeclType	json_uchar		13078	0					
ANR	13308	Identifier	uchar		13078	1					
ANR	13309	IdentifierDeclStatement	"unsigned char uc_b1 , uc_b2 , uc_b3 , uc_b4 ;"	264:6:7113:7153	13078	1	True				
ANR	13310	IdentifierDecl	uc_b1		13078	0					
ANR	13311	IdentifierDeclType	unsigned char		13078	0					
ANR	13312	Identifier	uc_b1		13078	1					
ANR	13313	IdentifierDecl	uc_b2		13078	1					
ANR	13314	IdentifierDeclType	unsigned char		13078	0					
ANR	13315	Identifier	uc_b2		13078	1					
ANR	13316	IdentifierDecl	uc_b3		13078	2					
ANR	13317	IdentifierDeclType	unsigned char		13078	0					
ANR	13318	Identifier	uc_b3		13078	1					
ANR	13319	IdentifierDecl	uc_b4		13078	3					
ANR	13320	IdentifierDeclType	unsigned char		13078	0					
ANR	13321	Identifier	uc_b4		13078	1					
ANR	13322	IdentifierDeclStatement	json_char * string = 0 ;	265:6:7161:7183	13078	2	True				
ANR	13323	IdentifierDecl	* string = 0		13078	0					
ANR	13324	IdentifierDeclType	json_char *		13078	0					
ANR	13325	Identifier	string		13078	1					
ANR	13326	AssignmentExpression	* string = 0		13078	2		=			
ANR	13327	Identifier	string		13078	0					
ANR	13328	PrimaryExpression	0		13078	1					
ANR	13329	IdentifierDeclStatement	unsigned int string_length = 0 ;	266:6:7191:7221	13078	3	True				
ANR	13330	IdentifierDecl	string_length = 0		13078	0					
ANR	13331	IdentifierDeclType	unsigned int		13078	0					
ANR	13332	Identifier	string_length		13078	1					
ANR	13333	AssignmentExpression	string_length = 0		13078	2		=			
ANR	13334	Identifier	string_length		13078	0					
ANR	13335	PrimaryExpression	0		13078	1					
ANR	13336	ExpressionStatement	top = root = 0	268:6:7230:7244	13078	4	True				
ANR	13337	AssignmentExpression	top = root = 0		13078	0		=			
ANR	13338	Identifier	top		13078	0					
ANR	13339	AssignmentExpression	root = 0		13078	1		=			
ANR	13340	Identifier	root		13078	0					
ANR	13341	PrimaryExpression	0		13078	1					
ANR	13342	ExpressionStatement	flags = flag_seek_value	269:6:7252:7275	13078	5	True				
ANR	13343	AssignmentExpression	flags = flag_seek_value		13078	0		=			
ANR	13344	Identifier	flags		13078	0					
ANR	13345	Identifier	flag_seek_value		13078	1					
ANR	13346	ExpressionStatement	state . cur_line = 1	271:6:7284:7302	13078	6	True				
ANR	13347	AssignmentExpression	state . cur_line = 1		13078	0		=			
ANR	13348	MemberAccess	state . cur_line		13078	0					
ANR	13349	Identifier	state		13078	0					
ANR	13350	Identifier	cur_line		13078	1					
ANR	13351	PrimaryExpression	1		13078	1					
ANR	13352	ForStatement	for ( state . ptr = json ; ; ++ state . ptr )		13078	7					
ANR	13353	ForInit	state . ptr = json ;	273:11:7316:7333	13078	0	True				
ANR	13354	AssignmentExpression	state . ptr = json		13078	0		=			
ANR	13355	MemberAccess	state . ptr		13078	0					
ANR	13356	Identifier	state		13078	0					
ANR	13357	Identifier	ptr		13078	1					
ANR	13358	Identifier	json		13078	1					
ANR	13359	UnaryExpression	++ state . ptr	273:31:7336:7347	13078	1	True				
ANR	13360	IncDec	++		13078	0					
ANR	13361	MemberAccess	state . ptr		13078	1					
ANR	13362	Identifier	state		13078	0					
ANR	13363	Identifier	ptr		13078	1					
ANR	13364	CompoundStatement		51:9:1330:1379	13078	2					
ANR	13365	IdentifierDeclStatement	json_char b = ( state . ptr == end ? 0 : * state . ptr ) ;	275:9:7367:7416	13078	0	True				
ANR	13366	IdentifierDecl	b = ( state . ptr == end ? 0 : * state . ptr )		13078	0					
ANR	13367	IdentifierDeclType	json_char		13078	0					
ANR	13368	Identifier	b		13078	1					
ANR	13369	AssignmentExpression	b = ( state . ptr == end ? 0 : * state . ptr )		13078	2		=			
ANR	13370	Identifier	b		13078	0					
ANR	13371	ConditionalExpression	state . ptr == end ? 0 : * state . ptr		13078	1					
ANR	13372	Condition	state . ptr == end		13078	0					
ANR	13373	EqualityExpression	state . ptr == end		13078	0		==			
ANR	13374	MemberAccess	state . ptr		13078	0					
ANR	13375	Identifier	state		13078	0					
ANR	13376	Identifier	ptr		13078	1					
ANR	13377	Identifier	end		13078	1					
ANR	13378	PrimaryExpression	0		13078	1					
ANR	13379	UnaryOperationExpression	* state . ptr		13078	2					
ANR	13380	UnaryOperator	*		13078	0					
ANR	13381	MemberAccess	state . ptr		13078	1					
ANR	13382	Identifier	state		13078	0					
ANR	13383	Identifier	ptr		13078	1					
ANR	13384	IfStatement	if ( flags & flag_string )		13078	1					
ANR	13385	Condition	flags & flag_string	277:13:7441:7459	13078	0	True				
ANR	13386	BitAndExpression	flags & flag_string		13078	0		&			
ANR	13387	Identifier	flags		13078	0					
ANR	13388	Identifier	flag_string		13078	1					
ANR	13389	CompoundStatement		54:9:1434:1434	13078	1					
ANR	13390	IfStatement	if ( ! b )		13078	0					
ANR	13391	Condition	! b	279:16:7489:7490	13078	0	True				
ANR	13392	UnaryOperationExpression	! b		13078	0					
ANR	13393	UnaryOperator	!		13078	0					
ANR	13394	Identifier	b		13078	1					
ANR	13395	CompoundStatement		56:12:1468:1468	13078	1					
ANR	13396	ExpressionStatement	"sprintf ( error , ""Unexpected EOF in string (at %d:%d)"" , line_and_col )"	280:15:7508:7576	13078	0	True				
ANR	13397	CallExpression	"sprintf ( error , ""Unexpected EOF in string (at %d:%d)"" , line_and_col )"		13078	0					
ANR	13398	Callee	sprintf		13078	0					
ANR	13399	Identifier	sprintf		13078	0					
ANR	13400	ArgumentList	error		13078	1					
ANR	13401	Argument	error		13078	0					
ANR	13402	Identifier	error		13078	0					
ANR	13403	Argument	"""Unexpected EOF in string (at %d:%d)"""		13078	1					
ANR	13404	PrimaryExpression	"""Unexpected EOF in string (at %d:%d)"""		13078	0					
ANR	13405	Argument	line_and_col		13078	2					
ANR	13406	Identifier	line_and_col		13078	0					
ANR	13407	GotoStatement	goto e_failed ;	281:15:7593:7606	13078	1	True				
ANR	13408	Identifier	e_failed		13078	0					
ANR	13409	IfStatement	if ( string_length > state . uint_max )		13078	1					
ANR	13410	Condition	string_length > state . uint_max	284:16:7639:7668	13078	0	True				
ANR	13411	RelationalExpression	string_length > state . uint_max		13078	0		>			
ANR	13412	Identifier	string_length		13078	0					
ANR	13413	MemberAccess	state . uint_max		13078	1					
ANR	13414	Identifier	state		13078	0					
ANR	13415	Identifier	uint_max		13078	1					
ANR	13416	GotoStatement	goto e_overflow ;	285:15:7686:7701	13078	1	True				
ANR	13417	Identifier	e_overflow		13078	0					
ANR	13418	IfStatement	if ( flags & flag_escaped )		13078	2					
ANR	13419	Condition	flags & flag_escaped	287:16:7720:7739	13078	0	True				
ANR	13420	BitAndExpression	flags & flag_escaped		13078	0		&			
ANR	13421	Identifier	flags		13078	0					
ANR	13422	Identifier	flag_escaped		13078	1					
ANR	13423	CompoundStatement		64:12:1717:1717	13078	1					
ANR	13424	ExpressionStatement	flags &= ~ flag_escaped	289:15:7771:7794	13078	0	True				
ANR	13425	AssignmentExpression	flags &= ~ flag_escaped		13078	0		&=			
ANR	13426	Identifier	flags		13078	0					
ANR	13427	UnaryOperationExpression	~ flag_escaped		13078	1					
ANR	13428	UnaryOperator	~		13078	0					
ANR	13429	Identifier	flag_escaped		13078	1					
ANR	13430	SwitchStatement	switch ( b )		13078	1					
ANR	13431	Condition	b	291:23:7820:7820	13078	0	True				
ANR	13432	Identifier	b		13078	0					
ANR	13433	CompoundStatement		68:15:1801:1801	13078	1					
ANR	13434	Label	case 'b' :	293:18:7858:7866	13078	0	True				
ANR	13435	ExpressionStatement	string_add ( '\\b' )	293:29:7869:7886	13078	1	True				
ANR	13436	CallExpression	string_add ( '\\b' )		13078	0					
ANR	13437	Callee	string_add		13078	0					
ANR	13438	Identifier	string_add		13078	0					
ANR	13439	ArgumentList	'\\b'		13078	1					
ANR	13440	Argument	'\\b'		13078	0					
ANR	13441	PrimaryExpression	'\\b'		13078	0					
ANR	13442	BreakStatement	break ;	293:49:7889:7894	13078	2	True				
ANR	13443	Label	case 'f' :	294:18:7914:7922	13078	3	True				
ANR	13444	ExpressionStatement	string_add ( '\\f' )	294:29:7925:7942	13078	4	True				
ANR	13445	CallExpression	string_add ( '\\f' )		13078	0					
ANR	13446	Callee	string_add		13078	0					
ANR	13447	Identifier	string_add		13078	0					
ANR	13448	ArgumentList	'\\f'		13078	1					
ANR	13449	Argument	'\\f'		13078	0					
ANR	13450	PrimaryExpression	'\\f'		13078	0					
ANR	13451	BreakStatement	break ;	294:49:7945:7950	13078	5	True				
ANR	13452	Label	case 'n' :	295:18:7970:7978	13078	6	True				
ANR	13453	ExpressionStatement	string_add ( '\\n' )	295:29:7981:7998	13078	7	True				
ANR	13454	CallExpression	string_add ( '\\n' )		13078	0					
ANR	13455	Callee	string_add		13078	0					
ANR	13456	Identifier	string_add		13078	0					
ANR	13457	ArgumentList	'\\n'		13078	1					
ANR	13458	Argument	'\\n'		13078	0					
ANR	13459	PrimaryExpression	'\\n'		13078	0					
ANR	13460	BreakStatement	break ;	295:49:8001:8006	13078	8	True				
ANR	13461	Label	case 'r' :	296:18:8026:8034	13078	9	True				
ANR	13462	ExpressionStatement	string_add ( '\\r' )	296:29:8037:8054	13078	10	True				
ANR	13463	CallExpression	string_add ( '\\r' )		13078	0					
ANR	13464	Callee	string_add		13078	0					
ANR	13465	Identifier	string_add		13078	0					
ANR	13466	ArgumentList	'\\r'		13078	1					
ANR	13467	Argument	'\\r'		13078	0					
ANR	13468	PrimaryExpression	'\\r'		13078	0					
ANR	13469	BreakStatement	break ;	296:49:8057:8062	13078	11	True				
ANR	13470	Label	case 't' :	297:18:8082:8090	13078	12	True				
ANR	13471	ExpressionStatement	string_add ( '\\t' )	297:29:8093:8110	13078	13	True				
ANR	13472	CallExpression	string_add ( '\\t' )		13078	0					
ANR	13473	Callee	string_add		13078	0					
ANR	13474	Identifier	string_add		13078	0					
ANR	13475	ArgumentList	'\\t'		13078	1					
ANR	13476	Argument	'\\t'		13078	0					
ANR	13477	PrimaryExpression	'\\t'		13078	0					
ANR	13478	BreakStatement	break ;	297:49:8113:8118	13078	14	True				
ANR	13479	Label	case 'u' :	298:18:8138:8146	13078	15	True				
ANR	13480	IfStatement	if ( end - state . ptr < 4 || ( uc_b1 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF )		13078	16					
ANR	13481	Condition	end - state . ptr < 4 || ( uc_b1 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF	300:24:8173:8476	13078	0	True				
ANR	13482	OrExpression	end - state . ptr < 4 || ( uc_b1 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	0		||			
ANR	13483	RelationalExpression	end - state . ptr < 4		13078	0		<			
ANR	13484	AdditiveExpression	end - state . ptr		13078	0		-			
ANR	13485	Identifier	end		13078	0					
ANR	13486	MemberAccess	state . ptr		13078	1					
ANR	13487	Identifier	state		13078	0					
ANR	13488	Identifier	ptr		13078	1					
ANR	13489	PrimaryExpression	4		13078	1					
ANR	13490	OrExpression	( uc_b1 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	1		||			
ANR	13491	EqualityExpression	( uc_b1 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	0		==			
ANR	13492	AssignmentExpression	uc_b1 = hex_value ( * ++ state . ptr )		13078	0		=			
ANR	13493	Identifier	uc_b1		13078	0					
ANR	13494	CallExpression	hex_value ( * ++ state . ptr )		13078	1					
ANR	13495	Callee	hex_value		13078	0					
ANR	13496	Identifier	hex_value		13078	0					
ANR	13497	ArgumentList	* ++ state . ptr		13078	1					
ANR	13498	Argument	* ++ state . ptr		13078	0					
ANR	13499	UnaryOperationExpression	* ++ state . ptr		13078	0					
ANR	13500	UnaryOperator	*		13078	0					
ANR	13501	UnaryExpression	++ state . ptr		13078	1					
ANR	13502	IncDec	++		13078	0					
ANR	13503	MemberAccess	state . ptr		13078	1					
ANR	13504	Identifier	state		13078	0					
ANR	13505	Identifier	ptr		13078	1					
ANR	13506	PrimaryExpression	0xFF		13078	1					
ANR	13507	OrExpression	( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	1		||			
ANR	13508	EqualityExpression	( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	0		==			
ANR	13509	AssignmentExpression	uc_b2 = hex_value ( * ++ state . ptr )		13078	0		=			
ANR	13510	Identifier	uc_b2		13078	0					
ANR	13511	CallExpression	hex_value ( * ++ state . ptr )		13078	1					
ANR	13512	Callee	hex_value		13078	0					
ANR	13513	Identifier	hex_value		13078	0					
ANR	13514	ArgumentList	* ++ state . ptr		13078	1					
ANR	13515	Argument	* ++ state . ptr		13078	0					
ANR	13516	UnaryOperationExpression	* ++ state . ptr		13078	0					
ANR	13517	UnaryOperator	*		13078	0					
ANR	13518	UnaryExpression	++ state . ptr		13078	1					
ANR	13519	IncDec	++		13078	0					
ANR	13520	MemberAccess	state . ptr		13078	1					
ANR	13521	Identifier	state		13078	0					
ANR	13522	Identifier	ptr		13078	1					
ANR	13523	PrimaryExpression	0xFF		13078	1					
ANR	13524	OrExpression	( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	1		||			
ANR	13525	EqualityExpression	( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	0		==			
ANR	13526	AssignmentExpression	uc_b3 = hex_value ( * ++ state . ptr )		13078	0		=			
ANR	13527	Identifier	uc_b3		13078	0					
ANR	13528	CallExpression	hex_value ( * ++ state . ptr )		13078	1					
ANR	13529	Callee	hex_value		13078	0					
ANR	13530	Identifier	hex_value		13078	0					
ANR	13531	ArgumentList	* ++ state . ptr		13078	1					
ANR	13532	Argument	* ++ state . ptr		13078	0					
ANR	13533	UnaryOperationExpression	* ++ state . ptr		13078	0					
ANR	13534	UnaryOperator	*		13078	0					
ANR	13535	UnaryExpression	++ state . ptr		13078	1					
ANR	13536	IncDec	++		13078	0					
ANR	13537	MemberAccess	state . ptr		13078	1					
ANR	13538	Identifier	state		13078	0					
ANR	13539	Identifier	ptr		13078	1					
ANR	13540	PrimaryExpression	0xFF		13078	1					
ANR	13541	EqualityExpression	( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	1		==			
ANR	13542	AssignmentExpression	uc_b4 = hex_value ( * ++ state . ptr )		13078	0		=			
ANR	13543	Identifier	uc_b4		13078	0					
ANR	13544	CallExpression	hex_value ( * ++ state . ptr )		13078	1					
ANR	13545	Callee	hex_value		13078	0					
ANR	13546	Identifier	hex_value		13078	0					
ANR	13547	ArgumentList	* ++ state . ptr		13078	1					
ANR	13548	Argument	* ++ state . ptr		13078	0					
ANR	13549	UnaryOperationExpression	* ++ state . ptr		13078	0					
ANR	13550	UnaryOperator	*		13078	0					
ANR	13551	UnaryExpression	++ state . ptr		13078	1					
ANR	13552	IncDec	++		13078	0					
ANR	13553	MemberAccess	state . ptr		13078	1					
ANR	13554	Identifier	state		13078	0					
ANR	13555	Identifier	ptr		13078	1					
ANR	13556	PrimaryExpression	0xFF		13078	1					
ANR	13557	CompoundStatement		81:20:2462:2462	13078	1					
ANR	13558	ExpressionStatement	"sprintf ( error , ""Invalid character value `%c` (at %d:%d)"" , b , line_and_col )"	306:24:8525:8600	13078	0	True				
ANR	13559	CallExpression	"sprintf ( error , ""Invalid character value `%c` (at %d:%d)"" , b , line_and_col )"		13078	0					
ANR	13560	Callee	sprintf		13078	0					
ANR	13561	Identifier	sprintf		13078	0					
ANR	13562	ArgumentList	error		13078	1					
ANR	13563	Argument	error		13078	0					
ANR	13564	Identifier	error		13078	0					
ANR	13565	Argument	"""Invalid character value `%c` (at %d:%d)"""		13078	1					
ANR	13566	PrimaryExpression	"""Invalid character value `%c` (at %d:%d)"""		13078	0					
ANR	13567	Argument	b		13078	2					
ANR	13568	Identifier	b		13078	0					
ANR	13569	Argument	line_and_col		13078	3					
ANR	13570	Identifier	line_and_col		13078	0					
ANR	13571	GotoStatement	goto e_failed ;	307:24:8626:8639	13078	1	True				
ANR	13572	Identifier	e_failed		13078	0					
ANR	13573	ExpressionStatement	uc_b1 = ( uc_b1 << 4 ) | uc_b2	310:20:8684:8712	13078	17	True				
ANR	13574	AssignmentExpression	uc_b1 = ( uc_b1 << 4 ) | uc_b2		13078	0		=			
ANR	13575	Identifier	uc_b1		13078	0					
ANR	13576	InclusiveOrExpression	( uc_b1 << 4 ) | uc_b2		13078	1		|			
ANR	13577	ShiftExpression	uc_b1 << 4		13078	0		<<			
ANR	13578	Identifier	uc_b1		13078	0					
ANR	13579	PrimaryExpression	4		13078	1					
ANR	13580	Identifier	uc_b2		13078	1					
ANR	13581	ExpressionStatement	uc_b2 = ( uc_b3 << 4 ) | uc_b4	311:20:8734:8762	13078	18	True				
ANR	13582	AssignmentExpression	uc_b2 = ( uc_b3 << 4 ) | uc_b4		13078	0		=			
ANR	13583	Identifier	uc_b2		13078	0					
ANR	13584	InclusiveOrExpression	( uc_b3 << 4 ) | uc_b4		13078	1		|			
ANR	13585	ShiftExpression	uc_b3 << 4		13078	0		<<			
ANR	13586	Identifier	uc_b3		13078	0					
ANR	13587	PrimaryExpression	4		13078	1					
ANR	13588	Identifier	uc_b4		13078	1					
ANR	13589	ExpressionStatement	uchar = ( uc_b1 << 8 ) | uc_b2	312:20:8784:8812	13078	19	True				
ANR	13590	AssignmentExpression	uchar = ( uc_b1 << 8 ) | uc_b2		13078	0		=			
ANR	13591	Identifier	uchar		13078	0					
ANR	13592	InclusiveOrExpression	( uc_b1 << 8 ) | uc_b2		13078	1		|			
ANR	13593	ShiftExpression	uc_b1 << 8		13078	0		<<			
ANR	13594	Identifier	uc_b1		13078	0					
ANR	13595	PrimaryExpression	8		13078	1					
ANR	13596	Identifier	uc_b2		13078	1					
ANR	13597	IfStatement	if ( ( uchar & 0xF800 ) == 0xD800 )		13078	20					
ANR	13598	Condition	( uchar & 0xF800 ) == 0xD800	314:24:8839:8864	13078	0	True				
ANR	13599	EqualityExpression	( uchar & 0xF800 ) == 0xD800		13078	0		==			
ANR	13600	BitAndExpression	uchar & 0xF800		13078	0		&			
ANR	13601	Identifier	uchar		13078	0					
ANR	13602	PrimaryExpression	0xF800		13078	1					
ANR	13603	PrimaryExpression	0xD800		13078	1					
ANR	13604	CompoundStatement		91:24:2856:2873	13078	1					
ANR	13605	IdentifierDeclStatement	json_uchar uchar2 ;	315:24:8893:8910	13078	0	True				
ANR	13606	IdentifierDecl	uchar2		13078	0					
ANR	13607	IdentifierDeclType	json_uchar		13078	0					
ANR	13608	Identifier	uchar2		13078	1					
ANR	13609	IfStatement	if ( end - state . ptr < 6 || ( * ++ state . ptr ) != '\\\\' || ( * ++ state . ptr ) != 'u' || ( uc_b1 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF )		13078	1					
ANR	13610	Condition	end - state . ptr < 6 || ( * ++ state . ptr ) != '\\\\' || ( * ++ state . ptr ) != 'u' || ( uc_b1 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF	317:28:8965:9336	13078	0	True				
ANR	13611	OrExpression	end - state . ptr < 6 || ( * ++ state . ptr ) != '\\\\' || ( * ++ state . ptr ) != 'u' || ( uc_b1 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	0		||			
ANR	13612	RelationalExpression	end - state . ptr < 6		13078	0		<			
ANR	13613	AdditiveExpression	end - state . ptr		13078	0		-			
ANR	13614	Identifier	end		13078	0					
ANR	13615	MemberAccess	state . ptr		13078	1					
ANR	13616	Identifier	state		13078	0					
ANR	13617	Identifier	ptr		13078	1					
ANR	13618	PrimaryExpression	6		13078	1					
ANR	13619	OrExpression	( * ++ state . ptr ) != '\\\\' || ( * ++ state . ptr ) != 'u' || ( uc_b1 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	1		||			
ANR	13620	EqualityExpression	( * ++ state . ptr ) != '\\\\'		13078	0		!=			
ANR	13621	UnaryOperationExpression	* ++ state . ptr		13078	0					
ANR	13622	UnaryOperator	*		13078	0					
ANR	13623	UnaryExpression	++ state . ptr		13078	1					
ANR	13624	IncDec	++		13078	0					
ANR	13625	MemberAccess	state . ptr		13078	1					
ANR	13626	Identifier	state		13078	0					
ANR	13627	Identifier	ptr		13078	1					
ANR	13628	PrimaryExpression	'\\\\'		13078	1					
ANR	13629	OrExpression	( * ++ state . ptr ) != 'u' || ( uc_b1 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	1		||			
ANR	13630	EqualityExpression	( * ++ state . ptr ) != 'u'		13078	0		!=			
ANR	13631	UnaryOperationExpression	* ++ state . ptr		13078	0					
ANR	13632	UnaryOperator	*		13078	0					
ANR	13633	UnaryExpression	++ state . ptr		13078	1					
ANR	13634	IncDec	++		13078	0					
ANR	13635	MemberAccess	state . ptr		13078	1					
ANR	13636	Identifier	state		13078	0					
ANR	13637	Identifier	ptr		13078	1					
ANR	13638	PrimaryExpression	'u'		13078	1					
ANR	13639	OrExpression	( uc_b1 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	1		||			
ANR	13640	EqualityExpression	( uc_b1 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	0		==			
ANR	13641	AssignmentExpression	uc_b1 = hex_value ( * ++ state . ptr )		13078	0		=			
ANR	13642	Identifier	uc_b1		13078	0					
ANR	13643	CallExpression	hex_value ( * ++ state . ptr )		13078	1					
ANR	13644	Callee	hex_value		13078	0					
ANR	13645	Identifier	hex_value		13078	0					
ANR	13646	ArgumentList	* ++ state . ptr		13078	1					
ANR	13647	Argument	* ++ state . ptr		13078	0					
ANR	13648	UnaryOperationExpression	* ++ state . ptr		13078	0					
ANR	13649	UnaryOperator	*		13078	0					
ANR	13650	UnaryExpression	++ state . ptr		13078	1					
ANR	13651	IncDec	++		13078	0					
ANR	13652	MemberAccess	state . ptr		13078	1					
ANR	13653	Identifier	state		13078	0					
ANR	13654	Identifier	ptr		13078	1					
ANR	13655	PrimaryExpression	0xFF		13078	1					
ANR	13656	OrExpression	( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	1		||			
ANR	13657	EqualityExpression	( uc_b2 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	0		==			
ANR	13658	AssignmentExpression	uc_b2 = hex_value ( * ++ state . ptr )		13078	0		=			
ANR	13659	Identifier	uc_b2		13078	0					
ANR	13660	CallExpression	hex_value ( * ++ state . ptr )		13078	1					
ANR	13661	Callee	hex_value		13078	0					
ANR	13662	Identifier	hex_value		13078	0					
ANR	13663	ArgumentList	* ++ state . ptr		13078	1					
ANR	13664	Argument	* ++ state . ptr		13078	0					
ANR	13665	UnaryOperationExpression	* ++ state . ptr		13078	0					
ANR	13666	UnaryOperator	*		13078	0					
ANR	13667	UnaryExpression	++ state . ptr		13078	1					
ANR	13668	IncDec	++		13078	0					
ANR	13669	MemberAccess	state . ptr		13078	1					
ANR	13670	Identifier	state		13078	0					
ANR	13671	Identifier	ptr		13078	1					
ANR	13672	PrimaryExpression	0xFF		13078	1					
ANR	13673	OrExpression	( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF || ( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	1		||			
ANR	13674	EqualityExpression	( uc_b3 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	0		==			
ANR	13675	AssignmentExpression	uc_b3 = hex_value ( * ++ state . ptr )		13078	0		=			
ANR	13676	Identifier	uc_b3		13078	0					
ANR	13677	CallExpression	hex_value ( * ++ state . ptr )		13078	1					
ANR	13678	Callee	hex_value		13078	0					
ANR	13679	Identifier	hex_value		13078	0					
ANR	13680	ArgumentList	* ++ state . ptr		13078	1					
ANR	13681	Argument	* ++ state . ptr		13078	0					
ANR	13682	UnaryOperationExpression	* ++ state . ptr		13078	0					
ANR	13683	UnaryOperator	*		13078	0					
ANR	13684	UnaryExpression	++ state . ptr		13078	1					
ANR	13685	IncDec	++		13078	0					
ANR	13686	MemberAccess	state . ptr		13078	1					
ANR	13687	Identifier	state		13078	0					
ANR	13688	Identifier	ptr		13078	1					
ANR	13689	PrimaryExpression	0xFF		13078	1					
ANR	13690	EqualityExpression	( uc_b4 = hex_value ( * ++ state . ptr ) ) == 0xFF		13078	1		==			
ANR	13691	AssignmentExpression	uc_b4 = hex_value ( * ++ state . ptr )		13078	0		=			
ANR	13692	Identifier	uc_b4		13078	0					
ANR	13693	CallExpression	hex_value ( * ++ state . ptr )		13078	1					
ANR	13694	Callee	hex_value		13078	0					
ANR	13695	Identifier	hex_value		13078	0					
ANR	13696	ArgumentList	* ++ state . ptr		13078	1					
ANR	13697	Argument	* ++ state . ptr		13078	0					
ANR	13698	UnaryOperationExpression	* ++ state . ptr		13078	0					
ANR	13699	UnaryOperator	*		13078	0					
ANR	13700	UnaryExpression	++ state . ptr		13078	1					
ANR	13701	IncDec	++		13078	0					
ANR	13702	MemberAccess	state . ptr		13078	1					
ANR	13703	Identifier	state		13078	0					
ANR	13704	Identifier	ptr		13078	1					
ANR	13705	PrimaryExpression	0xFF		13078	1					
ANR	13706	CompoundStatement		98:24:3326:3326	13078	1					
ANR	13707	ExpressionStatement	"sprintf ( error , ""Invalid character value `%c` (at %d:%d)"" , b , line_and_col )"	323:28:9393:9468	13078	0	True				
ANR	13708	CallExpression	"sprintf ( error , ""Invalid character value `%c` (at %d:%d)"" , b , line_and_col )"		13078	0					
ANR	13709	Callee	sprintf		13078	0					
ANR	13710	Identifier	sprintf		13078	0					
ANR	13711	ArgumentList	error		13078	1					
ANR	13712	Argument	error		13078	0					
ANR	13713	Identifier	error		13078	0					
ANR	13714	Argument	"""Invalid character value `%c` (at %d:%d)"""		13078	1					
ANR	13715	PrimaryExpression	"""Invalid character value `%c` (at %d:%d)"""		13078	0					
ANR	13716	Argument	b		13078	2					
ANR	13717	Identifier	b		13078	0					
ANR	13718	Argument	line_and_col		13078	3					
ANR	13719	Identifier	line_and_col		13078	0					
ANR	13720	GotoStatement	goto e_failed ;	324:28:9498:9511	13078	1	True				
ANR	13721	Identifier	e_failed		13078	0					
ANR	13722	ExpressionStatement	uc_b1 = ( uc_b1 << 4 ) | uc_b2	327:24:9564:9592	13078	2	True				
ANR	13723	AssignmentExpression	uc_b1 = ( uc_b1 << 4 ) | uc_b2		13078	0		=			
ANR	13724	Identifier	uc_b1		13078	0					
ANR	13725	InclusiveOrExpression	( uc_b1 << 4 ) | uc_b2		13078	1		|			
ANR	13726	ShiftExpression	uc_b1 << 4		13078	0		<<			
ANR	13727	Identifier	uc_b1		13078	0					
ANR	13728	PrimaryExpression	4		13078	1					
ANR	13729	Identifier	uc_b2		13078	1					
ANR	13730	ExpressionStatement	uc_b2 = ( uc_b3 << 4 ) | uc_b4	328:24:9618:9646	13078	3	True				
ANR	13731	AssignmentExpression	uc_b2 = ( uc_b3 << 4 ) | uc_b4		13078	0		=			
ANR	13732	Identifier	uc_b2		13078	0					
ANR	13733	InclusiveOrExpression	( uc_b3 << 4 ) | uc_b4		13078	1		|			
ANR	13734	ShiftExpression	uc_b3 << 4		13078	0		<<			
ANR	13735	Identifier	uc_b3		13078	0					
ANR	13736	PrimaryExpression	4		13078	1					
ANR	13737	Identifier	uc_b4		13078	1					
ANR	13738	ExpressionStatement	uchar2 = ( uc_b1 << 8 ) | uc_b2	329:24:9672:9701	13078	4	True				
ANR	13739	AssignmentExpression	uchar2 = ( uc_b1 << 8 ) | uc_b2		13078	0		=			
ANR	13740	Identifier	uchar2		13078	0					
ANR	13741	InclusiveOrExpression	( uc_b1 << 8 ) | uc_b2		13078	1		|			
ANR	13742	ShiftExpression	uc_b1 << 8		13078	0		<<			
ANR	13743	Identifier	uc_b1		13078	0					
ANR	13744	PrimaryExpression	8		13078	1					
ANR	13745	Identifier	uc_b2		13078	1					
ANR	13746	ExpressionStatement	uchar = 0x010000 | ( ( uchar & 0x3FF ) << 10 ) | ( uchar2 & 0x3FF )	331:24:9752:9813	13078	5	True				
ANR	13747	AssignmentExpression	uchar = 0x010000 | ( ( uchar & 0x3FF ) << 10 ) | ( uchar2 & 0x3FF )		13078	0		=			
ANR	13748	Identifier	uchar		13078	0					
ANR	13749	InclusiveOrExpression	0x010000 | ( ( uchar & 0x3FF ) << 10 ) | ( uchar2 & 0x3FF )		13078	1		|			
ANR	13750	PrimaryExpression	0x010000		13078	0					
ANR	13751	InclusiveOrExpression	( ( uchar & 0x3FF ) << 10 ) | ( uchar2 & 0x3FF )		13078	1		|			
ANR	13752	ShiftExpression	( uchar & 0x3FF ) << 10		13078	0		<<			
ANR	13753	BitAndExpression	uchar & 0x3FF		13078	0		&			
ANR	13754	Identifier	uchar		13078	0					
ANR	13755	PrimaryExpression	0x3FF		13078	1					
ANR	13756	PrimaryExpression	10		13078	1					
ANR	13757	BitAndExpression	uchar2 & 0x3FF		13078	1		&			
ANR	13758	Identifier	uchar2		13078	0					
ANR	13759	PrimaryExpression	0x3FF		13078	1					
ANR	13760	IfStatement	if ( sizeof ( json_char ) >= sizeof ( json_uchar ) || ( uchar <= 0x7F ) )		13078	21					
ANR	13761	Condition	sizeof ( json_char ) >= sizeof ( json_uchar ) || ( uchar <= 0x7F )	334:24:9862:9921	13078	0	True				
ANR	13762	OrExpression	sizeof ( json_char ) >= sizeof ( json_uchar ) || ( uchar <= 0x7F )		13078	0		||			
ANR	13763	RelationalExpression	sizeof ( json_char ) >= sizeof ( json_uchar )		13078	0		>=			
ANR	13764	SizeofExpression	sizeof ( json_char )		13078	0					
ANR	13765	Sizeof	sizeof		13078	0					
ANR	13766	SizeofOperand	json_char		13078	1					
ANR	13767	SizeofExpression	sizeof ( json_uchar )		13078	1					
ANR	13768	Sizeof	sizeof		13078	0					
ANR	13769	SizeofOperand	json_uchar		13078	1					
ANR	13770	RelationalExpression	uchar <= 0x7F		13078	1		<=			
ANR	13771	Identifier	uchar		13078	0					
ANR	13772	PrimaryExpression	0x7F		13078	1					
ANR	13773	CompoundStatement		111:20:3907:3907	13078	1					
ANR	13774	ExpressionStatement	string_add ( ( json_char ) uchar )	336:23:9969:9999	13078	0	True				
ANR	13775	CallExpression	string_add ( ( json_char ) uchar )		13078	0					
ANR	13776	Callee	string_add		13078	0					
ANR	13777	Identifier	string_add		13078	0					
ANR	13778	ArgumentList	( json_char ) uchar		13078	1					
ANR	13779	Argument	( json_char ) uchar		13078	0					
ANR	13780	CastExpression	( json_char ) uchar		13078	0					
ANR	13781	CastTarget	json_char		13078	0					
ANR	13782	Identifier	uchar		13078	1					
ANR	13783	BreakStatement	break ;	337:23:10024:10029	13078	1	True				
ANR	13784	IfStatement	if ( uchar <= 0x7FF )		13078	22					
ANR	13785	Condition	uchar <= 0x7FF	340:24:10078:10091	13078	0	True				
ANR	13786	RelationalExpression	uchar <= 0x7FF		13078	0		<=			
ANR	13787	Identifier	uchar		13078	0					
ANR	13788	PrimaryExpression	0x7FF		13078	1					
ANR	13789	CompoundStatement		117:20:4077:4077	13078	1					
ANR	13790	IfStatement	if ( state . first_pass )		13078	0					
ANR	13791	Condition	state . first_pass	342:28:10144:10159	13078	0	True				
ANR	13792	MemberAccess	state . first_pass		13078	0					
ANR	13793	Identifier	state		13078	0					
ANR	13794	Identifier	first_pass		13078	1					
ANR	13795	ExpressionStatement	string_length += 2	343:27:10189:10207	13078	1	True				
ANR	13796	AssignmentExpression	string_length += 2		13078	0		+=			
ANR	13797	Identifier	string_length		13078	0					
ANR	13798	PrimaryExpression	2		13078	1					
ANR	13799	ElseStatement	else		13078	0					
ANR	13800	CompoundStatement		121:24:4225:4225	13078	0					
ANR	13801	ExpressionStatement	string [ string_length ++ ] = 0xC0 | ( uchar >> 6 )	345:27:10265:10312	13078	0	True				
ANR	13802	AssignmentExpression	string [ string_length ++ ] = 0xC0 | ( uchar >> 6 )		13078	0		=			
ANR	13803	ArrayIndexing	string [ string_length ++ ]		13078	0					
ANR	13804	Identifier	string		13078	0					
ANR	13805	PostIncDecOperationExpression	string_length ++		13078	1					
ANR	13806	Identifier	string_length		13078	0					
ANR	13807	IncDec	++		13078	1					
ANR	13808	InclusiveOrExpression	0xC0 | ( uchar >> 6 )		13078	1		|			
ANR	13809	PrimaryExpression	0xC0		13078	0					
ANR	13810	ShiftExpression	uchar >> 6		13078	1		>>			
ANR	13811	Identifier	uchar		13078	0					
ANR	13812	PrimaryExpression	6		13078	1					
ANR	13813	ExpressionStatement	string [ string_length ++ ] = 0x80 | ( uchar & 0x3F )	346:27:10341:10390	13078	1	True				
ANR	13814	AssignmentExpression	string [ string_length ++ ] = 0x80 | ( uchar & 0x3F )		13078	0		=			
ANR	13815	ArrayIndexing	string [ string_length ++ ]		13078	0					
ANR	13816	Identifier	string		13078	0					
ANR	13817	PostIncDecOperationExpression	string_length ++		13078	1					
ANR	13818	Identifier	string_length		13078	0					
ANR	13819	IncDec	++		13078	1					
ANR	13820	InclusiveOrExpression	0x80 | ( uchar & 0x3F )		13078	1		|			
ANR	13821	PrimaryExpression	0x80		13078	0					
ANR	13822	BitAndExpression	uchar & 0x3F		13078	1		&			
ANR	13823	Identifier	uchar		13078	0					
ANR	13824	PrimaryExpression	0x3F		13078	1					
ANR	13825	BreakStatement	break ;	349:24:10443:10448	13078	1	True				
ANR	13826	IfStatement	if ( uchar <= 0xFFFF )		13078	23					
ANR	13827	Condition	uchar <= 0xFFFF	352:24:10497:10511	13078	0	True				
ANR	13828	RelationalExpression	uchar <= 0xFFFF		13078	0		<=			
ANR	13829	Identifier	uchar		13078	0					
ANR	13830	PrimaryExpression	0xFFFF		13078	1					
ANR	13831	CompoundStatement		128:41:4477:4477	13078	1					
ANR	13832	IfStatement	if ( state . first_pass )		13078	0					
ANR	13833	Condition	state . first_pass	353:28:10544:10559	13078	0	True				
ANR	13834	MemberAccess	state . first_pass		13078	0					
ANR	13835	Identifier	state		13078	0					
ANR	13836	Identifier	first_pass		13078	1					
ANR	13837	ExpressionStatement	string_length += 3	354:27:10589:10607	13078	1	True				
ANR	13838	AssignmentExpression	string_length += 3		13078	0		+=			
ANR	13839	Identifier	string_length		13078	0					
ANR	13840	PrimaryExpression	3		13078	1					
ANR	13841	ElseStatement	else		13078	0					
ANR	13842	CompoundStatement		132:24:4625:4625	13078	0					
ANR	13843	ExpressionStatement	string [ string_length ++ ] = 0xE0 | ( uchar >> 12 )	356:27:10665:10713	13078	0	True				
ANR	13844	AssignmentExpression	string [ string_length ++ ] = 0xE0 | ( uchar >> 12 )		13078	0		=			
ANR	13845	ArrayIndexing	string [ string_length ++ ]		13078	0					
ANR	13846	Identifier	string		13078	0					
ANR	13847	PostIncDecOperationExpression	string_length ++		13078	1					
ANR	13848	Identifier	string_length		13078	0					
ANR	13849	IncDec	++		13078	1					
ANR	13850	InclusiveOrExpression	0xE0 | ( uchar >> 12 )		13078	1		|			
ANR	13851	PrimaryExpression	0xE0		13078	0					
ANR	13852	ShiftExpression	uchar >> 12		13078	1		>>			
ANR	13853	Identifier	uchar		13078	0					
ANR	13854	PrimaryExpression	12		13078	1					
ANR	13855	ExpressionStatement	string [ string_length ++ ] = 0x80 | ( ( uchar >> 6 ) & 0x3F )	357:27:10742:10798	13078	1	True				
ANR	13856	AssignmentExpression	string [ string_length ++ ] = 0x80 | ( ( uchar >> 6 ) & 0x3F )		13078	0		=			
ANR	13857	ArrayIndexing	string [ string_length ++ ]		13078	0					
ANR	13858	Identifier	string		13078	0					
ANR	13859	PostIncDecOperationExpression	string_length ++		13078	1					
ANR	13860	Identifier	string_length		13078	0					
ANR	13861	IncDec	++		13078	1					
ANR	13862	InclusiveOrExpression	0x80 | ( ( uchar >> 6 ) & 0x3F )		13078	1		|			
ANR	13863	PrimaryExpression	0x80		13078	0					
ANR	13864	BitAndExpression	( uchar >> 6 ) & 0x3F		13078	1		&			
ANR	13865	ShiftExpression	uchar >> 6		13078	0		>>			
ANR	13866	Identifier	uchar		13078	0					
ANR	13867	PrimaryExpression	6		13078	1					
ANR	13868	PrimaryExpression	0x3F		13078	1					
ANR	13869	ExpressionStatement	string [ string_length ++ ] = 0x80 | ( uchar & 0x3F )	358:27:10827:10876	13078	2	True				
ANR	13870	AssignmentExpression	string [ string_length ++ ] = 0x80 | ( uchar & 0x3F )		13078	0		=			
ANR	13871	ArrayIndexing	string [ string_length ++ ]		13078	0					
ANR	13872	Identifier	string		13078	0					
ANR	13873	PostIncDecOperationExpression	string_length ++		13078	1					
ANR	13874	Identifier	string_length		13078	0					
ANR	13875	IncDec	++		13078	1					
ANR	13876	InclusiveOrExpression	0x80 | ( uchar & 0x3F )		13078	1		|			
ANR	13877	PrimaryExpression	0x80		13078	0					
ANR	13878	BitAndExpression	uchar & 0x3F		13078	1		&			
ANR	13879	Identifier	uchar		13078	0					
ANR	13880	PrimaryExpression	0x3F		13078	1					
ANR	13881	BreakStatement	break ;	361:24:10953:10958	13078	1	True				
ANR	13882	IfStatement	if ( state . first_pass )		13078	24					
ANR	13883	Condition	state . first_pass	364:24:11007:11022	13078	0	True				
ANR	13884	MemberAccess	state . first_pass		13078	0					
ANR	13885	Identifier	state		13078	0					
ANR	13886	Identifier	first_pass		13078	1					
ANR	13887	ExpressionStatement	string_length += 4	365:23:11048:11066	13078	1	True				
ANR	13888	AssignmentExpression	string_length += 4		13078	0		+=			
ANR	13889	Identifier	string_length		13078	0					
ANR	13890	PrimaryExpression	4		13078	1					
ANR	13891	ElseStatement	else		13078	0					
ANR	13892	CompoundStatement		143:20:5076:5076	13078	0					
ANR	13893	ExpressionStatement	string [ string_length ++ ] = 0xF0 | ( uchar >> 18 )	367:23:11116:11164	13078	0	True				
ANR	13894	AssignmentExpression	string [ string_length ++ ] = 0xF0 | ( uchar >> 18 )		13078	0		=			
ANR	13895	ArrayIndexing	string [ string_length ++ ]		13078	0					
ANR	13896	Identifier	string		13078	0					
ANR	13897	PostIncDecOperationExpression	string_length ++		13078	1					
ANR	13898	Identifier	string_length		13078	0					
ANR	13899	IncDec	++		13078	1					
ANR	13900	InclusiveOrExpression	0xF0 | ( uchar >> 18 )		13078	1		|			
ANR	13901	PrimaryExpression	0xF0		13078	0					
ANR	13902	ShiftExpression	uchar >> 18		13078	1		>>			
ANR	13903	Identifier	uchar		13078	0					
ANR	13904	PrimaryExpression	18		13078	1					
ANR	13905	ExpressionStatement	string [ string_length ++ ] = 0x80 | ( ( uchar >> 12 ) & 0x3F )	368:23:11189:11246	13078	1	True				
ANR	13906	AssignmentExpression	string [ string_length ++ ] = 0x80 | ( ( uchar >> 12 ) & 0x3F )		13078	0		=			
ANR	13907	ArrayIndexing	string [ string_length ++ ]		13078	0					
ANR	13908	Identifier	string		13078	0					
ANR	13909	PostIncDecOperationExpression	string_length ++		13078	1					
ANR	13910	Identifier	string_length		13078	0					
ANR	13911	IncDec	++		13078	1					
ANR	13912	InclusiveOrExpression	0x80 | ( ( uchar >> 12 ) & 0x3F )		13078	1		|			
ANR	13913	PrimaryExpression	0x80		13078	0					
ANR	13914	BitAndExpression	( uchar >> 12 ) & 0x3F		13078	1		&			
ANR	13915	ShiftExpression	uchar >> 12		13078	0		>>			
ANR	13916	Identifier	uchar		13078	0					
ANR	13917	PrimaryExpression	12		13078	1					
ANR	13918	PrimaryExpression	0x3F		13078	1					
ANR	13919	ExpressionStatement	string [ string_length ++ ] = 0x80 | ( ( uchar >> 6 ) & 0x3F )	369:23:11271:11327	13078	2	True				
ANR	13920	AssignmentExpression	string [ string_length ++ ] = 0x80 | ( ( uchar >> 6 ) & 0x3F )		13078	0		=			
ANR	13921	ArrayIndexing	string [ string_length ++ ]		13078	0					
ANR	13922	Identifier	string		13078	0					
ANR	13923	PostIncDecOperationExpression	string_length ++		13078	1					
ANR	13924	Identifier	string_length		13078	0					
ANR	13925	IncDec	++		13078	1					
ANR	13926	InclusiveOrExpression	0x80 | ( ( uchar >> 6 ) & 0x3F )		13078	1		|			
ANR	13927	PrimaryExpression	0x80		13078	0					
ANR	13928	BitAndExpression	( uchar >> 6 ) & 0x3F		13078	1		&			
ANR	13929	ShiftExpression	uchar >> 6		13078	0		>>			
ANR	13930	Identifier	uchar		13078	0					
ANR	13931	PrimaryExpression	6		13078	1					
ANR	13932	PrimaryExpression	0x3F		13078	1					
ANR	13933	ExpressionStatement	string [ string_length ++ ] = 0x80 | ( uchar & 0x3F )	370:23:11352:11401	13078	3	True				
ANR	13934	AssignmentExpression	string [ string_length ++ ] = 0x80 | ( uchar & 0x3F )		13078	0		=			
ANR	13935	ArrayIndexing	string [ string_length ++ ]		13078	0					
ANR	13936	Identifier	string		13078	0					
ANR	13937	PostIncDecOperationExpression	string_length ++		13078	1					
ANR	13938	Identifier	string_length		13078	0					
ANR	13939	IncDec	++		13078	1					
ANR	13940	InclusiveOrExpression	0x80 | ( uchar & 0x3F )		13078	1		|			
ANR	13941	PrimaryExpression	0x80		13078	0					
ANR	13942	BitAndExpression	uchar & 0x3F		13078	1		&			
ANR	13943	Identifier	uchar		13078	0					
ANR	13944	PrimaryExpression	0x3F		13078	1					
ANR	13945	BreakStatement	break ;	373:20:11446:11451	13078	25	True				
ANR	13946	Label	default :	375:18:11472:11479	13078	26	True				
ANR	13947	Identifier	default		13078	0					
ANR	13948	ExpressionStatement	string_add ( b )	376:21:11502:11516	13078	27	True				
ANR	13949	CallExpression	string_add ( b )		13078	0					
ANR	13950	Callee	string_add		13078	0					
ANR	13951	Identifier	string_add		13078	0					
ANR	13952	ArgumentList	b		13078	1					
ANR	13953	Argument	b		13078	0					
ANR	13954	Identifier	b		13078	0					
ANR	13955	ExpressionStatement		377:16:11534:11534	13078	2	True				
ANR	13956	ContinueStatement	continue ;	379:15:11552:11560	13078	3	True				
ANR	13957	IfStatement	if ( b == '\\\\' )		13078	3					
ANR	13958	Condition	b == '\\\\'	382:16:11593:11601	13078	0	True				
ANR	13959	EqualityExpression	b == '\\\\'		13078	0		==			
ANR	13960	Identifier	b		13078	0					
ANR	13961	PrimaryExpression	'\\\\'		13078	1					
ANR	13962	CompoundStatement		159:12:5579:5579	13078	1					
ANR	13963	ExpressionStatement	flags |= flag_escaped	384:15:11633:11654	13078	0	True				
ANR	13964	AssignmentExpression	flags |= flag_escaped		13078	0		|=			
ANR	13965	Identifier	flags		13078	0					
ANR	13966	Identifier	flag_escaped		13078	1					
ANR	13967	ContinueStatement	continue ;	385:15:11671:11679	13078	1	True				
ANR	13968	IfStatement	"if ( b == '""' )"		13078	4					
ANR	13969	Condition	"b == '""'"	388:16:11712:11719	13078	0	True				
ANR	13970	EqualityExpression	"b == '""'"		13078	0		==			
ANR	13971	Identifier	b		13078	0					
ANR	13972	PrimaryExpression	"'""'"		13078	1					
ANR	13973	CompoundStatement		165:12:5697:5697	13078	1					
ANR	13974	IfStatement	if ( ! state . first_pass )		13078	0					
ANR	13975	Condition	! state . first_pass	390:19:11755:11771	13078	0	True				
ANR	13976	UnaryOperationExpression	! state . first_pass		13078	0					
ANR	13977	UnaryOperator	!		13078	0					
ANR	13978	MemberAccess	state . first_pass		13078	1					
ANR	13979	Identifier	state		13078	0					
ANR	13980	Identifier	first_pass		13078	1					
ANR	13981	ExpressionStatement	string [ string_length ] = 0	391:18:11792:11818	13078	1	True				
ANR	13982	AssignmentExpression	string [ string_length ] = 0		13078	0		=			
ANR	13983	ArrayIndexing	string [ string_length ]		13078	0					
ANR	13984	Identifier	string		13078	0					
ANR	13985	Identifier	string_length		13078	1					
ANR	13986	PrimaryExpression	0		13078	1					
ANR	13987	ExpressionStatement	flags &= ~ flag_string	393:15:11836:11858	13078	1	True				
ANR	13988	AssignmentExpression	flags &= ~ flag_string		13078	0		&=			
ANR	13989	Identifier	flags		13078	0					
ANR	13990	UnaryOperationExpression	~ flag_string		13078	1					
ANR	13991	UnaryOperator	~		13078	0					
ANR	13992	Identifier	flag_string		13078	1					
ANR	13993	ExpressionStatement	string = 0	394:15:11875:11885	13078	2	True				
ANR	13994	AssignmentExpression	string = 0		13078	0		=			
ANR	13995	Identifier	string		13078	0					
ANR	13996	PrimaryExpression	0		13078	1					
ANR	13997	SwitchStatement	switch ( top -> type )		13078	3					
ANR	13998	Condition	top -> type	396:23:11911:11919	13078	0	True				
ANR	13999	PtrMemberAccess	top -> type		13078	0					
ANR	14000	Identifier	top		13078	0					
ANR	14001	Identifier	type		13078	1					
ANR	14002	CompoundStatement		173:15:5900:5900	13078	1					
ANR	14003	Label	case json_string :	398:18:11957:11973	13078	0	True				
ANR	14004	Identifier	json_string		13078	0					
ANR	14005	ExpressionStatement	top -> u . string . length = string_length	400:21:11997:12033	13078	1	True				
ANR	14006	AssignmentExpression	top -> u . string . length = string_length		13078	0		=			
ANR	14007	MemberAccess	top -> u . string . length		13078	0					
ANR	14008	MemberAccess	top -> u . string		13078	0					
ANR	14009	PtrMemberAccess	top -> u		13078	0					
ANR	14010	Identifier	top		13078	0					
ANR	14011	Identifier	u		13078	1					
ANR	14012	Identifier	string		13078	1					
ANR	14013	Identifier	length		13078	1					
ANR	14014	Identifier	string_length		13078	1					
ANR	14015	ExpressionStatement	flags |= flag_next	401:21:12056:12074	13078	2	True				
ANR	14016	AssignmentExpression	flags |= flag_next		13078	0		|=			
ANR	14017	Identifier	flags		13078	0					
ANR	14018	Identifier	flag_next		13078	1					
ANR	14019	BreakStatement	break ;	403:21:12098:12103	13078	3	True				
ANR	14020	Label	case json_object :	405:18:12124:12140	13078	4	True				
ANR	14021	Identifier	json_object		13078	0					
ANR	14022	IfStatement	if ( state . first_pass )		13078	5					
ANR	14023	Condition	state . first_pass	407:25:12168:12183	13078	0	True				
ANR	14024	MemberAccess	state . first_pass		13078	0					
ANR	14025	Identifier	state		13078	0					
ANR	14026	Identifier	first_pass		13078	1					
ANR	14027	ExpressionStatement	( * ( json_char * * ) & top -> u . object . values ) += string_length + 1	408:24:12210:12270	13078	1	True				
ANR	14028	AssignmentExpression	( * ( json_char * * ) & top -> u . object . values ) += string_length + 1		13078	0		+=			
ANR	14029	UnaryOperationExpression	* ( json_char * * ) & top -> u . object . values		13078	0					
ANR	14030	UnaryOperator	*		13078	0					
ANR	14031	CastExpression	( json_char * * ) & top -> u . object . values		13078	1					
ANR	14032	CastTarget	json_char * *		13078	0					
ANR	14033	UnaryOperationExpression	& top -> u . object . values		13078	1					
ANR	14034	UnaryOperator	&		13078	0					
ANR	14035	MemberAccess	top -> u . object . values		13078	1					
ANR	14036	MemberAccess	top -> u . object		13078	0					
ANR	14037	PtrMemberAccess	top -> u		13078	0					
ANR	14038	Identifier	top		13078	0					
ANR	14039	Identifier	u		13078	1					
ANR	14040	Identifier	object		13078	1					
ANR	14041	Identifier	values		13078	1					
ANR	14042	AdditiveExpression	string_length + 1		13078	1		+			
ANR	14043	Identifier	string_length		13078	0					
ANR	14044	PrimaryExpression	1		13078	1					
ANR	14045	ElseStatement	else		13078	0					
ANR	14046	CompoundStatement		186:21:6282:6282	13078	0					
ANR	14047	ExpressionStatement	top -> u . object . values [ top -> u . object . length ] . name = ( json_char * ) top -> _reserved . object_mem	411:24:12347:12464	13078	0	True				
ANR	14048	AssignmentExpression	top -> u . object . values [ top -> u . object . length ] . name = ( json_char * ) top -> _reserved . object_mem		13078	0		=			
ANR	14049	MemberAccess	top -> u . object . values [ top -> u . object . length ] . name		13078	0					
ANR	14050	ArrayIndexing	top -> u . object . values [ top -> u . object . length ]		13078	0					
ANR	14051	MemberAccess	top -> u . object . values		13078	0					
ANR	14052	MemberAccess	top -> u . object		13078	0					
ANR	14053	PtrMemberAccess	top -> u		13078	0					
ANR	14054	Identifier	top		13078	0					
ANR	14055	Identifier	u		13078	1					
ANR	14056	Identifier	object		13078	1					
ANR	14057	Identifier	values		13078	1					
ANR	14058	MemberAccess	top -> u . object . length		13078	1					
ANR	14059	MemberAccess	top -> u . object		13078	0					
ANR	14060	PtrMemberAccess	top -> u		13078	0					
ANR	14061	Identifier	top		13078	0					
ANR	14062	Identifier	u		13078	1					
ANR	14063	Identifier	object		13078	1					
ANR	14064	Identifier	length		13078	1					
ANR	14065	Identifier	name		13078	1					
ANR	14066	CastExpression	( json_char * ) top -> _reserved . object_mem		13078	1					
ANR	14067	CastTarget	json_char *		13078	0					
ANR	14068	MemberAccess	top -> _reserved . object_mem		13078	1					
ANR	14069	PtrMemberAccess	top -> _reserved		13078	0					
ANR	14070	Identifier	top		13078	0					
ANR	14071	Identifier	_reserved		13078	1					
ANR	14072	Identifier	object_mem		13078	1					
ANR	14073	ExpressionStatement	top -> u . object . values [ top -> u . object . length ] . name_length = string_length	414:24:12491:12589	13078	1	True				
ANR	14074	AssignmentExpression	top -> u . object . values [ top -> u . object . length ] . name_length = string_length		13078	0		=			
ANR	14075	MemberAccess	top -> u . object . values [ top -> u . object . length ] . name_length		13078	0					
ANR	14076	ArrayIndexing	top -> u . object . values [ top -> u . object . length ]		13078	0					
ANR	14077	MemberAccess	top -> u . object . values		13078	0					
ANR	14078	MemberAccess	top -> u . object		13078	0					
ANR	14079	PtrMemberAccess	top -> u		13078	0					
ANR	14080	Identifier	top		13078	0					
ANR	14081	Identifier	u		13078	1					
ANR	14082	Identifier	object		13078	1					
ANR	14083	Identifier	values		13078	1					
ANR	14084	MemberAccess	top -> u . object . length		13078	1					
ANR	14085	MemberAccess	top -> u . object		13078	0					
ANR	14086	PtrMemberAccess	top -> u		13078	0					
ANR	14087	Identifier	top		13078	0					
ANR	14088	Identifier	u		13078	1					
ANR	14089	Identifier	object		13078	1					
ANR	14090	Identifier	length		13078	1					
ANR	14091	Identifier	name_length		13078	1					
ANR	14092	Identifier	string_length		13078	1					
ANR	14093	ExpressionStatement	( * ( json_char * * ) & top -> _reserved . object_mem ) += string_length + 1	417:24:12616:12681	13078	2	True				
ANR	14094	AssignmentExpression	( * ( json_char * * ) & top -> _reserved . object_mem ) += string_length + 1		13078	0		+=			
ANR	14095	UnaryOperationExpression	* ( json_char * * ) & top -> _reserved . object_mem		13078	0					
ANR	14096	UnaryOperator	*		13078	0					
ANR	14097	CastExpression	( json_char * * ) & top -> _reserved . object_mem		13078	1					
ANR	14098	CastTarget	json_char * *		13078	0					
ANR	14099	UnaryOperationExpression	& top -> _reserved . object_mem		13078	1					
ANR	14100	UnaryOperator	&		13078	0					
ANR	14101	MemberAccess	top -> _reserved . object_mem		13078	1					
ANR	14102	PtrMemberAccess	top -> _reserved		13078	0					
ANR	14103	Identifier	top		13078	0					
ANR	14104	Identifier	_reserved		13078	1					
ANR	14105	Identifier	object_mem		13078	1					
ANR	14106	AdditiveExpression	string_length + 1		13078	1		+			
ANR	14107	Identifier	string_length		13078	0					
ANR	14108	PrimaryExpression	1		13078	1					
ANR	14109	ExpressionStatement	flags |= flag_seek_value | flag_need_colon	420:21:12728:12770	13078	6	True				
ANR	14110	AssignmentExpression	flags |= flag_seek_value | flag_need_colon		13078	0		|=			
ANR	14111	Identifier	flags		13078	0					
ANR	14112	InclusiveOrExpression	flag_seek_value | flag_need_colon		13078	1		|			
ANR	14113	Identifier	flag_seek_value		13078	0					
ANR	14114	Identifier	flag_need_colon		13078	1					
ANR	14115	ContinueStatement	continue ;	421:21:12793:12801	13078	7	True				
ANR	14116	Label	default :	423:18:12822:12829	13078	8	True				
ANR	14117	Identifier	default		13078	0					
ANR	14118	BreakStatement	break ;	424:21:12852:12857	13078	9	True				
ANR	14119	ExpressionStatement		425:16:12875:12875	13078	4	True				
ANR	14120	ElseStatement	else		13078	0					
ANR	14121	CompoundStatement		204:12:6883:6883	13078	0					
ANR	14122	ExpressionStatement	string_add ( b )	429:15:12937:12951	13078	0	True				
ANR	14123	CallExpression	string_add ( b )		13078	0					
ANR	14124	Callee	string_add		13078	0					
ANR	14125	Identifier	string_add		13078	0					
ANR	14126	ArgumentList	b		13078	1					
ANR	14127	Argument	b		13078	0					
ANR	14128	Identifier	b		13078	0					
ANR	14129	ContinueStatement	continue ;	430:15:12968:12976	13078	1	True				
ANR	14130	IfStatement	if ( state . settings . settings & json_enable_comments )		13078	2					
ANR	14131	Condition	state . settings . settings & json_enable_comments	434:13:13017:13062	13078	0	True				
ANR	14132	BitAndExpression	state . settings . settings & json_enable_comments		13078	0		&			
ANR	14133	MemberAccess	state . settings . settings		13078	0					
ANR	14134	MemberAccess	state . settings		13078	0					
ANR	14135	Identifier	state		13078	0					
ANR	14136	Identifier	settings		13078	1					
ANR	14137	Identifier	settings		13078	1					
ANR	14138	Identifier	json_enable_comments		13078	1					
ANR	14139	CompoundStatement		211:9:7037:7037	13078	1					
ANR	14140	IfStatement	if ( flags & ( flag_line_comment | flag_block_comment ) )		13078	0					
ANR	14141	Condition	flags & ( flag_line_comment | flag_block_comment )	436:16:13092:13139	13078	0	True				
ANR	14142	BitAndExpression	flags & ( flag_line_comment | flag_block_comment )		13078	0		&			
ANR	14143	Identifier	flags		13078	0					
ANR	14144	InclusiveOrExpression	flag_line_comment | flag_block_comment		13078	1		|			
ANR	14145	Identifier	flag_line_comment		13078	0					
ANR	14146	Identifier	flag_block_comment		13078	1					
ANR	14147	CompoundStatement		213:12:7117:7117	13078	1					
ANR	14148	IfStatement	if ( flags & flag_line_comment )		13078	0					
ANR	14149	Condition	flags & flag_line_comment	438:19:13175:13199	13078	0	True				
ANR	14150	BitAndExpression	flags & flag_line_comment		13078	0		&			
ANR	14151	Identifier	flags		13078	0					
ANR	14152	Identifier	flag_line_comment		13078	1					
ANR	14153	CompoundStatement		215:15:7180:7180	13078	1					
ANR	14154	IfStatement	if ( b == '\\r' || b == '\\n' || ! b )		13078	0					
ANR	14155	Condition	b == '\\r' || b == '\\n' || ! b	440:22:13241:13268	13078	0	True				
ANR	14156	OrExpression	b == '\\r' || b == '\\n' || ! b		13078	0		||			
ANR	14157	EqualityExpression	b == '\\r'		13078	0		==			
ANR	14158	Identifier	b		13078	0					
ANR	14159	PrimaryExpression	'\\r'		13078	1					
ANR	14160	OrExpression	b == '\\n' || ! b		13078	1		||			
ANR	14161	EqualityExpression	b == '\\n'		13078	0		==			
ANR	14162	Identifier	b		13078	0					
ANR	14163	PrimaryExpression	'\\n'		13078	1					
ANR	14164	UnaryOperationExpression	! b		13078	1					
ANR	14165	UnaryOperator	!		13078	0					
ANR	14166	Identifier	b		13078	1					
ANR	14167	CompoundStatement		217:18:7252:7252	13078	1					
ANR	14168	ExpressionStatement	flags &= ~ flag_line_comment	442:21:13312:13340	13078	0	True				
ANR	14169	AssignmentExpression	flags &= ~ flag_line_comment		13078	0		&=			
ANR	14170	Identifier	flags		13078	0					
ANR	14171	UnaryOperationExpression	~ flag_line_comment		13078	1					
ANR	14172	UnaryOperator	~		13078	0					
ANR	14173	Identifier	flag_line_comment		13078	1					
ANR	14174	ExpressionStatement	-- state . ptr	443:21:13363:13375	13078	1	True				
ANR	14175	UnaryExpression	-- state . ptr		13078	0					
ANR	14176	IncDec	--		13078	0					
ANR	14177	MemberAccess	state . ptr		13078	1					
ANR	14178	Identifier	state		13078	0					
ANR	14179	Identifier	ptr		13078	1					
ANR	14180	ContinueStatement	continue ;	446:18:13447:13455	13078	1	True				
ANR	14181	IfStatement	if ( flags & flag_block_comment )		13078	1					
ANR	14182	Condition	flags & flag_block_comment	449:19:13494:13519	13078	0	True				
ANR	14183	BitAndExpression	flags & flag_block_comment		13078	0		&			
ANR	14184	Identifier	flags		13078	0					
ANR	14185	Identifier	flag_block_comment		13078	1					
ANR	14186	CompoundStatement		226:15:7500:7500	13078	1					
ANR	14187	IfStatement	if ( ! b )		13078	0					
ANR	14188	Condition	! b	451:22:13561:13562	13078	0	True				
ANR	14189	UnaryOperationExpression	! b		13078	0					
ANR	14190	UnaryOperator	!		13078	0					
ANR	14191	Identifier	b		13078	1					
ANR	14192	CompoundStatement		228:18:7546:7546	13078	1					
ANR	14193	ExpressionStatement	"sprintf ( error , ""%d:%d: Unexpected EOF in block comment"" , line_and_col )"	452:21:13586:13657	13078	0	True				
ANR	14194	CallExpression	"sprintf ( error , ""%d:%d: Unexpected EOF in block comment"" , line_and_col )"		13078	0					
ANR	14195	Callee	sprintf		13078	0					
ANR	14196	Identifier	sprintf		13078	0					
ANR	14197	ArgumentList	error		13078	1					
ANR	14198	Argument	error		13078	0					
ANR	14199	Identifier	error		13078	0					
ANR	14200	Argument	"""%d:%d: Unexpected EOF in block comment"""		13078	1					
ANR	14201	PrimaryExpression	"""%d:%d: Unexpected EOF in block comment"""		13078	0					
ANR	14202	Argument	line_and_col		13078	2					
ANR	14203	Identifier	line_and_col		13078	0					
ANR	14204	GotoStatement	goto e_failed ;	453:21:13680:13693	13078	1	True				
ANR	14205	Identifier	e_failed		13078	0					
ANR	14206	IfStatement	if ( b == '*' && state . ptr < ( end - 1 ) && state . ptr [ 1 ] == '/' )		13078	1					
ANR	14207	Condition	b == '*' && state . ptr < ( end - 1 ) && state . ptr [ 1 ] == '/'	456:22:13738:13794	13078	0	True				
ANR	14208	AndExpression	b == '*' && state . ptr < ( end - 1 ) && state . ptr [ 1 ] == '/'		13078	0		&&			
ANR	14209	EqualityExpression	b == '*'		13078	0		==			
ANR	14210	Identifier	b		13078	0					
ANR	14211	PrimaryExpression	'*'		13078	1					
ANR	14212	AndExpression	state . ptr < ( end - 1 ) && state . ptr [ 1 ] == '/'		13078	1		&&			
ANR	14213	RelationalExpression	state . ptr < ( end - 1 )		13078	0		<			
ANR	14214	MemberAccess	state . ptr		13078	0					
ANR	14215	Identifier	state		13078	0					
ANR	14216	Identifier	ptr		13078	1					
ANR	14217	AdditiveExpression	end - 1		13078	1		-			
ANR	14218	Identifier	end		13078	0					
ANR	14219	PrimaryExpression	1		13078	1					
ANR	14220	EqualityExpression	state . ptr [ 1 ] == '/'		13078	1		==			
ANR	14221	ArrayIndexing	state . ptr [ 1 ]		13078	0					
ANR	14222	MemberAccess	state . ptr		13078	0					
ANR	14223	Identifier	state		13078	0					
ANR	14224	Identifier	ptr		13078	1					
ANR	14225	PrimaryExpression	1		13078	1					
ANR	14226	PrimaryExpression	'/'		13078	1					
ANR	14227	CompoundStatement		233:18:7778:7778	13078	1					
ANR	14228	ExpressionStatement	flags &= ~ flag_block_comment	458:21:13838:13867	13078	0	True				
ANR	14229	AssignmentExpression	flags &= ~ flag_block_comment		13078	0		&=			
ANR	14230	Identifier	flags		13078	0					
ANR	14231	UnaryOperationExpression	~ flag_block_comment		13078	1					
ANR	14232	UnaryOperator	~		13078	0					
ANR	14233	Identifier	flag_block_comment		13078	1					
ANR	14234	ExpressionStatement	++ state . ptr	459:21:13890:13902	13078	1	True				
ANR	14235	UnaryExpression	++ state . ptr		13078	0					
ANR	14236	IncDec	++		13078	0					
ANR	14237	MemberAccess	state . ptr		13078	1					
ANR	14238	Identifier	state		13078	0					
ANR	14239	Identifier	ptr		13078	1					
ANR	14240	ContinueStatement	continue ;	462:18:13972:13980	13078	2	True				
ANR	14241	ElseStatement	else		13078	0					
ANR	14242	IfStatement	if ( b == '/' )		13078	0					
ANR	14243	Condition	b == '/'	465:21:14034:14041	13078	0	True				
ANR	14244	EqualityExpression	b == '/'		13078	0		==			
ANR	14245	Identifier	b		13078	0					
ANR	14246	PrimaryExpression	'/'		13078	1					
ANR	14247	CompoundStatement		242:12:8019:8019	13078	1					
ANR	14248	IfStatement	if ( ! ( flags & ( flag_seek_value | flag_done ) ) && top -> type != json_object )		13078	0					
ANR	14249	Condition	! ( flags & ( flag_seek_value | flag_done ) ) && top -> type != json_object	467:19:14077:14145	13078	0	True				
ANR	14250	AndExpression	! ( flags & ( flag_seek_value | flag_done ) ) && top -> type != json_object		13078	0		&&			
ANR	14251	UnaryOperationExpression	! ( flags & ( flag_seek_value | flag_done ) )		13078	0					
ANR	14252	UnaryOperator	!		13078	0					
ANR	14253	BitAndExpression	flags & ( flag_seek_value | flag_done )		13078	1		&			
ANR	14254	Identifier	flags		13078	0					
ANR	14255	InclusiveOrExpression	flag_seek_value | flag_done		13078	1		|			
ANR	14256	Identifier	flag_seek_value		13078	0					
ANR	14257	Identifier	flag_done		13078	1					
ANR	14258	EqualityExpression	top -> type != json_object		13078	1		!=			
ANR	14259	PtrMemberAccess	top -> type		13078	0					
ANR	14260	Identifier	top		13078	0					
ANR	14261	Identifier	type		13078	1					
ANR	14262	Identifier	json_object		13078	1					
ANR	14263	CompoundStatement		244:15:8126:8126	13078	1					
ANR	14264	ExpressionStatement	"sprintf ( error , ""%d:%d: Comment not allowed here"" , line_and_col )"	468:18:14166:14230	13078	0	True				
ANR	14265	CallExpression	"sprintf ( error , ""%d:%d: Comment not allowed here"" , line_and_col )"		13078	0					
ANR	14266	Callee	sprintf		13078	0					
ANR	14267	Identifier	sprintf		13078	0					
ANR	14268	ArgumentList	error		13078	1					
ANR	14269	Argument	error		13078	0					
ANR	14270	Identifier	error		13078	0					
ANR	14271	Argument	"""%d:%d: Comment not allowed here"""		13078	1					
ANR	14272	PrimaryExpression	"""%d:%d: Comment not allowed here"""		13078	0					
ANR	14273	Argument	line_and_col		13078	2					
ANR	14274	Identifier	line_and_col		13078	0					
ANR	14275	GotoStatement	goto e_failed ;	469:18:14250:14263	13078	1	True				
ANR	14276	Identifier	e_failed		13078	0					
ANR	14277	IfStatement	if ( ++ state . ptr == end )		13078	1					
ANR	14278	Condition	++ state . ptr == end	472:19:14302:14320	13078	0	True				
ANR	14279	EqualityExpression	++ state . ptr == end		13078	0		==			
ANR	14280	UnaryExpression	++ state . ptr		13078	0					
ANR	14281	IncDec	++		13078	0					
ANR	14282	MemberAccess	state . ptr		13078	1					
ANR	14283	Identifier	state		13078	0					
ANR	14284	Identifier	ptr		13078	1					
ANR	14285	Identifier	end		13078	1					
ANR	14286	CompoundStatement		249:15:8301:8301	13078	1					
ANR	14287	ExpressionStatement	"sprintf ( error , ""%d:%d: EOF unexpected"" , line_and_col )"	473:18:14341:14395	13078	0	True				
ANR	14288	CallExpression	"sprintf ( error , ""%d:%d: EOF unexpected"" , line_and_col )"		13078	0					
ANR	14289	Callee	sprintf		13078	0					
ANR	14290	Identifier	sprintf		13078	0					
ANR	14291	ArgumentList	error		13078	1					
ANR	14292	Argument	error		13078	0					
ANR	14293	Identifier	error		13078	0					
ANR	14294	Argument	"""%d:%d: EOF unexpected"""		13078	1					
ANR	14295	PrimaryExpression	"""%d:%d: EOF unexpected"""		13078	0					
ANR	14296	Argument	line_and_col		13078	2					
ANR	14297	Identifier	line_and_col		13078	0					
ANR	14298	GotoStatement	goto e_failed ;	474:18:14415:14428	13078	1	True				
ANR	14299	Identifier	e_failed		13078	0					
ANR	14300	SwitchStatement	switch ( b = * state . ptr )		13078	2					
ANR	14301	Condition	b = * state . ptr	477:23:14471:14484	13078	0	True				
ANR	14302	AssignmentExpression	b = * state . ptr		13078	0		=			
ANR	14303	Identifier	b		13078	0					
ANR	14304	UnaryOperationExpression	* state . ptr		13078	1					
ANR	14305	UnaryOperator	*		13078	0					
ANR	14306	MemberAccess	state . ptr		13078	1					
ANR	14307	Identifier	state		13078	0					
ANR	14308	Identifier	ptr		13078	1					
ANR	14309	CompoundStatement		254:15:8465:8465	13078	1					
ANR	14310	Label	case '/' :	479:18:14522:14530	13078	0	True				
ANR	14311	ExpressionStatement	flags |= flag_line_comment	480:21:14553:14579	13078	1	True				
ANR	14312	AssignmentExpression	flags |= flag_line_comment		13078	0		|=			
ANR	14313	Identifier	flags		13078	0					
ANR	14314	Identifier	flag_line_comment		13078	1					
ANR	14315	ContinueStatement	continue ;	481:21:14602:14610	13078	2	True				
ANR	14316	Label	case '*' :	483:18:14631:14639	13078	3	True				
ANR	14317	ExpressionStatement	flags |= flag_block_comment	484:21:14662:14689	13078	4	True				
ANR	14318	AssignmentExpression	flags |= flag_block_comment		13078	0		|=			
ANR	14319	Identifier	flags		13078	0					
ANR	14320	Identifier	flag_block_comment		13078	1					
ANR	14321	ContinueStatement	continue ;	485:21:14712:14720	13078	5	True				
ANR	14322	Label	default :	487:18:14741:14748	13078	6	True				
ANR	14323	Identifier	default		13078	0					
ANR	14324	ExpressionStatement	"sprintf ( error , ""%d:%d: Unexpected `%c` in comment opening sequence"" , line_and_col , b )"	488:21:14771:14857	13078	7	True				
ANR	14325	CallExpression	"sprintf ( error , ""%d:%d: Unexpected `%c` in comment opening sequence"" , line_and_col , b )"		13078	0					
ANR	14326	Callee	sprintf		13078	0					
ANR	14327	Identifier	sprintf		13078	0					
ANR	14328	ArgumentList	error		13078	1					
ANR	14329	Argument	error		13078	0					
ANR	14330	Identifier	error		13078	0					
ANR	14331	Argument	"""%d:%d: Unexpected `%c` in comment opening sequence"""		13078	1					
ANR	14332	PrimaryExpression	"""%d:%d: Unexpected `%c` in comment opening sequence"""		13078	0					
ANR	14333	Argument	line_and_col		13078	2					
ANR	14334	Identifier	line_and_col		13078	0					
ANR	14335	Argument	b		13078	3					
ANR	14336	Identifier	b		13078	0					
ANR	14337	GotoStatement	goto e_failed ;	489:21:14880:14893	13078	8	True				
ANR	14338	Identifier	e_failed		13078	0					
ANR	14339	ExpressionStatement		490:16:14911:14911	13078	3	True				
ANR	14340	IfStatement	if ( flags & flag_done )		13078	3					
ANR	14341	Condition	flags & flag_done	494:13:14952:14968	13078	0	True				
ANR	14342	BitAndExpression	flags & flag_done		13078	0		&			
ANR	14343	Identifier	flags		13078	0					
ANR	14344	Identifier	flag_done		13078	1					
ANR	14345	CompoundStatement		271:9:8943:8943	13078	1					
ANR	14346	IfStatement	if ( ! b )		13078	0					
ANR	14347	Condition	! b	496:16:14998:14999	13078	0	True				
ANR	14348	UnaryOperationExpression	! b		13078	0					
ANR	14349	UnaryOperator	!		13078	0					
ANR	14350	Identifier	b		13078	1					
ANR	14351	BreakStatement	break ;	497:15:15017:15022	13078	1	True				
ANR	14352	SwitchStatement	switch ( b )		13078	1					
ANR	14353	Condition	b	499:20:15045:15045	13078	0	True				
ANR	14354	Identifier	b		13078	0					
ANR	14355	CompoundStatement		276:12:9023:9023	13078	1					
ANR	14356	Label	whitespace :	501:15:15077:15087	13078	0	True				
ANR	14357	Identifier	whitespace		13078	0					
ANR	14358	ContinueStatement	continue ;	502:18:15107:15115	13078	1	True				
ANR	14359	Label	default :	504:15:15133:15140	13078	2	True				
ANR	14360	Identifier	default		13078	0					
ANR	14361	ExpressionStatement	"sprintf ( error , ""%d:%d: Trailing garbage: `%c`"" , state . cur_line , state . cur_col , b )"	506:18:15161:15270	13078	3	True				
ANR	14362	CallExpression	"sprintf ( error , ""%d:%d: Trailing garbage: `%c`"" , state . cur_line , state . cur_col , b )"		13078	0					
ANR	14363	Callee	sprintf		13078	0					
ANR	14364	Identifier	sprintf		13078	0					
ANR	14365	ArgumentList	error		13078	1					
ANR	14366	Argument	error		13078	0					
ANR	14367	Identifier	error		13078	0					
ANR	14368	Argument	"""%d:%d: Trailing garbage: `%c`"""		13078	1					
ANR	14369	PrimaryExpression	"""%d:%d: Trailing garbage: `%c`"""		13078	0					
ANR	14370	Argument	state . cur_line		13078	2					
ANR	14371	MemberAccess	state . cur_line		13078	0					
ANR	14372	Identifier	state		13078	0					
ANR	14373	Identifier	cur_line		13078	1					
ANR	14374	Argument	state . cur_col		13078	3					
ANR	14375	MemberAccess	state . cur_col		13078	0					
ANR	14376	Identifier	state		13078	0					
ANR	14377	Identifier	cur_col		13078	1					
ANR	14378	Argument	b		13078	4					
ANR	14379	Identifier	b		13078	0					
ANR	14380	GotoStatement	goto e_failed ;	509:18:15291:15304	13078	4	True				
ANR	14381	Identifier	e_failed		13078	0					
ANR	14382	ExpressionStatement		510:13:15319:15319	13078	2	True				
ANR	14383	IfStatement	if ( flags & flag_seek_value )		13078	4					
ANR	14384	Condition	flags & flag_seek_value	513:13:15346:15368	13078	0	True				
ANR	14385	BitAndExpression	flags & flag_seek_value		13078	0		&			
ANR	14386	Identifier	flags		13078	0					
ANR	14387	Identifier	flag_seek_value		13078	1					
ANR	14388	CompoundStatement		290:9:9343:9343	13078	1					
ANR	14389	SwitchStatement	switch ( b )		13078	0					
ANR	14390	Condition	b	515:20:15402:15402	13078	0	True				
ANR	14391	Identifier	b		13078	0					
ANR	14392	CompoundStatement		292:12:9380:9380	13078	1					
ANR	14393	Label	whitespace :	517:15:15434:15444	13078	0	True				
ANR	14394	Identifier	whitespace		13078	0					
ANR	14395	ContinueStatement	continue ;	518:18:15464:15472	13078	1	True				
ANR	14396	Label	case ']' :	520:15:15490:15498	13078	2	True				
ANR	14397	IfStatement	if ( top && top -> type == json_array )		13078	3					
ANR	14398	Condition	top && top -> type == json_array	522:22:15523:15552	13078	0	True				
ANR	14399	AndExpression	top && top -> type == json_array		13078	0		&&			
ANR	14400	Identifier	top		13078	0					
ANR	14401	EqualityExpression	top -> type == json_array		13078	1		==			
ANR	14402	PtrMemberAccess	top -> type		13078	0					
ANR	14403	Identifier	top		13078	0					
ANR	14404	Identifier	type		13078	1					
ANR	14405	Identifier	json_array		13078	1					
ANR	14406	ExpressionStatement	flags = ( flags & ~ ( flag_need_comma | flag_seek_value ) ) | flag_next	523:21:15576:15643	13078	1	True				
ANR	14407	AssignmentExpression	flags = ( flags & ~ ( flag_need_comma | flag_seek_value ) ) | flag_next		13078	0		=			
ANR	14408	Identifier	flags		13078	0					
ANR	14409	InclusiveOrExpression	( flags & ~ ( flag_need_comma | flag_seek_value ) ) | flag_next		13078	1		|			
ANR	14410	BitAndExpression	flags & ~ ( flag_need_comma | flag_seek_value )		13078	0		&			
ANR	14411	Identifier	flags		13078	0					
ANR	14412	UnaryOperationExpression	~ ( flag_need_comma | flag_seek_value )		13078	1					
ANR	14413	UnaryOperator	~		13078	0					
ANR	14414	InclusiveOrExpression	flag_need_comma | flag_seek_value		13078	1		|			
ANR	14415	Identifier	flag_need_comma		13078	0					
ANR	14416	Identifier	flag_seek_value		13078	1					
ANR	14417	Identifier	flag_next		13078	1					
ANR	14418	ElseStatement	else		13078	0					
ANR	14419	CompoundStatement		301:18:9649:9649	13078	0					
ANR	14420	ExpressionStatement	"sprintf ( error , ""%d:%d: Unexpected ]"" , line_and_col )"	525:21:15689:15741	13078	0	True				
ANR	14421	CallExpression	"sprintf ( error , ""%d:%d: Unexpected ]"" , line_and_col )"		13078	0					
ANR	14422	Callee	sprintf		13078	0					
ANR	14423	Identifier	sprintf		13078	0					
ANR	14424	ArgumentList	error		13078	1					
ANR	14425	Argument	error		13078	0					
ANR	14426	Identifier	error		13078	0					
ANR	14427	Argument	"""%d:%d: Unexpected ]"""		13078	1					
ANR	14428	PrimaryExpression	"""%d:%d: Unexpected ]"""		13078	0					
ANR	14429	Argument	line_and_col		13078	2					
ANR	14430	Identifier	line_and_col		13078	0					
ANR	14431	GotoStatement	goto e_failed ;	526:21:15764:15777	13078	1	True				
ANR	14432	Identifier	e_failed		13078	0					
ANR	14433	BreakStatement	break ;	529:18:15818:15823	13078	4	True				
ANR	14434	Label	default :	531:15:15841:15848	13078	5	True				
ANR	14435	Identifier	default		13078	0					
ANR	14436	IfStatement	if ( flags & flag_need_comma )		13078	6					
ANR	14437	Condition	flags & flag_need_comma	533:22:15873:15895	13078	0	True				
ANR	14438	BitAndExpression	flags & flag_need_comma		13078	0		&			
ANR	14439	Identifier	flags		13078	0					
ANR	14440	Identifier	flag_need_comma		13078	1					
ANR	14441	CompoundStatement		310:18:9879:9879	13078	1					
ANR	14442	IfStatement	"if ( b == ',' )"		13078	0					
ANR	14443	Condition	"b == ','"	535:25:15943:15950	13078	0	True				
ANR	14444	EqualityExpression	"b == ','"		13078	0		==			
ANR	14445	Identifier	b		13078	0					
ANR	14446	PrimaryExpression	"','"		13078	1					
ANR	14447	CompoundStatement		312:21:9937:9937	13078	1					
ANR	14448	ExpressionStatement	flags &= ~ flag_need_comma	536:24:15977:16003	13078	0	True				
ANR	14449	AssignmentExpression	flags &= ~ flag_need_comma		13078	0		&=			
ANR	14450	Identifier	flags		13078	0					
ANR	14451	UnaryOperationExpression	~ flag_need_comma		13078	1					
ANR	14452	UnaryOperator	~		13078	0					
ANR	14453	Identifier	flag_need_comma		13078	1					
ANR	14454	ContinueStatement	continue ;	537:24:16029:16037	13078	1	True				
ANR	14455	ElseStatement	else		13078	0					
ANR	14456	CompoundStatement		316:21:10072:10072	13078	0					
ANR	14457	ExpressionStatement	"sprintf ( error , ""%d:%d: Expected , before %c"" , state . cur_line , state . cur_col , b )"	541:24:16135:16248	13078	0	True				
ANR	14458	CallExpression	"sprintf ( error , ""%d:%d: Expected , before %c"" , state . cur_line , state . cur_col , b )"		13078	0					
ANR	14459	Callee	sprintf		13078	0					
ANR	14460	Identifier	sprintf		13078	0					
ANR	14461	ArgumentList	error		13078	1					
ANR	14462	Argument	error		13078	0					
ANR	14463	Identifier	error		13078	0					
ANR	14464	Argument	"""%d:%d: Expected , before %c"""		13078	1					
ANR	14465	PrimaryExpression	"""%d:%d: Expected , before %c"""		13078	0					
ANR	14466	Argument	state . cur_line		13078	2					
ANR	14467	MemberAccess	state . cur_line		13078	0					
ANR	14468	Identifier	state		13078	0					
ANR	14469	Identifier	cur_line		13078	1					
ANR	14470	Argument	state . cur_col		13078	3					
ANR	14471	MemberAccess	state . cur_col		13078	0					
ANR	14472	Identifier	state		13078	0					
ANR	14473	Identifier	cur_col		13078	1					
ANR	14474	Argument	b		13078	4					
ANR	14475	Identifier	b		13078	0					
ANR	14476	GotoStatement	goto e_failed ;	544:24:16275:16288	13078	1	True				
ANR	14477	Identifier	e_failed		13078	0					
ANR	14478	IfStatement	if ( flags & flag_need_colon )		13078	7					
ANR	14479	Condition	flags & flag_need_colon	548:22:16356:16378	13078	0	True				
ANR	14480	BitAndExpression	flags & flag_need_colon		13078	0		&			
ANR	14481	Identifier	flags		13078	0					
ANR	14482	Identifier	flag_need_colon		13078	1					
ANR	14483	CompoundStatement		325:18:10362:10362	13078	1					
ANR	14484	IfStatement	if ( b == ':' )		13078	0					
ANR	14485	Condition	b == ':'	550:25:16426:16433	13078	0	True				
ANR	14486	EqualityExpression	b == ':'		13078	0		==			
ANR	14487	Identifier	b		13078	0					
ANR	14488	PrimaryExpression	':'		13078	1					
ANR	14489	CompoundStatement		327:21:10420:10420	13078	1					
ANR	14490	ExpressionStatement	flags &= ~ flag_need_colon	551:24:16460:16486	13078	0	True				
ANR	14491	AssignmentExpression	flags &= ~ flag_need_colon		13078	0		&=			
ANR	14492	Identifier	flags		13078	0					
ANR	14493	UnaryOperationExpression	~ flag_need_colon		13078	1					
ANR	14494	UnaryOperator	~		13078	0					
ANR	14495	Identifier	flag_need_colon		13078	1					
ANR	14496	ContinueStatement	continue ;	552:24:16512:16520	13078	1	True				
ANR	14497	ElseStatement	else		13078	0					
ANR	14498	CompoundStatement		331:21:10555:10555	13078	0					
ANR	14499	ExpressionStatement	"sprintf ( error , ""%d:%d: Expected : before %c"" , state . cur_line , state . cur_col , b )"	556:24:16619:16732	13078	0	True				
ANR	14500	CallExpression	"sprintf ( error , ""%d:%d: Expected : before %c"" , state . cur_line , state . cur_col , b )"		13078	0					
ANR	14501	Callee	sprintf		13078	0					
ANR	14502	Identifier	sprintf		13078	0					
ANR	14503	ArgumentList	error		13078	1					
ANR	14504	Argument	error		13078	0					
ANR	14505	Identifier	error		13078	0					
ANR	14506	Argument	"""%d:%d: Expected : before %c"""		13078	1					
ANR	14507	PrimaryExpression	"""%d:%d: Expected : before %c"""		13078	0					
ANR	14508	Argument	state . cur_line		13078	2					
ANR	14509	MemberAccess	state . cur_line		13078	0					
ANR	14510	Identifier	state		13078	0					
ANR	14511	Identifier	cur_line		13078	1					
ANR	14512	Argument	state . cur_col		13078	3					
ANR	14513	MemberAccess	state . cur_col		13078	0					
ANR	14514	Identifier	state		13078	0					
ANR	14515	Identifier	cur_col		13078	1					
ANR	14516	Argument	b		13078	4					
ANR	14517	Identifier	b		13078	0					
ANR	14518	GotoStatement	goto e_failed ;	559:24:16759:16772	13078	1	True				
ANR	14519	Identifier	e_failed		13078	0					
ANR	14520	ExpressionStatement	flags &= ~ flag_seek_value	563:18:16836:16862	13078	8	True				
ANR	14521	AssignmentExpression	flags &= ~ flag_seek_value		13078	0		&=			
ANR	14522	Identifier	flags		13078	0					
ANR	14523	UnaryOperationExpression	~ flag_seek_value		13078	1					
ANR	14524	UnaryOperator	~		13078	0					
ANR	14525	Identifier	flag_seek_value		13078	1					
ANR	14526	SwitchStatement	switch ( b )		13078	9					
ANR	14527	Condition	b	565:26:16891:16891	13078	0	True				
ANR	14528	Identifier	b		13078	0					
ANR	14529	CompoundStatement		342:18:10875:10875	13078	1					
ANR	14530	Label	case '{' :	567:21:16935:16943	13078	0	True				
ANR	14531	IfStatement	"if ( ! new_value ( & state , & top , & root , & alloc , json_object ) )"		13078	1					
ANR	14532	Condition	"! new_value ( & state , & top , & root , & alloc , json_object )"	569:28:16974:17026	13078	0	True				
ANR	14533	UnaryOperationExpression	"! new_value ( & state , & top , & root , & alloc , json_object )"		13078	0					
ANR	14534	UnaryOperator	!		13078	0					
ANR	14535	CallExpression	"new_value ( & state , & top , & root , & alloc , json_object )"		13078	1					
ANR	14536	Callee	new_value		13078	0					
ANR	14537	Identifier	new_value		13078	0					
ANR	14538	ArgumentList	& state		13078	1					
ANR	14539	Argument	& state		13078	0					
ANR	14540	UnaryOperationExpression	& state		13078	0					
ANR	14541	UnaryOperator	&		13078	0					
ANR	14542	Identifier	state		13078	1					
ANR	14543	Argument	& top		13078	1					
ANR	14544	UnaryOperationExpression	& top		13078	0					
ANR	14545	UnaryOperator	&		13078	0					
ANR	14546	Identifier	top		13078	1					
ANR	14547	Argument	& root		13078	2					
ANR	14548	UnaryOperationExpression	& root		13078	0					
ANR	14549	UnaryOperator	&		13078	0					
ANR	14550	Identifier	root		13078	1					
ANR	14551	Argument	& alloc		13078	3					
ANR	14552	UnaryOperationExpression	& alloc		13078	0					
ANR	14553	UnaryOperator	&		13078	0					
ANR	14554	Identifier	alloc		13078	1					
ANR	14555	Argument	json_object		13078	4					
ANR	14556	Identifier	json_object		13078	0					
ANR	14557	GotoStatement	goto e_alloc_failure ;	570:27:17056:17076	13078	1	True				
ANR	14558	Identifier	e_alloc_failure		13078	0					
ANR	14559	ContinueStatement	continue ;	572:24:17103:17111	13078	2	True				
ANR	14560	Label	case '[' :	574:21:17135:17143	13078	3	True				
ANR	14561	IfStatement	"if ( ! new_value ( & state , & top , & root , & alloc , json_array ) )"		13078	4					
ANR	14562	Condition	"! new_value ( & state , & top , & root , & alloc , json_array )"	576:28:17174:17225	13078	0	True				
ANR	14563	UnaryOperationExpression	"! new_value ( & state , & top , & root , & alloc , json_array )"		13078	0					
ANR	14564	UnaryOperator	!		13078	0					
ANR	14565	CallExpression	"new_value ( & state , & top , & root , & alloc , json_array )"		13078	1					
ANR	14566	Callee	new_value		13078	0					
ANR	14567	Identifier	new_value		13078	0					
ANR	14568	ArgumentList	& state		13078	1					
ANR	14569	Argument	& state		13078	0					
ANR	14570	UnaryOperationExpression	& state		13078	0					
ANR	14571	UnaryOperator	&		13078	0					
ANR	14572	Identifier	state		13078	1					
ANR	14573	Argument	& top		13078	1					
ANR	14574	UnaryOperationExpression	& top		13078	0					
ANR	14575	UnaryOperator	&		13078	0					
ANR	14576	Identifier	top		13078	1					
ANR	14577	Argument	& root		13078	2					
ANR	14578	UnaryOperationExpression	& root		13078	0					
ANR	14579	UnaryOperator	&		13078	0					
ANR	14580	Identifier	root		13078	1					
ANR	14581	Argument	& alloc		13078	3					
ANR	14582	UnaryOperationExpression	& alloc		13078	0					
ANR	14583	UnaryOperator	&		13078	0					
ANR	14584	Identifier	alloc		13078	1					
ANR	14585	Argument	json_array		13078	4					
ANR	14586	Identifier	json_array		13078	0					
ANR	14587	GotoStatement	goto e_alloc_failure ;	577:27:17255:17275	13078	1	True				
ANR	14588	Identifier	e_alloc_failure		13078	0					
ANR	14589	ExpressionStatement	flags |= flag_seek_value	579:24:17302:17326	13078	5	True				
ANR	14590	AssignmentExpression	flags |= flag_seek_value		13078	0		|=			
ANR	14591	Identifier	flags		13078	0					
ANR	14592	Identifier	flag_seek_value		13078	1					
ANR	14593	ContinueStatement	continue ;	580:24:17352:17360	13078	6	True				
ANR	14594	Label	"case '""' :"	582:21:17384:17392	13078	7	True				
ANR	14595	IfStatement	"if ( ! new_value ( & state , & top , & root , & alloc , json_string ) )"		13078	8					
ANR	14596	Condition	"! new_value ( & state , & top , & root , & alloc , json_string )"	584:28:17423:17475	13078	0	True				
ANR	14597	UnaryOperationExpression	"! new_value ( & state , & top , & root , & alloc , json_string )"		13078	0					
ANR	14598	UnaryOperator	!		13078	0					
ANR	14599	CallExpression	"new_value ( & state , & top , & root , & alloc , json_string )"		13078	1					
ANR	14600	Callee	new_value		13078	0					
ANR	14601	Identifier	new_value		13078	0					
ANR	14602	ArgumentList	& state		13078	1					
ANR	14603	Argument	& state		13078	0					
ANR	14604	UnaryOperationExpression	& state		13078	0					
ANR	14605	UnaryOperator	&		13078	0					
ANR	14606	Identifier	state		13078	1					
ANR	14607	Argument	& top		13078	1					
ANR	14608	UnaryOperationExpression	& top		13078	0					
ANR	14609	UnaryOperator	&		13078	0					
ANR	14610	Identifier	top		13078	1					
ANR	14611	Argument	& root		13078	2					
ANR	14612	UnaryOperationExpression	& root		13078	0					
ANR	14613	UnaryOperator	&		13078	0					
ANR	14614	Identifier	root		13078	1					
ANR	14615	Argument	& alloc		13078	3					
ANR	14616	UnaryOperationExpression	& alloc		13078	0					
ANR	14617	UnaryOperator	&		13078	0					
ANR	14618	Identifier	alloc		13078	1					
ANR	14619	Argument	json_string		13078	4					
ANR	14620	Identifier	json_string		13078	0					
ANR	14621	GotoStatement	goto e_alloc_failure ;	585:27:17505:17525	13078	1	True				
ANR	14622	Identifier	e_alloc_failure		13078	0					
ANR	14623	ExpressionStatement	flags |= flag_string	587:24:17552:17572	13078	9	True				
ANR	14624	AssignmentExpression	flags |= flag_string		13078	0		|=			
ANR	14625	Identifier	flags		13078	0					
ANR	14626	Identifier	flag_string		13078	1					
ANR	14627	ExpressionStatement	string = top -> u . string . ptr	589:24:17599:17625	13078	10	True				
ANR	14628	AssignmentExpression	string = top -> u . string . ptr		13078	0		=			
ANR	14629	Identifier	string		13078	0					
ANR	14630	MemberAccess	top -> u . string . ptr		13078	1					
ANR	14631	MemberAccess	top -> u . string		13078	0					
ANR	14632	PtrMemberAccess	top -> u		13078	0					
ANR	14633	Identifier	top		13078	0					
ANR	14634	Identifier	u		13078	1					
ANR	14635	Identifier	string		13078	1					
ANR	14636	Identifier	ptr		13078	1					
ANR	14637	ExpressionStatement	string_length = 0	590:24:17651:17668	13078	11	True				
ANR	14638	AssignmentExpression	string_length = 0		13078	0		=			
ANR	14639	Identifier	string_length		13078	0					
ANR	14640	PrimaryExpression	0		13078	1					
ANR	14641	ContinueStatement	continue ;	592:24:17695:17703	13078	12	True				
ANR	14642	Label	case 't' :	594:21:17727:17735	13078	13	True				
ANR	14643	IfStatement	if ( ( end - state . ptr ) < 3 || * ( ++ state . ptr ) != 'r' || * ( ++ state . ptr ) != 'u' || * ( ++ state . ptr ) != 'e' )		13078	14					
ANR	14644	Condition	( end - state . ptr ) < 3 || * ( ++ state . ptr ) != 'r' || * ( ++ state . ptr ) != 'u' || * ( ++ state . ptr ) != 'e'	596:28:17766:17892	13078	0	True				
ANR	14645	OrExpression	( end - state . ptr ) < 3 || * ( ++ state . ptr ) != 'r' || * ( ++ state . ptr ) != 'u' || * ( ++ state . ptr ) != 'e'		13078	0		||			
ANR	14646	RelationalExpression	( end - state . ptr ) < 3		13078	0		<			
ANR	14647	AdditiveExpression	end - state . ptr		13078	0		-			
ANR	14648	Identifier	end		13078	0					
ANR	14649	MemberAccess	state . ptr		13078	1					
ANR	14650	Identifier	state		13078	0					
ANR	14651	Identifier	ptr		13078	1					
ANR	14652	PrimaryExpression	3		13078	1					
ANR	14653	OrExpression	* ( ++ state . ptr ) != 'r' || * ( ++ state . ptr ) != 'u' || * ( ++ state . ptr ) != 'e'		13078	1		||			
ANR	14654	EqualityExpression	* ( ++ state . ptr ) != 'r'		13078	0		!=			
ANR	14655	UnaryOperationExpression	* ( ++ state . ptr )		13078	0					
ANR	14656	UnaryOperator	*		13078	0					
ANR	14657	UnaryExpression	++ state . ptr		13078	1					
ANR	14658	IncDec	++		13078	0					
ANR	14659	MemberAccess	state . ptr		13078	1					
ANR	14660	Identifier	state		13078	0					
ANR	14661	Identifier	ptr		13078	1					
ANR	14662	PrimaryExpression	'r'		13078	1					
ANR	14663	OrExpression	* ( ++ state . ptr ) != 'u' || * ( ++ state . ptr ) != 'e'		13078	1		||			
ANR	14664	EqualityExpression	* ( ++ state . ptr ) != 'u'		13078	0		!=			
ANR	14665	UnaryOperationExpression	* ( ++ state . ptr )		13078	0					
ANR	14666	UnaryOperator	*		13078	0					
ANR	14667	UnaryExpression	++ state . ptr		13078	1					
ANR	14668	IncDec	++		13078	0					
ANR	14669	MemberAccess	state . ptr		13078	1					
ANR	14670	Identifier	state		13078	0					
ANR	14671	Identifier	ptr		13078	1					
ANR	14672	PrimaryExpression	'u'		13078	1					
ANR	14673	EqualityExpression	* ( ++ state . ptr ) != 'e'		13078	1		!=			
ANR	14674	UnaryOperationExpression	* ( ++ state . ptr )		13078	0					
ANR	14675	UnaryOperator	*		13078	0					
ANR	14676	UnaryExpression	++ state . ptr		13078	1					
ANR	14677	IncDec	++		13078	0					
ANR	14678	MemberAccess	state . ptr		13078	1					
ANR	14679	Identifier	state		13078	0					
ANR	14680	Identifier	ptr		13078	1					
ANR	14681	PrimaryExpression	'e'		13078	1					
ANR	14682	CompoundStatement		374:24:11882:11882	13078	1					
ANR	14683	GotoStatement	goto e_unknown_value ;	599:27:17948:17968	13078	0	True				
ANR	14684	Identifier	e_unknown_value		13078	0					
ANR	14685	IfStatement	"if ( ! new_value ( & state , & top , & root , & alloc , json_boolean ) )"		13078	15					
ANR	14686	Condition	"! new_value ( & state , & top , & root , & alloc , json_boolean )"	602:28:18025:18078	13078	0	True				
ANR	14687	UnaryOperationExpression	"! new_value ( & state , & top , & root , & alloc , json_boolean )"		13078	0					
ANR	14688	UnaryOperator	!		13078	0					
ANR	14689	CallExpression	"new_value ( & state , & top , & root , & alloc , json_boolean )"		13078	1					
ANR	14690	Callee	new_value		13078	0					
ANR	14691	Identifier	new_value		13078	0					
ANR	14692	ArgumentList	& state		13078	1					
ANR	14693	Argument	& state		13078	0					
ANR	14694	UnaryOperationExpression	& state		13078	0					
ANR	14695	UnaryOperator	&		13078	0					
ANR	14696	Identifier	state		13078	1					
ANR	14697	Argument	& top		13078	1					
ANR	14698	UnaryOperationExpression	& top		13078	0					
ANR	14699	UnaryOperator	&		13078	0					
ANR	14700	Identifier	top		13078	1					
ANR	14701	Argument	& root		13078	2					
ANR	14702	UnaryOperationExpression	& root		13078	0					
ANR	14703	UnaryOperator	&		13078	0					
ANR	14704	Identifier	root		13078	1					
ANR	14705	Argument	& alloc		13078	3					
ANR	14706	UnaryOperationExpression	& alloc		13078	0					
ANR	14707	UnaryOperator	&		13078	0					
ANR	14708	Identifier	alloc		13078	1					
ANR	14709	Argument	json_boolean		13078	4					
ANR	14710	Identifier	json_boolean		13078	0					
ANR	14711	GotoStatement	goto e_alloc_failure ;	603:27:18108:18128	13078	1	True				
ANR	14712	Identifier	e_alloc_failure		13078	0					
ANR	14713	ExpressionStatement	top -> u . boolean = 1	605:24:18155:18173	13078	16	True				
ANR	14714	AssignmentExpression	top -> u . boolean = 1		13078	0		=			
ANR	14715	MemberAccess	top -> u . boolean		13078	0					
ANR	14716	PtrMemberAccess	top -> u		13078	0					
ANR	14717	Identifier	top		13078	0					
ANR	14718	Identifier	u		13078	1					
ANR	14719	Identifier	boolean		13078	1					
ANR	14720	PrimaryExpression	1		13078	1					
ANR	14721	ExpressionStatement	flags |= flag_next	607:24:18200:18218	13078	17	True				
ANR	14722	AssignmentExpression	flags |= flag_next		13078	0		|=			
ANR	14723	Identifier	flags		13078	0					
ANR	14724	Identifier	flag_next		13078	1					
ANR	14725	BreakStatement	break ;	608:24:18244:18249	13078	18	True				
ANR	14726	Label	case 'f' :	610:21:18273:18281	13078	19	True				
ANR	14727	IfStatement	if ( ( end - state . ptr ) < 4 || * ( ++ state . ptr ) != 'a' || * ( ++ state . ptr ) != 'l' || * ( ++ state . ptr ) != 's' || * ( ++ state . ptr ) != 'e' )		13078	20					
ANR	14728	Condition	( end - state . ptr ) < 4 || * ( ++ state . ptr ) != 'a' || * ( ++ state . ptr ) != 'l' || * ( ++ state . ptr ) != 's' || * ( ++ state . ptr ) != 'e'	612:28:18312:18492	13078	0	True				
ANR	14729	OrExpression	( end - state . ptr ) < 4 || * ( ++ state . ptr ) != 'a' || * ( ++ state . ptr ) != 'l' || * ( ++ state . ptr ) != 's' || * ( ++ state . ptr ) != 'e'		13078	0		||			
ANR	14730	RelationalExpression	( end - state . ptr ) < 4		13078	0		<			
ANR	14731	AdditiveExpression	end - state . ptr		13078	0		-			
ANR	14732	Identifier	end		13078	0					
ANR	14733	MemberAccess	state . ptr		13078	1					
ANR	14734	Identifier	state		13078	0					
ANR	14735	Identifier	ptr		13078	1					
ANR	14736	PrimaryExpression	4		13078	1					
ANR	14737	OrExpression	* ( ++ state . ptr ) != 'a' || * ( ++ state . ptr ) != 'l' || * ( ++ state . ptr ) != 's' || * ( ++ state . ptr ) != 'e'		13078	1		||			
ANR	14738	EqualityExpression	* ( ++ state . ptr ) != 'a'		13078	0		!=			
ANR	14739	UnaryOperationExpression	* ( ++ state . ptr )		13078	0					
ANR	14740	UnaryOperator	*		13078	0					
ANR	14741	UnaryExpression	++ state . ptr		13078	1					
ANR	14742	IncDec	++		13078	0					
ANR	14743	MemberAccess	state . ptr		13078	1					
ANR	14744	Identifier	state		13078	0					
ANR	14745	Identifier	ptr		13078	1					
ANR	14746	PrimaryExpression	'a'		13078	1					
ANR	14747	OrExpression	* ( ++ state . ptr ) != 'l' || * ( ++ state . ptr ) != 's' || * ( ++ state . ptr ) != 'e'		13078	1		||			
ANR	14748	EqualityExpression	* ( ++ state . ptr ) != 'l'		13078	0		!=			
ANR	14749	UnaryOperationExpression	* ( ++ state . ptr )		13078	0					
ANR	14750	UnaryOperator	*		13078	0					
ANR	14751	UnaryExpression	++ state . ptr		13078	1					
ANR	14752	IncDec	++		13078	0					
ANR	14753	MemberAccess	state . ptr		13078	1					
ANR	14754	Identifier	state		13078	0					
ANR	14755	Identifier	ptr		13078	1					
ANR	14756	PrimaryExpression	'l'		13078	1					
ANR	14757	OrExpression	* ( ++ state . ptr ) != 's' || * ( ++ state . ptr ) != 'e'		13078	1		||			
ANR	14758	EqualityExpression	* ( ++ state . ptr ) != 's'		13078	0		!=			
ANR	14759	UnaryOperationExpression	* ( ++ state . ptr )		13078	0					
ANR	14760	UnaryOperator	*		13078	0					
ANR	14761	UnaryExpression	++ state . ptr		13078	1					
ANR	14762	IncDec	++		13078	0					
ANR	14763	MemberAccess	state . ptr		13078	1					
ANR	14764	Identifier	state		13078	0					
ANR	14765	Identifier	ptr		13078	1					
ANR	14766	PrimaryExpression	's'		13078	1					
ANR	14767	EqualityExpression	* ( ++ state . ptr ) != 'e'		13078	1		!=			
ANR	14768	UnaryOperationExpression	* ( ++ state . ptr )		13078	0					
ANR	14769	UnaryOperator	*		13078	0					
ANR	14770	UnaryExpression	++ state . ptr		13078	1					
ANR	14771	IncDec	++		13078	0					
ANR	14772	MemberAccess	state . ptr		13078	1					
ANR	14773	Identifier	state		13078	0					
ANR	14774	Identifier	ptr		13078	1					
ANR	14775	PrimaryExpression	'e'		13078	1					
ANR	14776	CompoundStatement		391:24:12482:12482	13078	1					
ANR	14777	GotoStatement	goto e_unknown_value ;	616:27:18548:18568	13078	0	True				
ANR	14778	Identifier	e_unknown_value		13078	0					
ANR	14779	IfStatement	"if ( ! new_value ( & state , & top , & root , & alloc , json_boolean ) )"		13078	21					
ANR	14780	Condition	"! new_value ( & state , & top , & root , & alloc , json_boolean )"	619:28:18625:18678	13078	0	True				
ANR	14781	UnaryOperationExpression	"! new_value ( & state , & top , & root , & alloc , json_boolean )"		13078	0					
ANR	14782	UnaryOperator	!		13078	0					
ANR	14783	CallExpression	"new_value ( & state , & top , & root , & alloc , json_boolean )"		13078	1					
ANR	14784	Callee	new_value		13078	0					
ANR	14785	Identifier	new_value		13078	0					
ANR	14786	ArgumentList	& state		13078	1					
ANR	14787	Argument	& state		13078	0					
ANR	14788	UnaryOperationExpression	& state		13078	0					
ANR	14789	UnaryOperator	&		13078	0					
ANR	14790	Identifier	state		13078	1					
ANR	14791	Argument	& top		13078	1					
ANR	14792	UnaryOperationExpression	& top		13078	0					
ANR	14793	UnaryOperator	&		13078	0					
ANR	14794	Identifier	top		13078	1					
ANR	14795	Argument	& root		13078	2					
ANR	14796	UnaryOperationExpression	& root		13078	0					
ANR	14797	UnaryOperator	&		13078	0					
ANR	14798	Identifier	root		13078	1					
ANR	14799	Argument	& alloc		13078	3					
ANR	14800	UnaryOperationExpression	& alloc		13078	0					
ANR	14801	UnaryOperator	&		13078	0					
ANR	14802	Identifier	alloc		13078	1					
ANR	14803	Argument	json_boolean		13078	4					
ANR	14804	Identifier	json_boolean		13078	0					
ANR	14805	GotoStatement	goto e_alloc_failure ;	620:27:18708:18728	13078	1	True				
ANR	14806	Identifier	e_alloc_failure		13078	0					
ANR	14807	ExpressionStatement	flags |= flag_next	622:24:18755:18773	13078	22	True				
ANR	14808	AssignmentExpression	flags |= flag_next		13078	0		|=			
ANR	14809	Identifier	flags		13078	0					
ANR	14810	Identifier	flag_next		13078	1					
ANR	14811	BreakStatement	break ;	623:24:18799:18804	13078	23	True				
ANR	14812	Label	case 'n' :	625:21:18828:18836	13078	24	True				
ANR	14813	IfStatement	if ( ( end - state . ptr ) < 3 || * ( ++ state . ptr ) != 'u' || * ( ++ state . ptr ) != 'l' || * ( ++ state . ptr ) != 'l' )		13078	25					
ANR	14814	Condition	( end - state . ptr ) < 3 || * ( ++ state . ptr ) != 'u' || * ( ++ state . ptr ) != 'l' || * ( ++ state . ptr ) != 'l'	627:28:18867:18993	13078	0	True				
ANR	14815	OrExpression	( end - state . ptr ) < 3 || * ( ++ state . ptr ) != 'u' || * ( ++ state . ptr ) != 'l' || * ( ++ state . ptr ) != 'l'		13078	0		||			
ANR	14816	RelationalExpression	( end - state . ptr ) < 3		13078	0		<			
ANR	14817	AdditiveExpression	end - state . ptr		13078	0		-			
ANR	14818	Identifier	end		13078	0					
ANR	14819	MemberAccess	state . ptr		13078	1					
ANR	14820	Identifier	state		13078	0					
ANR	14821	Identifier	ptr		13078	1					
ANR	14822	PrimaryExpression	3		13078	1					
ANR	14823	OrExpression	* ( ++ state . ptr ) != 'u' || * ( ++ state . ptr ) != 'l' || * ( ++ state . ptr ) != 'l'		13078	1		||			
ANR	14824	EqualityExpression	* ( ++ state . ptr ) != 'u'		13078	0		!=			
ANR	14825	UnaryOperationExpression	* ( ++ state . ptr )		13078	0					
ANR	14826	UnaryOperator	*		13078	0					
ANR	14827	UnaryExpression	++ state . ptr		13078	1					
ANR	14828	IncDec	++		13078	0					
ANR	14829	MemberAccess	state . ptr		13078	1					
ANR	14830	Identifier	state		13078	0					
ANR	14831	Identifier	ptr		13078	1					
ANR	14832	PrimaryExpression	'u'		13078	1					
ANR	14833	OrExpression	* ( ++ state . ptr ) != 'l' || * ( ++ state . ptr ) != 'l'		13078	1		||			
ANR	14834	EqualityExpression	* ( ++ state . ptr ) != 'l'		13078	0		!=			
ANR	14835	UnaryOperationExpression	* ( ++ state . ptr )		13078	0					
ANR	14836	UnaryOperator	*		13078	0					
ANR	14837	UnaryExpression	++ state . ptr		13078	1					
ANR	14838	IncDec	++		13078	0					
ANR	14839	MemberAccess	state . ptr		13078	1					
ANR	14840	Identifier	state		13078	0					
ANR	14841	Identifier	ptr		13078	1					
ANR	14842	PrimaryExpression	'l'		13078	1					
ANR	14843	EqualityExpression	* ( ++ state . ptr ) != 'l'		13078	1		!=			
ANR	14844	UnaryOperationExpression	* ( ++ state . ptr )		13078	0					
ANR	14845	UnaryOperator	*		13078	0					
ANR	14846	UnaryExpression	++ state . ptr		13078	1					
ANR	14847	IncDec	++		13078	0					
ANR	14848	MemberAccess	state . ptr		13078	1					
ANR	14849	Identifier	state		13078	0					
ANR	14850	Identifier	ptr		13078	1					
ANR	14851	PrimaryExpression	'l'		13078	1					
ANR	14852	CompoundStatement		405:24:12983:12983	13078	1					
ANR	14853	GotoStatement	goto e_unknown_value ;	630:27:19049:19069	13078	0	True				
ANR	14854	Identifier	e_unknown_value		13078	0					
ANR	14855	IfStatement	"if ( ! new_value ( & state , & top , & root , & alloc , json_null ) )"		13078	26					
ANR	14856	Condition	"! new_value ( & state , & top , & root , & alloc , json_null )"	633:28:19126:19176	13078	0	True				
ANR	14857	UnaryOperationExpression	"! new_value ( & state , & top , & root , & alloc , json_null )"		13078	0					
ANR	14858	UnaryOperator	!		13078	0					
ANR	14859	CallExpression	"new_value ( & state , & top , & root , & alloc , json_null )"		13078	1					
ANR	14860	Callee	new_value		13078	0					
ANR	14861	Identifier	new_value		13078	0					
ANR	14862	ArgumentList	& state		13078	1					
ANR	14863	Argument	& state		13078	0					
ANR	14864	UnaryOperationExpression	& state		13078	0					
ANR	14865	UnaryOperator	&		13078	0					
ANR	14866	Identifier	state		13078	1					
ANR	14867	Argument	& top		13078	1					
ANR	14868	UnaryOperationExpression	& top		13078	0					
ANR	14869	UnaryOperator	&		13078	0					
ANR	14870	Identifier	top		13078	1					
ANR	14871	Argument	& root		13078	2					
ANR	14872	UnaryOperationExpression	& root		13078	0					
ANR	14873	UnaryOperator	&		13078	0					
ANR	14874	Identifier	root		13078	1					
ANR	14875	Argument	& alloc		13078	3					
ANR	14876	UnaryOperationExpression	& alloc		13078	0					
ANR	14877	UnaryOperator	&		13078	0					
ANR	14878	Identifier	alloc		13078	1					
ANR	14879	Argument	json_null		13078	4					
ANR	14880	Identifier	json_null		13078	0					
ANR	14881	GotoStatement	goto e_alloc_failure ;	634:27:19206:19226	13078	1	True				
ANR	14882	Identifier	e_alloc_failure		13078	0					
ANR	14883	ExpressionStatement	flags |= flag_next	636:24:19253:19271	13078	27	True				
ANR	14884	AssignmentExpression	flags |= flag_next		13078	0		|=			
ANR	14885	Identifier	flags		13078	0					
ANR	14886	Identifier	flag_next		13078	1					
ANR	14887	BreakStatement	break ;	637:24:19297:19302	13078	28	True				
ANR	14888	Label	default :	639:21:19326:19333	13078	29	True				
ANR	14889	Identifier	default		13078	0					
ANR	14890	IfStatement	if ( isdigit ( b ) || b == '-' )		13078	30					
ANR	14891	Condition	isdigit ( b ) || b == '-'	641:28:19364:19386	13078	0	True				
ANR	14892	OrExpression	isdigit ( b ) || b == '-'		13078	0		||			
ANR	14893	CallExpression	isdigit ( b )		13078	0					
ANR	14894	Callee	isdigit		13078	0					
ANR	14895	Identifier	isdigit		13078	0					
ANR	14896	ArgumentList	b		13078	1					
ANR	14897	Argument	b		13078	0					
ANR	14898	Identifier	b		13078	0					
ANR	14899	EqualityExpression	b == '-'		13078	1		==			
ANR	14900	Identifier	b		13078	0					
ANR	14901	PrimaryExpression	'-'		13078	1					
ANR	14902	CompoundStatement		418:24:13376:13376	13078	1					
ANR	14903	IfStatement	"if ( ! new_value ( & state , & top , & root , & alloc , json_integer ) )"		13078	0					
ANR	14904	Condition	"! new_value ( & state , & top , & root , & alloc , json_integer )"	643:31:19446:19499	13078	0	True				
ANR	14905	UnaryOperationExpression	"! new_value ( & state , & top , & root , & alloc , json_integer )"		13078	0					
ANR	14906	UnaryOperator	!		13078	0					
ANR	14907	CallExpression	"new_value ( & state , & top , & root , & alloc , json_integer )"		13078	1					
ANR	14908	Callee	new_value		13078	0					
ANR	14909	Identifier	new_value		13078	0					
ANR	14910	ArgumentList	& state		13078	1					
ANR	14911	Argument	& state		13078	0					
ANR	14912	UnaryOperationExpression	& state		13078	0					
ANR	14913	UnaryOperator	&		13078	0					
ANR	14914	Identifier	state		13078	1					
ANR	14915	Argument	& top		13078	1					
ANR	14916	UnaryOperationExpression	& top		13078	0					
ANR	14917	UnaryOperator	&		13078	0					
ANR	14918	Identifier	top		13078	1					
ANR	14919	Argument	& root		13078	2					
ANR	14920	UnaryOperationExpression	& root		13078	0					
ANR	14921	UnaryOperator	&		13078	0					
ANR	14922	Identifier	root		13078	1					
ANR	14923	Argument	& alloc		13078	3					
ANR	14924	UnaryOperationExpression	& alloc		13078	0					
ANR	14925	UnaryOperator	&		13078	0					
ANR	14926	Identifier	alloc		13078	1					
ANR	14927	Argument	json_integer		13078	4					
ANR	14928	Identifier	json_integer		13078	0					
ANR	14929	GotoStatement	goto e_alloc_failure ;	644:30:19532:19552	13078	1	True				
ANR	14930	Identifier	e_alloc_failure		13078	0					
ANR	14931	IfStatement	if ( ! state . first_pass )		13078	1					
ANR	14932	Condition	! state . first_pass	646:31:19586:19602	13078	0	True				
ANR	14933	UnaryOperationExpression	! state . first_pass		13078	0					
ANR	14934	UnaryOperator	!		13078	0					
ANR	14935	MemberAccess	state . first_pass		13078	1					
ANR	14936	Identifier	state		13078	0					
ANR	14937	Identifier	first_pass		13078	1					
ANR	14938	CompoundStatement		423:27:13595:13595	13078	1					
ANR	14939	WhileStatement	while ( isdigit ( b ) || b == '+' || b == '-' || b == 'e' || b == 'E' || b == '.' )		13078	0					
ANR	14940	Condition	isdigit ( b ) || b == '+' || b == '-' || b == 'e' || b == 'E' || b == '.'	648:37:19671:19781	13078	0	True				
ANR	14941	OrExpression	isdigit ( b ) || b == '+' || b == '-' || b == 'e' || b == 'E' || b == '.'		13078	0		||			
ANR	14942	CallExpression	isdigit ( b )		13078	0					
ANR	14943	Callee	isdigit		13078	0					
ANR	14944	Identifier	isdigit		13078	0					
ANR	14945	ArgumentList	b		13078	1					
ANR	14946	Argument	b		13078	0					
ANR	14947	Identifier	b		13078	0					
ANR	14948	OrExpression	b == '+' || b == '-' || b == 'e' || b == 'E' || b == '.'		13078	1		||			
ANR	14949	EqualityExpression	b == '+'		13078	0		==			
ANR	14950	Identifier	b		13078	0					
ANR	14951	PrimaryExpression	'+'		13078	1					
ANR	14952	OrExpression	b == '-' || b == 'e' || b == 'E' || b == '.'		13078	1		||			
ANR	14953	EqualityExpression	b == '-'		13078	0		==			
ANR	14954	Identifier	b		13078	0					
ANR	14955	PrimaryExpression	'-'		13078	1					
ANR	14956	OrExpression	b == 'e' || b == 'E' || b == '.'		13078	1		||			
ANR	14957	EqualityExpression	b == 'e'		13078	0		==			
ANR	14958	Identifier	b		13078	0					
ANR	14959	PrimaryExpression	'e'		13078	1					
ANR	14960	OrExpression	b == 'E' || b == '.'		13078	1		||			
ANR	14961	EqualityExpression	b == 'E'		13078	0		==			
ANR	14962	Identifier	b		13078	0					
ANR	14963	PrimaryExpression	'E'		13078	1					
ANR	14964	EqualityExpression	b == '.'		13078	1		==			
ANR	14965	Identifier	b		13078	0					
ANR	14966	PrimaryExpression	'.'		13078	1					
ANR	14967	CompoundStatement		426:30:13777:13777	13078	1					
ANR	14968	IfStatement	if ( ( ++ state . ptr ) == end )		13078	0					
ANR	14969	Condition	( ++ state . ptr ) == end	651:38:19854:19874	13078	0	True				
ANR	14970	EqualityExpression	( ++ state . ptr ) == end		13078	0		==			
ANR	14971	UnaryExpression	++ state . ptr		13078	0					
ANR	14972	IncDec	++		13078	0					
ANR	14973	MemberAccess	state . ptr		13078	1					
ANR	14974	Identifier	state		13078	0					
ANR	14975	Identifier	ptr		13078	1					
ANR	14976	Identifier	end		13078	1					
ANR	14977	CompoundStatement		428:33:13873:13873	13078	1					
ANR	14978	ExpressionStatement	b = 0	653:36:19948:19953	13078	0	True				
ANR	14979	AssignmentExpression	b = 0		13078	0		=			
ANR	14980	Identifier	b		13078	0					
ANR	14981	PrimaryExpression	0		13078	1					
ANR	14982	BreakStatement	break ;	654:36:19991:19996	13078	1	True				
ANR	14983	ExpressionStatement	b = * state . ptr	657:33:20067:20081	13078	1	True				
ANR	14984	AssignmentExpression	b = * state . ptr		13078	0		=			
ANR	14985	Identifier	b		13078	0					
ANR	14986	UnaryOperationExpression	* state . ptr		13078	1					
ANR	14987	UnaryOperator	*		13078	0					
ANR	14988	MemberAccess	state . ptr		13078	1					
ANR	14989	Identifier	state		13078	0					
ANR	14990	Identifier	ptr		13078	1					
ANR	14991	ExpressionStatement	flags |= flag_next | flag_reproc	660:30:20146:20178	13078	1	True				
ANR	14992	AssignmentExpression	flags |= flag_next | flag_reproc		13078	0		|=			
ANR	14993	Identifier	flags		13078	0					
ANR	14994	InclusiveOrExpression	flag_next | flag_reproc		13078	1		|			
ANR	14995	Identifier	flag_next		13078	0					
ANR	14996	Identifier	flag_reproc		13078	1					
ANR	14997	BreakStatement	break ;	661:30:20210:20215	13078	2	True				
ANR	14998	ExpressionStatement	flags &= ~ ( flag_num_negative | flag_num_e | flag_num_e_got_sign | flag_num_e_negative | flag_num_zero )	664:27:20274:20460	13078	2	True				
ANR	14999	AssignmentExpression	flags &= ~ ( flag_num_negative | flag_num_e | flag_num_e_got_sign | flag_num_e_negative | flag_num_zero )		13078	0		&=			
ANR	15000	Identifier	flags		13078	0					
ANR	15001	UnaryOperationExpression	~ ( flag_num_negative | flag_num_e | flag_num_e_got_sign | flag_num_e_negative | flag_num_zero )		13078	1					
ANR	15002	UnaryOperator	~		13078	0					
ANR	15003	InclusiveOrExpression	flag_num_negative | flag_num_e | flag_num_e_got_sign | flag_num_e_negative | flag_num_zero		13078	1		|			
ANR	15004	Identifier	flag_num_negative		13078	0					
ANR	15005	InclusiveOrExpression	flag_num_e | flag_num_e_got_sign | flag_num_e_negative | flag_num_zero		13078	1		|			
ANR	15006	Identifier	flag_num_e		13078	0					
ANR	15007	InclusiveOrExpression	flag_num_e_got_sign | flag_num_e_negative | flag_num_zero		13078	1		|			
ANR	15008	Identifier	flag_num_e_got_sign		13078	0					
ANR	15009	InclusiveOrExpression	flag_num_e_negative | flag_num_zero		13078	1		|			
ANR	15010	Identifier	flag_num_e_negative		13078	0					
ANR	15011	Identifier	flag_num_zero		13078	1					
ANR	15012	ExpressionStatement	num_digits = 0	668:27:20490:20504	13078	3	True				
ANR	15013	AssignmentExpression	num_digits = 0		13078	0		=			
ANR	15014	Identifier	num_digits		13078	0					
ANR	15015	PrimaryExpression	0		13078	1					
ANR	15016	ExpressionStatement	num_fraction = 0	669:27:20533:20549	13078	4	True				
ANR	15017	AssignmentExpression	num_fraction = 0		13078	0		=			
ANR	15018	Identifier	num_fraction		13078	0					
ANR	15019	PrimaryExpression	0		13078	1					
ANR	15020	ExpressionStatement	num_e = 0	670:27:20578:20587	13078	5	True				
ANR	15021	AssignmentExpression	num_e = 0		13078	0		=			
ANR	15022	Identifier	num_e		13078	0					
ANR	15023	PrimaryExpression	0		13078	1					
ANR	15024	IfStatement	if ( b != '-' )		13078	6					
ANR	15025	Condition	b != '-'	672:31:20621:20628	13078	0	True				
ANR	15026	EqualityExpression	b != '-'		13078	0		!=			
ANR	15027	Identifier	b		13078	0					
ANR	15028	PrimaryExpression	'-'		13078	1					
ANR	15029	CompoundStatement		449:27:14621:14621	13078	1					
ANR	15030	ExpressionStatement	flags |= flag_reproc	674:30:20690:20710	13078	0	True				
ANR	15031	AssignmentExpression	flags |= flag_reproc		13078	0		|=			
ANR	15032	Identifier	flags		13078	0					
ANR	15033	Identifier	flag_reproc		13078	1					
ANR	15034	BreakStatement	break ;	675:30:20742:20747	13078	1	True				
ANR	15035	ExpressionStatement	flags |= flag_num_negative	678:27:20806:20832	13078	7	True				
ANR	15036	AssignmentExpression	flags |= flag_num_negative		13078	0		|=			
ANR	15037	Identifier	flags		13078	0					
ANR	15038	Identifier	flag_num_negative		13078	1					
ANR	15039	ContinueStatement	continue ;	679:27:20861:20869	13078	8	True				
ANR	15040	ElseStatement	else		13078	0					
ANR	15041	CompoundStatement		458:24:14913:14913	13078	0					
ANR	15042	ExpressionStatement	"sprintf ( error , ""%d:%d: Unexpected %c when seeking value"" , line_and_col , b )"	682:27:20953:21028	13078	0	True				
ANR	15043	CallExpression	"sprintf ( error , ""%d:%d: Unexpected %c when seeking value"" , line_and_col , b )"		13078	0					
ANR	15044	Callee	sprintf		13078	0					
ANR	15045	Identifier	sprintf		13078	0					
ANR	15046	ArgumentList	error		13078	1					
ANR	15047	Argument	error		13078	0					
ANR	15048	Identifier	error		13078	0					
ANR	15049	Argument	"""%d:%d: Unexpected %c when seeking value"""		13078	1					
ANR	15050	PrimaryExpression	"""%d:%d: Unexpected %c when seeking value"""		13078	0					
ANR	15051	Argument	line_and_col		13078	2					
ANR	15052	Identifier	line_and_col		13078	0					
ANR	15053	Argument	b		13078	3					
ANR	15054	Identifier	b		13078	0					
ANR	15055	GotoStatement	goto e_failed ;	683:27:21057:21070	13078	1	True				
ANR	15056	Identifier	e_failed		13078	0					
ANR	15057	ExpressionStatement		685:19:21117:21117	13078	10	True				
ANR	15058	ExpressionStatement		686:13:21132:21132	13078	1	True				
ANR	15059	ElseStatement	else		13078	0					
ANR	15060	CompoundStatement		465:9:15131:15131	13078	0					
ANR	15061	SwitchStatement	switch ( top -> type )		13078	0					
ANR	15062	Condition	top -> type	690:20:21190:21198	13078	0	True				
ANR	15063	PtrMemberAccess	top -> type		13078	0					
ANR	15064	Identifier	top		13078	0					
ANR	15065	Identifier	type		13078	1					
ANR	15066	CompoundStatement		467:12:15176:15176	13078	1					
ANR	15067	Label	case json_object :	692:12:21227:21243	13078	0	True				
ANR	15068	Identifier	json_object		13078	0					
ANR	15069	SwitchStatement	switch ( b )		13078	1					
ANR	15070	Condition	b	694:23:21284:21284	13078	0	True				
ANR	15071	Identifier	b		13078	0					
ANR	15072	CompoundStatement		471:15:15265:15265	13078	1					
ANR	15073	Label	whitespace :	696:18:21322:21332	13078	0	True				
ANR	15074	Identifier	whitespace		13078	0					
ANR	15075	ContinueStatement	continue ;	697:21:21355:21363	13078	1	True				
ANR	15076	Label	"case '""' :"	699:18:21384:21392	13078	2	True				
ANR	15077	IfStatement	if ( flags & flag_need_comma )		13078	3					
ANR	15078	Condition	flags & flag_need_comma	701:25:21420:21442	13078	0	True				
ANR	15079	BitAndExpression	flags & flag_need_comma		13078	0		&			
ANR	15080	Identifier	flags		13078	0					
ANR	15081	Identifier	flag_need_comma		13078	1					
ANR	15082	CompoundStatement		478:21:15429:15429	13078	1					
ANR	15083	ExpressionStatement	"sprintf ( error , ""%d:%d: Expected , before \\"""" , line_and_col )"	702:24:21469:21529	13078	0	True				
ANR	15084	CallExpression	"sprintf ( error , ""%d:%d: Expected , before \\"""" , line_and_col )"		13078	0					
ANR	15085	Callee	sprintf		13078	0					
ANR	15086	Identifier	sprintf		13078	0					
ANR	15087	ArgumentList	error		13078	1					
ANR	15088	Argument	error		13078	0					
ANR	15089	Identifier	error		13078	0					
ANR	15090	Argument	"""%d:%d: Expected , before \\"""""		13078	1					
ANR	15091	PrimaryExpression	"""%d:%d: Expected , before \\"""""		13078	0					
ANR	15092	Argument	line_and_col		13078	2					
ANR	15093	Identifier	line_and_col		13078	0					
ANR	15094	GotoStatement	goto e_failed ;	703:24:21555:21568	13078	1	True				
ANR	15095	Identifier	e_failed		13078	0					
ANR	15096	ExpressionStatement	flags |= flag_string	706:21:21615:21635	13078	4	True				
ANR	15097	AssignmentExpression	flags |= flag_string		13078	0		|=			
ANR	15098	Identifier	flags		13078	0					
ANR	15099	Identifier	flag_string		13078	1					
ANR	15100	ExpressionStatement	string = ( json_char * ) top -> _reserved . object_mem	708:21:21659:21707	13078	5	True				
ANR	15101	AssignmentExpression	string = ( json_char * ) top -> _reserved . object_mem		13078	0		=			
ANR	15102	Identifier	string		13078	0					
ANR	15103	CastExpression	( json_char * ) top -> _reserved . object_mem		13078	1					
ANR	15104	CastTarget	json_char *		13078	0					
ANR	15105	MemberAccess	top -> _reserved . object_mem		13078	1					
ANR	15106	PtrMemberAccess	top -> _reserved		13078	0					
ANR	15107	Identifier	top		13078	0					
ANR	15108	Identifier	_reserved		13078	1					
ANR	15109	Identifier	object_mem		13078	1					
ANR	15110	ExpressionStatement	string_length = 0	709:21:21730:21747	13078	6	True				
ANR	15111	AssignmentExpression	string_length = 0		13078	0		=			
ANR	15112	Identifier	string_length		13078	0					
ANR	15113	PrimaryExpression	0		13078	1					
ANR	15114	BreakStatement	break ;	711:21:21771:21776	13078	7	True				
ANR	15115	Label	case '}' :	713:18:21815:21823	13078	8	True				
ANR	15116	ExpressionStatement	flags = ( flags & ~ flag_need_comma ) | flag_next	715:21:21847:21894	13078	9	True				
ANR	15117	AssignmentExpression	flags = ( flags & ~ flag_need_comma ) | flag_next		13078	0		=			
ANR	15118	Identifier	flags		13078	0					
ANR	15119	InclusiveOrExpression	( flags & ~ flag_need_comma ) | flag_next		13078	1		|			
ANR	15120	BitAndExpression	flags & ~ flag_need_comma		13078	0		&			
ANR	15121	Identifier	flags		13078	0					
ANR	15122	UnaryOperationExpression	~ flag_need_comma		13078	1					
ANR	15123	UnaryOperator	~		13078	0					
ANR	15124	Identifier	flag_need_comma		13078	1					
ANR	15125	Identifier	flag_next		13078	1					
ANR	15126	BreakStatement	break ;	716:21:21917:21922	13078	10	True				
ANR	15127	Label	"case ',' :"	718:18:21943:21951	13078	11	True				
ANR	15128	IfStatement	if ( flags & flag_need_comma )		13078	12					
ANR	15129	Condition	flags & flag_need_comma	720:25:21979:22001	13078	0	True				
ANR	15130	BitAndExpression	flags & flag_need_comma		13078	0		&			
ANR	15131	Identifier	flags		13078	0					
ANR	15132	Identifier	flag_need_comma		13078	1					
ANR	15133	CompoundStatement		497:21:15988:15988	13078	1					
ANR	15134	ExpressionStatement	flags &= ~ flag_need_comma	722:24:22051:22077	13078	0	True				
ANR	15135	AssignmentExpression	flags &= ~ flag_need_comma		13078	0		&=			
ANR	15136	Identifier	flags		13078	0					
ANR	15137	UnaryOperationExpression	~ flag_need_comma		13078	1					
ANR	15138	UnaryOperator	~		13078	0					
ANR	15139	Identifier	flag_need_comma		13078	1					
ANR	15140	BreakStatement	break ;	723:24:22103:22108	13078	1	True				
ANR	15141	Label	default :	726:18:22152:22159	13078	13	True				
ANR	15142	Identifier	default		13078	0					
ANR	15143	ExpressionStatement	"sprintf ( error , ""%d:%d: Unexpected `%c` in object"" , line_and_col , b )"	727:21:22182:22250	13078	14	True				
ANR	15144	CallExpression	"sprintf ( error , ""%d:%d: Unexpected `%c` in object"" , line_and_col , b )"		13078	0					
ANR	15145	Callee	sprintf		13078	0					
ANR	15146	Identifier	sprintf		13078	0					
ANR	15147	ArgumentList	error		13078	1					
ANR	15148	Argument	error		13078	0					
ANR	15149	Identifier	error		13078	0					
ANR	15150	Argument	"""%d:%d: Unexpected `%c` in object"""		13078	1					
ANR	15151	PrimaryExpression	"""%d:%d: Unexpected `%c` in object"""		13078	0					
ANR	15152	Argument	line_and_col		13078	2					
ANR	15153	Identifier	line_and_col		13078	0					
ANR	15154	Argument	b		13078	3					
ANR	15155	Identifier	b		13078	0					
ANR	15156	GotoStatement	goto e_failed ;	728:21:22273:22286	13078	15	True				
ANR	15157	Identifier	e_failed		13078	0					
ANR	15158	ExpressionStatement		729:16:22304:22304	13078	2	True				
ANR	15159	BreakStatement	break ;	731:15:22322:22327	13078	3	True				
ANR	15160	Label	case json_integer :	733:12:22342:22359	13078	4	True				
ANR	15161	Identifier	json_integer		13078	0					
ANR	15162	Label	case json_double :	734:12:22373:22389	13078	5	True				
ANR	15163	Identifier	json_double		13078	0					
ANR	15164	IfStatement	if ( isdigit ( b ) )		13078	6					
ANR	15165	Condition	isdigit ( b )	736:19:22411:22421	13078	0	True				
ANR	15166	CallExpression	isdigit ( b )		13078	0					
ANR	15167	Callee	isdigit		13078	0					
ANR	15168	Identifier	isdigit		13078	0					
ANR	15169	ArgumentList	b		13078	1					
ANR	15170	Argument	b		13078	0					
ANR	15171	Identifier	b		13078	0					
ANR	15172	CompoundStatement		513:15:16402:16402	13078	1					
ANR	15173	ExpressionStatement	++ num_digits	738:18:22459:22472	13078	0	True				
ANR	15174	UnaryExpression	++ num_digits		13078	0					
ANR	15175	IncDec	++		13078	0					
ANR	15176	Identifier	num_digits		13078	1					
ANR	15177	IfStatement	if ( top -> type == json_integer || flags & flag_num_e )		13078	1					
ANR	15178	Condition	top -> type == json_integer || flags & flag_num_e	740:22:22497:22543	13078	0	True				
ANR	15179	OrExpression	top -> type == json_integer || flags & flag_num_e		13078	0		||			
ANR	15180	EqualityExpression	top -> type == json_integer		13078	0		==			
ANR	15181	PtrMemberAccess	top -> type		13078	0					
ANR	15182	Identifier	top		13078	0					
ANR	15183	Identifier	type		13078	1					
ANR	15184	Identifier	json_integer		13078	1					
ANR	15185	BitAndExpression	flags & flag_num_e		13078	1		&			
ANR	15186	Identifier	flags		13078	0					
ANR	15187	Identifier	flag_num_e		13078	1					
ANR	15188	CompoundStatement		517:18:16527:16527	13078	1					
ANR	15189	IfStatement	if ( ! ( flags & flag_num_e ) )		13078	0					
ANR	15190	Condition	! ( flags & flag_num_e )	742:25:22591:22612	13078	0	True				
ANR	15191	UnaryOperationExpression	! ( flags & flag_num_e )		13078	0					
ANR	15192	UnaryOperator	!		13078	0					
ANR	15193	BitAndExpression	flags & flag_num_e		13078	1		&			
ANR	15194	Identifier	flags		13078	0					
ANR	15195	Identifier	flag_num_e		13078	1					
ANR	15196	CompoundStatement		519:21:16599:16599	13078	1					
ANR	15197	IfStatement	if ( flags & flag_num_zero )		13078	0					
ANR	15198	Condition	flags & flag_num_zero	744:28:22666:22686	13078	0	True				
ANR	15199	BitAndExpression	flags & flag_num_zero		13078	0		&			
ANR	15200	Identifier	flags		13078	0					
ANR	15201	Identifier	flag_num_zero		13078	1					
ANR	15202	CompoundStatement		521:24:16676:16676	13078	1					
ANR	15203	ExpressionStatement	"sprintf ( error , ""%d:%d: Unexpected `0` before `%c`"" , line_and_col , b )"	745:27:22716:22785	13078	0	True				
ANR	15204	CallExpression	"sprintf ( error , ""%d:%d: Unexpected `0` before `%c`"" , line_and_col , b )"		13078	0					
ANR	15205	Callee	sprintf		13078	0					
ANR	15206	Identifier	sprintf		13078	0					
ANR	15207	ArgumentList	error		13078	1					
ANR	15208	Argument	error		13078	0					
ANR	15209	Identifier	error		13078	0					
ANR	15210	Argument	"""%d:%d: Unexpected `0` before `%c`"""		13078	1					
ANR	15211	PrimaryExpression	"""%d:%d: Unexpected `0` before `%c`"""		13078	0					
ANR	15212	Argument	line_and_col		13078	2					
ANR	15213	Identifier	line_and_col		13078	0					
ANR	15214	Argument	b		13078	3					
ANR	15215	Identifier	b		13078	0					
ANR	15216	GotoStatement	goto e_failed ;	746:27:22814:22827	13078	1	True				
ANR	15217	Identifier	e_failed		13078	0					
ANR	15218	IfStatement	if ( num_digits == 1 && b == '0' )		13078	1					
ANR	15219	Condition	num_digits == 1 && b == '0'	749:28:22884:22910	13078	0	True				
ANR	15220	AndExpression	num_digits == 1 && b == '0'		13078	0		&&			
ANR	15221	EqualityExpression	num_digits == 1		13078	0		==			
ANR	15222	Identifier	num_digits		13078	0					
ANR	15223	PrimaryExpression	1		13078	1					
ANR	15224	EqualityExpression	b == '0'		13078	1		==			
ANR	15225	Identifier	b		13078	0					
ANR	15226	PrimaryExpression	'0'		13078	1					
ANR	15227	ExpressionStatement	flags |= flag_num_zero	750:27:22940:22962	13078	1	True				
ANR	15228	AssignmentExpression	flags |= flag_num_zero		13078	0		|=			
ANR	15229	Identifier	flags		13078	0					
ANR	15230	Identifier	flag_num_zero		13078	1					
ANR	15231	ElseStatement	else		13078	0					
ANR	15232	CompoundStatement		529:21:16997:16997	13078	0					
ANR	15233	ExpressionStatement	flags |= flag_num_e_got_sign	754:24:23060:23088	13078	0	True				
ANR	15234	AssignmentExpression	flags |= flag_num_e_got_sign		13078	0		|=			
ANR	15235	Identifier	flags		13078	0					
ANR	15236	Identifier	flag_num_e_got_sign		13078	1					
ANR	15237	ExpressionStatement	num_e = ( num_e * 10 ) + ( b - '0' )	755:24:23114:23146	13078	1	True				
ANR	15238	AssignmentExpression	num_e = ( num_e * 10 ) + ( b - '0' )		13078	0		=			
ANR	15239	Identifier	num_e		13078	0					
ANR	15240	AdditiveExpression	( num_e * 10 ) + ( b - '0' )		13078	1		+			
ANR	15241	MultiplicativeExpression	num_e * 10		13078	0		*			
ANR	15242	Identifier	num_e		13078	0					
ANR	15243	PrimaryExpression	10		13078	1					
ANR	15244	AdditiveExpression	b - '0'		13078	1		-			
ANR	15245	Identifier	b		13078	0					
ANR	15246	PrimaryExpression	'0'		13078	1					
ANR	15247	ContinueStatement	continue ;	756:24:23172:23180	13078	2	True				
ANR	15248	ExpressionStatement	top -> u . integer = ( top -> u . integer * 10 ) + ( b - '0' )	759:21:23227:23277	13078	1	True				
ANR	15249	AssignmentExpression	top -> u . integer = ( top -> u . integer * 10 ) + ( b - '0' )		13078	0		=			
ANR	15250	MemberAccess	top -> u . integer		13078	0					
ANR	15251	PtrMemberAccess	top -> u		13078	0					
ANR	15252	Identifier	top		13078	0					
ANR	15253	Identifier	u		13078	1					
ANR	15254	Identifier	integer		13078	1					
ANR	15255	AdditiveExpression	( top -> u . integer * 10 ) + ( b - '0' )		13078	1		+			
ANR	15256	MultiplicativeExpression	top -> u . integer * 10		13078	0		*			
ANR	15257	MemberAccess	top -> u . integer		13078	0					
ANR	15258	PtrMemberAccess	top -> u		13078	0					
ANR	15259	Identifier	top		13078	0					
ANR	15260	Identifier	u		13078	1					
ANR	15261	Identifier	integer		13078	1					
ANR	15262	PrimaryExpression	10		13078	1					
ANR	15263	AdditiveExpression	b - '0'		13078	1		-			
ANR	15264	Identifier	b		13078	0					
ANR	15265	PrimaryExpression	'0'		13078	1					
ANR	15266	ContinueStatement	continue ;	760:21:23300:23308	13078	2	True				
ANR	15267	ExpressionStatement	num_fraction = ( num_fraction * 10 ) + ( b - '0' )	763:18:23349:23395	13078	2	True				
ANR	15268	AssignmentExpression	num_fraction = ( num_fraction * 10 ) + ( b - '0' )		13078	0		=			
ANR	15269	Identifier	num_fraction		13078	0					
ANR	15270	AdditiveExpression	( num_fraction * 10 ) + ( b - '0' )		13078	1		+			
ANR	15271	MultiplicativeExpression	num_fraction * 10		13078	0		*			
ANR	15272	Identifier	num_fraction		13078	0					
ANR	15273	PrimaryExpression	10		13078	1					
ANR	15274	AdditiveExpression	b - '0'		13078	1		-			
ANR	15275	Identifier	b		13078	0					
ANR	15276	PrimaryExpression	'0'		13078	1					
ANR	15277	ContinueStatement	continue ;	764:18:23415:23423	13078	3	True				
ANR	15278	IfStatement	if ( b == '+' || b == '-' )		13078	7					
ANR	15279	Condition	b == '+' || b == '-'	767:19:23462:23481	13078	0	True				
ANR	15280	OrExpression	b == '+' || b == '-'		13078	0		||			
ANR	15281	EqualityExpression	b == '+'		13078	0		==			
ANR	15282	Identifier	b		13078	0					
ANR	15283	PrimaryExpression	'+'		13078	1					
ANR	15284	EqualityExpression	b == '-'		13078	1		==			
ANR	15285	Identifier	b		13078	0					
ANR	15286	PrimaryExpression	'-'		13078	1					
ANR	15287	CompoundStatement		544:15:17462:17462	13078	1					
ANR	15288	IfStatement	if ( ( flags & flag_num_e ) && ! ( flags & flag_num_e_got_sign ) )		13078	0					
ANR	15289	Condition	( flags & flag_num_e ) && ! ( flags & flag_num_e_got_sign )	769:23:23524:23577	13078	0	True				
ANR	15290	AndExpression	( flags & flag_num_e ) && ! ( flags & flag_num_e_got_sign )		13078	0		&&			
ANR	15291	BitAndExpression	flags & flag_num_e		13078	0		&			
ANR	15292	Identifier	flags		13078	0					
ANR	15293	Identifier	flag_num_e		13078	1					
ANR	15294	UnaryOperationExpression	! ( flags & flag_num_e_got_sign )		13078	1					
ANR	15295	UnaryOperator	!		13078	0					
ANR	15296	BitAndExpression	flags & flag_num_e_got_sign		13078	1		&			
ANR	15297	Identifier	flags		13078	0					
ANR	15298	Identifier	flag_num_e_got_sign		13078	1					
ANR	15299	CompoundStatement		546:18:17561:17561	13078	1					
ANR	15300	ExpressionStatement	flags |= flag_num_e_got_sign	771:21:23621:23649	13078	0	True				
ANR	15301	AssignmentExpression	flags |= flag_num_e_got_sign		13078	0		|=			
ANR	15302	Identifier	flags		13078	0					
ANR	15303	Identifier	flag_num_e_got_sign		13078	1					
ANR	15304	IfStatement	if ( b == '-' )		13078	1					
ANR	15305	Condition	b == '-'	773:25:23677:23684	13078	0	True				
ANR	15306	EqualityExpression	b == '-'		13078	0		==			
ANR	15307	Identifier	b		13078	0					
ANR	15308	PrimaryExpression	'-'		13078	1					
ANR	15309	ExpressionStatement	flags |= flag_num_e_negative	774:24:23711:23739	13078	1	True				
ANR	15310	AssignmentExpression	flags |= flag_num_e_negative		13078	0		|=			
ANR	15311	Identifier	flags		13078	0					
ANR	15312	Identifier	flag_num_e_negative		13078	1					
ANR	15313	ContinueStatement	continue ;	776:21:23763:23771	13078	2	True				
ANR	15314	ElseStatement	else		13078	0					
ANR	15315	IfStatement	if ( b == '.' && top -> type == json_integer )		13078	0					
ANR	15316	Condition	b == '.' && top -> type == json_integer	779:24:23834:23870	13078	0	True				
ANR	15317	AndExpression	b == '.' && top -> type == json_integer		13078	0		&&			
ANR	15318	EqualityExpression	b == '.'		13078	0		==			
ANR	15319	Identifier	b		13078	0					
ANR	15320	PrimaryExpression	'.'		13078	1					
ANR	15321	EqualityExpression	top -> type == json_integer		13078	1		==			
ANR	15322	PtrMemberAccess	top -> type		13078	0					
ANR	15323	Identifier	top		13078	0					
ANR	15324	Identifier	type		13078	1					
ANR	15325	Identifier	json_integer		13078	1					
ANR	15326	CompoundStatement		556:15:17851:17851	13078	1					
ANR	15327	IfStatement	if ( ! num_digits )		13078	0					
ANR	15328	Condition	! num_digits	781:22:23912:23922	13078	0	True				
ANR	15329	UnaryOperationExpression	! num_digits		13078	0					
ANR	15330	UnaryOperator	!		13078	0					
ANR	15331	Identifier	num_digits		13078	1					
ANR	15332	CompoundStatement		558:18:17906:17906	13078	1					
ANR	15333	ExpressionStatement	"sprintf ( error , ""%d:%d: Expected digit before `.`"" , line_and_col )"	782:21:23946:24011	13078	0	True				
ANR	15334	CallExpression	"sprintf ( error , ""%d:%d: Expected digit before `.`"" , line_and_col )"		13078	0					
ANR	15335	Callee	sprintf		13078	0					
ANR	15336	Identifier	sprintf		13078	0					
ANR	15337	ArgumentList	error		13078	1					
ANR	15338	Argument	error		13078	0					
ANR	15339	Identifier	error		13078	0					
ANR	15340	Argument	"""%d:%d: Expected digit before `.`"""		13078	1					
ANR	15341	PrimaryExpression	"""%d:%d: Expected digit before `.`"""		13078	0					
ANR	15342	Argument	line_and_col		13078	2					
ANR	15343	Identifier	line_and_col		13078	0					
ANR	15344	GotoStatement	goto e_failed ;	783:21:24034:24047	13078	1	True				
ANR	15345	Identifier	e_failed		13078	0					
ANR	15346	ExpressionStatement	top -> type = json_double	786:18:24088:24111	13078	1	True				
ANR	15347	AssignmentExpression	top -> type = json_double		13078	0		=			
ANR	15348	PtrMemberAccess	top -> type		13078	0					
ANR	15349	Identifier	top		13078	0					
ANR	15350	Identifier	type		13078	1					
ANR	15351	Identifier	json_double		13078	1					
ANR	15352	ExpressionStatement	top -> u . dbl = ( double ) top -> u . integer	787:18:24131:24167	13078	2	True				
ANR	15353	AssignmentExpression	top -> u . dbl = ( double ) top -> u . integer		13078	0		=			
ANR	15354	MemberAccess	top -> u . dbl		13078	0					
ANR	15355	PtrMemberAccess	top -> u		13078	0					
ANR	15356	Identifier	top		13078	0					
ANR	15357	Identifier	u		13078	1					
ANR	15358	Identifier	dbl		13078	1					
ANR	15359	CastExpression	( double ) top -> u . integer		13078	1					
ANR	15360	CastTarget	double		13078	0					
ANR	15361	MemberAccess	top -> u . integer		13078	1					
ANR	15362	PtrMemberAccess	top -> u		13078	0					
ANR	15363	Identifier	top		13078	0					
ANR	15364	Identifier	u		13078	1					
ANR	15365	Identifier	integer		13078	1					
ANR	15366	ExpressionStatement	num_digits = 0	789:18:24188:24202	13078	3	True				
ANR	15367	AssignmentExpression	num_digits = 0		13078	0		=			
ANR	15368	Identifier	num_digits		13078	0					
ANR	15369	PrimaryExpression	0		13078	1					
ANR	15370	ContinueStatement	continue ;	790:18:24222:24230	13078	4	True				
ANR	15371	IfStatement	if ( ! ( flags & flag_num_e ) )		13078	8					
ANR	15372	Condition	! ( flags & flag_num_e )	793:19:24269:24290	13078	0	True				
ANR	15373	UnaryOperationExpression	! ( flags & flag_num_e )		13078	0					
ANR	15374	UnaryOperator	!		13078	0					
ANR	15375	BitAndExpression	flags & flag_num_e		13078	1		&			
ANR	15376	Identifier	flags		13078	0					
ANR	15377	Identifier	flag_num_e		13078	1					
ANR	15378	CompoundStatement		570:15:18271:18271	13078	1					
ANR	15379	IfStatement	if ( top -> type == json_double )		13078	0					
ANR	15380	Condition	top -> type == json_double	795:22:24332:24355	13078	0	True				
ANR	15381	EqualityExpression	top -> type == json_double		13078	0		==			
ANR	15382	PtrMemberAccess	top -> type		13078	0					
ANR	15383	Identifier	top		13078	0					
ANR	15384	Identifier	type		13078	1					
ANR	15385	Identifier	json_double		13078	1					
ANR	15386	CompoundStatement		572:18:18339:18339	13078	1					
ANR	15387	IfStatement	if ( ! num_digits )		13078	0					
ANR	15388	Condition	! num_digits	797:25:24403:24413	13078	0	True				
ANR	15389	UnaryOperationExpression	! num_digits		13078	0					
ANR	15390	UnaryOperator	!		13078	0					
ANR	15391	Identifier	num_digits		13078	1					
ANR	15392	CompoundStatement		574:21:18400:18400	13078	1					
ANR	15393	ExpressionStatement	"sprintf ( error , ""%d:%d: Expected digit after `.`"" , line_and_col )"	798:24:24440:24504	13078	0	True				
ANR	15394	CallExpression	"sprintf ( error , ""%d:%d: Expected digit after `.`"" , line_and_col )"		13078	0					
ANR	15395	Callee	sprintf		13078	0					
ANR	15396	Identifier	sprintf		13078	0					
ANR	15397	ArgumentList	error		13078	1					
ANR	15398	Argument	error		13078	0					
ANR	15399	Identifier	error		13078	0					
ANR	15400	Argument	"""%d:%d: Expected digit after `.`"""		13078	1					
ANR	15401	PrimaryExpression	"""%d:%d: Expected digit after `.`"""		13078	0					
ANR	15402	Argument	line_and_col		13078	2					
ANR	15403	Identifier	line_and_col		13078	0					
ANR	15404	GotoStatement	goto e_failed ;	799:24:24530:24543	13078	1	True				
ANR	15405	Identifier	e_failed		13078	0					
ANR	15406	ExpressionStatement	"top -> u . dbl += ( ( double ) num_fraction ) / ( pow ( 10.0 , ( double ) num_digits ) )"	802:21:24590:24663	13078	1	True				
ANR	15407	AssignmentExpression	"top -> u . dbl += ( ( double ) num_fraction ) / ( pow ( 10.0 , ( double ) num_digits ) )"		13078	0		+=			
ANR	15408	MemberAccess	top -> u . dbl		13078	0					
ANR	15409	PtrMemberAccess	top -> u		13078	0					
ANR	15410	Identifier	top		13078	0					
ANR	15411	Identifier	u		13078	1					
ANR	15412	Identifier	dbl		13078	1					
ANR	15413	MultiplicativeExpression	"( ( double ) num_fraction ) / ( pow ( 10.0 , ( double ) num_digits ) )"		13078	1		/			
ANR	15414	CastExpression	( double ) num_fraction		13078	0					
ANR	15415	CastTarget	double		13078	0					
ANR	15416	Identifier	num_fraction		13078	1					
ANR	15417	CallExpression	"pow ( 10.0 , ( double ) num_digits )"		13078	1					
ANR	15418	Callee	pow		13078	0					
ANR	15419	Identifier	pow		13078	0					
ANR	15420	ArgumentList	10.0		13078	1					
ANR	15421	Argument	10.0		13078	0					
ANR	15422	PrimaryExpression	10.0		13078	0					
ANR	15423	Argument	( double ) num_digits		13078	1					
ANR	15424	CastExpression	( double ) num_digits		13078	0					
ANR	15425	CastTarget	double		13078	0					
ANR	15426	Identifier	num_digits		13078	1					
ANR	15427	IfStatement	if ( b == 'e' || b == 'E' )		13078	1					
ANR	15428	Condition	b == 'e' || b == 'E'	805:22:24708:24727	13078	0	True				
ANR	15429	OrExpression	b == 'e' || b == 'E'		13078	0		||			
ANR	15430	EqualityExpression	b == 'e'		13078	0		==			
ANR	15431	Identifier	b		13078	0					
ANR	15432	PrimaryExpression	'e'		13078	1					
ANR	15433	EqualityExpression	b == 'E'		13078	1		==			
ANR	15434	Identifier	b		13078	0					
ANR	15435	PrimaryExpression	'E'		13078	1					
ANR	15436	CompoundStatement		582:18:18711:18711	13078	1					
ANR	15437	ExpressionStatement	flags |= flag_num_e	807:21:24771:24790	13078	0	True				
ANR	15438	AssignmentExpression	flags |= flag_num_e		13078	0		|=			
ANR	15439	Identifier	flags		13078	0					
ANR	15440	Identifier	flag_num_e		13078	1					
ANR	15441	IfStatement	if ( top -> type == json_integer )		13078	1					
ANR	15442	Condition	top -> type == json_integer	809:25:24818:24842	13078	0	True				
ANR	15443	EqualityExpression	top -> type == json_integer		13078	0		==			
ANR	15444	PtrMemberAccess	top -> type		13078	0					
ANR	15445	Identifier	top		13078	0					
ANR	15446	Identifier	type		13078	1					
ANR	15447	Identifier	json_integer		13078	1					
ANR	15448	CompoundStatement		586:21:18829:18829	13078	1					
ANR	15449	ExpressionStatement	top -> type = json_double	811:24:24892:24915	13078	0	True				
ANR	15450	AssignmentExpression	top -> type = json_double		13078	0		=			
ANR	15451	PtrMemberAccess	top -> type		13078	0					
ANR	15452	Identifier	top		13078	0					
ANR	15453	Identifier	type		13078	1					
ANR	15454	Identifier	json_double		13078	1					
ANR	15455	ExpressionStatement	top -> u . dbl = ( double ) top -> u . integer	812:24:24941:24977	13078	1	True				
ANR	15456	AssignmentExpression	top -> u . dbl = ( double ) top -> u . integer		13078	0		=			
ANR	15457	MemberAccess	top -> u . dbl		13078	0					
ANR	15458	PtrMemberAccess	top -> u		13078	0					
ANR	15459	Identifier	top		13078	0					
ANR	15460	Identifier	u		13078	1					
ANR	15461	Identifier	dbl		13078	1					
ANR	15462	CastExpression	( double ) top -> u . integer		13078	1					
ANR	15463	CastTarget	double		13078	0					
ANR	15464	MemberAccess	top -> u . integer		13078	1					
ANR	15465	PtrMemberAccess	top -> u		13078	0					
ANR	15466	Identifier	top		13078	0					
ANR	15467	Identifier	u		13078	1					
ANR	15468	Identifier	integer		13078	1					
ANR	15469	ExpressionStatement	num_digits = 0	815:21:25024:25038	13078	2	True				
ANR	15470	AssignmentExpression	num_digits = 0		13078	0		=			
ANR	15471	Identifier	num_digits		13078	0					
ANR	15472	PrimaryExpression	0		13078	1					
ANR	15473	ExpressionStatement	flags &= ~ flag_num_zero	816:21:25061:25085	13078	3	True				
ANR	15474	AssignmentExpression	flags &= ~ flag_num_zero		13078	0		&=			
ANR	15475	Identifier	flags		13078	0					
ANR	15476	UnaryOperationExpression	~ flag_num_zero		13078	1					
ANR	15477	UnaryOperator	~		13078	0					
ANR	15478	Identifier	flag_num_zero		13078	1					
ANR	15479	ContinueStatement	continue ;	818:21:25109:25117	13078	4	True				
ANR	15480	ElseStatement	else		13078	0					
ANR	15481	CompoundStatement		598:15:19154:19154	13078	0					
ANR	15482	IfStatement	if ( ! num_digits )		13078	0					
ANR	15483	Condition	! num_digits	823:22:25215:25225	13078	0	True				
ANR	15484	UnaryOperationExpression	! num_digits		13078	0					
ANR	15485	UnaryOperator	!		13078	0					
ANR	15486	Identifier	num_digits		13078	1					
ANR	15487	CompoundStatement		600:18:19209:19209	13078	1					
ANR	15488	ExpressionStatement	"sprintf ( error , ""%d:%d: Expected digit after `e`"" , line_and_col )"	824:21:25249:25313	13078	0	True				
ANR	15489	CallExpression	"sprintf ( error , ""%d:%d: Expected digit after `e`"" , line_and_col )"		13078	0					
ANR	15490	Callee	sprintf		13078	0					
ANR	15491	Identifier	sprintf		13078	0					
ANR	15492	ArgumentList	error		13078	1					
ANR	15493	Argument	error		13078	0					
ANR	15494	Identifier	error		13078	0					
ANR	15495	Argument	"""%d:%d: Expected digit after `e`"""		13078	1					
ANR	15496	PrimaryExpression	"""%d:%d: Expected digit after `e`"""		13078	0					
ANR	15497	Argument	line_and_col		13078	2					
ANR	15498	Identifier	line_and_col		13078	0					
ANR	15499	GotoStatement	goto e_failed ;	825:21:25336:25349	13078	1	True				
ANR	15500	Identifier	e_failed		13078	0					
ANR	15501	ExpressionStatement	"top -> u . dbl *= pow ( 10.0 , ( double ) ( flags & flag_num_e_negative ? - num_e : num_e ) )"	828:18:25390:25494	13078	1	True				
ANR	15502	AssignmentExpression	"top -> u . dbl *= pow ( 10.0 , ( double ) ( flags & flag_num_e_negative ? - num_e : num_e ) )"		13078	0		*=			
ANR	15503	MemberAccess	top -> u . dbl		13078	0					
ANR	15504	PtrMemberAccess	top -> u		13078	0					
ANR	15505	Identifier	top		13078	0					
ANR	15506	Identifier	u		13078	1					
ANR	15507	Identifier	dbl		13078	1					
ANR	15508	CallExpression	"pow ( 10.0 , ( double ) ( flags & flag_num_e_negative ? - num_e : num_e ) )"		13078	1					
ANR	15509	Callee	pow		13078	0					
ANR	15510	Identifier	pow		13078	0					
ANR	15511	ArgumentList	10.0		13078	1					
ANR	15512	Argument	10.0		13078	0					
ANR	15513	PrimaryExpression	10.0		13078	0					
ANR	15514	Argument	( double ) ( flags & flag_num_e_negative ? - num_e : num_e )		13078	1					
ANR	15515	CastExpression	( double ) ( flags & flag_num_e_negative ? - num_e : num_e )		13078	0					
ANR	15516	CastTarget	double		13078	0					
ANR	15517	ConditionalExpression	flags & flag_num_e_negative ? - num_e : num_e		13078	1					
ANR	15518	Condition	flags & flag_num_e_negative		13078	0					
ANR	15519	BitAndExpression	flags & flag_num_e_negative		13078	0		&			
ANR	15520	Identifier	flags		13078	0					
ANR	15521	Identifier	flag_num_e_negative		13078	1					
ANR	15522	UnaryOperationExpression	- num_e		13078	1					
ANR	15523	UnaryOperator	-		13078	0					
ANR	15524	Identifier	num_e		13078	1					
ANR	15525	Identifier	num_e		13078	2					
ANR	15526	IfStatement	if ( flags & flag_num_negative )		13078	9					
ANR	15527	Condition	flags & flag_num_negative	832:19:25533:25557	13078	0	True				
ANR	15528	BitAndExpression	flags & flag_num_negative		13078	0		&			
ANR	15529	Identifier	flags		13078	0					
ANR	15530	Identifier	flag_num_negative		13078	1					
ANR	15531	CompoundStatement		609:15:19538:19538	13078	1					
ANR	15532	IfStatement	if ( top -> type == json_integer )		13078	0					
ANR	15533	Condition	top -> type == json_integer	834:22:25599:25623	13078	0	True				
ANR	15534	EqualityExpression	top -> type == json_integer		13078	0		==			
ANR	15535	PtrMemberAccess	top -> type		13078	0					
ANR	15536	Identifier	top		13078	0					
ANR	15537	Identifier	type		13078	1					
ANR	15538	Identifier	json_integer		13078	1					
ANR	15539	ExpressionStatement	top -> u . integer = - top -> u . integer	835:21:25647:25680	13078	1	True				
ANR	15540	AssignmentExpression	top -> u . integer = - top -> u . integer		13078	0		=			
ANR	15541	MemberAccess	top -> u . integer		13078	0					
ANR	15542	PtrMemberAccess	top -> u		13078	0					
ANR	15543	Identifier	top		13078	0					
ANR	15544	Identifier	u		13078	1					
ANR	15545	Identifier	integer		13078	1					
ANR	15546	UnaryOperationExpression	- top -> u . integer		13078	1					
ANR	15547	UnaryOperator	-		13078	0					
ANR	15548	MemberAccess	top -> u . integer		13078	1					
ANR	15549	PtrMemberAccess	top -> u		13078	0					
ANR	15550	Identifier	top		13078	0					
ANR	15551	Identifier	u		13078	1					
ANR	15552	Identifier	integer		13078	1					
ANR	15553	ElseStatement	else		13078	0					
ANR	15554	ExpressionStatement	top -> u . dbl = - top -> u . dbl	837:21:25726:25751	13078	0	True				
ANR	15555	AssignmentExpression	top -> u . dbl = - top -> u . dbl		13078	0		=			
ANR	15556	MemberAccess	top -> u . dbl		13078	0					
ANR	15557	PtrMemberAccess	top -> u		13078	0					
ANR	15558	Identifier	top		13078	0					
ANR	15559	Identifier	u		13078	1					
ANR	15560	Identifier	dbl		13078	1					
ANR	15561	UnaryOperationExpression	- top -> u . dbl		13078	1					
ANR	15562	UnaryOperator	-		13078	0					
ANR	15563	MemberAccess	top -> u . dbl		13078	1					
ANR	15564	PtrMemberAccess	top -> u		13078	0					
ANR	15565	Identifier	top		13078	0					
ANR	15566	Identifier	u		13078	1					
ANR	15567	Identifier	dbl		13078	1					
ANR	15568	ExpressionStatement	flags |= flag_next | flag_reproc	840:15:25786:25818	13078	10	True				
ANR	15569	AssignmentExpression	flags |= flag_next | flag_reproc		13078	0		|=			
ANR	15570	Identifier	flags		13078	0					
ANR	15571	InclusiveOrExpression	flag_next | flag_reproc		13078	1		|			
ANR	15572	Identifier	flag_next		13078	0					
ANR	15573	Identifier	flag_reproc		13078	1					
ANR	15574	BreakStatement	break ;	841:15:25835:25840	13078	11	True				
ANR	15575	Label	default :	843:12:25855:25862	13078	12	True				
ANR	15576	Identifier	default		13078	0					
ANR	15577	BreakStatement	break ;	844:15:25879:25884	13078	13	True				
ANR	15578	ExpressionStatement		845:13:25899:25899	13078	1	True				
ANR	15579	IfStatement	if ( flags & flag_reproc )		13078	5					
ANR	15580	Condition	flags & flag_reproc	848:13:25926:25944	13078	0	True				
ANR	15581	BitAndExpression	flags & flag_reproc		13078	0		&			
ANR	15582	Identifier	flags		13078	0					
ANR	15583	Identifier	flag_reproc		13078	1					
ANR	15584	CompoundStatement		625:9:19919:19919	13078	1					
ANR	15585	ExpressionStatement	flags &= ~ flag_reproc	850:12:25970:25992	13078	0	True				
ANR	15586	AssignmentExpression	flags &= ~ flag_reproc		13078	0		&=			
ANR	15587	Identifier	flags		13078	0					
ANR	15588	UnaryOperationExpression	~ flag_reproc		13078	1					
ANR	15589	UnaryOperator	~		13078	0					
ANR	15590	Identifier	flag_reproc		13078	1					
ANR	15591	ExpressionStatement	-- state . ptr	851:12:26006:26018	13078	1	True				
ANR	15592	UnaryExpression	-- state . ptr		13078	0					
ANR	15593	IncDec	--		13078	0					
ANR	15594	MemberAccess	state . ptr		13078	1					
ANR	15595	Identifier	state		13078	0					
ANR	15596	Identifier	ptr		13078	1					
ANR	15597	IfStatement	if ( flags & flag_next )		13078	6					
ANR	15598	Condition	flags & flag_next	854:13:26045:26061	13078	0	True				
ANR	15599	BitAndExpression	flags & flag_next		13078	0		&			
ANR	15600	Identifier	flags		13078	0					
ANR	15601	Identifier	flag_next		13078	1					
ANR	15602	CompoundStatement		631:9:20036:20036	13078	1					
ANR	15603	ExpressionStatement	flags = ( flags & ~ flag_next ) | flag_need_comma	856:12:26087:26134	13078	0	True				
ANR	15604	AssignmentExpression	flags = ( flags & ~ flag_next ) | flag_need_comma		13078	0		=			
ANR	15605	Identifier	flags		13078	0					
ANR	15606	InclusiveOrExpression	( flags & ~ flag_next ) | flag_need_comma		13078	1		|			
ANR	15607	BitAndExpression	flags & ~ flag_next		13078	0		&			
ANR	15608	Identifier	flags		13078	0					
ANR	15609	UnaryOperationExpression	~ flag_next		13078	1					
ANR	15610	UnaryOperator	~		13078	0					
ANR	15611	Identifier	flag_next		13078	1					
ANR	15612	Identifier	flag_need_comma		13078	1					
ANR	15613	IfStatement	if ( ! top -> parent )		13078	1					
ANR	15614	Condition	! top -> parent	858:16:26153:26164	13078	0	True				
ANR	15615	UnaryOperationExpression	! top -> parent		13078	0					
ANR	15616	UnaryOperator	!		13078	0					
ANR	15617	PtrMemberAccess	top -> parent		13078	1					
ANR	15618	Identifier	top		13078	0					
ANR	15619	Identifier	parent		13078	1					
ANR	15620	CompoundStatement		635:12:20142:20142	13078	1					
ANR	15621	ExpressionStatement	flags |= flag_done	862:15:26234:26252	13078	0	True				
ANR	15622	AssignmentExpression	flags |= flag_done		13078	0		|=			
ANR	15623	Identifier	flags		13078	0					
ANR	15624	Identifier	flag_done		13078	1					
ANR	15625	ContinueStatement	continue ;	863:15:26269:26277	13078	1	True				
ANR	15626	IfStatement	if ( top -> parent -> type == json_array )		13078	2					
ANR	15627	Condition	top -> parent -> type == json_array	866:16:26310:26340	13078	0	True				
ANR	15628	EqualityExpression	top -> parent -> type == json_array		13078	0		==			
ANR	15629	PtrMemberAccess	top -> parent -> type		13078	0					
ANR	15630	PtrMemberAccess	top -> parent		13078	0					
ANR	15631	Identifier	top		13078	0					
ANR	15632	Identifier	parent		13078	1					
ANR	15633	Identifier	type		13078	1					
ANR	15634	Identifier	json_array		13078	1					
ANR	15635	ExpressionStatement	flags |= flag_seek_value	867:15:26358:26382	13078	1	True				
ANR	15636	AssignmentExpression	flags |= flag_seek_value		13078	0		|=			
ANR	15637	Identifier	flags		13078	0					
ANR	15638	Identifier	flag_seek_value		13078	1					
ANR	15639	IfStatement	if ( ! state . first_pass )		13078	3					
ANR	15640	Condition	! state . first_pass	869:16:26416:26432	13078	0	True				
ANR	15641	UnaryOperationExpression	! state . first_pass		13078	0					
ANR	15642	UnaryOperator	!		13078	0					
ANR	15643	MemberAccess	state . first_pass		13078	1					
ANR	15644	Identifier	state		13078	0					
ANR	15645	Identifier	first_pass		13078	1					
ANR	15646	CompoundStatement		647:15:20427:20460	13078	1					
ANR	15647	IdentifierDeclStatement	json_value * parent = top -> parent ;	871:15:26464:26497	13078	0	True				
ANR	15648	IdentifierDecl	* parent = top -> parent		13078	0					
ANR	15649	IdentifierDeclType	json_value *		13078	0					
ANR	15650	Identifier	parent		13078	1					
ANR	15651	AssignmentExpression	* parent = top -> parent		13078	2		=			
ANR	15652	Identifier	parent		13078	0					
ANR	15653	PtrMemberAccess	top -> parent		13078	1					
ANR	15654	Identifier	top		13078	0					
ANR	15655	Identifier	parent		13078	1					
ANR	15656	SwitchStatement	switch ( parent -> type )		13078	1					
ANR	15657	Condition	parent -> type	873:23:26523:26534	13078	0	True				
ANR	15658	PtrMemberAccess	parent -> type		13078	0					
ANR	15659	Identifier	parent		13078	0					
ANR	15660	Identifier	type		13078	1					
ANR	15661	CompoundStatement		650:15:20515:20515	13078	1					
ANR	15662	Label	case json_object :	875:18:26572:26588	13078	0	True				
ANR	15663	Identifier	json_object		13078	0					
ANR	15664	ExpressionStatement	parent -> u . object . values [ parent -> u . object . length ] . value = top	877:21:26612:26697	13078	1	True				
ANR	15665	AssignmentExpression	parent -> u . object . values [ parent -> u . object . length ] . value = top		13078	0		=			
ANR	15666	MemberAccess	parent -> u . object . values [ parent -> u . object . length ] . value		13078	0					
ANR	15667	ArrayIndexing	parent -> u . object . values [ parent -> u . object . length ]		13078	0					
ANR	15668	MemberAccess	parent -> u . object . values		13078	0					
ANR	15669	MemberAccess	parent -> u . object		13078	0					
ANR	15670	PtrMemberAccess	parent -> u		13078	0					
ANR	15671	Identifier	parent		13078	0					
ANR	15672	Identifier	u		13078	1					
ANR	15673	Identifier	object		13078	1					
ANR	15674	Identifier	values		13078	1					
ANR	15675	MemberAccess	parent -> u . object . length		13078	1					
ANR	15676	MemberAccess	parent -> u . object		13078	0					
ANR	15677	PtrMemberAccess	parent -> u		13078	0					
ANR	15678	Identifier	parent		13078	0					
ANR	15679	Identifier	u		13078	1					
ANR	15680	Identifier	object		13078	1					
ANR	15681	Identifier	length		13078	1					
ANR	15682	Identifier	value		13078	1					
ANR	15683	Identifier	top		13078	1					
ANR	15684	BreakStatement	break ;	880:21:26721:26726	13078	2	True				
ANR	15685	Label	case json_array :	882:18:26747:26762	13078	3	True				
ANR	15686	Identifier	json_array		13078	0					
ANR	15687	ExpressionStatement	parent -> u . array . values [ parent -> u . array . length ] = top	884:21:26786:26866	13078	4	True				
ANR	15688	AssignmentExpression	parent -> u . array . values [ parent -> u . array . length ] = top		13078	0		=			
ANR	15689	ArrayIndexing	parent -> u . array . values [ parent -> u . array . length ]		13078	0					
ANR	15690	MemberAccess	parent -> u . array . values		13078	0					
ANR	15691	MemberAccess	parent -> u . array		13078	0					
ANR	15692	PtrMemberAccess	parent -> u		13078	0					
ANR	15693	Identifier	parent		13078	0					
ANR	15694	Identifier	u		13078	1					
ANR	15695	Identifier	array		13078	1					
ANR	15696	Identifier	values		13078	1					
ANR	15697	MemberAccess	parent -> u . array . length		13078	1					
ANR	15698	MemberAccess	parent -> u . array		13078	0					
ANR	15699	PtrMemberAccess	parent -> u		13078	0					
ANR	15700	Identifier	parent		13078	0					
ANR	15701	Identifier	u		13078	1					
ANR	15702	Identifier	array		13078	1					
ANR	15703	Identifier	length		13078	1					
ANR	15704	Identifier	top		13078	1					
ANR	15705	BreakStatement	break ;	887:21:26890:26895	13078	5	True				
ANR	15706	Label	default :	889:18:26916:26923	13078	6	True				
ANR	15707	Identifier	default		13078	0					
ANR	15708	BreakStatement	break ;	890:21:26946:26951	13078	7	True				
ANR	15709	ExpressionStatement		891:16:26969:26969	13078	2	True				
ANR	15710	IfStatement	if ( ( ++ top -> parent -> u . array . length ) > state . uint_max )		13078	4					
ANR	15711	Condition	( ++ top -> parent -> u . array . length ) > state . uint_max	894:17:27003:27051	13078	0	True				
ANR	15712	RelationalExpression	( ++ top -> parent -> u . array . length ) > state . uint_max		13078	0		>			
ANR	15713	UnaryExpression	++ top -> parent -> u . array . length		13078	0					
ANR	15714	IncDec	++		13078	0					
ANR	15715	MemberAccess	top -> parent -> u . array . length		13078	1					
ANR	15716	MemberAccess	top -> parent -> u . array		13078	0					
ANR	15717	PtrMemberAccess	top -> parent -> u		13078	0					
ANR	15718	PtrMemberAccess	top -> parent		13078	0					
ANR	15719	Identifier	top		13078	0					
ANR	15720	Identifier	parent		13078	1					
ANR	15721	Identifier	u		13078	1					
ANR	15722	Identifier	array		13078	1					
ANR	15723	Identifier	length		13078	1					
ANR	15724	MemberAccess	state . uint_max		13078	1					
ANR	15725	Identifier	state		13078	0					
ANR	15726	Identifier	uint_max		13078	1					
ANR	15727	GotoStatement	goto e_overflow ;	895:15:27069:27084	13078	1	True				
ANR	15728	Identifier	e_overflow		13078	0					
ANR	15729	ExpressionStatement	top = top -> parent	897:12:27099:27116	13078	5	True				
ANR	15730	AssignmentExpression	top = top -> parent		13078	0		=			
ANR	15731	Identifier	top		13078	0					
ANR	15732	PtrMemberAccess	top -> parent		13078	1					
ANR	15733	Identifier	top		13078	0					
ANR	15734	Identifier	parent		13078	1					
ANR	15735	ContinueStatement	continue ;	899:12:27131:27139	13078	6	True				
ANR	15736	ExpressionStatement	alloc = root	903:6:27167:27179	13078	8	True				
ANR	15737	AssignmentExpression	alloc = root		13078	0		=			
ANR	15738	Identifier	alloc		13078	0					
ANR	15739	Identifier	root		13078	1					
ANR	15740	ReturnStatement	return root ;	906:3:27190:27201	13078	18	True				
ANR	15741	Identifier	root		13078	0					
ANR	15742	Label	e_unknown_value :	908:0:27204:27219	13078	19	True				
ANR	15743	Identifier	e_unknown_value		13078	0					
ANR	15744	ExpressionStatement	"sprintf ( error , ""%d:%d: Unknown value"" , line_and_col )"	910:3:27225:27278	13078	20	True				
ANR	15745	CallExpression	"sprintf ( error , ""%d:%d: Unknown value"" , line_and_col )"		13078	0					
ANR	15746	Callee	sprintf		13078	0					
ANR	15747	Identifier	sprintf		13078	0					
ANR	15748	ArgumentList	error		13078	1					
ANR	15749	Argument	error		13078	0					
ANR	15750	Identifier	error		13078	0					
ANR	15751	Argument	"""%d:%d: Unknown value"""		13078	1					
ANR	15752	PrimaryExpression	"""%d:%d: Unknown value"""		13078	0					
ANR	15753	Argument	line_and_col		13078	2					
ANR	15754	Identifier	line_and_col		13078	0					
ANR	15755	GotoStatement	goto e_failed ;	911:3:27283:27296	13078	21	True				
ANR	15756	Identifier	e_failed		13078	0					
ANR	15757	Label	e_alloc_failure :	913:0:27299:27314	13078	22	True				
ANR	15758	Identifier	e_alloc_failure		13078	0					
ANR	15759	ExpressionStatement	"strcpy ( error , ""Memory allocation failure"" )"	915:3:27320:27363	13078	23	True				
ANR	15760	CallExpression	"strcpy ( error , ""Memory allocation failure"" )"		13078	0					
ANR	15761	Callee	strcpy		13078	0					
ANR	15762	Identifier	strcpy		13078	0					
ANR	15763	ArgumentList	error		13078	1					
ANR	15764	Argument	error		13078	0					
ANR	15765	Identifier	error		13078	0					
ANR	15766	Argument	"""Memory allocation failure"""		13078	1					
ANR	15767	PrimaryExpression	"""Memory allocation failure"""		13078	0					
ANR	15768	GotoStatement	goto e_failed ;	916:3:27368:27381	13078	24	True				
ANR	15769	Identifier	e_failed		13078	0					
ANR	15770	Label	e_overflow :	918:0:27384:27394	13078	25	True				
ANR	15771	Identifier	e_overflow		13078	0					
ANR	15772	ExpressionStatement	"sprintf ( error , ""%d:%d: Too long (caught overflow)"" , line_and_col )"	920:3:27400:27466	13078	26	True				
ANR	15773	CallExpression	"sprintf ( error , ""%d:%d: Too long (caught overflow)"" , line_and_col )"		13078	0					
ANR	15774	Callee	sprintf		13078	0					
ANR	15775	Identifier	sprintf		13078	0					
ANR	15776	ArgumentList	error		13078	1					
ANR	15777	Argument	error		13078	0					
ANR	15778	Identifier	error		13078	0					
ANR	15779	Argument	"""%d:%d: Too long (caught overflow)"""		13078	1					
ANR	15780	PrimaryExpression	"""%d:%d: Too long (caught overflow)"""		13078	0					
ANR	15781	Argument	line_and_col		13078	2					
ANR	15782	Identifier	line_and_col		13078	0					
ANR	15783	GotoStatement	goto e_failed ;	921:3:27471:27484	13078	27	True				
ANR	15784	Identifier	e_failed		13078	0					
ANR	15785	Label	e_failed :	923:0:27487:27495	13078	28	True				
ANR	15786	Identifier	e_failed		13078	0					
ANR	15787	IfStatement	if ( error_buf )		13078	29					
ANR	15788	Condition	error_buf	925:7:27505:27513	13078	0	True				
ANR	15789	Identifier	error_buf		13078	0					
ANR	15790	CompoundStatement		702:3:21482:21482	13078	1					
ANR	15791	IfStatement	if ( * error )		13078	0					
ANR	15792	Condition	* error	927:10:27531:27536	13078	0	True				
ANR	15793	UnaryOperationExpression	* error		13078	0					
ANR	15794	UnaryOperator	*		13078	0					
ANR	15795	Identifier	error		13078	1					
ANR	15796	ExpressionStatement	"strcpy ( error_buf , error )"	928:9:27548:27573	13078	1	True				
ANR	15797	CallExpression	"strcpy ( error_buf , error )"		13078	0					
ANR	15798	Callee	strcpy		13078	0					
ANR	15799	Identifier	strcpy		13078	0					
ANR	15800	ArgumentList	error_buf		13078	1					
ANR	15801	Argument	error_buf		13078	0					
ANR	15802	Identifier	error_buf		13078	0					
ANR	15803	Argument	error		13078	1					
ANR	15804	Identifier	error		13078	0					
ANR	15805	ElseStatement	else		13078	0					
ANR	15806	ExpressionStatement	"strcpy ( error_buf , ""Unknown error"" )"	930:9:27595:27630	13078	0	True				
ANR	15807	CallExpression	"strcpy ( error_buf , ""Unknown error"" )"		13078	0					
ANR	15808	Callee	strcpy		13078	0					
ANR	15809	Identifier	strcpy		13078	0					
ANR	15810	ArgumentList	error_buf		13078	1					
ANR	15811	Argument	error_buf		13078	0					
ANR	15812	Identifier	error_buf		13078	0					
ANR	15813	Argument	"""Unknown error"""		13078	1					
ANR	15814	PrimaryExpression	"""Unknown error"""		13078	0					
ANR	15815	IfStatement	if ( state . first_pass )		13078	30					
ANR	15816	Condition	state . first_pass	933:7:27645:27660	13078	0	True				
ANR	15817	MemberAccess	state . first_pass		13078	0					
ANR	15818	Identifier	state		13078	0					
ANR	15819	Identifier	first_pass		13078	1					
ANR	15820	ExpressionStatement	alloc = root	934:6:27669:27681	13078	1	True				
ANR	15821	AssignmentExpression	alloc = root		13078	0		=			
ANR	15822	Identifier	alloc		13078	0					
ANR	15823	Identifier	root		13078	1					
ANR	15824	WhileStatement	while ( alloc )		13078	31					
ANR	15825	Condition	alloc	936:10:27694:27698	13078	0	True				
ANR	15826	Identifier	alloc		13078	0					
ANR	15827	CompoundStatement		713:3:21667:21667	13078	1					
ANR	15828	ExpressionStatement	top = alloc -> _reserved . next_alloc	938:6:27712:27745	13078	0	True				
ANR	15829	AssignmentExpression	top = alloc -> _reserved . next_alloc		13078	0		=			
ANR	15830	Identifier	top		13078	0					
ANR	15831	MemberAccess	alloc -> _reserved . next_alloc		13078	1					
ANR	15832	PtrMemberAccess	alloc -> _reserved		13078	0					
ANR	15833	Identifier	alloc		13078	0					
ANR	15834	Identifier	_reserved		13078	1					
ANR	15835	Identifier	next_alloc		13078	1					
ANR	15836	ExpressionStatement	"state . settings . mem_free ( alloc , state . settings . user_data )"	939:6:27753:27810	13078	1	True				
ANR	15837	CallExpression	"state . settings . mem_free ( alloc , state . settings . user_data )"		13078	0					
ANR	15838	Callee	state . settings . mem_free		13078	0					
ANR	15839	MemberAccess	state . settings . mem_free		13078	0					
ANR	15840	MemberAccess	state . settings		13078	0					
ANR	15841	Identifier	state		13078	0					
ANR	15842	Identifier	settings		13078	1					
ANR	15843	Identifier	mem_free		13078	1					
ANR	15844	ArgumentList	alloc		13078	1					
ANR	15845	Argument	alloc		13078	0					
ANR	15846	Identifier	alloc		13078	0					
ANR	15847	Argument	state . settings . user_data		13078	1					
ANR	15848	MemberAccess	state . settings . user_data		13078	0					
ANR	15849	MemberAccess	state . settings		13078	0					
ANR	15850	Identifier	state		13078	0					
ANR	15851	Identifier	settings		13078	1					
ANR	15852	Identifier	user_data		13078	1					
ANR	15853	ExpressionStatement	alloc = top	940:6:27818:27829	13078	2	True				
ANR	15854	AssignmentExpression	alloc = top		13078	0		=			
ANR	15855	Identifier	alloc		13078	0					
ANR	15856	Identifier	top		13078	1					
ANR	15857	IfStatement	if ( ! state . first_pass )		13078	32					
ANR	15858	Condition	! state . first_pass	943:7:27844:27860	13078	0	True				
ANR	15859	UnaryOperationExpression	! state . first_pass		13078	0					
ANR	15860	UnaryOperator	!		13078	0					
ANR	15861	MemberAccess	state . first_pass		13078	1					
ANR	15862	Identifier	state		13078	0					
ANR	15863	Identifier	first_pass		13078	1					
ANR	15864	ExpressionStatement	"json_value_free_ex ( & state . settings , root )"	944:6:27869:27911	13078	1	True				
ANR	15865	CallExpression	"json_value_free_ex ( & state . settings , root )"		13078	0					
ANR	15866	Callee	json_value_free_ex		13078	0					
ANR	15867	Identifier	json_value_free_ex		13078	0					
ANR	15868	ArgumentList	& state . settings		13078	1					
ANR	15869	Argument	& state . settings		13078	0					
ANR	15870	UnaryOperationExpression	& state . settings		13078	0					
ANR	15871	UnaryOperator	&		13078	0					
ANR	15872	MemberAccess	state . settings		13078	1					
ANR	15873	Identifier	state		13078	0					
ANR	15874	Identifier	settings		13078	1					
ANR	15875	Argument	root		13078	1					
ANR	15876	Identifier	root		13078	0					
ANR	15877	ReturnStatement	return 0 ;	946:3:27917:27925	13078	33	True				
ANR	15878	PrimaryExpression	0		13078	0					
ANR	15879	ReturnType	json_value *		13078	1					
ANR	15880	Identifier	json_parse_ex		13078	2					
ANR	15881	ParameterList	"json_settings * settings , const json_char * json , size_t length , char * error_buf"		13078	3					
ANR	15882	Parameter	json_settings * settings	221:28:5869:5892	13078	0	True				
ANR	15883	ParameterType	json_settings *		13078	0					
ANR	15884	Identifier	settings		13078	1					
ANR	15885	Parameter	const json_char * json	222:28:5923:5944	13078	1	True				
ANR	15886	ParameterType	const json_char *		13078	0					
ANR	15887	Identifier	json		13078	1					
ANR	15888	Parameter	size_t length	223:28:5975:5987	13078	2	True				
ANR	15889	ParameterType	size_t		13078	0					
ANR	15890	Identifier	length		13078	1					
ANR	15891	Parameter	char * error_buf	224:28:6018:6033	13078	3	True				
ANR	15892	ParameterType	char *		13078	0					
ANR	15893	Identifier	error_buf		13078	1					
ANR	15894	CFGEntryNode	ENTRY		13078		True				
ANR	15895	CFGExitNode	EXIT		13078		True				
ANR	15896	InfiniteForNode	true		13078		True				
ANR	15897	Symbol	* state . ptr		13078						
ANR	15898	Symbol	parent		13078						
ANR	15899	Symbol	* top -> u . object . values		13078						
ANR	15900	Symbol	* parent		13078						
ANR	15901	Symbol	string_length		13078						
ANR	15902	Symbol	flag_block_comment		13078						
ANR	15903	Symbol	top -> parent -> u . array . length		13078						
ANR	15904	Symbol	state . settings . settings		13078						
ANR	15905	Symbol	json_null		13078						
ANR	15906	Symbol	uchar2		13078						
ANR	15907	Symbol	top -> u . string . ptr		13078						
ANR	15908	Symbol	error_buf		13078						
ANR	15909	Symbol	hex_value		13078						
ANR	15910	Symbol	top -> u . object . values [ top -> u . object . length ] . name_length		13078						
ANR	15911	Symbol	top -> u . string		13078						
ANR	15912	Symbol	flag_num_zero		13078						
ANR	15913	Symbol	state		13078						
ANR	15914	Symbol	* parent -> u		13078						
ANR	15915	Symbol	& state . uint_max		13078						
ANR	15916	Symbol	json_array		13078						
ANR	15917	Symbol	isdigit		13078						
ANR	15918	Symbol	new_value		13078						
ANR	15919	Symbol	& top -> _reserved . object_mem		13078						
ANR	15920	Symbol	json_boolean		13078						
ANR	15921	Symbol	* top -> parent		13078						
ANR	15922	Symbol	top -> u . dbl		13078						
ANR	15923	Symbol	json_integer		13078						
ANR	15924	Symbol	* * top		13078						
ANR	15925	Symbol	json_string		13078						
ANR	15926	Symbol	parent -> type		13078						
ANR	15927	Symbol	parent -> u . array . length		13078						
ANR	15928	Symbol	& top -> u		13078						
ANR	15929	Symbol	flag_num_e		13078						
ANR	15930	Symbol	top -> _reserved		13078						
ANR	15931	Symbol	flag_need_colon		13078						
ANR	15932	Symbol	state . cur_line		13078						
ANR	15933	Symbol	* top		13078						
ANR	15934	Symbol	top -> u . string . length		13078						
ANR	15935	Symbol	* parent -> u . array . length		13078						
ANR	15936	Symbol	& state		13078						
ANR	15937	Symbol	flags		13078						
ANR	15938	Symbol	* string		13078						
ANR	15939	Symbol	top -> parent		13078						
ANR	15940	Symbol	& top -> u . object . values		13078						
ANR	15941	Symbol	& root		13078						
ANR	15942	Symbol	flag_seek_value		13078						
ANR	15943	Symbol	top -> u . object . values [ top -> u . object . length ] . name		13078						
ANR	15944	Symbol	& state . settings		13078						
ANR	15945	Symbol	top		13078						
ANR	15946	Symbol	state . settings . mem_alloc		13078						
ANR	15947	Symbol	* alloc		13078						
ANR	15948	Symbol	flag_next		13078						
ANR	15949	Symbol	pow		13078						
ANR	15950	Symbol	top -> u . integer		13078						
ANR	15951	Symbol	state . first_pass		13078						
ANR	15952	Symbol	* parent -> u . array . values		13078						
ANR	15953	Symbol	b		13078						
ANR	15954	Symbol	top -> u		13078						
ANR	15955	Symbol	flag_reproc		13078						
ANR	15956	Symbol	flag_num_negative		13078						
ANR	15957	Symbol	state . settings . user_data		13078						
ANR	15958	Symbol	parent -> u . object . values		13078						
ANR	15959	Symbol	* * parent		13078						
ANR	15960	Symbol	num_fraction		13078						
ANR	15961	Symbol	top -> u . boolean		13078						
ANR	15962	Symbol	top -> parent -> u		13078						
ANR	15963	Symbol	* ( json_char * * ) & top -> u . object . values		13078						
ANR	15964	Symbol	flag_num_e_got_sign		13078						
ANR	15965	Symbol	state . cur_col		13078						
ANR	15966	Symbol	state . settings . mem_free		13078						
ANR	15967	Symbol	* ++ state . ptr		13078						
ANR	15968	Symbol	* parent -> u . array		13078						
ANR	15969	Symbol	parent -> u . object . values [ parent -> u . object . length ] . value		13078						
ANR	15970	Symbol	& top		13078						
ANR	15971	Symbol	parent -> u . object . length		13078						
ANR	15972	Symbol	num_digits		13078						
ANR	15973	Symbol	top -> parent -> u . array		13078						
ANR	15974	Symbol	flag_num_e_negative		13078						
ANR	15975	Symbol	* top -> u		13078						
ANR	15976	Symbol	alloc -> _reserved . next_alloc		13078						
ANR	15977	Symbol	json_double		13078						
ANR	15978	Symbol	flag_need_comma		13078						
ANR	15979	Symbol	state . settings		13078						
ANR	15980	Symbol	top -> _reserved . object_mem		13078						
ANR	15981	Symbol	parent -> u		13078						
ANR	15982	Symbol	default_free		13078						
ANR	15983	Symbol	settings		13078						
ANR	15984	Symbol	flag_string		13078						
ANR	15985	Symbol	num_e		13078						
ANR	15986	Symbol	* top -> u . object		13078						
ANR	15987	Symbol	& top -> _reserved		13078						
ANR	15988	Symbol	parent -> u . array		13078						
ANR	15989	Symbol	state . ptr		13078						
ANR	15990	Symbol	line_and_col		13078						
ANR	15991	Symbol	top -> type		13078						
ANR	15992	Symbol	* error		13078						
ANR	15993	Symbol	parent -> u . object		13078						
ANR	15994	Symbol	json_enable_comments		13078						
ANR	15995	Symbol	alloc		13078						
ANR	15996	Symbol	* json		13078						
ANR	15997	Symbol	flag_line_comment		13078						
ANR	15998	Symbol	* top -> u . object . length		13078						
ANR	15999	Symbol	top -> parent -> type		13078						
ANR	16000	Symbol	default_alloc		13078						
ANR	16001	Symbol	state . uint_max		13078						
ANR	16002	Symbol	string		13078						
ANR	16003	Symbol	parent -> u . array . values		13078						
ANR	16004	Symbol	state . ulong_max		13078						
ANR	16005	Symbol	* parent -> u . object . length		13078						
ANR	16006	Symbol	error		13078						
ANR	16007	Symbol	top -> u . object . values		13078						
ANR	16008	Symbol	flag_escaped		13078						
ANR	16009	Symbol	uchar		13078						
ANR	16010	Symbol	* parent -> u . object . values		13078						
ANR	16011	Symbol	root		13078						
ANR	16012	Symbol	* string_length		13078						
ANR	16013	Symbol	json		13078						
ANR	16014	Symbol	flag_done		13078						
ANR	16015	Symbol	end		13078						
ANR	16016	Symbol	* ( ++ state . ptr )		13078						
ANR	16017	Symbol	top -> u . object . length		13078						
ANR	16018	Symbol	* ( json_char * * ) & top -> _reserved . object_mem		13078						
ANR	16019	Symbol	length		13078						
ANR	16020	Symbol	& alloc		13078						
ANR	16021	Symbol	* state		13078						
ANR	16022	Symbol	top -> u . object		13078						
ANR	16023	Symbol	* parent -> u . object		13078						
ANR	16024	Symbol	& top -> u . object		13078						
ANR	16025	Symbol	alloc -> _reserved		13078						
ANR	16026	Symbol	& state . ulong_max		13078						
ANR	16027	Symbol	json_object		13078						
ANR	16028	Symbol	uc_b4		13078						
ANR	16029	Symbol	uc_b3		13078						
ANR	16030	Symbol	uc_b2		13078						
ANR	16031	Symbol	uc_b1		13078						
ANR	16032	Function	json_parse	949:0:27930:28085							
ANR	16033	FunctionDef	"json_parse (const json_char * json , size_t length)"		16032	0					
ANR	16034	CompoundStatement		950:0:27994:28085	16032	0					
ANR	16035	IdentifierDeclStatement	json_settings settings = { 0 } ;	951:3:27999:28029	16032	0	True				
ANR	16036	IdentifierDecl	settings = { 0 }		16032	0					
ANR	16037	IdentifierDeclType	json_settings		16032	0					
ANR	16038	Identifier	settings		16032	1					
ANR	16039	AssignmentExpression	settings = { 0 }		16032	2		=			
ANR	16040	Identifier	settings		16032	0					
ANR	16041	InitializerList	0		16032	1					
ANR	16042	PrimaryExpression	0		16032	0					
ANR	16043	ReturnStatement	"return json_parse_ex ( & settings , json , length , 0 ) ;"	952:3:28034:28083	16032	1	True				
ANR	16044	CallExpression	"json_parse_ex ( & settings , json , length , 0 )"		16032	0					
ANR	16045	Callee	json_parse_ex		16032	0					
ANR	16046	Identifier	json_parse_ex		16032	0					
ANR	16047	ArgumentList	& settings		16032	1					
ANR	16048	Argument	& settings		16032	0					
ANR	16049	UnaryOperationExpression	& settings		16032	0					
ANR	16050	UnaryOperator	&		16032	0					
ANR	16051	Identifier	settings		16032	1					
ANR	16052	Argument	json		16032	1					
ANR	16053	Identifier	json		16032	0					
ANR	16054	Argument	length		16032	2					
ANR	16055	Identifier	length		16032	0					
ANR	16056	Argument	0		16032	3					
ANR	16057	PrimaryExpression	0		16032	0					
ANR	16058	ReturnType	json_value *		16032	1					
ANR	16059	Identifier	json_parse		16032	2					
ANR	16060	ParameterList	"const json_char * json , size_t length"		16032	3					
ANR	16061	Parameter	const json_char * json	949:25:27955:27976	16032	0	True				
ANR	16062	ParameterType	const json_char *		16032	0					
ANR	16063	Identifier	json		16032	1					
ANR	16064	Parameter	size_t length	949:49:27979:27991	16032	1	True				
ANR	16065	ParameterType	size_t		16032	0					
ANR	16066	Identifier	length		16032	1					
ANR	16067	CFGEntryNode	ENTRY		16032		True				
ANR	16068	CFGExitNode	EXIT		16032		True				
ANR	16069	Symbol	settings		16032						
ANR	16070	Symbol	json_parse_ex		16032						
ANR	16071	Symbol	length		16032						
ANR	16072	Symbol	json		16032						
ANR	16073	Symbol	& settings		16032						
ANR	16074	Function	json_value_free_ex	955:0:28088:29180							
ANR	16075	FunctionDef	"json_value_free_ex (json_settings * settings , json_value * value)"		16074	0					
ANR	16076	CompoundStatement		956:0:28159:29180	16074	0					
ANR	16077	IdentifierDeclStatement	json_value * cur_value ;	957:3:28164:28186	16074	0	True				
ANR	16078	IdentifierDecl	* cur_value		16074	0					
ANR	16079	IdentifierDeclType	json_value *		16074	0					
ANR	16080	Identifier	cur_value		16074	1					
ANR	16081	IfStatement	if ( ! value )		16074	1					
ANR	16082	Condition	! value	959:7:28196:28201	16074	0	True				
ANR	16083	UnaryOperationExpression	! value		16074	0					
ANR	16084	UnaryOperator	!		16074	0					
ANR	16085	Identifier	value		16074	1					
ANR	16086	ReturnStatement	return ;	960:6:28210:28216	16074	1	True				
ANR	16087	ExpressionStatement	value -> parent = 0	962:3:28222:28239	16074	2	True				
ANR	16088	AssignmentExpression	value -> parent = 0		16074	0		=			
ANR	16089	PtrMemberAccess	value -> parent		16074	0					
ANR	16090	Identifier	value		16074	0					
ANR	16091	Identifier	parent		16074	1					
ANR	16092	PrimaryExpression	0		16074	1					
ANR	16093	WhileStatement	while ( value )		16074	3					
ANR	16094	Condition	value	964:10:28252:28256	16074	0	True				
ANR	16095	Identifier	value		16074	0					
ANR	16096	CompoundStatement		10:3:102:102	16074	1					
ANR	16097	SwitchStatement	switch ( value -> type )		16074	0					
ANR	16098	Condition	value -> type	966:14:28278:28288	16074	0	True				
ANR	16099	PtrMemberAccess	value -> type		16074	0					
ANR	16100	Identifier	value		16074	0					
ANR	16101	Identifier	type		16074	1					
ANR	16102	CompoundStatement		12:6:137:137	16074	1					
ANR	16103	Label	case json_array :	968:9:28308:28323	16074	0	True				
ANR	16104	Identifier	json_array		16074	0					
ANR	16105	IfStatement	if ( ! value -> u . array . length )		16074	1					
ANR	16106	Condition	! value -> u . array . length	970:16:28342:28363	16074	0	True				
ANR	16107	UnaryOperationExpression	! value -> u . array . length		16074	0					
ANR	16108	UnaryOperator	!		16074	0					
ANR	16109	MemberAccess	value -> u . array . length		16074	1					
ANR	16110	MemberAccess	value -> u . array		16074	0					
ANR	16111	PtrMemberAccess	value -> u		16074	0					
ANR	16112	Identifier	value		16074	0					
ANR	16113	Identifier	u		16074	1					
ANR	16114	Identifier	array		16074	1					
ANR	16115	Identifier	length		16074	1					
ANR	16116	CompoundStatement		16:12:218:218	16074	1					
ANR	16117	ExpressionStatement	"settings -> mem_free ( value -> u . array . values , settings -> user_data )"	972:15:28395:28458	16074	0	True				
ANR	16118	CallExpression	"settings -> mem_free ( value -> u . array . values , settings -> user_data )"		16074	0					
ANR	16119	Callee	settings -> mem_free		16074	0					
ANR	16120	PtrMemberAccess	settings -> mem_free		16074	0					
ANR	16121	Identifier	settings		16074	0					
ANR	16122	Identifier	mem_free		16074	1					
ANR	16123	ArgumentList	value -> u . array . values		16074	1					
ANR	16124	Argument	value -> u . array . values		16074	0					
ANR	16125	MemberAccess	value -> u . array . values		16074	0					
ANR	16126	MemberAccess	value -> u . array		16074	0					
ANR	16127	PtrMemberAccess	value -> u		16074	0					
ANR	16128	Identifier	value		16074	0					
ANR	16129	Identifier	u		16074	1					
ANR	16130	Identifier	array		16074	1					
ANR	16131	Identifier	values		16074	1					
ANR	16132	Argument	settings -> user_data		16074	1					
ANR	16133	PtrMemberAccess	settings -> user_data		16074	0					
ANR	16134	Identifier	settings		16074	0					
ANR	16135	Identifier	user_data		16074	1					
ANR	16136	BreakStatement	break ;	973:15:28475:28480	16074	1	True				
ANR	16137	ExpressionStatement	value = value -> u . array . values [ -- value -> u . array . length ]	976:12:28509:28565	16074	2	True				
ANR	16138	AssignmentExpression	value = value -> u . array . values [ -- value -> u . array . length ]		16074	0		=			
ANR	16139	Identifier	value		16074	0					
ANR	16140	ArrayIndexing	value -> u . array . values [ -- value -> u . array . length ]		16074	1					
ANR	16141	MemberAccess	value -> u . array . values		16074	0					
ANR	16142	MemberAccess	value -> u . array		16074	0					
ANR	16143	PtrMemberAccess	value -> u		16074	0					
ANR	16144	Identifier	value		16074	0					
ANR	16145	Identifier	u		16074	1					
ANR	16146	Identifier	array		16074	1					
ANR	16147	Identifier	values		16074	1					
ANR	16148	UnaryExpression	-- value -> u . array . length		16074	1					
ANR	16149	IncDec	--		16074	0					
ANR	16150	MemberAccess	value -> u . array . length		16074	1					
ANR	16151	MemberAccess	value -> u . array		16074	0					
ANR	16152	PtrMemberAccess	value -> u		16074	0					
ANR	16153	Identifier	value		16074	0					
ANR	16154	Identifier	u		16074	1					
ANR	16155	Identifier	array		16074	1					
ANR	16156	Identifier	length		16074	1					
ANR	16157	ContinueStatement	continue ;	977:12:28579:28587	16074	3	True				
ANR	16158	Label	case json_object :	979:9:28599:28615	16074	4	True				
ANR	16159	Identifier	json_object		16074	0					
ANR	16160	IfStatement	if ( ! value -> u . object . length )		16074	5					
ANR	16161	Condition	! value -> u . object . length	981:16:28634:28656	16074	0	True				
ANR	16162	UnaryOperationExpression	! value -> u . object . length		16074	0					
ANR	16163	UnaryOperator	!		16074	0					
ANR	16164	MemberAccess	value -> u . object . length		16074	1					
ANR	16165	MemberAccess	value -> u . object		16074	0					
ANR	16166	PtrMemberAccess	value -> u		16074	0					
ANR	16167	Identifier	value		16074	0					
ANR	16168	Identifier	u		16074	1					
ANR	16169	Identifier	object		16074	1					
ANR	16170	Identifier	length		16074	1					
ANR	16171	CompoundStatement		27:12:511:511	16074	1					
ANR	16172	ExpressionStatement	"settings -> mem_free ( value -> u . object . values , settings -> user_data )"	983:15:28688:28752	16074	0	True				
ANR	16173	CallExpression	"settings -> mem_free ( value -> u . object . values , settings -> user_data )"		16074	0					
ANR	16174	Callee	settings -> mem_free		16074	0					
ANR	16175	PtrMemberAccess	settings -> mem_free		16074	0					
ANR	16176	Identifier	settings		16074	0					
ANR	16177	Identifier	mem_free		16074	1					
ANR	16178	ArgumentList	value -> u . object . values		16074	1					
ANR	16179	Argument	value -> u . object . values		16074	0					
ANR	16180	MemberAccess	value -> u . object . values		16074	0					
ANR	16181	MemberAccess	value -> u . object		16074	0					
ANR	16182	PtrMemberAccess	value -> u		16074	0					
ANR	16183	Identifier	value		16074	0					
ANR	16184	Identifier	u		16074	1					
ANR	16185	Identifier	object		16074	1					
ANR	16186	Identifier	values		16074	1					
ANR	16187	Argument	settings -> user_data		16074	1					
ANR	16188	PtrMemberAccess	settings -> user_data		16074	0					
ANR	16189	Identifier	settings		16074	0					
ANR	16190	Identifier	user_data		16074	1					
ANR	16191	BreakStatement	break ;	984:15:28769:28774	16074	1	True				
ANR	16192	ExpressionStatement	value = value -> u . object . values [ -- value -> u . object . length ] . value	987:12:28803:28867	16074	6	True				
ANR	16193	AssignmentExpression	value = value -> u . object . values [ -- value -> u . object . length ] . value		16074	0		=			
ANR	16194	Identifier	value		16074	0					
ANR	16195	MemberAccess	value -> u . object . values [ -- value -> u . object . length ] . value		16074	1					
ANR	16196	ArrayIndexing	value -> u . object . values [ -- value -> u . object . length ]		16074	0					
ANR	16197	MemberAccess	value -> u . object . values		16074	0					
ANR	16198	MemberAccess	value -> u . object		16074	0					
ANR	16199	PtrMemberAccess	value -> u		16074	0					
ANR	16200	Identifier	value		16074	0					
ANR	16201	Identifier	u		16074	1					
ANR	16202	Identifier	object		16074	1					
ANR	16203	Identifier	values		16074	1					
ANR	16204	UnaryExpression	-- value -> u . object . length		16074	1					
ANR	16205	IncDec	--		16074	0					
ANR	16206	MemberAccess	value -> u . object . length		16074	1					
ANR	16207	MemberAccess	value -> u . object		16074	0					
ANR	16208	PtrMemberAccess	value -> u		16074	0					
ANR	16209	Identifier	value		16074	0					
ANR	16210	Identifier	u		16074	1					
ANR	16211	Identifier	object		16074	1					
ANR	16212	Identifier	length		16074	1					
ANR	16213	Identifier	value		16074	1					
ANR	16214	ContinueStatement	continue ;	988:12:28881:28889	16074	7	True				
ANR	16215	Label	case json_string :	990:9:28901:28917	16074	8	True				
ANR	16216	Identifier	json_string		16074	0					
ANR	16217	ExpressionStatement	"settings -> mem_free ( value -> u . string . ptr , settings -> user_data )"	992:12:28932:28993	16074	9	True				
ANR	16218	CallExpression	"settings -> mem_free ( value -> u . string . ptr , settings -> user_data )"		16074	0					
ANR	16219	Callee	settings -> mem_free		16074	0					
ANR	16220	PtrMemberAccess	settings -> mem_free		16074	0					
ANR	16221	Identifier	settings		16074	0					
ANR	16222	Identifier	mem_free		16074	1					
ANR	16223	ArgumentList	value -> u . string . ptr		16074	1					
ANR	16224	Argument	value -> u . string . ptr		16074	0					
ANR	16225	MemberAccess	value -> u . string . ptr		16074	0					
ANR	16226	MemberAccess	value -> u . string		16074	0					
ANR	16227	PtrMemberAccess	value -> u		16074	0					
ANR	16228	Identifier	value		16074	0					
ANR	16229	Identifier	u		16074	1					
ANR	16230	Identifier	string		16074	1					
ANR	16231	Identifier	ptr		16074	1					
ANR	16232	Argument	settings -> user_data		16074	1					
ANR	16233	PtrMemberAccess	settings -> user_data		16074	0					
ANR	16234	Identifier	settings		16074	0					
ANR	16235	Identifier	user_data		16074	1					
ANR	16236	BreakStatement	break ;	993:12:29007:29012	16074	10	True				
ANR	16237	Label	default :	995:9:29024:29031	16074	11	True				
ANR	16238	Identifier	default		16074	0					
ANR	16239	BreakStatement	break ;	996:12:29045:29050	16074	12	True				
ANR	16240	ExpressionStatement		997:7:29059:29059	16074	1	True				
ANR	16241	ExpressionStatement	cur_value = value	999:6:29068:29085	16074	2	True				
ANR	16242	AssignmentExpression	cur_value = value		16074	0		=			
ANR	16243	Identifier	cur_value		16074	0					
ANR	16244	Identifier	value		16074	1					
ANR	16245	ExpressionStatement	value = value -> parent	1000:6:29093:29114	16074	3	True				
ANR	16246	AssignmentExpression	value = value -> parent		16074	0		=			
ANR	16247	Identifier	value		16074	0					
ANR	16248	PtrMemberAccess	value -> parent		16074	1					
ANR	16249	Identifier	value		16074	0					
ANR	16250	Identifier	parent		16074	1					
ANR	16251	ExpressionStatement	"settings -> mem_free ( cur_value , settings -> user_data )"	1001:6:29122:29173	16074	4	True				
ANR	16252	CallExpression	"settings -> mem_free ( cur_value , settings -> user_data )"		16074	0					
ANR	16253	Callee	settings -> mem_free		16074	0					
ANR	16254	PtrMemberAccess	settings -> mem_free		16074	0					
ANR	16255	Identifier	settings		16074	0					
ANR	16256	Identifier	mem_free		16074	1					
ANR	16257	ArgumentList	cur_value		16074	1					
ANR	16258	Argument	cur_value		16074	0					
ANR	16259	Identifier	cur_value		16074	0					
ANR	16260	Argument	settings -> user_data		16074	1					
ANR	16261	PtrMemberAccess	settings -> user_data		16074	0					
ANR	16262	Identifier	settings		16074	0					
ANR	16263	Identifier	user_data		16074	1					
ANR	16264	ReturnType	void		16074	1					
ANR	16265	Identifier	json_value_free_ex		16074	2					
ANR	16266	ParameterList	"json_settings * settings , json_value * value"		16074	3					
ANR	16267	Parameter	json_settings * settings	955:25:28113:28136	16074	0	True				
ANR	16268	ParameterType	json_settings *		16074	0					
ANR	16269	Identifier	settings		16074	1					
ANR	16270	Parameter	json_value * value	955:51:28139:28156	16074	1	True				
ANR	16271	ParameterType	json_value *		16074	0					
ANR	16272	Identifier	value		16074	1					
ANR	16273	CFGEntryNode	ENTRY		16074		True				
ANR	16274	CFGExitNode	EXIT		16074		True				
ANR	16275	Symbol	* settings		16074						
ANR	16276	Symbol	value -> parent		16074						
ANR	16277	Symbol	value -> u . object . values		16074						
ANR	16278	Symbol	settings -> user_data		16074						
ANR	16279	Symbol	value -> u . string . ptr		16074						
ANR	16280	Symbol	* value -> u . array . length		16074						
ANR	16281	Symbol	value -> u . array		16074						
ANR	16282	Symbol	value -> u . array . values		16074						
ANR	16283	Symbol	value		16074						
ANR	16284	Symbol	cur_value		16074						
ANR	16285	Symbol	* value -> u . object . length		16074						
ANR	16286	Symbol	settings		16074						
ANR	16287	Symbol	value -> u		16074						
ANR	16288	Symbol	value -> u . array . length		16074						
ANR	16289	Symbol	* value -> u . object		16074						
ANR	16290	Symbol	* value -> u		16074						
ANR	16291	Symbol	value -> u . object . length		16074						
ANR	16292	Symbol	* * value		16074						
ANR	16293	Symbol	* value -> u . array . values		16074						
ANR	16294	Symbol	* value -> u . object . values		16074						
ANR	16295	Symbol	value -> u . string		16074						
ANR	16296	Symbol	value -> u . object		16074						
ANR	16297	Symbol	* value		16074						
ANR	16298	Symbol	* value -> u . array		16074						
ANR	16299	Symbol	value -> u . object . values [ -- value -> u . object . length ] . value		16074						
ANR	16300	Symbol	value -> type		16074						
ANR	16301	Function	json_value_free	1005:0:29183:29341							
ANR	16302	FunctionDef	json_value_free (json_value * value)		16301	0					
ANR	16303	CompoundStatement		1006:0:29225:29341	16301	0					
ANR	16304	IdentifierDeclStatement	json_settings settings = { 0 } ;	1007:3:29230:29260	16301	0	True				
ANR	16305	IdentifierDecl	settings = { 0 }		16301	0					
ANR	16306	IdentifierDeclType	json_settings		16301	0					
ANR	16307	Identifier	settings		16301	1					
ANR	16308	AssignmentExpression	settings = { 0 }		16301	2		=			
ANR	16309	Identifier	settings		16301	0					
ANR	16310	InitializerList	0		16301	1					
ANR	16311	PrimaryExpression	0		16301	0					
ANR	16312	ExpressionStatement	settings . mem_free = default_free	1008:3:29265:29297	16301	1	True				
ANR	16313	AssignmentExpression	settings . mem_free = default_free		16301	0		=			
ANR	16314	MemberAccess	settings . mem_free		16301	0					
ANR	16315	Identifier	settings		16301	0					
ANR	16316	Identifier	mem_free		16301	1					
ANR	16317	Identifier	default_free		16301	1					
ANR	16318	ExpressionStatement	"json_value_free_ex ( & settings , value )"	1009:3:29302:29339	16301	2	True				
ANR	16319	CallExpression	"json_value_free_ex ( & settings , value )"		16301	0					
ANR	16320	Callee	json_value_free_ex		16301	0					
ANR	16321	Identifier	json_value_free_ex		16301	0					
ANR	16322	ArgumentList	& settings		16301	1					
ANR	16323	Argument	& settings		16301	0					
ANR	16324	UnaryOperationExpression	& settings		16301	0					
ANR	16325	UnaryOperator	&		16301	0					
ANR	16326	Identifier	settings		16301	1					
ANR	16327	Argument	value		16301	1					
ANR	16328	Identifier	value		16301	0					
ANR	16329	ReturnType	void		16301	1					
ANR	16330	Identifier	json_value_free		16301	2					
ANR	16331	ParameterList	json_value * value		16301	3					
ANR	16332	Parameter	json_value * value	1005:22:29205:29222	16301	0	True				
ANR	16333	ParameterType	json_value *		16301	0					
ANR	16334	Identifier	value		16301	1					
ANR	16335	CFGEntryNode	ENTRY		16301		True				
ANR	16336	CFGExitNode	EXIT		16301		True				
ANR	16337	Symbol	settings		16301						
ANR	16338	Symbol	settings . mem_free		16301						
ANR	16339	Symbol	& settings		16301						
ANR	16340	Symbol	value		16301						
ANR	16341	Symbol	default_free		16301						
