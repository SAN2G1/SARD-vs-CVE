command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1	File	data/converged/CVE-2017-15924_shadowsocks-libev/acl.c								
ANR	2	DeclStmt									
ANR	3	Decl							struct ip_set	struct ip_set	white_list_ipv4
ANR	4	DeclStmt									
ANR	5	Decl							struct ip_set	struct ip_set	white_list_ipv6
ANR	6	DeclStmt									
ANR	7	Decl							struct ip_set	struct ip_set	black_list_ipv4
ANR	8	DeclStmt									
ANR	9	Decl							struct ip_set	struct ip_set	black_list_ipv6
ANR	10	DeclStmt									
ANR	11	Decl							struct cork_dllist	struct cork_dllist	black_list_rules
ANR	12	DeclStmt									
ANR	13	Decl							struct cork_dllist	struct cork_dllist	white_list_rules
ANR	14	DeclStmt									
ANR	15	Decl							int	int	acl_mode
ANR	16	DeclStmt									
ANR	17	Decl							struct cache	struct cache *	block_list
ANR	18	DeclStmt									
ANR	19	Decl							struct ip_set	struct ip_set	outbound_block_list_ipv4
ANR	20	DeclStmt									
ANR	21	Decl							struct ip_set	struct ip_set	outbound_block_list_ipv6
ANR	22	DeclStmt									
ANR	23	Decl							struct cork_dllist	struct cork_dllist	outbound_block_list_rules
ANR	24	Function	init_block_list	57:0:1557:1624							
ANR	25	FunctionDef	init_block_list ()		24	0					
ANR	26	CompoundStatement		59:0:1580:1624	24	0					
ANR	27	ExpressionStatement	"cache_create ( & block_list , 256 , NULL )"	60:4:1586:1622	24	0	True				
ANR	28	CallExpression	"cache_create ( & block_list , 256 , NULL )"		24	0					
ANR	29	Callee	cache_create		24	0					
ANR	30	Identifier	cache_create		24	0					
ANR	31	ArgumentList	& block_list		24	1					
ANR	32	Argument	& block_list		24	0					
ANR	33	UnaryOperationExpression	& block_list		24	0					
ANR	34	UnaryOperator	&		24	0					
ANR	35	Identifier	block_list		24	1					
ANR	36	Argument	256		24	1					
ANR	37	PrimaryExpression	256		24	0					
ANR	38	Argument	NULL		24	2					
ANR	39	Identifier	NULL		24	0					
ANR	40	ReturnType	void		24	1					
ANR	41	Identifier	init_block_list		24	2					
ANR	42	ParameterList			24	3					
ANR	43	CFGEntryNode	ENTRY		24		True				
ANR	44	CFGExitNode	EXIT		24		True				
ANR	45	Symbol	NULL		24						
ANR	46	Symbol	& block_list		24						
ANR	47	Function	free_block_list	63:0:1627:1704							
ANR	48	FunctionDef	free_block_list ()		47	0					
ANR	49	CompoundStatement		65:0:1650:1704	47	0					
ANR	50	ExpressionStatement	"cache_clear ( block_list , 0 )"	66:4:1656:1682	47	0	True				
ANR	51	CallExpression	"cache_clear ( block_list , 0 )"		47	0					
ANR	52	Callee	cache_clear		47	0					
ANR	53	Identifier	cache_clear		47	0					
ANR	54	ArgumentList	block_list		47	1					
ANR	55	Argument	block_list		47	0					
ANR	56	Identifier	block_list		47	0					
ANR	57	Argument	0		47	1					
ANR	58	PrimaryExpression	0		47	0					
ANR	59	ReturnType	void		47	1					
ANR	60	Identifier	free_block_list		47	2					
ANR	61	ParameterList			47	3					
ANR	62	CFGEntryNode	ENTRY		47		True				
ANR	63	CFGExitNode	EXIT		47		True				
ANR	64	Symbol	block_list		47						
ANR	65	Function	remove_from_block_list	69:0:1707:1837							
ANR	66	FunctionDef	remove_from_block_list (char * addr)		65	0					
ANR	67	CompoundStatement		71:0:1746:1837	65	0					
ANR	68	IdentifierDeclStatement	size_t addr_len = strlen ( addr ) ;	72:4:1752:1782	65	0	True				
ANR	69	IdentifierDecl	addr_len = strlen ( addr )		65	0					
ANR	70	IdentifierDeclType	size_t		65	0					
ANR	71	Identifier	addr_len		65	1					
ANR	72	AssignmentExpression	addr_len = strlen ( addr )		65	2		=			
ANR	73	Identifier	addr_len		65	0					
ANR	74	CallExpression	strlen ( addr )		65	1					
ANR	75	Callee	strlen		65	0					
ANR	76	Identifier	strlen		65	0					
ANR	77	ArgumentList	addr		65	1					
ANR	78	Argument	addr		65	0					
ANR	79	Identifier	addr		65	0					
ANR	80	ReturnStatement	"return cache_remove ( block_list , addr , addr_len ) ;"	73:4:1788:1835	65	1	True				
ANR	81	CallExpression	"cache_remove ( block_list , addr , addr_len )"		65	0					
ANR	82	Callee	cache_remove		65	0					
ANR	83	Identifier	cache_remove		65	0					
ANR	84	ArgumentList	block_list		65	1					
ANR	85	Argument	block_list		65	0					
ANR	86	Identifier	block_list		65	0					
ANR	87	Argument	addr		65	1					
ANR	88	Identifier	addr		65	0					
ANR	89	Argument	addr_len		65	2					
ANR	90	Identifier	addr_len		65	0					
ANR	91	ReturnType	int		65	1					
ANR	92	Identifier	remove_from_block_list		65	2					
ANR	93	ParameterList	char * addr		65	3					
ANR	94	Parameter	char * addr	70:23:1734:1743	65	0	True				
ANR	95	ParameterType	char *		65	0					
ANR	96	Identifier	addr		65	1					
ANR	97	CFGEntryNode	ENTRY		65		True				
ANR	98	CFGExitNode	EXIT		65		True				
ANR	99	Symbol	strlen		65						
ANR	100	Symbol	cache_remove		65						
ANR	101	Symbol	block_list		65						
ANR	102	Symbol	addr		65						
ANR	103	Symbol	addr_len		65						
ANR	104	Function	clear_block_list	76:0:1840:1934							
ANR	105	FunctionDef	clear_block_list ()		104	0					
ANR	106	CompoundStatement		78:0:1864:1934	104	0					
ANR	107	ExpressionStatement	"cache_clear ( block_list , 3600 )"	79:4:1870:1899	104	0	True				
ANR	108	CallExpression	"cache_clear ( block_list , 3600 )"		104	0					
ANR	109	Callee	cache_clear		104	0					
ANR	110	Identifier	cache_clear		104	0					
ANR	111	ArgumentList	block_list		104	1					
ANR	112	Argument	block_list		104	0					
ANR	113	Identifier	block_list		104	0					
ANR	114	Argument	3600		104	1					
ANR	115	PrimaryExpression	3600		104	0					
ANR	116	ReturnType	void		104	1					
ANR	117	Identifier	clear_block_list		104	2					
ANR	118	ParameterList			104	3					
ANR	119	CFGEntryNode	ENTRY		104		True				
ANR	120	CFGExitNode	EXIT		104		True				
ANR	121	Symbol	block_list		104						
ANR	122	Function	check_block_list	82:0:1937:2242							
ANR	123	FunctionDef	check_block_list (char * addr)		122	0					
ANR	124	CompoundStatement		84:0:1970:2242	122	0					
ANR	125	IdentifierDeclStatement	size_t addr_len = strlen ( addr ) ;	85:4:1976:2006	122	0	True				
ANR	126	IdentifierDecl	addr_len = strlen ( addr )		122	0					
ANR	127	IdentifierDeclType	size_t		122	0					
ANR	128	Identifier	addr_len		122	1					
ANR	129	AssignmentExpression	addr_len = strlen ( addr )		122	2		=			
ANR	130	Identifier	addr_len		122	0					
ANR	131	CallExpression	strlen ( addr )		122	1					
ANR	132	Callee	strlen		122	0					
ANR	133	Identifier	strlen		122	0					
ANR	134	ArgumentList	addr		122	1					
ANR	135	Argument	addr		122	0					
ANR	136	Identifier	addr		122	0					
ANR	137	IfStatement	"if ( cache_key_exist ( block_list , addr , addr_len ) )"		122	1					
ANR	138	Condition	"cache_key_exist ( block_list , addr , addr_len )"	87:8:2017:2059	122	0	True				
ANR	139	CallExpression	"cache_key_exist ( block_list , addr , addr_len )"		122	0					
ANR	140	Callee	cache_key_exist		122	0					
ANR	141	Identifier	cache_key_exist		122	0					
ANR	142	ArgumentList	block_list		122	1					
ANR	143	Argument	block_list		122	0					
ANR	144	Identifier	block_list		122	0					
ANR	145	Argument	addr		122	1					
ANR	146	Identifier	addr		122	0					
ANR	147	Argument	addr_len		122	2					
ANR	148	Identifier	addr_len		122	0					
ANR	149	CompoundStatement		5:8:101:118	122	1					
ANR	150	IdentifierDeclStatement	int * count = NULL ;	88:8:2072:2089	122	0	True				
ANR	151	IdentifierDecl	* count = NULL		122	0					
ANR	152	IdentifierDeclType	int *		122	0					
ANR	153	Identifier	count		122	1					
ANR	154	AssignmentExpression	* count = NULL		122	2		=			
ANR	155	Identifier	NULL		122	0					
ANR	156	Identifier	NULL		122	1					
ANR	157	ExpressionStatement	"cache_lookup ( block_list , addr , addr_len , & count )"	89:8:2099:2147	122	1	True				
ANR	158	CallExpression	"cache_lookup ( block_list , addr , addr_len , & count )"		122	0					
ANR	159	Callee	cache_lookup		122	0					
ANR	160	Identifier	cache_lookup		122	0					
ANR	161	ArgumentList	block_list		122	1					
ANR	162	Argument	block_list		122	0					
ANR	163	Identifier	block_list		122	0					
ANR	164	Argument	addr		122	1					
ANR	165	Identifier	addr		122	0					
ANR	166	Argument	addr_len		122	2					
ANR	167	Identifier	addr_len		122	0					
ANR	168	Argument	& count		122	3					
ANR	169	UnaryOperationExpression	& count		122	0					
ANR	170	UnaryOperator	&		122	0					
ANR	171	Identifier	count		122	1					
ANR	172	IfStatement	if ( count != NULL && * count > MAX_TRIES )		122	2					
ANR	173	Condition	count != NULL && * count > MAX_TRIES	91:12:2162:2196	122	0	True				
ANR	174	AndExpression	count != NULL && * count > MAX_TRIES		122	0		&&			
ANR	175	EqualityExpression	count != NULL		122	0		!=			
ANR	176	Identifier	count		122	0					
ANR	177	Identifier	NULL		122	1					
ANR	178	RelationalExpression	* count > MAX_TRIES		122	1		>			
ANR	179	UnaryOperationExpression	* count		122	0					
ANR	180	UnaryOperator	*		122	0					
ANR	181	Identifier	count		122	1					
ANR	182	Identifier	MAX_TRIES		122	1					
ANR	183	ReturnStatement	return 1 ;	92:12:2211:2219	122	1	True				
ANR	184	PrimaryExpression	1		122	0					
ANR	185	ReturnStatement	return 0 ;	95:4:2232:2240	122	2	True				
ANR	186	PrimaryExpression	0		122	0					
ANR	187	ReturnType	int		122	1					
ANR	188	Identifier	check_block_list		122	2					
ANR	189	ParameterList	char * addr		122	3					
ANR	190	Parameter	char * addr	83:17:1958:1967	122	0	True				
ANR	191	ParameterType	char *		122	0					
ANR	192	Identifier	addr		122	1					
ANR	193	CFGEntryNode	ENTRY		122		True				
ANR	194	CFGExitNode	EXIT		122		True				
ANR	195	Symbol	strlen		122						
ANR	196	Symbol	* count		122						
ANR	197	Symbol	NULL		122						
ANR	198	Symbol	cache_key_exist		122						
ANR	199	Symbol	MAX_TRIES		122						
ANR	200	Symbol	count		122						
ANR	201	Symbol	& count		122						
ANR	202	Symbol	block_list		122						
ANR	203	Symbol	addr		122						
ANR	204	Symbol	addr_len		122						
ANR	205	Function	update_block_list	98:0:2245:2791							
ANR	206	FunctionDef	"update_block_list (char * addr , int err_level)"		205	0					
ANR	207	CompoundStatement		100:0:2294:2791	205	0					
ANR	208	IdentifierDeclStatement	size_t addr_len = strlen ( addr ) ;	101:4:2300:2330	205	0	True				
ANR	209	IdentifierDecl	addr_len = strlen ( addr )		205	0					
ANR	210	IdentifierDeclType	size_t		205	0					
ANR	211	Identifier	addr_len		205	1					
ANR	212	AssignmentExpression	addr_len = strlen ( addr )		205	2		=			
ANR	213	Identifier	addr_len		205	0					
ANR	214	CallExpression	strlen ( addr )		205	1					
ANR	215	Callee	strlen		205	0					
ANR	216	Identifier	strlen		205	0					
ANR	217	ArgumentList	addr		205	1					
ANR	218	Argument	addr		205	0					
ANR	219	Identifier	addr		205	0					
ANR	220	IfStatement	"if ( cache_key_exist ( block_list , addr , addr_len ) )"		205	1					
ANR	221	Condition	"cache_key_exist ( block_list , addr , addr_len )"	103:8:2341:2383	205	0	True				
ANR	222	CallExpression	"cache_key_exist ( block_list , addr , addr_len )"		205	0					
ANR	223	Callee	cache_key_exist		205	0					
ANR	224	Identifier	cache_key_exist		205	0					
ANR	225	ArgumentList	block_list		205	1					
ANR	226	Argument	block_list		205	0					
ANR	227	Identifier	block_list		205	0					
ANR	228	Argument	addr		205	1					
ANR	229	Identifier	addr		205	0					
ANR	230	Argument	addr_len		205	2					
ANR	231	Identifier	addr_len		205	0					
ANR	232	CompoundStatement		5:8:101:118	205	1					
ANR	233	IdentifierDeclStatement	int * count = NULL ;	104:8:2396:2413	205	0	True				
ANR	234	IdentifierDecl	* count = NULL		205	0					
ANR	235	IdentifierDeclType	int *		205	0					
ANR	236	Identifier	count		205	1					
ANR	237	AssignmentExpression	* count = NULL		205	2		=			
ANR	238	Identifier	NULL		205	0					
ANR	239	Identifier	NULL		205	1					
ANR	240	ExpressionStatement	"cache_lookup ( block_list , addr , addr_len , & count )"	105:8:2423:2471	205	1	True				
ANR	241	CallExpression	"cache_lookup ( block_list , addr , addr_len , & count )"		205	0					
ANR	242	Callee	cache_lookup		205	0					
ANR	243	Identifier	cache_lookup		205	0					
ANR	244	ArgumentList	block_list		205	1					
ANR	245	Argument	block_list		205	0					
ANR	246	Identifier	block_list		205	0					
ANR	247	Argument	addr		205	1					
ANR	248	Identifier	addr		205	0					
ANR	249	Argument	addr_len		205	2					
ANR	250	Identifier	addr_len		205	0					
ANR	251	Argument	& count		205	3					
ANR	252	UnaryOperationExpression	& count		205	0					
ANR	253	UnaryOperator	&		205	0					
ANR	254	Identifier	count		205	1					
ANR	255	IfStatement	if ( count != NULL )		205	2					
ANR	256	Condition	count != NULL	106:12:2485:2497	205	0	True				
ANR	257	EqualityExpression	count != NULL		205	0		!=			
ANR	258	Identifier	count		205	0					
ANR	259	Identifier	NULL		205	1					
ANR	260	CompoundStatement		7:27:205:205	205	1					
ANR	261	IfStatement	if ( * count > MAX_TRIES )		205	0					
ANR	262	Condition	* count > MAX_TRIES	107:16:2518:2535	205	0	True				
ANR	263	RelationalExpression	* count > MAX_TRIES		205	0		>			
ANR	264	UnaryOperationExpression	* count		205	0					
ANR	265	UnaryOperator	*		205	0					
ANR	266	Identifier	count		205	1					
ANR	267	Identifier	MAX_TRIES		205	1					
ANR	268	ReturnStatement	return 1 ;	108:16:2554:2562	205	1	True				
ANR	269	PrimaryExpression	1		205	0					
ANR	270	ExpressionStatement	( * count ) += err_level	109:12:2576:2597	205	1	True				
ANR	271	AssignmentExpression	( * count ) += err_level		205	0		+=			
ANR	272	UnaryOperationExpression	* count		205	0					
ANR	273	UnaryOperator	*		205	0					
ANR	274	Identifier	count		205	1					
ANR	275	Identifier	err_level		205	1					
ANR	276	ElseStatement	else		205	0					
ANR	277	IfStatement	if ( err_level > 0 )		205	0					
ANR	278	Condition	err_level > 0	111:15:2624:2636	205	0	True				
ANR	279	RelationalExpression	err_level > 0		205	0		>			
ANR	280	Identifier	err_level		205	0					
ANR	281	PrimaryExpression	0		205	1					
ANR	282	CompoundStatement		13:8:354:396	205	1					
ANR	283	IdentifierDeclStatement	int * count = ( int * ) ss_malloc ( sizeof ( int ) ) ;	112:8:2649:2691	205	0	True				
ANR	284	IdentifierDecl	* count = ( int * ) ss_malloc ( sizeof ( int ) )		205	0					
ANR	285	IdentifierDeclType	int *		205	0					
ANR	286	Identifier	count		205	1					
ANR	287	AssignmentExpression	* count = ( int * ) ss_malloc ( sizeof ( int ) )		205	2		=			
ANR	288	Identifier	count		205	0					
ANR	289	CastExpression	( int * ) ss_malloc ( sizeof ( int ) )		205	1					
ANR	290	CastTarget	int *		205	0					
ANR	291	CallExpression	ss_malloc ( sizeof ( int ) )		205	1					
ANR	292	Callee	ss_malloc		205	0					
ANR	293	Identifier	ss_malloc		205	0					
ANR	294	ArgumentList	sizeof ( int )		205	1					
ANR	295	Argument	sizeof ( int )		205	0					
ANR	296	SizeofExpression	sizeof ( int )		205	0					
ANR	297	Sizeof	sizeof		205	0					
ANR	298	SizeofOperand	int		205	1					
ANR	299	ExpressionStatement	* count = 1	113:8:2701:2711	205	1	True				
ANR	300	AssignmentExpression	* count = 1		205	0		=			
ANR	301	UnaryOperationExpression	* count		205	0					
ANR	302	UnaryOperator	*		205	0					
ANR	303	Identifier	count		205	1					
ANR	304	PrimaryExpression	1		205	1					
ANR	305	ExpressionStatement	"cache_insert ( block_list , addr , addr_len , count )"	114:8:2721:2768	205	2	True				
ANR	306	CallExpression	"cache_insert ( block_list , addr , addr_len , count )"		205	0					
ANR	307	Callee	cache_insert		205	0					
ANR	308	Identifier	cache_insert		205	0					
ANR	309	ArgumentList	block_list		205	1					
ANR	310	Argument	block_list		205	0					
ANR	311	Identifier	block_list		205	0					
ANR	312	Argument	addr		205	1					
ANR	313	Identifier	addr		205	0					
ANR	314	Argument	addr_len		205	2					
ANR	315	Identifier	addr_len		205	0					
ANR	316	Argument	count		205	3					
ANR	317	Identifier	count		205	0					
ANR	318	ReturnStatement	return 0 ;	117:4:2781:2789	205	2	True				
ANR	319	PrimaryExpression	0		205	0					
ANR	320	ReturnType	int		205	1					
ANR	321	Identifier	update_block_list		205	2					
ANR	322	ParameterList	"char * addr , int err_level"		205	3					
ANR	323	Parameter	char * addr	99:18:2267:2276	205	0	True				
ANR	324	ParameterType	char *		205	0					
ANR	325	Identifier	addr		205	1					
ANR	326	Parameter	int err_level	99:30:2279:2291	205	1	True				
ANR	327	ParameterType	int		205	0					
ANR	328	Identifier	err_level		205	1					
ANR	329	CFGEntryNode	ENTRY		205		True				
ANR	330	CFGExitNode	EXIT		205		True				
ANR	331	Symbol	err_level		205						
ANR	332	Symbol	strlen		205						
ANR	333	Symbol	* count		205						
ANR	334	Symbol	NULL		205						
ANR	335	Symbol	cache_key_exist		205						
ANR	336	Symbol	MAX_TRIES		205						
ANR	337	Symbol	count		205						
ANR	338	Symbol	ss_malloc		205						
ANR	339	Symbol	& count		205						
ANR	340	Symbol	block_list		205						
ANR	341	Symbol	addr		205						
ANR	342	Symbol	addr_len		205						
ANR	343	Function	parse_addr_cidr	120:0:2794:3205							
ANR	344	FunctionDef	"parse_addr_cidr (const char * str , char * host , int * cidr)"		343	0					
ANR	345	CompoundStatement		122:0:2862:3205	343	0					
ANR	346	IdentifierDeclStatement	int ret = - 1 ;	123:4:2868:2880	343	0	True				
ANR	347	IdentifierDecl	ret = - 1		343	0					
ANR	348	IdentifierDeclType	int		343	0					
ANR	349	Identifier	ret		343	1					
ANR	350	AssignmentExpression	ret = - 1		343	2		=			
ANR	351	Identifier	ret		343	0					
ANR	352	UnaryOperationExpression	- 1		343	1					
ANR	353	UnaryOperator	-		343	0					
ANR	354	PrimaryExpression	1		343	1					
ANR	355	IdentifierDeclStatement	char * pch ;	124:4:2886:2895	343	1	True				
ANR	356	IdentifierDecl	* pch		343	0					
ANR	357	IdentifierDeclType	char *		343	0					
ANR	358	Identifier	pch		343	1					
ANR	359	ExpressionStatement	"pch = strchr ( str , '/' )"	126:4:2902:2924	343	2	True				
ANR	360	AssignmentExpression	"pch = strchr ( str , '/' )"		343	0		=			
ANR	361	Identifier	pch		343	0					
ANR	362	CallExpression	"strchr ( str , '/' )"		343	1					
ANR	363	Callee	strchr		343	0					
ANR	364	Identifier	strchr		343	0					
ANR	365	ArgumentList	str		343	1					
ANR	366	Argument	str		343	0					
ANR	367	Identifier	str		343	0					
ANR	368	Argument	'/'		343	1					
ANR	369	PrimaryExpression	'/'		343	0					
ANR	370	WhileStatement	while ( pch != NULL )		343	3					
ANR	371	Condition	pch != NULL	127:11:2937:2947	343	0	True				
ANR	372	EqualityExpression	pch != NULL		343	0		!=			
ANR	373	Identifier	pch		343	0					
ANR	374	Identifier	NULL		343	1					
ANR	375	CompoundStatement		6:24:87:87	343	1					
ANR	376	ExpressionStatement	ret = pch - str	128:8:2960:2975	343	0	True				
ANR	377	AssignmentExpression	ret = pch - str		343	0		=			
ANR	378	Identifier	ret		343	0					
ANR	379	AdditiveExpression	pch - str		343	1		-			
ANR	380	Identifier	pch		343	0					
ANR	381	Identifier	str		343	1					
ANR	382	ExpressionStatement	"pch = strchr ( pch + 1 , '/' )"	129:8:2985:3011	343	1	True				
ANR	383	AssignmentExpression	"pch = strchr ( pch + 1 , '/' )"		343	0		=			
ANR	384	Identifier	pch		343	0					
ANR	385	CallExpression	"strchr ( pch + 1 , '/' )"		343	1					
ANR	386	Callee	strchr		343	0					
ANR	387	Identifier	strchr		343	0					
ANR	388	ArgumentList	pch + 1		343	1					
ANR	389	Argument	pch + 1		343	0					
ANR	390	AdditiveExpression	pch + 1		343	0		+			
ANR	391	Identifier	pch		343	0					
ANR	392	PrimaryExpression	1		343	1					
ANR	393	Argument	'/'		343	1					
ANR	394	PrimaryExpression	'/'		343	0					
ANR	395	IfStatement	if ( ret == - 1 )		343	4					
ANR	396	Condition	ret == - 1	131:8:3027:3035	343	0	True				
ANR	397	EqualityExpression	ret == - 1		343	0		==			
ANR	398	Identifier	ret		343	0					
ANR	399	UnaryOperationExpression	- 1		343	1					
ANR	400	UnaryOperator	-		343	0					
ANR	401	PrimaryExpression	1		343	1					
ANR	402	CompoundStatement		10:19:175:175	343	1					
ANR	403	ExpressionStatement	"strcpy ( host , str )"	132:8:3048:3065	343	0	True				
ANR	404	CallExpression	"strcpy ( host , str )"		343	0					
ANR	405	Callee	strcpy		343	0					
ANR	406	Identifier	strcpy		343	0					
ANR	407	ArgumentList	host		343	1					
ANR	408	Argument	host		343	0					
ANR	409	Identifier	host		343	0					
ANR	410	Argument	str		343	1					
ANR	411	Identifier	str		343	0					
ANR	412	ExpressionStatement	* cidr = - 1	133:8:3075:3085	343	1	True				
ANR	413	AssignmentExpression	* cidr = - 1		343	0		=			
ANR	414	UnaryOperationExpression	* cidr		343	0					
ANR	415	UnaryOperator	*		343	0					
ANR	416	Identifier	cidr		343	1					
ANR	417	UnaryOperationExpression	- 1		343	1					
ANR	418	UnaryOperator	-		343	0					
ANR	419	PrimaryExpression	1		343	1					
ANR	420	ElseStatement	else		343	0					
ANR	421	CompoundStatement		13:11:235:235	343	0					
ANR	422	ExpressionStatement	"memcpy ( host , str , ret )"	135:8:3108:3130	343	0	True				
ANR	423	CallExpression	"memcpy ( host , str , ret )"		343	0					
ANR	424	Callee	memcpy		343	0					
ANR	425	Identifier	memcpy		343	0					
ANR	426	ArgumentList	host		343	1					
ANR	427	Argument	host		343	0					
ANR	428	Identifier	host		343	0					
ANR	429	Argument	str		343	1					
ANR	430	Identifier	str		343	0					
ANR	431	Argument	ret		343	2					
ANR	432	Identifier	ret		343	0					
ANR	433	ExpressionStatement	host [ ret ] = '\\0'	136:8:3140:3156	343	1	True				
ANR	434	AssignmentExpression	host [ ret ] = '\\0'		343	0		=			
ANR	435	ArrayIndexing	host [ ret ]		343	0					
ANR	436	Identifier	host		343	0					
ANR	437	Identifier	ret		343	1					
ANR	438	PrimaryExpression	'\\0'		343	1					
ANR	439	ExpressionStatement	* cidr = atoi ( str + ret + 1 )	137:8:3166:3197	343	2	True				
ANR	440	AssignmentExpression	* cidr = atoi ( str + ret + 1 )		343	0		=			
ANR	441	UnaryOperationExpression	* cidr		343	0					
ANR	442	UnaryOperator	*		343	0					
ANR	443	Identifier	cidr		343	1					
ANR	444	CallExpression	atoi ( str + ret + 1 )		343	1					
ANR	445	Callee	atoi		343	0					
ANR	446	Identifier	atoi		343	0					
ANR	447	ArgumentList	str + ret + 1		343	1					
ANR	448	Argument	str + ret + 1		343	0					
ANR	449	AdditiveExpression	str + ret + 1		343	0		+			
ANR	450	Identifier	str		343	0					
ANR	451	AdditiveExpression	ret + 1		343	1		+			
ANR	452	Identifier	ret		343	0					
ANR	453	PrimaryExpression	1		343	1					
ANR	454	ReturnType	static void		343	1					
ANR	455	Identifier	parse_addr_cidr		343	2					
ANR	456	ParameterList	"const char * str , char * host , int * cidr"		343	3					
ANR	457	Parameter	const char * str	121:16:2822:2836	343	0	True				
ANR	458	ParameterType	const char *		343	0					
ANR	459	Identifier	str		343	1					
ANR	460	Parameter	char * host	121:33:2839:2848	343	1	True				
ANR	461	ParameterType	char *		343	0					
ANR	462	Identifier	host		343	1					
ANR	463	Parameter	int * cidr	121:45:2851:2859	343	2	True				
ANR	464	ParameterType	int *		343	0					
ANR	465	Identifier	cidr		343	1					
ANR	466	CFGEntryNode	ENTRY		343		True				
ANR	467	CFGExitNode	EXIT		343		True				
ANR	468	Symbol	str		343						
ANR	469	Symbol	ret		343						
ANR	470	Symbol	atoi		343						
ANR	471	Symbol	* host		343						
ANR	472	Symbol	NULL		343						
ANR	473	Symbol	pch		343						
ANR	474	Symbol	* cidr		343						
ANR	475	Symbol	host		343						
ANR	476	Symbol	strchr		343						
ANR	477	Symbol	cidr		343						
ANR	478	Symbol	* ret		343						
ANR	479	Function	trimwhitespace	141:0:3208:3599							
ANR	480	FunctionDef	trimwhitespace (char * str)		479	0					
ANR	481	CompoundStatement		143:0:3241:3599	479	0					
ANR	482	IdentifierDeclStatement	char * end ;	144:4:3247:3256	479	0	True				
ANR	483	IdentifierDecl	* end		479	0					
ANR	484	IdentifierDeclType	char *		479	0					
ANR	485	Identifier	end		479	1					
ANR	486	WhileStatement	while ( isspace ( ( unsigned char ) * str ) )		479	1					
ANR	487	Condition	isspace ( ( unsigned char ) * str )	147:11:3296:3323	479	0	True				
ANR	488	CallExpression	isspace ( ( unsigned char ) * str )		479	0					
ANR	489	Callee	isspace		479	0					
ANR	490	Identifier	isspace		479	0					
ANR	491	ArgumentList	( unsigned char ) * str		479	1					
ANR	492	Argument	( unsigned char ) * str		479	0					
ANR	493	CastExpression	( unsigned char ) * str		479	0					
ANR	494	CastTarget	unsigned char		479	0					
ANR	495	UnaryOperationExpression	* str		479	1					
ANR	496	UnaryOperator	*		479	0					
ANR	497	Identifier	str		479	1					
ANR	498	ExpressionStatement	str ++	148:8:3334:3339	479	1	True				
ANR	499	PostIncDecOperationExpression	str ++		479	0					
ANR	500	Identifier	str		479	0					
ANR	501	IncDec	++		479	1					
ANR	502	IfStatement	if ( * str == 0 )		479	2					
ANR	503	Condition	* str == 0	150:8:3350:3358	479	0	True				
ANR	504	EqualityExpression	* str == 0		479	0		==			
ANR	505	UnaryOperationExpression	* str		479	0					
ANR	506	UnaryOperator	*		479	0					
ANR	507	Identifier	str		479	1					
ANR	508	PrimaryExpression	0		479	1					
ANR	509	ReturnStatement	return str ;	151:8:3386:3396	479	1	True				
ANR	510	Identifier	str		479	0					
ANR	511	ExpressionStatement	end = str + strlen ( str ) - 1	154:4:3430:3457	479	3	True				
ANR	512	AssignmentExpression	end = str + strlen ( str ) - 1		479	0		=			
ANR	513	Identifier	end		479	0					
ANR	514	AdditiveExpression	str + strlen ( str ) - 1		479	1		+			
ANR	515	Identifier	str		479	0					
ANR	516	AdditiveExpression	strlen ( str ) - 1		479	1		-			
ANR	517	CallExpression	strlen ( str )		479	0					
ANR	518	Callee	strlen		479	0					
ANR	519	Identifier	strlen		479	0					
ANR	520	ArgumentList	str		479	1					
ANR	521	Argument	str		479	0					
ANR	522	Identifier	str		479	0					
ANR	523	PrimaryExpression	1		479	1					
ANR	524	WhileStatement	while ( end > str && isspace ( ( unsigned char ) * end ) )		479	4					
ANR	525	Condition	end > str && isspace ( ( unsigned char ) * end )	155:11:3470:3510	479	0	True				
ANR	526	AndExpression	end > str && isspace ( ( unsigned char ) * end )		479	0		&&			
ANR	527	RelationalExpression	end > str		479	0		>			
ANR	528	Identifier	end		479	0					
ANR	529	Identifier	str		479	1					
ANR	530	CallExpression	isspace ( ( unsigned char ) * end )		479	1					
ANR	531	Callee	isspace		479	0					
ANR	532	Identifier	isspace		479	0					
ANR	533	ArgumentList	( unsigned char ) * end		479	1					
ANR	534	Argument	( unsigned char ) * end		479	0					
ANR	535	CastExpression	( unsigned char ) * end		479	0					
ANR	536	CastTarget	unsigned char		479	0					
ANR	537	UnaryOperationExpression	* end		479	1					
ANR	538	UnaryOperator	*		479	0					
ANR	539	Identifier	end		479	1					
ANR	540	ExpressionStatement	end --	156:8:3521:3526	479	1	True				
ANR	541	PostIncDecOperationExpression	end --		479	0					
ANR	542	Identifier	end		479	0					
ANR	543	IncDec	--		479	1					
ANR	544	ExpressionStatement	* ( end + 1 ) = 0	159:4:3566:3580	479	5	True				
ANR	545	AssignmentExpression	* ( end + 1 ) = 0		479	0		=			
ANR	546	UnaryOperationExpression	* ( end + 1 )		479	0					
ANR	547	UnaryOperator	*		479	0					
ANR	548	AdditiveExpression	end + 1		479	1		+			
ANR	549	Identifier	end		479	0					
ANR	550	PrimaryExpression	1		479	1					
ANR	551	PrimaryExpression	0		479	1					
ANR	552	ReturnStatement	return str ;	161:4:3587:3597	479	6	True				
ANR	553	Identifier	str		479	0					
ANR	554	ReturnType	char *		479	1					
ANR	555	Identifier	trimwhitespace		479	2					
ANR	556	ParameterList	char * str		479	3					
ANR	557	Parameter	char * str	142:15:3230:3238	479	0	True				
ANR	558	ParameterType	char *		479	0					
ANR	559	Identifier	str		479	1					
ANR	560	CFGEntryNode	ENTRY		479		True				
ANR	561	CFGExitNode	EXIT		479		True				
ANR	562	Symbol	str		479						
ANR	563	Symbol	strlen		479						
ANR	564	Symbol	* ( end + 1 )		479						
ANR	565	Symbol	isspace		479						
ANR	566	Symbol	end		479						
ANR	567	Symbol	* end		479						
ANR	568	Symbol	* str		479						
ANR	569	Function	init_acl	164:0:3602:7638							
ANR	570	FunctionDef	init_acl (const char * path)		569	0					
ANR	571	CompoundStatement		166:0:3633:7638	569	0					
ANR	572	ExpressionStatement	ipset_init_library ( )	168:4:3663:3683	569	0	True				
ANR	573	CallExpression	ipset_init_library ( )		569	0					
ANR	574	Callee	ipset_init_library		569	0					
ANR	575	Identifier	ipset_init_library		569	0					
ANR	576	ArgumentList			569	1					
ANR	577	ExpressionStatement	ipset_init ( & white_list_ipv4 )	170:4:3690:3718	569	1	True				
ANR	578	CallExpression	ipset_init ( & white_list_ipv4 )		569	0					
ANR	579	Callee	ipset_init		569	0					
ANR	580	Identifier	ipset_init		569	0					
ANR	581	ArgumentList	& white_list_ipv4		569	1					
ANR	582	Argument	& white_list_ipv4		569	0					
ANR	583	UnaryOperationExpression	& white_list_ipv4		569	0					
ANR	584	UnaryOperator	&		569	0					
ANR	585	Identifier	white_list_ipv4		569	1					
ANR	586	ExpressionStatement	ipset_init ( & white_list_ipv6 )	171:4:3724:3752	569	2	True				
ANR	587	CallExpression	ipset_init ( & white_list_ipv6 )		569	0					
ANR	588	Callee	ipset_init		569	0					
ANR	589	Identifier	ipset_init		569	0					
ANR	590	ArgumentList	& white_list_ipv6		569	1					
ANR	591	Argument	& white_list_ipv6		569	0					
ANR	592	UnaryOperationExpression	& white_list_ipv6		569	0					
ANR	593	UnaryOperator	&		569	0					
ANR	594	Identifier	white_list_ipv6		569	1					
ANR	595	ExpressionStatement	ipset_init ( & black_list_ipv4 )	172:4:3758:3786	569	3	True				
ANR	596	CallExpression	ipset_init ( & black_list_ipv4 )		569	0					
ANR	597	Callee	ipset_init		569	0					
ANR	598	Identifier	ipset_init		569	0					
ANR	599	ArgumentList	& black_list_ipv4		569	1					
ANR	600	Argument	& black_list_ipv4		569	0					
ANR	601	UnaryOperationExpression	& black_list_ipv4		569	0					
ANR	602	UnaryOperator	&		569	0					
ANR	603	Identifier	black_list_ipv4		569	1					
ANR	604	ExpressionStatement	ipset_init ( & black_list_ipv6 )	173:4:3792:3820	569	4	True				
ANR	605	CallExpression	ipset_init ( & black_list_ipv6 )		569	0					
ANR	606	Callee	ipset_init		569	0					
ANR	607	Identifier	ipset_init		569	0					
ANR	608	ArgumentList	& black_list_ipv6		569	1					
ANR	609	Argument	& black_list_ipv6		569	0					
ANR	610	UnaryOperationExpression	& black_list_ipv6		569	0					
ANR	611	UnaryOperator	&		569	0					
ANR	612	Identifier	black_list_ipv6		569	1					
ANR	613	ExpressionStatement	ipset_init ( & outbound_block_list_ipv4 )	174:4:3826:3863	569	5	True				
ANR	614	CallExpression	ipset_init ( & outbound_block_list_ipv4 )		569	0					
ANR	615	Callee	ipset_init		569	0					
ANR	616	Identifier	ipset_init		569	0					
ANR	617	ArgumentList	& outbound_block_list_ipv4		569	1					
ANR	618	Argument	& outbound_block_list_ipv4		569	0					
ANR	619	UnaryOperationExpression	& outbound_block_list_ipv4		569	0					
ANR	620	UnaryOperator	&		569	0					
ANR	621	Identifier	outbound_block_list_ipv4		569	1					
ANR	622	ExpressionStatement	ipset_init ( & outbound_block_list_ipv6 )	175:4:3869:3906	569	6	True				
ANR	623	CallExpression	ipset_init ( & outbound_block_list_ipv6 )		569	0					
ANR	624	Callee	ipset_init		569	0					
ANR	625	Identifier	ipset_init		569	0					
ANR	626	ArgumentList	& outbound_block_list_ipv6		569	1					
ANR	627	Argument	& outbound_block_list_ipv6		569	0					
ANR	628	UnaryOperationExpression	& outbound_block_list_ipv6		569	0					
ANR	629	UnaryOperator	&		569	0					
ANR	630	Identifier	outbound_block_list_ipv6		569	1					
ANR	631	ExpressionStatement	cork_dllist_init ( & black_list_rules )	177:4:3913:3948	569	7	True				
ANR	632	CallExpression	cork_dllist_init ( & black_list_rules )		569	0					
ANR	633	Callee	cork_dllist_init		569	0					
ANR	634	Identifier	cork_dllist_init		569	0					
ANR	635	ArgumentList	& black_list_rules		569	1					
ANR	636	Argument	& black_list_rules		569	0					
ANR	637	UnaryOperationExpression	& black_list_rules		569	0					
ANR	638	UnaryOperator	&		569	0					
ANR	639	Identifier	black_list_rules		569	1					
ANR	640	ExpressionStatement	cork_dllist_init ( & white_list_rules )	178:4:3954:3989	569	8	True				
ANR	641	CallExpression	cork_dllist_init ( & white_list_rules )		569	0					
ANR	642	Callee	cork_dllist_init		569	0					
ANR	643	Identifier	cork_dllist_init		569	0					
ANR	644	ArgumentList	& white_list_rules		569	1					
ANR	645	Argument	& white_list_rules		569	0					
ANR	646	UnaryOperationExpression	& white_list_rules		569	0					
ANR	647	UnaryOperator	&		569	0					
ANR	648	Identifier	white_list_rules		569	1					
ANR	649	ExpressionStatement	cork_dllist_init ( & outbound_block_list_rules )	179:4:3995:4039	569	9	True				
ANR	650	CallExpression	cork_dllist_init ( & outbound_block_list_rules )		569	0					
ANR	651	Callee	cork_dllist_init		569	0					
ANR	652	Identifier	cork_dllist_init		569	0					
ANR	653	ArgumentList	& outbound_block_list_rules		569	1					
ANR	654	Argument	& outbound_block_list_rules		569	0					
ANR	655	UnaryOperationExpression	& outbound_block_list_rules		569	0					
ANR	656	UnaryOperator	&		569	0					
ANR	657	Identifier	outbound_block_list_rules		569	1					
ANR	658	IdentifierDeclStatement	struct ip_set * list_ipv4 = & black_list_ipv4 ;	181:4:4046:4090	569	10	True				
ANR	659	IdentifierDecl	* list_ipv4 = & black_list_ipv4		569	0					
ANR	660	IdentifierDeclType	struct ip_set *		569	0					
ANR	661	Identifier	list_ipv4		569	1					
ANR	662	AssignmentExpression	* list_ipv4 = & black_list_ipv4		569	2		=			
ANR	663	Identifier	list_ipv4		569	0					
ANR	664	UnaryOperationExpression	& black_list_ipv4		569	1					
ANR	665	UnaryOperator	&		569	0					
ANR	666	Identifier	black_list_ipv4		569	1					
ANR	667	IdentifierDeclStatement	struct ip_set * list_ipv6 = & black_list_ipv6 ;	182:4:4096:4140	569	11	True				
ANR	668	IdentifierDecl	* list_ipv6 = & black_list_ipv6		569	0					
ANR	669	IdentifierDeclType	struct ip_set *		569	0					
ANR	670	Identifier	list_ipv6		569	1					
ANR	671	AssignmentExpression	* list_ipv6 = & black_list_ipv6		569	2		=			
ANR	672	Identifier	list_ipv6		569	0					
ANR	673	UnaryOperationExpression	& black_list_ipv6		569	1					
ANR	674	UnaryOperator	&		569	0					
ANR	675	Identifier	black_list_ipv6		569	1					
ANR	676	IdentifierDeclStatement	struct cork_dllist * rules = & black_list_rules ;	183:4:4146:4191	569	12	True				
ANR	677	IdentifierDecl	* rules = & black_list_rules		569	0					
ANR	678	IdentifierDeclType	struct cork_dllist *		569	0					
ANR	679	Identifier	rules		569	1					
ANR	680	AssignmentExpression	* rules = & black_list_rules		569	2		=			
ANR	681	Identifier	rules		569	0					
ANR	682	UnaryOperationExpression	& black_list_rules		569	1					
ANR	683	UnaryOperator	&		569	0					
ANR	684	Identifier	black_list_rules		569	1					
ANR	685	IdentifierDeclStatement	"FILE * f = fopen ( path , ""r"" ) ;"	185:4:4198:4224	569	13	True				
ANR	686	IdentifierDecl	"* f = fopen ( path , ""r"" )"		569	0					
ANR	687	IdentifierDeclType	FILE *		569	0					
ANR	688	Identifier	f		569	1					
ANR	689	AssignmentExpression	"* f = fopen ( path , ""r"" )"		569	2		=			
ANR	690	Identifier	f		569	0					
ANR	691	CallExpression	"fopen ( path , ""r"" )"		569	1					
ANR	692	Callee	fopen		569	0					
ANR	693	Identifier	fopen		569	0					
ANR	694	ArgumentList	path		569	1					
ANR	695	Argument	path		569	0					
ANR	696	Identifier	path		569	0					
ANR	697	Argument	"""r"""		569	1					
ANR	698	PrimaryExpression	"""r"""		569	0					
ANR	699	IfStatement	if ( f == NULL )		569	14					
ANR	700	Condition	f == NULL	186:8:4234:4242	569	0	True				
ANR	701	EqualityExpression	f == NULL		569	0		==			
ANR	702	Identifier	f		569	0					
ANR	703	Identifier	NULL		569	1					
ANR	704	CompoundStatement		21:19:611:611	569	1					
ANR	705	ExpressionStatement	"LOGE ( ""Invalid acl path."" )"	187:8:4255:4280	569	0	True				
ANR	706	CallExpression	"LOGE ( ""Invalid acl path."" )"		569	0					
ANR	707	Callee	LOGE		569	0					
ANR	708	Identifier	LOGE		569	0					
ANR	709	ArgumentList	"""Invalid acl path."""		569	1					
ANR	710	Argument	"""Invalid acl path."""		569	0					
ANR	711	PrimaryExpression	"""Invalid acl path."""		569	0					
ANR	712	ReturnStatement	return - 1 ;	188:8:4290:4299	569	1	True				
ANR	713	UnaryOperationExpression	- 1		569	0					
ANR	714	UnaryOperator	-		569	0					
ANR	715	PrimaryExpression	1		569	1					
ANR	716	IdentifierDeclStatement	char buf [ 257 ] ;	191:4:4312:4325	569	15	True				
ANR	717	IdentifierDecl	buf [ 257 ]		569	0					
ANR	718	IdentifierDeclType	char [ 257 ]		569	0					
ANR	719	Identifier	buf		569	1					
ANR	720	PrimaryExpression	257		569	2					
ANR	721	WhileStatement	while ( ! feof ( f ) )		569	16					
ANR	722	Condition	! feof ( f )	192:11:4338:4345	569	0	True				
ANR	723	UnaryOperationExpression	! feof ( f )		569	0					
ANR	724	UnaryOperator	!		569	0					
ANR	725	CallExpression	feof ( f )		569	1					
ANR	726	Callee	feof		569	0					
ANR	727	Identifier	feof		569	0					
ANR	728	ArgumentList	f		569	1					
ANR	729	Argument	f		569	0					
ANR	730	Identifier	f		569	0					
ANR	731	IfStatement	"if ( fgets ( buf , 256 , f ) )"		569	1					
ANR	732	Condition	"fgets ( buf , 256 , f )"	193:12:4360:4377	569	0	True				
ANR	733	CallExpression	"fgets ( buf , 256 , f )"		569	0					
ANR	734	Callee	fgets		569	0					
ANR	735	Identifier	fgets		569	0					
ANR	736	ArgumentList	buf		569	1					
ANR	737	Argument	buf		569	0					
ANR	738	Identifier	buf		569	0					
ANR	739	Argument	256		569	1					
ANR	740	PrimaryExpression	256		569	0					
ANR	741	Argument	f		569	2					
ANR	742	Identifier	f		569	0					
ANR	743	CompoundStatement		94:12:3132:3167	569	1					
ANR	744	IdentifierDeclStatement	int long_line = 0 ;	195:12:4463:4480	569	0	True				
ANR	745	IdentifierDecl	long_line = 0		569	0					
ANR	746	IdentifierDeclType	int		569	0					
ANR	747	Identifier	long_line		569	1					
ANR	748	AssignmentExpression	long_line = 0		569	2		=			
ANR	749	Identifier	long_line		569	0					
ANR	750	PrimaryExpression	0		569	1					
ANR	751	WhileStatement	while ( ( strlen ( buf ) == 255 ) && ( buf [ 254 ] != '\\n' ) )		569	1					
ANR	752	Condition	( strlen ( buf ) == 255 ) && ( buf [ 254 ] != '\\n' )	196:19:4523:4564	569	0	True				
ANR	753	AndExpression	( strlen ( buf ) == 255 ) && ( buf [ 254 ] != '\\n' )		569	0		&&			
ANR	754	EqualityExpression	strlen ( buf ) == 255		569	0		==			
ANR	755	CallExpression	strlen ( buf )		569	0					
ANR	756	Callee	strlen		569	0					
ANR	757	Identifier	strlen		569	0					
ANR	758	ArgumentList	buf		569	1					
ANR	759	Argument	buf		569	0					
ANR	760	Identifier	buf		569	0					
ANR	761	PrimaryExpression	255		569	1					
ANR	762	EqualityExpression	buf [ 254 ] != '\\n'		569	1		!=			
ANR	763	ArrayIndexing	buf [ 254 ]		569	0					
ANR	764	Identifier	buf		569	0					
ANR	765	PrimaryExpression	254		569	1					
ANR	766	PrimaryExpression	'\\n'		569	1					
ANR	767	CompoundStatement		31:63:933:933	569	1					
ANR	768	ExpressionStatement	long_line = 1	197:16:4585:4598	569	0	True				
ANR	769	AssignmentExpression	long_line = 1		569	0		=			
ANR	770	Identifier	long_line		569	0					
ANR	771	PrimaryExpression	1		569	1					
ANR	772	ExpressionStatement	"LOGE ( ""Discarding long ACL content: %s"" , buf )"	198:16:4616:4660	569	1	True				
ANR	773	CallExpression	"LOGE ( ""Discarding long ACL content: %s"" , buf )"		569	0					
ANR	774	Callee	LOGE		569	0					
ANR	775	Identifier	LOGE		569	0					
ANR	776	ArgumentList	"""Discarding long ACL content: %s"""		569	1					
ANR	777	Argument	"""Discarding long ACL content: %s"""		569	0					
ANR	778	PrimaryExpression	"""Discarding long ACL content: %s"""		569	0					
ANR	779	Argument	buf		569	1					
ANR	780	Identifier	buf		569	0					
ANR	781	IfStatement	"if ( fgets ( buf , 256 , f ) == NULL )"		569	2					
ANR	782	Condition	"fgets ( buf , 256 , f ) == NULL"	199:20:4682:4707	569	0	True				
ANR	783	EqualityExpression	"fgets ( buf , 256 , f ) == NULL"		569	0		==			
ANR	784	CallExpression	"fgets ( buf , 256 , f )"		569	0					
ANR	785	Callee	fgets		569	0					
ANR	786	Identifier	fgets		569	0					
ANR	787	ArgumentList	buf		569	1					
ANR	788	Argument	buf		569	0					
ANR	789	Identifier	buf		569	0					
ANR	790	Argument	256		569	1					
ANR	791	PrimaryExpression	256		569	0					
ANR	792	Argument	f		569	2					
ANR	793	Identifier	f		569	0					
ANR	794	Identifier	NULL		569	1					
ANR	795	CompoundStatement		34:48:1076:1076	569	1					
ANR	796	ExpressionStatement	long_line = 2	200:20:4732:4745	569	0	True				
ANR	797	AssignmentExpression	long_line = 2		569	0		=			
ANR	798	Identifier	long_line		569	0					
ANR	799	PrimaryExpression	2		569	1					
ANR	800	BreakStatement	break ;	201:20:4767:4772	569	1	True				
ANR	801	IfStatement	if ( long_line )		569	2					
ANR	802	Condition	long_line	204:16:4822:4830	569	0	True				
ANR	803	Identifier	long_line		569	0					
ANR	804	CompoundStatement		39:27:1199:1199	569	1					
ANR	805	IfStatement	if ( long_line == 1 )		569	0					
ANR	806	Condition	long_line == 1	205:20:4855:4868	569	0	True				
ANR	807	EqualityExpression	long_line == 1		569	0		==			
ANR	808	Identifier	long_line		569	0					
ANR	809	PrimaryExpression	1		569	1					
ANR	810	CompoundStatement		40:36:1237:1237	569	1					
ANR	811	ExpressionStatement	"LOGE ( ""Discarding long ACL content: %s"" , buf )"	206:20:4893:4937	569	0	True				
ANR	812	CallExpression	"LOGE ( ""Discarding long ACL content: %s"" , buf )"		569	0					
ANR	813	Callee	LOGE		569	0					
ANR	814	Identifier	LOGE		569	0					
ANR	815	ArgumentList	"""Discarding long ACL content: %s"""		569	1					
ANR	816	Argument	"""Discarding long ACL content: %s"""		569	0					
ANR	817	PrimaryExpression	"""Discarding long ACL content: %s"""		569	0					
ANR	818	Argument	buf		569	1					
ANR	819	Identifier	buf		569	0					
ANR	820	ContinueStatement	continue ;	208:16:4973:4981	569	1	True				
ANR	821	IdentifierDeclStatement	int len = strlen ( buf ) ;	212:12:5042:5063	569	3	True				
ANR	822	IdentifierDecl	len = strlen ( buf )		569	0					
ANR	823	IdentifierDeclType	int		569	0					
ANR	824	Identifier	len		569	1					
ANR	825	AssignmentExpression	len = strlen ( buf )		569	2		=			
ANR	826	Identifier	len		569	0					
ANR	827	CallExpression	strlen ( buf )		569	1					
ANR	828	Callee	strlen		569	0					
ANR	829	Identifier	strlen		569	0					
ANR	830	ArgumentList	buf		569	1					
ANR	831	Argument	buf		569	0					
ANR	832	Identifier	buf		569	0					
ANR	833	IfStatement	if ( len > 0 && buf [ len - 1 ] == '\\n' )		569	4					
ANR	834	Condition	len > 0 && buf [ len - 1 ] == '\\n'	213:16:5081:5111	569	0	True				
ANR	835	AndExpression	len > 0 && buf [ len - 1 ] == '\\n'		569	0		&&			
ANR	836	RelationalExpression	len > 0		569	0		>			
ANR	837	Identifier	len		569	0					
ANR	838	PrimaryExpression	0		569	1					
ANR	839	EqualityExpression	buf [ len - 1 ] == '\\n'		569	1		==			
ANR	840	ArrayIndexing	buf [ len - 1 ]		569	0					
ANR	841	Identifier	buf		569	0					
ANR	842	AdditiveExpression	len - 1		569	1		-			
ANR	843	Identifier	len		569	0					
ANR	844	PrimaryExpression	1		569	1					
ANR	845	PrimaryExpression	'\\n'		569	1					
ANR	846	CompoundStatement		48:49:1480:1480	569	1					
ANR	847	ExpressionStatement	buf [ len - 1 ] = '\\0'	214:16:5132:5151	569	0	True				
ANR	848	AssignmentExpression	buf [ len - 1 ] = '\\0'		569	0		=			
ANR	849	ArrayIndexing	buf [ len - 1 ]		569	0					
ANR	850	Identifier	buf		569	0					
ANR	851	AdditiveExpression	len - 1		569	1		-			
ANR	852	Identifier	len		569	0					
ANR	853	PrimaryExpression	1		569	1					
ANR	854	PrimaryExpression	'\\0'		569	1					
ANR	855	IdentifierDeclStatement	"char * comment = strchr ( buf , '#' ) ;"	217:12:5180:5212	569	5	True				
ANR	856	IdentifierDecl	"* comment = strchr ( buf , '#' )"		569	0					
ANR	857	IdentifierDeclType	char *		569	0					
ANR	858	Identifier	comment		569	1					
ANR	859	AssignmentExpression	"* comment = strchr ( buf , '#' )"		569	2		=			
ANR	860	Identifier	comment		569	0					
ANR	861	CallExpression	"strchr ( buf , '#' )"		569	1					
ANR	862	Callee	strchr		569	0					
ANR	863	Identifier	strchr		569	0					
ANR	864	ArgumentList	buf		569	1					
ANR	865	Argument	buf		569	0					
ANR	866	Identifier	buf		569	0					
ANR	867	Argument	'#'		569	1					
ANR	868	PrimaryExpression	'#'		569	0					
ANR	869	IfStatement	if ( comment )		569	6					
ANR	870	Condition	comment	218:16:5230:5236	569	0	True				
ANR	871	Identifier	comment		569	0					
ANR	872	CompoundStatement		53:25:1605:1605	569	1					
ANR	873	ExpressionStatement	* comment = '\\0'	219:16:5257:5272	569	0	True				
ANR	874	AssignmentExpression	* comment = '\\0'		569	0		=			
ANR	875	UnaryOperationExpression	* comment		569	0					
ANR	876	UnaryOperator	*		569	0					
ANR	877	Identifier	comment		569	1					
ANR	878	PrimaryExpression	'\\0'		569	1					
ANR	879	IdentifierDeclStatement	char * line = trimwhitespace ( buf ) ;	222:12:5301:5333	569	7	True				
ANR	880	IdentifierDecl	* line = trimwhitespace ( buf )		569	0					
ANR	881	IdentifierDeclType	char *		569	0					
ANR	882	Identifier	line		569	1					
ANR	883	AssignmentExpression	* line = trimwhitespace ( buf )		569	2		=			
ANR	884	Identifier	line		569	0					
ANR	885	CallExpression	trimwhitespace ( buf )		569	1					
ANR	886	Callee	trimwhitespace		569	0					
ANR	887	Identifier	trimwhitespace		569	0					
ANR	888	ArgumentList	buf		569	1					
ANR	889	Argument	buf		569	0					
ANR	890	Identifier	buf		569	0					
ANR	891	IfStatement	if ( strlen ( line ) == 0 )		569	8					
ANR	892	Condition	strlen ( line ) == 0	223:16:5351:5367	569	0	True				
ANR	893	EqualityExpression	strlen ( line ) == 0		569	0		==			
ANR	894	CallExpression	strlen ( line )		569	0					
ANR	895	Callee	strlen		569	0					
ANR	896	Identifier	strlen		569	0					
ANR	897	ArgumentList	line		569	1					
ANR	898	Argument	line		569	0					
ANR	899	Identifier	line		569	0					
ANR	900	PrimaryExpression	0		569	1					
ANR	901	CompoundStatement		58:35:1736:1736	569	1					
ANR	902	ContinueStatement	continue ;	224:16:5388:5396	569	0	True				
ANR	903	IfStatement	"if ( strcmp ( line , ""[outbound_block_list]"" ) == 0 )"		569	9					
ANR	904	Condition	"strcmp ( line , ""[outbound_block_list]"" ) == 0"	227:16:5429:5470	569	0	True				
ANR	905	EqualityExpression	"strcmp ( line , ""[outbound_block_list]"" ) == 0"		569	0		==			
ANR	906	CallExpression	"strcmp ( line , ""[outbound_block_list]"" )"		569	0					
ANR	907	Callee	strcmp		569	0					
ANR	908	Identifier	strcmp		569	0					
ANR	909	ArgumentList	line		569	1					
ANR	910	Argument	line		569	0					
ANR	911	Identifier	line		569	0					
ANR	912	Argument	"""[outbound_block_list]"""		569	1					
ANR	913	PrimaryExpression	"""[outbound_block_list]"""		569	0					
ANR	914	PrimaryExpression	0		569	1					
ANR	915	CompoundStatement		62:60:1839:1839	569	1					
ANR	916	ExpressionStatement	list_ipv4 = & outbound_block_list_ipv4	228:16:5491:5528	569	0	True				
ANR	917	AssignmentExpression	list_ipv4 = & outbound_block_list_ipv4		569	0		=			
ANR	918	Identifier	list_ipv4		569	0					
ANR	919	UnaryOperationExpression	& outbound_block_list_ipv4		569	1					
ANR	920	UnaryOperator	&		569	0					
ANR	921	Identifier	outbound_block_list_ipv4		569	1					
ANR	922	ExpressionStatement	list_ipv6 = & outbound_block_list_ipv6	229:16:5546:5583	569	1	True				
ANR	923	AssignmentExpression	list_ipv6 = & outbound_block_list_ipv6		569	0		=			
ANR	924	Identifier	list_ipv6		569	0					
ANR	925	UnaryOperationExpression	& outbound_block_list_ipv6		569	1					
ANR	926	UnaryOperator	&		569	0					
ANR	927	Identifier	outbound_block_list_ipv6		569	1					
ANR	928	ExpressionStatement	rules = & outbound_block_list_rules	230:16:5601:5639	569	2	True				
ANR	929	AssignmentExpression	rules = & outbound_block_list_rules		569	0		=			
ANR	930	Identifier	rules		569	0					
ANR	931	UnaryOperationExpression	& outbound_block_list_rules		569	1					
ANR	932	UnaryOperator	&		569	0					
ANR	933	Identifier	outbound_block_list_rules		569	1					
ANR	934	ContinueStatement	continue ;	231:16:5657:5665	569	3	True				
ANR	935	ElseStatement	else		569	0					
ANR	936	IfStatement	"if ( strcmp ( line , ""[black_list]"" ) == 0 || strcmp ( line , ""[bypass_list]"" ) == 0 )"		569	0					
ANR	937	Condition	"strcmp ( line , ""[black_list]"" ) == 0 || strcmp ( line , ""[bypass_list]"" ) == 0"	232:23:5690:5783	569	0	True				
ANR	938	OrExpression	"strcmp ( line , ""[black_list]"" ) == 0 || strcmp ( line , ""[bypass_list]"" ) == 0"		569	0		||			
ANR	939	EqualityExpression	"strcmp ( line , ""[black_list]"" ) == 0"		569	0		==			
ANR	940	CallExpression	"strcmp ( line , ""[black_list]"" )"		569	0					
ANR	941	Callee	strcmp		569	0					
ANR	942	Identifier	strcmp		569	0					
ANR	943	ArgumentList	line		569	1					
ANR	944	Argument	line		569	0					
ANR	945	Identifier	line		569	0					
ANR	946	Argument	"""[black_list]"""		569	1					
ANR	947	PrimaryExpression	"""[black_list]"""		569	0					
ANR	948	PrimaryExpression	0		569	1					
ANR	949	EqualityExpression	"strcmp ( line , ""[bypass_list]"" ) == 0"		569	1		==			
ANR	950	CallExpression	"strcmp ( line , ""[bypass_list]"" )"		569	0					
ANR	951	Callee	strcmp		569	0					
ANR	952	Identifier	strcmp		569	0					
ANR	953	ArgumentList	line		569	1					
ANR	954	Argument	line		569	0					
ANR	955	Identifier	line		569	0					
ANR	956	Argument	"""[bypass_list]"""		569	1					
ANR	957	PrimaryExpression	"""[bypass_list]"""		569	0					
ANR	958	PrimaryExpression	0		569	1					
ANR	959	CompoundStatement		68:62:2152:2152	569	1					
ANR	960	ExpressionStatement	list_ipv4 = & black_list_ipv4	234:16:5804:5832	569	0	True				
ANR	961	AssignmentExpression	list_ipv4 = & black_list_ipv4		569	0		=			
ANR	962	Identifier	list_ipv4		569	0					
ANR	963	UnaryOperationExpression	& black_list_ipv4		569	1					
ANR	964	UnaryOperator	&		569	0					
ANR	965	Identifier	black_list_ipv4		569	1					
ANR	966	ExpressionStatement	list_ipv6 = & black_list_ipv6	235:16:5850:5878	569	1	True				
ANR	967	AssignmentExpression	list_ipv6 = & black_list_ipv6		569	0		=			
ANR	968	Identifier	list_ipv6		569	0					
ANR	969	UnaryOperationExpression	& black_list_ipv6		569	1					
ANR	970	UnaryOperator	&		569	0					
ANR	971	Identifier	black_list_ipv6		569	1					
ANR	972	ExpressionStatement	rules = & black_list_rules	236:16:5896:5925	569	2	True				
ANR	973	AssignmentExpression	rules = & black_list_rules		569	0		=			
ANR	974	Identifier	rules		569	0					
ANR	975	UnaryOperationExpression	& black_list_rules		569	1					
ANR	976	UnaryOperator	&		569	0					
ANR	977	Identifier	black_list_rules		569	1					
ANR	978	ContinueStatement	continue ;	237:16:5943:5951	569	3	True				
ANR	979	ElseStatement	else		569	0					
ANR	980	IfStatement	"if ( strcmp ( line , ""[white_list]"" ) == 0 || strcmp ( line , ""[proxy_list]"" ) == 0 )"		569	0					
ANR	981	Condition	"strcmp ( line , ""[white_list]"" ) == 0 || strcmp ( line , ""[proxy_list]"" ) == 0"	238:23:5976:6068	569	0	True				
ANR	982	OrExpression	"strcmp ( line , ""[white_list]"" ) == 0 || strcmp ( line , ""[proxy_list]"" ) == 0"		569	0		||			
ANR	983	EqualityExpression	"strcmp ( line , ""[white_list]"" ) == 0"		569	0		==			
ANR	984	CallExpression	"strcmp ( line , ""[white_list]"" )"		569	0					
ANR	985	Callee	strcmp		569	0					
ANR	986	Identifier	strcmp		569	0					
ANR	987	ArgumentList	line		569	1					
ANR	988	Argument	line		569	0					
ANR	989	Identifier	line		569	0					
ANR	990	Argument	"""[white_list]"""		569	1					
ANR	991	PrimaryExpression	"""[white_list]"""		569	0					
ANR	992	PrimaryExpression	0		569	1					
ANR	993	EqualityExpression	"strcmp ( line , ""[proxy_list]"" ) == 0"		569	1		==			
ANR	994	CallExpression	"strcmp ( line , ""[proxy_list]"" )"		569	0					
ANR	995	Callee	strcmp		569	0					
ANR	996	Identifier	strcmp		569	0					
ANR	997	ArgumentList	line		569	1					
ANR	998	Argument	line		569	0					
ANR	999	Identifier	line		569	0					
ANR	1000	Argument	"""[proxy_list]"""		569	1					
ANR	1001	PrimaryExpression	"""[proxy_list]"""		569	0					
ANR	1002	PrimaryExpression	0		569	1					
ANR	1003	CompoundStatement		74:61:2437:2437	569	1					
ANR	1004	ExpressionStatement	list_ipv4 = & white_list_ipv4	240:16:6089:6117	569	0	True				
ANR	1005	AssignmentExpression	list_ipv4 = & white_list_ipv4		569	0		=			
ANR	1006	Identifier	list_ipv4		569	0					
ANR	1007	UnaryOperationExpression	& white_list_ipv4		569	1					
ANR	1008	UnaryOperator	&		569	0					
ANR	1009	Identifier	white_list_ipv4		569	1					
ANR	1010	ExpressionStatement	list_ipv6 = & white_list_ipv6	241:16:6135:6163	569	1	True				
ANR	1011	AssignmentExpression	list_ipv6 = & white_list_ipv6		569	0		=			
ANR	1012	Identifier	list_ipv6		569	0					
ANR	1013	UnaryOperationExpression	& white_list_ipv6		569	1					
ANR	1014	UnaryOperator	&		569	0					
ANR	1015	Identifier	white_list_ipv6		569	1					
ANR	1016	ExpressionStatement	rules = & white_list_rules	242:16:6181:6210	569	2	True				
ANR	1017	AssignmentExpression	rules = & white_list_rules		569	0		=			
ANR	1018	Identifier	rules		569	0					
ANR	1019	UnaryOperationExpression	& white_list_rules		569	1					
ANR	1020	UnaryOperator	&		569	0					
ANR	1021	Identifier	white_list_rules		569	1					
ANR	1022	ContinueStatement	continue ;	243:16:6228:6236	569	3	True				
ANR	1023	ElseStatement	else		569	0					
ANR	1024	IfStatement	"if ( strcmp ( line , ""[reject_all]"" ) == 0 || strcmp ( line , ""[bypass_all]"" ) == 0 )"		569	0					
ANR	1025	Condition	"strcmp ( line , ""[reject_all]"" ) == 0 || strcmp ( line , ""[bypass_all]"" ) == 0"	244:23:6261:6353	569	0	True				
ANR	1026	OrExpression	"strcmp ( line , ""[reject_all]"" ) == 0 || strcmp ( line , ""[bypass_all]"" ) == 0"		569	0		||			
ANR	1027	EqualityExpression	"strcmp ( line , ""[reject_all]"" ) == 0"		569	0		==			
ANR	1028	CallExpression	"strcmp ( line , ""[reject_all]"" )"		569	0					
ANR	1029	Callee	strcmp		569	0					
ANR	1030	Identifier	strcmp		569	0					
ANR	1031	ArgumentList	line		569	1					
ANR	1032	Argument	line		569	0					
ANR	1033	Identifier	line		569	0					
ANR	1034	Argument	"""[reject_all]"""		569	1					
ANR	1035	PrimaryExpression	"""[reject_all]"""		569	0					
ANR	1036	PrimaryExpression	0		569	1					
ANR	1037	EqualityExpression	"strcmp ( line , ""[bypass_all]"" ) == 0"		569	1		==			
ANR	1038	CallExpression	"strcmp ( line , ""[bypass_all]"" )"		569	0					
ANR	1039	Callee	strcmp		569	0					
ANR	1040	Identifier	strcmp		569	0					
ANR	1041	ArgumentList	line		569	1					
ANR	1042	Argument	line		569	0					
ANR	1043	Identifier	line		569	0					
ANR	1044	Argument	"""[bypass_all]"""		569	1					
ANR	1045	PrimaryExpression	"""[bypass_all]"""		569	0					
ANR	1046	PrimaryExpression	0		569	1					
ANR	1047	CompoundStatement		80:61:2722:2722	569	1					
ANR	1048	ExpressionStatement	acl_mode = WHITE_LIST	246:16:6374:6395	569	0	True				
ANR	1049	AssignmentExpression	acl_mode = WHITE_LIST		569	0		=			
ANR	1050	Identifier	acl_mode		569	0					
ANR	1051	Identifier	WHITE_LIST		569	1					
ANR	1052	ContinueStatement	continue ;	247:16:6413:6421	569	1	True				
ANR	1053	ElseStatement	else		569	0					
ANR	1054	IfStatement	"if ( strcmp ( line , ""[accept_all]"" ) == 0 || strcmp ( line , ""[proxy_all]"" ) == 0 )"		569	0					
ANR	1055	Condition	"strcmp ( line , ""[accept_all]"" ) == 0 || strcmp ( line , ""[proxy_all]"" ) == 0"	248:23:6446:6537	569	0	True				
ANR	1056	OrExpression	"strcmp ( line , ""[accept_all]"" ) == 0 || strcmp ( line , ""[proxy_all]"" ) == 0"		569	0		||			
ANR	1057	EqualityExpression	"strcmp ( line , ""[accept_all]"" ) == 0"		569	0		==			
ANR	1058	CallExpression	"strcmp ( line , ""[accept_all]"" )"		569	0					
ANR	1059	Callee	strcmp		569	0					
ANR	1060	Identifier	strcmp		569	0					
ANR	1061	ArgumentList	line		569	1					
ANR	1062	Argument	line		569	0					
ANR	1063	Identifier	line		569	0					
ANR	1064	Argument	"""[accept_all]"""		569	1					
ANR	1065	PrimaryExpression	"""[accept_all]"""		569	0					
ANR	1066	PrimaryExpression	0		569	1					
ANR	1067	EqualityExpression	"strcmp ( line , ""[proxy_all]"" ) == 0"		569	1		==			
ANR	1068	CallExpression	"strcmp ( line , ""[proxy_all]"" )"		569	0					
ANR	1069	Callee	strcmp		569	0					
ANR	1070	Identifier	strcmp		569	0					
ANR	1071	ArgumentList	line		569	1					
ANR	1072	Argument	line		569	0					
ANR	1073	Identifier	line		569	0					
ANR	1074	Argument	"""[proxy_all]"""		569	1					
ANR	1075	PrimaryExpression	"""[proxy_all]"""		569	0					
ANR	1076	PrimaryExpression	0		569	1					
ANR	1077	CompoundStatement		84:60:2906:2906	569	1					
ANR	1078	ExpressionStatement	acl_mode = BLACK_LIST	250:16:6558:6579	569	0	True				
ANR	1079	AssignmentExpression	acl_mode = BLACK_LIST		569	0		=			
ANR	1080	Identifier	acl_mode		569	0					
ANR	1081	Identifier	BLACK_LIST		569	1					
ANR	1082	ContinueStatement	continue ;	251:16:6597:6605	569	1	True				
ANR	1083	IdentifierDeclStatement	char host [ 257 ] ;	254:12:6634:6648	569	10	True				
ANR	1084	IdentifierDecl	host [ 257 ]		569	0					
ANR	1085	IdentifierDeclType	char [ 257 ]		569	0					
ANR	1086	Identifier	host		569	1					
ANR	1087	PrimaryExpression	257		569	2					
ANR	1088	IdentifierDeclStatement	int cidr ;	255:12:6662:6670	569	11	True				
ANR	1089	IdentifierDecl	cidr		569	0					
ANR	1090	IdentifierDeclType	int		569	0					
ANR	1091	Identifier	cidr		569	1					
ANR	1092	ExpressionStatement	"parse_addr_cidr ( line , host , & cidr )"	256:12:6684:6718	569	12	True				
ANR	1093	CallExpression	"parse_addr_cidr ( line , host , & cidr )"		569	0					
ANR	1094	Callee	parse_addr_cidr		569	0					
ANR	1095	Identifier	parse_addr_cidr		569	0					
ANR	1096	ArgumentList	line		569	1					
ANR	1097	Argument	line		569	0					
ANR	1098	Identifier	line		569	0					
ANR	1099	Argument	host		569	1					
ANR	1100	Identifier	host		569	0					
ANR	1101	Argument	& cidr		569	2					
ANR	1102	UnaryOperationExpression	& cidr		569	0					
ANR	1103	UnaryOperator	&		569	0					
ANR	1104	Identifier	cidr		569	1					
ANR	1105	IdentifierDeclStatement	struct cork_ip addr ;	258:12:6733:6752	569	13	True				
ANR	1106	IdentifierDecl	addr		569	0					
ANR	1107	IdentifierDeclType	struct cork_ip		569	0					
ANR	1108	Identifier	addr		569	1					
ANR	1109	IdentifierDeclStatement	"int err = cork_ip_init ( & addr , host ) ;"	259:12:6766:6801	569	14	True				
ANR	1110	IdentifierDecl	"err = cork_ip_init ( & addr , host )"		569	0					
ANR	1111	IdentifierDeclType	int		569	0					
ANR	1112	Identifier	err		569	1					
ANR	1113	AssignmentExpression	"err = cork_ip_init ( & addr , host )"		569	2		=			
ANR	1114	Identifier	err		569	0					
ANR	1115	CallExpression	"cork_ip_init ( & addr , host )"		569	1					
ANR	1116	Callee	cork_ip_init		569	0					
ANR	1117	Identifier	cork_ip_init		569	0					
ANR	1118	ArgumentList	& addr		569	1					
ANR	1119	Argument	& addr		569	0					
ANR	1120	UnaryOperationExpression	& addr		569	0					
ANR	1121	UnaryOperator	&		569	0					
ANR	1122	Identifier	addr		569	1					
ANR	1123	Argument	host		569	1					
ANR	1124	Identifier	host		569	0					
ANR	1125	IfStatement	if ( ! err )		569	15					
ANR	1126	Condition	! err	260:16:6819:6822	569	0	True				
ANR	1127	UnaryOperationExpression	! err		569	0					
ANR	1128	UnaryOperator	!		569	0					
ANR	1129	Identifier	err		569	1					
ANR	1130	CompoundStatement		95:22:3191:3191	569	1					
ANR	1131	IfStatement	if ( addr . version == 4 )		569	0					
ANR	1132	Condition	addr . version == 4	261:20:6847:6863	569	0	True				
ANR	1133	EqualityExpression	addr . version == 4		569	0		==			
ANR	1134	MemberAccess	addr . version		569	0					
ANR	1135	Identifier	addr		569	0					
ANR	1136	Identifier	version		569	1					
ANR	1137	PrimaryExpression	4		569	1					
ANR	1138	CompoundStatement		96:39:3232:3232	569	1					
ANR	1139	IfStatement	if ( cidr >= 0 )		569	0					
ANR	1140	Condition	cidr >= 0	262:24:6892:6900	569	0	True				
ANR	1141	RelationalExpression	cidr >= 0		569	0		>=			
ANR	1142	Identifier	cidr		569	0					
ANR	1143	PrimaryExpression	0		569	1					
ANR	1144	CompoundStatement		97:35:3269:3269	569	1					
ANR	1145	ExpressionStatement	"ipset_ipv4_add_network ( list_ipv4 , & ( addr . ip . v4 ) , cidr )"	263:24:6929:6983	569	0	True				
ANR	1146	CallExpression	"ipset_ipv4_add_network ( list_ipv4 , & ( addr . ip . v4 ) , cidr )"		569	0					
ANR	1147	Callee	ipset_ipv4_add_network		569	0					
ANR	1148	Identifier	ipset_ipv4_add_network		569	0					
ANR	1149	ArgumentList	list_ipv4		569	1					
ANR	1150	Argument	list_ipv4		569	0					
ANR	1151	Identifier	list_ipv4		569	0					
ANR	1152	Argument	& ( addr . ip . v4 )		569	1					
ANR	1153	UnaryOperationExpression	& ( addr . ip . v4 )		569	0					
ANR	1154	UnaryOperator	&		569	0					
ANR	1155	MemberAccess	addr . ip . v4		569	1					
ANR	1156	MemberAccess	addr . ip		569	0					
ANR	1157	Identifier	addr		569	0					
ANR	1158	Identifier	ip		569	1					
ANR	1159	Identifier	v4		569	1					
ANR	1160	Argument	cidr		569	2					
ANR	1161	Identifier	cidr		569	0					
ANR	1162	ElseStatement	else		569	0					
ANR	1163	CompoundStatement		99:27:3378:3378	569	0					
ANR	1164	ExpressionStatement	"ipset_ipv4_add ( list_ipv4 , & ( addr . ip . v4 ) )"	265:24:7038:7078	569	0	True				
ANR	1165	CallExpression	"ipset_ipv4_add ( list_ipv4 , & ( addr . ip . v4 ) )"		569	0					
ANR	1166	Callee	ipset_ipv4_add		569	0					
ANR	1167	Identifier	ipset_ipv4_add		569	0					
ANR	1168	ArgumentList	list_ipv4		569	1					
ANR	1169	Argument	list_ipv4		569	0					
ANR	1170	Identifier	list_ipv4		569	0					
ANR	1171	Argument	& ( addr . ip . v4 )		569	1					
ANR	1172	UnaryOperationExpression	& ( addr . ip . v4 )		569	0					
ANR	1173	UnaryOperator	&		569	0					
ANR	1174	MemberAccess	addr . ip . v4		569	1					
ANR	1175	MemberAccess	addr . ip		569	0					
ANR	1176	Identifier	addr		569	0					
ANR	1177	Identifier	ip		569	1					
ANR	1178	Identifier	v4		569	1					
ANR	1179	ElseStatement	else		569	0					
ANR	1180	IfStatement	if ( addr . version == 6 )		569	0					
ANR	1181	Condition	addr . version == 6	267:27:7129:7145	569	0	True				
ANR	1182	EqualityExpression	addr . version == 6		569	0		==			
ANR	1183	MemberAccess	addr . version		569	0					
ANR	1184	Identifier	addr		569	0					
ANR	1185	Identifier	version		569	1					
ANR	1186	PrimaryExpression	6		569	1					
ANR	1187	CompoundStatement		102:46:3514:3514	569	1					
ANR	1188	IfStatement	if ( cidr >= 0 )		569	0					
ANR	1189	Condition	cidr >= 0	268:24:7174:7182	569	0	True				
ANR	1190	RelationalExpression	cidr >= 0		569	0		>=			
ANR	1191	Identifier	cidr		569	0					
ANR	1192	PrimaryExpression	0		569	1					
ANR	1193	CompoundStatement		103:35:3551:3551	569	1					
ANR	1194	ExpressionStatement	"ipset_ipv6_add_network ( list_ipv6 , & ( addr . ip . v6 ) , cidr )"	269:24:7211:7265	569	0	True				
ANR	1195	CallExpression	"ipset_ipv6_add_network ( list_ipv6 , & ( addr . ip . v6 ) , cidr )"		569	0					
ANR	1196	Callee	ipset_ipv6_add_network		569	0					
ANR	1197	Identifier	ipset_ipv6_add_network		569	0					
ANR	1198	ArgumentList	list_ipv6		569	1					
ANR	1199	Argument	list_ipv6		569	0					
ANR	1200	Identifier	list_ipv6		569	0					
ANR	1201	Argument	& ( addr . ip . v6 )		569	1					
ANR	1202	UnaryOperationExpression	& ( addr . ip . v6 )		569	0					
ANR	1203	UnaryOperator	&		569	0					
ANR	1204	MemberAccess	addr . ip . v6		569	1					
ANR	1205	MemberAccess	addr . ip		569	0					
ANR	1206	Identifier	addr		569	0					
ANR	1207	Identifier	ip		569	1					
ANR	1208	Identifier	v6		569	1					
ANR	1209	Argument	cidr		569	2					
ANR	1210	Identifier	cidr		569	0					
ANR	1211	ElseStatement	else		569	0					
ANR	1212	CompoundStatement		105:27:3660:3660	569	0					
ANR	1213	ExpressionStatement	"ipset_ipv6_add ( list_ipv6 , & ( addr . ip . v6 ) )"	271:24:7320:7360	569	0	True				
ANR	1214	CallExpression	"ipset_ipv6_add ( list_ipv6 , & ( addr . ip . v6 ) )"		569	0					
ANR	1215	Callee	ipset_ipv6_add		569	0					
ANR	1216	Identifier	ipset_ipv6_add		569	0					
ANR	1217	ArgumentList	list_ipv6		569	1					
ANR	1218	Argument	list_ipv6		569	0					
ANR	1219	Identifier	list_ipv6		569	0					
ANR	1220	Argument	& ( addr . ip . v6 )		569	1					
ANR	1221	UnaryOperationExpression	& ( addr . ip . v6 )		569	0					
ANR	1222	UnaryOperator	&		569	0					
ANR	1223	MemberAccess	addr . ip . v6		569	1					
ANR	1224	MemberAccess	addr . ip		569	0					
ANR	1225	Identifier	addr		569	0					
ANR	1226	Identifier	ip		569	1					
ANR	1227	Identifier	v6		569	1					
ANR	1228	ElseStatement	else		569	0					
ANR	1229	CompoundStatement		110:16:3805:3830	569	0					
ANR	1230	IdentifierDeclStatement	rule_t * rule = new_rule ( ) ;	275:16:7439:7464	569	0	True				
ANR	1231	IdentifierDecl	* rule = new_rule ( )		569	0					
ANR	1232	IdentifierDeclType	rule_t *		569	0					
ANR	1233	Identifier	rule		569	1					
ANR	1234	AssignmentExpression	* rule = new_rule ( )		569	2		=			
ANR	1235	Identifier	rule		569	0					
ANR	1236	CallExpression	new_rule ( )		569	1					
ANR	1237	Callee	new_rule		569	0					
ANR	1238	Identifier	new_rule		569	0					
ANR	1239	ArgumentList			569	1					
ANR	1240	ExpressionStatement	"accept_rule_arg ( rule , line )"	276:16:7482:7509	569	1	True				
ANR	1241	CallExpression	"accept_rule_arg ( rule , line )"		569	0					
ANR	1242	Callee	accept_rule_arg		569	0					
ANR	1243	Identifier	accept_rule_arg		569	0					
ANR	1244	ArgumentList	rule		569	1					
ANR	1245	Argument	rule		569	0					
ANR	1246	Identifier	rule		569	0					
ANR	1247	Argument	line		569	1					
ANR	1248	Identifier	line		569	0					
ANR	1249	ExpressionStatement	init_rule ( rule )	277:16:7527:7542	569	2	True				
ANR	1250	CallExpression	init_rule ( rule )		569	0					
ANR	1251	Callee	init_rule		569	0					
ANR	1252	Identifier	init_rule		569	0					
ANR	1253	ArgumentList	rule		569	1					
ANR	1254	Argument	rule		569	0					
ANR	1255	Identifier	rule		569	0					
ANR	1256	ExpressionStatement	"add_rule ( rules , rule )"	278:16:7560:7581	569	3	True				
ANR	1257	CallExpression	"add_rule ( rules , rule )"		569	0					
ANR	1258	Callee	add_rule		569	0					
ANR	1259	Identifier	add_rule		569	0					
ANR	1260	ArgumentList	rules		569	1					
ANR	1261	Argument	rules		569	0					
ANR	1262	Identifier	rules		569	0					
ANR	1263	Argument	rule		569	1					
ANR	1264	Identifier	rule		569	0					
ANR	1265	ExpressionStatement	fclose ( f )	282:4:7612:7621	569	17	True				
ANR	1266	CallExpression	fclose ( f )		569	0					
ANR	1267	Callee	fclose		569	0					
ANR	1268	Identifier	fclose		569	0					
ANR	1269	ArgumentList	f		569	1					
ANR	1270	Argument	f		569	0					
ANR	1271	Identifier	f		569	0					
ANR	1272	ReturnStatement	return 0 ;	284:4:7628:7636	569	18	True				
ANR	1273	PrimaryExpression	0		569	0					
ANR	1274	ReturnType	int		569	1					
ANR	1275	Identifier	init_acl		569	2					
ANR	1276	ParameterList	const char * path		569	3					
ANR	1277	Parameter	const char * path	165:9:3615:3630	569	0	True				
ANR	1278	ParameterType	const char *		569	0					
ANR	1279	Identifier	path		569	1					
ANR	1280	CFGEntryNode	ENTRY		569		True				
ANR	1281	CFGExitNode	EXIT		569		True				
ANR	1282	Symbol	line		569						
ANR	1283	Symbol	WHITE_LIST		569						
ANR	1284	Symbol	long_line		569						
ANR	1285	Symbol	strchr		569						
ANR	1286	Symbol	trimwhitespace		569						
ANR	1287	Symbol	rule		569						
ANR	1288	Symbol	rules		569						
ANR	1289	Symbol	& outbound_block_list_ipv6		569						
ANR	1290	Symbol	fgets		569						
ANR	1291	Symbol	& white_list_ipv6		569						
ANR	1292	Symbol	path		569						
ANR	1293	Symbol	strlen		569						
ANR	1294	Symbol	len		569						
ANR	1295	Symbol	host		569						
ANR	1296	Symbol	& black_list_ipv6		569						
ANR	1297	Symbol	cidr		569						
ANR	1298	Symbol	& black_list_ipv4		569						
ANR	1299	Symbol	addr . ip		569						
ANR	1300	Symbol	addr		569						
ANR	1301	Symbol	& white_list_ipv4		569						
ANR	1302	Symbol	strcmp		569						
ANR	1303	Symbol	fopen		569						
ANR	1304	Symbol	* buf		569						
ANR	1305	Symbol	list_ipv4		569						
ANR	1306	Symbol	NULL		569						
ANR	1307	Symbol	& addr		569						
ANR	1308	Symbol	err		569						
ANR	1309	Symbol	& white_list_rules		569						
ANR	1310	Symbol	f		569						
ANR	1311	Symbol	& cidr		569						
ANR	1312	Symbol	& addr . ip . v6		569						
ANR	1313	Symbol	* comment		569						
ANR	1314	Symbol	acl_mode		569						
ANR	1315	Symbol	new_rule		569						
ANR	1316	Symbol	list_ipv6		569						
ANR	1317	Symbol	& black_list_rules		569						
ANR	1318	Symbol	& addr . ip . v4		569						
ANR	1319	Symbol	& outbound_block_list_ipv4		569						
ANR	1320	Symbol	buf		569						
ANR	1321	Symbol	feof		569						
ANR	1322	Symbol	BLACK_LIST		569						
ANR	1323	Symbol	& outbound_block_list_rules		569						
ANR	1324	Symbol	comment		569						
ANR	1325	Symbol	cork_ip_init		569						
ANR	1326	Symbol	& addr . ip		569						
ANR	1327	Symbol	* len		569						
ANR	1328	Symbol	addr . version		569						
ANR	1329	Function	free_rules	287:0:7641:7874							
ANR	1330	FunctionDef	free_rules (struct cork_dllist * rules)		1329	0					
ANR	1331	CompoundStatement		289:0:7684:7874	1329	0					
ANR	1332	IdentifierDeclStatement	struct cork_dllist_item * iter ;	290:4:7690:7719	1329	0	True				
ANR	1333	IdentifierDecl	* iter		1329	0					
ANR	1334	IdentifierDeclType	struct cork_dllist_item *		1329	0					
ANR	1335	Identifier	iter		1329	1					
ANR	1336	WhileStatement	while ( ( iter = cork_dllist_head ( rules ) ) != NULL )		1329	1					
ANR	1337	Condition	( iter = cork_dllist_head ( rules ) ) != NULL	291:11:7732:7771	1329	0	True				
ANR	1338	EqualityExpression	( iter = cork_dllist_head ( rules ) ) != NULL		1329	0		!=			
ANR	1339	AssignmentExpression	iter = cork_dllist_head ( rules )		1329	0		=			
ANR	1340	Identifier	iter		1329	0					
ANR	1341	CallExpression	cork_dllist_head ( rules )		1329	1					
ANR	1342	Callee	cork_dllist_head		1329	0					
ANR	1343	Identifier	cork_dllist_head		1329	0					
ANR	1344	ArgumentList	rules		1329	1					
ANR	1345	Argument	rules		1329	0					
ANR	1346	Identifier	rules		1329	0					
ANR	1347	Identifier	NULL		1329	1					
ANR	1348	CompoundStatement		4:8:99:154	1329	1					
ANR	1349	IdentifierDeclStatement	"rule_t * rule = cork_container_of ( iter , rule_t , entries ) ;"	292:8:7784:7839	1329	0	True				
ANR	1350	IdentifierDecl	"* rule = cork_container_of ( iter , rule_t , entries )"		1329	0					
ANR	1351	IdentifierDeclType	rule_t *		1329	0					
ANR	1352	Identifier	rule		1329	1					
ANR	1353	AssignmentExpression	"* rule = cork_container_of ( iter , rule_t , entries )"		1329	2		=			
ANR	1354	Identifier	rule		1329	0					
ANR	1355	CallExpression	"cork_container_of ( iter , rule_t , entries )"		1329	1					
ANR	1356	Callee	cork_container_of		1329	0					
ANR	1357	Identifier	cork_container_of		1329	0					
ANR	1358	ArgumentList	iter		1329	1					
ANR	1359	Argument	iter		1329	0					
ANR	1360	Identifier	iter		1329	0					
ANR	1361	Argument	rule_t		1329	1					
ANR	1362	Identifier	rule_t		1329	0					
ANR	1363	Argument	entries		1329	2					
ANR	1364	Identifier	entries		1329	0					
ANR	1365	ExpressionStatement	remove_rule ( rule )	293:8:7849:7866	1329	1	True				
ANR	1366	CallExpression	remove_rule ( rule )		1329	0					
ANR	1367	Callee	remove_rule		1329	0					
ANR	1368	Identifier	remove_rule		1329	0					
ANR	1369	ArgumentList	rule		1329	1					
ANR	1370	Argument	rule		1329	0					
ANR	1371	Identifier	rule		1329	0					
ANR	1372	ReturnType	void		1329	1					
ANR	1373	Identifier	free_rules		1329	2					
ANR	1374	ParameterList	struct cork_dllist * rules		1329	3					
ANR	1375	Parameter	struct cork_dllist * rules	288:11:7657:7681	1329	0	True				
ANR	1376	ParameterType	struct cork_dllist *		1329	0					
ANR	1377	Identifier	rules		1329	1					
ANR	1378	CFGEntryNode	ENTRY		1329		True				
ANR	1379	CFGExitNode	EXIT		1329		True				
ANR	1380	Symbol	cork_container_of		1329						
ANR	1381	Symbol	entries		1329						
ANR	1382	Symbol	NULL		1329						
ANR	1383	Symbol	iter		1329						
ANR	1384	Symbol	rule		1329						
ANR	1385	Symbol	rules		1329						
ANR	1386	Symbol	cork_dllist_head		1329						
ANR	1387	Symbol	rule_t		1329						
ANR	1388	Function	free_acl	297:0:7877:8106							
ANR	1389	FunctionDef	free_acl ()		1388	0					
ANR	1390	CompoundStatement		299:0:7897:8106	1388	0					
ANR	1391	ExpressionStatement	ipset_done ( & black_list_ipv4 )	300:4:7903:7931	1388	0	True				
ANR	1392	CallExpression	ipset_done ( & black_list_ipv4 )		1388	0					
ANR	1393	Callee	ipset_done		1388	0					
ANR	1394	Identifier	ipset_done		1388	0					
ANR	1395	ArgumentList	& black_list_ipv4		1388	1					
ANR	1396	Argument	& black_list_ipv4		1388	0					
ANR	1397	UnaryOperationExpression	& black_list_ipv4		1388	0					
ANR	1398	UnaryOperator	&		1388	0					
ANR	1399	Identifier	black_list_ipv4		1388	1					
ANR	1400	ExpressionStatement	ipset_done ( & black_list_ipv6 )	301:4:7937:7965	1388	1	True				
ANR	1401	CallExpression	ipset_done ( & black_list_ipv6 )		1388	0					
ANR	1402	Callee	ipset_done		1388	0					
ANR	1403	Identifier	ipset_done		1388	0					
ANR	1404	ArgumentList	& black_list_ipv6		1388	1					
ANR	1405	Argument	& black_list_ipv6		1388	0					
ANR	1406	UnaryOperationExpression	& black_list_ipv6		1388	0					
ANR	1407	UnaryOperator	&		1388	0					
ANR	1408	Identifier	black_list_ipv6		1388	1					
ANR	1409	ExpressionStatement	ipset_done ( & white_list_ipv4 )	302:4:7971:7999	1388	2	True				
ANR	1410	CallExpression	ipset_done ( & white_list_ipv4 )		1388	0					
ANR	1411	Callee	ipset_done		1388	0					
ANR	1412	Identifier	ipset_done		1388	0					
ANR	1413	ArgumentList	& white_list_ipv4		1388	1					
ANR	1414	Argument	& white_list_ipv4		1388	0					
ANR	1415	UnaryOperationExpression	& white_list_ipv4		1388	0					
ANR	1416	UnaryOperator	&		1388	0					
ANR	1417	Identifier	white_list_ipv4		1388	1					
ANR	1418	ExpressionStatement	ipset_done ( & white_list_ipv6 )	303:4:8005:8033	1388	3	True				
ANR	1419	CallExpression	ipset_done ( & white_list_ipv6 )		1388	0					
ANR	1420	Callee	ipset_done		1388	0					
ANR	1421	Identifier	ipset_done		1388	0					
ANR	1422	ArgumentList	& white_list_ipv6		1388	1					
ANR	1423	Argument	& white_list_ipv6		1388	0					
ANR	1424	UnaryOperationExpression	& white_list_ipv6		1388	0					
ANR	1425	UnaryOperator	&		1388	0					
ANR	1426	Identifier	white_list_ipv6		1388	1					
ANR	1427	ExpressionStatement	free_rules ( & black_list_rules )	305:4:8040:8069	1388	4	True				
ANR	1428	CallExpression	free_rules ( & black_list_rules )		1388	0					
ANR	1429	Callee	free_rules		1388	0					
ANR	1430	Identifier	free_rules		1388	0					
ANR	1431	ArgumentList	& black_list_rules		1388	1					
ANR	1432	Argument	& black_list_rules		1388	0					
ANR	1433	UnaryOperationExpression	& black_list_rules		1388	0					
ANR	1434	UnaryOperator	&		1388	0					
ANR	1435	Identifier	black_list_rules		1388	1					
ANR	1436	ExpressionStatement	free_rules ( & white_list_rules )	306:4:8075:8104	1388	5	True				
ANR	1437	CallExpression	free_rules ( & white_list_rules )		1388	0					
ANR	1438	Callee	free_rules		1388	0					
ANR	1439	Identifier	free_rules		1388	0					
ANR	1440	ArgumentList	& white_list_rules		1388	1					
ANR	1441	Argument	& white_list_rules		1388	0					
ANR	1442	UnaryOperationExpression	& white_list_rules		1388	0					
ANR	1443	UnaryOperator	&		1388	0					
ANR	1444	Identifier	white_list_rules		1388	1					
ANR	1445	ReturnType	void		1388	1					
ANR	1446	Identifier	free_acl		1388	2					
ANR	1447	ParameterList			1388	3					
ANR	1448	CFGEntryNode	ENTRY		1388		True				
ANR	1449	CFGExitNode	EXIT		1388		True				
ANR	1450	Symbol	& white_list_ipv6		1388						
ANR	1451	Symbol	& white_list_rules		1388						
ANR	1452	Symbol	& black_list_ipv6		1388						
ANR	1453	Symbol	& black_list_ipv4		1388						
ANR	1454	Symbol	& white_list_ipv4		1388						
ANR	1455	Symbol	& black_list_rules		1388						
ANR	1456	Function	get_acl_mode	309:0:8109:8155							
ANR	1457	FunctionDef	get_acl_mode ()		1456	0					
ANR	1458	CompoundStatement		311:0:8132:8155	1456	0					
ANR	1459	ReturnStatement	return acl_mode ;	312:4:8138:8153	1456	0	True				
ANR	1460	Identifier	acl_mode		1456	0					
ANR	1461	ReturnType	int		1456	1					
ANR	1462	Identifier	get_acl_mode		1456	2					
ANR	1463	ParameterList			1456	3					
ANR	1464	CFGEntryNode	ENTRY		1456		True				
ANR	1465	CFGExitNode	EXIT		1456		True				
ANR	1466	Symbol	acl_mode		1456						
ANR	1467	Function	acl_match_host	320:0:8263:9097							
ANR	1468	FunctionDef	acl_match_host (const char * host)		1467	0					
ANR	1469	CompoundStatement		322:0:8300:9097	1467	0					
ANR	1470	IdentifierDeclStatement	struct cork_ip addr ;	323:4:8306:8325	1467	0	True				
ANR	1471	IdentifierDecl	addr		1467	0					
ANR	1472	IdentifierDeclType	struct cork_ip		1467	0					
ANR	1473	Identifier	addr		1467	1					
ANR	1474	IdentifierDeclStatement	int ret = 0 ;	324:4:8331:8342	1467	1	True				
ANR	1475	IdentifierDecl	ret = 0		1467	0					
ANR	1476	IdentifierDeclType	int		1467	0					
ANR	1477	Identifier	ret		1467	1					
ANR	1478	AssignmentExpression	ret = 0		1467	2		=			
ANR	1479	Identifier	ret		1467	0					
ANR	1480	PrimaryExpression	0		1467	1					
ANR	1481	IdentifierDeclStatement	"int err = cork_ip_init ( & addr , host ) ;"	325:4:8348:8383	1467	2	True				
ANR	1482	IdentifierDecl	"err = cork_ip_init ( & addr , host )"		1467	0					
ANR	1483	IdentifierDeclType	int		1467	0					
ANR	1484	Identifier	err		1467	1					
ANR	1485	AssignmentExpression	"err = cork_ip_init ( & addr , host )"		1467	2		=			
ANR	1486	Identifier	err		1467	0					
ANR	1487	CallExpression	"cork_ip_init ( & addr , host )"		1467	1					
ANR	1488	Callee	cork_ip_init		1467	0					
ANR	1489	Identifier	cork_ip_init		1467	0					
ANR	1490	ArgumentList	& addr		1467	1					
ANR	1491	Argument	& addr		1467	0					
ANR	1492	UnaryOperationExpression	& addr		1467	0					
ANR	1493	UnaryOperator	&		1467	0					
ANR	1494	Identifier	addr		1467	1					
ANR	1495	Argument	host		1467	1					
ANR	1496	Identifier	host		1467	0					
ANR	1497	IfStatement	if ( err )		1467	3					
ANR	1498	Condition	err	327:8:8394:8396	1467	0	True				
ANR	1499	Identifier	err		1467	0					
ANR	1500	CompoundStatement		7:8:108:135	1467	1					
ANR	1501	IdentifierDeclStatement	int host_len = strlen ( host ) ;	328:8:8409:8436	1467	0	True				
ANR	1502	IdentifierDecl	host_len = strlen ( host )		1467	0					
ANR	1503	IdentifierDeclType	int		1467	0					
ANR	1504	Identifier	host_len		1467	1					
ANR	1505	AssignmentExpression	host_len = strlen ( host )		1467	2		=			
ANR	1506	Identifier	host_len		1467	0					
ANR	1507	CallExpression	strlen ( host )		1467	1					
ANR	1508	Callee	strlen		1467	0					
ANR	1509	Identifier	strlen		1467	0					
ANR	1510	ArgumentList	host		1467	1					
ANR	1511	Argument	host		1467	0					
ANR	1512	Identifier	host		1467	0					
ANR	1513	IfStatement	"if ( lookup_rule ( & black_list_rules , host , host_len ) != NULL )"		1467	1					
ANR	1514	Condition	"lookup_rule ( & black_list_rules , host , host_len ) != NULL"	329:12:8450:8503	1467	0	True				
ANR	1515	EqualityExpression	"lookup_rule ( & black_list_rules , host , host_len ) != NULL"		1467	0		!=			
ANR	1516	CallExpression	"lookup_rule ( & black_list_rules , host , host_len )"		1467	0					
ANR	1517	Callee	lookup_rule		1467	0					
ANR	1518	Identifier	lookup_rule		1467	0					
ANR	1519	ArgumentList	& black_list_rules		1467	1					
ANR	1520	Argument	& black_list_rules		1467	0					
ANR	1521	UnaryOperationExpression	& black_list_rules		1467	0					
ANR	1522	UnaryOperator	&		1467	0					
ANR	1523	Identifier	black_list_rules		1467	1					
ANR	1524	Argument	host		1467	1					
ANR	1525	Identifier	host		1467	0					
ANR	1526	Argument	host_len		1467	2					
ANR	1527	Identifier	host_len		1467	0					
ANR	1528	Identifier	NULL		1467	1					
ANR	1529	ExpressionStatement	ret = 1	330:12:8518:8525	1467	1	True				
ANR	1530	AssignmentExpression	ret = 1		1467	0		=			
ANR	1531	Identifier	ret		1467	0					
ANR	1532	PrimaryExpression	1		1467	1					
ANR	1533	ElseStatement	else		1467	0					
ANR	1534	IfStatement	"if ( lookup_rule ( & white_list_rules , host , host_len ) != NULL )"		1467	0					
ANR	1535	Condition	"lookup_rule ( & white_list_rules , host , host_len ) != NULL"	331:17:8544:8597	1467	0	True				
ANR	1536	EqualityExpression	"lookup_rule ( & white_list_rules , host , host_len ) != NULL"		1467	0		!=			
ANR	1537	CallExpression	"lookup_rule ( & white_list_rules , host , host_len )"		1467	0					
ANR	1538	Callee	lookup_rule		1467	0					
ANR	1539	Identifier	lookup_rule		1467	0					
ANR	1540	ArgumentList	& white_list_rules		1467	1					
ANR	1541	Argument	& white_list_rules		1467	0					
ANR	1542	UnaryOperationExpression	& white_list_rules		1467	0					
ANR	1543	UnaryOperator	&		1467	0					
ANR	1544	Identifier	white_list_rules		1467	1					
ANR	1545	Argument	host		1467	1					
ANR	1546	Identifier	host		1467	0					
ANR	1547	Argument	host_len		1467	2					
ANR	1548	Identifier	host_len		1467	0					
ANR	1549	Identifier	NULL		1467	1					
ANR	1550	ExpressionStatement	ret = - 1	332:12:8612:8620	1467	1	True				
ANR	1551	AssignmentExpression	ret = - 1		1467	0		=			
ANR	1552	Identifier	ret		1467	0					
ANR	1553	UnaryOperationExpression	- 1		1467	1					
ANR	1554	UnaryOperator	-		1467	0					
ANR	1555	PrimaryExpression	1		1467	1					
ANR	1556	ReturnStatement	return ret ;	333:8:8630:8640	1467	2	True				
ANR	1557	Identifier	ret		1467	0					
ANR	1558	IfStatement	if ( addr . version == 4 )		1467	4					
ANR	1559	Condition	addr . version == 4	336:8:8657:8673	1467	0	True				
ANR	1560	EqualityExpression	addr . version == 4		1467	0		==			
ANR	1561	MemberAccess	addr . version		1467	0					
ANR	1562	Identifier	addr		1467	0					
ANR	1563	Identifier	version		1467	1					
ANR	1564	PrimaryExpression	4		1467	1					
ANR	1565	CompoundStatement		15:27:375:375	1467	1					
ANR	1566	IfStatement	"if ( ipset_contains_ipv4 ( & black_list_ipv4 , & ( addr . ip . v4 ) ) )"		1467	0					
ANR	1567	Condition	"ipset_contains_ipv4 ( & black_list_ipv4 , & ( addr . ip . v4 ) )"	337:12:8690:8741	1467	0	True				
ANR	1568	CallExpression	"ipset_contains_ipv4 ( & black_list_ipv4 , & ( addr . ip . v4 ) )"		1467	0					
ANR	1569	Callee	ipset_contains_ipv4		1467	0					
ANR	1570	Identifier	ipset_contains_ipv4		1467	0					
ANR	1571	ArgumentList	& black_list_ipv4		1467	1					
ANR	1572	Argument	& black_list_ipv4		1467	0					
ANR	1573	UnaryOperationExpression	& black_list_ipv4		1467	0					
ANR	1574	UnaryOperator	&		1467	0					
ANR	1575	Identifier	black_list_ipv4		1467	1					
ANR	1576	Argument	& ( addr . ip . v4 )		1467	1					
ANR	1577	UnaryOperationExpression	& ( addr . ip . v4 )		1467	0					
ANR	1578	UnaryOperator	&		1467	0					
ANR	1579	MemberAccess	addr . ip . v4		1467	1					
ANR	1580	MemberAccess	addr . ip		1467	0					
ANR	1581	Identifier	addr		1467	0					
ANR	1582	Identifier	ip		1467	1					
ANR	1583	Identifier	v4		1467	1					
ANR	1584	ExpressionStatement	ret = 1	338:12:8756:8763	1467	1	True				
ANR	1585	AssignmentExpression	ret = 1		1467	0		=			
ANR	1586	Identifier	ret		1467	0					
ANR	1587	PrimaryExpression	1		1467	1					
ANR	1588	ElseStatement	else		1467	0					
ANR	1589	IfStatement	"if ( ipset_contains_ipv4 ( & white_list_ipv4 , & ( addr . ip . v4 ) ) )"		1467	0					
ANR	1590	Condition	"ipset_contains_ipv4 ( & white_list_ipv4 , & ( addr . ip . v4 ) )"	339:17:8782:8833	1467	0	True				
ANR	1591	CallExpression	"ipset_contains_ipv4 ( & white_list_ipv4 , & ( addr . ip . v4 ) )"		1467	0					
ANR	1592	Callee	ipset_contains_ipv4		1467	0					
ANR	1593	Identifier	ipset_contains_ipv4		1467	0					
ANR	1594	ArgumentList	& white_list_ipv4		1467	1					
ANR	1595	Argument	& white_list_ipv4		1467	0					
ANR	1596	UnaryOperationExpression	& white_list_ipv4		1467	0					
ANR	1597	UnaryOperator	&		1467	0					
ANR	1598	Identifier	white_list_ipv4		1467	1					
ANR	1599	Argument	& ( addr . ip . v4 )		1467	1					
ANR	1600	UnaryOperationExpression	& ( addr . ip . v4 )		1467	0					
ANR	1601	UnaryOperator	&		1467	0					
ANR	1602	MemberAccess	addr . ip . v4		1467	1					
ANR	1603	MemberAccess	addr . ip		1467	0					
ANR	1604	Identifier	addr		1467	0					
ANR	1605	Identifier	ip		1467	1					
ANR	1606	Identifier	v4		1467	1					
ANR	1607	ExpressionStatement	ret = - 1	340:12:8848:8856	1467	1	True				
ANR	1608	AssignmentExpression	ret = - 1		1467	0		=			
ANR	1609	Identifier	ret		1467	0					
ANR	1610	UnaryOperationExpression	- 1		1467	1					
ANR	1611	UnaryOperator	-		1467	0					
ANR	1612	PrimaryExpression	1		1467	1					
ANR	1613	ElseStatement	else		1467	0					
ANR	1614	IfStatement	if ( addr . version == 6 )		1467	0					
ANR	1615	Condition	addr . version == 6	341:15:8873:8889	1467	0	True				
ANR	1616	EqualityExpression	addr . version == 6		1467	0		==			
ANR	1617	MemberAccess	addr . version		1467	0					
ANR	1618	Identifier	addr		1467	0					
ANR	1619	Identifier	version		1467	1					
ANR	1620	PrimaryExpression	6		1467	1					
ANR	1621	CompoundStatement		20:34:591:591	1467	1					
ANR	1622	IfStatement	"if ( ipset_contains_ipv6 ( & black_list_ipv6 , & ( addr . ip . v6 ) ) )"		1467	0					
ANR	1623	Condition	"ipset_contains_ipv6 ( & black_list_ipv6 , & ( addr . ip . v6 ) )"	342:12:8906:8957	1467	0	True				
ANR	1624	CallExpression	"ipset_contains_ipv6 ( & black_list_ipv6 , & ( addr . ip . v6 ) )"		1467	0					
ANR	1625	Callee	ipset_contains_ipv6		1467	0					
ANR	1626	Identifier	ipset_contains_ipv6		1467	0					
ANR	1627	ArgumentList	& black_list_ipv6		1467	1					
ANR	1628	Argument	& black_list_ipv6		1467	0					
ANR	1629	UnaryOperationExpression	& black_list_ipv6		1467	0					
ANR	1630	UnaryOperator	&		1467	0					
ANR	1631	Identifier	black_list_ipv6		1467	1					
ANR	1632	Argument	& ( addr . ip . v6 )		1467	1					
ANR	1633	UnaryOperationExpression	& ( addr . ip . v6 )		1467	0					
ANR	1634	UnaryOperator	&		1467	0					
ANR	1635	MemberAccess	addr . ip . v6		1467	1					
ANR	1636	MemberAccess	addr . ip		1467	0					
ANR	1637	Identifier	addr		1467	0					
ANR	1638	Identifier	ip		1467	1					
ANR	1639	Identifier	v6		1467	1					
ANR	1640	ExpressionStatement	ret = 1	343:12:8972:8979	1467	1	True				
ANR	1641	AssignmentExpression	ret = 1		1467	0		=			
ANR	1642	Identifier	ret		1467	0					
ANR	1643	PrimaryExpression	1		1467	1					
ANR	1644	ElseStatement	else		1467	0					
ANR	1645	IfStatement	"if ( ipset_contains_ipv6 ( & white_list_ipv6 , & ( addr . ip . v6 ) ) )"		1467	0					
ANR	1646	Condition	"ipset_contains_ipv6 ( & white_list_ipv6 , & ( addr . ip . v6 ) )"	344:17:8998:9049	1467	0	True				
ANR	1647	CallExpression	"ipset_contains_ipv6 ( & white_list_ipv6 , & ( addr . ip . v6 ) )"		1467	0					
ANR	1648	Callee	ipset_contains_ipv6		1467	0					
ANR	1649	Identifier	ipset_contains_ipv6		1467	0					
ANR	1650	ArgumentList	& white_list_ipv6		1467	1					
ANR	1651	Argument	& white_list_ipv6		1467	0					
ANR	1652	UnaryOperationExpression	& white_list_ipv6		1467	0					
ANR	1653	UnaryOperator	&		1467	0					
ANR	1654	Identifier	white_list_ipv6		1467	1					
ANR	1655	Argument	& ( addr . ip . v6 )		1467	1					
ANR	1656	UnaryOperationExpression	& ( addr . ip . v6 )		1467	0					
ANR	1657	UnaryOperator	&		1467	0					
ANR	1658	MemberAccess	addr . ip . v6		1467	1					
ANR	1659	MemberAccess	addr . ip		1467	0					
ANR	1660	Identifier	addr		1467	0					
ANR	1661	Identifier	ip		1467	1					
ANR	1662	Identifier	v6		1467	1					
ANR	1663	ExpressionStatement	ret = - 1	345:12:9064:9072	1467	1	True				
ANR	1664	AssignmentExpression	ret = - 1		1467	0		=			
ANR	1665	Identifier	ret		1467	0					
ANR	1666	UnaryOperationExpression	- 1		1467	1					
ANR	1667	UnaryOperator	-		1467	0					
ANR	1668	PrimaryExpression	1		1467	1					
ANR	1669	ReturnStatement	return ret ;	348:4:9085:9095	1467	5	True				
ANR	1670	Identifier	ret		1467	0					
ANR	1671	ReturnType	int		1467	1					
ANR	1672	Identifier	acl_match_host		1467	2					
ANR	1673	ParameterList	const char * host		1467	3					
ANR	1674	Parameter	const char * host	321:15:8282:8297	1467	0	True				
ANR	1675	ParameterType	const char *		1467	0					
ANR	1676	Identifier	host		1467	1					
ANR	1677	CFGEntryNode	ENTRY		1467		True				
ANR	1678	CFGExitNode	EXIT		1467		True				
ANR	1679	Symbol	ret		1467						
ANR	1680	Symbol	& addr		1467						
ANR	1681	Symbol	NULL		1467						
ANR	1682	Symbol	err		1467						
ANR	1683	Symbol	host_len		1467						
ANR	1684	Symbol	lookup_rule		1467						
ANR	1685	Symbol	& white_list_rules		1467						
ANR	1686	Symbol	ipset_contains_ipv4		1467						
ANR	1687	Symbol	& addr . ip . v6		1467						
ANR	1688	Symbol	ipset_contains_ipv6		1467						
ANR	1689	Symbol	& black_list_rules		1467						
ANR	1690	Symbol	& addr . ip . v4		1467						
ANR	1691	Symbol	& white_list_ipv6		1467						
ANR	1692	Symbol	strlen		1467						
ANR	1693	Symbol	host		1467						
ANR	1694	Symbol	& black_list_ipv6		1467						
ANR	1695	Symbol	cork_ip_init		1467						
ANR	1696	Symbol	& addr . ip		1467						
ANR	1697	Symbol	addr . ip		1467						
ANR	1698	Symbol	& black_list_ipv4		1467						
ANR	1699	Symbol	addr		1467						
ANR	1700	Symbol	& white_list_ipv4		1467						
ANR	1701	Symbol	addr . version		1467						
ANR	1702	Function	acl_add_ip	351:0:9100:9438							
ANR	1703	FunctionDef	acl_add_ip (const char * ip)		1702	0					
ANR	1704	CompoundStatement		353:0:9131:9438	1702	0					
ANR	1705	IdentifierDeclStatement	struct cork_ip addr ;	354:4:9137:9156	1702	0	True				
ANR	1706	IdentifierDecl	addr		1702	0					
ANR	1707	IdentifierDeclType	struct cork_ip		1702	0					
ANR	1708	Identifier	addr		1702	1					
ANR	1709	IdentifierDeclStatement	"int err = cork_ip_init ( & addr , ip ) ;"	355:4:9162:9195	1702	1	True				
ANR	1710	IdentifierDecl	"err = cork_ip_init ( & addr , ip )"		1702	0					
ANR	1711	IdentifierDeclType	int		1702	0					
ANR	1712	Identifier	err		1702	1					
ANR	1713	AssignmentExpression	"err = cork_ip_init ( & addr , ip )"		1702	2		=			
ANR	1714	Identifier	err		1702	0					
ANR	1715	CallExpression	"cork_ip_init ( & addr , ip )"		1702	1					
ANR	1716	Callee	cork_ip_init		1702	0					
ANR	1717	Identifier	cork_ip_init		1702	0					
ANR	1718	ArgumentList	& addr		1702	1					
ANR	1719	Argument	& addr		1702	0					
ANR	1720	UnaryOperationExpression	& addr		1702	0					
ANR	1721	UnaryOperator	&		1702	0					
ANR	1722	Identifier	addr		1702	1					
ANR	1723	Argument	ip		1702	1					
ANR	1724	Identifier	ip		1702	0					
ANR	1725	IfStatement	if ( err )		1702	2					
ANR	1726	Condition	err	356:8:9205:9207	1702	0	True				
ANR	1727	Identifier	err		1702	0					
ANR	1728	CompoundStatement		4:13:78:78	1702	1					
ANR	1729	ReturnStatement	return - 1 ;	357:8:9220:9229	1702	0	True				
ANR	1730	UnaryOperationExpression	- 1		1702	0					
ANR	1731	UnaryOperator	-		1702	0					
ANR	1732	PrimaryExpression	1		1702	1					
ANR	1733	IfStatement	if ( addr . version == 4 )		1702	3					
ANR	1734	Condition	addr . version == 4	360:8:9246:9262	1702	0	True				
ANR	1735	EqualityExpression	addr . version == 4		1702	0		==			
ANR	1736	MemberAccess	addr . version		1702	0					
ANR	1737	Identifier	addr		1702	0					
ANR	1738	Identifier	version		1702	1					
ANR	1739	PrimaryExpression	4		1702	1					
ANR	1740	CompoundStatement		8:27:133:133	1702	1					
ANR	1741	ExpressionStatement	"ipset_ipv4_add ( & black_list_ipv4 , & ( addr . ip . v4 ) )"	361:8:9275:9322	1702	0	True				
ANR	1742	CallExpression	"ipset_ipv4_add ( & black_list_ipv4 , & ( addr . ip . v4 ) )"		1702	0					
ANR	1743	Callee	ipset_ipv4_add		1702	0					
ANR	1744	Identifier	ipset_ipv4_add		1702	0					
ANR	1745	ArgumentList	& black_list_ipv4		1702	1					
ANR	1746	Argument	& black_list_ipv4		1702	0					
ANR	1747	UnaryOperationExpression	& black_list_ipv4		1702	0					
ANR	1748	UnaryOperator	&		1702	0					
ANR	1749	Identifier	black_list_ipv4		1702	1					
ANR	1750	Argument	& ( addr . ip . v4 )		1702	1					
ANR	1751	UnaryOperationExpression	& ( addr . ip . v4 )		1702	0					
ANR	1752	UnaryOperator	&		1702	0					
ANR	1753	MemberAccess	addr . ip . v4		1702	1					
ANR	1754	MemberAccess	addr . ip		1702	0					
ANR	1755	Identifier	addr		1702	0					
ANR	1756	Identifier	ip		1702	1					
ANR	1757	Identifier	v4		1702	1					
ANR	1758	ElseStatement	else		1702	0					
ANR	1759	IfStatement	if ( addr . version == 6 )		1702	0					
ANR	1760	Condition	addr . version == 6	362:15:9339:9355	1702	0	True				
ANR	1761	EqualityExpression	addr . version == 6		1702	0		==			
ANR	1762	MemberAccess	addr . version		1702	0					
ANR	1763	Identifier	addr		1702	0					
ANR	1764	Identifier	version		1702	1					
ANR	1765	PrimaryExpression	6		1702	1					
ANR	1766	CompoundStatement		10:34:226:226	1702	1					
ANR	1767	ExpressionStatement	"ipset_ipv6_add ( & black_list_ipv6 , & ( addr . ip . v6 ) )"	363:8:9368:9415	1702	0	True				
ANR	1768	CallExpression	"ipset_ipv6_add ( & black_list_ipv6 , & ( addr . ip . v6 ) )"		1702	0					
ANR	1769	Callee	ipset_ipv6_add		1702	0					
ANR	1770	Identifier	ipset_ipv6_add		1702	0					
ANR	1771	ArgumentList	& black_list_ipv6		1702	1					
ANR	1772	Argument	& black_list_ipv6		1702	0					
ANR	1773	UnaryOperationExpression	& black_list_ipv6		1702	0					
ANR	1774	UnaryOperator	&		1702	0					
ANR	1775	Identifier	black_list_ipv6		1702	1					
ANR	1776	Argument	& ( addr . ip . v6 )		1702	1					
ANR	1777	UnaryOperationExpression	& ( addr . ip . v6 )		1702	0					
ANR	1778	UnaryOperator	&		1702	0					
ANR	1779	MemberAccess	addr . ip . v6		1702	1					
ANR	1780	MemberAccess	addr . ip		1702	0					
ANR	1781	Identifier	addr		1702	0					
ANR	1782	Identifier	ip		1702	1					
ANR	1783	Identifier	v6		1702	1					
ANR	1784	ReturnStatement	return 0 ;	366:4:9428:9436	1702	4	True				
ANR	1785	PrimaryExpression	0		1702	0					
ANR	1786	ReturnType	int		1702	1					
ANR	1787	Identifier	acl_add_ip		1702	2					
ANR	1788	ParameterList	const char * ip		1702	3					
ANR	1789	Parameter	const char * ip	352:11:9115:9128	1702	0	True				
ANR	1790	ParameterType	const char *		1702	0					
ANR	1791	Identifier	ip		1702	1					
ANR	1792	CFGEntryNode	ENTRY		1702		True				
ANR	1793	CFGExitNode	EXIT		1702		True				
ANR	1794	Symbol	& addr		1702						
ANR	1795	Symbol	err		1702						
ANR	1796	Symbol	ip		1702						
ANR	1797	Symbol	& black_list_ipv6		1702						
ANR	1798	Symbol	& addr . ip . v6		1702						
ANR	1799	Symbol	cork_ip_init		1702						
ANR	1800	Symbol	& addr . ip		1702						
ANR	1801	Symbol	& black_list_ipv4		1702						
ANR	1802	Symbol	addr . ip		1702						
ANR	1803	Symbol	addr		1702						
ANR	1804	Symbol	addr . version		1702						
ANR	1805	Symbol	& addr . ip . v4		1702						
ANR	1806	Function	acl_remove_ip	369:0:9441:9788							
ANR	1807	FunctionDef	acl_remove_ip (const char * ip)		1806	0					
ANR	1808	CompoundStatement		371:0:9475:9788	1806	0					
ANR	1809	IdentifierDeclStatement	struct cork_ip addr ;	372:4:9481:9500	1806	0	True				
ANR	1810	IdentifierDecl	addr		1806	0					
ANR	1811	IdentifierDeclType	struct cork_ip		1806	0					
ANR	1812	Identifier	addr		1806	1					
ANR	1813	IdentifierDeclStatement	"int err = cork_ip_init ( & addr , ip ) ;"	373:4:9506:9539	1806	1	True				
ANR	1814	IdentifierDecl	"err = cork_ip_init ( & addr , ip )"		1806	0					
ANR	1815	IdentifierDeclType	int		1806	0					
ANR	1816	Identifier	err		1806	1					
ANR	1817	AssignmentExpression	"err = cork_ip_init ( & addr , ip )"		1806	2		=			
ANR	1818	Identifier	err		1806	0					
ANR	1819	CallExpression	"cork_ip_init ( & addr , ip )"		1806	1					
ANR	1820	Callee	cork_ip_init		1806	0					
ANR	1821	Identifier	cork_ip_init		1806	0					
ANR	1822	ArgumentList	& addr		1806	1					
ANR	1823	Argument	& addr		1806	0					
ANR	1824	UnaryOperationExpression	& addr		1806	0					
ANR	1825	UnaryOperator	&		1806	0					
ANR	1826	Identifier	addr		1806	1					
ANR	1827	Argument	ip		1806	1					
ANR	1828	Identifier	ip		1806	0					
ANR	1829	IfStatement	if ( err )		1806	2					
ANR	1830	Condition	err	374:8:9549:9551	1806	0	True				
ANR	1831	Identifier	err		1806	0					
ANR	1832	CompoundStatement		4:13:78:78	1806	1					
ANR	1833	ReturnStatement	return - 1 ;	375:8:9564:9573	1806	0	True				
ANR	1834	UnaryOperationExpression	- 1		1806	0					
ANR	1835	UnaryOperator	-		1806	0					
ANR	1836	PrimaryExpression	1		1806	1					
ANR	1837	IfStatement	if ( addr . version == 4 )		1806	3					
ANR	1838	Condition	addr . version == 4	378:8:9590:9606	1806	0	True				
ANR	1839	EqualityExpression	addr . version == 4		1806	0		==			
ANR	1840	MemberAccess	addr . version		1806	0					
ANR	1841	Identifier	addr		1806	0					
ANR	1842	Identifier	version		1806	1					
ANR	1843	PrimaryExpression	4		1806	1					
ANR	1844	CompoundStatement		8:27:133:133	1806	1					
ANR	1845	ExpressionStatement	"ipset_ipv4_remove ( & black_list_ipv4 , & ( addr . ip . v4 ) )"	379:8:9619:9669	1806	0	True				
ANR	1846	CallExpression	"ipset_ipv4_remove ( & black_list_ipv4 , & ( addr . ip . v4 ) )"		1806	0					
ANR	1847	Callee	ipset_ipv4_remove		1806	0					
ANR	1848	Identifier	ipset_ipv4_remove		1806	0					
ANR	1849	ArgumentList	& black_list_ipv4		1806	1					
ANR	1850	Argument	& black_list_ipv4		1806	0					
ANR	1851	UnaryOperationExpression	& black_list_ipv4		1806	0					
ANR	1852	UnaryOperator	&		1806	0					
ANR	1853	Identifier	black_list_ipv4		1806	1					
ANR	1854	Argument	& ( addr . ip . v4 )		1806	1					
ANR	1855	UnaryOperationExpression	& ( addr . ip . v4 )		1806	0					
ANR	1856	UnaryOperator	&		1806	0					
ANR	1857	MemberAccess	addr . ip . v4		1806	1					
ANR	1858	MemberAccess	addr . ip		1806	0					
ANR	1859	Identifier	addr		1806	0					
ANR	1860	Identifier	ip		1806	1					
ANR	1861	Identifier	v4		1806	1					
ANR	1862	ElseStatement	else		1806	0					
ANR	1863	IfStatement	if ( addr . version == 6 )		1806	0					
ANR	1864	Condition	addr . version == 6	380:15:9686:9702	1806	0	True				
ANR	1865	EqualityExpression	addr . version == 6		1806	0		==			
ANR	1866	MemberAccess	addr . version		1806	0					
ANR	1867	Identifier	addr		1806	0					
ANR	1868	Identifier	version		1806	1					
ANR	1869	PrimaryExpression	6		1806	1					
ANR	1870	CompoundStatement		10:34:229:229	1806	1					
ANR	1871	ExpressionStatement	"ipset_ipv6_remove ( & black_list_ipv6 , & ( addr . ip . v6 ) )"	381:8:9715:9765	1806	0	True				
ANR	1872	CallExpression	"ipset_ipv6_remove ( & black_list_ipv6 , & ( addr . ip . v6 ) )"		1806	0					
ANR	1873	Callee	ipset_ipv6_remove		1806	0					
ANR	1874	Identifier	ipset_ipv6_remove		1806	0					
ANR	1875	ArgumentList	& black_list_ipv6		1806	1					
ANR	1876	Argument	& black_list_ipv6		1806	0					
ANR	1877	UnaryOperationExpression	& black_list_ipv6		1806	0					
ANR	1878	UnaryOperator	&		1806	0					
ANR	1879	Identifier	black_list_ipv6		1806	1					
ANR	1880	Argument	& ( addr . ip . v6 )		1806	1					
ANR	1881	UnaryOperationExpression	& ( addr . ip . v6 )		1806	0					
ANR	1882	UnaryOperator	&		1806	0					
ANR	1883	MemberAccess	addr . ip . v6		1806	1					
ANR	1884	MemberAccess	addr . ip		1806	0					
ANR	1885	Identifier	addr		1806	0					
ANR	1886	Identifier	ip		1806	1					
ANR	1887	Identifier	v6		1806	1					
ANR	1888	ReturnStatement	return 0 ;	384:4:9778:9786	1806	4	True				
ANR	1889	PrimaryExpression	0		1806	0					
ANR	1890	ReturnType	int		1806	1					
ANR	1891	Identifier	acl_remove_ip		1806	2					
ANR	1892	ParameterList	const char * ip		1806	3					
ANR	1893	Parameter	const char * ip	370:14:9459:9472	1806	0	True				
ANR	1894	ParameterType	const char *		1806	0					
ANR	1895	Identifier	ip		1806	1					
ANR	1896	CFGEntryNode	ENTRY		1806		True				
ANR	1897	CFGExitNode	EXIT		1806		True				
ANR	1898	Symbol	& addr		1806						
ANR	1899	Symbol	err		1806						
ANR	1900	Symbol	ip		1806						
ANR	1901	Symbol	& black_list_ipv6		1806						
ANR	1902	Symbol	& addr . ip . v6		1806						
ANR	1903	Symbol	cork_ip_init		1806						
ANR	1904	Symbol	& addr . ip		1806						
ANR	1905	Symbol	& black_list_ipv4		1806						
ANR	1906	Symbol	addr . ip		1806						
ANR	1907	Symbol	addr		1806						
ANR	1908	Symbol	addr . version		1806						
ANR	1909	Symbol	& addr . ip . v4		1806						
ANR	1910	Function	outbound_block_match_host	391:0:9861:10452							
ANR	1911	FunctionDef	outbound_block_match_host (const char * host)		1910	0					
ANR	1912	CompoundStatement		393:0:9909:10452	1910	0					
ANR	1913	IdentifierDeclStatement	struct cork_ip addr ;	394:4:9915:9934	1910	0	True				
ANR	1914	IdentifierDecl	addr		1910	0					
ANR	1915	IdentifierDeclType	struct cork_ip		1910	0					
ANR	1916	Identifier	addr		1910	1					
ANR	1917	IdentifierDeclStatement	int ret = 0 ;	395:4:9940:9951	1910	1	True				
ANR	1918	IdentifierDecl	ret = 0		1910	0					
ANR	1919	IdentifierDeclType	int		1910	0					
ANR	1920	Identifier	ret		1910	1					
ANR	1921	AssignmentExpression	ret = 0		1910	2		=			
ANR	1922	Identifier	ret		1910	0					
ANR	1923	PrimaryExpression	0		1910	1					
ANR	1924	IdentifierDeclStatement	"int err = cork_ip_init ( & addr , host ) ;"	396:4:9957:9992	1910	2	True				
ANR	1925	IdentifierDecl	"err = cork_ip_init ( & addr , host )"		1910	0					
ANR	1926	IdentifierDeclType	int		1910	0					
ANR	1927	Identifier	err		1910	1					
ANR	1928	AssignmentExpression	"err = cork_ip_init ( & addr , host )"		1910	2		=			
ANR	1929	Identifier	err		1910	0					
ANR	1930	CallExpression	"cork_ip_init ( & addr , host )"		1910	1					
ANR	1931	Callee	cork_ip_init		1910	0					
ANR	1932	Identifier	cork_ip_init		1910	0					
ANR	1933	ArgumentList	& addr		1910	1					
ANR	1934	Argument	& addr		1910	0					
ANR	1935	UnaryOperationExpression	& addr		1910	0					
ANR	1936	UnaryOperator	&		1910	0					
ANR	1937	Identifier	addr		1910	1					
ANR	1938	Argument	host		1910	1					
ANR	1939	Identifier	host		1910	0					
ANR	1940	IfStatement	if ( err )		1910	3					
ANR	1941	Condition	err	398:8:10003:10005	1910	0	True				
ANR	1942	Identifier	err		1910	0					
ANR	1943	CompoundStatement		7:8:108:135	1910	1					
ANR	1944	IdentifierDeclStatement	int host_len = strlen ( host ) ;	399:8:10018:10045	1910	0	True				
ANR	1945	IdentifierDecl	host_len = strlen ( host )		1910	0					
ANR	1946	IdentifierDeclType	int		1910	0					
ANR	1947	Identifier	host_len		1910	1					
ANR	1948	AssignmentExpression	host_len = strlen ( host )		1910	2		=			
ANR	1949	Identifier	host_len		1910	0					
ANR	1950	CallExpression	strlen ( host )		1910	1					
ANR	1951	Callee	strlen		1910	0					
ANR	1952	Identifier	strlen		1910	0					
ANR	1953	ArgumentList	host		1910	1					
ANR	1954	Argument	host		1910	0					
ANR	1955	Identifier	host		1910	0					
ANR	1956	IfStatement	"if ( lookup_rule ( & outbound_block_list_rules , host , host_len ) != NULL )"		1910	1					
ANR	1957	Condition	"lookup_rule ( & outbound_block_list_rules , host , host_len ) != NULL"	400:12:10059:10121	1910	0	True				
ANR	1958	EqualityExpression	"lookup_rule ( & outbound_block_list_rules , host , host_len ) != NULL"		1910	0		!=			
ANR	1959	CallExpression	"lookup_rule ( & outbound_block_list_rules , host , host_len )"		1910	0					
ANR	1960	Callee	lookup_rule		1910	0					
ANR	1961	Identifier	lookup_rule		1910	0					
ANR	1962	ArgumentList	& outbound_block_list_rules		1910	1					
ANR	1963	Argument	& outbound_block_list_rules		1910	0					
ANR	1964	UnaryOperationExpression	& outbound_block_list_rules		1910	0					
ANR	1965	UnaryOperator	&		1910	0					
ANR	1966	Identifier	outbound_block_list_rules		1910	1					
ANR	1967	Argument	host		1910	1					
ANR	1968	Identifier	host		1910	0					
ANR	1969	Argument	host_len		1910	2					
ANR	1970	Identifier	host_len		1910	0					
ANR	1971	Identifier	NULL		1910	1					
ANR	1972	ExpressionStatement	ret = 1	401:12:10136:10143	1910	1	True				
ANR	1973	AssignmentExpression	ret = 1		1910	0		=			
ANR	1974	Identifier	ret		1910	0					
ANR	1975	PrimaryExpression	1		1910	1					
ANR	1976	ReturnStatement	return ret ;	402:8:10153:10163	1910	2	True				
ANR	1977	Identifier	ret		1910	0					
ANR	1978	IfStatement	if ( addr . version == 4 )		1910	4					
ANR	1979	Condition	addr . version == 4	405:8:10180:10196	1910	0	True				
ANR	1980	EqualityExpression	addr . version == 4		1910	0		==			
ANR	1981	MemberAccess	addr . version		1910	0					
ANR	1982	Identifier	addr		1910	0					
ANR	1983	Identifier	version		1910	1					
ANR	1984	PrimaryExpression	4		1910	1					
ANR	1985	CompoundStatement		13:27:289:289	1910	1					
ANR	1986	IfStatement	"if ( ipset_contains_ipv4 ( & outbound_block_list_ipv4 , & ( addr . ip . v4 ) ) )"		1910	0					
ANR	1987	Condition	"ipset_contains_ipv4 ( & outbound_block_list_ipv4 , & ( addr . ip . v4 ) )"	406:12:10213:10273	1910	0	True				
ANR	1988	CallExpression	"ipset_contains_ipv4 ( & outbound_block_list_ipv4 , & ( addr . ip . v4 ) )"		1910	0					
ANR	1989	Callee	ipset_contains_ipv4		1910	0					
ANR	1990	Identifier	ipset_contains_ipv4		1910	0					
ANR	1991	ArgumentList	& outbound_block_list_ipv4		1910	1					
ANR	1992	Argument	& outbound_block_list_ipv4		1910	0					
ANR	1993	UnaryOperationExpression	& outbound_block_list_ipv4		1910	0					
ANR	1994	UnaryOperator	&		1910	0					
ANR	1995	Identifier	outbound_block_list_ipv4		1910	1					
ANR	1996	Argument	& ( addr . ip . v4 )		1910	1					
ANR	1997	UnaryOperationExpression	& ( addr . ip . v4 )		1910	0					
ANR	1998	UnaryOperator	&		1910	0					
ANR	1999	MemberAccess	addr . ip . v4		1910	1					
ANR	2000	MemberAccess	addr . ip		1910	0					
ANR	2001	Identifier	addr		1910	0					
ANR	2002	Identifier	ip		1910	1					
ANR	2003	Identifier	v4		1910	1					
ANR	2004	ExpressionStatement	ret = 1	407:12:10288:10295	1910	1	True				
ANR	2005	AssignmentExpression	ret = 1		1910	0		=			
ANR	2006	Identifier	ret		1910	0					
ANR	2007	PrimaryExpression	1		1910	1					
ANR	2008	ElseStatement	else		1910	0					
ANR	2009	IfStatement	if ( addr . version == 6 )		1910	0					
ANR	2010	Condition	addr . version == 6	408:15:10312:10328	1910	0	True				
ANR	2011	EqualityExpression	addr . version == 6		1910	0		==			
ANR	2012	MemberAccess	addr . version		1910	0					
ANR	2013	Identifier	addr		1910	0					
ANR	2014	Identifier	version		1910	1					
ANR	2015	PrimaryExpression	6		1910	1					
ANR	2016	CompoundStatement		16:34:421:421	1910	1					
ANR	2017	IfStatement	"if ( ipset_contains_ipv6 ( & outbound_block_list_ipv6 , & ( addr . ip . v6 ) ) )"		1910	0					
ANR	2018	Condition	"ipset_contains_ipv6 ( & outbound_block_list_ipv6 , & ( addr . ip . v6 ) )"	409:12:10345:10405	1910	0	True				
ANR	2019	CallExpression	"ipset_contains_ipv6 ( & outbound_block_list_ipv6 , & ( addr . ip . v6 ) )"		1910	0					
ANR	2020	Callee	ipset_contains_ipv6		1910	0					
ANR	2021	Identifier	ipset_contains_ipv6		1910	0					
ANR	2022	ArgumentList	& outbound_block_list_ipv6		1910	1					
ANR	2023	Argument	& outbound_block_list_ipv6		1910	0					
ANR	2024	UnaryOperationExpression	& outbound_block_list_ipv6		1910	0					
ANR	2025	UnaryOperator	&		1910	0					
ANR	2026	Identifier	outbound_block_list_ipv6		1910	1					
ANR	2027	Argument	& ( addr . ip . v6 )		1910	1					
ANR	2028	UnaryOperationExpression	& ( addr . ip . v6 )		1910	0					
ANR	2029	UnaryOperator	&		1910	0					
ANR	2030	MemberAccess	addr . ip . v6		1910	1					
ANR	2031	MemberAccess	addr . ip		1910	0					
ANR	2032	Identifier	addr		1910	0					
ANR	2033	Identifier	ip		1910	1					
ANR	2034	Identifier	v6		1910	1					
ANR	2035	ExpressionStatement	ret = 1	410:12:10420:10427	1910	1	True				
ANR	2036	AssignmentExpression	ret = 1		1910	0		=			
ANR	2037	Identifier	ret		1910	0					
ANR	2038	PrimaryExpression	1		1910	1					
ANR	2039	ReturnStatement	return ret ;	413:4:10440:10450	1910	5	True				
ANR	2040	Identifier	ret		1910	0					
ANR	2041	ReturnType	int		1910	1					
ANR	2042	Identifier	outbound_block_match_host		1910	2					
ANR	2043	ParameterList	const char * host		1910	3					
ANR	2044	Parameter	const char * host	392:26:9891:9906	1910	0	True				
ANR	2045	ParameterType	const char *		1910	0					
ANR	2046	Identifier	host		1910	1					
ANR	2047	CFGEntryNode	ENTRY		1910		True				
ANR	2048	CFGExitNode	EXIT		1910		True				
ANR	2049	Symbol	ret		1910						
ANR	2050	Symbol	& addr		1910						
ANR	2051	Symbol	NULL		1910						
ANR	2052	Symbol	err		1910						
ANR	2053	Symbol	host_len		1910						
ANR	2054	Symbol	lookup_rule		1910						
ANR	2055	Symbol	ipset_contains_ipv4		1910						
ANR	2056	Symbol	& addr . ip . v6		1910						
ANR	2057	Symbol	ipset_contains_ipv6		1910						
ANR	2058	Symbol	& outbound_block_list_ipv6		1910						
ANR	2059	Symbol	& addr . ip . v4		1910						
ANR	2060	Symbol	& outbound_block_list_ipv4		1910						
ANR	2061	Symbol	strlen		1910						
ANR	2062	Symbol	host		1910						
ANR	2063	Symbol	cork_ip_init		1910						
ANR	2064	Symbol	& outbound_block_list_rules		1910						
ANR	2065	Symbol	& addr . ip		1910						
ANR	2066	Symbol	addr . ip		1910						
ANR	2067	Symbol	addr		1910						
ANR	2068	Symbol	addr . version		1910						
