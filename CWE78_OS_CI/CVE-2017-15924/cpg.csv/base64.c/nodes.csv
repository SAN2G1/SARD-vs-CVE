command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6264	File	data/converged/CVE-2017-15924_shadowsocks-libev/base64.c								
ANR	6265	DeclStmt									
ANR	6266	Decl							const uint8_t	const uint8_t [ ]	map2
ANR	6267	Function	base64_decode	51:0:1655:2136							
ANR	6268	FunctionDef	"base64_decode (uint8_t * out , const char * in , int out_size)"		6267	0					
ANR	6269	CompoundStatement		52:0:1717:2136	6267	0					
ANR	6270	IdentifierDeclStatement	"int i , v ;"	53:4:1723:1731	6267	0	True				
ANR	6271	IdentifierDecl	i		6267	0					
ANR	6272	IdentifierDeclType	int		6267	0					
ANR	6273	Identifier	i		6267	1					
ANR	6274	IdentifierDecl	v		6267	1					
ANR	6275	IdentifierDeclType	int		6267	0					
ANR	6276	Identifier	v		6267	1					
ANR	6277	IdentifierDeclStatement	uint8_t * dst = out ;	54:4:1737:1755	6267	1	True				
ANR	6278	IdentifierDecl	* dst = out		6267	0					
ANR	6279	IdentifierDeclType	uint8_t *		6267	0					
ANR	6280	Identifier	dst		6267	1					
ANR	6281	AssignmentExpression	* dst = out		6267	2		=			
ANR	6282	Identifier	out		6267	0					
ANR	6283	Identifier	out		6267	1					
ANR	6284	ExpressionStatement	v = 0	56:4:1762:1767	6267	2	True				
ANR	6285	AssignmentExpression	v = 0		6267	0		=			
ANR	6286	Identifier	v		6267	0					
ANR	6287	PrimaryExpression	0		6267	1					
ANR	6288	ForStatement	for ( i = 0 ; in [ i ] && in [ i ] != '=' ; i ++ )		6267	3					
ANR	6289	ForInit	i = 0 ;	57:9:1778:1783	6267	0	True				
ANR	6290	AssignmentExpression	i = 0		6267	0		=			
ANR	6291	Identifier	i		6267	0					
ANR	6292	PrimaryExpression	0		6267	1					
ANR	6293	Condition	in [ i ] && in [ i ] != '='	57:16:1785:1805	6267	1	True				
ANR	6294	AndExpression	in [ i ] && in [ i ] != '='		6267	0		&&			
ANR	6295	ArrayIndexing	in [ i ]		6267	0					
ANR	6296	Identifier	in		6267	0					
ANR	6297	Identifier	i		6267	1					
ANR	6298	EqualityExpression	in [ i ] != '='		6267	1		!=			
ANR	6299	ArrayIndexing	in [ i ]		6267	0					
ANR	6300	Identifier	in		6267	0					
ANR	6301	Identifier	i		6267	1					
ANR	6302	PrimaryExpression	'='		6267	1					
ANR	6303	PostIncDecOperationExpression	i ++	57:39:1808:1810	6267	2	True				
ANR	6304	Identifier	i		6267	0					
ANR	6305	IncDec	++		6267	1					
ANR	6306	CompoundStatement		7:8:105:136	6267	3					
ANR	6307	IdentifierDeclStatement	unsigned int index = in [ i ] - 43 ;	58:8:1823:1854	6267	0	True				
ANR	6308	IdentifierDecl	index = in [ i ] - 43		6267	0					
ANR	6309	IdentifierDeclType	unsigned int		6267	0					
ANR	6310	Identifier	index		6267	1					
ANR	6311	AssignmentExpression	index = in [ i ] - 43		6267	2		=			
ANR	6312	Identifier	index		6267	0					
ANR	6313	AdditiveExpression	in [ i ] - 43		6267	1		-			
ANR	6314	ArrayIndexing	in [ i ]		6267	0					
ANR	6315	Identifier	in		6267	0					
ANR	6316	Identifier	i		6267	1					
ANR	6317	PrimaryExpression	43		6267	1					
ANR	6318	IfStatement	if ( index >= sizeof ( map2 ) || map2 [ index ] == 0xff )		6267	1					
ANR	6319	Condition	index >= sizeof ( map2 ) || map2 [ index ] == 0xff	59:12:1868:1911	6267	0	True				
ANR	6320	OrExpression	index >= sizeof ( map2 ) || map2 [ index ] == 0xff		6267	0		||			
ANR	6321	RelationalExpression	index >= sizeof ( map2 )		6267	0		>=			
ANR	6322	Identifier	index		6267	0					
ANR	6323	SizeofExpression	sizeof ( map2 )		6267	1					
ANR	6324	Sizeof	sizeof		6267	0					
ANR	6325	SizeofOperand	map2		6267	1					
ANR	6326	EqualityExpression	map2 [ index ] == 0xff		6267	1		==			
ANR	6327	ArrayIndexing	map2 [ index ]		6267	0					
ANR	6328	Identifier	map2		6267	0					
ANR	6329	Identifier	index		6267	1					
ANR	6330	PrimaryExpression	0xff		6267	1					
ANR	6331	ReturnStatement	return - 1 ;	60:12:1926:1935	6267	1	True				
ANR	6332	UnaryOperationExpression	- 1		6267	0					
ANR	6333	UnaryOperator	-		6267	0					
ANR	6334	PrimaryExpression	1		6267	1					
ANR	6335	ExpressionStatement	v = ( v << 6 ) + map2 [ index ]	61:8:1945:1971	6267	2	True				
ANR	6336	AssignmentExpression	v = ( v << 6 ) + map2 [ index ]		6267	0		=			
ANR	6337	Identifier	v		6267	0					
ANR	6338	AdditiveExpression	( v << 6 ) + map2 [ index ]		6267	1		+			
ANR	6339	ShiftExpression	v << 6		6267	0		<<			
ANR	6340	Identifier	v		6267	0					
ANR	6341	PrimaryExpression	6		6267	1					
ANR	6342	ArrayIndexing	map2 [ index ]		6267	1					
ANR	6343	Identifier	map2		6267	0					
ANR	6344	Identifier	index		6267	1					
ANR	6345	IfStatement	if ( i & 3 )		6267	3					
ANR	6346	Condition	i & 3	62:12:1985:1989	6267	0	True				
ANR	6347	BitAndExpression	i & 3		6267	0		&			
ANR	6348	Identifier	i		6267	0					
ANR	6349	PrimaryExpression	3		6267	1					
ANR	6350	CompoundStatement		11:19:274:274	6267	1					
ANR	6351	IfStatement	if ( dst - out < out_size )		6267	0					
ANR	6352	Condition	dst - out < out_size	63:16:2010:2029	6267	0	True				
ANR	6353	RelationalExpression	dst - out < out_size		6267	0		<			
ANR	6354	AdditiveExpression	dst - out		6267	0		-			
ANR	6355	Identifier	dst		6267	0					
ANR	6356	Identifier	out		6267	1					
ANR	6357	Identifier	out_size		6267	1					
ANR	6358	CompoundStatement		12:38:314:314	6267	1					
ANR	6359	ExpressionStatement	* dst ++ = v >> ( 6 - 2 * ( i & 3 ) )	64:16:2050:2081	6267	0	True				
ANR	6360	AssignmentExpression	* dst ++ = v >> ( 6 - 2 * ( i & 3 ) )		6267	0		=			
ANR	6361	UnaryOperationExpression	* dst ++		6267	0					
ANR	6362	UnaryOperator	*		6267	0					
ANR	6363	PostIncDecOperationExpression	dst ++		6267	1					
ANR	6364	Identifier	dst		6267	0					
ANR	6365	IncDec	++		6267	1					
ANR	6366	ShiftExpression	v >> ( 6 - 2 * ( i & 3 ) )		6267	1		>>			
ANR	6367	Identifier	v		6267	0					
ANR	6368	AdditiveExpression	6 - 2 * ( i & 3 )		6267	1		-			
ANR	6369	PrimaryExpression	6		6267	0					
ANR	6370	MultiplicativeExpression	2 * ( i & 3 )		6267	1		*			
ANR	6371	PrimaryExpression	2		6267	0					
ANR	6372	BitAndExpression	i & 3		6267	1		&			
ANR	6373	Identifier	i		6267	0					
ANR	6374	PrimaryExpression	3		6267	1					
ANR	6375	ReturnStatement	return dst - out ;	69:4:2118:2134	6267	4	True				
ANR	6376	AdditiveExpression	dst - out		6267	0		-			
ANR	6377	Identifier	dst		6267	0					
ANR	6378	Identifier	out		6267	1					
ANR	6379	ReturnType	int		6267	1					
ANR	6380	Identifier	base64_decode		6267	2					
ANR	6381	ParameterList	"uint8_t * out , const char * in , int out_size"		6267	3					
ANR	6382	Parameter	uint8_t * out	51:18:1673:1684	6267	0	True				
ANR	6383	ParameterType	uint8_t *		6267	0					
ANR	6384	Identifier	out		6267	1					
ANR	6385	Parameter	const char * in	51:32:1687:1700	6267	1	True				
ANR	6386	ParameterType	const char *		6267	0					
ANR	6387	Identifier	in		6267	1					
ANR	6388	Parameter	int out_size	51:48:1703:1714	6267	2	True				
ANR	6389	ParameterType	int		6267	0					
ANR	6390	Identifier	out_size		6267	1					
ANR	6391	CFGEntryNode	ENTRY		6267		True				
ANR	6392	CFGExitNode	EXIT		6267		True				
ANR	6393	Symbol	dst		6267						
ANR	6394	Symbol	in		6267						
ANR	6395	Symbol	map2		6267						
ANR	6396	Symbol	* index		6267						
ANR	6397	Symbol	* in		6267						
ANR	6398	Symbol	i		6267						
ANR	6399	Symbol	index		6267						
ANR	6400	Symbol	out_size		6267						
ANR	6401	Symbol	* map2		6267						
ANR	6402	Symbol	out		6267						
ANR	6403	Symbol	* i		6267						
ANR	6404	Symbol	v		6267						
ANR	6405	Symbol	* dst ++		6267						
ANR	6406	Function	base64_encode	78:0:2432:3218							
ANR	6407	FunctionDef	"base64_encode (char * out , int out_size , const uint8_t * in , int in_size)"		6406	0					
ANR	6408	CompoundStatement		79:0:2509:3218	6406	0					
ANR	6409	Statement	static	80:4:2515:2520	6406	0	True				
ANR	6410	IdentifierDeclStatement	"const char b64 [ ] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"" ;"	80:11:2522:2615	6406	1	True				
ANR	6411	IdentifierDecl	"b64 [ ] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"""		6406	0					
ANR	6412	IdentifierDeclType	const char [ ]		6406	0					
ANR	6413	Identifier	b64		6406	1					
ANR	6414	AssignmentExpression	"b64 [ ] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"""		6406	2		=			
ANR	6415	Identifier	b64		6406	0					
ANR	6416	PrimaryExpression	"""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"""		6406	1					
ANR	6417	IdentifierDeclStatement	"char * ret , * dst ;"	82:4:2621:2636	6406	2	True				
ANR	6418	IdentifierDecl	* ret		6406	0					
ANR	6419	IdentifierDeclType	char *		6406	0					
ANR	6420	Identifier	ret		6406	1					
ANR	6421	IdentifierDecl	* dst		6406	1					
ANR	6422	IdentifierDeclType	char *		6406	0					
ANR	6423	Identifier	dst		6406	1					
ANR	6424	IdentifierDeclStatement	unsigned i_bits = 0 ;	83:4:2642:2661	6406	3	True				
ANR	6425	IdentifierDecl	i_bits = 0		6406	0					
ANR	6426	IdentifierDeclType	unsigned		6406	0					
ANR	6427	Identifier	i_bits		6406	1					
ANR	6428	AssignmentExpression	i_bits = 0		6406	2		=			
ANR	6429	Identifier	i_bits		6406	0					
ANR	6430	PrimaryExpression	0		6406	1					
ANR	6431	IdentifierDeclStatement	int i_shift = 0 ;	84:4:2667:2682	6406	4	True				
ANR	6432	IdentifierDecl	i_shift = 0		6406	0					
ANR	6433	IdentifierDeclType	int		6406	0					
ANR	6434	Identifier	i_shift		6406	1					
ANR	6435	AssignmentExpression	i_shift = 0		6406	2		=			
ANR	6436	Identifier	i_shift		6406	0					
ANR	6437	PrimaryExpression	0		6406	1					
ANR	6438	IdentifierDeclStatement	int bytes_remaining = in_size ;	85:4:2688:2717	6406	5	True				
ANR	6439	IdentifierDecl	bytes_remaining = in_size		6406	0					
ANR	6440	IdentifierDeclType	int		6406	0					
ANR	6441	Identifier	bytes_remaining		6406	1					
ANR	6442	AssignmentExpression	bytes_remaining = in_size		6406	2		=			
ANR	6443	Identifier	in_size		6406	0					
ANR	6444	Identifier	in_size		6406	1					
ANR	6445	IfStatement	if ( in_size >= UINT_MAX / 4 || out_size < BASE64_SIZE ( in_size ) )		6406	6					
ANR	6446	Condition	in_size >= UINT_MAX / 4 || out_size < BASE64_SIZE ( in_size )	87:8:2728:2793	6406	0	True				
ANR	6447	OrExpression	in_size >= UINT_MAX / 4 || out_size < BASE64_SIZE ( in_size )		6406	0		||			
ANR	6448	RelationalExpression	in_size >= UINT_MAX / 4		6406	0		>=			
ANR	6449	Identifier	in_size		6406	0					
ANR	6450	MultiplicativeExpression	UINT_MAX / 4		6406	1		/			
ANR	6451	Identifier	UINT_MAX		6406	0					
ANR	6452	PrimaryExpression	4		6406	1					
ANR	6453	RelationalExpression	out_size < BASE64_SIZE ( in_size )		6406	1		<			
ANR	6454	Identifier	out_size		6406	0					
ANR	6455	CallExpression	BASE64_SIZE ( in_size )		6406	1					
ANR	6456	Callee	BASE64_SIZE		6406	0					
ANR	6457	Identifier	BASE64_SIZE		6406	0					
ANR	6458	ArgumentList	in_size		6406	1					
ANR	6459	Argument	in_size		6406	0					
ANR	6460	Identifier	in_size		6406	0					
ANR	6461	ReturnStatement	return NULL ;	89:8:2804:2815	6406	1	True				
ANR	6462	Identifier	NULL		6406	0					
ANR	6463	ExpressionStatement	ret = dst = out	90:4:2821:2836	6406	7	True				
ANR	6464	AssignmentExpression	ret = dst = out		6406	0		=			
ANR	6465	Identifier	ret		6406	0					
ANR	6466	AssignmentExpression	dst = out		6406	1		=			
ANR	6467	Identifier	dst		6406	0					
ANR	6468	Identifier	out		6406	1					
ANR	6469	WhileStatement	while ( bytes_remaining )		6406	8					
ANR	6470	Condition	bytes_remaining	91:11:2849:2863	6406	0	True				
ANR	6471	Identifier	bytes_remaining		6406	0					
ANR	6472	CompoundStatement		13:28:356:356	6406	1					
ANR	6473	ExpressionStatement	i_bits = ( i_bits << 8 ) + * in ++	92:8:2876:2906	6406	0	True				
ANR	6474	AssignmentExpression	i_bits = ( i_bits << 8 ) + * in ++		6406	0		=			
ANR	6475	Identifier	i_bits		6406	0					
ANR	6476	AdditiveExpression	( i_bits << 8 ) + * in ++		6406	1		+			
ANR	6477	ShiftExpression	i_bits << 8		6406	0		<<			
ANR	6478	Identifier	i_bits		6406	0					
ANR	6479	PrimaryExpression	8		6406	1					
ANR	6480	UnaryOperationExpression	* in ++		6406	1					
ANR	6481	UnaryOperator	*		6406	0					
ANR	6482	PostIncDecOperationExpression	in ++		6406	1					
ANR	6483	Identifier	in		6406	0					
ANR	6484	IncDec	++		6406	1					
ANR	6485	ExpressionStatement	bytes_remaining --	93:8:2916:2933	6406	1	True				
ANR	6486	PostIncDecOperationExpression	bytes_remaining --		6406	0					
ANR	6487	Identifier	bytes_remaining		6406	0					
ANR	6488	IncDec	--		6406	1					
ANR	6489	ExpressionStatement	i_shift += 8	94:8:2943:2955	6406	2	True				
ANR	6490	AssignmentExpression	i_shift += 8		6406	0		+=			
ANR	6491	Identifier	i_shift		6406	0					
ANR	6492	PrimaryExpression	8		6406	1					
ANR	6493	DoStatement	do		6406	3					
ANR	6494	CompoundStatement		18:11:459:459	6406	0					
ANR	6495	ExpressionStatement	* dst ++ = b64 [ ( i_bits << 6 >> i_shift ) & 0x3f ]	97:12:2983:3028	6406	0	True				
ANR	6496	AssignmentExpression	* dst ++ = b64 [ ( i_bits << 6 >> i_shift ) & 0x3f ]		6406	0		=			
ANR	6497	UnaryOperationExpression	* dst ++		6406	0					
ANR	6498	UnaryOperator	*		6406	0					
ANR	6499	PostIncDecOperationExpression	dst ++		6406	1					
ANR	6500	Identifier	dst		6406	0					
ANR	6501	IncDec	++		6406	1					
ANR	6502	ArrayIndexing	b64 [ ( i_bits << 6 >> i_shift ) & 0x3f ]		6406	1					
ANR	6503	Identifier	b64		6406	0					
ANR	6504	BitAndExpression	( i_bits << 6 >> i_shift ) & 0x3f		6406	1		&			
ANR	6505	ShiftExpression	i_bits << 6 >> i_shift		6406	0		<<			
ANR	6506	Identifier	i_bits		6406	0					
ANR	6507	ShiftExpression	6 >> i_shift		6406	1		>>			
ANR	6508	PrimaryExpression	6		6406	0					
ANR	6509	Identifier	i_shift		6406	1					
ANR	6510	PrimaryExpression	0x3f		6406	1					
ANR	6511	ExpressionStatement	i_shift -= 6	98:12:3042:3054	6406	1	True				
ANR	6512	AssignmentExpression	i_shift -= 6		6406	0		-=			
ANR	6513	Identifier	i_shift		6406	0					
ANR	6514	PrimaryExpression	6		6406	1					
ANR	6515	Condition	i_shift > 6 || ( bytes_remaining == 0 && i_shift > 0 )	99:17:3073:3124	6406	1	True				
ANR	6516	OrExpression	i_shift > 6 || ( bytes_remaining == 0 && i_shift > 0 )		6406	0		||			
ANR	6517	RelationalExpression	i_shift > 6		6406	0		>			
ANR	6518	Identifier	i_shift		6406	0					
ANR	6519	PrimaryExpression	6		6406	1					
ANR	6520	AndExpression	bytes_remaining == 0 && i_shift > 0		6406	1		&&			
ANR	6521	EqualityExpression	bytes_remaining == 0		6406	0		==			
ANR	6522	Identifier	bytes_remaining		6406	0					
ANR	6523	PrimaryExpression	0		6406	1					
ANR	6524	RelationalExpression	i_shift > 0		6406	1		>			
ANR	6525	Identifier	i_shift		6406	0					
ANR	6526	PrimaryExpression	0		6406	1					
ANR	6527	WhileStatement	while ( ( dst - ret ) & 3 )		6406	9					
ANR	6528	Condition	( dst - ret ) & 3	101:11:3145:3159	6406	0	True				
ANR	6529	BitAndExpression	( dst - ret ) & 3		6406	0		&			
ANR	6530	AdditiveExpression	dst - ret		6406	0		-			
ANR	6531	Identifier	dst		6406	0					
ANR	6532	Identifier	ret		6406	1					
ANR	6533	PrimaryExpression	3		6406	1					
ANR	6534	ExpressionStatement	* dst ++ = '='	102:8:3170:3182	6406	1	True				
ANR	6535	AssignmentExpression	* dst ++ = '='		6406	0		=			
ANR	6536	UnaryOperationExpression	* dst ++		6406	0					
ANR	6537	UnaryOperator	*		6406	0					
ANR	6538	PostIncDecOperationExpression	dst ++		6406	1					
ANR	6539	Identifier	dst		6406	0					
ANR	6540	IncDec	++		6406	1					
ANR	6541	PrimaryExpression	'='		6406	1					
ANR	6542	ExpressionStatement	* dst = '\\0'	103:4:3188:3199	6406	10	True				
ANR	6543	AssignmentExpression	* dst = '\\0'		6406	0		=			
ANR	6544	UnaryOperationExpression	* dst		6406	0					
ANR	6545	UnaryOperator	*		6406	0					
ANR	6546	Identifier	dst		6406	1					
ANR	6547	PrimaryExpression	'\\0'		6406	1					
ANR	6548	ReturnStatement	return ret ;	105:4:3206:3216	6406	11	True				
ANR	6549	Identifier	ret		6406	0					
ANR	6550	ReturnType	char *		6406	1					
ANR	6551	Identifier	base64_encode		6406	2					
ANR	6552	ParameterList	"char * out , int out_size , const uint8_t * in , int in_size"		6406	3					
ANR	6553	Parameter	char * out	78:20:2452:2460	6406	0	True				
ANR	6554	ParameterType	char *		6406	0					
ANR	6555	Identifier	out		6406	1					
ANR	6556	Parameter	int out_size	78:31:2463:2474	6406	1	True				
ANR	6557	ParameterType	int		6406	0					
ANR	6558	Identifier	out_size		6406	1					
ANR	6559	Parameter	const uint8_t * in	78:45:2477:2493	6406	2	True				
ANR	6560	ParameterType	const uint8_t *		6406	0					
ANR	6561	Identifier	in		6406	1					
ANR	6562	Parameter	int in_size	78:64:2496:2506	6406	3	True				
ANR	6563	ParameterType	int		6406	0					
ANR	6564	Identifier	in_size		6406	1					
ANR	6565	CFGEntryNode	ENTRY		6406		True				
ANR	6566	CFGExitNode	EXIT		6406		True				
ANR	6567	Symbol	ret		6406						
ANR	6568	Symbol	b64		6406						
ANR	6569	Symbol	NULL		6406						
ANR	6570	Symbol	dst		6406						
ANR	6571	Symbol	in		6406						
ANR	6572	Symbol	in_size		6406						
ANR	6573	Symbol	i_bits		6406						
ANR	6574	Symbol	out_size		6406						
ANR	6575	Symbol	out		6406						
ANR	6576	Symbol	UINT_MAX		6406						
ANR	6577	Symbol	* dst		6406						
ANR	6578	Symbol	* b64		6406						
ANR	6579	Symbol	* dst ++		6406						
ANR	6580	Symbol	* i_shift		6406						
ANR	6581	Symbol	BASE64_SIZE		6406						
ANR	6582	Symbol	i_shift		6406						
ANR	6583	Symbol	bytes_remaining		6406						
ANR	6584	Symbol	* i_bits		6406						
ANR	6585	Symbol	* in ++		6406						
