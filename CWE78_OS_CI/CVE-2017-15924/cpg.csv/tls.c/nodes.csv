command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	135039	File	data/converged/CVE-2017-15924_shadowsocks-libev/tls.c								
ANR	135040	DeclStmt									
ANR	135041	Decl							extern int	extern int	verbose
ANR	135042	DeclStmt									
ANR	135043	Decl							int	"int ( const char * , size_t , char * * )"	parse_tls_header
ANR	135044	DeclStmt									
ANR	135045	Decl							int	"int ( const char * , size_t , char * * )"	parse_extensions
ANR	135046	DeclStmt									
ANR	135047	Decl							int	"int ( const char * , size_t , char * * )"	parse_server_name_extension
ANR	135048	DeclStmt									
ANR	135049	Decl							const protocol_t	const protocol_t	tls_protocol_st
ANR	135050	Function	parse_tls_header	79:0:2893:5641							
ANR	135051	FunctionDef	"parse_tls_header (const char * data , size_t data_len , char * * hostname)"		135050	0					
ANR	135052	CompoundStatement		81:0:2973:5641	135050	0					
ANR	135053	IdentifierDeclStatement	char tls_content_type ;	82:4:2979:3000	135050	0	True				
ANR	135054	IdentifierDecl	tls_content_type		135050	0					
ANR	135055	IdentifierDeclType	char		135050	0					
ANR	135056	Identifier	tls_content_type		135050	1					
ANR	135057	IdentifierDeclStatement	char tls_version_major ;	83:4:3006:3028	135050	1	True				
ANR	135058	IdentifierDecl	tls_version_major		135050	0					
ANR	135059	IdentifierDeclType	char		135050	0					
ANR	135060	Identifier	tls_version_major		135050	1					
ANR	135061	IdentifierDeclStatement	char tls_version_minor ;	84:4:3034:3056	135050	2	True				
ANR	135062	IdentifierDecl	tls_version_minor		135050	0					
ANR	135063	IdentifierDeclType	char		135050	0					
ANR	135064	Identifier	tls_version_minor		135050	1					
ANR	135065	IdentifierDeclStatement	size_t pos = TLS_HEADER_LEN ;	85:4:3062:3089	135050	3	True				
ANR	135066	IdentifierDecl	pos = TLS_HEADER_LEN		135050	0					
ANR	135067	IdentifierDeclType	size_t		135050	0					
ANR	135068	Identifier	pos		135050	1					
ANR	135069	AssignmentExpression	pos = TLS_HEADER_LEN		135050	2		=			
ANR	135070	Identifier	TLS_HEADER_LEN		135050	0					
ANR	135071	Identifier	TLS_HEADER_LEN		135050	1					
ANR	135072	IdentifierDeclStatement	size_t len ;	86:4:3095:3105	135050	4	True				
ANR	135073	IdentifierDecl	len		135050	0					
ANR	135074	IdentifierDeclType	size_t		135050	0					
ANR	135075	Identifier	len		135050	1					
ANR	135076	IfStatement	if ( hostname == NULL )		135050	5					
ANR	135077	Condition	hostname == NULL	88:8:3116:3131	135050	0	True				
ANR	135078	EqualityExpression	hostname == NULL		135050	0		==			
ANR	135079	Identifier	hostname		135050	0					
ANR	135080	Identifier	NULL		135050	1					
ANR	135081	ReturnStatement	return - 3 ;	89:8:3142:3151	135050	1	True				
ANR	135082	UnaryOperationExpression	- 3		135050	0					
ANR	135083	UnaryOperator	-		135050	0					
ANR	135084	PrimaryExpression	3		135050	1					
ANR	135085	IfStatement	if ( data_len < TLS_HEADER_LEN )		135050	6					
ANR	135086	Condition	data_len < TLS_HEADER_LEN	92:8:3241:3265	135050	0	True				
ANR	135087	RelationalExpression	data_len < TLS_HEADER_LEN		135050	0		<			
ANR	135088	Identifier	data_len		135050	0					
ANR	135089	Identifier	TLS_HEADER_LEN		135050	1					
ANR	135090	ReturnStatement	return - 1 ;	93:8:3276:3285	135050	1	True				
ANR	135091	UnaryOperationExpression	- 1		135050	0					
ANR	135092	UnaryOperator	-		135050	0					
ANR	135093	PrimaryExpression	1		135050	1					
ANR	135094	IfStatement	if ( data [ 0 ] & 0x80 && data [ 2 ] == 1 )		135050	7					
ANR	135095	Condition	data [ 0 ] & 0x80 && data [ 2 ] == 1	101:8:3461:3490	135050	0	True				
ANR	135096	AndExpression	data [ 0 ] & 0x80 && data [ 2 ] == 1		135050	0		&&			
ANR	135097	BitAndExpression	data [ 0 ] & 0x80		135050	0		&			
ANR	135098	ArrayIndexing	data [ 0 ]		135050	0					
ANR	135099	Identifier	data		135050	0					
ANR	135100	PrimaryExpression	0		135050	1					
ANR	135101	PrimaryExpression	0x80		135050	1					
ANR	135102	EqualityExpression	data [ 2 ] == 1		135050	1		==			
ANR	135103	ArrayIndexing	data [ 2 ]		135050	0					
ANR	135104	Identifier	data		135050	0					
ANR	135105	PrimaryExpression	2		135050	1					
ANR	135106	PrimaryExpression	1		135050	1					
ANR	135107	CompoundStatement		21:40:519:519	135050	1					
ANR	135108	IfStatement	if ( verbose )		135050	0					
ANR	135109	Condition	verbose	102:12:3507:3513	135050	0	True				
ANR	135110	Identifier	verbose		135050	0					
ANR	135111	ExpressionStatement	"LOGI ( ""Received SSL 2.0 Client Hello which can not support SNI."" )"	103:12:3528:3592	135050	1	True				
ANR	135112	CallExpression	"LOGI ( ""Received SSL 2.0 Client Hello which can not support SNI."" )"		135050	0					
ANR	135113	Callee	LOGI		135050	0					
ANR	135114	Identifier	LOGI		135050	0					
ANR	135115	ArgumentList	"""Received SSL 2.0 Client Hello which can not support SNI."""		135050	1					
ANR	135116	Argument	"""Received SSL 2.0 Client Hello which can not support SNI."""		135050	0					
ANR	135117	PrimaryExpression	"""Received SSL 2.0 Client Hello which can not support SNI."""		135050	0					
ANR	135118	ReturnStatement	return - 2 ;	104:8:3602:3611	135050	1	True				
ANR	135119	UnaryOperationExpression	- 2		135050	0					
ANR	135120	UnaryOperator	-		135050	0					
ANR	135121	PrimaryExpression	2		135050	1					
ANR	135122	ExpressionStatement	tls_content_type = data [ 0 ]	107:4:3624:3650	135050	8	True				
ANR	135123	AssignmentExpression	tls_content_type = data [ 0 ]		135050	0		=			
ANR	135124	Identifier	tls_content_type		135050	0					
ANR	135125	ArrayIndexing	data [ 0 ]		135050	1					
ANR	135126	Identifier	data		135050	0					
ANR	135127	PrimaryExpression	0		135050	1					
ANR	135128	IfStatement	if ( tls_content_type != TLS_HANDSHAKE_CONTENT_TYPE )		135050	9					
ANR	135129	Condition	tls_content_type != TLS_HANDSHAKE_CONTENT_TYPE	108:8:3660:3705	135050	0	True				
ANR	135130	EqualityExpression	tls_content_type != TLS_HANDSHAKE_CONTENT_TYPE		135050	0		!=			
ANR	135131	Identifier	tls_content_type		135050	0					
ANR	135132	Identifier	TLS_HANDSHAKE_CONTENT_TYPE		135050	1					
ANR	135133	CompoundStatement		28:56:734:734	135050	1					
ANR	135134	IfStatement	if ( verbose )		135050	0					
ANR	135135	Condition	verbose	109:12:3722:3728	135050	0	True				
ANR	135136	Identifier	verbose		135050	0					
ANR	135137	ExpressionStatement	"LOGI ( ""Request did not begin with TLS handshake."" )"	110:12:3743:3792	135050	1	True				
ANR	135138	CallExpression	"LOGI ( ""Request did not begin with TLS handshake."" )"		135050	0					
ANR	135139	Callee	LOGI		135050	0					
ANR	135140	Identifier	LOGI		135050	0					
ANR	135141	ArgumentList	"""Request did not begin with TLS handshake."""		135050	1					
ANR	135142	Argument	"""Request did not begin with TLS handshake."""		135050	0					
ANR	135143	PrimaryExpression	"""Request did not begin with TLS handshake."""		135050	0					
ANR	135144	ReturnStatement	return - 5 ;	111:8:3802:3811	135050	1	True				
ANR	135145	UnaryOperationExpression	- 5		135050	0					
ANR	135146	UnaryOperator	-		135050	0					
ANR	135147	PrimaryExpression	5		135050	1					
ANR	135148	ExpressionStatement	tls_version_major = data [ 1 ]	114:4:3824:3851	135050	10	True				
ANR	135149	AssignmentExpression	tls_version_major = data [ 1 ]		135050	0		=			
ANR	135150	Identifier	tls_version_major		135050	0					
ANR	135151	ArrayIndexing	data [ 1 ]		135050	1					
ANR	135152	Identifier	data		135050	0					
ANR	135153	PrimaryExpression	1		135050	1					
ANR	135154	ExpressionStatement	tls_version_minor = data [ 2 ]	115:4:3857:3884	135050	11	True				
ANR	135155	AssignmentExpression	tls_version_minor = data [ 2 ]		135050	0		=			
ANR	135156	Identifier	tls_version_minor		135050	0					
ANR	135157	ArrayIndexing	data [ 2 ]		135050	1					
ANR	135158	Identifier	data		135050	0					
ANR	135159	PrimaryExpression	2		135050	1					
ANR	135160	IfStatement	if ( tls_version_major < 3 )		135050	12					
ANR	135161	Condition	tls_version_major < 3	116:8:3894:3914	135050	0	True				
ANR	135162	RelationalExpression	tls_version_major < 3		135050	0		<			
ANR	135163	Identifier	tls_version_major		135050	0					
ANR	135164	PrimaryExpression	3		135050	1					
ANR	135165	CompoundStatement		36:31:943:943	135050	1					
ANR	135166	IfStatement	if ( verbose )		135050	0					
ANR	135167	Condition	verbose	117:12:3931:3937	135050	0	True				
ANR	135168	Identifier	verbose		135050	0					
ANR	135169	ExpressionStatement	"LOGI ( ""Received SSL %d.%d handshake which can not support SNI."" , tls_version_major , tls_version_minor )"	118:12:3952:4070	135050	1	True				
ANR	135170	CallExpression	"LOGI ( ""Received SSL %d.%d handshake which can not support SNI."" , tls_version_major , tls_version_minor )"		135050	0					
ANR	135171	Callee	LOGI		135050	0					
ANR	135172	Identifier	LOGI		135050	0					
ANR	135173	ArgumentList	"""Received SSL %d.%d handshake which can not support SNI."""		135050	1					
ANR	135174	Argument	"""Received SSL %d.%d handshake which can not support SNI."""		135050	0					
ANR	135175	PrimaryExpression	"""Received SSL %d.%d handshake which can not support SNI."""		135050	0					
ANR	135176	Argument	tls_version_major		135050	1					
ANR	135177	Identifier	tls_version_major		135050	0					
ANR	135178	Argument	tls_version_minor		135050	2					
ANR	135179	Identifier	tls_version_minor		135050	0					
ANR	135180	ReturnStatement	return - 2 ;	121:8:4081:4090	135050	1	True				
ANR	135181	UnaryOperationExpression	- 2		135050	0					
ANR	135182	UnaryOperator	-		135050	0					
ANR	135183	PrimaryExpression	2		135050	1					
ANR	135184	ExpressionStatement	len = ( ( unsigned char ) data [ 3 ] << 8 ) + ( unsigned char ) data [ 4 ] + TLS_HEADER_LEN	125:4:4131:4218	135050	13	True				
ANR	135185	AssignmentExpression	len = ( ( unsigned char ) data [ 3 ] << 8 ) + ( unsigned char ) data [ 4 ] + TLS_HEADER_LEN		135050	0		=			
ANR	135186	Identifier	len		135050	0					
ANR	135187	AdditiveExpression	( ( unsigned char ) data [ 3 ] << 8 ) + ( unsigned char ) data [ 4 ] + TLS_HEADER_LEN		135050	1		+			
ANR	135188	ShiftExpression	( unsigned char ) data [ 3 ] << 8		135050	0		<<			
ANR	135189	CastExpression	( unsigned char ) data [ 3 ]		135050	0					
ANR	135190	CastTarget	unsigned char		135050	0					
ANR	135191	ArrayIndexing	data [ 3 ]		135050	1					
ANR	135192	Identifier	data		135050	0					
ANR	135193	PrimaryExpression	3		135050	1					
ANR	135194	PrimaryExpression	8		135050	1					
ANR	135195	AdditiveExpression	( unsigned char ) data [ 4 ] + TLS_HEADER_LEN		135050	1		+			
ANR	135196	CastExpression	( unsigned char ) data [ 4 ]		135050	0					
ANR	135197	CastTarget	unsigned char		135050	0					
ANR	135198	ArrayIndexing	data [ 4 ]		135050	1					
ANR	135199	Identifier	data		135050	0					
ANR	135200	PrimaryExpression	4		135050	1					
ANR	135201	Identifier	TLS_HEADER_LEN		135050	1					
ANR	135202	ExpressionStatement	"data_len = MIN ( data_len , len )"	127:4:4224:4253	135050	14	True				
ANR	135203	AssignmentExpression	"data_len = MIN ( data_len , len )"		135050	0		=			
ANR	135204	Identifier	data_len		135050	0					
ANR	135205	CallExpression	"MIN ( data_len , len )"		135050	1					
ANR	135206	Callee	MIN		135050	0					
ANR	135207	Identifier	MIN		135050	0					
ANR	135208	ArgumentList	data_len		135050	1					
ANR	135209	Argument	data_len		135050	0					
ANR	135210	Identifier	data_len		135050	0					
ANR	135211	Argument	len		135050	1					
ANR	135212	Identifier	len		135050	0					
ANR	135213	IfStatement	if ( data_len < len )		135050	15					
ANR	135214	Condition	data_len < len	130:8:4317:4330	135050	0	True				
ANR	135215	RelationalExpression	data_len < len		135050	0		<			
ANR	135216	Identifier	data_len		135050	0					
ANR	135217	Identifier	len		135050	1					
ANR	135218	ReturnStatement	return - 1 ;	131:8:4341:4350	135050	1	True				
ANR	135219	UnaryOperationExpression	- 1		135050	0					
ANR	135220	UnaryOperator	-		135050	0					
ANR	135221	PrimaryExpression	1		135050	1					
ANR	135222	IfStatement	if ( pos + 1 > data_len )		135050	16					
ANR	135223	Condition	pos + 1 > data_len	136:8:4393:4410	135050	0	True				
ANR	135224	RelationalExpression	pos + 1 > data_len		135050	0		>			
ANR	135225	AdditiveExpression	pos + 1		135050	0		+			
ANR	135226	Identifier	pos		135050	0					
ANR	135227	PrimaryExpression	1		135050	1					
ANR	135228	Identifier	data_len		135050	1					
ANR	135229	CompoundStatement		56:28:1439:1439	135050	1					
ANR	135230	ReturnStatement	return - 5 ;	137:8:4423:4432	135050	0	True				
ANR	135231	UnaryOperationExpression	- 5		135050	0					
ANR	135232	UnaryOperator	-		135050	0					
ANR	135233	PrimaryExpression	5		135050	1					
ANR	135234	IfStatement	if ( data [ pos ] != TLS_HANDSHAKE_TYPE_CLIENT_HELLO )		135050	17					
ANR	135235	Condition	data [ pos ] != TLS_HANDSHAKE_TYPE_CLIENT_HELLO	139:8:4448:4491	135050	0	True				
ANR	135236	EqualityExpression	data [ pos ] != TLS_HANDSHAKE_TYPE_CLIENT_HELLO		135050	0		!=			
ANR	135237	ArrayIndexing	data [ pos ]		135050	0					
ANR	135238	Identifier	data		135050	0					
ANR	135239	Identifier	pos		135050	1					
ANR	135240	Identifier	TLS_HANDSHAKE_TYPE_CLIENT_HELLO		135050	1					
ANR	135241	CompoundStatement		59:54:1520:1520	135050	1					
ANR	135242	IfStatement	if ( verbose )		135050	0					
ANR	135243	Condition	verbose	140:12:4508:4514	135050	0	True				
ANR	135244	Identifier	verbose		135050	0					
ANR	135245	ExpressionStatement	"LOGI ( ""Not a client hello"" )"	141:12:4529:4555	135050	1	True				
ANR	135246	CallExpression	"LOGI ( ""Not a client hello"" )"		135050	0					
ANR	135247	Callee	LOGI		135050	0					
ANR	135248	Identifier	LOGI		135050	0					
ANR	135249	ArgumentList	"""Not a client hello"""		135050	1					
ANR	135250	Argument	"""Not a client hello"""		135050	0					
ANR	135251	PrimaryExpression	"""Not a client hello"""		135050	0					
ANR	135252	ReturnStatement	return - 5 ;	143:8:4566:4575	135050	1	True				
ANR	135253	UnaryOperationExpression	- 5		135050	0					
ANR	135254	UnaryOperator	-		135050	0					
ANR	135255	PrimaryExpression	5		135050	1					
ANR	135256	ExpressionStatement	pos += 38	153:4:4745:4754	135050	18	True				
ANR	135257	AssignmentExpression	pos += 38		135050	0		+=			
ANR	135258	Identifier	pos		135050	0					
ANR	135259	PrimaryExpression	38		135050	1					
ANR	135260	IfStatement	if ( pos + 1 > data_len )		135050	19					
ANR	135261	Condition	pos + 1 > data_len	156:8:4786:4803	135050	0	True				
ANR	135262	RelationalExpression	pos + 1 > data_len		135050	0		>			
ANR	135263	AdditiveExpression	pos + 1		135050	0		+			
ANR	135264	Identifier	pos		135050	0					
ANR	135265	PrimaryExpression	1		135050	1					
ANR	135266	Identifier	data_len		135050	1					
ANR	135267	ReturnStatement	return - 5 ;	157:8:4814:4823	135050	1	True				
ANR	135268	UnaryOperationExpression	- 5		135050	0					
ANR	135269	UnaryOperator	-		135050	0					
ANR	135270	PrimaryExpression	5		135050	1					
ANR	135271	ExpressionStatement	len = ( unsigned char ) data [ pos ]	158:4:4829:4860	135050	20	True				
ANR	135272	AssignmentExpression	len = ( unsigned char ) data [ pos ]		135050	0		=			
ANR	135273	Identifier	len		135050	0					
ANR	135274	CastExpression	( unsigned char ) data [ pos ]		135050	1					
ANR	135275	CastTarget	unsigned char		135050	0					
ANR	135276	ArrayIndexing	data [ pos ]		135050	1					
ANR	135277	Identifier	data		135050	0					
ANR	135278	Identifier	pos		135050	1					
ANR	135279	ExpressionStatement	pos += 1 + len	159:4:4866:4880	135050	21	True				
ANR	135280	AssignmentExpression	pos += 1 + len		135050	0		+=			
ANR	135281	Identifier	pos		135050	0					
ANR	135282	AdditiveExpression	1 + len		135050	1		+			
ANR	135283	PrimaryExpression	1		135050	0					
ANR	135284	Identifier	len		135050	1					
ANR	135285	IfStatement	if ( pos + 2 > data_len )		135050	22					
ANR	135286	Condition	pos + 2 > data_len	162:8:4915:4932	135050	0	True				
ANR	135287	RelationalExpression	pos + 2 > data_len		135050	0		>			
ANR	135288	AdditiveExpression	pos + 2		135050	0		+			
ANR	135289	Identifier	pos		135050	0					
ANR	135290	PrimaryExpression	2		135050	1					
ANR	135291	Identifier	data_len		135050	1					
ANR	135292	ReturnStatement	return - 5 ;	163:8:4943:4952	135050	1	True				
ANR	135293	UnaryOperationExpression	- 5		135050	0					
ANR	135294	UnaryOperator	-		135050	0					
ANR	135295	PrimaryExpression	5		135050	1					
ANR	135296	ExpressionStatement	len = ( ( unsigned char ) data [ pos ] << 8 ) + ( unsigned char ) data [ pos + 1 ]	164:4:4958:5027	135050	23	True				
ANR	135297	AssignmentExpression	len = ( ( unsigned char ) data [ pos ] << 8 ) + ( unsigned char ) data [ pos + 1 ]		135050	0		=			
ANR	135298	Identifier	len		135050	0					
ANR	135299	AdditiveExpression	( ( unsigned char ) data [ pos ] << 8 ) + ( unsigned char ) data [ pos + 1 ]		135050	1		+			
ANR	135300	ShiftExpression	( unsigned char ) data [ pos ] << 8		135050	0		<<			
ANR	135301	CastExpression	( unsigned char ) data [ pos ]		135050	0					
ANR	135302	CastTarget	unsigned char		135050	0					
ANR	135303	ArrayIndexing	data [ pos ]		135050	1					
ANR	135304	Identifier	data		135050	0					
ANR	135305	Identifier	pos		135050	1					
ANR	135306	PrimaryExpression	8		135050	1					
ANR	135307	CastExpression	( unsigned char ) data [ pos + 1 ]		135050	1					
ANR	135308	CastTarget	unsigned char		135050	0					
ANR	135309	ArrayIndexing	data [ pos + 1 ]		135050	1					
ANR	135310	Identifier	data		135050	0					
ANR	135311	AdditiveExpression	pos + 1		135050	1		+			
ANR	135312	Identifier	pos		135050	0					
ANR	135313	PrimaryExpression	1		135050	1					
ANR	135314	ExpressionStatement	pos += 2 + len	165:4:5033:5047	135050	24	True				
ANR	135315	AssignmentExpression	pos += 2 + len		135050	0		+=			
ANR	135316	Identifier	pos		135050	0					
ANR	135317	AdditiveExpression	2 + len		135050	1		+			
ANR	135318	PrimaryExpression	2		135050	0					
ANR	135319	Identifier	len		135050	1					
ANR	135320	IfStatement	if ( pos + 1 > data_len )		135050	25					
ANR	135321	Condition	pos + 1 > data_len	168:8:5088:5105	135050	0	True				
ANR	135322	RelationalExpression	pos + 1 > data_len		135050	0		>			
ANR	135323	AdditiveExpression	pos + 1		135050	0		+			
ANR	135324	Identifier	pos		135050	0					
ANR	135325	PrimaryExpression	1		135050	1					
ANR	135326	Identifier	data_len		135050	1					
ANR	135327	ReturnStatement	return - 5 ;	169:8:5116:5125	135050	1	True				
ANR	135328	UnaryOperationExpression	- 5		135050	0					
ANR	135329	UnaryOperator	-		135050	0					
ANR	135330	PrimaryExpression	5		135050	1					
ANR	135331	ExpressionStatement	len = ( unsigned char ) data [ pos ]	170:4:5131:5162	135050	26	True				
ANR	135332	AssignmentExpression	len = ( unsigned char ) data [ pos ]		135050	0		=			
ANR	135333	Identifier	len		135050	0					
ANR	135334	CastExpression	( unsigned char ) data [ pos ]		135050	1					
ANR	135335	CastTarget	unsigned char		135050	0					
ANR	135336	ArrayIndexing	data [ pos ]		135050	1					
ANR	135337	Identifier	data		135050	0					
ANR	135338	Identifier	pos		135050	1					
ANR	135339	ExpressionStatement	pos += 1 + len	171:4:5168:5182	135050	27	True				
ANR	135340	AssignmentExpression	pos += 1 + len		135050	0		+=			
ANR	135341	Identifier	pos		135050	0					
ANR	135342	AdditiveExpression	1 + len		135050	1		+			
ANR	135343	PrimaryExpression	1		135050	0					
ANR	135344	Identifier	len		135050	1					
ANR	135345	IfStatement	if ( pos == data_len && tls_version_major == 3 && tls_version_minor == 0 )		135050	28					
ANR	135346	Condition	pos == data_len && tls_version_major == 3 && tls_version_minor == 0	173:8:5193:5259	135050	0	True				
ANR	135347	AndExpression	pos == data_len && tls_version_major == 3 && tls_version_minor == 0		135050	0		&&			
ANR	135348	EqualityExpression	pos == data_len		135050	0		==			
ANR	135349	Identifier	pos		135050	0					
ANR	135350	Identifier	data_len		135050	1					
ANR	135351	AndExpression	tls_version_major == 3 && tls_version_minor == 0		135050	1		&&			
ANR	135352	EqualityExpression	tls_version_major == 3		135050	0		==			
ANR	135353	Identifier	tls_version_major		135050	0					
ANR	135354	PrimaryExpression	3		135050	1					
ANR	135355	EqualityExpression	tls_version_minor == 0		135050	1		==			
ANR	135356	Identifier	tls_version_minor		135050	0					
ANR	135357	PrimaryExpression	0		135050	1					
ANR	135358	CompoundStatement		93:77:2288:2288	135050	1					
ANR	135359	IfStatement	if ( verbose )		135050	0					
ANR	135360	Condition	verbose	174:12:5276:5282	135050	0	True				
ANR	135361	Identifier	verbose		135050	0					
ANR	135362	ExpressionStatement	"LOGI ( ""Received SSL 3.0 handshake without extensions"" )"	175:12:5297:5350	135050	1	True				
ANR	135363	CallExpression	"LOGI ( ""Received SSL 3.0 handshake without extensions"" )"		135050	0					
ANR	135364	Callee	LOGI		135050	0					
ANR	135365	Identifier	LOGI		135050	0					
ANR	135366	ArgumentList	"""Received SSL 3.0 handshake without extensions"""		135050	1					
ANR	135367	Argument	"""Received SSL 3.0 handshake without extensions"""		135050	0					
ANR	135368	PrimaryExpression	"""Received SSL 3.0 handshake without extensions"""		135050	0					
ANR	135369	ReturnStatement	return - 2 ;	176:8:5360:5369	135050	1	True				
ANR	135370	UnaryOperationExpression	- 2		135050	0					
ANR	135371	UnaryOperator	-		135050	0					
ANR	135372	PrimaryExpression	2		135050	1					
ANR	135373	IfStatement	if ( pos + 2 > data_len )		135050	29					
ANR	135374	Condition	pos + 2 > data_len	180:8:5407:5424	135050	0	True				
ANR	135375	RelationalExpression	pos + 2 > data_len		135050	0		>			
ANR	135376	AdditiveExpression	pos + 2		135050	0		+			
ANR	135377	Identifier	pos		135050	0					
ANR	135378	PrimaryExpression	2		135050	1					
ANR	135379	Identifier	data_len		135050	1					
ANR	135380	ReturnStatement	return - 5 ;	181:8:5435:5444	135050	1	True				
ANR	135381	UnaryOperationExpression	- 5		135050	0					
ANR	135382	UnaryOperator	-		135050	0					
ANR	135383	PrimaryExpression	5		135050	1					
ANR	135384	ExpressionStatement	len = ( ( unsigned char ) data [ pos ] << 8 ) + ( unsigned char ) data [ pos + 1 ]	182:4:5450:5519	135050	30	True				
ANR	135385	AssignmentExpression	len = ( ( unsigned char ) data [ pos ] << 8 ) + ( unsigned char ) data [ pos + 1 ]		135050	0		=			
ANR	135386	Identifier	len		135050	0					
ANR	135387	AdditiveExpression	( ( unsigned char ) data [ pos ] << 8 ) + ( unsigned char ) data [ pos + 1 ]		135050	1		+			
ANR	135388	ShiftExpression	( unsigned char ) data [ pos ] << 8		135050	0		<<			
ANR	135389	CastExpression	( unsigned char ) data [ pos ]		135050	0					
ANR	135390	CastTarget	unsigned char		135050	0					
ANR	135391	ArrayIndexing	data [ pos ]		135050	1					
ANR	135392	Identifier	data		135050	0					
ANR	135393	Identifier	pos		135050	1					
ANR	135394	PrimaryExpression	8		135050	1					
ANR	135395	CastExpression	( unsigned char ) data [ pos + 1 ]		135050	1					
ANR	135396	CastTarget	unsigned char		135050	0					
ANR	135397	ArrayIndexing	data [ pos + 1 ]		135050	1					
ANR	135398	Identifier	data		135050	0					
ANR	135399	AdditiveExpression	pos + 1		135050	1		+			
ANR	135400	Identifier	pos		135050	0					
ANR	135401	PrimaryExpression	1		135050	1					
ANR	135402	ExpressionStatement	pos += 2	183:4:5525:5533	135050	31	True				
ANR	135403	AssignmentExpression	pos += 2		135050	0		+=			
ANR	135404	Identifier	pos		135050	0					
ANR	135405	PrimaryExpression	2		135050	1					
ANR	135406	IfStatement	if ( pos + len > data_len )		135050	32					
ANR	135407	Condition	pos + len > data_len	185:8:5544:5563	135050	0	True				
ANR	135408	RelationalExpression	pos + len > data_len		135050	0		>			
ANR	135409	AdditiveExpression	pos + len		135050	0		+			
ANR	135410	Identifier	pos		135050	0					
ANR	135411	Identifier	len		135050	1					
ANR	135412	Identifier	data_len		135050	1					
ANR	135413	ReturnStatement	return - 5 ;	186:8:5574:5583	135050	1	True				
ANR	135414	UnaryOperationExpression	- 5		135050	0					
ANR	135415	UnaryOperator	-		135050	0					
ANR	135416	PrimaryExpression	5		135050	1					
ANR	135417	ReturnStatement	"return parse_extensions ( data + pos , len , hostname ) ;"	187:4:5589:5639	135050	33	True				
ANR	135418	CallExpression	"parse_extensions ( data + pos , len , hostname )"		135050	0					
ANR	135419	Callee	parse_extensions		135050	0					
ANR	135420	Identifier	parse_extensions		135050	0					
ANR	135421	ArgumentList	data + pos		135050	1					
ANR	135422	Argument	data + pos		135050	0					
ANR	135423	AdditiveExpression	data + pos		135050	0		+			
ANR	135424	Identifier	data		135050	0					
ANR	135425	Identifier	pos		135050	1					
ANR	135426	Argument	len		135050	1					
ANR	135427	Identifier	len		135050	0					
ANR	135428	Argument	hostname		135050	2					
ANR	135429	Identifier	hostname		135050	0					
ANR	135430	ReturnType	static int		135050	1					
ANR	135431	Identifier	parse_tls_header		135050	2					
ANR	135432	ParameterList	"const char * data , size_t data_len , char * * hostname"		135050	3					
ANR	135433	Parameter	const char * data	80:17:2921:2936	135050	0	True				
ANR	135434	ParameterType	const char *		135050	0					
ANR	135435	Identifier	data		135050	1					
ANR	135436	Parameter	size_t data_len	80:35:2939:2953	135050	1	True				
ANR	135437	ParameterType	size_t		135050	0					
ANR	135438	Identifier	data_len		135050	1					
ANR	135439	Parameter	char * * hostname	80:52:2956:2970	135050	2	True				
ANR	135440	ParameterType	char * *		135050	0					
ANR	135441	Identifier	hostname		135050	1					
ANR	135442	CFGEntryNode	ENTRY		135050		True				
ANR	135443	CFGExitNode	EXIT		135050		True				
ANR	135444	Symbol	NULL		135050						
ANR	135445	Symbol	data		135050						
ANR	135446	Symbol	data_len		135050						
ANR	135447	Symbol	tls_version_minor		135050						
ANR	135448	Symbol	verbose		135050						
ANR	135449	Symbol	parse_extensions		135050						
ANR	135450	Symbol	TLS_HANDSHAKE_TYPE_CLIENT_HELLO		135050						
ANR	135451	Symbol	hostname		135050						
ANR	135452	Symbol	tls_version_major		135050						
ANR	135453	Symbol	MIN		135050						
ANR	135454	Symbol	len		135050						
ANR	135455	Symbol	pos		135050						
ANR	135456	Symbol	TLS_HEADER_LEN		135050						
ANR	135457	Symbol	TLS_HANDSHAKE_CONTENT_TYPE		135050						
ANR	135458	Symbol	tls_content_type		135050						
ANR	135459	Symbol	* data		135050						
ANR	135460	Symbol	* pos		135050						
ANR	135461	Function	parse_extensions	190:0:5644:6573							
ANR	135462	FunctionDef	"parse_extensions (const char * data , size_t data_len , char * * hostname)"		135461	0					
ANR	135463	CompoundStatement		192:0:5724:6573	135461	0					
ANR	135464	IdentifierDeclStatement	size_t pos = 0 ;	193:4:5730:5744	135461	0	True				
ANR	135465	IdentifierDecl	pos = 0		135461	0					
ANR	135466	IdentifierDeclType	size_t		135461	0					
ANR	135467	Identifier	pos		135461	1					
ANR	135468	AssignmentExpression	pos = 0		135461	2		=			
ANR	135469	Identifier	pos		135461	0					
ANR	135470	PrimaryExpression	0		135461	1					
ANR	135471	IdentifierDeclStatement	size_t len ;	194:4:5750:5760	135461	1	True				
ANR	135472	IdentifierDecl	len		135461	0					
ANR	135473	IdentifierDeclType	size_t		135461	0					
ANR	135474	Identifier	len		135461	1					
ANR	135475	WhileStatement	while ( pos + 4 <= data_len )		135461	2					
ANR	135476	Condition	pos + 4 <= data_len	197:11:5828:5846	135461	0	True				
ANR	135477	RelationalExpression	pos + 4 <= data_len		135461	0		<=			
ANR	135478	AdditiveExpression	pos + 4		135461	0		+			
ANR	135479	Identifier	pos		135461	0					
ANR	135480	PrimaryExpression	4		135461	1					
ANR	135481	Identifier	data_len		135461	1					
ANR	135482	CompoundStatement		6:32:124:124	135461	1					
ANR	135483	ExpressionStatement	len = ( ( unsigned char ) data [ pos + 2 ] << 8 ) + ( unsigned char ) data [ pos + 3 ]	199:8:5890:5976	135461	0	True				
ANR	135484	AssignmentExpression	len = ( ( unsigned char ) data [ pos + 2 ] << 8 ) + ( unsigned char ) data [ pos + 3 ]		135461	0		=			
ANR	135485	Identifier	len		135461	0					
ANR	135486	AdditiveExpression	( ( unsigned char ) data [ pos + 2 ] << 8 ) + ( unsigned char ) data [ pos + 3 ]		135461	1		+			
ANR	135487	ShiftExpression	( unsigned char ) data [ pos + 2 ] << 8		135461	0		<<			
ANR	135488	CastExpression	( unsigned char ) data [ pos + 2 ]		135461	0					
ANR	135489	CastTarget	unsigned char		135461	0					
ANR	135490	ArrayIndexing	data [ pos + 2 ]		135461	1					
ANR	135491	Identifier	data		135461	0					
ANR	135492	AdditiveExpression	pos + 2		135461	1		+			
ANR	135493	Identifier	pos		135461	0					
ANR	135494	PrimaryExpression	2		135461	1					
ANR	135495	PrimaryExpression	8		135461	1					
ANR	135496	CastExpression	( unsigned char ) data [ pos + 3 ]		135461	1					
ANR	135497	CastTarget	unsigned char		135461	0					
ANR	135498	ArrayIndexing	data [ pos + 3 ]		135461	1					
ANR	135499	Identifier	data		135461	0					
ANR	135500	AdditiveExpression	pos + 3		135461	1		+			
ANR	135501	Identifier	pos		135461	0					
ANR	135502	PrimaryExpression	3		135461	1					
ANR	135503	IfStatement	if ( data [ pos ] == 0x00 && data [ pos + 1 ] == 0x00 )		135461	1					
ANR	135504	Condition	data [ pos ] == 0x00 && data [ pos + 1 ] == 0x00	203:12:6043:6084	135461	0	True				
ANR	135505	AndExpression	data [ pos ] == 0x00 && data [ pos + 1 ] == 0x00		135461	0		&&			
ANR	135506	EqualityExpression	data [ pos ] == 0x00		135461	0		==			
ANR	135507	ArrayIndexing	data [ pos ]		135461	0					
ANR	135508	Identifier	data		135461	0					
ANR	135509	Identifier	pos		135461	1					
ANR	135510	PrimaryExpression	0x00		135461	1					
ANR	135511	EqualityExpression	data [ pos + 1 ] == 0x00		135461	1		==			
ANR	135512	ArrayIndexing	data [ pos + 1 ]		135461	0					
ANR	135513	Identifier	data		135461	0					
ANR	135514	AdditiveExpression	pos + 1		135461	1		+			
ANR	135515	Identifier	pos		135461	0					
ANR	135516	PrimaryExpression	1		135461	1					
ANR	135517	PrimaryExpression	0x00		135461	1					
ANR	135518	CompoundStatement		12:56:362:362	135461	1					
ANR	135519	IfStatement	if ( pos + 4 + len > data_len )		135461	0					
ANR	135520	Condition	pos + 4 + len > data_len	206:16:6252:6275	135461	0	True				
ANR	135521	RelationalExpression	pos + 4 + len > data_len		135461	0		>			
ANR	135522	AdditiveExpression	pos + 4 + len		135461	0		+			
ANR	135523	Identifier	pos		135461	0					
ANR	135524	AdditiveExpression	4 + len		135461	1		+			
ANR	135525	PrimaryExpression	4		135461	0					
ANR	135526	Identifier	len		135461	1					
ANR	135527	Identifier	data_len		135461	1					
ANR	135528	ReturnStatement	return - 5 ;	207:16:6294:6303	135461	1	True				
ANR	135529	UnaryOperationExpression	- 5		135461	0					
ANR	135530	UnaryOperator	-		135461	0					
ANR	135531	PrimaryExpression	5		135461	1					
ANR	135532	ReturnStatement	"return parse_server_name_extension ( data + pos + 4 , len , hostname ) ;"	208:12:6317:6382	135461	1	True				
ANR	135533	CallExpression	"parse_server_name_extension ( data + pos + 4 , len , hostname )"		135461	0					
ANR	135534	Callee	parse_server_name_extension		135461	0					
ANR	135535	Identifier	parse_server_name_extension		135461	0					
ANR	135536	ArgumentList	data + pos + 4		135461	1					
ANR	135537	Argument	data + pos + 4		135461	0					
ANR	135538	AdditiveExpression	data + pos + 4		135461	0		+			
ANR	135539	Identifier	data		135461	0					
ANR	135540	AdditiveExpression	pos + 4		135461	1		+			
ANR	135541	Identifier	pos		135461	0					
ANR	135542	PrimaryExpression	4		135461	1					
ANR	135543	Argument	len		135461	1					
ANR	135544	Identifier	len		135461	0					
ANR	135545	Argument	hostname		135461	2					
ANR	135546	Identifier	hostname		135461	0					
ANR	135547	ExpressionStatement	pos += 4 + len	210:8:6402:6416	135461	2	True				
ANR	135548	AssignmentExpression	pos += 4 + len		135461	0		+=			
ANR	135549	Identifier	pos		135461	0					
ANR	135550	AdditiveExpression	4 + len		135461	1		+			
ANR	135551	PrimaryExpression	4		135461	0					
ANR	135552	Identifier	len		135461	1					
ANR	135553	IfStatement	if ( pos != data_len )		135461	3					
ANR	135554	Condition	pos != data_len	213:8:6521:6535	135461	0	True				
ANR	135555	EqualityExpression	pos != data_len		135461	0		!=			
ANR	135556	Identifier	pos		135461	0					
ANR	135557	Identifier	data_len		135461	1					
ANR	135558	ReturnStatement	return - 5 ;	214:8:6546:6555	135461	1	True				
ANR	135559	UnaryOperationExpression	- 5		135461	0					
ANR	135560	UnaryOperator	-		135461	0					
ANR	135561	PrimaryExpression	5		135461	1					
ANR	135562	ReturnStatement	return - 2 ;	216:4:6562:6571	135461	4	True				
ANR	135563	UnaryOperationExpression	- 2		135461	0					
ANR	135564	UnaryOperator	-		135461	0					
ANR	135565	PrimaryExpression	2		135461	1					
ANR	135566	ReturnType	static int		135461	1					
ANR	135567	Identifier	parse_extensions		135461	2					
ANR	135568	ParameterList	"const char * data , size_t data_len , char * * hostname"		135461	3					
ANR	135569	Parameter	const char * data	191:17:5672:5687	135461	0	True				
ANR	135570	ParameterType	const char *		135461	0					
ANR	135571	Identifier	data		135461	1					
ANR	135572	Parameter	size_t data_len	191:35:5690:5704	135461	1	True				
ANR	135573	ParameterType	size_t		135461	0					
ANR	135574	Identifier	data_len		135461	1					
ANR	135575	Parameter	char * * hostname	191:52:5707:5721	135461	2	True				
ANR	135576	ParameterType	char * *		135461	0					
ANR	135577	Identifier	hostname		135461	1					
ANR	135578	CFGEntryNode	ENTRY		135461		True				
ANR	135579	CFGExitNode	EXIT		135461		True				
ANR	135580	Symbol	hostname		135461						
ANR	135581	Symbol	parse_server_name_extension		135461						
ANR	135582	Symbol	data		135461						
ANR	135583	Symbol	len		135461						
ANR	135584	Symbol	pos		135461						
ANR	135585	Symbol	data_len		135461						
ANR	135586	Symbol	* data		135461						
ANR	135587	Symbol	* pos		135461						
ANR	135588	Function	parse_server_name_extension	219:0:6576:7613							
ANR	135589	FunctionDef	"parse_server_name_extension (const char * data , size_t data_len , char * * hostname)"		135588	0					
ANR	135590	CompoundStatement		222:0:6695:7613	135588	0					
ANR	135591	IdentifierDeclStatement	size_t pos = 2 ;	223:4:6701:6715	135588	0	True				
ANR	135592	IdentifierDecl	pos = 2		135588	0					
ANR	135593	IdentifierDeclType	size_t		135588	0					
ANR	135594	Identifier	pos		135588	1					
ANR	135595	AssignmentExpression	pos = 2		135588	2		=			
ANR	135596	Identifier	pos		135588	0					
ANR	135597	PrimaryExpression	2		135588	1					
ANR	135598	IdentifierDeclStatement	size_t len ;	224:4:6756:6766	135588	1	True				
ANR	135599	IdentifierDecl	len		135588	0					
ANR	135600	IdentifierDeclType	size_t		135588	0					
ANR	135601	Identifier	len		135588	1					
ANR	135602	WhileStatement	while ( pos + 3 < data_len )		135588	2					
ANR	135603	Condition	pos + 3 < data_len	226:11:6780:6797	135588	0	True				
ANR	135604	RelationalExpression	pos + 3 < data_len		135588	0		<			
ANR	135605	AdditiveExpression	pos + 3		135588	0		+			
ANR	135606	Identifier	pos		135588	0					
ANR	135607	PrimaryExpression	3		135588	1					
ANR	135608	Identifier	data_len		135588	1					
ANR	135609	CompoundStatement		5:31:104:104	135588	1					
ANR	135610	ExpressionStatement	len = ( ( unsigned char ) data [ pos + 1 ] << 8 ) + ( unsigned char ) data [ pos + 2 ]	227:8:6810:6896	135588	0	True				
ANR	135611	AssignmentExpression	len = ( ( unsigned char ) data [ pos + 1 ] << 8 ) + ( unsigned char ) data [ pos + 2 ]		135588	0		=			
ANR	135612	Identifier	len		135588	0					
ANR	135613	AdditiveExpression	( ( unsigned char ) data [ pos + 1 ] << 8 ) + ( unsigned char ) data [ pos + 2 ]		135588	1		+			
ANR	135614	ShiftExpression	( unsigned char ) data [ pos + 1 ] << 8		135588	0		<<			
ANR	135615	CastExpression	( unsigned char ) data [ pos + 1 ]		135588	0					
ANR	135616	CastTarget	unsigned char		135588	0					
ANR	135617	ArrayIndexing	data [ pos + 1 ]		135588	1					
ANR	135618	Identifier	data		135588	0					
ANR	135619	AdditiveExpression	pos + 1		135588	1		+			
ANR	135620	Identifier	pos		135588	0					
ANR	135621	PrimaryExpression	1		135588	1					
ANR	135622	PrimaryExpression	8		135588	1					
ANR	135623	CastExpression	( unsigned char ) data [ pos + 2 ]		135588	1					
ANR	135624	CastTarget	unsigned char		135588	0					
ANR	135625	ArrayIndexing	data [ pos + 2 ]		135588	1					
ANR	135626	Identifier	data		135588	0					
ANR	135627	AdditiveExpression	pos + 2		135588	1		+			
ANR	135628	Identifier	pos		135588	0					
ANR	135629	PrimaryExpression	2		135588	1					
ANR	135630	IfStatement	if ( pos + 3 + len > data_len )		135588	1					
ANR	135631	Condition	pos + 3 + len > data_len	230:12:6911:6934	135588	0	True				
ANR	135632	RelationalExpression	pos + 3 + len > data_len		135588	0		>			
ANR	135633	AdditiveExpression	pos + 3 + len		135588	0		+			
ANR	135634	Identifier	pos		135588	0					
ANR	135635	AdditiveExpression	3 + len		135588	1		+			
ANR	135636	PrimaryExpression	3		135588	0					
ANR	135637	Identifier	len		135588	1					
ANR	135638	Identifier	data_len		135588	1					
ANR	135639	ReturnStatement	return - 5 ;	231:12:6949:6958	135588	1	True				
ANR	135640	UnaryOperationExpression	- 5		135588	0					
ANR	135641	UnaryOperator	-		135588	0					
ANR	135642	PrimaryExpression	5		135588	1					
ANR	135643	SwitchStatement	switch ( data [ pos ] )		135588	2					
ANR	135644	Condition	data [ pos ]	233:16:6977:6985	135588	0	True				
ANR	135645	ArrayIndexing	data [ pos ]		135588	0					
ANR	135646	Identifier	data		135588	0					
ANR	135647	Identifier	pos		135588	1					
ANR	135648	CompoundStatement		12:27:292:292	135588	1					
ANR	135649	Label	case 0x00 :	234:8:7014:7023	135588	0	True				
ANR	135650	ExpressionStatement	* hostname = malloc ( len + 1 )	235:12:7057:7084	135588	1	True				
ANR	135651	AssignmentExpression	* hostname = malloc ( len + 1 )		135588	0		=			
ANR	135652	UnaryOperationExpression	* hostname		135588	0					
ANR	135653	UnaryOperator	*		135588	0					
ANR	135654	Identifier	hostname		135588	1					
ANR	135655	CallExpression	malloc ( len + 1 )		135588	1					
ANR	135656	Callee	malloc		135588	0					
ANR	135657	Identifier	malloc		135588	0					
ANR	135658	ArgumentList	len + 1		135588	1					
ANR	135659	Argument	len + 1		135588	0					
ANR	135660	AdditiveExpression	len + 1		135588	0		+			
ANR	135661	Identifier	len		135588	0					
ANR	135662	PrimaryExpression	1		135588	1					
ANR	135663	IfStatement	if ( * hostname == NULL )		135588	2					
ANR	135664	Condition	* hostname == NULL	236:16:7102:7118	135588	0	True				
ANR	135665	EqualityExpression	* hostname == NULL		135588	0		==			
ANR	135666	UnaryOperationExpression	* hostname		135588	0					
ANR	135667	UnaryOperator	*		135588	0					
ANR	135668	Identifier	hostname		135588	1					
ANR	135669	Identifier	NULL		135588	1					
ANR	135670	CompoundStatement		15:35:425:425	135588	1					
ANR	135671	ExpressionStatement	"ERROR ( ""malloc() failure"" )"	237:16:7139:7164	135588	0	True				
ANR	135672	CallExpression	"ERROR ( ""malloc() failure"" )"		135588	0					
ANR	135673	Callee	ERROR		135588	0					
ANR	135674	Identifier	ERROR		135588	0					
ANR	135675	ArgumentList	"""malloc() failure"""		135588	1					
ANR	135676	Argument	"""malloc() failure"""		135588	0					
ANR	135677	PrimaryExpression	"""malloc() failure"""		135588	0					
ANR	135678	ReturnStatement	return - 4 ;	238:16:7182:7191	135588	1	True				
ANR	135679	UnaryOperationExpression	- 4		135588	0					
ANR	135680	UnaryOperator	-		135588	0					
ANR	135681	PrimaryExpression	4		135588	1					
ANR	135682	ExpressionStatement	"strncpy ( * hostname , data + pos + 3 , len )"	241:12:7220:7259	135588	3	True				
ANR	135683	CallExpression	"strncpy ( * hostname , data + pos + 3 , len )"		135588	0					
ANR	135684	Callee	strncpy		135588	0					
ANR	135685	Identifier	strncpy		135588	0					
ANR	135686	ArgumentList	* hostname		135588	1					
ANR	135687	Argument	* hostname		135588	0					
ANR	135688	UnaryOperationExpression	* hostname		135588	0					
ANR	135689	UnaryOperator	*		135588	0					
ANR	135690	Identifier	hostname		135588	1					
ANR	135691	Argument	data + pos + 3		135588	1					
ANR	135692	AdditiveExpression	data + pos + 3		135588	0		+			
ANR	135693	Identifier	data		135588	0					
ANR	135694	AdditiveExpression	pos + 3		135588	1		+			
ANR	135695	Identifier	pos		135588	0					
ANR	135696	PrimaryExpression	3		135588	1					
ANR	135697	Argument	len		135588	2					
ANR	135698	Identifier	len		135588	0					
ANR	135699	ExpressionStatement	( * hostname ) [ len ] = '\\0'	243:12:7274:7297	135588	4	True				
ANR	135700	AssignmentExpression	( * hostname ) [ len ] = '\\0'		135588	0		=			
ANR	135701	ArrayIndexing	( * hostname ) [ len ]		135588	0					
ANR	135702	UnaryOperationExpression	* hostname		135588	0					
ANR	135703	UnaryOperator	*		135588	0					
ANR	135704	Identifier	hostname		135588	1					
ANR	135705	Identifier	len		135588	1					
ANR	135706	PrimaryExpression	'\\0'		135588	1					
ANR	135707	ReturnStatement	return len ;	245:12:7312:7322	135588	5	True				
ANR	135708	Identifier	len		135588	0					
ANR	135709	Label	default :	246:8:7332:7339	135588	6	True				
ANR	135710	Identifier	default		135588	0					
ANR	135711	IfStatement	if ( verbose )		135588	7					
ANR	135712	Condition	verbose	247:16:7357:7363	135588	0	True				
ANR	135713	Identifier	verbose		135588	0					
ANR	135714	ExpressionStatement	"LOGI ( ""Unknown server name extension name type: %d"" , data [ pos ] )"	248:16:7382:7465	135588	1	True				
ANR	135715	CallExpression	"LOGI ( ""Unknown server name extension name type: %d"" , data [ pos ] )"		135588	0					
ANR	135716	Callee	LOGI		135588	0					
ANR	135717	Identifier	LOGI		135588	0					
ANR	135718	ArgumentList	"""Unknown server name extension name type: %d"""		135588	1					
ANR	135719	Argument	"""Unknown server name extension name type: %d"""		135588	0					
ANR	135720	PrimaryExpression	"""Unknown server name extension name type: %d"""		135588	0					
ANR	135721	Argument	data [ pos ]		135588	1					
ANR	135722	ArrayIndexing	data [ pos ]		135588	0					
ANR	135723	Identifier	data		135588	0					
ANR	135724	Identifier	pos		135588	1					
ANR	135725	ExpressionStatement	pos += 3 + len	251:8:7485:7499	135588	3	True				
ANR	135726	AssignmentExpression	pos += 3 + len		135588	0		+=			
ANR	135727	Identifier	pos		135588	0					
ANR	135728	AdditiveExpression	3 + len		135588	1		+			
ANR	135729	PrimaryExpression	3		135588	0					
ANR	135730	Identifier	len		135588	1					
ANR	135731	IfStatement	if ( pos != data_len )		135588	3					
ANR	135732	Condition	pos != data_len	254:8:7561:7575	135588	0	True				
ANR	135733	EqualityExpression	pos != data_len		135588	0		!=			
ANR	135734	Identifier	pos		135588	0					
ANR	135735	Identifier	data_len		135588	1					
ANR	135736	ReturnStatement	return - 5 ;	255:8:7586:7595	135588	1	True				
ANR	135737	UnaryOperationExpression	- 5		135588	0					
ANR	135738	UnaryOperator	-		135588	0					
ANR	135739	PrimaryExpression	5		135588	1					
ANR	135740	ReturnStatement	return - 2 ;	257:4:7602:7611	135588	4	True				
ANR	135741	UnaryOperationExpression	- 2		135588	0					
ANR	135742	UnaryOperator	-		135588	0					
ANR	135743	PrimaryExpression	2		135588	1					
ANR	135744	ReturnType	static int		135588	1					
ANR	135745	Identifier	parse_server_name_extension		135588	2					
ANR	135746	ParameterList	"const char * data , size_t data_len , char * * hostname"		135588	3					
ANR	135747	Parameter	const char * data	220:28:6615:6630	135588	0	True				
ANR	135748	ParameterType	const char *		135588	0					
ANR	135749	Identifier	data		135588	1					
ANR	135750	Parameter	size_t data_len	220:46:6633:6647	135588	1	True				
ANR	135751	ParameterType	size_t		135588	0					
ANR	135752	Identifier	data_len		135588	1					
ANR	135753	Parameter	char * * hostname	221:28:6678:6692	135588	2	True				
ANR	135754	ParameterType	char * *		135588	0					
ANR	135755	Identifier	hostname		135588	1					
ANR	135756	CFGEntryNode	ENTRY		135588		True				
ANR	135757	CFGExitNode	EXIT		135588		True				
ANR	135758	Symbol	malloc		135588						
ANR	135759	Symbol	NULL		135588						
ANR	135760	Symbol	data		135588						
ANR	135761	Symbol	data_len		135588						
ANR	135762	Symbol	* * hostname		135588						
ANR	135763	Symbol	verbose		135588						
ANR	135764	Symbol	hostname		135588						
ANR	135765	Symbol	* hostname		135588						
ANR	135766	Symbol	len		135588						
ANR	135767	Symbol	pos		135588						
ANR	135768	Symbol	* data		135588						
ANR	135769	Symbol	* pos		135588						
ANR	135770	Symbol	* len		135588						
