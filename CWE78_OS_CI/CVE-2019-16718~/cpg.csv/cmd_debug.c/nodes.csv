command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	875968	File	data/converged/CVE-2019-16718~_radare2/cmd_debug.c								
ANR	875969	DeclStmt									
ANR	875970	Decl							const char	const char * [ ]	help_msg_d
ANR	875971	DeclStmt									
ANR	875972	Decl							const char	const char * [ ]	help_msg_db
ANR	875973	DeclStmt									
ANR	875974	Decl							const char	const char * [ ]	help_msg_dbt
ANR	875975	DeclStmt									
ANR	875976	Decl							const char	const char * [ ]	help_msg_dbw
ANR	875977	DeclStmt									
ANR	875978	Decl							const char	const char * [ ]	help_msg_dc
ANR	875979	DeclStmt									
ANR	875980	Decl							const char	const char * [ ]	help_msg_dcs
ANR	875981	DeclStmt									
ANR	875982	Decl							const char	const char * [ ]	help_msg_dcu
ANR	875983	DeclStmt									
ANR	875984	Decl							const char	const char * [ ]	help_msg_dd
ANR	875985	DeclStmt									
ANR	875986	Decl							const char	const char * [ ]	help_msg_de
ANR	875987	DeclStmt									
ANR	875988	Decl							const char	const char * [ ]	help_msg_des
ANR	875989	DeclStmt									
ANR	875990	Decl							const char	const char * [ ]	help_msg_di
ANR	875991	DeclStmt									
ANR	875992	Decl							const char	const char * [ ]	help_msg_dk
ANR	875993	DeclStmt									
ANR	875994	Decl							const char	const char * [ ]	help_msg_dko
ANR	875995	DeclStmt									
ANR	875996	Decl							const char	const char * [ ]	help_msg_dm
ANR	875997	DeclStmt									
ANR	875998	Decl							const char	const char * [ ]	help_msg_dmi
ANR	875999	DeclStmt									
ANR	876000	Decl							const char	const char * [ ]	help_msg_dmm
ANR	876001	DeclStmt									
ANR	876002	Decl							const char	const char * [ ]	help_msg_dmp
ANR	876003	DeclStmt									
ANR	876004	Decl							const char	const char * [ ]	help_msg_dms
ANR	876005	DeclStmt									
ANR	876006	Decl							const char	const char * [ ]	help_msg_do
ANR	876007	DeclStmt									
ANR	876008	Decl							const char	const char * [ ]	help_msg_dp
ANR	876009	DeclStmt									
ANR	876010	Decl							const char	const char * [ ]	help_msg_dr
ANR	876011	DeclStmt									
ANR	876012	Decl							const char	const char * [ ]	help_msg_drp
ANR	876013	DeclStmt									
ANR	876014	Decl							const char	const char * [ ]	help_msg_drs
ANR	876015	DeclStmt									
ANR	876016	Decl							const char	const char * [ ]	help_msg_drt
ANR	876017	DeclStmt									
ANR	876018	Decl							const char	const char * [ ]	help_msg_drx
ANR	876019	DeclStmt									
ANR	876020	Decl							const char	const char * [ ]	help_msg_ds
ANR	876021	DeclStmt									
ANR	876022	Decl							const char	const char * [ ]	help_msg_dsu
ANR	876023	DeclStmt									
ANR	876024	Decl							const char	const char * [ ]	help_msg_dt
ANR	876025	DeclStmt									
ANR	876026	Decl							const char	const char * [ ]	help_msg_dte
ANR	876027	DeclStmt									
ANR	876028	Decl							const char	const char * [ ]	help_msg_dts
ANR	876029	DeclStmt									
ANR	876030	Decl							const char	const char * [ ]	help_msg_dx
ANR	876031	DeclStmt									
ANR	876032	Decl							const char	const char * [ ]	help_msg_dL
ANR	876033	ClassDef	dot_trace_ght	488:0:19595:19652							
ANR	876034	DeclStmt									
ANR	876035	Decl							RGraph	RGraph *	graph
ANR	876036	DeclStmt									
ANR	876037	Decl							Sdb	Sdb *	graphnodes
ANR	876038	ClassDef	trace_node	493:0:19656:19699							
ANR	876039	DeclStmt									
ANR	876040	Decl							ut64	ut64	addr
ANR	876041	DeclStmt									
ANR	876042	Decl							int	int	refs
ANR	876043	Function	cmd_debug_init	498:0:19703:20774							
ANR	876044	FunctionDef	cmd_debug_init (RCore * core)		876043	0					
ANR	876045	CompoundStatement		498:40:19743:20774	876043	0					
ANR	876046	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , d )"	499:1:19746:19777	876043	0	True				
ANR	876047	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , d )"		876043	0					
ANR	876048	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876049	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876050	ArgumentList	core		876043	1					
ANR	876051	Argument	core		876043	0					
ANR	876052	Identifier	core		876043	0					
ANR	876053	Argument	d		876043	1					
ANR	876054	Identifier	d		876043	0					
ANR	876055	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , db )"	500:1:19780:19812	876043	1	True				
ANR	876056	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , db )"		876043	0					
ANR	876057	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876058	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876059	ArgumentList	core		876043	1					
ANR	876060	Argument	core		876043	0					
ANR	876061	Identifier	core		876043	0					
ANR	876062	Argument	db		876043	1					
ANR	876063	Identifier	db		876043	0					
ANR	876064	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dbt )"	501:1:19815:19848	876043	2	True				
ANR	876065	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dbt )"		876043	0					
ANR	876066	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876067	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876068	ArgumentList	core		876043	1					
ANR	876069	Argument	core		876043	0					
ANR	876070	Identifier	core		876043	0					
ANR	876071	Argument	dbt		876043	1					
ANR	876072	Identifier	dbt		876043	0					
ANR	876073	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dc )"	502:1:19851:19883	876043	3	True				
ANR	876074	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dc )"		876043	0					
ANR	876075	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876076	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876077	ArgumentList	core		876043	1					
ANR	876078	Argument	core		876043	0					
ANR	876079	Identifier	core		876043	0					
ANR	876080	Argument	dc		876043	1					
ANR	876081	Identifier	dc		876043	0					
ANR	876082	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dcs )"	503:1:19886:19919	876043	4	True				
ANR	876083	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dcs )"		876043	0					
ANR	876084	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876085	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876086	ArgumentList	core		876043	1					
ANR	876087	Argument	core		876043	0					
ANR	876088	Identifier	core		876043	0					
ANR	876089	Argument	dcs		876043	1					
ANR	876090	Identifier	dcs		876043	0					
ANR	876091	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dcu )"	504:1:19922:19955	876043	5	True				
ANR	876092	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dcu )"		876043	0					
ANR	876093	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876094	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876095	ArgumentList	core		876043	1					
ANR	876096	Argument	core		876043	0					
ANR	876097	Identifier	core		876043	0					
ANR	876098	Argument	dcu		876043	1					
ANR	876099	Identifier	dcu		876043	0					
ANR	876100	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dd )"	505:1:19958:19990	876043	6	True				
ANR	876101	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dd )"		876043	0					
ANR	876102	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876103	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876104	ArgumentList	core		876043	1					
ANR	876105	Argument	core		876043	0					
ANR	876106	Identifier	core		876043	0					
ANR	876107	Argument	dd		876043	1					
ANR	876108	Identifier	dd		876043	0					
ANR	876109	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , de )"	506:1:19993:20025	876043	7	True				
ANR	876110	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , de )"		876043	0					
ANR	876111	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876112	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876113	ArgumentList	core		876043	1					
ANR	876114	Argument	core		876043	0					
ANR	876115	Identifier	core		876043	0					
ANR	876116	Argument	de		876043	1					
ANR	876117	Identifier	de		876043	0					
ANR	876118	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , des )"	507:1:20028:20061	876043	8	True				
ANR	876119	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , des )"		876043	0					
ANR	876120	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876121	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876122	ArgumentList	core		876043	1					
ANR	876123	Argument	core		876043	0					
ANR	876124	Identifier	core		876043	0					
ANR	876125	Argument	des		876043	1					
ANR	876126	Identifier	des		876043	0					
ANR	876127	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , di )"	508:1:20064:20096	876043	9	True				
ANR	876128	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , di )"		876043	0					
ANR	876129	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876130	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876131	ArgumentList	core		876043	1					
ANR	876132	Argument	core		876043	0					
ANR	876133	Identifier	core		876043	0					
ANR	876134	Argument	di		876043	1					
ANR	876135	Identifier	di		876043	0					
ANR	876136	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dk )"	509:1:20099:20131	876043	10	True				
ANR	876137	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dk )"		876043	0					
ANR	876138	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876139	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876140	ArgumentList	core		876043	1					
ANR	876141	Argument	core		876043	0					
ANR	876142	Identifier	core		876043	0					
ANR	876143	Argument	dk		876043	1					
ANR	876144	Identifier	dk		876043	0					
ANR	876145	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dko )"	510:1:20134:20167	876043	11	True				
ANR	876146	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dko )"		876043	0					
ANR	876147	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876148	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876149	ArgumentList	core		876043	1					
ANR	876150	Argument	core		876043	0					
ANR	876151	Identifier	core		876043	0					
ANR	876152	Argument	dko		876043	1					
ANR	876153	Identifier	dko		876043	0					
ANR	876154	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dm )"	511:1:20170:20202	876043	12	True				
ANR	876155	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dm )"		876043	0					
ANR	876156	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876157	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876158	ArgumentList	core		876043	1					
ANR	876159	Argument	core		876043	0					
ANR	876160	Identifier	core		876043	0					
ANR	876161	Argument	dm		876043	1					
ANR	876162	Identifier	dm		876043	0					
ANR	876163	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dmi )"	512:1:20205:20238	876043	13	True				
ANR	876164	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dmi )"		876043	0					
ANR	876165	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876166	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876167	ArgumentList	core		876043	1					
ANR	876168	Argument	core		876043	0					
ANR	876169	Identifier	core		876043	0					
ANR	876170	Argument	dmi		876043	1					
ANR	876171	Identifier	dmi		876043	0					
ANR	876172	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dmm )"	513:1:20241:20274	876043	14	True				
ANR	876173	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dmm )"		876043	0					
ANR	876174	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876175	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876176	ArgumentList	core		876043	1					
ANR	876177	Argument	core		876043	0					
ANR	876178	Identifier	core		876043	0					
ANR	876179	Argument	dmm		876043	1					
ANR	876180	Identifier	dmm		876043	0					
ANR	876181	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dmp )"	514:1:20277:20310	876043	15	True				
ANR	876182	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dmp )"		876043	0					
ANR	876183	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876184	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876185	ArgumentList	core		876043	1					
ANR	876186	Argument	core		876043	0					
ANR	876187	Identifier	core		876043	0					
ANR	876188	Argument	dmp		876043	1					
ANR	876189	Identifier	dmp		876043	0					
ANR	876190	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dms )"	515:1:20313:20346	876043	16	True				
ANR	876191	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dms )"		876043	0					
ANR	876192	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876193	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876194	ArgumentList	core		876043	1					
ANR	876195	Argument	core		876043	0					
ANR	876196	Identifier	core		876043	0					
ANR	876197	Argument	dms		876043	1					
ANR	876198	Identifier	dms		876043	0					
ANR	876199	Statement	DEFINE_CMD_DESCRIPTOR	516:1:20349:20369	876043	17	True				
ANR	876200	Statement	(	516:23:20371:20371	876043	18	True				
ANR	876201	Statement	core	516:24:20372:20375	876043	19	True				
ANR	876202	Statement	","	516:28:20376:20376	876043	20	True				
ANR	876203	DoStatement	do		876043	21					
ANR	876204	Statement	)		876043	0					
ANR	876205	ExpressionStatement		516:33:20381:20381	876043	22	True				
ANR	876206	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dp )"	517:1:20384:20416	876043	23	True				
ANR	876207	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dp )"		876043	0					
ANR	876208	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876209	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876210	ArgumentList	core		876043	1					
ANR	876211	Argument	core		876043	0					
ANR	876212	Identifier	core		876043	0					
ANR	876213	Argument	dp		876043	1					
ANR	876214	Identifier	dp		876043	0					
ANR	876215	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dr )"	518:1:20419:20451	876043	24	True				
ANR	876216	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dr )"		876043	0					
ANR	876217	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876218	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876219	ArgumentList	core		876043	1					
ANR	876220	Argument	core		876043	0					
ANR	876221	Identifier	core		876043	0					
ANR	876222	Argument	dr		876043	1					
ANR	876223	Identifier	dr		876043	0					
ANR	876224	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , drp )"	519:1:20454:20487	876043	25	True				
ANR	876225	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , drp )"		876043	0					
ANR	876226	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876227	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876228	ArgumentList	core		876043	1					
ANR	876229	Argument	core		876043	0					
ANR	876230	Identifier	core		876043	0					
ANR	876231	Argument	drp		876043	1					
ANR	876232	Identifier	drp		876043	0					
ANR	876233	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , drs )"	520:1:20490:20523	876043	26	True				
ANR	876234	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , drs )"		876043	0					
ANR	876235	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876236	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876237	ArgumentList	core		876043	1					
ANR	876238	Argument	core		876043	0					
ANR	876239	Identifier	core		876043	0					
ANR	876240	Argument	drs		876043	1					
ANR	876241	Identifier	drs		876043	0					
ANR	876242	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , drt )"	521:1:20526:20559	876043	27	True				
ANR	876243	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , drt )"		876043	0					
ANR	876244	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876245	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876246	ArgumentList	core		876043	1					
ANR	876247	Argument	core		876043	0					
ANR	876248	Identifier	core		876043	0					
ANR	876249	Argument	drt		876043	1					
ANR	876250	Identifier	drt		876043	0					
ANR	876251	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , drx )"	522:1:20562:20595	876043	28	True				
ANR	876252	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , drx )"		876043	0					
ANR	876253	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876254	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876255	ArgumentList	core		876043	1					
ANR	876256	Argument	core		876043	0					
ANR	876257	Identifier	core		876043	0					
ANR	876258	Argument	drx		876043	1					
ANR	876259	Identifier	drx		876043	0					
ANR	876260	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ds )"	523:1:20598:20630	876043	29	True				
ANR	876261	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ds )"		876043	0					
ANR	876262	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876263	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876264	ArgumentList	core		876043	1					
ANR	876265	Argument	core		876043	0					
ANR	876266	Identifier	core		876043	0					
ANR	876267	Argument	ds		876043	1					
ANR	876268	Identifier	ds		876043	0					
ANR	876269	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dt )"	524:1:20633:20665	876043	30	True				
ANR	876270	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dt )"		876043	0					
ANR	876271	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876272	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876273	ArgumentList	core		876043	1					
ANR	876274	Argument	core		876043	0					
ANR	876275	Identifier	core		876043	0					
ANR	876276	Argument	dt		876043	1					
ANR	876277	Identifier	dt		876043	0					
ANR	876278	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dte )"	525:1:20668:20701	876043	31	True				
ANR	876279	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dte )"		876043	0					
ANR	876280	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876281	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876282	ArgumentList	core		876043	1					
ANR	876283	Argument	core		876043	0					
ANR	876284	Identifier	core		876043	0					
ANR	876285	Argument	dte		876043	1					
ANR	876286	Identifier	dte		876043	0					
ANR	876287	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dts )"	526:1:20704:20737	876043	32	True				
ANR	876288	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dts )"		876043	0					
ANR	876289	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876290	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876291	ArgumentList	core		876043	1					
ANR	876292	Argument	core		876043	0					
ANR	876293	Identifier	core		876043	0					
ANR	876294	Argument	dts		876043	1					
ANR	876295	Identifier	dts		876043	0					
ANR	876296	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dx )"	527:1:20740:20772	876043	33	True				
ANR	876297	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dx )"		876043	0					
ANR	876298	Callee	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876299	Identifier	DEFINE_CMD_DESCRIPTOR		876043	0					
ANR	876300	ArgumentList	core		876043	1					
ANR	876301	Argument	core		876043	0					
ANR	876302	Identifier	core		876043	0					
ANR	876303	Argument	dx		876043	1					
ANR	876304	Identifier	dx		876043	0					
ANR	876305	ReturnType	static void		876043	1					
ANR	876306	Identifier	cmd_debug_init		876043	2					
ANR	876307	ParameterList	RCore * core		876043	3					
ANR	876308	Parameter	RCore * core	498:27:19730:19740	876043	0	True				
ANR	876309	ParameterType	RCore *		876043	0					
ANR	876310	Identifier	core		876043	1					
ANR	876311	CFGEntryNode	ENTRY		876043		True				
ANR	876312	CFGExitNode	EXIT		876043		True				
ANR	876313	CFGErrorNode	ERROR		876043		True				
ANR	876314	Symbol	dd		876043						
ANR	876315	Symbol	de		876043						
ANR	876316	Symbol	dmi		876043						
ANR	876317	Symbol	di		876043						
ANR	876318	Symbol	dmm		876043						
ANR	876319	Symbol	dmp		876043						
ANR	876320	Symbol	dk		876043						
ANR	876321	Symbol	dko		876043						
ANR	876322	Symbol	dm		876043						
ANR	876323	Symbol	dms		876043						
ANR	876324	Symbol	dp		876043						
ANR	876325	Symbol	dr		876043						
ANR	876326	Symbol	ds		876043						
ANR	876327	Symbol	dt		876043						
ANR	876328	Symbol	des		876043						
ANR	876329	Symbol	dte		876043						
ANR	876330	Symbol	dx		876043						
ANR	876331	Symbol	dcs		876043						
ANR	876332	Symbol	dcu		876043						
ANR	876333	Symbol	dts		876043						
ANR	876334	Symbol	drp		876043						
ANR	876335	Symbol	d		876043						
ANR	876336	Symbol	drs		876043						
ANR	876337	Symbol	drt		876043						
ANR	876338	Symbol	drx		876043						
ANR	876339	Symbol	core		876043						
ANR	876340	Symbol	dbt		876043						
ANR	876341	Symbol	db		876043						
ANR	876342	Symbol	dc		876043						
ANR	876343	Function	setRarunProfileString	531:0:20853:21179							
ANR	876344	FunctionDef	"setRarunProfileString (RCore * core , const char * str)"		876343	0					
ANR	876345	CompoundStatement		531:64:20917:21179	876343	0					
ANR	876346	IdentifierDeclStatement	"char * file = r_file_temp ( ""rarun2"" ) ;"	532:1:20920:20955	876343	0	True				
ANR	876347	IdentifierDecl	"* file = r_file_temp ( ""rarun2"" )"		876343	0					
ANR	876348	IdentifierDeclType	char *		876343	0					
ANR	876349	Identifier	file		876343	1					
ANR	876350	AssignmentExpression	"* file = r_file_temp ( ""rarun2"" )"		876343	2		=			
ANR	876351	Identifier	file		876343	0					
ANR	876352	CallExpression	"r_file_temp ( ""rarun2"" )"		876343	1					
ANR	876353	Callee	r_file_temp		876343	0					
ANR	876354	Identifier	r_file_temp		876343	0					
ANR	876355	ArgumentList	"""rarun2"""		876343	1					
ANR	876356	Argument	"""rarun2"""		876343	0					
ANR	876357	PrimaryExpression	"""rarun2"""		876343	0					
ANR	876358	IdentifierDeclStatement	char * s = strdup ( str ) ;	533:1:20958:20980	876343	1	True				
ANR	876359	IdentifierDecl	* s = strdup ( str )		876343	0					
ANR	876360	IdentifierDeclType	char *		876343	0					
ANR	876361	Identifier	s		876343	1					
ANR	876362	AssignmentExpression	* s = strdup ( str )		876343	2		=			
ANR	876363	Identifier	s		876343	0					
ANR	876364	CallExpression	strdup ( str )		876343	1					
ANR	876365	Callee	strdup		876343	0					
ANR	876366	Identifier	strdup		876343	0					
ANR	876367	ArgumentList	str		876343	1					
ANR	876368	Argument	str		876343	0					
ANR	876369	Identifier	str		876343	0					
ANR	876370	ExpressionStatement	"r_config_set ( core -> config , ""dbg.profile"" , file )"	534:1:20983:21031	876343	2	True				
ANR	876371	CallExpression	"r_config_set ( core -> config , ""dbg.profile"" , file )"		876343	0					
ANR	876372	Callee	r_config_set		876343	0					
ANR	876373	Identifier	r_config_set		876343	0					
ANR	876374	ArgumentList	core -> config		876343	1					
ANR	876375	Argument	core -> config		876343	0					
ANR	876376	PtrMemberAccess	core -> config		876343	0					
ANR	876377	Identifier	core		876343	0					
ANR	876378	Identifier	config		876343	1					
ANR	876379	Argument	"""dbg.profile"""		876343	1					
ANR	876380	PrimaryExpression	"""dbg.profile"""		876343	0					
ANR	876381	Argument	file		876343	2					
ANR	876382	Identifier	file		876343	0					
ANR	876383	ExpressionStatement	"r_str_replace_char ( s , ',' , '\\n' )"	535:1:21034:21067	876343	3	True				
ANR	876384	CallExpression	"r_str_replace_char ( s , ',' , '\\n' )"		876343	0					
ANR	876385	Callee	r_str_replace_char		876343	0					
ANR	876386	Identifier	r_str_replace_char		876343	0					
ANR	876387	ArgumentList	s		876343	1					
ANR	876388	Argument	s		876343	0					
ANR	876389	Identifier	s		876343	0					
ANR	876390	Argument	"','"		876343	1					
ANR	876391	PrimaryExpression	"','"		876343	0					
ANR	876392	Argument	'\\n'		876343	2					
ANR	876393	PrimaryExpression	'\\n'		876343	0					
ANR	876394	ExpressionStatement	"r_file_dump ( file , ( const ut8 * ) s , strlen ( s ) , 0 )"	536:1:21070:21118	876343	4	True				
ANR	876395	CallExpression	"r_file_dump ( file , ( const ut8 * ) s , strlen ( s ) , 0 )"		876343	0					
ANR	876396	Callee	r_file_dump		876343	0					
ANR	876397	Identifier	r_file_dump		876343	0					
ANR	876398	ArgumentList	file		876343	1					
ANR	876399	Argument	file		876343	0					
ANR	876400	Identifier	file		876343	0					
ANR	876401	Argument	( const ut8 * ) s		876343	1					
ANR	876402	CastExpression	( const ut8 * ) s		876343	0					
ANR	876403	CastTarget	const ut8 *		876343	0					
ANR	876404	Identifier	s		876343	1					
ANR	876405	Argument	strlen ( s )		876343	2					
ANR	876406	CallExpression	strlen ( s )		876343	0					
ANR	876407	Callee	strlen		876343	0					
ANR	876408	Identifier	strlen		876343	0					
ANR	876409	ArgumentList	s		876343	1					
ANR	876410	Argument	s		876343	0					
ANR	876411	Identifier	s		876343	0					
ANR	876412	Argument	0		876343	3					
ANR	876413	PrimaryExpression	0		876343	0					
ANR	876414	ExpressionStatement	"r_file_dump ( file , ( const ut8 * ) ""\\n"" , 1 , 1 )"	537:1:21121:21163	876343	5	True				
ANR	876415	CallExpression	"r_file_dump ( file , ( const ut8 * ) ""\\n"" , 1 , 1 )"		876343	0					
ANR	876416	Callee	r_file_dump		876343	0					
ANR	876417	Identifier	r_file_dump		876343	0					
ANR	876418	ArgumentList	file		876343	1					
ANR	876419	Argument	file		876343	0					
ANR	876420	Identifier	file		876343	0					
ANR	876421	Argument	"( const ut8 * ) ""\\n"""		876343	1					
ANR	876422	CastExpression	"( const ut8 * ) ""\\n"""		876343	0					
ANR	876423	CastTarget	const ut8 *		876343	0					
ANR	876424	PrimaryExpression	"""\\n"""		876343	1					
ANR	876425	Argument	1		876343	2					
ANR	876426	PrimaryExpression	1		876343	0					
ANR	876427	Argument	1		876343	3					
ANR	876428	PrimaryExpression	1		876343	0					
ANR	876429	ExpressionStatement	free ( file )	538:1:21166:21177	876343	6	True				
ANR	876430	CallExpression	free ( file )		876343	0					
ANR	876431	Callee	free		876343	0					
ANR	876432	Identifier	free		876343	0					
ANR	876433	ArgumentList	file		876343	1					
ANR	876434	Argument	file		876343	0					
ANR	876435	Identifier	file		876343	0					
ANR	876436	ReturnType	static void		876343	1					
ANR	876437	Identifier	setRarunProfileString		876343	2					
ANR	876438	ParameterList	"RCore * core , const char * str"		876343	3					
ANR	876439	Parameter	RCore * core	531:34:20887:20897	876343	0	True				
ANR	876440	ParameterType	RCore *		876343	0					
ANR	876441	Identifier	core		876343	1					
ANR	876442	Parameter	const char * str	531:47:20900:20914	876343	1	True				
ANR	876443	ParameterType	const char *		876343	0					
ANR	876444	Identifier	str		876343	1					
ANR	876445	CFGEntryNode	ENTRY		876343		True				
ANR	876446	CFGExitNode	EXIT		876343		True				
ANR	876447	Symbol	str		876343						
ANR	876448	Symbol	core -> config		876343						
ANR	876449	Symbol	core		876343						
ANR	876450	Symbol	strlen		876343						
ANR	876451	Symbol	file		876343						
ANR	876452	Symbol	s		876343						
ANR	876453	Symbol	* core		876343						
ANR	876454	Symbol	r_file_temp		876343						
ANR	876455	Symbol	strdup		876343						
ANR	876456	Function	cmd_debug_cont_syscall	541:0:21182:22239							
ANR	876457	FunctionDef	"cmd_debug_cont_syscall (RCore * core , const char * _str)"		876456	0					
ANR	876458	CompoundStatement		541:67:21249:22239	876456	0					
ANR	876459	IdentifierDeclStatement	"int i , * syscalls = NULL ;"	543:1:21301:21324	876456	0	True				
ANR	876460	IdentifierDecl	i		876456	0					
ANR	876461	IdentifierDeclType	int		876456	0					
ANR	876462	Identifier	i		876456	1					
ANR	876463	IdentifierDecl	* syscalls = NULL		876456	1					
ANR	876464	IdentifierDeclType	int *		876456	0					
ANR	876465	Identifier	syscalls		876456	1					
ANR	876466	AssignmentExpression	* syscalls = NULL		876456	2		=			
ANR	876467	Identifier	NULL		876456	0					
ANR	876468	Identifier	NULL		876456	1					
ANR	876469	IdentifierDeclStatement	int count = 0 ;	544:1:21327:21340	876456	1	True				
ANR	876470	IdentifierDecl	count = 0		876456	0					
ANR	876471	IdentifierDeclType	int		876456	0					
ANR	876472	Identifier	count		876456	1					
ANR	876473	AssignmentExpression	count = 0		876456	2		=			
ANR	876474	Identifier	count		876456	0					
ANR	876475	PrimaryExpression	0		876456	1					
ANR	876476	IfStatement	if ( _str && * _str )		876456	2					
ANR	876477	Condition	_str && * _str	545:5:21347:21359	876456	0	True				
ANR	876478	AndExpression	_str && * _str		876456	0		&&			
ANR	876479	Identifier	_str		876456	0					
ANR	876480	UnaryOperationExpression	* _str		876456	1					
ANR	876481	UnaryOperator	*		876456	0					
ANR	876482	Identifier	_str		876456	1					
ANR	876483	CompoundStatement		6:2:116:141	876456	1					
ANR	876484	IdentifierDeclStatement	char * str = strdup ( _str ) ;	546:2:21366:21391	876456	0	True				
ANR	876485	IdentifierDecl	* str = strdup ( _str )		876456	0					
ANR	876486	IdentifierDeclType	char *		876456	0					
ANR	876487	Identifier	str		876456	1					
ANR	876488	AssignmentExpression	* str = strdup ( _str )		876456	2		=			
ANR	876489	Identifier	str		876456	0					
ANR	876490	CallExpression	strdup ( _str )		876456	1					
ANR	876491	Callee	strdup		876456	0					
ANR	876492	Identifier	strdup		876456	0					
ANR	876493	ArgumentList	_str		876456	1					
ANR	876494	Argument	_str		876456	0					
ANR	876495	Identifier	_str		876456	0					
ANR	876496	ExpressionStatement	count = r_str_word_set0 ( str )	547:2:21395:21424	876456	1	True				
ANR	876497	AssignmentExpression	count = r_str_word_set0 ( str )		876456	0		=			
ANR	876498	Identifier	count		876456	0					
ANR	876499	CallExpression	r_str_word_set0 ( str )		876456	1					
ANR	876500	Callee	r_str_word_set0		876456	0					
ANR	876501	Identifier	r_str_word_set0		876456	0					
ANR	876502	ArgumentList	str		876456	1					
ANR	876503	Argument	str		876456	0					
ANR	876504	Identifier	str		876456	0					
ANR	876505	ExpressionStatement	"syscalls = calloc ( sizeof ( int ) , count )"	548:2:21428:21467	876456	2	True				
ANR	876506	AssignmentExpression	"syscalls = calloc ( sizeof ( int ) , count )"		876456	0		=			
ANR	876507	Identifier	syscalls		876456	0					
ANR	876508	CallExpression	"calloc ( sizeof ( int ) , count )"		876456	1					
ANR	876509	Callee	calloc		876456	0					
ANR	876510	Identifier	calloc		876456	0					
ANR	876511	ArgumentList	sizeof ( int )		876456	1					
ANR	876512	Argument	sizeof ( int )		876456	0					
ANR	876513	SizeofExpression	sizeof ( int )		876456	0					
ANR	876514	Sizeof	sizeof		876456	0					
ANR	876515	SizeofOperand	int		876456	1					
ANR	876516	Argument	count		876456	1					
ANR	876517	Identifier	count		876456	0					
ANR	876518	ForStatement	for ( i = 0 ; i < count ; i ++ )		876456	3					
ANR	876519	ForInit	i = 0 ;	549:7:21476:21481	876456	0	True				
ANR	876520	AssignmentExpression	i = 0		876456	0		=			
ANR	876521	Identifier	i		876456	0					
ANR	876522	PrimaryExpression	0		876456	1					
ANR	876523	Condition	i < count	549:14:21483:21491	876456	1	True				
ANR	876524	RelationalExpression	i < count		876456	0		<			
ANR	876525	Identifier	i		876456	0					
ANR	876526	Identifier	count		876456	1					
ANR	876527	PostIncDecOperationExpression	i ++	549:25:21494:21496	876456	2	True				
ANR	876528	Identifier	i		876456	0					
ANR	876529	IncDec	++		876456	1					
ANR	876530	CompoundStatement		11:3:307:355	876456	3					
ANR	876531	IdentifierDeclStatement	"const char * sysnumstr = r_str_word_get0 ( str , i ) ;"	550:3:21504:21552	876456	0	True				
ANR	876532	IdentifierDecl	"* sysnumstr = r_str_word_get0 ( str , i )"		876456	0					
ANR	876533	IdentifierDeclType	const char *		876456	0					
ANR	876534	Identifier	sysnumstr		876456	1					
ANR	876535	AssignmentExpression	"* sysnumstr = r_str_word_get0 ( str , i )"		876456	2		=			
ANR	876536	Identifier	sysnumstr		876456	0					
ANR	876537	CallExpression	"r_str_word_get0 ( str , i )"		876456	1					
ANR	876538	Callee	r_str_word_get0		876456	0					
ANR	876539	Identifier	r_str_word_get0		876456	0					
ANR	876540	ArgumentList	str		876456	1					
ANR	876541	Argument	str		876456	0					
ANR	876542	Identifier	str		876456	0					
ANR	876543	Argument	i		876456	1					
ANR	876544	Identifier	i		876456	0					
ANR	876545	IdentifierDeclStatement	"int sig = ( int ) r_num_math ( core -> num , sysnumstr ) ;"	551:3:21557:21605	876456	1	True				
ANR	876546	IdentifierDecl	"sig = ( int ) r_num_math ( core -> num , sysnumstr )"		876456	0					
ANR	876547	IdentifierDeclType	int		876456	0					
ANR	876548	Identifier	sig		876456	1					
ANR	876549	AssignmentExpression	"sig = ( int ) r_num_math ( core -> num , sysnumstr )"		876456	2		=			
ANR	876550	Identifier	sig		876456	0					
ANR	876551	CastExpression	"( int ) r_num_math ( core -> num , sysnumstr )"		876456	1					
ANR	876552	CastTarget	int		876456	0					
ANR	876553	CallExpression	"r_num_math ( core -> num , sysnumstr )"		876456	1					
ANR	876554	Callee	r_num_math		876456	0					
ANR	876555	Identifier	r_num_math		876456	0					
ANR	876556	ArgumentList	core -> num		876456	1					
ANR	876557	Argument	core -> num		876456	0					
ANR	876558	PtrMemberAccess	core -> num		876456	0					
ANR	876559	Identifier	core		876456	0					
ANR	876560	Identifier	num		876456	1					
ANR	876561	Argument	sysnumstr		876456	1					
ANR	876562	Identifier	sysnumstr		876456	0					
ANR	876563	IfStatement	if ( sig == - 1 )		876456	2					
ANR	876564	Condition	sig == - 1	552:7:21614:21622	876456	0	True				
ANR	876565	EqualityExpression	sig == - 1		876456	0		==			
ANR	876566	Identifier	sig		876456	0					
ANR	876567	UnaryOperationExpression	- 1		876456	1					
ANR	876568	UnaryOperator	-		876456	0					
ANR	876569	PrimaryExpression	1		876456	1					
ANR	876570	CompoundStatement		12:18:375:375	876456	1					
ANR	876571	ExpressionStatement	syscalls [ i ] = - 1	553:4:21653:21669	876456	0	True				
ANR	876572	AssignmentExpression	syscalls [ i ] = - 1		876456	0		=			
ANR	876573	ArrayIndexing	syscalls [ i ]		876456	0					
ANR	876574	Identifier	syscalls		876456	0					
ANR	876575	Identifier	i		876456	1					
ANR	876576	UnaryOperationExpression	- 1		876456	1					
ANR	876577	UnaryOperator	-		876456	0					
ANR	876578	PrimaryExpression	1		876456	1					
ANR	876579	ElseStatement	else		876456	0					
ANR	876580	IfStatement	if ( sig == 0 )		876456	0					
ANR	876581	Condition	sig == 0	554:14:21685:21692	876456	0	True				
ANR	876582	EqualityExpression	sig == 0		876456	0		==			
ANR	876583	Identifier	sig		876456	0					
ANR	876584	PrimaryExpression	0		876456	1					
ANR	876585	CompoundStatement		14:24:445:445	876456	1					
ANR	876586	ExpressionStatement	"sig = r_syscall_get_num ( core -> anal -> syscall , sysnumstr )"	555:4:21701:21757	876456	0	True				
ANR	876587	AssignmentExpression	"sig = r_syscall_get_num ( core -> anal -> syscall , sysnumstr )"		876456	0		=			
ANR	876588	Identifier	sig		876456	0					
ANR	876589	CallExpression	"r_syscall_get_num ( core -> anal -> syscall , sysnumstr )"		876456	1					
ANR	876590	Callee	r_syscall_get_num		876456	0					
ANR	876591	Identifier	r_syscall_get_num		876456	0					
ANR	876592	ArgumentList	core -> anal -> syscall		876456	1					
ANR	876593	Argument	core -> anal -> syscall		876456	0					
ANR	876594	PtrMemberAccess	core -> anal -> syscall		876456	0					
ANR	876595	PtrMemberAccess	core -> anal		876456	0					
ANR	876596	Identifier	core		876456	0					
ANR	876597	Identifier	anal		876456	1					
ANR	876598	Identifier	syscall		876456	1					
ANR	876599	Argument	sysnumstr		876456	1					
ANR	876600	Identifier	sysnumstr		876456	0					
ANR	876601	IfStatement	if ( sig == - 1 )		876456	1					
ANR	876602	Condition	sig == - 1	556:8:21767:21775	876456	0	True				
ANR	876603	EqualityExpression	sig == - 1		876456	0		==			
ANR	876604	Identifier	sig		876456	0					
ANR	876605	UnaryOperationExpression	- 1		876456	1					
ANR	876606	UnaryOperator	-		876456	0					
ANR	876607	PrimaryExpression	1		876456	1					
ANR	876608	CompoundStatement		16:19:528:528	876456	1					
ANR	876609	ExpressionStatement	"eprintf ( ""Unknown syscall number\\n"" )"	557:5:21785:21821	876456	0	True				
ANR	876610	CallExpression	"eprintf ( ""Unknown syscall number\\n"" )"		876456	0					
ANR	876611	Callee	eprintf		876456	0					
ANR	876612	Identifier	eprintf		876456	0					
ANR	876613	ArgumentList	"""Unknown syscall number\\n"""		876456	1					
ANR	876614	Argument	"""Unknown syscall number\\n"""		876456	0					
ANR	876615	PrimaryExpression	"""Unknown syscall number\\n"""		876456	0					
ANR	876616	ExpressionStatement	free ( str )	558:5:21828:21838	876456	1	True				
ANR	876617	CallExpression	free ( str )		876456	0					
ANR	876618	Callee	free		876456	0					
ANR	876619	Identifier	free		876456	0					
ANR	876620	ArgumentList	str		876456	1					
ANR	876621	Argument	str		876456	0					
ANR	876622	Identifier	str		876456	0					
ANR	876623	ExpressionStatement	free ( syscalls )	559:5:21845:21860	876456	2	True				
ANR	876624	CallExpression	free ( syscalls )		876456	0					
ANR	876625	Callee	free		876456	0					
ANR	876626	Identifier	free		876456	0					
ANR	876627	ArgumentList	syscalls		876456	1					
ANR	876628	Argument	syscalls		876456	0					
ANR	876629	Identifier	syscalls		876456	0					
ANR	876630	ReturnStatement	return ;	560:5:21867:21873	876456	3	True				
ANR	876631	ExpressionStatement	syscalls [ i ] = sig	562:4:21885:21902	876456	2	True				
ANR	876632	AssignmentExpression	syscalls [ i ] = sig		876456	0		=			
ANR	876633	ArrayIndexing	syscalls [ i ]		876456	0					
ANR	876634	Identifier	syscalls		876456	0					
ANR	876635	Identifier	i		876456	1					
ANR	876636	Identifier	sig		876456	1					
ANR	876637	ExpressionStatement	"eprintf ( ""Running child until syscalls:"" )"	565:2:21915:21956	876456	4	True				
ANR	876638	CallExpression	"eprintf ( ""Running child until syscalls:"" )"		876456	0					
ANR	876639	Callee	eprintf		876456	0					
ANR	876640	Identifier	eprintf		876456	0					
ANR	876641	ArgumentList	"""Running child until syscalls:"""		876456	1					
ANR	876642	Argument	"""Running child until syscalls:"""		876456	0					
ANR	876643	PrimaryExpression	"""Running child until syscalls:"""		876456	0					
ANR	876644	ForStatement	for ( i = 0 ; i < count ; i ++ )		876456	5					
ANR	876645	ForInit	i = 0 ;	566:7:21965:21970	876456	0	True				
ANR	876646	AssignmentExpression	i = 0		876456	0		=			
ANR	876647	Identifier	i		876456	0					
ANR	876648	PrimaryExpression	0		876456	1					
ANR	876649	Condition	i < count	566:14:21972:21980	876456	1	True				
ANR	876650	RelationalExpression	i < count		876456	0		<			
ANR	876651	Identifier	i		876456	0					
ANR	876652	Identifier	count		876456	1					
ANR	876653	PostIncDecOperationExpression	i ++	566:25:21983:21985	876456	2	True				
ANR	876654	Identifier	i		876456	0					
ANR	876655	IncDec	++		876456	1					
ANR	876656	CompoundStatement		26:30:738:738	876456	3					
ANR	876657	ExpressionStatement	"eprintf ( ""%d "" , syscalls [ i ] )"	567:3:21993:22021	876456	0	True				
ANR	876658	CallExpression	"eprintf ( ""%d "" , syscalls [ i ] )"		876456	0					
ANR	876659	Callee	eprintf		876456	0					
ANR	876660	Identifier	eprintf		876456	0					
ANR	876661	ArgumentList	"""%d """		876456	1					
ANR	876662	Argument	"""%d """		876456	0					
ANR	876663	PrimaryExpression	"""%d """		876456	0					
ANR	876664	Argument	syscalls [ i ]		876456	1					
ANR	876665	ArrayIndexing	syscalls [ i ]		876456	0					
ANR	876666	Identifier	syscalls		876456	0					
ANR	876667	Identifier	i		876456	1					
ANR	876668	ExpressionStatement	"eprintf ( ""\\n"" )"	569:2:22029:22043	876456	6	True				
ANR	876669	CallExpression	"eprintf ( ""\\n"" )"		876456	0					
ANR	876670	Callee	eprintf		876456	0					
ANR	876671	Identifier	eprintf		876456	0					
ANR	876672	ArgumentList	"""\\n"""		876456	1					
ANR	876673	Argument	"""\\n"""		876456	0					
ANR	876674	PrimaryExpression	"""\\n"""		876456	0					
ANR	876675	ExpressionStatement	free ( str )	570:2:22047:22057	876456	7	True				
ANR	876676	CallExpression	free ( str )		876456	0					
ANR	876677	Callee	free		876456	0					
ANR	876678	Identifier	free		876456	0					
ANR	876679	ArgumentList	str		876456	1					
ANR	876680	Argument	str		876456	0					
ANR	876681	Identifier	str		876456	0					
ANR	876682	ElseStatement	else		876456	0					
ANR	876683	CompoundStatement		31:8:817:817	876456	0					
ANR	876684	ExpressionStatement	"eprintf ( ""Running child until next syscall\\n"" )"	572:2:22071:22117	876456	0	True				
ANR	876685	CallExpression	"eprintf ( ""Running child until next syscall\\n"" )"		876456	0					
ANR	876686	Callee	eprintf		876456	0					
ANR	876687	Identifier	eprintf		876456	0					
ANR	876688	ArgumentList	"""Running child until next syscall\\n"""		876456	1					
ANR	876689	Argument	"""Running child until next syscall\\n"""		876456	0					
ANR	876690	PrimaryExpression	"""Running child until next syscall\\n"""		876456	0					
ANR	876691	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	574:1:22123:22162	876456	3	True				
ANR	876692	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		876456	0					
ANR	876693	Callee	r_reg_arena_swap		876456	0					
ANR	876694	Identifier	r_reg_arena_swap		876456	0					
ANR	876695	ArgumentList	core -> dbg -> reg		876456	1					
ANR	876696	Argument	core -> dbg -> reg		876456	0					
ANR	876697	PtrMemberAccess	core -> dbg -> reg		876456	0					
ANR	876698	PtrMemberAccess	core -> dbg		876456	0					
ANR	876699	Identifier	core		876456	0					
ANR	876700	Identifier	dbg		876456	1					
ANR	876701	Identifier	reg		876456	1					
ANR	876702	Argument	true		876456	1					
ANR	876703	Identifier	true		876456	0					
ANR	876704	ExpressionStatement	"r_debug_continue_syscalls ( core -> dbg , syscalls , count )"	575:1:22165:22219	876456	4	True				
ANR	876705	CallExpression	"r_debug_continue_syscalls ( core -> dbg , syscalls , count )"		876456	0					
ANR	876706	Callee	r_debug_continue_syscalls		876456	0					
ANR	876707	Identifier	r_debug_continue_syscalls		876456	0					
ANR	876708	ArgumentList	core -> dbg		876456	1					
ANR	876709	Argument	core -> dbg		876456	0					
ANR	876710	PtrMemberAccess	core -> dbg		876456	0					
ANR	876711	Identifier	core		876456	0					
ANR	876712	Identifier	dbg		876456	1					
ANR	876713	Argument	syscalls		876456	1					
ANR	876714	Identifier	syscalls		876456	0					
ANR	876715	Argument	count		876456	2					
ANR	876716	Identifier	count		876456	0					
ANR	876717	ExpressionStatement	free ( syscalls )	576:1:22222:22237	876456	5	True				
ANR	876718	CallExpression	free ( syscalls )		876456	0					
ANR	876719	Callee	free		876456	0					
ANR	876720	Identifier	free		876456	0					
ANR	876721	ArgumentList	syscalls		876456	1					
ANR	876722	Argument	syscalls		876456	0					
ANR	876723	Identifier	syscalls		876456	0					
ANR	876724	ReturnType	static void		876456	1					
ANR	876725	Identifier	cmd_debug_cont_syscall		876456	2					
ANR	876726	ParameterList	"RCore * core , const char * _str"		876456	3					
ANR	876727	Parameter	RCore * core	541:36:21218:21228	876456	0	True				
ANR	876728	ParameterType	RCore *		876456	0					
ANR	876729	Identifier	core		876456	1					
ANR	876730	Parameter	const char * _str	541:49:21231:21246	876456	1	True				
ANR	876731	ParameterType	const char *		876456	0					
ANR	876732	Identifier	_str		876456	1					
ANR	876733	CFGEntryNode	ENTRY		876456		True				
ANR	876734	CFGExitNode	EXIT		876456		True				
ANR	876735	Symbol	* core		876456						
ANR	876736	Symbol	sysnumstr		876456						
ANR	876737	Symbol	calloc		876456						
ANR	876738	Symbol	r_str_word_set0		876456						
ANR	876739	Symbol	core -> anal		876456						
ANR	876740	Symbol	r_num_math		876456						
ANR	876741	Symbol	sig		876456						
ANR	876742	Symbol	core -> num		876456						
ANR	876743	Symbol	_str		876456						
ANR	876744	Symbol	* * core		876456						
ANR	876745	Symbol	NULL		876456						
ANR	876746	Symbol	count		876456						
ANR	876747	Symbol	i		876456						
ANR	876748	Symbol	r_str_word_get0		876456						
ANR	876749	Symbol	r_syscall_get_num		876456						
ANR	876750	Symbol	core -> anal -> syscall		876456						
ANR	876751	Symbol	* syscalls		876456						
ANR	876752	Symbol	str		876456						
ANR	876753	Symbol	core		876456						
ANR	876754	Symbol	* _str		876456						
ANR	876755	Symbol	* i		876456						
ANR	876756	Symbol	* core -> anal		876456						
ANR	876757	Symbol	core -> dbg -> reg		876456						
ANR	876758	Symbol	true		876456						
ANR	876759	Symbol	strdup		876456						
ANR	876760	Symbol	* core -> dbg		876456						
ANR	876761	Symbol	syscalls		876456						
ANR	876762	Symbol	core -> dbg		876456						
ANR	876763	Function	showreg	579:0:22242:23343							
ANR	876764	FunctionDef	"showreg (RCore * core , const char * str)"		876763	0					
ANR	876765	CompoundStatement		579:49:22291:23343	876763	0					
ANR	876766	IdentifierDeclStatement	int size = 0 ;	580:1:22294:22306	876763	0	True				
ANR	876767	IdentifierDecl	size = 0		876763	0					
ANR	876768	IdentifierDeclType	int		876763	0					
ANR	876769	Identifier	size		876763	1					
ANR	876770	AssignmentExpression	size = 0		876763	2		=			
ANR	876771	Identifier	size		876763	0					
ANR	876772	PrimaryExpression	0		876763	1					
ANR	876773	IdentifierDeclStatement	RRegItem * r = 0 ;	581:1:22309:22324	876763	1	True				
ANR	876774	IdentifierDecl	* r = 0		876763	0					
ANR	876775	IdentifierDeclType	RRegItem *		876763	0					
ANR	876776	Identifier	r		876763	1					
ANR	876777	AssignmentExpression	* r = 0		876763	2		=			
ANR	876778	Identifier	r		876763	0					
ANR	876779	PrimaryExpression	0		876763	1					
ANR	876780	IdentifierDeclStatement	const char * rname = str ;	582:1:22327:22350	876763	2	True				
ANR	876781	IdentifierDecl	* rname = str		876763	0					
ANR	876782	IdentifierDeclType	const char *		876763	0					
ANR	876783	Identifier	rname		876763	1					
ANR	876784	AssignmentExpression	* rname = str		876763	2		=			
ANR	876785	Identifier	str		876763	0					
ANR	876786	Identifier	str		876763	1					
ANR	876787	IdentifierDeclStatement	int role = r_reg_get_name_idx ( str ) ;	584:1:22377:22412	876763	3	True				
ANR	876788	IdentifierDecl	role = r_reg_get_name_idx ( str )		876763	0					
ANR	876789	IdentifierDeclType	int		876763	0					
ANR	876790	Identifier	role		876763	1					
ANR	876791	AssignmentExpression	role = r_reg_get_name_idx ( str )		876763	2		=			
ANR	876792	Identifier	role		876763	0					
ANR	876793	CallExpression	r_reg_get_name_idx ( str )		876763	1					
ANR	876794	Callee	r_reg_get_name_idx		876763	0					
ANR	876795	Identifier	r_reg_get_name_idx		876763	0					
ANR	876796	ArgumentList	str		876763	1					
ANR	876797	Argument	str		876763	0					
ANR	876798	Identifier	str		876763	0					
ANR	876799	IfStatement	if ( role != - 1 )		876763	4					
ANR	876800	Condition	role != - 1	585:5:22419:22428	876763	0	True				
ANR	876801	EqualityExpression	role != - 1		876763	0		!=			
ANR	876802	Identifier	role		876763	0					
ANR	876803	UnaryOperationExpression	- 1		876763	1					
ANR	876804	UnaryOperator	-		876763	0					
ANR	876805	PrimaryExpression	1		876763	1					
ANR	876806	CompoundStatement		7:17:139:139	876763	1					
ANR	876807	ExpressionStatement	"rname = r_reg_get_name ( core -> dbg -> reg , role )"	586:2:22435:22480	876763	0	True				
ANR	876808	AssignmentExpression	"rname = r_reg_get_name ( core -> dbg -> reg , role )"		876763	0		=			
ANR	876809	Identifier	rname		876763	0					
ANR	876810	CallExpression	"r_reg_get_name ( core -> dbg -> reg , role )"		876763	1					
ANR	876811	Callee	r_reg_get_name		876763	0					
ANR	876812	Identifier	r_reg_get_name		876763	0					
ANR	876813	ArgumentList	core -> dbg -> reg		876763	1					
ANR	876814	Argument	core -> dbg -> reg		876763	0					
ANR	876815	PtrMemberAccess	core -> dbg -> reg		876763	0					
ANR	876816	PtrMemberAccess	core -> dbg		876763	0					
ANR	876817	Identifier	core		876763	0					
ANR	876818	Identifier	dbg		876763	1					
ANR	876819	Identifier	reg		876763	1					
ANR	876820	Argument	role		876763	1					
ANR	876821	Identifier	role		876763	0					
ANR	876822	ExpressionStatement	"r = r_reg_get ( core -> dbg -> reg , rname , - 1 )"	588:1:22486:22528	876763	5	True				
ANR	876823	AssignmentExpression	"r = r_reg_get ( core -> dbg -> reg , rname , - 1 )"		876763	0		=			
ANR	876824	Identifier	r		876763	0					
ANR	876825	CallExpression	"r_reg_get ( core -> dbg -> reg , rname , - 1 )"		876763	1					
ANR	876826	Callee	r_reg_get		876763	0					
ANR	876827	Identifier	r_reg_get		876763	0					
ANR	876828	ArgumentList	core -> dbg -> reg		876763	1					
ANR	876829	Argument	core -> dbg -> reg		876763	0					
ANR	876830	PtrMemberAccess	core -> dbg -> reg		876763	0					
ANR	876831	PtrMemberAccess	core -> dbg		876763	0					
ANR	876832	Identifier	core		876763	0					
ANR	876833	Identifier	dbg		876763	1					
ANR	876834	Identifier	reg		876763	1					
ANR	876835	Argument	rname		876763	1					
ANR	876836	Identifier	rname		876763	0					
ANR	876837	Argument	- 1		876763	2					
ANR	876838	UnaryOperationExpression	- 1		876763	0					
ANR	876839	UnaryOperator	-		876763	0					
ANR	876840	PrimaryExpression	1		876763	1					
ANR	876841	IfStatement	if ( r )		876763	6					
ANR	876842	Condition	r	589:5:22535:22535	876763	0	True				
ANR	876843	Identifier	r		876763	0					
ANR	876844	CompoundStatement		13:2:262:271	876763	1					
ANR	876845	IdentifierDeclStatement	ut64 off ;	590:2:22542:22550	876763	0	True				
ANR	876846	IdentifierDecl	off		876763	0					
ANR	876847	IdentifierDeclType	ut64		876763	0					
ANR	876848	Identifier	off		876763	1					
ANR	876849	IdentifierDeclStatement	utX value ;	591:2:22554:22563	876763	1	True				
ANR	876850	IdentifierDecl	value		876763	0					
ANR	876851	IdentifierDeclType	utX		876763	0					
ANR	876852	Identifier	value		876763	1					
ANR	876853	IfStatement	if ( r -> size > 64 )		876763	2					
ANR	876854	Condition	r -> size > 64	592:6:22571:22582	876763	0	True				
ANR	876855	RelationalExpression	r -> size > 64		876763	0		>			
ANR	876856	PtrMemberAccess	r -> size		876763	0					
ANR	876857	Identifier	r		876763	0					
ANR	876858	Identifier	size		876763	1					
ANR	876859	PrimaryExpression	64		876763	1					
ANR	876860	CompoundStatement		14:20:293:293	876763	1					
ANR	876861	ExpressionStatement	"off = r_reg_get_value_big ( core -> dbg -> reg , r , & value )"	593:3:22590:22643	876763	0	True				
ANR	876862	AssignmentExpression	"off = r_reg_get_value_big ( core -> dbg -> reg , r , & value )"		876763	0		=			
ANR	876863	Identifier	off		876763	0					
ANR	876864	CallExpression	"r_reg_get_value_big ( core -> dbg -> reg , r , & value )"		876763	1					
ANR	876865	Callee	r_reg_get_value_big		876763	0					
ANR	876866	Identifier	r_reg_get_value_big		876763	0					
ANR	876867	ArgumentList	core -> dbg -> reg		876763	1					
ANR	876868	Argument	core -> dbg -> reg		876763	0					
ANR	876869	PtrMemberAccess	core -> dbg -> reg		876763	0					
ANR	876870	PtrMemberAccess	core -> dbg		876763	0					
ANR	876871	Identifier	core		876763	0					
ANR	876872	Identifier	dbg		876763	1					
ANR	876873	Identifier	reg		876763	1					
ANR	876874	Argument	r		876763	1					
ANR	876875	Identifier	r		876763	0					
ANR	876876	Argument	& value		876763	2					
ANR	876877	UnaryOperationExpression	& value		876763	0					
ANR	876878	UnaryOperator	&		876763	0					
ANR	876879	Identifier	value		876763	1					
ANR	876880	SwitchStatement	switch ( r -> size )		876763	1					
ANR	876881	Condition	r -> size	594:11:22656:22662	876763	0	True				
ANR	876882	PtrMemberAccess	r -> size		876763	0					
ANR	876883	Identifier	r		876763	0					
ANR	876884	Identifier	size		876763	1					
ANR	876885	CompoundStatement		16:20:373:373	876763	1					
ANR	876886	Label	case 80 :	595:3:22670:22677	876763	0	True				
ANR	876887	Statement	r_cons_printf	596:4:22683:22695	876763	1	True				
ANR	876888	Statement	(	596:18:22697:22697	876763	2	True				
ANR	876889	Statement	"""0x%04x%016"""	596:19:22698:22709	876763	3	True				
ANR	876890	Statement	PFMT64x	596:31:22710:22716	876763	4	True				
ANR	876891	Statement	"""\\n"""	596:38:22717:22720	876763	5	True				
ANR	876892	Statement	","	596:42:22721:22721	876763	6	True				
ANR	876893	Statement	value	596:44:22723:22727	876763	7	True				
ANR	876894	Statement	.	596:49:22728:22728	876763	8	True				
ANR	876895	Statement	v80	596:50:22729:22731	876763	9	True				
ANR	876896	Statement	.	596:53:22732:22732	876763	10	True				
ANR	876897	Statement	High	596:54:22733:22736	876763	11	True				
ANR	876898	Statement	","	596:58:22737:22737	876763	12	True				
ANR	876899	Statement	value	596:60:22739:22743	876763	13	True				
ANR	876900	Statement	.	596:65:22744:22744	876763	14	True				
ANR	876901	Statement	v80	596:66:22745:22747	876763	15	True				
ANR	876902	Statement	.	596:69:22748:22748	876763	16	True				
ANR	876903	Statement	Low	596:70:22749:22751	876763	17	True				
ANR	876904	Statement	)	596:73:22752:22752	876763	18	True				
ANR	876905	ExpressionStatement		596:74:22753:22753	876763	19	True				
ANR	876906	BreakStatement	break ;	597:4:22759:22764	876763	20	True				
ANR	876907	Label	case 96 :	598:3:22769:22776	876763	21	True				
ANR	876908	Statement	r_cons_printf	599:4:22782:22794	876763	22	True				
ANR	876909	Statement	(	599:18:22796:22796	876763	23	True				
ANR	876910	Statement	"""0x%08x%016"""	599:19:22797:22808	876763	24	True				
ANR	876911	Statement	PFMT64x	599:31:22809:22815	876763	25	True				
ANR	876912	Statement	"""\\n"""	599:38:22816:22819	876763	26	True				
ANR	876913	Statement	","	599:42:22820:22820	876763	27	True				
ANR	876914	Statement	value	599:44:22822:22826	876763	28	True				
ANR	876915	Statement	.	599:49:22827:22827	876763	29	True				
ANR	876916	Statement	v96	599:50:22828:22830	876763	30	True				
ANR	876917	Statement	.	599:53:22831:22831	876763	31	True				
ANR	876918	Statement	High	599:54:22832:22835	876763	32	True				
ANR	876919	Statement	","	599:58:22836:22836	876763	33	True				
ANR	876920	Statement	value	599:60:22838:22842	876763	34	True				
ANR	876921	Statement	.	599:65:22843:22843	876763	35	True				
ANR	876922	Statement	v96	599:66:22844:22846	876763	36	True				
ANR	876923	Statement	.	599:69:22847:22847	876763	37	True				
ANR	876924	Statement	Low	599:70:22848:22850	876763	38	True				
ANR	876925	Statement	)	599:73:22851:22851	876763	39	True				
ANR	876926	ExpressionStatement		599:74:22852:22852	876763	40	True				
ANR	876927	BreakStatement	break ;	600:4:22858:22863	876763	41	True				
ANR	876928	Label	case 128 :	601:3:22868:22876	876763	42	True				
ANR	876929	Statement	r_cons_printf	602:4:22882:22894	876763	43	True				
ANR	876930	Statement	(	602:18:22896:22896	876763	44	True				
ANR	876931	Statement	"""0x%016"""	602:19:22897:22904	876763	45	True				
ANR	876932	Statement	PFMT64x	602:27:22905:22911	876763	46	True				
ANR	876933	Statement	"""%016"""	602:34:22912:22917	876763	47	True				
ANR	876934	Statement	PFMT64x	602:40:22918:22924	876763	48	True				
ANR	876935	Statement	"""\\n"""	602:47:22925:22928	876763	49	True				
ANR	876936	Statement	","	602:51:22929:22929	876763	50	True				
ANR	876937	Statement	value	602:53:22931:22935	876763	51	True				
ANR	876938	Statement	.	602:58:22936:22936	876763	52	True				
ANR	876939	Statement	v128	602:59:22937:22940	876763	53	True				
ANR	876940	Statement	.	602:63:22941:22941	876763	54	True				
ANR	876941	Statement	High	602:64:22942:22945	876763	55	True				
ANR	876942	Statement	","	602:68:22946:22946	876763	56	True				
ANR	876943	Statement	value	602:70:22948:22952	876763	57	True				
ANR	876944	Statement	.	602:75:22953:22953	876763	58	True				
ANR	876945	Statement	v128	602:76:22954:22957	876763	59	True				
ANR	876946	Statement	.	602:80:22958:22958	876763	60	True				
ANR	876947	Statement	Low	602:81:22959:22961	876763	61	True				
ANR	876948	Statement	)	602:84:22962:22962	876763	62	True				
ANR	876949	ExpressionStatement		602:85:22963:22963	876763	63	True				
ANR	876950	BreakStatement	break ;	603:4:22969:22974	876763	64	True				
ANR	876951	Label	default :	604:3:22979:22986	876763	65	True				
ANR	876952	Identifier	default		876763	0					
ANR	876953	ExpressionStatement	"r_cons_printf ( ""Error while retrieving reg '%s' of %i bits\\n"" , str + 1 , r -> size )"	605:4:22992:23071	876763	66	True				
ANR	876954	CallExpression	"r_cons_printf ( ""Error while retrieving reg '%s' of %i bits\\n"" , str + 1 , r -> size )"		876763	0					
ANR	876955	Callee	r_cons_printf		876763	0					
ANR	876956	Identifier	r_cons_printf		876763	0					
ANR	876957	ArgumentList	"""Error while retrieving reg '%s' of %i bits\\n"""		876763	1					
ANR	876958	Argument	"""Error while retrieving reg '%s' of %i bits\\n"""		876763	0					
ANR	876959	PrimaryExpression	"""Error while retrieving reg '%s' of %i bits\\n"""		876763	0					
ANR	876960	Argument	str + 1		876763	1					
ANR	876961	AdditiveExpression	str + 1		876763	0		+			
ANR	876962	Identifier	str		876763	0					
ANR	876963	PrimaryExpression	1		876763	1					
ANR	876964	Argument	r -> size		876763	2					
ANR	876965	PtrMemberAccess	r -> size		876763	0					
ANR	876966	Identifier	r		876763	0					
ANR	876967	Identifier	size		876763	1					
ANR	876968	ElseStatement	else		876763	0					
ANR	876969	CompoundStatement		29:9:795:795	876763	0					
ANR	876970	ExpressionStatement	"off = r_reg_get_value ( core -> dbg -> reg , r )"	608:3:23092:23133	876763	0	True				
ANR	876971	AssignmentExpression	"off = r_reg_get_value ( core -> dbg -> reg , r )"		876763	0		=			
ANR	876972	Identifier	off		876763	0					
ANR	876973	CallExpression	"r_reg_get_value ( core -> dbg -> reg , r )"		876763	1					
ANR	876974	Callee	r_reg_get_value		876763	0					
ANR	876975	Identifier	r_reg_get_value		876763	0					
ANR	876976	ArgumentList	core -> dbg -> reg		876763	1					
ANR	876977	Argument	core -> dbg -> reg		876763	0					
ANR	876978	PtrMemberAccess	core -> dbg -> reg		876763	0					
ANR	876979	PtrMemberAccess	core -> dbg		876763	0					
ANR	876980	Identifier	core		876763	0					
ANR	876981	Identifier	dbg		876763	1					
ANR	876982	Identifier	reg		876763	1					
ANR	876983	Argument	r		876763	1					
ANR	876984	Identifier	r		876763	0					
ANR	876985	Statement	r_cons_printf	609:3:23138:23150	876763	1	True				
ANR	876986	Statement	(	609:17:23152:23152	876763	2	True				
ANR	876987	Statement	"""0x%08"""	609:18:23153:23159	876763	3	True				
ANR	876988	Statement	PFMT64x	609:25:23160:23166	876763	4	True				
ANR	876989	Statement	"""\\n"""	609:33:23168:23171	876763	5	True				
ANR	876990	Statement	","	609:37:23172:23172	876763	6	True				
ANR	876991	Statement	off	609:39:23174:23176	876763	7	True				
ANR	876992	Statement	)	609:42:23177:23177	876763	8	True				
ANR	876993	ExpressionStatement		609:43:23178:23178	876763	9	True				
ANR	876994	ReturnStatement	return r -> size ;	611:2:23186:23200	876763	3	True				
ANR	876995	PtrMemberAccess	r -> size		876763	0					
ANR	876996	Identifier	r		876763	0					
ANR	876997	Identifier	size		876763	1					
ANR	876998	IdentifierDeclStatement	"char * arg = strchr ( str + 1 , ' ' ) ;"	613:1:23206:23239	876763	7	True				
ANR	876999	IdentifierDecl	"* arg = strchr ( str + 1 , ' ' )"		876763	0					
ANR	877000	IdentifierDeclType	char *		876763	0					
ANR	877001	Identifier	arg		876763	1					
ANR	877002	AssignmentExpression	"* arg = strchr ( str + 1 , ' ' )"		876763	2		=			
ANR	877003	Identifier	arg		876763	0					
ANR	877004	CallExpression	"strchr ( str + 1 , ' ' )"		876763	1					
ANR	877005	Callee	strchr		876763	0					
ANR	877006	Identifier	strchr		876763	0					
ANR	877007	ArgumentList	str + 1		876763	1					
ANR	877008	Argument	str + 1		876763	0					
ANR	877009	AdditiveExpression	str + 1		876763	0		+			
ANR	877010	Identifier	str		876763	0					
ANR	877011	PrimaryExpression	1		876763	1					
ANR	877012	Argument	' '		876763	1					
ANR	877013	PrimaryExpression	' '		876763	0					
ANR	877014	IfStatement	if ( arg && size == 0 )		876763	8					
ANR	877015	Condition	arg && size == 0	614:5:23246:23261	876763	0	True				
ANR	877016	AndExpression	arg && size == 0		876763	0		&&			
ANR	877017	Identifier	arg		876763	0					
ANR	877018	EqualityExpression	size == 0		876763	1		==			
ANR	877019	Identifier	size		876763	0					
ANR	877020	PrimaryExpression	0		876763	1					
ANR	877021	CompoundStatement		36:23:972:972	876763	1					
ANR	877022	ExpressionStatement	size = atoi ( arg + 1 )	615:2:23268:23289	876763	0	True				
ANR	877023	AssignmentExpression	size = atoi ( arg + 1 )		876763	0		=			
ANR	877024	Identifier	size		876763	0					
ANR	877025	CallExpression	atoi ( arg + 1 )		876763	1					
ANR	877026	Callee	atoi		876763	0					
ANR	877027	Identifier	atoi		876763	0					
ANR	877028	ArgumentList	arg + 1		876763	1					
ANR	877029	Argument	arg + 1		876763	0					
ANR	877030	AdditiveExpression	arg + 1		876763	0		+			
ANR	877031	Identifier	arg		876763	0					
ANR	877032	PrimaryExpression	1		876763	1					
ANR	877033	ElseStatement	else		876763	0					
ANR	877034	CompoundStatement		38:8:1007:1007	876763	0					
ANR	877035	ExpressionStatement	size = atoi ( str + 1 )	617:2:23303:23324	876763	0	True				
ANR	877036	AssignmentExpression	size = atoi ( str + 1 )		876763	0		=			
ANR	877037	Identifier	size		876763	0					
ANR	877038	CallExpression	atoi ( str + 1 )		876763	1					
ANR	877039	Callee	atoi		876763	0					
ANR	877040	Identifier	atoi		876763	0					
ANR	877041	ArgumentList	str + 1		876763	1					
ANR	877042	Argument	str + 1		876763	0					
ANR	877043	AdditiveExpression	str + 1		876763	0		+			
ANR	877044	Identifier	str		876763	0					
ANR	877045	PrimaryExpression	1		876763	1					
ANR	877046	ReturnStatement	return size ;	619:1:23330:23341	876763	9	True				
ANR	877047	Identifier	size		876763	0					
ANR	877048	ReturnType	static int		876763	1					
ANR	877049	Identifier	showreg		876763	2					
ANR	877050	ParameterList	"RCore * core , const char * str"		876763	3					
ANR	877051	Parameter	RCore * core	579:19:22261:22271	876763	0	True				
ANR	877052	ParameterType	RCore *		876763	0					
ANR	877053	Identifier	core		876763	1					
ANR	877054	Parameter	const char * str	579:32:22274:22288	876763	1	True				
ANR	877055	ParameterType	const char *		876763	0					
ANR	877056	Identifier	str		876763	1					
ANR	877057	CFGEntryNode	ENTRY		876763		True				
ANR	877058	CFGExitNode	EXIT		876763		True				
ANR	877059	Symbol	atoi		876763						
ANR	877060	Symbol	r_reg_get_value		876763						
ANR	877061	Symbol	role		876763						
ANR	877062	Symbol	& value		876763						
ANR	877063	Symbol	rname		876763						
ANR	877064	Symbol	* core		876763						
ANR	877065	Symbol	strchr		876763						
ANR	877066	Symbol	r_reg_get_value_big		876763						
ANR	877067	Symbol	off		876763						
ANR	877068	Symbol	str		876763						
ANR	877069	Symbol	core		876763						
ANR	877070	Symbol	r_reg_get_name_idx		876763						
ANR	877071	Symbol	r		876763						
ANR	877072	Symbol	size		876763						
ANR	877073	Symbol	r_reg_get_name		876763						
ANR	877074	Symbol	core -> dbg -> reg		876763						
ANR	877075	Symbol	arg		876763						
ANR	877076	Symbol	* r		876763						
ANR	877077	Symbol	* core -> dbg		876763						
ANR	877078	Symbol	value		876763						
ANR	877079	Symbol	* * core		876763						
ANR	877080	Symbol	r -> size		876763						
ANR	877081	Symbol	core -> dbg		876763						
ANR	877082	Symbol	r_reg_get		876763						
ANR	877083	Function	get_graphtrace_node	622:0:23346:23707							
ANR	877084	FunctionDef	"get_graphtrace_node (RGraph * g , Sdb * nodes , struct trace_node * tn)"		877083	0					
ANR	877085	CompoundStatement		622:86:23432:23707	877083	0					
ANR	877086	IdentifierDeclStatement	RGraphNode * gn ;	623:1:23435:23449	877083	0	True				
ANR	877087	IdentifierDecl	* gn		877083	0					
ANR	877088	IdentifierDeclType	RGraphNode *		877083	0					
ANR	877089	Identifier	gn		877083	1					
ANR	877090	IdentifierDeclStatement	char tn_key [ TN_KEY_LEN ] ;	624:1:23452:23475	877083	1	True				
ANR	877091	IdentifierDecl	tn_key [ TN_KEY_LEN ]		877083	0					
ANR	877092	IdentifierDeclType	char [ TN_KEY_LEN ]		877083	0					
ANR	877093	Identifier	tn_key		877083	1					
ANR	877094	Identifier	TN_KEY_LEN		877083	2					
ANR	877095	ExpressionStatement	"snprintf ( tn_key , TN_KEY_LEN , TN_KEY_FMT , tn -> addr )"	626:1:23479:23530	877083	2	True				
ANR	877096	CallExpression	"snprintf ( tn_key , TN_KEY_LEN , TN_KEY_FMT , tn -> addr )"		877083	0					
ANR	877097	Callee	snprintf		877083	0					
ANR	877098	Identifier	snprintf		877083	0					
ANR	877099	ArgumentList	tn_key		877083	1					
ANR	877100	Argument	tn_key		877083	0					
ANR	877101	Identifier	tn_key		877083	0					
ANR	877102	Argument	TN_KEY_LEN		877083	1					
ANR	877103	Identifier	TN_KEY_LEN		877083	0					
ANR	877104	Argument	TN_KEY_FMT		877083	2					
ANR	877105	Identifier	TN_KEY_FMT		877083	0					
ANR	877106	Argument	tn -> addr		877083	3					
ANR	877107	PtrMemberAccess	tn -> addr		877083	0					
ANR	877108	Identifier	tn		877083	0					
ANR	877109	Identifier	addr		877083	1					
ANR	877110	ExpressionStatement	"gn = ( RGraphNode * ) ( size_t ) sdb_num_get ( nodes , tn_key , NULL )"	627:1:23533:23593	877083	3	True				
ANR	877111	AssignmentExpression	"gn = ( RGraphNode * ) ( size_t ) sdb_num_get ( nodes , tn_key , NULL )"		877083	0		=			
ANR	877112	Identifier	gn		877083	0					
ANR	877113	CastExpression	"( RGraphNode * ) ( size_t ) sdb_num_get ( nodes , tn_key , NULL )"		877083	1					
ANR	877114	CastTarget	RGraphNode *		877083	0					
ANR	877115	CastExpression	"( size_t ) sdb_num_get ( nodes , tn_key , NULL )"		877083	1					
ANR	877116	CastTarget	size_t		877083	0					
ANR	877117	CallExpression	"sdb_num_get ( nodes , tn_key , NULL )"		877083	1					
ANR	877118	Callee	sdb_num_get		877083	0					
ANR	877119	Identifier	sdb_num_get		877083	0					
ANR	877120	ArgumentList	nodes		877083	1					
ANR	877121	Argument	nodes		877083	0					
ANR	877122	Identifier	nodes		877083	0					
ANR	877123	Argument	tn_key		877083	1					
ANR	877124	Identifier	tn_key		877083	0					
ANR	877125	Argument	NULL		877083	2					
ANR	877126	Identifier	NULL		877083	0					
ANR	877127	IfStatement	if ( ! gn )		877083	4					
ANR	877128	Condition	! gn	628:5:23600:23602	877083	0	True				
ANR	877129	UnaryOperationExpression	! gn		877083	0					
ANR	877130	UnaryOperator	!		877083	0					
ANR	877131	Identifier	gn		877083	1					
ANR	877132	CompoundStatement		7:10:172:172	877083	1					
ANR	877133	ExpressionStatement	"gn = r_graph_add_node ( g , tn )"	629:2:23609:23638	877083	0	True				
ANR	877134	AssignmentExpression	"gn = r_graph_add_node ( g , tn )"		877083	0		=			
ANR	877135	Identifier	gn		877083	0					
ANR	877136	CallExpression	"r_graph_add_node ( g , tn )"		877083	1					
ANR	877137	Callee	r_graph_add_node		877083	0					
ANR	877138	Identifier	r_graph_add_node		877083	0					
ANR	877139	ArgumentList	g		877083	1					
ANR	877140	Argument	g		877083	0					
ANR	877141	Identifier	g		877083	0					
ANR	877142	Argument	tn		877083	1					
ANR	877143	Identifier	tn		877083	0					
ANR	877144	ExpressionStatement	"sdb_num_set ( nodes , tn_key , ( ut64 ) ( size_t ) gn , 0 )"	630:2:23642:23690	877083	1	True				
ANR	877145	CallExpression	"sdb_num_set ( nodes , tn_key , ( ut64 ) ( size_t ) gn , 0 )"		877083	0					
ANR	877146	Callee	sdb_num_set		877083	0					
ANR	877147	Identifier	sdb_num_set		877083	0					
ANR	877148	ArgumentList	nodes		877083	1					
ANR	877149	Argument	nodes		877083	0					
ANR	877150	Identifier	nodes		877083	0					
ANR	877151	Argument	tn_key		877083	1					
ANR	877152	Identifier	tn_key		877083	0					
ANR	877153	Argument	( ut64 ) ( size_t ) gn		877083	2					
ANR	877154	CastExpression	( ut64 ) ( size_t ) gn		877083	0					
ANR	877155	CastTarget	ut64		877083	0					
ANR	877156	CastExpression	( size_t ) gn		877083	1					
ANR	877157	CastTarget	size_t		877083	0					
ANR	877158	Identifier	gn		877083	1					
ANR	877159	Argument	0		877083	3					
ANR	877160	PrimaryExpression	0		877083	0					
ANR	877161	ReturnStatement	return gn ;	632:1:23696:23705	877083	5	True				
ANR	877162	Identifier	gn		877083	0					
ANR	877163	ReturnType	static RGraphNode *		877083	1					
ANR	877164	Identifier	get_graphtrace_node		877083	2					
ANR	877165	ParameterList	"RGraph * g , Sdb * nodes , struct trace_node * tn"		877083	3					
ANR	877166	Parameter	RGraph * g	622:40:23386:23394	877083	0	True				
ANR	877167	ParameterType	RGraph *		877083	0					
ANR	877168	Identifier	g		877083	1					
ANR	877169	Parameter	Sdb * nodes	622:51:23397:23406	877083	1	True				
ANR	877170	ParameterType	Sdb *		877083	0					
ANR	877171	Identifier	nodes		877083	1					
ANR	877172	Parameter	struct trace_node * tn	622:63:23409:23429	877083	2	True				
ANR	877173	ParameterType	struct trace_node *		877083	0					
ANR	877174	Identifier	tn		877083	1					
ANR	877175	CFGEntryNode	ENTRY		877083		True				
ANR	877176	CFGExitNode	EXIT		877083		True				
ANR	877177	Symbol	sdb_num_get		877083						
ANR	877178	Symbol	nodes		877083						
ANR	877179	Symbol	* tn		877083						
ANR	877180	Symbol	tn -> addr		877083						
ANR	877181	Symbol	NULL		877083						
ANR	877182	Symbol	TN_KEY_LEN		877083						
ANR	877183	Symbol	g		877083						
ANR	877184	Symbol	gn		877083						
ANR	877185	Symbol	tn_key		877083						
ANR	877186	Symbol	tn		877083						
ANR	877187	Symbol	r_graph_add_node		877083						
ANR	877188	Symbol	TN_KEY_FMT		877083						
ANR	877189	Function	dot_trace_create_node	635:0:23710:23945							
ANR	877190	FunctionDef	"dot_trace_create_node (RTreeNode * n , RTreeVisitor * vis)"		877189	0					
ANR	877191	CompoundStatement		635:68:23778:23945	877189	0					
ANR	877192	IdentifierDeclStatement	struct dot_trace_ght * data = ( struct dot_trace_ght * ) vis -> data ;	636:1:23781:23843	877189	0	True				
ANR	877193	IdentifierDecl	* data = ( struct dot_trace_ght * ) vis -> data		877189	0					
ANR	877194	IdentifierDeclType	struct dot_trace_ght *		877189	0					
ANR	877195	Identifier	data		877189	1					
ANR	877196	AssignmentExpression	* data = ( struct dot_trace_ght * ) vis -> data		877189	2		=			
ANR	877197	Identifier	data		877189	0					
ANR	877198	CastExpression	( struct dot_trace_ght * ) vis -> data		877189	1					
ANR	877199	CastTarget	struct dot_trace_ght *		877189	0					
ANR	877200	PtrMemberAccess	vis -> data		877189	1					
ANR	877201	Identifier	vis		877189	0					
ANR	877202	Identifier	data		877189	1					
ANR	877203	IdentifierDeclStatement	struct trace_node * tn = n -> data ;	637:1:23846:23877	877189	1	True				
ANR	877204	IdentifierDecl	* tn = n -> data		877189	0					
ANR	877205	IdentifierDeclType	struct trace_node *		877189	0					
ANR	877206	Identifier	tn		877189	1					
ANR	877207	AssignmentExpression	* tn = n -> data		877189	2		=			
ANR	877208	Identifier	tn		877189	0					
ANR	877209	PtrMemberAccess	n -> data		877189	1					
ANR	877210	Identifier	n		877189	0					
ANR	877211	Identifier	data		877189	1					
ANR	877212	IfStatement	if ( tn )		877189	2					
ANR	877213	Condition	tn	638:5:23884:23885	877189	0	True				
ANR	877214	Identifier	tn		877189	0					
ANR	877215	ExpressionStatement	"get_graphtrace_node ( data -> graph , data -> graphnodes , tn )"	638:9:23888:23943	877189	1	True				
ANR	877216	CallExpression	"get_graphtrace_node ( data -> graph , data -> graphnodes , tn )"		877189	0					
ANR	877217	Callee	get_graphtrace_node		877189	0					
ANR	877218	Identifier	get_graphtrace_node		877189	0					
ANR	877219	ArgumentList	data -> graph		877189	1					
ANR	877220	Argument	data -> graph		877189	0					
ANR	877221	PtrMemberAccess	data -> graph		877189	0					
ANR	877222	Identifier	data		877189	0					
ANR	877223	Identifier	graph		877189	1					
ANR	877224	Argument	data -> graphnodes		877189	1					
ANR	877225	PtrMemberAccess	data -> graphnodes		877189	0					
ANR	877226	Identifier	data		877189	0					
ANR	877227	Identifier	graphnodes		877189	1					
ANR	877228	Argument	tn		877189	2					
ANR	877229	Identifier	tn		877189	0					
ANR	877230	ReturnType	static void		877189	1					
ANR	877231	Identifier	dot_trace_create_node		877189	2					
ANR	877232	ParameterList	"RTreeNode * n , RTreeVisitor * vis"		877189	3					
ANR	877233	Parameter	RTreeNode * n	635:35:23745:23756	877189	0	True				
ANR	877234	ParameterType	RTreeNode *		877189	0					
ANR	877235	Identifier	n		877189	1					
ANR	877236	Parameter	RTreeVisitor * vis	635:49:23759:23775	877189	1	True				
ANR	877237	ParameterType	RTreeVisitor *		877189	0					
ANR	877238	Identifier	vis		877189	1					
ANR	877239	CFGEntryNode	ENTRY		877189		True				
ANR	877240	CFGExitNode	EXIT		877189		True				
ANR	877241	Symbol	vis		877189						
ANR	877242	Symbol	data -> graph		877189						
ANR	877243	Symbol	data -> graphnodes		877189						
ANR	877244	Symbol	n -> data		877189						
ANR	877245	Symbol	data		877189						
ANR	877246	Symbol	* n		877189						
ANR	877247	Symbol	* vis		877189						
ANR	877248	Symbol	tn		877189						
ANR	877249	Symbol	vis -> data		877189						
ANR	877250	Symbol	* data		877189						
ANR	877251	Symbol	n		877189						
ANR	877252	Function	dot_trace_discover_child	641:0:23948:24496							
ANR	877253	FunctionDef	"dot_trace_discover_child (RTreeNode * n , RTreeVisitor * vis)"		877252	0					
ANR	877254	CompoundStatement		641:71:24019:24496	877252	0					
ANR	877255	IdentifierDeclStatement	struct dot_trace_ght * data = ( struct dot_trace_ght * ) vis -> data ;	642:1:24022:24084	877252	0	True				
ANR	877256	IdentifierDecl	* data = ( struct dot_trace_ght * ) vis -> data		877252	0					
ANR	877257	IdentifierDeclType	struct dot_trace_ght *		877252	0					
ANR	877258	Identifier	data		877252	1					
ANR	877259	AssignmentExpression	* data = ( struct dot_trace_ght * ) vis -> data		877252	2		=			
ANR	877260	Identifier	data		877252	0					
ANR	877261	CastExpression	( struct dot_trace_ght * ) vis -> data		877252	1					
ANR	877262	CastTarget	struct dot_trace_ght *		877252	0					
ANR	877263	PtrMemberAccess	vis -> data		877252	1					
ANR	877264	Identifier	vis		877252	0					
ANR	877265	Identifier	data		877252	1					
ANR	877266	IdentifierDeclStatement	RGraph * g = data -> graph ;	643:1:24087:24110	877252	1	True				
ANR	877267	IdentifierDecl	* g = data -> graph		877252	0					
ANR	877268	IdentifierDeclType	RGraph *		877252	0					
ANR	877269	Identifier	g		877252	1					
ANR	877270	AssignmentExpression	* g = data -> graph		877252	2		=			
ANR	877271	Identifier	g		877252	0					
ANR	877272	PtrMemberAccess	data -> graph		877252	1					
ANR	877273	Identifier	data		877252	0					
ANR	877274	Identifier	graph		877252	1					
ANR	877275	IdentifierDeclStatement	Sdb * gnodes = data -> graphnodes ;	644:1:24113:24143	877252	2	True				
ANR	877276	IdentifierDecl	* gnodes = data -> graphnodes		877252	0					
ANR	877277	IdentifierDeclType	Sdb *		877252	0					
ANR	877278	Identifier	gnodes		877252	1					
ANR	877279	AssignmentExpression	* gnodes = data -> graphnodes		877252	2		=			
ANR	877280	Identifier	gnodes		877252	0					
ANR	877281	PtrMemberAccess	data -> graphnodes		877252	1					
ANR	877282	Identifier	data		877252	0					
ANR	877283	Identifier	graphnodes		877252	1					
ANR	877284	IdentifierDeclStatement	RTreeNode * parent = n -> parent ;	645:1:24146:24175	877252	3	True				
ANR	877285	IdentifierDecl	* parent = n -> parent		877252	0					
ANR	877286	IdentifierDeclType	RTreeNode *		877252	0					
ANR	877287	Identifier	parent		877252	1					
ANR	877288	AssignmentExpression	* parent = n -> parent		877252	2		=			
ANR	877289	Identifier	parent		877252	0					
ANR	877290	PtrMemberAccess	n -> parent		877252	1					
ANR	877291	Identifier	n		877252	0					
ANR	877292	Identifier	parent		877252	1					
ANR	877293	IdentifierDeclStatement	struct trace_node * tn = n -> data ;	646:1:24178:24209	877252	4	True				
ANR	877294	IdentifierDecl	* tn = n -> data		877252	0					
ANR	877295	IdentifierDeclType	struct trace_node *		877252	0					
ANR	877296	Identifier	tn		877252	1					
ANR	877297	AssignmentExpression	* tn = n -> data		877252	2		=			
ANR	877298	Identifier	tn		877252	0					
ANR	877299	PtrMemberAccess	n -> data		877252	1					
ANR	877300	Identifier	n		877252	0					
ANR	877301	Identifier	data		877252	1					
ANR	877302	IdentifierDeclStatement	struct trace_node * tn_parent = parent -> data ;	647:1:24212:24255	877252	5	True				
ANR	877303	IdentifierDecl	* tn_parent = parent -> data		877252	0					
ANR	877304	IdentifierDeclType	struct trace_node *		877252	0					
ANR	877305	Identifier	tn_parent		877252	1					
ANR	877306	AssignmentExpression	* tn_parent = parent -> data		877252	2		=			
ANR	877307	Identifier	tn_parent		877252	0					
ANR	877308	PtrMemberAccess	parent -> data		877252	1					
ANR	877309	Identifier	parent		877252	0					
ANR	877310	Identifier	data		877252	1					
ANR	877311	IfStatement	if ( tn && tn_parent )		877252	6					
ANR	877312	Condition	tn && tn_parent	649:5:24263:24277	877252	0	True				
ANR	877313	AndExpression	tn && tn_parent		877252	0		&&			
ANR	877314	Identifier	tn		877252	0					
ANR	877315	Identifier	tn_parent		877252	1					
ANR	877316	CompoundStatement		11:2:320:386	877252	1					
ANR	877317	IdentifierDeclStatement	"RGraphNode * gn = get_graphtrace_node ( g , gnodes , tn ) ;"	650:2:24284:24336	877252	0	True				
ANR	877318	IdentifierDecl	"* gn = get_graphtrace_node ( g , gnodes , tn )"		877252	0					
ANR	877319	IdentifierDeclType	RGraphNode *		877252	0					
ANR	877320	Identifier	gn		877252	1					
ANR	877321	AssignmentExpression	"* gn = get_graphtrace_node ( g , gnodes , tn )"		877252	2		=			
ANR	877322	Identifier	gn		877252	0					
ANR	877323	CallExpression	"get_graphtrace_node ( g , gnodes , tn )"		877252	1					
ANR	877324	Callee	get_graphtrace_node		877252	0					
ANR	877325	Identifier	get_graphtrace_node		877252	0					
ANR	877326	ArgumentList	g		877252	1					
ANR	877327	Argument	g		877252	0					
ANR	877328	Identifier	g		877252	0					
ANR	877329	Argument	gnodes		877252	1					
ANR	877330	Identifier	gnodes		877252	0					
ANR	877331	Argument	tn		877252	2					
ANR	877332	Identifier	tn		877252	0					
ANR	877333	IdentifierDeclStatement	"RGraphNode * gn_parent = get_graphtrace_node ( g , gnodes , tn_parent ) ;"	651:2:24340:24406	877252	1	True				
ANR	877334	IdentifierDecl	"* gn_parent = get_graphtrace_node ( g , gnodes , tn_parent )"		877252	0					
ANR	877335	IdentifierDeclType	RGraphNode *		877252	0					
ANR	877336	Identifier	gn_parent		877252	1					
ANR	877337	AssignmentExpression	"* gn_parent = get_graphtrace_node ( g , gnodes , tn_parent )"		877252	2		=			
ANR	877338	Identifier	gn_parent		877252	0					
ANR	877339	CallExpression	"get_graphtrace_node ( g , gnodes , tn_parent )"		877252	1					
ANR	877340	Callee	get_graphtrace_node		877252	0					
ANR	877341	Identifier	get_graphtrace_node		877252	0					
ANR	877342	ArgumentList	g		877252	1					
ANR	877343	Argument	g		877252	0					
ANR	877344	Identifier	g		877252	0					
ANR	877345	Argument	gnodes		877252	1					
ANR	877346	Identifier	gnodes		877252	0					
ANR	877347	Argument	tn_parent		877252	2					
ANR	877348	Identifier	tn_parent		877252	0					
ANR	877349	IfStatement	"if ( ! r_graph_adjacent ( g , gn_parent , gn ) )"		877252	2					
ANR	877350	Condition	"! r_graph_adjacent ( g , gn_parent , gn )"	653:6:24415:24450	877252	0	True				
ANR	877351	UnaryOperationExpression	"! r_graph_adjacent ( g , gn_parent , gn )"		877252	0					
ANR	877352	UnaryOperator	!		877252	0					
ANR	877353	CallExpression	"r_graph_adjacent ( g , gn_parent , gn )"		877252	1					
ANR	877354	Callee	r_graph_adjacent		877252	0					
ANR	877355	Identifier	r_graph_adjacent		877252	0					
ANR	877356	ArgumentList	g		877252	1					
ANR	877357	Argument	g		877252	0					
ANR	877358	Identifier	g		877252	0					
ANR	877359	Argument	gn_parent		877252	1					
ANR	877360	Identifier	gn_parent		877252	0					
ANR	877361	Argument	gn		877252	2					
ANR	877362	Identifier	gn		877252	0					
ANR	877363	ExpressionStatement	"r_graph_add_edge ( g , gn_parent , gn )"	654:3:24456:24491	877252	1	True				
ANR	877364	CallExpression	"r_graph_add_edge ( g , gn_parent , gn )"		877252	0					
ANR	877365	Callee	r_graph_add_edge		877252	0					
ANR	877366	Identifier	r_graph_add_edge		877252	0					
ANR	877367	ArgumentList	g		877252	1					
ANR	877368	Argument	g		877252	0					
ANR	877369	Identifier	g		877252	0					
ANR	877370	Argument	gn_parent		877252	1					
ANR	877371	Identifier	gn_parent		877252	0					
ANR	877372	Argument	gn		877252	2					
ANR	877373	Identifier	gn		877252	0					
ANR	877374	ReturnType	static void		877252	1					
ANR	877375	Identifier	dot_trace_discover_child		877252	2					
ANR	877376	ParameterList	"RTreeNode * n , RTreeVisitor * vis"		877252	3					
ANR	877377	Parameter	RTreeNode * n	641:38:23986:23997	877252	0	True				
ANR	877378	ParameterType	RTreeNode *		877252	0					
ANR	877379	Identifier	n		877252	1					
ANR	877380	Parameter	RTreeVisitor * vis	641:52:24000:24016	877252	1	True				
ANR	877381	ParameterType	RTreeVisitor *		877252	0					
ANR	877382	Identifier	vis		877252	1					
ANR	877383	CFGEntryNode	ENTRY		877252		True				
ANR	877384	CFGExitNode	EXIT		877252		True				
ANR	877385	Symbol	vis		877252						
ANR	877386	Symbol	data -> graph		877252						
ANR	877387	Symbol	parent		877252						
ANR	877388	Symbol	data -> graphnodes		877252						
ANR	877389	Symbol	n -> data		877252						
ANR	877390	Symbol	* parent		877252						
ANR	877391	Symbol	data		877252						
ANR	877392	Symbol	gn_parent		877252						
ANR	877393	Symbol	g		877252						
ANR	877394	Symbol	gn		877252						
ANR	877395	Symbol	* vis		877252						
ANR	877396	Symbol	get_graphtrace_node		877252						
ANR	877397	Symbol	n		877252						
ANR	877398	Symbol	gnodes		877252						
ANR	877399	Symbol	tn_parent		877252						
ANR	877400	Symbol	n -> parent		877252						
ANR	877401	Symbol	parent -> data		877252						
ANR	877402	Symbol	r_graph_adjacent		877252						
ANR	877403	Symbol	* n		877252						
ANR	877404	Symbol	tn		877252						
ANR	877405	Symbol	vis -> data		877252						
ANR	877406	Symbol	* data		877252						
ANR	877407	Function	dot_trace_traverse	658:0:24499:26372							
ANR	877408	FunctionDef	"dot_trace_traverse (RCore * core , RTree * t , int fmt)"		877407	0					
ANR	877409	CompoundStatement		658:63:24562:26372	877407	0					
ANR	877410	IdentifierDeclStatement	"const char * gfont = r_config_get ( core -> config , ""graph.font"" ) ;"	659:1:24565:24626	877407	0	True				
ANR	877411	IdentifierDecl	"* gfont = r_config_get ( core -> config , ""graph.font"" )"		877407	0					
ANR	877412	IdentifierDeclType	const char *		877407	0					
ANR	877413	Identifier	gfont		877407	1					
ANR	877414	AssignmentExpression	"* gfont = r_config_get ( core -> config , ""graph.font"" )"		877407	2		=			
ANR	877415	Identifier	gfont		877407	0					
ANR	877416	CallExpression	"r_config_get ( core -> config , ""graph.font"" )"		877407	1					
ANR	877417	Callee	r_config_get		877407	0					
ANR	877418	Identifier	r_config_get		877407	0					
ANR	877419	ArgumentList	core -> config		877407	1					
ANR	877420	Argument	core -> config		877407	0					
ANR	877421	PtrMemberAccess	core -> config		877407	0					
ANR	877422	Identifier	core		877407	0					
ANR	877423	Identifier	config		877407	1					
ANR	877424	Argument	"""graph.font"""		877407	1					
ANR	877425	PrimaryExpression	"""graph.font"""		877407	0					
ANR	877426	IdentifierDeclStatement	struct dot_trace_ght aux_data ;	660:1:24629:24658	877407	1	True				
ANR	877427	IdentifierDecl	aux_data		877407	0					
ANR	877428	IdentifierDeclType	struct dot_trace_ght		877407	0					
ANR	877429	Identifier	aux_data		877407	1					
ANR	877430	IdentifierDeclStatement	RTreeVisitor vis = { 0 } ;	661:1:24661:24685	877407	2	True				
ANR	877431	IdentifierDecl	vis = { 0 }		877407	0					
ANR	877432	IdentifierDeclType	RTreeVisitor		877407	0					
ANR	877433	Identifier	vis		877407	1					
ANR	877434	AssignmentExpression	vis = { 0 }		877407	2		=			
ANR	877435	Identifier	vis		877407	0					
ANR	877436	InitializerList	0		877407	1					
ANR	877437	PrimaryExpression	0		877407	0					
ANR	877438	IdentifierDeclStatement	const RList * nodes ;	662:1:24688:24706	877407	3	True				
ANR	877439	IdentifierDecl	* nodes		877407	0					
ANR	877440	IdentifierDeclType	const RList *		877407	0					
ANR	877441	Identifier	nodes		877407	1					
ANR	877442	IdentifierDeclStatement	RListIter * iter ;	663:1:24709:24724	877407	4	True				
ANR	877443	IdentifierDecl	* iter		877407	0					
ANR	877444	IdentifierDeclType	RListIter *		877407	0					
ANR	877445	Identifier	iter		877407	1					
ANR	877446	IdentifierDeclStatement	RGraphNode * n ;	664:1:24727:24740	877407	5	True				
ANR	877447	IdentifierDecl	* n		877407	0					
ANR	877448	IdentifierDeclType	RGraphNode *		877407	0					
ANR	877449	Identifier	n		877407	1					
ANR	877450	IfStatement	if ( fmt == 'i' )		877407	6					
ANR	877451	Condition	fmt == 'i'	666:5:24748:24757	877407	0	True				
ANR	877452	EqualityExpression	fmt == 'i'		877407	0		==			
ANR	877453	Identifier	fmt		877407	0					
ANR	877454	PrimaryExpression	'i'		877407	1					
ANR	877455	CompoundStatement		9:17:197:197	877407	1					
ANR	877456	ExpressionStatement	"r_core_cmd0 ( core , ""ag-;.dtg*;aggi"" )"	667:2:24764:24800	877407	0	True				
ANR	877457	CallExpression	"r_core_cmd0 ( core , ""ag-;.dtg*;aggi"" )"		877407	0					
ANR	877458	Callee	r_core_cmd0		877407	0					
ANR	877459	Identifier	r_core_cmd0		877407	0					
ANR	877460	ArgumentList	core		877407	1					
ANR	877461	Argument	core		877407	0					
ANR	877462	Identifier	core		877407	0					
ANR	877463	Argument	"""ag-;.dtg*;aggi"""		877407	1					
ANR	877464	PrimaryExpression	"""ag-;.dtg*;aggi"""		877407	0					
ANR	877465	ReturnStatement	return ;	668:2:24804:24810	877407	1	True				
ANR	877466	ExpressionStatement	aux_data . graph = r_graph_new ( )	670:1:24816:24847	877407	7	True				
ANR	877467	AssignmentExpression	aux_data . graph = r_graph_new ( )		877407	0		=			
ANR	877468	MemberAccess	aux_data . graph		877407	0					
ANR	877469	Identifier	aux_data		877407	0					
ANR	877470	Identifier	graph		877407	1					
ANR	877471	CallExpression	r_graph_new ( )		877407	1					
ANR	877472	Callee	r_graph_new		877407	0					
ANR	877473	Identifier	r_graph_new		877407	0					
ANR	877474	ArgumentList			877407	1					
ANR	877475	ExpressionStatement	aux_data . graphnodes = sdb_new0 ( )	671:1:24850:24883	877407	8	True				
ANR	877476	AssignmentExpression	aux_data . graphnodes = sdb_new0 ( )		877407	0		=			
ANR	877477	MemberAccess	aux_data . graphnodes		877407	0					
ANR	877478	Identifier	aux_data		877407	0					
ANR	877479	Identifier	graphnodes		877407	1					
ANR	877480	CallExpression	sdb_new0 ( )		877407	1					
ANR	877481	Callee	sdb_new0		877407	0					
ANR	877482	Identifier	sdb_new0		877407	0					
ANR	877483	ArgumentList			877407	1					
ANR	877484	ExpressionStatement	vis . data = & aux_data	674:1:24937:24957	877407	9	True				
ANR	877485	AssignmentExpression	vis . data = & aux_data		877407	0		=			
ANR	877486	MemberAccess	vis . data		877407	0					
ANR	877487	Identifier	vis		877407	0					
ANR	877488	Identifier	data		877407	1					
ANR	877489	UnaryOperationExpression	& aux_data		877407	1					
ANR	877490	UnaryOperator	&		877407	0					
ANR	877491	Identifier	aux_data		877407	1					
ANR	877492	ExpressionStatement	vis . pre_visit = ( RTreeNodeVisitCb ) dot_trace_create_node	675:1:24960:25015	877407	10	True				
ANR	877493	AssignmentExpression	vis . pre_visit = ( RTreeNodeVisitCb ) dot_trace_create_node		877407	0		=			
ANR	877494	MemberAccess	vis . pre_visit		877407	0					
ANR	877495	Identifier	vis		877407	0					
ANR	877496	Identifier	pre_visit		877407	1					
ANR	877497	CastExpression	( RTreeNodeVisitCb ) dot_trace_create_node		877407	1					
ANR	877498	CastTarget	RTreeNodeVisitCb		877407	0					
ANR	877499	Identifier	dot_trace_create_node		877407	1					
ANR	877500	ExpressionStatement	vis . discover_child = ( RTreeNodeVisitCb ) dot_trace_discover_child	676:1:25018:25081	877407	11	True				
ANR	877501	AssignmentExpression	vis . discover_child = ( RTreeNodeVisitCb ) dot_trace_discover_child		877407	0		=			
ANR	877502	MemberAccess	vis . discover_child		877407	0					
ANR	877503	Identifier	vis		877407	0					
ANR	877504	Identifier	discover_child		877407	1					
ANR	877505	CastExpression	( RTreeNodeVisitCb ) dot_trace_discover_child		877407	1					
ANR	877506	CastTarget	RTreeNodeVisitCb		877407	0					
ANR	877507	Identifier	dot_trace_discover_child		877407	1					
ANR	877508	ExpressionStatement	"r_tree_bfs ( t , & vis )"	677:1:25084:25104	877407	12	True				
ANR	877509	CallExpression	"r_tree_bfs ( t , & vis )"		877407	0					
ANR	877510	Callee	r_tree_bfs		877407	0					
ANR	877511	Identifier	r_tree_bfs		877407	0					
ANR	877512	ArgumentList	t		877407	1					
ANR	877513	Argument	t		877407	0					
ANR	877514	Identifier	t		877407	0					
ANR	877515	Argument	& vis		877407	1					
ANR	877516	UnaryOperationExpression	& vis		877407	0					
ANR	877517	UnaryOperator	&		877407	0					
ANR	877518	Identifier	vis		877407	1					
ANR	877519	ExpressionStatement	nodes = r_graph_get_nodes ( aux_data . graph )	680:1:25160:25202	877407	13	True				
ANR	877520	AssignmentExpression	nodes = r_graph_get_nodes ( aux_data . graph )		877407	0		=			
ANR	877521	Identifier	nodes		877407	0					
ANR	877522	CallExpression	r_graph_get_nodes ( aux_data . graph )		877407	1					
ANR	877523	Callee	r_graph_get_nodes		877407	0					
ANR	877524	Identifier	r_graph_get_nodes		877407	0					
ANR	877525	ArgumentList	aux_data . graph		877407	1					
ANR	877526	Argument	aux_data . graph		877407	0					
ANR	877527	MemberAccess	aux_data . graph		877407	0					
ANR	877528	Identifier	aux_data		877407	0					
ANR	877529	Identifier	graph		877407	1					
ANR	877530	IfStatement	if ( fmt == 0 )		877407	14					
ANR	877531	Condition	fmt == 0	681:5:25209:25216	877407	0	True				
ANR	877532	EqualityExpression	fmt == 0		877407	0		==			
ANR	877533	Identifier	fmt		877407	0					
ANR	877534	PrimaryExpression	0		877407	1					
ANR	877535	CompoundStatement		24:15:656:656	877407	1					
ANR	877536	Statement	r_cons_printf	682:2:25223:25235	877407	0	True				
ANR	877537	Statement	(	682:16:25237:25237	877407	1	True				
ANR	877538	Statement	"""digraph code {\\n"""	682:17:25238:25255	877407	2	True				
ANR	877539	Statement	"""graph [bgcolor=white];\\n"""	683:4:25261:25286	877407	3	True				
ANR	877540	Statement	"""    node [color=lightgray, style=filled"""	684:4:25292:25332	877407	4	True				
ANR	877541	Statement	""" shape=box fontname=\\""%s\\"" fontsize=\\""8\\""];\\n"""	685:4:25338:25384	877407	5	True				
ANR	877542	Statement	","	685:51:25385:25385	877407	6	True				
ANR	877543	Statement	gfont	685:53:25387:25391	877407	7	True				
ANR	877544	Statement	)	685:58:25392:25392	877407	8	True				
ANR	877545	ExpressionStatement		685:59:25393:25393	877407	9	True				
ANR	877546	Statement	r_list_foreach	687:1:25399:25412	877407	15	True				
ANR	877547	Statement	(	687:16:25414:25414	877407	16	True				
ANR	877548	Statement	nodes	687:17:25415:25419	877407	17	True				
ANR	877549	Statement	","	687:22:25420:25420	877407	18	True				
ANR	877550	Statement	iter	687:24:25422:25425	877407	19	True				
ANR	877551	Statement	","	687:28:25426:25426	877407	20	True				
ANR	877552	Statement	n	687:30:25428:25428	877407	21	True				
ANR	877553	Statement	)	687:31:25429:25429	877407	22	True				
ANR	877554	CompoundStatement		34:2:1019:1032	877407	23					
ANR	877555	IdentifierDeclStatement	struct trace_node * tn = ( struct trace_node * ) n -> data ;	688:2:25435:25487	877407	0	True				
ANR	877556	IdentifierDecl	* tn = ( struct trace_node * ) n -> data		877407	0					
ANR	877557	IdentifierDeclType	struct trace_node *		877407	0					
ANR	877558	Identifier	tn		877407	1					
ANR	877559	AssignmentExpression	* tn = ( struct trace_node * ) n -> data		877407	2		=			
ANR	877560	Identifier	tn		877407	0					
ANR	877561	CastExpression	( struct trace_node * ) n -> data		877407	1					
ANR	877562	CastTarget	struct trace_node *		877407	0					
ANR	877563	PtrMemberAccess	n -> data		877407	1					
ANR	877564	Identifier	n		877407	0					
ANR	877565	Identifier	data		877407	1					
ANR	877566	IdentifierDeclStatement	"const RList * neighbours = r_graph_get_neighbours ( aux_data . graph , n ) ;"	689:2:25491:25559	877407	1	True				
ANR	877567	IdentifierDecl	"* neighbours = r_graph_get_neighbours ( aux_data . graph , n )"		877407	0					
ANR	877568	IdentifierDeclType	const RList *		877407	0					
ANR	877569	Identifier	neighbours		877407	1					
ANR	877570	AssignmentExpression	"* neighbours = r_graph_get_neighbours ( aux_data . graph , n )"		877407	2		=			
ANR	877571	Identifier	neighbours		877407	0					
ANR	877572	CallExpression	"r_graph_get_neighbours ( aux_data . graph , n )"		877407	1					
ANR	877573	Callee	r_graph_get_neighbours		877407	0					
ANR	877574	Identifier	r_graph_get_neighbours		877407	0					
ANR	877575	ArgumentList	aux_data . graph		877407	1					
ANR	877576	Argument	aux_data . graph		877407	0					
ANR	877577	MemberAccess	aux_data . graph		877407	0					
ANR	877578	Identifier	aux_data		877407	0					
ANR	877579	Identifier	graph		877407	1					
ANR	877580	Argument	n		877407	1					
ANR	877581	Identifier	n		877407	0					
ANR	877582	IdentifierDeclStatement	RListIter * it_n ;	690:2:25563:25578	877407	2	True				
ANR	877583	IdentifierDecl	* it_n		877407	0					
ANR	877584	IdentifierDeclType	RListIter *		877407	0					
ANR	877585	Identifier	it_n		877407	1					
ANR	877586	IdentifierDeclStatement	RGraphNode * w ;	691:2:25582:25595	877407	3	True				
ANR	877587	IdentifierDecl	* w		877407	0					
ANR	877588	IdentifierDeclType	RGraphNode *		877407	0					
ANR	877589	Identifier	w		877407	1					
ANR	877590	IfStatement	if ( ! fmt && tn )		877407	4					
ANR	877591	Condition	! fmt && tn	693:6:25604:25613	877407	0	True				
ANR	877592	AndExpression	! fmt && tn		877407	0		&&			
ANR	877593	UnaryOperationExpression	! fmt		877407	0					
ANR	877594	UnaryOperator	!		877407	0					
ANR	877595	Identifier	fmt		877407	1					
ANR	877596	Identifier	tn		877407	1					
ANR	877597	CompoundStatement		36:18:1053:1053	877407	1					
ANR	877598	Statement	r_cons_printf	694:3:25621:25633	877407	0	True				
ANR	877599	Statement	(	694:17:25635:25635	877407	1	True				
ANR	877600	Statement	"""\\""0x%08"""	694:18:25636:25644	877407	2	True				
ANR	877601	Statement	PFMT64x	694:27:25645:25651	877407	3	True				
ANR	877602	Statement	"""\\"" [URL=\\""0x%08"""	694:34:25652:25668	877407	4	True				
ANR	877603	Statement	PFMT64x	694:51:25669:25675	877407	5	True				
ANR	877604	Statement	"""\\"" color=\\""lightgray\\"" label=\\""0x%08"""	695:5:25682:25719	877407	6	True				
ANR	877605	Statement	PFMT64x	695:43:25720:25726	877407	7	True				
ANR	877606	Statement	""" (%d)\\""]\\n"""	696:5:25733:25744	877407	8	True				
ANR	877607	Statement	","	696:17:25745:25745	877407	9	True				
ANR	877608	Statement	tn	696:19:25747:25748	877407	10	True				
ANR	877609	Statement	->	696:21:25749:25750	877407	11	True				
ANR	877610	Statement	addr	696:23:25751:25754	877407	12	True				
ANR	877611	Statement	","	696:27:25755:25755	877407	13	True				
ANR	877612	Statement	tn	696:29:25757:25758	877407	14	True				
ANR	877613	Statement	->	696:31:25759:25760	877407	15	True				
ANR	877614	Statement	addr	696:33:25761:25764	877407	16	True				
ANR	877615	Statement	","	696:37:25765:25765	877407	17	True				
ANR	877616	Statement	tn	696:39:25767:25768	877407	18	True				
ANR	877617	Statement	->	696:41:25769:25770	877407	19	True				
ANR	877618	Statement	addr	696:43:25771:25774	877407	20	True				
ANR	877619	Statement	","	696:47:25775:25775	877407	21	True				
ANR	877620	Statement	tn	696:49:25777:25778	877407	22	True				
ANR	877621	Statement	->	696:51:25779:25780	877407	23	True				
ANR	877622	Statement	refs	696:53:25781:25784	877407	24	True				
ANR	877623	Statement	)	696:57:25785:25785	877407	25	True				
ANR	877624	ExpressionStatement		696:58:25786:25786	877407	26	True				
ANR	877625	Statement	r_list_foreach	698:2:25794:25807	877407	5	True				
ANR	877626	Statement	(	698:17:25809:25809	877407	6	True				
ANR	877627	Statement	neighbours	698:18:25810:25819	877407	7	True				
ANR	877628	Statement	","	698:28:25820:25820	877407	8	True				
ANR	877629	Statement	it_n	698:30:25822:25825	877407	9	True				
ANR	877630	Statement	","	698:34:25826:25826	877407	10	True				
ANR	877631	Statement	w	698:36:25828:25828	877407	11	True				
ANR	877632	Statement	)	698:37:25829:25829	877407	12	True				
ANR	877633	CompoundStatement		42:3:1273:1325	877407	13					
ANR	877634	IdentifierDeclStatement	struct trace_node * tv = ( struct trace_node * ) w -> data ;	699:3:25836:25888	877407	0	True				
ANR	877635	IdentifierDecl	* tv = ( struct trace_node * ) w -> data		877407	0					
ANR	877636	IdentifierDeclType	struct trace_node *		877407	0					
ANR	877637	Identifier	tv		877407	1					
ANR	877638	AssignmentExpression	* tv = ( struct trace_node * ) w -> data		877407	2		=			
ANR	877639	Identifier	tv		877407	0					
ANR	877640	CastExpression	( struct trace_node * ) w -> data		877407	1					
ANR	877641	CastTarget	struct trace_node *		877407	0					
ANR	877642	PtrMemberAccess	w -> data		877407	1					
ANR	877643	Identifier	w		877407	0					
ANR	877644	Identifier	data		877407	1					
ANR	877645	IfStatement	if ( tv && tn )		877407	1					
ANR	877646	Condition	tv && tn	701:7:25898:25905	877407	0	True				
ANR	877647	AndExpression	tv && tn		877407	0		&&			
ANR	877648	Identifier	tv		877407	0					
ANR	877649	Identifier	tn		877407	1					
ANR	877650	CompoundStatement		44:17:1345:1345	877407	1					
ANR	877651	IfStatement	if ( fmt )		877407	0					
ANR	877652	Condition	fmt	702:8:25918:25920	877407	0	True				
ANR	877653	Identifier	fmt		877407	0					
ANR	877654	CompoundStatement		45:13:1360:1360	877407	1					
ANR	877655	Statement	r_cons_printf	703:5:25930:25942	877407	0	True				
ANR	877656	Statement	(	703:19:25944:25944	877407	1	True				
ANR	877657	Statement	"""agn 0x%08"""	703:20:25945:25955	877407	2	True				
ANR	877658	Statement	PFMT64x	703:31:25956:25962	877407	3	True				
ANR	877659	Statement	"""\\n"""	703:38:25963:25966	877407	4	True				
ANR	877660	Statement	","	703:42:25967:25967	877407	5	True				
ANR	877661	Statement	tn	703:44:25969:25970	877407	6	True				
ANR	877662	Statement	->	703:46:25971:25972	877407	7	True				
ANR	877663	Statement	addr	703:48:25973:25976	877407	8	True				
ANR	877664	Statement	)	703:52:25977:25977	877407	9	True				
ANR	877665	ExpressionStatement		703:53:25978:25978	877407	10	True				
ANR	877666	Statement	r_cons_printf	704:5:25985:25997	877407	11	True				
ANR	877667	Statement	(	704:19:25999:25999	877407	12	True				
ANR	877668	Statement	"""agn 0x%08"""	704:20:26000:26010	877407	13	True				
ANR	877669	Statement	PFMT64x	704:31:26011:26017	877407	14	True				
ANR	877670	Statement	"""\\n"""	704:38:26018:26021	877407	15	True				
ANR	877671	Statement	","	704:42:26022:26022	877407	16	True				
ANR	877672	Statement	tv	704:44:26024:26025	877407	17	True				
ANR	877673	Statement	->	704:46:26026:26027	877407	18	True				
ANR	877674	Statement	addr	704:48:26028:26031	877407	19	True				
ANR	877675	Statement	)	704:52:26032:26032	877407	20	True				
ANR	877676	ExpressionStatement		704:53:26033:26033	877407	21	True				
ANR	877677	Statement	r_cons_printf	705:5:26040:26052	877407	22	True				
ANR	877678	Statement	(	705:19:26054:26054	877407	23	True				
ANR	877679	Statement	"""age 0x%08"""	705:20:26055:26065	877407	24	True				
ANR	877680	Statement	PFMT64x	705:31:26066:26072	877407	25	True				
ANR	877681	Statement	""" 0x%08"""	705:38:26073:26080	877407	26	True				
ANR	877682	Statement	PFMT64x	705:46:26081:26087	877407	27	True				
ANR	877683	Statement	"""\\n"""	705:53:26088:26091	877407	28	True				
ANR	877684	Statement	","	705:57:26092:26092	877407	29	True				
ANR	877685	Statement	tn	706:7:26101:26102	877407	30	True				
ANR	877686	Statement	->	706:9:26103:26104	877407	31	True				
ANR	877687	Statement	addr	706:11:26105:26108	877407	32	True				
ANR	877688	Statement	","	706:15:26109:26109	877407	33	True				
ANR	877689	Statement	tv	706:17:26111:26112	877407	34	True				
ANR	877690	Statement	->	706:19:26113:26114	877407	35	True				
ANR	877691	Statement	addr	706:21:26115:26118	877407	36	True				
ANR	877692	Statement	)	706:25:26119:26119	877407	37	True				
ANR	877693	ExpressionStatement		706:26:26120:26120	877407	38	True				
ANR	877694	ElseStatement	else		877407	0					
ANR	877695	CompoundStatement		50:11:1570:1570	877407	0					
ANR	877696	Statement	r_cons_printf	708:5:26140:26152	877407	0	True				
ANR	877697	Statement	(	708:19:26154:26154	877407	1	True				
ANR	877698	Statement	"""\\""0x%08"""	708:20:26155:26163	877407	2	True				
ANR	877699	Statement	PFMT64x	708:29:26164:26170	877407	3	True				
ANR	877700	Statement	"""\\"" -> \\""0x%08"""	708:36:26171:26185	877407	4	True				
ANR	877701	Statement	PFMT64x	708:51:26186:26192	877407	5	True				
ANR	877702	Statement	"""\\"" [color=\\""red\\""];\\n"""	709:7:26201:26223	877407	6	True				
ANR	877703	Statement	","	709:30:26224:26224	877407	7	True				
ANR	877704	Statement	tn	709:32:26226:26227	877407	8	True				
ANR	877705	Statement	->	709:34:26228:26229	877407	9	True				
ANR	877706	Statement	addr	709:36:26230:26233	877407	10	True				
ANR	877707	Statement	","	709:40:26234:26234	877407	11	True				
ANR	877708	Statement	tv	709:42:26236:26237	877407	12	True				
ANR	877709	Statement	->	709:44:26238:26239	877407	13	True				
ANR	877710	Statement	addr	709:46:26240:26243	877407	14	True				
ANR	877711	Statement	)	709:50:26244:26244	877407	15	True				
ANR	877712	ExpressionStatement		709:51:26245:26245	877407	16	True				
ANR	877713	IfStatement	if ( ! fmt )		877407	24					
ANR	877714	Condition	! fmt	714:5:26270:26273	877407	0	True				
ANR	877715	UnaryOperationExpression	! fmt		877407	0					
ANR	877716	UnaryOperator	!		877407	0					
ANR	877717	Identifier	fmt		877407	1					
ANR	877718	CompoundStatement		57:11:1713:1713	877407	1					
ANR	877719	ExpressionStatement	"r_cons_printf ( ""}\\n"" )"	715:2:26280:26301	877407	0	True				
ANR	877720	CallExpression	"r_cons_printf ( ""}\\n"" )"		877407	0					
ANR	877721	Callee	r_cons_printf		877407	0					
ANR	877722	Identifier	r_cons_printf		877407	0					
ANR	877723	ArgumentList	"""}\\n"""		877407	1					
ANR	877724	Argument	"""}\\n"""		877407	0					
ANR	877725	PrimaryExpression	"""}\\n"""		877407	0					
ANR	877726	ExpressionStatement	r_graph_free ( aux_data . graph )	718:1:26308:26337	877407	25	True				
ANR	877727	CallExpression	r_graph_free ( aux_data . graph )		877407	0					
ANR	877728	Callee	r_graph_free		877407	0					
ANR	877729	Identifier	r_graph_free		877407	0					
ANR	877730	ArgumentList	aux_data . graph		877407	1					
ANR	877731	Argument	aux_data . graph		877407	0					
ANR	877732	MemberAccess	aux_data . graph		877407	0					
ANR	877733	Identifier	aux_data		877407	0					
ANR	877734	Identifier	graph		877407	1					
ANR	877735	ExpressionStatement	sdb_free ( aux_data . graphnodes )	719:1:26340:26370	877407	26	True				
ANR	877736	CallExpression	sdb_free ( aux_data . graphnodes )		877407	0					
ANR	877737	Callee	sdb_free		877407	0					
ANR	877738	Identifier	sdb_free		877407	0					
ANR	877739	ArgumentList	aux_data . graphnodes		877407	1					
ANR	877740	Argument	aux_data . graphnodes		877407	0					
ANR	877741	MemberAccess	aux_data . graphnodes		877407	0					
ANR	877742	Identifier	aux_data		877407	0					
ANR	877743	Identifier	graphnodes		877407	1					
ANR	877744	ReturnType	static void		877407	1					
ANR	877745	Identifier	dot_trace_traverse		877407	2					
ANR	877746	ParameterList	"RCore * core , RTree * t , int fmt"		877407	3					
ANR	877747	Parameter	RCore * core	658:31:24530:24540	877407	0	True				
ANR	877748	ParameterType	RCore *		877407	0					
ANR	877749	Identifier	core		877407	1					
ANR	877750	Parameter	RTree * t	658:44:24543:24550	877407	1	True				
ANR	877751	ParameterType	RTree *		877407	0					
ANR	877752	Identifier	t		877407	1					
ANR	877753	Parameter	int fmt	658:54:24553:24559	877407	2	True				
ANR	877754	ParameterType	int		877407	0					
ANR	877755	Identifier	fmt		877407	1					
ANR	877756	CFGEntryNode	ENTRY		877407		True				
ANR	877757	CFGExitNode	EXIT		877407		True				
ANR	877758	Symbol	& vis		877407						
ANR	877759	Symbol	* w		877407						
ANR	877760	Symbol	tv		877407						
ANR	877761	Symbol	n -> data		877407						
ANR	877762	Symbol	r_graph_get_neighbours		877407						
ANR	877763	Symbol	r_config_get		877407						
ANR	877764	Symbol	* core		877407						
ANR	877765	Symbol	r_graph_new		877407						
ANR	877766	Symbol	dot_trace_discover_child		877407						
ANR	877767	Symbol	fmt		877407						
ANR	877768	Symbol	& aux_data		877407						
ANR	877769	Symbol	vis . data		877407						
ANR	877770	Symbol	core -> config		877407						
ANR	877771	Symbol	aux_data . graphnodes		877407						
ANR	877772	Symbol	vis		877407						
ANR	877773	Symbol	sdb_new0		877407						
ANR	877774	Symbol	r_graph_get_nodes		877407						
ANR	877775	Symbol	aux_data . graph		877407						
ANR	877776	Symbol	iter		877407						
ANR	877777	Symbol	neighbours		877407						
ANR	877778	Symbol	it_n		877407						
ANR	877779	Symbol	gfont		877407						
ANR	877780	Symbol	n		877407						
ANR	877781	Symbol	core		877407						
ANR	877782	Symbol	nodes		877407						
ANR	877783	Symbol	t		877407						
ANR	877784	Symbol	vis . pre_visit		877407						
ANR	877785	Symbol	w		877407						
ANR	877786	Symbol	* n		877407						
ANR	877787	Symbol	vis . discover_child		877407						
ANR	877788	Symbol	tn		877407						
ANR	877789	Symbol	w -> data		877407						
ANR	877790	Symbol	dot_trace_create_node		877407						
ANR	877791	Symbol	aux_data		877407						
ANR	877792	Function	step_until	726:0:26506:27099							
ANR	877793	FunctionDef	"step_until (RCore * core , ut64 addr)"		877792	0					
ANR	877794	CompoundStatement		726:46:26552:27099	877792	0					
ANR	877795	IdentifierDeclStatement	"ut64 off = r_debug_reg_get ( core -> dbg , ""PC"" ) ;"	727:1:26555:26599	877792	0	True				
ANR	877796	IdentifierDecl	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"		877792	0					
ANR	877797	IdentifierDeclType	ut64		877792	0					
ANR	877798	Identifier	off		877792	1					
ANR	877799	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"		877792	2		=			
ANR	877800	Identifier	off		877792	0					
ANR	877801	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		877792	1					
ANR	877802	Callee	r_debug_reg_get		877792	0					
ANR	877803	Identifier	r_debug_reg_get		877792	0					
ANR	877804	ArgumentList	core -> dbg		877792	1					
ANR	877805	Argument	core -> dbg		877792	0					
ANR	877806	PtrMemberAccess	core -> dbg		877792	0					
ANR	877807	Identifier	core		877792	0					
ANR	877808	Identifier	dbg		877792	1					
ANR	877809	Argument	"""PC"""		877792	1					
ANR	877810	PrimaryExpression	"""PC"""		877792	0					
ANR	877811	IfStatement	if ( ! off )		877792	1					
ANR	877812	Condition	! off	728:5:26606:26609	877792	0	True				
ANR	877813	UnaryOperationExpression	! off		877792	0					
ANR	877814	UnaryOperator	!		877792	0					
ANR	877815	Identifier	off		877792	1					
ANR	877816	CompoundStatement		3:11:59:59	877792	1					
ANR	877817	ExpressionStatement	"eprintf ( ""Cannot 'drn PC'\\n"" )"	729:2:26616:26645	877792	0	True				
ANR	877818	CallExpression	"eprintf ( ""Cannot 'drn PC'\\n"" )"		877792	0					
ANR	877819	Callee	eprintf		877792	0					
ANR	877820	Identifier	eprintf		877792	0					
ANR	877821	ArgumentList	"""Cannot 'drn PC'\\n"""		877792	1					
ANR	877822	Argument	"""Cannot 'drn PC'\\n"""		877792	0					
ANR	877823	PrimaryExpression	"""Cannot 'drn PC'\\n"""		877792	0					
ANR	877824	ReturnStatement	return false ;	730:2:26649:26661	877792	1	True				
ANR	877825	Identifier	false		877792	0					
ANR	877826	IfStatement	if ( ! addr )		877792	2					
ANR	877827	Condition	! addr	732:5:26671:26675	877792	0	True				
ANR	877828	UnaryOperationExpression	! addr		877792	0					
ANR	877829	UnaryOperator	!		877792	0					
ANR	877830	Identifier	addr		877792	1					
ANR	877831	CompoundStatement		7:12:125:125	877792	1					
ANR	877832	ExpressionStatement	"eprintf ( ""Cannot continue until address 0\\n"" )"	733:2:26682:26727	877792	0	True				
ANR	877833	CallExpression	"eprintf ( ""Cannot continue until address 0\\n"" )"		877792	0					
ANR	877834	Callee	eprintf		877792	0					
ANR	877835	Identifier	eprintf		877792	0					
ANR	877836	ArgumentList	"""Cannot continue until address 0\\n"""		877792	1					
ANR	877837	Argument	"""Cannot continue until address 0\\n"""		877792	0					
ANR	877838	PrimaryExpression	"""Cannot continue until address 0\\n"""		877792	0					
ANR	877839	ReturnStatement	return false ;	734:2:26731:26743	877792	1	True				
ANR	877840	Identifier	false		877792	0					
ANR	877841	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	736:1:26749:26779	877792	3	True				
ANR	877842	CallExpression	"r_cons_break_push ( NULL , NULL )"		877792	0					
ANR	877843	Callee	r_cons_break_push		877792	0					
ANR	877844	Identifier	r_cons_break_push		877792	0					
ANR	877845	ArgumentList	NULL		877792	1					
ANR	877846	Argument	NULL		877792	0					
ANR	877847	Identifier	NULL		877792	0					
ANR	877848	Argument	NULL		877792	1					
ANR	877849	Identifier	NULL		877792	0					
ANR	877850	DoStatement	do		877792	4					
ANR	877851	CompoundStatement		12:4:232:232	877792	0					
ANR	877852	IfStatement	if ( r_cons_is_breaked ( ) )		877792	0					
ANR	877853	Condition	r_cons_is_breaked ( )	738:6:26793:26812	877792	0	True				
ANR	877854	CallExpression	r_cons_is_breaked ( )		877792	0					
ANR	877855	Callee	r_cons_is_breaked		877792	0					
ANR	877856	Identifier	r_cons_is_breaked		877792	0					
ANR	877857	ArgumentList			877792	1					
ANR	877858	CompoundStatement		13:28:262:262	877792	1					
ANR	877859	ExpressionStatement	core -> break_loop = true	739:3:26820:26843	877792	0	True				
ANR	877860	AssignmentExpression	core -> break_loop = true		877792	0		=			
ANR	877861	PtrMemberAccess	core -> break_loop		877792	0					
ANR	877862	Identifier	core		877792	0					
ANR	877863	Identifier	break_loop		877792	1					
ANR	877864	Identifier	true		877792	1					
ANR	877865	BreakStatement	break ;	740:3:26848:26853	877792	1	True				
ANR	877866	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		877792	1					
ANR	877867	Condition	r_debug_is_dead ( core -> dbg )	742:6:26865:26891	877792	0	True				
ANR	877868	CallExpression	r_debug_is_dead ( core -> dbg )		877792	0					
ANR	877869	Callee	r_debug_is_dead		877792	0					
ANR	877870	Identifier	r_debug_is_dead		877792	0					
ANR	877871	ArgumentList	core -> dbg		877792	1					
ANR	877872	Argument	core -> dbg		877792	0					
ANR	877873	PtrMemberAccess	core -> dbg		877792	0					
ANR	877874	Identifier	core		877792	0					
ANR	877875	Identifier	dbg		877792	1					
ANR	877876	CompoundStatement		17:35:341:341	877792	1					
ANR	877877	ExpressionStatement	core -> break_loop = true	743:3:26899:26922	877792	0	True				
ANR	877878	AssignmentExpression	core -> break_loop = true		877792	0		=			
ANR	877879	PtrMemberAccess	core -> break_loop		877792	0					
ANR	877880	Identifier	core		877792	0					
ANR	877881	Identifier	break_loop		877792	1					
ANR	877882	Identifier	true		877792	1					
ANR	877883	BreakStatement	break ;	744:3:26927:26932	877792	1	True				
ANR	877884	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	746:2:26940:26967	877792	2	True				
ANR	877885	CallExpression	"r_debug_step ( core -> dbg , 1 )"		877792	0					
ANR	877886	Callee	r_debug_step		877792	0					
ANR	877887	Identifier	r_debug_step		877792	0					
ANR	877888	ArgumentList	core -> dbg		877792	1					
ANR	877889	Argument	core -> dbg		877792	0					
ANR	877890	PtrMemberAccess	core -> dbg		877792	0					
ANR	877891	Identifier	core		877792	0					
ANR	877892	Identifier	dbg		877792	1					
ANR	877893	Argument	1		877792	1					
ANR	877894	PrimaryExpression	1		877792	0					
ANR	877895	ExpressionStatement	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"	747:2:26971:27010	877792	3	True				
ANR	877896	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"		877792	0		=			
ANR	877897	Identifier	off		877792	0					
ANR	877898	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		877792	1					
ANR	877899	Callee	r_debug_reg_get		877792	0					
ANR	877900	Identifier	r_debug_reg_get		877792	0					
ANR	877901	ArgumentList	core -> dbg		877792	1					
ANR	877902	Argument	core -> dbg		877792	0					
ANR	877903	PtrMemberAccess	core -> dbg		877792	0					
ANR	877904	Identifier	core		877792	0					
ANR	877905	Identifier	dbg		877792	1					
ANR	877906	Argument	"""PC"""		877792	1					
ANR	877907	PrimaryExpression	"""PC"""		877792	0					
ANR	877908	Condition	off != addr	749:10:27049:27059	877792	1	True				
ANR	877909	EqualityExpression	off != addr		877792	0		!=			
ANR	877910	Identifier	off		877792	0					
ANR	877911	Identifier	addr		877792	1					
ANR	877912	ExpressionStatement	r_cons_break_pop ( )	750:1:27064:27083	877792	5	True				
ANR	877913	CallExpression	r_cons_break_pop ( )		877792	0					
ANR	877914	Callee	r_cons_break_pop		877792	0					
ANR	877915	Identifier	r_cons_break_pop		877792	0					
ANR	877916	ArgumentList			877792	1					
ANR	877917	ReturnStatement	return true ;	751:1:27086:27097	877792	6	True				
ANR	877918	Identifier	true		877792	0					
ANR	877919	ReturnType	static int		877792	1					
ANR	877920	Identifier	step_until		877792	2					
ANR	877921	ParameterList	"RCore * core , ut64 addr"		877792	3					
ANR	877922	Parameter	RCore * core	726:22:26528:26538	877792	0	True				
ANR	877923	ParameterType	RCore *		877792	0					
ANR	877924	Identifier	core		877792	1					
ANR	877925	Parameter	ut64 addr	726:35:26541:26549	877792	1	True				
ANR	877926	ParameterType	ut64		877792	0					
ANR	877927	Identifier	addr		877792	1					
ANR	877928	CFGEntryNode	ENTRY		877792		True				
ANR	877929	CFGExitNode	EXIT		877792		True				
ANR	877930	Symbol	core		877792						
ANR	877931	Symbol	core -> break_loop		877792						
ANR	877932	Symbol	r_cons_is_breaked		877792						
ANR	877933	Symbol	r_debug_is_dead		877792						
ANR	877934	Symbol	NULL		877792						
ANR	877935	Symbol	r_debug_reg_get		877792						
ANR	877936	Symbol	* core		877792						
ANR	877937	Symbol	false		877792						
ANR	877938	Symbol	true		877792						
ANR	877939	Symbol	addr		877792						
ANR	877940	Symbol	off		877792						
ANR	877941	Symbol	core -> dbg		877792						
ANR	877942	Function	step_until_esil	754:0:27102:27771							
ANR	877943	FunctionDef	"step_until_esil (RCore * core , const char * esilstr)"		877942	0					
ANR	877944	CompoundStatement		754:61:27163:27771	877942	0					
ANR	877945	IfStatement	if ( ! core || ! esilstr || ! core -> dbg || ! core -> dbg -> anal || ! core -> dbg -> anal -> esil )		877942	0					
ANR	877946	Condition	! core || ! esilstr || ! core -> dbg || ! core -> dbg -> anal || ! core -> dbg -> anal -> esil	755:5:27170:27251	877942	0	True				
ANR	877947	OrExpression	! core || ! esilstr || ! core -> dbg || ! core -> dbg -> anal || ! core -> dbg -> anal -> esil		877942	0		||			
ANR	877948	UnaryOperationExpression	! core		877942	0					
ANR	877949	UnaryOperator	!		877942	0					
ANR	877950	Identifier	core		877942	1					
ANR	877951	OrExpression	! esilstr || ! core -> dbg || ! core -> dbg -> anal || ! core -> dbg -> anal -> esil		877942	1		||			
ANR	877952	UnaryOperationExpression	! esilstr		877942	0					
ANR	877953	UnaryOperator	!		877942	0					
ANR	877954	Identifier	esilstr		877942	1					
ANR	877955	OrExpression	! core -> dbg || ! core -> dbg -> anal || ! core -> dbg -> anal -> esil		877942	1		||			
ANR	877956	UnaryOperationExpression	! core -> dbg		877942	0					
ANR	877957	UnaryOperator	!		877942	0					
ANR	877958	PtrMemberAccess	core -> dbg		877942	1					
ANR	877959	Identifier	core		877942	0					
ANR	877960	Identifier	dbg		877942	1					
ANR	877961	OrExpression	! core -> dbg -> anal || ! core -> dbg -> anal -> esil		877942	1		||			
ANR	877962	UnaryOperationExpression	! core -> dbg -> anal		877942	0					
ANR	877963	UnaryOperator	!		877942	0					
ANR	877964	PtrMemberAccess	core -> dbg -> anal		877942	1					
ANR	877965	PtrMemberAccess	core -> dbg		877942	0					
ANR	877966	Identifier	core		877942	0					
ANR	877967	Identifier	dbg		877942	1					
ANR	877968	Identifier	anal		877942	1					
ANR	877969	UnaryOperationExpression	! core -> dbg -> anal -> esil		877942	1					
ANR	877970	UnaryOperator	!		877942	0					
ANR	877971	PtrMemberAccess	core -> dbg -> anal -> esil		877942	1					
ANR	877972	PtrMemberAccess	core -> dbg -> anal		877942	0					
ANR	877973	PtrMemberAccess	core -> dbg		877942	0					
ANR	877974	Identifier	core		877942	0					
ANR	877975	Identifier	dbg		877942	1					
ANR	877976	Identifier	anal		877942	1					
ANR	877977	Identifier	esil		877942	1					
ANR	877978	CompoundStatement		3:30:90:90	877942	1					
ANR	877979	ExpressionStatement	"eprintf ( ""Not initialized %p. Run 'aei' first.\\n"" , core -> anal -> esil )"	757:2:27258:27326	877942	0	True				
ANR	877980	CallExpression	"eprintf ( ""Not initialized %p. Run 'aei' first.\\n"" , core -> anal -> esil )"		877942	0					
ANR	877981	Callee	eprintf		877942	0					
ANR	877982	Identifier	eprintf		877942	0					
ANR	877983	ArgumentList	"""Not initialized %p. Run 'aei' first.\\n"""		877942	1					
ANR	877984	Argument	"""Not initialized %p. Run 'aei' first.\\n"""		877942	0					
ANR	877985	PrimaryExpression	"""Not initialized %p. Run 'aei' first.\\n"""		877942	0					
ANR	877986	Argument	core -> anal -> esil		877942	1					
ANR	877987	PtrMemberAccess	core -> anal -> esil		877942	0					
ANR	877988	PtrMemberAccess	core -> anal		877942	0					
ANR	877989	Identifier	core		877942	0					
ANR	877990	Identifier	anal		877942	1					
ANR	877991	Identifier	esil		877942	1					
ANR	877992	ReturnStatement	return false ;	758:2:27330:27342	877942	1	True				
ANR	877993	Identifier	false		877942	0					
ANR	877994	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	760:1:27348:27378	877942	1	True				
ANR	877995	CallExpression	"r_cons_break_push ( NULL , NULL )"		877942	0					
ANR	877996	Callee	r_cons_break_push		877942	0					
ANR	877997	Identifier	r_cons_break_push		877942	0					
ANR	877998	ArgumentList	NULL		877942	1					
ANR	877999	Argument	NULL		877942	0					
ANR	878000	Identifier	NULL		877942	0					
ANR	878001	Argument	NULL		877942	1					
ANR	878002	Identifier	NULL		877942	0					
ANR	878003	ForStatement	for ( ; ; )		877942	2					
ANR	878004	CompoundStatement		8:10:226:226	877942	0					
ANR	878005	IfStatement	if ( r_cons_is_breaked ( ) )		877942	0					
ANR	878006	Condition	r_cons_is_breaked ( )	762:6:27398:27417	877942	0	True				
ANR	878007	CallExpression	r_cons_is_breaked ( )		877942	0					
ANR	878008	Callee	r_cons_is_breaked		877942	0					
ANR	878009	Identifier	r_cons_is_breaked		877942	0					
ANR	878010	ArgumentList			877942	1					
ANR	878011	CompoundStatement		9:28:256:256	877942	1					
ANR	878012	ExpressionStatement	core -> break_loop = true	763:3:27425:27448	877942	0	True				
ANR	878013	AssignmentExpression	core -> break_loop = true		877942	0		=			
ANR	878014	PtrMemberAccess	core -> break_loop		877942	0					
ANR	878015	Identifier	core		877942	0					
ANR	878016	Identifier	break_loop		877942	1					
ANR	878017	Identifier	true		877942	1					
ANR	878018	BreakStatement	break ;	764:3:27453:27458	877942	1	True				
ANR	878019	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		877942	1					
ANR	878020	Condition	r_debug_is_dead ( core -> dbg )	766:6:27470:27496	877942	0	True				
ANR	878021	CallExpression	r_debug_is_dead ( core -> dbg )		877942	0					
ANR	878022	Callee	r_debug_is_dead		877942	0					
ANR	878023	Identifier	r_debug_is_dead		877942	0					
ANR	878024	ArgumentList	core -> dbg		877942	1					
ANR	878025	Argument	core -> dbg		877942	0					
ANR	878026	PtrMemberAccess	core -> dbg		877942	0					
ANR	878027	Identifier	core		877942	0					
ANR	878028	Identifier	dbg		877942	1					
ANR	878029	CompoundStatement		13:35:335:335	877942	1					
ANR	878030	ExpressionStatement	core -> break_loop = true	767:3:27504:27527	877942	0	True				
ANR	878031	AssignmentExpression	core -> break_loop = true		877942	0		=			
ANR	878032	PtrMemberAccess	core -> break_loop		877942	0					
ANR	878033	Identifier	core		877942	0					
ANR	878034	Identifier	break_loop		877942	1					
ANR	878035	Identifier	true		877942	1					
ANR	878036	BreakStatement	break ;	768:3:27532:27537	877942	1	True				
ANR	878037	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	770:2:27545:27572	877942	2	True				
ANR	878038	CallExpression	"r_debug_step ( core -> dbg , 1 )"		877942	0					
ANR	878039	Callee	r_debug_step		877942	0					
ANR	878040	Identifier	r_debug_step		877942	0					
ANR	878041	ArgumentList	core -> dbg		877942	1					
ANR	878042	Argument	core -> dbg		877942	0					
ANR	878043	PtrMemberAccess	core -> dbg		877942	0					
ANR	878044	Identifier	core		877942	0					
ANR	878045	Identifier	dbg		877942	1					
ANR	878046	Argument	1		877942	1					
ANR	878047	PrimaryExpression	1		877942	0					
ANR	878048	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"	771:2:27576:27627	877942	3	True				
ANR	878049	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"		877942	0					
ANR	878050	Callee	r_debug_reg_sync		877942	0					
ANR	878051	Identifier	r_debug_reg_sync		877942	0					
ANR	878052	ArgumentList	core -> dbg		877942	1					
ANR	878053	Argument	core -> dbg		877942	0					
ANR	878054	PtrMemberAccess	core -> dbg		877942	0					
ANR	878055	Identifier	core		877942	0					
ANR	878056	Identifier	dbg		877942	1					
ANR	878057	Argument	R_REG_TYPE_ALL		877942	1					
ANR	878058	Identifier	R_REG_TYPE_ALL		877942	0					
ANR	878059	Argument	false		877942	2					
ANR	878060	Identifier	false		877942	0					
ANR	878061	IfStatement	"if ( r_anal_esil_condition ( core -> anal -> esil , esilstr ) )"		877942	4					
ANR	878062	Condition	"r_anal_esil_condition ( core -> anal -> esil , esilstr )"	772:6:27635:27683	877942	0	True				
ANR	878063	CallExpression	"r_anal_esil_condition ( core -> anal -> esil , esilstr )"		877942	0					
ANR	878064	Callee	r_anal_esil_condition		877942	0					
ANR	878065	Identifier	r_anal_esil_condition		877942	0					
ANR	878066	ArgumentList	core -> anal -> esil		877942	1					
ANR	878067	Argument	core -> anal -> esil		877942	0					
ANR	878068	PtrMemberAccess	core -> anal -> esil		877942	0					
ANR	878069	PtrMemberAccess	core -> anal		877942	0					
ANR	878070	Identifier	core		877942	0					
ANR	878071	Identifier	anal		877942	1					
ANR	878072	Identifier	esil		877942	1					
ANR	878073	Argument	esilstr		877942	1					
ANR	878074	Identifier	esilstr		877942	0					
ANR	878075	CompoundStatement		19:57:522:522	877942	1					
ANR	878076	ExpressionStatement	"eprintf ( ""ESIL BREAK!\\n"" )"	773:3:27691:27716	877942	0	True				
ANR	878077	CallExpression	"eprintf ( ""ESIL BREAK!\\n"" )"		877942	0					
ANR	878078	Callee	eprintf		877942	0					
ANR	878079	Identifier	eprintf		877942	0					
ANR	878080	ArgumentList	"""ESIL BREAK!\\n"""		877942	1					
ANR	878081	Argument	"""ESIL BREAK!\\n"""		877942	0					
ANR	878082	PrimaryExpression	"""ESIL BREAK!\\n"""		877942	0					
ANR	878083	BreakStatement	break ;	774:3:27721:27726	877942	1	True				
ANR	878084	ExpressionStatement	r_cons_break_pop ( )	777:1:27736:27755	877942	3	True				
ANR	878085	CallExpression	r_cons_break_pop ( )		877942	0					
ANR	878086	Callee	r_cons_break_pop		877942	0					
ANR	878087	Identifier	r_cons_break_pop		877942	0					
ANR	878088	ArgumentList			877942	1					
ANR	878089	ReturnStatement	return true ;	778:1:27758:27769	877942	4	True				
ANR	878090	Identifier	true		877942	0					
ANR	878091	ReturnType	static int		877942	1					
ANR	878092	Identifier	step_until_esil		877942	2					
ANR	878093	ParameterList	"RCore * core , const char * esilstr"		877942	3					
ANR	878094	Parameter	RCore * core	754:27:27129:27139	877942	0	True				
ANR	878095	ParameterType	RCore *		877942	0					
ANR	878096	Identifier	core		877942	1					
ANR	878097	Parameter	const char * esilstr	754:40:27142:27160	877942	1	True				
ANR	878098	ParameterType	const char *		877942	0					
ANR	878099	Identifier	esilstr		877942	1					
ANR	878100	CFGEntryNode	ENTRY		877942		True				
ANR	878101	CFGExitNode	EXIT		877942		True				
ANR	878102	InfiniteForNode	true		877942		True				
ANR	878103	Symbol	NULL		877942						
ANR	878104	Symbol	core -> dbg -> anal		877942						
ANR	878105	Symbol	* core		877942						
ANR	878106	Symbol	false		877942						
ANR	878107	Symbol	esilstr		877942						
ANR	878108	Symbol	core -> anal		877942						
ANR	878109	Symbol	core		877942						
ANR	878110	Symbol	* * * core		877942						
ANR	878111	Symbol	core -> break_loop		877942						
ANR	878112	Symbol	r_cons_is_breaked		877942						
ANR	878113	Symbol	r_debug_is_dead		877942						
ANR	878114	Symbol	* core -> anal		877942						
ANR	878115	Symbol	core -> dbg -> anal -> esil		877942						
ANR	878116	Symbol	* core -> dbg -> anal		877942						
ANR	878117	Symbol	R_REG_TYPE_ALL		877942						
ANR	878118	Symbol	true		877942						
ANR	878119	Symbol	r_anal_esil_condition		877942						
ANR	878120	Symbol	core -> anal -> esil		877942						
ANR	878121	Symbol	* core -> dbg		877942						
ANR	878122	Symbol	* * core		877942						
ANR	878123	Symbol	* * core -> dbg		877942						
ANR	878124	Symbol	core -> dbg		877942						
ANR	878125	Function	is_repeatable_inst	781:0:27774:28211							
ANR	878126	FunctionDef	"is_repeatable_inst (RCore * core , ut64 addr)"		878125	0					
ANR	878127	CompoundStatement		781:55:27829:28211	878125	0					
ANR	878128	IdentifierDeclStatement	bool ret = false ;	782:1:27832:27848	878125	0	True				
ANR	878129	IdentifierDecl	ret = false		878125	0					
ANR	878130	IdentifierDeclType	bool		878125	0					
ANR	878131	Identifier	ret		878125	1					
ANR	878132	AssignmentExpression	ret = false		878125	2		=			
ANR	878133	Identifier	false		878125	0					
ANR	878134	Identifier	false		878125	1					
ANR	878135	IfStatement	"if ( ! r_str_startswith ( r_config_get ( core -> config , ""asm.arch"" ) , ""x86"" ) )"		878125	1					
ANR	878136	Condition	"! r_str_startswith ( r_config_get ( core -> config , ""asm.arch"" ) , ""x86"" )"	784:5:27856:27921	878125	0	True				
ANR	878137	UnaryOperationExpression	"! r_str_startswith ( r_config_get ( core -> config , ""asm.arch"" ) , ""x86"" )"		878125	0					
ANR	878138	UnaryOperator	!		878125	0					
ANR	878139	CallExpression	"r_str_startswith ( r_config_get ( core -> config , ""asm.arch"" ) , ""x86"" )"		878125	1					
ANR	878140	Callee	r_str_startswith		878125	0					
ANR	878141	Identifier	r_str_startswith		878125	0					
ANR	878142	ArgumentList	"r_config_get ( core -> config , ""asm.arch"" )"		878125	1					
ANR	878143	Argument	"r_config_get ( core -> config , ""asm.arch"" )"		878125	0					
ANR	878144	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		878125	0					
ANR	878145	Callee	r_config_get		878125	0					
ANR	878146	Identifier	r_config_get		878125	0					
ANR	878147	ArgumentList	core -> config		878125	1					
ANR	878148	Argument	core -> config		878125	0					
ANR	878149	PtrMemberAccess	core -> config		878125	0					
ANR	878150	Identifier	core		878125	0					
ANR	878151	Identifier	config		878125	1					
ANR	878152	Argument	"""asm.arch"""		878125	1					
ANR	878153	PrimaryExpression	"""asm.arch"""		878125	0					
ANR	878154	Argument	"""x86"""		878125	1					
ANR	878155	PrimaryExpression	"""x86"""		878125	0					
ANR	878156	CompoundStatement		4:73:94:94	878125	1					
ANR	878157	ReturnStatement	return false ;	785:2:27928:27940	878125	0	True				
ANR	878158	Identifier	false		878125	0					
ANR	878159	IdentifierDeclStatement	"RAnalOp * op = r_core_op_anal ( core , addr ) ;"	788:1:27947:27988	878125	2	True				
ANR	878160	IdentifierDecl	"* op = r_core_op_anal ( core , addr )"		878125	0					
ANR	878161	IdentifierDeclType	RAnalOp *		878125	0					
ANR	878162	Identifier	op		878125	1					
ANR	878163	AssignmentExpression	"* op = r_core_op_anal ( core , addr )"		878125	2		=			
ANR	878164	Identifier	op		878125	0					
ANR	878165	CallExpression	"r_core_op_anal ( core , addr )"		878125	1					
ANR	878166	Callee	r_core_op_anal		878125	0					
ANR	878167	Identifier	r_core_op_anal		878125	0					
ANR	878168	ArgumentList	core		878125	1					
ANR	878169	Argument	core		878125	0					
ANR	878170	Identifier	core		878125	0					
ANR	878171	Argument	addr		878125	1					
ANR	878172	Identifier	addr		878125	0					
ANR	878173	IfStatement	if ( ! op )		878125	3					
ANR	878174	Condition	! op	789:5:27995:27997	878125	0	True				
ANR	878175	UnaryOperationExpression	! op		878125	0					
ANR	878176	UnaryOperator	!		878125	0					
ANR	878177	Identifier	op		878125	1					
ANR	878178	CompoundStatement		9:10:170:170	878125	1					
ANR	878179	Statement	eprintf	790:2:28004:28010	878125	0	True				
ANR	878180	Statement	(	790:10:28012:28012	878125	1	True				
ANR	878181	Statement	"""Cannot analyze opcode at 0x%08"""	790:11:28013:28044	878125	2	True				
ANR	878182	Statement	PFMT64x	790:44:28046:28052	878125	3	True				
ANR	878183	Statement	"""\\n"""	790:52:28054:28057	878125	4	True				
ANR	878184	Statement	","	790:56:28058:28058	878125	5	True				
ANR	878185	Statement	addr	790:58:28060:28063	878125	6	True				
ANR	878186	Statement	)	790:62:28064:28064	878125	7	True				
ANR	878187	ExpressionStatement		790:63:28065:28065	878125	8	True				
ANR	878188	ReturnStatement	return false ;	791:2:28069:28081	878125	9	True				
ANR	878189	Identifier	false		878125	0					
ANR	878190	ExpressionStatement	ret = ( op -> prefix & R_ANAL_OP_PREFIX_REP ) || ( op -> prefix & R_ANAL_OP_PREFIX_REPNE )	794:1:28088:28170	878125	4	True				
ANR	878191	AssignmentExpression	ret = ( op -> prefix & R_ANAL_OP_PREFIX_REP ) || ( op -> prefix & R_ANAL_OP_PREFIX_REPNE )		878125	0		=			
ANR	878192	Identifier	ret		878125	0					
ANR	878193	OrExpression	( op -> prefix & R_ANAL_OP_PREFIX_REP ) || ( op -> prefix & R_ANAL_OP_PREFIX_REPNE )		878125	1		||			
ANR	878194	BitAndExpression	op -> prefix & R_ANAL_OP_PREFIX_REP		878125	0		&			
ANR	878195	PtrMemberAccess	op -> prefix		878125	0					
ANR	878196	Identifier	op		878125	0					
ANR	878197	Identifier	prefix		878125	1					
ANR	878198	Identifier	R_ANAL_OP_PREFIX_REP		878125	1					
ANR	878199	BitAndExpression	op -> prefix & R_ANAL_OP_PREFIX_REPNE		878125	1		&			
ANR	878200	PtrMemberAccess	op -> prefix		878125	0					
ANR	878201	Identifier	op		878125	0					
ANR	878202	Identifier	prefix		878125	1					
ANR	878203	Identifier	R_ANAL_OP_PREFIX_REPNE		878125	1					
ANR	878204	ExpressionStatement	r_anal_op_free ( op )	796:4:28177:28196	878125	5	True				
ANR	878205	CallExpression	r_anal_op_free ( op )		878125	0					
ANR	878206	Callee	r_anal_op_free		878125	0					
ANR	878207	Identifier	r_anal_op_free		878125	0					
ANR	878208	ArgumentList	op		878125	1					
ANR	878209	Argument	op		878125	0					
ANR	878210	Identifier	op		878125	0					
ANR	878211	ReturnStatement	return ret ;	797:1:28199:28209	878125	6	True				
ANR	878212	Identifier	ret		878125	0					
ANR	878213	ReturnType	static bool		878125	1					
ANR	878214	Identifier	is_repeatable_inst		878125	2					
ANR	878215	ParameterList	"RCore * core , ut64 addr"		878125	3					
ANR	878216	Parameter	RCore * core	781:31:27805:27815	878125	0	True				
ANR	878217	ParameterType	RCore *		878125	0					
ANR	878218	Identifier	core		878125	1					
ANR	878219	Parameter	ut64 addr	781:44:27818:27826	878125	1	True				
ANR	878220	ParameterType	ut64		878125	0					
ANR	878221	Identifier	addr		878125	1					
ANR	878222	CFGEntryNode	ENTRY		878125		True				
ANR	878223	CFGExitNode	EXIT		878125		True				
ANR	878224	Symbol	ret		878125						
ANR	878225	Symbol	core -> config		878125						
ANR	878226	Symbol	r_str_startswith		878125						
ANR	878227	Symbol	op		878125						
ANR	878228	Symbol	* op		878125						
ANR	878229	Symbol	false		878125						
ANR	878230	Symbol	* core		878125						
ANR	878231	Symbol	r_config_get		878125						
ANR	878232	Symbol	op -> prefix		878125						
ANR	878233	Symbol	core		878125						
ANR	878234	Symbol	R_ANAL_OP_PREFIX_REPNE		878125						
ANR	878235	Symbol	R_ANAL_OP_PREFIX_REP		878125						
ANR	878236	Symbol	addr		878125						
ANR	878237	Symbol	r_core_op_anal		878125						
ANR	878238	Function	step_until_inst	800:0:28214:29546							
ANR	878239	FunctionDef	"step_until_inst (RCore * core , const char * instr , bool regex)"		878238	0					
ANR	878240	CompoundStatement		800:71:28285:29546	878238	0					
ANR	878241	IdentifierDeclStatement	RAsmOp asmop ;	801:1:28288:28300	878238	0	True				
ANR	878242	IdentifierDecl	asmop		878238	0					
ANR	878243	IdentifierDeclType	RAsmOp		878238	0					
ANR	878244	Identifier	asmop		878238	1					
ANR	878245	IdentifierDeclStatement	ut8 buf [ 32 ] ;	802:1:28303:28314	878238	1	True				
ANR	878246	IdentifierDecl	buf [ 32 ]		878238	0					
ANR	878247	IdentifierDeclType	ut8 [ 32 ]		878238	0					
ANR	878248	Identifier	buf		878238	1					
ANR	878249	PrimaryExpression	32		878238	2					
ANR	878250	IdentifierDeclStatement	ut64 pc ;	803:1:28317:28324	878238	2	True				
ANR	878251	IdentifierDecl	pc		878238	0					
ANR	878252	IdentifierDeclType	ut64		878238	0					
ANR	878253	Identifier	pc		878238	1					
ANR	878254	IdentifierDeclStatement	int ret ;	804:1:28327:28334	878238	3	True				
ANR	878255	IdentifierDecl	ret		878238	0					
ANR	878256	IdentifierDeclType	int		878238	0					
ANR	878257	Identifier	ret		878238	1					
ANR	878258	ExpressionStatement	instr = r_str_trim_ro ( instr )	806:1:28338:28367	878238	4	True				
ANR	878259	AssignmentExpression	instr = r_str_trim_ro ( instr )		878238	0		=			
ANR	878260	Identifier	instr		878238	0					
ANR	878261	CallExpression	r_str_trim_ro ( instr )		878238	1					
ANR	878262	Callee	r_str_trim_ro		878238	0					
ANR	878263	Identifier	r_str_trim_ro		878238	0					
ANR	878264	ArgumentList	instr		878238	1					
ANR	878265	Argument	instr		878238	0					
ANR	878266	Identifier	instr		878238	0					
ANR	878267	IfStatement	if ( ! core || ! instr || ! core -> dbg )		878238	5					
ANR	878268	Condition	! core || ! instr || ! core -> dbg	807:5:28374:28401	878238	0	True				
ANR	878269	OrExpression	! core || ! instr || ! core -> dbg		878238	0		||			
ANR	878270	UnaryOperationExpression	! core		878238	0					
ANR	878271	UnaryOperator	!		878238	0					
ANR	878272	Identifier	core		878238	1					
ANR	878273	OrExpression	! instr || ! core -> dbg		878238	1		||			
ANR	878274	UnaryOperationExpression	! instr		878238	0					
ANR	878275	UnaryOperator	!		878238	0					
ANR	878276	Identifier	instr		878238	1					
ANR	878277	UnaryOperationExpression	! core -> dbg		878238	1					
ANR	878278	UnaryOperator	!		878238	0					
ANR	878279	PtrMemberAccess	core -> dbg		878238	1					
ANR	878280	Identifier	core		878238	0					
ANR	878281	Identifier	dbg		878238	1					
ANR	878282	CompoundStatement		8:35:118:118	878238	1					
ANR	878283	ExpressionStatement	"eprintf ( ""Wrong state\\n"" )"	808:2:28408:28433	878238	0	True				
ANR	878284	CallExpression	"eprintf ( ""Wrong state\\n"" )"		878238	0					
ANR	878285	Callee	eprintf		878238	0					
ANR	878286	Identifier	eprintf		878238	0					
ANR	878287	ArgumentList	"""Wrong state\\n"""		878238	1					
ANR	878288	Argument	"""Wrong state\\n"""		878238	0					
ANR	878289	PrimaryExpression	"""Wrong state\\n"""		878238	0					
ANR	878290	ReturnStatement	return false ;	809:2:28437:28449	878238	1	True				
ANR	878291	Identifier	false		878238	0					
ANR	878292	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	811:1:28455:28485	878238	6	True				
ANR	878293	CallExpression	"r_cons_break_push ( NULL , NULL )"		878238	0					
ANR	878294	Callee	r_cons_break_push		878238	0					
ANR	878295	Identifier	r_cons_break_push		878238	0					
ANR	878296	ArgumentList	NULL		878238	1					
ANR	878297	Argument	NULL		878238	0					
ANR	878298	Identifier	NULL		878238	0					
ANR	878299	Argument	NULL		878238	1					
ANR	878300	Identifier	NULL		878238	0					
ANR	878301	ForStatement	for ( ; ; )		878238	7					
ANR	878302	CompoundStatement		13:10:211:211	878238	0					
ANR	878303	IfStatement	if ( r_cons_is_breaked ( ) )		878238	0					
ANR	878304	Condition	r_cons_is_breaked ( )	813:6:28505:28524	878238	0	True				
ANR	878305	CallExpression	r_cons_is_breaked ( )		878238	0					
ANR	878306	Callee	r_cons_is_breaked		878238	0					
ANR	878307	Identifier	r_cons_is_breaked		878238	0					
ANR	878308	ArgumentList			878238	1					
ANR	878309	CompoundStatement		14:28:241:241	878238	1					
ANR	878310	BreakStatement	break ;	814:3:28532:28537	878238	0	True				
ANR	878311	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		878238	1					
ANR	878312	Condition	r_debug_is_dead ( core -> dbg )	816:6:28549:28575	878238	0	True				
ANR	878313	CallExpression	r_debug_is_dead ( core -> dbg )		878238	0					
ANR	878314	Callee	r_debug_is_dead		878238	0					
ANR	878315	Identifier	r_debug_is_dead		878238	0					
ANR	878316	ArgumentList	core -> dbg		878238	1					
ANR	878317	Argument	core -> dbg		878238	0					
ANR	878318	PtrMemberAccess	core -> dbg		878238	0					
ANR	878319	Identifier	core		878238	0					
ANR	878320	Identifier	dbg		878238	1					
ANR	878321	CompoundStatement		17:35:292:292	878238	1					
ANR	878322	BreakStatement	break ;	817:3:28583:28588	878238	0	True				
ANR	878323	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"	819:2:28596:28634	878238	2	True				
ANR	878324	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		878238	0		=			
ANR	878325	Identifier	pc		878238	0					
ANR	878326	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		878238	1					
ANR	878327	Callee	r_debug_reg_get		878238	0					
ANR	878328	Identifier	r_debug_reg_get		878238	0					
ANR	878329	ArgumentList	core -> dbg		878238	1					
ANR	878330	Argument	core -> dbg		878238	0					
ANR	878331	PtrMemberAccess	core -> dbg		878238	0					
ANR	878332	Identifier	core		878238	0					
ANR	878333	Identifier	dbg		878238	1					
ANR	878334	Argument	"""PC"""		878238	1					
ANR	878335	PrimaryExpression	"""PC"""		878238	0					
ANR	878336	IfStatement	"if ( is_repeatable_inst ( core , pc ) )"		878238	3					
ANR	878337	Condition	"is_repeatable_inst ( core , pc )"	820:6:28642:28670	878238	0	True				
ANR	878338	CallExpression	"is_repeatable_inst ( core , pc )"		878238	0					
ANR	878339	Callee	is_repeatable_inst		878238	0					
ANR	878340	Identifier	is_repeatable_inst		878238	0					
ANR	878341	ArgumentList	core		878238	1					
ANR	878342	Argument	core		878238	0					
ANR	878343	Identifier	core		878238	0					
ANR	878344	Argument	pc		878238	1					
ANR	878345	Identifier	pc		878238	0					
ANR	878346	CompoundStatement		21:37:387:387	878238	1					
ANR	878347	ExpressionStatement	"r_debug_step_over ( core -> dbg , 1 )"	821:3:28678:28710	878238	0	True				
ANR	878348	CallExpression	"r_debug_step_over ( core -> dbg , 1 )"		878238	0					
ANR	878349	Callee	r_debug_step_over		878238	0					
ANR	878350	Identifier	r_debug_step_over		878238	0					
ANR	878351	ArgumentList	core -> dbg		878238	1					
ANR	878352	Argument	core -> dbg		878238	0					
ANR	878353	PtrMemberAccess	core -> dbg		878238	0					
ANR	878354	Identifier	core		878238	0					
ANR	878355	Identifier	dbg		878238	1					
ANR	878356	Argument	1		878238	1					
ANR	878357	PrimaryExpression	1		878238	0					
ANR	878358	ElseStatement	else		878238	0					
ANR	878359	CompoundStatement		23:9:435:435	878238	0					
ANR	878360	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	823:3:28726:28753	878238	0	True				
ANR	878361	CallExpression	"r_debug_step ( core -> dbg , 1 )"		878238	0					
ANR	878362	Callee	r_debug_step		878238	0					
ANR	878363	Identifier	r_debug_step		878238	0					
ANR	878364	ArgumentList	core -> dbg		878238	1					
ANR	878365	Argument	core -> dbg		878238	0					
ANR	878366	PtrMemberAccess	core -> dbg		878238	0					
ANR	878367	Identifier	core		878238	0					
ANR	878368	Identifier	dbg		878238	1					
ANR	878369	Argument	1		878238	1					
ANR	878370	PrimaryExpression	1		878238	0					
ANR	878371	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"	825:2:28761:28799	878238	4	True				
ANR	878372	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		878238	0		=			
ANR	878373	Identifier	pc		878238	0					
ANR	878374	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		878238	1					
ANR	878375	Callee	r_debug_reg_get		878238	0					
ANR	878376	Identifier	r_debug_reg_get		878238	0					
ANR	878377	ArgumentList	core -> dbg		878238	1					
ANR	878378	Argument	core -> dbg		878238	0					
ANR	878379	PtrMemberAccess	core -> dbg		878238	0					
ANR	878380	Identifier	core		878238	0					
ANR	878381	Identifier	dbg		878238	1					
ANR	878382	Argument	"""PC"""		878238	1					
ANR	878383	PrimaryExpression	"""PC"""		878238	0					
ANR	878384	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"	826:2:28803:28854	878238	5	True				
ANR	878385	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"		878238	0					
ANR	878386	Callee	r_debug_reg_sync		878238	0					
ANR	878387	Identifier	r_debug_reg_sync		878238	0					
ANR	878388	ArgumentList	core -> dbg		878238	1					
ANR	878389	Argument	core -> dbg		878238	0					
ANR	878390	PtrMemberAccess	core -> dbg		878238	0					
ANR	878391	Identifier	core		878238	0					
ANR	878392	Identifier	dbg		878238	1					
ANR	878393	Argument	R_REG_TYPE_ALL		878238	1					
ANR	878394	Identifier	R_REG_TYPE_ALL		878238	0					
ANR	878395	Argument	false		878238	2					
ANR	878396	Identifier	false		878238	0					
ANR	878397	ExpressionStatement	"r_asm_set_pc ( core -> assembler , pc )"	828:2:28907:28941	878238	6	True				
ANR	878398	CallExpression	"r_asm_set_pc ( core -> assembler , pc )"		878238	0					
ANR	878399	Callee	r_asm_set_pc		878238	0					
ANR	878400	Identifier	r_asm_set_pc		878238	0					
ANR	878401	ArgumentList	core -> assembler		878238	1					
ANR	878402	Argument	core -> assembler		878238	0					
ANR	878403	PtrMemberAccess	core -> assembler		878238	0					
ANR	878404	Identifier	core		878238	0					
ANR	878405	Identifier	assembler		878238	1					
ANR	878406	Argument	pc		878238	1					
ANR	878407	Identifier	pc		878238	0					
ANR	878408	ExpressionStatement	"r_io_read_at ( core -> io , pc , buf , sizeof ( buf ) )"	830:2:29018:29064	878238	7	True				
ANR	878409	CallExpression	"r_io_read_at ( core -> io , pc , buf , sizeof ( buf ) )"		878238	0					
ANR	878410	Callee	r_io_read_at		878238	0					
ANR	878411	Identifier	r_io_read_at		878238	0					
ANR	878412	ArgumentList	core -> io		878238	1					
ANR	878413	Argument	core -> io		878238	0					
ANR	878414	PtrMemberAccess	core -> io		878238	0					
ANR	878415	Identifier	core		878238	0					
ANR	878416	Identifier	io		878238	1					
ANR	878417	Argument	pc		878238	1					
ANR	878418	Identifier	pc		878238	0					
ANR	878419	Argument	buf		878238	2					
ANR	878420	Identifier	buf		878238	0					
ANR	878421	Argument	sizeof ( buf )		878238	3					
ANR	878422	SizeofExpression	sizeof ( buf )		878238	0					
ANR	878423	Sizeof	sizeof		878238	0					
ANR	878424	SizeofOperand	buf		878238	1					
ANR	878425	ExpressionStatement	"ret = r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) )"	831:2:29068:29136	878238	8	True				
ANR	878426	AssignmentExpression	"ret = r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) )"		878238	0		=			
ANR	878427	Identifier	ret		878238	0					
ANR	878428	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) )"		878238	1					
ANR	878429	Callee	r_asm_disassemble		878238	0					
ANR	878430	Identifier	r_asm_disassemble		878238	0					
ANR	878431	ArgumentList	core -> assembler		878238	1					
ANR	878432	Argument	core -> assembler		878238	0					
ANR	878433	PtrMemberAccess	core -> assembler		878238	0					
ANR	878434	Identifier	core		878238	0					
ANR	878435	Identifier	assembler		878238	1					
ANR	878436	Argument	& asmop		878238	1					
ANR	878437	UnaryOperationExpression	& asmop		878238	0					
ANR	878438	UnaryOperator	&		878238	0					
ANR	878439	Identifier	asmop		878238	1					
ANR	878440	Argument	buf		878238	2					
ANR	878441	Identifier	buf		878238	0					
ANR	878442	Argument	sizeof ( buf )		878238	3					
ANR	878443	SizeofExpression	sizeof ( buf )		878238	0					
ANR	878444	Sizeof	sizeof		878238	0					
ANR	878445	SizeofOperand	buf		878238	1					
ANR	878446	Statement	eprintf	832:2:29140:29146	878238	9	True				
ANR	878447	Statement	(	832:10:29148:29148	878238	10	True				
ANR	878448	Statement	"""0x%08"""	832:11:29149:29155	878238	11	True				
ANR	878449	Statement	PFMT64x	832:18:29156:29162	878238	12	True				
ANR	878450	Statement	""" %d %s\\n"""	832:25:29163:29172	878238	13	True				
ANR	878451	Statement	","	832:35:29173:29173	878238	14	True				
ANR	878452	Statement	pc	832:37:29175:29176	878238	15	True				
ANR	878453	Statement	","	832:39:29177:29177	878238	16	True				
ANR	878454	Statement	ret	832:41:29179:29181	878238	17	True				
ANR	878455	Statement	","	832:44:29182:29182	878238	18	True				
ANR	878456	Statement	r_asm_op_get_asm	832:46:29184:29199	878238	19	True				
ANR	878457	Statement	(	832:63:29201:29201	878238	20	True				
ANR	878458	Statement	&	832:64:29202:29202	878238	21	True				
ANR	878459	Statement	asmop	832:65:29203:29207	878238	22	True				
ANR	878460	Statement	)	832:70:29208:29208	878238	23	True				
ANR	878461	Statement	)	832:71:29209:29209	878238	24	True				
ANR	878462	ExpressionStatement		832:72:29210:29210	878238	25	True				
ANR	878463	IfStatement	if ( ret > 0 )		878238	26					
ANR	878464	Condition	ret > 0	833:6:29237:29243	878238	0	True				
ANR	878465	RelationalExpression	ret > 0		878238	0		>			
ANR	878466	Identifier	ret		878238	0					
ANR	878467	PrimaryExpression	0		878238	1					
ANR	878468	CompoundStatement		35:3:965:1012	878238	1					
ANR	878469	IdentifierDeclStatement	const char * buf_asm = r_asm_op_get_asm ( & asmop ) ;	834:3:29251:29298	878238	0	True				
ANR	878470	IdentifierDecl	* buf_asm = r_asm_op_get_asm ( & asmop )		878238	0					
ANR	878471	IdentifierDeclType	const char *		878238	0					
ANR	878472	Identifier	buf_asm		878238	1					
ANR	878473	AssignmentExpression	* buf_asm = r_asm_op_get_asm ( & asmop )		878238	2		=			
ANR	878474	Identifier	buf_asm		878238	0					
ANR	878475	CallExpression	r_asm_op_get_asm ( & asmop )		878238	1					
ANR	878476	Callee	r_asm_op_get_asm		878238	0					
ANR	878477	Identifier	r_asm_op_get_asm		878238	0					
ANR	878478	ArgumentList	& asmop		878238	1					
ANR	878479	Argument	& asmop		878238	0					
ANR	878480	UnaryOperationExpression	& asmop		878238	0					
ANR	878481	UnaryOperator	&		878238	0					
ANR	878482	Identifier	asmop		878238	1					
ANR	878483	IfStatement	if ( regex )		878238	1					
ANR	878484	Condition	regex	835:7:29307:29311	878238	0	True				
ANR	878485	Identifier	regex		878238	0					
ANR	878486	CompoundStatement		36:14:1028:1028	878238	1					
ANR	878487	IfStatement	"if ( r_regex_match ( instr , ""e"" , buf_asm ) )"		878238	0					
ANR	878488	Condition	"r_regex_match ( instr , ""e"" , buf_asm )"	836:8:29324:29358	878238	0	True				
ANR	878489	CallExpression	"r_regex_match ( instr , ""e"" , buf_asm )"		878238	0					
ANR	878490	Callee	r_regex_match		878238	0					
ANR	878491	Identifier	r_regex_match		878238	0					
ANR	878492	ArgumentList	instr		878238	1					
ANR	878493	Argument	instr		878238	0					
ANR	878494	Identifier	instr		878238	0					
ANR	878495	Argument	"""e"""		878238	1					
ANR	878496	PrimaryExpression	"""e"""		878238	0					
ANR	878497	Argument	buf_asm		878238	2					
ANR	878498	Identifier	buf_asm		878238	0					
ANR	878499	CompoundStatement		37:45:1075:1075	878238	1					
ANR	878500	ExpressionStatement	"eprintf ( ""Stop.\\n"" )"	837:5:29368:29387	878238	0	True				
ANR	878501	CallExpression	"eprintf ( ""Stop.\\n"" )"		878238	0					
ANR	878502	Callee	eprintf		878238	0					
ANR	878503	Identifier	eprintf		878238	0					
ANR	878504	ArgumentList	"""Stop.\\n"""		878238	1					
ANR	878505	Argument	"""Stop.\\n"""		878238	0					
ANR	878506	PrimaryExpression	"""Stop.\\n"""		878238	0					
ANR	878507	BreakStatement	break ;	838:5:29394:29399	878238	1	True				
ANR	878508	ElseStatement	else		878238	0					
ANR	878509	CompoundStatement		41:10:1131:1131	878238	0					
ANR	878510	IfStatement	"if ( strstr ( buf_asm , instr ) )"		878238	0					
ANR	878511	Condition	"strstr ( buf_asm , instr )"	841:8:29427:29449	878238	0	True				
ANR	878512	CallExpression	"strstr ( buf_asm , instr )"		878238	0					
ANR	878513	Callee	strstr		878238	0					
ANR	878514	Identifier	strstr		878238	0					
ANR	878515	ArgumentList	buf_asm		878238	1					
ANR	878516	Argument	buf_asm		878238	0					
ANR	878517	Identifier	buf_asm		878238	0					
ANR	878518	Argument	instr		878238	1					
ANR	878519	Identifier	instr		878238	0					
ANR	878520	CompoundStatement		42:33:1166:1166	878238	1					
ANR	878521	ExpressionStatement	"eprintf ( ""Stop.\\n"" )"	842:5:29459:29478	878238	0	True				
ANR	878522	CallExpression	"eprintf ( ""Stop.\\n"" )"		878238	0					
ANR	878523	Callee	eprintf		878238	0					
ANR	878524	Identifier	eprintf		878238	0					
ANR	878525	ArgumentList	"""Stop.\\n"""		878238	1					
ANR	878526	Argument	"""Stop.\\n"""		878238	0					
ANR	878527	PrimaryExpression	"""Stop.\\n"""		878238	0					
ANR	878528	BreakStatement	break ;	843:5:29485:29490	878238	1	True				
ANR	878529	ExpressionStatement	r_cons_break_pop ( )	848:1:29511:29530	878238	8	True				
ANR	878530	CallExpression	r_cons_break_pop ( )		878238	0					
ANR	878531	Callee	r_cons_break_pop		878238	0					
ANR	878532	Identifier	r_cons_break_pop		878238	0					
ANR	878533	ArgumentList			878238	1					
ANR	878534	ReturnStatement	return true ;	849:1:29533:29544	878238	9	True				
ANR	878535	Identifier	true		878238	0					
ANR	878536	ReturnType	static int		878238	1					
ANR	878537	Identifier	step_until_inst		878238	2					
ANR	878538	ParameterList	"RCore * core , const char * instr , bool regex"		878238	3					
ANR	878539	Parameter	RCore * core	800:27:28241:28251	878238	0	True				
ANR	878540	ParameterType	RCore *		878238	0					
ANR	878541	Identifier	core		878238	1					
ANR	878542	Parameter	const char * instr	800:40:28254:28270	878238	1	True				
ANR	878543	ParameterType	const char *		878238	0					
ANR	878544	Identifier	instr		878238	1					
ANR	878545	Parameter	bool regex	800:59:28273:28282	878238	2	True				
ANR	878546	ParameterType	bool		878238	0					
ANR	878547	Identifier	regex		878238	1					
ANR	878548	CFGEntryNode	ENTRY		878238		True				
ANR	878549	CFGExitNode	EXIT		878238		True				
ANR	878550	InfiniteForNode	true		878238		True				
ANR	878551	Symbol	r_debug_reg_get		878238						
ANR	878552	Symbol	* core		878238						
ANR	878553	Symbol	core -> assembler		878238						
ANR	878554	Symbol	r_asm_op_get_asm		878238						
ANR	878555	Symbol	asmop		878238						
ANR	878556	Symbol	r_cons_is_breaked		878238						
ANR	878557	Symbol	core -> io		878238						
ANR	878558	Symbol	R_REG_TYPE_ALL		878238						
ANR	878559	Symbol	instr		878238						
ANR	878560	Symbol	ret		878238						
ANR	878561	Symbol	is_repeatable_inst		878238						
ANR	878562	Symbol	NULL		878238						
ANR	878563	Symbol	false		878238						
ANR	878564	Symbol	r_regex_match		878238						
ANR	878565	Symbol	core		878238						
ANR	878566	Symbol	regex		878238						
ANR	878567	Symbol	buf		878238						
ANR	878568	Symbol	r_debug_is_dead		878238						
ANR	878569	Symbol	pc		878238						
ANR	878570	Symbol	strstr		878238						
ANR	878571	Symbol	& asmop		878238						
ANR	878572	Symbol	r_str_trim_ro		878238						
ANR	878573	Symbol	true		878238						
ANR	878574	Symbol	buf_asm		878238						
ANR	878575	Symbol	r_asm_disassemble		878238						
ANR	878576	Symbol	core -> dbg		878238						
ANR	878577	Function	step_until_optype	852:0:29549:31573							
ANR	878578	FunctionDef	"step_until_optype (RCore * core , const char * _optypes)"		878577	0					
ANR	878579	CompoundStatement		852:64:29613:31573	878577	0					
ANR	878580	IdentifierDeclStatement	RAnalOp op ;	853:1:29616:29626	878577	0	True				
ANR	878581	IdentifierDecl	op		878577	0					
ANR	878582	IdentifierDeclType	RAnalOp		878577	0					
ANR	878583	Identifier	op		878577	1					
ANR	878584	IdentifierDeclStatement	ut8 buf [ 32 ] ;	854:1:29629:29640	878577	1	True				
ANR	878585	IdentifierDecl	buf [ 32 ]		878577	0					
ANR	878586	IdentifierDeclType	ut8 [ 32 ]		878577	0					
ANR	878587	Identifier	buf		878577	1					
ANR	878588	PrimaryExpression	32		878577	2					
ANR	878589	IdentifierDeclStatement	ut64 pc ;	855:1:29643:29650	878577	2	True				
ANR	878590	IdentifierDecl	pc		878577	0					
ANR	878591	IdentifierDeclType	ut64		878577	0					
ANR	878592	Identifier	pc		878577	1					
ANR	878593	IdentifierDeclStatement	int res = true ;	856:1:29653:29667	878577	3	True				
ANR	878594	IdentifierDecl	res = true		878577	0					
ANR	878595	IdentifierDeclType	int		878577	0					
ANR	878596	Identifier	res		878577	1					
ANR	878597	AssignmentExpression	res = true		878577	2		=			
ANR	878598	Identifier	true		878577	0					
ANR	878599	Identifier	true		878577	1					
ANR	878600	IdentifierDeclStatement	"bool debugMode = r_config_get_i ( core -> config , ""cfg.debug"" ) ;"	857:1:29670:29729	878577	4	True				
ANR	878601	IdentifierDecl	"debugMode = r_config_get_i ( core -> config , ""cfg.debug"" )"		878577	0					
ANR	878602	IdentifierDeclType	bool		878577	0					
ANR	878603	Identifier	debugMode		878577	1					
ANR	878604	AssignmentExpression	"debugMode = r_config_get_i ( core -> config , ""cfg.debug"" )"		878577	2		=			
ANR	878605	Identifier	debugMode		878577	0					
ANR	878606	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		878577	1					
ANR	878607	Callee	r_config_get_i		878577	0					
ANR	878608	Identifier	r_config_get_i		878577	0					
ANR	878609	ArgumentList	core -> config		878577	1					
ANR	878610	Argument	core -> config		878577	0					
ANR	878611	PtrMemberAccess	core -> config		878577	0					
ANR	878612	Identifier	core		878577	0					
ANR	878613	Identifier	config		878577	1					
ANR	878614	Argument	"""cfg.debug"""		878577	1					
ANR	878615	PrimaryExpression	"""cfg.debug"""		878577	0					
ANR	878616	IdentifierDeclStatement	RList * optypes_list = NULL ;	859:1:29733:29759	878577	5	True				
ANR	878617	IdentifierDecl	* optypes_list = NULL		878577	0					
ANR	878618	IdentifierDeclType	RList *		878577	0					
ANR	878619	Identifier	optypes_list		878577	1					
ANR	878620	AssignmentExpression	* optypes_list = NULL		878577	2		=			
ANR	878621	Identifier	NULL		878577	0					
ANR	878622	Identifier	NULL		878577	1					
ANR	878623	IdentifierDeclStatement	RListIter * iter ;	860:1:29762:29777	878577	6	True				
ANR	878624	IdentifierDecl	* iter		878577	0					
ANR	878625	IdentifierDeclType	RListIter *		878577	0					
ANR	878626	Identifier	iter		878577	1					
ANR	878627	IdentifierDeclStatement	"char * optype , * optypes = strdup ( r_str_trim_head ( ( char * ) _optypes ) ) ;"	861:1:29780:29849	878577	7	True				
ANR	878628	IdentifierDecl	* optype		878577	0					
ANR	878629	IdentifierDeclType	char *		878577	0					
ANR	878630	Identifier	optype		878577	1					
ANR	878631	IdentifierDecl	* optypes = strdup ( r_str_trim_head ( ( char * ) _optypes ) )		878577	1					
ANR	878632	IdentifierDeclType	char *		878577	0					
ANR	878633	Identifier	optypes		878577	1					
ANR	878634	AssignmentExpression	* optypes = strdup ( r_str_trim_head ( ( char * ) _optypes ) )		878577	2		=			
ANR	878635	Identifier	optypes		878577	0					
ANR	878636	CallExpression	strdup ( r_str_trim_head ( ( char * ) _optypes ) )		878577	1					
ANR	878637	Callee	strdup		878577	0					
ANR	878638	Identifier	strdup		878577	0					
ANR	878639	ArgumentList	r_str_trim_head ( ( char * ) _optypes )		878577	1					
ANR	878640	Argument	r_str_trim_head ( ( char * ) _optypes )		878577	0					
ANR	878641	CallExpression	r_str_trim_head ( ( char * ) _optypes )		878577	0					
ANR	878642	Callee	r_str_trim_head		878577	0					
ANR	878643	Identifier	r_str_trim_head		878577	0					
ANR	878644	ArgumentList	( char * ) _optypes		878577	1					
ANR	878645	Argument	( char * ) _optypes		878577	0					
ANR	878646	CastExpression	( char * ) _optypes		878577	0					
ANR	878647	CastTarget	char *		878577	0					
ANR	878648	Identifier	_optypes		878577	1					
ANR	878649	IfStatement	if ( ! core || ! core -> dbg )		878577	8					
ANR	878650	Condition	! core || ! core -> dbg	863:5:29857:29875	878577	0	True				
ANR	878651	OrExpression	! core || ! core -> dbg		878577	0		||			
ANR	878652	UnaryOperationExpression	! core		878577	0					
ANR	878653	UnaryOperator	!		878577	0					
ANR	878654	Identifier	core		878577	1					
ANR	878655	UnaryOperationExpression	! core -> dbg		878577	1					
ANR	878656	UnaryOperator	!		878577	0					
ANR	878657	PtrMemberAccess	core -> dbg		878577	1					
ANR	878658	Identifier	core		878577	0					
ANR	878659	Identifier	dbg		878577	1					
ANR	878660	CompoundStatement		12:26:264:264	878577	1					
ANR	878661	ExpressionStatement	"eprintf ( ""Wrong state\\n"" )"	864:2:29882:29907	878577	0	True				
ANR	878662	CallExpression	"eprintf ( ""Wrong state\\n"" )"		878577	0					
ANR	878663	Callee	eprintf		878577	0					
ANR	878664	Identifier	eprintf		878577	0					
ANR	878665	ArgumentList	"""Wrong state\\n"""		878577	1					
ANR	878666	Argument	"""Wrong state\\n"""		878577	0					
ANR	878667	PrimaryExpression	"""Wrong state\\n"""		878577	0					
ANR	878668	ExpressionStatement	res = false	865:2:29911:29922	878577	1	True				
ANR	878669	AssignmentExpression	res = false		878577	0		=			
ANR	878670	Identifier	res		878577	0					
ANR	878671	Identifier	false		878577	1					
ANR	878672	GotoStatement	goto end ;	866:2:29926:29934	878577	2	True				
ANR	878673	Identifier	end		878577	0					
ANR	878674	IfStatement	if ( ! optypes || ! * optypes )		878577	9					
ANR	878675	Condition	! optypes || ! * optypes	868:5:29944:29964	878577	0	True				
ANR	878676	OrExpression	! optypes || ! * optypes		878577	0		||			
ANR	878677	UnaryOperationExpression	! optypes		878577	0					
ANR	878678	UnaryOperator	!		878577	0					
ANR	878679	Identifier	optypes		878577	1					
ANR	878680	UnaryOperationExpression	! * optypes		878577	1					
ANR	878681	UnaryOperator	!		878577	0					
ANR	878682	UnaryOperationExpression	* optypes		878577	1					
ANR	878683	UnaryOperator	*		878577	0					
ANR	878684	Identifier	optypes		878577	1					
ANR	878685	CompoundStatement		17:28:353:353	878577	1					
ANR	878686	ExpressionStatement	"eprintf ( ""Missing optypes. Usage example: 'dsuo ucall ujmp'\\n"" )"	869:2:29971:30034	878577	0	True				
ANR	878687	CallExpression	"eprintf ( ""Missing optypes. Usage example: 'dsuo ucall ujmp'\\n"" )"		878577	0					
ANR	878688	Callee	eprintf		878577	0					
ANR	878689	Identifier	eprintf		878577	0					
ANR	878690	ArgumentList	"""Missing optypes. Usage example: 'dsuo ucall ujmp'\\n"""		878577	1					
ANR	878691	Argument	"""Missing optypes. Usage example: 'dsuo ucall ujmp'\\n"""		878577	0					
ANR	878692	PrimaryExpression	"""Missing optypes. Usage example: 'dsuo ucall ujmp'\\n"""		878577	0					
ANR	878693	ExpressionStatement	res = false	870:2:30038:30049	878577	1	True				
ANR	878694	AssignmentExpression	res = false		878577	0		=			
ANR	878695	Identifier	res		878577	0					
ANR	878696	Identifier	false		878577	1					
ANR	878697	GotoStatement	goto end ;	871:2:30053:30061	878577	2	True				
ANR	878698	Identifier	end		878577	0					
ANR	878699	ExpressionStatement	"optypes_list = r_str_split_list ( optypes , "" "" , 0 )"	874:1:30068:30117	878577	10	True				
ANR	878700	AssignmentExpression	"optypes_list = r_str_split_list ( optypes , "" "" , 0 )"		878577	0		=			
ANR	878701	Identifier	optypes_list		878577	0					
ANR	878702	CallExpression	"r_str_split_list ( optypes , "" "" , 0 )"		878577	1					
ANR	878703	Callee	r_str_split_list		878577	0					
ANR	878704	Identifier	r_str_split_list		878577	0					
ANR	878705	ArgumentList	optypes		878577	1					
ANR	878706	Argument	optypes		878577	0					
ANR	878707	Identifier	optypes		878577	0					
ANR	878708	Argument	""" """		878577	1					
ANR	878709	PrimaryExpression	""" """		878577	0					
ANR	878710	Argument	0		878577	2					
ANR	878711	PrimaryExpression	0		878577	0					
ANR	878712	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	876:1:30121:30151	878577	11	True				
ANR	878713	CallExpression	"r_cons_break_push ( NULL , NULL )"		878577	0					
ANR	878714	Callee	r_cons_break_push		878577	0					
ANR	878715	Identifier	r_cons_break_push		878577	0					
ANR	878716	ArgumentList	NULL		878577	1					
ANR	878717	Argument	NULL		878577	0					
ANR	878718	Identifier	NULL		878577	0					
ANR	878719	Argument	NULL		878577	1					
ANR	878720	Identifier	NULL		878577	0					
ANR	878721	ForStatement	for ( ; ; )		878577	12					
ANR	878722	CompoundStatement		64:2:1664:1722	878577	0					
ANR	878723	IfStatement	if ( r_cons_is_breaked ( ) )		878577	0					
ANR	878724	Condition	r_cons_is_breaked ( )	878:6:30171:30190	878577	0	True				
ANR	878725	CallExpression	r_cons_is_breaked ( )		878577	0					
ANR	878726	Callee	r_cons_is_breaked		878577	0					
ANR	878727	Identifier	r_cons_is_breaked		878577	0					
ANR	878728	ArgumentList			878577	1					
ANR	878729	CompoundStatement		27:28:579:579	878577	1					
ANR	878730	ExpressionStatement	core -> break_loop = true	879:3:30198:30221	878577	0	True				
ANR	878731	AssignmentExpression	core -> break_loop = true		878577	0		=			
ANR	878732	PtrMemberAccess	core -> break_loop		878577	0					
ANR	878733	Identifier	core		878577	0					
ANR	878734	Identifier	break_loop		878577	1					
ANR	878735	Identifier	true		878577	1					
ANR	878736	BreakStatement	break ;	880:3:30226:30231	878577	1	True				
ANR	878737	IfStatement	if ( debugMode )		878577	1					
ANR	878738	Condition	debugMode	882:6:30243:30251	878577	0	True				
ANR	878739	Identifier	debugMode		878577	0					
ANR	878740	CompoundStatement		31:17:640:640	878577	1					
ANR	878741	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		878577	0					
ANR	878742	Condition	r_debug_is_dead ( core -> dbg )	883:7:30263:30289	878577	0	True				
ANR	878743	CallExpression	r_debug_is_dead ( core -> dbg )		878577	0					
ANR	878744	Callee	r_debug_is_dead		878577	0					
ANR	878745	Identifier	r_debug_is_dead		878577	0					
ANR	878746	ArgumentList	core -> dbg		878577	1					
ANR	878747	Argument	core -> dbg		878577	0					
ANR	878748	PtrMemberAccess	core -> dbg		878577	0					
ANR	878749	Identifier	core		878577	0					
ANR	878750	Identifier	dbg		878577	1					
ANR	878751	CompoundStatement		32:36:678:678	878577	1					
ANR	878752	ExpressionStatement	core -> break_loop = true	884:4:30298:30321	878577	0	True				
ANR	878753	AssignmentExpression	core -> break_loop = true		878577	0		=			
ANR	878754	PtrMemberAccess	core -> break_loop		878577	0					
ANR	878755	Identifier	core		878577	0					
ANR	878756	Identifier	break_loop		878577	1					
ANR	878757	Identifier	true		878577	1					
ANR	878758	BreakStatement	break ;	885:4:30327:30332	878577	1	True				
ANR	878759	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	887:3:30342:30369	878577	1	True				
ANR	878760	CallExpression	"r_debug_step ( core -> dbg , 1 )"		878577	0					
ANR	878761	Callee	r_debug_step		878577	0					
ANR	878762	Identifier	r_debug_step		878577	0					
ANR	878763	ArgumentList	core -> dbg		878577	1					
ANR	878764	Argument	core -> dbg		878577	0					
ANR	878765	PtrMemberAccess	core -> dbg		878577	0					
ANR	878766	Identifier	core		878577	0					
ANR	878767	Identifier	dbg		878577	1					
ANR	878768	Argument	1		878577	1					
ANR	878769	PrimaryExpression	1		878577	0					
ANR	878770	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , core -> dbg -> reg -> name [ R_REG_NAME_PC ] )"	888:3:30374:30443	878577	2	True				
ANR	878771	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , core -> dbg -> reg -> name [ R_REG_NAME_PC ] )"		878577	0		=			
ANR	878772	Identifier	pc		878577	0					
ANR	878773	CallExpression	"r_debug_reg_get ( core -> dbg , core -> dbg -> reg -> name [ R_REG_NAME_PC ] )"		878577	1					
ANR	878774	Callee	r_debug_reg_get		878577	0					
ANR	878775	Identifier	r_debug_reg_get		878577	0					
ANR	878776	ArgumentList	core -> dbg		878577	1					
ANR	878777	Argument	core -> dbg		878577	0					
ANR	878778	PtrMemberAccess	core -> dbg		878577	0					
ANR	878779	Identifier	core		878577	0					
ANR	878780	Identifier	dbg		878577	1					
ANR	878781	Argument	core -> dbg -> reg -> name [ R_REG_NAME_PC ]		878577	1					
ANR	878782	ArrayIndexing	core -> dbg -> reg -> name [ R_REG_NAME_PC ]		878577	0					
ANR	878783	PtrMemberAccess	core -> dbg -> reg -> name		878577	0					
ANR	878784	PtrMemberAccess	core -> dbg -> reg		878577	0					
ANR	878785	PtrMemberAccess	core -> dbg		878577	0					
ANR	878786	Identifier	core		878577	0					
ANR	878787	Identifier	dbg		878577	1					
ANR	878788	Identifier	reg		878577	1					
ANR	878789	Identifier	name		878577	1					
ANR	878790	Identifier	R_REG_NAME_PC		878577	1					
ANR	878791	IfStatement	if ( ! core -> dbg -> iob . read_at )		878577	3					
ANR	878792	Condition	! core -> dbg -> iob . read_at	890:7:30488:30510	878577	0	True				
ANR	878793	UnaryOperationExpression	! core -> dbg -> iob . read_at		878577	0					
ANR	878794	UnaryOperator	!		878577	0					
ANR	878795	MemberAccess	core -> dbg -> iob . read_at		878577	1					
ANR	878796	PtrMemberAccess	core -> dbg -> iob		878577	0					
ANR	878797	PtrMemberAccess	core -> dbg		878577	0					
ANR	878798	Identifier	core		878577	0					
ANR	878799	Identifier	dbg		878577	1					
ANR	878800	Identifier	iob		878577	1					
ANR	878801	Identifier	read_at		878577	1					
ANR	878802	CompoundStatement		39:32:899:899	878577	1					
ANR	878803	ExpressionStatement	"eprintf ( ""ERROR\\n"" )"	891:4:30519:30538	878577	0	True				
ANR	878804	CallExpression	"eprintf ( ""ERROR\\n"" )"		878577	0					
ANR	878805	Callee	eprintf		878577	0					
ANR	878806	Identifier	eprintf		878577	0					
ANR	878807	ArgumentList	"""ERROR\\n"""		878577	1					
ANR	878808	Argument	"""ERROR\\n"""		878577	0					
ANR	878809	PrimaryExpression	"""ERROR\\n"""		878577	0					
ANR	878810	ExpressionStatement	res = false	892:4:30544:30555	878577	1	True				
ANR	878811	AssignmentExpression	res = false		878577	0		=			
ANR	878812	Identifier	res		878577	0					
ANR	878813	Identifier	false		878577	1					
ANR	878814	GotoStatement	goto cleanup_after_push ;	893:4:30561:30584	878577	2	True				
ANR	878815	Identifier	cleanup_after_push		878577	0					
ANR	878816	IfStatement	"if ( ! core -> dbg -> iob . read_at ( core -> dbg -> iob . io , pc , buf , sizeof ( buf ) ) )"		878577	4					
ANR	878817	Condition	"! core -> dbg -> iob . read_at ( core -> dbg -> iob . io , pc , buf , sizeof ( buf ) )"	895:7:30598:30663	878577	0	True				
ANR	878818	UnaryOperationExpression	"! core -> dbg -> iob . read_at ( core -> dbg -> iob . io , pc , buf , sizeof ( buf ) )"		878577	0					
ANR	878819	UnaryOperator	!		878577	0					
ANR	878820	CallExpression	"core -> dbg -> iob . read_at ( core -> dbg -> iob . io , pc , buf , sizeof ( buf ) )"		878577	1					
ANR	878821	Callee	core -> dbg -> iob . read_at		878577	0					
ANR	878822	MemberAccess	core -> dbg -> iob . read_at		878577	0					
ANR	878823	PtrMemberAccess	core -> dbg -> iob		878577	0					
ANR	878824	PtrMemberAccess	core -> dbg		878577	0					
ANR	878825	Identifier	core		878577	0					
ANR	878826	Identifier	dbg		878577	1					
ANR	878827	Identifier	iob		878577	1					
ANR	878828	Identifier	read_at		878577	1					
ANR	878829	ArgumentList	core -> dbg -> iob . io		878577	1					
ANR	878830	Argument	core -> dbg -> iob . io		878577	0					
ANR	878831	MemberAccess	core -> dbg -> iob . io		878577	0					
ANR	878832	PtrMemberAccess	core -> dbg -> iob		878577	0					
ANR	878833	PtrMemberAccess	core -> dbg		878577	0					
ANR	878834	Identifier	core		878577	0					
ANR	878835	Identifier	dbg		878577	1					
ANR	878836	Identifier	iob		878577	1					
ANR	878837	Identifier	io		878577	1					
ANR	878838	Argument	pc		878577	1					
ANR	878839	Identifier	pc		878577	0					
ANR	878840	Argument	buf		878577	2					
ANR	878841	Identifier	buf		878577	0					
ANR	878842	Argument	sizeof ( buf )		878577	3					
ANR	878843	SizeofExpression	sizeof ( buf )		878577	0					
ANR	878844	Sizeof	sizeof		878577	0					
ANR	878845	SizeofOperand	buf		878577	1					
ANR	878846	CompoundStatement		44:75:1052:1052	878577	1					
ANR	878847	ExpressionStatement	"eprintf ( ""ERROR\\n"" )"	896:4:30672:30691	878577	0	True				
ANR	878848	CallExpression	"eprintf ( ""ERROR\\n"" )"		878577	0					
ANR	878849	Callee	eprintf		878577	0					
ANR	878850	Identifier	eprintf		878577	0					
ANR	878851	ArgumentList	"""ERROR\\n"""		878577	1					
ANR	878852	Argument	"""ERROR\\n"""		878577	0					
ANR	878853	PrimaryExpression	"""ERROR\\n"""		878577	0					
ANR	878854	ExpressionStatement	res = false	897:4:30697:30708	878577	1	True				
ANR	878855	AssignmentExpression	res = false		878577	0		=			
ANR	878856	Identifier	res		878577	0					
ANR	878857	Identifier	false		878577	1					
ANR	878858	GotoStatement	goto cleanup_after_push ;	898:4:30714:30737	878577	2	True				
ANR	878859	Identifier	cleanup_after_push		878577	0					
ANR	878860	ElseStatement	else		878577	0					
ANR	878861	CompoundStatement		49:9:1139:1139	878577	0					
ANR	878862	ExpressionStatement	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"	901:3:30758:30810	878577	0	True				
ANR	878863	CallExpression	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"		878577	0					
ANR	878864	Callee	r_core_esil_step		878577	0					
ANR	878865	Identifier	r_core_esil_step		878577	0					
ANR	878866	ArgumentList	core		878577	1					
ANR	878867	Argument	core		878577	0					
ANR	878868	Identifier	core		878577	0					
ANR	878869	Argument	UT64_MAX		878577	1					
ANR	878870	Identifier	UT64_MAX		878577	0					
ANR	878871	Argument	NULL		878577	2					
ANR	878872	Identifier	NULL		878577	0					
ANR	878873	Argument	NULL		878577	3					
ANR	878874	Identifier	NULL		878577	0					
ANR	878875	Argument	false		878577	4					
ANR	878876	Identifier	false		878577	0					
ANR	878877	ExpressionStatement	"pc = r_reg_getv ( core -> anal -> reg , ""PC"" )"	902:3:30815:30854	878577	1	True				
ANR	878878	AssignmentExpression	"pc = r_reg_getv ( core -> anal -> reg , ""PC"" )"		878577	0		=			
ANR	878879	Identifier	pc		878577	0					
ANR	878880	CallExpression	"r_reg_getv ( core -> anal -> reg , ""PC"" )"		878577	1					
ANR	878881	Callee	r_reg_getv		878577	0					
ANR	878882	Identifier	r_reg_getv		878577	0					
ANR	878883	ArgumentList	core -> anal -> reg		878577	1					
ANR	878884	Argument	core -> anal -> reg		878577	0					
ANR	878885	PtrMemberAccess	core -> anal -> reg		878577	0					
ANR	878886	PtrMemberAccess	core -> anal		878577	0					
ANR	878887	Identifier	core		878577	0					
ANR	878888	Identifier	anal		878577	1					
ANR	878889	Identifier	reg		878577	1					
ANR	878890	Argument	"""PC"""		878577	1					
ANR	878891	PrimaryExpression	"""PC"""		878577	0					
ANR	878892	ExpressionStatement	"r_io_read_at ( core -> io , pc , buf , sizeof ( buf ) )"	904:2:30862:30908	878577	2	True				
ANR	878893	CallExpression	"r_io_read_at ( core -> io , pc , buf , sizeof ( buf ) )"		878577	0					
ANR	878894	Callee	r_io_read_at		878577	0					
ANR	878895	Identifier	r_io_read_at		878577	0					
ANR	878896	ArgumentList	core -> io		878577	1					
ANR	878897	Argument	core -> io		878577	0					
ANR	878898	PtrMemberAccess	core -> io		878577	0					
ANR	878899	Identifier	core		878577	0					
ANR	878900	Identifier	io		878577	1					
ANR	878901	Argument	pc		878577	1					
ANR	878902	Identifier	pc		878577	0					
ANR	878903	Argument	buf		878577	2					
ANR	878904	Identifier	buf		878577	0					
ANR	878905	Argument	sizeof ( buf )		878577	3					
ANR	878906	SizeofExpression	sizeof ( buf )		878577	0					
ANR	878907	Sizeof	sizeof		878577	0					
ANR	878908	SizeofOperand	buf		878577	1					
ANR	878909	IfStatement	"if ( ! r_anal_op ( core -> dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC ) )"		878577	3					
ANR	878910	Condition	"! r_anal_op ( core -> dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	906:6:30917:30994	878577	0	True				
ANR	878911	UnaryOperationExpression	"! r_anal_op ( core -> dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		878577	0					
ANR	878912	UnaryOperator	!		878577	0					
ANR	878913	CallExpression	"r_anal_op ( core -> dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		878577	1					
ANR	878914	Callee	r_anal_op		878577	0					
ANR	878915	Identifier	r_anal_op		878577	0					
ANR	878916	ArgumentList	core -> dbg -> anal		878577	1					
ANR	878917	Argument	core -> dbg -> anal		878577	0					
ANR	878918	PtrMemberAccess	core -> dbg -> anal		878577	0					
ANR	878919	PtrMemberAccess	core -> dbg		878577	0					
ANR	878920	Identifier	core		878577	0					
ANR	878921	Identifier	dbg		878577	1					
ANR	878922	Identifier	anal		878577	1					
ANR	878923	Argument	& op		878577	1					
ANR	878924	UnaryOperationExpression	& op		878577	0					
ANR	878925	UnaryOperator	&		878577	0					
ANR	878926	Identifier	op		878577	1					
ANR	878927	Argument	pc		878577	2					
ANR	878928	Identifier	pc		878577	0					
ANR	878929	Argument	buf		878577	3					
ANR	878930	Identifier	buf		878577	0					
ANR	878931	Argument	sizeof ( buf )		878577	4					
ANR	878932	SizeofExpression	sizeof ( buf )		878577	0					
ANR	878933	Sizeof	sizeof		878577	0					
ANR	878934	SizeofOperand	buf		878577	1					
ANR	878935	Argument	R_ANAL_OP_MASK_BASIC		878577	5					
ANR	878936	Identifier	R_ANAL_OP_MASK_BASIC		878577	0					
ANR	878937	CompoundStatement		55:86:1383:1383	878577	1					
ANR	878938	ExpressionStatement	"eprintf ( ""Error: r_anal_op failed\\n"" )"	907:3:31002:31039	878577	0	True				
ANR	878939	CallExpression	"eprintf ( ""Error: r_anal_op failed\\n"" )"		878577	0					
ANR	878940	Callee	eprintf		878577	0					
ANR	878941	Identifier	eprintf		878577	0					
ANR	878942	ArgumentList	"""Error: r_anal_op failed\\n"""		878577	1					
ANR	878943	Argument	"""Error: r_anal_op failed\\n"""		878577	0					
ANR	878944	PrimaryExpression	"""Error: r_anal_op failed\\n"""		878577	0					
ANR	878945	ExpressionStatement	res = false	908:3:31044:31055	878577	1	True				
ANR	878946	AssignmentExpression	res = false		878577	0		=			
ANR	878947	Identifier	res		878577	0					
ANR	878948	Identifier	false		878577	1					
ANR	878949	GotoStatement	goto cleanup_after_push ;	909:3:31060:31083	878577	2	True				
ANR	878950	Identifier	cleanup_after_push		878577	0					
ANR	878951	IdentifierDeclStatement	const char * optype_str = r_anal_optype_to_string ( op . type ) ;	915:2:31278:31336	878577	4	True				
ANR	878952	IdentifierDecl	* optype_str = r_anal_optype_to_string ( op . type )		878577	0					
ANR	878953	IdentifierDeclType	const char *		878577	0					
ANR	878954	Identifier	optype_str		878577	1					
ANR	878955	AssignmentExpression	* optype_str = r_anal_optype_to_string ( op . type )		878577	2		=			
ANR	878956	Identifier	optype_str		878577	0					
ANR	878957	CallExpression	r_anal_optype_to_string ( op . type )		878577	1					
ANR	878958	Callee	r_anal_optype_to_string		878577	0					
ANR	878959	Identifier	r_anal_optype_to_string		878577	0					
ANR	878960	ArgumentList	op . type		878577	1					
ANR	878961	Argument	op . type		878577	0					
ANR	878962	MemberAccess	op . type		878577	0					
ANR	878963	Identifier	op		878577	0					
ANR	878964	Identifier	type		878577	1					
ANR	878965	Statement	r_list_foreach	916:2:31340:31353	878577	5	True				
ANR	878966	Statement	(	916:17:31355:31355	878577	6	True				
ANR	878967	Statement	optypes_list	916:18:31356:31367	878577	7	True				
ANR	878968	Statement	","	916:30:31368:31368	878577	8	True				
ANR	878969	Statement	iter	916:32:31370:31373	878577	9	True				
ANR	878970	Statement	","	916:36:31374:31374	878577	10	True				
ANR	878971	Statement	optype	916:38:31376:31381	878577	11	True				
ANR	878972	Statement	)	916:44:31382:31382	878577	12	True				
ANR	878973	CompoundStatement		65:46:1770:1770	878577	13					
ANR	878974	IfStatement	"if ( ! strcmp ( optype_str , optype ) )"		878577	0					
ANR	878975	Condition	"! strcmp ( optype_str , optype )"	917:7:31393:31420	878577	0	True				
ANR	878976	UnaryOperationExpression	"! strcmp ( optype_str , optype )"		878577	0					
ANR	878977	UnaryOperator	!		878577	0					
ANR	878978	CallExpression	"strcmp ( optype_str , optype )"		878577	1					
ANR	878979	Callee	strcmp		878577	0					
ANR	878980	Identifier	strcmp		878577	0					
ANR	878981	ArgumentList	optype_str		878577	1					
ANR	878982	Argument	optype_str		878577	0					
ANR	878983	Identifier	optype_str		878577	0					
ANR	878984	Argument	optype		878577	1					
ANR	878985	Identifier	optype		878577	0					
ANR	878986	CompoundStatement		66:37:1809:1809	878577	1					
ANR	878987	GotoStatement	goto cleanup_after_push ;	918:4:31429:31452	878577	0	True				
ANR	878988	Identifier	cleanup_after_push		878577	0					
ANR	878989	Label	cleanup_after_push :	923:0:31467:31485	878577	13	True				
ANR	878990	Identifier	cleanup_after_push		878577	0					
ANR	878991	ExpressionStatement	r_cons_break_pop ( )	924:1:31488:31507	878577	14	True				
ANR	878992	CallExpression	r_cons_break_pop ( )		878577	0					
ANR	878993	Callee	r_cons_break_pop		878577	0					
ANR	878994	Identifier	r_cons_break_pop		878577	0					
ANR	878995	ArgumentList			878577	1					
ANR	878996	Label	end :	925:0:31509:31512	878577	15	True				
ANR	878997	Identifier	end		878577	0					
ANR	878998	ExpressionStatement	free ( optypes )	926:1:31515:31529	878577	16	True				
ANR	878999	CallExpression	free ( optypes )		878577	0					
ANR	879000	Callee	free		878577	0					
ANR	879001	Identifier	free		878577	0					
ANR	879002	ArgumentList	optypes		878577	1					
ANR	879003	Argument	optypes		878577	0					
ANR	879004	Identifier	optypes		878577	0					
ANR	879005	ExpressionStatement	r_list_free ( optypes_list )	927:1:31532:31558	878577	17	True				
ANR	879006	CallExpression	r_list_free ( optypes_list )		878577	0					
ANR	879007	Callee	r_list_free		878577	0					
ANR	879008	Identifier	r_list_free		878577	0					
ANR	879009	ArgumentList	optypes_list		878577	1					
ANR	879010	Argument	optypes_list		878577	0					
ANR	879011	Identifier	optypes_list		878577	0					
ANR	879012	ReturnStatement	return res ;	928:1:31561:31571	878577	18	True				
ANR	879013	Identifier	res		878577	0					
ANR	879014	ReturnType	static int		878577	1					
ANR	879015	Identifier	step_until_optype		878577	2					
ANR	879016	ParameterList	"RCore * core , const char * _optypes"		878577	3					
ANR	879017	Parameter	RCore * core	852:29:29578:29588	878577	0	True				
ANR	879018	ParameterType	RCore *		878577	0					
ANR	879019	Identifier	core		878577	1					
ANR	879020	Parameter	const char * _optypes	852:42:29591:29610	878577	1	True				
ANR	879021	ParameterType	const char *		878577	0					
ANR	879022	Identifier	_optypes		878577	1					
ANR	879023	CFGEntryNode	ENTRY		878577		True				
ANR	879024	CFGExitNode	EXIT		878577		True				
ANR	879025	InfiniteForNode	true		878577		True				
ANR	879026	Symbol	core -> dbg -> iob . io		878577						
ANR	879027	Symbol	core -> anal -> reg		878577						
ANR	879028	Symbol	R_REG_NAME_PC		878577						
ANR	879029	Symbol	r_debug_reg_get		878577						
ANR	879030	Symbol	& op		878577						
ANR	879031	Symbol	core -> dbg -> iob		878577						
ANR	879032	Symbol	* * core -> dbg -> reg		878577						
ANR	879033	Symbol	* core -> dbg -> reg		878577						
ANR	879034	Symbol	r_anal_op		878577						
ANR	879035	Symbol	strcmp		878577						
ANR	879036	Symbol	res		878577						
ANR	879037	Symbol	NULL		878577						
ANR	879038	Symbol	core -> dbg -> reg -> name		878577						
ANR	879039	Symbol	iter		878577						
ANR	879040	Symbol	* optypes		878577						
ANR	879041	Symbol	core -> dbg -> iob . read_at		878577						
ANR	879042	Symbol	core		878577						
ANR	879043	Symbol	* * * core		878577						
ANR	879044	Symbol	optypes		878577						
ANR	879045	Symbol	r_config_get_i		878577						
ANR	879046	Symbol	* core -> dbg -> reg -> name		878577						
ANR	879047	Symbol	true		878577						
ANR	879048	Symbol	r_reg_getv		878577						
ANR	879049	Symbol	debugMode		878577						
ANR	879050	Symbol	* core -> dbg		878577						
ANR	879051	Symbol	* core		878577						
ANR	879052	Symbol	r_str_split_list		878577						
ANR	879053	Symbol	r_anal_optype_to_string		878577						
ANR	879054	Symbol	core -> anal		878577						
ANR	879055	Symbol	R_ANAL_OP_MASK_BASIC		878577						
ANR	879056	Symbol	optype		878577						
ANR	879057	Symbol	core -> break_loop		878577						
ANR	879058	Symbol	r_cons_is_breaked		878577						
ANR	879059	Symbol	* * * core -> dbg		878577						
ANR	879060	Symbol	core -> io		878577						
ANR	879061	Symbol	r_str_trim_head		878577						
ANR	879062	Symbol	* R_REG_NAME_PC		878577						
ANR	879063	Symbol	* * * * core		878577						
ANR	879064	Symbol	UT64_MAX		878577						
ANR	879065	Symbol	* * core		878577						
ANR	879066	Symbol	core -> config		878577						
ANR	879067	Symbol	op		878577						
ANR	879068	Symbol	_optypes		878577						
ANR	879069	Symbol	op . type		878577						
ANR	879070	Symbol	core -> dbg -> anal		878577						
ANR	879071	Symbol	false		878577						
ANR	879072	Symbol	optype_str		878577						
ANR	879073	Symbol	buf		878577						
ANR	879074	Symbol	r_debug_is_dead		878577						
ANR	879075	Symbol	pc		878577						
ANR	879076	Symbol	* core -> anal		878577						
ANR	879077	Symbol	core -> dbg -> reg		878577						
ANR	879078	Symbol	strdup		878577						
ANR	879079	Symbol	optypes_list		878577						
ANR	879080	Symbol	core -> dbg		878577						
ANR	879081	Symbol	* * core -> dbg		878577						
ANR	879082	Function	step_until_flag	931:0:31576:32388							
ANR	879083	FunctionDef	"step_until_flag (RCore * core , const char * instr)"		879082	0					
ANR	879084	CompoundStatement		931:59:31635:32388	879082	0					
ANR	879085	IdentifierDeclStatement	const RList * list ;	932:1:31638:31655	879082	0	True				
ANR	879086	IdentifierDecl	* list		879082	0					
ANR	879087	IdentifierDeclType	const RList *		879082	0					
ANR	879088	Identifier	list		879082	1					
ANR	879089	IdentifierDeclStatement	RListIter * iter ;	933:1:31658:31673	879082	1	True				
ANR	879090	IdentifierDecl	* iter		879082	0					
ANR	879091	IdentifierDeclType	RListIter *		879082	0					
ANR	879092	Identifier	iter		879082	1					
ANR	879093	IdentifierDeclStatement	RFlagItem * f ;	934:1:31676:31688	879082	2	True				
ANR	879094	IdentifierDecl	* f		879082	0					
ANR	879095	IdentifierDeclType	RFlagItem *		879082	0					
ANR	879096	Identifier	f		879082	1					
ANR	879097	IdentifierDeclStatement	ut64 pc ;	935:1:31691:31698	879082	3	True				
ANR	879098	IdentifierDecl	pc		879082	0					
ANR	879099	IdentifierDeclType	ut64		879082	0					
ANR	879100	Identifier	pc		879082	1					
ANR	879101	ExpressionStatement	instr = r_str_trim_ro ( instr )	937:1:31702:31731	879082	4	True				
ANR	879102	AssignmentExpression	instr = r_str_trim_ro ( instr )		879082	0		=			
ANR	879103	Identifier	instr		879082	0					
ANR	879104	CallExpression	r_str_trim_ro ( instr )		879082	1					
ANR	879105	Callee	r_str_trim_ro		879082	0					
ANR	879106	Identifier	r_str_trim_ro		879082	0					
ANR	879107	ArgumentList	instr		879082	1					
ANR	879108	Argument	instr		879082	0					
ANR	879109	Identifier	instr		879082	0					
ANR	879110	IfStatement	if ( ! core || ! instr || ! core -> dbg )		879082	5					
ANR	879111	Condition	! core || ! instr || ! core -> dbg	938:5:31738:31766	879082	0	True				
ANR	879112	OrExpression	! core || ! instr || ! core -> dbg		879082	0		||			
ANR	879113	UnaryOperationExpression	! core		879082	0					
ANR	879114	UnaryOperator	!		879082	0					
ANR	879115	Identifier	core		879082	1					
ANR	879116	OrExpression	! instr || ! core -> dbg		879082	1		||			
ANR	879117	UnaryOperationExpression	! instr		879082	0					
ANR	879118	UnaryOperator	!		879082	0					
ANR	879119	Identifier	instr		879082	1					
ANR	879120	UnaryOperationExpression	! core -> dbg		879082	1					
ANR	879121	UnaryOperator	!		879082	0					
ANR	879122	PtrMemberAccess	core -> dbg		879082	1					
ANR	879123	Identifier	core		879082	0					
ANR	879124	Identifier	dbg		879082	1					
ANR	879125	CompoundStatement		8:36:133:133	879082	1					
ANR	879126	ExpressionStatement	"eprintf ( ""Wrong state\\n"" )"	939:2:31773:31798	879082	0	True				
ANR	879127	CallExpression	"eprintf ( ""Wrong state\\n"" )"		879082	0					
ANR	879128	Callee	eprintf		879082	0					
ANR	879129	Identifier	eprintf		879082	0					
ANR	879130	ArgumentList	"""Wrong state\\n"""		879082	1					
ANR	879131	Argument	"""Wrong state\\n"""		879082	0					
ANR	879132	PrimaryExpression	"""Wrong state\\n"""		879082	0					
ANR	879133	ReturnStatement	return false ;	940:2:31802:31814	879082	1	True				
ANR	879134	Identifier	false		879082	0					
ANR	879135	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	942:1:31820:31850	879082	6	True				
ANR	879136	CallExpression	"r_cons_break_push ( NULL , NULL )"		879082	0					
ANR	879137	Callee	r_cons_break_push		879082	0					
ANR	879138	Identifier	r_cons_break_push		879082	0					
ANR	879139	ArgumentList	NULL		879082	1					
ANR	879140	Argument	NULL		879082	0					
ANR	879141	Identifier	NULL		879082	0					
ANR	879142	Argument	NULL		879082	1					
ANR	879143	Identifier	NULL		879082	0					
ANR	879144	ForStatement	for ( ; ; )		879082	7					
ANR	879145	CompoundStatement		13:10:226:226	879082	0					
ANR	879146	IfStatement	if ( r_cons_is_breaked ( ) )		879082	0					
ANR	879147	Condition	r_cons_is_breaked ( )	944:6:31870:31889	879082	0	True				
ANR	879148	CallExpression	r_cons_is_breaked ( )		879082	0					
ANR	879149	Callee	r_cons_is_breaked		879082	0					
ANR	879150	Identifier	r_cons_is_breaked		879082	0					
ANR	879151	ArgumentList			879082	1					
ANR	879152	CompoundStatement		14:28:256:256	879082	1					
ANR	879153	BreakStatement	break ;	945:3:31897:31902	879082	0	True				
ANR	879154	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		879082	1					
ANR	879155	Condition	r_debug_is_dead ( core -> dbg )	947:6:31914:31940	879082	0	True				
ANR	879156	CallExpression	r_debug_is_dead ( core -> dbg )		879082	0					
ANR	879157	Callee	r_debug_is_dead		879082	0					
ANR	879158	Identifier	r_debug_is_dead		879082	0					
ANR	879159	ArgumentList	core -> dbg		879082	1					
ANR	879160	Argument	core -> dbg		879082	0					
ANR	879161	PtrMemberAccess	core -> dbg		879082	0					
ANR	879162	Identifier	core		879082	0					
ANR	879163	Identifier	dbg		879082	1					
ANR	879164	CompoundStatement		17:35:307:307	879082	1					
ANR	879165	BreakStatement	break ;	948:3:31948:31953	879082	0	True				
ANR	879166	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	950:2:31961:31988	879082	2	True				
ANR	879167	CallExpression	"r_debug_step ( core -> dbg , 1 )"		879082	0					
ANR	879168	Callee	r_debug_step		879082	0					
ANR	879169	Identifier	r_debug_step		879082	0					
ANR	879170	ArgumentList	core -> dbg		879082	1					
ANR	879171	Argument	core -> dbg		879082	0					
ANR	879172	PtrMemberAccess	core -> dbg		879082	0					
ANR	879173	Identifier	core		879082	0					
ANR	879174	Identifier	dbg		879082	1					
ANR	879175	Argument	1		879082	1					
ANR	879176	PrimaryExpression	1		879082	0					
ANR	879177	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"	951:2:31992:32043	879082	3	True				
ANR	879178	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"		879082	0					
ANR	879179	Callee	r_debug_reg_sync		879082	0					
ANR	879180	Identifier	r_debug_reg_sync		879082	0					
ANR	879181	ArgumentList	core -> dbg		879082	1					
ANR	879182	Argument	core -> dbg		879082	0					
ANR	879183	PtrMemberAccess	core -> dbg		879082	0					
ANR	879184	Identifier	core		879082	0					
ANR	879185	Identifier	dbg		879082	1					
ANR	879186	Argument	R_REG_TYPE_ALL		879082	1					
ANR	879187	Identifier	R_REG_TYPE_ALL		879082	0					
ANR	879188	Argument	false		879082	2					
ANR	879189	Identifier	false		879082	0					
ANR	879190	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"	952:2:32047:32085	879082	4	True				
ANR	879191	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		879082	0		=			
ANR	879192	Identifier	pc		879082	0					
ANR	879193	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		879082	1					
ANR	879194	Callee	r_debug_reg_get		879082	0					
ANR	879195	Identifier	r_debug_reg_get		879082	0					
ANR	879196	ArgumentList	core -> dbg		879082	1					
ANR	879197	Argument	core -> dbg		879082	0					
ANR	879198	PtrMemberAccess	core -> dbg		879082	0					
ANR	879199	Identifier	core		879082	0					
ANR	879200	Identifier	dbg		879082	1					
ANR	879201	Argument	"""PC"""		879082	1					
ANR	879202	PrimaryExpression	"""PC"""		879082	0					
ANR	879203	ExpressionStatement	"list = r_flag_get_list ( core -> flags , pc )"	953:2:32089:32129	879082	5	True				
ANR	879204	AssignmentExpression	"list = r_flag_get_list ( core -> flags , pc )"		879082	0		=			
ANR	879205	Identifier	list		879082	0					
ANR	879206	CallExpression	"r_flag_get_list ( core -> flags , pc )"		879082	1					
ANR	879207	Callee	r_flag_get_list		879082	0					
ANR	879208	Identifier	r_flag_get_list		879082	0					
ANR	879209	ArgumentList	core -> flags		879082	1					
ANR	879210	Argument	core -> flags		879082	0					
ANR	879211	PtrMemberAccess	core -> flags		879082	0					
ANR	879212	Identifier	core		879082	0					
ANR	879213	Identifier	flags		879082	1					
ANR	879214	Argument	pc		879082	1					
ANR	879215	Identifier	pc		879082	0					
ANR	879216	Statement	r_list_foreach	954:2:32133:32146	879082	6	True				
ANR	879217	Statement	(	954:17:32148:32148	879082	7	True				
ANR	879218	Statement	list	954:18:32149:32152	879082	8	True				
ANR	879219	Statement	","	954:22:32153:32153	879082	9	True				
ANR	879220	Statement	iter	954:24:32155:32158	879082	10	True				
ANR	879221	Statement	","	954:28:32159:32159	879082	11	True				
ANR	879222	Statement	f	954:30:32161:32161	879082	12	True				
ANR	879223	Statement	)	954:31:32162:32162	879082	13	True				
ANR	879224	CompoundStatement		24:33:528:528	879082	14					
ANR	879225	IfStatement	"if ( ! instr || ! * instr || ( f -> realname && strstr ( f -> realname , instr ) ) )"		879082	0					
ANR	879226	Condition	"! instr || ! * instr || ( f -> realname && strstr ( f -> realname , instr ) )"	955:7:32173:32235	879082	0	True				
ANR	879227	OrExpression	"! instr || ! * instr || ( f -> realname && strstr ( f -> realname , instr ) )"		879082	0		||			
ANR	879228	UnaryOperationExpression	! instr		879082	0					
ANR	879229	UnaryOperator	!		879082	0					
ANR	879230	Identifier	instr		879082	1					
ANR	879231	OrExpression	"! * instr || ( f -> realname && strstr ( f -> realname , instr ) )"		879082	1		||			
ANR	879232	UnaryOperationExpression	! * instr		879082	0					
ANR	879233	UnaryOperator	!		879082	0					
ANR	879234	UnaryOperationExpression	* instr		879082	1					
ANR	879235	UnaryOperator	*		879082	0					
ANR	879236	Identifier	instr		879082	1					
ANR	879237	AndExpression	"f -> realname && strstr ( f -> realname , instr )"		879082	1		&&			
ANR	879238	PtrMemberAccess	f -> realname		879082	0					
ANR	879239	Identifier	f		879082	0					
ANR	879240	Identifier	realname		879082	1					
ANR	879241	CallExpression	"strstr ( f -> realname , instr )"		879082	1					
ANR	879242	Callee	strstr		879082	0					
ANR	879243	Identifier	strstr		879082	0					
ANR	879244	ArgumentList	f -> realname		879082	1					
ANR	879245	Argument	f -> realname		879082	0					
ANR	879246	PtrMemberAccess	f -> realname		879082	0					
ANR	879247	Identifier	f		879082	0					
ANR	879248	Identifier	realname		879082	1					
ANR	879249	Argument	instr		879082	1					
ANR	879250	Identifier	instr		879082	0					
ANR	879251	CompoundStatement		25:72:602:602	879082	1					
ANR	879252	Statement	r_cons_printf	956:4:32244:32256	879082	0	True				
ANR	879253	Statement	(	956:18:32258:32258	879082	1	True				
ANR	879254	Statement	"""[ 0x%08"""	956:19:32259:32267	879082	2	True				
ANR	879255	Statement	PFMT64x	956:28:32268:32274	879082	3	True				
ANR	879256	Statement	""" ] %s\\n"""	956:35:32275:32283	879082	4	True				
ANR	879257	Statement	","	956:44:32284:32284	879082	5	True				
ANR	879258	Statement	f	957:6:32292:32292	879082	6	True				
ANR	879259	Statement	->	957:7:32293:32294	879082	7	True				
ANR	879260	Statement	offset	957:9:32295:32300	879082	8	True				
ANR	879261	Statement	","	957:15:32301:32301	879082	9	True				
ANR	879262	Statement	f	957:17:32303:32303	879082	10	True				
ANR	879263	Statement	->	957:18:32304:32305	879082	11	True				
ANR	879264	Statement	realname	957:20:32306:32313	879082	12	True				
ANR	879265	Statement	)	957:28:32314:32314	879082	13	True				
ANR	879266	ExpressionStatement		957:29:32315:32315	879082	14	True				
ANR	879267	GotoStatement	goto beach ;	958:4:32321:32331	879082	15	True				
ANR	879268	Identifier	beach		879082	0					
ANR	879269	Label	beach :	962:0:32345:32350	879082	8	True				
ANR	879270	Identifier	beach		879082	0					
ANR	879271	ExpressionStatement	r_cons_break_pop ( )	963:1:32353:32372	879082	9	True				
ANR	879272	CallExpression	r_cons_break_pop ( )		879082	0					
ANR	879273	Callee	r_cons_break_pop		879082	0					
ANR	879274	Identifier	r_cons_break_pop		879082	0					
ANR	879275	ArgumentList			879082	1					
ANR	879276	ReturnStatement	return true ;	964:1:32375:32386	879082	10	True				
ANR	879277	Identifier	true		879082	0					
ANR	879278	ReturnType	static int		879082	1					
ANR	879279	Identifier	step_until_flag		879082	2					
ANR	879280	ParameterList	"RCore * core , const char * instr"		879082	3					
ANR	879281	Parameter	RCore * core	931:27:31603:31613	879082	0	True				
ANR	879282	ParameterType	RCore *		879082	0					
ANR	879283	Identifier	core		879082	1					
ANR	879284	Parameter	const char * instr	931:40:31616:31632	879082	1	True				
ANR	879285	ParameterType	const char *		879082	0					
ANR	879286	Identifier	instr		879082	1					
ANR	879287	CFGEntryNode	ENTRY		879082		True				
ANR	879288	CFGExitNode	EXIT		879082		True				
ANR	879289	InfiniteForNode	true		879082		True				
ANR	879290	Symbol	NULL		879082						
ANR	879291	Symbol	f -> realname		879082						
ANR	879292	Symbol	f		879082						
ANR	879293	Symbol	r_debug_reg_get		879082						
ANR	879294	Symbol	* core		879082						
ANR	879295	Symbol	false		879082						
ANR	879296	Symbol	iter		879082						
ANR	879297	Symbol	core -> flags		879082						
ANR	879298	Symbol	* instr		879082						
ANR	879299	Symbol	list		879082						
ANR	879300	Symbol	* f		879082						
ANR	879301	Symbol	core		879082						
ANR	879302	Symbol	r_cons_is_breaked		879082						
ANR	879303	Symbol	r_debug_is_dead		879082						
ANR	879304	Symbol	pc		879082						
ANR	879305	Symbol	strstr		879082						
ANR	879306	Symbol	R_REG_TYPE_ALL		879082						
ANR	879307	Symbol	instr		879082						
ANR	879308	Symbol	r_str_trim_ro		879082						
ANR	879309	Symbol	true		879082						
ANR	879310	Symbol	r_flag_get_list		879082						
ANR	879311	Symbol	core -> dbg		879082						
ANR	879312	Function	step_until_eof	968:0:32416:32835							
ANR	879313	FunctionDef	step_until_eof (RCore * core)		879312	0					
ANR	879314	CompoundStatement		968:39:32455:32835	879312	0					
ANR	879315	IdentifierDeclStatement	int maxLoops = 200000 ;	969:1:32458:32479	879312	0	True				
ANR	879316	IdentifierDecl	maxLoops = 200000		879312	0					
ANR	879317	IdentifierDeclType	int		879312	0					
ANR	879318	Identifier	maxLoops		879312	1					
ANR	879319	AssignmentExpression	maxLoops = 200000		879312	2		=			
ANR	879320	Identifier	maxLoops		879312	0					
ANR	879321	PrimaryExpression	200000		879312	1					
ANR	879322	IdentifierDeclStatement	"ut64 off , now = r_debug_reg_get ( core -> dbg , ""SP"" ) ;"	970:1:32482:32531	879312	1	True				
ANR	879323	IdentifierDecl	off		879312	0					
ANR	879324	IdentifierDeclType	ut64		879312	0					
ANR	879325	Identifier	off		879312	1					
ANR	879326	IdentifierDecl	"now = r_debug_reg_get ( core -> dbg , ""SP"" )"		879312	1					
ANR	879327	IdentifierDeclType	ut64		879312	0					
ANR	879328	Identifier	now		879312	1					
ANR	879329	AssignmentExpression	"now = r_debug_reg_get ( core -> dbg , ""SP"" )"		879312	2		=			
ANR	879330	Identifier	now		879312	0					
ANR	879331	CallExpression	"r_debug_reg_get ( core -> dbg , ""SP"" )"		879312	1					
ANR	879332	Callee	r_debug_reg_get		879312	0					
ANR	879333	Identifier	r_debug_reg_get		879312	0					
ANR	879334	ArgumentList	core -> dbg		879312	1					
ANR	879335	Argument	core -> dbg		879312	0					
ANR	879336	PtrMemberAccess	core -> dbg		879312	0					
ANR	879337	Identifier	core		879312	0					
ANR	879338	Identifier	dbg		879312	1					
ANR	879339	Argument	"""SP"""		879312	1					
ANR	879340	PrimaryExpression	"""SP"""		879312	0					
ANR	879341	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	971:1:32534:32564	879312	2	True				
ANR	879342	CallExpression	"r_cons_break_push ( NULL , NULL )"		879312	0					
ANR	879343	Callee	r_cons_break_push		879312	0					
ANR	879344	Identifier	r_cons_break_push		879312	0					
ANR	879345	ArgumentList	NULL		879312	1					
ANR	879346	Argument	NULL		879312	0					
ANR	879347	Identifier	NULL		879312	0					
ANR	879348	Argument	NULL		879312	1					
ANR	879349	Identifier	NULL		879312	0					
ANR	879350	DoStatement	do		879312	3					
ANR	879351	CompoundStatement		5:4:114:114	879312	0					
ANR	879352	ExpressionStatement	"r_debug_step_over ( core -> dbg , 1 )"	974:2:32591:32623	879312	0	True				
ANR	879353	CallExpression	"r_debug_step_over ( core -> dbg , 1 )"		879312	0					
ANR	879354	Callee	r_debug_step_over		879312	0					
ANR	879355	Identifier	r_debug_step_over		879312	0					
ANR	879356	ArgumentList	core -> dbg		879312	1					
ANR	879357	Argument	core -> dbg		879312	0					
ANR	879358	PtrMemberAccess	core -> dbg		879312	0					
ANR	879359	Identifier	core		879312	0					
ANR	879360	Identifier	dbg		879312	1					
ANR	879361	Argument	1		879312	1					
ANR	879362	PrimaryExpression	1		879312	0					
ANR	879363	ExpressionStatement	"off = r_debug_reg_get ( core -> dbg , ""SP"" )"	975:2:32627:32666	879312	1	True				
ANR	879364	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , ""SP"" )"		879312	0		=			
ANR	879365	Identifier	off		879312	0					
ANR	879366	CallExpression	"r_debug_reg_get ( core -> dbg , ""SP"" )"		879312	1					
ANR	879367	Callee	r_debug_reg_get		879312	0					
ANR	879368	Identifier	r_debug_reg_get		879312	0					
ANR	879369	ArgumentList	core -> dbg		879312	1					
ANR	879370	Argument	core -> dbg		879312	0					
ANR	879371	PtrMemberAccess	core -> dbg		879312	0					
ANR	879372	Identifier	core		879312	0					
ANR	879373	Identifier	dbg		879312	1					
ANR	879374	Argument	"""SP"""		879312	1					
ANR	879375	PrimaryExpression	"""SP"""		879312	0					
ANR	879376	IfStatement	if ( -- maxLoops < 0 )		879312	2					
ANR	879377	Condition	-- maxLoops < 0	977:6:32701:32714	879312	0	True				
ANR	879378	RelationalExpression	-- maxLoops < 0		879312	0		<			
ANR	879379	UnaryExpression	-- maxLoops		879312	0					
ANR	879380	IncDec	--		879312	0					
ANR	879381	Identifier	maxLoops		879312	1					
ANR	879382	PrimaryExpression	0		879312	1					
ANR	879383	CompoundStatement		10:22:261:261	879312	1					
ANR	879384	ExpressionStatement	"eprintf ( ""Step loop limit exceeded\\n"" )"	978:3:32722:32760	879312	0	True				
ANR	879385	CallExpression	"eprintf ( ""Step loop limit exceeded\\n"" )"		879312	0					
ANR	879386	Callee	eprintf		879312	0					
ANR	879387	Identifier	eprintf		879312	0					
ANR	879388	ArgumentList	"""Step loop limit exceeded\\n"""		879312	1					
ANR	879389	Argument	"""Step loop limit exceeded\\n"""		879312	0					
ANR	879390	PrimaryExpression	"""Step loop limit exceeded\\n"""		879312	0					
ANR	879391	BreakStatement	break ;	979:3:32765:32770	879312	1	True				
ANR	879392	Condition	off <= now	981:10:32786:32795	879312	1	True				
ANR	879393	RelationalExpression	off <= now		879312	0		<=			
ANR	879394	Identifier	off		879312	0					
ANR	879395	Identifier	now		879312	1					
ANR	879396	ExpressionStatement	r_cons_break_pop ( )	982:1:32800:32819	879312	4	True				
ANR	879397	CallExpression	r_cons_break_pop ( )		879312	0					
ANR	879398	Callee	r_cons_break_pop		879312	0					
ANR	879399	Identifier	r_cons_break_pop		879312	0					
ANR	879400	ArgumentList			879312	1					
ANR	879401	ReturnStatement	return true ;	983:1:32822:32833	879312	5	True				
ANR	879402	Identifier	true		879312	0					
ANR	879403	ReturnType	static int		879312	1					
ANR	879404	Identifier	step_until_eof		879312	2					
ANR	879405	ParameterList	RCore * core		879312	3					
ANR	879406	Parameter	RCore * core	968:26:32442:32452	879312	0	True				
ANR	879407	ParameterType	RCore *		879312	0					
ANR	879408	Identifier	core		879312	1					
ANR	879409	CFGEntryNode	ENTRY		879312		True				
ANR	879410	CFGExitNode	EXIT		879312		True				
ANR	879411	Symbol	core		879312						
ANR	879412	Symbol	NULL		879312						
ANR	879413	Symbol	now		879312						
ANR	879414	Symbol	r_debug_reg_get		879312						
ANR	879415	Symbol	* core		879312						
ANR	879416	Symbol	true		879312						
ANR	879417	Symbol	maxLoops		879312						
ANR	879418	Symbol	off		879312						
ANR	879419	Symbol	core -> dbg		879312						
ANR	879420	Function	step_line	986:0:32838:33947							
ANR	879421	FunctionDef	"step_line (RCore * core , int times)"		879420	0					
ANR	879422	CompoundStatement		986:45:32883:33947	879420	0					
ANR	879423	IdentifierDeclStatement	"char file [ 512 ] , file2 [ 512 ] ;"	987:1:32886:32912	879420	0	True				
ANR	879424	IdentifierDecl	file [ 512 ]		879420	0					
ANR	879425	IdentifierDeclType	char [ 512 ]		879420	0					
ANR	879426	Identifier	file		879420	1					
ANR	879427	PrimaryExpression	512		879420	2					
ANR	879428	IdentifierDecl	file2 [ 512 ]		879420	1					
ANR	879429	IdentifierDeclType	char [ 512 ]		879420	0					
ANR	879430	Identifier	file2		879420	1					
ANR	879431	PrimaryExpression	512		879420	2					
ANR	879432	IdentifierDeclStatement	"int find_meta , line = - 1 , line2 = - 1 ;"	988:1:32915:32951	879420	1	True				
ANR	879433	IdentifierDecl	find_meta		879420	0					
ANR	879434	IdentifierDeclType	int		879420	0					
ANR	879435	Identifier	find_meta		879420	1					
ANR	879436	IdentifierDecl	line = - 1		879420	1					
ANR	879437	IdentifierDeclType	int		879420	0					
ANR	879438	Identifier	line		879420	1					
ANR	879439	AssignmentExpression	line = - 1		879420	2		=			
ANR	879440	Identifier	line		879420	0					
ANR	879441	UnaryOperationExpression	- 1		879420	1					
ANR	879442	UnaryOperator	-		879420	0					
ANR	879443	PrimaryExpression	1		879420	1					
ANR	879444	IdentifierDecl	line2 = - 1		879420	2					
ANR	879445	IdentifierDeclType	int		879420	0					
ANR	879446	Identifier	line2		879420	1					
ANR	879447	AssignmentExpression	line2 = - 1		879420	2		=			
ANR	879448	Identifier	line2		879420	0					
ANR	879449	UnaryOperationExpression	- 1		879420	1					
ANR	879450	UnaryOperator	-		879420	0					
ANR	879451	PrimaryExpression	1		879420	1					
ANR	879452	IdentifierDeclStatement	char * tmp_ptr = NULL ;	989:1:32954:32974	879420	2	True				
ANR	879453	IdentifierDecl	* tmp_ptr = NULL		879420	0					
ANR	879454	IdentifierDeclType	char *		879420	0					
ANR	879455	Identifier	tmp_ptr		879420	1					
ANR	879456	AssignmentExpression	* tmp_ptr = NULL		879420	2		=			
ANR	879457	Identifier	NULL		879420	0					
ANR	879458	Identifier	NULL		879420	1					
ANR	879459	IdentifierDeclStatement	"ut64 off = r_debug_reg_get ( core -> dbg , ""PC"" ) ;"	990:1:32977:33021	879420	3	True				
ANR	879460	IdentifierDecl	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"		879420	0					
ANR	879461	IdentifierDeclType	ut64		879420	0					
ANR	879462	Identifier	off		879420	1					
ANR	879463	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"		879420	2		=			
ANR	879464	Identifier	off		879420	0					
ANR	879465	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		879420	1					
ANR	879466	Callee	r_debug_reg_get		879420	0					
ANR	879467	Identifier	r_debug_reg_get		879420	0					
ANR	879468	ArgumentList	core -> dbg		879420	1					
ANR	879469	Argument	core -> dbg		879420	0					
ANR	879470	PtrMemberAccess	core -> dbg		879420	0					
ANR	879471	Identifier	core		879420	0					
ANR	879472	Identifier	dbg		879420	1					
ANR	879473	Argument	"""PC"""		879420	1					
ANR	879474	PrimaryExpression	"""PC"""		879420	0					
ANR	879475	Statement	if	991:1:33024:33025	879420	4	True				
ANR	879476	Statement	(	991:4:33027:33027	879420	5	True				
ANR	879477	Statement	off	991:5:33028:33030	879420	6	True				
ANR	879478	Statement	==	991:9:33032:33033	879420	7	True				
ANR	879479	Statement	0L	991:12:33035:33036	879420	8	True				
ANR	879480	Statement	L	991:14:33037:33037	879420	9	True				
ANR	879481	Statement	)	991:15:33038:33038	879420	10	True				
ANR	879482	CompoundStatement		6:17:156:156	879420	11					
ANR	879483	ExpressionStatement	"eprintf ( ""Cannot 'drn PC'\\n"" )"	992:2:33044:33073	879420	0	True				
ANR	879484	CallExpression	"eprintf ( ""Cannot 'drn PC'\\n"" )"		879420	0					
ANR	879485	Callee	eprintf		879420	0					
ANR	879486	Identifier	eprintf		879420	0					
ANR	879487	ArgumentList	"""Cannot 'drn PC'\\n"""		879420	1					
ANR	879488	Argument	"""Cannot 'drn PC'\\n"""		879420	0					
ANR	879489	PrimaryExpression	"""Cannot 'drn PC'\\n"""		879420	0					
ANR	879490	ReturnStatement	return false ;	993:2:33077:33089	879420	1	True				
ANR	879491	Identifier	false		879420	0					
ANR	879492	ExpressionStatement	file [ 0 ] = 0	995:1:33095:33106	879420	12	True				
ANR	879493	AssignmentExpression	file [ 0 ] = 0		879420	0		=			
ANR	879494	ArrayIndexing	file [ 0 ]		879420	0					
ANR	879495	Identifier	file		879420	0					
ANR	879496	PrimaryExpression	0		879420	1					
ANR	879497	PrimaryExpression	0		879420	1					
ANR	879498	ExpressionStatement	file2 [ 0 ] = 0	996:1:33109:33121	879420	13	True				
ANR	879499	AssignmentExpression	file2 [ 0 ] = 0		879420	0		=			
ANR	879500	ArrayIndexing	file2 [ 0 ]		879420	0					
ANR	879501	Identifier	file2		879420	0					
ANR	879502	PrimaryExpression	0		879420	1					
ANR	879503	PrimaryExpression	0		879420	1					
ANR	879504	IfStatement	"if ( r_bin_addr2line ( core -> bin , off , file , sizeof ( file ) , & line ) )"		879420	14					
ANR	879505	Condition	"r_bin_addr2line ( core -> bin , off , file , sizeof ( file ) , & line )"	997:5:33128:33187	879420	0	True				
ANR	879506	CallExpression	"r_bin_addr2line ( core -> bin , off , file , sizeof ( file ) , & line )"		879420	0					
ANR	879507	Callee	r_bin_addr2line		879420	0					
ANR	879508	Identifier	r_bin_addr2line		879420	0					
ANR	879509	ArgumentList	core -> bin		879420	1					
ANR	879510	Argument	core -> bin		879420	0					
ANR	879511	PtrMemberAccess	core -> bin		879420	0					
ANR	879512	Identifier	core		879420	0					
ANR	879513	Identifier	bin		879420	1					
ANR	879514	Argument	off		879420	1					
ANR	879515	Identifier	off		879420	0					
ANR	879516	Argument	file		879420	2					
ANR	879517	Identifier	file		879420	0					
ANR	879518	Argument	sizeof ( file )		879420	3					
ANR	879519	SizeofExpression	sizeof ( file )		879420	0					
ANR	879520	Sizeof	sizeof		879420	0					
ANR	879521	SizeofOperand	file		879420	1					
ANR	879522	Argument	& line		879420	4					
ANR	879523	UnaryOperationExpression	& line		879420	0					
ANR	879524	UnaryOperator	&		879420	0					
ANR	879525	Identifier	line		879420	1					
ANR	879526	CompoundStatement		13:2:310:355	879420	1					
ANR	879527	IdentifierDeclStatement	"char * ptr = r_file_slurp_line ( file , line , 0 ) ;"	998:2:33194:33239	879420	0	True				
ANR	879528	IdentifierDecl	"* ptr = r_file_slurp_line ( file , line , 0 )"		879420	0					
ANR	879529	IdentifierDeclType	char *		879420	0					
ANR	879530	Identifier	ptr		879420	1					
ANR	879531	AssignmentExpression	"* ptr = r_file_slurp_line ( file , line , 0 )"		879420	2		=			
ANR	879532	Identifier	ptr		879420	0					
ANR	879533	CallExpression	"r_file_slurp_line ( file , line , 0 )"		879420	1					
ANR	879534	Callee	r_file_slurp_line		879420	0					
ANR	879535	Identifier	r_file_slurp_line		879420	0					
ANR	879536	ArgumentList	file		879420	1					
ANR	879537	Argument	file		879420	0					
ANR	879538	Identifier	file		879420	0					
ANR	879539	Argument	line		879420	1					
ANR	879540	Identifier	line		879420	0					
ANR	879541	Argument	0		879420	2					
ANR	879542	PrimaryExpression	0		879420	0					
ANR	879543	Statement	eprintf	999:2:33243:33249	879420	1	True				
ANR	879544	Statement	(	999:10:33251:33251	879420	2	True				
ANR	879545	Statement	"""--> 0x%08"""	999:11:33252:33262	879420	3	True				
ANR	879546	Statement	PFMT64x	999:22:33263:33269	879420	4	True				
ANR	879547	Statement	""" %s : %d\\n"""	999:29:33270:33281	879420	5	True				
ANR	879548	Statement	","	999:41:33282:33282	879420	6	True				
ANR	879549	Statement	off	999:43:33284:33286	879420	7	True				
ANR	879550	Statement	","	999:46:33287:33287	879420	8	True				
ANR	879551	Statement	file	999:48:33289:33292	879420	9	True				
ANR	879552	Statement	","	999:52:33293:33293	879420	10	True				
ANR	879553	Statement	line	999:54:33295:33298	879420	11	True				
ANR	879554	Statement	)	999:58:33299:33299	879420	12	True				
ANR	879555	ExpressionStatement		999:59:33300:33300	879420	13	True				
ANR	879556	ExpressionStatement	"eprintf ( ""--> %s\\n"" , ptr )"	1000:2:33304:33329	879420	14	True				
ANR	879557	CallExpression	"eprintf ( ""--> %s\\n"" , ptr )"		879420	0					
ANR	879558	Callee	eprintf		879420	0					
ANR	879559	Identifier	eprintf		879420	0					
ANR	879560	ArgumentList	"""--> %s\\n"""		879420	1					
ANR	879561	Argument	"""--> %s\\n"""		879420	0					
ANR	879562	PrimaryExpression	"""--> %s\\n"""		879420	0					
ANR	879563	Argument	ptr		879420	1					
ANR	879564	Identifier	ptr		879420	0					
ANR	879565	ExpressionStatement	find_meta = false	1001:2:33333:33350	879420	15	True				
ANR	879566	AssignmentExpression	find_meta = false		879420	0		=			
ANR	879567	Identifier	find_meta		879420	0					
ANR	879568	Identifier	false		879420	1					
ANR	879569	ExpressionStatement	free ( ptr )	1002:2:33354:33364	879420	16	True				
ANR	879570	CallExpression	free ( ptr )		879420	0					
ANR	879571	Callee	free		879420	0					
ANR	879572	Identifier	free		879420	0					
ANR	879573	ArgumentList	ptr		879420	1					
ANR	879574	Argument	ptr		879420	0					
ANR	879575	Identifier	ptr		879420	0					
ANR	879576	ElseStatement	else		879420	0					
ANR	879577	CompoundStatement		18:8:490:490	879420	0					
ANR	879578	ExpressionStatement	"eprintf ( ""--> Stepping until dwarf line\\n"" )"	1004:2:33378:33421	879420	0	True				
ANR	879579	CallExpression	"eprintf ( ""--> Stepping until dwarf line\\n"" )"		879420	0					
ANR	879580	Callee	eprintf		879420	0					
ANR	879581	Identifier	eprintf		879420	0					
ANR	879582	ArgumentList	"""--> Stepping until dwarf line\\n"""		879420	1					
ANR	879583	Argument	"""--> Stepping until dwarf line\\n"""		879420	0					
ANR	879584	PrimaryExpression	"""--> Stepping until dwarf line\\n"""		879420	0					
ANR	879585	ExpressionStatement	find_meta = true	1005:2:33425:33441	879420	1	True				
ANR	879586	AssignmentExpression	find_meta = true		879420	0		=			
ANR	879587	Identifier	find_meta		879420	0					
ANR	879588	Identifier	true		879420	1					
ANR	879589	DoStatement	do		879420	15					
ANR	879590	CompoundStatement		22:4:566:566	879420	0					
ANR	879591	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	1008:2:33454:33481	879420	0	True				
ANR	879592	CallExpression	"r_debug_step ( core -> dbg , 1 )"		879420	0					
ANR	879593	Callee	r_debug_step		879420	0					
ANR	879594	Identifier	r_debug_step		879420	0					
ANR	879595	ArgumentList	core -> dbg		879420	1					
ANR	879596	Argument	core -> dbg		879420	0					
ANR	879597	PtrMemberAccess	core -> dbg		879420	0					
ANR	879598	Identifier	core		879420	0					
ANR	879599	Identifier	dbg		879420	1					
ANR	879600	Argument	1		879420	1					
ANR	879601	PrimaryExpression	1		879420	0					
ANR	879602	ExpressionStatement	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"	1009:2:33485:33524	879420	1	True				
ANR	879603	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"		879420	0		=			
ANR	879604	Identifier	off		879420	0					
ANR	879605	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		879420	1					
ANR	879606	Callee	r_debug_reg_get		879420	0					
ANR	879607	Identifier	r_debug_reg_get		879420	0					
ANR	879608	ArgumentList	core -> dbg		879420	1					
ANR	879609	Argument	core -> dbg		879420	0					
ANR	879610	PtrMemberAccess	core -> dbg		879420	0					
ANR	879611	Identifier	core		879420	0					
ANR	879612	Identifier	dbg		879420	1					
ANR	879613	Argument	"""PC"""		879420	1					
ANR	879614	PrimaryExpression	"""PC"""		879420	0					
ANR	879615	IfStatement	"if ( ! r_bin_addr2line ( core -> bin , off , file2 , sizeof ( file2 ) , & line2 ) )"		879420	2					
ANR	879616	Condition	"! r_bin_addr2line ( core -> bin , off , file2 , sizeof ( file2 ) , & line2 )"	1010:6:33532:33595	879420	0	True				
ANR	879617	UnaryOperationExpression	"! r_bin_addr2line ( core -> bin , off , file2 , sizeof ( file2 ) , & line2 )"		879420	0					
ANR	879618	UnaryOperator	!		879420	0					
ANR	879619	CallExpression	"r_bin_addr2line ( core -> bin , off , file2 , sizeof ( file2 ) , & line2 )"		879420	1					
ANR	879620	Callee	r_bin_addr2line		879420	0					
ANR	879621	Identifier	r_bin_addr2line		879420	0					
ANR	879622	ArgumentList	core -> bin		879420	1					
ANR	879623	Argument	core -> bin		879420	0					
ANR	879624	PtrMemberAccess	core -> bin		879420	0					
ANR	879625	Identifier	core		879420	0					
ANR	879626	Identifier	bin		879420	1					
ANR	879627	Argument	off		879420	1					
ANR	879628	Identifier	off		879420	0					
ANR	879629	Argument	file2		879420	2					
ANR	879630	Identifier	file2		879420	0					
ANR	879631	Argument	sizeof ( file2 )		879420	3					
ANR	879632	SizeofExpression	sizeof ( file2 )		879420	0					
ANR	879633	Sizeof	sizeof		879420	0					
ANR	879634	SizeofOperand	file2		879420	1					
ANR	879635	Argument	& line2		879420	4					
ANR	879636	UnaryOperationExpression	& line2		879420	0					
ANR	879637	UnaryOperator	&		879420	0					
ANR	879638	Identifier	line2		879420	1					
ANR	879639	CompoundStatement		25:72:714:714	879420	1					
ANR	879640	IfStatement	if ( find_meta )		879420	0					
ANR	879641	Condition	find_meta	1011:7:33607:33615	879420	0	True				
ANR	879642	Identifier	find_meta		879420	0					
ANR	879643	ContinueStatement	continue ;	1012:4:33622:33630	879420	1	True				
ANR	879644	Statement	eprintf	1013:3:33635:33641	879420	1	True				
ANR	879645	Statement	(	1013:11:33643:33643	879420	2	True				
ANR	879646	Statement	"""Cannot retrieve dwarf info at 0x%08"""	1013:12:33644:33680	879420	3	True				
ANR	879647	Statement	PFMT64x	1013:49:33681:33687	879420	4	True				
ANR	879648	Statement	"""\\n"""	1013:56:33688:33691	879420	5	True				
ANR	879649	Statement	","	1013:60:33692:33692	879420	6	True				
ANR	879650	Statement	off	1013:62:33694:33696	879420	7	True				
ANR	879651	Statement	)	1013:65:33697:33697	879420	8	True				
ANR	879652	ExpressionStatement		1013:66:33698:33698	879420	9	True				
ANR	879653	ReturnStatement	return false ;	1014:3:33703:33715	879420	10	True				
ANR	879654	Identifier	false		879420	0					
ANR	879655	Condition	"! strcmp ( file , file2 ) && line == line2"	1016:10:33731:33768	879420	1	True				
ANR	879656	AndExpression	"! strcmp ( file , file2 ) && line == line2"		879420	0		&&			
ANR	879657	UnaryOperationExpression	"! strcmp ( file , file2 )"		879420	0					
ANR	879658	UnaryOperator	!		879420	0					
ANR	879659	CallExpression	"strcmp ( file , file2 )"		879420	1					
ANR	879660	Callee	strcmp		879420	0					
ANR	879661	Identifier	strcmp		879420	0					
ANR	879662	ArgumentList	file		879420	1					
ANR	879663	Argument	file		879420	0					
ANR	879664	Identifier	file		879420	0					
ANR	879665	Argument	file2		879420	1					
ANR	879666	Identifier	file2		879420	0					
ANR	879667	EqualityExpression	line == line2		879420	1		==			
ANR	879668	Identifier	line		879420	0					
ANR	879669	Identifier	line2		879420	1					
ANR	879670	Statement	eprintf	1018:1:33774:33780	879420	16	True				
ANR	879671	Statement	(	1018:9:33782:33782	879420	17	True				
ANR	879672	Statement	"""--> 0x%08"""	1018:10:33783:33793	879420	18	True				
ANR	879673	Statement	PFMT64x	1018:21:33794:33800	879420	19	True				
ANR	879674	Statement	""" %s : %d\\n"""	1018:28:33801:33812	879420	20	True				
ANR	879675	Statement	","	1018:40:33813:33813	879420	21	True				
ANR	879676	Statement	off	1018:42:33815:33817	879420	22	True				
ANR	879677	Statement	","	1018:45:33818:33818	879420	23	True				
ANR	879678	Statement	file2	1018:47:33820:33824	879420	24	True				
ANR	879679	Statement	","	1018:52:33825:33825	879420	25	True				
ANR	879680	Statement	line2	1018:54:33827:33831	879420	26	True				
ANR	879681	Statement	)	1018:59:33832:33832	879420	27	True				
ANR	879682	ExpressionStatement		1018:60:33833:33833	879420	28	True				
ANR	879683	ExpressionStatement	"tmp_ptr = r_file_slurp_line ( file2 , line2 , 0 )"	1019:1:33836:33881	879420	29	True				
ANR	879684	AssignmentExpression	"tmp_ptr = r_file_slurp_line ( file2 , line2 , 0 )"		879420	0		=			
ANR	879685	Identifier	tmp_ptr		879420	0					
ANR	879686	CallExpression	"r_file_slurp_line ( file2 , line2 , 0 )"		879420	1					
ANR	879687	Callee	r_file_slurp_line		879420	0					
ANR	879688	Identifier	r_file_slurp_line		879420	0					
ANR	879689	ArgumentList	file2		879420	1					
ANR	879690	Argument	file2		879420	0					
ANR	879691	Identifier	file2		879420	0					
ANR	879692	Argument	line2		879420	1					
ANR	879693	Identifier	line2		879420	0					
ANR	879694	Argument	0		879420	2					
ANR	879695	PrimaryExpression	0		879420	0					
ANR	879696	ExpressionStatement	"eprintf ( ""--> %s\\n"" , tmp_ptr )"	1020:1:33884:33913	879420	30	True				
ANR	879697	CallExpression	"eprintf ( ""--> %s\\n"" , tmp_ptr )"		879420	0					
ANR	879698	Callee	eprintf		879420	0					
ANR	879699	Identifier	eprintf		879420	0					
ANR	879700	ArgumentList	"""--> %s\\n"""		879420	1					
ANR	879701	Argument	"""--> %s\\n"""		879420	0					
ANR	879702	PrimaryExpression	"""--> %s\\n"""		879420	0					
ANR	879703	Argument	tmp_ptr		879420	1					
ANR	879704	Identifier	tmp_ptr		879420	0					
ANR	879705	ExpressionStatement	free ( tmp_ptr )	1021:1:33916:33930	879420	31	True				
ANR	879706	CallExpression	free ( tmp_ptr )		879420	0					
ANR	879707	Callee	free		879420	0					
ANR	879708	Identifier	free		879420	0					
ANR	879709	ArgumentList	tmp_ptr		879420	1					
ANR	879710	Argument	tmp_ptr		879420	0					
ANR	879711	Identifier	tmp_ptr		879420	0					
ANR	879712	ReturnStatement	return true ;	1023:1:33934:33945	879420	32	True				
ANR	879713	Identifier	true		879420	0					
ANR	879714	ReturnType	static int		879420	1					
ANR	879715	Identifier	step_line		879420	2					
ANR	879716	ParameterList	"RCore * core , int times"		879420	3					
ANR	879717	Parameter	RCore * core	986:21:32859:32869	879420	0	True				
ANR	879718	ParameterType	RCore *		879420	0					
ANR	879719	Identifier	core		879420	1					
ANR	879720	Parameter	int times	986:34:32872:32880	879420	1	True				
ANR	879721	ParameterType	int		879420	0					
ANR	879722	Identifier	times		879420	1					
ANR	879723	CFGEntryNode	ENTRY		879420		True				
ANR	879724	CFGExitNode	EXIT		879420		True				
ANR	879725	Symbol	strcmp		879420						
ANR	879726	Symbol	NULL		879420						
ANR	879727	Symbol	& line		879420						
ANR	879728	Symbol	line		879420						
ANR	879729	Symbol	r_debug_reg_get		879420						
ANR	879730	Symbol	* core		879420						
ANR	879731	Symbol	false		879420						
ANR	879732	Symbol	tmp_ptr		879420						
ANR	879733	Symbol	* file		879420						
ANR	879734	Symbol	r_bin_addr2line		879420						
ANR	879735	Symbol	off		879420						
ANR	879736	Symbol	* file2		879420						
ANR	879737	Symbol	ptr		879420						
ANR	879738	Symbol	& line2		879420						
ANR	879739	Symbol	core		879420						
ANR	879740	Symbol	r_file_slurp_line		879420						
ANR	879741	Symbol	times		879420						
ANR	879742	Symbol	file		879420						
ANR	879743	Symbol	find_meta		879420						
ANR	879744	Symbol	file2		879420						
ANR	879745	Symbol	true		879420						
ANR	879746	Symbol	line2		879420						
ANR	879747	Symbol	core -> bin		879420						
ANR	879748	Symbol	core -> dbg		879420						
ANR	879749	Function	cmd_debug_pid	1026:0:33950:37656							
ANR	879750	FunctionDef	"cmd_debug_pid (RCore * core , const char * input)"		879749	0					
ANR	879751	CompoundStatement		1026:58:34008:37656	879749	0					
ANR	879752	IdentifierDeclStatement	"int pid , sig ;"	1027:1:34011:34023	879749	0	True				
ANR	879753	IdentifierDecl	pid		879749	0					
ANR	879754	IdentifierDeclType	int		879749	0					
ANR	879755	Identifier	pid		879749	1					
ANR	879756	IdentifierDecl	sig		879749	1					
ANR	879757	IdentifierDeclType	int		879749	0					
ANR	879758	Identifier	sig		879749	1					
ANR	879759	IdentifierDeclStatement	const char * ptr ;	1028:1:34026:34041	879749	1	True				
ANR	879760	IdentifierDecl	* ptr		879749	0					
ANR	879761	IdentifierDeclType	const char *		879749	0					
ANR	879762	Identifier	ptr		879749	1					
ANR	879763	SwitchStatement	switch ( input [ 1 ] )		879749	2					
ANR	879764	Condition	input [ 1 ]	1029:9:34052:34059	879749	0	True				
ANR	879765	ArrayIndexing	input [ 1 ]		879749	0					
ANR	879766	Identifier	input		879749	0					
ANR	879767	PrimaryExpression	1		879749	1					
ANR	879768	CompoundStatement		4:19:53:53	879749	1					
ANR	879769	Label	case '\\0' :	1030:1:34065:34074	879749	0	True				
ANR	879770	ExpressionStatement	"eprintf ( ""Selected: %d %d\\n"" , core -> dbg -> pid , core -> dbg -> tid )"	1031:2:34086:34147	879749	1	True				
ANR	879771	CallExpression	"eprintf ( ""Selected: %d %d\\n"" , core -> dbg -> pid , core -> dbg -> tid )"		879749	0					
ANR	879772	Callee	eprintf		879749	0					
ANR	879773	Identifier	eprintf		879749	0					
ANR	879774	ArgumentList	"""Selected: %d %d\\n"""		879749	1					
ANR	879775	Argument	"""Selected: %d %d\\n"""		879749	0					
ANR	879776	PrimaryExpression	"""Selected: %d %d\\n"""		879749	0					
ANR	879777	Argument	core -> dbg -> pid		879749	1					
ANR	879778	PtrMemberAccess	core -> dbg -> pid		879749	0					
ANR	879779	PtrMemberAccess	core -> dbg		879749	0					
ANR	879780	Identifier	core		879749	0					
ANR	879781	Identifier	dbg		879749	1					
ANR	879782	Identifier	pid		879749	1					
ANR	879783	Argument	core -> dbg -> tid		879749	2					
ANR	879784	PtrMemberAccess	core -> dbg -> tid		879749	0					
ANR	879785	PtrMemberAccess	core -> dbg		879749	0					
ANR	879786	Identifier	core		879749	0					
ANR	879787	Identifier	dbg		879749	1					
ANR	879788	Identifier	tid		879749	1					
ANR	879789	ExpressionStatement	"r_debug_pid_list ( core -> dbg , core -> dbg -> pid , 0 )"	1032:2:34151:34198	879749	2	True				
ANR	879790	CallExpression	"r_debug_pid_list ( core -> dbg , core -> dbg -> pid , 0 )"		879749	0					
ANR	879791	Callee	r_debug_pid_list		879749	0					
ANR	879792	Identifier	r_debug_pid_list		879749	0					
ANR	879793	ArgumentList	core -> dbg		879749	1					
ANR	879794	Argument	core -> dbg		879749	0					
ANR	879795	PtrMemberAccess	core -> dbg		879749	0					
ANR	879796	Identifier	core		879749	0					
ANR	879797	Identifier	dbg		879749	1					
ANR	879798	Argument	core -> dbg -> pid		879749	1					
ANR	879799	PtrMemberAccess	core -> dbg -> pid		879749	0					
ANR	879800	PtrMemberAccess	core -> dbg		879749	0					
ANR	879801	Identifier	core		879749	0					
ANR	879802	Identifier	dbg		879749	1					
ANR	879803	Identifier	pid		879749	1					
ANR	879804	Argument	0		879749	2					
ANR	879805	PrimaryExpression	0		879749	0					
ANR	879806	BreakStatement	break ;	1033:2:34202:34207	879749	3	True				
ANR	879807	Label	case '-' :	1034:1:34210:34218	879749	4	True				
ANR	879808	IfStatement	if ( input [ 2 ] == ' ' )		879749	5					
ANR	879809	Condition	input [ 2 ] == ' '	1035:6:34235:34248	879749	0	True				
ANR	879810	EqualityExpression	input [ 2 ] == ' '		879749	0		==			
ANR	879811	ArrayIndexing	input [ 2 ]		879749	0					
ANR	879812	Identifier	input		879749	0					
ANR	879813	PrimaryExpression	2		879749	1					
ANR	879814	PrimaryExpression	' '		879749	1					
ANR	879815	CompoundStatement		10:22:242:242	879749	1					
ANR	879816	ExpressionStatement	"r_debug_detach ( core -> dbg , r_num_math ( core -> num , input + 2 ) )"	1036:3:34256:34317	879749	0	True				
ANR	879817	CallExpression	"r_debug_detach ( core -> dbg , r_num_math ( core -> num , input + 2 ) )"		879749	0					
ANR	879818	Callee	r_debug_detach		879749	0					
ANR	879819	Identifier	r_debug_detach		879749	0					
ANR	879820	ArgumentList	core -> dbg		879749	1					
ANR	879821	Argument	core -> dbg		879749	0					
ANR	879822	PtrMemberAccess	core -> dbg		879749	0					
ANR	879823	Identifier	core		879749	0					
ANR	879824	Identifier	dbg		879749	1					
ANR	879825	Argument	"r_num_math ( core -> num , input + 2 )"		879749	1					
ANR	879826	CallExpression	"r_num_math ( core -> num , input + 2 )"		879749	0					
ANR	879827	Callee	r_num_math		879749	0					
ANR	879828	Identifier	r_num_math		879749	0					
ANR	879829	ArgumentList	core -> num		879749	1					
ANR	879830	Argument	core -> num		879749	0					
ANR	879831	PtrMemberAccess	core -> num		879749	0					
ANR	879832	Identifier	core		879749	0					
ANR	879833	Identifier	num		879749	1					
ANR	879834	Argument	input + 2		879749	1					
ANR	879835	AdditiveExpression	input + 2		879749	0		+			
ANR	879836	Identifier	input		879749	0					
ANR	879837	PrimaryExpression	2		879749	1					
ANR	879838	ElseStatement	else		879749	0					
ANR	879839	CompoundStatement		12:9:319:319	879749	0					
ANR	879840	ExpressionStatement	"r_debug_detach ( core -> dbg , core -> dbg -> pid )"	1038:3:34333:34375	879749	0	True				
ANR	879841	CallExpression	"r_debug_detach ( core -> dbg , core -> dbg -> pid )"		879749	0					
ANR	879842	Callee	r_debug_detach		879749	0					
ANR	879843	Identifier	r_debug_detach		879749	0					
ANR	879844	ArgumentList	core -> dbg		879749	1					
ANR	879845	Argument	core -> dbg		879749	0					
ANR	879846	PtrMemberAccess	core -> dbg		879749	0					
ANR	879847	Identifier	core		879749	0					
ANR	879848	Identifier	dbg		879749	1					
ANR	879849	Argument	core -> dbg -> pid		879749	1					
ANR	879850	PtrMemberAccess	core -> dbg -> pid		879749	0					
ANR	879851	PtrMemberAccess	core -> dbg		879749	0					
ANR	879852	Identifier	core		879749	0					
ANR	879853	Identifier	dbg		879749	1					
ANR	879854	Identifier	pid		879749	1					
ANR	879855	BreakStatement	break ;	1040:2:34383:34388	879749	6	True				
ANR	879856	Label	case 'c' :	1041:1:34391:34399	879749	7	True				
ANR	879857	IfStatement	if ( core -> dbg -> forked_pid != - 1 )		879749	8					
ANR	879858	Condition	core -> dbg -> forked_pid != - 1	1042:6:34416:34442	879749	0	True				
ANR	879859	EqualityExpression	core -> dbg -> forked_pid != - 1		879749	0		!=			
ANR	879860	PtrMemberAccess	core -> dbg -> forked_pid		879749	0					
ANR	879861	PtrMemberAccess	core -> dbg		879749	0					
ANR	879862	Identifier	core		879749	0					
ANR	879863	Identifier	dbg		879749	1					
ANR	879864	Identifier	forked_pid		879749	1					
ANR	879865	UnaryOperationExpression	- 1		879749	1					
ANR	879866	UnaryOperator	-		879749	0					
ANR	879867	PrimaryExpression	1		879749	1					
ANR	879868	CompoundStatement		17:35:436:436	879749	1					
ANR	879869	IfStatement	if ( input [ 2 ] == '*' )		879749	0					
ANR	879870	Condition	input [ 2 ] == '*'	1043:7:34454:34468	879749	0	True				
ANR	879871	EqualityExpression	input [ 2 ] == '*'		879749	0		==			
ANR	879872	ArrayIndexing	input [ 2 ]		879749	0					
ANR	879873	Identifier	input		879749	0					
ANR	879874	PrimaryExpression	2		879749	1					
ANR	879875	PrimaryExpression	'*'		879749	1					
ANR	879876	CompoundStatement		18:24:462:462	879749	1					
ANR	879877	ExpressionStatement	"eprintf ( ""dp %d\\n"" , core -> dbg -> forked_pid )"	1044:4:34477:34519	879749	0	True				
ANR	879878	CallExpression	"eprintf ( ""dp %d\\n"" , core -> dbg -> forked_pid )"		879749	0					
ANR	879879	Callee	eprintf		879749	0					
ANR	879880	Identifier	eprintf		879749	0					
ANR	879881	ArgumentList	"""dp %d\\n"""		879749	1					
ANR	879882	Argument	"""dp %d\\n"""		879749	0					
ANR	879883	PrimaryExpression	"""dp %d\\n"""		879749	0					
ANR	879884	Argument	core -> dbg -> forked_pid		879749	1					
ANR	879885	PtrMemberAccess	core -> dbg -> forked_pid		879749	0					
ANR	879886	PtrMemberAccess	core -> dbg		879749	0					
ANR	879887	Identifier	core		879749	0					
ANR	879888	Identifier	dbg		879749	1					
ANR	879889	Identifier	forked_pid		879749	1					
ANR	879890	ElseStatement	else		879749	0					
ANR	879891	CompoundStatement		20:10:522:522	879749	0					
ANR	879892	ExpressionStatement	"r_debug_select ( core -> dbg , core -> dbg -> forked_pid , core -> dbg -> tid )"	1046:4:34537:34602	879749	0	True				
ANR	879893	CallExpression	"r_debug_select ( core -> dbg , core -> dbg -> forked_pid , core -> dbg -> tid )"		879749	0					
ANR	879894	Callee	r_debug_select		879749	0					
ANR	879895	Identifier	r_debug_select		879749	0					
ANR	879896	ArgumentList	core -> dbg		879749	1					
ANR	879897	Argument	core -> dbg		879749	0					
ANR	879898	PtrMemberAccess	core -> dbg		879749	0					
ANR	879899	Identifier	core		879749	0					
ANR	879900	Identifier	dbg		879749	1					
ANR	879901	Argument	core -> dbg -> forked_pid		879749	1					
ANR	879902	PtrMemberAccess	core -> dbg -> forked_pid		879749	0					
ANR	879903	PtrMemberAccess	core -> dbg		879749	0					
ANR	879904	Identifier	core		879749	0					
ANR	879905	Identifier	dbg		879749	1					
ANR	879906	Identifier	forked_pid		879749	1					
ANR	879907	Argument	core -> dbg -> tid		879749	2					
ANR	879908	PtrMemberAccess	core -> dbg -> tid		879749	0					
ANR	879909	PtrMemberAccess	core -> dbg		879749	0					
ANR	879910	Identifier	core		879749	0					
ANR	879911	Identifier	dbg		879749	1					
ANR	879912	Identifier	tid		879749	1					
ANR	879913	ExpressionStatement	core -> dbg -> main_pid = core -> dbg -> forked_pid	1047:4:34608:34651	879749	1	True				
ANR	879914	AssignmentExpression	core -> dbg -> main_pid = core -> dbg -> forked_pid		879749	0		=			
ANR	879915	PtrMemberAccess	core -> dbg -> main_pid		879749	0					
ANR	879916	PtrMemberAccess	core -> dbg		879749	0					
ANR	879917	Identifier	core		879749	0					
ANR	879918	Identifier	dbg		879749	1					
ANR	879919	Identifier	main_pid		879749	1					
ANR	879920	PtrMemberAccess	core -> dbg -> forked_pid		879749	1					
ANR	879921	PtrMemberAccess	core -> dbg		879749	0					
ANR	879922	Identifier	core		879749	0					
ANR	879923	Identifier	dbg		879749	1					
ANR	879924	Identifier	forked_pid		879749	1					
ANR	879925	ExpressionStatement	core -> dbg -> n_threads = 0	1048:4:34657:34681	879749	2	True				
ANR	879926	AssignmentExpression	core -> dbg -> n_threads = 0		879749	0		=			
ANR	879927	PtrMemberAccess	core -> dbg -> n_threads		879749	0					
ANR	879928	PtrMemberAccess	core -> dbg		879749	0					
ANR	879929	Identifier	core		879749	0					
ANR	879930	Identifier	dbg		879749	1					
ANR	879931	Identifier	n_threads		879749	1					
ANR	879932	PrimaryExpression	0		879749	1					
ANR	879933	ExpressionStatement	core -> dbg -> forked_pid = - 1	1049:4:34687:34713	879749	3	True				
ANR	879934	AssignmentExpression	core -> dbg -> forked_pid = - 1		879749	0		=			
ANR	879935	PtrMemberAccess	core -> dbg -> forked_pid		879749	0					
ANR	879936	PtrMemberAccess	core -> dbg		879749	0					
ANR	879937	Identifier	core		879749	0					
ANR	879938	Identifier	dbg		879749	1					
ANR	879939	Identifier	forked_pid		879749	1					
ANR	879940	UnaryOperationExpression	- 1		879749	1					
ANR	879941	UnaryOperator	-		879749	0					
ANR	879942	PrimaryExpression	1		879749	1					
ANR	879943	ElseStatement	else		879749	0					
ANR	879944	CompoundStatement		26:9:720:720	879749	0					
ANR	879945	ExpressionStatement	"eprintf ( ""No recently forked children\\n"" )"	1052:3:34734:34775	879749	0	True				
ANR	879946	CallExpression	"eprintf ( ""No recently forked children\\n"" )"		879749	0					
ANR	879947	Callee	eprintf		879749	0					
ANR	879948	Identifier	eprintf		879749	0					
ANR	879949	ArgumentList	"""No recently forked children\\n"""		879749	1					
ANR	879950	Argument	"""No recently forked children\\n"""		879749	0					
ANR	879951	PrimaryExpression	"""No recently forked children\\n"""		879749	0					
ANR	879952	BreakStatement	break ;	1054:2:34783:34788	879749	9	True				
ANR	879953	Label	case 'k' :	1055:1:34791:34799	879749	10	True				
ANR	879954	ExpressionStatement	pid = atoi ( input + 2 )	1059:2:34983:35005	879749	11	True				
ANR	879955	AssignmentExpression	pid = atoi ( input + 2 )		879749	0		=			
ANR	879956	Identifier	pid		879749	0					
ANR	879957	CallExpression	atoi ( input + 2 )		879749	1					
ANR	879958	Callee	atoi		879749	0					
ANR	879959	Identifier	atoi		879749	0					
ANR	879960	ArgumentList	input + 2		879749	1					
ANR	879961	Argument	input + 2		879749	0					
ANR	879962	AdditiveExpression	input + 2		879749	0		+			
ANR	879963	Identifier	input		879749	0					
ANR	879964	PrimaryExpression	2		879749	1					
ANR	879965	IfStatement	if ( pid > 0 )		879749	12					
ANR	879966	Condition	pid > 0	1060:6:35013:35019	879749	0	True				
ANR	879967	RelationalExpression	pid > 0		879749	0		>			
ANR	879968	Identifier	pid		879749	0					
ANR	879969	PrimaryExpression	0		879749	1					
ANR	879970	CompoundStatement		35:15:1013:1013	879749	1					
ANR	879971	ExpressionStatement	ptr = r_str_trim_ro ( input + 2 )	1061:3:35027:35058	879749	0	True				
ANR	879972	AssignmentExpression	ptr = r_str_trim_ro ( input + 2 )		879749	0		=			
ANR	879973	Identifier	ptr		879749	0					
ANR	879974	CallExpression	r_str_trim_ro ( input + 2 )		879749	1					
ANR	879975	Callee	r_str_trim_ro		879749	0					
ANR	879976	Identifier	r_str_trim_ro		879749	0					
ANR	879977	ArgumentList	input + 2		879749	1					
ANR	879978	Argument	input + 2		879749	0					
ANR	879979	AdditiveExpression	input + 2		879749	0		+			
ANR	879980	Identifier	input		879749	0					
ANR	879981	PrimaryExpression	2		879749	1					
ANR	879982	ExpressionStatement	"ptr = strchr ( ptr , ' ' )"	1062:3:35063:35086	879749	1	True				
ANR	879983	AssignmentExpression	"ptr = strchr ( ptr , ' ' )"		879749	0		=			
ANR	879984	Identifier	ptr		879749	0					
ANR	879985	CallExpression	"strchr ( ptr , ' ' )"		879749	1					
ANR	879986	Callee	strchr		879749	0					
ANR	879987	Identifier	strchr		879749	0					
ANR	879988	ArgumentList	ptr		879749	1					
ANR	879989	Argument	ptr		879749	0					
ANR	879990	Identifier	ptr		879749	0					
ANR	879991	Argument	' '		879749	1					
ANR	879992	PrimaryExpression	' '		879749	0					
ANR	879993	ExpressionStatement	sig = ptr ? atoi ( ptr + 1 ) : 0	1063:3:35091:35119	879749	2	True				
ANR	879994	AssignmentExpression	sig = ptr ? atoi ( ptr + 1 ) : 0		879749	0		=			
ANR	879995	Identifier	sig		879749	0					
ANR	879996	ConditionalExpression	ptr ? atoi ( ptr + 1 ) : 0		879749	1					
ANR	879997	Condition	ptr		879749	0					
ANR	879998	Identifier	ptr		879749	0					
ANR	879999	CallExpression	atoi ( ptr + 1 )		879749	1					
ANR	880000	Callee	atoi		879749	0					
ANR	880001	Identifier	atoi		879749	0					
ANR	880002	ArgumentList	ptr + 1		879749	1					
ANR	880003	Argument	ptr + 1		879749	0					
ANR	880004	AdditiveExpression	ptr + 1		879749	0		+			
ANR	880005	Identifier	ptr		879749	0					
ANR	880006	PrimaryExpression	1		879749	1					
ANR	880007	PrimaryExpression	0		879749	2					
ANR	880008	ExpressionStatement	"eprintf ( ""Sending signal '%d' to pid '%d'\\n"" , sig , pid )"	1064:3:35124:35179	879749	3	True				
ANR	880009	CallExpression	"eprintf ( ""Sending signal '%d' to pid '%d'\\n"" , sig , pid )"		879749	0					
ANR	880010	Callee	eprintf		879749	0					
ANR	880011	Identifier	eprintf		879749	0					
ANR	880012	ArgumentList	"""Sending signal '%d' to pid '%d'\\n"""		879749	1					
ANR	880013	Argument	"""Sending signal '%d' to pid '%d'\\n"""		879749	0					
ANR	880014	PrimaryExpression	"""Sending signal '%d' to pid '%d'\\n"""		879749	0					
ANR	880015	Argument	sig		879749	1					
ANR	880016	Identifier	sig		879749	0					
ANR	880017	Argument	pid		879749	2					
ANR	880018	Identifier	pid		879749	0					
ANR	880019	ExpressionStatement	"r_debug_kill ( core -> dbg , 0 , false , sig )"	1065:3:35184:35223	879749	4	True				
ANR	880020	CallExpression	"r_debug_kill ( core -> dbg , 0 , false , sig )"		879749	0					
ANR	880021	Callee	r_debug_kill		879749	0					
ANR	880022	Identifier	r_debug_kill		879749	0					
ANR	880023	ArgumentList	core -> dbg		879749	1					
ANR	880024	Argument	core -> dbg		879749	0					
ANR	880025	PtrMemberAccess	core -> dbg		879749	0					
ANR	880026	Identifier	core		879749	0					
ANR	880027	Identifier	dbg		879749	1					
ANR	880028	Argument	0		879749	1					
ANR	880029	PrimaryExpression	0		879749	0					
ANR	880030	Argument	false		879749	2					
ANR	880031	Identifier	false		879749	0					
ANR	880032	Argument	sig		879749	3					
ANR	880033	Identifier	sig		879749	0					
ANR	880034	ElseStatement	else		879749	0					
ANR	880035	ExpressionStatement	"eprintf ( ""cmd_debug_pid: Invalid arguments (%s)\\n"" , input )"	1066:9:35234:35292	879749	0	True				
ANR	880036	CallExpression	"eprintf ( ""cmd_debug_pid: Invalid arguments (%s)\\n"" , input )"		879749	0					
ANR	880037	Callee	eprintf		879749	0					
ANR	880038	Identifier	eprintf		879749	0					
ANR	880039	ArgumentList	"""cmd_debug_pid: Invalid arguments (%s)\\n"""		879749	1					
ANR	880040	Argument	"""cmd_debug_pid: Invalid arguments (%s)\\n"""		879749	0					
ANR	880041	PrimaryExpression	"""cmd_debug_pid: Invalid arguments (%s)\\n"""		879749	0					
ANR	880042	Argument	input		879749	1					
ANR	880043	Identifier	input		879749	0					
ANR	880044	BreakStatement	break ;	1067:2:35296:35301	879749	13	True				
ANR	880045	Label	case 'n' :	1068:1:35304:35312	879749	14	True				
ANR	880046	ExpressionStatement	"eprintf ( ""TODO: debug_fork: %d\\n"" , r_debug_child_fork ( core -> dbg ) )"	1069:2:35325:35391	879749	15	True				
ANR	880047	CallExpression	"eprintf ( ""TODO: debug_fork: %d\\n"" , r_debug_child_fork ( core -> dbg ) )"		879749	0					
ANR	880048	Callee	eprintf		879749	0					
ANR	880049	Identifier	eprintf		879749	0					
ANR	880050	ArgumentList	"""TODO: debug_fork: %d\\n"""		879749	1					
ANR	880051	Argument	"""TODO: debug_fork: %d\\n"""		879749	0					
ANR	880052	PrimaryExpression	"""TODO: debug_fork: %d\\n"""		879749	0					
ANR	880053	Argument	r_debug_child_fork ( core -> dbg )		879749	1					
ANR	880054	CallExpression	r_debug_child_fork ( core -> dbg )		879749	0					
ANR	880055	Callee	r_debug_child_fork		879749	0					
ANR	880056	Identifier	r_debug_child_fork		879749	0					
ANR	880057	ArgumentList	core -> dbg		879749	1					
ANR	880058	Argument	core -> dbg		879749	0					
ANR	880059	PtrMemberAccess	core -> dbg		879749	0					
ANR	880060	Identifier	core		879749	0					
ANR	880061	Identifier	dbg		879749	1					
ANR	880062	BreakStatement	break ;	1070:2:35395:35400	879749	16	True				
ANR	880063	Label	case 't' :	1071:1:35403:35411	879749	17	True				
ANR	880064	SwitchStatement	switch ( input [ 2 ] )		879749	18					
ANR	880065	Condition	input [ 2 ]	1072:10:35432:35439	879749	0	True				
ANR	880066	ArrayIndexing	input [ 2 ]		879749	0					
ANR	880067	Identifier	input		879749	0					
ANR	880068	PrimaryExpression	2		879749	1					
ANR	880069	CompoundStatement		47:20:1433:1433	879749	1					
ANR	880070	Label	case '\\0' :	1073:2:35446:35455	879749	0	True				
ANR	880071	ExpressionStatement	"r_debug_thread_list ( core -> dbg , core -> dbg -> pid )"	1074:3:35469:35516	879749	1	True				
ANR	880072	CallExpression	"r_debug_thread_list ( core -> dbg , core -> dbg -> pid )"		879749	0					
ANR	880073	Callee	r_debug_thread_list		879749	0					
ANR	880074	Identifier	r_debug_thread_list		879749	0					
ANR	880075	ArgumentList	core -> dbg		879749	1					
ANR	880076	Argument	core -> dbg		879749	0					
ANR	880077	PtrMemberAccess	core -> dbg		879749	0					
ANR	880078	Identifier	core		879749	0					
ANR	880079	Identifier	dbg		879749	1					
ANR	880080	Argument	core -> dbg -> pid		879749	1					
ANR	880081	PtrMemberAccess	core -> dbg -> pid		879749	0					
ANR	880082	PtrMemberAccess	core -> dbg		879749	0					
ANR	880083	Identifier	core		879749	0					
ANR	880084	Identifier	dbg		879749	1					
ANR	880085	Identifier	pid		879749	1					
ANR	880086	BreakStatement	break ;	1075:3:35521:35526	879749	2	True				
ANR	880087	Label	case ' ' :	1076:2:35530:35538	879749	3	True				
ANR	880088	ExpressionStatement	"r_debug_thread_list ( core -> dbg , atoi ( input + 2 ) )"	1077:3:35553:35602	879749	4	True				
ANR	880089	CallExpression	"r_debug_thread_list ( core -> dbg , atoi ( input + 2 ) )"		879749	0					
ANR	880090	Callee	r_debug_thread_list		879749	0					
ANR	880091	Identifier	r_debug_thread_list		879749	0					
ANR	880092	ArgumentList	core -> dbg		879749	1					
ANR	880093	Argument	core -> dbg		879749	0					
ANR	880094	PtrMemberAccess	core -> dbg		879749	0					
ANR	880095	Identifier	core		879749	0					
ANR	880096	Identifier	dbg		879749	1					
ANR	880097	Argument	atoi ( input + 2 )		879749	1					
ANR	880098	CallExpression	atoi ( input + 2 )		879749	0					
ANR	880099	Callee	atoi		879749	0					
ANR	880100	Identifier	atoi		879749	0					
ANR	880101	ArgumentList	input + 2		879749	1					
ANR	880102	Argument	input + 2		879749	0					
ANR	880103	AdditiveExpression	input + 2		879749	0		+			
ANR	880104	Identifier	input		879749	0					
ANR	880105	PrimaryExpression	2		879749	1					
ANR	880106	BreakStatement	break ;	1078:3:35607:35612	879749	5	True				
ANR	880107	Label	case '=' :	1079:2:35616:35624	879749	6	True				
ANR	880108	ExpressionStatement	"r_debug_select ( core -> dbg , core -> dbg -> pid , ( int ) r_num_math ( core -> num , input + 3 ) )"	1080:3:35639:35727	879749	7	True				
ANR	880109	CallExpression	"r_debug_select ( core -> dbg , core -> dbg -> pid , ( int ) r_num_math ( core -> num , input + 3 ) )"		879749	0					
ANR	880110	Callee	r_debug_select		879749	0					
ANR	880111	Identifier	r_debug_select		879749	0					
ANR	880112	ArgumentList	core -> dbg		879749	1					
ANR	880113	Argument	core -> dbg		879749	0					
ANR	880114	PtrMemberAccess	core -> dbg		879749	0					
ANR	880115	Identifier	core		879749	0					
ANR	880116	Identifier	dbg		879749	1					
ANR	880117	Argument	core -> dbg -> pid		879749	1					
ANR	880118	PtrMemberAccess	core -> dbg -> pid		879749	0					
ANR	880119	PtrMemberAccess	core -> dbg		879749	0					
ANR	880120	Identifier	core		879749	0					
ANR	880121	Identifier	dbg		879749	1					
ANR	880122	Identifier	pid		879749	1					
ANR	880123	Argument	"( int ) r_num_math ( core -> num , input + 3 )"		879749	2					
ANR	880124	CastExpression	"( int ) r_num_math ( core -> num , input + 3 )"		879749	0					
ANR	880125	CastTarget	int		879749	0					
ANR	880126	CallExpression	"r_num_math ( core -> num , input + 3 )"		879749	1					
ANR	880127	Callee	r_num_math		879749	0					
ANR	880128	Identifier	r_num_math		879749	0					
ANR	880129	ArgumentList	core -> num		879749	1					
ANR	880130	Argument	core -> num		879749	0					
ANR	880131	PtrMemberAccess	core -> num		879749	0					
ANR	880132	Identifier	core		879749	0					
ANR	880133	Identifier	num		879749	1					
ANR	880134	Argument	input + 3		879749	1					
ANR	880135	AdditiveExpression	input + 3		879749	0		+			
ANR	880136	Identifier	input		879749	0					
ANR	880137	PrimaryExpression	3		879749	1					
ANR	880138	BreakStatement	break ;	1082:3:35732:35737	879749	8	True				
ANR	880139	Label	case 'n' :	1083:2:35741:35749	879749	9	True				
ANR	880140	ExpressionStatement	"eprintf ( ""TODO: debug_clone: %d\\n"" , r_debug_child_clone ( core -> dbg ) )"	1084:3:35764:35832	879749	10	True				
ANR	880141	CallExpression	"eprintf ( ""TODO: debug_clone: %d\\n"" , r_debug_child_clone ( core -> dbg ) )"		879749	0					
ANR	880142	Callee	eprintf		879749	0					
ANR	880143	Identifier	eprintf		879749	0					
ANR	880144	ArgumentList	"""TODO: debug_clone: %d\\n"""		879749	1					
ANR	880145	Argument	"""TODO: debug_clone: %d\\n"""		879749	0					
ANR	880146	PrimaryExpression	"""TODO: debug_clone: %d\\n"""		879749	0					
ANR	880147	Argument	r_debug_child_clone ( core -> dbg )		879749	1					
ANR	880148	CallExpression	r_debug_child_clone ( core -> dbg )		879749	0					
ANR	880149	Callee	r_debug_child_clone		879749	0					
ANR	880150	Identifier	r_debug_child_clone		879749	0					
ANR	880151	ArgumentList	core -> dbg		879749	1					
ANR	880152	Argument	core -> dbg		879749	0					
ANR	880153	PtrMemberAccess	core -> dbg		879749	0					
ANR	880154	Identifier	core		879749	0					
ANR	880155	Identifier	dbg		879749	1					
ANR	880156	BreakStatement	break ;	1085:3:35837:35842	879749	11	True				
ANR	880157	Label	case '?' :	1086:2:35846:35854	879749	12	True				
ANR	880158	Label	default :	1087:2:35868:35875	879749	13	True				
ANR	880159	Identifier	default		879749	0					
ANR	880160	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dp )"	1088:3:35880:35915	879749	14	True				
ANR	880161	CallExpression	"r_core_cmd_help ( core , help_msg_dp )"		879749	0					
ANR	880162	Callee	r_core_cmd_help		879749	0					
ANR	880163	Identifier	r_core_cmd_help		879749	0					
ANR	880164	ArgumentList	core		879749	1					
ANR	880165	Argument	core		879749	0					
ANR	880166	Identifier	core		879749	0					
ANR	880167	Argument	help_msg_dp		879749	1					
ANR	880168	Identifier	help_msg_dp		879749	0					
ANR	880169	BreakStatement	break ;	1089:3:35920:35925	879749	15	True				
ANR	880170	BreakStatement	break ;	1091:2:35933:35938	879749	19	True				
ANR	880171	Label	case 'a' :	1092:1:35941:35949	879749	20	True				
ANR	880172	IfStatement	if ( input [ 2 ] )		879749	21					
ANR	880173	Condition	input [ 2 ]	1093:6:35966:35973	879749	0	True				
ANR	880174	ArrayIndexing	input [ 2 ]		879749	0					
ANR	880175	Identifier	input		879749	0					
ANR	880176	PrimaryExpression	2		879749	1					
ANR	880177	CompoundStatement		68:16:1967:1967	879749	1					
ANR	880178	ExpressionStatement	"r_debug_attach ( core -> dbg , ( int ) r_num_math ( core -> num , input + 2 ) )"	1094:3:35981:36055	879749	0	True				
ANR	880179	CallExpression	"r_debug_attach ( core -> dbg , ( int ) r_num_math ( core -> num , input + 2 ) )"		879749	0					
ANR	880180	Callee	r_debug_attach		879749	0					
ANR	880181	Identifier	r_debug_attach		879749	0					
ANR	880182	ArgumentList	core -> dbg		879749	1					
ANR	880183	Argument	core -> dbg		879749	0					
ANR	880184	PtrMemberAccess	core -> dbg		879749	0					
ANR	880185	Identifier	core		879749	0					
ANR	880186	Identifier	dbg		879749	1					
ANR	880187	Argument	"( int ) r_num_math ( core -> num , input + 2 )"		879749	1					
ANR	880188	CastExpression	"( int ) r_num_math ( core -> num , input + 2 )"		879749	0					
ANR	880189	CastTarget	int		879749	0					
ANR	880190	CallExpression	"r_num_math ( core -> num , input + 2 )"		879749	1					
ANR	880191	Callee	r_num_math		879749	0					
ANR	880192	Identifier	r_num_math		879749	0					
ANR	880193	ArgumentList	core -> num		879749	1					
ANR	880194	Argument	core -> num		879749	0					
ANR	880195	PtrMemberAccess	core -> num		879749	0					
ANR	880196	Identifier	core		879749	0					
ANR	880197	Identifier	num		879749	1					
ANR	880198	Argument	input + 2		879749	1					
ANR	880199	AdditiveExpression	input + 2		879749	0		+			
ANR	880200	Identifier	input		879749	0					
ANR	880201	PrimaryExpression	2		879749	1					
ANR	880202	ElseStatement	else		879749	0					
ANR	880203	CompoundStatement		71:9:2057:2057	879749	0					
ANR	880204	IfStatement	if ( core -> file && core -> io )		879749	0					
ANR	880205	Condition	core -> file && core -> io	1097:7:36075:36096	879749	0	True				
ANR	880206	AndExpression	core -> file && core -> io		879749	0		&&			
ANR	880207	PtrMemberAccess	core -> file		879749	0					
ANR	880208	Identifier	core		879749	0					
ANR	880209	Identifier	file		879749	1					
ANR	880210	PtrMemberAccess	core -> io		879749	1					
ANR	880211	Identifier	core		879749	0					
ANR	880212	Identifier	io		879749	1					
ANR	880213	CompoundStatement		72:31:2090:2090	879749	1					
ANR	880214	ExpressionStatement	"r_debug_attach ( core -> dbg , r_io_fd_get_pid ( core -> io , core -> file -> fd ) )"	1098:4:36105:36181	879749	0	True				
ANR	880215	CallExpression	"r_debug_attach ( core -> dbg , r_io_fd_get_pid ( core -> io , core -> file -> fd ) )"		879749	0					
ANR	880216	Callee	r_debug_attach		879749	0					
ANR	880217	Identifier	r_debug_attach		879749	0					
ANR	880218	ArgumentList	core -> dbg		879749	1					
ANR	880219	Argument	core -> dbg		879749	0					
ANR	880220	PtrMemberAccess	core -> dbg		879749	0					
ANR	880221	Identifier	core		879749	0					
ANR	880222	Identifier	dbg		879749	1					
ANR	880223	Argument	"r_io_fd_get_pid ( core -> io , core -> file -> fd )"		879749	1					
ANR	880224	CallExpression	"r_io_fd_get_pid ( core -> io , core -> file -> fd )"		879749	0					
ANR	880225	Callee	r_io_fd_get_pid		879749	0					
ANR	880226	Identifier	r_io_fd_get_pid		879749	0					
ANR	880227	ArgumentList	core -> io		879749	1					
ANR	880228	Argument	core -> io		879749	0					
ANR	880229	PtrMemberAccess	core -> io		879749	0					
ANR	880230	Identifier	core		879749	0					
ANR	880231	Identifier	io		879749	1					
ANR	880232	Argument	core -> file -> fd		879749	1					
ANR	880233	PtrMemberAccess	core -> file -> fd		879749	0					
ANR	880234	PtrMemberAccess	core -> file		879749	0					
ANR	880235	Identifier	core		879749	0					
ANR	880236	Identifier	file		879749	1					
ANR	880237	Identifier	fd		879749	1					
ANR	880238	ExpressionStatement	"r_debug_select ( core -> dbg , core -> dbg -> pid , core -> dbg -> tid )"	1102:2:36194:36252	879749	22	True				
ANR	880239	CallExpression	"r_debug_select ( core -> dbg , core -> dbg -> pid , core -> dbg -> tid )"		879749	0					
ANR	880240	Callee	r_debug_select		879749	0					
ANR	880241	Identifier	r_debug_select		879749	0					
ANR	880242	ArgumentList	core -> dbg		879749	1					
ANR	880243	Argument	core -> dbg		879749	0					
ANR	880244	PtrMemberAccess	core -> dbg		879749	0					
ANR	880245	Identifier	core		879749	0					
ANR	880246	Identifier	dbg		879749	1					
ANR	880247	Argument	core -> dbg -> pid		879749	1					
ANR	880248	PtrMemberAccess	core -> dbg -> pid		879749	0					
ANR	880249	PtrMemberAccess	core -> dbg		879749	0					
ANR	880250	Identifier	core		879749	0					
ANR	880251	Identifier	dbg		879749	1					
ANR	880252	Identifier	pid		879749	1					
ANR	880253	Argument	core -> dbg -> tid		879749	2					
ANR	880254	PtrMemberAccess	core -> dbg -> tid		879749	0					
ANR	880255	PtrMemberAccess	core -> dbg		879749	0					
ANR	880256	Identifier	core		879749	0					
ANR	880257	Identifier	dbg		879749	1					
ANR	880258	Identifier	tid		879749	1					
ANR	880259	ExpressionStatement	"r_config_set_i ( core -> config , ""dbg.swstep"" , ( core -> dbg -> h && ! core -> dbg -> h -> canstep ) )"	1103:2:36256:36345	879749	23	True				
ANR	880260	CallExpression	"r_config_set_i ( core -> config , ""dbg.swstep"" , ( core -> dbg -> h && ! core -> dbg -> h -> canstep ) )"		879749	0					
ANR	880261	Callee	r_config_set_i		879749	0					
ANR	880262	Identifier	r_config_set_i		879749	0					
ANR	880263	ArgumentList	core -> config		879749	1					
ANR	880264	Argument	core -> config		879749	0					
ANR	880265	PtrMemberAccess	core -> config		879749	0					
ANR	880266	Identifier	core		879749	0					
ANR	880267	Identifier	config		879749	1					
ANR	880268	Argument	"""dbg.swstep"""		879749	1					
ANR	880269	PrimaryExpression	"""dbg.swstep"""		879749	0					
ANR	880270	Argument	core -> dbg -> h && ! core -> dbg -> h -> canstep		879749	2					
ANR	880271	AndExpression	core -> dbg -> h && ! core -> dbg -> h -> canstep		879749	0		&&			
ANR	880272	PtrMemberAccess	core -> dbg -> h		879749	0					
ANR	880273	PtrMemberAccess	core -> dbg		879749	0					
ANR	880274	Identifier	core		879749	0					
ANR	880275	Identifier	dbg		879749	1					
ANR	880276	Identifier	h		879749	1					
ANR	880277	UnaryOperationExpression	! core -> dbg -> h -> canstep		879749	1					
ANR	880278	UnaryOperator	!		879749	0					
ANR	880279	PtrMemberAccess	core -> dbg -> h -> canstep		879749	1					
ANR	880280	PtrMemberAccess	core -> dbg -> h		879749	0					
ANR	880281	PtrMemberAccess	core -> dbg		879749	0					
ANR	880282	Identifier	core		879749	0					
ANR	880283	Identifier	dbg		879749	1					
ANR	880284	Identifier	h		879749	1					
ANR	880285	Identifier	canstep		879749	1					
ANR	880286	ExpressionStatement	"r_core_cmdf ( core , ""=!pid %d"" , core -> dbg -> pid )"	1105:2:36349:36395	879749	24	True				
ANR	880287	CallExpression	"r_core_cmdf ( core , ""=!pid %d"" , core -> dbg -> pid )"		879749	0					
ANR	880288	Callee	r_core_cmdf		879749	0					
ANR	880289	Identifier	r_core_cmdf		879749	0					
ANR	880290	ArgumentList	core		879749	1					
ANR	880291	Argument	core		879749	0					
ANR	880292	Identifier	core		879749	0					
ANR	880293	Argument	"""=!pid %d"""		879749	1					
ANR	880294	PrimaryExpression	"""=!pid %d"""		879749	0					
ANR	880295	Argument	core -> dbg -> pid		879749	2					
ANR	880296	PtrMemberAccess	core -> dbg -> pid		879749	0					
ANR	880297	PtrMemberAccess	core -> dbg		879749	0					
ANR	880298	Identifier	core		879749	0					
ANR	880299	Identifier	dbg		879749	1					
ANR	880300	Identifier	pid		879749	1					
ANR	880301	BreakStatement	break ;	1106:2:36399:36404	879749	25	True				
ANR	880302	Label	case 'f' :	1107:1:36407:36415	879749	26	True				
ANR	880303	IfStatement	if ( core -> file && core -> io )		879749	27					
ANR	880304	Condition	core -> file && core -> io	1108:6:36432:36453	879749	0	True				
ANR	880305	AndExpression	core -> file && core -> io		879749	0		&&			
ANR	880306	PtrMemberAccess	core -> file		879749	0					
ANR	880307	Identifier	core		879749	0					
ANR	880308	Identifier	file		879749	1					
ANR	880309	PtrMemberAccess	core -> io		879749	1					
ANR	880310	Identifier	core		879749	0					
ANR	880311	Identifier	io		879749	1					
ANR	880312	CompoundStatement		83:30:2447:2447	879749	1					
ANR	880313	ExpressionStatement	"r_debug_select ( core -> dbg , r_io_fd_get_pid ( core -> io , core -> file -> fd ) , r_io_fd_get_tid ( core -> io , core -> file -> fd ) )"	1109:3:36461:36580	879749	0	True				
ANR	880314	CallExpression	"r_debug_select ( core -> dbg , r_io_fd_get_pid ( core -> io , core -> file -> fd ) , r_io_fd_get_tid ( core -> io , core -> file -> fd ) )"		879749	0					
ANR	880315	Callee	r_debug_select		879749	0					
ANR	880316	Identifier	r_debug_select		879749	0					
ANR	880317	ArgumentList	core -> dbg		879749	1					
ANR	880318	Argument	core -> dbg		879749	0					
ANR	880319	PtrMemberAccess	core -> dbg		879749	0					
ANR	880320	Identifier	core		879749	0					
ANR	880321	Identifier	dbg		879749	1					
ANR	880322	Argument	"r_io_fd_get_pid ( core -> io , core -> file -> fd )"		879749	1					
ANR	880323	CallExpression	"r_io_fd_get_pid ( core -> io , core -> file -> fd )"		879749	0					
ANR	880324	Callee	r_io_fd_get_pid		879749	0					
ANR	880325	Identifier	r_io_fd_get_pid		879749	0					
ANR	880326	ArgumentList	core -> io		879749	1					
ANR	880327	Argument	core -> io		879749	0					
ANR	880328	PtrMemberAccess	core -> io		879749	0					
ANR	880329	Identifier	core		879749	0					
ANR	880330	Identifier	io		879749	1					
ANR	880331	Argument	core -> file -> fd		879749	1					
ANR	880332	PtrMemberAccess	core -> file -> fd		879749	0					
ANR	880333	PtrMemberAccess	core -> file		879749	0					
ANR	880334	Identifier	core		879749	0					
ANR	880335	Identifier	file		879749	1					
ANR	880336	Identifier	fd		879749	1					
ANR	880337	Argument	"r_io_fd_get_tid ( core -> io , core -> file -> fd )"		879749	2					
ANR	880338	CallExpression	"r_io_fd_get_tid ( core -> io , core -> file -> fd )"		879749	0					
ANR	880339	Callee	r_io_fd_get_tid		879749	0					
ANR	880340	Identifier	r_io_fd_get_tid		879749	0					
ANR	880341	ArgumentList	core -> io		879749	1					
ANR	880342	Argument	core -> io		879749	0					
ANR	880343	PtrMemberAccess	core -> io		879749	0					
ANR	880344	Identifier	core		879749	0					
ANR	880345	Identifier	io		879749	1					
ANR	880346	Argument	core -> file -> fd		879749	1					
ANR	880347	PtrMemberAccess	core -> file -> fd		879749	0					
ANR	880348	PtrMemberAccess	core -> file		879749	0					
ANR	880349	Identifier	core		879749	0					
ANR	880350	Identifier	file		879749	1					
ANR	880351	Identifier	fd		879749	1					
ANR	880352	BreakStatement	break ;	1112:2:36588:36593	879749	28	True				
ANR	880353	Label	case '=' :	1113:1:36596:36604	879749	29	True				
ANR	880354	ExpressionStatement	"r_debug_select ( core -> dbg , ( int ) r_num_math ( core -> num , input + 2 ) , core -> dbg -> tid )"	1114:2:36617:36704	879749	30	True				
ANR	880355	CallExpression	"r_debug_select ( core -> dbg , ( int ) r_num_math ( core -> num , input + 2 ) , core -> dbg -> tid )"		879749	0					
ANR	880356	Callee	r_debug_select		879749	0					
ANR	880357	Identifier	r_debug_select		879749	0					
ANR	880358	ArgumentList	core -> dbg		879749	1					
ANR	880359	Argument	core -> dbg		879749	0					
ANR	880360	PtrMemberAccess	core -> dbg		879749	0					
ANR	880361	Identifier	core		879749	0					
ANR	880362	Identifier	dbg		879749	1					
ANR	880363	Argument	"( int ) r_num_math ( core -> num , input + 2 )"		879749	1					
ANR	880364	CastExpression	"( int ) r_num_math ( core -> num , input + 2 )"		879749	0					
ANR	880365	CastTarget	int		879749	0					
ANR	880366	CallExpression	"r_num_math ( core -> num , input + 2 )"		879749	1					
ANR	880367	Callee	r_num_math		879749	0					
ANR	880368	Identifier	r_num_math		879749	0					
ANR	880369	ArgumentList	core -> num		879749	1					
ANR	880370	Argument	core -> num		879749	0					
ANR	880371	PtrMemberAccess	core -> num		879749	0					
ANR	880372	Identifier	core		879749	0					
ANR	880373	Identifier	num		879749	1					
ANR	880374	Argument	input + 2		879749	1					
ANR	880375	AdditiveExpression	input + 2		879749	0		+			
ANR	880376	Identifier	input		879749	0					
ANR	880377	PrimaryExpression	2		879749	1					
ANR	880378	Argument	core -> dbg -> tid		879749	2					
ANR	880379	PtrMemberAccess	core -> dbg -> tid		879749	0					
ANR	880380	PtrMemberAccess	core -> dbg		879749	0					
ANR	880381	Identifier	core		879749	0					
ANR	880382	Identifier	dbg		879749	1					
ANR	880383	Identifier	tid		879749	1					
ANR	880384	ExpressionStatement	"core -> dbg -> main_pid = r_num_math ( core -> num , input + 2 )"	1116:2:36708:36763	879749	31	True				
ANR	880385	AssignmentExpression	"core -> dbg -> main_pid = r_num_math ( core -> num , input + 2 )"		879749	0		=			
ANR	880386	PtrMemberAccess	core -> dbg -> main_pid		879749	0					
ANR	880387	PtrMemberAccess	core -> dbg		879749	0					
ANR	880388	Identifier	core		879749	0					
ANR	880389	Identifier	dbg		879749	1					
ANR	880390	Identifier	main_pid		879749	1					
ANR	880391	CallExpression	"r_num_math ( core -> num , input + 2 )"		879749	1					
ANR	880392	Callee	r_num_math		879749	0					
ANR	880393	Identifier	r_num_math		879749	0					
ANR	880394	ArgumentList	core -> num		879749	1					
ANR	880395	Argument	core -> num		879749	0					
ANR	880396	PtrMemberAccess	core -> num		879749	0					
ANR	880397	Identifier	core		879749	0					
ANR	880398	Identifier	num		879749	1					
ANR	880399	Argument	input + 2		879749	1					
ANR	880400	AdditiveExpression	input + 2		879749	0		+			
ANR	880401	Identifier	input		879749	0					
ANR	880402	PrimaryExpression	2		879749	1					
ANR	880403	BreakStatement	break ;	1117:2:36767:36772	879749	32	True				
ANR	880404	Label	case 'l' :	1118:1:36775:36783	879749	33	True				
ANR	880405	SwitchStatement	switch ( input [ 2 ] )		879749	34					
ANR	880406	Condition	input [ 2 ]	1119:10:36804:36811	879749	0	True				
ANR	880407	ArrayIndexing	input [ 2 ]		879749	0					
ANR	880408	Identifier	input		879749	0					
ANR	880409	PrimaryExpression	2		879749	1					
ANR	880410	CompoundStatement		94:20:2805:2805	879749	1					
ANR	880411	Label	case '\\0' :	1120:2:36818:36827	879749	0	True				
ANR	880412	ExpressionStatement	"r_debug_pid_list ( core -> dbg , 0 , 0 )"	1121:3:36841:36875	879749	1	True				
ANR	880413	CallExpression	"r_debug_pid_list ( core -> dbg , 0 , 0 )"		879749	0					
ANR	880414	Callee	r_debug_pid_list		879749	0					
ANR	880415	Identifier	r_debug_pid_list		879749	0					
ANR	880416	ArgumentList	core -> dbg		879749	1					
ANR	880417	Argument	core -> dbg		879749	0					
ANR	880418	PtrMemberAccess	core -> dbg		879749	0					
ANR	880419	Identifier	core		879749	0					
ANR	880420	Identifier	dbg		879749	1					
ANR	880421	Argument	0		879749	1					
ANR	880422	PrimaryExpression	0		879749	0					
ANR	880423	Argument	0		879749	2					
ANR	880424	PrimaryExpression	0		879749	0					
ANR	880425	BreakStatement	break ;	1122:3:36880:36885	879749	2	True				
ANR	880426	Label	case 'j' :	1123:2:36889:36897	879749	3	True				
ANR	880427	ExpressionStatement	"r_debug_pid_list ( core -> dbg , 0 , 'j' )"	1124:3:36912:36948	879749	4	True				
ANR	880428	CallExpression	"r_debug_pid_list ( core -> dbg , 0 , 'j' )"		879749	0					
ANR	880429	Callee	r_debug_pid_list		879749	0					
ANR	880430	Identifier	r_debug_pid_list		879749	0					
ANR	880431	ArgumentList	core -> dbg		879749	1					
ANR	880432	Argument	core -> dbg		879749	0					
ANR	880433	PtrMemberAccess	core -> dbg		879749	0					
ANR	880434	Identifier	core		879749	0					
ANR	880435	Identifier	dbg		879749	1					
ANR	880436	Argument	0		879749	1					
ANR	880437	PrimaryExpression	0		879749	0					
ANR	880438	Argument	'j'		879749	2					
ANR	880439	PrimaryExpression	'j'		879749	0					
ANR	880440	BreakStatement	break ;	1125:3:36953:36958	879749	5	True				
ANR	880441	BreakStatement	break ;	1127:2:36966:36971	879749	35	True				
ANR	880442	Label	case 'j' :	1128:1:36974:36982	879749	36	True				
ANR	880443	SwitchStatement	switch ( input [ 2 ] )		879749	37					
ANR	880444	Condition	input [ 2 ]	1129:10:37003:37010	879749	0	True				
ANR	880445	ArrayIndexing	input [ 2 ]		879749	0					
ANR	880446	Identifier	input		879749	0					
ANR	880447	PrimaryExpression	2		879749	1					
ANR	880448	CompoundStatement		104:20:3004:3004	879749	1					
ANR	880449	Label	case '\\0' :	1130:2:37017:37026	879749	0	True				
ANR	880450	ExpressionStatement	"r_debug_pid_list ( core -> dbg , core -> dbg -> pid , 'j' )"	1131:3:37040:37089	879749	1	True				
ANR	880451	CallExpression	"r_debug_pid_list ( core -> dbg , core -> dbg -> pid , 'j' )"		879749	0					
ANR	880452	Callee	r_debug_pid_list		879749	0					
ANR	880453	Identifier	r_debug_pid_list		879749	0					
ANR	880454	ArgumentList	core -> dbg		879749	1					
ANR	880455	Argument	core -> dbg		879749	0					
ANR	880456	PtrMemberAccess	core -> dbg		879749	0					
ANR	880457	Identifier	core		879749	0					
ANR	880458	Identifier	dbg		879749	1					
ANR	880459	Argument	core -> dbg -> pid		879749	1					
ANR	880460	PtrMemberAccess	core -> dbg -> pid		879749	0					
ANR	880461	PtrMemberAccess	core -> dbg		879749	0					
ANR	880462	Identifier	core		879749	0					
ANR	880463	Identifier	dbg		879749	1					
ANR	880464	Identifier	pid		879749	1					
ANR	880465	Argument	'j'		879749	2					
ANR	880466	PrimaryExpression	'j'		879749	0					
ANR	880467	BreakStatement	break ;	1132:3:37094:37099	879749	2	True				
ANR	880468	Label	case ' ' :	1133:2:37103:37111	879749	3	True				
ANR	880469	ExpressionStatement	"r_debug_pid_list ( core -> dbg , ( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) ) , 'j' )"	1134:3:37126:37221	879749	4	True				
ANR	880470	CallExpression	"r_debug_pid_list ( core -> dbg , ( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) ) , 'j' )"		879749	0					
ANR	880471	Callee	r_debug_pid_list		879749	0					
ANR	880472	Identifier	r_debug_pid_list		879749	0					
ANR	880473	ArgumentList	core -> dbg		879749	1					
ANR	880474	Argument	core -> dbg		879749	0					
ANR	880475	PtrMemberAccess	core -> dbg		879749	0					
ANR	880476	Identifier	core		879749	0					
ANR	880477	Identifier	dbg		879749	1					
ANR	880478	Argument	"( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) )"		879749	1					
ANR	880479	CastExpression	"( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) )"		879749	0					
ANR	880480	CastTarget	int		879749	0					
ANR	880481	CallExpression	"R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) )"		879749	1					
ANR	880482	Callee	R_MAX		879749	0					
ANR	880483	Identifier	R_MAX		879749	0					
ANR	880484	ArgumentList	0		879749	1					
ANR	880485	Argument	0		879749	0					
ANR	880486	PrimaryExpression	0		879749	0					
ANR	880487	Argument	"( int ) r_num_math ( core -> num , input + 2 )"		879749	1					
ANR	880488	CastExpression	"( int ) r_num_math ( core -> num , input + 2 )"		879749	0					
ANR	880489	CastTarget	int		879749	0					
ANR	880490	CallExpression	"r_num_math ( core -> num , input + 2 )"		879749	1					
ANR	880491	Callee	r_num_math		879749	0					
ANR	880492	Identifier	r_num_math		879749	0					
ANR	880493	ArgumentList	core -> num		879749	1					
ANR	880494	Argument	core -> num		879749	0					
ANR	880495	PtrMemberAccess	core -> num		879749	0					
ANR	880496	Identifier	core		879749	0					
ANR	880497	Identifier	num		879749	1					
ANR	880498	Argument	input + 2		879749	1					
ANR	880499	AdditiveExpression	input + 2		879749	0		+			
ANR	880500	Identifier	input		879749	0					
ANR	880501	PrimaryExpression	2		879749	1					
ANR	880502	Argument	'j'		879749	2					
ANR	880503	PrimaryExpression	'j'		879749	0					
ANR	880504	BreakStatement	break ;	1136:3:37226:37231	879749	5	True				
ANR	880505	BreakStatement	break ;	1138:2:37239:37244	879749	38	True				
ANR	880506	Label	case 'e' :	1139:1:37247:37255	879749	39	True				
ANR	880507	CompoundStatement		117:3:3330:3365	879749	40					
ANR	880508	IdentifierDeclStatement	int pid = ( input [ 2 ] == ' ' ) ? atoi ( input + 2 ) : core -> dbg -> pid ;	1141:3:37273:37334	879749	0	True				
ANR	880509	IdentifierDecl	pid = ( input [ 2 ] == ' ' ) ? atoi ( input + 2 ) : core -> dbg -> pid		879749	0					
ANR	880510	IdentifierDeclType	int		879749	0					
ANR	880511	Identifier	pid		879749	1					
ANR	880512	AssignmentExpression	pid = ( input [ 2 ] == ' ' ) ? atoi ( input + 2 ) : core -> dbg -> pid		879749	2		=			
ANR	880513	Identifier	pid		879749	0					
ANR	880514	ConditionalExpression	( input [ 2 ] == ' ' ) ? atoi ( input + 2 ) : core -> dbg -> pid		879749	1					
ANR	880515	Condition	input [ 2 ] == ' '		879749	0					
ANR	880516	EqualityExpression	input [ 2 ] == ' '		879749	0		==			
ANR	880517	ArrayIndexing	input [ 2 ]		879749	0					
ANR	880518	Identifier	input		879749	0					
ANR	880519	PrimaryExpression	2		879749	1					
ANR	880520	PrimaryExpression	' '		879749	1					
ANR	880521	CallExpression	atoi ( input + 2 )		879749	1					
ANR	880522	Callee	atoi		879749	0					
ANR	880523	Identifier	atoi		879749	0					
ANR	880524	ArgumentList	input + 2		879749	1					
ANR	880525	Argument	input + 2		879749	0					
ANR	880526	AdditiveExpression	input + 2		879749	0		+			
ANR	880527	Identifier	input		879749	0					
ANR	880528	PrimaryExpression	2		879749	1					
ANR	880529	PtrMemberAccess	core -> dbg -> pid		879749	2					
ANR	880530	PtrMemberAccess	core -> dbg		879749	0					
ANR	880531	Identifier	core		879749	0					
ANR	880532	Identifier	dbg		879749	1					
ANR	880533	Identifier	pid		879749	1					
ANR	880534	IdentifierDeclStatement	char * exe = r_sys_pid_to_path ( pid ) ;	1142:3:37339:37374	879749	1	True				
ANR	880535	IdentifierDecl	* exe = r_sys_pid_to_path ( pid )		879749	0					
ANR	880536	IdentifierDeclType	char *		879749	0					
ANR	880537	Identifier	exe		879749	1					
ANR	880538	AssignmentExpression	* exe = r_sys_pid_to_path ( pid )		879749	2		=			
ANR	880539	Identifier	exe		879749	0					
ANR	880540	CallExpression	r_sys_pid_to_path ( pid )		879749	1					
ANR	880541	Callee	r_sys_pid_to_path		879749	0					
ANR	880542	Identifier	r_sys_pid_to_path		879749	0					
ANR	880543	ArgumentList	pid		879749	1					
ANR	880544	Argument	pid		879749	0					
ANR	880545	Identifier	pid		879749	0					
ANR	880546	IfStatement	if ( exe )		879749	2					
ANR	880547	Condition	exe	1143:7:37383:37385	879749	0	True				
ANR	880548	Identifier	exe		879749	0					
ANR	880549	CompoundStatement		118:12:3379:3379	879749	1					
ANR	880550	ExpressionStatement	r_cons_println ( exe )	1144:4:37394:37414	879749	0	True				
ANR	880551	CallExpression	r_cons_println ( exe )		879749	0					
ANR	880552	Callee	r_cons_println		879749	0					
ANR	880553	Identifier	r_cons_println		879749	0					
ANR	880554	ArgumentList	exe		879749	1					
ANR	880555	Argument	exe		879749	0					
ANR	880556	Identifier	exe		879749	0					
ANR	880557	ExpressionStatement	free ( exe )	1145:4:37420:37430	879749	1	True				
ANR	880558	CallExpression	free ( exe )		879749	0					
ANR	880559	Callee	free		879749	0					
ANR	880560	Identifier	free		879749	0					
ANR	880561	ArgumentList	exe		879749	1					
ANR	880562	Argument	exe		879749	0					
ANR	880563	Identifier	exe		879749	0					
ANR	880564	BreakStatement	break ;	1148:2:37443:37448	879749	41	True				
ANR	880565	Label	case ' ' :	1149:1:37451:37459	879749	42	True				
ANR	880566	ExpressionStatement	"r_debug_pid_list ( core -> dbg , ( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) ) , 0 )"	1150:2:37472:37564	879749	43	True				
ANR	880567	CallExpression	"r_debug_pid_list ( core -> dbg , ( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) ) , 0 )"		879749	0					
ANR	880568	Callee	r_debug_pid_list		879749	0					
ANR	880569	Identifier	r_debug_pid_list		879749	0					
ANR	880570	ArgumentList	core -> dbg		879749	1					
ANR	880571	Argument	core -> dbg		879749	0					
ANR	880572	PtrMemberAccess	core -> dbg		879749	0					
ANR	880573	Identifier	core		879749	0					
ANR	880574	Identifier	dbg		879749	1					
ANR	880575	Argument	"( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) )"		879749	1					
ANR	880576	CastExpression	"( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) )"		879749	0					
ANR	880577	CastTarget	int		879749	0					
ANR	880578	CallExpression	"R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) )"		879749	1					
ANR	880579	Callee	R_MAX		879749	0					
ANR	880580	Identifier	R_MAX		879749	0					
ANR	880581	ArgumentList	0		879749	1					
ANR	880582	Argument	0		879749	0					
ANR	880583	PrimaryExpression	0		879749	0					
ANR	880584	Argument	"( int ) r_num_math ( core -> num , input + 2 )"		879749	1					
ANR	880585	CastExpression	"( int ) r_num_math ( core -> num , input + 2 )"		879749	0					
ANR	880586	CastTarget	int		879749	0					
ANR	880587	CallExpression	"r_num_math ( core -> num , input + 2 )"		879749	1					
ANR	880588	Callee	r_num_math		879749	0					
ANR	880589	Identifier	r_num_math		879749	0					
ANR	880590	ArgumentList	core -> num		879749	1					
ANR	880591	Argument	core -> num		879749	0					
ANR	880592	PtrMemberAccess	core -> num		879749	0					
ANR	880593	Identifier	core		879749	0					
ANR	880594	Identifier	num		879749	1					
ANR	880595	Argument	input + 2		879749	1					
ANR	880596	AdditiveExpression	input + 2		879749	0		+			
ANR	880597	Identifier	input		879749	0					
ANR	880598	PrimaryExpression	2		879749	1					
ANR	880599	Argument	0		879749	2					
ANR	880600	PrimaryExpression	0		879749	0					
ANR	880601	BreakStatement	break ;	1152:2:37568:37573	879749	44	True				
ANR	880602	Label	case '?' :	1153:1:37576:37584	879749	45	True				
ANR	880603	Label	default :	1154:1:37596:37603	879749	46	True				
ANR	880604	Identifier	default		879749	0					
ANR	880605	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dp )"	1155:2:37607:37642	879749	47	True				
ANR	880606	CallExpression	"r_core_cmd_help ( core , help_msg_dp )"		879749	0					
ANR	880607	Callee	r_core_cmd_help		879749	0					
ANR	880608	Identifier	r_core_cmd_help		879749	0					
ANR	880609	ArgumentList	core		879749	1					
ANR	880610	Argument	core		879749	0					
ANR	880611	Identifier	core		879749	0					
ANR	880612	Argument	help_msg_dp		879749	1					
ANR	880613	Identifier	help_msg_dp		879749	0					
ANR	880614	BreakStatement	break ;	1156:2:37646:37651	879749	48	True				
ANR	880615	ReturnType	static void		879749	1					
ANR	880616	Identifier	cmd_debug_pid		879749	2					
ANR	880617	ParameterList	"RCore * core , const char * input"		879749	3					
ANR	880618	Parameter	RCore * core	1026:26:33976:33986	879749	0	True				
ANR	880619	ParameterType	RCore *		879749	0					
ANR	880620	Identifier	core		879749	1					
ANR	880621	Parameter	const char * input	1026:39:33989:34005	879749	1	True				
ANR	880622	ParameterType	const char *		879749	0					
ANR	880623	Identifier	input		879749	1					
ANR	880624	CFGEntryNode	ENTRY		879749		True				
ANR	880625	CFGExitNode	EXIT		879749		True				
ANR	880626	Symbol	core -> dbg -> main_pid		879749						
ANR	880627	Symbol	* input		879749						
ANR	880628	Symbol	* core		879749						
ANR	880629	Symbol	strchr		879749						
ANR	880630	Symbol	pid		879749						
ANR	880631	Symbol	* core -> dbg -> h		879749						
ANR	880632	Symbol	r_num_math		879749						
ANR	880633	Symbol	sig		879749						
ANR	880634	Symbol	exe		879749						
ANR	880635	Symbol	core -> io		879749						
ANR	880636	Symbol	core -> dbg -> n_threads		879749						
ANR	880637	Symbol	core -> num		879749						
ANR	880638	Symbol	* * core		879749						
ANR	880639	Symbol	atoi		879749						
ANR	880640	Symbol	core -> config		879749						
ANR	880641	Symbol	core -> dbg -> forked_pid		879749						
ANR	880642	Symbol	core -> file		879749						
ANR	880643	Symbol	core -> dbg -> h -> canstep		879749						
ANR	880644	Symbol	false		879749						
ANR	880645	Symbol	core -> dbg -> h		879749						
ANR	880646	Symbol	r_sys_pid_to_path		879749						
ANR	880647	Symbol	ptr		879749						
ANR	880648	Symbol	r_io_fd_get_tid		879749						
ANR	880649	Symbol	core		879749						
ANR	880650	Symbol	input		879749						
ANR	880651	Symbol	help_msg_dp		879749						
ANR	880652	Symbol	* core -> file		879749						
ANR	880653	Symbol	* * * core		879749						
ANR	880654	Symbol	r_debug_child_fork		879749						
ANR	880655	Symbol	r_debug_child_clone		879749						
ANR	880656	Symbol	r_io_fd_get_pid		879749						
ANR	880657	Symbol	r_str_trim_ro		879749						
ANR	880658	Symbol	core -> file -> fd		879749						
ANR	880659	Symbol	R_MAX		879749						
ANR	880660	Symbol	core -> dbg -> tid		879749						
ANR	880661	Symbol	core -> dbg -> pid		879749						
ANR	880662	Symbol	* core -> dbg		879749						
ANR	880663	Symbol	core -> dbg		879749						
ANR	880664	Symbol	* * core -> dbg		879749						
ANR	880665	Function	cmd_debug_backtrace	1160:0:37659:38811							
ANR	880666	FunctionDef	"cmd_debug_backtrace (RCore * core , const char * input)"		880665	0					
ANR	880667	CompoundStatement		1160:64:37723:38811	880665	0					
ANR	880668	IdentifierDeclStatement	RAnalOp analop ;	1161:1:37726:37740	880665	0	True				
ANR	880669	IdentifierDecl	analop		880665	0					
ANR	880670	IdentifierDeclType	RAnalOp		880665	0					
ANR	880671	Identifier	analop		880665	1					
ANR	880672	IdentifierDeclStatement	"ut64 addr , len = r_num_math ( core -> num , input ) ;"	1162:1:37743:37789	880665	1	True				
ANR	880673	IdentifierDecl	addr		880665	0					
ANR	880674	IdentifierDeclType	ut64		880665	0					
ANR	880675	Identifier	addr		880665	1					
ANR	880676	IdentifierDecl	"len = r_num_math ( core -> num , input )"		880665	1					
ANR	880677	IdentifierDeclType	ut64		880665	0					
ANR	880678	Identifier	len		880665	1					
ANR	880679	AssignmentExpression	"len = r_num_math ( core -> num , input )"		880665	2		=			
ANR	880680	Identifier	len		880665	0					
ANR	880681	CallExpression	"r_num_math ( core -> num , input )"		880665	1					
ANR	880682	Callee	r_num_math		880665	0					
ANR	880683	Identifier	r_num_math		880665	0					
ANR	880684	ArgumentList	core -> num		880665	1					
ANR	880685	Argument	core -> num		880665	0					
ANR	880686	PtrMemberAccess	core -> num		880665	0					
ANR	880687	Identifier	core		880665	0					
ANR	880688	Identifier	num		880665	1					
ANR	880689	Argument	input		880665	1					
ANR	880690	Identifier	input		880665	0					
ANR	880691	IfStatement	if ( ! len )		880665	2					
ANR	880692	Condition	! len	1163:5:37796:37799	880665	0	True				
ANR	880693	UnaryOperationExpression	! len		880665	0					
ANR	880694	UnaryOperator	!		880665	0					
ANR	880695	Identifier	len		880665	1					
ANR	880696	CompoundStatement		4:11:78:78	880665	1					
ANR	880697	ExpressionStatement	r_bp_traptrace_list ( core -> dbg -> bp )	1164:2:37806:37841	880665	0	True				
ANR	880698	CallExpression	r_bp_traptrace_list ( core -> dbg -> bp )		880665	0					
ANR	880699	Callee	r_bp_traptrace_list		880665	0					
ANR	880700	Identifier	r_bp_traptrace_list		880665	0					
ANR	880701	ArgumentList	core -> dbg -> bp		880665	1					
ANR	880702	Argument	core -> dbg -> bp		880665	0					
ANR	880703	PtrMemberAccess	core -> dbg -> bp		880665	0					
ANR	880704	PtrMemberAccess	core -> dbg		880665	0					
ANR	880705	Identifier	core		880665	0					
ANR	880706	Identifier	dbg		880665	1					
ANR	880707	Identifier	bp		880665	1					
ANR	880708	ElseStatement	else		880665	0					
ANR	880709	CompoundStatement		6:8:127:127	880665	0					
ANR	880710	Statement	ut64	1166:2:37855:37858	880665	0	True				
ANR	880711	Statement	oaddr	1166:7:37860:37864	880665	1	True				
ANR	880712	Statement	=	1166:13:37866:37866	880665	2	True				
ANR	880713	Statement	0L	1166:15:37868:37869	880665	3	True				
ANR	880714	ExpressionStatement	L	1166:17:37870:37871	880665	4	True				
ANR	880715	Identifier	L		880665	0					
ANR	880716	Statement	eprintf	1167:2:37875:37881	880665	5	True				
ANR	880717	Statement	(	1167:10:37883:37883	880665	6	True				
ANR	880718	Statement	"""Trap tracing 0x%08"""	1167:11:37884:37903	880665	7	True				
ANR	880719	Statement	PFMT64x	1167:31:37904:37910	880665	8	True				
ANR	880720	Statement	"""-0x%08"""	1167:38:37911:37918	880665	9	True				
ANR	880721	Statement	PFMT64x	1167:46:37919:37925	880665	10	True				
ANR	880722	Statement	"""\\n"""	1167:53:37926:37929	880665	11	True				
ANR	880723	Statement	","	1167:57:37930:37930	880665	12	True				
ANR	880724	Statement	core	1168:4:37936:37939	880665	13	True				
ANR	880725	Statement	->	1168:8:37940:37941	880665	14	True				
ANR	880726	Statement	offset	1168:10:37942:37947	880665	15	True				
ANR	880727	Statement	","	1168:16:37948:37948	880665	16	True				
ANR	880728	Statement	core	1168:18:37950:37953	880665	17	True				
ANR	880729	Statement	->	1168:22:37954:37955	880665	18	True				
ANR	880730	Statement	offset	1168:24:37956:37961	880665	19	True				
ANR	880731	Statement	+	1168:30:37962:37962	880665	20	True				
ANR	880732	Statement	len	1168:31:37963:37965	880665	21	True				
ANR	880733	Statement	)	1168:34:37966:37966	880665	22	True				
ANR	880734	ExpressionStatement		1168:35:37967:37967	880665	23	True				
ANR	880735	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	1169:2:37971:38010	880665	24	True				
ANR	880736	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		880665	0					
ANR	880737	Callee	r_reg_arena_swap		880665	0					
ANR	880738	Identifier	r_reg_arena_swap		880665	0					
ANR	880739	ArgumentList	core -> dbg -> reg		880665	1					
ANR	880740	Argument	core -> dbg -> reg		880665	0					
ANR	880741	PtrMemberAccess	core -> dbg -> reg		880665	0					
ANR	880742	PtrMemberAccess	core -> dbg		880665	0					
ANR	880743	Identifier	core		880665	0					
ANR	880744	Identifier	dbg		880665	1					
ANR	880745	Identifier	reg		880665	1					
ANR	880746	Argument	true		880665	1					
ANR	880747	Identifier	true		880665	0					
ANR	880748	ExpressionStatement	"r_bp_traptrace_reset ( core -> dbg -> bp , true )"	1170:2:38014:38056	880665	25	True				
ANR	880749	CallExpression	"r_bp_traptrace_reset ( core -> dbg -> bp , true )"		880665	0					
ANR	880750	Callee	r_bp_traptrace_reset		880665	0					
ANR	880751	Identifier	r_bp_traptrace_reset		880665	0					
ANR	880752	ArgumentList	core -> dbg -> bp		880665	1					
ANR	880753	Argument	core -> dbg -> bp		880665	0					
ANR	880754	PtrMemberAccess	core -> dbg -> bp		880665	0					
ANR	880755	PtrMemberAccess	core -> dbg		880665	0					
ANR	880756	Identifier	core		880665	0					
ANR	880757	Identifier	dbg		880665	1					
ANR	880758	Identifier	bp		880665	1					
ANR	880759	Argument	true		880665	1					
ANR	880760	Identifier	true		880665	0					
ANR	880761	ExpressionStatement	"r_bp_traptrace_add ( core -> dbg -> bp , core -> offset , core -> offset + len )"	1171:2:38060:38126	880665	26	True				
ANR	880762	CallExpression	"r_bp_traptrace_add ( core -> dbg -> bp , core -> offset , core -> offset + len )"		880665	0					
ANR	880763	Callee	r_bp_traptrace_add		880665	0					
ANR	880764	Identifier	r_bp_traptrace_add		880665	0					
ANR	880765	ArgumentList	core -> dbg -> bp		880665	1					
ANR	880766	Argument	core -> dbg -> bp		880665	0					
ANR	880767	PtrMemberAccess	core -> dbg -> bp		880665	0					
ANR	880768	PtrMemberAccess	core -> dbg		880665	0					
ANR	880769	Identifier	core		880665	0					
ANR	880770	Identifier	dbg		880665	1					
ANR	880771	Identifier	bp		880665	1					
ANR	880772	Argument	core -> offset		880665	1					
ANR	880773	PtrMemberAccess	core -> offset		880665	0					
ANR	880774	Identifier	core		880665	0					
ANR	880775	Identifier	offset		880665	1					
ANR	880776	Argument	core -> offset + len		880665	2					
ANR	880777	AdditiveExpression	core -> offset + len		880665	0		+			
ANR	880778	PtrMemberAccess	core -> offset		880665	0					
ANR	880779	Identifier	core		880665	0					
ANR	880780	Identifier	offset		880665	1					
ANR	880781	Identifier	len		880665	1					
ANR	880782	ExpressionStatement	"r_bp_traptrace_enable ( core -> dbg -> bp , true )"	1172:2:38130:38173	880665	27	True				
ANR	880783	CallExpression	"r_bp_traptrace_enable ( core -> dbg -> bp , true )"		880665	0					
ANR	880784	Callee	r_bp_traptrace_enable		880665	0					
ANR	880785	Identifier	r_bp_traptrace_enable		880665	0					
ANR	880786	ArgumentList	core -> dbg -> bp		880665	1					
ANR	880787	Argument	core -> dbg -> bp		880665	0					
ANR	880788	PtrMemberAccess	core -> dbg -> bp		880665	0					
ANR	880789	PtrMemberAccess	core -> dbg		880665	0					
ANR	880790	Identifier	core		880665	0					
ANR	880791	Identifier	dbg		880665	1					
ANR	880792	Identifier	bp		880665	1					
ANR	880793	Argument	true		880665	1					
ANR	880794	Identifier	true		880665	0					
ANR	880795	DoStatement	do		880665	28					
ANR	880796	CompoundStatement		15:3:461:472	880665	0					
ANR	880797	IdentifierDeclStatement	ut8 buf [ 32 ] ;	1174:3:38185:38196	880665	0	True				
ANR	880798	IdentifierDecl	buf [ 32 ]		880665	0					
ANR	880799	IdentifierDeclType	ut8 [ 32 ]		880665	0					
ANR	880800	Identifier	buf		880665	1					
ANR	880801	PrimaryExpression	32		880665	2					
ANR	880802	ExpressionStatement	r_debug_continue ( core -> dbg )	1175:3:38201:38229	880665	1	True				
ANR	880803	CallExpression	r_debug_continue ( core -> dbg )		880665	0					
ANR	880804	Callee	r_debug_continue		880665	0					
ANR	880805	Identifier	r_debug_continue		880665	0					
ANR	880806	ArgumentList	core -> dbg		880665	1					
ANR	880807	Argument	core -> dbg		880665	0					
ANR	880808	PtrMemberAccess	core -> dbg		880665	0					
ANR	880809	Identifier	core		880665	0					
ANR	880810	Identifier	dbg		880665	1					
ANR	880811	ExpressionStatement	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"	1176:3:38234:38274	880665	2	True				
ANR	880812	AssignmentExpression	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"		880665	0		=			
ANR	880813	Identifier	addr		880665	0					
ANR	880814	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		880665	1					
ANR	880815	Callee	r_debug_reg_get		880665	0					
ANR	880816	Identifier	r_debug_reg_get		880665	0					
ANR	880817	ArgumentList	core -> dbg		880665	1					
ANR	880818	Argument	core -> dbg		880665	0					
ANR	880819	PtrMemberAccess	core -> dbg		880665	0					
ANR	880820	Identifier	core		880665	0					
ANR	880821	Identifier	dbg		880665	1					
ANR	880822	Argument	"""PC"""		880665	1					
ANR	880823	PrimaryExpression	"""PC"""		880665	0					
ANR	880824	IfStatement	if ( ! addr )		880665	3					
ANR	880825	Condition	! addr	1177:7:38283:38287	880665	0	True				
ANR	880826	UnaryOperationExpression	! addr		880665	0					
ANR	880827	UnaryOperator	!		880665	0					
ANR	880828	Identifier	addr		880665	1					
ANR	880829	CompoundStatement		18:14:566:566	880665	1					
ANR	880830	ExpressionStatement	"eprintf ( ""pc=0\\n"" )"	1178:4:38296:38314	880665	0	True				
ANR	880831	CallExpression	"eprintf ( ""pc=0\\n"" )"		880665	0					
ANR	880832	Callee	eprintf		880665	0					
ANR	880833	Identifier	eprintf		880665	0					
ANR	880834	ArgumentList	"""pc=0\\n"""		880665	1					
ANR	880835	Argument	"""pc=0\\n"""		880665	0					
ANR	880836	PrimaryExpression	"""pc=0\\n"""		880665	0					
ANR	880837	BreakStatement	break ;	1179:4:38320:38325	880665	1	True				
ANR	880838	IfStatement	if ( addr == oaddr )		880665	4					
ANR	880839	Condition	addr == oaddr	1181:7:38339:38351	880665	0	True				
ANR	880840	EqualityExpression	addr == oaddr		880665	0		==			
ANR	880841	Identifier	addr		880665	0					
ANR	880842	Identifier	oaddr		880665	1					
ANR	880843	CompoundStatement		22:22:630:630	880665	1					
ANR	880844	ExpressionStatement	"eprintf ( ""pc=opc\\n"" )"	1182:4:38360:38380	880665	0	True				
ANR	880845	CallExpression	"eprintf ( ""pc=opc\\n"" )"		880665	0					
ANR	880846	Callee	eprintf		880665	0					
ANR	880847	Identifier	eprintf		880665	0					
ANR	880848	ArgumentList	"""pc=opc\\n"""		880665	1					
ANR	880849	Argument	"""pc=opc\\n"""		880665	0					
ANR	880850	PrimaryExpression	"""pc=opc\\n"""		880665	0					
ANR	880851	BreakStatement	break ;	1183:4:38386:38391	880665	1	True				
ANR	880852	ExpressionStatement	oaddr = addr	1185:3:38401:38413	880665	5	True				
ANR	880853	AssignmentExpression	oaddr = addr		880665	0		=			
ANR	880854	Identifier	oaddr		880665	0					
ANR	880855	Identifier	addr		880665	1					
ANR	880856	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , 32 )"	1188:3:38548:38586	880665	6	True				
ANR	880857	CallExpression	"r_io_read_at ( core -> io , addr , buf , 32 )"		880665	0					
ANR	880858	Callee	r_io_read_at		880665	0					
ANR	880859	Identifier	r_io_read_at		880665	0					
ANR	880860	ArgumentList	core -> io		880665	1					
ANR	880861	Argument	core -> io		880665	0					
ANR	880862	PtrMemberAccess	core -> io		880665	0					
ANR	880863	Identifier	core		880665	0					
ANR	880864	Identifier	io		880665	1					
ANR	880865	Argument	addr		880665	1					
ANR	880866	Identifier	addr		880665	0					
ANR	880867	Argument	buf		880665	2					
ANR	880868	Identifier	buf		880665	0					
ANR	880869	Argument	32		880665	3					
ANR	880870	PrimaryExpression	32		880665	0					
ANR	880871	ExpressionStatement	"r_anal_op ( core -> anal , & analop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	1189:3:38614:38692	880665	7	True				
ANR	880872	CallExpression	"r_anal_op ( core -> anal , & analop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		880665	0					
ANR	880873	Callee	r_anal_op		880665	0					
ANR	880874	Identifier	r_anal_op		880665	0					
ANR	880875	ArgumentList	core -> anal		880665	1					
ANR	880876	Argument	core -> anal		880665	0					
ANR	880877	PtrMemberAccess	core -> anal		880665	0					
ANR	880878	Identifier	core		880665	0					
ANR	880879	Identifier	anal		880665	1					
ANR	880880	Argument	& analop		880665	1					
ANR	880881	UnaryOperationExpression	& analop		880665	0					
ANR	880882	UnaryOperator	&		880665	0					
ANR	880883	Identifier	analop		880665	1					
ANR	880884	Argument	addr		880665	2					
ANR	880885	Identifier	addr		880665	0					
ANR	880886	Argument	buf		880665	3					
ANR	880887	Identifier	buf		880665	0					
ANR	880888	Argument	sizeof ( buf )		880665	4					
ANR	880889	SizeofExpression	sizeof ( buf )		880665	0					
ANR	880890	Sizeof	sizeof		880665	0					
ANR	880891	SizeofOperand	buf		880665	1					
ANR	880892	Argument	R_ANAL_OP_MASK_BASIC		880665	5					
ANR	880893	Identifier	R_ANAL_OP_MASK_BASIC		880665	0					
ANR	880894	Condition	"r_bp_traptrace_at ( core -> dbg -> bp , addr , analop . size )"	1190:11:38705:38756	880665	1	True				
ANR	880895	CallExpression	"r_bp_traptrace_at ( core -> dbg -> bp , addr , analop . size )"		880665	0					
ANR	880896	Callee	r_bp_traptrace_at		880665	0					
ANR	880897	Identifier	r_bp_traptrace_at		880665	0					
ANR	880898	ArgumentList	core -> dbg -> bp		880665	1					
ANR	880899	Argument	core -> dbg -> bp		880665	0					
ANR	880900	PtrMemberAccess	core -> dbg -> bp		880665	0					
ANR	880901	PtrMemberAccess	core -> dbg		880665	0					
ANR	880902	Identifier	core		880665	0					
ANR	880903	Identifier	dbg		880665	1					
ANR	880904	Identifier	bp		880665	1					
ANR	880905	Argument	addr		880665	1					
ANR	880906	Identifier	addr		880665	0					
ANR	880907	Argument	analop . size		880665	2					
ANR	880908	MemberAccess	analop . size		880665	0					
ANR	880909	Identifier	analop		880665	0					
ANR	880910	Identifier	size		880665	1					
ANR	880911	ExpressionStatement	"r_bp_traptrace_enable ( core -> dbg -> bp , false )"	1191:2:38762:38806	880665	29	True				
ANR	880912	CallExpression	"r_bp_traptrace_enable ( core -> dbg -> bp , false )"		880665	0					
ANR	880913	Callee	r_bp_traptrace_enable		880665	0					
ANR	880914	Identifier	r_bp_traptrace_enable		880665	0					
ANR	880915	ArgumentList	core -> dbg -> bp		880665	1					
ANR	880916	Argument	core -> dbg -> bp		880665	0					
ANR	880917	PtrMemberAccess	core -> dbg -> bp		880665	0					
ANR	880918	PtrMemberAccess	core -> dbg		880665	0					
ANR	880919	Identifier	core		880665	0					
ANR	880920	Identifier	dbg		880665	1					
ANR	880921	Identifier	bp		880665	1					
ANR	880922	Argument	false		880665	1					
ANR	880923	Identifier	false		880665	0					
ANR	880924	ReturnType	static void		880665	1					
ANR	880925	Identifier	cmd_debug_backtrace		880665	2					
ANR	880926	ParameterList	"RCore * core , const char * input"		880665	3					
ANR	880927	Parameter	RCore * core	1160:32:37691:37701	880665	0	True				
ANR	880928	ParameterType	RCore *		880665	0					
ANR	880929	Identifier	core		880665	1					
ANR	880930	Parameter	const char * input	1160:45:37704:37720	880665	1	True				
ANR	880931	ParameterType	const char *		880665	0					
ANR	880932	Identifier	input		880665	1					
ANR	880933	CFGEntryNode	ENTRY		880665		True				
ANR	880934	CFGExitNode	EXIT		880665		True				
ANR	880935	Symbol	& analop		880665						
ANR	880936	Symbol	r_debug_reg_get		880665						
ANR	880937	Symbol	* core		880665						
ANR	880938	Symbol	core -> offset		880665						
ANR	880939	Symbol	core -> dbg -> bp		880665						
ANR	880940	Symbol	R_ANAL_OP_MASK_BASIC		880665						
ANR	880941	Symbol	core -> anal		880665						
ANR	880942	Symbol	r_num_math		880665						
ANR	880943	Symbol	len		880665						
ANR	880944	Symbol	core -> io		880665						
ANR	880945	Symbol	core -> num		880665						
ANR	880946	Symbol	addr		880665						
ANR	880947	Symbol	* * core		880665						
ANR	880948	Symbol	r_bp_traptrace_at		880665						
ANR	880949	Symbol	false		880665						
ANR	880950	Symbol	oaddr		880665						
ANR	880951	Symbol	core		880665						
ANR	880952	Symbol	input		880665						
ANR	880953	Symbol	buf		880665						
ANR	880954	Symbol	core -> dbg -> reg		880665						
ANR	880955	Symbol	analop . size		880665						
ANR	880956	Symbol	analop		880665						
ANR	880957	Symbol	true		880665						
ANR	880958	Symbol	* core -> dbg		880665						
ANR	880959	Symbol	core -> dbg		880665						
ANR	880960	Function	__r_debug_snap_diff	1195:0:38814:39481							
ANR	880961	FunctionDef	"__r_debug_snap_diff (RCore * core , int idx)"		880960	0					
ANR	880962	CompoundStatement		1195:53:38867:39481	880960	0					
ANR	880963	IdentifierDeclStatement	ut32 count = 0 ;	1196:1:38870:38884	880960	0	True				
ANR	880964	IdentifierDecl	count = 0		880960	0					
ANR	880965	IdentifierDeclType	ut32		880960	0					
ANR	880966	Identifier	count		880960	1					
ANR	880967	AssignmentExpression	count = 0		880960	2		=			
ANR	880968	Identifier	count		880960	0					
ANR	880969	PrimaryExpression	0		880960	1					
ANR	880970	IdentifierDeclStatement	RDebug * dbg = core -> dbg ;	1197:1:38887:38910	880960	1	True				
ANR	880971	IdentifierDecl	* dbg = core -> dbg		880960	0					
ANR	880972	IdentifierDeclType	RDebug *		880960	0					
ANR	880973	Identifier	dbg		880960	1					
ANR	880974	AssignmentExpression	* dbg = core -> dbg		880960	2		=			
ANR	880975	Identifier	dbg		880960	0					
ANR	880976	PtrMemberAccess	core -> dbg		880960	1					
ANR	880977	Identifier	core		880960	0					
ANR	880978	Identifier	dbg		880960	1					
ANR	880979	IdentifierDeclStatement	ut32 oflags = core -> print -> flags ;	1198:1:38913:38945	880960	2	True				
ANR	880980	IdentifierDecl	oflags = core -> print -> flags		880960	0					
ANR	880981	IdentifierDeclType	ut32		880960	0					
ANR	880982	Identifier	oflags		880960	1					
ANR	880983	AssignmentExpression	oflags = core -> print -> flags		880960	2		=			
ANR	880984	Identifier	oflags		880960	0					
ANR	880985	PtrMemberAccess	core -> print -> flags		880960	1					
ANR	880986	PtrMemberAccess	core -> print		880960	0					
ANR	880987	Identifier	core		880960	0					
ANR	880988	Identifier	print		880960	1					
ANR	880989	Identifier	flags		880960	1					
ANR	880990	IdentifierDeclStatement	int col = core -> cons -> columns > 123 ;	1199:1:38948:38981	880960	3	True				
ANR	880991	IdentifierDecl	col = core -> cons -> columns > 123		880960	0					
ANR	880992	IdentifierDeclType	int		880960	0					
ANR	880993	Identifier	col		880960	1					
ANR	880994	AssignmentExpression	col = core -> cons -> columns > 123		880960	2		=			
ANR	880995	Identifier	col		880960	0					
ANR	880996	RelationalExpression	core -> cons -> columns > 123		880960	1		>			
ANR	880997	PtrMemberAccess	core -> cons -> columns		880960	0					
ANR	880998	PtrMemberAccess	core -> cons		880960	0					
ANR	880999	Identifier	core		880960	0					
ANR	881000	Identifier	cons		880960	1					
ANR	881001	Identifier	columns		880960	1					
ANR	881002	PrimaryExpression	123		880960	1					
ANR	881003	IdentifierDeclStatement	RDebugSnap * snap ;	1200:1:38984:39000	880960	4	True				
ANR	881004	IdentifierDecl	* snap		880960	0					
ANR	881005	IdentifierDeclType	RDebugSnap *		880960	0					
ANR	881006	Identifier	snap		880960	1					
ANR	881007	IdentifierDeclStatement	RListIter * iter ;	1201:1:39003:39018	880960	5	True				
ANR	881008	IdentifierDecl	* iter		880960	0					
ANR	881009	IdentifierDeclType	RListIter *		880960	0					
ANR	881010	Identifier	iter		880960	1					
ANR	881011	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_DIFFOUT	1202:1:39021:39064	880960	6	True				
ANR	881012	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_DIFFOUT		880960	0		|=			
ANR	881013	PtrMemberAccess	core -> print -> flags		880960	0					
ANR	881014	PtrMemberAccess	core -> print		880960	0					
ANR	881015	Identifier	core		880960	0					
ANR	881016	Identifier	print		880960	1					
ANR	881017	Identifier	flags		880960	1					
ANR	881018	Identifier	R_PRINT_FLAGS_DIFFOUT		880960	1					
ANR	881019	Statement	r_list_foreach	1203:1:39067:39080	880960	7	True				
ANR	881020	Statement	(	1203:16:39082:39082	880960	8	True				
ANR	881021	Statement	dbg	1203:17:39083:39085	880960	9	True				
ANR	881022	Statement	->	1203:20:39086:39087	880960	10	True				
ANR	881023	Statement	snaps	1203:22:39088:39092	880960	11	True				
ANR	881024	Statement	","	1203:27:39093:39093	880960	12	True				
ANR	881025	Statement	iter	1203:29:39095:39098	880960	13	True				
ANR	881026	Statement	","	1203:33:39099:39099	880960	14	True				
ANR	881027	Statement	snap	1203:35:39101:39104	880960	15	True				
ANR	881028	Statement	)	1203:39:39105:39105	880960	16	True				
ANR	881029	CompoundStatement		9:41:239:239	880960	17					
ANR	881030	IfStatement	if ( count == idx )		880960	0					
ANR	881031	Condition	count == idx	1204:6:39115:39126	880960	0	True				
ANR	881032	EqualityExpression	count == idx		880960	0		==			
ANR	881033	Identifier	count		880960	0					
ANR	881034	Identifier	idx		880960	1					
ANR	881035	CompoundStatement		11:3:266:294	880960	1					
ANR	881036	IdentifierDeclStatement	ut8 * b = malloc ( snap -> size ) ;	1205:3:39134:39162	880960	0	True				
ANR	881037	IdentifierDecl	* b = malloc ( snap -> size )		880960	0					
ANR	881038	IdentifierDeclType	ut8 *		880960	0					
ANR	881039	Identifier	b		880960	1					
ANR	881040	AssignmentExpression	* b = malloc ( snap -> size )		880960	2		=			
ANR	881041	Identifier	b		880960	0					
ANR	881042	CallExpression	malloc ( snap -> size )		880960	1					
ANR	881043	Callee	malloc		880960	0					
ANR	881044	Identifier	malloc		880960	0					
ANR	881045	ArgumentList	snap -> size		880960	1					
ANR	881046	Argument	snap -> size		880960	0					
ANR	881047	PtrMemberAccess	snap -> size		880960	0					
ANR	881048	Identifier	snap		880960	0					
ANR	881049	Identifier	size		880960	1					
ANR	881050	IfStatement	if ( ! b )		880960	1					
ANR	881051	Condition	! b	1206:7:39171:39172	880960	0	True				
ANR	881052	UnaryOperationExpression	! b		880960	0					
ANR	881053	UnaryOperator	!		880960	0					
ANR	881054	Identifier	b		880960	1					
ANR	881055	CompoundStatement		12:11:307:307	880960	1					
ANR	881056	ExpressionStatement	"eprintf ( ""Cannot allocate snapshot\\n"" )"	1207:4:39181:39219	880960	0	True				
ANR	881057	CallExpression	"eprintf ( ""Cannot allocate snapshot\\n"" )"		880960	0					
ANR	881058	Callee	eprintf		880960	0					
ANR	881059	Identifier	eprintf		880960	0					
ANR	881060	ArgumentList	"""Cannot allocate snapshot\\n"""		880960	1					
ANR	881061	Argument	"""Cannot allocate snapshot\\n"""		880960	0					
ANR	881062	PrimaryExpression	"""Cannot allocate snapshot\\n"""		880960	0					
ANR	881063	ContinueStatement	continue ;	1208:4:39225:39233	880960	1	True				
ANR	881064	ExpressionStatement	"dbg -> iob . read_at ( dbg -> iob . io , snap -> addr , b , snap -> size )"	1210:3:39243:39301	880960	2	True				
ANR	881065	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , snap -> addr , b , snap -> size )"		880960	0					
ANR	881066	Callee	dbg -> iob . read_at		880960	0					
ANR	881067	MemberAccess	dbg -> iob . read_at		880960	0					
ANR	881068	PtrMemberAccess	dbg -> iob		880960	0					
ANR	881069	Identifier	dbg		880960	0					
ANR	881070	Identifier	iob		880960	1					
ANR	881071	Identifier	read_at		880960	1					
ANR	881072	ArgumentList	dbg -> iob . io		880960	1					
ANR	881073	Argument	dbg -> iob . io		880960	0					
ANR	881074	MemberAccess	dbg -> iob . io		880960	0					
ANR	881075	PtrMemberAccess	dbg -> iob		880960	0					
ANR	881076	Identifier	dbg		880960	0					
ANR	881077	Identifier	iob		880960	1					
ANR	881078	Identifier	io		880960	1					
ANR	881079	Argument	snap -> addr		880960	1					
ANR	881080	PtrMemberAccess	snap -> addr		880960	0					
ANR	881081	Identifier	snap		880960	0					
ANR	881082	Identifier	addr		880960	1					
ANR	881083	Argument	b		880960	2					
ANR	881084	Identifier	b		880960	0					
ANR	881085	Argument	snap -> size		880960	3					
ANR	881086	PtrMemberAccess	snap -> size		880960	0					
ANR	881087	Identifier	snap		880960	0					
ANR	881088	Identifier	size		880960	1					
ANR	881089	ExpressionStatement	"r_print_hexdiff ( core -> print , snap -> addr , snap -> data , snap -> addr , b , snap -> size , col )"	1211:3:39306:39406	880960	3	True				
ANR	881090	CallExpression	"r_print_hexdiff ( core -> print , snap -> addr , snap -> data , snap -> addr , b , snap -> size , col )"		880960	0					
ANR	881091	Callee	r_print_hexdiff		880960	0					
ANR	881092	Identifier	r_print_hexdiff		880960	0					
ANR	881093	ArgumentList	core -> print		880960	1					
ANR	881094	Argument	core -> print		880960	0					
ANR	881095	PtrMemberAccess	core -> print		880960	0					
ANR	881096	Identifier	core		880960	0					
ANR	881097	Identifier	print		880960	1					
ANR	881098	Argument	snap -> addr		880960	1					
ANR	881099	PtrMemberAccess	snap -> addr		880960	0					
ANR	881100	Identifier	snap		880960	0					
ANR	881101	Identifier	addr		880960	1					
ANR	881102	Argument	snap -> data		880960	2					
ANR	881103	PtrMemberAccess	snap -> data		880960	0					
ANR	881104	Identifier	snap		880960	0					
ANR	881105	Identifier	data		880960	1					
ANR	881106	Argument	snap -> addr		880960	3					
ANR	881107	PtrMemberAccess	snap -> addr		880960	0					
ANR	881108	Identifier	snap		880960	0					
ANR	881109	Identifier	addr		880960	1					
ANR	881110	Argument	b		880960	4					
ANR	881111	Identifier	b		880960	0					
ANR	881112	Argument	snap -> size		880960	5					
ANR	881113	PtrMemberAccess	snap -> size		880960	0					
ANR	881114	Identifier	snap		880960	0					
ANR	881115	Identifier	size		880960	1					
ANR	881116	Argument	col		880960	6					
ANR	881117	Identifier	col		880960	0					
ANR	881118	ExpressionStatement	free ( b )	1215:3:39411:39419	880960	4	True				
ANR	881119	CallExpression	free ( b )		880960	0					
ANR	881120	Callee	free		880960	0					
ANR	881121	Identifier	free		880960	0					
ANR	881122	ArgumentList	b		880960	1					
ANR	881123	Argument	b		880960	0					
ANR	881124	Identifier	b		880960	0					
ANR	881125	ExpressionStatement	count ++	1217:2:39427:39435	880960	1	True				
ANR	881126	PostIncDecOperationExpression	count ++		880960	0					
ANR	881127	Identifier	count		880960	0					
ANR	881128	IncDec	++		880960	1					
ANR	881129	ExpressionStatement	core -> print -> flags = oflags	1219:1:39441:39468	880960	18	True				
ANR	881130	AssignmentExpression	core -> print -> flags = oflags		880960	0		=			
ANR	881131	PtrMemberAccess	core -> print -> flags		880960	0					
ANR	881132	PtrMemberAccess	core -> print		880960	0					
ANR	881133	Identifier	core		880960	0					
ANR	881134	Identifier	print		880960	1					
ANR	881135	Identifier	flags		880960	1					
ANR	881136	Identifier	oflags		880960	1					
ANR	881137	ReturnStatement	return 0 ;	1220:1:39471:39479	880960	19	True				
ANR	881138	PrimaryExpression	0		880960	0					
ANR	881139	ReturnType	static int		880960	1					
ANR	881140	Identifier	__r_debug_snap_diff		880960	2					
ANR	881141	ParameterList	"RCore * core , int idx"		880960	3					
ANR	881142	Parameter	RCore * core	1195:31:38845:38855	880960	0	True				
ANR	881143	ParameterType	RCore *		880960	0					
ANR	881144	Identifier	core		880960	1					
ANR	881145	Parameter	int idx	1195:44:38858:38864	880960	1	True				
ANR	881146	ParameterType	int		880960	0					
ANR	881147	Identifier	idx		880960	1					
ANR	881148	CFGEntryNode	ENTRY		880960		True				
ANR	881149	CFGExitNode	EXIT		880960		True				
ANR	881150	CFGErrorNode	ERROR		880960		True				
ANR	881151	Symbol	oflags		880960						
ANR	881152	Symbol	col		880960						
ANR	881153	Symbol	dbg -> iob . io		880960						
ANR	881154	Symbol	snap -> size		880960						
ANR	881155	Symbol	* core -> cons		880960						
ANR	881156	Symbol	* core		880960						
ANR	881157	Symbol	core -> cons -> columns		880960						
ANR	881158	Symbol	snap -> data		880960						
ANR	881159	Symbol	core -> cons		880960						
ANR	881160	Symbol	snap -> addr		880960						
ANR	881161	Symbol	* * core		880960						
ANR	881162	Symbol	malloc		880960						
ANR	881163	Symbol	b		880960						
ANR	881164	Symbol	dbg -> iob		880960						
ANR	881165	Symbol	* snap		880960						
ANR	881166	Symbol	count		880960						
ANR	881167	Symbol	dbg		880960						
ANR	881168	Symbol	iter		880960						
ANR	881169	Symbol	* dbg		880960						
ANR	881170	Symbol	core		880960						
ANR	881171	Symbol	* core -> print		880960						
ANR	881172	Symbol	R_PRINT_FLAGS_DIFFOUT		880960						
ANR	881173	Symbol	idx		880960						
ANR	881174	Symbol	core -> print		880960						
ANR	881175	Symbol	core -> print -> flags		880960						
ANR	881176	Symbol	core -> dbg		880960						
ANR	881177	Symbol	snap		880960						
ANR	881178	Function	cmd_debug_map_snapshot	1223:0:39484:41631							
ANR	881179	FunctionDef	"cmd_debug_map_snapshot (RCore * core , const char * input)"		881178	0					
ANR	881180	CompoundStatement		1223:66:39550:41631	881178	0					
ANR	881181	SwitchStatement	switch ( * input )		881178	0					
ANR	881182	Condition	* input	1224:9:39561:39566	881178	0	True				
ANR	881183	UnaryOperationExpression	* input		881178	0					
ANR	881184	UnaryOperator	*		881178	0					
ANR	881185	Identifier	input		881178	1					
ANR	881186	CompoundStatement		2:17:18:18	881178	1					
ANR	881187	Label	case 'f' :	1225:1:39572:39580	881178	0	True				
ANR	881188	CompoundStatement		6:3:53:69	881178	1					
ANR	881189	IdentifierDeclStatement	char * file ;	1227:3:39589:39599	881178	0	True				
ANR	881190	IdentifierDecl	* file		881178	0					
ANR	881191	IdentifierDeclType	char *		881178	0					
ANR	881192	Identifier	file		881178	1					
ANR	881193	IdentifierDeclStatement	RDebugSnap * snap ;	1228:3:39604:39620	881178	1	True				
ANR	881194	IdentifierDecl	* snap		881178	0					
ANR	881195	IdentifierDeclType	RDebugSnap *		881178	0					
ANR	881196	Identifier	snap		881178	1					
ANR	881197	IfStatement	if ( input [ 1 ] == ' ' )		881178	2					
ANR	881198	Condition	input [ 1 ] == ' '	1229:7:39629:39643	881178	0	True				
ANR	881199	EqualityExpression	input [ 1 ] == ' '		881178	0		==			
ANR	881200	ArrayIndexing	input [ 1 ]		881178	0					
ANR	881201	Identifier	input		881178	0					
ANR	881202	PrimaryExpression	1		881178	1					
ANR	881203	PrimaryExpression	' '		881178	1					
ANR	881204	CompoundStatement		7:24:95:95	881178	1					
ANR	881205	ExpressionStatement	file = strdup ( input + 2 )	1230:4:39652:39677	881178	0	True				
ANR	881206	AssignmentExpression	file = strdup ( input + 2 )		881178	0		=			
ANR	881207	Identifier	file		881178	0					
ANR	881208	CallExpression	strdup ( input + 2 )		881178	1					
ANR	881209	Callee	strdup		881178	0					
ANR	881210	Identifier	strdup		881178	0					
ANR	881211	ArgumentList	input + 2		881178	1					
ANR	881212	Argument	input + 2		881178	0					
ANR	881213	AdditiveExpression	input + 2		881178	0		+			
ANR	881214	Identifier	input		881178	0					
ANR	881215	PrimaryExpression	2		881178	1					
ANR	881216	ElseStatement	else		881178	0					
ANR	881217	CompoundStatement		9:10:138:138	881178	0					
ANR	881218	Statement	file	1232:4:39695:39698	881178	0	True				
ANR	881219	Statement	=	1232:9:39700:39700	881178	1	True				
ANR	881220	Statement	r_str_newf	1232:11:39702:39711	881178	2	True				
ANR	881221	Statement	(	1232:22:39713:39713	881178	3	True				
ANR	881222	Statement	"""0x%08"""	1232:23:39714:39720	881178	4	True				
ANR	881223	Statement	PFMT64x	1232:30:39721:39727	881178	5	True				
ANR	881224	Statement	""".dump"""	1232:37:39728:39734	881178	6	True				
ANR	881225	Statement	","	1232:44:39735:39735	881178	7	True				
ANR	881226	Statement	core	1232:46:39737:39740	881178	8	True				
ANR	881227	Statement	->	1232:50:39741:39742	881178	9	True				
ANR	881228	Statement	offset	1232:52:39743:39748	881178	10	True				
ANR	881229	Statement	)	1232:58:39749:39749	881178	11	True				
ANR	881230	ExpressionStatement		1232:59:39750:39750	881178	12	True				
ANR	881231	ExpressionStatement	"snap = r_debug_snap_get ( core -> dbg , core -> offset )"	1234:3:39760:39809	881178	3	True				
ANR	881232	AssignmentExpression	"snap = r_debug_snap_get ( core -> dbg , core -> offset )"		881178	0		=			
ANR	881233	Identifier	snap		881178	0					
ANR	881234	CallExpression	"r_debug_snap_get ( core -> dbg , core -> offset )"		881178	1					
ANR	881235	Callee	r_debug_snap_get		881178	0					
ANR	881236	Identifier	r_debug_snap_get		881178	0					
ANR	881237	ArgumentList	core -> dbg		881178	1					
ANR	881238	Argument	core -> dbg		881178	0					
ANR	881239	PtrMemberAccess	core -> dbg		881178	0					
ANR	881240	Identifier	core		881178	0					
ANR	881241	Identifier	dbg		881178	1					
ANR	881242	Argument	core -> offset		881178	1					
ANR	881243	PtrMemberAccess	core -> offset		881178	0					
ANR	881244	Identifier	core		881178	0					
ANR	881245	Identifier	offset		881178	1					
ANR	881246	IfStatement	if ( ! snap )		881178	4					
ANR	881247	Condition	! snap	1235:7:39818:39822	881178	0	True				
ANR	881248	UnaryOperationExpression	! snap		881178	0					
ANR	881249	UnaryOperator	!		881178	0					
ANR	881250	Identifier	snap		881178	1					
ANR	881251	CompoundStatement		13:14:274:274	881178	1					
ANR	881252	ExpressionStatement	"r_debug_snap ( core -> dbg , core -> offset )"	1236:4:39831:39869	881178	0	True				
ANR	881253	CallExpression	"r_debug_snap ( core -> dbg , core -> offset )"		881178	0					
ANR	881254	Callee	r_debug_snap		881178	0					
ANR	881255	Identifier	r_debug_snap		881178	0					
ANR	881256	ArgumentList	core -> dbg		881178	1					
ANR	881257	Argument	core -> dbg		881178	0					
ANR	881258	PtrMemberAccess	core -> dbg		881178	0					
ANR	881259	Identifier	core		881178	0					
ANR	881260	Identifier	dbg		881178	1					
ANR	881261	Argument	core -> offset		881178	1					
ANR	881262	PtrMemberAccess	core -> offset		881178	0					
ANR	881263	Identifier	core		881178	0					
ANR	881264	Identifier	offset		881178	1					
ANR	881265	ExpressionStatement	"snap = r_debug_snap_get ( core -> dbg , core -> offset )"	1237:4:39875:39924	881178	1	True				
ANR	881266	AssignmentExpression	"snap = r_debug_snap_get ( core -> dbg , core -> offset )"		881178	0		=			
ANR	881267	Identifier	snap		881178	0					
ANR	881268	CallExpression	"r_debug_snap_get ( core -> dbg , core -> offset )"		881178	1					
ANR	881269	Callee	r_debug_snap_get		881178	0					
ANR	881270	Identifier	r_debug_snap_get		881178	0					
ANR	881271	ArgumentList	core -> dbg		881178	1					
ANR	881272	Argument	core -> dbg		881178	0					
ANR	881273	PtrMemberAccess	core -> dbg		881178	0					
ANR	881274	Identifier	core		881178	0					
ANR	881275	Identifier	dbg		881178	1					
ANR	881276	Argument	core -> offset		881178	1					
ANR	881277	PtrMemberAccess	core -> offset		881178	0					
ANR	881278	Identifier	core		881178	0					
ANR	881279	Identifier	offset		881178	1					
ANR	881280	IfStatement	if ( snap )		881178	5					
ANR	881281	Condition	snap	1239:7:39938:39941	881178	0	True				
ANR	881282	Identifier	snap		881178	0					
ANR	881283	CompoundStatement		19:4:416:454	881178	1					
ANR	881284	IdentifierDeclStatement	int fsz = 0 ;	1240:4:39950:39961	881178	0	True				
ANR	881285	IdentifierDecl	fsz = 0		881178	0					
ANR	881286	IdentifierDeclType	int		881178	0					
ANR	881287	Identifier	fsz		881178	1					
ANR	881288	AssignmentExpression	fsz = 0		881178	2		=			
ANR	881289	Identifier	fsz		881178	0					
ANR	881290	PrimaryExpression	0		881178	1					
ANR	881291	IdentifierDeclStatement	"char * data = r_file_slurp ( file , & fsz ) ;"	1241:4:39967:40005	881178	1	True				
ANR	881292	IdentifierDecl	"* data = r_file_slurp ( file , & fsz )"		881178	0					
ANR	881293	IdentifierDeclType	char *		881178	0					
ANR	881294	Identifier	data		881178	1					
ANR	881295	AssignmentExpression	"* data = r_file_slurp ( file , & fsz )"		881178	2		=			
ANR	881296	Identifier	data		881178	0					
ANR	881297	CallExpression	"r_file_slurp ( file , & fsz )"		881178	1					
ANR	881298	Callee	r_file_slurp		881178	0					
ANR	881299	Identifier	r_file_slurp		881178	0					
ANR	881300	ArgumentList	file		881178	1					
ANR	881301	Argument	file		881178	0					
ANR	881302	Identifier	file		881178	0					
ANR	881303	Argument	& fsz		881178	1					
ANR	881304	UnaryOperationExpression	& fsz		881178	0					
ANR	881305	UnaryOperator	&		881178	0					
ANR	881306	Identifier	fsz		881178	1					
ANR	881307	IfStatement	if ( data )		881178	2					
ANR	881308	Condition	data	1242:8:40015:40018	881178	0	True				
ANR	881309	Identifier	data		881178	0					
ANR	881310	CompoundStatement		20:14:470:470	881178	1					
ANR	881311	IfStatement	if ( fsz >= snap -> size )		881178	0					
ANR	881312	Condition	fsz >= snap -> size	1243:9:40032:40048	881178	0	True				
ANR	881313	RelationalExpression	fsz >= snap -> size		881178	0		>=			
ANR	881314	Identifier	fsz		881178	0					
ANR	881315	PtrMemberAccess	snap -> size		881178	1					
ANR	881316	Identifier	snap		881178	0					
ANR	881317	Identifier	size		881178	1					
ANR	881318	CompoundStatement		21:28:500:500	881178	1					
ANR	881319	ExpressionStatement	"memcpy ( snap -> data , data , snap -> size )"	1244:6:40059:40096	881178	0	True				
ANR	881320	CallExpression	"memcpy ( snap -> data , data , snap -> size )"		881178	0					
ANR	881321	Callee	memcpy		881178	0					
ANR	881322	Identifier	memcpy		881178	0					
ANR	881323	ArgumentList	snap -> data		881178	1					
ANR	881324	Argument	snap -> data		881178	0					
ANR	881325	PtrMemberAccess	snap -> data		881178	0					
ANR	881326	Identifier	snap		881178	0					
ANR	881327	Identifier	data		881178	1					
ANR	881328	Argument	data		881178	1					
ANR	881329	Identifier	data		881178	0					
ANR	881330	Argument	snap -> size		881178	2					
ANR	881331	PtrMemberAccess	snap -> size		881178	0					
ANR	881332	Identifier	snap		881178	0					
ANR	881333	Identifier	size		881178	1					
ANR	881334	ElseStatement	else		881178	0					
ANR	881335	CompoundStatement		23:12:559:559	881178	0					
ANR	881336	ExpressionStatement	"eprintf ( ""This file is smaller than the snapshot size\\n"" )"	1246:6:40118:40175	881178	0	True				
ANR	881337	CallExpression	"eprintf ( ""This file is smaller than the snapshot size\\n"" )"		881178	0					
ANR	881338	Callee	eprintf		881178	0					
ANR	881339	Identifier	eprintf		881178	0					
ANR	881340	ArgumentList	"""This file is smaller than the snapshot size\\n"""		881178	1					
ANR	881341	Argument	"""This file is smaller than the snapshot size\\n"""		881178	0					
ANR	881342	PrimaryExpression	"""This file is smaller than the snapshot size\\n"""		881178	0					
ANR	881343	ExpressionStatement	free ( data )	1248:5:40189:40200	881178	1	True				
ANR	881344	CallExpression	free ( data )		881178	0					
ANR	881345	Callee	free		881178	0					
ANR	881346	Identifier	free		881178	0					
ANR	881347	ArgumentList	data		881178	1					
ANR	881348	Argument	data		881178	0					
ANR	881349	Identifier	data		881178	0					
ANR	881350	ElseStatement	else		881178	0					
ANR	881351	ExpressionStatement	"eprintf ( ""Cannot slurp '%s'\\n"" , file )"	1249:11:40213:40250	881178	0	True				
ANR	881352	CallExpression	"eprintf ( ""Cannot slurp '%s'\\n"" , file )"		881178	0					
ANR	881353	Callee	eprintf		881178	0					
ANR	881354	Identifier	eprintf		881178	0					
ANR	881355	ArgumentList	"""Cannot slurp '%s'\\n"""		881178	1					
ANR	881356	Argument	"""Cannot slurp '%s'\\n"""		881178	0					
ANR	881357	PrimaryExpression	"""Cannot slurp '%s'\\n"""		881178	0					
ANR	881358	Argument	file		881178	1					
ANR	881359	Identifier	file		881178	0					
ANR	881360	ElseStatement	else		881178	0					
ANR	881361	CompoundStatement		28:10:711:711	881178	0					
ANR	881362	Statement	eprintf	1251:4:40268:40274	881178	0	True				
ANR	881363	Statement	(	1251:12:40276:40276	881178	1	True				
ANR	881364	Statement	"""Unable to find a snapshot for 0x%08"""	1251:13:40277:40313	881178	2	True				
ANR	881365	Statement	PFMT64x	1251:50:40314:40320	881178	3	True				
ANR	881366	Statement	"""\\n"""	1251:57:40321:40324	881178	4	True				
ANR	881367	Statement	","	1251:61:40325:40325	881178	5	True				
ANR	881368	Statement	core	1251:63:40327:40330	881178	6	True				
ANR	881369	Statement	->	1251:67:40331:40332	881178	7	True				
ANR	881370	Statement	offset	1251:69:40333:40338	881178	8	True				
ANR	881371	Statement	)	1251:75:40339:40339	881178	9	True				
ANR	881372	ExpressionStatement		1251:76:40340:40340	881178	10	True				
ANR	881373	ExpressionStatement	free ( file )	1253:3:40350:40361	881178	6	True				
ANR	881374	CallExpression	free ( file )		881178	0					
ANR	881375	Callee	free		881178	0					
ANR	881376	Identifier	free		881178	0					
ANR	881377	ArgumentList	file		881178	1					
ANR	881378	Argument	file		881178	0					
ANR	881379	Identifier	file		881178	0					
ANR	881380	BreakStatement	break ;	1255:2:40369:40374	881178	2	True				
ANR	881381	Label	case 't' :	1256:1:40377:40385	881178	3	True				
ANR	881382	CompoundStatement		37:3:858:874	881178	4					
ANR	881383	IdentifierDeclStatement	char * file ;	1258:3:40394:40404	881178	0	True				
ANR	881384	IdentifierDecl	* file		881178	0					
ANR	881385	IdentifierDeclType	char *		881178	0					
ANR	881386	Identifier	file		881178	1					
ANR	881387	IdentifierDeclStatement	RDebugSnap * snap ;	1259:3:40409:40425	881178	1	True				
ANR	881388	IdentifierDecl	* snap		881178	0					
ANR	881389	IdentifierDeclType	RDebugSnap *		881178	0					
ANR	881390	Identifier	snap		881178	1					
ANR	881391	IfStatement	if ( input [ 1 ] == ' ' )		881178	2					
ANR	881392	Condition	input [ 1 ] == ' '	1260:7:40434:40448	881178	0	True				
ANR	881393	EqualityExpression	input [ 1 ] == ' '		881178	0		==			
ANR	881394	ArrayIndexing	input [ 1 ]		881178	0					
ANR	881395	Identifier	input		881178	0					
ANR	881396	PrimaryExpression	1		881178	1					
ANR	881397	PrimaryExpression	' '		881178	1					
ANR	881398	CompoundStatement		38:24:900:900	881178	1					
ANR	881399	ExpressionStatement	file = strdup ( input + 2 )	1261:4:40457:40482	881178	0	True				
ANR	881400	AssignmentExpression	file = strdup ( input + 2 )		881178	0		=			
ANR	881401	Identifier	file		881178	0					
ANR	881402	CallExpression	strdup ( input + 2 )		881178	1					
ANR	881403	Callee	strdup		881178	0					
ANR	881404	Identifier	strdup		881178	0					
ANR	881405	ArgumentList	input + 2		881178	1					
ANR	881406	Argument	input + 2		881178	0					
ANR	881407	AdditiveExpression	input + 2		881178	0		+			
ANR	881408	Identifier	input		881178	0					
ANR	881409	PrimaryExpression	2		881178	1					
ANR	881410	ElseStatement	else		881178	0					
ANR	881411	CompoundStatement		40:10:943:943	881178	0					
ANR	881412	Statement	file	1263:4:40500:40503	881178	0	True				
ANR	881413	Statement	=	1263:9:40505:40505	881178	1	True				
ANR	881414	Statement	r_str_newf	1263:11:40507:40516	881178	2	True				
ANR	881415	Statement	(	1263:22:40518:40518	881178	3	True				
ANR	881416	Statement	"""0x%08"""	1263:23:40519:40525	881178	4	True				
ANR	881417	Statement	PFMT64x	1263:30:40526:40532	881178	5	True				
ANR	881418	Statement	""".dump"""	1263:37:40533:40539	881178	6	True				
ANR	881419	Statement	","	1263:44:40540:40540	881178	7	True				
ANR	881420	Statement	core	1263:46:40542:40545	881178	8	True				
ANR	881421	Statement	->	1263:50:40546:40547	881178	9	True				
ANR	881422	Statement	offset	1263:52:40548:40553	881178	10	True				
ANR	881423	Statement	)	1263:58:40554:40554	881178	11	True				
ANR	881424	ExpressionStatement		1263:59:40555:40555	881178	12	True				
ANR	881425	ExpressionStatement	"snap = r_debug_snap_get ( core -> dbg , core -> offset )"	1265:3:40565:40614	881178	3	True				
ANR	881426	AssignmentExpression	"snap = r_debug_snap_get ( core -> dbg , core -> offset )"		881178	0		=			
ANR	881427	Identifier	snap		881178	0					
ANR	881428	CallExpression	"r_debug_snap_get ( core -> dbg , core -> offset )"		881178	1					
ANR	881429	Callee	r_debug_snap_get		881178	0					
ANR	881430	Identifier	r_debug_snap_get		881178	0					
ANR	881431	ArgumentList	core -> dbg		881178	1					
ANR	881432	Argument	core -> dbg		881178	0					
ANR	881433	PtrMemberAccess	core -> dbg		881178	0					
ANR	881434	Identifier	core		881178	0					
ANR	881435	Identifier	dbg		881178	1					
ANR	881436	Argument	core -> offset		881178	1					
ANR	881437	PtrMemberAccess	core -> offset		881178	0					
ANR	881438	Identifier	core		881178	0					
ANR	881439	Identifier	offset		881178	1					
ANR	881440	IfStatement	if ( snap )		881178	4					
ANR	881441	Condition	snap	1266:7:40623:40626	881178	0	True				
ANR	881442	Identifier	snap		881178	0					
ANR	881443	CompoundStatement		44:13:1078:1078	881178	1					
ANR	881444	IfStatement	"if ( ! r_file_dump ( file , snap -> data , snap -> size , 0 ) )"		881178	0					
ANR	881445	Condition	"! r_file_dump ( file , snap -> data , snap -> size , 0 )"	1267:8:40639:40684	881178	0	True				
ANR	881446	UnaryOperationExpression	"! r_file_dump ( file , snap -> data , snap -> size , 0 )"		881178	0					
ANR	881447	UnaryOperator	!		881178	0					
ANR	881448	CallExpression	"r_file_dump ( file , snap -> data , snap -> size , 0 )"		881178	1					
ANR	881449	Callee	r_file_dump		881178	0					
ANR	881450	Identifier	r_file_dump		881178	0					
ANR	881451	ArgumentList	file		881178	1					
ANR	881452	Argument	file		881178	0					
ANR	881453	Identifier	file		881178	0					
ANR	881454	Argument	snap -> data		881178	1					
ANR	881455	PtrMemberAccess	snap -> data		881178	0					
ANR	881456	Identifier	snap		881178	0					
ANR	881457	Identifier	data		881178	1					
ANR	881458	Argument	snap -> size		881178	2					
ANR	881459	PtrMemberAccess	snap -> size		881178	0					
ANR	881460	Identifier	snap		881178	0					
ANR	881461	Identifier	size		881178	1					
ANR	881462	Argument	0		881178	3					
ANR	881463	PrimaryExpression	0		881178	0					
ANR	881464	CompoundStatement		45:56:1136:1136	881178	1					
ANR	881465	ExpressionStatement	"eprintf ( ""Cannot slurp '%s'\\n"" , file )"	1268:5:40694:40731	881178	0	True				
ANR	881466	CallExpression	"eprintf ( ""Cannot slurp '%s'\\n"" , file )"		881178	0					
ANR	881467	Callee	eprintf		881178	0					
ANR	881468	Identifier	eprintf		881178	0					
ANR	881469	ArgumentList	"""Cannot slurp '%s'\\n"""		881178	1					
ANR	881470	Argument	"""Cannot slurp '%s'\\n"""		881178	0					
ANR	881471	PrimaryExpression	"""Cannot slurp '%s'\\n"""		881178	0					
ANR	881472	Argument	file		881178	1					
ANR	881473	Identifier	file		881178	0					
ANR	881474	ElseStatement	else		881178	0					
ANR	881475	CompoundStatement		48:10:1198:1198	881178	0					
ANR	881476	Statement	eprintf	1271:4:40755:40761	881178	0	True				
ANR	881477	Statement	(	1271:12:40763:40763	881178	1	True				
ANR	881478	Statement	"""Unable to find a snapshot for 0x%08"""	1271:13:40764:40800	881178	2	True				
ANR	881479	Statement	PFMT64x	1271:50:40801:40807	881178	3	True				
ANR	881480	Statement	"""\\n"""	1271:57:40808:40811	881178	4	True				
ANR	881481	Statement	","	1271:61:40812:40812	881178	5	True				
ANR	881482	Statement	core	1271:63:40814:40817	881178	6	True				
ANR	881483	Statement	->	1271:67:40818:40819	881178	7	True				
ANR	881484	Statement	offset	1271:69:40820:40825	881178	8	True				
ANR	881485	Statement	)	1271:75:40826:40826	881178	9	True				
ANR	881486	ExpressionStatement		1271:76:40827:40827	881178	10	True				
ANR	881487	ExpressionStatement	free ( file )	1273:3:40837:40848	881178	5	True				
ANR	881488	CallExpression	free ( file )		881178	0					
ANR	881489	Callee	free		881178	0					
ANR	881490	Identifier	free		881178	0					
ANR	881491	ArgumentList	file		881178	1					
ANR	881492	Argument	file		881178	0					
ANR	881493	Identifier	file		881178	0					
ANR	881494	BreakStatement	break ;	1275:2:40856:40861	881178	5	True				
ANR	881495	Label	case '?' :	1276:1:40864:40872	881178	6	True				
ANR	881496	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dms )"	1277:2:40876:40912	881178	7	True				
ANR	881497	CallExpression	"r_core_cmd_help ( core , help_msg_dms )"		881178	0					
ANR	881498	Callee	r_core_cmd_help		881178	0					
ANR	881499	Identifier	r_core_cmd_help		881178	0					
ANR	881500	ArgumentList	core		881178	1					
ANR	881501	Argument	core		881178	0					
ANR	881502	Identifier	core		881178	0					
ANR	881503	Argument	help_msg_dms		881178	1					
ANR	881504	Identifier	help_msg_dms		881178	0					
ANR	881505	BreakStatement	break ;	1278:2:40916:40921	881178	8	True				
ANR	881506	Label	case '-' :	1279:1:40924:40932	881178	9	True				
ANR	881507	IfStatement	if ( input [ 1 ] == '*' )		881178	10					
ANR	881508	Condition	input [ 1 ] == '*'	1280:6:40940:40952	881178	0	True				
ANR	881509	EqualityExpression	input [ 1 ] == '*'		881178	0		==			
ANR	881510	ArrayIndexing	input [ 1 ]		881178	0					
ANR	881511	Identifier	input		881178	0					
ANR	881512	PrimaryExpression	1		881178	1					
ANR	881513	PrimaryExpression	'*'		881178	1					
ANR	881514	CompoundStatement		58:21:1404:1404	881178	1					
ANR	881515	ExpressionStatement	"r_debug_snap_delete ( core -> dbg , - 1 )"	1281:3:40960:40995	881178	0	True				
ANR	881516	CallExpression	"r_debug_snap_delete ( core -> dbg , - 1 )"		881178	0					
ANR	881517	Callee	r_debug_snap_delete		881178	0					
ANR	881518	Identifier	r_debug_snap_delete		881178	0					
ANR	881519	ArgumentList	core -> dbg		881178	1					
ANR	881520	Argument	core -> dbg		881178	0					
ANR	881521	PtrMemberAccess	core -> dbg		881178	0					
ANR	881522	Identifier	core		881178	0					
ANR	881523	Identifier	dbg		881178	1					
ANR	881524	Argument	- 1		881178	1					
ANR	881525	UnaryOperationExpression	- 1		881178	0					
ANR	881526	UnaryOperator	-		881178	0					
ANR	881527	PrimaryExpression	1		881178	1					
ANR	881528	ElseStatement	else		881178	0					
ANR	881529	CompoundStatement		60:9:1455:1455	881178	0					
ANR	881530	ExpressionStatement	"r_debug_snap_delete ( core -> dbg , r_num_math ( core -> num , input + 1 ) )"	1283:3:41011:41077	881178	0	True				
ANR	881531	CallExpression	"r_debug_snap_delete ( core -> dbg , r_num_math ( core -> num , input + 1 ) )"		881178	0					
ANR	881532	Callee	r_debug_snap_delete		881178	0					
ANR	881533	Identifier	r_debug_snap_delete		881178	0					
ANR	881534	ArgumentList	core -> dbg		881178	1					
ANR	881535	Argument	core -> dbg		881178	0					
ANR	881536	PtrMemberAccess	core -> dbg		881178	0					
ANR	881537	Identifier	core		881178	0					
ANR	881538	Identifier	dbg		881178	1					
ANR	881539	Argument	"r_num_math ( core -> num , input + 1 )"		881178	1					
ANR	881540	CallExpression	"r_num_math ( core -> num , input + 1 )"		881178	0					
ANR	881541	Callee	r_num_math		881178	0					
ANR	881542	Identifier	r_num_math		881178	0					
ANR	881543	ArgumentList	core -> num		881178	1					
ANR	881544	Argument	core -> num		881178	0					
ANR	881545	PtrMemberAccess	core -> num		881178	0					
ANR	881546	Identifier	core		881178	0					
ANR	881547	Identifier	num		881178	1					
ANR	881548	Argument	input + 1		881178	1					
ANR	881549	AdditiveExpression	input + 1		881178	0		+			
ANR	881550	Identifier	input		881178	0					
ANR	881551	PrimaryExpression	1		881178	1					
ANR	881552	BreakStatement	break ;	1285:2:41085:41090	881178	11	True				
ANR	881553	Label	case ' ' :	1286:1:41093:41101	881178	12	True				
ANR	881554	ExpressionStatement	"r_debug_snap ( core -> dbg , r_num_math ( core -> num , input + 1 ) )"	1287:2:41105:41164	881178	13	True				
ANR	881555	CallExpression	"r_debug_snap ( core -> dbg , r_num_math ( core -> num , input + 1 ) )"		881178	0					
ANR	881556	Callee	r_debug_snap		881178	0					
ANR	881557	Identifier	r_debug_snap		881178	0					
ANR	881558	ArgumentList	core -> dbg		881178	1					
ANR	881559	Argument	core -> dbg		881178	0					
ANR	881560	PtrMemberAccess	core -> dbg		881178	0					
ANR	881561	Identifier	core		881178	0					
ANR	881562	Identifier	dbg		881178	1					
ANR	881563	Argument	"r_num_math ( core -> num , input + 1 )"		881178	1					
ANR	881564	CallExpression	"r_num_math ( core -> num , input + 1 )"		881178	0					
ANR	881565	Callee	r_num_math		881178	0					
ANR	881566	Identifier	r_num_math		881178	0					
ANR	881567	ArgumentList	core -> num		881178	1					
ANR	881568	Argument	core -> num		881178	0					
ANR	881569	PtrMemberAccess	core -> num		881178	0					
ANR	881570	Identifier	core		881178	0					
ANR	881571	Identifier	num		881178	1					
ANR	881572	Argument	input + 1		881178	1					
ANR	881573	AdditiveExpression	input + 1		881178	0		+			
ANR	881574	Identifier	input		881178	0					
ANR	881575	PrimaryExpression	1		881178	1					
ANR	881576	BreakStatement	break ;	1288:2:41168:41173	881178	14	True				
ANR	881577	Label	case 'A' :	1289:1:41176:41184	881178	15	True				
ANR	881578	ExpressionStatement	"r_debug_snap_set_idx ( core -> dbg , atoi ( input + 1 ) )"	1290:2:41188:41238	881178	16	True				
ANR	881579	CallExpression	"r_debug_snap_set_idx ( core -> dbg , atoi ( input + 1 ) )"		881178	0					
ANR	881580	Callee	r_debug_snap_set_idx		881178	0					
ANR	881581	Identifier	r_debug_snap_set_idx		881178	0					
ANR	881582	ArgumentList	core -> dbg		881178	1					
ANR	881583	Argument	core -> dbg		881178	0					
ANR	881584	PtrMemberAccess	core -> dbg		881178	0					
ANR	881585	Identifier	core		881178	0					
ANR	881586	Identifier	dbg		881178	1					
ANR	881587	Argument	atoi ( input + 1 )		881178	1					
ANR	881588	CallExpression	atoi ( input + 1 )		881178	0					
ANR	881589	Callee	atoi		881178	0					
ANR	881590	Identifier	atoi		881178	0					
ANR	881591	ArgumentList	input + 1		881178	1					
ANR	881592	Argument	input + 1		881178	0					
ANR	881593	AdditiveExpression	input + 1		881178	0		+			
ANR	881594	Identifier	input		881178	0					
ANR	881595	PrimaryExpression	1		881178	1					
ANR	881596	BreakStatement	break ;	1291:2:41242:41247	881178	17	True				
ANR	881597	Label	case 'C' :	1292:1:41250:41258	881178	18	True				
ANR	881598	ExpressionStatement	"r_debug_snap_comment ( core -> dbg , atoi ( input + 1 ) , strchr ( input , ' ' ) )"	1293:2:41262:41333	881178	19	True				
ANR	881599	CallExpression	"r_debug_snap_comment ( core -> dbg , atoi ( input + 1 ) , strchr ( input , ' ' ) )"		881178	0					
ANR	881600	Callee	r_debug_snap_comment		881178	0					
ANR	881601	Identifier	r_debug_snap_comment		881178	0					
ANR	881602	ArgumentList	core -> dbg		881178	1					
ANR	881603	Argument	core -> dbg		881178	0					
ANR	881604	PtrMemberAccess	core -> dbg		881178	0					
ANR	881605	Identifier	core		881178	0					
ANR	881606	Identifier	dbg		881178	1					
ANR	881607	Argument	atoi ( input + 1 )		881178	1					
ANR	881608	CallExpression	atoi ( input + 1 )		881178	0					
ANR	881609	Callee	atoi		881178	0					
ANR	881610	Identifier	atoi		881178	0					
ANR	881611	ArgumentList	input + 1		881178	1					
ANR	881612	Argument	input + 1		881178	0					
ANR	881613	AdditiveExpression	input + 1		881178	0		+			
ANR	881614	Identifier	input		881178	0					
ANR	881615	PrimaryExpression	1		881178	1					
ANR	881616	Argument	"strchr ( input , ' ' )"		881178	2					
ANR	881617	CallExpression	"strchr ( input , ' ' )"		881178	0					
ANR	881618	Callee	strchr		881178	0					
ANR	881619	Identifier	strchr		881178	0					
ANR	881620	ArgumentList	input		881178	1					
ANR	881621	Argument	input		881178	0					
ANR	881622	Identifier	input		881178	0					
ANR	881623	Argument	' '		881178	1					
ANR	881624	PrimaryExpression	' '		881178	0					
ANR	881625	BreakStatement	break ;	1294:2:41337:41342	881178	20	True				
ANR	881626	Label	case 'd' :	1295:1:41345:41353	881178	21	True				
ANR	881627	ExpressionStatement	"__r_debug_snap_diff ( core , atoi ( input + 1 ) )"	1296:2:41357:41401	881178	22	True				
ANR	881628	CallExpression	"__r_debug_snap_diff ( core , atoi ( input + 1 ) )"		881178	0					
ANR	881629	Callee	__r_debug_snap_diff		881178	0					
ANR	881630	Identifier	__r_debug_snap_diff		881178	0					
ANR	881631	ArgumentList	core		881178	1					
ANR	881632	Argument	core		881178	0					
ANR	881633	Identifier	core		881178	0					
ANR	881634	Argument	atoi ( input + 1 )		881178	1					
ANR	881635	CallExpression	atoi ( input + 1 )		881178	0					
ANR	881636	Callee	atoi		881178	0					
ANR	881637	Identifier	atoi		881178	0					
ANR	881638	ArgumentList	input + 1		881178	1					
ANR	881639	Argument	input + 1		881178	0					
ANR	881640	AdditiveExpression	input + 1		881178	0		+			
ANR	881641	Identifier	input		881178	0					
ANR	881642	PrimaryExpression	1		881178	1					
ANR	881643	BreakStatement	break ;	1297:2:41405:41410	881178	23	True				
ANR	881644	Label	case 'a' :	1298:1:41413:41421	881178	24	True				
ANR	881645	ExpressionStatement	"r_debug_snap_all ( core -> dbg , 0 )"	1299:2:41425:41456	881178	25	True				
ANR	881646	CallExpression	"r_debug_snap_all ( core -> dbg , 0 )"		881178	0					
ANR	881647	Callee	r_debug_snap_all		881178	0					
ANR	881648	Identifier	r_debug_snap_all		881178	0					
ANR	881649	ArgumentList	core -> dbg		881178	1					
ANR	881650	Argument	core -> dbg		881178	0					
ANR	881651	PtrMemberAccess	core -> dbg		881178	0					
ANR	881652	Identifier	core		881178	0					
ANR	881653	Identifier	dbg		881178	1					
ANR	881654	Argument	0		881178	1					
ANR	881655	PrimaryExpression	0		881178	0					
ANR	881656	BreakStatement	break ;	1300:2:41460:41465	881178	26	True				
ANR	881657	Label	case 'w' :	1301:1:41468:41476	881178	27	True				
ANR	881658	ExpressionStatement	"r_debug_snap_all ( core -> dbg , R_PERM_RW )"	1302:2:41480:41519	881178	28	True				
ANR	881659	CallExpression	"r_debug_snap_all ( core -> dbg , R_PERM_RW )"		881178	0					
ANR	881660	Callee	r_debug_snap_all		881178	0					
ANR	881661	Identifier	r_debug_snap_all		881178	0					
ANR	881662	ArgumentList	core -> dbg		881178	1					
ANR	881663	Argument	core -> dbg		881178	0					
ANR	881664	PtrMemberAccess	core -> dbg		881178	0					
ANR	881665	Identifier	core		881178	0					
ANR	881666	Identifier	dbg		881178	1					
ANR	881667	Argument	R_PERM_RW		881178	1					
ANR	881668	Identifier	R_PERM_RW		881178	0					
ANR	881669	BreakStatement	break ;	1303:2:41523:41528	881178	29	True				
ANR	881670	Label	case 0 :	1304:1:41531:41537	881178	30	True				
ANR	881671	Label	case 'j' :	1305:1:41540:41548	881178	31	True				
ANR	881672	Label	case '*' :	1306:1:41551:41559	881178	32	True				
ANR	881673	ExpressionStatement	"r_debug_snap_list ( core -> dbg , - 1 , input [ 0 ] )"	1307:2:41563:41606	881178	33	True				
ANR	881674	CallExpression	"r_debug_snap_list ( core -> dbg , - 1 , input [ 0 ] )"		881178	0					
ANR	881675	Callee	r_debug_snap_list		881178	0					
ANR	881676	Identifier	r_debug_snap_list		881178	0					
ANR	881677	ArgumentList	core -> dbg		881178	1					
ANR	881678	Argument	core -> dbg		881178	0					
ANR	881679	PtrMemberAccess	core -> dbg		881178	0					
ANR	881680	Identifier	core		881178	0					
ANR	881681	Identifier	dbg		881178	1					
ANR	881682	Argument	- 1		881178	1					
ANR	881683	UnaryOperationExpression	- 1		881178	0					
ANR	881684	UnaryOperator	-		881178	0					
ANR	881685	PrimaryExpression	1		881178	1					
ANR	881686	Argument	input [ 0 ]		881178	2					
ANR	881687	ArrayIndexing	input [ 0 ]		881178	0					
ANR	881688	Identifier	input		881178	0					
ANR	881689	PrimaryExpression	0		881178	1					
ANR	881690	BreakStatement	break ;	1308:2:41610:41615	881178	34	True				
ANR	881691	ReturnStatement	return 0 ;	1310:1:41621:41629	881178	1	True				
ANR	881692	PrimaryExpression	0		881178	0					
ANR	881693	ReturnType	static int		881178	1					
ANR	881694	Identifier	cmd_debug_map_snapshot		881178	2					
ANR	881695	ParameterList	"RCore * core , const char * input"		881178	3					
ANR	881696	Parameter	RCore * core	1223:34:39518:39528	881178	0	True				
ANR	881697	ParameterType	RCore *		881178	0					
ANR	881698	Identifier	core		881178	1					
ANR	881699	Parameter	const char * input	1223:47:39531:39547	881178	1	True				
ANR	881700	ParameterType	const char *		881178	0					
ANR	881701	Identifier	input		881178	1					
ANR	881702	CFGEntryNode	ENTRY		881178		True				
ANR	881703	CFGExitNode	EXIT		881178		True				
ANR	881704	Symbol	atoi		881178						
ANR	881705	Symbol	r_file_slurp		881178						
ANR	881706	Symbol	snap -> size		881178						
ANR	881707	Symbol	data		881178						
ANR	881708	Symbol	* snap		881178						
ANR	881709	Symbol	r_debug_snap_get		881178						
ANR	881710	Symbol	* input		881178						
ANR	881711	Symbol	* core		881178						
ANR	881712	Symbol	core -> offset		881178						
ANR	881713	Symbol	strchr		881178						
ANR	881714	Symbol	fsz		881178						
ANR	881715	Symbol	r_num_math		881178						
ANR	881716	Symbol	help_msg_dms		881178						
ANR	881717	Symbol	core		881178						
ANR	881718	Symbol	input		881178						
ANR	881719	Symbol	snap -> data		881178						
ANR	881720	Symbol	file		881178						
ANR	881721	Symbol	R_PERM_RW		881178						
ANR	881722	Symbol	& fsz		881178						
ANR	881723	Symbol	r_file_dump		881178						
ANR	881724	Symbol	strdup		881178						
ANR	881725	Symbol	core -> num		881178						
ANR	881726	Symbol	snap		881178						
ANR	881727	Symbol	core -> dbg		881178						
ANR	881728	Function	grab_bits	1313:0:41634:42186							
ANR	881729	FunctionDef	"grab_bits (RCore * core , const char * arg , int * pcbits2)"		881728	0					
ANR	881730	CompoundStatement		1313:65:41699:42186	881728	0					
ANR	881731	IdentifierDeclStatement	int pcbits = atoi ( arg ) ;	1314:1:41702:41725	881728	0	True				
ANR	881732	IdentifierDecl	pcbits = atoi ( arg )		881728	0					
ANR	881733	IdentifierDeclType	int		881728	0					
ANR	881734	Identifier	pcbits		881728	1					
ANR	881735	AssignmentExpression	pcbits = atoi ( arg )		881728	2		=			
ANR	881736	Identifier	pcbits		881728	0					
ANR	881737	CallExpression	atoi ( arg )		881728	1					
ANR	881738	Callee	atoi		881728	0					
ANR	881739	Identifier	atoi		881728	0					
ANR	881740	ArgumentList	arg		881728	1					
ANR	881741	Argument	arg		881728	0					
ANR	881742	Identifier	arg		881728	0					
ANR	881743	IfStatement	if ( pcbits2 )		881728	1					
ANR	881744	Condition	pcbits2	1315:5:41732:41738	881728	0	True				
ANR	881745	Identifier	pcbits2		881728	0					
ANR	881746	CompoundStatement		3:14:41:41	881728	1					
ANR	881747	ExpressionStatement	* pcbits2 = 0	1316:2:41745:41757	881728	0	True				
ANR	881748	AssignmentExpression	* pcbits2 = 0		881728	0		=			
ANR	881749	UnaryOperationExpression	* pcbits2		881728	0					
ANR	881750	UnaryOperator	*		881728	0					
ANR	881751	Identifier	pcbits2		881728	1					
ANR	881752	PrimaryExpression	0		881728	1					
ANR	881753	IfStatement	if ( pcbits < 1 )		881728	2					
ANR	881754	Condition	pcbits < 1	1318:5:41767:41776	881728	0	True				
ANR	881755	RelationalExpression	pcbits < 1		881728	0		<			
ANR	881756	Identifier	pcbits		881728	0					
ANR	881757	PrimaryExpression	1		881728	1					
ANR	881758	CompoundStatement		6:17:79:79	881728	1					
ANR	881759	IfStatement	"if ( ! strcmp ( r_config_get ( core -> config , ""asm.arch"" ) , ""avr"" ) )"		881728	0					
ANR	881760	Condition	"! strcmp ( r_config_get ( core -> config , ""asm.arch"" ) , ""avr"" )"	1319:6:41787:41842	881728	0	True				
ANR	881761	UnaryOperationExpression	"! strcmp ( r_config_get ( core -> config , ""asm.arch"" ) , ""avr"" )"		881728	0					
ANR	881762	UnaryOperator	!		881728	0					
ANR	881763	CallExpression	"strcmp ( r_config_get ( core -> config , ""asm.arch"" ) , ""avr"" )"		881728	1					
ANR	881764	Callee	strcmp		881728	0					
ANR	881765	Identifier	strcmp		881728	0					
ANR	881766	ArgumentList	"r_config_get ( core -> config , ""asm.arch"" )"		881728	1					
ANR	881767	Argument	"r_config_get ( core -> config , ""asm.arch"" )"		881728	0					
ANR	881768	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		881728	0					
ANR	881769	Callee	r_config_get		881728	0					
ANR	881770	Identifier	r_config_get		881728	0					
ANR	881771	ArgumentList	core -> config		881728	1					
ANR	881772	Argument	core -> config		881728	0					
ANR	881773	PtrMemberAccess	core -> config		881728	0					
ANR	881774	Identifier	core		881728	0					
ANR	881775	Identifier	config		881728	1					
ANR	881776	Argument	"""asm.arch"""		881728	1					
ANR	881777	PrimaryExpression	"""asm.arch"""		881728	0					
ANR	881778	Argument	"""avr"""		881728	1					
ANR	881779	PrimaryExpression	"""avr"""		881728	0					
ANR	881780	CompoundStatement		7:64:145:145	881728	1					
ANR	881781	ExpressionStatement	pcbits = 8	1320:3:41850:41860	881728	0	True				
ANR	881782	AssignmentExpression	pcbits = 8		881728	0		=			
ANR	881783	Identifier	pcbits		881728	0					
ANR	881784	PrimaryExpression	8		881728	1					
ANR	881785	IfStatement	if ( pcbits2 )		881728	1					
ANR	881786	Condition	pcbits2	1321:7:41869:41875	881728	0	True				
ANR	881787	Identifier	pcbits2		881728	0					
ANR	881788	CompoundStatement		9:16:178:178	881728	1					
ANR	881789	ExpressionStatement	* pcbits2 = 32	1322:4:41884:41897	881728	0	True				
ANR	881790	AssignmentExpression	* pcbits2 = 32		881728	0		=			
ANR	881791	UnaryOperationExpression	* pcbits2		881728	0					
ANR	881792	UnaryOperator	*		881728	0					
ANR	881793	Identifier	pcbits2		881728	1					
ANR	881794	PrimaryExpression	32		881728	1					
ANR	881795	ElseStatement	else		881728	0					
ANR	881796	CompoundStatement		14:3:291:345	881728	0					
ANR	881797	IdentifierDeclStatement	"const char * pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	1325:3:41918:41986	881728	0	True				
ANR	881798	IdentifierDecl	"* pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		881728	0					
ANR	881799	IdentifierDeclType	const char *		881728	0					
ANR	881800	Identifier	pcname		881728	1					
ANR	881801	AssignmentExpression	"* pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		881728	2		=			
ANR	881802	Identifier	pcname		881728	0					
ANR	881803	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		881728	1					
ANR	881804	Callee	r_reg_get_name		881728	0					
ANR	881805	Identifier	r_reg_get_name		881728	0					
ANR	881806	ArgumentList	core -> anal -> reg		881728	1					
ANR	881807	Argument	core -> anal -> reg		881728	0					
ANR	881808	PtrMemberAccess	core -> anal -> reg		881728	0					
ANR	881809	PtrMemberAccess	core -> anal		881728	0					
ANR	881810	Identifier	core		881728	0					
ANR	881811	Identifier	anal		881728	1					
ANR	881812	Identifier	reg		881728	1					
ANR	881813	Argument	R_REG_NAME_PC		881728	1					
ANR	881814	Identifier	R_REG_NAME_PC		881728	0					
ANR	881815	IdentifierDeclStatement	"RRegItem * reg = r_reg_get ( core -> anal -> reg , pcname , 0 ) ;"	1326:3:41991:42045	881728	1	True				
ANR	881816	IdentifierDecl	"* reg = r_reg_get ( core -> anal -> reg , pcname , 0 )"		881728	0					
ANR	881817	IdentifierDeclType	RRegItem *		881728	0					
ANR	881818	Identifier	reg		881728	1					
ANR	881819	AssignmentExpression	"* reg = r_reg_get ( core -> anal -> reg , pcname , 0 )"		881728	2		=			
ANR	881820	Identifier	reg		881728	0					
ANR	881821	CallExpression	"r_reg_get ( core -> anal -> reg , pcname , 0 )"		881728	1					
ANR	881822	Callee	r_reg_get		881728	0					
ANR	881823	Identifier	r_reg_get		881728	0					
ANR	881824	ArgumentList	core -> anal -> reg		881728	1					
ANR	881825	Argument	core -> anal -> reg		881728	0					
ANR	881826	PtrMemberAccess	core -> anal -> reg		881728	0					
ANR	881827	PtrMemberAccess	core -> anal		881728	0					
ANR	881828	Identifier	core		881728	0					
ANR	881829	Identifier	anal		881728	1					
ANR	881830	Identifier	reg		881728	1					
ANR	881831	Argument	pcname		881728	1					
ANR	881832	Identifier	pcname		881728	0					
ANR	881833	Argument	0		881728	2					
ANR	881834	PrimaryExpression	0		881728	0					
ANR	881835	IfStatement	if ( reg )		881728	2					
ANR	881836	Condition	reg	1327:7:42054:42056	881728	0	True				
ANR	881837	Identifier	reg		881728	0					
ANR	881838	CompoundStatement		15:12:359:359	881728	1					
ANR	881839	IfStatement	if ( core -> assembler -> bits != reg -> size )		881728	0					
ANR	881840	Condition	core -> assembler -> bits != reg -> size	1328:8:42069:42102	881728	0	True				
ANR	881841	EqualityExpression	core -> assembler -> bits != reg -> size		881728	0		!=			
ANR	881842	PtrMemberAccess	core -> assembler -> bits		881728	0					
ANR	881843	PtrMemberAccess	core -> assembler		881728	0					
ANR	881844	Identifier	core		881728	0					
ANR	881845	Identifier	assembler		881728	1					
ANR	881846	Identifier	bits		881728	1					
ANR	881847	PtrMemberAccess	reg -> size		881728	1					
ANR	881848	Identifier	reg		881728	0					
ANR	881849	Identifier	size		881728	1					
ANR	881850	ExpressionStatement	pcbits = reg -> size	1329:5:42110:42128	881728	1	True				
ANR	881851	AssignmentExpression	pcbits = reg -> size		881728	0		=			
ANR	881852	Identifier	pcbits		881728	0					
ANR	881853	PtrMemberAccess	reg -> size		881728	1					
ANR	881854	Identifier	reg		881728	0					
ANR	881855	Identifier	size		881728	1					
ANR	881856	ReturnStatement	return pcbits ? pcbits : core -> anal -> bits ;	1333:1:42143:42184	881728	3	True				
ANR	881857	ConditionalExpression	pcbits ? pcbits : core -> anal -> bits		881728	0					
ANR	881858	Condition	pcbits		881728	0					
ANR	881859	Identifier	pcbits		881728	0					
ANR	881860	Identifier	pcbits		881728	1					
ANR	881861	PtrMemberAccess	core -> anal -> bits		881728	2					
ANR	881862	PtrMemberAccess	core -> anal		881728	0					
ANR	881863	Identifier	core		881728	0					
ANR	881864	Identifier	anal		881728	1					
ANR	881865	Identifier	bits		881728	1					
ANR	881866	ReturnType	static int		881728	1					
ANR	881867	Identifier	grab_bits		881728	2					
ANR	881868	ParameterList	"RCore * core , const char * arg , int * pcbits2"		881728	3					
ANR	881869	Parameter	RCore * core	1313:21:41655:41665	881728	0	True				
ANR	881870	ParameterType	RCore *		881728	0					
ANR	881871	Identifier	core		881728	1					
ANR	881872	Parameter	const char * arg	1313:34:41668:41682	881728	1	True				
ANR	881873	ParameterType	const char *		881728	0					
ANR	881874	Identifier	arg		881728	1					
ANR	881875	Parameter	int * pcbits2	1313:51:41685:41696	881728	2	True				
ANR	881876	ParameterType	int *		881728	0					
ANR	881877	Identifier	pcbits2		881728	1					
ANR	881878	CFGEntryNode	ENTRY		881728		True				
ANR	881879	CFGExitNode	EXIT		881728		True				
ANR	881880	Symbol	core -> anal -> reg		881728						
ANR	881881	Symbol	R_REG_NAME_PC		881728						
ANR	881882	Symbol	* core		881728						
ANR	881883	Symbol	r_config_get		881728						
ANR	881884	Symbol	core -> assembler -> bits		881728						
ANR	881885	Symbol	core -> assembler		881728						
ANR	881886	Symbol	core -> anal		881728						
ANR	881887	Symbol	* core -> assembler		881728						
ANR	881888	Symbol	reg		881728						
ANR	881889	Symbol	arg		881728						
ANR	881890	Symbol	pcbits2		881728						
ANR	881891	Symbol	* * core		881728						
ANR	881892	Symbol	r_reg_get		881728						
ANR	881893	Symbol	atoi		881728						
ANR	881894	Symbol	core -> config		881728						
ANR	881895	Symbol	strcmp		881728						
ANR	881896	Symbol	core -> anal -> bits		881728						
ANR	881897	Symbol	core		881728						
ANR	881898	Symbol	* core -> anal		881728						
ANR	881899	Symbol	r_reg_get_name		881728						
ANR	881900	Symbol	pcbits		881728						
ANR	881901	Symbol	reg -> size		881728						
ANR	881902	Symbol	pcname		881728						
ANR	881903	Symbol	* pcbits2		881728						
ANR	881904	Symbol	* reg		881728						
ANR	881905	Function	dump_maps	1337:0:42224:43684							
ANR	881906	FunctionDef	"dump_maps (RCore * core , int perm , const char * filename)"		881905	0					
ANR	881907	CompoundStatement		1337:66:42290:43684	881905	0					
ANR	881908	IdentifierDeclStatement	RDebugMap * map ;	1338:1:42293:42307	881905	0	True				
ANR	881909	IdentifierDecl	* map		881905	0					
ANR	881910	IdentifierDeclType	RDebugMap *		881905	0					
ANR	881911	Identifier	map		881905	1					
ANR	881912	IdentifierDeclStatement	RListIter * iter ;	1339:1:42310:42325	881905	1	True				
ANR	881913	IdentifierDecl	* iter		881905	0					
ANR	881914	IdentifierDeclType	RListIter *		881905	0					
ANR	881915	Identifier	iter		881905	1					
ANR	881916	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1340:1:42328:42356	881905	2	True				
ANR	881917	CallExpression	r_debug_map_sync ( core -> dbg )		881905	0					
ANR	881918	Callee	r_debug_map_sync		881905	0					
ANR	881919	Identifier	r_debug_map_sync		881905	0					
ANR	881920	ArgumentList	core -> dbg		881905	1					
ANR	881921	Argument	core -> dbg		881905	0					
ANR	881922	PtrMemberAccess	core -> dbg		881905	0					
ANR	881923	Identifier	core		881905	0					
ANR	881924	Identifier	dbg		881905	1					
ANR	881925	IdentifierDeclStatement	ut64 addr = core -> offset ;	1341:1:42389:42413	881905	3	True				
ANR	881926	IdentifierDecl	addr = core -> offset		881905	0					
ANR	881927	IdentifierDeclType	ut64		881905	0					
ANR	881928	Identifier	addr		881905	1					
ANR	881929	AssignmentExpression	addr = core -> offset		881905	2		=			
ANR	881930	Identifier	addr		881905	0					
ANR	881931	PtrMemberAccess	core -> offset		881905	1					
ANR	881932	Identifier	core		881905	0					
ANR	881933	Identifier	offset		881905	1					
ANR	881934	IdentifierDeclStatement	int do_dump = false ;	1342:1:42416:42435	881905	4	True				
ANR	881935	IdentifierDecl	do_dump = false		881905	0					
ANR	881936	IdentifierDeclType	int		881905	0					
ANR	881937	Identifier	do_dump		881905	1					
ANR	881938	AssignmentExpression	do_dump = false		881905	2		=			
ANR	881939	Identifier	false		881905	0					
ANR	881940	Identifier	false		881905	1					
ANR	881941	IdentifierDeclStatement	int ret = r_list_empty ( core -> dbg -> maps ) ? false : true ;	1343:1:42438:42490	881905	5	True				
ANR	881942	IdentifierDecl	ret = r_list_empty ( core -> dbg -> maps ) ? false : true		881905	0					
ANR	881943	IdentifierDeclType	int		881905	0					
ANR	881944	Identifier	ret		881905	1					
ANR	881945	AssignmentExpression	ret = r_list_empty ( core -> dbg -> maps ) ? false : true		881905	2		=			
ANR	881946	Identifier	ret		881905	0					
ANR	881947	ConditionalExpression	r_list_empty ( core -> dbg -> maps ) ? false : true		881905	1					
ANR	881948	Condition	r_list_empty ( core -> dbg -> maps )		881905	0					
ANR	881949	CallExpression	r_list_empty ( core -> dbg -> maps )		881905	0					
ANR	881950	Callee	r_list_empty		881905	0					
ANR	881951	Identifier	r_list_empty		881905	0					
ANR	881952	ArgumentList	core -> dbg -> maps		881905	1					
ANR	881953	Argument	core -> dbg -> maps		881905	0					
ANR	881954	PtrMemberAccess	core -> dbg -> maps		881905	0					
ANR	881955	PtrMemberAccess	core -> dbg		881905	0					
ANR	881956	Identifier	core		881905	0					
ANR	881957	Identifier	dbg		881905	1					
ANR	881958	Identifier	maps		881905	1					
ANR	881959	Identifier	false		881905	1					
ANR	881960	Identifier	true		881905	2					
ANR	881961	Statement	r_list_foreach	1344:1:42493:42506	881905	6	True				
ANR	881962	Statement	(	1344:16:42508:42508	881905	7	True				
ANR	881963	Statement	core	1344:17:42509:42512	881905	8	True				
ANR	881964	Statement	->	1344:21:42513:42514	881905	9	True				
ANR	881965	Statement	dbg	1344:23:42515:42517	881905	10	True				
ANR	881966	Statement	->	1344:26:42518:42519	881905	11	True				
ANR	881967	Statement	maps	1344:28:42520:42523	881905	12	True				
ANR	881968	Statement	","	1344:32:42524:42524	881905	13	True				
ANR	881969	Statement	iter	1344:34:42526:42529	881905	14	True				
ANR	881970	Statement	","	1344:38:42530:42530	881905	15	True				
ANR	881971	Statement	map	1344:40:42532:42534	881905	16	True				
ANR	881972	Statement	)	1344:43:42535:42535	881905	17	True				
ANR	881973	CompoundStatement		8:45:246:246	881905	18					
ANR	881974	ExpressionStatement	do_dump = false	1345:2:42541:42556	881905	0	True				
ANR	881975	AssignmentExpression	do_dump = false		881905	0		=			
ANR	881976	Identifier	do_dump		881905	0					
ANR	881977	Identifier	false		881905	1					
ANR	881978	IfStatement	if ( perm == - 1 )		881905	1					
ANR	881979	Condition	perm == - 1	1346:6:42564:42573	881905	0	True				
ANR	881980	EqualityExpression	perm == - 1		881905	0		==			
ANR	881981	Identifier	perm		881905	0					
ANR	881982	UnaryOperationExpression	- 1		881905	1					
ANR	881983	UnaryOperator	-		881905	0					
ANR	881984	PrimaryExpression	1		881905	1					
ANR	881985	CompoundStatement		10:18:285:285	881905	1					
ANR	881986	IfStatement	if ( addr >= map -> addr && addr < map -> addr_end )		881905	0					
ANR	881987	Condition	addr >= map -> addr && addr < map -> addr_end	1347:7:42585:42625	881905	0	True				
ANR	881988	AndExpression	addr >= map -> addr && addr < map -> addr_end		881905	0		&&			
ANR	881989	RelationalExpression	addr >= map -> addr		881905	0		>=			
ANR	881990	Identifier	addr		881905	0					
ANR	881991	PtrMemberAccess	map -> addr		881905	1					
ANR	881992	Identifier	map		881905	0					
ANR	881993	Identifier	addr		881905	1					
ANR	881994	RelationalExpression	addr < map -> addr_end		881905	1		<			
ANR	881995	Identifier	addr		881905	0					
ANR	881996	PtrMemberAccess	map -> addr_end		881905	1					
ANR	881997	Identifier	map		881905	0					
ANR	881998	Identifier	addr_end		881905	1					
ANR	881999	CompoundStatement		11:50:337:337	881905	1					
ANR	882000	ExpressionStatement	do_dump = true	1348:4:42634:42648	881905	0	True				
ANR	882001	AssignmentExpression	do_dump = true		881905	0		=			
ANR	882002	Identifier	do_dump		881905	0					
ANR	882003	Identifier	true		881905	1					
ANR	882004	ElseStatement	else		881905	0					
ANR	882005	IfStatement	if ( perm == 0 )		881905	0					
ANR	882006	Condition	perm == 0	1350:13:42668:42676	881905	0	True				
ANR	882007	EqualityExpression	perm == 0		881905	0		==			
ANR	882008	Identifier	perm		881905	0					
ANR	882009	PrimaryExpression	0		881905	1					
ANR	882010	CompoundStatement		14:24:388:388	881905	1					
ANR	882011	ExpressionStatement	do_dump = true	1351:3:42684:42698	881905	0	True				
ANR	882012	AssignmentExpression	do_dump = true		881905	0		=			
ANR	882013	Identifier	do_dump		881905	0					
ANR	882014	Identifier	true		881905	1					
ANR	882015	ElseStatement	else		881905	0					
ANR	882016	IfStatement	if ( perm == ( map -> perm & perm ) )		881905	0					
ANR	882017	Condition	perm == ( map -> perm & perm )	1352:13:42713:42738	881905	0	True				
ANR	882018	EqualityExpression	perm == ( map -> perm & perm )		881905	0		==			
ANR	882019	Identifier	perm		881905	0					
ANR	882020	BitAndExpression	map -> perm & perm		881905	1		&			
ANR	882021	PtrMemberAccess	map -> perm		881905	0					
ANR	882022	Identifier	map		881905	0					
ANR	882023	Identifier	perm		881905	1					
ANR	882024	Identifier	perm		881905	1					
ANR	882025	CompoundStatement		16:41:450:450	881905	1					
ANR	882026	ExpressionStatement	do_dump = true	1353:3:42746:42760	881905	0	True				
ANR	882027	AssignmentExpression	do_dump = true		881905	0		=			
ANR	882028	Identifier	do_dump		881905	0					
ANR	882029	Identifier	true		881905	1					
ANR	882030	IfStatement	if ( do_dump )		881905	2					
ANR	882031	Condition	do_dump	1355:6:42772:42778	881905	0	True				
ANR	882032	Identifier	do_dump		881905	0					
ANR	882033	CompoundStatement		20:3:495:524	881905	1					
ANR	882034	IdentifierDeclStatement	ut8 * buf = malloc ( map -> size ) ;	1356:3:42786:42815	881905	0	True				
ANR	882035	IdentifierDecl	* buf = malloc ( map -> size )		881905	0					
ANR	882036	IdentifierDeclType	ut8 *		881905	0					
ANR	882037	Identifier	buf		881905	1					
ANR	882038	AssignmentExpression	* buf = malloc ( map -> size )		881905	2		=			
ANR	882039	Identifier	buf		881905	0					
ANR	882040	CallExpression	malloc ( map -> size )		881905	1					
ANR	882041	Callee	malloc		881905	0					
ANR	882042	Identifier	malloc		881905	0					
ANR	882043	ArgumentList	map -> size		881905	1					
ANR	882044	Argument	map -> size		881905	0					
ANR	882045	PtrMemberAccess	map -> size		881905	0					
ANR	882046	Identifier	map		881905	0					
ANR	882047	Identifier	size		881905	1					
ANR	882048	IfStatement	if ( ! buf )		881905	1					
ANR	882049	Condition	! buf	1358:7:42884:42887	881905	0	True				
ANR	882050	UnaryOperationExpression	! buf		881905	0					
ANR	882051	UnaryOperator	!		881905	0					
ANR	882052	Identifier	buf		881905	1					
ANR	882053	CompoundStatement		22:13:599:599	881905	1					
ANR	882054	Statement	eprintf	1359:4:42896:42902	881905	0	True				
ANR	882055	Statement	(	1359:12:42904:42904	881905	1	True				
ANR	882056	Statement	"""Cannot allocate 0x%08"""	1359:13:42905:42927	881905	2	True				
ANR	882057	Statement	PFMT64x	1359:36:42928:42934	881905	3	True				
ANR	882058	Statement	""" bytes\\n"""	1359:43:42935:42944	881905	4	True				
ANR	882059	Statement	","	1359:53:42945:42945	881905	5	True				
ANR	882060	Statement	map	1359:55:42947:42949	881905	6	True				
ANR	882061	Statement	->	1359:58:42950:42951	881905	7	True				
ANR	882062	Statement	size	1359:60:42952:42955	881905	8	True				
ANR	882063	Statement	)	1359:64:42956:42956	881905	9	True				
ANR	882064	ExpressionStatement		1359:65:42957:42957	881905	10	True				
ANR	882065	ExpressionStatement	free ( buf )	1360:4:42963:42973	881905	11	True				
ANR	882066	CallExpression	free ( buf )		881905	0					
ANR	882067	Callee	free		881905	0					
ANR	882068	Identifier	free		881905	0					
ANR	882069	ArgumentList	buf		881905	1					
ANR	882070	Argument	buf		881905	0					
ANR	882071	Identifier	buf		881905	0					
ANR	882072	ContinueStatement	continue ;	1362:4:43016:43024	881905	12	True				
ANR	882073	IfStatement	if ( map -> size > MAX_MAP_SIZE )		881905	2					
ANR	882074	Condition	map -> size > MAX_MAP_SIZE	1364:7:43038:43061	881905	0	True				
ANR	882075	RelationalExpression	map -> size > MAX_MAP_SIZE		881905	0		>			
ANR	882076	PtrMemberAccess	map -> size		881905	0					
ANR	882077	Identifier	map		881905	0					
ANR	882078	Identifier	size		881905	1					
ANR	882079	Identifier	MAX_MAP_SIZE		881905	1					
ANR	882080	CompoundStatement		28:33:773:773	881905	1					
ANR	882081	Statement	eprintf	1365:4:43070:43076	881905	0	True				
ANR	882082	Statement	(	1365:12:43078:43078	881905	1	True				
ANR	882083	Statement	"""Do not dumping 0x%08"""	1365:13:43079:43100	881905	2	True				
ANR	882084	Statement	PFMT64x	1365:35:43101:43107	881905	3	True				
ANR	882085	Statement	""" because it's too big\\n"""	1365:42:43108:43132	881905	4	True				
ANR	882086	Statement	","	1365:67:43133:43133	881905	5	True				
ANR	882087	Statement	map	1365:69:43135:43137	881905	6	True				
ANR	882088	Statement	->	1365:72:43138:43139	881905	7	True				
ANR	882089	Statement	addr	1365:74:43140:43143	881905	8	True				
ANR	882090	Statement	)	1365:78:43144:43144	881905	9	True				
ANR	882091	ExpressionStatement		1365:79:43145:43145	881905	10	True				
ANR	882092	ExpressionStatement	free ( buf )	1366:4:43151:43161	881905	11	True				
ANR	882093	CallExpression	free ( buf )		881905	0					
ANR	882094	Callee	free		881905	0					
ANR	882095	Identifier	free		881905	0					
ANR	882096	ArgumentList	buf		881905	1					
ANR	882097	Argument	buf		881905	0					
ANR	882098	Identifier	buf		881905	0					
ANR	882099	ContinueStatement	continue ;	1367:4:43167:43175	881905	12	True				
ANR	882100	ExpressionStatement	"r_io_read_at ( core -> io , map -> addr , buf , map -> size )"	1369:3:43185:43235	881905	3	True				
ANR	882101	CallExpression	"r_io_read_at ( core -> io , map -> addr , buf , map -> size )"		881905	0					
ANR	882102	Callee	r_io_read_at		881905	0					
ANR	882103	Identifier	r_io_read_at		881905	0					
ANR	882104	ArgumentList	core -> io		881905	1					
ANR	882105	Argument	core -> io		881905	0					
ANR	882106	PtrMemberAccess	core -> io		881905	0					
ANR	882107	Identifier	core		881905	0					
ANR	882108	Identifier	io		881905	1					
ANR	882109	Argument	map -> addr		881905	1					
ANR	882110	PtrMemberAccess	map -> addr		881905	0					
ANR	882111	Identifier	map		881905	0					
ANR	882112	Identifier	addr		881905	1					
ANR	882113	Argument	buf		881905	2					
ANR	882114	Identifier	buf		881905	0					
ANR	882115	Argument	map -> size		881905	3					
ANR	882116	PtrMemberAccess	map -> size		881905	0					
ANR	882117	Identifier	map		881905	0					
ANR	882118	Identifier	size		881905	1					
ANR	882119	Statement	char	1370:3:43240:43243	881905	4	True				
ANR	882120	Statement	*	1370:8:43245:43245	881905	5	True				
ANR	882121	Statement	file	1370:9:43246:43249	881905	6	True				
ANR	882122	Statement	=	1370:14:43251:43251	881905	7	True				
ANR	882123	Statement	filename	1370:16:43253:43260	881905	8	True				
ANR	882124	Statement	?	1371:3:43265:43265	881905	9	True				
ANR	882125	Statement	strdup	1371:5:43267:43272	881905	10	True				
ANR	882126	Statement	(	1371:12:43274:43274	881905	11	True				
ANR	882127	Statement	filename	1371:13:43275:43282	881905	12	True				
ANR	882128	Statement	)	1371:21:43283:43283	881905	13	True				
ANR	882129	Statement	:	1372:3:43288:43288	881905	14	True				
ANR	882130	Statement	r_str_newf	1372:5:43290:43299	881905	15	True				
ANR	882131	Statement	(	1372:16:43301:43301	881905	16	True				
ANR	882132	Statement	"""0x%08"""	1372:17:43302:43308	881905	17	True				
ANR	882133	Statement	PFMT64x	1372:24:43309:43315	881905	18	True				
ANR	882134	Statement	"""-0x%08"""	1372:31:43316:43323	881905	19	True				
ANR	882135	Statement	PFMT64x	1372:39:43324:43330	881905	20	True				
ANR	882136	Statement	"""-%s.dmp"""	1372:46:43331:43339	881905	21	True				
ANR	882137	Statement	","	1372:55:43340:43340	881905	22	True				
ANR	882138	Statement	map	1373:5:43347:43349	881905	23	True				
ANR	882139	Statement	->	1373:8:43350:43351	881905	24	True				
ANR	882140	Statement	addr	1373:10:43352:43355	881905	25	True				
ANR	882141	Statement	","	1373:14:43356:43356	881905	26	True				
ANR	882142	Statement	map	1373:16:43358:43360	881905	27	True				
ANR	882143	Statement	->	1373:19:43361:43362	881905	28	True				
ANR	882144	Statement	addr_end	1373:21:43363:43370	881905	29	True				
ANR	882145	Statement	","	1373:29:43371:43371	881905	30	True				
ANR	882146	Statement	r_str_rwx_i	1373:31:43373:43383	881905	31	True				
ANR	882147	Statement	(	1373:43:43385:43385	881905	32	True				
ANR	882148	Statement	map	1373:44:43386:43388	881905	33	True				
ANR	882149	Statement	->	1373:47:43389:43390	881905	34	True				
ANR	882150	Statement	perm	1373:49:43391:43394	881905	35	True				
ANR	882151	Statement	)	1373:53:43395:43395	881905	36	True				
ANR	882152	Statement	)	1373:54:43396:43396	881905	37	True				
ANR	882153	ExpressionStatement		1373:55:43397:43397	881905	38	True				
ANR	882154	IfStatement	"if ( ! r_file_dump ( file , buf , map -> size , 0 ) )"		881905	39					
ANR	882155	Condition	"! r_file_dump ( file , buf , map -> size , 0 )"	1374:7:43406:43443	881905	0	True				
ANR	882156	UnaryOperationExpression	"! r_file_dump ( file , buf , map -> size , 0 )"		881905	0					
ANR	882157	UnaryOperator	!		881905	0					
ANR	882158	CallExpression	"r_file_dump ( file , buf , map -> size , 0 )"		881905	1					
ANR	882159	Callee	r_file_dump		881905	0					
ANR	882160	Identifier	r_file_dump		881905	0					
ANR	882161	ArgumentList	file		881905	1					
ANR	882162	Argument	file		881905	0					
ANR	882163	Identifier	file		881905	0					
ANR	882164	Argument	buf		881905	1					
ANR	882165	Identifier	buf		881905	0					
ANR	882166	Argument	map -> size		881905	2					
ANR	882167	PtrMemberAccess	map -> size		881905	0					
ANR	882168	Identifier	map		881905	0					
ANR	882169	Identifier	size		881905	1					
ANR	882170	Argument	0		881905	3					
ANR	882171	PrimaryExpression	0		881905	0					
ANR	882172	CompoundStatement		38:47:1155:1155	881905	1					
ANR	882173	ExpressionStatement	"eprintf ( ""Cannot write '%s'\\n"" , file )"	1375:4:43452:43489	881905	0	True				
ANR	882174	CallExpression	"eprintf ( ""Cannot write '%s'\\n"" , file )"		881905	0					
ANR	882175	Callee	eprintf		881905	0					
ANR	882176	Identifier	eprintf		881905	0					
ANR	882177	ArgumentList	"""Cannot write '%s'\\n"""		881905	1					
ANR	882178	Argument	"""Cannot write '%s'\\n"""		881905	0					
ANR	882179	PrimaryExpression	"""Cannot write '%s'\\n"""		881905	0					
ANR	882180	Argument	file		881905	1					
ANR	882181	Identifier	file		881905	0					
ANR	882182	ExpressionStatement	ret = 0	1376:4:43495:43502	881905	1	True				
ANR	882183	AssignmentExpression	ret = 0		881905	0		=			
ANR	882184	Identifier	ret		881905	0					
ANR	882185	PrimaryExpression	0		881905	1					
ANR	882186	ElseStatement	else		881905	0					
ANR	882187	CompoundStatement		41:10:1223:1223	881905	0					
ANR	882188	ExpressionStatement	"eprintf ( ""Dumped %d byte(s) into %s\\n"" , ( int ) map -> size , file )"	1378:4:43520:43581	881905	0	True				
ANR	882189	CallExpression	"eprintf ( ""Dumped %d byte(s) into %s\\n"" , ( int ) map -> size , file )"		881905	0					
ANR	882190	Callee	eprintf		881905	0					
ANR	882191	Identifier	eprintf		881905	0					
ANR	882192	ArgumentList	"""Dumped %d byte(s) into %s\\n"""		881905	1					
ANR	882193	Argument	"""Dumped %d byte(s) into %s\\n"""		881905	0					
ANR	882194	PrimaryExpression	"""Dumped %d byte(s) into %s\\n"""		881905	0					
ANR	882195	Argument	( int ) map -> size		881905	1					
ANR	882196	CastExpression	( int ) map -> size		881905	0					
ANR	882197	CastTarget	int		881905	0					
ANR	882198	PtrMemberAccess	map -> size		881905	1					
ANR	882199	Identifier	map		881905	0					
ANR	882200	Identifier	size		881905	1					
ANR	882201	Argument	file		881905	2					
ANR	882202	Identifier	file		881905	0					
ANR	882203	ExpressionStatement	free ( file )	1380:3:43591:43602	881905	40	True				
ANR	882204	CallExpression	free ( file )		881905	0					
ANR	882205	Callee	free		881905	0					
ANR	882206	Identifier	free		881905	0					
ANR	882207	ArgumentList	file		881905	1					
ANR	882208	Argument	file		881905	0					
ANR	882209	Identifier	file		881905	0					
ANR	882210	ExpressionStatement	free ( buf )	1381:3:43607:43617	881905	41	True				
ANR	882211	CallExpression	free ( buf )		881905	0					
ANR	882212	Callee	free		881905	0					
ANR	882213	Identifier	free		881905	0					
ANR	882214	ArgumentList	buf		881905	1					
ANR	882215	Argument	buf		881905	0					
ANR	882216	Identifier	buf		881905	0					
ANR	882217	ReturnStatement	return ret ;	1385:1:43672:43682	881905	19	True				
ANR	882218	Identifier	ret		881905	0					
ANR	882219	ReturnType	static int		881905	1					
ANR	882220	Identifier	dump_maps		881905	2					
ANR	882221	ParameterList	"RCore * core , int perm , const char * filename"		881905	3					
ANR	882222	Parameter	RCore * core	1337:21:42245:42255	881905	0	True				
ANR	882223	ParameterType	RCore *		881905	0					
ANR	882224	Identifier	core		881905	1					
ANR	882225	Parameter	int perm	1337:34:42258:42265	881905	1	True				
ANR	882226	ParameterType	int		881905	0					
ANR	882227	Identifier	perm		881905	1					
ANR	882228	Parameter	const char * filename	1337:44:42268:42287	881905	2	True				
ANR	882229	ParameterType	const char *		881905	0					
ANR	882230	Identifier	filename		881905	1					
ANR	882231	CFGEntryNode	ENTRY		881905		True				
ANR	882232	CFGExitNode	EXIT		881905		True				
ANR	882233	CFGErrorNode	ERROR		881905		True				
ANR	882234	Symbol	map -> addr		881905						
ANR	882235	Symbol	perm		881905						
ANR	882236	Symbol	* map		881905						
ANR	882237	Symbol	MAX_MAP_SIZE		881905						
ANR	882238	Symbol	* core		881905						
ANR	882239	Symbol	core -> offset		881905						
ANR	882240	Symbol	map -> size		881905						
ANR	882241	Symbol	file		881905						
ANR	882242	Symbol	core -> io		881905						
ANR	882243	Symbol	r_file_dump		881905						
ANR	882244	Symbol	addr		881905						
ANR	882245	Symbol	map		881905						
ANR	882246	Symbol	* * core		881905						
ANR	882247	Symbol	ret		881905						
ANR	882248	Symbol	malloc		881905						
ANR	882249	Symbol	false		881905						
ANR	882250	Symbol	iter		881905						
ANR	882251	Symbol	do_dump		881905						
ANR	882252	Symbol	core -> dbg -> maps		881905						
ANR	882253	Symbol	core		881905						
ANR	882254	Symbol	buf		881905						
ANR	882255	Symbol	filename		881905						
ANR	882256	Symbol	true		881905						
ANR	882257	Symbol	map -> addr_end		881905						
ANR	882258	Symbol	r_list_empty		881905						
ANR	882259	Symbol	* core -> dbg		881905						
ANR	882260	Symbol	map -> perm		881905						
ANR	882261	Symbol	core -> dbg		881905						
ANR	882262	Function	cmd_debug_modules	1388:0:43687:45524							
ANR	882263	FunctionDef	"cmd_debug_modules (RCore * core , int mode)"		882262	0					
ANR	882264	CompoundStatement		1388:53:43740:45524	882262	0					
ANR	882265	IdentifierDeclStatement	ut64 addr = core -> offset ;	1389:1:43752:43776	882262	0	True				
ANR	882266	IdentifierDecl	addr = core -> offset		882262	0					
ANR	882267	IdentifierDeclType	ut64		882262	0					
ANR	882268	Identifier	addr		882262	1					
ANR	882269	AssignmentExpression	addr = core -> offset		882262	2		=			
ANR	882270	Identifier	addr		882262	0					
ANR	882271	PtrMemberAccess	core -> offset		882262	1					
ANR	882272	Identifier	core		882262	0					
ANR	882273	Identifier	offset		882262	1					
ANR	882274	IdentifierDeclStatement	RDebugMap * map ;	1390:1:43779:43793	882262	1	True				
ANR	882275	IdentifierDecl	* map		882262	0					
ANR	882276	IdentifierDeclType	RDebugMap *		882262	0					
ANR	882277	Identifier	map		882262	1					
ANR	882278	IdentifierDeclStatement	RList * list ;	1391:1:43796:43807	882262	2	True				
ANR	882279	IdentifierDecl	* list		882262	0					
ANR	882280	IdentifierDeclType	RList *		882262	0					
ANR	882281	Identifier	list		882262	1					
ANR	882282	IdentifierDeclStatement	RListIter * iter ;	1392:1:43810:43825	882262	3	True				
ANR	882283	IdentifierDecl	* iter		882262	0					
ANR	882284	IdentifierDeclType	RListIter *		882262	0					
ANR	882285	Identifier	iter		882262	1					
ANR	882286	IfStatement	if ( mode == '?' )		882262	4					
ANR	882287	Condition	mode == '?'	1395:5:43894:43904	882262	0	True				
ANR	882288	EqualityExpression	mode == '?'		882262	0		==			
ANR	882289	Identifier	mode		882262	0					
ANR	882290	PrimaryExpression	'?'		882262	1					
ANR	882291	CompoundStatement		8:18:166:166	882262	1					
ANR	882292	Label	show_help :	1396:0:43909:43918	882262	0	True				
ANR	882293	Identifier	show_help		882262	0					
ANR	882294	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dmm )"	1397:2:43922:43958	882262	1	True				
ANR	882295	CallExpression	"r_core_cmd_help ( core , help_msg_dmm )"		882262	0					
ANR	882296	Callee	r_core_cmd_help		882262	0					
ANR	882297	Identifier	r_core_cmd_help		882262	0					
ANR	882298	ArgumentList	core		882262	1					
ANR	882299	Argument	core		882262	0					
ANR	882300	Identifier	core		882262	0					
ANR	882301	Argument	help_msg_dmm		882262	1					
ANR	882302	Identifier	help_msg_dmm		882262	0					
ANR	882303	ReturnStatement	return ;	1398:2:43962:43968	882262	2	True				
ANR	882304	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1400:1:43974:43992	882262	5	True				
ANR	882305	IdentifierDecl	* pj = pj_new ( )		882262	0					
ANR	882306	IdentifierDeclType	PJ *		882262	0					
ANR	882307	Identifier	pj		882262	1					
ANR	882308	AssignmentExpression	* pj = pj_new ( )		882262	2		=			
ANR	882309	Identifier	pj		882262	0					
ANR	882310	CallExpression	pj_new ( )		882262	1					
ANR	882311	Callee	pj_new		882262	0					
ANR	882312	Identifier	pj_new		882262	0					
ANR	882313	ArgumentList			882262	1					
ANR	882314	IfStatement	if ( mode == 'j' )		882262	6					
ANR	882315	Condition	mode == 'j'	1401:5:43999:44009	882262	0	True				
ANR	882316	EqualityExpression	mode == 'j'		882262	0		==			
ANR	882317	Identifier	mode		882262	0					
ANR	882318	PrimaryExpression	'j'		882262	1					
ANR	882319	CompoundStatement		14:18:271:271	882262	1					
ANR	882320	ExpressionStatement	pj_a ( pj )	1402:2:44016:44025	882262	0	True				
ANR	882321	CallExpression	pj_a ( pj )		882262	0					
ANR	882322	Callee	pj_a		882262	0					
ANR	882323	Identifier	pj_a		882262	0					
ANR	882324	ArgumentList	pj		882262	1					
ANR	882325	Argument	pj		882262	0					
ANR	882326	Identifier	pj		882262	0					
ANR	882327	ExpressionStatement	list = r_debug_modules_list ( core -> dbg )	1405:1:44052:44091	882262	7	True				
ANR	882328	AssignmentExpression	list = r_debug_modules_list ( core -> dbg )		882262	0		=			
ANR	882329	Identifier	list		882262	0					
ANR	882330	CallExpression	r_debug_modules_list ( core -> dbg )		882262	1					
ANR	882331	Callee	r_debug_modules_list		882262	0					
ANR	882332	Identifier	r_debug_modules_list		882262	0					
ANR	882333	ArgumentList	core -> dbg		882262	1					
ANR	882334	Argument	core -> dbg		882262	0					
ANR	882335	PtrMemberAccess	core -> dbg		882262	0					
ANR	882336	Identifier	core		882262	0					
ANR	882337	Identifier	dbg		882262	1					
ANR	882338	Statement	r_list_foreach	1406:1:44094:44107	882262	8	True				
ANR	882339	Statement	(	1406:16:44109:44109	882262	9	True				
ANR	882340	Statement	list	1406:17:44110:44113	882262	10	True				
ANR	882341	Statement	","	1406:21:44114:44114	882262	11	True				
ANR	882342	Statement	iter	1406:23:44116:44119	882262	12	True				
ANR	882343	Statement	","	1406:27:44120:44120	882262	13	True				
ANR	882344	Statement	map	1406:29:44122:44124	882262	14	True				
ANR	882345	Statement	)	1406:32:44125:44125	882262	15	True				
ANR	882346	CompoundStatement		19:34:386:386	882262	16					
ANR	882347	SwitchStatement	switch ( mode )		882262	0					
ANR	882348	Condition	mode	1407:10:44139:44142	882262	0	True				
ANR	882349	Identifier	mode		882262	0					
ANR	882350	CompoundStatement		20:16:404:404	882262	1					
ANR	882351	Label	case 0 :	1408:2:44149:44155	882262	0	True				
ANR	882352	Statement	r_cons_printf	1409:3:44160:44172	882262	1	True				
ANR	882353	Statement	(	1409:17:44174:44174	882262	2	True				
ANR	882354	Statement	"""0x%08"""	1409:18:44175:44181	882262	3	True				
ANR	882355	Statement	PFMT64x	1409:25:44182:44188	882262	4	True				
ANR	882356	Statement	""" 0x%08"""	1409:32:44189:44196	882262	5	True				
ANR	882357	Statement	PFMT64x	1409:40:44197:44203	882262	6	True				
ANR	882358	Statement	"""  %s\\n"""	1409:47:44204:44211	882262	7	True				
ANR	882359	Statement	","	1409:55:44212:44212	882262	8	True				
ANR	882360	Statement	map	1409:57:44214:44216	882262	9	True				
ANR	882361	Statement	->	1409:60:44217:44218	882262	10	True				
ANR	882362	Statement	addr	1409:62:44219:44222	882262	11	True				
ANR	882363	Statement	","	1409:66:44223:44223	882262	12	True				
ANR	882364	Statement	map	1409:68:44225:44227	882262	13	True				
ANR	882365	Statement	->	1409:71:44228:44229	882262	14	True				
ANR	882366	Statement	addr_end	1409:73:44230:44237	882262	15	True				
ANR	882367	Statement	","	1409:81:44238:44238	882262	16	True				
ANR	882368	Statement	map	1409:83:44240:44242	882262	17	True				
ANR	882369	Statement	->	1409:86:44243:44244	882262	18	True				
ANR	882370	Statement	file	1409:88:44245:44248	882262	19	True				
ANR	882371	Statement	)	1409:92:44249:44249	882262	20	True				
ANR	882372	ExpressionStatement		1409:93:44250:44250	882262	21	True				
ANR	882373	BreakStatement	break ;	1410:3:44255:44260	882262	22	True				
ANR	882374	Label	case '.' :	1411:2:44264:44272	882262	23	True				
ANR	882375	IfStatement	if ( addr >= map -> addr && addr < map -> addr_end )		882262	24					
ANR	882376	Condition	addr >= map -> addr && addr < map -> addr_end	1412:7:44281:44321	882262	0	True				
ANR	882377	AndExpression	addr >= map -> addr && addr < map -> addr_end		882262	0		&&			
ANR	882378	RelationalExpression	addr >= map -> addr		882262	0		>=			
ANR	882379	Identifier	addr		882262	0					
ANR	882380	PtrMemberAccess	map -> addr		882262	1					
ANR	882381	Identifier	map		882262	0					
ANR	882382	Identifier	addr		882262	1					
ANR	882383	RelationalExpression	addr < map -> addr_end		882262	1		<			
ANR	882384	Identifier	addr		882262	0					
ANR	882385	PtrMemberAccess	map -> addr_end		882262	1					
ANR	882386	Identifier	map		882262	0					
ANR	882387	Identifier	addr_end		882262	1					
ANR	882388	CompoundStatement		25:50:583:583	882262	1					
ANR	882389	Statement	r_cons_printf	1413:4:44330:44342	882262	0	True				
ANR	882390	Statement	(	1413:18:44344:44344	882262	1	True				
ANR	882391	Statement	"""0x%08"""	1413:19:44345:44351	882262	2	True				
ANR	882392	Statement	PFMT64x	1413:26:44352:44358	882262	3	True				
ANR	882393	Statement	""" 0x%08"""	1413:33:44359:44366	882262	4	True				
ANR	882394	Statement	PFMT64x	1413:41:44367:44373	882262	5	True				
ANR	882395	Statement	"""  %s\\n"""	1413:48:44374:44381	882262	6	True				
ANR	882396	Statement	","	1413:56:44382:44382	882262	7	True				
ANR	882397	Statement	map	1413:58:44384:44386	882262	8	True				
ANR	882398	Statement	->	1413:61:44387:44388	882262	9	True				
ANR	882399	Statement	addr	1413:63:44389:44392	882262	10	True				
ANR	882400	Statement	","	1413:67:44393:44393	882262	11	True				
ANR	882401	Statement	map	1413:69:44395:44397	882262	12	True				
ANR	882402	Statement	->	1413:72:44398:44399	882262	13	True				
ANR	882403	Statement	addr_end	1413:74:44400:44407	882262	14	True				
ANR	882404	Statement	","	1413:82:44408:44408	882262	15	True				
ANR	882405	Statement	map	1413:84:44410:44412	882262	16	True				
ANR	882406	Statement	->	1413:87:44413:44414	882262	17	True				
ANR	882407	Statement	file	1413:89:44415:44418	882262	18	True				
ANR	882408	Statement	)	1413:93:44419:44419	882262	19	True				
ANR	882409	ExpressionStatement		1413:94:44420:44420	882262	20	True				
ANR	882410	GotoStatement	goto beach ;	1414:4:44426:44436	882262	21	True				
ANR	882411	Identifier	beach		882262	0					
ANR	882412	BreakStatement	break ;	1416:3:44446:44451	882262	25	True				
ANR	882413	Label	case 'j' :	1417:2:44455:44463	882262	26	True				
ANR	882414	CompoundStatement		31:3:727:727	882262	27					
ANR	882415	ExpressionStatement	pj_o ( pj )	1420:4:44523:44532	882262	0	True				
ANR	882416	CallExpression	pj_o ( pj )		882262	0					
ANR	882417	Callee	pj_o		882262	0					
ANR	882418	Identifier	pj_o		882262	0					
ANR	882419	ArgumentList	pj		882262	1					
ANR	882420	Argument	pj		882262	0					
ANR	882421	Identifier	pj		882262	0					
ANR	882422	ExpressionStatement	"pj_kn ( pj , ""addr"" , map -> addr )"	1421:4:44538:44567	882262	1	True				
ANR	882423	CallExpression	"pj_kn ( pj , ""addr"" , map -> addr )"		882262	0					
ANR	882424	Callee	pj_kn		882262	0					
ANR	882425	Identifier	pj_kn		882262	0					
ANR	882426	ArgumentList	pj		882262	1					
ANR	882427	Argument	pj		882262	0					
ANR	882428	Identifier	pj		882262	0					
ANR	882429	Argument	"""addr"""		882262	1					
ANR	882430	PrimaryExpression	"""addr"""		882262	0					
ANR	882431	Argument	map -> addr		882262	2					
ANR	882432	PtrMemberAccess	map -> addr		882262	0					
ANR	882433	Identifier	map		882262	0					
ANR	882434	Identifier	addr		882262	1					
ANR	882435	ExpressionStatement	"pj_kn ( pj , ""addr_end"" , map -> addr_end )"	1422:4:44573:44610	882262	2	True				
ANR	882436	CallExpression	"pj_kn ( pj , ""addr_end"" , map -> addr_end )"		882262	0					
ANR	882437	Callee	pj_kn		882262	0					
ANR	882438	Identifier	pj_kn		882262	0					
ANR	882439	ArgumentList	pj		882262	1					
ANR	882440	Argument	pj		882262	0					
ANR	882441	Identifier	pj		882262	0					
ANR	882442	Argument	"""addr_end"""		882262	1					
ANR	882443	PrimaryExpression	"""addr_end"""		882262	0					
ANR	882444	Argument	map -> addr_end		882262	2					
ANR	882445	PtrMemberAccess	map -> addr_end		882262	0					
ANR	882446	Identifier	map		882262	0					
ANR	882447	Identifier	addr_end		882262	1					
ANR	882448	ExpressionStatement	"pj_ks ( pj , ""file"" , map -> file )"	1423:4:44616:44645	882262	3	True				
ANR	882449	CallExpression	"pj_ks ( pj , ""file"" , map -> file )"		882262	0					
ANR	882450	Callee	pj_ks		882262	0					
ANR	882451	Identifier	pj_ks		882262	0					
ANR	882452	ArgumentList	pj		882262	1					
ANR	882453	Argument	pj		882262	0					
ANR	882454	Identifier	pj		882262	0					
ANR	882455	Argument	"""file"""		882262	1					
ANR	882456	PrimaryExpression	"""file"""		882262	0					
ANR	882457	Argument	map -> file		882262	2					
ANR	882458	PtrMemberAccess	map -> file		882262	0					
ANR	882459	Identifier	map		882262	0					
ANR	882460	Identifier	file		882262	1					
ANR	882461	ExpressionStatement	"pj_ks ( pj , ""name"" , map -> name )"	1424:4:44651:44680	882262	4	True				
ANR	882462	CallExpression	"pj_ks ( pj , ""name"" , map -> name )"		882262	0					
ANR	882463	Callee	pj_ks		882262	0					
ANR	882464	Identifier	pj_ks		882262	0					
ANR	882465	ArgumentList	pj		882262	1					
ANR	882466	Argument	pj		882262	0					
ANR	882467	Identifier	pj		882262	0					
ANR	882468	Argument	"""name"""		882262	1					
ANR	882469	PrimaryExpression	"""name"""		882262	0					
ANR	882470	Argument	map -> name		882262	2					
ANR	882471	PtrMemberAccess	map -> name		882262	0					
ANR	882472	Identifier	map		882262	0					
ANR	882473	Identifier	name		882262	1					
ANR	882474	ExpressionStatement	pj_end ( pj )	1425:4:44686:44697	882262	5	True				
ANR	882475	CallExpression	pj_end ( pj )		882262	0					
ANR	882476	Callee	pj_end		882262	0					
ANR	882477	Identifier	pj_end		882262	0					
ANR	882478	ArgumentList	pj		882262	1					
ANR	882479	Argument	pj		882262	0					
ANR	882480	Identifier	pj		882262	0					
ANR	882481	BreakStatement	break ;	1427:3:44707:44712	882262	28	True				
ANR	882482	Label	case ':' :	1428:2:44716:44724	882262	29	True				
ANR	882483	Label	case '*' :	1429:2:44728:44736	882262	30	True				
ANR	882484	IfStatement	if ( mode == '*' || ( mode == ':' && addr >= map -> addr && addr < map -> addr_end ) )		882262	31					
ANR	882485	Condition	mode == '*' || ( mode == ':' && addr >= map -> addr && addr < map -> addr_end )	1430:7:44745:44821	882262	0	True				
ANR	882486	OrExpression	mode == '*' || ( mode == ':' && addr >= map -> addr && addr < map -> addr_end )		882262	0		||			
ANR	882487	EqualityExpression	mode == '*'		882262	0		==			
ANR	882488	Identifier	mode		882262	0					
ANR	882489	PrimaryExpression	'*'		882262	1					
ANR	882490	AndExpression	mode == ':' && addr >= map -> addr && addr < map -> addr_end		882262	1		&&			
ANR	882491	EqualityExpression	mode == ':'		882262	0		==			
ANR	882492	Identifier	mode		882262	0					
ANR	882493	PrimaryExpression	':'		882262	1					
ANR	882494	AndExpression	addr >= map -> addr && addr < map -> addr_end		882262	1		&&			
ANR	882495	RelationalExpression	addr >= map -> addr		882262	0		>=			
ANR	882496	Identifier	addr		882262	0					
ANR	882497	PtrMemberAccess	map -> addr		882262	1					
ANR	882498	Identifier	map		882262	0					
ANR	882499	Identifier	addr		882262	1					
ANR	882500	RelationalExpression	addr < map -> addr_end		882262	1		<			
ANR	882501	Identifier	addr		882262	0					
ANR	882502	PtrMemberAccess	map -> addr_end		882262	1					
ANR	882503	Identifier	map		882262	0					
ANR	882504	Identifier	addr_end		882262	1					
ANR	882505	CompoundStatement		47:4:1189:1229	882262	1					
ANR	882506	IdentifierDeclStatement	char * escaped_path = r_str_escape ( map -> file ) ;	1433:4:44879:44924	882262	0	True				
ANR	882507	IdentifierDecl	* escaped_path = r_str_escape ( map -> file )		882262	0					
ANR	882508	IdentifierDeclType	char *		882262	0					
ANR	882509	Identifier	escaped_path		882262	1					
ANR	882510	AssignmentExpression	* escaped_path = r_str_escape ( map -> file )		882262	2		=			
ANR	882511	Identifier	escaped_path		882262	0					
ANR	882512	CallExpression	r_str_escape ( map -> file )		882262	1					
ANR	882513	Callee	r_str_escape		882262	0					
ANR	882514	Identifier	r_str_escape		882262	0					
ANR	882515	ArgumentList	map -> file		882262	1					
ANR	882516	Argument	map -> file		882262	0					
ANR	882517	PtrMemberAccess	map -> file		882262	0					
ANR	882518	Identifier	map		882262	0					
ANR	882519	Identifier	file		882262	1					
ANR	882520	IdentifierDeclStatement	char * filtered_name = strdup ( map -> name ) ;	1434:4:44930:44970	882262	1	True				
ANR	882521	IdentifierDecl	* filtered_name = strdup ( map -> name )		882262	0					
ANR	882522	IdentifierDeclType	char *		882262	0					
ANR	882523	Identifier	filtered_name		882262	1					
ANR	882524	AssignmentExpression	* filtered_name = strdup ( map -> name )		882262	2		=			
ANR	882525	Identifier	filtered_name		882262	0					
ANR	882526	CallExpression	strdup ( map -> name )		882262	1					
ANR	882527	Callee	strdup		882262	0					
ANR	882528	Identifier	strdup		882262	0					
ANR	882529	ArgumentList	map -> name		882262	1					
ANR	882530	Argument	map -> name		882262	0					
ANR	882531	PtrMemberAccess	map -> name		882262	0					
ANR	882532	Identifier	map		882262	0					
ANR	882533	Identifier	name		882262	1					
ANR	882534	ExpressionStatement	"r_name_filter ( filtered_name , 0 )"	1435:4:44976:45008	882262	2	True				
ANR	882535	CallExpression	"r_name_filter ( filtered_name , 0 )"		882262	0					
ANR	882536	Callee	r_name_filter		882262	0					
ANR	882537	Identifier	r_name_filter		882262	0					
ANR	882538	ArgumentList	filtered_name		882262	1					
ANR	882539	Argument	filtered_name		882262	0					
ANR	882540	Identifier	filtered_name		882262	0					
ANR	882541	Argument	0		882262	1					
ANR	882542	PrimaryExpression	0		882262	0					
ANR	882543	Statement	r_cons_printf	1436:4:45014:45026	882262	3	True				
ANR	882544	Statement	(	1436:18:45028:45028	882262	4	True				
ANR	882545	Statement	"""f mod.%s = 0x%08"""	1436:19:45029:45046	882262	5	True				
ANR	882546	Statement	PFMT64x	1436:37:45047:45053	882262	6	True				
ANR	882547	Statement	"""\\n"""	1436:44:45054:45057	882262	7	True				
ANR	882548	Statement	","	1436:48:45058:45058	882262	8	True				
ANR	882549	Statement	filtered_name	1437:5:45065:45077	882262	9	True				
ANR	882550	Statement	","	1437:18:45078:45078	882262	10	True				
ANR	882551	Statement	map	1437:20:45080:45082	882262	11	True				
ANR	882552	Statement	->	1437:23:45083:45084	882262	12	True				
ANR	882553	Statement	addr	1437:25:45085:45088	882262	13	True				
ANR	882554	Statement	)	1437:29:45089:45089	882262	14	True				
ANR	882555	ExpressionStatement		1437:30:45090:45090	882262	15	True				
ANR	882556	Statement	r_cons_printf	1438:4:45096:45108	882262	16	True				
ANR	882557	Statement	(	1438:18:45110:45110	882262	17	True				
ANR	882558	Statement	"""oba 0x%08"""	1438:19:45111:45121	882262	18	True				
ANR	882559	Statement	PFMT64x	1438:30:45122:45128	882262	19	True				
ANR	882560	Statement	""" %s\\n"""	1438:37:45129:45135	882262	20	True				
ANR	882561	Statement	","	1438:44:45136:45136	882262	21	True				
ANR	882562	Statement	map	1438:46:45138:45140	882262	22	True				
ANR	882563	Statement	->	1438:49:45141:45142	882262	23	True				
ANR	882564	Statement	addr	1438:51:45143:45146	882262	24	True				
ANR	882565	Statement	","	1438:55:45147:45147	882262	25	True				
ANR	882566	Statement	escaped_path	1438:57:45149:45160	882262	26	True				
ANR	882567	Statement	)	1438:69:45161:45161	882262	27	True				
ANR	882568	ExpressionStatement		1438:70:45162:45162	882262	28	True				
ANR	882569	ExpressionStatement	free ( escaped_path )	1440:4:45257:45276	882262	29	True				
ANR	882570	CallExpression	free ( escaped_path )		882262	0					
ANR	882571	Callee	free		882262	0					
ANR	882572	Identifier	free		882262	0					
ANR	882573	ArgumentList	escaped_path		882262	1					
ANR	882574	Argument	escaped_path		882262	0					
ANR	882575	Identifier	escaped_path		882262	0					
ANR	882576	ExpressionStatement	free ( filtered_name )	1441:4:45282:45302	882262	30	True				
ANR	882577	CallExpression	free ( filtered_name )		882262	0					
ANR	882578	Callee	free		882262	0					
ANR	882579	Identifier	free		882262	0					
ANR	882580	ArgumentList	filtered_name		882262	1					
ANR	882581	Argument	filtered_name		882262	0					
ANR	882582	Identifier	filtered_name		882262	0					
ANR	882583	BreakStatement	break ;	1443:3:45312:45317	882262	32	True				
ANR	882584	Label	default :	1444:2:45321:45328	882262	33	True				
ANR	882585	Identifier	default		882262	0					
ANR	882586	ExpressionStatement	r_list_free ( list )	1445:3:45333:45351	882262	34	True				
ANR	882587	CallExpression	r_list_free ( list )		882262	0					
ANR	882588	Callee	r_list_free		882262	0					
ANR	882589	Identifier	r_list_free		882262	0					
ANR	882590	ArgumentList	list		882262	1					
ANR	882591	Argument	list		882262	0					
ANR	882592	Identifier	list		882262	0					
ANR	882593	GotoStatement	goto show_help ;	1446:3:45356:45370	882262	35	True				
ANR	882594	Identifier	show_help		882262	0					
ANR	882595	Label	beach :	1450:0:45400:45405	882262	17	True				
ANR	882596	Identifier	beach		882262	0					
ANR	882597	IfStatement	if ( mode == 'j' )		882262	18					
ANR	882598	Condition	mode == 'j'	1451:5:45412:45422	882262	0	True				
ANR	882599	EqualityExpression	mode == 'j'		882262	0		==			
ANR	882600	Identifier	mode		882262	0					
ANR	882601	PrimaryExpression	'j'		882262	1					
ANR	882602	CompoundStatement		64:18:1684:1684	882262	1					
ANR	882603	ExpressionStatement	pj_end ( pj )	1452:2:45429:45440	882262	0	True				
ANR	882604	CallExpression	pj_end ( pj )		882262	0					
ANR	882605	Callee	pj_end		882262	0					
ANR	882606	Identifier	pj_end		882262	0					
ANR	882607	ArgumentList	pj		882262	1					
ANR	882608	Argument	pj		882262	0					
ANR	882609	Identifier	pj		882262	0					
ANR	882610	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	1453:2:45444:45482	882262	1	True				
ANR	882611	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		882262	0					
ANR	882612	Callee	r_cons_printf		882262	0					
ANR	882613	Identifier	r_cons_printf		882262	0					
ANR	882614	ArgumentList	"""%s\\n"""		882262	1					
ANR	882615	Argument	"""%s\\n"""		882262	0					
ANR	882616	PrimaryExpression	"""%s\\n"""		882262	0					
ANR	882617	Argument	pj_string ( pj )		882262	1					
ANR	882618	CallExpression	pj_string ( pj )		882262	0					
ANR	882619	Callee	pj_string		882262	0					
ANR	882620	Identifier	pj_string		882262	0					
ANR	882621	ArgumentList	pj		882262	1					
ANR	882622	Argument	pj		882262	0					
ANR	882623	Identifier	pj		882262	0					
ANR	882624	ExpressionStatement	pj_free ( pj )	1454:2:45486:45498	882262	2	True				
ANR	882625	CallExpression	pj_free ( pj )		882262	0					
ANR	882626	Callee	pj_free		882262	0					
ANR	882627	Identifier	pj_free		882262	0					
ANR	882628	ArgumentList	pj		882262	1					
ANR	882629	Argument	pj		882262	0					
ANR	882630	Identifier	pj		882262	0					
ANR	882631	ExpressionStatement	r_list_free ( list )	1456:1:45504:45522	882262	19	True				
ANR	882632	CallExpression	r_list_free ( list )		882262	0					
ANR	882633	Callee	r_list_free		882262	0					
ANR	882634	Identifier	r_list_free		882262	0					
ANR	882635	ArgumentList	list		882262	1					
ANR	882636	Argument	list		882262	0					
ANR	882637	Identifier	list		882262	0					
ANR	882638	ReturnType	static void		882262	1					
ANR	882639	Identifier	cmd_debug_modules		882262	2					
ANR	882640	ParameterList	"RCore * core , int mode"		882262	3					
ANR	882641	Parameter	RCore * core	1388:30:43717:43727	882262	0	True				
ANR	882642	ParameterType	RCore *		882262	0					
ANR	882643	Identifier	core		882262	1					
ANR	882644	Parameter	int mode	1388:43:43730:43737	882262	1	True				
ANR	882645	ParameterType	int		882262	0					
ANR	882646	Identifier	mode		882262	1					
ANR	882647	CFGEntryNode	ENTRY		882262		True				
ANR	882648	CFGExitNode	EXIT		882262		True				
ANR	882649	Symbol	map -> addr		882262						
ANR	882650	Symbol	pj_string		882262						
ANR	882651	Symbol	r_debug_modules_list		882262						
ANR	882652	Symbol	* map		882262						
ANR	882653	Symbol	map -> file		882262						
ANR	882654	Symbol	* core		882262						
ANR	882655	Symbol	core -> offset		882262						
ANR	882656	Symbol	iter		882262						
ANR	882657	Symbol	list		882262						
ANR	882658	Symbol	mode		882262						
ANR	882659	Symbol	r_str_escape		882262						
ANR	882660	Symbol	core		882262						
ANR	882661	Symbol	filtered_name		882262						
ANR	882662	Symbol	map -> name		882262						
ANR	882663	Symbol	escaped_path		882262						
ANR	882664	Symbol	help_msg_dmm		882262						
ANR	882665	Symbol	map -> addr_end		882262						
ANR	882666	Symbol	pj		882262						
ANR	882667	Symbol	pj_new		882262						
ANR	882668	Symbol	strdup		882262						
ANR	882669	Symbol	addr		882262						
ANR	882670	Symbol	map		882262						
ANR	882671	Symbol	core -> dbg		882262						
ANR	882672	DeclStmt									
ANR	882673	Decl							int	"int ( RCore * core , const char * input )"	cmd_dbg_map_heap_glibc_32
ANR	882674	DeclStmt									
ANR	882675	Decl							int	"int ( RCore * core , const char * input )"	cmd_dbg_map_heap_glibc_64
ANR	882676	DeclStmt									
ANR	882677	Decl							int	"int ( RCore * core , const char * input )"	cmd_debug_map_heap_win
ANR	882678	Function	addroflib	1469:0:45911:46455							
ANR	882679	FunctionDef	"addroflib (RCore * core , const char * libname)"		882678	0					
ANR	882680	CompoundStatement		1469:56:45967:46455	882678	0					
ANR	882681	IdentifierDeclStatement	RListIter * iter ;	1470:1:45970:45985	882678	0	True				
ANR	882682	IdentifierDecl	* iter		882678	0					
ANR	882683	IdentifierDeclType	RListIter *		882678	0					
ANR	882684	Identifier	iter		882678	1					
ANR	882685	IdentifierDeclStatement	RDebugMap * map ;	1471:1:45988:46002	882678	1	True				
ANR	882686	IdentifierDecl	* map		882678	0					
ANR	882687	IdentifierDeclType	RDebugMap *		882678	0					
ANR	882688	Identifier	map		882678	1					
ANR	882689	IfStatement	if ( ! core || ! libname )		882678	2					
ANR	882690	Condition	! core || ! libname	1472:5:46009:46025	882678	0	True				
ANR	882691	OrExpression	! core || ! libname		882678	0		||			
ANR	882692	UnaryOperationExpression	! core		882678	0					
ANR	882693	UnaryOperator	!		882678	0					
ANR	882694	Identifier	core		882678	1					
ANR	882695	UnaryOperationExpression	! libname		882678	1					
ANR	882696	UnaryOperator	!		882678	0					
ANR	882697	Identifier	libname		882678	1					
ANR	882698	CompoundStatement		4:24:60:60	882678	1					
ANR	882699	ReturnStatement	return UT64_MAX ;	1473:2:46032:46047	882678	0	True				
ANR	882700	Identifier	UT64_MAX		882678	0					
ANR	882701	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1475:1:46053:46081	882678	3	True				
ANR	882702	CallExpression	r_debug_map_sync ( core -> dbg )		882678	0					
ANR	882703	Callee	r_debug_map_sync		882678	0					
ANR	882704	Identifier	r_debug_map_sync		882678	0					
ANR	882705	ArgumentList	core -> dbg		882678	1					
ANR	882706	Argument	core -> dbg		882678	0					
ANR	882707	PtrMemberAccess	core -> dbg		882678	0					
ANR	882708	Identifier	core		882678	0					
ANR	882709	Identifier	dbg		882678	1					
ANR	882710	IdentifierDeclStatement	RList * list = r_debug_modules_list ( core -> dbg ) ;	1477:1:46142:46188	882678	4	True				
ANR	882711	IdentifierDecl	* list = r_debug_modules_list ( core -> dbg )		882678	0					
ANR	882712	IdentifierDeclType	RList *		882678	0					
ANR	882713	Identifier	list		882678	1					
ANR	882714	AssignmentExpression	* list = r_debug_modules_list ( core -> dbg )		882678	2		=			
ANR	882715	Identifier	list		882678	0					
ANR	882716	CallExpression	r_debug_modules_list ( core -> dbg )		882678	1					
ANR	882717	Callee	r_debug_modules_list		882678	0					
ANR	882718	Identifier	r_debug_modules_list		882678	0					
ANR	882719	ArgumentList	core -> dbg		882678	1					
ANR	882720	Argument	core -> dbg		882678	0					
ANR	882721	PtrMemberAccess	core -> dbg		882678	0					
ANR	882722	Identifier	core		882678	0					
ANR	882723	Identifier	dbg		882678	1					
ANR	882724	Statement	r_list_foreach	1478:1:46191:46204	882678	5	True				
ANR	882725	Statement	(	1478:16:46206:46206	882678	6	True				
ANR	882726	Statement	list	1478:17:46207:46210	882678	7	True				
ANR	882727	Statement	","	1478:21:46211:46211	882678	8	True				
ANR	882728	Statement	iter	1478:23:46213:46216	882678	9	True				
ANR	882729	Statement	","	1478:27:46217:46217	882678	10	True				
ANR	882730	Statement	map	1478:29:46219:46221	882678	11	True				
ANR	882731	Statement	)	1478:32:46222:46222	882678	12	True				
ANR	882732	CompoundStatement		10:34:256:256	882678	13					
ANR	882733	IfStatement	"if ( strstr ( r_file_basename ( map -> name ) , libname ) )"		882678	0					
ANR	882734	Condition	"strstr ( r_file_basename ( map -> name ) , libname )"	1479:6:46232:46275	882678	0	True				
ANR	882735	CallExpression	"strstr ( r_file_basename ( map -> name ) , libname )"		882678	0					
ANR	882736	Callee	strstr		882678	0					
ANR	882737	Identifier	strstr		882678	0					
ANR	882738	ArgumentList	r_file_basename ( map -> name )		882678	1					
ANR	882739	Argument	r_file_basename ( map -> name )		882678	0					
ANR	882740	CallExpression	r_file_basename ( map -> name )		882678	0					
ANR	882741	Callee	r_file_basename		882678	0					
ANR	882742	Identifier	r_file_basename		882678	0					
ANR	882743	ArgumentList	map -> name		882678	1					
ANR	882744	Argument	map -> name		882678	0					
ANR	882745	PtrMemberAccess	map -> name		882678	0					
ANR	882746	Identifier	map		882678	0					
ANR	882747	Identifier	name		882678	1					
ANR	882748	Argument	libname		882678	1					
ANR	882749	Identifier	libname		882678	0					
ANR	882750	CompoundStatement		11:52:310:310	882678	1					
ANR	882751	ReturnStatement	return map -> addr ;	1480:3:46283:46299	882678	0	True				
ANR	882752	PtrMemberAccess	map -> addr		882678	0					
ANR	882753	Identifier	map		882678	0					
ANR	882754	Identifier	addr		882678	1					
ANR	882755	Statement	r_list_foreach	1483:1:46309:46322	882678	14	True				
ANR	882756	Statement	(	1483:16:46324:46324	882678	15	True				
ANR	882757	Statement	core	1483:17:46325:46328	882678	16	True				
ANR	882758	Statement	->	1483:21:46329:46330	882678	17	True				
ANR	882759	Statement	dbg	1483:23:46331:46333	882678	18	True				
ANR	882760	Statement	->	1483:26:46334:46335	882678	19	True				
ANR	882761	Statement	maps	1483:28:46336:46339	882678	20	True				
ANR	882762	Statement	","	1483:32:46340:46340	882678	21	True				
ANR	882763	Statement	iter	1483:34:46342:46345	882678	22	True				
ANR	882764	Statement	","	1483:38:46346:46346	882678	23	True				
ANR	882765	Statement	map	1483:40:46348:46350	882678	24	True				
ANR	882766	Statement	)	1483:43:46351:46351	882678	25	True				
ANR	882767	CompoundStatement		15:45:385:385	882678	26					
ANR	882768	IfStatement	"if ( strstr ( r_file_basename ( map -> name ) , libname ) )"		882678	0					
ANR	882769	Condition	"strstr ( r_file_basename ( map -> name ) , libname )"	1484:6:46361:46404	882678	0	True				
ANR	882770	CallExpression	"strstr ( r_file_basename ( map -> name ) , libname )"		882678	0					
ANR	882771	Callee	strstr		882678	0					
ANR	882772	Identifier	strstr		882678	0					
ANR	882773	ArgumentList	r_file_basename ( map -> name )		882678	1					
ANR	882774	Argument	r_file_basename ( map -> name )		882678	0					
ANR	882775	CallExpression	r_file_basename ( map -> name )		882678	0					
ANR	882776	Callee	r_file_basename		882678	0					
ANR	882777	Identifier	r_file_basename		882678	0					
ANR	882778	ArgumentList	map -> name		882678	1					
ANR	882779	Argument	map -> name		882678	0					
ANR	882780	PtrMemberAccess	map -> name		882678	0					
ANR	882781	Identifier	map		882678	0					
ANR	882782	Identifier	name		882678	1					
ANR	882783	Argument	libname		882678	1					
ANR	882784	Identifier	libname		882678	0					
ANR	882785	CompoundStatement		16:52:439:439	882678	1					
ANR	882786	ReturnStatement	return map -> addr ;	1485:3:46412:46428	882678	0	True				
ANR	882787	PtrMemberAccess	map -> addr		882678	0					
ANR	882788	Identifier	map		882678	0					
ANR	882789	Identifier	addr		882678	1					
ANR	882790	ReturnStatement	return UT64_MAX ;	1488:1:46438:46453	882678	27	True				
ANR	882791	Identifier	UT64_MAX		882678	0					
ANR	882792	ReturnType	static ut64		882678	1					
ANR	882793	Identifier	addroflib		882678	2					
ANR	882794	ParameterList	"RCore * core , const char * libname"		882678	3					
ANR	882795	Parameter	RCore * core	1469:22:45933:45943	882678	0	True				
ANR	882796	ParameterType	RCore *		882678	0					
ANR	882797	Identifier	core		882678	1					
ANR	882798	Parameter	const char * libname	1469:35:45946:45964	882678	1	True				
ANR	882799	ParameterType	const char *		882678	0					
ANR	882800	Identifier	libname		882678	1					
ANR	882801	CFGEntryNode	ENTRY		882678		True				
ANR	882802	CFGExitNode	EXIT		882678		True				
ANR	882803	Symbol	map -> addr		882678						
ANR	882804	Symbol	r_debug_modules_list		882678						
ANR	882805	Symbol	* map		882678						
ANR	882806	Symbol	* core		882678						
ANR	882807	Symbol	iter		882678						
ANR	882808	Symbol	list		882678						
ANR	882809	Symbol	r_file_basename		882678						
ANR	882810	Symbol	core		882678						
ANR	882811	Symbol	map -> name		882678						
ANR	882812	Symbol	strstr		882678						
ANR	882813	Symbol	libname		882678						
ANR	882814	Symbol	UT64_MAX		882678						
ANR	882815	Symbol	map		882678						
ANR	882816	Symbol	core -> dbg		882678						
ANR	882817	Function	get_closest_map	1491:0:46458:46921							
ANR	882818	FunctionDef	"get_closest_map (RCore * core , ut64 addr)"		882817	0					
ANR	882819	CompoundStatement		1491:58:46516:46921	882817	0					
ANR	882820	IdentifierDeclStatement	RListIter * iter ;	1492:1:46519:46534	882817	0	True				
ANR	882821	IdentifierDecl	* iter		882817	0					
ANR	882822	IdentifierDeclType	RListIter *		882817	0					
ANR	882823	Identifier	iter		882817	1					
ANR	882824	IdentifierDeclStatement	RDebugMap * map ;	1493:1:46537:46551	882817	1	True				
ANR	882825	IdentifierDecl	* map		882817	0					
ANR	882826	IdentifierDeclType	RDebugMap *		882817	0					
ANR	882827	Identifier	map		882817	1					
ANR	882828	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1495:1:46555:46583	882817	2	True				
ANR	882829	CallExpression	r_debug_map_sync ( core -> dbg )		882817	0					
ANR	882830	Callee	r_debug_map_sync		882817	0					
ANR	882831	Identifier	r_debug_map_sync		882817	0					
ANR	882832	ArgumentList	core -> dbg		882817	1					
ANR	882833	Argument	core -> dbg		882817	0					
ANR	882834	PtrMemberAccess	core -> dbg		882817	0					
ANR	882835	Identifier	core		882817	0					
ANR	882836	Identifier	dbg		882817	1					
ANR	882837	IdentifierDeclStatement	RList * list = r_debug_modules_list ( core -> dbg ) ;	1496:1:46586:46632	882817	3	True				
ANR	882838	IdentifierDecl	* list = r_debug_modules_list ( core -> dbg )		882817	0					
ANR	882839	IdentifierDeclType	RList *		882817	0					
ANR	882840	Identifier	list		882817	1					
ANR	882841	AssignmentExpression	* list = r_debug_modules_list ( core -> dbg )		882817	2		=			
ANR	882842	Identifier	list		882817	0					
ANR	882843	CallExpression	r_debug_modules_list ( core -> dbg )		882817	1					
ANR	882844	Callee	r_debug_modules_list		882817	0					
ANR	882845	Identifier	r_debug_modules_list		882817	0					
ANR	882846	ArgumentList	core -> dbg		882817	1					
ANR	882847	Argument	core -> dbg		882817	0					
ANR	882848	PtrMemberAccess	core -> dbg		882817	0					
ANR	882849	Identifier	core		882817	0					
ANR	882850	Identifier	dbg		882817	1					
ANR	882851	Statement	r_list_foreach	1497:1:46635:46648	882817	4	True				
ANR	882852	Statement	(	1497:16:46650:46650	882817	5	True				
ANR	882853	Statement	list	1497:17:46651:46654	882817	6	True				
ANR	882854	Statement	","	1497:21:46655:46655	882817	7	True				
ANR	882855	Statement	iter	1497:23:46657:46660	882817	8	True				
ANR	882856	Statement	","	1497:27:46661:46661	882817	9	True				
ANR	882857	Statement	map	1497:29:46663:46665	882817	10	True				
ANR	882858	Statement	)	1497:32:46666:46666	882817	11	True				
ANR	882859	CompoundStatement		7:34:151:151	882817	12					
ANR	882860	IfStatement	if ( addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end ) )		882817	0					
ANR	882861	Condition	addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end )	1498:6:46676:46738	882817	0	True				
ANR	882862	AndExpression	addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end )		882817	0		&&			
ANR	882863	EqualityExpression	addr != UT64_MAX		882817	0		!=			
ANR	882864	Identifier	addr		882817	0					
ANR	882865	Identifier	UT64_MAX		882817	1					
ANR	882866	AndExpression	addr >= map -> addr && addr < map -> addr_end		882817	1		&&			
ANR	882867	RelationalExpression	addr >= map -> addr		882817	0		>=			
ANR	882868	Identifier	addr		882817	0					
ANR	882869	PtrMemberAccess	map -> addr		882817	1					
ANR	882870	Identifier	map		882817	0					
ANR	882871	Identifier	addr		882817	1					
ANR	882872	RelationalExpression	addr < map -> addr_end		882817	1		<			
ANR	882873	Identifier	addr		882817	0					
ANR	882874	PtrMemberAccess	map -> addr_end		882817	1					
ANR	882875	Identifier	map		882817	0					
ANR	882876	Identifier	addr_end		882817	1					
ANR	882877	CompoundStatement		8:71:224:224	882817	1					
ANR	882878	ReturnStatement	return map ;	1499:3:46746:46756	882817	0	True				
ANR	882879	Identifier	map		882817	0					
ANR	882880	Statement	r_list_foreach	1502:1:46766:46779	882817	13	True				
ANR	882881	Statement	(	1502:16:46781:46781	882817	14	True				
ANR	882882	Statement	core	1502:17:46782:46785	882817	15	True				
ANR	882883	Statement	->	1502:21:46786:46787	882817	16	True				
ANR	882884	Statement	dbg	1502:23:46788:46790	882817	17	True				
ANR	882885	Statement	->	1502:26:46791:46792	882817	18	True				
ANR	882886	Statement	maps	1502:28:46793:46796	882817	19	True				
ANR	882887	Statement	","	1502:32:46797:46797	882817	20	True				
ANR	882888	Statement	iter	1502:34:46799:46802	882817	21	True				
ANR	882889	Statement	","	1502:38:46803:46803	882817	22	True				
ANR	882890	Statement	map	1502:40:46805:46807	882817	23	True				
ANR	882891	Statement	)	1502:43:46808:46808	882817	24	True				
ANR	882892	CompoundStatement		12:45:293:293	882817	25					
ANR	882893	IfStatement	if ( addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end ) )		882817	0					
ANR	882894	Condition	addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end )	1503:6:46818:46880	882817	0	True				
ANR	882895	AndExpression	addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end )		882817	0		&&			
ANR	882896	EqualityExpression	addr != UT64_MAX		882817	0		!=			
ANR	882897	Identifier	addr		882817	0					
ANR	882898	Identifier	UT64_MAX		882817	1					
ANR	882899	AndExpression	addr >= map -> addr && addr < map -> addr_end		882817	1		&&			
ANR	882900	RelationalExpression	addr >= map -> addr		882817	0		>=			
ANR	882901	Identifier	addr		882817	0					
ANR	882902	PtrMemberAccess	map -> addr		882817	1					
ANR	882903	Identifier	map		882817	0					
ANR	882904	Identifier	addr		882817	1					
ANR	882905	RelationalExpression	addr < map -> addr_end		882817	1		<			
ANR	882906	Identifier	addr		882817	0					
ANR	882907	PtrMemberAccess	map -> addr_end		882817	1					
ANR	882908	Identifier	map		882817	0					
ANR	882909	Identifier	addr_end		882817	1					
ANR	882910	CompoundStatement		13:71:366:366	882817	1					
ANR	882911	ReturnStatement	return map ;	1504:3:46888:46898	882817	0	True				
ANR	882912	Identifier	map		882817	0					
ANR	882913	ReturnStatement	return NULL ;	1507:1:46908:46919	882817	26	True				
ANR	882914	Identifier	NULL		882817	0					
ANR	882915	ReturnType	static RDebugMap *		882817	1					
ANR	882916	Identifier	get_closest_map		882817	2					
ANR	882917	ParameterList	"RCore * core , ut64 addr"		882817	3					
ANR	882918	Parameter	RCore * core	1491:34:46492:46502	882817	0	True				
ANR	882919	ParameterType	RCore *		882817	0					
ANR	882920	Identifier	core		882817	1					
ANR	882921	Parameter	ut64 addr	1491:47:46505:46513	882817	1	True				
ANR	882922	ParameterType	ut64		882817	0					
ANR	882923	Identifier	addr		882817	1					
ANR	882924	CFGEntryNode	ENTRY		882817		True				
ANR	882925	CFGExitNode	EXIT		882817		True				
ANR	882926	Symbol	map -> addr		882817						
ANR	882927	Symbol	NULL		882817						
ANR	882928	Symbol	r_debug_modules_list		882817						
ANR	882929	Symbol	* map		882817						
ANR	882930	Symbol	* core		882817						
ANR	882931	Symbol	iter		882817						
ANR	882932	Symbol	list		882817						
ANR	882933	Symbol	core		882817						
ANR	882934	Symbol	map -> addr_end		882817						
ANR	882935	Symbol	addr		882817						
ANR	882936	Symbol	UT64_MAX		882817						
ANR	882937	Symbol	map		882817						
ANR	882938	Symbol	core -> dbg		882817						
ANR	882939	Function	r_debug_heap	1510:0:46924:47734							
ANR	882940	FunctionDef	"r_debug_heap (RCore * core , const char * input)"		882939	0					
ANR	882941	CompoundStatement		1510:56:46980:47734	882939	0					
ANR	882942	IdentifierDeclStatement	"const char * m = r_config_get ( core -> config , ""dbg.malloc"" ) ;"	1511:1:46983:47040	882939	0	True				
ANR	882943	IdentifierDecl	"* m = r_config_get ( core -> config , ""dbg.malloc"" )"		882939	0					
ANR	882944	IdentifierDeclType	const char *		882939	0					
ANR	882945	Identifier	m		882939	1					
ANR	882946	AssignmentExpression	"* m = r_config_get ( core -> config , ""dbg.malloc"" )"		882939	2		=			
ANR	882947	Identifier	m		882939	0					
ANR	882948	CallExpression	"r_config_get ( core -> config , ""dbg.malloc"" )"		882939	1					
ANR	882949	Callee	r_config_get		882939	0					
ANR	882950	Identifier	r_config_get		882939	0					
ANR	882951	ArgumentList	core -> config		882939	1					
ANR	882952	Argument	core -> config		882939	0					
ANR	882953	PtrMemberAccess	core -> config		882939	0					
ANR	882954	Identifier	core		882939	0					
ANR	882955	Identifier	config		882939	1					
ANR	882956	Argument	"""dbg.malloc"""		882939	1					
ANR	882957	PrimaryExpression	"""dbg.malloc"""		882939	0					
ANR	882958	IfStatement	"if ( m && ! strcmp ( ""glibc"" , m ) )"		882939	1					
ANR	882959	Condition	"m && ! strcmp ( ""glibc"" , m )"	1512:5:47047:47071	882939	0	True				
ANR	882960	AndExpression	"m && ! strcmp ( ""glibc"" , m )"		882939	0		&&			
ANR	882961	Identifier	m		882939	0					
ANR	882962	UnaryOperationExpression	"! strcmp ( ""glibc"" , m )"		882939	1					
ANR	882963	UnaryOperator	!		882939	0					
ANR	882964	CallExpression	"strcmp ( ""glibc"" , m )"		882939	1					
ANR	882965	Callee	strcmp		882939	0					
ANR	882966	Identifier	strcmp		882939	0					
ANR	882967	ArgumentList	"""glibc"""		882939	1					
ANR	882968	Argument	"""glibc"""		882939	0					
ANR	882969	PrimaryExpression	"""glibc"""		882939	0					
ANR	882970	Argument	m		882939	1					
ANR	882971	Identifier	m		882939	0					
ANR	882972	CompoundStatement		3:32:93:93	882939	1					
ANR	882973	IfStatement	if ( core -> assembler -> bits == 64 )		882939	0					
ANR	882974	Condition	core -> assembler -> bits == 64	1514:6:47147:47173	882939	0	True				
ANR	882975	EqualityExpression	core -> assembler -> bits == 64		882939	0		==			
ANR	882976	PtrMemberAccess	core -> assembler -> bits		882939	0					
ANR	882977	PtrMemberAccess	core -> assembler		882939	0					
ANR	882978	Identifier	core		882939	0					
ANR	882979	Identifier	assembler		882939	1					
ANR	882980	Identifier	bits		882939	1					
ANR	882981	PrimaryExpression	64		882939	1					
ANR	882982	CompoundStatement		5:35:195:195	882939	1					
ANR	882983	ExpressionStatement	"cmd_dbg_map_heap_glibc_64 ( core , input + 1 )"	1515:3:47181:47224	882939	0	True				
ANR	882984	CallExpression	"cmd_dbg_map_heap_glibc_64 ( core , input + 1 )"		882939	0					
ANR	882985	Callee	cmd_dbg_map_heap_glibc_64		882939	0					
ANR	882986	Identifier	cmd_dbg_map_heap_glibc_64		882939	0					
ANR	882987	ArgumentList	core		882939	1					
ANR	882988	Argument	core		882939	0					
ANR	882989	Identifier	core		882939	0					
ANR	882990	Argument	input + 1		882939	1					
ANR	882991	AdditiveExpression	input + 1		882939	0		+			
ANR	882992	Identifier	input		882939	0					
ANR	882993	PrimaryExpression	1		882939	1					
ANR	882994	ElseStatement	else		882939	0					
ANR	882995	CompoundStatement		7:9:254:254	882939	0					
ANR	882996	ExpressionStatement	"cmd_dbg_map_heap_glibc_32 ( core , input + 1 )"	1517:3:47240:47283	882939	0	True				
ANR	882997	CallExpression	"cmd_dbg_map_heap_glibc_32 ( core , input + 1 )"		882939	0					
ANR	882998	Callee	cmd_dbg_map_heap_glibc_32		882939	0					
ANR	882999	Identifier	cmd_dbg_map_heap_glibc_32		882939	0					
ANR	883000	ArgumentList	core		882939	1					
ANR	883001	Argument	core		882939	0					
ANR	883002	Identifier	core		882939	0					
ANR	883003	Argument	input + 1		882939	1					
ANR	883004	AdditiveExpression	input + 1		882939	0		+			
ANR	883005	Identifier	input		882939	0					
ANR	883006	PrimaryExpression	1		882939	1					
ANR	883007	ElseStatement	else		882939	0					
ANR	883008	IfStatement	"if ( m && ! strcmp ( ""jemalloc"" , m ) )"		882939	0					
ANR	883009	Condition	"m && ! strcmp ( ""jemalloc"" , m )"	1523:12:47387:47414	882939	0	True				
ANR	883010	AndExpression	"m && ! strcmp ( ""jemalloc"" , m )"		882939	0		&&			
ANR	883011	Identifier	m		882939	0					
ANR	883012	UnaryOperationExpression	"! strcmp ( ""jemalloc"" , m )"		882939	1					
ANR	883013	UnaryOperator	!		882939	0					
ANR	883014	CallExpression	"strcmp ( ""jemalloc"" , m )"		882939	1					
ANR	883015	Callee	strcmp		882939	0					
ANR	883016	Identifier	strcmp		882939	0					
ANR	883017	ArgumentList	"""jemalloc"""		882939	1					
ANR	883018	Argument	"""jemalloc"""		882939	0					
ANR	883019	PrimaryExpression	"""jemalloc"""		882939	0					
ANR	883020	Argument	m		882939	1					
ANR	883021	Identifier	m		882939	0					
ANR	883022	CompoundStatement		14:42:436:436	882939	1					
ANR	883023	IfStatement	if ( core -> assembler -> bits == 64 )		882939	0					
ANR	883024	Condition	core -> assembler -> bits == 64	1524:6:47425:47451	882939	0	True				
ANR	883025	EqualityExpression	core -> assembler -> bits == 64		882939	0		==			
ANR	883026	PtrMemberAccess	core -> assembler -> bits		882939	0					
ANR	883027	PtrMemberAccess	core -> assembler		882939	0					
ANR	883028	Identifier	core		882939	0					
ANR	883029	Identifier	assembler		882939	1					
ANR	883030	Identifier	bits		882939	1					
ANR	883031	PrimaryExpression	64		882939	1					
ANR	883032	CompoundStatement		15:35:473:473	882939	1					
ANR	883033	ExpressionStatement	"cmd_dbg_map_jemalloc_64 ( core , input + 1 )"	1525:3:47459:47500	882939	0	True				
ANR	883034	CallExpression	"cmd_dbg_map_jemalloc_64 ( core , input + 1 )"		882939	0					
ANR	883035	Callee	cmd_dbg_map_jemalloc_64		882939	0					
ANR	883036	Identifier	cmd_dbg_map_jemalloc_64		882939	0					
ANR	883037	ArgumentList	core		882939	1					
ANR	883038	Argument	core		882939	0					
ANR	883039	Identifier	core		882939	0					
ANR	883040	Argument	input + 1		882939	1					
ANR	883041	AdditiveExpression	input + 1		882939	0		+			
ANR	883042	Identifier	input		882939	0					
ANR	883043	PrimaryExpression	1		882939	1					
ANR	883044	ElseStatement	else		882939	0					
ANR	883045	CompoundStatement		17:9:530:530	882939	0					
ANR	883046	ExpressionStatement	"cmd_dbg_map_jemalloc_32 ( core , input + 1 )"	1527:3:47516:47557	882939	0	True				
ANR	883047	CallExpression	"cmd_dbg_map_jemalloc_32 ( core , input + 1 )"		882939	0					
ANR	883048	Callee	cmd_dbg_map_jemalloc_32		882939	0					
ANR	883049	Identifier	cmd_dbg_map_jemalloc_32		882939	0					
ANR	883050	ArgumentList	core		882939	1					
ANR	883051	Argument	core		882939	0					
ANR	883052	Identifier	core		882939	0					
ANR	883053	Argument	input + 1		882939	1					
ANR	883054	AdditiveExpression	input + 1		882939	0		+			
ANR	883055	Identifier	input		882939	0					
ANR	883056	PrimaryExpression	1		882939	1					
ANR	883057	ElseStatement	else		882939	0					
ANR	883058	CompoundStatement		21:8:597:597	882939	0					
ANR	883059	ExpressionStatement	"cmd_debug_map_heap_win ( core , input + 1 )"	1532:2:47598:47638	882939	0	True				
ANR	883060	CallExpression	"cmd_debug_map_heap_win ( core , input + 1 )"		882939	0					
ANR	883061	Callee	cmd_debug_map_heap_win		882939	0					
ANR	883062	Identifier	cmd_debug_map_heap_win		882939	0					
ANR	883063	ArgumentList	core		882939	1					
ANR	883064	Argument	core		882939	0					
ANR	883065	Identifier	core		882939	0					
ANR	883066	Argument	input + 1		882939	1					
ANR	883067	AdditiveExpression	input + 1		882939	0		+			
ANR	883068	Identifier	input		882939	0					
ANR	883069	PrimaryExpression	1		882939	1					
ANR	883070	ReturnStatement	return true ;	1538:1:47721:47732	882939	2	True				
ANR	883071	Identifier	true		882939	0					
ANR	883072	ReturnType	static int		882939	1					
ANR	883073	Identifier	r_debug_heap		882939	2					
ANR	883074	ParameterList	"RCore * core , const char * input"		882939	3					
ANR	883075	Parameter	RCore * core	1510:24:46948:46958	882939	0	True				
ANR	883076	ParameterType	RCore *		882939	0					
ANR	883077	Identifier	core		882939	1					
ANR	883078	Parameter	const char * input	1510:37:46961:46977	882939	1	True				
ANR	883079	ParameterType	const char *		882939	0					
ANR	883080	Identifier	input		882939	1					
ANR	883081	CFGEntryNode	ENTRY		882939		True				
ANR	883082	CFGExitNode	EXIT		882939		True				
ANR	883083	Symbol	core -> config		882939						
ANR	883084	Symbol	strcmp		882939						
ANR	883085	Symbol	* core -> assembler		882939						
ANR	883086	Symbol	core		882939						
ANR	883087	Symbol	input		882939						
ANR	883088	Symbol	r_config_get		882939						
ANR	883089	Symbol	* core		882939						
ANR	883090	Symbol	core -> assembler -> bits		882939						
ANR	883091	Symbol	true		882939						
ANR	883092	Symbol	core -> assembler		882939						
ANR	883093	Symbol	m		882939						
ANR	883094	Symbol	* * core		882939						
ANR	883095	Function	cmd_debug_map	1541:0:47737:57334							
ANR	883096	FunctionDef	"cmd_debug_map (RCore * core , const char * input)"		883095	0					
ANR	883097	CompoundStatement		1541:57:47794:57334	883095	0					
ANR	883098	IdentifierDeclStatement	RListIter * iter ;	1542:1:47797:47812	883095	0	True				
ANR	883099	IdentifierDecl	* iter		883095	0					
ANR	883100	IdentifierDeclType	RListIter *		883095	0					
ANR	883101	Identifier	iter		883095	1					
ANR	883102	IdentifierDeclStatement	RDebugMap * map ;	1543:1:47815:47829	883095	1	True				
ANR	883103	IdentifierDecl	* map		883095	0					
ANR	883104	IdentifierDeclType	RDebugMap *		883095	0					
ANR	883105	Identifier	map		883095	1					
ANR	883106	IdentifierDeclStatement	ut64 addr = core -> offset ;	1544:1:47832:47856	883095	2	True				
ANR	883107	IdentifierDecl	addr = core -> offset		883095	0					
ANR	883108	IdentifierDeclType	ut64		883095	0					
ANR	883109	Identifier	addr		883095	1					
ANR	883110	AssignmentExpression	addr = core -> offset		883095	2		=			
ANR	883111	Identifier	addr		883095	0					
ANR	883112	PtrMemberAccess	core -> offset		883095	1					
ANR	883113	Identifier	core		883095	0					
ANR	883114	Identifier	offset		883095	1					
ANR	883115	SwitchStatement	switch ( input [ 0 ] )		883095	3					
ANR	883116	Condition	input [ 0 ]	1546:9:47868:47875	883095	0	True				
ANR	883117	ArrayIndexing	input [ 0 ]		883095	0					
ANR	883118	Identifier	input		883095	0					
ANR	883119	PrimaryExpression	0		883095	1					
ANR	883120	CompoundStatement		6:19:83:83	883095	1					
ANR	883121	Label	case 's' :	1547:1:47881:47889	883095	0	True				
ANR	883122	ExpressionStatement	"cmd_debug_map_snapshot ( core , input + 1 )"	1548:2:47902:47942	883095	1	True				
ANR	883123	CallExpression	"cmd_debug_map_snapshot ( core , input + 1 )"		883095	0					
ANR	883124	Callee	cmd_debug_map_snapshot		883095	0					
ANR	883125	Identifier	cmd_debug_map_snapshot		883095	0					
ANR	883126	ArgumentList	core		883095	1					
ANR	883127	Argument	core		883095	0					
ANR	883128	Identifier	core		883095	0					
ANR	883129	Argument	input + 1		883095	1					
ANR	883130	AdditiveExpression	input + 1		883095	0		+			
ANR	883131	Identifier	input		883095	0					
ANR	883132	PrimaryExpression	1		883095	1					
ANR	883133	BreakStatement	break ;	1549:2:47946:47951	883095	2	True				
ANR	883134	Label	case '.' :	1550:1:47954:47962	883095	3	True				
ANR	883135	ExpressionStatement	"r_debug_map_list ( core -> dbg , addr , input )"	1551:2:47975:48016	883095	4	True				
ANR	883136	CallExpression	"r_debug_map_list ( core -> dbg , addr , input )"		883095	0					
ANR	883137	Callee	r_debug_map_list		883095	0					
ANR	883138	Identifier	r_debug_map_list		883095	0					
ANR	883139	ArgumentList	core -> dbg		883095	1					
ANR	883140	Argument	core -> dbg		883095	0					
ANR	883141	PtrMemberAccess	core -> dbg		883095	0					
ANR	883142	Identifier	core		883095	0					
ANR	883143	Identifier	dbg		883095	1					
ANR	883144	Argument	addr		883095	1					
ANR	883145	Identifier	addr		883095	0					
ANR	883146	Argument	input		883095	2					
ANR	883147	Identifier	input		883095	0					
ANR	883148	BreakStatement	break ;	1552:2:48020:48025	883095	5	True				
ANR	883149	Label	case 'm' :	1553:1:48028:48036	883095	6	True				
ANR	883150	IfStatement	"if ( ! strcmp ( input + 1 , "".*"" ) )"		883095	7					
ANR	883151	Condition	"! strcmp ( input + 1 , "".*"" )"	1554:6:48053:48077	883095	0	True				
ANR	883152	UnaryOperationExpression	"! strcmp ( input + 1 , "".*"" )"		883095	0					
ANR	883153	UnaryOperator	!		883095	0					
ANR	883154	CallExpression	"strcmp ( input + 1 , "".*"" )"		883095	1					
ANR	883155	Callee	strcmp		883095	0					
ANR	883156	Identifier	strcmp		883095	0					
ANR	883157	ArgumentList	input + 1		883095	1					
ANR	883158	Argument	input + 1		883095	0					
ANR	883159	AdditiveExpression	input + 1		883095	0		+			
ANR	883160	Identifier	input		883095	0					
ANR	883161	PrimaryExpression	1		883095	1					
ANR	883162	Argument	""".*"""		883095	1					
ANR	883163	PrimaryExpression	""".*"""		883095	0					
ANR	883164	CompoundStatement		14:33:285:285	883095	1					
ANR	883165	ExpressionStatement	"cmd_debug_modules ( core , ':' )"	1555:3:48085:48114	883095	0	True				
ANR	883166	CallExpression	"cmd_debug_modules ( core , ':' )"		883095	0					
ANR	883167	Callee	cmd_debug_modules		883095	0					
ANR	883168	Identifier	cmd_debug_modules		883095	0					
ANR	883169	ArgumentList	core		883095	1					
ANR	883170	Argument	core		883095	0					
ANR	883171	Identifier	core		883095	0					
ANR	883172	Argument	':'		883095	1					
ANR	883173	PrimaryExpression	':'		883095	0					
ANR	883174	ElseStatement	else		883095	0					
ANR	883175	ExpressionStatement	"cmd_debug_modules ( core , input [ 1 ] )"	1556:9:48125:48159	883095	0	True				
ANR	883176	CallExpression	"cmd_debug_modules ( core , input [ 1 ] )"		883095	0					
ANR	883177	Callee	cmd_debug_modules		883095	0					
ANR	883178	Identifier	cmd_debug_modules		883095	0					
ANR	883179	ArgumentList	core		883095	1					
ANR	883180	Argument	core		883095	0					
ANR	883181	Identifier	core		883095	0					
ANR	883182	Argument	input [ 1 ]		883095	1					
ANR	883183	ArrayIndexing	input [ 1 ]		883095	0					
ANR	883184	Identifier	input		883095	0					
ANR	883185	PrimaryExpression	1		883095	1					
ANR	883186	BreakStatement	break ;	1557:2:48163:48168	883095	8	True				
ANR	883187	Label	case '?' :	1558:1:48171:48179	883095	9	True				
ANR	883188	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dm )"	1559:2:48192:48227	883095	10	True				
ANR	883189	CallExpression	"r_core_cmd_help ( core , help_msg_dm )"		883095	0					
ANR	883190	Callee	r_core_cmd_help		883095	0					
ANR	883191	Identifier	r_core_cmd_help		883095	0					
ANR	883192	ArgumentList	core		883095	1					
ANR	883193	Argument	core		883095	0					
ANR	883194	Identifier	core		883095	0					
ANR	883195	Argument	help_msg_dm		883095	1					
ANR	883196	Identifier	help_msg_dm		883095	0					
ANR	883197	BreakStatement	break ;	1560:2:48231:48236	883095	11	True				
ANR	883198	Label	case 'p' :	1561:1:48239:48247	883095	12	True				
ANR	883199	IfStatement	if ( input [ 1 ] == '?' )		883095	13					
ANR	883200	Condition	input [ 1 ] == '?'	1562:6:48264:48278	883095	0	True				
ANR	883201	EqualityExpression	input [ 1 ] == '?'		883095	0		==			
ANR	883202	ArrayIndexing	input [ 1 ]		883095	0					
ANR	883203	Identifier	input		883095	0					
ANR	883204	PrimaryExpression	1		883095	1					
ANR	883205	PrimaryExpression	'?'		883095	1					
ANR	883206	CompoundStatement		22:23:486:486	883095	1					
ANR	883207	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dmp )"	1563:3:48286:48322	883095	0	True				
ANR	883208	CallExpression	"r_core_cmd_help ( core , help_msg_dmp )"		883095	0					
ANR	883209	Callee	r_core_cmd_help		883095	0					
ANR	883210	Identifier	r_core_cmd_help		883095	0					
ANR	883211	ArgumentList	core		883095	1					
ANR	883212	Argument	core		883095	0					
ANR	883213	Identifier	core		883095	0					
ANR	883214	Argument	help_msg_dmp		883095	1					
ANR	883215	Identifier	help_msg_dmp		883095	0					
ANR	883216	ElseStatement	else		883095	0					
ANR	883217	IfStatement	if ( input [ 1 ] == ' ' )		883095	0					
ANR	883218	Condition	input [ 1 ] == ' '	1564:13:48337:48351	883095	0	True				
ANR	883219	EqualityExpression	input [ 1 ] == ' '		883095	0		==			
ANR	883220	ArrayIndexing	input [ 1 ]		883095	0					
ANR	883221	Identifier	input		883095	0					
ANR	883222	PrimaryExpression	1		883095	1					
ANR	883223	PrimaryExpression	' '		883095	1					
ANR	883224	CompoundStatement		27:3:594:613	883095	1					
ANR	883225	IdentifierDeclStatement	int perms ;	1565:3:48359:48368	883095	0	True				
ANR	883226	IdentifierDecl	perms		883095	0					
ANR	883227	IdentifierDeclType	int		883095	0					
ANR	883228	Identifier	perms		883095	1					
ANR	883229	IdentifierDeclStatement	"char * p , * q ;"	1566:3:48373:48384	883095	1	True				
ANR	883230	IdentifierDecl	* p		883095	0					
ANR	883231	IdentifierDeclType	char *		883095	0					
ANR	883232	Identifier	p		883095	1					
ANR	883233	IdentifierDecl	* q		883095	1					
ANR	883234	IdentifierDeclType	char *		883095	0					
ANR	883235	Identifier	q		883095	1					
ANR	883236	IdentifierDeclStatement	"ut64 size = 0 , addr ;"	1567:3:48389:48408	883095	2	True				
ANR	883237	IdentifierDecl	size = 0		883095	0					
ANR	883238	IdentifierDeclType	ut64		883095	0					
ANR	883239	Identifier	size		883095	1					
ANR	883240	AssignmentExpression	size = 0		883095	2		=			
ANR	883241	Identifier	size		883095	0					
ANR	883242	PrimaryExpression	0		883095	1					
ANR	883243	IdentifierDecl	addr		883095	1					
ANR	883244	IdentifierDeclType	ut64		883095	0					
ANR	883245	Identifier	addr		883095	1					
ANR	883246	ExpressionStatement	"p = strchr ( input + 2 , ' ' )"	1568:3:48413:48440	883095	3	True				
ANR	883247	AssignmentExpression	"p = strchr ( input + 2 , ' ' )"		883095	0		=			
ANR	883248	Identifier	p		883095	0					
ANR	883249	CallExpression	"strchr ( input + 2 , ' ' )"		883095	1					
ANR	883250	Callee	strchr		883095	0					
ANR	883251	Identifier	strchr		883095	0					
ANR	883252	ArgumentList	input + 2		883095	1					
ANR	883253	Argument	input + 2		883095	0					
ANR	883254	AdditiveExpression	input + 2		883095	0		+			
ANR	883255	Identifier	input		883095	0					
ANR	883256	PrimaryExpression	2		883095	1					
ANR	883257	Argument	' '		883095	1					
ANR	883258	PrimaryExpression	' '		883095	0					
ANR	883259	IfStatement	if ( p )		883095	4					
ANR	883260	Condition	p	1569:7:48449:48449	883095	0	True				
ANR	883261	Identifier	p		883095	0					
ANR	883262	CompoundStatement		29:10:657:657	883095	1					
ANR	883263	ExpressionStatement	* p ++ = 0	1570:4:48458:48466	883095	0	True				
ANR	883264	AssignmentExpression	* p ++ = 0		883095	0		=			
ANR	883265	UnaryOperationExpression	* p ++		883095	0					
ANR	883266	UnaryOperator	*		883095	0					
ANR	883267	PostIncDecOperationExpression	p ++		883095	1					
ANR	883268	Identifier	p		883095	0					
ANR	883269	IncDec	++		883095	1					
ANR	883270	PrimaryExpression	0		883095	1					
ANR	883271	ExpressionStatement	"q = strchr ( p , ' ' )"	1571:4:48472:48491	883095	1	True				
ANR	883272	AssignmentExpression	"q = strchr ( p , ' ' )"		883095	0		=			
ANR	883273	Identifier	q		883095	0					
ANR	883274	CallExpression	"strchr ( p , ' ' )"		883095	1					
ANR	883275	Callee	strchr		883095	0					
ANR	883276	Identifier	strchr		883095	0					
ANR	883277	ArgumentList	p		883095	1					
ANR	883278	Argument	p		883095	0					
ANR	883279	Identifier	p		883095	0					
ANR	883280	Argument	' '		883095	1					
ANR	883281	PrimaryExpression	' '		883095	0					
ANR	883282	IfStatement	if ( q )		883095	2					
ANR	883283	Condition	q	1572:8:48501:48501	883095	0	True				
ANR	883284	Identifier	q		883095	0					
ANR	883285	CompoundStatement		32:11:709:709	883095	1					
ANR	883286	ExpressionStatement	* q ++ = 0	1573:5:48511:48519	883095	0	True				
ANR	883287	AssignmentExpression	* q ++ = 0		883095	0		=			
ANR	883288	UnaryOperationExpression	* q ++		883095	0					
ANR	883289	UnaryOperator	*		883095	0					
ANR	883290	PostIncDecOperationExpression	q ++		883095	1					
ANR	883291	Identifier	q		883095	0					
ANR	883292	IncDec	++		883095	1					
ANR	883293	PrimaryExpression	0		883095	1					
ANR	883294	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	1574:5:48526:48566	883095	1	True				
ANR	883295	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		883095	0		=			
ANR	883296	Identifier	addr		883095	0					
ANR	883297	CallExpression	"r_num_math ( core -> num , input + 2 )"		883095	1					
ANR	883298	Callee	r_num_math		883095	0					
ANR	883299	Identifier	r_num_math		883095	0					
ANR	883300	ArgumentList	core -> num		883095	1					
ANR	883301	Argument	core -> num		883095	0					
ANR	883302	PtrMemberAccess	core -> num		883095	0					
ANR	883303	Identifier	core		883095	0					
ANR	883304	Identifier	num		883095	1					
ANR	883305	Argument	input + 2		883095	1					
ANR	883306	AdditiveExpression	input + 2		883095	0		+			
ANR	883307	Identifier	input		883095	0					
ANR	883308	PrimaryExpression	2		883095	1					
ANR	883309	ExpressionStatement	"size = r_num_math ( core -> num , p )"	1575:5:48573:48605	883095	2	True				
ANR	883310	AssignmentExpression	"size = r_num_math ( core -> num , p )"		883095	0		=			
ANR	883311	Identifier	size		883095	0					
ANR	883312	CallExpression	"r_num_math ( core -> num , p )"		883095	1					
ANR	883313	Callee	r_num_math		883095	0					
ANR	883314	Identifier	r_num_math		883095	0					
ANR	883315	ArgumentList	core -> num		883095	1					
ANR	883316	Argument	core -> num		883095	0					
ANR	883317	PtrMemberAccess	core -> num		883095	0					
ANR	883318	Identifier	core		883095	0					
ANR	883319	Identifier	num		883095	1					
ANR	883320	Argument	p		883095	1					
ANR	883321	Identifier	p		883095	0					
ANR	883322	ExpressionStatement	perms = r_str_rwx ( q )	1576:5:48612:48633	883095	3	True				
ANR	883323	AssignmentExpression	perms = r_str_rwx ( q )		883095	0		=			
ANR	883324	Identifier	perms		883095	0					
ANR	883325	CallExpression	r_str_rwx ( q )		883095	1					
ANR	883326	Callee	r_str_rwx		883095	0					
ANR	883327	Identifier	r_str_rwx		883095	0					
ANR	883328	ArgumentList	q		883095	1					
ANR	883329	Argument	q		883095	0					
ANR	883330	Identifier	q		883095	0					
ANR	883331	ExpressionStatement	"r_debug_map_protect ( core -> dbg , addr , size , perms )"	1579:5:48760:48810	883095	4	True				
ANR	883332	CallExpression	"r_debug_map_protect ( core -> dbg , addr , size , perms )"		883095	0					
ANR	883333	Callee	r_debug_map_protect		883095	0					
ANR	883334	Identifier	r_debug_map_protect		883095	0					
ANR	883335	ArgumentList	core -> dbg		883095	1					
ANR	883336	Argument	core -> dbg		883095	0					
ANR	883337	PtrMemberAccess	core -> dbg		883095	0					
ANR	883338	Identifier	core		883095	0					
ANR	883339	Identifier	dbg		883095	1					
ANR	883340	Argument	addr		883095	1					
ANR	883341	Identifier	addr		883095	0					
ANR	883342	Argument	size		883095	2					
ANR	883343	Identifier	size		883095	0					
ANR	883344	Argument	perms		883095	3					
ANR	883345	Identifier	perms		883095	0					
ANR	883346	ElseStatement	else		883095	0					
ANR	883347	ExpressionStatement	"eprintf ( ""See dmp?\\n"" )"	1580:11:48823:48845	883095	0	True				
ANR	883348	CallExpression	"eprintf ( ""See dmp?\\n"" )"		883095	0					
ANR	883349	Callee	eprintf		883095	0					
ANR	883350	Identifier	eprintf		883095	0					
ANR	883351	ArgumentList	"""See dmp?\\n"""		883095	1					
ANR	883352	Argument	"""See dmp?\\n"""		883095	0					
ANR	883353	PrimaryExpression	"""See dmp?\\n"""		883095	0					
ANR	883354	ElseStatement	else		883095	0					
ANR	883355	CompoundStatement		41:10:1062:1062	883095	0					
ANR	883356	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1582:4:48863:48891	883095	0	True				
ANR	883357	CallExpression	r_debug_map_sync ( core -> dbg )		883095	0					
ANR	883358	Callee	r_debug_map_sync		883095	0					
ANR	883359	Identifier	r_debug_map_sync		883095	0					
ANR	883360	ArgumentList	core -> dbg		883095	1					
ANR	883361	Argument	core -> dbg		883095	0					
ANR	883362	PtrMemberAccess	core -> dbg		883095	0					
ANR	883363	Identifier	core		883095	0					
ANR	883364	Identifier	dbg		883095	1					
ANR	883365	ExpressionStatement	addr = UT64_MAX	1583:4:48927:48942	883095	1	True				
ANR	883366	AssignmentExpression	addr = UT64_MAX		883095	0		=			
ANR	883367	Identifier	addr		883095	0					
ANR	883368	Identifier	UT64_MAX		883095	1					
ANR	883369	Statement	r_list_foreach	1584:4:48948:48961	883095	2	True				
ANR	883370	Statement	(	1584:19:48963:48963	883095	3	True				
ANR	883371	Statement	core	1584:20:48964:48967	883095	4	True				
ANR	883372	Statement	->	1584:24:48968:48969	883095	5	True				
ANR	883373	Statement	dbg	1584:26:48970:48972	883095	6	True				
ANR	883374	Statement	->	1584:29:48973:48974	883095	7	True				
ANR	883375	Statement	maps	1584:31:48975:48978	883095	8	True				
ANR	883376	Statement	","	1584:35:48979:48979	883095	9	True				
ANR	883377	Statement	iter	1584:37:48981:48984	883095	10	True				
ANR	883378	Statement	","	1584:41:48985:48985	883095	11	True				
ANR	883379	Statement	map	1584:43:48987:48989	883095	12	True				
ANR	883380	Statement	)	1584:46:48990:48990	883095	13	True				
ANR	883381	CompoundStatement		44:48:1197:1197	883095	14					
ANR	883382	IfStatement	if ( core -> offset >= map -> addr && core -> offset < map -> addr_end )		883095	0					
ANR	883383	Condition	core -> offset >= map -> addr && core -> offset < map -> addr_end	1585:9:49003:49060	883095	0	True				
ANR	883384	AndExpression	core -> offset >= map -> addr && core -> offset < map -> addr_end		883095	0		&&			
ANR	883385	RelationalExpression	core -> offset >= map -> addr		883095	0		>=			
ANR	883386	PtrMemberAccess	core -> offset		883095	0					
ANR	883387	Identifier	core		883095	0					
ANR	883388	Identifier	offset		883095	1					
ANR	883389	PtrMemberAccess	map -> addr		883095	1					
ANR	883390	Identifier	map		883095	0					
ANR	883391	Identifier	addr		883095	1					
ANR	883392	RelationalExpression	core -> offset < map -> addr_end		883095	1		<			
ANR	883393	PtrMemberAccess	core -> offset		883095	0					
ANR	883394	Identifier	core		883095	0					
ANR	883395	Identifier	offset		883095	1					
ANR	883396	PtrMemberAccess	map -> addr_end		883095	1					
ANR	883397	Identifier	map		883095	0					
ANR	883398	Identifier	addr_end		883095	1					
ANR	883399	CompoundStatement		45:69:1268:1268	883095	1					
ANR	883400	ExpressionStatement	addr = map -> addr	1586:6:49071:49087	883095	0	True				
ANR	883401	AssignmentExpression	addr = map -> addr		883095	0		=			
ANR	883402	Identifier	addr		883095	0					
ANR	883403	PtrMemberAccess	map -> addr		883095	1					
ANR	883404	Identifier	map		883095	0					
ANR	883405	Identifier	addr		883095	1					
ANR	883406	ExpressionStatement	size = map -> size	1587:6:49095:49111	883095	1	True				
ANR	883407	AssignmentExpression	size = map -> size		883095	0		=			
ANR	883408	Identifier	size		883095	0					
ANR	883409	PtrMemberAccess	map -> size		883095	1					
ANR	883410	Identifier	map		883095	0					
ANR	883411	Identifier	size		883095	1					
ANR	883412	BreakStatement	break ;	1588:6:49119:49124	883095	2	True				
ANR	883413	ExpressionStatement	perms = r_str_rwx ( input + 2 )	1591:4:49143:49172	883095	15	True				
ANR	883414	AssignmentExpression	perms = r_str_rwx ( input + 2 )		883095	0		=			
ANR	883415	Identifier	perms		883095	0					
ANR	883416	CallExpression	r_str_rwx ( input + 2 )		883095	1					
ANR	883417	Callee	r_str_rwx		883095	0					
ANR	883418	Identifier	r_str_rwx		883095	0					
ANR	883419	ArgumentList	input + 2		883095	1					
ANR	883420	Argument	input + 2		883095	0					
ANR	883421	AdditiveExpression	input + 2		883095	0		+			
ANR	883422	Identifier	input		883095	0					
ANR	883423	PrimaryExpression	2		883095	1					
ANR	883424	IfStatement	if ( addr != UT64_MAX && perms >= 0 )		883095	16					
ANR	883425	Condition	addr != UT64_MAX && perms >= 0	1592:8:49182:49211	883095	0	True				
ANR	883426	AndExpression	addr != UT64_MAX && perms >= 0		883095	0		&&			
ANR	883427	EqualityExpression	addr != UT64_MAX		883095	0		!=			
ANR	883428	Identifier	addr		883095	0					
ANR	883429	Identifier	UT64_MAX		883095	1					
ANR	883430	RelationalExpression	perms >= 0		883095	1		>=			
ANR	883431	Identifier	perms		883095	0					
ANR	883432	PrimaryExpression	0		883095	1					
ANR	883433	CompoundStatement		52:40:1419:1419	883095	1					
ANR	883434	ExpressionStatement	"r_debug_map_protect ( core -> dbg , addr , size , perms )"	1593:5:49221:49271	883095	0	True				
ANR	883435	CallExpression	"r_debug_map_protect ( core -> dbg , addr , size , perms )"		883095	0					
ANR	883436	Callee	r_debug_map_protect		883095	0					
ANR	883437	Identifier	r_debug_map_protect		883095	0					
ANR	883438	ArgumentList	core -> dbg		883095	1					
ANR	883439	Argument	core -> dbg		883095	0					
ANR	883440	PtrMemberAccess	core -> dbg		883095	0					
ANR	883441	Identifier	core		883095	0					
ANR	883442	Identifier	dbg		883095	1					
ANR	883443	Argument	addr		883095	1					
ANR	883444	Identifier	addr		883095	0					
ANR	883445	Argument	size		883095	2					
ANR	883446	Identifier	size		883095	0					
ANR	883447	Argument	perms		883095	3					
ANR	883448	Identifier	perms		883095	0					
ANR	883449	ElseStatement	else		883095	0					
ANR	883450	CompoundStatement		54:11:1489:1489	883095	0					
ANR	883451	ExpressionStatement	"eprintf ( ""See dmp?\\n"" )"	1595:5:49291:49313	883095	0	True				
ANR	883452	CallExpression	"eprintf ( ""See dmp?\\n"" )"		883095	0					
ANR	883453	Callee	eprintf		883095	0					
ANR	883454	Identifier	eprintf		883095	0					
ANR	883455	ArgumentList	"""See dmp?\\n"""		883095	1					
ANR	883456	Argument	"""See dmp?\\n"""		883095	0					
ANR	883457	PrimaryExpression	"""See dmp?\\n"""		883095	0					
ANR	883458	ElseStatement	else		883095	0					
ANR	883459	CompoundStatement		58:9:1540:1540	883095	0					
ANR	883460	ExpressionStatement	"eprintf ( ""See dmp?\\n"" )"	1599:3:49340:49362	883095	0	True				
ANR	883461	CallExpression	"eprintf ( ""See dmp?\\n"" )"		883095	0					
ANR	883462	Callee	eprintf		883095	0					
ANR	883463	Identifier	eprintf		883095	0					
ANR	883464	ArgumentList	"""See dmp?\\n"""		883095	1					
ANR	883465	Argument	"""See dmp?\\n"""		883095	0					
ANR	883466	PrimaryExpression	"""See dmp?\\n"""		883095	0					
ANR	883467	BreakStatement	break ;	1601:2:49370:49375	883095	14	True				
ANR	883468	Label	case 'd' :	1602:1:49378:49386	883095	15	True				
ANR	883469	SwitchStatement	switch ( input [ 1 ] )		883095	16					
ANR	883470	Condition	input [ 1 ]	1603:10:49407:49414	883095	0	True				
ANR	883471	ArrayIndexing	input [ 1 ]		883095	0					
ANR	883472	Identifier	input		883095	0					
ANR	883473	PrimaryExpression	1		883095	1					
ANR	883474	CompoundStatement		63:20:1622:1622	883095	1					
ANR	883475	Label	case 'a' :	1604:2:49421:49429	883095	0	True				
ANR	883476	ReturnStatement	"return dump_maps ( core , 0 , NULL ) ;"	1604:12:49431:49463	883095	1	True				
ANR	883477	CallExpression	"dump_maps ( core , 0 , NULL )"		883095	0					
ANR	883478	Callee	dump_maps		883095	0					
ANR	883479	Identifier	dump_maps		883095	0					
ANR	883480	ArgumentList	core		883095	1					
ANR	883481	Argument	core		883095	0					
ANR	883482	Identifier	core		883095	0					
ANR	883483	Argument	0		883095	1					
ANR	883484	PrimaryExpression	0		883095	0					
ANR	883485	Argument	NULL		883095	2					
ANR	883486	Identifier	NULL		883095	0					
ANR	883487	Label	case 'w' :	1605:2:49467:49475	883095	2	True				
ANR	883488	ReturnStatement	"return dump_maps ( core , R_PERM_RW , NULL ) ;"	1605:12:49477:49517	883095	3	True				
ANR	883489	CallExpression	"dump_maps ( core , R_PERM_RW , NULL )"		883095	0					
ANR	883490	Callee	dump_maps		883095	0					
ANR	883491	Identifier	dump_maps		883095	0					
ANR	883492	ArgumentList	core		883095	1					
ANR	883493	Argument	core		883095	0					
ANR	883494	Identifier	core		883095	0					
ANR	883495	Argument	R_PERM_RW		883095	1					
ANR	883496	Identifier	R_PERM_RW		883095	0					
ANR	883497	Argument	NULL		883095	2					
ANR	883498	Identifier	NULL		883095	0					
ANR	883499	Label	case ' ' :	1606:2:49521:49529	883095	4	True				
ANR	883500	ReturnStatement	"return dump_maps ( core , - 1 , input + 2 ) ;"	1606:12:49531:49569	883095	5	True				
ANR	883501	CallExpression	"dump_maps ( core , - 1 , input + 2 )"		883095	0					
ANR	883502	Callee	dump_maps		883095	0					
ANR	883503	Identifier	dump_maps		883095	0					
ANR	883504	ArgumentList	core		883095	1					
ANR	883505	Argument	core		883095	0					
ANR	883506	Identifier	core		883095	0					
ANR	883507	Argument	- 1		883095	1					
ANR	883508	UnaryOperationExpression	- 1		883095	0					
ANR	883509	UnaryOperator	-		883095	0					
ANR	883510	PrimaryExpression	1		883095	1					
ANR	883511	Argument	input + 2		883095	2					
ANR	883512	AdditiveExpression	input + 2		883095	0		+			
ANR	883513	Identifier	input		883095	0					
ANR	883514	PrimaryExpression	2		883095	1					
ANR	883515	Label	case 0 :	1607:2:49573:49579	883095	6	True				
ANR	883516	ReturnStatement	"return dump_maps ( core , - 1 , NULL ) ;"	1607:10:49581:49614	883095	7	True				
ANR	883517	CallExpression	"dump_maps ( core , - 1 , NULL )"		883095	0					
ANR	883518	Callee	dump_maps		883095	0					
ANR	883519	Identifier	dump_maps		883095	0					
ANR	883520	ArgumentList	core		883095	1					
ANR	883521	Argument	core		883095	0					
ANR	883522	Identifier	core		883095	0					
ANR	883523	Argument	- 1		883095	1					
ANR	883524	UnaryOperationExpression	- 1		883095	0					
ANR	883525	UnaryOperator	-		883095	0					
ANR	883526	PrimaryExpression	1		883095	1					
ANR	883527	Argument	NULL		883095	2					
ANR	883528	Identifier	NULL		883095	0					
ANR	883529	Label	case '?' :	1608:2:49618:49626	883095	8	True				
ANR	883530	Label	default :	1609:2:49630:49637	883095	9	True				
ANR	883531	Identifier	default		883095	0					
ANR	883532	ExpressionStatement	"eprintf ( ""Usage: dmd[aw]  - dump (all-or-writable) debug maps\\n"" )"	1610:3:49642:49707	883095	10	True				
ANR	883533	CallExpression	"eprintf ( ""Usage: dmd[aw]  - dump (all-or-writable) debug maps\\n"" )"		883095	0					
ANR	883534	Callee	eprintf		883095	0					
ANR	883535	Identifier	eprintf		883095	0					
ANR	883536	ArgumentList	"""Usage: dmd[aw]  - dump (all-or-writable) debug maps\\n"""		883095	1					
ANR	883537	Argument	"""Usage: dmd[aw]  - dump (all-or-writable) debug maps\\n"""		883095	0					
ANR	883538	PrimaryExpression	"""Usage: dmd[aw]  - dump (all-or-writable) debug maps\\n"""		883095	0					
ANR	883539	BreakStatement	break ;	1611:3:49712:49717	883095	11	True				
ANR	883540	BreakStatement	break ;	1613:2:49725:49730	883095	17	True				
ANR	883541	Label	case 'l' :	1614:1:49733:49741	883095	18	True				
ANR	883542	IfStatement	if ( input [ 1 ] != ' ' )		883095	19					
ANR	883543	Condition	input [ 1 ] != ' '	1615:6:49758:49772	883095	0	True				
ANR	883544	EqualityExpression	input [ 1 ] != ' '		883095	0		!=			
ANR	883545	ArrayIndexing	input [ 1 ]		883095	0					
ANR	883546	Identifier	input		883095	0					
ANR	883547	PrimaryExpression	1		883095	1					
ANR	883548	PrimaryExpression	' '		883095	1					
ANR	883549	CompoundStatement		75:23:1980:1980	883095	1					
ANR	883550	ExpressionStatement	"eprintf ( ""Usage: dml [file]\\n"" )"	1616:3:49780:49811	883095	0	True				
ANR	883551	CallExpression	"eprintf ( ""Usage: dml [file]\\n"" )"		883095	0					
ANR	883552	Callee	eprintf		883095	0					
ANR	883553	Identifier	eprintf		883095	0					
ANR	883554	ArgumentList	"""Usage: dml [file]\\n"""		883095	1					
ANR	883555	Argument	"""Usage: dml [file]\\n"""		883095	0					
ANR	883556	PrimaryExpression	"""Usage: dml [file]\\n"""		883095	0					
ANR	883557	ReturnStatement	return false ;	1617:3:49816:49828	883095	1	True				
ANR	883558	Identifier	false		883095	0					
ANR	883559	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1619:2:49836:49864	883095	20	True				
ANR	883560	CallExpression	r_debug_map_sync ( core -> dbg )		883095	0					
ANR	883561	Callee	r_debug_map_sync		883095	0					
ANR	883562	Identifier	r_debug_map_sync		883095	0					
ANR	883563	ArgumentList	core -> dbg		883095	1					
ANR	883564	Argument	core -> dbg		883095	0					
ANR	883565	PtrMemberAccess	core -> dbg		883095	0					
ANR	883566	Identifier	core		883095	0					
ANR	883567	Identifier	dbg		883095	1					
ANR	883568	Statement	r_list_foreach	1620:2:49898:49911	883095	21	True				
ANR	883569	Statement	(	1620:17:49913:49913	883095	22	True				
ANR	883570	Statement	core	1620:18:49914:49917	883095	23	True				
ANR	883571	Statement	->	1620:22:49918:49919	883095	24	True				
ANR	883572	Statement	dbg	1620:24:49920:49922	883095	25	True				
ANR	883573	Statement	->	1620:27:49923:49924	883095	26	True				
ANR	883574	Statement	maps	1620:29:49925:49928	883095	27	True				
ANR	883575	Statement	","	1620:33:49929:49929	883095	28	True				
ANR	883576	Statement	iter	1620:35:49931:49934	883095	29	True				
ANR	883577	Statement	","	1620:39:49935:49935	883095	30	True				
ANR	883578	Statement	map	1620:41:49937:49939	883095	31	True				
ANR	883579	Statement	)	1620:44:49940:49940	883095	32	True				
ANR	883580	CompoundStatement		80:46:2147:2147	883095	33					
ANR	883581	IfStatement	if ( addr >= map -> addr && addr < map -> addr_end )		883095	0					
ANR	883582	Condition	addr >= map -> addr && addr < map -> addr_end	1621:7:49951:49991	883095	0	True				
ANR	883583	AndExpression	addr >= map -> addr && addr < map -> addr_end		883095	0		&&			
ANR	883584	RelationalExpression	addr >= map -> addr		883095	0		>=			
ANR	883585	Identifier	addr		883095	0					
ANR	883586	PtrMemberAccess	map -> addr		883095	1					
ANR	883587	Identifier	map		883095	0					
ANR	883588	Identifier	addr		883095	1					
ANR	883589	RelationalExpression	addr < map -> addr_end		883095	1		<			
ANR	883590	Identifier	addr		883095	0					
ANR	883591	PtrMemberAccess	map -> addr_end		883095	1					
ANR	883592	Identifier	map		883095	0					
ANR	883593	Identifier	addr_end		883095	1					
ANR	883594	CompoundStatement		83:4:2217:2258	883095	1					
ANR	883595	IdentifierDeclStatement	int sz ;	1622:4:50000:50006	883095	0	True				
ANR	883596	IdentifierDecl	sz		883095	0					
ANR	883597	IdentifierDeclType	int		883095	0					
ANR	883598	Identifier	sz		883095	1					
ANR	883599	IdentifierDeclStatement	"char * buf = r_file_slurp ( input + 2 , & sz ) ;"	1623:4:50012:50053	883095	1	True				
ANR	883600	IdentifierDecl	"* buf = r_file_slurp ( input + 2 , & sz )"		883095	0					
ANR	883601	IdentifierDeclType	char *		883095	0					
ANR	883602	Identifier	buf		883095	1					
ANR	883603	AssignmentExpression	"* buf = r_file_slurp ( input + 2 , & sz )"		883095	2		=			
ANR	883604	Identifier	buf		883095	0					
ANR	883605	CallExpression	"r_file_slurp ( input + 2 , & sz )"		883095	1					
ANR	883606	Callee	r_file_slurp		883095	0					
ANR	883607	Identifier	r_file_slurp		883095	0					
ANR	883608	ArgumentList	input + 2		883095	1					
ANR	883609	Argument	input + 2		883095	0					
ANR	883610	AdditiveExpression	input + 2		883095	0		+			
ANR	883611	Identifier	input		883095	0					
ANR	883612	PrimaryExpression	2		883095	1					
ANR	883613	Argument	& sz		883095	1					
ANR	883614	UnaryOperationExpression	& sz		883095	0					
ANR	883615	UnaryOperator	&		883095	0					
ANR	883616	Identifier	sz		883095	1					
ANR	883617	IfStatement	if ( ! buf )		883095	2					
ANR	883618	Condition	! buf	1625:8:50124:50127	883095	0	True				
ANR	883619	UnaryOperationExpression	! buf		883095	0					
ANR	883620	UnaryOperator	!		883095	0					
ANR	883621	Identifier	buf		883095	1					
ANR	883622	CompoundStatement		85:14:2335:2335	883095	1					
ANR	883623	Statement	eprintf	1626:5:50137:50143	883095	0	True				
ANR	883624	Statement	(	1626:13:50145:50145	883095	1	True				
ANR	883625	Statement	"""Cannot allocate 0x%08"""	1626:14:50146:50168	883095	2	True				
ANR	883626	Statement	PFMT64x	1626:37:50169:50175	883095	3	True				
ANR	883627	Statement	""" byte(s)\\n"""	1626:44:50176:50187	883095	4	True				
ANR	883628	Statement	","	1626:56:50188:50188	883095	5	True				
ANR	883629	Statement	map	1626:58:50190:50192	883095	6	True				
ANR	883630	Statement	->	1626:61:50193:50194	883095	7	True				
ANR	883631	Statement	size	1626:63:50195:50198	883095	8	True				
ANR	883632	Statement	)	1626:67:50199:50199	883095	9	True				
ANR	883633	ExpressionStatement		1626:68:50200:50200	883095	10	True				
ANR	883634	ReturnStatement	return false ;	1627:5:50207:50219	883095	11	True				
ANR	883635	Identifier	false		883095	0					
ANR	883636	ExpressionStatement	"r_io_write_at ( core -> io , map -> addr , ( const ut8 * ) buf , sz )"	1629:4:50231:50287	883095	3	True				
ANR	883637	CallExpression	"r_io_write_at ( core -> io , map -> addr , ( const ut8 * ) buf , sz )"		883095	0					
ANR	883638	Callee	r_io_write_at		883095	0					
ANR	883639	Identifier	r_io_write_at		883095	0					
ANR	883640	ArgumentList	core -> io		883095	1					
ANR	883641	Argument	core -> io		883095	0					
ANR	883642	PtrMemberAccess	core -> io		883095	0					
ANR	883643	Identifier	core		883095	0					
ANR	883644	Identifier	io		883095	1					
ANR	883645	Argument	map -> addr		883095	1					
ANR	883646	PtrMemberAccess	map -> addr		883095	0					
ANR	883647	Identifier	map		883095	0					
ANR	883648	Identifier	addr		883095	1					
ANR	883649	Argument	( const ut8 * ) buf		883095	2					
ANR	883650	CastExpression	( const ut8 * ) buf		883095	0					
ANR	883651	CastTarget	const ut8 *		883095	0					
ANR	883652	Identifier	buf		883095	1					
ANR	883653	Argument	sz		883095	3					
ANR	883654	Identifier	sz		883095	0					
ANR	883655	IfStatement	if ( sz != map -> size )		883095	4					
ANR	883656	Condition	sz != map -> size	1630:8:50297:50311	883095	0	True				
ANR	883657	EqualityExpression	sz != map -> size		883095	0		!=			
ANR	883658	Identifier	sz		883095	0					
ANR	883659	PtrMemberAccess	map -> size		883095	1					
ANR	883660	Identifier	map		883095	0					
ANR	883661	Identifier	size		883095	1					
ANR	883662	Statement	eprintf	1631:5:50319:50325	883095	1	True				
ANR	883663	Statement	(	1631:13:50327:50327	883095	5	True				
ANR	883664	Statement	"""File size differs from region size (%d vs %"""	1631:14:50328:50372	883095	6	True				
ANR	883665	Statement	PFMT64d	1631:59:50373:50379	883095	7	True				
ANR	883666	Statement	""")\\n"""	1631:66:50380:50384	883095	8	True				
ANR	883667	Statement	","	1631:71:50385:50385	883095	9	True				
ANR	883668	Statement	sz	1632:7:50394:50395	883095	10	True				
ANR	883669	Statement	","	1632:9:50396:50396	883095	11	True				
ANR	883670	Statement	map	1632:11:50398:50400	883095	12	True				
ANR	883671	Statement	->	1632:14:50401:50402	883095	13	True				
ANR	883672	Statement	size	1632:16:50403:50406	883095	14	True				
ANR	883673	Statement	)	1632:20:50407:50407	883095	15	True				
ANR	883674	ExpressionStatement		1632:21:50408:50408	883095	16	True				
ANR	883675	Statement	eprintf	1633:4:50414:50420	883095	17	True				
ANR	883676	Statement	(	1633:12:50422:50422	883095	18	True				
ANR	883677	Statement	"""Loaded %d byte(s) into the map region at 0x%08"""	1633:13:50423:50470	883095	19	True				
ANR	883678	Statement	PFMT64x	1633:61:50471:50477	883095	20	True				
ANR	883679	Statement	"""\\n"""	1633:68:50478:50481	883095	21	True				
ANR	883680	Statement	","	1633:72:50482:50482	883095	22	True				
ANR	883681	Statement	sz	1634:6:50490:50491	883095	23	True				
ANR	883682	Statement	","	1634:8:50492:50492	883095	24	True				
ANR	883683	Statement	map	1634:10:50494:50496	883095	25	True				
ANR	883684	Statement	->	1634:13:50497:50498	883095	26	True				
ANR	883685	Statement	addr	1634:15:50499:50502	883095	27	True				
ANR	883686	Statement	)	1634:19:50503:50503	883095	28	True				
ANR	883687	ExpressionStatement		1634:20:50504:50504	883095	29	True				
ANR	883688	ExpressionStatement	free ( buf )	1635:4:50510:50520	883095	30	True				
ANR	883689	CallExpression	free ( buf )		883095	0					
ANR	883690	Callee	free		883095	0					
ANR	883691	Identifier	free		883095	0					
ANR	883692	ArgumentList	buf		883095	1					
ANR	883693	Argument	buf		883095	0					
ANR	883694	Identifier	buf		883095	0					
ANR	883695	ReturnStatement	return true ;	1636:4:50526:50537	883095	31	True				
ANR	883696	Identifier	true		883095	0					
ANR	883697	ExpressionStatement	"eprintf ( ""No debug region found here\\n"" )"	1639:2:50550:50590	883095	34	True				
ANR	883698	CallExpression	"eprintf ( ""No debug region found here\\n"" )"		883095	0					
ANR	883699	Callee	eprintf		883095	0					
ANR	883700	Identifier	eprintf		883095	0					
ANR	883701	ArgumentList	"""No debug region found here\\n"""		883095	1					
ANR	883702	Argument	"""No debug region found here\\n"""		883095	0					
ANR	883703	PrimaryExpression	"""No debug region found here\\n"""		883095	0					
ANR	883704	ReturnStatement	return false ;	1640:2:50594:50606	883095	35	True				
ANR	883705	Identifier	false		883095	0					
ANR	883706	Label	case 'i' :	1641:1:50609:50617	883095	36	True				
ANR	883707	SwitchStatement	switch ( input [ 1 ] )		883095	37					
ANR	883708	Condition	input [ 1 ]	1642:10:50638:50645	883095	0	True				
ANR	883709	ArrayIndexing	input [ 1 ]		883095	0					
ANR	883710	Identifier	input		883095	0					
ANR	883711	PrimaryExpression	1		883095	1					
ANR	883712	CompoundStatement		102:20:2853:2853	883095	1					
ANR	883713	Label	case '\\0' :	1643:2:50652:50661	883095	0	True				
ANR	883714	ExpressionStatement	"r_core_cmd ( core , ""dmm"" , 0 )"	1644:3:50690:50717	883095	1	True				
ANR	883715	CallExpression	"r_core_cmd ( core , ""dmm"" , 0 )"		883095	0					
ANR	883716	Callee	r_core_cmd		883095	0					
ANR	883717	Identifier	r_core_cmd		883095	0					
ANR	883718	ArgumentList	core		883095	1					
ANR	883719	Argument	core		883095	0					
ANR	883720	Identifier	core		883095	0					
ANR	883721	Argument	"""dmm"""		883095	1					
ANR	883722	PrimaryExpression	"""dmm"""		883095	0					
ANR	883723	Argument	0		883095	2					
ANR	883724	PrimaryExpression	0		883095	0					
ANR	883725	BreakStatement	break ;	1645:3:50722:50727	883095	2	True				
ANR	883726	Label	case ' ' :	1646:2:50731:50739	883095	3	True				
ANR	883727	Label	case '*' :	1647:2:50753:50761	883095	4	True				
ANR	883728	Label	case 'v' :	1648:2:50775:50783	883095	5	True				
ANR	883729	CompoundStatement		113:4:3112:3117	883095	6					
ANR	883730	IdentifierDeclStatement	"const char * libname = NULL , * symname = NULL , * mode = """" , * a0 ;"	1650:4:50804:50864	883095	0	True				
ANR	883731	IdentifierDecl	* libname = NULL		883095	0					
ANR	883732	IdentifierDeclType	const char *		883095	0					
ANR	883733	Identifier	libname		883095	1					
ANR	883734	AssignmentExpression	* libname = NULL		883095	2		=			
ANR	883735	Identifier	NULL		883095	0					
ANR	883736	Identifier	NULL		883095	1					
ANR	883737	IdentifierDecl	* symname = NULL		883095	1					
ANR	883738	IdentifierDeclType	const char *		883095	0					
ANR	883739	Identifier	symname		883095	1					
ANR	883740	AssignmentExpression	* symname = NULL		883095	2		=			
ANR	883741	Identifier	NULL		883095	0					
ANR	883742	Identifier	NULL		883095	1					
ANR	883743	IdentifierDecl	"* mode = """""		883095	2					
ANR	883744	IdentifierDeclType	const char *		883095	0					
ANR	883745	Identifier	mode		883095	1					
ANR	883746	AssignmentExpression	"* mode = """""		883095	2		=			
ANR	883747	Identifier	mode		883095	0					
ANR	883748	PrimaryExpression	""""""		883095	1					
ANR	883749	IdentifierDecl	* a0		883095	3					
ANR	883750	IdentifierDeclType	const char *		883095	0					
ANR	883751	Identifier	a0		883095	1					
ANR	883752	Statement	ut64	1651:4:50870:50873	883095	1	True				
ANR	883753	Statement	baddr	1651:9:50875:50879	883095	2	True				
ANR	883754	Statement	=	1651:15:50881:50881	883095	3	True				
ANR	883755	Statement	0L	1651:17:50883:50884	883095	4	True				
ANR	883756	ExpressionStatement	L	1651:19:50885:50886	883095	5	True				
ANR	883757	Identifier	L		883095	0					
ANR	883758	IdentifierDeclStatement	char * ptr ;	1652:4:50892:50901	883095	6	True				
ANR	883759	IdentifierDecl	* ptr		883095	0					
ANR	883760	IdentifierDeclType	char *		883095	0					
ANR	883761	Identifier	ptr		883095	1					
ANR	883762	IdentifierDeclStatement	int i ;	1653:4:50907:50912	883095	7	True				
ANR	883763	IdentifierDecl	i		883095	0					
ANR	883764	IdentifierDeclType	int		883095	0					
ANR	883765	Identifier	i		883095	1					
ANR	883766	IfStatement	if ( input [ 1 ] == '*' )		883095	8					
ANR	883767	Condition	input [ 1 ] == '*'	1654:8:50922:50934	883095	0	True				
ANR	883768	EqualityExpression	input [ 1 ] == '*'		883095	0		==			
ANR	883769	ArrayIndexing	input [ 1 ]		883095	0					
ANR	883770	Identifier	input		883095	0					
ANR	883771	PrimaryExpression	1		883095	1					
ANR	883772	PrimaryExpression	'*'		883095	1					
ANR	883773	CompoundStatement		114:23:3142:3142	883095	1					
ANR	883774	ExpressionStatement	"mode = ""-r """	1655:5:50944:50956	883095	0	True				
ANR	883775	AssignmentExpression	"mode = ""-r """		883095	0		=			
ANR	883776	Identifier	mode		883095	0					
ANR	883777	PrimaryExpression	"""-r """		883095	1					
ANR	883778	ExpressionStatement	ptr = strdup ( r_str_trim_ro ( input + 2 ) )	1657:4:50968:51008	883095	9	True				
ANR	883779	AssignmentExpression	ptr = strdup ( r_str_trim_ro ( input + 2 ) )		883095	0		=			
ANR	883780	Identifier	ptr		883095	0					
ANR	883781	CallExpression	strdup ( r_str_trim_ro ( input + 2 ) )		883095	1					
ANR	883782	Callee	strdup		883095	0					
ANR	883783	Identifier	strdup		883095	0					
ANR	883784	ArgumentList	r_str_trim_ro ( input + 2 )		883095	1					
ANR	883785	Argument	r_str_trim_ro ( input + 2 )		883095	0					
ANR	883786	CallExpression	r_str_trim_ro ( input + 2 )		883095	0					
ANR	883787	Callee	r_str_trim_ro		883095	0					
ANR	883788	Identifier	r_str_trim_ro		883095	0					
ANR	883789	ArgumentList	input + 2		883095	1					
ANR	883790	Argument	input + 2		883095	0					
ANR	883791	AdditiveExpression	input + 2		883095	0		+			
ANR	883792	Identifier	input		883095	0					
ANR	883793	PrimaryExpression	2		883095	1					
ANR	883794	IfStatement	if ( ! ptr || ! * ptr )		883095	10					
ANR	883795	Condition	! ptr || ! * ptr	1658:8:51018:51030	883095	0	True				
ANR	883796	OrExpression	! ptr || ! * ptr		883095	0		||			
ANR	883797	UnaryOperationExpression	! ptr		883095	0					
ANR	883798	UnaryOperator	!		883095	0					
ANR	883799	Identifier	ptr		883095	1					
ANR	883800	UnaryOperationExpression	! * ptr		883095	1					
ANR	883801	UnaryOperator	!		883095	0					
ANR	883802	UnaryOperationExpression	* ptr		883095	1					
ANR	883803	UnaryOperator	*		883095	0					
ANR	883804	Identifier	ptr		883095	1					
ANR	883805	CompoundStatement		118:23:3238:3238	883095	1					
ANR	883806	ExpressionStatement	"r_core_cmd ( core , ""dmm"" , 0 )"	1659:5:51040:51067	883095	0	True				
ANR	883807	CallExpression	"r_core_cmd ( core , ""dmm"" , 0 )"		883095	0					
ANR	883808	Callee	r_core_cmd		883095	0					
ANR	883809	Identifier	r_core_cmd		883095	0					
ANR	883810	ArgumentList	core		883095	1					
ANR	883811	Argument	core		883095	0					
ANR	883812	Identifier	core		883095	0					
ANR	883813	Argument	"""dmm"""		883095	1					
ANR	883814	PrimaryExpression	"""dmm"""		883095	0					
ANR	883815	Argument	0		883095	2					
ANR	883816	PrimaryExpression	0		883095	0					
ANR	883817	ExpressionStatement	free ( ptr )	1660:5:51074:51084	883095	1	True				
ANR	883818	CallExpression	free ( ptr )		883095	0					
ANR	883819	Callee	free		883095	0					
ANR	883820	Identifier	free		883095	0					
ANR	883821	ArgumentList	ptr		883095	1					
ANR	883822	Argument	ptr		883095	0					
ANR	883823	Identifier	ptr		883095	0					
ANR	883824	BreakStatement	break ;	1661:5:51091:51096	883095	2	True				
ANR	883825	ExpressionStatement	i = r_str_word_set0 ( ptr )	1663:4:51108:51133	883095	11	True				
ANR	883826	AssignmentExpression	i = r_str_word_set0 ( ptr )		883095	0		=			
ANR	883827	Identifier	i		883095	0					
ANR	883828	CallExpression	r_str_word_set0 ( ptr )		883095	1					
ANR	883829	Callee	r_str_word_set0		883095	0					
ANR	883830	Identifier	r_str_word_set0		883095	0					
ANR	883831	ArgumentList	ptr		883095	1					
ANR	883832	Argument	ptr		883095	0					
ANR	883833	Identifier	ptr		883095	0					
ANR	883834	SwitchStatement	switch ( i )		883095	12					
ANR	883835	Condition	i	1664:12:51147:51147	883095	0	True				
ANR	883836	Identifier	i		883095	0					
ANR	883837	CompoundStatement		124:15:3355:3355	883095	1					
ANR	883838	Label	case 2 :	1665:4:51156:51162	883095	0	True				
ANR	883839	ExpressionStatement	"symname = r_str_word_get0 ( ptr , 1 )"	1666:5:51169:51203	883095	1	True				
ANR	883840	AssignmentExpression	"symname = r_str_word_get0 ( ptr , 1 )"		883095	0		=			
ANR	883841	Identifier	symname		883095	0					
ANR	883842	CallExpression	"r_str_word_get0 ( ptr , 1 )"		883095	1					
ANR	883843	Callee	r_str_word_get0		883095	0					
ANR	883844	Identifier	r_str_word_get0		883095	0					
ANR	883845	ArgumentList	ptr		883095	1					
ANR	883846	Argument	ptr		883095	0					
ANR	883847	Identifier	ptr		883095	0					
ANR	883848	Argument	1		883095	1					
ANR	883849	PrimaryExpression	1		883095	0					
ANR	883850	Label	case 1 :	1668:4:51230:51236	883095	2	True				
ANR	883851	ExpressionStatement	"a0 = r_str_word_get0 ( ptr , 0 )"	1669:5:51243:51272	883095	3	True				
ANR	883852	AssignmentExpression	"a0 = r_str_word_get0 ( ptr , 0 )"		883095	0		=			
ANR	883853	Identifier	a0		883095	0					
ANR	883854	CallExpression	"r_str_word_get0 ( ptr , 0 )"		883095	1					
ANR	883855	Callee	r_str_word_get0		883095	0					
ANR	883856	Identifier	r_str_word_get0		883095	0					
ANR	883857	ArgumentList	ptr		883095	1					
ANR	883858	Argument	ptr		883095	0					
ANR	883859	Identifier	ptr		883095	0					
ANR	883860	Argument	0		883095	1					
ANR	883861	PrimaryExpression	0		883095	0					
ANR	883862	ExpressionStatement	"addr = r_num_math ( core -> num , a0 )"	1670:5:51279:51312	883095	4	True				
ANR	883863	AssignmentExpression	"addr = r_num_math ( core -> num , a0 )"		883095	0		=			
ANR	883864	Identifier	addr		883095	0					
ANR	883865	CallExpression	"r_num_math ( core -> num , a0 )"		883095	1					
ANR	883866	Callee	r_num_math		883095	0					
ANR	883867	Identifier	r_num_math		883095	0					
ANR	883868	ArgumentList	core -> num		883095	1					
ANR	883869	Argument	core -> num		883095	0					
ANR	883870	PtrMemberAccess	core -> num		883095	0					
ANR	883871	Identifier	core		883095	0					
ANR	883872	Identifier	num		883095	1					
ANR	883873	Argument	a0		883095	1					
ANR	883874	Identifier	a0		883095	0					
ANR	883875	IfStatement	if ( ! addr || addr == UT64_MAX )		883095	5					
ANR	883876	Condition	! addr || addr == UT64_MAX	1671:9:51323:51347	883095	0	True				
ANR	883877	OrExpression	! addr || addr == UT64_MAX		883095	0		||			
ANR	883878	UnaryOperationExpression	! addr		883095	0					
ANR	883879	UnaryOperator	!		883095	0					
ANR	883880	Identifier	addr		883095	1					
ANR	883881	EqualityExpression	addr == UT64_MAX		883095	1		==			
ANR	883882	Identifier	addr		883095	0					
ANR	883883	Identifier	UT64_MAX		883095	1					
ANR	883884	CompoundStatement		131:36:3555:3555	883095	1					
ANR	883885	ExpressionStatement	"libname = r_str_word_get0 ( ptr , 0 )"	1672:6:51358:51392	883095	0	True				
ANR	883886	AssignmentExpression	"libname = r_str_word_get0 ( ptr , 0 )"		883095	0		=			
ANR	883887	Identifier	libname		883095	0					
ANR	883888	CallExpression	"r_str_word_get0 ( ptr , 0 )"		883095	1					
ANR	883889	Callee	r_str_word_get0		883095	0					
ANR	883890	Identifier	r_str_word_get0		883095	0					
ANR	883891	ArgumentList	ptr		883095	1					
ANR	883892	Argument	ptr		883095	0					
ANR	883893	Identifier	ptr		883095	0					
ANR	883894	Argument	0		883095	1					
ANR	883895	PrimaryExpression	0		883095	0					
ANR	883896	BreakStatement	break ;	1674:5:51406:51411	883095	6	True				
ANR	883897	IfStatement	if ( libname && ! addr )		883095	13					
ANR	883898	Condition	libname && ! addr	1676:8:51427:51442	883095	0	True				
ANR	883899	AndExpression	libname && ! addr		883095	0		&&			
ANR	883900	Identifier	libname		883095	0					
ANR	883901	UnaryOperationExpression	! addr		883095	1					
ANR	883902	UnaryOperator	!		883095	0					
ANR	883903	Identifier	addr		883095	1					
ANR	883904	CompoundStatement		136:26:3650:3650	883095	1					
ANR	883905	ExpressionStatement	"addr = addroflib ( core , libname )"	1677:5:51452:51484	883095	0	True				
ANR	883906	AssignmentExpression	"addr = addroflib ( core , libname )"		883095	0		=			
ANR	883907	Identifier	addr		883095	0					
ANR	883908	CallExpression	"addroflib ( core , libname )"		883095	1					
ANR	883909	Callee	addroflib		883095	0					
ANR	883910	Identifier	addroflib		883095	0					
ANR	883911	ArgumentList	core		883095	1					
ANR	883912	Argument	core		883095	0					
ANR	883913	Identifier	core		883095	0					
ANR	883914	Argument	libname		883095	1					
ANR	883915	Identifier	libname		883095	0					
ANR	883916	IfStatement	if ( addr == UT64_MAX )		883095	1					
ANR	883917	Condition	addr == UT64_MAX	1678:9:51495:51510	883095	0	True				
ANR	883918	EqualityExpression	addr == UT64_MAX		883095	0		==			
ANR	883919	Identifier	addr		883095	0					
ANR	883920	Identifier	UT64_MAX		883095	1					
ANR	883921	CompoundStatement		138:27:3718:3718	883095	1					
ANR	883922	ExpressionStatement	"eprintf ( ""Unknown library, or not found in dm\\n"" )"	1679:6:51521:51570	883095	0	True				
ANR	883923	CallExpression	"eprintf ( ""Unknown library, or not found in dm\\n"" )"		883095	0					
ANR	883924	Callee	eprintf		883095	0					
ANR	883925	Identifier	eprintf		883095	0					
ANR	883926	ArgumentList	"""Unknown library, or not found in dm\\n"""		883095	1					
ANR	883927	Argument	"""Unknown library, or not found in dm\\n"""		883095	0					
ANR	883928	PrimaryExpression	"""Unknown library, or not found in dm\\n"""		883095	0					
ANR	883929	ExpressionStatement	"map = get_closest_map ( core , addr )"	1682:4:51589:51623	883095	14	True				
ANR	883930	AssignmentExpression	"map = get_closest_map ( core , addr )"		883095	0		=			
ANR	883931	Identifier	map		883095	0					
ANR	883932	CallExpression	"get_closest_map ( core , addr )"		883095	1					
ANR	883933	Callee	get_closest_map		883095	0					
ANR	883934	Identifier	get_closest_map		883095	0					
ANR	883935	ArgumentList	core		883095	1					
ANR	883936	Argument	core		883095	0					
ANR	883937	Identifier	core		883095	0					
ANR	883938	Argument	addr		883095	1					
ANR	883939	Identifier	addr		883095	0					
ANR	883940	IfStatement	if ( map )		883095	15					
ANR	883941	Condition	map	1683:8:51633:51635	883095	0	True				
ANR	883942	Identifier	map		883095	0					
ANR	883943	CompoundStatement		144:5:3850:3871	883095	1					
ANR	883944	IdentifierDeclStatement	RCoreBinFilter filter ;	1684:5:51645:51666	883095	0	True				
ANR	883945	IdentifierDecl	filter		883095	0					
ANR	883946	IdentifierDeclType	RCoreBinFilter		883095	0					
ANR	883947	Identifier	filter		883095	1					
ANR	883948	Statement	filter	1685:5:51673:51678	883095	1	True				
ANR	883949	Statement	.	1685:11:51679:51679	883095	2	True				
ANR	883950	Statement	offset	1685:12:51680:51685	883095	3	True				
ANR	883951	Statement	=	1685:19:51687:51687	883095	4	True				
ANR	883952	Statement	0L	1685:21:51689:51690	883095	5	True				
ANR	883953	ExpressionStatement	L	1685:23:51691:51692	883095	6	True				
ANR	883954	Identifier	L		883095	0					
ANR	883955	ExpressionStatement	filter . name = ( char * ) symname	1686:5:51699:51728	883095	7	True				
ANR	883956	AssignmentExpression	filter . name = ( char * ) symname		883095	0		=			
ANR	883957	MemberAccess	filter . name		883095	0					
ANR	883958	Identifier	filter		883095	0					
ANR	883959	Identifier	name		883095	1					
ANR	883960	CastExpression	( char * ) symname		883095	1					
ANR	883961	CastTarget	char *		883095	0					
ANR	883962	Identifier	symname		883095	1					
ANR	883963	ExpressionStatement	baddr = map -> addr	1687:5:51735:51752	883095	8	True				
ANR	883964	AssignmentExpression	baddr = map -> addr		883095	0		=			
ANR	883965	Identifier	baddr		883095	0					
ANR	883966	PtrMemberAccess	map -> addr		883095	1					
ANR	883967	Identifier	map		883095	0					
ANR	883968	Identifier	addr		883095	1					
ANR	883969	IfStatement	if ( libname )		883095	9					
ANR	883970	Condition	libname	1689:9:51764:51770	883095	0	True				
ANR	883971	Identifier	libname		883095	0					
ANR	883972	CompoundStatement		152:6:4067:4087	883095	1					
ANR	883973	IdentifierDeclStatement	"char * cmd , * res ;"	1690:6:51781:51796	883095	0	True				
ANR	883974	IdentifierDecl	* cmd		883095	0					
ANR	883975	IdentifierDeclType	char *		883095	0					
ANR	883976	Identifier	cmd		883095	1					
ANR	883977	IdentifierDecl	* res		883095	1					
ANR	883978	IdentifierDeclType	char *		883095	0					
ANR	883979	Identifier	res		883095	1					
ANR	883980	IdentifierDeclStatement	const char * file = map -> file ? map -> file : map -> name ;	1691:6:51804:51854	883095	1	True				
ANR	883981	IdentifierDecl	* file = map -> file ? map -> file : map -> name		883095	0					
ANR	883982	IdentifierDeclType	const char *		883095	0					
ANR	883983	Identifier	file		883095	1					
ANR	883984	AssignmentExpression	* file = map -> file ? map -> file : map -> name		883095	2		=			
ANR	883985	Identifier	file		883095	0					
ANR	883986	ConditionalExpression	map -> file ? map -> file : map -> name		883095	1					
ANR	883987	Condition	map -> file		883095	0					
ANR	883988	PtrMemberAccess	map -> file		883095	0					
ANR	883989	Identifier	map		883095	0					
ANR	883990	Identifier	file		883095	1					
ANR	883991	PtrMemberAccess	map -> file		883095	1					
ANR	883992	Identifier	map		883095	0					
ANR	883993	Identifier	file		883095	1					
ANR	883994	PtrMemberAccess	map -> name		883095	2					
ANR	883995	Identifier	map		883095	0					
ANR	883996	Identifier	name		883095	1					
ANR	883997	IdentifierDeclStatement	char * newfile = NULL ;	1692:6:51862:51882	883095	2	True				
ANR	883998	IdentifierDecl	* newfile = NULL		883095	0					
ANR	883999	IdentifierDeclType	char *		883095	0					
ANR	884000	Identifier	newfile		883095	1					
ANR	884001	AssignmentExpression	* newfile = NULL		883095	2		=			
ANR	884002	Identifier	NULL		883095	0					
ANR	884003	Identifier	NULL		883095	1					
ANR	884004	IfStatement	if ( ! r_file_exists ( file ) )		883095	3					
ANR	884005	Condition	! r_file_exists ( file )	1693:10:51894:51914	883095	0	True				
ANR	884006	UnaryOperationExpression	! r_file_exists ( file )		883095	0					
ANR	884007	UnaryOperator	!		883095	0					
ANR	884008	CallExpression	r_file_exists ( file )		883095	1					
ANR	884009	Callee	r_file_exists		883095	0					
ANR	884010	Identifier	r_file_exists		883095	0					
ANR	884011	ArgumentList	file		883095	1					
ANR	884012	Argument	file		883095	0					
ANR	884013	Identifier	file		883095	0					
ANR	884014	CompoundStatement		153:33:4122:4122	883095	1					
ANR	884015	ExpressionStatement	"newfile = r_file_temp ( ""memlib"" )"	1694:7:51926:51958	883095	0	True				
ANR	884016	AssignmentExpression	"newfile = r_file_temp ( ""memlib"" )"		883095	0		=			
ANR	884017	Identifier	newfile		883095	0					
ANR	884018	CallExpression	"r_file_temp ( ""memlib"" )"		883095	1					
ANR	884019	Callee	r_file_temp		883095	0					
ANR	884020	Identifier	r_file_temp		883095	0					
ANR	884021	ArgumentList	"""memlib"""		883095	1					
ANR	884022	Argument	"""memlib"""		883095	0					
ANR	884023	PrimaryExpression	"""memlib"""		883095	0					
ANR	884024	IfStatement	if ( newfile )		883095	1					
ANR	884025	Condition	newfile	1695:11:51971:51977	883095	0	True				
ANR	884026	Identifier	newfile		883095	0					
ANR	884027	CompoundStatement		155:20:4185:4185	883095	1					
ANR	884028	ExpressionStatement	file = newfile	1696:8:51990:52004	883095	0	True				
ANR	884029	AssignmentExpression	file = newfile		883095	0		=			
ANR	884030	Identifier	file		883095	0					
ANR	884031	Identifier	newfile		883095	1					
ANR	884032	Statement	r_core_cmdf	1697:8:52014:52024	883095	1	True				
ANR	884033	Statement	(	1697:20:52026:52026	883095	2	True				
ANR	884034	Statement	core	1697:21:52027:52030	883095	3	True				
ANR	884035	Statement	","	1697:25:52031:52031	883095	4	True				
ANR	884036	Statement	"""wtf %s 0x%"""	1697:27:52033:52044	883095	5	True				
ANR	884037	Statement	PFMT64x	1697:39:52045:52051	883095	6	True				
ANR	884038	Statement	""" @ 0x%"""	1697:46:52052:52059	883095	7	True				
ANR	884039	Statement	PFMT64x	1697:54:52060:52066	883095	8	True				
ANR	884040	Statement	""" 2> %s"""	1697:61:52067:52074	883095	9	True				
ANR	884041	Statement	","	1697:69:52075:52075	883095	10	True				
ANR	884042	Statement	file	1698:21:52098:52101	883095	11	True				
ANR	884043	Statement	","	1698:25:52102:52102	883095	12	True				
ANR	884044	Statement	map	1698:27:52104:52106	883095	13	True				
ANR	884045	Statement	->	1698:30:52107:52108	883095	14	True				
ANR	884046	Statement	size	1698:32:52109:52112	883095	15	True				
ANR	884047	Statement	","	1698:36:52113:52113	883095	16	True				
ANR	884048	Statement	baddr	1698:38:52115:52119	883095	17	True				
ANR	884049	Statement	","	1698:43:52120:52120	883095	18	True				
ANR	884050	Statement	R_SYS_DEVNULL	1698:45:52122:52134	883095	19	True				
ANR	884051	Statement	)	1698:58:52135:52135	883095	20	True				
ANR	884052	ExpressionStatement		1698:59:52136:52136	883095	21	True				
ANR	884053	IfStatement	if ( symname )		883095	4					
ANR	884054	Condition	symname	1701:10:52165:52171	883095	0	True				
ANR	884055	Identifier	symname		883095	0					
ANR	884056	CompoundStatement		161:19:4379:4379	883095	1					
ANR	884057	Statement	cmd	1702:7:52183:52185	883095	0	True				
ANR	884058	Statement	=	1702:11:52187:52187	883095	1	True				
ANR	884059	Statement	r_str_newf	1702:13:52189:52198	883095	2	True				
ANR	884060	Statement	(	1702:24:52200:52200	883095	3	True				
ANR	884061	Statement	"""rabin2 %s-B 0x%08"""	1702:25:52201:52219	883095	4	True				
ANR	884062	Statement	PFMT64x	1702:44:52220:52226	883095	5	True				
ANR	884063	Statement	""" -s %s | grep %s"""	1702:51:52227:52244	883095	6	True				
ANR	884064	Statement	","	1702:69:52245:52245	883095	7	True				
ANR	884065	Statement	mode	1702:71:52247:52250	883095	8	True				
ANR	884066	Statement	","	1702:75:52251:52251	883095	9	True				
ANR	884067	Statement	baddr	1702:77:52253:52257	883095	10	True				
ANR	884068	Statement	","	1702:82:52258:52258	883095	11	True				
ANR	884069	Statement	file	1702:84:52260:52263	883095	12	True				
ANR	884070	Statement	","	1702:88:52264:52264	883095	13	True				
ANR	884071	Statement	symname	1702:90:52266:52272	883095	14	True				
ANR	884072	Statement	)	1702:97:52273:52273	883095	15	True				
ANR	884073	ExpressionStatement		1702:98:52274:52274	883095	16	True				
ANR	884074	ElseStatement	else		883095	0					
ANR	884075	CompoundStatement		163:13:4494:4494	883095	0					
ANR	884076	Statement	cmd	1704:7:52298:52300	883095	0	True				
ANR	884077	Statement	=	1704:11:52302:52302	883095	1	True				
ANR	884078	Statement	r_str_newf	1704:13:52304:52313	883095	2	True				
ANR	884079	Statement	(	1704:24:52315:52315	883095	3	True				
ANR	884080	Statement	"""rabin2 %s-B 0x%08"""	1704:25:52316:52334	883095	4	True				
ANR	884081	Statement	PFMT64x	1704:44:52335:52341	883095	5	True				
ANR	884082	Statement	""" -s %s"""	1704:51:52342:52349	883095	6	True				
ANR	884083	Statement	","	1704:59:52350:52350	883095	7	True				
ANR	884084	Statement	mode	1704:61:52352:52355	883095	8	True				
ANR	884085	Statement	","	1704:65:52356:52356	883095	9	True				
ANR	884086	Statement	baddr	1704:67:52358:52362	883095	10	True				
ANR	884087	Statement	","	1704:72:52363:52363	883095	11	True				
ANR	884088	Statement	file	1704:74:52365:52368	883095	12	True				
ANR	884089	Statement	)	1704:78:52369:52369	883095	13	True				
ANR	884090	ExpressionStatement		1704:79:52370:52370	883095	14	True				
ANR	884091	ExpressionStatement	"res = r_sys_cmd_str ( cmd , NULL , NULL )"	1707:6:52424:52461	883095	5	True				
ANR	884092	AssignmentExpression	"res = r_sys_cmd_str ( cmd , NULL , NULL )"		883095	0		=			
ANR	884093	Identifier	res		883095	0					
ANR	884094	CallExpression	"r_sys_cmd_str ( cmd , NULL , NULL )"		883095	1					
ANR	884095	Callee	r_sys_cmd_str		883095	0					
ANR	884096	Identifier	r_sys_cmd_str		883095	0					
ANR	884097	ArgumentList	cmd		883095	1					
ANR	884098	Argument	cmd		883095	0					
ANR	884099	Identifier	cmd		883095	0					
ANR	884100	Argument	NULL		883095	1					
ANR	884101	Identifier	NULL		883095	0					
ANR	884102	Argument	NULL		883095	2					
ANR	884103	Identifier	NULL		883095	0					
ANR	884104	ExpressionStatement	r_cons_println ( res )	1708:6:52469:52489	883095	6	True				
ANR	884105	CallExpression	r_cons_println ( res )		883095	0					
ANR	884106	Callee	r_cons_println		883095	0					
ANR	884107	Identifier	r_cons_println		883095	0					
ANR	884108	ArgumentList	res		883095	1					
ANR	884109	Argument	res		883095	0					
ANR	884110	Identifier	res		883095	0					
ANR	884111	ExpressionStatement	free ( res )	1709:6:52497:52507	883095	7	True				
ANR	884112	CallExpression	free ( res )		883095	0					
ANR	884113	Callee	free		883095	0					
ANR	884114	Identifier	free		883095	0					
ANR	884115	ArgumentList	res		883095	1					
ANR	884116	Argument	res		883095	0					
ANR	884117	Identifier	res		883095	0					
ANR	884118	ExpressionStatement	free ( cmd )	1710:6:52515:52525	883095	8	True				
ANR	884119	CallExpression	free ( cmd )		883095	0					
ANR	884120	Callee	free		883095	0					
ANR	884121	Identifier	free		883095	0					
ANR	884122	ArgumentList	cmd		883095	1					
ANR	884123	Argument	cmd		883095	0					
ANR	884124	Identifier	cmd		883095	0					
ANR	884125	IfStatement	if ( newfile )		883095	9					
ANR	884126	Condition	newfile	1711:10:52537:52543	883095	0	True				
ANR	884127	Identifier	newfile		883095	0					
ANR	884128	CompoundStatement		171:19:4751:4751	883095	1					
ANR	884129	IfStatement	if ( ! r_file_rm ( newfile ) )		883095	0					
ANR	884130	Condition	! r_file_rm ( newfile )	1712:11:52559:52578	883095	0	True				
ANR	884131	UnaryOperationExpression	! r_file_rm ( newfile )		883095	0					
ANR	884132	UnaryOperator	!		883095	0					
ANR	884133	CallExpression	r_file_rm ( newfile )		883095	1					
ANR	884134	Callee	r_file_rm		883095	0					
ANR	884135	Identifier	r_file_rm		883095	0					
ANR	884136	ArgumentList	newfile		883095	1					
ANR	884137	Argument	newfile		883095	0					
ANR	884138	Identifier	newfile		883095	0					
ANR	884139	CompoundStatement		172:33:4786:4786	883095	1					
ANR	884140	ExpressionStatement	"eprintf ( ""Error when removing %s\\n"" , newfile )"	1713:8:52591:52636	883095	0	True				
ANR	884141	CallExpression	"eprintf ( ""Error when removing %s\\n"" , newfile )"		883095	0					
ANR	884142	Callee	eprintf		883095	0					
ANR	884143	Identifier	eprintf		883095	0					
ANR	884144	ArgumentList	"""Error when removing %s\\n"""		883095	1					
ANR	884145	Argument	"""Error when removing %s\\n"""		883095	0					
ANR	884146	PrimaryExpression	"""Error when removing %s\\n"""		883095	0					
ANR	884147	Argument	newfile		883095	1					
ANR	884148	Identifier	newfile		883095	0					
ANR	884149	ExpressionStatement	free ( newfile )	1715:7:52654:52668	883095	1	True				
ANR	884150	CallExpression	free ( newfile )		883095	0					
ANR	884151	Callee	free		883095	0					
ANR	884152	Identifier	free		883095	0					
ANR	884153	ArgumentList	newfile		883095	1					
ANR	884154	Argument	newfile		883095	0					
ANR	884155	Identifier	newfile		883095	0					
ANR	884156	ElseStatement	else		883095	0					
ANR	884157	CompoundStatement		177:12:4895:4895	883095	0					
ANR	884158	ExpressionStatement	"r_bin_set_baddr ( core -> bin , map -> addr )"	1718:6:52698:52736	883095	0	True				
ANR	884159	CallExpression	"r_bin_set_baddr ( core -> bin , map -> addr )"		883095	0					
ANR	884160	Callee	r_bin_set_baddr		883095	0					
ANR	884161	Identifier	r_bin_set_baddr		883095	0					
ANR	884162	ArgumentList	core -> bin		883095	1					
ANR	884163	Argument	core -> bin		883095	0					
ANR	884164	PtrMemberAccess	core -> bin		883095	0					
ANR	884165	Identifier	core		883095	0					
ANR	884166	Identifier	bin		883095	1					
ANR	884167	Argument	map -> addr		883095	1					
ANR	884168	PtrMemberAccess	map -> addr		883095	0					
ANR	884169	Identifier	map		883095	0					
ANR	884170	Identifier	addr		883095	1					
ANR	884171	ExpressionStatement	"r_core_bin_info ( core , R_CORE_BIN_ACC_SYMBOLS , ( input [ 1 ] == '*' ) , true , & filter , NULL )"	1719:6:52744:52828	883095	1	True				
ANR	884172	CallExpression	"r_core_bin_info ( core , R_CORE_BIN_ACC_SYMBOLS , ( input [ 1 ] == '*' ) , true , & filter , NULL )"		883095	0					
ANR	884173	Callee	r_core_bin_info		883095	0					
ANR	884174	Identifier	r_core_bin_info		883095	0					
ANR	884175	ArgumentList	core		883095	1					
ANR	884176	Argument	core		883095	0					
ANR	884177	Identifier	core		883095	0					
ANR	884178	Argument	R_CORE_BIN_ACC_SYMBOLS		883095	1					
ANR	884179	Identifier	R_CORE_BIN_ACC_SYMBOLS		883095	0					
ANR	884180	Argument	input [ 1 ] == '*'		883095	2					
ANR	884181	EqualityExpression	input [ 1 ] == '*'		883095	0		==			
ANR	884182	ArrayIndexing	input [ 1 ]		883095	0					
ANR	884183	Identifier	input		883095	0					
ANR	884184	PrimaryExpression	1		883095	1					
ANR	884185	PrimaryExpression	'*'		883095	1					
ANR	884186	Argument	true		883095	3					
ANR	884187	Identifier	true		883095	0					
ANR	884188	Argument	& filter		883095	4					
ANR	884189	UnaryOperationExpression	& filter		883095	0					
ANR	884190	UnaryOperator	&		883095	0					
ANR	884191	Identifier	filter		883095	1					
ANR	884192	Argument	NULL		883095	5					
ANR	884193	Identifier	NULL		883095	0					
ANR	884194	ExpressionStatement	"r_bin_set_baddr ( core -> bin , baddr )"	1720:6:52836:52870	883095	2	True				
ANR	884195	CallExpression	"r_bin_set_baddr ( core -> bin , baddr )"		883095	0					
ANR	884196	Callee	r_bin_set_baddr		883095	0					
ANR	884197	Identifier	r_bin_set_baddr		883095	0					
ANR	884198	ArgumentList	core -> bin		883095	1					
ANR	884199	Argument	core -> bin		883095	0					
ANR	884200	PtrMemberAccess	core -> bin		883095	0					
ANR	884201	Identifier	core		883095	0					
ANR	884202	Identifier	bin		883095	1					
ANR	884203	Argument	baddr		883095	1					
ANR	884204	Identifier	baddr		883095	0					
ANR	884205	ExpressionStatement	free ( ptr )	1723:4:52889:52899	883095	16	True				
ANR	884206	CallExpression	free ( ptr )		883095	0					
ANR	884207	Callee	free		883095	0					
ANR	884208	Identifier	free		883095	0					
ANR	884209	ArgumentList	ptr		883095	1					
ANR	884210	Argument	ptr		883095	0					
ANR	884211	Identifier	ptr		883095	0					
ANR	884212	BreakStatement	break ;	1725:3:52909:52914	883095	7	True				
ANR	884213	Label	case '.' :	1726:2:52918:52926	883095	8	True				
ANR	884214	CompoundStatement		187:3:5146:5146	883095	9					
ANR	884215	ExpressionStatement	"map = get_closest_map ( core , addr )"	1728:4:52947:52981	883095	0	True				
ANR	884216	AssignmentExpression	"map = get_closest_map ( core , addr )"		883095	0		=			
ANR	884217	Identifier	map		883095	0					
ANR	884218	CallExpression	"get_closest_map ( core , addr )"		883095	1					
ANR	884219	Callee	get_closest_map		883095	0					
ANR	884220	Identifier	get_closest_map		883095	0					
ANR	884221	ArgumentList	core		883095	1					
ANR	884222	Argument	core		883095	0					
ANR	884223	Identifier	core		883095	0					
ANR	884224	Argument	addr		883095	1					
ANR	884225	Identifier	addr		883095	0					
ANR	884226	IfStatement	if ( map )		883095	1					
ANR	884227	Condition	map	1729:8:52991:52993	883095	0	True				
ANR	884228	Identifier	map		883095	0					
ANR	884229	CompoundStatement		192:5:5296:5338	883095	1					
ANR	884230	IdentifierDeclStatement	ut64 closest_addr = UT64_MAX ;	1730:5:53003:53031	883095	0	True				
ANR	884231	IdentifierDecl	closest_addr = UT64_MAX		883095	0					
ANR	884232	IdentifierDeclType	ut64		883095	0					
ANR	884233	Identifier	closest_addr		883095	1					
ANR	884234	AssignmentExpression	closest_addr = UT64_MAX		883095	2		=			
ANR	884235	Identifier	UT64_MAX		883095	0					
ANR	884236	Identifier	UT64_MAX		883095	1					
ANR	884237	IdentifierDeclStatement	RList * symbols = r_bin_get_symbols ( core -> bin ) ;	1731:5:53038:53084	883095	1	True				
ANR	884238	IdentifierDecl	* symbols = r_bin_get_symbols ( core -> bin )		883095	0					
ANR	884239	IdentifierDeclType	RList *		883095	0					
ANR	884240	Identifier	symbols		883095	1					
ANR	884241	AssignmentExpression	* symbols = r_bin_get_symbols ( core -> bin )		883095	2		=			
ANR	884242	Identifier	symbols		883095	0					
ANR	884243	CallExpression	r_bin_get_symbols ( core -> bin )		883095	1					
ANR	884244	Callee	r_bin_get_symbols		883095	0					
ANR	884245	Identifier	r_bin_get_symbols		883095	0					
ANR	884246	ArgumentList	core -> bin		883095	1					
ANR	884247	Argument	core -> bin		883095	0					
ANR	884248	PtrMemberAccess	core -> bin		883095	0					
ANR	884249	Identifier	core		883095	0					
ANR	884250	Identifier	bin		883095	1					
ANR	884251	IdentifierDeclStatement	"RBinSymbol * symbol , * closest_symbol = NULL ;"	1732:5:53091:53133	883095	2	True				
ANR	884252	IdentifierDecl	* symbol		883095	0					
ANR	884253	IdentifierDeclType	RBinSymbol *		883095	0					
ANR	884254	Identifier	symbol		883095	1					
ANR	884255	IdentifierDecl	* closest_symbol = NULL		883095	1					
ANR	884256	IdentifierDeclType	RBinSymbol *		883095	0					
ANR	884257	Identifier	closest_symbol		883095	1					
ANR	884258	AssignmentExpression	* closest_symbol = NULL		883095	2		=			
ANR	884259	Identifier	NULL		883095	0					
ANR	884260	Identifier	NULL		883095	1					
ANR	884261	Statement	r_list_foreach	1734:5:53141:53154	883095	3	True				
ANR	884262	Statement	(	1734:20:53156:53156	883095	4	True				
ANR	884263	Statement	symbols	1734:21:53157:53163	883095	5	True				
ANR	884264	Statement	","	1734:28:53164:53164	883095	6	True				
ANR	884265	Statement	iter	1734:30:53166:53169	883095	7	True				
ANR	884266	Statement	","	1734:34:53170:53170	883095	8	True				
ANR	884267	Statement	symbol	1734:36:53172:53177	883095	9	True				
ANR	884268	Statement	)	1734:42:53178:53178	883095	10	True				
ANR	884269	CompoundStatement		194:44:5385:5385	883095	11					
ANR	884270	IfStatement	if ( symbol -> vaddr > addr )		883095	0					
ANR	884271	Condition	symbol -> vaddr > addr	1735:10:53192:53211	883095	0	True				
ANR	884272	RelationalExpression	symbol -> vaddr > addr		883095	0		>			
ANR	884273	PtrMemberAccess	symbol -> vaddr		883095	0					
ANR	884274	Identifier	symbol		883095	0					
ANR	884275	Identifier	vaddr		883095	1					
ANR	884276	Identifier	addr		883095	1					
ANR	884277	CompoundStatement		195:32:5419:5419	883095	1					
ANR	884278	IfStatement	if ( symbol -> vaddr - addr < closest_addr )		883095	0					
ANR	884279	Condition	symbol -> vaddr - addr < closest_addr	1736:11:53227:53261	883095	0	True				
ANR	884280	RelationalExpression	symbol -> vaddr - addr < closest_addr		883095	0		<			
ANR	884281	AdditiveExpression	symbol -> vaddr - addr		883095	0		-			
ANR	884282	PtrMemberAccess	symbol -> vaddr		883095	0					
ANR	884283	Identifier	symbol		883095	0					
ANR	884284	Identifier	vaddr		883095	1					
ANR	884285	Identifier	addr		883095	1					
ANR	884286	Identifier	closest_addr		883095	1					
ANR	884287	CompoundStatement		196:48:5469:5469	883095	1					
ANR	884288	ExpressionStatement	closest_addr = symbol -> vaddr - addr	1737:8:53274:53309	883095	0	True				
ANR	884289	AssignmentExpression	closest_addr = symbol -> vaddr - addr		883095	0		=			
ANR	884290	Identifier	closest_addr		883095	0					
ANR	884291	AdditiveExpression	symbol -> vaddr - addr		883095	1		-			
ANR	884292	PtrMemberAccess	symbol -> vaddr		883095	0					
ANR	884293	Identifier	symbol		883095	0					
ANR	884294	Identifier	vaddr		883095	1					
ANR	884295	Identifier	addr		883095	1					
ANR	884296	ExpressionStatement	closest_symbol = symbol	1738:8:53319:53342	883095	1	True				
ANR	884297	AssignmentExpression	closest_symbol = symbol		883095	0		=			
ANR	884298	Identifier	closest_symbol		883095	0					
ANR	884299	Identifier	symbol		883095	1					
ANR	884300	ElseStatement	else		883095	0					
ANR	884301	CompoundStatement		200:13:5571:5571	883095	0					
ANR	884302	IfStatement	if ( addr - symbol -> vaddr < closest_addr )		883095	0					
ANR	884303	Condition	addr - symbol -> vaddr < closest_addr	1741:11:53379:53413	883095	0	True				
ANR	884304	RelationalExpression	addr - symbol -> vaddr < closest_addr		883095	0		<			
ANR	884305	AdditiveExpression	addr - symbol -> vaddr		883095	0		-			
ANR	884306	Identifier	addr		883095	0					
ANR	884307	PtrMemberAccess	symbol -> vaddr		883095	1					
ANR	884308	Identifier	symbol		883095	0					
ANR	884309	Identifier	vaddr		883095	1					
ANR	884310	Identifier	closest_addr		883095	1					
ANR	884311	CompoundStatement		201:48:5621:5621	883095	1					
ANR	884312	ExpressionStatement	closest_addr = addr - symbol -> vaddr	1742:8:53426:53461	883095	0	True				
ANR	884313	AssignmentExpression	closest_addr = addr - symbol -> vaddr		883095	0		=			
ANR	884314	Identifier	closest_addr		883095	0					
ANR	884315	AdditiveExpression	addr - symbol -> vaddr		883095	1		-			
ANR	884316	Identifier	addr		883095	0					
ANR	884317	PtrMemberAccess	symbol -> vaddr		883095	1					
ANR	884318	Identifier	symbol		883095	0					
ANR	884319	Identifier	vaddr		883095	1					
ANR	884320	ExpressionStatement	closest_symbol = symbol	1743:8:53471:53494	883095	1	True				
ANR	884321	AssignmentExpression	closest_symbol = symbol		883095	0		=			
ANR	884322	Identifier	closest_symbol		883095	0					
ANR	884323	Identifier	symbol		883095	1					
ANR	884324	IfStatement	if ( closest_symbol )		883095	12					
ANR	884325	Condition	closest_symbol	1747:9:53529:53542	883095	0	True				
ANR	884326	Identifier	closest_symbol		883095	0					
ANR	884327	CompoundStatement		208:6:5758:5779	883095	1					
ANR	884328	IdentifierDeclStatement	RCoreBinFilter filter ;	1748:6:53553:53574	883095	0	True				
ANR	884329	IdentifierDecl	filter		883095	0					
ANR	884330	IdentifierDeclType	RCoreBinFilter		883095	0					
ANR	884331	Identifier	filter		883095	1					
ANR	884332	Statement	filter	1749:6:53582:53587	883095	1	True				
ANR	884333	Statement	.	1749:12:53588:53588	883095	2	True				
ANR	884334	Statement	offset	1749:13:53589:53594	883095	3	True				
ANR	884335	Statement	=	1749:20:53596:53596	883095	4	True				
ANR	884336	Statement	0L	1749:22:53598:53599	883095	5	True				
ANR	884337	ExpressionStatement	L	1749:24:53600:53601	883095	6	True				
ANR	884338	Identifier	L		883095	0					
ANR	884339	ExpressionStatement	filter . name = ( char * ) closest_symbol -> name	1750:6:53609:53652	883095	7	True				
ANR	884340	AssignmentExpression	filter . name = ( char * ) closest_symbol -> name		883095	0		=			
ANR	884341	MemberAccess	filter . name		883095	0					
ANR	884342	Identifier	filter		883095	0					
ANR	884343	Identifier	name		883095	1					
ANR	884344	CastExpression	( char * ) closest_symbol -> name		883095	1					
ANR	884345	CastTarget	char *		883095	0					
ANR	884346	PtrMemberAccess	closest_symbol -> name		883095	1					
ANR	884347	Identifier	closest_symbol		883095	0					
ANR	884348	Identifier	name		883095	1					
ANR	884349	ExpressionStatement	"r_bin_set_baddr ( core -> bin , map -> addr )"	1752:6:53661:53699	883095	8	True				
ANR	884350	CallExpression	"r_bin_set_baddr ( core -> bin , map -> addr )"		883095	0					
ANR	884351	Callee	r_bin_set_baddr		883095	0					
ANR	884352	Identifier	r_bin_set_baddr		883095	0					
ANR	884353	ArgumentList	core -> bin		883095	1					
ANR	884354	Argument	core -> bin		883095	0					
ANR	884355	PtrMemberAccess	core -> bin		883095	0					
ANR	884356	Identifier	core		883095	0					
ANR	884357	Identifier	bin		883095	1					
ANR	884358	Argument	map -> addr		883095	1					
ANR	884359	PtrMemberAccess	map -> addr		883095	0					
ANR	884360	Identifier	map		883095	0					
ANR	884361	Identifier	addr		883095	1					
ANR	884362	ExpressionStatement	"r_core_bin_info ( core , R_CORE_BIN_ACC_SYMBOLS , false , true , & filter , NULL )"	1753:6:53707:53781	883095	9	True				
ANR	884363	CallExpression	"r_core_bin_info ( core , R_CORE_BIN_ACC_SYMBOLS , false , true , & filter , NULL )"		883095	0					
ANR	884364	Callee	r_core_bin_info		883095	0					
ANR	884365	Identifier	r_core_bin_info		883095	0					
ANR	884366	ArgumentList	core		883095	1					
ANR	884367	Argument	core		883095	0					
ANR	884368	Identifier	core		883095	0					
ANR	884369	Argument	R_CORE_BIN_ACC_SYMBOLS		883095	1					
ANR	884370	Identifier	R_CORE_BIN_ACC_SYMBOLS		883095	0					
ANR	884371	Argument	false		883095	2					
ANR	884372	Identifier	false		883095	0					
ANR	884373	Argument	true		883095	3					
ANR	884374	Identifier	true		883095	0					
ANR	884375	Argument	& filter		883095	4					
ANR	884376	UnaryOperationExpression	& filter		883095	0					
ANR	884377	UnaryOperator	&		883095	0					
ANR	884378	Identifier	filter		883095	1					
ANR	884379	Argument	NULL		883095	5					
ANR	884380	Identifier	NULL		883095	0					
ANR	884381	BreakStatement	break ;	1757:3:53804:53809	883095	10	True				
ANR	884382	Label	default :	1758:2:53813:53820	883095	11	True				
ANR	884383	Identifier	default		883095	0					
ANR	884384	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dmi )"	1759:3:53825:53861	883095	12	True				
ANR	884385	CallExpression	"r_core_cmd_help ( core , help_msg_dmi )"		883095	0					
ANR	884386	Callee	r_core_cmd_help		883095	0					
ANR	884387	Identifier	r_core_cmd_help		883095	0					
ANR	884388	ArgumentList	core		883095	1					
ANR	884389	Argument	core		883095	0					
ANR	884390	Identifier	core		883095	0					
ANR	884391	Argument	help_msg_dmi		883095	1					
ANR	884392	Identifier	help_msg_dmi		883095	0					
ANR	884393	BreakStatement	break ;	1760:3:53866:53871	883095	13	True				
ANR	884394	BreakStatement	break ;	1762:2:53879:53884	883095	38	True				
ANR	884395	Label	case 'S' :	1763:1:53887:53895	883095	39	True				
ANR	884396	CompoundStatement		256:3:6934:6980	883095	40					
ANR	884397	IdentifierDeclStatement	"const char * libname = NULL , * sectname = NULL , * mode = """" ;"	1765:3:53944:54000	883095	0	True				
ANR	884398	IdentifierDecl	* libname = NULL		883095	0					
ANR	884399	IdentifierDeclType	const char *		883095	0					
ANR	884400	Identifier	libname		883095	1					
ANR	884401	AssignmentExpression	* libname = NULL		883095	2		=			
ANR	884402	Identifier	NULL		883095	0					
ANR	884403	Identifier	NULL		883095	1					
ANR	884404	IdentifierDecl	* sectname = NULL		883095	1					
ANR	884405	IdentifierDeclType	const char *		883095	0					
ANR	884406	Identifier	sectname		883095	1					
ANR	884407	AssignmentExpression	* sectname = NULL		883095	2		=			
ANR	884408	Identifier	NULL		883095	0					
ANR	884409	Identifier	NULL		883095	1					
ANR	884410	IdentifierDecl	"* mode = """""		883095	2					
ANR	884411	IdentifierDeclType	const char *		883095	0					
ANR	884412	Identifier	mode		883095	1					
ANR	884413	AssignmentExpression	"* mode = """""		883095	2		=			
ANR	884414	Identifier	mode		883095	0					
ANR	884415	PrimaryExpression	""""""		883095	1					
ANR	884416	Statement	ut64	1766:3:54005:54008	883095	1	True				
ANR	884417	Statement	baddr	1766:8:54010:54014	883095	2	True				
ANR	884418	Statement	=	1766:14:54016:54016	883095	3	True				
ANR	884419	Statement	0L	1766:16:54018:54019	883095	4	True				
ANR	884420	ExpressionStatement	L	1766:18:54020:54021	883095	5	True				
ANR	884421	Identifier	L		883095	0					
ANR	884422	IdentifierDeclStatement	char * ptr ;	1767:3:54026:54035	883095	6	True				
ANR	884423	IdentifierDecl	* ptr		883095	0					
ANR	884424	IdentifierDeclType	char *		883095	0					
ANR	884425	Identifier	ptr		883095	1					
ANR	884426	IdentifierDeclStatement	int i ;	1768:3:54040:54045	883095	7	True				
ANR	884427	IdentifierDecl	i		883095	0					
ANR	884428	IdentifierDeclType	int		883095	0					
ANR	884429	Identifier	i		883095	1					
ANR	884430	IfStatement	if ( input [ 1 ] == '*' )		883095	8					
ANR	884431	Condition	input [ 1 ] == '*'	1770:7:54055:54067	883095	0	True				
ANR	884432	EqualityExpression	input [ 1 ] == '*'		883095	0		==			
ANR	884433	ArrayIndexing	input [ 1 ]		883095	0					
ANR	884434	Identifier	input		883095	0					
ANR	884435	PrimaryExpression	1		883095	1					
ANR	884436	PrimaryExpression	'*'		883095	1					
ANR	884437	CompoundStatement		230:22:6275:6275	883095	1					
ANR	884438	ExpressionStatement	ptr = strdup ( r_str_trim_head ( ( char * ) input + 2 ) )	1771:4:54076:54125	883095	0	True				
ANR	884439	AssignmentExpression	ptr = strdup ( r_str_trim_head ( ( char * ) input + 2 ) )		883095	0		=			
ANR	884440	Identifier	ptr		883095	0					
ANR	884441	CallExpression	strdup ( r_str_trim_head ( ( char * ) input + 2 ) )		883095	1					
ANR	884442	Callee	strdup		883095	0					
ANR	884443	Identifier	strdup		883095	0					
ANR	884444	ArgumentList	r_str_trim_head ( ( char * ) input + 2 )		883095	1					
ANR	884445	Argument	r_str_trim_head ( ( char * ) input + 2 )		883095	0					
ANR	884446	CallExpression	r_str_trim_head ( ( char * ) input + 2 )		883095	0					
ANR	884447	Callee	r_str_trim_head		883095	0					
ANR	884448	Identifier	r_str_trim_head		883095	0					
ANR	884449	ArgumentList	( char * ) input + 2		883095	1					
ANR	884450	Argument	( char * ) input + 2		883095	0					
ANR	884451	AdditiveExpression	( char * ) input + 2		883095	0		+			
ANR	884452	CastExpression	( char * ) input		883095	0					
ANR	884453	CastTarget	char *		883095	0					
ANR	884454	Identifier	input		883095	1					
ANR	884455	PrimaryExpression	2		883095	1					
ANR	884456	ExpressionStatement	"mode = ""-r """	1772:4:54131:54143	883095	1	True				
ANR	884457	AssignmentExpression	"mode = ""-r """		883095	0		=			
ANR	884458	Identifier	mode		883095	0					
ANR	884459	PrimaryExpression	"""-r """		883095	1					
ANR	884460	ElseStatement	else		883095	0					
ANR	884461	CompoundStatement		233:10:6360:6360	883095	0					
ANR	884462	ExpressionStatement	ptr = strdup ( r_str_trim_head ( ( char * ) input + 1 ) )	1774:4:54161:54210	883095	0	True				
ANR	884463	AssignmentExpression	ptr = strdup ( r_str_trim_head ( ( char * ) input + 1 ) )		883095	0		=			
ANR	884464	Identifier	ptr		883095	0					
ANR	884465	CallExpression	strdup ( r_str_trim_head ( ( char * ) input + 1 ) )		883095	1					
ANR	884466	Callee	strdup		883095	0					
ANR	884467	Identifier	strdup		883095	0					
ANR	884468	ArgumentList	r_str_trim_head ( ( char * ) input + 1 )		883095	1					
ANR	884469	Argument	r_str_trim_head ( ( char * ) input + 1 )		883095	0					
ANR	884470	CallExpression	r_str_trim_head ( ( char * ) input + 1 )		883095	0					
ANR	884471	Callee	r_str_trim_head		883095	0					
ANR	884472	Identifier	r_str_trim_head		883095	0					
ANR	884473	ArgumentList	( char * ) input + 1		883095	1					
ANR	884474	Argument	( char * ) input + 1		883095	0					
ANR	884475	AdditiveExpression	( char * ) input + 1		883095	0		+			
ANR	884476	CastExpression	( char * ) input		883095	0					
ANR	884477	CastTarget	char *		883095	0					
ANR	884478	Identifier	input		883095	1					
ANR	884479	PrimaryExpression	1		883095	1					
ANR	884480	ExpressionStatement	i = r_str_word_set0 ( ptr )	1776:3:54220:54245	883095	9	True				
ANR	884481	AssignmentExpression	i = r_str_word_set0 ( ptr )		883095	0		=			
ANR	884482	Identifier	i		883095	0					
ANR	884483	CallExpression	r_str_word_set0 ( ptr )		883095	1					
ANR	884484	Callee	r_str_word_set0		883095	0					
ANR	884485	Identifier	r_str_word_set0		883095	0					
ANR	884486	ArgumentList	ptr		883095	1					
ANR	884487	Argument	ptr		883095	0					
ANR	884488	Identifier	ptr		883095	0					
ANR	884489	ExpressionStatement	addr = UT64_MAX	1778:3:54251:54266	883095	10	True				
ANR	884490	AssignmentExpression	addr = UT64_MAX		883095	0		=			
ANR	884491	Identifier	addr		883095	0					
ANR	884492	Identifier	UT64_MAX		883095	1					
ANR	884493	SwitchStatement	switch ( i )		883095	11					
ANR	884494	Condition	i	1779:11:54279:54279	883095	0	True				
ANR	884495	Identifier	i		883095	0					
ANR	884496	CompoundStatement		239:14:6487:6487	883095	1					
ANR	884497	Label	case 2 :	1780:3:54287:54293	883095	0	True				
ANR	884498	ExpressionStatement	"sectname = r_str_word_get0 ( ptr , 1 )"	1781:4:54319:54354	883095	1	True				
ANR	884499	AssignmentExpression	"sectname = r_str_word_get0 ( ptr , 1 )"		883095	0		=			
ANR	884500	Identifier	sectname		883095	0					
ANR	884501	CallExpression	"r_str_word_get0 ( ptr , 1 )"		883095	1					
ANR	884502	Callee	r_str_word_get0		883095	0					
ANR	884503	Identifier	r_str_word_get0		883095	0					
ANR	884504	ArgumentList	ptr		883095	1					
ANR	884505	Argument	ptr		883095	0					
ANR	884506	Identifier	ptr		883095	0					
ANR	884507	Argument	1		883095	1					
ANR	884508	PrimaryExpression	1		883095	0					
ANR	884509	Label	case 1 :	1783:3:54379:54385	883095	2	True				
ANR	884510	IfStatement	if ( IS_DIGIT ( * ptr ) )		883095	3					
ANR	884511	Condition	IS_DIGIT ( * ptr )	1784:8:54415:54429	883095	0	True				
ANR	884512	CallExpression	IS_DIGIT ( * ptr )		883095	0					
ANR	884513	Callee	IS_DIGIT		883095	0					
ANR	884514	Identifier	IS_DIGIT		883095	0					
ANR	884515	ArgumentList	* ptr		883095	1					
ANR	884516	Argument	* ptr		883095	0					
ANR	884517	UnaryOperationExpression	* ptr		883095	0					
ANR	884518	UnaryOperator	*		883095	0					
ANR	884519	Identifier	ptr		883095	1					
ANR	884520	CompoundStatement		245:5:6644:6685	883095	1					
ANR	884521	IdentifierDeclStatement	"const char * a0 = r_str_word_get0 ( ptr , 0 ) ;"	1785:5:54439:54480	883095	0	True				
ANR	884522	IdentifierDecl	"* a0 = r_str_word_get0 ( ptr , 0 )"		883095	0					
ANR	884523	IdentifierDeclType	const char *		883095	0					
ANR	884524	Identifier	a0		883095	1					
ANR	884525	AssignmentExpression	"* a0 = r_str_word_get0 ( ptr , 0 )"		883095	2		=			
ANR	884526	Identifier	a0		883095	0					
ANR	884527	CallExpression	"r_str_word_get0 ( ptr , 0 )"		883095	1					
ANR	884528	Callee	r_str_word_get0		883095	0					
ANR	884529	Identifier	r_str_word_get0		883095	0					
ANR	884530	ArgumentList	ptr		883095	1					
ANR	884531	Argument	ptr		883095	0					
ANR	884532	Identifier	ptr		883095	0					
ANR	884533	Argument	0		883095	1					
ANR	884534	PrimaryExpression	0		883095	0					
ANR	884535	ExpressionStatement	"addr = r_num_math ( core -> num , a0 )"	1786:5:54487:54520	883095	1	True				
ANR	884536	AssignmentExpression	"addr = r_num_math ( core -> num , a0 )"		883095	0		=			
ANR	884537	Identifier	addr		883095	0					
ANR	884538	CallExpression	"r_num_math ( core -> num , a0 )"		883095	1					
ANR	884539	Callee	r_num_math		883095	0					
ANR	884540	Identifier	r_num_math		883095	0					
ANR	884541	ArgumentList	core -> num		883095	1					
ANR	884542	Argument	core -> num		883095	0					
ANR	884543	PtrMemberAccess	core -> num		883095	0					
ANR	884544	Identifier	core		883095	0					
ANR	884545	Identifier	num		883095	1					
ANR	884546	Argument	a0		883095	1					
ANR	884547	Identifier	a0		883095	0					
ANR	884548	ElseStatement	else		883095	0					
ANR	884549	CompoundStatement		247:11:6738:6738	883095	0					
ANR	884550	ExpressionStatement	addr = UT64_MAX	1788:5:54540:54555	883095	0	True				
ANR	884551	AssignmentExpression	addr = UT64_MAX		883095	0		=			
ANR	884552	Identifier	addr		883095	0					
ANR	884553	Identifier	UT64_MAX		883095	1					
ANR	884554	IfStatement	if ( ! addr || addr == UT64_MAX )		883095	4					
ANR	884555	Condition	! addr || addr == UT64_MAX	1790:8:54571:54595	883095	0	True				
ANR	884556	OrExpression	! addr || addr == UT64_MAX		883095	0		||			
ANR	884557	UnaryOperationExpression	! addr		883095	0					
ANR	884558	UnaryOperator	!		883095	0					
ANR	884559	Identifier	addr		883095	1					
ANR	884560	EqualityExpression	addr == UT64_MAX		883095	1		==			
ANR	884561	Identifier	addr		883095	0					
ANR	884562	Identifier	UT64_MAX		883095	1					
ANR	884563	CompoundStatement		250:35:6803:6803	883095	1					
ANR	884564	ExpressionStatement	"libname = r_str_word_get0 ( ptr , 0 )"	1791:5:54605:54639	883095	0	True				
ANR	884565	AssignmentExpression	"libname = r_str_word_get0 ( ptr , 0 )"		883095	0		=			
ANR	884566	Identifier	libname		883095	0					
ANR	884567	CallExpression	"r_str_word_get0 ( ptr , 0 )"		883095	1					
ANR	884568	Callee	r_str_word_get0		883095	0					
ANR	884569	Identifier	r_str_word_get0		883095	0					
ANR	884570	ArgumentList	ptr		883095	1					
ANR	884571	Argument	ptr		883095	0					
ANR	884572	Identifier	ptr		883095	0					
ANR	884573	Argument	0		883095	1					
ANR	884574	PrimaryExpression	0		883095	0					
ANR	884575	BreakStatement	break ;	1793:4:54651:54656	883095	5	True				
ANR	884576	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1795:3:54666:54694	883095	12	True				
ANR	884577	CallExpression	r_debug_map_sync ( core -> dbg )		883095	0					
ANR	884578	Callee	r_debug_map_sync		883095	0					
ANR	884579	Identifier	r_debug_map_sync		883095	0					
ANR	884580	ArgumentList	core -> dbg		883095	1					
ANR	884581	Argument	core -> dbg		883095	0					
ANR	884582	PtrMemberAccess	core -> dbg		883095	0					
ANR	884583	Identifier	core		883095	0					
ANR	884584	Identifier	dbg		883095	1					
ANR	884585	IdentifierDeclStatement	RList * list = r_debug_modules_list ( core -> dbg ) ;	1796:3:54729:54775	883095	13	True				
ANR	884586	IdentifierDecl	* list = r_debug_modules_list ( core -> dbg )		883095	0					
ANR	884587	IdentifierDeclType	RList *		883095	0					
ANR	884588	Identifier	list		883095	1					
ANR	884589	AssignmentExpression	* list = r_debug_modules_list ( core -> dbg )		883095	2		=			
ANR	884590	Identifier	list		883095	0					
ANR	884591	CallExpression	r_debug_modules_list ( core -> dbg )		883095	1					
ANR	884592	Callee	r_debug_modules_list		883095	0					
ANR	884593	Identifier	r_debug_modules_list		883095	0					
ANR	884594	ArgumentList	core -> dbg		883095	1					
ANR	884595	Argument	core -> dbg		883095	0					
ANR	884596	PtrMemberAccess	core -> dbg		883095	0					
ANR	884597	Identifier	core		883095	0					
ANR	884598	Identifier	dbg		883095	1					
ANR	884599	Statement	r_list_foreach	1797:3:54780:54793	883095	14	True				
ANR	884600	Statement	(	1797:18:54795:54795	883095	15	True				
ANR	884601	Statement	list	1797:19:54796:54799	883095	16	True				
ANR	884602	Statement	","	1797:23:54800:54800	883095	17	True				
ANR	884603	Statement	iter	1797:25:54802:54805	883095	18	True				
ANR	884604	Statement	","	1797:29:54806:54806	883095	19	True				
ANR	884605	Statement	map	1797:31:54808:54810	883095	20	True				
ANR	884606	Statement	)	1797:34:54811:54811	883095	21	True				
ANR	884607	CompoundStatement		257:36:7018:7018	883095	22					
ANR	884608	IfStatement	"if ( ( ! libname || ( addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end ) ) || ( libname != NULL && ( strstr ( map -> name , libname ) ) ) ) )"		883095	0					
ANR	884609	Condition	"! libname || ( addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end ) ) || ( libname != NULL && ( strstr ( map -> name , libname ) ) )"	1798:8:54823:54967	883095	0	True				
ANR	884610	OrExpression	"! libname || ( addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end ) ) || ( libname != NULL && ( strstr ( map -> name , libname ) ) )"		883095	0		||			
ANR	884611	UnaryOperationExpression	! libname		883095	0					
ANR	884612	UnaryOperator	!		883095	0					
ANR	884613	Identifier	libname		883095	1					
ANR	884614	OrExpression	"( addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end ) ) || ( libname != NULL && ( strstr ( map -> name , libname ) ) )"		883095	1		||			
ANR	884615	AndExpression	addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end )		883095	0		&&			
ANR	884616	EqualityExpression	addr != UT64_MAX		883095	0		!=			
ANR	884617	Identifier	addr		883095	0					
ANR	884618	Identifier	UT64_MAX		883095	1					
ANR	884619	AndExpression	addr >= map -> addr && addr < map -> addr_end		883095	1		&&			
ANR	884620	RelationalExpression	addr >= map -> addr		883095	0		>=			
ANR	884621	Identifier	addr		883095	0					
ANR	884622	PtrMemberAccess	map -> addr		883095	1					
ANR	884623	Identifier	map		883095	0					
ANR	884624	Identifier	addr		883095	1					
ANR	884625	RelationalExpression	addr < map -> addr_end		883095	1		<			
ANR	884626	Identifier	addr		883095	0					
ANR	884627	PtrMemberAccess	map -> addr_end		883095	1					
ANR	884628	Identifier	map		883095	0					
ANR	884629	Identifier	addr_end		883095	1					
ANR	884630	AndExpression	"libname != NULL && ( strstr ( map -> name , libname ) )"		883095	1		&&			
ANR	884631	EqualityExpression	libname != NULL		883095	0		!=			
ANR	884632	Identifier	libname		883095	0					
ANR	884633	Identifier	NULL		883095	1					
ANR	884634	CallExpression	"strstr ( map -> name , libname )"		883095	1					
ANR	884635	Callee	strstr		883095	0					
ANR	884636	Identifier	strstr		883095	0					
ANR	884637	ArgumentList	map -> name		883095	1					
ANR	884638	Argument	map -> name		883095	0					
ANR	884639	PtrMemberAccess	map -> name		883095	0					
ANR	884640	Identifier	map		883095	0					
ANR	884641	Identifier	name		883095	1					
ANR	884642	Argument	libname		883095	1					
ANR	884643	Identifier	libname		883095	0					
ANR	884644	CompoundStatement		265:5:7344:7378	883095	1					
ANR	884645	ExpressionStatement	baddr = map -> addr	1801:5:54977:54994	883095	0	True				
ANR	884646	AssignmentExpression	baddr = map -> addr		883095	0		=			
ANR	884647	Identifier	baddr		883095	0					
ANR	884648	PtrMemberAccess	map -> addr		883095	1					
ANR	884649	Identifier	map		883095	0					
ANR	884650	Identifier	addr		883095	1					
ANR	884651	IdentifierDeclStatement	char * res ;	1802:5:55001:55010	883095	1	True				
ANR	884652	IdentifierDecl	* res		883095	0					
ANR	884653	IdentifierDeclType	char *		883095	0					
ANR	884654	Identifier	res		883095	1					
ANR	884655	IdentifierDeclStatement	const char * file = map -> file ? map -> file : map -> name ;	1803:5:55017:55067	883095	2	True				
ANR	884656	IdentifierDecl	* file = map -> file ? map -> file : map -> name		883095	0					
ANR	884657	IdentifierDeclType	const char *		883095	0					
ANR	884658	Identifier	file		883095	1					
ANR	884659	AssignmentExpression	* file = map -> file ? map -> file : map -> name		883095	2		=			
ANR	884660	Identifier	file		883095	0					
ANR	884661	ConditionalExpression	map -> file ? map -> file : map -> name		883095	1					
ANR	884662	Condition	map -> file		883095	0					
ANR	884663	PtrMemberAccess	map -> file		883095	0					
ANR	884664	Identifier	map		883095	0					
ANR	884665	Identifier	file		883095	1					
ANR	884666	PtrMemberAccess	map -> file		883095	1					
ANR	884667	Identifier	map		883095	0					
ANR	884668	Identifier	file		883095	1					
ANR	884669	PtrMemberAccess	map -> name		883095	2					
ANR	884670	Identifier	map		883095	0					
ANR	884671	Identifier	name		883095	1					
ANR	884672	IdentifierDeclStatement	char * name = r_str_escape ( ( char * ) r_file_basename ( file ) ) ;	1804:5:55074:55132	883095	3	True				
ANR	884673	IdentifierDecl	* name = r_str_escape ( ( char * ) r_file_basename ( file ) )		883095	0					
ANR	884674	IdentifierDeclType	char *		883095	0					
ANR	884675	Identifier	name		883095	1					
ANR	884676	AssignmentExpression	* name = r_str_escape ( ( char * ) r_file_basename ( file ) )		883095	2		=			
ANR	884677	Identifier	name		883095	0					
ANR	884678	CallExpression	r_str_escape ( ( char * ) r_file_basename ( file ) )		883095	1					
ANR	884679	Callee	r_str_escape		883095	0					
ANR	884680	Identifier	r_str_escape		883095	0					
ANR	884681	ArgumentList	( char * ) r_file_basename ( file )		883095	1					
ANR	884682	Argument	( char * ) r_file_basename ( file )		883095	0					
ANR	884683	CastExpression	( char * ) r_file_basename ( file )		883095	0					
ANR	884684	CastTarget	char *		883095	0					
ANR	884685	CallExpression	r_file_basename ( file )		883095	1					
ANR	884686	Callee	r_file_basename		883095	0					
ANR	884687	Identifier	r_file_basename		883095	0					
ANR	884688	ArgumentList	file		883095	1					
ANR	884689	Argument	file		883095	0					
ANR	884690	Identifier	file		883095	0					
ANR	884691	IdentifierDeclStatement	char * filesc = r_str_escape ( file ) ;	1805:5:55139:55173	883095	4	True				
ANR	884692	IdentifierDecl	* filesc = r_str_escape ( file )		883095	0					
ANR	884693	IdentifierDeclType	char *		883095	0					
ANR	884694	Identifier	filesc		883095	1					
ANR	884695	AssignmentExpression	* filesc = r_str_escape ( file )		883095	2		=			
ANR	884696	Identifier	filesc		883095	0					
ANR	884697	CallExpression	r_str_escape ( file )		883095	1					
ANR	884698	Callee	r_str_escape		883095	0					
ANR	884699	Identifier	r_str_escape		883095	0					
ANR	884700	ArgumentList	file		883095	1					
ANR	884701	Argument	file		883095	0					
ANR	884702	Identifier	file		883095	0					
ANR	884703	IfStatement	if ( sectname )		883095	5					
ANR	884704	Condition	sectname	1807:9:55228:55235	883095	0	True				
ANR	884705	Identifier	sectname		883095	0					
ANR	884706	CompoundStatement		268:6:7451:7487	883095	1					
ANR	884707	IdentifierDeclStatement	char * sect = r_str_escape ( sectname ) ;	1808:6:55246:55282	883095	0	True				
ANR	884708	IdentifierDecl	* sect = r_str_escape ( sectname )		883095	0					
ANR	884709	IdentifierDeclType	char *		883095	0					
ANR	884710	Identifier	sect		883095	1					
ANR	884711	AssignmentExpression	* sect = r_str_escape ( sectname )		883095	2		=			
ANR	884712	Identifier	sect		883095	0					
ANR	884713	CallExpression	r_str_escape ( sectname )		883095	1					
ANR	884714	Callee	r_str_escape		883095	0					
ANR	884715	Identifier	r_str_escape		883095	0					
ANR	884716	ArgumentList	sectname		883095	1					
ANR	884717	Argument	sectname		883095	0					
ANR	884718	Identifier	sectname		883095	0					
ANR	884719	Statement	res	1809:6:55290:55292	883095	1	True				
ANR	884720	Statement	=	1809:11:55295:55295	883095	2	True				
ANR	884721	Statement	r_sys_cmd_strf	1809:13:55297:55310	883095	3	True				
ANR	884722	Statement	(	1809:28:55312:55312	883095	4	True				
ANR	884723	Statement	"""env RABIN2_PREFIX=\\""%s\\"" rabin2 %s-B 0x%08"""	1809:29:55313:55356	883095	5	True				
ANR	884724	Statement	PFMT64x	1810:7:55365:55371	883095	6	True				
ANR	884725	Statement	""" -S \\""%s\\"" | grep \\""%s\\"""""	1810:14:55372:55397	883095	7	True				
ANR	884726	Statement	","	1810:40:55398:55398	883095	8	True				
ANR	884727	Statement	name	1810:42:55400:55403	883095	9	True				
ANR	884728	Statement	","	1810:46:55404:55404	883095	10	True				
ANR	884729	Statement	mode	1810:48:55406:55409	883095	11	True				
ANR	884730	Statement	","	1810:52:55410:55410	883095	12	True				
ANR	884731	Statement	baddr	1810:54:55412:55416	883095	13	True				
ANR	884732	Statement	","	1810:59:55417:55417	883095	14	True				
ANR	884733	Statement	filesc	1810:61:55419:55424	883095	15	True				
ANR	884734	Statement	","	1810:67:55425:55425	883095	16	True				
ANR	884735	Statement	sect	1810:69:55427:55430	883095	17	True				
ANR	884736	Statement	)	1810:73:55431:55431	883095	18	True				
ANR	884737	ExpressionStatement		1810:74:55432:55432	883095	19	True				
ANR	884738	ExpressionStatement	free ( sect )	1811:6:55440:55451	883095	20	True				
ANR	884739	CallExpression	free ( sect )		883095	0					
ANR	884740	Callee	free		883095	0					
ANR	884741	Identifier	free		883095	0					
ANR	884742	ArgumentList	sect		883095	1					
ANR	884743	Argument	sect		883095	0					
ANR	884744	Identifier	sect		883095	0					
ANR	884745	ElseStatement	else		883095	0					
ANR	884746	CompoundStatement		272:12:7670:7670	883095	0					
ANR	884747	Statement	res	1813:6:55473:55475	883095	0	True				
ANR	884748	Statement	=	1813:10:55477:55477	883095	1	True				
ANR	884749	Statement	r_sys_cmd_strf	1813:12:55479:55492	883095	2	True				
ANR	884750	Statement	(	1813:27:55494:55494	883095	3	True				
ANR	884751	Statement	"""env RABIN2_PREFIX=\\""%s\\"" rabin2 %s-B 0x%08"""	1813:28:55495:55538	883095	4	True				
ANR	884752	Statement	PFMT64x	1814:7:55547:55553	883095	5	True				
ANR	884753	Statement	""" -S \\""%s\\"""""	1814:14:55554:55565	883095	6	True				
ANR	884754	Statement	","	1814:26:55566:55566	883095	7	True				
ANR	884755	Statement	name	1814:28:55568:55571	883095	8	True				
ANR	884756	Statement	","	1814:32:55572:55572	883095	9	True				
ANR	884757	Statement	mode	1814:34:55574:55577	883095	10	True				
ANR	884758	Statement	","	1814:38:55578:55578	883095	11	True				
ANR	884759	Statement	baddr	1814:40:55580:55584	883095	12	True				
ANR	884760	Statement	","	1814:45:55585:55585	883095	13	True				
ANR	884761	Statement	filesc	1814:47:55587:55592	883095	14	True				
ANR	884762	Statement	)	1814:53:55593:55593	883095	15	True				
ANR	884763	ExpressionStatement		1814:54:55594:55594	883095	16	True				
ANR	884764	ExpressionStatement	free ( filesc )	1816:5:55608:55621	883095	6	True				
ANR	884765	CallExpression	free ( filesc )		883095	0					
ANR	884766	Callee	free		883095	0					
ANR	884767	Identifier	free		883095	0					
ANR	884768	ArgumentList	filesc		883095	1					
ANR	884769	Argument	filesc		883095	0					
ANR	884770	Identifier	filesc		883095	0					
ANR	884771	ExpressionStatement	r_cons_println ( res )	1817:5:55628:55648	883095	7	True				
ANR	884772	CallExpression	r_cons_println ( res )		883095	0					
ANR	884773	Callee	r_cons_println		883095	0					
ANR	884774	Identifier	r_cons_println		883095	0					
ANR	884775	ArgumentList	res		883095	1					
ANR	884776	Argument	res		883095	0					
ANR	884777	Identifier	res		883095	0					
ANR	884778	ExpressionStatement	free ( name )	1818:5:55655:55665	883095	8	True				
ANR	884779	CallExpression	free ( name )		883095	0					
ANR	884780	Callee	free		883095	0					
ANR	884781	Identifier	free		883095	0					
ANR	884782	ArgumentList	name		883095	1					
ANR	884783	Argument	name		883095	0					
ANR	884784	Identifier	name		883095	0					
ANR	884785	ExpressionStatement	free ( res )	1819:5:55672:55682	883095	9	True				
ANR	884786	CallExpression	free ( res )		883095	0					
ANR	884787	Callee	free		883095	0					
ANR	884788	Identifier	free		883095	0					
ANR	884789	ArgumentList	res		883095	1					
ANR	884790	Argument	res		883095	0					
ANR	884791	Identifier	res		883095	0					
ANR	884792	IfStatement	if ( libname || addr != UT64_MAX )		883095	10					
ANR	884793	Condition	libname || addr != UT64_MAX	1820:9:55693:55719	883095	0	True				
ANR	884794	OrExpression	libname || addr != UT64_MAX		883095	0		||			
ANR	884795	Identifier	libname		883095	0					
ANR	884796	EqualityExpression	addr != UT64_MAX		883095	1		!=			
ANR	884797	Identifier	addr		883095	0					
ANR	884798	Identifier	UT64_MAX		883095	1					
ANR	884799	CompoundStatement		280:38:7927:7927	883095	1					
ANR	884800	BreakStatement	break ;	1821:6:55760:55765	883095	0	True				
ANR	884801	ExpressionStatement	free ( ptr )	1825:3:55788:55798	883095	23	True				
ANR	884802	CallExpression	free ( ptr )		883095	0					
ANR	884803	Callee	free		883095	0					
ANR	884804	Identifier	free		883095	0					
ANR	884805	ArgumentList	ptr		883095	1					
ANR	884806	Argument	ptr		883095	0					
ANR	884807	Identifier	ptr		883095	0					
ANR	884808	BreakStatement	break ;	1827:2:55806:55811	883095	41	True				
ANR	884809	Label	case ' ' :	1828:1:55814:55822	883095	42	True				
ANR	884810	CompoundStatement		291:3:8058:8091	883095	43					
ANR	884811	IdentifierDeclStatement	int size ;	1830:3:55840:55848	883095	0	True				
ANR	884812	IdentifierDecl	size		883095	0					
ANR	884813	IdentifierDeclType	int		883095	0					
ANR	884814	Identifier	size		883095	1					
ANR	884815	IdentifierDeclStatement	"char * p = strchr ( input + 2 , ' ' ) ;"	1831:3:55853:55886	883095	1	True				
ANR	884816	IdentifierDecl	"* p = strchr ( input + 2 , ' ' )"		883095	0					
ANR	884817	IdentifierDeclType	char *		883095	0					
ANR	884818	Identifier	p		883095	1					
ANR	884819	AssignmentExpression	"* p = strchr ( input + 2 , ' ' )"		883095	2		=			
ANR	884820	Identifier	p		883095	0					
ANR	884821	CallExpression	"strchr ( input + 2 , ' ' )"		883095	1					
ANR	884822	Callee	strchr		883095	0					
ANR	884823	Identifier	strchr		883095	0					
ANR	884824	ArgumentList	input + 2		883095	1					
ANR	884825	Argument	input + 2		883095	0					
ANR	884826	AdditiveExpression	input + 2		883095	0		+			
ANR	884827	Identifier	input		883095	0					
ANR	884828	PrimaryExpression	2		883095	1					
ANR	884829	Argument	' '		883095	1					
ANR	884830	PrimaryExpression	' '		883095	0					
ANR	884831	IfStatement	if ( p )		883095	2					
ANR	884832	Condition	p	1832:7:55895:55895	883095	0	True				
ANR	884833	Identifier	p		883095	0					
ANR	884834	CompoundStatement		292:10:8103:8103	883095	1					
ANR	884835	ExpressionStatement	* p ++ = 0	1833:4:55904:55912	883095	0	True				
ANR	884836	AssignmentExpression	* p ++ = 0		883095	0		=			
ANR	884837	UnaryOperationExpression	* p ++		883095	0					
ANR	884838	UnaryOperator	*		883095	0					
ANR	884839	PostIncDecOperationExpression	p ++		883095	1					
ANR	884840	Identifier	p		883095	0					
ANR	884841	IncDec	++		883095	1					
ANR	884842	PrimaryExpression	0		883095	1					
ANR	884843	ExpressionStatement	"addr = r_num_math ( core -> num , input + 1 )"	1834:4:55918:55958	883095	1	True				
ANR	884844	AssignmentExpression	"addr = r_num_math ( core -> num , input + 1 )"		883095	0		=			
ANR	884845	Identifier	addr		883095	0					
ANR	884846	CallExpression	"r_num_math ( core -> num , input + 1 )"		883095	1					
ANR	884847	Callee	r_num_math		883095	0					
ANR	884848	Identifier	r_num_math		883095	0					
ANR	884849	ArgumentList	core -> num		883095	1					
ANR	884850	Argument	core -> num		883095	0					
ANR	884851	PtrMemberAccess	core -> num		883095	0					
ANR	884852	Identifier	core		883095	0					
ANR	884853	Identifier	num		883095	1					
ANR	884854	Argument	input + 1		883095	1					
ANR	884855	AdditiveExpression	input + 1		883095	0		+			
ANR	884856	Identifier	input		883095	0					
ANR	884857	PrimaryExpression	1		883095	1					
ANR	884858	ExpressionStatement	"size = r_num_math ( core -> num , p )"	1835:4:55964:55996	883095	2	True				
ANR	884859	AssignmentExpression	"size = r_num_math ( core -> num , p )"		883095	0		=			
ANR	884860	Identifier	size		883095	0					
ANR	884861	CallExpression	"r_num_math ( core -> num , p )"		883095	1					
ANR	884862	Callee	r_num_math		883095	0					
ANR	884863	Identifier	r_num_math		883095	0					
ANR	884864	ArgumentList	core -> num		883095	1					
ANR	884865	Argument	core -> num		883095	0					
ANR	884866	PtrMemberAccess	core -> num		883095	0					
ANR	884867	Identifier	core		883095	0					
ANR	884868	Identifier	num		883095	1					
ANR	884869	Argument	p		883095	1					
ANR	884870	Identifier	p		883095	0					
ANR	884871	ExpressionStatement	"r_debug_map_alloc ( core -> dbg , addr , size , false )"	1836:4:56002:56050	883095	3	True				
ANR	884872	CallExpression	"r_debug_map_alloc ( core -> dbg , addr , size , false )"		883095	0					
ANR	884873	Callee	r_debug_map_alloc		883095	0					
ANR	884874	Identifier	r_debug_map_alloc		883095	0					
ANR	884875	ArgumentList	core -> dbg		883095	1					
ANR	884876	Argument	core -> dbg		883095	0					
ANR	884877	PtrMemberAccess	core -> dbg		883095	0					
ANR	884878	Identifier	core		883095	0					
ANR	884879	Identifier	dbg		883095	1					
ANR	884880	Argument	addr		883095	1					
ANR	884881	Identifier	addr		883095	0					
ANR	884882	Argument	size		883095	2					
ANR	884883	Identifier	size		883095	0					
ANR	884884	Argument	false		883095	3					
ANR	884885	Identifier	false		883095	0					
ANR	884886	ElseStatement	else		883095	0					
ANR	884887	CompoundStatement		297:10:8267:8267	883095	0					
ANR	884888	ExpressionStatement	"eprintf ( ""Usage: dm addr size\\n"" )"	1838:4:56068:56101	883095	0	True				
ANR	884889	CallExpression	"eprintf ( ""Usage: dm addr size\\n"" )"		883095	0					
ANR	884890	Callee	eprintf		883095	0					
ANR	884891	Identifier	eprintf		883095	0					
ANR	884892	ArgumentList	"""Usage: dm addr size\\n"""		883095	1					
ANR	884893	Argument	"""Usage: dm addr size\\n"""		883095	0					
ANR	884894	PrimaryExpression	"""Usage: dm addr size\\n"""		883095	0					
ANR	884895	ReturnStatement	return false ;	1839:4:56107:56119	883095	1	True				
ANR	884896	Identifier	false		883095	0					
ANR	884897	BreakStatement	break ;	1842:2:56132:56137	883095	44	True				
ANR	884898	Label	case '-' :	1843:1:56140:56148	883095	45	True				
ANR	884899	IfStatement	if ( input [ 1 ] != ' ' )		883095	46					
ANR	884900	Condition	input [ 1 ] != ' '	1844:6:56165:56179	883095	0	True				
ANR	884901	EqualityExpression	input [ 1 ] != ' '		883095	0		!=			
ANR	884902	ArrayIndexing	input [ 1 ]		883095	0					
ANR	884903	Identifier	input		883095	0					
ANR	884904	PrimaryExpression	1		883095	1					
ANR	884905	PrimaryExpression	' '		883095	1					
ANR	884906	CompoundStatement		304:23:8387:8387	883095	1					
ANR	884907	ExpressionStatement	"eprintf ( ""|ERROR| Usage: dm- [addr]\\n"" )"	1845:3:56187:56226	883095	0	True				
ANR	884908	CallExpression	"eprintf ( ""|ERROR| Usage: dm- [addr]\\n"" )"		883095	0					
ANR	884909	Callee	eprintf		883095	0					
ANR	884910	Identifier	eprintf		883095	0					
ANR	884911	ArgumentList	"""|ERROR| Usage: dm- [addr]\\n"""		883095	1					
ANR	884912	Argument	"""|ERROR| Usage: dm- [addr]\\n"""		883095	0					
ANR	884913	PrimaryExpression	"""|ERROR| Usage: dm- [addr]\\n"""		883095	0					
ANR	884914	BreakStatement	break ;	1846:3:56231:56236	883095	1	True				
ANR	884915	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	1848:2:56244:56284	883095	47	True				
ANR	884916	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		883095	0		=			
ANR	884917	Identifier	addr		883095	0					
ANR	884918	CallExpression	"r_num_math ( core -> num , input + 2 )"		883095	1					
ANR	884919	Callee	r_num_math		883095	0					
ANR	884920	Identifier	r_num_math		883095	0					
ANR	884921	ArgumentList	core -> num		883095	1					
ANR	884922	Argument	core -> num		883095	0					
ANR	884923	PtrMemberAccess	core -> num		883095	0					
ANR	884924	Identifier	core		883095	0					
ANR	884925	Identifier	num		883095	1					
ANR	884926	Argument	input + 2		883095	1					
ANR	884927	AdditiveExpression	input + 2		883095	0		+			
ANR	884928	Identifier	input		883095	0					
ANR	884929	PrimaryExpression	2		883095	1					
ANR	884930	Statement	r_list_foreach	1849:2:56288:56301	883095	48	True				
ANR	884931	Statement	(	1849:17:56303:56303	883095	49	True				
ANR	884932	Statement	core	1849:18:56304:56307	883095	50	True				
ANR	884933	Statement	->	1849:22:56308:56309	883095	51	True				
ANR	884934	Statement	dbg	1849:24:56310:56312	883095	52	True				
ANR	884935	Statement	->	1849:27:56313:56314	883095	53	True				
ANR	884936	Statement	maps	1849:29:56315:56318	883095	54	True				
ANR	884937	Statement	","	1849:33:56319:56319	883095	55	True				
ANR	884938	Statement	iter	1849:35:56321:56324	883095	56	True				
ANR	884939	Statement	","	1849:39:56325:56325	883095	57	True				
ANR	884940	Statement	map	1849:41:56327:56329	883095	58	True				
ANR	884941	Statement	)	1849:44:56330:56330	883095	59	True				
ANR	884942	CompoundStatement		309:46:8537:8537	883095	60					
ANR	884943	IfStatement	if ( addr >= map -> addr && addr < map -> addr_end )		883095	0					
ANR	884944	Condition	addr >= map -> addr && addr < map -> addr_end	1850:7:56341:56381	883095	0	True				
ANR	884945	AndExpression	addr >= map -> addr && addr < map -> addr_end		883095	0		&&			
ANR	884946	RelationalExpression	addr >= map -> addr		883095	0		>=			
ANR	884947	Identifier	addr		883095	0					
ANR	884948	PtrMemberAccess	map -> addr		883095	1					
ANR	884949	Identifier	map		883095	0					
ANR	884950	Identifier	addr		883095	1					
ANR	884951	RelationalExpression	addr < map -> addr_end		883095	1		<			
ANR	884952	Identifier	addr		883095	0					
ANR	884953	PtrMemberAccess	map -> addr_end		883095	1					
ANR	884954	Identifier	map		883095	0					
ANR	884955	Identifier	addr_end		883095	1					
ANR	884956	CompoundStatement		310:50:8589:8589	883095	1					
ANR	884957	ExpressionStatement	"r_debug_map_dealloc ( core -> dbg , map )"	1851:4:56390:56425	883095	0	True				
ANR	884958	CallExpression	"r_debug_map_dealloc ( core -> dbg , map )"		883095	0					
ANR	884959	Callee	r_debug_map_dealloc		883095	0					
ANR	884960	Identifier	r_debug_map_dealloc		883095	0					
ANR	884961	ArgumentList	core -> dbg		883095	1					
ANR	884962	Argument	core -> dbg		883095	0					
ANR	884963	PtrMemberAccess	core -> dbg		883095	0					
ANR	884964	Identifier	core		883095	0					
ANR	884965	Identifier	dbg		883095	1					
ANR	884966	Argument	map		883095	1					
ANR	884967	Identifier	map		883095	0					
ANR	884968	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1852:4:56431:56459	883095	1	True				
ANR	884969	CallExpression	r_debug_map_sync ( core -> dbg )		883095	0					
ANR	884970	Callee	r_debug_map_sync		883095	0					
ANR	884971	Identifier	r_debug_map_sync		883095	0					
ANR	884972	ArgumentList	core -> dbg		883095	1					
ANR	884973	Argument	core -> dbg		883095	0					
ANR	884974	PtrMemberAccess	core -> dbg		883095	0					
ANR	884975	Identifier	core		883095	0					
ANR	884976	Identifier	dbg		883095	1					
ANR	884977	ReturnStatement	return true ;	1853:4:56465:56476	883095	2	True				
ANR	884978	Identifier	true		883095	0					
ANR	884979	ExpressionStatement	"eprintf ( ""The address doesn't match with any map.\\n"" )"	1856:2:56489:56542	883095	61	True				
ANR	884980	CallExpression	"eprintf ( ""The address doesn't match with any map.\\n"" )"		883095	0					
ANR	884981	Callee	eprintf		883095	0					
ANR	884982	Identifier	eprintf		883095	0					
ANR	884983	ArgumentList	"""The address doesn't match with any map.\\n"""		883095	1					
ANR	884984	Argument	"""The address doesn't match with any map.\\n"""		883095	0					
ANR	884985	PrimaryExpression	"""The address doesn't match with any map.\\n"""		883095	0					
ANR	884986	BreakStatement	break ;	1857:2:56546:56551	883095	62	True				
ANR	884987	Label	case 'L' :	1858:1:56554:56562	883095	63	True				
ANR	884988	CompoundStatement		321:3:8798:8831	883095	64					
ANR	884989	IdentifierDeclStatement	int size ;	1860:3:56580:56588	883095	0	True				
ANR	884990	IdentifierDecl	size		883095	0					
ANR	884991	IdentifierDeclType	int		883095	0					
ANR	884992	Identifier	size		883095	1					
ANR	884993	IdentifierDeclStatement	"char * p = strchr ( input + 2 , ' ' ) ;"	1861:3:56593:56626	883095	1	True				
ANR	884994	IdentifierDecl	"* p = strchr ( input + 2 , ' ' )"		883095	0					
ANR	884995	IdentifierDeclType	char *		883095	0					
ANR	884996	Identifier	p		883095	1					
ANR	884997	AssignmentExpression	"* p = strchr ( input + 2 , ' ' )"		883095	2		=			
ANR	884998	Identifier	p		883095	0					
ANR	884999	CallExpression	"strchr ( input + 2 , ' ' )"		883095	1					
ANR	885000	Callee	strchr		883095	0					
ANR	885001	Identifier	strchr		883095	0					
ANR	885002	ArgumentList	input + 2		883095	1					
ANR	885003	Argument	input + 2		883095	0					
ANR	885004	AdditiveExpression	input + 2		883095	0		+			
ANR	885005	Identifier	input		883095	0					
ANR	885006	PrimaryExpression	2		883095	1					
ANR	885007	Argument	' '		883095	1					
ANR	885008	PrimaryExpression	' '		883095	0					
ANR	885009	IfStatement	if ( p )		883095	2					
ANR	885010	Condition	p	1862:7:56635:56635	883095	0	True				
ANR	885011	Identifier	p		883095	0					
ANR	885012	CompoundStatement		322:10:8843:8843	883095	1					
ANR	885013	ExpressionStatement	* p ++ = 0	1863:4:56644:56652	883095	0	True				
ANR	885014	AssignmentExpression	* p ++ = 0		883095	0		=			
ANR	885015	UnaryOperationExpression	* p ++		883095	0					
ANR	885016	UnaryOperator	*		883095	0					
ANR	885017	PostIncDecOperationExpression	p ++		883095	1					
ANR	885018	Identifier	p		883095	0					
ANR	885019	IncDec	++		883095	1					
ANR	885020	PrimaryExpression	0		883095	1					
ANR	885021	ExpressionStatement	"addr = r_num_math ( core -> num , input + 1 )"	1864:4:56658:56698	883095	1	True				
ANR	885022	AssignmentExpression	"addr = r_num_math ( core -> num , input + 1 )"		883095	0		=			
ANR	885023	Identifier	addr		883095	0					
ANR	885024	CallExpression	"r_num_math ( core -> num , input + 1 )"		883095	1					
ANR	885025	Callee	r_num_math		883095	0					
ANR	885026	Identifier	r_num_math		883095	0					
ANR	885027	ArgumentList	core -> num		883095	1					
ANR	885028	Argument	core -> num		883095	0					
ANR	885029	PtrMemberAccess	core -> num		883095	0					
ANR	885030	Identifier	core		883095	0					
ANR	885031	Identifier	num		883095	1					
ANR	885032	Argument	input + 1		883095	1					
ANR	885033	AdditiveExpression	input + 1		883095	0		+			
ANR	885034	Identifier	input		883095	0					
ANR	885035	PrimaryExpression	1		883095	1					
ANR	885036	ExpressionStatement	"size = r_num_math ( core -> num , p )"	1865:4:56704:56736	883095	2	True				
ANR	885037	AssignmentExpression	"size = r_num_math ( core -> num , p )"		883095	0		=			
ANR	885038	Identifier	size		883095	0					
ANR	885039	CallExpression	"r_num_math ( core -> num , p )"		883095	1					
ANR	885040	Callee	r_num_math		883095	0					
ANR	885041	Identifier	r_num_math		883095	0					
ANR	885042	ArgumentList	core -> num		883095	1					
ANR	885043	Argument	core -> num		883095	0					
ANR	885044	PtrMemberAccess	core -> num		883095	0					
ANR	885045	Identifier	core		883095	0					
ANR	885046	Identifier	num		883095	1					
ANR	885047	Argument	p		883095	1					
ANR	885048	Identifier	p		883095	0					
ANR	885049	ExpressionStatement	"r_debug_map_alloc ( core -> dbg , addr , size , true )"	1866:4:56742:56789	883095	3	True				
ANR	885050	CallExpression	"r_debug_map_alloc ( core -> dbg , addr , size , true )"		883095	0					
ANR	885051	Callee	r_debug_map_alloc		883095	0					
ANR	885052	Identifier	r_debug_map_alloc		883095	0					
ANR	885053	ArgumentList	core -> dbg		883095	1					
ANR	885054	Argument	core -> dbg		883095	0					
ANR	885055	PtrMemberAccess	core -> dbg		883095	0					
ANR	885056	Identifier	core		883095	0					
ANR	885057	Identifier	dbg		883095	1					
ANR	885058	Argument	addr		883095	1					
ANR	885059	Identifier	addr		883095	0					
ANR	885060	Argument	size		883095	2					
ANR	885061	Identifier	size		883095	0					
ANR	885062	Argument	true		883095	3					
ANR	885063	Identifier	true		883095	0					
ANR	885064	ElseStatement	else		883095	0					
ANR	885065	CompoundStatement		327:10:9006:9006	883095	0					
ANR	885066	ExpressionStatement	"eprintf ( ""Usage: dmL addr size\\n"" )"	1868:4:56807:56841	883095	0	True				
ANR	885067	CallExpression	"eprintf ( ""Usage: dmL addr size\\n"" )"		883095	0					
ANR	885068	Callee	eprintf		883095	0					
ANR	885069	Identifier	eprintf		883095	0					
ANR	885070	ArgumentList	"""Usage: dmL addr size\\n"""		883095	1					
ANR	885071	Argument	"""Usage: dmL addr size\\n"""		883095	0					
ANR	885072	PrimaryExpression	"""Usage: dmL addr size\\n"""		883095	0					
ANR	885073	ReturnStatement	return false ;	1869:4:56847:56859	883095	1	True				
ANR	885074	Identifier	false		883095	0					
ANR	885075	BreakStatement	break ;	1872:2:56872:56877	883095	65	True				
ANR	885076	Label	case '\\0' :	1873:1:56880:56889	883095	66	True				
ANR	885077	Label	case '*' :	1874:1:56900:56908	883095	67	True				
ANR	885078	Label	case 'j' :	1875:1:56920:56928	883095	68	True				
ANR	885079	Label	case 'q' :	1876:1:56940:56948	883095	69	True				
ANR	885080	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1877:2:56961:56989	883095	70	True				
ANR	885081	CallExpression	r_debug_map_sync ( core -> dbg )		883095	0					
ANR	885082	Callee	r_debug_map_sync		883095	0					
ANR	885083	Identifier	r_debug_map_sync		883095	0					
ANR	885084	ArgumentList	core -> dbg		883095	1					
ANR	885085	Argument	core -> dbg		883095	0					
ANR	885086	PtrMemberAccess	core -> dbg		883095	0					
ANR	885087	Identifier	core		883095	0					
ANR	885088	Identifier	dbg		883095	1					
ANR	885089	ExpressionStatement	"r_debug_map_list ( core -> dbg , core -> offset , input )"	1878:2:57023:57072	883095	71	True				
ANR	885090	CallExpression	"r_debug_map_list ( core -> dbg , core -> offset , input )"		883095	0					
ANR	885091	Callee	r_debug_map_list		883095	0					
ANR	885092	Identifier	r_debug_map_list		883095	0					
ANR	885093	ArgumentList	core -> dbg		883095	1					
ANR	885094	Argument	core -> dbg		883095	0					
ANR	885095	PtrMemberAccess	core -> dbg		883095	0					
ANR	885096	Identifier	core		883095	0					
ANR	885097	Identifier	dbg		883095	1					
ANR	885098	Argument	core -> offset		883095	1					
ANR	885099	PtrMemberAccess	core -> offset		883095	0					
ANR	885100	Identifier	core		883095	0					
ANR	885101	Identifier	offset		883095	1					
ANR	885102	Argument	input		883095	2					
ANR	885103	Identifier	input		883095	0					
ANR	885104	BreakStatement	break ;	1879:2:57076:57081	883095	72	True				
ANR	885105	Label	case '=' :	1880:1:57084:57092	883095	73	True				
ANR	885106	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1881:2:57105:57133	883095	74	True				
ANR	885107	CallExpression	r_debug_map_sync ( core -> dbg )		883095	0					
ANR	885108	Callee	r_debug_map_sync		883095	0					
ANR	885109	Identifier	r_debug_map_sync		883095	0					
ANR	885110	ArgumentList	core -> dbg		883095	1					
ANR	885111	Argument	core -> dbg		883095	0					
ANR	885112	PtrMemberAccess	core -> dbg		883095	0					
ANR	885113	Identifier	core		883095	0					
ANR	885114	Identifier	dbg		883095	1					
ANR	885115	ExpressionStatement	"r_debug_map_list_visual ( core -> dbg , core -> offset , input , r_config_get_i ( core -> config , ""scr.color"" ) )"	1882:2:57137:57241	883095	75	True				
ANR	885116	CallExpression	"r_debug_map_list_visual ( core -> dbg , core -> offset , input , r_config_get_i ( core -> config , ""scr.color"" ) )"		883095	0					
ANR	885117	Callee	r_debug_map_list_visual		883095	0					
ANR	885118	Identifier	r_debug_map_list_visual		883095	0					
ANR	885119	ArgumentList	core -> dbg		883095	1					
ANR	885120	Argument	core -> dbg		883095	0					
ANR	885121	PtrMemberAccess	core -> dbg		883095	0					
ANR	885122	Identifier	core		883095	0					
ANR	885123	Identifier	dbg		883095	1					
ANR	885124	Argument	core -> offset		883095	1					
ANR	885125	PtrMemberAccess	core -> offset		883095	0					
ANR	885126	Identifier	core		883095	0					
ANR	885127	Identifier	offset		883095	1					
ANR	885128	Argument	input		883095	2					
ANR	885129	Identifier	input		883095	0					
ANR	885130	Argument	"r_config_get_i ( core -> config , ""scr.color"" )"		883095	3					
ANR	885131	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		883095	0					
ANR	885132	Callee	r_config_get_i		883095	0					
ANR	885133	Identifier	r_config_get_i		883095	0					
ANR	885134	ArgumentList	core -> config		883095	1					
ANR	885135	Argument	core -> config		883095	0					
ANR	885136	PtrMemberAccess	core -> config		883095	0					
ANR	885137	Identifier	core		883095	0					
ANR	885138	Identifier	config		883095	1					
ANR	885139	Argument	"""scr.color"""		883095	1					
ANR	885140	PrimaryExpression	"""scr.color"""		883095	0					
ANR	885141	BreakStatement	break ;	1884:2:57245:57250	883095	76	True				
ANR	885142	Label	case 'h' :	1885:1:57253:57261	883095	77	True				
ANR	885143	ExpressionStatement	"( void ) r_debug_heap ( core , input )"	1886:2:57274:57306	883095	78	True				
ANR	885144	CastExpression	"( void ) r_debug_heap ( core , input )"		883095	0					
ANR	885145	CastTarget	void		883095	0					
ANR	885146	CallExpression	"r_debug_heap ( core , input )"		883095	1					
ANR	885147	Callee	r_debug_heap		883095	0					
ANR	885148	Identifier	r_debug_heap		883095	0					
ANR	885149	ArgumentList	core		883095	1					
ANR	885150	Argument	core		883095	0					
ANR	885151	Identifier	core		883095	0					
ANR	885152	Argument	input		883095	1					
ANR	885153	Identifier	input		883095	0					
ANR	885154	BreakStatement	break ;	1887:2:57310:57315	883095	79	True				
ANR	885155	ReturnStatement	return true ;	1889:1:57321:57332	883095	4	True				
ANR	885156	Identifier	true		883095	0					
ANR	885157	ReturnType	static int		883095	1					
ANR	885158	Identifier	cmd_debug_map		883095	2					
ANR	885159	ParameterList	"RCore * core , const char * input"		883095	3					
ANR	885160	Parameter	RCore * core	1541:25:47762:47772	883095	0	True				
ANR	885161	ParameterType	RCore *		883095	0					
ANR	885162	Identifier	core		883095	1					
ANR	885163	Parameter	const char * input	1541:38:47775:47791	883095	1	True				
ANR	885164	ParameterType	const char *		883095	0					
ANR	885165	Identifier	input		883095	1					
ANR	885166	CFGEntryNode	ENTRY		883095		True				
ANR	885167	CFGExitNode	EXIT		883095		True				
ANR	885168	Symbol	symbol		883095						
ANR	885169	Symbol	r_file_rm		883095						
ANR	885170	Symbol	* map		883095						
ANR	885171	Symbol	* q ++		883095						
ANR	885172	Symbol	* closest_symbol		883095						
ANR	885173	Symbol	* input		883095						
ANR	885174	Symbol	core -> offset		883095						
ANR	885175	Symbol	strchr		883095						
ANR	885176	Symbol	r_file_temp		883095						
ANR	885177	Symbol	r_str_word_set0		883095						
ANR	885178	Symbol	& filter		883095						
ANR	885179	Symbol	mode		883095						
ANR	885180	Symbol	closest_symbol -> name		883095						
ANR	885181	Symbol	* ptr		883095						
ANR	885182	Symbol	core -> num		883095						
ANR	885183	Symbol	* symbol		883095						
ANR	885184	Symbol	core -> bin		883095						
ANR	885185	Symbol	newfile		883095						
ANR	885186	Symbol	strcmp		883095						
ANR	885187	Symbol	res		883095						
ANR	885188	Symbol	r_file_slurp		883095						
ANR	885189	Symbol	r_str_rwx		883095						
ANR	885190	Symbol	NULL		883095						
ANR	885191	Symbol	r_debug_modules_list		883095						
ANR	885192	Symbol	iter		883095						
ANR	885193	Symbol	closest_symbol		883095						
ANR	885194	Symbol	list		883095						
ANR	885195	Symbol	& sz		883095						
ANR	885196	Symbol	r_str_escape		883095						
ANR	885197	Symbol	core		883095						
ANR	885198	Symbol	input		883095						
ANR	885199	Symbol	filter . name		883095						
ANR	885200	Symbol	size		883095						
ANR	885201	Symbol	help_msg_dmp		883095						
ANR	885202	Symbol	strstr		883095						
ANR	885203	Symbol	r_config_get_i		883095						
ANR	885204	Symbol	map -> addr_end		883095						
ANR	885205	Symbol	true		883095						
ANR	885206	Symbol	r_str_trim_ro		883095						
ANR	885207	Symbol	name		883095						
ANR	885208	Symbol	dump_maps		883095						
ANR	885209	Symbol	help_msg_dmi		883095						
ANR	885210	Symbol	cmd		883095						
ANR	885211	Symbol	baddr		883095						
ANR	885212	Symbol	symbol -> vaddr		883095						
ANR	885213	Symbol	map -> addr		883095						
ANR	885214	Symbol	filesc		883095						
ANR	885215	Symbol	map -> file		883095						
ANR	885216	Symbol	* core		883095						
ANR	885217	Symbol	symname		883095						
ANR	885218	Symbol	R_CORE_BIN_ACC_SYMBOLS		883095						
ANR	885219	Symbol	map -> size		883095						
ANR	885220	Symbol	sectname		883095						
ANR	885221	Symbol	symbols		883095						
ANR	885222	Symbol	r_num_math		883095						
ANR	885223	Symbol	r_sys_cmd_str		883095						
ANR	885224	Symbol	R_PERM_RW		883095						
ANR	885225	Symbol	file		883095						
ANR	885226	Symbol	map -> name		883095						
ANR	885227	Symbol	core -> io		883095						
ANR	885228	Symbol	perms		883095						
ANR	885229	Symbol	addroflib		883095						
ANR	885230	Symbol	r_str_trim_head		883095						
ANR	885231	Symbol	addr		883095						
ANR	885232	Symbol	UT64_MAX		883095						
ANR	885233	Symbol	map		883095						
ANR	885234	Symbol	core -> config		883095						
ANR	885235	Symbol	* p ++		883095						
ANR	885236	Symbol	sz		883095						
ANR	885237	Symbol	false		883095						
ANR	885238	Symbol	i		883095						
ANR	885239	Symbol	r_str_word_get0		883095						
ANR	885240	Symbol	r_file_basename		883095						
ANR	885241	Symbol	a0		883095						
ANR	885242	Symbol	ptr		883095						
ANR	885243	Symbol	IS_DIGIT		883095						
ANR	885244	Symbol	p		883095						
ANR	885245	Symbol	filter		883095						
ANR	885246	Symbol	q		883095						
ANR	885247	Symbol	buf		883095						
ANR	885248	Symbol	closest_addr		883095						
ANR	885249	Symbol	libname		883095						
ANR	885250	Symbol	sect		883095						
ANR	885251	Symbol	r_bin_get_symbols		883095						
ANR	885252	Symbol	get_closest_map		883095						
ANR	885253	Symbol	strdup		883095						
ANR	885254	Symbol	help_msg_dm		883095						
ANR	885255	Symbol	r_file_exists		883095						
ANR	885256	Symbol	core -> dbg		883095						
ANR	885257	Function	_new	1901:11:57545:57620							
ANR	885258	FunctionDef	_new (x n)		885257	0					
ANR	885259	CompoundStatement		1901:24:57558:57620	885257	0					
ANR	885260	IdentifierDeclStatement	x * m = malloc ( sizeof ( x ) ) ;	1902:2:57563:57588	885257	0	True				
ANR	885261	IdentifierDecl	* m = malloc ( sizeof ( x ) )		885257	0					
ANR	885262	IdentifierDeclType	x *		885257	0					
ANR	885263	Identifier	m		885257	1					
ANR	885264	AssignmentExpression	* m = malloc ( sizeof ( x ) )		885257	2		=			
ANR	885265	Identifier	m		885257	0					
ANR	885266	CallExpression	malloc ( sizeof ( x ) )		885257	1					
ANR	885267	Callee	malloc		885257	0					
ANR	885268	Identifier	malloc		885257	0					
ANR	885269	ArgumentList	sizeof ( x )		885257	1					
ANR	885270	Argument	sizeof ( x )		885257	0					
ANR	885271	SizeofExpression	sizeof ( x )		885257	0					
ANR	885272	Sizeof	sizeof		885257	0					
ANR	885273	SizeofOperand	x		885257	1					
ANR	885274	ReturnStatement	"return m ? * m = n , m : m ;"	1903:2:57593:57615	885257	1	True				
ANR	885275	ConditionalExpression	"m ? * m = n , m : m"		885257	0					
ANR	885276	Condition	m		885257	0					
ANR	885277	Identifier	m		885257	0					
ANR	885278	Expression	"* m = n , m"		885257	1					
ANR	885279	AssignmentExpression	* m = n		885257	0		=			
ANR	885280	UnaryOperationExpression	* m		885257	0					
ANR	885281	UnaryOperator	*		885257	0					
ANR	885282	Identifier	m		885257	1					
ANR	885283	Identifier	n		885257	1					
ANR	885284	Identifier	m		885257	1					
ANR	885285	Identifier	m		885257	2					
ANR	885286	ReturnType	x		885257	1					
ANR	885287	Identifier	_new		885257	2					
ANR	885288	ParameterList	x n		885257	3					
ANR	885289	Parameter	x n	1901:19:57553:57555	885257	0	True				
ANR	885290	ParameterType	x		885257	0					
ANR	885291	Identifier	n		885257	1					
ANR	885292	CFGEntryNode	ENTRY		885257		True				
ANR	885293	CFGExitNode	EXIT		885257		True				
ANR	885294	Symbol	malloc		885257						
ANR	885295	Symbol	* m		885257						
ANR	885296	Symbol	m		885257						
ANR	885297	Symbol	n		885257						
ANR	885298	Function	regcmp	1908:0:57640:57831							
ANR	885299	FunctionDef	"regcmp (const void * a , const void * b)"		885298	0					
ANR	885300	CompoundStatement		1908:48:57688:57831	885298	0					
ANR	885301	IdentifierDeclStatement	const ut64 * A = ( const ut64 * ) a ;	1909:1:57691:57721	885298	0	True				
ANR	885302	IdentifierDecl	* A = ( const ut64 * ) a		885298	0					
ANR	885303	IdentifierDeclType	const ut64 *		885298	0					
ANR	885304	Identifier	A		885298	1					
ANR	885305	AssignmentExpression	* A = ( const ut64 * ) a		885298	2		=			
ANR	885306	Identifier	A		885298	0					
ANR	885307	CastExpression	( const ut64 * ) a		885298	1					
ANR	885308	CastTarget	const ut64 *		885298	0					
ANR	885309	Identifier	a		885298	1					
ANR	885310	IdentifierDeclStatement	const ut64 * B = ( const ut64 * ) b ;	1910:1:57724:57754	885298	1	True				
ANR	885311	IdentifierDecl	* B = ( const ut64 * ) b		885298	0					
ANR	885312	IdentifierDeclType	const ut64 *		885298	0					
ANR	885313	Identifier	B		885298	1					
ANR	885314	AssignmentExpression	* B = ( const ut64 * ) b		885298	2		=			
ANR	885315	Identifier	B		885298	0					
ANR	885316	CastExpression	( const ut64 * ) b		885298	1					
ANR	885317	CastTarget	const ut64 *		885298	0					
ANR	885318	Identifier	b		885298	1					
ANR	885319	IfStatement	if ( * A > * B )		885298	2					
ANR	885320	Condition	* A > * B	1911:5:57761:57767	885298	0	True				
ANR	885321	RelationalExpression	* A > * B		885298	0		>			
ANR	885322	UnaryOperationExpression	* A		885298	0					
ANR	885323	UnaryOperator	*		885298	0					
ANR	885324	Identifier	A		885298	1					
ANR	885325	UnaryOperationExpression	* B		885298	1					
ANR	885326	UnaryOperator	*		885298	0					
ANR	885327	Identifier	B		885298	1					
ANR	885328	CompoundStatement		4:14:81:81	885298	1					
ANR	885329	ReturnStatement	return 1 ;	1912:2:57774:57782	885298	0	True				
ANR	885330	PrimaryExpression	1		885298	0					
ANR	885331	IfStatement	if ( * A == * B )		885298	3					
ANR	885332	Condition	* A == * B	1914:5:57792:57799	885298	0	True				
ANR	885333	EqualityExpression	* A == * B		885298	0		==			
ANR	885334	UnaryOperationExpression	* A		885298	0					
ANR	885335	UnaryOperator	*		885298	0					
ANR	885336	Identifier	A		885298	1					
ANR	885337	UnaryOperationExpression	* B		885298	1					
ANR	885338	UnaryOperator	*		885298	0					
ANR	885339	Identifier	B		885298	1					
ANR	885340	CompoundStatement		7:15:113:113	885298	1					
ANR	885341	ReturnStatement	return 0 ;	1915:2:57806:57814	885298	0	True				
ANR	885342	PrimaryExpression	0		885298	0					
ANR	885343	ReturnStatement	return - 1 ;	1917:1:57820:57829	885298	4	True				
ANR	885344	UnaryOperationExpression	- 1		885298	0					
ANR	885345	UnaryOperator	-		885298	0					
ANR	885346	PrimaryExpression	1		885298	1					
ANR	885347	ReturnType	static int		885298	1					
ANR	885348	Identifier	regcmp		885298	2					
ANR	885349	ParameterList	"const void * a , const void * b"		885298	3					
ANR	885350	Parameter	const void * a	1908:18:57658:57670	885298	0	True				
ANR	885351	ParameterType	const void *		885298	0					
ANR	885352	Identifier	a		885298	1					
ANR	885353	Parameter	const void * b	1908:33:57673:57685	885298	1	True				
ANR	885354	ParameterType	const void *		885298	0					
ANR	885355	Identifier	b		885298	1					
ANR	885356	CFGEntryNode	ENTRY		885298		True				
ANR	885357	CFGExitNode	EXIT		885298		True				
ANR	885358	Symbol	a		885298						
ANR	885359	Symbol	A		885298						
ANR	885360	Symbol	b		885298						
ANR	885361	Symbol	B		885298						
ANR	885362	Symbol	* A		885298						
ANR	885363	Symbol	* B		885298						
ANR	885364	Function	regcb	1920:0:57834:58000							
ANR	885365	FunctionDef	"regcb (void * u , const ut64 k , const void * v)"		885364	0					
ANR	885366	CompoundStatement		1920:56:57890:58000	885364	0					
ANR	885367	IdentifierDeclStatement	RList * sorted = ( RList * ) u ;	1921:1:57893:57919	885364	0	True				
ANR	885368	IdentifierDecl	* sorted = ( RList * ) u		885364	0					
ANR	885369	IdentifierDeclType	RList *		885364	0					
ANR	885370	Identifier	sorted		885364	1					
ANR	885371	AssignmentExpression	* sorted = ( RList * ) u		885364	2		=			
ANR	885372	Identifier	sorted		885364	0					
ANR	885373	CastExpression	( RList * ) u		885364	1					
ANR	885374	CastTarget	RList *		885364	0					
ANR	885375	Identifier	u		885364	1					
ANR	885376	IdentifierDeclStatement	ut64 * n = ut64_new ( k ) ;	1922:1:57922:57944	885364	1	True				
ANR	885377	IdentifierDecl	* n = ut64_new ( k )		885364	0					
ANR	885378	IdentifierDeclType	ut64 *		885364	0					
ANR	885379	Identifier	n		885364	1					
ANR	885380	AssignmentExpression	* n = ut64_new ( k )		885364	2		=			
ANR	885381	Identifier	n		885364	0					
ANR	885382	CallExpression	ut64_new ( k )		885364	1					
ANR	885383	Callee	ut64_new		885364	0					
ANR	885384	Identifier	ut64_new		885364	0					
ANR	885385	ArgumentList	k		885364	1					
ANR	885386	Argument	k		885364	0					
ANR	885387	Identifier	k		885364	0					
ANR	885388	ExpressionStatement	"r_list_add_sorted ( sorted , n , regcmp )"	1923:1:57947:57984	885364	2	True				
ANR	885389	CallExpression	"r_list_add_sorted ( sorted , n , regcmp )"		885364	0					
ANR	885390	Callee	r_list_add_sorted		885364	0					
ANR	885391	Identifier	r_list_add_sorted		885364	0					
ANR	885392	ArgumentList	sorted		885364	1					
ANR	885393	Argument	sorted		885364	0					
ANR	885394	Identifier	sorted		885364	0					
ANR	885395	Argument	n		885364	1					
ANR	885396	Identifier	n		885364	0					
ANR	885397	Argument	regcmp		885364	2					
ANR	885398	Identifier	regcmp		885364	0					
ANR	885399	ReturnStatement	return true ;	1924:1:57987:57998	885364	3	True				
ANR	885400	Identifier	true		885364	0					
ANR	885401	ReturnType	static bool		885364	1					
ANR	885402	Identifier	regcb		885364	2					
ANR	885403	ParameterList	"void * u , const ut64 k , const void * v"		885364	3					
ANR	885404	Parameter	void * u	1920:18:57852:57858	885364	0	True				
ANR	885405	ParameterType	void *		885364	0					
ANR	885406	Identifier	u		885364	1					
ANR	885407	Parameter	const ut64 k	1920:27:57861:57872	885364	1	True				
ANR	885408	ParameterType	const ut64		885364	0					
ANR	885409	Identifier	k		885364	1					
ANR	885410	Parameter	const void * v	1920:41:57875:57887	885364	2	True				
ANR	885411	ParameterType	const void *		885364	0					
ANR	885412	Identifier	v		885364	1					
ANR	885413	CFGEntryNode	ENTRY		885364		True				
ANR	885414	CFGExitNode	EXIT		885364		True				
ANR	885415	Symbol	sorted		885364						
ANR	885416	Symbol	u		885364						
ANR	885417	Symbol	ut64_new		885364						
ANR	885418	Symbol	v		885364						
ANR	885419	Symbol	true		885364						
ANR	885420	Symbol	regcmp		885364						
ANR	885421	Symbol	k		885364						
ANR	885422	Symbol	n		885364						
ANR	885423	Function	r_core_debug_ri	1927:0:58003:59270							
ANR	885424	FunctionDef	"r_core_debug_ri (RCore * core , RReg * reg , int mode)"		885423	0					
ANR	885425	CompoundStatement		1927:61:58064:59270	885423	0					
ANR	885426	IdentifierDeclStatement	"RList * list = r_reg_get_list ( reg , R_REG_TYPE_GPR ) ;"	1928:1:58067:58117	885423	0	True				
ANR	885427	IdentifierDecl	"* list = r_reg_get_list ( reg , R_REG_TYPE_GPR )"		885423	0					
ANR	885428	IdentifierDeclType	RList *		885423	0					
ANR	885429	Identifier	list		885423	1					
ANR	885430	AssignmentExpression	"* list = r_reg_get_list ( reg , R_REG_TYPE_GPR )"		885423	2		=			
ANR	885431	Identifier	list		885423	0					
ANR	885432	CallExpression	"r_reg_get_list ( reg , R_REG_TYPE_GPR )"		885423	1					
ANR	885433	Callee	r_reg_get_list		885423	0					
ANR	885434	Identifier	r_reg_get_list		885423	0					
ANR	885435	ArgumentList	reg		885423	1					
ANR	885436	Argument	reg		885423	0					
ANR	885437	Identifier	reg		885423	0					
ANR	885438	Argument	R_REG_TYPE_GPR		885423	1					
ANR	885439	Identifier	R_REG_TYPE_GPR		885423	0					
ANR	885440	IdentifierDeclStatement	RListIter * iter ;	1929:1:58120:58135	885423	1	True				
ANR	885441	IdentifierDecl	* iter		885423	0					
ANR	885442	IdentifierDeclType	RListIter *		885423	0					
ANR	885443	Identifier	iter		885423	1					
ANR	885444	IdentifierDeclStatement	RRegItem * r ;	1930:1:58138:58149	885423	2	True				
ANR	885445	IdentifierDecl	* r		885423	0					
ANR	885446	IdentifierDeclType	RRegItem *		885423	0					
ANR	885447	Identifier	r		885423	1					
ANR	885448	IdentifierDeclStatement	HtUP * db = ht_up_new0 ( ) ;	1931:1:58152:58176	885423	3	True				
ANR	885449	IdentifierDecl	* db = ht_up_new0 ( )		885423	0					
ANR	885450	IdentifierDeclType	HtUP *		885423	0					
ANR	885451	Identifier	db		885423	1					
ANR	885452	AssignmentExpression	* db = ht_up_new0 ( )		885423	2		=			
ANR	885453	Identifier	db		885423	0					
ANR	885454	CallExpression	ht_up_new0 ( )		885423	1					
ANR	885455	Callee	ht_up_new0		885423	0					
ANR	885456	Identifier	ht_up_new0		885423	0					
ANR	885457	ArgumentList			885423	1					
ANR	885458	Statement	r_list_foreach	1933:1:58180:58193	885423	4	True				
ANR	885459	Statement	(	1933:16:58195:58195	885423	5	True				
ANR	885460	Statement	list	1933:17:58196:58199	885423	6	True				
ANR	885461	Statement	","	1933:21:58200:58200	885423	7	True				
ANR	885462	Statement	iter	1933:23:58202:58205	885423	8	True				
ANR	885463	Statement	","	1933:27:58206:58206	885423	9	True				
ANR	885464	Statement	r	1933:29:58208:58208	885423	10	True				
ANR	885465	Statement	)	1933:30:58209:58209	885423	11	True				
ANR	885466	CompoundStatement		12:2:250:292	885423	12					
ANR	885467	IfStatement	if ( r -> size != core -> assembler -> bits )		885423	0					
ANR	885468	Condition	r -> size != core -> assembler -> bits	1934:6:58219:58250	885423	0	True				
ANR	885469	EqualityExpression	r -> size != core -> assembler -> bits		885423	0		!=			
ANR	885470	PtrMemberAccess	r -> size		885423	0					
ANR	885471	Identifier	r		885423	0					
ANR	885472	Identifier	size		885423	1					
ANR	885473	PtrMemberAccess	core -> assembler -> bits		885423	1					
ANR	885474	PtrMemberAccess	core -> assembler		885423	0					
ANR	885475	Identifier	core		885423	0					
ANR	885476	Identifier	assembler		885423	1					
ANR	885477	Identifier	bits		885423	1					
ANR	885478	CompoundStatement		8:40:188:188	885423	1					
ANR	885479	ContinueStatement	continue ;	1935:3:58258:58266	885423	0	True				
ANR	885480	IdentifierDeclStatement	"ut64 value = r_reg_get_value ( reg , r ) ;"	1937:2:58274:58311	885423	1	True				
ANR	885481	IdentifierDecl	"value = r_reg_get_value ( reg , r )"		885423	0					
ANR	885482	IdentifierDeclType	ut64		885423	0					
ANR	885483	Identifier	value		885423	1					
ANR	885484	AssignmentExpression	"value = r_reg_get_value ( reg , r )"		885423	2		=			
ANR	885485	Identifier	value		885423	0					
ANR	885486	CallExpression	"r_reg_get_value ( reg , r )"		885423	1					
ANR	885487	Callee	r_reg_get_value		885423	0					
ANR	885488	Identifier	r_reg_get_value		885423	0					
ANR	885489	ArgumentList	reg		885423	1					
ANR	885490	Argument	reg		885423	0					
ANR	885491	Identifier	reg		885423	0					
ANR	885492	Argument	r		885423	1					
ANR	885493	Identifier	r		885423	0					
ANR	885494	IdentifierDeclStatement	"RList * list = ht_up_find ( db , value , NULL ) ;"	1938:2:58315:58357	885423	2	True				
ANR	885495	IdentifierDecl	"* list = ht_up_find ( db , value , NULL )"		885423	0					
ANR	885496	IdentifierDeclType	RList *		885423	0					
ANR	885497	Identifier	list		885423	1					
ANR	885498	AssignmentExpression	"* list = ht_up_find ( db , value , NULL )"		885423	2		=			
ANR	885499	Identifier	list		885423	0					
ANR	885500	CallExpression	"ht_up_find ( db , value , NULL )"		885423	1					
ANR	885501	Callee	ht_up_find		885423	0					
ANR	885502	Identifier	ht_up_find		885423	0					
ANR	885503	ArgumentList	db		885423	1					
ANR	885504	Argument	db		885423	0					
ANR	885505	Identifier	db		885423	0					
ANR	885506	Argument	value		885423	1					
ANR	885507	Identifier	value		885423	0					
ANR	885508	Argument	NULL		885423	2					
ANR	885509	Identifier	NULL		885423	0					
ANR	885510	IfStatement	if ( ! list )		885423	3					
ANR	885511	Condition	! list	1939:6:58365:58369	885423	0	True				
ANR	885512	UnaryOperationExpression	! list		885423	0					
ANR	885513	UnaryOperator	!		885423	0					
ANR	885514	Identifier	list		885423	1					
ANR	885515	CompoundStatement		13:13:307:307	885423	1					
ANR	885516	ExpressionStatement	list = r_list_newf ( NULL )	1940:3:58377:58402	885423	0	True				
ANR	885517	AssignmentExpression	list = r_list_newf ( NULL )		885423	0		=			
ANR	885518	Identifier	list		885423	0					
ANR	885519	CallExpression	r_list_newf ( NULL )		885423	1					
ANR	885520	Callee	r_list_newf		885423	0					
ANR	885521	Identifier	r_list_newf		885423	0					
ANR	885522	ArgumentList	NULL		885423	1					
ANR	885523	Argument	NULL		885423	0					
ANR	885524	Identifier	NULL		885423	0					
ANR	885525	ExpressionStatement	"ht_up_update ( db , value , list )"	1941:3:58407:58437	885423	1	True				
ANR	885526	CallExpression	"ht_up_update ( db , value , list )"		885423	0					
ANR	885527	Callee	ht_up_update		885423	0					
ANR	885528	Identifier	ht_up_update		885423	0					
ANR	885529	ArgumentList	db		885423	1					
ANR	885530	Argument	db		885423	0					
ANR	885531	Identifier	db		885423	0					
ANR	885532	Argument	value		885423	1					
ANR	885533	Identifier	value		885423	0					
ANR	885534	Argument	list		885423	2					
ANR	885535	Identifier	list		885423	0					
ANR	885536	ExpressionStatement	"r_list_append ( list , r -> name )"	1943:2:58445:58474	885423	4	True				
ANR	885537	CallExpression	"r_list_append ( list , r -> name )"		885423	0					
ANR	885538	Callee	r_list_append		885423	0					
ANR	885539	Identifier	r_list_append		885423	0					
ANR	885540	ArgumentList	list		885423	1					
ANR	885541	Argument	list		885423	0					
ANR	885542	Identifier	list		885423	0					
ANR	885543	Argument	r -> name		885423	1					
ANR	885544	PtrMemberAccess	r -> name		885423	0					
ANR	885545	Identifier	r		885423	0					
ANR	885546	Identifier	name		885423	1					
ANR	885547	IdentifierDeclStatement	RList * sorted = r_list_newf ( free ) ;	1946:1:58482:58516	885423	13	True				
ANR	885548	IdentifierDecl	* sorted = r_list_newf ( free )		885423	0					
ANR	885549	IdentifierDeclType	RList *		885423	0					
ANR	885550	Identifier	sorted		885423	1					
ANR	885551	AssignmentExpression	* sorted = r_list_newf ( free )		885423	2		=			
ANR	885552	Identifier	sorted		885423	0					
ANR	885553	CallExpression	r_list_newf ( free )		885423	1					
ANR	885554	Callee	r_list_newf		885423	0					
ANR	885555	Identifier	r_list_newf		885423	0					
ANR	885556	ArgumentList	free		885423	1					
ANR	885557	Argument	free		885423	0					
ANR	885558	Identifier	free		885423	0					
ANR	885559	ExpressionStatement	"ht_up_foreach ( db , regcb , sorted )"	1947:1:58519:58552	885423	14	True				
ANR	885560	CallExpression	"ht_up_foreach ( db , regcb , sorted )"		885423	0					
ANR	885561	Callee	ht_up_foreach		885423	0					
ANR	885562	Identifier	ht_up_foreach		885423	0					
ANR	885563	ArgumentList	db		885423	1					
ANR	885564	Argument	db		885423	0					
ANR	885565	Identifier	db		885423	0					
ANR	885566	Argument	regcb		885423	1					
ANR	885567	Identifier	regcb		885423	0					
ANR	885568	Argument	sorted		885423	2					
ANR	885569	Identifier	sorted		885423	0					
ANR	885570	IdentifierDeclStatement	ut64 * addr ;	1948:1:58555:58565	885423	15	True				
ANR	885571	IdentifierDecl	* addr		885423	0					
ANR	885572	IdentifierDeclType	ut64 *		885423	0					
ANR	885573	Identifier	addr		885423	1					
ANR	885574	Statement	r_list_foreach	1949:1:58568:58581	885423	16	True				
ANR	885575	Statement	(	1949:16:58583:58583	885423	17	True				
ANR	885576	Statement	sorted	1949:17:58584:58589	885423	18	True				
ANR	885577	Statement	","	1949:23:58590:58590	885423	19	True				
ANR	885578	Statement	iter	1949:25:58592:58595	885423	20	True				
ANR	885579	Statement	","	1949:29:58596:58596	885423	21	True				
ANR	885580	Statement	addr	1949:31:58598:58601	885423	22	True				
ANR	885581	Statement	)	1949:35:58602:58602	885423	23	True				
ANR	885582	CompoundStatement		32:2:741:783	885423	24					
ANR	885583	IdentifierDeclStatement	int rwx = 0 ;	1950:2:58608:58619	885423	0	True				
ANR	885584	IdentifierDecl	rwx = 0		885423	0					
ANR	885585	IdentifierDeclType	int		885423	0					
ANR	885586	Identifier	rwx		885423	1					
ANR	885587	AssignmentExpression	rwx = 0		885423	2		=			
ANR	885588	Identifier	rwx		885423	0					
ANR	885589	PrimaryExpression	0		885423	1					
ANR	885590	IdentifierDeclStatement	"RDebugMap * map = r_debug_map_get ( core -> dbg , * addr ) ;"	1951:2:58623:58674	885423	1	True				
ANR	885591	IdentifierDecl	"* map = r_debug_map_get ( core -> dbg , * addr )"		885423	0					
ANR	885592	IdentifierDeclType	RDebugMap *		885423	0					
ANR	885593	Identifier	map		885423	1					
ANR	885594	AssignmentExpression	"* map = r_debug_map_get ( core -> dbg , * addr )"		885423	2		=			
ANR	885595	Identifier	map		885423	0					
ANR	885596	CallExpression	"r_debug_map_get ( core -> dbg , * addr )"		885423	1					
ANR	885597	Callee	r_debug_map_get		885423	0					
ANR	885598	Identifier	r_debug_map_get		885423	0					
ANR	885599	ArgumentList	core -> dbg		885423	1					
ANR	885600	Argument	core -> dbg		885423	0					
ANR	885601	PtrMemberAccess	core -> dbg		885423	0					
ANR	885602	Identifier	core		885423	0					
ANR	885603	Identifier	dbg		885423	1					
ANR	885604	Argument	* addr		885423	1					
ANR	885605	UnaryOperationExpression	* addr		885423	0					
ANR	885606	UnaryOperator	*		885423	0					
ANR	885607	Identifier	addr		885423	1					
ANR	885608	IfStatement	if ( map )		885423	2					
ANR	885609	Condition	map	1952:6:58682:58684	885423	0	True				
ANR	885610	Identifier	map		885423	0					
ANR	885611	CompoundStatement		26:11:622:622	885423	1					
ANR	885612	ExpressionStatement	rwx = map -> perm	1953:3:58692:58707	885423	0	True				
ANR	885613	AssignmentExpression	rwx = map -> perm		885423	0		=			
ANR	885614	Identifier	rwx		885423	0					
ANR	885615	PtrMemberAccess	map -> perm		885423	1					
ANR	885616	Identifier	map		885423	0					
ANR	885617	Identifier	perm		885423	1					
ANR	885618	ExpressionStatement	"r_cons_printf ( "" %s  "" , r_str_rwx_i ( rwx ) )"	1955:2:58715:58757	885423	3	True				
ANR	885619	CallExpression	"r_cons_printf ( "" %s  "" , r_str_rwx_i ( rwx ) )"		885423	0					
ANR	885620	Callee	r_cons_printf		885423	0					
ANR	885621	Identifier	r_cons_printf		885423	0					
ANR	885622	ArgumentList	""" %s  """		885423	1					
ANR	885623	Argument	""" %s  """		885423	0					
ANR	885624	PrimaryExpression	""" %s  """		885423	0					
ANR	885625	Argument	r_str_rwx_i ( rwx )		885423	1					
ANR	885626	CallExpression	r_str_rwx_i ( rwx )		885423	0					
ANR	885627	Callee	r_str_rwx_i		885423	0					
ANR	885628	Identifier	r_str_rwx_i		885423	0					
ANR	885629	ArgumentList	rwx		885423	1					
ANR	885630	Argument	rwx		885423	0					
ANR	885631	Identifier	rwx		885423	0					
ANR	885632	Statement	r_cons_printf	1957:2:58762:58774	885423	4	True				
ANR	885633	Statement	(	1957:16:58776:58776	885423	5	True				
ANR	885634	Statement	"""0x%08"""	1957:17:58777:58783	885423	6	True				
ANR	885635	Statement	PFMT64x	1957:24:58784:58790	885423	7	True				
ANR	885636	Statement	""" """	1957:31:58791:58793	885423	8	True				
ANR	885637	Statement	","	1957:34:58794:58794	885423	9	True				
ANR	885638	Statement	*	1957:36:58796:58796	885423	10	True				
ANR	885639	Statement	addr	1957:37:58797:58800	885423	11	True				
ANR	885640	Statement	)	1957:41:58801:58801	885423	12	True				
ANR	885641	ExpressionStatement		1957:42:58802:58802	885423	13	True				
ANR	885642	IdentifierDeclStatement	"RList * list = ht_up_find ( db , * addr , NULL ) ;"	1958:2:58806:58848	885423	14	True				
ANR	885643	IdentifierDecl	"* list = ht_up_find ( db , * addr , NULL )"		885423	0					
ANR	885644	IdentifierDeclType	RList *		885423	0					
ANR	885645	Identifier	list		885423	1					
ANR	885646	AssignmentExpression	"* list = ht_up_find ( db , * addr , NULL )"		885423	2		=			
ANR	885647	Identifier	list		885423	0					
ANR	885648	CallExpression	"ht_up_find ( db , * addr , NULL )"		885423	1					
ANR	885649	Callee	ht_up_find		885423	0					
ANR	885650	Identifier	ht_up_find		885423	0					
ANR	885651	ArgumentList	db		885423	1					
ANR	885652	Argument	db		885423	0					
ANR	885653	Identifier	db		885423	0					
ANR	885654	Argument	* addr		885423	1					
ANR	885655	UnaryOperationExpression	* addr		885423	0					
ANR	885656	UnaryOperator	*		885423	0					
ANR	885657	Identifier	addr		885423	1					
ANR	885658	Argument	NULL		885423	2					
ANR	885659	Identifier	NULL		885423	0					
ANR	885660	IfStatement	if ( list )		885423	15					
ANR	885661	Condition	list	1959:6:58856:58859	885423	0	True				
ANR	885662	Identifier	list		885423	0					
ANR	885663	CompoundStatement		41:3:976:1029	885423	1					
ANR	885664	IdentifierDeclStatement	RListIter * iter ;	1960:3:58867:58882	885423	0	True				
ANR	885665	IdentifierDecl	* iter		885423	0					
ANR	885666	IdentifierDeclType	RListIter *		885423	0					
ANR	885667	Identifier	iter		885423	1					
ANR	885668	IdentifierDeclStatement	const char * r ;	1961:3:58887:58900	885423	1	True				
ANR	885669	IdentifierDecl	* r		885423	0					
ANR	885670	IdentifierDeclType	const char *		885423	0					
ANR	885671	Identifier	r		885423	1					
ANR	885672	ExpressionStatement	r_cons_strcat ( Color_YELLOW )	1962:3:58905:58933	885423	2	True				
ANR	885673	CallExpression	r_cons_strcat ( Color_YELLOW )		885423	0					
ANR	885674	Callee	r_cons_strcat		885423	0					
ANR	885675	Identifier	r_cons_strcat		885423	0					
ANR	885676	ArgumentList	Color_YELLOW		885423	1					
ANR	885677	Argument	Color_YELLOW		885423	0					
ANR	885678	Identifier	Color_YELLOW		885423	0					
ANR	885679	Statement	r_list_foreach	1963:3:58938:58951	885423	3	True				
ANR	885680	Statement	(	1963:18:58953:58953	885423	4	True				
ANR	885681	Statement	list	1963:19:58954:58957	885423	5	True				
ANR	885682	Statement	","	1963:23:58958:58958	885423	6	True				
ANR	885683	Statement	iter	1963:25:58960:58963	885423	7	True				
ANR	885684	Statement	","	1963:29:58964:58964	885423	8	True				
ANR	885685	Statement	r	1963:31:58966:58966	885423	9	True				
ANR	885686	Statement	)	1963:32:58967:58967	885423	10	True				
ANR	885687	CompoundStatement		37:34:904:904	885423	11					
ANR	885688	ExpressionStatement	"r_cons_printf ( "" %s"" , r )"	1964:4:58975:58999	885423	0	True				
ANR	885689	CallExpression	"r_cons_printf ( "" %s"" , r )"		885423	0					
ANR	885690	Callee	r_cons_printf		885423	0					
ANR	885691	Identifier	r_cons_printf		885423	0					
ANR	885692	ArgumentList	""" %s"""		885423	1					
ANR	885693	Argument	""" %s"""		885423	0					
ANR	885694	PrimaryExpression	""" %s"""		885423	0					
ANR	885695	Argument	r		885423	1					
ANR	885696	Identifier	r		885423	0					
ANR	885697	ExpressionStatement	r_cons_strcat ( Color_RESET )	1966:3:59009:59036	885423	12	True				
ANR	885698	CallExpression	r_cons_strcat ( Color_RESET )		885423	0					
ANR	885699	Callee	r_cons_strcat		885423	0					
ANR	885700	Identifier	r_cons_strcat		885423	0					
ANR	885701	ArgumentList	Color_RESET		885423	1					
ANR	885702	Argument	Color_RESET		885423	0					
ANR	885703	Identifier	Color_RESET		885423	0					
ANR	885704	IdentifierDeclStatement	"char * rrstr = r_core_anal_hasrefs ( core , * addr , true ) ;"	1967:3:59041:59094	885423	13	True				
ANR	885705	IdentifierDecl	"* rrstr = r_core_anal_hasrefs ( core , * addr , true )"		885423	0					
ANR	885706	IdentifierDeclType	char *		885423	0					
ANR	885707	Identifier	rrstr		885423	1					
ANR	885708	AssignmentExpression	"* rrstr = r_core_anal_hasrefs ( core , * addr , true )"		885423	2		=			
ANR	885709	Identifier	rrstr		885423	0					
ANR	885710	CallExpression	"r_core_anal_hasrefs ( core , * addr , true )"		885423	1					
ANR	885711	Callee	r_core_anal_hasrefs		885423	0					
ANR	885712	Identifier	r_core_anal_hasrefs		885423	0					
ANR	885713	ArgumentList	core		885423	1					
ANR	885714	Argument	core		885423	0					
ANR	885715	Identifier	core		885423	0					
ANR	885716	Argument	* addr		885423	1					
ANR	885717	UnaryOperationExpression	* addr		885423	0					
ANR	885718	UnaryOperator	*		885423	0					
ANR	885719	Identifier	addr		885423	1					
ANR	885720	Argument	true		885423	2					
ANR	885721	Identifier	true		885423	0					
ANR	885722	IfStatement	"if ( rrstr && * rrstr && strchr ( rrstr , 'R' ) )"		885423	14					
ANR	885723	Condition	"rrstr && * rrstr && strchr ( rrstr , 'R' )"	1968:7:59103:59140	885423	0	True				
ANR	885724	AndExpression	"rrstr && * rrstr && strchr ( rrstr , 'R' )"		885423	0		&&			
ANR	885725	Identifier	rrstr		885423	0					
ANR	885726	AndExpression	"* rrstr && strchr ( rrstr , 'R' )"		885423	1		&&			
ANR	885727	UnaryOperationExpression	* rrstr		885423	0					
ANR	885728	UnaryOperator	*		885423	0					
ANR	885729	Identifier	rrstr		885423	1					
ANR	885730	CallExpression	"strchr ( rrstr , 'R' )"		885423	1					
ANR	885731	Callee	strchr		885423	0					
ANR	885732	Identifier	strchr		885423	0					
ANR	885733	ArgumentList	rrstr		885423	1					
ANR	885734	Argument	rrstr		885423	0					
ANR	885735	Identifier	rrstr		885423	0					
ANR	885736	Argument	'R'		885423	1					
ANR	885737	PrimaryExpression	'R'		885423	0					
ANR	885738	CompoundStatement		42:47:1078:1078	885423	1					
ANR	885739	Statement	r_cons_printf	1969:4:59149:59161	885423	0	True				
ANR	885740	Statement	(	1969:18:59163:59163	885423	1	True				
ANR	885741	Statement	"""    ;%s"""	1969:19:59164:59172	885423	2	True				
ANR	885742	Statement	Color_RESET	1969:28:59173:59183	885423	3	True				
ANR	885743	Statement	","	1969:39:59184:59184	885423	4	True				
ANR	885744	Statement	rrstr	1969:41:59186:59190	885423	5	True				
ANR	885745	Statement	)	1969:46:59191:59191	885423	6	True				
ANR	885746	ExpressionStatement		1969:47:59192:59192	885423	7	True				
ANR	885747	ExpressionStatement	r_cons_newline ( )	1971:3:59202:59219	885423	15	True				
ANR	885748	CallExpression	r_cons_newline ( )		885423	0					
ANR	885749	Callee	r_cons_newline		885423	0					
ANR	885750	Identifier	r_cons_newline		885423	0					
ANR	885751	ArgumentList			885423	1					
ANR	885752	ExpressionStatement	r_list_free ( sorted )	1974:1:59230:59250	885423	25	True				
ANR	885753	CallExpression	r_list_free ( sorted )		885423	0					
ANR	885754	Callee	r_list_free		885423	0					
ANR	885755	Identifier	r_list_free		885423	0					
ANR	885756	ArgumentList	sorted		885423	1					
ANR	885757	Argument	sorted		885423	0					
ANR	885758	Identifier	sorted		885423	0					
ANR	885759	ExpressionStatement	ht_up_free ( db )	1975:1:59253:59268	885423	26	True				
ANR	885760	CallExpression	ht_up_free ( db )		885423	0					
ANR	885761	Callee	ht_up_free		885423	0					
ANR	885762	Identifier	ht_up_free		885423	0					
ANR	885763	ArgumentList	db		885423	1					
ANR	885764	Argument	db		885423	0					
ANR	885765	Identifier	db		885423	0					
ANR	885766	ReturnType	R_API void		885423	1					
ANR	885767	Identifier	r_core_debug_ri		885423	2					
ANR	885768	ParameterList	"RCore * core , RReg * reg , int mode"		885423	3					
ANR	885769	Parameter	RCore * core	1927:27:58030:58040	885423	0	True				
ANR	885770	ParameterType	RCore *		885423	0					
ANR	885771	Identifier	core		885423	1					
ANR	885772	Parameter	RReg * reg	1927:40:58043:58051	885423	1	True				
ANR	885773	ParameterType	RReg *		885423	0					
ANR	885774	Identifier	reg		885423	1					
ANR	885775	Parameter	int mode	1927:51:58054:58061	885423	2	True				
ANR	885776	ParameterType	int		885423	0					
ANR	885777	Identifier	mode		885423	1					
ANR	885778	CFGEntryNode	ENTRY		885423		True				
ANR	885779	CFGExitNode	EXIT		885423		True				
ANR	885780	CFGErrorNode	ERROR		885423		True				
ANR	885781	Symbol	ht_up_find		885423						
ANR	885782	Symbol	regcb		885423						
ANR	885783	Symbol	* map		885423						
ANR	885784	Symbol	* core		885423						
ANR	885785	Symbol	core -> assembler -> bits		885423						
ANR	885786	Symbol	Color_RESET		885423						
ANR	885787	Symbol	core -> assembler		885423						
ANR	885788	Symbol	strchr		885423						
ANR	885789	Symbol	rrstr		885423						
ANR	885790	Symbol	mode		885423						
ANR	885791	Symbol	* core -> assembler		885423						
ANR	885792	Symbol	rwx		885423						
ANR	885793	Symbol	reg		885423						
ANR	885794	Symbol	r_debug_map_get		885423						
ANR	885795	Symbol	free		885423						
ANR	885796	Symbol	addr		885423						
ANR	885797	Symbol	value		885423						
ANR	885798	Symbol	map		885423						
ANR	885799	Symbol	r_str_rwx_i		885423						
ANR	885800	Symbol	R_REG_TYPE_GPR		885423						
ANR	885801	Symbol	* * core		885423						
ANR	885802	Symbol	r_reg_get_value		885423						
ANR	885803	Symbol	NULL		885423						
ANR	885804	Symbol	Color_YELLOW		885423						
ANR	885805	Symbol	r_list_newf		885423						
ANR	885806	Symbol	r_reg_get_list		885423						
ANR	885807	Symbol	* rrstr		885423						
ANR	885808	Symbol	iter		885423						
ANR	885809	Symbol	list		885423						
ANR	885810	Symbol	ht_up_new0		885423						
ANR	885811	Symbol	r_core_anal_hasrefs		885423						
ANR	885812	Symbol	core		885423						
ANR	885813	Symbol	r		885423						
ANR	885814	Symbol	sorted		885423						
ANR	885815	Symbol	r -> name		885423						
ANR	885816	Symbol	true		885423						
ANR	885817	Symbol	* addr		885423						
ANR	885818	Symbol	* r		885423						
ANR	885819	Symbol	map -> perm		885423						
ANR	885820	Symbol	db		885423						
ANR	885821	Symbol	r -> size		885423						
ANR	885822	Symbol	core -> dbg		885423						
ANR	885823	Function	r_core_debug_rr	1978:0:59273:61685							
ANR	885824	FunctionDef	"r_core_debug_rr (RCore * core , RReg * reg , int mode)"		885823	0					
ANR	885825	CompoundStatement		1978:61:59334:61685	885823	0					
ANR	885826	IdentifierDeclStatement	"char * use_color , * color = """" ;"	1979:1:59337:59365	885823	0	True				
ANR	885827	IdentifierDecl	* use_color		885823	0					
ANR	885828	IdentifierDeclType	char *		885823	0					
ANR	885829	Identifier	use_color		885823	1					
ANR	885830	IdentifierDecl	"* color = """""		885823	1					
ANR	885831	IdentifierDeclType	char *		885823	0					
ANR	885832	Identifier	color		885823	1					
ANR	885833	AssignmentExpression	"* color = """""		885823	2		=			
ANR	885834	Identifier	color		885823	0					
ANR	885835	PrimaryExpression	""""""		885823	1					
ANR	885836	IdentifierDeclStatement	"int use_colors = r_config_get_i ( core -> config , ""scr.color"" ) ;"	1980:1:59368:59427	885823	1	True				
ANR	885837	IdentifierDecl	"use_colors = r_config_get_i ( core -> config , ""scr.color"" )"		885823	0					
ANR	885838	IdentifierDeclType	int		885823	0					
ANR	885839	Identifier	use_colors		885823	1					
ANR	885840	AssignmentExpression	"use_colors = r_config_get_i ( core -> config , ""scr.color"" )"		885823	2		=			
ANR	885841	Identifier	use_colors		885823	0					
ANR	885842	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		885823	1					
ANR	885843	Callee	r_config_get_i		885823	0					
ANR	885844	Identifier	r_config_get_i		885823	0					
ANR	885845	ArgumentList	core -> config		885823	1					
ANR	885846	Argument	core -> config		885823	0					
ANR	885847	PtrMemberAccess	core -> config		885823	0					
ANR	885848	Identifier	core		885823	0					
ANR	885849	Identifier	config		885823	1					
ANR	885850	Argument	"""scr.color"""		885823	1					
ANR	885851	PrimaryExpression	"""scr.color"""		885823	0					
ANR	885852	IdentifierDeclStatement	int delta = 0 ;	1981:1:59430:59443	885823	2	True				
ANR	885853	IdentifierDecl	delta = 0		885823	0					
ANR	885854	IdentifierDeclType	int		885823	0					
ANR	885855	Identifier	delta		885823	1					
ANR	885856	AssignmentExpression	delta = 0		885823	2		=			
ANR	885857	Identifier	delta		885823	0					
ANR	885858	PrimaryExpression	0		885823	1					
ANR	885859	IdentifierDeclStatement	"ut64 diff , value ;"	1982:1:59446:59462	885823	3	True				
ANR	885860	IdentifierDecl	diff		885823	0					
ANR	885861	IdentifierDeclType	ut64		885823	0					
ANR	885862	Identifier	diff		885823	1					
ANR	885863	IdentifierDecl	value		885823	1					
ANR	885864	IdentifierDeclType	ut64		885823	0					
ANR	885865	Identifier	value		885823	1					
ANR	885866	IdentifierDeclStatement	int bits = core -> assembler -> bits ;	1983:1:59465:59497	885823	4	True				
ANR	885867	IdentifierDecl	bits = core -> assembler -> bits		885823	0					
ANR	885868	IdentifierDeclType	int		885823	0					
ANR	885869	Identifier	bits		885823	1					
ANR	885870	AssignmentExpression	bits = core -> assembler -> bits		885823	2		=			
ANR	885871	Identifier	bits		885823	0					
ANR	885872	PtrMemberAccess	core -> assembler -> bits		885823	1					
ANR	885873	PtrMemberAccess	core -> assembler		885823	0					
ANR	885874	Identifier	core		885823	0					
ANR	885875	Identifier	assembler		885823	1					
ANR	885876	Identifier	bits		885823	1					
ANR	885877	IdentifierDeclStatement	"RList * list = r_reg_get_list ( reg , R_REG_TYPE_GPR ) ;"	1984:1:59500:59550	885823	5	True				
ANR	885878	IdentifierDecl	"* list = r_reg_get_list ( reg , R_REG_TYPE_GPR )"		885823	0					
ANR	885879	IdentifierDeclType	RList *		885823	0					
ANR	885880	Identifier	list		885823	1					
ANR	885881	AssignmentExpression	"* list = r_reg_get_list ( reg , R_REG_TYPE_GPR )"		885823	2		=			
ANR	885882	Identifier	list		885823	0					
ANR	885883	CallExpression	"r_reg_get_list ( reg , R_REG_TYPE_GPR )"		885823	1					
ANR	885884	Callee	r_reg_get_list		885823	0					
ANR	885885	Identifier	r_reg_get_list		885823	0					
ANR	885886	ArgumentList	reg		885823	1					
ANR	885887	Argument	reg		885823	0					
ANR	885888	Identifier	reg		885823	0					
ANR	885889	Argument	R_REG_TYPE_GPR		885823	1					
ANR	885890	Identifier	R_REG_TYPE_GPR		885823	0					
ANR	885891	IdentifierDeclStatement	RListIter * iter ;	1985:1:59553:59568	885823	6	True				
ANR	885892	IdentifierDecl	* iter		885823	0					
ANR	885893	IdentifierDeclType	RListIter *		885823	0					
ANR	885894	Identifier	iter		885823	1					
ANR	885895	IdentifierDeclStatement	RRegItem * r ;	1986:1:59571:59582	885823	7	True				
ANR	885896	IdentifierDecl	* r		885823	0					
ANR	885897	IdentifierDeclType	RRegItem *		885823	0					
ANR	885898	Identifier	r		885823	1					
ANR	885899	IfStatement	if ( use_colors )		885823	8					
ANR	885900	Condition	use_colors	1987:5:59589:59598	885823	0	True				
ANR	885901	Identifier	use_colors		885823	0					
ANR	885902	CompoundStatement		10:17:266:266	885823	1					
ANR	885903	Statement	undef	1988:1:59604:59608	885823	0	True				
ANR	885904	Statement	ConsP	1988:7:59610:59614	885823	1	True				
ANR	885905	Statement	define	1989:1:59617:59622	885823	2	True				
ANR	885906	Statement	ConsP	1989:8:59624:59628	885823	3	True				
ANR	885907	Statement	(	1989:13:59629:59629	885823	4	True				
ANR	885908	Statement	x	1989:14:59630:59630	885823	5	True				
ANR	885909	Statement	)	1989:15:59631:59631	885823	6	True				
ANR	885910	Statement	(	1989:17:59633:59633	885823	7	True				
ANR	885911	Statement	core	1989:18:59634:59637	885823	8	True				
ANR	885912	Statement	->	1989:22:59638:59639	885823	9	True				
ANR	885913	Statement	cons	1989:24:59640:59643	885823	10	True				
ANR	885914	Statement	&&	1989:29:59645:59646	885823	11	True				
ANR	885915	Statement	core	1989:32:59648:59651	885823	12	True				
ANR	885916	Statement	->	1989:36:59652:59653	885823	13	True				
ANR	885917	Statement	cons	1989:38:59654:59657	885823	14	True				
ANR	885918	Statement	->	1989:42:59658:59659	885823	15	True				
ANR	885919	Statement	context	1989:44:59660:59666	885823	16	True				
ANR	885920	Statement	->	1989:51:59667:59668	885823	17	True				
ANR	885921	Statement	pal	1989:53:59669:59671	885823	18	True				
ANR	885922	Statement	.	1989:56:59672:59672	885823	19	True				
ANR	885923	Statement	x	1989:57:59673:59673	885823	20	True				
ANR	885924	Statement	)	1989:58:59674:59674	885823	21	True				
ANR	885925	Statement	?	1989:59:59675:59675	885823	22	True				
ANR	885926	Statement	core	1989:61:59677:59680	885823	23	True				
ANR	885927	Statement	->	1989:65:59681:59682	885823	24	True				
ANR	885928	Statement	cons	1989:67:59683:59686	885823	25	True				
ANR	885929	Statement	->	1989:71:59687:59688	885823	26	True				
ANR	885930	Statement	context	1989:73:59689:59695	885823	27	True				
ANR	885931	Statement	->	1989:80:59696:59697	885823	28	True				
ANR	885932	Statement	pal	1989:82:59698:59700	885823	29	True				
ANR	885933	Statement	.	1989:85:59701:59701	885823	30	True				
ANR	885934	Statement	x	1989:86:59702:59702	885823	31	True				
ANR	885935	Statement	use_color	1990:2:59706:59714	885823	32	True				
ANR	885936	Statement	=	1990:12:59716:59716	885823	33	True				
ANR	885937	Statement	ConsP	1990:14:59718:59722	885823	34	True				
ANR	885938	Statement	(	1990:19:59723:59723	885823	35	True				
ANR	885939	Statement	creg	1990:20:59724:59727	885823	36	True				
ANR	885940	Statement	)	1990:24:59728:59728	885823	37	True				
ANR	885941	Statement	:	1990:25:59729:59729	885823	38	True				
ANR	885942	ExpressionStatement	Color_BWHITE	1990:27:59731:59743	885823	39	True				
ANR	885943	Identifier	Color_BWHITE		885823	0					
ANR	885944	ElseStatement	else		885823	0					
ANR	885945	CompoundStatement		14:8:418:418	885823	0					
ANR	885946	ExpressionStatement	use_color = NULL	1992:2:59757:59773	885823	0	True				
ANR	885947	AssignmentExpression	use_color = NULL		885823	0		=			
ANR	885948	Identifier	use_color		885823	0					
ANR	885949	Identifier	NULL		885823	1					
ANR	885950	IfStatement	if ( mode == 'j' )		885823	9					
ANR	885951	Condition	mode == 'j'	1995:5:59816:59826	885823	0	True				
ANR	885952	EqualityExpression	mode == 'j'		885823	0		==			
ANR	885953	Identifier	mode		885823	0					
ANR	885954	PrimaryExpression	'j'		885823	1					
ANR	885955	CompoundStatement		18:18:494:494	885823	1					
ANR	885956	ExpressionStatement	"r_cons_printf ( ""["" )"	1996:2:59833:59852	885823	0	True				
ANR	885957	CallExpression	"r_cons_printf ( ""["" )"		885823	0					
ANR	885958	Callee	r_cons_printf		885823	0					
ANR	885959	Identifier	r_cons_printf		885823	0					
ANR	885960	ArgumentList	"""["""		885823	1					
ANR	885961	Argument	"""["""		885823	0					
ANR	885962	PrimaryExpression	"""["""		885823	0					
ANR	885963	Statement	r_list_foreach	1998:1:59858:59871	885823	10	True				
ANR	885964	Statement	(	1998:16:59873:59873	885823	11	True				
ANR	885965	Statement	list	1998:17:59874:59877	885823	12	True				
ANR	885966	Statement	","	1998:21:59878:59878	885823	13	True				
ANR	885967	Statement	iter	1998:23:59880:59883	885823	14	True				
ANR	885968	Statement	","	1998:27:59884:59884	885823	15	True				
ANR	885969	Statement	r	1998:29:59886:59886	885823	16	True				
ANR	885970	Statement	)	1998:30:59887:59887	885823	17	True				
ANR	885971	CompoundStatement		29:2:737:758	885823	18					
ANR	885972	IdentifierDeclStatement	char * tmp = NULL ;	1999:2:59893:59909	885823	0	True				
ANR	885973	IdentifierDecl	* tmp = NULL		885823	0					
ANR	885974	IdentifierDeclType	char *		885823	0					
ANR	885975	Identifier	tmp		885823	1					
ANR	885976	AssignmentExpression	* tmp = NULL		885823	2		=			
ANR	885977	Identifier	NULL		885823	0					
ANR	885978	Identifier	NULL		885823	1					
ANR	885979	IfStatement	if ( r -> size != bits )		885823	1					
ANR	885980	Condition	r -> size != bits	2000:6:59917:59931	885823	0	True				
ANR	885981	EqualityExpression	r -> size != bits		885823	0		!=			
ANR	885982	PtrMemberAccess	r -> size		885823	0					
ANR	885983	Identifier	r		885823	0					
ANR	885984	Identifier	size		885823	1					
ANR	885985	Identifier	bits		885823	1					
ANR	885986	CompoundStatement		23:23:599:599	885823	1					
ANR	885987	ContinueStatement	continue ;	2001:3:59939:59947	885823	0	True				
ANR	885988	ExpressionStatement	"value = r_reg_get_value ( core -> dbg -> reg , r )"	2003:2:59955:59998	885823	2	True				
ANR	885989	AssignmentExpression	"value = r_reg_get_value ( core -> dbg -> reg , r )"		885823	0		=			
ANR	885990	Identifier	value		885823	0					
ANR	885991	CallExpression	"r_reg_get_value ( core -> dbg -> reg , r )"		885823	1					
ANR	885992	Callee	r_reg_get_value		885823	0					
ANR	885993	Identifier	r_reg_get_value		885823	0					
ANR	885994	ArgumentList	core -> dbg -> reg		885823	1					
ANR	885995	Argument	core -> dbg -> reg		885823	0					
ANR	885996	PtrMemberAccess	core -> dbg -> reg		885823	0					
ANR	885997	PtrMemberAccess	core -> dbg		885823	0					
ANR	885998	Identifier	core		885823	0					
ANR	885999	Identifier	dbg		885823	1					
ANR	886000	Identifier	reg		885823	1					
ANR	886001	Argument	r		885823	1					
ANR	886002	Identifier	r		885823	0					
ANR	886003	IdentifierDeclStatement	"char * rrstr = r_core_anal_hasrefs ( core , value , true ) ;"	2004:2:60002:60055	885823	3	True				
ANR	886004	IdentifierDecl	"* rrstr = r_core_anal_hasrefs ( core , value , true )"		885823	0					
ANR	886005	IdentifierDeclType	char *		885823	0					
ANR	886006	Identifier	rrstr		885823	1					
ANR	886007	AssignmentExpression	"* rrstr = r_core_anal_hasrefs ( core , value , true )"		885823	2		=			
ANR	886008	Identifier	rrstr		885823	0					
ANR	886009	CallExpression	"r_core_anal_hasrefs ( core , value , true )"		885823	1					
ANR	886010	Callee	r_core_anal_hasrefs		885823	0					
ANR	886011	Identifier	r_core_anal_hasrefs		885823	0					
ANR	886012	ArgumentList	core		885823	1					
ANR	886013	Argument	core		885823	0					
ANR	886014	Identifier	core		885823	0					
ANR	886015	Argument	value		885823	1					
ANR	886016	Identifier	value		885823	0					
ANR	886017	Argument	true		885823	2					
ANR	886018	Identifier	true		885823	0					
ANR	886019	ExpressionStatement	delta = 0	2005:2:60059:60068	885823	4	True				
ANR	886020	AssignmentExpression	delta = 0		885823	0		=			
ANR	886021	Identifier	delta		885823	0					
ANR	886022	PrimaryExpression	0		885823	1					
ANR	886023	IdentifierDeclStatement	int regSize = r -> size ;	2006:2:60072:60093	885823	5	True				
ANR	886024	IdentifierDecl	regSize = r -> size		885823	0					
ANR	886025	IdentifierDeclType	int		885823	0					
ANR	886026	Identifier	regSize		885823	1					
ANR	886027	AssignmentExpression	regSize = r -> size		885823	2		=			
ANR	886028	Identifier	regSize		885823	0					
ANR	886029	PtrMemberAccess	r -> size		885823	1					
ANR	886030	Identifier	r		885823	0					
ANR	886031	Identifier	size		885823	1					
ANR	886032	IfStatement	if ( regSize < 80 )		885823	6					
ANR	886033	Condition	regSize < 80	2007:6:60101:60112	885823	0	True				
ANR	886034	RelationalExpression	regSize < 80		885823	0		<			
ANR	886035	Identifier	regSize		885823	0					
ANR	886036	PrimaryExpression	80		885823	1					
ANR	886037	CompoundStatement		30:20:780:780	885823	1					
ANR	886038	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	2008:3:60120:60160	885823	0	True				
ANR	886039	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		885823	0					
ANR	886040	Callee	r_reg_arena_swap		885823	0					
ANR	886041	Identifier	r_reg_arena_swap		885823	0					
ANR	886042	ArgumentList	core -> dbg -> reg		885823	1					
ANR	886043	Argument	core -> dbg -> reg		885823	0					
ANR	886044	PtrMemberAccess	core -> dbg -> reg		885823	0					
ANR	886045	PtrMemberAccess	core -> dbg		885823	0					
ANR	886046	Identifier	core		885823	0					
ANR	886047	Identifier	dbg		885823	1					
ANR	886048	Identifier	reg		885823	1					
ANR	886049	Argument	false		885823	1					
ANR	886050	Identifier	false		885823	0					
ANR	886051	ExpressionStatement	"diff = r_reg_get_value ( core -> dbg -> reg , r )"	2009:3:60165:60207	885823	1	True				
ANR	886052	AssignmentExpression	"diff = r_reg_get_value ( core -> dbg -> reg , r )"		885823	0		=			
ANR	886053	Identifier	diff		885823	0					
ANR	886054	CallExpression	"r_reg_get_value ( core -> dbg -> reg , r )"		885823	1					
ANR	886055	Callee	r_reg_get_value		885823	0					
ANR	886056	Identifier	r_reg_get_value		885823	0					
ANR	886057	ArgumentList	core -> dbg -> reg		885823	1					
ANR	886058	Argument	core -> dbg -> reg		885823	0					
ANR	886059	PtrMemberAccess	core -> dbg -> reg		885823	0					
ANR	886060	PtrMemberAccess	core -> dbg		885823	0					
ANR	886061	Identifier	core		885823	0					
ANR	886062	Identifier	dbg		885823	1					
ANR	886063	Identifier	reg		885823	1					
ANR	886064	Argument	r		885823	1					
ANR	886065	Identifier	r		885823	0					
ANR	886066	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	2010:3:60212:60252	885823	2	True				
ANR	886067	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		885823	0					
ANR	886068	Callee	r_reg_arena_swap		885823	0					
ANR	886069	Identifier	r_reg_arena_swap		885823	0					
ANR	886070	ArgumentList	core -> dbg -> reg		885823	1					
ANR	886071	Argument	core -> dbg -> reg		885823	0					
ANR	886072	PtrMemberAccess	core -> dbg -> reg		885823	0					
ANR	886073	PtrMemberAccess	core -> dbg		885823	0					
ANR	886074	Identifier	core		885823	0					
ANR	886075	Identifier	dbg		885823	1					
ANR	886076	Identifier	reg		885823	1					
ANR	886077	Argument	false		885823	1					
ANR	886078	Identifier	false		885823	0					
ANR	886079	ExpressionStatement	delta = value - diff	2011:3:60257:60275	885823	3	True				
ANR	886080	AssignmentExpression	delta = value - diff		885823	0		=			
ANR	886081	Identifier	delta		885823	0					
ANR	886082	AdditiveExpression	value - diff		885823	1		-			
ANR	886083	Identifier	value		885823	0					
ANR	886084	Identifier	diff		885823	1					
ANR	886085	IfStatement	if ( delta && use_color )		885823	7					
ANR	886086	Condition	delta && use_color	2013:5:60286:60303	885823	0	True				
ANR	886087	AndExpression	delta && use_color		885823	0		&&			
ANR	886088	Identifier	delta		885823	0					
ANR	886089	Identifier	use_color		885823	1					
ANR	886090	CompoundStatement		36:24:970:970	885823	1					
ANR	886091	ExpressionStatement	color = use_color	2014:3:60310:60327	885823	0	True				
ANR	886092	AssignmentExpression	color = use_color		885823	0		=			
ANR	886093	Identifier	color		885823	0					
ANR	886094	Identifier	use_color		885823	1					
ANR	886095	ElseStatement	else		885823	0					
ANR	886096	CompoundStatement		38:9:1003:1003	885823	0					
ANR	886097	ExpressionStatement	"color = """""	2016:3:60343:60353	885823	0	True				
ANR	886098	AssignmentExpression	"color = """""		885823	0		=			
ANR	886099	Identifier	color		885823	0					
ANR	886100	PrimaryExpression	""""""		885823	1					
ANR	886101	SwitchStatement	switch ( mode )		885823	8					
ANR	886102	Condition	mode	2018:10:60369:60372	885823	0	True				
ANR	886103	Identifier	mode		885823	0					
ANR	886104	CompoundStatement		41:16:1040:1040	885823	1					
ANR	886105	Label	case 'j' :	2019:2:60379:60387	885823	0	True				
ANR	886106	IfStatement	if ( r -> flags )		885823	1					
ANR	886107	Condition	r -> flags	2020:7:60396:60403	885823	0	True				
ANR	886108	PtrMemberAccess	r -> flags		885823	0					
ANR	886109	Identifier	r		885823	0					
ANR	886110	Identifier	flags		885823	1					
ANR	886111	CompoundStatement		43:17:1071:1071	885823	1					
ANR	886112	ExpressionStatement	"tmp = r_reg_get_bvalue ( reg , r )"	2021:4:60412:60443	885823	0	True				
ANR	886113	AssignmentExpression	"tmp = r_reg_get_bvalue ( reg , r )"		885823	0		=			
ANR	886114	Identifier	tmp		885823	0					
ANR	886115	CallExpression	"r_reg_get_bvalue ( reg , r )"		885823	1					
ANR	886116	Callee	r_reg_get_bvalue		885823	0					
ANR	886117	Identifier	r_reg_get_bvalue		885823	0					
ANR	886118	ArgumentList	reg		885823	1					
ANR	886119	Argument	reg		885823	0					
ANR	886120	Identifier	reg		885823	0					
ANR	886121	Argument	r		885823	1					
ANR	886122	Identifier	r		885823	0					
ANR	886123	ExpressionStatement	"r_cons_printf ( ""%s{\\""reg\\"":\\""%s\\"",\\""value\\"":\\""%s\\"""" , iter -> p ? "","" : """" , r -> name , tmp )"	2022:4:60449:60531	885823	1	True				
ANR	886124	CallExpression	"r_cons_printf ( ""%s{\\""reg\\"":\\""%s\\"",\\""value\\"":\\""%s\\"""" , iter -> p ? "","" : """" , r -> name , tmp )"		885823	0					
ANR	886125	Callee	r_cons_printf		885823	0					
ANR	886126	Identifier	r_cons_printf		885823	0					
ANR	886127	ArgumentList	"""%s{\\""reg\\"":\\""%s\\"",\\""value\\"":\\""%s\\"""""		885823	1					
ANR	886128	Argument	"""%s{\\""reg\\"":\\""%s\\"",\\""value\\"":\\""%s\\"""""		885823	0					
ANR	886129	PrimaryExpression	"""%s{\\""reg\\"":\\""%s\\"",\\""value\\"":\\""%s\\"""""		885823	0					
ANR	886130	Argument	"iter -> p ? "","" : """""		885823	1					
ANR	886131	ConditionalExpression	"iter -> p ? "","" : """""		885823	0					
ANR	886132	Condition	iter -> p		885823	0					
ANR	886133	PtrMemberAccess	iter -> p		885823	0					
ANR	886134	Identifier	iter		885823	0					
ANR	886135	Identifier	p		885823	1					
ANR	886136	PrimaryExpression	""","""		885823	1					
ANR	886137	PrimaryExpression	""""""		885823	2					
ANR	886138	Argument	r -> name		885823	2					
ANR	886139	PtrMemberAccess	r -> name		885823	0					
ANR	886140	Identifier	r		885823	0					
ANR	886141	Identifier	name		885823	1					
ANR	886142	Argument	tmp		885823	3					
ANR	886143	Identifier	tmp		885823	0					
ANR	886144	ElseStatement	else		885823	0					
ANR	886145	CompoundStatement		46:10:1208:1208	885823	0					
ANR	886146	Statement	r_cons_printf	2024:4:60549:60561	885823	0	True				
ANR	886147	Statement	(	2024:18:60563:60563	885823	1	True				
ANR	886148	Statement	"""%s{\\""reg\\"":\\""%s\\"",\\""value\\"":\\""0x%"""	2024:19:60564:60598	885823	2	True				
ANR	886149	Statement	PFMT64x	2024:54:60599:60605	885823	3	True				
ANR	886150	Statement	"""\\"""""	2024:61:60606:60609	885823	4	True				
ANR	886151	Statement	","	2024:65:60610:60610	885823	5	True				
ANR	886152	Statement	iter	2024:67:60612:60615	885823	6	True				
ANR	886153	Statement	->	2024:71:60616:60617	885823	7	True				
ANR	886154	Statement	p	2024:73:60618:60618	885823	8	True				
ANR	886155	Statement	?	2024:74:60619:60619	885823	9	True				
ANR	886156	Statement	""","""	2024:75:60620:60622	885823	10	True				
ANR	886157	Statement	:	2024:78:60623:60623	885823	11	True				
ANR	886158	Statement	""""""	2024:79:60624:60625	885823	12	True				
ANR	886159	Statement	","	2024:81:60626:60626	885823	13	True				
ANR	886160	Statement	r	2024:83:60628:60628	885823	14	True				
ANR	886161	Statement	->	2024:84:60629:60630	885823	15	True				
ANR	886162	Statement	name	2024:86:60631:60634	885823	16	True				
ANR	886163	Statement	","	2024:90:60635:60635	885823	17	True				
ANR	886164	Statement	value	2024:92:60637:60641	885823	18	True				
ANR	886165	Statement	)	2024:97:60642:60642	885823	19	True				
ANR	886166	ExpressionStatement		2024:98:60643:60643	885823	20	True				
ANR	886167	BreakStatement	break ;	2026:3:60653:60658	885823	2	True				
ANR	886168	Label	default :	2027:2:60662:60669	885823	3	True				
ANR	886169	Identifier	default		885823	0					
ANR	886170	CompoundStatement		53:4:1371:1376	885823	4					
ANR	886171	IdentifierDeclStatement	"const char * arg = """" ;"	2029:4:60680:60700	885823	0	True				
ANR	886172	IdentifierDecl	"* arg = """""		885823	0					
ANR	886173	IdentifierDeclType	const char *		885823	0					
ANR	886174	Identifier	arg		885823	1					
ANR	886175	AssignmentExpression	"* arg = """""		885823	2		=			
ANR	886176	Identifier	arg		885823	0					
ANR	886177	PrimaryExpression	""""""		885823	1					
ANR	886178	IdentifierDeclStatement	int i ;	2030:4:60706:60711	885823	1	True				
ANR	886179	IdentifierDecl	i		885823	0					
ANR	886180	IdentifierDeclType	int		885823	0					
ANR	886181	Identifier	i		885823	1					
ANR	886182	ForStatement	for ( i = 0 ; i < R_REG_NAME_LAST ; i ++ )		885823	2					
ANR	886183	ForInit	i = 0 ;	2031:9:60722:60727	885823	0	True				
ANR	886184	AssignmentExpression	i = 0		885823	0		=			
ANR	886185	Identifier	i		885823	0					
ANR	886186	PrimaryExpression	0		885823	1					
ANR	886187	Condition	i < R_REG_NAME_LAST	2031:16:60729:60747	885823	1	True				
ANR	886188	RelationalExpression	i < R_REG_NAME_LAST		885823	0		<			
ANR	886189	Identifier	i		885823	0					
ANR	886190	Identifier	R_REG_NAME_LAST		885823	1					
ANR	886191	PostIncDecOperationExpression	i ++	2031:37:60750:60752	885823	2	True				
ANR	886192	Identifier	i		885823	0					
ANR	886193	IncDec	++		885823	1					
ANR	886194	CompoundStatement		55:5:1427:1466	885823	3					
ANR	886195	IdentifierDeclStatement	"const char * t = r_reg_get_name ( reg , i ) ;"	2032:5:60762:60801	885823	0	True				
ANR	886196	IdentifierDecl	"* t = r_reg_get_name ( reg , i )"		885823	0					
ANR	886197	IdentifierDeclType	const char *		885823	0					
ANR	886198	Identifier	t		885823	1					
ANR	886199	AssignmentExpression	"* t = r_reg_get_name ( reg , i )"		885823	2		=			
ANR	886200	Identifier	t		885823	0					
ANR	886201	CallExpression	"r_reg_get_name ( reg , i )"		885823	1					
ANR	886202	Callee	r_reg_get_name		885823	0					
ANR	886203	Identifier	r_reg_get_name		885823	0					
ANR	886204	ArgumentList	reg		885823	1					
ANR	886205	Argument	reg		885823	0					
ANR	886206	Identifier	reg		885823	0					
ANR	886207	Argument	i		885823	1					
ANR	886208	Identifier	i		885823	0					
ANR	886209	IfStatement	"if ( t && ! strcmp ( t , r -> name ) )"		885823	1					
ANR	886210	Condition	"t && ! strcmp ( t , r -> name )"	2033:9:60812:60836	885823	0	True				
ANR	886211	AndExpression	"t && ! strcmp ( t , r -> name )"		885823	0		&&			
ANR	886212	Identifier	t		885823	0					
ANR	886213	UnaryOperationExpression	"! strcmp ( t , r -> name )"		885823	1					
ANR	886214	UnaryOperator	!		885823	0					
ANR	886215	CallExpression	"strcmp ( t , r -> name )"		885823	1					
ANR	886216	Callee	strcmp		885823	0					
ANR	886217	Identifier	strcmp		885823	0					
ANR	886218	ArgumentList	t		885823	1					
ANR	886219	Argument	t		885823	0					
ANR	886220	Identifier	t		885823	0					
ANR	886221	Argument	r -> name		885823	1					
ANR	886222	PtrMemberAccess	r -> name		885823	0					
ANR	886223	Identifier	r		885823	0					
ANR	886224	Identifier	name		885823	1					
ANR	886225	CompoundStatement		56:36:1504:1504	885823	1					
ANR	886226	ExpressionStatement	arg = r_reg_get_role ( i )	2034:6:60847:60871	885823	0	True				
ANR	886227	AssignmentExpression	arg = r_reg_get_role ( i )		885823	0		=			
ANR	886228	Identifier	arg		885823	0					
ANR	886229	CallExpression	r_reg_get_role ( i )		885823	1					
ANR	886230	Callee	r_reg_get_role		885823	0					
ANR	886231	Identifier	r_reg_get_role		885823	0					
ANR	886232	ArgumentList	i		885823	1					
ANR	886233	Argument	i		885823	0					
ANR	886234	Identifier	i		885823	0					
ANR	886235	ExpressionStatement	"r_cons_printf ( ""%3s"" , arg )"	2037:4:60890:60916	885823	3	True				
ANR	886236	CallExpression	"r_cons_printf ( ""%3s"" , arg )"		885823	0					
ANR	886237	Callee	r_cons_printf		885823	0					
ANR	886238	Identifier	r_cons_printf		885823	0					
ANR	886239	ArgumentList	"""%3s"""		885823	1					
ANR	886240	Argument	"""%3s"""		885823	0					
ANR	886241	PrimaryExpression	"""%3s"""		885823	0					
ANR	886242	Argument	arg		885823	1					
ANR	886243	Identifier	arg		885823	0					
ANR	886244	IfStatement	if ( bits == 64 )		885823	5					
ANR	886245	Condition	bits == 64	2039:7:60930:60939	885823	0	True				
ANR	886246	EqualityExpression	bits == 64		885823	0		==			
ANR	886247	Identifier	bits		885823	0					
ANR	886248	PrimaryExpression	64		885823	1					
ANR	886249	CompoundStatement		62:19:1607:1607	885823	1					
ANR	886250	IfStatement	if ( r -> flags )		885823	0					
ANR	886251	Condition	r -> flags	2040:8:60952:60959	885823	0	True				
ANR	886252	PtrMemberAccess	r -> flags		885823	0					
ANR	886253	Identifier	r		885823	0					
ANR	886254	Identifier	flags		885823	1					
ANR	886255	CompoundStatement		63:18:1627:1627	885823	1					
ANR	886256	ExpressionStatement	"tmp = r_reg_get_bvalue ( reg , r )"	2041:5:60969:61000	885823	0	True				
ANR	886257	AssignmentExpression	"tmp = r_reg_get_bvalue ( reg , r )"		885823	0		=			
ANR	886258	Identifier	tmp		885823	0					
ANR	886259	CallExpression	"r_reg_get_bvalue ( reg , r )"		885823	1					
ANR	886260	Callee	r_reg_get_bvalue		885823	0					
ANR	886261	Identifier	r_reg_get_bvalue		885823	0					
ANR	886262	ArgumentList	reg		885823	1					
ANR	886263	Argument	reg		885823	0					
ANR	886264	Identifier	reg		885823	0					
ANR	886265	Argument	r		885823	1					
ANR	886266	Identifier	r		885823	0					
ANR	886267	ExpressionStatement	"r_cons_printf ( ""%s%6s %-18s%s"" , color , r -> name , tmp , Color_RESET )"	2042:5:61007:61072	885823	1	True				
ANR	886268	CallExpression	"r_cons_printf ( ""%s%6s %-18s%s"" , color , r -> name , tmp , Color_RESET )"		885823	0					
ANR	886269	Callee	r_cons_printf		885823	0					
ANR	886270	Identifier	r_cons_printf		885823	0					
ANR	886271	ArgumentList	"""%s%6s %-18s%s"""		885823	1					
ANR	886272	Argument	"""%s%6s %-18s%s"""		885823	0					
ANR	886273	PrimaryExpression	"""%s%6s %-18s%s"""		885823	0					
ANR	886274	Argument	color		885823	1					
ANR	886275	Identifier	color		885823	0					
ANR	886276	Argument	r -> name		885823	2					
ANR	886277	PtrMemberAccess	r -> name		885823	0					
ANR	886278	Identifier	r		885823	0					
ANR	886279	Identifier	name		885823	1					
ANR	886280	Argument	tmp		885823	3					
ANR	886281	Identifier	tmp		885823	0					
ANR	886282	Argument	Color_RESET		885823	4					
ANR	886283	Identifier	Color_RESET		885823	0					
ANR	886284	ElseStatement	else		885823	0					
ANR	886285	CompoundStatement		66:11:1750:1750	885823	0					
ANR	886286	Statement	r_cons_printf	2044:5:61092:61104	885823	0	True				
ANR	886287	Statement	(	2044:19:61106:61106	885823	1	True				
ANR	886288	Statement	"""%s%6s 0x%-16"""	2044:20:61107:61120	885823	2	True				
ANR	886289	Statement	PFMT64x	2044:34:61121:61127	885823	3	True				
ANR	886290	Statement	"""%s"""	2044:41:61128:61131	885823	4	True				
ANR	886291	Statement	","	2044:45:61132:61132	885823	5	True				
ANR	886292	Statement	color	2044:47:61134:61138	885823	6	True				
ANR	886293	Statement	","	2044:52:61139:61139	885823	7	True				
ANR	886294	Statement	r	2044:54:61141:61141	885823	8	True				
ANR	886295	Statement	->	2044:55:61142:61143	885823	9	True				
ANR	886296	Statement	name	2044:57:61144:61147	885823	10	True				
ANR	886297	Statement	","	2044:61:61148:61148	885823	11	True				
ANR	886298	Statement	value	2044:63:61150:61154	885823	12	True				
ANR	886299	Statement	","	2044:68:61155:61155	885823	13	True				
ANR	886300	Statement	Color_RESET	2044:70:61157:61167	885823	14	True				
ANR	886301	Statement	)	2044:81:61168:61168	885823	15	True				
ANR	886302	ExpressionStatement		2044:82:61169:61169	885823	16	True				
ANR	886303	ElseStatement	else		885823	0					
ANR	886304	CompoundStatement		69:10:1852:1852	885823	0					
ANR	886305	IfStatement	if ( r -> flags )		885823	0					
ANR	886306	Condition	r -> flags	2047:8:61197:61204	885823	0	True				
ANR	886307	PtrMemberAccess	r -> flags		885823	0					
ANR	886308	Identifier	r		885823	0					
ANR	886309	Identifier	flags		885823	1					
ANR	886310	CompoundStatement		70:18:1872:1872	885823	1					
ANR	886311	ExpressionStatement	"tmp = r_reg_get_bvalue ( reg , r )"	2048:5:61214:61245	885823	0	True				
ANR	886312	AssignmentExpression	"tmp = r_reg_get_bvalue ( reg , r )"		885823	0		=			
ANR	886313	Identifier	tmp		885823	0					
ANR	886314	CallExpression	"r_reg_get_bvalue ( reg , r )"		885823	1					
ANR	886315	Callee	r_reg_get_bvalue		885823	0					
ANR	886316	Identifier	r_reg_get_bvalue		885823	0					
ANR	886317	ArgumentList	reg		885823	1					
ANR	886318	Argument	reg		885823	0					
ANR	886319	Identifier	reg		885823	0					
ANR	886320	Argument	r		885823	1					
ANR	886321	Identifier	r		885823	0					
ANR	886322	ExpressionStatement	"r_cons_printf ( ""%s%6s %-10s%s"" , color , r -> name , tmp , Color_RESET )"	2049:5:61252:61317	885823	1	True				
ANR	886323	CallExpression	"r_cons_printf ( ""%s%6s %-10s%s"" , color , r -> name , tmp , Color_RESET )"		885823	0					
ANR	886324	Callee	r_cons_printf		885823	0					
ANR	886325	Identifier	r_cons_printf		885823	0					
ANR	886326	ArgumentList	"""%s%6s %-10s%s"""		885823	1					
ANR	886327	Argument	"""%s%6s %-10s%s"""		885823	0					
ANR	886328	PrimaryExpression	"""%s%6s %-10s%s"""		885823	0					
ANR	886329	Argument	color		885823	1					
ANR	886330	Identifier	color		885823	0					
ANR	886331	Argument	r -> name		885823	2					
ANR	886332	PtrMemberAccess	r -> name		885823	0					
ANR	886333	Identifier	r		885823	0					
ANR	886334	Identifier	name		885823	1					
ANR	886335	Argument	tmp		885823	3					
ANR	886336	Identifier	tmp		885823	0					
ANR	886337	Argument	Color_RESET		885823	4					
ANR	886338	Identifier	Color_RESET		885823	0					
ANR	886339	ElseStatement	else		885823	0					
ANR	886340	CompoundStatement		73:11:1995:1995	885823	0					
ANR	886341	Statement	r_cons_printf	2051:5:61337:61349	885823	0	True				
ANR	886342	Statement	(	2051:19:61351:61351	885823	1	True				
ANR	886343	Statement	"""%s%6s 0x%-8"""	2051:20:61352:61364	885823	2	True				
ANR	886344	Statement	PFMT64x	2051:33:61365:61371	885823	3	True				
ANR	886345	Statement	"""%s"""	2051:40:61372:61375	885823	4	True				
ANR	886346	Statement	","	2051:44:61376:61376	885823	5	True				
ANR	886347	Statement	color	2051:46:61378:61382	885823	6	True				
ANR	886348	Statement	","	2051:51:61383:61383	885823	7	True				
ANR	886349	Statement	r	2051:53:61385:61385	885823	8	True				
ANR	886350	Statement	->	2051:54:61386:61387	885823	9	True				
ANR	886351	Statement	name	2051:56:61388:61391	885823	10	True				
ANR	886352	Statement	","	2051:60:61392:61392	885823	11	True				
ANR	886353	Statement	value	2051:62:61394:61398	885823	12	True				
ANR	886354	Statement	","	2051:67:61399:61399	885823	13	True				
ANR	886355	Statement	Color_RESET	2051:69:61401:61411	885823	14	True				
ANR	886356	Statement	)	2051:80:61412:61412	885823	15	True				
ANR	886357	ExpressionStatement		2051:81:61413:61413	885823	16	True				
ANR	886358	BreakStatement	break ;	2054:3:61429:61434	885823	6	True				
ANR	886359	IfStatement	if ( r -> flags )		885823	9					
ANR	886360	Condition	r -> flags	2056:6:61446:61453	885823	0	True				
ANR	886361	PtrMemberAccess	r -> flags		885823	0					
ANR	886362	Identifier	r		885823	0					
ANR	886363	Identifier	flags		885823	1					
ANR	886364	CompoundStatement		79:16:2121:2121	885823	1					
ANR	886365	ExpressionStatement	free ( tmp )	2057:3:61461:61471	885823	0	True				
ANR	886366	CallExpression	free ( tmp )		885823	0					
ANR	886367	Callee	free		885823	0					
ANR	886368	Identifier	free		885823	0					
ANR	886369	ArgumentList	tmp		885823	1					
ANR	886370	Argument	tmp		885823	0					
ANR	886371	Identifier	tmp		885823	0					
ANR	886372	IfStatement	if ( rrstr )		885823	10					
ANR	886373	Condition	rrstr	2059:6:61483:61487	885823	0	True				
ANR	886374	Identifier	rrstr		885823	0					
ANR	886375	CompoundStatement		82:13:2155:2155	885823	1					
ANR	886376	IfStatement	if ( mode == 'j' )		885823	0					
ANR	886377	Condition	mode == 'j'	2060:7:61499:61509	885823	0	True				
ANR	886378	EqualityExpression	mode == 'j'		885823	0		==			
ANR	886379	Identifier	mode		885823	0					
ANR	886380	PrimaryExpression	'j'		885823	1					
ANR	886381	CompoundStatement		83:20:2177:2177	885823	1					
ANR	886382	ExpressionStatement	"r_cons_printf ( "",\\""ref\\"":\\""%s\\""}"" , rrstr )"	2061:4:61518:61559	885823	0	True				
ANR	886383	CallExpression	"r_cons_printf ( "",\\""ref\\"":\\""%s\\""}"" , rrstr )"		885823	0					
ANR	886384	Callee	r_cons_printf		885823	0					
ANR	886385	Identifier	r_cons_printf		885823	0					
ANR	886386	ArgumentList	""",\\""ref\\"":\\""%s\\""}"""		885823	1					
ANR	886387	Argument	""",\\""ref\\"":\\""%s\\""}"""		885823	0					
ANR	886388	PrimaryExpression	""",\\""ref\\"":\\""%s\\""}"""		885823	0					
ANR	886389	Argument	rrstr		885823	1					
ANR	886390	Identifier	rrstr		885823	0					
ANR	886391	ElseStatement	else		885823	0					
ANR	886392	CompoundStatement		85:10:2236:2236	885823	0					
ANR	886393	ExpressionStatement	"r_cons_printf ( "" %s\\n"" , rrstr )"	2063:4:61577:61607	885823	0	True				
ANR	886394	CallExpression	"r_cons_printf ( "" %s\\n"" , rrstr )"		885823	0					
ANR	886395	Callee	r_cons_printf		885823	0					
ANR	886396	Identifier	r_cons_printf		885823	0					
ANR	886397	ArgumentList	""" %s\\n"""		885823	1					
ANR	886398	Argument	""" %s\\n"""		885823	0					
ANR	886399	PrimaryExpression	""" %s\\n"""		885823	0					
ANR	886400	Argument	rrstr		885823	1					
ANR	886401	Identifier	rrstr		885823	0					
ANR	886402	ExpressionStatement	free ( rrstr )	2065:3:61617:61629	885823	1	True				
ANR	886403	CallExpression	free ( rrstr )		885823	0					
ANR	886404	Callee	free		885823	0					
ANR	886405	Identifier	free		885823	0					
ANR	886406	ArgumentList	rrstr		885823	1					
ANR	886407	Argument	rrstr		885823	0					
ANR	886408	Identifier	rrstr		885823	0					
ANR	886409	IfStatement	if ( mode == 'j' )		885823	19					
ANR	886410	Condition	mode == 'j'	2068:5:61643:61653	885823	0	True				
ANR	886411	EqualityExpression	mode == 'j'		885823	0		==			
ANR	886412	Identifier	mode		885823	0					
ANR	886413	PrimaryExpression	'j'		885823	1					
ANR	886414	CompoundStatement		91:18:2321:2321	885823	1					
ANR	886415	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	2069:2:61660:61680	885823	0	True				
ANR	886416	CallExpression	"r_cons_printf ( ""]\\n"" )"		885823	0					
ANR	886417	Callee	r_cons_printf		885823	0					
ANR	886418	Identifier	r_cons_printf		885823	0					
ANR	886419	ArgumentList	"""]\\n"""		885823	1					
ANR	886420	Argument	"""]\\n"""		885823	0					
ANR	886421	PrimaryExpression	"""]\\n"""		885823	0					
ANR	886422	ReturnType	R_API void		885823	1					
ANR	886423	Identifier	r_core_debug_rr		885823	2					
ANR	886424	ParameterList	"RCore * core , RReg * reg , int mode"		885823	3					
ANR	886425	Parameter	RCore * core	1978:27:59300:59310	885823	0	True				
ANR	886426	ParameterType	RCore *		885823	0					
ANR	886427	Identifier	core		885823	1					
ANR	886428	Parameter	RReg * reg	1978:40:59313:59321	885823	1	True				
ANR	886429	ParameterType	RReg *		885823	0					
ANR	886430	Identifier	reg		885823	1					
ANR	886431	Parameter	int mode	1978:51:59324:59331	885823	2	True				
ANR	886432	ParameterType	int		885823	0					
ANR	886433	Identifier	mode		885823	1					
ANR	886434	CFGEntryNode	ENTRY		885823		True				
ANR	886435	CFGExitNode	EXIT		885823		True				
ANR	886436	CFGErrorNode	ERROR		885823		True				
ANR	886437	Symbol	r -> flags		885823						
ANR	886438	Symbol	color		885823						
ANR	886439	Symbol	regSize		885823						
ANR	886440	Symbol	* core		885823						
ANR	886441	Symbol	delta		885823						
ANR	886442	Symbol	core -> assembler -> bits		885823						
ANR	886443	Symbol	Color_RESET		885823						
ANR	886444	Symbol	core -> assembler		885823						
ANR	886445	Symbol	r_reg_get_bvalue		885823						
ANR	886446	Symbol	r_reg_get_role		885823						
ANR	886447	Symbol	rrstr		885823						
ANR	886448	Symbol	mode		885823						
ANR	886449	Symbol	* core -> assembler		885823						
ANR	886450	Symbol	* iter		885823						
ANR	886451	Symbol	R_REG_NAME_LAST		885823						
ANR	886452	Symbol	reg		885823						
ANR	886453	Symbol	tmp		885823						
ANR	886454	Symbol	arg		885823						
ANR	886455	Symbol	iter -> p		885823						
ANR	886456	Symbol	value		885823						
ANR	886457	Symbol	* * core		885823						
ANR	886458	Symbol	R_REG_TYPE_GPR		885823						
ANR	886459	Symbol	core -> config		885823						
ANR	886460	Symbol	strcmp		885823						
ANR	886461	Symbol	r_reg_get_value		885823						
ANR	886462	Symbol	NULL		885823						
ANR	886463	Symbol	r_reg_get_list		885823						
ANR	886464	Symbol	bits		885823						
ANR	886465	Symbol	false		885823						
ANR	886466	Symbol	iter		885823						
ANR	886467	Symbol	i		885823						
ANR	886468	Symbol	diff		885823						
ANR	886469	Symbol	list		885823						
ANR	886470	Symbol	use_color		885823						
ANR	886471	Symbol	r_core_anal_hasrefs		885823						
ANR	886472	Symbol	core		885823						
ANR	886473	Symbol	r		885823						
ANR	886474	Symbol	t		885823						
ANR	886475	Symbol	r_reg_get_name		885823						
ANR	886476	Symbol	core -> dbg -> reg		885823						
ANR	886477	Symbol	r -> name		885823						
ANR	886478	Symbol	r_config_get_i		885823						
ANR	886479	Symbol	true		885823						
ANR	886480	Symbol	use_colors		885823						
ANR	886481	Symbol	* r		885823						
ANR	886482	Symbol	* core -> dbg		885823						
ANR	886483	Symbol	r -> size		885823						
ANR	886484	Symbol	core -> dbg		885823						
ANR	886485	Function	show_drpi	2073:0:61688:62561							
ANR	886486	FunctionDef	show_drpi (RCore * core)		886485	0					
ANR	886487	CompoundStatement		2073:35:61723:62561	886485	0					
ANR	886488	IdentifierDeclStatement	int i ;	2074:1:61726:61731	886485	0	True				
ANR	886489	IdentifierDecl	i		886485	0					
ANR	886490	IdentifierDeclType	int		886485	0					
ANR	886491	Identifier	i		886485	1					
ANR	886492	IdentifierDeclStatement	RListIter * iter ;	2075:1:61734:61749	886485	1	True				
ANR	886493	IdentifierDecl	* iter		886485	0					
ANR	886494	IdentifierDeclType	RListIter *		886485	0					
ANR	886495	Identifier	iter		886485	1					
ANR	886496	IdentifierDeclStatement	RRegItem * ri ;	2076:1:61752:61764	886485	2	True				
ANR	886497	IdentifierDecl	* ri		886485	0					
ANR	886498	IdentifierDeclType	RRegItem *		886485	0					
ANR	886499	Identifier	ri		886485	1					
ANR	886500	ExpressionStatement	"r_cons_printf ( ""Aliases (Reg->name)\\n"" )"	2077:1:61767:61806	886485	3	True				
ANR	886501	CallExpression	"r_cons_printf ( ""Aliases (Reg->name)\\n"" )"		886485	0					
ANR	886502	Callee	r_cons_printf		886485	0					
ANR	886503	Identifier	r_cons_printf		886485	0					
ANR	886504	ArgumentList	"""Aliases (Reg->name)\\n"""		886485	1					
ANR	886505	Argument	"""Aliases (Reg->name)\\n"""		886485	0					
ANR	886506	PrimaryExpression	"""Aliases (Reg->name)\\n"""		886485	0					
ANR	886507	ForStatement	for ( i = 0 ; i < R_REG_NAME_LAST ; i ++ )		886485	4					
ANR	886508	ForInit	i = 0 ;	2078:6:61814:61819	886485	0	True				
ANR	886509	AssignmentExpression	i = 0		886485	0		=			
ANR	886510	Identifier	i		886485	0					
ANR	886511	PrimaryExpression	0		886485	1					
ANR	886512	Condition	i < R_REG_NAME_LAST	2078:13:61821:61839	886485	1	True				
ANR	886513	RelationalExpression	i < R_REG_NAME_LAST		886485	0		<			
ANR	886514	Identifier	i		886485	0					
ANR	886515	Identifier	R_REG_NAME_LAST		886485	1					
ANR	886516	PostIncDecOperationExpression	i ++	2078:34:61842:61844	886485	2	True				
ANR	886517	Identifier	i		886485	0					
ANR	886518	IncDec	++		886485	1					
ANR	886519	CompoundStatement		6:39:123:123	886485	3					
ANR	886520	ExpressionStatement	"r_cons_printf ( ""%d %s %s\\n"" , i , r_reg_get_role ( i ) , core -> anal -> reg -> name [ i ] )"	2079:2:61851:61928	886485	0	True				
ANR	886521	CallExpression	"r_cons_printf ( ""%d %s %s\\n"" , i , r_reg_get_role ( i ) , core -> anal -> reg -> name [ i ] )"		886485	0					
ANR	886522	Callee	r_cons_printf		886485	0					
ANR	886523	Identifier	r_cons_printf		886485	0					
ANR	886524	ArgumentList	"""%d %s %s\\n"""		886485	1					
ANR	886525	Argument	"""%d %s %s\\n"""		886485	0					
ANR	886526	PrimaryExpression	"""%d %s %s\\n"""		886485	0					
ANR	886527	Argument	i		886485	1					
ANR	886528	Identifier	i		886485	0					
ANR	886529	Argument	r_reg_get_role ( i )		886485	2					
ANR	886530	CallExpression	r_reg_get_role ( i )		886485	0					
ANR	886531	Callee	r_reg_get_role		886485	0					
ANR	886532	Identifier	r_reg_get_role		886485	0					
ANR	886533	ArgumentList	i		886485	1					
ANR	886534	Argument	i		886485	0					
ANR	886535	Identifier	i		886485	0					
ANR	886536	Argument	core -> anal -> reg -> name [ i ]		886485	3					
ANR	886537	ArrayIndexing	core -> anal -> reg -> name [ i ]		886485	0					
ANR	886538	PtrMemberAccess	core -> anal -> reg -> name		886485	0					
ANR	886539	PtrMemberAccess	core -> anal -> reg		886485	0					
ANR	886540	PtrMemberAccess	core -> anal		886485	0					
ANR	886541	Identifier	core		886485	0					
ANR	886542	Identifier	anal		886485	1					
ANR	886543	Identifier	reg		886485	1					
ANR	886544	Identifier	name		886485	1					
ANR	886545	Identifier	i		886485	1					
ANR	886546	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; i ++ )		886485	5					
ANR	886547	ForInit	i = 0 ;	2081:6:61939:61944	886485	0	True				
ANR	886548	AssignmentExpression	i = 0		886485	0		=			
ANR	886549	Identifier	i		886485	0					
ANR	886550	PrimaryExpression	0		886485	1					
ANR	886551	Condition	i < R_REG_TYPE_LAST	2081:13:61946:61964	886485	1	True				
ANR	886552	RelationalExpression	i < R_REG_TYPE_LAST		886485	0		<			
ANR	886553	Identifier	i		886485	0					
ANR	886554	Identifier	R_REG_TYPE_LAST		886485	1					
ANR	886555	PostIncDecOperationExpression	i ++	2081:34:61967:61969	886485	2	True				
ANR	886556	Identifier	i		886485	0					
ANR	886557	IncDec	++		886485	1					
ANR	886558	CompoundStatement		12:2:338:379	886485	3					
ANR	886559	IdentifierDeclStatement	const char * nmi = r_reg_get_type ( i ) ;	2082:2:61976:62012	886485	0	True				
ANR	886560	IdentifierDecl	* nmi = r_reg_get_type ( i )		886485	0					
ANR	886561	IdentifierDeclType	const char *		886485	0					
ANR	886562	Identifier	nmi		886485	1					
ANR	886563	AssignmentExpression	* nmi = r_reg_get_type ( i )		886485	2		=			
ANR	886564	Identifier	nmi		886485	0					
ANR	886565	CallExpression	r_reg_get_type ( i )		886485	1					
ANR	886566	Callee	r_reg_get_type		886485	0					
ANR	886567	Identifier	r_reg_get_type		886485	0					
ANR	886568	ArgumentList	i		886485	1					
ANR	886569	Argument	i		886485	0					
ANR	886570	Identifier	i		886485	0					
ANR	886571	ExpressionStatement	"r_cons_printf ( ""regset %d (%s)\\n"" , i , nmi )"	2083:2:62016:62058	886485	1	True				
ANR	886572	CallExpression	"r_cons_printf ( ""regset %d (%s)\\n"" , i , nmi )"		886485	0					
ANR	886573	Callee	r_cons_printf		886485	0					
ANR	886574	Identifier	r_cons_printf		886485	0					
ANR	886575	ArgumentList	"""regset %d (%s)\\n"""		886485	1					
ANR	886576	Argument	"""regset %d (%s)\\n"""		886485	0					
ANR	886577	PrimaryExpression	"""regset %d (%s)\\n"""		886485	0					
ANR	886578	Argument	i		886485	1					
ANR	886579	Identifier	i		886485	0					
ANR	886580	Argument	nmi		886485	2					
ANR	886581	Identifier	nmi		886485	0					
ANR	886582	IdentifierDeclStatement	RRegSet * rs = & core -> anal -> reg -> regset [ i ] ;	2084:2:62062:62103	886485	2	True				
ANR	886583	IdentifierDecl	* rs = & core -> anal -> reg -> regset [ i ]		886485	0					
ANR	886584	IdentifierDeclType	RRegSet *		886485	0					
ANR	886585	Identifier	rs		886485	1					
ANR	886586	AssignmentExpression	* rs = & core -> anal -> reg -> regset [ i ]		886485	2		=			
ANR	886587	Identifier	rs		886485	0					
ANR	886588	UnaryOperationExpression	& core -> anal -> reg -> regset [ i ]		886485	1					
ANR	886589	UnaryOperator	&		886485	0					
ANR	886590	ArrayIndexing	core -> anal -> reg -> regset [ i ]		886485	1					
ANR	886591	PtrMemberAccess	core -> anal -> reg -> regset		886485	0					
ANR	886592	PtrMemberAccess	core -> anal -> reg		886485	0					
ANR	886593	PtrMemberAccess	core -> anal		886485	0					
ANR	886594	Identifier	core		886485	0					
ANR	886595	Identifier	anal		886485	1					
ANR	886596	Identifier	reg		886485	1					
ANR	886597	Identifier	regset		886485	1					
ANR	886598	Identifier	i		886485	1					
ANR	886599	ExpressionStatement	"r_cons_printf ( ""* arena %s size %d\\n"" , r_reg_get_type ( i ) , rs -> arena -> size )"	2085:2:62107:62182	886485	3	True				
ANR	886600	CallExpression	"r_cons_printf ( ""* arena %s size %d\\n"" , r_reg_get_type ( i ) , rs -> arena -> size )"		886485	0					
ANR	886601	Callee	r_cons_printf		886485	0					
ANR	886602	Identifier	r_cons_printf		886485	0					
ANR	886603	ArgumentList	"""* arena %s size %d\\n"""		886485	1					
ANR	886604	Argument	"""* arena %s size %d\\n"""		886485	0					
ANR	886605	PrimaryExpression	"""* arena %s size %d\\n"""		886485	0					
ANR	886606	Argument	r_reg_get_type ( i )		886485	1					
ANR	886607	CallExpression	r_reg_get_type ( i )		886485	0					
ANR	886608	Callee	r_reg_get_type		886485	0					
ANR	886609	Identifier	r_reg_get_type		886485	0					
ANR	886610	ArgumentList	i		886485	1					
ANR	886611	Argument	i		886485	0					
ANR	886612	Identifier	i		886485	0					
ANR	886613	Argument	rs -> arena -> size		886485	2					
ANR	886614	PtrMemberAccess	rs -> arena -> size		886485	0					
ANR	886615	PtrMemberAccess	rs -> arena		886485	0					
ANR	886616	Identifier	rs		886485	0					
ANR	886617	Identifier	arena		886485	1					
ANR	886618	Identifier	size		886485	1					
ANR	886619	Statement	r_list_foreach	2086:2:62186:62199	886485	4	True				
ANR	886620	Statement	(	2086:17:62201:62201	886485	5	True				
ANR	886621	Statement	rs	2086:18:62202:62203	886485	6	True				
ANR	886622	Statement	->	2086:20:62204:62205	886485	7	True				
ANR	886623	Statement	regs	2086:22:62206:62209	886485	8	True				
ANR	886624	Statement	","	2086:26:62210:62210	886485	9	True				
ANR	886625	Statement	iter	2086:28:62212:62215	886485	10	True				
ANR	886626	Statement	","	2086:32:62216:62216	886485	11	True				
ANR	886627	Statement	ri	2086:34:62218:62219	886485	12	True				
ANR	886628	Statement	)	2086:36:62220:62220	886485	13	True				
ANR	886629	CompoundStatement		16:3:551:595	886485	14					
ANR	886630	IdentifierDeclStatement	const char * tpe = r_reg_get_type ( ri -> type ) ;	2087:3:62227:62270	886485	0	True				
ANR	886631	IdentifierDecl	* tpe = r_reg_get_type ( ri -> type )		886485	0					
ANR	886632	IdentifierDeclType	const char *		886485	0					
ANR	886633	Identifier	tpe		886485	1					
ANR	886634	AssignmentExpression	* tpe = r_reg_get_type ( ri -> type )		886485	2		=			
ANR	886635	Identifier	tpe		886485	0					
ANR	886636	CallExpression	r_reg_get_type ( ri -> type )		886485	1					
ANR	886637	Callee	r_reg_get_type		886485	0					
ANR	886638	Identifier	r_reg_get_type		886485	0					
ANR	886639	ArgumentList	ri -> type		886485	1					
ANR	886640	Argument	ri -> type		886485	0					
ANR	886641	PtrMemberAccess	ri -> type		886485	0					
ANR	886642	Identifier	ri		886485	0					
ANR	886643	Identifier	type		886485	1					
ANR	886644	IdentifierDeclStatement	const char * arn = r_reg_get_type ( ri -> arena ) ;	2088:3:62275:62319	886485	1	True				
ANR	886645	IdentifierDecl	* arn = r_reg_get_type ( ri -> arena )		886485	0					
ANR	886646	IdentifierDeclType	const char *		886485	0					
ANR	886647	Identifier	arn		886485	1					
ANR	886648	AssignmentExpression	* arn = r_reg_get_type ( ri -> arena )		886485	2		=			
ANR	886649	Identifier	arn		886485	0					
ANR	886650	CallExpression	r_reg_get_type ( ri -> arena )		886485	1					
ANR	886651	Callee	r_reg_get_type		886485	0					
ANR	886652	Identifier	r_reg_get_type		886485	0					
ANR	886653	ArgumentList	ri -> arena		886485	1					
ANR	886654	Argument	ri -> arena		886485	0					
ANR	886655	PtrMemberAccess	ri -> arena		886485	0					
ANR	886656	Identifier	ri		886485	0					
ANR	886657	Identifier	arena		886485	1					
ANR	886658	ExpressionStatement	"r_cons_printf ( ""   %s %s @ %s (offset: %d  size: %d)"" , ri -> name , tpe , arn , ri -> offset / 8 , ri -> size / 8 )"	2089:3:62324:62428	886485	2	True				
ANR	886659	CallExpression	"r_cons_printf ( ""   %s %s @ %s (offset: %d  size: %d)"" , ri -> name , tpe , arn , ri -> offset / 8 , ri -> size / 8 )"		886485	0					
ANR	886660	Callee	r_cons_printf		886485	0					
ANR	886661	Identifier	r_cons_printf		886485	0					
ANR	886662	ArgumentList	"""   %s %s @ %s (offset: %d  size: %d)"""		886485	1					
ANR	886663	Argument	"""   %s %s @ %s (offset: %d  size: %d)"""		886485	0					
ANR	886664	PrimaryExpression	"""   %s %s @ %s (offset: %d  size: %d)"""		886485	0					
ANR	886665	Argument	ri -> name		886485	1					
ANR	886666	PtrMemberAccess	ri -> name		886485	0					
ANR	886667	Identifier	ri		886485	0					
ANR	886668	Identifier	name		886485	1					
ANR	886669	Argument	tpe		886485	2					
ANR	886670	Identifier	tpe		886485	0					
ANR	886671	Argument	arn		886485	3					
ANR	886672	Identifier	arn		886485	0					
ANR	886673	Argument	ri -> offset / 8		886485	4					
ANR	886674	MultiplicativeExpression	ri -> offset / 8		886485	0		/			
ANR	886675	PtrMemberAccess	ri -> offset		886485	0					
ANR	886676	Identifier	ri		886485	0					
ANR	886677	Identifier	offset		886485	1					
ANR	886678	PrimaryExpression	8		886485	1					
ANR	886679	Argument	ri -> size / 8		886485	5					
ANR	886680	MultiplicativeExpression	ri -> size / 8		886485	0		/			
ANR	886681	PtrMemberAccess	ri -> size		886485	0					
ANR	886682	Identifier	ri		886485	0					
ANR	886683	Identifier	size		886485	1					
ANR	886684	PrimaryExpression	8		886485	1					
ANR	886685	IfStatement	if ( ( ri -> offset / 8 ) + ( ri -> size / 8 ) > rs -> arena -> size )		886485	3					
ANR	886686	Condition	( ri -> offset / 8 ) + ( ri -> size / 8 ) > rs -> arena -> size	2090:7:62437:62487	886485	0	True				
ANR	886687	RelationalExpression	( ri -> offset / 8 ) + ( ri -> size / 8 ) > rs -> arena -> size		886485	0		>			
ANR	886688	AdditiveExpression	( ri -> offset / 8 ) + ( ri -> size / 8 )		886485	0		+			
ANR	886689	MultiplicativeExpression	ri -> offset / 8		886485	0		/			
ANR	886690	PtrMemberAccess	ri -> offset		886485	0					
ANR	886691	Identifier	ri		886485	0					
ANR	886692	Identifier	offset		886485	1					
ANR	886693	PrimaryExpression	8		886485	1					
ANR	886694	MultiplicativeExpression	ri -> size / 8		886485	1		/			
ANR	886695	PtrMemberAccess	ri -> size		886485	0					
ANR	886696	Identifier	ri		886485	0					
ANR	886697	Identifier	size		886485	1					
ANR	886698	PrimaryExpression	8		886485	1					
ANR	886699	PtrMemberAccess	rs -> arena -> size		886485	1					
ANR	886700	PtrMemberAccess	rs -> arena		886485	0					
ANR	886701	Identifier	rs		886485	0					
ANR	886702	Identifier	arena		886485	1					
ANR	886703	Identifier	size		886485	1					
ANR	886704	CompoundStatement		18:60:766:766	886485	1					
ANR	886705	ExpressionStatement	"r_cons_printf ( "" *OVERFLOW*"" )"	2091:4:62496:62525	886485	0	True				
ANR	886706	CallExpression	"r_cons_printf ( "" *OVERFLOW*"" )"		886485	0					
ANR	886707	Callee	r_cons_printf		886485	0					
ANR	886708	Identifier	r_cons_printf		886485	0					
ANR	886709	ArgumentList	""" *OVERFLOW*"""		886485	1					
ANR	886710	Argument	""" *OVERFLOW*"""		886485	0					
ANR	886711	PrimaryExpression	""" *OVERFLOW*"""		886485	0					
ANR	886712	ExpressionStatement	r_cons_newline ( )	2093:3:62535:62552	886485	4	True				
ANR	886713	CallExpression	r_cons_newline ( )		886485	0					
ANR	886714	Callee	r_cons_newline		886485	0					
ANR	886715	Identifier	r_cons_newline		886485	0					
ANR	886716	ArgumentList			886485	1					
ANR	886717	ReturnType	static void		886485	1					
ANR	886718	Identifier	show_drpi		886485	2					
ANR	886719	ParameterList	RCore * core		886485	3					
ANR	886720	Parameter	RCore * core	2073:22:61710:61720	886485	0	True				
ANR	886721	ParameterType	RCore *		886485	0					
ANR	886722	Identifier	core		886485	1					
ANR	886723	CFGEntryNode	ENTRY		886485		True				
ANR	886724	CFGExitNode	EXIT		886485		True				
ANR	886725	Symbol	core -> anal -> reg		886485						
ANR	886726	Symbol	rs		886485						
ANR	886727	Symbol	* core -> anal -> reg -> name		886485						
ANR	886728	Symbol	r_reg_get_type		886485						
ANR	886729	Symbol	rs -> arena -> size		886485						
ANR	886730	Symbol	* core		886485						
ANR	886731	Symbol	ri -> type		886485						
ANR	886732	Symbol	nmi		886485						
ANR	886733	Symbol	r_reg_get_role		886485						
ANR	886734	Symbol	core -> anal		886485						
ANR	886735	Symbol	ri -> size		886485						
ANR	886736	Symbol	R_REG_NAME_LAST		886485						
ANR	886737	Symbol	ri -> name		886485						
ANR	886738	Symbol	* * core -> anal		886485						
ANR	886739	Symbol	* core -> anal -> reg		886485						
ANR	886740	Symbol	* * * * core		886485						
ANR	886741	Symbol	core -> anal -> reg -> regset		886485						
ANR	886742	Symbol	arn		886485						
ANR	886743	Symbol	* * core		886485						
ANR	886744	Symbol	ri -> offset		886485						
ANR	886745	Symbol	ri -> arena		886485						
ANR	886746	Symbol	* rs		886485						
ANR	886747	Symbol	tpe		886485						
ANR	886748	Symbol	i		886485						
ANR	886749	Symbol	iter		886485						
ANR	886750	Symbol	R_REG_TYPE_LAST		886485						
ANR	886751	Symbol	* * rs		886485						
ANR	886752	Symbol	core -> anal -> reg -> name		886485						
ANR	886753	Symbol	core		886485						
ANR	886754	Symbol	* * * core		886485						
ANR	886755	Symbol	* i		886485						
ANR	886756	Symbol	* core -> anal		886485						
ANR	886757	Symbol	* rs -> arena		886485						
ANR	886758	Symbol	rs -> arena		886485						
ANR	886759	Symbol	ri		886485						
ANR	886760	Symbol	* * * core -> anal		886485						
ANR	886761	Symbol	* ri		886485						
ANR	886762	Symbol	* * core -> anal -> reg		886485						
ANR	886763	Function	cmd_reg_profile	2098:0:62564:65514							
ANR	886764	FunctionDef	"cmd_reg_profile (RCore * core , char from , const char * str)"		886763	0					
ANR	886765	CompoundStatement		2098:70:62634:65514	886763	0					
ANR	886766	IdentifierDeclStatement	const char * ptr ;	2099:1:62656:62671	886763	0	True				
ANR	886767	IdentifierDecl	* ptr		886763	0					
ANR	886768	IdentifierDeclType	const char *		886763	0					
ANR	886769	Identifier	ptr		886763	1					
ANR	886770	SwitchStatement	switch ( str [ 1 ] )		886763	1					
ANR	886771	Condition	str [ 1 ]	2100:9:62682:62687	886763	0	True				
ANR	886772	ArrayIndexing	str [ 1 ]		886763	0					
ANR	886773	Identifier	str		886763	0					
ANR	886774	PrimaryExpression	1		886763	1					
ANR	886775	CompoundStatement		3:17:55:55	886763	1					
ANR	886776	Label	case '\\0' :	2101:1:62693:62702	886763	0	True				
ANR	886777	IfStatement	if ( core -> dbg -> reg -> reg_profile_str )		886763	1					
ANR	886778	Condition	core -> dbg -> reg -> reg_profile_str	2102:6:62719:62749	886763	0	True				
ANR	886779	PtrMemberAccess	core -> dbg -> reg -> reg_profile_str		886763	0					
ANR	886780	PtrMemberAccess	core -> dbg -> reg		886763	0					
ANR	886781	PtrMemberAccess	core -> dbg		886763	0					
ANR	886782	Identifier	core		886763	0					
ANR	886783	Identifier	dbg		886763	1					
ANR	886784	Identifier	reg		886763	1					
ANR	886785	Identifier	reg_profile_str		886763	1					
ANR	886786	CompoundStatement		5:39:117:117	886763	1					
ANR	886787	ExpressionStatement	r_cons_println ( core -> dbg -> reg -> reg_profile_str )	2103:3:62757:62805	886763	0	True				
ANR	886788	CallExpression	r_cons_println ( core -> dbg -> reg -> reg_profile_str )		886763	0					
ANR	886789	Callee	r_cons_println		886763	0					
ANR	886790	Identifier	r_cons_println		886763	0					
ANR	886791	ArgumentList	core -> dbg -> reg -> reg_profile_str		886763	1					
ANR	886792	Argument	core -> dbg -> reg -> reg_profile_str		886763	0					
ANR	886793	PtrMemberAccess	core -> dbg -> reg -> reg_profile_str		886763	0					
ANR	886794	PtrMemberAccess	core -> dbg -> reg		886763	0					
ANR	886795	PtrMemberAccess	core -> dbg		886763	0					
ANR	886796	Identifier	core		886763	0					
ANR	886797	Identifier	dbg		886763	1					
ANR	886798	Identifier	reg		886763	1					
ANR	886799	Identifier	reg_profile_str		886763	1					
ANR	886800	ElseStatement	else		886763	0					
ANR	886801	CompoundStatement		7:9:181:181	886763	0					
ANR	886802	ExpressionStatement	"eprintf ( ""No register profile defined. Try 'dr.'\\n"" )"	2105:3:62821:62873	886763	0	True				
ANR	886803	CallExpression	"eprintf ( ""No register profile defined. Try 'dr.'\\n"" )"		886763	0					
ANR	886804	Callee	eprintf		886763	0					
ANR	886805	Identifier	eprintf		886763	0					
ANR	886806	ArgumentList	"""No register profile defined. Try 'dr.'\\n"""		886763	1					
ANR	886807	Argument	"""No register profile defined. Try 'dr.'\\n"""		886763	0					
ANR	886808	PrimaryExpression	"""No register profile defined. Try 'dr.'\\n"""		886763	0					
ANR	886809	BreakStatement	break ;	2107:2:62881:62886	886763	2	True				
ANR	886810	Label	case ' ' :	2108:1:62889:62897	886763	3	True				
ANR	886811	ExpressionStatement	ptr = str + 2	2109:2:62911:62924	886763	4	True				
ANR	886812	AssignmentExpression	ptr = str + 2		886763	0		=			
ANR	886813	Identifier	ptr		886763	0					
ANR	886814	AdditiveExpression	str + 2		886763	1		+			
ANR	886815	Identifier	str		886763	0					
ANR	886816	PrimaryExpression	2		886763	1					
ANR	886817	WhileStatement	while ( isspace ( ( ut8 ) * ptr ) )		886763	5					
ANR	886818	Condition	isspace ( ( ut8 ) * ptr )	2110:9:62935:62953	886763	0	True				
ANR	886819	CallExpression	isspace ( ( ut8 ) * ptr )		886763	0					
ANR	886820	Callee	isspace		886763	0					
ANR	886821	Identifier	isspace		886763	0					
ANR	886822	ArgumentList	( ut8 ) * ptr		886763	1					
ANR	886823	Argument	( ut8 ) * ptr		886763	0					
ANR	886824	CastExpression	( ut8 ) * ptr		886763	0					
ANR	886825	CastTarget	ut8		886763	0					
ANR	886826	UnaryOperationExpression	* ptr		886763	1					
ANR	886827	UnaryOperator	*		886763	0					
ANR	886828	Identifier	ptr		886763	1					
ANR	886829	CompoundStatement		13:30:321:321	886763	1					
ANR	886830	ExpressionStatement	ptr ++	2111:3:62961:62966	886763	0	True				
ANR	886831	PostIncDecOperationExpression	ptr ++		886763	0					
ANR	886832	Identifier	ptr		886763	0					
ANR	886833	IncDec	++		886763	1					
ANR	886834	IfStatement	"if ( r_str_startswith ( ptr , ""gdb "" ) )"		886763	6					
ANR	886835	Condition	"r_str_startswith ( ptr , ""gdb "" )"	2113:6:62978:63007	886763	0	True				
ANR	886836	CallExpression	"r_str_startswith ( ptr , ""gdb "" )"		886763	0					
ANR	886837	Callee	r_str_startswith		886763	0					
ANR	886838	Identifier	r_str_startswith		886763	0					
ANR	886839	ArgumentList	ptr		886763	1					
ANR	886840	Argument	ptr		886763	0					
ANR	886841	Identifier	ptr		886763	0					
ANR	886842	Argument	"""gdb """		886763	1					
ANR	886843	PrimaryExpression	"""gdb """		886763	0					
ANR	886844	CompoundStatement		16:38:375:375	886763	1					
ANR	886845	ExpressionStatement	r_reg_parse_gdb_profile ( ptr + 4 )	2114:3:63015:63048	886763	0	True				
ANR	886846	CallExpression	r_reg_parse_gdb_profile ( ptr + 4 )		886763	0					
ANR	886847	Callee	r_reg_parse_gdb_profile		886763	0					
ANR	886848	Identifier	r_reg_parse_gdb_profile		886763	0					
ANR	886849	ArgumentList	ptr + 4		886763	1					
ANR	886850	Argument	ptr + 4		886763	0					
ANR	886851	AdditiveExpression	ptr + 4		886763	0		+			
ANR	886852	Identifier	ptr		886763	0					
ANR	886853	PrimaryExpression	4		886763	1					
ANR	886854	BreakStatement	break ;	2115:3:63053:63058	886763	1	True				
ANR	886855	ExpressionStatement	"r_reg_set_profile ( core -> dbg -> reg , str + 2 )"	2117:2:63066:63107	886763	7	True				
ANR	886856	CallExpression	"r_reg_set_profile ( core -> dbg -> reg , str + 2 )"		886763	0					
ANR	886857	Callee	r_reg_set_profile		886763	0					
ANR	886858	Identifier	r_reg_set_profile		886763	0					
ANR	886859	ArgumentList	core -> dbg -> reg		886763	1					
ANR	886860	Argument	core -> dbg -> reg		886763	0					
ANR	886861	PtrMemberAccess	core -> dbg -> reg		886763	0					
ANR	886862	PtrMemberAccess	core -> dbg		886763	0					
ANR	886863	Identifier	core		886763	0					
ANR	886864	Identifier	dbg		886763	1					
ANR	886865	Identifier	reg		886763	1					
ANR	886866	Argument	str + 2		886763	1					
ANR	886867	AdditiveExpression	str + 2		886763	0		+			
ANR	886868	Identifier	str		886763	0					
ANR	886869	PrimaryExpression	2		886763	1					
ANR	886870	BreakStatement	break ;	2118:2:63111:63116	886763	8	True				
ANR	886871	Label	case '.' :	2119:1:63119:63127	886763	9	True				
ANR	886872	CompoundStatement		23:2:508:571	886763	10					
ANR	886873	IdentifierDeclStatement	"RRegSet * rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR ) ;"	2120:2:63143:63206	886763	0	True				
ANR	886874	IdentifierDecl	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		886763	0					
ANR	886875	IdentifierDeclType	RRegSet *		886763	0					
ANR	886876	Identifier	rs		886763	1					
ANR	886877	AssignmentExpression	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		886763	2		=			
ANR	886878	Identifier	rs		886763	0					
ANR	886879	CallExpression	"r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		886763	1					
ANR	886880	Callee	r_reg_regset_get		886763	0					
ANR	886881	Identifier	r_reg_regset_get		886763	0					
ANR	886882	ArgumentList	core -> dbg -> reg		886763	1					
ANR	886883	Argument	core -> dbg -> reg		886763	0					
ANR	886884	PtrMemberAccess	core -> dbg -> reg		886763	0					
ANR	886885	PtrMemberAccess	core -> dbg		886763	0					
ANR	886886	Identifier	core		886763	0					
ANR	886887	Identifier	dbg		886763	1					
ANR	886888	Identifier	reg		886763	1					
ANR	886889	Argument	R_REG_TYPE_GPR		886763	1					
ANR	886890	Identifier	R_REG_TYPE_GPR		886763	0					
ANR	886891	IfStatement	if ( rs )		886763	1					
ANR	886892	Condition	rs	2121:6:63214:63215	886763	0	True				
ANR	886893	Identifier	rs		886763	0					
ANR	886894	CompoundStatement		24:10:583:583	886763	1					
ANR	886895	ExpressionStatement	"eprintf ( ""size = %d\\n"" , rs -> arena -> size )"	2122:3:63223:63263	886763	0	True				
ANR	886896	CallExpression	"eprintf ( ""size = %d\\n"" , rs -> arena -> size )"		886763	0					
ANR	886897	Callee	eprintf		886763	0					
ANR	886898	Identifier	eprintf		886763	0					
ANR	886899	ArgumentList	"""size = %d\\n"""		886763	1					
ANR	886900	Argument	"""size = %d\\n"""		886763	0					
ANR	886901	PrimaryExpression	"""size = %d\\n"""		886763	0					
ANR	886902	Argument	rs -> arena -> size		886763	1					
ANR	886903	PtrMemberAccess	rs -> arena -> size		886763	0					
ANR	886904	PtrMemberAccess	rs -> arena		886763	0					
ANR	886905	Identifier	rs		886763	0					
ANR	886906	Identifier	arena		886763	1					
ANR	886907	Identifier	size		886763	1					
ANR	886908	BreakStatement	break ;	2124:2:63271:63276	886763	2	True				
ANR	886909	Label	case 'i' :	2126:1:63282:63290	886763	11	True				
ANR	886910	ExpressionStatement	show_drpi ( core )	2127:2:63304:63320	886763	12	True				
ANR	886911	CallExpression	show_drpi ( core )		886763	0					
ANR	886912	Callee	show_drpi		886763	0					
ANR	886913	Identifier	show_drpi		886763	0					
ANR	886914	ArgumentList	core		886763	1					
ANR	886915	Argument	core		886763	0					
ANR	886916	Identifier	core		886763	0					
ANR	886917	BreakStatement	break ;	2128:2:63324:63329	886763	13	True				
ANR	886918	Label	case 's' :	2129:1:63332:63340	886763	14	True				
ANR	886919	IfStatement	if ( str [ 2 ] == ' ' )		886763	15					
ANR	886920	Condition	str [ 2 ] == ' '	2130:6:63358:63370	886763	0	True				
ANR	886921	EqualityExpression	str [ 2 ] == ' '		886763	0		==			
ANR	886922	ArrayIndexing	str [ 2 ]		886763	0					
ANR	886923	Identifier	str		886763	0					
ANR	886924	PrimaryExpression	2		886763	1					
ANR	886925	PrimaryExpression	' '		886763	1					
ANR	886926	CompoundStatement		36:3:833:896	886763	1					
ANR	886927	IdentifierDeclStatement	"ut64 n = r_num_math ( core -> num , str + 2 ) ;"	2131:3:63378:63416	886763	0	True				
ANR	886928	IdentifierDecl	"n = r_num_math ( core -> num , str + 2 )"		886763	0					
ANR	886929	IdentifierDeclType	ut64		886763	0					
ANR	886930	Identifier	n		886763	1					
ANR	886931	AssignmentExpression	"n = r_num_math ( core -> num , str + 2 )"		886763	2		=			
ANR	886932	Identifier	n		886763	0					
ANR	886933	CallExpression	"r_num_math ( core -> num , str + 2 )"		886763	1					
ANR	886934	Callee	r_num_math		886763	0					
ANR	886935	Identifier	r_num_math		886763	0					
ANR	886936	ArgumentList	core -> num		886763	1					
ANR	886937	Argument	core -> num		886763	0					
ANR	886938	PtrMemberAccess	core -> num		886763	0					
ANR	886939	Identifier	core		886763	0					
ANR	886940	Identifier	num		886763	1					
ANR	886941	Argument	str + 2		886763	1					
ANR	886942	AdditiveExpression	str + 2		886763	0		+			
ANR	886943	Identifier	str		886763	0					
ANR	886944	PrimaryExpression	2		886763	1					
ANR	886945	IdentifierDeclStatement	"RRegSet * rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR ) ;"	2133:3:63468:63531	886763	1	True				
ANR	886946	IdentifierDecl	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		886763	0					
ANR	886947	IdentifierDeclType	RRegSet *		886763	0					
ANR	886948	Identifier	rs		886763	1					
ANR	886949	AssignmentExpression	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		886763	2		=			
ANR	886950	Identifier	rs		886763	0					
ANR	886951	CallExpression	"r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		886763	1					
ANR	886952	Callee	r_reg_regset_get		886763	0					
ANR	886953	Identifier	r_reg_regset_get		886763	0					
ANR	886954	ArgumentList	core -> dbg -> reg		886763	1					
ANR	886955	Argument	core -> dbg -> reg		886763	0					
ANR	886956	PtrMemberAccess	core -> dbg -> reg		886763	0					
ANR	886957	PtrMemberAccess	core -> dbg		886763	0					
ANR	886958	Identifier	core		886763	0					
ANR	886959	Identifier	dbg		886763	1					
ANR	886960	Identifier	reg		886763	1					
ANR	886961	Argument	R_REG_TYPE_GPR		886763	1					
ANR	886962	Identifier	R_REG_TYPE_GPR		886763	0					
ANR	886963	IfStatement	if ( rs && n > 0 )		886763	2					
ANR	886964	Condition	rs && n > 0	2134:7:63540:63548	886763	0	True				
ANR	886965	AndExpression	rs && n > 0		886763	0		&&			
ANR	886966	Identifier	rs		886763	0					
ANR	886967	RelationalExpression	n > 0		886763	1		>			
ANR	886968	Identifier	n		886763	0					
ANR	886969	PrimaryExpression	0		886763	1					
ANR	886970	CompoundStatement		39:4:943:959	886763	1					
ANR	886971	IdentifierDeclStatement	RListIter * iter ;	2135:4:63557:63572	886763	0	True				
ANR	886972	IdentifierDecl	* iter		886763	0					
ANR	886973	IdentifierDeclType	RListIter *		886763	0					
ANR	886974	Identifier	iter		886763	1					
ANR	886975	IdentifierDeclStatement	RRegArena * arena ;	2136:4:63578:63594	886763	1	True				
ANR	886976	IdentifierDecl	* arena		886763	0					
ANR	886977	IdentifierDeclType	RRegArena *		886763	0					
ANR	886978	Identifier	arena		886763	1					
ANR	886979	Statement	r_list_foreach	2137:4:63600:63613	886763	2	True				
ANR	886980	Statement	(	2137:19:63615:63615	886763	3	True				
ANR	886981	Statement	rs	2137:20:63616:63617	886763	4	True				
ANR	886982	Statement	->	2137:22:63618:63619	886763	5	True				
ANR	886983	Statement	pool	2137:24:63620:63623	886763	6	True				
ANR	886984	Statement	","	2137:28:63624:63624	886763	7	True				
ANR	886985	Statement	iter	2137:30:63626:63629	886763	8	True				
ANR	886986	Statement	","	2137:34:63630:63630	886763	9	True				
ANR	886987	Statement	arena	2137:36:63632:63636	886763	10	True				
ANR	886988	Statement	)	2137:41:63637:63637	886763	11	True				
ANR	886989	CompoundStatement		41:5:1011:1040	886763	12					
ANR	886990	IdentifierDeclStatement	"ut8 * newbytes = calloc ( 1 , n ) ;"	2138:5:63646:63675	886763	0	True				
ANR	886991	IdentifierDecl	"* newbytes = calloc ( 1 , n )"		886763	0					
ANR	886992	IdentifierDeclType	ut8 *		886763	0					
ANR	886993	Identifier	newbytes		886763	1					
ANR	886994	AssignmentExpression	"* newbytes = calloc ( 1 , n )"		886763	2		=			
ANR	886995	Identifier	newbytes		886763	0					
ANR	886996	CallExpression	"calloc ( 1 , n )"		886763	1					
ANR	886997	Callee	calloc		886763	0					
ANR	886998	Identifier	calloc		886763	0					
ANR	886999	ArgumentList	1		886763	1					
ANR	887000	Argument	1		886763	0					
ANR	887001	PrimaryExpression	1		886763	0					
ANR	887002	Argument	n		886763	1					
ANR	887003	Identifier	n		886763	0					
ANR	887004	IfStatement	if ( newbytes )		886763	1					
ANR	887005	Condition	newbytes	2139:9:63686:63693	886763	0	True				
ANR	887006	Identifier	newbytes		886763	0					
ANR	887007	CompoundStatement		42:19:1061:1061	886763	1					
ANR	887008	ExpressionStatement	free ( arena -> bytes )	2140:6:63704:63723	886763	0	True				
ANR	887009	CallExpression	free ( arena -> bytes )		886763	0					
ANR	887010	Callee	free		886763	0					
ANR	887011	Identifier	free		886763	0					
ANR	887012	ArgumentList	arena -> bytes		886763	1					
ANR	887013	Argument	arena -> bytes		886763	0					
ANR	887014	PtrMemberAccess	arena -> bytes		886763	0					
ANR	887015	Identifier	arena		886763	0					
ANR	887016	Identifier	bytes		886763	1					
ANR	887017	ExpressionStatement	arena -> bytes = newbytes	2141:6:63731:63754	886763	1	True				
ANR	887018	AssignmentExpression	arena -> bytes = newbytes		886763	0		=			
ANR	887019	PtrMemberAccess	arena -> bytes		886763	0					
ANR	887020	Identifier	arena		886763	0					
ANR	887021	Identifier	bytes		886763	1					
ANR	887022	Identifier	newbytes		886763	1					
ANR	887023	ExpressionStatement	arena -> size = n	2142:6:63762:63777	886763	2	True				
ANR	887024	AssignmentExpression	arena -> size = n		886763	0		=			
ANR	887025	PtrMemberAccess	arena -> size		886763	0					
ANR	887026	Identifier	arena		886763	0					
ANR	887027	Identifier	size		886763	1					
ANR	887028	Identifier	n		886763	1					
ANR	887029	ElseStatement	else		886763	0					
ANR	887030	CompoundStatement		46:12:1156:1156	886763	0					
ANR	887031	ExpressionStatement	"eprintf ( ""Cannot allocate %d\\n"" , ( int ) n )"	2144:6:63799:63839	886763	0	True				
ANR	887032	CallExpression	"eprintf ( ""Cannot allocate %d\\n"" , ( int ) n )"		886763	0					
ANR	887033	Callee	eprintf		886763	0					
ANR	887034	Identifier	eprintf		886763	0					
ANR	887035	ArgumentList	"""Cannot allocate %d\\n"""		886763	1					
ANR	887036	Argument	"""Cannot allocate %d\\n"""		886763	0					
ANR	887037	PrimaryExpression	"""Cannot allocate %d\\n"""		886763	0					
ANR	887038	Argument	( int ) n		886763	1					
ANR	887039	CastExpression	( int ) n		886763	0					
ANR	887040	CastTarget	int		886763	0					
ANR	887041	Identifier	n		886763	1					
ANR	887042	ElseStatement	else		886763	0					
ANR	887043	CompoundStatement		50:10:1229:1229	886763	0					
ANR	887044	ExpressionStatement	"eprintf ( ""Invalid arena size\\n"" )"	2148:4:63870:63902	886763	0	True				
ANR	887045	CallExpression	"eprintf ( ""Invalid arena size\\n"" )"		886763	0					
ANR	887046	Callee	eprintf		886763	0					
ANR	887047	Identifier	eprintf		886763	0					
ANR	887048	ArgumentList	"""Invalid arena size\\n"""		886763	1					
ANR	887049	Argument	"""Invalid arena size\\n"""		886763	0					
ANR	887050	PrimaryExpression	"""Invalid arena size\\n"""		886763	0					
ANR	887051	ElseStatement	else		886763	0					
ANR	887052	CompoundStatement		54:3:1288:1351	886763	0					
ANR	887053	IdentifierDeclStatement	"RRegSet * rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR ) ;"	2151:3:63923:63986	886763	0	True				
ANR	887054	IdentifierDecl	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		886763	0					
ANR	887055	IdentifierDeclType	RRegSet *		886763	0					
ANR	887056	Identifier	rs		886763	1					
ANR	887057	AssignmentExpression	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		886763	2		=			
ANR	887058	Identifier	rs		886763	0					
ANR	887059	CallExpression	"r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		886763	1					
ANR	887060	Callee	r_reg_regset_get		886763	0					
ANR	887061	Identifier	r_reg_regset_get		886763	0					
ANR	887062	ArgumentList	core -> dbg -> reg		886763	1					
ANR	887063	Argument	core -> dbg -> reg		886763	0					
ANR	887064	PtrMemberAccess	core -> dbg -> reg		886763	0					
ANR	887065	PtrMemberAccess	core -> dbg		886763	0					
ANR	887066	Identifier	core		886763	0					
ANR	887067	Identifier	dbg		886763	1					
ANR	887068	Identifier	reg		886763	1					
ANR	887069	Argument	R_REG_TYPE_GPR		886763	1					
ANR	887070	Identifier	R_REG_TYPE_GPR		886763	0					
ANR	887071	IfStatement	if ( rs )		886763	1					
ANR	887072	Condition	rs	2152:7:63995:63996	886763	0	True				
ANR	887073	Identifier	rs		886763	0					
ANR	887074	CompoundStatement		55:11:1364:1364	886763	1					
ANR	887075	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , rs -> arena -> size )"	2153:4:64005:64044	886763	0	True				
ANR	887076	CallExpression	"r_cons_printf ( ""%d\\n"" , rs -> arena -> size )"		886763	0					
ANR	887077	Callee	r_cons_printf		886763	0					
ANR	887078	Identifier	r_cons_printf		886763	0					
ANR	887079	ArgumentList	"""%d\\n"""		886763	1					
ANR	887080	Argument	"""%d\\n"""		886763	0					
ANR	887081	PrimaryExpression	"""%d\\n"""		886763	0					
ANR	887082	Argument	rs -> arena -> size		886763	1					
ANR	887083	PtrMemberAccess	rs -> arena -> size		886763	0					
ANR	887084	PtrMemberAccess	rs -> arena		886763	0					
ANR	887085	Identifier	rs		886763	0					
ANR	887086	Identifier	arena		886763	1					
ANR	887087	Identifier	size		886763	1					
ANR	887088	ElseStatement	else		886763	0					
ANR	887089	ExpressionStatement	"eprintf ( ""Cannot find GPR register arena.\\n"" )"	2154:10:64056:64101	886763	0	True				
ANR	887090	CallExpression	"eprintf ( ""Cannot find GPR register arena.\\n"" )"		886763	0					
ANR	887091	Callee	eprintf		886763	0					
ANR	887092	Identifier	eprintf		886763	0					
ANR	887093	ArgumentList	"""Cannot find GPR register arena.\\n"""		886763	1					
ANR	887094	Argument	"""Cannot find GPR register arena.\\n"""		886763	0					
ANR	887095	PrimaryExpression	"""Cannot find GPR register arena.\\n"""		886763	0					
ANR	887096	BreakStatement	break ;	2156:2:64109:64114	886763	16	True				
ANR	887097	Label	case 'j' :	2157:1:64117:64125	886763	17	True				
ANR	887098	CompoundStatement		66:3:1587:1605	886763	18					
ANR	887099	IdentifierDeclStatement	RListIter * iter ;	2160:3:64176:64191	886763	0	True				
ANR	887100	IdentifierDecl	* iter		886763	0					
ANR	887101	IdentifierDeclType	RListIter *		886763	0					
ANR	887102	Identifier	iter		886763	1					
ANR	887103	IdentifierDeclStatement	RRegItem * r ;	2161:3:64196:64207	886763	1	True				
ANR	887104	IdentifierDecl	* r		886763	0					
ANR	887105	IdentifierDeclType	RRegItem *		886763	0					
ANR	887106	Identifier	r		886763	1					
ANR	887107	IdentifierDeclStatement	int i ;	2162:3:64212:64217	886763	2	True				
ANR	887108	IdentifierDecl	i		886763	0					
ANR	887109	IdentifierDeclType	int		886763	0					
ANR	887110	Identifier	i		886763	1					
ANR	887111	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	2163:3:64222:64240	886763	3	True				
ANR	887112	IdentifierDecl	* pj = pj_new ( )		886763	0					
ANR	887113	IdentifierDeclType	PJ *		886763	0					
ANR	887114	Identifier	pj		886763	1					
ANR	887115	AssignmentExpression	* pj = pj_new ( )		886763	2		=			
ANR	887116	Identifier	pj		886763	0					
ANR	887117	CallExpression	pj_new ( )		886763	1					
ANR	887118	Callee	pj_new		886763	0					
ANR	887119	Identifier	pj_new		886763	0					
ANR	887120	ArgumentList			886763	1					
ANR	887121	ExpressionStatement	pj_o ( pj )	2164:3:64245:64254	886763	4	True				
ANR	887122	CallExpression	pj_o ( pj )		886763	0					
ANR	887123	Callee	pj_o		886763	0					
ANR	887124	Identifier	pj_o		886763	0					
ANR	887125	ArgumentList	pj		886763	1					
ANR	887126	Argument	pj		886763	0					
ANR	887127	Identifier	pj		886763	0					
ANR	887128	ExpressionStatement	"pj_k ( pj , ""alias_info"" )"	2165:3:64259:64282	886763	5	True				
ANR	887129	CallExpression	"pj_k ( pj , ""alias_info"" )"		886763	0					
ANR	887130	Callee	pj_k		886763	0					
ANR	887131	Identifier	pj_k		886763	0					
ANR	887132	ArgumentList	pj		886763	1					
ANR	887133	Argument	pj		886763	0					
ANR	887134	Identifier	pj		886763	0					
ANR	887135	Argument	"""alias_info"""		886763	1					
ANR	887136	PrimaryExpression	"""alias_info"""		886763	0					
ANR	887137	ExpressionStatement	pj_a ( pj )	2166:3:64287:64296	886763	6	True				
ANR	887138	CallExpression	pj_a ( pj )		886763	0					
ANR	887139	Callee	pj_a		886763	0					
ANR	887140	Identifier	pj_a		886763	0					
ANR	887141	ArgumentList	pj		886763	1					
ANR	887142	Argument	pj		886763	0					
ANR	887143	Identifier	pj		886763	0					
ANR	887144	ForStatement	for ( i = 0 ; i < R_REG_NAME_LAST ; i ++ )		886763	7					
ANR	887145	ForInit	i = 0 ;	2167:8:64306:64311	886763	0	True				
ANR	887146	AssignmentExpression	i = 0		886763	0		=			
ANR	887147	Identifier	i		886763	0					
ANR	887148	PrimaryExpression	0		886763	1					
ANR	887149	Condition	i < R_REG_NAME_LAST	2167:15:64313:64331	886763	1	True				
ANR	887150	RelationalExpression	i < R_REG_NAME_LAST		886763	0		<			
ANR	887151	Identifier	i		886763	0					
ANR	887152	Identifier	R_REG_NAME_LAST		886763	1					
ANR	887153	PostIncDecOperationExpression	i ++	2167:36:64334:64336	886763	2	True				
ANR	887154	Identifier	i		886763	0					
ANR	887155	IncDec	++		886763	1					
ANR	887156	CompoundStatement		70:41:1704:1704	886763	3					
ANR	887157	IfStatement	if ( core -> dbg -> reg -> name [ i ] )		886763	0					
ANR	887158	Condition	core -> dbg -> reg -> name [ i ]	2168:8:64349:64371	886763	0	True				
ANR	887159	ArrayIndexing	core -> dbg -> reg -> name [ i ]		886763	0					
ANR	887160	PtrMemberAccess	core -> dbg -> reg -> name		886763	0					
ANR	887161	PtrMemberAccess	core -> dbg -> reg		886763	0					
ANR	887162	PtrMemberAccess	core -> dbg		886763	0					
ANR	887163	Identifier	core		886763	0					
ANR	887164	Identifier	dbg		886763	1					
ANR	887165	Identifier	reg		886763	1					
ANR	887166	Identifier	name		886763	1					
ANR	887167	Identifier	i		886763	1					
ANR	887168	CompoundStatement		71:33:1739:1739	886763	1					
ANR	887169	ExpressionStatement	pj_o ( pj )	2169:5:64381:64390	886763	0	True				
ANR	887170	CallExpression	pj_o ( pj )		886763	0					
ANR	887171	Callee	pj_o		886763	0					
ANR	887172	Identifier	pj_o		886763	0					
ANR	887173	ArgumentList	pj		886763	1					
ANR	887174	Argument	pj		886763	0					
ANR	887175	Identifier	pj		886763	0					
ANR	887176	ExpressionStatement	"pj_kn ( pj , ""role"" , i )"	2170:5:64397:64418	886763	1	True				
ANR	887177	CallExpression	"pj_kn ( pj , ""role"" , i )"		886763	0					
ANR	887178	Callee	pj_kn		886763	0					
ANR	887179	Identifier	pj_kn		886763	0					
ANR	887180	ArgumentList	pj		886763	1					
ANR	887181	Argument	pj		886763	0					
ANR	887182	Identifier	pj		886763	0					
ANR	887183	Argument	"""role"""		886763	1					
ANR	887184	PrimaryExpression	"""role"""		886763	0					
ANR	887185	Argument	i		886763	2					
ANR	887186	Identifier	i		886763	0					
ANR	887187	ExpressionStatement	"pj_ks ( pj , ""role_str"" , r_reg_get_role ( i ) )"	2171:5:64425:64467	886763	2	True				
ANR	887188	CallExpression	"pj_ks ( pj , ""role_str"" , r_reg_get_role ( i ) )"		886763	0					
ANR	887189	Callee	pj_ks		886763	0					
ANR	887190	Identifier	pj_ks		886763	0					
ANR	887191	ArgumentList	pj		886763	1					
ANR	887192	Argument	pj		886763	0					
ANR	887193	Identifier	pj		886763	0					
ANR	887194	Argument	"""role_str"""		886763	1					
ANR	887195	PrimaryExpression	"""role_str"""		886763	0					
ANR	887196	Argument	r_reg_get_role ( i )		886763	2					
ANR	887197	CallExpression	r_reg_get_role ( i )		886763	0					
ANR	887198	Callee	r_reg_get_role		886763	0					
ANR	887199	Identifier	r_reg_get_role		886763	0					
ANR	887200	ArgumentList	i		886763	1					
ANR	887201	Argument	i		886763	0					
ANR	887202	Identifier	i		886763	0					
ANR	887203	ExpressionStatement	"pj_ks ( pj , ""reg"" , core -> dbg -> reg -> name [ i ] )"	2172:5:64474:64516	886763	3	True				
ANR	887204	CallExpression	"pj_ks ( pj , ""reg"" , core -> dbg -> reg -> name [ i ] )"		886763	0					
ANR	887205	Callee	pj_ks		886763	0					
ANR	887206	Identifier	pj_ks		886763	0					
ANR	887207	ArgumentList	pj		886763	1					
ANR	887208	Argument	pj		886763	0					
ANR	887209	Identifier	pj		886763	0					
ANR	887210	Argument	"""reg"""		886763	1					
ANR	887211	PrimaryExpression	"""reg"""		886763	0					
ANR	887212	Argument	core -> dbg -> reg -> name [ i ]		886763	2					
ANR	887213	ArrayIndexing	core -> dbg -> reg -> name [ i ]		886763	0					
ANR	887214	PtrMemberAccess	core -> dbg -> reg -> name		886763	0					
ANR	887215	PtrMemberAccess	core -> dbg -> reg		886763	0					
ANR	887216	PtrMemberAccess	core -> dbg		886763	0					
ANR	887217	Identifier	core		886763	0					
ANR	887218	Identifier	dbg		886763	1					
ANR	887219	Identifier	reg		886763	1					
ANR	887220	Identifier	name		886763	1					
ANR	887221	Identifier	i		886763	1					
ANR	887222	ExpressionStatement	pj_end ( pj )	2173:5:64523:64534	886763	4	True				
ANR	887223	CallExpression	pj_end ( pj )		886763	0					
ANR	887224	Callee	pj_end		886763	0					
ANR	887225	Identifier	pj_end		886763	0					
ANR	887226	ArgumentList	pj		886763	1					
ANR	887227	Argument	pj		886763	0					
ANR	887228	Identifier	pj		886763	0					
ANR	887229	ExpressionStatement	pj_end ( pj )	2176:3:64550:64561	886763	8	True				
ANR	887230	CallExpression	pj_end ( pj )		886763	0					
ANR	887231	Callee	pj_end		886763	0					
ANR	887232	Identifier	pj_end		886763	0					
ANR	887233	ArgumentList	pj		886763	1					
ANR	887234	Argument	pj		886763	0					
ANR	887235	Identifier	pj		886763	0					
ANR	887236	ExpressionStatement	"pj_k ( pj , ""reg_info"" )"	2177:3:64566:64587	886763	9	True				
ANR	887237	CallExpression	"pj_k ( pj , ""reg_info"" )"		886763	0					
ANR	887238	Callee	pj_k		886763	0					
ANR	887239	Identifier	pj_k		886763	0					
ANR	887240	ArgumentList	pj		886763	1					
ANR	887241	Argument	pj		886763	0					
ANR	887242	Identifier	pj		886763	0					
ANR	887243	Argument	"""reg_info"""		886763	1					
ANR	887244	PrimaryExpression	"""reg_info"""		886763	0					
ANR	887245	ExpressionStatement	pj_a ( pj )	2178:3:64592:64601	886763	10	True				
ANR	887246	CallExpression	pj_a ( pj )		886763	0					
ANR	887247	Callee	pj_a		886763	0					
ANR	887248	Identifier	pj_a		886763	0					
ANR	887249	ArgumentList	pj		886763	1					
ANR	887250	Argument	pj		886763	0					
ANR	887251	Identifier	pj		886763	0					
ANR	887252	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; i ++ )		886763	11					
ANR	887253	ForInit	i = 0 ;	2179:8:64611:64616	886763	0	True				
ANR	887254	AssignmentExpression	i = 0		886763	0		=			
ANR	887255	Identifier	i		886763	0					
ANR	887256	PrimaryExpression	0		886763	1					
ANR	887257	Condition	i < R_REG_TYPE_LAST	2179:15:64618:64636	886763	1	True				
ANR	887258	RelationalExpression	i < R_REG_TYPE_LAST		886763	0		<			
ANR	887259	Identifier	i		886763	0					
ANR	887260	Identifier	R_REG_TYPE_LAST		886763	1					
ANR	887261	PostIncDecOperationExpression	i ++	2179:36:64639:64641	886763	2	True				
ANR	887262	Identifier	i		886763	0					
ANR	887263	IncDec	++		886763	1					
ANR	887264	CompoundStatement		82:41:2009:2009	886763	3					
ANR	887265	Statement	r_list_foreach	2180:4:64650:64663	886763	0	True				
ANR	887266	Statement	(	2180:19:64665:64665	886763	1	True				
ANR	887267	Statement	core	2180:20:64666:64669	886763	2	True				
ANR	887268	Statement	->	2180:24:64670:64671	886763	3	True				
ANR	887269	Statement	dbg	2180:26:64672:64674	886763	4	True				
ANR	887270	Statement	->	2180:29:64675:64676	886763	5	True				
ANR	887271	Statement	reg	2180:31:64677:64679	886763	6	True				
ANR	887272	Statement	->	2180:34:64680:64681	886763	7	True				
ANR	887273	Statement	regset	2180:36:64682:64687	886763	8	True				
ANR	887274	Statement	[	2180:42:64688:64688	886763	9	True				
ANR	887275	Statement	i	2180:43:64689:64689	886763	10	True				
ANR	887276	Statement	]	2180:44:64690:64690	886763	11	True				
ANR	887277	Statement	.	2180:45:64691:64691	886763	12	True				
ANR	887278	Statement	regs	2180:46:64692:64695	886763	13	True				
ANR	887279	Statement	","	2180:50:64696:64696	886763	14	True				
ANR	887280	Statement	iter	2180:52:64698:64701	886763	15	True				
ANR	887281	Statement	","	2180:56:64702:64702	886763	16	True				
ANR	887282	Statement	r	2180:58:64704:64704	886763	17	True				
ANR	887283	Statement	)	2180:59:64705:64705	886763	18	True				
ANR	887284	CompoundStatement		83:61:2072:2072	886763	19					
ANR	887285	ExpressionStatement	pj_o ( pj )	2181:5:64714:64723	886763	0	True				
ANR	887286	CallExpression	pj_o ( pj )		886763	0					
ANR	887287	Callee	pj_o		886763	0					
ANR	887288	Identifier	pj_o		886763	0					
ANR	887289	ArgumentList	pj		886763	1					
ANR	887290	Argument	pj		886763	0					
ANR	887291	Identifier	pj		886763	0					
ANR	887292	ExpressionStatement	"pj_kn ( pj , ""type"" , r -> type )"	2182:5:64730:64757	886763	1	True				
ANR	887293	CallExpression	"pj_kn ( pj , ""type"" , r -> type )"		886763	0					
ANR	887294	Callee	pj_kn		886763	0					
ANR	887295	Identifier	pj_kn		886763	0					
ANR	887296	ArgumentList	pj		886763	1					
ANR	887297	Argument	pj		886763	0					
ANR	887298	Identifier	pj		886763	0					
ANR	887299	Argument	"""type"""		886763	1					
ANR	887300	PrimaryExpression	"""type"""		886763	0					
ANR	887301	Argument	r -> type		886763	2					
ANR	887302	PtrMemberAccess	r -> type		886763	0					
ANR	887303	Identifier	r		886763	0					
ANR	887304	Identifier	type		886763	1					
ANR	887305	ExpressionStatement	"pj_ks ( pj , ""type_str"" , r_reg_get_type ( r -> type ) )"	2183:5:64764:64812	886763	2	True				
ANR	887306	CallExpression	"pj_ks ( pj , ""type_str"" , r_reg_get_type ( r -> type ) )"		886763	0					
ANR	887307	Callee	pj_ks		886763	0					
ANR	887308	Identifier	pj_ks		886763	0					
ANR	887309	ArgumentList	pj		886763	1					
ANR	887310	Argument	pj		886763	0					
ANR	887311	Identifier	pj		886763	0					
ANR	887312	Argument	"""type_str"""		886763	1					
ANR	887313	PrimaryExpression	"""type_str"""		886763	0					
ANR	887314	Argument	r_reg_get_type ( r -> type )		886763	2					
ANR	887315	CallExpression	r_reg_get_type ( r -> type )		886763	0					
ANR	887316	Callee	r_reg_get_type		886763	0					
ANR	887317	Identifier	r_reg_get_type		886763	0					
ANR	887318	ArgumentList	r -> type		886763	1					
ANR	887319	Argument	r -> type		886763	0					
ANR	887320	PtrMemberAccess	r -> type		886763	0					
ANR	887321	Identifier	r		886763	0					
ANR	887322	Identifier	type		886763	1					
ANR	887323	ExpressionStatement	"pj_ks ( pj , ""name"" , r -> name )"	2184:5:64819:64846	886763	3	True				
ANR	887324	CallExpression	"pj_ks ( pj , ""name"" , r -> name )"		886763	0					
ANR	887325	Callee	pj_ks		886763	0					
ANR	887326	Identifier	pj_ks		886763	0					
ANR	887327	ArgumentList	pj		886763	1					
ANR	887328	Argument	pj		886763	0					
ANR	887329	Identifier	pj		886763	0					
ANR	887330	Argument	"""name"""		886763	1					
ANR	887331	PrimaryExpression	"""name"""		886763	0					
ANR	887332	Argument	r -> name		886763	2					
ANR	887333	PtrMemberAccess	r -> name		886763	0					
ANR	887334	Identifier	r		886763	0					
ANR	887335	Identifier	name		886763	1					
ANR	887336	ExpressionStatement	"pj_kn ( pj , ""size"" , r -> size )"	2185:5:64853:64880	886763	4	True				
ANR	887337	CallExpression	"pj_kn ( pj , ""size"" , r -> size )"		886763	0					
ANR	887338	Callee	pj_kn		886763	0					
ANR	887339	Identifier	pj_kn		886763	0					
ANR	887340	ArgumentList	pj		886763	1					
ANR	887341	Argument	pj		886763	0					
ANR	887342	Identifier	pj		886763	0					
ANR	887343	Argument	"""size"""		886763	1					
ANR	887344	PrimaryExpression	"""size"""		886763	0					
ANR	887345	Argument	r -> size		886763	2					
ANR	887346	PtrMemberAccess	r -> size		886763	0					
ANR	887347	Identifier	r		886763	0					
ANR	887348	Identifier	size		886763	1					
ANR	887349	ExpressionStatement	"pj_kn ( pj , ""offset"" , r -> offset )"	2186:5:64887:64918	886763	5	True				
ANR	887350	CallExpression	"pj_kn ( pj , ""offset"" , r -> offset )"		886763	0					
ANR	887351	Callee	pj_kn		886763	0					
ANR	887352	Identifier	pj_kn		886763	0					
ANR	887353	ArgumentList	pj		886763	1					
ANR	887354	Argument	pj		886763	0					
ANR	887355	Identifier	pj		886763	0					
ANR	887356	Argument	"""offset"""		886763	1					
ANR	887357	PrimaryExpression	"""offset"""		886763	0					
ANR	887358	Argument	r -> offset		886763	2					
ANR	887359	PtrMemberAccess	r -> offset		886763	0					
ANR	887360	Identifier	r		886763	0					
ANR	887361	Identifier	offset		886763	1					
ANR	887362	ExpressionStatement	pj_end ( pj )	2187:5:64925:64936	886763	6	True				
ANR	887363	CallExpression	pj_end ( pj )		886763	0					
ANR	887364	Callee	pj_end		886763	0					
ANR	887365	Identifier	pj_end		886763	0					
ANR	887366	ArgumentList	pj		886763	1					
ANR	887367	Argument	pj		886763	0					
ANR	887368	Identifier	pj		886763	0					
ANR	887369	ExpressionStatement	pj_end ( pj )	2190:3:64952:64963	886763	12	True				
ANR	887370	CallExpression	pj_end ( pj )		886763	0					
ANR	887371	Callee	pj_end		886763	0					
ANR	887372	Identifier	pj_end		886763	0					
ANR	887373	ArgumentList	pj		886763	1					
ANR	887374	Argument	pj		886763	0					
ANR	887375	Identifier	pj		886763	0					
ANR	887376	ExpressionStatement	pj_end ( pj )	2191:3:64975:64986	886763	13	True				
ANR	887377	CallExpression	pj_end ( pj )		886763	0					
ANR	887378	Callee	pj_end		886763	0					
ANR	887379	Identifier	pj_end		886763	0					
ANR	887380	ArgumentList	pj		886763	1					
ANR	887381	Argument	pj		886763	0					
ANR	887382	Identifier	pj		886763	0					
ANR	887383	ExpressionStatement	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"	2192:3:64998:65034	886763	14	True				
ANR	887384	CallExpression	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"		886763	0					
ANR	887385	Callee	r_cons_printf		886763	0					
ANR	887386	Identifier	r_cons_printf		886763	0					
ANR	887387	ArgumentList	"""%s"""		886763	1					
ANR	887388	Argument	"""%s"""		886763	0					
ANR	887389	PrimaryExpression	"""%s"""		886763	0					
ANR	887390	Argument	pj_string ( pj )		886763	1					
ANR	887391	CallExpression	pj_string ( pj )		886763	0					
ANR	887392	Callee	pj_string		886763	0					
ANR	887393	Identifier	pj_string		886763	0					
ANR	887394	ArgumentList	pj		886763	1					
ANR	887395	Argument	pj		886763	0					
ANR	887396	Identifier	pj		886763	0					
ANR	887397	ExpressionStatement	pj_free ( pj )	2193:3:65039:65051	886763	15	True				
ANR	887398	CallExpression	pj_free ( pj )		886763	0					
ANR	887399	Callee	pj_free		886763	0					
ANR	887400	Identifier	pj_free		886763	0					
ANR	887401	ArgumentList	pj		886763	1					
ANR	887402	Argument	pj		886763	0					
ANR	887403	Identifier	pj		886763	0					
ANR	887404	BreakStatement	break ;	2195:2:65059:65064	886763	19	True				
ANR	887405	Label	case '?' :	2196:1:65067:65075	886763	20	True				
ANR	887406	Label	default :	2197:1:65088:65095	886763	21	True				
ANR	887407	Identifier	default		886763	0					
ANR	887408	CompoundStatement		104:3:2569:2605	886763	22					
ANR	887409	IdentifierDeclStatement	"const char * from_a [ ] = { ""arp"" , ""arpi"" , ""arp."" , ""arpj"" , ""arps"" } ;"	2199:3:65104:65168	886763	0	True				
ANR	887410	IdentifierDecl	"* from_a [ ] = { ""arp"" , ""arpi"" , ""arp."" , ""arpj"" , ""arps"" }"		886763	0					
ANR	887411	IdentifierDeclType	const char * [ ]		886763	0					
ANR	887412	Identifier	from_a		886763	1					
ANR	887413	AssignmentExpression	"* from_a [ ] = { ""arp"" , ""arpi"" , ""arp."" , ""arpj"" , ""arps"" }"		886763	2		=			
ANR	887414	Identifier	from_a		886763	0					
ANR	887415	InitializerList	"""arp"""		886763	1					
ANR	887416	PrimaryExpression	"""arp"""		886763	0					
ANR	887417	PrimaryExpression	"""arpi"""		886763	1					
ANR	887418	PrimaryExpression	"""arp."""		886763	2					
ANR	887419	PrimaryExpression	"""arpj"""		886763	3					
ANR	887420	PrimaryExpression	"""arps"""		886763	4					
ANR	887421	IdentifierDeclStatement	const char * * help_msg = help_msg_drp ;	2201:3:65204:65240	886763	1	True				
ANR	887422	IdentifierDecl	* * help_msg = help_msg_drp		886763	0					
ANR	887423	IdentifierDeclType	const char * *		886763	0					
ANR	887424	Identifier	help_msg		886763	1					
ANR	887425	AssignmentExpression	* * help_msg = help_msg_drp		886763	2		=			
ANR	887426	Identifier	help_msg_drp		886763	0					
ANR	887427	Identifier	help_msg_drp		886763	1					
ANR	887428	IfStatement	if ( from == 'a' )		886763	2					
ANR	887429	Condition	from == 'a'	2202:7:65249:65259	886763	0	True				
ANR	887430	EqualityExpression	from == 'a'		886763	0		==			
ANR	887431	Identifier	from		886763	0					
ANR	887432	PrimaryExpression	'a'		886763	1					
ANR	887433	CompoundStatement		105:20:2627:2627	886763	1					
ANR	887434	ExpressionStatement	help_msg [ 1 ] = help_msg [ 3 ] = help_msg [ 6 ] = help_msg [ 9 ] = from_a [ 0 ]	2203:4:65268:65333	886763	0	True				
ANR	887435	AssignmentExpression	help_msg [ 1 ] = help_msg [ 3 ] = help_msg [ 6 ] = help_msg [ 9 ] = from_a [ 0 ]		886763	0		=			
ANR	887436	ArrayIndexing	help_msg [ 1 ]		886763	0					
ANR	887437	Identifier	help_msg		886763	0					
ANR	887438	PrimaryExpression	1		886763	1					
ANR	887439	AssignmentExpression	help_msg [ 3 ] = help_msg [ 6 ] = help_msg [ 9 ] = from_a [ 0 ]		886763	1		=			
ANR	887440	ArrayIndexing	help_msg [ 3 ]		886763	0					
ANR	887441	Identifier	help_msg		886763	0					
ANR	887442	PrimaryExpression	3		886763	1					
ANR	887443	AssignmentExpression	help_msg [ 6 ] = help_msg [ 9 ] = from_a [ 0 ]		886763	1		=			
ANR	887444	ArrayIndexing	help_msg [ 6 ]		886763	0					
ANR	887445	Identifier	help_msg		886763	0					
ANR	887446	PrimaryExpression	6		886763	1					
ANR	887447	AssignmentExpression	help_msg [ 9 ] = from_a [ 0 ]		886763	1		=			
ANR	887448	ArrayIndexing	help_msg [ 9 ]		886763	0					
ANR	887449	Identifier	help_msg		886763	0					
ANR	887450	PrimaryExpression	9		886763	1					
ANR	887451	ArrayIndexing	from_a [ 0 ]		886763	1					
ANR	887452	Identifier	from_a		886763	0					
ANR	887453	PrimaryExpression	0		886763	1					
ANR	887454	ExpressionStatement	help_msg [ 12 ] = from_a [ 1 ]	2204:4:65339:65363	886763	1	True				
ANR	887455	AssignmentExpression	help_msg [ 12 ] = from_a [ 1 ]		886763	0		=			
ANR	887456	ArrayIndexing	help_msg [ 12 ]		886763	0					
ANR	887457	Identifier	help_msg		886763	0					
ANR	887458	PrimaryExpression	12		886763	1					
ANR	887459	ArrayIndexing	from_a [ 1 ]		886763	1					
ANR	887460	Identifier	from_a		886763	0					
ANR	887461	PrimaryExpression	1		886763	1					
ANR	887462	ExpressionStatement	help_msg [ 15 ] = from_a [ 2 ]	2205:4:65369:65393	886763	2	True				
ANR	887463	AssignmentExpression	help_msg [ 15 ] = from_a [ 2 ]		886763	0		=			
ANR	887464	ArrayIndexing	help_msg [ 15 ]		886763	0					
ANR	887465	Identifier	help_msg		886763	0					
ANR	887466	PrimaryExpression	15		886763	1					
ANR	887467	ArrayIndexing	from_a [ 2 ]		886763	1					
ANR	887468	Identifier	from_a		886763	0					
ANR	887469	PrimaryExpression	2		886763	1					
ANR	887470	ExpressionStatement	help_msg [ 18 ] = from_a [ 3 ]	2206:4:65399:65423	886763	3	True				
ANR	887471	AssignmentExpression	help_msg [ 18 ] = from_a [ 3 ]		886763	0		=			
ANR	887472	ArrayIndexing	help_msg [ 18 ]		886763	0					
ANR	887473	Identifier	help_msg		886763	0					
ANR	887474	PrimaryExpression	18		886763	1					
ANR	887475	ArrayIndexing	from_a [ 3 ]		886763	1					
ANR	887476	Identifier	from_a		886763	0					
ANR	887477	PrimaryExpression	3		886763	1					
ANR	887478	ExpressionStatement	help_msg [ 21 ] = from_a [ 4 ]	2207:4:65429:65453	886763	4	True				
ANR	887479	AssignmentExpression	help_msg [ 21 ] = from_a [ 4 ]		886763	0		=			
ANR	887480	ArrayIndexing	help_msg [ 21 ]		886763	0					
ANR	887481	Identifier	help_msg		886763	0					
ANR	887482	PrimaryExpression	21		886763	1					
ANR	887483	ArrayIndexing	from_a [ 4 ]		886763	1					
ANR	887484	Identifier	from_a		886763	0					
ANR	887485	PrimaryExpression	4		886763	1					
ANR	887486	ExpressionStatement	"r_core_cmd_help ( core , help_msg )"	2209:3:65463:65495	886763	3	True				
ANR	887487	CallExpression	"r_core_cmd_help ( core , help_msg )"		886763	0					
ANR	887488	Callee	r_core_cmd_help		886763	0					
ANR	887489	Identifier	r_core_cmd_help		886763	0					
ANR	887490	ArgumentList	core		886763	1					
ANR	887491	Argument	core		886763	0					
ANR	887492	Identifier	core		886763	0					
ANR	887493	Argument	help_msg		886763	1					
ANR	887494	Identifier	help_msg		886763	0					
ANR	887495	BreakStatement	break ;	2210:3:65500:65505	886763	4	True				
ANR	887496	ReturnType	static void		886763	1					
ANR	887497	Identifier	cmd_reg_profile		886763	2					
ANR	887498	ParameterList	"RCore * core , char from , const char * str"		886763	3					
ANR	887499	Parameter	RCore * core	2098:29:62593:62603	886763	0	True				
ANR	887500	ParameterType	RCore *		886763	0					
ANR	887501	Identifier	core		886763	1					
ANR	887502	Parameter	char from	2098:42:62606:62614	886763	1	True				
ANR	887503	ParameterType	char		886763	0					
ANR	887504	Identifier	from		886763	1					
ANR	887505	Parameter	const char * str	2098:53:62617:62631	886763	2	True				
ANR	887506	ParameterType	const char *		886763	0					
ANR	887507	Identifier	str		886763	1					
ANR	887508	CFGEntryNode	ENTRY		886763		True				
ANR	887509	CFGExitNode	EXIT		886763		True				
ANR	887510	Symbol	* from_a		886763						
ANR	887511	Symbol	pj_string		886763						
ANR	887512	Symbol	from_a		886763						
ANR	887513	Symbol	r_reg_get_type		886763						
ANR	887514	Symbol	arena		886763						
ANR	887515	Symbol	r_reg_regset_get		886763						
ANR	887516	Symbol	newbytes		886763						
ANR	887517	Symbol	R_REG_NAME_LAST		886763						
ANR	887518	Symbol	* * core -> dbg -> reg		886763						
ANR	887519	Symbol	* core -> dbg -> reg		886763						
ANR	887520	Symbol	* ptr		886763						
ANR	887521	Symbol	help_msg_drp		886763						
ANR	887522	Symbol	from		886763						
ANR	887523	Symbol	arena -> bytes		886763						
ANR	887524	Symbol	core -> num		886763						
ANR	887525	Symbol	r -> offset		886763						
ANR	887526	Symbol	core -> dbg -> reg -> name		886763						
ANR	887527	Symbol	isspace		886763						
ANR	887528	Symbol	iter		886763						
ANR	887529	Symbol	R_REG_TYPE_LAST		886763						
ANR	887530	Symbol	arena -> size		886763						
ANR	887531	Symbol	* * rs		886763						
ANR	887532	Symbol	str		886763						
ANR	887533	Symbol	core		886763						
ANR	887534	Symbol	* * * core		886763						
ANR	887535	Symbol	* help_msg		886763						
ANR	887536	Symbol	rs -> arena		886763						
ANR	887537	Symbol	r -> name		886763						
ANR	887538	Symbol	* core -> dbg -> reg -> name		886763						
ANR	887539	Symbol	* core -> dbg		886763						
ANR	887540	Symbol	r -> size		886763						
ANR	887541	Symbol	rs		886763						
ANR	887542	Symbol	r -> type		886763						
ANR	887543	Symbol	rs -> arena -> size		886763						
ANR	887544	Symbol	* core		886763						
ANR	887545	Symbol	calloc		886763						
ANR	887546	Symbol	r_reg_get_role		886763						
ANR	887547	Symbol	r_num_math		886763						
ANR	887548	Symbol	* * * core -> dbg		886763						
ANR	887549	Symbol	* str		886763						
ANR	887550	Symbol	* * * * core		886763						
ANR	887551	Symbol	* * core		886763						
ANR	887552	Symbol	R_REG_TYPE_GPR		886763						
ANR	887553	Symbol	r_str_startswith		886763						
ANR	887554	Symbol	* rs		886763						
ANR	887555	Symbol	i		886763						
ANR	887556	Symbol	n		886763						
ANR	887557	Symbol	ptr		886763						
ANR	887558	Symbol	help_msg		886763						
ANR	887559	Symbol	r		886763						
ANR	887560	Symbol	core -> dbg -> reg -> reg_profile_str		886763						
ANR	887561	Symbol	* i		886763						
ANR	887562	Symbol	* rs -> arena		886763						
ANR	887563	Symbol	core -> dbg -> reg		886763						
ANR	887564	Symbol	pj		886763						
ANR	887565	Symbol	pj_new		886763						
ANR	887566	Symbol	* arena		886763						
ANR	887567	Symbol	* r		886763						
ANR	887568	Symbol	* * core -> dbg		886763						
ANR	887569	Symbol	core -> dbg		886763						
ANR	887570	Function	showreg	2217:0:65524:66516							
ANR	887571	FunctionDef	"showreg (RCore * core , const char * str , bool use_color)"		887570	0					
ANR	887572	CompoundStatement		2217:65:65589:66516	887570	0					
ANR	887573	IdentifierDeclStatement	ut64 off ;	2218:1:65592:65600	887570	0	True				
ANR	887574	IdentifierDecl	off		887570	0					
ANR	887575	IdentifierDeclType	ut64		887570	0					
ANR	887576	Identifier	off		887570	1					
ANR	887577	IdentifierDeclStatement	utX value ;	2219:1:65603:65612	887570	1	True				
ANR	887578	IdentifierDecl	value		887570	0					
ANR	887579	IdentifierDeclType	utX		887570	0					
ANR	887580	Identifier	value		887570	1					
ANR	887581	IdentifierDeclStatement	int err ;	2220:1:65615:65622	887570	2	True				
ANR	887582	IdentifierDecl	err		887570	0					
ANR	887583	IdentifierDeclType	int		887570	0					
ANR	887584	Identifier	err		887570	1					
ANR	887585	IdentifierDeclStatement	int bits = atoi ( str ) ;	2221:1:65625:65646	887570	3	True				
ANR	887586	IdentifierDecl	bits = atoi ( str )		887570	0					
ANR	887587	IdentifierDeclType	int		887570	0					
ANR	887588	Identifier	bits		887570	1					
ANR	887589	AssignmentExpression	bits = atoi ( str )		887570	2		=			
ANR	887590	Identifier	bits		887570	0					
ANR	887591	CallExpression	atoi ( str )		887570	1					
ANR	887592	Callee	atoi		887570	0					
ANR	887593	Identifier	atoi		887570	0					
ANR	887594	ArgumentList	str		887570	1					
ANR	887595	Argument	str		887570	0					
ANR	887596	Identifier	str		887570	0					
ANR	887597	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"	2222:1:65649:65700	887570	4	True				
ANR	887598	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"		887570	0					
ANR	887599	Callee	r_debug_reg_sync		887570	0					
ANR	887600	Identifier	r_debug_reg_sync		887570	0					
ANR	887601	ArgumentList	core -> dbg		887570	1					
ANR	887602	Argument	core -> dbg		887570	0					
ANR	887603	PtrMemberAccess	core -> dbg		887570	0					
ANR	887604	Identifier	core		887570	0					
ANR	887605	Identifier	dbg		887570	1					
ANR	887606	Argument	R_REG_TYPE_ALL		887570	1					
ANR	887607	Identifier	R_REG_TYPE_ALL		887570	0					
ANR	887608	Argument	false		887570	2					
ANR	887609	Identifier	false		887570	0					
ANR	887610	IfStatement	if ( bits )		887570	5					
ANR	887611	Condition	bits	2223:5:65733:65736	887570	0	True				
ANR	887612	Identifier	bits		887570	0					
ANR	887613	CompoundStatement		7:11:149:149	887570	1					
ANR	887614	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , str [ 0 ] , use_color ? Color_GREEN : NULL )"	2224:2:65743:65831	887570	0	True				
ANR	887615	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , str [ 0 ] , use_color ? Color_GREEN : NULL )"		887570	0					
ANR	887616	Callee	r_debug_reg_list		887570	0					
ANR	887617	Identifier	r_debug_reg_list		887570	0					
ANR	887618	ArgumentList	core -> dbg		887570	1					
ANR	887619	Argument	core -> dbg		887570	0					
ANR	887620	PtrMemberAccess	core -> dbg		887570	0					
ANR	887621	Identifier	core		887570	0					
ANR	887622	Identifier	dbg		887570	1					
ANR	887623	Argument	R_REG_TYPE_GPR		887570	1					
ANR	887624	Identifier	R_REG_TYPE_GPR		887570	0					
ANR	887625	Argument	bits		887570	2					
ANR	887626	Identifier	bits		887570	0					
ANR	887627	Argument	str [ 0 ]		887570	3					
ANR	887628	ArrayIndexing	str [ 0 ]		887570	0					
ANR	887629	Identifier	str		887570	0					
ANR	887630	PrimaryExpression	0		887570	1					
ANR	887631	Argument	use_color ? Color_GREEN : NULL		887570	4					
ANR	887632	ConditionalExpression	use_color ? Color_GREEN : NULL		887570	0					
ANR	887633	Condition	use_color		887570	0					
ANR	887634	Identifier	use_color		887570	0					
ANR	887635	Identifier	Color_GREEN		887570	1					
ANR	887636	Identifier	NULL		887570	2					
ANR	887637	ElseStatement	else		887570	0					
ANR	887638	CompoundStatement		9:8:251:251	887570	0					
ANR	887639	ExpressionStatement	"off = r_debug_reg_get_err ( core -> dbg , str + 1 , & err , & value )"	2226:2:65845:65905	887570	0	True				
ANR	887640	AssignmentExpression	"off = r_debug_reg_get_err ( core -> dbg , str + 1 , & err , & value )"		887570	0		=			
ANR	887641	Identifier	off		887570	0					
ANR	887642	CallExpression	"r_debug_reg_get_err ( core -> dbg , str + 1 , & err , & value )"		887570	1					
ANR	887643	Callee	r_debug_reg_get_err		887570	0					
ANR	887644	Identifier	r_debug_reg_get_err		887570	0					
ANR	887645	ArgumentList	core -> dbg		887570	1					
ANR	887646	Argument	core -> dbg		887570	0					
ANR	887647	PtrMemberAccess	core -> dbg		887570	0					
ANR	887648	Identifier	core		887570	0					
ANR	887649	Identifier	dbg		887570	1					
ANR	887650	Argument	str + 1		887570	1					
ANR	887651	AdditiveExpression	str + 1		887570	0		+			
ANR	887652	Identifier	str		887570	0					
ANR	887653	PrimaryExpression	1		887570	1					
ANR	887654	Argument	& err		887570	2					
ANR	887655	UnaryOperationExpression	& err		887570	0					
ANR	887656	UnaryOperator	&		887570	0					
ANR	887657	Identifier	err		887570	1					
ANR	887658	Argument	& value		887570	3					
ANR	887659	UnaryOperationExpression	& value		887570	0					
ANR	887660	UnaryOperator	&		887570	0					
ANR	887661	Identifier	value		887570	1					
ANR	887662	ExpressionStatement	core -> num -> value = off	2227:2:65909:65931	887570	1	True				
ANR	887663	AssignmentExpression	core -> num -> value = off		887570	0		=			
ANR	887664	PtrMemberAccess	core -> num -> value		887570	0					
ANR	887665	PtrMemberAccess	core -> num		887570	0					
ANR	887666	Identifier	core		887570	0					
ANR	887667	Identifier	num		887570	1					
ANR	887668	Identifier	value		887570	1					
ANR	887669	Identifier	off		887570	1					
ANR	887670	SwitchStatement	switch ( err )		887570	2					
ANR	887671	Condition	err	2228:10:65943:65945	887570	0	True				
ANR	887672	Identifier	err		887570	0					
ANR	887673	CompoundStatement		12:15:358:358	887570	1					
ANR	887674	Label	case 0 :	2229:2:65952:65958	887570	0	True				
ANR	887675	Statement	r_cons_printf	2230:3:65963:65975	887570	1	True				
ANR	887676	Statement	(	2230:17:65977:65977	887570	2	True				
ANR	887677	Statement	"""0x%08"""	2230:18:65978:65984	887570	3	True				
ANR	887678	Statement	PFMT64x	2230:25:65985:65991	887570	4	True				
ANR	887679	Statement	"""\\n"""	2230:32:65992:65995	887570	5	True				
ANR	887680	Statement	","	2230:36:65996:65996	887570	6	True				
ANR	887681	Statement	off	2230:38:65998:66000	887570	7	True				
ANR	887682	Statement	)	2230:41:66001:66001	887570	8	True				
ANR	887683	ExpressionStatement		2230:42:66002:66002	887570	9	True				
ANR	887684	BreakStatement	break ;	2231:3:66007:66012	887570	10	True				
ANR	887685	Label	case 1 :	2232:2:66016:66022	887570	11	True				
ANR	887686	ExpressionStatement	"r_cons_printf ( ""Unknown register '%s'\\n"" , str + 1 )"	2233:3:66027:66077	887570	12	True				
ANR	887687	CallExpression	"r_cons_printf ( ""Unknown register '%s'\\n"" , str + 1 )"		887570	0					
ANR	887688	Callee	r_cons_printf		887570	0					
ANR	887689	Identifier	r_cons_printf		887570	0					
ANR	887690	ArgumentList	"""Unknown register '%s'\\n"""		887570	1					
ANR	887691	Argument	"""Unknown register '%s'\\n"""		887570	0					
ANR	887692	PrimaryExpression	"""Unknown register '%s'\\n"""		887570	0					
ANR	887693	Argument	str + 1		887570	1					
ANR	887694	AdditiveExpression	str + 1		887570	0		+			
ANR	887695	Identifier	str		887570	0					
ANR	887696	PrimaryExpression	1		887570	1					
ANR	887697	BreakStatement	break ;	2234:3:66082:66087	887570	13	True				
ANR	887698	Label	case 80 :	2235:2:66091:66098	887570	14	True				
ANR	887699	Statement	r_cons_printf	2236:3:66103:66115	887570	15	True				
ANR	887700	Statement	(	2236:17:66117:66117	887570	16	True				
ANR	887701	Statement	"""0x%04x%016"""	2236:18:66118:66129	887570	17	True				
ANR	887702	Statement	PFMT64x	2236:30:66130:66136	887570	18	True				
ANR	887703	Statement	"""\\n"""	2236:37:66137:66140	887570	19	True				
ANR	887704	Statement	","	2236:41:66141:66141	887570	20	True				
ANR	887705	Statement	value	2236:43:66143:66147	887570	21	True				
ANR	887706	Statement	.	2236:48:66148:66148	887570	22	True				
ANR	887707	Statement	v80	2236:49:66149:66151	887570	23	True				
ANR	887708	Statement	.	2236:52:66152:66152	887570	24	True				
ANR	887709	Statement	High	2236:53:66153:66156	887570	25	True				
ANR	887710	Statement	","	2236:57:66157:66157	887570	26	True				
ANR	887711	Statement	value	2236:59:66159:66163	887570	27	True				
ANR	887712	Statement	.	2236:64:66164:66164	887570	28	True				
ANR	887713	Statement	v80	2236:65:66165:66167	887570	29	True				
ANR	887714	Statement	.	2236:68:66168:66168	887570	30	True				
ANR	887715	Statement	Low	2236:69:66169:66171	887570	31	True				
ANR	887716	Statement	)	2236:72:66172:66172	887570	32	True				
ANR	887717	ExpressionStatement		2236:73:66173:66173	887570	33	True				
ANR	887718	BreakStatement	break ;	2237:3:66178:66183	887570	34	True				
ANR	887719	Label	case 96 :	2238:2:66187:66194	887570	35	True				
ANR	887720	Statement	r_cons_printf	2239:3:66199:66211	887570	36	True				
ANR	887721	Statement	(	2239:17:66213:66213	887570	37	True				
ANR	887722	Statement	"""0x%08x%016"""	2239:18:66214:66225	887570	38	True				
ANR	887723	Statement	PFMT64x	2239:30:66226:66232	887570	39	True				
ANR	887724	Statement	"""\\n"""	2239:37:66233:66236	887570	40	True				
ANR	887725	Statement	","	2239:41:66237:66237	887570	41	True				
ANR	887726	Statement	value	2239:43:66239:66243	887570	42	True				
ANR	887727	Statement	.	2239:48:66244:66244	887570	43	True				
ANR	887728	Statement	v96	2239:49:66245:66247	887570	44	True				
ANR	887729	Statement	.	2239:52:66248:66248	887570	45	True				
ANR	887730	Statement	High	2239:53:66249:66252	887570	46	True				
ANR	887731	Statement	","	2239:57:66253:66253	887570	47	True				
ANR	887732	Statement	value	2239:59:66255:66259	887570	48	True				
ANR	887733	Statement	.	2239:64:66260:66260	887570	49	True				
ANR	887734	Statement	v96	2239:65:66261:66263	887570	50	True				
ANR	887735	Statement	.	2239:68:66264:66264	887570	51	True				
ANR	887736	Statement	Low	2239:69:66265:66267	887570	52	True				
ANR	887737	Statement	)	2239:72:66268:66268	887570	53	True				
ANR	887738	ExpressionStatement		2239:73:66269:66269	887570	54	True				
ANR	887739	BreakStatement	break ;	2240:3:66274:66279	887570	55	True				
ANR	887740	Label	case 128 :	2241:2:66283:66291	887570	56	True				
ANR	887741	Statement	r_cons_printf	2242:3:66296:66308	887570	57	True				
ANR	887742	Statement	(	2242:17:66310:66310	887570	58	True				
ANR	887743	Statement	"""0x%016"""	2242:18:66311:66318	887570	59	True				
ANR	887744	Statement	PFMT64x	2242:26:66319:66325	887570	60	True				
ANR	887745	Statement	"""%016"""	2242:33:66326:66331	887570	61	True				
ANR	887746	Statement	PFMT64x	2242:39:66332:66338	887570	62	True				
ANR	887747	Statement	"""\\n"""	2242:46:66339:66342	887570	63	True				
ANR	887748	Statement	","	2242:50:66343:66343	887570	64	True				
ANR	887749	Statement	value	2242:52:66345:66349	887570	65	True				
ANR	887750	Statement	.	2242:57:66350:66350	887570	66	True				
ANR	887751	Statement	v128	2242:58:66351:66354	887570	67	True				
ANR	887752	Statement	.	2242:62:66355:66355	887570	68	True				
ANR	887753	Statement	High	2242:63:66356:66359	887570	69	True				
ANR	887754	Statement	","	2242:67:66360:66360	887570	70	True				
ANR	887755	Statement	value	2242:69:66362:66366	887570	71	True				
ANR	887756	Statement	.	2242:74:66367:66367	887570	72	True				
ANR	887757	Statement	v128	2242:75:66368:66371	887570	73	True				
ANR	887758	Statement	.	2242:79:66372:66372	887570	74	True				
ANR	887759	Statement	Low	2242:80:66373:66375	887570	75	True				
ANR	887760	Statement	)	2242:83:66376:66376	887570	76	True				
ANR	887761	ExpressionStatement		2242:84:66377:66377	887570	77	True				
ANR	887762	BreakStatement	break ;	2243:3:66382:66387	887570	78	True				
ANR	887763	Label	default :	2244:2:66391:66398	887570	79	True				
ANR	887764	Identifier	default		887570	0					
ANR	887765	ExpressionStatement	"r_cons_printf ( ""Error %i while retrieving '%s' \\n"" , err , str + 1 )"	2245:3:66403:66468	887570	80	True				
ANR	887766	CallExpression	"r_cons_printf ( ""Error %i while retrieving '%s' \\n"" , err , str + 1 )"		887570	0					
ANR	887767	Callee	r_cons_printf		887570	0					
ANR	887768	Identifier	r_cons_printf		887570	0					
ANR	887769	ArgumentList	"""Error %i while retrieving '%s' \\n"""		887570	1					
ANR	887770	Argument	"""Error %i while retrieving '%s' \\n"""		887570	0					
ANR	887771	PrimaryExpression	"""Error %i while retrieving '%s' \\n"""		887570	0					
ANR	887772	Argument	err		887570	1					
ANR	887773	Identifier	err		887570	0					
ANR	887774	Argument	str + 1		887570	2					
ANR	887775	AdditiveExpression	str + 1		887570	0		+			
ANR	887776	Identifier	str		887570	0					
ANR	887777	PrimaryExpression	1		887570	1					
ANR	887778	ExpressionStatement	core -> num -> value = 0	2246:3:66473:66493	887570	81	True				
ANR	887779	AssignmentExpression	core -> num -> value = 0		887570	0		=			
ANR	887780	PtrMemberAccess	core -> num -> value		887570	0					
ANR	887781	PtrMemberAccess	core -> num		887570	0					
ANR	887782	Identifier	core		887570	0					
ANR	887783	Identifier	num		887570	1					
ANR	887784	Identifier	value		887570	1					
ANR	887785	PrimaryExpression	0		887570	1					
ANR	887786	ReturnStatement	return bits ;	2249:1:66503:66514	887570	6	True				
ANR	887787	Identifier	bits		887570	0					
ANR	887788	ReturnType	static int		887570	1					
ANR	887789	Identifier	showreg		887570	2					
ANR	887790	ParameterList	"RCore * core , const char * str , bool use_color"		887570	3					
ANR	887791	Parameter	RCore * core	2217:19:65543:65553	887570	0	True				
ANR	887792	ParameterType	RCore *		887570	0					
ANR	887793	Identifier	core		887570	1					
ANR	887794	Parameter	const char * str	2217:32:65556:65570	887570	1	True				
ANR	887795	ParameterType	const char *		887570	0					
ANR	887796	Identifier	str		887570	1					
ANR	887797	Parameter	bool use_color	2217:49:65573:65586	887570	2	True				
ANR	887798	ParameterType	bool		887570	0					
ANR	887799	Identifier	use_color		887570	1					
ANR	887800	CFGEntryNode	ENTRY		887570		True				
ANR	887801	CFGExitNode	EXIT		887570		True				
ANR	887802	Symbol	atoi		887570						
ANR	887803	Symbol	Color_GREEN		887570						
ANR	887804	Symbol	NULL		887570						
ANR	887805	Symbol	& value		887570						
ANR	887806	Symbol	err		887570						
ANR	887807	Symbol	r_debug_reg_get_err		887570						
ANR	887808	Symbol	bits		887570						
ANR	887809	Symbol	false		887570						
ANR	887810	Symbol	* core		887570						
ANR	887811	Symbol	core -> num -> value		887570						
ANR	887812	Symbol	& err		887570						
ANR	887813	Symbol	use_color		887570						
ANR	887814	Symbol	off		887570						
ANR	887815	Symbol	str		887570						
ANR	887816	Symbol	core		887570						
ANR	887817	Symbol	R_REG_TYPE_ALL		887570						
ANR	887818	Symbol	* core -> num		887570						
ANR	887819	Symbol	* str		887570						
ANR	887820	Symbol	core -> num		887570						
ANR	887821	Symbol	value		887570						
ANR	887822	Symbol	R_REG_TYPE_GPR		887570						
ANR	887823	Symbol	* * core		887570						
ANR	887824	Symbol	core -> dbg		887570						
ANR	887825	Function	cmd_debug_reg	2253:0:66526:82723							
ANR	887826	FunctionDef	"cmd_debug_reg (RCore * core , const char * str)"		887825	0					
ANR	887827	CompoundStatement		2253:56:66582:82723	887825	0					
ANR	887828	IdentifierDeclStatement	char * arg ;	2254:1:66585:66594	887825	0	True				
ANR	887829	IdentifierDecl	* arg		887825	0					
ANR	887830	IdentifierDeclType	char *		887825	0					
ANR	887831	Identifier	arg		887825	1					
ANR	887832	IdentifierDeclStatement	struct r_reg_item_t * r ;	2255:1:66597:66619	887825	1	True				
ANR	887833	IdentifierDecl	* r		887825	0					
ANR	887834	IdentifierDeclType	struct r_reg_item_t *		887825	0					
ANR	887835	Identifier	r		887825	1					
ANR	887836	IdentifierDeclStatement	"const char * name , * use_color ;"	2256:1:66622:66650	887825	2	True				
ANR	887837	IdentifierDecl	* name		887825	0					
ANR	887838	IdentifierDeclType	const char *		887825	0					
ANR	887839	Identifier	name		887825	1					
ANR	887840	IdentifierDecl	* use_color		887825	1					
ANR	887841	IdentifierDeclType	const char *		887825	0					
ANR	887842	Identifier	use_color		887825	1					
ANR	887843	IdentifierDeclStatement	"int size , i , type = R_REG_TYPE_GPR ;"	2257:1:66653:66687	887825	3	True				
ANR	887844	IdentifierDecl	size		887825	0					
ANR	887845	IdentifierDeclType	int		887825	0					
ANR	887846	Identifier	size		887825	1					
ANR	887847	IdentifierDecl	i		887825	1					
ANR	887848	IdentifierDeclType	int		887825	0					
ANR	887849	Identifier	i		887825	1					
ANR	887850	IdentifierDecl	type = R_REG_TYPE_GPR		887825	2					
ANR	887851	IdentifierDeclType	int		887825	0					
ANR	887852	Identifier	type		887825	1					
ANR	887853	AssignmentExpression	type = R_REG_TYPE_GPR		887825	2		=			
ANR	887854	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	887855	Identifier	R_REG_TYPE_GPR		887825	1					
ANR	887856	IdentifierDeclStatement	int bits = ( core -> dbg -> bits & R_SYS_BITS_64 ) ? 64 : 32 ;	2258:1:66690:66742	887825	4	True				
ANR	887857	IdentifierDecl	bits = ( core -> dbg -> bits & R_SYS_BITS_64 ) ? 64 : 32		887825	0					
ANR	887858	IdentifierDeclType	int		887825	0					
ANR	887859	Identifier	bits		887825	1					
ANR	887860	AssignmentExpression	bits = ( core -> dbg -> bits & R_SYS_BITS_64 ) ? 64 : 32		887825	2		=			
ANR	887861	Identifier	bits		887825	0					
ANR	887862	ConditionalExpression	( core -> dbg -> bits & R_SYS_BITS_64 ) ? 64 : 32		887825	1					
ANR	887863	Condition	core -> dbg -> bits & R_SYS_BITS_64		887825	0					
ANR	887864	BitAndExpression	core -> dbg -> bits & R_SYS_BITS_64		887825	0		&			
ANR	887865	PtrMemberAccess	core -> dbg -> bits		887825	0					
ANR	887866	PtrMemberAccess	core -> dbg		887825	0					
ANR	887867	Identifier	core		887825	0					
ANR	887868	Identifier	dbg		887825	1					
ANR	887869	Identifier	bits		887825	1					
ANR	887870	Identifier	R_SYS_BITS_64		887825	1					
ANR	887871	PrimaryExpression	64		887825	1					
ANR	887872	PrimaryExpression	32		887825	2					
ANR	887873	IdentifierDeclStatement	"int use_colors = r_config_get_i ( core -> config , ""scr.color"" ) ;"	2259:1:66745:66804	887825	5	True				
ANR	887874	IdentifierDecl	"use_colors = r_config_get_i ( core -> config , ""scr.color"" )"		887825	0					
ANR	887875	IdentifierDeclType	int		887825	0					
ANR	887876	Identifier	use_colors		887825	1					
ANR	887877	AssignmentExpression	"use_colors = r_config_get_i ( core -> config , ""scr.color"" )"		887825	2		=			
ANR	887878	Identifier	use_colors		887825	0					
ANR	887879	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		887825	1					
ANR	887880	Callee	r_config_get_i		887825	0					
ANR	887881	Identifier	r_config_get_i		887825	0					
ANR	887882	ArgumentList	core -> config		887825	1					
ANR	887883	Argument	core -> config		887825	0					
ANR	887884	PtrMemberAccess	core -> config		887825	0					
ANR	887885	Identifier	core		887825	0					
ANR	887886	Identifier	config		887825	1					
ANR	887887	Argument	"""scr.color"""		887825	1					
ANR	887888	PrimaryExpression	"""scr.color"""		887825	0					
ANR	887889	IdentifierDeclStatement	"int newbits = atoi ( ( str && * str ) ? str + 1 : """" ) ;"	2260:1:66807:66852	887825	6	True				
ANR	887890	IdentifierDecl	"newbits = atoi ( ( str && * str ) ? str + 1 : """" )"		887825	0					
ANR	887891	IdentifierDeclType	int		887825	0					
ANR	887892	Identifier	newbits		887825	1					
ANR	887893	AssignmentExpression	"newbits = atoi ( ( str && * str ) ? str + 1 : """" )"		887825	2		=			
ANR	887894	Identifier	newbits		887825	0					
ANR	887895	CallExpression	"atoi ( ( str && * str ) ? str + 1 : """" )"		887825	1					
ANR	887896	Callee	atoi		887825	0					
ANR	887897	Identifier	atoi		887825	0					
ANR	887898	ArgumentList	"( str && * str ) ? str + 1 : """""		887825	1					
ANR	887899	Argument	"( str && * str ) ? str + 1 : """""		887825	0					
ANR	887900	ConditionalExpression	"( str && * str ) ? str + 1 : """""		887825	0					
ANR	887901	Condition	str && * str		887825	0					
ANR	887902	AndExpression	str && * str		887825	0		&&			
ANR	887903	Identifier	str		887825	0					
ANR	887904	UnaryOperationExpression	* str		887825	1					
ANR	887905	UnaryOperator	*		887825	0					
ANR	887906	Identifier	str		887825	1					
ANR	887907	AdditiveExpression	str + 1		887825	1		+			
ANR	887908	Identifier	str		887825	0					
ANR	887909	PrimaryExpression	1		887825	1					
ANR	887910	PrimaryExpression	""""""		887825	2					
ANR	887911	IfStatement	if ( newbits > 0 )		887825	7					
ANR	887912	Condition	newbits > 0	2261:5:66859:66869	887825	0	True				
ANR	887913	RelationalExpression	newbits > 0		887825	0		>			
ANR	887914	Identifier	newbits		887825	0					
ANR	887915	PrimaryExpression	0		887825	1					
ANR	887916	CompoundStatement		9:18:289:289	887825	1					
ANR	887917	ExpressionStatement	bits = newbits	2262:2:66876:66890	887825	0	True				
ANR	887918	AssignmentExpression	bits = newbits		887825	0		=			
ANR	887919	Identifier	bits		887825	0					
ANR	887920	Identifier	newbits		887825	1					
ANR	887921	IfStatement	if ( use_colors )		887825	8					
ANR	887922	Condition	use_colors	2264:5:66900:66909	887825	0	True				
ANR	887923	Identifier	use_colors		887825	0					
ANR	887924	CompoundStatement		12:17:329:329	887825	1					
ANR	887925	Statement	undef	2265:1:66915:66919	887825	0	True				
ANR	887926	Statement	ConsP	2265:7:66921:66925	887825	1	True				
ANR	887927	Statement	define	2266:1:66928:66933	887825	2	True				
ANR	887928	Statement	ConsP	2266:8:66935:66939	887825	3	True				
ANR	887929	Statement	(	2266:13:66940:66940	887825	4	True				
ANR	887930	Statement	x	2266:14:66941:66941	887825	5	True				
ANR	887931	Statement	)	2266:15:66942:66942	887825	6	True				
ANR	887932	Statement	(	2266:17:66944:66944	887825	7	True				
ANR	887933	Statement	core	2266:18:66945:66948	887825	8	True				
ANR	887934	Statement	->	2266:22:66949:66950	887825	9	True				
ANR	887935	Statement	cons	2266:24:66951:66954	887825	10	True				
ANR	887936	Statement	&&	2266:29:66956:66957	887825	11	True				
ANR	887937	Statement	core	2266:32:66959:66962	887825	12	True				
ANR	887938	Statement	->	2266:36:66963:66964	887825	13	True				
ANR	887939	Statement	cons	2266:38:66965:66968	887825	14	True				
ANR	887940	Statement	->	2266:42:66969:66970	887825	15	True				
ANR	887941	Statement	context	2266:44:66971:66977	887825	16	True				
ANR	887942	Statement	->	2266:51:66978:66979	887825	17	True				
ANR	887943	Statement	pal	2266:53:66980:66982	887825	18	True				
ANR	887944	Statement	.	2266:56:66983:66983	887825	19	True				
ANR	887945	Statement	x	2266:57:66984:66984	887825	20	True				
ANR	887946	Statement	)	2266:58:66985:66985	887825	21	True				
ANR	887947	Statement	?	2266:59:66986:66986	887825	22	True				
ANR	887948	Statement	core	2266:61:66988:66991	887825	23	True				
ANR	887949	Statement	->	2266:65:66992:66993	887825	24	True				
ANR	887950	Statement	cons	2266:67:66994:66997	887825	25	True				
ANR	887951	Statement	->	2266:71:66998:66999	887825	26	True				
ANR	887952	Statement	context	2266:73:67000:67006	887825	27	True				
ANR	887953	Statement	->	2266:80:67007:67008	887825	28	True				
ANR	887954	Statement	pal	2266:82:67009:67011	887825	29	True				
ANR	887955	Statement	.	2266:85:67012:67012	887825	30	True				
ANR	887956	Statement	x	2266:86:67013:67013	887825	31	True				
ANR	887957	Statement	use_color	2267:2:67017:67025	887825	32	True				
ANR	887958	Statement	=	2267:12:67027:67027	887825	33	True				
ANR	887959	Statement	ConsP	2267:14:67029:67033	887825	34	True				
ANR	887960	Statement	(	2267:19:67034:67034	887825	35	True				
ANR	887961	Statement	creg	2267:20:67035:67038	887825	36	True				
ANR	887962	Statement	)	2267:24:67039:67039	887825	37	True				
ANR	887963	Statement	:	2267:25:67040:67040	887825	38	True				
ANR	887964	ExpressionStatement	Color_BWHITE	2267:27:67042:67054	887825	39	True				
ANR	887965	Identifier	Color_BWHITE		887825	0					
ANR	887966	ElseStatement	else		887825	0					
ANR	887967	CompoundStatement		16:8:481:481	887825	0					
ANR	887968	ExpressionStatement	use_color = NULL	2269:2:67068:67084	887825	0	True				
ANR	887969	AssignmentExpression	use_color = NULL		887825	0		=			
ANR	887970	Identifier	use_color		887825	0					
ANR	887971	Identifier	NULL		887825	1					
ANR	887972	IfStatement	if ( ! str )		887825	9					
ANR	887973	Condition	! str	2271:5:67094:67097	887825	0	True				
ANR	887974	UnaryOperationExpression	! str		887825	0					
ANR	887975	UnaryOperator	!		887825	0					
ANR	887976	Identifier	str		887825	1					
ANR	887977	CompoundStatement		19:11:517:517	887825	1					
ANR	887978	ExpressionStatement	"str = """""	2272:2:67104:67112	887825	0	True				
ANR	887979	AssignmentExpression	"str = """""		887825	0		=			
ANR	887980	Identifier	str		887825	0					
ANR	887981	PrimaryExpression	""""""		887825	1					
ANR	887982	SwitchStatement	switch ( str [ 0 ] )		887825	10					
ANR	887983	Condition	str [ 0 ]	2274:9:67126:67131	887825	0	True				
ANR	887984	ArrayIndexing	str [ 0 ]		887825	0					
ANR	887985	Identifier	str		887825	0					
ANR	887986	PrimaryExpression	0		887825	1					
ANR	887987	CompoundStatement		22:17:551:551	887825	1					
ANR	887988	Label	case 'C' :	2275:1:67137:67145	887825	0	True				
ANR	887989	IfStatement	if ( core -> dbg -> reg -> reg_profile_cmt )		887825	1					
ANR	887990	Condition	core -> dbg -> reg -> reg_profile_cmt	2276:6:67162:67192	887825	0	True				
ANR	887991	PtrMemberAccess	core -> dbg -> reg -> reg_profile_cmt		887825	0					
ANR	887992	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	887993	PtrMemberAccess	core -> dbg		887825	0					
ANR	887994	Identifier	core		887825	0					
ANR	887995	Identifier	dbg		887825	1					
ANR	887996	Identifier	reg		887825	1					
ANR	887997	Identifier	reg_profile_cmt		887825	1					
ANR	887998	CompoundStatement		24:39:612:612	887825	1					
ANR	887999	ExpressionStatement	r_cons_println ( core -> dbg -> reg -> reg_profile_cmt )	2277:3:67200:67248	887825	0	True				
ANR	888000	CallExpression	r_cons_println ( core -> dbg -> reg -> reg_profile_cmt )		887825	0					
ANR	888001	Callee	r_cons_println		887825	0					
ANR	888002	Identifier	r_cons_println		887825	0					
ANR	888003	ArgumentList	core -> dbg -> reg -> reg_profile_cmt		887825	1					
ANR	888004	Argument	core -> dbg -> reg -> reg_profile_cmt		887825	0					
ANR	888005	PtrMemberAccess	core -> dbg -> reg -> reg_profile_cmt		887825	0					
ANR	888006	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	888007	PtrMemberAccess	core -> dbg		887825	0					
ANR	888008	Identifier	core		887825	0					
ANR	888009	Identifier	dbg		887825	1					
ANR	888010	Identifier	reg		887825	1					
ANR	888011	Identifier	reg_profile_cmt		887825	1					
ANR	888012	BreakStatement	break ;	2279:2:67256:67261	887825	2	True				
ANR	888013	Label	case '-' :	2280:1:67264:67272	887825	3	True				
ANR	888014	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , '-' , 0 )"	2281:2:67285:67343	887825	4	True				
ANR	888015	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , '-' , 0 )"		887825	0					
ANR	888016	Callee	r_debug_reg_list		887825	0					
ANR	888017	Identifier	r_debug_reg_list		887825	0					
ANR	888018	ArgumentList	core -> dbg		887825	1					
ANR	888019	Argument	core -> dbg		887825	0					
ANR	888020	PtrMemberAccess	core -> dbg		887825	0					
ANR	888021	Identifier	core		887825	0					
ANR	888022	Identifier	dbg		887825	1					
ANR	888023	Argument	R_REG_TYPE_GPR		887825	1					
ANR	888024	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	888025	Argument	bits		887825	2					
ANR	888026	Identifier	bits		887825	0					
ANR	888027	Argument	'-'		887825	3					
ANR	888028	PrimaryExpression	'-'		887825	0					
ANR	888029	Argument	0		887825	4					
ANR	888030	PrimaryExpression	0		887825	0					
ANR	888031	BreakStatement	break ;	2282:2:67347:67352	887825	5	True				
ANR	888032	Label	case '?' :	2283:1:67355:67363	887825	6	True				
ANR	888033	IfStatement	if ( str [ 1 ] )		887825	7					
ANR	888034	Condition	str [ 1 ]	2284:6:67380:67385	887825	0	True				
ANR	888035	ArrayIndexing	str [ 1 ]		887825	0					
ANR	888036	Identifier	str		887825	0					
ANR	888037	PrimaryExpression	1		887825	1					
ANR	888038	CompoundStatement		44:3:1193:1225	887825	1					
ANR	888039	IdentifierDeclStatement	RListIter * iter ;	2285:3:67393:67408	887825	0	True				
ANR	888040	IdentifierDecl	* iter		887825	0					
ANR	888041	IdentifierDeclType	RListIter *		887825	0					
ANR	888042	Identifier	iter		887825	1					
ANR	888043	IdentifierDeclStatement	char * all = ( char * ) r_str_trim_ro ( str + 1 ) ;	2286:3:67413:67456	887825	1	True				
ANR	888044	IdentifierDecl	* all = ( char * ) r_str_trim_ro ( str + 1 )		887825	0					
ANR	888045	IdentifierDeclType	char *		887825	0					
ANR	888046	Identifier	all		887825	1					
ANR	888047	AssignmentExpression	* all = ( char * ) r_str_trim_ro ( str + 1 )		887825	2		=			
ANR	888048	Identifier	all		887825	0					
ANR	888049	CastExpression	( char * ) r_str_trim_ro ( str + 1 )		887825	1					
ANR	888050	CastTarget	char *		887825	0					
ANR	888051	CallExpression	r_str_trim_ro ( str + 1 )		887825	1					
ANR	888052	Callee	r_str_trim_ro		887825	0					
ANR	888053	Identifier	r_str_trim_ro		887825	0					
ANR	888054	ArgumentList	str + 1		887825	1					
ANR	888055	Argument	str + 1		887825	0					
ANR	888056	AdditiveExpression	str + 1		887825	0		+			
ANR	888057	Identifier	str		887825	0					
ANR	888058	PrimaryExpression	1		887825	1					
ANR	888059	IfStatement	"if ( ! strcmp ( all , ""?"" ) )"		887825	2					
ANR	888060	Condition	"! strcmp ( all , ""?"" )"	2287:7:67465:67482	887825	0	True				
ANR	888061	UnaryOperationExpression	"! strcmp ( all , ""?"" )"		887825	0					
ANR	888062	UnaryOperator	!		887825	0					
ANR	888063	CallExpression	"strcmp ( all , ""?"" )"		887825	1					
ANR	888064	Callee	strcmp		887825	0					
ANR	888065	Identifier	strcmp		887825	0					
ANR	888066	ArgumentList	all		887825	1					
ANR	888067	Argument	all		887825	0					
ANR	888068	Identifier	all		887825	0					
ANR	888069	Argument	"""?"""		887825	1					
ANR	888070	PrimaryExpression	"""?"""		887825	0					
ANR	888071	CompoundStatement		35:27:902:902	887825	1					
ANR	888072	ExpressionStatement	"all = r_core_cmd_str ( core , ""drp~=[0]"" )"	2288:4:67501:67540	887825	0	True				
ANR	888073	AssignmentExpression	"all = r_core_cmd_str ( core , ""drp~=[0]"" )"		887825	0		=			
ANR	888074	Identifier	all		887825	0					
ANR	888075	CallExpression	"r_core_cmd_str ( core , ""drp~=[0]"" )"		887825	1					
ANR	888076	Callee	r_core_cmd_str		887825	0					
ANR	888077	Identifier	r_core_cmd_str		887825	0					
ANR	888078	ArgumentList	core		887825	1					
ANR	888079	Argument	core		887825	0					
ANR	888080	Identifier	core		887825	0					
ANR	888081	Argument	"""drp~=[0]"""		887825	1					
ANR	888082	PrimaryExpression	"""drp~=[0]"""		887825	0					
ANR	888083	ExpressionStatement	"all = r_str_replace ( all , ""\\n"" , "" "" , 1 )"	2289:4:67546:67585	887825	1	True				
ANR	888084	AssignmentExpression	"all = r_str_replace ( all , ""\\n"" , "" "" , 1 )"		887825	0		=			
ANR	888085	Identifier	all		887825	0					
ANR	888086	CallExpression	"r_str_replace ( all , ""\\n"" , "" "" , 1 )"		887825	1					
ANR	888087	Callee	r_str_replace		887825	0					
ANR	888088	Identifier	r_str_replace		887825	0					
ANR	888089	ArgumentList	all		887825	1					
ANR	888090	Argument	all		887825	0					
ANR	888091	Identifier	all		887825	0					
ANR	888092	Argument	"""\\n"""		887825	1					
ANR	888093	PrimaryExpression	"""\\n"""		887825	0					
ANR	888094	Argument	""" """		887825	2					
ANR	888095	PrimaryExpression	""" """		887825	0					
ANR	888096	Argument	1		887825	3					
ANR	888097	PrimaryExpression	1		887825	0					
ANR	888098	ElseStatement	else		887825	0					
ANR	888099	CompoundStatement		38:10:1014:1014	887825	0					
ANR	888100	ExpressionStatement	all = strdup ( all )	2291:4:67603:67621	887825	0	True				
ANR	888101	AssignmentExpression	all = strdup ( all )		887825	0		=			
ANR	888102	Identifier	all		887825	0					
ANR	888103	CallExpression	strdup ( all )		887825	1					
ANR	888104	Callee	strdup		887825	0					
ANR	888105	Identifier	strdup		887825	0					
ANR	888106	ArgumentList	all		887825	1					
ANR	888107	Argument	all		887825	0					
ANR	888108	Identifier	all		887825	0					
ANR	888109	IdentifierDeclStatement	char * arg ;	2293:3:67631:67640	887825	3	True				
ANR	888110	IdentifierDecl	* arg		887825	0					
ANR	888111	IdentifierDeclType	char *		887825	0					
ANR	888112	Identifier	arg		887825	1					
ANR	888113	IdentifierDeclStatement	"RList * args = r_str_split_list ( all , "" "" , 0 ) ;"	2294:3:67645:67689	887825	4	True				
ANR	888114	IdentifierDecl	"* args = r_str_split_list ( all , "" "" , 0 )"		887825	0					
ANR	888115	IdentifierDeclType	RList *		887825	0					
ANR	888116	Identifier	args		887825	1					
ANR	888117	AssignmentExpression	"* args = r_str_split_list ( all , "" "" , 0 )"		887825	2		=			
ANR	888118	Identifier	args		887825	0					
ANR	888119	CallExpression	"r_str_split_list ( all , "" "" , 0 )"		887825	1					
ANR	888120	Callee	r_str_split_list		887825	0					
ANR	888121	Identifier	r_str_split_list		887825	0					
ANR	888122	ArgumentList	all		887825	1					
ANR	888123	Argument	all		887825	0					
ANR	888124	Identifier	all		887825	0					
ANR	888125	Argument	""" """		887825	1					
ANR	888126	PrimaryExpression	""" """		887825	0					
ANR	888127	Argument	0		887825	2					
ANR	888128	PrimaryExpression	0		887825	0					
ANR	888129	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"	2295:3:67694:67745	887825	5	True				
ANR	888130	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"		887825	0					
ANR	888131	Callee	r_debug_reg_sync		887825	0					
ANR	888132	Identifier	r_debug_reg_sync		887825	0					
ANR	888133	ArgumentList	core -> dbg		887825	1					
ANR	888134	Argument	core -> dbg		887825	0					
ANR	888135	PtrMemberAccess	core -> dbg		887825	0					
ANR	888136	Identifier	core		887825	0					
ANR	888137	Identifier	dbg		887825	1					
ANR	888138	Argument	R_REG_TYPE_ALL		887825	1					
ANR	888139	Identifier	R_REG_TYPE_ALL		887825	0					
ANR	888140	Argument	false		887825	2					
ANR	888141	Identifier	false		887825	0					
ANR	888142	IdentifierDeclStatement	int count = r_list_length ( args ) ;	2296:3:67776:67808	887825	6	True				
ANR	888143	IdentifierDecl	count = r_list_length ( args )		887825	0					
ANR	888144	IdentifierDeclType	int		887825	0					
ANR	888145	Identifier	count		887825	1					
ANR	888146	AssignmentExpression	count = r_list_length ( args )		887825	2		=			
ANR	888147	Identifier	count		887825	0					
ANR	888148	CallExpression	r_list_length ( args )		887825	1					
ANR	888149	Callee	r_list_length		887825	0					
ANR	888150	Identifier	r_list_length		887825	0					
ANR	888151	ArgumentList	args		887825	1					
ANR	888152	Argument	args		887825	0					
ANR	888153	Identifier	args		887825	0					
ANR	888154	Statement	r_list_foreach	2297:3:67813:67826	887825	7	True				
ANR	888155	Statement	(	2297:18:67828:67828	887825	8	True				
ANR	888156	Statement	args	2297:19:67829:67832	887825	9	True				
ANR	888157	Statement	","	2297:23:67833:67833	887825	10	True				
ANR	888158	Statement	iter	2297:25:67835:67838	887825	11	True				
ANR	888159	Statement	","	2297:29:67839:67839	887825	12	True				
ANR	888160	Statement	arg	2297:31:67841:67843	887825	13	True				
ANR	888161	Statement	)	2297:34:67844:67844	887825	14	True				
ANR	888162	CompoundStatement		46:4:1269:1312	887825	15					
ANR	888163	IdentifierDeclStatement	"ut64 off = r_debug_reg_get ( core -> dbg , arg ) ;"	2298:4:67852:67895	887825	0	True				
ANR	888164	IdentifierDecl	"off = r_debug_reg_get ( core -> dbg , arg )"		887825	0					
ANR	888165	IdentifierDeclType	ut64		887825	0					
ANR	888166	Identifier	off		887825	1					
ANR	888167	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , arg )"		887825	2		=			
ANR	888168	Identifier	off		887825	0					
ANR	888169	CallExpression	"r_debug_reg_get ( core -> dbg , arg )"		887825	1					
ANR	888170	Callee	r_debug_reg_get		887825	0					
ANR	888171	Identifier	r_debug_reg_get		887825	0					
ANR	888172	ArgumentList	core -> dbg		887825	1					
ANR	888173	Argument	core -> dbg		887825	0					
ANR	888174	PtrMemberAccess	core -> dbg		887825	0					
ANR	888175	Identifier	core		887825	0					
ANR	888176	Identifier	dbg		887825	1					
ANR	888177	Argument	arg		887825	1					
ANR	888178	Identifier	arg		887825	0					
ANR	888179	IfStatement	if ( count == 1 )		887825	1					
ANR	888180	Condition	count == 1	2299:8:67905:67914	887825	0	True				
ANR	888181	EqualityExpression	count == 1		887825	0		==			
ANR	888182	Identifier	count		887825	0					
ANR	888183	PrimaryExpression	1		887825	1					
ANR	888184	CompoundStatement		47:20:1334:1334	887825	1					
ANR	888185	Statement	r_cons_printf	2300:5:67924:67936	887825	0	True				
ANR	888186	Statement	(	2300:19:67938:67938	887825	1	True				
ANR	888187	Statement	"""0x%08"""	2300:20:67939:67945	887825	2	True				
ANR	888188	Statement	PFMT64x	2300:27:67946:67952	887825	3	True				
ANR	888189	Statement	"""\\n"""	2300:34:67953:67956	887825	4	True				
ANR	888190	Statement	","	2300:38:67957:67957	887825	5	True				
ANR	888191	Statement	off	2300:40:67959:67961	887825	6	True				
ANR	888192	Statement	)	2300:43:67962:67962	887825	7	True				
ANR	888193	ExpressionStatement		2300:44:67963:67963	887825	8	True				
ANR	888194	ElseStatement	else		887825	0					
ANR	888195	CompoundStatement		51:5:1442:1461	887825	0					
ANR	888196	IdentifierDeclStatement	int type = r_reg_get_name_idx ( arg ) ;	2302:5:67983:68018	887825	0	True				
ANR	888197	IdentifierDecl	type = r_reg_get_name_idx ( arg )		887825	0					
ANR	888198	IdentifierDeclType	int		887825	0					
ANR	888199	Identifier	type		887825	1					
ANR	888200	AssignmentExpression	type = r_reg_get_name_idx ( arg )		887825	2		=			
ANR	888201	Identifier	type		887825	0					
ANR	888202	CallExpression	r_reg_get_name_idx ( arg )		887825	1					
ANR	888203	Callee	r_reg_get_name_idx		887825	0					
ANR	888204	Identifier	r_reg_get_name_idx		887825	0					
ANR	888205	ArgumentList	arg		887825	1					
ANR	888206	Argument	arg		887825	0					
ANR	888207	Identifier	arg		887825	0					
ANR	888208	IdentifierDeclStatement	const char * r = arg ;	2303:5:68025:68044	887825	1	True				
ANR	888209	IdentifierDecl	* r = arg		887825	0					
ANR	888210	IdentifierDeclType	const char *		887825	0					
ANR	888211	Identifier	r		887825	1					
ANR	888212	AssignmentExpression	* r = arg		887825	2		=			
ANR	888213	Identifier	arg		887825	0					
ANR	888214	Identifier	arg		887825	1					
ANR	888215	IfStatement	if ( type != - 1 )		887825	2					
ANR	888216	Condition	type != - 1	2304:9:68055:68064	887825	0	True				
ANR	888217	EqualityExpression	type != - 1		887825	0		!=			
ANR	888218	Identifier	type		887825	0					
ANR	888219	UnaryOperationExpression	- 1		887825	1					
ANR	888220	UnaryOperator	-		887825	0					
ANR	888221	PrimaryExpression	1		887825	1					
ANR	888222	CompoundStatement		52:21:1484:1484	887825	1					
ANR	888223	ExpressionStatement	"r = r_reg_get_name ( core -> dbg -> reg , type )"	2305:6:68075:68116	887825	0	True				
ANR	888224	AssignmentExpression	"r = r_reg_get_name ( core -> dbg -> reg , type )"		887825	0		=			
ANR	888225	Identifier	r		887825	0					
ANR	888226	CallExpression	"r_reg_get_name ( core -> dbg -> reg , type )"		887825	1					
ANR	888227	Callee	r_reg_get_name		887825	0					
ANR	888228	Identifier	r_reg_get_name		887825	0					
ANR	888229	ArgumentList	core -> dbg -> reg		887825	1					
ANR	888230	Argument	core -> dbg -> reg		887825	0					
ANR	888231	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	888232	PtrMemberAccess	core -> dbg		887825	0					
ANR	888233	Identifier	core		887825	0					
ANR	888234	Identifier	dbg		887825	1					
ANR	888235	Identifier	reg		887825	1					
ANR	888236	Argument	type		887825	1					
ANR	888237	Identifier	type		887825	0					
ANR	888238	Statement	r_cons_printf	2307:5:68130:68142	887825	3	True				
ANR	888239	Statement	(	2307:19:68144:68144	887825	4	True				
ANR	888240	Statement	"""%3s %3s 0x%08"""	2307:20:68145:68159	887825	5	True				
ANR	888241	Statement	PFMT64x	2307:35:68160:68166	887825	6	True				
ANR	888242	Statement	"""\\n"""	2307:42:68167:68170	887825	7	True				
ANR	888243	Statement	","	2307:46:68171:68171	887825	8	True				
ANR	888244	Statement	arg	2307:48:68173:68175	887825	9	True				
ANR	888245	Statement	","	2307:51:68176:68176	887825	10	True				
ANR	888246	Statement	r	2307:53:68178:68178	887825	11	True				
ANR	888247	Statement	","	2307:54:68179:68179	887825	12	True				
ANR	888248	Statement	off	2307:56:68181:68183	887825	13	True				
ANR	888249	Statement	)	2307:59:68184:68184	887825	14	True				
ANR	888250	ExpressionStatement		2307:60:68185:68185	887825	15	True				
ANR	888251	ExpressionStatement	core -> num -> value = off	2309:4:68197:68219	887825	2	True				
ANR	888252	AssignmentExpression	core -> num -> value = off		887825	0		=			
ANR	888253	PtrMemberAccess	core -> num -> value		887825	0					
ANR	888254	PtrMemberAccess	core -> num		887825	0					
ANR	888255	Identifier	core		887825	0					
ANR	888256	Identifier	num		887825	1					
ANR	888257	Identifier	value		887825	1					
ANR	888258	Identifier	off		887825	1					
ANR	888259	ExpressionStatement	free ( all )	2311:3:68229:68239	887825	16	True				
ANR	888260	CallExpression	free ( all )		887825	0					
ANR	888261	Callee	free		887825	0					
ANR	888262	Identifier	free		887825	0					
ANR	888263	ArgumentList	all		887825	1					
ANR	888264	Argument	all		887825	0					
ANR	888265	Identifier	all		887825	0					
ANR	888266	ExpressionStatement	r_list_free ( args )	2312:3:68244:68262	887825	17	True				
ANR	888267	CallExpression	r_list_free ( args )		887825	0					
ANR	888268	Callee	r_list_free		887825	0					
ANR	888269	Identifier	r_list_free		887825	0					
ANR	888270	ArgumentList	args		887825	1					
ANR	888271	Argument	args		887825	0					
ANR	888272	Identifier	args		887825	0					
ANR	888273	ElseStatement	else		887825	0					
ANR	888274	CompoundStatement		61:9:1690:1690	887825	0					
ANR	888275	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dr )"	2314:3:68278:68313	887825	0	True				
ANR	888276	CallExpression	"r_core_cmd_help ( core , help_msg_dr )"		887825	0					
ANR	888277	Callee	r_core_cmd_help		887825	0					
ANR	888278	Identifier	r_core_cmd_help		887825	0					
ANR	888279	ArgumentList	core		887825	1					
ANR	888280	Argument	core		887825	0					
ANR	888281	Identifier	core		887825	0					
ANR	888282	Argument	help_msg_dr		887825	1					
ANR	888283	Identifier	help_msg_dr		887825	0					
ANR	888284	BreakStatement	break ;	2316:2:68321:68326	887825	8	True				
ANR	888285	Label	case 'l' :	2317:1:68329:68337	887825	9	True				
ANR	888286	CompoundStatement		67:3:1775:1796	887825	10					
ANR	888287	IdentifierDeclStatement	bool json_out = false ;	2319:3:68358:68379	887825	0	True				
ANR	888288	IdentifierDecl	json_out = false		887825	0					
ANR	888289	IdentifierDeclType	bool		887825	0					
ANR	888290	Identifier	json_out		887825	1					
ANR	888291	AssignmentExpression	json_out = false		887825	2		=			
ANR	888292	Identifier	false		887825	0					
ANR	888293	Identifier	false		887825	1					
ANR	888294	SwitchStatement	switch ( str [ 1 ] )		887825	1					
ANR	888295	Condition	str [ 1 ]	2320:11:68392:68397	887825	0	True				
ANR	888296	ArrayIndexing	str [ 1 ]		887825	0					
ANR	888297	Identifier	str		887825	0					
ANR	888298	PrimaryExpression	1		887825	1					
ANR	888299	CompoundStatement		68:19:1817:1817	887825	1					
ANR	888300	Label	case 'j' :	2321:3:68405:68413	887825	0	True				
ANR	888301	ExpressionStatement	json_out = true	2322:4:68419:68434	887825	1	True				
ANR	888302	AssignmentExpression	json_out = true		887825	0		=			
ANR	888303	Identifier	json_out		887825	0					
ANR	888304	Identifier	true		887825	1					
ANR	888305	Label	case 0 :	2324:3:68459:68465	887825	2	True				
ANR	888306	CompoundStatement		74:5:1895:1958	887825	3					
ANR	888307	IdentifierDeclStatement	"RRegSet * rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR ) ;"	2326:5:68478:68541	887825	0	True				
ANR	888308	IdentifierDecl	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		887825	0					
ANR	888309	IdentifierDeclType	RRegSet *		887825	0					
ANR	888310	Identifier	rs		887825	1					
ANR	888311	AssignmentExpression	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		887825	2		=			
ANR	888312	Identifier	rs		887825	0					
ANR	888313	CallExpression	"r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		887825	1					
ANR	888314	Callee	r_reg_regset_get		887825	0					
ANR	888315	Identifier	r_reg_regset_get		887825	0					
ANR	888316	ArgumentList	core -> dbg -> reg		887825	1					
ANR	888317	Argument	core -> dbg -> reg		887825	0					
ANR	888318	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	888319	PtrMemberAccess	core -> dbg		887825	0					
ANR	888320	Identifier	core		887825	0					
ANR	888321	Identifier	dbg		887825	1					
ANR	888322	Identifier	reg		887825	1					
ANR	888323	Argument	R_REG_TYPE_GPR		887825	1					
ANR	888324	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	888325	IfStatement	if ( rs )		887825	1					
ANR	888326	Condition	rs	2327:9:68552:68553	887825	0	True				
ANR	888327	Identifier	rs		887825	0					
ANR	888328	CompoundStatement		77:6:2000:2015	887825	1					
ANR	888329	IdentifierDeclStatement	RRegItem * r ;	2328:6:68564:68575	887825	0	True				
ANR	888330	IdentifierDecl	* r		887825	0					
ANR	888331	IdentifierDeclType	RRegItem *		887825	0					
ANR	888332	Identifier	r		887825	1					
ANR	888333	IdentifierDeclStatement	RListIter * iter ;	2329:6:68583:68598	887825	1	True				
ANR	888334	IdentifierDecl	* iter		887825	0					
ANR	888335	IdentifierDeclType	RListIter *		887825	0					
ANR	888336	Identifier	iter		887825	1					
ANR	888337	ExpressionStatement	i = 0	2330:6:68606:68611	887825	2	True				
ANR	888338	AssignmentExpression	i = 0		887825	0		=			
ANR	888339	Identifier	i		887825	0					
ANR	888340	PrimaryExpression	0		887825	1					
ANR	888341	IfStatement	if ( json_out )		887825	3					
ANR	888342	Condition	json_out	2331:10:68623:68630	887825	0	True				
ANR	888343	Identifier	json_out		887825	0					
ANR	888344	CompoundStatement		79:20:2050:2050	887825	1					
ANR	888345	ExpressionStatement	"r_cons_printf ( ""["" )"	2332:7:68642:68661	887825	0	True				
ANR	888346	CallExpression	"r_cons_printf ( ""["" )"		887825	0					
ANR	888347	Callee	r_cons_printf		887825	0					
ANR	888348	Identifier	r_cons_printf		887825	0					
ANR	888349	ArgumentList	"""["""		887825	1					
ANR	888350	Argument	"""["""		887825	0					
ANR	888351	PrimaryExpression	"""["""		887825	0					
ANR	888352	Statement	r_list_foreach	2334:6:68677:68690	887825	4	True				
ANR	888353	Statement	(	2334:21:68692:68692	887825	5	True				
ANR	888354	Statement	rs	2334:22:68693:68694	887825	6	True				
ANR	888355	Statement	->	2334:24:68695:68696	887825	7	True				
ANR	888356	Statement	regs	2334:26:68697:68700	887825	8	True				
ANR	888357	Statement	","	2334:30:68701:68701	887825	9	True				
ANR	888358	Statement	iter	2334:32:68703:68706	887825	10	True				
ANR	888359	Statement	","	2334:36:68707:68707	887825	11	True				
ANR	888360	Statement	r	2334:38:68709:68709	887825	12	True				
ANR	888361	Statement	)	2334:39:68710:68710	887825	13	True				
ANR	888362	CompoundStatement		82:41:2129:2129	887825	14					
ANR	888363	IfStatement	if ( json_out )		887825	0					
ANR	888364	Condition	json_out	2335:11:68725:68732	887825	0	True				
ANR	888365	Identifier	json_out		887825	0					
ANR	888366	CompoundStatement		83:21:2152:2152	887825	1					
ANR	888367	ExpressionStatement	"r_cons_printf ( ""%s\\""%s\\"""" , ( i ? "","" : """" ) , r -> name )"	2336:8:68745:68814	887825	0	True				
ANR	888368	CallExpression	"r_cons_printf ( ""%s\\""%s\\"""" , ( i ? "","" : """" ) , r -> name )"		887825	0					
ANR	888369	Callee	r_cons_printf		887825	0					
ANR	888370	Identifier	r_cons_printf		887825	0					
ANR	888371	ArgumentList	"""%s\\""%s\\"""""		887825	1					
ANR	888372	Argument	"""%s\\""%s\\"""""		887825	0					
ANR	888373	PrimaryExpression	"""%s\\""%s\\"""""		887825	0					
ANR	888374	Argument	"i ? "","" : """""		887825	1					
ANR	888375	ConditionalExpression	"i ? "","" : """""		887825	0					
ANR	888376	Condition	i		887825	0					
ANR	888377	Identifier	i		887825	0					
ANR	888378	PrimaryExpression	""","""		887825	1					
ANR	888379	PrimaryExpression	""""""		887825	2					
ANR	888380	Argument	r -> name		887825	2					
ANR	888381	PtrMemberAccess	r -> name		887825	0					
ANR	888382	Identifier	r		887825	0					
ANR	888383	Identifier	name		887825	1					
ANR	888384	ExpressionStatement	i ++	2339:8:68824:68827	887825	1	True				
ANR	888385	PostIncDecOperationExpression	i ++		887825	0					
ANR	888386	Identifier	i		887825	0					
ANR	888387	IncDec	++		887825	1					
ANR	888388	ElseStatement	else		887825	0					
ANR	888389	CompoundStatement		88:14:2260:2260	887825	0					
ANR	888390	ExpressionStatement	r_cons_println ( r -> name )	2341:8:68853:68877	887825	0	True				
ANR	888391	CallExpression	r_cons_println ( r -> name )		887825	0					
ANR	888392	Callee	r_cons_println		887825	0					
ANR	888393	Identifier	r_cons_println		887825	0					
ANR	888394	ArgumentList	r -> name		887825	1					
ANR	888395	Argument	r -> name		887825	0					
ANR	888396	PtrMemberAccess	r -> name		887825	0					
ANR	888397	Identifier	r		887825	0					
ANR	888398	Identifier	name		887825	1					
ANR	888399	IfStatement	if ( json_out )		887825	15					
ANR	888400	Condition	json_out	2344:10:68906:68913	887825	0	True				
ANR	888401	Identifier	json_out		887825	0					
ANR	888402	CompoundStatement		92:20:2333:2333	887825	1					
ANR	888403	ExpressionStatement	"r_cons_printf ( ""]"" )"	2345:7:68925:68944	887825	0	True				
ANR	888404	CallExpression	"r_cons_printf ( ""]"" )"		887825	0					
ANR	888405	Callee	r_cons_printf		887825	0					
ANR	888406	Identifier	r_cons_printf		887825	0					
ANR	888407	ArgumentList	"""]"""		887825	1					
ANR	888408	Argument	"""]"""		887825	0					
ANR	888409	PrimaryExpression	"""]"""		887825	0					
ANR	888410	BreakStatement	break ;	2348:5:68966:68971	887825	2	True				
ANR	888411	BreakStatement	break ;	2352:2:68990:68995	887825	11	True				
ANR	888412	Label	case '8' :	2353:1:68998:69006	887825	12	True				
ANR	888413	Label	case 'b' :	2354:1:69018:69026	887825	13	True				
ANR	888414	CompoundStatement		116:3:2752:2807	887825	14					
ANR	888415	IdentifierDeclStatement	"int len , type = R_REG_TYPE_GPR ;"	2356:3:69044:69074	887825	0	True				
ANR	888416	IdentifierDecl	len		887825	0					
ANR	888417	IdentifierDeclType	int		887825	0					
ANR	888418	Identifier	len		887825	1					
ANR	888419	IdentifierDecl	type = R_REG_TYPE_GPR		887825	1					
ANR	888420	IdentifierDeclType	int		887825	0					
ANR	888421	Identifier	type		887825	1					
ANR	888422	AssignmentExpression	type = R_REG_TYPE_GPR		887825	2		=			
ANR	888423	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	888424	Identifier	R_REG_TYPE_GPR		887825	1					
ANR	888425	ExpressionStatement	"arg = strchr ( str , ' ' )"	2357:3:69079:69102	887825	1	True				
ANR	888426	AssignmentExpression	"arg = strchr ( str , ' ' )"		887825	0		=			
ANR	888427	Identifier	arg		887825	0					
ANR	888428	CallExpression	"strchr ( str , ' ' )"		887825	1					
ANR	888429	Callee	strchr		887825	0					
ANR	888430	Identifier	strchr		887825	0					
ANR	888431	ArgumentList	str		887825	1					
ANR	888432	Argument	str		887825	0					
ANR	888433	Identifier	str		887825	0					
ANR	888434	Argument	' '		887825	1					
ANR	888435	PrimaryExpression	' '		887825	0					
ANR	888436	IfStatement	if ( arg )		887825	2					
ANR	888437	Condition	arg	2358:7:69111:69113	887825	0	True				
ANR	888438	Identifier	arg		887825	0					
ANR	888439	CompoundStatement		107:4:2539:2578	887825	1					
ANR	888440	IdentifierDeclStatement	char * string = r_str_trim_dup ( arg + 1 ) ;	2359:4:69122:69161	887825	0	True				
ANR	888441	IdentifierDecl	* string = r_str_trim_dup ( arg + 1 )		887825	0					
ANR	888442	IdentifierDeclType	char *		887825	0					
ANR	888443	Identifier	string		887825	1					
ANR	888444	AssignmentExpression	* string = r_str_trim_dup ( arg + 1 )		887825	2		=			
ANR	888445	Identifier	string		887825	0					
ANR	888446	CallExpression	r_str_trim_dup ( arg + 1 )		887825	1					
ANR	888447	Callee	r_str_trim_dup		887825	0					
ANR	888448	Identifier	r_str_trim_dup		887825	0					
ANR	888449	ArgumentList	arg + 1		887825	1					
ANR	888450	Argument	arg + 1		887825	0					
ANR	888451	AdditiveExpression	arg + 1		887825	0		+			
ANR	888452	Identifier	arg		887825	0					
ANR	888453	PrimaryExpression	1		887825	1					
ANR	888454	IfStatement	if ( string )		887825	1					
ANR	888455	Condition	string	2360:8:69171:69176	887825	0	True				
ANR	888456	Identifier	string		887825	0					
ANR	888457	CompoundStatement		108:16:2596:2596	887825	1					
ANR	888458	ExpressionStatement	type = r_reg_type_by_name ( string )	2361:5:69186:69220	887825	0	True				
ANR	888459	AssignmentExpression	type = r_reg_type_by_name ( string )		887825	0		=			
ANR	888460	Identifier	type		887825	0					
ANR	888461	CallExpression	r_reg_type_by_name ( string )		887825	1					
ANR	888462	Callee	r_reg_type_by_name		887825	0					
ANR	888463	Identifier	r_reg_type_by_name		887825	0					
ANR	888464	ArgumentList	string		887825	1					
ANR	888465	Argument	string		887825	0					
ANR	888466	Identifier	string		887825	0					
ANR	888467	IfStatement	if ( type == - 1 && string [ 0 ] != 'a' )		887825	1					
ANR	888468	Condition	type == - 1 && string [ 0 ] != 'a'	2362:9:69231:69260	887825	0	True				
ANR	888469	AndExpression	type == - 1 && string [ 0 ] != 'a'		887825	0		&&			
ANR	888470	EqualityExpression	type == - 1		887825	0		==			
ANR	888471	Identifier	type		887825	0					
ANR	888472	UnaryOperationExpression	- 1		887825	1					
ANR	888473	UnaryOperator	-		887825	0					
ANR	888474	PrimaryExpression	1		887825	1					
ANR	888475	EqualityExpression	string [ 0 ] != 'a'		887825	1		!=			
ANR	888476	ArrayIndexing	string [ 0 ]		887825	0					
ANR	888477	Identifier	string		887825	0					
ANR	888478	PrimaryExpression	0		887825	1					
ANR	888479	PrimaryExpression	'a'		887825	1					
ANR	888480	CompoundStatement		110:41:2680:2680	887825	1					
ANR	888481	ExpressionStatement	type = R_REG_TYPE_GPR	2363:6:69271:69292	887825	0	True				
ANR	888482	AssignmentExpression	type = R_REG_TYPE_GPR		887825	0		=			
ANR	888483	Identifier	type		887825	0					
ANR	888484	Identifier	R_REG_TYPE_GPR		887825	1					
ANR	888485	ExpressionStatement	free ( string )	2365:5:69306:69319	887825	2	True				
ANR	888486	CallExpression	free ( string )		887825	0					
ANR	888487	Callee	free		887825	0					
ANR	888488	Identifier	free		887825	0					
ANR	888489	ArgumentList	string		887825	1					
ANR	888490	Argument	string		887825	0					
ANR	888491	Identifier	string		887825	0					
ANR	888492	IdentifierDeclStatement	"ut8 * buf = r_reg_get_bytes ( core -> dbg -> reg , type , & len ) ;"	2368:3:69335:69390	887825	3	True				
ANR	888493	IdentifierDecl	"* buf = r_reg_get_bytes ( core -> dbg -> reg , type , & len )"		887825	0					
ANR	888494	IdentifierDeclType	ut8 *		887825	0					
ANR	888495	Identifier	buf		887825	1					
ANR	888496	AssignmentExpression	"* buf = r_reg_get_bytes ( core -> dbg -> reg , type , & len )"		887825	2		=			
ANR	888497	Identifier	buf		887825	0					
ANR	888498	CallExpression	"r_reg_get_bytes ( core -> dbg -> reg , type , & len )"		887825	1					
ANR	888499	Callee	r_reg_get_bytes		887825	0					
ANR	888500	Identifier	r_reg_get_bytes		887825	0					
ANR	888501	ArgumentList	core -> dbg -> reg		887825	1					
ANR	888502	Argument	core -> dbg -> reg		887825	0					
ANR	888503	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	888504	PtrMemberAccess	core -> dbg		887825	0					
ANR	888505	Identifier	core		887825	0					
ANR	888506	Identifier	dbg		887825	1					
ANR	888507	Identifier	reg		887825	1					
ANR	888508	Argument	type		887825	1					
ANR	888509	Identifier	type		887825	0					
ANR	888510	Argument	& len		887825	2					
ANR	888511	UnaryOperationExpression	& len		887825	0					
ANR	888512	UnaryOperator	&		887825	0					
ANR	888513	Identifier	len		887825	1					
ANR	888514	IfStatement	if ( str [ 0 ] == '8' )		887825	4					
ANR	888515	Condition	str [ 0 ] == '8'	2369:7:69399:69411	887825	0	True				
ANR	888516	EqualityExpression	str [ 0 ] == '8'		887825	0		==			
ANR	888517	ArrayIndexing	str [ 0 ]		887825	0					
ANR	888518	Identifier	str		887825	0					
ANR	888519	PrimaryExpression	0		887825	1					
ANR	888520	PrimaryExpression	'8'		887825	1					
ANR	888521	CompoundStatement		117:22:2831:2831	887825	1					
ANR	888522	ExpressionStatement	"r_print_bytes ( core -> print , buf , len , ""%02x"" )"	2370:4:69420:69465	887825	0	True				
ANR	888523	CallExpression	"r_print_bytes ( core -> print , buf , len , ""%02x"" )"		887825	0					
ANR	888524	Callee	r_print_bytes		887825	0					
ANR	888525	Identifier	r_print_bytes		887825	0					
ANR	888526	ArgumentList	core -> print		887825	1					
ANR	888527	Argument	core -> print		887825	0					
ANR	888528	PtrMemberAccess	core -> print		887825	0					
ANR	888529	Identifier	core		887825	0					
ANR	888530	Identifier	print		887825	1					
ANR	888531	Argument	buf		887825	1					
ANR	888532	Identifier	buf		887825	0					
ANR	888533	Argument	len		887825	2					
ANR	888534	Identifier	len		887825	0					
ANR	888535	Argument	"""%02x"""		887825	3					
ANR	888536	PrimaryExpression	"""%02x"""		887825	0					
ANR	888537	ElseStatement	else		887825	0					
ANR	888538	CompoundStatement		119:10:2894:2894	887825	0					
ANR	888539	SwitchStatement	switch ( str [ 1 ] )		887825	0					
ANR	888540	Condition	str [ 1 ]	2372:12:69491:69496	887825	0	True				
ANR	888541	ArrayIndexing	str [ 1 ]		887825	0					
ANR	888542	Identifier	str		887825	0					
ANR	888543	PrimaryExpression	1		887825	1					
ANR	888544	CompoundStatement		120:20:2916:2916	887825	1					
ANR	888545	Label	case '1' :	2373:4:69505:69513	887825	0	True				
ANR	888546	Statement	r_print_hexdump	2374:5:69520:69534	887825	1	True				
ANR	888547	Statement	(	2374:21:69536:69536	887825	2	True				
ANR	888548	Statement	core	2374:22:69537:69540	887825	3	True				
ANR	888549	Statement	->	2374:26:69541:69542	887825	4	True				
ANR	888550	Statement	print	2374:28:69543:69547	887825	5	True				
ANR	888551	Statement	","	2374:33:69548:69548	887825	6	True				
ANR	888552	Statement	0l	2374:35:69550:69551	887825	7	True				
ANR	888553	Statement	l	2374:37:69552:69552	887825	8	True				
ANR	888554	Statement	","	2374:38:69553:69553	887825	9	True				
ANR	888555	Statement	buf	2374:40:69555:69557	887825	10	True				
ANR	888556	Statement	","	2374:43:69558:69558	887825	11	True				
ANR	888557	Statement	len	2374:45:69560:69562	887825	12	True				
ANR	888558	Statement	","	2374:48:69563:69563	887825	13	True				
ANR	888559	Statement	8	2374:50:69565:69565	887825	14	True				
ANR	888560	Statement	","	2374:51:69566:69566	887825	15	True				
ANR	888561	Statement	1	2374:53:69568:69568	887825	16	True				
ANR	888562	Statement	","	2374:54:69569:69569	887825	17	True				
ANR	888563	Statement	1	2374:56:69571:69571	887825	18	True				
ANR	888564	Statement	)	2374:57:69572:69572	887825	19	True				
ANR	888565	ExpressionStatement		2374:58:69573:69573	887825	20	True				
ANR	888566	BreakStatement	break ;	2375:5:69580:69585	887825	21	True				
ANR	888567	Label	case '2' :	2376:4:69591:69599	887825	22	True				
ANR	888568	Statement	r_print_hexdump	2377:5:69606:69620	887825	23	True				
ANR	888569	Statement	(	2377:21:69622:69622	887825	24	True				
ANR	888570	Statement	core	2377:22:69623:69626	887825	25	True				
ANR	888571	Statement	->	2377:26:69627:69628	887825	26	True				
ANR	888572	Statement	print	2377:28:69629:69633	887825	27	True				
ANR	888573	Statement	","	2377:33:69634:69634	887825	28	True				
ANR	888574	Statement	0l	2377:35:69636:69637	887825	29	True				
ANR	888575	Statement	l	2377:37:69638:69638	887825	30	True				
ANR	888576	Statement	","	2377:38:69639:69639	887825	31	True				
ANR	888577	Statement	buf	2377:40:69641:69643	887825	32	True				
ANR	888578	Statement	","	2377:43:69644:69644	887825	33	True				
ANR	888579	Statement	len	2377:45:69646:69648	887825	34	True				
ANR	888580	Statement	","	2377:48:69649:69649	887825	35	True				
ANR	888581	Statement	16	2377:50:69651:69652	887825	36	True				
ANR	888582	Statement	","	2377:52:69653:69653	887825	37	True				
ANR	888583	Statement	2	2377:54:69655:69655	887825	38	True				
ANR	888584	Statement	","	2377:55:69656:69656	887825	39	True				
ANR	888585	Statement	1	2377:57:69658:69658	887825	40	True				
ANR	888586	Statement	)	2377:58:69659:69659	887825	41	True				
ANR	888587	ExpressionStatement		2377:59:69660:69660	887825	42	True				
ANR	888588	BreakStatement	break ;	2378:5:69667:69672	887825	43	True				
ANR	888589	Label	case '4' :	2379:4:69678:69686	887825	44	True				
ANR	888590	Statement	r_print_hexdump	2380:5:69693:69707	887825	45	True				
ANR	888591	Statement	(	2380:21:69709:69709	887825	46	True				
ANR	888592	Statement	core	2380:22:69710:69713	887825	47	True				
ANR	888593	Statement	->	2380:26:69714:69715	887825	48	True				
ANR	888594	Statement	print	2380:28:69716:69720	887825	49	True				
ANR	888595	Statement	","	2380:33:69721:69721	887825	50	True				
ANR	888596	Statement	0l	2380:35:69723:69724	887825	51	True				
ANR	888597	Statement	l	2380:37:69725:69725	887825	52	True				
ANR	888598	Statement	","	2380:38:69726:69726	887825	53	True				
ANR	888599	Statement	buf	2380:40:69728:69730	887825	54	True				
ANR	888600	Statement	","	2380:43:69731:69731	887825	55	True				
ANR	888601	Statement	len	2380:45:69733:69735	887825	56	True				
ANR	888602	Statement	","	2380:48:69736:69736	887825	57	True				
ANR	888603	Statement	32	2380:50:69738:69739	887825	58	True				
ANR	888604	Statement	","	2380:52:69740:69740	887825	59	True				
ANR	888605	Statement	4	2380:54:69742:69742	887825	60	True				
ANR	888606	Statement	","	2380:55:69743:69743	887825	61	True				
ANR	888607	Statement	1	2380:57:69745:69745	887825	62	True				
ANR	888608	Statement	)	2380:58:69746:69746	887825	63	True				
ANR	888609	ExpressionStatement		2380:59:69747:69747	887825	64	True				
ANR	888610	BreakStatement	break ;	2381:5:69754:69759	887825	65	True				
ANR	888611	Label	case '8' :	2382:4:69765:69773	887825	66	True				
ANR	888612	Statement	r_print_hexdump	2383:5:69780:69794	887825	67	True				
ANR	888613	Statement	(	2383:21:69796:69796	887825	68	True				
ANR	888614	Statement	core	2383:22:69797:69800	887825	69	True				
ANR	888615	Statement	->	2383:26:69801:69802	887825	70	True				
ANR	888616	Statement	print	2383:28:69803:69807	887825	71	True				
ANR	888617	Statement	","	2383:33:69808:69808	887825	72	True				
ANR	888618	Statement	0l	2383:35:69810:69811	887825	73	True				
ANR	888619	Statement	l	2383:37:69812:69812	887825	74	True				
ANR	888620	Statement	","	2383:38:69813:69813	887825	75	True				
ANR	888621	Statement	buf	2383:40:69815:69817	887825	76	True				
ANR	888622	Statement	","	2383:43:69818:69818	887825	77	True				
ANR	888623	Statement	len	2383:45:69820:69822	887825	78	True				
ANR	888624	Statement	","	2383:48:69823:69823	887825	79	True				
ANR	888625	Statement	64	2383:50:69825:69826	887825	80	True				
ANR	888626	Statement	","	2383:52:69827:69827	887825	81	True				
ANR	888627	Statement	8	2383:54:69829:69829	887825	82	True				
ANR	888628	Statement	","	2383:55:69830:69830	887825	83	True				
ANR	888629	Statement	1	2383:57:69832:69832	887825	84	True				
ANR	888630	Statement	)	2383:58:69833:69833	887825	85	True				
ANR	888631	ExpressionStatement		2383:59:69834:69834	887825	86	True				
ANR	888632	BreakStatement	break ;	2384:5:69841:69846	887825	87	True				
ANR	888633	Label	default :	2385:4:69852:69859	887825	88	True				
ANR	888634	Identifier	default		887825	0					
ANR	888635	IfStatement	if ( core -> assembler -> bits == 64 )		887825	89					
ANR	888636	Condition	core -> assembler -> bits == 64	2386:9:69870:69896	887825	0	True				
ANR	888637	EqualityExpression	core -> assembler -> bits == 64		887825	0		==			
ANR	888638	PtrMemberAccess	core -> assembler -> bits		887825	0					
ANR	888639	PtrMemberAccess	core -> assembler		887825	0					
ANR	888640	Identifier	core		887825	0					
ANR	888641	Identifier	assembler		887825	1					
ANR	888642	Identifier	bits		887825	1					
ANR	888643	PrimaryExpression	64		887825	1					
ANR	888644	CompoundStatement		134:38:3316:3316	887825	1					
ANR	888645	Statement	r_print_hexdump	2387:6:69907:69921	887825	0	True				
ANR	888646	Statement	(	2387:22:69923:69923	887825	1	True				
ANR	888647	Statement	core	2387:23:69924:69927	887825	2	True				
ANR	888648	Statement	->	2387:27:69928:69929	887825	3	True				
ANR	888649	Statement	print	2387:29:69930:69934	887825	4	True				
ANR	888650	Statement	","	2387:34:69935:69935	887825	5	True				
ANR	888651	Statement	0l	2387:36:69937:69938	887825	6	True				
ANR	888652	Statement	l	2387:38:69939:69939	887825	7	True				
ANR	888653	Statement	","	2387:39:69940:69940	887825	8	True				
ANR	888654	Statement	buf	2387:41:69942:69944	887825	9	True				
ANR	888655	Statement	","	2387:44:69945:69945	887825	10	True				
ANR	888656	Statement	len	2387:46:69947:69949	887825	11	True				
ANR	888657	Statement	","	2387:49:69950:69950	887825	12	True				
ANR	888658	Statement	64	2387:51:69952:69953	887825	13	True				
ANR	888659	Statement	","	2387:53:69954:69954	887825	14	True				
ANR	888660	Statement	8	2387:55:69956:69956	887825	15	True				
ANR	888661	Statement	","	2387:56:69957:69957	887825	16	True				
ANR	888662	Statement	1	2387:58:69959:69959	887825	17	True				
ANR	888663	Statement	)	2387:59:69960:69960	887825	18	True				
ANR	888664	ExpressionStatement		2387:60:69961:69961	887825	19	True				
ANR	888665	ElseStatement	else		887825	0					
ANR	888666	CompoundStatement		136:12:3392:3392	887825	0					
ANR	888667	Statement	r_print_hexdump	2389:6:69983:69997	887825	0	True				
ANR	888668	Statement	(	2389:22:69999:69999	887825	1	True				
ANR	888669	Statement	core	2389:23:70000:70003	887825	2	True				
ANR	888670	Statement	->	2389:27:70004:70005	887825	3	True				
ANR	888671	Statement	print	2389:29:70006:70010	887825	4	True				
ANR	888672	Statement	","	2389:34:70011:70011	887825	5	True				
ANR	888673	Statement	0l	2389:36:70013:70014	887825	6	True				
ANR	888674	Statement	l	2389:38:70015:70015	887825	7	True				
ANR	888675	Statement	","	2389:39:70016:70016	887825	8	True				
ANR	888676	Statement	buf	2389:41:70018:70020	887825	9	True				
ANR	888677	Statement	","	2389:44:70021:70021	887825	10	True				
ANR	888678	Statement	len	2389:46:70023:70025	887825	11	True				
ANR	888679	Statement	","	2389:49:70026:70026	887825	12	True				
ANR	888680	Statement	32	2389:51:70028:70029	887825	13	True				
ANR	888681	Statement	","	2389:53:70030:70030	887825	14	True				
ANR	888682	Statement	4	2389:55:70032:70032	887825	15	True				
ANR	888683	Statement	","	2389:56:70033:70033	887825	16	True				
ANR	888684	Statement	1	2389:58:70035:70035	887825	17	True				
ANR	888685	Statement	)	2389:59:70036:70036	887825	18	True				
ANR	888686	ExpressionStatement		2389:60:70037:70037	887825	19	True				
ANR	888687	BreakStatement	break ;	2391:5:70051:70056	887825	90	True				
ANR	888688	ExpressionStatement	free ( buf )	2394:3:70072:70082	887825	5	True				
ANR	888689	CallExpression	free ( buf )		887825	0					
ANR	888690	Callee	free		887825	0					
ANR	888691	Identifier	free		887825	0					
ANR	888692	ArgumentList	buf		887825	1					
ANR	888693	Argument	buf		887825	0					
ANR	888694	Identifier	buf		887825	0					
ANR	888695	BreakStatement	break ;	2396:2:70090:70095	887825	15	True				
ANR	888696	Label	case 'c' :	2397:1:70098:70106	887825	16	True				
ANR	888697	IfStatement	if ( str [ 1 ] == '=' )		887825	17					
ANR	888698	Condition	str [ 1 ] == '='	2399:6:70164:70176	887825	0	True				
ANR	888699	EqualityExpression	str [ 1 ] == '='		887825	0		==			
ANR	888700	ArrayIndexing	str [ 1 ]		887825	0					
ANR	888701	Identifier	str		887825	0					
ANR	888702	PrimaryExpression	1		887825	1					
ANR	888703	PrimaryExpression	'='		887825	1					
ANR	888704	CompoundStatement		148:3:3601:3659	887825	1					
ANR	888705	IdentifierDeclStatement	"RRegFlags * rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL ) ;"	2400:3:70184:70242	887825	0	True				
ANR	888706	IdentifierDecl	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		887825	0					
ANR	888707	IdentifierDeclType	RRegFlags *		887825	0					
ANR	888708	Identifier	rf		887825	1					
ANR	888709	AssignmentExpression	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		887825	2		=			
ANR	888710	Identifier	rf		887825	0					
ANR	888711	CallExpression	"r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		887825	1					
ANR	888712	Callee	r_reg_cond_retrieve		887825	0					
ANR	888713	Identifier	r_reg_cond_retrieve		887825	0					
ANR	888714	ArgumentList	core -> dbg -> reg		887825	1					
ANR	888715	Argument	core -> dbg -> reg		887825	0					
ANR	888716	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	888717	PtrMemberAccess	core -> dbg		887825	0					
ANR	888718	Identifier	core		887825	0					
ANR	888719	Identifier	dbg		887825	1					
ANR	888720	Identifier	reg		887825	1					
ANR	888721	Argument	NULL		887825	1					
ANR	888722	Identifier	NULL		887825	0					
ANR	888723	IfStatement	if ( rf )		887825	1					
ANR	888724	Condition	rf	2401:7:70251:70252	887825	0	True				
ANR	888725	Identifier	rf		887825	0					
ANR	888726	CompoundStatement		149:11:3672:3672	887825	1					
ANR	888727	ExpressionStatement	"r_cons_printf ( ""s:%d z:%d c:%d o:%d p:%d\\n"" , rf -> s , rf -> z , rf -> c , rf -> o , rf -> p )"	2402:4:70261:70346	887825	0	True				
ANR	888728	CallExpression	"r_cons_printf ( ""s:%d z:%d c:%d o:%d p:%d\\n"" , rf -> s , rf -> z , rf -> c , rf -> o , rf -> p )"		887825	0					
ANR	888729	Callee	r_cons_printf		887825	0					
ANR	888730	Identifier	r_cons_printf		887825	0					
ANR	888731	ArgumentList	"""s:%d z:%d c:%d o:%d p:%d\\n"""		887825	1					
ANR	888732	Argument	"""s:%d z:%d c:%d o:%d p:%d\\n"""		887825	0					
ANR	888733	PrimaryExpression	"""s:%d z:%d c:%d o:%d p:%d\\n"""		887825	0					
ANR	888734	Argument	rf -> s		887825	1					
ANR	888735	PtrMemberAccess	rf -> s		887825	0					
ANR	888736	Identifier	rf		887825	0					
ANR	888737	Identifier	s		887825	1					
ANR	888738	Argument	rf -> z		887825	2					
ANR	888739	PtrMemberAccess	rf -> z		887825	0					
ANR	888740	Identifier	rf		887825	0					
ANR	888741	Identifier	z		887825	1					
ANR	888742	Argument	rf -> c		887825	3					
ANR	888743	PtrMemberAccess	rf -> c		887825	0					
ANR	888744	Identifier	rf		887825	0					
ANR	888745	Identifier	c		887825	1					
ANR	888746	Argument	rf -> o		887825	4					
ANR	888747	PtrMemberAccess	rf -> o		887825	0					
ANR	888748	Identifier	rf		887825	0					
ANR	888749	Identifier	o		887825	1					
ANR	888750	Argument	rf -> p		887825	5					
ANR	888751	PtrMemberAccess	rf -> p		887825	0					
ANR	888752	Identifier	rf		887825	0					
ANR	888753	Identifier	p		887825	1					
ANR	888754	ExpressionStatement	free ( rf )	2404:4:70352:70361	887825	1	True				
ANR	888755	CallExpression	free ( rf )		887825	0					
ANR	888756	Callee	free		887825	0					
ANR	888757	Identifier	free		887825	0					
ANR	888758	ArgumentList	rf		887825	1					
ANR	888759	Argument	rf		887825	0					
ANR	888760	Identifier	rf		887825	0					
ANR	888761	ElseStatement	else		887825	0					
ANR	888762	IfStatement	"if ( strchr ( str , '=' ) )"		887825	0					
ANR	888763	Condition	"strchr ( str , '=' )"	2406:13:70381:70397	887825	0	True				
ANR	888764	CallExpression	"strchr ( str , '=' )"		887825	0					
ANR	888765	Callee	strchr		887825	0					
ANR	888766	Identifier	strchr		887825	0					
ANR	888767	ArgumentList	str		887825	1					
ANR	888768	Argument	str		887825	0					
ANR	888769	Identifier	str		887825	0					
ANR	888770	Argument	'='		887825	1					
ANR	888771	PrimaryExpression	'='		887825	0					
ANR	888772	CompoundStatement		156:3:3869:3895	887825	1					
ANR	888773	IdentifierDeclStatement	char * a = strdup ( r_str_trim_ro ( str + 1 ) ) ;	2407:3:70405:70447	887825	0	True				
ANR	888774	IdentifierDecl	* a = strdup ( r_str_trim_ro ( str + 1 ) )		887825	0					
ANR	888775	IdentifierDeclType	char *		887825	0					
ANR	888776	Identifier	a		887825	1					
ANR	888777	AssignmentExpression	* a = strdup ( r_str_trim_ro ( str + 1 ) )		887825	2		=			
ANR	888778	Identifier	a		887825	0					
ANR	888779	CallExpression	strdup ( r_str_trim_ro ( str + 1 ) )		887825	1					
ANR	888780	Callee	strdup		887825	0					
ANR	888781	Identifier	strdup		887825	0					
ANR	888782	ArgumentList	r_str_trim_ro ( str + 1 )		887825	1					
ANR	888783	Argument	r_str_trim_ro ( str + 1 )		887825	0					
ANR	888784	CallExpression	r_str_trim_ro ( str + 1 )		887825	0					
ANR	888785	Callee	r_str_trim_ro		887825	0					
ANR	888786	Identifier	r_str_trim_ro		887825	0					
ANR	888787	ArgumentList	str + 1		887825	1					
ANR	888788	Argument	str + 1		887825	0					
ANR	888789	AdditiveExpression	str + 1		887825	0		+			
ANR	888790	Identifier	str		887825	0					
ANR	888791	PrimaryExpression	1		887825	1					
ANR	888792	IdentifierDeclStatement	"char * eq = strchr ( a , '=' ) ;"	2408:3:70452:70478	887825	1	True				
ANR	888793	IdentifierDecl	"* eq = strchr ( a , '=' )"		887825	0					
ANR	888794	IdentifierDeclType	char *		887825	0					
ANR	888795	Identifier	eq		887825	1					
ANR	888796	AssignmentExpression	"* eq = strchr ( a , '=' )"		887825	2		=			
ANR	888797	Identifier	eq		887825	0					
ANR	888798	CallExpression	"strchr ( a , '=' )"		887825	1					
ANR	888799	Callee	strchr		887825	0					
ANR	888800	Identifier	strchr		887825	0					
ANR	888801	ArgumentList	a		887825	1					
ANR	888802	Argument	a		887825	0					
ANR	888803	Identifier	a		887825	0					
ANR	888804	Argument	'='		887825	1					
ANR	888805	PrimaryExpression	'='		887825	0					
ANR	888806	IfStatement	if ( eq )		887825	2					
ANR	888807	Condition	eq	2409:7:70487:70488	887825	0	True				
ANR	888808	Identifier	eq		887825	0					
ANR	888809	CompoundStatement		162:4:4014:4051	887825	1					
ANR	888810	ExpressionStatement	* eq ++ = 0	2410:4:70497:70506	887825	0	True				
ANR	888811	AssignmentExpression	* eq ++ = 0		887825	0		=			
ANR	888812	UnaryOperationExpression	* eq ++		887825	0					
ANR	888813	UnaryOperator	*		887825	0					
ANR	888814	PostIncDecOperationExpression	eq ++		887825	1					
ANR	888815	Identifier	eq		887825	0					
ANR	888816	IncDec	++		887825	1					
ANR	888817	PrimaryExpression	0		887825	1					
ANR	888818	IdentifierDeclStatement	char * k = a ;	2411:4:70512:70523	887825	1	True				
ANR	888819	IdentifierDecl	* k = a		887825	0					
ANR	888820	IdentifierDeclType	char *		887825	0					
ANR	888821	Identifier	k		887825	1					
ANR	888822	AssignmentExpression	* k = a		887825	2		=			
ANR	888823	Identifier	a		887825	0					
ANR	888824	Identifier	a		887825	1					
ANR	888825	ExpressionStatement	r_str_trim ( a )	2412:4:70529:70543	887825	2	True				
ANR	888826	CallExpression	r_str_trim ( a )		887825	0					
ANR	888827	Callee	r_str_trim		887825	0					
ANR	888828	Identifier	r_str_trim		887825	0					
ANR	888829	ArgumentList	a		887825	1					
ANR	888830	Argument	a		887825	0					
ANR	888831	Identifier	a		887825	0					
ANR	888832	IdentifierDeclStatement	"bool v = ! strcmp ( eq , ""true"" ) || atoi ( eq ) ;"	2413:4:70549:70591	887825	3	True				
ANR	888833	IdentifierDecl	"v = ! strcmp ( eq , ""true"" ) || atoi ( eq )"		887825	0					
ANR	888834	IdentifierDeclType	bool		887825	0					
ANR	888835	Identifier	v		887825	1					
ANR	888836	AssignmentExpression	"v = ! strcmp ( eq , ""true"" ) || atoi ( eq )"		887825	2		=			
ANR	888837	Identifier	v		887825	0					
ANR	888838	OrExpression	"! strcmp ( eq , ""true"" ) || atoi ( eq )"		887825	1		||			
ANR	888839	UnaryOperationExpression	"! strcmp ( eq , ""true"" )"		887825	0					
ANR	888840	UnaryOperator	!		887825	0					
ANR	888841	CallExpression	"strcmp ( eq , ""true"" )"		887825	1					
ANR	888842	Callee	strcmp		887825	0					
ANR	888843	Identifier	strcmp		887825	0					
ANR	888844	ArgumentList	eq		887825	1					
ANR	888845	Argument	eq		887825	0					
ANR	888846	Identifier	eq		887825	0					
ANR	888847	Argument	"""true"""		887825	1					
ANR	888848	PrimaryExpression	"""true"""		887825	0					
ANR	888849	CallExpression	atoi ( eq )		887825	1					
ANR	888850	Callee	atoi		887825	0					
ANR	888851	Identifier	atoi		887825	0					
ANR	888852	ArgumentList	eq		887825	1					
ANR	888853	Argument	eq		887825	0					
ANR	888854	Identifier	eq		887825	0					
ANR	888855	IdentifierDeclStatement	int type = r_reg_cond_from_string ( k ) ;	2414:4:70597:70634	887825	4	True				
ANR	888856	IdentifierDecl	type = r_reg_cond_from_string ( k )		887825	0					
ANR	888857	IdentifierDeclType	int		887825	0					
ANR	888858	Identifier	type		887825	1					
ANR	888859	AssignmentExpression	type = r_reg_cond_from_string ( k )		887825	2		=			
ANR	888860	Identifier	type		887825	0					
ANR	888861	CallExpression	r_reg_cond_from_string ( k )		887825	1					
ANR	888862	Callee	r_reg_cond_from_string		887825	0					
ANR	888863	Identifier	r_reg_cond_from_string		887825	0					
ANR	888864	ArgumentList	k		887825	1					
ANR	888865	Argument	k		887825	0					
ANR	888866	Identifier	k		887825	0					
ANR	888867	IfStatement	if ( type != - 1 )		887825	5					
ANR	888868	Condition	type != - 1	2415:8:70644:70653	887825	0	True				
ANR	888869	EqualityExpression	type != - 1		887825	0		!=			
ANR	888870	Identifier	type		887825	0					
ANR	888871	UnaryOperationExpression	- 1		887825	1					
ANR	888872	UnaryOperator	-		887825	0					
ANR	888873	PrimaryExpression	1		887825	1					
ANR	888874	CompoundStatement		164:5:4080:4138	887825	1					
ANR	888875	IdentifierDeclStatement	"RRegFlags * rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL ) ;"	2416:5:70663:70721	887825	0	True				
ANR	888876	IdentifierDecl	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		887825	0					
ANR	888877	IdentifierDeclType	RRegFlags *		887825	0					
ANR	888878	Identifier	rf		887825	1					
ANR	888879	AssignmentExpression	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		887825	2		=			
ANR	888880	Identifier	rf		887825	0					
ANR	888881	CallExpression	"r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		887825	1					
ANR	888882	Callee	r_reg_cond_retrieve		887825	0					
ANR	888883	Identifier	r_reg_cond_retrieve		887825	0					
ANR	888884	ArgumentList	core -> dbg -> reg		887825	1					
ANR	888885	Argument	core -> dbg -> reg		887825	0					
ANR	888886	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	888887	PtrMemberAccess	core -> dbg		887825	0					
ANR	888888	Identifier	core		887825	0					
ANR	888889	Identifier	dbg		887825	1					
ANR	888890	Identifier	reg		887825	1					
ANR	888891	Argument	NULL		887825	1					
ANR	888892	Identifier	NULL		887825	0					
ANR	888893	IfStatement	if ( rf )		887825	1					
ANR	888894	Condition	rf	2417:9:70732:70733	887825	0	True				
ANR	888895	Identifier	rf		887825	0					
ANR	888896	CompoundStatement		165:13:4153:4153	887825	1					
ANR	888897	ExpressionStatement	"r_reg_cond_bits_set ( core -> dbg -> reg , type , rf , v )"	2418:6:70744:70793	887825	0	True				
ANR	888898	CallExpression	"r_reg_cond_bits_set ( core -> dbg -> reg , type , rf , v )"		887825	0					
ANR	888899	Callee	r_reg_cond_bits_set		887825	0					
ANR	888900	Identifier	r_reg_cond_bits_set		887825	0					
ANR	888901	ArgumentList	core -> dbg -> reg		887825	1					
ANR	888902	Argument	core -> dbg -> reg		887825	0					
ANR	888903	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	888904	PtrMemberAccess	core -> dbg		887825	0					
ANR	888905	Identifier	core		887825	0					
ANR	888906	Identifier	dbg		887825	1					
ANR	888907	Identifier	reg		887825	1					
ANR	888908	Argument	type		887825	1					
ANR	888909	Identifier	type		887825	0					
ANR	888910	Argument	rf		887825	2					
ANR	888911	Identifier	rf		887825	0					
ANR	888912	Argument	v		887825	3					
ANR	888913	Identifier	v		887825	0					
ANR	888914	ExpressionStatement	"r_reg_cond_apply ( core -> dbg -> reg , rf )"	2419:6:70801:70838	887825	1	True				
ANR	888915	CallExpression	"r_reg_cond_apply ( core -> dbg -> reg , rf )"		887825	0					
ANR	888916	Callee	r_reg_cond_apply		887825	0					
ANR	888917	Identifier	r_reg_cond_apply		887825	0					
ANR	888918	ArgumentList	core -> dbg -> reg		887825	1					
ANR	888919	Argument	core -> dbg -> reg		887825	0					
ANR	888920	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	888921	PtrMemberAccess	core -> dbg		887825	0					
ANR	888922	Identifier	core		887825	0					
ANR	888923	Identifier	dbg		887825	1					
ANR	888924	Identifier	reg		887825	1					
ANR	888925	Argument	rf		887825	1					
ANR	888926	Identifier	rf		887825	0					
ANR	888927	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"	2420:6:70846:70896	887825	2	True				
ANR	888928	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"		887825	0					
ANR	888929	Callee	r_debug_reg_sync		887825	0					
ANR	888930	Identifier	r_debug_reg_sync		887825	0					
ANR	888931	ArgumentList	core -> dbg		887825	1					
ANR	888932	Argument	core -> dbg		887825	0					
ANR	888933	PtrMemberAccess	core -> dbg		887825	0					
ANR	888934	Identifier	core		887825	0					
ANR	888935	Identifier	dbg		887825	1					
ANR	888936	Argument	R_REG_TYPE_ALL		887825	1					
ANR	888937	Identifier	R_REG_TYPE_ALL		887825	0					
ANR	888938	Argument	true		887825	2					
ANR	888939	Identifier	true		887825	0					
ANR	888940	ExpressionStatement	free ( rf )	2421:6:70904:70913	887825	3	True				
ANR	888941	CallExpression	free ( rf )		887825	0					
ANR	888942	Callee	free		887825	0					
ANR	888943	Identifier	free		887825	0					
ANR	888944	ArgumentList	rf		887825	1					
ANR	888945	Argument	rf		887825	0					
ANR	888946	Identifier	rf		887825	0					
ANR	888947	ElseStatement	else		887825	0					
ANR	888948	CompoundStatement		171:11:4350:4350	887825	0					
ANR	888949	ExpressionStatement	"eprintf ( ""Unknown condition register\\n"" )"	2424:5:70940:70980	887825	0	True				
ANR	888950	CallExpression	"eprintf ( ""Unknown condition register\\n"" )"		887825	0					
ANR	888951	Callee	eprintf		887825	0					
ANR	888952	Identifier	eprintf		887825	0					
ANR	888953	ArgumentList	"""Unknown condition register\\n"""		887825	1					
ANR	888954	Argument	"""Unknown condition register\\n"""		887825	0					
ANR	888955	PrimaryExpression	"""Unknown condition register\\n"""		887825	0					
ANR	888956	ExpressionStatement	free ( a )	2427:3:70996:71004	887825	3	True				
ANR	888957	CallExpression	free ( a )		887825	0					
ANR	888958	Callee	free		887825	0					
ANR	888959	Identifier	free		887825	0					
ANR	888960	ArgumentList	a		887825	1					
ANR	888961	Argument	a		887825	0					
ANR	888962	Identifier	a		887825	0					
ANR	888963	ElseStatement	else		887825	0					
ANR	888964	CompoundStatement		178:3:4453:4495	887825	0					
ANR	888965	IdentifierDeclStatement	RRegItem * r ;	2429:3:71020:71031	887825	0	True				
ANR	888966	IdentifierDecl	* r		887825	0					
ANR	888967	IdentifierDeclType	RRegItem *		887825	0					
ANR	888968	Identifier	r		887825	1					
ANR	888969	IdentifierDeclStatement	const char * name = r_str_trim_ro ( str + 1 ) ;	2430:3:71036:71078	887825	1	True				
ANR	888970	IdentifierDecl	* name = r_str_trim_ro ( str + 1 )		887825	0					
ANR	888971	IdentifierDeclType	const char *		887825	0					
ANR	888972	Identifier	name		887825	1					
ANR	888973	AssignmentExpression	* name = r_str_trim_ro ( str + 1 )		887825	2		=			
ANR	888974	Identifier	name		887825	0					
ANR	888975	CallExpression	r_str_trim_ro ( str + 1 )		887825	1					
ANR	888976	Callee	r_str_trim_ro		887825	0					
ANR	888977	Identifier	r_str_trim_ro		887825	0					
ANR	888978	ArgumentList	str + 1		887825	1					
ANR	888979	Argument	str + 1		887825	0					
ANR	888980	AdditiveExpression	str + 1		887825	0		+			
ANR	888981	Identifier	str		887825	0					
ANR	888982	PrimaryExpression	1		887825	1					
ANR	888983	IfStatement	if ( * name && name [ 1 ] )		887825	2					
ANR	888984	Condition	* name && name [ 1 ]	2431:7:71087:71102	887825	0	True				
ANR	888985	AndExpression	* name && name [ 1 ]		887825	0		&&			
ANR	888986	UnaryOperationExpression	* name		887825	0					
ANR	888987	UnaryOperator	*		887825	0					
ANR	888988	Identifier	name		887825	1					
ANR	888989	ArrayIndexing	name [ 1 ]		887825	1					
ANR	888990	Identifier	name		887825	0					
ANR	888991	PrimaryExpression	1		887825	1					
ANR	888992	CompoundStatement		179:25:4522:4522	887825	1					
ANR	888993	ExpressionStatement	"r = r_reg_cond_get ( core -> dbg -> reg , name )"	2432:4:71111:71152	887825	0	True				
ANR	888994	AssignmentExpression	"r = r_reg_cond_get ( core -> dbg -> reg , name )"		887825	0		=			
ANR	888995	Identifier	r		887825	0					
ANR	888996	CallExpression	"r_reg_cond_get ( core -> dbg -> reg , name )"		887825	1					
ANR	888997	Callee	r_reg_cond_get		887825	0					
ANR	888998	Identifier	r_reg_cond_get		887825	0					
ANR	888999	ArgumentList	core -> dbg -> reg		887825	1					
ANR	889000	Argument	core -> dbg -> reg		887825	0					
ANR	889001	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	889002	PtrMemberAccess	core -> dbg		887825	0					
ANR	889003	Identifier	core		887825	0					
ANR	889004	Identifier	dbg		887825	1					
ANR	889005	Identifier	reg		887825	1					
ANR	889006	Argument	name		887825	1					
ANR	889007	Identifier	name		887825	0					
ANR	889008	IfStatement	if ( r )		887825	1					
ANR	889009	Condition	r	2433:8:71162:71162	887825	0	True				
ANR	889010	Identifier	r		887825	0					
ANR	889011	CompoundStatement		181:11:4582:4582	887825	1					
ANR	889012	ExpressionStatement	r_cons_println ( r -> name )	2434:5:71172:71196	887825	0	True				
ANR	889013	CallExpression	r_cons_println ( r -> name )		887825	0					
ANR	889014	Callee	r_cons_println		887825	0					
ANR	889015	Identifier	r_cons_println		887825	0					
ANR	889016	ArgumentList	r -> name		887825	1					
ANR	889017	Argument	r -> name		887825	0					
ANR	889018	PtrMemberAccess	r -> name		887825	0					
ANR	889019	Identifier	r		887825	0					
ANR	889020	Identifier	name		887825	1					
ANR	889021	ElseStatement	else		887825	0					
ANR	889022	CompoundStatement		185:5:4678:4736	887825	0					
ANR	889023	IdentifierDeclStatement	int id = r_reg_cond_from_string ( name ) ;	2436:5:71216:71254	887825	0	True				
ANR	889024	IdentifierDecl	id = r_reg_cond_from_string ( name )		887825	0					
ANR	889025	IdentifierDeclType	int		887825	0					
ANR	889026	Identifier	id		887825	1					
ANR	889027	AssignmentExpression	id = r_reg_cond_from_string ( name )		887825	2		=			
ANR	889028	Identifier	id		887825	0					
ANR	889029	CallExpression	r_reg_cond_from_string ( name )		887825	1					
ANR	889030	Callee	r_reg_cond_from_string		887825	0					
ANR	889031	Identifier	r_reg_cond_from_string		887825	0					
ANR	889032	ArgumentList	name		887825	1					
ANR	889033	Argument	name		887825	0					
ANR	889034	Identifier	name		887825	0					
ANR	889035	IdentifierDeclStatement	"RRegFlags * rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL ) ;"	2437:5:71261:71319	887825	1	True				
ANR	889036	IdentifierDecl	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		887825	0					
ANR	889037	IdentifierDeclType	RRegFlags *		887825	0					
ANR	889038	Identifier	rf		887825	1					
ANR	889039	AssignmentExpression	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		887825	2		=			
ANR	889040	Identifier	rf		887825	0					
ANR	889041	CallExpression	"r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		887825	1					
ANR	889042	Callee	r_reg_cond_retrieve		887825	0					
ANR	889043	Identifier	r_reg_cond_retrieve		887825	0					
ANR	889044	ArgumentList	core -> dbg -> reg		887825	1					
ANR	889045	Argument	core -> dbg -> reg		887825	0					
ANR	889046	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	889047	PtrMemberAccess	core -> dbg		887825	0					
ANR	889048	Identifier	core		887825	0					
ANR	889049	Identifier	dbg		887825	1					
ANR	889050	Identifier	reg		887825	1					
ANR	889051	Argument	NULL		887825	1					
ANR	889052	Identifier	NULL		887825	0					
ANR	889053	IfStatement	if ( rf )		887825	2					
ANR	889054	Condition	rf	2438:9:71330:71331	887825	0	True				
ANR	889055	Identifier	rf		887825	0					
ANR	889056	CompoundStatement		187:6:4759:4807	887825	1					
ANR	889057	IdentifierDeclStatement	"int o = r_reg_cond_bits ( core -> dbg -> reg , id , rf ) ;"	2439:6:71342:71390	887825	0	True				
ANR	889058	IdentifierDecl	"o = r_reg_cond_bits ( core -> dbg -> reg , id , rf )"		887825	0					
ANR	889059	IdentifierDeclType	int		887825	0					
ANR	889060	Identifier	o		887825	1					
ANR	889061	AssignmentExpression	"o = r_reg_cond_bits ( core -> dbg -> reg , id , rf )"		887825	2		=			
ANR	889062	Identifier	o		887825	0					
ANR	889063	CallExpression	"r_reg_cond_bits ( core -> dbg -> reg , id , rf )"		887825	1					
ANR	889064	Callee	r_reg_cond_bits		887825	0					
ANR	889065	Identifier	r_reg_cond_bits		887825	0					
ANR	889066	ArgumentList	core -> dbg -> reg		887825	1					
ANR	889067	Argument	core -> dbg -> reg		887825	0					
ANR	889068	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	889069	PtrMemberAccess	core -> dbg		887825	0					
ANR	889070	Identifier	core		887825	0					
ANR	889071	Identifier	dbg		887825	1					
ANR	889072	Identifier	reg		887825	1					
ANR	889073	Argument	id		887825	1					
ANR	889074	Identifier	id		887825	0					
ANR	889075	Argument	rf		887825	2					
ANR	889076	Identifier	rf		887825	0					
ANR	889077	ExpressionStatement	core -> num -> value = o	2440:6:71398:71418	887825	1	True				
ANR	889078	AssignmentExpression	core -> num -> value = o		887825	0		=			
ANR	889079	PtrMemberAccess	core -> num -> value		887825	0					
ANR	889080	PtrMemberAccess	core -> num		887825	0					
ANR	889081	Identifier	core		887825	0					
ANR	889082	Identifier	num		887825	1					
ANR	889083	Identifier	value		887825	1					
ANR	889084	Identifier	o		887825	1					
ANR	889085	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , o )"	2442:6:71441:71466	887825	2	True				
ANR	889086	CallExpression	"r_cons_printf ( ""%d\\n"" , o )"		887825	0					
ANR	889087	Callee	r_cons_printf		887825	0					
ANR	889088	Identifier	r_cons_printf		887825	0					
ANR	889089	ArgumentList	"""%d\\n"""		887825	1					
ANR	889090	Argument	"""%d\\n"""		887825	0					
ANR	889091	PrimaryExpression	"""%d\\n"""		887825	0					
ANR	889092	Argument	o		887825	1					
ANR	889093	Identifier	o		887825	0					
ANR	889094	ExpressionStatement	free ( rf )	2443:6:71474:71483	887825	3	True				
ANR	889095	CallExpression	free ( rf )		887825	0					
ANR	889096	Callee	free		887825	0					
ANR	889097	Identifier	free		887825	0					
ANR	889098	ArgumentList	rf		887825	1					
ANR	889099	Argument	rf		887825	0					
ANR	889100	Identifier	rf		887825	0					
ANR	889101	ElseStatement	else		887825	0					
ANR	889102	ExpressionStatement	"eprintf ( ""unknown conditional or flag register\\n"" )"	2444:12:71497:71547	887825	0	True				
ANR	889103	CallExpression	"eprintf ( ""unknown conditional or flag register\\n"" )"		887825	0					
ANR	889104	Callee	eprintf		887825	0					
ANR	889105	Identifier	eprintf		887825	0					
ANR	889106	ArgumentList	"""unknown conditional or flag register\\n"""		887825	1					
ANR	889107	Argument	"""unknown conditional or flag register\\n"""		887825	0					
ANR	889108	PrimaryExpression	"""unknown conditional or flag register\\n"""		887825	0					
ANR	889109	ElseStatement	else		887825	0					
ANR	889110	CompoundStatement		195:4:4988:5046	887825	0					
ANR	889111	IdentifierDeclStatement	"RRegFlags * rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL ) ;"	2447:4:71571:71629	887825	0	True				
ANR	889112	IdentifierDecl	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		887825	0					
ANR	889113	IdentifierDeclType	RRegFlags *		887825	0					
ANR	889114	Identifier	rf		887825	1					
ANR	889115	AssignmentExpression	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		887825	2		=			
ANR	889116	Identifier	rf		887825	0					
ANR	889117	CallExpression	"r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		887825	1					
ANR	889118	Callee	r_reg_cond_retrieve		887825	0					
ANR	889119	Identifier	r_reg_cond_retrieve		887825	0					
ANR	889120	ArgumentList	core -> dbg -> reg		887825	1					
ANR	889121	Argument	core -> dbg -> reg		887825	0					
ANR	889122	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	889123	PtrMemberAccess	core -> dbg		887825	0					
ANR	889124	Identifier	core		887825	0					
ANR	889125	Identifier	dbg		887825	1					
ANR	889126	Identifier	reg		887825	1					
ANR	889127	Argument	NULL		887825	1					
ANR	889128	Identifier	NULL		887825	0					
ANR	889129	IfStatement	if ( rf )		887825	1					
ANR	889130	Condition	rf	2448:8:71639:71640	887825	0	True				
ANR	889131	Identifier	rf		887825	0					
ANR	889132	CompoundStatement		196:12:5060:5060	887825	1					
ANR	889133	IfStatement	if ( * name == '=' )		887825	0					
ANR	889134	Condition	* name == '='	2449:9:71654:71663	887825	0	True				
ANR	889135	EqualityExpression	* name == '='		887825	0		==			
ANR	889136	UnaryOperationExpression	* name		887825	0					
ANR	889137	UnaryOperator	*		887825	0					
ANR	889138	Identifier	name		887825	1					
ANR	889139	PrimaryExpression	'='		887825	1					
ANR	889140	CompoundStatement		197:21:5083:5083	887825	1					
ANR	889141	ForStatement	for ( i = 0 ; i < R_REG_COND_LAST ; i ++ )		887825	0					
ANR	889142	ForInit	i = 0 ;	2450:11:71679:71682	887825	0	True				
ANR	889143	AssignmentExpression	i = 0		887825	0		=			
ANR	889144	Identifier	i		887825	0					
ANR	889145	PrimaryExpression	0		887825	1					
ANR	889146	Condition	i < R_REG_COND_LAST	2450:16:71684:71700	887825	1	True				
ANR	889147	RelationalExpression	i < R_REG_COND_LAST		887825	0		<			
ANR	889148	Identifier	i		887825	0					
ANR	889149	Identifier	R_REG_COND_LAST		887825	1					
ANR	889150	PostIncDecOperationExpression	i ++	2450:35:71703:71705	887825	2	True				
ANR	889151	Identifier	i		887825	0					
ANR	889152	IncDec	++		887825	1					
ANR	889153	CompoundStatement		198:40:5125:5125	887825	3					
ANR	889154	ExpressionStatement	"r_cons_printf ( ""%s:%d "" , r_reg_cond_to_string ( i ) , r_reg_cond_bits ( core -> dbg -> reg , i , rf ) )"	2451:7:71717:71826	887825	0	True				
ANR	889155	CallExpression	"r_cons_printf ( ""%s:%d "" , r_reg_cond_to_string ( i ) , r_reg_cond_bits ( core -> dbg -> reg , i , rf ) )"		887825	0					
ANR	889156	Callee	r_cons_printf		887825	0					
ANR	889157	Identifier	r_cons_printf		887825	0					
ANR	889158	ArgumentList	"""%s:%d """		887825	1					
ANR	889159	Argument	"""%s:%d """		887825	0					
ANR	889160	PrimaryExpression	"""%s:%d """		887825	0					
ANR	889161	Argument	r_reg_cond_to_string ( i )		887825	1					
ANR	889162	CallExpression	r_reg_cond_to_string ( i )		887825	0					
ANR	889163	Callee	r_reg_cond_to_string		887825	0					
ANR	889164	Identifier	r_reg_cond_to_string		887825	0					
ANR	889165	ArgumentList	i		887825	1					
ANR	889166	Argument	i		887825	0					
ANR	889167	Identifier	i		887825	0					
ANR	889168	Argument	"r_reg_cond_bits ( core -> dbg -> reg , i , rf )"		887825	2					
ANR	889169	CallExpression	"r_reg_cond_bits ( core -> dbg -> reg , i , rf )"		887825	0					
ANR	889170	Callee	r_reg_cond_bits		887825	0					
ANR	889171	Identifier	r_reg_cond_bits		887825	0					
ANR	889172	ArgumentList	core -> dbg -> reg		887825	1					
ANR	889173	Argument	core -> dbg -> reg		887825	0					
ANR	889174	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	889175	PtrMemberAccess	core -> dbg		887825	0					
ANR	889176	Identifier	core		887825	0					
ANR	889177	Identifier	dbg		887825	1					
ANR	889178	Identifier	reg		887825	1					
ANR	889179	Argument	i		887825	1					
ANR	889180	Identifier	i		887825	0					
ANR	889181	Argument	rf		887825	2					
ANR	889182	Identifier	rf		887825	0					
ANR	889183	ExpressionStatement	r_cons_newline ( )	2455:6:71842:71859	887825	1	True				
ANR	889184	CallExpression	r_cons_newline ( )		887825	0					
ANR	889185	Callee	r_cons_newline		887825	0					
ANR	889186	Identifier	r_cons_newline		887825	0					
ANR	889187	ArgumentList			887825	1					
ANR	889188	ElseStatement	else		887825	0					
ANR	889189	CompoundStatement		204:12:5290:5290	887825	0					
ANR	889190	ForStatement	for ( i = 0 ; i < R_REG_COND_LAST ; i ++ )		887825	0					
ANR	889191	ForInit	i = 0 ;	2457:11:71886:71889	887825	0	True				
ANR	889192	AssignmentExpression	i = 0		887825	0		=			
ANR	889193	Identifier	i		887825	0					
ANR	889194	PrimaryExpression	0		887825	1					
ANR	889195	Condition	i < R_REG_COND_LAST	2457:16:71891:71907	887825	1	True				
ANR	889196	RelationalExpression	i < R_REG_COND_LAST		887825	0		<			
ANR	889197	Identifier	i		887825	0					
ANR	889198	Identifier	R_REG_COND_LAST		887825	1					
ANR	889199	PostIncDecOperationExpression	i ++	2457:35:71910:71912	887825	2	True				
ANR	889200	Identifier	i		887825	0					
ANR	889201	IncDec	++		887825	1					
ANR	889202	CompoundStatement		205:40:5332:5332	887825	3					
ANR	889203	ExpressionStatement	"r_cons_printf ( ""%d %s\\n"" , r_reg_cond_bits ( core -> dbg -> reg , i , rf ) , r_reg_cond_to_string ( i ) )"	2458:7:71924:72034	887825	0	True				
ANR	889204	CallExpression	"r_cons_printf ( ""%d %s\\n"" , r_reg_cond_bits ( core -> dbg -> reg , i , rf ) , r_reg_cond_to_string ( i ) )"		887825	0					
ANR	889205	Callee	r_cons_printf		887825	0					
ANR	889206	Identifier	r_cons_printf		887825	0					
ANR	889207	ArgumentList	"""%d %s\\n"""		887825	1					
ANR	889208	Argument	"""%d %s\\n"""		887825	0					
ANR	889209	PrimaryExpression	"""%d %s\\n"""		887825	0					
ANR	889210	Argument	"r_reg_cond_bits ( core -> dbg -> reg , i , rf )"		887825	1					
ANR	889211	CallExpression	"r_reg_cond_bits ( core -> dbg -> reg , i , rf )"		887825	0					
ANR	889212	Callee	r_reg_cond_bits		887825	0					
ANR	889213	Identifier	r_reg_cond_bits		887825	0					
ANR	889214	ArgumentList	core -> dbg -> reg		887825	1					
ANR	889215	Argument	core -> dbg -> reg		887825	0					
ANR	889216	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	889217	PtrMemberAccess	core -> dbg		887825	0					
ANR	889218	Identifier	core		887825	0					
ANR	889219	Identifier	dbg		887825	1					
ANR	889220	Identifier	reg		887825	1					
ANR	889221	Argument	i		887825	1					
ANR	889222	Identifier	i		887825	0					
ANR	889223	Argument	rf		887825	2					
ANR	889224	Identifier	rf		887825	0					
ANR	889225	Argument	r_reg_cond_to_string ( i )		887825	2					
ANR	889226	CallExpression	r_reg_cond_to_string ( i )		887825	0					
ANR	889227	Callee	r_reg_cond_to_string		887825	0					
ANR	889228	Identifier	r_reg_cond_to_string		887825	0					
ANR	889229	ArgumentList	i		887825	1					
ANR	889230	Argument	i		887825	0					
ANR	889231	Identifier	i		887825	0					
ANR	889232	ExpressionStatement	free ( rf )	2463:5:72056:72065	887825	1	True				
ANR	889233	CallExpression	free ( rf )		887825	0					
ANR	889234	Callee	free		887825	0					
ANR	889235	Identifier	free		887825	0					
ANR	889236	ArgumentList	rf		887825	1					
ANR	889237	Argument	rf		887825	0					
ANR	889238	Identifier	rf		887825	0					
ANR	889239	BreakStatement	break ;	2467:2:72084:72089	887825	18	True				
ANR	889240	Label	case 'x' :	2468:1:72092:72100	887825	19	True				
ANR	889241	SwitchStatement	switch ( str [ 1 ] )		887825	20					
ANR	889242	Condition	str [ 1 ]	2469:10:72121:72126	887825	0	True				
ANR	889243	ArrayIndexing	str [ 1 ]		887825	0					
ANR	889244	Identifier	str		887825	0					
ANR	889245	PrimaryExpression	1		887825	1					
ANR	889246	CompoundStatement		217:18:5546:5546	887825	1					
ANR	889247	Label	case '\\0' :	2470:2:72133:72142	887825	0	True				
ANR	889248	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"	2471:3:72147:72198	887825	1	True				
ANR	889249	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"		887825	0					
ANR	889250	Callee	r_debug_reg_sync		887825	0					
ANR	889251	Identifier	r_debug_reg_sync		887825	0					
ANR	889252	ArgumentList	core -> dbg		887825	1					
ANR	889253	Argument	core -> dbg		887825	0					
ANR	889254	PtrMemberAccess	core -> dbg		887825	0					
ANR	889255	Identifier	core		887825	0					
ANR	889256	Identifier	dbg		887825	1					
ANR	889257	Argument	R_REG_TYPE_DRX		887825	1					
ANR	889258	Identifier	R_REG_TYPE_DRX		887825	0					
ANR	889259	Argument	false		887825	2					
ANR	889260	Identifier	false		887825	0					
ANR	889261	ExpressionStatement	r_debug_drx_list ( core -> dbg )	2472:3:72203:72231	887825	2	True				
ANR	889262	CallExpression	r_debug_drx_list ( core -> dbg )		887825	0					
ANR	889263	Callee	r_debug_drx_list		887825	0					
ANR	889264	Identifier	r_debug_drx_list		887825	0					
ANR	889265	ArgumentList	core -> dbg		887825	1					
ANR	889266	Argument	core -> dbg		887825	0					
ANR	889267	PtrMemberAccess	core -> dbg		887825	0					
ANR	889268	Identifier	core		887825	0					
ANR	889269	Identifier	dbg		887825	1					
ANR	889270	BreakStatement	break ;	2473:3:72236:72241	887825	3	True				
ANR	889271	Label	case '-' :	2474:2:72245:72253	887825	4	True				
ANR	889272	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"	2475:3:72258:72309	887825	5	True				
ANR	889273	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"		887825	0					
ANR	889274	Callee	r_debug_reg_sync		887825	0					
ANR	889275	Identifier	r_debug_reg_sync		887825	0					
ANR	889276	ArgumentList	core -> dbg		887825	1					
ANR	889277	Argument	core -> dbg		887825	0					
ANR	889278	PtrMemberAccess	core -> dbg		887825	0					
ANR	889279	Identifier	core		887825	0					
ANR	889280	Identifier	dbg		887825	1					
ANR	889281	Argument	R_REG_TYPE_DRX		887825	1					
ANR	889282	Identifier	R_REG_TYPE_DRX		887825	0					
ANR	889283	Argument	false		887825	2					
ANR	889284	Identifier	false		887825	0					
ANR	889285	ExpressionStatement	"r_debug_drx_unset ( core -> dbg , atoi ( str + 2 ) )"	2476:3:72314:72359	887825	6	True				
ANR	889286	CallExpression	"r_debug_drx_unset ( core -> dbg , atoi ( str + 2 ) )"		887825	0					
ANR	889287	Callee	r_debug_drx_unset		887825	0					
ANR	889288	Identifier	r_debug_drx_unset		887825	0					
ANR	889289	ArgumentList	core -> dbg		887825	1					
ANR	889290	Argument	core -> dbg		887825	0					
ANR	889291	PtrMemberAccess	core -> dbg		887825	0					
ANR	889292	Identifier	core		887825	0					
ANR	889293	Identifier	dbg		887825	1					
ANR	889294	Argument	atoi ( str + 2 )		887825	1					
ANR	889295	CallExpression	atoi ( str + 2 )		887825	0					
ANR	889296	Callee	atoi		887825	0					
ANR	889297	Identifier	atoi		887825	0					
ANR	889298	ArgumentList	str + 2		887825	1					
ANR	889299	Argument	str + 2		887825	0					
ANR	889300	AdditiveExpression	str + 2		887825	0		+			
ANR	889301	Identifier	str		887825	0					
ANR	889302	PrimaryExpression	2		887825	1					
ANR	889303	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , true )"	2477:3:72364:72414	887825	7	True				
ANR	889304	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , true )"		887825	0					
ANR	889305	Callee	r_debug_reg_sync		887825	0					
ANR	889306	Identifier	r_debug_reg_sync		887825	0					
ANR	889307	ArgumentList	core -> dbg		887825	1					
ANR	889308	Argument	core -> dbg		887825	0					
ANR	889309	PtrMemberAccess	core -> dbg		887825	0					
ANR	889310	Identifier	core		887825	0					
ANR	889311	Identifier	dbg		887825	1					
ANR	889312	Argument	R_REG_TYPE_DRX		887825	1					
ANR	889313	Identifier	R_REG_TYPE_DRX		887825	0					
ANR	889314	Argument	true		887825	2					
ANR	889315	Identifier	true		887825	0					
ANR	889316	BreakStatement	break ;	2478:3:72419:72424	887825	8	True				
ANR	889317	Label	case ' ' :	2479:2:72428:72436	887825	9	True				
ANR	889318	CompoundStatement		231:6:5934:5942	887825	10					
ANR	889319	IdentifierDeclStatement	char * s = strdup ( str + 2 ) ;	2480:6:72446:72470	887825	0	True				
ANR	889320	IdentifierDecl	* s = strdup ( str + 2 )		887825	0					
ANR	889321	IdentifierDeclType	char *		887825	0					
ANR	889322	Identifier	s		887825	1					
ANR	889323	AssignmentExpression	* s = strdup ( str + 2 )		887825	2		=			
ANR	889324	Identifier	s		887825	0					
ANR	889325	CallExpression	strdup ( str + 2 )		887825	1					
ANR	889326	Callee	strdup		887825	0					
ANR	889327	Identifier	strdup		887825	0					
ANR	889328	ArgumentList	str + 2		887825	1					
ANR	889329	Argument	str + 2		887825	0					
ANR	889330	AdditiveExpression	str + 2		887825	0		+			
ANR	889331	Identifier	str		887825	0					
ANR	889332	PrimaryExpression	2		887825	1					
ANR	889333	IdentifierDeclStatement	"char sl , n , perm ;"	2481:6:72478:72494	887825	1	True				
ANR	889334	IdentifierDecl	sl		887825	0					
ANR	889335	IdentifierDeclType	char		887825	0					
ANR	889336	Identifier	sl		887825	1					
ANR	889337	IdentifierDecl	n		887825	1					
ANR	889338	IdentifierDeclType	char		887825	0					
ANR	889339	Identifier	n		887825	1					
ANR	889340	IdentifierDecl	perm		887825	2					
ANR	889341	IdentifierDeclType	char		887825	0					
ANR	889342	Identifier	perm		887825	1					
ANR	889343	IdentifierDeclStatement	int len ;	2482:6:72502:72509	887825	2	True				
ANR	889344	IdentifierDecl	len		887825	0					
ANR	889345	IdentifierDeclType	int		887825	0					
ANR	889346	Identifier	len		887825	1					
ANR	889347	IdentifierDeclStatement	ut64 off ;	2483:6:72517:72525	887825	3	True				
ANR	889348	IdentifierDecl	off		887825	0					
ANR	889349	IdentifierDeclType	ut64		887825	0					
ANR	889350	Identifier	off		887825	1					
ANR	889351	ExpressionStatement	sl = r_str_word_set0 ( s )	2485:6:72534:72558	887825	4	True				
ANR	889352	AssignmentExpression	sl = r_str_word_set0 ( s )		887825	0		=			
ANR	889353	Identifier	sl		887825	0					
ANR	889354	CallExpression	r_str_word_set0 ( s )		887825	1					
ANR	889355	Callee	r_str_word_set0		887825	0					
ANR	889356	Identifier	r_str_word_set0		887825	0					
ANR	889357	ArgumentList	s		887825	1					
ANR	889358	Argument	s		887825	0					
ANR	889359	Identifier	s		887825	0					
ANR	889360	IfStatement	if ( sl == 4 )		887825	5					
ANR	889361	Condition	sl == 4	2486:10:72570:72576	887825	0	True				
ANR	889362	EqualityExpression	sl == 4		887825	0		==			
ANR	889363	Identifier	sl		887825	0					
ANR	889364	PrimaryExpression	4		887825	1					
ANR	889365	CompoundStatement		234:19:5996:5996	887825	1					
ANR	889366	Statement	define	2487:1:72582:72587	887825	0	True				
ANR	889367	Statement	arg	2487:8:72589:72591	887825	1	True				
ANR	889368	Statement	(	2487:11:72592:72592	887825	2	True				
ANR	889369	Statement	x	2487:12:72593:72593	887825	3	True				
ANR	889370	Statement	)	2487:13:72594:72594	887825	4	True				
ANR	889371	Statement	r_str_word_get0	2487:15:72596:72610	887825	5	True				
ANR	889372	Statement	(	2487:30:72611:72611	887825	6	True				
ANR	889373	Statement	s	2487:31:72612:72612	887825	7	True				
ANR	889374	Statement	","	2487:32:72613:72613	887825	8	True				
ANR	889375	Statement	x	2487:33:72614:72614	887825	9	True				
ANR	889376	Statement	)	2487:34:72615:72615	887825	10	True				
ANR	889377	ExpressionStatement	"n = ( char ) r_num_math ( core -> num , arg ( 0 ) )"	2488:7:72624:72664	887825	11	True				
ANR	889378	AssignmentExpression	"n = ( char ) r_num_math ( core -> num , arg ( 0 ) )"		887825	0		=			
ANR	889379	Identifier	n		887825	0					
ANR	889380	CastExpression	"( char ) r_num_math ( core -> num , arg ( 0 ) )"		887825	1					
ANR	889381	CastTarget	char		887825	0					
ANR	889382	CallExpression	"r_num_math ( core -> num , arg ( 0 ) )"		887825	1					
ANR	889383	Callee	r_num_math		887825	0					
ANR	889384	Identifier	r_num_math		887825	0					
ANR	889385	ArgumentList	core -> num		887825	1					
ANR	889386	Argument	core -> num		887825	0					
ANR	889387	PtrMemberAccess	core -> num		887825	0					
ANR	889388	Identifier	core		887825	0					
ANR	889389	Identifier	num		887825	1					
ANR	889390	Argument	arg ( 0 )		887825	1					
ANR	889391	CallExpression	arg ( 0 )		887825	0					
ANR	889392	Callee	arg		887825	0					
ANR	889393	Identifier	arg		887825	0					
ANR	889394	ArgumentList	0		887825	1					
ANR	889395	Argument	0		887825	0					
ANR	889396	PrimaryExpression	0		887825	0					
ANR	889397	ExpressionStatement	"off = r_num_math ( core -> num , arg ( 1 ) )"	2489:7:72673:72709	887825	12	True				
ANR	889398	AssignmentExpression	"off = r_num_math ( core -> num , arg ( 1 ) )"		887825	0		=			
ANR	889399	Identifier	off		887825	0					
ANR	889400	CallExpression	"r_num_math ( core -> num , arg ( 1 ) )"		887825	1					
ANR	889401	Callee	r_num_math		887825	0					
ANR	889402	Identifier	r_num_math		887825	0					
ANR	889403	ArgumentList	core -> num		887825	1					
ANR	889404	Argument	core -> num		887825	0					
ANR	889405	PtrMemberAccess	core -> num		887825	0					
ANR	889406	Identifier	core		887825	0					
ANR	889407	Identifier	num		887825	1					
ANR	889408	Argument	arg ( 1 )		887825	1					
ANR	889409	CallExpression	arg ( 1 )		887825	0					
ANR	889410	Callee	arg		887825	0					
ANR	889411	Identifier	arg		887825	0					
ANR	889412	ArgumentList	1		887825	1					
ANR	889413	Argument	1		887825	0					
ANR	889414	PrimaryExpression	1		887825	0					
ANR	889415	ExpressionStatement	"len = ( int ) r_num_math ( core -> num , arg ( 2 ) )"	2490:7:72718:72759	887825	13	True				
ANR	889416	AssignmentExpression	"len = ( int ) r_num_math ( core -> num , arg ( 2 ) )"		887825	0		=			
ANR	889417	Identifier	len		887825	0					
ANR	889418	CastExpression	"( int ) r_num_math ( core -> num , arg ( 2 ) )"		887825	1					
ANR	889419	CastTarget	int		887825	0					
ANR	889420	CallExpression	"r_num_math ( core -> num , arg ( 2 ) )"		887825	1					
ANR	889421	Callee	r_num_math		887825	0					
ANR	889422	Identifier	r_num_math		887825	0					
ANR	889423	ArgumentList	core -> num		887825	1					
ANR	889424	Argument	core -> num		887825	0					
ANR	889425	PtrMemberAccess	core -> num		887825	0					
ANR	889426	Identifier	core		887825	0					
ANR	889427	Identifier	num		887825	1					
ANR	889428	Argument	arg ( 2 )		887825	1					
ANR	889429	CallExpression	arg ( 2 )		887825	0					
ANR	889430	Callee	arg		887825	0					
ANR	889431	Identifier	arg		887825	0					
ANR	889432	ArgumentList	2		887825	1					
ANR	889433	Argument	2		887825	0					
ANR	889434	PrimaryExpression	2		887825	0					
ANR	889435	ExpressionStatement	perm = ( char ) r_str_rwx ( arg ( 3 ) )	2491:7:72768:72800	887825	14	True				
ANR	889436	AssignmentExpression	perm = ( char ) r_str_rwx ( arg ( 3 ) )		887825	0		=			
ANR	889437	Identifier	perm		887825	0					
ANR	889438	CastExpression	( char ) r_str_rwx ( arg ( 3 ) )		887825	1					
ANR	889439	CastTarget	char		887825	0					
ANR	889440	CallExpression	r_str_rwx ( arg ( 3 ) )		887825	1					
ANR	889441	Callee	r_str_rwx		887825	0					
ANR	889442	Identifier	r_str_rwx		887825	0					
ANR	889443	ArgumentList	arg ( 3 )		887825	1					
ANR	889444	Argument	arg ( 3 )		887825	0					
ANR	889445	CallExpression	arg ( 3 )		887825	0					
ANR	889446	Callee	arg		887825	0					
ANR	889447	Identifier	arg		887825	0					
ANR	889448	ArgumentList	3		887825	1					
ANR	889449	Argument	3		887825	0					
ANR	889450	PrimaryExpression	3		887825	0					
ANR	889451	IfStatement	if ( len == - 1 )		887825	15					
ANR	889452	Condition	len == - 1	2492:11:72813:72821	887825	0	True				
ANR	889453	EqualityExpression	len == - 1		887825	0		==			
ANR	889454	Identifier	len		887825	0					
ANR	889455	UnaryOperationExpression	- 1		887825	1					
ANR	889456	UnaryOperator	-		887825	0					
ANR	889457	PrimaryExpression	1		887825	1					
ANR	889458	CompoundStatement		240:22:6241:6241	887825	1					
ANR	889459	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"	2493:8:72834:72885	887825	0	True				
ANR	889460	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"		887825	0					
ANR	889461	Callee	r_debug_reg_sync		887825	0					
ANR	889462	Identifier	r_debug_reg_sync		887825	0					
ANR	889463	ArgumentList	core -> dbg		887825	1					
ANR	889464	Argument	core -> dbg		887825	0					
ANR	889465	PtrMemberAccess	core -> dbg		887825	0					
ANR	889466	Identifier	core		887825	0					
ANR	889467	Identifier	dbg		887825	1					
ANR	889468	Argument	R_REG_TYPE_DRX		887825	1					
ANR	889469	Identifier	R_REG_TYPE_DRX		887825	0					
ANR	889470	Argument	false		887825	2					
ANR	889471	Identifier	false		887825	0					
ANR	889472	ExpressionStatement	"r_debug_drx_set ( core -> dbg , n , 0 , 0 , 0 , 0 )"	2494:8:72895:72937	887825	1	True				
ANR	889473	CallExpression	"r_debug_drx_set ( core -> dbg , n , 0 , 0 , 0 , 0 )"		887825	0					
ANR	889474	Callee	r_debug_drx_set		887825	0					
ANR	889475	Identifier	r_debug_drx_set		887825	0					
ANR	889476	ArgumentList	core -> dbg		887825	1					
ANR	889477	Argument	core -> dbg		887825	0					
ANR	889478	PtrMemberAccess	core -> dbg		887825	0					
ANR	889479	Identifier	core		887825	0					
ANR	889480	Identifier	dbg		887825	1					
ANR	889481	Argument	n		887825	1					
ANR	889482	Identifier	n		887825	0					
ANR	889483	Argument	0		887825	2					
ANR	889484	PrimaryExpression	0		887825	0					
ANR	889485	Argument	0		887825	3					
ANR	889486	PrimaryExpression	0		887825	0					
ANR	889487	Argument	0		887825	4					
ANR	889488	PrimaryExpression	0		887825	0					
ANR	889489	Argument	0		887825	5					
ANR	889490	PrimaryExpression	0		887825	0					
ANR	889491	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , true )"	2495:8:72947:72997	887825	2	True				
ANR	889492	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , true )"		887825	0					
ANR	889493	Callee	r_debug_reg_sync		887825	0					
ANR	889494	Identifier	r_debug_reg_sync		887825	0					
ANR	889495	ArgumentList	core -> dbg		887825	1					
ANR	889496	Argument	core -> dbg		887825	0					
ANR	889497	PtrMemberAccess	core -> dbg		887825	0					
ANR	889498	Identifier	core		887825	0					
ANR	889499	Identifier	dbg		887825	1					
ANR	889500	Argument	R_REG_TYPE_DRX		887825	1					
ANR	889501	Identifier	R_REG_TYPE_DRX		887825	0					
ANR	889502	Argument	true		887825	2					
ANR	889503	Identifier	true		887825	0					
ANR	889504	ElseStatement	else		887825	0					
ANR	889505	CompoundStatement		244:14:6430:6430	887825	0					
ANR	889506	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"	2497:8:73023:73074	887825	0	True				
ANR	889507	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"		887825	0					
ANR	889508	Callee	r_debug_reg_sync		887825	0					
ANR	889509	Identifier	r_debug_reg_sync		887825	0					
ANR	889510	ArgumentList	core -> dbg		887825	1					
ANR	889511	Argument	core -> dbg		887825	0					
ANR	889512	PtrMemberAccess	core -> dbg		887825	0					
ANR	889513	Identifier	core		887825	0					
ANR	889514	Identifier	dbg		887825	1					
ANR	889515	Argument	R_REG_TYPE_DRX		887825	1					
ANR	889516	Identifier	R_REG_TYPE_DRX		887825	0					
ANR	889517	Argument	false		887825	2					
ANR	889518	Identifier	false		887825	0					
ANR	889519	ExpressionStatement	"r_debug_drx_set ( core -> dbg , n , off , len , perm , 0 )"	2498:8:73084:73133	887825	1	True				
ANR	889520	CallExpression	"r_debug_drx_set ( core -> dbg , n , off , len , perm , 0 )"		887825	0					
ANR	889521	Callee	r_debug_drx_set		887825	0					
ANR	889522	Identifier	r_debug_drx_set		887825	0					
ANR	889523	ArgumentList	core -> dbg		887825	1					
ANR	889524	Argument	core -> dbg		887825	0					
ANR	889525	PtrMemberAccess	core -> dbg		887825	0					
ANR	889526	Identifier	core		887825	0					
ANR	889527	Identifier	dbg		887825	1					
ANR	889528	Argument	n		887825	1					
ANR	889529	Identifier	n		887825	0					
ANR	889530	Argument	off		887825	2					
ANR	889531	Identifier	off		887825	0					
ANR	889532	Argument	len		887825	3					
ANR	889533	Identifier	len		887825	0					
ANR	889534	Argument	perm		887825	4					
ANR	889535	Identifier	perm		887825	0					
ANR	889536	Argument	0		887825	5					
ANR	889537	PrimaryExpression	0		887825	0					
ANR	889538	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , true )"	2499:8:73143:73193	887825	2	True				
ANR	889539	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , true )"		887825	0					
ANR	889540	Callee	r_debug_reg_sync		887825	0					
ANR	889541	Identifier	r_debug_reg_sync		887825	0					
ANR	889542	ArgumentList	core -> dbg		887825	1					
ANR	889543	Argument	core -> dbg		887825	0					
ANR	889544	PtrMemberAccess	core -> dbg		887825	0					
ANR	889545	Identifier	core		887825	0					
ANR	889546	Identifier	dbg		887825	1					
ANR	889547	Argument	R_REG_TYPE_DRX		887825	1					
ANR	889548	Identifier	R_REG_TYPE_DRX		887825	0					
ANR	889549	Argument	true		887825	2					
ANR	889550	Identifier	true		887825	0					
ANR	889551	ElseStatement	else		887825	0					
ANR	889552	CompoundStatement		249:13:6634:6634	887825	0					
ANR	889553	ExpressionStatement	"eprintf ( ""|usage: drx n [address] [length] [perm]\\n"" )"	2502:5:73224:73277	887825	0	True				
ANR	889554	CallExpression	"eprintf ( ""|usage: drx n [address] [length] [perm]\\n"" )"		887825	0					
ANR	889555	Callee	eprintf		887825	0					
ANR	889556	Identifier	eprintf		887825	0					
ANR	889557	ArgumentList	"""|usage: drx n [address] [length] [perm]\\n"""		887825	1					
ANR	889558	Argument	"""|usage: drx n [address] [length] [perm]\\n"""		887825	0					
ANR	889559	PrimaryExpression	"""|usage: drx n [address] [length] [perm]\\n"""		887825	0					
ANR	889560	ExpressionStatement	free ( s )	2504:6:73293:73301	887825	6	True				
ANR	889561	CallExpression	free ( s )		887825	0					
ANR	889562	Callee	free		887825	0					
ANR	889563	Identifier	free		887825	0					
ANR	889564	ArgumentList	s		887825	1					
ANR	889565	Argument	s		887825	0					
ANR	889566	Identifier	s		887825	0					
ANR	889567	BreakStatement	break ;	2505:7:73310:73315	887825	11	True				
ANR	889568	Label	case '?' :	2506:2:73319:73327	887825	12	True				
ANR	889569	Label	default :	2507:2:73331:73338	887825	13	True				
ANR	889570	Identifier	default		887825	0					
ANR	889571	ExpressionStatement	"r_core_cmd_help ( core , help_msg_drx )"	2508:3:73343:73379	887825	14	True				
ANR	889572	CallExpression	"r_core_cmd_help ( core , help_msg_drx )"		887825	0					
ANR	889573	Callee	r_core_cmd_help		887825	0					
ANR	889574	Identifier	r_core_cmd_help		887825	0					
ANR	889575	ArgumentList	core		887825	1					
ANR	889576	Argument	core		887825	0					
ANR	889577	Identifier	core		887825	0					
ANR	889578	Argument	help_msg_drx		887825	1					
ANR	889579	Identifier	help_msg_drx		887825	0					
ANR	889580	BreakStatement	break ;	2509:3:73384:73389	887825	15	True				
ANR	889581	BreakStatement	break ;	2511:2:73397:73402	887825	21	True				
ANR	889582	Label	case 's' :	2512:1:73405:73413	887825	22	True				
ANR	889583	SwitchStatement	switch ( str [ 1 ] )		887825	23					
ANR	889584	Condition	str [ 1 ]	2513:10:73434:73439	887825	0	True				
ANR	889585	ArrayIndexing	str [ 1 ]		887825	0					
ANR	889586	Identifier	str		887825	0					
ANR	889587	PrimaryExpression	1		887825	1					
ANR	889588	CompoundStatement		261:18:6859:6859	887825	1					
ANR	889589	Label	case '\\0' :	2514:2:73446:73455	887825	0	True				
ANR	889590	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , r_list_length ( core -> dbg -> reg -> regset [ 0 ] . pool ) )"	2515:3:73469:73546	887825	1	True				
ANR	889591	CallExpression	"r_cons_printf ( ""%d\\n"" , r_list_length ( core -> dbg -> reg -> regset [ 0 ] . pool ) )"		887825	0					
ANR	889592	Callee	r_cons_printf		887825	0					
ANR	889593	Identifier	r_cons_printf		887825	0					
ANR	889594	ArgumentList	"""%d\\n"""		887825	1					
ANR	889595	Argument	"""%d\\n"""		887825	0					
ANR	889596	PrimaryExpression	"""%d\\n"""		887825	0					
ANR	889597	Argument	r_list_length ( core -> dbg -> reg -> regset [ 0 ] . pool )		887825	1					
ANR	889598	CallExpression	r_list_length ( core -> dbg -> reg -> regset [ 0 ] . pool )		887825	0					
ANR	889599	Callee	r_list_length		887825	0					
ANR	889600	Identifier	r_list_length		887825	0					
ANR	889601	ArgumentList	core -> dbg -> reg -> regset [ 0 ] . pool		887825	1					
ANR	889602	Argument	core -> dbg -> reg -> regset [ 0 ] . pool		887825	0					
ANR	889603	MemberAccess	core -> dbg -> reg -> regset [ 0 ] . pool		887825	0					
ANR	889604	ArrayIndexing	core -> dbg -> reg -> regset [ 0 ]		887825	0					
ANR	889605	PtrMemberAccess	core -> dbg -> reg -> regset		887825	0					
ANR	889606	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	889607	PtrMemberAccess	core -> dbg		887825	0					
ANR	889608	Identifier	core		887825	0					
ANR	889609	Identifier	dbg		887825	1					
ANR	889610	Identifier	reg		887825	1					
ANR	889611	Identifier	regset		887825	1					
ANR	889612	PrimaryExpression	0		887825	1					
ANR	889613	Identifier	pool		887825	1					
ANR	889614	BreakStatement	break ;	2517:3:73551:73556	887825	2	True				
ANR	889615	Label	case '-' :	2518:2:73560:73568	887825	3	True				
ANR	889616	ExpressionStatement	r_reg_arena_pop ( core -> dbg -> reg )	2519:3:73583:73615	887825	4	True				
ANR	889617	CallExpression	r_reg_arena_pop ( core -> dbg -> reg )		887825	0					
ANR	889618	Callee	r_reg_arena_pop		887825	0					
ANR	889619	Identifier	r_reg_arena_pop		887825	0					
ANR	889620	ArgumentList	core -> dbg -> reg		887825	1					
ANR	889621	Argument	core -> dbg -> reg		887825	0					
ANR	889622	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	889623	PtrMemberAccess	core -> dbg		887825	0					
ANR	889624	Identifier	core		887825	0					
ANR	889625	Identifier	dbg		887825	1					
ANR	889626	Identifier	reg		887825	1					
ANR	889627	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"	2521:3:73670:73720	887825	5	True				
ANR	889628	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"		887825	0					
ANR	889629	Callee	r_debug_reg_sync		887825	0					
ANR	889630	Identifier	r_debug_reg_sync		887825	0					
ANR	889631	ArgumentList	core -> dbg		887825	1					
ANR	889632	Argument	core -> dbg		887825	0					
ANR	889633	PtrMemberAccess	core -> dbg		887825	0					
ANR	889634	Identifier	core		887825	0					
ANR	889635	Identifier	dbg		887825	1					
ANR	889636	Argument	R_REG_TYPE_GPR		887825	1					
ANR	889637	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	889638	Argument	true		887825	2					
ANR	889639	Identifier	true		887825	0					
ANR	889640	BreakStatement	break ;	2522:3:73725:73730	887825	6	True				
ANR	889641	Label	case '+' :	2523:2:73734:73742	887825	7	True				
ANR	889642	ExpressionStatement	r_reg_arena_push ( core -> dbg -> reg )	2524:3:73757:73790	887825	8	True				
ANR	889643	CallExpression	r_reg_arena_push ( core -> dbg -> reg )		887825	0					
ANR	889644	Callee	r_reg_arena_push		887825	0					
ANR	889645	Identifier	r_reg_arena_push		887825	0					
ANR	889646	ArgumentList	core -> dbg -> reg		887825	1					
ANR	889647	Argument	core -> dbg -> reg		887825	0					
ANR	889648	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	889649	PtrMemberAccess	core -> dbg		887825	0					
ANR	889650	Identifier	core		887825	0					
ANR	889651	Identifier	dbg		887825	1					
ANR	889652	Identifier	reg		887825	1					
ANR	889653	BreakStatement	break ;	2525:3:73795:73800	887825	9	True				
ANR	889654	Label	case '?' :	2526:2:73804:73812	887825	10	True				
ANR	889655	Label	default :	2527:2:73826:73833	887825	11	True				
ANR	889656	Identifier	default		887825	0					
ANR	889657	ExpressionStatement	"r_core_cmd_help ( core , help_msg_drs )"	2528:3:73838:73874	887825	12	True				
ANR	889658	CallExpression	"r_core_cmd_help ( core , help_msg_drs )"		887825	0					
ANR	889659	Callee	r_core_cmd_help		887825	0					
ANR	889660	Identifier	r_core_cmd_help		887825	0					
ANR	889661	ArgumentList	core		887825	1					
ANR	889662	Argument	core		887825	0					
ANR	889663	Identifier	core		887825	0					
ANR	889664	Argument	help_msg_drs		887825	1					
ANR	889665	Identifier	help_msg_drs		887825	0					
ANR	889666	BreakStatement	break ;	2529:3:73879:73884	887825	13	True				
ANR	889667	BreakStatement	break ;	2531:2:73892:73897	887825	24	True				
ANR	889668	Label	case 'm' :	2532:1:73900:73908	887825	25	True				
ANR	889669	IfStatement	if ( str [ 1 ] == '?' )		887825	26					
ANR	889670	Condition	str [ 1 ] == '?'	2533:6:73925:73935	887825	0	True				
ANR	889671	EqualityExpression	str [ 1 ] == '?'		887825	0		==			
ANR	889672	ArrayIndexing	str [ 1 ]		887825	0					
ANR	889673	Identifier	str		887825	0					
ANR	889674	PrimaryExpression	1		887825	1					
ANR	889675	PrimaryExpression	'?'		887825	1					
ANR	889676	CompoundStatement		281:19:7355:7355	887825	1					
ANR	889677	ExpressionStatement	"eprintf ( ""usage: drm [reg] [idx] [wordsize] [= value]\\n"" )"	2534:3:73943:74000	887825	0	True				
ANR	889678	CallExpression	"eprintf ( ""usage: drm [reg] [idx] [wordsize] [= value]\\n"" )"		887825	0					
ANR	889679	Callee	eprintf		887825	0					
ANR	889680	Identifier	eprintf		887825	0					
ANR	889681	ArgumentList	"""usage: drm [reg] [idx] [wordsize] [= value]\\n"""		887825	1					
ANR	889682	Argument	"""usage: drm [reg] [idx] [wordsize] [= value]\\n"""		887825	0					
ANR	889683	PrimaryExpression	"""usage: drm [reg] [idx] [wordsize] [= value]\\n"""		887825	0					
ANR	889684	ElseStatement	else		887825	0					
ANR	889685	IfStatement	if ( str [ 1 ] == ' ' )		887825	0					
ANR	889686	Condition	str [ 1 ] == ' '	2535:13:74015:74025	887825	0	True				
ANR	889687	EqualityExpression	str [ 1 ] == ' '		887825	0		==			
ANR	889688	ArrayIndexing	str [ 1 ]		887825	0					
ANR	889689	Identifier	str		887825	0					
ANR	889690	PrimaryExpression	1		887825	1					
ANR	889691	PrimaryExpression	' '		887825	1					
ANR	889692	CompoundStatement		301:3:7793:7846	887825	1					
ANR	889693	IdentifierDeclStatement	int word = 0 ;	2536:3:74033:74045	887825	0	True				
ANR	889694	IdentifierDecl	word = 0		887825	0					
ANR	889695	IdentifierDeclType	int		887825	0					
ANR	889696	Identifier	word		887825	1					
ANR	889697	AssignmentExpression	word = 0		887825	2		=			
ANR	889698	Identifier	word		887825	0					
ANR	889699	PrimaryExpression	0		887825	1					
ANR	889700	IdentifierDeclStatement	int size = 0 ;	2537:3:74050:74062	887825	1	True				
ANR	889701	IdentifierDecl	size = 0		887825	0					
ANR	889702	IdentifierDeclType	int		887825	0					
ANR	889703	Identifier	size		887825	1					
ANR	889704	AssignmentExpression	size = 0		887825	2		=			
ANR	889705	Identifier	size		887825	0					
ANR	889706	PrimaryExpression	0		887825	1					
ANR	889707	IdentifierDeclStatement	"char * q , * p , * name = strdup ( str + 2 ) ;"	2538:3:74075:74110	887825	2	True				
ANR	889708	IdentifierDecl	* q		887825	0					
ANR	889709	IdentifierDeclType	char *		887825	0					
ANR	889710	Identifier	q		887825	1					
ANR	889711	IdentifierDecl	* p		887825	1					
ANR	889712	IdentifierDeclType	char *		887825	0					
ANR	889713	Identifier	p		887825	1					
ANR	889714	IdentifierDecl	* name = strdup ( str + 2 )		887825	2					
ANR	889715	IdentifierDeclType	char *		887825	0					
ANR	889716	Identifier	name		887825	1					
ANR	889717	AssignmentExpression	* name = strdup ( str + 2 )		887825	2		=			
ANR	889718	Identifier	name		887825	0					
ANR	889719	CallExpression	strdup ( str + 2 )		887825	1					
ANR	889720	Callee	strdup		887825	0					
ANR	889721	Identifier	strdup		887825	0					
ANR	889722	ArgumentList	str + 2		887825	1					
ANR	889723	Argument	str + 2		887825	0					
ANR	889724	AdditiveExpression	str + 2		887825	0		+			
ANR	889725	Identifier	str		887825	0					
ANR	889726	PrimaryExpression	2		887825	1					
ANR	889727	IdentifierDeclStatement	"char * eq = strchr ( name , '=' ) ;"	2539:3:74115:74144	887825	3	True				
ANR	889728	IdentifierDecl	"* eq = strchr ( name , '=' )"		887825	0					
ANR	889729	IdentifierDeclType	char *		887825	0					
ANR	889730	Identifier	eq		887825	1					
ANR	889731	AssignmentExpression	"* eq = strchr ( name , '=' )"		887825	2		=			
ANR	889732	Identifier	eq		887825	0					
ANR	889733	CallExpression	"strchr ( name , '=' )"		887825	1					
ANR	889734	Callee	strchr		887825	0					
ANR	889735	Identifier	strchr		887825	0					
ANR	889736	ArgumentList	name		887825	1					
ANR	889737	Argument	name		887825	0					
ANR	889738	Identifier	name		887825	0					
ANR	889739	Argument	'='		887825	1					
ANR	889740	PrimaryExpression	'='		887825	0					
ANR	889741	IfStatement	if ( eq )		887825	4					
ANR	889742	Condition	eq	2540:7:74153:74154	887825	0	True				
ANR	889743	Identifier	eq		887825	0					
ANR	889744	CompoundStatement		288:11:7574:7574	887825	1					
ANR	889745	ExpressionStatement	* eq ++ = 0	2541:4:74163:74172	887825	0	True				
ANR	889746	AssignmentExpression	* eq ++ = 0		887825	0		=			
ANR	889747	UnaryOperationExpression	* eq ++		887825	0					
ANR	889748	UnaryOperator	*		887825	0					
ANR	889749	PostIncDecOperationExpression	eq ++		887825	1					
ANR	889750	Identifier	eq		887825	0					
ANR	889751	IncDec	++		887825	1					
ANR	889752	PrimaryExpression	0		887825	1					
ANR	889753	ExpressionStatement	"p = strchr ( name , ' ' )"	2543:3:74182:74204	887825	5	True				
ANR	889754	AssignmentExpression	"p = strchr ( name , ' ' )"		887825	0		=			
ANR	889755	Identifier	p		887825	0					
ANR	889756	CallExpression	"strchr ( name , ' ' )"		887825	1					
ANR	889757	Callee	strchr		887825	0					
ANR	889758	Identifier	strchr		887825	0					
ANR	889759	ArgumentList	name		887825	1					
ANR	889760	Argument	name		887825	0					
ANR	889761	Identifier	name		887825	0					
ANR	889762	Argument	' '		887825	1					
ANR	889763	PrimaryExpression	' '		887825	0					
ANR	889764	IfStatement	if ( p )		887825	6					
ANR	889765	Condition	p	2544:7:74213:74213	887825	0	True				
ANR	889766	Identifier	p		887825	0					
ANR	889767	CompoundStatement		292:10:7633:7633	887825	1					
ANR	889768	ExpressionStatement	* p ++ = 0	2545:4:74222:74230	887825	0	True				
ANR	889769	AssignmentExpression	* p ++ = 0		887825	0		=			
ANR	889770	UnaryOperationExpression	* p ++		887825	0					
ANR	889771	UnaryOperator	*		887825	0					
ANR	889772	PostIncDecOperationExpression	p ++		887825	1					
ANR	889773	Identifier	p		887825	0					
ANR	889774	IncDec	++		887825	1					
ANR	889775	PrimaryExpression	0		887825	1					
ANR	889776	ExpressionStatement	"q = strchr ( p , ' ' )"	2546:4:74236:74255	887825	1	True				
ANR	889777	AssignmentExpression	"q = strchr ( p , ' ' )"		887825	0		=			
ANR	889778	Identifier	q		887825	0					
ANR	889779	CallExpression	"strchr ( p , ' ' )"		887825	1					
ANR	889780	Callee	strchr		887825	0					
ANR	889781	Identifier	strchr		887825	0					
ANR	889782	ArgumentList	p		887825	1					
ANR	889783	Argument	p		887825	0					
ANR	889784	Identifier	p		887825	0					
ANR	889785	Argument	' '		887825	1					
ANR	889786	PrimaryExpression	' '		887825	0					
ANR	889787	IfStatement	if ( q )		887825	2					
ANR	889788	Condition	q	2547:8:74265:74265	887825	0	True				
ANR	889789	Identifier	q		887825	0					
ANR	889790	CompoundStatement		295:11:7685:7685	887825	1					
ANR	889791	ExpressionStatement	* q ++ = 0	2548:5:74275:74283	887825	0	True				
ANR	889792	AssignmentExpression	* q ++ = 0		887825	0		=			
ANR	889793	UnaryOperationExpression	* q ++		887825	0					
ANR	889794	UnaryOperator	*		887825	0					
ANR	889795	PostIncDecOperationExpression	q ++		887825	1					
ANR	889796	Identifier	q		887825	0					
ANR	889797	IncDec	++		887825	1					
ANR	889798	PrimaryExpression	0		887825	1					
ANR	889799	ExpressionStatement	"size = r_num_math ( core -> num , q )"	2549:5:74290:74322	887825	1	True				
ANR	889800	AssignmentExpression	"size = r_num_math ( core -> num , q )"		887825	0		=			
ANR	889801	Identifier	size		887825	0					
ANR	889802	CallExpression	"r_num_math ( core -> num , q )"		887825	1					
ANR	889803	Callee	r_num_math		887825	0					
ANR	889804	Identifier	r_num_math		887825	0					
ANR	889805	ArgumentList	core -> num		887825	1					
ANR	889806	Argument	core -> num		887825	0					
ANR	889807	PtrMemberAccess	core -> num		887825	0					
ANR	889808	Identifier	core		887825	0					
ANR	889809	Identifier	num		887825	1					
ANR	889810	Argument	q		887825	1					
ANR	889811	Identifier	q		887825	0					
ANR	889812	ExpressionStatement	"word = r_num_math ( core -> num , p )"	2551:4:74334:74366	887825	3	True				
ANR	889813	AssignmentExpression	"word = r_num_math ( core -> num , p )"		887825	0		=			
ANR	889814	Identifier	word		887825	0					
ANR	889815	CallExpression	"r_num_math ( core -> num , p )"		887825	1					
ANR	889816	Callee	r_num_math		887825	0					
ANR	889817	Identifier	r_num_math		887825	0					
ANR	889818	ArgumentList	core -> num		887825	1					
ANR	889819	Argument	core -> num		887825	0					
ANR	889820	PtrMemberAccess	core -> num		887825	0					
ANR	889821	Identifier	core		887825	0					
ANR	889822	Identifier	num		887825	1					
ANR	889823	Argument	p		887825	1					
ANR	889824	Identifier	p		887825	0					
ANR	889825	IdentifierDeclStatement	"RRegItem * item = r_reg_get ( core -> dbg -> reg , name , - 1 ) ;"	2553:3:74376:74429	887825	7	True				
ANR	889826	IdentifierDecl	"* item = r_reg_get ( core -> dbg -> reg , name , - 1 )"		887825	0					
ANR	889827	IdentifierDeclType	RRegItem *		887825	0					
ANR	889828	Identifier	item		887825	1					
ANR	889829	AssignmentExpression	"* item = r_reg_get ( core -> dbg -> reg , name , - 1 )"		887825	2		=			
ANR	889830	Identifier	item		887825	0					
ANR	889831	CallExpression	"r_reg_get ( core -> dbg -> reg , name , - 1 )"		887825	1					
ANR	889832	Callee	r_reg_get		887825	0					
ANR	889833	Identifier	r_reg_get		887825	0					
ANR	889834	ArgumentList	core -> dbg -> reg		887825	1					
ANR	889835	Argument	core -> dbg -> reg		887825	0					
ANR	889836	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	889837	PtrMemberAccess	core -> dbg		887825	0					
ANR	889838	Identifier	core		887825	0					
ANR	889839	Identifier	dbg		887825	1					
ANR	889840	Identifier	reg		887825	1					
ANR	889841	Argument	name		887825	1					
ANR	889842	Identifier	name		887825	0					
ANR	889843	Argument	- 1		887825	2					
ANR	889844	UnaryOperationExpression	- 1		887825	0					
ANR	889845	UnaryOperator	-		887825	0					
ANR	889846	PrimaryExpression	1		887825	1					
ANR	889847	IfStatement	if ( item )		887825	8					
ANR	889848	Condition	item	2554:7:74438:74441	887825	0	True				
ANR	889849	Identifier	item		887825	0					
ANR	889850	CompoundStatement		302:13:7861:7861	887825	1					
ANR	889851	IfStatement	if ( eq )		887825	0					
ANR	889852	Condition	eq	2555:8:74454:74455	887825	0	True				
ANR	889853	Identifier	eq		887825	0					
ANR	889854	CompoundStatement		304:5:7882:7919	887825	1					
ANR	889855	IdentifierDeclStatement	"ut64 val = r_num_math ( core -> num , eq ) ;"	2556:5:74465:74502	887825	0	True				
ANR	889856	IdentifierDecl	"val = r_num_math ( core -> num , eq )"		887825	0					
ANR	889857	IdentifierDeclType	ut64		887825	0					
ANR	889858	Identifier	val		887825	1					
ANR	889859	AssignmentExpression	"val = r_num_math ( core -> num , eq )"		887825	2		=			
ANR	889860	Identifier	val		887825	0					
ANR	889861	CallExpression	"r_num_math ( core -> num , eq )"		887825	1					
ANR	889862	Callee	r_num_math		887825	0					
ANR	889863	Identifier	r_num_math		887825	0					
ANR	889864	ArgumentList	core -> num		887825	1					
ANR	889865	Argument	core -> num		887825	0					
ANR	889866	PtrMemberAccess	core -> num		887825	0					
ANR	889867	Identifier	core		887825	0					
ANR	889868	Identifier	num		887825	1					
ANR	889869	Argument	eq		887825	1					
ANR	889870	Identifier	eq		887825	0					
ANR	889871	ExpressionStatement	"r_reg_set_pack ( core -> dbg -> reg , item , word , size , val )"	2557:5:74509:74563	887825	1	True				
ANR	889872	CallExpression	"r_reg_set_pack ( core -> dbg -> reg , item , word , size , val )"		887825	0					
ANR	889873	Callee	r_reg_set_pack		887825	0					
ANR	889874	Identifier	r_reg_set_pack		887825	0					
ANR	889875	ArgumentList	core -> dbg -> reg		887825	1					
ANR	889876	Argument	core -> dbg -> reg		887825	0					
ANR	889877	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	889878	PtrMemberAccess	core -> dbg		887825	0					
ANR	889879	Identifier	core		887825	0					
ANR	889880	Identifier	dbg		887825	1					
ANR	889881	Identifier	reg		887825	1					
ANR	889882	Argument	item		887825	1					
ANR	889883	Identifier	item		887825	0					
ANR	889884	Argument	word		887825	2					
ANR	889885	Identifier	word		887825	0					
ANR	889886	Argument	size		887825	3					
ANR	889887	Identifier	size		887825	0					
ANR	889888	Argument	val		887825	4					
ANR	889889	Identifier	val		887825	0					
ANR	889890	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"	2558:5:74570:74620	887825	2	True				
ANR	889891	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"		887825	0					
ANR	889892	Callee	r_debug_reg_sync		887825	0					
ANR	889893	Identifier	r_debug_reg_sync		887825	0					
ANR	889894	ArgumentList	core -> dbg		887825	1					
ANR	889895	Argument	core -> dbg		887825	0					
ANR	889896	PtrMemberAccess	core -> dbg		887825	0					
ANR	889897	Identifier	core		887825	0					
ANR	889898	Identifier	dbg		887825	1					
ANR	889899	Argument	R_REG_TYPE_GPR		887825	1					
ANR	889900	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	889901	Argument	true		887825	2					
ANR	889902	Identifier	true		887825	0					
ANR	889903	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_MMX , true )"	2559:5:74627:74677	887825	3	True				
ANR	889904	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_MMX , true )"		887825	0					
ANR	889905	Callee	r_debug_reg_sync		887825	0					
ANR	889906	Identifier	r_debug_reg_sync		887825	0					
ANR	889907	ArgumentList	core -> dbg		887825	1					
ANR	889908	Argument	core -> dbg		887825	0					
ANR	889909	PtrMemberAccess	core -> dbg		887825	0					
ANR	889910	Identifier	core		887825	0					
ANR	889911	Identifier	dbg		887825	1					
ANR	889912	Argument	R_REG_TYPE_MMX		887825	1					
ANR	889913	Identifier	R_REG_TYPE_MMX		887825	0					
ANR	889914	Argument	true		887825	2					
ANR	889915	Identifier	true		887825	0					
ANR	889916	ElseStatement	else		887825	0					
ANR	889917	CompoundStatement		311:5:8230:8290	887825	0					
ANR	889918	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	2561:5:74697:74748	887825	0	True				
ANR	889919	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		887825	0					
ANR	889920	Callee	r_debug_reg_sync		887825	0					
ANR	889921	Identifier	r_debug_reg_sync		887825	0					
ANR	889922	ArgumentList	core -> dbg		887825	1					
ANR	889923	Argument	core -> dbg		887825	0					
ANR	889924	PtrMemberAccess	core -> dbg		887825	0					
ANR	889925	Identifier	core		887825	0					
ANR	889926	Identifier	dbg		887825	1					
ANR	889927	Argument	R_REG_TYPE_GPR		887825	1					
ANR	889928	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	889929	Argument	false		887825	2					
ANR	889930	Identifier	false		887825	0					
ANR	889931	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_MMX , false )"	2562:5:74755:74806	887825	1	True				
ANR	889932	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_MMX , false )"		887825	0					
ANR	889933	Callee	r_debug_reg_sync		887825	0					
ANR	889934	Identifier	r_debug_reg_sync		887825	0					
ANR	889935	ArgumentList	core -> dbg		887825	1					
ANR	889936	Argument	core -> dbg		887825	0					
ANR	889937	PtrMemberAccess	core -> dbg		887825	0					
ANR	889938	Identifier	core		887825	0					
ANR	889939	Identifier	dbg		887825	1					
ANR	889940	Argument	R_REG_TYPE_MMX		887825	1					
ANR	889941	Identifier	R_REG_TYPE_MMX		887825	0					
ANR	889942	Argument	false		887825	2					
ANR	889943	Identifier	false		887825	0					
ANR	889944	IdentifierDeclStatement	"ut64 res = r_reg_get_pack ( core -> dbg -> reg , item , word , size ) ;"	2563:5:74813:74873	887825	2	True				
ANR	889945	IdentifierDecl	"res = r_reg_get_pack ( core -> dbg -> reg , item , word , size )"		887825	0					
ANR	889946	IdentifierDeclType	ut64		887825	0					
ANR	889947	Identifier	res		887825	1					
ANR	889948	AssignmentExpression	"res = r_reg_get_pack ( core -> dbg -> reg , item , word , size )"		887825	2		=			
ANR	889949	Identifier	res		887825	0					
ANR	889950	CallExpression	"r_reg_get_pack ( core -> dbg -> reg , item , word , size )"		887825	1					
ANR	889951	Callee	r_reg_get_pack		887825	0					
ANR	889952	Identifier	r_reg_get_pack		887825	0					
ANR	889953	ArgumentList	core -> dbg -> reg		887825	1					
ANR	889954	Argument	core -> dbg -> reg		887825	0					
ANR	889955	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	889956	PtrMemberAccess	core -> dbg		887825	0					
ANR	889957	Identifier	core		887825	0					
ANR	889958	Identifier	dbg		887825	1					
ANR	889959	Identifier	reg		887825	1					
ANR	889960	Argument	item		887825	1					
ANR	889961	Identifier	item		887825	0					
ANR	889962	Argument	word		887825	2					
ANR	889963	Identifier	word		887825	0					
ANR	889964	Argument	size		887825	3					
ANR	889965	Identifier	size		887825	0					
ANR	889966	Statement	r_cons_printf	2564:5:74880:74892	887825	3	True				
ANR	889967	Statement	(	2564:19:74894:74894	887825	4	True				
ANR	889968	Statement	"""0x%08"""	2564:20:74895:74901	887825	5	True				
ANR	889969	Statement	PFMT64x	2564:27:74902:74908	887825	6	True				
ANR	889970	Statement	"""\\n"""	2564:34:74909:74912	887825	7	True				
ANR	889971	Statement	","	2564:38:74913:74913	887825	8	True				
ANR	889972	Statement	res	2564:40:74915:74917	887825	9	True				
ANR	889973	Statement	)	2564:43:74918:74918	887825	10	True				
ANR	889974	ExpressionStatement		2564:44:74919:74919	887825	11	True				
ANR	889975	ElseStatement	else		887825	0					
ANR	889976	CompoundStatement		314:10:8354:8354	887825	0					
ANR	889977	ExpressionStatement	"eprintf ( ""cannot find multimedia register '%s'\\n"" , name )"	2567:4:74943:74999	887825	0	True				
ANR	889978	CallExpression	"eprintf ( ""cannot find multimedia register '%s'\\n"" , name )"		887825	0					
ANR	889979	Callee	eprintf		887825	0					
ANR	889980	Identifier	eprintf		887825	0					
ANR	889981	ArgumentList	"""cannot find multimedia register '%s'\\n"""		887825	1					
ANR	889982	Argument	"""cannot find multimedia register '%s'\\n"""		887825	0					
ANR	889983	PrimaryExpression	"""cannot find multimedia register '%s'\\n"""		887825	0					
ANR	889984	Argument	name		887825	1					
ANR	889985	Identifier	name		887825	0					
ANR	889986	ExpressionStatement	free ( name )	2569:3:75009:75020	887825	9	True				
ANR	889987	CallExpression	free ( name )		887825	0					
ANR	889988	Callee	free		887825	0					
ANR	889989	Identifier	free		887825	0					
ANR	889990	ArgumentList	name		887825	1					
ANR	889991	Argument	name		887825	0					
ANR	889992	Identifier	name		887825	0					
ANR	889993	ElseStatement	else		887825	0					
ANR	889994	CompoundStatement		318:9:8448:8448	887825	0					
ANR	889995	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , - R_REG_TYPE_MMX , false )"	2571:3:75036:75088	887825	0	True				
ANR	889996	CallExpression	"r_debug_reg_sync ( core -> dbg , - R_REG_TYPE_MMX , false )"		887825	0					
ANR	889997	Callee	r_debug_reg_sync		887825	0					
ANR	889998	Identifier	r_debug_reg_sync		887825	0					
ANR	889999	ArgumentList	core -> dbg		887825	1					
ANR	890000	Argument	core -> dbg		887825	0					
ANR	890001	PtrMemberAccess	core -> dbg		887825	0					
ANR	890002	Identifier	core		887825	0					
ANR	890003	Identifier	dbg		887825	1					
ANR	890004	Argument	- R_REG_TYPE_MMX		887825	1					
ANR	890005	UnaryOperationExpression	- R_REG_TYPE_MMX		887825	0					
ANR	890006	UnaryOperator	-		887825	0					
ANR	890007	Identifier	R_REG_TYPE_MMX		887825	1					
ANR	890008	Argument	false		887825	2					
ANR	890009	Identifier	false		887825	0					
ANR	890010	BreakStatement	break ;	2574:2:75130:75135	887825	27	True				
ANR	890011	Label	case 'f' :	2575:1:75138:75146	887825	28	True				
ANR	890012	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , - R_REG_TYPE_FPU , false )"	2577:2:75239:75291	887825	29	True				
ANR	890013	CallExpression	"r_debug_reg_sync ( core -> dbg , - R_REG_TYPE_FPU , false )"		887825	0					
ANR	890014	Callee	r_debug_reg_sync		887825	0					
ANR	890015	Identifier	r_debug_reg_sync		887825	0					
ANR	890016	ArgumentList	core -> dbg		887825	1					
ANR	890017	Argument	core -> dbg		887825	0					
ANR	890018	PtrMemberAccess	core -> dbg		887825	0					
ANR	890019	Identifier	core		887825	0					
ANR	890020	Identifier	dbg		887825	1					
ANR	890021	Argument	- R_REG_TYPE_FPU		887825	1					
ANR	890022	UnaryOperationExpression	- R_REG_TYPE_FPU		887825	0					
ANR	890023	UnaryOperator	-		887825	0					
ANR	890024	Identifier	R_REG_TYPE_FPU		887825	1					
ANR	890025	Argument	false		887825	2					
ANR	890026	Identifier	false		887825	0					
ANR	890027	IfStatement	if ( str [ 1 ] == '?' )		887825	30					
ANR	890028	Condition	str [ 1 ] == '?'	2579:6:75333:75343	887825	0	True				
ANR	890029	EqualityExpression	str [ 1 ] == '?'		887825	0		==			
ANR	890030	ArrayIndexing	str [ 1 ]		887825	0					
ANR	890031	Identifier	str		887825	0					
ANR	890032	PrimaryExpression	1		887825	1					
ANR	890033	PrimaryExpression	'?'		887825	1					
ANR	890034	CompoundStatement		327:19:8763:8763	887825	1					
ANR	890035	ExpressionStatement	"eprintf ( ""usage: drf [fpureg] [= value]\\n"" )"	2580:3:75351:75394	887825	0	True				
ANR	890036	CallExpression	"eprintf ( ""usage: drf [fpureg] [= value]\\n"" )"		887825	0					
ANR	890037	Callee	eprintf		887825	0					
ANR	890038	Identifier	eprintf		887825	0					
ANR	890039	ArgumentList	"""usage: drf [fpureg] [= value]\\n"""		887825	1					
ANR	890040	Argument	"""usage: drf [fpureg] [= value]\\n"""		887825	0					
ANR	890041	PrimaryExpression	"""usage: drf [fpureg] [= value]\\n"""		887825	0					
ANR	890042	ElseStatement	else		887825	0					
ANR	890043	IfStatement	if ( str [ 1 ] == ' ' )		887825	0					
ANR	890044	Condition	str [ 1 ] == ' '	2581:13:75409:75419	887825	0	True				
ANR	890045	EqualityExpression	str [ 1 ] == ' '		887825	0		==			
ANR	890046	ArrayIndexing	str [ 1 ]		887825	0					
ANR	890047	Identifier	str		887825	0					
ANR	890048	PrimaryExpression	1		887825	1					
ANR	890049	PrimaryExpression	' '		887825	1					
ANR	890050	CompoundStatement		339:3:9005:9058	887825	1					
ANR	890051	IdentifierDeclStatement	"char * p , * name = strdup ( str + 2 ) ;"	2582:3:75427:75458	887825	0	True				
ANR	890052	IdentifierDecl	* p		887825	0					
ANR	890053	IdentifierDeclType	char *		887825	0					
ANR	890054	Identifier	p		887825	1					
ANR	890055	IdentifierDecl	* name = strdup ( str + 2 )		887825	1					
ANR	890056	IdentifierDeclType	char *		887825	0					
ANR	890057	Identifier	name		887825	1					
ANR	890058	AssignmentExpression	* name = strdup ( str + 2 )		887825	2		=			
ANR	890059	Identifier	name		887825	0					
ANR	890060	CallExpression	strdup ( str + 2 )		887825	1					
ANR	890061	Callee	strdup		887825	0					
ANR	890062	Identifier	strdup		887825	0					
ANR	890063	ArgumentList	str + 2		887825	1					
ANR	890064	Argument	str + 2		887825	0					
ANR	890065	AdditiveExpression	str + 2		887825	0		+			
ANR	890066	Identifier	str		887825	0					
ANR	890067	PrimaryExpression	2		887825	1					
ANR	890068	IdentifierDeclStatement	"char * eq = strchr ( name , '=' ) ;"	2583:3:75463:75492	887825	1	True				
ANR	890069	IdentifierDecl	"* eq = strchr ( name , '=' )"		887825	0					
ANR	890070	IdentifierDeclType	char *		887825	0					
ANR	890071	Identifier	eq		887825	1					
ANR	890072	AssignmentExpression	"* eq = strchr ( name , '=' )"		887825	2		=			
ANR	890073	Identifier	eq		887825	0					
ANR	890074	CallExpression	"strchr ( name , '=' )"		887825	1					
ANR	890075	Callee	strchr		887825	0					
ANR	890076	Identifier	strchr		887825	0					
ANR	890077	ArgumentList	name		887825	1					
ANR	890078	Argument	name		887825	0					
ANR	890079	Identifier	name		887825	0					
ANR	890080	Argument	'='		887825	1					
ANR	890081	PrimaryExpression	'='		887825	0					
ANR	890082	IfStatement	if ( eq )		887825	2					
ANR	890083	Condition	eq	2584:7:75501:75502	887825	0	True				
ANR	890084	Identifier	eq		887825	0					
ANR	890085	CompoundStatement		332:11:8922:8922	887825	1					
ANR	890086	ExpressionStatement	* eq ++ = 0	2585:4:75511:75520	887825	0	True				
ANR	890087	AssignmentExpression	* eq ++ = 0		887825	0		=			
ANR	890088	UnaryOperationExpression	* eq ++		887825	0					
ANR	890089	UnaryOperator	*		887825	0					
ANR	890090	PostIncDecOperationExpression	eq ++		887825	1					
ANR	890091	Identifier	eq		887825	0					
ANR	890092	IncDec	++		887825	1					
ANR	890093	PrimaryExpression	0		887825	1					
ANR	890094	ExpressionStatement	"p = strchr ( name , ' ' )"	2587:3:75530:75552	887825	3	True				
ANR	890095	AssignmentExpression	"p = strchr ( name , ' ' )"		887825	0		=			
ANR	890096	Identifier	p		887825	0					
ANR	890097	CallExpression	"strchr ( name , ' ' )"		887825	1					
ANR	890098	Callee	strchr		887825	0					
ANR	890099	Identifier	strchr		887825	0					
ANR	890100	ArgumentList	name		887825	1					
ANR	890101	Argument	name		887825	0					
ANR	890102	Identifier	name		887825	0					
ANR	890103	Argument	' '		887825	1					
ANR	890104	PrimaryExpression	' '		887825	0					
ANR	890105	IfStatement	if ( p )		887825	4					
ANR	890106	Condition	p	2588:7:75561:75561	887825	0	True				
ANR	890107	Identifier	p		887825	0					
ANR	890108	CompoundStatement		336:10:8981:8981	887825	1					
ANR	890109	ExpressionStatement	* p ++ = 0	2589:4:75570:75578	887825	0	True				
ANR	890110	AssignmentExpression	* p ++ = 0		887825	0		=			
ANR	890111	UnaryOperationExpression	* p ++		887825	0					
ANR	890112	UnaryOperator	*		887825	0					
ANR	890113	PostIncDecOperationExpression	p ++		887825	1					
ANR	890114	Identifier	p		887825	0					
ANR	890115	IncDec	++		887825	1					
ANR	890116	PrimaryExpression	0		887825	1					
ANR	890117	IdentifierDeclStatement	"RRegItem * item = r_reg_get ( core -> dbg -> reg , name , - 1 ) ;"	2591:3:75588:75641	887825	5	True				
ANR	890118	IdentifierDecl	"* item = r_reg_get ( core -> dbg -> reg , name , - 1 )"		887825	0					
ANR	890119	IdentifierDeclType	RRegItem *		887825	0					
ANR	890120	Identifier	item		887825	1					
ANR	890121	AssignmentExpression	"* item = r_reg_get ( core -> dbg -> reg , name , - 1 )"		887825	2		=			
ANR	890122	Identifier	item		887825	0					
ANR	890123	CallExpression	"r_reg_get ( core -> dbg -> reg , name , - 1 )"		887825	1					
ANR	890124	Callee	r_reg_get		887825	0					
ANR	890125	Identifier	r_reg_get		887825	0					
ANR	890126	ArgumentList	core -> dbg -> reg		887825	1					
ANR	890127	Argument	core -> dbg -> reg		887825	0					
ANR	890128	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	890129	PtrMemberAccess	core -> dbg		887825	0					
ANR	890130	Identifier	core		887825	0					
ANR	890131	Identifier	dbg		887825	1					
ANR	890132	Identifier	reg		887825	1					
ANR	890133	Argument	name		887825	1					
ANR	890134	Identifier	name		887825	0					
ANR	890135	Argument	- 1		887825	2					
ANR	890136	UnaryOperationExpression	- 1		887825	0					
ANR	890137	UnaryOperator	-		887825	0					
ANR	890138	PrimaryExpression	1		887825	1					
ANR	890139	IfStatement	if ( item )		887825	6					
ANR	890140	Condition	item	2592:7:75650:75653	887825	0	True				
ANR	890141	Identifier	item		887825	0					
ANR	890142	CompoundStatement		340:13:9073:9073	887825	1					
ANR	890143	IfStatement	if ( eq )		887825	0					
ANR	890144	Condition	eq	2593:8:75666:75667	887825	0	True				
ANR	890145	Identifier	eq		887825	0					
ANR	890146	CompoundStatement		344:5:9139:9157	887825	1					
ANR	890147	IdentifierDeclStatement	long double val = 0.0f ;	2594:5:75677:75699	887825	0	True				
ANR	890148	IdentifierDecl	val = 0.0f		887825	0					
ANR	890149	IdentifierDeclType	long double		887825	0					
ANR	890150	Identifier	val		887825	1					
ANR	890151	AssignmentExpression	val = 0.0f		887825	2		=			
ANR	890152	Identifier	val		887825	0					
ANR	890153	PrimaryExpression	0.0f		887825	1					
ANR	890154	IdentifierDeclStatement	double dval = 0.0f ;	2596:5:75722:75740	887825	1	True				
ANR	890155	IdentifierDecl	dval = 0.0f		887825	0					
ANR	890156	IdentifierDeclType	double		887825	0					
ANR	890157	Identifier	dval		887825	1					
ANR	890158	AssignmentExpression	dval = 0.0f		887825	2		=			
ANR	890159	Identifier	dval		887825	0					
ANR	890160	PrimaryExpression	0.0f		887825	1					
ANR	890161	ExpressionStatement	"sscanf ( eq , ""%lf"" , ( double * ) & dval )"	2597:5:75747:75781	887825	2	True				
ANR	890162	CallExpression	"sscanf ( eq , ""%lf"" , ( double * ) & dval )"		887825	0					
ANR	890163	Callee	sscanf		887825	0					
ANR	890164	Identifier	sscanf		887825	0					
ANR	890165	ArgumentList	eq		887825	1					
ANR	890166	Argument	eq		887825	0					
ANR	890167	Identifier	eq		887825	0					
ANR	890168	Argument	"""%lf"""		887825	1					
ANR	890169	PrimaryExpression	"""%lf"""		887825	0					
ANR	890170	Argument	( double * ) & dval		887825	2					
ANR	890171	CastExpression	( double * ) & dval		887825	0					
ANR	890172	CastTarget	double *		887825	0					
ANR	890173	UnaryOperationExpression	& dval		887825	1					
ANR	890174	UnaryOperator	&		887825	0					
ANR	890175	Identifier	dval		887825	1					
ANR	890176	ExpressionStatement	val = dval	2598:5:75788:75798	887825	3	True				
ANR	890177	AssignmentExpression	val = dval		887825	0		=			
ANR	890178	Identifier	val		887825	0					
ANR	890179	Identifier	dval		887825	1					
ANR	890180	ExpressionStatement	"r_reg_set_double ( core -> dbg -> reg , item , val )"	2602:5:75849:75893	887825	4	True				
ANR	890181	CallExpression	"r_reg_set_double ( core -> dbg -> reg , item , val )"		887825	0					
ANR	890182	Callee	r_reg_set_double		887825	0					
ANR	890183	Identifier	r_reg_set_double		887825	0					
ANR	890184	ArgumentList	core -> dbg -> reg		887825	1					
ANR	890185	Argument	core -> dbg -> reg		887825	0					
ANR	890186	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	890187	PtrMemberAccess	core -> dbg		887825	0					
ANR	890188	Identifier	core		887825	0					
ANR	890189	Identifier	dbg		887825	1					
ANR	890190	Identifier	reg		887825	1					
ANR	890191	Argument	item		887825	1					
ANR	890192	Identifier	item		887825	0					
ANR	890193	Argument	val		887825	2					
ANR	890194	Identifier	val		887825	0					
ANR	890195	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"	2603:5:75900:75950	887825	5	True				
ANR	890196	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"		887825	0					
ANR	890197	Callee	r_debug_reg_sync		887825	0					
ANR	890198	Identifier	r_debug_reg_sync		887825	0					
ANR	890199	ArgumentList	core -> dbg		887825	1					
ANR	890200	Argument	core -> dbg		887825	0					
ANR	890201	PtrMemberAccess	core -> dbg		887825	0					
ANR	890202	Identifier	core		887825	0					
ANR	890203	Identifier	dbg		887825	1					
ANR	890204	Argument	R_REG_TYPE_GPR		887825	1					
ANR	890205	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	890206	Argument	true		887825	2					
ANR	890207	Identifier	true		887825	0					
ANR	890208	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_FPU , true )"	2604:5:75957:76007	887825	6	True				
ANR	890209	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_FPU , true )"		887825	0					
ANR	890210	Callee	r_debug_reg_sync		887825	0					
ANR	890211	Identifier	r_debug_reg_sync		887825	0					
ANR	890212	ArgumentList	core -> dbg		887825	1					
ANR	890213	Argument	core -> dbg		887825	0					
ANR	890214	PtrMemberAccess	core -> dbg		887825	0					
ANR	890215	Identifier	core		887825	0					
ANR	890216	Identifier	dbg		887825	1					
ANR	890217	Argument	R_REG_TYPE_FPU		887825	1					
ANR	890218	Identifier	R_REG_TYPE_FPU		887825	0					
ANR	890219	Argument	true		887825	2					
ANR	890220	Identifier	true		887825	0					
ANR	890221	ElseStatement	else		887825	0					
ANR	890222	CompoundStatement		356:5:9560:9617	887825	0					
ANR	890223	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	2606:5:76027:76078	887825	0	True				
ANR	890224	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		887825	0					
ANR	890225	Callee	r_debug_reg_sync		887825	0					
ANR	890226	Identifier	r_debug_reg_sync		887825	0					
ANR	890227	ArgumentList	core -> dbg		887825	1					
ANR	890228	Argument	core -> dbg		887825	0					
ANR	890229	PtrMemberAccess	core -> dbg		887825	0					
ANR	890230	Identifier	core		887825	0					
ANR	890231	Identifier	dbg		887825	1					
ANR	890232	Argument	R_REG_TYPE_GPR		887825	1					
ANR	890233	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	890234	Argument	false		887825	2					
ANR	890235	Identifier	false		887825	0					
ANR	890236	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_FPU , false )"	2607:5:76085:76136	887825	1	True				
ANR	890237	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_FPU , false )"		887825	0					
ANR	890238	Callee	r_debug_reg_sync		887825	0					
ANR	890239	Identifier	r_debug_reg_sync		887825	0					
ANR	890240	ArgumentList	core -> dbg		887825	1					
ANR	890241	Argument	core -> dbg		887825	0					
ANR	890242	PtrMemberAccess	core -> dbg		887825	0					
ANR	890243	Identifier	core		887825	0					
ANR	890244	Identifier	dbg		887825	1					
ANR	890245	Argument	R_REG_TYPE_FPU		887825	1					
ANR	890246	Identifier	R_REG_TYPE_FPU		887825	0					
ANR	890247	Argument	false		887825	2					
ANR	890248	Identifier	false		887825	0					
ANR	890249	IdentifierDeclStatement	"long double res = r_reg_get_double ( core -> dbg -> reg , item ) ;"	2608:5:76143:76200	887825	2	True				
ANR	890250	IdentifierDecl	"res = r_reg_get_double ( core -> dbg -> reg , item )"		887825	0					
ANR	890251	IdentifierDeclType	long double		887825	0					
ANR	890252	Identifier	res		887825	1					
ANR	890253	AssignmentExpression	"res = r_reg_get_double ( core -> dbg -> reg , item )"		887825	2		=			
ANR	890254	Identifier	res		887825	0					
ANR	890255	CallExpression	"r_reg_get_double ( core -> dbg -> reg , item )"		887825	1					
ANR	890256	Callee	r_reg_get_double		887825	0					
ANR	890257	Identifier	r_reg_get_double		887825	0					
ANR	890258	ArgumentList	core -> dbg -> reg		887825	1					
ANR	890259	Argument	core -> dbg -> reg		887825	0					
ANR	890260	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	890261	PtrMemberAccess	core -> dbg		887825	0					
ANR	890262	Identifier	core		887825	0					
ANR	890263	Identifier	dbg		887825	1					
ANR	890264	Identifier	reg		887825	1					
ANR	890265	Argument	item		887825	1					
ANR	890266	Identifier	item		887825	0					
ANR	890267	ExpressionStatement	"r_cons_printf ( ""%lf\\n"" , res )"	2609:5:76207:76235	887825	3	True				
ANR	890268	CallExpression	"r_cons_printf ( ""%lf\\n"" , res )"		887825	0					
ANR	890269	Callee	r_cons_printf		887825	0					
ANR	890270	Identifier	r_cons_printf		887825	0					
ANR	890271	ArgumentList	"""%lf\\n"""		887825	1					
ANR	890272	Argument	"""%lf\\n"""		887825	0					
ANR	890273	PrimaryExpression	"""%lf\\n"""		887825	0					
ANR	890274	Argument	res		887825	1					
ANR	890275	Identifier	res		887825	0					
ANR	890276	ElseStatement	else		887825	0					
ANR	890277	CompoundStatement		359:10:9670:9670	887825	0					
ANR	890278	ExpressionStatement	"eprintf ( ""cannot find multimedia register '%s'\\n"" , name )"	2612:4:76259:76315	887825	0	True				
ANR	890279	CallExpression	"eprintf ( ""cannot find multimedia register '%s'\\n"" , name )"		887825	0					
ANR	890280	Callee	eprintf		887825	0					
ANR	890281	Identifier	eprintf		887825	0					
ANR	890282	ArgumentList	"""cannot find multimedia register '%s'\\n"""		887825	1					
ANR	890283	Argument	"""cannot find multimedia register '%s'\\n"""		887825	0					
ANR	890284	PrimaryExpression	"""cannot find multimedia register '%s'\\n"""		887825	0					
ANR	890285	Argument	name		887825	1					
ANR	890286	Identifier	name		887825	0					
ANR	890287	ExpressionStatement	free ( name )	2614:3:76325:76336	887825	7	True				
ANR	890288	CallExpression	free ( name )		887825	0					
ANR	890289	Callee	free		887825	0					
ANR	890290	Identifier	free		887825	0					
ANR	890291	ArgumentList	name		887825	1					
ANR	890292	Argument	name		887825	0					
ANR	890293	Identifier	name		887825	0					
ANR	890294	ElseStatement	else		887825	0					
ANR	890295	CompoundStatement		363:9:9764:9764	887825	0					
ANR	890296	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , - R_REG_TYPE_FPU , false )"	2616:3:76352:76404	887825	0	True				
ANR	890297	CallExpression	"r_debug_reg_sync ( core -> dbg , - R_REG_TYPE_FPU , false )"		887825	0					
ANR	890298	Callee	r_debug_reg_sync		887825	0					
ANR	890299	Identifier	r_debug_reg_sync		887825	0					
ANR	890300	ArgumentList	core -> dbg		887825	1					
ANR	890301	Argument	core -> dbg		887825	0					
ANR	890302	PtrMemberAccess	core -> dbg		887825	0					
ANR	890303	Identifier	core		887825	0					
ANR	890304	Identifier	dbg		887825	1					
ANR	890305	Argument	- R_REG_TYPE_FPU		887825	1					
ANR	890306	UnaryOperationExpression	- R_REG_TYPE_FPU		887825	0					
ANR	890307	UnaryOperator	-		887825	0					
ANR	890308	Identifier	R_REG_TYPE_FPU		887825	1					
ANR	890309	Argument	false		887825	2					
ANR	890310	Identifier	false		887825	0					
ANR	890311	BreakStatement	break ;	2618:2:76412:76417	887825	31	True				
ANR	890312	Label	case 'p' :	2619:1:76420:76428	887825	32	True				
ANR	890313	ExpressionStatement	"cmd_reg_profile ( core , 'd' , str )"	2620:2:76441:76473	887825	33	True				
ANR	890314	CallExpression	"cmd_reg_profile ( core , 'd' , str )"		887825	0					
ANR	890315	Callee	cmd_reg_profile		887825	0					
ANR	890316	Identifier	cmd_reg_profile		887825	0					
ANR	890317	ArgumentList	core		887825	1					
ANR	890318	Argument	core		887825	0					
ANR	890319	Identifier	core		887825	0					
ANR	890320	Argument	'd'		887825	1					
ANR	890321	PrimaryExpression	'd'		887825	0					
ANR	890322	Argument	str		887825	2					
ANR	890323	Identifier	str		887825	0					
ANR	890324	BreakStatement	break ;	2621:2:76477:76482	887825	34	True				
ANR	890325	Label	case 't' :	2622:1:76485:76493	887825	35	True				
ANR	890326	CompoundStatement		371:2:9925:9937	887825	36					
ANR	890327	IdentifierDeclStatement	char rad = 0 ;	2623:2:76508:76520	887825	0	True				
ANR	890328	IdentifierDecl	rad = 0		887825	0					
ANR	890329	IdentifierDeclType	char		887825	0					
ANR	890330	Identifier	rad		887825	1					
ANR	890331	AssignmentExpression	rad = 0		887825	2		=			
ANR	890332	Identifier	rad		887825	0					
ANR	890333	PrimaryExpression	0		887825	1					
ANR	890334	SwitchStatement	switch ( str [ 1 ] )		887825	1					
ANR	890335	Condition	str [ 1 ]	2624:10:76532:76537	887825	0	True				
ANR	890336	ArrayIndexing	str [ 1 ]		887825	0					
ANR	890337	Identifier	str		887825	0					
ANR	890338	PrimaryExpression	1		887825	1					
ANR	890339	CompoundStatement		372:18:9957:9957	887825	1					
ANR	890340	Label	case '\\0' :	2625:2:76544:76553	887825	0	True				
ANR	890341	ForStatement	for ( i = 0 ; ( name = r_reg_get_type ( i ) ) ; i ++ )		887825	1					
ANR	890342	ForInit	i = 0 ;	2626:8:76572:76577	887825	0	True				
ANR	890343	AssignmentExpression	i = 0		887825	0		=			
ANR	890344	Identifier	i		887825	0					
ANR	890345	PrimaryExpression	0		887825	1					
ANR	890346	Condition	name = r_reg_get_type ( i )	2626:15:76579:76605	887825	1	True				
ANR	890347	AssignmentExpression	name = r_reg_get_type ( i )		887825	0		=			
ANR	890348	Identifier	name		887825	0					
ANR	890349	CallExpression	r_reg_get_type ( i )		887825	1					
ANR	890350	Callee	r_reg_get_type		887825	0					
ANR	890351	Identifier	r_reg_get_type		887825	0					
ANR	890352	ArgumentList	i		887825	1					
ANR	890353	Argument	i		887825	0					
ANR	890354	Identifier	i		887825	0					
ANR	890355	PostIncDecOperationExpression	i ++	2626:44:76608:76610	887825	2	True				
ANR	890356	Identifier	i		887825	0					
ANR	890357	IncDec	++		887825	1					
ANR	890358	CompoundStatement		374:49:10030:10030	887825	3					
ANR	890359	ExpressionStatement	r_cons_println ( name )	2627:4:76619:76640	887825	0	True				
ANR	890360	CallExpression	r_cons_println ( name )		887825	0					
ANR	890361	Callee	r_cons_println		887825	0					
ANR	890362	Identifier	r_cons_println		887825	0					
ANR	890363	ArgumentList	name		887825	1					
ANR	890364	Argument	name		887825	0					
ANR	890365	Identifier	name		887825	0					
ANR	890366	BreakStatement	break ;	2629:3:76650:76655	887825	2	True				
ANR	890367	Label	case 'j' :	2630:2:76659:76667	887825	3	True				
ANR	890368	Label	case '*' :	2631:2:76681:76689	887825	4	True				
ANR	890369	ExpressionStatement	rad = str [ 1 ]	2632:3:76704:76716	887825	5	True				
ANR	890370	AssignmentExpression	rad = str [ 1 ]		887825	0		=			
ANR	890371	Identifier	rad		887825	0					
ANR	890372	ArrayIndexing	str [ 1 ]		887825	1					
ANR	890373	Identifier	str		887825	0					
ANR	890374	PrimaryExpression	1		887825	1					
ANR	890375	ExpressionStatement	str ++	2633:3:76721:76726	887825	6	True				
ANR	890376	PostIncDecOperationExpression	str ++		887825	0					
ANR	890377	Identifier	str		887825	0					
ANR	890378	IncDec	++		887825	1					
ANR	890379	IfStatement	if ( rad == 'j' && ! str [ 1 ] )		887825	7					
ANR	890380	Condition	rad == 'j' && ! str [ 1 ]	2634:7:76735:76755	887825	0	True				
ANR	890381	AndExpression	rad == 'j' && ! str [ 1 ]		887825	0		&&			
ANR	890382	EqualityExpression	rad == 'j'		887825	0		==			
ANR	890383	Identifier	rad		887825	0					
ANR	890384	PrimaryExpression	'j'		887825	1					
ANR	890385	UnaryOperationExpression	! str [ 1 ]		887825	1					
ANR	890386	UnaryOperator	!		887825	0					
ANR	890387	ArrayIndexing	str [ 1 ]		887825	1					
ANR	890388	Identifier	str		887825	0					
ANR	890389	PrimaryExpression	1		887825	1					
ANR	890390	CompoundStatement		382:30:10175:10175	887825	1					
ANR	890391	ExpressionStatement	"r_cons_print ( ""["" )"	2635:4:76764:76781	887825	0	True				
ANR	890392	CallExpression	"r_cons_print ( ""["" )"		887825	0					
ANR	890393	Callee	r_cons_print		887825	0					
ANR	890394	Identifier	r_cons_print		887825	0					
ANR	890395	ArgumentList	"""["""		887825	1					
ANR	890396	Argument	"""["""		887825	0					
ANR	890397	PrimaryExpression	"""["""		887825	0					
ANR	890398	ForStatement	for ( i = 0 ; ( name = r_reg_get_type ( i ) ) ; i ++ )		887825	1					
ANR	890399	ForInit	i = 0 ;	2636:9:76792:76797	887825	0	True				
ANR	890400	AssignmentExpression	i = 0		887825	0		=			
ANR	890401	Identifier	i		887825	0					
ANR	890402	PrimaryExpression	0		887825	1					
ANR	890403	Condition	name = r_reg_get_type ( i )	2636:16:76799:76825	887825	1	True				
ANR	890404	AssignmentExpression	name = r_reg_get_type ( i )		887825	0		=			
ANR	890405	Identifier	name		887825	0					
ANR	890406	CallExpression	r_reg_get_type ( i )		887825	1					
ANR	890407	Callee	r_reg_get_type		887825	0					
ANR	890408	Identifier	r_reg_get_type		887825	0					
ANR	890409	ArgumentList	i		887825	1					
ANR	890410	Argument	i		887825	0					
ANR	890411	Identifier	i		887825	0					
ANR	890412	PostIncDecOperationExpression	i ++	2636:45:76828:76830	887825	2	True				
ANR	890413	Identifier	i		887825	0					
ANR	890414	IncDec	++		887825	1					
ANR	890415	CompoundStatement		384:50:10250:10250	887825	3					
ANR	890416	IfStatement	if ( i )		887825	0					
ANR	890417	Condition	i	2637:9:76844:76844	887825	0	True				
ANR	890418	Identifier	i		887825	0					
ANR	890419	CompoundStatement		385:12:10264:10264	887825	1					
ANR	890420	ExpressionStatement	"r_cons_print ( "","" )"	2638:6:76855:76873	887825	0	True				
ANR	890421	CallExpression	"r_cons_print ( "","" )"		887825	0					
ANR	890422	Callee	r_cons_print		887825	0					
ANR	890423	Identifier	r_cons_print		887825	0					
ANR	890424	ArgumentList	""","""		887825	1					
ANR	890425	Argument	""","""		887825	0					
ANR	890426	PrimaryExpression	""","""		887825	0					
ANR	890427	ExpressionStatement	"r_cons_printf ( ""\\""%s\\"""" , name )"	2640:5:76887:76917	887825	1	True				
ANR	890428	CallExpression	"r_cons_printf ( ""\\""%s\\"""" , name )"		887825	0					
ANR	890429	Callee	r_cons_printf		887825	0					
ANR	890430	Identifier	r_cons_printf		887825	0					
ANR	890431	ArgumentList	"""\\""%s\\"""""		887825	1					
ANR	890432	Argument	"""\\""%s\\"""""		887825	0					
ANR	890433	PrimaryExpression	"""\\""%s\\"""""		887825	0					
ANR	890434	Argument	name		887825	1					
ANR	890435	Identifier	name		887825	0					
ANR	890436	ExpressionStatement	"r_cons_println ( ""]"" )"	2642:4:76929:76949	887825	2	True				
ANR	890437	CallExpression	"r_cons_println ( ""]"" )"		887825	0					
ANR	890438	Callee	r_cons_println		887825	0					
ANR	890439	Identifier	r_cons_println		887825	0					
ANR	890440	ArgumentList	"""]"""		887825	1					
ANR	890441	Argument	"""]"""		887825	0					
ANR	890442	PrimaryExpression	"""]"""		887825	0					
ANR	890443	BreakStatement	break ;	2643:4:76955:76960	887825	3	True				
ANR	890444	Label	case ' ' :	2646:2:76987:76995	887825	8	True				
ANR	890445	CompoundStatement		397:3:10473:10532	887825	9					
ANR	890446	IdentifierDeclStatement	int role = r_reg_get_name_idx ( str + 2 ) ;	2648:3:77014:77051	887825	0	True				
ANR	890447	IdentifierDecl	role = r_reg_get_name_idx ( str + 2 )		887825	0					
ANR	890448	IdentifierDeclType	int		887825	0					
ANR	890449	Identifier	role		887825	1					
ANR	890450	AssignmentExpression	role = r_reg_get_name_idx ( str + 2 )		887825	2		=			
ANR	890451	Identifier	role		887825	0					
ANR	890452	CallExpression	r_reg_get_name_idx ( str + 2 )		887825	1					
ANR	890453	Callee	r_reg_get_name_idx		887825	0					
ANR	890454	Identifier	r_reg_get_name_idx		887825	0					
ANR	890455	ArgumentList	str + 2		887825	1					
ANR	890456	Argument	str + 2		887825	0					
ANR	890457	AdditiveExpression	str + 2		887825	0		+			
ANR	890458	Identifier	str		887825	0					
ANR	890459	PrimaryExpression	2		887825	1					
ANR	890460	IdentifierDeclStatement	"const char * regname = r_reg_get_name ( core -> dbg -> reg , role ) ;"	2649:3:77056:77115	887825	1	True				
ANR	890461	IdentifierDecl	"* regname = r_reg_get_name ( core -> dbg -> reg , role )"		887825	0					
ANR	890462	IdentifierDeclType	const char *		887825	0					
ANR	890463	Identifier	regname		887825	1					
ANR	890464	AssignmentExpression	"* regname = r_reg_get_name ( core -> dbg -> reg , role )"		887825	2		=			
ANR	890465	Identifier	regname		887825	0					
ANR	890466	CallExpression	"r_reg_get_name ( core -> dbg -> reg , role )"		887825	1					
ANR	890467	Callee	r_reg_get_name		887825	0					
ANR	890468	Identifier	r_reg_get_name		887825	0					
ANR	890469	ArgumentList	core -> dbg -> reg		887825	1					
ANR	890470	Argument	core -> dbg -> reg		887825	0					
ANR	890471	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	890472	PtrMemberAccess	core -> dbg		887825	0					
ANR	890473	Identifier	core		887825	0					
ANR	890474	Identifier	dbg		887825	1					
ANR	890475	Identifier	reg		887825	1					
ANR	890476	Argument	role		887825	1					
ANR	890477	Identifier	role		887825	0					
ANR	890478	IfStatement	if ( ! regname )		887825	2					
ANR	890479	Condition	! regname	2650:7:77124:77131	887825	0	True				
ANR	890480	UnaryOperationExpression	! regname		887825	0					
ANR	890481	UnaryOperator	!		887825	0					
ANR	890482	Identifier	regname		887825	1					
ANR	890483	CompoundStatement		398:17:10551:10551	887825	1					
ANR	890484	ExpressionStatement	regname = str + 2	2651:4:77140:77157	887825	0	True				
ANR	890485	AssignmentExpression	regname = str + 2		887825	0		=			
ANR	890486	Identifier	regname		887825	0					
ANR	890487	AdditiveExpression	str + 2		887825	1		+			
ANR	890488	Identifier	str		887825	0					
ANR	890489	PrimaryExpression	2		887825	1					
ANR	890490	ExpressionStatement	size = atoi ( regname )	2653:3:77167:77188	887825	3	True				
ANR	890491	AssignmentExpression	size = atoi ( regname )		887825	0		=			
ANR	890492	Identifier	size		887825	0					
ANR	890493	CallExpression	atoi ( regname )		887825	1					
ANR	890494	Callee	atoi		887825	0					
ANR	890495	Identifier	atoi		887825	0					
ANR	890496	ArgumentList	regname		887825	1					
ANR	890497	Argument	regname		887825	0					
ANR	890498	Identifier	regname		887825	0					
ANR	890499	IfStatement	if ( size < 1 )		887825	4					
ANR	890500	Condition	size < 1	2654:7:77197:77204	887825	0	True				
ANR	890501	RelationalExpression	size < 1		887825	0		<			
ANR	890502	Identifier	size		887825	0					
ANR	890503	PrimaryExpression	1		887825	1					
ANR	890504	CompoundStatement		403:4:10630:10663	887825	1					
ANR	890505	IdentifierDeclStatement	"char * arg = strchr ( str + 2 , ' ' ) ;"	2655:4:77213:77246	887825	0	True				
ANR	890506	IdentifierDecl	"* arg = strchr ( str + 2 , ' ' )"		887825	0					
ANR	890507	IdentifierDeclType	char *		887825	0					
ANR	890508	Identifier	arg		887825	1					
ANR	890509	AssignmentExpression	"* arg = strchr ( str + 2 , ' ' )"		887825	2		=			
ANR	890510	Identifier	arg		887825	0					
ANR	890511	CallExpression	"strchr ( str + 2 , ' ' )"		887825	1					
ANR	890512	Callee	strchr		887825	0					
ANR	890513	Identifier	strchr		887825	0					
ANR	890514	ArgumentList	str + 2		887825	1					
ANR	890515	Argument	str + 2		887825	0					
ANR	890516	AdditiveExpression	str + 2		887825	0		+			
ANR	890517	Identifier	str		887825	0					
ANR	890518	PrimaryExpression	2		887825	1					
ANR	890519	Argument	' '		887825	1					
ANR	890520	PrimaryExpression	' '		887825	0					
ANR	890521	ExpressionStatement	size = - 1	2656:4:77252:77261	887825	1	True				
ANR	890522	AssignmentExpression	size = - 1		887825	0		=			
ANR	890523	Identifier	size		887825	0					
ANR	890524	UnaryOperationExpression	- 1		887825	1					
ANR	890525	UnaryOperator	-		887825	0					
ANR	890526	PrimaryExpression	1		887825	1					
ANR	890527	IfStatement	if ( arg )		887825	2					
ANR	890528	Condition	arg	2657:8:77271:77273	887825	0	True				
ANR	890529	Identifier	arg		887825	0					
ANR	890530	CompoundStatement		405:13:10693:10693	887825	1					
ANR	890531	ExpressionStatement	* arg ++ = 0	2658:5:77283:77293	887825	0	True				
ANR	890532	AssignmentExpression	* arg ++ = 0		887825	0		=			
ANR	890533	UnaryOperationExpression	* arg ++		887825	0					
ANR	890534	UnaryOperator	*		887825	0					
ANR	890535	PostIncDecOperationExpression	arg ++		887825	1					
ANR	890536	Identifier	arg		887825	0					
ANR	890537	IncDec	++		887825	1					
ANR	890538	PrimaryExpression	0		887825	1					
ANR	890539	ExpressionStatement	size = atoi ( arg )	2659:5:77300:77317	887825	1	True				
ANR	890540	AssignmentExpression	size = atoi ( arg )		887825	0		=			
ANR	890541	Identifier	size		887825	0					
ANR	890542	CallExpression	atoi ( arg )		887825	1					
ANR	890543	Callee	atoi		887825	0					
ANR	890544	Identifier	atoi		887825	0					
ANR	890545	ArgumentList	arg		887825	1					
ANR	890546	Argument	arg		887825	0					
ANR	890547	Identifier	arg		887825	0					
ANR	890548	ExpressionStatement	type = r_reg_type_by_name ( str + 2 )	2661:4:77329:77364	887825	3	True				
ANR	890549	AssignmentExpression	type = r_reg_type_by_name ( str + 2 )		887825	0		=			
ANR	890550	Identifier	type		887825	0					
ANR	890551	CallExpression	r_reg_type_by_name ( str + 2 )		887825	1					
ANR	890552	Callee	r_reg_type_by_name		887825	0					
ANR	890553	Identifier	r_reg_type_by_name		887825	0					
ANR	890554	ArgumentList	str + 2		887825	1					
ANR	890555	Argument	str + 2		887825	0					
ANR	890556	AdditiveExpression	str + 2		887825	0		+			
ANR	890557	Identifier	str		887825	0					
ANR	890558	PrimaryExpression	2		887825	1					
ANR	890559	IfStatement	if ( size < 0 )		887825	4					
ANR	890560	Condition	size < 0	2662:8:77374:77381	887825	0	True				
ANR	890561	RelationalExpression	size < 0		887825	0		<			
ANR	890562	Identifier	size		887825	0					
ANR	890563	PrimaryExpression	0		887825	1					
ANR	890564	CompoundStatement		410:18:10801:10801	887825	1					
ANR	890565	ExpressionStatement	size = core -> dbg -> bits * 8	2663:5:77391:77417	887825	0	True				
ANR	890566	AssignmentExpression	size = core -> dbg -> bits * 8		887825	0		=			
ANR	890567	Identifier	size		887825	0					
ANR	890568	MultiplicativeExpression	core -> dbg -> bits * 8		887825	1		*			
ANR	890569	PtrMemberAccess	core -> dbg -> bits		887825	0					
ANR	890570	PtrMemberAccess	core -> dbg		887825	0					
ANR	890571	Identifier	core		887825	0					
ANR	890572	Identifier	dbg		887825	1					
ANR	890573	Identifier	bits		887825	1					
ANR	890574	PrimaryExpression	8		887825	1					
ANR	890575	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , type , false )"	2665:4:77429:77470	887825	5	True				
ANR	890576	CallExpression	"r_debug_reg_sync ( core -> dbg , type , false )"		887825	0					
ANR	890577	Callee	r_debug_reg_sync		887825	0					
ANR	890578	Identifier	r_debug_reg_sync		887825	0					
ANR	890579	ArgumentList	core -> dbg		887825	1					
ANR	890580	Argument	core -> dbg		887825	0					
ANR	890581	PtrMemberAccess	core -> dbg		887825	0					
ANR	890582	Identifier	core		887825	0					
ANR	890583	Identifier	dbg		887825	1					
ANR	890584	Argument	type		887825	1					
ANR	890585	Identifier	type		887825	0					
ANR	890586	Argument	false		887825	2					
ANR	890587	Identifier	false		887825	0					
ANR	890588	ExpressionStatement	"r_debug_reg_list ( core -> dbg , type , size , rad , use_color )"	2666:4:77476:77532	887825	6	True				
ANR	890589	CallExpression	"r_debug_reg_list ( core -> dbg , type , size , rad , use_color )"		887825	0					
ANR	890590	Callee	r_debug_reg_list		887825	0					
ANR	890591	Identifier	r_debug_reg_list		887825	0					
ANR	890592	ArgumentList	core -> dbg		887825	1					
ANR	890593	Argument	core -> dbg		887825	0					
ANR	890594	PtrMemberAccess	core -> dbg		887825	0					
ANR	890595	Identifier	core		887825	0					
ANR	890596	Identifier	dbg		887825	1					
ANR	890597	Argument	type		887825	1					
ANR	890598	Identifier	type		887825	0					
ANR	890599	Argument	size		887825	2					
ANR	890600	Identifier	size		887825	0					
ANR	890601	Argument	rad		887825	3					
ANR	890602	Identifier	rad		887825	0					
ANR	890603	Argument	use_color		887825	4					
ANR	890604	Identifier	use_color		887825	0					
ANR	890605	ElseStatement	else		887825	0					
ANR	890606	CompoundStatement		415:10:10961:10961	887825	0					
ANR	890607	IfStatement	if ( type != R_REG_TYPE_LAST )		887825	0					
ANR	890608	Condition	type != R_REG_TYPE_LAST	2668:8:77554:77576	887825	0	True				
ANR	890609	EqualityExpression	type != R_REG_TYPE_LAST		887825	0		!=			
ANR	890610	Identifier	type		887825	0					
ANR	890611	Identifier	R_REG_TYPE_LAST		887825	1					
ANR	890612	CompoundStatement		416:33:10996:10996	887825	1					
ANR	890613	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , type , false )"	2669:5:77586:77627	887825	0	True				
ANR	890614	CallExpression	"r_debug_reg_sync ( core -> dbg , type , false )"		887825	0					
ANR	890615	Callee	r_debug_reg_sync		887825	0					
ANR	890616	Identifier	r_debug_reg_sync		887825	0					
ANR	890617	ArgumentList	core -> dbg		887825	1					
ANR	890618	Argument	core -> dbg		887825	0					
ANR	890619	PtrMemberAccess	core -> dbg		887825	0					
ANR	890620	Identifier	core		887825	0					
ANR	890621	Identifier	dbg		887825	1					
ANR	890622	Argument	type		887825	1					
ANR	890623	Identifier	type		887825	0					
ANR	890624	Argument	false		887825	2					
ANR	890625	Identifier	false		887825	0					
ANR	890626	ExpressionStatement	"r_debug_reg_list ( core -> dbg , type , size , rad , use_color )"	2670:5:77634:77690	887825	1	True				
ANR	890627	CallExpression	"r_debug_reg_list ( core -> dbg , type , size , rad , use_color )"		887825	0					
ANR	890628	Callee	r_debug_reg_list		887825	0					
ANR	890629	Identifier	r_debug_reg_list		887825	0					
ANR	890630	ArgumentList	core -> dbg		887825	1					
ANR	890631	Argument	core -> dbg		887825	0					
ANR	890632	PtrMemberAccess	core -> dbg		887825	0					
ANR	890633	Identifier	core		887825	0					
ANR	890634	Identifier	dbg		887825	1					
ANR	890635	Argument	type		887825	1					
ANR	890636	Identifier	type		887825	0					
ANR	890637	Argument	size		887825	2					
ANR	890638	Identifier	size		887825	0					
ANR	890639	Argument	rad		887825	3					
ANR	890640	Identifier	rad		887825	0					
ANR	890641	Argument	use_color		887825	4					
ANR	890642	Identifier	use_color		887825	0					
ANR	890643	ElseStatement	else		887825	0					
ANR	890644	CompoundStatement		419:11:11120:11120	887825	0					
ANR	890645	ExpressionStatement	"eprintf ( ""cmd_debug_reg: unknown type\\n"" )"	2672:5:77710:77751	887825	0	True				
ANR	890646	CallExpression	"eprintf ( ""cmd_debug_reg: unknown type\\n"" )"		887825	0					
ANR	890647	Callee	eprintf		887825	0					
ANR	890648	Identifier	eprintf		887825	0					
ANR	890649	ArgumentList	"""cmd_debug_reg: unknown type\\n"""		887825	1					
ANR	890650	Argument	"""cmd_debug_reg: unknown type\\n"""		887825	0					
ANR	890651	PrimaryExpression	"""cmd_debug_reg: unknown type\\n"""		887825	0					
ANR	890652	BreakStatement	break ;	2675:3:77767:77772	887825	5	True				
ANR	890653	Label	case '?' :	2677:2:77780:77788	887825	10	True				
ANR	890654	Label	default :	2678:2:77802:77809	887825	11	True				
ANR	890655	Identifier	default		887825	0					
ANR	890656	ExpressionStatement	"r_core_cmd_help ( core , help_msg_drt )"	2679:3:77814:77850	887825	12	True				
ANR	890657	CallExpression	"r_core_cmd_help ( core , help_msg_drt )"		887825	0					
ANR	890658	Callee	r_core_cmd_help		887825	0					
ANR	890659	Identifier	r_core_cmd_help		887825	0					
ANR	890660	ArgumentList	core		887825	1					
ANR	890661	Argument	core		887825	0					
ANR	890662	Identifier	core		887825	0					
ANR	890663	Argument	help_msg_drt		887825	1					
ANR	890664	Identifier	help_msg_drt		887825	0					
ANR	890665	BreakStatement	break ;	2680:3:77855:77860	887825	13	True				
ANR	890666	BreakStatement	break ;	2683:2:77872:77877	887825	37	True				
ANR	890667	Label	case 'n' :	2684:1:77880:77888	887825	38	True				
ANR	890668	CompoundStatement		434:3:11323:11349	887825	39					
ANR	890669	IdentifierDeclStatement	char * foo = strdup ( str + 2 ) ;	2686:3:77906:77932	887825	0	True				
ANR	890670	IdentifierDecl	* foo = strdup ( str + 2 )		887825	0					
ANR	890671	IdentifierDeclType	char *		887825	0					
ANR	890672	Identifier	foo		887825	1					
ANR	890673	AssignmentExpression	* foo = strdup ( str + 2 )		887825	2		=			
ANR	890674	Identifier	foo		887825	0					
ANR	890675	CallExpression	strdup ( str + 2 )		887825	1					
ANR	890676	Callee	strdup		887825	0					
ANR	890677	Identifier	strdup		887825	0					
ANR	890678	ArgumentList	str + 2		887825	1					
ANR	890679	Argument	str + 2		887825	0					
ANR	890680	AdditiveExpression	str + 2		887825	0		+			
ANR	890681	Identifier	str		887825	0					
ANR	890682	PrimaryExpression	2		887825	1					
ANR	890683	ExpressionStatement	"r_str_case ( foo , true )"	2687:3:77937:77959	887825	1	True				
ANR	890684	CallExpression	"r_str_case ( foo , true )"		887825	0					
ANR	890685	Callee	r_str_case		887825	0					
ANR	890686	Identifier	r_str_case		887825	0					
ANR	890687	ArgumentList	foo		887825	1					
ANR	890688	Argument	foo		887825	0					
ANR	890689	Identifier	foo		887825	0					
ANR	890690	Argument	true		887825	1					
ANR	890691	Identifier	true		887825	0					
ANR	890692	ExpressionStatement	"name = r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( foo ) )"	2688:3:77964:78028	887825	2	True				
ANR	890693	AssignmentExpression	"name = r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( foo ) )"		887825	0		=			
ANR	890694	Identifier	name		887825	0					
ANR	890695	CallExpression	"r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( foo ) )"		887825	1					
ANR	890696	Callee	r_reg_get_name		887825	0					
ANR	890697	Identifier	r_reg_get_name		887825	0					
ANR	890698	ArgumentList	core -> dbg -> reg		887825	1					
ANR	890699	Argument	core -> dbg -> reg		887825	0					
ANR	890700	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	890701	PtrMemberAccess	core -> dbg		887825	0					
ANR	890702	Identifier	core		887825	0					
ANR	890703	Identifier	dbg		887825	1					
ANR	890704	Identifier	reg		887825	1					
ANR	890705	Argument	r_reg_get_name_idx ( foo )		887825	1					
ANR	890706	CallExpression	r_reg_get_name_idx ( foo )		887825	0					
ANR	890707	Callee	r_reg_get_name_idx		887825	0					
ANR	890708	Identifier	r_reg_get_name_idx		887825	0					
ANR	890709	ArgumentList	foo		887825	1					
ANR	890710	Argument	foo		887825	0					
ANR	890711	Identifier	foo		887825	0					
ANR	890712	IfStatement	if ( name && * name )		887825	3					
ANR	890713	Condition	name && * name	2689:7:78037:78049	887825	0	True				
ANR	890714	AndExpression	name && * name		887825	0		&&			
ANR	890715	Identifier	name		887825	0					
ANR	890716	UnaryOperationExpression	* name		887825	1					
ANR	890717	UnaryOperator	*		887825	0					
ANR	890718	Identifier	name		887825	1					
ANR	890719	CompoundStatement		437:22:11469:11469	887825	1					
ANR	890720	ExpressionStatement	r_cons_println ( name )	2690:4:78058:78079	887825	0	True				
ANR	890721	CallExpression	r_cons_println ( name )		887825	0					
ANR	890722	Callee	r_cons_println		887825	0					
ANR	890723	Identifier	r_cons_println		887825	0					
ANR	890724	ArgumentList	name		887825	1					
ANR	890725	Argument	name		887825	0					
ANR	890726	Identifier	name		887825	0					
ANR	890727	ElseStatement	else		887825	0					
ANR	890728	ExpressionStatement	"eprintf ( ""oops. try drn [pc|sp|bp|a0|a1|a2|a3|a4|r0|r1|zf|sf|nf|of]\\n"" )"	2691:10:78091:78162	887825	0	True				
ANR	890729	CallExpression	"eprintf ( ""oops. try drn [pc|sp|bp|a0|a1|a2|a3|a4|r0|r1|zf|sf|nf|of]\\n"" )"		887825	0					
ANR	890730	Callee	eprintf		887825	0					
ANR	890731	Identifier	eprintf		887825	0					
ANR	890732	ArgumentList	"""oops. try drn [pc|sp|bp|a0|a1|a2|a3|a4|r0|r1|zf|sf|nf|of]\\n"""		887825	1					
ANR	890733	Argument	"""oops. try drn [pc|sp|bp|a0|a1|a2|a3|a4|r0|r1|zf|sf|nf|of]\\n"""		887825	0					
ANR	890734	PrimaryExpression	"""oops. try drn [pc|sp|bp|a0|a1|a2|a3|a4|r0|r1|zf|sf|nf|of]\\n"""		887825	0					
ANR	890735	ExpressionStatement	free ( foo )	2692:3:78167:78177	887825	4	True				
ANR	890736	CallExpression	free ( foo )		887825	0					
ANR	890737	Callee	free		887825	0					
ANR	890738	Identifier	free		887825	0					
ANR	890739	ArgumentList	foo		887825	1					
ANR	890740	Argument	foo		887825	0					
ANR	890741	Identifier	foo		887825	0					
ANR	890742	BreakStatement	break ;	2694:2:78185:78190	887825	40	True				
ANR	890743	Label	case 'd' :	2695:1:78193:78201	887825	41	True				
ANR	890744	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 3 , use_color )"	2696:2:78214:78278	887825	42	True				
ANR	890745	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 3 , use_color )"		887825	0					
ANR	890746	Callee	r_debug_reg_list		887825	0					
ANR	890747	Identifier	r_debug_reg_list		887825	0					
ANR	890748	ArgumentList	core -> dbg		887825	1					
ANR	890749	Argument	core -> dbg		887825	0					
ANR	890750	PtrMemberAccess	core -> dbg		887825	0					
ANR	890751	Identifier	core		887825	0					
ANR	890752	Identifier	dbg		887825	1					
ANR	890753	Argument	R_REG_TYPE_GPR		887825	1					
ANR	890754	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	890755	Argument	bits		887825	2					
ANR	890756	Identifier	bits		887825	0					
ANR	890757	Argument	3		887825	3					
ANR	890758	PrimaryExpression	3		887825	0					
ANR	890759	Argument	use_color		887825	4					
ANR	890760	Identifier	use_color		887825	0					
ANR	890761	BreakStatement	break ;	2697:2:78323:78328	887825	43	True				
ANR	890762	Label	case 'o' :	2698:1:78331:78339	887825	44	True				
ANR	890763	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	2699:2:78352:78392	887825	45	True				
ANR	890764	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		887825	0					
ANR	890765	Callee	r_reg_arena_swap		887825	0					
ANR	890766	Identifier	r_reg_arena_swap		887825	0					
ANR	890767	ArgumentList	core -> dbg -> reg		887825	1					
ANR	890768	Argument	core -> dbg -> reg		887825	0					
ANR	890769	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	890770	PtrMemberAccess	core -> dbg		887825	0					
ANR	890771	Identifier	core		887825	0					
ANR	890772	Identifier	dbg		887825	1					
ANR	890773	Identifier	reg		887825	1					
ANR	890774	Argument	false		887825	1					
ANR	890775	Identifier	false		887825	0					
ANR	890776	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 0 , use_color )"	2700:2:78396:78460	887825	46	True				
ANR	890777	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 0 , use_color )"		887825	0					
ANR	890778	Callee	r_debug_reg_list		887825	0					
ANR	890779	Identifier	r_debug_reg_list		887825	0					
ANR	890780	ArgumentList	core -> dbg		887825	1					
ANR	890781	Argument	core -> dbg		887825	0					
ANR	890782	PtrMemberAccess	core -> dbg		887825	0					
ANR	890783	Identifier	core		887825	0					
ANR	890784	Identifier	dbg		887825	1					
ANR	890785	Argument	R_REG_TYPE_GPR		887825	1					
ANR	890786	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	890787	Argument	bits		887825	2					
ANR	890788	Identifier	bits		887825	0					
ANR	890789	Argument	0		887825	3					
ANR	890790	PrimaryExpression	0		887825	0					
ANR	890791	Argument	use_color		887825	4					
ANR	890792	Identifier	use_color		887825	0					
ANR	890793	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	2701:2:78505:78545	887825	47	True				
ANR	890794	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		887825	0					
ANR	890795	Callee	r_reg_arena_swap		887825	0					
ANR	890796	Identifier	r_reg_arena_swap		887825	0					
ANR	890797	ArgumentList	core -> dbg -> reg		887825	1					
ANR	890798	Argument	core -> dbg -> reg		887825	0					
ANR	890799	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	890800	PtrMemberAccess	core -> dbg		887825	0					
ANR	890801	Identifier	core		887825	0					
ANR	890802	Identifier	dbg		887825	1					
ANR	890803	Identifier	reg		887825	1					
ANR	890804	Argument	false		887825	1					
ANR	890805	Identifier	false		887825	0					
ANR	890806	BreakStatement	break ;	2702:2:78549:78554	887825	48	True				
ANR	890807	Label	case '=' :	2703:1:78557:78565	887825	49	True				
ANR	890808	CompoundStatement		453:3:12000:12057	887825	50					
ANR	890809	IdentifierDeclStatement	"int pcbits2 , pcbits = grab_bits ( core , str + 1 , & pcbits2 ) ;"	2705:3:78583:78640	887825	0	True				
ANR	890810	IdentifierDecl	pcbits2		887825	0					
ANR	890811	IdentifierDeclType	int		887825	0					
ANR	890812	Identifier	pcbits2		887825	1					
ANR	890813	IdentifierDecl	"pcbits = grab_bits ( core , str + 1 , & pcbits2 )"		887825	1					
ANR	890814	IdentifierDeclType	int		887825	0					
ANR	890815	Identifier	pcbits		887825	1					
ANR	890816	AssignmentExpression	"pcbits = grab_bits ( core , str + 1 , & pcbits2 )"		887825	2		=			
ANR	890817	Identifier	pcbits		887825	0					
ANR	890818	CallExpression	"grab_bits ( core , str + 1 , & pcbits2 )"		887825	1					
ANR	890819	Callee	grab_bits		887825	0					
ANR	890820	Identifier	grab_bits		887825	0					
ANR	890821	ArgumentList	core		887825	1					
ANR	890822	Argument	core		887825	0					
ANR	890823	Identifier	core		887825	0					
ANR	890824	Argument	str + 1		887825	1					
ANR	890825	AdditiveExpression	str + 1		887825	0		+			
ANR	890826	Identifier	str		887825	0					
ANR	890827	PrimaryExpression	1		887825	1					
ANR	890828	Argument	& pcbits2		887825	2					
ANR	890829	UnaryOperationExpression	& pcbits2		887825	0					
ANR	890830	UnaryOperator	&		887825	0					
ANR	890831	Identifier	pcbits2		887825	1					
ANR	890832	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.debug"" ) )"		887825	1					
ANR	890833	Condition	"r_config_get_i ( core -> config , ""cfg.debug"" )"	2706:7:78649:78690	887825	0	True				
ANR	890834	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		887825	0					
ANR	890835	Callee	r_config_get_i		887825	0					
ANR	890836	Identifier	r_config_get_i		887825	0					
ANR	890837	ArgumentList	core -> config		887825	1					
ANR	890838	Argument	core -> config		887825	0					
ANR	890839	PtrMemberAccess	core -> config		887825	0					
ANR	890840	Identifier	core		887825	0					
ANR	890841	Identifier	config		887825	1					
ANR	890842	Argument	"""cfg.debug"""		887825	1					
ANR	890843	PrimaryExpression	"""cfg.debug"""		887825	0					
ANR	890844	CompoundStatement		454:51:12110:12110	887825	1					
ANR	890845	IfStatement	"if ( r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false ) )"		887825	0					
ANR	890846	Condition	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	2707:8:78703:78753	887825	0	True				
ANR	890847	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		887825	0					
ANR	890848	Callee	r_debug_reg_sync		887825	0					
ANR	890849	Identifier	r_debug_reg_sync		887825	0					
ANR	890850	ArgumentList	core -> dbg		887825	1					
ANR	890851	Argument	core -> dbg		887825	0					
ANR	890852	PtrMemberAccess	core -> dbg		887825	0					
ANR	890853	Identifier	core		887825	0					
ANR	890854	Identifier	dbg		887825	1					
ANR	890855	Argument	R_REG_TYPE_GPR		887825	1					
ANR	890856	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	890857	Argument	false		887825	2					
ANR	890858	Identifier	false		887825	0					
ANR	890859	CompoundStatement		455:61:12173:12173	887825	1					
ANR	890860	IfStatement	if ( pcbits && pcbits != bits )		887825	0					
ANR	890861	Condition	pcbits && pcbits != bits	2708:9:78767:78790	887825	0	True				
ANR	890862	AndExpression	pcbits && pcbits != bits		887825	0		&&			
ANR	890863	Identifier	pcbits		887825	0					
ANR	890864	EqualityExpression	pcbits != bits		887825	1		!=			
ANR	890865	Identifier	pcbits		887825	0					
ANR	890866	Identifier	bits		887825	1					
ANR	890867	CompoundStatement		456:35:12210:12210	887825	1					
ANR	890868	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , 2 , use_color )"	2709:6:78801:78867	887825	0	True				
ANR	890869	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , 2 , use_color )"		887825	0					
ANR	890870	Callee	r_debug_reg_list		887825	0					
ANR	890871	Identifier	r_debug_reg_list		887825	0					
ANR	890872	ArgumentList	core -> dbg		887825	1					
ANR	890873	Argument	core -> dbg		887825	0					
ANR	890874	PtrMemberAccess	core -> dbg		887825	0					
ANR	890875	Identifier	core		887825	0					
ANR	890876	Identifier	dbg		887825	1					
ANR	890877	Argument	R_REG_TYPE_GPR		887825	1					
ANR	890878	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	890879	Argument	pcbits		887825	2					
ANR	890880	Identifier	pcbits		887825	0					
ANR	890881	Argument	2		887825	3					
ANR	890882	PrimaryExpression	2		887825	0					
ANR	890883	Argument	use_color		887825	4					
ANR	890884	Identifier	use_color		887825	0					
ANR	890885	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 2 , use_color )"	2711:5:78922:78986	887825	1	True				
ANR	890886	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 2 , use_color )"		887825	0					
ANR	890887	Callee	r_debug_reg_list		887825	0					
ANR	890888	Identifier	r_debug_reg_list		887825	0					
ANR	890889	ArgumentList	core -> dbg		887825	1					
ANR	890890	Argument	core -> dbg		887825	0					
ANR	890891	PtrMemberAccess	core -> dbg		887825	0					
ANR	890892	Identifier	core		887825	0					
ANR	890893	Identifier	dbg		887825	1					
ANR	890894	Argument	R_REG_TYPE_GPR		887825	1					
ANR	890895	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	890896	Argument	bits		887825	2					
ANR	890897	Identifier	bits		887825	0					
ANR	890898	Argument	2		887825	3					
ANR	890899	PrimaryExpression	2		887825	0					
ANR	890900	Argument	use_color		887825	4					
ANR	890901	Identifier	use_color		887825	0					
ANR	890902	IfStatement	if ( pcbits2 )		887825	2					
ANR	890903	Condition	pcbits2	2712:9:79038:79044	887825	0	True				
ANR	890904	Identifier	pcbits2		887825	0					
ANR	890905	CompoundStatement		460:18:12464:12464	887825	1					
ANR	890906	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits2 , 2 , use_color )"	2713:6:79055:79122	887825	0	True				
ANR	890907	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits2 , 2 , use_color )"		887825	0					
ANR	890908	Callee	r_debug_reg_list		887825	0					
ANR	890909	Identifier	r_debug_reg_list		887825	0					
ANR	890910	ArgumentList	core -> dbg		887825	1					
ANR	890911	Argument	core -> dbg		887825	0					
ANR	890912	PtrMemberAccess	core -> dbg		887825	0					
ANR	890913	Identifier	core		887825	0					
ANR	890914	Identifier	dbg		887825	1					
ANR	890915	Argument	R_REG_TYPE_GPR		887825	1					
ANR	890916	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	890917	Argument	pcbits2		887825	2					
ANR	890918	Identifier	pcbits2		887825	0					
ANR	890919	Argument	2		887825	3					
ANR	890920	PrimaryExpression	2		887825	0					
ANR	890921	Argument	use_color		887825	4					
ANR	890922	Identifier	use_color		887825	0					
ANR	890923	ElseStatement	else		887825	0					
ANR	890924	CompoundStatement		465:4:12687:12714	887825	0					
ANR	890925	IdentifierDeclStatement	RReg * orig = core -> dbg -> reg ;	2717:4:79270:79297	887825	0	True				
ANR	890926	IdentifierDecl	* orig = core -> dbg -> reg		887825	0					
ANR	890927	IdentifierDeclType	RReg *		887825	0					
ANR	890928	Identifier	orig		887825	1					
ANR	890929	AssignmentExpression	* orig = core -> dbg -> reg		887825	2		=			
ANR	890930	Identifier	orig		887825	0					
ANR	890931	PtrMemberAccess	core -> dbg -> reg		887825	1					
ANR	890932	PtrMemberAccess	core -> dbg		887825	0					
ANR	890933	Identifier	core		887825	0					
ANR	890934	Identifier	dbg		887825	1					
ANR	890935	Identifier	reg		887825	1					
ANR	890936	ExpressionStatement	core -> dbg -> reg = core -> anal -> reg	2718:4:79303:79335	887825	1	True				
ANR	890937	AssignmentExpression	core -> dbg -> reg = core -> anal -> reg		887825	0		=			
ANR	890938	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	890939	PtrMemberAccess	core -> dbg		887825	0					
ANR	890940	Identifier	core		887825	0					
ANR	890941	Identifier	dbg		887825	1					
ANR	890942	Identifier	reg		887825	1					
ANR	890943	PtrMemberAccess	core -> anal -> reg		887825	1					
ANR	890944	PtrMemberAccess	core -> anal		887825	0					
ANR	890945	Identifier	core		887825	0					
ANR	890946	Identifier	anal		887825	1					
ANR	890947	Identifier	reg		887825	1					
ANR	890948	IfStatement	if ( pcbits && pcbits != bits )		887825	2					
ANR	890949	Condition	pcbits && pcbits != bits	2719:8:79345:79368	887825	0	True				
ANR	890950	AndExpression	pcbits && pcbits != bits		887825	0		&&			
ANR	890951	Identifier	pcbits		887825	0					
ANR	890952	EqualityExpression	pcbits != bits		887825	1		!=			
ANR	890953	Identifier	pcbits		887825	0					
ANR	890954	Identifier	bits		887825	1					
ANR	890955	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , 2 , use_color )"	2720:5:79376:79442	887825	1	True				
ANR	890956	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , 2 , use_color )"		887825	0					
ANR	890957	Callee	r_debug_reg_list		887825	0					
ANR	890958	Identifier	r_debug_reg_list		887825	0					
ANR	890959	ArgumentList	core -> dbg		887825	1					
ANR	890960	Argument	core -> dbg		887825	0					
ANR	890961	PtrMemberAccess	core -> dbg		887825	0					
ANR	890962	Identifier	core		887825	0					
ANR	890963	Identifier	dbg		887825	1					
ANR	890964	Argument	R_REG_TYPE_GPR		887825	1					
ANR	890965	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	890966	Argument	pcbits		887825	2					
ANR	890967	Identifier	pcbits		887825	0					
ANR	890968	Argument	2		887825	3					
ANR	890969	PrimaryExpression	2		887825	0					
ANR	890970	Argument	use_color		887825	4					
ANR	890971	Identifier	use_color		887825	0					
ANR	890972	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 2 , use_color )"	2721:4:79489:79553	887825	3	True				
ANR	890973	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 2 , use_color )"		887825	0					
ANR	890974	Callee	r_debug_reg_list		887825	0					
ANR	890975	Identifier	r_debug_reg_list		887825	0					
ANR	890976	ArgumentList	core -> dbg		887825	1					
ANR	890977	Argument	core -> dbg		887825	0					
ANR	890978	PtrMemberAccess	core -> dbg		887825	0					
ANR	890979	Identifier	core		887825	0					
ANR	890980	Identifier	dbg		887825	1					
ANR	890981	Argument	R_REG_TYPE_GPR		887825	1					
ANR	890982	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	890983	Argument	bits		887825	2					
ANR	890984	Identifier	bits		887825	0					
ANR	890985	Argument	2		887825	3					
ANR	890986	PrimaryExpression	2		887825	0					
ANR	890987	Argument	use_color		887825	4					
ANR	890988	Identifier	use_color		887825	0					
ANR	890989	ExpressionStatement	core -> dbg -> reg = orig	2722:4:79600:79621	887825	4	True				
ANR	890990	AssignmentExpression	core -> dbg -> reg = orig		887825	0		=			
ANR	890991	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	890992	PtrMemberAccess	core -> dbg		887825	0					
ANR	890993	Identifier	core		887825	0					
ANR	890994	Identifier	dbg		887825	1					
ANR	890995	Identifier	reg		887825	1					
ANR	890996	Identifier	orig		887825	1					
ANR	890997	BreakStatement	break ;	2725:2:79634:79639	887825	51	True				
ANR	890998	Label	case '.' :	2726:1:79642:79650	887825	52	True				
ANR	890999	IfStatement	"if ( r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false ) )"		887825	53					
ANR	891000	Condition	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	2727:6:79658:79708	887825	0	True				
ANR	891001	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		887825	0					
ANR	891002	Callee	r_debug_reg_sync		887825	0					
ANR	891003	Identifier	r_debug_reg_sync		887825	0					
ANR	891004	ArgumentList	core -> dbg		887825	1					
ANR	891005	Argument	core -> dbg		887825	0					
ANR	891006	PtrMemberAccess	core -> dbg		887825	0					
ANR	891007	Identifier	core		887825	0					
ANR	891008	Identifier	dbg		887825	1					
ANR	891009	Argument	R_REG_TYPE_GPR		887825	1					
ANR	891010	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	891011	Argument	false		887825	2					
ANR	891012	Identifier	false		887825	0					
ANR	891013	CompoundStatement		476:3:13133:13190	887825	1					
ANR	891014	IdentifierDeclStatement	"int pcbits2 , pcbits = grab_bits ( core , str + 1 , & pcbits2 ) ;"	2728:3:79716:79773	887825	0	True				
ANR	891015	IdentifierDecl	pcbits2		887825	0					
ANR	891016	IdentifierDeclType	int		887825	0					
ANR	891017	Identifier	pcbits2		887825	1					
ANR	891018	IdentifierDecl	"pcbits = grab_bits ( core , str + 1 , & pcbits2 )"		887825	1					
ANR	891019	IdentifierDeclType	int		887825	0					
ANR	891020	Identifier	pcbits		887825	1					
ANR	891021	AssignmentExpression	"pcbits = grab_bits ( core , str + 1 , & pcbits2 )"		887825	2		=			
ANR	891022	Identifier	pcbits		887825	0					
ANR	891023	CallExpression	"grab_bits ( core , str + 1 , & pcbits2 )"		887825	1					
ANR	891024	Callee	grab_bits		887825	0					
ANR	891025	Identifier	grab_bits		887825	0					
ANR	891026	ArgumentList	core		887825	1					
ANR	891027	Argument	core		887825	0					
ANR	891028	Identifier	core		887825	0					
ANR	891029	Argument	str + 1		887825	1					
ANR	891030	AdditiveExpression	str + 1		887825	0		+			
ANR	891031	Identifier	str		887825	0					
ANR	891032	PrimaryExpression	1		887825	1					
ANR	891033	Argument	& pcbits2		887825	2					
ANR	891034	UnaryOperationExpression	& pcbits2		887825	0					
ANR	891035	UnaryOperator	&		887825	0					
ANR	891036	Identifier	pcbits2		887825	1					
ANR	891037	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , '.' , use_color )"	2729:3:79778:79846	887825	1	True				
ANR	891038	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , '.' , use_color )"		887825	0					
ANR	891039	Callee	r_debug_reg_list		887825	0					
ANR	891040	Identifier	r_debug_reg_list		887825	0					
ANR	891041	ArgumentList	core -> dbg		887825	1					
ANR	891042	Argument	core -> dbg		887825	0					
ANR	891043	PtrMemberAccess	core -> dbg		887825	0					
ANR	891044	Identifier	core		887825	0					
ANR	891045	Identifier	dbg		887825	1					
ANR	891046	Argument	R_REG_TYPE_GPR		887825	1					
ANR	891047	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	891048	Argument	pcbits		887825	2					
ANR	891049	Identifier	pcbits		887825	0					
ANR	891050	Argument	'.'		887825	3					
ANR	891051	PrimaryExpression	'.'		887825	0					
ANR	891052	Argument	use_color		887825	4					
ANR	891053	Identifier	use_color		887825	0					
ANR	891054	IfStatement	if ( pcbits2 )		887825	2					
ANR	891055	Condition	pcbits2	2730:7:79855:79861	887825	0	True				
ANR	891056	Identifier	pcbits2		887825	0					
ANR	891057	CompoundStatement		478:16:13281:13281	887825	1					
ANR	891058	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits2 , '.' , use_color )"	2731:4:79870:79939	887825	0	True				
ANR	891059	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits2 , '.' , use_color )"		887825	0					
ANR	891060	Callee	r_debug_reg_list		887825	0					
ANR	891061	Identifier	r_debug_reg_list		887825	0					
ANR	891062	ArgumentList	core -> dbg		887825	1					
ANR	891063	Argument	core -> dbg		887825	0					
ANR	891064	PtrMemberAccess	core -> dbg		887825	0					
ANR	891065	Identifier	core		887825	0					
ANR	891066	Identifier	dbg		887825	1					
ANR	891067	Argument	R_REG_TYPE_GPR		887825	1					
ANR	891068	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	891069	Argument	pcbits2		887825	2					
ANR	891070	Identifier	pcbits2		887825	0					
ANR	891071	Argument	'.'		887825	3					
ANR	891072	PrimaryExpression	'.'		887825	0					
ANR	891073	Argument	use_color		887825	4					
ANR	891074	Identifier	use_color		887825	0					
ANR	891075	BreakStatement	break ;	2734:2:79952:79957	887825	54	True				
ANR	891076	Label	case '*' :	2735:1:79960:79968	887825	55	True				
ANR	891077	IfStatement	"if ( r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false ) )"		887825	56					
ANR	891078	Condition	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	2736:6:79985:80035	887825	0	True				
ANR	891079	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		887825	0					
ANR	891080	Callee	r_debug_reg_sync		887825	0					
ANR	891081	Identifier	r_debug_reg_sync		887825	0					
ANR	891082	ArgumentList	core -> dbg		887825	1					
ANR	891083	Argument	core -> dbg		887825	0					
ANR	891084	PtrMemberAccess	core -> dbg		887825	0					
ANR	891085	Identifier	core		887825	0					
ANR	891086	Identifier	dbg		887825	1					
ANR	891087	Argument	R_REG_TYPE_GPR		887825	1					
ANR	891088	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	891089	Argument	false		887825	2					
ANR	891090	Identifier	false		887825	0					
ANR	891091	CompoundStatement		485:3:13460:13517	887825	1					
ANR	891092	IdentifierDeclStatement	"int pcbits2 , pcbits = grab_bits ( core , str + 1 , & pcbits2 ) ;"	2737:3:80043:80100	887825	0	True				
ANR	891093	IdentifierDecl	pcbits2		887825	0					
ANR	891094	IdentifierDeclType	int		887825	0					
ANR	891095	Identifier	pcbits2		887825	1					
ANR	891096	IdentifierDecl	"pcbits = grab_bits ( core , str + 1 , & pcbits2 )"		887825	1					
ANR	891097	IdentifierDeclType	int		887825	0					
ANR	891098	Identifier	pcbits		887825	1					
ANR	891099	AssignmentExpression	"pcbits = grab_bits ( core , str + 1 , & pcbits2 )"		887825	2		=			
ANR	891100	Identifier	pcbits		887825	0					
ANR	891101	CallExpression	"grab_bits ( core , str + 1 , & pcbits2 )"		887825	1					
ANR	891102	Callee	grab_bits		887825	0					
ANR	891103	Identifier	grab_bits		887825	0					
ANR	891104	ArgumentList	core		887825	1					
ANR	891105	Argument	core		887825	0					
ANR	891106	Identifier	core		887825	0					
ANR	891107	Argument	str + 1		887825	1					
ANR	891108	AdditiveExpression	str + 1		887825	0		+			
ANR	891109	Identifier	str		887825	0					
ANR	891110	PrimaryExpression	1		887825	1					
ANR	891111	Argument	& pcbits2		887825	2					
ANR	891112	UnaryOperationExpression	& pcbits2		887825	0					
ANR	891113	UnaryOperator	&		887825	0					
ANR	891114	Identifier	pcbits2		887825	1					
ANR	891115	ExpressionStatement	"r_cons_printf ( ""fs+regs\\n"" )"	2738:3:80105:80132	887825	1	True				
ANR	891116	CallExpression	"r_cons_printf ( ""fs+regs\\n"" )"		887825	0					
ANR	891117	Callee	r_cons_printf		887825	0					
ANR	891118	Identifier	r_cons_printf		887825	0					
ANR	891119	ArgumentList	"""fs+regs\\n"""		887825	1					
ANR	891120	Argument	"""fs+regs\\n"""		887825	0					
ANR	891121	PrimaryExpression	"""fs+regs\\n"""		887825	0					
ANR	891122	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , '*' , use_color )"	2739:3:80137:80205	887825	2	True				
ANR	891123	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , '*' , use_color )"		887825	0					
ANR	891124	Callee	r_debug_reg_list		887825	0					
ANR	891125	Identifier	r_debug_reg_list		887825	0					
ANR	891126	ArgumentList	core -> dbg		887825	1					
ANR	891127	Argument	core -> dbg		887825	0					
ANR	891128	PtrMemberAccess	core -> dbg		887825	0					
ANR	891129	Identifier	core		887825	0					
ANR	891130	Identifier	dbg		887825	1					
ANR	891131	Argument	R_REG_TYPE_GPR		887825	1					
ANR	891132	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	891133	Argument	pcbits		887825	2					
ANR	891134	Identifier	pcbits		887825	0					
ANR	891135	Argument	'*'		887825	3					
ANR	891136	PrimaryExpression	'*'		887825	0					
ANR	891137	Argument	use_color		887825	4					
ANR	891138	Identifier	use_color		887825	0					
ANR	891139	IfStatement	if ( pcbits2 )		887825	3					
ANR	891140	Condition	pcbits2	2740:7:80214:80220	887825	0	True				
ANR	891141	Identifier	pcbits2		887825	0					
ANR	891142	CompoundStatement		488:16:13640:13640	887825	1					
ANR	891143	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits2 , '*' , use_color )"	2741:4:80229:80298	887825	0	True				
ANR	891144	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits2 , '*' , use_color )"		887825	0					
ANR	891145	Callee	r_debug_reg_list		887825	0					
ANR	891146	Identifier	r_debug_reg_list		887825	0					
ANR	891147	ArgumentList	core -> dbg		887825	1					
ANR	891148	Argument	core -> dbg		887825	0					
ANR	891149	PtrMemberAccess	core -> dbg		887825	0					
ANR	891150	Identifier	core		887825	0					
ANR	891151	Identifier	dbg		887825	1					
ANR	891152	Argument	R_REG_TYPE_GPR		887825	1					
ANR	891153	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	891154	Argument	pcbits2		887825	2					
ANR	891155	Identifier	pcbits2		887825	0					
ANR	891156	Argument	'*'		887825	3					
ANR	891157	PrimaryExpression	'*'		887825	0					
ANR	891158	Argument	use_color		887825	4					
ANR	891159	Identifier	use_color		887825	0					
ANR	891160	ExpressionStatement	r_flag_space_pop ( core -> flags )	2743:3:80308:80338	887825	4	True				
ANR	891161	CallExpression	r_flag_space_pop ( core -> flags )		887825	0					
ANR	891162	Callee	r_flag_space_pop		887825	0					
ANR	891163	Identifier	r_flag_space_pop		887825	0					
ANR	891164	ArgumentList	core -> flags		887825	1					
ANR	891165	Argument	core -> flags		887825	0					
ANR	891166	PtrMemberAccess	core -> flags		887825	0					
ANR	891167	Identifier	core		887825	0					
ANR	891168	Identifier	flags		887825	1					
ANR	891169	ExpressionStatement	"r_cons_printf ( ""fs-\\n"" )"	2744:3:80343:80366	887825	5	True				
ANR	891170	CallExpression	"r_cons_printf ( ""fs-\\n"" )"		887825	0					
ANR	891171	Callee	r_cons_printf		887825	0					
ANR	891172	Identifier	r_cons_printf		887825	0					
ANR	891173	ArgumentList	"""fs-\\n"""		887825	1					
ANR	891174	Argument	"""fs-\\n"""		887825	0					
ANR	891175	PrimaryExpression	"""fs-\\n"""		887825	0					
ANR	891176	BreakStatement	break ;	2746:2:80374:80379	887825	57	True				
ANR	891177	Label	case 'i' :	2747:1:80382:80390	887825	58	True				
ANR	891178	ExpressionStatement	"r_core_debug_ri ( core , core -> dbg -> reg , 0 )"	2748:2:80403:80444	887825	59	True				
ANR	891179	CallExpression	"r_core_debug_ri ( core , core -> dbg -> reg , 0 )"		887825	0					
ANR	891180	Callee	r_core_debug_ri		887825	0					
ANR	891181	Identifier	r_core_debug_ri		887825	0					
ANR	891182	ArgumentList	core		887825	1					
ANR	891183	Argument	core		887825	0					
ANR	891184	Identifier	core		887825	0					
ANR	891185	Argument	core -> dbg -> reg		887825	1					
ANR	891186	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	891187	PtrMemberAccess	core -> dbg		887825	0					
ANR	891188	Identifier	core		887825	0					
ANR	891189	Identifier	dbg		887825	1					
ANR	891190	Identifier	reg		887825	1					
ANR	891191	Argument	0		887825	2					
ANR	891192	PrimaryExpression	0		887825	0					
ANR	891193	BreakStatement	break ;	2749:2:80448:80453	887825	60	True				
ANR	891194	Label	case 'r' :	2750:1:80456:80464	887825	61	True				
ANR	891195	SwitchStatement	switch ( str [ 1 ] )		887825	62					
ANR	891196	Condition	str [ 1 ]	2751:10:80485:80490	887825	0	True				
ANR	891197	ArrayIndexing	str [ 1 ]		887825	0					
ANR	891198	Identifier	str		887825	0					
ANR	891199	PrimaryExpression	1		887825	1					
ANR	891200	CompoundStatement		499:18:13910:13910	887825	1					
ANR	891201	Label	case 'j' :	2752:2:80497:80505	887825	0	True				
ANR	891202	ExpressionStatement	"r_core_debug_rr ( core , core -> dbg -> reg , 'j' )"	2753:3:80520:80563	887825	1	True				
ANR	891203	CallExpression	"r_core_debug_rr ( core , core -> dbg -> reg , 'j' )"		887825	0					
ANR	891204	Callee	r_core_debug_rr		887825	0					
ANR	891205	Identifier	r_core_debug_rr		887825	0					
ANR	891206	ArgumentList	core		887825	1					
ANR	891207	Argument	core		887825	0					
ANR	891208	Identifier	core		887825	0					
ANR	891209	Argument	core -> dbg -> reg		887825	1					
ANR	891210	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	891211	PtrMemberAccess	core -> dbg		887825	0					
ANR	891212	Identifier	core		887825	0					
ANR	891213	Identifier	dbg		887825	1					
ANR	891214	Identifier	reg		887825	1					
ANR	891215	Argument	'j'		887825	2					
ANR	891216	PrimaryExpression	'j'		887825	0					
ANR	891217	BreakStatement	break ;	2754:3:80568:80573	887825	2	True				
ANR	891218	Label	default :	2755:2:80577:80584	887825	3	True				
ANR	891219	Identifier	default		887825	0					
ANR	891220	ExpressionStatement	"r_core_debug_rr ( core , core -> dbg -> reg , 0 )"	2756:3:80589:80630	887825	4	True				
ANR	891221	CallExpression	"r_core_debug_rr ( core , core -> dbg -> reg , 0 )"		887825	0					
ANR	891222	Callee	r_core_debug_rr		887825	0					
ANR	891223	Identifier	r_core_debug_rr		887825	0					
ANR	891224	ArgumentList	core		887825	1					
ANR	891225	Argument	core		887825	0					
ANR	891226	Identifier	core		887825	0					
ANR	891227	Argument	core -> dbg -> reg		887825	1					
ANR	891228	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	891229	PtrMemberAccess	core -> dbg		887825	0					
ANR	891230	Identifier	core		887825	0					
ANR	891231	Identifier	dbg		887825	1					
ANR	891232	Identifier	reg		887825	1					
ANR	891233	Argument	0		887825	2					
ANR	891234	PrimaryExpression	0		887825	0					
ANR	891235	BreakStatement	break ;	2757:3:80635:80640	887825	5	True				
ANR	891236	BreakStatement	break ;	2759:2:80648:80653	887825	63	True				
ANR	891237	Label	case 'j' :	2760:1:80656:80664	887825	64	True				
ANR	891238	Label	case '\\0' :	2761:1:80676:80685	887825	65	True				
ANR	891239	IfStatement	"if ( r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false ) )"		887825	66					
ANR	891240	Condition	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	2762:6:80701:80751	887825	0	True				
ANR	891241	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		887825	0					
ANR	891242	Callee	r_debug_reg_sync		887825	0					
ANR	891243	Identifier	r_debug_reg_sync		887825	0					
ANR	891244	ArgumentList	core -> dbg		887825	1					
ANR	891245	Argument	core -> dbg		887825	0					
ANR	891246	PtrMemberAccess	core -> dbg		887825	0					
ANR	891247	Identifier	core		887825	0					
ANR	891248	Identifier	dbg		887825	1					
ANR	891249	Argument	R_REG_TYPE_GPR		887825	1					
ANR	891250	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	891251	Argument	false		887825	2					
ANR	891252	Identifier	false		887825	0					
ANR	891253	CompoundStatement		513:3:14283:14337	887825	1					
ANR	891254	IdentifierDeclStatement	int pcbits = core -> anal -> bits ;	2763:3:80759:80788	887825	0	True				
ANR	891255	IdentifierDecl	pcbits = core -> anal -> bits		887825	0					
ANR	891256	IdentifierDeclType	int		887825	0					
ANR	891257	Identifier	pcbits		887825	1					
ANR	891258	AssignmentExpression	pcbits = core -> anal -> bits		887825	2		=			
ANR	891259	Identifier	pcbits		887825	0					
ANR	891260	PtrMemberAccess	core -> anal -> bits		887825	1					
ANR	891261	PtrMemberAccess	core -> anal		887825	0					
ANR	891262	Identifier	core		887825	0					
ANR	891263	Identifier	anal		887825	1					
ANR	891264	Identifier	bits		887825	1					
ANR	891265	IdentifierDeclStatement	"const char * pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	2764:3:80793:80861	887825	1	True				
ANR	891266	IdentifierDecl	"* pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		887825	0					
ANR	891267	IdentifierDeclType	const char *		887825	0					
ANR	891268	Identifier	pcname		887825	1					
ANR	891269	AssignmentExpression	"* pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		887825	2		=			
ANR	891270	Identifier	pcname		887825	0					
ANR	891271	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		887825	1					
ANR	891272	Callee	r_reg_get_name		887825	0					
ANR	891273	Identifier	r_reg_get_name		887825	0					
ANR	891274	ArgumentList	core -> anal -> reg		887825	1					
ANR	891275	Argument	core -> anal -> reg		887825	0					
ANR	891276	PtrMemberAccess	core -> anal -> reg		887825	0					
ANR	891277	PtrMemberAccess	core -> anal		887825	0					
ANR	891278	Identifier	core		887825	0					
ANR	891279	Identifier	anal		887825	1					
ANR	891280	Identifier	reg		887825	1					
ANR	891281	Argument	R_REG_NAME_PC		887825	1					
ANR	891282	Identifier	R_REG_NAME_PC		887825	0					
ANR	891283	IdentifierDeclStatement	"RRegItem * reg = r_reg_get ( core -> anal -> reg , pcname , 0 ) ;"	2765:3:80866:80920	887825	2	True				
ANR	891284	IdentifierDecl	"* reg = r_reg_get ( core -> anal -> reg , pcname , 0 )"		887825	0					
ANR	891285	IdentifierDeclType	RRegItem *		887825	0					
ANR	891286	Identifier	reg		887825	1					
ANR	891287	AssignmentExpression	"* reg = r_reg_get ( core -> anal -> reg , pcname , 0 )"		887825	2		=			
ANR	891288	Identifier	reg		887825	0					
ANR	891289	CallExpression	"r_reg_get ( core -> anal -> reg , pcname , 0 )"		887825	1					
ANR	891290	Callee	r_reg_get		887825	0					
ANR	891291	Identifier	r_reg_get		887825	0					
ANR	891292	ArgumentList	core -> anal -> reg		887825	1					
ANR	891293	Argument	core -> anal -> reg		887825	0					
ANR	891294	PtrMemberAccess	core -> anal -> reg		887825	0					
ANR	891295	PtrMemberAccess	core -> anal		887825	0					
ANR	891296	Identifier	core		887825	0					
ANR	891297	Identifier	anal		887825	1					
ANR	891298	Identifier	reg		887825	1					
ANR	891299	Argument	pcname		887825	1					
ANR	891300	Identifier	pcname		887825	0					
ANR	891301	Argument	0		887825	2					
ANR	891302	PrimaryExpression	0		887825	0					
ANR	891303	IfStatement	if ( reg )		887825	3					
ANR	891304	Condition	reg	2766:7:80929:80931	887825	0	True				
ANR	891305	Identifier	reg		887825	0					
ANR	891306	CompoundStatement		514:12:14351:14351	887825	1					
ANR	891307	IfStatement	if ( core -> assembler -> bits != reg -> size )		887825	0					
ANR	891308	Condition	core -> assembler -> bits != reg -> size	2767:8:80944:80977	887825	0	True				
ANR	891309	EqualityExpression	core -> assembler -> bits != reg -> size		887825	0		!=			
ANR	891310	PtrMemberAccess	core -> assembler -> bits		887825	0					
ANR	891311	PtrMemberAccess	core -> assembler		887825	0					
ANR	891312	Identifier	core		887825	0					
ANR	891313	Identifier	assembler		887825	1					
ANR	891314	Identifier	bits		887825	1					
ANR	891315	PtrMemberAccess	reg -> size		887825	1					
ANR	891316	Identifier	reg		887825	0					
ANR	891317	Identifier	size		887825	1					
ANR	891318	CompoundStatement		515:44:14397:14397	887825	1					
ANR	891319	ExpressionStatement	pcbits = reg -> size	2768:5:80987:81005	887825	0	True				
ANR	891320	AssignmentExpression	pcbits = reg -> size		887825	0		=			
ANR	891321	Identifier	pcbits		887825	0					
ANR	891322	PtrMemberAccess	reg -> size		887825	1					
ANR	891323	Identifier	reg		887825	0					
ANR	891324	Identifier	size		887825	1					
ANR	891325	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , str [ 0 ] , use_color )"	2771:3:81021:81092	887825	4	True				
ANR	891326	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , str [ 0 ] , use_color )"		887825	0					
ANR	891327	Callee	r_debug_reg_list		887825	0					
ANR	891328	Identifier	r_debug_reg_list		887825	0					
ANR	891329	ArgumentList	core -> dbg		887825	1					
ANR	891330	Argument	core -> dbg		887825	0					
ANR	891331	PtrMemberAccess	core -> dbg		887825	0					
ANR	891332	Identifier	core		887825	0					
ANR	891333	Identifier	dbg		887825	1					
ANR	891334	Argument	R_REG_TYPE_GPR		887825	1					
ANR	891335	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	891336	Argument	pcbits		887825	2					
ANR	891337	Identifier	pcbits		887825	0					
ANR	891338	Argument	str [ 0 ]		887825	3					
ANR	891339	ArrayIndexing	str [ 0 ]		887825	0					
ANR	891340	Identifier	str		887825	0					
ANR	891341	PrimaryExpression	0		887825	1					
ANR	891342	Argument	use_color		887825	4					
ANR	891343	Identifier	use_color		887825	0					
ANR	891344	ElseStatement	else		887825	0					
ANR	891345	CompoundStatement		520:9:14520:14520	887825	0					
ANR	891346	ExpressionStatement	"eprintf ( ""cannot retrieve registers from pid %d\\n"" , core -> dbg -> pid )"	2773:3:81108:81175	887825	0	True				
ANR	891347	CallExpression	"eprintf ( ""cannot retrieve registers from pid %d\\n"" , core -> dbg -> pid )"		887825	0					
ANR	891348	Callee	eprintf		887825	0					
ANR	891349	Identifier	eprintf		887825	0					
ANR	891350	ArgumentList	"""cannot retrieve registers from pid %d\\n"""		887825	1					
ANR	891351	Argument	"""cannot retrieve registers from pid %d\\n"""		887825	0					
ANR	891352	PrimaryExpression	"""cannot retrieve registers from pid %d\\n"""		887825	0					
ANR	891353	Argument	core -> dbg -> pid		887825	1					
ANR	891354	PtrMemberAccess	core -> dbg -> pid		887825	0					
ANR	891355	PtrMemberAccess	core -> dbg		887825	0					
ANR	891356	Identifier	core		887825	0					
ANR	891357	Identifier	dbg		887825	1					
ANR	891358	Identifier	pid		887825	1					
ANR	891359	BreakStatement	break ;	2775:2:81183:81188	887825	67	True				
ANR	891360	Label	case ' ' :	2776:1:81191:81199	887825	68	True				
ANR	891361	ExpressionStatement	"arg = strchr ( str + 1 , '=' )"	2777:2:81211:81238	887825	69	True				
ANR	891362	AssignmentExpression	"arg = strchr ( str + 1 , '=' )"		887825	0		=			
ANR	891363	Identifier	arg		887825	0					
ANR	891364	CallExpression	"strchr ( str + 1 , '=' )"		887825	1					
ANR	891365	Callee	strchr		887825	0					
ANR	891366	Identifier	strchr		887825	0					
ANR	891367	ArgumentList	str + 1		887825	1					
ANR	891368	Argument	str + 1		887825	0					
ANR	891369	AdditiveExpression	str + 1		887825	0		+			
ANR	891370	Identifier	str		887825	0					
ANR	891371	PrimaryExpression	1		887825	1					
ANR	891372	Argument	'='		887825	1					
ANR	891373	PrimaryExpression	'='		887825	0					
ANR	891374	IfStatement	if ( arg )		887825	70					
ANR	891375	Condition	arg	2778:6:81246:81248	887825	0	True				
ANR	891376	Identifier	arg		887825	0					
ANR	891377	CompoundStatement		529:3:14730:14812	887825	1					
ANR	891378	ExpressionStatement	* arg = 0	2779:3:81256:81264	887825	0	True				
ANR	891379	AssignmentExpression	* arg = 0		887825	0		=			
ANR	891380	UnaryOperationExpression	* arg		887825	0					
ANR	891381	UnaryOperator	*		887825	0					
ANR	891382	Identifier	arg		887825	1					
ANR	891383	PrimaryExpression	0		887825	1					
ANR	891384	IdentifierDeclStatement	char * string = r_str_trim_dup ( str + 1 ) ;	2780:3:81269:81308	887825	1	True				
ANR	891385	IdentifierDecl	* string = r_str_trim_dup ( str + 1 )		887825	0					
ANR	891386	IdentifierDeclType	char *		887825	0					
ANR	891387	Identifier	string		887825	1					
ANR	891388	AssignmentExpression	* string = r_str_trim_dup ( str + 1 )		887825	2		=			
ANR	891389	Identifier	string		887825	0					
ANR	891390	CallExpression	r_str_trim_dup ( str + 1 )		887825	1					
ANR	891391	Callee	r_str_trim_dup		887825	0					
ANR	891392	Identifier	r_str_trim_dup		887825	0					
ANR	891393	ArgumentList	str + 1		887825	1					
ANR	891394	Argument	str + 1		887825	0					
ANR	891395	AdditiveExpression	str + 1		887825	0		+			
ANR	891396	Identifier	str		887825	0					
ANR	891397	PrimaryExpression	1		887825	1					
ANR	891398	IdentifierDeclStatement	"const char * regname = r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( string ) ) ;"	2781:3:81313:81395	887825	2	True				
ANR	891399	IdentifierDecl	"* regname = r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( string ) )"		887825	0					
ANR	891400	IdentifierDeclType	const char *		887825	0					
ANR	891401	Identifier	regname		887825	1					
ANR	891402	AssignmentExpression	"* regname = r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( string ) )"		887825	2		=			
ANR	891403	Identifier	regname		887825	0					
ANR	891404	CallExpression	"r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( string ) )"		887825	1					
ANR	891405	Callee	r_reg_get_name		887825	0					
ANR	891406	Identifier	r_reg_get_name		887825	0					
ANR	891407	ArgumentList	core -> dbg -> reg		887825	1					
ANR	891408	Argument	core -> dbg -> reg		887825	0					
ANR	891409	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	891410	PtrMemberAccess	core -> dbg		887825	0					
ANR	891411	Identifier	core		887825	0					
ANR	891412	Identifier	dbg		887825	1					
ANR	891413	Identifier	reg		887825	1					
ANR	891414	Argument	r_reg_get_name_idx ( string )		887825	1					
ANR	891415	CallExpression	r_reg_get_name_idx ( string )		887825	0					
ANR	891416	Callee	r_reg_get_name_idx		887825	0					
ANR	891417	Identifier	r_reg_get_name_idx		887825	0					
ANR	891418	ArgumentList	string		887825	1					
ANR	891419	Argument	string		887825	0					
ANR	891420	Identifier	string		887825	0					
ANR	891421	IfStatement	if ( ! regname )		887825	3					
ANR	891422	Condition	! regname	2782:7:81404:81411	887825	0	True				
ANR	891423	UnaryOperationExpression	! regname		887825	0					
ANR	891424	UnaryOperator	!		887825	0					
ANR	891425	Identifier	regname		887825	1					
ANR	891426	CompoundStatement		530:17:14831:14831	887825	1					
ANR	891427	ExpressionStatement	regname = string	2783:4:81420:81436	887825	0	True				
ANR	891428	AssignmentExpression	regname = string		887825	0		=			
ANR	891429	Identifier	regname		887825	0					
ANR	891430	Identifier	string		887825	1					
ANR	891431	ExpressionStatement	"r = r_reg_get ( core -> dbg -> reg , regname , - 1 )"	2785:3:81446:81489	887825	4	True				
ANR	891432	AssignmentExpression	"r = r_reg_get ( core -> dbg -> reg , regname , - 1 )"		887825	0		=			
ANR	891433	Identifier	r		887825	0					
ANR	891434	CallExpression	"r_reg_get ( core -> dbg -> reg , regname , - 1 )"		887825	1					
ANR	891435	Callee	r_reg_get		887825	0					
ANR	891436	Identifier	r_reg_get		887825	0					
ANR	891437	ArgumentList	core -> dbg -> reg		887825	1					
ANR	891438	Argument	core -> dbg -> reg		887825	0					
ANR	891439	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	891440	PtrMemberAccess	core -> dbg		887825	0					
ANR	891441	Identifier	core		887825	0					
ANR	891442	Identifier	dbg		887825	1					
ANR	891443	Identifier	reg		887825	1					
ANR	891444	Argument	regname		887825	1					
ANR	891445	Identifier	regname		887825	0					
ANR	891446	Argument	- 1		887825	2					
ANR	891447	UnaryOperationExpression	- 1		887825	0					
ANR	891448	UnaryOperator	-		887825	0					
ANR	891449	PrimaryExpression	1		887825	1					
ANR	891450	IfStatement	if ( r )		887825	5					
ANR	891451	Condition	r	2786:7:81517:81517	887825	0	True				
ANR	891452	Identifier	r		887825	0					
ANR	891453	CompoundStatement		534:10:14937:14937	887825	1					
ANR	891454	IfStatement	if ( r -> flags )		887825	0					
ANR	891455	Condition	r -> flags	2787:8:81530:81537	887825	0	True				
ANR	891456	PtrMemberAccess	r -> flags		887825	0					
ANR	891457	Identifier	r		887825	0					
ANR	891458	Identifier	flags		887825	1					
ANR	891459	CompoundStatement		535:18:14957:14957	887825	1					
ANR	891460	Statement	r_cons_printf	2788:5:81547:81559	887825	0	True				
ANR	891461	Statement	(	2788:19:81561:81561	887825	1	True				
ANR	891462	Statement	"""0x%08"""	2788:20:81562:81568	887825	2	True				
ANR	891463	Statement	PFMT64x	2788:27:81569:81575	887825	3	True				
ANR	891464	Statement	""" ->"""	2788:34:81576:81580	887825	4	True				
ANR	891465	Statement	","	2788:39:81581:81581	887825	5	True				
ANR	891466	Statement	r_reg_get_value	2789:7:81590:81604	887825	6	True				
ANR	891467	Statement	(	2789:23:81606:81606	887825	7	True				
ANR	891468	Statement	core	2789:24:81607:81610	887825	8	True				
ANR	891469	Statement	->	2789:28:81611:81612	887825	9	True				
ANR	891470	Statement	dbg	2789:30:81613:81615	887825	10	True				
ANR	891471	Statement	->	2789:33:81616:81617	887825	11	True				
ANR	891472	Statement	reg	2789:35:81618:81620	887825	12	True				
ANR	891473	Statement	","	2789:38:81621:81621	887825	13	True				
ANR	891474	Statement	r	2789:40:81623:81623	887825	14	True				
ANR	891475	Statement	)	2789:41:81624:81624	887825	15	True				
ANR	891476	Statement	)	2789:42:81625:81625	887825	16	True				
ANR	891477	ExpressionStatement		2789:43:81626:81626	887825	17	True				
ANR	891478	ExpressionStatement	"r_reg_set_bvalue ( core -> dbg -> reg , r , arg + 1 )"	2790:5:81633:81676	887825	18	True				
ANR	891479	CallExpression	"r_reg_set_bvalue ( core -> dbg -> reg , r , arg + 1 )"		887825	0					
ANR	891480	Callee	r_reg_set_bvalue		887825	0					
ANR	891481	Identifier	r_reg_set_bvalue		887825	0					
ANR	891482	ArgumentList	core -> dbg -> reg		887825	1					
ANR	891483	Argument	core -> dbg -> reg		887825	0					
ANR	891484	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	891485	PtrMemberAccess	core -> dbg		887825	0					
ANR	891486	Identifier	core		887825	0					
ANR	891487	Identifier	dbg		887825	1					
ANR	891488	Identifier	reg		887825	1					
ANR	891489	Argument	r		887825	1					
ANR	891490	Identifier	r		887825	0					
ANR	891491	Argument	arg + 1		887825	2					
ANR	891492	AdditiveExpression	arg + 1		887825	0		+			
ANR	891493	Identifier	arg		887825	0					
ANR	891494	PrimaryExpression	1		887825	1					
ANR	891495	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"	2791:5:81683:81733	887825	19	True				
ANR	891496	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"		887825	0					
ANR	891497	Callee	r_debug_reg_sync		887825	0					
ANR	891498	Identifier	r_debug_reg_sync		887825	0					
ANR	891499	ArgumentList	core -> dbg		887825	1					
ANR	891500	Argument	core -> dbg		887825	0					
ANR	891501	PtrMemberAccess	core -> dbg		887825	0					
ANR	891502	Identifier	core		887825	0					
ANR	891503	Identifier	dbg		887825	1					
ANR	891504	Argument	R_REG_TYPE_ALL		887825	1					
ANR	891505	Identifier	R_REG_TYPE_ALL		887825	0					
ANR	891506	Argument	true		887825	2					
ANR	891507	Identifier	true		887825	0					
ANR	891508	Statement	r_cons_printf	2792:5:81740:81752	887825	20	True				
ANR	891509	Statement	(	2792:19:81754:81754	887825	21	True				
ANR	891510	Statement	"""0x%08"""	2792:20:81755:81761	887825	22	True				
ANR	891511	Statement	PFMT64x	2792:27:81762:81768	887825	23	True				
ANR	891512	Statement	"""\\n"""	2792:34:81769:81772	887825	24	True				
ANR	891513	Statement	","	2792:38:81773:81773	887825	25	True				
ANR	891514	Statement	r_reg_get_value	2793:7:81782:81796	887825	26	True				
ANR	891515	Statement	(	2793:23:81798:81798	887825	27	True				
ANR	891516	Statement	core	2793:24:81799:81802	887825	28	True				
ANR	891517	Statement	->	2793:28:81803:81804	887825	29	True				
ANR	891518	Statement	dbg	2793:30:81805:81807	887825	30	True				
ANR	891519	Statement	->	2793:33:81808:81809	887825	31	True				
ANR	891520	Statement	reg	2793:35:81810:81812	887825	32	True				
ANR	891521	Statement	","	2793:38:81813:81813	887825	33	True				
ANR	891522	Statement	r	2793:40:81815:81815	887825	34	True				
ANR	891523	Statement	)	2793:41:81816:81816	887825	35	True				
ANR	891524	Statement	)	2793:42:81817:81817	887825	36	True				
ANR	891525	ExpressionStatement		2793:43:81818:81818	887825	37	True				
ANR	891526	ElseStatement	else		887825	0					
ANR	891527	CompoundStatement		542:11:15248:15248	887825	0					
ANR	891528	Statement	r_cons_printf	2795:5:81838:81850	887825	0	True				
ANR	891529	Statement	(	2795:19:81852:81852	887825	1	True				
ANR	891530	Statement	"""0x%08"""	2795:20:81853:81859	887825	2	True				
ANR	891531	Statement	PFMT64x	2795:27:81860:81866	887825	3	True				
ANR	891532	Statement	""" ->"""	2795:34:81867:81871	887825	4	True				
ANR	891533	Statement	","	2795:39:81872:81872	887825	5	True				
ANR	891534	Statement	r_reg_get_value	2796:7:81881:81895	887825	6	True				
ANR	891535	Statement	(	2796:23:81897:81897	887825	7	True				
ANR	891536	Statement	core	2796:24:81898:81901	887825	8	True				
ANR	891537	Statement	->	2796:28:81902:81903	887825	9	True				
ANR	891538	Statement	dbg	2796:30:81904:81906	887825	10	True				
ANR	891539	Statement	->	2796:33:81907:81908	887825	11	True				
ANR	891540	Statement	reg	2796:35:81909:81911	887825	12	True				
ANR	891541	Statement	","	2796:38:81912:81912	887825	13	True				
ANR	891542	Statement	r	2796:40:81914:81914	887825	14	True				
ANR	891543	Statement	)	2796:41:81915:81915	887825	15	True				
ANR	891544	Statement	)	2796:42:81916:81916	887825	16	True				
ANR	891545	ExpressionStatement		2796:43:81917:81917	887825	17	True				
ANR	891546	ExpressionStatement	"r_reg_set_value ( core -> dbg -> reg , r , r_num_math ( core -> num , arg + 1 ) )"	2797:5:81924:81997	887825	18	True				
ANR	891547	CallExpression	"r_reg_set_value ( core -> dbg -> reg , r , r_num_math ( core -> num , arg + 1 ) )"		887825	0					
ANR	891548	Callee	r_reg_set_value		887825	0					
ANR	891549	Identifier	r_reg_set_value		887825	0					
ANR	891550	ArgumentList	core -> dbg -> reg		887825	1					
ANR	891551	Argument	core -> dbg -> reg		887825	0					
ANR	891552	PtrMemberAccess	core -> dbg -> reg		887825	0					
ANR	891553	PtrMemberAccess	core -> dbg		887825	0					
ANR	891554	Identifier	core		887825	0					
ANR	891555	Identifier	dbg		887825	1					
ANR	891556	Identifier	reg		887825	1					
ANR	891557	Argument	r		887825	1					
ANR	891558	Identifier	r		887825	0					
ANR	891559	Argument	"r_num_math ( core -> num , arg + 1 )"		887825	2					
ANR	891560	CallExpression	"r_num_math ( core -> num , arg + 1 )"		887825	0					
ANR	891561	Callee	r_num_math		887825	0					
ANR	891562	Identifier	r_num_math		887825	0					
ANR	891563	ArgumentList	core -> num		887825	1					
ANR	891564	Argument	core -> num		887825	0					
ANR	891565	PtrMemberAccess	core -> num		887825	0					
ANR	891566	Identifier	core		887825	0					
ANR	891567	Identifier	num		887825	1					
ANR	891568	Argument	arg + 1		887825	1					
ANR	891569	AdditiveExpression	arg + 1		887825	0		+			
ANR	891570	Identifier	arg		887825	0					
ANR	891571	PrimaryExpression	1		887825	1					
ANR	891572	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"	2799:5:82004:82054	887825	19	True				
ANR	891573	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"		887825	0					
ANR	891574	Callee	r_debug_reg_sync		887825	0					
ANR	891575	Identifier	r_debug_reg_sync		887825	0					
ANR	891576	ArgumentList	core -> dbg		887825	1					
ANR	891577	Argument	core -> dbg		887825	0					
ANR	891578	PtrMemberAccess	core -> dbg		887825	0					
ANR	891579	Identifier	core		887825	0					
ANR	891580	Identifier	dbg		887825	1					
ANR	891581	Argument	R_REG_TYPE_ALL		887825	1					
ANR	891582	Identifier	R_REG_TYPE_ALL		887825	0					
ANR	891583	Argument	true		887825	2					
ANR	891584	Identifier	true		887825	0					
ANR	891585	Statement	r_cons_printf	2800:5:82061:82073	887825	20	True				
ANR	891586	Statement	(	2800:19:82075:82075	887825	21	True				
ANR	891587	Statement	"""0x%08"""	2800:20:82076:82082	887825	22	True				
ANR	891588	Statement	PFMT64x	2800:27:82083:82089	887825	23	True				
ANR	891589	Statement	"""\\n"""	2800:34:82090:82093	887825	24	True				
ANR	891590	Statement	","	2800:38:82094:82094	887825	25	True				
ANR	891591	Statement	r_reg_get_value	2801:7:82103:82117	887825	26	True				
ANR	891592	Statement	(	2801:23:82119:82119	887825	27	True				
ANR	891593	Statement	core	2801:24:82120:82123	887825	28	True				
ANR	891594	Statement	->	2801:28:82124:82125	887825	29	True				
ANR	891595	Statement	dbg	2801:30:82126:82128	887825	30	True				
ANR	891596	Statement	->	2801:33:82129:82130	887825	31	True				
ANR	891597	Statement	reg	2801:35:82131:82133	887825	32	True				
ANR	891598	Statement	","	2801:38:82134:82134	887825	33	True				
ANR	891599	Statement	r	2801:40:82136:82136	887825	34	True				
ANR	891600	Statement	)	2801:41:82137:82137	887825	35	True				
ANR	891601	Statement	)	2801:42:82138:82138	887825	36	True				
ANR	891602	ExpressionStatement		2801:43:82139:82139	887825	37	True				
ANR	891603	ElseStatement	else		887825	0					
ANR	891604	CompoundStatement		551:10:15574:15574	887825	0					
ANR	891605	ExpressionStatement	"eprintf ( ""unknown register '%s'\\n"" , string )"	2804:4:82163:82206	887825	0	True				
ANR	891606	CallExpression	"eprintf ( ""unknown register '%s'\\n"" , string )"		887825	0					
ANR	891607	Callee	eprintf		887825	0					
ANR	891608	Identifier	eprintf		887825	0					
ANR	891609	ArgumentList	"""unknown register '%s'\\n"""		887825	1					
ANR	891610	Argument	"""unknown register '%s'\\n"""		887825	0					
ANR	891611	PrimaryExpression	"""unknown register '%s'\\n"""		887825	0					
ANR	891612	Argument	string		887825	1					
ANR	891613	Identifier	string		887825	0					
ANR	891614	ExpressionStatement	free ( string )	2806:3:82216:82229	887825	6	True				
ANR	891615	CallExpression	free ( string )		887825	0					
ANR	891616	Callee	free		887825	0					
ANR	891617	Identifier	free		887825	0					
ANR	891618	ArgumentList	string		887825	1					
ANR	891619	Argument	string		887825	0					
ANR	891620	Identifier	string		887825	0					
ANR	891621	ExpressionStatement	"r_core_cmdf ( core , "".dr*%d"" , bits )"	2808:3:82258:82292	887825	7	True				
ANR	891622	CallExpression	"r_core_cmdf ( core , "".dr*%d"" , bits )"		887825	0					
ANR	891623	Callee	r_core_cmdf		887825	0					
ANR	891624	Identifier	r_core_cmdf		887825	0					
ANR	891625	ArgumentList	core		887825	1					
ANR	891626	Argument	core		887825	0					
ANR	891627	Identifier	core		887825	0					
ANR	891628	Argument	""".dr*%d"""		887825	1					
ANR	891629	PrimaryExpression	""".dr*%d"""		887825	0					
ANR	891630	Argument	bits		887825	2					
ANR	891631	Identifier	bits		887825	0					
ANR	891632	ReturnStatement	return ;	2809:3:82297:82303	887825	8	True				
ANR	891633	ExpressionStatement	size = atoi ( str + 1 )	2812:2:82312:82333	887825	71	True				
ANR	891634	AssignmentExpression	size = atoi ( str + 1 )		887825	0		=			
ANR	891635	Identifier	size		887825	0					
ANR	891636	CallExpression	atoi ( str + 1 )		887825	1					
ANR	891637	Callee	atoi		887825	0					
ANR	891638	Identifier	atoi		887825	0					
ANR	891639	ArgumentList	str + 1		887825	1					
ANR	891640	Argument	str + 1		887825	0					
ANR	891641	AdditiveExpression	str + 1		887825	0		+			
ANR	891642	Identifier	str		887825	0					
ANR	891643	PrimaryExpression	1		887825	1					
ANR	891644	IfStatement	if ( size )		887825	72					
ANR	891645	Condition	size	2813:6:82341:82344	887825	0	True				
ANR	891646	Identifier	size		887825	0					
ANR	891647	CompoundStatement		561:12:15764:15764	887825	1					
ANR	891648	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , size , str [ 0 ] , use_color )"	2814:3:82352:82421	887825	0	True				
ANR	891649	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , size , str [ 0 ] , use_color )"		887825	0					
ANR	891650	Callee	r_debug_reg_list		887825	0					
ANR	891651	Identifier	r_debug_reg_list		887825	0					
ANR	891652	ArgumentList	core -> dbg		887825	1					
ANR	891653	Argument	core -> dbg		887825	0					
ANR	891654	PtrMemberAccess	core -> dbg		887825	0					
ANR	891655	Identifier	core		887825	0					
ANR	891656	Identifier	dbg		887825	1					
ANR	891657	Argument	R_REG_TYPE_GPR		887825	1					
ANR	891658	Identifier	R_REG_TYPE_GPR		887825	0					
ANR	891659	Argument	size		887825	2					
ANR	891660	Identifier	size		887825	0					
ANR	891661	Argument	str [ 0 ]		887825	3					
ANR	891662	ArrayIndexing	str [ 0 ]		887825	0					
ANR	891663	Identifier	str		887825	0					
ANR	891664	PrimaryExpression	0		887825	1					
ANR	891665	Argument	use_color		887825	4					
ANR	891666	Identifier	use_color		887825	0					
ANR	891667	ElseStatement	else		887825	0					
ANR	891668	CompoundStatement		564:3:15854:15889	887825	0					
ANR	891669	IdentifierDeclStatement	"char * comma = strchr ( str + 1 , ',' ) ;"	2816:3:82437:82472	887825	0	True				
ANR	891670	IdentifierDecl	"* comma = strchr ( str + 1 , ',' )"		887825	0					
ANR	891671	IdentifierDeclType	char *		887825	0					
ANR	891672	Identifier	comma		887825	1					
ANR	891673	AssignmentExpression	"* comma = strchr ( str + 1 , ',' )"		887825	2		=			
ANR	891674	Identifier	comma		887825	0					
ANR	891675	CallExpression	"strchr ( str + 1 , ',' )"		887825	1					
ANR	891676	Callee	strchr		887825	0					
ANR	891677	Identifier	strchr		887825	0					
ANR	891678	ArgumentList	str + 1		887825	1					
ANR	891679	Argument	str + 1		887825	0					
ANR	891680	AdditiveExpression	str + 1		887825	0		+			
ANR	891681	Identifier	str		887825	0					
ANR	891682	PrimaryExpression	1		887825	1					
ANR	891683	Argument	"','"		887825	1					
ANR	891684	PrimaryExpression	"','"		887825	0					
ANR	891685	IfStatement	if ( comma )		887825	1					
ANR	891686	Condition	comma	2817:7:82481:82485	887825	0	True				
ANR	891687	Identifier	comma		887825	0					
ANR	891688	CompoundStatement		567:4:15946:15981	887825	1					
ANR	891689	IdentifierDeclStatement	char * args = strdup ( str + 1 ) ;	2818:4:82494:82523	887825	0	True				
ANR	891690	IdentifierDecl	* args = strdup ( str + 1 )		887825	0					
ANR	891691	IdentifierDeclType	char *		887825	0					
ANR	891692	Identifier	args		887825	1					
ANR	891693	AssignmentExpression	* args = strdup ( str + 1 )		887825	2		=			
ANR	891694	Identifier	args		887825	0					
ANR	891695	CallExpression	strdup ( str + 1 )		887825	1					
ANR	891696	Callee	strdup		887825	0					
ANR	891697	Identifier	strdup		887825	0					
ANR	891698	ArgumentList	str + 1		887825	1					
ANR	891699	Argument	str + 1		887825	0					
ANR	891700	AdditiveExpression	str + 1		887825	0		+			
ANR	891701	Identifier	str		887825	0					
ANR	891702	PrimaryExpression	1		887825	1					
ANR	891703	IdentifierDeclStatement	"char argc = r_str_split ( args , ',' ) ;"	2819:4:82529:82564	887825	1	True				
ANR	891704	IdentifierDecl	"argc = r_str_split ( args , ',' )"		887825	0					
ANR	891705	IdentifierDeclType	char		887825	0					
ANR	891706	Identifier	argc		887825	1					
ANR	891707	AssignmentExpression	"argc = r_str_split ( args , ',' )"		887825	2		=			
ANR	891708	Identifier	argc		887825	0					
ANR	891709	CallExpression	"r_str_split ( args , ',' )"		887825	1					
ANR	891710	Callee	r_str_split		887825	0					
ANR	891711	Identifier	r_str_split		887825	0					
ANR	891712	ArgumentList	args		887825	1					
ANR	891713	Argument	args		887825	0					
ANR	891714	Identifier	args		887825	0					
ANR	891715	Argument	"','"		887825	1					
ANR	891716	PrimaryExpression	"','"		887825	0					
ANR	891717	ForStatement	for ( i = 0 ; i < argc ; i ++ )		887825	2					
ANR	891718	ForInit	i = 0 ;	2820:9:82575:82580	887825	0	True				
ANR	891719	AssignmentExpression	i = 0		887825	0		=			
ANR	891720	Identifier	i		887825	0					
ANR	891721	PrimaryExpression	0		887825	1					
ANR	891722	Condition	i < argc	2820:16:82582:82589	887825	1	True				
ANR	891723	RelationalExpression	i < argc		887825	0		<			
ANR	891724	Identifier	i		887825	0					
ANR	891725	Identifier	argc		887825	1					
ANR	891726	PostIncDecOperationExpression	i ++	2820:26:82592:82594	887825	2	True				
ANR	891727	Identifier	i		887825	0					
ANR	891728	IncDec	++		887825	1					
ANR	891729	CompoundStatement		568:31:16014:16014	887825	3					
ANR	891730	ExpressionStatement	"showreg ( core , r_str_word_get0 ( args , i ) )"	2821:5:82604:82645	887825	0	True				
ANR	891731	CallExpression	"showreg ( core , r_str_word_get0 ( args , i ) )"		887825	0					
ANR	891732	Callee	showreg		887825	0					
ANR	891733	Identifier	showreg		887825	0					
ANR	891734	ArgumentList	core		887825	1					
ANR	891735	Argument	core		887825	0					
ANR	891736	Identifier	core		887825	0					
ANR	891737	Argument	"r_str_word_get0 ( args , i )"		887825	1					
ANR	891738	CallExpression	"r_str_word_get0 ( args , i )"		887825	0					
ANR	891739	Callee	r_str_word_get0		887825	0					
ANR	891740	Identifier	r_str_word_get0		887825	0					
ANR	891741	ArgumentList	args		887825	1					
ANR	891742	Argument	args		887825	0					
ANR	891743	Identifier	args		887825	0					
ANR	891744	Argument	i		887825	1					
ANR	891745	Identifier	i		887825	0					
ANR	891746	ExpressionStatement	free ( args )	2823:4:82657:82668	887825	3	True				
ANR	891747	CallExpression	free ( args )		887825	0					
ANR	891748	Callee	free		887825	0					
ANR	891749	Identifier	free		887825	0					
ANR	891750	ArgumentList	args		887825	1					
ANR	891751	Argument	args		887825	0					
ANR	891752	Identifier	args		887825	0					
ANR	891753	ElseStatement	else		887825	0					
ANR	891754	CompoundStatement		572:10:16097:16097	887825	0					
ANR	891755	ExpressionStatement	"showreg ( core , str + 1 )"	2825:4:82686:82709	887825	0	True				
ANR	891756	CallExpression	"showreg ( core , str + 1 )"		887825	0					
ANR	891757	Callee	showreg		887825	0					
ANR	891758	Identifier	showreg		887825	0					
ANR	891759	ArgumentList	core		887825	1					
ANR	891760	Argument	core		887825	0					
ANR	891761	Identifier	core		887825	0					
ANR	891762	Argument	str + 1		887825	1					
ANR	891763	AdditiveExpression	str + 1		887825	0		+			
ANR	891764	Identifier	str		887825	0					
ANR	891765	PrimaryExpression	1		887825	1					
ANR	891766	ReturnType	static void		887825	1					
ANR	891767	Identifier	cmd_debug_reg		887825	2					
ANR	891768	ParameterList	"RCore * core , const char * str"		887825	3					
ANR	891769	Parameter	RCore * core	2253:26:66552:66562	887825	0	True				
ANR	891770	ParameterType	RCore *		887825	0					
ANR	891771	Identifier	core		887825	1					
ANR	891772	Parameter	const char * str	2253:39:66565:66579	887825	1	True				
ANR	891773	ParameterType	const char *		887825	0					
ANR	891774	Identifier	str		887825	1					
ANR	891775	CFGEntryNode	ENTRY		887825		True				
ANR	891776	CFGExitNode	EXIT		887825		True				
ANR	891777	Symbol	R_REG_NAME_PC		887825						
ANR	891778	Symbol	r_debug_reg_get		887825						
ANR	891779	Symbol	* q ++		887825						
ANR	891780	Symbol	r_reg_get_type		887825						
ANR	891781	Symbol	strchr		887825						
ANR	891782	Symbol	R_REG_TYPE_MMX		887825						
ANR	891783	Symbol	type		887825						
ANR	891784	Symbol	r_reg_regset_get		887825						
ANR	891785	Symbol	r_str_word_set0		887825						
ANR	891786	Symbol	* core -> assembler		887825						
ANR	891787	Symbol	help_msg_drx		887825						
ANR	891788	Symbol	dval		887825						
ANR	891789	Symbol	len		887825						
ANR	891790	Symbol	rad		887825						
ANR	891791	Symbol	help_msg_drt		887825						
ANR	891792	Symbol	help_msg_drs		887825						
ANR	891793	Symbol	* core -> num		887825						
ANR	891794	Symbol	id		887825						
ANR	891795	Symbol	R_REG_TYPE_FPU		887825						
ANR	891796	Symbol	val		887825						
ANR	891797	Symbol	r_reg_get_pack		887825						
ANR	891798	Symbol	item		887825						
ANR	891799	Symbol	r_str_rwx		887825						
ANR	891800	Symbol	bits		887825						
ANR	891801	Symbol	iter		887825						
ANR	891802	Symbol	str		887825						
ANR	891803	Symbol	* * * core		887825						
ANR	891804	Symbol	size		887825						
ANR	891805	Symbol	rf		887825						
ANR	891806	Symbol	r -> name		887825						
ANR	891807	Symbol	r_config_get_i		887825						
ANR	891808	Symbol	r_str_trim_ro		887825						
ANR	891809	Symbol	json_out		887825						
ANR	891810	Symbol	reg -> size		887825						
ANR	891811	Symbol	pcname		887825						
ANR	891812	Symbol	& len		887825						
ANR	891813	Symbol	* core -> dbg		887825						
ANR	891814	Symbol	word		887825						
ANR	891815	Symbol	& dval		887825						
ANR	891816	Symbol	* arg		887825						
ANR	891817	Symbol	rf -> p		887825						
ANR	891818	Symbol	rs		887825						
ANR	891819	Symbol	rf -> o		887825						
ANR	891820	Symbol	r_debug_reg_sync		887825						
ANR	891821	Symbol	r -> flags		887825						
ANR	891822	Symbol	role		887825						
ANR	891823	Symbol	r_reg_cond_get		887825						
ANR	891824	Symbol	* core		887825						
ANR	891825	Symbol	core -> assembler -> bits		887825						
ANR	891826	Symbol	* string		887825						
ANR	891827	Symbol	core -> assembler		887825						
ANR	891828	Symbol	R_REG_COND_LAST		887825						
ANR	891829	Symbol	rf -> c		887825						
ANR	891830	Symbol	core -> anal		887825						
ANR	891831	Symbol	r_reg_cond_from_string		887825						
ANR	891832	Symbol	& pcbits2		887825						
ANR	891833	Symbol	core -> dbg -> reg -> reg_profile_cmt		887825						
ANR	891834	Symbol	R_REG_TYPE_ALL		887825						
ANR	891835	Symbol	arg		887825						
ANR	891836	Symbol	core -> dbg -> bits		887825						
ANR	891837	Symbol	sl		887825						
ANR	891838	Symbol	core -> dbg -> reg -> regset		887825						
ANR	891839	Symbol	rf -> z		887825						
ANR	891840	Symbol	* str		887825						
ANR	891841	Symbol	rf -> s		887825						
ANR	891842	Symbol	R_REG_TYPE_GPR		887825						
ANR	891843	Symbol	R_REG_TYPE_DRX		887825						
ANR	891844	Symbol	atoi		887825						
ANR	891845	Symbol	* name		887825						
ANR	891846	Symbol	a		887825						
ANR	891847	Symbol	core -> anal -> bits		887825						
ANR	891848	Symbol	i		887825						
ANR	891849	Symbol	r_reg_get_bytes		887825						
ANR	891850	Symbol	core -> flags		887825						
ANR	891851	Symbol	r_str_word_get0		887825						
ANR	891852	Symbol	k		887825						
ANR	891853	Symbol	off		887825						
ANR	891854	Symbol	n		887825						
ANR	891855	Symbol	o		887825						
ANR	891856	Symbol	p		887825						
ANR	891857	Symbol	q		887825						
ANR	891858	Symbol	r		887825						
ANR	891859	Symbol	buf		887825						
ANR	891860	Symbol	comma		887825						
ANR	891861	Symbol	s		887825						
ANR	891862	Symbol	* core -> anal		887825						
ANR	891863	Symbol	orig		887825						
ANR	891864	Symbol	core -> dbg -> reg		887825						
ANR	891865	Symbol	v		887825						
ANR	891866	Symbol	core -> dbg -> pid		887825						
ANR	891867	Symbol	r_list_length		887825						
ANR	891868	Symbol	core -> anal -> reg		887825						
ANR	891869	Symbol	r_core_cmd_str		887825						
ANR	891870	Symbol	core -> num -> value		887825						
ANR	891871	Symbol	r_str_trim_dup		887825						
ANR	891872	Symbol	* core -> dbg -> reg -> regset		887825						
ANR	891873	Symbol	* * core -> dbg -> reg		887825						
ANR	891874	Symbol	* arg ++		887825						
ANR	891875	Symbol	* core -> dbg -> reg		887825						
ANR	891876	Symbol	reg		887825						
ANR	891877	Symbol	pcbits2		887825						
ANR	891878	Symbol	r_reg_cond_retrieve		887825						
ANR	891879	Symbol	core -> num		887825						
ANR	891880	Symbol	R_SYS_BITS_64		887825						
ANR	891881	Symbol	r_reg_get		887825						
ANR	891882	Symbol	all		887825						
ANR	891883	Symbol	strcmp		887825						
ANR	891884	Symbol	res		887825						
ANR	891885	Symbol	regname		887825						
ANR	891886	Symbol	NULL		887825						
ANR	891887	Symbol	newbits		887825						
ANR	891888	Symbol	count		887825						
ANR	891889	Symbol	R_REG_TYPE_LAST		887825						
ANR	891890	Symbol	eq		887825						
ANR	891891	Symbol	use_color		887825						
ANR	891892	Symbol	core -> dbg -> reg -> regset [ 0 ] . pool		887825						
ANR	891893	Symbol	core		887825						
ANR	891894	Symbol	r_reg_get_name_idx		887825						
ANR	891895	Symbol	r_reg_get_name		887825						
ANR	891896	Symbol	grab_bits		887825						
ANR	891897	Symbol	name		887825						
ANR	891898	Symbol	true		887825						
ANR	891899	Symbol	pcbits		887825						
ANR	891900	Symbol	core -> print		887825						
ANR	891901	Symbol	r_reg_cond_to_string		887825						
ANR	891902	Symbol	r_reg_cond_bits		887825						
ANR	891903	Symbol	string		887825						
ANR	891904	Symbol	perm		887825						
ANR	891905	Symbol	foo		887825						
ANR	891906	Symbol	r_str_split_list		887825						
ANR	891907	Symbol	r_num_math		887825						
ANR	891908	Symbol	r_reg_type_by_name		887825						
ANR	891909	Symbol	* * * core -> dbg		887825						
ANR	891910	Symbol	r_str_replace		887825						
ANR	891911	Symbol	* * * * core		887825						
ANR	891912	Symbol	* * core		887825						
ANR	891913	Symbol	core -> config		887825						
ANR	891914	Symbol	argc		887825						
ANR	891915	Symbol	* p ++		887825						
ANR	891916	Symbol	false		887825						
ANR	891917	Symbol	args		887825						
ANR	891918	Symbol	help_msg_dr		887825						
ANR	891919	Symbol	r_str_split		887825						
ANR	891920	Symbol	r_reg_get_double		887825						
ANR	891921	Symbol	* rf		887825						
ANR	891922	Symbol	use_colors		887825						
ANR	891923	Symbol	strdup		887825						
ANR	891924	Symbol	* r		887825						
ANR	891925	Symbol	* eq ++		887825						
ANR	891926	Symbol	* reg		887825						
ANR	891927	Symbol	core -> dbg		887825						
ANR	891928	Symbol	* * core -> dbg		887825						
ANR	891929	Function	validAddress	2831:0:82726:83177							
ANR	891930	FunctionDef	"validAddress (RCore * core , ut64 addr)"		891929	0					
ANR	891931	CompoundStatement		2831:48:82774:83177	891929	0					
ANR	891932	IdentifierDeclStatement	RDebugMap * map ;	2832:1:82777:82791	891929	0	True				
ANR	891933	IdentifierDecl	* map		891929	0					
ANR	891934	IdentifierDeclType	RDebugMap *		891929	0					
ANR	891935	Identifier	map		891929	1					
ANR	891936	IdentifierDeclStatement	RListIter * iter ;	2833:1:82794:82809	891929	1	True				
ANR	891937	IdentifierDecl	* iter		891929	0					
ANR	891938	IdentifierDeclType	RListIter *		891929	0					
ANR	891939	Identifier	iter		891929	1					
ANR	891940	IfStatement	"if ( ! r_config_get_i ( core -> config , ""dbg.bpinmaps"" ) )"		891929	2					
ANR	891941	Condition	"! r_config_get_i ( core -> config , ""dbg.bpinmaps"" )"	2834:5:82816:82861	891929	0	True				
ANR	891942	UnaryOperationExpression	"! r_config_get_i ( core -> config , ""dbg.bpinmaps"" )"		891929	0					
ANR	891943	UnaryOperator	!		891929	0					
ANR	891944	CallExpression	"r_config_get_i ( core -> config , ""dbg.bpinmaps"" )"		891929	1					
ANR	891945	Callee	r_config_get_i		891929	0					
ANR	891946	Identifier	r_config_get_i		891929	0					
ANR	891947	ArgumentList	core -> config		891929	1					
ANR	891948	Argument	core -> config		891929	0					
ANR	891949	PtrMemberAccess	core -> config		891929	0					
ANR	891950	Identifier	core		891929	0					
ANR	891951	Identifier	config		891929	1					
ANR	891952	Argument	"""dbg.bpinmaps"""		891929	1					
ANR	891953	PrimaryExpression	"""dbg.bpinmaps"""		891929	0					
ANR	891954	CompoundStatement		4:53:89:89	891929	1					
ANR	891955	ReturnStatement	return core -> num -> value = 1 ;	2835:2:82868:82895	891929	0	True				
ANR	891956	AssignmentExpression	core -> num -> value = 1		891929	0		=			
ANR	891957	PtrMemberAccess	core -> num -> value		891929	0					
ANR	891958	PtrMemberAccess	core -> num		891929	0					
ANR	891959	Identifier	core		891929	0					
ANR	891960	Identifier	num		891929	1					
ANR	891961	Identifier	value		891929	1					
ANR	891962	PrimaryExpression	1		891929	1					
ANR	891963	ExpressionStatement	r_debug_map_sync ( core -> dbg )	2837:1:82901:82929	891929	3	True				
ANR	891964	CallExpression	r_debug_map_sync ( core -> dbg )		891929	0					
ANR	891965	Callee	r_debug_map_sync		891929	0					
ANR	891966	Identifier	r_debug_map_sync		891929	0					
ANR	891967	ArgumentList	core -> dbg		891929	1					
ANR	891968	Argument	core -> dbg		891929	0					
ANR	891969	PtrMemberAccess	core -> dbg		891929	0					
ANR	891970	Identifier	core		891929	0					
ANR	891971	Identifier	dbg		891929	1					
ANR	891972	Statement	r_list_foreach	2838:1:82932:82945	891929	4	True				
ANR	891973	Statement	(	2838:16:82947:82947	891929	5	True				
ANR	891974	Statement	core	2838:17:82948:82951	891929	6	True				
ANR	891975	Statement	->	2838:21:82952:82953	891929	7	True				
ANR	891976	Statement	dbg	2838:23:82954:82956	891929	8	True				
ANR	891977	Statement	->	2838:26:82957:82958	891929	9	True				
ANR	891978	Statement	maps	2838:28:82959:82962	891929	10	True				
ANR	891979	Statement	","	2838:32:82963:82963	891929	11	True				
ANR	891980	Statement	iter	2838:34:82965:82968	891929	12	True				
ANR	891981	Statement	","	2838:38:82969:82969	891929	13	True				
ANR	891982	Statement	map	2838:40:82971:82973	891929	14	True				
ANR	891983	Statement	)	2838:43:82974:82974	891929	15	True				
ANR	891984	CompoundStatement		8:45:201:201	891929	16					
ANR	891985	IfStatement	if ( addr >= map -> addr && addr < map -> addr_end )		891929	0					
ANR	891986	Condition	addr >= map -> addr && addr < map -> addr_end	2839:6:82984:83024	891929	0	True				
ANR	891987	AndExpression	addr >= map -> addr && addr < map -> addr_end		891929	0		&&			
ANR	891988	RelationalExpression	addr >= map -> addr		891929	0		>=			
ANR	891989	Identifier	addr		891929	0					
ANR	891990	PtrMemberAccess	map -> addr		891929	1					
ANR	891991	Identifier	map		891929	0					
ANR	891992	Identifier	addr		891929	1					
ANR	891993	RelationalExpression	addr < map -> addr_end		891929	1		<			
ANR	891994	Identifier	addr		891929	0					
ANR	891995	PtrMemberAccess	map -> addr_end		891929	1					
ANR	891996	Identifier	map		891929	0					
ANR	891997	Identifier	addr_end		891929	1					
ANR	891998	CompoundStatement		9:49:252:252	891929	1					
ANR	891999	ReturnStatement	return core -> num -> value = 1 ;	2840:3:83032:83059	891929	0	True				
ANR	892000	AssignmentExpression	core -> num -> value = 1		891929	0		=			
ANR	892001	PtrMemberAccess	core -> num -> value		891929	0					
ANR	892002	PtrMemberAccess	core -> num		891929	0					
ANR	892003	Identifier	core		891929	0					
ANR	892004	Identifier	num		891929	1					
ANR	892005	Identifier	value		891929	1					
ANR	892006	PrimaryExpression	1		891929	1					
ANR	892007	ReturnStatement	return core -> num -> value = 0 ;	2845:1:83148:83175	891929	17	True				
ANR	892008	AssignmentExpression	core -> num -> value = 0		891929	0		=			
ANR	892009	PtrMemberAccess	core -> num -> value		891929	0					
ANR	892010	PtrMemberAccess	core -> num		891929	0					
ANR	892011	Identifier	core		891929	0					
ANR	892012	Identifier	num		891929	1					
ANR	892013	Identifier	value		891929	1					
ANR	892014	PrimaryExpression	0		891929	1					
ANR	892015	ReturnType	static int		891929	1					
ANR	892016	Identifier	validAddress		891929	2					
ANR	892017	ParameterList	"RCore * core , ut64 addr"		891929	3					
ANR	892018	Parameter	RCore * core	2831:24:82750:82760	891929	0	True				
ANR	892019	ParameterType	RCore *		891929	0					
ANR	892020	Identifier	core		891929	1					
ANR	892021	Parameter	ut64 addr	2831:37:82763:82771	891929	1	True				
ANR	892022	ParameterType	ut64		891929	0					
ANR	892023	Identifier	addr		891929	1					
ANR	892024	CFGEntryNode	ENTRY		891929		True				
ANR	892025	CFGExitNode	EXIT		891929		True				
ANR	892026	Symbol	core -> config		891929						
ANR	892027	Symbol	map -> addr		891929						
ANR	892028	Symbol	* map		891929						
ANR	892029	Symbol	* core		891929						
ANR	892030	Symbol	iter		891929						
ANR	892031	Symbol	core -> num -> value		891929						
ANR	892032	Symbol	core		891929						
ANR	892033	Symbol	r_config_get_i		891929						
ANR	892034	Symbol	map -> addr_end		891929						
ANR	892035	Symbol	* core -> num		891929						
ANR	892036	Symbol	addr		891929						
ANR	892037	Symbol	core -> num		891929						
ANR	892038	Symbol	map		891929						
ANR	892039	Symbol	* * core		891929						
ANR	892040	Symbol	core -> dbg		891929						
ANR	892041	Function	backtrace_vars	2848:0:83180:84891							
ANR	892042	FunctionDef	"backtrace_vars (RCore * core , RList * frames)"		892041	0					
ANR	892043	CompoundStatement		2848:55:83235:84891	892041	0					
ANR	892044	IdentifierDeclStatement	RDebugFrame * f ;	2849:1:83238:83252	892041	0	True				
ANR	892045	IdentifierDecl	* f		892041	0					
ANR	892046	IdentifierDeclType	RDebugFrame *		892041	0					
ANR	892047	Identifier	f		892041	1					
ANR	892048	IdentifierDeclStatement	RListIter * iter ;	2850:1:83255:83270	892041	1	True				
ANR	892049	IdentifierDecl	* iter		892041	0					
ANR	892050	IdentifierDeclType	RListIter *		892041	0					
ANR	892051	Identifier	iter		892041	1					
ANR	892052	IdentifierDeclStatement	"const char * sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP ) ;"	2852:1:83293:83357	892041	2	True				
ANR	892053	IdentifierDecl	"* sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		892041	0					
ANR	892054	IdentifierDeclType	const char *		892041	0					
ANR	892055	Identifier	sp		892041	1					
ANR	892056	AssignmentExpression	"* sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		892041	2		=			
ANR	892057	Identifier	sp		892041	0					
ANR	892058	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		892041	1					
ANR	892059	Callee	r_reg_get_name		892041	0					
ANR	892060	Identifier	r_reg_get_name		892041	0					
ANR	892061	ArgumentList	core -> anal -> reg		892041	1					
ANR	892062	Argument	core -> anal -> reg		892041	0					
ANR	892063	PtrMemberAccess	core -> anal -> reg		892041	0					
ANR	892064	PtrMemberAccess	core -> anal		892041	0					
ANR	892065	Identifier	core		892041	0					
ANR	892066	Identifier	anal		892041	1					
ANR	892067	Identifier	reg		892041	1					
ANR	892068	Argument	R_REG_NAME_SP		892041	1					
ANR	892069	Identifier	R_REG_NAME_SP		892041	0					
ANR	892070	IdentifierDeclStatement	"const char * bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP ) ;"	2853:1:83360:83424	892041	3	True				
ANR	892071	IdentifierDecl	"* bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		892041	0					
ANR	892072	IdentifierDeclType	const char *		892041	0					
ANR	892073	Identifier	bp		892041	1					
ANR	892074	AssignmentExpression	"* bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		892041	2		=			
ANR	892075	Identifier	bp		892041	0					
ANR	892076	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		892041	1					
ANR	892077	Callee	r_reg_get_name		892041	0					
ANR	892078	Identifier	r_reg_get_name		892041	0					
ANR	892079	ArgumentList	core -> anal -> reg		892041	1					
ANR	892080	Argument	core -> anal -> reg		892041	0					
ANR	892081	PtrMemberAccess	core -> anal -> reg		892041	0					
ANR	892082	PtrMemberAccess	core -> anal		892041	0					
ANR	892083	Identifier	core		892041	0					
ANR	892084	Identifier	anal		892041	1					
ANR	892085	Identifier	reg		892041	1					
ANR	892086	Argument	R_REG_NAME_BP		892041	1					
ANR	892087	Identifier	R_REG_NAME_BP		892041	0					
ANR	892088	IfStatement	if ( ! sp )		892041	4					
ANR	892089	Condition	! sp	2854:5:83431:83433	892041	0	True				
ANR	892090	UnaryOperationExpression	! sp		892041	0					
ANR	892091	UnaryOperator	!		892041	0					
ANR	892092	Identifier	sp		892041	1					
ANR	892093	CompoundStatement		7:10:200:200	892041	1					
ANR	892094	ExpressionStatement	"sp = ""SP"""	2855:2:83440:83449	892041	0	True				
ANR	892095	AssignmentExpression	"sp = ""SP"""		892041	0		=			
ANR	892096	Identifier	sp		892041	0					
ANR	892097	PrimaryExpression	"""SP"""		892041	1					
ANR	892098	IfStatement	if ( ! bp )		892041	5					
ANR	892099	Condition	! bp	2857:5:83459:83461	892041	0	True				
ANR	892100	UnaryOperationExpression	! bp		892041	0					
ANR	892101	UnaryOperator	!		892041	0					
ANR	892102	Identifier	bp		892041	1					
ANR	892103	CompoundStatement		10:10:228:228	892041	1					
ANR	892104	ExpressionStatement	"bp = ""BP"""	2858:2:83468:83477	892041	0	True				
ANR	892105	AssignmentExpression	"bp = ""BP"""		892041	0		=			
ANR	892106	Identifier	bp		892041	0					
ANR	892107	PrimaryExpression	"""BP"""		892041	1					
ANR	892108	IdentifierDeclStatement	RReg * r = core -> anal -> reg ;	2860:1:83483:83508	892041	6	True				
ANR	892109	IdentifierDecl	* r = core -> anal -> reg		892041	0					
ANR	892110	IdentifierDeclType	RReg *		892041	0					
ANR	892111	Identifier	r		892041	1					
ANR	892112	AssignmentExpression	* r = core -> anal -> reg		892041	2		=			
ANR	892113	Identifier	r		892041	0					
ANR	892114	PtrMemberAccess	core -> anal -> reg		892041	1					
ANR	892115	PtrMemberAccess	core -> anal		892041	0					
ANR	892116	Identifier	core		892041	0					
ANR	892117	Identifier	anal		892041	1					
ANR	892118	Identifier	reg		892041	1					
ANR	892119	IdentifierDeclStatement	"ut64 dsp = r_reg_getv ( r , sp ) ;"	2861:1:83511:83540	892041	7	True				
ANR	892120	IdentifierDecl	"dsp = r_reg_getv ( r , sp )"		892041	0					
ANR	892121	IdentifierDeclType	ut64		892041	0					
ANR	892122	Identifier	dsp		892041	1					
ANR	892123	AssignmentExpression	"dsp = r_reg_getv ( r , sp )"		892041	2		=			
ANR	892124	Identifier	dsp		892041	0					
ANR	892125	CallExpression	"r_reg_getv ( r , sp )"		892041	1					
ANR	892126	Callee	r_reg_getv		892041	0					
ANR	892127	Identifier	r_reg_getv		892041	0					
ANR	892128	ArgumentList	r		892041	1					
ANR	892129	Argument	r		892041	0					
ANR	892130	Identifier	r		892041	0					
ANR	892131	Argument	sp		892041	1					
ANR	892132	Identifier	sp		892041	0					
ANR	892133	IdentifierDeclStatement	"ut64 dbp = r_reg_getv ( r , bp ) ;"	2862:1:83543:83572	892041	8	True				
ANR	892134	IdentifierDecl	"dbp = r_reg_getv ( r , bp )"		892041	0					
ANR	892135	IdentifierDeclType	ut64		892041	0					
ANR	892136	Identifier	dbp		892041	1					
ANR	892137	AssignmentExpression	"dbp = r_reg_getv ( r , bp )"		892041	2		=			
ANR	892138	Identifier	dbp		892041	0					
ANR	892139	CallExpression	"r_reg_getv ( r , bp )"		892041	1					
ANR	892140	Callee	r_reg_getv		892041	0					
ANR	892141	Identifier	r_reg_getv		892041	0					
ANR	892142	ArgumentList	r		892041	1					
ANR	892143	Argument	r		892041	0					
ANR	892144	Identifier	r		892041	0					
ANR	892145	Argument	bp		892041	1					
ANR	892146	Identifier	bp		892041	0					
ANR	892147	IdentifierDeclStatement	int n = 0 ;	2863:1:83575:83584	892041	9	True				
ANR	892148	IdentifierDecl	n = 0		892041	0					
ANR	892149	IdentifierDeclType	int		892041	0					
ANR	892150	Identifier	n		892041	1					
ANR	892151	AssignmentExpression	n = 0		892041	2		=			
ANR	892152	Identifier	n		892041	0					
ANR	892153	PrimaryExpression	0		892041	1					
ANR	892154	Statement	r_list_foreach	2864:1:83587:83600	892041	10	True				
ANR	892155	Statement	(	2864:16:83602:83602	892041	11	True				
ANR	892156	Statement	frames	2864:17:83603:83608	892041	12	True				
ANR	892157	Statement	","	2864:23:83609:83609	892041	13	True				
ANR	892158	Statement	iter	2864:25:83611:83614	892041	14	True				
ANR	892159	Statement	","	2864:29:83615:83615	892041	15	True				
ANR	892160	Statement	f	2864:31:83617:83617	892041	16	True				
ANR	892161	Statement	)	2864:32:83618:83618	892041	17	True				
ANR	892162	CompoundStatement		45:2:1127:1190	892041	18					
ANR	892163	IdentifierDeclStatement	ut64 s = f -> sp ? f -> sp : dsp ;	2865:2:83624:83652	892041	0	True				
ANR	892164	IdentifierDecl	s = f -> sp ? f -> sp : dsp		892041	0					
ANR	892165	IdentifierDeclType	ut64		892041	0					
ANR	892166	Identifier	s		892041	1					
ANR	892167	AssignmentExpression	s = f -> sp ? f -> sp : dsp		892041	2		=			
ANR	892168	Identifier	s		892041	0					
ANR	892169	ConditionalExpression	f -> sp ? f -> sp : dsp		892041	1					
ANR	892170	Condition	f -> sp		892041	0					
ANR	892171	PtrMemberAccess	f -> sp		892041	0					
ANR	892172	Identifier	f		892041	0					
ANR	892173	Identifier	sp		892041	1					
ANR	892174	PtrMemberAccess	f -> sp		892041	1					
ANR	892175	Identifier	f		892041	0					
ANR	892176	Identifier	sp		892041	1					
ANR	892177	Identifier	dsp		892041	2					
ANR	892178	IdentifierDeclStatement	ut64 b = f -> bp ? f -> bp : dbp ;	2866:2:83656:83684	892041	1	True				
ANR	892179	IdentifierDecl	b = f -> bp ? f -> bp : dbp		892041	0					
ANR	892180	IdentifierDeclType	ut64		892041	0					
ANR	892181	Identifier	b		892041	1					
ANR	892182	AssignmentExpression	b = f -> bp ? f -> bp : dbp		892041	2		=			
ANR	892183	Identifier	b		892041	0					
ANR	892184	ConditionalExpression	f -> bp ? f -> bp : dbp		892041	1					
ANR	892185	Condition	f -> bp		892041	0					
ANR	892186	PtrMemberAccess	f -> bp		892041	0					
ANR	892187	Identifier	f		892041	0					
ANR	892188	Identifier	bp		892041	1					
ANR	892189	PtrMemberAccess	f -> bp		892041	1					
ANR	892190	Identifier	f		892041	0					
ANR	892191	Identifier	bp		892041	1					
ANR	892192	Identifier	dbp		892041	2					
ANR	892193	ExpressionStatement	"r_reg_setv ( r , bp , s )"	2867:2:83688:83709	892041	2	True				
ANR	892194	CallExpression	"r_reg_setv ( r , bp , s )"		892041	0					
ANR	892195	Callee	r_reg_setv		892041	0					
ANR	892196	Identifier	r_reg_setv		892041	0					
ANR	892197	ArgumentList	r		892041	1					
ANR	892198	Argument	r		892041	0					
ANR	892199	Identifier	r		892041	0					
ANR	892200	Argument	bp		892041	1					
ANR	892201	Identifier	bp		892041	0					
ANR	892202	Argument	s		892041	2					
ANR	892203	Identifier	s		892041	0					
ANR	892204	ExpressionStatement	"r_reg_setv ( r , sp , b )"	2868:2:83713:83734	892041	3	True				
ANR	892205	CallExpression	"r_reg_setv ( r , sp , b )"		892041	0					
ANR	892206	Callee	r_reg_setv		892041	0					
ANR	892207	Identifier	r_reg_setv		892041	0					
ANR	892208	ArgumentList	r		892041	1					
ANR	892209	Argument	r		892041	0					
ANR	892210	Identifier	r		892041	0					
ANR	892211	Argument	sp		892041	1					
ANR	892212	Identifier	sp		892041	0					
ANR	892213	Argument	b		892041	2					
ANR	892214	Identifier	b		892041	0					
ANR	892215	IdentifierDeclStatement	"char flagdesc [ 1024 ] , flagdesc2 [ 1024 ] ;"	2870:2:83749:83785	892041	4	True				
ANR	892216	IdentifierDecl	flagdesc [ 1024 ]		892041	0					
ANR	892217	IdentifierDeclType	char [ 1024 ]		892041	0					
ANR	892218	Identifier	flagdesc		892041	1					
ANR	892219	PrimaryExpression	1024		892041	2					
ANR	892220	IdentifierDecl	flagdesc2 [ 1024 ]		892041	1					
ANR	892221	IdentifierDeclType	char [ 1024 ]		892041	0					
ANR	892222	Identifier	flagdesc2		892041	1					
ANR	892223	PrimaryExpression	1024		892041	2					
ANR	892224	IdentifierDeclStatement	"RFlagItem * fi = r_flag_get_at ( core -> flags , f -> addr , true ) ;"	2871:2:83789:83847	892041	5	True				
ANR	892225	IdentifierDecl	"* fi = r_flag_get_at ( core -> flags , f -> addr , true )"		892041	0					
ANR	892226	IdentifierDeclType	RFlagItem *		892041	0					
ANR	892227	Identifier	fi		892041	1					
ANR	892228	AssignmentExpression	"* fi = r_flag_get_at ( core -> flags , f -> addr , true )"		892041	2		=			
ANR	892229	Identifier	fi		892041	0					
ANR	892230	CallExpression	"r_flag_get_at ( core -> flags , f -> addr , true )"		892041	1					
ANR	892231	Callee	r_flag_get_at		892041	0					
ANR	892232	Identifier	r_flag_get_at		892041	0					
ANR	892233	ArgumentList	core -> flags		892041	1					
ANR	892234	Argument	core -> flags		892041	0					
ANR	892235	PtrMemberAccess	core -> flags		892041	0					
ANR	892236	Identifier	core		892041	0					
ANR	892237	Identifier	flags		892041	1					
ANR	892238	Argument	f -> addr		892041	1					
ANR	892239	PtrMemberAccess	f -> addr		892041	0					
ANR	892240	Identifier	f		892041	0					
ANR	892241	Identifier	addr		892041	1					
ANR	892242	Argument	true		892041	2					
ANR	892243	Identifier	true		892041	0					
ANR	892244	ExpressionStatement	flagdesc [ 0 ] = flagdesc2 [ 0 ] = 0	2872:2:83851:83881	892041	6	True				
ANR	892245	AssignmentExpression	flagdesc [ 0 ] = flagdesc2 [ 0 ] = 0		892041	0		=			
ANR	892246	ArrayIndexing	flagdesc [ 0 ]		892041	0					
ANR	892247	Identifier	flagdesc		892041	0					
ANR	892248	PrimaryExpression	0		892041	1					
ANR	892249	AssignmentExpression	flagdesc2 [ 0 ] = 0		892041	1		=			
ANR	892250	ArrayIndexing	flagdesc2 [ 0 ]		892041	0					
ANR	892251	Identifier	flagdesc2		892041	0					
ANR	892252	PrimaryExpression	0		892041	1					
ANR	892253	PrimaryExpression	0		892041	1					
ANR	892254	IfStatement	if ( fi )		892041	7					
ANR	892255	Condition	fi	2873:6:83889:83890	892041	0	True				
ANR	892256	Identifier	fi		892041	0					
ANR	892257	CompoundStatement		26:10:657:657	892041	1					
ANR	892258	IfStatement	if ( fi -> offset != f -> addr )		892041	0					
ANR	892259	Condition	fi -> offset != f -> addr	2874:7:83902:83922	892041	0	True				
ANR	892260	EqualityExpression	fi -> offset != f -> addr		892041	0		!=			
ANR	892261	PtrMemberAccess	fi -> offset		892041	0					
ANR	892262	Identifier	fi		892041	0					
ANR	892263	Identifier	offset		892041	1					
ANR	892264	PtrMemberAccess	f -> addr		892041	1					
ANR	892265	Identifier	f		892041	0					
ANR	892266	Identifier	addr		892041	1					
ANR	892267	CompoundStatement		28:4:695:734	892041	1					
ANR	892268	IdentifierDeclStatement	int delta = ( int ) ( f -> addr - fi -> offset ) ;	2875:4:83931:83970	892041	0	True				
ANR	892269	IdentifierDecl	delta = ( int ) ( f -> addr - fi -> offset )		892041	0					
ANR	892270	IdentifierDeclType	int		892041	0					
ANR	892271	Identifier	delta		892041	1					
ANR	892272	AssignmentExpression	delta = ( int ) ( f -> addr - fi -> offset )		892041	2		=			
ANR	892273	Identifier	delta		892041	0					
ANR	892274	CastExpression	( int ) ( f -> addr - fi -> offset )		892041	1					
ANR	892275	CastTarget	int		892041	0					
ANR	892276	AdditiveExpression	f -> addr - fi -> offset		892041	1		-			
ANR	892277	PtrMemberAccess	f -> addr		892041	0					
ANR	892278	Identifier	f		892041	0					
ANR	892279	Identifier	addr		892041	1					
ANR	892280	PtrMemberAccess	fi -> offset		892041	1					
ANR	892281	Identifier	fi		892041	0					
ANR	892282	Identifier	offset		892041	1					
ANR	892283	IfStatement	if ( delta > 0 )		892041	1					
ANR	892284	Condition	delta > 0	2876:8:83980:83988	892041	0	True				
ANR	892285	RelationalExpression	delta > 0		892041	0		>			
ANR	892286	Identifier	delta		892041	0					
ANR	892287	PrimaryExpression	0		892041	1					
ANR	892288	CompoundStatement		29:19:755:755	892041	1					
ANR	892289	ExpressionStatement	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s+%d"" , fi -> name , delta )"	2877:5:83998:84069	892041	0	True				
ANR	892290	CallExpression	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s+%d"" , fi -> name , delta )"		892041	0					
ANR	892291	Callee	snprintf		892041	0					
ANR	892292	Identifier	snprintf		892041	0					
ANR	892293	ArgumentList	flagdesc		892041	1					
ANR	892294	Argument	flagdesc		892041	0					
ANR	892295	Identifier	flagdesc		892041	0					
ANR	892296	Argument	sizeof ( flagdesc )		892041	1					
ANR	892297	SizeofExpression	sizeof ( flagdesc )		892041	0					
ANR	892298	Sizeof	sizeof		892041	0					
ANR	892299	SizeofOperand	flagdesc		892041	1					
ANR	892300	Argument	"""%s+%d"""		892041	2					
ANR	892301	PrimaryExpression	"""%s+%d"""		892041	0					
ANR	892302	Argument	fi -> name		892041	3					
ANR	892303	PtrMemberAccess	fi -> name		892041	0					
ANR	892304	Identifier	fi		892041	0					
ANR	892305	Identifier	name		892041	1					
ANR	892306	Argument	delta		892041	4					
ANR	892307	Identifier	delta		892041	0					
ANR	892308	ElseStatement	else		892041	0					
ANR	892309	IfStatement	if ( delta < 0 )		892041	0					
ANR	892310	Condition	delta < 0	2879:15:84086:84094	892041	0	True				
ANR	892311	RelationalExpression	delta < 0		892041	0		<			
ANR	892312	Identifier	delta		892041	0					
ANR	892313	PrimaryExpression	0		892041	1					
ANR	892314	CompoundStatement		32:26:861:861	892041	1					
ANR	892315	ExpressionStatement	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s%d"" , fi -> name , delta )"	2880:5:84104:84174	892041	0	True				
ANR	892316	CallExpression	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s%d"" , fi -> name , delta )"		892041	0					
ANR	892317	Callee	snprintf		892041	0					
ANR	892318	Identifier	snprintf		892041	0					
ANR	892319	ArgumentList	flagdesc		892041	1					
ANR	892320	Argument	flagdesc		892041	0					
ANR	892321	Identifier	flagdesc		892041	0					
ANR	892322	Argument	sizeof ( flagdesc )		892041	1					
ANR	892323	SizeofExpression	sizeof ( flagdesc )		892041	0					
ANR	892324	Sizeof	sizeof		892041	0					
ANR	892325	SizeofOperand	flagdesc		892041	1					
ANR	892326	Argument	"""%s%d"""		892041	2					
ANR	892327	PrimaryExpression	"""%s%d"""		892041	0					
ANR	892328	Argument	fi -> name		892041	3					
ANR	892329	PtrMemberAccess	fi -> name		892041	0					
ANR	892330	Identifier	fi		892041	0					
ANR	892331	Identifier	name		892041	1					
ANR	892332	Argument	delta		892041	4					
ANR	892333	Identifier	delta		892041	0					
ANR	892334	ElseStatement	else		892041	0					
ANR	892335	CompoundStatement		35:11:951:951	892041	0					
ANR	892336	ExpressionStatement	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s"" , fi -> name )"	2883:5:84194:84255	892041	0	True				
ANR	892337	CallExpression	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s"" , fi -> name )"		892041	0					
ANR	892338	Callee	snprintf		892041	0					
ANR	892339	Identifier	snprintf		892041	0					
ANR	892340	ArgumentList	flagdesc		892041	1					
ANR	892341	Argument	flagdesc		892041	0					
ANR	892342	Identifier	flagdesc		892041	0					
ANR	892343	Argument	sizeof ( flagdesc )		892041	1					
ANR	892344	SizeofExpression	sizeof ( flagdesc )		892041	0					
ANR	892345	Sizeof	sizeof		892041	0					
ANR	892346	SizeofOperand	flagdesc		892041	1					
ANR	892347	Argument	"""%s"""		892041	2					
ANR	892348	PrimaryExpression	"""%s"""		892041	0					
ANR	892349	Argument	fi -> name		892041	3					
ANR	892350	PtrMemberAccess	fi -> name		892041	0					
ANR	892351	Identifier	fi		892041	0					
ANR	892352	Identifier	name		892041	1					
ANR	892353	ElseStatement	else		892041	0					
ANR	892354	CompoundStatement		39:10:1037:1037	892041	0					
ANR	892355	ExpressionStatement	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s"" , fi -> name )"	2887:4:84279:84339	892041	0	True				
ANR	892356	CallExpression	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s"" , fi -> name )"		892041	0					
ANR	892357	Callee	snprintf		892041	0					
ANR	892358	Identifier	snprintf		892041	0					
ANR	892359	ArgumentList	flagdesc		892041	1					
ANR	892360	Argument	flagdesc		892041	0					
ANR	892361	Identifier	flagdesc		892041	0					
ANR	892362	Argument	sizeof ( flagdesc )		892041	1					
ANR	892363	SizeofExpression	sizeof ( flagdesc )		892041	0					
ANR	892364	Sizeof	sizeof		892041	0					
ANR	892365	SizeofOperand	flagdesc		892041	1					
ANR	892366	Argument	"""%s"""		892041	2					
ANR	892367	PrimaryExpression	"""%s"""		892041	0					
ANR	892368	Argument	fi -> name		892041	3					
ANR	892369	PtrMemberAccess	fi -> name		892041	0					
ANR	892370	Identifier	fi		892041	0					
ANR	892371	Identifier	name		892041	1					
ANR	892372	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , f -> addr , 0 ) ;"	2892:2:84363:84426	892041	8	True				
ANR	892373	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , f -> addr , 0 )"		892041	0					
ANR	892374	IdentifierDeclType	RAnalFunction *		892041	0					
ANR	892375	Identifier	fcn		892041	1					
ANR	892376	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , f -> addr , 0 )"		892041	2		=			
ANR	892377	Identifier	fcn		892041	0					
ANR	892378	CallExpression	"r_anal_get_fcn_in ( core -> anal , f -> addr , 0 )"		892041	1					
ANR	892379	Callee	r_anal_get_fcn_in		892041	0					
ANR	892380	Identifier	r_anal_get_fcn_in		892041	0					
ANR	892381	ArgumentList	core -> anal		892041	1					
ANR	892382	Argument	core -> anal		892041	0					
ANR	892383	PtrMemberAccess	core -> anal		892041	0					
ANR	892384	Identifier	core		892041	0					
ANR	892385	Identifier	anal		892041	1					
ANR	892386	Argument	f -> addr		892041	1					
ANR	892387	PtrMemberAccess	f -> addr		892041	0					
ANR	892388	Identifier	f		892041	0					
ANR	892389	Identifier	addr		892041	1					
ANR	892390	Argument	0		892041	2					
ANR	892391	PrimaryExpression	0		892041	0					
ANR	892392	Statement	r_cons_printf	2894:2:84477:84489	892041	9	True				
ANR	892393	Statement	(	2894:16:84491:84491	892041	10	True				
ANR	892394	Statement	"""%d  0x%08"""	2894:17:84492:84502	892041	11	True				
ANR	892395	Statement	PFMT64x	2894:28:84503:84509	892041	12	True				
ANR	892396	Statement	""" sp: 0x%08"""	2894:35:84510:84521	892041	13	True				
ANR	892397	Statement	PFMT64x	2894:47:84522:84528	892041	14	True				
ANR	892398	Statement	""" %-5d"""	2894:54:84529:84535	892041	15	True				
ANR	892399	Statement	"""[%s]  %s %s\\n"""	2895:4:84541:84555	892041	16	True				
ANR	892400	Statement	","	2895:19:84556:84556	892041	17	True				
ANR	892401	Statement	n	2895:21:84558:84558	892041	18	True				
ANR	892402	Statement	","	2895:22:84559:84559	892041	19	True				
ANR	892403	Statement	f	2895:24:84561:84561	892041	20	True				
ANR	892404	Statement	->	2895:25:84562:84563	892041	21	True				
ANR	892405	Statement	addr	2895:27:84564:84567	892041	22	True				
ANR	892406	Statement	","	2895:31:84568:84568	892041	23	True				
ANR	892407	Statement	f	2895:33:84570:84570	892041	24	True				
ANR	892408	Statement	->	2895:34:84571:84572	892041	25	True				
ANR	892409	Statement	sp	2895:36:84573:84574	892041	26	True				
ANR	892410	Statement	","	2895:38:84575:84575	892041	27	True				
ANR	892411	Statement	(	2895:40:84577:84577	892041	28	True				
ANR	892412	Statement	int	2895:41:84578:84580	892041	29	True				
ANR	892413	Statement	)	2895:44:84581:84581	892041	30	True				
ANR	892414	Statement	f	2895:45:84582:84582	892041	31	True				
ANR	892415	Statement	->	2895:46:84583:84584	892041	32	True				
ANR	892416	Statement	size	2895:48:84585:84588	892041	33	True				
ANR	892417	Statement	","	2895:52:84589:84589	892041	34	True				
ANR	892418	Statement	fcn	2896:4:84595:84597	892041	35	True				
ANR	892419	Statement	?	2896:8:84599:84599	892041	36	True				
ANR	892420	Statement	fcn	2896:10:84601:84603	892041	37	True				
ANR	892421	Statement	->	2896:13:84604:84605	892041	38	True				
ANR	892422	Label	name :	2896:15:84606:84611	892041	39	True				
ANR	892423	Identifier	name		892041	0					
ANR	892424	Statement	"""??"""	2896:22:84613:84616	892041	40	True				
ANR	892425	Statement	","	2896:26:84617:84617	892041	41	True				
ANR	892426	Statement	flagdesc	2896:28:84619:84626	892041	42	True				
ANR	892427	Statement	","	2896:36:84627:84627	892041	43	True				
ANR	892428	Statement	flagdesc2	2896:38:84629:84637	892041	44	True				
ANR	892429	Statement	)	2896:47:84638:84638	892041	45	True				
ANR	892430	ExpressionStatement		2896:48:84639:84639	892041	46	True				
ANR	892431	Statement	eprintf	2897:2:84643:84649	892041	47	True				
ANR	892432	Statement	(	2897:10:84651:84651	892041	48	True				
ANR	892433	Statement	"""afvd @ 0x%"""	2897:11:84652:84663	892041	49	True				
ANR	892434	Statement	PFMT64x	2897:23:84664:84670	892041	50	True				
ANR	892435	Statement	"""\\n"""	2897:30:84671:84674	892041	51	True				
ANR	892436	Statement	","	2897:34:84675:84675	892041	52	True				
ANR	892437	Statement	f	2897:36:84677:84677	892041	53	True				
ANR	892438	Statement	->	2897:37:84678:84679	892041	54	True				
ANR	892439	Statement	addr	2897:39:84680:84683	892041	55	True				
ANR	892440	Statement	)	2897:43:84684:84684	892041	56	True				
ANR	892441	ExpressionStatement		2897:44:84685:84685	892041	57	True				
ANR	892442	ExpressionStatement	r_cons_push ( )	2898:2:84689:84702	892041	58	True				
ANR	892443	CallExpression	r_cons_push ( )		892041	0					
ANR	892444	Callee	r_cons_push		892041	0					
ANR	892445	Identifier	r_cons_push		892041	0					
ANR	892446	ArgumentList			892041	1					
ANR	892447	Statement	char	2899:2:84706:84709	892041	59	True				
ANR	892448	Statement	*	2899:7:84711:84711	892041	60	True				
ANR	892449	Statement	res	2899:8:84712:84714	892041	61	True				
ANR	892450	Statement	=	2899:12:84716:84716	892041	62	True				
ANR	892451	Statement	r_core_cmd_strf	2899:14:84718:84732	892041	63	True				
ANR	892452	Statement	(	2899:30:84734:84734	892041	64	True				
ANR	892453	Statement	core	2899:31:84735:84738	892041	65	True				
ANR	892454	Statement	","	2899:35:84739:84739	892041	66	True				
ANR	892455	Statement	"""afvd@0x%"""	2899:37:84741:84750	892041	67	True				
ANR	892456	Statement	PFMT64x	2899:47:84751:84757	892041	68	True				
ANR	892457	Statement	","	2899:54:84758:84758	892041	69	True				
ANR	892458	Statement	f	2899:56:84760:84760	892041	70	True				
ANR	892459	Statement	->	2899:57:84761:84762	892041	71	True				
ANR	892460	Statement	addr	2899:59:84763:84766	892041	72	True				
ANR	892461	Statement	)	2899:63:84767:84767	892041	73	True				
ANR	892462	ExpressionStatement		2899:64:84768:84768	892041	74	True				
ANR	892463	ExpressionStatement	r_cons_pop ( )	2900:2:84772:84784	892041	75	True				
ANR	892464	CallExpression	r_cons_pop ( )		892041	0					
ANR	892465	Callee	r_cons_pop		892041	0					
ANR	892466	Identifier	r_cons_pop		892041	0					
ANR	892467	ArgumentList			892041	1					
ANR	892468	ExpressionStatement	"r_cons_printf ( ""%s"" , res )"	2901:2:84788:84813	892041	76	True				
ANR	892469	CallExpression	"r_cons_printf ( ""%s"" , res )"		892041	0					
ANR	892470	Callee	r_cons_printf		892041	0					
ANR	892471	Identifier	r_cons_printf		892041	0					
ANR	892472	ArgumentList	"""%s"""		892041	1					
ANR	892473	Argument	"""%s"""		892041	0					
ANR	892474	PrimaryExpression	"""%s"""		892041	0					
ANR	892475	Argument	res		892041	1					
ANR	892476	Identifier	res		892041	0					
ANR	892477	ExpressionStatement	free ( res )	2902:2:84817:84827	892041	77	True				
ANR	892478	CallExpression	free ( res )		892041	0					
ANR	892479	Callee	free		892041	0					
ANR	892480	Identifier	free		892041	0					
ANR	892481	ArgumentList	res		892041	1					
ANR	892482	Argument	res		892041	0					
ANR	892483	Identifier	res		892041	0					
ANR	892484	ExpressionStatement	n ++	2903:2:84831:84834	892041	78	True				
ANR	892485	PostIncDecOperationExpression	n ++		892041	0					
ANR	892486	Identifier	n		892041	0					
ANR	892487	IncDec	++		892041	1					
ANR	892488	ExpressionStatement	"r_reg_setv ( r , bp , dbp )"	2905:1:84840:84863	892041	19	True				
ANR	892489	CallExpression	"r_reg_setv ( r , bp , dbp )"		892041	0					
ANR	892490	Callee	r_reg_setv		892041	0					
ANR	892491	Identifier	r_reg_setv		892041	0					
ANR	892492	ArgumentList	r		892041	1					
ANR	892493	Argument	r		892041	0					
ANR	892494	Identifier	r		892041	0					
ANR	892495	Argument	bp		892041	1					
ANR	892496	Identifier	bp		892041	0					
ANR	892497	Argument	dbp		892041	2					
ANR	892498	Identifier	dbp		892041	0					
ANR	892499	ExpressionStatement	"r_reg_setv ( r , sp , dsp )"	2906:1:84866:84889	892041	20	True				
ANR	892500	CallExpression	"r_reg_setv ( r , sp , dsp )"		892041	0					
ANR	892501	Callee	r_reg_setv		892041	0					
ANR	892502	Identifier	r_reg_setv		892041	0					
ANR	892503	ArgumentList	r		892041	1					
ANR	892504	Argument	r		892041	0					
ANR	892505	Identifier	r		892041	0					
ANR	892506	Argument	sp		892041	1					
ANR	892507	Identifier	sp		892041	0					
ANR	892508	Argument	dsp		892041	2					
ANR	892509	Identifier	dsp		892041	0					
ANR	892510	ReturnType	static void		892041	1					
ANR	892511	Identifier	backtrace_vars		892041	2					
ANR	892512	ParameterList	"RCore * core , RList * frames"		892041	3					
ANR	892513	Parameter	RCore * core	2848:27:83207:83217	892041	0	True				
ANR	892514	ParameterType	RCore *		892041	0					
ANR	892515	Identifier	core		892041	1					
ANR	892516	Parameter	RList * frames	2848:40:83220:83232	892041	1	True				
ANR	892517	ParameterType	RList *		892041	0					
ANR	892518	Identifier	frames		892041	1					
ANR	892519	CFGEntryNode	ENTRY		892041		True				
ANR	892520	CFGExitNode	EXIT		892041		True				
ANR	892521	Symbol	dsp		892041						
ANR	892522	Symbol	core -> anal -> reg		892041						
ANR	892523	Symbol	fi		892041						
ANR	892524	Symbol	flagdesc		892041						
ANR	892525	Symbol	* core		892041						
ANR	892526	Symbol	delta		892041						
ANR	892527	Symbol	fi -> name		892041						
ANR	892528	Symbol	core -> anal		892041						
ANR	892529	Symbol	bp		892041						
ANR	892530	Symbol	f -> bp		892041						
ANR	892531	Symbol	fcn		892041						
ANR	892532	Symbol	fi -> offset		892041						
ANR	892533	Symbol	f -> addr		892041						
ANR	892534	Symbol	sp		892041						
ANR	892535	Symbol	* * core		892041						
ANR	892536	Symbol	f -> sp		892041						
ANR	892537	Symbol	R_REG_NAME_BP		892041						
ANR	892538	Symbol	* flagdesc		892041						
ANR	892539	Symbol	res		892041						
ANR	892540	Symbol	b		892041						
ANR	892541	Symbol	frames		892041						
ANR	892542	Symbol	f		892041						
ANR	892543	Symbol	flagdesc2		892041						
ANR	892544	Symbol	iter		892041						
ANR	892545	Symbol	core -> flags		892041						
ANR	892546	Symbol	* fi		892041						
ANR	892547	Symbol	n		892041						
ANR	892548	Symbol	* f		892041						
ANR	892549	Symbol	core		892041						
ANR	892550	Symbol	r		892041						
ANR	892551	Symbol	R_REG_NAME_SP		892041						
ANR	892552	Symbol	* core -> anal		892041						
ANR	892553	Symbol	dbp		892041						
ANR	892554	Symbol	s		892041						
ANR	892555	Symbol	r_anal_get_fcn_in		892041						
ANR	892556	Symbol	r_reg_get_name		892041						
ANR	892557	Symbol	true		892041						
ANR	892558	Symbol	* flagdesc2		892041						
ANR	892559	Symbol	r_reg_getv		892041						
ANR	892560	Symbol	r_flag_get_at		892041						
ANR	892561	Function	asciiart_backtrace	2909:0:84894:86635							
ANR	892562	FunctionDef	"asciiart_backtrace (RCore * core , RList * frames)"		892561	0					
ANR	892563	CompoundStatement		2909:59:84953:86635	892561	0					
ANR	892564	IdentifierDeclStatement	RDebugFrame * f ;	2914:1:85092:85106	892561	0	True				
ANR	892565	IdentifierDecl	* f		892561	0					
ANR	892566	IdentifierDeclType	RDebugFrame *		892561	0					
ANR	892567	Identifier	f		892561	1					
ANR	892568	IdentifierDeclStatement	RListIter * iter ;	2915:1:85109:85124	892561	1	True				
ANR	892569	IdentifierDecl	* iter		892561	0					
ANR	892570	IdentifierDeclType	RListIter *		892561	0					
ANR	892571	Identifier	iter		892561	1					
ANR	892572	IdentifierDeclStatement	bool mymap = false ;	2916:1:85127:85145	892561	2	True				
ANR	892573	IdentifierDecl	mymap = false		892561	0					
ANR	892574	IdentifierDeclType	bool		892561	0					
ANR	892575	Identifier	mymap		892561	1					
ANR	892576	AssignmentExpression	mymap = false		892561	2		=			
ANR	892577	Identifier	false		892561	0					
ANR	892578	Identifier	false		892561	1					
ANR	892579	IdentifierDeclStatement	"const char * sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP ) ;"	2918:1:85168:85232	892561	3	True				
ANR	892580	IdentifierDecl	"* sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		892561	0					
ANR	892581	IdentifierDeclType	const char *		892561	0					
ANR	892582	Identifier	sp		892561	1					
ANR	892583	AssignmentExpression	"* sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		892561	2		=			
ANR	892584	Identifier	sp		892561	0					
ANR	892585	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		892561	1					
ANR	892586	Callee	r_reg_get_name		892561	0					
ANR	892587	Identifier	r_reg_get_name		892561	0					
ANR	892588	ArgumentList	core -> anal -> reg		892561	1					
ANR	892589	Argument	core -> anal -> reg		892561	0					
ANR	892590	PtrMemberAccess	core -> anal -> reg		892561	0					
ANR	892591	PtrMemberAccess	core -> anal		892561	0					
ANR	892592	Identifier	core		892561	0					
ANR	892593	Identifier	anal		892561	1					
ANR	892594	Identifier	reg		892561	1					
ANR	892595	Argument	R_REG_NAME_SP		892561	1					
ANR	892596	Identifier	R_REG_NAME_SP		892561	0					
ANR	892597	IdentifierDeclStatement	"const char * bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP ) ;"	2919:1:85235:85299	892561	4	True				
ANR	892598	IdentifierDecl	"* bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		892561	0					
ANR	892599	IdentifierDeclType	const char *		892561	0					
ANR	892600	Identifier	bp		892561	1					
ANR	892601	AssignmentExpression	"* bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		892561	2		=			
ANR	892602	Identifier	bp		892561	0					
ANR	892603	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		892561	1					
ANR	892604	Callee	r_reg_get_name		892561	0					
ANR	892605	Identifier	r_reg_get_name		892561	0					
ANR	892606	ArgumentList	core -> anal -> reg		892561	1					
ANR	892607	Argument	core -> anal -> reg		892561	0					
ANR	892608	PtrMemberAccess	core -> anal -> reg		892561	0					
ANR	892609	PtrMemberAccess	core -> anal		892561	0					
ANR	892610	Identifier	core		892561	0					
ANR	892611	Identifier	anal		892561	1					
ANR	892612	Identifier	reg		892561	1					
ANR	892613	Argument	R_REG_NAME_BP		892561	1					
ANR	892614	Identifier	R_REG_NAME_BP		892561	0					
ANR	892615	IfStatement	if ( ! sp )		892561	5					
ANR	892616	Condition	! sp	2920:5:85306:85308	892561	0	True				
ANR	892617	UnaryOperationExpression	! sp		892561	0					
ANR	892618	UnaryOperator	!		892561	0					
ANR	892619	Identifier	sp		892561	1					
ANR	892620	CompoundStatement		12:10:357:357	892561	1					
ANR	892621	ExpressionStatement	"sp = ""SP"""	2921:2:85315:85324	892561	0	True				
ANR	892622	AssignmentExpression	"sp = ""SP"""		892561	0		=			
ANR	892623	Identifier	sp		892561	0					
ANR	892624	PrimaryExpression	"""SP"""		892561	1					
ANR	892625	IfStatement	if ( ! bp )		892561	6					
ANR	892626	Condition	! bp	2923:5:85334:85336	892561	0	True				
ANR	892627	UnaryOperationExpression	! bp		892561	0					
ANR	892628	UnaryOperator	!		892561	0					
ANR	892629	Identifier	bp		892561	1					
ANR	892630	CompoundStatement		15:10:385:385	892561	1					
ANR	892631	ExpressionStatement	"bp = ""BP"""	2924:2:85343:85352	892561	0	True				
ANR	892632	AssignmentExpression	"bp = ""BP"""		892561	0		=			
ANR	892633	Identifier	bp		892561	0					
ANR	892634	PrimaryExpression	"""BP"""		892561	1					
ANR	892635	IdentifierDeclStatement	"ut64 dsp = r_reg_getv ( core -> anal -> reg , sp ) ;"	2926:1:85358:85401	892561	7	True				
ANR	892636	IdentifierDecl	"dsp = r_reg_getv ( core -> anal -> reg , sp )"		892561	0					
ANR	892637	IdentifierDeclType	ut64		892561	0					
ANR	892638	Identifier	dsp		892561	1					
ANR	892639	AssignmentExpression	"dsp = r_reg_getv ( core -> anal -> reg , sp )"		892561	2		=			
ANR	892640	Identifier	dsp		892561	0					
ANR	892641	CallExpression	"r_reg_getv ( core -> anal -> reg , sp )"		892561	1					
ANR	892642	Callee	r_reg_getv		892561	0					
ANR	892643	Identifier	r_reg_getv		892561	0					
ANR	892644	ArgumentList	core -> anal -> reg		892561	1					
ANR	892645	Argument	core -> anal -> reg		892561	0					
ANR	892646	PtrMemberAccess	core -> anal -> reg		892561	0					
ANR	892647	PtrMemberAccess	core -> anal		892561	0					
ANR	892648	Identifier	core		892561	0					
ANR	892649	Identifier	anal		892561	1					
ANR	892650	Identifier	reg		892561	1					
ANR	892651	Argument	sp		892561	1					
ANR	892652	Identifier	sp		892561	0					
ANR	892653	IdentifierDeclStatement	"ut64 dbp = r_reg_getv ( core -> anal -> reg , bp ) ;"	2927:1:85404:85447	892561	8	True				
ANR	892654	IdentifierDecl	"dbp = r_reg_getv ( core -> anal -> reg , bp )"		892561	0					
ANR	892655	IdentifierDeclType	ut64		892561	0					
ANR	892656	Identifier	dbp		892561	1					
ANR	892657	AssignmentExpression	"dbp = r_reg_getv ( core -> anal -> reg , bp )"		892561	2		=			
ANR	892658	Identifier	dbp		892561	0					
ANR	892659	CallExpression	"r_reg_getv ( core -> anal -> reg , bp )"		892561	1					
ANR	892660	Callee	r_reg_getv		892561	0					
ANR	892661	Identifier	r_reg_getv		892561	0					
ANR	892662	ArgumentList	core -> anal -> reg		892561	1					
ANR	892663	Argument	core -> anal -> reg		892561	0					
ANR	892664	PtrMemberAccess	core -> anal -> reg		892561	0					
ANR	892665	PtrMemberAccess	core -> anal		892561	0					
ANR	892666	Identifier	core		892561	0					
ANR	892667	Identifier	anal		892561	1					
ANR	892668	Identifier	reg		892561	1					
ANR	892669	Argument	bp		892561	1					
ANR	892670	Identifier	bp		892561	0					
ANR	892671	IdentifierDeclStatement	"RDebugMap * map = r_debug_map_get ( core -> dbg , dsp ) ;"	2928:1:85450:85499	892561	9	True				
ANR	892672	IdentifierDecl	"* map = r_debug_map_get ( core -> dbg , dsp )"		892561	0					
ANR	892673	IdentifierDeclType	RDebugMap *		892561	0					
ANR	892674	Identifier	map		892561	1					
ANR	892675	AssignmentExpression	"* map = r_debug_map_get ( core -> dbg , dsp )"		892561	2		=			
ANR	892676	Identifier	map		892561	0					
ANR	892677	CallExpression	"r_debug_map_get ( core -> dbg , dsp )"		892561	1					
ANR	892678	Callee	r_debug_map_get		892561	0					
ANR	892679	Identifier	r_debug_map_get		892561	0					
ANR	892680	ArgumentList	core -> dbg		892561	1					
ANR	892681	Argument	core -> dbg		892561	0					
ANR	892682	PtrMemberAccess	core -> dbg		892561	0					
ANR	892683	Identifier	core		892561	0					
ANR	892684	Identifier	dbg		892561	1					
ANR	892685	Argument	dsp		892561	1					
ANR	892686	Identifier	dsp		892561	0					
ANR	892687	IfStatement	if ( ! map )		892561	10					
ANR	892688	Condition	! map	2929:5:85506:85509	892561	0	True				
ANR	892689	UnaryOperationExpression	! map		892561	0					
ANR	892690	UnaryOperator	!		892561	0					
ANR	892691	Identifier	map		892561	1					
ANR	892692	CompoundStatement		21:11:558:558	892561	1					
ANR	892693	ExpressionStatement	mymap = true	2930:2:85516:85528	892561	0	True				
ANR	892694	AssignmentExpression	mymap = true		892561	0		=			
ANR	892695	Identifier	mymap		892561	0					
ANR	892696	Identifier	true		892561	1					
ANR	892697	ExpressionStatement	map = R_NEW0 ( RDebugMap )	2931:2:85532:85556	892561	1	True				
ANR	892698	AssignmentExpression	map = R_NEW0 ( RDebugMap )		892561	0		=			
ANR	892699	Identifier	map		892561	0					
ANR	892700	CallExpression	R_NEW0 ( RDebugMap )		892561	1					
ANR	892701	Callee	R_NEW0		892561	0					
ANR	892702	Identifier	R_NEW0		892561	0					
ANR	892703	ArgumentList	RDebugMap		892561	1					
ANR	892704	Argument	RDebugMap		892561	0					
ANR	892705	Identifier	RDebugMap		892561	0					
ANR	892706	ExpressionStatement	map -> addr = UT64_MAX	2932:2:85560:85580	892561	2	True				
ANR	892707	AssignmentExpression	map -> addr = UT64_MAX		892561	0		=			
ANR	892708	PtrMemberAccess	map -> addr		892561	0					
ANR	892709	Identifier	map		892561	0					
ANR	892710	Identifier	addr		892561	1					
ANR	892711	Identifier	UT64_MAX		892561	1					
ANR	892712	ExpressionStatement	map -> addr_end = UT64_MAX	2933:2:85584:85608	892561	3	True				
ANR	892713	AssignmentExpression	map -> addr_end = UT64_MAX		892561	0		=			
ANR	892714	PtrMemberAccess	map -> addr_end		892561	0					
ANR	892715	Identifier	map		892561	0					
ANR	892716	Identifier	addr_end		892561	1					
ANR	892717	Identifier	UT64_MAX		892561	1					
ANR	892718	Statement	r_cons_printf	2936:1:85615:85627	892561	11	True				
ANR	892719	Statement	(	2936:15:85629:85629	892561	12	True				
ANR	892720	Statement	"""0x%016"""	2936:16:85630:85637	892561	13	True				
ANR	892721	Statement	PFMT64x	2936:24:85638:85644	892561	14	True				
ANR	892722	Statement	"""  STACK END  ^^^\\n"""	2936:31:85645:85664	892561	15	True				
ANR	892723	Statement	","	2936:51:85665:85665	892561	16	True				
ANR	892724	Statement	map	2936:53:85667:85669	892561	17	True				
ANR	892725	Statement	->	2936:56:85670:85671	892561	18	True				
ANR	892726	Statement	addr	2936:58:85672:85675	892561	19	True				
ANR	892727	Statement	)	2936:62:85676:85676	892561	20	True				
ANR	892728	ExpressionStatement		2936:63:85677:85677	892561	21	True				
ANR	892729	Statement	r_cons_printf	2937:1:85680:85692	892561	22	True				
ANR	892730	Statement	(	2937:15:85694:85694	892561	23	True				
ANR	892731	Statement	"""0x%016"""	2937:16:85695:85702	892561	24	True				
ANR	892732	Statement	PFMT64x	2937:24:85703:85709	892561	25	True				
ANR	892733	Statement	"""  STACK POINTER: %s\\n"""	2937:31:85710:85732	892561	26	True				
ANR	892734	Statement	","	2937:54:85733:85733	892561	27	True				
ANR	892735	Statement	dsp	2937:56:85735:85737	892561	28	True				
ANR	892736	Statement	","	2937:59:85738:85738	892561	29	True				
ANR	892737	Statement	sp	2937:61:85740:85741	892561	30	True				
ANR	892738	Statement	)	2937:63:85742:85742	892561	31	True				
ANR	892739	ExpressionStatement		2937:64:85743:85743	892561	32	True				
ANR	892740	ExpressionStatement	"r_cons_printf ( ""                    .------------------------.\\n"" )"	2938:1:85746:85812	892561	33	True				
ANR	892741	CallExpression	"r_cons_printf ( ""                    .------------------------.\\n"" )"		892561	0					
ANR	892742	Callee	r_cons_printf		892561	0					
ANR	892743	Identifier	r_cons_printf		892561	0					
ANR	892744	ArgumentList	"""                    .------------------------.\\n"""		892561	1					
ANR	892745	Argument	"""                    .------------------------.\\n"""		892561	0					
ANR	892746	PrimaryExpression	"""                    .------------------------.\\n"""		892561	0					
ANR	892747	IdentifierDeclStatement	int n = 0 ;	2939:1:85815:85824	892561	34	True				
ANR	892748	IdentifierDecl	n = 0		892561	0					
ANR	892749	IdentifierDeclType	int		892561	0					
ANR	892750	Identifier	n		892561	1					
ANR	892751	AssignmentExpression	n = 0		892561	2		=			
ANR	892752	Identifier	n		892561	0					
ANR	892753	PrimaryExpression	0		892561	1					
ANR	892754	Statement	r_list_foreach	2940:1:85827:85840	892561	35	True				
ANR	892755	Statement	(	2940:16:85842:85842	892561	36	True				
ANR	892756	Statement	frames	2940:17:85843:85848	892561	37	True				
ANR	892757	Statement	","	2940:23:85849:85849	892561	38	True				
ANR	892758	Statement	iter	2940:25:85851:85854	892561	39	True				
ANR	892759	Statement	","	2940:29:85855:85855	892561	40	True				
ANR	892760	Statement	f	2940:31:85857:85857	892561	41	True				
ANR	892761	Statement	)	2940:32:85858:85858	892561	42	True				
ANR	892762	CompoundStatement		35:2:974:1014	892561	43					
ANR	892763	IdentifierDeclStatement	ut64 s = f -> sp ? f -> sp : dsp ;	2941:2:85864:85892	892561	0	True				
ANR	892764	IdentifierDecl	s = f -> sp ? f -> sp : dsp		892561	0					
ANR	892765	IdentifierDeclType	ut64		892561	0					
ANR	892766	Identifier	s		892561	1					
ANR	892767	AssignmentExpression	s = f -> sp ? f -> sp : dsp		892561	2		=			
ANR	892768	Identifier	s		892561	0					
ANR	892769	ConditionalExpression	f -> sp ? f -> sp : dsp		892561	1					
ANR	892770	Condition	f -> sp		892561	0					
ANR	892771	PtrMemberAccess	f -> sp		892561	0					
ANR	892772	Identifier	f		892561	0					
ANR	892773	Identifier	sp		892561	1					
ANR	892774	PtrMemberAccess	f -> sp		892561	1					
ANR	892775	Identifier	f		892561	0					
ANR	892776	Identifier	sp		892561	1					
ANR	892777	Identifier	dsp		892561	2					
ANR	892778	IdentifierDeclStatement	ut64 b = f -> bp ? f -> bp : dbp ;	2942:2:85896:85924	892561	1	True				
ANR	892779	IdentifierDecl	b = f -> bp ? f -> bp : dbp		892561	0					
ANR	892780	IdentifierDeclType	ut64		892561	0					
ANR	892781	Identifier	b		892561	1					
ANR	892782	AssignmentExpression	b = f -> bp ? f -> bp : dbp		892561	2		=			
ANR	892783	Identifier	b		892561	0					
ANR	892784	ConditionalExpression	f -> bp ? f -> bp : dbp		892561	1					
ANR	892785	Condition	f -> bp		892561	0					
ANR	892786	PtrMemberAccess	f -> bp		892561	0					
ANR	892787	Identifier	f		892561	0					
ANR	892788	Identifier	bp		892561	1					
ANR	892789	PtrMemberAccess	f -> bp		892561	1					
ANR	892790	Identifier	f		892561	0					
ANR	892791	Identifier	bp		892561	1					
ANR	892792	Identifier	dbp		892561	2					
ANR	892793	IdentifierDeclStatement	"char * str = r_str_newf ( ""[frame %d]"" , n ) ;"	2943:2:85928:85968	892561	2	True				
ANR	892794	IdentifierDecl	"* str = r_str_newf ( ""[frame %d]"" , n )"		892561	0					
ANR	892795	IdentifierDeclType	char *		892561	0					
ANR	892796	Identifier	str		892561	1					
ANR	892797	AssignmentExpression	"* str = r_str_newf ( ""[frame %d]"" , n )"		892561	2		=			
ANR	892798	Identifier	str		892561	0					
ANR	892799	CallExpression	"r_str_newf ( ""[frame %d]"" , n )"		892561	1					
ANR	892800	Callee	r_str_newf		892561	0					
ANR	892801	Identifier	r_str_newf		892561	0					
ANR	892802	ArgumentList	"""[frame %d]"""		892561	1					
ANR	892803	Argument	"""[frame %d]"""		892561	0					
ANR	892804	PrimaryExpression	"""[frame %d]"""		892561	0					
ANR	892805	Argument	n		892561	1					
ANR	892806	Identifier	n		892561	0					
ANR	892807	Statement	r_cons_printf	2944:2:85972:85984	892561	3	True				
ANR	892808	Statement	(	2944:16:85986:85986	892561	4	True				
ANR	892809	Statement	"""0x%016"""	2944:17:85987:85994	892561	5	True				
ANR	892810	Statement	PFMT64x	2944:25:85995:86001	892561	6	True				
ANR	892811	Statement	"""  |%4s    %10s      | ; size %d\\n"""	2944:32:86002:86036	892561	7	True				
ANR	892812	Statement	","	2944:67:86037:86037	892561	8	True				
ANR	892813	Statement	s	2944:69:86039:86039	892561	9	True				
ANR	892814	Statement	","	2944:70:86040:86040	892561	10	True				
ANR	892815	Statement	sp	2944:72:86042:86043	892561	11	True				
ANR	892816	Statement	","	2944:74:86044:86044	892561	12	True				
ANR	892817	Statement	str	2944:76:86046:86048	892561	13	True				
ANR	892818	Statement	","	2944:79:86049:86049	892561	14	True				
ANR	892819	Statement	s	2944:81:86051:86051	892561	15	True				
ANR	892820	Statement	-	2944:83:86053:86053	892561	16	True				
ANR	892821	Statement	b	2944:85:86055:86055	892561	17	True				
ANR	892822	Statement	)	2944:86:86056:86056	892561	18	True				
ANR	892823	ExpressionStatement		2944:87:86057:86057	892561	19	True				
ANR	892824	ExpressionStatement	free ( str )	2945:2:86061:86071	892561	20	True				
ANR	892825	CallExpression	free ( str )		892561	0					
ANR	892826	Callee	free		892561	0					
ANR	892827	Identifier	free		892561	0					
ANR	892828	ArgumentList	str		892561	1					
ANR	892829	Argument	str		892561	0					
ANR	892830	Identifier	str		892561	0					
ANR	892831	ExpressionStatement	"r_cons_printf ( ""                    |            ...         |\\n"" )"	2946:2:86075:86141	892561	21	True				
ANR	892832	CallExpression	"r_cons_printf ( ""                    |            ...         |\\n"" )"		892561	0					
ANR	892833	Callee	r_cons_printf		892561	0					
ANR	892834	Identifier	r_cons_printf		892561	0					
ANR	892835	ArgumentList	"""                    |            ...         |\\n"""		892561	1					
ANR	892836	Argument	"""                    |            ...         |\\n"""		892561	0					
ANR	892837	PrimaryExpression	"""                    |            ...         |\\n"""		892561	0					
ANR	892838	Statement	r_cons_printf	2947:2:86145:86157	892561	22	True				
ANR	892839	Statement	(	2947:16:86159:86159	892561	23	True				
ANR	892840	Statement	"""0x%016"""	2947:17:86160:86167	892561	24	True				
ANR	892841	Statement	PFMT64x	2947:25:86168:86174	892561	25	True				
ANR	892842	Statement	"""  |%4s 0x%016"""	2947:32:86175:86189	892561	26	True				
ANR	892843	Statement	PFMT64x	2947:47:86190:86196	892561	27	True				
ANR	892844	Statement	""" | %s\\n"""	2947:54:86197:86205	892561	28	True				
ANR	892845	Statement	","	2947:63:86206:86206	892561	29	True				
ANR	892846	Statement	b	2947:65:86208:86208	892561	30	True				
ANR	892847	Statement	","	2947:66:86209:86209	892561	31	True				
ANR	892848	Statement	bp	2947:68:86211:86212	892561	32	True				
ANR	892849	Statement	","	2947:70:86213:86213	892561	33	True				
ANR	892850	Statement	f	2947:72:86215:86215	892561	34	True				
ANR	892851	Statement	->	2947:73:86216:86217	892561	35	True				
ANR	892852	Statement	addr	2947:75:86218:86221	892561	36	True				
ANR	892853	Statement	","	2947:79:86222:86222	892561	37	True				
ANR	892854	Statement	"""; return address"""	2947:81:86224:86241	892561	38	True				
ANR	892855	Statement	)	2947:99:86242:86242	892561	39	True				
ANR	892856	ExpressionStatement		2947:100:86243:86243	892561	40	True				
ANR	892857	ExpressionStatement	"r_cons_printf ( ""                    )------------------------(\\n"" )"	2948:2:86247:86313	892561	41	True				
ANR	892858	CallExpression	"r_cons_printf ( ""                    )------------------------(\\n"" )"		892561	0					
ANR	892859	Callee	r_cons_printf		892561	0					
ANR	892860	Identifier	r_cons_printf		892561	0					
ANR	892861	ArgumentList	"""                    )------------------------(\\n"""		892561	1					
ANR	892862	Argument	"""                    )------------------------(\\n"""		892561	0					
ANR	892863	PrimaryExpression	"""                    )------------------------(\\n"""		892561	0					
ANR	892864	ExpressionStatement	n ++	2950:2:86379:86382	892561	42	True				
ANR	892865	PostIncDecOperationExpression	n ++		892561	0					
ANR	892866	Identifier	n		892561	0					
ANR	892867	IncDec	++		892561	1					
ANR	892868	ExpressionStatement	"r_cons_printf ( ""                    |           ...          |\\n"" )"	2952:1:86388:86454	892561	44	True				
ANR	892869	CallExpression	"r_cons_printf ( ""                    |           ...          |\\n"" )"		892561	0					
ANR	892870	Callee	r_cons_printf		892561	0					
ANR	892871	Identifier	r_cons_printf		892561	0					
ANR	892872	ArgumentList	"""                    |           ...          |\\n"""		892561	1					
ANR	892873	Argument	"""                    |           ...          |\\n"""		892561	0					
ANR	892874	PrimaryExpression	"""                    |           ...          |\\n"""		892561	0					
ANR	892875	ExpressionStatement	"r_cons_printf ( ""                    `------------------------'\\n"" )"	2953:1:86457:86523	892561	45	True				
ANR	892876	CallExpression	"r_cons_printf ( ""                    `------------------------'\\n"" )"		892561	0					
ANR	892877	Callee	r_cons_printf		892561	0					
ANR	892878	Identifier	r_cons_printf		892561	0					
ANR	892879	ArgumentList	"""                    `------------------------'\\n"""		892561	1					
ANR	892880	Argument	"""                    `------------------------'\\n"""		892561	0					
ANR	892881	PrimaryExpression	"""                    `------------------------'\\n"""		892561	0					
ANR	892882	Statement	r_cons_printf	2954:1:86526:86538	892561	46	True				
ANR	892883	Statement	(	2954:15:86540:86540	892561	47	True				
ANR	892884	Statement	"""0x%016"""	2954:16:86541:86548	892561	48	True				
ANR	892885	Statement	PFMT64x	2954:24:86549:86555	892561	49	True				
ANR	892886	Statement	"""  STACK BOTTOM\\n"""	2954:31:86556:86573	892561	50	True				
ANR	892887	Statement	","	2954:49:86574:86574	892561	51	True				
ANR	892888	Statement	map	2954:51:86576:86578	892561	52	True				
ANR	892889	Statement	->	2954:54:86579:86580	892561	53	True				
ANR	892890	Statement	addr_end	2954:56:86581:86588	892561	54	True				
ANR	892891	Statement	)	2954:64:86589:86589	892561	55	True				
ANR	892892	ExpressionStatement		2954:65:86590:86590	892561	56	True				
ANR	892893	IfStatement	if ( mymap )		892561	57					
ANR	892894	Condition	mymap	2955:5:86597:86601	892561	0	True				
ANR	892895	Identifier	mymap		892561	0					
ANR	892896	CompoundStatement		47:12:1650:1650	892561	1					
ANR	892897	ExpressionStatement	r_debug_map_free ( map )	2956:2:86608:86630	892561	0	True				
ANR	892898	CallExpression	r_debug_map_free ( map )		892561	0					
ANR	892899	Callee	r_debug_map_free		892561	0					
ANR	892900	Identifier	r_debug_map_free		892561	0					
ANR	892901	ArgumentList	map		892561	1					
ANR	892902	Argument	map		892561	0					
ANR	892903	Identifier	map		892561	0					
ANR	892904	ReturnType	static void		892561	1					
ANR	892905	Identifier	asciiart_backtrace		892561	2					
ANR	892906	ParameterList	"RCore * core , RList * frames"		892561	3					
ANR	892907	Parameter	RCore * core	2909:31:84925:84935	892561	0	True				
ANR	892908	ParameterType	RCore *		892561	0					
ANR	892909	Identifier	core		892561	1					
ANR	892910	Parameter	RList * frames	2909:44:84938:84950	892561	1	True				
ANR	892911	ParameterType	RList *		892561	0					
ANR	892912	Identifier	frames		892561	1					
ANR	892913	CFGEntryNode	ENTRY		892561		True				
ANR	892914	CFGExitNode	EXIT		892561		True				
ANR	892915	Symbol	dsp		892561						
ANR	892916	Symbol	core -> anal -> reg		892561						
ANR	892917	Symbol	map -> addr		892561						
ANR	892918	Symbol	* map		892561						
ANR	892919	Symbol	mymap		892561						
ANR	892920	Symbol	* core		892561						
ANR	892921	Symbol	r_str_newf		892561						
ANR	892922	Symbol	core -> anal		892561						
ANR	892923	Symbol	bp		892561						
ANR	892924	Symbol	f -> bp		892561						
ANR	892925	Symbol	RDebugMap		892561						
ANR	892926	Symbol	r_debug_map_get		892561						
ANR	892927	Symbol	UT64_MAX		892561						
ANR	892928	Symbol	sp		892561						
ANR	892929	Symbol	map		892561						
ANR	892930	Symbol	* * core		892561						
ANR	892931	Symbol	f -> sp		892561						
ANR	892932	Symbol	R_REG_NAME_BP		892561						
ANR	892933	Symbol	b		892561						
ANR	892934	Symbol	frames		892561						
ANR	892935	Symbol	f		892561						
ANR	892936	Symbol	false		892561						
ANR	892937	Symbol	iter		892561						
ANR	892938	Symbol	n		892561						
ANR	892939	Symbol	* f		892561						
ANR	892940	Symbol	str		892561						
ANR	892941	Symbol	core		892561						
ANR	892942	Symbol	R_NEW0		892561						
ANR	892943	Symbol	* core -> anal		892561						
ANR	892944	Symbol	R_REG_NAME_SP		892561						
ANR	892945	Symbol	dbp		892561						
ANR	892946	Symbol	s		892561						
ANR	892947	Symbol	r_reg_get_name		892561						
ANR	892948	Symbol	true		892561						
ANR	892949	Symbol	map -> addr_end		892561						
ANR	892950	Symbol	r_reg_getv		892561						
ANR	892951	Symbol	core -> dbg		892561						
ANR	892952	Function	get_backtrace_info	2960:0:86638:88740							
ANR	892953	FunctionDef	"get_backtrace_info (RCore * core , RDebugFrame * frame , ut64 addr , char * * flagdesc , char * * flagdesc2 , char * * pcstr , char * * spstr , bool hex_format)"		892952	0					
ANR	892954	CompoundStatement		2960:155:86793:88740	892952	0					
ANR	892955	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_at ( core -> flags , frame -> addr , true ) ;"	2961:1:86796:86857	892952	0	True				
ANR	892956	IdentifierDecl	"* f = r_flag_get_at ( core -> flags , frame -> addr , true )"		892952	0					
ANR	892957	IdentifierDeclType	RFlagItem *		892952	0					
ANR	892958	Identifier	f		892952	1					
ANR	892959	AssignmentExpression	"* f = r_flag_get_at ( core -> flags , frame -> addr , true )"		892952	2		=			
ANR	892960	Identifier	f		892952	0					
ANR	892961	CallExpression	"r_flag_get_at ( core -> flags , frame -> addr , true )"		892952	1					
ANR	892962	Callee	r_flag_get_at		892952	0					
ANR	892963	Identifier	r_flag_get_at		892952	0					
ANR	892964	ArgumentList	core -> flags		892952	1					
ANR	892965	Argument	core -> flags		892952	0					
ANR	892966	PtrMemberAccess	core -> flags		892952	0					
ANR	892967	Identifier	core		892952	0					
ANR	892968	Identifier	flags		892952	1					
ANR	892969	Argument	frame -> addr		892952	1					
ANR	892970	PtrMemberAccess	frame -> addr		892952	0					
ANR	892971	Identifier	frame		892952	0					
ANR	892972	Identifier	addr		892952	1					
ANR	892973	Argument	true		892952	2					
ANR	892974	Identifier	true		892952	0					
ANR	892975	ExpressionStatement	* flagdesc = NULL	2962:1:86860:86876	892952	1	True				
ANR	892976	AssignmentExpression	* flagdesc = NULL		892952	0		=			
ANR	892977	UnaryOperationExpression	* flagdesc		892952	0					
ANR	892978	UnaryOperator	*		892952	0					
ANR	892979	Identifier	flagdesc		892952	1					
ANR	892980	Identifier	NULL		892952	1					
ANR	892981	ExpressionStatement	* flagdesc2 = NULL	2963:1:86879:86896	892952	2	True				
ANR	892982	AssignmentExpression	* flagdesc2 = NULL		892952	0		=			
ANR	892983	UnaryOperationExpression	* flagdesc2		892952	0					
ANR	892984	UnaryOperator	*		892952	0					
ANR	892985	Identifier	flagdesc2		892952	1					
ANR	892986	Identifier	NULL		892952	1					
ANR	892987	IfStatement	if ( f )		892952	3					
ANR	892988	Condition	f	2964:5:86903:86903	892952	0	True				
ANR	892989	Identifier	f		892952	0					
ANR	892990	CompoundStatement		5:8:112:112	892952	1					
ANR	892991	IfStatement	if ( f -> offset != addr )		892952	0					
ANR	892992	Condition	f -> offset != addr	2965:6:86914:86930	892952	0	True				
ANR	892993	EqualityExpression	f -> offset != addr		892952	0		!=			
ANR	892994	PtrMemberAccess	f -> offset		892952	0					
ANR	892995	Identifier	f		892952	0					
ANR	892996	Identifier	offset		892952	1					
ANR	892997	Identifier	addr		892952	1					
ANR	892998	CompoundStatement		7:3:144:186	892952	1					
ANR	892999	IdentifierDeclStatement	int delta = ( int ) ( frame -> addr - f -> offset ) ;	2966:3:86938:86980	892952	0	True				
ANR	893000	IdentifierDecl	delta = ( int ) ( frame -> addr - f -> offset )		892952	0					
ANR	893001	IdentifierDeclType	int		892952	0					
ANR	893002	Identifier	delta		892952	1					
ANR	893003	AssignmentExpression	delta = ( int ) ( frame -> addr - f -> offset )		892952	2		=			
ANR	893004	Identifier	delta		892952	0					
ANR	893005	CastExpression	( int ) ( frame -> addr - f -> offset )		892952	1					
ANR	893006	CastTarget	int		892952	0					
ANR	893007	AdditiveExpression	frame -> addr - f -> offset		892952	1		-			
ANR	893008	PtrMemberAccess	frame -> addr		892952	0					
ANR	893009	Identifier	frame		892952	0					
ANR	893010	Identifier	addr		892952	1					
ANR	893011	PtrMemberAccess	f -> offset		892952	1					
ANR	893012	Identifier	f		892952	0					
ANR	893013	Identifier	offset		892952	1					
ANR	893014	IfStatement	if ( delta > 0 )		892952	1					
ANR	893015	Condition	delta > 0	2967:7:86989:86997	892952	0	True				
ANR	893016	RelationalExpression	delta > 0		892952	0		>			
ANR	893017	Identifier	delta		892952	0					
ANR	893018	PrimaryExpression	0		892952	1					
ANR	893019	CompoundStatement		8:18:206:206	892952	1					
ANR	893020	ExpressionStatement	"* flagdesc = r_str_newf ( ""%s+%d"" , f -> name , delta )"	2968:4:87006:87054	892952	0	True				
ANR	893021	AssignmentExpression	"* flagdesc = r_str_newf ( ""%s+%d"" , f -> name , delta )"		892952	0		=			
ANR	893022	UnaryOperationExpression	* flagdesc		892952	0					
ANR	893023	UnaryOperator	*		892952	0					
ANR	893024	Identifier	flagdesc		892952	1					
ANR	893025	CallExpression	"r_str_newf ( ""%s+%d"" , f -> name , delta )"		892952	1					
ANR	893026	Callee	r_str_newf		892952	0					
ANR	893027	Identifier	r_str_newf		892952	0					
ANR	893028	ArgumentList	"""%s+%d"""		892952	1					
ANR	893029	Argument	"""%s+%d"""		892952	0					
ANR	893030	PrimaryExpression	"""%s+%d"""		892952	0					
ANR	893031	Argument	f -> name		892952	1					
ANR	893032	PtrMemberAccess	f -> name		892952	0					
ANR	893033	Identifier	f		892952	0					
ANR	893034	Identifier	name		892952	1					
ANR	893035	Argument	delta		892952	2					
ANR	893036	Identifier	delta		892952	0					
ANR	893037	ElseStatement	else		892952	0					
ANR	893038	IfStatement	if ( delta < 0 )		892952	0					
ANR	893039	Condition	delta < 0	2969:14:87070:87078	892952	0	True				
ANR	893040	RelationalExpression	delta < 0		892952	0		<			
ANR	893041	Identifier	delta		892952	0					
ANR	893042	PrimaryExpression	0		892952	1					
ANR	893043	CompoundStatement		10:25:287:287	892952	1					
ANR	893044	ExpressionStatement	"* flagdesc = r_str_newf ( ""%s%d"" , f -> name , delta )"	2970:4:87087:87134	892952	0	True				
ANR	893045	AssignmentExpression	"* flagdesc = r_str_newf ( ""%s%d"" , f -> name , delta )"		892952	0		=			
ANR	893046	UnaryOperationExpression	* flagdesc		892952	0					
ANR	893047	UnaryOperator	*		892952	0					
ANR	893048	Identifier	flagdesc		892952	1					
ANR	893049	CallExpression	"r_str_newf ( ""%s%d"" , f -> name , delta )"		892952	1					
ANR	893050	Callee	r_str_newf		892952	0					
ANR	893051	Identifier	r_str_newf		892952	0					
ANR	893052	ArgumentList	"""%s%d"""		892952	1					
ANR	893053	Argument	"""%s%d"""		892952	0					
ANR	893054	PrimaryExpression	"""%s%d"""		892952	0					
ANR	893055	Argument	f -> name		892952	1					
ANR	893056	PtrMemberAccess	f -> name		892952	0					
ANR	893057	Identifier	f		892952	0					
ANR	893058	Identifier	name		892952	1					
ANR	893059	Argument	delta		892952	2					
ANR	893060	Identifier	delta		892952	0					
ANR	893061	ElseStatement	else		892952	0					
ANR	893062	CompoundStatement		12:10:352:352	892952	0					
ANR	893063	ExpressionStatement	"* flagdesc = r_str_newf ( ""%s"" , f -> name )"	2972:4:87152:87190	892952	0	True				
ANR	893064	AssignmentExpression	"* flagdesc = r_str_newf ( ""%s"" , f -> name )"		892952	0		=			
ANR	893065	UnaryOperationExpression	* flagdesc		892952	0					
ANR	893066	UnaryOperator	*		892952	0					
ANR	893067	Identifier	flagdesc		892952	1					
ANR	893068	CallExpression	"r_str_newf ( ""%s"" , f -> name )"		892952	1					
ANR	893069	Callee	r_str_newf		892952	0					
ANR	893070	Identifier	r_str_newf		892952	0					
ANR	893071	ArgumentList	"""%s"""		892952	1					
ANR	893072	Argument	"""%s"""		892952	0					
ANR	893073	PrimaryExpression	"""%s"""		892952	0					
ANR	893074	Argument	f -> name		892952	1					
ANR	893075	PtrMemberAccess	f -> name		892952	0					
ANR	893076	Identifier	f		892952	0					
ANR	893077	Identifier	name		892952	1					
ANR	893078	ElseStatement	else		892952	0					
ANR	893079	CompoundStatement		15:9:412:412	892952	0					
ANR	893080	ExpressionStatement	"* flagdesc = r_str_newf ( ""%s"" , f -> name )"	2975:3:87211:87249	892952	0	True				
ANR	893081	AssignmentExpression	"* flagdesc = r_str_newf ( ""%s"" , f -> name )"		892952	0		=			
ANR	893082	UnaryOperationExpression	* flagdesc		892952	0					
ANR	893083	UnaryOperator	*		892952	0					
ANR	893084	Identifier	flagdesc		892952	1					
ANR	893085	CallExpression	"r_str_newf ( ""%s"" , f -> name )"		892952	1					
ANR	893086	Callee	r_str_newf		892952	0					
ANR	893087	Identifier	r_str_newf		892952	0					
ANR	893088	ArgumentList	"""%s"""		892952	1					
ANR	893089	Argument	"""%s"""		892952	0					
ANR	893090	PrimaryExpression	"""%s"""		892952	0					
ANR	893091	Argument	f -> name		892952	1					
ANR	893092	PtrMemberAccess	f -> name		892952	0					
ANR	893093	Identifier	f		892952	0					
ANR	893094	Identifier	name		892952	1					
ANR	893095	ExpressionStatement	"f = r_flag_get_at ( core -> flags , frame -> addr , true )"	2978:1:87259:87309	892952	4	True				
ANR	893096	AssignmentExpression	"f = r_flag_get_at ( core -> flags , frame -> addr , true )"		892952	0		=			
ANR	893097	Identifier	f		892952	0					
ANR	893098	CallExpression	"r_flag_get_at ( core -> flags , frame -> addr , true )"		892952	1					
ANR	893099	Callee	r_flag_get_at		892952	0					
ANR	893100	Identifier	r_flag_get_at		892952	0					
ANR	893101	ArgumentList	core -> flags		892952	1					
ANR	893102	Argument	core -> flags		892952	0					
ANR	893103	PtrMemberAccess	core -> flags		892952	0					
ANR	893104	Identifier	core		892952	0					
ANR	893105	Identifier	flags		892952	1					
ANR	893106	Argument	frame -> addr		892952	1					
ANR	893107	PtrMemberAccess	frame -> addr		892952	0					
ANR	893108	Identifier	frame		892952	0					
ANR	893109	Identifier	addr		892952	1					
ANR	893110	Argument	true		892952	2					
ANR	893111	Identifier	true		892952	0					
ANR	893112	IfStatement	"if ( f && ! strchr ( f -> name , '.' ) )"		892952	5					
ANR	893113	Condition	"f && ! strchr ( f -> name , '.' )"	2979:5:87316:87342	892952	0	True				
ANR	893114	AndExpression	"f && ! strchr ( f -> name , '.' )"		892952	0		&&			
ANR	893115	Identifier	f		892952	0					
ANR	893116	UnaryOperationExpression	"! strchr ( f -> name , '.' )"		892952	1					
ANR	893117	UnaryOperator	!		892952	0					
ANR	893118	CallExpression	"strchr ( f -> name , '.' )"		892952	1					
ANR	893119	Callee	strchr		892952	0					
ANR	893120	Identifier	strchr		892952	0					
ANR	893121	ArgumentList	f -> name		892952	1					
ANR	893122	Argument	f -> name		892952	0					
ANR	893123	PtrMemberAccess	f -> name		892952	0					
ANR	893124	Identifier	f		892952	0					
ANR	893125	Identifier	name		892952	1					
ANR	893126	Argument	'.'		892952	1					
ANR	893127	PrimaryExpression	'.'		892952	0					
ANR	893128	CompoundStatement		20:34:551:551	892952	1					
ANR	893129	ExpressionStatement	"f = r_flag_get_at ( core -> flags , frame -> addr - 1 , true )"	2980:2:87349:87403	892952	0	True				
ANR	893130	AssignmentExpression	"f = r_flag_get_at ( core -> flags , frame -> addr - 1 , true )"		892952	0		=			
ANR	893131	Identifier	f		892952	0					
ANR	893132	CallExpression	"r_flag_get_at ( core -> flags , frame -> addr - 1 , true )"		892952	1					
ANR	893133	Callee	r_flag_get_at		892952	0					
ANR	893134	Identifier	r_flag_get_at		892952	0					
ANR	893135	ArgumentList	core -> flags		892952	1					
ANR	893136	Argument	core -> flags		892952	0					
ANR	893137	PtrMemberAccess	core -> flags		892952	0					
ANR	893138	Identifier	core		892952	0					
ANR	893139	Identifier	flags		892952	1					
ANR	893140	Argument	frame -> addr - 1		892952	1					
ANR	893141	AdditiveExpression	frame -> addr - 1		892952	0		-			
ANR	893142	PtrMemberAccess	frame -> addr		892952	0					
ANR	893143	Identifier	frame		892952	0					
ANR	893144	Identifier	addr		892952	1					
ANR	893145	PrimaryExpression	1		892952	1					
ANR	893146	Argument	true		892952	2					
ANR	893147	Identifier	true		892952	0					
ANR	893148	IfStatement	if ( f )		892952	6					
ANR	893149	Condition	f	2982:5:87413:87413	892952	0	True				
ANR	893150	Identifier	f		892952	0					
ANR	893151	CompoundStatement		23:8:622:622	892952	1					
ANR	893152	IfStatement	if ( f -> offset != addr )		892952	0					
ANR	893153	Condition	f -> offset != addr	2983:6:87424:87440	892952	0	True				
ANR	893154	EqualityExpression	f -> offset != addr		892952	0		!=			
ANR	893155	PtrMemberAccess	f -> offset		892952	0					
ANR	893156	Identifier	f		892952	0					
ANR	893157	Identifier	offset		892952	1					
ANR	893158	Identifier	addr		892952	1					
ANR	893159	CompoundStatement		25:3:654:700	892952	1					
ANR	893160	IdentifierDeclStatement	int delta = ( int ) ( frame -> addr - 1 - f -> offset ) ;	2984:3:87448:87494	892952	0	True				
ANR	893161	IdentifierDecl	delta = ( int ) ( frame -> addr - 1 - f -> offset )		892952	0					
ANR	893162	IdentifierDeclType	int		892952	0					
ANR	893163	Identifier	delta		892952	1					
ANR	893164	AssignmentExpression	delta = ( int ) ( frame -> addr - 1 - f -> offset )		892952	2		=			
ANR	893165	Identifier	delta		892952	0					
ANR	893166	CastExpression	( int ) ( frame -> addr - 1 - f -> offset )		892952	1					
ANR	893167	CastTarget	int		892952	0					
ANR	893168	AdditiveExpression	frame -> addr - 1 - f -> offset		892952	1		-			
ANR	893169	PtrMemberAccess	frame -> addr		892952	0					
ANR	893170	Identifier	frame		892952	0					
ANR	893171	Identifier	addr		892952	1					
ANR	893172	AdditiveExpression	1 - f -> offset		892952	1		-			
ANR	893173	PrimaryExpression	1		892952	0					
ANR	893174	PtrMemberAccess	f -> offset		892952	1					
ANR	893175	Identifier	f		892952	0					
ANR	893176	Identifier	offset		892952	1					
ANR	893177	IfStatement	if ( delta > 0 )		892952	1					
ANR	893178	Condition	delta > 0	2985:7:87503:87511	892952	0	True				
ANR	893179	RelationalExpression	delta > 0		892952	0		>			
ANR	893180	Identifier	delta		892952	0					
ANR	893181	PrimaryExpression	0		892952	1					
ANR	893182	CompoundStatement		26:18:720:720	892952	1					
ANR	893183	ExpressionStatement	"* flagdesc2 = r_str_newf ( ""%s+%d"" , f -> name , delta + 1 )"	2986:4:87520:87573	892952	0	True				
ANR	893184	AssignmentExpression	"* flagdesc2 = r_str_newf ( ""%s+%d"" , f -> name , delta + 1 )"		892952	0		=			
ANR	893185	UnaryOperationExpression	* flagdesc2		892952	0					
ANR	893186	UnaryOperator	*		892952	0					
ANR	893187	Identifier	flagdesc2		892952	1					
ANR	893188	CallExpression	"r_str_newf ( ""%s+%d"" , f -> name , delta + 1 )"		892952	1					
ANR	893189	Callee	r_str_newf		892952	0					
ANR	893190	Identifier	r_str_newf		892952	0					
ANR	893191	ArgumentList	"""%s+%d"""		892952	1					
ANR	893192	Argument	"""%s+%d"""		892952	0					
ANR	893193	PrimaryExpression	"""%s+%d"""		892952	0					
ANR	893194	Argument	f -> name		892952	1					
ANR	893195	PtrMemberAccess	f -> name		892952	0					
ANR	893196	Identifier	f		892952	0					
ANR	893197	Identifier	name		892952	1					
ANR	893198	Argument	delta + 1		892952	2					
ANR	893199	AdditiveExpression	delta + 1		892952	0		+			
ANR	893200	Identifier	delta		892952	0					
ANR	893201	PrimaryExpression	1		892952	1					
ANR	893202	ElseStatement	else		892952	0					
ANR	893203	IfStatement	if ( delta < 0 )		892952	0					
ANR	893204	Condition	delta < 0	2987:14:87589:87597	892952	0	True				
ANR	893205	RelationalExpression	delta < 0		892952	0		<			
ANR	893206	Identifier	delta		892952	0					
ANR	893207	PrimaryExpression	0		892952	1					
ANR	893208	CompoundStatement		28:25:806:806	892952	1					
ANR	893209	ExpressionStatement	"* flagdesc2 = r_str_newf ( ""%s%d"" , f -> name , delta + 1 )"	2988:4:87606:87658	892952	0	True				
ANR	893210	AssignmentExpression	"* flagdesc2 = r_str_newf ( ""%s%d"" , f -> name , delta + 1 )"		892952	0		=			
ANR	893211	UnaryOperationExpression	* flagdesc2		892952	0					
ANR	893212	UnaryOperator	*		892952	0					
ANR	893213	Identifier	flagdesc2		892952	1					
ANR	893214	CallExpression	"r_str_newf ( ""%s%d"" , f -> name , delta + 1 )"		892952	1					
ANR	893215	Callee	r_str_newf		892952	0					
ANR	893216	Identifier	r_str_newf		892952	0					
ANR	893217	ArgumentList	"""%s%d"""		892952	1					
ANR	893218	Argument	"""%s%d"""		892952	0					
ANR	893219	PrimaryExpression	"""%s%d"""		892952	0					
ANR	893220	Argument	f -> name		892952	1					
ANR	893221	PtrMemberAccess	f -> name		892952	0					
ANR	893222	Identifier	f		892952	0					
ANR	893223	Identifier	name		892952	1					
ANR	893224	Argument	delta + 1		892952	2					
ANR	893225	AdditiveExpression	delta + 1		892952	0		+			
ANR	893226	Identifier	delta		892952	0					
ANR	893227	PrimaryExpression	1		892952	1					
ANR	893228	ElseStatement	else		892952	0					
ANR	893229	CompoundStatement		30:10:876:876	892952	0					
ANR	893230	ExpressionStatement	"* flagdesc2 = r_str_newf ( ""%s+1"" , f -> name )"	2990:4:87676:87717	892952	0	True				
ANR	893231	AssignmentExpression	"* flagdesc2 = r_str_newf ( ""%s+1"" , f -> name )"		892952	0		=			
ANR	893232	UnaryOperationExpression	* flagdesc2		892952	0					
ANR	893233	UnaryOperator	*		892952	0					
ANR	893234	Identifier	flagdesc2		892952	1					
ANR	893235	CallExpression	"r_str_newf ( ""%s+1"" , f -> name )"		892952	1					
ANR	893236	Callee	r_str_newf		892952	0					
ANR	893237	Identifier	r_str_newf		892952	0					
ANR	893238	ArgumentList	"""%s+1"""		892952	1					
ANR	893239	Argument	"""%s+1"""		892952	0					
ANR	893240	PrimaryExpression	"""%s+1"""		892952	0					
ANR	893241	Argument	f -> name		892952	1					
ANR	893242	PtrMemberAccess	f -> name		892952	0					
ANR	893243	Identifier	f		892952	0					
ANR	893244	Identifier	name		892952	1					
ANR	893245	ElseStatement	else		892952	0					
ANR	893246	CompoundStatement		33:9:939:939	892952	0					
ANR	893247	ExpressionStatement	"* flagdesc2 = r_str_newf ( ""%s"" , f -> name )"	2993:3:87738:87777	892952	0	True				
ANR	893248	AssignmentExpression	"* flagdesc2 = r_str_newf ( ""%s"" , f -> name )"		892952	0		=			
ANR	893249	UnaryOperationExpression	* flagdesc2		892952	0					
ANR	893250	UnaryOperator	*		892952	0					
ANR	893251	Identifier	flagdesc2		892952	1					
ANR	893252	CallExpression	"r_str_newf ( ""%s"" , f -> name )"		892952	1					
ANR	893253	Callee	r_str_newf		892952	0					
ANR	893254	Identifier	r_str_newf		892952	0					
ANR	893255	ArgumentList	"""%s"""		892952	1					
ANR	893256	Argument	"""%s"""		892952	0					
ANR	893257	PrimaryExpression	"""%s"""		892952	0					
ANR	893258	Argument	f -> name		892952	1					
ANR	893259	PtrMemberAccess	f -> name		892952	0					
ANR	893260	Identifier	f		892952	0					
ANR	893261	Identifier	name		892952	1					
ANR	893262	IfStatement	"if ( ! r_str_cmp ( * flagdesc , * flagdesc2 , - 1 ) )"		892952	7					
ANR	893263	Condition	"! r_str_cmp ( * flagdesc , * flagdesc2 , - 1 )"	2996:5:87791:87828	892952	0	True				
ANR	893264	UnaryOperationExpression	"! r_str_cmp ( * flagdesc , * flagdesc2 , - 1 )"		892952	0					
ANR	893265	UnaryOperator	!		892952	0					
ANR	893266	CallExpression	"r_str_cmp ( * flagdesc , * flagdesc2 , - 1 )"		892952	1					
ANR	893267	Callee	r_str_cmp		892952	0					
ANR	893268	Identifier	r_str_cmp		892952	0					
ANR	893269	ArgumentList	* flagdesc		892952	1					
ANR	893270	Argument	* flagdesc		892952	0					
ANR	893271	UnaryOperationExpression	* flagdesc		892952	0					
ANR	893272	UnaryOperator	*		892952	0					
ANR	893273	Identifier	flagdesc		892952	1					
ANR	893274	Argument	* flagdesc2		892952	1					
ANR	893275	UnaryOperationExpression	* flagdesc2		892952	0					
ANR	893276	UnaryOperator	*		892952	0					
ANR	893277	Identifier	flagdesc2		892952	1					
ANR	893278	Argument	- 1		892952	2					
ANR	893279	UnaryOperationExpression	- 1		892952	0					
ANR	893280	UnaryOperator	-		892952	0					
ANR	893281	PrimaryExpression	1		892952	1					
ANR	893282	CompoundStatement		37:45:1037:1037	892952	1					
ANR	893283	ExpressionStatement	free ( * flagdesc2 )	2997:2:87835:87852	892952	0	True				
ANR	893284	CallExpression	free ( * flagdesc2 )		892952	0					
ANR	893285	Callee	free		892952	0					
ANR	893286	Identifier	free		892952	0					
ANR	893287	ArgumentList	* flagdesc2		892952	1					
ANR	893288	Argument	* flagdesc2		892952	0					
ANR	893289	UnaryOperationExpression	* flagdesc2		892952	0					
ANR	893290	UnaryOperator	*		892952	0					
ANR	893291	Identifier	flagdesc2		892952	1					
ANR	893292	ExpressionStatement	* flagdesc2 = NULL	2998:2:87856:87873	892952	1	True				
ANR	893293	AssignmentExpression	* flagdesc2 = NULL		892952	0		=			
ANR	893294	UnaryOperationExpression	* flagdesc2		892952	0					
ANR	893295	UnaryOperator	*		892952	0					
ANR	893296	Identifier	flagdesc2		892952	1					
ANR	893297	Identifier	NULL		892952	1					
ANR	893298	IfStatement	if ( hex_format )		892952	8					
ANR	893299	Condition	hex_format	3000:5:87883:87892	892952	0	True				
ANR	893300	Identifier	hex_format		892952	0					
ANR	893301	CompoundStatement		41:17:1101:1101	892952	1					
ANR	893302	IfStatement	if ( core -> dbg -> bits & R_SYS_BITS_64 )		892952	0					
ANR	893303	Condition	core -> dbg -> bits & R_SYS_BITS_64	3001:6:87903:87933	892952	0	True				
ANR	893304	BitAndExpression	core -> dbg -> bits & R_SYS_BITS_64		892952	0		&			
ANR	893305	PtrMemberAccess	core -> dbg -> bits		892952	0					
ANR	893306	PtrMemberAccess	core -> dbg		892952	0					
ANR	893307	Identifier	core		892952	0					
ANR	893308	Identifier	dbg		892952	1					
ANR	893309	Identifier	bits		892952	1					
ANR	893310	Identifier	R_SYS_BITS_64		892952	1					
ANR	893311	CompoundStatement		42:39:1142:1142	892952	1					
ANR	893312	Statement	*	3002:3:87941:87941	892952	0	True				
ANR	893313	Statement	pcstr	3002:4:87942:87946	892952	1	True				
ANR	893314	Statement	=	3002:10:87948:87948	892952	2	True				
ANR	893315	Statement	r_str_newf	3002:12:87950:87959	892952	3	True				
ANR	893316	Statement	(	3002:23:87961:87961	892952	4	True				
ANR	893317	Statement	"""0x%-16"""	3002:24:87962:87969	892952	5	True				
ANR	893318	Statement	PFMT64x	3002:33:87971:87977	892952	6	True				
ANR	893319	Statement	","	3002:40:87978:87978	892952	7	True				
ANR	893320	Statement	frame	3002:42:87980:87984	892952	8	True				
ANR	893321	Statement	->	3002:47:87985:87986	892952	9	True				
ANR	893322	Statement	addr	3002:49:87987:87990	892952	10	True				
ANR	893323	Statement	)	3002:53:87991:87991	892952	11	True				
ANR	893324	ExpressionStatement		3002:54:87992:87992	892952	12	True				
ANR	893325	Statement	*	3003:3:87997:87997	892952	13	True				
ANR	893326	Statement	spstr	3003:4:87998:88002	892952	14	True				
ANR	893327	Statement	=	3003:10:88004:88004	892952	15	True				
ANR	893328	Statement	r_str_newf	3003:12:88006:88015	892952	16	True				
ANR	893329	Statement	(	3003:23:88017:88017	892952	17	True				
ANR	893330	Statement	"""0x%-16"""	3003:24:88018:88025	892952	18	True				
ANR	893331	Statement	PFMT64x	3003:33:88027:88033	892952	19	True				
ANR	893332	Statement	","	3003:40:88034:88034	892952	20	True				
ANR	893333	Statement	frame	3003:42:88036:88040	892952	21	True				
ANR	893334	Statement	->	3003:47:88041:88042	892952	22	True				
ANR	893335	Statement	sp	3003:49:88043:88044	892952	23	True				
ANR	893336	Statement	)	3003:51:88045:88045	892952	24	True				
ANR	893337	ExpressionStatement		3003:52:88046:88046	892952	25	True				
ANR	893338	ElseStatement	else		892952	0					
ANR	893339	IfStatement	if ( core -> dbg -> bits & R_SYS_BITS_32 )		892952	0					
ANR	893340	Condition	core -> dbg -> bits & R_SYS_BITS_32	3004:13:88061:88091	892952	0	True				
ANR	893341	BitAndExpression	core -> dbg -> bits & R_SYS_BITS_32		892952	0		&			
ANR	893342	PtrMemberAccess	core -> dbg -> bits		892952	0					
ANR	893343	PtrMemberAccess	core -> dbg		892952	0					
ANR	893344	Identifier	core		892952	0					
ANR	893345	Identifier	dbg		892952	1					
ANR	893346	Identifier	bits		892952	1					
ANR	893347	Identifier	R_SYS_BITS_32		892952	1					
ANR	893348	CompoundStatement		45:46:1300:1300	892952	1					
ANR	893349	Statement	*	3005:3:88099:88099	892952	0	True				
ANR	893350	Statement	pcstr	3005:4:88100:88104	892952	1	True				
ANR	893351	Statement	=	3005:10:88106:88106	892952	2	True				
ANR	893352	Statement	r_str_newf	3005:12:88108:88117	892952	3	True				
ANR	893353	Statement	(	3005:23:88119:88119	892952	4	True				
ANR	893354	Statement	"""0x%-8"""	3005:24:88120:88126	892952	5	True				
ANR	893355	Statement	PFMT64x	3005:32:88128:88134	892952	6	True				
ANR	893356	Statement	","	3005:39:88135:88135	892952	7	True				
ANR	893357	Statement	frame	3005:41:88137:88141	892952	8	True				
ANR	893358	Statement	->	3005:46:88142:88143	892952	9	True				
ANR	893359	Statement	addr	3005:48:88144:88147	892952	10	True				
ANR	893360	Statement	)	3005:52:88148:88148	892952	11	True				
ANR	893361	ExpressionStatement		3005:53:88149:88149	892952	12	True				
ANR	893362	Statement	*	3006:3:88154:88154	892952	13	True				
ANR	893363	Statement	spstr	3006:4:88155:88159	892952	14	True				
ANR	893364	Statement	=	3006:10:88161:88161	892952	15	True				
ANR	893365	Statement	r_str_newf	3006:12:88163:88172	892952	16	True				
ANR	893366	Statement	(	3006:23:88174:88174	892952	17	True				
ANR	893367	Statement	"""0x%-8"""	3006:24:88175:88181	892952	18	True				
ANR	893368	Statement	PFMT64x	3006:32:88183:88189	892952	19	True				
ANR	893369	Statement	","	3006:39:88190:88190	892952	20	True				
ANR	893370	Statement	frame	3006:41:88192:88196	892952	21	True				
ANR	893371	Statement	->	3006:46:88197:88198	892952	22	True				
ANR	893372	Statement	sp	3006:48:88199:88200	892952	23	True				
ANR	893373	Statement	)	3006:50:88201:88201	892952	24	True				
ANR	893374	ExpressionStatement		3006:51:88202:88202	892952	25	True				
ANR	893375	ElseStatement	else		892952	0					
ANR	893376	CompoundStatement		48:9:1419:1419	892952	0					
ANR	893377	Statement	*	3008:3:88218:88218	892952	0	True				
ANR	893378	Statement	pcstr	3008:4:88219:88223	892952	1	True				
ANR	893379	Statement	=	3008:10:88225:88225	892952	2	True				
ANR	893380	Statement	r_str_newf	3008:12:88227:88236	892952	3	True				
ANR	893381	Statement	(	3008:23:88238:88238	892952	4	True				
ANR	893382	Statement	"""0x%"""	3008:24:88239:88243	892952	5	True				
ANR	893383	Statement	PFMT64x	3008:30:88245:88251	892952	6	True				
ANR	893384	Statement	","	3008:37:88252:88252	892952	7	True				
ANR	893385	Statement	frame	3008:39:88254:88258	892952	8	True				
ANR	893386	Statement	->	3008:44:88259:88260	892952	9	True				
ANR	893387	Statement	addr	3008:46:88261:88264	892952	10	True				
ANR	893388	Statement	)	3008:50:88265:88265	892952	11	True				
ANR	893389	ExpressionStatement		3008:51:88266:88266	892952	12	True				
ANR	893390	Statement	*	3009:3:88271:88271	892952	13	True				
ANR	893391	Statement	spstr	3009:4:88272:88276	892952	14	True				
ANR	893392	Statement	=	3009:10:88278:88278	892952	15	True				
ANR	893393	Statement	r_str_newf	3009:12:88280:88289	892952	16	True				
ANR	893394	Statement	(	3009:23:88291:88291	892952	17	True				
ANR	893395	Statement	"""0x%"""	3009:24:88292:88296	892952	18	True				
ANR	893396	Statement	PFMT64x	3009:30:88298:88304	892952	19	True				
ANR	893397	Statement	","	3009:37:88305:88305	892952	20	True				
ANR	893398	Statement	frame	3009:39:88307:88311	892952	21	True				
ANR	893399	Statement	->	3009:44:88312:88313	892952	22	True				
ANR	893400	Statement	sp	3009:46:88314:88315	892952	23	True				
ANR	893401	Statement	)	3009:48:88316:88316	892952	24	True				
ANR	893402	ExpressionStatement		3009:49:88317:88317	892952	25	True				
ANR	893403	ElseStatement	else		892952	0					
ANR	893404	CompoundStatement		52:8:1537:1537	892952	0					
ANR	893405	IfStatement	if ( core -> dbg -> bits & R_SYS_BITS_64 )		892952	0					
ANR	893406	Condition	core -> dbg -> bits & R_SYS_BITS_64	3012:6:88339:88369	892952	0	True				
ANR	893407	BitAndExpression	core -> dbg -> bits & R_SYS_BITS_64		892952	0		&			
ANR	893408	PtrMemberAccess	core -> dbg -> bits		892952	0					
ANR	893409	PtrMemberAccess	core -> dbg		892952	0					
ANR	893410	Identifier	core		892952	0					
ANR	893411	Identifier	dbg		892952	1					
ANR	893412	Identifier	bits		892952	1					
ANR	893413	Identifier	R_SYS_BITS_64		892952	1					
ANR	893414	CompoundStatement		53:39:1578:1578	892952	1					
ANR	893415	Statement	*	3013:3:88377:88377	892952	0	True				
ANR	893416	Statement	pcstr	3013:4:88378:88382	892952	1	True				
ANR	893417	Statement	=	3013:10:88384:88384	892952	2	True				
ANR	893418	Statement	r_str_newf	3013:12:88386:88395	892952	3	True				
ANR	893419	Statement	(	3013:23:88397:88397	892952	4	True				
ANR	893420	Statement	"""%"""	3013:24:88398:88400	892952	5	True				
ANR	893421	Statement	PFMT64d	3013:28:88402:88408	892952	6	True				
ANR	893422	Statement	","	3013:35:88409:88409	892952	7	True				
ANR	893423	Statement	frame	3013:37:88411:88415	892952	8	True				
ANR	893424	Statement	->	3013:42:88416:88417	892952	9	True				
ANR	893425	Statement	addr	3013:44:88418:88421	892952	10	True				
ANR	893426	Statement	)	3013:48:88422:88422	892952	11	True				
ANR	893427	ExpressionStatement		3013:49:88423:88423	892952	12	True				
ANR	893428	Statement	*	3014:3:88428:88428	892952	13	True				
ANR	893429	Statement	spstr	3014:4:88429:88433	892952	14	True				
ANR	893430	Statement	=	3014:10:88435:88435	892952	15	True				
ANR	893431	Statement	r_str_newf	3014:12:88437:88446	892952	16	True				
ANR	893432	Statement	(	3014:23:88448:88448	892952	17	True				
ANR	893433	Statement	"""%"""	3014:24:88449:88451	892952	18	True				
ANR	893434	Statement	PFMT64d	3014:28:88453:88459	892952	19	True				
ANR	893435	Statement	","	3014:35:88460:88460	892952	20	True				
ANR	893436	Statement	frame	3014:37:88462:88466	892952	21	True				
ANR	893437	Statement	->	3014:42:88467:88468	892952	22	True				
ANR	893438	Statement	sp	3014:44:88469:88470	892952	23	True				
ANR	893439	Statement	)	3014:46:88471:88471	892952	24	True				
ANR	893440	ExpressionStatement		3014:47:88472:88472	892952	25	True				
ANR	893441	ElseStatement	else		892952	0					
ANR	893442	IfStatement	if ( core -> dbg -> bits & R_SYS_BITS_32 )		892952	0					
ANR	893443	Condition	core -> dbg -> bits & R_SYS_BITS_32	3015:13:88487:88517	892952	0	True				
ANR	893444	BitAndExpression	core -> dbg -> bits & R_SYS_BITS_32		892952	0		&			
ANR	893445	PtrMemberAccess	core -> dbg -> bits		892952	0					
ANR	893446	PtrMemberAccess	core -> dbg		892952	0					
ANR	893447	Identifier	core		892952	0					
ANR	893448	Identifier	dbg		892952	1					
ANR	893449	Identifier	bits		892952	1					
ANR	893450	Identifier	R_SYS_BITS_32		892952	1					
ANR	893451	CompoundStatement		56:46:1726:1726	892952	1					
ANR	893452	Statement	*	3016:3:88525:88525	892952	0	True				
ANR	893453	Statement	pcstr	3016:4:88526:88530	892952	1	True				
ANR	893454	Statement	=	3016:10:88532:88532	892952	2	True				
ANR	893455	Statement	r_str_newf	3016:12:88534:88543	892952	3	True				
ANR	893456	Statement	(	3016:23:88545:88545	892952	4	True				
ANR	893457	Statement	"""%"""	3016:24:88546:88548	892952	5	True				
ANR	893458	Statement	PFMT64d	3016:28:88550:88556	892952	6	True				
ANR	893459	Statement	","	3016:35:88557:88557	892952	7	True				
ANR	893460	Statement	frame	3016:37:88559:88563	892952	8	True				
ANR	893461	Statement	->	3016:42:88564:88565	892952	9	True				
ANR	893462	Statement	addr	3016:44:88566:88569	892952	10	True				
ANR	893463	Statement	)	3016:48:88570:88570	892952	11	True				
ANR	893464	ExpressionStatement		3016:49:88571:88571	892952	12	True				
ANR	893465	Statement	*	3017:3:88576:88576	892952	13	True				
ANR	893466	Statement	spstr	3017:4:88577:88581	892952	14	True				
ANR	893467	Statement	=	3017:10:88583:88583	892952	15	True				
ANR	893468	Statement	r_str_newf	3017:12:88585:88594	892952	16	True				
ANR	893469	Statement	(	3017:23:88596:88596	892952	17	True				
ANR	893470	Statement	"""%"""	3017:24:88597:88599	892952	18	True				
ANR	893471	Statement	PFMT64d	3017:28:88601:88607	892952	19	True				
ANR	893472	Statement	","	3017:35:88608:88608	892952	20	True				
ANR	893473	Statement	frame	3017:37:88610:88614	892952	21	True				
ANR	893474	Statement	->	3017:42:88615:88616	892952	22	True				
ANR	893475	Statement	sp	3017:44:88617:88618	892952	23	True				
ANR	893476	Statement	)	3017:46:88619:88619	892952	24	True				
ANR	893477	ExpressionStatement		3017:47:88620:88620	892952	25	True				
ANR	893478	ElseStatement	else		892952	0					
ANR	893479	CompoundStatement		59:9:1837:1837	892952	0					
ANR	893480	Statement	*	3019:3:88636:88636	892952	0	True				
ANR	893481	Statement	pcstr	3019:4:88637:88641	892952	1	True				
ANR	893482	Statement	=	3019:10:88643:88643	892952	2	True				
ANR	893483	Statement	r_str_newf	3019:12:88645:88654	892952	3	True				
ANR	893484	Statement	(	3019:23:88656:88656	892952	4	True				
ANR	893485	Statement	"""%"""	3019:24:88657:88659	892952	5	True				
ANR	893486	Statement	PFMT64d	3019:28:88661:88667	892952	6	True				
ANR	893487	Statement	","	3019:35:88668:88668	892952	7	True				
ANR	893488	Statement	frame	3019:37:88670:88674	892952	8	True				
ANR	893489	Statement	->	3019:42:88675:88676	892952	9	True				
ANR	893490	Statement	addr	3019:44:88677:88680	892952	10	True				
ANR	893491	Statement	)	3019:48:88681:88681	892952	11	True				
ANR	893492	ExpressionStatement		3019:49:88682:88682	892952	12	True				
ANR	893493	Statement	*	3020:3:88687:88687	892952	13	True				
ANR	893494	Statement	spstr	3020:4:88688:88692	892952	14	True				
ANR	893495	Statement	=	3020:10:88694:88694	892952	15	True				
ANR	893496	Statement	r_str_newf	3020:12:88696:88705	892952	16	True				
ANR	893497	Statement	(	3020:23:88707:88707	892952	17	True				
ANR	893498	Statement	"""%"""	3020:24:88708:88710	892952	18	True				
ANR	893499	Statement	PFMT64d	3020:28:88712:88718	892952	19	True				
ANR	893500	Statement	","	3020:35:88719:88719	892952	20	True				
ANR	893501	Statement	frame	3020:37:88721:88725	892952	21	True				
ANR	893502	Statement	->	3020:42:88726:88727	892952	22	True				
ANR	893503	Statement	sp	3020:44:88728:88729	892952	23	True				
ANR	893504	Statement	)	3020:46:88730:88730	892952	24	True				
ANR	893505	ExpressionStatement		3020:47:88731:88731	892952	25	True				
ANR	893506	ReturnType	static void		892952	1					
ANR	893507	Identifier	get_backtrace_info		892952	2					
ANR	893508	ParameterList	"RCore * core , RDebugFrame * frame , ut64 addr , char * * flagdesc , char * * flagdesc2 , char * * pcstr , char * * spstr , bool hex_format"		892952	3					
ANR	893509	Parameter	RCore * core	2960:31:86669:86679	892952	0	True				
ANR	893510	ParameterType	RCore *		892952	0					
ANR	893511	Identifier	core		892952	1					
ANR	893512	Parameter	RDebugFrame * frame	2960:44:86682:86699	892952	1	True				
ANR	893513	ParameterType	RDebugFrame *		892952	0					
ANR	893514	Identifier	frame		892952	1					
ANR	893515	Parameter	ut64 addr	2960:64:86702:86710	892952	2	True				
ANR	893516	ParameterType	ut64		892952	0					
ANR	893517	Identifier	addr		892952	1					
ANR	893518	Parameter	char * * flagdesc	2960:75:86713:86727	892952	3	True				
ANR	893519	ParameterType	char * *		892952	0					
ANR	893520	Identifier	flagdesc		892952	1					
ANR	893521	Parameter	char * * flagdesc2	2960:92:86730:86745	892952	4	True				
ANR	893522	ParameterType	char * *		892952	0					
ANR	893523	Identifier	flagdesc2		892952	1					
ANR	893524	Parameter	char * * pcstr	2960:110:86748:86759	892952	5	True				
ANR	893525	ParameterType	char * *		892952	0					
ANR	893526	Identifier	pcstr		892952	1					
ANR	893527	Parameter	char * * spstr	2960:124:86762:86773	892952	6	True				
ANR	893528	ParameterType	char * *		892952	0					
ANR	893529	Identifier	spstr		892952	1					
ANR	893530	Parameter	bool hex_format	2960:138:86776:86790	892952	7	True				
ANR	893531	ParameterType	bool		892952	0					
ANR	893532	Identifier	hex_format		892952	1					
ANR	893533	CFGEntryNode	ENTRY		892952		True				
ANR	893534	CFGExitNode	EXIT		892952		True				
ANR	893535	Symbol	flagdesc		892952						
ANR	893536	Symbol	* frame		892952						
ANR	893537	Symbol	f -> name		892952						
ANR	893538	Symbol	pcstr		892952						
ANR	893539	Symbol	* core		892952						
ANR	893540	Symbol	delta		892952						
ANR	893541	Symbol	strchr		892952						
ANR	893542	Symbol	r_str_newf		892952						
ANR	893543	Symbol	core -> dbg -> bits		892952						
ANR	893544	Symbol	frame -> addr		892952						
ANR	893545	Symbol	addr		892952						
ANR	893546	Symbol	* * core		892952						
ANR	893547	Symbol	R_SYS_BITS_64		892952						
ANR	893548	Symbol	* flagdesc		892952						
ANR	893549	Symbol	NULL		892952						
ANR	893550	Symbol	flagdesc2		892952						
ANR	893551	Symbol	f		892952						
ANR	893552	Symbol	hex_format		892952						
ANR	893553	Symbol	core -> flags		892952						
ANR	893554	Symbol	* f		892952						
ANR	893555	Symbol	r_str_cmp		892952						
ANR	893556	Symbol	core		892952						
ANR	893557	Symbol	f -> offset		892952						
ANR	893558	Symbol	true		892952						
ANR	893559	Symbol	* flagdesc2		892952						
ANR	893560	Symbol	spstr		892952						
ANR	893561	Symbol	r_flag_get_at		892952						
ANR	893562	Symbol	* core -> dbg		892952						
ANR	893563	Symbol	frame		892952						
ANR	893564	Symbol	core -> dbg		892952						
ANR	893565	Symbol	R_SYS_BITS_32		892952						
ANR	893566	Function	static_debug_stop	3025:0:88743:88833							
ANR	893567	FunctionDef	static_debug_stop (void * u)		893566	0					
ANR	893568	CompoundStatement		3025:39:88782:88833	893566	0					
ANR	893569	IdentifierDeclStatement	RDebug * dbg = ( RDebug * ) u ;	3026:1:88785:88810	893566	0	True				
ANR	893570	IdentifierDecl	* dbg = ( RDebug * ) u		893566	0					
ANR	893571	IdentifierDeclType	RDebug *		893566	0					
ANR	893572	Identifier	dbg		893566	1					
ANR	893573	AssignmentExpression	* dbg = ( RDebug * ) u		893566	2		=			
ANR	893574	Identifier	dbg		893566	0					
ANR	893575	CastExpression	( RDebug * ) u		893566	1					
ANR	893576	CastTarget	RDebug *		893566	0					
ANR	893577	Identifier	u		893566	1					
ANR	893578	ExpressionStatement	r_debug_stop ( dbg )	3027:1:88813:88831	893566	1	True				
ANR	893579	CallExpression	r_debug_stop ( dbg )		893566	0					
ANR	893580	Callee	r_debug_stop		893566	0					
ANR	893581	Identifier	r_debug_stop		893566	0					
ANR	893582	ArgumentList	dbg		893566	1					
ANR	893583	Argument	dbg		893566	0					
ANR	893584	Identifier	dbg		893566	0					
ANR	893585	ReturnType	static void		893566	1					
ANR	893586	Identifier	static_debug_stop		893566	2					
ANR	893587	ParameterList	void * u		893566	3					
ANR	893588	Parameter	void * u	3025:30:88773:88779	893566	0	True				
ANR	893589	ParameterType	void *		893566	0					
ANR	893590	Identifier	u		893566	1					
ANR	893591	CFGEntryNode	ENTRY		893566		True				
ANR	893592	CFGExitNode	EXIT		893566		True				
ANR	893593	Symbol	u		893566						
ANR	893594	Symbol	dbg		893566						
ANR	893595	Function	core_cmd_dbi	3030:0:88836:91579							
ANR	893596	FunctionDef	"core_cmd_dbi (RCore * core , const char * input , ut64 addr)"		893595	0					
ANR	893597	CompoundStatement		3030:69:88905:91579	893595	0					
ANR	893598	IdentifierDeclStatement	int i ;	3031:1:88908:88913	893595	0	True				
ANR	893599	IdentifierDecl	i		893595	0					
ANR	893600	IdentifierDeclType	int		893595	0					
ANR	893601	Identifier	i		893595	1					
ANR	893602	IdentifierDeclStatement	char * p ;	3032:1:88916:88923	893595	1	True				
ANR	893603	IdentifierDecl	* p		893595	0					
ANR	893604	IdentifierDeclType	char *		893595	0					
ANR	893605	Identifier	p		893595	1					
ANR	893606	IdentifierDeclStatement	RBreakpointItem * bpi ;	3033:1:88926:88946	893595	2	True				
ANR	893607	IdentifierDecl	* bpi		893595	0					
ANR	893608	IdentifierDeclType	RBreakpointItem *		893595	0					
ANR	893609	Identifier	bpi		893595	1					
ANR	893610	SwitchStatement	switch ( input [ 2 ] )		893595	3					
ANR	893611	Condition	input [ 2 ]	3034:9:88957:88964	893595	0	True				
ANR	893612	ArrayIndexing	input [ 2 ]		893595	0					
ANR	893613	Identifier	input		893595	0					
ANR	893614	PrimaryExpression	2		893595	1					
ANR	893615	CompoundStatement		5:19:61:61	893595	1					
ANR	893616	Label	case ' ' :	3035:1:88970:88978	893595	0	True				
ANR	893617	CompoundStatement		8:3:91:140	893595	1					
ANR	893618	IdentifierDeclStatement	"int idx = r_bp_get_index_at ( core -> dbg -> bp , addr ) ;"	3037:3:88997:89046	893595	0	True				
ANR	893619	IdentifierDecl	"idx = r_bp_get_index_at ( core -> dbg -> bp , addr )"		893595	0					
ANR	893620	IdentifierDeclType	int		893595	0					
ANR	893621	Identifier	idx		893595	1					
ANR	893622	AssignmentExpression	"idx = r_bp_get_index_at ( core -> dbg -> bp , addr )"		893595	2		=			
ANR	893623	Identifier	idx		893595	0					
ANR	893624	CallExpression	"r_bp_get_index_at ( core -> dbg -> bp , addr )"		893595	1					
ANR	893625	Callee	r_bp_get_index_at		893595	0					
ANR	893626	Identifier	r_bp_get_index_at		893595	0					
ANR	893627	ArgumentList	core -> dbg -> bp		893595	1					
ANR	893628	Argument	core -> dbg -> bp		893595	0					
ANR	893629	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	893630	PtrMemberAccess	core -> dbg		893595	0					
ANR	893631	Identifier	core		893595	0					
ANR	893632	Identifier	dbg		893595	1					
ANR	893633	Identifier	bp		893595	1					
ANR	893634	Argument	addr		893595	1					
ANR	893635	Identifier	addr		893595	0					
ANR	893636	IfStatement	if ( idx != - 1 )		893595	1					
ANR	893637	Condition	idx != - 1	3038:7:89055:89063	893595	0	True				
ANR	893638	EqualityExpression	idx != - 1		893595	0		!=			
ANR	893639	Identifier	idx		893595	0					
ANR	893640	UnaryOperationExpression	- 1		893595	1					
ANR	893641	UnaryOperator	-		893595	0					
ANR	893642	PrimaryExpression	1		893595	1					
ANR	893643	CompoundStatement		9:18:160:160	893595	1					
ANR	893644	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , idx )"	3039:4:89072:89099	893595	0	True				
ANR	893645	CallExpression	"r_cons_printf ( ""%d\\n"" , idx )"		893595	0					
ANR	893646	Callee	r_cons_printf		893595	0					
ANR	893647	Identifier	r_cons_printf		893595	0					
ANR	893648	ArgumentList	"""%d\\n"""		893595	1					
ANR	893649	Argument	"""%d\\n"""		893595	0					
ANR	893650	PrimaryExpression	"""%d\\n"""		893595	0					
ANR	893651	Argument	idx		893595	1					
ANR	893652	Identifier	idx		893595	0					
ANR	893653	BreakStatement	break ;	3042:2:89112:89117	893595	2	True				
ANR	893654	Label	case '.' :	3043:1:89120:89128	893595	3	True				
ANR	893655	CompoundStatement		16:3:241:298	893595	4					
ANR	893656	IdentifierDeclStatement	"int idx = r_bp_get_index_at ( core -> dbg -> bp , core -> offset ) ;"	3045:3:89147:89204	893595	0	True				
ANR	893657	IdentifierDecl	"idx = r_bp_get_index_at ( core -> dbg -> bp , core -> offset )"		893595	0					
ANR	893658	IdentifierDeclType	int		893595	0					
ANR	893659	Identifier	idx		893595	1					
ANR	893660	AssignmentExpression	"idx = r_bp_get_index_at ( core -> dbg -> bp , core -> offset )"		893595	2		=			
ANR	893661	Identifier	idx		893595	0					
ANR	893662	CallExpression	"r_bp_get_index_at ( core -> dbg -> bp , core -> offset )"		893595	1					
ANR	893663	Callee	r_bp_get_index_at		893595	0					
ANR	893664	Identifier	r_bp_get_index_at		893595	0					
ANR	893665	ArgumentList	core -> dbg -> bp		893595	1					
ANR	893666	Argument	core -> dbg -> bp		893595	0					
ANR	893667	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	893668	PtrMemberAccess	core -> dbg		893595	0					
ANR	893669	Identifier	core		893595	0					
ANR	893670	Identifier	dbg		893595	1					
ANR	893671	Identifier	bp		893595	1					
ANR	893672	Argument	core -> offset		893595	1					
ANR	893673	PtrMemberAccess	core -> offset		893595	0					
ANR	893674	Identifier	core		893595	0					
ANR	893675	Identifier	offset		893595	1					
ANR	893676	IfStatement	if ( idx != - 1 )		893595	1					
ANR	893677	Condition	idx != - 1	3046:7:89213:89221	893595	0	True				
ANR	893678	EqualityExpression	idx != - 1		893595	0		!=			
ANR	893679	Identifier	idx		893595	0					
ANR	893680	UnaryOperationExpression	- 1		893595	1					
ANR	893681	UnaryOperator	-		893595	0					
ANR	893682	PrimaryExpression	1		893595	1					
ANR	893683	CompoundStatement		17:18:318:318	893595	1					
ANR	893684	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , idx )"	3047:4:89230:89257	893595	0	True				
ANR	893685	CallExpression	"r_cons_printf ( ""%d\\n"" , idx )"		893595	0					
ANR	893686	Callee	r_cons_printf		893595	0					
ANR	893687	Identifier	r_cons_printf		893595	0					
ANR	893688	ArgumentList	"""%d\\n"""		893595	1					
ANR	893689	Argument	"""%d\\n"""		893595	0					
ANR	893690	PrimaryExpression	"""%d\\n"""		893595	0					
ANR	893691	Argument	idx		893595	1					
ANR	893692	Identifier	idx		893595	0					
ANR	893693	BreakStatement	break ;	3050:2:89270:89275	893595	5	True				
ANR	893694	Label	case 0 :	3051:1:89278:89284	893595	6	True				
ANR	893695	ForStatement	for ( i = 0 ; i < core -> dbg -> bp -> bps_idx_count ; i ++ )		893595	7					
ANR	893696	ForInit	i = 0 ;	3052:7:89302:89307	893595	0	True				
ANR	893697	AssignmentExpression	i = 0		893595	0		=			
ANR	893698	Identifier	i		893595	0					
ANR	893699	PrimaryExpression	0		893595	1					
ANR	893700	Condition	i < core -> dbg -> bp -> bps_idx_count	3052:14:89309:89340	893595	1	True				
ANR	893701	RelationalExpression	i < core -> dbg -> bp -> bps_idx_count		893595	0		<			
ANR	893702	Identifier	i		893595	0					
ANR	893703	PtrMemberAccess	core -> dbg -> bp -> bps_idx_count		893595	1					
ANR	893704	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	893705	PtrMemberAccess	core -> dbg		893595	0					
ANR	893706	Identifier	core		893595	0					
ANR	893707	Identifier	dbg		893595	1					
ANR	893708	Identifier	bp		893595	1					
ANR	893709	Identifier	bps_idx_count		893595	1					
ANR	893710	PostIncDecOperationExpression	i ++	3052:48:89343:89345	893595	2	True				
ANR	893711	Identifier	i		893595	0					
ANR	893712	IncDec	++		893595	1					
ANR	893713	CompoundStatement		23:53:442:442	893595	3					
ANR	893714	IfStatement	if ( ( bpi = core -> dbg -> bp -> bps_idx [ i ] ) )		893595	0					
ANR	893715	Condition	bpi = core -> dbg -> bp -> bps_idx [ i ]	3053:7:89357:89389	893595	0	True				
ANR	893716	AssignmentExpression	bpi = core -> dbg -> bp -> bps_idx [ i ]		893595	0		=			
ANR	893717	Identifier	bpi		893595	0					
ANR	893718	ArrayIndexing	core -> dbg -> bp -> bps_idx [ i ]		893595	1					
ANR	893719	PtrMemberAccess	core -> dbg -> bp -> bps_idx		893595	0					
ANR	893720	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	893721	PtrMemberAccess	core -> dbg		893595	0					
ANR	893722	Identifier	core		893595	0					
ANR	893723	Identifier	dbg		893595	1					
ANR	893724	Identifier	bp		893595	1					
ANR	893725	Identifier	bps_idx		893595	1					
ANR	893726	Identifier	i		893595	1					
ANR	893727	CompoundStatement		24:42:486:486	893595	1					
ANR	893728	Statement	r_cons_printf	3054:4:89398:89410	893595	0	True				
ANR	893729	Statement	(	3054:18:89412:89412	893595	1	True				
ANR	893730	Statement	"""%d 0x%08"""	3054:19:89413:89422	893595	2	True				
ANR	893731	Statement	PFMT64x	3054:29:89423:89429	893595	3	True				
ANR	893732	Statement	""" E:%d T:%d\\n"""	3054:36:89430:89443	893595	4	True				
ANR	893733	Statement	","	3054:50:89444:89444	893595	5	True				
ANR	893734	Statement	i	3055:6:89452:89452	893595	6	True				
ANR	893735	Statement	","	3055:7:89453:89453	893595	7	True				
ANR	893736	Statement	bpi	3055:9:89455:89457	893595	8	True				
ANR	893737	Statement	->	3055:12:89458:89459	893595	9	True				
ANR	893738	Statement	addr	3055:14:89460:89463	893595	10	True				
ANR	893739	Statement	","	3055:18:89464:89464	893595	11	True				
ANR	893740	Statement	bpi	3055:20:89466:89468	893595	12	True				
ANR	893741	Statement	->	3055:23:89469:89470	893595	13	True				
ANR	893742	Statement	enabled	3055:25:89471:89477	893595	14	True				
ANR	893743	Statement	","	3055:32:89478:89478	893595	15	True				
ANR	893744	Statement	bpi	3055:34:89480:89482	893595	16	True				
ANR	893745	Statement	->	3055:37:89483:89484	893595	17	True				
ANR	893746	Statement	trace	3055:39:89485:89489	893595	18	True				
ANR	893747	Statement	)	3055:44:89490:89490	893595	19	True				
ANR	893748	ExpressionStatement		3055:45:89491:89491	893595	20	True				
ANR	893749	BreakStatement	break ;	3058:2:89504:89509	893595	8	True				
ANR	893750	Label	case 'x' :	3059:1:89512:89520	893595	9	True				
ANR	893751	IfStatement	if ( input [ 3 ] == ' ' )		893595	10					
ANR	893752	Condition	input [ 3 ] == ' '	3060:6:89538:89552	893595	0	True				
ANR	893753	EqualityExpression	input [ 3 ] == ' '		893595	0		==			
ANR	893754	ArrayIndexing	input [ 3 ]		893595	0					
ANR	893755	Identifier	input		893595	0					
ANR	893756	PrimaryExpression	3		893595	1					
ANR	893757	PrimaryExpression	' '		893595	1					
ANR	893758	CompoundStatement		32:3:654:703	893595	1					
ANR	893759	IdentifierDeclStatement	"int idx = r_bp_get_index_at ( core -> dbg -> bp , addr ) ;"	3061:3:89560:89609	893595	0	True				
ANR	893760	IdentifierDecl	"idx = r_bp_get_index_at ( core -> dbg -> bp , addr )"		893595	0					
ANR	893761	IdentifierDeclType	int		893595	0					
ANR	893762	Identifier	idx		893595	1					
ANR	893763	AssignmentExpression	"idx = r_bp_get_index_at ( core -> dbg -> bp , addr )"		893595	2		=			
ANR	893764	Identifier	idx		893595	0					
ANR	893765	CallExpression	"r_bp_get_index_at ( core -> dbg -> bp , addr )"		893595	1					
ANR	893766	Callee	r_bp_get_index_at		893595	0					
ANR	893767	Identifier	r_bp_get_index_at		893595	0					
ANR	893768	ArgumentList	core -> dbg -> bp		893595	1					
ANR	893769	Argument	core -> dbg -> bp		893595	0					
ANR	893770	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	893771	PtrMemberAccess	core -> dbg		893595	0					
ANR	893772	Identifier	core		893595	0					
ANR	893773	Identifier	dbg		893595	1					
ANR	893774	Identifier	bp		893595	1					
ANR	893775	Argument	addr		893595	1					
ANR	893776	Identifier	addr		893595	0					
ANR	893777	IfStatement	if ( idx != - 1 )		893595	1					
ANR	893778	Condition	idx != - 1	3062:7:89618:89626	893595	0	True				
ANR	893779	EqualityExpression	idx != - 1		893595	0		!=			
ANR	893780	Identifier	idx		893595	0					
ANR	893781	UnaryOperationExpression	- 1		893595	1					
ANR	893782	UnaryOperator	-		893595	0					
ANR	893783	PrimaryExpression	1		893595	1					
ANR	893784	CompoundStatement		33:18:723:723	893595	1					
ANR	893785	ExpressionStatement	"bpi = r_bp_get_index ( core -> dbg -> bp , idx )"	3063:4:89635:89676	893595	0	True				
ANR	893786	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , idx )"		893595	0		=			
ANR	893787	Identifier	bpi		893595	0					
ANR	893788	CallExpression	"r_bp_get_index ( core -> dbg -> bp , idx )"		893595	1					
ANR	893789	Callee	r_bp_get_index		893595	0					
ANR	893790	Identifier	r_bp_get_index		893595	0					
ANR	893791	ArgumentList	core -> dbg -> bp		893595	1					
ANR	893792	Argument	core -> dbg -> bp		893595	0					
ANR	893793	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	893794	PtrMemberAccess	core -> dbg		893595	0					
ANR	893795	Identifier	core		893595	0					
ANR	893796	Identifier	dbg		893595	1					
ANR	893797	Identifier	bp		893595	1					
ANR	893798	Argument	idx		893595	1					
ANR	893799	Identifier	idx		893595	0					
ANR	893800	IfStatement	if ( bpi )		893595	1					
ANR	893801	Condition	bpi	3064:8:89686:89688	893595	0	True				
ANR	893802	Identifier	bpi		893595	0					
ANR	893803	CompoundStatement		36:5:792:828	893595	1					
ANR	893804	IdentifierDeclStatement	"char * expr = strchr ( input + 4 , ' ' ) ;"	3065:5:89698:89734	893595	0	True				
ANR	893805	IdentifierDecl	"* expr = strchr ( input + 4 , ' ' )"		893595	0					
ANR	893806	IdentifierDeclType	char *		893595	0					
ANR	893807	Identifier	expr		893595	1					
ANR	893808	AssignmentExpression	"* expr = strchr ( input + 4 , ' ' )"		893595	2		=			
ANR	893809	Identifier	expr		893595	0					
ANR	893810	CallExpression	"strchr ( input + 4 , ' ' )"		893595	1					
ANR	893811	Callee	strchr		893595	0					
ANR	893812	Identifier	strchr		893595	0					
ANR	893813	ArgumentList	input + 4		893595	1					
ANR	893814	Argument	input + 4		893595	0					
ANR	893815	AdditiveExpression	input + 4		893595	0		+			
ANR	893816	Identifier	input		893595	0					
ANR	893817	PrimaryExpression	4		893595	1					
ANR	893818	Argument	' '		893595	1					
ANR	893819	PrimaryExpression	' '		893595	0					
ANR	893820	IfStatement	if ( expr )		893595	1					
ANR	893821	Condition	expr	3066:9:89745:89748	893595	0	True				
ANR	893822	Identifier	expr		893595	0					
ANR	893823	CompoundStatement		37:15:845:845	893595	1					
ANR	893824	ExpressionStatement	free ( bpi -> expr )	3067:6:89759:89775	893595	0	True				
ANR	893825	CallExpression	free ( bpi -> expr )		893595	0					
ANR	893826	Callee	free		893595	0					
ANR	893827	Identifier	free		893595	0					
ANR	893828	ArgumentList	bpi -> expr		893595	1					
ANR	893829	Argument	bpi -> expr		893595	0					
ANR	893830	PtrMemberAccess	bpi -> expr		893595	0					
ANR	893831	Identifier	bpi		893595	0					
ANR	893832	Identifier	expr		893595	1					
ANR	893833	ExpressionStatement	bpi -> expr = strdup ( expr )	3068:6:89783:89808	893595	1	True				
ANR	893834	AssignmentExpression	bpi -> expr = strdup ( expr )		893595	0		=			
ANR	893835	PtrMemberAccess	bpi -> expr		893595	0					
ANR	893836	Identifier	bpi		893595	0					
ANR	893837	Identifier	expr		893595	1					
ANR	893838	CallExpression	strdup ( expr )		893595	1					
ANR	893839	Callee	strdup		893595	0					
ANR	893840	Identifier	strdup		893595	0					
ANR	893841	ArgumentList	expr		893595	1					
ANR	893842	Argument	expr		893595	0					
ANR	893843	Identifier	expr		893595	0					
ANR	893844	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , idx )"	3071:4:89827:89854	893595	2	True				
ANR	893845	CallExpression	"r_cons_printf ( ""%d\\n"" , idx )"		893595	0					
ANR	893846	Callee	r_cons_printf		893595	0					
ANR	893847	Identifier	r_cons_printf		893595	0					
ANR	893848	ArgumentList	"""%d\\n"""		893595	1					
ANR	893849	Argument	"""%d\\n"""		893595	0					
ANR	893850	PrimaryExpression	"""%d\\n"""		893595	0					
ANR	893851	Argument	idx		893595	1					
ANR	893852	Identifier	idx		893595	0					
ANR	893853	ElseStatement	else		893595	0					
ANR	893854	CompoundStatement		44:9:964:964	893595	0					
ANR	893855	ForStatement	for ( i = 0 ; i < core -> dbg -> bp -> bps_idx_count ; i ++ )		893595	0					
ANR	893856	ForInit	i = 0 ;	3074:8:89880:89885	893595	0	True				
ANR	893857	AssignmentExpression	i = 0		893595	0		=			
ANR	893858	Identifier	i		893595	0					
ANR	893859	PrimaryExpression	0		893595	1					
ANR	893860	Condition	i < core -> dbg -> bp -> bps_idx_count	3074:15:89887:89918	893595	1	True				
ANR	893861	RelationalExpression	i < core -> dbg -> bp -> bps_idx_count		893595	0		<			
ANR	893862	Identifier	i		893595	0					
ANR	893863	PtrMemberAccess	core -> dbg -> bp -> bps_idx_count		893595	1					
ANR	893864	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	893865	PtrMemberAccess	core -> dbg		893595	0					
ANR	893866	Identifier	core		893595	0					
ANR	893867	Identifier	dbg		893595	1					
ANR	893868	Identifier	bp		893595	1					
ANR	893869	Identifier	bps_idx_count		893595	1					
ANR	893870	PostIncDecOperationExpression	i ++	3074:49:89921:89923	893595	2	True				
ANR	893871	Identifier	i		893595	0					
ANR	893872	IncDec	++		893595	1					
ANR	893873	CompoundStatement		46:4:1026:1073	893595	3					
ANR	893874	IdentifierDeclStatement	RBreakpointItem * bp = core -> dbg -> bp -> bps_idx [ i ] ;	3075:4:89932:89979	893595	0	True				
ANR	893875	IdentifierDecl	* bp = core -> dbg -> bp -> bps_idx [ i ]		893595	0					
ANR	893876	IdentifierDeclType	RBreakpointItem *		893595	0					
ANR	893877	Identifier	bp		893595	1					
ANR	893878	AssignmentExpression	* bp = core -> dbg -> bp -> bps_idx [ i ]		893595	2		=			
ANR	893879	Identifier	bp		893595	0					
ANR	893880	ArrayIndexing	core -> dbg -> bp -> bps_idx [ i ]		893595	1					
ANR	893881	PtrMemberAccess	core -> dbg -> bp -> bps_idx		893595	0					
ANR	893882	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	893883	PtrMemberAccess	core -> dbg		893595	0					
ANR	893884	Identifier	core		893595	0					
ANR	893885	Identifier	dbg		893595	1					
ANR	893886	Identifier	bp		893595	1					
ANR	893887	Identifier	bps_idx		893595	1					
ANR	893888	Identifier	i		893595	1					
ANR	893889	IfStatement	if ( bp )		893595	1					
ANR	893890	Condition	bp	3076:8:89989:89990	893595	0	True				
ANR	893891	Identifier	bp		893595	0					
ANR	893892	CompoundStatement		47:12:1087:1087	893595	1					
ANR	893893	Statement	r_cons_printf	3077:5:90000:90012	893595	0	True				
ANR	893894	Statement	(	3077:19:90014:90014	893595	1	True				
ANR	893895	Statement	"""%d 0x%08"""	3077:20:90015:90024	893595	2	True				
ANR	893896	Statement	PFMT64x	3077:30:90025:90031	893595	3	True				
ANR	893897	Statement	""" %s\\n"""	3077:37:90032:90038	893595	4	True				
ANR	893898	Statement	","	3077:44:90039:90039	893595	5	True				
ANR	893899	Statement	i	3077:46:90041:90041	893595	6	True				
ANR	893900	Statement	","	3077:47:90042:90042	893595	7	True				
ANR	893901	Statement	bp	3077:49:90044:90045	893595	8	True				
ANR	893902	Statement	->	3077:51:90046:90047	893595	9	True				
ANR	893903	Statement	addr	3077:53:90048:90051	893595	10	True				
ANR	893904	Statement	","	3077:57:90052:90052	893595	11	True				
ANR	893905	Statement	bp	3077:59:90054:90055	893595	12	True				
ANR	893906	Statement	->	3077:61:90056:90057	893595	13	True				
ANR	893907	Statement	expr	3077:63:90058:90061	893595	14	True				
ANR	893908	Statement	)	3077:67:90062:90062	893595	15	True				
ANR	893909	ExpressionStatement		3077:68:90063:90063	893595	16	True				
ANR	893910	BreakStatement	break ;	3081:2:90082:90087	893595	11	True				
ANR	893911	Label	case 'c' :	3082:1:90090:90098	893595	12	True				
ANR	893912	ExpressionStatement	"p = strchr ( input + 3 , ' ' )"	3083:2:90112:90139	893595	13	True				
ANR	893913	AssignmentExpression	"p = strchr ( input + 3 , ' ' )"		893595	0		=			
ANR	893914	Identifier	p		893595	0					
ANR	893915	CallExpression	"strchr ( input + 3 , ' ' )"		893595	1					
ANR	893916	Callee	strchr		893595	0					
ANR	893917	Identifier	strchr		893595	0					
ANR	893918	ArgumentList	input + 3		893595	1					
ANR	893919	Argument	input + 3		893595	0					
ANR	893920	AdditiveExpression	input + 3		893595	0		+			
ANR	893921	Identifier	input		893595	0					
ANR	893922	PrimaryExpression	3		893595	1					
ANR	893923	Argument	' '		893595	1					
ANR	893924	PrimaryExpression	' '		893595	0					
ANR	893925	IfStatement	if ( p )		893595	14					
ANR	893926	Condition	p	3084:6:90147:90147	893595	0	True				
ANR	893927	Identifier	p		893595	0					
ANR	893928	CompoundStatement		56:3:1249:1278	893595	1					
ANR	893929	IdentifierDeclStatement	"char * q = strchr ( p + 1 , ' ' ) ;"	3085:3:90155:90184	893595	0	True				
ANR	893930	IdentifierDecl	"* q = strchr ( p + 1 , ' ' )"		893595	0					
ANR	893931	IdentifierDeclType	char *		893595	0					
ANR	893932	Identifier	q		893595	1					
ANR	893933	AssignmentExpression	"* q = strchr ( p + 1 , ' ' )"		893595	2		=			
ANR	893934	Identifier	q		893595	0					
ANR	893935	CallExpression	"strchr ( p + 1 , ' ' )"		893595	1					
ANR	893936	Callee	strchr		893595	0					
ANR	893937	Identifier	strchr		893595	0					
ANR	893938	ArgumentList	p + 1		893595	1					
ANR	893939	Argument	p + 1		893595	0					
ANR	893940	AdditiveExpression	p + 1		893595	0		+			
ANR	893941	Identifier	p		893595	0					
ANR	893942	PrimaryExpression	1		893595	1					
ANR	893943	Argument	' '		893595	1					
ANR	893944	PrimaryExpression	' '		893595	0					
ANR	893945	IfStatement	if ( q )		893595	1					
ANR	893946	Condition	q	3086:7:90193:90193	893595	0	True				
ANR	893947	Identifier	q		893595	0					
ANR	893948	CompoundStatement		59:4:1310:1347	893595	1					
ANR	893949	ExpressionStatement	* q ++ = 0	3087:4:90202:90210	893595	0	True				
ANR	893950	AssignmentExpression	* q ++ = 0		893595	0		=			
ANR	893951	UnaryOperationExpression	* q ++		893595	0					
ANR	893952	UnaryOperator	*		893595	0					
ANR	893953	PostIncDecOperationExpression	q ++		893595	1					
ANR	893954	Identifier	q		893595	0					
ANR	893955	IncDec	++		893595	1					
ANR	893956	PrimaryExpression	0		893595	1					
ANR	893957	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , p ) ;"	3088:4:90216:90253	893595	1	True				
ANR	893958	IdentifierDecl	"addr = r_num_math ( core -> num , p )"		893595	0					
ANR	893959	IdentifierDeclType	ut64		893595	0					
ANR	893960	Identifier	addr		893595	1					
ANR	893961	AssignmentExpression	"addr = r_num_math ( core -> num , p )"		893595	2		=			
ANR	893962	Identifier	addr		893595	0					
ANR	893963	CallExpression	"r_num_math ( core -> num , p )"		893595	1					
ANR	893964	Callee	r_num_math		893595	0					
ANR	893965	Identifier	r_num_math		893595	0					
ANR	893966	ArgumentList	core -> num		893595	1					
ANR	893967	Argument	core -> num		893595	0					
ANR	893968	PtrMemberAccess	core -> num		893595	0					
ANR	893969	Identifier	core		893595	0					
ANR	893970	Identifier	num		893595	1					
ANR	893971	Argument	p		893595	1					
ANR	893972	Identifier	p		893595	0					
ANR	893973	ExpressionStatement	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3089:4:90259:90301	893595	2	True				
ANR	893974	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		893595	0		=			
ANR	893975	Identifier	bpi		893595	0					
ANR	893976	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		893595	1					
ANR	893977	Callee	r_bp_get_index		893595	0					
ANR	893978	Identifier	r_bp_get_index		893595	0					
ANR	893979	ArgumentList	core -> dbg -> bp		893595	1					
ANR	893980	Argument	core -> dbg -> bp		893595	0					
ANR	893981	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	893982	PtrMemberAccess	core -> dbg		893595	0					
ANR	893983	Identifier	core		893595	0					
ANR	893984	Identifier	dbg		893595	1					
ANR	893985	Identifier	bp		893595	1					
ANR	893986	Argument	addr		893595	1					
ANR	893987	Identifier	addr		893595	0					
ANR	893988	IfStatement	if ( bpi )		893595	3					
ANR	893989	Condition	bpi	3090:8:90311:90313	893595	0	True				
ANR	893990	Identifier	bpi		893595	0					
ANR	893991	CompoundStatement		61:13:1410:1410	893595	1					
ANR	893992	ExpressionStatement	bpi -> data = strdup ( q )	3091:5:90323:90345	893595	0	True				
ANR	893993	AssignmentExpression	bpi -> data = strdup ( q )		893595	0		=			
ANR	893994	PtrMemberAccess	bpi -> data		893595	0					
ANR	893995	Identifier	bpi		893595	0					
ANR	893996	Identifier	data		893595	1					
ANR	893997	CallExpression	strdup ( q )		893595	1					
ANR	893998	Callee	strdup		893595	0					
ANR	893999	Identifier	strdup		893595	0					
ANR	894000	ArgumentList	q		893595	1					
ANR	894001	Argument	q		893595	0					
ANR	894002	Identifier	q		893595	0					
ANR	894003	ElseStatement	else		893595	0					
ANR	894004	CompoundStatement		63:11:1452:1452	893595	0					
ANR	894005	ExpressionStatement	"eprintf ( ""Cannot set command\\n"" )"	3093:5:90365:90397	893595	0	True				
ANR	894006	CallExpression	"eprintf ( ""Cannot set command\\n"" )"		893595	0					
ANR	894007	Callee	eprintf		893595	0					
ANR	894008	Identifier	eprintf		893595	0					
ANR	894009	ArgumentList	"""Cannot set command\\n"""		893595	1					
ANR	894010	Argument	"""Cannot set command\\n"""		893595	0					
ANR	894011	PrimaryExpression	"""Cannot set command\\n"""		893595	0					
ANR	894012	ElseStatement	else		893595	0					
ANR	894013	CompoundStatement		66:10:1509:1509	893595	0					
ANR	894014	ExpressionStatement	"eprintf ( ""|Usage: dbic # cmd\\n"" )"	3096:4:90421:90453	893595	0	True				
ANR	894015	CallExpression	"eprintf ( ""|Usage: dbic # cmd\\n"" )"		893595	0					
ANR	894016	Callee	eprintf		893595	0					
ANR	894017	Identifier	eprintf		893595	0					
ANR	894018	ArgumentList	"""|Usage: dbic # cmd\\n"""		893595	1					
ANR	894019	Argument	"""|Usage: dbic # cmd\\n"""		893595	0					
ANR	894020	PrimaryExpression	"""|Usage: dbic # cmd\\n"""		893595	0					
ANR	894021	ElseStatement	else		893595	0					
ANR	894022	CompoundStatement		69:9:1563:1563	893595	0					
ANR	894023	ExpressionStatement	"eprintf ( ""|Usage: dbic # cmd\\n"" )"	3099:3:90474:90506	893595	0	True				
ANR	894024	CallExpression	"eprintf ( ""|Usage: dbic # cmd\\n"" )"		893595	0					
ANR	894025	Callee	eprintf		893595	0					
ANR	894026	Identifier	eprintf		893595	0					
ANR	894027	ArgumentList	"""|Usage: dbic # cmd\\n"""		893595	1					
ANR	894028	Argument	"""|Usage: dbic # cmd\\n"""		893595	0					
ANR	894029	PrimaryExpression	"""|Usage: dbic # cmd\\n"""		893595	0					
ANR	894030	BreakStatement	break ;	3101:2:90514:90519	893595	15	True				
ANR	894031	Label	case 'e' :	3102:1:90522:90530	893595	16	True				
ANR	894032	IfStatement	"if ( ( bpi = r_bp_get_index ( core -> dbg -> bp , addr ) ) )"		893595	17					
ANR	894033	Condition	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3103:6:90548:90591	893595	0	True				
ANR	894034	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		893595	0		=			
ANR	894035	Identifier	bpi		893595	0					
ANR	894036	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		893595	1					
ANR	894037	Callee	r_bp_get_index		893595	0					
ANR	894038	Identifier	r_bp_get_index		893595	0					
ANR	894039	ArgumentList	core -> dbg -> bp		893595	1					
ANR	894040	Argument	core -> dbg -> bp		893595	0					
ANR	894041	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	894042	PtrMemberAccess	core -> dbg		893595	0					
ANR	894043	Identifier	core		893595	0					
ANR	894044	Identifier	dbg		893595	1					
ANR	894045	Identifier	bp		893595	1					
ANR	894046	Argument	addr		893595	1					
ANR	894047	Identifier	addr		893595	0					
ANR	894048	CompoundStatement		74:52:1688:1688	893595	1					
ANR	894049	ExpressionStatement	bpi -> enabled = true	3104:3:90599:90618	893595	0	True				
ANR	894050	AssignmentExpression	bpi -> enabled = true		893595	0		=			
ANR	894051	PtrMemberAccess	bpi -> enabled		893595	0					
ANR	894052	Identifier	bpi		893595	0					
ANR	894053	Identifier	enabled		893595	1					
ANR	894054	Identifier	true		893595	1					
ANR	894055	ElseStatement	else		893595	0					
ANR	894056	CompoundStatement		76:9:1723:1723	893595	0					
ANR	894057	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3106:3:90634:90671	893595	0	True				
ANR	894058	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		893595	0					
ANR	894059	Callee	eprintf		893595	0					
ANR	894060	Identifier	eprintf		893595	0					
ANR	894061	ArgumentList	"""Cannot unset tracepoint\\n"""		893595	1					
ANR	894062	Argument	"""Cannot unset tracepoint\\n"""		893595	0					
ANR	894063	PrimaryExpression	"""Cannot unset tracepoint\\n"""		893595	0					
ANR	894064	BreakStatement	break ;	3108:2:90679:90684	893595	18	True				
ANR	894065	Label	case 'd' :	3109:1:90687:90695	893595	19	True				
ANR	894066	IfStatement	"if ( ( bpi = r_bp_get_index ( core -> dbg -> bp , addr ) ) )"		893595	20					
ANR	894067	Condition	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3110:6:90713:90756	893595	0	True				
ANR	894068	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		893595	0		=			
ANR	894069	Identifier	bpi		893595	0					
ANR	894070	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		893595	1					
ANR	894071	Callee	r_bp_get_index		893595	0					
ANR	894072	Identifier	r_bp_get_index		893595	0					
ANR	894073	ArgumentList	core -> dbg -> bp		893595	1					
ANR	894074	Argument	core -> dbg -> bp		893595	0					
ANR	894075	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	894076	PtrMemberAccess	core -> dbg		893595	0					
ANR	894077	Identifier	core		893595	0					
ANR	894078	Identifier	dbg		893595	1					
ANR	894079	Identifier	bp		893595	1					
ANR	894080	Argument	addr		893595	1					
ANR	894081	Identifier	addr		893595	0					
ANR	894082	CompoundStatement		81:52:1853:1853	893595	1					
ANR	894083	ExpressionStatement	bpi -> enabled = false	3111:3:90764:90784	893595	0	True				
ANR	894084	AssignmentExpression	bpi -> enabled = false		893595	0		=			
ANR	894085	PtrMemberAccess	bpi -> enabled		893595	0					
ANR	894086	Identifier	bpi		893595	0					
ANR	894087	Identifier	enabled		893595	1					
ANR	894088	Identifier	false		893595	1					
ANR	894089	ElseStatement	else		893595	0					
ANR	894090	CompoundStatement		83:9:1889:1889	893595	0					
ANR	894091	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3113:3:90800:90837	893595	0	True				
ANR	894092	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		893595	0					
ANR	894093	Callee	eprintf		893595	0					
ANR	894094	Identifier	eprintf		893595	0					
ANR	894095	ArgumentList	"""Cannot unset tracepoint\\n"""		893595	1					
ANR	894096	Argument	"""Cannot unset tracepoint\\n"""		893595	0					
ANR	894097	PrimaryExpression	"""Cannot unset tracepoint\\n"""		893595	0					
ANR	894098	BreakStatement	break ;	3115:2:90845:90850	893595	21	True				
ANR	894099	Label	case 's' :	3116:1:90853:90861	893595	22	True				
ANR	894100	IfStatement	"if ( ( bpi = r_bp_get_index ( core -> dbg -> bp , addr ) ) )"		893595	23					
ANR	894101	Condition	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3117:6:90879:90922	893595	0	True				
ANR	894102	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		893595	0		=			
ANR	894103	Identifier	bpi		893595	0					
ANR	894104	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		893595	1					
ANR	894105	Callee	r_bp_get_index		893595	0					
ANR	894106	Identifier	r_bp_get_index		893595	0					
ANR	894107	ArgumentList	core -> dbg -> bp		893595	1					
ANR	894108	Argument	core -> dbg -> bp		893595	0					
ANR	894109	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	894110	PtrMemberAccess	core -> dbg		893595	0					
ANR	894111	Identifier	core		893595	0					
ANR	894112	Identifier	dbg		893595	1					
ANR	894113	Identifier	bp		893595	1					
ANR	894114	Argument	addr		893595	1					
ANR	894115	Identifier	addr		893595	0					
ANR	894116	CompoundStatement		88:52:2019:2019	893595	1					
ANR	894117	ExpressionStatement	bpi -> enabled = ! ! ! bpi -> enabled	3118:3:90930:90960	893595	0	True				
ANR	894118	AssignmentExpression	bpi -> enabled = ! ! ! bpi -> enabled		893595	0		=			
ANR	894119	PtrMemberAccess	bpi -> enabled		893595	0					
ANR	894120	Identifier	bpi		893595	0					
ANR	894121	Identifier	enabled		893595	1					
ANR	894122	UnaryOperationExpression	! ! ! bpi -> enabled		893595	1					
ANR	894123	UnaryOperator	!		893595	0					
ANR	894124	UnaryOperationExpression	! ! bpi -> enabled		893595	1					
ANR	894125	UnaryOperator	!		893595	0					
ANR	894126	UnaryOperationExpression	! bpi -> enabled		893595	1					
ANR	894127	UnaryOperator	!		893595	0					
ANR	894128	PtrMemberAccess	bpi -> enabled		893595	1					
ANR	894129	Identifier	bpi		893595	0					
ANR	894130	Identifier	enabled		893595	1					
ANR	894131	ElseStatement	else		893595	0					
ANR	894132	CompoundStatement		90:9:2065:2065	893595	0					
ANR	894133	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3120:3:90976:91013	893595	0	True				
ANR	894134	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		893595	0					
ANR	894135	Callee	eprintf		893595	0					
ANR	894136	Identifier	eprintf		893595	0					
ANR	894137	ArgumentList	"""Cannot unset tracepoint\\n"""		893595	1					
ANR	894138	Argument	"""Cannot unset tracepoint\\n"""		893595	0					
ANR	894139	PrimaryExpression	"""Cannot unset tracepoint\\n"""		893595	0					
ANR	894140	BreakStatement	break ;	3122:2:91021:91026	893595	24	True				
ANR	894141	Label	case 't' :	3123:1:91029:91037	893595	25	True				
ANR	894142	SwitchStatement	switch ( input [ 3 ] )		893595	26					
ANR	894143	Condition	input [ 3 ]	3124:10:91072:91079	893595	0	True				
ANR	894144	ArrayIndexing	input [ 3 ]		893595	0					
ANR	894145	Identifier	input		893595	0					
ANR	894146	PrimaryExpression	3		893595	1					
ANR	894147	CompoundStatement		95:20:2176:2176	893595	1					
ANR	894148	Label	case 'e' :	3125:2:91086:91094	893595	0	True				
ANR	894149	IfStatement	"if ( ( bpi = r_bp_get_index ( core -> dbg -> bp , addr ) ) )"		893595	1					
ANR	894150	Condition	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3126:7:91103:91146	893595	0	True				
ANR	894151	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		893595	0		=			
ANR	894152	Identifier	bpi		893595	0					
ANR	894153	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		893595	1					
ANR	894154	Callee	r_bp_get_index		893595	0					
ANR	894155	Identifier	r_bp_get_index		893595	0					
ANR	894156	ArgumentList	core -> dbg -> bp		893595	1					
ANR	894157	Argument	core -> dbg -> bp		893595	0					
ANR	894158	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	894159	PtrMemberAccess	core -> dbg		893595	0					
ANR	894160	Identifier	core		893595	0					
ANR	894161	Identifier	dbg		893595	1					
ANR	894162	Identifier	bp		893595	1					
ANR	894163	Argument	addr		893595	1					
ANR	894164	Identifier	addr		893595	0					
ANR	894165	CompoundStatement		97:53:2243:2243	893595	1					
ANR	894166	ExpressionStatement	bpi -> trace = true	3127:4:91155:91172	893595	0	True				
ANR	894167	AssignmentExpression	bpi -> trace = true		893595	0		=			
ANR	894168	PtrMemberAccess	bpi -> trace		893595	0					
ANR	894169	Identifier	bpi		893595	0					
ANR	894170	Identifier	trace		893595	1					
ANR	894171	Identifier	true		893595	1					
ANR	894172	ElseStatement	else		893595	0					
ANR	894173	CompoundStatement		99:10:2278:2278	893595	0					
ANR	894174	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3129:4:91190:91227	893595	0	True				
ANR	894175	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		893595	0					
ANR	894176	Callee	eprintf		893595	0					
ANR	894177	Identifier	eprintf		893595	0					
ANR	894178	ArgumentList	"""Cannot unset tracepoint\\n"""		893595	1					
ANR	894179	Argument	"""Cannot unset tracepoint\\n"""		893595	0					
ANR	894180	PrimaryExpression	"""Cannot unset tracepoint\\n"""		893595	0					
ANR	894181	BreakStatement	break ;	3131:3:91237:91242	893595	2	True				
ANR	894182	Label	case 'd' :	3132:2:91246:91254	893595	3	True				
ANR	894183	IfStatement	"if ( ( bpi = r_bp_get_index ( core -> dbg -> bp , addr ) ) )"		893595	4					
ANR	894184	Condition	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3133:7:91263:91306	893595	0	True				
ANR	894185	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		893595	0		=			
ANR	894186	Identifier	bpi		893595	0					
ANR	894187	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		893595	1					
ANR	894188	Callee	r_bp_get_index		893595	0					
ANR	894189	Identifier	r_bp_get_index		893595	0					
ANR	894190	ArgumentList	core -> dbg -> bp		893595	1					
ANR	894191	Argument	core -> dbg -> bp		893595	0					
ANR	894192	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	894193	PtrMemberAccess	core -> dbg		893595	0					
ANR	894194	Identifier	core		893595	0					
ANR	894195	Identifier	dbg		893595	1					
ANR	894196	Identifier	bp		893595	1					
ANR	894197	Argument	addr		893595	1					
ANR	894198	Identifier	addr		893595	0					
ANR	894199	CompoundStatement		104:53:2403:2403	893595	1					
ANR	894200	ExpressionStatement	bpi -> trace = false	3134:4:91315:91333	893595	0	True				
ANR	894201	AssignmentExpression	bpi -> trace = false		893595	0		=			
ANR	894202	PtrMemberAccess	bpi -> trace		893595	0					
ANR	894203	Identifier	bpi		893595	0					
ANR	894204	Identifier	trace		893595	1					
ANR	894205	Identifier	false		893595	1					
ANR	894206	ElseStatement	else		893595	0					
ANR	894207	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3135:10:91345:91382	893595	0	True				
ANR	894208	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		893595	0					
ANR	894209	Callee	eprintf		893595	0					
ANR	894210	Identifier	eprintf		893595	0					
ANR	894211	ArgumentList	"""Cannot unset tracepoint\\n"""		893595	1					
ANR	894212	Argument	"""Cannot unset tracepoint\\n"""		893595	0					
ANR	894213	PrimaryExpression	"""Cannot unset tracepoint\\n"""		893595	0					
ANR	894214	BreakStatement	break ;	3136:3:91387:91392	893595	5	True				
ANR	894215	Label	case 's' :	3137:2:91396:91404	893595	6	True				
ANR	894216	IfStatement	"if ( ( bpi = r_bp_get_index ( core -> dbg -> bp , addr ) ) )"		893595	7					
ANR	894217	Condition	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3138:7:91413:91456	893595	0	True				
ANR	894218	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		893595	0		=			
ANR	894219	Identifier	bpi		893595	0					
ANR	894220	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		893595	1					
ANR	894221	Callee	r_bp_get_index		893595	0					
ANR	894222	Identifier	r_bp_get_index		893595	0					
ANR	894223	ArgumentList	core -> dbg -> bp		893595	1					
ANR	894224	Argument	core -> dbg -> bp		893595	0					
ANR	894225	PtrMemberAccess	core -> dbg -> bp		893595	0					
ANR	894226	PtrMemberAccess	core -> dbg		893595	0					
ANR	894227	Identifier	core		893595	0					
ANR	894228	Identifier	dbg		893595	1					
ANR	894229	Identifier	bp		893595	1					
ANR	894230	Argument	addr		893595	1					
ANR	894231	Identifier	addr		893595	0					
ANR	894232	CompoundStatement		109:53:2553:2553	893595	1					
ANR	894233	ExpressionStatement	bpi -> trace = ! ! ! bpi -> trace	3139:4:91465:91491	893595	0	True				
ANR	894234	AssignmentExpression	bpi -> trace = ! ! ! bpi -> trace		893595	0		=			
ANR	894235	PtrMemberAccess	bpi -> trace		893595	0					
ANR	894236	Identifier	bpi		893595	0					
ANR	894237	Identifier	trace		893595	1					
ANR	894238	UnaryOperationExpression	! ! ! bpi -> trace		893595	1					
ANR	894239	UnaryOperator	!		893595	0					
ANR	894240	UnaryOperationExpression	! ! bpi -> trace		893595	1					
ANR	894241	UnaryOperator	!		893595	0					
ANR	894242	UnaryOperationExpression	! bpi -> trace		893595	1					
ANR	894243	UnaryOperator	!		893595	0					
ANR	894244	PtrMemberAccess	bpi -> trace		893595	1					
ANR	894245	Identifier	bpi		893595	0					
ANR	894246	Identifier	trace		893595	1					
ANR	894247	ElseStatement	else		893595	0					
ANR	894248	CompoundStatement		111:10:2597:2597	893595	0					
ANR	894249	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3141:4:91509:91546	893595	0	True				
ANR	894250	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		893595	0					
ANR	894251	Callee	eprintf		893595	0					
ANR	894252	Identifier	eprintf		893595	0					
ANR	894253	ArgumentList	"""Cannot unset tracepoint\\n"""		893595	1					
ANR	894254	Argument	"""Cannot unset tracepoint\\n"""		893595	0					
ANR	894255	PrimaryExpression	"""Cannot unset tracepoint\\n"""		893595	0					
ANR	894256	BreakStatement	break ;	3143:3:91556:91561	893595	8	True				
ANR	894257	BreakStatement	break ;	3145:2:91569:91574	893595	27	True				
ANR	894258	ReturnType	static void		893595	1					
ANR	894259	Identifier	core_cmd_dbi		893595	2					
ANR	894260	ParameterList	"RCore * core , const char * input , ut64 addr"		893595	3					
ANR	894261	Parameter	RCore * core	3030:26:88862:88872	893595	0	True				
ANR	894262	ParameterType	RCore *		893595	0					
ANR	894263	Identifier	core		893595	1					
ANR	894264	Parameter	const char * input	3030:39:88875:88891	893595	1	True				
ANR	894265	ParameterType	const char *		893595	0					
ANR	894266	Identifier	input		893595	1					
ANR	894267	Parameter	ut64 addr	3030:58:88894:88902	893595	2	True				
ANR	894268	ParameterType	ut64		893595	0					
ANR	894269	Identifier	addr		893595	1					
ANR	894270	CFGEntryNode	ENTRY		893595		True				
ANR	894271	CFGExitNode	EXIT		893595		True				
ANR	894272	Symbol	core -> dbg -> bp -> bps_idx		893595						
ANR	894273	Symbol	* q ++		893595						
ANR	894274	Symbol	* input		893595						
ANR	894275	Symbol	* core		893595						
ANR	894276	Symbol	core -> offset		893595						
ANR	894277	Symbol	strchr		893595						
ANR	894278	Symbol	core -> dbg -> bp		893595						
ANR	894279	Symbol	r_bp_get_index_at		893595						
ANR	894280	Symbol	bp		893595						
ANR	894281	Symbol	r_num_math		893595						
ANR	894282	Symbol	* * * core -> dbg		893595						
ANR	894283	Symbol	r_bp_get_index		893595						
ANR	894284	Symbol	bpi		893595						
ANR	894285	Symbol	expr		893595						
ANR	894286	Symbol	addr		893595						
ANR	894287	Symbol	* * * * core		893595						
ANR	894288	Symbol	core -> num		893595						
ANR	894289	Symbol	* * core		893595						
ANR	894290	Symbol	bpi -> expr		893595						
ANR	894291	Symbol	* core -> dbg -> bp		893595						
ANR	894292	Symbol	core -> dbg -> bp -> bps_idx_count		893595						
ANR	894293	Symbol	false		893595						
ANR	894294	Symbol	i		893595						
ANR	894295	Symbol	bpi -> enabled		893595						
ANR	894296	Symbol	bpi -> data		893595						
ANR	894297	Symbol	p		893595						
ANR	894298	Symbol	core		893595						
ANR	894299	Symbol	input		893595						
ANR	894300	Symbol	* * * core		893595						
ANR	894301	Symbol	q		893595						
ANR	894302	Symbol	* i		893595						
ANR	894303	Symbol	true		893595						
ANR	894304	Symbol	* bpi		893595						
ANR	894305	Symbol	* core -> dbg -> bp -> bps_idx		893595						
ANR	894306	Symbol	* * core -> dbg -> bp		893595						
ANR	894307	Symbol	strdup		893595						
ANR	894308	Symbol	idx		893595						
ANR	894309	Symbol	bpi -> trace		893595						
ANR	894310	Symbol	* core -> dbg		893595						
ANR	894311	Symbol	core -> dbg		893595						
ANR	894312	Symbol	* * core -> dbg		893595						
ANR	894313	Function	r_core_cmd_bp	3153:0:91661:104230							
ANR	894314	FunctionDef	"r_core_cmd_bp (RCore * core , const char * input)"		894313	0					
ANR	894315	CompoundStatement		3153:58:91719:104230	894313	0					
ANR	894316	IdentifierDeclStatement	RBreakpointItem * bpi ;	3154:1:91722:91742	894313	0	True				
ANR	894317	IdentifierDecl	* bpi		894313	0					
ANR	894318	IdentifierDeclType	RBreakpointItem *		894313	0					
ANR	894319	Identifier	bpi		894313	1					
ANR	894320	IdentifierDeclStatement	"int i , hwbp = r_config_get_i ( core -> config , ""dbg.hwbp"" ) ;"	3155:1:91745:91800	894313	1	True				
ANR	894321	IdentifierDecl	i		894313	0					
ANR	894322	IdentifierDeclType	int		894313	0					
ANR	894323	Identifier	i		894313	1					
ANR	894324	IdentifierDecl	"hwbp = r_config_get_i ( core -> config , ""dbg.hwbp"" )"		894313	1					
ANR	894325	IdentifierDeclType	int		894313	0					
ANR	894326	Identifier	hwbp		894313	1					
ANR	894327	AssignmentExpression	"hwbp = r_config_get_i ( core -> config , ""dbg.hwbp"" )"		894313	2		=			
ANR	894328	Identifier	hwbp		894313	0					
ANR	894329	CallExpression	"r_config_get_i ( core -> config , ""dbg.hwbp"" )"		894313	1					
ANR	894330	Callee	r_config_get_i		894313	0					
ANR	894331	Identifier	r_config_get_i		894313	0					
ANR	894332	ArgumentList	core -> config		894313	1					
ANR	894333	Argument	core -> config		894313	0					
ANR	894334	PtrMemberAccess	core -> config		894313	0					
ANR	894335	Identifier	core		894313	0					
ANR	894336	Identifier	config		894313	1					
ANR	894337	Argument	"""dbg.hwbp"""		894313	1					
ANR	894338	PrimaryExpression	"""dbg.hwbp"""		894313	0					
ANR	894339	IdentifierDeclStatement	RDebugFrame * frame ;	3156:1:91803:91821	894313	2	True				
ANR	894340	IdentifierDecl	* frame		894313	0					
ANR	894341	IdentifierDeclType	RDebugFrame *		894313	0					
ANR	894342	Identifier	frame		894313	1					
ANR	894343	IdentifierDeclStatement	RListIter * iter ;	3157:1:91824:91839	894313	3	True				
ANR	894344	IdentifierDecl	* iter		894313	0					
ANR	894345	IdentifierDeclType	RListIter *		894313	0					
ANR	894346	Identifier	iter		894313	1					
ANR	894347	IdentifierDeclStatement	const char * p ;	3158:1:91842:91855	894313	4	True				
ANR	894348	IdentifierDecl	* p		894313	0					
ANR	894349	IdentifierDeclType	const char *		894313	0					
ANR	894350	Identifier	p		894313	1					
ANR	894351	IdentifierDeclStatement	bool hex_format ;	3159:1:91858:91873	894313	5	True				
ANR	894352	IdentifierDecl	hex_format		894313	0					
ANR	894353	IdentifierDeclType	bool		894313	0					
ANR	894354	Identifier	hex_format		894313	1					
ANR	894355	IdentifierDeclStatement	bool watch = false ;	3160:1:91876:91894	894313	6	True				
ANR	894356	IdentifierDecl	watch = false		894313	0					
ANR	894357	IdentifierDeclType	bool		894313	0					
ANR	894358	Identifier	watch		894313	1					
ANR	894359	AssignmentExpression	watch = false		894313	2		=			
ANR	894360	Identifier	false		894313	0					
ANR	894361	Identifier	false		894313	1					
ANR	894362	IdentifierDeclStatement	int rw = 0 ;	3161:1:91897:91907	894313	7	True				
ANR	894363	IdentifierDecl	rw = 0		894313	0					
ANR	894364	IdentifierDeclType	int		894313	0					
ANR	894365	Identifier	rw		894313	1					
ANR	894366	AssignmentExpression	rw = 0		894313	2		=			
ANR	894367	Identifier	rw		894313	0					
ANR	894368	PrimaryExpression	0		894313	1					
ANR	894369	IdentifierDeclStatement	RList * list ;	3162:1:91910:91921	894313	8	True				
ANR	894370	IdentifierDecl	* list		894313	0					
ANR	894371	IdentifierDeclType	RList *		894313	0					
ANR	894372	Identifier	list		894313	1					
ANR	894373	IdentifierDeclStatement	ut64 addr ;	3163:1:91924:91933	894313	9	True				
ANR	894374	IdentifierDecl	addr		894313	0					
ANR	894375	IdentifierDeclType	ut64		894313	0					
ANR	894376	Identifier	addr		894313	1					
ANR	894377	ExpressionStatement	"p = strchr ( input , ' ' )"	3164:1:91936:91959	894313	10	True				
ANR	894378	AssignmentExpression	"p = strchr ( input , ' ' )"		894313	0		=			
ANR	894379	Identifier	p		894313	0					
ANR	894380	CallExpression	"strchr ( input , ' ' )"		894313	1					
ANR	894381	Callee	strchr		894313	0					
ANR	894382	Identifier	strchr		894313	0					
ANR	894383	ArgumentList	input		894313	1					
ANR	894384	Argument	input		894313	0					
ANR	894385	Identifier	input		894313	0					
ANR	894386	Argument	' '		894313	1					
ANR	894387	PrimaryExpression	' '		894313	0					
ANR	894388	ExpressionStatement	"addr = p ? r_num_math ( core -> num , p + 1 ) : UT64_MAX"	3165:1:91962:92011	894313	11	True				
ANR	894389	AssignmentExpression	"addr = p ? r_num_math ( core -> num , p + 1 ) : UT64_MAX"		894313	0		=			
ANR	894390	Identifier	addr		894313	0					
ANR	894391	ConditionalExpression	"p ? r_num_math ( core -> num , p + 1 ) : UT64_MAX"		894313	1					
ANR	894392	Condition	p		894313	0					
ANR	894393	Identifier	p		894313	0					
ANR	894394	CallExpression	"r_num_math ( core -> num , p + 1 )"		894313	1					
ANR	894395	Callee	r_num_math		894313	0					
ANR	894396	Identifier	r_num_math		894313	0					
ANR	894397	ArgumentList	core -> num		894313	1					
ANR	894398	Argument	core -> num		894313	0					
ANR	894399	PtrMemberAccess	core -> num		894313	0					
ANR	894400	Identifier	core		894313	0					
ANR	894401	Identifier	num		894313	1					
ANR	894402	Argument	p + 1		894313	1					
ANR	894403	AdditiveExpression	p + 1		894313	0		+			
ANR	894404	Identifier	p		894313	0					
ANR	894405	PrimaryExpression	1		894313	1					
ANR	894406	Identifier	UT64_MAX		894313	2					
ANR	894407	IfStatement	if ( ! addr )		894313	12					
ANR	894408	Condition	! addr	3166:5:92018:92022	894313	0	True				
ANR	894409	UnaryOperationExpression	! addr		894313	0					
ANR	894410	UnaryOperator	!		894313	0					
ANR	894411	Identifier	addr		894313	1					
ANR	894412	CompoundStatement		14:12:305:305	894313	1					
ANR	894413	ExpressionStatement	addr = UT64_MAX	3167:2:92029:92044	894313	0	True				
ANR	894414	AssignmentExpression	addr = UT64_MAX		894313	0		=			
ANR	894415	Identifier	addr		894313	0					
ANR	894416	Identifier	UT64_MAX		894313	1					
ANR	894417	IdentifierDeclStatement	char * str = NULL ;	3169:1:92050:92066	894313	13	True				
ANR	894418	IdentifierDecl	* str = NULL		894313	0					
ANR	894419	IdentifierDeclType	char *		894313	0					
ANR	894420	Identifier	str		894313	1					
ANR	894421	AssignmentExpression	* str = NULL		894313	2		=			
ANR	894422	Identifier	NULL		894313	0					
ANR	894423	Identifier	NULL		894313	1					
ANR	894424	SwitchStatement	switch ( input [ 1 ] )		894313	14					
ANR	894425	Condition	input [ 1 ]	3171:9:92078:92085	894313	0	True				
ANR	894426	ArrayIndexing	input [ 1 ]		894313	0					
ANR	894427	Identifier	input		894313	0					
ANR	894428	PrimaryExpression	1		894313	1					
ANR	894429	CompoundStatement		412:2:10797:10827	894313	1					
ANR	894430	Label	case '.' :	3172:1:92091:92099	894313	0	True				
ANR	894431	IfStatement	if ( input [ 2 ] )		894313	1					
ANR	894432	Condition	input [ 2 ]	3173:6:92107:92114	894313	0	True				
ANR	894433	ArrayIndexing	input [ 2 ]		894313	0					
ANR	894434	Identifier	input		894313	0					
ANR	894435	PrimaryExpression	2		894313	1					
ANR	894436	CompoundStatement		22:3:402:461	894313	1					
ANR	894437	IdentifierDeclStatement	"ut64 addr = r_num_tail ( core -> num , core -> offset , input + 2 ) ;"	3174:3:92122:92181	894313	0	True				
ANR	894438	IdentifierDecl	"addr = r_num_tail ( core -> num , core -> offset , input + 2 )"		894313	0					
ANR	894439	IdentifierDeclType	ut64		894313	0					
ANR	894440	Identifier	addr		894313	1					
ANR	894441	AssignmentExpression	"addr = r_num_tail ( core -> num , core -> offset , input + 2 )"		894313	2		=			
ANR	894442	Identifier	addr		894313	0					
ANR	894443	CallExpression	"r_num_tail ( core -> num , core -> offset , input + 2 )"		894313	1					
ANR	894444	Callee	r_num_tail		894313	0					
ANR	894445	Identifier	r_num_tail		894313	0					
ANR	894446	ArgumentList	core -> num		894313	1					
ANR	894447	Argument	core -> num		894313	0					
ANR	894448	PtrMemberAccess	core -> num		894313	0					
ANR	894449	Identifier	core		894313	0					
ANR	894450	Identifier	num		894313	1					
ANR	894451	Argument	core -> offset		894313	1					
ANR	894452	PtrMemberAccess	core -> offset		894313	0					
ANR	894453	Identifier	core		894313	0					
ANR	894454	Identifier	offset		894313	1					
ANR	894455	Argument	input + 2		894313	2					
ANR	894456	AdditiveExpression	input + 2		894313	0		+			
ANR	894457	Identifier	input		894313	0					
ANR	894458	PrimaryExpression	2		894313	1					
ANR	894459	IfStatement	"if ( validAddress ( core , addr ) )"		894313	1					
ANR	894460	Condition	"validAddress ( core , addr )"	3175:7:92190:92214	894313	0	True				
ANR	894461	CallExpression	"validAddress ( core , addr )"		894313	0					
ANR	894462	Callee	validAddress		894313	0					
ANR	894463	Identifier	validAddress		894313	0					
ANR	894464	ArgumentList	core		894313	1					
ANR	894465	Argument	core		894313	0					
ANR	894466	Identifier	core		894313	0					
ANR	894467	Argument	addr		894313	1					
ANR	894468	Identifier	addr		894313	0					
ANR	894469	CompoundStatement		23:34:497:497	894313	1					
ANR	894470	ExpressionStatement	"bpi = r_debug_bp_add ( core -> dbg , addr , hwbp , false , 0 , NULL , 0 )"	3176:4:92223:92286	894313	0	True				
ANR	894471	AssignmentExpression	"bpi = r_debug_bp_add ( core -> dbg , addr , hwbp , false , 0 , NULL , 0 )"		894313	0		=			
ANR	894472	Identifier	bpi		894313	0					
ANR	894473	CallExpression	"r_debug_bp_add ( core -> dbg , addr , hwbp , false , 0 , NULL , 0 )"		894313	1					
ANR	894474	Callee	r_debug_bp_add		894313	0					
ANR	894475	Identifier	r_debug_bp_add		894313	0					
ANR	894476	ArgumentList	core -> dbg		894313	1					
ANR	894477	Argument	core -> dbg		894313	0					
ANR	894478	PtrMemberAccess	core -> dbg		894313	0					
ANR	894479	Identifier	core		894313	0					
ANR	894480	Identifier	dbg		894313	1					
ANR	894481	Argument	addr		894313	1					
ANR	894482	Identifier	addr		894313	0					
ANR	894483	Argument	hwbp		894313	2					
ANR	894484	Identifier	hwbp		894313	0					
ANR	894485	Argument	false		894313	3					
ANR	894486	Identifier	false		894313	0					
ANR	894487	Argument	0		894313	4					
ANR	894488	PrimaryExpression	0		894313	0					
ANR	894489	Argument	NULL		894313	5					
ANR	894490	Identifier	NULL		894313	0					
ANR	894491	Argument	0		894313	6					
ANR	894492	PrimaryExpression	0		894313	0					
ANR	894493	IfStatement	if ( ! bpi )		894313	1					
ANR	894494	Condition	! bpi	3177:8:92296:92299	894313	0	True				
ANR	894495	UnaryOperationExpression	! bpi		894313	0					
ANR	894496	UnaryOperator	!		894313	0					
ANR	894497	Identifier	bpi		894313	1					
ANR	894498	CompoundStatement		25:14:582:582	894313	1					
ANR	894499	ExpressionStatement	"eprintf ( ""Unable to add breakpoint (%s)\\n"" , input + 2 )"	3178:5:92309:92363	894313	0	True				
ANR	894500	CallExpression	"eprintf ( ""Unable to add breakpoint (%s)\\n"" , input + 2 )"		894313	0					
ANR	894501	Callee	eprintf		894313	0					
ANR	894502	Identifier	eprintf		894313	0					
ANR	894503	ArgumentList	"""Unable to add breakpoint (%s)\\n"""		894313	1					
ANR	894504	Argument	"""Unable to add breakpoint (%s)\\n"""		894313	0					
ANR	894505	PrimaryExpression	"""Unable to add breakpoint (%s)\\n"""		894313	0					
ANR	894506	Argument	input + 2		894313	1					
ANR	894507	AdditiveExpression	input + 2		894313	0		+			
ANR	894508	Identifier	input		894313	0					
ANR	894509	PrimaryExpression	2		894313	1					
ANR	894510	ElseStatement	else		894313	0					
ANR	894511	CompoundStatement		28:10:661:661	894313	0					
ANR	894512	ExpressionStatement	"eprintf ( ""Invalid address\\n"" )"	3181:4:92387:92416	894313	0	True				
ANR	894513	CallExpression	"eprintf ( ""Invalid address\\n"" )"		894313	0					
ANR	894514	Callee	eprintf		894313	0					
ANR	894515	Identifier	eprintf		894313	0					
ANR	894516	ArgumentList	"""Invalid address\\n"""		894313	1					
ANR	894517	Argument	"""Invalid address\\n"""		894313	0					
ANR	894518	PrimaryExpression	"""Invalid address\\n"""		894313	0					
ANR	894519	ElseStatement	else		894313	0					
ANR	894520	CompoundStatement		31:9:712:712	894313	0					
ANR	894521	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , core -> offset )"	3184:3:92437:92484	894313	0	True				
ANR	894522	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , core -> offset )"		894313	0		=			
ANR	894523	Identifier	bpi		894313	0					
ANR	894524	CallExpression	"r_bp_get_at ( core -> dbg -> bp , core -> offset )"		894313	1					
ANR	894525	Callee	r_bp_get_at		894313	0					
ANR	894526	Identifier	r_bp_get_at		894313	0					
ANR	894527	ArgumentList	core -> dbg -> bp		894313	1					
ANR	894528	Argument	core -> dbg -> bp		894313	0					
ANR	894529	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	894530	PtrMemberAccess	core -> dbg		894313	0					
ANR	894531	Identifier	core		894313	0					
ANR	894532	Identifier	dbg		894313	1					
ANR	894533	Identifier	bp		894313	1					
ANR	894534	Argument	core -> offset		894313	1					
ANR	894535	PtrMemberAccess	core -> offset		894313	0					
ANR	894536	Identifier	core		894313	0					
ANR	894537	Identifier	offset		894313	1					
ANR	894538	IfStatement	if ( bpi )		894313	1					
ANR	894539	Condition	bpi	3185:7:92493:92495	894313	0	True				
ANR	894540	Identifier	bpi		894313	0					
ANR	894541	CompoundStatement		33:12:778:778	894313	1					
ANR	894542	ExpressionStatement	"r_cons_printf ( ""breakpoint %s %s %s\\n"" , r_str_rwx_i ( bpi -> perm ) , bpi -> enabled ? ""enabled"" : ""disabled"" , bpi -> name ? bpi -> name : """" )"	3186:4:92504:92654	894313	0	True				
ANR	894543	CallExpression	"r_cons_printf ( ""breakpoint %s %s %s\\n"" , r_str_rwx_i ( bpi -> perm ) , bpi -> enabled ? ""enabled"" : ""disabled"" , bpi -> name ? bpi -> name : """" )"		894313	0					
ANR	894544	Callee	r_cons_printf		894313	0					
ANR	894545	Identifier	r_cons_printf		894313	0					
ANR	894546	ArgumentList	"""breakpoint %s %s %s\\n"""		894313	1					
ANR	894547	Argument	"""breakpoint %s %s %s\\n"""		894313	0					
ANR	894548	PrimaryExpression	"""breakpoint %s %s %s\\n"""		894313	0					
ANR	894549	Argument	r_str_rwx_i ( bpi -> perm )		894313	1					
ANR	894550	CallExpression	r_str_rwx_i ( bpi -> perm )		894313	0					
ANR	894551	Callee	r_str_rwx_i		894313	0					
ANR	894552	Identifier	r_str_rwx_i		894313	0					
ANR	894553	ArgumentList	bpi -> perm		894313	1					
ANR	894554	Argument	bpi -> perm		894313	0					
ANR	894555	PtrMemberAccess	bpi -> perm		894313	0					
ANR	894556	Identifier	bpi		894313	0					
ANR	894557	Identifier	perm		894313	1					
ANR	894558	Argument	"bpi -> enabled ? ""enabled"" : ""disabled"""		894313	2					
ANR	894559	ConditionalExpression	"bpi -> enabled ? ""enabled"" : ""disabled"""		894313	0					
ANR	894560	Condition	bpi -> enabled		894313	0					
ANR	894561	PtrMemberAccess	bpi -> enabled		894313	0					
ANR	894562	Identifier	bpi		894313	0					
ANR	894563	Identifier	enabled		894313	1					
ANR	894564	PrimaryExpression	"""enabled"""		894313	1					
ANR	894565	PrimaryExpression	"""disabled"""		894313	2					
ANR	894566	Argument	"bpi -> name ? bpi -> name : """""		894313	3					
ANR	894567	ConditionalExpression	"bpi -> name ? bpi -> name : """""		894313	0					
ANR	894568	Condition	bpi -> name		894313	0					
ANR	894569	PtrMemberAccess	bpi -> name		894313	0					
ANR	894570	Identifier	bpi		894313	0					
ANR	894571	Identifier	name		894313	1					
ANR	894572	PtrMemberAccess	bpi -> name		894313	1					
ANR	894573	Identifier	bpi		894313	0					
ANR	894574	Identifier	name		894313	1					
ANR	894575	PrimaryExpression	""""""		894313	2					
ANR	894576	BreakStatement	break ;	3192:2:92667:92672	894313	2	True				
ANR	894577	Label	case 'f' :	3193:1:92675:92683	894313	3	True				
ANR	894578	CompoundStatement		44:2:1021:1039	894313	4					
ANR	894579	IdentifierDeclStatement	RList * symbols = r_bin_get_symbols ( core -> bin ) ;	3195:2:92691:92737	894313	0	True				
ANR	894580	IdentifierDecl	* symbols = r_bin_get_symbols ( core -> bin )		894313	0					
ANR	894581	IdentifierDeclType	RList *		894313	0					
ANR	894582	Identifier	symbols		894313	1					
ANR	894583	AssignmentExpression	* symbols = r_bin_get_symbols ( core -> bin )		894313	2		=			
ANR	894584	Identifier	symbols		894313	0					
ANR	894585	CallExpression	r_bin_get_symbols ( core -> bin )		894313	1					
ANR	894586	Callee	r_bin_get_symbols		894313	0					
ANR	894587	Identifier	r_bin_get_symbols		894313	0					
ANR	894588	ArgumentList	core -> bin		894313	1					
ANR	894589	Argument	core -> bin		894313	0					
ANR	894590	PtrMemberAccess	core -> bin		894313	0					
ANR	894591	Identifier	core		894313	0					
ANR	894592	Identifier	bin		894313	1					
ANR	894593	IdentifierDeclStatement	RBinSymbol * symbol ;	3196:2:92741:92759	894313	1	True				
ANR	894594	IdentifierDecl	* symbol		894313	0					
ANR	894595	IdentifierDeclType	RBinSymbol *		894313	0					
ANR	894596	Identifier	symbol		894313	1					
ANR	894597	Statement	r_list_foreach	3197:2:92763:92776	894313	2	True				
ANR	894598	Statement	(	3197:17:92778:92778	894313	3	True				
ANR	894599	Statement	symbols	3197:18:92779:92785	894313	4	True				
ANR	894600	Statement	","	3197:25:92786:92786	894313	5	True				
ANR	894601	Statement	iter	3197:27:92788:92791	894313	6	True				
ANR	894602	Statement	","	3197:31:92792:92792	894313	7	True				
ANR	894603	Statement	symbol	3197:33:92794:92799	894313	8	True				
ANR	894604	Statement	)	3197:39:92800:92800	894313	9	True				
ANR	894605	CompoundStatement		45:41:1082:1082	894313	10					
ANR	894606	IfStatement	"if ( symbol -> type && ! strcmp ( symbol -> type , R_BIN_TYPE_FUNC_STR ) )"		894313	0					
ANR	894607	Condition	"symbol -> type && ! strcmp ( symbol -> type , R_BIN_TYPE_FUNC_STR )"	3198:7:92811:92869	894313	0	True				
ANR	894608	AndExpression	"symbol -> type && ! strcmp ( symbol -> type , R_BIN_TYPE_FUNC_STR )"		894313	0		&&			
ANR	894609	PtrMemberAccess	symbol -> type		894313	0					
ANR	894610	Identifier	symbol		894313	0					
ANR	894611	Identifier	type		894313	1					
ANR	894612	UnaryOperationExpression	"! strcmp ( symbol -> type , R_BIN_TYPE_FUNC_STR )"		894313	1					
ANR	894613	UnaryOperator	!		894313	0					
ANR	894614	CallExpression	"strcmp ( symbol -> type , R_BIN_TYPE_FUNC_STR )"		894313	1					
ANR	894615	Callee	strcmp		894313	0					
ANR	894616	Identifier	strcmp		894313	0					
ANR	894617	ArgumentList	symbol -> type		894313	1					
ANR	894618	Argument	symbol -> type		894313	0					
ANR	894619	PtrMemberAccess	symbol -> type		894313	0					
ANR	894620	Identifier	symbol		894313	0					
ANR	894621	Identifier	type		894313	1					
ANR	894622	Argument	R_BIN_TYPE_FUNC_STR		894313	1					
ANR	894623	Identifier	R_BIN_TYPE_FUNC_STR		894313	0					
ANR	894624	CompoundStatement		46:68:1152:1152	894313	1					
ANR	894625	IfStatement	"if ( r_anal_noreturn_at ( core -> anal , symbol -> vaddr ) )"		894313	0					
ANR	894626	Condition	"r_anal_noreturn_at ( core -> anal , symbol -> vaddr )"	3199:8:92882:92927	894313	0	True				
ANR	894627	CallExpression	"r_anal_noreturn_at ( core -> anal , symbol -> vaddr )"		894313	0					
ANR	894628	Callee	r_anal_noreturn_at		894313	0					
ANR	894629	Identifier	r_anal_noreturn_at		894313	0					
ANR	894630	ArgumentList	core -> anal		894313	1					
ANR	894631	Argument	core -> anal		894313	0					
ANR	894632	PtrMemberAccess	core -> anal		894313	0					
ANR	894633	Identifier	core		894313	0					
ANR	894634	Identifier	anal		894313	1					
ANR	894635	Argument	symbol -> vaddr		894313	1					
ANR	894636	PtrMemberAccess	symbol -> vaddr		894313	0					
ANR	894637	Identifier	symbol		894313	0					
ANR	894638	Identifier	vaddr		894313	1					
ANR	894639	CompoundStatement		47:56:1210:1210	894313	1					
ANR	894640	ExpressionStatement	"bpi = r_debug_bp_add ( core -> dbg , symbol -> vaddr , hwbp , false , 0 , NULL , 0 )"	3200:5:92937:93009	894313	0	True				
ANR	894641	AssignmentExpression	"bpi = r_debug_bp_add ( core -> dbg , symbol -> vaddr , hwbp , false , 0 , NULL , 0 )"		894313	0		=			
ANR	894642	Identifier	bpi		894313	0					
ANR	894643	CallExpression	"r_debug_bp_add ( core -> dbg , symbol -> vaddr , hwbp , false , 0 , NULL , 0 )"		894313	1					
ANR	894644	Callee	r_debug_bp_add		894313	0					
ANR	894645	Identifier	r_debug_bp_add		894313	0					
ANR	894646	ArgumentList	core -> dbg		894313	1					
ANR	894647	Argument	core -> dbg		894313	0					
ANR	894648	PtrMemberAccess	core -> dbg		894313	0					
ANR	894649	Identifier	core		894313	0					
ANR	894650	Identifier	dbg		894313	1					
ANR	894651	Argument	symbol -> vaddr		894313	1					
ANR	894652	PtrMemberAccess	symbol -> vaddr		894313	0					
ANR	894653	Identifier	symbol		894313	0					
ANR	894654	Identifier	vaddr		894313	1					
ANR	894655	Argument	hwbp		894313	2					
ANR	894656	Identifier	hwbp		894313	0					
ANR	894657	Argument	false		894313	3					
ANR	894658	Identifier	false		894313	0					
ANR	894659	Argument	0		894313	4					
ANR	894660	PrimaryExpression	0		894313	0					
ANR	894661	Argument	NULL		894313	5					
ANR	894662	Identifier	NULL		894313	0					
ANR	894663	Argument	0		894313	6					
ANR	894664	PrimaryExpression	0		894313	0					
ANR	894665	IfStatement	if ( bpi )		894313	1					
ANR	894666	Condition	bpi	3201:9:93020:93022	894313	0	True				
ANR	894667	Identifier	bpi		894313	0					
ANR	894668	CompoundStatement		49:14:1305:1305	894313	1					
ANR	894669	ExpressionStatement	"bpi -> name = r_str_newf ( ""%s.%s"" , ""sym"" , symbol -> name )"	3202:6:93033:93086	894313	0	True				
ANR	894670	AssignmentExpression	"bpi -> name = r_str_newf ( ""%s.%s"" , ""sym"" , symbol -> name )"		894313	0		=			
ANR	894671	PtrMemberAccess	bpi -> name		894313	0					
ANR	894672	Identifier	bpi		894313	0					
ANR	894673	Identifier	name		894313	1					
ANR	894674	CallExpression	"r_str_newf ( ""%s.%s"" , ""sym"" , symbol -> name )"		894313	1					
ANR	894675	Callee	r_str_newf		894313	0					
ANR	894676	Identifier	r_str_newf		894313	0					
ANR	894677	ArgumentList	"""%s.%s"""		894313	1					
ANR	894678	Argument	"""%s.%s"""		894313	0					
ANR	894679	PrimaryExpression	"""%s.%s"""		894313	0					
ANR	894680	Argument	"""sym"""		894313	1					
ANR	894681	PrimaryExpression	"""sym"""		894313	0					
ANR	894682	Argument	symbol -> name		894313	2					
ANR	894683	PtrMemberAccess	symbol -> name		894313	0					
ANR	894684	Identifier	symbol		894313	0					
ANR	894685	Identifier	name		894313	1					
ANR	894686	ElseStatement	else		894313	0					
ANR	894687	CompoundStatement		51:12:1380:1380	894313	0					
ANR	894688	Statement	eprintf	3204:6:93108:93114	894313	0	True				
ANR	894689	Statement	(	3204:14:93116:93116	894313	1	True				
ANR	894690	Statement	"""Unable to add a breakpoint"""	3204:15:93117:93144	894313	2	True				
ANR	894691	Statement	"""into a noreturn function %s at addr 0x%"""	3205:6:93152:93192	894313	3	True				
ANR	894692	Statement	PFMT64x	3205:47:93193:93199	894313	4	True				
ANR	894693	Statement	"""\\n"""	3205:54:93200:93203	894313	5	True				
ANR	894694	Statement	","	3205:58:93204:93204	894313	6	True				
ANR	894695	Statement	symbol	3206:9:93215:93220	894313	7	True				
ANR	894696	Statement	->	3206:15:93221:93222	894313	8	True				
ANR	894697	Statement	name	3206:17:93223:93226	894313	9	True				
ANR	894698	Statement	","	3206:21:93227:93227	894313	10	True				
ANR	894699	Statement	symbol	3206:23:93229:93234	894313	11	True				
ANR	894700	Statement	->	3206:29:93235:93236	894313	12	True				
ANR	894701	Statement	vaddr	3206:31:93237:93241	894313	13	True				
ANR	894702	Statement	)	3206:36:93242:93242	894313	14	True				
ANR	894703	ExpressionStatement		3206:37:93243:93243	894313	15	True				
ANR	894704	BreakStatement	break ;	3212:2:93273:93278	894313	5	True				
ANR	894705	Label	case 'x' :	3213:1:93281:93289	894313	6	True				
ANR	894706	IfStatement	if ( input [ 2 ] == ' ' )		894313	7					
ANR	894707	Condition	input [ 2 ] == ' '	3214:6:93306:93320	894313	0	True				
ANR	894708	EqualityExpression	input [ 2 ] == ' '		894313	0		==			
ANR	894709	ArrayIndexing	input [ 2 ]		894313	0					
ANR	894710	Identifier	input		894313	0					
ANR	894711	PrimaryExpression	2		894313	1					
ANR	894712	PrimaryExpression	' '		894313	1					
ANR	894713	CompoundStatement		62:23:1603:1603	894313	1					
ANR	894714	IfStatement	if ( addr == UT64_MAX )		894313	0					
ANR	894715	Condition	addr == UT64_MAX	3215:7:93332:93347	894313	0	True				
ANR	894716	EqualityExpression	addr == UT64_MAX		894313	0		==			
ANR	894717	Identifier	addr		894313	0					
ANR	894718	Identifier	UT64_MAX		894313	1					
ANR	894719	CompoundStatement		63:25:1630:1630	894313	1					
ANR	894720	ExpressionStatement	addr = core -> offset	3216:4:93356:93375	894313	0	True				
ANR	894721	AssignmentExpression	addr = core -> offset		894313	0		=			
ANR	894722	Identifier	addr		894313	0					
ANR	894723	PtrMemberAccess	core -> offset		894313	1					
ANR	894724	Identifier	core		894313	0					
ANR	894725	Identifier	offset		894313	1					
ANR	894726	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"	3218:3:93385:93424	894313	1	True				
ANR	894727	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		894313	0		=			
ANR	894728	Identifier	bpi		894313	0					
ANR	894729	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		894313	1					
ANR	894730	Callee	r_bp_get_at		894313	0					
ANR	894731	Identifier	r_bp_get_at		894313	0					
ANR	894732	ArgumentList	core -> dbg -> bp		894313	1					
ANR	894733	Argument	core -> dbg -> bp		894313	0					
ANR	894734	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	894735	PtrMemberAccess	core -> dbg		894313	0					
ANR	894736	Identifier	core		894313	0					
ANR	894737	Identifier	dbg		894313	1					
ANR	894738	Identifier	bp		894313	1					
ANR	894739	Argument	addr		894313	1					
ANR	894740	Identifier	addr		894313	0					
ANR	894741	IfStatement	if ( bpi )		894313	2					
ANR	894742	Condition	bpi	3219:7:93433:93435	894313	0	True				
ANR	894743	Identifier	bpi		894313	0					
ANR	894744	CompoundStatement		67:12:1718:1718	894313	1					
ANR	894745	ExpressionStatement	free ( bpi -> expr )	3220:4:93444:93460	894313	0	True				
ANR	894746	CallExpression	free ( bpi -> expr )		894313	0					
ANR	894747	Callee	free		894313	0					
ANR	894748	Identifier	free		894313	0					
ANR	894749	ArgumentList	bpi -> expr		894313	1					
ANR	894750	Argument	bpi -> expr		894313	0					
ANR	894751	PtrMemberAccess	bpi -> expr		894313	0					
ANR	894752	Identifier	bpi		894313	0					
ANR	894753	Identifier	expr		894313	1					
ANR	894754	ExpressionStatement	bpi -> expr = strdup ( input + 3 )	3221:4:93466:93496	894313	1	True				
ANR	894755	AssignmentExpression	bpi -> expr = strdup ( input + 3 )		894313	0		=			
ANR	894756	PtrMemberAccess	bpi -> expr		894313	0					
ANR	894757	Identifier	bpi		894313	0					
ANR	894758	Identifier	expr		894313	1					
ANR	894759	CallExpression	strdup ( input + 3 )		894313	1					
ANR	894760	Callee	strdup		894313	0					
ANR	894761	Identifier	strdup		894313	0					
ANR	894762	ArgumentList	input + 3		894313	1					
ANR	894763	Argument	input + 3		894313	0					
ANR	894764	AdditiveExpression	input + 3		894313	0		+			
ANR	894765	Identifier	input		894313	0					
ANR	894766	PrimaryExpression	3		894313	1					
ANR	894767	ElseStatement	else		894313	0					
ANR	894768	CompoundStatement		72:3:1797:1816	894313	0					
ANR	894769	IdentifierDeclStatement	RBreakpointItem * bp ;	3224:3:93517:93536	894313	0	True				
ANR	894770	IdentifierDecl	* bp		894313	0					
ANR	894771	IdentifierDeclType	RBreakpointItem *		894313	0					
ANR	894772	Identifier	bp		894313	1					
ANR	894773	Statement	r_list_foreach	3225:3:93541:93554	894313	1	True				
ANR	894774	Statement	(	3225:18:93556:93556	894313	2	True				
ANR	894775	Statement	core	3225:19:93557:93560	894313	3	True				
ANR	894776	Statement	->	3225:23:93561:93562	894313	4	True				
ANR	894777	Statement	dbg	3225:25:93563:93565	894313	5	True				
ANR	894778	Statement	->	3225:28:93566:93567	894313	6	True				
ANR	894779	Statement	bp	3225:30:93568:93569	894313	7	True				
ANR	894780	Statement	->	3225:32:93570:93571	894313	8	True				
ANR	894781	Statement	bps	3225:34:93572:93574	894313	9	True				
ANR	894782	Statement	","	3225:37:93575:93575	894313	10	True				
ANR	894783	Statement	iter	3225:39:93577:93580	894313	11	True				
ANR	894784	Statement	","	3225:43:93581:93581	894313	12	True				
ANR	894785	Statement	bp	3225:45:93583:93584	894313	13	True				
ANR	894786	Statement	)	3225:47:93585:93585	894313	14	True				
ANR	894787	CompoundStatement		73:49:1867:1867	894313	15					
ANR	894788	Statement	r_cons_printf	3226:4:93593:93605	894313	0	True				
ANR	894789	Statement	(	3226:18:93607:93607	894313	1	True				
ANR	894790	Statement	"""0x%08"""	3226:19:93608:93614	894313	2	True				
ANR	894791	Statement	PFMT64x	3226:26:93615:93621	894313	3	True				
ANR	894792	Statement	""" %s\\n"""	3226:33:93622:93628	894313	4	True				
ANR	894793	Statement	","	3226:40:93629:93629	894313	5	True				
ANR	894794	Statement	bp	3226:42:93631:93632	894313	6	True				
ANR	894795	Statement	->	3226:44:93633:93634	894313	7	True				
ANR	894796	Statement	addr	3226:46:93635:93638	894313	8	True				
ANR	894797	Statement	","	3226:50:93639:93639	894313	9	True				
ANR	894798	Statement	r_str_get2	3226:52:93641:93650	894313	10	True				
ANR	894799	Statement	(	3226:63:93652:93652	894313	11	True				
ANR	894800	Statement	bp	3226:64:93653:93654	894313	12	True				
ANR	894801	Statement	->	3226:66:93655:93656	894313	13	True				
ANR	894802	Statement	expr	3226:68:93657:93660	894313	14	True				
ANR	894803	Statement	)	3226:72:93661:93661	894313	15	True				
ANR	894804	Statement	)	3226:73:93662:93662	894313	16	True				
ANR	894805	ExpressionStatement		3226:74:93663:93663	894313	17	True				
ANR	894806	BreakStatement	break ;	3229:2:93676:93681	894313	8	True				
ANR	894807	Label	case 't' :	3230:1:93684:93692	894313	9	True				
ANR	894808	SwitchStatement	switch ( input [ 2 ] )		894313	10					
ANR	894809	Condition	input [ 2 ]	3231:10:93713:93720	894313	0	True				
ANR	894810	ArrayIndexing	input [ 2 ]		894313	0					
ANR	894811	Identifier	input		894313	0					
ANR	894812	PrimaryExpression	2		894313	1					
ANR	894813	CompoundStatement		79:20:2003:2003	894313	1					
ANR	894814	Label	case 'v' :	3232:2:93727:93735	894313	0	True				
ANR	894815	ExpressionStatement	"list = r_debug_frames ( core -> dbg , addr )"	3233:3:93750:93789	894313	1	True				
ANR	894816	AssignmentExpression	"list = r_debug_frames ( core -> dbg , addr )"		894313	0		=			
ANR	894817	Identifier	list		894313	0					
ANR	894818	CallExpression	"r_debug_frames ( core -> dbg , addr )"		894313	1					
ANR	894819	Callee	r_debug_frames		894313	0					
ANR	894820	Identifier	r_debug_frames		894313	0					
ANR	894821	ArgumentList	core -> dbg		894313	1					
ANR	894822	Argument	core -> dbg		894313	0					
ANR	894823	PtrMemberAccess	core -> dbg		894313	0					
ANR	894824	Identifier	core		894313	0					
ANR	894825	Identifier	dbg		894313	1					
ANR	894826	Argument	addr		894313	1					
ANR	894827	Identifier	addr		894313	0					
ANR	894828	ExpressionStatement	"backtrace_vars ( core , list )"	3234:3:93794:93821	894313	2	True				
ANR	894829	CallExpression	"backtrace_vars ( core , list )"		894313	0					
ANR	894830	Callee	backtrace_vars		894313	0					
ANR	894831	Identifier	backtrace_vars		894313	0					
ANR	894832	ArgumentList	core		894313	1					
ANR	894833	Argument	core		894313	0					
ANR	894834	Identifier	core		894313	0					
ANR	894835	Argument	list		894313	1					
ANR	894836	Identifier	list		894313	0					
ANR	894837	ExpressionStatement	r_list_free ( list )	3235:3:93826:93844	894313	3	True				
ANR	894838	CallExpression	r_list_free ( list )		894313	0					
ANR	894839	Callee	r_list_free		894313	0					
ANR	894840	Identifier	r_list_free		894313	0					
ANR	894841	ArgumentList	list		894313	1					
ANR	894842	Argument	list		894313	0					
ANR	894843	Identifier	list		894313	0					
ANR	894844	BreakStatement	break ;	3236:3:93849:93854	894313	4	True				
ANR	894845	Label	case 'a' :	3237:2:93858:93866	894313	5	True				
ANR	894846	ExpressionStatement	"list = r_debug_frames ( core -> dbg , addr )"	3238:3:93881:93920	894313	6	True				
ANR	894847	AssignmentExpression	"list = r_debug_frames ( core -> dbg , addr )"		894313	0		=			
ANR	894848	Identifier	list		894313	0					
ANR	894849	CallExpression	"r_debug_frames ( core -> dbg , addr )"		894313	1					
ANR	894850	Callee	r_debug_frames		894313	0					
ANR	894851	Identifier	r_debug_frames		894313	0					
ANR	894852	ArgumentList	core -> dbg		894313	1					
ANR	894853	Argument	core -> dbg		894313	0					
ANR	894854	PtrMemberAccess	core -> dbg		894313	0					
ANR	894855	Identifier	core		894313	0					
ANR	894856	Identifier	dbg		894313	1					
ANR	894857	Argument	addr		894313	1					
ANR	894858	Identifier	addr		894313	0					
ANR	894859	ExpressionStatement	"asciiart_backtrace ( core , list )"	3239:3:93925:93956	894313	7	True				
ANR	894860	CallExpression	"asciiart_backtrace ( core , list )"		894313	0					
ANR	894861	Callee	asciiart_backtrace		894313	0					
ANR	894862	Identifier	asciiart_backtrace		894313	0					
ANR	894863	ArgumentList	core		894313	1					
ANR	894864	Argument	core		894313	0					
ANR	894865	Identifier	core		894313	0					
ANR	894866	Argument	list		894313	1					
ANR	894867	Identifier	list		894313	0					
ANR	894868	ExpressionStatement	r_list_free ( list )	3240:3:93961:93979	894313	8	True				
ANR	894869	CallExpression	r_list_free ( list )		894313	0					
ANR	894870	Callee	r_list_free		894313	0					
ANR	894871	Identifier	r_list_free		894313	0					
ANR	894872	ArgumentList	list		894313	1					
ANR	894873	Argument	list		894313	0					
ANR	894874	Identifier	list		894313	0					
ANR	894875	BreakStatement	break ;	3241:3:93984:93989	894313	9	True				
ANR	894876	Label	case 'e' :	3242:2:93993:94001	894313	10	True				
ANR	894877	ForStatement	for ( p = input + 3 ; * p == ' ' ; p ++ )		894313	11					
ANR	894878	ForInit	p = input + 3 ;	3243:8:94021:94034	894313	0	True				
ANR	894879	AssignmentExpression	p = input + 3		894313	0		=			
ANR	894880	Identifier	p		894313	0					
ANR	894881	AdditiveExpression	input + 3		894313	1		+			
ANR	894882	Identifier	input		894313	0					
ANR	894883	PrimaryExpression	3		894313	1					
ANR	894884	Condition	* p == ' '	3243:23:94036:94044	894313	1	True				
ANR	894885	EqualityExpression	* p == ' '		894313	0		==			
ANR	894886	UnaryOperationExpression	* p		894313	0					
ANR	894887	UnaryOperator	*		894313	0					
ANR	894888	Identifier	p		894313	1					
ANR	894889	PrimaryExpression	' '		894313	1					
ANR	894890	PostIncDecOperationExpression	p ++	3243:34:94047:94049	894313	2	True				
ANR	894891	Identifier	p		894313	0					
ANR	894892	IncDec	++		894313	1					
ANR	894893	CompoundStatement		91:39:2332:2332	894313	3					
ANR	894894	IfStatement	if ( * p == '*' )		894313	12					
ANR	894895	Condition	* p == '*'	3246:7:94095:94103	894313	0	True				
ANR	894896	EqualityExpression	* p == '*'		894313	0		==			
ANR	894897	UnaryOperationExpression	* p		894313	0					
ANR	894898	UnaryOperator	*		894313	0					
ANR	894899	Identifier	p		894313	1					
ANR	894900	PrimaryExpression	'*'		894313	1					
ANR	894901	CompoundStatement		94:18:2386:2386	894313	1					
ANR	894902	ExpressionStatement	"r_bp_set_trace_all ( core -> dbg -> bp , true )"	3247:4:94112:94151	894313	0	True				
ANR	894903	CallExpression	"r_bp_set_trace_all ( core -> dbg -> bp , true )"		894313	0					
ANR	894904	Callee	r_bp_set_trace_all		894313	0					
ANR	894905	Identifier	r_bp_set_trace_all		894313	0					
ANR	894906	ArgumentList	core -> dbg -> bp		894313	1					
ANR	894907	Argument	core -> dbg -> bp		894313	0					
ANR	894908	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	894909	PtrMemberAccess	core -> dbg		894313	0					
ANR	894910	Identifier	core		894313	0					
ANR	894911	Identifier	dbg		894313	1					
ANR	894912	Identifier	bp		894313	1					
ANR	894913	Argument	true		894313	1					
ANR	894914	Identifier	true		894313	0					
ANR	894915	ElseStatement	else		894313	0					
ANR	894916	IfStatement	"if ( ! r_bp_set_trace ( core -> dbg -> bp , addr , true ) )"		894313	0					
ANR	894917	Condition	"! r_bp_set_trace ( core -> dbg -> bp , addr , true )"	3248:14:94167:94209	894313	0	True				
ANR	894918	UnaryOperationExpression	"! r_bp_set_trace ( core -> dbg -> bp , addr , true )"		894313	0					
ANR	894919	UnaryOperator	!		894313	0					
ANR	894920	CallExpression	"r_bp_set_trace ( core -> dbg -> bp , addr , true )"		894313	1					
ANR	894921	Callee	r_bp_set_trace		894313	0					
ANR	894922	Identifier	r_bp_set_trace		894313	0					
ANR	894923	ArgumentList	core -> dbg -> bp		894313	1					
ANR	894924	Argument	core -> dbg -> bp		894313	0					
ANR	894925	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	894926	PtrMemberAccess	core -> dbg		894313	0					
ANR	894927	Identifier	core		894313	0					
ANR	894928	Identifier	dbg		894313	1					
ANR	894929	Identifier	bp		894313	1					
ANR	894930	Argument	addr		894313	1					
ANR	894931	Identifier	addr		894313	0					
ANR	894932	Argument	true		894313	2					
ANR	894933	Identifier	true		894313	0					
ANR	894934	CompoundStatement		96:59:2492:2492	894313	1					
ANR	894935	ExpressionStatement	"eprintf ( ""Cannot set tracepoint\\n"" )"	3249:4:94218:94253	894313	0	True				
ANR	894936	CallExpression	"eprintf ( ""Cannot set tracepoint\\n"" )"		894313	0					
ANR	894937	Callee	eprintf		894313	0					
ANR	894938	Identifier	eprintf		894313	0					
ANR	894939	ArgumentList	"""Cannot set tracepoint\\n"""		894313	1					
ANR	894940	Argument	"""Cannot set tracepoint\\n"""		894313	0					
ANR	894941	PrimaryExpression	"""Cannot set tracepoint\\n"""		894313	0					
ANR	894942	BreakStatement	break ;	3251:3:94263:94268	894313	13	True				
ANR	894943	Label	case 'd' :	3252:2:94272:94280	894313	14	True				
ANR	894944	ForStatement	for ( p = input + 3 ; * p == ' ' ; p ++ )		894313	15					
ANR	894945	ForInit	p = input + 3 ;	3253:8:94300:94313	894313	0	True				
ANR	894946	AssignmentExpression	p = input + 3		894313	0		=			
ANR	894947	Identifier	p		894313	0					
ANR	894948	AdditiveExpression	input + 3		894313	1		+			
ANR	894949	Identifier	input		894313	0					
ANR	894950	PrimaryExpression	3		894313	1					
ANR	894951	Condition	* p == ' '	3253:23:94315:94321	894313	1	True				
ANR	894952	EqualityExpression	* p == ' '		894313	0		==			
ANR	894953	UnaryOperationExpression	* p		894313	0					
ANR	894954	UnaryOperator	*		894313	0					
ANR	894955	Identifier	p		894313	1					
ANR	894956	PrimaryExpression	' '		894313	1					
ANR	894957	PostIncDecOperationExpression	p ++	3253:31:94323:94325	894313	2	True				
ANR	894958	Identifier	p		894313	0					
ANR	894959	IncDec	++		894313	1					
ANR	894960	CompoundStatement		101:36:2608:2608	894313	3					
ANR	894961	IfStatement	if ( * p == '*' )		894313	16					
ANR	894962	Condition	* p == '*'	3256:7:94368:94376	894313	0	True				
ANR	894963	EqualityExpression	* p == '*'		894313	0		==			
ANR	894964	UnaryOperationExpression	* p		894313	0					
ANR	894965	UnaryOperator	*		894313	0					
ANR	894966	Identifier	p		894313	1					
ANR	894967	PrimaryExpression	'*'		894313	1					
ANR	894968	CompoundStatement		104:18:2659:2659	894313	1					
ANR	894969	ExpressionStatement	"r_bp_set_trace_all ( core -> dbg -> bp , false )"	3257:4:94385:94426	894313	0	True				
ANR	894970	CallExpression	"r_bp_set_trace_all ( core -> dbg -> bp , false )"		894313	0					
ANR	894971	Callee	r_bp_set_trace_all		894313	0					
ANR	894972	Identifier	r_bp_set_trace_all		894313	0					
ANR	894973	ArgumentList	core -> dbg -> bp		894313	1					
ANR	894974	Argument	core -> dbg -> bp		894313	0					
ANR	894975	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	894976	PtrMemberAccess	core -> dbg		894313	0					
ANR	894977	Identifier	core		894313	0					
ANR	894978	Identifier	dbg		894313	1					
ANR	894979	Identifier	bp		894313	1					
ANR	894980	Argument	false		894313	1					
ANR	894981	Identifier	false		894313	0					
ANR	894982	ElseStatement	else		894313	0					
ANR	894983	IfStatement	"if ( ! r_bp_set_trace ( core -> dbg -> bp , addr , false ) )"		894313	0					
ANR	894984	Condition	"! r_bp_set_trace ( core -> dbg -> bp , addr , false )"	3258:14:94442:94485	894313	0	True				
ANR	894985	UnaryOperationExpression	"! r_bp_set_trace ( core -> dbg -> bp , addr , false )"		894313	0					
ANR	894986	UnaryOperator	!		894313	0					
ANR	894987	CallExpression	"r_bp_set_trace ( core -> dbg -> bp , addr , false )"		894313	1					
ANR	894988	Callee	r_bp_set_trace		894313	0					
ANR	894989	Identifier	r_bp_set_trace		894313	0					
ANR	894990	ArgumentList	core -> dbg -> bp		894313	1					
ANR	894991	Argument	core -> dbg -> bp		894313	0					
ANR	894992	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	894993	PtrMemberAccess	core -> dbg		894313	0					
ANR	894994	Identifier	core		894313	0					
ANR	894995	Identifier	dbg		894313	1					
ANR	894996	Identifier	bp		894313	1					
ANR	894997	Argument	addr		894313	1					
ANR	894998	Identifier	addr		894313	0					
ANR	894999	Argument	false		894313	2					
ANR	895000	Identifier	false		894313	0					
ANR	895001	CompoundStatement		106:60:2768:2768	894313	1					
ANR	895002	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3259:4:94494:94531	894313	0	True				
ANR	895003	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		894313	0					
ANR	895004	Callee	eprintf		894313	0					
ANR	895005	Identifier	eprintf		894313	0					
ANR	895006	ArgumentList	"""Cannot unset tracepoint\\n"""		894313	1					
ANR	895007	Argument	"""Cannot unset tracepoint\\n"""		894313	0					
ANR	895008	PrimaryExpression	"""Cannot unset tracepoint\\n"""		894313	0					
ANR	895009	BreakStatement	break ;	3261:3:94541:94546	894313	17	True				
ANR	895010	Label	case 's' :	3262:2:94550:94558	894313	18	True				
ANR	895011	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"	3263:3:94573:94612	894313	19	True				
ANR	895012	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		894313	0		=			
ANR	895013	Identifier	bpi		894313	0					
ANR	895014	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		894313	1					
ANR	895015	Callee	r_bp_get_at		894313	0					
ANR	895016	Identifier	r_bp_get_at		894313	0					
ANR	895017	ArgumentList	core -> dbg -> bp		894313	1					
ANR	895018	Argument	core -> dbg -> bp		894313	0					
ANR	895019	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	895020	PtrMemberAccess	core -> dbg		894313	0					
ANR	895021	Identifier	core		894313	0					
ANR	895022	Identifier	dbg		894313	1					
ANR	895023	Identifier	bp		894313	1					
ANR	895024	Argument	addr		894313	1					
ANR	895025	Identifier	addr		894313	0					
ANR	895026	IfStatement	if ( bpi )		894313	20					
ANR	895027	Condition	bpi	3264:7:94621:94623	894313	0	True				
ANR	895028	Identifier	bpi		894313	0					
ANR	895029	CompoundStatement		112:12:2906:2906	894313	1					
ANR	895030	ExpressionStatement	bpi -> trace = ! ! ! bpi -> trace	3265:4:94632:94658	894313	0	True				
ANR	895031	AssignmentExpression	bpi -> trace = ! ! ! bpi -> trace		894313	0		=			
ANR	895032	PtrMemberAccess	bpi -> trace		894313	0					
ANR	895033	Identifier	bpi		894313	0					
ANR	895034	Identifier	trace		894313	1					
ANR	895035	UnaryOperationExpression	! ! ! bpi -> trace		894313	1					
ANR	895036	UnaryOperator	!		894313	0					
ANR	895037	UnaryOperationExpression	! ! bpi -> trace		894313	1					
ANR	895038	UnaryOperator	!		894313	0					
ANR	895039	UnaryOperationExpression	! bpi -> trace		894313	1					
ANR	895040	UnaryOperator	!		894313	0					
ANR	895041	PtrMemberAccess	bpi -> trace		894313	1					
ANR	895042	Identifier	bpi		894313	0					
ANR	895043	Identifier	trace		894313	1					
ANR	895044	ElseStatement	else		894313	0					
ANR	895045	CompoundStatement		114:10:2950:2950	894313	0					
ANR	895046	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3267:4:94676:94713	894313	0	True				
ANR	895047	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		894313	0					
ANR	895048	Callee	eprintf		894313	0					
ANR	895049	Identifier	eprintf		894313	0					
ANR	895050	ArgumentList	"""Cannot unset tracepoint\\n"""		894313	1					
ANR	895051	Argument	"""Cannot unset tracepoint\\n"""		894313	0					
ANR	895052	PrimaryExpression	"""Cannot unset tracepoint\\n"""		894313	0					
ANR	895053	BreakStatement	break ;	3269:3:94723:94728	894313	21	True				
ANR	895054	Label	case 'j' :	3270:2:94732:94740	894313	22	True				
ANR	895055	ExpressionStatement	addr = UT64_MAX	3271:3:94755:94770	894313	23	True				
ANR	895056	AssignmentExpression	addr = UT64_MAX		894313	0		=			
ANR	895057	Identifier	addr		894313	0					
ANR	895058	Identifier	UT64_MAX		894313	1					
ANR	895059	IfStatement	if ( input [ 2 ] == ' ' && input [ 3 ] )		894313	24					
ANR	895060	Condition	input [ 2 ] == ' ' && input [ 3 ]	3272:7:94779:94805	894313	0	True				
ANR	895061	AndExpression	input [ 2 ] == ' ' && input [ 3 ]		894313	0		&&			
ANR	895062	EqualityExpression	input [ 2 ] == ' '		894313	0		==			
ANR	895063	ArrayIndexing	input [ 2 ]		894313	0					
ANR	895064	Identifier	input		894313	0					
ANR	895065	PrimaryExpression	2		894313	1					
ANR	895066	PrimaryExpression	' '		894313	1					
ANR	895067	ArrayIndexing	input [ 3 ]		894313	1					
ANR	895068	Identifier	input		894313	0					
ANR	895069	PrimaryExpression	3		894313	1					
ANR	895070	CompoundStatement		120:36:3088:3088	894313	1					
ANR	895071	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	3273:4:94814:94854	894313	0	True				
ANR	895072	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		894313	0		=			
ANR	895073	Identifier	addr		894313	0					
ANR	895074	CallExpression	"r_num_math ( core -> num , input + 2 )"		894313	1					
ANR	895075	Callee	r_num_math		894313	0					
ANR	895076	Identifier	r_num_math		894313	0					
ANR	895077	ArgumentList	core -> num		894313	1					
ANR	895078	Argument	core -> num		894313	0					
ANR	895079	PtrMemberAccess	core -> num		894313	0					
ANR	895080	Identifier	core		894313	0					
ANR	895081	Identifier	num		894313	1					
ANR	895082	Argument	input + 2		894313	1					
ANR	895083	AdditiveExpression	input + 2		894313	0		+			
ANR	895084	Identifier	input		894313	0					
ANR	895085	PrimaryExpression	2		894313	1					
ANR	895086	ExpressionStatement	i = 0	3275:3:94864:94869	894313	25	True				
ANR	895087	AssignmentExpression	i = 0		894313	0		=			
ANR	895088	Identifier	i		894313	0					
ANR	895089	PrimaryExpression	0		894313	1					
ANR	895090	ExpressionStatement	"list = r_debug_frames ( core -> dbg , addr )"	3276:3:94874:94913	894313	26	True				
ANR	895091	AssignmentExpression	"list = r_debug_frames ( core -> dbg , addr )"		894313	0		=			
ANR	895092	Identifier	list		894313	0					
ANR	895093	CallExpression	"r_debug_frames ( core -> dbg , addr )"		894313	1					
ANR	895094	Callee	r_debug_frames		894313	0					
ANR	895095	Identifier	r_debug_frames		894313	0					
ANR	895096	ArgumentList	core -> dbg		894313	1					
ANR	895097	Argument	core -> dbg		894313	0					
ANR	895098	PtrMemberAccess	core -> dbg		894313	0					
ANR	895099	Identifier	core		894313	0					
ANR	895100	Identifier	dbg		894313	1					
ANR	895101	Argument	addr		894313	1					
ANR	895102	Identifier	addr		894313	0					
ANR	895103	ExpressionStatement	hex_format = false	3277:3:94918:94936	894313	27	True				
ANR	895104	AssignmentExpression	hex_format = false		894313	0		=			
ANR	895105	Identifier	hex_format		894313	0					
ANR	895106	Identifier	false		894313	1					
ANR	895107	ExpressionStatement	"r_cons_printf ( ""["" )"	3278:3:94941:94960	894313	28	True				
ANR	895108	CallExpression	"r_cons_printf ( ""["" )"		894313	0					
ANR	895109	Callee	r_cons_printf		894313	0					
ANR	895110	Identifier	r_cons_printf		894313	0					
ANR	895111	ArgumentList	"""["""		894313	1					
ANR	895112	Argument	"""["""		894313	0					
ANR	895113	PrimaryExpression	"""["""		894313	0					
ANR	895114	Statement	r_list_foreach	3279:3:94965:94978	894313	29	True				
ANR	895115	Statement	(	3279:18:94980:94980	894313	30	True				
ANR	895116	Statement	list	3279:19:94981:94984	894313	31	True				
ANR	895117	Statement	","	3279:23:94985:94985	894313	32	True				
ANR	895118	Statement	iter	3279:25:94987:94990	894313	33	True				
ANR	895119	Statement	","	3279:29:94991:94991	894313	34	True				
ANR	895120	Statement	frame	3279:31:94993:94997	894313	35	True				
ANR	895121	Statement	)	3279:36:94998:94998	894313	36	True				
ANR	895122	CompoundStatement		130:4:3429:3496	894313	37					
ANR	895123	IdentifierDeclStatement	"char * flagdesc , * flagdesc2 , * pcstr , * spstr ;"	3280:4:95006:95048	894313	0	True				
ANR	895124	IdentifierDecl	* flagdesc		894313	0					
ANR	895125	IdentifierDeclType	char *		894313	0					
ANR	895126	Identifier	flagdesc		894313	1					
ANR	895127	IdentifierDecl	* flagdesc2		894313	1					
ANR	895128	IdentifierDeclType	char *		894313	0					
ANR	895129	Identifier	flagdesc2		894313	1					
ANR	895130	IdentifierDecl	* pcstr		894313	2					
ANR	895131	IdentifierDeclType	char *		894313	0					
ANR	895132	Identifier	pcstr		894313	1					
ANR	895133	IdentifierDecl	* spstr		894313	3					
ANR	895134	IdentifierDeclType	char *		894313	0					
ANR	895135	Identifier	spstr		894313	1					
ANR	895136	ExpressionStatement	"get_backtrace_info ( core , frame , addr , & flagdesc , & flagdesc2 , & pcstr , & spstr , hex_format )"	3281:4:95054:95143	894313	1	True				
ANR	895137	CallExpression	"get_backtrace_info ( core , frame , addr , & flagdesc , & flagdesc2 , & pcstr , & spstr , hex_format )"		894313	0					
ANR	895138	Callee	get_backtrace_info		894313	0					
ANR	895139	Identifier	get_backtrace_info		894313	0					
ANR	895140	ArgumentList	core		894313	1					
ANR	895141	Argument	core		894313	0					
ANR	895142	Identifier	core		894313	0					
ANR	895143	Argument	frame		894313	1					
ANR	895144	Identifier	frame		894313	0					
ANR	895145	Argument	addr		894313	2					
ANR	895146	Identifier	addr		894313	0					
ANR	895147	Argument	& flagdesc		894313	3					
ANR	895148	UnaryOperationExpression	& flagdesc		894313	0					
ANR	895149	UnaryOperator	&		894313	0					
ANR	895150	Identifier	flagdesc		894313	1					
ANR	895151	Argument	& flagdesc2		894313	4					
ANR	895152	UnaryOperationExpression	& flagdesc2		894313	0					
ANR	895153	UnaryOperator	&		894313	0					
ANR	895154	Identifier	flagdesc2		894313	1					
ANR	895155	Argument	& pcstr		894313	5					
ANR	895156	UnaryOperationExpression	& pcstr		894313	0					
ANR	895157	UnaryOperator	&		894313	0					
ANR	895158	Identifier	pcstr		894313	1					
ANR	895159	Argument	& spstr		894313	6					
ANR	895160	UnaryOperationExpression	& spstr		894313	0					
ANR	895161	UnaryOperator	&		894313	0					
ANR	895162	Identifier	spstr		894313	1					
ANR	895163	Argument	hex_format		894313	7					
ANR	895164	Identifier	hex_format		894313	0					
ANR	895165	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 ) ;"	3282:4:95149:95216	894313	2	True				
ANR	895166	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 )"		894313	0					
ANR	895167	IdentifierDeclType	RAnalFunction *		894313	0					
ANR	895168	Identifier	fcn		894313	1					
ANR	895169	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 )"		894313	2		=			
ANR	895170	Identifier	fcn		894313	0					
ANR	895171	CallExpression	"r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 )"		894313	1					
ANR	895172	Callee	r_anal_get_fcn_in		894313	0					
ANR	895173	Identifier	r_anal_get_fcn_in		894313	0					
ANR	895174	ArgumentList	core -> anal		894313	1					
ANR	895175	Argument	core -> anal		894313	0					
ANR	895176	PtrMemberAccess	core -> anal		894313	0					
ANR	895177	Identifier	core		894313	0					
ANR	895178	Identifier	anal		894313	1					
ANR	895179	Argument	frame -> addr		894313	1					
ANR	895180	PtrMemberAccess	frame -> addr		894313	0					
ANR	895181	Identifier	frame		894313	0					
ANR	895182	Identifier	addr		894313	1					
ANR	895183	Argument	0		894313	2					
ANR	895184	PrimaryExpression	0		894313	0					
ANR	895185	Statement	r_cons_printf	3283:4:95222:95234	894313	3	True				
ANR	895186	Statement	(	3283:18:95236:95236	894313	4	True				
ANR	895187	Statement	"""%s{\\""idx\\"":%d,\\""pc\\"":%s,\\""sp\\"":%s,\\""frame_size\\"":%d,"""	3283:19:95237:95290	894313	5	True				
ANR	895188	Statement	"""\\""fname\\"":\\""%s\\"",\\""desc\\"":\\""%s%s\\""}"""	3284:6:95298:95334	894313	6	True				
ANR	895189	Statement	","	3284:43:95335:95335	894313	7	True				
ANR	895190	Statement	(	3284:45:95337:95337	894313	8	True				
ANR	895191	Statement	i	3284:46:95338:95338	894313	9	True				
ANR	895192	Statement	?	3284:48:95340:95340	894313	10	True				
ANR	895193	Statement	""" ,"""	3284:50:95342:95345	894313	11	True				
ANR	895194	Statement	:	3284:55:95347:95347	894313	12	True				
ANR	895195	Statement	""""""	3284:57:95349:95350	894313	13	True				
ANR	895196	Statement	)	3284:59:95351:95351	894313	14	True				
ANR	895197	Statement	","	3284:60:95352:95352	894313	15	True				
ANR	895198	Statement	i	3285:6:95360:95360	894313	16	True				
ANR	895199	Statement	","	3285:7:95361:95361	894313	17	True				
ANR	895200	Statement	pcstr	3286:6:95369:95373	894313	18	True				
ANR	895201	Statement	","	3286:11:95374:95374	894313	19	True				
ANR	895202	Statement	spstr	3286:13:95376:95380	894313	20	True				
ANR	895203	Statement	","	3286:18:95381:95381	894313	21	True				
ANR	895204	Statement	(	3287:6:95389:95389	894313	22	True				
ANR	895205	Statement	int	3287:7:95390:95392	894313	23	True				
ANR	895206	Statement	)	3287:10:95393:95393	894313	24	True				
ANR	895207	Statement	frame	3287:11:95394:95398	894313	25	True				
ANR	895208	Statement	->	3287:16:95399:95400	894313	26	True				
ANR	895209	Statement	size	3287:18:95401:95404	894313	27	True				
ANR	895210	Statement	","	3287:22:95405:95405	894313	28	True				
ANR	895211	Statement	fcn	3288:6:95413:95415	894313	29	True				
ANR	895212	Statement	?	3288:10:95417:95417	894313	30	True				
ANR	895213	Statement	fcn	3288:12:95419:95421	894313	31	True				
ANR	895214	Statement	->	3288:15:95422:95423	894313	32	True				
ANR	895215	Label	name :	3288:17:95424:95429	894313	33	True				
ANR	895216	Identifier	name		894313	0					
ANR	895217	Statement	""""""	3288:24:95431:95432	894313	34	True				
ANR	895218	Statement	","	3288:26:95433:95433	894313	35	True				
ANR	895219	Statement	flagdesc	3289:6:95441:95448	894313	36	True				
ANR	895220	Statement	?	3289:15:95450:95450	894313	37	True				
ANR	895221	Label	flagdesc :	3289:17:95452:95461	894313	38	True				
ANR	895222	Identifier	flagdesc		894313	0					
ANR	895223	Statement	""""""	3289:28:95463:95464	894313	39	True				
ANR	895224	Statement	","	3289:30:95465:95465	894313	40	True				
ANR	895225	Statement	flagdesc2	3290:6:95473:95481	894313	41	True				
ANR	895226	Statement	?	3290:16:95483:95483	894313	42	True				
ANR	895227	Label	flagdesc2 :	3290:18:95485:95495	894313	43	True				
ANR	895228	Identifier	flagdesc2		894313	0					
ANR	895229	Statement	""""""	3290:30:95497:95498	894313	44	True				
ANR	895230	Statement	)	3290:32:95499:95499	894313	45	True				
ANR	895231	ExpressionStatement		3290:33:95500:95500	894313	46	True				
ANR	895232	ExpressionStatement	i ++	3291:4:95506:95509	894313	47	True				
ANR	895233	PostIncDecOperationExpression	i ++		894313	0					
ANR	895234	Identifier	i		894313	0					
ANR	895235	IncDec	++		894313	1					
ANR	895236	ExpressionStatement	free ( flagdesc )	3292:4:95515:95530	894313	48	True				
ANR	895237	CallExpression	free ( flagdesc )		894313	0					
ANR	895238	Callee	free		894313	0					
ANR	895239	Identifier	free		894313	0					
ANR	895240	ArgumentList	flagdesc		894313	1					
ANR	895241	Argument	flagdesc		894313	0					
ANR	895242	Identifier	flagdesc		894313	0					
ANR	895243	ExpressionStatement	free ( flagdesc2 )	3293:4:95536:95552	894313	49	True				
ANR	895244	CallExpression	free ( flagdesc2 )		894313	0					
ANR	895245	Callee	free		894313	0					
ANR	895246	Identifier	free		894313	0					
ANR	895247	ArgumentList	flagdesc2		894313	1					
ANR	895248	Argument	flagdesc2		894313	0					
ANR	895249	Identifier	flagdesc2		894313	0					
ANR	895250	ExpressionStatement	free ( pcstr )	3294:4:95558:95570	894313	50	True				
ANR	895251	CallExpression	free ( pcstr )		894313	0					
ANR	895252	Callee	free		894313	0					
ANR	895253	Identifier	free		894313	0					
ANR	895254	ArgumentList	pcstr		894313	1					
ANR	895255	Argument	pcstr		894313	0					
ANR	895256	Identifier	pcstr		894313	0					
ANR	895257	ExpressionStatement	free ( spstr )	3295:4:95576:95588	894313	51	True				
ANR	895258	CallExpression	free ( spstr )		894313	0					
ANR	895259	Callee	free		894313	0					
ANR	895260	Identifier	free		894313	0					
ANR	895261	ArgumentList	spstr		894313	1					
ANR	895262	Argument	spstr		894313	0					
ANR	895263	Identifier	spstr		894313	0					
ANR	895264	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	3297:3:95598:95619	894313	38	True				
ANR	895265	CallExpression	"r_cons_printf ( ""]\\n"" )"		894313	0					
ANR	895266	Callee	r_cons_printf		894313	0					
ANR	895267	Identifier	r_cons_printf		894313	0					
ANR	895268	ArgumentList	"""]\\n"""		894313	1					
ANR	895269	Argument	"""]\\n"""		894313	0					
ANR	895270	PrimaryExpression	"""]\\n"""		894313	0					
ANR	895271	ExpressionStatement	r_list_free ( list )	3298:3:95624:95642	894313	39	True				
ANR	895272	CallExpression	r_list_free ( list )		894313	0					
ANR	895273	Callee	r_list_free		894313	0					
ANR	895274	Identifier	r_list_free		894313	0					
ANR	895275	ArgumentList	list		894313	1					
ANR	895276	Argument	list		894313	0					
ANR	895277	Identifier	list		894313	0					
ANR	895278	BreakStatement	break ;	3299:3:95647:95652	894313	40	True				
ANR	895279	Label	case '=' :	3300:2:95656:95664	894313	41	True				
ANR	895280	ExpressionStatement	addr = UT64_MAX	3301:3:95677:95692	894313	42	True				
ANR	895281	AssignmentExpression	addr = UT64_MAX		894313	0		=			
ANR	895282	Identifier	addr		894313	0					
ANR	895283	Identifier	UT64_MAX		894313	1					
ANR	895284	IfStatement	if ( input [ 2 ] == ' ' && input [ 3 ] )		894313	43					
ANR	895285	Condition	input [ 2 ] == ' ' && input [ 3 ]	3302:7:95701:95727	894313	0	True				
ANR	895286	AndExpression	input [ 2 ] == ' ' && input [ 3 ]		894313	0		&&			
ANR	895287	EqualityExpression	input [ 2 ] == ' '		894313	0		==			
ANR	895288	ArrayIndexing	input [ 2 ]		894313	0					
ANR	895289	Identifier	input		894313	0					
ANR	895290	PrimaryExpression	2		894313	1					
ANR	895291	PrimaryExpression	' '		894313	1					
ANR	895292	ArrayIndexing	input [ 3 ]		894313	1					
ANR	895293	Identifier	input		894313	0					
ANR	895294	PrimaryExpression	3		894313	1					
ANR	895295	CompoundStatement		150:36:4010:4010	894313	1					
ANR	895296	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	3303:4:95736:95776	894313	0	True				
ANR	895297	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		894313	0		=			
ANR	895298	Identifier	addr		894313	0					
ANR	895299	CallExpression	"r_num_math ( core -> num , input + 2 )"		894313	1					
ANR	895300	Callee	r_num_math		894313	0					
ANR	895301	Identifier	r_num_math		894313	0					
ANR	895302	ArgumentList	core -> num		894313	1					
ANR	895303	Argument	core -> num		894313	0					
ANR	895304	PtrMemberAccess	core -> num		894313	0					
ANR	895305	Identifier	core		894313	0					
ANR	895306	Identifier	num		894313	1					
ANR	895307	Argument	input + 2		894313	1					
ANR	895308	AdditiveExpression	input + 2		894313	0		+			
ANR	895309	Identifier	input		894313	0					
ANR	895310	PrimaryExpression	2		894313	1					
ANR	895311	ExpressionStatement	i = 0	3305:3:95786:95791	894313	44	True				
ANR	895312	AssignmentExpression	i = 0		894313	0		=			
ANR	895313	Identifier	i		894313	0					
ANR	895314	PrimaryExpression	0		894313	1					
ANR	895315	ExpressionStatement	"list = r_debug_frames ( core -> dbg , addr )"	3306:3:95796:95835	894313	45	True				
ANR	895316	AssignmentExpression	"list = r_debug_frames ( core -> dbg , addr )"		894313	0		=			
ANR	895317	Identifier	list		894313	0					
ANR	895318	CallExpression	"r_debug_frames ( core -> dbg , addr )"		894313	1					
ANR	895319	Callee	r_debug_frames		894313	0					
ANR	895320	Identifier	r_debug_frames		894313	0					
ANR	895321	ArgumentList	core -> dbg		894313	1					
ANR	895322	Argument	core -> dbg		894313	0					
ANR	895323	PtrMemberAccess	core -> dbg		894313	0					
ANR	895324	Identifier	core		894313	0					
ANR	895325	Identifier	dbg		894313	1					
ANR	895326	Argument	addr		894313	1					
ANR	895327	Identifier	addr		894313	0					
ANR	895328	ExpressionStatement	r_list_reverse ( list )	3307:3:95840:95861	894313	46	True				
ANR	895329	CallExpression	r_list_reverse ( list )		894313	0					
ANR	895330	Callee	r_list_reverse		894313	0					
ANR	895331	Identifier	r_list_reverse		894313	0					
ANR	895332	ArgumentList	list		894313	1					
ANR	895333	Argument	list		894313	0					
ANR	895334	Identifier	list		894313	0					
ANR	895335	Statement	r_list_foreach	3308:3:95866:95879	894313	47	True				
ANR	895336	Statement	(	3308:18:95881:95881	894313	48	True				
ANR	895337	Statement	list	3308:19:95882:95885	894313	49	True				
ANR	895338	Statement	","	3308:23:95886:95886	894313	50	True				
ANR	895339	Statement	iter	3308:25:95888:95891	894313	51	True				
ANR	895340	Statement	","	3308:29:95892:95892	894313	52	True				
ANR	895341	Statement	frame	3308:31:95894:95898	894313	53	True				
ANR	895342	Statement	)	3308:36:95899:95899	894313	54	True				
ANR	895343	CompoundStatement		156:38:4181:4181	894313	55					
ANR	895344	SwitchStatement	switch ( input [ 3 ] )		894313	0					
ANR	895345	Condition	input [ 3 ]	3309:12:95915:95922	894313	0	True				
ANR	895346	ArrayIndexing	input [ 3 ]		894313	0					
ANR	895347	Identifier	input		894313	0					
ANR	895348	PrimaryExpression	3		894313	1					
ANR	895349	CompoundStatement		157:22:4205:4205	894313	1					
ANR	895350	Label	case 0 :	3310:4:95931:95937	894313	0	True				
ANR	895351	Statement	r_cons_printf	3311:5:95944:95956	894313	1	True				
ANR	895352	Statement	(	3311:19:95958:95958	894313	2	True				
ANR	895353	Statement	"""%s0x%08"""	3311:20:95959:95967	894313	3	True				
ANR	895354	Statement	PFMT64x	3311:29:95968:95974	894313	4	True				
ANR	895355	Statement	","	3311:36:95975:95975	894313	5	True				
ANR	895356	Statement	(	3312:7:95984:95984	894313	6	True				
ANR	895357	Statement	i	3312:8:95985:95985	894313	7	True				
ANR	895358	Statement	?	3312:10:95987:95987	894313	8	True				
ANR	895359	Statement	""" """	3312:12:95989:95991	894313	9	True				
ANR	895360	Statement	:	3312:16:95993:95993	894313	10	True				
ANR	895361	Statement	""""""	3312:18:95995:95996	894313	11	True				
ANR	895362	Statement	)	3312:20:95997:95997	894313	12	True				
ANR	895363	Statement	","	3312:21:95998:95998	894313	13	True				
ANR	895364	Statement	frame	3312:23:96000:96004	894313	14	True				
ANR	895365	Statement	->	3312:28:96005:96006	894313	15	True				
ANR	895366	Statement	addr	3312:30:96007:96010	894313	16	True				
ANR	895367	Statement	)	3312:34:96011:96011	894313	17	True				
ANR	895368	ExpressionStatement		3312:35:96012:96012	894313	18	True				
ANR	895369	BreakStatement	break ;	3313:5:96019:96024	894313	19	True				
ANR	895370	Label	case 's' :	3314:4:96030:96038	894313	20	True				
ANR	895371	Statement	r_cons_printf	3315:5:96045:96057	894313	21	True				
ANR	895372	Statement	(	3315:19:96059:96059	894313	22	True				
ANR	895373	Statement	"""%s0x%08"""	3315:20:96060:96068	894313	23	True				
ANR	895374	Statement	PFMT64x	3315:29:96069:96075	894313	24	True				
ANR	895375	Statement	","	3315:36:96076:96076	894313	25	True				
ANR	895376	Statement	(	3316:7:96085:96085	894313	26	True				
ANR	895377	Statement	i	3316:8:96086:96086	894313	27	True				
ANR	895378	Statement	?	3316:10:96088:96088	894313	28	True				
ANR	895379	Statement	""" """	3316:12:96090:96092	894313	29	True				
ANR	895380	Statement	:	3316:16:96094:96094	894313	30	True				
ANR	895381	Statement	""""""	3316:18:96096:96097	894313	31	True				
ANR	895382	Statement	)	3316:20:96098:96098	894313	32	True				
ANR	895383	Statement	","	3316:21:96099:96099	894313	33	True				
ANR	895384	Statement	frame	3316:23:96101:96105	894313	34	True				
ANR	895385	Statement	->	3316:28:96106:96107	894313	35	True				
ANR	895386	Statement	sp	3316:30:96108:96109	894313	36	True				
ANR	895387	Statement	)	3316:32:96110:96110	894313	37	True				
ANR	895388	ExpressionStatement		3316:33:96111:96111	894313	38	True				
ANR	895389	BreakStatement	break ;	3317:5:96118:96123	894313	39	True				
ANR	895390	Label	case 'b' :	3318:4:96129:96137	894313	40	True				
ANR	895391	Statement	r_cons_printf	3319:5:96144:96156	894313	41	True				
ANR	895392	Statement	(	3319:19:96158:96158	894313	42	True				
ANR	895393	Statement	"""%s0x%08"""	3319:20:96159:96167	894313	43	True				
ANR	895394	Statement	PFMT64x	3319:29:96168:96174	894313	44	True				
ANR	895395	Statement	","	3319:36:96175:96175	894313	45	True				
ANR	895396	Statement	(	3320:7:96184:96184	894313	46	True				
ANR	895397	Statement	i	3320:8:96185:96185	894313	47	True				
ANR	895398	Statement	?	3320:10:96187:96187	894313	48	True				
ANR	895399	Statement	""" """	3320:12:96189:96191	894313	49	True				
ANR	895400	Statement	:	3320:16:96193:96193	894313	50	True				
ANR	895401	Statement	""""""	3320:18:96195:96196	894313	51	True				
ANR	895402	Statement	)	3320:20:96197:96197	894313	52	True				
ANR	895403	Statement	","	3320:21:96198:96198	894313	53	True				
ANR	895404	Statement	frame	3320:23:96200:96204	894313	54	True				
ANR	895405	Statement	->	3320:28:96205:96206	894313	55	True				
ANR	895406	Statement	bp	3320:30:96207:96208	894313	56	True				
ANR	895407	Statement	)	3320:32:96209:96209	894313	57	True				
ANR	895408	ExpressionStatement		3320:33:96210:96210	894313	58	True				
ANR	895409	BreakStatement	break ;	3321:5:96217:96222	894313	59	True				
ANR	895410	Label	case '?' :	3322:4:96228:96236	894313	60	True				
ANR	895411	Label	default :	3323:4:96242:96249	894313	61	True				
ANR	895412	Identifier	default		894313	0					
ANR	895413	ExpressionStatement	"r_core_cmd0 ( core , ""db?~dbt"" )"	3324:5:96256:96285	894313	62	True				
ANR	895414	CallExpression	"r_core_cmd0 ( core , ""db?~dbt"" )"		894313	0					
ANR	895415	Callee	r_core_cmd0		894313	0					
ANR	895416	Identifier	r_core_cmd0		894313	0					
ANR	895417	ArgumentList	core		894313	1					
ANR	895418	Argument	core		894313	0					
ANR	895419	Identifier	core		894313	0					
ANR	895420	Argument	"""db?~dbt"""		894313	1					
ANR	895421	PrimaryExpression	"""db?~dbt"""		894313	0					
ANR	895422	BreakStatement	break ;	3325:5:96292:96297	894313	63	True				
ANR	895423	ExpressionStatement	i ++	3327:4:96309:96312	894313	1	True				
ANR	895424	PostIncDecOperationExpression	i ++		894313	0					
ANR	895425	Identifier	i		894313	0					
ANR	895426	IncDec	++		894313	1					
ANR	895427	ExpressionStatement	r_cons_newline ( )	3329:3:96322:96339	894313	56	True				
ANR	895428	CallExpression	r_cons_newline ( )		894313	0					
ANR	895429	Callee	r_cons_newline		894313	0					
ANR	895430	Identifier	r_cons_newline		894313	0					
ANR	895431	ArgumentList			894313	1					
ANR	895432	ExpressionStatement	r_list_free ( list )	3330:3:96344:96362	894313	57	True				
ANR	895433	CallExpression	r_list_free ( list )		894313	0					
ANR	895434	Callee	r_list_free		894313	0					
ANR	895435	Identifier	r_list_free		894313	0					
ANR	895436	ArgumentList	list		894313	1					
ANR	895437	Argument	list		894313	0					
ANR	895438	Identifier	list		894313	0					
ANR	895439	BreakStatement	break ;	3331:3:96367:96372	894313	58	True				
ANR	895440	Label	case '*' :	3332:2:96376:96384	894313	59	True				
ANR	895441	ExpressionStatement	addr = UT64_MAX	3333:3:96397:96412	894313	60	True				
ANR	895442	AssignmentExpression	addr = UT64_MAX		894313	0		=			
ANR	895443	Identifier	addr		894313	0					
ANR	895444	Identifier	UT64_MAX		894313	1					
ANR	895445	IfStatement	if ( input [ 2 ] == ' ' && input [ 3 ] )		894313	61					
ANR	895446	Condition	input [ 2 ] == ' ' && input [ 3 ]	3334:7:96421:96447	894313	0	True				
ANR	895447	AndExpression	input [ 2 ] == ' ' && input [ 3 ]		894313	0		&&			
ANR	895448	EqualityExpression	input [ 2 ] == ' '		894313	0		==			
ANR	895449	ArrayIndexing	input [ 2 ]		894313	0					
ANR	895450	Identifier	input		894313	0					
ANR	895451	PrimaryExpression	2		894313	1					
ANR	895452	PrimaryExpression	' '		894313	1					
ANR	895453	ArrayIndexing	input [ 3 ]		894313	1					
ANR	895454	Identifier	input		894313	0					
ANR	895455	PrimaryExpression	3		894313	1					
ANR	895456	CompoundStatement		182:36:4730:4730	894313	1					
ANR	895457	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	3335:4:96456:96496	894313	0	True				
ANR	895458	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		894313	0		=			
ANR	895459	Identifier	addr		894313	0					
ANR	895460	CallExpression	"r_num_math ( core -> num , input + 2 )"		894313	1					
ANR	895461	Callee	r_num_math		894313	0					
ANR	895462	Identifier	r_num_math		894313	0					
ANR	895463	ArgumentList	core -> num		894313	1					
ANR	895464	Argument	core -> num		894313	0					
ANR	895465	PtrMemberAccess	core -> num		894313	0					
ANR	895466	Identifier	core		894313	0					
ANR	895467	Identifier	num		894313	1					
ANR	895468	Argument	input + 2		894313	1					
ANR	895469	AdditiveExpression	input + 2		894313	0		+			
ANR	895470	Identifier	input		894313	0					
ANR	895471	PrimaryExpression	2		894313	1					
ANR	895472	ExpressionStatement	i = 0	3337:3:96506:96511	894313	62	True				
ANR	895473	AssignmentExpression	i = 0		894313	0		=			
ANR	895474	Identifier	i		894313	0					
ANR	895475	PrimaryExpression	0		894313	1					
ANR	895476	ExpressionStatement	"list = r_debug_frames ( core -> dbg , addr )"	3338:3:96516:96555	894313	63	True				
ANR	895477	AssignmentExpression	"list = r_debug_frames ( core -> dbg , addr )"		894313	0		=			
ANR	895478	Identifier	list		894313	0					
ANR	895479	CallExpression	"r_debug_frames ( core -> dbg , addr )"		894313	1					
ANR	895480	Callee	r_debug_frames		894313	0					
ANR	895481	Identifier	r_debug_frames		894313	0					
ANR	895482	ArgumentList	core -> dbg		894313	1					
ANR	895483	Argument	core -> dbg		894313	0					
ANR	895484	PtrMemberAccess	core -> dbg		894313	0					
ANR	895485	Identifier	core		894313	0					
ANR	895486	Identifier	dbg		894313	1					
ANR	895487	Argument	addr		894313	1					
ANR	895488	Identifier	addr		894313	0					
ANR	895489	ExpressionStatement	r_list_reverse ( list )	3339:3:96560:96581	894313	64	True				
ANR	895490	CallExpression	r_list_reverse ( list )		894313	0					
ANR	895491	Callee	r_list_reverse		894313	0					
ANR	895492	Identifier	r_list_reverse		894313	0					
ANR	895493	ArgumentList	list		894313	1					
ANR	895494	Argument	list		894313	0					
ANR	895495	Identifier	list		894313	0					
ANR	895496	ExpressionStatement	"r_cons_printf ( ""f-bt.*\\n"" )"	3340:3:96586:96612	894313	65	True				
ANR	895497	CallExpression	"r_cons_printf ( ""f-bt.*\\n"" )"		894313	0					
ANR	895498	Callee	r_cons_printf		894313	0					
ANR	895499	Identifier	r_cons_printf		894313	0					
ANR	895500	ArgumentList	"""f-bt.*\\n"""		894313	1					
ANR	895501	Argument	"""f-bt.*\\n"""		894313	0					
ANR	895502	PrimaryExpression	"""f-bt.*\\n"""		894313	0					
ANR	895503	Statement	r_list_foreach	3341:3:96617:96630	894313	66	True				
ANR	895504	Statement	(	3341:18:96632:96632	894313	67	True				
ANR	895505	Statement	list	3341:19:96633:96636	894313	68	True				
ANR	895506	Statement	","	3341:23:96637:96637	894313	69	True				
ANR	895507	Statement	iter	3341:25:96639:96642	894313	70	True				
ANR	895508	Statement	","	3341:29:96643:96643	894313	71	True				
ANR	895509	Statement	frame	3341:31:96645:96649	894313	72	True				
ANR	895510	Statement	)	3341:36:96650:96650	894313	73	True				
ANR	895511	CompoundStatement		189:38:4932:4932	894313	74					
ANR	895512	Statement	r_cons_printf	3342:4:96658:96670	894313	0	True				
ANR	895513	Statement	(	3342:18:96672:96672	894313	1	True				
ANR	895514	Statement	"""f bt.frame%d = 0x%08"""	3342:19:96673:96694	894313	2	True				
ANR	895515	Statement	PFMT64x	3342:41:96695:96701	894313	3	True				
ANR	895516	Statement	"""\\n"""	3342:48:96702:96705	894313	4	True				
ANR	895517	Statement	","	3342:52:96706:96706	894313	5	True				
ANR	895518	Statement	i	3342:54:96708:96708	894313	6	True				
ANR	895519	Statement	","	3342:55:96709:96709	894313	7	True				
ANR	895520	Statement	frame	3342:57:96711:96715	894313	8	True				
ANR	895521	Statement	->	3342:62:96716:96717	894313	9	True				
ANR	895522	Statement	addr	3342:64:96718:96721	894313	10	True				
ANR	895523	Statement	)	3342:68:96722:96722	894313	11	True				
ANR	895524	ExpressionStatement		3342:69:96723:96723	894313	12	True				
ANR	895525	Statement	r_cons_printf	3343:4:96729:96741	894313	13	True				
ANR	895526	Statement	(	3343:18:96743:96743	894313	14	True				
ANR	895527	Statement	"""f bt.frame%d.stack %d 0x%08"""	3343:19:96744:96772	894313	15	True				
ANR	895528	Statement	PFMT64x	3343:48:96773:96779	894313	16	True				
ANR	895529	Statement	"""\\n"""	3343:55:96780:96783	894313	17	True				
ANR	895530	Statement	","	3343:59:96784:96784	894313	18	True				
ANR	895531	Statement	i	3343:61:96786:96786	894313	19	True				
ANR	895532	Statement	","	3343:62:96787:96787	894313	20	True				
ANR	895533	Statement	frame	3343:64:96789:96793	894313	21	True				
ANR	895534	Statement	->	3343:69:96794:96795	894313	22	True				
ANR	895535	Statement	size	3343:71:96796:96799	894313	23	True				
ANR	895536	Statement	","	3343:75:96800:96800	894313	24	True				
ANR	895537	Statement	frame	3343:77:96802:96806	894313	25	True				
ANR	895538	Statement	->	3343:82:96807:96808	894313	26	True				
ANR	895539	Statement	sp	3343:84:96809:96810	894313	27	True				
ANR	895540	Statement	)	3343:86:96811:96811	894313	28	True				
ANR	895541	ExpressionStatement		3343:87:96812:96812	894313	29	True				
ANR	895542	ExpressionStatement	i ++	3344:4:96818:96821	894313	30	True				
ANR	895543	PostIncDecOperationExpression	i ++		894313	0					
ANR	895544	Identifier	i		894313	0					
ANR	895545	IncDec	++		894313	1					
ANR	895546	ExpressionStatement	r_list_free ( list )	3346:3:96831:96849	894313	75	True				
ANR	895547	CallExpression	r_list_free ( list )		894313	0					
ANR	895548	Callee	r_list_free		894313	0					
ANR	895549	Identifier	r_list_free		894313	0					
ANR	895550	ArgumentList	list		894313	1					
ANR	895551	Argument	list		894313	0					
ANR	895552	Identifier	list		894313	0					
ANR	895553	BreakStatement	break ;	3347:3:96854:96859	894313	76	True				
ANR	895554	Label	case 0 :	3348:2:96863:96869	894313	77	True				
ANR	895555	ExpressionStatement	addr = UT64_MAX	3349:3:96896:96911	894313	78	True				
ANR	895556	AssignmentExpression	addr = UT64_MAX		894313	0		=			
ANR	895557	Identifier	addr		894313	0					
ANR	895558	Identifier	UT64_MAX		894313	1					
ANR	895559	IfStatement	if ( input [ 2 ] == ' ' && input [ 3 ] )		894313	79					
ANR	895560	Condition	input [ 2 ] == ' ' && input [ 3 ]	3350:7:96920:96946	894313	0	True				
ANR	895561	AndExpression	input [ 2 ] == ' ' && input [ 3 ]		894313	0		&&			
ANR	895562	EqualityExpression	input [ 2 ] == ' '		894313	0		==			
ANR	895563	ArrayIndexing	input [ 2 ]		894313	0					
ANR	895564	Identifier	input		894313	0					
ANR	895565	PrimaryExpression	2		894313	1					
ANR	895566	PrimaryExpression	' '		894313	1					
ANR	895567	ArrayIndexing	input [ 3 ]		894313	1					
ANR	895568	Identifier	input		894313	0					
ANR	895569	PrimaryExpression	3		894313	1					
ANR	895570	CompoundStatement		198:36:5229:5229	894313	1					
ANR	895571	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	3351:4:96955:96995	894313	0	True				
ANR	895572	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		894313	0		=			
ANR	895573	Identifier	addr		894313	0					
ANR	895574	CallExpression	"r_num_math ( core -> num , input + 2 )"		894313	1					
ANR	895575	Callee	r_num_math		894313	0					
ANR	895576	Identifier	r_num_math		894313	0					
ANR	895577	ArgumentList	core -> num		894313	1					
ANR	895578	Argument	core -> num		894313	0					
ANR	895579	PtrMemberAccess	core -> num		894313	0					
ANR	895580	Identifier	core		894313	0					
ANR	895581	Identifier	num		894313	1					
ANR	895582	Argument	input + 2		894313	1					
ANR	895583	AdditiveExpression	input + 2		894313	0		+			
ANR	895584	Identifier	input		894313	0					
ANR	895585	PrimaryExpression	2		894313	1					
ANR	895586	ExpressionStatement	i = 0	3353:3:97005:97010	894313	80	True				
ANR	895587	AssignmentExpression	i = 0		894313	0		=			
ANR	895588	Identifier	i		894313	0					
ANR	895589	PrimaryExpression	0		894313	1					
ANR	895590	ExpressionStatement	"list = r_debug_frames ( core -> dbg , addr )"	3354:3:97015:97054	894313	81	True				
ANR	895591	AssignmentExpression	"list = r_debug_frames ( core -> dbg , addr )"		894313	0		=			
ANR	895592	Identifier	list		894313	0					
ANR	895593	CallExpression	"r_debug_frames ( core -> dbg , addr )"		894313	1					
ANR	895594	Callee	r_debug_frames		894313	0					
ANR	895595	Identifier	r_debug_frames		894313	0					
ANR	895596	ArgumentList	core -> dbg		894313	1					
ANR	895597	Argument	core -> dbg		894313	0					
ANR	895598	PtrMemberAccess	core -> dbg		894313	0					
ANR	895599	Identifier	core		894313	0					
ANR	895600	Identifier	dbg		894313	1					
ANR	895601	Argument	addr		894313	1					
ANR	895602	Identifier	addr		894313	0					
ANR	895603	ExpressionStatement	hex_format = true	3355:3:97059:97076	894313	82	True				
ANR	895604	AssignmentExpression	hex_format = true		894313	0		=			
ANR	895605	Identifier	hex_format		894313	0					
ANR	895606	Identifier	true		894313	1					
ANR	895607	Statement	r_list_foreach	3356:3:97081:97094	894313	83	True				
ANR	895608	Statement	(	3356:18:97096:97096	894313	84	True				
ANR	895609	Statement	list	3356:19:97097:97100	894313	85	True				
ANR	895610	Statement	","	3356:23:97101:97101	894313	86	True				
ANR	895611	Statement	iter	3356:25:97103:97106	894313	87	True				
ANR	895612	Statement	","	3356:29:97107:97107	894313	88	True				
ANR	895613	Statement	frame	3356:31:97109:97113	894313	89	True				
ANR	895614	Statement	)	3356:36:97114:97114	894313	90	True				
ANR	895615	CompoundStatement		207:4:5545:5612	894313	91					
ANR	895616	IdentifierDeclStatement	"char * flagdesc , * flagdesc2 , * pcstr , * spstr ;"	3357:4:97122:97164	894313	0	True				
ANR	895617	IdentifierDecl	* flagdesc		894313	0					
ANR	895618	IdentifierDeclType	char *		894313	0					
ANR	895619	Identifier	flagdesc		894313	1					
ANR	895620	IdentifierDecl	* flagdesc2		894313	1					
ANR	895621	IdentifierDeclType	char *		894313	0					
ANR	895622	Identifier	flagdesc2		894313	1					
ANR	895623	IdentifierDecl	* pcstr		894313	2					
ANR	895624	IdentifierDeclType	char *		894313	0					
ANR	895625	Identifier	pcstr		894313	1					
ANR	895626	IdentifierDecl	* spstr		894313	3					
ANR	895627	IdentifierDeclType	char *		894313	0					
ANR	895628	Identifier	spstr		894313	1					
ANR	895629	ExpressionStatement	"get_backtrace_info ( core , frame , addr , & flagdesc , & flagdesc2 , & pcstr , & spstr , hex_format )"	3358:4:97170:97259	894313	1	True				
ANR	895630	CallExpression	"get_backtrace_info ( core , frame , addr , & flagdesc , & flagdesc2 , & pcstr , & spstr , hex_format )"		894313	0					
ANR	895631	Callee	get_backtrace_info		894313	0					
ANR	895632	Identifier	get_backtrace_info		894313	0					
ANR	895633	ArgumentList	core		894313	1					
ANR	895634	Argument	core		894313	0					
ANR	895635	Identifier	core		894313	0					
ANR	895636	Argument	frame		894313	1					
ANR	895637	Identifier	frame		894313	0					
ANR	895638	Argument	addr		894313	2					
ANR	895639	Identifier	addr		894313	0					
ANR	895640	Argument	& flagdesc		894313	3					
ANR	895641	UnaryOperationExpression	& flagdesc		894313	0					
ANR	895642	UnaryOperator	&		894313	0					
ANR	895643	Identifier	flagdesc		894313	1					
ANR	895644	Argument	& flagdesc2		894313	4					
ANR	895645	UnaryOperationExpression	& flagdesc2		894313	0					
ANR	895646	UnaryOperator	&		894313	0					
ANR	895647	Identifier	flagdesc2		894313	1					
ANR	895648	Argument	& pcstr		894313	5					
ANR	895649	UnaryOperationExpression	& pcstr		894313	0					
ANR	895650	UnaryOperator	&		894313	0					
ANR	895651	Identifier	pcstr		894313	1					
ANR	895652	Argument	& spstr		894313	6					
ANR	895653	UnaryOperationExpression	& spstr		894313	0					
ANR	895654	UnaryOperator	&		894313	0					
ANR	895655	Identifier	spstr		894313	1					
ANR	895656	Argument	hex_format		894313	7					
ANR	895657	Identifier	hex_format		894313	0					
ANR	895658	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 ) ;"	3359:4:97265:97332	894313	2	True				
ANR	895659	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 )"		894313	0					
ANR	895660	IdentifierDeclType	RAnalFunction *		894313	0					
ANR	895661	Identifier	fcn		894313	1					
ANR	895662	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 )"		894313	2		=			
ANR	895663	Identifier	fcn		894313	0					
ANR	895664	CallExpression	"r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 )"		894313	1					
ANR	895665	Callee	r_anal_get_fcn_in		894313	0					
ANR	895666	Identifier	r_anal_get_fcn_in		894313	0					
ANR	895667	ArgumentList	core -> anal		894313	1					
ANR	895668	Argument	core -> anal		894313	0					
ANR	895669	PtrMemberAccess	core -> anal		894313	0					
ANR	895670	Identifier	core		894313	0					
ANR	895671	Identifier	anal		894313	1					
ANR	895672	Argument	frame -> addr		894313	1					
ANR	895673	PtrMemberAccess	frame -> addr		894313	0					
ANR	895674	Identifier	frame		894313	0					
ANR	895675	Identifier	addr		894313	1					
ANR	895676	Argument	0		894313	2					
ANR	895677	PrimaryExpression	0		894313	0					
ANR	895678	Statement	r_cons_printf	3360:4:97338:97350	894313	3	True				
ANR	895679	Statement	(	3360:18:97352:97352	894313	4	True				
ANR	895680	Statement	"""%d  %s sp: %s  %-5d"""	3360:19:97353:97373	894313	5	True				
ANR	895681	Statement	"""[%s]  %s %s\\n"""	3361:6:97381:97395	894313	6	True				
ANR	895682	Statement	","	3361:21:97396:97396	894313	7	True				
ANR	895683	Statement	i	3361:23:97398:97398	894313	8	True				
ANR	895684	Statement	++	3361:24:97399:97400	894313	9	True				
ANR	895685	Statement	","	3361:26:97401:97401	894313	10	True				
ANR	895686	Statement	pcstr	3362:6:97409:97413	894313	11	True				
ANR	895687	Statement	","	3362:11:97414:97414	894313	12	True				
ANR	895688	Statement	spstr	3362:13:97416:97420	894313	13	True				
ANR	895689	Statement	","	3362:18:97421:97421	894313	14	True				
ANR	895690	Statement	(	3363:6:97429:97429	894313	15	True				
ANR	895691	Statement	int	3363:7:97430:97432	894313	16	True				
ANR	895692	Statement	)	3363:10:97433:97433	894313	17	True				
ANR	895693	Statement	frame	3363:11:97434:97438	894313	18	True				
ANR	895694	Statement	->	3363:16:97439:97440	894313	19	True				
ANR	895695	Statement	size	3363:18:97441:97444	894313	20	True				
ANR	895696	Statement	","	3363:22:97445:97445	894313	21	True				
ANR	895697	Statement	fcn	3364:6:97453:97455	894313	22	True				
ANR	895698	Statement	?	3364:10:97457:97457	894313	23	True				
ANR	895699	Statement	fcn	3364:12:97459:97461	894313	24	True				
ANR	895700	Statement	->	3364:15:97462:97463	894313	25	True				
ANR	895701	Label	name :	3364:17:97464:97469	894313	26	True				
ANR	895702	Identifier	name		894313	0					
ANR	895703	Statement	"""??"""	3364:24:97471:97474	894313	27	True				
ANR	895704	Statement	","	3364:28:97475:97475	894313	28	True				
ANR	895705	Statement	flagdesc	3365:6:97483:97490	894313	29	True				
ANR	895706	Statement	?	3365:15:97492:97492	894313	30	True				
ANR	895707	Label	flagdesc :	3365:17:97494:97503	894313	31	True				
ANR	895708	Identifier	flagdesc		894313	0					
ANR	895709	Statement	""""""	3365:28:97505:97506	894313	32	True				
ANR	895710	Statement	","	3365:30:97507:97507	894313	33	True				
ANR	895711	Statement	flagdesc2	3366:6:97515:97523	894313	34	True				
ANR	895712	Statement	?	3366:16:97525:97525	894313	35	True				
ANR	895713	Label	flagdesc2 :	3366:18:97527:97537	894313	36	True				
ANR	895714	Identifier	flagdesc2		894313	0					
ANR	895715	Statement	""""""	3366:30:97539:97540	894313	37	True				
ANR	895716	Statement	)	3366:32:97541:97541	894313	38	True				
ANR	895717	ExpressionStatement		3366:33:97542:97542	894313	39	True				
ANR	895718	ExpressionStatement	free ( flagdesc )	3367:4:97548:97563	894313	40	True				
ANR	895719	CallExpression	free ( flagdesc )		894313	0					
ANR	895720	Callee	free		894313	0					
ANR	895721	Identifier	free		894313	0					
ANR	895722	ArgumentList	flagdesc		894313	1					
ANR	895723	Argument	flagdesc		894313	0					
ANR	895724	Identifier	flagdesc		894313	0					
ANR	895725	ExpressionStatement	free ( flagdesc2 )	3368:4:97569:97585	894313	41	True				
ANR	895726	CallExpression	free ( flagdesc2 )		894313	0					
ANR	895727	Callee	free		894313	0					
ANR	895728	Identifier	free		894313	0					
ANR	895729	ArgumentList	flagdesc2		894313	1					
ANR	895730	Argument	flagdesc2		894313	0					
ANR	895731	Identifier	flagdesc2		894313	0					
ANR	895732	ExpressionStatement	free ( pcstr )	3369:4:97591:97603	894313	42	True				
ANR	895733	CallExpression	free ( pcstr )		894313	0					
ANR	895734	Callee	free		894313	0					
ANR	895735	Identifier	free		894313	0					
ANR	895736	ArgumentList	pcstr		894313	1					
ANR	895737	Argument	pcstr		894313	0					
ANR	895738	Identifier	pcstr		894313	0					
ANR	895739	ExpressionStatement	free ( spstr )	3370:4:97609:97621	894313	43	True				
ANR	895740	CallExpression	free ( spstr )		894313	0					
ANR	895741	Callee	free		894313	0					
ANR	895742	Identifier	free		894313	0					
ANR	895743	ArgumentList	spstr		894313	1					
ANR	895744	Argument	spstr		894313	0					
ANR	895745	Identifier	spstr		894313	0					
ANR	895746	ExpressionStatement	r_list_free ( list )	3372:3:97631:97649	894313	92	True				
ANR	895747	CallExpression	r_list_free ( list )		894313	0					
ANR	895748	Callee	r_list_free		894313	0					
ANR	895749	Identifier	r_list_free		894313	0					
ANR	895750	ArgumentList	list		894313	1					
ANR	895751	Argument	list		894313	0					
ANR	895752	Identifier	list		894313	0					
ANR	895753	BreakStatement	break ;	3373:3:97654:97659	894313	93	True				
ANR	895754	Label	case '?' :	3374:2:97663:97671	894313	94	True				
ANR	895755	Label	default :	3375:2:97675:97682	894313	95	True				
ANR	895756	Identifier	default		894313	0					
ANR	895757	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dbt )"	3376:3:97687:97723	894313	96	True				
ANR	895758	CallExpression	"r_core_cmd_help ( core , help_msg_dbt )"		894313	0					
ANR	895759	Callee	r_core_cmd_help		894313	0					
ANR	895760	Identifier	r_core_cmd_help		894313	0					
ANR	895761	ArgumentList	core		894313	1					
ANR	895762	Argument	core		894313	0					
ANR	895763	Identifier	core		894313	0					
ANR	895764	Argument	help_msg_dbt		894313	1					
ANR	895765	Identifier	help_msg_dbt		894313	0					
ANR	895766	BreakStatement	break ;	3377:3:97728:97733	894313	97	True				
ANR	895767	BreakStatement	break ;	3379:2:97741:97746	894313	11	True				
ANR	895768	Label	case 'b' :	3380:1:97749:97757	894313	12	True				
ANR	895769	IfStatement	if ( input [ 2 ] )		894313	13					
ANR	895770	Condition	input [ 2 ]	3381:6:97774:97781	894313	0	True				
ANR	895771	ArrayIndexing	input [ 2 ]		894313	0					
ANR	895772	Identifier	input		894313	0					
ANR	895773	PrimaryExpression	2		894313	1					
ANR	895774	CompoundStatement		229:16:6064:6064	894313	1					
ANR	895775	ExpressionStatement	"core -> dbg -> bp -> delta = ( st64 ) r_num_math ( core -> num , input + 2 )"	3382:3:97789:97851	894313	0	True				
ANR	895776	AssignmentExpression	"core -> dbg -> bp -> delta = ( st64 ) r_num_math ( core -> num , input + 2 )"		894313	0		=			
ANR	895777	PtrMemberAccess	core -> dbg -> bp -> delta		894313	0					
ANR	895778	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	895779	PtrMemberAccess	core -> dbg		894313	0					
ANR	895780	Identifier	core		894313	0					
ANR	895781	Identifier	dbg		894313	1					
ANR	895782	Identifier	bp		894313	1					
ANR	895783	Identifier	delta		894313	1					
ANR	895784	CastExpression	"( st64 ) r_num_math ( core -> num , input + 2 )"		894313	1					
ANR	895785	CastTarget	st64		894313	0					
ANR	895786	CallExpression	"r_num_math ( core -> num , input + 2 )"		894313	1					
ANR	895787	Callee	r_num_math		894313	0					
ANR	895788	Identifier	r_num_math		894313	0					
ANR	895789	ArgumentList	core -> num		894313	1					
ANR	895790	Argument	core -> num		894313	0					
ANR	895791	PtrMemberAccess	core -> num		894313	0					
ANR	895792	Identifier	core		894313	0					
ANR	895793	Identifier	num		894313	1					
ANR	895794	Argument	input + 2		894313	1					
ANR	895795	AdditiveExpression	input + 2		894313	0		+			
ANR	895796	Identifier	input		894313	0					
ANR	895797	PrimaryExpression	2		894313	1					
ANR	895798	ElseStatement	else		894313	0					
ANR	895799	CompoundStatement		231:9:6142:6142	894313	0					
ANR	895800	Statement	r_cons_printf	3384:3:97867:97879	894313	0	True				
ANR	895801	Statement	(	3384:17:97881:97881	894313	1	True				
ANR	895802	Statement	"""%"""	3384:18:97882:97884	894313	2	True				
ANR	895803	Statement	PFMT64d	3384:21:97885:97891	894313	3	True				
ANR	895804	Statement	"""\\n"""	3384:28:97892:97895	894313	4	True				
ANR	895805	Statement	","	3384:32:97896:97896	894313	5	True				
ANR	895806	Statement	core	3384:34:97898:97901	894313	6	True				
ANR	895807	Statement	->	3384:38:97902:97903	894313	7	True				
ANR	895808	Statement	dbg	3384:40:97904:97906	894313	8	True				
ANR	895809	Statement	->	3384:43:97907:97908	894313	9	True				
ANR	895810	Statement	bp	3384:45:97909:97910	894313	10	True				
ANR	895811	Statement	->	3384:47:97911:97912	894313	11	True				
ANR	895812	Statement	delta	3384:49:97913:97917	894313	12	True				
ANR	895813	Statement	)	3384:54:97918:97918	894313	13	True				
ANR	895814	ExpressionStatement		3384:55:97919:97919	894313	14	True				
ANR	895815	BreakStatement	break ;	3386:2:97927:97932	894313	14	True				
ANR	895816	Label	case 'm' :	3387:1:97935:97943	894313	15	True				
ANR	895817	IfStatement	if ( input [ 2 ] && input [ 3 ] )		894313	16					
ANR	895818	Condition	input [ 2 ] && input [ 3 ]	3388:6:97960:97979	894313	0	True				
ANR	895819	AndExpression	input [ 2 ] && input [ 3 ]		894313	0		&&			
ANR	895820	ArrayIndexing	input [ 2 ]		894313	0					
ANR	895821	Identifier	input		894313	0					
ANR	895822	PrimaryExpression	2		894313	1					
ANR	895823	ArrayIndexing	input [ 3 ]		894313	1					
ANR	895824	Identifier	input		894313	0					
ANR	895825	PrimaryExpression	3		894313	1					
ANR	895826	CompoundStatement		239:3:6329:6343	894313	1					
ANR	895827	IdentifierDeclStatement	char * string = strdup ( input + 3 ) ;	3389:3:97987:98020	894313	0	True				
ANR	895828	IdentifierDecl	* string = strdup ( input + 3 )		894313	0					
ANR	895829	IdentifierDeclType	char *		894313	0					
ANR	895830	Identifier	string		894313	1					
ANR	895831	AssignmentExpression	* string = strdup ( input + 3 )		894313	2		=			
ANR	895832	Identifier	string		894313	0					
ANR	895833	CallExpression	strdup ( input + 3 )		894313	1					
ANR	895834	Callee	strdup		894313	0					
ANR	895835	Identifier	strdup		894313	0					
ANR	895836	ArgumentList	input + 3		894313	1					
ANR	895837	Argument	input + 3		894313	0					
ANR	895838	AdditiveExpression	input + 3		894313	0		+			
ANR	895839	Identifier	input		894313	0					
ANR	895840	PrimaryExpression	3		894313	1					
ANR	895841	IdentifierDeclStatement	char * module = NULL ;	3390:3:98025:98044	894313	1	True				
ANR	895842	IdentifierDecl	* module = NULL		894313	0					
ANR	895843	IdentifierDeclType	char *		894313	0					
ANR	895844	Identifier	module		894313	1					
ANR	895845	AssignmentExpression	* module = NULL		894313	2		=			
ANR	895846	Identifier	NULL		894313	0					
ANR	895847	Identifier	NULL		894313	1					
ANR	895848	IdentifierDeclStatement	st64 delta = 0 ;	3391:3:98049:98063	894313	2	True				
ANR	895849	IdentifierDecl	delta = 0		894313	0					
ANR	895850	IdentifierDeclType	st64		894313	0					
ANR	895851	Identifier	delta		894313	1					
ANR	895852	AssignmentExpression	delta = 0		894313	2		=			
ANR	895853	Identifier	delta		894313	0					
ANR	895854	PrimaryExpression	0		894313	1					
ANR	895855	ExpressionStatement	"module = strtok ( string , "" "" )"	3393:3:98069:98098	894313	3	True				
ANR	895856	AssignmentExpression	"module = strtok ( string , "" "" )"		894313	0		=			
ANR	895857	Identifier	module		894313	0					
ANR	895858	CallExpression	"strtok ( string , "" "" )"		894313	1					
ANR	895859	Callee	strtok		894313	0					
ANR	895860	Identifier	strtok		894313	0					
ANR	895861	ArgumentList	string		894313	1					
ANR	895862	Argument	string		894313	0					
ANR	895863	Identifier	string		894313	0					
ANR	895864	Argument	""" """		894313	1					
ANR	895865	PrimaryExpression	""" """		894313	0					
ANR	895866	ExpressionStatement	"delta = ( ut64 ) r_num_math ( core -> num , strtok ( NULL , """" ) )"	3394:3:98103:98158	894313	4	True				
ANR	895867	AssignmentExpression	"delta = ( ut64 ) r_num_math ( core -> num , strtok ( NULL , """" ) )"		894313	0		=			
ANR	895868	Identifier	delta		894313	0					
ANR	895869	CastExpression	"( ut64 ) r_num_math ( core -> num , strtok ( NULL , """" ) )"		894313	1					
ANR	895870	CastTarget	ut64		894313	0					
ANR	895871	CallExpression	"r_num_math ( core -> num , strtok ( NULL , """" ) )"		894313	1					
ANR	895872	Callee	r_num_math		894313	0					
ANR	895873	Identifier	r_num_math		894313	0					
ANR	895874	ArgumentList	core -> num		894313	1					
ANR	895875	Argument	core -> num		894313	0					
ANR	895876	PtrMemberAccess	core -> num		894313	0					
ANR	895877	Identifier	core		894313	0					
ANR	895878	Identifier	num		894313	1					
ANR	895879	Argument	"strtok ( NULL , """" )"		894313	1					
ANR	895880	CallExpression	"strtok ( NULL , """" )"		894313	0					
ANR	895881	Callee	strtok		894313	0					
ANR	895882	Identifier	strtok		894313	0					
ANR	895883	ArgumentList	NULL		894313	1					
ANR	895884	Argument	NULL		894313	0					
ANR	895885	Identifier	NULL		894313	0					
ANR	895886	Argument	""""""		894313	1					
ANR	895887	PrimaryExpression	""""""		894313	0					
ANR	895888	ExpressionStatement	"bpi = r_debug_bp_add ( core -> dbg , 0 , hwbp , false , 0 , module , delta )"	3395:3:98163:98229	894313	5	True				
ANR	895889	AssignmentExpression	"bpi = r_debug_bp_add ( core -> dbg , 0 , hwbp , false , 0 , module , delta )"		894313	0		=			
ANR	895890	Identifier	bpi		894313	0					
ANR	895891	CallExpression	"r_debug_bp_add ( core -> dbg , 0 , hwbp , false , 0 , module , delta )"		894313	1					
ANR	895892	Callee	r_debug_bp_add		894313	0					
ANR	895893	Identifier	r_debug_bp_add		894313	0					
ANR	895894	ArgumentList	core -> dbg		894313	1					
ANR	895895	Argument	core -> dbg		894313	0					
ANR	895896	PtrMemberAccess	core -> dbg		894313	0					
ANR	895897	Identifier	core		894313	0					
ANR	895898	Identifier	dbg		894313	1					
ANR	895899	Argument	0		894313	1					
ANR	895900	PrimaryExpression	0		894313	0					
ANR	895901	Argument	hwbp		894313	2					
ANR	895902	Identifier	hwbp		894313	0					
ANR	895903	Argument	false		894313	3					
ANR	895904	Identifier	false		894313	0					
ANR	895905	Argument	0		894313	4					
ANR	895906	PrimaryExpression	0		894313	0					
ANR	895907	Argument	module		894313	5					
ANR	895908	Identifier	module		894313	0					
ANR	895909	Argument	delta		894313	6					
ANR	895910	Identifier	delta		894313	0					
ANR	895911	IfStatement	if ( ! bpi )		894313	6					
ANR	895912	Condition	! bpi	3396:7:98238:98241	894313	0	True				
ANR	895913	UnaryOperationExpression	! bpi		894313	0					
ANR	895914	UnaryOperator	!		894313	0					
ANR	895915	Identifier	bpi		894313	1					
ANR	895916	CompoundStatement		244:13:6524:6524	894313	1					
ANR	895917	ExpressionStatement	"eprintf ( ""Cannot set breakpoint.\\n"" )"	3397:4:98250:98286	894313	0	True				
ANR	895918	CallExpression	"eprintf ( ""Cannot set breakpoint.\\n"" )"		894313	0					
ANR	895919	Callee	eprintf		894313	0					
ANR	895920	Identifier	eprintf		894313	0					
ANR	895921	ArgumentList	"""Cannot set breakpoint.\\n"""		894313	1					
ANR	895922	Argument	"""Cannot set breakpoint.\\n"""		894313	0					
ANR	895923	PrimaryExpression	"""Cannot set breakpoint.\\n"""		894313	0					
ANR	895924	ExpressionStatement	free ( string )	3399:3:98296:98309	894313	7	True				
ANR	895925	CallExpression	free ( string )		894313	0					
ANR	895926	Callee	free		894313	0					
ANR	895927	Identifier	free		894313	0					
ANR	895928	ArgumentList	string		894313	1					
ANR	895929	Argument	string		894313	0					
ANR	895930	Identifier	string		894313	0					
ANR	895931	BreakStatement	break ;	3401:2:98317:98322	894313	17	True				
ANR	895932	Label	case 'j' :	3402:1:98325:98333	894313	18	True				
ANR	895933	ExpressionStatement	"r_bp_list ( core -> dbg -> bp , 'j' )"	3402:11:98335:98365	894313	19	True				
ANR	895934	CallExpression	"r_bp_list ( core -> dbg -> bp , 'j' )"		894313	0					
ANR	895935	Callee	r_bp_list		894313	0					
ANR	895936	Identifier	r_bp_list		894313	0					
ANR	895937	ArgumentList	core -> dbg -> bp		894313	1					
ANR	895938	Argument	core -> dbg -> bp		894313	0					
ANR	895939	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	895940	PtrMemberAccess	core -> dbg		894313	0					
ANR	895941	Identifier	core		894313	0					
ANR	895942	Identifier	dbg		894313	1					
ANR	895943	Identifier	bp		894313	1					
ANR	895944	Argument	'j'		894313	1					
ANR	895945	PrimaryExpression	'j'		894313	0					
ANR	895946	BreakStatement	break ;	3402:43:98367:98372	894313	20	True				
ANR	895947	Label	case '*' :	3403:1:98375:98383	894313	21	True				
ANR	895948	ExpressionStatement	"r_bp_list ( core -> dbg -> bp , 1 )"	3403:11:98385:98413	894313	22	True				
ANR	895949	CallExpression	"r_bp_list ( core -> dbg -> bp , 1 )"		894313	0					
ANR	895950	Callee	r_bp_list		894313	0					
ANR	895951	Identifier	r_bp_list		894313	0					
ANR	895952	ArgumentList	core -> dbg -> bp		894313	1					
ANR	895953	Argument	core -> dbg -> bp		894313	0					
ANR	895954	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	895955	PtrMemberAccess	core -> dbg		894313	0					
ANR	895956	Identifier	core		894313	0					
ANR	895957	Identifier	dbg		894313	1					
ANR	895958	Identifier	bp		894313	1					
ANR	895959	Argument	1		894313	1					
ANR	895960	PrimaryExpression	1		894313	0					
ANR	895961	BreakStatement	break ;	3403:41:98415:98420	894313	23	True				
ANR	895962	Label	case '\\0' :	3404:1:98423:98432	894313	24	True				
ANR	895963	ExpressionStatement	"r_bp_list ( core -> dbg -> bp , 0 )"	3404:12:98434:98462	894313	25	True				
ANR	895964	CallExpression	"r_bp_list ( core -> dbg -> bp , 0 )"		894313	0					
ANR	895965	Callee	r_bp_list		894313	0					
ANR	895966	Identifier	r_bp_list		894313	0					
ANR	895967	ArgumentList	core -> dbg -> bp		894313	1					
ANR	895968	Argument	core -> dbg -> bp		894313	0					
ANR	895969	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	895970	PtrMemberAccess	core -> dbg		894313	0					
ANR	895971	Identifier	core		894313	0					
ANR	895972	Identifier	dbg		894313	1					
ANR	895973	Identifier	bp		894313	1					
ANR	895974	Argument	0		894313	1					
ANR	895975	PrimaryExpression	0		894313	0					
ANR	895976	BreakStatement	break ;	3404:42:98464:98469	894313	26	True				
ANR	895977	Label	case '-' :	3405:1:98472:98480	894313	27	True				
ANR	895978	IfStatement	if ( input [ 2 ] == '*' )		894313	28					
ANR	895979	Condition	input [ 2 ] == '*'	3406:6:98497:98511	894313	0	True				
ANR	895980	EqualityExpression	input [ 2 ] == '*'		894313	0		==			
ANR	895981	ArrayIndexing	input [ 2 ]		894313	0					
ANR	895982	Identifier	input		894313	0					
ANR	895983	PrimaryExpression	2		894313	1					
ANR	895984	PrimaryExpression	'*'		894313	1					
ANR	895985	CompoundStatement		254:23:6794:6794	894313	1					
ANR	895986	ExpressionStatement	r_bp_del_all ( core -> dbg -> bp )	3407:3:98519:98547	894313	0	True				
ANR	895987	CallExpression	r_bp_del_all ( core -> dbg -> bp )		894313	0					
ANR	895988	Callee	r_bp_del_all		894313	0					
ANR	895989	Identifier	r_bp_del_all		894313	0					
ANR	895990	ArgumentList	core -> dbg -> bp		894313	1					
ANR	895991	Argument	core -> dbg -> bp		894313	0					
ANR	895992	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	895993	PtrMemberAccess	core -> dbg		894313	0					
ANR	895994	Identifier	core		894313	0					
ANR	895995	Identifier	dbg		894313	1					
ANR	895996	Identifier	bp		894313	1					
ANR	895997	ElseStatement	else		894313	0					
ANR	895998	CompoundStatement		260:3:6952:6982	894313	0					
ANR	895999	Statement	define	3409:4:98564:98569	894313	0	True				
ANR	896000	Statement	DB_ARG	3409:11:98571:98576	894313	1	True				
ANR	896001	Statement	(	3409:17:98577:98577	894313	2	True				
ANR	896002	Statement	x	3409:18:98578:98578	894313	3	True				
ANR	896003	Statement	)	3409:19:98579:98579	894313	4	True				
ANR	896004	Statement	r_str_word_get0	3409:21:98581:98595	894313	5	True				
ANR	896005	Statement	(	3409:36:98596:98596	894313	6	True				
ANR	896006	Statement	str	3409:37:98597:98599	894313	7	True				
ANR	896007	Statement	","	3409:40:98600:98600	894313	8	True				
ANR	896008	Statement	x	3409:42:98602:98602	894313	9	True				
ANR	896009	Statement	)	3409:43:98603:98603	894313	10	True				
ANR	896010	IdentifierDeclStatement	char * str = strdup ( r_str_trim_ro ( input + 2 ) ) ;	3410:3:98608:98653	894313	11	True				
ANR	896011	IdentifierDecl	* str = strdup ( r_str_trim_ro ( input + 2 ) )		894313	0					
ANR	896012	IdentifierDeclType	char *		894313	0					
ANR	896013	Identifier	str		894313	1					
ANR	896014	AssignmentExpression	* str = strdup ( r_str_trim_ro ( input + 2 ) )		894313	2		=			
ANR	896015	Identifier	str		894313	0					
ANR	896016	CallExpression	strdup ( r_str_trim_ro ( input + 2 ) )		894313	1					
ANR	896017	Callee	strdup		894313	0					
ANR	896018	Identifier	strdup		894313	0					
ANR	896019	ArgumentList	r_str_trim_ro ( input + 2 )		894313	1					
ANR	896020	Argument	r_str_trim_ro ( input + 2 )		894313	0					
ANR	896021	CallExpression	r_str_trim_ro ( input + 2 )		894313	0					
ANR	896022	Callee	r_str_trim_ro		894313	0					
ANR	896023	Identifier	r_str_trim_ro		894313	0					
ANR	896024	ArgumentList	input + 2		894313	1					
ANR	896025	Argument	input + 2		894313	0					
ANR	896026	AdditiveExpression	input + 2		894313	0		+			
ANR	896027	Identifier	input		894313	0					
ANR	896028	PrimaryExpression	2		894313	1					
ANR	896029	IdentifierDeclStatement	int i = 0 ;	3411:3:98658:98667	894313	12	True				
ANR	896030	IdentifierDecl	i = 0		894313	0					
ANR	896031	IdentifierDeclType	int		894313	0					
ANR	896032	Identifier	i		894313	1					
ANR	896033	AssignmentExpression	i = 0		894313	2		=			
ANR	896034	Identifier	i		894313	0					
ANR	896035	PrimaryExpression	0		894313	1					
ANR	896036	IdentifierDeclStatement	int sl = r_str_word_set0 ( str ) ;	3412:3:98672:98702	894313	13	True				
ANR	896037	IdentifierDecl	sl = r_str_word_set0 ( str )		894313	0					
ANR	896038	IdentifierDeclType	int		894313	0					
ANR	896039	Identifier	sl		894313	1					
ANR	896040	AssignmentExpression	sl = r_str_word_set0 ( str )		894313	2		=			
ANR	896041	Identifier	sl		894313	0					
ANR	896042	CallExpression	r_str_word_set0 ( str )		894313	1					
ANR	896043	Callee	r_str_word_set0		894313	0					
ANR	896044	Identifier	r_str_word_set0		894313	0					
ANR	896045	ArgumentList	str		894313	1					
ANR	896046	Argument	str		894313	0					
ANR	896047	Identifier	str		894313	0					
ANR	896048	ForStatement	for ( ; i < sl ; i ++ )		894313	14					
ANR	896049	Condition	i < sl	3413:11:98715:98720	894313	0	True				
ANR	896050	RelationalExpression	i < sl		894313	0		<			
ANR	896051	Identifier	i		894313	0					
ANR	896052	Identifier	sl		894313	1					
ANR	896053	PostIncDecOperationExpression	i ++	3413:19:98723:98725	894313	1	True				
ANR	896054	Identifier	i		894313	0					
ANR	896055	IncDec	++		894313	1					
ANR	896056	CompoundStatement		262:4:7014:7066	894313	2					
ANR	896057	IdentifierDeclStatement	"const ut64 addr = r_num_math ( core -> num , DB_ARG ( i ) ) ;"	3414:4:98734:98786	894313	0	True				
ANR	896058	IdentifierDecl	"addr = r_num_math ( core -> num , DB_ARG ( i ) )"		894313	0					
ANR	896059	IdentifierDeclType	const ut64		894313	0					
ANR	896060	Identifier	addr		894313	1					
ANR	896061	AssignmentExpression	"addr = r_num_math ( core -> num , DB_ARG ( i ) )"		894313	2		=			
ANR	896062	Identifier	addr		894313	0					
ANR	896063	CallExpression	"r_num_math ( core -> num , DB_ARG ( i ) )"		894313	1					
ANR	896064	Callee	r_num_math		894313	0					
ANR	896065	Identifier	r_num_math		894313	0					
ANR	896066	ArgumentList	core -> num		894313	1					
ANR	896067	Argument	core -> num		894313	0					
ANR	896068	PtrMemberAccess	core -> num		894313	0					
ANR	896069	Identifier	core		894313	0					
ANR	896070	Identifier	num		894313	1					
ANR	896071	Argument	DB_ARG ( i )		894313	1					
ANR	896072	CallExpression	DB_ARG ( i )		894313	0					
ANR	896073	Callee	DB_ARG		894313	0					
ANR	896074	Identifier	DB_ARG		894313	0					
ANR	896075	ArgumentList	i		894313	1					
ANR	896076	Argument	i		894313	0					
ANR	896077	Identifier	i		894313	0					
ANR	896078	ExpressionStatement	"r_bp_del ( core -> dbg -> bp , addr )"	3415:4:98792:98822	894313	1	True				
ANR	896079	CallExpression	"r_bp_del ( core -> dbg -> bp , addr )"		894313	0					
ANR	896080	Callee	r_bp_del		894313	0					
ANR	896081	Identifier	r_bp_del		894313	0					
ANR	896082	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896083	Argument	core -> dbg -> bp		894313	0					
ANR	896084	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896085	PtrMemberAccess	core -> dbg		894313	0					
ANR	896086	Identifier	core		894313	0					
ANR	896087	Identifier	dbg		894313	1					
ANR	896088	Identifier	bp		894313	1					
ANR	896089	Argument	addr		894313	1					
ANR	896090	Identifier	addr		894313	0					
ANR	896091	ExpressionStatement	free ( str )	3417:3:98832:98842	894313	15	True				
ANR	896092	CallExpression	free ( str )		894313	0					
ANR	896093	Callee	free		894313	0					
ANR	896094	Identifier	free		894313	0					
ANR	896095	ArgumentList	str		894313	1					
ANR	896096	Argument	str		894313	0					
ANR	896097	Identifier	str		894313	0					
ANR	896098	BreakStatement	break ;	3419:2:98850:98855	894313	29	True				
ANR	896099	Label	case 'c' :	3420:1:98858:98866	894313	30	True				
ANR	896100	IfStatement	if ( input [ 2 ] == ' ' )		894313	31					
ANR	896101	Condition	input [ 2 ] == ' '	3421:6:98883:98897	894313	0	True				
ANR	896102	EqualityExpression	input [ 2 ] == ' '		894313	0		==			
ANR	896103	ArrayIndexing	input [ 2 ]		894313	0					
ANR	896104	Identifier	input		894313	0					
ANR	896105	PrimaryExpression	2		894313	1					
ANR	896106	PrimaryExpression	' '		894313	1					
ANR	896107	CompoundStatement		270:3:7185:7215	894313	1					
ANR	896108	IdentifierDeclStatement	char * inp = strdup ( input + 3 ) ;	3422:3:98905:98935	894313	0	True				
ANR	896109	IdentifierDecl	* inp = strdup ( input + 3 )		894313	0					
ANR	896110	IdentifierDeclType	char *		894313	0					
ANR	896111	Identifier	inp		894313	1					
ANR	896112	AssignmentExpression	* inp = strdup ( input + 3 )		894313	2		=			
ANR	896113	Identifier	inp		894313	0					
ANR	896114	CallExpression	strdup ( input + 3 )		894313	1					
ANR	896115	Callee	strdup		894313	0					
ANR	896116	Identifier	strdup		894313	0					
ANR	896117	ArgumentList	input + 3		894313	1					
ANR	896118	Argument	input + 3		894313	0					
ANR	896119	AdditiveExpression	input + 3		894313	0		+			
ANR	896120	Identifier	input		894313	0					
ANR	896121	PrimaryExpression	3		894313	1					
ANR	896122	IfStatement	if ( inp )		894313	1					
ANR	896123	Condition	inp	3423:7:98944:98946	894313	0	True				
ANR	896124	Identifier	inp		894313	0					
ANR	896125	CompoundStatement		272:4:7235:7264	894313	1					
ANR	896126	IdentifierDeclStatement	"char * arg = strchr ( inp , ' ' ) ;"	3424:4:98955:98984	894313	0	True				
ANR	896127	IdentifierDecl	"* arg = strchr ( inp , ' ' )"		894313	0					
ANR	896128	IdentifierDeclType	char *		894313	0					
ANR	896129	Identifier	arg		894313	1					
ANR	896130	AssignmentExpression	"* arg = strchr ( inp , ' ' )"		894313	2		=			
ANR	896131	Identifier	arg		894313	0					
ANR	896132	CallExpression	"strchr ( inp , ' ' )"		894313	1					
ANR	896133	Callee	strchr		894313	0					
ANR	896134	Identifier	strchr		894313	0					
ANR	896135	ArgumentList	inp		894313	1					
ANR	896136	Argument	inp		894313	0					
ANR	896137	Identifier	inp		894313	0					
ANR	896138	Argument	' '		894313	1					
ANR	896139	PrimaryExpression	' '		894313	0					
ANR	896140	IfStatement	if ( arg )		894313	1					
ANR	896141	Condition	arg	3425:8:98994:98996	894313	0	True				
ANR	896142	Identifier	arg		894313	0					
ANR	896143	CompoundStatement		273:13:7279:7279	894313	1					
ANR	896144	ExpressionStatement	* arg ++ = 0	3426:5:99006:99016	894313	0	True				
ANR	896145	AssignmentExpression	* arg ++ = 0		894313	0		=			
ANR	896146	UnaryOperationExpression	* arg ++		894313	0					
ANR	896147	UnaryOperator	*		894313	0					
ANR	896148	PostIncDecOperationExpression	arg ++		894313	1					
ANR	896149	Identifier	arg		894313	0					
ANR	896150	IncDec	++		894313	1					
ANR	896151	PrimaryExpression	0		894313	1					
ANR	896152	ExpressionStatement	"addr = r_num_math ( core -> num , inp )"	3427:5:99023:99057	894313	1	True				
ANR	896153	AssignmentExpression	"addr = r_num_math ( core -> num , inp )"		894313	0		=			
ANR	896154	Identifier	addr		894313	0					
ANR	896155	CallExpression	"r_num_math ( core -> num , inp )"		894313	1					
ANR	896156	Callee	r_num_math		894313	0					
ANR	896157	Identifier	r_num_math		894313	0					
ANR	896158	ArgumentList	core -> num		894313	1					
ANR	896159	Argument	core -> num		894313	0					
ANR	896160	PtrMemberAccess	core -> num		894313	0					
ANR	896161	Identifier	core		894313	0					
ANR	896162	Identifier	num		894313	1					
ANR	896163	Argument	inp		894313	1					
ANR	896164	Identifier	inp		894313	0					
ANR	896165	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"	3428:5:99064:99103	894313	2	True				
ANR	896166	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		894313	0		=			
ANR	896167	Identifier	bpi		894313	0					
ANR	896168	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		894313	1					
ANR	896169	Callee	r_bp_get_at		894313	0					
ANR	896170	Identifier	r_bp_get_at		894313	0					
ANR	896171	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896172	Argument	core -> dbg -> bp		894313	0					
ANR	896173	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896174	PtrMemberAccess	core -> dbg		894313	0					
ANR	896175	Identifier	core		894313	0					
ANR	896176	Identifier	dbg		894313	1					
ANR	896177	Identifier	bp		894313	1					
ANR	896178	Argument	addr		894313	1					
ANR	896179	Identifier	addr		894313	0					
ANR	896180	IfStatement	if ( bpi )		894313	3					
ANR	896181	Condition	bpi	3429:9:99114:99116	894313	0	True				
ANR	896182	Identifier	bpi		894313	0					
ANR	896183	CompoundStatement		277:14:7399:7399	894313	1					
ANR	896184	ExpressionStatement	free ( bpi -> data )	3430:6:99127:99143	894313	0	True				
ANR	896185	CallExpression	free ( bpi -> data )		894313	0					
ANR	896186	Callee	free		894313	0					
ANR	896187	Identifier	free		894313	0					
ANR	896188	ArgumentList	bpi -> data		894313	1					
ANR	896189	Argument	bpi -> data		894313	0					
ANR	896190	PtrMemberAccess	bpi -> data		894313	0					
ANR	896191	Identifier	bpi		894313	0					
ANR	896192	Identifier	data		894313	1					
ANR	896193	ExpressionStatement	bpi -> data = strdup ( arg )	3431:6:99151:99175	894313	1	True				
ANR	896194	AssignmentExpression	bpi -> data = strdup ( arg )		894313	0		=			
ANR	896195	PtrMemberAccess	bpi -> data		894313	0					
ANR	896196	Identifier	bpi		894313	0					
ANR	896197	Identifier	data		894313	1					
ANR	896198	CallExpression	strdup ( arg )		894313	1					
ANR	896199	Callee	strdup		894313	0					
ANR	896200	Identifier	strdup		894313	0					
ANR	896201	ArgumentList	arg		894313	1					
ANR	896202	Argument	arg		894313	0					
ANR	896203	Identifier	arg		894313	0					
ANR	896204	ElseStatement	else		894313	0					
ANR	896205	CompoundStatement		280:12:7469:7469	894313	0					
ANR	896206	Statement	eprintf	3433:6:99197:99203	894313	0	True				
ANR	896207	Statement	(	3433:14:99205:99205	894313	1	True				
ANR	896208	Statement	"""No breakpoint defined at 0x%08"""	3433:15:99206:99237	894313	2	True				
ANR	896209	Statement	PFMT64x	3433:47:99238:99244	894313	3	True				
ANR	896210	Statement	"""\\n"""	3433:54:99245:99248	894313	4	True				
ANR	896211	Statement	","	3433:58:99249:99249	894313	5	True				
ANR	896212	Statement	addr	3433:60:99251:99254	894313	6	True				
ANR	896213	Statement	)	3433:64:99255:99255	894313	7	True				
ANR	896214	ExpressionStatement		3433:65:99256:99256	894313	8	True				
ANR	896215	ElseStatement	else		894313	0					
ANR	896216	CompoundStatement		283:11:7556:7556	894313	0					
ANR	896217	ExpressionStatement	"eprintf ( ""- Missing argument\\n"" )"	3436:5:99283:99315	894313	0	True				
ANR	896218	CallExpression	"eprintf ( ""- Missing argument\\n"" )"		894313	0					
ANR	896219	Callee	eprintf		894313	0					
ANR	896220	Identifier	eprintf		894313	0					
ANR	896221	ArgumentList	"""- Missing argument\\n"""		894313	1					
ANR	896222	Argument	"""- Missing argument\\n"""		894313	0					
ANR	896223	PrimaryExpression	"""- Missing argument\\n"""		894313	0					
ANR	896224	ExpressionStatement	free ( inp )	3438:4:99327:99337	894313	2	True				
ANR	896225	CallExpression	free ( inp )		894313	0					
ANR	896226	Callee	free		894313	0					
ANR	896227	Identifier	free		894313	0					
ANR	896228	ArgumentList	inp		894313	1					
ANR	896229	Argument	inp		894313	0					
ANR	896230	Identifier	inp		894313	0					
ANR	896231	ElseStatement	else		894313	0					
ANR	896232	CompoundStatement		287:10:7629:7629	894313	0					
ANR	896233	ExpressionStatement	"eprintf ( ""Cannot strdup. Your heap is fucked up\\n"" )"	3440:4:99355:99406	894313	0	True				
ANR	896234	CallExpression	"eprintf ( ""Cannot strdup. Your heap is fucked up\\n"" )"		894313	0					
ANR	896235	Callee	eprintf		894313	0					
ANR	896236	Identifier	eprintf		894313	0					
ANR	896237	ArgumentList	"""Cannot strdup. Your heap is fucked up\\n"""		894313	1					
ANR	896238	Argument	"""Cannot strdup. Your heap is fucked up\\n"""		894313	0					
ANR	896239	PrimaryExpression	"""Cannot strdup. Your heap is fucked up\\n"""		894313	0					
ANR	896240	ElseStatement	else		894313	0					
ANR	896241	CompoundStatement		290:9:7702:7702	894313	0					
ANR	896242	ExpressionStatement	"eprintf ( ""Use: dbc [addr] [command]\\n"" )"	3443:3:99427:99466	894313	0	True				
ANR	896243	CallExpression	"eprintf ( ""Use: dbc [addr] [command]\\n"" )"		894313	0					
ANR	896244	Callee	eprintf		894313	0					
ANR	896245	Identifier	eprintf		894313	0					
ANR	896246	ArgumentList	"""Use: dbc [addr] [command]\\n"""		894313	1					
ANR	896247	Argument	"""Use: dbc [addr] [command]\\n"""		894313	0					
ANR	896248	PrimaryExpression	"""Use: dbc [addr] [command]\\n"""		894313	0					
ANR	896249	BreakStatement	break ;	3445:2:99474:99479	894313	32	True				
ANR	896250	Label	case 'C' :	3446:1:99482:99490	894313	33	True				
ANR	896251	IfStatement	if ( input [ 2 ] == ' ' )		894313	34					
ANR	896252	Condition	input [ 2 ] == ' '	3447:6:99507:99521	894313	0	True				
ANR	896253	EqualityExpression	input [ 2 ] == ' '		894313	0		==			
ANR	896254	ArrayIndexing	input [ 2 ]		894313	0					
ANR	896255	Identifier	input		894313	0					
ANR	896256	PrimaryExpression	2		894313	1					
ANR	896257	PrimaryExpression	' '		894313	1					
ANR	896258	CompoundStatement		296:3:7809:7839	894313	1					
ANR	896259	IdentifierDeclStatement	char * inp = strdup ( input + 3 ) ;	3448:3:99529:99559	894313	0	True				
ANR	896260	IdentifierDecl	* inp = strdup ( input + 3 )		894313	0					
ANR	896261	IdentifierDeclType	char *		894313	0					
ANR	896262	Identifier	inp		894313	1					
ANR	896263	AssignmentExpression	* inp = strdup ( input + 3 )		894313	2		=			
ANR	896264	Identifier	inp		894313	0					
ANR	896265	CallExpression	strdup ( input + 3 )		894313	1					
ANR	896266	Callee	strdup		894313	0					
ANR	896267	Identifier	strdup		894313	0					
ANR	896268	ArgumentList	input + 3		894313	1					
ANR	896269	Argument	input + 3		894313	0					
ANR	896270	AdditiveExpression	input + 3		894313	0		+			
ANR	896271	Identifier	input		894313	0					
ANR	896272	PrimaryExpression	3		894313	1					
ANR	896273	IfStatement	if ( inp )		894313	1					
ANR	896274	Condition	inp	3449:7:99568:99570	894313	0	True				
ANR	896275	Identifier	inp		894313	0					
ANR	896276	CompoundStatement		298:4:7859:7888	894313	1					
ANR	896277	IdentifierDeclStatement	"char * arg = strchr ( inp , ' ' ) ;"	3450:4:99579:99608	894313	0	True				
ANR	896278	IdentifierDecl	"* arg = strchr ( inp , ' ' )"		894313	0					
ANR	896279	IdentifierDeclType	char *		894313	0					
ANR	896280	Identifier	arg		894313	1					
ANR	896281	AssignmentExpression	"* arg = strchr ( inp , ' ' )"		894313	2		=			
ANR	896282	Identifier	arg		894313	0					
ANR	896283	CallExpression	"strchr ( inp , ' ' )"		894313	1					
ANR	896284	Callee	strchr		894313	0					
ANR	896285	Identifier	strchr		894313	0					
ANR	896286	ArgumentList	inp		894313	1					
ANR	896287	Argument	inp		894313	0					
ANR	896288	Identifier	inp		894313	0					
ANR	896289	Argument	' '		894313	1					
ANR	896290	PrimaryExpression	' '		894313	0					
ANR	896291	IfStatement	if ( arg )		894313	1					
ANR	896292	Condition	arg	3451:8:99618:99620	894313	0	True				
ANR	896293	Identifier	arg		894313	0					
ANR	896294	CompoundStatement		299:13:7903:7903	894313	1					
ANR	896295	ExpressionStatement	* arg ++ = 0	3452:5:99630:99640	894313	0	True				
ANR	896296	AssignmentExpression	* arg ++ = 0		894313	0		=			
ANR	896297	UnaryOperationExpression	* arg ++		894313	0					
ANR	896298	UnaryOperator	*		894313	0					
ANR	896299	PostIncDecOperationExpression	arg ++		894313	1					
ANR	896300	Identifier	arg		894313	0					
ANR	896301	IncDec	++		894313	1					
ANR	896302	PrimaryExpression	0		894313	1					
ANR	896303	ExpressionStatement	"addr = r_num_math ( core -> num , inp )"	3453:5:99647:99681	894313	1	True				
ANR	896304	AssignmentExpression	"addr = r_num_math ( core -> num , inp )"		894313	0		=			
ANR	896305	Identifier	addr		894313	0					
ANR	896306	CallExpression	"r_num_math ( core -> num , inp )"		894313	1					
ANR	896307	Callee	r_num_math		894313	0					
ANR	896308	Identifier	r_num_math		894313	0					
ANR	896309	ArgumentList	core -> num		894313	1					
ANR	896310	Argument	core -> num		894313	0					
ANR	896311	PtrMemberAccess	core -> num		894313	0					
ANR	896312	Identifier	core		894313	0					
ANR	896313	Identifier	num		894313	1					
ANR	896314	Argument	inp		894313	1					
ANR	896315	Identifier	inp		894313	0					
ANR	896316	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"	3454:5:99688:99727	894313	2	True				
ANR	896317	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		894313	0		=			
ANR	896318	Identifier	bpi		894313	0					
ANR	896319	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		894313	1					
ANR	896320	Callee	r_bp_get_at		894313	0					
ANR	896321	Identifier	r_bp_get_at		894313	0					
ANR	896322	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896323	Argument	core -> dbg -> bp		894313	0					
ANR	896324	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896325	PtrMemberAccess	core -> dbg		894313	0					
ANR	896326	Identifier	core		894313	0					
ANR	896327	Identifier	dbg		894313	1					
ANR	896328	Identifier	bp		894313	1					
ANR	896329	Argument	addr		894313	1					
ANR	896330	Identifier	addr		894313	0					
ANR	896331	IfStatement	if ( bpi )		894313	3					
ANR	896332	Condition	bpi	3455:9:99738:99740	894313	0	True				
ANR	896333	Identifier	bpi		894313	0					
ANR	896334	CompoundStatement		303:14:8023:8023	894313	1					
ANR	896335	ExpressionStatement	free ( bpi -> cond )	3456:6:99751:99767	894313	0	True				
ANR	896336	CallExpression	free ( bpi -> cond )		894313	0					
ANR	896337	Callee	free		894313	0					
ANR	896338	Identifier	free		894313	0					
ANR	896339	ArgumentList	bpi -> cond		894313	1					
ANR	896340	Argument	bpi -> cond		894313	0					
ANR	896341	PtrMemberAccess	bpi -> cond		894313	0					
ANR	896342	Identifier	bpi		894313	0					
ANR	896343	Identifier	cond		894313	1					
ANR	896344	ExpressionStatement	bpi -> cond = strdup ( arg )	3457:6:99775:99799	894313	1	True				
ANR	896345	AssignmentExpression	bpi -> cond = strdup ( arg )		894313	0		=			
ANR	896346	PtrMemberAccess	bpi -> cond		894313	0					
ANR	896347	Identifier	bpi		894313	0					
ANR	896348	Identifier	cond		894313	1					
ANR	896349	CallExpression	strdup ( arg )		894313	1					
ANR	896350	Callee	strdup		894313	0					
ANR	896351	Identifier	strdup		894313	0					
ANR	896352	ArgumentList	arg		894313	1					
ANR	896353	Argument	arg		894313	0					
ANR	896354	Identifier	arg		894313	0					
ANR	896355	ElseStatement	else		894313	0					
ANR	896356	CompoundStatement		306:12:8093:8093	894313	0					
ANR	896357	Statement	eprintf	3459:6:99821:99827	894313	0	True				
ANR	896358	Statement	(	3459:14:99829:99829	894313	1	True				
ANR	896359	Statement	"""No breakpoint defined at 0x%08"""	3459:15:99830:99861	894313	2	True				
ANR	896360	Statement	PFMT64x	3459:47:99862:99868	894313	3	True				
ANR	896361	Statement	"""\\n"""	3459:54:99869:99872	894313	4	True				
ANR	896362	Statement	","	3459:58:99873:99873	894313	5	True				
ANR	896363	Statement	addr	3459:60:99875:99878	894313	6	True				
ANR	896364	Statement	)	3459:64:99879:99879	894313	7	True				
ANR	896365	ExpressionStatement		3459:65:99880:99880	894313	8	True				
ANR	896366	ElseStatement	else		894313	0					
ANR	896367	CompoundStatement		309:11:8180:8180	894313	0					
ANR	896368	ExpressionStatement	"eprintf ( ""1 Missing argument\\n"" )"	3462:5:99907:99939	894313	0	True				
ANR	896369	CallExpression	"eprintf ( ""1 Missing argument\\n"" )"		894313	0					
ANR	896370	Callee	eprintf		894313	0					
ANR	896371	Identifier	eprintf		894313	0					
ANR	896372	ArgumentList	"""1 Missing argument\\n"""		894313	1					
ANR	896373	Argument	"""1 Missing argument\\n"""		894313	0					
ANR	896374	PrimaryExpression	"""1 Missing argument\\n"""		894313	0					
ANR	896375	ExpressionStatement	free ( inp )	3464:4:99951:99961	894313	2	True				
ANR	896376	CallExpression	free ( inp )		894313	0					
ANR	896377	Callee	free		894313	0					
ANR	896378	Identifier	free		894313	0					
ANR	896379	ArgumentList	inp		894313	1					
ANR	896380	Argument	inp		894313	0					
ANR	896381	Identifier	inp		894313	0					
ANR	896382	ElseStatement	else		894313	0					
ANR	896383	CompoundStatement		313:10:8253:8253	894313	0					
ANR	896384	ExpressionStatement	"eprintf ( ""Cannot strdup. Your heap is fucked up\\n"" )"	3466:4:99979:100030	894313	0	True				
ANR	896385	CallExpression	"eprintf ( ""Cannot strdup. Your heap is fucked up\\n"" )"		894313	0					
ANR	896386	Callee	eprintf		894313	0					
ANR	896387	Identifier	eprintf		894313	0					
ANR	896388	ArgumentList	"""Cannot strdup. Your heap is fucked up\\n"""		894313	1					
ANR	896389	Argument	"""Cannot strdup. Your heap is fucked up\\n"""		894313	0					
ANR	896390	PrimaryExpression	"""Cannot strdup. Your heap is fucked up\\n"""		894313	0					
ANR	896391	ElseStatement	else		894313	0					
ANR	896392	CompoundStatement		316:9:8326:8326	894313	0					
ANR	896393	ExpressionStatement	"eprintf ( ""Use: dbC [addr] [command]\\n"" )"	3469:3:100051:100090	894313	0	True				
ANR	896394	CallExpression	"eprintf ( ""Use: dbC [addr] [command]\\n"" )"		894313	0					
ANR	896395	Callee	eprintf		894313	0					
ANR	896396	Identifier	eprintf		894313	0					
ANR	896397	ArgumentList	"""Use: dbC [addr] [command]\\n"""		894313	1					
ANR	896398	Argument	"""Use: dbC [addr] [command]\\n"""		894313	0					
ANR	896399	PrimaryExpression	"""Use: dbC [addr] [command]\\n"""		894313	0					
ANR	896400	BreakStatement	break ;	3471:2:100098:100103	894313	35	True				
ANR	896401	Label	case 's' :	3472:1:100106:100114	894313	36	True				
ANR	896402	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	3473:2:100127:100167	894313	37	True				
ANR	896403	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		894313	0		=			
ANR	896404	Identifier	addr		894313	0					
ANR	896405	CallExpression	"r_num_math ( core -> num , input + 2 )"		894313	1					
ANR	896406	Callee	r_num_math		894313	0					
ANR	896407	Identifier	r_num_math		894313	0					
ANR	896408	ArgumentList	core -> num		894313	1					
ANR	896409	Argument	core -> num		894313	0					
ANR	896410	PtrMemberAccess	core -> num		894313	0					
ANR	896411	Identifier	core		894313	0					
ANR	896412	Identifier	num		894313	1					
ANR	896413	Argument	input + 2		894313	1					
ANR	896414	AdditiveExpression	input + 2		894313	0		+			
ANR	896415	Identifier	input		894313	0					
ANR	896416	PrimaryExpression	2		894313	1					
ANR	896417	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"	3474:2:100171:100210	894313	38	True				
ANR	896418	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		894313	0		=			
ANR	896419	Identifier	bpi		894313	0					
ANR	896420	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		894313	1					
ANR	896421	Callee	r_bp_get_at		894313	0					
ANR	896422	Identifier	r_bp_get_at		894313	0					
ANR	896423	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896424	Argument	core -> dbg -> bp		894313	0					
ANR	896425	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896426	PtrMemberAccess	core -> dbg		894313	0					
ANR	896427	Identifier	core		894313	0					
ANR	896428	Identifier	dbg		894313	1					
ANR	896429	Identifier	bp		894313	1					
ANR	896430	Argument	addr		894313	1					
ANR	896431	Identifier	addr		894313	0					
ANR	896432	IfStatement	if ( bpi )		894313	39					
ANR	896433	Condition	bpi	3475:6:100218:100220	894313	0	True				
ANR	896434	Identifier	bpi		894313	0					
ANR	896435	CompoundStatement		323:11:8503:8503	894313	1					
ANR	896436	ExpressionStatement	"r_bp_del ( core -> dbg -> bp , addr )"	3478:3:100325:100355	894313	0	True				
ANR	896437	CallExpression	"r_bp_del ( core -> dbg -> bp , addr )"		894313	0					
ANR	896438	Callee	r_bp_del		894313	0					
ANR	896439	Identifier	r_bp_del		894313	0					
ANR	896440	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896441	Argument	core -> dbg -> bp		894313	0					
ANR	896442	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896443	PtrMemberAccess	core -> dbg		894313	0					
ANR	896444	Identifier	core		894313	0					
ANR	896445	Identifier	dbg		894313	1					
ANR	896446	Identifier	bp		894313	1					
ANR	896447	Argument	addr		894313	1					
ANR	896448	Identifier	addr		894313	0					
ANR	896449	ElseStatement	else		894313	0					
ANR	896450	CompoundStatement		327:9:8646:8646	894313	0					
ANR	896451	ExpressionStatement	"bpi = r_debug_bp_add ( core -> dbg , addr , hwbp , false , 0 , NULL , 0 )"	3481:3:100431:100494	894313	0	True				
ANR	896452	AssignmentExpression	"bpi = r_debug_bp_add ( core -> dbg , addr , hwbp , false , 0 , NULL , 0 )"		894313	0		=			
ANR	896453	Identifier	bpi		894313	0					
ANR	896454	CallExpression	"r_debug_bp_add ( core -> dbg , addr , hwbp , false , 0 , NULL , 0 )"		894313	1					
ANR	896455	Callee	r_debug_bp_add		894313	0					
ANR	896456	Identifier	r_debug_bp_add		894313	0					
ANR	896457	ArgumentList	core -> dbg		894313	1					
ANR	896458	Argument	core -> dbg		894313	0					
ANR	896459	PtrMemberAccess	core -> dbg		894313	0					
ANR	896460	Identifier	core		894313	0					
ANR	896461	Identifier	dbg		894313	1					
ANR	896462	Argument	addr		894313	1					
ANR	896463	Identifier	addr		894313	0					
ANR	896464	Argument	hwbp		894313	2					
ANR	896465	Identifier	hwbp		894313	0					
ANR	896466	Argument	false		894313	3					
ANR	896467	Identifier	false		894313	0					
ANR	896468	Argument	0		894313	4					
ANR	896469	PrimaryExpression	0		894313	0					
ANR	896470	Argument	NULL		894313	5					
ANR	896471	Identifier	NULL		894313	0					
ANR	896472	Argument	0		894313	6					
ANR	896473	PrimaryExpression	0		894313	0					
ANR	896474	IfStatement	if ( ! bpi )		894313	1					
ANR	896475	Condition	! bpi	3482:7:100503:100506	894313	0	True				
ANR	896476	UnaryOperationExpression	! bpi		894313	0					
ANR	896477	UnaryOperator	!		894313	0					
ANR	896478	Identifier	bpi		894313	1					
ANR	896479	CompoundStatement		330:13:8789:8789	894313	1					
ANR	896480	ExpressionStatement	"eprintf ( ""Cannot set breakpoint (%s)\\n"" , input + 2 )"	3483:4:100515:100566	894313	0	True				
ANR	896481	CallExpression	"eprintf ( ""Cannot set breakpoint (%s)\\n"" , input + 2 )"		894313	0					
ANR	896482	Callee	eprintf		894313	0					
ANR	896483	Identifier	eprintf		894313	0					
ANR	896484	ArgumentList	"""Cannot set breakpoint (%s)\\n"""		894313	1					
ANR	896485	Argument	"""Cannot set breakpoint (%s)\\n"""		894313	0					
ANR	896486	PrimaryExpression	"""Cannot set breakpoint (%s)\\n"""		894313	0					
ANR	896487	Argument	input + 2		894313	1					
ANR	896488	AdditiveExpression	input + 2		894313	0		+			
ANR	896489	Identifier	input		894313	0					
ANR	896490	PrimaryExpression	2		894313	1					
ANR	896491	ExpressionStatement	"r_bp_enable ( core -> dbg -> bp , r_num_math ( core -> num , input + 2 ) , true , 0 )"	3486:2:100579:100650	894313	40	True				
ANR	896492	CallExpression	"r_bp_enable ( core -> dbg -> bp , r_num_math ( core -> num , input + 2 ) , true , 0 )"		894313	0					
ANR	896493	Callee	r_bp_enable		894313	0					
ANR	896494	Identifier	r_bp_enable		894313	0					
ANR	896495	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896496	Argument	core -> dbg -> bp		894313	0					
ANR	896497	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896498	PtrMemberAccess	core -> dbg		894313	0					
ANR	896499	Identifier	core		894313	0					
ANR	896500	Identifier	dbg		894313	1					
ANR	896501	Identifier	bp		894313	1					
ANR	896502	Argument	"r_num_math ( core -> num , input + 2 )"		894313	1					
ANR	896503	CallExpression	"r_num_math ( core -> num , input + 2 )"		894313	0					
ANR	896504	Callee	r_num_math		894313	0					
ANR	896505	Identifier	r_num_math		894313	0					
ANR	896506	ArgumentList	core -> num		894313	1					
ANR	896507	Argument	core -> num		894313	0					
ANR	896508	PtrMemberAccess	core -> num		894313	0					
ANR	896509	Identifier	core		894313	0					
ANR	896510	Identifier	num		894313	1					
ANR	896511	Argument	input + 2		894313	1					
ANR	896512	AdditiveExpression	input + 2		894313	0		+			
ANR	896513	Identifier	input		894313	0					
ANR	896514	PrimaryExpression	2		894313	1					
ANR	896515	Argument	true		894313	2					
ANR	896516	Identifier	true		894313	0					
ANR	896517	Argument	0		894313	3					
ANR	896518	PrimaryExpression	0		894313	0					
ANR	896519	BreakStatement	break ;	3487:2:100654:100659	894313	41	True				
ANR	896520	Label	case 'n' :	3488:1:100662:100670	894313	42	True				
ANR	896521	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , core -> offset )"	3489:2:100683:100730	894313	43	True				
ANR	896522	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , core -> offset )"		894313	0		=			
ANR	896523	Identifier	bpi		894313	0					
ANR	896524	CallExpression	"r_bp_get_at ( core -> dbg -> bp , core -> offset )"		894313	1					
ANR	896525	Callee	r_bp_get_at		894313	0					
ANR	896526	Identifier	r_bp_get_at		894313	0					
ANR	896527	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896528	Argument	core -> dbg -> bp		894313	0					
ANR	896529	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896530	PtrMemberAccess	core -> dbg		894313	0					
ANR	896531	Identifier	core		894313	0					
ANR	896532	Identifier	dbg		894313	1					
ANR	896533	Identifier	bp		894313	1					
ANR	896534	Argument	core -> offset		894313	1					
ANR	896535	PtrMemberAccess	core -> offset		894313	0					
ANR	896536	Identifier	core		894313	0					
ANR	896537	Identifier	offset		894313	1					
ANR	896538	IfStatement	if ( input [ 2 ] == ' ' )		894313	44					
ANR	896539	Condition	input [ 2 ] == ' '	3490:6:100738:100752	894313	0	True				
ANR	896540	EqualityExpression	input [ 2 ] == ' '		894313	0		==			
ANR	896541	ArrayIndexing	input [ 2 ]		894313	0					
ANR	896542	Identifier	input		894313	0					
ANR	896543	PrimaryExpression	2		894313	1					
ANR	896544	PrimaryExpression	' '		894313	1					
ANR	896545	CompoundStatement		338:23:9035:9035	894313	1					
ANR	896546	IfStatement	if ( bpi )		894313	0					
ANR	896547	Condition	bpi	3491:7:100764:100766	894313	0	True				
ANR	896548	Identifier	bpi		894313	0					
ANR	896549	CompoundStatement		339:12:9049:9049	894313	1					
ANR	896550	ExpressionStatement	free ( bpi -> name )	3492:4:100775:100791	894313	0	True				
ANR	896551	CallExpression	free ( bpi -> name )		894313	0					
ANR	896552	Callee	free		894313	0					
ANR	896553	Identifier	free		894313	0					
ANR	896554	ArgumentList	bpi -> name		894313	1					
ANR	896555	Argument	bpi -> name		894313	0					
ANR	896556	PtrMemberAccess	bpi -> name		894313	0					
ANR	896557	Identifier	bpi		894313	0					
ANR	896558	Identifier	name		894313	1					
ANR	896559	ExpressionStatement	bpi -> name = strdup ( input + 3 )	3493:4:100797:100827	894313	1	True				
ANR	896560	AssignmentExpression	bpi -> name = strdup ( input + 3 )		894313	0		=			
ANR	896561	PtrMemberAccess	bpi -> name		894313	0					
ANR	896562	Identifier	bpi		894313	0					
ANR	896563	Identifier	name		894313	1					
ANR	896564	CallExpression	strdup ( input + 3 )		894313	1					
ANR	896565	Callee	strdup		894313	0					
ANR	896566	Identifier	strdup		894313	0					
ANR	896567	ArgumentList	input + 3		894313	1					
ANR	896568	Argument	input + 3		894313	0					
ANR	896569	AdditiveExpression	input + 3		894313	0		+			
ANR	896570	Identifier	input		894313	0					
ANR	896571	PrimaryExpression	3		894313	1					
ANR	896572	ElseStatement	else		894313	0					
ANR	896573	CompoundStatement		342:10:9119:9119	894313	0					
ANR	896574	Statement	eprintf	3495:4:100845:100851	894313	0	True				
ANR	896575	Statement	(	3495:12:100853:100853	894313	1	True				
ANR	896576	Statement	"""Cannot find breakpoint at """	3495:13:100854:100881	894313	2	True				
ANR	896577	Statement	"""0x%08"""	3496:6:100889:100895	894313	3	True				
ANR	896578	Statement	PFMT64x	3496:13:100896:100902	894313	4	True				
ANR	896579	Statement	"""\\n"""	3496:20:100903:100906	894313	5	True				
ANR	896580	Statement	","	3496:24:100907:100907	894313	6	True				
ANR	896581	Statement	core	3496:26:100909:100912	894313	7	True				
ANR	896582	Statement	->	3496:30:100913:100914	894313	8	True				
ANR	896583	Statement	offset	3496:32:100915:100920	894313	9	True				
ANR	896584	Statement	)	3496:38:100921:100921	894313	10	True				
ANR	896585	ExpressionStatement		3496:39:100922:100922	894313	11	True				
ANR	896586	ElseStatement	else		894313	0					
ANR	896587	CompoundStatement		346:9:9218:9218	894313	0					
ANR	896588	IfStatement	if ( bpi && bpi -> name )		894313	0					
ANR	896589	Condition	bpi && bpi -> name	3499:7:100947:100962	894313	0	True				
ANR	896590	AndExpression	bpi && bpi -> name		894313	0		&&			
ANR	896591	Identifier	bpi		894313	0					
ANR	896592	PtrMemberAccess	bpi -> name		894313	1					
ANR	896593	Identifier	bpi		894313	0					
ANR	896594	Identifier	name		894313	1					
ANR	896595	CompoundStatement		347:25:9245:9245	894313	1					
ANR	896596	ExpressionStatement	r_cons_println ( bpi -> name )	3500:4:100971:100997	894313	0	True				
ANR	896597	CallExpression	r_cons_println ( bpi -> name )		894313	0					
ANR	896598	Callee	r_cons_println		894313	0					
ANR	896599	Identifier	r_cons_println		894313	0					
ANR	896600	ArgumentList	bpi -> name		894313	1					
ANR	896601	Argument	bpi -> name		894313	0					
ANR	896602	PtrMemberAccess	bpi -> name		894313	0					
ANR	896603	Identifier	bpi		894313	0					
ANR	896604	Identifier	name		894313	1					
ANR	896605	BreakStatement	break ;	3503:2:101010:101015	894313	45	True				
ANR	896606	Label	case 'e' :	3504:1:101018:101026	894313	46	True				
ANR	896607	ForStatement	for ( p = input + 2 ; * p == ' ' ; p ++ )		894313	47					
ANR	896608	ForInit	p = input + 2 ;	3505:7:101035:101048	894313	0	True				
ANR	896609	AssignmentExpression	p = input + 2		894313	0		=			
ANR	896610	Identifier	p		894313	0					
ANR	896611	AdditiveExpression	input + 2		894313	1		+			
ANR	896612	Identifier	input		894313	0					
ANR	896613	PrimaryExpression	2		894313	1					
ANR	896614	Condition	* p == ' '	3505:22:101050:101058	894313	1	True				
ANR	896615	EqualityExpression	* p == ' '		894313	0		==			
ANR	896616	UnaryOperationExpression	* p		894313	0					
ANR	896617	UnaryOperator	*		894313	0					
ANR	896618	Identifier	p		894313	1					
ANR	896619	PrimaryExpression	' '		894313	1					
ANR	896620	PostIncDecOperationExpression	p ++	3505:33:101061:101063	894313	2	True				
ANR	896621	Identifier	p		894313	0					
ANR	896622	IncDec	++		894313	1					
ANR	896623	ExpressionStatement		3505:37:101065:101065	894313	3	True				
ANR	896624	IfStatement	if ( * p == '*' )		894313	48					
ANR	896625	Condition	* p == '*'	3506:6:101073:101081	894313	0	True				
ANR	896626	EqualityExpression	* p == '*'		894313	0		==			
ANR	896627	UnaryOperationExpression	* p		894313	0					
ANR	896628	UnaryOperator	*		894313	0					
ANR	896629	Identifier	p		894313	1					
ANR	896630	PrimaryExpression	'*'		894313	1					
ANR	896631	ExpressionStatement	"r_bp_enable_all ( core -> dbg -> bp , true )"	3506:17:101084:101120	894313	1	True				
ANR	896632	CallExpression	"r_bp_enable_all ( core -> dbg -> bp , true )"		894313	0					
ANR	896633	Callee	r_bp_enable_all		894313	0					
ANR	896634	Identifier	r_bp_enable_all		894313	0					
ANR	896635	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896636	Argument	core -> dbg -> bp		894313	0					
ANR	896637	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896638	PtrMemberAccess	core -> dbg		894313	0					
ANR	896639	Identifier	core		894313	0					
ANR	896640	Identifier	dbg		894313	1					
ANR	896641	Identifier	bp		894313	1					
ANR	896642	Argument	true		894313	1					
ANR	896643	Identifier	true		894313	0					
ANR	896644	ElseStatement	else		894313	0					
ANR	896645	CompoundStatement		355:7:9409:9409	894313	0					
ANR	896646	ForStatement	for ( ; * p && * p != ' ' ; p ++ )		894313	0					
ANR	896647	Condition	* p && * p != ' '	3508:10:101141:101155	894313	0	True				
ANR	896648	AndExpression	* p && * p != ' '		894313	0		&&			
ANR	896649	UnaryOperationExpression	* p		894313	0					
ANR	896650	UnaryOperator	*		894313	0					
ANR	896651	Identifier	p		894313	1					
ANR	896652	EqualityExpression	* p != ' '		894313	1		!=			
ANR	896653	UnaryOperationExpression	* p		894313	0					
ANR	896654	UnaryOperator	*		894313	0					
ANR	896655	Identifier	p		894313	1					
ANR	896656	PrimaryExpression	' '		894313	1					
ANR	896657	PostIncDecOperationExpression	p ++	3508:27:101158:101160	894313	1	True				
ANR	896658	Identifier	p		894313	0					
ANR	896659	IncDec	++		894313	1					
ANR	896660	ExpressionStatement		3508:31:101162:101162	894313	2	True				
ANR	896661	ExpressionStatement	"r_bp_enable ( core -> dbg -> bp , r_num_math ( core -> num , input + 2 ) , true , r_num_math ( core -> num , p ) )"	3509:3:101167:101262	894313	1	True				
ANR	896662	CallExpression	"r_bp_enable ( core -> dbg -> bp , r_num_math ( core -> num , input + 2 ) , true , r_num_math ( core -> num , p ) )"		894313	0					
ANR	896663	Callee	r_bp_enable		894313	0					
ANR	896664	Identifier	r_bp_enable		894313	0					
ANR	896665	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896666	Argument	core -> dbg -> bp		894313	0					
ANR	896667	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896668	PtrMemberAccess	core -> dbg		894313	0					
ANR	896669	Identifier	core		894313	0					
ANR	896670	Identifier	dbg		894313	1					
ANR	896671	Identifier	bp		894313	1					
ANR	896672	Argument	"r_num_math ( core -> num , input + 2 )"		894313	1					
ANR	896673	CallExpression	"r_num_math ( core -> num , input + 2 )"		894313	0					
ANR	896674	Callee	r_num_math		894313	0					
ANR	896675	Identifier	r_num_math		894313	0					
ANR	896676	ArgumentList	core -> num		894313	1					
ANR	896677	Argument	core -> num		894313	0					
ANR	896678	PtrMemberAccess	core -> num		894313	0					
ANR	896679	Identifier	core		894313	0					
ANR	896680	Identifier	num		894313	1					
ANR	896681	Argument	input + 2		894313	1					
ANR	896682	AdditiveExpression	input + 2		894313	0		+			
ANR	896683	Identifier	input		894313	0					
ANR	896684	PrimaryExpression	2		894313	1					
ANR	896685	Argument	true		894313	2					
ANR	896686	Identifier	true		894313	0					
ANR	896687	Argument	"r_num_math ( core -> num , p )"		894313	3					
ANR	896688	CallExpression	"r_num_math ( core -> num , p )"		894313	0					
ANR	896689	Callee	r_num_math		894313	0					
ANR	896690	Identifier	r_num_math		894313	0					
ANR	896691	ArgumentList	core -> num		894313	1					
ANR	896692	Argument	core -> num		894313	0					
ANR	896693	PtrMemberAccess	core -> num		894313	0					
ANR	896694	Identifier	core		894313	0					
ANR	896695	Identifier	num		894313	1					
ANR	896696	Argument	p		894313	1					
ANR	896697	Identifier	p		894313	0					
ANR	896698	BreakStatement	break ;	3511:2:101270:101275	894313	49	True				
ANR	896699	Label	case 'd' :	3512:1:101278:101286	894313	50	True				
ANR	896700	ForStatement	for ( p = input + 2 ; * p == ' ' ; p ++ )		894313	51					
ANR	896701	ForInit	p = input + 2 ;	3513:7:101295:101308	894313	0	True				
ANR	896702	AssignmentExpression	p = input + 2		894313	0		=			
ANR	896703	Identifier	p		894313	0					
ANR	896704	AdditiveExpression	input + 2		894313	1		+			
ANR	896705	Identifier	input		894313	0					
ANR	896706	PrimaryExpression	2		894313	1					
ANR	896707	Condition	* p == ' '	3513:22:101310:101318	894313	1	True				
ANR	896708	EqualityExpression	* p == ' '		894313	0		==			
ANR	896709	UnaryOperationExpression	* p		894313	0					
ANR	896710	UnaryOperator	*		894313	0					
ANR	896711	Identifier	p		894313	1					
ANR	896712	PrimaryExpression	' '		894313	1					
ANR	896713	PostIncDecOperationExpression	p ++	3513:33:101321:101323	894313	2	True				
ANR	896714	Identifier	p		894313	0					
ANR	896715	IncDec	++		894313	1					
ANR	896716	ExpressionStatement		3513:37:101325:101325	894313	3	True				
ANR	896717	IfStatement	if ( * p == '*' )		894313	52					
ANR	896718	Condition	* p == '*'	3514:6:101333:101341	894313	0	True				
ANR	896719	EqualityExpression	* p == '*'		894313	0		==			
ANR	896720	UnaryOperationExpression	* p		894313	0					
ANR	896721	UnaryOperator	*		894313	0					
ANR	896722	Identifier	p		894313	1					
ANR	896723	PrimaryExpression	'*'		894313	1					
ANR	896724	ExpressionStatement	"r_bp_enable_all ( core -> dbg -> bp , false )"	3514:17:101344:101382	894313	1	True				
ANR	896725	CallExpression	"r_bp_enable_all ( core -> dbg -> bp , false )"		894313	0					
ANR	896726	Callee	r_bp_enable_all		894313	0					
ANR	896727	Identifier	r_bp_enable_all		894313	0					
ANR	896728	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896729	Argument	core -> dbg -> bp		894313	0					
ANR	896730	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896731	PtrMemberAccess	core -> dbg		894313	0					
ANR	896732	Identifier	core		894313	0					
ANR	896733	Identifier	dbg		894313	1					
ANR	896734	Identifier	bp		894313	1					
ANR	896735	Argument	false		894313	1					
ANR	896736	Identifier	false		894313	0					
ANR	896737	ElseStatement	else		894313	0					
ANR	896738	CompoundStatement		363:7:9671:9671	894313	0					
ANR	896739	ForStatement	for ( ; * p && * p != ' ' ; p ++ )		894313	0					
ANR	896740	Condition	* p && * p != ' '	3516:10:101403:101417	894313	0	True				
ANR	896741	AndExpression	* p && * p != ' '		894313	0		&&			
ANR	896742	UnaryOperationExpression	* p		894313	0					
ANR	896743	UnaryOperator	*		894313	0					
ANR	896744	Identifier	p		894313	1					
ANR	896745	EqualityExpression	* p != ' '		894313	1		!=			
ANR	896746	UnaryOperationExpression	* p		894313	0					
ANR	896747	UnaryOperator	*		894313	0					
ANR	896748	Identifier	p		894313	1					
ANR	896749	PrimaryExpression	' '		894313	1					
ANR	896750	PostIncDecOperationExpression	p ++	3516:27:101420:101422	894313	1	True				
ANR	896751	Identifier	p		894313	0					
ANR	896752	IncDec	++		894313	1					
ANR	896753	ExpressionStatement		3516:31:101424:101424	894313	2	True				
ANR	896754	ExpressionStatement	"r_bp_enable ( core -> dbg -> bp , r_num_math ( core -> num , input + 2 ) , false , r_num_math ( core -> num , p ) )"	3517:3:101429:101525	894313	1	True				
ANR	896755	CallExpression	"r_bp_enable ( core -> dbg -> bp , r_num_math ( core -> num , input + 2 ) , false , r_num_math ( core -> num , p ) )"		894313	0					
ANR	896756	Callee	r_bp_enable		894313	0					
ANR	896757	Identifier	r_bp_enable		894313	0					
ANR	896758	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896759	Argument	core -> dbg -> bp		894313	0					
ANR	896760	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896761	PtrMemberAccess	core -> dbg		894313	0					
ANR	896762	Identifier	core		894313	0					
ANR	896763	Identifier	dbg		894313	1					
ANR	896764	Identifier	bp		894313	1					
ANR	896765	Argument	"r_num_math ( core -> num , input + 2 )"		894313	1					
ANR	896766	CallExpression	"r_num_math ( core -> num , input + 2 )"		894313	0					
ANR	896767	Callee	r_num_math		894313	0					
ANR	896768	Identifier	r_num_math		894313	0					
ANR	896769	ArgumentList	core -> num		894313	1					
ANR	896770	Argument	core -> num		894313	0					
ANR	896771	PtrMemberAccess	core -> num		894313	0					
ANR	896772	Identifier	core		894313	0					
ANR	896773	Identifier	num		894313	1					
ANR	896774	Argument	input + 2		894313	1					
ANR	896775	AdditiveExpression	input + 2		894313	0		+			
ANR	896776	Identifier	input		894313	0					
ANR	896777	PrimaryExpression	2		894313	1					
ANR	896778	Argument	false		894313	2					
ANR	896779	Identifier	false		894313	0					
ANR	896780	Argument	"r_num_math ( core -> num , p )"		894313	3					
ANR	896781	CallExpression	"r_num_math ( core -> num , p )"		894313	0					
ANR	896782	Callee	r_num_math		894313	0					
ANR	896783	Identifier	r_num_math		894313	0					
ANR	896784	ArgumentList	core -> num		894313	1					
ANR	896785	Argument	core -> num		894313	0					
ANR	896786	PtrMemberAccess	core -> num		894313	0					
ANR	896787	Identifier	core		894313	0					
ANR	896788	Identifier	num		894313	1					
ANR	896789	Argument	p		894313	1					
ANR	896790	Identifier	p		894313	0					
ANR	896791	BreakStatement	break ;	3519:2:101533:101538	894313	53	True				
ANR	896792	Label	case 'h' :	3520:1:101541:101549	894313	54	True				
ANR	896793	SwitchStatement	switch ( input [ 2 ] )		894313	55					
ANR	896794	Condition	input [ 2 ]	3521:10:101561:101568	894313	0	True				
ANR	896795	ArrayIndexing	input [ 2 ]		894313	0					
ANR	896796	Identifier	input		894313	0					
ANR	896797	PrimaryExpression	2		894313	1					
ANR	896798	CompoundStatement		369:20:9851:9851	894313	1					
ANR	896799	Label	case 0 :	3522:2:101575:101581	894313	0	True				
ANR	896800	ExpressionStatement	r_bp_plugin_list ( core -> dbg -> bp )	3523:3:101586:101618	894313	1	True				
ANR	896801	CallExpression	r_bp_plugin_list ( core -> dbg -> bp )		894313	0					
ANR	896802	Callee	r_bp_plugin_list		894313	0					
ANR	896803	Identifier	r_bp_plugin_list		894313	0					
ANR	896804	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896805	Argument	core -> dbg -> bp		894313	0					
ANR	896806	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896807	PtrMemberAccess	core -> dbg		894313	0					
ANR	896808	Identifier	core		894313	0					
ANR	896809	Identifier	dbg		894313	1					
ANR	896810	Identifier	bp		894313	1					
ANR	896811	BreakStatement	break ;	3524:3:101623:101628	894313	2	True				
ANR	896812	Label	case ' ' :	3525:2:101632:101640	894313	3	True				
ANR	896813	IfStatement	if ( input [ 3 ] )		894313	4					
ANR	896814	Condition	input [ 3 ]	3526:7:101649:101656	894313	0	True				
ANR	896815	ArrayIndexing	input [ 3 ]		894313	0					
ANR	896816	Identifier	input		894313	0					
ANR	896817	PrimaryExpression	3		894313	1					
ANR	896818	CompoundStatement		374:17:9939:9939	894313	1					
ANR	896819	IfStatement	"if ( ! r_bp_use ( core -> dbg -> bp , input + 3 , core -> anal -> bits ) )"		894313	0					
ANR	896820	Condition	"! r_bp_use ( core -> dbg -> bp , input + 3 , core -> anal -> bits )"	3527:8:101669:101722	894313	0	True				
ANR	896821	UnaryOperationExpression	"! r_bp_use ( core -> dbg -> bp , input + 3 , core -> anal -> bits )"		894313	0					
ANR	896822	UnaryOperator	!		894313	0					
ANR	896823	CallExpression	"r_bp_use ( core -> dbg -> bp , input + 3 , core -> anal -> bits )"		894313	1					
ANR	896824	Callee	r_bp_use		894313	0					
ANR	896825	Identifier	r_bp_use		894313	0					
ANR	896826	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896827	Argument	core -> dbg -> bp		894313	0					
ANR	896828	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896829	PtrMemberAccess	core -> dbg		894313	0					
ANR	896830	Identifier	core		894313	0					
ANR	896831	Identifier	dbg		894313	1					
ANR	896832	Identifier	bp		894313	1					
ANR	896833	Argument	input + 3		894313	1					
ANR	896834	AdditiveExpression	input + 3		894313	0		+			
ANR	896835	Identifier	input		894313	0					
ANR	896836	PrimaryExpression	3		894313	1					
ANR	896837	Argument	core -> anal -> bits		894313	2					
ANR	896838	PtrMemberAccess	core -> anal -> bits		894313	0					
ANR	896839	PtrMemberAccess	core -> anal		894313	0					
ANR	896840	Identifier	core		894313	0					
ANR	896841	Identifier	anal		894313	1					
ANR	896842	Identifier	bits		894313	1					
ANR	896843	CompoundStatement		375:64:10005:10005	894313	1					
ANR	896844	ExpressionStatement	"eprintf ( ""Invalid name: '%s'.\\n"" , input + 3 )"	3528:5:101732:101776	894313	0	True				
ANR	896845	CallExpression	"eprintf ( ""Invalid name: '%s'.\\n"" , input + 3 )"		894313	0					
ANR	896846	Callee	eprintf		894313	0					
ANR	896847	Identifier	eprintf		894313	0					
ANR	896848	ArgumentList	"""Invalid name: '%s'.\\n"""		894313	1					
ANR	896849	Argument	"""Invalid name: '%s'.\\n"""		894313	0					
ANR	896850	PrimaryExpression	"""Invalid name: '%s'.\\n"""		894313	0					
ANR	896851	Argument	input + 3		894313	1					
ANR	896852	AdditiveExpression	input + 3		894313	0		+			
ANR	896853	Identifier	input		894313	0					
ANR	896854	PrimaryExpression	3		894313	1					
ANR	896855	BreakStatement	break ;	3531:3:101792:101797	894313	5	True				
ANR	896856	Label	case '-' :	3532:2:101801:101809	894313	6	True				
ANR	896857	IfStatement	if ( input [ 3 ] )		894313	7					
ANR	896858	Condition	input [ 3 ]	3533:7:101818:101825	894313	0	True				
ANR	896859	ArrayIndexing	input [ 3 ]		894313	0					
ANR	896860	Identifier	input		894313	0					
ANR	896861	PrimaryExpression	3		894313	1					
ANR	896862	CompoundStatement		381:17:10108:10108	894313	1					
ANR	896863	IfStatement	"if ( ! r_bp_plugin_del ( core -> dbg -> bp , input + 3 ) )"		894313	0					
ANR	896864	Condition	"! r_bp_plugin_del ( core -> dbg -> bp , input + 3 )"	3534:8:101838:101880	894313	0	True				
ANR	896865	UnaryOperationExpression	"! r_bp_plugin_del ( core -> dbg -> bp , input + 3 )"		894313	0					
ANR	896866	UnaryOperator	!		894313	0					
ANR	896867	CallExpression	"r_bp_plugin_del ( core -> dbg -> bp , input + 3 )"		894313	1					
ANR	896868	Callee	r_bp_plugin_del		894313	0					
ANR	896869	Identifier	r_bp_plugin_del		894313	0					
ANR	896870	ArgumentList	core -> dbg -> bp		894313	1					
ANR	896871	Argument	core -> dbg -> bp		894313	0					
ANR	896872	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	896873	PtrMemberAccess	core -> dbg		894313	0					
ANR	896874	Identifier	core		894313	0					
ANR	896875	Identifier	dbg		894313	1					
ANR	896876	Identifier	bp		894313	1					
ANR	896877	Argument	input + 3		894313	1					
ANR	896878	AdditiveExpression	input + 3		894313	0		+			
ANR	896879	Identifier	input		894313	0					
ANR	896880	PrimaryExpression	3		894313	1					
ANR	896881	CompoundStatement		382:53:10163:10163	894313	1					
ANR	896882	ExpressionStatement	"eprintf ( ""Invalid name: '%s'.\\n"" , input + 3 )"	3535:5:101890:101934	894313	0	True				
ANR	896883	CallExpression	"eprintf ( ""Invalid name: '%s'.\\n"" , input + 3 )"		894313	0					
ANR	896884	Callee	eprintf		894313	0					
ANR	896885	Identifier	eprintf		894313	0					
ANR	896886	ArgumentList	"""Invalid name: '%s'.\\n"""		894313	1					
ANR	896887	Argument	"""Invalid name: '%s'.\\n"""		894313	0					
ANR	896888	PrimaryExpression	"""Invalid name: '%s'.\\n"""		894313	0					
ANR	896889	Argument	input + 3		894313	1					
ANR	896890	AdditiveExpression	input + 3		894313	0		+			
ANR	896891	Identifier	input		894313	0					
ANR	896892	PrimaryExpression	3		894313	1					
ANR	896893	BreakStatement	break ;	3538:3:101950:101955	894313	8	True				
ANR	896894	Label	case '?' :	3539:2:101959:101967	894313	9	True				
ANR	896895	Label	default :	3540:2:101971:101978	894313	10	True				
ANR	896896	Identifier	default		894313	0					
ANR	896897	ExpressionStatement	"eprintf ( ""Usage: dh [plugin-name]  # select a debug handler plugin\\n"" )"	3541:3:101983:102053	894313	11	True				
ANR	896898	CallExpression	"eprintf ( ""Usage: dh [plugin-name]  # select a debug handler plugin\\n"" )"		894313	0					
ANR	896899	Callee	eprintf		894313	0					
ANR	896900	Identifier	eprintf		894313	0					
ANR	896901	ArgumentList	"""Usage: dh [plugin-name]  # select a debug handler plugin\\n"""		894313	1					
ANR	896902	Argument	"""Usage: dh [plugin-name]  # select a debug handler plugin\\n"""		894313	0					
ANR	896903	PrimaryExpression	"""Usage: dh [plugin-name]  # select a debug handler plugin\\n"""		894313	0					
ANR	896904	BreakStatement	break ;	3542:3:102058:102063	894313	12	True				
ANR	896905	BreakStatement	break ;	3544:2:102071:102076	894313	56	True				
ANR	896906	Label	case 'W' :	3546:1:102095:102103	894313	57	True				
ANR	896907	IfStatement	if ( input [ 2 ] == ' ' )		894313	58					
ANR	896908	Condition	input [ 2 ] == ' '	3547:6:102120:102134	894313	0	True				
ANR	896909	EqualityExpression	input [ 2 ] == ' '		894313	0		==			
ANR	896910	ArrayIndexing	input [ 2 ]		894313	0					
ANR	896911	Identifier	input		894313	0					
ANR	896912	PrimaryExpression	2		894313	1					
ANR	896913	PrimaryExpression	' '		894313	1					
ANR	896914	CompoundStatement		395:23:10417:10417	894313	1					
ANR	896915	IfStatement	"if ( r_w32_add_winmsg_breakpoint ( core -> dbg , input + 3 ) )"		894313	0					
ANR	896916	Condition	"r_w32_add_winmsg_breakpoint ( core -> dbg , input + 3 )"	3548:7:102146:102195	894313	0	True				
ANR	896917	CallExpression	"r_w32_add_winmsg_breakpoint ( core -> dbg , input + 3 )"		894313	0					
ANR	896918	Callee	r_w32_add_winmsg_breakpoint		894313	0					
ANR	896919	Identifier	r_w32_add_winmsg_breakpoint		894313	0					
ANR	896920	ArgumentList	core -> dbg		894313	1					
ANR	896921	Argument	core -> dbg		894313	0					
ANR	896922	PtrMemberAccess	core -> dbg		894313	0					
ANR	896923	Identifier	core		894313	0					
ANR	896924	Identifier	dbg		894313	1					
ANR	896925	Argument	input + 3		894313	1					
ANR	896926	AdditiveExpression	input + 3		894313	0		+			
ANR	896927	Identifier	input		894313	0					
ANR	896928	PrimaryExpression	3		894313	1					
ANR	896929	CompoundStatement		396:59:10478:10478	894313	1					
ANR	896930	ExpressionStatement	"r_cons_print ( ""Breakpoint set.\\n"" )"	3549:4:102204:102238	894313	0	True				
ANR	896931	CallExpression	"r_cons_print ( ""Breakpoint set.\\n"" )"		894313	0					
ANR	896932	Callee	r_cons_print		894313	0					
ANR	896933	Identifier	r_cons_print		894313	0					
ANR	896934	ArgumentList	"""Breakpoint set.\\n"""		894313	1					
ANR	896935	Argument	"""Breakpoint set.\\n"""		894313	0					
ANR	896936	PrimaryExpression	"""Breakpoint set.\\n"""		894313	0					
ANR	896937	ElseStatement	else		894313	0					
ANR	896938	CompoundStatement		398:10:10530:10530	894313	0					
ANR	896939	ExpressionStatement	"r_cons_print ( ""Breakpoint not set.\\n"" )"	3551:4:102256:102294	894313	0	True				
ANR	896940	CallExpression	"r_cons_print ( ""Breakpoint not set.\\n"" )"		894313	0					
ANR	896941	Callee	r_cons_print		894313	0					
ANR	896942	Identifier	r_cons_print		894313	0					
ANR	896943	ArgumentList	"""Breakpoint not set.\\n"""		894313	1					
ANR	896944	Argument	"""Breakpoint not set.\\n"""		894313	0					
ANR	896945	PrimaryExpression	"""Breakpoint not set.\\n"""		894313	0					
ANR	896946	BreakStatement	break ;	3554:2:102307:102312	894313	59	True				
ANR	896947	Label	case 'w' :	3556:1:102322:102330	894313	60	True				
ANR	896948	ExpressionStatement	input ++	3557:2:102343:102350	894313	61	True				
ANR	896949	PostIncDecOperationExpression	input ++		894313	0					
ANR	896950	Identifier	input		894313	0					
ANR	896951	IncDec	++		894313	1					
ANR	896952	ExpressionStatement	watch = true	3558:2:102366:102378	894313	62	True				
ANR	896953	AssignmentExpression	watch = true		894313	0		=			
ANR	896954	Identifier	watch		894313	0					
ANR	896955	Identifier	true		894313	1					
ANR	896956	Label	case ' ' :	3560:1:102395:102403	894313	63	True				
ANR	896957	ExpressionStatement		3560:11:102405:102405	894313	64	True				
ANR	896958	Statement	define	3561:3:102417:102422	894313	65	True				
ANR	896959	Statement	DB_ARG	3561:10:102424:102429	894313	66	True				
ANR	896960	Statement	(	3561:16:102430:102430	894313	67	True				
ANR	896961	Statement	x	3561:17:102431:102431	894313	68	True				
ANR	896962	Statement	)	3561:18:102432:102432	894313	69	True				
ANR	896963	Statement	r_str_word_get0	3561:20:102434:102448	894313	70	True				
ANR	896964	Statement	(	3561:35:102449:102449	894313	71	True				
ANR	896965	Statement	str	3561:36:102450:102452	894313	72	True				
ANR	896966	Statement	","	3561:39:102453:102453	894313	73	True				
ANR	896967	Statement	x	3561:41:102455:102455	894313	74	True				
ANR	896968	Statement	)	3561:42:102456:102456	894313	75	True				
ANR	896969	ExpressionStatement	str = strdup ( r_str_trim_ro ( input + 1 ) )	3562:2:102460:102500	894313	76	True				
ANR	896970	AssignmentExpression	str = strdup ( r_str_trim_ro ( input + 1 ) )		894313	0		=			
ANR	896971	Identifier	str		894313	0					
ANR	896972	CallExpression	strdup ( r_str_trim_ro ( input + 1 ) )		894313	1					
ANR	896973	Callee	strdup		894313	0					
ANR	896974	Identifier	strdup		894313	0					
ANR	896975	ArgumentList	r_str_trim_ro ( input + 1 )		894313	1					
ANR	896976	Argument	r_str_trim_ro ( input + 1 )		894313	0					
ANR	896977	CallExpression	r_str_trim_ro ( input + 1 )		894313	0					
ANR	896978	Callee	r_str_trim_ro		894313	0					
ANR	896979	Identifier	r_str_trim_ro		894313	0					
ANR	896980	ArgumentList	input + 1		894313	1					
ANR	896981	Argument	input + 1		894313	0					
ANR	896982	AdditiveExpression	input + 1		894313	0		+			
ANR	896983	Identifier	input		894313	0					
ANR	896984	PrimaryExpression	1		894313	1					
ANR	896985	IdentifierDeclStatement	int i = 0 ;	3563:2:102504:102513	894313	77	True				
ANR	896986	IdentifierDecl	i = 0		894313	0					
ANR	896987	IdentifierDeclType	int		894313	0					
ANR	896988	Identifier	i		894313	1					
ANR	896989	AssignmentExpression	i = 0		894313	2		=			
ANR	896990	Identifier	i		894313	0					
ANR	896991	PrimaryExpression	0		894313	1					
ANR	896992	IdentifierDeclStatement	int sl = r_str_word_set0 ( str ) ;	3564:2:102517:102547	894313	78	True				
ANR	896993	IdentifierDecl	sl = r_str_word_set0 ( str )		894313	0					
ANR	896994	IdentifierDeclType	int		894313	0					
ANR	896995	Identifier	sl		894313	1					
ANR	896996	AssignmentExpression	sl = r_str_word_set0 ( str )		894313	2		=			
ANR	896997	Identifier	sl		894313	0					
ANR	896998	CallExpression	r_str_word_set0 ( str )		894313	1					
ANR	896999	Callee	r_str_word_set0		894313	0					
ANR	897000	Identifier	r_str_word_set0		894313	0					
ANR	897001	ArgumentList	str		894313	1					
ANR	897002	Argument	str		894313	0					
ANR	897003	Identifier	str		894313	0					
ANR	897004	ForStatement	for ( ; i < sl ; i += 1 + ( watch ? 1 : 0 ) )		894313	79					
ANR	897005	Condition	i < sl	3566:10:102626:102631	894313	0	True				
ANR	897006	RelationalExpression	i < sl		894313	0		<			
ANR	897007	Identifier	i		894313	0					
ANR	897008	Identifier	sl		894313	1					
ANR	897009	AssignmentExpression	i += 1 + ( watch ? 1 : 0 )	3566:18:102634:102657	894313	1	True	+=			
ANR	897010	Identifier	i		894313	0					
ANR	897011	AdditiveExpression	1 + ( watch ? 1 : 0 )		894313	1		+			
ANR	897012	PrimaryExpression	1		894313	0					
ANR	897013	ConditionalExpression	watch ? 1 : 0		894313	1					
ANR	897014	Condition	watch		894313	0					
ANR	897015	Identifier	watch		894313	0					
ANR	897016	PrimaryExpression	1		894313	1					
ANR	897017	PrimaryExpression	0		894313	2					
ANR	897018	CompoundStatement		414:44:10940:10940	894313	2					
ANR	897019	IfStatement	if ( * DB_ARG ( i ) == '-' )		894313	0					
ANR	897020	Condition	* DB_ARG ( i ) == '-'	3567:7:102669:102685	894313	0	True				
ANR	897021	EqualityExpression	* DB_ARG ( i ) == '-'		894313	0		==			
ANR	897022	UnaryOperationExpression	* DB_ARG ( i )		894313	0					
ANR	897023	UnaryOperator	*		894313	0					
ANR	897024	CallExpression	DB_ARG ( i )		894313	1					
ANR	897025	Callee	DB_ARG		894313	0					
ANR	897026	Identifier	DB_ARG		894313	0					
ANR	897027	ArgumentList	i		894313	1					
ANR	897028	Argument	i		894313	0					
ANR	897029	Identifier	i		894313	0					
ANR	897030	PrimaryExpression	'-'		894313	1					
ANR	897031	CompoundStatement		415:26:10968:10968	894313	1					
ANR	897032	ExpressionStatement	"r_bp_del ( core -> dbg -> bp , r_num_math ( core -> num , DB_ARG ( i ) + 1 ) )"	3568:4:102694:102758	894313	0	True				
ANR	897033	CallExpression	"r_bp_del ( core -> dbg -> bp , r_num_math ( core -> num , DB_ARG ( i ) + 1 ) )"		894313	0					
ANR	897034	Callee	r_bp_del		894313	0					
ANR	897035	Identifier	r_bp_del		894313	0					
ANR	897036	ArgumentList	core -> dbg -> bp		894313	1					
ANR	897037	Argument	core -> dbg -> bp		894313	0					
ANR	897038	PtrMemberAccess	core -> dbg -> bp		894313	0					
ANR	897039	PtrMemberAccess	core -> dbg		894313	0					
ANR	897040	Identifier	core		894313	0					
ANR	897041	Identifier	dbg		894313	1					
ANR	897042	Identifier	bp		894313	1					
ANR	897043	Argument	"r_num_math ( core -> num , DB_ARG ( i ) + 1 )"		894313	1					
ANR	897044	CallExpression	"r_num_math ( core -> num , DB_ARG ( i ) + 1 )"		894313	0					
ANR	897045	Callee	r_num_math		894313	0					
ANR	897046	Identifier	r_num_math		894313	0					
ANR	897047	ArgumentList	core -> num		894313	1					
ANR	897048	Argument	core -> num		894313	0					
ANR	897049	PtrMemberAccess	core -> num		894313	0					
ANR	897050	Identifier	core		894313	0					
ANR	897051	Identifier	num		894313	1					
ANR	897052	Argument	DB_ARG ( i ) + 1		894313	1					
ANR	897053	AdditiveExpression	DB_ARG ( i ) + 1		894313	0		+			
ANR	897054	CallExpression	DB_ARG ( i )		894313	0					
ANR	897055	Callee	DB_ARG		894313	0					
ANR	897056	Identifier	DB_ARG		894313	0					
ANR	897057	ArgumentList	i		894313	1					
ANR	897058	Argument	i		894313	0					
ANR	897059	Identifier	i		894313	0					
ANR	897060	PrimaryExpression	1		894313	1					
ANR	897061	ElseStatement	else		894313	0					
ANR	897062	CompoundStatement		417:10:11050:11050	894313	0					
ANR	897063	IfStatement	if ( watch )		894313	0					
ANR	897064	Condition	watch	3570:8:102780:102784	894313	0	True				
ANR	897065	Identifier	watch		894313	0					
ANR	897066	CompoundStatement		418:15:11067:11067	894313	1					
ANR	897067	IfStatement	if ( sl % 2 == 0 )		894313	0					
ANR	897068	Condition	sl % 2 == 0	3571:9:102798:102808	894313	0	True				
ANR	897069	EqualityExpression	sl % 2 == 0		894313	0		==			
ANR	897070	MultiplicativeExpression	sl % 2		894313	0		%			
ANR	897071	Identifier	sl		894313	0					
ANR	897072	PrimaryExpression	2		894313	1					
ANR	897073	PrimaryExpression	0		894313	1					
ANR	897074	CompoundStatement		419:22:11091:11091	894313	1					
ANR	897075	IfStatement	"if ( ! strcmp ( DB_ARG ( i + 1 ) , ""r"" ) )"		894313	0					
ANR	897076	Condition	"! strcmp ( DB_ARG ( i + 1 ) , ""r"" )"	3572:10:102823:102851	894313	0	True				
ANR	897077	UnaryOperationExpression	"! strcmp ( DB_ARG ( i + 1 ) , ""r"" )"		894313	0					
ANR	897078	UnaryOperator	!		894313	0					
ANR	897079	CallExpression	"strcmp ( DB_ARG ( i + 1 ) , ""r"" )"		894313	1					
ANR	897080	Callee	strcmp		894313	0					
ANR	897081	Identifier	strcmp		894313	0					
ANR	897082	ArgumentList	DB_ARG ( i + 1 )		894313	1					
ANR	897083	Argument	DB_ARG ( i + 1 )		894313	0					
ANR	897084	CallExpression	DB_ARG ( i + 1 )		894313	0					
ANR	897085	Callee	DB_ARG		894313	0					
ANR	897086	Identifier	DB_ARG		894313	0					
ANR	897087	ArgumentList	i + 1		894313	1					
ANR	897088	Argument	i + 1		894313	0					
ANR	897089	AdditiveExpression	i + 1		894313	0		+			
ANR	897090	Identifier	i		894313	0					
ANR	897091	PrimaryExpression	1		894313	1					
ANR	897092	Argument	"""r"""		894313	1					
ANR	897093	PrimaryExpression	"""r"""		894313	0					
ANR	897094	CompoundStatement		420:41:11134:11134	894313	1					
ANR	897095	ExpressionStatement	rw = R_BP_PROT_READ	3573:7:102863:102882	894313	0	True				
ANR	897096	AssignmentExpression	rw = R_BP_PROT_READ		894313	0		=			
ANR	897097	Identifier	rw		894313	0					
ANR	897098	Identifier	R_BP_PROT_READ		894313	1					
ANR	897099	ElseStatement	else		894313	0					
ANR	897100	IfStatement	"if ( ! strcmp ( DB_ARG ( i + 1 ) , ""w"" ) )"		894313	0					
ANR	897101	Condition	"! strcmp ( DB_ARG ( i + 1 ) , ""w"" )"	3574:17:102901:102929	894313	0	True				
ANR	897102	UnaryOperationExpression	"! strcmp ( DB_ARG ( i + 1 ) , ""w"" )"		894313	0					
ANR	897103	UnaryOperator	!		894313	0					
ANR	897104	CallExpression	"strcmp ( DB_ARG ( i + 1 ) , ""w"" )"		894313	1					
ANR	897105	Callee	strcmp		894313	0					
ANR	897106	Identifier	strcmp		894313	0					
ANR	897107	ArgumentList	DB_ARG ( i + 1 )		894313	1					
ANR	897108	Argument	DB_ARG ( i + 1 )		894313	0					
ANR	897109	CallExpression	DB_ARG ( i + 1 )		894313	0					
ANR	897110	Callee	DB_ARG		894313	0					
ANR	897111	Identifier	DB_ARG		894313	0					
ANR	897112	ArgumentList	i + 1		894313	1					
ANR	897113	Argument	i + 1		894313	0					
ANR	897114	AdditiveExpression	i + 1		894313	0		+			
ANR	897115	Identifier	i		894313	0					
ANR	897116	PrimaryExpression	1		894313	1					
ANR	897117	Argument	"""w"""		894313	1					
ANR	897118	PrimaryExpression	"""w"""		894313	0					
ANR	897119	CompoundStatement		422:48:11212:11212	894313	1					
ANR	897120	ExpressionStatement	rw = R_BP_PROT_WRITE	3575:7:102941:102961	894313	0	True				
ANR	897121	AssignmentExpression	rw = R_BP_PROT_WRITE		894313	0		=			
ANR	897122	Identifier	rw		894313	0					
ANR	897123	Identifier	R_BP_PROT_WRITE		894313	1					
ANR	897124	ElseStatement	else		894313	0					
ANR	897125	IfStatement	"if ( ! strcmp ( DB_ARG ( i + 1 ) , ""rw"" ) )"		894313	0					
ANR	897126	Condition	"! strcmp ( DB_ARG ( i + 1 ) , ""rw"" )"	3576:17:102980:103009	894313	0	True				
ANR	897127	UnaryOperationExpression	"! strcmp ( DB_ARG ( i + 1 ) , ""rw"" )"		894313	0					
ANR	897128	UnaryOperator	!		894313	0					
ANR	897129	CallExpression	"strcmp ( DB_ARG ( i + 1 ) , ""rw"" )"		894313	1					
ANR	897130	Callee	strcmp		894313	0					
ANR	897131	Identifier	strcmp		894313	0					
ANR	897132	ArgumentList	DB_ARG ( i + 1 )		894313	1					
ANR	897133	Argument	DB_ARG ( i + 1 )		894313	0					
ANR	897134	CallExpression	DB_ARG ( i + 1 )		894313	0					
ANR	897135	Callee	DB_ARG		894313	0					
ANR	897136	Identifier	DB_ARG		894313	0					
ANR	897137	ArgumentList	i + 1		894313	1					
ANR	897138	Argument	i + 1		894313	0					
ANR	897139	AdditiveExpression	i + 1		894313	0		+			
ANR	897140	Identifier	i		894313	0					
ANR	897141	PrimaryExpression	1		894313	1					
ANR	897142	Argument	"""rw"""		894313	1					
ANR	897143	PrimaryExpression	"""rw"""		894313	0					
ANR	897144	CompoundStatement		424:49:11292:11292	894313	1					
ANR	897145	ExpressionStatement	rw = R_BP_PROT_ACCESS	3577:7:103021:103042	894313	0	True				
ANR	897146	AssignmentExpression	rw = R_BP_PROT_ACCESS		894313	0		=			
ANR	897147	Identifier	rw		894313	0					
ANR	897148	Identifier	R_BP_PROT_ACCESS		894313	1					
ANR	897149	ElseStatement	else		894313	0					
ANR	897150	CompoundStatement		426:13:11337:11337	894313	0					
ANR	897151	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dbw )"	3579:7:103066:103102	894313	0	True				
ANR	897152	CallExpression	"r_core_cmd_help ( core , help_msg_dbw )"		894313	0					
ANR	897153	Callee	r_core_cmd_help		894313	0					
ANR	897154	Identifier	r_core_cmd_help		894313	0					
ANR	897155	ArgumentList	core		894313	1					
ANR	897156	Argument	core		894313	0					
ANR	897157	Identifier	core		894313	0					
ANR	897158	Argument	help_msg_dbw		894313	1					
ANR	897159	Identifier	help_msg_dbw		894313	0					
ANR	897160	BreakStatement	break ;	3580:7:103111:103116	894313	1	True				
ANR	897161	ElseStatement	else		894313	0					
ANR	897162	CompoundStatement		430:12:11418:11418	894313	0					
ANR	897163	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dbw )"	3583:6:103146:103182	894313	0	True				
ANR	897164	CallExpression	"r_core_cmd_help ( core , help_msg_dbw )"		894313	0					
ANR	897165	Callee	r_core_cmd_help		894313	0					
ANR	897166	Identifier	r_core_cmd_help		894313	0					
ANR	897167	ArgumentList	core		894313	1					
ANR	897168	Argument	core		894313	0					
ANR	897169	Identifier	core		894313	0					
ANR	897170	Argument	help_msg_dbw		894313	1					
ANR	897171	Identifier	help_msg_dbw		894313	0					
ANR	897172	BreakStatement	break ;	3584:6:103190:103195	894313	1	True				
ANR	897173	ExpressionStatement	"addr = r_num_math ( core -> num , DB_ARG ( i ) )"	3587:4:103214:103255	894313	1	True				
ANR	897174	AssignmentExpression	"addr = r_num_math ( core -> num , DB_ARG ( i ) )"		894313	0		=			
ANR	897175	Identifier	addr		894313	0					
ANR	897176	CallExpression	"r_num_math ( core -> num , DB_ARG ( i ) )"		894313	1					
ANR	897177	Callee	r_num_math		894313	0					
ANR	897178	Identifier	r_num_math		894313	0					
ANR	897179	ArgumentList	core -> num		894313	1					
ANR	897180	Argument	core -> num		894313	0					
ANR	897181	PtrMemberAccess	core -> num		894313	0					
ANR	897182	Identifier	core		894313	0					
ANR	897183	Identifier	num		894313	1					
ANR	897184	Argument	DB_ARG ( i )		894313	1					
ANR	897185	CallExpression	DB_ARG ( i )		894313	0					
ANR	897186	Callee	DB_ARG		894313	0					
ANR	897187	Identifier	DB_ARG		894313	0					
ANR	897188	ArgumentList	i		894313	1					
ANR	897189	Argument	i		894313	0					
ANR	897190	Identifier	i		894313	0					
ANR	897191	IfStatement	"if ( validAddress ( core , addr ) )"		894313	2					
ANR	897192	Condition	"validAddress ( core , addr )"	3588:8:103265:103289	894313	0	True				
ANR	897193	CallExpression	"validAddress ( core , addr )"		894313	0					
ANR	897194	Callee	validAddress		894313	0					
ANR	897195	Identifier	validAddress		894313	0					
ANR	897196	ArgumentList	core		894313	1					
ANR	897197	Argument	core		894313	0					
ANR	897198	Identifier	core		894313	0					
ANR	897199	Argument	addr		894313	1					
ANR	897200	Identifier	addr		894313	0					
ANR	897201	CompoundStatement		436:35:11572:11572	894313	1					
ANR	897202	ExpressionStatement	"bpi = r_debug_bp_add ( core -> dbg , addr , hwbp , watch , rw , NULL , 0 )"	3589:5:103299:103363	894313	0	True				
ANR	897203	AssignmentExpression	"bpi = r_debug_bp_add ( core -> dbg , addr , hwbp , watch , rw , NULL , 0 )"		894313	0		=			
ANR	897204	Identifier	bpi		894313	0					
ANR	897205	CallExpression	"r_debug_bp_add ( core -> dbg , addr , hwbp , watch , rw , NULL , 0 )"		894313	1					
ANR	897206	Callee	r_debug_bp_add		894313	0					
ANR	897207	Identifier	r_debug_bp_add		894313	0					
ANR	897208	ArgumentList	core -> dbg		894313	1					
ANR	897209	Argument	core -> dbg		894313	0					
ANR	897210	PtrMemberAccess	core -> dbg		894313	0					
ANR	897211	Identifier	core		894313	0					
ANR	897212	Identifier	dbg		894313	1					
ANR	897213	Argument	addr		894313	1					
ANR	897214	Identifier	addr		894313	0					
ANR	897215	Argument	hwbp		894313	2					
ANR	897216	Identifier	hwbp		894313	0					
ANR	897217	Argument	watch		894313	3					
ANR	897218	Identifier	watch		894313	0					
ANR	897219	Argument	rw		894313	4					
ANR	897220	Identifier	rw		894313	0					
ANR	897221	Argument	NULL		894313	5					
ANR	897222	Identifier	NULL		894313	0					
ANR	897223	Argument	0		894313	6					
ANR	897224	PrimaryExpression	0		894313	0					
ANR	897225	IfStatement	if ( bpi )		894313	1					
ANR	897226	Condition	bpi	3590:9:103374:103376	894313	0	True				
ANR	897227	Identifier	bpi		894313	0					
ANR	897228	CompoundStatement		438:14:11659:11659	894313	1					
ANR	897229	ExpressionStatement	free ( bpi -> name )	3591:6:103387:103403	894313	0	True				
ANR	897230	CallExpression	free ( bpi -> name )		894313	0					
ANR	897231	Callee	free		894313	0					
ANR	897232	Identifier	free		894313	0					
ANR	897233	ArgumentList	bpi -> name		894313	1					
ANR	897234	Argument	bpi -> name		894313	0					
ANR	897235	PtrMemberAccess	bpi -> name		894313	0					
ANR	897236	Identifier	bpi		894313	0					
ANR	897237	Identifier	name		894313	1					
ANR	897238	IfStatement	"if ( ! strcmp ( DB_ARG ( i ) , ""$$"" ) )"		894313	1					
ANR	897239	Condition	"! strcmp ( DB_ARG ( i ) , ""$$"" )"	3592:10:103415:103440	894313	0	True				
ANR	897240	UnaryOperationExpression	"! strcmp ( DB_ARG ( i ) , ""$$"" )"		894313	0					
ANR	897241	UnaryOperator	!		894313	0					
ANR	897242	CallExpression	"strcmp ( DB_ARG ( i ) , ""$$"" )"		894313	1					
ANR	897243	Callee	strcmp		894313	0					
ANR	897244	Identifier	strcmp		894313	0					
ANR	897245	ArgumentList	DB_ARG ( i )		894313	1					
ANR	897246	Argument	DB_ARG ( i )		894313	0					
ANR	897247	CallExpression	DB_ARG ( i )		894313	0					
ANR	897248	Callee	DB_ARG		894313	0					
ANR	897249	Identifier	DB_ARG		894313	0					
ANR	897250	ArgumentList	i		894313	1					
ANR	897251	Argument	i		894313	0					
ANR	897252	Identifier	i		894313	0					
ANR	897253	Argument	"""$$"""		894313	1					
ANR	897254	PrimaryExpression	"""$$"""		894313	0					
ANR	897255	CompoundStatement		441:7:11732:11792	894313	1					
ANR	897256	IdentifierDeclStatement	"RFlagItem * f = r_core_flag_get_by_spaces ( core -> flags , addr ) ;"	3593:7:103452:103512	894313	0	True				
ANR	897257	IdentifierDecl	"* f = r_core_flag_get_by_spaces ( core -> flags , addr )"		894313	0					
ANR	897258	IdentifierDeclType	RFlagItem *		894313	0					
ANR	897259	Identifier	f		894313	1					
ANR	897260	AssignmentExpression	"* f = r_core_flag_get_by_spaces ( core -> flags , addr )"		894313	2		=			
ANR	897261	Identifier	f		894313	0					
ANR	897262	CallExpression	"r_core_flag_get_by_spaces ( core -> flags , addr )"		894313	1					
ANR	897263	Callee	r_core_flag_get_by_spaces		894313	0					
ANR	897264	Identifier	r_core_flag_get_by_spaces		894313	0					
ANR	897265	ArgumentList	core -> flags		894313	1					
ANR	897266	Argument	core -> flags		894313	0					
ANR	897267	PtrMemberAccess	core -> flags		894313	0					
ANR	897268	Identifier	core		894313	0					
ANR	897269	Identifier	flags		894313	1					
ANR	897270	Argument	addr		894313	1					
ANR	897271	Identifier	addr		894313	0					
ANR	897272	IfStatement	if ( f )		894313	1					
ANR	897273	Condition	f	3594:11:103525:103525	894313	0	True				
ANR	897274	Identifier	f		894313	0					
ANR	897275	CompoundStatement		442:14:11808:11808	894313	1					
ANR	897276	IfStatement	if ( addr > f -> offset )		894313	0					
ANR	897277	Condition	addr > f -> offset	3595:12:103542:103557	894313	0	True				
ANR	897278	RelationalExpression	addr > f -> offset		894313	0		>			
ANR	897279	Identifier	addr		894313	0					
ANR	897280	PtrMemberAccess	f -> offset		894313	1					
ANR	897281	Identifier	f		894313	0					
ANR	897282	Identifier	offset		894313	1					
ANR	897283	CompoundStatement		443:30:11840:11840	894313	1					
ANR	897284	Statement	bpi	3596:9:103571:103573	894313	0	True				
ANR	897285	Statement	->	3596:12:103574:103575	894313	1	True				
ANR	897286	Statement	name	3596:14:103576:103579	894313	2	True				
ANR	897287	Statement	=	3596:19:103581:103581	894313	3	True				
ANR	897288	Statement	r_str_newf	3596:21:103583:103592	894313	4	True				
ANR	897289	Statement	(	3596:32:103594:103594	894313	5	True				
ANR	897290	Statement	"""%s+0x%"""	3596:33:103595:103602	894313	6	True				
ANR	897291	Statement	PFMT64x	3596:42:103604:103610	894313	7	True				
ANR	897292	Statement	","	3596:49:103611:103611	894313	8	True				
ANR	897293	Statement	f	3596:51:103613:103613	894313	9	True				
ANR	897294	Statement	->	3596:52:103614:103615	894313	10	True				
ANR	897295	Statement	name	3596:54:103616:103619	894313	11	True				
ANR	897296	Statement	","	3596:58:103620:103620	894313	12	True				
ANR	897297	Statement	addr	3596:60:103622:103625	894313	13	True				
ANR	897298	Statement	-	3596:65:103627:103627	894313	14	True				
ANR	897299	Statement	f	3596:67:103629:103629	894313	15	True				
ANR	897300	Statement	->	3596:68:103630:103631	894313	16	True				
ANR	897301	Statement	offset	3596:70:103632:103637	894313	17	True				
ANR	897302	Statement	)	3596:76:103638:103638	894313	18	True				
ANR	897303	ExpressionStatement		3596:77:103639:103639	894313	19	True				
ANR	897304	ElseStatement	else		894313	0					
ANR	897305	CompoundStatement		445:15:11936:11936	894313	0					
ANR	897306	ExpressionStatement	bpi -> name = strdup ( f -> name )	3598:9:103667:103695	894313	0	True				
ANR	897307	AssignmentExpression	bpi -> name = strdup ( f -> name )		894313	0		=			
ANR	897308	PtrMemberAccess	bpi -> name		894313	0					
ANR	897309	Identifier	bpi		894313	0					
ANR	897310	Identifier	name		894313	1					
ANR	897311	CallExpression	strdup ( f -> name )		894313	1					
ANR	897312	Callee	strdup		894313	0					
ANR	897313	Identifier	strdup		894313	0					
ANR	897314	ArgumentList	f -> name		894313	1					
ANR	897315	Argument	f -> name		894313	0					
ANR	897316	PtrMemberAccess	f -> name		894313	0					
ANR	897317	Identifier	f		894313	0					
ANR	897318	Identifier	name		894313	1					
ANR	897319	ElseStatement	else		894313	0					
ANR	897320	CompoundStatement		448:14:12001:12001	894313	0					
ANR	897321	Statement	bpi	3601:8:103731:103733	894313	0	True				
ANR	897322	Statement	->	3601:11:103734:103735	894313	1	True				
ANR	897323	Statement	name	3601:13:103736:103739	894313	2	True				
ANR	897324	Statement	=	3601:18:103741:103741	894313	3	True				
ANR	897325	Statement	r_str_newf	3601:20:103743:103752	894313	4	True				
ANR	897326	Statement	(	3601:31:103754:103754	894313	5	True				
ANR	897327	Statement	"""0x%08"""	3601:32:103755:103761	894313	6	True				
ANR	897328	Statement	PFMT64x	3601:40:103763:103769	894313	7	True				
ANR	897329	Statement	","	3601:47:103770:103770	894313	8	True				
ANR	897330	Statement	addr	3601:49:103772:103775	894313	9	True				
ANR	897331	Statement	)	3601:53:103776:103776	894313	10	True				
ANR	897332	ExpressionStatement		3601:54:103777:103777	894313	11	True				
ANR	897333	ElseStatement	else		894313	0					
ANR	897334	CompoundStatement		451:13:12081:12081	894313	0					
ANR	897335	ExpressionStatement	bpi -> name = strdup ( DB_ARG ( i ) )	3604:7:103810:103841	894313	0	True				
ANR	897336	AssignmentExpression	bpi -> name = strdup ( DB_ARG ( i ) )		894313	0		=			
ANR	897337	PtrMemberAccess	bpi -> name		894313	0					
ANR	897338	Identifier	bpi		894313	0					
ANR	897339	Identifier	name		894313	1					
ANR	897340	CallExpression	strdup ( DB_ARG ( i ) )		894313	1					
ANR	897341	Callee	strdup		894313	0					
ANR	897342	Identifier	strdup		894313	0					
ANR	897343	ArgumentList	DB_ARG ( i )		894313	1					
ANR	897344	Argument	DB_ARG ( i )		894313	0					
ANR	897345	CallExpression	DB_ARG ( i )		894313	0					
ANR	897346	Callee	DB_ARG		894313	0					
ANR	897347	Identifier	DB_ARG		894313	0					
ANR	897348	ArgumentList	i		894313	1					
ANR	897349	Argument	i		894313	0					
ANR	897350	Identifier	i		894313	0					
ANR	897351	ElseStatement	else		894313	0					
ANR	897352	CompoundStatement		454:12:12143:12143	894313	0					
ANR	897353	ExpressionStatement	"eprintf ( ""Cannot set breakpoint at '%s'\\n"" , DB_ARG ( i ) )"	3607:6:103871:103926	894313	0	True				
ANR	897354	CallExpression	"eprintf ( ""Cannot set breakpoint at '%s'\\n"" , DB_ARG ( i ) )"		894313	0					
ANR	897355	Callee	eprintf		894313	0					
ANR	897356	Identifier	eprintf		894313	0					
ANR	897357	ArgumentList	"""Cannot set breakpoint at '%s'\\n"""		894313	1					
ANR	897358	Argument	"""Cannot set breakpoint at '%s'\\n"""		894313	0					
ANR	897359	PrimaryExpression	"""Cannot set breakpoint at '%s'\\n"""		894313	0					
ANR	897360	Argument	DB_ARG ( i )		894313	1					
ANR	897361	CallExpression	DB_ARG ( i )		894313	0					
ANR	897362	Callee	DB_ARG		894313	0					
ANR	897363	Identifier	DB_ARG		894313	0					
ANR	897364	ArgumentList	i		894313	1					
ANR	897365	Argument	i		894313	0					
ANR	897366	Identifier	i		894313	0					
ANR	897367	ElseStatement	else		894313	0					
ANR	897368	CompoundStatement		457:11:12226:12226	894313	0					
ANR	897369	Statement	eprintf	3610:5:103953:103959	894313	0	True				
ANR	897370	Statement	(	3610:13:103961:103961	894313	1	True				
ANR	897371	Statement	"""Cannot place a breakpoint on 0x%08"""	3610:14:103962:103997	894313	2	True				
ANR	897372	Statement	PFMT64x	3610:50:103998:104004	894313	3	True				
ANR	897373	Statement	""" unmapped memory."""	3610:57:104005:104023	894313	4	True				
ANR	897374	Statement	"""See e? dbg.bpinmaps\\n"""	3611:8:104033:104055	894313	5	True				
ANR	897375	Statement	","	3611:31:104056:104056	894313	6	True				
ANR	897376	Statement	addr	3611:33:104058:104061	894313	7	True				
ANR	897377	Statement	)	3611:37:104062:104062	894313	8	True				
ANR	897378	ExpressionStatement		3611:38:104063:104063	894313	9	True				
ANR	897379	BreakStatement	break ;	3615:2:104082:104087	894313	80	True				
ANR	897380	Label	case 'i' :	3616:1:104090:104098	894313	81	True				
ANR	897381	ExpressionStatement	"core_cmd_dbi ( core , input , addr )"	3617:2:104102:104134	894313	82	True				
ANR	897382	CallExpression	"core_cmd_dbi ( core , input , addr )"		894313	0					
ANR	897383	Callee	core_cmd_dbi		894313	0					
ANR	897384	Identifier	core_cmd_dbi		894313	0					
ANR	897385	ArgumentList	core		894313	1					
ANR	897386	Argument	core		894313	0					
ANR	897387	Identifier	core		894313	0					
ANR	897388	Argument	input		894313	1					
ANR	897389	Identifier	input		894313	0					
ANR	897390	Argument	addr		894313	2					
ANR	897391	Identifier	addr		894313	0					
ANR	897392	BreakStatement	break ;	3618:2:104138:104143	894313	83	True				
ANR	897393	Label	case '?' :	3619:1:104146:104154	894313	84	True				
ANR	897394	Label	default :	3620:1:104157:104164	894313	85	True				
ANR	897395	Identifier	default		894313	0					
ANR	897396	ExpressionStatement	"r_core_cmd_help ( core , help_msg_db )"	3621:2:104168:104203	894313	86	True				
ANR	897397	CallExpression	"r_core_cmd_help ( core , help_msg_db )"		894313	0					
ANR	897398	Callee	r_core_cmd_help		894313	0					
ANR	897399	Identifier	r_core_cmd_help		894313	0					
ANR	897400	ArgumentList	core		894313	1					
ANR	897401	Argument	core		894313	0					
ANR	897402	Identifier	core		894313	0					
ANR	897403	Argument	help_msg_db		894313	1					
ANR	897404	Identifier	help_msg_db		894313	0					
ANR	897405	BreakStatement	break ;	3622:2:104207:104212	894313	87	True				
ANR	897406	ExpressionStatement	free ( str )	3624:1:104218:104228	894313	15	True				
ANR	897407	CallExpression	free ( str )		894313	0					
ANR	897408	Callee	free		894313	0					
ANR	897409	Identifier	free		894313	0					
ANR	897410	ArgumentList	str		894313	1					
ANR	897411	Argument	str		894313	0					
ANR	897412	Identifier	str		894313	0					
ANR	897413	ReturnType	static void		894313	1					
ANR	897414	Identifier	r_core_cmd_bp		894313	2					
ANR	897415	ParameterList	"RCore * core , const char * input"		894313	3					
ANR	897416	Parameter	RCore * core	3153:26:91687:91697	894313	0	True				
ANR	897417	ParameterType	RCore *		894313	0					
ANR	897418	Identifier	core		894313	1					
ANR	897419	Parameter	const char * input	3153:39:91700:91716	894313	1	True				
ANR	897420	ParameterType	const char *		894313	0					
ANR	897421	Identifier	input		894313	1					
ANR	897422	CFGEntryNode	ENTRY		894313		True				
ANR	897423	CFGExitNode	EXIT		894313		True				
ANR	897424	Symbol	R_BP_PROT_ACCESS		894313						
ANR	897425	Symbol	help_msg_dbw		894313						
ANR	897426	Symbol	validAddress		894313						
ANR	897427	Symbol	help_msg_dbt		894313						
ANR	897428	Symbol	pcstr		894313						
ANR	897429	Symbol	* input		894313						
ANR	897430	Symbol	delta		894313						
ANR	897431	Symbol	strchr		894313						
ANR	897432	Symbol	core -> offset		894313						
ANR	897433	Symbol	core -> dbg -> bp		894313						
ANR	897434	Symbol	r_str_word_set0		894313						
ANR	897435	Symbol	r_num_tail		894313						
ANR	897436	Symbol	& flagdesc		894313						
ANR	897437	Symbol	symbol -> type		894313						
ANR	897438	Symbol	r_str_rwx_i		894313						
ANR	897439	Symbol	core -> bin		894313						
ANR	897440	Symbol	DB_ARG		894313						
ANR	897441	Symbol	flagdesc2		894313						
ANR	897442	Symbol	module		894313						
ANR	897443	Symbol	iter		894313						
ANR	897444	Symbol	r_anal_noreturn_at		894313						
ANR	897445	Symbol	str		894313						
ANR	897446	Symbol	input		894313						
ANR	897447	Symbol	* * * core		894313						
ANR	897448	Symbol	r_w32_add_winmsg_breakpoint		894313						
ANR	897449	Symbol	r_bp_plugin_del		894313						
ANR	897450	Symbol	r_config_get_i		894313						
ANR	897451	Symbol	r_str_trim_ro		894313						
ANR	897452	Symbol	* DB_ARG		894313						
ANR	897453	Symbol	* core -> dbg		894313						
ANR	897454	Symbol	spstr		894313						
ANR	897455	Symbol	symbol -> vaddr		894313						
ANR	897456	Symbol	rw		894313						
ANR	897457	Symbol	f -> name		894313						
ANR	897458	Symbol	* core		894313						
ANR	897459	Symbol	r_debug_bp_add		894313						
ANR	897460	Symbol	core -> anal		894313						
ANR	897461	Symbol	bp		894313						
ANR	897462	Symbol	r_debug_frames		894313						
ANR	897463	Symbol	& flagdesc2		894313						
ANR	897464	Symbol	fcn		894313						
ANR	897465	Symbol	arg		894313						
ANR	897466	Symbol	sl		894313						
ANR	897467	Symbol	core -> anal -> bits		894313						
ANR	897468	Symbol	f		894313						
ANR	897469	Symbol	i		894313						
ANR	897470	Symbol	bpi -> enabled		894313						
ANR	897471	Symbol	core -> flags		894313						
ANR	897472	Symbol	r_bp_set_trace		894313						
ANR	897473	Symbol	& spstr		894313						
ANR	897474	Symbol	bpi -> data		894313						
ANR	897475	Symbol	p		894313						
ANR	897476	Symbol	* core -> anal		894313						
ANR	897477	Symbol	f -> offset		894313						
ANR	897478	Symbol	watch		894313						
ANR	897479	Symbol	bpi -> name		894313						
ANR	897480	Symbol	r_bin_get_symbols		894313						
ANR	897481	Symbol	symbol		894313						
ANR	897482	Symbol	help_msg_db		894313						
ANR	897483	Symbol	r_bp_get_at		894313						
ANR	897484	Symbol	* arg ++		894313						
ANR	897485	Symbol	bpi -> perm		894313						
ANR	897486	Symbol	core -> num		894313						
ANR	897487	Symbol	* symbol		894313						
ANR	897488	Symbol	strcmp		894313						
ANR	897489	Symbol	NULL		894313						
ANR	897490	Symbol	bpi -> expr		894313						
ANR	897491	Symbol	hex_format		894313						
ANR	897492	Symbol	strtok		894313						
ANR	897493	Symbol	hwbp		894313						
ANR	897494	Symbol	list		894313						
ANR	897495	Symbol	core		894313						
ANR	897496	Symbol	true		894313						
ANR	897497	Symbol	* bpi		894313						
ANR	897498	Symbol	frame		894313						
ANR	897499	Symbol	flagdesc		894313						
ANR	897500	Symbol	& pcstr		894313						
ANR	897501	Symbol	* frame		894313						
ANR	897502	Symbol	string		894313						
ANR	897503	Symbol	symbol -> name		894313						
ANR	897504	Symbol	r_core_flag_get_by_spaces		894313						
ANR	897505	Symbol	r_str_newf		894313						
ANR	897506	Symbol	r_bp_use		894313						
ANR	897507	Symbol	symbols		894313						
ANR	897508	Symbol	r_num_math		894313						
ANR	897509	Symbol	R_BIN_TYPE_FUNC_STR		894313						
ANR	897510	Symbol	core -> dbg -> bp -> delta		894313						
ANR	897511	Symbol	bpi		894313						
ANR	897512	Symbol	frame -> addr		894313						
ANR	897513	Symbol	addr		894313						
ANR	897514	Symbol	UT64_MAX		894313						
ANR	897515	Symbol	* * core		894313						
ANR	897516	Symbol	core -> config		894313						
ANR	897517	Symbol	* DB_ARG ( i )		894313						
ANR	897518	Symbol	* core -> dbg -> bp		894313						
ANR	897519	Symbol	false		894313						
ANR	897520	Symbol	inp		894313						
ANR	897521	Symbol	* f		894313						
ANR	897522	Symbol	r_anal_get_fcn_in		894313						
ANR	897523	Symbol	bpi -> cond		894313						
ANR	897524	Symbol	R_BP_PROT_WRITE		894313						
ANR	897525	Symbol	* p		894313						
ANR	897526	Symbol	strdup		894313						
ANR	897527	Symbol	bpi -> trace		894313						
ANR	897528	Symbol	R_BP_PROT_READ		894313						
ANR	897529	Symbol	core -> dbg		894313						
ANR	897530	Symbol	* * core -> dbg		894313						
ANR	897531	Function	add_trace_tree_child	3627:0:104233:104717							
ANR	897532	FunctionDef	"add_trace_tree_child (Sdb * db , RTree * t , RTreeNode * cur , ut64 addr)"		897531	0					
ANR	897533	CompoundStatement		3627:86:104319:104717	897531	0					
ANR	897534	IdentifierDeclStatement	struct trace_node * t_node ;	3628:1:104322:104347	897531	0	True				
ANR	897535	IdentifierDecl	* t_node		897531	0					
ANR	897536	IdentifierDeclType	struct trace_node *		897531	0					
ANR	897537	Identifier	t_node		897531	1					
ANR	897538	IdentifierDeclStatement	char dbkey [ TN_KEY_LEN ] ;	3629:1:104350:104372	897531	1	True				
ANR	897539	IdentifierDecl	dbkey [ TN_KEY_LEN ]		897531	0					
ANR	897540	IdentifierDeclType	char [ TN_KEY_LEN ]		897531	0					
ANR	897541	Identifier	dbkey		897531	1					
ANR	897542	Identifier	TN_KEY_LEN		897531	2					
ANR	897543	ExpressionStatement	"snprintf ( dbkey , TN_KEY_LEN , TN_KEY_FMT , addr )"	3631:1:104376:104422	897531	2	True				
ANR	897544	CallExpression	"snprintf ( dbkey , TN_KEY_LEN , TN_KEY_FMT , addr )"		897531	0					
ANR	897545	Callee	snprintf		897531	0					
ANR	897546	Identifier	snprintf		897531	0					
ANR	897547	ArgumentList	dbkey		897531	1					
ANR	897548	Argument	dbkey		897531	0					
ANR	897549	Identifier	dbkey		897531	0					
ANR	897550	Argument	TN_KEY_LEN		897531	1					
ANR	897551	Identifier	TN_KEY_LEN		897531	0					
ANR	897552	Argument	TN_KEY_FMT		897531	2					
ANR	897553	Identifier	TN_KEY_FMT		897531	0					
ANR	897554	Argument	addr		897531	3					
ANR	897555	Identifier	addr		897531	0					
ANR	897556	ExpressionStatement	"t_node = ( struct trace_node * ) ( size_t ) sdb_num_get ( db , dbkey , NULL )"	3632:1:104425:104492	897531	3	True				
ANR	897557	AssignmentExpression	"t_node = ( struct trace_node * ) ( size_t ) sdb_num_get ( db , dbkey , NULL )"		897531	0		=			
ANR	897558	Identifier	t_node		897531	0					
ANR	897559	CastExpression	"( struct trace_node * ) ( size_t ) sdb_num_get ( db , dbkey , NULL )"		897531	1					
ANR	897560	CastTarget	struct trace_node *		897531	0					
ANR	897561	CastExpression	"( size_t ) sdb_num_get ( db , dbkey , NULL )"		897531	1					
ANR	897562	CastTarget	size_t		897531	0					
ANR	897563	CallExpression	"sdb_num_get ( db , dbkey , NULL )"		897531	1					
ANR	897564	Callee	sdb_num_get		897531	0					
ANR	897565	Identifier	sdb_num_get		897531	0					
ANR	897566	ArgumentList	db		897531	1					
ANR	897567	Argument	db		897531	0					
ANR	897568	Identifier	db		897531	0					
ANR	897569	Argument	dbkey		897531	1					
ANR	897570	Identifier	dbkey		897531	0					
ANR	897571	Argument	NULL		897531	2					
ANR	897572	Identifier	NULL		897531	0					
ANR	897573	IfStatement	if ( ! t_node )		897531	4					
ANR	897574	Condition	! t_node	3633:5:104499:104505	897531	0	True				
ANR	897575	UnaryOperationExpression	! t_node		897531	0					
ANR	897576	UnaryOperator	!		897531	0					
ANR	897577	Identifier	t_node		897531	1					
ANR	897578	CompoundStatement		7:14:188:188	897531	1					
ANR	897579	Statement	t_node	3634:2:104512:104517	897531	0	True				
ANR	897580	Statement	=	3634:9:104519:104519	897531	1	True				
ANR	897581	Statement	R_NEW0	3634:11:104521:104526	897531	2	True				
ANR	897582	Statement	(	3634:18:104528:104528	897531	3	True				
ANR	897583	Statement	struct	3634:19:104529:104534	897531	4	True				
ANR	897584	Statement	trace_node	3634:26:104536:104545	897531	5	True				
ANR	897585	Statement	)	3634:36:104546:104546	897531	6	True				
ANR	897586	ExpressionStatement		3634:37:104547:104547	897531	7	True				
ANR	897587	ExpressionStatement	t_node -> addr = addr	3635:2:104551:104570	897531	8	True				
ANR	897588	AssignmentExpression	t_node -> addr = addr		897531	0		=			
ANR	897589	PtrMemberAccess	t_node -> addr		897531	0					
ANR	897590	Identifier	t_node		897531	0					
ANR	897591	Identifier	addr		897531	1					
ANR	897592	Identifier	addr		897531	1					
ANR	897593	ExpressionStatement	t_node -> refs = 1	3636:2:104574:104590	897531	9	True				
ANR	897594	AssignmentExpression	t_node -> refs = 1		897531	0		=			
ANR	897595	PtrMemberAccess	t_node -> refs		897531	0					
ANR	897596	Identifier	t_node		897531	0					
ANR	897597	Identifier	refs		897531	1					
ANR	897598	PrimaryExpression	1		897531	1					
ANR	897599	ExpressionStatement	"sdb_num_set ( db , dbkey , ( ut64 ) ( size_t ) t_node , 0 )"	3637:2:104594:104642	897531	10	True				
ANR	897600	CallExpression	"sdb_num_set ( db , dbkey , ( ut64 ) ( size_t ) t_node , 0 )"		897531	0					
ANR	897601	Callee	sdb_num_set		897531	0					
ANR	897602	Identifier	sdb_num_set		897531	0					
ANR	897603	ArgumentList	db		897531	1					
ANR	897604	Argument	db		897531	0					
ANR	897605	Identifier	db		897531	0					
ANR	897606	Argument	dbkey		897531	1					
ANR	897607	Identifier	dbkey		897531	0					
ANR	897608	Argument	( ut64 ) ( size_t ) t_node		897531	2					
ANR	897609	CastExpression	( ut64 ) ( size_t ) t_node		897531	0					
ANR	897610	CastTarget	ut64		897531	0					
ANR	897611	CastExpression	( size_t ) t_node		897531	1					
ANR	897612	CastTarget	size_t		897531	0					
ANR	897613	Identifier	t_node		897531	1					
ANR	897614	Argument	0		897531	3					
ANR	897615	PrimaryExpression	0		897531	0					
ANR	897616	ElseStatement	else		897531	0					
ANR	897617	CompoundStatement		12:8:332:332	897531	0					
ANR	897618	ExpressionStatement	t_node -> refs ++	3639:2:104656:104670	897531	0	True				
ANR	897619	PostIncDecOperationExpression	t_node -> refs ++		897531	0					
ANR	897620	PtrMemberAccess	t_node -> refs		897531	0					
ANR	897621	Identifier	t_node		897531	0					
ANR	897622	Identifier	refs		897531	1					
ANR	897623	IncDec	++		897531	1					
ANR	897624	ReturnStatement	"return r_tree_add_node ( t , cur , t_node ) ;"	3641:1:104676:104715	897531	5	True				
ANR	897625	CallExpression	"r_tree_add_node ( t , cur , t_node )"		897531	0					
ANR	897626	Callee	r_tree_add_node		897531	0					
ANR	897627	Identifier	r_tree_add_node		897531	0					
ANR	897628	ArgumentList	t		897531	1					
ANR	897629	Argument	t		897531	0					
ANR	897630	Identifier	t		897531	0					
ANR	897631	Argument	cur		897531	1					
ANR	897632	Identifier	cur		897531	0					
ANR	897633	Argument	t_node		897531	2					
ANR	897634	Identifier	t_node		897531	0					
ANR	897635	ReturnType	static RTreeNode *		897531	1					
ANR	897636	Identifier	add_trace_tree_child		897531	2					
ANR	897637	ParameterList	"Sdb * db , RTree * t , RTreeNode * cur , ut64 addr"		897531	3					
ANR	897638	Parameter	Sdb * db	3627:40:104273:104279	897531	0	True				
ANR	897639	ParameterType	Sdb *		897531	0					
ANR	897640	Identifier	db		897531	1					
ANR	897641	Parameter	RTree * t	3627:49:104282:104289	897531	1	True				
ANR	897642	ParameterType	RTree *		897531	0					
ANR	897643	Identifier	t		897531	1					
ANR	897644	Parameter	RTreeNode * cur	3627:59:104292:104305	897531	2	True				
ANR	897645	ParameterType	RTreeNode *		897531	0					
ANR	897646	Identifier	cur		897531	1					
ANR	897647	Parameter	ut64 addr	3627:75:104308:104316	897531	3	True				
ANR	897648	ParameterType	ut64		897531	0					
ANR	897649	Identifier	addr		897531	1					
ANR	897650	CFGEntryNode	ENTRY		897531		True				
ANR	897651	CFGExitNode	EXIT		897531		True				
ANR	897652	Symbol	sdb_num_get		897531						
ANR	897653	Symbol	cur		897531						
ANR	897654	Symbol	NULL		897531						
ANR	897655	Symbol	t_node -> addr		897531						
ANR	897656	Symbol	t_node -> refs		897531						
ANR	897657	Symbol	t_node		897531						
ANR	897658	Symbol	dbkey		897531						
ANR	897659	Symbol	TN_KEY_FMT		897531						
ANR	897660	Symbol	t		897531						
ANR	897661	Symbol	TN_KEY_LEN		897531						
ANR	897662	Symbol	* t_node		897531						
ANR	897663	Symbol	addr		897531						
ANR	897664	Symbol	db		897531						
ANR	897665	Symbol	r_tree_add_node		897531						
ANR	897666	DeclStmt									
ANR	897667	Decl							RCore	RCore *	_core
ANR	897668	Function	trace_traverse_pre	3646:0:104749:105163							
ANR	897669	FunctionDef	"trace_traverse_pre (RTreeNode * n , RTreeVisitor * vis)"		897668	0					
ANR	897670	CompoundStatement		3646:65:104814:105163	897668	0					
ANR	897671	IdentifierDeclStatement	"const char * name = """" ;"	3647:1:104817:104838	897668	0	True				
ANR	897672	IdentifierDecl	"* name = """""		897668	0					
ANR	897673	IdentifierDeclType	const char *		897668	0					
ANR	897674	Identifier	name		897668	1					
ANR	897675	AssignmentExpression	"* name = """""		897668	2		=			
ANR	897676	Identifier	name		897668	0					
ANR	897677	PrimaryExpression	""""""		897668	1					
ANR	897678	IdentifierDeclStatement	struct trace_node * tn = n -> data ;	3648:1:104841:104872	897668	1	True				
ANR	897679	IdentifierDecl	* tn = n -> data		897668	0					
ANR	897680	IdentifierDeclType	struct trace_node *		897668	0					
ANR	897681	Identifier	tn		897668	1					
ANR	897682	AssignmentExpression	* tn = n -> data		897668	2		=			
ANR	897683	Identifier	tn		897668	0					
ANR	897684	PtrMemberAccess	n -> data		897668	1					
ANR	897685	Identifier	n		897668	0					
ANR	897686	Identifier	data		897668	1					
ANR	897687	IdentifierDeclStatement	unsigned int i ;	3649:1:104875:104889	897668	2	True				
ANR	897688	IdentifierDecl	i		897668	0					
ANR	897689	IdentifierDeclType	unsigned int		897668	0					
ANR	897690	Identifier	i		897668	1					
ANR	897691	IfStatement	if ( ! tn )		897668	3					
ANR	897692	Condition	! tn	3650:5:104896:104898	897668	0	True				
ANR	897693	UnaryOperationExpression	! tn		897668	0					
ANR	897694	UnaryOperator	!		897668	0					
ANR	897695	Identifier	tn		897668	1					
ANR	897696	ReturnStatement	return ;	3650:10:104901:104907	897668	1	True				
ANR	897697	ForStatement	for ( i = 0 ; i < n -> depth - 1 ; i ++ )		897668	4					
ANR	897698	ForInit	i = 0 ;	3651:6:104915:104920	897668	0	True				
ANR	897699	AssignmentExpression	i = 0		897668	0		=			
ANR	897700	Identifier	i		897668	0					
ANR	897701	PrimaryExpression	0		897668	1					
ANR	897702	Condition	i < n -> depth - 1	3651:13:104922:104937	897668	1	True				
ANR	897703	RelationalExpression	i < n -> depth - 1		897668	0		<			
ANR	897704	Identifier	i		897668	0					
ANR	897705	AdditiveExpression	n -> depth - 1		897668	1		-			
ANR	897706	PtrMemberAccess	n -> depth		897668	0					
ANR	897707	Identifier	n		897668	0					
ANR	897708	Identifier	depth		897668	1					
ANR	897709	PrimaryExpression	1		897668	1					
ANR	897710	PostIncDecOperationExpression	i ++	3651:31:104940:104942	897668	2	True				
ANR	897711	Identifier	i		897668	0					
ANR	897712	IncDec	++		897668	1					
ANR	897713	CompoundStatement		6:36:130:130	897668	3					
ANR	897714	ExpressionStatement	"r_cons_printf ( ""  "" )"	3652:2:104949:104969	897668	0	True				
ANR	897715	CallExpression	"r_cons_printf ( ""  "" )"		897668	0					
ANR	897716	Callee	r_cons_printf		897668	0					
ANR	897717	Identifier	r_cons_printf		897668	0					
ANR	897718	ArgumentList	"""  """		897668	1					
ANR	897719	Argument	"""  """		897668	0					
ANR	897720	PrimaryExpression	"""  """		897668	0					
ANR	897721	IfStatement	if ( _core )		897668	5					
ANR	897722	Condition	_core	3654:5:104979:104983	897668	0	True				
ANR	897723	Identifier	_core		897668	0					
ANR	897724	CompoundStatement		10:2:175:234	897668	1					
ANR	897725	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_at ( _core -> flags , tn -> addr , true ) ;"	3655:2:104990:105049	897668	0	True				
ANR	897726	IdentifierDecl	"* f = r_flag_get_at ( _core -> flags , tn -> addr , true )"		897668	0					
ANR	897727	IdentifierDeclType	RFlagItem *		897668	0					
ANR	897728	Identifier	f		897668	1					
ANR	897729	AssignmentExpression	"* f = r_flag_get_at ( _core -> flags , tn -> addr , true )"		897668	2		=			
ANR	897730	Identifier	f		897668	0					
ANR	897731	CallExpression	"r_flag_get_at ( _core -> flags , tn -> addr , true )"		897668	1					
ANR	897732	Callee	r_flag_get_at		897668	0					
ANR	897733	Identifier	r_flag_get_at		897668	0					
ANR	897734	ArgumentList	_core -> flags		897668	1					
ANR	897735	Argument	_core -> flags		897668	0					
ANR	897736	PtrMemberAccess	_core -> flags		897668	0					
ANR	897737	Identifier	_core		897668	0					
ANR	897738	Identifier	flags		897668	1					
ANR	897739	Argument	tn -> addr		897668	1					
ANR	897740	PtrMemberAccess	tn -> addr		897668	0					
ANR	897741	Identifier	tn		897668	0					
ANR	897742	Identifier	addr		897668	1					
ANR	897743	Argument	true		897668	2					
ANR	897744	Identifier	true		897668	0					
ANR	897745	IfStatement	if ( f )		897668	1					
ANR	897746	Condition	f	3656:6:105057:105057	897668	0	True				
ANR	897747	Identifier	f		897668	0					
ANR	897748	CompoundStatement		11:9:245:245	897668	1					
ANR	897749	ExpressionStatement	name = f -> name	3657:3:105065:105079	897668	0	True				
ANR	897750	AssignmentExpression	name = f -> name		897668	0		=			
ANR	897751	Identifier	name		897668	0					
ANR	897752	PtrMemberAccess	f -> name		897668	1					
ANR	897753	Identifier	f		897668	0					
ANR	897754	Identifier	name		897668	1					
ANR	897755	Statement	r_cons_printf	3660:1:105089:105101	897668	6	True				
ANR	897756	Statement	(	3660:15:105103:105103	897668	7	True				
ANR	897757	Statement	""" 0x%08"""	3660:16:105104:105111	897668	8	True				
ANR	897758	Statement	PFMT64x	3660:24:105112:105118	897668	9	True				
ANR	897759	Statement	""" refs %d %s\\n"""	3660:31:105119:105133	897668	10	True				
ANR	897760	Statement	","	3660:46:105134:105134	897668	11	True				
ANR	897761	Statement	tn	3660:48:105136:105137	897668	12	True				
ANR	897762	Statement	->	3660:50:105138:105139	897668	13	True				
ANR	897763	Statement	addr	3660:52:105140:105143	897668	14	True				
ANR	897764	Statement	","	3660:56:105144:105144	897668	15	True				
ANR	897765	Statement	tn	3660:58:105146:105147	897668	16	True				
ANR	897766	Statement	->	3660:60:105148:105149	897668	17	True				
ANR	897767	Statement	refs	3660:62:105150:105153	897668	18	True				
ANR	897768	Statement	","	3660:66:105154:105154	897668	19	True				
ANR	897769	Statement	name	3660:68:105156:105159	897668	20	True				
ANR	897770	Statement	)	3660:72:105160:105160	897668	21	True				
ANR	897771	ExpressionStatement		3660:73:105161:105161	897668	22	True				
ANR	897772	ReturnType	static void		897668	1					
ANR	897773	Identifier	trace_traverse_pre		897668	2					
ANR	897774	ParameterList	"RTreeNode * n , RTreeVisitor * vis"		897668	3					
ANR	897775	Parameter	RTreeNode * n	3646:32:104781:104792	897668	0	True				
ANR	897776	ParameterType	RTreeNode *		897668	0					
ANR	897777	Identifier	n		897668	1					
ANR	897778	Parameter	RTreeVisitor * vis	3646:46:104795:104811	897668	1	True				
ANR	897779	ParameterType	RTreeVisitor *		897668	0					
ANR	897780	Identifier	vis		897668	1					
ANR	897781	CFGEntryNode	ENTRY		897668		True				
ANR	897782	CFGExitNode	EXIT		897668		True				
ANR	897783	Symbol	vis		897668						
ANR	897784	Symbol	* _core		897668						
ANR	897785	Symbol	n -> data		897668						
ANR	897786	Symbol	* tn		897668						
ANR	897787	Symbol	f -> name		897668						
ANR	897788	Symbol	f		897668						
ANR	897789	Symbol	i		897668						
ANR	897790	Symbol	n		897668						
ANR	897791	Symbol	* f		897668						
ANR	897792	Symbol	tn -> addr		897668						
ANR	897793	Symbol	_core		897668						
ANR	897794	Symbol	name		897668						
ANR	897795	Symbol	* n		897668						
ANR	897796	Symbol	true		897668						
ANR	897797	Symbol	n -> depth		897668						
ANR	897798	Symbol	tn		897668						
ANR	897799	Symbol	_core -> flags		897668						
ANR	897800	Symbol	r_flag_get_at		897668						
ANR	897801	Function	trace_traverse	3663:0:105166:105430							
ANR	897802	FunctionDef	trace_traverse (RTree * t)		897801	0					
ANR	897803	CompoundStatement		3663:38:105204:105430	897801	0					
ANR	897804	IdentifierDeclStatement	RTreeVisitor vis = { 0 } ;	3664:1:105207:105231	897801	0	True				
ANR	897805	IdentifierDecl	vis = { 0 }		897801	0					
ANR	897806	IdentifierDeclType	RTreeVisitor		897801	0					
ANR	897807	Identifier	vis		897801	1					
ANR	897808	AssignmentExpression	vis = { 0 }		897801	2		=			
ANR	897809	Identifier	vis		897801	0					
ANR	897810	InitializerList	0		897801	1					
ANR	897811	PrimaryExpression	0		897801	0					
ANR	897812	ExpressionStatement	"fprintf ( stderr , ""\\x1b[2K\\r"" )"	3667:1:105303:105332	897801	1	True				
ANR	897813	CallExpression	"fprintf ( stderr , ""\\x1b[2K\\r"" )"		897801	0					
ANR	897814	Callee	fprintf		897801	0					
ANR	897815	Identifier	fprintf		897801	0					
ANR	897816	ArgumentList	stderr		897801	1					
ANR	897817	Argument	stderr		897801	0					
ANR	897818	Identifier	stderr		897801	0					
ANR	897819	Argument	"""\\x1b[2K\\r"""		897801	1					
ANR	897820	PrimaryExpression	"""\\x1b[2K\\r"""		897801	0					
ANR	897821	ExpressionStatement	fflush ( stderr )	3668:1:105335:105350	897801	2	True				
ANR	897822	CallExpression	fflush ( stderr )		897801	0					
ANR	897823	Callee	fflush		897801	0					
ANR	897824	Identifier	fflush		897801	0					
ANR	897825	ArgumentList	stderr		897801	1					
ANR	897826	Argument	stderr		897801	0					
ANR	897827	Identifier	stderr		897801	0					
ANR	897828	ExpressionStatement	vis . pre_visit = ( RTreeNodeVisitCb ) trace_traverse_pre	3669:1:105353:105405	897801	3	True				
ANR	897829	AssignmentExpression	vis . pre_visit = ( RTreeNodeVisitCb ) trace_traverse_pre		897801	0		=			
ANR	897830	MemberAccess	vis . pre_visit		897801	0					
ANR	897831	Identifier	vis		897801	0					
ANR	897832	Identifier	pre_visit		897801	1					
ANR	897833	CastExpression	( RTreeNodeVisitCb ) trace_traverse_pre		897801	1					
ANR	897834	CastTarget	RTreeNodeVisitCb		897801	0					
ANR	897835	Identifier	trace_traverse_pre		897801	1					
ANR	897836	ExpressionStatement	"r_tree_dfs ( t , & vis )"	3670:1:105408:105428	897801	4	True				
ANR	897837	CallExpression	"r_tree_dfs ( t , & vis )"		897801	0					
ANR	897838	Callee	r_tree_dfs		897801	0					
ANR	897839	Identifier	r_tree_dfs		897801	0					
ANR	897840	ArgumentList	t		897801	1					
ANR	897841	Argument	t		897801	0					
ANR	897842	Identifier	t		897801	0					
ANR	897843	Argument	& vis		897801	1					
ANR	897844	UnaryOperationExpression	& vis		897801	0					
ANR	897845	UnaryOperator	&		897801	0					
ANR	897846	Identifier	vis		897801	1					
ANR	897847	ReturnType	static void		897801	1					
ANR	897848	Identifier	trace_traverse		897801	2					
ANR	897849	ParameterList	RTree * t		897801	3					
ANR	897850	Parameter	RTree * t	3663:28:105194:105201	897801	0	True				
ANR	897851	ParameterType	RTree *		897801	0					
ANR	897852	Identifier	t		897801	1					
ANR	897853	CFGEntryNode	ENTRY		897801		True				
ANR	897854	CFGExitNode	EXIT		897801		True				
ANR	897855	Symbol	vis		897801						
ANR	897856	Symbol	& vis		897801						
ANR	897857	Symbol	t		897801						
ANR	897858	Symbol	vis . pre_visit		897801						
ANR	897859	Symbol	trace_traverse_pre		897801						
ANR	897860	Symbol	stderr		897801						
ANR	897861	Function	do_debug_trace_calls	3673:0:105433:108546							
ANR	897862	FunctionDef	"do_debug_trace_calls (RCore * core , ut64 from , ut64 to , ut64 final_addr)"		897861	0					
ANR	897863	CompoundStatement		3673:83:105516:108546	897861	0					
ANR	897864	IdentifierDeclStatement	"bool trace_libs = r_config_get_i ( core -> config , ""dbg.trace.libs"" ) ;"	3674:1:105519:105584	897861	0	True				
ANR	897865	IdentifierDecl	"trace_libs = r_config_get_i ( core -> config , ""dbg.trace.libs"" )"		897861	0					
ANR	897866	IdentifierDeclType	bool		897861	0					
ANR	897867	Identifier	trace_libs		897861	1					
ANR	897868	AssignmentExpression	"trace_libs = r_config_get_i ( core -> config , ""dbg.trace.libs"" )"		897861	2		=			
ANR	897869	Identifier	trace_libs		897861	0					
ANR	897870	CallExpression	"r_config_get_i ( core -> config , ""dbg.trace.libs"" )"		897861	1					
ANR	897871	Callee	r_config_get_i		897861	0					
ANR	897872	Identifier	r_config_get_i		897861	0					
ANR	897873	ArgumentList	core -> config		897861	1					
ANR	897874	Argument	core -> config		897861	0					
ANR	897875	PtrMemberAccess	core -> config		897861	0					
ANR	897876	Identifier	core		897861	0					
ANR	897877	Identifier	config		897861	1					
ANR	897878	Argument	"""dbg.trace.libs"""		897861	1					
ANR	897879	PrimaryExpression	"""dbg.trace.libs"""		897861	0					
ANR	897880	IdentifierDeclStatement	"bool shallow_trace = r_config_get_i ( core -> config , ""dbg.trace.inrange"" ) ;"	3675:1:105587:105658	897861	1	True				
ANR	897881	IdentifierDecl	"shallow_trace = r_config_get_i ( core -> config , ""dbg.trace.inrange"" )"		897861	0					
ANR	897882	IdentifierDeclType	bool		897861	0					
ANR	897883	Identifier	shallow_trace		897861	1					
ANR	897884	AssignmentExpression	"shallow_trace = r_config_get_i ( core -> config , ""dbg.trace.inrange"" )"		897861	2		=			
ANR	897885	Identifier	shallow_trace		897861	0					
ANR	897886	CallExpression	"r_config_get_i ( core -> config , ""dbg.trace.inrange"" )"		897861	1					
ANR	897887	Callee	r_config_get_i		897861	0					
ANR	897888	Identifier	r_config_get_i		897861	0					
ANR	897889	ArgumentList	core -> config		897861	1					
ANR	897890	Argument	core -> config		897861	0					
ANR	897891	PtrMemberAccess	core -> config		897861	0					
ANR	897892	Identifier	core		897861	0					
ANR	897893	Identifier	config		897861	1					
ANR	897894	Argument	"""dbg.trace.inrange"""		897861	1					
ANR	897895	PrimaryExpression	"""dbg.trace.inrange"""		897861	0					
ANR	897896	IdentifierDeclStatement	Sdb * tracenodes = core -> dbg -> tracenodes ;	3676:1:105661:105700	897861	2	True				
ANR	897897	IdentifierDecl	* tracenodes = core -> dbg -> tracenodes		897861	0					
ANR	897898	IdentifierDeclType	Sdb *		897861	0					
ANR	897899	Identifier	tracenodes		897861	1					
ANR	897900	AssignmentExpression	* tracenodes = core -> dbg -> tracenodes		897861	2		=			
ANR	897901	Identifier	tracenodes		897861	0					
ANR	897902	PtrMemberAccess	core -> dbg -> tracenodes		897861	1					
ANR	897903	PtrMemberAccess	core -> dbg		897861	0					
ANR	897904	Identifier	core		897861	0					
ANR	897905	Identifier	dbg		897861	1					
ANR	897906	Identifier	tracenodes		897861	1					
ANR	897907	IdentifierDeclStatement	RTree * tr = core -> dbg -> tree ;	3677:1:105703:105730	897861	3	True				
ANR	897908	IdentifierDecl	* tr = core -> dbg -> tree		897861	0					
ANR	897909	IdentifierDeclType	RTree *		897861	0					
ANR	897910	Identifier	tr		897861	1					
ANR	897911	AssignmentExpression	* tr = core -> dbg -> tree		897861	2		=			
ANR	897912	Identifier	tr		897861	0					
ANR	897913	PtrMemberAccess	core -> dbg -> tree		897861	1					
ANR	897914	PtrMemberAccess	core -> dbg		897861	0					
ANR	897915	Identifier	core		897861	0					
ANR	897916	Identifier	dbg		897861	1					
ANR	897917	Identifier	tree		897861	1					
ANR	897918	IdentifierDeclStatement	RDebug * dbg = core -> dbg ;	3678:1:105733:105756	897861	4	True				
ANR	897919	IdentifierDecl	* dbg = core -> dbg		897861	0					
ANR	897920	IdentifierDeclType	RDebug *		897861	0					
ANR	897921	Identifier	dbg		897861	1					
ANR	897922	AssignmentExpression	* dbg = core -> dbg		897861	2		=			
ANR	897923	Identifier	dbg		897861	0					
ANR	897924	PtrMemberAccess	core -> dbg		897861	1					
ANR	897925	Identifier	core		897861	0					
ANR	897926	Identifier	dbg		897861	1					
ANR	897927	IdentifierDeclStatement	ut64 debug_to = UT64_MAX ;	3679:1:105759:105783	897861	5	True				
ANR	897928	IdentifierDecl	debug_to = UT64_MAX		897861	0					
ANR	897929	IdentifierDeclType	ut64		897861	0					
ANR	897930	Identifier	debug_to		897861	1					
ANR	897931	AssignmentExpression	debug_to = UT64_MAX		897861	2		=			
ANR	897932	Identifier	UT64_MAX		897861	0					
ANR	897933	Identifier	UT64_MAX		897861	1					
ANR	897934	IdentifierDeclStatement	RTreeNode * cur ;	3680:1:105786:105800	897861	6	True				
ANR	897935	IdentifierDecl	* cur		897861	0					
ANR	897936	IdentifierDeclType	RTreeNode *		897861	0					
ANR	897937	Identifier	cur		897861	1					
ANR	897938	IdentifierDeclStatement	ut64 addr = 0 ;	3681:1:105803:105816	897861	7	True				
ANR	897939	IdentifierDecl	addr = 0		897861	0					
ANR	897940	IdentifierDeclType	ut64		897861	0					
ANR	897941	Identifier	addr		897861	1					
ANR	897942	AssignmentExpression	addr = 0		897861	2		=			
ANR	897943	Identifier	addr		897861	0					
ANR	897944	PrimaryExpression	0		897861	1					
ANR	897945	IdentifierDeclStatement	int n = 0 ;	3682:1:105819:105828	897861	8	True				
ANR	897946	IdentifierDecl	n = 0		897861	0					
ANR	897947	IdentifierDeclType	int		897861	0					
ANR	897948	Identifier	n		897861	1					
ANR	897949	AssignmentExpression	n = 0		897861	2		=			
ANR	897950	Identifier	n		897861	0					
ANR	897951	PrimaryExpression	0		897861	1					
ANR	897952	IfStatement	if ( ! trace_libs )		897861	9					
ANR	897953	Condition	! trace_libs	3684:5:105836:105846	897861	0	True				
ANR	897954	UnaryOperationExpression	! trace_libs		897861	0					
ANR	897955	UnaryOperator	!		897861	0					
ANR	897956	Identifier	trace_libs		897861	1					
ANR	897957	CompoundStatement		14:2:345:423	897861	1					
ANR	897958	IdentifierDeclStatement	"RList * bounds = r_core_get_boundaries_prot ( core , - 1 , ""dbg.program"" , ""search"" ) ;"	3686:2:105862:105940	897861	0	True				
ANR	897959	IdentifierDecl	"* bounds = r_core_get_boundaries_prot ( core , - 1 , ""dbg.program"" , ""search"" )"		897861	0					
ANR	897960	IdentifierDeclType	RList *		897861	0					
ANR	897961	Identifier	bounds		897861	1					
ANR	897962	AssignmentExpression	"* bounds = r_core_get_boundaries_prot ( core , - 1 , ""dbg.program"" , ""search"" )"		897861	2		=			
ANR	897963	Identifier	bounds		897861	0					
ANR	897964	CallExpression	"r_core_get_boundaries_prot ( core , - 1 , ""dbg.program"" , ""search"" )"		897861	1					
ANR	897965	Callee	r_core_get_boundaries_prot		897861	0					
ANR	897966	Identifier	r_core_get_boundaries_prot		897861	0					
ANR	897967	ArgumentList	core		897861	1					
ANR	897968	Argument	core		897861	0					
ANR	897969	Identifier	core		897861	0					
ANR	897970	Argument	- 1		897861	1					
ANR	897971	UnaryOperationExpression	- 1		897861	0					
ANR	897972	UnaryOperator	-		897861	0					
ANR	897973	PrimaryExpression	1		897861	1					
ANR	897974	Argument	"""dbg.program"""		897861	2					
ANR	897975	PrimaryExpression	"""dbg.program"""		897861	0					
ANR	897976	Argument	"""search"""		897861	3					
ANR	897977	PrimaryExpression	"""search"""		897861	0					
ANR	897978	ExpressionStatement	r_list_free ( bounds )	3687:2:105944:105964	897861	1	True				
ANR	897979	CallExpression	r_list_free ( bounds )		897861	0					
ANR	897980	Callee	r_list_free		897861	0					
ANR	897981	Identifier	r_list_free		897861	0					
ANR	897982	ArgumentList	bounds		897861	1					
ANR	897983	Argument	bounds		897861	0					
ANR	897984	Identifier	bounds		897861	0					
ANR	897985	ExpressionStatement	"r_tree_add_node ( tr , NULL , NULL )"	3692:1:106017:106049	897861	10	True				
ANR	897986	CallExpression	"r_tree_add_node ( tr , NULL , NULL )"		897861	0					
ANR	897987	Callee	r_tree_add_node		897861	0					
ANR	897988	Identifier	r_tree_add_node		897861	0					
ANR	897989	ArgumentList	tr		897861	1					
ANR	897990	Argument	tr		897861	0					
ANR	897991	Identifier	tr		897861	0					
ANR	897992	Argument	NULL		897861	1					
ANR	897993	Identifier	NULL		897861	0					
ANR	897994	Argument	NULL		897861	2					
ANR	897995	Identifier	NULL		897861	0					
ANR	897996	ExpressionStatement	cur = tr -> root	3693:1:106052:106066	897861	11	True				
ANR	897997	AssignmentExpression	cur = tr -> root		897861	0		=			
ANR	897998	Identifier	cur		897861	0					
ANR	897999	PtrMemberAccess	tr -> root		897861	1					
ANR	898000	Identifier	tr		897861	0					
ANR	898001	Identifier	root		897861	1					
ANR	898002	WhileStatement	while ( true )		897861	12					
ANR	898003	Condition	true	3695:8:106077:106080	897861	0	True				
ANR	898004	Identifier	true		897861	0					
ANR	898005	CompoundStatement		26:2:600:617	897861	1					
ANR	898006	IdentifierDeclStatement	ut8 buf [ 32 ] ;	3696:2:106087:106098	897861	0	True				
ANR	898007	IdentifierDecl	buf [ 32 ]		897861	0					
ANR	898008	IdentifierDeclType	ut8 [ 32 ]		897861	0					
ANR	898009	Identifier	buf		897861	1					
ANR	898010	PrimaryExpression	32		897861	2					
ANR	898011	IdentifierDeclStatement	RAnalOp aop ;	3697:2:106102:106113	897861	1	True				
ANR	898012	IdentifierDecl	aop		897861	0					
ANR	898013	IdentifierDeclType	RAnalOp		897861	0					
ANR	898014	Identifier	aop		897861	1					
ANR	898015	IdentifierDeclStatement	int addr_in_range ;	3698:2:106117:106134	897861	2	True				
ANR	898016	IdentifierDecl	addr_in_range		897861	0					
ANR	898017	IdentifierDeclType	int		897861	0					
ANR	898018	Identifier	addr_in_range		897861	1					
ANR	898019	IfStatement	if ( r_cons_is_breaked ( ) )		897861	3					
ANR	898020	Condition	r_cons_is_breaked ( )	3700:6:106143:106161	897861	0	True				
ANR	898021	CallExpression	r_cons_is_breaked ( )		897861	0					
ANR	898022	Callee	r_cons_is_breaked		897861	0					
ANR	898023	Identifier	r_cons_is_breaked		897861	0					
ANR	898024	ArgumentList			897861	1					
ANR	898025	CompoundStatement		28:27:647:647	897861	1					
ANR	898026	BreakStatement	break ;	3701:3:106169:106174	897861	0	True				
ANR	898027	IfStatement	if ( r_debug_is_dead ( dbg ) )		897861	4					
ANR	898028	Condition	r_debug_is_dead ( dbg )	3703:6:106186:106206	897861	0	True				
ANR	898029	CallExpression	r_debug_is_dead ( dbg )		897861	0					
ANR	898030	Callee	r_debug_is_dead		897861	0					
ANR	898031	Identifier	r_debug_is_dead		897861	0					
ANR	898032	ArgumentList	dbg		897861	1					
ANR	898033	Argument	dbg		897861	0					
ANR	898034	Identifier	dbg		897861	0					
ANR	898035	CompoundStatement		31:29:692:692	897861	1					
ANR	898036	BreakStatement	break ;	3704:3:106214:106219	897861	0	True				
ANR	898037	IfStatement	"if ( debug_to != UT64_MAX && ! r_debug_continue_until ( dbg , debug_to ) )"		897861	5					
ANR	898038	Condition	"debug_to != UT64_MAX && ! r_debug_continue_until ( dbg , debug_to )"	3706:6:106231:106293	897861	0	True				
ANR	898039	AndExpression	"debug_to != UT64_MAX && ! r_debug_continue_until ( dbg , debug_to )"		897861	0		&&			
ANR	898040	EqualityExpression	debug_to != UT64_MAX		897861	0		!=			
ANR	898041	Identifier	debug_to		897861	0					
ANR	898042	Identifier	UT64_MAX		897861	1					
ANR	898043	UnaryOperationExpression	"! r_debug_continue_until ( dbg , debug_to )"		897861	1					
ANR	898044	UnaryOperator	!		897861	0					
ANR	898045	CallExpression	"r_debug_continue_until ( dbg , debug_to )"		897861	1					
ANR	898046	Callee	r_debug_continue_until		897861	0					
ANR	898047	Identifier	r_debug_continue_until		897861	0					
ANR	898048	ArgumentList	dbg		897861	1					
ANR	898049	Argument	dbg		897861	0					
ANR	898050	Identifier	dbg		897861	0					
ANR	898051	Argument	debug_to		897861	1					
ANR	898052	Identifier	debug_to		897861	0					
ANR	898053	CompoundStatement		34:71:779:779	897861	1					
ANR	898054	BreakStatement	break ;	3707:3:106301:106306	897861	0	True				
ANR	898055	IfStatement	"if ( ! r_debug_step ( dbg , 1 ) )"		897861	6					
ANR	898056	Condition	"! r_debug_step ( dbg , 1 )"	3709:6:106318:106339	897861	0	True				
ANR	898057	UnaryOperationExpression	"! r_debug_step ( dbg , 1 )"		897861	0					
ANR	898058	UnaryOperator	!		897861	0					
ANR	898059	CallExpression	"r_debug_step ( dbg , 1 )"		897861	1					
ANR	898060	Callee	r_debug_step		897861	0					
ANR	898061	Identifier	r_debug_step		897861	0					
ANR	898062	ArgumentList	dbg		897861	1					
ANR	898063	Argument	dbg		897861	0					
ANR	898064	Identifier	dbg		897861	0					
ANR	898065	Argument	1		897861	1					
ANR	898066	PrimaryExpression	1		897861	0					
ANR	898067	CompoundStatement		37:30:825:825	897861	1					
ANR	898068	BreakStatement	break ;	3710:3:106347:106352	897861	0	True				
ANR	898069	ExpressionStatement	debug_to = UT64_MAX	3712:2:106360:106379	897861	7	True				
ANR	898070	AssignmentExpression	debug_to = UT64_MAX		897861	0		=			
ANR	898071	Identifier	debug_to		897861	0					
ANR	898072	Identifier	UT64_MAX		897861	1					
ANR	898073	IfStatement	"if ( ! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false ) )"		897861	8					
ANR	898074	Condition	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	3713:6:106387:106432	897861	0	True				
ANR	898075	UnaryOperationExpression	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		897861	0					
ANR	898076	UnaryOperator	!		897861	0					
ANR	898077	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		897861	1					
ANR	898078	Callee	r_debug_reg_sync		897861	0					
ANR	898079	Identifier	r_debug_reg_sync		897861	0					
ANR	898080	ArgumentList	dbg		897861	1					
ANR	898081	Argument	dbg		897861	0					
ANR	898082	Identifier	dbg		897861	0					
ANR	898083	Argument	R_REG_TYPE_GPR		897861	1					
ANR	898084	Identifier	R_REG_TYPE_GPR		897861	0					
ANR	898085	Argument	false		897861	2					
ANR	898086	Identifier	false		897861	0					
ANR	898087	CompoundStatement		41:54:918:918	897861	1					
ANR	898088	BreakStatement	break ;	3714:3:106440:106445	897861	0	True				
ANR	898089	ExpressionStatement	"addr = r_debug_reg_get ( dbg , ""PC"" )"	3716:2:106453:106487	897861	9	True				
ANR	898090	AssignmentExpression	"addr = r_debug_reg_get ( dbg , ""PC"" )"		897861	0		=			
ANR	898091	Identifier	addr		897861	0					
ANR	898092	CallExpression	"r_debug_reg_get ( dbg , ""PC"" )"		897861	1					
ANR	898093	Callee	r_debug_reg_get		897861	0					
ANR	898094	Identifier	r_debug_reg_get		897861	0					
ANR	898095	ArgumentList	dbg		897861	1					
ANR	898096	Argument	dbg		897861	0					
ANR	898097	Identifier	dbg		897861	0					
ANR	898098	Argument	"""PC"""		897861	1					
ANR	898099	PrimaryExpression	"""PC"""		897861	0					
ANR	898100	IfStatement	if ( addr == final_addr )		897861	10					
ANR	898101	Condition	addr == final_addr	3717:6:106495:106512	897861	0	True				
ANR	898102	EqualityExpression	addr == final_addr		897861	0		==			
ANR	898103	Identifier	addr		897861	0					
ANR	898104	Identifier	final_addr		897861	1					
ANR	898105	CompoundStatement		45:26:998:998	897861	1					
ANR	898106	BreakStatement	break ;	3719:3:106567:106572	897861	0	True				
ANR	898107	ExpressionStatement	addr_in_range = addr >= from && addr < to	3721:2:106580:106621	897861	11	True				
ANR	898108	AssignmentExpression	addr_in_range = addr >= from && addr < to		897861	0		=			
ANR	898109	Identifier	addr_in_range		897861	0					
ANR	898110	AndExpression	addr >= from && addr < to		897861	1		&&			
ANR	898111	RelationalExpression	addr >= from		897861	0		>=			
ANR	898112	Identifier	addr		897861	0					
ANR	898113	Identifier	from		897861	1					
ANR	898114	RelationalExpression	addr < to		897861	1		<			
ANR	898115	Identifier	addr		897861	0					
ANR	898116	Identifier	to		897861	1					
ANR	898117	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"	3723:2:106626:106674	897861	12	True				
ANR	898118	CallExpression	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"		897861	0					
ANR	898119	Callee	r_io_read_at		897861	0					
ANR	898120	Identifier	r_io_read_at		897861	0					
ANR	898121	ArgumentList	core -> io		897861	1					
ANR	898122	Argument	core -> io		897861	0					
ANR	898123	PtrMemberAccess	core -> io		897861	0					
ANR	898124	Identifier	core		897861	0					
ANR	898125	Identifier	io		897861	1					
ANR	898126	Argument	addr		897861	1					
ANR	898127	Identifier	addr		897861	0					
ANR	898128	Argument	buf		897861	2					
ANR	898129	Identifier	buf		897861	0					
ANR	898130	Argument	sizeof ( buf )		897861	3					
ANR	898131	SizeofExpression	sizeof ( buf )		897861	0					
ANR	898132	Sizeof	sizeof		897861	0					
ANR	898133	SizeofOperand	buf		897861	1					
ANR	898134	ExpressionStatement	"r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	3724:2:106678:106753	897861	13	True				
ANR	898135	CallExpression	"r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		897861	0					
ANR	898136	Callee	r_anal_op		897861	0					
ANR	898137	Identifier	r_anal_op		897861	0					
ANR	898138	ArgumentList	core -> anal		897861	1					
ANR	898139	Argument	core -> anal		897861	0					
ANR	898140	PtrMemberAccess	core -> anal		897861	0					
ANR	898141	Identifier	core		897861	0					
ANR	898142	Identifier	anal		897861	1					
ANR	898143	Argument	& aop		897861	1					
ANR	898144	UnaryOperationExpression	& aop		897861	0					
ANR	898145	UnaryOperator	&		897861	0					
ANR	898146	Identifier	aop		897861	1					
ANR	898147	Argument	addr		897861	2					
ANR	898148	Identifier	addr		897861	0					
ANR	898149	Argument	buf		897861	3					
ANR	898150	Identifier	buf		897861	0					
ANR	898151	Argument	sizeof ( buf )		897861	4					
ANR	898152	SizeofExpression	sizeof ( buf )		897861	0					
ANR	898153	Sizeof	sizeof		897861	0					
ANR	898154	SizeofOperand	buf		897861	1					
ANR	898155	Argument	R_ANAL_OP_MASK_BASIC		897861	5					
ANR	898156	Identifier	R_ANAL_OP_MASK_BASIC		897861	0					
ANR	898157	Statement	eprintf	3725:2:106757:106763	897861	14	True				
ANR	898158	Statement	(	3725:10:106765:106765	897861	15	True				
ANR	898159	Statement	"""%d %"""	3725:11:106766:106771	897861	16	True				
ANR	898160	Statement	PFMT64x	3725:17:106772:106778	897861	17	True				
ANR	898161	Statement	"""\\r"""	3725:24:106779:106782	897861	18	True				
ANR	898162	Statement	","	3725:28:106783:106783	897861	19	True				
ANR	898163	Statement	n	3725:30:106785:106785	897861	20	True				
ANR	898164	Statement	++	3725:31:106786:106787	897861	21	True				
ANR	898165	Statement	","	3725:33:106788:106788	897861	22	True				
ANR	898166	Statement	addr	3725:35:106790:106793	897861	23	True				
ANR	898167	Statement	)	3725:39:106794:106794	897861	24	True				
ANR	898168	ExpressionStatement		3725:40:106795:106795	897861	25	True				
ANR	898169	SwitchStatement	switch ( aop . type )		897861	26					
ANR	898170	Condition	aop . type	3726:10:106807:106814	897861	0	True				
ANR	898171	MemberAccess	aop . type		897861	0					
ANR	898172	Identifier	aop		897861	0					
ANR	898173	Identifier	type		897861	1					
ANR	898174	CompoundStatement		54:20:1300:1300	897861	1					
ANR	898175	Label	case R_ANAL_OP_TYPE_UCALL :	3727:2:106821:106846	897861	0	True				
ANR	898176	Identifier	R_ANAL_OP_TYPE_UCALL		897861	0					
ANR	898177	Label	case R_ANAL_OP_TYPE_ICALL :	3728:2:106850:106875	897861	1	True				
ANR	898178	Identifier	R_ANAL_OP_TYPE_ICALL		897861	0					
ANR	898179	Label	case R_ANAL_OP_TYPE_RCALL :	3729:2:106879:106904	897861	2	True				
ANR	898180	Identifier	R_ANAL_OP_TYPE_RCALL		897861	0					
ANR	898181	Label	case R_ANAL_OP_TYPE_IRCALL :	3730:2:106908:106934	897861	3	True				
ANR	898182	Identifier	R_ANAL_OP_TYPE_IRCALL		897861	0					
ANR	898183	CompoundStatement		61:4:1450:1469	897861	4					
ANR	898184	IdentifierDeclStatement	ut64 called_addr ;	3732:4:106945:106961	897861	0	True				
ANR	898185	IdentifierDecl	called_addr		897861	0					
ANR	898186	IdentifierDeclType	ut64		897861	0					
ANR	898187	Identifier	called_addr		897861	1					
ANR	898188	IdentifierDeclStatement	int called_in_range ;	3733:4:106967:106986	897861	1	True				
ANR	898189	IdentifierDecl	called_in_range		897861	0					
ANR	898190	IdentifierDeclType	int		897861	0					
ANR	898191	Identifier	called_in_range		897861	1					
ANR	898192	ExpressionStatement	"r_debug_step ( dbg , 1 )"	3737:4:107041:107062	897861	2	True				
ANR	898193	CallExpression	"r_debug_step ( dbg , 1 )"		897861	0					
ANR	898194	Callee	r_debug_step		897861	0					
ANR	898195	Identifier	r_debug_step		897861	0					
ANR	898196	ArgumentList	dbg		897861	1					
ANR	898197	Argument	dbg		897861	0					
ANR	898198	Identifier	dbg		897861	0					
ANR	898199	Argument	1		897861	1					
ANR	898200	PrimaryExpression	1		897861	0					
ANR	898201	ExpressionStatement	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	3738:4:107068:107113	897861	3	True				
ANR	898202	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		897861	0					
ANR	898203	Callee	r_debug_reg_sync		897861	0					
ANR	898204	Identifier	r_debug_reg_sync		897861	0					
ANR	898205	ArgumentList	dbg		897861	1					
ANR	898206	Argument	dbg		897861	0					
ANR	898207	Identifier	dbg		897861	0					
ANR	898208	Argument	R_REG_TYPE_GPR		897861	1					
ANR	898209	Identifier	R_REG_TYPE_GPR		897861	0					
ANR	898210	Argument	false		897861	2					
ANR	898211	Identifier	false		897861	0					
ANR	898212	ExpressionStatement	"called_addr = r_debug_reg_get ( dbg , ""PC"" )"	3739:4:107119:107160	897861	4	True				
ANR	898213	AssignmentExpression	"called_addr = r_debug_reg_get ( dbg , ""PC"" )"		897861	0		=			
ANR	898214	Identifier	called_addr		897861	0					
ANR	898215	CallExpression	"r_debug_reg_get ( dbg , ""PC"" )"		897861	1					
ANR	898216	Callee	r_debug_reg_get		897861	0					
ANR	898217	Identifier	r_debug_reg_get		897861	0					
ANR	898218	ArgumentList	dbg		897861	1					
ANR	898219	Argument	dbg		897861	0					
ANR	898220	Identifier	dbg		897861	0					
ANR	898221	Argument	"""PC"""		897861	1					
ANR	898222	PrimaryExpression	"""PC"""		897861	0					
ANR	898223	ExpressionStatement	called_in_range = called_addr >= from && called_addr < to	3740:4:107166:107223	897861	5	True				
ANR	898224	AssignmentExpression	called_in_range = called_addr >= from && called_addr < to		897861	0		=			
ANR	898225	Identifier	called_in_range		897861	0					
ANR	898226	AndExpression	called_addr >= from && called_addr < to		897861	1		&&			
ANR	898227	RelationalExpression	called_addr >= from		897861	0		>=			
ANR	898228	Identifier	called_addr		897861	0					
ANR	898229	Identifier	from		897861	1					
ANR	898230	RelationalExpression	called_addr < to		897861	1		<			
ANR	898231	Identifier	called_addr		897861	0					
ANR	898232	Identifier	to		897861	1					
ANR	898233	IfStatement	if ( ! called_in_range && addr_in_range && ! shallow_trace )		897861	6					
ANR	898234	Condition	! called_in_range && addr_in_range && ! shallow_trace	3741:8:107233:107283	897861	0	True				
ANR	898235	AndExpression	! called_in_range && addr_in_range && ! shallow_trace		897861	0		&&			
ANR	898236	UnaryOperationExpression	! called_in_range		897861	0					
ANR	898237	UnaryOperator	!		897861	0					
ANR	898238	Identifier	called_in_range		897861	1					
ANR	898239	AndExpression	addr_in_range && ! shallow_trace		897861	1		&&			
ANR	898240	Identifier	addr_in_range		897861	0					
ANR	898241	UnaryOperationExpression	! shallow_trace		897861	1					
ANR	898242	UnaryOperator	!		897861	0					
ANR	898243	Identifier	shallow_trace		897861	1					
ANR	898244	CompoundStatement		69:61:1769:1769	897861	1					
ANR	898245	ExpressionStatement	debug_to = addr + aop . size	3742:5:107293:107319	897861	0	True				
ANR	898246	AssignmentExpression	debug_to = addr + aop . size		897861	0		=			
ANR	898247	Identifier	debug_to		897861	0					
ANR	898248	AdditiveExpression	addr + aop . size		897861	1		+			
ANR	898249	Identifier	addr		897861	0					
ANR	898250	MemberAccess	aop . size		897861	1					
ANR	898251	Identifier	aop		897861	0					
ANR	898252	Identifier	size		897861	1					
ANR	898253	IfStatement	if ( addr_in_range || shallow_trace )		897861	7					
ANR	898254	Condition	addr_in_range || shallow_trace	3744:8:107335:107364	897861	0	True				
ANR	898255	OrExpression	addr_in_range || shallow_trace		897861	0		||			
ANR	898256	Identifier	addr_in_range		897861	0					
ANR	898257	Identifier	shallow_trace		897861	1					
ANR	898258	CompoundStatement		72:40:1850:1850	897861	1					
ANR	898259	ExpressionStatement	"cur = add_trace_tree_child ( tracenodes , tr , cur , addr )"	3745:5:107374:107428	897861	0	True				
ANR	898260	AssignmentExpression	"cur = add_trace_tree_child ( tracenodes , tr , cur , addr )"		897861	0		=			
ANR	898261	Identifier	cur		897861	0					
ANR	898262	CallExpression	"add_trace_tree_child ( tracenodes , tr , cur , addr )"		897861	1					
ANR	898263	Callee	add_trace_tree_child		897861	0					
ANR	898264	Identifier	add_trace_tree_child		897861	0					
ANR	898265	ArgumentList	tracenodes		897861	1					
ANR	898266	Argument	tracenodes		897861	0					
ANR	898267	Identifier	tracenodes		897861	0					
ANR	898268	Argument	tr		897861	1					
ANR	898269	Identifier	tr		897861	0					
ANR	898270	Argument	cur		897861	2					
ANR	898271	Identifier	cur		897861	0					
ANR	898272	Argument	addr		897861	3					
ANR	898273	Identifier	addr		897861	0					
ANR	898274	IfStatement	if ( debug_to != UT64_MAX )		897861	1					
ANR	898275	Condition	debug_to != UT64_MAX	3746:9:107439:107458	897861	0	True				
ANR	898276	EqualityExpression	debug_to != UT64_MAX		897861	0		!=			
ANR	898277	Identifier	debug_to		897861	0					
ANR	898278	Identifier	UT64_MAX		897861	1					
ANR	898279	CompoundStatement		74:31:1944:1944	897861	1					
ANR	898280	ExpressionStatement	cur = cur -> parent	3747:6:107469:107486	897861	0	True				
ANR	898281	AssignmentExpression	cur = cur -> parent		897861	0		=			
ANR	898282	Identifier	cur		897861	0					
ANR	898283	PtrMemberAccess	cur -> parent		897861	1					
ANR	898284	Identifier	cur		897861	0					
ANR	898285	Identifier	parent		897861	1					
ANR	898286	BreakStatement	break ;	3751:4:107562:107567	897861	8	True				
ANR	898287	Label	case R_ANAL_OP_TYPE_CALL :	3753:2:107576:107600	897861	5	True				
ANR	898288	Identifier	R_ANAL_OP_TYPE_CALL		897861	0					
ANR	898289	CompoundStatement		83:4:2094:2149	897861	6					
ANR	898290	IdentifierDeclStatement	int called_in_range = aop . jump >= from && aop . jump < to ;	3755:4:107611:107666	897861	0	True				
ANR	898291	IdentifierDecl	called_in_range = aop . jump >= from && aop . jump < to		897861	0					
ANR	898292	IdentifierDeclType	int		897861	0					
ANR	898293	Identifier	called_in_range		897861	1					
ANR	898294	AssignmentExpression	called_in_range = aop . jump >= from && aop . jump < to		897861	2		=			
ANR	898295	Identifier	called_in_range		897861	0					
ANR	898296	AndExpression	aop . jump >= from && aop . jump < to		897861	1		&&			
ANR	898297	RelationalExpression	aop . jump >= from		897861	0		>=			
ANR	898298	MemberAccess	aop . jump		897861	0					
ANR	898299	Identifier	aop		897861	0					
ANR	898300	Identifier	jump		897861	1					
ANR	898301	Identifier	from		897861	1					
ANR	898302	RelationalExpression	aop . jump < to		897861	1		<			
ANR	898303	MemberAccess	aop . jump		897861	0					
ANR	898304	Identifier	aop		897861	0					
ANR	898305	Identifier	jump		897861	1					
ANR	898306	Identifier	to		897861	1					
ANR	898307	IfStatement	if ( ! called_in_range && addr_in_range && ! shallow_trace )		897861	1					
ANR	898308	Condition	! called_in_range && addr_in_range && ! shallow_trace	3756:8:107676:107726	897861	0	True				
ANR	898309	AndExpression	! called_in_range && addr_in_range && ! shallow_trace		897861	0		&&			
ANR	898310	UnaryOperationExpression	! called_in_range		897861	0					
ANR	898311	UnaryOperator	!		897861	0					
ANR	898312	Identifier	called_in_range		897861	1					
ANR	898313	AndExpression	addr_in_range && ! shallow_trace		897861	1		&&			
ANR	898314	Identifier	addr_in_range		897861	0					
ANR	898315	UnaryOperationExpression	! shallow_trace		897861	1					
ANR	898316	UnaryOperator	!		897861	0					
ANR	898317	Identifier	shallow_trace		897861	1					
ANR	898318	CompoundStatement		84:61:2212:2212	897861	1					
ANR	898319	ExpressionStatement	debug_to = aop . addr + aop . size	3757:5:107736:107766	897861	0	True				
ANR	898320	AssignmentExpression	debug_to = aop . addr + aop . size		897861	0		=			
ANR	898321	Identifier	debug_to		897861	0					
ANR	898322	AdditiveExpression	aop . addr + aop . size		897861	1		+			
ANR	898323	MemberAccess	aop . addr		897861	0					
ANR	898324	Identifier	aop		897861	0					
ANR	898325	Identifier	addr		897861	1					
ANR	898326	MemberAccess	aop . size		897861	1					
ANR	898327	Identifier	aop		897861	0					
ANR	898328	Identifier	size		897861	1					
ANR	898329	IfStatement	if ( addr_in_range || shallow_trace )		897861	2					
ANR	898330	Condition	addr_in_range || shallow_trace	3759:8:107782:107811	897861	0	True				
ANR	898331	OrExpression	addr_in_range || shallow_trace		897861	0		||			
ANR	898332	Identifier	addr_in_range		897861	0					
ANR	898333	Identifier	shallow_trace		897861	1					
ANR	898334	CompoundStatement		87:40:2297:2297	897861	1					
ANR	898335	ExpressionStatement	"cur = add_trace_tree_child ( tracenodes , tr , cur , addr )"	3760:5:107821:107875	897861	0	True				
ANR	898336	AssignmentExpression	"cur = add_trace_tree_child ( tracenodes , tr , cur , addr )"		897861	0		=			
ANR	898337	Identifier	cur		897861	0					
ANR	898338	CallExpression	"add_trace_tree_child ( tracenodes , tr , cur , addr )"		897861	1					
ANR	898339	Callee	add_trace_tree_child		897861	0					
ANR	898340	Identifier	add_trace_tree_child		897861	0					
ANR	898341	ArgumentList	tracenodes		897861	1					
ANR	898342	Argument	tracenodes		897861	0					
ANR	898343	Identifier	tracenodes		897861	0					
ANR	898344	Argument	tr		897861	1					
ANR	898345	Identifier	tr		897861	0					
ANR	898346	Argument	cur		897861	2					
ANR	898347	Identifier	cur		897861	0					
ANR	898348	Argument	addr		897861	3					
ANR	898349	Identifier	addr		897861	0					
ANR	898350	IfStatement	if ( debug_to != UT64_MAX )		897861	1					
ANR	898351	Condition	debug_to != UT64_MAX	3761:9:107886:107905	897861	0	True				
ANR	898352	EqualityExpression	debug_to != UT64_MAX		897861	0		!=			
ANR	898353	Identifier	debug_to		897861	0					
ANR	898354	Identifier	UT64_MAX		897861	1					
ANR	898355	CompoundStatement		89:31:2391:2391	897861	1					
ANR	898356	ExpressionStatement	cur = cur -> parent	3762:6:107916:107933	897861	0	True				
ANR	898357	AssignmentExpression	cur = cur -> parent		897861	0		=			
ANR	898358	Identifier	cur		897861	0					
ANR	898359	PtrMemberAccess	cur -> parent		897861	1					
ANR	898360	Identifier	cur		897861	0					
ANR	898361	Identifier	parent		897861	1					
ANR	898362	BreakStatement	break ;	3765:4:107952:107957	897861	3	True				
ANR	898363	Label	case R_ANAL_OP_TYPE_RET :	3767:2:107966:107989	897861	7	True				
ANR	898364	Identifier	R_ANAL_OP_TYPE_RET		897861	0					
ANR	898365	ExpressionStatement	"r_debug_step ( dbg , 1 )"	3770:3:108085:108106	897861	8	True				
ANR	898366	CallExpression	"r_debug_step ( dbg , 1 )"		897861	0					
ANR	898367	Callee	r_debug_step		897861	0					
ANR	898368	Identifier	r_debug_step		897861	0					
ANR	898369	ArgumentList	dbg		897861	1					
ANR	898370	Argument	dbg		897861	0					
ANR	898371	Identifier	dbg		897861	0					
ANR	898372	Argument	1		897861	1					
ANR	898373	PrimaryExpression	1		897861	0					
ANR	898374	ExpressionStatement	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	3771:3:108111:108156	897861	9	True				
ANR	898375	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		897861	0					
ANR	898376	Callee	r_debug_reg_sync		897861	0					
ANR	898377	Identifier	r_debug_reg_sync		897861	0					
ANR	898378	ArgumentList	dbg		897861	1					
ANR	898379	Argument	dbg		897861	0					
ANR	898380	Identifier	dbg		897861	0					
ANR	898381	Argument	R_REG_TYPE_GPR		897861	1					
ANR	898382	Identifier	R_REG_TYPE_GPR		897861	0					
ANR	898383	Argument	false		897861	2					
ANR	898384	Identifier	false		897861	0					
ANR	898385	ExpressionStatement	"addr = r_debug_reg_get ( dbg , ""PC"" )"	3772:3:108161:108195	897861	10	True				
ANR	898386	AssignmentExpression	"addr = r_debug_reg_get ( dbg , ""PC"" )"		897861	0		=			
ANR	898387	Identifier	addr		897861	0					
ANR	898388	CallExpression	"r_debug_reg_get ( dbg , ""PC"" )"		897861	1					
ANR	898389	Callee	r_debug_reg_get		897861	0					
ANR	898390	Identifier	r_debug_reg_get		897861	0					
ANR	898391	ArgumentList	dbg		897861	1					
ANR	898392	Argument	dbg		897861	0					
ANR	898393	Identifier	dbg		897861	0					
ANR	898394	Argument	"""PC"""		897861	1					
ANR	898395	PrimaryExpression	"""PC"""		897861	0					
ANR	898396	IfStatement	if ( cur != tr -> root )		897861	11					
ANR	898397	Condition	cur != tr -> root	3776:7:108335:108349	897861	0	True				
ANR	898398	EqualityExpression	cur != tr -> root		897861	0		!=			
ANR	898399	Identifier	cur		897861	0					
ANR	898400	PtrMemberAccess	tr -> root		897861	1					
ANR	898401	Identifier	tr		897861	0					
ANR	898402	Identifier	root		897861	1					
ANR	898403	CompoundStatement		104:24:2835:2835	897861	1					
ANR	898404	ExpressionStatement	cur = cur -> parent	3777:4:108358:108375	897861	0	True				
ANR	898405	AssignmentExpression	cur = cur -> parent		897861	0		=			
ANR	898406	Identifier	cur		897861	0					
ANR	898407	PtrMemberAccess	cur -> parent		897861	1					
ANR	898408	Identifier	cur		897861	0					
ANR	898409	Identifier	parent		897861	1					
ANR	898410	IfStatement	if ( addr != gn -> addr )		897861	12					
ANR	898411	Condition	addr != gn -> addr	3780:7:108395:108410	897861	0	True				
ANR	898412	EqualityExpression	addr != gn -> addr		897861	0		!=			
ANR	898413	Identifier	addr		897861	0					
ANR	898414	PtrMemberAccess	gn -> addr		897861	1					
ANR	898415	Identifier	gn		897861	0					
ANR	898416	Identifier	addr		897861	1					
ANR	898417	CompoundStatement		108:25:2896:2896	897861	1					
ANR	898418	Statement	eprintf	3781:4:108419:108425	897861	0	True				
ANR	898419	Statement	(	3781:12:108427:108427	897861	1	True				
ANR	898420	Statement	"""Oops. invalid return address 0x%08"""	3781:13:108428:108463	897861	2	True				
ANR	898421	Statement	PFMT64x	3781:49:108464:108470	897861	3	True				
ANR	898422	Statement	"""\\n0x%08"""	3782:6:108478:108486	897861	4	True				
ANR	898423	Statement	PFMT64x	3782:15:108487:108493	897861	5	True				
ANR	898424	Statement	"""\\n"""	3782:22:108494:108497	897861	6	True				
ANR	898425	Statement	","	3782:26:108498:108498	897861	7	True				
ANR	898426	Statement	addr	3782:28:108500:108503	897861	8	True				
ANR	898427	Statement	","	3782:32:108504:108504	897861	9	True				
ANR	898428	Statement	gn	3782:34:108506:108507	897861	10	True				
ANR	898429	Statement	->	3782:36:108508:108509	897861	11	True				
ANR	898430	Statement	addr	3782:38:108510:108513	897861	12	True				
ANR	898431	Statement	)	3782:42:108514:108514	897861	13	True				
ANR	898432	ExpressionStatement		3782:43:108515:108515	897861	14	True				
ANR	898433	BreakStatement	break ;	3785:3:108532:108537	897861	13	True				
ANR	898434	ReturnType	static void		897861	1					
ANR	898435	Identifier	do_debug_trace_calls		897861	2					
ANR	898436	ParameterList	"RCore * core , ut64 from , ut64 to , ut64 final_addr"		897861	3					
ANR	898437	Parameter	RCore * core	3673:33:105466:105476	897861	0	True				
ANR	898438	ParameterType	RCore *		897861	0					
ANR	898439	Identifier	core		897861	1					
ANR	898440	Parameter	ut64 from	3673:46:105479:105487	897861	1	True				
ANR	898441	ParameterType	ut64		897861	0					
ANR	898442	Identifier	from		897861	1					
ANR	898443	Parameter	ut64 to	3673:57:105490:105496	897861	2	True				
ANR	898444	ParameterType	ut64		897861	0					
ANR	898445	Identifier	to		897861	1					
ANR	898446	Parameter	ut64 final_addr	3673:66:105499:105513	897861	3	True				
ANR	898447	ParameterType	ut64		897861	0					
ANR	898448	Identifier	final_addr		897861	1					
ANR	898449	CFGEntryNode	ENTRY		897861		True				
ANR	898450	CFGExitNode	EXIT		897861		True				
ANR	898451	Symbol	aop . jump		897861						
ANR	898452	Symbol	aop		897861						
ANR	898453	Symbol	core -> dbg -> tracenodes		897861						
ANR	898454	Symbol	r_debug_reg_get		897861						
ANR	898455	Symbol	gn -> addr		897861						
ANR	898456	Symbol	aop . type		897861						
ANR	898457	Symbol	* gn		897861						
ANR	898458	Symbol	* cur		897861						
ANR	898459	Symbol	from		897861						
ANR	898460	Symbol	final_addr		897861						
ANR	898461	Symbol	NULL		897861						
ANR	898462	Symbol	* tr		897861						
ANR	898463	Symbol	dbg		897861						
ANR	898464	Symbol	trace_libs		897861						
ANR	898465	Symbol	& aop		897861						
ANR	898466	Symbol	core		897861						
ANR	898467	Symbol	r_debug_continue_until		897861						
ANR	898468	Symbol	r_config_get_i		897861						
ANR	898469	Symbol	bounds		897861						
ANR	898470	Symbol	true		897861						
ANR	898471	Symbol	tracenodes		897861						
ANR	898472	Symbol	aop . addr		897861						
ANR	898473	Symbol	* core -> dbg		897861						
ANR	898474	Symbol	shallow_trace		897861						
ANR	898475	Symbol	debug_to		897861						
ANR	898476	Symbol	cur		897861						
ANR	898477	Symbol	r_debug_reg_sync		897861						
ANR	898478	Symbol	* core		897861						
ANR	898479	Symbol	core -> anal		897861						
ANR	898480	Symbol	R_ANAL_OP_MASK_BASIC		897861						
ANR	898481	Symbol	r_cons_is_breaked		897861						
ANR	898482	Symbol	aop . size		897861						
ANR	898483	Symbol	core -> io		897861						
ANR	898484	Symbol	add_trace_tree_child		897861						
ANR	898485	Symbol	UT64_MAX		897861						
ANR	898486	Symbol	addr		897861						
ANR	898487	Symbol	* * core		897861						
ANR	898488	Symbol	R_REG_TYPE_GPR		897861						
ANR	898489	Symbol	core -> config		897861						
ANR	898490	Symbol	called_in_range		897861						
ANR	898491	Symbol	addr_in_range		897861						
ANR	898492	Symbol	core -> dbg -> tree		897861						
ANR	898493	Symbol	gn		897861						
ANR	898494	Symbol	false		897861						
ANR	898495	Symbol	tr -> root		897861						
ANR	898496	Symbol	n		897861						
ANR	898497	Symbol	r_debug_step		897861						
ANR	898498	Symbol	buf		897861						
ANR	898499	Symbol	r_debug_is_dead		897861						
ANR	898500	Symbol	called_addr		897861						
ANR	898501	Symbol	to		897861						
ANR	898502	Symbol	r_core_get_boundaries_prot		897861						
ANR	898503	Symbol	cur -> parent		897861						
ANR	898504	Symbol	tr		897861						
ANR	898505	Symbol	core -> dbg		897861						
ANR	898506	Function	debug_trace_calls	3790:0:108549:109858							
ANR	898507	FunctionDef	"debug_trace_calls (RCore * core , const char * input)"		898506	0					
ANR	898508	CompoundStatement		3790:62:108611:109858	898506	0					
ANR	898509	IdentifierDeclStatement	RBreakpointItem * bp_final = NULL ;	3791:1:108614:108646	898506	0	True				
ANR	898510	IdentifierDecl	* bp_final = NULL		898506	0					
ANR	898511	IdentifierDeclType	RBreakpointItem *		898506	0					
ANR	898512	Identifier	bp_final		898506	1					
ANR	898513	AssignmentExpression	* bp_final = NULL		898506	2		=			
ANR	898514	Identifier	NULL		898506	0					
ANR	898515	Identifier	NULL		898506	1					
ANR	898516	IdentifierDeclStatement	int t = core -> dbg -> trace -> enabled ;	3792:1:108649:108682	898506	1	True				
ANR	898517	IdentifierDecl	t = core -> dbg -> trace -> enabled		898506	0					
ANR	898518	IdentifierDeclType	int		898506	0					
ANR	898519	Identifier	t		898506	1					
ANR	898520	AssignmentExpression	t = core -> dbg -> trace -> enabled		898506	2		=			
ANR	898521	Identifier	t		898506	0					
ANR	898522	PtrMemberAccess	core -> dbg -> trace -> enabled		898506	1					
ANR	898523	PtrMemberAccess	core -> dbg -> trace		898506	0					
ANR	898524	PtrMemberAccess	core -> dbg		898506	0					
ANR	898525	Identifier	core		898506	0					
ANR	898526	Identifier	dbg		898506	1					
ANR	898527	Identifier	trace		898506	1					
ANR	898528	Identifier	enabled		898506	1					
ANR	898529	IdentifierDeclStatement	"ut64 from = 0 , to = UT64_MAX , final_addr = UT64_MAX ;"	3793:1:108685:108736	898506	2	True				
ANR	898530	IdentifierDecl	from = 0		898506	0					
ANR	898531	IdentifierDeclType	ut64		898506	0					
ANR	898532	Identifier	from		898506	1					
ANR	898533	AssignmentExpression	from = 0		898506	2		=			
ANR	898534	Identifier	from		898506	0					
ANR	898535	PrimaryExpression	0		898506	1					
ANR	898536	IdentifierDecl	to = UT64_MAX		898506	1					
ANR	898537	IdentifierDeclType	ut64		898506	0					
ANR	898538	Identifier	to		898506	1					
ANR	898539	AssignmentExpression	to = UT64_MAX		898506	2		=			
ANR	898540	Identifier	UT64_MAX		898506	0					
ANR	898541	Identifier	UT64_MAX		898506	1					
ANR	898542	IdentifierDecl	final_addr = UT64_MAX		898506	2					
ANR	898543	IdentifierDeclType	ut64		898506	0					
ANR	898544	Identifier	final_addr		898506	1					
ANR	898545	AssignmentExpression	final_addr = UT64_MAX		898506	2		=			
ANR	898546	Identifier	UT64_MAX		898506	0					
ANR	898547	Identifier	UT64_MAX		898506	1					
ANR	898548	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		898506	3					
ANR	898549	Condition	r_debug_is_dead ( core -> dbg )	3795:5:108744:108770	898506	0	True				
ANR	898550	CallExpression	r_debug_is_dead ( core -> dbg )		898506	0					
ANR	898551	Callee	r_debug_is_dead		898506	0					
ANR	898552	Identifier	r_debug_is_dead		898506	0					
ANR	898553	ArgumentList	core -> dbg		898506	1					
ANR	898554	Argument	core -> dbg		898506	0					
ANR	898555	PtrMemberAccess	core -> dbg		898506	0					
ANR	898556	Identifier	core		898506	0					
ANR	898557	Identifier	dbg		898506	1					
ANR	898558	CompoundStatement		6:34:161:161	898506	1					
ANR	898559	ExpressionStatement	"eprintf ( ""No process to debug."" )"	3796:2:108777:108809	898506	0	True				
ANR	898560	CallExpression	"eprintf ( ""No process to debug."" )"		898506	0					
ANR	898561	Callee	eprintf		898506	0					
ANR	898562	Identifier	eprintf		898506	0					
ANR	898563	ArgumentList	"""No process to debug."""		898506	1					
ANR	898564	Argument	"""No process to debug."""		898506	0					
ANR	898565	PrimaryExpression	"""No process to debug."""		898506	0					
ANR	898566	ReturnStatement	return ;	3797:2:108813:108819	898506	1	True				
ANR	898567	IfStatement	if ( * input == ' ' )		898506	4					
ANR	898568	Condition	* input == ' '	3799:5:108829:108841	898506	0	True				
ANR	898569	EqualityExpression	* input == ' '		898506	0		==			
ANR	898570	UnaryOperationExpression	* input		898506	0					
ANR	898571	UnaryOperator	*		898506	0					
ANR	898572	Identifier	input		898506	1					
ANR	898573	PrimaryExpression	' '		898506	1					
ANR	898574	CompoundStatement		12:2:269:313	898506	1					
ANR	898575	ExpressionStatement	input = r_str_trim_ro ( input )	3800:2:108848:108877	898506	0	True				
ANR	898576	AssignmentExpression	input = r_str_trim_ro ( input )		898506	0		=			
ANR	898577	Identifier	input		898506	0					
ANR	898578	CallExpression	r_str_trim_ro ( input )		898506	1					
ANR	898579	Callee	r_str_trim_ro		898506	0					
ANR	898580	Identifier	r_str_trim_ro		898506	0					
ANR	898581	ArgumentList	input		898506	1					
ANR	898582	Argument	input		898506	0					
ANR	898583	Identifier	input		898506	0					
ANR	898584	IdentifierDeclStatement	"ut64 first_n = r_num_math ( core -> num , input ) ;"	3801:2:108881:108925	898506	1	True				
ANR	898585	IdentifierDecl	"first_n = r_num_math ( core -> num , input )"		898506	0					
ANR	898586	IdentifierDeclType	ut64		898506	0					
ANR	898587	Identifier	first_n		898506	1					
ANR	898588	AssignmentExpression	"first_n = r_num_math ( core -> num , input )"		898506	2		=			
ANR	898589	Identifier	first_n		898506	0					
ANR	898590	CallExpression	"r_num_math ( core -> num , input )"		898506	1					
ANR	898591	Callee	r_num_math		898506	0					
ANR	898592	Identifier	r_num_math		898506	0					
ANR	898593	ArgumentList	core -> num		898506	1					
ANR	898594	Argument	core -> num		898506	0					
ANR	898595	PtrMemberAccess	core -> num		898506	0					
ANR	898596	Identifier	core		898506	0					
ANR	898597	Identifier	num		898506	1					
ANR	898598	Argument	input		898506	1					
ANR	898599	Identifier	input		898506	0					
ANR	898600	ExpressionStatement	"input = strchr ( input , ' ' )"	3802:2:108929:108956	898506	2	True				
ANR	898601	AssignmentExpression	"input = strchr ( input , ' ' )"		898506	0		=			
ANR	898602	Identifier	input		898506	0					
ANR	898603	CallExpression	"strchr ( input , ' ' )"		898506	1					
ANR	898604	Callee	strchr		898506	0					
ANR	898605	Identifier	strchr		898506	0					
ANR	898606	ArgumentList	input		898506	1					
ANR	898607	Argument	input		898506	0					
ANR	898608	Identifier	input		898506	0					
ANR	898609	Argument	' '		898506	1					
ANR	898610	PrimaryExpression	' '		898506	0					
ANR	898611	IfStatement	if ( input )		898506	3					
ANR	898612	Condition	input	3803:6:108964:108968	898506	0	True				
ANR	898613	Identifier	input		898506	0					
ANR	898614	CompoundStatement		14:13:359:359	898506	1					
ANR	898615	ExpressionStatement	input = r_str_trim_ro ( input )	3804:3:108976:109005	898506	0	True				
ANR	898616	AssignmentExpression	input = r_str_trim_ro ( input )		898506	0		=			
ANR	898617	Identifier	input		898506	0					
ANR	898618	CallExpression	r_str_trim_ro ( input )		898506	1					
ANR	898619	Callee	r_str_trim_ro		898506	0					
ANR	898620	Identifier	r_str_trim_ro		898506	0					
ANR	898621	ArgumentList	input		898506	1					
ANR	898622	Argument	input		898506	0					
ANR	898623	Identifier	input		898506	0					
ANR	898624	ExpressionStatement	from = first_n	3805:3:109010:109024	898506	1	True				
ANR	898625	AssignmentExpression	from = first_n		898506	0		=			
ANR	898626	Identifier	from		898506	0					
ANR	898627	Identifier	first_n		898506	1					
ANR	898628	ExpressionStatement	"to = r_num_math ( core -> num , input )"	3806:3:109029:109063	898506	2	True				
ANR	898629	AssignmentExpression	"to = r_num_math ( core -> num , input )"		898506	0		=			
ANR	898630	Identifier	to		898506	0					
ANR	898631	CallExpression	"r_num_math ( core -> num , input )"		898506	1					
ANR	898632	Callee	r_num_math		898506	0					
ANR	898633	Identifier	r_num_math		898506	0					
ANR	898634	ArgumentList	core -> num		898506	1					
ANR	898635	Argument	core -> num		898506	0					
ANR	898636	PtrMemberAccess	core -> num		898506	0					
ANR	898637	Identifier	core		898506	0					
ANR	898638	Identifier	num		898506	1					
ANR	898639	Argument	input		898506	1					
ANR	898640	Identifier	input		898506	0					
ANR	898641	ExpressionStatement	"input = strchr ( input , ' ' )"	3807:3:109068:109095	898506	3	True				
ANR	898642	AssignmentExpression	"input = strchr ( input , ' ' )"		898506	0		=			
ANR	898643	Identifier	input		898506	0					
ANR	898644	CallExpression	"strchr ( input , ' ' )"		898506	1					
ANR	898645	Callee	strchr		898506	0					
ANR	898646	Identifier	strchr		898506	0					
ANR	898647	ArgumentList	input		898506	1					
ANR	898648	Argument	input		898506	0					
ANR	898649	Identifier	input		898506	0					
ANR	898650	Argument	' '		898506	1					
ANR	898651	PrimaryExpression	' '		898506	0					
ANR	898652	IfStatement	if ( input )		898506	4					
ANR	898653	Condition	input	3808:7:109104:109108	898506	0	True				
ANR	898654	Identifier	input		898506	0					
ANR	898655	CompoundStatement		19:14:499:499	898506	1					
ANR	898656	ExpressionStatement	input = r_str_trim_ro ( input )	3809:4:109117:109146	898506	0	True				
ANR	898657	AssignmentExpression	input = r_str_trim_ro ( input )		898506	0		=			
ANR	898658	Identifier	input		898506	0					
ANR	898659	CallExpression	r_str_trim_ro ( input )		898506	1					
ANR	898660	Callee	r_str_trim_ro		898506	0					
ANR	898661	Identifier	r_str_trim_ro		898506	0					
ANR	898662	ArgumentList	input		898506	1					
ANR	898663	Argument	input		898506	0					
ANR	898664	Identifier	input		898506	0					
ANR	898665	ExpressionStatement	"final_addr = r_num_math ( core -> num , input )"	3810:4:109152:109194	898506	1	True				
ANR	898666	AssignmentExpression	"final_addr = r_num_math ( core -> num , input )"		898506	0		=			
ANR	898667	Identifier	final_addr		898506	0					
ANR	898668	CallExpression	"r_num_math ( core -> num , input )"		898506	1					
ANR	898669	Callee	r_num_math		898506	0					
ANR	898670	Identifier	r_num_math		898506	0					
ANR	898671	ArgumentList	core -> num		898506	1					
ANR	898672	Argument	core -> num		898506	0					
ANR	898673	PtrMemberAccess	core -> num		898506	0					
ANR	898674	Identifier	core		898506	0					
ANR	898675	Identifier	num		898506	1					
ANR	898676	Argument	input		898506	1					
ANR	898677	Identifier	input		898506	0					
ANR	898678	ElseStatement	else		898506	0					
ANR	898679	CompoundStatement		23:9:598:598	898506	0					
ANR	898680	ExpressionStatement	final_addr = first_n	3813:3:109215:109235	898506	0	True				
ANR	898681	AssignmentExpression	final_addr = first_n		898506	0		=			
ANR	898682	Identifier	final_addr		898506	0					
ANR	898683	Identifier	first_n		898506	1					
ANR	898684	ExpressionStatement	core -> dbg -> trace -> enabled = 0	3816:1:109245:109274	898506	5	True				
ANR	898685	AssignmentExpression	core -> dbg -> trace -> enabled = 0		898506	0		=			
ANR	898686	PtrMemberAccess	core -> dbg -> trace -> enabled		898506	0					
ANR	898687	PtrMemberAccess	core -> dbg -> trace		898506	0					
ANR	898688	PtrMemberAccess	core -> dbg		898506	0					
ANR	898689	Identifier	core		898506	0					
ANR	898690	Identifier	dbg		898506	1					
ANR	898691	Identifier	trace		898506	1					
ANR	898692	Identifier	enabled		898506	1					
ANR	898693	PrimaryExpression	0		898506	1					
ANR	898694	ExpressionStatement	"r_cons_break_push ( static_debug_stop , core -> dbg )"	3817:1:109277:109325	898506	6	True				
ANR	898695	CallExpression	"r_cons_break_push ( static_debug_stop , core -> dbg )"		898506	0					
ANR	898696	Callee	r_cons_break_push		898506	0					
ANR	898697	Identifier	r_cons_break_push		898506	0					
ANR	898698	ArgumentList	static_debug_stop		898506	1					
ANR	898699	Argument	static_debug_stop		898506	0					
ANR	898700	Identifier	static_debug_stop		898506	0					
ANR	898701	Argument	core -> dbg		898506	1					
ANR	898702	PtrMemberAccess	core -> dbg		898506	0					
ANR	898703	Identifier	core		898506	0					
ANR	898704	Identifier	dbg		898506	1					
ANR	898705	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	3818:1:109328:109367	898506	7	True				
ANR	898706	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		898506	0					
ANR	898707	Callee	r_reg_arena_swap		898506	0					
ANR	898708	Identifier	r_reg_arena_swap		898506	0					
ANR	898709	ArgumentList	core -> dbg -> reg		898506	1					
ANR	898710	Argument	core -> dbg -> reg		898506	0					
ANR	898711	PtrMemberAccess	core -> dbg -> reg		898506	0					
ANR	898712	PtrMemberAccess	core -> dbg		898506	0					
ANR	898713	Identifier	core		898506	0					
ANR	898714	Identifier	dbg		898506	1					
ANR	898715	Identifier	reg		898506	1					
ANR	898716	Argument	true		898506	1					
ANR	898717	Identifier	true		898506	0					
ANR	898718	IfStatement	if ( final_addr != UT64_MAX )		898506	8					
ANR	898719	Condition	final_addr != UT64_MAX	3819:5:109374:109395	898506	0	True				
ANR	898720	EqualityExpression	final_addr != UT64_MAX		898506	0		!=			
ANR	898721	Identifier	final_addr		898506	0					
ANR	898722	Identifier	UT64_MAX		898506	1					
ANR	898723	CompoundStatement		31:2:790:842	898506	1					
ANR	898724	IdentifierDeclStatement	"int hwbp = r_config_get_i ( core -> config , ""dbg.hwbp"" ) ;"	3820:2:109402:109454	898506	0	True				
ANR	898725	IdentifierDecl	"hwbp = r_config_get_i ( core -> config , ""dbg.hwbp"" )"		898506	0					
ANR	898726	IdentifierDeclType	int		898506	0					
ANR	898727	Identifier	hwbp		898506	1					
ANR	898728	AssignmentExpression	"hwbp = r_config_get_i ( core -> config , ""dbg.hwbp"" )"		898506	2		=			
ANR	898729	Identifier	hwbp		898506	0					
ANR	898730	CallExpression	"r_config_get_i ( core -> config , ""dbg.hwbp"" )"		898506	1					
ANR	898731	Callee	r_config_get_i		898506	0					
ANR	898732	Identifier	r_config_get_i		898506	0					
ANR	898733	ArgumentList	core -> config		898506	1					
ANR	898734	Argument	core -> config		898506	0					
ANR	898735	PtrMemberAccess	core -> config		898506	0					
ANR	898736	Identifier	core		898506	0					
ANR	898737	Identifier	config		898506	1					
ANR	898738	Argument	"""dbg.hwbp"""		898506	1					
ANR	898739	PrimaryExpression	"""dbg.hwbp"""		898506	0					
ANR	898740	ExpressionStatement	"bp_final = r_debug_bp_add ( core -> dbg , final_addr , hwbp , false , 0 , NULL , 0 )"	3821:2:109458:109532	898506	1	True				
ANR	898741	AssignmentExpression	"bp_final = r_debug_bp_add ( core -> dbg , final_addr , hwbp , false , 0 , NULL , 0 )"		898506	0		=			
ANR	898742	Identifier	bp_final		898506	0					
ANR	898743	CallExpression	"r_debug_bp_add ( core -> dbg , final_addr , hwbp , false , 0 , NULL , 0 )"		898506	1					
ANR	898744	Callee	r_debug_bp_add		898506	0					
ANR	898745	Identifier	r_debug_bp_add		898506	0					
ANR	898746	ArgumentList	core -> dbg		898506	1					
ANR	898747	Argument	core -> dbg		898506	0					
ANR	898748	PtrMemberAccess	core -> dbg		898506	0					
ANR	898749	Identifier	core		898506	0					
ANR	898750	Identifier	dbg		898506	1					
ANR	898751	Argument	final_addr		898506	1					
ANR	898752	Identifier	final_addr		898506	0					
ANR	898753	Argument	hwbp		898506	2					
ANR	898754	Identifier	hwbp		898506	0					
ANR	898755	Argument	false		898506	3					
ANR	898756	Identifier	false		898506	0					
ANR	898757	Argument	0		898506	4					
ANR	898758	PrimaryExpression	0		898506	0					
ANR	898759	Argument	NULL		898506	5					
ANR	898760	Identifier	NULL		898506	0					
ANR	898761	Argument	0		898506	6					
ANR	898762	PrimaryExpression	0		898506	0					
ANR	898763	IfStatement	if ( ! bp_final )		898506	2					
ANR	898764	Condition	! bp_final	3822:6:109540:109548	898506	0	True				
ANR	898765	UnaryOperationExpression	! bp_final		898506	0					
ANR	898766	UnaryOperator	!		898506	0					
ANR	898767	Identifier	bp_final		898506	1					
ANR	898768	CompoundStatement		33:17:939:939	898506	1					
ANR	898769	Statement	eprintf	3823:3:109556:109562	898506	0	True				
ANR	898770	Statement	(	3823:11:109564:109564	898506	1	True				
ANR	898771	Statement	"""Cannot set breakpoint at final address (%"""	3823:12:109565:109607	898506	2	True				
ANR	898772	Statement	PFMT64x	3823:55:109608:109614	898506	3	True				
ANR	898773	Statement	""")\\n"""	3823:62:109615:109619	898506	4	True				
ANR	898774	Statement	","	3823:67:109620:109620	898506	5	True				
ANR	898775	Statement	final_addr	3823:69:109622:109631	898506	6	True				
ANR	898776	Statement	)	3823:79:109632:109632	898506	7	True				
ANR	898777	ExpressionStatement		3823:80:109633:109633	898506	8	True				
ANR	898778	ExpressionStatement	"do_debug_trace_calls ( core , from , to , final_addr )"	3826:1:109643:109692	898506	9	True				
ANR	898779	CallExpression	"do_debug_trace_calls ( core , from , to , final_addr )"		898506	0					
ANR	898780	Callee	do_debug_trace_calls		898506	0					
ANR	898781	Identifier	do_debug_trace_calls		898506	0					
ANR	898782	ArgumentList	core		898506	1					
ANR	898783	Argument	core		898506	0					
ANR	898784	Identifier	core		898506	0					
ANR	898785	Argument	from		898506	1					
ANR	898786	Identifier	from		898506	0					
ANR	898787	Argument	to		898506	2					
ANR	898788	Identifier	to		898506	0					
ANR	898789	Argument	final_addr		898506	3					
ANR	898790	Identifier	final_addr		898506	0					
ANR	898791	IfStatement	if ( bp_final )		898506	10					
ANR	898792	Condition	bp_final	3827:5:109699:109706	898506	0	True				
ANR	898793	Identifier	bp_final		898506	0					
ANR	898794	CompoundStatement		38:15:1097:1097	898506	1					
ANR	898795	ExpressionStatement	"r_bp_del ( core -> dbg -> bp , final_addr )"	3828:2:109713:109749	898506	0	True				
ANR	898796	CallExpression	"r_bp_del ( core -> dbg -> bp , final_addr )"		898506	0					
ANR	898797	Callee	r_bp_del		898506	0					
ANR	898798	Identifier	r_bp_del		898506	0					
ANR	898799	ArgumentList	core -> dbg -> bp		898506	1					
ANR	898800	Argument	core -> dbg -> bp		898506	0					
ANR	898801	PtrMemberAccess	core -> dbg -> bp		898506	0					
ANR	898802	PtrMemberAccess	core -> dbg		898506	0					
ANR	898803	Identifier	core		898506	0					
ANR	898804	Identifier	dbg		898506	1					
ANR	898805	Identifier	bp		898506	1					
ANR	898806	Argument	final_addr		898506	1					
ANR	898807	Identifier	final_addr		898506	0					
ANR	898808	ExpressionStatement	_core = core	3830:1:109755:109767	898506	11	True				
ANR	898809	AssignmentExpression	_core = core		898506	0		=			
ANR	898810	Identifier	_core		898506	0					
ANR	898811	Identifier	core		898506	1					
ANR	898812	ExpressionStatement	trace_traverse ( core -> dbg -> tree )	3831:1:109770:109802	898506	12	True				
ANR	898813	CallExpression	trace_traverse ( core -> dbg -> tree )		898506	0					
ANR	898814	Callee	trace_traverse		898506	0					
ANR	898815	Identifier	trace_traverse		898506	0					
ANR	898816	ArgumentList	core -> dbg -> tree		898506	1					
ANR	898817	Argument	core -> dbg -> tree		898506	0					
ANR	898818	PtrMemberAccess	core -> dbg -> tree		898506	0					
ANR	898819	PtrMemberAccess	core -> dbg		898506	0					
ANR	898820	Identifier	core		898506	0					
ANR	898821	Identifier	dbg		898506	1					
ANR	898822	Identifier	tree		898506	1					
ANR	898823	ExpressionStatement	core -> dbg -> trace -> enabled = t	3832:1:109805:109834	898506	13	True				
ANR	898824	AssignmentExpression	core -> dbg -> trace -> enabled = t		898506	0		=			
ANR	898825	PtrMemberAccess	core -> dbg -> trace -> enabled		898506	0					
ANR	898826	PtrMemberAccess	core -> dbg -> trace		898506	0					
ANR	898827	PtrMemberAccess	core -> dbg		898506	0					
ANR	898828	Identifier	core		898506	0					
ANR	898829	Identifier	dbg		898506	1					
ANR	898830	Identifier	trace		898506	1					
ANR	898831	Identifier	enabled		898506	1					
ANR	898832	Identifier	t		898506	1					
ANR	898833	ExpressionStatement	r_cons_break_pop ( )	3833:1:109837:109856	898506	14	True				
ANR	898834	CallExpression	r_cons_break_pop ( )		898506	0					
ANR	898835	Callee	r_cons_break_pop		898506	0					
ANR	898836	Identifier	r_cons_break_pop		898506	0					
ANR	898837	ArgumentList			898506	1					
ANR	898838	ReturnType	static void		898506	1					
ANR	898839	Identifier	debug_trace_calls		898506	2					
ANR	898840	ParameterList	"RCore * core , const char * input"		898506	3					
ANR	898841	Parameter	RCore * core	3790:30:108579:108589	898506	0	True				
ANR	898842	ParameterType	RCore *		898506	0					
ANR	898843	Identifier	core		898506	1					
ANR	898844	Parameter	const char * input	3790:43:108592:108608	898506	1	True				
ANR	898845	ParameterType	const char *		898506	0					
ANR	898846	Identifier	input		898506	1					
ANR	898847	CFGEntryNode	ENTRY		898506		True				
ANR	898848	CFGExitNode	EXIT		898506		True				
ANR	898849	Symbol	* core		898506						
ANR	898850	Symbol	* input		898506						
ANR	898851	Symbol	r_debug_bp_add		898506						
ANR	898852	Symbol	strchr		898506						
ANR	898853	Symbol	* core -> dbg -> trace		898506						
ANR	898854	Symbol	core -> dbg -> bp		898506						
ANR	898855	Symbol	r_num_math		898506						
ANR	898856	Symbol	core -> dbg -> trace		898506						
ANR	898857	Symbol	_core		898506						
ANR	898858	Symbol	from		898506						
ANR	898859	Symbol	UT64_MAX		898506						
ANR	898860	Symbol	final_addr		898506						
ANR	898861	Symbol	core -> num		898506						
ANR	898862	Symbol	bp_final		898506						
ANR	898863	Symbol	* * core		898506						
ANR	898864	Symbol	core -> config		898506						
ANR	898865	Symbol	NULL		898506						
ANR	898866	Symbol	core -> dbg -> tree		898506						
ANR	898867	Symbol	false		898506						
ANR	898868	Symbol	hwbp		898506						
ANR	898869	Symbol	core		898506						
ANR	898870	Symbol	input		898506						
ANR	898871	Symbol	* * * core		898506						
ANR	898872	Symbol	r_debug_is_dead		898506						
ANR	898873	Symbol	core -> dbg -> trace -> enabled		898506						
ANR	898874	Symbol	t		898506						
ANR	898875	Symbol	core -> dbg -> reg		898506						
ANR	898876	Symbol	static_debug_stop		898506						
ANR	898877	Symbol	r_config_get_i		898506						
ANR	898878	Symbol	r_str_trim_ro		898506						
ANR	898879	Symbol	true		898506						
ANR	898880	Symbol	to		898506						
ANR	898881	Symbol	first_n		898506						
ANR	898882	Symbol	* core -> dbg		898506						
ANR	898883	Symbol	core -> dbg		898506						
ANR	898884	Symbol	* * core -> dbg		898506						
ANR	898885	Function	r_core_debug_esil	3836:0:109861:112283							
ANR	898886	FunctionDef	"r_core_debug_esil (RCore * core , const char * input)"		898885	0					
ANR	898887	CompoundStatement		3836:63:109924:112283	898885	0					
ANR	898888	SwitchStatement	switch ( input [ 0 ] )		898885	0					
ANR	898889	Condition	input [ 0 ]	3837:9:109935:109942	898885	0	True				
ANR	898890	ArrayIndexing	input [ 0 ]		898885	0					
ANR	898891	Identifier	input		898885	0					
ANR	898892	PrimaryExpression	0		898885	1					
ANR	898893	CompoundStatement		2:19:20:20	898885	1					
ANR	898894	Label	case '\\0' :	3838:1:109948:109957	898885	0	True				
ANR	898895	ExpressionStatement	r_debug_esil_watch_list ( core -> dbg )	3840:2:109979:110014	898885	1	True				
ANR	898896	CallExpression	r_debug_esil_watch_list ( core -> dbg )		898885	0					
ANR	898897	Callee	r_debug_esil_watch_list		898885	0					
ANR	898898	Identifier	r_debug_esil_watch_list		898885	0					
ANR	898899	ArgumentList	core -> dbg		898885	1					
ANR	898900	Argument	core -> dbg		898885	0					
ANR	898901	PtrMemberAccess	core -> dbg		898885	0					
ANR	898902	Identifier	core		898885	0					
ANR	898903	Identifier	dbg		898885	1					
ANR	898904	BreakStatement	break ;	3841:2:110018:110023	898885	2	True				
ANR	898905	Label	case ' ' :	3842:1:110026:110034	898885	3	True				
ANR	898906	CompoundStatement		12:3:196:217	898885	4					
ANR	898907	IdentifierDeclStatement	char * line = strdup ( input + 1 ) ;	3844:3:110052:110083	898885	0	True				
ANR	898908	IdentifierDecl	* line = strdup ( input + 1 )		898885	0					
ANR	898909	IdentifierDeclType	char *		898885	0					
ANR	898910	Identifier	line		898885	1					
ANR	898911	AssignmentExpression	* line = strdup ( input + 1 )		898885	2		=			
ANR	898912	Identifier	line		898885	0					
ANR	898913	CallExpression	strdup ( input + 1 )		898885	1					
ANR	898914	Callee	strdup		898885	0					
ANR	898915	Identifier	strdup		898885	0					
ANR	898916	ArgumentList	input + 1		898885	1					
ANR	898917	Argument	input + 1		898885	0					
ANR	898918	AdditiveExpression	input + 1		898885	0		+			
ANR	898919	Identifier	input		898885	0					
ANR	898920	PrimaryExpression	1		898885	1					
ANR	898921	IdentifierDeclStatement	"char * p , * q ;"	3845:3:110088:110099	898885	1	True				
ANR	898922	IdentifierDecl	* p		898885	0					
ANR	898923	IdentifierDeclType	char *		898885	0					
ANR	898924	Identifier	p		898885	1					
ANR	898925	IdentifierDecl	* q		898885	1					
ANR	898926	IdentifierDeclType	char *		898885	0					
ANR	898927	Identifier	q		898885	1					
ANR	898928	IdentifierDeclStatement	int done = 0 ;	3846:3:110104:110116	898885	2	True				
ANR	898929	IdentifierDecl	done = 0		898885	0					
ANR	898930	IdentifierDeclType	int		898885	0					
ANR	898931	Identifier	done		898885	1					
ANR	898932	AssignmentExpression	done = 0		898885	2		=			
ANR	898933	Identifier	done		898885	0					
ANR	898934	PrimaryExpression	0		898885	1					
ANR	898935	IdentifierDeclStatement	"int perm = 0 , dev = 0 ;"	3847:3:110121:110142	898885	3	True				
ANR	898936	IdentifierDecl	perm = 0		898885	0					
ANR	898937	IdentifierDeclType	int		898885	0					
ANR	898938	Identifier	perm		898885	1					
ANR	898939	AssignmentExpression	perm = 0		898885	2		=			
ANR	898940	Identifier	perm		898885	0					
ANR	898941	PrimaryExpression	0		898885	1					
ANR	898942	IdentifierDecl	dev = 0		898885	1					
ANR	898943	IdentifierDeclType	int		898885	0					
ANR	898944	Identifier	dev		898885	1					
ANR	898945	AssignmentExpression	dev = 0		898885	2		=			
ANR	898946	Identifier	dev		898885	0					
ANR	898947	PrimaryExpression	0		898885	1					
ANR	898948	ExpressionStatement	"p = strchr ( line , ' ' )"	3848:3:110147:110169	898885	4	True				
ANR	898949	AssignmentExpression	"p = strchr ( line , ' ' )"		898885	0		=			
ANR	898950	Identifier	p		898885	0					
ANR	898951	CallExpression	"strchr ( line , ' ' )"		898885	1					
ANR	898952	Callee	strchr		898885	0					
ANR	898953	Identifier	strchr		898885	0					
ANR	898954	ArgumentList	line		898885	1					
ANR	898955	Argument	line		898885	0					
ANR	898956	Identifier	line		898885	0					
ANR	898957	Argument	' '		898885	1					
ANR	898958	PrimaryExpression	' '		898885	0					
ANR	898959	IfStatement	if ( p )		898885	5					
ANR	898960	Condition	p	3849:7:110178:110178	898885	0	True				
ANR	898961	Identifier	p		898885	0					
ANR	898962	CompoundStatement		14:10:256:256	898885	1					
ANR	898963	ExpressionStatement	* p ++ = 0	3850:4:110187:110195	898885	0	True				
ANR	898964	AssignmentExpression	* p ++ = 0		898885	0		=			
ANR	898965	UnaryOperationExpression	* p ++		898885	0					
ANR	898966	UnaryOperator	*		898885	0					
ANR	898967	PostIncDecOperationExpression	p ++		898885	1					
ANR	898968	Identifier	p		898885	0					
ANR	898969	IncDec	++		898885	1					
ANR	898970	PrimaryExpression	0		898885	1					
ANR	898971	IfStatement	"if ( strchr ( line , 'r' ) )"		898885	1					
ANR	898972	Condition	"strchr ( line , 'r' )"	3851:8:110205:110222	898885	0	True				
ANR	898973	CallExpression	"strchr ( line , 'r' )"		898885	0					
ANR	898974	Callee	strchr		898885	0					
ANR	898975	Identifier	strchr		898885	0					
ANR	898976	ArgumentList	line		898885	1					
ANR	898977	Argument	line		898885	0					
ANR	898978	Identifier	line		898885	0					
ANR	898979	Argument	'r'		898885	1					
ANR	898980	PrimaryExpression	'r'		898885	0					
ANR	898981	ExpressionStatement	perm |= R_PERM_R	3851:28:110225:110241	898885	1	True				
ANR	898982	AssignmentExpression	perm |= R_PERM_R		898885	0		|=			
ANR	898983	Identifier	perm		898885	0					
ANR	898984	Identifier	R_PERM_R		898885	1					
ANR	898985	IfStatement	"if ( strchr ( line , 'w' ) )"		898885	2					
ANR	898986	Condition	"strchr ( line , 'w' )"	3852:8:110251:110268	898885	0	True				
ANR	898987	CallExpression	"strchr ( line , 'w' )"		898885	0					
ANR	898988	Callee	strchr		898885	0					
ANR	898989	Identifier	strchr		898885	0					
ANR	898990	ArgumentList	line		898885	1					
ANR	898991	Argument	line		898885	0					
ANR	898992	Identifier	line		898885	0					
ANR	898993	Argument	'w'		898885	1					
ANR	898994	PrimaryExpression	'w'		898885	0					
ANR	898995	ExpressionStatement	perm |= R_PERM_W	3852:28:110271:110287	898885	1	True				
ANR	898996	AssignmentExpression	perm |= R_PERM_W		898885	0		|=			
ANR	898997	Identifier	perm		898885	0					
ANR	898998	Identifier	R_PERM_W		898885	1					
ANR	898999	IfStatement	"if ( strchr ( line , 'x' ) )"		898885	3					
ANR	899000	Condition	"strchr ( line , 'x' )"	3853:8:110297:110314	898885	0	True				
ANR	899001	CallExpression	"strchr ( line , 'x' )"		898885	0					
ANR	899002	Callee	strchr		898885	0					
ANR	899003	Identifier	strchr		898885	0					
ANR	899004	ArgumentList	line		898885	1					
ANR	899005	Argument	line		898885	0					
ANR	899006	Identifier	line		898885	0					
ANR	899007	Argument	'x'		898885	1					
ANR	899008	PrimaryExpression	'x'		898885	0					
ANR	899009	ExpressionStatement	perm |= R_PERM_X	3853:28:110317:110333	898885	1	True				
ANR	899010	AssignmentExpression	perm |= R_PERM_X		898885	0		|=			
ANR	899011	Identifier	perm		898885	0					
ANR	899012	Identifier	R_PERM_X		898885	1					
ANR	899013	ExpressionStatement	"q = strchr ( p , ' ' )"	3854:4:110339:110358	898885	4	True				
ANR	899014	AssignmentExpression	"q = strchr ( p , ' ' )"		898885	0		=			
ANR	899015	Identifier	q		898885	0					
ANR	899016	CallExpression	"strchr ( p , ' ' )"		898885	1					
ANR	899017	Callee	strchr		898885	0					
ANR	899018	Identifier	strchr		898885	0					
ANR	899019	ArgumentList	p		898885	1					
ANR	899020	Argument	p		898885	0					
ANR	899021	Identifier	p		898885	0					
ANR	899022	Argument	' '		898885	1					
ANR	899023	PrimaryExpression	' '		898885	0					
ANR	899024	IfStatement	if ( q )		898885	5					
ANR	899025	Condition	q	3855:8:110368:110368	898885	0	True				
ANR	899026	Identifier	q		898885	0					
ANR	899027	CompoundStatement		20:11:446:446	898885	1					
ANR	899028	ExpressionStatement	* q ++ = 0	3856:5:110378:110386	898885	0	True				
ANR	899029	AssignmentExpression	* q ++ = 0		898885	0		=			
ANR	899030	UnaryOperationExpression	* q ++		898885	0					
ANR	899031	UnaryOperator	*		898885	0					
ANR	899032	PostIncDecOperationExpression	q ++		898885	1					
ANR	899033	Identifier	q		898885	0					
ANR	899034	IncDec	++		898885	1					
ANR	899035	PrimaryExpression	0		898885	1					
ANR	899036	ExpressionStatement	dev = p [ 0 ]	3857:5:110393:110403	898885	1	True				
ANR	899037	AssignmentExpression	dev = p [ 0 ]		898885	0		=			
ANR	899038	Identifier	dev		898885	0					
ANR	899039	ArrayIndexing	p [ 0 ]		898885	1					
ANR	899040	Identifier	p		898885	0					
ANR	899041	PrimaryExpression	0		898885	1					
ANR	899042	IfStatement	if ( q )		898885	2					
ANR	899043	Condition	q	3858:9:110414:110414	898885	0	True				
ANR	899044	Identifier	q		898885	0					
ANR	899045	CompoundStatement		23:12:492:492	898885	1					
ANR	899046	ExpressionStatement	"r_debug_esil_watch ( core -> dbg , perm , dev , q )"	3859:6:110425:110469	898885	0	True				
ANR	899047	CallExpression	"r_debug_esil_watch ( core -> dbg , perm , dev , q )"		898885	0					
ANR	899048	Callee	r_debug_esil_watch		898885	0					
ANR	899049	Identifier	r_debug_esil_watch		898885	0					
ANR	899050	ArgumentList	core -> dbg		898885	1					
ANR	899051	Argument	core -> dbg		898885	0					
ANR	899052	PtrMemberAccess	core -> dbg		898885	0					
ANR	899053	Identifier	core		898885	0					
ANR	899054	Identifier	dbg		898885	1					
ANR	899055	Argument	perm		898885	1					
ANR	899056	Identifier	perm		898885	0					
ANR	899057	Argument	dev		898885	2					
ANR	899058	Identifier	dev		898885	0					
ANR	899059	Argument	q		898885	3					
ANR	899060	Identifier	q		898885	0					
ANR	899061	ExpressionStatement	done = 1	3860:6:110477:110485	898885	1	True				
ANR	899062	AssignmentExpression	done = 1		898885	0		=			
ANR	899063	Identifier	done		898885	0					
ANR	899064	PrimaryExpression	1		898885	1					
ANR	899065	IfStatement	if ( ! done )		898885	6					
ANR	899066	Condition	! done	3864:7:110512:110516	898885	0	True				
ANR	899067	UnaryOperationExpression	! done		898885	0					
ANR	899068	UnaryOperator	!		898885	0					
ANR	899069	Identifier	done		898885	1					
ANR	899070	CompoundStatement		30:4:600:694	898885	1					
ANR	899071	IdentifierDeclStatement	"const char * help_de_msg [ ] = { ""Usage:"" , ""de"" , "" [perm] [reg|mem] [expr]"" , NULL } ;"	3865:4:110525:110619	898885	0	True				
ANR	899072	IdentifierDecl	"* help_de_msg [ ] = { ""Usage:"" , ""de"" , "" [perm] [reg|mem] [expr]"" , NULL }"		898885	0					
ANR	899073	IdentifierDeclType	const char * [ ]		898885	0					
ANR	899074	Identifier	help_de_msg		898885	1					
ANR	899075	AssignmentExpression	"* help_de_msg [ ] = { ""Usage:"" , ""de"" , "" [perm] [reg|mem] [expr]"" , NULL }"		898885	2		=			
ANR	899076	Identifier	help_de_msg		898885	0					
ANR	899077	InitializerList	"""Usage:"""		898885	1					
ANR	899078	PrimaryExpression	"""Usage:"""		898885	0					
ANR	899079	PrimaryExpression	"""de"""		898885	1					
ANR	899080	PrimaryExpression	""" [perm] [reg|mem] [expr]"""		898885	2					
ANR	899081	Identifier	NULL		898885	3					
ANR	899082	ExpressionStatement	"r_core_cmd_help ( core , help_de_msg )"	3869:4:110625:110660	898885	1	True				
ANR	899083	CallExpression	"r_core_cmd_help ( core , help_de_msg )"		898885	0					
ANR	899084	Callee	r_core_cmd_help		898885	0					
ANR	899085	Identifier	r_core_cmd_help		898885	0					
ANR	899086	ArgumentList	core		898885	1					
ANR	899087	Argument	core		898885	0					
ANR	899088	Identifier	core		898885	0					
ANR	899089	Argument	help_de_msg		898885	1					
ANR	899090	Identifier	help_de_msg		898885	0					
ANR	899091	ExpressionStatement	free ( line )	3871:3:110670:110681	898885	7	True				
ANR	899092	CallExpression	free ( line )		898885	0					
ANR	899093	Callee	free		898885	0					
ANR	899094	Identifier	free		898885	0					
ANR	899095	ArgumentList	line		898885	1					
ANR	899096	Argument	line		898885	0					
ANR	899097	Identifier	line		898885	0					
ANR	899098	BreakStatement	break ;	3873:2:110689:110694	898885	5	True				
ANR	899099	Label	case '-' :	3874:1:110697:110705	898885	6	True				
ANR	899100	ExpressionStatement	r_debug_esil_watch_reset ( core -> dbg )	3875:2:110718:110754	898885	7	True				
ANR	899101	CallExpression	r_debug_esil_watch_reset ( core -> dbg )		898885	0					
ANR	899102	Callee	r_debug_esil_watch_reset		898885	0					
ANR	899103	Identifier	r_debug_esil_watch_reset		898885	0					
ANR	899104	ArgumentList	core -> dbg		898885	1					
ANR	899105	Argument	core -> dbg		898885	0					
ANR	899106	PtrMemberAccess	core -> dbg		898885	0					
ANR	899107	Identifier	core		898885	0					
ANR	899108	Identifier	dbg		898885	1					
ANR	899109	BreakStatement	break ;	3876:2:110758:110763	898885	8	True				
ANR	899110	Label	case 'c' :	3877:1:110766:110774	898885	9	True				
ANR	899111	IfStatement	if ( r_debug_esil_watch_empty ( core -> dbg ) )		898885	10					
ANR	899112	Condition	r_debug_esil_watch_empty ( core -> dbg )	3878:6:110791:110826	898885	0	True				
ANR	899113	CallExpression	r_debug_esil_watch_empty ( core -> dbg )		898885	0					
ANR	899114	Callee	r_debug_esil_watch_empty		898885	0					
ANR	899115	Identifier	r_debug_esil_watch_empty		898885	0					
ANR	899116	ArgumentList	core -> dbg		898885	1					
ANR	899117	Argument	core -> dbg		898885	0					
ANR	899118	PtrMemberAccess	core -> dbg		898885	0					
ANR	899119	Identifier	core		898885	0					
ANR	899120	Identifier	dbg		898885	1					
ANR	899121	CompoundStatement		43:44:904:904	898885	1					
ANR	899122	ExpressionStatement	"eprintf ( ""Error: no esil watchpoints defined\\n"" )"	3879:3:110834:110882	898885	0	True				
ANR	899123	CallExpression	"eprintf ( ""Error: no esil watchpoints defined\\n"" )"		898885	0					
ANR	899124	Callee	eprintf		898885	0					
ANR	899125	Identifier	eprintf		898885	0					
ANR	899126	ArgumentList	"""Error: no esil watchpoints defined\\n"""		898885	1					
ANR	899127	Argument	"""Error: no esil watchpoints defined\\n"""		898885	0					
ANR	899128	PrimaryExpression	"""Error: no esil watchpoints defined\\n"""		898885	0					
ANR	899129	ElseStatement	else		898885	0					
ANR	899130	CompoundStatement		45:9:968:968	898885	0					
ANR	899131	ExpressionStatement	"r_core_cmd0 ( core , ""aei"" )"	3881:3:110898:110923	898885	0	True				
ANR	899132	CallExpression	"r_core_cmd0 ( core , ""aei"" )"		898885	0					
ANR	899133	Callee	r_core_cmd0		898885	0					
ANR	899134	Identifier	r_core_cmd0		898885	0					
ANR	899135	ArgumentList	core		898885	1					
ANR	899136	Argument	core		898885	0					
ANR	899137	Identifier	core		898885	0					
ANR	899138	Argument	"""aei"""		898885	1					
ANR	899139	PrimaryExpression	"""aei"""		898885	0					
ANR	899140	ExpressionStatement	"r_debug_esil_prestep ( core -> dbg , r_config_get_i ( core -> config , ""esil.prestep"" ) )"	3882:3:110928:111007	898885	1	True				
ANR	899141	CallExpression	"r_debug_esil_prestep ( core -> dbg , r_config_get_i ( core -> config , ""esil.prestep"" ) )"		898885	0					
ANR	899142	Callee	r_debug_esil_prestep		898885	0					
ANR	899143	Identifier	r_debug_esil_prestep		898885	0					
ANR	899144	ArgumentList	core -> dbg		898885	1					
ANR	899145	Argument	core -> dbg		898885	0					
ANR	899146	PtrMemberAccess	core -> dbg		898885	0					
ANR	899147	Identifier	core		898885	0					
ANR	899148	Identifier	dbg		898885	1					
ANR	899149	Argument	"r_config_get_i ( core -> config , ""esil.prestep"" )"		898885	1					
ANR	899150	CallExpression	"r_config_get_i ( core -> config , ""esil.prestep"" )"		898885	0					
ANR	899151	Callee	r_config_get_i		898885	0					
ANR	899152	Identifier	r_config_get_i		898885	0					
ANR	899153	ArgumentList	core -> config		898885	1					
ANR	899154	Argument	core -> config		898885	0					
ANR	899155	PtrMemberAccess	core -> config		898885	0					
ANR	899156	Identifier	core		898885	0					
ANR	899157	Identifier	config		898885	1					
ANR	899158	Argument	"""esil.prestep"""		898885	1					
ANR	899159	PrimaryExpression	"""esil.prestep"""		898885	0					
ANR	899160	ExpressionStatement	r_debug_esil_continue ( core -> dbg )	3883:3:111012:111045	898885	2	True				
ANR	899161	CallExpression	r_debug_esil_continue ( core -> dbg )		898885	0					
ANR	899162	Callee	r_debug_esil_continue		898885	0					
ANR	899163	Identifier	r_debug_esil_continue		898885	0					
ANR	899164	ArgumentList	core -> dbg		898885	1					
ANR	899165	Argument	core -> dbg		898885	0					
ANR	899166	PtrMemberAccess	core -> dbg		898885	0					
ANR	899167	Identifier	core		898885	0					
ANR	899168	Identifier	dbg		898885	1					
ANR	899169	BreakStatement	break ;	3885:2:111053:111058	898885	11	True				
ANR	899170	Label	case 's' :	3886:1:111061:111069	898885	12	True				
ANR	899171	IfStatement	if ( input [ 1 ] == 'u' && input [ 2 ] == ' ' )		898885	13					
ANR	899172	Condition	input [ 1 ] == 'u' && input [ 2 ] == ' '	3887:6:111086:111119	898885	0	True				
ANR	899173	AndExpression	input [ 1 ] == 'u' && input [ 2 ] == ' '		898885	0		&&			
ANR	899174	EqualityExpression	input [ 1 ] == 'u'		898885	0		==			
ANR	899175	ArrayIndexing	input [ 1 ]		898885	0					
ANR	899176	Identifier	input		898885	0					
ANR	899177	PrimaryExpression	1		898885	1					
ANR	899178	PrimaryExpression	'u'		898885	1					
ANR	899179	EqualityExpression	input [ 2 ] == ' '		898885	1		==			
ANR	899180	ArrayIndexing	input [ 2 ]		898885	0					
ANR	899181	Identifier	input		898885	0					
ANR	899182	PrimaryExpression	2		898885	1					
ANR	899183	PrimaryExpression	' '		898885	1					
ANR	899184	CompoundStatement		53:3:1212:1269	898885	1					
ANR	899185	IdentifierDeclStatement	"ut64 addr , naddr , fin = r_num_math ( core -> num , input + 2 ) ;"	3888:3:111137:111194	898885	0	True				
ANR	899186	IdentifierDecl	addr		898885	0					
ANR	899187	IdentifierDeclType	ut64		898885	0					
ANR	899188	Identifier	addr		898885	1					
ANR	899189	IdentifierDecl	naddr		898885	1					
ANR	899190	IdentifierDeclType	ut64		898885	0					
ANR	899191	Identifier	naddr		898885	1					
ANR	899192	IdentifierDecl	"fin = r_num_math ( core -> num , input + 2 )"		898885	2					
ANR	899193	IdentifierDeclType	ut64		898885	0					
ANR	899194	Identifier	fin		898885	1					
ANR	899195	AssignmentExpression	"fin = r_num_math ( core -> num , input + 2 )"		898885	2		=			
ANR	899196	Identifier	fin		898885	0					
ANR	899197	CallExpression	"r_num_math ( core -> num , input + 2 )"		898885	1					
ANR	899198	Callee	r_num_math		898885	0					
ANR	899199	Identifier	r_num_math		898885	0					
ANR	899200	ArgumentList	core -> num		898885	1					
ANR	899201	Argument	core -> num		898885	0					
ANR	899202	PtrMemberAccess	core -> num		898885	0					
ANR	899203	Identifier	core		898885	0					
ANR	899204	Identifier	num		898885	1					
ANR	899205	Argument	input + 2		898885	1					
ANR	899206	AdditiveExpression	input + 2		898885	0		+			
ANR	899207	Identifier	input		898885	0					
ANR	899208	PrimaryExpression	2		898885	1					
ANR	899209	ExpressionStatement	"r_core_cmd0 ( core , ""aei"" )"	3889:3:111199:111224	898885	1	True				
ANR	899210	CallExpression	"r_core_cmd0 ( core , ""aei"" )"		898885	0					
ANR	899211	Callee	r_core_cmd0		898885	0					
ANR	899212	Identifier	r_core_cmd0		898885	0					
ANR	899213	ArgumentList	core		898885	1					
ANR	899214	Argument	core		898885	0					
ANR	899215	Identifier	core		898885	0					
ANR	899216	Argument	"""aei"""		898885	1					
ANR	899217	PrimaryExpression	"""aei"""		898885	0					
ANR	899218	ExpressionStatement	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"	3890:3:111229:111269	898885	2	True				
ANR	899219	AssignmentExpression	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"		898885	0		=			
ANR	899220	Identifier	addr		898885	0					
ANR	899221	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		898885	1					
ANR	899222	Callee	r_debug_reg_get		898885	0					
ANR	899223	Identifier	r_debug_reg_get		898885	0					
ANR	899224	ArgumentList	core -> dbg		898885	1					
ANR	899225	Argument	core -> dbg		898885	0					
ANR	899226	PtrMemberAccess	core -> dbg		898885	0					
ANR	899227	Identifier	core		898885	0					
ANR	899228	Identifier	dbg		898885	1					
ANR	899229	Argument	"""PC"""		898885	1					
ANR	899230	PrimaryExpression	"""PC"""		898885	0					
ANR	899231	WhileStatement	while ( addr != fin )		898885	3					
ANR	899232	Condition	addr != fin	3891:10:111281:111291	898885	0	True				
ANR	899233	EqualityExpression	addr != fin		898885	0		!=			
ANR	899234	Identifier	addr		898885	0					
ANR	899235	Identifier	fin		898885	1					
ANR	899236	CompoundStatement		56:23:1369:1369	898885	1					
ANR	899237	ExpressionStatement	"r_debug_esil_prestep ( core -> dbg , r_config_get_i ( core -> config , ""esil.prestep"" ) )"	3892:4:111300:111387	898885	0	True				
ANR	899238	CallExpression	"r_debug_esil_prestep ( core -> dbg , r_config_get_i ( core -> config , ""esil.prestep"" ) )"		898885	0					
ANR	899239	Callee	r_debug_esil_prestep		898885	0					
ANR	899240	Identifier	r_debug_esil_prestep		898885	0					
ANR	899241	ArgumentList	core -> dbg		898885	1					
ANR	899242	Argument	core -> dbg		898885	0					
ANR	899243	PtrMemberAccess	core -> dbg		898885	0					
ANR	899244	Identifier	core		898885	0					
ANR	899245	Identifier	dbg		898885	1					
ANR	899246	Argument	"r_config_get_i ( core -> config , ""esil.prestep"" )"		898885	1					
ANR	899247	CallExpression	"r_config_get_i ( core -> config , ""esil.prestep"" )"		898885	0					
ANR	899248	Callee	r_config_get_i		898885	0					
ANR	899249	Identifier	r_config_get_i		898885	0					
ANR	899250	ArgumentList	core -> config		898885	1					
ANR	899251	Argument	core -> config		898885	0					
ANR	899252	PtrMemberAccess	core -> config		898885	0					
ANR	899253	Identifier	core		898885	0					
ANR	899254	Identifier	config		898885	1					
ANR	899255	Argument	"""esil.prestep"""		898885	1					
ANR	899256	PrimaryExpression	"""esil.prestep"""		898885	0					
ANR	899257	ExpressionStatement	"r_debug_esil_step ( core -> dbg , 1 )"	3894:4:111393:111425	898885	1	True				
ANR	899258	CallExpression	"r_debug_esil_step ( core -> dbg , 1 )"		898885	0					
ANR	899259	Callee	r_debug_esil_step		898885	0					
ANR	899260	Identifier	r_debug_esil_step		898885	0					
ANR	899261	ArgumentList	core -> dbg		898885	1					
ANR	899262	Argument	core -> dbg		898885	0					
ANR	899263	PtrMemberAccess	core -> dbg		898885	0					
ANR	899264	Identifier	core		898885	0					
ANR	899265	Identifier	dbg		898885	1					
ANR	899266	Argument	1		898885	1					
ANR	899267	PrimaryExpression	1		898885	0					
ANR	899268	ExpressionStatement	"naddr = r_debug_reg_get ( core -> dbg , ""PC"" )"	3895:4:111431:111472	898885	2	True				
ANR	899269	AssignmentExpression	"naddr = r_debug_reg_get ( core -> dbg , ""PC"" )"		898885	0		=			
ANR	899270	Identifier	naddr		898885	0					
ANR	899271	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		898885	1					
ANR	899272	Callee	r_debug_reg_get		898885	0					
ANR	899273	Identifier	r_debug_reg_get		898885	0					
ANR	899274	ArgumentList	core -> dbg		898885	1					
ANR	899275	Argument	core -> dbg		898885	0					
ANR	899276	PtrMemberAccess	core -> dbg		898885	0					
ANR	899277	Identifier	core		898885	0					
ANR	899278	Identifier	dbg		898885	1					
ANR	899279	Argument	"""PC"""		898885	1					
ANR	899280	PrimaryExpression	"""PC"""		898885	0					
ANR	899281	IfStatement	if ( naddr == addr )		898885	3					
ANR	899282	Condition	naddr == addr	3896:8:111482:111494	898885	0	True				
ANR	899283	EqualityExpression	naddr == addr		898885	0		==			
ANR	899284	Identifier	naddr		898885	0					
ANR	899285	Identifier	addr		898885	1					
ANR	899286	CompoundStatement		61:23:1572:1572	898885	1					
ANR	899287	ExpressionStatement	"eprintf ( ""Detected loophole\\n"" )"	3897:5:111504:111535	898885	0	True				
ANR	899288	CallExpression	"eprintf ( ""Detected loophole\\n"" )"		898885	0					
ANR	899289	Callee	eprintf		898885	0					
ANR	899290	Identifier	eprintf		898885	0					
ANR	899291	ArgumentList	"""Detected loophole\\n"""		898885	1					
ANR	899292	Argument	"""Detected loophole\\n"""		898885	0					
ANR	899293	PrimaryExpression	"""Detected loophole\\n"""		898885	0					
ANR	899294	BreakStatement	break ;	3898:5:111542:111547	898885	1	True				
ANR	899295	ExpressionStatement	addr = naddr	3900:4:111559:111571	898885	4	True				
ANR	899296	AssignmentExpression	addr = naddr		898885	0		=			
ANR	899297	Identifier	addr		898885	0					
ANR	899298	Identifier	naddr		898885	1					
ANR	899299	ElseStatement	else		898885	0					
ANR	899300	IfStatement	if ( input [ 1 ] == '?' || ! input [ 1 ] )		898885	0					
ANR	899301	Condition	input [ 1 ] == '?' || ! input [ 1 ]	3902:13:111591:111618	898885	0	True				
ANR	899302	OrExpression	input [ 1 ] == '?' || ! input [ 1 ]		898885	0		||			
ANR	899303	EqualityExpression	input [ 1 ] == '?'		898885	0		==			
ANR	899304	ArrayIndexing	input [ 1 ]		898885	0					
ANR	899305	Identifier	input		898885	0					
ANR	899306	PrimaryExpression	1		898885	1					
ANR	899307	PrimaryExpression	'?'		898885	1					
ANR	899308	UnaryOperationExpression	! input [ 1 ]		898885	1					
ANR	899309	UnaryOperator	!		898885	0					
ANR	899310	ArrayIndexing	input [ 1 ]		898885	1					
ANR	899311	Identifier	input		898885	0					
ANR	899312	PrimaryExpression	1		898885	1					
ANR	899313	CompoundStatement		67:43:1696:1696	898885	1					
ANR	899314	ExpressionStatement	"r_core_cmd_help ( core , help_msg_des )"	3903:3:111626:111662	898885	0	True				
ANR	899315	CallExpression	"r_core_cmd_help ( core , help_msg_des )"		898885	0					
ANR	899316	Callee	r_core_cmd_help		898885	0					
ANR	899317	Identifier	r_core_cmd_help		898885	0					
ANR	899318	ArgumentList	core		898885	1					
ANR	899319	Argument	core		898885	0					
ANR	899320	Identifier	core		898885	0					
ANR	899321	Argument	help_msg_des		898885	1					
ANR	899322	Identifier	help_msg_des		898885	0					
ANR	899323	ElseStatement	else		898885	0					
ANR	899324	CompoundStatement		69:9:1748:1748	898885	0					
ANR	899325	ExpressionStatement	"r_core_cmd0 ( core , ""aei"" )"	3905:3:111678:111703	898885	0	True				
ANR	899326	CallExpression	"r_core_cmd0 ( core , ""aei"" )"		898885	0					
ANR	899327	Callee	r_core_cmd0		898885	0					
ANR	899328	Identifier	r_core_cmd0		898885	0					
ANR	899329	ArgumentList	core		898885	1					
ANR	899330	Argument	core		898885	0					
ANR	899331	Identifier	core		898885	0					
ANR	899332	Argument	"""aei"""		898885	1					
ANR	899333	PrimaryExpression	"""aei"""		898885	0					
ANR	899334	ExpressionStatement	"r_debug_esil_prestep ( core -> dbg , r_config_get_i ( core -> config , ""esil.prestep"" ) )"	3906:3:111708:111787	898885	1	True				
ANR	899335	CallExpression	"r_debug_esil_prestep ( core -> dbg , r_config_get_i ( core -> config , ""esil.prestep"" ) )"		898885	0					
ANR	899336	Callee	r_debug_esil_prestep		898885	0					
ANR	899337	Identifier	r_debug_esil_prestep		898885	0					
ANR	899338	ArgumentList	core -> dbg		898885	1					
ANR	899339	Argument	core -> dbg		898885	0					
ANR	899340	PtrMemberAccess	core -> dbg		898885	0					
ANR	899341	Identifier	core		898885	0					
ANR	899342	Identifier	dbg		898885	1					
ANR	899343	Argument	"r_config_get_i ( core -> config , ""esil.prestep"" )"		898885	1					
ANR	899344	CallExpression	"r_config_get_i ( core -> config , ""esil.prestep"" )"		898885	0					
ANR	899345	Callee	r_config_get_i		898885	0					
ANR	899346	Identifier	r_config_get_i		898885	0					
ANR	899347	ArgumentList	core -> config		898885	1					
ANR	899348	Argument	core -> config		898885	0					
ANR	899349	PtrMemberAccess	core -> config		898885	0					
ANR	899350	Identifier	core		898885	0					
ANR	899351	Identifier	config		898885	1					
ANR	899352	Argument	"""esil.prestep"""		898885	1					
ANR	899353	PrimaryExpression	"""esil.prestep"""		898885	0					
ANR	899354	ExpressionStatement	"r_debug_esil_step ( core -> dbg , r_num_math ( core -> num , input + 1 ) )"	3908:3:111807:111871	898885	2	True				
ANR	899355	CallExpression	"r_debug_esil_step ( core -> dbg , r_num_math ( core -> num , input + 1 ) )"		898885	0					
ANR	899356	Callee	r_debug_esil_step		898885	0					
ANR	899357	Identifier	r_debug_esil_step		898885	0					
ANR	899358	ArgumentList	core -> dbg		898885	1					
ANR	899359	Argument	core -> dbg		898885	0					
ANR	899360	PtrMemberAccess	core -> dbg		898885	0					
ANR	899361	Identifier	core		898885	0					
ANR	899362	Identifier	dbg		898885	1					
ANR	899363	Argument	"r_num_math ( core -> num , input + 1 )"		898885	1					
ANR	899364	CallExpression	"r_num_math ( core -> num , input + 1 )"		898885	0					
ANR	899365	Callee	r_num_math		898885	0					
ANR	899366	Identifier	r_num_math		898885	0					
ANR	899367	ArgumentList	core -> num		898885	1					
ANR	899368	Argument	core -> num		898885	0					
ANR	899369	PtrMemberAccess	core -> num		898885	0					
ANR	899370	Identifier	core		898885	0					
ANR	899371	Identifier	num		898885	1					
ANR	899372	Argument	input + 1		898885	1					
ANR	899373	AdditiveExpression	input + 1		898885	0		+			
ANR	899374	Identifier	input		898885	0					
ANR	899375	PrimaryExpression	1		898885	1					
ANR	899376	BreakStatement	break ;	3910:2:111879:111884	898885	14	True				
ANR	899377	Label	case '?' :	3911:1:111887:111895	898885	15	True				
ANR	899378	Label	default :	3912:1:111907:111914	898885	16	True				
ANR	899379	Identifier	default		898885	0					
ANR	899380	CompoundStatement		78:2:1993:1993	898885	17					
ANR	899381	ExpressionStatement	"r_core_cmd_help ( core , help_msg_de )"	3914:3:111923:111958	898885	0	True				
ANR	899382	CallExpression	"r_core_cmd_help ( core , help_msg_de )"		898885	0					
ANR	899383	Callee	r_core_cmd_help		898885	0					
ANR	899384	Identifier	r_core_cmd_help		898885	0					
ANR	899385	ArgumentList	core		898885	1					
ANR	899386	Argument	core		898885	0					
ANR	899387	Identifier	core		898885	0					
ANR	899388	Argument	help_msg_de		898885	1					
ANR	899389	Identifier	help_msg_de		898885	0					
ANR	899390	Statement	r_cons_printf	3916:3:112010:112022	898885	1	True				
ANR	899391	Statement	(	3916:17:112024:112024	898885	2	True				
ANR	899392	Statement	"""Examples:\\n"""	3916:18:112025:112037	898885	3	True				
ANR	899393	Statement	""" de r r rip       # stop when reads rip\\n"""	3917:5:112044:112086	898885	4	True				
ANR	899394	Statement	""" de rw m ADDR     # stop when read or write in ADDR\\n"""	3918:5:112093:112147	898885	5	True				
ANR	899395	Statement	""" de w r rdx       # stop when rdx register is modified\\n"""	3919:5:112154:112211	898885	6	True				
ANR	899396	Statement	""" de x m FROM..TO  # stop when rip in range\\n"""	3920:5:112218:112263	898885	7	True				
ANR	899397	Statement	)	3920:51:112264:112264	898885	8	True				
ANR	899398	ExpressionStatement		3920:52:112265:112265	898885	9	True				
ANR	899399	BreakStatement	break ;	3922:2:112273:112278	898885	18	True				
ANR	899400	ReturnType	static void		898885	1					
ANR	899401	Identifier	r_core_debug_esil		898885	2					
ANR	899402	ParameterList	"RCore * core , const char * input"		898885	3					
ANR	899403	Parameter	RCore * core	3836:31:109892:109902	898885	0	True				
ANR	899404	ParameterType	RCore *		898885	0					
ANR	899405	Identifier	core		898885	1					
ANR	899406	Parameter	const char * input	3836:44:109905:109921	898885	1	True				
ANR	899407	ParameterType	const char *		898885	0					
ANR	899408	Identifier	input		898885	1					
ANR	899409	CFGEntryNode	ENTRY		898885		True				
ANR	899410	CFGExitNode	EXIT		898885		True				
ANR	899411	Symbol	perm		898885						
ANR	899412	Symbol	help_msg_de		898885						
ANR	899413	Symbol	line		898885						
ANR	899414	Symbol	* q ++		898885						
ANR	899415	Symbol	r_debug_reg_get		898885						
ANR	899416	Symbol	* input		898885						
ANR	899417	Symbol	* core		898885						
ANR	899418	Symbol	strchr		898885						
ANR	899419	Symbol	fin		898885						
ANR	899420	Symbol	r_num_math		898885						
ANR	899421	Symbol	R_PERM_X		898885						
ANR	899422	Symbol	R_PERM_W		898885						
ANR	899423	Symbol	dev		898885						
ANR	899424	Symbol	help_de_msg		898885						
ANR	899425	Symbol	R_PERM_R		898885						
ANR	899426	Symbol	core -> num		898885						
ANR	899427	Symbol	addr		898885						
ANR	899428	Symbol	core -> config		898885						
ANR	899429	Symbol	NULL		898885						
ANR	899430	Symbol	naddr		898885						
ANR	899431	Symbol	* p ++		898885						
ANR	899432	Symbol	help_msg_des		898885						
ANR	899433	Symbol	done		898885						
ANR	899434	Symbol	r_debug_esil_watch_empty		898885						
ANR	899435	Symbol	p		898885						
ANR	899436	Symbol	core		898885						
ANR	899437	Symbol	input		898885						
ANR	899438	Symbol	q		898885						
ANR	899439	Symbol	r_config_get_i		898885						
ANR	899440	Symbol	* p		898885						
ANR	899441	Symbol	strdup		898885						
ANR	899442	Symbol	core -> dbg		898885						
ANR	899443	Function	r_core_debug_kill	3926:0:112286:114784							
ANR	899444	FunctionDef	"r_core_debug_kill (RCore * core , const char * input)"		899443	0					
ANR	899445	CompoundStatement		3926:63:112349:114784	899443	0					
ANR	899446	IfStatement	if ( ! input || * input == '?' )		899443	0					
ANR	899447	Condition	! input || * input == '?'	3927:5:112356:112376	899443	0	True				
ANR	899448	OrExpression	! input || * input == '?'		899443	0		||			
ANR	899449	UnaryOperationExpression	! input		899443	0					
ANR	899450	UnaryOperator	!		899443	0					
ANR	899451	Identifier	input		899443	1					
ANR	899452	EqualityExpression	* input == '?'		899443	1		==			
ANR	899453	UnaryOperationExpression	* input		899443	0					
ANR	899454	UnaryOperator	*		899443	0					
ANR	899455	Identifier	input		899443	1					
ANR	899456	PrimaryExpression	'?'		899443	1					
ANR	899457	CompoundStatement		2:28:29:29	899443	1					
ANR	899458	IfStatement	if ( input && input [ 1 ] )		899443	0					
ANR	899459	Condition	input && input [ 1 ]	3928:6:112387:112403	899443	0	True				
ANR	899460	AndExpression	input && input [ 1 ]		899443	0		&&			
ANR	899461	Identifier	input		899443	0					
ANR	899462	ArrayIndexing	input [ 1 ]		899443	1					
ANR	899463	Identifier	input		899443	0					
ANR	899464	PrimaryExpression	1		899443	1					
ANR	899465	CompoundStatement		5:3:103:126	899443	1					
ANR	899466	IdentifierDeclStatement	"const char * signame , * arg = input + 1 ;"	3929:3:112411:112448	899443	0	True				
ANR	899467	IdentifierDecl	* signame		899443	0					
ANR	899468	IdentifierDeclType	const char *		899443	0					
ANR	899469	Identifier	signame		899443	1					
ANR	899470	IdentifierDecl	* arg = input + 1		899443	1					
ANR	899471	IdentifierDeclType	const char *		899443	0					
ANR	899472	Identifier	arg		899443	1					
ANR	899473	AssignmentExpression	* arg = input + 1		899443	2		=			
ANR	899474	Identifier	arg		899443	0					
ANR	899475	AdditiveExpression	input + 1		899443	1		+			
ANR	899476	Identifier	input		899443	0					
ANR	899477	PrimaryExpression	1		899443	1					
ANR	899478	IdentifierDeclStatement	int signum = atoi ( arg ) ;	3930:3:112453:112476	899443	1	True				
ANR	899479	IdentifierDecl	signum = atoi ( arg )		899443	0					
ANR	899480	IdentifierDeclType	int		899443	0					
ANR	899481	Identifier	signum		899443	1					
ANR	899482	AssignmentExpression	signum = atoi ( arg )		899443	2		=			
ANR	899483	Identifier	signum		899443	0					
ANR	899484	CallExpression	atoi ( arg )		899443	1					
ANR	899485	Callee	atoi		899443	0					
ANR	899486	Identifier	atoi		899443	0					
ANR	899487	ArgumentList	arg		899443	1					
ANR	899488	Argument	arg		899443	0					
ANR	899489	Identifier	arg		899443	0					
ANR	899490	IfStatement	if ( signum > 0 )		899443	2					
ANR	899491	Condition	signum > 0	3931:7:112485:112494	899443	0	True				
ANR	899492	RelationalExpression	signum > 0		899443	0		>			
ANR	899493	Identifier	signum		899443	0					
ANR	899494	PrimaryExpression	0		899443	1					
ANR	899495	CompoundStatement		6:19:147:147	899443	1					
ANR	899496	ExpressionStatement	signame = r_signal_to_string ( signum )	3932:4:112503:112540	899443	0	True				
ANR	899497	AssignmentExpression	signame = r_signal_to_string ( signum )		899443	0		=			
ANR	899498	Identifier	signame		899443	0					
ANR	899499	CallExpression	r_signal_to_string ( signum )		899443	1					
ANR	899500	Callee	r_signal_to_string		899443	0					
ANR	899501	Identifier	r_signal_to_string		899443	0					
ANR	899502	ArgumentList	signum		899443	1					
ANR	899503	Argument	signum		899443	0					
ANR	899504	Identifier	signum		899443	0					
ANR	899505	IfStatement	if ( signame )		899443	1					
ANR	899506	Condition	signame	3933:8:112550:112556	899443	0	True				
ANR	899507	Identifier	signame		899443	0					
ANR	899508	ExpressionStatement	r_cons_println ( signame )	3934:5:112564:112588	899443	1	True				
ANR	899509	CallExpression	r_cons_println ( signame )		899443	0					
ANR	899510	Callee	r_cons_println		899443	0					
ANR	899511	Identifier	r_cons_println		899443	0					
ANR	899512	ArgumentList	signame		899443	1					
ANR	899513	Argument	signame		899443	0					
ANR	899514	Identifier	signame		899443	0					
ANR	899515	ElseStatement	else		899443	0					
ANR	899516	CompoundStatement		10:10:250:250	899443	0					
ANR	899517	ExpressionStatement	signum = r_signal_from_string ( arg )	3936:4:112606:112641	899443	0	True				
ANR	899518	AssignmentExpression	signum = r_signal_from_string ( arg )		899443	0		=			
ANR	899519	Identifier	signum		899443	0					
ANR	899520	CallExpression	r_signal_from_string ( arg )		899443	1					
ANR	899521	Callee	r_signal_from_string		899443	0					
ANR	899522	Identifier	r_signal_from_string		899443	0					
ANR	899523	ArgumentList	arg		899443	1					
ANR	899524	Argument	arg		899443	0					
ANR	899525	Identifier	arg		899443	0					
ANR	899526	IfStatement	if ( signum > 0 )		899443	1					
ANR	899527	Condition	signum > 0	3937:8:112651:112660	899443	0	True				
ANR	899528	RelationalExpression	signum > 0		899443	0		>			
ANR	899529	Identifier	signum		899443	0					
ANR	899530	PrimaryExpression	0		899443	1					
ANR	899531	CompoundStatement		12:20:313:313	899443	1					
ANR	899532	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , signum )"	3938:5:112670:112700	899443	0	True				
ANR	899533	CallExpression	"r_cons_printf ( ""%d\\n"" , signum )"		899443	0					
ANR	899534	Callee	r_cons_printf		899443	0					
ANR	899535	Identifier	r_cons_printf		899443	0					
ANR	899536	ArgumentList	"""%d\\n"""		899443	1					
ANR	899537	Argument	"""%d\\n"""		899443	0					
ANR	899538	PrimaryExpression	"""%d\\n"""		899443	0					
ANR	899539	Argument	signum		899443	1					
ANR	899540	Identifier	signum		899443	0					
ANR	899541	ElseStatement	else		899443	0					
ANR	899542	CompoundStatement		16:9:372:372	899443	0					
ANR	899543	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dk )"	3942:3:112727:112762	899443	0	True				
ANR	899544	CallExpression	"r_core_cmd_help ( core , help_msg_dk )"		899443	0					
ANR	899545	Callee	r_core_cmd_help		899443	0					
ANR	899546	Identifier	r_core_cmd_help		899443	0					
ANR	899547	ArgumentList	core		899443	1					
ANR	899548	Argument	core		899443	0					
ANR	899549	Identifier	core		899443	0					
ANR	899550	Argument	help_msg_dk		899443	1					
ANR	899551	Identifier	help_msg_dk		899443	0					
ANR	899552	ElseStatement	else		899443	0					
ANR	899553	IfStatement	if ( * input == 'o' )		899443	0					
ANR	899554	Condition	* input == 'o'	3944:12:112780:112790	899443	0	True				
ANR	899555	EqualityExpression	* input == 'o'		899443	0		==			
ANR	899556	UnaryOperationExpression	* input		899443	0					
ANR	899557	UnaryOperator	*		899443	0					
ANR	899558	Identifier	input		899443	1					
ANR	899559	PrimaryExpression	'o'		899443	1					
ANR	899560	CompoundStatement		19:25:443:443	899443	1					
ANR	899561	SwitchStatement	switch ( input [ 1 ] )		899443	0					
ANR	899562	Condition	input [ 1 ]	3945:10:112805:112812	899443	0	True				
ANR	899563	ArrayIndexing	input [ 1 ]		899443	0					
ANR	899564	Identifier	input		899443	0					
ANR	899565	PrimaryExpression	1		899443	1					
ANR	899566	CompoundStatement		20:20:465:465	899443	1					
ANR	899567	Label	case 0 :	3946:3:112820:112826	899443	0	True				
ANR	899568	ExpressionStatement	"r_debug_signal_list ( core -> dbg , 1 )"	3947:4:112866:112900	899443	1	True				
ANR	899569	CallExpression	"r_debug_signal_list ( core -> dbg , 1 )"		899443	0					
ANR	899570	Callee	r_debug_signal_list		899443	0					
ANR	899571	Identifier	r_debug_signal_list		899443	0					
ANR	899572	ArgumentList	core -> dbg		899443	1					
ANR	899573	Argument	core -> dbg		899443	0					
ANR	899574	PtrMemberAccess	core -> dbg		899443	0					
ANR	899575	Identifier	core		899443	0					
ANR	899576	Identifier	dbg		899443	1					
ANR	899577	Argument	1		899443	1					
ANR	899578	PrimaryExpression	1		899443	0					
ANR	899579	BreakStatement	break ;	3948:4:112906:112911	899443	2	True				
ANR	899580	Label	case ' ' :	3949:3:112916:112924	899443	3	True				
ANR	899581	IfStatement	if ( input [ 2 ] )		899443	4					
ANR	899582	Condition	input [ 2 ]	3950:8:112948:112955	899443	0	True				
ANR	899583	ArrayIndexing	input [ 2 ]		899443	0					
ANR	899584	Identifier	input		899443	0					
ANR	899585	PrimaryExpression	2		899443	1					
ANR	899586	CompoundStatement		27:5:657:681	899443	1					
ANR	899587	IdentifierDeclStatement	"char * p , * name = strdup ( input + 2 ) ;"	3951:5:112965:113000	899443	0	True				
ANR	899588	IdentifierDecl	* p		899443	0					
ANR	899589	IdentifierDeclType	char *		899443	0					
ANR	899590	Identifier	p		899443	1					
ANR	899591	IdentifierDecl	* name = strdup ( input + 2 )		899443	1					
ANR	899592	IdentifierDeclType	char *		899443	0					
ANR	899593	Identifier	name		899443	1					
ANR	899594	AssignmentExpression	* name = strdup ( input + 2 )		899443	2		=			
ANR	899595	Identifier	name		899443	0					
ANR	899596	CallExpression	strdup ( input + 2 )		899443	1					
ANR	899597	Callee	strdup		899443	0					
ANR	899598	Identifier	strdup		899443	0					
ANR	899599	ArgumentList	input + 2		899443	1					
ANR	899600	Argument	input + 2		899443	0					
ANR	899601	AdditiveExpression	input + 2		899443	0		+			
ANR	899602	Identifier	input		899443	0					
ANR	899603	PrimaryExpression	2		899443	1					
ANR	899604	IdentifierDeclStatement	int signum = atoi ( name ) ;	3952:5:113007:113031	899443	1	True				
ANR	899605	IdentifierDecl	signum = atoi ( name )		899443	0					
ANR	899606	IdentifierDeclType	int		899443	0					
ANR	899607	Identifier	signum		899443	1					
ANR	899608	AssignmentExpression	signum = atoi ( name )		899443	2		=			
ANR	899609	Identifier	signum		899443	0					
ANR	899610	CallExpression	atoi ( name )		899443	1					
ANR	899611	Callee	atoi		899443	0					
ANR	899612	Identifier	atoi		899443	0					
ANR	899613	ArgumentList	name		899443	1					
ANR	899614	Argument	name		899443	0					
ANR	899615	Identifier	name		899443	0					
ANR	899616	ExpressionStatement	"p = strchr ( name , ' ' )"	3953:5:113038:113060	899443	2	True				
ANR	899617	AssignmentExpression	"p = strchr ( name , ' ' )"		899443	0		=			
ANR	899618	Identifier	p		899443	0					
ANR	899619	CallExpression	"strchr ( name , ' ' )"		899443	1					
ANR	899620	Callee	strchr		899443	0					
ANR	899621	Identifier	strchr		899443	0					
ANR	899622	ArgumentList	name		899443	1					
ANR	899623	Argument	name		899443	0					
ANR	899624	Identifier	name		899443	0					
ANR	899625	Argument	' '		899443	1					
ANR	899626	PrimaryExpression	' '		899443	0					
ANR	899627	IfStatement	if ( p )		899443	3					
ANR	899628	Condition	p	3954:9:113071:113071	899443	0	True				
ANR	899629	Identifier	p		899443	0					
ANR	899630	ExpressionStatement	* p ++ = 0	3954:12:113074:113082	899443	1	True				
ANR	899631	AssignmentExpression	* p ++ = 0		899443	0		=			
ANR	899632	UnaryOperationExpression	* p ++		899443	0					
ANR	899633	UnaryOperator	*		899443	0					
ANR	899634	PostIncDecOperationExpression	p ++		899443	1					
ANR	899635	Identifier	p		899443	0					
ANR	899636	IncDec	++		899443	1					
ANR	899637	PrimaryExpression	0		899443	1					
ANR	899638	IfStatement	if ( signum < 1 )		899443	4					
ANR	899639	Condition	signum < 1	3959:9:113190:113197	899443	0	True				
ANR	899640	RelationalExpression	signum < 1		899443	0		<			
ANR	899641	Identifier	signum		899443	0					
ANR	899642	PrimaryExpression	1		899443	1					
ANR	899643	ExpressionStatement	signum = r_signal_from_string ( name )	3959:19:113200:113236	899443	1	True				
ANR	899644	AssignmentExpression	signum = r_signal_from_string ( name )		899443	0		=			
ANR	899645	Identifier	signum		899443	0					
ANR	899646	CallExpression	r_signal_from_string ( name )		899443	1					
ANR	899647	Callee	r_signal_from_string		899443	0					
ANR	899648	Identifier	r_signal_from_string		899443	0					
ANR	899649	ArgumentList	name		899443	1					
ANR	899650	Argument	name		899443	0					
ANR	899651	Identifier	name		899443	0					
ANR	899652	IfStatement	if ( signum > 0 )		899443	5					
ANR	899653	Condition	signum > 0	3960:9:113247:113254	899443	0	True				
ANR	899654	RelationalExpression	signum > 0		899443	0		>			
ANR	899655	Identifier	signum		899443	0					
ANR	899656	PrimaryExpression	0		899443	1					
ANR	899657	CompoundStatement		35:19:907:907	899443	1					
ANR	899658	IfStatement	if ( ! p || ! p [ 0 ] )		899443	0					
ANR	899659	Condition	! p || ! p [ 0 ]	3961:10:113269:113279	899443	0	True				
ANR	899660	OrExpression	! p || ! p [ 0 ]		899443	0		||			
ANR	899661	UnaryOperationExpression	! p		899443	0					
ANR	899662	UnaryOperator	!		899443	0					
ANR	899663	Identifier	p		899443	1					
ANR	899664	UnaryOperationExpression	! p [ 0 ]		899443	1					
ANR	899665	UnaryOperator	!		899443	0					
ANR	899666	ArrayIndexing	p [ 0 ]		899443	1					
ANR	899667	Identifier	p		899443	0					
ANR	899668	PrimaryExpression	0		899443	1					
ANR	899669	CompoundStatement		36:23:932:932	899443	1					
ANR	899670	ExpressionStatement	"r_debug_signal_setup ( core -> dbg , signum , 0 )"	3962:7:113311:113354	899443	0	True				
ANR	899671	CallExpression	"r_debug_signal_setup ( core -> dbg , signum , 0 )"		899443	0					
ANR	899672	Callee	r_debug_signal_setup		899443	0					
ANR	899673	Identifier	r_debug_signal_setup		899443	0					
ANR	899674	ArgumentList	core -> dbg		899443	1					
ANR	899675	Argument	core -> dbg		899443	0					
ANR	899676	PtrMemberAccess	core -> dbg		899443	0					
ANR	899677	Identifier	core		899443	0					
ANR	899678	Identifier	dbg		899443	1					
ANR	899679	Argument	signum		899443	1					
ANR	899680	Identifier	signum		899443	0					
ANR	899681	Argument	0		899443	2					
ANR	899682	PrimaryExpression	0		899443	0					
ANR	899683	ElseStatement	else		899443	0					
ANR	899684	IfStatement	if ( * p == 's' )		899443	0					
ANR	899685	Condition	* p == 's'	3963:17:113373:113381	899443	0	True				
ANR	899686	EqualityExpression	* p == 's'		899443	0		==			
ANR	899687	UnaryOperationExpression	* p		899443	0					
ANR	899688	UnaryOperator	*		899443	0					
ANR	899689	Identifier	p		899443	1					
ANR	899690	PrimaryExpression	's'		899443	1					
ANR	899691	CompoundStatement		38:28:1034:1034	899443	1					
ANR	899692	ExpressionStatement	"r_debug_signal_setup ( core -> dbg , signum , R_DBG_SIGNAL_SKIP )"	3964:7:113401:113460	899443	0	True				
ANR	899693	CallExpression	"r_debug_signal_setup ( core -> dbg , signum , R_DBG_SIGNAL_SKIP )"		899443	0					
ANR	899694	Callee	r_debug_signal_setup		899443	0					
ANR	899695	Identifier	r_debug_signal_setup		899443	0					
ANR	899696	ArgumentList	core -> dbg		899443	1					
ANR	899697	Argument	core -> dbg		899443	0					
ANR	899698	PtrMemberAccess	core -> dbg		899443	0					
ANR	899699	Identifier	core		899443	0					
ANR	899700	Identifier	dbg		899443	1					
ANR	899701	Argument	signum		899443	1					
ANR	899702	Identifier	signum		899443	0					
ANR	899703	Argument	R_DBG_SIGNAL_SKIP		899443	2					
ANR	899704	Identifier	R_DBG_SIGNAL_SKIP		899443	0					
ANR	899705	ElseStatement	else		899443	0					
ANR	899706	IfStatement	if ( * p == 'c' )		899443	0					
ANR	899707	Condition	* p == 'c'	3965:17:113479:113487	899443	0	True				
ANR	899708	EqualityExpression	* p == 'c'		899443	0		==			
ANR	899709	UnaryOperationExpression	* p		899443	0					
ANR	899710	UnaryOperator	*		899443	0					
ANR	899711	Identifier	p		899443	1					
ANR	899712	PrimaryExpression	'c'		899443	1					
ANR	899713	CompoundStatement		40:28:1140:1140	899443	1					
ANR	899714	ExpressionStatement	"r_debug_signal_setup ( core -> dbg , signum , R_DBG_SIGNAL_CONT )"	3966:7:113507:113566	899443	0	True				
ANR	899715	CallExpression	"r_debug_signal_setup ( core -> dbg , signum , R_DBG_SIGNAL_CONT )"		899443	0					
ANR	899716	Callee	r_debug_signal_setup		899443	0					
ANR	899717	Identifier	r_debug_signal_setup		899443	0					
ANR	899718	ArgumentList	core -> dbg		899443	1					
ANR	899719	Argument	core -> dbg		899443	0					
ANR	899720	PtrMemberAccess	core -> dbg		899443	0					
ANR	899721	Identifier	core		899443	0					
ANR	899722	Identifier	dbg		899443	1					
ANR	899723	Argument	signum		899443	1					
ANR	899724	Identifier	signum		899443	0					
ANR	899725	Argument	R_DBG_SIGNAL_CONT		899443	2					
ANR	899726	Identifier	R_DBG_SIGNAL_CONT		899443	0					
ANR	899727	ElseStatement	else		899443	0					
ANR	899728	CompoundStatement		42:13:1231:1231	899443	0					
ANR	899729	ExpressionStatement	"eprintf ( ""Invalid option: %s\\n"" , p )"	3968:7:113590:113625	899443	0	True				
ANR	899730	CallExpression	"eprintf ( ""Invalid option: %s\\n"" , p )"		899443	0					
ANR	899731	Callee	eprintf		899443	0					
ANR	899732	Identifier	eprintf		899443	0					
ANR	899733	ArgumentList	"""Invalid option: %s\\n"""		899443	1					
ANR	899734	Argument	"""Invalid option: %s\\n"""		899443	0					
ANR	899735	PrimaryExpression	"""Invalid option: %s\\n"""		899443	0					
ANR	899736	Argument	p		899443	1					
ANR	899737	Identifier	p		899443	0					
ANR	899738	ElseStatement	else		899443	0					
ANR	899739	CompoundStatement		45:12:1297:1297	899443	0					
ANR	899740	ExpressionStatement	"eprintf ( ""Invalid signal: %s\\n"" , input + 2 )"	3971:6:113655:113698	899443	0	True				
ANR	899741	CallExpression	"eprintf ( ""Invalid signal: %s\\n"" , input + 2 )"		899443	0					
ANR	899742	Callee	eprintf		899443	0					
ANR	899743	Identifier	eprintf		899443	0					
ANR	899744	ArgumentList	"""Invalid signal: %s\\n"""		899443	1					
ANR	899745	Argument	"""Invalid signal: %s\\n"""		899443	0					
ANR	899746	PrimaryExpression	"""Invalid signal: %s\\n"""		899443	0					
ANR	899747	Argument	input + 2		899443	1					
ANR	899748	AdditiveExpression	input + 2		899443	0		+			
ANR	899749	Identifier	input		899443	0					
ANR	899750	PrimaryExpression	2		899443	1					
ANR	899751	ExpressionStatement	free ( name )	3973:5:113712:113723	899443	6	True				
ANR	899752	CallExpression	free ( name )		899443	0					
ANR	899753	Callee	free		899443	0					
ANR	899754	Identifier	free		899443	0					
ANR	899755	ArgumentList	name		899443	1					
ANR	899756	Argument	name		899443	0					
ANR	899757	Identifier	name		899443	0					
ANR	899758	BreakStatement	break ;	3974:5:113730:113735	899443	7	True				
ANR	899759	Label	case '?' :	3977:3:113769:113777	899443	5	True				
ANR	899760	Label	default :	3978:3:113782:113789	899443	6	True				
ANR	899761	Identifier	default		899443	0					
ANR	899762	CompoundStatement		54:4:1445:1445	899443	7					
ANR	899763	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dko )"	3980:5:113802:113838	899443	0	True				
ANR	899764	CallExpression	"r_core_cmd_help ( core , help_msg_dko )"		899443	0					
ANR	899765	Callee	r_core_cmd_help		899443	0					
ANR	899766	Identifier	r_core_cmd_help		899443	0					
ANR	899767	ArgumentList	core		899443	1					
ANR	899768	Argument	core		899443	0					
ANR	899769	Identifier	core		899443	0					
ANR	899770	Argument	help_msg_dko		899443	1					
ANR	899771	Identifier	help_msg_dko		899443	0					
ANR	899772	Statement	r_cons_println	3982:5:113894:113907	899443	1	True				
ANR	899773	Statement	(	3982:20:113909:113909	899443	2	True				
ANR	899774	Statement	"""NOTE: [signal] can be a number or a string that resolves with dk?\\n"""	3982:21:113910:113978	899443	3	True				
ANR	899775	Statement	"""  skip means do not enter into the signal handler\\n"""	3983:7:113987:114039	899443	4	True				
ANR	899776	Statement	"""  continue means enter into the signal handler"""	3984:7:114048:114095	899443	5	True				
ANR	899777	Statement	)	3984:55:114096:114096	899443	6	True				
ANR	899778	ExpressionStatement		3984:56:114097:114097	899443	7	True				
ANR	899779	ElseStatement	else		899443	0					
ANR	899780	IfStatement	if ( * input == 'j' )		899443	0					
ANR	899781	Condition	* input == 'j'	3987:12:114121:114133	899443	0	True				
ANR	899782	EqualityExpression	* input == 'j'		899443	0		==			
ANR	899783	UnaryOperationExpression	* input		899443	0					
ANR	899784	UnaryOperator	*		899443	0					
ANR	899785	Identifier	input		899443	1					
ANR	899786	PrimaryExpression	'j'		899443	1					
ANR	899787	CompoundStatement		62:27:1786:1786	899443	1					
ANR	899788	ExpressionStatement	"r_debug_signal_list ( core -> dbg , 2 )"	3988:2:114140:114174	899443	0	True				
ANR	899789	CallExpression	"r_debug_signal_list ( core -> dbg , 2 )"		899443	0					
ANR	899790	Callee	r_debug_signal_list		899443	0					
ANR	899791	Identifier	r_debug_signal_list		899443	0					
ANR	899792	ArgumentList	core -> dbg		899443	1					
ANR	899793	Argument	core -> dbg		899443	0					
ANR	899794	PtrMemberAccess	core -> dbg		899443	0					
ANR	899795	Identifier	core		899443	0					
ANR	899796	Identifier	dbg		899443	1					
ANR	899797	Argument	2		899443	1					
ANR	899798	PrimaryExpression	2		899443	0					
ANR	899799	ElseStatement	else		899443	0					
ANR	899800	IfStatement	if ( ! * input )		899443	0					
ANR	899801	Condition	! * input	3989:12:114188:114194	899443	0	True				
ANR	899802	UnaryOperationExpression	! * input		899443	0					
ANR	899803	UnaryOperator	!		899443	0					
ANR	899804	UnaryOperationExpression	* input		899443	1					
ANR	899805	UnaryOperator	*		899443	0					
ANR	899806	Identifier	input		899443	1					
ANR	899807	CompoundStatement		70:2:1987:2030	899443	1					
ANR	899808	ExpressionStatement	"r_debug_signal_list ( core -> dbg , 0 )"	3990:2:114201:114235	899443	0	True				
ANR	899809	CallExpression	"r_debug_signal_list ( core -> dbg , 0 )"		899443	0					
ANR	899810	Callee	r_debug_signal_list		899443	0					
ANR	899811	Identifier	r_debug_signal_list		899443	0					
ANR	899812	ArgumentList	core -> dbg		899443	1					
ANR	899813	Argument	core -> dbg		899443	0					
ANR	899814	PtrMemberAccess	core -> dbg		899443	0					
ANR	899815	Identifier	core		899443	0					
ANR	899816	Identifier	dbg		899443	1					
ANR	899817	Argument	0		899443	1					
ANR	899818	PrimaryExpression	0		899443	0					
ANR	899819	IdentifierDeclStatement	RListIter * iter ;	3992:2:114245:114260	899443	1	True				
ANR	899820	IdentifierDecl	* iter		899443	0					
ANR	899821	IdentifierDeclType	RListIter *		899443	0					
ANR	899822	Identifier	iter		899443	1					
ANR	899823	IdentifierDeclStatement	RDebugSignal * ds ;	3993:2:114264:114280	899443	2	True				
ANR	899824	IdentifierDecl	* ds		899443	0					
ANR	899825	IdentifierDeclType	RDebugSignal *		899443	0					
ANR	899826	Identifier	ds		899443	1					
ANR	899827	ExpressionStatement	"eprintf ( ""TODO: list signal handlers of child\\n"" )"	3994:2:114284:114333	899443	3	True				
ANR	899828	CallExpression	"eprintf ( ""TODO: list signal handlers of child\\n"" )"		899443	0					
ANR	899829	Callee	eprintf		899443	0					
ANR	899830	Identifier	eprintf		899443	0					
ANR	899831	ArgumentList	"""TODO: list signal handlers of child\\n"""		899443	1					
ANR	899832	Argument	"""TODO: list signal handlers of child\\n"""		899443	0					
ANR	899833	PrimaryExpression	"""TODO: list signal handlers of child\\n"""		899443	0					
ANR	899834	IdentifierDeclStatement	RList * list = r_debug_kill_list ( core -> dbg ) ;	3995:2:114337:114380	899443	4	True				
ANR	899835	IdentifierDecl	* list = r_debug_kill_list ( core -> dbg )		899443	0					
ANR	899836	IdentifierDeclType	RList *		899443	0					
ANR	899837	Identifier	list		899443	1					
ANR	899838	AssignmentExpression	* list = r_debug_kill_list ( core -> dbg )		899443	2		=			
ANR	899839	Identifier	list		899443	0					
ANR	899840	CallExpression	r_debug_kill_list ( core -> dbg )		899443	1					
ANR	899841	Callee	r_debug_kill_list		899443	0					
ANR	899842	Identifier	r_debug_kill_list		899443	0					
ANR	899843	ArgumentList	core -> dbg		899443	1					
ANR	899844	Argument	core -> dbg		899443	0					
ANR	899845	PtrMemberAccess	core -> dbg		899443	0					
ANR	899846	Identifier	core		899443	0					
ANR	899847	Identifier	dbg		899443	1					
ANR	899848	Statement	r_list_foreach	3996:2:114384:114397	899443	5	True				
ANR	899849	Statement	(	3996:17:114399:114399	899443	6	True				
ANR	899850	Statement	list	3996:18:114400:114403	899443	7	True				
ANR	899851	Statement	","	3996:22:114404:114404	899443	8	True				
ANR	899852	Statement	iter	3996:24:114406:114409	899443	9	True				
ANR	899853	Statement	","	3996:28:114410:114410	899443	10	True				
ANR	899854	Statement	ds	3996:30:114412:114413	899443	11	True				
ANR	899855	Statement	)	3996:32:114414:114414	899443	12	True				
ANR	899856	CompoundStatement		71:34:2066:2066	899443	13					
ANR	899857	ExpressionStatement	"eprintf ( ""--> %d\\n"" , ds -> num )"	3998:3:114487:114516	899443	0	True				
ANR	899858	CallExpression	"eprintf ( ""--> %d\\n"" , ds -> num )"		899443	0					
ANR	899859	Callee	eprintf		899443	0					
ANR	899860	Identifier	eprintf		899443	0					
ANR	899861	ArgumentList	"""--> %d\\n"""		899443	1					
ANR	899862	Argument	"""--> %d\\n"""		899443	0					
ANR	899863	PrimaryExpression	"""--> %d\\n"""		899443	0					
ANR	899864	Argument	ds -> num		899443	1					
ANR	899865	PtrMemberAccess	ds -> num		899443	0					
ANR	899866	Identifier	ds		899443	0					
ANR	899867	Identifier	num		899443	1					
ANR	899868	ExpressionStatement	r_list_free ( list )	4000:2:114524:114542	899443	14	True				
ANR	899869	CallExpression	r_list_free ( list )		899443	0					
ANR	899870	Callee	r_list_free		899443	0					
ANR	899871	Identifier	r_list_free		899443	0					
ANR	899872	ArgumentList	list		899443	1					
ANR	899873	Argument	list		899443	0					
ANR	899874	Identifier	list		899443	0					
ANR	899875	ElseStatement	else		899443	0					
ANR	899876	CompoundStatement		79:2:2239:2268	899443	0					
ANR	899877	IdentifierDeclStatement	int sig = atoi ( input ) ;	4003:2:114563:114585	899443	0	True				
ANR	899878	IdentifierDecl	sig = atoi ( input )		899443	0					
ANR	899879	IdentifierDeclType	int		899443	0					
ANR	899880	Identifier	sig		899443	1					
ANR	899881	AssignmentExpression	sig = atoi ( input )		899443	2		=			
ANR	899882	Identifier	sig		899443	0					
ANR	899883	CallExpression	atoi ( input )		899443	1					
ANR	899884	Callee	atoi		899443	0					
ANR	899885	Identifier	atoi		899443	0					
ANR	899886	ArgumentList	input		899443	1					
ANR	899887	Argument	input		899443	0					
ANR	899888	Identifier	input		899443	0					
ANR	899889	IdentifierDeclStatement	"char * p = strchr ( input , '=' ) ;"	4004:2:114589:114618	899443	1	True				
ANR	899890	IdentifierDecl	"* p = strchr ( input , '=' )"		899443	0					
ANR	899891	IdentifierDeclType	char *		899443	0					
ANR	899892	Identifier	p		899443	1					
ANR	899893	AssignmentExpression	"* p = strchr ( input , '=' )"		899443	2		=			
ANR	899894	Identifier	p		899443	0					
ANR	899895	CallExpression	"strchr ( input , '=' )"		899443	1					
ANR	899896	Callee	strchr		899443	0					
ANR	899897	Identifier	strchr		899443	0					
ANR	899898	ArgumentList	input		899443	1					
ANR	899899	Argument	input		899443	0					
ANR	899900	Identifier	input		899443	0					
ANR	899901	Argument	'='		899443	1					
ANR	899902	PrimaryExpression	'='		899443	0					
ANR	899903	IfStatement	if ( p )		899443	2					
ANR	899904	Condition	p	4005:6:114626:114626	899443	0	True				
ANR	899905	Identifier	p		899443	0					
ANR	899906	CompoundStatement		80:9:2279:2279	899443	1					
ANR	899907	ExpressionStatement	"r_debug_kill_setup ( core -> dbg , sig , r_num_math ( core -> num , p + 1 ) )"	4006:3:114634:114698	899443	0	True				
ANR	899908	CallExpression	"r_debug_kill_setup ( core -> dbg , sig , r_num_math ( core -> num , p + 1 ) )"		899443	0					
ANR	899909	Callee	r_debug_kill_setup		899443	0					
ANR	899910	Identifier	r_debug_kill_setup		899443	0					
ANR	899911	ArgumentList	core -> dbg		899443	1					
ANR	899912	Argument	core -> dbg		899443	0					
ANR	899913	PtrMemberAccess	core -> dbg		899443	0					
ANR	899914	Identifier	core		899443	0					
ANR	899915	Identifier	dbg		899443	1					
ANR	899916	Argument	sig		899443	1					
ANR	899917	Identifier	sig		899443	0					
ANR	899918	Argument	"r_num_math ( core -> num , p + 1 )"		899443	2					
ANR	899919	CallExpression	"r_num_math ( core -> num , p + 1 )"		899443	0					
ANR	899920	Callee	r_num_math		899443	0					
ANR	899921	Identifier	r_num_math		899443	0					
ANR	899922	ArgumentList	core -> num		899443	1					
ANR	899923	Argument	core -> num		899443	0					
ANR	899924	PtrMemberAccess	core -> num		899443	0					
ANR	899925	Identifier	core		899443	0					
ANR	899926	Identifier	num		899443	1					
ANR	899927	Argument	p + 1		899443	1					
ANR	899928	AdditiveExpression	p + 1		899443	0		+			
ANR	899929	Identifier	p		899443	0					
ANR	899930	PrimaryExpression	1		899443	1					
ANR	899931	ElseStatement	else		899443	0					
ANR	899932	CompoundStatement		82:9:2359:2359	899443	0					
ANR	899933	ExpressionStatement	"r_debug_kill ( core -> dbg , core -> dbg -> pid , core -> dbg -> tid , sig )"	4008:3:114714:114775	899443	0	True				
ANR	899934	CallExpression	"r_debug_kill ( core -> dbg , core -> dbg -> pid , core -> dbg -> tid , sig )"		899443	0					
ANR	899935	Callee	r_debug_kill		899443	0					
ANR	899936	Identifier	r_debug_kill		899443	0					
ANR	899937	ArgumentList	core -> dbg		899443	1					
ANR	899938	Argument	core -> dbg		899443	0					
ANR	899939	PtrMemberAccess	core -> dbg		899443	0					
ANR	899940	Identifier	core		899443	0					
ANR	899941	Identifier	dbg		899443	1					
ANR	899942	Argument	core -> dbg -> pid		899443	1					
ANR	899943	PtrMemberAccess	core -> dbg -> pid		899443	0					
ANR	899944	PtrMemberAccess	core -> dbg		899443	0					
ANR	899945	Identifier	core		899443	0					
ANR	899946	Identifier	dbg		899443	1					
ANR	899947	Identifier	pid		899443	1					
ANR	899948	Argument	core -> dbg -> tid		899443	2					
ANR	899949	PtrMemberAccess	core -> dbg -> tid		899443	0					
ANR	899950	PtrMemberAccess	core -> dbg		899443	0					
ANR	899951	Identifier	core		899443	0					
ANR	899952	Identifier	dbg		899443	1					
ANR	899953	Identifier	tid		899443	1					
ANR	899954	Argument	sig		899443	3					
ANR	899955	Identifier	sig		899443	0					
ANR	899956	ReturnType	static void		899443	1					
ANR	899957	Identifier	r_core_debug_kill		899443	2					
ANR	899958	ParameterList	"RCore * core , const char * input"		899443	3					
ANR	899959	Parameter	RCore * core	3926:31:112317:112327	899443	0	True				
ANR	899960	ParameterType	RCore *		899443	0					
ANR	899961	Identifier	core		899443	1					
ANR	899962	Parameter	const char * input	3926:44:112330:112346	899443	1	True				
ANR	899963	ParameterType	const char *		899443	0					
ANR	899964	Identifier	input		899443	1					
ANR	899965	CFGEntryNode	ENTRY		899443		True				
ANR	899966	CFGExitNode	EXIT		899443		True				
ANR	899967	Symbol	r_signal_from_string		899443						
ANR	899968	Symbol	* input		899443						
ANR	899969	Symbol	* core		899443						
ANR	899970	Symbol	strchr		899443						
ANR	899971	Symbol	ds		899443						
ANR	899972	Symbol	r_debug_kill_list		899443						
ANR	899973	Symbol	r_num_math		899443						
ANR	899974	Symbol	sig		899443						
ANR	899975	Symbol	* ds		899443						
ANR	899976	Symbol	arg		899443						
ANR	899977	Symbol	core -> num		899443						
ANR	899978	Symbol	* * core		899443						
ANR	899979	Symbol	atoi		899443						
ANR	899980	Symbol	signum		899443						
ANR	899981	Symbol	signame		899443						
ANR	899982	Symbol	ds -> num		899443						
ANR	899983	Symbol	* p ++		899443						
ANR	899984	Symbol	iter		899443						
ANR	899985	Symbol	R_DBG_SIGNAL_SKIP		899443						
ANR	899986	Symbol	list		899443						
ANR	899987	Symbol	r_signal_to_string		899443						
ANR	899988	Symbol	p		899443						
ANR	899989	Symbol	core		899443						
ANR	899990	Symbol	input		899443						
ANR	899991	Symbol	help_msg_dko		899443						
ANR	899992	Symbol	R_DBG_SIGNAL_CONT		899443						
ANR	899993	Symbol	name		899443						
ANR	899994	Symbol	core -> dbg -> tid		899443						
ANR	899995	Symbol	help_msg_dk		899443						
ANR	899996	Symbol	* p		899443						
ANR	899997	Symbol	strdup		899443						
ANR	899998	Symbol	* core -> dbg		899443						
ANR	899999	Symbol	core -> dbg -> pid		899443						
ANR	900000	Symbol	core -> dbg		899443						
ANR	900001	Function	is_x86_call	4013:0:114787:115261							
ANR	900002	FunctionDef	"is_x86_call (RDebug * dbg , ut64 addr)"		900001	0					
ANR	900003	CompoundStatement		4013:48:114835:115261	900001	0					
ANR	900004	IdentifierDeclStatement	ut8 buf [ 3 ] ;	4014:1:114838:114848	900001	0	True				
ANR	900005	IdentifierDecl	buf [ 3 ]		900001	0					
ANR	900006	IdentifierDeclType	ut8 [ 3 ]		900001	0					
ANR	900007	Identifier	buf		900001	1					
ANR	900008	PrimaryExpression	3		900001	2					
ANR	900009	IdentifierDeclStatement	ut8 * op = buf ;	4015:1:114851:114864	900001	1	True				
ANR	900010	IdentifierDecl	* op = buf		900001	0					
ANR	900011	IdentifierDeclType	ut8 *		900001	0					
ANR	900012	Identifier	op		900001	1					
ANR	900013	AssignmentExpression	* op = buf		900001	2		=			
ANR	900014	Identifier	buf		900001	0					
ANR	900015	Identifier	buf		900001	1					
ANR	900016	ExpressionStatement	"( void ) dbg -> iob . read_at ( dbg -> iob . io , addr , buf , R_ARRAY_SIZE ( buf ) )"	4016:1:114867:114934	900001	2	True				
ANR	900017	CastExpression	"( void ) dbg -> iob . read_at ( dbg -> iob . io , addr , buf , R_ARRAY_SIZE ( buf ) )"		900001	0					
ANR	900018	CastTarget	void		900001	0					
ANR	900019	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , addr , buf , R_ARRAY_SIZE ( buf ) )"		900001	1					
ANR	900020	Callee	dbg -> iob . read_at		900001	0					
ANR	900021	MemberAccess	dbg -> iob . read_at		900001	0					
ANR	900022	PtrMemberAccess	dbg -> iob		900001	0					
ANR	900023	Identifier	dbg		900001	0					
ANR	900024	Identifier	iob		900001	1					
ANR	900025	Identifier	read_at		900001	1					
ANR	900026	ArgumentList	dbg -> iob . io		900001	1					
ANR	900027	Argument	dbg -> iob . io		900001	0					
ANR	900028	MemberAccess	dbg -> iob . io		900001	0					
ANR	900029	PtrMemberAccess	dbg -> iob		900001	0					
ANR	900030	Identifier	dbg		900001	0					
ANR	900031	Identifier	iob		900001	1					
ANR	900032	Identifier	io		900001	1					
ANR	900033	Argument	addr		900001	1					
ANR	900034	Identifier	addr		900001	0					
ANR	900035	Argument	buf		900001	2					
ANR	900036	Identifier	buf		900001	0					
ANR	900037	Argument	R_ARRAY_SIZE ( buf )		900001	3					
ANR	900038	CallExpression	R_ARRAY_SIZE ( buf )		900001	0					
ANR	900039	Callee	R_ARRAY_SIZE		900001	0					
ANR	900040	Identifier	R_ARRAY_SIZE		900001	0					
ANR	900041	ArgumentList	buf		900001	1					
ANR	900042	Argument	buf		900001	0					
ANR	900043	Identifier	buf		900001	0					
ANR	900044	SwitchStatement	switch ( buf [ 0 ] )		900001	3					
ANR	900045	Condition	buf [ 0 ]	4017:9:114945:114950	900001	0	True				
ANR	900046	ArrayIndexing	buf [ 0 ]		900001	0					
ANR	900047	Identifier	buf		900001	0					
ANR	900048	PrimaryExpression	0		900001	1					
ANR	900049	CompoundStatement		5:17:117:117	900001	1					
ANR	900050	Label	case 0x65 :	4018:1:114989:114998	900001	0	True				
ANR	900051	Label	case 0x64 :	4019:1:115001:115010	900001	1	True				
ANR	900052	Label	case 0x26 :	4020:1:115013:115022	900001	2	True				
ANR	900053	Label	case 0x3e :	4021:1:115025:115034	900001	3	True				
ANR	900054	Label	case 0x36 :	4022:1:115037:115046	900001	4	True				
ANR	900055	Label	case 0x2e :	4023:1:115049:115058	900001	5	True				
ANR	900056	ExpressionStatement	op ++	4024:2:115062:115066	900001	6	True				
ANR	900057	PostIncDecOperationExpression	op ++		900001	0					
ANR	900058	Identifier	op		900001	0					
ANR	900059	IncDec	++		900001	1					
ANR	900060	IfStatement	if ( op [ 0 ] == 0xe8 )		900001	4					
ANR	900061	Condition	op [ 0 ] == 0xe8	4026:5:115076:115088	900001	0	True				
ANR	900062	EqualityExpression	op [ 0 ] == 0xe8		900001	0		==			
ANR	900063	ArrayIndexing	op [ 0 ]		900001	0					
ANR	900064	Identifier	op		900001	0					
ANR	900065	PrimaryExpression	0		900001	1					
ANR	900066	PrimaryExpression	0xe8		900001	1					
ANR	900067	CompoundStatement		14:20:255:255	900001	1					
ANR	900068	ReturnStatement	return true ;	4027:2:115095:115106	900001	0	True				
ANR	900069	Identifier	true		900001	0					
ANR	900070	IfStatement	if ( op [ 0 ] == 0xff && ( op [ 1 ] & 0x30 ) == 0x10 )		900001	5					
ANR	900071	Condition	op [ 0 ] == 0xff && ( op [ 1 ] & 0x30 ) == 0x10	4029:5:115116:115212	900001	0	True				
ANR	900072	AndExpression	op [ 0 ] == 0xff && ( op [ 1 ] & 0x30 ) == 0x10		900001	0		&&			
ANR	900073	EqualityExpression	op [ 0 ] == 0xff		900001	0		==			
ANR	900074	ArrayIndexing	op [ 0 ]		900001	0					
ANR	900075	Identifier	op		900001	0					
ANR	900076	PrimaryExpression	0		900001	1					
ANR	900077	PrimaryExpression	0xff		900001	1					
ANR	900078	EqualityExpression	( op [ 1 ] & 0x30 ) == 0x10		900001	1		==			
ANR	900079	BitAndExpression	op [ 1 ] & 0x30		900001	0		&			
ANR	900080	ArrayIndexing	op [ 1 ]		900001	0					
ANR	900081	Identifier	op		900001	0					
ANR	900082	PrimaryExpression	1		900001	1					
ANR	900083	PrimaryExpression	0x30		900001	1					
ANR	900084	PrimaryExpression	0x10		900001	1					
ANR	900085	CompoundStatement		18:32:379:379	900001	1					
ANR	900086	ReturnStatement	return true ;	4031:2:115219:115230	900001	0	True				
ANR	900087	Identifier	true		900001	0					
ANR	900088	ReturnStatement	return false ;	4034:1:115247:115259	900001	6	True				
ANR	900089	Identifier	false		900001	0					
ANR	900090	ReturnType	static bool		900001	1					
ANR	900091	Identifier	is_x86_call		900001	2					
ANR	900092	ParameterList	"RDebug * dbg , ut64 addr"		900001	3					
ANR	900093	Parameter	RDebug * dbg	4013:24:114811:114821	900001	0	True				
ANR	900094	ParameterType	RDebug *		900001	0					
ANR	900095	Identifier	dbg		900001	1					
ANR	900096	Parameter	ut64 addr	4013:37:114824:114832	900001	1	True				
ANR	900097	ParameterType	ut64		900001	0					
ANR	900098	Identifier	addr		900001	1					
ANR	900099	CFGEntryNode	ENTRY		900001		True				
ANR	900100	CFGExitNode	EXIT		900001		True				
ANR	900101	Symbol	op		900001						
ANR	900102	Symbol	buf		900001						
ANR	900103	Symbol	dbg -> iob . io		900001						
ANR	900104	Symbol	* buf		900001						
ANR	900105	Symbol	dbg -> iob		900001						
ANR	900106	Symbol	* op		900001						
ANR	900107	Symbol	dbg		900001						
ANR	900108	Symbol	R_ARRAY_SIZE		900001						
ANR	900109	Symbol	true		900001						
ANR	900110	Symbol	false		900001						
ANR	900111	Symbol	addr		900001						
ANR	900112	Symbol	* dbg		900001						
ANR	900113	Function	is_x86_ret	4037:0:115264:115570							
ANR	900114	FunctionDef	"is_x86_ret (RDebug * dbg , ut64 addr)"		900113	0					
ANR	900115	CompoundStatement		4037:47:115311:115570	900113	0					
ANR	900116	IdentifierDeclStatement	ut8 buf [ 1 ] ;	4038:1:115314:115324	900113	0	True				
ANR	900117	IdentifierDecl	buf [ 1 ]		900113	0					
ANR	900118	IdentifierDeclType	ut8 [ 1 ]		900113	0					
ANR	900119	Identifier	buf		900113	1					
ANR	900120	PrimaryExpression	1		900113	2					
ANR	900121	ExpressionStatement	"( void ) dbg -> iob . read_at ( dbg -> iob . io , addr , buf , R_ARRAY_SIZE ( buf ) )"	4039:1:115327:115394	900113	1	True				
ANR	900122	CastExpression	"( void ) dbg -> iob . read_at ( dbg -> iob . io , addr , buf , R_ARRAY_SIZE ( buf ) )"		900113	0					
ANR	900123	CastTarget	void		900113	0					
ANR	900124	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , addr , buf , R_ARRAY_SIZE ( buf ) )"		900113	1					
ANR	900125	Callee	dbg -> iob . read_at		900113	0					
ANR	900126	MemberAccess	dbg -> iob . read_at		900113	0					
ANR	900127	PtrMemberAccess	dbg -> iob		900113	0					
ANR	900128	Identifier	dbg		900113	0					
ANR	900129	Identifier	iob		900113	1					
ANR	900130	Identifier	read_at		900113	1					
ANR	900131	ArgumentList	dbg -> iob . io		900113	1					
ANR	900132	Argument	dbg -> iob . io		900113	0					
ANR	900133	MemberAccess	dbg -> iob . io		900113	0					
ANR	900134	PtrMemberAccess	dbg -> iob		900113	0					
ANR	900135	Identifier	dbg		900113	0					
ANR	900136	Identifier	iob		900113	1					
ANR	900137	Identifier	io		900113	1					
ANR	900138	Argument	addr		900113	1					
ANR	900139	Identifier	addr		900113	0					
ANR	900140	Argument	buf		900113	2					
ANR	900141	Identifier	buf		900113	0					
ANR	900142	Argument	R_ARRAY_SIZE ( buf )		900113	3					
ANR	900143	CallExpression	R_ARRAY_SIZE ( buf )		900113	0					
ANR	900144	Callee	R_ARRAY_SIZE		900113	0					
ANR	900145	Identifier	R_ARRAY_SIZE		900113	0					
ANR	900146	ArgumentList	buf		900113	1					
ANR	900147	Argument	buf		900113	0					
ANR	900148	Identifier	buf		900113	0					
ANR	900149	SwitchStatement	switch ( buf [ 0 ] )		900113	2					
ANR	900150	Condition	buf [ 0 ]	4040:9:115405:115410	900113	0	True				
ANR	900151	ArrayIndexing	buf [ 0 ]		900113	0					
ANR	900152	Identifier	buf		900113	0					
ANR	900153	PrimaryExpression	0		900113	1					
ANR	900154	CompoundStatement		4:17:101:101	900113	1					
ANR	900155	Label	case 0xc3 :	4041:1:115416:115425	900113	0	True				
ANR	900156	Label	case 0xcb :	4042:1:115428:115437	900113	1	True				
ANR	900157	Label	case 0xc2 :	4043:1:115440:115449	900113	2	True				
ANR	900158	Label	case 0xca :	4044:1:115452:115461	900113	3	True				
ANR	900159	ReturnStatement	return true ;	4045:2:115465:115476	900113	4	True				
ANR	900160	Identifier	true		900113	0					
ANR	900161	Label	default :	4046:1:115479:115486	900113	5	True				
ANR	900162	Identifier	default		900113	0					
ANR	900163	ReturnStatement	return false ;	4047:2:115490:115502	900113	6	True				
ANR	900164	Identifier	false		900113	0					
ANR	900165	ReturnType	static bool		900113	1					
ANR	900166	Identifier	is_x86_ret		900113	2					
ANR	900167	ParameterList	"RDebug * dbg , ut64 addr"		900113	3					
ANR	900168	Parameter	RDebug * dbg	4037:23:115287:115297	900113	0	True				
ANR	900169	ParameterType	RDebug *		900113	0					
ANR	900170	Identifier	dbg		900113	1					
ANR	900171	Parameter	ut64 addr	4037:36:115300:115308	900113	1	True				
ANR	900172	ParameterType	ut64		900113	0					
ANR	900173	Identifier	addr		900113	1					
ANR	900174	CFGEntryNode	ENTRY		900113		True				
ANR	900175	CFGExitNode	EXIT		900113		True				
ANR	900176	Symbol	buf		900113						
ANR	900177	Symbol	dbg -> iob . io		900113						
ANR	900178	Symbol	* buf		900113						
ANR	900179	Symbol	dbg -> iob		900113						
ANR	900180	Symbol	dbg		900113						
ANR	900181	Symbol	R_ARRAY_SIZE		900113						
ANR	900182	Symbol	true		900113						
ANR	900183	Symbol	false		900113						
ANR	900184	Symbol	addr		900113						
ANR	900185	Symbol	* dbg		900113						
ANR	900186	Function	cmd_dcu	4052:0:115573:120046							
ANR	900187	FunctionDef	"cmd_dcu (RCore * core , const char * input)"		900186	0					
ANR	900188	CompoundStatement		4052:53:115626:120046	900186	0					
ANR	900189	IdentifierDeclStatement	const char * ptr = NULL ;	4053:1:115629:115651	900186	0	True				
ANR	900190	IdentifierDecl	* ptr = NULL		900186	0					
ANR	900191	IdentifierDeclType	const char *		900186	0					
ANR	900192	Identifier	ptr		900186	1					
ANR	900193	AssignmentExpression	* ptr = NULL		900186	2		=			
ANR	900194	Identifier	NULL		900186	0					
ANR	900195	Identifier	NULL		900186	1					
ANR	900196	IdentifierDeclStatement	"ut64 from , to , pc ;"	4054:1:115654:115671	900186	1	True				
ANR	900197	IdentifierDecl	from		900186	0					
ANR	900198	IdentifierDeclType	ut64		900186	0					
ANR	900199	Identifier	from		900186	1					
ANR	900200	IdentifierDecl	to		900186	1					
ANR	900201	IdentifierDeclType	ut64		900186	0					
ANR	900202	Identifier	to		900186	1					
ANR	900203	IdentifierDecl	pc		900186	2					
ANR	900204	IdentifierDeclType	ut64		900186	0					
ANR	900205	Identifier	pc		900186	1					
ANR	900206	IdentifierDeclStatement	bool dcu_range = false ;	4055:1:115674:115696	900186	2	True				
ANR	900207	IdentifierDecl	dcu_range = false		900186	0					
ANR	900208	IdentifierDeclType	bool		900186	0					
ANR	900209	Identifier	dcu_range		900186	1					
ANR	900210	AssignmentExpression	dcu_range = false		900186	2		=			
ANR	900211	Identifier	false		900186	0					
ANR	900212	Identifier	false		900186	1					
ANR	900213	IdentifierDeclStatement	bool invalid = ( ! input [ 0 ] || ! input [ 1 ] || ! input [ 2 ] ) ;	4056:1:115699:115751	900186	3	True				
ANR	900214	IdentifierDecl	invalid = ( ! input [ 0 ] || ! input [ 1 ] || ! input [ 2 ] )		900186	0					
ANR	900215	IdentifierDeclType	bool		900186	0					
ANR	900216	Identifier	invalid		900186	1					
ANR	900217	AssignmentExpression	invalid = ( ! input [ 0 ] || ! input [ 1 ] || ! input [ 2 ] )		900186	2		=			
ANR	900218	Identifier	invalid		900186	0					
ANR	900219	OrExpression	! input [ 0 ] || ! input [ 1 ] || ! input [ 2 ]		900186	1		||			
ANR	900220	UnaryOperationExpression	! input [ 0 ]		900186	0					
ANR	900221	UnaryOperator	!		900186	0					
ANR	900222	ArrayIndexing	input [ 0 ]		900186	1					
ANR	900223	Identifier	input		900186	0					
ANR	900224	PrimaryExpression	0		900186	1					
ANR	900225	OrExpression	! input [ 1 ] || ! input [ 2 ]		900186	1		||			
ANR	900226	UnaryOperationExpression	! input [ 1 ]		900186	0					
ANR	900227	UnaryOperator	!		900186	0					
ANR	900228	ArrayIndexing	input [ 1 ]		900186	1					
ANR	900229	Identifier	input		900186	0					
ANR	900230	PrimaryExpression	1		900186	1					
ANR	900231	UnaryOperationExpression	! input [ 2 ]		900186	1					
ANR	900232	UnaryOperator	!		900186	0					
ANR	900233	ArrayIndexing	input [ 2 ]		900186	1					
ANR	900234	Identifier	input		900186	0					
ANR	900235	PrimaryExpression	2		900186	1					
ANR	900236	IfStatement	if ( invalid || ( input [ 2 ] != ' ' && input [ 2 ] != '.' ) )		900186	4					
ANR	900237	Condition	invalid || ( input [ 2 ] != ' ' && input [ 2 ] != '.' )	4057:5:115758:115804	900186	0	True				
ANR	900238	OrExpression	invalid || ( input [ 2 ] != ' ' && input [ 2 ] != '.' )		900186	0		||			
ANR	900239	Identifier	invalid		900186	0					
ANR	900240	AndExpression	input [ 2 ] != ' ' && input [ 2 ] != '.'		900186	1		&&			
ANR	900241	EqualityExpression	input [ 2 ] != ' '		900186	0		!=			
ANR	900242	ArrayIndexing	input [ 2 ]		900186	0					
ANR	900243	Identifier	input		900186	0					
ANR	900244	PrimaryExpression	2		900186	1					
ANR	900245	PrimaryExpression	' '		900186	1					
ANR	900246	EqualityExpression	input [ 2 ] != '.'		900186	1		!=			
ANR	900247	ArrayIndexing	input [ 2 ]		900186	0					
ANR	900248	Identifier	input		900186	0					
ANR	900249	PrimaryExpression	2		900186	1					
ANR	900250	PrimaryExpression	'.'		900186	1					
ANR	900251	CompoundStatement		6:54:180:180	900186	1					
ANR	900252	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dcu )"	4058:2:115811:115847	900186	0	True				
ANR	900253	CallExpression	"r_core_cmd_help ( core , help_msg_dcu )"		900186	0					
ANR	900254	Callee	r_core_cmd_help		900186	0					
ANR	900255	Identifier	r_core_cmd_help		900186	0					
ANR	900256	ArgumentList	core		900186	1					
ANR	900257	Argument	core		900186	0					
ANR	900258	Identifier	core		900186	0					
ANR	900259	Argument	help_msg_dcu		900186	1					
ANR	900260	Identifier	help_msg_dcu		900186	0					
ANR	900261	ReturnStatement	return false ;	4059:2:115851:115863	900186	1	True				
ANR	900262	Identifier	false		900186	0					
ANR	900263	ExpressionStatement	to = UT64_MAX	4061:1:115869:115882	900186	5	True				
ANR	900264	AssignmentExpression	to = UT64_MAX		900186	0		=			
ANR	900265	Identifier	to		900186	0					
ANR	900266	Identifier	UT64_MAX		900186	1					
ANR	900267	IfStatement	if ( input [ 2 ] == '.' )		900186	6					
ANR	900268	Condition	input [ 2 ] == '.'	4062:5:115889:115903	900186	0	True				
ANR	900269	EqualityExpression	input [ 2 ] == '.'		900186	0		==			
ANR	900270	ArrayIndexing	input [ 2 ]		900186	0					
ANR	900271	Identifier	input		900186	0					
ANR	900272	PrimaryExpression	2		900186	1					
ANR	900273	PrimaryExpression	'.'		900186	1					
ANR	900274	CompoundStatement		11:22:279:279	900186	1					
ANR	900275	ExpressionStatement	"ptr = strchr ( input + 3 , ' ' )"	4063:2:115910:115939	900186	0	True				
ANR	900276	AssignmentExpression	"ptr = strchr ( input + 3 , ' ' )"		900186	0		=			
ANR	900277	Identifier	ptr		900186	0					
ANR	900278	CallExpression	"strchr ( input + 3 , ' ' )"		900186	1					
ANR	900279	Callee	strchr		900186	0					
ANR	900280	Identifier	strchr		900186	0					
ANR	900281	ArgumentList	input + 3		900186	1					
ANR	900282	Argument	input + 3		900186	0					
ANR	900283	AdditiveExpression	input + 3		900186	0		+			
ANR	900284	Identifier	input		900186	0					
ANR	900285	PrimaryExpression	3		900186	1					
ANR	900286	Argument	' '		900186	1					
ANR	900287	PrimaryExpression	' '		900186	0					
ANR	900288	IfStatement	if ( ptr )		900186	1					
ANR	900289	Condition	ptr	4064:6:115947:115949	900186	0	True				
ANR	900290	Identifier	ptr		900186	0					
ANR	900291	CompoundStatement		13:11:325:325	900186	1					
ANR	900292	ExpressionStatement	"from = r_num_tail ( core -> num , core -> offset , input + 2 )"	4065:3:115992:116046	900186	0	True				
ANR	900293	AssignmentExpression	"from = r_num_tail ( core -> num , core -> offset , input + 2 )"		900186	0		=			
ANR	900294	Identifier	from		900186	0					
ANR	900295	CallExpression	"r_num_tail ( core -> num , core -> offset , input + 2 )"		900186	1					
ANR	900296	Callee	r_num_tail		900186	0					
ANR	900297	Identifier	r_num_tail		900186	0					
ANR	900298	ArgumentList	core -> num		900186	1					
ANR	900299	Argument	core -> num		900186	0					
ANR	900300	PtrMemberAccess	core -> num		900186	0					
ANR	900301	Identifier	core		900186	0					
ANR	900302	Identifier	num		900186	1					
ANR	900303	Argument	core -> offset		900186	1					
ANR	900304	PtrMemberAccess	core -> offset		900186	0					
ANR	900305	Identifier	core		900186	0					
ANR	900306	Identifier	offset		900186	1					
ANR	900307	Argument	input + 2		900186	2					
ANR	900308	AdditiveExpression	input + 2		900186	0		+			
ANR	900309	Identifier	input		900186	0					
ANR	900310	PrimaryExpression	2		900186	1					
ANR	900311	IfStatement	if ( ptr [ 1 ] == '.' )		900186	1					
ANR	900312	Condition	ptr [ 1 ] == '.'	4066:7:116055:116065	900186	0	True				
ANR	900313	EqualityExpression	ptr [ 1 ] == '.'		900186	0		==			
ANR	900314	ArrayIndexing	ptr [ 1 ]		900186	0					
ANR	900315	Identifier	ptr		900186	0					
ANR	900316	PrimaryExpression	1		900186	1					
ANR	900317	PrimaryExpression	'.'		900186	1					
ANR	900318	CompoundStatement		15:20:441:441	900186	1					
ANR	900319	ExpressionStatement	"to = r_num_tail ( core -> num , core -> offset , ptr + 2 )"	4067:4:116074:116122	900186	0	True				
ANR	900320	AssignmentExpression	"to = r_num_tail ( core -> num , core -> offset , ptr + 2 )"		900186	0		=			
ANR	900321	Identifier	to		900186	0					
ANR	900322	CallExpression	"r_num_tail ( core -> num , core -> offset , ptr + 2 )"		900186	1					
ANR	900323	Callee	r_num_tail		900186	0					
ANR	900324	Identifier	r_num_tail		900186	0					
ANR	900325	ArgumentList	core -> num		900186	1					
ANR	900326	Argument	core -> num		900186	0					
ANR	900327	PtrMemberAccess	core -> num		900186	0					
ANR	900328	Identifier	core		900186	0					
ANR	900329	Identifier	num		900186	1					
ANR	900330	Argument	core -> offset		900186	1					
ANR	900331	PtrMemberAccess	core -> offset		900186	0					
ANR	900332	Identifier	core		900186	0					
ANR	900333	Identifier	offset		900186	1					
ANR	900334	Argument	ptr + 2		900186	2					
ANR	900335	AdditiveExpression	ptr + 2		900186	0		+			
ANR	900336	Identifier	ptr		900186	0					
ANR	900337	PrimaryExpression	2		900186	1					
ANR	900338	ElseStatement	else		900186	0					
ANR	900339	CompoundStatement		17:10:507:507	900186	0					
ANR	900340	ExpressionStatement	"to = r_num_math ( core -> num , ptr + 1 )"	4069:4:116140:116174	900186	0	True				
ANR	900341	AssignmentExpression	"to = r_num_math ( core -> num , ptr + 1 )"		900186	0		=			
ANR	900342	Identifier	to		900186	0					
ANR	900343	CallExpression	"r_num_math ( core -> num , ptr + 1 )"		900186	1					
ANR	900344	Callee	r_num_math		900186	0					
ANR	900345	Identifier	r_num_math		900186	0					
ANR	900346	ArgumentList	core -> num		900186	1					
ANR	900347	Argument	core -> num		900186	0					
ANR	900348	PtrMemberAccess	core -> num		900186	0					
ANR	900349	Identifier	core		900186	0					
ANR	900350	Identifier	num		900186	1					
ANR	900351	Argument	ptr + 1		900186	1					
ANR	900352	AdditiveExpression	ptr + 1		900186	0		+			
ANR	900353	Identifier	ptr		900186	0					
ANR	900354	PrimaryExpression	1		900186	1					
ANR	900355	ExpressionStatement	dcu_range = true	4071:3:116184:116200	900186	2	True				
ANR	900356	AssignmentExpression	dcu_range = true		900186	0		=			
ANR	900357	Identifier	dcu_range		900186	0					
ANR	900358	Identifier	true		900186	1					
ANR	900359	ElseStatement	else		900186	0					
ANR	900360	CompoundStatement		21:9:584:584	900186	0					
ANR	900361	ExpressionStatement	"from = r_num_tail ( core -> num , core -> offset , input + 2 )"	4073:3:116216:116270	900186	0	True				
ANR	900362	AssignmentExpression	"from = r_num_tail ( core -> num , core -> offset , input + 2 )"		900186	0		=			
ANR	900363	Identifier	from		900186	0					
ANR	900364	CallExpression	"r_num_tail ( core -> num , core -> offset , input + 2 )"		900186	1					
ANR	900365	Callee	r_num_tail		900186	0					
ANR	900366	Identifier	r_num_tail		900186	0					
ANR	900367	ArgumentList	core -> num		900186	1					
ANR	900368	Argument	core -> num		900186	0					
ANR	900369	PtrMemberAccess	core -> num		900186	0					
ANR	900370	Identifier	core		900186	0					
ANR	900371	Identifier	num		900186	1					
ANR	900372	Argument	core -> offset		900186	1					
ANR	900373	PtrMemberAccess	core -> offset		900186	0					
ANR	900374	Identifier	core		900186	0					
ANR	900375	Identifier	offset		900186	1					
ANR	900376	Argument	input + 2		900186	2					
ANR	900377	AdditiveExpression	input + 2		900186	0		+			
ANR	900378	Identifier	input		900186	0					
ANR	900379	PrimaryExpression	2		900186	1					
ANR	900380	ElseStatement	else		900186	0					
ANR	900381	CompoundStatement		24:8:657:657	900186	0					
ANR	900382	ExpressionStatement	"ptr = strchr ( input + 3 , ' ' )"	4076:2:116288:116317	900186	0	True				
ANR	900383	AssignmentExpression	"ptr = strchr ( input + 3 , ' ' )"		900186	0		=			
ANR	900384	Identifier	ptr		900186	0					
ANR	900385	CallExpression	"strchr ( input + 3 , ' ' )"		900186	1					
ANR	900386	Callee	strchr		900186	0					
ANR	900387	Identifier	strchr		900186	0					
ANR	900388	ArgumentList	input + 3		900186	1					
ANR	900389	Argument	input + 3		900186	0					
ANR	900390	AdditiveExpression	input + 3		900186	0		+			
ANR	900391	Identifier	input		900186	0					
ANR	900392	PrimaryExpression	3		900186	1					
ANR	900393	Argument	' '		900186	1					
ANR	900394	PrimaryExpression	' '		900186	0					
ANR	900395	IfStatement	if ( ptr )		900186	1					
ANR	900396	Condition	ptr	4077:6:116325:116327	900186	0	True				
ANR	900397	Identifier	ptr		900186	0					
ANR	900398	CompoundStatement		26:11:703:703	900186	1					
ANR	900399	ExpressionStatement	"from = r_num_math ( core -> num , input + 3 )"	4078:3:116370:116410	900186	0	True				
ANR	900400	AssignmentExpression	"from = r_num_math ( core -> num , input + 3 )"		900186	0		=			
ANR	900401	Identifier	from		900186	0					
ANR	900402	CallExpression	"r_num_math ( core -> num , input + 3 )"		900186	1					
ANR	900403	Callee	r_num_math		900186	0					
ANR	900404	Identifier	r_num_math		900186	0					
ANR	900405	ArgumentList	core -> num		900186	1					
ANR	900406	Argument	core -> num		900186	0					
ANR	900407	PtrMemberAccess	core -> num		900186	0					
ANR	900408	Identifier	core		900186	0					
ANR	900409	Identifier	num		900186	1					
ANR	900410	Argument	input + 3		900186	1					
ANR	900411	AdditiveExpression	input + 3		900186	0		+			
ANR	900412	Identifier	input		900186	0					
ANR	900413	PrimaryExpression	3		900186	1					
ANR	900414	IfStatement	if ( ptr [ 1 ] == '.' )		900186	1					
ANR	900415	Condition	ptr [ 1 ] == '.'	4079:7:116419:116429	900186	0	True				
ANR	900416	EqualityExpression	ptr [ 1 ] == '.'		900186	0		==			
ANR	900417	ArrayIndexing	ptr [ 1 ]		900186	0					
ANR	900418	Identifier	ptr		900186	0					
ANR	900419	PrimaryExpression	1		900186	1					
ANR	900420	PrimaryExpression	'.'		900186	1					
ANR	900421	CompoundStatement		28:20:805:805	900186	1					
ANR	900422	ExpressionStatement	"to = r_num_tail ( core -> num , core -> offset , ptr + 2 )"	4080:4:116438:116486	900186	0	True				
ANR	900423	AssignmentExpression	"to = r_num_tail ( core -> num , core -> offset , ptr + 2 )"		900186	0		=			
ANR	900424	Identifier	to		900186	0					
ANR	900425	CallExpression	"r_num_tail ( core -> num , core -> offset , ptr + 2 )"		900186	1					
ANR	900426	Callee	r_num_tail		900186	0					
ANR	900427	Identifier	r_num_tail		900186	0					
ANR	900428	ArgumentList	core -> num		900186	1					
ANR	900429	Argument	core -> num		900186	0					
ANR	900430	PtrMemberAccess	core -> num		900186	0					
ANR	900431	Identifier	core		900186	0					
ANR	900432	Identifier	num		900186	1					
ANR	900433	Argument	core -> offset		900186	1					
ANR	900434	PtrMemberAccess	core -> offset		900186	0					
ANR	900435	Identifier	core		900186	0					
ANR	900436	Identifier	offset		900186	1					
ANR	900437	Argument	ptr + 2		900186	2					
ANR	900438	AdditiveExpression	ptr + 2		900186	0		+			
ANR	900439	Identifier	ptr		900186	0					
ANR	900440	PrimaryExpression	2		900186	1					
ANR	900441	ElseStatement	else		900186	0					
ANR	900442	CompoundStatement		30:10:871:871	900186	0					
ANR	900443	ExpressionStatement	"to = r_num_math ( core -> num , ptr + 1 )"	4082:4:116504:116538	900186	0	True				
ANR	900444	AssignmentExpression	"to = r_num_math ( core -> num , ptr + 1 )"		900186	0		=			
ANR	900445	Identifier	to		900186	0					
ANR	900446	CallExpression	"r_num_math ( core -> num , ptr + 1 )"		900186	1					
ANR	900447	Callee	r_num_math		900186	0					
ANR	900448	Identifier	r_num_math		900186	0					
ANR	900449	ArgumentList	core -> num		900186	1					
ANR	900450	Argument	core -> num		900186	0					
ANR	900451	PtrMemberAccess	core -> num		900186	0					
ANR	900452	Identifier	core		900186	0					
ANR	900453	Identifier	num		900186	1					
ANR	900454	Argument	ptr + 1		900186	1					
ANR	900455	AdditiveExpression	ptr + 1		900186	0		+			
ANR	900456	Identifier	ptr		900186	0					
ANR	900457	PrimaryExpression	1		900186	1					
ANR	900458	ExpressionStatement	dcu_range = true	4084:3:116548:116564	900186	2	True				
ANR	900459	AssignmentExpression	dcu_range = true		900186	0		=			
ANR	900460	Identifier	dcu_range		900186	0					
ANR	900461	Identifier	true		900186	1					
ANR	900462	ElseStatement	else		900186	0					
ANR	900463	CompoundStatement		34:9:948:948	900186	0					
ANR	900464	ExpressionStatement	"from = r_num_math ( core -> num , input + 3 )"	4086:3:116580:116620	900186	0	True				
ANR	900465	AssignmentExpression	"from = r_num_math ( core -> num , input + 3 )"		900186	0		=			
ANR	900466	Identifier	from		900186	0					
ANR	900467	CallExpression	"r_num_math ( core -> num , input + 3 )"		900186	1					
ANR	900468	Callee	r_num_math		900186	0					
ANR	900469	Identifier	r_num_math		900186	0					
ANR	900470	ArgumentList	core -> num		900186	1					
ANR	900471	Argument	core -> num		900186	0					
ANR	900472	PtrMemberAccess	core -> num		900186	0					
ANR	900473	Identifier	core		900186	0					
ANR	900474	Identifier	num		900186	1					
ANR	900475	Argument	input + 3		900186	1					
ANR	900476	AdditiveExpression	input + 3		900186	0		+			
ANR	900477	Identifier	input		900186	0					
ANR	900478	PrimaryExpression	3		900186	1					
ANR	900479	IfStatement	if ( core -> num -> nc . errors && r_cons_is_interactive ( ) )		900186	7					
ANR	900480	Condition	core -> num -> nc . errors && r_cons_is_interactive ( )	4089:5:116634:116681	900186	0	True				
ANR	900481	AndExpression	core -> num -> nc . errors && r_cons_is_interactive ( )		900186	0		&&			
ANR	900482	MemberAccess	core -> num -> nc . errors		900186	0					
ANR	900483	PtrMemberAccess	core -> num -> nc		900186	0					
ANR	900484	PtrMemberAccess	core -> num		900186	0					
ANR	900485	Identifier	core		900186	0					
ANR	900486	Identifier	num		900186	1					
ANR	900487	Identifier	nc		900186	1					
ANR	900488	Identifier	errors		900186	1					
ANR	900489	CallExpression	r_cons_is_interactive ( )		900186	1					
ANR	900490	Callee	r_cons_is_interactive		900186	0					
ANR	900491	Identifier	r_cons_is_interactive		900186	0					
ANR	900492	ArgumentList			900186	1					
ANR	900493	CompoundStatement		38:55:1057:1057	900186	1					
ANR	900494	ExpressionStatement	"eprintf ( ""Cannot continue until unknown address '%s'\\n"" , core -> num -> nc . calc_buf )"	4090:2:116688:116768	900186	0	True				
ANR	900495	CallExpression	"eprintf ( ""Cannot continue until unknown address '%s'\\n"" , core -> num -> nc . calc_buf )"		900186	0					
ANR	900496	Callee	eprintf		900186	0					
ANR	900497	Identifier	eprintf		900186	0					
ANR	900498	ArgumentList	"""Cannot continue until unknown address '%s'\\n"""		900186	1					
ANR	900499	Argument	"""Cannot continue until unknown address '%s'\\n"""		900186	0					
ANR	900500	PrimaryExpression	"""Cannot continue until unknown address '%s'\\n"""		900186	0					
ANR	900501	Argument	core -> num -> nc . calc_buf		900186	1					
ANR	900502	MemberAccess	core -> num -> nc . calc_buf		900186	0					
ANR	900503	PtrMemberAccess	core -> num -> nc		900186	0					
ANR	900504	PtrMemberAccess	core -> num		900186	0					
ANR	900505	Identifier	core		900186	0					
ANR	900506	Identifier	num		900186	1					
ANR	900507	Identifier	nc		900186	1					
ANR	900508	Identifier	calc_buf		900186	1					
ANR	900509	ReturnStatement	return false ;	4091:2:116772:116784	900186	1	True				
ANR	900510	Identifier	false		900186	0					
ANR	900511	IfStatement	if ( to == UT64_MAX )		900186	8					
ANR	900512	Condition	to == UT64_MAX	4093:5:116794:116807	900186	0	True				
ANR	900513	EqualityExpression	to == UT64_MAX		900186	0		==			
ANR	900514	Identifier	to		900186	0					
ANR	900515	Identifier	UT64_MAX		900186	1					
ANR	900516	CompoundStatement		42:21:1183:1183	900186	1					
ANR	900517	ExpressionStatement	to = from	4094:2:116814:116823	900186	0	True				
ANR	900518	AssignmentExpression	to = from		900186	0		=			
ANR	900519	Identifier	to		900186	0					
ANR	900520	Identifier	from		900186	1					
ANR	900521	IfStatement	if ( dcu_range )		900186	9					
ANR	900522	Condition	dcu_range	4096:5:116833:116841	900186	0	True				
ANR	900523	Identifier	dcu_range		900186	0					
ANR	900524	CompoundStatement		45:16:1217:1217	900186	1					
ANR	900525	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	4097:2:116848:116878	900186	0	True				
ANR	900526	CallExpression	"r_cons_break_push ( NULL , NULL )"		900186	0					
ANR	900527	Callee	r_cons_break_push		900186	0					
ANR	900528	Identifier	r_cons_break_push		900186	0					
ANR	900529	ArgumentList	NULL		900186	1					
ANR	900530	Argument	NULL		900186	0					
ANR	900531	Identifier	NULL		900186	0					
ANR	900532	Argument	NULL		900186	1					
ANR	900533	Identifier	NULL		900186	0					
ANR	900534	DoStatement	do		900186	1					
ANR	900535	CompoundStatement		47:5:1258:1258	900186	0					
ANR	900536	IfStatement	if ( r_cons_is_breaked ( ) )		900186	0					
ANR	900537	Condition	r_cons_is_breaked ( )	4099:7:116894:116913	900186	0	True				
ANR	900538	CallExpression	r_cons_is_breaked ( )		900186	0					
ANR	900539	Callee	r_cons_is_breaked		900186	0					
ANR	900540	Identifier	r_cons_is_breaked		900186	0					
ANR	900541	ArgumentList			900186	1					
ANR	900542	CompoundStatement		48:29:1289:1289	900186	1					
ANR	900543	BreakStatement	break ;	4100:4:116922:116927	900186	0	True				
ANR	900544	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	4102:3:116937:116964	900186	1	True				
ANR	900545	CallExpression	"r_debug_step ( core -> dbg , 1 )"		900186	0					
ANR	900546	Callee	r_debug_step		900186	0					
ANR	900547	Identifier	r_debug_step		900186	0					
ANR	900548	ArgumentList	core -> dbg		900186	1					
ANR	900549	Argument	core -> dbg		900186	0					
ANR	900550	PtrMemberAccess	core -> dbg		900186	0					
ANR	900551	Identifier	core		900186	0					
ANR	900552	Identifier	dbg		900186	1					
ANR	900553	Argument	1		900186	1					
ANR	900554	PrimaryExpression	1		900186	0					
ANR	900555	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4103:3:116969:117020	900186	2	True				
ANR	900556	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		900186	0					
ANR	900557	Callee	r_debug_reg_sync		900186	0					
ANR	900558	Identifier	r_debug_reg_sync		900186	0					
ANR	900559	ArgumentList	core -> dbg		900186	1					
ANR	900560	Argument	core -> dbg		900186	0					
ANR	900561	PtrMemberAccess	core -> dbg		900186	0					
ANR	900562	Identifier	core		900186	0					
ANR	900563	Identifier	dbg		900186	1					
ANR	900564	Argument	R_REG_TYPE_GPR		900186	1					
ANR	900565	Identifier	R_REG_TYPE_GPR		900186	0					
ANR	900566	Argument	false		900186	2					
ANR	900567	Identifier	false		900186	0					
ANR	900568	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"	4104:3:117025:117063	900186	3	True				
ANR	900569	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		900186	0		=			
ANR	900570	Identifier	pc		900186	0					
ANR	900571	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		900186	1					
ANR	900572	Callee	r_debug_reg_get		900186	0					
ANR	900573	Identifier	r_debug_reg_get		900186	0					
ANR	900574	ArgumentList	core -> dbg		900186	1					
ANR	900575	Argument	core -> dbg		900186	0					
ANR	900576	PtrMemberAccess	core -> dbg		900186	0					
ANR	900577	Identifier	core		900186	0					
ANR	900578	Identifier	dbg		900186	1					
ANR	900579	Argument	"""PC"""		900186	1					
ANR	900580	PrimaryExpression	"""PC"""		900186	0					
ANR	900581	Statement	eprintf	4105:3:117068:117074	900186	4	True				
ANR	900582	Statement	(	4105:11:117076:117076	900186	5	True				
ANR	900583	Statement	"""Continue 0x%08"""	4105:12:117077:117092	900186	6	True				
ANR	900584	Statement	PFMT64x	4105:28:117093:117099	900186	7	True				
ANR	900585	Statement	""" > 0x%08"""	4105:35:117100:117109	900186	8	True				
ANR	900586	Statement	PFMT64x	4105:45:117110:117116	900186	9	True				
ANR	900587	Statement	""" < 0x%08"""	4105:52:117117:117126	900186	10	True				
ANR	900588	Statement	PFMT64x	4105:62:117127:117133	900186	11	True				
ANR	900589	Statement	"""\\n"""	4105:69:117134:117137	900186	12	True				
ANR	900590	Statement	","	4105:73:117138:117138	900186	13	True				
ANR	900591	Statement	from	4106:5:117145:117148	900186	14	True				
ANR	900592	Statement	","	4106:9:117149:117149	900186	15	True				
ANR	900593	Statement	pc	4106:11:117151:117152	900186	16	True				
ANR	900594	Statement	","	4106:13:117153:117153	900186	17	True				
ANR	900595	Statement	to	4106:15:117155:117156	900186	18	True				
ANR	900596	Statement	)	4106:17:117157:117157	900186	19	True				
ANR	900597	ExpressionStatement		4106:18:117158:117158	900186	20	True				
ANR	900598	Condition	pc < from || pc > to	4107:11:117171:117190	900186	1	True				
ANR	900599	OrExpression	pc < from || pc > to		900186	0		||			
ANR	900600	RelationalExpression	pc < from		900186	0		<			
ANR	900601	Identifier	pc		900186	0					
ANR	900602	Identifier	from		900186	1					
ANR	900603	RelationalExpression	pc > to		900186	1		>			
ANR	900604	Identifier	pc		900186	0					
ANR	900605	Identifier	to		900186	1					
ANR	900606	ExpressionStatement	r_cons_break_pop ( )	4108:2:117196:117215	900186	2	True				
ANR	900607	CallExpression	r_cons_break_pop ( )		900186	0					
ANR	900608	Callee	r_cons_break_pop		900186	0					
ANR	900609	Identifier	r_cons_break_pop		900186	0					
ANR	900610	ArgumentList			900186	1					
ANR	900611	ElseStatement	else		900186	0					
ANR	900612	CompoundStatement		59:2:1602:1618	900186	0					
ANR	900613	IdentifierDeclStatement	ut64 addr = from ;	4110:2:117229:117245	900186	0	True				
ANR	900614	IdentifierDecl	addr = from		900186	0					
ANR	900615	IdentifierDeclType	ut64		900186	0					
ANR	900616	Identifier	addr		900186	1					
ANR	900617	AssignmentExpression	addr = from		900186	2		=			
ANR	900618	Identifier	from		900186	0					
ANR	900619	Identifier	from		900186	1					
ANR	900620	IfStatement	"if ( ! strcmp ( core -> dbg -> btalgo , ""trace"" ) && core -> dbg -> arch && ! strcmp ( core -> dbg -> arch , ""x86"" ) && core -> dbg -> bits == 4 )"		900186	1					
ANR	900621	Condition	"! strcmp ( core -> dbg -> btalgo , ""trace"" ) && core -> dbg -> arch && ! strcmp ( core -> dbg -> arch , ""x86"" ) && core -> dbg -> bits == 4"	4111:6:117253:117373	900186	0	True				
ANR	900622	AndExpression	"! strcmp ( core -> dbg -> btalgo , ""trace"" ) && core -> dbg -> arch && ! strcmp ( core -> dbg -> arch , ""x86"" ) && core -> dbg -> bits == 4"		900186	0		&&			
ANR	900623	UnaryOperationExpression	"! strcmp ( core -> dbg -> btalgo , ""trace"" )"		900186	0					
ANR	900624	UnaryOperator	!		900186	0					
ANR	900625	CallExpression	"strcmp ( core -> dbg -> btalgo , ""trace"" )"		900186	1					
ANR	900626	Callee	strcmp		900186	0					
ANR	900627	Identifier	strcmp		900186	0					
ANR	900628	ArgumentList	core -> dbg -> btalgo		900186	1					
ANR	900629	Argument	core -> dbg -> btalgo		900186	0					
ANR	900630	PtrMemberAccess	core -> dbg -> btalgo		900186	0					
ANR	900631	PtrMemberAccess	core -> dbg		900186	0					
ANR	900632	Identifier	core		900186	0					
ANR	900633	Identifier	dbg		900186	1					
ANR	900634	Identifier	btalgo		900186	1					
ANR	900635	Argument	"""trace"""		900186	1					
ANR	900636	PrimaryExpression	"""trace"""		900186	0					
ANR	900637	AndExpression	"core -> dbg -> arch && ! strcmp ( core -> dbg -> arch , ""x86"" ) && core -> dbg -> bits == 4"		900186	1		&&			
ANR	900638	PtrMemberAccess	core -> dbg -> arch		900186	0					
ANR	900639	PtrMemberAccess	core -> dbg		900186	0					
ANR	900640	Identifier	core		900186	0					
ANR	900641	Identifier	dbg		900186	1					
ANR	900642	Identifier	arch		900186	1					
ANR	900643	AndExpression	"! strcmp ( core -> dbg -> arch , ""x86"" ) && core -> dbg -> bits == 4"		900186	1		&&			
ANR	900644	UnaryOperationExpression	"! strcmp ( core -> dbg -> arch , ""x86"" )"		900186	0					
ANR	900645	UnaryOperator	!		900186	0					
ANR	900646	CallExpression	"strcmp ( core -> dbg -> arch , ""x86"" )"		900186	1					
ANR	900647	Callee	strcmp		900186	0					
ANR	900648	Identifier	strcmp		900186	0					
ANR	900649	ArgumentList	core -> dbg -> arch		900186	1					
ANR	900650	Argument	core -> dbg -> arch		900186	0					
ANR	900651	PtrMemberAccess	core -> dbg -> arch		900186	0					
ANR	900652	PtrMemberAccess	core -> dbg		900186	0					
ANR	900653	Identifier	core		900186	0					
ANR	900654	Identifier	dbg		900186	1					
ANR	900655	Identifier	arch		900186	1					
ANR	900656	Argument	"""x86"""		900186	1					
ANR	900657	PrimaryExpression	"""x86"""		900186	0					
ANR	900658	EqualityExpression	core -> dbg -> bits == 4		900186	1		==			
ANR	900659	PtrMemberAccess	core -> dbg -> bits		900186	0					
ANR	900660	PtrMemberAccess	core -> dbg		900186	0					
ANR	900661	Identifier	core		900186	0					
ANR	900662	Identifier	dbg		900186	1					
ANR	900663	Identifier	bits		900186	1					
ANR	900664	PrimaryExpression	4		900186	1					
ANR	900665	CompoundStatement		69:3:2006:2025	900186	1					
ANR	900666	IdentifierDeclStatement	unsigned long steps = 0 ;	4113:3:117381:117404	900186	0	True				
ANR	900667	IdentifierDecl	steps = 0		900186	0					
ANR	900668	IdentifierDeclType	unsigned long		900186	0					
ANR	900669	Identifier	steps		900186	1					
ANR	900670	AssignmentExpression	steps = 0		900186	2		=			
ANR	900671	Identifier	steps		900186	0					
ANR	900672	PrimaryExpression	0		900186	1					
ANR	900673	IdentifierDeclStatement	long level = 0 ;	4114:3:117409:117423	900186	1	True				
ANR	900674	IdentifierDecl	level = 0		900186	0					
ANR	900675	IdentifierDeclType	long		900186	0					
ANR	900676	Identifier	level		900186	1					
ANR	900677	AssignmentExpression	level = 0		900186	2		=			
ANR	900678	Identifier	level		900186	0					
ANR	900679	PrimaryExpression	0		900186	1					
ANR	900680	IdentifierDeclStatement	const char * pc_name = core -> dbg -> reg -> name [ R_REG_NAME_PC ] ;	4115:3:117428:117485	900186	2	True				
ANR	900681	IdentifierDecl	* pc_name = core -> dbg -> reg -> name [ R_REG_NAME_PC ]		900186	0					
ANR	900682	IdentifierDeclType	const char *		900186	0					
ANR	900683	Identifier	pc_name		900186	1					
ANR	900684	AssignmentExpression	* pc_name = core -> dbg -> reg -> name [ R_REG_NAME_PC ]		900186	2		=			
ANR	900685	Identifier	pc_name		900186	0					
ANR	900686	ArrayIndexing	core -> dbg -> reg -> name [ R_REG_NAME_PC ]		900186	1					
ANR	900687	PtrMemberAccess	core -> dbg -> reg -> name		900186	0					
ANR	900688	PtrMemberAccess	core -> dbg -> reg		900186	0					
ANR	900689	PtrMemberAccess	core -> dbg		900186	0					
ANR	900690	Identifier	core		900186	0					
ANR	900691	Identifier	dbg		900186	1					
ANR	900692	Identifier	reg		900186	1					
ANR	900693	Identifier	name		900186	1					
ANR	900694	Identifier	R_REG_NAME_PC		900186	1					
ANR	900695	IdentifierDeclStatement	ut64 prev_pc = UT64_MAX ;	4116:3:117490:117513	900186	3	True				
ANR	900696	IdentifierDecl	prev_pc = UT64_MAX		900186	0					
ANR	900697	IdentifierDeclType	ut64		900186	0					
ANR	900698	Identifier	prev_pc		900186	1					
ANR	900699	AssignmentExpression	prev_pc = UT64_MAX		900186	2		=			
ANR	900700	Identifier	UT64_MAX		900186	0					
ANR	900701	Identifier	UT64_MAX		900186	1					
ANR	900702	IdentifierDeclStatement	bool prev_call = false ;	4117:3:117518:117540	900186	4	True				
ANR	900703	IdentifierDecl	prev_call = false		900186	0					
ANR	900704	IdentifierDeclType	bool		900186	0					
ANR	900705	Identifier	prev_call		900186	1					
ANR	900706	AssignmentExpression	prev_call = false		900186	2		=			
ANR	900707	Identifier	false		900186	0					
ANR	900708	Identifier	false		900186	1					
ANR	900709	IdentifierDeclStatement	bool prev_ret = false ;	4118:3:117545:117566	900186	5	True				
ANR	900710	IdentifierDecl	prev_ret = false		900186	0					
ANR	900711	IdentifierDeclType	bool		900186	0					
ANR	900712	Identifier	prev_ret		900186	1					
ANR	900713	AssignmentExpression	prev_ret = false		900186	2		=			
ANR	900714	Identifier	false		900186	0					
ANR	900715	Identifier	false		900186	1					
ANR	900716	IdentifierDeclStatement	const char * sp_name = core -> dbg -> reg -> name [ R_REG_NAME_SP ] ;	4119:3:117571:117628	900186	6	True				
ANR	900717	IdentifierDecl	* sp_name = core -> dbg -> reg -> name [ R_REG_NAME_SP ]		900186	0					
ANR	900718	IdentifierDeclType	const char *		900186	0					
ANR	900719	Identifier	sp_name		900186	1					
ANR	900720	AssignmentExpression	* sp_name = core -> dbg -> reg -> name [ R_REG_NAME_SP ]		900186	2		=			
ANR	900721	Identifier	sp_name		900186	0					
ANR	900722	ArrayIndexing	core -> dbg -> reg -> name [ R_REG_NAME_SP ]		900186	1					
ANR	900723	PtrMemberAccess	core -> dbg -> reg -> name		900186	0					
ANR	900724	PtrMemberAccess	core -> dbg -> reg		900186	0					
ANR	900725	PtrMemberAccess	core -> dbg		900186	0					
ANR	900726	Identifier	core		900186	0					
ANR	900727	Identifier	dbg		900186	1					
ANR	900728	Identifier	reg		900186	1					
ANR	900729	Identifier	name		900186	1					
ANR	900730	Identifier	R_REG_NAME_SP		900186	1					
ANR	900731	IdentifierDeclStatement	"ut64 old_sp , cur_sp ;"	4120:3:117633:117652	900186	7	True				
ANR	900732	IdentifierDecl	old_sp		900186	0					
ANR	900733	IdentifierDeclType	ut64		900186	0					
ANR	900734	Identifier	old_sp		900186	1					
ANR	900735	IdentifierDecl	cur_sp		900186	1					
ANR	900736	IdentifierDeclType	ut64		900186	0					
ANR	900737	Identifier	cur_sp		900186	1					
ANR	900738	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	4121:3:117657:117687	900186	8	True				
ANR	900739	CallExpression	"r_cons_break_push ( NULL , NULL )"		900186	0					
ANR	900740	Callee	r_cons_break_push		900186	0					
ANR	900741	Identifier	r_cons_break_push		900186	0					
ANR	900742	ArgumentList	NULL		900186	1					
ANR	900743	Argument	NULL		900186	0					
ANR	900744	Identifier	NULL		900186	0					
ANR	900745	Argument	NULL		900186	1					
ANR	900746	Identifier	NULL		900186	0					
ANR	900747	ExpressionStatement	r_list_free ( core -> dbg -> call_frames )	4122:3:117692:117728	900186	9	True				
ANR	900748	CallExpression	r_list_free ( core -> dbg -> call_frames )		900186	0					
ANR	900749	Callee	r_list_free		900186	0					
ANR	900750	Identifier	r_list_free		900186	0					
ANR	900751	ArgumentList	core -> dbg -> call_frames		900186	1					
ANR	900752	Argument	core -> dbg -> call_frames		900186	0					
ANR	900753	PtrMemberAccess	core -> dbg -> call_frames		900186	0					
ANR	900754	PtrMemberAccess	core -> dbg		900186	0					
ANR	900755	Identifier	core		900186	0					
ANR	900756	Identifier	dbg		900186	1					
ANR	900757	Identifier	call_frames		900186	1					
ANR	900758	ExpressionStatement	core -> dbg -> call_frames = r_list_new ( )	4123:3:117733:117771	900186	10	True				
ANR	900759	AssignmentExpression	core -> dbg -> call_frames = r_list_new ( )		900186	0		=			
ANR	900760	PtrMemberAccess	core -> dbg -> call_frames		900186	0					
ANR	900761	PtrMemberAccess	core -> dbg		900186	0					
ANR	900762	Identifier	core		900186	0					
ANR	900763	Identifier	dbg		900186	1					
ANR	900764	Identifier	call_frames		900186	1					
ANR	900765	CallExpression	r_list_new ( )		900186	1					
ANR	900766	Callee	r_list_new		900186	0					
ANR	900767	Identifier	r_list_new		900186	0					
ANR	900768	ArgumentList			900186	1					
ANR	900769	ExpressionStatement	core -> dbg -> call_frames -> free = free	4124:3:117776:117811	900186	11	True				
ANR	900770	AssignmentExpression	core -> dbg -> call_frames -> free = free		900186	0		=			
ANR	900771	PtrMemberAccess	core -> dbg -> call_frames -> free		900186	0					
ANR	900772	PtrMemberAccess	core -> dbg -> call_frames		900186	0					
ANR	900773	PtrMemberAccess	core -> dbg		900186	0					
ANR	900774	Identifier	core		900186	0					
ANR	900775	Identifier	dbg		900186	1					
ANR	900776	Identifier	call_frames		900186	1					
ANR	900777	Identifier	free		900186	1					
ANR	900778	Identifier	free		900186	1					
ANR	900779	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4125:3:117816:117867	900186	12	True				
ANR	900780	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		900186	0					
ANR	900781	Callee	r_debug_reg_sync		900186	0					
ANR	900782	Identifier	r_debug_reg_sync		900186	0					
ANR	900783	ArgumentList	core -> dbg		900186	1					
ANR	900784	Argument	core -> dbg		900186	0					
ANR	900785	PtrMemberAccess	core -> dbg		900186	0					
ANR	900786	Identifier	core		900186	0					
ANR	900787	Identifier	dbg		900186	1					
ANR	900788	Argument	R_REG_TYPE_GPR		900186	1					
ANR	900789	Identifier	R_REG_TYPE_GPR		900186	0					
ANR	900790	Argument	false		900186	2					
ANR	900791	Identifier	false		900186	0					
ANR	900792	ExpressionStatement	"old_sp = r_debug_reg_get ( core -> dbg , sp_name )"	4126:3:117872:117917	900186	13	True				
ANR	900793	AssignmentExpression	"old_sp = r_debug_reg_get ( core -> dbg , sp_name )"		900186	0		=			
ANR	900794	Identifier	old_sp		900186	0					
ANR	900795	CallExpression	"r_debug_reg_get ( core -> dbg , sp_name )"		900186	1					
ANR	900796	Callee	r_debug_reg_get		900186	0					
ANR	900797	Identifier	r_debug_reg_get		900186	0					
ANR	900798	ArgumentList	core -> dbg		900186	1					
ANR	900799	Argument	core -> dbg		900186	0					
ANR	900800	PtrMemberAccess	core -> dbg		900186	0					
ANR	900801	Identifier	core		900186	0					
ANR	900802	Identifier	dbg		900186	1					
ANR	900803	Argument	sp_name		900186	1					
ANR	900804	Identifier	sp_name		900186	0					
ANR	900805	WhileStatement	while ( true )		900186	14					
ANR	900806	Condition	true	4127:10:117929:117932	900186	0	True				
ANR	900807	Identifier	true		900186	0					
ANR	900808	CompoundStatement		76:16:2308:2308	900186	1					
ANR	900809	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4128:4:117941:117992	900186	0	True				
ANR	900810	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		900186	0					
ANR	900811	Callee	r_debug_reg_sync		900186	0					
ANR	900812	Identifier	r_debug_reg_sync		900186	0					
ANR	900813	ArgumentList	core -> dbg		900186	1					
ANR	900814	Argument	core -> dbg		900186	0					
ANR	900815	PtrMemberAccess	core -> dbg		900186	0					
ANR	900816	Identifier	core		900186	0					
ANR	900817	Identifier	dbg		900186	1					
ANR	900818	Argument	R_REG_TYPE_GPR		900186	1					
ANR	900819	Identifier	R_REG_TYPE_GPR		900186	0					
ANR	900820	Argument	false		900186	2					
ANR	900821	Identifier	false		900186	0					
ANR	900822	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , pc_name )"	4129:4:117998:118039	900186	1	True				
ANR	900823	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , pc_name )"		900186	0		=			
ANR	900824	Identifier	pc		900186	0					
ANR	900825	CallExpression	"r_debug_reg_get ( core -> dbg , pc_name )"		900186	1					
ANR	900826	Callee	r_debug_reg_get		900186	0					
ANR	900827	Identifier	r_debug_reg_get		900186	0					
ANR	900828	ArgumentList	core -> dbg		900186	1					
ANR	900829	Argument	core -> dbg		900186	0					
ANR	900830	PtrMemberAccess	core -> dbg		900186	0					
ANR	900831	Identifier	core		900186	0					
ANR	900832	Identifier	dbg		900186	1					
ANR	900833	Argument	pc_name		900186	1					
ANR	900834	Identifier	pc_name		900186	0					
ANR	900835	IfStatement	if ( prev_call )		900186	2					
ANR	900836	Condition	prev_call	4130:8:118049:118057	900186	0	True				
ANR	900837	Identifier	prev_call		900186	0					
ANR	900838	CompoundStatement		81:5:2460:2501	900186	1					
ANR	900839	IdentifierDeclStatement	ut32 ret_addr ;	4131:5:118067:118080	900186	0	True				
ANR	900840	IdentifierDecl	ret_addr		900186	0					
ANR	900841	IdentifierDeclType	ut32		900186	0					
ANR	900842	Identifier	ret_addr		900186	1					
ANR	900843	IdentifierDeclStatement	RDebugFrame * frame = R_NEW0 ( RDebugFrame ) ;	4132:5:118087:118128	900186	1	True				
ANR	900844	IdentifierDecl	* frame = R_NEW0 ( RDebugFrame )		900186	0					
ANR	900845	IdentifierDeclType	RDebugFrame *		900186	0					
ANR	900846	Identifier	frame		900186	1					
ANR	900847	AssignmentExpression	* frame = R_NEW0 ( RDebugFrame )		900186	2		=			
ANR	900848	Identifier	frame		900186	0					
ANR	900849	CallExpression	R_NEW0 ( RDebugFrame )		900186	1					
ANR	900850	Callee	R_NEW0		900186	0					
ANR	900851	Identifier	R_NEW0		900186	0					
ANR	900852	ArgumentList	RDebugFrame		900186	1					
ANR	900853	Argument	RDebugFrame		900186	0					
ANR	900854	Identifier	RDebugFrame		900186	0					
ANR	900855	ExpressionStatement	"cur_sp = r_debug_reg_get ( core -> dbg , sp_name )"	4133:5:118135:118180	900186	2	True				
ANR	900856	AssignmentExpression	"cur_sp = r_debug_reg_get ( core -> dbg , sp_name )"		900186	0		=			
ANR	900857	Identifier	cur_sp		900186	0					
ANR	900858	CallExpression	"r_debug_reg_get ( core -> dbg , sp_name )"		900186	1					
ANR	900859	Callee	r_debug_reg_get		900186	0					
ANR	900860	Identifier	r_debug_reg_get		900186	0					
ANR	900861	ArgumentList	core -> dbg		900186	1					
ANR	900862	Argument	core -> dbg		900186	0					
ANR	900863	PtrMemberAccess	core -> dbg		900186	0					
ANR	900864	Identifier	core		900186	0					
ANR	900865	Identifier	dbg		900186	1					
ANR	900866	Argument	sp_name		900186	1					
ANR	900867	Identifier	sp_name		900186	0					
ANR	900868	ExpressionStatement	"( void ) core -> dbg -> iob . read_at ( core -> dbg -> iob . io , cur_sp , ( ut8 * ) & ret_addr , sizeof ( ret_addr ) )"	4134:5:118187:118315	900186	3	True				
ANR	900869	CastExpression	"( void ) core -> dbg -> iob . read_at ( core -> dbg -> iob . io , cur_sp , ( ut8 * ) & ret_addr , sizeof ( ret_addr ) )"		900186	0					
ANR	900870	CastTarget	void		900186	0					
ANR	900871	CallExpression	"core -> dbg -> iob . read_at ( core -> dbg -> iob . io , cur_sp , ( ut8 * ) & ret_addr , sizeof ( ret_addr ) )"		900186	1					
ANR	900872	Callee	core -> dbg -> iob . read_at		900186	0					
ANR	900873	MemberAccess	core -> dbg -> iob . read_at		900186	0					
ANR	900874	PtrMemberAccess	core -> dbg -> iob		900186	0					
ANR	900875	PtrMemberAccess	core -> dbg		900186	0					
ANR	900876	Identifier	core		900186	0					
ANR	900877	Identifier	dbg		900186	1					
ANR	900878	Identifier	iob		900186	1					
ANR	900879	Identifier	read_at		900186	1					
ANR	900880	ArgumentList	core -> dbg -> iob . io		900186	1					
ANR	900881	Argument	core -> dbg -> iob . io		900186	0					
ANR	900882	MemberAccess	core -> dbg -> iob . io		900186	0					
ANR	900883	PtrMemberAccess	core -> dbg -> iob		900186	0					
ANR	900884	PtrMemberAccess	core -> dbg		900186	0					
ANR	900885	Identifier	core		900186	0					
ANR	900886	Identifier	dbg		900186	1					
ANR	900887	Identifier	iob		900186	1					
ANR	900888	Identifier	io		900186	1					
ANR	900889	Argument	cur_sp		900186	1					
ANR	900890	Identifier	cur_sp		900186	0					
ANR	900891	Argument	( ut8 * ) & ret_addr		900186	2					
ANR	900892	CastExpression	( ut8 * ) & ret_addr		900186	0					
ANR	900893	CastTarget	ut8 *		900186	0					
ANR	900894	UnaryOperationExpression	& ret_addr		900186	1					
ANR	900895	UnaryOperator	&		900186	0					
ANR	900896	Identifier	ret_addr		900186	1					
ANR	900897	Argument	sizeof ( ret_addr )		900186	3					
ANR	900898	SizeofExpression	sizeof ( ret_addr )		900186	0					
ANR	900899	Sizeof	sizeof		900186	0					
ANR	900900	SizeofOperand	ret_addr		900186	1					
ANR	900901	ExpressionStatement	frame -> addr = ret_addr	4136:5:118322:118344	900186	4	True				
ANR	900902	AssignmentExpression	frame -> addr = ret_addr		900186	0		=			
ANR	900903	PtrMemberAccess	frame -> addr		900186	0					
ANR	900904	Identifier	frame		900186	0					
ANR	900905	Identifier	addr		900186	1					
ANR	900906	Identifier	ret_addr		900186	1					
ANR	900907	ExpressionStatement	frame -> size = old_sp - cur_sp	4137:5:118351:118380	900186	5	True				
ANR	900908	AssignmentExpression	frame -> size = old_sp - cur_sp		900186	0		=			
ANR	900909	PtrMemberAccess	frame -> size		900186	0					
ANR	900910	Identifier	frame		900186	0					
ANR	900911	Identifier	size		900186	1					
ANR	900912	AdditiveExpression	old_sp - cur_sp		900186	1		-			
ANR	900913	Identifier	old_sp		900186	0					
ANR	900914	Identifier	cur_sp		900186	1					
ANR	900915	ExpressionStatement	frame -> sp = cur_sp	4138:5:118387:118405	900186	6	True				
ANR	900916	AssignmentExpression	frame -> sp = cur_sp		900186	0		=			
ANR	900917	PtrMemberAccess	frame -> sp		900186	0					
ANR	900918	Identifier	frame		900186	0					
ANR	900919	Identifier	sp		900186	1					
ANR	900920	Identifier	cur_sp		900186	1					
ANR	900921	ExpressionStatement	frame -> bp = old_sp	4139:5:118412:118430	900186	7	True				
ANR	900922	AssignmentExpression	frame -> bp = old_sp		900186	0		=			
ANR	900923	PtrMemberAccess	frame -> bp		900186	0					
ANR	900924	Identifier	frame		900186	0					
ANR	900925	Identifier	bp		900186	1					
ANR	900926	Identifier	old_sp		900186	1					
ANR	900927	ExpressionStatement	"r_list_prepend ( core -> dbg -> call_frames , frame )"	4140:5:118437:118483	900186	8	True				
ANR	900928	CallExpression	"r_list_prepend ( core -> dbg -> call_frames , frame )"		900186	0					
ANR	900929	Callee	r_list_prepend		900186	0					
ANR	900930	Identifier	r_list_prepend		900186	0					
ANR	900931	ArgumentList	core -> dbg -> call_frames		900186	1					
ANR	900932	Argument	core -> dbg -> call_frames		900186	0					
ANR	900933	PtrMemberAccess	core -> dbg -> call_frames		900186	0					
ANR	900934	PtrMemberAccess	core -> dbg		900186	0					
ANR	900935	Identifier	core		900186	0					
ANR	900936	Identifier	dbg		900186	1					
ANR	900937	Identifier	call_frames		900186	1					
ANR	900938	Argument	frame		900186	1					
ANR	900939	Identifier	frame		900186	0					
ANR	900940	Statement	eprintf	4141:5:118490:118496	900186	9	True				
ANR	900941	Statement	(	4141:13:118498:118498	900186	10	True				
ANR	900942	Statement	"""%ld Call from 0x%08"""	4141:14:118499:118519	900186	11	True				
ANR	900943	Statement	PFMT64x	4141:35:118520:118526	900186	12	True				
ANR	900944	Statement	""" to 0x%08"""	4141:42:118527:118537	900186	13	True				
ANR	900945	Statement	PFMT64x	4141:53:118538:118544	900186	14	True				
ANR	900946	Statement	""" ret 0x%08"""	4141:60:118545:118556	900186	15	True				
ANR	900947	Statement	PFMT32x	4141:72:118557:118563	900186	16	True				
ANR	900948	Statement	"""\\n"""	4141:79:118564:118567	900186	17	True				
ANR	900949	Statement	","	4141:83:118568:118568	900186	18	True				
ANR	900950	Statement	level	4142:14:118584:118588	900186	19	True				
ANR	900951	Statement	","	4142:19:118589:118589	900186	20	True				
ANR	900952	Statement	prev_pc	4142:21:118591:118597	900186	21	True				
ANR	900953	Statement	","	4142:28:118598:118598	900186	22	True				
ANR	900954	Statement	pc	4142:30:118600:118601	900186	23	True				
ANR	900955	Statement	","	4142:32:118602:118602	900186	24	True				
ANR	900956	Statement	ret_addr	4142:34:118604:118611	900186	25	True				
ANR	900957	Statement	)	4142:42:118612:118612	900186	26	True				
ANR	900958	ExpressionStatement		4142:43:118613:118613	900186	27	True				
ANR	900959	ExpressionStatement	level ++	4143:5:118620:118627	900186	28	True				
ANR	900960	PostIncDecOperationExpression	level ++		900186	0					
ANR	900961	Identifier	level		900186	0					
ANR	900962	IncDec	++		900186	1					
ANR	900963	ExpressionStatement	old_sp = cur_sp	4144:5:118634:118649	900186	29	True				
ANR	900964	AssignmentExpression	old_sp = cur_sp		900186	0		=			
ANR	900965	Identifier	old_sp		900186	0					
ANR	900966	Identifier	cur_sp		900186	1					
ANR	900967	ExpressionStatement	prev_call = false	4145:5:118656:118673	900186	30	True				
ANR	900968	AssignmentExpression	prev_call = false		900186	0		=			
ANR	900969	Identifier	prev_call		900186	0					
ANR	900970	Identifier	false		900186	1					
ANR	900971	ElseStatement	else		900186	0					
ANR	900972	IfStatement	if ( prev_ret )		900186	0					
ANR	900973	Condition	prev_ret	4146:15:118690:118697	900186	0	True				
ANR	900974	Identifier	prev_ret		900186	0					
ANR	900975	CompoundStatement		96:5:3080:3142	900186	1					
ANR	900976	IdentifierDeclStatement	RDebugFrame * head = r_list_get_bottom ( core -> dbg -> call_frames ) ;	4147:5:118707:118769	900186	0	True				
ANR	900977	IdentifierDecl	* head = r_list_get_bottom ( core -> dbg -> call_frames )		900186	0					
ANR	900978	IdentifierDeclType	RDebugFrame *		900186	0					
ANR	900979	Identifier	head		900186	1					
ANR	900980	AssignmentExpression	* head = r_list_get_bottom ( core -> dbg -> call_frames )		900186	2		=			
ANR	900981	Identifier	head		900186	0					
ANR	900982	CallExpression	r_list_get_bottom ( core -> dbg -> call_frames )		900186	1					
ANR	900983	Callee	r_list_get_bottom		900186	0					
ANR	900984	Identifier	r_list_get_bottom		900186	0					
ANR	900985	ArgumentList	core -> dbg -> call_frames		900186	1					
ANR	900986	Argument	core -> dbg -> call_frames		900186	0					
ANR	900987	PtrMemberAccess	core -> dbg -> call_frames		900186	0					
ANR	900988	PtrMemberAccess	core -> dbg		900186	0					
ANR	900989	Identifier	core		900186	0					
ANR	900990	Identifier	dbg		900186	1					
ANR	900991	Identifier	call_frames		900186	1					
ANR	900992	IfStatement	if ( head && head -> addr != pc )		900186	1					
ANR	900993	Condition	head && head -> addr != pc	4148:9:118780:118803	900186	0	True				
ANR	900994	AndExpression	head && head -> addr != pc		900186	0		&&			
ANR	900995	Identifier	head		900186	0					
ANR	900996	EqualityExpression	head -> addr != pc		900186	1		!=			
ANR	900997	PtrMemberAccess	head -> addr		900186	0					
ANR	900998	Identifier	head		900186	0					
ANR	900999	Identifier	addr		900186	1					
ANR	901000	Identifier	pc		900186	1					
ANR	901001	CompoundStatement		97:35:3179:3179	900186	1					
ANR	901002	ExpressionStatement	"eprintf ( ""*"" )"	4149:6:118814:118827	900186	0	True				
ANR	901003	CallExpression	"eprintf ( ""*"" )"		900186	0					
ANR	901004	Callee	eprintf		900186	0					
ANR	901005	Identifier	eprintf		900186	0					
ANR	901006	ArgumentList	"""*"""		900186	1					
ANR	901007	Argument	"""*"""		900186	0					
ANR	901008	PrimaryExpression	"""*"""		900186	0					
ANR	901009	ElseStatement	else		900186	0					
ANR	901010	CompoundStatement		99:12:3214:3214	900186	0					
ANR	901011	ExpressionStatement	r_list_pop_head ( core -> dbg -> call_frames )	4151:6:118849:118889	900186	0	True				
ANR	901012	CallExpression	r_list_pop_head ( core -> dbg -> call_frames )		900186	0					
ANR	901013	Callee	r_list_pop_head		900186	0					
ANR	901014	Identifier	r_list_pop_head		900186	0					
ANR	901015	ArgumentList	core -> dbg -> call_frames		900186	1					
ANR	901016	Argument	core -> dbg -> call_frames		900186	0					
ANR	901017	PtrMemberAccess	core -> dbg -> call_frames		900186	0					
ANR	901018	PtrMemberAccess	core -> dbg		900186	0					
ANR	901019	Identifier	core		900186	0					
ANR	901020	Identifier	dbg		900186	1					
ANR	901021	Identifier	call_frames		900186	1					
ANR	901022	ExpressionStatement	"eprintf ( ""%ld"" , level )"	4152:6:118897:118919	900186	1	True				
ANR	901023	CallExpression	"eprintf ( ""%ld"" , level )"		900186	0					
ANR	901024	Callee	eprintf		900186	0					
ANR	901025	Identifier	eprintf		900186	0					
ANR	901026	ArgumentList	"""%ld"""		900186	1					
ANR	901027	Argument	"""%ld"""		900186	0					
ANR	901028	PrimaryExpression	"""%ld"""		900186	0					
ANR	901029	Argument	level		900186	1					
ANR	901030	Identifier	level		900186	0					
ANR	901031	ExpressionStatement	level --	4153:6:118927:118934	900186	2	True				
ANR	901032	PostIncDecOperationExpression	level --		900186	0					
ANR	901033	Identifier	level		900186	0					
ANR	901034	IncDec	--		900186	1					
ANR	901035	Statement	eprintf	4155:5:118948:118954	900186	2	True				
ANR	901036	Statement	(	4155:13:118956:118956	900186	3	True				
ANR	901037	Statement	""" Ret from 0x%08"""	4155:14:118957:118973	900186	4	True				
ANR	901038	Statement	PFMT64x	4155:31:118974:118980	900186	5	True				
ANR	901039	Statement	""" to 0x%08"""	4155:38:118981:118991	900186	6	True				
ANR	901040	Statement	PFMT64x	4155:49:118992:118998	900186	7	True				
ANR	901041	Statement	"""\\n"""	4155:56:118999:119002	900186	8	True				
ANR	901042	Statement	","	4155:60:119003:119003	900186	9	True				
ANR	901043	Statement	prev_pc	4156:14:119019:119025	900186	10	True				
ANR	901044	Statement	","	4156:21:119026:119026	900186	11	True				
ANR	901045	Statement	pc	4156:23:119028:119029	900186	12	True				
ANR	901046	Statement	)	4156:25:119030:119030	900186	13	True				
ANR	901047	ExpressionStatement		4156:26:119031:119031	900186	14	True				
ANR	901048	ExpressionStatement	prev_ret = false	4157:5:119038:119054	900186	15	True				
ANR	901049	AssignmentExpression	prev_ret = false		900186	0		=			
ANR	901050	Identifier	prev_ret		900186	0					
ANR	901051	Identifier	false		900186	1					
ANR	901052	IfStatement	if ( steps % 500 == 0 || pc == addr )		900186	3					
ANR	901053	Condition	steps % 500 == 0 || pc == addr	4159:8:119070:119099	900186	0	True				
ANR	901054	OrExpression	steps % 500 == 0 || pc == addr		900186	0		||			
ANR	901055	EqualityExpression	steps % 500 == 0		900186	0		==			
ANR	901056	MultiplicativeExpression	steps % 500		900186	0		%			
ANR	901057	Identifier	steps		900186	0					
ANR	901058	PrimaryExpression	500		900186	1					
ANR	901059	PrimaryExpression	0		900186	1					
ANR	901060	EqualityExpression	pc == addr		900186	1		==			
ANR	901061	Identifier	pc		900186	0					
ANR	901062	Identifier	addr		900186	1					
ANR	901063	CompoundStatement		108:40:3475:3475	900186	1					
ANR	901064	Statement	eprintf	4160:5:119109:119115	900186	0	True				
ANR	901065	Statement	(	4160:13:119117:119117	900186	1	True				
ANR	901066	Statement	"""At 0x%08"""	4160:14:119118:119127	900186	2	True				
ANR	901067	Statement	PFMT64x	4160:24:119128:119134	900186	3	True				
ANR	901068	Statement	""" after %lu steps\\n"""	4160:31:119135:119154	900186	4	True				
ANR	901069	Statement	","	4160:51:119155:119155	900186	5	True				
ANR	901070	Statement	pc	4160:53:119157:119158	900186	6	True				
ANR	901071	Statement	","	4160:55:119159:119159	900186	7	True				
ANR	901072	Statement	steps	4160:57:119161:119165	900186	8	True				
ANR	901073	Statement	)	4160:62:119166:119166	900186	9	True				
ANR	901074	ExpressionStatement		4160:63:119167:119167	900186	10	True				
ANR	901075	IfStatement	if ( r_cons_is_breaked ( ) || r_debug_is_dead ( core -> dbg ) || pc == addr )		900186	4					
ANR	901076	Condition	r_cons_is_breaked ( ) || r_debug_is_dead ( core -> dbg ) || pc == addr	4162:8:119183:119247	900186	0	True				
ANR	901077	OrExpression	r_cons_is_breaked ( ) || r_debug_is_dead ( core -> dbg ) || pc == addr		900186	0		||			
ANR	901078	CallExpression	r_cons_is_breaked ( )		900186	0					
ANR	901079	Callee	r_cons_is_breaked		900186	0					
ANR	901080	Identifier	r_cons_is_breaked		900186	0					
ANR	901081	ArgumentList			900186	1					
ANR	901082	OrExpression	r_debug_is_dead ( core -> dbg ) || pc == addr		900186	1		||			
ANR	901083	CallExpression	r_debug_is_dead ( core -> dbg )		900186	0					
ANR	901084	Callee	r_debug_is_dead		900186	0					
ANR	901085	Identifier	r_debug_is_dead		900186	0					
ANR	901086	ArgumentList	core -> dbg		900186	1					
ANR	901087	Argument	core -> dbg		900186	0					
ANR	901088	PtrMemberAccess	core -> dbg		900186	0					
ANR	901089	Identifier	core		900186	0					
ANR	901090	Identifier	dbg		900186	1					
ANR	901091	EqualityExpression	pc == addr		900186	1		==			
ANR	901092	Identifier	pc		900186	0					
ANR	901093	Identifier	addr		900186	1					
ANR	901094	CompoundStatement		111:75:3623:3623	900186	1					
ANR	901095	BreakStatement	break ;	4163:5:119257:119262	900186	0	True				
ANR	901096	IfStatement	"if ( is_x86_call ( core -> dbg , pc ) )"		900186	5					
ANR	901097	Condition	"is_x86_call ( core -> dbg , pc )"	4165:8:119278:119304	900186	0	True				
ANR	901098	CallExpression	"is_x86_call ( core -> dbg , pc )"		900186	0					
ANR	901099	Callee	is_x86_call		900186	0					
ANR	901100	Identifier	is_x86_call		900186	0					
ANR	901101	ArgumentList	core -> dbg		900186	1					
ANR	901102	Argument	core -> dbg		900186	0					
ANR	901103	PtrMemberAccess	core -> dbg		900186	0					
ANR	901104	Identifier	core		900186	0					
ANR	901105	Identifier	dbg		900186	1					
ANR	901106	Argument	pc		900186	1					
ANR	901107	Identifier	pc		900186	0					
ANR	901108	CompoundStatement		114:37:3680:3680	900186	1					
ANR	901109	ExpressionStatement	prev_pc = pc	4166:5:119314:119326	900186	0	True				
ANR	901110	AssignmentExpression	prev_pc = pc		900186	0		=			
ANR	901111	Identifier	prev_pc		900186	0					
ANR	901112	Identifier	pc		900186	1					
ANR	901113	ExpressionStatement	prev_call = true	4167:5:119333:119349	900186	1	True				
ANR	901114	AssignmentExpression	prev_call = true		900186	0		=			
ANR	901115	Identifier	prev_call		900186	0					
ANR	901116	Identifier	true		900186	1					
ANR	901117	ElseStatement	else		900186	0					
ANR	901118	IfStatement	"if ( is_x86_ret ( core -> dbg , pc ) )"		900186	0					
ANR	901119	Condition	"is_x86_ret ( core -> dbg , pc )"	4168:15:119366:119391	900186	0	True				
ANR	901120	CallExpression	"is_x86_ret ( core -> dbg , pc )"		900186	0					
ANR	901121	Callee	is_x86_ret		900186	0					
ANR	901122	Identifier	is_x86_ret		900186	0					
ANR	901123	ArgumentList	core -> dbg		900186	1					
ANR	901124	Argument	core -> dbg		900186	0					
ANR	901125	PtrMemberAccess	core -> dbg		900186	0					
ANR	901126	Identifier	core		900186	0					
ANR	901127	Identifier	dbg		900186	1					
ANR	901128	Argument	pc		900186	1					
ANR	901129	Identifier	pc		900186	0					
ANR	901130	CompoundStatement		117:43:3767:3767	900186	1					
ANR	901131	ExpressionStatement	prev_pc = pc	4169:5:119401:119413	900186	0	True				
ANR	901132	AssignmentExpression	prev_pc = pc		900186	0		=			
ANR	901133	Identifier	prev_pc		900186	0					
ANR	901134	Identifier	pc		900186	1					
ANR	901135	ExpressionStatement	prev_ret = true	4170:5:119420:119435	900186	1	True				
ANR	901136	AssignmentExpression	prev_ret = true		900186	0		=			
ANR	901137	Identifier	prev_ret		900186	0					
ANR	901138	Identifier	true		900186	1					
ANR	901139	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	4172:4:119447:119474	900186	6	True				
ANR	901140	CallExpression	"r_debug_step ( core -> dbg , 1 )"		900186	0					
ANR	901141	Callee	r_debug_step		900186	0					
ANR	901142	Identifier	r_debug_step		900186	0					
ANR	901143	ArgumentList	core -> dbg		900186	1					
ANR	901144	Argument	core -> dbg		900186	0					
ANR	901145	PtrMemberAccess	core -> dbg		900186	0					
ANR	901146	Identifier	core		900186	0					
ANR	901147	Identifier	dbg		900186	1					
ANR	901148	Argument	1		900186	1					
ANR	901149	PrimaryExpression	1		900186	0					
ANR	901150	ExpressionStatement	steps ++	4173:4:119480:119487	900186	7	True				
ANR	901151	PostIncDecOperationExpression	steps ++		900186	0					
ANR	901152	Identifier	steps		900186	0					
ANR	901153	IncDec	++		900186	1					
ANR	901154	ExpressionStatement	r_cons_break_pop ( )	4175:3:119497:119516	900186	15	True				
ANR	901155	CallExpression	r_cons_break_pop ( )		900186	0					
ANR	901156	Callee	r_cons_break_pop		900186	0					
ANR	901157	Identifier	r_cons_break_pop		900186	0					
ANR	901158	ArgumentList			900186	1					
ANR	901159	ReturnStatement	return true ;	4176:3:119521:119532	900186	16	True				
ANR	901160	Identifier	true		900186	0					
ANR	901161	Statement	eprintf	4178:2:119540:119546	900186	2	True				
ANR	901162	Statement	(	4178:10:119548:119548	900186	3	True				
ANR	901163	Statement	"""Continue until 0x%08"""	4178:11:119549:119570	900186	4	True				
ANR	901164	Statement	PFMT64x	4178:33:119571:119577	900186	5	True				
ANR	901165	Statement	""" using %d bpsize\\n"""	4178:40:119578:119597	900186	6	True				
ANR	901166	Statement	","	4178:60:119598:119598	900186	7	True				
ANR	901167	Statement	addr	4178:62:119600:119603	900186	8	True				
ANR	901168	Statement	","	4178:66:119604:119604	900186	9	True				
ANR	901169	Statement	core	4178:68:119606:119609	900186	10	True				
ANR	901170	Statement	->	4178:72:119610:119611	900186	11	True				
ANR	901171	Statement	dbg	4178:74:119612:119614	900186	12	True				
ANR	901172	Statement	->	4178:77:119615:119616	900186	13	True				
ANR	901173	Statement	bpsize	4178:79:119617:119622	900186	14	True				
ANR	901174	Statement	)	4178:85:119623:119623	900186	15	True				
ANR	901175	ExpressionStatement		4178:86:119624:119624	900186	16	True				
ANR	901176	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4179:2:119628:119667	900186	17	True				
ANR	901177	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		900186	0					
ANR	901178	Callee	r_reg_arena_swap		900186	0					
ANR	901179	Identifier	r_reg_arena_swap		900186	0					
ANR	901180	ArgumentList	core -> dbg -> reg		900186	1					
ANR	901181	Argument	core -> dbg -> reg		900186	0					
ANR	901182	PtrMemberAccess	core -> dbg -> reg		900186	0					
ANR	901183	PtrMemberAccess	core -> dbg		900186	0					
ANR	901184	Identifier	core		900186	0					
ANR	901185	Identifier	dbg		900186	1					
ANR	901186	Identifier	reg		900186	1					
ANR	901187	Argument	true		900186	1					
ANR	901188	Identifier	true		900186	0					
ANR	901189	IfStatement	"if ( r_bp_add_sw ( core -> dbg -> bp , addr , core -> dbg -> bpsize , R_BP_PROT_EXEC ) )"		900186	18					
ANR	901190	Condition	"r_bp_add_sw ( core -> dbg -> bp , addr , core -> dbg -> bpsize , R_BP_PROT_EXEC )"	4180:6:119675:119742	900186	0	True				
ANR	901191	CallExpression	"r_bp_add_sw ( core -> dbg -> bp , addr , core -> dbg -> bpsize , R_BP_PROT_EXEC )"		900186	0					
ANR	901192	Callee	r_bp_add_sw		900186	0					
ANR	901193	Identifier	r_bp_add_sw		900186	0					
ANR	901194	ArgumentList	core -> dbg -> bp		900186	1					
ANR	901195	Argument	core -> dbg -> bp		900186	0					
ANR	901196	PtrMemberAccess	core -> dbg -> bp		900186	0					
ANR	901197	PtrMemberAccess	core -> dbg		900186	0					
ANR	901198	Identifier	core		900186	0					
ANR	901199	Identifier	dbg		900186	1					
ANR	901200	Identifier	bp		900186	1					
ANR	901201	Argument	addr		900186	1					
ANR	901202	Identifier	addr		900186	0					
ANR	901203	Argument	core -> dbg -> bpsize		900186	2					
ANR	901204	PtrMemberAccess	core -> dbg -> bpsize		900186	0					
ANR	901205	PtrMemberAccess	core -> dbg		900186	0					
ANR	901206	Identifier	core		900186	0					
ANR	901207	Identifier	dbg		900186	1					
ANR	901208	Identifier	bpsize		900186	1					
ANR	901209	Argument	R_BP_PROT_EXEC		900186	3					
ANR	901210	Identifier	R_BP_PROT_EXEC		900186	0					
ANR	901211	CompoundStatement		129:76:4118:4118	900186	1					
ANR	901212	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		900186	0					
ANR	901213	Condition	r_debug_is_dead ( core -> dbg )	4181:7:119754:119780	900186	0	True				
ANR	901214	CallExpression	r_debug_is_dead ( core -> dbg )		900186	0					
ANR	901215	Callee	r_debug_is_dead		900186	0					
ANR	901216	Identifier	r_debug_is_dead		900186	0					
ANR	901217	ArgumentList	core -> dbg		900186	1					
ANR	901218	Argument	core -> dbg		900186	0					
ANR	901219	PtrMemberAccess	core -> dbg		900186	0					
ANR	901220	Identifier	core		900186	0					
ANR	901221	Identifier	dbg		900186	1					
ANR	901222	CompoundStatement		130:36:4156:4156	900186	1					
ANR	901223	ExpressionStatement	"eprintf ( ""Cannot continue, run ood?\\n"" )"	4182:4:119789:119828	900186	0	True				
ANR	901224	CallExpression	"eprintf ( ""Cannot continue, run ood?\\n"" )"		900186	0					
ANR	901225	Callee	eprintf		900186	0					
ANR	901226	Identifier	eprintf		900186	0					
ANR	901227	ArgumentList	"""Cannot continue, run ood?\\n"""		900186	1					
ANR	901228	Argument	"""Cannot continue, run ood?\\n"""		900186	0					
ANR	901229	PrimaryExpression	"""Cannot continue, run ood?\\n"""		900186	0					
ANR	901230	ElseStatement	else		900186	0					
ANR	901231	CompoundStatement		132:10:4213:4213	900186	0					
ANR	901232	ExpressionStatement	r_debug_continue ( core -> dbg )	4184:4:119846:119874	900186	0	True				
ANR	901233	CallExpression	r_debug_continue ( core -> dbg )		900186	0					
ANR	901234	Callee	r_debug_continue		900186	0					
ANR	901235	Identifier	r_debug_continue		900186	0					
ANR	901236	ArgumentList	core -> dbg		900186	1					
ANR	901237	Argument	core -> dbg		900186	0					
ANR	901238	PtrMemberAccess	core -> dbg		900186	0					
ANR	901239	Identifier	core		900186	0					
ANR	901240	Identifier	dbg		900186	1					
ANR	901241	ExpressionStatement	"r_bp_del ( core -> dbg -> bp , addr )"	4186:3:119884:119914	900186	1	True				
ANR	901242	CallExpression	"r_bp_del ( core -> dbg -> bp , addr )"		900186	0					
ANR	901243	Callee	r_bp_del		900186	0					
ANR	901244	Identifier	r_bp_del		900186	0					
ANR	901245	ArgumentList	core -> dbg -> bp		900186	1					
ANR	901246	Argument	core -> dbg -> bp		900186	0					
ANR	901247	PtrMemberAccess	core -> dbg -> bp		900186	0					
ANR	901248	PtrMemberAccess	core -> dbg		900186	0					
ANR	901249	Identifier	core		900186	0					
ANR	901250	Identifier	dbg		900186	1					
ANR	901251	Identifier	bp		900186	1					
ANR	901252	Argument	addr		900186	1					
ANR	901253	Identifier	addr		900186	0					
ANR	901254	ElseStatement	else		900186	0					
ANR	901255	CompoundStatement		136:9:4298:4298	900186	0					
ANR	901256	Statement	eprintf	4188:3:119930:119936	900186	0	True				
ANR	901257	Statement	(	4188:11:119938:119938	900186	1	True				
ANR	901258	Statement	"""Cannot set breakpoint of size %d at 0x%08"""	4188:12:119939:119981	900186	2	True				
ANR	901259	Statement	PFMT64x	4188:55:119982:119988	900186	3	True				
ANR	901260	Statement	"""\\n"""	4188:62:119989:119992	900186	4	True				
ANR	901261	Statement	","	4188:66:119993:119993	900186	5	True				
ANR	901262	Statement	core	4189:4:119999:120002	900186	6	True				
ANR	901263	Statement	->	4189:8:120003:120004	900186	7	True				
ANR	901264	Statement	dbg	4189:10:120005:120007	900186	8	True				
ANR	901265	Statement	->	4189:13:120008:120009	900186	9	True				
ANR	901266	Statement	bpsize	4189:15:120010:120015	900186	10	True				
ANR	901267	Statement	","	4189:21:120016:120016	900186	11	True				
ANR	901268	Statement	addr	4189:23:120018:120021	900186	12	True				
ANR	901269	Statement	)	4189:27:120022:120022	900186	13	True				
ANR	901270	ExpressionStatement		4189:28:120023:120023	900186	14	True				
ANR	901271	ReturnStatement	return true ;	4192:1:120033:120044	900186	10	True				
ANR	901272	Identifier	true		900186	0					
ANR	901273	ReturnType	static bool		900186	1					
ANR	901274	Identifier	cmd_dcu		900186	2					
ANR	901275	ParameterList	"RCore * core , const char * input"		900186	3					
ANR	901276	Parameter	RCore * core	4052:21:115594:115604	900186	0	True				
ANR	901277	ParameterType	RCore *		900186	0					
ANR	901278	Identifier	core		900186	1					
ANR	901279	Parameter	const char * input	4052:34:115607:115623	900186	1	True				
ANR	901280	ParameterType	const char *		900186	0					
ANR	901281	Identifier	input		900186	1					
ANR	901282	CFGEntryNode	ENTRY		900186		True				
ANR	901283	CFGExitNode	EXIT		900186		True				
ANR	901284	Symbol	core -> dbg -> iob . io		900186						
ANR	901285	Symbol	frame -> bp		900186						
ANR	901286	Symbol	R_REG_NAME_PC		900186						
ANR	901287	Symbol	r_debug_reg_get		900186						
ANR	901288	Symbol	* input		900186						
ANR	901289	Symbol	strchr		900186						
ANR	901290	Symbol	core -> offset		900186						
ANR	901291	Symbol	* head		900186						
ANR	901292	Symbol	core -> dbg -> bp		900186						
ANR	901293	Symbol	dcu_range		900186						
ANR	901294	Symbol	core -> dbg -> iob		900186						
ANR	901295	Symbol	head -> addr		900186						
ANR	901296	Symbol	frame -> sp		900186						
ANR	901297	Symbol	r_num_tail		900186						
ANR	901298	Symbol	* * core -> dbg -> reg		900186						
ANR	901299	Symbol	* core -> dbg -> reg		900186						
ANR	901300	Symbol	* ptr		900186						
ANR	901301	Symbol	from		900186						
ANR	901302	Symbol	* core -> num		900186						
ANR	901303	Symbol	prev_ret		900186						
ANR	901304	Symbol	core -> num		900186						
ANR	901305	Symbol	strcmp		900186						
ANR	901306	Symbol	r_cons_is_interactive		900186						
ANR	901307	Symbol	NULL		900186						
ANR	901308	Symbol	core -> dbg -> reg -> name		900186						
ANR	901309	Symbol	level		900186						
ANR	901310	Symbol	core -> dbg -> arch		900186						
ANR	901311	Symbol	cur_sp		900186						
ANR	901312	Symbol	core -> num -> nc . calc_buf		900186						
ANR	901313	Symbol	steps		900186						
ANR	901314	Symbol	core		900186						
ANR	901315	Symbol	input		900186						
ANR	901316	Symbol	* * * core		900186						
ANR	901317	Symbol	R_NEW0		900186						
ANR	901318	Symbol	r_list_get_bottom		900186						
ANR	901319	Symbol	r_bp_add_sw		900186						
ANR	901320	Symbol	R_REG_NAME_SP		900186						
ANR	901321	Symbol	core -> dbg -> call_frames -> free		900186						
ANR	901322	Symbol	* core -> dbg -> reg -> name		900186						
ANR	901323	Symbol	invalid		900186						
ANR	901324	Symbol	true		900186						
ANR	901325	Symbol	prev_call		900186						
ANR	901326	Symbol	ret_addr		900186						
ANR	901327	Symbol	* core -> dbg -> call_frames		900186						
ANR	901328	Symbol	* core -> dbg		900186						
ANR	901329	Symbol	frame		900186						
ANR	901330	Symbol	core -> num -> nc		900186						
ANR	901331	Symbol	pc_name		900186						
ANR	901332	Symbol	* R_REG_NAME_SP		900186						
ANR	901333	Symbol	* frame		900186						
ANR	901334	Symbol	* core		900186						
ANR	901335	Symbol	core -> num -> nc . errors		900186						
ANR	901336	Symbol	core -> dbg -> bpsize		900186						
ANR	901337	Symbol	RDebugFrame		900186						
ANR	901338	Symbol	is_x86_ret		900186						
ANR	901339	Symbol	r_num_math		900186						
ANR	901340	Symbol	head		900186						
ANR	901341	Symbol	r_cons_is_breaked		900186						
ANR	901342	Symbol	* * * core -> dbg		900186						
ANR	901343	Symbol	sp_name		900186						
ANR	901344	Symbol	is_x86_call		900186						
ANR	901345	Symbol	core -> dbg -> bits		900186						
ANR	901346	Symbol	* R_REG_NAME_PC		900186						
ANR	901347	Symbol	frame -> addr		900186						
ANR	901348	Symbol	UT64_MAX		900186						
ANR	901349	Symbol	addr		900186						
ANR	901350	Symbol	* * * * core		900186						
ANR	901351	Symbol	free		900186						
ANR	901352	Symbol	* * core		900186						
ANR	901353	Symbol	R_REG_TYPE_GPR		900186						
ANR	901354	Symbol	& ret_addr		900186						
ANR	901355	Symbol	help_msg_dcu		900186						
ANR	901356	Symbol	core -> dbg -> call_frames		900186						
ANR	901357	Symbol	false		900186						
ANR	901358	Symbol	core -> dbg -> btalgo		900186						
ANR	901359	Symbol	ptr		900186						
ANR	901360	Symbol	r_debug_is_dead		900186						
ANR	901361	Symbol	pc		900186						
ANR	901362	Symbol	R_BP_PROT_EXEC		900186						
ANR	901363	Symbol	core -> dbg -> reg		900186						
ANR	901364	Symbol	prev_pc		900186						
ANR	901365	Symbol	to		900186						
ANR	901366	Symbol	frame -> size		900186						
ANR	901367	Symbol	core -> dbg		900186						
ANR	901368	Symbol	* * core -> dbg		900186						
ANR	901369	Symbol	old_sp		900186						
ANR	901370	Symbol	r_list_new		900186						
ANR	901371	Function	cmd_debug_continue	4195:0:120049:123547							
ANR	901372	FunctionDef	"cmd_debug_continue (RCore * core , const char * input)"		901371	0					
ANR	901373	CompoundStatement		4195:63:120112:123547	901371	0					
ANR	901374	IdentifierDeclStatement	"int pid , old_pid , signum ;"	4196:1:120115:120139	901371	0	True				
ANR	901375	IdentifierDecl	pid		901371	0					
ANR	901376	IdentifierDeclType	int		901371	0					
ANR	901377	Identifier	pid		901371	1					
ANR	901378	IdentifierDecl	old_pid		901371	1					
ANR	901379	IdentifierDeclType	int		901371	0					
ANR	901380	Identifier	old_pid		901371	1					
ANR	901381	IdentifierDecl	signum		901371	2					
ANR	901382	IdentifierDeclType	int		901371	0					
ANR	901383	Identifier	signum		901371	1					
ANR	901384	IdentifierDeclStatement	char * ptr ;	4197:1:120142:120151	901371	1	True				
ANR	901385	IdentifierDecl	* ptr		901371	0					
ANR	901386	IdentifierDeclType	char *		901371	0					
ANR	901387	Identifier	ptr		901371	1					
ANR	901388	SwitchStatement	switch ( input [ 1 ] )		901371	2					
ANR	901389	Condition	input [ 1 ]	4199:9:120216:120223	901371	0	True				
ANR	901390	ArrayIndexing	input [ 1 ]		901371	0					
ANR	901391	Identifier	input		901371	0					
ANR	901392	PrimaryExpression	1		901371	1					
ANR	901393	CompoundStatement		5:19:113:113	901371	1					
ANR	901394	Label	case 0 :	4200:1:120229:120235	901371	0	True				
ANR	901395	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4201:2:120247:120286	901371	1	True				
ANR	901396	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		901371	0					
ANR	901397	Callee	r_reg_arena_swap		901371	0					
ANR	901398	Identifier	r_reg_arena_swap		901371	0					
ANR	901399	ArgumentList	core -> dbg -> reg		901371	1					
ANR	901400	Argument	core -> dbg -> reg		901371	0					
ANR	901401	PtrMemberAccess	core -> dbg -> reg		901371	0					
ANR	901402	PtrMemberAccess	core -> dbg		901371	0					
ANR	901403	Identifier	core		901371	0					
ANR	901404	Identifier	dbg		901371	1					
ANR	901405	Identifier	reg		901371	1					
ANR	901406	Argument	true		901371	1					
ANR	901407	Identifier	true		901371	0					
ANR	901408	ExpressionStatement	core -> dbg -> continue_all_threads = true	4203:2:120304:120342	901371	2	True				
ANR	901409	AssignmentExpression	core -> dbg -> continue_all_threads = true		901371	0		=			
ANR	901410	PtrMemberAccess	core -> dbg -> continue_all_threads		901371	0					
ANR	901411	PtrMemberAccess	core -> dbg		901371	0					
ANR	901412	Identifier	core		901371	0					
ANR	901413	Identifier	dbg		901371	1					
ANR	901414	Identifier	continue_all_threads		901371	1					
ANR	901415	Identifier	true		901371	1					
ANR	901416	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		901371	3					
ANR	901417	Condition	r_debug_is_dead ( core -> dbg )	4205:6:120357:120383	901371	0	True				
ANR	901418	CallExpression	r_debug_is_dead ( core -> dbg )		901371	0					
ANR	901419	Callee	r_debug_is_dead		901371	0					
ANR	901420	Identifier	r_debug_is_dead		901371	0					
ANR	901421	ArgumentList	core -> dbg		901371	1					
ANR	901422	Argument	core -> dbg		901371	0					
ANR	901423	PtrMemberAccess	core -> dbg		901371	0					
ANR	901424	Identifier	core		901371	0					
ANR	901425	Identifier	dbg		901371	1					
ANR	901426	CompoundStatement		11:35:273:273	901371	1					
ANR	901427	ExpressionStatement	"eprintf ( ""Cannot continue, run ood?\\n"" )"	4206:3:120391:120430	901371	0	True				
ANR	901428	CallExpression	"eprintf ( ""Cannot continue, run ood?\\n"" )"		901371	0					
ANR	901429	Callee	eprintf		901371	0					
ANR	901430	Identifier	eprintf		901371	0					
ANR	901431	ArgumentList	"""Cannot continue, run ood?\\n"""		901371	1					
ANR	901432	Argument	"""Cannot continue, run ood?\\n"""		901371	0					
ANR	901433	PrimaryExpression	"""Cannot continue, run ood?\\n"""		901371	0					
ANR	901434	BreakStatement	break ;	4207:3:120435:120440	901371	1	True				
ANR	901435	ExpressionStatement	r_debug_continue ( core -> dbg )	4209:2:120448:120476	901371	4	True				
ANR	901436	CallExpression	r_debug_continue ( core -> dbg )		901371	0					
ANR	901437	Callee	r_debug_continue		901371	0					
ANR	901438	Identifier	r_debug_continue		901371	0					
ANR	901439	ArgumentList	core -> dbg		901371	1					
ANR	901440	Argument	core -> dbg		901371	0					
ANR	901441	PtrMemberAccess	core -> dbg		901371	0					
ANR	901442	Identifier	core		901371	0					
ANR	901443	Identifier	dbg		901371	1					
ANR	901444	BreakStatement	break ;	4210:2:120480:120485	901371	5	True				
ANR	901445	Label	case 'a' :	4211:1:120488:120496	901371	6	True				
ANR	901446	ExpressionStatement	"eprintf ( ""TODO: dca\\n"" )"	4212:2:120509:120532	901371	7	True				
ANR	901447	CallExpression	"eprintf ( ""TODO: dca\\n"" )"		901371	0					
ANR	901448	Callee	eprintf		901371	0					
ANR	901449	Identifier	eprintf		901371	0					
ANR	901450	ArgumentList	"""TODO: dca\\n"""		901371	1					
ANR	901451	Argument	"""TODO: dca\\n"""		901371	0					
ANR	901452	PrimaryExpression	"""TODO: dca\\n"""		901371	0					
ANR	901453	BreakStatement	break ;	4213:2:120536:120541	901371	8	True				
ANR	901454	Label	case 'b' :	4214:1:120544:120552	901371	9	True				
ANR	901455	CompoundStatement		21:2:452:452	901371	10					
ANR	901456	IfStatement	if ( ! r_debug_continue_back ( core -> dbg ) )		901371	0					
ANR	901457	Condition	! r_debug_continue_back ( core -> dbg )	4216:7:120574:120607	901371	0	True				
ANR	901458	UnaryOperationExpression	! r_debug_continue_back ( core -> dbg )		901371	0					
ANR	901459	UnaryOperator	!		901371	0					
ANR	901460	CallExpression	r_debug_continue_back ( core -> dbg )		901371	1					
ANR	901461	Callee	r_debug_continue_back		901371	0					
ANR	901462	Identifier	r_debug_continue_back		901371	0					
ANR	901463	ArgumentList	core -> dbg		901371	1					
ANR	901464	Argument	core -> dbg		901371	0					
ANR	901465	PtrMemberAccess	core -> dbg		901371	0					
ANR	901466	Identifier	core		901371	0					
ANR	901467	Identifier	dbg		901371	1					
ANR	901468	CompoundStatement		22:43:497:497	901371	1					
ANR	901469	ExpressionStatement	"eprintf ( ""cannot continue back\\n"" )"	4217:4:120616:120650	901371	0	True				
ANR	901470	CallExpression	"eprintf ( ""cannot continue back\\n"" )"		901371	0					
ANR	901471	Callee	eprintf		901371	0					
ANR	901472	Identifier	eprintf		901371	0					
ANR	901473	ArgumentList	"""cannot continue back\\n"""		901371	1					
ANR	901474	Argument	"""cannot continue back\\n"""		901371	0					
ANR	901475	PrimaryExpression	"""cannot continue back\\n"""		901371	0					
ANR	901476	BreakStatement	break ;	4219:3:120660:120665	901371	1	True				
ANR	901477	Label	case 'e' :	4222:1:120688:120696	901371	11	True				
ANR	901478	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4223:2:120709:120748	901371	12	True				
ANR	901479	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		901371	0					
ANR	901480	Callee	r_reg_arena_swap		901371	0					
ANR	901481	Identifier	r_reg_arena_swap		901371	0					
ANR	901482	ArgumentList	core -> dbg -> reg		901371	1					
ANR	901483	Argument	core -> dbg -> reg		901371	0					
ANR	901484	PtrMemberAccess	core -> dbg -> reg		901371	0					
ANR	901485	PtrMemberAccess	core -> dbg		901371	0					
ANR	901486	Identifier	core		901371	0					
ANR	901487	Identifier	dbg		901371	1					
ANR	901488	Identifier	reg		901371	1					
ANR	901489	Argument	true		901371	1					
ANR	901490	Identifier	true		901371	0					
ANR	901491	ExpressionStatement	r_debug_continue_pass_exception ( core -> dbg )	4224:2:120752:120795	901371	13	True				
ANR	901492	CallExpression	r_debug_continue_pass_exception ( core -> dbg )		901371	0					
ANR	901493	Callee	r_debug_continue_pass_exception		901371	0					
ANR	901494	Identifier	r_debug_continue_pass_exception		901371	0					
ANR	901495	ArgumentList	core -> dbg		901371	1					
ANR	901496	Argument	core -> dbg		901371	0					
ANR	901497	PtrMemberAccess	core -> dbg		901371	0					
ANR	901498	Identifier	core		901371	0					
ANR	901499	Identifier	dbg		901371	1					
ANR	901500	BreakStatement	break ;	4225:2:120799:120804	901371	14	True				
ANR	901501	Label	case 'f' :	4227:1:120814:120822	901371	15	True				
ANR	901502	ExpressionStatement	"eprintf ( ""[+] Running 'dcs vfork fork clone' behind the scenes...\\n"" )"	4228:2:120835:120904	901371	16	True				
ANR	901503	CallExpression	"eprintf ( ""[+] Running 'dcs vfork fork clone' behind the scenes...\\n"" )"		901371	0					
ANR	901504	Callee	eprintf		901371	0					
ANR	901505	Identifier	eprintf		901371	0					
ANR	901506	ArgumentList	"""[+] Running 'dcs vfork fork clone' behind the scenes...\\n"""		901371	1					
ANR	901507	Argument	"""[+] Running 'dcs vfork fork clone' behind the scenes...\\n"""		901371	0					
ANR	901508	PrimaryExpression	"""[+] Running 'dcs vfork fork clone' behind the scenes...\\n"""		901371	0					
ANR	901509	ExpressionStatement	"r_core_cmd0 ( core , ""dcs vfork fork clone"" )"	4232:2:121042:121084	901371	17	True				
ANR	901510	CallExpression	"r_core_cmd0 ( core , ""dcs vfork fork clone"" )"		901371	0					
ANR	901511	Callee	r_core_cmd0		901371	0					
ANR	901512	Identifier	r_core_cmd0		901371	0					
ANR	901513	ArgumentList	core		901371	1					
ANR	901514	Argument	core		901371	0					
ANR	901515	Identifier	core		901371	0					
ANR	901516	Argument	"""dcs vfork fork clone"""		901371	1					
ANR	901517	PrimaryExpression	"""dcs vfork fork clone"""		901371	0					
ANR	901518	BreakStatement	break ;	4233:2:121088:121093	901371	18	True				
ANR	901519	Label	case 'c' :	4234:1:121096:121104	901371	19	True				
ANR	901520	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4235:2:121117:121156	901371	20	True				
ANR	901521	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		901371	0					
ANR	901522	Callee	r_reg_arena_swap		901371	0					
ANR	901523	Identifier	r_reg_arena_swap		901371	0					
ANR	901524	ArgumentList	core -> dbg -> reg		901371	1					
ANR	901525	Argument	core -> dbg -> reg		901371	0					
ANR	901526	PtrMemberAccess	core -> dbg -> reg		901371	0					
ANR	901527	PtrMemberAccess	core -> dbg		901371	0					
ANR	901528	Identifier	core		901371	0					
ANR	901529	Identifier	dbg		901371	1					
ANR	901530	Identifier	reg		901371	1					
ANR	901531	Argument	true		901371	1					
ANR	901532	Identifier	true		901371	0					
ANR	901533	IfStatement	if ( input [ 2 ] == 'u' )		901371	21					
ANR	901534	Condition	input [ 2 ] == 'u'	4236:6:121164:121178	901371	0	True				
ANR	901535	EqualityExpression	input [ 2 ] == 'u'		901371	0		==			
ANR	901536	ArrayIndexing	input [ 2 ]		901371	0					
ANR	901537	Identifier	input		901371	0					
ANR	901538	PrimaryExpression	2		901371	1					
ANR	901539	PrimaryExpression	'u'		901371	1					
ANR	901540	CompoundStatement		42:23:1068:1068	901371	1					
ANR	901541	ExpressionStatement	"r_debug_continue_until_optype ( core -> dbg , R_ANAL_OP_TYPE_UCALL , 0 )"	4237:3:121186:121252	901371	0	True				
ANR	901542	CallExpression	"r_debug_continue_until_optype ( core -> dbg , R_ANAL_OP_TYPE_UCALL , 0 )"		901371	0					
ANR	901543	Callee	r_debug_continue_until_optype		901371	0					
ANR	901544	Identifier	r_debug_continue_until_optype		901371	0					
ANR	901545	ArgumentList	core -> dbg		901371	1					
ANR	901546	Argument	core -> dbg		901371	0					
ANR	901547	PtrMemberAccess	core -> dbg		901371	0					
ANR	901548	Identifier	core		901371	0					
ANR	901549	Identifier	dbg		901371	1					
ANR	901550	Argument	R_ANAL_OP_TYPE_UCALL		901371	1					
ANR	901551	Identifier	R_ANAL_OP_TYPE_UCALL		901371	0					
ANR	901552	Argument	0		901371	2					
ANR	901553	PrimaryExpression	0		901371	0					
ANR	901554	ElseStatement	else		901371	0					
ANR	901555	CompoundStatement		44:9:1150:1150	901371	0					
ANR	901556	ExpressionStatement	"r_debug_continue_until_optype ( core -> dbg , R_ANAL_OP_TYPE_CALL , 0 )"	4239:3:121268:121333	901371	0	True				
ANR	901557	CallExpression	"r_debug_continue_until_optype ( core -> dbg , R_ANAL_OP_TYPE_CALL , 0 )"		901371	0					
ANR	901558	Callee	r_debug_continue_until_optype		901371	0					
ANR	901559	Identifier	r_debug_continue_until_optype		901371	0					
ANR	901560	ArgumentList	core -> dbg		901371	1					
ANR	901561	Argument	core -> dbg		901371	0					
ANR	901562	PtrMemberAccess	core -> dbg		901371	0					
ANR	901563	Identifier	core		901371	0					
ANR	901564	Identifier	dbg		901371	1					
ANR	901565	Argument	R_ANAL_OP_TYPE_CALL		901371	1					
ANR	901566	Identifier	R_ANAL_OP_TYPE_CALL		901371	0					
ANR	901567	Argument	0		901371	2					
ANR	901568	PrimaryExpression	0		901371	0					
ANR	901569	BreakStatement	break ;	4241:2:121341:121346	901371	22	True				
ANR	901570	Label	case 'r' :	4242:1:121349:121357	901371	23	True				
ANR	901571	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4243:2:121361:121400	901371	24	True				
ANR	901572	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		901371	0					
ANR	901573	Callee	r_reg_arena_swap		901371	0					
ANR	901574	Identifier	r_reg_arena_swap		901371	0					
ANR	901575	ArgumentList	core -> dbg -> reg		901371	1					
ANR	901576	Argument	core -> dbg -> reg		901371	0					
ANR	901577	PtrMemberAccess	core -> dbg -> reg		901371	0					
ANR	901578	PtrMemberAccess	core -> dbg		901371	0					
ANR	901579	Identifier	core		901371	0					
ANR	901580	Identifier	dbg		901371	1					
ANR	901581	Identifier	reg		901371	1					
ANR	901582	Argument	true		901371	1					
ANR	901583	Identifier	true		901371	0					
ANR	901584	ExpressionStatement	"r_debug_continue_until_optype ( core -> dbg , R_ANAL_OP_TYPE_RET , 1 )"	4244:2:121404:121468	901371	25	True				
ANR	901585	CallExpression	"r_debug_continue_until_optype ( core -> dbg , R_ANAL_OP_TYPE_RET , 1 )"		901371	0					
ANR	901586	Callee	r_debug_continue_until_optype		901371	0					
ANR	901587	Identifier	r_debug_continue_until_optype		901371	0					
ANR	901588	ArgumentList	core -> dbg		901371	1					
ANR	901589	Argument	core -> dbg		901371	0					
ANR	901590	PtrMemberAccess	core -> dbg		901371	0					
ANR	901591	Identifier	core		901371	0					
ANR	901592	Identifier	dbg		901371	1					
ANR	901593	Argument	R_ANAL_OP_TYPE_RET		901371	1					
ANR	901594	Identifier	R_ANAL_OP_TYPE_RET		901371	0					
ANR	901595	Argument	1		901371	2					
ANR	901596	PrimaryExpression	1		901371	0					
ANR	901597	BreakStatement	break ;	4245:2:121472:121477	901371	26	True				
ANR	901598	Label	case 'k' :	4246:1:121480:121488	901371	27	True				
ANR	901599	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4248:2:121546:121585	901371	28	True				
ANR	901600	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		901371	0					
ANR	901601	Callee	r_reg_arena_swap		901371	0					
ANR	901602	Identifier	r_reg_arena_swap		901371	0					
ANR	901603	ArgumentList	core -> dbg -> reg		901371	1					
ANR	901604	Argument	core -> dbg -> reg		901371	0					
ANR	901605	PtrMemberAccess	core -> dbg -> reg		901371	0					
ANR	901606	PtrMemberAccess	core -> dbg		901371	0					
ANR	901607	Identifier	core		901371	0					
ANR	901608	Identifier	dbg		901371	1					
ANR	901609	Identifier	reg		901371	1					
ANR	901610	Argument	true		901371	1					
ANR	901611	Identifier	true		901371	0					
ANR	901612	ExpressionStatement	"signum = r_num_math ( core -> num , input + 2 )"	4249:2:121589:121631	901371	29	True				
ANR	901613	AssignmentExpression	"signum = r_num_math ( core -> num , input + 2 )"		901371	0		=			
ANR	901614	Identifier	signum		901371	0					
ANR	901615	CallExpression	"r_num_math ( core -> num , input + 2 )"		901371	1					
ANR	901616	Callee	r_num_math		901371	0					
ANR	901617	Identifier	r_num_math		901371	0					
ANR	901618	ArgumentList	core -> num		901371	1					
ANR	901619	Argument	core -> num		901371	0					
ANR	901620	PtrMemberAccess	core -> num		901371	0					
ANR	901621	Identifier	core		901371	0					
ANR	901622	Identifier	num		901371	1					
ANR	901623	Argument	input + 2		901371	1					
ANR	901624	AdditiveExpression	input + 2		901371	0		+			
ANR	901625	Identifier	input		901371	0					
ANR	901626	PrimaryExpression	2		901371	1					
ANR	901627	ExpressionStatement	"ptr = strchr ( input + 3 , ' ' )"	4250:2:121635:121664	901371	30	True				
ANR	901628	AssignmentExpression	"ptr = strchr ( input + 3 , ' ' )"		901371	0		=			
ANR	901629	Identifier	ptr		901371	0					
ANR	901630	CallExpression	"strchr ( input + 3 , ' ' )"		901371	1					
ANR	901631	Callee	strchr		901371	0					
ANR	901632	Identifier	strchr		901371	0					
ANR	901633	ArgumentList	input + 3		901371	1					
ANR	901634	Argument	input + 3		901371	0					
ANR	901635	AdditiveExpression	input + 3		901371	0		+			
ANR	901636	Identifier	input		901371	0					
ANR	901637	PrimaryExpression	3		901371	1					
ANR	901638	Argument	' '		901371	1					
ANR	901639	PrimaryExpression	' '		901371	0					
ANR	901640	IfStatement	if ( ptr )		901371	31					
ANR	901641	Condition	ptr	4251:6:121672:121674	901371	0	True				
ANR	901642	Identifier	ptr		901371	0					
ANR	901643	CompoundStatement		61:3:1662:1675	901371	1					
ANR	901644	IdentifierDeclStatement	int old_pid = core -> dbg -> pid ;	4252:3:121682:121710	901371	0	True				
ANR	901645	IdentifierDecl	old_pid = core -> dbg -> pid		901371	0					
ANR	901646	IdentifierDeclType	int		901371	0					
ANR	901647	Identifier	old_pid		901371	1					
ANR	901648	AssignmentExpression	old_pid = core -> dbg -> pid		901371	2		=			
ANR	901649	Identifier	old_pid		901371	0					
ANR	901650	PtrMemberAccess	core -> dbg -> pid		901371	1					
ANR	901651	PtrMemberAccess	core -> dbg		901371	0					
ANR	901652	Identifier	core		901371	0					
ANR	901653	Identifier	dbg		901371	1					
ANR	901654	Identifier	pid		901371	1					
ANR	901655	IdentifierDeclStatement	int old_tid = core -> dbg -> tid ;	4253:3:121715:121743	901371	1	True				
ANR	901656	IdentifierDecl	old_tid = core -> dbg -> tid		901371	0					
ANR	901657	IdentifierDeclType	int		901371	0					
ANR	901658	Identifier	old_tid		901371	1					
ANR	901659	AssignmentExpression	old_tid = core -> dbg -> tid		901371	2		=			
ANR	901660	Identifier	old_tid		901371	0					
ANR	901661	PtrMemberAccess	core -> dbg -> tid		901371	1					
ANR	901662	PtrMemberAccess	core -> dbg		901371	0					
ANR	901663	Identifier	core		901371	0					
ANR	901664	Identifier	dbg		901371	1					
ANR	901665	Identifier	tid		901371	1					
ANR	901666	IdentifierDeclStatement	int pid = atoi ( ptr + 1 ) ;	4254:3:121748:121770	901371	2	True				
ANR	901667	IdentifierDecl	pid = atoi ( ptr + 1 )		901371	0					
ANR	901668	IdentifierDeclType	int		901371	0					
ANR	901669	Identifier	pid		901371	1					
ANR	901670	AssignmentExpression	pid = atoi ( ptr + 1 )		901371	2		=			
ANR	901671	Identifier	pid		901371	0					
ANR	901672	CallExpression	atoi ( ptr + 1 )		901371	1					
ANR	901673	Callee	atoi		901371	0					
ANR	901674	Identifier	atoi		901371	0					
ANR	901675	ArgumentList	ptr + 1		901371	1					
ANR	901676	Argument	ptr + 1		901371	0					
ANR	901677	AdditiveExpression	ptr + 1		901371	0		+			
ANR	901678	Identifier	ptr		901371	0					
ANR	901679	PrimaryExpression	1		901371	1					
ANR	901680	IdentifierDeclStatement	int tid = pid ;	4255:3:121775:121788	901371	3	True				
ANR	901681	IdentifierDecl	tid = pid		901371	0					
ANR	901682	IdentifierDeclType	int		901371	0					
ANR	901683	Identifier	tid		901371	1					
ANR	901684	AssignmentExpression	tid = pid		901371	2		=			
ANR	901685	Identifier	pid		901371	0					
ANR	901686	Identifier	pid		901371	1					
ANR	901687	ExpressionStatement	* ptr = 0	4256:3:121800:121808	901371	4	True				
ANR	901688	AssignmentExpression	* ptr = 0		901371	0		=			
ANR	901689	UnaryOperationExpression	* ptr		901371	0					
ANR	901690	UnaryOperator	*		901371	0					
ANR	901691	Identifier	ptr		901371	1					
ANR	901692	PrimaryExpression	0		901371	1					
ANR	901693	ExpressionStatement	"r_debug_select ( core -> dbg , pid , tid )"	4257:3:121813:121849	901371	5	True				
ANR	901694	CallExpression	"r_debug_select ( core -> dbg , pid , tid )"		901371	0					
ANR	901695	Callee	r_debug_select		901371	0					
ANR	901696	Identifier	r_debug_select		901371	0					
ANR	901697	ArgumentList	core -> dbg		901371	1					
ANR	901698	Argument	core -> dbg		901371	0					
ANR	901699	PtrMemberAccess	core -> dbg		901371	0					
ANR	901700	Identifier	core		901371	0					
ANR	901701	Identifier	dbg		901371	1					
ANR	901702	Argument	pid		901371	1					
ANR	901703	Identifier	pid		901371	0					
ANR	901704	Argument	tid		901371	2					
ANR	901705	Identifier	tid		901371	0					
ANR	901706	ExpressionStatement	"r_debug_continue_kill ( core -> dbg , signum )"	4258:3:121854:121895	901371	6	True				
ANR	901707	CallExpression	"r_debug_continue_kill ( core -> dbg , signum )"		901371	0					
ANR	901708	Callee	r_debug_continue_kill		901371	0					
ANR	901709	Identifier	r_debug_continue_kill		901371	0					
ANR	901710	ArgumentList	core -> dbg		901371	1					
ANR	901711	Argument	core -> dbg		901371	0					
ANR	901712	PtrMemberAccess	core -> dbg		901371	0					
ANR	901713	Identifier	core		901371	0					
ANR	901714	Identifier	dbg		901371	1					
ANR	901715	Argument	signum		901371	1					
ANR	901716	Identifier	signum		901371	0					
ANR	901717	ExpressionStatement	"r_debug_select ( core -> dbg , old_pid , old_tid )"	4259:3:121900:121944	901371	7	True				
ANR	901718	CallExpression	"r_debug_select ( core -> dbg , old_pid , old_tid )"		901371	0					
ANR	901719	Callee	r_debug_select		901371	0					
ANR	901720	Identifier	r_debug_select		901371	0					
ANR	901721	ArgumentList	core -> dbg		901371	1					
ANR	901722	Argument	core -> dbg		901371	0					
ANR	901723	PtrMemberAccess	core -> dbg		901371	0					
ANR	901724	Identifier	core		901371	0					
ANR	901725	Identifier	dbg		901371	1					
ANR	901726	Argument	old_pid		901371	1					
ANR	901727	Identifier	old_pid		901371	0					
ANR	901728	Argument	old_tid		901371	2					
ANR	901729	Identifier	old_tid		901371	0					
ANR	901730	ElseStatement	else		901371	0					
ANR	901731	CompoundStatement		66:9:1842:1842	901371	0					
ANR	901732	ExpressionStatement	"r_debug_continue_kill ( core -> dbg , signum )"	4261:3:121960:122001	901371	0	True				
ANR	901733	CallExpression	"r_debug_continue_kill ( core -> dbg , signum )"		901371	0					
ANR	901734	Callee	r_debug_continue_kill		901371	0					
ANR	901735	Identifier	r_debug_continue_kill		901371	0					
ANR	901736	ArgumentList	core -> dbg		901371	1					
ANR	901737	Argument	core -> dbg		901371	0					
ANR	901738	PtrMemberAccess	core -> dbg		901371	0					
ANR	901739	Identifier	core		901371	0					
ANR	901740	Identifier	dbg		901371	1					
ANR	901741	Argument	signum		901371	1					
ANR	901742	Identifier	signum		901371	0					
ANR	901743	BreakStatement	break ;	4263:2:122009:122014	901371	32	True				
ANR	901744	Label	case 's' :	4264:1:122017:122025	901371	33	True				
ANR	901745	SwitchStatement	switch ( input [ 2 ] )		901371	34					
ANR	901746	Condition	input [ 2 ]	4265:10:122046:122053	901371	0	True				
ANR	901747	ArrayIndexing	input [ 2 ]		901371	0					
ANR	901748	Identifier	input		901371	0					
ANR	901749	PrimaryExpression	2		901371	1					
ANR	901750	CompoundStatement		71:20:1943:1943	901371	1					
ANR	901751	Label	case '*' :	4266:2:122060:122068	901371	0	True				
ANR	901752	ExpressionStatement	"cmd_debug_cont_syscall ( core , ""-1"" )"	4267:3:122073:122108	901371	1	True				
ANR	901753	CallExpression	"cmd_debug_cont_syscall ( core , ""-1"" )"		901371	0					
ANR	901754	Callee	cmd_debug_cont_syscall		901371	0					
ANR	901755	Identifier	cmd_debug_cont_syscall		901371	0					
ANR	901756	ArgumentList	core		901371	1					
ANR	901757	Argument	core		901371	0					
ANR	901758	Identifier	core		901371	0					
ANR	901759	Argument	"""-1"""		901371	1					
ANR	901760	PrimaryExpression	"""-1"""		901371	0					
ANR	901761	BreakStatement	break ;	4268:3:122113:122118	901371	2	True				
ANR	901762	Label	case ' ' :	4269:2:122122:122130	901371	3	True				
ANR	901763	ExpressionStatement	"cmd_debug_cont_syscall ( core , input + 3 )"	4270:3:122135:122175	901371	4	True				
ANR	901764	CallExpression	"cmd_debug_cont_syscall ( core , input + 3 )"		901371	0					
ANR	901765	Callee	cmd_debug_cont_syscall		901371	0					
ANR	901766	Identifier	cmd_debug_cont_syscall		901371	0					
ANR	901767	ArgumentList	core		901371	1					
ANR	901768	Argument	core		901371	0					
ANR	901769	Identifier	core		901371	0					
ANR	901770	Argument	input + 3		901371	1					
ANR	901771	AdditiveExpression	input + 3		901371	0		+			
ANR	901772	Identifier	input		901371	0					
ANR	901773	PrimaryExpression	3		901371	1					
ANR	901774	BreakStatement	break ;	4271:3:122180:122185	901371	5	True				
ANR	901775	Label	case '\\0' :	4272:2:122189:122198	901371	6	True				
ANR	901776	ExpressionStatement	"cmd_debug_cont_syscall ( core , NULL )"	4273:3:122203:122238	901371	7	True				
ANR	901777	CallExpression	"cmd_debug_cont_syscall ( core , NULL )"		901371	0					
ANR	901778	Callee	cmd_debug_cont_syscall		901371	0					
ANR	901779	Identifier	cmd_debug_cont_syscall		901371	0					
ANR	901780	ArgumentList	core		901371	1					
ANR	901781	Argument	core		901371	0					
ANR	901782	Identifier	core		901371	0					
ANR	901783	Argument	NULL		901371	1					
ANR	901784	Identifier	NULL		901371	0					
ANR	901785	BreakStatement	break ;	4274:3:122243:122248	901371	8	True				
ANR	901786	Label	default :	4275:2:122252:122259	901371	9	True				
ANR	901787	Identifier	default		901371	0					
ANR	901788	Label	case '?' :	4276:2:122263:122271	901371	10	True				
ANR	901789	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dcs )"	4277:3:122276:122312	901371	11	True				
ANR	901790	CallExpression	"r_core_cmd_help ( core , help_msg_dcs )"		901371	0					
ANR	901791	Callee	r_core_cmd_help		901371	0					
ANR	901792	Identifier	r_core_cmd_help		901371	0					
ANR	901793	ArgumentList	core		901371	1					
ANR	901794	Argument	core		901371	0					
ANR	901795	Identifier	core		901371	0					
ANR	901796	Argument	help_msg_dcs		901371	1					
ANR	901797	Identifier	help_msg_dcs		901371	0					
ANR	901798	BreakStatement	break ;	4278:3:122317:122322	901371	12	True				
ANR	901799	BreakStatement	break ;	4280:2:122330:122335	901371	35	True				
ANR	901800	Label	case 'p' :	4281:1:122338:122346	901371	36	True				
ANR	901801	CompoundStatement		92:3:2317:2351	901371	37					
ANR	901802	IdentifierDeclStatement	RIOMap * s ;	4283:3:122390:122399	901371	0	True				
ANR	901803	IdentifierDecl	* s		901371	0					
ANR	901804	IdentifierDeclType	RIOMap *		901371	0					
ANR	901805	Identifier	s		901371	1					
ANR	901806	IdentifierDeclStatement	ut64 pc ;	4284:3:122404:122411	901371	1	True				
ANR	901807	IdentifierDecl	pc		901371	0					
ANR	901808	IdentifierDeclType	ut64		901371	0					
ANR	901809	Identifier	pc		901371	1					
ANR	901810	IdentifierDeclStatement	int n = 0 ;	4285:3:122416:122425	901371	2	True				
ANR	901811	IdentifierDecl	n = 0		901371	0					
ANR	901812	IdentifierDeclType	int		901371	0					
ANR	901813	Identifier	n		901371	1					
ANR	901814	AssignmentExpression	n = 0		901371	2		=			
ANR	901815	Identifier	n		901371	0					
ANR	901816	PrimaryExpression	0		901371	1					
ANR	901817	IdentifierDeclStatement	bool t = core -> dbg -> trace -> enabled ;	4286:3:122430:122464	901371	3	True				
ANR	901818	IdentifierDecl	t = core -> dbg -> trace -> enabled		901371	0					
ANR	901819	IdentifierDeclType	bool		901371	0					
ANR	901820	Identifier	t		901371	1					
ANR	901821	AssignmentExpression	t = core -> dbg -> trace -> enabled		901371	2		=			
ANR	901822	Identifier	t		901371	0					
ANR	901823	PtrMemberAccess	core -> dbg -> trace -> enabled		901371	1					
ANR	901824	PtrMemberAccess	core -> dbg -> trace		901371	0					
ANR	901825	PtrMemberAccess	core -> dbg		901371	0					
ANR	901826	Identifier	core		901371	0					
ANR	901827	Identifier	dbg		901371	1					
ANR	901828	Identifier	trace		901371	1					
ANR	901829	Identifier	enabled		901371	1					
ANR	901830	ExpressionStatement	core -> dbg -> trace -> enabled = false	4287:3:122469:122502	901371	4	True				
ANR	901831	AssignmentExpression	core -> dbg -> trace -> enabled = false		901371	0		=			
ANR	901832	PtrMemberAccess	core -> dbg -> trace -> enabled		901371	0					
ANR	901833	PtrMemberAccess	core -> dbg -> trace		901371	0					
ANR	901834	PtrMemberAccess	core -> dbg		901371	0					
ANR	901835	Identifier	core		901371	0					
ANR	901836	Identifier	dbg		901371	1					
ANR	901837	Identifier	trace		901371	1					
ANR	901838	Identifier	enabled		901371	1					
ANR	901839	Identifier	false		901371	1					
ANR	901840	ExpressionStatement	"r_cons_break_push ( static_debug_stop , core -> dbg )"	4288:3:122507:122555	901371	5	True				
ANR	901841	CallExpression	"r_cons_break_push ( static_debug_stop , core -> dbg )"		901371	0					
ANR	901842	Callee	r_cons_break_push		901371	0					
ANR	901843	Identifier	r_cons_break_push		901371	0					
ANR	901844	ArgumentList	static_debug_stop		901371	1					
ANR	901845	Argument	static_debug_stop		901371	0					
ANR	901846	Identifier	static_debug_stop		901371	0					
ANR	901847	Argument	core -> dbg		901371	1					
ANR	901848	PtrMemberAccess	core -> dbg		901371	0					
ANR	901849	Identifier	core		901371	0					
ANR	901850	Identifier	dbg		901371	1					
ANR	901851	DoStatement	do		901371	6					
ANR	901852	CompoundStatement		95:6:2450:2450	901371	0					
ANR	901853	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	4290:4:122569:122596	901371	0	True				
ANR	901854	CallExpression	"r_debug_step ( core -> dbg , 1 )"		901371	0					
ANR	901855	Callee	r_debug_step		901371	0					
ANR	901856	Identifier	r_debug_step		901371	0					
ANR	901857	ArgumentList	core -> dbg		901371	1					
ANR	901858	Argument	core -> dbg		901371	0					
ANR	901859	PtrMemberAccess	core -> dbg		901371	0					
ANR	901860	Identifier	core		901371	0					
ANR	901861	Identifier	dbg		901371	1					
ANR	901862	Argument	1		901371	1					
ANR	901863	PrimaryExpression	1		901371	0					
ANR	901864	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4291:4:122602:122653	901371	1	True				
ANR	901865	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		901371	0					
ANR	901866	Callee	r_debug_reg_sync		901371	0					
ANR	901867	Identifier	r_debug_reg_sync		901371	0					
ANR	901868	ArgumentList	core -> dbg		901371	1					
ANR	901869	Argument	core -> dbg		901371	0					
ANR	901870	PtrMemberAccess	core -> dbg		901371	0					
ANR	901871	Identifier	core		901371	0					
ANR	901872	Identifier	dbg		901371	1					
ANR	901873	Argument	R_REG_TYPE_GPR		901371	1					
ANR	901874	Identifier	R_REG_TYPE_GPR		901371	0					
ANR	901875	Argument	false		901371	2					
ANR	901876	Identifier	false		901371	0					
ANR	901877	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"	4292:4:122659:122697	901371	2	True				
ANR	901878	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		901371	0		=			
ANR	901879	Identifier	pc		901371	0					
ANR	901880	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		901371	1					
ANR	901881	Callee	r_debug_reg_get		901371	0					
ANR	901882	Identifier	r_debug_reg_get		901371	0					
ANR	901883	ArgumentList	core -> dbg		901371	1					
ANR	901884	Argument	core -> dbg		901371	0					
ANR	901885	PtrMemberAccess	core -> dbg		901371	0					
ANR	901886	Identifier	core		901371	0					
ANR	901887	Identifier	dbg		901371	1					
ANR	901888	Argument	"""PC"""		901371	1					
ANR	901889	PrimaryExpression	"""PC"""		901371	0					
ANR	901890	Statement	eprintf	4293:4:122703:122709	901371	3	True				
ANR	901891	Statement	(	4293:12:122711:122711	901371	4	True				
ANR	901892	Statement	""" %d %"""	4293:13:122712:122718	901371	5	True				
ANR	901893	Statement	PFMT64x	4293:20:122719:122725	901371	6	True				
ANR	901894	Statement	"""\\r"""	4293:27:122726:122729	901371	7	True				
ANR	901895	Statement	","	4293:31:122730:122730	901371	8	True				
ANR	901896	Statement	n	4293:33:122732:122732	901371	9	True				
ANR	901897	Statement	++	4293:34:122733:122734	901371	10	True				
ANR	901898	Statement	","	4293:36:122735:122735	901371	11	True				
ANR	901899	Statement	pc	4293:38:122737:122738	901371	12	True				
ANR	901900	Statement	)	4293:40:122739:122739	901371	13	True				
ANR	901901	ExpressionStatement		4293:41:122740:122740	901371	14	True				
ANR	901902	ExpressionStatement	"s = r_io_map_get ( core -> io , pc )"	4294:4:122746:122777	901371	15	True				
ANR	901903	AssignmentExpression	"s = r_io_map_get ( core -> io , pc )"		901371	0		=			
ANR	901904	Identifier	s		901371	0					
ANR	901905	CallExpression	"r_io_map_get ( core -> io , pc )"		901371	1					
ANR	901906	Callee	r_io_map_get		901371	0					
ANR	901907	Identifier	r_io_map_get		901371	0					
ANR	901908	ArgumentList	core -> io		901371	1					
ANR	901909	Argument	core -> io		901371	0					
ANR	901910	PtrMemberAccess	core -> io		901371	0					
ANR	901911	Identifier	core		901371	0					
ANR	901912	Identifier	io		901371	1					
ANR	901913	Argument	pc		901371	1					
ANR	901914	Identifier	pc		901371	0					
ANR	901915	IfStatement	if ( r_cons_is_breaked ( ) )		901371	16					
ANR	901916	Condition	r_cons_is_breaked ( )	4295:8:122787:122806	901371	0	True				
ANR	901917	CallExpression	r_cons_is_breaked ( )		901371	0					
ANR	901918	Callee	r_cons_is_breaked		901371	0					
ANR	901919	Identifier	r_cons_is_breaked		901371	0					
ANR	901920	ArgumentList			901371	1					
ANR	901921	CompoundStatement		101:30:2696:2696	901371	1					
ANR	901922	BreakStatement	break ;	4296:5:122816:122821	901371	0	True				
ANR	901923	Condition	! s	4298:12:122841:122842	901371	1	True				
ANR	901924	UnaryOperationExpression	! s		901371	0					
ANR	901925	UnaryOperator	!		901371	0					
ANR	901926	Identifier	s		901371	1					
ANR	901927	ExpressionStatement	"eprintf ( ""\\n"" )"	4299:3:122849:122863	901371	7	True				
ANR	901928	CallExpression	"eprintf ( ""\\n"" )"		901371	0					
ANR	901929	Callee	eprintf		901371	0					
ANR	901930	Identifier	eprintf		901371	0					
ANR	901931	ArgumentList	"""\\n"""		901371	1					
ANR	901932	Argument	"""\\n"""		901371	0					
ANR	901933	PrimaryExpression	"""\\n"""		901371	0					
ANR	901934	ExpressionStatement	core -> dbg -> trace -> enabled = t	4300:3:122868:122897	901371	8	True				
ANR	901935	AssignmentExpression	core -> dbg -> trace -> enabled = t		901371	0		=			
ANR	901936	PtrMemberAccess	core -> dbg -> trace -> enabled		901371	0					
ANR	901937	PtrMemberAccess	core -> dbg -> trace		901371	0					
ANR	901938	PtrMemberAccess	core -> dbg		901371	0					
ANR	901939	Identifier	core		901371	0					
ANR	901940	Identifier	dbg		901371	1					
ANR	901941	Identifier	trace		901371	1					
ANR	901942	Identifier	enabled		901371	1					
ANR	901943	Identifier	t		901371	1					
ANR	901944	ExpressionStatement	r_cons_break_pop ( )	4301:3:122902:122921	901371	9	True				
ANR	901945	CallExpression	r_cons_break_pop ( )		901371	0					
ANR	901946	Callee	r_cons_break_pop		901371	0					
ANR	901947	Identifier	r_cons_break_pop		901371	0					
ANR	901948	ArgumentList			901371	1					
ANR	901949	ReturnStatement	return 1 ;	4302:3:122926:122934	901371	10	True				
ANR	901950	PrimaryExpression	1		901371	0					
ANR	901951	Label	case 'u' :	4304:1:122941:122949	901371	38	True				
ANR	901952	IfStatement	if ( input [ 2 ] == '?' )		901371	39					
ANR	901953	Condition	input [ 2 ] == '?'	4305:6:122966:122980	901371	0	True				
ANR	901954	EqualityExpression	input [ 2 ] == '?'		901371	0		==			
ANR	901955	ArrayIndexing	input [ 2 ]		901371	0					
ANR	901956	Identifier	input		901371	0					
ANR	901957	PrimaryExpression	2		901371	1					
ANR	901958	PrimaryExpression	'?'		901371	1					
ANR	901959	CompoundStatement		111:23:2870:2870	901371	1					
ANR	901960	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dcu )"	4306:3:122988:123024	901371	0	True				
ANR	901961	CallExpression	"r_core_cmd_help ( core , help_msg_dcu )"		901371	0					
ANR	901962	Callee	r_core_cmd_help		901371	0					
ANR	901963	Identifier	r_core_cmd_help		901371	0					
ANR	901964	ArgumentList	core		901371	1					
ANR	901965	Argument	core		901371	0					
ANR	901966	Identifier	core		901371	0					
ANR	901967	Argument	help_msg_dcu		901371	1					
ANR	901968	Identifier	help_msg_dcu		901371	0					
ANR	901969	ElseStatement	else		901371	0					
ANR	901970	IfStatement	if ( input [ 2 ] == '.' )		901371	0					
ANR	901971	Condition	input [ 2 ] == '.'	4307:13:123039:123053	901371	0	True				
ANR	901972	EqualityExpression	input [ 2 ] == '.'		901371	0		==			
ANR	901973	ArrayIndexing	input [ 2 ]		901371	0					
ANR	901974	Identifier	input		901371	0					
ANR	901975	PrimaryExpression	2		901371	1					
ANR	901976	PrimaryExpression	'.'		901371	1					
ANR	901977	CompoundStatement		113:30:2943:2943	901371	1					
ANR	901978	ExpressionStatement	"cmd_dcu ( core , ""cu $$"" )"	4308:3:123061:123084	901371	0	True				
ANR	901979	CallExpression	"cmd_dcu ( core , ""cu $$"" )"		901371	0					
ANR	901980	Callee	cmd_dcu		901371	0					
ANR	901981	Identifier	cmd_dcu		901371	0					
ANR	901982	ArgumentList	core		901371	1					
ANR	901983	Argument	core		901371	0					
ANR	901984	Identifier	core		901371	0					
ANR	901985	Argument	"""cu $$"""		901371	1					
ANR	901986	PrimaryExpression	"""cu $$"""		901371	0					
ANR	901987	ElseStatement	else		901371	0					
ANR	901988	CompoundStatement		115:9:2982:2982	901371	0					
ANR	901989	ExpressionStatement	"cmd_dcu ( core , input )"	4310:3:123100:123121	901371	0	True				
ANR	901990	CallExpression	"cmd_dcu ( core , input )"		901371	0					
ANR	901991	Callee	cmd_dcu		901371	0					
ANR	901992	Identifier	cmd_dcu		901371	0					
ANR	901993	ArgumentList	core		901371	1					
ANR	901994	Argument	core		901371	0					
ANR	901995	Identifier	core		901371	0					
ANR	901996	Argument	input		901371	1					
ANR	901997	Identifier	input		901371	0					
ANR	901998	BreakStatement	break ;	4312:2:123129:123134	901371	40	True				
ANR	901999	Label	case ' ' :	4313:1:123137:123145	901371	41	True				
ANR	902000	ExpressionStatement	old_pid = core -> dbg -> pid	4314:2:123149:123173	901371	42	True				
ANR	902001	AssignmentExpression	old_pid = core -> dbg -> pid		901371	0		=			
ANR	902002	Identifier	old_pid		901371	0					
ANR	902003	PtrMemberAccess	core -> dbg -> pid		901371	1					
ANR	902004	PtrMemberAccess	core -> dbg		901371	0					
ANR	902005	Identifier	core		901371	0					
ANR	902006	Identifier	dbg		901371	1					
ANR	902007	Identifier	pid		901371	1					
ANR	902008	ExpressionStatement	pid = atoi ( input + 2 )	4315:2:123177:123199	901371	43	True				
ANR	902009	AssignmentExpression	pid = atoi ( input + 2 )		901371	0		=			
ANR	902010	Identifier	pid		901371	0					
ANR	902011	CallExpression	atoi ( input + 2 )		901371	1					
ANR	902012	Callee	atoi		901371	0					
ANR	902013	Identifier	atoi		901371	0					
ANR	902014	ArgumentList	input + 2		901371	1					
ANR	902015	Argument	input + 2		901371	0					
ANR	902016	AdditiveExpression	input + 2		901371	0		+			
ANR	902017	Identifier	input		901371	0					
ANR	902018	PrimaryExpression	2		901371	1					
ANR	902019	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4316:2:123203:123242	901371	44	True				
ANR	902020	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		901371	0					
ANR	902021	Callee	r_reg_arena_swap		901371	0					
ANR	902022	Identifier	r_reg_arena_swap		901371	0					
ANR	902023	ArgumentList	core -> dbg -> reg		901371	1					
ANR	902024	Argument	core -> dbg -> reg		901371	0					
ANR	902025	PtrMemberAccess	core -> dbg -> reg		901371	0					
ANR	902026	PtrMemberAccess	core -> dbg		901371	0					
ANR	902027	Identifier	core		901371	0					
ANR	902028	Identifier	dbg		901371	1					
ANR	902029	Identifier	reg		901371	1					
ANR	902030	Argument	true		901371	1					
ANR	902031	Identifier	true		901371	0					
ANR	902032	ExpressionStatement	"r_debug_select ( core -> dbg , pid , core -> dbg -> tid )"	4317:2:123246:123293	901371	45	True				
ANR	902033	CallExpression	"r_debug_select ( core -> dbg , pid , core -> dbg -> tid )"		901371	0					
ANR	902034	Callee	r_debug_select		901371	0					
ANR	902035	Identifier	r_debug_select		901371	0					
ANR	902036	ArgumentList	core -> dbg		901371	1					
ANR	902037	Argument	core -> dbg		901371	0					
ANR	902038	PtrMemberAccess	core -> dbg		901371	0					
ANR	902039	Identifier	core		901371	0					
ANR	902040	Identifier	dbg		901371	1					
ANR	902041	Argument	pid		901371	1					
ANR	902042	Identifier	pid		901371	0					
ANR	902043	Argument	core -> dbg -> tid		901371	2					
ANR	902044	PtrMemberAccess	core -> dbg -> tid		901371	0					
ANR	902045	PtrMemberAccess	core -> dbg		901371	0					
ANR	902046	Identifier	core		901371	0					
ANR	902047	Identifier	dbg		901371	1					
ANR	902048	Identifier	tid		901371	1					
ANR	902049	ExpressionStatement	r_debug_continue ( core -> dbg )	4318:2:123297:123325	901371	46	True				
ANR	902050	CallExpression	r_debug_continue ( core -> dbg )		901371	0					
ANR	902051	Callee	r_debug_continue		901371	0					
ANR	902052	Identifier	r_debug_continue		901371	0					
ANR	902053	ArgumentList	core -> dbg		901371	1					
ANR	902054	Argument	core -> dbg		901371	0					
ANR	902055	PtrMemberAccess	core -> dbg		901371	0					
ANR	902056	Identifier	core		901371	0					
ANR	902057	Identifier	dbg		901371	1					
ANR	902058	ExpressionStatement	"r_debug_select ( core -> dbg , old_pid , core -> dbg -> tid )"	4319:2:123329:123380	901371	47	True				
ANR	902059	CallExpression	"r_debug_select ( core -> dbg , old_pid , core -> dbg -> tid )"		901371	0					
ANR	902060	Callee	r_debug_select		901371	0					
ANR	902061	Identifier	r_debug_select		901371	0					
ANR	902062	ArgumentList	core -> dbg		901371	1					
ANR	902063	Argument	core -> dbg		901371	0					
ANR	902064	PtrMemberAccess	core -> dbg		901371	0					
ANR	902065	Identifier	core		901371	0					
ANR	902066	Identifier	dbg		901371	1					
ANR	902067	Argument	old_pid		901371	1					
ANR	902068	Identifier	old_pid		901371	0					
ANR	902069	Argument	core -> dbg -> tid		901371	2					
ANR	902070	PtrMemberAccess	core -> dbg -> tid		901371	0					
ANR	902071	PtrMemberAccess	core -> dbg		901371	0					
ANR	902072	Identifier	core		901371	0					
ANR	902073	Identifier	dbg		901371	1					
ANR	902074	Identifier	tid		901371	1					
ANR	902075	BreakStatement	break ;	4320:2:123384:123389	901371	48	True				
ANR	902076	Label	case 't' :	4321:1:123392:123400	901371	49	True				
ANR	902077	ExpressionStatement	"cmd_debug_backtrace ( core , input + 2 )"	4322:2:123404:123441	901371	50	True				
ANR	902078	CallExpression	"cmd_debug_backtrace ( core , input + 2 )"		901371	0					
ANR	902079	Callee	cmd_debug_backtrace		901371	0					
ANR	902080	Identifier	cmd_debug_backtrace		901371	0					
ANR	902081	ArgumentList	core		901371	1					
ANR	902082	Argument	core		901371	0					
ANR	902083	Identifier	core		901371	0					
ANR	902084	Argument	input + 2		901371	1					
ANR	902085	AdditiveExpression	input + 2		901371	0		+			
ANR	902086	Identifier	input		901371	0					
ANR	902087	PrimaryExpression	2		901371	1					
ANR	902088	BreakStatement	break ;	4323:2:123445:123450	901371	51	True				
ANR	902089	Label	case '?' :	4324:1:123453:123461	901371	52	True				
ANR	902090	Label	default :	4325:1:123473:123480	901371	53	True				
ANR	902091	Identifier	default		901371	0					
ANR	902092	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dc )"	4326:2:123484:123519	901371	54	True				
ANR	902093	CallExpression	"r_core_cmd_help ( core , help_msg_dc )"		901371	0					
ANR	902094	Callee	r_core_cmd_help		901371	0					
ANR	902095	Identifier	r_core_cmd_help		901371	0					
ANR	902096	ArgumentList	core		901371	1					
ANR	902097	Argument	core		901371	0					
ANR	902098	Identifier	core		901371	0					
ANR	902099	Argument	help_msg_dc		901371	1					
ANR	902100	Identifier	help_msg_dc		901371	0					
ANR	902101	ReturnStatement	return 0 ;	4327:2:123523:123531	901371	55	True				
ANR	902102	PrimaryExpression	0		901371	0					
ANR	902103	ReturnStatement	return 1 ;	4329:1:123537:123545	901371	3	True				
ANR	902104	PrimaryExpression	1		901371	0					
ANR	902105	ReturnType	static int		901371	1					
ANR	902106	Identifier	cmd_debug_continue		901371	2					
ANR	902107	ParameterList	"RCore * core , const char * input"		901371	3					
ANR	902108	Parameter	RCore * core	4195:31:120080:120090	901371	0	True				
ANR	902109	ParameterType	RCore *		901371	0					
ANR	902110	Identifier	core		901371	1					
ANR	902111	Parameter	const char * input	4195:44:120093:120109	901371	1	True				
ANR	902112	ParameterType	const char *		901371	0					
ANR	902113	Identifier	input		901371	1					
ANR	902114	CFGEntryNode	ENTRY		901371		True				
ANR	902115	CFGExitNode	EXIT		901371		True				
ANR	902116	Symbol	help_msg_dc		901371						
ANR	902117	Symbol	r_debug_reg_get		901371						
ANR	902118	Symbol	* input		901371						
ANR	902119	Symbol	* core		901371						
ANR	902120	Symbol	strchr		901371						
ANR	902121	Symbol	pid		901371						
ANR	902122	Symbol	* core -> dbg -> trace		901371						
ANR	902123	Symbol	tid		901371						
ANR	902124	Symbol	r_num_math		901371						
ANR	902125	Symbol	R_ANAL_OP_TYPE_UCALL		901371						
ANR	902126	Symbol	r_cons_is_breaked		901371						
ANR	902127	Symbol	core -> io		901371						
ANR	902128	Symbol	core -> dbg -> trace		901371						
ANR	902129	Symbol	* ptr		901371						
ANR	902130	Symbol	core -> num		901371						
ANR	902131	Symbol	r_debug_continue_back		901371						
ANR	902132	Symbol	* * core		901371						
ANR	902133	Symbol	R_REG_TYPE_GPR		901371						
ANR	902134	Symbol	R_ANAL_OP_TYPE_RET		901371						
ANR	902135	Symbol	signum		901371						
ANR	902136	Symbol	atoi		901371						
ANR	902137	Symbol	core -> dbg -> continue_all_threads		901371						
ANR	902138	Symbol	NULL		901371						
ANR	902139	Symbol	help_msg_dcu		901371						
ANR	902140	Symbol	help_msg_dcs		901371						
ANR	902141	Symbol	false		901371						
ANR	902142	Symbol	n		901371						
ANR	902143	Symbol	ptr		901371						
ANR	902144	Symbol	core		901371						
ANR	902145	Symbol	input		901371						
ANR	902146	Symbol	* * * core		901371						
ANR	902147	Symbol	r_debug_is_dead		901371						
ANR	902148	Symbol	s		901371						
ANR	902149	Symbol	pc		901371						
ANR	902150	Symbol	core -> dbg -> trace -> enabled		901371						
ANR	902151	Symbol	t		901371						
ANR	902152	Symbol	core -> dbg -> reg		901371						
ANR	902153	Symbol	R_ANAL_OP_TYPE_CALL		901371						
ANR	902154	Symbol	static_debug_stop		901371						
ANR	902155	Symbol	true		901371						
ANR	902156	Symbol	core -> dbg -> tid		901371						
ANR	902157	Symbol	old_tid		901371						
ANR	902158	Symbol	* core -> dbg		901371						
ANR	902159	Symbol	core -> dbg -> pid		901371						
ANR	902160	Symbol	old_pid		901371						
ANR	902161	Symbol	r_io_map_get		901371						
ANR	902162	Symbol	core -> dbg		901371						
ANR	902163	Symbol	* * core -> dbg		901371						
ANR	902164	Function	get_corefile_name	4332:0:123550:123698							
ANR	902165	FunctionDef	"get_corefile_name (const char * raw_name , int pid)"		902164	0					
ANR	902166	CompoundStatement		4332:63:123613:123698	902164	0					
ANR	902167	ReturnStatement	"return ( ! * raw_name ) ? r_str_newf ( ""core.%u"" , pid ) : r_str_trim_dup ( raw_name ) ;"	4333:1:123616:123696	902164	0	True				
ANR	902168	ConditionalExpression	"( ! * raw_name ) ? r_str_newf ( ""core.%u"" , pid ) : r_str_trim_dup ( raw_name )"		902164	0					
ANR	902169	Condition	! * raw_name		902164	0					
ANR	902170	UnaryOperationExpression	! * raw_name		902164	0					
ANR	902171	UnaryOperator	!		902164	0					
ANR	902172	UnaryOperationExpression	* raw_name		902164	1					
ANR	902173	UnaryOperator	*		902164	0					
ANR	902174	Identifier	raw_name		902164	1					
ANR	902175	CallExpression	"r_str_newf ( ""core.%u"" , pid )"		902164	1					
ANR	902176	Callee	r_str_newf		902164	0					
ANR	902177	Identifier	r_str_newf		902164	0					
ANR	902178	ArgumentList	"""core.%u"""		902164	1					
ANR	902179	Argument	"""core.%u"""		902164	0					
ANR	902180	PrimaryExpression	"""core.%u"""		902164	0					
ANR	902181	Argument	pid		902164	1					
ANR	902182	Identifier	pid		902164	0					
ANR	902183	CallExpression	r_str_trim_dup ( raw_name )		902164	2					
ANR	902184	Callee	r_str_trim_dup		902164	0					
ANR	902185	Identifier	r_str_trim_dup		902164	0					
ANR	902186	ArgumentList	raw_name		902164	1					
ANR	902187	Argument	raw_name		902164	0					
ANR	902188	Identifier	raw_name		902164	0					
ANR	902189	ReturnType	static char *		902164	1					
ANR	902190	Identifier	get_corefile_name		902164	2					
ANR	902191	ParameterList	"const char * raw_name , int pid"		902164	3					
ANR	902192	Parameter	const char * raw_name	4332:32:123582:123601	902164	0	True				
ANR	902193	ParameterType	const char *		902164	0					
ANR	902194	Identifier	raw_name		902164	1					
ANR	902195	Parameter	int pid	4332:54:123604:123610	902164	1	True				
ANR	902196	ParameterType	int		902164	0					
ANR	902197	Identifier	pid		902164	1					
ANR	902198	CFGEntryNode	ENTRY		902164		True				
ANR	902199	CFGExitNode	EXIT		902164		True				
ANR	902200	Symbol	raw_name		902164						
ANR	902201	Symbol	* raw_name		902164						
ANR	902202	Symbol	pid		902164						
ANR	902203	Symbol	r_str_newf		902164						
ANR	902204	Symbol	r_str_trim_dup		902164						
ANR	902205	Function	cmd_debug_step	4338:0:123701:128350							
ANR	902206	FunctionDef	"cmd_debug_step (RCore * core , const char * input)"		902205	0					
ANR	902207	CompoundStatement		4338:59:123760:128350	902205	0					
ANR	902208	IdentifierDeclStatement	ut64 addr = core -> offset ;	4339:1:123763:123787	902205	0	True				
ANR	902209	IdentifierDecl	addr = core -> offset		902205	0					
ANR	902210	IdentifierDeclType	ut64		902205	0					
ANR	902211	Identifier	addr		902205	1					
ANR	902212	AssignmentExpression	addr = core -> offset		902205	2		=			
ANR	902213	Identifier	addr		902205	0					
ANR	902214	PtrMemberAccess	core -> offset		902205	1					
ANR	902215	Identifier	core		902205	0					
ANR	902216	Identifier	offset		902205	1					
ANR	902217	ExpressionStatement		4339:26:123788:123788	902205	1	True				
ANR	902218	IdentifierDeclStatement	ut8 buf [ 64 ] ;	4340:1:123791:123802	902205	2	True				
ANR	902219	IdentifierDecl	buf [ 64 ]		902205	0					
ANR	902220	IdentifierDeclType	ut8 [ 64 ]		902205	0					
ANR	902221	Identifier	buf		902205	1					
ANR	902222	PrimaryExpression	64		902205	2					
ANR	902223	IdentifierDeclStatement	RAnalOp aop ;	4341:1:123805:123816	902205	3	True				
ANR	902224	IdentifierDecl	aop		902205	0					
ANR	902225	IdentifierDeclType	RAnalOp		902205	0					
ANR	902226	Identifier	aop		902205	1					
ANR	902227	IdentifierDeclStatement	"int i , times = 1 ;"	4342:1:123819:123835	902205	4	True				
ANR	902228	IdentifierDecl	i		902205	0					
ANR	902229	IdentifierDeclType	int		902205	0					
ANR	902230	Identifier	i		902205	1					
ANR	902231	IdentifierDecl	times = 1		902205	1					
ANR	902232	IdentifierDeclType	int		902205	0					
ANR	902233	Identifier	times		902205	1					
ANR	902234	AssignmentExpression	times = 1		902205	2		=			
ANR	902235	Identifier	times		902205	0					
ANR	902236	PrimaryExpression	1		902205	1					
ANR	902237	IfStatement	if ( strlen ( input ) > 2 )		902205	5					
ANR	902238	Condition	strlen ( input ) > 2	4343:5:123842:123859	902205	0	True				
ANR	902239	RelationalExpression	strlen ( input ) > 2		902205	0		>			
ANR	902240	CallExpression	strlen ( input )		902205	0					
ANR	902241	Callee	strlen		902205	0					
ANR	902242	Identifier	strlen		902205	0					
ANR	902243	ArgumentList	input		902205	1					
ANR	902244	Argument	input		902205	0					
ANR	902245	Identifier	input		902205	0					
ANR	902246	PrimaryExpression	2		902205	1					
ANR	902247	CompoundStatement		6:25:101:101	902205	1					
ANR	902248	ExpressionStatement	"times = r_num_math ( core -> num , input + 2 )"	4344:2:123866:123907	902205	0	True				
ANR	902249	AssignmentExpression	"times = r_num_math ( core -> num , input + 2 )"		902205	0		=			
ANR	902250	Identifier	times		902205	0					
ANR	902251	CallExpression	"r_num_math ( core -> num , input + 2 )"		902205	1					
ANR	902252	Callee	r_num_math		902205	0					
ANR	902253	Identifier	r_num_math		902205	0					
ANR	902254	ArgumentList	core -> num		902205	1					
ANR	902255	Argument	core -> num		902205	0					
ANR	902256	PtrMemberAccess	core -> num		902205	0					
ANR	902257	Identifier	core		902205	0					
ANR	902258	Identifier	num		902205	1					
ANR	902259	Argument	input + 2		902205	1					
ANR	902260	AdditiveExpression	input + 2		902205	0		+			
ANR	902261	Identifier	input		902205	0					
ANR	902262	PrimaryExpression	2		902205	1					
ANR	902263	IfStatement	if ( times < 1 )		902205	6					
ANR	902264	Condition	times < 1	4346:5:123917:123925	902205	0	True				
ANR	902265	RelationalExpression	times < 1		902205	0		<			
ANR	902266	Identifier	times		902205	0					
ANR	902267	PrimaryExpression	1		902205	1					
ANR	902268	CompoundStatement		9:16:167:167	902205	1					
ANR	902269	ExpressionStatement	times = 1	4347:2:123932:123941	902205	0	True				
ANR	902270	AssignmentExpression	times = 1		902205	0		=			
ANR	902271	Identifier	times		902205	0					
ANR	902272	PrimaryExpression	1		902205	1					
ANR	902273	SwitchStatement	switch ( input [ 1 ] )		902205	7					
ANR	902274	Condition	input [ 1 ]	4349:9:123955:123962	902205	0	True				
ANR	902275	ArrayIndexing	input [ 1 ]		902205	0					
ANR	902276	Identifier	input		902205	0					
ANR	902277	PrimaryExpression	1		902205	1					
ANR	902278	CompoundStatement		12:19:204:204	902205	1					
ANR	902279	Label	case 0 :	4350:1:123968:123974	902205	0	True				
ANR	902280	Label	case ' ' :	4351:1:123985:123993	902205	1	True				
ANR	902281	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.debug"" ) )"		902205	2					
ANR	902282	Condition	"r_config_get_i ( core -> config , ""cfg.debug"" )"	4352:6:124001:124042	902205	0	True				
ANR	902283	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		902205	0					
ANR	902284	Callee	r_config_get_i		902205	0					
ANR	902285	Identifier	r_config_get_i		902205	0					
ANR	902286	ArgumentList	core -> config		902205	1					
ANR	902287	Argument	core -> config		902205	0					
ANR	902288	PtrMemberAccess	core -> config		902205	0					
ANR	902289	Identifier	core		902205	0					
ANR	902290	Identifier	config		902205	1					
ANR	902291	Argument	"""cfg.debug"""		902205	1					
ANR	902292	PrimaryExpression	"""cfg.debug"""		902205	0					
ANR	902293	CompoundStatement		20:3:469:512	902205	1					
ANR	902294	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4353:3:124050:124089	902205	0	True				
ANR	902295	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		902205	0					
ANR	902296	Callee	r_reg_arena_swap		902205	0					
ANR	902297	Identifier	r_reg_arena_swap		902205	0					
ANR	902298	ArgumentList	core -> dbg -> reg		902205	1					
ANR	902299	Argument	core -> dbg -> reg		902205	0					
ANR	902300	PtrMemberAccess	core -> dbg -> reg		902205	0					
ANR	902301	PtrMemberAccess	core -> dbg		902205	0					
ANR	902302	Identifier	core		902205	0					
ANR	902303	Identifier	dbg		902205	1					
ANR	902304	Identifier	reg		902205	1					
ANR	902305	Argument	true		902205	1					
ANR	902306	Identifier	true		902205	0					
ANR	902307	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4356:3:124174:124225	902205	1	True				
ANR	902308	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		902205	0					
ANR	902309	Callee	r_debug_reg_sync		902205	0					
ANR	902310	Identifier	r_debug_reg_sync		902205	0					
ANR	902311	ArgumentList	core -> dbg		902205	1					
ANR	902312	Argument	core -> dbg		902205	0					
ANR	902313	PtrMemberAccess	core -> dbg		902205	0					
ANR	902314	Identifier	core		902205	0					
ANR	902315	Identifier	dbg		902205	1					
ANR	902316	Argument	R_REG_TYPE_GPR		902205	1					
ANR	902317	Identifier	R_REG_TYPE_GPR		902205	0					
ANR	902318	Argument	false		902205	2					
ANR	902319	Identifier	false		902205	0					
ANR	902320	IdentifierDeclStatement	"ut64 pc = r_debug_reg_get ( core -> dbg , ""PC"" ) ;"	4357:3:124230:124273	902205	2	True				
ANR	902321	IdentifierDecl	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		902205	0					
ANR	902322	IdentifierDeclType	ut64		902205	0					
ANR	902323	Identifier	pc		902205	1					
ANR	902324	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		902205	2		=			
ANR	902325	Identifier	pc		902205	0					
ANR	902326	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		902205	1					
ANR	902327	Callee	r_debug_reg_get		902205	0					
ANR	902328	Identifier	r_debug_reg_get		902205	0					
ANR	902329	ArgumentList	core -> dbg		902205	1					
ANR	902330	Argument	core -> dbg		902205	0					
ANR	902331	PtrMemberAccess	core -> dbg		902205	0					
ANR	902332	Identifier	core		902205	0					
ANR	902333	Identifier	dbg		902205	1					
ANR	902334	Argument	"""PC"""		902205	1					
ANR	902335	PrimaryExpression	"""PC"""		902205	0					
ANR	902336	ExpressionStatement	"r_debug_trace_pc ( core -> dbg , pc )"	4358:3:124278:124310	902205	3	True				
ANR	902337	CallExpression	"r_debug_trace_pc ( core -> dbg , pc )"		902205	0					
ANR	902338	Callee	r_debug_trace_pc		902205	0					
ANR	902339	Identifier	r_debug_trace_pc		902205	0					
ANR	902340	ArgumentList	core -> dbg		902205	1					
ANR	902341	Argument	core -> dbg		902205	0					
ANR	902342	PtrMemberAccess	core -> dbg		902205	0					
ANR	902343	Identifier	core		902205	0					
ANR	902344	Identifier	dbg		902205	1					
ANR	902345	Argument	pc		902205	1					
ANR	902346	Identifier	pc		902205	0					
ANR	902347	IfStatement	"if ( ! r_debug_step ( core -> dbg , times ) )"		902205	4					
ANR	902348	Condition	"! r_debug_step ( core -> dbg , times )"	4359:7:124319:124350	902205	0	True				
ANR	902349	UnaryOperationExpression	"! r_debug_step ( core -> dbg , times )"		902205	0					
ANR	902350	UnaryOperator	!		902205	0					
ANR	902351	CallExpression	"r_debug_step ( core -> dbg , times )"		902205	1					
ANR	902352	Callee	r_debug_step		902205	0					
ANR	902353	Identifier	r_debug_step		902205	0					
ANR	902354	ArgumentList	core -> dbg		902205	1					
ANR	902355	Argument	core -> dbg		902205	0					
ANR	902356	PtrMemberAccess	core -> dbg		902205	0					
ANR	902357	Identifier	core		902205	0					
ANR	902358	Identifier	dbg		902205	1					
ANR	902359	Argument	times		902205	1					
ANR	902360	Identifier	times		902205	0					
ANR	902361	CompoundStatement		22:41:592:592	902205	1					
ANR	902362	ExpressionStatement	"eprintf ( ""Step failed\\n"" )"	4360:4:124359:124384	902205	0	True				
ANR	902363	CallExpression	"eprintf ( ""Step failed\\n"" )"		902205	0					
ANR	902364	Callee	eprintf		902205	0					
ANR	902365	Identifier	eprintf		902205	0					
ANR	902366	ArgumentList	"""Step failed\\n"""		902205	1					
ANR	902367	Argument	"""Step failed\\n"""		902205	0					
ANR	902368	PrimaryExpression	"""Step failed\\n"""		902205	0					
ANR	902369	ExpressionStatement	core -> break_loop = true	4361:4:124390:124413	902205	1	True				
ANR	902370	AssignmentExpression	core -> break_loop = true		902205	0		=			
ANR	902371	PtrMemberAccess	core -> break_loop		902205	0					
ANR	902372	Identifier	core		902205	0					
ANR	902373	Identifier	break_loop		902205	1					
ANR	902374	Identifier	true		902205	1					
ANR	902375	ElseStatement	else		902205	0					
ANR	902376	CompoundStatement		26:9:668:668	902205	0					
ANR	902377	ExpressionStatement	"r_core_cmdf ( core , ""%daes"" , R_MAX ( 1 , times ) )"	4364:3:124434:124479	902205	0	True				
ANR	902378	CallExpression	"r_core_cmdf ( core , ""%daes"" , R_MAX ( 1 , times ) )"		902205	0					
ANR	902379	Callee	r_core_cmdf		902205	0					
ANR	902380	Identifier	r_core_cmdf		902205	0					
ANR	902381	ArgumentList	core		902205	1					
ANR	902382	Argument	core		902205	0					
ANR	902383	Identifier	core		902205	0					
ANR	902384	Argument	"""%daes"""		902205	1					
ANR	902385	PrimaryExpression	"""%daes"""		902205	0					
ANR	902386	Argument	"R_MAX ( 1 , times )"		902205	2					
ANR	902387	CallExpression	"R_MAX ( 1 , times )"		902205	0					
ANR	902388	Callee	R_MAX		902205	0					
ANR	902389	Identifier	R_MAX		902205	0					
ANR	902390	ArgumentList	1		902205	1					
ANR	902391	Argument	1		902205	0					
ANR	902392	PrimaryExpression	1		902205	0					
ANR	902393	Argument	times		902205	1					
ANR	902394	Identifier	times		902205	0					
ANR	902395	BreakStatement	break ;	4366:2:124487:124492	902205	3	True				
ANR	902396	Label	case 'i' :	4367:1:124495:124503	902205	4	True				
ANR	902397	IfStatement	if ( input [ 2 ] == ' ' )		902205	5					
ANR	902398	Condition	input [ 2 ] == ' '	4368:6:124520:124534	902205	0	True				
ANR	902399	EqualityExpression	input [ 2 ] == ' '		902205	0		==			
ANR	902400	ArrayIndexing	input [ 2 ]		902205	0					
ANR	902401	Identifier	input		902205	0					
ANR	902402	PrimaryExpression	2		902205	1					
ANR	902403	PrimaryExpression	' '		902205	1					
ANR	902404	CompoundStatement		32:3:781:790	902205	1					
ANR	902405	IdentifierDeclStatement	int n = 0 ;	4369:3:124542:124551	902205	0	True				
ANR	902406	IdentifierDecl	n = 0		902205	0					
ANR	902407	IdentifierDeclType	int		902205	0					
ANR	902408	Identifier	n		902205	1					
ANR	902409	AssignmentExpression	n = 0		902205	2		=			
ANR	902410	Identifier	n		902205	0					
ANR	902411	PrimaryExpression	0		902205	1					
ANR	902412	ExpressionStatement	"r_cons_break_push ( static_debug_stop , core -> dbg )"	4370:3:124556:124604	902205	1	True				
ANR	902413	CallExpression	"r_cons_break_push ( static_debug_stop , core -> dbg )"		902205	0					
ANR	902414	Callee	r_cons_break_push		902205	0					
ANR	902415	Identifier	r_cons_break_push		902205	0					
ANR	902416	ArgumentList	static_debug_stop		902205	1					
ANR	902417	Argument	static_debug_stop		902205	0					
ANR	902418	Identifier	static_debug_stop		902205	0					
ANR	902419	Argument	core -> dbg		902205	1					
ANR	902420	PtrMemberAccess	core -> dbg		902205	0					
ANR	902421	Identifier	core		902205	0					
ANR	902422	Identifier	dbg		902205	1					
ANR	902423	DoStatement	do		902205	2					
ANR	902424	CompoundStatement		34:6:851:851	902205	0					
ANR	902425	IfStatement	if ( r_cons_is_breaked ( ) )		902205	0					
ANR	902426	Condition	r_cons_is_breaked ( )	4372:8:124622:124641	902205	0	True				
ANR	902427	CallExpression	r_cons_is_breaked ( )		902205	0					
ANR	902428	Callee	r_cons_is_breaked		902205	0					
ANR	902429	Identifier	r_cons_is_breaked		902205	0					
ANR	902430	ArgumentList			902205	1					
ANR	902431	CompoundStatement		35:30:883:883	902205	1					
ANR	902432	BreakStatement	break ;	4373:5:124651:124656	902205	0	True				
ANR	902433	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	4375:4:124668:124695	902205	1	True				
ANR	902434	CallExpression	"r_debug_step ( core -> dbg , 1 )"		902205	0					
ANR	902435	Callee	r_debug_step		902205	0					
ANR	902436	Identifier	r_debug_step		902205	0					
ANR	902437	ArgumentList	core -> dbg		902205	1					
ANR	902438	Argument	core -> dbg		902205	0					
ANR	902439	PtrMemberAccess	core -> dbg		902205	0					
ANR	902440	Identifier	core		902205	0					
ANR	902441	Identifier	dbg		902205	1					
ANR	902442	Argument	1		902205	1					
ANR	902443	PrimaryExpression	1		902205	0					
ANR	902444	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		902205	2					
ANR	902445	Condition	r_debug_is_dead ( core -> dbg )	4376:8:124705:124731	902205	0	True				
ANR	902446	CallExpression	r_debug_is_dead ( core -> dbg )		902205	0					
ANR	902447	Callee	r_debug_is_dead		902205	0					
ANR	902448	Identifier	r_debug_is_dead		902205	0					
ANR	902449	ArgumentList	core -> dbg		902205	1					
ANR	902450	Argument	core -> dbg		902205	0					
ANR	902451	PtrMemberAccess	core -> dbg		902205	0					
ANR	902452	Identifier	core		902205	0					
ANR	902453	Identifier	dbg		902205	1					
ANR	902454	CompoundStatement		39:37:973:973	902205	1					
ANR	902455	ExpressionStatement	core -> break_loop = true	4377:5:124741:124764	902205	0	True				
ANR	902456	AssignmentExpression	core -> break_loop = true		902205	0		=			
ANR	902457	PtrMemberAccess	core -> break_loop		902205	0					
ANR	902458	Identifier	core		902205	0					
ANR	902459	Identifier	break_loop		902205	1					
ANR	902460	Identifier	true		902205	1					
ANR	902461	BreakStatement	break ;	4378:5:124771:124776	902205	1	True				
ANR	902462	ExpressionStatement	"r_core_cmd0 ( core , "".dr*"" )"	4380:4:124788:124814	902205	3	True				
ANR	902463	CallExpression	"r_core_cmd0 ( core , "".dr*"" )"		902205	0					
ANR	902464	Callee	r_core_cmd0		902205	0					
ANR	902465	Identifier	r_core_cmd0		902205	0					
ANR	902466	ArgumentList	core		902205	1					
ANR	902467	Argument	core		902205	0					
ANR	902468	Identifier	core		902205	0					
ANR	902469	Argument	""".dr*"""		902205	1					
ANR	902470	PrimaryExpression	""".dr*"""		902205	0					
ANR	902471	ExpressionStatement	n ++	4381:4:124820:124823	902205	4	True				
ANR	902472	PostIncDecOperationExpression	n ++		902205	0					
ANR	902473	Identifier	n		902205	0					
ANR	902474	IncDec	++		902205	1					
ANR	902475	Condition	"! r_num_conditional ( core -> num , input + 3 )"	4382:12:124837:124877	902205	1	True				
ANR	902476	UnaryOperationExpression	"! r_num_conditional ( core -> num , input + 3 )"		902205	0					
ANR	902477	UnaryOperator	!		902205	0					
ANR	902478	CallExpression	"r_num_conditional ( core -> num , input + 3 )"		902205	1					
ANR	902479	Callee	r_num_conditional		902205	0					
ANR	902480	Identifier	r_num_conditional		902205	0					
ANR	902481	ArgumentList	core -> num		902205	1					
ANR	902482	Argument	core -> num		902205	0					
ANR	902483	PtrMemberAccess	core -> num		902205	0					
ANR	902484	Identifier	core		902205	0					
ANR	902485	Identifier	num		902205	1					
ANR	902486	Argument	input + 3		902205	1					
ANR	902487	AdditiveExpression	input + 3		902205	0		+			
ANR	902488	Identifier	input		902205	0					
ANR	902489	PrimaryExpression	3		902205	1					
ANR	902490	ExpressionStatement	r_cons_break_pop ( )	4383:3:124884:124903	902205	3	True				
ANR	902491	CallExpression	r_cons_break_pop ( )		902205	0					
ANR	902492	Callee	r_cons_break_pop		902205	0					
ANR	902493	Identifier	r_cons_break_pop		902205	0					
ANR	902494	ArgumentList			902205	1					
ANR	902495	ExpressionStatement	"eprintf ( ""Stopped after %d instructions\\n"" , n )"	4384:3:124908:124954	902205	4	True				
ANR	902496	CallExpression	"eprintf ( ""Stopped after %d instructions\\n"" , n )"		902205	0					
ANR	902497	Callee	eprintf		902205	0					
ANR	902498	Identifier	eprintf		902205	0					
ANR	902499	ArgumentList	"""Stopped after %d instructions\\n"""		902205	1					
ANR	902500	Argument	"""Stopped after %d instructions\\n"""		902205	0					
ANR	902501	PrimaryExpression	"""Stopped after %d instructions\\n"""		902205	0					
ANR	902502	Argument	n		902205	1					
ANR	902503	Identifier	n		902205	0					
ANR	902504	ElseStatement	else		902205	0					
ANR	902505	CompoundStatement		48:9:1204:1204	902205	0					
ANR	902506	ExpressionStatement	"eprintf ( ""3 Missing argument\\n"" )"	4386:3:124970:125002	902205	0	True				
ANR	902507	CallExpression	"eprintf ( ""3 Missing argument\\n"" )"		902205	0					
ANR	902508	Callee	eprintf		902205	0					
ANR	902509	Identifier	eprintf		902205	0					
ANR	902510	ArgumentList	"""3 Missing argument\\n"""		902205	1					
ANR	902511	Argument	"""3 Missing argument\\n"""		902205	0					
ANR	902512	PrimaryExpression	"""3 Missing argument\\n"""		902205	0					
ANR	902513	BreakStatement	break ;	4388:2:125010:125015	902205	6	True				
ANR	902514	Label	case 'f' :	4389:1:125018:125026	902205	7	True				
ANR	902515	ExpressionStatement	step_until_eof ( core )	4390:2:125039:125060	902205	8	True				
ANR	902516	CallExpression	step_until_eof ( core )		902205	0					
ANR	902517	Callee	step_until_eof		902205	0					
ANR	902518	Identifier	step_until_eof		902205	0					
ANR	902519	ArgumentList	core		902205	1					
ANR	902520	Argument	core		902205	0					
ANR	902521	Identifier	core		902205	0					
ANR	902522	BreakStatement	break ;	4391:2:125064:125069	902205	9	True				
ANR	902523	Label	case 'u' :	4392:1:125072:125080	902205	10	True				
ANR	902524	SwitchStatement	switch ( input [ 2 ] )		902205	11					
ANR	902525	Condition	input [ 2 ]	4393:10:125101:125108	902205	0	True				
ANR	902526	ArrayIndexing	input [ 2 ]		902205	0					
ANR	902527	Identifier	input		902205	0					
ANR	902528	PrimaryExpression	2		902205	1					
ANR	902529	CompoundStatement		56:20:1350:1350	902205	1					
ANR	902530	Label	case 'f' :	4394:2:125115:125123	902205	0	True				
ANR	902531	ExpressionStatement	"step_until_flag ( core , input + 3 )"	4395:3:125136:125169	902205	1	True				
ANR	902532	CallExpression	"step_until_flag ( core , input + 3 )"		902205	0					
ANR	902533	Callee	step_until_flag		902205	0					
ANR	902534	Identifier	step_until_flag		902205	0					
ANR	902535	ArgumentList	core		902205	1					
ANR	902536	Argument	core		902205	0					
ANR	902537	Identifier	core		902205	0					
ANR	902538	Argument	input + 3		902205	1					
ANR	902539	AdditiveExpression	input + 3		902205	0		+			
ANR	902540	Identifier	input		902205	0					
ANR	902541	PrimaryExpression	3		902205	1					
ANR	902542	BreakStatement	break ;	4396:3:125174:125179	902205	2	True				
ANR	902543	Label	case 'i' :	4397:2:125183:125191	902205	3	True				
ANR	902544	IfStatement	if ( input [ 3 ] == 'r' )		902205	4					
ANR	902545	Condition	input [ 3 ] == 'r'	4398:7:125208:125222	902205	0	True				
ANR	902546	EqualityExpression	input [ 3 ] == 'r'		902205	0		==			
ANR	902547	ArrayIndexing	input [ 3 ]		902205	0					
ANR	902548	Identifier	input		902205	0					
ANR	902549	PrimaryExpression	3		902205	1					
ANR	902550	PrimaryExpression	'r'		902205	1					
ANR	902551	CompoundStatement		61:24:1464:1464	902205	1					
ANR	902552	ExpressionStatement	"step_until_inst ( core , input + 4 , true )"	4399:4:125231:125270	902205	0	True				
ANR	902553	CallExpression	"step_until_inst ( core , input + 4 , true )"		902205	0					
ANR	902554	Callee	step_until_inst		902205	0					
ANR	902555	Identifier	step_until_inst		902205	0					
ANR	902556	ArgumentList	core		902205	1					
ANR	902557	Argument	core		902205	0					
ANR	902558	Identifier	core		902205	0					
ANR	902559	Argument	input + 4		902205	1					
ANR	902560	AdditiveExpression	input + 4		902205	0		+			
ANR	902561	Identifier	input		902205	0					
ANR	902562	PrimaryExpression	4		902205	1					
ANR	902563	Argument	true		902205	2					
ANR	902564	Identifier	true		902205	0					
ANR	902565	ElseStatement	else		902205	0					
ANR	902566	CompoundStatement		64:8:1524:1524	902205	0					
ANR	902567	ExpressionStatement	"step_until_inst ( core , input + 3 , false )"	4402:4:125291:125331	902205	0	True				
ANR	902568	CallExpression	"step_until_inst ( core , input + 3 , false )"		902205	0					
ANR	902569	Callee	step_until_inst		902205	0					
ANR	902570	Identifier	step_until_inst		902205	0					
ANR	902571	ArgumentList	core		902205	1					
ANR	902572	Argument	core		902205	0					
ANR	902573	Identifier	core		902205	0					
ANR	902574	Argument	input + 3		902205	1					
ANR	902575	AdditiveExpression	input + 3		902205	0		+			
ANR	902576	Identifier	input		902205	0					
ANR	902577	PrimaryExpression	3		902205	1					
ANR	902578	Argument	false		902205	2					
ANR	902579	Identifier	false		902205	0					
ANR	902580	BreakStatement	break ;	4404:3:125341:125346	902205	5	True				
ANR	902581	Label	case 'e' :	4405:2:125350:125358	902205	6	True				
ANR	902582	ExpressionStatement	"step_until_esil ( core , input + 3 )"	4406:3:125371:125404	902205	7	True				
ANR	902583	CallExpression	"step_until_esil ( core , input + 3 )"		902205	0					
ANR	902584	Callee	step_until_esil		902205	0					
ANR	902585	Identifier	step_until_esil		902205	0					
ANR	902586	ArgumentList	core		902205	1					
ANR	902587	Argument	core		902205	0					
ANR	902588	Identifier	core		902205	0					
ANR	902589	Argument	input + 3		902205	1					
ANR	902590	AdditiveExpression	input + 3		902205	0		+			
ANR	902591	Identifier	input		902205	0					
ANR	902592	PrimaryExpression	3		902205	1					
ANR	902593	BreakStatement	break ;	4407:3:125409:125414	902205	8	True				
ANR	902594	Label	case 'o' :	4408:2:125418:125426	902205	9	True				
ANR	902595	ExpressionStatement	"step_until_optype ( core , input + 3 )"	4409:3:125439:125474	902205	10	True				
ANR	902596	CallExpression	"step_until_optype ( core , input + 3 )"		902205	0					
ANR	902597	Callee	step_until_optype		902205	0					
ANR	902598	Identifier	step_until_optype		902205	0					
ANR	902599	ArgumentList	core		902205	1					
ANR	902600	Argument	core		902205	0					
ANR	902601	Identifier	core		902205	0					
ANR	902602	Argument	input + 3		902205	1					
ANR	902603	AdditiveExpression	input + 3		902205	0		+			
ANR	902604	Identifier	input		902205	0					
ANR	902605	PrimaryExpression	3		902205	1					
ANR	902606	BreakStatement	break ;	4410:3:125479:125484	902205	11	True				
ANR	902607	Label	case ' ' :	4411:2:125488:125496	902205	12	True				
ANR	902608	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4412:3:125518:125557	902205	13	True				
ANR	902609	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		902205	0					
ANR	902610	Callee	r_reg_arena_swap		902205	0					
ANR	902611	Identifier	r_reg_arena_swap		902205	0					
ANR	902612	ArgumentList	core -> dbg -> reg		902205	1					
ANR	902613	Argument	core -> dbg -> reg		902205	0					
ANR	902614	PtrMemberAccess	core -> dbg -> reg		902205	0					
ANR	902615	PtrMemberAccess	core -> dbg		902205	0					
ANR	902616	Identifier	core		902205	0					
ANR	902617	Identifier	dbg		902205	1					
ANR	902618	Identifier	reg		902205	1					
ANR	902619	Argument	true		902205	1					
ANR	902620	Identifier	true		902205	0					
ANR	902621	ExpressionStatement	"step_until ( core , r_num_math ( core -> num , input + 2 ) )"	4413:3:125562:125614	902205	14	True				
ANR	902622	CallExpression	"step_until ( core , r_num_math ( core -> num , input + 2 ) )"		902205	0					
ANR	902623	Callee	step_until		902205	0					
ANR	902624	Identifier	step_until		902205	0					
ANR	902625	ArgumentList	core		902205	1					
ANR	902626	Argument	core		902205	0					
ANR	902627	Identifier	core		902205	0					
ANR	902628	Argument	"r_num_math ( core -> num , input + 2 )"		902205	1					
ANR	902629	CallExpression	"r_num_math ( core -> num , input + 2 )"		902205	0					
ANR	902630	Callee	r_num_math		902205	0					
ANR	902631	Identifier	r_num_math		902205	0					
ANR	902632	ArgumentList	core -> num		902205	1					
ANR	902633	Argument	core -> num		902205	0					
ANR	902634	PtrMemberAccess	core -> num		902205	0					
ANR	902635	Identifier	core		902205	0					
ANR	902636	Identifier	num		902205	1					
ANR	902637	Argument	input + 2		902205	1					
ANR	902638	AdditiveExpression	input + 2		902205	0		+			
ANR	902639	Identifier	input		902205	0					
ANR	902640	PrimaryExpression	2		902205	1					
ANR	902641	BreakStatement	break ;	4414:3:125642:125647	902205	15	True				
ANR	902642	Label	default :	4415:2:125651:125658	902205	16	True				
ANR	902643	Identifier	default		902205	0					
ANR	902644	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dsu )"	4416:3:125663:125699	902205	17	True				
ANR	902645	CallExpression	"r_core_cmd_help ( core , help_msg_dsu )"		902205	0					
ANR	902646	Callee	r_core_cmd_help		902205	0					
ANR	902647	Identifier	r_core_cmd_help		902205	0					
ANR	902648	ArgumentList	core		902205	1					
ANR	902649	Argument	core		902205	0					
ANR	902650	Identifier	core		902205	0					
ANR	902651	Argument	help_msg_dsu		902205	1					
ANR	902652	Identifier	help_msg_dsu		902205	0					
ANR	902653	ReturnStatement	return 0 ;	4417:3:125704:125712	902205	18	True				
ANR	902654	PrimaryExpression	0		902205	0					
ANR	902655	BreakStatement	break ;	4419:2:125720:125725	902205	12	True				
ANR	902656	Label	case 'p' :	4420:1:125728:125736	902205	13	True				
ANR	902657	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4421:2:125749:125788	902205	14	True				
ANR	902658	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		902205	0					
ANR	902659	Callee	r_reg_arena_swap		902205	0					
ANR	902660	Identifier	r_reg_arena_swap		902205	0					
ANR	902661	ArgumentList	core -> dbg -> reg		902205	1					
ANR	902662	Argument	core -> dbg -> reg		902205	0					
ANR	902663	PtrMemberAccess	core -> dbg -> reg		902205	0					
ANR	902664	PtrMemberAccess	core -> dbg		902205	0					
ANR	902665	Identifier	core		902205	0					
ANR	902666	Identifier	dbg		902205	1					
ANR	902667	Identifier	reg		902205	1					
ANR	902668	Argument	true		902205	1					
ANR	902669	Identifier	true		902205	0					
ANR	902670	ForStatement	for ( i = 0 ; i < times ; i ++ )		902205	15					
ANR	902671	ForInit	i = 0 ;	4422:7:125797:125802	902205	0	True				
ANR	902672	AssignmentExpression	i = 0		902205	0		=			
ANR	902673	Identifier	i		902205	0					
ANR	902674	PrimaryExpression	0		902205	1					
ANR	902675	Condition	i < times	4422:14:125804:125812	902205	1	True				
ANR	902676	RelationalExpression	i < times		902205	0		<			
ANR	902677	Identifier	i		902205	0					
ANR	902678	Identifier	times		902205	1					
ANR	902679	PostIncDecOperationExpression	i ++	4422:25:125815:125817	902205	2	True				
ANR	902680	Identifier	i		902205	0					
ANR	902681	IncDec	++		902205	1					
ANR	902682	CompoundStatement		88:3:2094:2105	902205	3					
ANR	902683	IdentifierDeclStatement	ut8 buf [ 64 ] ;	4423:3:125825:125836	902205	0	True				
ANR	902684	IdentifierDecl	buf [ 64 ]		902205	0					
ANR	902685	IdentifierDeclType	ut8 [ 64 ]		902205	0					
ANR	902686	Identifier	buf		902205	1					
ANR	902687	PrimaryExpression	64		902205	2					
ANR	902688	IdentifierDeclStatement	ut64 addr ;	4424:3:125841:125850	902205	1	True				
ANR	902689	IdentifierDecl	addr		902205	0					
ANR	902690	IdentifierDeclType	ut64		902205	0					
ANR	902691	Identifier	addr		902205	1					
ANR	902692	IdentifierDeclStatement	RAnalOp aop ;	4425:3:125855:125866	902205	2	True				
ANR	902693	IdentifierDecl	aop		902205	0					
ANR	902694	IdentifierDeclType	RAnalOp		902205	0					
ANR	902695	Identifier	aop		902205	1					
ANR	902696	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4426:3:125871:125922	902205	3	True				
ANR	902697	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		902205	0					
ANR	902698	Callee	r_debug_reg_sync		902205	0					
ANR	902699	Identifier	r_debug_reg_sync		902205	0					
ANR	902700	ArgumentList	core -> dbg		902205	1					
ANR	902701	Argument	core -> dbg		902205	0					
ANR	902702	PtrMemberAccess	core -> dbg		902205	0					
ANR	902703	Identifier	core		902205	0					
ANR	902704	Identifier	dbg		902205	1					
ANR	902705	Argument	R_REG_TYPE_GPR		902205	1					
ANR	902706	Identifier	R_REG_TYPE_GPR		902205	0					
ANR	902707	Argument	false		902205	2					
ANR	902708	Identifier	false		902205	0					
ANR	902709	ExpressionStatement	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"	4427:3:125927:125967	902205	4	True				
ANR	902710	AssignmentExpression	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"		902205	0		=			
ANR	902711	Identifier	addr		902205	0					
ANR	902712	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		902205	1					
ANR	902713	Callee	r_debug_reg_get		902205	0					
ANR	902714	Identifier	r_debug_reg_get		902205	0					
ANR	902715	ArgumentList	core -> dbg		902205	1					
ANR	902716	Argument	core -> dbg		902205	0					
ANR	902717	PtrMemberAccess	core -> dbg		902205	0					
ANR	902718	Identifier	core		902205	0					
ANR	902719	Identifier	dbg		902205	1					
ANR	902720	Argument	"""PC"""		902205	1					
ANR	902721	PrimaryExpression	"""PC"""		902205	0					
ANR	902722	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"	4428:3:125972:126020	902205	5	True				
ANR	902723	CallExpression	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"		902205	0					
ANR	902724	Callee	r_io_read_at		902205	0					
ANR	902725	Identifier	r_io_read_at		902205	0					
ANR	902726	ArgumentList	core -> io		902205	1					
ANR	902727	Argument	core -> io		902205	0					
ANR	902728	PtrMemberAccess	core -> io		902205	0					
ANR	902729	Identifier	core		902205	0					
ANR	902730	Identifier	io		902205	1					
ANR	902731	Argument	addr		902205	1					
ANR	902732	Identifier	addr		902205	0					
ANR	902733	Argument	buf		902205	2					
ANR	902734	Identifier	buf		902205	0					
ANR	902735	Argument	sizeof ( buf )		902205	3					
ANR	902736	SizeofExpression	sizeof ( buf )		902205	0					
ANR	902737	Sizeof	sizeof		902205	0					
ANR	902738	SizeofOperand	buf		902205	1					
ANR	902739	ExpressionStatement	"r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	4429:3:126025:126100	902205	6	True				
ANR	902740	CallExpression	"r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		902205	0					
ANR	902741	Callee	r_anal_op		902205	0					
ANR	902742	Identifier	r_anal_op		902205	0					
ANR	902743	ArgumentList	core -> anal		902205	1					
ANR	902744	Argument	core -> anal		902205	0					
ANR	902745	PtrMemberAccess	core -> anal		902205	0					
ANR	902746	Identifier	core		902205	0					
ANR	902747	Identifier	anal		902205	1					
ANR	902748	Argument	& aop		902205	1					
ANR	902749	UnaryOperationExpression	& aop		902205	0					
ANR	902750	UnaryOperator	&		902205	0					
ANR	902751	Identifier	aop		902205	1					
ANR	902752	Argument	addr		902205	2					
ANR	902753	Identifier	addr		902205	0					
ANR	902754	Argument	buf		902205	3					
ANR	902755	Identifier	buf		902205	0					
ANR	902756	Argument	sizeof ( buf )		902205	4					
ANR	902757	SizeofExpression	sizeof ( buf )		902205	0					
ANR	902758	Sizeof	sizeof		902205	0					
ANR	902759	SizeofOperand	buf		902205	1					
ANR	902760	Argument	R_ANAL_OP_MASK_BASIC		902205	5					
ANR	902761	Identifier	R_ANAL_OP_MASK_BASIC		902205	0					
ANR	902762	IfStatement	if ( aop . type == R_ANAL_OP_TYPE_CALL )		902205	7					
ANR	902763	Condition	aop . type == R_ANAL_OP_TYPE_CALL	4430:7:126109:126139	902205	0	True				
ANR	902764	EqualityExpression	aop . type == R_ANAL_OP_TYPE_CALL		902205	0		==			
ANR	902765	MemberAccess	aop . type		902205	0					
ANR	902766	Identifier	aop		902205	0					
ANR	902767	Identifier	type		902205	1					
ANR	902768	Identifier	R_ANAL_OP_TYPE_CALL		902205	1					
ANR	902769	CompoundStatement		95:4:2437:2494	902205	1					
ANR	902770	IdentifierDeclStatement	RBinObject * o = r_bin_cur_object ( core -> bin ) ;	4431:4:126148:126192	902205	0	True				
ANR	902771	IdentifierDecl	* o = r_bin_cur_object ( core -> bin )		902205	0					
ANR	902772	IdentifierDeclType	RBinObject *		902205	0					
ANR	902773	Identifier	o		902205	1					
ANR	902774	AssignmentExpression	* o = r_bin_cur_object ( core -> bin )		902205	2		=			
ANR	902775	Identifier	o		902205	0					
ANR	902776	CallExpression	r_bin_cur_object ( core -> bin )		902205	1					
ANR	902777	Callee	r_bin_cur_object		902205	0					
ANR	902778	Identifier	r_bin_cur_object		902205	0					
ANR	902779	ArgumentList	core -> bin		902205	1					
ANR	902780	Argument	core -> bin		902205	0					
ANR	902781	PtrMemberAccess	core -> bin		902205	0					
ANR	902782	Identifier	core		902205	0					
ANR	902783	Identifier	bin		902205	1					
ANR	902784	IdentifierDeclStatement	"RBinSection * s = r_bin_get_section_at ( o , aop . jump , true ) ;"	4432:4:126198:126255	902205	1	True				
ANR	902785	IdentifierDecl	"* s = r_bin_get_section_at ( o , aop . jump , true )"		902205	0					
ANR	902786	IdentifierDeclType	RBinSection *		902205	0					
ANR	902787	Identifier	s		902205	1					
ANR	902788	AssignmentExpression	"* s = r_bin_get_section_at ( o , aop . jump , true )"		902205	2		=			
ANR	902789	Identifier	s		902205	0					
ANR	902790	CallExpression	"r_bin_get_section_at ( o , aop . jump , true )"		902205	1					
ANR	902791	Callee	r_bin_get_section_at		902205	0					
ANR	902792	Identifier	r_bin_get_section_at		902205	0					
ANR	902793	ArgumentList	o		902205	1					
ANR	902794	Argument	o		902205	0					
ANR	902795	Identifier	o		902205	0					
ANR	902796	Argument	aop . jump		902205	1					
ANR	902797	MemberAccess	aop . jump		902205	0					
ANR	902798	Identifier	aop		902205	0					
ANR	902799	Identifier	jump		902205	1					
ANR	902800	Argument	true		902205	2					
ANR	902801	Identifier	true		902205	0					
ANR	902802	IfStatement	if ( ! s )		902205	2					
ANR	902803	Condition	! s	4433:8:126265:126266	902205	0	True				
ANR	902804	UnaryOperationExpression	! s		902205	0					
ANR	902805	UnaryOperator	!		902205	0					
ANR	902806	Identifier	s		902205	1					
ANR	902807	CompoundStatement		96:12:2508:2508	902205	1					
ANR	902808	ExpressionStatement	"r_debug_step_over ( core -> dbg , times )"	4434:5:126276:126312	902205	0	True				
ANR	902809	CallExpression	"r_debug_step_over ( core -> dbg , times )"		902205	0					
ANR	902810	Callee	r_debug_step_over		902205	0					
ANR	902811	Identifier	r_debug_step_over		902205	0					
ANR	902812	ArgumentList	core -> dbg		902205	1					
ANR	902813	Argument	core -> dbg		902205	0					
ANR	902814	PtrMemberAccess	core -> dbg		902205	0					
ANR	902815	Identifier	core		902205	0					
ANR	902816	Identifier	dbg		902205	1					
ANR	902817	Argument	times		902205	1					
ANR	902818	Identifier	times		902205	0					
ANR	902819	ContinueStatement	continue ;	4435:5:126319:126327	902205	1	True				
ANR	902820	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	4438:3:126343:126370	902205	8	True				
ANR	902821	CallExpression	"r_debug_step ( core -> dbg , 1 )"		902205	0					
ANR	902822	Callee	r_debug_step		902205	0					
ANR	902823	Identifier	r_debug_step		902205	0					
ANR	902824	ArgumentList	core -> dbg		902205	1					
ANR	902825	Argument	core -> dbg		902205	0					
ANR	902826	PtrMemberAccess	core -> dbg		902205	0					
ANR	902827	Identifier	core		902205	0					
ANR	902828	Identifier	dbg		902205	1					
ANR	902829	Argument	1		902205	1					
ANR	902830	PrimaryExpression	1		902205	0					
ANR	902831	BreakStatement	break ;	4440:2:126378:126383	902205	16	True				
ANR	902832	Label	case 's' :	4441:1:126386:126394	902205	17	True				
ANR	902833	CompoundStatement		108:3:2725:2781	902205	18					
ANR	902834	IdentifierDeclStatement	char delb [ 128 ] = R_EMPTY ;	4443:3:126412:126436	902205	0	True				
ANR	902835	IdentifierDecl	delb [ 128 ] = R_EMPTY		902205	0					
ANR	902836	IdentifierDeclType	char [ 128 ]		902205	0					
ANR	902837	Identifier	delb		902205	1					
ANR	902838	PrimaryExpression	128		902205	2					
ANR	902839	AssignmentExpression	delb [ 128 ] = R_EMPTY		902205	3		=			
ANR	902840	Identifier	R_EMPTY		902205	0					
ANR	902841	Identifier	R_EMPTY		902205	1					
ANR	902842	ExpressionStatement	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"	4444:3:126441:126481	902205	1	True				
ANR	902843	AssignmentExpression	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"		902205	0		=			
ANR	902844	Identifier	addr		902205	0					
ANR	902845	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		902205	1					
ANR	902846	Callee	r_debug_reg_get		902205	0					
ANR	902847	Identifier	r_debug_reg_get		902205	0					
ANR	902848	ArgumentList	core -> dbg		902205	1					
ANR	902849	Argument	core -> dbg		902205	0					
ANR	902850	PtrMemberAccess	core -> dbg		902205	0					
ANR	902851	Identifier	core		902205	0					
ANR	902852	Identifier	dbg		902205	1					
ANR	902853	Argument	"""PC"""		902205	1					
ANR	902854	PrimaryExpression	"""PC"""		902205	0					
ANR	902855	IdentifierDeclStatement	"RBreakpointItem * bpi = r_bp_get_at ( core -> dbg -> bp , addr ) ;"	4445:3:126486:126542	902205	2	True				
ANR	902856	IdentifierDecl	"* bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		902205	0					
ANR	902857	IdentifierDeclType	RBreakpointItem *		902205	0					
ANR	902858	Identifier	bpi		902205	1					
ANR	902859	AssignmentExpression	"* bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		902205	2		=			
ANR	902860	Identifier	bpi		902205	0					
ANR	902861	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		902205	1					
ANR	902862	Callee	r_bp_get_at		902205	0					
ANR	902863	Identifier	r_bp_get_at		902205	0					
ANR	902864	ArgumentList	core -> dbg -> bp		902205	1					
ANR	902865	Argument	core -> dbg -> bp		902205	0					
ANR	902866	PtrMemberAccess	core -> dbg -> bp		902205	0					
ANR	902867	PtrMemberAccess	core -> dbg		902205	0					
ANR	902868	Identifier	core		902205	0					
ANR	902869	Identifier	dbg		902205	1					
ANR	902870	Identifier	bp		902205	1					
ANR	902871	Argument	addr		902205	1					
ANR	902872	Identifier	addr		902205	0					
ANR	902873	Statement	sprintf	4446:3:126547:126553	902205	3	True				
ANR	902874	Statement	(	4446:10:126554:126554	902205	4	True				
ANR	902875	Statement	delb	4446:11:126555:126558	902205	5	True				
ANR	902876	Statement	","	4446:15:126559:126559	902205	6	True				
ANR	902877	Statement	"""db 0x%"""	4446:17:126561:126568	902205	7	True				
ANR	902878	Statement	PFMT64x	4446:25:126569:126575	902205	8	True				
ANR	902879	Statement	""""""	4446:32:126576:126577	902205	9	True				
ANR	902880	Statement	","	4446:34:126578:126578	902205	10	True				
ANR	902881	Statement	addr	4446:36:126580:126583	902205	11	True				
ANR	902882	Statement	)	4446:40:126584:126584	902205	12	True				
ANR	902883	ExpressionStatement		4446:41:126585:126585	902205	13	True				
ANR	902884	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4447:3:126590:126629	902205	14	True				
ANR	902885	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		902205	0					
ANR	902886	Callee	r_reg_arena_swap		902205	0					
ANR	902887	Identifier	r_reg_arena_swap		902205	0					
ANR	902888	ArgumentList	core -> dbg -> reg		902205	1					
ANR	902889	Argument	core -> dbg -> reg		902205	0					
ANR	902890	PtrMemberAccess	core -> dbg -> reg		902205	0					
ANR	902891	PtrMemberAccess	core -> dbg		902205	0					
ANR	902892	Identifier	core		902205	0					
ANR	902893	Identifier	dbg		902205	1					
ANR	902894	Identifier	reg		902205	1					
ANR	902895	Argument	true		902205	1					
ANR	902896	Identifier	true		902205	0					
ANR	902897	ForStatement	for ( i = 0 ; i < times ; i ++ )		902205	15					
ANR	902898	ForInit	i = 0 ;	4448:8:126639:126644	902205	0	True				
ANR	902899	AssignmentExpression	i = 0		902205	0		=			
ANR	902900	Identifier	i		902205	0					
ANR	902901	PrimaryExpression	0		902205	1					
ANR	902902	Condition	i < times	4448:15:126646:126654	902205	1	True				
ANR	902903	RelationalExpression	i < times		902205	0		<			
ANR	902904	Identifier	i		902205	0					
ANR	902905	Identifier	times		902205	1					
ANR	902906	PostIncDecOperationExpression	i ++	4448:26:126657:126659	902205	2	True				
ANR	902907	Identifier	i		902205	0					
ANR	902908	IncDec	++		902205	1					
ANR	902909	CompoundStatement		111:31:2901:2901	902205	3					
ANR	902910	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4449:4:126668:126719	902205	0	True				
ANR	902911	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		902205	0					
ANR	902912	Callee	r_debug_reg_sync		902205	0					
ANR	902913	Identifier	r_debug_reg_sync		902205	0					
ANR	902914	ArgumentList	core -> dbg		902205	1					
ANR	902915	Argument	core -> dbg		902205	0					
ANR	902916	PtrMemberAccess	core -> dbg		902205	0					
ANR	902917	Identifier	core		902205	0					
ANR	902918	Identifier	dbg		902205	1					
ANR	902919	Argument	R_REG_TYPE_GPR		902205	1					
ANR	902920	Identifier	R_REG_TYPE_GPR		902205	0					
ANR	902921	Argument	false		902205	2					
ANR	902922	Identifier	false		902205	0					
ANR	902923	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"	4450:4:126725:126773	902205	1	True				
ANR	902924	CallExpression	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"		902205	0					
ANR	902925	Callee	r_io_read_at		902205	0					
ANR	902926	Identifier	r_io_read_at		902205	0					
ANR	902927	ArgumentList	core -> io		902205	1					
ANR	902928	Argument	core -> io		902205	0					
ANR	902929	PtrMemberAccess	core -> io		902205	0					
ANR	902930	Identifier	core		902205	0					
ANR	902931	Identifier	io		902205	1					
ANR	902932	Argument	addr		902205	1					
ANR	902933	Identifier	addr		902205	0					
ANR	902934	Argument	buf		902205	2					
ANR	902935	Identifier	buf		902205	0					
ANR	902936	Argument	sizeof ( buf )		902205	3					
ANR	902937	SizeofExpression	sizeof ( buf )		902205	0					
ANR	902938	Sizeof	sizeof		902205	0					
ANR	902939	SizeofOperand	buf		902205	1					
ANR	902940	ExpressionStatement	"r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	4451:4:126779:126854	902205	2	True				
ANR	902941	CallExpression	"r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		902205	0					
ANR	902942	Callee	r_anal_op		902205	0					
ANR	902943	Identifier	r_anal_op		902205	0					
ANR	902944	ArgumentList	core -> anal		902205	1					
ANR	902945	Argument	core -> anal		902205	0					
ANR	902946	PtrMemberAccess	core -> anal		902205	0					
ANR	902947	Identifier	core		902205	0					
ANR	902948	Identifier	anal		902205	1					
ANR	902949	Argument	& aop		902205	1					
ANR	902950	UnaryOperationExpression	& aop		902205	0					
ANR	902951	UnaryOperator	&		902205	0					
ANR	902952	Identifier	aop		902205	1					
ANR	902953	Argument	addr		902205	2					
ANR	902954	Identifier	addr		902205	0					
ANR	902955	Argument	buf		902205	3					
ANR	902956	Identifier	buf		902205	0					
ANR	902957	Argument	sizeof ( buf )		902205	4					
ANR	902958	SizeofExpression	sizeof ( buf )		902205	0					
ANR	902959	Sizeof	sizeof		902205	0					
ANR	902960	SizeofOperand	buf		902205	1					
ANR	902961	Argument	R_ANAL_OP_MASK_BASIC		902205	5					
ANR	902962	Identifier	R_ANAL_OP_MASK_BASIC		902205	0					
ANR	902963	IfStatement	if ( aop . jump != UT64_MAX && aop . fail != UT64_MAX )		902205	3					
ANR	902964	Condition	aop . jump != UT64_MAX && aop . fail != UT64_MAX	4453:8:126870:126913	902205	0	True				
ANR	902965	AndExpression	aop . jump != UT64_MAX && aop . fail != UT64_MAX		902205	0		&&			
ANR	902966	EqualityExpression	aop . jump != UT64_MAX		902205	0		!=			
ANR	902967	MemberAccess	aop . jump		902205	0					
ANR	902968	Identifier	aop		902205	0					
ANR	902969	Identifier	jump		902205	1					
ANR	902970	Identifier	UT64_MAX		902205	1					
ANR	902971	EqualityExpression	aop . fail != UT64_MAX		902205	1		!=			
ANR	902972	MemberAccess	aop . fail		902205	0					
ANR	902973	Identifier	aop		902205	0					
ANR	902974	Identifier	fail		902205	1					
ANR	902975	Identifier	UT64_MAX		902205	1					
ANR	902976	CompoundStatement		116:54:3155:3155	902205	1					
ANR	902977	ExpressionStatement	"eprintf ( ""Don't know how to skip this instruction\\n"" )"	4454:5:126923:126976	902205	0	True				
ANR	902978	CallExpression	"eprintf ( ""Don't know how to skip this instruction\\n"" )"		902205	0					
ANR	902979	Callee	eprintf		902205	0					
ANR	902980	Identifier	eprintf		902205	0					
ANR	902981	ArgumentList	"""Don't know how to skip this instruction\\n"""		902205	1					
ANR	902982	Argument	"""Don't know how to skip this instruction\\n"""		902205	0					
ANR	902983	PrimaryExpression	"""Don't know how to skip this instruction\\n"""		902205	0					
ANR	902984	IfStatement	if ( bpi )		902205	1					
ANR	902985	Condition	bpi	4455:9:126987:126989	902205	0	True				
ANR	902986	Identifier	bpi		902205	0					
ANR	902987	ExpressionStatement	"r_core_cmd0 ( core , delb )"	4455:14:126992:127016	902205	1	True				
ANR	902988	CallExpression	"r_core_cmd0 ( core , delb )"		902205	0					
ANR	902989	Callee	r_core_cmd0		902205	0					
ANR	902990	Identifier	r_core_cmd0		902205	0					
ANR	902991	ArgumentList	core		902205	1					
ANR	902992	Argument	core		902205	0					
ANR	902993	Identifier	core		902205	0					
ANR	902994	Argument	delb		902205	1					
ANR	902995	Identifier	delb		902205	0					
ANR	902996	BreakStatement	break ;	4456:5:127023:127028	902205	2	True				
ANR	902997	ExpressionStatement	addr += aop . size	4459:4:127047:127063	902205	4	True				
ANR	902998	AssignmentExpression	addr += aop . size		902205	0		+=			
ANR	902999	Identifier	addr		902205	0					
ANR	903000	MemberAccess	aop . size		902205	1					
ANR	903001	Identifier	aop		902205	0					
ANR	903002	Identifier	size		902205	1					
ANR	903003	ExpressionStatement	"r_debug_reg_set ( core -> dbg , ""PC"" , addr )"	4461:3:127073:127112	902205	16	True				
ANR	903004	CallExpression	"r_debug_reg_set ( core -> dbg , ""PC"" , addr )"		902205	0					
ANR	903005	Callee	r_debug_reg_set		902205	0					
ANR	903006	Identifier	r_debug_reg_set		902205	0					
ANR	903007	ArgumentList	core -> dbg		902205	1					
ANR	903008	Argument	core -> dbg		902205	0					
ANR	903009	PtrMemberAccess	core -> dbg		902205	0					
ANR	903010	Identifier	core		902205	0					
ANR	903011	Identifier	dbg		902205	1					
ANR	903012	Argument	"""PC"""		902205	1					
ANR	903013	PrimaryExpression	"""PC"""		902205	0					
ANR	903014	Argument	addr		902205	2					
ANR	903015	Identifier	addr		902205	0					
ANR	903016	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , ""PC"" , addr )"	4462:3:127117:127157	902205	17	True				
ANR	903017	CallExpression	"r_reg_setv ( core -> anal -> reg , ""PC"" , addr )"		902205	0					
ANR	903018	Callee	r_reg_setv		902205	0					
ANR	903019	Identifier	r_reg_setv		902205	0					
ANR	903020	ArgumentList	core -> anal -> reg		902205	1					
ANR	903021	Argument	core -> anal -> reg		902205	0					
ANR	903022	PtrMemberAccess	core -> anal -> reg		902205	0					
ANR	903023	PtrMemberAccess	core -> anal		902205	0					
ANR	903024	Identifier	core		902205	0					
ANR	903025	Identifier	anal		902205	1					
ANR	903026	Identifier	reg		902205	1					
ANR	903027	Argument	"""PC"""		902205	1					
ANR	903028	PrimaryExpression	"""PC"""		902205	0					
ANR	903029	Argument	addr		902205	2					
ANR	903030	Identifier	addr		902205	0					
ANR	903031	ExpressionStatement	"r_core_cmd0 ( core , "".dr*"" )"	4463:3:127162:127188	902205	18	True				
ANR	903032	CallExpression	"r_core_cmd0 ( core , "".dr*"" )"		902205	0					
ANR	903033	Callee	r_core_cmd0		902205	0					
ANR	903034	Identifier	r_core_cmd0		902205	0					
ANR	903035	ArgumentList	core		902205	1					
ANR	903036	Argument	core		902205	0					
ANR	903037	Identifier	core		902205	0					
ANR	903038	Argument	""".dr*"""		902205	1					
ANR	903039	PrimaryExpression	""".dr*"""		902205	0					
ANR	903040	IfStatement	if ( bpi )		902205	19					
ANR	903041	Condition	bpi	4464:7:127197:127199	902205	0	True				
ANR	903042	Identifier	bpi		902205	0					
ANR	903043	CompoundStatement		127:12:3441:3441	902205	1					
ANR	903044	ExpressionStatement	"r_core_cmd0 ( core , delb )"	4465:4:127208:127232	902205	0	True				
ANR	903045	CallExpression	"r_core_cmd0 ( core , delb )"		902205	0					
ANR	903046	Callee	r_core_cmd0		902205	0					
ANR	903047	Identifier	r_core_cmd0		902205	0					
ANR	903048	ArgumentList	core		902205	1					
ANR	903049	Argument	core		902205	0					
ANR	903050	Identifier	core		902205	0					
ANR	903051	Argument	delb		902205	1					
ANR	903052	Identifier	delb		902205	0					
ANR	903053	BreakStatement	break ;	4467:3:127242:127247	902205	20	True				
ANR	903054	Label	case 'o' :	4469:1:127254:127262	902205	19	True				
ANR	903055	IfStatement	"if ( r_config_get_i ( core -> config , ""dbg.skipover"" ) )"		902205	20					
ANR	903056	Condition	"r_config_get_i ( core -> config , ""dbg.skipover"" )"	4470:6:127279:127323	902205	0	True				
ANR	903057	CallExpression	"r_config_get_i ( core -> config , ""dbg.skipover"" )"		902205	0					
ANR	903058	Callee	r_config_get_i		902205	0					
ANR	903059	Identifier	r_config_get_i		902205	0					
ANR	903060	ArgumentList	core -> config		902205	1					
ANR	903061	Argument	core -> config		902205	0					
ANR	903062	PtrMemberAccess	core -> config		902205	0					
ANR	903063	Identifier	core		902205	0					
ANR	903064	Identifier	config		902205	1					
ANR	903065	Argument	"""dbg.skipover"""		902205	1					
ANR	903066	PrimaryExpression	"""dbg.skipover"""		902205	0					
ANR	903067	CompoundStatement		133:53:3565:3565	902205	1					
ANR	903068	ExpressionStatement	"r_core_cmdf ( core , ""dss%s"" , input + 2 )"	4471:3:127331:127369	902205	0	True				
ANR	903069	CallExpression	"r_core_cmdf ( core , ""dss%s"" , input + 2 )"		902205	0					
ANR	903070	Callee	r_core_cmdf		902205	0					
ANR	903071	Identifier	r_core_cmdf		902205	0					
ANR	903072	ArgumentList	core		902205	1					
ANR	903073	Argument	core		902205	0					
ANR	903074	Identifier	core		902205	0					
ANR	903075	Argument	"""dss%s"""		902205	1					
ANR	903076	PrimaryExpression	"""dss%s"""		902205	0					
ANR	903077	Argument	input + 2		902205	2					
ANR	903078	AdditiveExpression	input + 2		902205	0		+			
ANR	903079	Identifier	input		902205	0					
ANR	903080	PrimaryExpression	2		902205	1					
ANR	903081	ElseStatement	else		902205	0					
ANR	903082	CompoundStatement		135:9:3619:3619	902205	0					
ANR	903083	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.debug"" ) )"		902205	0					
ANR	903084	Condition	"r_config_get_i ( core -> config , ""cfg.debug"" )"	4473:7:127389:127430	902205	0	True				
ANR	903085	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		902205	0					
ANR	903086	Callee	r_config_get_i		902205	0					
ANR	903087	Identifier	r_config_get_i		902205	0					
ANR	903088	ArgumentList	core -> config		902205	1					
ANR	903089	Argument	core -> config		902205	0					
ANR	903090	PtrMemberAccess	core -> config		902205	0					
ANR	903091	Identifier	core		902205	0					
ANR	903092	Identifier	config		902205	1					
ANR	903093	Argument	"""cfg.debug"""		902205	1					
ANR	903094	PrimaryExpression	"""cfg.debug"""		902205	0					
ANR	903095	CompoundStatement		139:4:3754:3810	902205	1					
ANR	903096	IdentifierDeclStatement	char delb [ 128 ] = R_EMPTY ;	4474:4:127439:127463	902205	0	True				
ANR	903097	IdentifierDecl	delb [ 128 ] = R_EMPTY		902205	0					
ANR	903098	IdentifierDeclType	char [ 128 ]		902205	0					
ANR	903099	Identifier	delb		902205	1					
ANR	903100	PrimaryExpression	128		902205	2					
ANR	903101	AssignmentExpression	delb [ 128 ] = R_EMPTY		902205	3		=			
ANR	903102	Identifier	R_EMPTY		902205	0					
ANR	903103	Identifier	R_EMPTY		902205	1					
ANR	903104	ExpressionStatement	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"	4475:4:127469:127509	902205	1	True				
ANR	903105	AssignmentExpression	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"		902205	0		=			
ANR	903106	Identifier	addr		902205	0					
ANR	903107	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		902205	1					
ANR	903108	Callee	r_debug_reg_get		902205	0					
ANR	903109	Identifier	r_debug_reg_get		902205	0					
ANR	903110	ArgumentList	core -> dbg		902205	1					
ANR	903111	Argument	core -> dbg		902205	0					
ANR	903112	PtrMemberAccess	core -> dbg		902205	0					
ANR	903113	Identifier	core		902205	0					
ANR	903114	Identifier	dbg		902205	1					
ANR	903115	Argument	"""PC"""		902205	1					
ANR	903116	PrimaryExpression	"""PC"""		902205	0					
ANR	903117	IdentifierDeclStatement	"RBreakpointItem * bpi = r_bp_get_at ( core -> dbg -> bp , addr ) ;"	4476:4:127515:127571	902205	2	True				
ANR	903118	IdentifierDecl	"* bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		902205	0					
ANR	903119	IdentifierDeclType	RBreakpointItem *		902205	0					
ANR	903120	Identifier	bpi		902205	1					
ANR	903121	AssignmentExpression	"* bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		902205	2		=			
ANR	903122	Identifier	bpi		902205	0					
ANR	903123	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		902205	1					
ANR	903124	Callee	r_bp_get_at		902205	0					
ANR	903125	Identifier	r_bp_get_at		902205	0					
ANR	903126	ArgumentList	core -> dbg -> bp		902205	1					
ANR	903127	Argument	core -> dbg -> bp		902205	0					
ANR	903128	PtrMemberAccess	core -> dbg -> bp		902205	0					
ANR	903129	PtrMemberAccess	core -> dbg		902205	0					
ANR	903130	Identifier	core		902205	0					
ANR	903131	Identifier	dbg		902205	1					
ANR	903132	Identifier	bp		902205	1					
ANR	903133	Argument	addr		902205	1					
ANR	903134	Identifier	addr		902205	0					
ANR	903135	Statement	sprintf	4477:4:127577:127583	902205	3	True				
ANR	903136	Statement	(	4477:11:127584:127584	902205	4	True				
ANR	903137	Statement	delb	4477:12:127585:127588	902205	5	True				
ANR	903138	Statement	","	4477:16:127589:127589	902205	6	True				
ANR	903139	Statement	"""db 0x%"""	4477:18:127591:127598	902205	7	True				
ANR	903140	Statement	PFMT64x	4477:26:127599:127605	902205	8	True				
ANR	903141	Statement	""""""	4477:33:127606:127607	902205	9	True				
ANR	903142	Statement	","	4477:35:127608:127608	902205	10	True				
ANR	903143	Statement	addr	4477:37:127610:127613	902205	11	True				
ANR	903144	Statement	)	4477:41:127614:127614	902205	12	True				
ANR	903145	ExpressionStatement		4477:42:127615:127615	902205	13	True				
ANR	903146	ExpressionStatement	"r_bp_del ( core -> dbg -> bp , addr )"	4478:4:127621:127651	902205	14	True				
ANR	903147	CallExpression	"r_bp_del ( core -> dbg -> bp , addr )"		902205	0					
ANR	903148	Callee	r_bp_del		902205	0					
ANR	903149	Identifier	r_bp_del		902205	0					
ANR	903150	ArgumentList	core -> dbg -> bp		902205	1					
ANR	903151	Argument	core -> dbg -> bp		902205	0					
ANR	903152	PtrMemberAccess	core -> dbg -> bp		902205	0					
ANR	903153	PtrMemberAccess	core -> dbg		902205	0					
ANR	903154	Identifier	core		902205	0					
ANR	903155	Identifier	dbg		902205	1					
ANR	903156	Identifier	bp		902205	1					
ANR	903157	Argument	addr		902205	1					
ANR	903158	Identifier	addr		902205	0					
ANR	903159	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4479:4:127657:127696	902205	15	True				
ANR	903160	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		902205	0					
ANR	903161	Callee	r_reg_arena_swap		902205	0					
ANR	903162	Identifier	r_reg_arena_swap		902205	0					
ANR	903163	ArgumentList	core -> dbg -> reg		902205	1					
ANR	903164	Argument	core -> dbg -> reg		902205	0					
ANR	903165	PtrMemberAccess	core -> dbg -> reg		902205	0					
ANR	903166	PtrMemberAccess	core -> dbg		902205	0					
ANR	903167	Identifier	core		902205	0					
ANR	903168	Identifier	dbg		902205	1					
ANR	903169	Identifier	reg		902205	1					
ANR	903170	Argument	true		902205	1					
ANR	903171	Identifier	true		902205	0					
ANR	903172	ExpressionStatement	"r_debug_step_over ( core -> dbg , times )"	4480:4:127702:127738	902205	16	True				
ANR	903173	CallExpression	"r_debug_step_over ( core -> dbg , times )"		902205	0					
ANR	903174	Callee	r_debug_step_over		902205	0					
ANR	903175	Identifier	r_debug_step_over		902205	0					
ANR	903176	ArgumentList	core -> dbg		902205	1					
ANR	903177	Argument	core -> dbg		902205	0					
ANR	903178	PtrMemberAccess	core -> dbg		902205	0					
ANR	903179	Identifier	core		902205	0					
ANR	903180	Identifier	dbg		902205	1					
ANR	903181	Argument	times		902205	1					
ANR	903182	Identifier	times		902205	0					
ANR	903183	IfStatement	if ( bpi )		902205	17					
ANR	903184	Condition	bpi	4481:8:127748:127750	902205	0	True				
ANR	903185	Identifier	bpi		902205	0					
ANR	903186	ExpressionStatement	"r_core_cmd0 ( core , delb )"	4481:13:127753:127777	902205	1	True				
ANR	903187	CallExpression	"r_core_cmd0 ( core , delb )"		902205	0					
ANR	903188	Callee	r_core_cmd0		902205	0					
ANR	903189	Identifier	r_core_cmd0		902205	0					
ANR	903190	ArgumentList	core		902205	1					
ANR	903191	Argument	core		902205	0					
ANR	903192	Identifier	core		902205	0					
ANR	903193	Argument	delb		902205	1					
ANR	903194	Identifier	delb		902205	0					
ANR	903195	ElseStatement	else		902205	0					
ANR	903196	CompoundStatement		145:10:4028:4028	902205	0					
ANR	903197	ExpressionStatement	"r_core_cmdf ( core , ""aeso%s"" , input + 2 )"	4483:4:127795:127834	902205	0	True				
ANR	903198	CallExpression	"r_core_cmdf ( core , ""aeso%s"" , input + 2 )"		902205	0					
ANR	903199	Callee	r_core_cmdf		902205	0					
ANR	903200	Identifier	r_core_cmdf		902205	0					
ANR	903201	ArgumentList	core		902205	1					
ANR	903202	Argument	core		902205	0					
ANR	903203	Identifier	core		902205	0					
ANR	903204	Argument	"""aeso%s"""		902205	1					
ANR	903205	PrimaryExpression	"""aeso%s"""		902205	0					
ANR	903206	Argument	input + 2		902205	2					
ANR	903207	AdditiveExpression	input + 2		902205	0		+			
ANR	903208	Identifier	input		902205	0					
ANR	903209	PrimaryExpression	2		902205	1					
ANR	903210	BreakStatement	break ;	4486:2:127847:127852	902205	21	True				
ANR	903211	Label	case 'b' :	4487:1:127855:127863	902205	22	True				
ANR	903212	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.debug"" ) )"		902205	23					
ANR	903213	Condition	"r_config_get_i ( core -> config , ""cfg.debug"" )"	4488:6:127880:127921	902205	0	True				
ANR	903214	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		902205	0					
ANR	903215	Callee	r_config_get_i		902205	0					
ANR	903216	Identifier	r_config_get_i		902205	0					
ANR	903217	ArgumentList	core -> config		902205	1					
ANR	903218	Argument	core -> config		902205	0					
ANR	903219	PtrMemberAccess	core -> config		902205	0					
ANR	903220	Identifier	core		902205	0					
ANR	903221	Identifier	config		902205	1					
ANR	903222	Argument	"""cfg.debug"""		902205	1					
ANR	903223	PrimaryExpression	"""cfg.debug"""		902205	0					
ANR	903224	CompoundStatement		151:50:4163:4163	902205	1					
ANR	903225	IfStatement	if ( ! r_debug_step_back ( core -> dbg ) )		902205	0					
ANR	903226	Condition	! r_debug_step_back ( core -> dbg )	4489:7:127933:127962	902205	0	True				
ANR	903227	UnaryOperationExpression	! r_debug_step_back ( core -> dbg )		902205	0					
ANR	903228	UnaryOperator	!		902205	0					
ANR	903229	CallExpression	r_debug_step_back ( core -> dbg )		902205	1					
ANR	903230	Callee	r_debug_step_back		902205	0					
ANR	903231	Identifier	r_debug_step_back		902205	0					
ANR	903232	ArgumentList	core -> dbg		902205	1					
ANR	903233	Argument	core -> dbg		902205	0					
ANR	903234	PtrMemberAccess	core -> dbg		902205	0					
ANR	903235	Identifier	core		902205	0					
ANR	903236	Identifier	dbg		902205	1					
ANR	903237	CompoundStatement		152:39:4204:4204	902205	1					
ANR	903238	ExpressionStatement	"eprintf ( ""cannot step back\\n"" )"	4490:4:127971:128001	902205	0	True				
ANR	903239	CallExpression	"eprintf ( ""cannot step back\\n"" )"		902205	0					
ANR	903240	Callee	eprintf		902205	0					
ANR	903241	Identifier	eprintf		902205	0					
ANR	903242	ArgumentList	"""cannot step back\\n"""		902205	1					
ANR	903243	Argument	"""cannot step back\\n"""		902205	0					
ANR	903244	PrimaryExpression	"""cannot step back\\n"""		902205	0					
ANR	903245	ElseStatement	else		902205	0					
ANR	903246	CompoundStatement		155:9:4256:4256	902205	0					
ANR	903247	IfStatement	if ( r_core_esil_step_back ( core ) )		902205	0					
ANR	903248	Condition	r_core_esil_step_back ( core )	4493:7:128026:128053	902205	0	True				
ANR	903249	CallExpression	r_core_esil_step_back ( core )		902205	0					
ANR	903250	Callee	r_core_esil_step_back		902205	0					
ANR	903251	Identifier	r_core_esil_step_back		902205	0					
ANR	903252	ArgumentList	core		902205	1					
ANR	903253	Argument	core		902205	0					
ANR	903254	Identifier	core		902205	0					
ANR	903255	CompoundStatement		156:37:4295:4295	902205	1					
ANR	903256	ExpressionStatement	"r_core_cmd0 ( core , "".dr*"" )"	4494:4:128062:128088	902205	0	True				
ANR	903257	CallExpression	"r_core_cmd0 ( core , "".dr*"" )"		902205	0					
ANR	903258	Callee	r_core_cmd0		902205	0					
ANR	903259	Identifier	r_core_cmd0		902205	0					
ANR	903260	ArgumentList	core		902205	1					
ANR	903261	Argument	core		902205	0					
ANR	903262	Identifier	core		902205	0					
ANR	903263	Argument	""".dr*"""		902205	1					
ANR	903264	PrimaryExpression	""".dr*"""		902205	0					
ANR	903265	ElseStatement	else		902205	0					
ANR	903266	CompoundStatement		158:10:4339:4339	902205	0					
ANR	903267	ExpressionStatement	"eprintf ( ""cannot step back\\n"" )"	4496:4:128106:128136	902205	0	True				
ANR	903268	CallExpression	"eprintf ( ""cannot step back\\n"" )"		902205	0					
ANR	903269	Callee	eprintf		902205	0					
ANR	903270	Identifier	eprintf		902205	0					
ANR	903271	ArgumentList	"""cannot step back\\n"""		902205	1					
ANR	903272	Argument	"""cannot step back\\n"""		902205	0					
ANR	903273	PrimaryExpression	"""cannot step back\\n"""		902205	0					
ANR	903274	BreakStatement	break ;	4499:2:128149:128154	902205	24	True				
ANR	903275	Label	case 'l' :	4500:1:128157:128165	902205	25	True				
ANR	903276	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4501:2:128178:128217	902205	26	True				
ANR	903277	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		902205	0					
ANR	903278	Callee	r_reg_arena_swap		902205	0					
ANR	903279	Identifier	r_reg_arena_swap		902205	0					
ANR	903280	ArgumentList	core -> dbg -> reg		902205	1					
ANR	903281	Argument	core -> dbg -> reg		902205	0					
ANR	903282	PtrMemberAccess	core -> dbg -> reg		902205	0					
ANR	903283	PtrMemberAccess	core -> dbg		902205	0					
ANR	903284	Identifier	core		902205	0					
ANR	903285	Identifier	dbg		902205	1					
ANR	903286	Identifier	reg		902205	1					
ANR	903287	Argument	true		902205	1					
ANR	903288	Identifier	true		902205	0					
ANR	903289	ExpressionStatement	"step_line ( core , times )"	4502:2:128221:128244	902205	27	True				
ANR	903290	CallExpression	"step_line ( core , times )"		902205	0					
ANR	903291	Callee	step_line		902205	0					
ANR	903292	Identifier	step_line		902205	0					
ANR	903293	ArgumentList	core		902205	1					
ANR	903294	Argument	core		902205	0					
ANR	903295	Identifier	core		902205	0					
ANR	903296	Argument	times		902205	1					
ANR	903297	Identifier	times		902205	0					
ANR	903298	BreakStatement	break ;	4503:2:128248:128253	902205	28	True				
ANR	903299	Label	case '?' :	4504:1:128256:128264	902205	29	True				
ANR	903300	Label	default :	4505:1:128276:128283	902205	30	True				
ANR	903301	Identifier	default		902205	0					
ANR	903302	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ds )"	4506:2:128287:128322	902205	31	True				
ANR	903303	CallExpression	"r_core_cmd_help ( core , help_msg_ds )"		902205	0					
ANR	903304	Callee	r_core_cmd_help		902205	0					
ANR	903305	Identifier	r_core_cmd_help		902205	0					
ANR	903306	ArgumentList	core		902205	1					
ANR	903307	Argument	core		902205	0					
ANR	903308	Identifier	core		902205	0					
ANR	903309	Argument	help_msg_ds		902205	1					
ANR	903310	Identifier	help_msg_ds		902205	0					
ANR	903311	ReturnStatement	return 0 ;	4507:2:128326:128334	902205	32	True				
ANR	903312	PrimaryExpression	0		902205	0					
ANR	903313	ReturnStatement	return 1 ;	4509:1:128340:128348	902205	8	True				
ANR	903314	PrimaryExpression	1		902205	0					
ANR	903315	ReturnType	static int		902205	1					
ANR	903316	Identifier	cmd_debug_step		902205	2					
ANR	903317	ParameterList	"RCore * core , const char * input"		902205	3					
ANR	903318	Parameter	RCore * core	4338:27:123728:123738	902205	0	True				
ANR	903319	ParameterType	RCore *		902205	0					
ANR	903320	Identifier	core		902205	1					
ANR	903321	Parameter	const char * input	4338:40:123741:123757	902205	1	True				
ANR	903322	ParameterType	const char *		902205	0					
ANR	903323	Identifier	input		902205	1					
ANR	903324	CFGEntryNode	ENTRY		902205		True				
ANR	903325	CFGExitNode	EXIT		902205		True				
ANR	903326	Symbol	aop . jump		902205						
ANR	903327	Symbol	core -> anal -> reg		902205						
ANR	903328	Symbol	aop		902205						
ANR	903329	Symbol	r_debug_reg_get		902205						
ANR	903330	Symbol	r_bp_get_at		902205						
ANR	903331	Symbol	* input		902205						
ANR	903332	Symbol	core -> offset		902205						
ANR	903333	Symbol	aop . type		902205						
ANR	903334	Symbol	core -> dbg -> bp		902205						
ANR	903335	Symbol	strlen		902205						
ANR	903336	Symbol	aop . fail		902205						
ANR	903337	Symbol	delb		902205						
ANR	903338	Symbol	core -> num		902205						
ANR	903339	Symbol	core -> bin		902205						
ANR	903340	Symbol	r_num_conditional		902205						
ANR	903341	Symbol	& aop		902205						
ANR	903342	Symbol	core		902205						
ANR	903343	Symbol	input		902205						
ANR	903344	Symbol	R_ANAL_OP_TYPE_CALL		902205						
ANR	903345	Symbol	r_config_get_i		902205						
ANR	903346	Symbol	true		902205						
ANR	903347	Symbol	* core -> dbg		902205						
ANR	903348	Symbol	* core		902205						
ANR	903349	Symbol	R_EMPTY		902205						
ANR	903350	Symbol	R_ANAL_OP_MASK_BASIC		902205						
ANR	903351	Symbol	core -> anal		902205						
ANR	903352	Symbol	r_num_math		902205						
ANR	903353	Symbol	core -> break_loop		902205						
ANR	903354	Symbol	times		902205						
ANR	903355	Symbol	r_cons_is_breaked		902205						
ANR	903356	Symbol	aop . size		902205						
ANR	903357	Symbol	core -> io		902205						
ANR	903358	Symbol	r_core_esil_step_back		902205						
ANR	903359	Symbol	bpi		902205						
ANR	903360	Symbol	addr		902205						
ANR	903361	Symbol	UT64_MAX		902205						
ANR	903362	Symbol	* * core		902205						
ANR	903363	Symbol	R_REG_TYPE_GPR		902205						
ANR	903364	Symbol	r_bin_cur_object		902205						
ANR	903365	Symbol	core -> config		902205						
ANR	903366	Symbol	false		902205						
ANR	903367	Symbol	i		902205						
ANR	903368	Symbol	r_bin_get_section_at		902205						
ANR	903369	Symbol	n		902205						
ANR	903370	Symbol	r_debug_step		902205						
ANR	903371	Symbol	o		902205						
ANR	903372	Symbol	buf		902205						
ANR	903373	Symbol	r_debug_is_dead		902205						
ANR	903374	Symbol	help_msg_ds		902205						
ANR	903375	Symbol	pc		902205						
ANR	903376	Symbol	s		902205						
ANR	903377	Symbol	* core -> anal		902205						
ANR	903378	Symbol	help_msg_dsu		902205						
ANR	903379	Symbol	core -> dbg -> reg		902205						
ANR	903380	Symbol	static_debug_stop		902205						
ANR	903381	Symbol	R_MAX		902205						
ANR	903382	Symbol	r_debug_step_back		902205						
ANR	903383	Symbol	core -> dbg		902205						
ANR	903384	Function	getFileData	4512:0:128353:128525							
ANR	903385	FunctionDef	"getFileData (RCore * core , const char * arg)"		903384	0					
ANR	903386	CompoundStatement		4512:53:128406:128525	903384	0					
ANR	903387	IfStatement	if ( * arg == '$' )		903384	0					
ANR	903388	Condition	* arg == '$'	4513:5:128413:128423	903384	0	True				
ANR	903389	EqualityExpression	* arg == '$'		903384	0		==			
ANR	903390	UnaryOperationExpression	* arg		903384	0					
ANR	903391	UnaryOperator	*		903384	0					
ANR	903392	Identifier	arg		903384	1					
ANR	903393	PrimaryExpression	'$'		903384	1					
ANR	903394	CompoundStatement		2:18:19:19	903384	1					
ANR	903395	ReturnStatement	"return ( ut8 * ) r_cmd_alias_get ( core -> rcmd , arg , 1 ) ;"	4514:2:128430:128480	903384	0	True				
ANR	903396	CastExpression	"( ut8 * ) r_cmd_alias_get ( core -> rcmd , arg , 1 )"		903384	0					
ANR	903397	CastTarget	ut8 *		903384	0					
ANR	903398	CallExpression	"r_cmd_alias_get ( core -> rcmd , arg , 1 )"		903384	1					
ANR	903399	Callee	r_cmd_alias_get		903384	0					
ANR	903400	Identifier	r_cmd_alias_get		903384	0					
ANR	903401	ArgumentList	core -> rcmd		903384	1					
ANR	903402	Argument	core -> rcmd		903384	0					
ANR	903403	PtrMemberAccess	core -> rcmd		903384	0					
ANR	903404	Identifier	core		903384	0					
ANR	903405	Identifier	rcmd		903384	1					
ANR	903406	Argument	arg		903384	1					
ANR	903407	Identifier	arg		903384	0					
ANR	903408	Argument	1		903384	2					
ANR	903409	PrimaryExpression	1		903384	0					
ANR	903410	ReturnStatement	"return ( ut8 * ) r_file_slurp ( arg , NULL ) ;"	4516:1:128486:128523	903384	1	True				
ANR	903411	CastExpression	"( ut8 * ) r_file_slurp ( arg , NULL )"		903384	0					
ANR	903412	CastTarget	ut8 *		903384	0					
ANR	903413	CallExpression	"r_file_slurp ( arg , NULL )"		903384	1					
ANR	903414	Callee	r_file_slurp		903384	0					
ANR	903415	Identifier	r_file_slurp		903384	0					
ANR	903416	ArgumentList	arg		903384	1					
ANR	903417	Argument	arg		903384	0					
ANR	903418	Identifier	arg		903384	0					
ANR	903419	Argument	NULL		903384	1					
ANR	903420	Identifier	NULL		903384	0					
ANR	903421	ReturnType	static ut8 *		903384	1					
ANR	903422	Identifier	getFileData		903384	2					
ANR	903423	ParameterList	"RCore * core , const char * arg"		903384	3					
ANR	903424	Parameter	RCore * core	4512:23:128376:128386	903384	0	True				
ANR	903425	ParameterType	RCore *		903384	0					
ANR	903426	Identifier	core		903384	1					
ANR	903427	Parameter	const char * arg	4512:36:128389:128403	903384	1	True				
ANR	903428	ParameterType	const char *		903384	0					
ANR	903429	Identifier	arg		903384	1					
ANR	903430	CFGEntryNode	ENTRY		903384		True				
ANR	903431	CFGExitNode	EXIT		903384		True				
ANR	903432	Symbol	core		903384						
ANR	903433	Symbol	r_file_slurp		903384						
ANR	903434	Symbol	NULL		903384						
ANR	903435	Symbol	core -> rcmd		903384						
ANR	903436	Symbol	arg		903384						
ANR	903437	Symbol	* core		903384						
ANR	903438	Symbol	r_cmd_alias_get		903384						
ANR	903439	Symbol	* arg		903384						
ANR	903440	Function	consumeBuffer	4519:0:128528:128886							
ANR	903441	FunctionDef	"consumeBuffer (RBuffer * buf , const char * cmd , const char * errmsg)"		903440	0					
ANR	903442	CompoundStatement		4519:77:128605:128886	903440	0					
ANR	903443	IfStatement	if ( ! buf )		903440	0					
ANR	903444	Condition	! buf	4520:5:128612:128615	903440	0	True				
ANR	903445	UnaryOperationExpression	! buf		903440	0					
ANR	903446	UnaryOperator	!		903440	0					
ANR	903447	Identifier	buf		903440	1					
ANR	903448	CompoundStatement		2:11:12:12	903440	1					
ANR	903449	IfStatement	if ( errmsg )		903440	0					
ANR	903450	Condition	errmsg	4521:6:128626:128631	903440	0	True				
ANR	903451	Identifier	errmsg		903440	0					
ANR	903452	CompoundStatement		3:14:28:28	903440	1					
ANR	903453	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , errmsg )"	4522:3:128639:128669	903440	0	True				
ANR	903454	CallExpression	"r_cons_printf ( ""%s\\n"" , errmsg )"		903440	0					
ANR	903455	Callee	r_cons_printf		903440	0					
ANR	903456	Identifier	r_cons_printf		903440	0					
ANR	903457	ArgumentList	"""%s\\n"""		903440	1					
ANR	903458	Argument	"""%s\\n"""		903440	0					
ANR	903459	PrimaryExpression	"""%s\\n"""		903440	0					
ANR	903460	Argument	errmsg		903440	1					
ANR	903461	Identifier	errmsg		903440	0					
ANR	903462	ReturnStatement	return ;	4524:2:128677:128683	903440	1	True				
ANR	903463	IfStatement	if ( cmd )		903440	1					
ANR	903464	Condition	cmd	4526:5:128693:128695	903440	0	True				
ANR	903465	Identifier	cmd		903440	0					
ANR	903466	CompoundStatement		8:10:92:92	903440	1					
ANR	903467	ExpressionStatement	"r_cons_printf ( ""%s"" , cmd )"	4527:2:128702:128727	903440	0	True				
ANR	903468	CallExpression	"r_cons_printf ( ""%s"" , cmd )"		903440	0					
ANR	903469	Callee	r_cons_printf		903440	0					
ANR	903470	Identifier	r_cons_printf		903440	0					
ANR	903471	ArgumentList	"""%s"""		903440	1					
ANR	903472	Argument	"""%s"""		903440	0					
ANR	903473	PrimaryExpression	"""%s"""		903440	0					
ANR	903474	Argument	cmd		903440	1					
ANR	903475	Identifier	cmd		903440	0					
ANR	903476	IdentifierDeclStatement	int i ;	4529:1:128733:128738	903440	2	True				
ANR	903477	IdentifierDecl	i		903440	0					
ANR	903478	IdentifierDeclType	int		903440	0					
ANR	903479	Identifier	i		903440	1					
ANR	903480	ExpressionStatement	"r_buf_seek ( buf , 0 , R_BUF_SET )"	4530:1:128741:128771	903440	3	True				
ANR	903481	CallExpression	"r_buf_seek ( buf , 0 , R_BUF_SET )"		903440	0					
ANR	903482	Callee	r_buf_seek		903440	0					
ANR	903483	Identifier	r_buf_seek		903440	0					
ANR	903484	ArgumentList	buf		903440	1					
ANR	903485	Argument	buf		903440	0					
ANR	903486	Identifier	buf		903440	0					
ANR	903487	Argument	0		903440	1					
ANR	903488	PrimaryExpression	0		903440	0					
ANR	903489	Argument	R_BUF_SET		903440	2					
ANR	903490	Identifier	R_BUF_SET		903440	0					
ANR	903491	ForStatement	for ( i = 0 ; i < r_buf_size ( buf ) ; i ++ )		903440	4					
ANR	903492	ForInit	i = 0 ;	4531:6:128779:128784	903440	0	True				
ANR	903493	AssignmentExpression	i = 0		903440	0		=			
ANR	903494	Identifier	i		903440	0					
ANR	903495	PrimaryExpression	0		903440	1					
ANR	903496	Condition	i < r_buf_size ( buf )	4531:13:128786:128805	903440	1	True				
ANR	903497	RelationalExpression	i < r_buf_size ( buf )		903440	0		<			
ANR	903498	Identifier	i		903440	0					
ANR	903499	CallExpression	r_buf_size ( buf )		903440	1					
ANR	903500	Callee	r_buf_size		903440	0					
ANR	903501	Identifier	r_buf_size		903440	0					
ANR	903502	ArgumentList	buf		903440	1					
ANR	903503	Argument	buf		903440	0					
ANR	903504	Identifier	buf		903440	0					
ANR	903505	PostIncDecOperationExpression	i ++	4531:35:128808:128810	903440	2	True				
ANR	903506	Identifier	i		903440	0					
ANR	903507	IncDec	++		903440	1					
ANR	903508	CompoundStatement		13:40:207:207	903440	3					
ANR	903509	ExpressionStatement	"r_cons_printf ( ""%02x"" , r_buf_read8 ( buf ) )"	4532:2:128817:128858	903440	0	True				
ANR	903510	CallExpression	"r_cons_printf ( ""%02x"" , r_buf_read8 ( buf ) )"		903440	0					
ANR	903511	Callee	r_cons_printf		903440	0					
ANR	903512	Identifier	r_cons_printf		903440	0					
ANR	903513	ArgumentList	"""%02x"""		903440	1					
ANR	903514	Argument	"""%02x"""		903440	0					
ANR	903515	PrimaryExpression	"""%02x"""		903440	0					
ANR	903516	Argument	r_buf_read8 ( buf )		903440	1					
ANR	903517	CallExpression	r_buf_read8 ( buf )		903440	0					
ANR	903518	Callee	r_buf_read8		903440	0					
ANR	903519	Identifier	r_buf_read8		903440	0					
ANR	903520	ArgumentList	buf		903440	1					
ANR	903521	Argument	buf		903440	0					
ANR	903522	Identifier	buf		903440	0					
ANR	903523	ExpressionStatement	"r_cons_printf ( ""\\n"" )"	4534:1:128864:128884	903440	5	True				
ANR	903524	CallExpression	"r_cons_printf ( ""\\n"" )"		903440	0					
ANR	903525	Callee	r_cons_printf		903440	0					
ANR	903526	Identifier	r_cons_printf		903440	0					
ANR	903527	ArgumentList	"""\\n"""		903440	1					
ANR	903528	Argument	"""\\n"""		903440	0					
ANR	903529	PrimaryExpression	"""\\n"""		903440	0					
ANR	903530	ReturnType	static void		903440	1					
ANR	903531	Identifier	consumeBuffer		903440	2					
ANR	903532	ParameterList	"RBuffer * buf , const char * cmd , const char * errmsg"		903440	3					
ANR	903533	Parameter	RBuffer * buf	4519:26:128554:128565	903440	0	True				
ANR	903534	ParameterType	RBuffer *		903440	0					
ANR	903535	Identifier	buf		903440	1					
ANR	903536	Parameter	const char * cmd	4519:40:128568:128582	903440	1	True				
ANR	903537	ParameterType	const char *		903440	0					
ANR	903538	Identifier	cmd		903440	1					
ANR	903539	Parameter	const char * errmsg	4519:57:128585:128602	903440	2	True				
ANR	903540	ParameterType	const char *		903440	0					
ANR	903541	Identifier	errmsg		903440	1					
ANR	903542	CFGEntryNode	ENTRY		903440		True				
ANR	903543	CFGExitNode	EXIT		903440		True				
ANR	903544	Symbol	R_BUF_SET		903440						
ANR	903545	Symbol	buf		903440						
ANR	903546	Symbol	errmsg		903440						
ANR	903547	Symbol	i		903440						
ANR	903548	Symbol	cmd		903440						
ANR	903549	Symbol	r_buf_read8		903440						
ANR	903550	Symbol	r_buf_size		903440						
ANR	903551	Function	cmd_debug	4537:0:128889:149226							
ANR	903552	FunctionDef	"cmd_debug (void * data , const char * input)"		903551	0					
ANR	903553	CompoundStatement		4537:52:128941:149226	903551	0					
ANR	903554	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	4538:1:128944:128971	903551	0	True				
ANR	903555	IdentifierDecl	* core = ( RCore * ) data		903551	0					
ANR	903556	IdentifierDeclType	RCore *		903551	0					
ANR	903557	Identifier	core		903551	1					
ANR	903558	AssignmentExpression	* core = ( RCore * ) data		903551	2		=			
ANR	903559	Identifier	core		903551	0					
ANR	903560	CastExpression	( RCore * ) data		903551	1					
ANR	903561	CastTarget	RCore *		903551	0					
ANR	903562	Identifier	data		903551	1					
ANR	903563	IdentifierDeclStatement	RDebugTracepoint * t ;	4539:1:128974:128993	903551	1	True				
ANR	903564	IdentifierDecl	* t		903551	0					
ANR	903565	IdentifierDeclType	RDebugTracepoint *		903551	0					
ANR	903566	Identifier	t		903551	1					
ANR	903567	IdentifierDeclStatement	int follow = 0 ;	4540:1:128996:129010	903551	2	True				
ANR	903568	IdentifierDecl	follow = 0		903551	0					
ANR	903569	IdentifierDeclType	int		903551	0					
ANR	903570	Identifier	follow		903551	1					
ANR	903571	AssignmentExpression	follow = 0		903551	2		=			
ANR	903572	Identifier	follow		903551	0					
ANR	903573	PrimaryExpression	0		903551	1					
ANR	903574	IdentifierDeclStatement	const char * ptr ;	4541:1:129013:129028	903551	3	True				
ANR	903575	IdentifierDecl	* ptr		903551	0					
ANR	903576	IdentifierDeclType	const char *		903551	0					
ANR	903577	Identifier	ptr		903551	1					
ANR	903578	IdentifierDeclStatement	ut64 addr ;	4542:1:129031:129040	903551	4	True				
ANR	903579	IdentifierDecl	addr		903551	0					
ANR	903580	IdentifierDeclType	ut64		903551	0					
ANR	903581	Identifier	addr		903551	1					
ANR	903582	IdentifierDeclStatement	int min ;	4543:1:129043:129050	903551	5	True				
ANR	903583	IdentifierDecl	min		903551	0					
ANR	903584	IdentifierDeclType	int		903551	0					
ANR	903585	Identifier	min		903551	1					
ANR	903586	IdentifierDeclStatement	RListIter * iter ;	4544:1:129053:129068	903551	6	True				
ANR	903587	IdentifierDecl	* iter		903551	0					
ANR	903588	IdentifierDeclType	RListIter *		903551	0					
ANR	903589	Identifier	iter		903551	1					
ANR	903590	IdentifierDeclStatement	RDebugTracepoint * trace ;	4545:1:129071:129094	903551	7	True				
ANR	903591	IdentifierDecl	* trace		903551	0					
ANR	903592	IdentifierDeclType	RDebugTracepoint *		903551	0					
ANR	903593	Identifier	trace		903551	1					
ANR	903594	IdentifierDeclStatement	RAnalOp * op ;	4546:1:129097:129108	903551	8	True				
ANR	903595	IdentifierDecl	* op		903551	0					
ANR	903596	IdentifierDeclType	RAnalOp *		903551	0					
ANR	903597	Identifier	op		903551	1					
ANR	903598	IfStatement	if ( r_sandbox_enable ( 0 ) )		903551	9					
ANR	903599	Condition	r_sandbox_enable ( 0 )	4548:5:129116:129135	903551	0	True				
ANR	903600	CallExpression	r_sandbox_enable ( 0 )		903551	0					
ANR	903601	Callee	r_sandbox_enable		903551	0					
ANR	903602	Identifier	r_sandbox_enable		903551	0					
ANR	903603	ArgumentList	0		903551	1					
ANR	903604	Argument	0		903551	0					
ANR	903605	PrimaryExpression	0		903551	0					
ANR	903606	CompoundStatement		12:27:196:196	903551	1					
ANR	903607	ExpressionStatement	"eprintf ( ""Debugger commands disabled in sandbox mode\\n"" )"	4549:2:129142:129198	903551	0	True				
ANR	903608	CallExpression	"eprintf ( ""Debugger commands disabled in sandbox mode\\n"" )"		903551	0					
ANR	903609	Callee	eprintf		903551	0					
ANR	903610	Identifier	eprintf		903551	0					
ANR	903611	ArgumentList	"""Debugger commands disabled in sandbox mode\\n"""		903551	1					
ANR	903612	Argument	"""Debugger commands disabled in sandbox mode\\n"""		903551	0					
ANR	903613	PrimaryExpression	"""Debugger commands disabled in sandbox mode\\n"""		903551	0					
ANR	903614	ReturnStatement	return 0 ;	4550:2:129202:129210	903551	1	True				
ANR	903615	PrimaryExpression	0		903551	0					
ANR	903616	IfStatement	"if ( ! strncmp ( input , ""ate"" , 3 ) )"		903551	10					
ANR	903617	Condition	"! strncmp ( input , ""ate"" , 3 )"	4552:5:129220:129245	903551	0	True				
ANR	903618	UnaryOperationExpression	"! strncmp ( input , ""ate"" , 3 )"		903551	0					
ANR	903619	UnaryOperator	!		903551	0					
ANR	903620	CallExpression	"strncmp ( input , ""ate"" , 3 )"		903551	1					
ANR	903621	Callee	strncmp		903551	0					
ANR	903622	Identifier	strncmp		903551	0					
ANR	903623	ArgumentList	input		903551	1					
ANR	903624	Argument	input		903551	0					
ANR	903625	Identifier	input		903551	0					
ANR	903626	Argument	"""ate"""		903551	1					
ANR	903627	PrimaryExpression	"""ate"""		903551	0					
ANR	903628	Argument	3		903551	2					
ANR	903629	PrimaryExpression	3		903551	0					
ANR	903630	CompoundStatement		17:2:310:323	903551	1					
ANR	903631	IdentifierDeclStatement	char str [ 128 ] ;	4553:2:129252:129265	903551	0	True				
ANR	903632	IdentifierDecl	str [ 128 ]		903551	0					
ANR	903633	IdentifierDeclType	char [ 128 ]		903551	0					
ANR	903634	Identifier	str		903551	1					
ANR	903635	PrimaryExpression	128		903551	2					
ANR	903636	ExpressionStatement	str [ 0 ] = 0	4554:2:129269:129279	903551	1	True				
ANR	903637	AssignmentExpression	str [ 0 ] = 0		903551	0		=			
ANR	903638	ArrayIndexing	str [ 0 ]		903551	0					
ANR	903639	Identifier	str		903551	0					
ANR	903640	PrimaryExpression	0		903551	1					
ANR	903641	PrimaryExpression	0		903551	1					
ANR	903642	ExpressionStatement	"r_print_date_get_now ( core -> print , str )"	4555:2:129283:129322	903551	2	True				
ANR	903643	CallExpression	"r_print_date_get_now ( core -> print , str )"		903551	0					
ANR	903644	Callee	r_print_date_get_now		903551	0					
ANR	903645	Identifier	r_print_date_get_now		903551	0					
ANR	903646	ArgumentList	core -> print		903551	1					
ANR	903647	Argument	core -> print		903551	0					
ANR	903648	PtrMemberAccess	core -> print		903551	0					
ANR	903649	Identifier	core		903551	0					
ANR	903650	Identifier	print		903551	1					
ANR	903651	Argument	str		903551	1					
ANR	903652	Identifier	str		903551	0					
ANR	903653	ExpressionStatement	r_cons_println ( str )	4556:2:129326:129346	903551	3	True				
ANR	903654	CallExpression	r_cons_println ( str )		903551	0					
ANR	903655	Callee	r_cons_println		903551	0					
ANR	903656	Identifier	r_cons_println		903551	0					
ANR	903657	ArgumentList	str		903551	1					
ANR	903658	Argument	str		903551	0					
ANR	903659	Identifier	str		903551	0					
ANR	903660	ReturnStatement	return 0 ;	4557:2:129350:129358	903551	4	True				
ANR	903661	PrimaryExpression	0		903551	0					
ANR	903662	SwitchStatement	switch ( input [ 0 ] )		903551	11					
ANR	903663	Condition	input [ 0 ]	4560:9:129373:129380	903551	0	True				
ANR	903664	ArrayIndexing	input [ 0 ]		903551	0					
ANR	903665	Identifier	input		903551	0					
ANR	903666	PrimaryExpression	0		903551	1					
ANR	903667	CompoundStatement		24:19:441:441	903551	1					
ANR	903668	Label	case 't' :	4561:1:129386:129394	903551	0	True				
ANR	903669	SwitchStatement	switch ( input [ 1 ] )		903551	1					
ANR	903670	Condition	input [ 1 ]	4563:10:129499:129506	903551	0	True				
ANR	903671	ArrayIndexing	input [ 1 ]		903551	0					
ANR	903672	Identifier	input		903551	0					
ANR	903673	PrimaryExpression	1		903551	1					
ANR	903674	CompoundStatement		27:20:567:567	903551	1					
ANR	903675	Label	case '\\0' :	4564:2:129513:129522	903551	0	True				
ANR	903676	ExpressionStatement	"r_debug_trace_list ( core -> dbg , 0 , core -> offset )"	4565:3:129535:129582	903551	1	True				
ANR	903677	CallExpression	"r_debug_trace_list ( core -> dbg , 0 , core -> offset )"		903551	0					
ANR	903678	Callee	r_debug_trace_list		903551	0					
ANR	903679	Identifier	r_debug_trace_list		903551	0					
ANR	903680	ArgumentList	core -> dbg		903551	1					
ANR	903681	Argument	core -> dbg		903551	0					
ANR	903682	PtrMemberAccess	core -> dbg		903551	0					
ANR	903683	Identifier	core		903551	0					
ANR	903684	Identifier	dbg		903551	1					
ANR	903685	Argument	0		903551	1					
ANR	903686	PrimaryExpression	0		903551	0					
ANR	903687	Argument	core -> offset		903551	2					
ANR	903688	PtrMemberAccess	core -> offset		903551	0					
ANR	903689	Identifier	core		903551	0					
ANR	903690	Identifier	offset		903551	1					
ANR	903691	BreakStatement	break ;	4566:3:129587:129592	903551	2	True				
ANR	903692	Label	case '=' :	4567:2:129596:129604	903551	3	True				
ANR	903693	ExpressionStatement	"r_debug_trace_list ( core -> dbg , '=' , core -> offset )"	4568:3:129618:129667	903551	4	True				
ANR	903694	CallExpression	"r_debug_trace_list ( core -> dbg , '=' , core -> offset )"		903551	0					
ANR	903695	Callee	r_debug_trace_list		903551	0					
ANR	903696	Identifier	r_debug_trace_list		903551	0					
ANR	903697	ArgumentList	core -> dbg		903551	1					
ANR	903698	Argument	core -> dbg		903551	0					
ANR	903699	PtrMemberAccess	core -> dbg		903551	0					
ANR	903700	Identifier	core		903551	0					
ANR	903701	Identifier	dbg		903551	1					
ANR	903702	Argument	'='		903551	1					
ANR	903703	PrimaryExpression	'='		903551	0					
ANR	903704	Argument	core -> offset		903551	2					
ANR	903705	PtrMemberAccess	core -> offset		903551	0					
ANR	903706	Identifier	core		903551	0					
ANR	903707	Identifier	offset		903551	1					
ANR	903708	BreakStatement	break ;	4569:3:129672:129677	903551	5	True				
ANR	903709	Label	case 'q' :	4570:2:129681:129689	903551	6	True				
ANR	903710	ExpressionStatement	"r_debug_trace_list ( core -> dbg , 'q' , core -> offset )"	4571:3:129703:129752	903551	7	True				
ANR	903711	CallExpression	"r_debug_trace_list ( core -> dbg , 'q' , core -> offset )"		903551	0					
ANR	903712	Callee	r_debug_trace_list		903551	0					
ANR	903713	Identifier	r_debug_trace_list		903551	0					
ANR	903714	ArgumentList	core -> dbg		903551	1					
ANR	903715	Argument	core -> dbg		903551	0					
ANR	903716	PtrMemberAccess	core -> dbg		903551	0					
ANR	903717	Identifier	core		903551	0					
ANR	903718	Identifier	dbg		903551	1					
ANR	903719	Argument	'q'		903551	1					
ANR	903720	PrimaryExpression	'q'		903551	0					
ANR	903721	Argument	core -> offset		903551	2					
ANR	903722	PtrMemberAccess	core -> offset		903551	0					
ANR	903723	Identifier	core		903551	0					
ANR	903724	Identifier	offset		903551	1					
ANR	903725	BreakStatement	break ;	4572:3:129757:129762	903551	8	True				
ANR	903726	Label	case '*' :	4573:2:129766:129774	903551	9	True				
ANR	903727	ExpressionStatement	"r_debug_trace_list ( core -> dbg , 1 , core -> offset )"	4574:3:129788:129835	903551	10	True				
ANR	903728	CallExpression	"r_debug_trace_list ( core -> dbg , 1 , core -> offset )"		903551	0					
ANR	903729	Callee	r_debug_trace_list		903551	0					
ANR	903730	Identifier	r_debug_trace_list		903551	0					
ANR	903731	ArgumentList	core -> dbg		903551	1					
ANR	903732	Argument	core -> dbg		903551	0					
ANR	903733	PtrMemberAccess	core -> dbg		903551	0					
ANR	903734	Identifier	core		903551	0					
ANR	903735	Identifier	dbg		903551	1					
ANR	903736	Argument	1		903551	1					
ANR	903737	PrimaryExpression	1		903551	0					
ANR	903738	Argument	core -> offset		903551	2					
ANR	903739	PtrMemberAccess	core -> offset		903551	0					
ANR	903740	Identifier	core		903551	0					
ANR	903741	Identifier	offset		903551	1					
ANR	903742	BreakStatement	break ;	4575:3:129840:129845	903551	11	True				
ANR	903743	Label	case ' ' :	4576:2:129849:129857	903551	12	True				
ANR	903744	IfStatement	"if ( ( t = r_debug_trace_get ( core -> dbg , r_num_math ( core -> num , input + 3 ) ) ) )"		903551	13					
ANR	903745	Condition	"t = r_debug_trace_get ( core -> dbg , r_num_math ( core -> num , input + 3 ) )"	4577:7:129881:129955	903551	0	True				
ANR	903746	AssignmentExpression	"t = r_debug_trace_get ( core -> dbg , r_num_math ( core -> num , input + 3 ) )"		903551	0		=			
ANR	903747	Identifier	t		903551	0					
ANR	903748	CallExpression	"r_debug_trace_get ( core -> dbg , r_num_math ( core -> num , input + 3 ) )"		903551	1					
ANR	903749	Callee	r_debug_trace_get		903551	0					
ANR	903750	Identifier	r_debug_trace_get		903551	0					
ANR	903751	ArgumentList	core -> dbg		903551	1					
ANR	903752	Argument	core -> dbg		903551	0					
ANR	903753	PtrMemberAccess	core -> dbg		903551	0					
ANR	903754	Identifier	core		903551	0					
ANR	903755	Identifier	dbg		903551	1					
ANR	903756	Argument	"r_num_math ( core -> num , input + 3 )"		903551	1					
ANR	903757	CallExpression	"r_num_math ( core -> num , input + 3 )"		903551	0					
ANR	903758	Callee	r_num_math		903551	0					
ANR	903759	Identifier	r_num_math		903551	0					
ANR	903760	ArgumentList	core -> num		903551	1					
ANR	903761	Argument	core -> num		903551	0					
ANR	903762	PtrMemberAccess	core -> num		903551	0					
ANR	903763	Identifier	core		903551	0					
ANR	903764	Identifier	num		903551	1					
ANR	903765	Argument	input + 3		903551	1					
ANR	903766	AdditiveExpression	input + 3		903551	0		+			
ANR	903767	Identifier	input		903551	0					
ANR	903768	PrimaryExpression	3		903551	1					
ANR	903769	CompoundStatement		42:42:1016:1016	903551	1					
ANR	903770	Statement	r_cons_printf	4579:4:129964:129976	903551	0	True				
ANR	903771	Statement	(	4579:18:129978:129978	903551	1	True				
ANR	903772	Statement	"""offset = 0x%"""	4579:19:129979:129992	903551	2	True				
ANR	903773	Statement	PFMT64x	4579:34:129994:130000	903551	3	True				
ANR	903774	Statement	"""\\n"""	4579:42:130002:130005	903551	4	True				
ANR	903775	Statement	","	4579:46:130006:130006	903551	5	True				
ANR	903776	Statement	t	4579:48:130008:130008	903551	6	True				
ANR	903777	Statement	->	4579:49:130009:130010	903551	7	True				
ANR	903778	Statement	addr	4579:51:130011:130014	903551	8	True				
ANR	903779	Statement	)	4579:55:130015:130015	903551	9	True				
ANR	903780	ExpressionStatement		4579:56:130016:130016	903551	10	True				
ANR	903781	ExpressionStatement	"r_cons_printf ( ""opsize = %d\\n"" , t -> size )"	4580:4:130022:130062	903551	11	True				
ANR	903782	CallExpression	"r_cons_printf ( ""opsize = %d\\n"" , t -> size )"		903551	0					
ANR	903783	Callee	r_cons_printf		903551	0					
ANR	903784	Identifier	r_cons_printf		903551	0					
ANR	903785	ArgumentList	"""opsize = %d\\n"""		903551	1					
ANR	903786	Argument	"""opsize = %d\\n"""		903551	0					
ANR	903787	PrimaryExpression	"""opsize = %d\\n"""		903551	0					
ANR	903788	Argument	t -> size		903551	1					
ANR	903789	PtrMemberAccess	t -> size		903551	0					
ANR	903790	Identifier	t		903551	0					
ANR	903791	Identifier	size		903551	1					
ANR	903792	ExpressionStatement	"r_cons_printf ( ""times = %d\\n"" , t -> times )"	4581:4:130068:130108	903551	12	True				
ANR	903793	CallExpression	"r_cons_printf ( ""times = %d\\n"" , t -> times )"		903551	0					
ANR	903794	Callee	r_cons_printf		903551	0					
ANR	903795	Identifier	r_cons_printf		903551	0					
ANR	903796	ArgumentList	"""times = %d\\n"""		903551	1					
ANR	903797	Argument	"""times = %d\\n"""		903551	0					
ANR	903798	PrimaryExpression	"""times = %d\\n"""		903551	0					
ANR	903799	Argument	t -> times		903551	1					
ANR	903800	PtrMemberAccess	t -> times		903551	0					
ANR	903801	Identifier	t		903551	0					
ANR	903802	Identifier	times		903551	1					
ANR	903803	ExpressionStatement	"r_cons_printf ( ""count = %d\\n"" , t -> count )"	4582:4:130114:130154	903551	13	True				
ANR	903804	CallExpression	"r_cons_printf ( ""count = %d\\n"" , t -> count )"		903551	0					
ANR	903805	Callee	r_cons_printf		903551	0					
ANR	903806	Identifier	r_cons_printf		903551	0					
ANR	903807	ArgumentList	"""count = %d\\n"""		903551	1					
ANR	903808	Argument	"""count = %d\\n"""		903551	0					
ANR	903809	PrimaryExpression	"""count = %d\\n"""		903551	0					
ANR	903810	Argument	t -> count		903551	1					
ANR	903811	PtrMemberAccess	t -> count		903551	0					
ANR	903812	Identifier	t		903551	0					
ANR	903813	Identifier	count		903551	1					
ANR	903814	BreakStatement	break ;	4585:3:130210:130215	903551	14	True				
ANR	903815	Label	case 'a' :	4586:2:130219:130227	903551	15	True				
ANR	903816	ExpressionStatement	"r_debug_trace_at ( core -> dbg , input + 3 )"	4587:3:130241:130280	903551	16	True				
ANR	903817	CallExpression	"r_debug_trace_at ( core -> dbg , input + 3 )"		903551	0					
ANR	903818	Callee	r_debug_trace_at		903551	0					
ANR	903819	Identifier	r_debug_trace_at		903551	0					
ANR	903820	ArgumentList	core -> dbg		903551	1					
ANR	903821	Argument	core -> dbg		903551	0					
ANR	903822	PtrMemberAccess	core -> dbg		903551	0					
ANR	903823	Identifier	core		903551	0					
ANR	903824	Identifier	dbg		903551	1					
ANR	903825	Argument	input + 3		903551	1					
ANR	903826	AdditiveExpression	input + 3		903551	0		+			
ANR	903827	Identifier	input		903551	0					
ANR	903828	PrimaryExpression	3		903551	1					
ANR	903829	BreakStatement	break ;	4588:3:130285:130290	903551	17	True				
ANR	903830	Label	case 't' :	4589:2:130294:130302	903551	18	True				
ANR	903831	ExpressionStatement	"r_debug_trace_tag ( core -> dbg , atoi ( input + 3 ) )"	4590:3:130316:130363	903551	19	True				
ANR	903832	CallExpression	"r_debug_trace_tag ( core -> dbg , atoi ( input + 3 ) )"		903551	0					
ANR	903833	Callee	r_debug_trace_tag		903551	0					
ANR	903834	Identifier	r_debug_trace_tag		903551	0					
ANR	903835	ArgumentList	core -> dbg		903551	1					
ANR	903836	Argument	core -> dbg		903551	0					
ANR	903837	PtrMemberAccess	core -> dbg		903551	0					
ANR	903838	Identifier	core		903551	0					
ANR	903839	Identifier	dbg		903551	1					
ANR	903840	Argument	atoi ( input + 3 )		903551	1					
ANR	903841	CallExpression	atoi ( input + 3 )		903551	0					
ANR	903842	Callee	atoi		903551	0					
ANR	903843	Identifier	atoi		903551	0					
ANR	903844	ArgumentList	input + 3		903551	1					
ANR	903845	Argument	input + 3		903551	0					
ANR	903846	AdditiveExpression	input + 3		903551	0		+			
ANR	903847	Identifier	input		903551	0					
ANR	903848	PrimaryExpression	3		903551	1					
ANR	903849	BreakStatement	break ;	4591:3:130368:130373	903551	20	True				
ANR	903850	Label	case 'c' :	4592:2:130377:130385	903551	21	True				
ANR	903851	IfStatement	if ( input [ 2 ] == '?' )		903551	22					
ANR	903852	Condition	input [ 2 ] == '?'	4593:7:130403:130417	903551	0	True				
ANR	903853	EqualityExpression	input [ 2 ] == '?'		903551	0		==			
ANR	903854	ArrayIndexing	input [ 2 ]		903551	0					
ANR	903855	Identifier	input		903551	0					
ANR	903856	PrimaryExpression	2		903551	1					
ANR	903857	PrimaryExpression	'?'		903551	1					
ANR	903858	CompoundStatement		57:24:1478:1478	903551	1					
ANR	903859	ExpressionStatement	"r_cons_println ( ""Usage: dtc [addr] ([from] [to] [addr]) - trace calls in debugger"" )"	4594:4:130426:130509	903551	0	True				
ANR	903860	CallExpression	"r_cons_println ( ""Usage: dtc [addr] ([from] [to] [addr]) - trace calls in debugger"" )"		903551	0					
ANR	903861	Callee	r_cons_println		903551	0					
ANR	903862	Identifier	r_cons_println		903551	0					
ANR	903863	ArgumentList	"""Usage: dtc [addr] ([from] [to] [addr]) - trace calls in debugger"""		903551	1					
ANR	903864	Argument	"""Usage: dtc [addr] ([from] [to] [addr]) - trace calls in debugger"""		903551	0					
ANR	903865	PrimaryExpression	"""Usage: dtc [addr] ([from] [to] [addr]) - trace calls in debugger"""		903551	0					
ANR	903866	ElseStatement	else		903551	0					
ANR	903867	CompoundStatement		59:10:1579:1579	903551	0					
ANR	903868	ExpressionStatement	"debug_trace_calls ( core , input + 2 )"	4596:4:130527:130562	903551	0	True				
ANR	903869	CallExpression	"debug_trace_calls ( core , input + 2 )"		903551	0					
ANR	903870	Callee	debug_trace_calls		903551	0					
ANR	903871	Identifier	debug_trace_calls		903551	0					
ANR	903872	ArgumentList	core		903551	1					
ANR	903873	Argument	core		903551	0					
ANR	903874	Identifier	core		903551	0					
ANR	903875	Argument	input + 2		903551	1					
ANR	903876	AdditiveExpression	input + 2		903551	0		+			
ANR	903877	Identifier	input		903551	0					
ANR	903878	PrimaryExpression	2		903551	1					
ANR	903879	BreakStatement	break ;	4598:3:130572:130577	903551	23	True				
ANR	903880	Label	case 'd' :	4599:2:130581:130589	903551	24	True				
ANR	903881	ExpressionStatement	"min = r_num_math ( core -> num , input + 3 )"	4600:3:130603:130642	903551	25	True				
ANR	903882	AssignmentExpression	"min = r_num_math ( core -> num , input + 3 )"		903551	0		=			
ANR	903883	Identifier	min		903551	0					
ANR	903884	CallExpression	"r_num_math ( core -> num , input + 3 )"		903551	1					
ANR	903885	Callee	r_num_math		903551	0					
ANR	903886	Identifier	r_num_math		903551	0					
ANR	903887	ArgumentList	core -> num		903551	1					
ANR	903888	Argument	core -> num		903551	0					
ANR	903889	PtrMemberAccess	core -> num		903551	0					
ANR	903890	Identifier	core		903551	0					
ANR	903891	Identifier	num		903551	1					
ANR	903892	Argument	input + 3		903551	1					
ANR	903893	AdditiveExpression	input + 3		903551	0		+			
ANR	903894	Identifier	input		903551	0					
ANR	903895	PrimaryExpression	3		903551	1					
ANR	903896	IfStatement	if ( input [ 2 ] == 'q' )		903551	26					
ANR	903897	Condition	input [ 2 ] == 'q'	4601:7:130651:130665	903551	0	True				
ANR	903898	EqualityExpression	input [ 2 ] == 'q'		903551	0		==			
ANR	903899	ArrayIndexing	input [ 2 ]		903551	0					
ANR	903900	Identifier	input		903551	0					
ANR	903901	PrimaryExpression	2		903551	1					
ANR	903902	PrimaryExpression	'q'		903551	1					
ANR	903903	CompoundStatement		66:4:1742:1751	903551	1					
ANR	903904	IdentifierDeclStatement	int n = 0 ;	4602:4:130684:130693	903551	0	True				
ANR	903905	IdentifierDecl	n = 0		903551	0					
ANR	903906	IdentifierDeclType	int		903551	0					
ANR	903907	Identifier	n		903551	1					
ANR	903908	AssignmentExpression	n = 0		903551	2		=			
ANR	903909	Identifier	n		903551	0					
ANR	903910	PrimaryExpression	0		903551	1					
ANR	903911	Statement	r_list_foreach	4603:4:130699:130712	903551	1	True				
ANR	903912	Statement	(	4603:19:130714:130714	903551	2	True				
ANR	903913	Statement	core	4603:20:130715:130718	903551	3	True				
ANR	903914	Statement	->	4603:24:130719:130720	903551	4	True				
ANR	903915	Statement	dbg	4603:26:130721:130723	903551	5	True				
ANR	903916	Statement	->	4603:29:130724:130725	903551	6	True				
ANR	903917	Statement	trace	4603:31:130726:130730	903551	7	True				
ANR	903918	Statement	->	4603:36:130731:130732	903551	8	True				
ANR	903919	Statement	traces	4603:38:130733:130738	903551	9	True				
ANR	903920	Statement	","	4603:44:130739:130739	903551	10	True				
ANR	903921	Statement	iter	4603:46:130741:130744	903551	11	True				
ANR	903922	Statement	","	4603:50:130745:130745	903551	12	True				
ANR	903923	Statement	trace	4603:52:130747:130751	903551	13	True				
ANR	903924	Statement	)	4603:57:130752:130752	903551	14	True				
ANR	903925	CompoundStatement		67:59:1812:1812	903551	15					
ANR	903926	IfStatement	if ( n >= min )		903551	0					
ANR	903927	Condition	n >= min	4604:9:130765:130772	903551	0	True				
ANR	903928	RelationalExpression	n >= min		903551	0		>=			
ANR	903929	Identifier	n		903551	0					
ANR	903930	Identifier	min		903551	1					
ANR	903931	CompoundStatement		68:19:1833:1833	903551	1					
ANR	903932	ExpressionStatement	"r_cons_printf ( ""%d  "" , trace -> count )"	4605:6:130783:130819	903551	0	True				
ANR	903933	CallExpression	"r_cons_printf ( ""%d  "" , trace -> count )"		903551	0					
ANR	903934	Callee	r_cons_printf		903551	0					
ANR	903935	Identifier	r_cons_printf		903551	0					
ANR	903936	ArgumentList	"""%d  """		903551	1					
ANR	903937	Argument	"""%d  """		903551	0					
ANR	903938	PrimaryExpression	"""%d  """		903551	0					
ANR	903939	Argument	trace -> count		903551	1					
ANR	903940	PtrMemberAccess	trace -> count		903551	0					
ANR	903941	Identifier	trace		903551	0					
ANR	903942	Identifier	count		903551	1					
ANR	903943	Statement	r_cons_printf	4606:6:130827:130839	903551	1	True				
ANR	903944	Statement	(	4606:20:130841:130841	903551	2	True				
ANR	903945	Statement	"""0x%08"""	4606:21:130842:130848	903551	3	True				
ANR	903946	Statement	PFMT64x	4606:28:130849:130855	903551	4	True				
ANR	903947	Statement	"""\\n"""	4606:35:130856:130859	903551	5	True				
ANR	903948	Statement	","	4606:39:130860:130860	903551	6	True				
ANR	903949	Statement	trace	4606:41:130862:130866	903551	7	True				
ANR	903950	Statement	->	4606:46:130867:130868	903551	8	True				
ANR	903951	Statement	addr	4606:48:130869:130872	903551	9	True				
ANR	903952	Statement	)	4606:52:130873:130873	903551	10	True				
ANR	903953	ExpressionStatement		4606:53:130874:130874	903551	11	True				
ANR	903954	BreakStatement	break ;	4607:6:130882:130887	903551	12	True				
ANR	903955	ExpressionStatement	n ++	4609:5:130901:130904	903551	1	True				
ANR	903956	PostIncDecOperationExpression	n ++		903551	0					
ANR	903957	Identifier	n		903551	0					
ANR	903958	IncDec	++		903551	1					
ANR	903959	ElseStatement	else		903551	0					
ANR	903960	IfStatement	if ( input [ 2 ] == 'i' )		903551	0					
ANR	903961	Condition	input [ 2 ] == 'i'	4611:14:130926:130940	903551	0	True				
ANR	903962	EqualityExpression	input [ 2 ] == 'i'		903551	0		==			
ANR	903963	ArrayIndexing	input [ 2 ]		903551	0					
ANR	903964	Identifier	input		903551	0					
ANR	903965	PrimaryExpression	2		903551	1					
ANR	903966	PrimaryExpression	'i'		903551	1					
ANR	903967	CompoundStatement		76:4:2007:2016	903551	1					
ANR	903968	IdentifierDeclStatement	int n = 0 ;	4612:4:130949:130958	903551	0	True				
ANR	903969	IdentifierDecl	n = 0		903551	0					
ANR	903970	IdentifierDeclType	int		903551	0					
ANR	903971	Identifier	n		903551	1					
ANR	903972	AssignmentExpression	n = 0		903551	2		=			
ANR	903973	Identifier	n		903551	0					
ANR	903974	PrimaryExpression	0		903551	1					
ANR	903975	Statement	r_list_foreach	4613:4:130964:130977	903551	1	True				
ANR	903976	Statement	(	4613:19:130979:130979	903551	2	True				
ANR	903977	Statement	core	4613:20:130980:130983	903551	3	True				
ANR	903978	Statement	->	4613:24:130984:130985	903551	4	True				
ANR	903979	Statement	dbg	4613:26:130986:130988	903551	5	True				
ANR	903980	Statement	->	4613:29:130989:130990	903551	6	True				
ANR	903981	Statement	trace	4613:31:130991:130995	903551	7	True				
ANR	903982	Statement	->	4613:36:130996:130997	903551	8	True				
ANR	903983	Statement	traces	4613:38:130998:131003	903551	9	True				
ANR	903984	Statement	","	4613:44:131004:131004	903551	10	True				
ANR	903985	Statement	iter	4613:46:131006:131009	903551	11	True				
ANR	903986	Statement	","	4613:50:131010:131010	903551	12	True				
ANR	903987	Statement	trace	4613:52:131012:131016	903551	13	True				
ANR	903988	Statement	)	4613:57:131017:131017	903551	14	True				
ANR	903989	CompoundStatement		77:59:2077:2077	903551	15					
ANR	903990	ExpressionStatement	"op = r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"	4614:5:131026:131111	903551	0	True				
ANR	903991	AssignmentExpression	"op = r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		903551	0		=			
ANR	903992	Identifier	op		903551	0					
ANR	903993	CallExpression	"r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		903551	1					
ANR	903994	Callee	r_core_anal_op		903551	0					
ANR	903995	Identifier	r_core_anal_op		903551	0					
ANR	903996	ArgumentList	core		903551	1					
ANR	903997	Argument	core		903551	0					
ANR	903998	Identifier	core		903551	0					
ANR	903999	Argument	trace -> addr		903551	1					
ANR	904000	PtrMemberAccess	trace -> addr		903551	0					
ANR	904001	Identifier	trace		903551	0					
ANR	904002	Identifier	addr		903551	1					
ANR	904003	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		903551	2					
ANR	904004	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		903551	0		|			
ANR	904005	Identifier	R_ANAL_OP_MASK_BASIC		903551	0					
ANR	904006	Identifier	R_ANAL_OP_MASK_DISASM		903551	1					
ANR	904007	IfStatement	if ( n >= min )		903551	1					
ANR	904008	Condition	n >= min	4615:9:131122:131129	903551	0	True				
ANR	904009	RelationalExpression	n >= min		903551	0		>=			
ANR	904010	Identifier	n		903551	0					
ANR	904011	Identifier	min		903551	1					
ANR	904012	CompoundStatement		79:19:2190:2190	903551	1					
ANR	904013	ExpressionStatement	"r_cons_printf ( ""%d %s\\n"" , trace -> count , op -> mnemonic )"	4616:6:131140:131193	903551	0	True				
ANR	904014	CallExpression	"r_cons_printf ( ""%d %s\\n"" , trace -> count , op -> mnemonic )"		903551	0					
ANR	904015	Callee	r_cons_printf		903551	0					
ANR	904016	Identifier	r_cons_printf		903551	0					
ANR	904017	ArgumentList	"""%d %s\\n"""		903551	1					
ANR	904018	Argument	"""%d %s\\n"""		903551	0					
ANR	904019	PrimaryExpression	"""%d %s\\n"""		903551	0					
ANR	904020	Argument	trace -> count		903551	1					
ANR	904021	PtrMemberAccess	trace -> count		903551	0					
ANR	904022	Identifier	trace		903551	0					
ANR	904023	Identifier	count		903551	1					
ANR	904024	Argument	op -> mnemonic		903551	2					
ANR	904025	PtrMemberAccess	op -> mnemonic		903551	0					
ANR	904026	Identifier	op		903551	0					
ANR	904027	Identifier	mnemonic		903551	1					
ANR	904028	ExpressionStatement	n ++	4618:5:131207:131210	903551	2	True				
ANR	904029	PostIncDecOperationExpression	n ++		903551	0					
ANR	904030	Identifier	n		903551	0					
ANR	904031	IncDec	++		903551	1					
ANR	904032	ExpressionStatement	r_anal_op_free ( op )	4619:5:131217:131236	903551	3	True				
ANR	904033	CallExpression	r_anal_op_free ( op )		903551	0					
ANR	904034	Callee	r_anal_op_free		903551	0					
ANR	904035	Identifier	r_anal_op_free		903551	0					
ANR	904036	ArgumentList	op		903551	1					
ANR	904037	Argument	op		903551	0					
ANR	904038	Identifier	op		903551	0					
ANR	904039	ElseStatement	else		903551	0					
ANR	904040	IfStatement	if ( input [ 2 ] == ' ' )		903551	0					
ANR	904041	Condition	input [ 2 ] == ' '	4621:14:131258:131272	903551	0	True				
ANR	904042	EqualityExpression	input [ 2 ] == ' '		903551	0		==			
ANR	904043	ArrayIndexing	input [ 2 ]		903551	0					
ANR	904044	Identifier	input		903551	0					
ANR	904045	PrimaryExpression	2		903551	1					
ANR	904046	PrimaryExpression	' '		903551	1					
ANR	904047	CompoundStatement		86:4:2339:2348	903551	1					
ANR	904048	IdentifierDeclStatement	int n = 0 ;	4622:4:131281:131290	903551	0	True				
ANR	904049	IdentifierDecl	n = 0		903551	0					
ANR	904050	IdentifierDeclType	int		903551	0					
ANR	904051	Identifier	n		903551	1					
ANR	904052	AssignmentExpression	n = 0		903551	2		=			
ANR	904053	Identifier	n		903551	0					
ANR	904054	PrimaryExpression	0		903551	1					
ANR	904055	Statement	r_list_foreach	4623:4:131296:131309	903551	1	True				
ANR	904056	Statement	(	4623:19:131311:131311	903551	2	True				
ANR	904057	Statement	core	4623:20:131312:131315	903551	3	True				
ANR	904058	Statement	->	4623:24:131316:131317	903551	4	True				
ANR	904059	Statement	dbg	4623:26:131318:131320	903551	5	True				
ANR	904060	Statement	->	4623:29:131321:131322	903551	6	True				
ANR	904061	Statement	trace	4623:31:131323:131327	903551	7	True				
ANR	904062	Statement	->	4623:36:131328:131329	903551	8	True				
ANR	904063	Statement	traces	4623:38:131330:131335	903551	9	True				
ANR	904064	Statement	","	4623:44:131336:131336	903551	10	True				
ANR	904065	Statement	iter	4623:46:131338:131341	903551	11	True				
ANR	904066	Statement	","	4623:50:131342:131342	903551	12	True				
ANR	904067	Statement	trace	4623:52:131344:131348	903551	13	True				
ANR	904068	Statement	)	4623:57:131349:131349	903551	14	True				
ANR	904069	CompoundStatement		87:59:2409:2409	903551	15					
ANR	904070	ExpressionStatement	"op = r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"	4624:5:131358:131443	903551	0	True				
ANR	904071	AssignmentExpression	"op = r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		903551	0		=			
ANR	904072	Identifier	op		903551	0					
ANR	904073	CallExpression	"r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		903551	1					
ANR	904074	Callee	r_core_anal_op		903551	0					
ANR	904075	Identifier	r_core_anal_op		903551	0					
ANR	904076	ArgumentList	core		903551	1					
ANR	904077	Argument	core		903551	0					
ANR	904078	Identifier	core		903551	0					
ANR	904079	Argument	trace -> addr		903551	1					
ANR	904080	PtrMemberAccess	trace -> addr		903551	0					
ANR	904081	Identifier	trace		903551	0					
ANR	904082	Identifier	addr		903551	1					
ANR	904083	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		903551	2					
ANR	904084	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		903551	0		|			
ANR	904085	Identifier	R_ANAL_OP_MASK_BASIC		903551	0					
ANR	904086	Identifier	R_ANAL_OP_MASK_DISASM		903551	1					
ANR	904087	IfStatement	if ( n >= min )		903551	1					
ANR	904088	Condition	n >= min	4625:9:131454:131461	903551	0	True				
ANR	904089	RelationalExpression	n >= min		903551	0		>=			
ANR	904090	Identifier	n		903551	0					
ANR	904091	Identifier	min		903551	1					
ANR	904092	CompoundStatement		89:19:2522:2522	903551	1					
ANR	904093	Statement	r_cons_printf	4626:6:131472:131484	903551	0	True				
ANR	904094	Statement	(	4626:20:131486:131486	903551	1	True				
ANR	904095	Statement	"""0x%08"""	4626:21:131487:131493	903551	2	True				
ANR	904096	Statement	PFMT64x	4626:28:131494:131500	903551	3	True				
ANR	904097	Statement	""" %s\\n"""	4626:35:131501:131507	903551	4	True				
ANR	904098	Statement	","	4626:42:131508:131508	903551	5	True				
ANR	904099	Statement	trace	4626:44:131510:131514	903551	6	True				
ANR	904100	Statement	->	4626:49:131515:131516	903551	7	True				
ANR	904101	Statement	addr	4626:51:131517:131520	903551	8	True				
ANR	904102	Statement	","	4626:55:131521:131521	903551	9	True				
ANR	904103	Statement	op	4626:57:131523:131524	903551	10	True				
ANR	904104	Statement	->	4626:59:131525:131526	903551	11	True				
ANR	904105	Statement	mnemonic	4626:61:131527:131534	903551	12	True				
ANR	904106	Statement	)	4626:69:131535:131535	903551	13	True				
ANR	904107	ExpressionStatement		4626:70:131536:131536	903551	14	True				
ANR	904108	ExpressionStatement	n ++	4628:5:131550:131553	903551	2	True				
ANR	904109	PostIncDecOperationExpression	n ++		903551	0					
ANR	904110	Identifier	n		903551	0					
ANR	904111	IncDec	++		903551	1					
ANR	904112	ExpressionStatement	r_anal_op_free ( op )	4629:5:131560:131579	903551	3	True				
ANR	904113	CallExpression	r_anal_op_free ( op )		903551	0					
ANR	904114	Callee	r_anal_op_free		903551	0					
ANR	904115	Identifier	r_anal_op_free		903551	0					
ANR	904116	ArgumentList	op		903551	1					
ANR	904117	Argument	op		903551	0					
ANR	904118	Identifier	op		903551	0					
ANR	904119	ElseStatement	else		903551	0					
ANR	904120	CompoundStatement		95:10:2655:2655	903551	0					
ANR	904121	Statement	r_list_foreach	4634:4:131686:131699	903551	0	True				
ANR	904122	Statement	(	4634:19:131701:131701	903551	1	True				
ANR	904123	Statement	core	4634:20:131702:131705	903551	2	True				
ANR	904124	Statement	->	4634:24:131706:131707	903551	3	True				
ANR	904125	Statement	dbg	4634:26:131708:131710	903551	4	True				
ANR	904126	Statement	->	4634:29:131711:131712	903551	5	True				
ANR	904127	Statement	trace	4634:31:131713:131717	903551	6	True				
ANR	904128	Statement	->	4634:36:131718:131719	903551	7	True				
ANR	904129	Statement	traces	4634:38:131720:131725	903551	8	True				
ANR	904130	Statement	","	4634:44:131726:131726	903551	9	True				
ANR	904131	Statement	iter	4634:46:131728:131731	903551	10	True				
ANR	904132	Statement	","	4634:50:131732:131732	903551	11	True				
ANR	904133	Statement	trace	4634:52:131734:131738	903551	12	True				
ANR	904134	Statement	)	4634:57:131739:131739	903551	13	True				
ANR	904135	CompoundStatement		98:59:2799:2799	903551	14					
ANR	904136	ExpressionStatement	"op = r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"	4635:5:131748:131833	903551	0	True				
ANR	904137	AssignmentExpression	"op = r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		903551	0		=			
ANR	904138	Identifier	op		903551	0					
ANR	904139	CallExpression	"r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		903551	1					
ANR	904140	Callee	r_core_anal_op		903551	0					
ANR	904141	Identifier	r_core_anal_op		903551	0					
ANR	904142	ArgumentList	core		903551	1					
ANR	904143	Argument	core		903551	0					
ANR	904144	Identifier	core		903551	0					
ANR	904145	Argument	trace -> addr		903551	1					
ANR	904146	PtrMemberAccess	trace -> addr		903551	0					
ANR	904147	Identifier	trace		903551	0					
ANR	904148	Identifier	addr		903551	1					
ANR	904149	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		903551	2					
ANR	904150	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		903551	0		|			
ANR	904151	Identifier	R_ANAL_OP_MASK_BASIC		903551	0					
ANR	904152	Identifier	R_ANAL_OP_MASK_DISASM		903551	1					
ANR	904153	Statement	r_cons_printf	4636:5:131840:131852	903551	1	True				
ANR	904154	Statement	(	4636:19:131854:131854	903551	2	True				
ANR	904155	Statement	"""0x%08"""	4636:20:131855:131861	903551	3	True				
ANR	904156	Statement	PFMT64x	4636:27:131862:131868	903551	4	True				
ANR	904157	Statement	""" %s\\n"""	4636:34:131869:131875	903551	5	True				
ANR	904158	Statement	","	4636:41:131876:131876	903551	6	True				
ANR	904159	Statement	trace	4636:43:131878:131882	903551	7	True				
ANR	904160	Statement	->	4636:48:131883:131884	903551	8	True				
ANR	904161	Statement	addr	4636:50:131885:131888	903551	9	True				
ANR	904162	Statement	","	4636:54:131889:131889	903551	10	True				
ANR	904163	Statement	op	4636:56:131891:131892	903551	11	True				
ANR	904164	Statement	->	4636:58:131893:131894	903551	12	True				
ANR	904165	Statement	mnemonic	4636:60:131895:131902	903551	13	True				
ANR	904166	Statement	)	4636:68:131903:131903	903551	14	True				
ANR	904167	ExpressionStatement		4636:69:131904:131904	903551	15	True				
ANR	904168	ExpressionStatement	r_anal_op_free ( op )	4637:5:131911:131930	903551	16	True				
ANR	904169	CallExpression	r_anal_op_free ( op )		903551	0					
ANR	904170	Callee	r_anal_op_free		903551	0					
ANR	904171	Identifier	r_anal_op_free		903551	0					
ANR	904172	ArgumentList	op		903551	1					
ANR	904173	Argument	op		903551	0					
ANR	904174	Identifier	op		903551	0					
ANR	904175	BreakStatement	break ;	4640:3:131946:131951	903551	27	True				
ANR	904176	Label	case 'g' :	4641:2:131955:131963	903551	28	True				
ANR	904177	ExpressionStatement	"dot_trace_traverse ( core , core -> dbg -> tree , input [ 2 ] )"	4642:3:131977:132029	903551	29	True				
ANR	904178	CallExpression	"dot_trace_traverse ( core , core -> dbg -> tree , input [ 2 ] )"		903551	0					
ANR	904179	Callee	dot_trace_traverse		903551	0					
ANR	904180	Identifier	dot_trace_traverse		903551	0					
ANR	904181	ArgumentList	core		903551	1					
ANR	904182	Argument	core		903551	0					
ANR	904183	Identifier	core		903551	0					
ANR	904184	Argument	core -> dbg -> tree		903551	1					
ANR	904185	PtrMemberAccess	core -> dbg -> tree		903551	0					
ANR	904186	PtrMemberAccess	core -> dbg		903551	0					
ANR	904187	Identifier	core		903551	0					
ANR	904188	Identifier	dbg		903551	1					
ANR	904189	Identifier	tree		903551	1					
ANR	904190	Argument	input [ 2 ]		903551	2					
ANR	904191	ArrayIndexing	input [ 2 ]		903551	0					
ANR	904192	Identifier	input		903551	0					
ANR	904193	PrimaryExpression	2		903551	1					
ANR	904194	BreakStatement	break ;	4643:3:132034:132039	903551	30	True				
ANR	904195	Label	case '-' :	4644:2:132043:132051	903551	31	True				
ANR	904196	ExpressionStatement	r_tree_reset ( core -> dbg -> tree )	4645:3:132065:132095	903551	32	True				
ANR	904197	CallExpression	r_tree_reset ( core -> dbg -> tree )		903551	0					
ANR	904198	Callee	r_tree_reset		903551	0					
ANR	904199	Identifier	r_tree_reset		903551	0					
ANR	904200	ArgumentList	core -> dbg -> tree		903551	1					
ANR	904201	Argument	core -> dbg -> tree		903551	0					
ANR	904202	PtrMemberAccess	core -> dbg -> tree		903551	0					
ANR	904203	PtrMemberAccess	core -> dbg		903551	0					
ANR	904204	Identifier	core		903551	0					
ANR	904205	Identifier	dbg		903551	1					
ANR	904206	Identifier	tree		903551	1					
ANR	904207	ExpressionStatement	r_debug_trace_free ( core -> dbg -> trace )	4646:3:132100:132137	903551	33	True				
ANR	904208	CallExpression	r_debug_trace_free ( core -> dbg -> trace )		903551	0					
ANR	904209	Callee	r_debug_trace_free		903551	0					
ANR	904210	Identifier	r_debug_trace_free		903551	0					
ANR	904211	ArgumentList	core -> dbg -> trace		903551	1					
ANR	904212	Argument	core -> dbg -> trace		903551	0					
ANR	904213	PtrMemberAccess	core -> dbg -> trace		903551	0					
ANR	904214	PtrMemberAccess	core -> dbg		903551	0					
ANR	904215	Identifier	core		903551	0					
ANR	904216	Identifier	dbg		903551	1					
ANR	904217	Identifier	trace		903551	1					
ANR	904218	ExpressionStatement	r_debug_tracenodes_reset ( core -> dbg )	4647:3:132142:132178	903551	34	True				
ANR	904219	CallExpression	r_debug_tracenodes_reset ( core -> dbg )		903551	0					
ANR	904220	Callee	r_debug_tracenodes_reset		903551	0					
ANR	904221	Identifier	r_debug_tracenodes_reset		903551	0					
ANR	904222	ArgumentList	core -> dbg		903551	1					
ANR	904223	Argument	core -> dbg		903551	0					
ANR	904224	PtrMemberAccess	core -> dbg		903551	0					
ANR	904225	Identifier	core		903551	0					
ANR	904226	Identifier	dbg		903551	1					
ANR	904227	ExpressionStatement	core -> dbg -> trace = r_debug_trace_new ( )	4648:3:132183:132222	903551	35	True				
ANR	904228	AssignmentExpression	core -> dbg -> trace = r_debug_trace_new ( )		903551	0		=			
ANR	904229	PtrMemberAccess	core -> dbg -> trace		903551	0					
ANR	904230	PtrMemberAccess	core -> dbg		903551	0					
ANR	904231	Identifier	core		903551	0					
ANR	904232	Identifier	dbg		903551	1					
ANR	904233	Identifier	trace		903551	1					
ANR	904234	CallExpression	r_debug_trace_new ( )		903551	1					
ANR	904235	Callee	r_debug_trace_new		903551	0					
ANR	904236	Identifier	r_debug_trace_new		903551	0					
ANR	904237	ArgumentList			903551	1					
ANR	904238	BreakStatement	break ;	4649:3:132227:132232	903551	36	True				
ANR	904239	Label	case '+' :	4650:2:132236:132244	903551	37	True				
ANR	904240	IfStatement	if ( input [ 2 ] == '+' )		903551	38					
ANR	904241	Condition	input [ 2 ] == '+'	4651:7:132262:132276	903551	0	True				
ANR	904242	EqualityExpression	input [ 2 ] == '+'		903551	0		==			
ANR	904243	ArrayIndexing	input [ 2 ]		903551	0					
ANR	904244	Identifier	input		903551	0					
ANR	904245	PrimaryExpression	2		903551	1					
ANR	904246	PrimaryExpression	'+'		903551	1					
ANR	904247	CompoundStatement		118:4:3447:3462	903551	1					
ANR	904248	IdentifierDeclStatement	"char * a , * s = r_str_trim_dup ( input + 3 ) ;"	4652:4:132295:132335	903551	0	True				
ANR	904249	IdentifierDecl	* a		903551	0					
ANR	904250	IdentifierDeclType	char *		903551	0					
ANR	904251	Identifier	a		903551	1					
ANR	904252	IdentifierDecl	* s = r_str_trim_dup ( input + 3 )		903551	1					
ANR	904253	IdentifierDeclType	char *		903551	0					
ANR	904254	Identifier	s		903551	1					
ANR	904255	AssignmentExpression	* s = r_str_trim_dup ( input + 3 )		903551	2		=			
ANR	904256	Identifier	s		903551	0					
ANR	904257	CallExpression	r_str_trim_dup ( input + 3 )		903551	1					
ANR	904258	Callee	r_str_trim_dup		903551	0					
ANR	904259	Identifier	r_str_trim_dup		903551	0					
ANR	904260	ArgumentList	input + 3		903551	1					
ANR	904261	Argument	input + 3		903551	0					
ANR	904262	AdditiveExpression	input + 3		903551	0		+			
ANR	904263	Identifier	input		903551	0					
ANR	904264	PrimaryExpression	3		903551	1					
ANR	904265	IdentifierDeclStatement	"RList * args = r_str_split_list ( s , "" "" , 0 ) ;"	4653:4:132341:132383	903551	1	True				
ANR	904266	IdentifierDecl	"* args = r_str_split_list ( s , "" "" , 0 )"		903551	0					
ANR	904267	IdentifierDeclType	RList *		903551	0					
ANR	904268	Identifier	args		903551	1					
ANR	904269	AssignmentExpression	"* args = r_str_split_list ( s , "" "" , 0 )"		903551	2		=			
ANR	904270	Identifier	args		903551	0					
ANR	904271	CallExpression	"r_str_split_list ( s , "" "" , 0 )"		903551	1					
ANR	904272	Callee	r_str_split_list		903551	0					
ANR	904273	Identifier	r_str_split_list		903551	0					
ANR	904274	ArgumentList	s		903551	1					
ANR	904275	Argument	s		903551	0					
ANR	904276	Identifier	s		903551	0					
ANR	904277	Argument	""" """		903551	1					
ANR	904278	PrimaryExpression	""" """		903551	0					
ANR	904279	Argument	0		903551	2					
ANR	904280	PrimaryExpression	0		903551	0					
ANR	904281	IdentifierDeclStatement	RListIter * iter ;	4654:4:132389:132404	903551	2	True				
ANR	904282	IdentifierDecl	* iter		903551	0					
ANR	904283	IdentifierDeclType	RListIter *		903551	0					
ANR	904284	Identifier	iter		903551	1					
ANR	904285	Statement	r_list_foreach	4655:4:132410:132423	903551	3	True				
ANR	904286	Statement	(	4655:19:132425:132425	903551	4	True				
ANR	904287	Statement	args	4655:20:132426:132429	903551	5	True				
ANR	904288	Statement	","	4655:24:132430:132430	903551	6	True				
ANR	904289	Statement	iter	4655:26:132432:132435	903551	7	True				
ANR	904290	Statement	","	4655:30:132436:132436	903551	8	True				
ANR	904291	Statement	a	4655:32:132438:132438	903551	9	True				
ANR	904292	Statement	)	4655:33:132439:132439	903551	10	True				
ANR	904293	CompoundStatement		120:5:3506:3537	903551	11					
ANR	904294	IdentifierDeclStatement	"ut64 addr = r_num_get ( NULL , a ) ;"	4656:5:132448:132479	903551	0	True				
ANR	904295	IdentifierDecl	"addr = r_num_get ( NULL , a )"		903551	0					
ANR	904296	IdentifierDeclType	ut64		903551	0					
ANR	904297	Identifier	addr		903551	1					
ANR	904298	AssignmentExpression	"addr = r_num_get ( NULL , a )"		903551	2		=			
ANR	904299	Identifier	addr		903551	0					
ANR	904300	CallExpression	"r_num_get ( NULL , a )"		903551	1					
ANR	904301	Callee	r_num_get		903551	0					
ANR	904302	Identifier	r_num_get		903551	0					
ANR	904303	ArgumentList	NULL		903551	1					
ANR	904304	Argument	NULL		903551	0					
ANR	904305	Identifier	NULL		903551	0					
ANR	904306	Argument	a		903551	1					
ANR	904307	Identifier	a		903551	0					
ANR	904308	ExpressionStatement	"( void ) r_debug_trace_add ( core -> dbg , addr , 1 )"	4657:5:132486:132530	903551	1	True				
ANR	904309	CastExpression	"( void ) r_debug_trace_add ( core -> dbg , addr , 1 )"		903551	0					
ANR	904310	CastTarget	void		903551	0					
ANR	904311	CallExpression	"r_debug_trace_add ( core -> dbg , addr , 1 )"		903551	1					
ANR	904312	Callee	r_debug_trace_add		903551	0					
ANR	904313	Identifier	r_debug_trace_add		903551	0					
ANR	904314	ArgumentList	core -> dbg		903551	1					
ANR	904315	Argument	core -> dbg		903551	0					
ANR	904316	PtrMemberAccess	core -> dbg		903551	0					
ANR	904317	Identifier	core		903551	0					
ANR	904318	Identifier	dbg		903551	1					
ANR	904319	Argument	addr		903551	1					
ANR	904320	Identifier	addr		903551	0					
ANR	904321	Argument	1		903551	2					
ANR	904322	PrimaryExpression	1		903551	0					
ANR	904323	ExpressionStatement	r_list_free ( args )	4659:4:132542:132560	903551	12	True				
ANR	904324	CallExpression	r_list_free ( args )		903551	0					
ANR	904325	Callee	r_list_free		903551	0					
ANR	904326	Identifier	r_list_free		903551	0					
ANR	904327	ArgumentList	args		903551	1					
ANR	904328	Argument	args		903551	0					
ANR	904329	Identifier	args		903551	0					
ANR	904330	ExpressionStatement	free ( s )	4660:4:132566:132574	903551	13	True				
ANR	904331	CallExpression	free ( s )		903551	0					
ANR	904332	Callee	free		903551	0					
ANR	904333	Identifier	free		903551	0					
ANR	904334	ArgumentList	s		903551	1					
ANR	904335	Argument	s		903551	0					
ANR	904336	Identifier	s		903551	0					
ANR	904337	ElseStatement	else		903551	0					
ANR	904338	CompoundStatement		133:4:3826:3867	903551	0					
ANR	904339	ExpressionStatement	ptr = input + 2	4662:4:132592:132607	903551	0	True				
ANR	904340	AssignmentExpression	ptr = input + 2		903551	0		=			
ANR	904341	Identifier	ptr		903551	0					
ANR	904342	AdditiveExpression	input + 2		903551	1		+			
ANR	904343	Identifier	input		903551	0					
ANR	904344	PrimaryExpression	2		903551	1					
ANR	904345	ExpressionStatement	"addr = r_num_math ( core -> num , ptr )"	4663:4:132613:132647	903551	1	True				
ANR	904346	AssignmentExpression	"addr = r_num_math ( core -> num , ptr )"		903551	0		=			
ANR	904347	Identifier	addr		903551	0					
ANR	904348	CallExpression	"r_num_math ( core -> num , ptr )"		903551	1					
ANR	904349	Callee	r_num_math		903551	0					
ANR	904350	Identifier	r_num_math		903551	0					
ANR	904351	ArgumentList	core -> num		903551	1					
ANR	904352	Argument	core -> num		903551	0					
ANR	904353	PtrMemberAccess	core -> num		903551	0					
ANR	904354	Identifier	core		903551	0					
ANR	904355	Identifier	num		903551	1					
ANR	904356	Argument	ptr		903551	1					
ANR	904357	Identifier	ptr		903551	0					
ANR	904358	ExpressionStatement	"ptr = strchr ( ptr , ' ' )"	4664:4:132653:132676	903551	2	True				
ANR	904359	AssignmentExpression	"ptr = strchr ( ptr , ' ' )"		903551	0		=			
ANR	904360	Identifier	ptr		903551	0					
ANR	904361	CallExpression	"strchr ( ptr , ' ' )"		903551	1					
ANR	904362	Callee	strchr		903551	0					
ANR	904363	Identifier	strchr		903551	0					
ANR	904364	ArgumentList	ptr		903551	1					
ANR	904365	Argument	ptr		903551	0					
ANR	904366	Identifier	ptr		903551	0					
ANR	904367	Argument	' '		903551	1					
ANR	904368	PrimaryExpression	' '		903551	0					
ANR	904369	IdentifierDeclStatement	int count = 1 ;	4665:4:132682:132695	903551	3	True				
ANR	904370	IdentifierDecl	count = 1		903551	0					
ANR	904371	IdentifierDeclType	int		903551	0					
ANR	904372	Identifier	count		903551	1					
ANR	904373	AssignmentExpression	count = 1		903551	2		=			
ANR	904374	Identifier	count		903551	0					
ANR	904375	PrimaryExpression	1		903551	1					
ANR	904376	IfStatement	if ( ptr )		903551	4					
ANR	904377	Condition	ptr	4666:8:132705:132707	903551	0	True				
ANR	904378	Identifier	ptr		903551	0					
ANR	904379	CompoundStatement		130:13:3768:3768	903551	1					
ANR	904380	ExpressionStatement	"count = r_num_math ( core -> num , ptr + 1 )"	4667:5:132717:132756	903551	0	True				
ANR	904381	AssignmentExpression	"count = r_num_math ( core -> num , ptr + 1 )"		903551	0		=			
ANR	904382	Identifier	count		903551	0					
ANR	904383	CallExpression	"r_num_math ( core -> num , ptr + 1 )"		903551	1					
ANR	904384	Callee	r_num_math		903551	0					
ANR	904385	Identifier	r_num_math		903551	0					
ANR	904386	ArgumentList	core -> num		903551	1					
ANR	904387	Argument	core -> num		903551	0					
ANR	904388	PtrMemberAccess	core -> num		903551	0					
ANR	904389	Identifier	core		903551	0					
ANR	904390	Identifier	num		903551	1					
ANR	904391	Argument	ptr + 1		903551	1					
ANR	904392	AdditiveExpression	ptr + 1		903551	0		+			
ANR	904393	Identifier	ptr		903551	0					
ANR	904394	PrimaryExpression	1		903551	1					
ANR	904395	IdentifierDeclStatement	"RAnalOp * op = r_core_op_anal ( core , addr ) ;"	4669:4:132768:132809	903551	5	True				
ANR	904396	IdentifierDecl	"* op = r_core_op_anal ( core , addr )"		903551	0					
ANR	904397	IdentifierDeclType	RAnalOp *		903551	0					
ANR	904398	Identifier	op		903551	1					
ANR	904399	AssignmentExpression	"* op = r_core_op_anal ( core , addr )"		903551	2		=			
ANR	904400	Identifier	op		903551	0					
ANR	904401	CallExpression	"r_core_op_anal ( core , addr )"		903551	1					
ANR	904402	Callee	r_core_op_anal		903551	0					
ANR	904403	Identifier	r_core_op_anal		903551	0					
ANR	904404	ArgumentList	core		903551	1					
ANR	904405	Argument	core		903551	0					
ANR	904406	Identifier	core		903551	0					
ANR	904407	Argument	addr		903551	1					
ANR	904408	Identifier	addr		903551	0					
ANR	904409	IfStatement	if ( op )		903551	6					
ANR	904410	Condition	op	4670:8:132819:132820	903551	0	True				
ANR	904411	Identifier	op		903551	0					
ANR	904412	CompoundStatement		135:5:3888:3956	903551	1					
ANR	904413	IdentifierDeclStatement	"RDebugTracepoint * tp = r_debug_trace_add ( core -> dbg , addr , op -> size ) ;"	4671:5:132830:132898	903551	0	True				
ANR	904414	IdentifierDecl	"* tp = r_debug_trace_add ( core -> dbg , addr , op -> size )"		903551	0					
ANR	904415	IdentifierDeclType	RDebugTracepoint *		903551	0					
ANR	904416	Identifier	tp		903551	1					
ANR	904417	AssignmentExpression	"* tp = r_debug_trace_add ( core -> dbg , addr , op -> size )"		903551	2		=			
ANR	904418	Identifier	tp		903551	0					
ANR	904419	CallExpression	"r_debug_trace_add ( core -> dbg , addr , op -> size )"		903551	1					
ANR	904420	Callee	r_debug_trace_add		903551	0					
ANR	904421	Identifier	r_debug_trace_add		903551	0					
ANR	904422	ArgumentList	core -> dbg		903551	1					
ANR	904423	Argument	core -> dbg		903551	0					
ANR	904424	PtrMemberAccess	core -> dbg		903551	0					
ANR	904425	Identifier	core		903551	0					
ANR	904426	Identifier	dbg		903551	1					
ANR	904427	Argument	addr		903551	1					
ANR	904428	Identifier	addr		903551	0					
ANR	904429	Argument	op -> size		903551	2					
ANR	904430	PtrMemberAccess	op -> size		903551	0					
ANR	904431	Identifier	op		903551	0					
ANR	904432	Identifier	size		903551	1					
ANR	904433	IfStatement	if ( ! tp )		903551	1					
ANR	904434	Condition	! tp	4672:9:132909:132911	903551	0	True				
ANR	904435	UnaryOperationExpression	! tp		903551	0					
ANR	904436	UnaryOperator	!		903551	0					
ANR	904437	Identifier	tp		903551	1					
ANR	904438	CompoundStatement		136:14:3972:3972	903551	1					
ANR	904439	ExpressionStatement	r_anal_op_free ( op )	4673:6:132922:132941	903551	0	True				
ANR	904440	CallExpression	r_anal_op_free ( op )		903551	0					
ANR	904441	Callee	r_anal_op_free		903551	0					
ANR	904442	Identifier	r_anal_op_free		903551	0					
ANR	904443	ArgumentList	op		903551	1					
ANR	904444	Argument	op		903551	0					
ANR	904445	Identifier	op		903551	0					
ANR	904446	BreakStatement	break ;	4674:6:132949:132954	903551	1	True				
ANR	904447	ExpressionStatement	tp -> count = count	4676:5:132968:132985	903551	2	True				
ANR	904448	AssignmentExpression	tp -> count = count		903551	0		=			
ANR	904449	PtrMemberAccess	tp -> count		903551	0					
ANR	904450	Identifier	tp		903551	0					
ANR	904451	Identifier	count		903551	1					
ANR	904452	Identifier	count		903551	1					
ANR	904453	ExpressionStatement	"r_anal_trace_bb ( core -> anal , addr )"	4677:5:132992:133026	903551	3	True				
ANR	904454	CallExpression	"r_anal_trace_bb ( core -> anal , addr )"		903551	0					
ANR	904455	Callee	r_anal_trace_bb		903551	0					
ANR	904456	Identifier	r_anal_trace_bb		903551	0					
ANR	904457	ArgumentList	core -> anal		903551	1					
ANR	904458	Argument	core -> anal		903551	0					
ANR	904459	PtrMemberAccess	core -> anal		903551	0					
ANR	904460	Identifier	core		903551	0					
ANR	904461	Identifier	anal		903551	1					
ANR	904462	Argument	addr		903551	1					
ANR	904463	Identifier	addr		903551	0					
ANR	904464	ExpressionStatement	r_anal_op_free ( op )	4678:5:133033:133052	903551	4	True				
ANR	904465	CallExpression	r_anal_op_free ( op )		903551	0					
ANR	904466	Callee	r_anal_op_free		903551	0					
ANR	904467	Identifier	r_anal_op_free		903551	0					
ANR	904468	ArgumentList	op		903551	1					
ANR	904469	Argument	op		903551	0					
ANR	904470	Identifier	op		903551	0					
ANR	904471	ElseStatement	else		903551	0					
ANR	904472	CompoundStatement		143:11:4123:4123	903551	0					
ANR	904473	Statement	eprintf	4680:5:133072:133078	903551	0	True				
ANR	904474	Statement	(	4680:13:133080:133080	903551	1	True				
ANR	904475	Statement	"""Cannot analyze opcode at 0x%08"""	4680:14:133081:133112	903551	2	True				
ANR	904476	Statement	PFMT64x	4680:47:133114:133120	903551	3	True				
ANR	904477	Statement	"""\\n"""	4680:55:133122:133125	903551	4	True				
ANR	904478	Statement	","	4680:59:133126:133126	903551	5	True				
ANR	904479	Statement	addr	4680:61:133128:133131	903551	6	True				
ANR	904480	Statement	)	4680:65:133132:133132	903551	7	True				
ANR	904481	ExpressionStatement		4680:66:133133:133133	903551	8	True				
ANR	904482	BreakStatement	break ;	4683:3:133149:133154	903551	39	True				
ANR	904483	Label	case 'e' :	4684:2:133158:133166	903551	40	True				
ANR	904484	IfStatement	if ( ! core -> anal -> esil )		903551	41					
ANR	904485	Condition	! core -> anal -> esil	4685:7:133184:133200	903551	0	True				
ANR	904486	UnaryOperationExpression	! core -> anal -> esil		903551	0					
ANR	904487	UnaryOperator	!		903551	0					
ANR	904488	PtrMemberAccess	core -> anal -> esil		903551	1					
ANR	904489	PtrMemberAccess	core -> anal		903551	0					
ANR	904490	Identifier	core		903551	0					
ANR	904491	Identifier	anal		903551	1					
ANR	904492	Identifier	esil		903551	1					
ANR	904493	CompoundStatement		155:4:4586:4657	903551	1					
ANR	904494	IdentifierDeclStatement	"int stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" ) ;"	4686:4:133209:133274	903551	0	True				
ANR	904495	IdentifierDecl	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		903551	0					
ANR	904496	IdentifierDeclType	int		903551	0					
ANR	904497	Identifier	stacksize		903551	1					
ANR	904498	AssignmentExpression	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		903551	2		=			
ANR	904499	Identifier	stacksize		903551	0					
ANR	904500	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.depth"" )"		903551	1					
ANR	904501	Callee	r_config_get_i		903551	0					
ANR	904502	Identifier	r_config_get_i		903551	0					
ANR	904503	ArgumentList	core -> config		903551	1					
ANR	904504	Argument	core -> config		903551	0					
ANR	904505	PtrMemberAccess	core -> config		903551	0					
ANR	904506	Identifier	core		903551	0					
ANR	904507	Identifier	config		903551	1					
ANR	904508	Argument	"""esil.stack.depth"""		903551	1					
ANR	904509	PrimaryExpression	"""esil.stack.depth"""		903551	0					
ANR	904510	IdentifierDeclStatement	"int romem = r_config_get_i ( core -> config , ""esil.romem"" ) ;"	4687:4:133280:133335	903551	1	True				
ANR	904511	IdentifierDecl	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		903551	0					
ANR	904512	IdentifierDeclType	int		903551	0					
ANR	904513	Identifier	romem		903551	1					
ANR	904514	AssignmentExpression	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		903551	2		=			
ANR	904515	Identifier	romem		903551	0					
ANR	904516	CallExpression	"r_config_get_i ( core -> config , ""esil.romem"" )"		903551	1					
ANR	904517	Callee	r_config_get_i		903551	0					
ANR	904518	Identifier	r_config_get_i		903551	0					
ANR	904519	ArgumentList	core -> config		903551	1					
ANR	904520	Argument	core -> config		903551	0					
ANR	904521	PtrMemberAccess	core -> config		903551	0					
ANR	904522	Identifier	core		903551	0					
ANR	904523	Identifier	config		903551	1					
ANR	904524	Argument	"""esil.romem"""		903551	1					
ANR	904525	PrimaryExpression	"""esil.romem"""		903551	0					
ANR	904526	IdentifierDeclStatement	"int stats = r_config_get_i ( core -> config , ""esil.stats"" ) ;"	4688:4:133341:133396	903551	2	True				
ANR	904527	IdentifierDecl	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		903551	0					
ANR	904528	IdentifierDeclType	int		903551	0					
ANR	904529	Identifier	stats		903551	1					
ANR	904530	AssignmentExpression	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		903551	2		=			
ANR	904531	Identifier	stats		903551	0					
ANR	904532	CallExpression	"r_config_get_i ( core -> config , ""esil.stats"" )"		903551	1					
ANR	904533	Callee	r_config_get_i		903551	0					
ANR	904534	Identifier	r_config_get_i		903551	0					
ANR	904535	ArgumentList	core -> config		903551	1					
ANR	904536	Argument	core -> config		903551	0					
ANR	904537	PtrMemberAccess	core -> config		903551	0					
ANR	904538	Identifier	core		903551	0					
ANR	904539	Identifier	config		903551	1					
ANR	904540	Argument	"""esil.stats"""		903551	1					
ANR	904541	PrimaryExpression	"""esil.stats"""		903551	0					
ANR	904542	IdentifierDeclStatement	"int iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" ) ;"	4689:4:133402:133459	903551	3	True				
ANR	904543	IdentifierDecl	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		903551	0					
ANR	904544	IdentifierDeclType	int		903551	0					
ANR	904545	Identifier	iotrap		903551	1					
ANR	904546	AssignmentExpression	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		903551	2		=			
ANR	904547	Identifier	iotrap		903551	0					
ANR	904548	CallExpression	"r_config_get_i ( core -> config , ""esil.iotrap"" )"		903551	1					
ANR	904549	Callee	r_config_get_i		903551	0					
ANR	904550	Identifier	r_config_get_i		903551	0					
ANR	904551	ArgumentList	core -> config		903551	1					
ANR	904552	Argument	core -> config		903551	0					
ANR	904553	PtrMemberAccess	core -> config		903551	0					
ANR	904554	Identifier	core		903551	0					
ANR	904555	Identifier	config		903551	1					
ANR	904556	Argument	"""esil.iotrap"""		903551	1					
ANR	904557	PrimaryExpression	"""esil.iotrap"""		903551	0					
ANR	904558	IdentifierDeclStatement	"int nonull = r_config_get_i ( core -> config , ""esil.nonull"" ) ;"	4690:4:133465:133522	903551	4	True				
ANR	904559	IdentifierDecl	"nonull = r_config_get_i ( core -> config , ""esil.nonull"" )"		903551	0					
ANR	904560	IdentifierDeclType	int		903551	0					
ANR	904561	Identifier	nonull		903551	1					
ANR	904562	AssignmentExpression	"nonull = r_config_get_i ( core -> config , ""esil.nonull"" )"		903551	2		=			
ANR	904563	Identifier	nonull		903551	0					
ANR	904564	CallExpression	"r_config_get_i ( core -> config , ""esil.nonull"" )"		903551	1					
ANR	904565	Callee	r_config_get_i		903551	0					
ANR	904566	Identifier	r_config_get_i		903551	0					
ANR	904567	ArgumentList	core -> config		903551	1					
ANR	904568	Argument	core -> config		903551	0					
ANR	904569	PtrMemberAccess	core -> config		903551	0					
ANR	904570	Identifier	core		903551	0					
ANR	904571	Identifier	config		903551	1					
ANR	904572	Argument	"""esil.nonull"""		903551	1					
ANR	904573	PrimaryExpression	"""esil.nonull"""		903551	0					
ANR	904574	IdentifierDeclStatement	"unsigned int addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" ) ;"	4691:4:133528:133599	903551	5	True				
ANR	904575	IdentifierDecl	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		903551	0					
ANR	904576	IdentifierDeclType	unsigned int		903551	0					
ANR	904577	Identifier	addrsize		903551	1					
ANR	904578	AssignmentExpression	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		903551	2		=			
ANR	904579	Identifier	addrsize		903551	0					
ANR	904580	CallExpression	"r_config_get_i ( core -> config , ""esil.addr.size"" )"		903551	1					
ANR	904581	Callee	r_config_get_i		903551	0					
ANR	904582	Identifier	r_config_get_i		903551	0					
ANR	904583	ArgumentList	core -> config		903551	1					
ANR	904584	Argument	core -> config		903551	0					
ANR	904585	PtrMemberAccess	core -> config		903551	0					
ANR	904586	Identifier	core		903551	0					
ANR	904587	Identifier	config		903551	1					
ANR	904588	Argument	"""esil.addr.size"""		903551	1					
ANR	904589	PrimaryExpression	"""esil.addr.size"""		903551	0					
ANR	904590	IfStatement	"if ( ! ( core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) ) )"		903551	6					
ANR	904591	Condition	"! ( core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"	4692:8:133609:133675	903551	0	True				
ANR	904592	UnaryOperationExpression	"! ( core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"		903551	0					
ANR	904593	UnaryOperator	!		903551	0					
ANR	904594	AssignmentExpression	"core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		903551	1		=			
ANR	904595	PtrMemberAccess	core -> anal -> esil		903551	0					
ANR	904596	PtrMemberAccess	core -> anal		903551	0					
ANR	904597	Identifier	core		903551	0					
ANR	904598	Identifier	anal		903551	1					
ANR	904599	Identifier	esil		903551	1					
ANR	904600	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		903551	1					
ANR	904601	Callee	r_anal_esil_new		903551	0					
ANR	904602	Identifier	r_anal_esil_new		903551	0					
ANR	904603	ArgumentList	stacksize		903551	1					
ANR	904604	Argument	stacksize		903551	0					
ANR	904605	Identifier	stacksize		903551	0					
ANR	904606	Argument	iotrap		903551	1					
ANR	904607	Identifier	iotrap		903551	0					
ANR	904608	Argument	addrsize		903551	2					
ANR	904609	Identifier	addrsize		903551	0					
ANR	904610	CompoundStatement		156:77:4736:4736	903551	1					
ANR	904611	ReturnStatement	return 0 ;	4693:5:133685:133693	903551	0	True				
ANR	904612	PrimaryExpression	0		903551	0					
ANR	904613	ExpressionStatement	"r_anal_esil_setup ( core -> anal -> esil , core -> anal , romem , stats , nonull )"	4695:4:133705:133775	903551	7	True				
ANR	904614	CallExpression	"r_anal_esil_setup ( core -> anal -> esil , core -> anal , romem , stats , nonull )"		903551	0					
ANR	904615	Callee	r_anal_esil_setup		903551	0					
ANR	904616	Identifier	r_anal_esil_setup		903551	0					
ANR	904617	ArgumentList	core -> anal -> esil		903551	1					
ANR	904618	Argument	core -> anal -> esil		903551	0					
ANR	904619	PtrMemberAccess	core -> anal -> esil		903551	0					
ANR	904620	PtrMemberAccess	core -> anal		903551	0					
ANR	904621	Identifier	core		903551	0					
ANR	904622	Identifier	anal		903551	1					
ANR	904623	Identifier	esil		903551	1					
ANR	904624	Argument	core -> anal		903551	1					
ANR	904625	PtrMemberAccess	core -> anal		903551	0					
ANR	904626	Identifier	core		903551	0					
ANR	904627	Identifier	anal		903551	1					
ANR	904628	Argument	romem		903551	2					
ANR	904629	Identifier	romem		903551	0					
ANR	904630	Argument	stats		903551	3					
ANR	904631	Identifier	stats		903551	0					
ANR	904632	Argument	nonull		903551	4					
ANR	904633	Identifier	nonull		903551	0					
ANR	904634	SwitchStatement	switch ( input [ 2 ] )		903551	42					
ANR	904635	Condition	input [ 2 ]	4697:11:133793:133800	903551	0	True				
ANR	904636	ArrayIndexing	input [ 2 ]		903551	0					
ANR	904637	Identifier	input		903551	0					
ANR	904638	PrimaryExpression	2		903551	1					
ANR	904639	CompoundStatement		161:21:4861:4861	903551	1					
ANR	904640	Label	case 0 :	4698:3:133808:133814	903551	0	True				
ANR	904641	ExpressionStatement	r_anal_esil_trace_list ( core -> anal -> esil )	4699:4:133829:133870	903551	1	True				
ANR	904642	CallExpression	r_anal_esil_trace_list ( core -> anal -> esil )		903551	0					
ANR	904643	Callee	r_anal_esil_trace_list		903551	0					
ANR	904644	Identifier	r_anal_esil_trace_list		903551	0					
ANR	904645	ArgumentList	core -> anal -> esil		903551	1					
ANR	904646	Argument	core -> anal -> esil		903551	0					
ANR	904647	PtrMemberAccess	core -> anal -> esil		903551	0					
ANR	904648	PtrMemberAccess	core -> anal		903551	0					
ANR	904649	Identifier	core		903551	0					
ANR	904650	Identifier	anal		903551	1					
ANR	904651	Identifier	esil		903551	1					
ANR	904652	BreakStatement	break ;	4700:4:133876:133881	903551	2	True				
ANR	904653	Label	case 'i' :	4701:3:133886:133894	903551	3	True				
ANR	904654	CompoundStatement		170:4:5070:5132	903551	4					
ANR	904655	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , input + 3 ) ;"	4702:4:133912:133957	903551	0	True				
ANR	904656	IdentifierDecl	"addr = r_num_math ( core -> num , input + 3 )"		903551	0					
ANR	904657	IdentifierDeclType	ut64		903551	0					
ANR	904658	Identifier	addr		903551	1					
ANR	904659	AssignmentExpression	"addr = r_num_math ( core -> num , input + 3 )"		903551	2		=			
ANR	904660	Identifier	addr		903551	0					
ANR	904661	CallExpression	"r_num_math ( core -> num , input + 3 )"		903551	1					
ANR	904662	Callee	r_num_math		903551	0					
ANR	904663	Identifier	r_num_math		903551	0					
ANR	904664	ArgumentList	core -> num		903551	1					
ANR	904665	Argument	core -> num		903551	0					
ANR	904666	PtrMemberAccess	core -> num		903551	0					
ANR	904667	Identifier	core		903551	0					
ANR	904668	Identifier	num		903551	1					
ANR	904669	Argument	input + 3		903551	1					
ANR	904670	AdditiveExpression	input + 3		903551	0		+			
ANR	904671	Identifier	input		903551	0					
ANR	904672	PrimaryExpression	3		903551	1					
ANR	904673	IfStatement	if ( ! addr )		903551	1					
ANR	904674	Condition	! addr	4703:8:133967:133971	903551	0	True				
ANR	904675	UnaryOperationExpression	! addr		903551	0					
ANR	904676	UnaryOperator	!		903551	0					
ANR	904677	Identifier	addr		903551	1					
ANR	904678	CompoundStatement		167:15:5032:5032	903551	1					
ANR	904679	ExpressionStatement	addr = core -> offset	4704:5:133981:134000	903551	0	True				
ANR	904680	AssignmentExpression	addr = core -> offset		903551	0		=			
ANR	904681	Identifier	addr		903551	0					
ANR	904682	PtrMemberAccess	core -> offset		903551	1					
ANR	904683	Identifier	core		903551	0					
ANR	904684	Identifier	offset		903551	1					
ANR	904685	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_ESIL ) ;"	4706:4:134012:134074	903551	2	True				
ANR	904686	IdentifierDecl	"* op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_ESIL )"		903551	0					
ANR	904687	IdentifierDeclType	RAnalOp *		903551	0					
ANR	904688	Identifier	op		903551	1					
ANR	904689	AssignmentExpression	"* op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_ESIL )"		903551	2		=			
ANR	904690	Identifier	op		903551	0					
ANR	904691	CallExpression	"r_core_anal_op ( core , addr , R_ANAL_OP_MASK_ESIL )"		903551	1					
ANR	904692	Callee	r_core_anal_op		903551	0					
ANR	904693	Identifier	r_core_anal_op		903551	0					
ANR	904694	ArgumentList	core		903551	1					
ANR	904695	Argument	core		903551	0					
ANR	904696	Identifier	core		903551	0					
ANR	904697	Argument	addr		903551	1					
ANR	904698	Identifier	addr		903551	0					
ANR	904699	Argument	R_ANAL_OP_MASK_ESIL		903551	2					
ANR	904700	Identifier	R_ANAL_OP_MASK_ESIL		903551	0					
ANR	904701	IfStatement	if ( op )		903551	3					
ANR	904702	Condition	op	4707:8:134084:134085	903551	0	True				
ANR	904703	Identifier	op		903551	0					
ANR	904704	CompoundStatement		171:12:5146:5146	903551	1					
ANR	904705	ExpressionStatement	"r_anal_esil_trace ( core -> anal -> esil , op )"	4708:5:134095:134135	903551	0	True				
ANR	904706	CallExpression	"r_anal_esil_trace ( core -> anal -> esil , op )"		903551	0					
ANR	904707	Callee	r_anal_esil_trace		903551	0					
ANR	904708	Identifier	r_anal_esil_trace		903551	0					
ANR	904709	ArgumentList	core -> anal -> esil		903551	1					
ANR	904710	Argument	core -> anal -> esil		903551	0					
ANR	904711	PtrMemberAccess	core -> anal -> esil		903551	0					
ANR	904712	PtrMemberAccess	core -> anal		903551	0					
ANR	904713	Identifier	core		903551	0					
ANR	904714	Identifier	anal		903551	1					
ANR	904715	Identifier	esil		903551	1					
ANR	904716	Argument	op		903551	1					
ANR	904717	Identifier	op		903551	0					
ANR	904718	ExpressionStatement	r_anal_op_free ( op )	4710:4:134147:134166	903551	4	True				
ANR	904719	CallExpression	r_anal_op_free ( op )		903551	0					
ANR	904720	Callee	r_anal_op_free		903551	0					
ANR	904721	Identifier	r_anal_op_free		903551	0					
ANR	904722	ArgumentList	op		903551	1					
ANR	904723	Argument	op		903551	0					
ANR	904724	Identifier	op		903551	0					
ANR	904725	BreakStatement	break ;	4711:5:134173:134178	903551	5	True				
ANR	904726	Label	case '-' :	4712:3:134183:134191	903551	6	True				
ANR	904727	IfStatement	"if ( ! strcmp ( input + 3 , ""*"" ) )"		903551	7					
ANR	904728	Condition	"! strcmp ( input + 3 , ""*"" )"	4713:8:134211:134234	903551	0	True				
ANR	904729	UnaryOperationExpression	"! strcmp ( input + 3 , ""*"" )"		903551	0					
ANR	904730	UnaryOperator	!		903551	0					
ANR	904731	CallExpression	"strcmp ( input + 3 , ""*"" )"		903551	1					
ANR	904732	Callee	strcmp		903551	0					
ANR	904733	Identifier	strcmp		903551	0					
ANR	904734	ArgumentList	input + 3		903551	1					
ANR	904735	Argument	input + 3		903551	0					
ANR	904736	AdditiveExpression	input + 3		903551	0		+			
ANR	904737	Identifier	input		903551	0					
ANR	904738	PrimaryExpression	3		903551	1					
ANR	904739	Argument	"""*"""		903551	1					
ANR	904740	PrimaryExpression	"""*"""		903551	0					
ANR	904741	CompoundStatement		177:34:5295:5295	903551	1					
ANR	904742	IfStatement	if ( core -> anal -> esil )		903551	0					
ANR	904743	Condition	core -> anal -> esil	4714:9:134248:134263	903551	0	True				
ANR	904744	PtrMemberAccess	core -> anal -> esil		903551	0					
ANR	904745	PtrMemberAccess	core -> anal		903551	0					
ANR	904746	Identifier	core		903551	0					
ANR	904747	Identifier	anal		903551	1					
ANR	904748	Identifier	esil		903551	1					
ANR	904749	CompoundStatement		178:27:5324:5324	903551	1					
ANR	904750	ExpressionStatement	sdb_free ( core -> anal -> esil -> db_trace )	4715:6:134274:134311	903551	0	True				
ANR	904751	CallExpression	sdb_free ( core -> anal -> esil -> db_trace )		903551	0					
ANR	904752	Callee	sdb_free		903551	0					
ANR	904753	Identifier	sdb_free		903551	0					
ANR	904754	ArgumentList	core -> anal -> esil -> db_trace		903551	1					
ANR	904755	Argument	core -> anal -> esil -> db_trace		903551	0					
ANR	904756	PtrMemberAccess	core -> anal -> esil -> db_trace		903551	0					
ANR	904757	PtrMemberAccess	core -> anal -> esil		903551	0					
ANR	904758	PtrMemberAccess	core -> anal		903551	0					
ANR	904759	Identifier	core		903551	0					
ANR	904760	Identifier	anal		903551	1					
ANR	904761	Identifier	esil		903551	1					
ANR	904762	Identifier	db_trace		903551	1					
ANR	904763	ExpressionStatement	core -> anal -> esil -> db_trace = sdb_new0 ( )	4716:6:134319:134359	903551	1	True				
ANR	904764	AssignmentExpression	core -> anal -> esil -> db_trace = sdb_new0 ( )		903551	0		=			
ANR	904765	PtrMemberAccess	core -> anal -> esil -> db_trace		903551	0					
ANR	904766	PtrMemberAccess	core -> anal -> esil		903551	0					
ANR	904767	PtrMemberAccess	core -> anal		903551	0					
ANR	904768	Identifier	core		903551	0					
ANR	904769	Identifier	anal		903551	1					
ANR	904770	Identifier	esil		903551	1					
ANR	904771	Identifier	db_trace		903551	1					
ANR	904772	CallExpression	sdb_new0 ( )		903551	1					
ANR	904773	Callee	sdb_new0		903551	0					
ANR	904774	Identifier	sdb_new0		903551	0					
ANR	904775	ArgumentList			903551	1					
ANR	904776	ElseStatement	else		903551	0					
ANR	904777	CompoundStatement		182:11:5437:5437	903551	0					
ANR	904778	ExpressionStatement	"eprintf ( ""TODO: dte- cannot delete specific logs. Use dte-*\\n"" )"	4719:5:134386:134449	903551	0	True				
ANR	904779	CallExpression	"eprintf ( ""TODO: dte- cannot delete specific logs. Use dte-*\\n"" )"		903551	0					
ANR	904780	Callee	eprintf		903551	0					
ANR	904781	Identifier	eprintf		903551	0					
ANR	904782	ArgumentList	"""TODO: dte- cannot delete specific logs. Use dte-*\\n"""		903551	1					
ANR	904783	Argument	"""TODO: dte- cannot delete specific logs. Use dte-*\\n"""		903551	0					
ANR	904784	PrimaryExpression	"""TODO: dte- cannot delete specific logs. Use dte-*\\n"""		903551	0					
ANR	904785	BreakStatement	break ;	4721:4:134461:134466	903551	8	True				
ANR	904786	Label	case ' ' :	4722:3:134471:134479	903551	9	True				
ANR	904787	CompoundStatement		187:4:5555:5581	903551	10					
ANR	904788	IdentifierDeclStatement	int idx = atoi ( input + 3 ) ;	4723:4:134497:134523	903551	0	True				
ANR	904789	IdentifierDecl	idx = atoi ( input + 3 )		903551	0					
ANR	904790	IdentifierDeclType	int		903551	0					
ANR	904791	Identifier	idx		903551	1					
ANR	904792	AssignmentExpression	idx = atoi ( input + 3 )		903551	2		=			
ANR	904793	Identifier	idx		903551	0					
ANR	904794	CallExpression	atoi ( input + 3 )		903551	1					
ANR	904795	Callee	atoi		903551	0					
ANR	904796	Identifier	atoi		903551	0					
ANR	904797	ArgumentList	input + 3		903551	1					
ANR	904798	Argument	input + 3		903551	0					
ANR	904799	AdditiveExpression	input + 3		903551	0		+			
ANR	904800	Identifier	input		903551	0					
ANR	904801	PrimaryExpression	3		903551	1					
ANR	904802	ExpressionStatement	"r_anal_esil_trace_show ( core -> anal -> esil , idx )"	4724:4:134529:134581	903551	1	True				
ANR	904803	CallExpression	"r_anal_esil_trace_show ( core -> anal -> esil , idx )"		903551	0					
ANR	904804	Callee	r_anal_esil_trace_show		903551	0					
ANR	904805	Identifier	r_anal_esil_trace_show		903551	0					
ANR	904806	ArgumentList	core -> anal -> esil		903551	1					
ANR	904807	Argument	core -> anal -> esil		903551	0					
ANR	904808	PtrMemberAccess	core -> anal -> esil		903551	0					
ANR	904809	PtrMemberAccess	core -> anal		903551	0					
ANR	904810	Identifier	core		903551	0					
ANR	904811	Identifier	anal		903551	1					
ANR	904812	Identifier	esil		903551	1					
ANR	904813	Argument	idx		903551	1					
ANR	904814	Identifier	idx		903551	0					
ANR	904815	BreakStatement	break ;	4726:5:134588:134593	903551	11	True				
ANR	904816	Label	case 'k' :	4727:3:134598:134606	903551	12	True				
ANR	904817	IfStatement	if ( input [ 3 ] == ' ' )		903551	13					
ANR	904818	Condition	input [ 3 ] == ' '	4728:8:134626:134640	903551	0	True				
ANR	904819	EqualityExpression	input [ 3 ] == ' '		903551	0		==			
ANR	904820	ArrayIndexing	input [ 3 ]		903551	0					
ANR	904821	Identifier	input		903551	0					
ANR	904822	PrimaryExpression	3		903551	1					
ANR	904823	PrimaryExpression	' '		903551	1					
ANR	904824	CompoundStatement		193:5:5708:5784	903551	1					
ANR	904825	IdentifierDeclStatement	"char * s = sdb_querys ( core -> anal -> esil -> db_trace , NULL , 0 , input + 4 ) ;"	4729:5:134650:134726	903551	0	True				
ANR	904826	IdentifierDecl	"* s = sdb_querys ( core -> anal -> esil -> db_trace , NULL , 0 , input + 4 )"		903551	0					
ANR	904827	IdentifierDeclType	char *		903551	0					
ANR	904828	Identifier	s		903551	1					
ANR	904829	AssignmentExpression	"* s = sdb_querys ( core -> anal -> esil -> db_trace , NULL , 0 , input + 4 )"		903551	2		=			
ANR	904830	Identifier	s		903551	0					
ANR	904831	CallExpression	"sdb_querys ( core -> anal -> esil -> db_trace , NULL , 0 , input + 4 )"		903551	1					
ANR	904832	Callee	sdb_querys		903551	0					
ANR	904833	Identifier	sdb_querys		903551	0					
ANR	904834	ArgumentList	core -> anal -> esil -> db_trace		903551	1					
ANR	904835	Argument	core -> anal -> esil -> db_trace		903551	0					
ANR	904836	PtrMemberAccess	core -> anal -> esil -> db_trace		903551	0					
ANR	904837	PtrMemberAccess	core -> anal -> esil		903551	0					
ANR	904838	PtrMemberAccess	core -> anal		903551	0					
ANR	904839	Identifier	core		903551	0					
ANR	904840	Identifier	anal		903551	1					
ANR	904841	Identifier	esil		903551	1					
ANR	904842	Identifier	db_trace		903551	1					
ANR	904843	Argument	NULL		903551	1					
ANR	904844	Identifier	NULL		903551	0					
ANR	904845	Argument	0		903551	2					
ANR	904846	PrimaryExpression	0		903551	0					
ANR	904847	Argument	input + 4		903551	3					
ANR	904848	AdditiveExpression	input + 4		903551	0		+			
ANR	904849	Identifier	input		903551	0					
ANR	904850	PrimaryExpression	4		903551	1					
ANR	904851	ExpressionStatement	r_cons_println ( s )	4731:5:134733:134751	903551	1	True				
ANR	904852	CallExpression	r_cons_println ( s )		903551	0					
ANR	904853	Callee	r_cons_println		903551	0					
ANR	904854	Identifier	r_cons_println		903551	0					
ANR	904855	ArgumentList	s		903551	1					
ANR	904856	Argument	s		903551	0					
ANR	904857	Identifier	s		903551	0					
ANR	904858	ExpressionStatement	free ( s )	4732:5:134758:134766	903551	2	True				
ANR	904859	CallExpression	free ( s )		903551	0					
ANR	904860	Callee	free		903551	0					
ANR	904861	Identifier	free		903551	0					
ANR	904862	ArgumentList	s		903551	1					
ANR	904863	Argument	s		903551	0					
ANR	904864	Identifier	s		903551	0					
ANR	904865	ElseStatement	else		903551	0					
ANR	904866	CompoundStatement		197:11:5837:5837	903551	0					
ANR	904867	ExpressionStatement	"eprintf ( ""Usage: dtek [query]\\n"" )"	4734:5:134786:134819	903551	0	True				
ANR	904868	CallExpression	"eprintf ( ""Usage: dtek [query]\\n"" )"		903551	0					
ANR	904869	Callee	eprintf		903551	0					
ANR	904870	Identifier	eprintf		903551	0					
ANR	904871	ArgumentList	"""Usage: dtek [query]\\n"""		903551	1					
ANR	904872	Argument	"""Usage: dtek [query]\\n"""		903551	0					
ANR	904873	PrimaryExpression	"""Usage: dtek [query]\\n"""		903551	0					
ANR	904874	BreakStatement	break ;	4736:4:134831:134836	903551	14	True				
ANR	904875	Label	default :	4737:3:134841:134848	903551	15	True				
ANR	904876	Identifier	default		903551	0					
ANR	904877	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dte )"	4738:4:134854:134890	903551	16	True				
ANR	904878	CallExpression	"r_core_cmd_help ( core , help_msg_dte )"		903551	0					
ANR	904879	Callee	r_core_cmd_help		903551	0					
ANR	904880	Identifier	r_core_cmd_help		903551	0					
ANR	904881	ArgumentList	core		903551	1					
ANR	904882	Argument	core		903551	0					
ANR	904883	Identifier	core		903551	0					
ANR	904884	Argument	help_msg_dte		903551	1					
ANR	904885	Identifier	help_msg_dte		903551	0					
ANR	904886	BreakStatement	break ;	4740:3:134900:134905	903551	43	True				
ANR	904887	Label	case 's' :	4741:2:134909:134917	903551	44	True				
ANR	904888	SwitchStatement	switch ( input [ 2 ] )		903551	45					
ANR	904889	Condition	input [ 2 ]	4742:11:134939:134946	903551	0	True				
ANR	904890	ArrayIndexing	input [ 2 ]		903551	0					
ANR	904891	Identifier	input		903551	0					
ANR	904892	PrimaryExpression	2		903551	1					
ANR	904893	CompoundStatement		206:21:6007:6007	903551	1					
ANR	904894	Label	case 0 :	4743:3:134954:134960	903551	0	True				
ANR	904895	ExpressionStatement	r_debug_session_list ( core -> dbg )	4744:4:134975:135007	903551	1	True				
ANR	904896	CallExpression	r_debug_session_list ( core -> dbg )		903551	0					
ANR	904897	Callee	r_debug_session_list		903551	0					
ANR	904898	Identifier	r_debug_session_list		903551	0					
ANR	904899	ArgumentList	core -> dbg		903551	1					
ANR	904900	Argument	core -> dbg		903551	0					
ANR	904901	PtrMemberAccess	core -> dbg		903551	0					
ANR	904902	Identifier	core		903551	0					
ANR	904903	Identifier	dbg		903551	1					
ANR	904904	BreakStatement	break ;	4745:4:135013:135018	903551	2	True				
ANR	904905	Label	case '+' :	4746:3:135023:135031	903551	3	True				
ANR	904906	ExpressionStatement	"r_debug_session_add ( core -> dbg , NULL )"	4747:4:135047:135084	903551	4	True				
ANR	904907	CallExpression	"r_debug_session_add ( core -> dbg , NULL )"		903551	0					
ANR	904908	Callee	r_debug_session_add		903551	0					
ANR	904909	Identifier	r_debug_session_add		903551	0					
ANR	904910	ArgumentList	core -> dbg		903551	1					
ANR	904911	Argument	core -> dbg		903551	0					
ANR	904912	PtrMemberAccess	core -> dbg		903551	0					
ANR	904913	Identifier	core		903551	0					
ANR	904914	Identifier	dbg		903551	1					
ANR	904915	Argument	NULL		903551	1					
ANR	904916	Identifier	NULL		903551	0					
ANR	904917	BreakStatement	break ;	4748:4:135090:135095	903551	5	True				
ANR	904918	Label	case '-' :	4749:3:135100:135108	903551	6	True				
ANR	904919	IfStatement	if ( input [ 3 ] == ' ' )		903551	7					
ANR	904920	Condition	input [ 3 ] == ' '	4750:8:135128:135142	903551	0	True				
ANR	904921	EqualityExpression	input [ 3 ] == ' '		903551	0		==			
ANR	904922	ArrayIndexing	input [ 3 ]		903551	0					
ANR	904923	Identifier	input		903551	0					
ANR	904924	PrimaryExpression	3		903551	1					
ANR	904925	PrimaryExpression	' '		903551	1					
ANR	904926	CompoundStatement		214:25:6203:6203	903551	1					
ANR	904927	ExpressionStatement	"r_debug_session_delete ( core -> dbg , r_num_math ( core -> num , input + 3 ) )"	4751:5:135152:135221	903551	0	True				
ANR	904928	CallExpression	"r_debug_session_delete ( core -> dbg , r_num_math ( core -> num , input + 3 ) )"		903551	0					
ANR	904929	Callee	r_debug_session_delete		903551	0					
ANR	904930	Identifier	r_debug_session_delete		903551	0					
ANR	904931	ArgumentList	core -> dbg		903551	1					
ANR	904932	Argument	core -> dbg		903551	0					
ANR	904933	PtrMemberAccess	core -> dbg		903551	0					
ANR	904934	Identifier	core		903551	0					
ANR	904935	Identifier	dbg		903551	1					
ANR	904936	Argument	"r_num_math ( core -> num , input + 3 )"		903551	1					
ANR	904937	CallExpression	"r_num_math ( core -> num , input + 3 )"		903551	0					
ANR	904938	Callee	r_num_math		903551	0					
ANR	904939	Identifier	r_num_math		903551	0					
ANR	904940	ArgumentList	core -> num		903551	1					
ANR	904941	Argument	core -> num		903551	0					
ANR	904942	PtrMemberAccess	core -> num		903551	0					
ANR	904943	Identifier	core		903551	0					
ANR	904944	Identifier	num		903551	1					
ANR	904945	Argument	input + 3		903551	1					
ANR	904946	AdditiveExpression	input + 3		903551	0		+			
ANR	904947	Identifier	input		903551	0					
ANR	904948	PrimaryExpression	3		903551	1					
ANR	904949	ElseStatement	else		903551	0					
ANR	904950	CompoundStatement		216:11:6292:6292	903551	0					
ANR	904951	ExpressionStatement	"r_cons_println ( ""Usage: dts- [id] - Delete trace session"" )"	4753:5:135241:135299	903551	0	True				
ANR	904952	CallExpression	"r_cons_println ( ""Usage: dts- [id] - Delete trace session"" )"		903551	0					
ANR	904953	Callee	r_cons_println		903551	0					
ANR	904954	Identifier	r_cons_println		903551	0					
ANR	904955	ArgumentList	"""Usage: dts- [id] - Delete trace session"""		903551	1					
ANR	904956	Argument	"""Usage: dts- [id] - Delete trace session"""		903551	0					
ANR	904957	PrimaryExpression	"""Usage: dts- [id] - Delete trace session"""		903551	0					
ANR	904958	BreakStatement	break ;	4755:4:135311:135316	903551	8	True				
ANR	904959	Label	case 't' :	4756:3:135321:135329	903551	9	True				
ANR	904960	IfStatement	if ( input [ 3 ] == ' ' )		903551	10					
ANR	904961	Condition	input [ 3 ] == ' '	4757:8:135349:135363	903551	0	True				
ANR	904962	EqualityExpression	input [ 3 ] == ' '		903551	0		==			
ANR	904963	ArrayIndexing	input [ 3 ]		903551	0					
ANR	904964	Identifier	input		903551	0					
ANR	904965	PrimaryExpression	3		903551	1					
ANR	904966	PrimaryExpression	' '		903551	1					
ANR	904967	CompoundStatement		221:25:6424:6424	903551	1					
ANR	904968	ExpressionStatement	"r_debug_session_save ( core -> dbg , input + 4 )"	4758:5:135373:135416	903551	0	True				
ANR	904969	CallExpression	"r_debug_session_save ( core -> dbg , input + 4 )"		903551	0					
ANR	904970	Callee	r_debug_session_save		903551	0					
ANR	904971	Identifier	r_debug_session_save		903551	0					
ANR	904972	ArgumentList	core -> dbg		903551	1					
ANR	904973	Argument	core -> dbg		903551	0					
ANR	904974	PtrMemberAccess	core -> dbg		903551	0					
ANR	904975	Identifier	core		903551	0					
ANR	904976	Identifier	dbg		903551	1					
ANR	904977	Argument	input + 4		903551	1					
ANR	904978	AdditiveExpression	input + 4		903551	0		+			
ANR	904979	Identifier	input		903551	0					
ANR	904980	PrimaryExpression	4		903551	1					
ANR	904981	ElseStatement	else		903551	0					
ANR	904982	CompoundStatement		223:11:6487:6487	903551	0					
ANR	904983	ExpressionStatement	"r_cons_println ( ""Usage: dtst [file] - save trace sessions to disk"" )"	4760:5:135436:135503	903551	0	True				
ANR	904984	CallExpression	"r_cons_println ( ""Usage: dtst [file] - save trace sessions to disk"" )"		903551	0					
ANR	904985	Callee	r_cons_println		903551	0					
ANR	904986	Identifier	r_cons_println		903551	0					
ANR	904987	ArgumentList	"""Usage: dtst [file] - save trace sessions to disk"""		903551	1					
ANR	904988	Argument	"""Usage: dtst [file] - save trace sessions to disk"""		903551	0					
ANR	904989	PrimaryExpression	"""Usage: dtst [file] - save trace sessions to disk"""		903551	0					
ANR	904990	BreakStatement	break ;	4762:4:135515:135520	903551	11	True				
ANR	904991	Label	case 'f' :	4763:3:135525:135533	903551	12	True				
ANR	904992	IfStatement	if ( input [ 3 ] == ' ' )		903551	13					
ANR	904993	Condition	input [ 3 ] == ' '	4764:8:135553:135567	903551	0	True				
ANR	904994	EqualityExpression	input [ 3 ] == ' '		903551	0		==			
ANR	904995	ArrayIndexing	input [ 3 ]		903551	0					
ANR	904996	Identifier	input		903551	0					
ANR	904997	PrimaryExpression	3		903551	1					
ANR	904998	PrimaryExpression	' '		903551	1					
ANR	904999	CompoundStatement		228:25:6628:6628	903551	1					
ANR	905000	ExpressionStatement	"r_debug_session_restore ( core -> dbg , input + 4 )"	4765:5:135577:135623	903551	0	True				
ANR	905001	CallExpression	"r_debug_session_restore ( core -> dbg , input + 4 )"		903551	0					
ANR	905002	Callee	r_debug_session_restore		903551	0					
ANR	905003	Identifier	r_debug_session_restore		903551	0					
ANR	905004	ArgumentList	core -> dbg		903551	1					
ANR	905005	Argument	core -> dbg		903551	0					
ANR	905006	PtrMemberAccess	core -> dbg		903551	0					
ANR	905007	Identifier	core		903551	0					
ANR	905008	Identifier	dbg		903551	1					
ANR	905009	Argument	input + 4		903551	1					
ANR	905010	AdditiveExpression	input + 4		903551	0		+			
ANR	905011	Identifier	input		903551	0					
ANR	905012	PrimaryExpression	4		903551	1					
ANR	905013	ElseStatement	else		903551	0					
ANR	905014	CompoundStatement		230:11:6694:6694	903551	0					
ANR	905015	ExpressionStatement	"r_cons_println ( ""Usage: dtsf [file] - read trace sessions from disk"" )"	4767:5:135643:135712	903551	0	True				
ANR	905016	CallExpression	"r_cons_println ( ""Usage: dtsf [file] - read trace sessions from disk"" )"		903551	0					
ANR	905017	Callee	r_cons_println		903551	0					
ANR	905018	Identifier	r_cons_println		903551	0					
ANR	905019	ArgumentList	"""Usage: dtsf [file] - read trace sessions from disk"""		903551	1					
ANR	905020	Argument	"""Usage: dtsf [file] - read trace sessions from disk"""		903551	0					
ANR	905021	PrimaryExpression	"""Usage: dtsf [file] - read trace sessions from disk"""		903551	0					
ANR	905022	BreakStatement	break ;	4769:4:135724:135729	903551	14	True				
ANR	905023	Label	case 'C' :	4770:3:135734:135742	903551	15	True				
ANR	905024	IfStatement	if ( input [ 3 ] == ' ' )		903551	16					
ANR	905025	Condition	input [ 3 ] == ' '	4771:8:135762:135776	903551	0	True				
ANR	905026	EqualityExpression	input [ 3 ] == ' '		903551	0		==			
ANR	905027	ArrayIndexing	input [ 3 ]		903551	0					
ANR	905028	Identifier	input		903551	0					
ANR	905029	PrimaryExpression	3		903551	1					
ANR	905030	PrimaryExpression	' '		903551	1					
ANR	905031	CompoundStatement		235:25:6837:6837	903551	1					
ANR	905032	ExpressionStatement	"r_debug_session_comment ( core -> dbg , atoi ( input + 3 ) , strchr ( input + 4 , ' ' ) )"	4772:5:135786:135864	903551	0	True				
ANR	905033	CallExpression	"r_debug_session_comment ( core -> dbg , atoi ( input + 3 ) , strchr ( input + 4 , ' ' ) )"		903551	0					
ANR	905034	Callee	r_debug_session_comment		903551	0					
ANR	905035	Identifier	r_debug_session_comment		903551	0					
ANR	905036	ArgumentList	core -> dbg		903551	1					
ANR	905037	Argument	core -> dbg		903551	0					
ANR	905038	PtrMemberAccess	core -> dbg		903551	0					
ANR	905039	Identifier	core		903551	0					
ANR	905040	Identifier	dbg		903551	1					
ANR	905041	Argument	atoi ( input + 3 )		903551	1					
ANR	905042	CallExpression	atoi ( input + 3 )		903551	0					
ANR	905043	Callee	atoi		903551	0					
ANR	905044	Identifier	atoi		903551	0					
ANR	905045	ArgumentList	input + 3		903551	1					
ANR	905046	Argument	input + 3		903551	0					
ANR	905047	AdditiveExpression	input + 3		903551	0		+			
ANR	905048	Identifier	input		903551	0					
ANR	905049	PrimaryExpression	3		903551	1					
ANR	905050	Argument	"strchr ( input + 4 , ' ' )"		903551	2					
ANR	905051	CallExpression	"strchr ( input + 4 , ' ' )"		903551	0					
ANR	905052	Callee	strchr		903551	0					
ANR	905053	Identifier	strchr		903551	0					
ANR	905054	ArgumentList	input + 4		903551	1					
ANR	905055	Argument	input + 4		903551	0					
ANR	905056	AdditiveExpression	input + 4		903551	0		+			
ANR	905057	Identifier	input		903551	0					
ANR	905058	PrimaryExpression	4		903551	1					
ANR	905059	Argument	' '		903551	1					
ANR	905060	PrimaryExpression	' '		903551	0					
ANR	905061	ElseStatement	else		903551	0					
ANR	905062	CompoundStatement		237:11:6935:6935	903551	0					
ANR	905063	ExpressionStatement	"r_cons_println ( ""Usage: dtsC id comment - add comment for given trace session"" )"	4774:5:135884:135963	903551	0	True				
ANR	905064	CallExpression	"r_cons_println ( ""Usage: dtsC id comment - add comment for given trace session"" )"		903551	0					
ANR	905065	Callee	r_cons_println		903551	0					
ANR	905066	Identifier	r_cons_println		903551	0					
ANR	905067	ArgumentList	"""Usage: dtsC id comment - add comment for given trace session"""		903551	1					
ANR	905068	Argument	"""Usage: dtsC id comment - add comment for given trace session"""		903551	0					
ANR	905069	PrimaryExpression	"""Usage: dtsC id comment - add comment for given trace session"""		903551	0					
ANR	905070	BreakStatement	break ;	4776:4:135975:135980	903551	17	True				
ANR	905071	Label	case 'A' :	4777:3:135985:135993	903551	18	True				
ANR	905072	ExpressionStatement	"r_debug_session_set_idx ( core -> dbg , atoi ( input + 4 ) )"	4778:4:136063:136116	903551	19	True				
ANR	905073	CallExpression	"r_debug_session_set_idx ( core -> dbg , atoi ( input + 4 ) )"		903551	0					
ANR	905074	Callee	r_debug_session_set_idx		903551	0					
ANR	905075	Identifier	r_debug_session_set_idx		903551	0					
ANR	905076	ArgumentList	core -> dbg		903551	1					
ANR	905077	Argument	core -> dbg		903551	0					
ANR	905078	PtrMemberAccess	core -> dbg		903551	0					
ANR	905079	Identifier	core		903551	0					
ANR	905080	Identifier	dbg		903551	1					
ANR	905081	Argument	atoi ( input + 4 )		903551	1					
ANR	905082	CallExpression	atoi ( input + 4 )		903551	0					
ANR	905083	Callee	atoi		903551	0					
ANR	905084	Identifier	atoi		903551	0					
ANR	905085	ArgumentList	input + 4		903551	1					
ANR	905086	Argument	input + 4		903551	0					
ANR	905087	AdditiveExpression	input + 4		903551	0		+			
ANR	905088	Identifier	input		903551	0					
ANR	905089	PrimaryExpression	4		903551	1					
ANR	905090	BreakStatement	break ;	4779:4:136122:136127	903551	20	True				
ANR	905091	Label	default :	4780:3:136132:136139	903551	21	True				
ANR	905092	Identifier	default		903551	0					
ANR	905093	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dts )"	4781:4:136145:136181	903551	22	True				
ANR	905094	CallExpression	"r_core_cmd_help ( core , help_msg_dts )"		903551	0					
ANR	905095	Callee	r_core_cmd_help		903551	0					
ANR	905096	Identifier	r_core_cmd_help		903551	0					
ANR	905097	ArgumentList	core		903551	1					
ANR	905098	Argument	core		903551	0					
ANR	905099	Identifier	core		903551	0					
ANR	905100	Argument	help_msg_dts		903551	1					
ANR	905101	Identifier	help_msg_dts		903551	0					
ANR	905102	BreakStatement	break ;	4783:3:136191:136196	903551	46	True				
ANR	905103	Label	case '?' :	4784:2:136200:136208	903551	47	True				
ANR	905104	Label	default :	4785:2:136212:136219	903551	48	True				
ANR	905105	Identifier	default		903551	0					
ANR	905106	CompoundStatement		250:3:7282:7282	903551	49					
ANR	905107	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dt )"	4787:4:136230:136265	903551	0	True				
ANR	905108	CallExpression	"r_core_cmd_help ( core , help_msg_dt )"		903551	0					
ANR	905109	Callee	r_core_cmd_help		903551	0					
ANR	905110	Identifier	r_core_cmd_help		903551	0					
ANR	905111	ArgumentList	core		903551	1					
ANR	905112	Argument	core		903551	0					
ANR	905113	Identifier	core		903551	0					
ANR	905114	Argument	help_msg_dt		903551	1					
ANR	905115	Identifier	help_msg_dt		903551	0					
ANR	905116	ExpressionStatement	"r_cons_printf ( ""Current Tag: %d\\n"" , core -> dbg -> trace -> tag )"	4788:4:136271:136329	903551	1	True				
ANR	905117	CallExpression	"r_cons_printf ( ""Current Tag: %d\\n"" , core -> dbg -> trace -> tag )"		903551	0					
ANR	905118	Callee	r_cons_printf		903551	0					
ANR	905119	Identifier	r_cons_printf		903551	0					
ANR	905120	ArgumentList	"""Current Tag: %d\\n"""		903551	1					
ANR	905121	Argument	"""Current Tag: %d\\n"""		903551	0					
ANR	905122	PrimaryExpression	"""Current Tag: %d\\n"""		903551	0					
ANR	905123	Argument	core -> dbg -> trace -> tag		903551	1					
ANR	905124	PtrMemberAccess	core -> dbg -> trace -> tag		903551	0					
ANR	905125	PtrMemberAccess	core -> dbg -> trace		903551	0					
ANR	905126	PtrMemberAccess	core -> dbg		903551	0					
ANR	905127	Identifier	core		903551	0					
ANR	905128	Identifier	dbg		903551	1					
ANR	905129	Identifier	trace		903551	1					
ANR	905130	Identifier	tag		903551	1					
ANR	905131	BreakStatement	break ;	4790:3:136339:136344	903551	50	True				
ANR	905132	BreakStatement	break ;	4792:2:136352:136357	903551	2	True				
ANR	905133	Label	case 'd' :	4793:1:136360:136368	903551	3	True				
ANR	905134	SwitchStatement	switch ( input [ 1 ] )		903551	4					
ANR	905135	Condition	input [ 1 ]	4794:10:136389:136396	903551	0	True				
ANR	905136	ArrayIndexing	input [ 1 ]		903551	0					
ANR	905137	Identifier	input		903551	0					
ANR	905138	PrimaryExpression	1		903551	1					
ANR	905139	CompoundStatement		258:20:7457:7457	903551	1					
ANR	905140	Label	case '\\0' :	4795:2:136403:136412	903551	0	True				
ANR	905141	ExpressionStatement	"r_debug_desc_list ( core -> dbg , 0 )"	4796:3:136426:136458	903551	1	True				
ANR	905142	CallExpression	"r_debug_desc_list ( core -> dbg , 0 )"		903551	0					
ANR	905143	Callee	r_debug_desc_list		903551	0					
ANR	905144	Identifier	r_debug_desc_list		903551	0					
ANR	905145	ArgumentList	core -> dbg		903551	1					
ANR	905146	Argument	core -> dbg		903551	0					
ANR	905147	PtrMemberAccess	core -> dbg		903551	0					
ANR	905148	Identifier	core		903551	0					
ANR	905149	Identifier	dbg		903551	1					
ANR	905150	Argument	0		903551	1					
ANR	905151	PrimaryExpression	0		903551	0					
ANR	905152	BreakStatement	break ;	4797:3:136463:136468	903551	2	True				
ANR	905153	Label	case '*' :	4798:2:136472:136480	903551	3	True				
ANR	905154	ExpressionStatement	"r_debug_desc_list ( core -> dbg , 1 )"	4799:3:136495:136527	903551	4	True				
ANR	905155	CallExpression	"r_debug_desc_list ( core -> dbg , 1 )"		903551	0					
ANR	905156	Callee	r_debug_desc_list		903551	0					
ANR	905157	Identifier	r_debug_desc_list		903551	0					
ANR	905158	ArgumentList	core -> dbg		903551	1					
ANR	905159	Argument	core -> dbg		903551	0					
ANR	905160	PtrMemberAccess	core -> dbg		903551	0					
ANR	905161	Identifier	core		903551	0					
ANR	905162	Identifier	dbg		903551	1					
ANR	905163	Argument	1		903551	1					
ANR	905164	PrimaryExpression	1		903551	0					
ANR	905165	BreakStatement	break ;	4800:3:136532:136537	903551	5	True				
ANR	905166	Label	case 's' :	4801:2:136541:136549	903551	6	True				
ANR	905167	CompoundStatement		269:4:7684:7719	903551	7					
ANR	905168	IdentifierDeclStatement	ut64 off = UT64_MAX ;	4803:4:136570:136589	903551	0	True				
ANR	905169	IdentifierDecl	off = UT64_MAX		903551	0					
ANR	905170	IdentifierDeclType	ut64		903551	0					
ANR	905171	Identifier	off		903551	1					
ANR	905172	AssignmentExpression	off = UT64_MAX		903551	2		=			
ANR	905173	Identifier	UT64_MAX		903551	0					
ANR	905174	Identifier	UT64_MAX		903551	1					
ANR	905175	IdentifierDeclStatement	int fd = atoi ( input + 2 ) ;	4804:4:136595:136620	903551	1	True				
ANR	905176	IdentifierDecl	fd = atoi ( input + 2 )		903551	0					
ANR	905177	IdentifierDeclType	int		903551	0					
ANR	905178	Identifier	fd		903551	1					
ANR	905179	AssignmentExpression	fd = atoi ( input + 2 )		903551	2		=			
ANR	905180	Identifier	fd		903551	0					
ANR	905181	CallExpression	atoi ( input + 2 )		903551	1					
ANR	905182	Callee	atoi		903551	0					
ANR	905183	Identifier	atoi		903551	0					
ANR	905184	ArgumentList	input + 2		903551	1					
ANR	905185	Argument	input + 2		903551	0					
ANR	905186	AdditiveExpression	input + 2		903551	0		+			
ANR	905187	Identifier	input		903551	0					
ANR	905188	PrimaryExpression	2		903551	1					
ANR	905189	IdentifierDeclStatement	"char * str = strchr ( input + 2 , ' ' ) ;"	4805:4:136626:136661	903551	2	True				
ANR	905190	IdentifierDecl	"* str = strchr ( input + 2 , ' ' )"		903551	0					
ANR	905191	IdentifierDeclType	char *		903551	0					
ANR	905192	Identifier	str		903551	1					
ANR	905193	AssignmentExpression	"* str = strchr ( input + 2 , ' ' )"		903551	2		=			
ANR	905194	Identifier	str		903551	0					
ANR	905195	CallExpression	"strchr ( input + 2 , ' ' )"		903551	1					
ANR	905196	Callee	strchr		903551	0					
ANR	905197	Identifier	strchr		903551	0					
ANR	905198	ArgumentList	input + 2		903551	1					
ANR	905199	Argument	input + 2		903551	0					
ANR	905200	AdditiveExpression	input + 2		903551	0		+			
ANR	905201	Identifier	input		903551	0					
ANR	905202	PrimaryExpression	2		903551	1					
ANR	905203	Argument	' '		903551	1					
ANR	905204	PrimaryExpression	' '		903551	0					
ANR	905205	IfStatement	if ( str )		903551	3					
ANR	905206	Condition	str	4806:8:136671:136673	903551	0	True				
ANR	905207	Identifier	str		903551	0					
ANR	905208	ExpressionStatement	"off = r_num_math ( core -> num , str + 1 )"	4806:13:136676:136711	903551	1	True				
ANR	905209	AssignmentExpression	"off = r_num_math ( core -> num , str + 1 )"		903551	0		=			
ANR	905210	Identifier	off		903551	0					
ANR	905211	CallExpression	"r_num_math ( core -> num , str + 1 )"		903551	1					
ANR	905212	Callee	r_num_math		903551	0					
ANR	905213	Identifier	r_num_math		903551	0					
ANR	905214	ArgumentList	core -> num		903551	1					
ANR	905215	Argument	core -> num		903551	0					
ANR	905216	PtrMemberAccess	core -> num		903551	0					
ANR	905217	Identifier	core		903551	0					
ANR	905218	Identifier	num		903551	1					
ANR	905219	Argument	str + 1		903551	1					
ANR	905220	AdditiveExpression	str + 1		903551	0		+			
ANR	905221	Identifier	str		903551	0					
ANR	905222	PrimaryExpression	1		903551	1					
ANR	905223	IfStatement	"if ( off == UT64_MAX || ! r_debug_desc_seek ( core -> dbg , fd , off ) )"		903551	4					
ANR	905224	Condition	"off == UT64_MAX || ! r_debug_desc_seek ( core -> dbg , fd , off )"	4807:8:136721:136778	903551	0	True				
ANR	905225	OrExpression	"off == UT64_MAX || ! r_debug_desc_seek ( core -> dbg , fd , off )"		903551	0		||			
ANR	905226	EqualityExpression	off == UT64_MAX		903551	0		==			
ANR	905227	Identifier	off		903551	0					
ANR	905228	Identifier	UT64_MAX		903551	1					
ANR	905229	UnaryOperationExpression	"! r_debug_desc_seek ( core -> dbg , fd , off )"		903551	1					
ANR	905230	UnaryOperator	!		903551	0					
ANR	905231	CallExpression	"r_debug_desc_seek ( core -> dbg , fd , off )"		903551	1					
ANR	905232	Callee	r_debug_desc_seek		903551	0					
ANR	905233	Identifier	r_debug_desc_seek		903551	0					
ANR	905234	ArgumentList	core -> dbg		903551	1					
ANR	905235	Argument	core -> dbg		903551	0					
ANR	905236	PtrMemberAccess	core -> dbg		903551	0					
ANR	905237	Identifier	core		903551	0					
ANR	905238	Identifier	dbg		903551	1					
ANR	905239	Argument	fd		903551	1					
ANR	905240	Identifier	fd		903551	0					
ANR	905241	Argument	off		903551	2					
ANR	905242	Identifier	off		903551	0					
ANR	905243	CompoundStatement		271:68:7839:7839	903551	1					
ANR	905244	Statement	RBuffer	4808:5:136788:136794	903551	0	True				
ANR	905245	Statement	*	4808:13:136796:136796	903551	1	True				
ANR	905246	Statement	buf	4808:14:136797:136799	903551	2	True				
ANR	905247	Statement	=	4808:18:136801:136801	903551	3	True				
ANR	905248	Statement	r_core_syscallf	4808:20:136803:136817	903551	4	True				
ANR	905249	Statement	(	4808:36:136819:136819	903551	5	True				
ANR	905250	Statement	core	4808:37:136820:136823	903551	6	True				
ANR	905251	Statement	","	4808:41:136824:136824	903551	7	True				
ANR	905252	Statement	"""lseek"""	4808:43:136826:136832	903551	8	True				
ANR	905253	Statement	","	4808:50:136833:136833	903551	9	True				
ANR	905254	Statement	"""%d, 0x%"""	4808:52:136835:136843	903551	10	True				
ANR	905255	Statement	PFMT64x	4808:61:136844:136850	903551	11	True				
ANR	905256	Statement	""", %d"""	4808:68:136851:136856	903551	12	True				
ANR	905257	Statement	","	4808:74:136857:136857	903551	13	True				
ANR	905258	Statement	fd	4808:76:136859:136860	903551	14	True				
ANR	905259	Statement	","	4808:78:136861:136861	903551	15	True				
ANR	905260	Statement	off	4808:80:136863:136865	903551	16	True				
ANR	905261	Statement	","	4808:83:136866:136866	903551	17	True				
ANR	905262	Statement	0	4808:85:136868:136868	903551	18	True				
ANR	905263	Statement	)	4808:86:136869:136869	903551	19	True				
ANR	905264	ExpressionStatement		4808:87:136870:136870	903551	20	True				
ANR	905265	ExpressionStatement	"consumeBuffer ( buf , ""dx "" , ""Cannot seek"" )"	4809:5:136877:136918	903551	21	True				
ANR	905266	CallExpression	"consumeBuffer ( buf , ""dx "" , ""Cannot seek"" )"		903551	0					
ANR	905267	Callee	consumeBuffer		903551	0					
ANR	905268	Identifier	consumeBuffer		903551	0					
ANR	905269	ArgumentList	buf		903551	1					
ANR	905270	Argument	buf		903551	0					
ANR	905271	Identifier	buf		903551	0					
ANR	905272	Argument	"""dx """		903551	1					
ANR	905273	PrimaryExpression	"""dx """		903551	0					
ANR	905274	Argument	"""Cannot seek"""		903551	2					
ANR	905275	PrimaryExpression	"""Cannot seek"""		903551	0					
ANR	905276	BreakStatement	break ;	4812:3:136934:136939	903551	8	True				
ANR	905277	Label	case 't' :	4813:2:136943:136951	903551	9	True				
ANR	905278	ExpressionStatement	"r_core_cmdf ( core , ""dd-0"" )"	4814:3:136975:137001	903551	10	True				
ANR	905279	CallExpression	"r_core_cmdf ( core , ""dd-0"" )"		903551	0					
ANR	905280	Callee	r_core_cmdf		903551	0					
ANR	905281	Identifier	r_core_cmdf		903551	0					
ANR	905282	ArgumentList	core		903551	1					
ANR	905283	Argument	core		903551	0					
ANR	905284	Identifier	core		903551	0					
ANR	905285	Argument	"""dd-0"""		903551	1					
ANR	905286	PrimaryExpression	"""dd-0"""		903551	0					
ANR	905287	BreakStatement	break ;	4815:3:137006:137011	903551	11	True				
ANR	905288	Label	case 'd' :	4816:2:137015:137023	903551	12	True				
ANR	905289	CompoundStatement		284:4:8159:8194	903551	13					
ANR	905290	IdentifierDeclStatement	ut64 newfd = UT64_MAX ;	4818:4:137043:137064	903551	0	True				
ANR	905291	IdentifierDecl	newfd = UT64_MAX		903551	0					
ANR	905292	IdentifierDeclType	ut64		903551	0					
ANR	905293	Identifier	newfd		903551	1					
ANR	905294	AssignmentExpression	newfd = UT64_MAX		903551	2		=			
ANR	905295	Identifier	UT64_MAX		903551	0					
ANR	905296	Identifier	UT64_MAX		903551	1					
ANR	905297	IdentifierDeclStatement	int fd = atoi ( input + 2 ) ;	4819:4:137070:137095	903551	1	True				
ANR	905298	IdentifierDecl	fd = atoi ( input + 2 )		903551	0					
ANR	905299	IdentifierDeclType	int		903551	0					
ANR	905300	Identifier	fd		903551	1					
ANR	905301	AssignmentExpression	fd = atoi ( input + 2 )		903551	2		=			
ANR	905302	Identifier	fd		903551	0					
ANR	905303	CallExpression	atoi ( input + 2 )		903551	1					
ANR	905304	Callee	atoi		903551	0					
ANR	905305	Identifier	atoi		903551	0					
ANR	905306	ArgumentList	input + 2		903551	1					
ANR	905307	Argument	input + 2		903551	0					
ANR	905308	AdditiveExpression	input + 2		903551	0		+			
ANR	905309	Identifier	input		903551	0					
ANR	905310	PrimaryExpression	2		903551	1					
ANR	905311	IdentifierDeclStatement	"char * str = strchr ( input + 3 , ' ' ) ;"	4820:4:137101:137136	903551	2	True				
ANR	905312	IdentifierDecl	"* str = strchr ( input + 3 , ' ' )"		903551	0					
ANR	905313	IdentifierDeclType	char *		903551	0					
ANR	905314	Identifier	str		903551	1					
ANR	905315	AssignmentExpression	"* str = strchr ( input + 3 , ' ' )"		903551	2		=			
ANR	905316	Identifier	str		903551	0					
ANR	905317	CallExpression	"strchr ( input + 3 , ' ' )"		903551	1					
ANR	905318	Callee	strchr		903551	0					
ANR	905319	Identifier	strchr		903551	0					
ANR	905320	ArgumentList	input + 3		903551	1					
ANR	905321	Argument	input + 3		903551	0					
ANR	905322	AdditiveExpression	input + 3		903551	0		+			
ANR	905323	Identifier	input		903551	0					
ANR	905324	PrimaryExpression	3		903551	1					
ANR	905325	Argument	' '		903551	1					
ANR	905326	PrimaryExpression	' '		903551	0					
ANR	905327	IfStatement	if ( str )		903551	3					
ANR	905328	Condition	str	4821:8:137146:137148	903551	0	True				
ANR	905329	Identifier	str		903551	0					
ANR	905330	ExpressionStatement	"newfd = r_num_math ( core -> num , str + 1 )"	4821:13:137151:137188	903551	1	True				
ANR	905331	AssignmentExpression	"newfd = r_num_math ( core -> num , str + 1 )"		903551	0		=			
ANR	905332	Identifier	newfd		903551	0					
ANR	905333	CallExpression	"r_num_math ( core -> num , str + 1 )"		903551	1					
ANR	905334	Callee	r_num_math		903551	0					
ANR	905335	Identifier	r_num_math		903551	0					
ANR	905336	ArgumentList	core -> num		903551	1					
ANR	905337	Argument	core -> num		903551	0					
ANR	905338	PtrMemberAccess	core -> num		903551	0					
ANR	905339	Identifier	core		903551	0					
ANR	905340	Identifier	num		903551	1					
ANR	905341	Argument	str + 1		903551	1					
ANR	905342	AdditiveExpression	str + 1		903551	0		+			
ANR	905343	Identifier	str		903551	0					
ANR	905344	PrimaryExpression	1		903551	1					
ANR	905345	IfStatement	"if ( newfd == UT64_MAX || ! r_debug_desc_dup ( core -> dbg , fd , newfd ) )"		903551	4					
ANR	905346	Condition	"newfd == UT64_MAX || ! r_debug_desc_dup ( core -> dbg , fd , newfd )"	4822:8:137198:137258	903551	0	True				
ANR	905347	OrExpression	"newfd == UT64_MAX || ! r_debug_desc_dup ( core -> dbg , fd , newfd )"		903551	0		||			
ANR	905348	EqualityExpression	newfd == UT64_MAX		903551	0		==			
ANR	905349	Identifier	newfd		903551	0					
ANR	905350	Identifier	UT64_MAX		903551	1					
ANR	905351	UnaryOperationExpression	"! r_debug_desc_dup ( core -> dbg , fd , newfd )"		903551	1					
ANR	905352	UnaryOperator	!		903551	0					
ANR	905353	CallExpression	"r_debug_desc_dup ( core -> dbg , fd , newfd )"		903551	1					
ANR	905354	Callee	r_debug_desc_dup		903551	0					
ANR	905355	Identifier	r_debug_desc_dup		903551	0					
ANR	905356	ArgumentList	core -> dbg		903551	1					
ANR	905357	Argument	core -> dbg		903551	0					
ANR	905358	PtrMemberAccess	core -> dbg		903551	0					
ANR	905359	Identifier	core		903551	0					
ANR	905360	Identifier	dbg		903551	1					
ANR	905361	Argument	fd		903551	1					
ANR	905362	Identifier	fd		903551	0					
ANR	905363	Argument	newfd		903551	2					
ANR	905364	Identifier	newfd		903551	0					
ANR	905365	CompoundStatement		287:5:8326:8397	903551	1					
ANR	905366	IdentifierDeclStatement	"RBuffer * buf = r_core_syscallf ( core , ""dup2"" , ""%d, %d"" , fd , ( int ) newfd ) ;"	4823:5:137268:137339	903551	0	True				
ANR	905367	IdentifierDecl	"* buf = r_core_syscallf ( core , ""dup2"" , ""%d, %d"" , fd , ( int ) newfd )"		903551	0					
ANR	905368	IdentifierDeclType	RBuffer *		903551	0					
ANR	905369	Identifier	buf		903551	1					
ANR	905370	AssignmentExpression	"* buf = r_core_syscallf ( core , ""dup2"" , ""%d, %d"" , fd , ( int ) newfd )"		903551	2		=			
ANR	905371	Identifier	buf		903551	0					
ANR	905372	CallExpression	"r_core_syscallf ( core , ""dup2"" , ""%d, %d"" , fd , ( int ) newfd )"		903551	1					
ANR	905373	Callee	r_core_syscallf		903551	0					
ANR	905374	Identifier	r_core_syscallf		903551	0					
ANR	905375	ArgumentList	core		903551	1					
ANR	905376	Argument	core		903551	0					
ANR	905377	Identifier	core		903551	0					
ANR	905378	Argument	"""dup2"""		903551	1					
ANR	905379	PrimaryExpression	"""dup2"""		903551	0					
ANR	905380	Argument	"""%d, %d"""		903551	2					
ANR	905381	PrimaryExpression	"""%d, %d"""		903551	0					
ANR	905382	Argument	fd		903551	3					
ANR	905383	Identifier	fd		903551	0					
ANR	905384	Argument	( int ) newfd		903551	4					
ANR	905385	CastExpression	( int ) newfd		903551	0					
ANR	905386	CastTarget	int		903551	0					
ANR	905387	Identifier	newfd		903551	1					
ANR	905388	IfStatement	if ( buf )		903551	1					
ANR	905389	Condition	buf	4824:9:137350:137352	903551	0	True				
ANR	905390	Identifier	buf		903551	0					
ANR	905391	CompoundStatement		288:14:8413:8413	903551	1					
ANR	905392	ExpressionStatement	"consumeBuffer ( buf , ""dx "" , NULL )"	4825:6:137363:137395	903551	0	True				
ANR	905393	CallExpression	"consumeBuffer ( buf , ""dx "" , NULL )"		903551	0					
ANR	905394	Callee	consumeBuffer		903551	0					
ANR	905395	Identifier	consumeBuffer		903551	0					
ANR	905396	ArgumentList	buf		903551	1					
ANR	905397	Argument	buf		903551	0					
ANR	905398	Identifier	buf		903551	0					
ANR	905399	Argument	"""dx """		903551	1					
ANR	905400	PrimaryExpression	"""dx """		903551	0					
ANR	905401	Argument	NULL		903551	2					
ANR	905402	Identifier	NULL		903551	0					
ANR	905403	ElseStatement	else		903551	0					
ANR	905404	CompoundStatement		290:12:8467:8467	903551	0					
ANR	905405	ExpressionStatement	"eprintf ( ""Cannot dup %d %d\\n"" , fd , ( int ) newfd )"	4827:6:137417:137463	903551	0	True				
ANR	905406	CallExpression	"eprintf ( ""Cannot dup %d %d\\n"" , fd , ( int ) newfd )"		903551	0					
ANR	905407	Callee	eprintf		903551	0					
ANR	905408	Identifier	eprintf		903551	0					
ANR	905409	ArgumentList	"""Cannot dup %d %d\\n"""		903551	1					
ANR	905410	Argument	"""Cannot dup %d %d\\n"""		903551	0					
ANR	905411	PrimaryExpression	"""Cannot dup %d %d\\n"""		903551	0					
ANR	905412	Argument	fd		903551	1					
ANR	905413	Identifier	fd		903551	0					
ANR	905414	Argument	( int ) newfd		903551	2					
ANR	905415	CastExpression	( int ) newfd		903551	0					
ANR	905416	CastTarget	int		903551	0					
ANR	905417	Identifier	newfd		903551	1					
ANR	905418	BreakStatement	break ;	4831:3:137486:137491	903551	14	True				
ANR	905419	Label	case 'r' :	4832:2:137495:137503	903551	15	True				
ANR	905420	CompoundStatement		301:4:8653:8688	903551	16					
ANR	905421	IdentifierDeclStatement	ut64 off = UT64_MAX ;	4834:4:137514:137533	903551	0	True				
ANR	905422	IdentifierDecl	off = UT64_MAX		903551	0					
ANR	905423	IdentifierDeclType	ut64		903551	0					
ANR	905424	Identifier	off		903551	1					
ANR	905425	AssignmentExpression	off = UT64_MAX		903551	2		=			
ANR	905426	Identifier	UT64_MAX		903551	0					
ANR	905427	Identifier	UT64_MAX		903551	1					
ANR	905428	IdentifierDeclStatement	ut64 len = UT64_MAX ;	4835:4:137539:137558	903551	1	True				
ANR	905429	IdentifierDecl	len = UT64_MAX		903551	0					
ANR	905430	IdentifierDeclType	ut64		903551	0					
ANR	905431	Identifier	len		903551	1					
ANR	905432	AssignmentExpression	len = UT64_MAX		903551	2		=			
ANR	905433	Identifier	UT64_MAX		903551	0					
ANR	905434	Identifier	UT64_MAX		903551	1					
ANR	905435	IdentifierDeclStatement	int fd = atoi ( input + 2 ) ;	4836:4:137564:137589	903551	2	True				
ANR	905436	IdentifierDecl	fd = atoi ( input + 2 )		903551	0					
ANR	905437	IdentifierDeclType	int		903551	0					
ANR	905438	Identifier	fd		903551	1					
ANR	905439	AssignmentExpression	fd = atoi ( input + 2 )		903551	2		=			
ANR	905440	Identifier	fd		903551	0					
ANR	905441	CallExpression	atoi ( input + 2 )		903551	1					
ANR	905442	Callee	atoi		903551	0					
ANR	905443	Identifier	atoi		903551	0					
ANR	905444	ArgumentList	input + 2		903551	1					
ANR	905445	Argument	input + 2		903551	0					
ANR	905446	AdditiveExpression	input + 2		903551	0		+			
ANR	905447	Identifier	input		903551	0					
ANR	905448	PrimaryExpression	2		903551	1					
ANR	905449	IdentifierDeclStatement	"char * str = strchr ( input + 2 , ' ' ) ;"	4837:4:137595:137630	903551	3	True				
ANR	905450	IdentifierDecl	"* str = strchr ( input + 2 , ' ' )"		903551	0					
ANR	905451	IdentifierDeclType	char *		903551	0					
ANR	905452	Identifier	str		903551	1					
ANR	905453	AssignmentExpression	"* str = strchr ( input + 2 , ' ' )"		903551	2		=			
ANR	905454	Identifier	str		903551	0					
ANR	905455	CallExpression	"strchr ( input + 2 , ' ' )"		903551	1					
ANR	905456	Callee	strchr		903551	0					
ANR	905457	Identifier	strchr		903551	0					
ANR	905458	ArgumentList	input + 2		903551	1					
ANR	905459	Argument	input + 2		903551	0					
ANR	905460	AdditiveExpression	input + 2		903551	0		+			
ANR	905461	Identifier	input		903551	0					
ANR	905462	PrimaryExpression	2		903551	1					
ANR	905463	Argument	' '		903551	1					
ANR	905464	PrimaryExpression	' '		903551	0					
ANR	905465	IfStatement	if ( str )		903551	4					
ANR	905466	Condition	str	4838:8:137640:137642	903551	0	True				
ANR	905467	Identifier	str		903551	0					
ANR	905468	ExpressionStatement	"off = r_num_math ( core -> num , str + 1 )"	4838:13:137645:137680	903551	1	True				
ANR	905469	AssignmentExpression	"off = r_num_math ( core -> num , str + 1 )"		903551	0		=			
ANR	905470	Identifier	off		903551	0					
ANR	905471	CallExpression	"r_num_math ( core -> num , str + 1 )"		903551	1					
ANR	905472	Callee	r_num_math		903551	0					
ANR	905473	Identifier	r_num_math		903551	0					
ANR	905474	ArgumentList	core -> num		903551	1					
ANR	905475	Argument	core -> num		903551	0					
ANR	905476	PtrMemberAccess	core -> num		903551	0					
ANR	905477	Identifier	core		903551	0					
ANR	905478	Identifier	num		903551	1					
ANR	905479	Argument	str + 1		903551	1					
ANR	905480	AdditiveExpression	str + 1		903551	0		+			
ANR	905481	Identifier	str		903551	0					
ANR	905482	PrimaryExpression	1		903551	1					
ANR	905483	IfStatement	if ( str )		903551	5					
ANR	905484	Condition	str	4839:8:137690:137692	903551	0	True				
ANR	905485	Identifier	str		903551	0					
ANR	905486	ExpressionStatement	"str = strchr ( str + 1 , ' ' )"	4839:13:137695:137720	903551	1	True				
ANR	905487	AssignmentExpression	"str = strchr ( str + 1 , ' ' )"		903551	0		=			
ANR	905488	Identifier	str		903551	0					
ANR	905489	CallExpression	"strchr ( str + 1 , ' ' )"		903551	1					
ANR	905490	Callee	strchr		903551	0					
ANR	905491	Identifier	strchr		903551	0					
ANR	905492	ArgumentList	str + 1		903551	1					
ANR	905493	Argument	str + 1		903551	0					
ANR	905494	AdditiveExpression	str + 1		903551	0		+			
ANR	905495	Identifier	str		903551	0					
ANR	905496	PrimaryExpression	1		903551	1					
ANR	905497	Argument	' '		903551	1					
ANR	905498	PrimaryExpression	' '		903551	0					
ANR	905499	IfStatement	if ( str )		903551	6					
ANR	905500	Condition	str	4840:8:137730:137732	903551	0	True				
ANR	905501	Identifier	str		903551	0					
ANR	905502	ExpressionStatement	"len = r_num_math ( core -> num , str + 1 )"	4840:13:137735:137770	903551	1	True				
ANR	905503	AssignmentExpression	"len = r_num_math ( core -> num , str + 1 )"		903551	0		=			
ANR	905504	Identifier	len		903551	0					
ANR	905505	CallExpression	"r_num_math ( core -> num , str + 1 )"		903551	1					
ANR	905506	Callee	r_num_math		903551	0					
ANR	905507	Identifier	r_num_math		903551	0					
ANR	905508	ArgumentList	core -> num		903551	1					
ANR	905509	Argument	core -> num		903551	0					
ANR	905510	PtrMemberAccess	core -> num		903551	0					
ANR	905511	Identifier	core		903551	0					
ANR	905512	Identifier	num		903551	1					
ANR	905513	Argument	str + 1		903551	1					
ANR	905514	AdditiveExpression	str + 1		903551	0		+			
ANR	905515	Identifier	str		903551	0					
ANR	905516	PrimaryExpression	1		903551	1					
ANR	905517	IfStatement	"if ( len == UT64_MAX || off == UT64_MAX || ! r_debug_desc_read ( core -> dbg , fd , off , len ) )"		903551	7					
ANR	905518	Condition	"len == UT64_MAX || off == UT64_MAX || ! r_debug_desc_read ( core -> dbg , fd , off , len )"	4841:8:137780:137869	903551	0	True				
ANR	905519	OrExpression	"len == UT64_MAX || off == UT64_MAX || ! r_debug_desc_read ( core -> dbg , fd , off , len )"		903551	0		||			
ANR	905520	EqualityExpression	len == UT64_MAX		903551	0		==			
ANR	905521	Identifier	len		903551	0					
ANR	905522	Identifier	UT64_MAX		903551	1					
ANR	905523	OrExpression	"off == UT64_MAX || ! r_debug_desc_read ( core -> dbg , fd , off , len )"		903551	1		||			
ANR	905524	EqualityExpression	off == UT64_MAX		903551	0		==			
ANR	905525	Identifier	off		903551	0					
ANR	905526	Identifier	UT64_MAX		903551	1					
ANR	905527	UnaryOperationExpression	"! r_debug_desc_read ( core -> dbg , fd , off , len )"		903551	1					
ANR	905528	UnaryOperator	!		903551	0					
ANR	905529	CallExpression	"r_debug_desc_read ( core -> dbg , fd , off , len )"		903551	1					
ANR	905530	Callee	r_debug_desc_read		903551	0					
ANR	905531	Identifier	r_debug_desc_read		903551	0					
ANR	905532	ArgumentList	core -> dbg		903551	1					
ANR	905533	Argument	core -> dbg		903551	0					
ANR	905534	PtrMemberAccess	core -> dbg		903551	0					
ANR	905535	Identifier	core		903551	0					
ANR	905536	Identifier	dbg		903551	1					
ANR	905537	Argument	fd		903551	1					
ANR	905538	Identifier	fd		903551	0					
ANR	905539	Argument	off		903551	2					
ANR	905540	Identifier	off		903551	0					
ANR	905541	Argument	len		903551	3					
ANR	905542	Identifier	len		903551	0					
ANR	905543	CompoundStatement		306:52:8930:8930	903551	1					
ANR	905544	Statement	consumeBuffer	4843:5:137879:137891	903551	0	True				
ANR	905545	Statement	(	4843:19:137893:137893	903551	1	True				
ANR	905546	Statement	r_core_syscallf	4843:20:137894:137908	903551	2	True				
ANR	905547	Statement	(	4843:36:137910:137910	903551	3	True				
ANR	905548	Statement	core	4843:37:137911:137914	903551	4	True				
ANR	905549	Statement	","	4843:41:137915:137915	903551	5	True				
ANR	905550	Statement	"""read"""	4843:43:137917:137922	903551	6	True				
ANR	905551	Statement	","	4843:49:137923:137923	903551	7	True				
ANR	905552	Statement	"""%d, 0x%"""	4843:51:137925:137933	903551	8	True				
ANR	905553	Statement	PFMT64x	4843:60:137934:137940	903551	9	True				
ANR	905554	Statement	""", %d"""	4843:67:137941:137946	903551	10	True				
ANR	905555	Statement	","	4843:73:137947:137947	903551	11	True				
ANR	905556	Statement	fd	4844:8:137957:137958	903551	12	True				
ANR	905557	Statement	","	4844:10:137959:137959	903551	13	True				
ANR	905558	Statement	off	4844:12:137961:137963	903551	14	True				
ANR	905559	Statement	","	4844:15:137964:137964	903551	15	True				
ANR	905560	Statement	(	4844:17:137966:137966	903551	16	True				
ANR	905561	Statement	int	4844:18:137967:137969	903551	17	True				
ANR	905562	Statement	)	4844:21:137970:137970	903551	18	True				
ANR	905563	Statement	len	4844:22:137971:137973	903551	19	True				
ANR	905564	Statement	)	4844:25:137974:137974	903551	20	True				
ANR	905565	Statement	","	4844:26:137975:137975	903551	21	True				
ANR	905566	Statement	"""dx """	4844:28:137977:137981	903551	22	True				
ANR	905567	Statement	","	4844:33:137982:137982	903551	23	True				
ANR	905568	Statement	"""Cannot read"""	4844:35:137984:137996	903551	24	True				
ANR	905569	Statement	)	4844:48:137997:137997	903551	25	True				
ANR	905570	ExpressionStatement		4844:49:137998:137998	903551	26	True				
ANR	905571	BreakStatement	break ;	4847:3:138014:138019	903551	17	True				
ANR	905572	Label	case 'w' :	4848:2:138023:138031	903551	18	True				
ANR	905573	CompoundStatement		317:4:9181:9216	903551	19					
ANR	905574	IdentifierDeclStatement	ut64 off = UT64_MAX ;	4850:4:138042:138061	903551	0	True				
ANR	905575	IdentifierDecl	off = UT64_MAX		903551	0					
ANR	905576	IdentifierDeclType	ut64		903551	0					
ANR	905577	Identifier	off		903551	1					
ANR	905578	AssignmentExpression	off = UT64_MAX		903551	2		=			
ANR	905579	Identifier	UT64_MAX		903551	0					
ANR	905580	Identifier	UT64_MAX		903551	1					
ANR	905581	IdentifierDeclStatement	ut64 len = UT64_MAX ;	4851:4:138067:138086	903551	1	True				
ANR	905582	IdentifierDecl	len = UT64_MAX		903551	0					
ANR	905583	IdentifierDeclType	ut64		903551	0					
ANR	905584	Identifier	len		903551	1					
ANR	905585	AssignmentExpression	len = UT64_MAX		903551	2		=			
ANR	905586	Identifier	UT64_MAX		903551	0					
ANR	905587	Identifier	UT64_MAX		903551	1					
ANR	905588	IdentifierDeclStatement	int fd = atoi ( input + 2 ) ;	4852:4:138092:138117	903551	2	True				
ANR	905589	IdentifierDecl	fd = atoi ( input + 2 )		903551	0					
ANR	905590	IdentifierDeclType	int		903551	0					
ANR	905591	Identifier	fd		903551	1					
ANR	905592	AssignmentExpression	fd = atoi ( input + 2 )		903551	2		=			
ANR	905593	Identifier	fd		903551	0					
ANR	905594	CallExpression	atoi ( input + 2 )		903551	1					
ANR	905595	Callee	atoi		903551	0					
ANR	905596	Identifier	atoi		903551	0					
ANR	905597	ArgumentList	input + 2		903551	1					
ANR	905598	Argument	input + 2		903551	0					
ANR	905599	AdditiveExpression	input + 2		903551	0		+			
ANR	905600	Identifier	input		903551	0					
ANR	905601	PrimaryExpression	2		903551	1					
ANR	905602	IdentifierDeclStatement	"char * str = strchr ( input + 2 , ' ' ) ;"	4853:4:138123:138158	903551	3	True				
ANR	905603	IdentifierDecl	"* str = strchr ( input + 2 , ' ' )"		903551	0					
ANR	905604	IdentifierDeclType	char *		903551	0					
ANR	905605	Identifier	str		903551	1					
ANR	905606	AssignmentExpression	"* str = strchr ( input + 2 , ' ' )"		903551	2		=			
ANR	905607	Identifier	str		903551	0					
ANR	905608	CallExpression	"strchr ( input + 2 , ' ' )"		903551	1					
ANR	905609	Callee	strchr		903551	0					
ANR	905610	Identifier	strchr		903551	0					
ANR	905611	ArgumentList	input + 2		903551	1					
ANR	905612	Argument	input + 2		903551	0					
ANR	905613	AdditiveExpression	input + 2		903551	0		+			
ANR	905614	Identifier	input		903551	0					
ANR	905615	PrimaryExpression	2		903551	1					
ANR	905616	Argument	' '		903551	1					
ANR	905617	PrimaryExpression	' '		903551	0					
ANR	905618	IfStatement	if ( str )		903551	4					
ANR	905619	Condition	str	4854:8:138168:138170	903551	0	True				
ANR	905620	Identifier	str		903551	0					
ANR	905621	ExpressionStatement	"off = r_num_math ( core -> num , str + 1 )"	4854:13:138173:138208	903551	1	True				
ANR	905622	AssignmentExpression	"off = r_num_math ( core -> num , str + 1 )"		903551	0		=			
ANR	905623	Identifier	off		903551	0					
ANR	905624	CallExpression	"r_num_math ( core -> num , str + 1 )"		903551	1					
ANR	905625	Callee	r_num_math		903551	0					
ANR	905626	Identifier	r_num_math		903551	0					
ANR	905627	ArgumentList	core -> num		903551	1					
ANR	905628	Argument	core -> num		903551	0					
ANR	905629	PtrMemberAccess	core -> num		903551	0					
ANR	905630	Identifier	core		903551	0					
ANR	905631	Identifier	num		903551	1					
ANR	905632	Argument	str + 1		903551	1					
ANR	905633	AdditiveExpression	str + 1		903551	0		+			
ANR	905634	Identifier	str		903551	0					
ANR	905635	PrimaryExpression	1		903551	1					
ANR	905636	IfStatement	if ( str )		903551	5					
ANR	905637	Condition	str	4855:8:138218:138220	903551	0	True				
ANR	905638	Identifier	str		903551	0					
ANR	905639	ExpressionStatement	"str = strchr ( str + 1 , ' ' )"	4855:13:138223:138248	903551	1	True				
ANR	905640	AssignmentExpression	"str = strchr ( str + 1 , ' ' )"		903551	0		=			
ANR	905641	Identifier	str		903551	0					
ANR	905642	CallExpression	"strchr ( str + 1 , ' ' )"		903551	1					
ANR	905643	Callee	strchr		903551	0					
ANR	905644	Identifier	strchr		903551	0					
ANR	905645	ArgumentList	str + 1		903551	1					
ANR	905646	Argument	str + 1		903551	0					
ANR	905647	AdditiveExpression	str + 1		903551	0		+			
ANR	905648	Identifier	str		903551	0					
ANR	905649	PrimaryExpression	1		903551	1					
ANR	905650	Argument	' '		903551	1					
ANR	905651	PrimaryExpression	' '		903551	0					
ANR	905652	IfStatement	if ( str )		903551	6					
ANR	905653	Condition	str	4856:8:138258:138260	903551	0	True				
ANR	905654	Identifier	str		903551	0					
ANR	905655	ExpressionStatement	"len = r_num_math ( core -> num , str + 1 )"	4856:13:138263:138298	903551	1	True				
ANR	905656	AssignmentExpression	"len = r_num_math ( core -> num , str + 1 )"		903551	0		=			
ANR	905657	Identifier	len		903551	0					
ANR	905658	CallExpression	"r_num_math ( core -> num , str + 1 )"		903551	1					
ANR	905659	Callee	r_num_math		903551	0					
ANR	905660	Identifier	r_num_math		903551	0					
ANR	905661	ArgumentList	core -> num		903551	1					
ANR	905662	Argument	core -> num		903551	0					
ANR	905663	PtrMemberAccess	core -> num		903551	0					
ANR	905664	Identifier	core		903551	0					
ANR	905665	Identifier	num		903551	1					
ANR	905666	Argument	str + 1		903551	1					
ANR	905667	AdditiveExpression	str + 1		903551	0		+			
ANR	905668	Identifier	str		903551	0					
ANR	905669	PrimaryExpression	1		903551	1					
ANR	905670	IfStatement	"if ( len == UT64_MAX || off == UT64_MAX || ! r_debug_desc_write ( core -> dbg , fd , off , len ) )"		903551	7					
ANR	905671	Condition	"len == UT64_MAX || off == UT64_MAX || ! r_debug_desc_write ( core -> dbg , fd , off , len )"	4857:8:138308:138398	903551	0	True				
ANR	905672	OrExpression	"len == UT64_MAX || off == UT64_MAX || ! r_debug_desc_write ( core -> dbg , fd , off , len )"		903551	0		||			
ANR	905673	EqualityExpression	len == UT64_MAX		903551	0		==			
ANR	905674	Identifier	len		903551	0					
ANR	905675	Identifier	UT64_MAX		903551	1					
ANR	905676	OrExpression	"off == UT64_MAX || ! r_debug_desc_write ( core -> dbg , fd , off , len )"		903551	1		||			
ANR	905677	EqualityExpression	off == UT64_MAX		903551	0		==			
ANR	905678	Identifier	off		903551	0					
ANR	905679	Identifier	UT64_MAX		903551	1					
ANR	905680	UnaryOperationExpression	"! r_debug_desc_write ( core -> dbg , fd , off , len )"		903551	1					
ANR	905681	UnaryOperator	!		903551	0					
ANR	905682	CallExpression	"r_debug_desc_write ( core -> dbg , fd , off , len )"		903551	1					
ANR	905683	Callee	r_debug_desc_write		903551	0					
ANR	905684	Identifier	r_debug_desc_write		903551	0					
ANR	905685	ArgumentList	core -> dbg		903551	1					
ANR	905686	Argument	core -> dbg		903551	0					
ANR	905687	PtrMemberAccess	core -> dbg		903551	0					
ANR	905688	Identifier	core		903551	0					
ANR	905689	Identifier	dbg		903551	1					
ANR	905690	Argument	fd		903551	1					
ANR	905691	Identifier	fd		903551	0					
ANR	905692	Argument	off		903551	2					
ANR	905693	Identifier	off		903551	0					
ANR	905694	Argument	len		903551	3					
ANR	905695	Identifier	len		903551	0					
ANR	905696	CompoundStatement		322:53:9459:9459	903551	1					
ANR	905697	Statement	RBuffer	4859:5:138408:138414	903551	0	True				
ANR	905698	Statement	*	4859:13:138416:138416	903551	1	True				
ANR	905699	Statement	buf	4859:14:138417:138419	903551	2	True				
ANR	905700	Statement	=	4859:18:138421:138421	903551	3	True				
ANR	905701	Statement	r_core_syscallf	4859:20:138423:138437	903551	4	True				
ANR	905702	Statement	(	4859:36:138439:138439	903551	5	True				
ANR	905703	Statement	core	4859:37:138440:138443	903551	6	True				
ANR	905704	Statement	","	4859:41:138444:138444	903551	7	True				
ANR	905705	Statement	"""write"""	4859:43:138446:138452	903551	8	True				
ANR	905706	Statement	","	4859:50:138453:138453	903551	9	True				
ANR	905707	Statement	"""%d, 0x%"""	4859:52:138455:138463	903551	10	True				
ANR	905708	Statement	PFMT64x	4859:61:138464:138470	903551	11	True				
ANR	905709	Statement	""", %d"""	4859:68:138471:138476	903551	12	True				
ANR	905710	Statement	","	4859:74:138477:138477	903551	13	True				
ANR	905711	Statement	fd	4859:76:138479:138480	903551	14	True				
ANR	905712	Statement	","	4859:78:138481:138481	903551	15	True				
ANR	905713	Statement	off	4859:80:138483:138485	903551	16	True				
ANR	905714	Statement	","	4859:83:138486:138486	903551	17	True				
ANR	905715	Statement	(	4859:85:138488:138488	903551	18	True				
ANR	905716	Statement	int	4859:86:138489:138491	903551	19	True				
ANR	905717	Statement	)	4859:89:138492:138492	903551	20	True				
ANR	905718	Statement	len	4859:90:138493:138495	903551	21	True				
ANR	905719	Statement	)	4859:93:138496:138496	903551	22	True				
ANR	905720	ExpressionStatement		4859:94:138497:138497	903551	23	True				
ANR	905721	ExpressionStatement	"consumeBuffer ( buf , ""dx "" , ""Cannot write"" )"	4860:5:138504:138546	903551	24	True				
ANR	905722	CallExpression	"consumeBuffer ( buf , ""dx "" , ""Cannot write"" )"		903551	0					
ANR	905723	Callee	consumeBuffer		903551	0					
ANR	905724	Identifier	consumeBuffer		903551	0					
ANR	905725	ArgumentList	buf		903551	1					
ANR	905726	Argument	buf		903551	0					
ANR	905727	Identifier	buf		903551	0					
ANR	905728	Argument	"""dx """		903551	1					
ANR	905729	PrimaryExpression	"""dx """		903551	0					
ANR	905730	Argument	"""Cannot write"""		903551	2					
ANR	905731	PrimaryExpression	"""Cannot write"""		903551	0					
ANR	905732	BreakStatement	break ;	4863:3:138562:138567	903551	20	True				
ANR	905733	Label	case '-' :	4864:2:138571:138579	903551	21	True				
ANR	905734	CompoundStatement		334:4:9850:9906	903551	22					
ANR	905735	IdentifierDeclStatement	int fd = atoi ( input + 2 ) ;	4868:4:138678:138703	903551	0	True				
ANR	905736	IdentifierDecl	fd = atoi ( input + 2 )		903551	0					
ANR	905737	IdentifierDeclType	int		903551	0					
ANR	905738	Identifier	fd		903551	1					
ANR	905739	AssignmentExpression	fd = atoi ( input + 2 )		903551	2		=			
ANR	905740	Identifier	fd		903551	0					
ANR	905741	CallExpression	atoi ( input + 2 )		903551	1					
ANR	905742	Callee	atoi		903551	0					
ANR	905743	Identifier	atoi		903551	0					
ANR	905744	ArgumentList	input + 2		903551	1					
ANR	905745	Argument	input + 2		903551	0					
ANR	905746	AdditiveExpression	input + 2		903551	0		+			
ANR	905747	Identifier	input		903551	0					
ANR	905748	PrimaryExpression	2		903551	1					
ANR	905749	IdentifierDeclStatement	"RBuffer * buf = r_core_syscallf ( core , ""close"" , ""%d"" , fd ) ;"	4870:4:138792:138848	903551	1	True				
ANR	905750	IdentifierDecl	"* buf = r_core_syscallf ( core , ""close"" , ""%d"" , fd )"		903551	0					
ANR	905751	IdentifierDeclType	RBuffer *		903551	0					
ANR	905752	Identifier	buf		903551	1					
ANR	905753	AssignmentExpression	"* buf = r_core_syscallf ( core , ""close"" , ""%d"" , fd )"		903551	2		=			
ANR	905754	Identifier	buf		903551	0					
ANR	905755	CallExpression	"r_core_syscallf ( core , ""close"" , ""%d"" , fd )"		903551	1					
ANR	905756	Callee	r_core_syscallf		903551	0					
ANR	905757	Identifier	r_core_syscallf		903551	0					
ANR	905758	ArgumentList	core		903551	1					
ANR	905759	Argument	core		903551	0					
ANR	905760	Identifier	core		903551	0					
ANR	905761	Argument	"""close"""		903551	1					
ANR	905762	PrimaryExpression	"""close"""		903551	0					
ANR	905763	Argument	"""%d"""		903551	2					
ANR	905764	PrimaryExpression	"""%d"""		903551	0					
ANR	905765	Argument	fd		903551	3					
ANR	905766	Identifier	fd		903551	0					
ANR	905767	ExpressionStatement	"consumeBuffer ( buf , ""dx "" , ""Cannot close"" )"	4871:4:138854:138896	903551	2	True				
ANR	905768	CallExpression	"consumeBuffer ( buf , ""dx "" , ""Cannot close"" )"		903551	0					
ANR	905769	Callee	consumeBuffer		903551	0					
ANR	905770	Identifier	consumeBuffer		903551	0					
ANR	905771	ArgumentList	buf		903551	1					
ANR	905772	Argument	buf		903551	0					
ANR	905773	Identifier	buf		903551	0					
ANR	905774	Argument	"""dx """		903551	1					
ANR	905775	PrimaryExpression	"""dx """		903551	0					
ANR	905776	Argument	"""Cannot close"""		903551	2					
ANR	905777	PrimaryExpression	"""Cannot close"""		903551	0					
ANR	905778	BreakStatement	break ;	4873:3:138906:138911	903551	23	True				
ANR	905779	Label	case ' ' :	4874:2:138915:138923	903551	24	True				
ANR	905780	CompoundStatement		341:4:10043:10122	903551	25					
ANR	905781	IdentifierDeclStatement	"RBuffer * buf = r_core_syscallf ( core , ""open"" , ""%s, %d, %d"" , input + 2 , 2 , 0644 ) ;"	4877:4:138985:139064	903551	0	True				
ANR	905782	IdentifierDecl	"* buf = r_core_syscallf ( core , ""open"" , ""%s, %d, %d"" , input + 2 , 2 , 0644 )"		903551	0					
ANR	905783	IdentifierDeclType	RBuffer *		903551	0					
ANR	905784	Identifier	buf		903551	1					
ANR	905785	AssignmentExpression	"* buf = r_core_syscallf ( core , ""open"" , ""%s, %d, %d"" , input + 2 , 2 , 0644 )"		903551	2		=			
ANR	905786	Identifier	buf		903551	0					
ANR	905787	CallExpression	"r_core_syscallf ( core , ""open"" , ""%s, %d, %d"" , input + 2 , 2 , 0644 )"		903551	1					
ANR	905788	Callee	r_core_syscallf		903551	0					
ANR	905789	Identifier	r_core_syscallf		903551	0					
ANR	905790	ArgumentList	core		903551	1					
ANR	905791	Argument	core		903551	0					
ANR	905792	Identifier	core		903551	0					
ANR	905793	Argument	"""open"""		903551	1					
ANR	905794	PrimaryExpression	"""open"""		903551	0					
ANR	905795	Argument	"""%s, %d, %d"""		903551	2					
ANR	905796	PrimaryExpression	"""%s, %d, %d"""		903551	0					
ANR	905797	Argument	input + 2		903551	3					
ANR	905798	AdditiveExpression	input + 2		903551	0		+			
ANR	905799	Identifier	input		903551	0					
ANR	905800	PrimaryExpression	2		903551	1					
ANR	905801	Argument	2		903551	4					
ANR	905802	PrimaryExpression	2		903551	0					
ANR	905803	Argument	0644		903551	5					
ANR	905804	PrimaryExpression	0644		903551	0					
ANR	905805	ExpressionStatement	"consumeBuffer ( buf , ""dx "" , ""Cannot open"" )"	4878:4:139070:139111	903551	1	True				
ANR	905806	CallExpression	"consumeBuffer ( buf , ""dx "" , ""Cannot open"" )"		903551	0					
ANR	905807	Callee	consumeBuffer		903551	0					
ANR	905808	Identifier	consumeBuffer		903551	0					
ANR	905809	ArgumentList	buf		903551	1					
ANR	905810	Argument	buf		903551	0					
ANR	905811	Identifier	buf		903551	0					
ANR	905812	Argument	"""dx """		903551	1					
ANR	905813	PrimaryExpression	"""dx """		903551	0					
ANR	905814	Argument	"""Cannot open"""		903551	2					
ANR	905815	PrimaryExpression	"""Cannot open"""		903551	0					
ANR	905816	BreakStatement	break ;	4881:3:139137:139142	903551	26	True				
ANR	905817	Label	case '?' :	4882:2:139146:139154	903551	27	True				
ANR	905818	Label	default :	4883:2:139158:139165	903551	28	True				
ANR	905819	Identifier	default		903551	0					
ANR	905820	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dd )"	4884:3:139170:139205	903551	29	True				
ANR	905821	CallExpression	"r_core_cmd_help ( core , help_msg_dd )"		903551	0					
ANR	905822	Callee	r_core_cmd_help		903551	0					
ANR	905823	Identifier	r_core_cmd_help		903551	0					
ANR	905824	ArgumentList	core		903551	1					
ANR	905825	Argument	core		903551	0					
ANR	905826	Identifier	core		903551	0					
ANR	905827	Argument	help_msg_dd		903551	1					
ANR	905828	Identifier	help_msg_dd		903551	0					
ANR	905829	BreakStatement	break ;	4885:3:139210:139215	903551	30	True				
ANR	905830	BreakStatement	break ;	4887:2:139223:139228	903551	5	True				
ANR	905831	Label	case 's' :	4888:1:139231:139239	903551	6	True				
ANR	905832	IfStatement	"if ( cmd_debug_step ( core , input ) )"		903551	7					
ANR	905833	Condition	"cmd_debug_step ( core , input )"	4889:6:139247:139274	903551	0	True				
ANR	905834	CallExpression	"cmd_debug_step ( core , input )"		903551	0					
ANR	905835	Callee	cmd_debug_step		903551	0					
ANR	905836	Identifier	cmd_debug_step		903551	0					
ANR	905837	ArgumentList	core		903551	1					
ANR	905838	Argument	core		903551	0					
ANR	905839	Identifier	core		903551	0					
ANR	905840	Argument	input		903551	1					
ANR	905841	Identifier	input		903551	0					
ANR	905842	CompoundStatement		353:36:10335:10335	903551	1					
ANR	905843	ExpressionStatement	"follow = r_config_get_i ( core -> config , ""dbg.follow"" )"	4890:3:139282:139334	903551	0	True				
ANR	905844	AssignmentExpression	"follow = r_config_get_i ( core -> config , ""dbg.follow"" )"		903551	0		=			
ANR	905845	Identifier	follow		903551	0					
ANR	905846	CallExpression	"r_config_get_i ( core -> config , ""dbg.follow"" )"		903551	1					
ANR	905847	Callee	r_config_get_i		903551	0					
ANR	905848	Identifier	r_config_get_i		903551	0					
ANR	905849	ArgumentList	core -> config		903551	1					
ANR	905850	Argument	core -> config		903551	0					
ANR	905851	PtrMemberAccess	core -> config		903551	0					
ANR	905852	Identifier	core		903551	0					
ANR	905853	Identifier	config		903551	1					
ANR	905854	Argument	"""dbg.follow"""		903551	1					
ANR	905855	PrimaryExpression	"""dbg.follow"""		903551	0					
ANR	905856	BreakStatement	break ;	4892:2:139342:139347	903551	8	True				
ANR	905857	Label	case 'b' :	4893:1:139350:139358	903551	9	True				
ANR	905858	ExpressionStatement	"r_core_cmd_bp ( core , input )"	4894:2:139362:139389	903551	10	True				
ANR	905859	CallExpression	"r_core_cmd_bp ( core , input )"		903551	0					
ANR	905860	Callee	r_core_cmd_bp		903551	0					
ANR	905861	Identifier	r_core_cmd_bp		903551	0					
ANR	905862	ArgumentList	core		903551	1					
ANR	905863	Argument	core		903551	0					
ANR	905864	Identifier	core		903551	0					
ANR	905865	Argument	input		903551	1					
ANR	905866	Identifier	input		903551	0					
ANR	905867	BreakStatement	break ;	4895:2:139393:139398	903551	11	True				
ANR	905868	Label	case 'H' :	4896:1:139401:139409	903551	12	True				
ANR	905869	ExpressionStatement	"eprintf ( ""TODO: transplant process\\n"" )"	4897:2:139413:139451	903551	13	True				
ANR	905870	CallExpression	"eprintf ( ""TODO: transplant process\\n"" )"		903551	0					
ANR	905871	Callee	eprintf		903551	0					
ANR	905872	Identifier	eprintf		903551	0					
ANR	905873	ArgumentList	"""TODO: transplant process\\n"""		903551	1					
ANR	905874	Argument	"""TODO: transplant process\\n"""		903551	0					
ANR	905875	PrimaryExpression	"""TODO: transplant process\\n"""		903551	0					
ANR	905876	BreakStatement	break ;	4898:2:139455:139460	903551	14	True				
ANR	905877	Label	case 'c' :	4899:1:139463:139471	903551	15	True				
ANR	905878	ExpressionStatement	"r_cons_break_push ( static_debug_stop , core -> dbg )"	4900:2:139483:139531	903551	16	True				
ANR	905879	CallExpression	"r_cons_break_push ( static_debug_stop , core -> dbg )"		903551	0					
ANR	905880	Callee	r_cons_break_push		903551	0					
ANR	905881	Identifier	r_cons_break_push		903551	0					
ANR	905882	ArgumentList	static_debug_stop		903551	1					
ANR	905883	Argument	static_debug_stop		903551	0					
ANR	905884	Identifier	static_debug_stop		903551	0					
ANR	905885	Argument	core -> dbg		903551	1					
ANR	905886	PtrMemberAccess	core -> dbg		903551	0					
ANR	905887	Identifier	core		903551	0					
ANR	905888	Identifier	dbg		903551	1					
ANR	905889	ExpressionStatement	"( void ) cmd_debug_continue ( core , input )"	4901:2:139535:139573	903551	17	True				
ANR	905890	CastExpression	"( void ) cmd_debug_continue ( core , input )"		903551	0					
ANR	905891	CastTarget	void		903551	0					
ANR	905892	CallExpression	"cmd_debug_continue ( core , input )"		903551	1					
ANR	905893	Callee	cmd_debug_continue		903551	0					
ANR	905894	Identifier	cmd_debug_continue		903551	0					
ANR	905895	ArgumentList	core		903551	1					
ANR	905896	Argument	core		903551	0					
ANR	905897	Identifier	core		903551	0					
ANR	905898	Argument	input		903551	1					
ANR	905899	Identifier	input		903551	0					
ANR	905900	ExpressionStatement	"follow = r_config_get_i ( core -> config , ""dbg.follow"" )"	4902:2:139577:139629	903551	18	True				
ANR	905901	AssignmentExpression	"follow = r_config_get_i ( core -> config , ""dbg.follow"" )"		903551	0		=			
ANR	905902	Identifier	follow		903551	0					
ANR	905903	CallExpression	"r_config_get_i ( core -> config , ""dbg.follow"" )"		903551	1					
ANR	905904	Callee	r_config_get_i		903551	0					
ANR	905905	Identifier	r_config_get_i		903551	0					
ANR	905906	ArgumentList	core -> config		903551	1					
ANR	905907	Argument	core -> config		903551	0					
ANR	905908	PtrMemberAccess	core -> config		903551	0					
ANR	905909	Identifier	core		903551	0					
ANR	905910	Identifier	config		903551	1					
ANR	905911	Argument	"""dbg.follow"""		903551	1					
ANR	905912	PrimaryExpression	"""dbg.follow"""		903551	0					
ANR	905913	ExpressionStatement	r_cons_break_pop ( )	4903:2:139633:139652	903551	19	True				
ANR	905914	CallExpression	r_cons_break_pop ( )		903551	0					
ANR	905915	Callee	r_cons_break_pop		903551	0					
ANR	905916	Identifier	r_cons_break_pop		903551	0					
ANR	905917	ArgumentList			903551	1					
ANR	905918	BreakStatement	break ;	4904:2:139656:139661	903551	20	True				
ANR	905919	Label	case 'm' :	4905:1:139664:139672	903551	21	True				
ANR	905920	ExpressionStatement	"cmd_debug_map ( core , input + 1 )"	4906:2:139684:139715	903551	22	True				
ANR	905921	CallExpression	"cmd_debug_map ( core , input + 1 )"		903551	0					
ANR	905922	Callee	cmd_debug_map		903551	0					
ANR	905923	Identifier	cmd_debug_map		903551	0					
ANR	905924	ArgumentList	core		903551	1					
ANR	905925	Argument	core		903551	0					
ANR	905926	Identifier	core		903551	0					
ANR	905927	Argument	input + 1		903551	1					
ANR	905928	AdditiveExpression	input + 1		903551	0		+			
ANR	905929	Identifier	input		903551	0					
ANR	905930	PrimaryExpression	1		903551	1					
ANR	905931	BreakStatement	break ;	4907:2:139719:139724	903551	23	True				
ANR	905932	Label	case 'r' :	4908:1:139727:139735	903551	24	True				
ANR	905933	IfStatement	if ( core -> io -> debug || input [ 1 ] == '?' )		903551	25					
ANR	905934	Condition	core -> io -> debug || input [ 1 ] == '?'	4909:6:139751:139784	903551	0	True				
ANR	905935	OrExpression	core -> io -> debug || input [ 1 ] == '?'		903551	0		||			
ANR	905936	PtrMemberAccess	core -> io -> debug		903551	0					
ANR	905937	PtrMemberAccess	core -> io		903551	0					
ANR	905938	Identifier	core		903551	0					
ANR	905939	Identifier	io		903551	1					
ANR	905940	Identifier	debug		903551	1					
ANR	905941	EqualityExpression	input [ 1 ] == '?'		903551	1		==			
ANR	905942	ArrayIndexing	input [ 1 ]		903551	0					
ANR	905943	Identifier	input		903551	0					
ANR	905944	PrimaryExpression	1		903551	1					
ANR	905945	PrimaryExpression	'?'		903551	1					
ANR	905946	CompoundStatement		373:42:10845:10845	903551	1					
ANR	905947	ExpressionStatement	"cmd_debug_reg ( core , input + 1 )"	4910:3:139792:139823	903551	0	True				
ANR	905948	CallExpression	"cmd_debug_reg ( core , input + 1 )"		903551	0					
ANR	905949	Callee	cmd_debug_reg		903551	0					
ANR	905950	Identifier	cmd_debug_reg		903551	0					
ANR	905951	ArgumentList	core		903551	1					
ANR	905952	Argument	core		903551	0					
ANR	905953	Identifier	core		903551	0					
ANR	905954	Argument	input + 1		903551	1					
ANR	905955	AdditiveExpression	input + 1		903551	0		+			
ANR	905956	Identifier	input		903551	0					
ANR	905957	PrimaryExpression	1		903551	1					
ANR	905958	ElseStatement	else		903551	0					
ANR	905959	CompoundStatement		376:3:10897:10945	903551	0					
ANR	905960	IdentifierDeclStatement	"void cmd_anal_reg ( RCore * core , const char * str ) ;"	4912:3:139839:139887	903551	0	True				
ANR	905961	IdentifierDecl	"cmd_anal_reg ( RCore * core , const char * str )"		903551	0					
ANR	905962	IdentifierDeclType	"void ( RCore * core , const char * str )"		903551	0					
ANR	905963	Identifier	cmd_anal_reg		903551	1					
ANR	905964	Identifier	core		903551	2					
ANR	905965	Identifier	str		903551	3					
ANR	905966	ExpressionStatement	"cmd_anal_reg ( core , input + 1 )"	4913:3:139892:139922	903551	1	True				
ANR	905967	CallExpression	"cmd_anal_reg ( core , input + 1 )"		903551	0					
ANR	905968	Callee	cmd_anal_reg		903551	0					
ANR	905969	Identifier	cmd_anal_reg		903551	0					
ANR	905970	ArgumentList	core		903551	1					
ANR	905971	Argument	core		903551	0					
ANR	905972	Identifier	core		903551	0					
ANR	905973	Argument	input + 1		903551	1					
ANR	905974	AdditiveExpression	input + 1		903551	0		+			
ANR	905975	Identifier	input		903551	0					
ANR	905976	PrimaryExpression	1		903551	1					
ANR	905977	BreakStatement	break ;	4916:2:139964:139969	903551	26	True				
ANR	905978	Label	case 'p' :	4917:1:139972:139980	903551	27	True				
ANR	905979	ExpressionStatement	"cmd_debug_pid ( core , input )"	4918:2:139992:140019	903551	28	True				
ANR	905980	CallExpression	"cmd_debug_pid ( core , input )"		903551	0					
ANR	905981	Callee	cmd_debug_pid		903551	0					
ANR	905982	Identifier	cmd_debug_pid		903551	0					
ANR	905983	ArgumentList	core		903551	1					
ANR	905984	Argument	core		903551	0					
ANR	905985	Identifier	core		903551	0					
ANR	905986	Argument	input		903551	1					
ANR	905987	Identifier	input		903551	0					
ANR	905988	BreakStatement	break ;	4919:2:140023:140028	903551	29	True				
ANR	905989	Label	case 'L' :	4920:1:140031:140039	903551	30	True				
ANR	905990	SwitchStatement	switch ( input [ 1 ] )		903551	31					
ANR	905991	Condition	input [ 1 ]	4921:10:140059:140066	903551	0	True				
ANR	905992	ArrayIndexing	input [ 1 ]		903551	0					
ANR	905993	Identifier	input		903551	0					
ANR	905994	PrimaryExpression	1		903551	1					
ANR	905995	CompoundStatement		385:20:11127:11127	903551	1					
ANR	905996	Label	case 'q' :	4922:2:140073:140081	903551	0	True				
ANR	905997	ExpressionStatement	"r_debug_plugin_list ( core -> dbg , 'q' )"	4923:3:140086:140122	903551	1	True				
ANR	905998	CallExpression	"r_debug_plugin_list ( core -> dbg , 'q' )"		903551	0					
ANR	905999	Callee	r_debug_plugin_list		903551	0					
ANR	906000	Identifier	r_debug_plugin_list		903551	0					
ANR	906001	ArgumentList	core -> dbg		903551	1					
ANR	906002	Argument	core -> dbg		903551	0					
ANR	906003	PtrMemberAccess	core -> dbg		903551	0					
ANR	906004	Identifier	core		903551	0					
ANR	906005	Identifier	dbg		903551	1					
ANR	906006	Argument	'q'		903551	1					
ANR	906007	PrimaryExpression	'q'		903551	0					
ANR	906008	BreakStatement	break ;	4924:3:140127:140132	903551	2	True				
ANR	906009	Label	case 'j' :	4925:2:140136:140144	903551	3	True				
ANR	906010	ExpressionStatement	"r_debug_plugin_list ( core -> dbg , 'j' )"	4926:3:140149:140185	903551	4	True				
ANR	906011	CallExpression	"r_debug_plugin_list ( core -> dbg , 'j' )"		903551	0					
ANR	906012	Callee	r_debug_plugin_list		903551	0					
ANR	906013	Identifier	r_debug_plugin_list		903551	0					
ANR	906014	ArgumentList	core -> dbg		903551	1					
ANR	906015	Argument	core -> dbg		903551	0					
ANR	906016	PtrMemberAccess	core -> dbg		903551	0					
ANR	906017	Identifier	core		903551	0					
ANR	906018	Identifier	dbg		903551	1					
ANR	906019	Argument	'j'		903551	1					
ANR	906020	PrimaryExpression	'j'		903551	0					
ANR	906021	BreakStatement	break ;	4927:3:140190:140195	903551	5	True				
ANR	906022	Label	case '?' :	4928:2:140199:140207	903551	6	True				
ANR	906023	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dL )"	4929:3:140212:140247	903551	7	True				
ANR	906024	CallExpression	"r_core_cmd_help ( core , help_msg_dL )"		903551	0					
ANR	906025	Callee	r_core_cmd_help		903551	0					
ANR	906026	Identifier	r_core_cmd_help		903551	0					
ANR	906027	ArgumentList	core		903551	1					
ANR	906028	Argument	core		903551	0					
ANR	906029	Identifier	core		903551	0					
ANR	906030	Argument	help_msg_dL		903551	1					
ANR	906031	Identifier	help_msg_dL		903551	0					
ANR	906032	BreakStatement	break ;	4930:3:140252:140257	903551	8	True				
ANR	906033	Label	case ' ' :	4931:2:140261:140269	903551	9	True				
ANR	906034	CompoundStatement		396:3:11334:11372	903551	10					
ANR	906035	IdentifierDeclStatement	char * str = r_str_trim_dup ( input + 2 ) ;	4932:3:140276:140314	903551	0	True				
ANR	906036	IdentifierDecl	* str = r_str_trim_dup ( input + 2 )		903551	0					
ANR	906037	IdentifierDeclType	char *		903551	0					
ANR	906038	Identifier	str		903551	1					
ANR	906039	AssignmentExpression	* str = r_str_trim_dup ( input + 2 )		903551	2		=			
ANR	906040	Identifier	str		903551	0					
ANR	906041	CallExpression	r_str_trim_dup ( input + 2 )		903551	1					
ANR	906042	Callee	r_str_trim_dup		903551	0					
ANR	906043	Identifier	r_str_trim_dup		903551	0					
ANR	906044	ArgumentList	input + 2		903551	1					
ANR	906045	Argument	input + 2		903551	0					
ANR	906046	AdditiveExpression	input + 2		903551	0		+			
ANR	906047	Identifier	input		903551	0					
ANR	906048	PrimaryExpression	2		903551	1					
ANR	906049	ExpressionStatement	"r_config_set ( core -> config , ""dbg.backend"" , str )"	4933:3:140319:140366	903551	1	True				
ANR	906050	CallExpression	"r_config_set ( core -> config , ""dbg.backend"" , str )"		903551	0					
ANR	906051	Callee	r_config_set		903551	0					
ANR	906052	Identifier	r_config_set		903551	0					
ANR	906053	ArgumentList	core -> config		903551	1					
ANR	906054	Argument	core -> config		903551	0					
ANR	906055	PtrMemberAccess	core -> config		903551	0					
ANR	906056	Identifier	core		903551	0					
ANR	906057	Identifier	config		903551	1					
ANR	906058	Argument	"""dbg.backend"""		903551	1					
ANR	906059	PrimaryExpression	"""dbg.backend"""		903551	0					
ANR	906060	Argument	str		903551	2					
ANR	906061	Identifier	str		903551	0					
ANR	906062	ExpressionStatement	free ( str )	4935:3:140430:140440	903551	2	True				
ANR	906063	CallExpression	free ( str )		903551	0					
ANR	906064	Callee	free		903551	0					
ANR	906065	Identifier	free		903551	0					
ANR	906066	ArgumentList	str		903551	1					
ANR	906067	Argument	str		903551	0					
ANR	906068	Identifier	str		903551	0					
ANR	906069	BreakStatement	break ;	4937:3:140450:140455	903551	11	True				
ANR	906070	Label	default :	4938:2:140459:140466	903551	12	True				
ANR	906071	Identifier	default		903551	0					
ANR	906072	ExpressionStatement	"r_debug_plugin_list ( core -> dbg , 0 )"	4939:3:140471:140505	903551	13	True				
ANR	906073	CallExpression	"r_debug_plugin_list ( core -> dbg , 0 )"		903551	0					
ANR	906074	Callee	r_debug_plugin_list		903551	0					
ANR	906075	Identifier	r_debug_plugin_list		903551	0					
ANR	906076	ArgumentList	core -> dbg		903551	1					
ANR	906077	Argument	core -> dbg		903551	0					
ANR	906078	PtrMemberAccess	core -> dbg		903551	0					
ANR	906079	Identifier	core		903551	0					
ANR	906080	Identifier	dbg		903551	1					
ANR	906081	Argument	0		903551	1					
ANR	906082	PrimaryExpression	0		903551	0					
ANR	906083	BreakStatement	break ;	4940:3:140510:140515	903551	14	True				
ANR	906084	BreakStatement	break ;	4942:2:140523:140528	903551	32	True				
ANR	906085	Label	case 'i' :	4943:1:140531:140539	903551	33	True				
ANR	906086	CompoundStatement		411:3:11732:11749	903551	34					
ANR	906087	IdentifierDeclStatement	"RDebugInfo * rdi = r_debug_info ( core -> dbg , input + 2 ) ;"	4945:3:140556:140609	903551	0	True				
ANR	906088	IdentifierDecl	"* rdi = r_debug_info ( core -> dbg , input + 2 )"		903551	0					
ANR	906089	IdentifierDeclType	RDebugInfo *		903551	0					
ANR	906090	Identifier	rdi		903551	1					
ANR	906091	AssignmentExpression	"* rdi = r_debug_info ( core -> dbg , input + 2 )"		903551	2		=			
ANR	906092	Identifier	rdi		903551	0					
ANR	906093	CallExpression	"r_debug_info ( core -> dbg , input + 2 )"		903551	1					
ANR	906094	Callee	r_debug_info		903551	0					
ANR	906095	Identifier	r_debug_info		903551	0					
ANR	906096	ArgumentList	core -> dbg		903551	1					
ANR	906097	Argument	core -> dbg		903551	0					
ANR	906098	PtrMemberAccess	core -> dbg		903551	0					
ANR	906099	Identifier	core		903551	0					
ANR	906100	Identifier	dbg		903551	1					
ANR	906101	Argument	input + 2		903551	1					
ANR	906102	AdditiveExpression	input + 2		903551	0		+			
ANR	906103	Identifier	input		903551	0					
ANR	906104	PrimaryExpression	2		903551	1					
ANR	906105	IdentifierDeclStatement	RDebugReasonType stop = r_debug_stop_reason ( core -> dbg ) ;	4946:3:140614:140669	903551	1	True				
ANR	906106	IdentifierDecl	stop = r_debug_stop_reason ( core -> dbg )		903551	0					
ANR	906107	IdentifierDeclType	RDebugReasonType		903551	0					
ANR	906108	Identifier	stop		903551	1					
ANR	906109	AssignmentExpression	stop = r_debug_stop_reason ( core -> dbg )		903551	2		=			
ANR	906110	Identifier	stop		903551	0					
ANR	906111	CallExpression	r_debug_stop_reason ( core -> dbg )		903551	1					
ANR	906112	Callee	r_debug_stop_reason		903551	0					
ANR	906113	Identifier	r_debug_stop_reason		903551	0					
ANR	906114	ArgumentList	core -> dbg		903551	1					
ANR	906115	Argument	core -> dbg		903551	0					
ANR	906116	PtrMemberAccess	core -> dbg		903551	0					
ANR	906117	Identifier	core		903551	0					
ANR	906118	Identifier	dbg		903551	1					
ANR	906119	IdentifierDeclStatement	char * escaped_str ;	4947:3:140674:140691	903551	2	True				
ANR	906120	IdentifierDecl	* escaped_str		903551	0					
ANR	906121	IdentifierDeclType	char *		903551	0					
ANR	906122	Identifier	escaped_str		903551	1					
ANR	906123	SwitchStatement	switch ( input [ 1 ] )		903551	3					
ANR	906124	Condition	input [ 1 ]	4948:11:140704:140711	903551	0	True				
ANR	906125	ArrayIndexing	input [ 1 ]		903551	0					
ANR	906126	Identifier	input		903551	0					
ANR	906127	PrimaryExpression	1		903551	1					
ANR	906128	CompoundStatement		412:21:11772:11772	903551	1					
ANR	906129	Label	case '\\0' :	4949:3:140719:140728	903551	0	True				
ANR	906130	Statement	define	4950:1:140739:140744	903551	1	True				
ANR	906131	Statement	P	4950:8:140746:140746	903551	2	True				
ANR	906132	Statement	r_cons_printf	4950:10:140748:140760	903551	3	True				
ANR	906133	Statement	define	4951:1:140763:140768	903551	4	True				
ANR	906134	Statement	PS	4951:8:140770:140771	903551	5	True				
ANR	906135	Statement	(	4951:10:140772:140772	903551	6	True				
ANR	906136	Statement	X	4951:11:140773:140773	903551	7	True				
ANR	906137	Statement	","	4951:12:140774:140774	903551	8	True				
ANR	906138	Statement	Y	4951:14:140776:140776	903551	9	True				
ANR	906139	Statement	)	4951:15:140777:140777	903551	10	True				
ANR	906140	CompoundStatement		415:17:11837:11837	903551	11					
ANR	906141	ExpressionStatement	escaped_str = r_str_escape ( Y )	4951:18:140780:140810	903551	0	True				
ANR	906142	AssignmentExpression	escaped_str = r_str_escape ( Y )		903551	0		=			
ANR	906143	Identifier	escaped_str		903551	0					
ANR	906144	CallExpression	r_str_escape ( Y )		903551	1					
ANR	906145	Callee	r_str_escape		903551	0					
ANR	906146	Identifier	r_str_escape		903551	0					
ANR	906147	ArgumentList	Y		903551	1					
ANR	906148	Argument	Y		903551	0					
ANR	906149	Identifier	Y		903551	0					
ANR	906150	ExpressionStatement	"r_cons_printf ( X , escaped_str )"	4951:49:140811:140840	903551	1	True				
ANR	906151	CallExpression	"r_cons_printf ( X , escaped_str )"		903551	0					
ANR	906152	Callee	r_cons_printf		903551	0					
ANR	906153	Identifier	r_cons_printf		903551	0					
ANR	906154	ArgumentList	X		903551	1					
ANR	906155	Argument	X		903551	0					
ANR	906156	Identifier	X		903551	0					
ANR	906157	Argument	escaped_str		903551	1					
ANR	906158	Identifier	escaped_str		903551	0					
ANR	906159	ExpressionStatement	free ( escaped_str )	4951:79:140841:140858	903551	2	True				
ANR	906160	CallExpression	free ( escaped_str )		903551	0					
ANR	906161	Callee	free		903551	0					
ANR	906162	Identifier	free		903551	0					
ANR	906163	ArgumentList	escaped_str		903551	1					
ANR	906164	Argument	escaped_str		903551	0					
ANR	906165	Identifier	escaped_str		903551	0					
ANR	906166	IfStatement	if ( rdi )		903551	12					
ANR	906167	Condition	rdi	4952:8:140869:140871	903551	0	True				
ANR	906168	Identifier	rdi		903551	0					
ANR	906169	CompoundStatement		417:5:11939:12000	903551	1					
ANR	906170	IdentifierDeclStatement	const char * s = r_signal_to_string ( core -> dbg -> reason . signum ) ;	4953:5:140881:140942	903551	0	True				
ANR	906171	IdentifierDecl	* s = r_signal_to_string ( core -> dbg -> reason . signum )		903551	0					
ANR	906172	IdentifierDeclType	const char *		903551	0					
ANR	906173	Identifier	s		903551	1					
ANR	906174	AssignmentExpression	* s = r_signal_to_string ( core -> dbg -> reason . signum )		903551	2		=			
ANR	906175	Identifier	s		903551	0					
ANR	906176	CallExpression	r_signal_to_string ( core -> dbg -> reason . signum )		903551	1					
ANR	906177	Callee	r_signal_to_string		903551	0					
ANR	906178	Identifier	r_signal_to_string		903551	0					
ANR	906179	ArgumentList	core -> dbg -> reason . signum		903551	1					
ANR	906180	Argument	core -> dbg -> reason . signum		903551	0					
ANR	906181	MemberAccess	core -> dbg -> reason . signum		903551	0					
ANR	906182	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	906183	PtrMemberAccess	core -> dbg		903551	0					
ANR	906184	Identifier	core		903551	0					
ANR	906185	Identifier	dbg		903551	1					
ANR	906186	Identifier	reason		903551	1					
ANR	906187	Identifier	signum		903551	1					
ANR	906188	ExpressionStatement	"P ( ""type=%s\\n"" , r_debug_reason_to_string ( core -> dbg -> reason . type ) )"	4954:5:140949:141015	903551	1	True				
ANR	906189	CallExpression	"P ( ""type=%s\\n"" , r_debug_reason_to_string ( core -> dbg -> reason . type ) )"		903551	0					
ANR	906190	Callee	P		903551	0					
ANR	906191	Identifier	P		903551	0					
ANR	906192	ArgumentList	"""type=%s\\n"""		903551	1					
ANR	906193	Argument	"""type=%s\\n"""		903551	0					
ANR	906194	PrimaryExpression	"""type=%s\\n"""		903551	0					
ANR	906195	Argument	r_debug_reason_to_string ( core -> dbg -> reason . type )		903551	1					
ANR	906196	CallExpression	r_debug_reason_to_string ( core -> dbg -> reason . type )		903551	0					
ANR	906197	Callee	r_debug_reason_to_string		903551	0					
ANR	906198	Identifier	r_debug_reason_to_string		903551	0					
ANR	906199	ArgumentList	core -> dbg -> reason . type		903551	1					
ANR	906200	Argument	core -> dbg -> reason . type		903551	0					
ANR	906201	MemberAccess	core -> dbg -> reason . type		903551	0					
ANR	906202	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	906203	PtrMemberAccess	core -> dbg		903551	0					
ANR	906204	Identifier	core		903551	0					
ANR	906205	Identifier	dbg		903551	1					
ANR	906206	Identifier	reason		903551	1					
ANR	906207	Identifier	type		903551	1					
ANR	906208	ExpressionStatement	"P ( ""signal=%s\\n"" , s ? s : ""none"" )"	4955:5:141022:141053	903551	2	True				
ANR	906209	CallExpression	"P ( ""signal=%s\\n"" , s ? s : ""none"" )"		903551	0					
ANR	906210	Callee	P		903551	0					
ANR	906211	Identifier	P		903551	0					
ANR	906212	ArgumentList	"""signal=%s\\n"""		903551	1					
ANR	906213	Argument	"""signal=%s\\n"""		903551	0					
ANR	906214	PrimaryExpression	"""signal=%s\\n"""		903551	0					
ANR	906215	Argument	"s ? s : ""none"""		903551	1					
ANR	906216	ConditionalExpression	"s ? s : ""none"""		903551	0					
ANR	906217	Condition	s		903551	0					
ANR	906218	Identifier	s		903551	0					
ANR	906219	Identifier	s		903551	1					
ANR	906220	PrimaryExpression	"""none"""		903551	2					
ANR	906221	ExpressionStatement	"P ( ""signum=%d\\n"" , core -> dbg -> reason . signum )"	4956:5:141060:141103	903551	3	True				
ANR	906222	CallExpression	"P ( ""signum=%d\\n"" , core -> dbg -> reason . signum )"		903551	0					
ANR	906223	Callee	P		903551	0					
ANR	906224	Identifier	P		903551	0					
ANR	906225	ArgumentList	"""signum=%d\\n"""		903551	1					
ANR	906226	Argument	"""signum=%d\\n"""		903551	0					
ANR	906227	PrimaryExpression	"""signum=%d\\n"""		903551	0					
ANR	906228	Argument	core -> dbg -> reason . signum		903551	1					
ANR	906229	MemberAccess	core -> dbg -> reason . signum		903551	0					
ANR	906230	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	906231	PtrMemberAccess	core -> dbg		903551	0					
ANR	906232	Identifier	core		903551	0					
ANR	906233	Identifier	dbg		903551	1					
ANR	906234	Identifier	reason		903551	1					
ANR	906235	Identifier	signum		903551	1					
ANR	906236	ExpressionStatement	"P ( ""sigpid=%d\\n"" , core -> dbg -> reason . tid )"	4957:5:141110:141150	903551	4	True				
ANR	906237	CallExpression	"P ( ""sigpid=%d\\n"" , core -> dbg -> reason . tid )"		903551	0					
ANR	906238	Callee	P		903551	0					
ANR	906239	Identifier	P		903551	0					
ANR	906240	ArgumentList	"""sigpid=%d\\n"""		903551	1					
ANR	906241	Argument	"""sigpid=%d\\n"""		903551	0					
ANR	906242	PrimaryExpression	"""sigpid=%d\\n"""		903551	0					
ANR	906243	Argument	core -> dbg -> reason . tid		903551	1					
ANR	906244	MemberAccess	core -> dbg -> reason . tid		903551	0					
ANR	906245	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	906246	PtrMemberAccess	core -> dbg		903551	0					
ANR	906247	Identifier	core		903551	0					
ANR	906248	Identifier	dbg		903551	1					
ANR	906249	Identifier	reason		903551	1					
ANR	906250	Identifier	tid		903551	1					
ANR	906251	Statement	P	4958:5:141157:141157	903551	5	True				
ANR	906252	Statement	(	4958:7:141159:141159	903551	6	True				
ANR	906253	Statement	"""addr=0x%"""	4958:8:141160:141169	903551	7	True				
ANR	906254	Statement	PFMT64x	4958:18:141170:141176	903551	8	True				
ANR	906255	Statement	"""\\n"""	4958:25:141177:141180	903551	9	True				
ANR	906256	Statement	","	4958:29:141181:141181	903551	10	True				
ANR	906257	Statement	core	4958:31:141183:141186	903551	11	True				
ANR	906258	Statement	->	4958:35:141187:141188	903551	12	True				
ANR	906259	Statement	dbg	4958:37:141189:141191	903551	13	True				
ANR	906260	Statement	->	4958:40:141192:141193	903551	14	True				
ANR	906261	Statement	reason	4958:42:141194:141199	903551	15	True				
ANR	906262	Statement	.	4958:48:141200:141200	903551	16	True				
ANR	906263	Statement	addr	4958:49:141201:141204	903551	17	True				
ANR	906264	Statement	)	4958:53:141205:141205	903551	18	True				
ANR	906265	ExpressionStatement		4958:54:141206:141206	903551	19	True				
ANR	906266	Statement	P	4959:5:141213:141213	903551	20	True				
ANR	906267	Statement	(	4959:7:141215:141215	903551	21	True				
ANR	906268	Statement	"""bp_addr=0x%"""	4959:8:141216:141228	903551	22	True				
ANR	906269	Statement	PFMT64x	4959:21:141229:141235	903551	23	True				
ANR	906270	Statement	"""\\n"""	4959:28:141236:141239	903551	24	True				
ANR	906271	Statement	","	4959:32:141240:141240	903551	25	True				
ANR	906272	Statement	core	4959:34:141242:141245	903551	26	True				
ANR	906273	Statement	->	4959:38:141246:141247	903551	27	True				
ANR	906274	Statement	dbg	4959:40:141248:141250	903551	28	True				
ANR	906275	Statement	->	4959:43:141251:141252	903551	29	True				
ANR	906276	Statement	reason	4959:45:141253:141258	903551	30	True				
ANR	906277	Statement	.	4959:51:141259:141259	903551	31	True				
ANR	906278	Statement	bp_addr	4959:52:141260:141266	903551	32	True				
ANR	906279	Statement	)	4959:59:141267:141267	903551	33	True				
ANR	906280	ExpressionStatement		4959:60:141268:141268	903551	34	True				
ANR	906281	ExpressionStatement	"P ( ""inbp=%s\\n"" , r_str_bool ( core -> dbg -> reason . bp_addr ) )"	4960:5:141275:141330	903551	35	True				
ANR	906282	CallExpression	"P ( ""inbp=%s\\n"" , r_str_bool ( core -> dbg -> reason . bp_addr ) )"		903551	0					
ANR	906283	Callee	P		903551	0					
ANR	906284	Identifier	P		903551	0					
ANR	906285	ArgumentList	"""inbp=%s\\n"""		903551	1					
ANR	906286	Argument	"""inbp=%s\\n"""		903551	0					
ANR	906287	PrimaryExpression	"""inbp=%s\\n"""		903551	0					
ANR	906288	Argument	r_str_bool ( core -> dbg -> reason . bp_addr )		903551	1					
ANR	906289	CallExpression	r_str_bool ( core -> dbg -> reason . bp_addr )		903551	0					
ANR	906290	Callee	r_str_bool		903551	0					
ANR	906291	Identifier	r_str_bool		903551	0					
ANR	906292	ArgumentList	core -> dbg -> reason . bp_addr		903551	1					
ANR	906293	Argument	core -> dbg -> reason . bp_addr		903551	0					
ANR	906294	MemberAccess	core -> dbg -> reason . bp_addr		903551	0					
ANR	906295	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	906296	PtrMemberAccess	core -> dbg		903551	0					
ANR	906297	Identifier	core		903551	0					
ANR	906298	Identifier	dbg		903551	1					
ANR	906299	Identifier	reason		903551	1					
ANR	906300	Identifier	bp_addr		903551	1					
ANR	906301	Statement	P	4961:5:141337:141337	903551	36	True				
ANR	906302	Statement	(	4961:7:141339:141339	903551	37	True				
ANR	906303	Statement	"""baddr=0x%"""	4961:8:141340:141350	903551	38	True				
ANR	906304	Statement	PFMT64x	4961:19:141351:141357	903551	39	True				
ANR	906305	Statement	"""\\n"""	4961:26:141358:141361	903551	40	True				
ANR	906306	Statement	","	4961:30:141362:141362	903551	41	True				
ANR	906307	Statement	r_debug_get_baddr	4961:32:141364:141380	903551	42	True				
ANR	906308	Statement	(	4961:50:141382:141382	903551	43	True				
ANR	906309	Statement	core	4961:51:141383:141386	903551	44	True				
ANR	906310	Statement	->	4961:55:141387:141388	903551	45	True				
ANR	906311	Statement	dbg	4961:57:141389:141391	903551	46	True				
ANR	906312	Statement	","	4961:60:141392:141392	903551	47	True				
ANR	906313	Statement	NULL	4961:62:141394:141397	903551	48	True				
ANR	906314	Statement	)	4961:66:141398:141398	903551	49	True				
ANR	906315	Statement	)	4961:67:141399:141399	903551	50	True				
ANR	906316	ExpressionStatement		4961:68:141400:141400	903551	51	True				
ANR	906317	ExpressionStatement	"P ( ""pid=%d\\n"" , rdi -> pid )"	4962:5:141407:141431	903551	52	True				
ANR	906318	CallExpression	"P ( ""pid=%d\\n"" , rdi -> pid )"		903551	0					
ANR	906319	Callee	P		903551	0					
ANR	906320	Identifier	P		903551	0					
ANR	906321	ArgumentList	"""pid=%d\\n"""		903551	1					
ANR	906322	Argument	"""pid=%d\\n"""		903551	0					
ANR	906323	PrimaryExpression	"""pid=%d\\n"""		903551	0					
ANR	906324	Argument	rdi -> pid		903551	1					
ANR	906325	PtrMemberAccess	rdi -> pid		903551	0					
ANR	906326	Identifier	rdi		903551	0					
ANR	906327	Identifier	pid		903551	1					
ANR	906328	ExpressionStatement	"P ( ""tid=%d\\n"" , rdi -> tid )"	4963:5:141438:141462	903551	53	True				
ANR	906329	CallExpression	"P ( ""tid=%d\\n"" , rdi -> tid )"		903551	0					
ANR	906330	Callee	P		903551	0					
ANR	906331	Identifier	P		903551	0					
ANR	906332	ArgumentList	"""tid=%d\\n"""		903551	1					
ANR	906333	Argument	"""tid=%d\\n"""		903551	0					
ANR	906334	PrimaryExpression	"""tid=%d\\n"""		903551	0					
ANR	906335	Argument	rdi -> tid		903551	1					
ANR	906336	PtrMemberAccess	rdi -> tid		903551	0					
ANR	906337	Identifier	rdi		903551	0					
ANR	906338	Identifier	tid		903551	1					
ANR	906339	Statement	P	4964:5:141469:141469	903551	54	True				
ANR	906340	Statement	(	4964:7:141471:141471	903551	55	True				
ANR	906341	Statement	"""stopaddr=0x%"""	4964:8:141472:141485	903551	56	True				
ANR	906342	Statement	PFMT64x	4964:22:141486:141492	903551	57	True				
ANR	906343	Statement	"""\\n"""	4964:29:141493:141496	903551	58	True				
ANR	906344	Statement	","	4964:33:141497:141497	903551	59	True				
ANR	906345	Statement	core	4964:35:141499:141502	903551	60	True				
ANR	906346	Statement	->	4964:39:141503:141504	903551	61	True				
ANR	906347	Statement	dbg	4964:41:141505:141507	903551	62	True				
ANR	906348	Statement	->	4964:44:141508:141509	903551	63	True				
ANR	906349	Statement	stopaddr	4964:46:141510:141517	903551	64	True				
ANR	906350	Statement	)	4964:54:141518:141518	903551	65	True				
ANR	906351	ExpressionStatement		4964:55:141519:141519	903551	66	True				
ANR	906352	IfStatement	if ( rdi -> uid != - 1 )		903551	67					
ANR	906353	Condition	rdi -> uid != - 1	4965:9:141530:141543	903551	0	True				
ANR	906354	EqualityExpression	rdi -> uid != - 1		903551	0		!=			
ANR	906355	PtrMemberAccess	rdi -> uid		903551	0					
ANR	906356	Identifier	rdi		903551	0					
ANR	906357	Identifier	uid		903551	1					
ANR	906358	UnaryOperationExpression	- 1		903551	1					
ANR	906359	UnaryOperator	-		903551	0					
ANR	906360	PrimaryExpression	1		903551	1					
ANR	906361	CompoundStatement		429:25:12604:12604	903551	1					
ANR	906362	ExpressionStatement	"P ( ""uid=%d\\n"" , rdi -> uid )"	4966:6:141554:141578	903551	0	True				
ANR	906363	CallExpression	"P ( ""uid=%d\\n"" , rdi -> uid )"		903551	0					
ANR	906364	Callee	P		903551	0					
ANR	906365	Identifier	P		903551	0					
ANR	906366	ArgumentList	"""uid=%d\\n"""		903551	1					
ANR	906367	Argument	"""uid=%d\\n"""		903551	0					
ANR	906368	PrimaryExpression	"""uid=%d\\n"""		903551	0					
ANR	906369	Argument	rdi -> uid		903551	1					
ANR	906370	PtrMemberAccess	rdi -> uid		903551	0					
ANR	906371	Identifier	rdi		903551	0					
ANR	906372	Identifier	uid		903551	1					
ANR	906373	IfStatement	if ( rdi -> gid != - 1 )		903551	68					
ANR	906374	Condition	rdi -> gid != - 1	4968:9:141596:141609	903551	0	True				
ANR	906375	EqualityExpression	rdi -> gid != - 1		903551	0		!=			
ANR	906376	PtrMemberAccess	rdi -> gid		903551	0					
ANR	906377	Identifier	rdi		903551	0					
ANR	906378	Identifier	gid		903551	1					
ANR	906379	UnaryOperationExpression	- 1		903551	1					
ANR	906380	UnaryOperator	-		903551	0					
ANR	906381	PrimaryExpression	1		903551	1					
ANR	906382	CompoundStatement		432:25:12670:12670	903551	1					
ANR	906383	ExpressionStatement	"P ( ""gid=%d\\n"" , rdi -> gid )"	4969:6:141620:141644	903551	0	True				
ANR	906384	CallExpression	"P ( ""gid=%d\\n"" , rdi -> gid )"		903551	0					
ANR	906385	Callee	P		903551	0					
ANR	906386	Identifier	P		903551	0					
ANR	906387	ArgumentList	"""gid=%d\\n"""		903551	1					
ANR	906388	Argument	"""gid=%d\\n"""		903551	0					
ANR	906389	PrimaryExpression	"""gid=%d\\n"""		903551	0					
ANR	906390	Argument	rdi -> gid		903551	1					
ANR	906391	PtrMemberAccess	rdi -> gid		903551	0					
ANR	906392	Identifier	rdi		903551	0					
ANR	906393	Identifier	gid		903551	1					
ANR	906394	IfStatement	if ( rdi -> usr )		903551	69					
ANR	906395	Condition	rdi -> usr	4971:9:141662:141669	903551	0	True				
ANR	906396	PtrMemberAccess	rdi -> usr		903551	0					
ANR	906397	Identifier	rdi		903551	0					
ANR	906398	Identifier	usr		903551	1					
ANR	906399	CompoundStatement		435:19:12730:12730	903551	1					
ANR	906400	ExpressionStatement	"P ( ""usr=%s\\n"" , rdi -> usr )"	4972:6:141680:141704	903551	0	True				
ANR	906401	CallExpression	"P ( ""usr=%s\\n"" , rdi -> usr )"		903551	0					
ANR	906402	Callee	P		903551	0					
ANR	906403	Identifier	P		903551	0					
ANR	906404	ArgumentList	"""usr=%s\\n"""		903551	1					
ANR	906405	Argument	"""usr=%s\\n"""		903551	0					
ANR	906406	PrimaryExpression	"""usr=%s\\n"""		903551	0					
ANR	906407	Argument	rdi -> usr		903551	1					
ANR	906408	PtrMemberAccess	rdi -> usr		903551	0					
ANR	906409	Identifier	rdi		903551	0					
ANR	906410	Identifier	usr		903551	1					
ANR	906411	IfStatement	if ( rdi -> exe && * rdi -> exe )		903551	70					
ANR	906412	Condition	rdi -> exe && * rdi -> exe	4974:9:141722:141742	903551	0	True				
ANR	906413	AndExpression	rdi -> exe && * rdi -> exe		903551	0		&&			
ANR	906414	PtrMemberAccess	rdi -> exe		903551	0					
ANR	906415	Identifier	rdi		903551	0					
ANR	906416	Identifier	exe		903551	1					
ANR	906417	UnaryOperationExpression	* rdi -> exe		903551	1					
ANR	906418	UnaryOperator	*		903551	0					
ANR	906419	PtrMemberAccess	rdi -> exe		903551	1					
ANR	906420	Identifier	rdi		903551	0					
ANR	906421	Identifier	exe		903551	1					
ANR	906422	CompoundStatement		438:32:12803:12803	903551	1					
ANR	906423	ExpressionStatement	"P ( ""exe=%s\\n"" , rdi -> exe )"	4975:6:141753:141777	903551	0	True				
ANR	906424	CallExpression	"P ( ""exe=%s\\n"" , rdi -> exe )"		903551	0					
ANR	906425	Callee	P		903551	0					
ANR	906426	Identifier	P		903551	0					
ANR	906427	ArgumentList	"""exe=%s\\n"""		903551	1					
ANR	906428	Argument	"""exe=%s\\n"""		903551	0					
ANR	906429	PrimaryExpression	"""exe=%s\\n"""		903551	0					
ANR	906430	Argument	rdi -> exe		903551	1					
ANR	906431	PtrMemberAccess	rdi -> exe		903551	0					
ANR	906432	Identifier	rdi		903551	0					
ANR	906433	Identifier	exe		903551	1					
ANR	906434	IfStatement	if ( rdi -> cmdline && * rdi -> cmdline )		903551	71					
ANR	906435	Condition	rdi -> cmdline && * rdi -> cmdline	4977:9:141795:141823	903551	0	True				
ANR	906436	AndExpression	rdi -> cmdline && * rdi -> cmdline		903551	0		&&			
ANR	906437	PtrMemberAccess	rdi -> cmdline		903551	0					
ANR	906438	Identifier	rdi		903551	0					
ANR	906439	Identifier	cmdline		903551	1					
ANR	906440	UnaryOperationExpression	* rdi -> cmdline		903551	1					
ANR	906441	UnaryOperator	*		903551	0					
ANR	906442	PtrMemberAccess	rdi -> cmdline		903551	1					
ANR	906443	Identifier	rdi		903551	0					
ANR	906444	Identifier	cmdline		903551	1					
ANR	906445	CompoundStatement		441:40:12884:12884	903551	1					
ANR	906446	ExpressionStatement	"P ( ""cmdline=%s\\n"" , rdi -> cmdline )"	4978:6:141834:141866	903551	0	True				
ANR	906447	CallExpression	"P ( ""cmdline=%s\\n"" , rdi -> cmdline )"		903551	0					
ANR	906448	Callee	P		903551	0					
ANR	906449	Identifier	P		903551	0					
ANR	906450	ArgumentList	"""cmdline=%s\\n"""		903551	1					
ANR	906451	Argument	"""cmdline=%s\\n"""		903551	0					
ANR	906452	PrimaryExpression	"""cmdline=%s\\n"""		903551	0					
ANR	906453	Argument	rdi -> cmdline		903551	1					
ANR	906454	PtrMemberAccess	rdi -> cmdline		903551	0					
ANR	906455	Identifier	rdi		903551	0					
ANR	906456	Identifier	cmdline		903551	1					
ANR	906457	IfStatement	if ( rdi -> cwd && * rdi -> cwd )		903551	72					
ANR	906458	Condition	rdi -> cwd && * rdi -> cwd	4980:9:141884:141904	903551	0	True				
ANR	906459	AndExpression	rdi -> cwd && * rdi -> cwd		903551	0		&&			
ANR	906460	PtrMemberAccess	rdi -> cwd		903551	0					
ANR	906461	Identifier	rdi		903551	0					
ANR	906462	Identifier	cwd		903551	1					
ANR	906463	UnaryOperationExpression	* rdi -> cwd		903551	1					
ANR	906464	UnaryOperator	*		903551	0					
ANR	906465	PtrMemberAccess	rdi -> cwd		903551	1					
ANR	906466	Identifier	rdi		903551	0					
ANR	906467	Identifier	cwd		903551	1					
ANR	906468	CompoundStatement		444:32:12965:12965	903551	1					
ANR	906469	ExpressionStatement	"P ( ""cwd=%s\\n"" , rdi -> cwd )"	4981:6:141915:141939	903551	0	True				
ANR	906470	CallExpression	"P ( ""cwd=%s\\n"" , rdi -> cwd )"		903551	0					
ANR	906471	Callee	P		903551	0					
ANR	906472	Identifier	P		903551	0					
ANR	906473	ArgumentList	"""cwd=%s\\n"""		903551	1					
ANR	906474	Argument	"""cwd=%s\\n"""		903551	0					
ANR	906475	PrimaryExpression	"""cwd=%s\\n"""		903551	0					
ANR	906476	Argument	rdi -> cwd		903551	1					
ANR	906477	PtrMemberAccess	rdi -> cwd		903551	0					
ANR	906478	Identifier	rdi		903551	0					
ANR	906479	Identifier	cwd		903551	1					
ANR	906480	IfStatement	if ( rdi -> kernel_stack && * rdi -> kernel_stack )		903551	73					
ANR	906481	Condition	rdi -> kernel_stack && * rdi -> kernel_stack	4983:9:141957:141995	903551	0	True				
ANR	906482	AndExpression	rdi -> kernel_stack && * rdi -> kernel_stack		903551	0		&&			
ANR	906483	PtrMemberAccess	rdi -> kernel_stack		903551	0					
ANR	906484	Identifier	rdi		903551	0					
ANR	906485	Identifier	kernel_stack		903551	1					
ANR	906486	UnaryOperationExpression	* rdi -> kernel_stack		903551	1					
ANR	906487	UnaryOperator	*		903551	0					
ANR	906488	PtrMemberAccess	rdi -> kernel_stack		903551	1					
ANR	906489	Identifier	rdi		903551	0					
ANR	906490	Identifier	kernel_stack		903551	1					
ANR	906491	CompoundStatement		447:50:13056:13056	903551	1					
ANR	906492	ExpressionStatement	"P ( ""kernel_stack=\\n%s\\n"" , rdi -> kernel_stack )"	4984:6:142006:142050	903551	0	True				
ANR	906493	CallExpression	"P ( ""kernel_stack=\\n%s\\n"" , rdi -> kernel_stack )"		903551	0					
ANR	906494	Callee	P		903551	0					
ANR	906495	Identifier	P		903551	0					
ANR	906496	ArgumentList	"""kernel_stack=\\n%s\\n"""		903551	1					
ANR	906497	Argument	"""kernel_stack=\\n%s\\n"""		903551	0					
ANR	906498	PrimaryExpression	"""kernel_stack=\\n%s\\n"""		903551	0					
ANR	906499	Argument	rdi -> kernel_stack		903551	1					
ANR	906500	PtrMemberAccess	rdi -> kernel_stack		903551	0					
ANR	906501	Identifier	rdi		903551	0					
ANR	906502	Identifier	kernel_stack		903551	1					
ANR	906503	IfStatement	if ( stop != - 1 )		903551	13					
ANR	906504	Condition	stop != - 1	4987:8:142073:142082	903551	0	True				
ANR	906505	EqualityExpression	stop != - 1		903551	0		!=			
ANR	906506	Identifier	stop		903551	0					
ANR	906507	UnaryOperationExpression	- 1		903551	1					
ANR	906508	UnaryOperator	-		903551	0					
ANR	906509	PrimaryExpression	1		903551	1					
ANR	906510	CompoundStatement		451:20:13143:13143	903551	1					
ANR	906511	ExpressionStatement	"P ( ""stopreason=%d\\n"" , stop )"	4988:5:142092:142119	903551	0	True				
ANR	906512	CallExpression	"P ( ""stopreason=%d\\n"" , stop )"		903551	0					
ANR	906513	Callee	P		903551	0					
ANR	906514	Identifier	P		903551	0					
ANR	906515	ArgumentList	"""stopreason=%d\\n"""		903551	1					
ANR	906516	Argument	"""stopreason=%d\\n"""		903551	0					
ANR	906517	PrimaryExpression	"""stopreason=%d\\n"""		903551	0					
ANR	906518	Argument	stop		903551	1					
ANR	906519	Identifier	stop		903551	0					
ANR	906520	BreakStatement	break ;	4990:4:142131:142136	903551	14	True				
ANR	906521	Label	case 'f' :	4991:3:142141:142149	903551	15	True				
ANR	906522	IfStatement	if ( input [ 1 ] == '?' )		903551	16					
ANR	906523	Condition	input [ 1 ] == '?'	4992:8:142168:142182	903551	0	True				
ANR	906524	EqualityExpression	input [ 1 ] == '?'		903551	0		==			
ANR	906525	ArrayIndexing	input [ 1 ]		903551	0					
ANR	906526	Identifier	input		903551	0					
ANR	906527	PrimaryExpression	1		903551	1					
ANR	906528	PrimaryExpression	'?'		903551	1					
ANR	906529	CompoundStatement		456:25:13243:13243	903551	1					
ANR	906530	ExpressionStatement	"eprintf ( ""Usage: dif $a $b  # diff two alias files\\n"" )"	4993:5:142192:142246	903551	0	True				
ANR	906531	CallExpression	"eprintf ( ""Usage: dif $a $b  # diff two alias files\\n"" )"		903551	0					
ANR	906532	Callee	eprintf		903551	0					
ANR	906533	Identifier	eprintf		903551	0					
ANR	906534	ArgumentList	"""Usage: dif $a $b  # diff two alias files\\n"""		903551	1					
ANR	906535	Argument	"""Usage: dif $a $b  # diff two alias files\\n"""		903551	0					
ANR	906536	PrimaryExpression	"""Usage: dif $a $b  # diff two alias files\\n"""		903551	0					
ANR	906537	ElseStatement	else		903551	0					
ANR	906538	CompoundStatement		459:5:13324:13355	903551	0					
ANR	906539	IdentifierDeclStatement	"char * arg = strchr ( input , ' ' ) ;"	4995:5:142266:142297	903551	0	True				
ANR	906540	IdentifierDecl	"* arg = strchr ( input , ' ' )"		903551	0					
ANR	906541	IdentifierDeclType	char *		903551	0					
ANR	906542	Identifier	arg		903551	1					
ANR	906543	AssignmentExpression	"* arg = strchr ( input , ' ' )"		903551	2		=			
ANR	906544	Identifier	arg		903551	0					
ANR	906545	CallExpression	"strchr ( input , ' ' )"		903551	1					
ANR	906546	Callee	strchr		903551	0					
ANR	906547	Identifier	strchr		903551	0					
ANR	906548	ArgumentList	input		903551	1					
ANR	906549	Argument	input		903551	0					
ANR	906550	Identifier	input		903551	0					
ANR	906551	Argument	' '		903551	1					
ANR	906552	PrimaryExpression	' '		903551	0					
ANR	906553	IfStatement	if ( arg )		903551	1					
ANR	906554	Condition	arg	4996:9:142308:142310	903551	0	True				
ANR	906555	Identifier	arg		903551	0					
ANR	906556	CompoundStatement		462:6:13425:13455	903551	1					
ANR	906557	ExpressionStatement	arg = strdup ( r_str_trim_ro ( arg + 1 ) )	4997:6:142321:142359	903551	0	True				
ANR	906558	AssignmentExpression	arg = strdup ( r_str_trim_ro ( arg + 1 ) )		903551	0		=			
ANR	906559	Identifier	arg		903551	0					
ANR	906560	CallExpression	strdup ( r_str_trim_ro ( arg + 1 ) )		903551	1					
ANR	906561	Callee	strdup		903551	0					
ANR	906562	Identifier	strdup		903551	0					
ANR	906563	ArgumentList	r_str_trim_ro ( arg + 1 )		903551	1					
ANR	906564	Argument	r_str_trim_ro ( arg + 1 )		903551	0					
ANR	906565	CallExpression	r_str_trim_ro ( arg + 1 )		903551	0					
ANR	906566	Callee	r_str_trim_ro		903551	0					
ANR	906567	Identifier	r_str_trim_ro		903551	0					
ANR	906568	ArgumentList	arg + 1		903551	1					
ANR	906569	Argument	arg + 1		903551	0					
ANR	906570	AdditiveExpression	arg + 1		903551	0		+			
ANR	906571	Identifier	arg		903551	0					
ANR	906572	PrimaryExpression	1		903551	1					
ANR	906573	IdentifierDeclStatement	"char * arg2 = strchr ( arg , ' ' ) ;"	4998:6:142367:142397	903551	1	True				
ANR	906574	IdentifierDecl	"* arg2 = strchr ( arg , ' ' )"		903551	0					
ANR	906575	IdentifierDeclType	char *		903551	0					
ANR	906576	Identifier	arg2		903551	1					
ANR	906577	AssignmentExpression	"* arg2 = strchr ( arg , ' ' )"		903551	2		=			
ANR	906578	Identifier	arg2		903551	0					
ANR	906579	CallExpression	"strchr ( arg , ' ' )"		903551	1					
ANR	906580	Callee	strchr		903551	0					
ANR	906581	Identifier	strchr		903551	0					
ANR	906582	ArgumentList	arg		903551	1					
ANR	906583	Argument	arg		903551	0					
ANR	906584	Identifier	arg		903551	0					
ANR	906585	Argument	' '		903551	1					
ANR	906586	PrimaryExpression	' '		903551	0					
ANR	906587	IfStatement	if ( arg2 )		903551	2					
ANR	906588	Condition	arg2	4999:10:142409:142412	903551	0	True				
ANR	906589	Identifier	arg2		903551	0					
ANR	906590	CompoundStatement		466:7:13543:13576	903551	1					
ANR	906591	ExpressionStatement	* arg2 ++ = 0	5000:7:142424:142435	903551	0	True				
ANR	906592	AssignmentExpression	* arg2 ++ = 0		903551	0		=			
ANR	906593	UnaryOperationExpression	* arg2 ++		903551	0					
ANR	906594	UnaryOperator	*		903551	0					
ANR	906595	PostIncDecOperationExpression	arg2 ++		903551	1					
ANR	906596	Identifier	arg2		903551	0					
ANR	906597	IncDec	++		903551	1					
ANR	906598	PrimaryExpression	0		903551	1					
ANR	906599	IdentifierDeclStatement	"ut8 * a = getFileData ( core , arg ) ;"	5001:7:142444:142476	903551	1	True				
ANR	906600	IdentifierDecl	"* a = getFileData ( core , arg )"		903551	0					
ANR	906601	IdentifierDeclType	ut8 *		903551	0					
ANR	906602	Identifier	a		903551	1					
ANR	906603	AssignmentExpression	"* a = getFileData ( core , arg )"		903551	2		=			
ANR	906604	Identifier	a		903551	0					
ANR	906605	CallExpression	"getFileData ( core , arg )"		903551	1					
ANR	906606	Callee	getFileData		903551	0					
ANR	906607	Identifier	getFileData		903551	0					
ANR	906608	ArgumentList	core		903551	1					
ANR	906609	Argument	core		903551	0					
ANR	906610	Identifier	core		903551	0					
ANR	906611	Argument	arg		903551	1					
ANR	906612	Identifier	arg		903551	0					
ANR	906613	IdentifierDeclStatement	"ut8 * b = getFileData ( core , arg2 ) ;"	5002:7:142485:142518	903551	2	True				
ANR	906614	IdentifierDecl	"* b = getFileData ( core , arg2 )"		903551	0					
ANR	906615	IdentifierDeclType	ut8 *		903551	0					
ANR	906616	Identifier	b		903551	1					
ANR	906617	AssignmentExpression	"* b = getFileData ( core , arg2 )"		903551	2		=			
ANR	906618	Identifier	b		903551	0					
ANR	906619	CallExpression	"getFileData ( core , arg2 )"		903551	1					
ANR	906620	Callee	getFileData		903551	0					
ANR	906621	Identifier	getFileData		903551	0					
ANR	906622	ArgumentList	core		903551	1					
ANR	906623	Argument	core		903551	0					
ANR	906624	Identifier	core		903551	0					
ANR	906625	Argument	arg2		903551	1					
ANR	906626	Identifier	arg2		903551	0					
ANR	906627	IfStatement	if ( a && b )		903551	3					
ANR	906628	Condition	a && b	5003:11:142531:142536	903551	0	True				
ANR	906629	AndExpression	a && b		903551	0		&&			
ANR	906630	Identifier	a		903551	0					
ANR	906631	Identifier	b		903551	1					
ANR	906632	CompoundStatement		471:8:13725:13779	903551	1					
ANR	906633	IdentifierDeclStatement	int al = strlen ( ( const char * ) a ) ;	5004:8:142549:142581	903551	0	True				
ANR	906634	IdentifierDecl	al = strlen ( ( const char * ) a )		903551	0					
ANR	906635	IdentifierDeclType	int		903551	0					
ANR	906636	Identifier	al		903551	1					
ANR	906637	AssignmentExpression	al = strlen ( ( const char * ) a )		903551	2		=			
ANR	906638	Identifier	al		903551	0					
ANR	906639	CallExpression	strlen ( ( const char * ) a )		903551	1					
ANR	906640	Callee	strlen		903551	0					
ANR	906641	Identifier	strlen		903551	0					
ANR	906642	ArgumentList	( const char * ) a		903551	1					
ANR	906643	Argument	( const char * ) a		903551	0					
ANR	906644	CastExpression	( const char * ) a		903551	0					
ANR	906645	CastTarget	const char *		903551	0					
ANR	906646	Identifier	a		903551	1					
ANR	906647	IdentifierDeclStatement	int bl = strlen ( ( const char * ) b ) ;	5005:8:142591:142623	903551	1	True				
ANR	906648	IdentifierDecl	bl = strlen ( ( const char * ) b )		903551	0					
ANR	906649	IdentifierDeclType	int		903551	0					
ANR	906650	Identifier	bl		903551	1					
ANR	906651	AssignmentExpression	bl = strlen ( ( const char * ) b )		903551	2		=			
ANR	906652	Identifier	bl		903551	0					
ANR	906653	CallExpression	strlen ( ( const char * ) b )		903551	1					
ANR	906654	Callee	strlen		903551	0					
ANR	906655	Identifier	strlen		903551	0					
ANR	906656	ArgumentList	( const char * ) b		903551	1					
ANR	906657	Argument	( const char * ) b		903551	0					
ANR	906658	CastExpression	( const char * ) b		903551	0					
ANR	906659	CastTarget	const char *		903551	0					
ANR	906660	Identifier	b		903551	1					
ANR	906661	IdentifierDeclStatement	RDiff * d = r_diff_new ( ) ;	5006:8:142633:142657	903551	2	True				
ANR	906662	IdentifierDecl	* d = r_diff_new ( )		903551	0					
ANR	906663	IdentifierDeclType	RDiff *		903551	0					
ANR	906664	Identifier	d		903551	1					
ANR	906665	AssignmentExpression	* d = r_diff_new ( )		903551	2		=			
ANR	906666	Identifier	d		903551	0					
ANR	906667	CallExpression	r_diff_new ( )		903551	1					
ANR	906668	Callee	r_diff_new		903551	0					
ANR	906669	Identifier	r_diff_new		903551	0					
ANR	906670	ArgumentList			903551	1					
ANR	906671	IdentifierDeclStatement	"char * uni = r_diff_buffers_to_string ( d , a , al , b , bl ) ;"	5007:8:142667:142721	903551	3	True				
ANR	906672	IdentifierDecl	"* uni = r_diff_buffers_to_string ( d , a , al , b , bl )"		903551	0					
ANR	906673	IdentifierDeclType	char *		903551	0					
ANR	906674	Identifier	uni		903551	1					
ANR	906675	AssignmentExpression	"* uni = r_diff_buffers_to_string ( d , a , al , b , bl )"		903551	2		=			
ANR	906676	Identifier	uni		903551	0					
ANR	906677	CallExpression	"r_diff_buffers_to_string ( d , a , al , b , bl )"		903551	1					
ANR	906678	Callee	r_diff_buffers_to_string		903551	0					
ANR	906679	Identifier	r_diff_buffers_to_string		903551	0					
ANR	906680	ArgumentList	d		903551	1					
ANR	906681	Argument	d		903551	0					
ANR	906682	Identifier	d		903551	0					
ANR	906683	Argument	a		903551	1					
ANR	906684	Identifier	a		903551	0					
ANR	906685	Argument	al		903551	2					
ANR	906686	Identifier	al		903551	0					
ANR	906687	Argument	b		903551	3					
ANR	906688	Identifier	b		903551	0					
ANR	906689	Argument	bl		903551	4					
ANR	906690	Identifier	bl		903551	0					
ANR	906691	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , uni )"	5008:8:142731:142758	903551	4	True				
ANR	906692	CallExpression	"r_cons_printf ( ""%s\\n"" , uni )"		903551	0					
ANR	906693	Callee	r_cons_printf		903551	0					
ANR	906694	Identifier	r_cons_printf		903551	0					
ANR	906695	ArgumentList	"""%s\\n"""		903551	1					
ANR	906696	Argument	"""%s\\n"""		903551	0					
ANR	906697	PrimaryExpression	"""%s\\n"""		903551	0					
ANR	906698	Argument	uni		903551	1					
ANR	906699	Identifier	uni		903551	0					
ANR	906700	ExpressionStatement	r_diff_free ( d )	5009:8:142768:142783	903551	5	True				
ANR	906701	CallExpression	r_diff_free ( d )		903551	0					
ANR	906702	Callee	r_diff_free		903551	0					
ANR	906703	Identifier	r_diff_free		903551	0					
ANR	906704	ArgumentList	d		903551	1					
ANR	906705	Argument	d		903551	0					
ANR	906706	Identifier	d		903551	0					
ANR	906707	ExpressionStatement	free ( uni )	5010:8:142793:142803	903551	6	True				
ANR	906708	CallExpression	free ( uni )		903551	0					
ANR	906709	Callee	free		903551	0					
ANR	906710	Identifier	free		903551	0					
ANR	906711	ArgumentList	uni		903551	1					
ANR	906712	Argument	uni		903551	0					
ANR	906713	Identifier	uni		903551	0					
ANR	906714	ElseStatement	else		903551	0					
ANR	906715	CompoundStatement		475:14:13877:13877	903551	0					
ANR	906716	ExpressionStatement	"eprintf ( ""Cannot open those alias files\\n"" )"	5012:8:142829:142872	903551	0	True				
ANR	906717	CallExpression	"eprintf ( ""Cannot open those alias files\\n"" )"		903551	0					
ANR	906718	Callee	eprintf		903551	0					
ANR	906719	Identifier	eprintf		903551	0					
ANR	906720	ArgumentList	"""Cannot open those alias files\\n"""		903551	1					
ANR	906721	Argument	"""Cannot open those alias files\\n"""		903551	0					
ANR	906722	PrimaryExpression	"""Cannot open those alias files\\n"""		903551	0					
ANR	906723	ExpressionStatement	free ( arg )	5015:6:142897:142907	903551	3	True				
ANR	906724	CallExpression	free ( arg )		903551	0					
ANR	906725	Callee	free		903551	0					
ANR	906726	Identifier	free		903551	0					
ANR	906727	ArgumentList	arg		903551	1					
ANR	906728	Argument	arg		903551	0					
ANR	906729	Identifier	arg		903551	0					
ANR	906730	ElseStatement	else		903551	0					
ANR	906731	CompoundStatement		480:12:13979:13979	903551	0					
ANR	906732	ExpressionStatement	"eprintf ( ""Usage: dif $a $b  # diff two alias files\\n"" )"	5017:6:142929:142983	903551	0	True				
ANR	906733	CallExpression	"eprintf ( ""Usage: dif $a $b  # diff two alias files\\n"" )"		903551	0					
ANR	906734	Callee	eprintf		903551	0					
ANR	906735	Identifier	eprintf		903551	0					
ANR	906736	ArgumentList	"""Usage: dif $a $b  # diff two alias files\\n"""		903551	1					
ANR	906737	Argument	"""Usage: dif $a $b  # diff two alias files\\n"""		903551	0					
ANR	906738	PrimaryExpression	"""Usage: dif $a $b  # diff two alias files\\n"""		903551	0					
ANR	906739	BreakStatement	break ;	5020:4:143002:143007	903551	17	True				
ANR	906740	Label	case '*' :	5021:3:143012:143020	903551	18	True				
ANR	906741	IfStatement	if ( rdi )		903551	19					
ANR	906742	Condition	rdi	5022:8:143039:143041	903551	0	True				
ANR	906743	Identifier	rdi		903551	0					
ANR	906744	CompoundStatement		486:13:14102:14102	903551	1					
ANR	906745	ExpressionStatement	"r_cons_printf ( ""f dbg.signal = %d\\n"" , core -> dbg -> reason . signum )"	5023:5:143051:143114	903551	0	True				
ANR	906746	CallExpression	"r_cons_printf ( ""f dbg.signal = %d\\n"" , core -> dbg -> reason . signum )"		903551	0					
ANR	906747	Callee	r_cons_printf		903551	0					
ANR	906748	Identifier	r_cons_printf		903551	0					
ANR	906749	ArgumentList	"""f dbg.signal = %d\\n"""		903551	1					
ANR	906750	Argument	"""f dbg.signal = %d\\n"""		903551	0					
ANR	906751	PrimaryExpression	"""f dbg.signal = %d\\n"""		903551	0					
ANR	906752	Argument	core -> dbg -> reason . signum		903551	1					
ANR	906753	MemberAccess	core -> dbg -> reason . signum		903551	0					
ANR	906754	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	906755	PtrMemberAccess	core -> dbg		903551	0					
ANR	906756	Identifier	core		903551	0					
ANR	906757	Identifier	dbg		903551	1					
ANR	906758	Identifier	reason		903551	1					
ANR	906759	Identifier	signum		903551	1					
ANR	906760	ExpressionStatement	"r_cons_printf ( ""f dbg.sigpid = %d\\n"" , core -> dbg -> reason . tid )"	5024:5:143121:143181	903551	1	True				
ANR	906761	CallExpression	"r_cons_printf ( ""f dbg.sigpid = %d\\n"" , core -> dbg -> reason . tid )"		903551	0					
ANR	906762	Callee	r_cons_printf		903551	0					
ANR	906763	Identifier	r_cons_printf		903551	0					
ANR	906764	ArgumentList	"""f dbg.sigpid = %d\\n"""		903551	1					
ANR	906765	Argument	"""f dbg.sigpid = %d\\n"""		903551	0					
ANR	906766	PrimaryExpression	"""f dbg.sigpid = %d\\n"""		903551	0					
ANR	906767	Argument	core -> dbg -> reason . tid		903551	1					
ANR	906768	MemberAccess	core -> dbg -> reason . tid		903551	0					
ANR	906769	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	906770	PtrMemberAccess	core -> dbg		903551	0					
ANR	906771	Identifier	core		903551	0					
ANR	906772	Identifier	dbg		903551	1					
ANR	906773	Identifier	reason		903551	1					
ANR	906774	Identifier	tid		903551	1					
ANR	906775	ExpressionStatement	"r_cons_printf ( ""f dbg.inbp = %d\\n"" , core -> dbg -> reason . bp_addr ? 1 : 0 )"	5025:5:143188:143256	903551	2	True				
ANR	906776	CallExpression	"r_cons_printf ( ""f dbg.inbp = %d\\n"" , core -> dbg -> reason . bp_addr ? 1 : 0 )"		903551	0					
ANR	906777	Callee	r_cons_printf		903551	0					
ANR	906778	Identifier	r_cons_printf		903551	0					
ANR	906779	ArgumentList	"""f dbg.inbp = %d\\n"""		903551	1					
ANR	906780	Argument	"""f dbg.inbp = %d\\n"""		903551	0					
ANR	906781	PrimaryExpression	"""f dbg.inbp = %d\\n"""		903551	0					
ANR	906782	Argument	core -> dbg -> reason . bp_addr ? 1 : 0		903551	1					
ANR	906783	ConditionalExpression	core -> dbg -> reason . bp_addr ? 1 : 0		903551	0					
ANR	906784	Condition	core -> dbg -> reason . bp_addr		903551	0					
ANR	906785	MemberAccess	core -> dbg -> reason . bp_addr		903551	0					
ANR	906786	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	906787	PtrMemberAccess	core -> dbg		903551	0					
ANR	906788	Identifier	core		903551	0					
ANR	906789	Identifier	dbg		903551	1					
ANR	906790	Identifier	reason		903551	1					
ANR	906791	Identifier	bp_addr		903551	1					
ANR	906792	PrimaryExpression	1		903551	1					
ANR	906793	PrimaryExpression	0		903551	2					
ANR	906794	Statement	r_cons_printf	5026:5:143263:143275	903551	3	True				
ANR	906795	Statement	(	5026:19:143277:143277	903551	4	True				
ANR	906796	Statement	"""f dbg.sigaddr = 0x%"""	5026:20:143278:143298	903551	5	True				
ANR	906797	Statement	PFMT64x	5026:41:143299:143305	903551	6	True				
ANR	906798	Statement	"""\\n"""	5026:48:143306:143309	903551	7	True				
ANR	906799	Statement	","	5026:52:143310:143310	903551	8	True				
ANR	906800	Statement	core	5026:54:143312:143315	903551	9	True				
ANR	906801	Statement	->	5026:58:143316:143317	903551	10	True				
ANR	906802	Statement	dbg	5026:60:143318:143320	903551	11	True				
ANR	906803	Statement	->	5026:63:143321:143322	903551	12	True				
ANR	906804	Statement	reason	5026:65:143323:143328	903551	13	True				
ANR	906805	Statement	.	5026:71:143329:143329	903551	14	True				
ANR	906806	Statement	addr	5026:72:143330:143333	903551	15	True				
ANR	906807	Statement	)	5026:76:143334:143334	903551	16	True				
ANR	906808	ExpressionStatement		5026:77:143335:143335	903551	17	True				
ANR	906809	Statement	r_cons_printf	5027:5:143342:143354	903551	18	True				
ANR	906810	Statement	(	5027:19:143356:143356	903551	19	True				
ANR	906811	Statement	"""f dbg.baddr = 0x%"""	5027:20:143357:143375	903551	20	True				
ANR	906812	Statement	PFMT64x	5027:39:143376:143382	903551	21	True				
ANR	906813	Statement	"""\\n"""	5027:46:143383:143386	903551	22	True				
ANR	906814	Statement	","	5027:50:143387:143387	903551	23	True				
ANR	906815	Statement	r_debug_get_baddr	5027:52:143389:143405	903551	24	True				
ANR	906816	Statement	(	5027:70:143407:143407	903551	25	True				
ANR	906817	Statement	core	5027:71:143408:143411	903551	26	True				
ANR	906818	Statement	->	5027:75:143412:143413	903551	27	True				
ANR	906819	Statement	dbg	5027:77:143414:143416	903551	28	True				
ANR	906820	Statement	","	5027:80:143417:143417	903551	29	True				
ANR	906821	Statement	NULL	5027:82:143419:143422	903551	30	True				
ANR	906822	Statement	)	5027:86:143423:143423	903551	31	True				
ANR	906823	Statement	)	5027:87:143424:143424	903551	32	True				
ANR	906824	ExpressionStatement		5027:88:143425:143425	903551	33	True				
ANR	906825	ExpressionStatement	"r_cons_printf ( ""f dbg.pid = %d\\n"" , rdi -> pid )"	5028:5:143432:143476	903551	34	True				
ANR	906826	CallExpression	"r_cons_printf ( ""f dbg.pid = %d\\n"" , rdi -> pid )"		903551	0					
ANR	906827	Callee	r_cons_printf		903551	0					
ANR	906828	Identifier	r_cons_printf		903551	0					
ANR	906829	ArgumentList	"""f dbg.pid = %d\\n"""		903551	1					
ANR	906830	Argument	"""f dbg.pid = %d\\n"""		903551	0					
ANR	906831	PrimaryExpression	"""f dbg.pid = %d\\n"""		903551	0					
ANR	906832	Argument	rdi -> pid		903551	1					
ANR	906833	PtrMemberAccess	rdi -> pid		903551	0					
ANR	906834	Identifier	rdi		903551	0					
ANR	906835	Identifier	pid		903551	1					
ANR	906836	ExpressionStatement	"r_cons_printf ( ""f dbg.tid = %d\\n"" , rdi -> tid )"	5029:5:143483:143527	903551	35	True				
ANR	906837	CallExpression	"r_cons_printf ( ""f dbg.tid = %d\\n"" , rdi -> tid )"		903551	0					
ANR	906838	Callee	r_cons_printf		903551	0					
ANR	906839	Identifier	r_cons_printf		903551	0					
ANR	906840	ArgumentList	"""f dbg.tid = %d\\n"""		903551	1					
ANR	906841	Argument	"""f dbg.tid = %d\\n"""		903551	0					
ANR	906842	PrimaryExpression	"""f dbg.tid = %d\\n"""		903551	0					
ANR	906843	Argument	rdi -> tid		903551	1					
ANR	906844	PtrMemberAccess	rdi -> tid		903551	0					
ANR	906845	Identifier	rdi		903551	0					
ANR	906846	Identifier	tid		903551	1					
ANR	906847	ExpressionStatement	"r_cons_printf ( ""f dbg.uid = %d\\n"" , rdi -> uid )"	5030:5:143534:143578	903551	36	True				
ANR	906848	CallExpression	"r_cons_printf ( ""f dbg.uid = %d\\n"" , rdi -> uid )"		903551	0					
ANR	906849	Callee	r_cons_printf		903551	0					
ANR	906850	Identifier	r_cons_printf		903551	0					
ANR	906851	ArgumentList	"""f dbg.uid = %d\\n"""		903551	1					
ANR	906852	Argument	"""f dbg.uid = %d\\n"""		903551	0					
ANR	906853	PrimaryExpression	"""f dbg.uid = %d\\n"""		903551	0					
ANR	906854	Argument	rdi -> uid		903551	1					
ANR	906855	PtrMemberAccess	rdi -> uid		903551	0					
ANR	906856	Identifier	rdi		903551	0					
ANR	906857	Identifier	uid		903551	1					
ANR	906858	ExpressionStatement	"r_cons_printf ( ""f dbg.gid = %d\\n"" , rdi -> gid )"	5031:5:143585:143629	903551	37	True				
ANR	906859	CallExpression	"r_cons_printf ( ""f dbg.gid = %d\\n"" , rdi -> gid )"		903551	0					
ANR	906860	Callee	r_cons_printf		903551	0					
ANR	906861	Identifier	r_cons_printf		903551	0					
ANR	906862	ArgumentList	"""f dbg.gid = %d\\n"""		903551	1					
ANR	906863	Argument	"""f dbg.gid = %d\\n"""		903551	0					
ANR	906864	PrimaryExpression	"""f dbg.gid = %d\\n"""		903551	0					
ANR	906865	Argument	rdi -> gid		903551	1					
ANR	906866	PtrMemberAccess	rdi -> gid		903551	0					
ANR	906867	Identifier	rdi		903551	0					
ANR	906868	Identifier	gid		903551	1					
ANR	906869	BreakStatement	break ;	5033:4:143641:143646	903551	20	True				
ANR	906870	Label	case 'j' :	5034:3:143651:143659	903551	21	True				
ANR	906871	ExpressionStatement	"P ( ""{"" )"	5035:4:143674:143681	903551	22	True				
ANR	906872	CallExpression	"P ( ""{"" )"		903551	0					
ANR	906873	Callee	P		903551	0					
ANR	906874	Identifier	P		903551	0					
ANR	906875	ArgumentList	"""{"""		903551	1					
ANR	906876	Argument	"""{"""		903551	0					
ANR	906877	PrimaryExpression	"""{"""		903551	0					
ANR	906878	IfStatement	if ( rdi )		903551	23					
ANR	906879	Condition	rdi	5036:8:143691:143693	903551	0	True				
ANR	906880	Identifier	rdi		903551	0					
ANR	906881	CompoundStatement		501:5:14761:14822	903551	1					
ANR	906882	IdentifierDeclStatement	const char * s = r_signal_to_string ( core -> dbg -> reason . signum ) ;	5037:5:143703:143764	903551	0	True				
ANR	906883	IdentifierDecl	* s = r_signal_to_string ( core -> dbg -> reason . signum )		903551	0					
ANR	906884	IdentifierDeclType	const char *		903551	0					
ANR	906885	Identifier	s		903551	1					
ANR	906886	AssignmentExpression	* s = r_signal_to_string ( core -> dbg -> reason . signum )		903551	2		=			
ANR	906887	Identifier	s		903551	0					
ANR	906888	CallExpression	r_signal_to_string ( core -> dbg -> reason . signum )		903551	1					
ANR	906889	Callee	r_signal_to_string		903551	0					
ANR	906890	Identifier	r_signal_to_string		903551	0					
ANR	906891	ArgumentList	core -> dbg -> reason . signum		903551	1					
ANR	906892	Argument	core -> dbg -> reason . signum		903551	0					
ANR	906893	MemberAccess	core -> dbg -> reason . signum		903551	0					
ANR	906894	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	906895	PtrMemberAccess	core -> dbg		903551	0					
ANR	906896	Identifier	core		903551	0					
ANR	906897	Identifier	dbg		903551	1					
ANR	906898	Identifier	reason		903551	1					
ANR	906899	Identifier	signum		903551	1					
ANR	906900	ExpressionStatement	"P ( ""\\""type\\"":\\""%s\\"","" , r_debug_reason_to_string ( core -> dbg -> reason . type ) )"	5038:5:143771:143844	903551	1	True				
ANR	906901	CallExpression	"P ( ""\\""type\\"":\\""%s\\"","" , r_debug_reason_to_string ( core -> dbg -> reason . type ) )"		903551	0					
ANR	906902	Callee	P		903551	0					
ANR	906903	Identifier	P		903551	0					
ANR	906904	ArgumentList	"""\\""type\\"":\\""%s\\"","""		903551	1					
ANR	906905	Argument	"""\\""type\\"":\\""%s\\"","""		903551	0					
ANR	906906	PrimaryExpression	"""\\""type\\"":\\""%s\\"","""		903551	0					
ANR	906907	Argument	r_debug_reason_to_string ( core -> dbg -> reason . type )		903551	1					
ANR	906908	CallExpression	r_debug_reason_to_string ( core -> dbg -> reason . type )		903551	0					
ANR	906909	Callee	r_debug_reason_to_string		903551	0					
ANR	906910	Identifier	r_debug_reason_to_string		903551	0					
ANR	906911	ArgumentList	core -> dbg -> reason . type		903551	1					
ANR	906912	Argument	core -> dbg -> reason . type		903551	0					
ANR	906913	MemberAccess	core -> dbg -> reason . type		903551	0					
ANR	906914	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	906915	PtrMemberAccess	core -> dbg		903551	0					
ANR	906916	Identifier	core		903551	0					
ANR	906917	Identifier	dbg		903551	1					
ANR	906918	Identifier	reason		903551	1					
ANR	906919	Identifier	type		903551	1					
ANR	906920	ExpressionStatement	"P ( ""\\""signal\\"":\\""%s\\"","" , s ? s : ""none"" )"	5039:5:143851:143889	903551	2	True				
ANR	906921	CallExpression	"P ( ""\\""signal\\"":\\""%s\\"","" , s ? s : ""none"" )"		903551	0					
ANR	906922	Callee	P		903551	0					
ANR	906923	Identifier	P		903551	0					
ANR	906924	ArgumentList	"""\\""signal\\"":\\""%s\\"","""		903551	1					
ANR	906925	Argument	"""\\""signal\\"":\\""%s\\"","""		903551	0					
ANR	906926	PrimaryExpression	"""\\""signal\\"":\\""%s\\"","""		903551	0					
ANR	906927	Argument	"s ? s : ""none"""		903551	1					
ANR	906928	ConditionalExpression	"s ? s : ""none"""		903551	0					
ANR	906929	Condition	s		903551	0					
ANR	906930	Identifier	s		903551	0					
ANR	906931	Identifier	s		903551	1					
ANR	906932	PrimaryExpression	"""none"""		903551	2					
ANR	906933	ExpressionStatement	"P ( ""\\""signum\\"":%d,"" , core -> dbg -> reason . signum )"	5040:5:143896:143942	903551	3	True				
ANR	906934	CallExpression	"P ( ""\\""signum\\"":%d,"" , core -> dbg -> reason . signum )"		903551	0					
ANR	906935	Callee	P		903551	0					
ANR	906936	Identifier	P		903551	0					
ANR	906937	ArgumentList	"""\\""signum\\"":%d,"""		903551	1					
ANR	906938	Argument	"""\\""signum\\"":%d,"""		903551	0					
ANR	906939	PrimaryExpression	"""\\""signum\\"":%d,"""		903551	0					
ANR	906940	Argument	core -> dbg -> reason . signum		903551	1					
ANR	906941	MemberAccess	core -> dbg -> reason . signum		903551	0					
ANR	906942	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	906943	PtrMemberAccess	core -> dbg		903551	0					
ANR	906944	Identifier	core		903551	0					
ANR	906945	Identifier	dbg		903551	1					
ANR	906946	Identifier	reason		903551	1					
ANR	906947	Identifier	signum		903551	1					
ANR	906948	ExpressionStatement	"P ( ""\\""sigpid\\"":%d,"" , core -> dbg -> reason . tid )"	5041:5:143949:143992	903551	4	True				
ANR	906949	CallExpression	"P ( ""\\""sigpid\\"":%d,"" , core -> dbg -> reason . tid )"		903551	0					
ANR	906950	Callee	P		903551	0					
ANR	906951	Identifier	P		903551	0					
ANR	906952	ArgumentList	"""\\""sigpid\\"":%d,"""		903551	1					
ANR	906953	Argument	"""\\""sigpid\\"":%d,"""		903551	0					
ANR	906954	PrimaryExpression	"""\\""sigpid\\"":%d,"""		903551	0					
ANR	906955	Argument	core -> dbg -> reason . tid		903551	1					
ANR	906956	MemberAccess	core -> dbg -> reason . tid		903551	0					
ANR	906957	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	906958	PtrMemberAccess	core -> dbg		903551	0					
ANR	906959	Identifier	core		903551	0					
ANR	906960	Identifier	dbg		903551	1					
ANR	906961	Identifier	reason		903551	1					
ANR	906962	Identifier	tid		903551	1					
ANR	906963	Statement	P	5042:5:143999:143999	903551	5	True				
ANR	906964	Statement	(	5042:7:144001:144001	903551	6	True				
ANR	906965	Statement	"""\\""addr\\"":%"""	5042:8:144002:144013	903551	7	True				
ANR	906966	Statement	PFMT64d	5042:20:144014:144020	903551	8	True				
ANR	906967	Statement	""","""	5042:27:144021:144023	903551	9	True				
ANR	906968	Statement	","	5042:30:144024:144024	903551	10	True				
ANR	906969	Statement	core	5042:32:144026:144029	903551	11	True				
ANR	906970	Statement	->	5042:36:144030:144031	903551	12	True				
ANR	906971	Statement	dbg	5042:38:144032:144034	903551	13	True				
ANR	906972	Statement	->	5042:41:144035:144036	903551	14	True				
ANR	906973	Statement	reason	5042:43:144037:144042	903551	15	True				
ANR	906974	Statement	.	5042:49:144043:144043	903551	16	True				
ANR	906975	Statement	addr	5042:50:144044:144047	903551	17	True				
ANR	906976	Statement	)	5042:54:144048:144048	903551	18	True				
ANR	906977	ExpressionStatement		5042:55:144049:144049	903551	19	True				
ANR	906978	ExpressionStatement	"P ( ""\\""inbp\\"":%s,"" , r_str_bool ( core -> dbg -> reason . bp_addr ) )"	5043:5:144056:144114	903551	20	True				
ANR	906979	CallExpression	"P ( ""\\""inbp\\"":%s,"" , r_str_bool ( core -> dbg -> reason . bp_addr ) )"		903551	0					
ANR	906980	Callee	P		903551	0					
ANR	906981	Identifier	P		903551	0					
ANR	906982	ArgumentList	"""\\""inbp\\"":%s,"""		903551	1					
ANR	906983	Argument	"""\\""inbp\\"":%s,"""		903551	0					
ANR	906984	PrimaryExpression	"""\\""inbp\\"":%s,"""		903551	0					
ANR	906985	Argument	r_str_bool ( core -> dbg -> reason . bp_addr )		903551	1					
ANR	906986	CallExpression	r_str_bool ( core -> dbg -> reason . bp_addr )		903551	0					
ANR	906987	Callee	r_str_bool		903551	0					
ANR	906988	Identifier	r_str_bool		903551	0					
ANR	906989	ArgumentList	core -> dbg -> reason . bp_addr		903551	1					
ANR	906990	Argument	core -> dbg -> reason . bp_addr		903551	0					
ANR	906991	MemberAccess	core -> dbg -> reason . bp_addr		903551	0					
ANR	906992	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	906993	PtrMemberAccess	core -> dbg		903551	0					
ANR	906994	Identifier	core		903551	0					
ANR	906995	Identifier	dbg		903551	1					
ANR	906996	Identifier	reason		903551	1					
ANR	906997	Identifier	bp_addr		903551	1					
ANR	906998	Statement	P	5044:5:144121:144121	903551	21	True				
ANR	906999	Statement	(	5044:7:144123:144123	903551	22	True				
ANR	907000	Statement	"""\\""baddr\\"":%"""	5044:8:144124:144136	903551	23	True				
ANR	907001	Statement	PFMT64d	5044:21:144137:144143	903551	24	True				
ANR	907002	Statement	""","""	5044:28:144144:144146	903551	25	True				
ANR	907003	Statement	","	5044:31:144147:144147	903551	26	True				
ANR	907004	Statement	r_debug_get_baddr	5044:33:144149:144165	903551	27	True				
ANR	907005	Statement	(	5044:51:144167:144167	903551	28	True				
ANR	907006	Statement	core	5044:52:144168:144171	903551	29	True				
ANR	907007	Statement	->	5044:56:144172:144173	903551	30	True				
ANR	907008	Statement	dbg	5044:58:144174:144176	903551	31	True				
ANR	907009	Statement	","	5044:61:144177:144177	903551	32	True				
ANR	907010	Statement	NULL	5044:63:144179:144182	903551	33	True				
ANR	907011	Statement	)	5044:67:144183:144183	903551	34	True				
ANR	907012	Statement	)	5044:68:144184:144184	903551	35	True				
ANR	907013	ExpressionStatement		5044:69:144185:144185	903551	36	True				
ANR	907014	Statement	P	5045:5:144192:144192	903551	37	True				
ANR	907015	Statement	(	5045:7:144194:144194	903551	38	True				
ANR	907016	Statement	"""\\""stopaddr\\"":%"""	5045:8:144195:144210	903551	39	True				
ANR	907017	Statement	PFMT64d	5045:24:144211:144217	903551	40	True				
ANR	907018	Statement	""","""	5045:31:144218:144220	903551	41	True				
ANR	907019	Statement	","	5045:34:144221:144221	903551	42	True				
ANR	907020	Statement	core	5045:36:144223:144226	903551	43	True				
ANR	907021	Statement	->	5045:40:144227:144228	903551	44	True				
ANR	907022	Statement	dbg	5045:42:144229:144231	903551	45	True				
ANR	907023	Statement	->	5045:45:144232:144233	903551	46	True				
ANR	907024	Statement	stopaddr	5045:47:144234:144241	903551	47	True				
ANR	907025	Statement	)	5045:55:144242:144242	903551	48	True				
ANR	907026	ExpressionStatement		5045:56:144243:144243	903551	49	True				
ANR	907027	ExpressionStatement	"P ( ""\\""pid\\"":%d,"" , rdi -> pid )"	5046:5:144250:144277	903551	50	True				
ANR	907028	CallExpression	"P ( ""\\""pid\\"":%d,"" , rdi -> pid )"		903551	0					
ANR	907029	Callee	P		903551	0					
ANR	907030	Identifier	P		903551	0					
ANR	907031	ArgumentList	"""\\""pid\\"":%d,"""		903551	1					
ANR	907032	Argument	"""\\""pid\\"":%d,"""		903551	0					
ANR	907033	PrimaryExpression	"""\\""pid\\"":%d,"""		903551	0					
ANR	907034	Argument	rdi -> pid		903551	1					
ANR	907035	PtrMemberAccess	rdi -> pid		903551	0					
ANR	907036	Identifier	rdi		903551	0					
ANR	907037	Identifier	pid		903551	1					
ANR	907038	ExpressionStatement	"P ( ""\\""tid\\"":%d,"" , rdi -> tid )"	5047:5:144284:144311	903551	51	True				
ANR	907039	CallExpression	"P ( ""\\""tid\\"":%d,"" , rdi -> tid )"		903551	0					
ANR	907040	Callee	P		903551	0					
ANR	907041	Identifier	P		903551	0					
ANR	907042	ArgumentList	"""\\""tid\\"":%d,"""		903551	1					
ANR	907043	Argument	"""\\""tid\\"":%d,"""		903551	0					
ANR	907044	PrimaryExpression	"""\\""tid\\"":%d,"""		903551	0					
ANR	907045	Argument	rdi -> tid		903551	1					
ANR	907046	PtrMemberAccess	rdi -> tid		903551	0					
ANR	907047	Identifier	rdi		903551	0					
ANR	907048	Identifier	tid		903551	1					
ANR	907049	ExpressionStatement	"P ( ""\\""uid\\"":%d,"" , rdi -> uid )"	5048:5:144318:144345	903551	52	True				
ANR	907050	CallExpression	"P ( ""\\""uid\\"":%d,"" , rdi -> uid )"		903551	0					
ANR	907051	Callee	P		903551	0					
ANR	907052	Identifier	P		903551	0					
ANR	907053	ArgumentList	"""\\""uid\\"":%d,"""		903551	1					
ANR	907054	Argument	"""\\""uid\\"":%d,"""		903551	0					
ANR	907055	PrimaryExpression	"""\\""uid\\"":%d,"""		903551	0					
ANR	907056	Argument	rdi -> uid		903551	1					
ANR	907057	PtrMemberAccess	rdi -> uid		903551	0					
ANR	907058	Identifier	rdi		903551	0					
ANR	907059	Identifier	uid		903551	1					
ANR	907060	ExpressionStatement	"P ( ""\\""gid\\"":%d,"" , rdi -> gid )"	5049:5:144352:144379	903551	53	True				
ANR	907061	CallExpression	"P ( ""\\""gid\\"":%d,"" , rdi -> gid )"		903551	0					
ANR	907062	Callee	P		903551	0					
ANR	907063	Identifier	P		903551	0					
ANR	907064	ArgumentList	"""\\""gid\\"":%d,"""		903551	1					
ANR	907065	Argument	"""\\""gid\\"":%d,"""		903551	0					
ANR	907066	PrimaryExpression	"""\\""gid\\"":%d,"""		903551	0					
ANR	907067	Argument	rdi -> gid		903551	1					
ANR	907068	PtrMemberAccess	rdi -> gid		903551	0					
ANR	907069	Identifier	rdi		903551	0					
ANR	907070	Identifier	gid		903551	1					
ANR	907071	IfStatement	if ( rdi -> usr )		903551	54					
ANR	907072	Condition	rdi -> usr	5050:9:144390:144397	903551	0	True				
ANR	907073	PtrMemberAccess	rdi -> usr		903551	0					
ANR	907074	Identifier	rdi		903551	0					
ANR	907075	Identifier	usr		903551	1					
ANR	907076	CompoundStatement		514:19:15458:15458	903551	1					
ANR	907077	ExpressionStatement	"PS ( ""\\""usr\\"":\\""%s\\"","" , rdi -> usr )"	5051:6:144408:144439	903551	0	True				
ANR	907078	CallExpression	"PS ( ""\\""usr\\"":\\""%s\\"","" , rdi -> usr )"		903551	0					
ANR	907079	Callee	PS		903551	0					
ANR	907080	Identifier	PS		903551	0					
ANR	907081	ArgumentList	"""\\""usr\\"":\\""%s\\"","""		903551	1					
ANR	907082	Argument	"""\\""usr\\"":\\""%s\\"","""		903551	0					
ANR	907083	PrimaryExpression	"""\\""usr\\"":\\""%s\\"","""		903551	0					
ANR	907084	Argument	rdi -> usr		903551	1					
ANR	907085	PtrMemberAccess	rdi -> usr		903551	0					
ANR	907086	Identifier	rdi		903551	0					
ANR	907087	Identifier	usr		903551	1					
ANR	907088	IfStatement	if ( rdi -> exe )		903551	55					
ANR	907089	Condition	rdi -> exe	5053:9:144457:144464	903551	0	True				
ANR	907090	PtrMemberAccess	rdi -> exe		903551	0					
ANR	907091	Identifier	rdi		903551	0					
ANR	907092	Identifier	exe		903551	1					
ANR	907093	CompoundStatement		517:19:15525:15525	903551	1					
ANR	907094	ExpressionStatement	"PS ( ""\\""exe\\"":\\""%s\\"","" , rdi -> exe )"	5054:6:144475:144506	903551	0	True				
ANR	907095	CallExpression	"PS ( ""\\""exe\\"":\\""%s\\"","" , rdi -> exe )"		903551	0					
ANR	907096	Callee	PS		903551	0					
ANR	907097	Identifier	PS		903551	0					
ANR	907098	ArgumentList	"""\\""exe\\"":\\""%s\\"","""		903551	1					
ANR	907099	Argument	"""\\""exe\\"":\\""%s\\"","""		903551	0					
ANR	907100	PrimaryExpression	"""\\""exe\\"":\\""%s\\"","""		903551	0					
ANR	907101	Argument	rdi -> exe		903551	1					
ANR	907102	PtrMemberAccess	rdi -> exe		903551	0					
ANR	907103	Identifier	rdi		903551	0					
ANR	907104	Identifier	exe		903551	1					
ANR	907105	IfStatement	if ( rdi -> cmdline )		903551	56					
ANR	907106	Condition	rdi -> cmdline	5056:9:144524:144535	903551	0	True				
ANR	907107	PtrMemberAccess	rdi -> cmdline		903551	0					
ANR	907108	Identifier	rdi		903551	0					
ANR	907109	Identifier	cmdline		903551	1					
ANR	907110	CompoundStatement		520:23:15596:15596	903551	1					
ANR	907111	ExpressionStatement	"PS ( ""\\""cmdline\\"":\\""%s\\"","" , rdi -> cmdline )"	5057:6:144546:144586	903551	0	True				
ANR	907112	CallExpression	"PS ( ""\\""cmdline\\"":\\""%s\\"","" , rdi -> cmdline )"		903551	0					
ANR	907113	Callee	PS		903551	0					
ANR	907114	Identifier	PS		903551	0					
ANR	907115	ArgumentList	"""\\""cmdline\\"":\\""%s\\"","""		903551	1					
ANR	907116	Argument	"""\\""cmdline\\"":\\""%s\\"","""		903551	0					
ANR	907117	PrimaryExpression	"""\\""cmdline\\"":\\""%s\\"","""		903551	0					
ANR	907118	Argument	rdi -> cmdline		903551	1					
ANR	907119	PtrMemberAccess	rdi -> cmdline		903551	0					
ANR	907120	Identifier	rdi		903551	0					
ANR	907121	Identifier	cmdline		903551	1					
ANR	907122	IfStatement	if ( rdi -> cwd )		903551	57					
ANR	907123	Condition	rdi -> cwd	5059:9:144604:144611	903551	0	True				
ANR	907124	PtrMemberAccess	rdi -> cwd		903551	0					
ANR	907125	Identifier	rdi		903551	0					
ANR	907126	Identifier	cwd		903551	1					
ANR	907127	CompoundStatement		523:19:15672:15672	903551	1					
ANR	907128	ExpressionStatement	"PS ( ""\\""cwd\\"":\\""%s\\"","" , rdi -> cwd )"	5060:6:144622:144654	903551	0	True				
ANR	907129	CallExpression	"PS ( ""\\""cwd\\"":\\""%s\\"","" , rdi -> cwd )"		903551	0					
ANR	907130	Callee	PS		903551	0					
ANR	907131	Identifier	PS		903551	0					
ANR	907132	ArgumentList	"""\\""cwd\\"":\\""%s\\"","""		903551	1					
ANR	907133	Argument	"""\\""cwd\\"":\\""%s\\"","""		903551	0					
ANR	907134	PrimaryExpression	"""\\""cwd\\"":\\""%s\\"","""		903551	0					
ANR	907135	Argument	rdi -> cwd		903551	1					
ANR	907136	PtrMemberAccess	rdi -> cwd		903551	0					
ANR	907137	Identifier	rdi		903551	0					
ANR	907138	Identifier	cwd		903551	1					
ANR	907139	ExpressionStatement	"P ( ""\\""stopreason\\"":%d}\\n"" , stop )"	5063:4:144673:144705	903551	24	True				
ANR	907140	CallExpression	"P ( ""\\""stopreason\\"":%d}\\n"" , stop )"		903551	0					
ANR	907141	Callee	P		903551	0					
ANR	907142	Identifier	P		903551	0					
ANR	907143	ArgumentList	"""\\""stopreason\\"":%d}\\n"""		903551	1					
ANR	907144	Argument	"""\\""stopreason\\"":%d}\\n"""		903551	0					
ANR	907145	PrimaryExpression	"""\\""stopreason\\"":%d}\\n"""		903551	0					
ANR	907146	Argument	stop		903551	1					
ANR	907147	Identifier	stop		903551	0					
ANR	907148	BreakStatement	break ;	5064:4:144711:144716	903551	25	True				
ANR	907149	Statement	undef	5065:1:144719:144723	903551	26	True				
ANR	907150	Statement	P	5065:7:144725:144725	903551	27	True				
ANR	907151	Statement	undef	5066:1:144728:144732	903551	28	True				
ANR	907152	Statement	PS	5066:7:144734:144735	903551	29	True				
ANR	907153	Label	case 'q' :	5067:3:144740:144748	903551	30	True				
ANR	907154	CompoundStatement		533:5:15819:15884	903551	31					
ANR	907155	IdentifierDeclStatement	const char * r = r_debug_reason_to_string ( core -> dbg -> reason . type ) ;	5069:5:144761:144826	903551	0	True				
ANR	907156	IdentifierDecl	* r = r_debug_reason_to_string ( core -> dbg -> reason . type )		903551	0					
ANR	907157	IdentifierDeclType	const char *		903551	0					
ANR	907158	Identifier	r		903551	1					
ANR	907159	AssignmentExpression	* r = r_debug_reason_to_string ( core -> dbg -> reason . type )		903551	2		=			
ANR	907160	Identifier	r		903551	0					
ANR	907161	CallExpression	r_debug_reason_to_string ( core -> dbg -> reason . type )		903551	1					
ANR	907162	Callee	r_debug_reason_to_string		903551	0					
ANR	907163	Identifier	r_debug_reason_to_string		903551	0					
ANR	907164	ArgumentList	core -> dbg -> reason . type		903551	1					
ANR	907165	Argument	core -> dbg -> reason . type		903551	0					
ANR	907166	MemberAccess	core -> dbg -> reason . type		903551	0					
ANR	907167	PtrMemberAccess	core -> dbg -> reason		903551	0					
ANR	907168	PtrMemberAccess	core -> dbg		903551	0					
ANR	907169	Identifier	core		903551	0					
ANR	907170	Identifier	dbg		903551	1					
ANR	907171	Identifier	reason		903551	1					
ANR	907172	Identifier	type		903551	1					
ANR	907173	IfStatement	if ( ! r )		903551	1					
ANR	907174	Condition	! r	5070:9:144837:144838	903551	0	True				
ANR	907175	UnaryOperationExpression	! r		903551	0					
ANR	907176	UnaryOperator	!		903551	0					
ANR	907177	Identifier	r		903551	1					
ANR	907178	CompoundStatement		534:13:15899:15899	903551	1					
ANR	907179	ExpressionStatement	"r = ""none"""	5071:6:144849:144859	903551	0	True				
ANR	907180	AssignmentExpression	"r = ""none"""		903551	0		=			
ANR	907181	Identifier	r		903551	0					
ANR	907182	PrimaryExpression	"""none"""		903551	1					
ANR	907183	Statement	r_cons_printf	5073:5:144873:144885	903551	2	True				
ANR	907184	Statement	(	5073:19:144887:144887	903551	3	True				
ANR	907185	Statement	"""%s at 0x%08"""	5073:20:144888:144900	903551	4	True				
ANR	907186	Statement	PFMT64x	5073:33:144901:144907	903551	5	True				
ANR	907187	Statement	"""\\n"""	5073:40:144908:144911	903551	6	True				
ANR	907188	Statement	","	5073:44:144912:144912	903551	7	True				
ANR	907189	Statement	r	5073:46:144914:144914	903551	8	True				
ANR	907190	Statement	","	5073:47:144915:144915	903551	9	True				
ANR	907191	Statement	core	5073:49:144917:144920	903551	10	True				
ANR	907192	Statement	->	5073:53:144921:144922	903551	11	True				
ANR	907193	Statement	dbg	5073:55:144923:144925	903551	12	True				
ANR	907194	Statement	->	5073:58:144926:144927	903551	13	True				
ANR	907195	Statement	stopaddr	5073:60:144928:144935	903551	14	True				
ANR	907196	Statement	)	5073:68:144936:144936	903551	15	True				
ANR	907197	ExpressionStatement		5073:69:144937:144937	903551	16	True				
ANR	907198	BreakStatement	break ;	5075:4:144949:144954	903551	32	True				
ANR	907199	Label	case '?' :	5076:3:144959:144967	903551	33	True				
ANR	907200	Label	default :	5077:3:144981:144988	903551	34	True				
ANR	907201	Identifier	default		903551	0					
ANR	907202	ExpressionStatement	"r_core_cmd_help ( core , help_msg_di )"	5078:4:144994:145029	903551	35	True				
ANR	907203	CallExpression	"r_core_cmd_help ( core , help_msg_di )"		903551	0					
ANR	907204	Callee	r_core_cmd_help		903551	0					
ANR	907205	Identifier	r_core_cmd_help		903551	0					
ANR	907206	ArgumentList	core		903551	1					
ANR	907207	Argument	core		903551	0					
ANR	907208	Identifier	core		903551	0					
ANR	907209	Argument	help_msg_di		903551	1					
ANR	907210	Identifier	help_msg_di		903551	0					
ANR	907211	BreakStatement	break ;	5079:4:145035:145040	903551	36	True				
ANR	907212	ExpressionStatement	r_debug_info_free ( rdi )	5081:3:145050:145073	903551	4	True				
ANR	907213	CallExpression	r_debug_info_free ( rdi )		903551	0					
ANR	907214	Callee	r_debug_info_free		903551	0					
ANR	907215	Identifier	r_debug_info_free		903551	0					
ANR	907216	ArgumentList	rdi		903551	1					
ANR	907217	Argument	rdi		903551	0					
ANR	907218	Identifier	rdi		903551	0					
ANR	907219	BreakStatement	break ;	5083:2:145081:145086	903551	35	True				
ANR	907220	Label	case 'e' :	5084:1:145089:145097	903551	36	True				
ANR	907221	ExpressionStatement	"r_core_debug_esil ( core , input + 1 )"	5085:2:145109:145144	903551	37	True				
ANR	907222	CallExpression	"r_core_debug_esil ( core , input + 1 )"		903551	0					
ANR	907223	Callee	r_core_debug_esil		903551	0					
ANR	907224	Identifier	r_core_debug_esil		903551	0					
ANR	907225	ArgumentList	core		903551	1					
ANR	907226	Argument	core		903551	0					
ANR	907227	Identifier	core		903551	0					
ANR	907228	Argument	input + 1		903551	1					
ANR	907229	AdditiveExpression	input + 1		903551	0		+			
ANR	907230	Identifier	input		903551	0					
ANR	907231	PrimaryExpression	1		903551	1					
ANR	907232	BreakStatement	break ;	5086:2:145148:145153	903551	38	True				
ANR	907233	Label	case 'g' :	5087:1:145156:145164	903551	39	True				
ANR	907234	IfStatement	if ( core -> dbg -> h && core -> dbg -> h -> gcore )		903551	40					
ANR	907235	Condition	core -> dbg -> h && core -> dbg -> h -> gcore	5088:6:145180:145214	903551	0	True				
ANR	907236	AndExpression	core -> dbg -> h && core -> dbg -> h -> gcore		903551	0		&&			
ANR	907237	PtrMemberAccess	core -> dbg -> h		903551	0					
ANR	907238	PtrMemberAccess	core -> dbg		903551	0					
ANR	907239	Identifier	core		903551	0					
ANR	907240	Identifier	dbg		903551	1					
ANR	907241	Identifier	h		903551	1					
ANR	907242	PtrMemberAccess	core -> dbg -> h -> gcore		903551	1					
ANR	907243	PtrMemberAccess	core -> dbg -> h		903551	0					
ANR	907244	PtrMemberAccess	core -> dbg		903551	0					
ANR	907245	Identifier	core		903551	0					
ANR	907246	Identifier	dbg		903551	1					
ANR	907247	Identifier	h		903551	1					
ANR	907248	Identifier	gcore		903551	1					
ANR	907249	CompoundStatement		560:3:16520:16584	903551	1					
ANR	907250	IfStatement	if ( core -> dbg -> pid == - 1 )		903551	0					
ANR	907251	Condition	core -> dbg -> pid == - 1	5089:7:145226:145245	903551	0	True				
ANR	907252	EqualityExpression	core -> dbg -> pid == - 1		903551	0		==			
ANR	907253	PtrMemberAccess	core -> dbg -> pid		903551	0					
ANR	907254	PtrMemberAccess	core -> dbg		903551	0					
ANR	907255	Identifier	core		903551	0					
ANR	907256	Identifier	dbg		903551	1					
ANR	907257	Identifier	pid		903551	1					
ANR	907258	UnaryOperationExpression	- 1		903551	1					
ANR	907259	UnaryOperator	-		903551	0					
ANR	907260	PrimaryExpression	1		903551	1					
ANR	907261	CompoundStatement		553:29:16306:16306	903551	1					
ANR	907262	ExpressionStatement	"eprintf ( ""Not debugging, can't write core.\\n"" )"	5090:4:145254:145300	903551	0	True				
ANR	907263	CallExpression	"eprintf ( ""Not debugging, can't write core.\\n"" )"		903551	0					
ANR	907264	Callee	eprintf		903551	0					
ANR	907265	Identifier	eprintf		903551	0					
ANR	907266	ArgumentList	"""Not debugging, can't write core.\\n"""		903551	1					
ANR	907267	Argument	"""Not debugging, can't write core.\\n"""		903551	0					
ANR	907268	PrimaryExpression	"""Not debugging, can't write core.\\n"""		903551	0					
ANR	907269	BreakStatement	break ;	5091:4:145306:145311	903551	1	True				
ANR	907270	IdentifierDeclStatement	"char * corefile = get_corefile_name ( input + 1 , core -> dbg -> pid ) ;"	5093:3:145321:145383	903551	1	True				
ANR	907271	IdentifierDecl	"* corefile = get_corefile_name ( input + 1 , core -> dbg -> pid )"		903551	0					
ANR	907272	IdentifierDeclType	char *		903551	0					
ANR	907273	Identifier	corefile		903551	1					
ANR	907274	AssignmentExpression	"* corefile = get_corefile_name ( input + 1 , core -> dbg -> pid )"		903551	2		=			
ANR	907275	Identifier	corefile		903551	0					
ANR	907276	CallExpression	"get_corefile_name ( input + 1 , core -> dbg -> pid )"		903551	1					
ANR	907277	Callee	get_corefile_name		903551	0					
ANR	907278	Identifier	get_corefile_name		903551	0					
ANR	907279	ArgumentList	input + 1		903551	1					
ANR	907280	Argument	input + 1		903551	0					
ANR	907281	AdditiveExpression	input + 1		903551	0		+			
ANR	907282	Identifier	input		903551	0					
ANR	907283	PrimaryExpression	1		903551	1					
ANR	907284	Argument	core -> dbg -> pid		903551	1					
ANR	907285	PtrMemberAccess	core -> dbg -> pid		903551	0					
ANR	907286	PtrMemberAccess	core -> dbg		903551	0					
ANR	907287	Identifier	core		903551	0					
ANR	907288	Identifier	dbg		903551	1					
ANR	907289	Identifier	pid		903551	1					
ANR	907290	ExpressionStatement	"eprintf ( ""Writing to file '%s'\\n"" , corefile )"	5094:3:145388:145432	903551	2	True				
ANR	907291	CallExpression	"eprintf ( ""Writing to file '%s'\\n"" , corefile )"		903551	0					
ANR	907292	Callee	eprintf		903551	0					
ANR	907293	Identifier	eprintf		903551	0					
ANR	907294	ArgumentList	"""Writing to file '%s'\\n"""		903551	1					
ANR	907295	Argument	"""Writing to file '%s'\\n"""		903551	0					
ANR	907296	PrimaryExpression	"""Writing to file '%s'\\n"""		903551	0					
ANR	907297	Argument	corefile		903551	1					
ANR	907298	Identifier	corefile		903551	0					
ANR	907299	ExpressionStatement	r_file_rm ( corefile )	5095:3:145437:145457	903551	3	True				
ANR	907300	CallExpression	r_file_rm ( corefile )		903551	0					
ANR	907301	Callee	r_file_rm		903551	0					
ANR	907302	Identifier	r_file_rm		903551	0					
ANR	907303	ArgumentList	corefile		903551	1					
ANR	907304	Argument	corefile		903551	0					
ANR	907305	Identifier	corefile		903551	0					
ANR	907306	IdentifierDeclStatement	"RBuffer * dst = r_buf_new_file ( corefile , O_RDWR | O_CREAT , 0644 ) ;"	5096:3:145462:145526	903551	4	True				
ANR	907307	IdentifierDecl	"* dst = r_buf_new_file ( corefile , O_RDWR | O_CREAT , 0644 )"		903551	0					
ANR	907308	IdentifierDeclType	RBuffer *		903551	0					
ANR	907309	Identifier	dst		903551	1					
ANR	907310	AssignmentExpression	"* dst = r_buf_new_file ( corefile , O_RDWR | O_CREAT , 0644 )"		903551	2		=			
ANR	907311	Identifier	dst		903551	0					
ANR	907312	CallExpression	"r_buf_new_file ( corefile , O_RDWR | O_CREAT , 0644 )"		903551	1					
ANR	907313	Callee	r_buf_new_file		903551	0					
ANR	907314	Identifier	r_buf_new_file		903551	0					
ANR	907315	ArgumentList	corefile		903551	1					
ANR	907316	Argument	corefile		903551	0					
ANR	907317	Identifier	corefile		903551	0					
ANR	907318	Argument	O_RDWR | O_CREAT		903551	1					
ANR	907319	InclusiveOrExpression	O_RDWR | O_CREAT		903551	0		|			
ANR	907320	Identifier	O_RDWR		903551	0					
ANR	907321	Identifier	O_CREAT		903551	1					
ANR	907322	Argument	0644		903551	2					
ANR	907323	PrimaryExpression	0644		903551	0					
ANR	907324	IfStatement	if ( dst )		903551	5					
ANR	907325	Condition	dst	5097:7:145535:145537	903551	0	True				
ANR	907326	Identifier	dst		903551	0					
ANR	907327	CompoundStatement		561:12:16598:16598	903551	1					
ANR	907328	IfStatement	"if ( ! core -> dbg -> h -> gcore ( core -> dbg , dst ) )"		903551	0					
ANR	907329	Condition	"! core -> dbg -> h -> gcore ( core -> dbg , dst )"	5098:8:145550:145586	903551	0	True				
ANR	907330	UnaryOperationExpression	"! core -> dbg -> h -> gcore ( core -> dbg , dst )"		903551	0					
ANR	907331	UnaryOperator	!		903551	0					
ANR	907332	CallExpression	"core -> dbg -> h -> gcore ( core -> dbg , dst )"		903551	1					
ANR	907333	Callee	core -> dbg -> h -> gcore		903551	0					
ANR	907334	PtrMemberAccess	core -> dbg -> h -> gcore		903551	0					
ANR	907335	PtrMemberAccess	core -> dbg -> h		903551	0					
ANR	907336	PtrMemberAccess	core -> dbg		903551	0					
ANR	907337	Identifier	core		903551	0					
ANR	907338	Identifier	dbg		903551	1					
ANR	907339	Identifier	h		903551	1					
ANR	907340	Identifier	gcore		903551	1					
ANR	907341	ArgumentList	core -> dbg		903551	1					
ANR	907342	Argument	core -> dbg		903551	0					
ANR	907343	PtrMemberAccess	core -> dbg		903551	0					
ANR	907344	Identifier	core		903551	0					
ANR	907345	Identifier	dbg		903551	1					
ANR	907346	Argument	dst		903551	1					
ANR	907347	Identifier	dst		903551	0					
ANR	907348	CompoundStatement		562:47:16647:16647	903551	1					
ANR	907349	ExpressionStatement	"eprintf ( ""dg: coredump failed\\n"" )"	5099:5:145596:145629	903551	0	True				
ANR	907350	CallExpression	"eprintf ( ""dg: coredump failed\\n"" )"		903551	0					
ANR	907351	Callee	eprintf		903551	0					
ANR	907352	Identifier	eprintf		903551	0					
ANR	907353	ArgumentList	"""dg: coredump failed\\n"""		903551	1					
ANR	907354	Argument	"""dg: coredump failed\\n"""		903551	0					
ANR	907355	PrimaryExpression	"""dg: coredump failed\\n"""		903551	0					
ANR	907356	ExpressionStatement	r_buf_free ( dst )	5101:4:145641:145657	903551	1	True				
ANR	907357	CallExpression	r_buf_free ( dst )		903551	0					
ANR	907358	Callee	r_buf_free		903551	0					
ANR	907359	Identifier	r_buf_free		903551	0					
ANR	907360	ArgumentList	dst		903551	1					
ANR	907361	Argument	dst		903551	0					
ANR	907362	Identifier	dst		903551	0					
ANR	907363	ElseStatement	else		903551	0					
ANR	907364	CompoundStatement		566:10:16727:16727	903551	0					
ANR	907365	ExpressionStatement	"perror ( ""r_buf_new_file"" )"	5103:4:145675:145700	903551	0	True				
ANR	907366	CallExpression	"perror ( ""r_buf_new_file"" )"		903551	0					
ANR	907367	Callee	perror		903551	0					
ANR	907368	Identifier	perror		903551	0					
ANR	907369	ArgumentList	"""r_buf_new_file"""		903551	1					
ANR	907370	Argument	"""r_buf_new_file"""		903551	0					
ANR	907371	PrimaryExpression	"""r_buf_new_file"""		903551	0					
ANR	907372	ExpressionStatement	free ( corefile )	5105:3:145710:145725	903551	6	True				
ANR	907373	CallExpression	free ( corefile )		903551	0					
ANR	907374	Callee	free		903551	0					
ANR	907375	Identifier	free		903551	0					
ANR	907376	ArgumentList	corefile		903551	1					
ANR	907377	Argument	corefile		903551	0					
ANR	907378	Identifier	corefile		903551	0					
ANR	907379	BreakStatement	break ;	5107:2:145733:145738	903551	41	True				
ANR	907380	Label	case 'k' :	5108:1:145741:145749	903551	42	True				
ANR	907381	ExpressionStatement	"r_core_debug_kill ( core , input + 1 )"	5109:2:145761:145796	903551	43	True				
ANR	907382	CallExpression	"r_core_debug_kill ( core , input + 1 )"		903551	0					
ANR	907383	Callee	r_core_debug_kill		903551	0					
ANR	907384	Identifier	r_core_debug_kill		903551	0					
ANR	907385	ArgumentList	core		903551	1					
ANR	907386	Argument	core		903551	0					
ANR	907387	Identifier	core		903551	0					
ANR	907388	Argument	input + 1		903551	1					
ANR	907389	AdditiveExpression	input + 1		903551	0		+			
ANR	907390	Identifier	input		903551	0					
ANR	907391	PrimaryExpression	1		903551	1					
ANR	907392	BreakStatement	break ;	5110:2:145800:145805	903551	44	True				
ANR	907393	Label	case 'o' :	5111:1:145808:145816	903551	45	True				
ANR	907394	SwitchStatement	switch ( input [ 1 ] )		903551	46					
ANR	907395	Condition	input [ 1 ]	5112:10:145836:145843	903551	0	True				
ANR	907396	ArrayIndexing	input [ 1 ]		903551	0					
ANR	907397	Identifier	input		903551	0					
ANR	907398	PrimaryExpression	1		903551	1					
ANR	907399	CompoundStatement		576:20:16904:16904	903551	1					
ANR	907400	Label	case '\\0' :	5113:2:145850:145859	903551	0	True				
ANR	907401	ExpressionStatement	"r_core_file_reopen ( core , input [ 1 ] ? input + 2 : NULL , 0 , 1 )"	5114:3:145872:145931	903551	1	True				
ANR	907402	CallExpression	"r_core_file_reopen ( core , input [ 1 ] ? input + 2 : NULL , 0 , 1 )"		903551	0					
ANR	907403	Callee	r_core_file_reopen		903551	0					
ANR	907404	Identifier	r_core_file_reopen		903551	0					
ANR	907405	ArgumentList	core		903551	1					
ANR	907406	Argument	core		903551	0					
ANR	907407	Identifier	core		903551	0					
ANR	907408	Argument	input [ 1 ] ? input + 2 : NULL		903551	1					
ANR	907409	ConditionalExpression	input [ 1 ] ? input + 2 : NULL		903551	0					
ANR	907410	Condition	input [ 1 ]		903551	0					
ANR	907411	ArrayIndexing	input [ 1 ]		903551	0					
ANR	907412	Identifier	input		903551	0					
ANR	907413	PrimaryExpression	1		903551	1					
ANR	907414	AdditiveExpression	input + 2		903551	1		+			
ANR	907415	Identifier	input		903551	0					
ANR	907416	PrimaryExpression	2		903551	1					
ANR	907417	Identifier	NULL		903551	2					
ANR	907418	Argument	0		903551	2					
ANR	907419	PrimaryExpression	0		903551	0					
ANR	907420	Argument	1		903551	3					
ANR	907421	PrimaryExpression	1		903551	0					
ANR	907422	BreakStatement	break ;	5115:3:145936:145941	903551	2	True				
ANR	907423	Label	case 'r' :	5116:2:145945:145953	903551	3	True				
ANR	907424	IfStatement	if ( input [ 2 ] == ' ' )		903551	4					
ANR	907425	Condition	input [ 2 ] == ' '	5117:7:145986:146000	903551	0	True				
ANR	907426	EqualityExpression	input [ 2 ] == ' '		903551	0		==			
ANR	907427	ArrayIndexing	input [ 2 ]		903551	0					
ANR	907428	Identifier	input		903551	0					
ANR	907429	PrimaryExpression	2		903551	1					
ANR	907430	PrimaryExpression	' '		903551	1					
ANR	907431	CompoundStatement		581:24:17061:17061	903551	1					
ANR	907432	ExpressionStatement	"setRarunProfileString ( core , input + 3 )"	5118:4:146009:146048	903551	0	True				
ANR	907433	CallExpression	"setRarunProfileString ( core , input + 3 )"		903551	0					
ANR	907434	Callee	setRarunProfileString		903551	0					
ANR	907435	Identifier	setRarunProfileString		903551	0					
ANR	907436	ArgumentList	core		903551	1					
ANR	907437	Argument	core		903551	0					
ANR	907438	Identifier	core		903551	0					
ANR	907439	Argument	input + 3		903551	1					
ANR	907440	AdditiveExpression	input + 3		903551	0		+			
ANR	907441	Identifier	input		903551	0					
ANR	907442	PrimaryExpression	3		903551	1					
ANR	907443	ElseStatement	else		903551	0					
ANR	907444	CompoundStatement		583:10:17118:17118	903551	0					
ANR	907445	ExpressionStatement	"r_sys_cmd ( ""rarun2 -h"" )"	5121:4:146090:146113	903551	0	True				
ANR	907446	CallExpression	"r_sys_cmd ( ""rarun2 -h"" )"		903551	0					
ANR	907447	Callee	r_sys_cmd		903551	0					
ANR	907448	Identifier	r_sys_cmd		903551	0					
ANR	907449	ArgumentList	"""rarun2 -h"""		903551	1					
ANR	907450	Argument	"""rarun2 -h"""		903551	0					
ANR	907451	PrimaryExpression	"""rarun2 -h"""		903551	0					
ANR	907452	BreakStatement	break ;	5123:3:146123:146128	903551	5	True				
ANR	907453	Label	case 'o' :	5124:2:146132:146140	903551	6	True				
ANR	907454	ExpressionStatement	"r_core_file_reopen_debug ( core , input + 2 )"	5125:3:146174:146216	903551	7	True				
ANR	907455	CallExpression	"r_core_file_reopen_debug ( core , input + 2 )"		903551	0					
ANR	907456	Callee	r_core_file_reopen_debug		903551	0					
ANR	907457	Identifier	r_core_file_reopen_debug		903551	0					
ANR	907458	ArgumentList	core		903551	1					
ANR	907459	Argument	core		903551	0					
ANR	907460	Identifier	core		903551	0					
ANR	907461	Argument	input + 2		903551	1					
ANR	907462	AdditiveExpression	input + 2		903551	0		+			
ANR	907463	Identifier	input		903551	0					
ANR	907464	PrimaryExpression	2		903551	1					
ANR	907465	BreakStatement	break ;	5126:3:146221:146226	903551	8	True				
ANR	907466	Label	case '?' :	5127:2:146230:146238	903551	9	True				
ANR	907467	Label	default :	5128:2:146251:146258	903551	10	True				
ANR	907468	Identifier	default		903551	0					
ANR	907469	ExpressionStatement	"r_core_cmd_help ( core , help_msg_do )"	5129:3:146263:146298	903551	11	True				
ANR	907470	CallExpression	"r_core_cmd_help ( core , help_msg_do )"		903551	0					
ANR	907471	Callee	r_core_cmd_help		903551	0					
ANR	907472	Identifier	r_core_cmd_help		903551	0					
ANR	907473	ArgumentList	core		903551	1					
ANR	907474	Argument	core		903551	0					
ANR	907475	Identifier	core		903551	0					
ANR	907476	Argument	help_msg_do		903551	1					
ANR	907477	Identifier	help_msg_do		903551	0					
ANR	907478	BreakStatement	break ;	5130:3:146303:146308	903551	12	True				
ANR	907479	BreakStatement	break ;	5132:2:146316:146321	903551	47	True				
ANR	907480	Label	case 'W' :	5134:1:146340:146348	903551	48	True				
ANR	907481	ExpressionStatement	r_w32_print_windows ( core -> dbg )	5135:2:146360:146391	903551	49	True				
ANR	907482	CallExpression	r_w32_print_windows ( core -> dbg )		903551	0					
ANR	907483	Callee	r_w32_print_windows		903551	0					
ANR	907484	Identifier	r_w32_print_windows		903551	0					
ANR	907485	ArgumentList	core -> dbg		903551	1					
ANR	907486	Argument	core -> dbg		903551	0					
ANR	907487	PtrMemberAccess	core -> dbg		903551	0					
ANR	907488	Identifier	core		903551	0					
ANR	907489	Identifier	dbg		903551	1					
ANR	907490	BreakStatement	break ;	5136:2:146395:146400	903551	50	True				
ANR	907491	Label	case 'w' :	5138:1:146410:146418	903551	51	True				
ANR	907492	ExpressionStatement	"r_cons_break_push ( static_debug_stop , core -> dbg )"	5139:2:146430:146478	903551	52	True				
ANR	907493	CallExpression	"r_cons_break_push ( static_debug_stop , core -> dbg )"		903551	0					
ANR	907494	Callee	r_cons_break_push		903551	0					
ANR	907495	Identifier	r_cons_break_push		903551	0					
ANR	907496	ArgumentList	static_debug_stop		903551	1					
ANR	907497	Argument	static_debug_stop		903551	0					
ANR	907498	Identifier	static_debug_stop		903551	0					
ANR	907499	Argument	core -> dbg		903551	1					
ANR	907500	PtrMemberAccess	core -> dbg		903551	0					
ANR	907501	Identifier	core		903551	0					
ANR	907502	Identifier	dbg		903551	1					
ANR	907503	ForStatement	for ( ; ! r_cons_is_breaked ( ) ; )		903551	53					
ANR	907504	Condition	! r_cons_is_breaked ( )	5140:8:146488:146508	903551	0	True				
ANR	907505	UnaryOperationExpression	! r_cons_is_breaked ( )		903551	0					
ANR	907506	UnaryOperator	!		903551	0					
ANR	907507	CallExpression	r_cons_is_breaked ( )		903551	1					
ANR	907508	Callee	r_cons_is_breaked		903551	0					
ANR	907509	Identifier	r_cons_is_breaked		903551	0					
ANR	907510	ArgumentList			903551	1					
ANR	907511	CompoundStatement		607:3:17644:17689	903551	1					
ANR	907512	IdentifierDeclStatement	int pid = atoi ( input + 1 ) ;	5141:3:146517:146543	903551	0	True				
ANR	907513	IdentifierDecl	pid = atoi ( input + 1 )		903551	0					
ANR	907514	IdentifierDeclType	int		903551	0					
ANR	907515	Identifier	pid		903551	1					
ANR	907516	AssignmentExpression	pid = atoi ( input + 1 )		903551	2		=			
ANR	907517	Identifier	pid		903551	0					
ANR	907518	CallExpression	atoi ( input + 1 )		903551	1					
ANR	907519	Callee	atoi		903551	0					
ANR	907520	Identifier	atoi		903551	0					
ANR	907521	ArgumentList	input + 1		903551	1					
ANR	907522	Argument	input + 1		903551	0					
ANR	907523	AdditiveExpression	input + 1		903551	0		+			
ANR	907524	Identifier	input		903551	0					
ANR	907525	PrimaryExpression	1		903551	1					
ANR	907526	IdentifierDeclStatement	"int res = r_debug_kill ( core -> dbg , pid , 0 , 0 ) ;"	5143:3:146586:146631	903551	1	True				
ANR	907527	IdentifierDecl	"res = r_debug_kill ( core -> dbg , pid , 0 , 0 )"		903551	0					
ANR	907528	IdentifierDeclType	int		903551	0					
ANR	907529	Identifier	res		903551	1					
ANR	907530	AssignmentExpression	"res = r_debug_kill ( core -> dbg , pid , 0 , 0 )"		903551	2		=			
ANR	907531	Identifier	res		903551	0					
ANR	907532	CallExpression	"r_debug_kill ( core -> dbg , pid , 0 , 0 )"		903551	1					
ANR	907533	Callee	r_debug_kill		903551	0					
ANR	907534	Identifier	r_debug_kill		903551	0					
ANR	907535	ArgumentList	core -> dbg		903551	1					
ANR	907536	Argument	core -> dbg		903551	0					
ANR	907537	PtrMemberAccess	core -> dbg		903551	0					
ANR	907538	Identifier	core		903551	0					
ANR	907539	Identifier	dbg		903551	1					
ANR	907540	Argument	pid		903551	1					
ANR	907541	Identifier	pid		903551	0					
ANR	907542	Argument	0		903551	2					
ANR	907543	PrimaryExpression	0		903551	0					
ANR	907544	Argument	0		903551	3					
ANR	907545	PrimaryExpression	0		903551	0					
ANR	907546	IfStatement	if ( ! res )		903551	2					
ANR	907547	Condition	! res	5144:7:146640:146643	903551	0	True				
ANR	907548	UnaryOperationExpression	! res		903551	0					
ANR	907549	UnaryOperator	!		903551	0					
ANR	907550	Identifier	res		903551	1					
ANR	907551	CompoundStatement		608:13:17704:17704	903551	1					
ANR	907552	BreakStatement	break ;	5145:4:146652:146657	903551	0	True				
ANR	907553	ExpressionStatement	r_sys_usleep ( 200 )	5147:3:146667:146685	903551	3	True				
ANR	907554	CallExpression	r_sys_usleep ( 200 )		903551	0					
ANR	907555	Callee	r_sys_usleep		903551	0					
ANR	907556	Identifier	r_sys_usleep		903551	0					
ANR	907557	ArgumentList	200		903551	1					
ANR	907558	Argument	200		903551	0					
ANR	907559	PrimaryExpression	200		903551	0					
ANR	907560	ExpressionStatement	r_cons_break_pop ( )	5149:2:146693:146712	903551	54	True				
ANR	907561	CallExpression	r_cons_break_pop ( )		903551	0					
ANR	907562	Callee	r_cons_break_pop		903551	0					
ANR	907563	Identifier	r_cons_break_pop		903551	0					
ANR	907564	ArgumentList			903551	1					
ANR	907565	BreakStatement	break ;	5150:2:146716:146721	903551	55	True				
ANR	907566	Label	case 'x' :	5151:1:146724:146732	903551	56	True				
ANR	907567	SwitchStatement	switch ( input [ 1 ] )		903551	57					
ANR	907568	Condition	input [ 1 ]	5152:10:146752:146759	903551	0	True				
ANR	907569	ArrayIndexing	input [ 1 ]		903551	0					
ANR	907570	Identifier	input		903551	0					
ANR	907571	PrimaryExpression	1		903551	1					
ANR	907572	CompoundStatement		616:20:17820:17820	903551	1					
ANR	907573	Label	case ' ' :	5153:2:146766:146774	903551	0	True				
ANR	907574	CompoundStatement		618:3:17848:17863	903551	1					
ANR	907575	IdentifierDeclStatement	ut8 bytes [ 4096 ] ;	5154:3:146790:146805	903551	0	True				
ANR	907576	IdentifierDecl	bytes [ 4096 ]		903551	0					
ANR	907577	IdentifierDeclType	ut8 [ 4096 ]		903551	0					
ANR	907578	Identifier	bytes		903551	1					
ANR	907579	PrimaryExpression	4096		903551	2					
ANR	907580	IfStatement	if ( strlen ( input + 2 ) < 4096 )		903551	1					
ANR	907581	Condition	strlen ( input + 2 ) < 4096	5155:7:146814:146838	903551	0	True				
ANR	907582	RelationalExpression	strlen ( input + 2 ) < 4096		903551	0		<			
ANR	907583	CallExpression	strlen ( input + 2 )		903551	0					
ANR	907584	Callee	strlen		903551	0					
ANR	907585	Identifier	strlen		903551	0					
ANR	907586	ArgumentList	input + 2		903551	1					
ANR	907587	Argument	input + 2		903551	0					
ANR	907588	AdditiveExpression	input + 2		903551	0		+			
ANR	907589	Identifier	input		903551	0					
ANR	907590	PrimaryExpression	2		903551	1					
ANR	907591	PrimaryExpression	4096		903551	1					
ANR	907592	CompoundStatement		620:4:17904:17952	903551	1					
ANR	907593	IdentifierDeclStatement	"int bytes_len = r_hex_str2bin ( input + 2 , bytes ) ;"	5156:4:146846:146894	903551	0	True				
ANR	907594	IdentifierDecl	"bytes_len = r_hex_str2bin ( input + 2 , bytes )"		903551	0					
ANR	907595	IdentifierDeclType	int		903551	0					
ANR	907596	Identifier	bytes_len		903551	1					
ANR	907597	AssignmentExpression	"bytes_len = r_hex_str2bin ( input + 2 , bytes )"		903551	2		=			
ANR	907598	Identifier	bytes_len		903551	0					
ANR	907599	CallExpression	"r_hex_str2bin ( input + 2 , bytes )"		903551	1					
ANR	907600	Callee	r_hex_str2bin		903551	0					
ANR	907601	Identifier	r_hex_str2bin		903551	0					
ANR	907602	ArgumentList	input + 2		903551	1					
ANR	907603	Argument	input + 2		903551	0					
ANR	907604	AdditiveExpression	input + 2		903551	0		+			
ANR	907605	Identifier	input		903551	0					
ANR	907606	PrimaryExpression	2		903551	1					
ANR	907607	Argument	bytes		903551	1					
ANR	907608	Identifier	bytes		903551	0					
ANR	907609	IfStatement	if ( bytes_len > 0 )		903551	1					
ANR	907610	Condition	bytes_len > 0	5157:8:146904:146914	903551	0	True				
ANR	907611	RelationalExpression	bytes_len > 0		903551	0		>			
ANR	907612	Identifier	bytes_len		903551	0					
ANR	907613	PrimaryExpression	0		903551	1					
ANR	907614	ExpressionStatement	"r_debug_execute ( core -> dbg , bytes , bytes_len , 0 )"	5157:21:146917:146971	903551	1	True				
ANR	907615	CallExpression	"r_debug_execute ( core -> dbg , bytes , bytes_len , 0 )"		903551	0					
ANR	907616	Callee	r_debug_execute		903551	0					
ANR	907617	Identifier	r_debug_execute		903551	0					
ANR	907618	ArgumentList	core -> dbg		903551	1					
ANR	907619	Argument	core -> dbg		903551	0					
ANR	907620	PtrMemberAccess	core -> dbg		903551	0					
ANR	907621	Identifier	core		903551	0					
ANR	907622	Identifier	dbg		903551	1					
ANR	907623	Argument	bytes		903551	1					
ANR	907624	Identifier	bytes		903551	0					
ANR	907625	Argument	bytes_len		903551	2					
ANR	907626	Identifier	bytes_len		903551	0					
ANR	907627	Argument	0		903551	3					
ANR	907628	PrimaryExpression	0		903551	0					
ANR	907629	ElseStatement	else		903551	0					
ANR	907630	ExpressionStatement	"eprintf ( ""Invalid hexpairs\\n"" )"	5159:9:146982:147012	903551	0	True				
ANR	907631	CallExpression	"eprintf ( ""Invalid hexpairs\\n"" )"		903551	0					
ANR	907632	Callee	eprintf		903551	0					
ANR	907633	Identifier	eprintf		903551	0					
ANR	907634	ArgumentList	"""Invalid hexpairs\\n"""		903551	1					
ANR	907635	Argument	"""Invalid hexpairs\\n"""		903551	0					
ANR	907636	PrimaryExpression	"""Invalid hexpairs\\n"""		903551	0					
ANR	907637	ElseStatement	else		903551	0					
ANR	907638	ExpressionStatement	"eprintf ( ""Injection opcodes so long\\n"" )"	5160:10:147024:147063	903551	0	True				
ANR	907639	CallExpression	"eprintf ( ""Injection opcodes so long\\n"" )"		903551	0					
ANR	907640	Callee	eprintf		903551	0					
ANR	907641	Identifier	eprintf		903551	0					
ANR	907642	ArgumentList	"""Injection opcodes so long\\n"""		903551	1					
ANR	907643	Argument	"""Injection opcodes so long\\n"""		903551	0					
ANR	907644	PrimaryExpression	"""Injection opcodes so long\\n"""		903551	0					
ANR	907645	BreakStatement	break ;	5161:3:147068:147073	903551	2	True				
ANR	907646	Label	case 'a' :	5163:2:147081:147089	903551	2	True				
ANR	907647	CompoundStatement		628:3:18163:18178	903551	3					
ANR	907648	IdentifierDeclStatement	RAsmCode * acode ;	5164:3:147105:147120	903551	0	True				
ANR	907649	IdentifierDecl	* acode		903551	0					
ANR	907650	IdentifierDeclType	RAsmCode *		903551	0					
ANR	907651	Identifier	acode		903551	1					
ANR	907652	ExpressionStatement	"r_asm_set_pc ( core -> assembler , core -> offset )"	5165:3:147125:147169	903551	1	True				
ANR	907653	CallExpression	"r_asm_set_pc ( core -> assembler , core -> offset )"		903551	0					
ANR	907654	Callee	r_asm_set_pc		903551	0					
ANR	907655	Identifier	r_asm_set_pc		903551	0					
ANR	907656	ArgumentList	core -> assembler		903551	1					
ANR	907657	Argument	core -> assembler		903551	0					
ANR	907658	PtrMemberAccess	core -> assembler		903551	0					
ANR	907659	Identifier	core		903551	0					
ANR	907660	Identifier	assembler		903551	1					
ANR	907661	Argument	core -> offset		903551	1					
ANR	907662	PtrMemberAccess	core -> offset		903551	0					
ANR	907663	Identifier	core		903551	0					
ANR	907664	Identifier	offset		903551	1					
ANR	907665	ExpressionStatement	"acode = r_asm_massemble ( core -> assembler , input + 2 )"	5166:3:147174:147226	903551	2	True				
ANR	907666	AssignmentExpression	"acode = r_asm_massemble ( core -> assembler , input + 2 )"		903551	0		=			
ANR	907667	Identifier	acode		903551	0					
ANR	907668	CallExpression	"r_asm_massemble ( core -> assembler , input + 2 )"		903551	1					
ANR	907669	Callee	r_asm_massemble		903551	0					
ANR	907670	Identifier	r_asm_massemble		903551	0					
ANR	907671	ArgumentList	core -> assembler		903551	1					
ANR	907672	Argument	core -> assembler		903551	0					
ANR	907673	PtrMemberAccess	core -> assembler		903551	0					
ANR	907674	Identifier	core		903551	0					
ANR	907675	Identifier	assembler		903551	1					
ANR	907676	Argument	input + 2		903551	1					
ANR	907677	AdditiveExpression	input + 2		903551	0		+			
ANR	907678	Identifier	input		903551	0					
ANR	907679	PrimaryExpression	2		903551	1					
ANR	907680	IfStatement	if ( acode )		903551	3					
ANR	907681	Condition	acode	5167:7:147235:147239	903551	0	True				
ANR	907682	Identifier	acode		903551	0					
ANR	907683	CompoundStatement		631:14:18300:18300	903551	1					
ANR	907684	ExpressionStatement	r_reg_arena_push ( core -> dbg -> reg )	5168:4:147248:147281	903551	0	True				
ANR	907685	CallExpression	r_reg_arena_push ( core -> dbg -> reg )		903551	0					
ANR	907686	Callee	r_reg_arena_push		903551	0					
ANR	907687	Identifier	r_reg_arena_push		903551	0					
ANR	907688	ArgumentList	core -> dbg -> reg		903551	1					
ANR	907689	Argument	core -> dbg -> reg		903551	0					
ANR	907690	PtrMemberAccess	core -> dbg -> reg		903551	0					
ANR	907691	PtrMemberAccess	core -> dbg		903551	0					
ANR	907692	Identifier	core		903551	0					
ANR	907693	Identifier	dbg		903551	1					
ANR	907694	Identifier	reg		903551	1					
ANR	907695	ExpressionStatement	"r_debug_execute ( core -> dbg , acode -> bytes , acode -> len , 0 )"	5169:4:147287:147343	903551	1	True				
ANR	907696	CallExpression	"r_debug_execute ( core -> dbg , acode -> bytes , acode -> len , 0 )"		903551	0					
ANR	907697	Callee	r_debug_execute		903551	0					
ANR	907698	Identifier	r_debug_execute		903551	0					
ANR	907699	ArgumentList	core -> dbg		903551	1					
ANR	907700	Argument	core -> dbg		903551	0					
ANR	907701	PtrMemberAccess	core -> dbg		903551	0					
ANR	907702	Identifier	core		903551	0					
ANR	907703	Identifier	dbg		903551	1					
ANR	907704	Argument	acode -> bytes		903551	1					
ANR	907705	PtrMemberAccess	acode -> bytes		903551	0					
ANR	907706	Identifier	acode		903551	0					
ANR	907707	Identifier	bytes		903551	1					
ANR	907708	Argument	acode -> len		903551	2					
ANR	907709	PtrMemberAccess	acode -> len		903551	0					
ANR	907710	Identifier	acode		903551	0					
ANR	907711	Identifier	len		903551	1					
ANR	907712	Argument	0		903551	3					
ANR	907713	PrimaryExpression	0		903551	0					
ANR	907714	ExpressionStatement	r_reg_arena_pop ( core -> dbg -> reg )	5170:4:147349:147381	903551	2	True				
ANR	907715	CallExpression	r_reg_arena_pop ( core -> dbg -> reg )		903551	0					
ANR	907716	Callee	r_reg_arena_pop		903551	0					
ANR	907717	Identifier	r_reg_arena_pop		903551	0					
ANR	907718	ArgumentList	core -> dbg -> reg		903551	1					
ANR	907719	Argument	core -> dbg -> reg		903551	0					
ANR	907720	PtrMemberAccess	core -> dbg -> reg		903551	0					
ANR	907721	PtrMemberAccess	core -> dbg		903551	0					
ANR	907722	Identifier	core		903551	0					
ANR	907723	Identifier	dbg		903551	1					
ANR	907724	Identifier	reg		903551	1					
ANR	907725	ExpressionStatement	r_asm_code_free ( acode )	5172:3:147391:147414	903551	4	True				
ANR	907726	CallExpression	r_asm_code_free ( acode )		903551	0					
ANR	907727	Callee	r_asm_code_free		903551	0					
ANR	907728	Identifier	r_asm_code_free		903551	0					
ANR	907729	ArgumentList	acode		903551	1					
ANR	907730	Argument	acode		903551	0					
ANR	907731	Identifier	acode		903551	0					
ANR	907732	BreakStatement	break ;	5173:3:147419:147424	903551	5	True				
ANR	907733	Label	case 'e' :	5175:2:147432:147440	903551	4	True				
ANR	907734	CompoundStatement		653:3:19010:19049	903551	5					
ANR	907735	IdentifierDeclStatement	REgg * egg = core -> egg ;	5176:3:147456:147477	903551	0	True				
ANR	907736	IdentifierDecl	* egg = core -> egg		903551	0					
ANR	907737	IdentifierDeclType	REgg *		903551	0					
ANR	907738	Identifier	egg		903551	1					
ANR	907739	AssignmentExpression	* egg = core -> egg		903551	2		=			
ANR	907740	Identifier	egg		903551	0					
ANR	907741	PtrMemberAccess	core -> egg		903551	1					
ANR	907742	Identifier	core		903551	0					
ANR	907743	Identifier	egg		903551	1					
ANR	907744	IdentifierDeclStatement	RBuffer * b ;	5177:3:147482:147492	903551	1	True				
ANR	907745	IdentifierDecl	* b		903551	0					
ANR	907746	IdentifierDeclType	RBuffer *		903551	0					
ANR	907747	Identifier	b		903551	1					
ANR	907748	IdentifierDeclStatement	"const char * asm_arch = r_config_get ( core -> config , ""asm.arch"" ) ;"	5178:3:147497:147559	903551	2	True				
ANR	907749	IdentifierDecl	"* asm_arch = r_config_get ( core -> config , ""asm.arch"" )"		903551	0					
ANR	907750	IdentifierDeclType	const char *		903551	0					
ANR	907751	Identifier	asm_arch		903551	1					
ANR	907752	AssignmentExpression	"* asm_arch = r_config_get ( core -> config , ""asm.arch"" )"		903551	2		=			
ANR	907753	Identifier	asm_arch		903551	0					
ANR	907754	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		903551	1					
ANR	907755	Callee	r_config_get		903551	0					
ANR	907756	Identifier	r_config_get		903551	0					
ANR	907757	ArgumentList	core -> config		903551	1					
ANR	907758	Argument	core -> config		903551	0					
ANR	907759	PtrMemberAccess	core -> config		903551	0					
ANR	907760	Identifier	core		903551	0					
ANR	907761	Identifier	config		903551	1					
ANR	907762	Argument	"""asm.arch"""		903551	1					
ANR	907763	PrimaryExpression	"""asm.arch"""		903551	0					
ANR	907764	IdentifierDeclStatement	"int asm_bits = r_config_get_i ( core -> config , ""asm.bits"" ) ;"	5179:3:147564:147620	903551	3	True				
ANR	907765	IdentifierDecl	"asm_bits = r_config_get_i ( core -> config , ""asm.bits"" )"		903551	0					
ANR	907766	IdentifierDeclType	int		903551	0					
ANR	907767	Identifier	asm_bits		903551	1					
ANR	907768	AssignmentExpression	"asm_bits = r_config_get_i ( core -> config , ""asm.bits"" )"		903551	2		=			
ANR	907769	Identifier	asm_bits		903551	0					
ANR	907770	CallExpression	"r_config_get_i ( core -> config , ""asm.bits"" )"		903551	1					
ANR	907771	Callee	r_config_get_i		903551	0					
ANR	907772	Identifier	r_config_get_i		903551	0					
ANR	907773	ArgumentList	core -> config		903551	1					
ANR	907774	Argument	core -> config		903551	0					
ANR	907775	PtrMemberAccess	core -> config		903551	0					
ANR	907776	Identifier	core		903551	0					
ANR	907777	Identifier	config		903551	1					
ANR	907778	Argument	"""asm.bits"""		903551	1					
ANR	907779	PrimaryExpression	"""asm.bits"""		903551	0					
ANR	907780	IdentifierDeclStatement	"const char * asm_os = r_config_get ( core -> config , ""asm.os"" ) ;"	5180:3:147625:147683	903551	4	True				
ANR	907781	IdentifierDecl	"* asm_os = r_config_get ( core -> config , ""asm.os"" )"		903551	0					
ANR	907782	IdentifierDeclType	const char *		903551	0					
ANR	907783	Identifier	asm_os		903551	1					
ANR	907784	AssignmentExpression	"* asm_os = r_config_get ( core -> config , ""asm.os"" )"		903551	2		=			
ANR	907785	Identifier	asm_os		903551	0					
ANR	907786	CallExpression	"r_config_get ( core -> config , ""asm.os"" )"		903551	1					
ANR	907787	Callee	r_config_get		903551	0					
ANR	907788	Identifier	r_config_get		903551	0					
ANR	907789	ArgumentList	core -> config		903551	1					
ANR	907790	Argument	core -> config		903551	0					
ANR	907791	PtrMemberAccess	core -> config		903551	0					
ANR	907792	Identifier	core		903551	0					
ANR	907793	Identifier	config		903551	1					
ANR	907794	Argument	"""asm.os"""		903551	1					
ANR	907795	PrimaryExpression	"""asm.os"""		903551	0					
ANR	907796	ExpressionStatement	"r_egg_setup ( egg , asm_arch , asm_bits , 0 , asm_os )"	5181:3:147688:147736	903551	5	True				
ANR	907797	CallExpression	"r_egg_setup ( egg , asm_arch , asm_bits , 0 , asm_os )"		903551	0					
ANR	907798	Callee	r_egg_setup		903551	0					
ANR	907799	Identifier	r_egg_setup		903551	0					
ANR	907800	ArgumentList	egg		903551	1					
ANR	907801	Argument	egg		903551	0					
ANR	907802	Identifier	egg		903551	0					
ANR	907803	Argument	asm_arch		903551	1					
ANR	907804	Identifier	asm_arch		903551	0					
ANR	907805	Argument	asm_bits		903551	2					
ANR	907806	Identifier	asm_bits		903551	0					
ANR	907807	Argument	0		903551	3					
ANR	907808	PrimaryExpression	0		903551	0					
ANR	907809	Argument	asm_os		903551	4					
ANR	907810	Identifier	asm_os		903551	0					
ANR	907811	ExpressionStatement	r_egg_reset ( egg )	5182:3:147741:147758	903551	6	True				
ANR	907812	CallExpression	r_egg_reset ( egg )		903551	0					
ANR	907813	Callee	r_egg_reset		903551	0					
ANR	907814	Identifier	r_egg_reset		903551	0					
ANR	907815	ArgumentList	egg		903551	1					
ANR	907816	Argument	egg		903551	0					
ANR	907817	Identifier	egg		903551	0					
ANR	907818	ExpressionStatement	"r_egg_load ( egg , input + 1 , 0 )"	5183:3:147763:147793	903551	7	True				
ANR	907819	CallExpression	"r_egg_load ( egg , input + 1 , 0 )"		903551	0					
ANR	907820	Callee	r_egg_load		903551	0					
ANR	907821	Identifier	r_egg_load		903551	0					
ANR	907822	ArgumentList	egg		903551	1					
ANR	907823	Argument	egg		903551	0					
ANR	907824	Identifier	egg		903551	0					
ANR	907825	Argument	input + 1		903551	1					
ANR	907826	AdditiveExpression	input + 1		903551	0		+			
ANR	907827	Identifier	input		903551	0					
ANR	907828	PrimaryExpression	1		903551	1					
ANR	907829	Argument	0		903551	2					
ANR	907830	PrimaryExpression	0		903551	0					
ANR	907831	ExpressionStatement	r_egg_compile ( egg )	5184:3:147798:147817	903551	8	True				
ANR	907832	CallExpression	r_egg_compile ( egg )		903551	0					
ANR	907833	Callee	r_egg_compile		903551	0					
ANR	907834	Identifier	r_egg_compile		903551	0					
ANR	907835	ArgumentList	egg		903551	1					
ANR	907836	Argument	egg		903551	0					
ANR	907837	Identifier	egg		903551	0					
ANR	907838	ExpressionStatement	b = r_egg_get_bin ( egg )	5185:3:147822:147845	903551	9	True				
ANR	907839	AssignmentExpression	b = r_egg_get_bin ( egg )		903551	0		=			
ANR	907840	Identifier	b		903551	0					
ANR	907841	CallExpression	r_egg_get_bin ( egg )		903551	1					
ANR	907842	Callee	r_egg_get_bin		903551	0					
ANR	907843	Identifier	r_egg_get_bin		903551	0					
ANR	907844	ArgumentList	egg		903551	1					
ANR	907845	Argument	egg		903551	0					
ANR	907846	Identifier	egg		903551	0					
ANR	907847	ExpressionStatement	"r_asm_set_pc ( core -> assembler , core -> offset )"	5186:3:147850:147894	903551	10	True				
ANR	907848	CallExpression	"r_asm_set_pc ( core -> assembler , core -> offset )"		903551	0					
ANR	907849	Callee	r_asm_set_pc		903551	0					
ANR	907850	Identifier	r_asm_set_pc		903551	0					
ANR	907851	ArgumentList	core -> assembler		903551	1					
ANR	907852	Argument	core -> assembler		903551	0					
ANR	907853	PtrMemberAccess	core -> assembler		903551	0					
ANR	907854	Identifier	core		903551	0					
ANR	907855	Identifier	assembler		903551	1					
ANR	907856	Argument	core -> offset		903551	1					
ANR	907857	PtrMemberAccess	core -> offset		903551	0					
ANR	907858	Identifier	core		903551	0					
ANR	907859	Identifier	offset		903551	1					
ANR	907860	ExpressionStatement	r_reg_arena_push ( core -> dbg -> reg )	5187:3:147899:147932	903551	11	True				
ANR	907861	CallExpression	r_reg_arena_push ( core -> dbg -> reg )		903551	0					
ANR	907862	Callee	r_reg_arena_push		903551	0					
ANR	907863	Identifier	r_reg_arena_push		903551	0					
ANR	907864	ArgumentList	core -> dbg -> reg		903551	1					
ANR	907865	Argument	core -> dbg -> reg		903551	0					
ANR	907866	PtrMemberAccess	core -> dbg -> reg		903551	0					
ANR	907867	PtrMemberAccess	core -> dbg		903551	0					
ANR	907868	Identifier	core		903551	0					
ANR	907869	Identifier	dbg		903551	1					
ANR	907870	Identifier	reg		903551	1					
ANR	907871	IdentifierDeclStatement	ut64 tmpsz ;	5188:3:147937:147947	903551	12	True				
ANR	907872	IdentifierDecl	tmpsz		903551	0					
ANR	907873	IdentifierDeclType	ut64		903551	0					
ANR	907874	Identifier	tmpsz		903551	1					
ANR	907875	IdentifierDeclStatement	"const ut8 * tmp = r_buf_data ( b , & tmpsz ) ;"	5189:3:147952:147991	903551	13	True				
ANR	907876	IdentifierDecl	"* tmp = r_buf_data ( b , & tmpsz )"		903551	0					
ANR	907877	IdentifierDeclType	const ut8 *		903551	0					
ANR	907878	Identifier	tmp		903551	1					
ANR	907879	AssignmentExpression	"* tmp = r_buf_data ( b , & tmpsz )"		903551	2		=			
ANR	907880	Identifier	tmp		903551	0					
ANR	907881	CallExpression	"r_buf_data ( b , & tmpsz )"		903551	1					
ANR	907882	Callee	r_buf_data		903551	0					
ANR	907883	Identifier	r_buf_data		903551	0					
ANR	907884	ArgumentList	b		903551	1					
ANR	907885	Argument	b		903551	0					
ANR	907886	Identifier	b		903551	0					
ANR	907887	Argument	& tmpsz		903551	1					
ANR	907888	UnaryOperationExpression	& tmpsz		903551	0					
ANR	907889	UnaryOperator	&		903551	0					
ANR	907890	Identifier	tmpsz		903551	1					
ANR	907891	ExpressionStatement	"r_debug_execute ( core -> dbg , tmp , tmpsz , 0 )"	5190:3:147996:148038	903551	14	True				
ANR	907892	CallExpression	"r_debug_execute ( core -> dbg , tmp , tmpsz , 0 )"		903551	0					
ANR	907893	Callee	r_debug_execute		903551	0					
ANR	907894	Identifier	r_debug_execute		903551	0					
ANR	907895	ArgumentList	core -> dbg		903551	1					
ANR	907896	Argument	core -> dbg		903551	0					
ANR	907897	PtrMemberAccess	core -> dbg		903551	0					
ANR	907898	Identifier	core		903551	0					
ANR	907899	Identifier	dbg		903551	1					
ANR	907900	Argument	tmp		903551	1					
ANR	907901	Identifier	tmp		903551	0					
ANR	907902	Argument	tmpsz		903551	2					
ANR	907903	Identifier	tmpsz		903551	0					
ANR	907904	Argument	0		903551	3					
ANR	907905	PrimaryExpression	0		903551	0					
ANR	907906	ExpressionStatement	r_reg_arena_pop ( core -> dbg -> reg )	5191:3:148043:148075	903551	15	True				
ANR	907907	CallExpression	r_reg_arena_pop ( core -> dbg -> reg )		903551	0					
ANR	907908	Callee	r_reg_arena_pop		903551	0					
ANR	907909	Identifier	r_reg_arena_pop		903551	0					
ANR	907910	ArgumentList	core -> dbg -> reg		903551	1					
ANR	907911	Argument	core -> dbg -> reg		903551	0					
ANR	907912	PtrMemberAccess	core -> dbg -> reg		903551	0					
ANR	907913	PtrMemberAccess	core -> dbg		903551	0					
ANR	907914	Identifier	core		903551	0					
ANR	907915	Identifier	dbg		903551	1					
ANR	907916	Identifier	reg		903551	1					
ANR	907917	BreakStatement	break ;	5192:3:148080:148085	903551	16	True				
ANR	907918	Label	case 'r' :	5194:2:148093:148101	903551	6	True				
ANR	907919	ExpressionStatement	r_reg_arena_push ( core -> dbg -> reg )	5195:3:148115:148148	903551	7	True				
ANR	907920	CallExpression	r_reg_arena_push ( core -> dbg -> reg )		903551	0					
ANR	907921	Callee	r_reg_arena_push		903551	0					
ANR	907922	Identifier	r_reg_arena_push		903551	0					
ANR	907923	ArgumentList	core -> dbg -> reg		903551	1					
ANR	907924	Argument	core -> dbg -> reg		903551	0					
ANR	907925	PtrMemberAccess	core -> dbg -> reg		903551	0					
ANR	907926	PtrMemberAccess	core -> dbg		903551	0					
ANR	907927	Identifier	core		903551	0					
ANR	907928	Identifier	dbg		903551	1					
ANR	907929	Identifier	reg		903551	1					
ANR	907930	IfStatement	if ( input [ 2 ] == ' ' )		903551	8					
ANR	907931	Condition	input [ 2 ] == ' '	5196:7:148157:148171	903551	0	True				
ANR	907932	EqualityExpression	input [ 2 ] == ' '		903551	0		==			
ANR	907933	ArrayIndexing	input [ 2 ]		903551	0					
ANR	907934	Identifier	input		903551	0					
ANR	907935	PrimaryExpression	2		903551	1					
ANR	907936	PrimaryExpression	' '		903551	1					
ANR	907937	CompoundStatement		661:4:19238:19253	903551	1					
ANR	907938	IdentifierDeclStatement	ut8 bytes [ 4096 ] ;	5197:4:148180:148195	903551	0	True				
ANR	907939	IdentifierDecl	bytes [ 4096 ]		903551	0					
ANR	907940	IdentifierDeclType	ut8 [ 4096 ]		903551	0					
ANR	907941	Identifier	bytes		903551	1					
ANR	907942	PrimaryExpression	4096		903551	2					
ANR	907943	IfStatement	if ( strlen ( input + 2 ) < 4096 )		903551	1					
ANR	907944	Condition	strlen ( input + 2 ) < 4096	5198:8:148205:148229	903551	0	True				
ANR	907945	RelationalExpression	strlen ( input + 2 ) < 4096		903551	0		<			
ANR	907946	CallExpression	strlen ( input + 2 )		903551	0					
ANR	907947	Callee	strlen		903551	0					
ANR	907948	Identifier	strlen		903551	0					
ANR	907949	ArgumentList	input + 2		903551	1					
ANR	907950	Argument	input + 2		903551	0					
ANR	907951	AdditiveExpression	input + 2		903551	0		+			
ANR	907952	Identifier	input		903551	0					
ANR	907953	PrimaryExpression	2		903551	1					
ANR	907954	PrimaryExpression	4096		903551	1					
ANR	907955	CompoundStatement		663:5:19296:19351	903551	1					
ANR	907956	IdentifierDeclStatement	"int bytes_len = r_hex_str2bin ( input + 2 , bytes ) ;"	5199:5:148238:148293	903551	0	True				
ANR	907957	IdentifierDecl	"bytes_len = r_hex_str2bin ( input + 2 , bytes )"		903551	0					
ANR	907958	IdentifierDeclType	int		903551	0					
ANR	907959	Identifier	bytes_len		903551	1					
ANR	907960	AssignmentExpression	"bytes_len = r_hex_str2bin ( input + 2 , bytes )"		903551	2		=			
ANR	907961	Identifier	bytes_len		903551	0					
ANR	907962	CallExpression	"r_hex_str2bin ( input + 2 , bytes )"		903551	1					
ANR	907963	Callee	r_hex_str2bin		903551	0					
ANR	907964	Identifier	r_hex_str2bin		903551	0					
ANR	907965	ArgumentList	input + 2		903551	1					
ANR	907966	Argument	input + 2		903551	0					
ANR	907967	AdditiveExpression	input + 2		903551	0		+			
ANR	907968	Identifier	input		903551	0					
ANR	907969	PrimaryExpression	2		903551	1					
ANR	907970	Argument	bytes		903551	1					
ANR	907971	Identifier	bytes		903551	0					
ANR	907972	IfStatement	if ( bytes_len > 0 )		903551	1					
ANR	907973	Condition	bytes_len > 0	5201:9:148304:148316	903551	0	True				
ANR	907974	RelationalExpression	bytes_len > 0		903551	0		>			
ANR	907975	Identifier	bytes_len		903551	0					
ANR	907976	PrimaryExpression	0		903551	1					
ANR	907977	CompoundStatement		665:24:19377:19377	903551	1					
ANR	907978	ExpressionStatement	"r_debug_execute ( core -> dbg , bytes , bytes_len , 0 )"	5202:6:148327:148391	903551	0	True				
ANR	907979	CallExpression	"r_debug_execute ( core -> dbg , bytes , bytes_len , 0 )"		903551	0					
ANR	907980	Callee	r_debug_execute		903551	0					
ANR	907981	Identifier	r_debug_execute		903551	0					
ANR	907982	ArgumentList	core -> dbg		903551	1					
ANR	907983	Argument	core -> dbg		903551	0					
ANR	907984	PtrMemberAccess	core -> dbg		903551	0					
ANR	907985	Identifier	core		903551	0					
ANR	907986	Identifier	dbg		903551	1					
ANR	907987	Argument	bytes		903551	1					
ANR	907988	Identifier	bytes		903551	0					
ANR	907989	Argument	bytes_len		903551	2					
ANR	907990	Identifier	bytes_len		903551	0					
ANR	907991	Argument	0		903551	3					
ANR	907992	PrimaryExpression	0		903551	0					
ANR	907993	ElseStatement	else		903551	0					
ANR	907994	CompoundStatement		669:12:19463:19463	903551	0					
ANR	907995	ExpressionStatement	"eprintf ( ""Invalid hexpairs\\n"" )"	5206:6:148413:148443	903551	0	True				
ANR	907996	CallExpression	"eprintf ( ""Invalid hexpairs\\n"" )"		903551	0					
ANR	907997	Callee	eprintf		903551	0					
ANR	907998	Identifier	eprintf		903551	0					
ANR	907999	ArgumentList	"""Invalid hexpairs\\n"""		903551	1					
ANR	908000	Argument	"""Invalid hexpairs\\n"""		903551	0					
ANR	908001	PrimaryExpression	"""Invalid hexpairs\\n"""		903551	0					
ANR	908002	ElseStatement	else		903551	0					
ANR	908003	ExpressionStatement	"eprintf ( ""Injection opcodes so long\\n"" )"	5208:11:148463:148502	903551	0	True				
ANR	908004	CallExpression	"eprintf ( ""Injection opcodes so long\\n"" )"		903551	0					
ANR	908005	Callee	eprintf		903551	0					
ANR	908006	Identifier	eprintf		903551	0					
ANR	908007	ArgumentList	"""Injection opcodes so long\\n"""		903551	1					
ANR	908008	Argument	"""Injection opcodes so long\\n"""		903551	0					
ANR	908009	PrimaryExpression	"""Injection opcodes so long\\n"""		903551	0					
ANR	908010	ExpressionStatement	r_reg_arena_pop ( core -> dbg -> reg )	5210:3:148512:148544	903551	9	True				
ANR	908011	CallExpression	r_reg_arena_pop ( core -> dbg -> reg )		903551	0					
ANR	908012	Callee	r_reg_arena_pop		903551	0					
ANR	908013	Identifier	r_reg_arena_pop		903551	0					
ANR	908014	ArgumentList	core -> dbg -> reg		903551	1					
ANR	908015	Argument	core -> dbg -> reg		903551	0					
ANR	908016	PtrMemberAccess	core -> dbg -> reg		903551	0					
ANR	908017	PtrMemberAccess	core -> dbg		903551	0					
ANR	908018	Identifier	core		903551	0					
ANR	908019	Identifier	dbg		903551	1					
ANR	908020	Identifier	reg		903551	1					
ANR	908021	BreakStatement	break ;	5211:3:148549:148554	903551	10	True				
ANR	908022	Label	case 's' :	5212:2:148558:148566	903551	11	True				
ANR	908023	IfStatement	if ( input [ 2 ] )		903551	12					
ANR	908024	Condition	input [ 2 ]	5213:7:148584:148591	903551	0	True				
ANR	908025	ArrayIndexing	input [ 2 ]		903551	0					
ANR	908026	Identifier	input		903551	0					
ANR	908027	PrimaryExpression	2		903551	1					
ANR	908028	CompoundStatement		678:4:19658:19667	903551	1					
ANR	908029	IdentifierDeclStatement	char * str ;	5214:4:148600:148609	903551	0	True				
ANR	908030	IdentifierDecl	* str		903551	0					
ANR	908031	IdentifierDeclType	char *		903551	0					
ANR	908032	Identifier	str		903551	1					
ANR	908033	ExpressionStatement	r_cons_push ( )	5215:4:148615:148629	903551	1	True				
ANR	908034	CallExpression	r_cons_push ( )		903551	0					
ANR	908035	Callee	r_cons_push		903551	0					
ANR	908036	Identifier	r_cons_push		903551	0					
ANR	908037	ArgumentList			903551	1					
ANR	908038	ExpressionStatement	"str = r_core_cmd_str ( core , sdb_fmt ( ""gs %s"" , input + 2 ) )"	5216:4:148635:148692	903551	2	True				
ANR	908039	AssignmentExpression	"str = r_core_cmd_str ( core , sdb_fmt ( ""gs %s"" , input + 2 ) )"		903551	0		=			
ANR	908040	Identifier	str		903551	0					
ANR	908041	CallExpression	"r_core_cmd_str ( core , sdb_fmt ( ""gs %s"" , input + 2 ) )"		903551	1					
ANR	908042	Callee	r_core_cmd_str		903551	0					
ANR	908043	Identifier	r_core_cmd_str		903551	0					
ANR	908044	ArgumentList	core		903551	1					
ANR	908045	Argument	core		903551	0					
ANR	908046	Identifier	core		903551	0					
ANR	908047	Argument	"sdb_fmt ( ""gs %s"" , input + 2 )"		903551	1					
ANR	908048	CallExpression	"sdb_fmt ( ""gs %s"" , input + 2 )"		903551	0					
ANR	908049	Callee	sdb_fmt		903551	0					
ANR	908050	Identifier	sdb_fmt		903551	0					
ANR	908051	ArgumentList	"""gs %s"""		903551	1					
ANR	908052	Argument	"""gs %s"""		903551	0					
ANR	908053	PrimaryExpression	"""gs %s"""		903551	0					
ANR	908054	Argument	input + 2		903551	1					
ANR	908055	AdditiveExpression	input + 2		903551	0		+			
ANR	908056	Identifier	input		903551	0					
ANR	908057	PrimaryExpression	2		903551	1					
ANR	908058	ExpressionStatement	r_cons_pop ( )	5217:4:148698:148711	903551	3	True				
ANR	908059	CallExpression	r_cons_pop ( )		903551	0					
ANR	908060	Callee	r_cons_pop		903551	0					
ANR	908061	Identifier	r_cons_pop		903551	0					
ANR	908062	ArgumentList			903551	1					
ANR	908063	ExpressionStatement	"r_core_cmdf ( core , ""dx %s"" , str )"	5218:4:148717:148749	903551	4	True				
ANR	908064	CallExpression	"r_core_cmdf ( core , ""dx %s"" , str )"		903551	0					
ANR	908065	Callee	r_core_cmdf		903551	0					
ANR	908066	Identifier	r_core_cmdf		903551	0					
ANR	908067	ArgumentList	core		903551	1					
ANR	908068	Argument	core		903551	0					
ANR	908069	Identifier	core		903551	0					
ANR	908070	Argument	"""dx %s"""		903551	1					
ANR	908071	PrimaryExpression	"""dx %s"""		903551	0					
ANR	908072	Argument	str		903551	2					
ANR	908073	Identifier	str		903551	0					
ANR	908074	ExpressionStatement	free ( str )	5219:4:148779:148789	903551	5	True				
ANR	908075	CallExpression	free ( str )		903551	0					
ANR	908076	Callee	free		903551	0					
ANR	908077	Identifier	free		903551	0					
ANR	908078	ArgumentList	str		903551	1					
ANR	908079	Argument	str		903551	0					
ANR	908080	Identifier	str		903551	0					
ANR	908081	ElseStatement	else		903551	0					
ANR	908082	CompoundStatement		684:10:19859:19859	903551	0					
ANR	908083	ExpressionStatement	"eprintf ( ""Missing parameter used in gs by dxs\\n"" )"	5221:4:148807:148856	903551	0	True				
ANR	908084	CallExpression	"eprintf ( ""Missing parameter used in gs by dxs\\n"" )"		903551	0					
ANR	908085	Callee	eprintf		903551	0					
ANR	908086	Identifier	eprintf		903551	0					
ANR	908087	ArgumentList	"""Missing parameter used in gs by dxs\\n"""		903551	1					
ANR	908088	Argument	"""Missing parameter used in gs by dxs\\n"""		903551	0					
ANR	908089	PrimaryExpression	"""Missing parameter used in gs by dxs\\n"""		903551	0					
ANR	908090	BreakStatement	break ;	5223:3:148866:148871	903551	13	True				
ANR	908091	Label	case '?' :	5224:2:148875:148883	903551	14	True				
ANR	908092	Label	default :	5225:2:148896:148903	903551	15	True				
ANR	908093	Identifier	default		903551	0					
ANR	908094	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dx )"	5226:3:148908:148943	903551	16	True				
ANR	908095	CallExpression	"r_core_cmd_help ( core , help_msg_dx )"		903551	0					
ANR	908096	Callee	r_core_cmd_help		903551	0					
ANR	908097	Identifier	r_core_cmd_help		903551	0					
ANR	908098	ArgumentList	core		903551	1					
ANR	908099	Argument	core		903551	0					
ANR	908100	Identifier	core		903551	0					
ANR	908101	Argument	help_msg_dx		903551	1					
ANR	908102	Identifier	help_msg_dx		903551	0					
ANR	908103	BreakStatement	break ;	5227:3:148948:148953	903551	17	True				
ANR	908104	BreakStatement	break ;	5229:2:148961:148966	903551	58	True				
ANR	908105	Label	case '?' :	5230:1:148969:148977	903551	59	True				
ANR	908106	Label	default :	5231:1:148988:148995	903551	60	True				
ANR	908107	Identifier	default		903551	0					
ANR	908108	ExpressionStatement	"r_core_cmd_help ( core , help_msg_d )"	5232:2:148999:149033	903551	61	True				
ANR	908109	CallExpression	"r_core_cmd_help ( core , help_msg_d )"		903551	0					
ANR	908110	Callee	r_core_cmd_help		903551	0					
ANR	908111	Identifier	r_core_cmd_help		903551	0					
ANR	908112	ArgumentList	core		903551	1					
ANR	908113	Argument	core		903551	0					
ANR	908114	Identifier	core		903551	0					
ANR	908115	Argument	help_msg_d		903551	1					
ANR	908116	Identifier	help_msg_d		903551	0					
ANR	908117	BreakStatement	break ;	5233:2:149037:149042	903551	62	True				
ANR	908118	IfStatement	if ( follow > 0 )		903551	12					
ANR	908119	Condition	follow > 0	5235:5:149052:149061	903551	0	True				
ANR	908120	RelationalExpression	follow > 0		903551	0		>			
ANR	908121	Identifier	follow		903551	0					
ANR	908122	PrimaryExpression	0		903551	1					
ANR	908123	CompoundStatement		700:2:20126:20169	903551	1					
ANR	908124	IdentifierDeclStatement	"ut64 pc = r_debug_reg_get ( core -> dbg , ""PC"" ) ;"	5236:2:149068:149111	903551	0	True				
ANR	908125	IdentifierDecl	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		903551	0					
ANR	908126	IdentifierDeclType	ut64		903551	0					
ANR	908127	Identifier	pc		903551	1					
ANR	908128	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		903551	2		=			
ANR	908129	Identifier	pc		903551	0					
ANR	908130	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		903551	1					
ANR	908131	Callee	r_debug_reg_get		903551	0					
ANR	908132	Identifier	r_debug_reg_get		903551	0					
ANR	908133	ArgumentList	core -> dbg		903551	1					
ANR	908134	Argument	core -> dbg		903551	0					
ANR	908135	PtrMemberAccess	core -> dbg		903551	0					
ANR	908136	Identifier	core		903551	0					
ANR	908137	Identifier	dbg		903551	1					
ANR	908138	Argument	"""PC"""		903551	1					
ANR	908139	PrimaryExpression	"""PC"""		903551	0					
ANR	908140	IfStatement	if ( ( pc < core -> offset ) || ( pc > ( core -> offset + follow ) ) )		903551	1					
ANR	908141	Condition	( pc < core -> offset ) || ( pc > ( core -> offset + follow ) )	5237:6:149119:149171	903551	0	True				
ANR	908142	OrExpression	( pc < core -> offset ) || ( pc > ( core -> offset + follow ) )		903551	0		||			
ANR	908143	RelationalExpression	pc < core -> offset		903551	0		<			
ANR	908144	Identifier	pc		903551	0					
ANR	908145	PtrMemberAccess	core -> offset		903551	1					
ANR	908146	Identifier	core		903551	0					
ANR	908147	Identifier	offset		903551	1					
ANR	908148	RelationalExpression	pc > ( core -> offset + follow )		903551	1		>			
ANR	908149	Identifier	pc		903551	0					
ANR	908150	AdditiveExpression	core -> offset + follow		903551	1		+			
ANR	908151	PtrMemberAccess	core -> offset		903551	0					
ANR	908152	Identifier	core		903551	0					
ANR	908153	Identifier	offset		903551	1					
ANR	908154	Identifier	follow		903551	1					
ANR	908155	CompoundStatement		701:61:20232:20232	903551	1					
ANR	908156	ExpressionStatement	"r_core_cmd0 ( core , ""sr PC"" )"	5238:3:149179:149206	903551	0	True				
ANR	908157	CallExpression	"r_core_cmd0 ( core , ""sr PC"" )"		903551	0					
ANR	908158	Callee	r_core_cmd0		903551	0					
ANR	908159	Identifier	r_core_cmd0		903551	0					
ANR	908160	ArgumentList	core		903551	1					
ANR	908161	Argument	core		903551	0					
ANR	908162	Identifier	core		903551	0					
ANR	908163	Argument	"""sr PC"""		903551	1					
ANR	908164	PrimaryExpression	"""sr PC"""		903551	0					
ANR	908165	ReturnStatement	return 0 ;	5241:1:149216:149224	903551	13	True				
ANR	908166	PrimaryExpression	0		903551	0					
ANR	908167	ReturnType	static int		903551	1					
ANR	908168	Identifier	cmd_debug		903551	2					
ANR	908169	ParameterList	"void * data , const char * input"		903551	3					
ANR	908170	Parameter	void * data	4537:21:128910:128919	903551	0	True				
ANR	908171	ParameterType	void *		903551	0					
ANR	908172	Identifier	data		903551	1					
ANR	908173	Parameter	const char * input	4537:33:128922:128938	903551	1	True				
ANR	908174	ParameterType	const char *		903551	0					
ANR	908175	Identifier	input		903551	1					
ANR	908176	CFGEntryNode	ENTRY		903551		True				
ANR	908177	CFGExitNode	EXIT		903551		True				
ANR	908178	Symbol	t -> size		903551						
ANR	908179	Symbol	romem		903551						
ANR	908180	Symbol	egg		903551						
ANR	908181	Symbol	op -> mnemonic		903551						
ANR	908182	Symbol	r_debug_reg_get		903551						
ANR	908183	Symbol	* input		903551						
ANR	908184	Symbol	core -> offset		903551						
ANR	908185	Symbol	strchr		903551						
ANR	908186	Symbol	* core -> dbg -> h		903551						
ANR	908187	Symbol	addrsize		903551						
ANR	908188	Symbol	r_buf_new_file		903551						
ANR	908189	Symbol	strncmp		903551						
ANR	908190	Symbol	core -> egg		903551						
ANR	908191	Symbol	len		903551						
ANR	908192	Symbol	stats		903551						
ANR	908193	Symbol	* core -> anal -> esil		903551						
ANR	908194	Symbol	core -> io -> debug		903551						
ANR	908195	Symbol	tmp		903551						
ANR	908196	Symbol	t -> times		903551						
ANR	908197	Symbol	& tmpsz		903551						
ANR	908198	Symbol	core -> anal -> esil		903551						
ANR	908199	Symbol	r_core_op_anal		903551						
ANR	908200	Symbol	* tp		903551						
ANR	908201	Symbol	r_debug_desc_write		903551						
ANR	908202	Symbol	r_debug_trace_add		903551						
ANR	908203	Symbol	asm_os		903551						
ANR	908204	Symbol	r_debug_trace_new		903551						
ANR	908205	Symbol	iter		903551						
ANR	908206	Symbol	core -> dbg -> h		903551						
ANR	908207	Symbol	al		903551						
ANR	908208	Symbol	tmpsz		903551						
ANR	908209	Symbol	iotrap		903551						
ANR	908210	Symbol	get_corefile_name		903551						
ANR	908211	Symbol	str		903551						
ANR	908212	Symbol	input		903551						
ANR	908213	Symbol	* * * core		903551						
ANR	908214	Symbol	r_debug_desc_read		903551						
ANR	908215	Symbol	* rdi -> exe		903551						
ANR	908216	Symbol	stop		903551						
ANR	908217	Symbol	R_ANAL_OP_MASK_DISASM		903551						
ANR	908218	Symbol	* trace		903551						
ANR	908219	Symbol	r_config_get_i		903551						
ANR	908220	Symbol	escaped_str		903551						
ANR	908221	Symbol	r_str_trim_ro		903551						
ANR	908222	Symbol	r_diff_buffers_to_string		903551						
ANR	908223	Symbol	rdi -> exe		903551						
ANR	908224	Symbol	* core -> dbg		903551						
ANR	908225	Symbol	r_debug_info		903551						
ANR	908226	Symbol	getFileData		903551						
ANR	908227	Symbol	* core		903551						
ANR	908228	Symbol	core -> dbg -> reason . signum		903551						
ANR	908229	Symbol	r_config_get		903551						
ANR	908230	Symbol	help_msg_d		903551						
ANR	908231	Symbol	core -> assembler		903551						
ANR	908232	Symbol	rdi -> gid		903551						
ANR	908233	Symbol	bl		903551						
ANR	908234	Symbol	acode		903551						
ANR	908235	Symbol	core -> anal		903551						
ANR	908236	Symbol	O_RDWR		903551						
ANR	908237	Symbol	r_cons_is_breaked		903551						
ANR	908238	Symbol	min		903551						
ANR	908239	Symbol	r_debug_desc_seek		903551						
ANR	908240	Symbol	core -> io		903551						
ANR	908241	Symbol	core -> anal -> esil -> db_trace		903551						
ANR	908242	Symbol	arg		903551						
ANR	908243	Symbol	X		903551						
ANR	908244	Symbol	Y		903551						
ANR	908245	Symbol	* str		903551						
ANR	908246	Symbol	r_hex_str2bin		903551						
ANR	908247	Symbol	cmd_anal_reg		903551						
ANR	908248	Symbol	atoi		903551						
ANR	908249	Symbol	a		903551						
ANR	908250	Symbol	sdb_new0		903551						
ANR	908251	Symbol	t -> count		903551						
ANR	908252	Symbol	b		903551						
ANR	908253	Symbol	newfd		903551						
ANR	908254	Symbol	d		903551						
ANR	908255	Symbol	acode -> bytes		903551						
ANR	908256	Symbol	r_debug_trace_get		903551						
ANR	908257	Symbol	r_core_syscallf		903551						
ANR	908258	Symbol	asm_bits		903551						
ANR	908259	Symbol	n		903551						
ANR	908260	Symbol	off		903551						
ANR	908261	Symbol	buf		903551						
ANR	908262	Symbol	core -> dbg -> reason		903551						
ANR	908263	Symbol	r		903551						
ANR	908264	Symbol	s		903551						
ANR	908265	Symbol	* core -> anal		903551						
ANR	908266	Symbol	t		903551						
ANR	908267	Symbol	rdi		903551						
ANR	908268	Symbol	core -> dbg -> reg		903551						
ANR	908269	Symbol	static_debug_stop		903551						
ANR	908270	Symbol	r_anal_esil_new		903551						
ANR	908271	Symbol	r_debug_stop_reason		903551						
ANR	908272	Symbol	tp		903551						
ANR	908273	Symbol	cmd_debug_step		903551						
ANR	908274	Symbol	core -> dbg -> pid		903551						
ANR	908275	Symbol	* rdi -> kernel_stack		903551						
ANR	908276	Symbol	r_core_cmd_str		903551						
ANR	908277	Symbol	data		903551						
ANR	908278	Symbol	* op		903551						
ANR	908279	Symbol	stacksize		903551						
ANR	908280	Symbol	help_msg_dd		903551						
ANR	908281	Symbol	O_CREAT		903551						
ANR	908282	Symbol	* arg2 ++		903551						
ANR	908283	Symbol	* core -> dbg -> trace		903551						
ANR	908284	Symbol	pid		903551						
ANR	908285	Symbol	r_core_anal_op		903551						
ANR	908286	Symbol	r_str_trim_dup		903551						
ANR	908287	Symbol	acode -> len		903551						
ANR	908288	Symbol	bytes_len		903551						
ANR	908289	Symbol	* rdi -> cwd		903551						
ANR	908290	Symbol	strlen		903551						
ANR	908291	Symbol	core -> dbg -> h -> gcore		903551						
ANR	908292	Symbol	r_asm_massemble		903551						
ANR	908293	Symbol	* * core -> anal		903551						
ANR	908294	Symbol	r_num_get		903551						
ANR	908295	Symbol	core -> num		903551						
ANR	908296	Symbol	rdi -> cwd		903551						
ANR	908297	Symbol	help_msg_dL		903551						
ANR	908298	Symbol	strcmp		903551						
ANR	908299	Symbol	* rdi -> cmdline		903551						
ANR	908300	Symbol	res		903551						
ANR	908301	Symbol	NULL		903551						
ANR	908302	Symbol	count		903551						
ANR	908303	Symbol	sdb_querys		903551						
ANR	908304	Symbol	r_signal_to_string		903551						
ANR	908305	Symbol	r_str_escape		903551						
ANR	908306	Symbol	core		903551						
ANR	908307	Symbol	arg2		903551						
ANR	908308	Symbol	rdi -> pid		903551						
ANR	908309	Symbol	corefile		903551						
ANR	908310	Symbol	rdi -> usr		903551						
ANR	908311	Symbol	r_egg_get_bin		903551						
ANR	908312	Symbol	core -> dbg -> reason . bp_addr		903551						
ANR	908313	Symbol	core -> print		903551						
ANR	908314	Symbol	idx		903551						
ANR	908315	Symbol	asm_arch		903551						
ANR	908316	Symbol	fd		903551						
ANR	908317	Symbol	* acode		903551						
ANR	908318	Symbol	R_ANAL_OP_MASK_ESIL		903551						
ANR	908319	Symbol	rdi -> tid		903551						
ANR	908320	Symbol	dst		903551						
ANR	908321	Symbol	r_sandbox_enable		903551						
ANR	908322	Symbol	trace -> addr		903551						
ANR	908323	Symbol	r_diff_new		903551						
ANR	908324	Symbol	r_str_split_list		903551						
ANR	908325	Symbol	* * rdi		903551						
ANR	908326	Symbol	rdi -> cmdline		903551						
ANR	908327	Symbol	R_ANAL_OP_MASK_BASIC		903551						
ANR	908328	Symbol	nonull		903551						
ANR	908329	Symbol	rdi -> kernel_stack		903551						
ANR	908330	Symbol	r_num_math		903551						
ANR	908331	Symbol	trace		903551						
ANR	908332	Symbol	core -> dbg -> trace		903551						
ANR	908333	Symbol	help_msg_dts		903551						
ANR	908334	Symbol	addr		903551						
ANR	908335	Symbol	UT64_MAX		903551						
ANR	908336	Symbol	sdb_fmt		903551						
ANR	908337	Symbol	* * core		903551						
ANR	908338	Symbol	r_buf_data		903551						
ANR	908339	Symbol	core -> config		903551						
ANR	908340	Symbol	core -> dbg -> reason . type		903551						
ANR	908341	Symbol	op		903551						
ANR	908342	Symbol	trace -> count		903551						
ANR	908343	Symbol	r_str_bool		903551						
ANR	908344	Symbol	* rdi		903551						
ANR	908345	Symbol	core -> dbg -> tree		903551						
ANR	908346	Symbol	help_msg_dte		903551						
ANR	908347	Symbol	core -> dbg -> trace -> tag		903551						
ANR	908348	Symbol	help_msg_dx		903551						
ANR	908349	Symbol	follow		903551						
ANR	908350	Symbol	r_debug_reason_to_string		903551						
ANR	908351	Symbol	tp -> count		903551						
ANR	908352	Symbol	ptr		903551						
ANR	908353	Symbol	args		903551						
ANR	908354	Symbol	* core -> io		903551						
ANR	908355	Symbol	uni		903551						
ANR	908356	Symbol	r_debug_kill		903551						
ANR	908357	Symbol	pc		903551						
ANR	908358	Symbol	help_msg_dt		903551						
ANR	908359	Symbol	core -> dbg -> reason . tid		903551						
ANR	908360	Symbol	bytes		903551						
ANR	908361	Symbol	help_msg_di		903551						
ANR	908362	Symbol	op -> size		903551						
ANR	908363	Symbol	strdup		903551						
ANR	908364	Symbol	r_debug_desc_dup		903551						
ANR	908365	Symbol	rdi -> uid		903551						
ANR	908366	Symbol	* t		903551						
ANR	908367	Symbol	help_msg_do		903551						
ANR	908368	Symbol	core -> dbg		903551						
ANR	908369	Symbol	* * core -> dbg		903551						
