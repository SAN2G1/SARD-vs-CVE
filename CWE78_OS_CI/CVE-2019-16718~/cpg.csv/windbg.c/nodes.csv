command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6483425	File	data/converged/CVE-2019-16718~_radare2/windbg.c								
ANR	6483426	DeclStmt									
ANR	6483427	Decl							Profile	Profile * [ ]	p_table
ANR	6483428	Function	windbg_get_profile	41:0:806:1094							
ANR	6483429	FunctionDef	"windbg_get_profile (int bits , int build , int sp)"		6483428	0					
ANR	6483430	CompoundStatement		41:57:863:1094	6483428	0					
ANR	6483431	IdentifierDeclStatement	int i ;	42:1:866:871	6483428	0	True				
ANR	6483432	IdentifierDecl	i		6483428	0					
ANR	6483433	IdentifierDeclType	int		6483428	0					
ANR	6483434	Identifier	i		6483428	1					
ANR	6483435	ForStatement	for ( i = 0 ; p_table [ i ] ; i ++ )		6483428	1					
ANR	6483436	ForInit	i = 0 ;	43:6:879:884	6483428	0	True				
ANR	6483437	AssignmentExpression	i = 0		6483428	0		=			
ANR	6483438	Identifier	i		6483428	0					
ANR	6483439	PrimaryExpression	0		6483428	1					
ANR	6483440	Condition	p_table [ i ]	43:13:886:895	6483428	1	True				
ANR	6483441	ArrayIndexing	p_table [ i ]		6483428	0					
ANR	6483442	Identifier	p_table		6483428	0					
ANR	6483443	Identifier	i		6483428	1					
ANR	6483444	PostIncDecOperationExpression	i ++	43:25:898:900	6483428	2	True				
ANR	6483445	Identifier	i		6483428	0					
ANR	6483446	IncDec	++		6483428	1					
ANR	6483447	CompoundStatement		3:30:39:39	6483428	3					
ANR	6483448	IfStatement	if ( p_table [ i ] -> build != build )		6483428	0					
ANR	6483449	Condition	p_table [ i ] -> build != build	44:6:911:936	6483428	0	True				
ANR	6483450	EqualityExpression	p_table [ i ] -> build != build		6483428	0		!=			
ANR	6483451	PtrMemberAccess	p_table [ i ] -> build		6483428	0					
ANR	6483452	ArrayIndexing	p_table [ i ]		6483428	0					
ANR	6483453	Identifier	p_table		6483428	0					
ANR	6483454	Identifier	i		6483428	1					
ANR	6483455	Identifier	build		6483428	1					
ANR	6483456	Identifier	build		6483428	1					
ANR	6483457	CompoundStatement		4:34:75:75	6483428	1					
ANR	6483458	ContinueStatement	continue ;	45:3:944:952	6483428	0	True				
ANR	6483459	IfStatement	if ( p_table [ i ] -> sp != sp )		6483428	1					
ANR	6483460	Condition	p_table [ i ] -> sp != sp	47:6:964:983	6483428	0	True				
ANR	6483461	EqualityExpression	p_table [ i ] -> sp != sp		6483428	0		!=			
ANR	6483462	PtrMemberAccess	p_table [ i ] -> sp		6483428	0					
ANR	6483463	ArrayIndexing	p_table [ i ]		6483428	0					
ANR	6483464	Identifier	p_table		6483428	0					
ANR	6483465	Identifier	i		6483428	1					
ANR	6483466	Identifier	sp		6483428	1					
ANR	6483467	Identifier	sp		6483428	1					
ANR	6483468	CompoundStatement		7:28:122:122	6483428	1					
ANR	6483469	ContinueStatement	continue ;	48:3:991:999	6483428	0	True				
ANR	6483470	IfStatement	if ( p_table [ i ] -> bits != bits )		6483428	2					
ANR	6483471	Condition	p_table [ i ] -> bits != bits	50:6:1011:1034	6483428	0	True				
ANR	6483472	EqualityExpression	p_table [ i ] -> bits != bits		6483428	0		!=			
ANR	6483473	PtrMemberAccess	p_table [ i ] -> bits		6483428	0					
ANR	6483474	ArrayIndexing	p_table [ i ]		6483428	0					
ANR	6483475	Identifier	p_table		6483428	0					
ANR	6483476	Identifier	i		6483428	1					
ANR	6483477	Identifier	bits		6483428	1					
ANR	6483478	Identifier	bits		6483428	1					
ANR	6483479	CompoundStatement		10:32:173:173	6483428	1					
ANR	6483480	ContinueStatement	continue ;	51:3:1042:1050	6483428	0	True				
ANR	6483481	ReturnStatement	return p_table [ i ] ;	53:2:1058:1075	6483428	3	True				
ANR	6483482	ArrayIndexing	p_table [ i ]		6483428	0					
ANR	6483483	Identifier	p_table		6483428	0					
ANR	6483484	Identifier	i		6483428	1					
ANR	6483485	ReturnStatement	return NULL ;	55:1:1081:1092	6483428	2	True				
ANR	6483486	Identifier	NULL		6483428	0					
ANR	6483487	ReturnType	Profile *		6483428	1					
ANR	6483488	Identifier	windbg_get_profile		6483428	2					
ANR	6483489	ParameterList	"int bits , int build , int sp"		6483428	3					
ANR	6483490	Parameter	int bits	41:28:834:841	6483428	0	True				
ANR	6483491	ParameterType	int		6483428	0					
ANR	6483492	Identifier	bits		6483428	1					
ANR	6483493	Parameter	int build	41:38:844:852	6483428	1	True				
ANR	6483494	ParameterType	int		6483428	0					
ANR	6483495	Identifier	build		6483428	1					
ANR	6483496	Parameter	int sp	41:49:855:860	6483428	2	True				
ANR	6483497	ParameterType	int		6483428	0					
ANR	6483498	Identifier	sp		6483428	1					
ANR	6483499	CFGEntryNode	ENTRY		6483428		True				
ANR	6483500	CFGExitNode	EXIT		6483428		True				
ANR	6483501	Symbol	* * i		6483428						
ANR	6483502	Symbol	NULL		6483428						
ANR	6483503	Symbol	p_table [ i ] -> build		6483428						
ANR	6483504	Symbol	bits		6483428						
ANR	6483505	Symbol	i		6483428						
ANR	6483506	Symbol	* * p_table		6483428						
ANR	6483507	Symbol	p_table [ i ] -> sp		6483428						
ANR	6483508	Symbol	* p_table		6483428						
ANR	6483509	Symbol	* i		6483428						
ANR	6483510	Symbol	build		6483428						
ANR	6483511	Symbol	p_table		6483428						
ANR	6483512	Symbol	sp		6483428						
ANR	6483513	Symbol	p_table [ i ] -> bits		6483428						
ANR	6483514	ClassDef	_WindCtx	66:0:1263:1474							
ANR	6483515	DeclStmt									
ANR	6483516	Decl							void	void *	io_ptr
ANR	6483517	DeclStmt									
ANR	6483518	Decl							uint32_t	uint32_t	seq_id
ANR	6483519	DeclStmt									
ANR	6483520	Decl							int	int	syncd
ANR	6483521	DeclStmt									
ANR	6483522	Decl							int	int	cpu_count
ANR	6483523	DeclStmt									
ANR	6483524	Decl							int	int	cpu
ANR	6483525	DeclStmt									
ANR	6483526	Decl							int	int	pae
ANR	6483527	DeclStmt									
ANR	6483528	Decl							int	int	is_x64
ANR	6483529	DeclStmt									
ANR	6483530	Decl							Profile	Profile *	os_profile
ANR	6483531	DeclStmt									
ANR	6483532	Decl							RList	RList *	plist_cache
ANR	6483533	DeclStmt									
ANR	6483534	Decl							RList	RList *	tlist_cache
ANR	6483535	DeclStmt									
ANR	6483536	Decl							ut64	ut64	dbg_addr
ANR	6483537	DeclStmt									
ANR	6483538	Decl							WindProc	WindProc *	target
ANR	6483539	Function	windbg_get_bits	81:0:1478:1567							
ANR	6483540	FunctionDef	windbg_get_bits (WindCtx * ctx)		6483539	0					
ANR	6483541	CompoundStatement		81:34:1512:1567	6483539	0					
ANR	6483542	ReturnStatement	return ctx -> is_x64 ? R_SYS_BITS_64 : R_SYS_BITS_32 ;	82:1:1515:1565	6483539	0	True				
ANR	6483543	ConditionalExpression	ctx -> is_x64 ? R_SYS_BITS_64 : R_SYS_BITS_32		6483539	0					
ANR	6483544	Condition	ctx -> is_x64		6483539	0					
ANR	6483545	PtrMemberAccess	ctx -> is_x64		6483539	0					
ANR	6483546	Identifier	ctx		6483539	0					
ANR	6483547	Identifier	is_x64		6483539	1					
ANR	6483548	Identifier	R_SYS_BITS_64		6483539	1					
ANR	6483549	Identifier	R_SYS_BITS_32		6483539	2					
ANR	6483550	ReturnType	int		6483539	1					
ANR	6483551	Identifier	windbg_get_bits		6483539	2					
ANR	6483552	ParameterList	WindCtx * ctx		6483539	3					
ANR	6483553	Parameter	WindCtx * ctx	81:20:1498:1509	6483539	0	True				
ANR	6483554	ParameterType	WindCtx *		6483539	0					
ANR	6483555	Identifier	ctx		6483539	1					
ANR	6483556	CFGEntryNode	ENTRY		6483539		True				
ANR	6483557	CFGExitNode	EXIT		6483539		True				
ANR	6483558	Symbol	ctx -> is_x64		6483539						
ANR	6483559	Symbol	ctx		6483539						
ANR	6483560	Symbol	R_SYS_BITS_64		6483539						
ANR	6483561	Symbol	* ctx		6483539						
ANR	6483562	Symbol	R_SYS_BITS_32		6483539						
ANR	6483563	Function	windbg_get_cpus	85:0:1570:1659							
ANR	6483564	FunctionDef	windbg_get_cpus (WindCtx * ctx)		6483563	0					
ANR	6483565	CompoundStatement		85:34:1604:1659	6483563	0					
ANR	6483566	IfStatement	if ( ! ctx )		6483563	0					
ANR	6483567	Condition	! ctx	86:5:1611:1614	6483563	0	True				
ANR	6483568	UnaryOperationExpression	! ctx		6483563	0					
ANR	6483569	UnaryOperator	!		6483563	0					
ANR	6483570	Identifier	ctx		6483563	1					
ANR	6483571	CompoundStatement		2:11:12:12	6483563	1					
ANR	6483572	ReturnStatement	return - 1 ;	87:2:1621:1630	6483563	0	True				
ANR	6483573	UnaryOperationExpression	- 1		6483563	0					
ANR	6483574	UnaryOperator	-		6483563	0					
ANR	6483575	PrimaryExpression	1		6483563	1					
ANR	6483576	ReturnStatement	return ctx -> cpu_count ;	89:1:1636:1657	6483563	1	True				
ANR	6483577	PtrMemberAccess	ctx -> cpu_count		6483563	0					
ANR	6483578	Identifier	ctx		6483563	0					
ANR	6483579	Identifier	cpu_count		6483563	1					
ANR	6483580	ReturnType	int		6483563	1					
ANR	6483581	Identifier	windbg_get_cpus		6483563	2					
ANR	6483582	ParameterList	WindCtx * ctx		6483563	3					
ANR	6483583	Parameter	WindCtx * ctx	85:20:1590:1601	6483563	0	True				
ANR	6483584	ParameterType	WindCtx *		6483563	0					
ANR	6483585	Identifier	ctx		6483563	1					
ANR	6483586	CFGEntryNode	ENTRY		6483563		True				
ANR	6483587	CFGExitNode	EXIT		6483563		True				
ANR	6483588	Symbol	ctx		6483563						
ANR	6483589	Symbol	ctx -> cpu_count		6483563						
ANR	6483590	Symbol	* ctx		6483563						
ANR	6483591	Function	windbg_set_cpu	92:0:1662:1794							
ANR	6483592	FunctionDef	"windbg_set_cpu (WindCtx * ctx , int cpu)"		6483591	0					
ANR	6483593	CompoundStatement		92:43:1705:1794	6483591	0					
ANR	6483594	IfStatement	if ( ! ctx || cpu > ctx -> cpu_count )		6483591	0					
ANR	6483595	Condition	! ctx || cpu > ctx -> cpu_count	93:5:1712:1739	6483591	0	True				
ANR	6483596	OrExpression	! ctx || cpu > ctx -> cpu_count		6483591	0		||			
ANR	6483597	UnaryOperationExpression	! ctx		6483591	0					
ANR	6483598	UnaryOperator	!		6483591	0					
ANR	6483599	Identifier	ctx		6483591	1					
ANR	6483600	RelationalExpression	cpu > ctx -> cpu_count		6483591	1		>			
ANR	6483601	Identifier	cpu		6483591	0					
ANR	6483602	PtrMemberAccess	ctx -> cpu_count		6483591	1					
ANR	6483603	Identifier	ctx		6483591	0					
ANR	6483604	Identifier	cpu_count		6483591	1					
ANR	6483605	CompoundStatement		2:35:36:36	6483591	1					
ANR	6483606	ReturnStatement	return false ;	94:2:1746:1758	6483591	0	True				
ANR	6483607	Identifier	false		6483591	0					
ANR	6483608	ExpressionStatement	ctx -> cpu = cpu	96:1:1764:1778	6483591	1	True				
ANR	6483609	AssignmentExpression	ctx -> cpu = cpu		6483591	0		=			
ANR	6483610	PtrMemberAccess	ctx -> cpu		6483591	0					
ANR	6483611	Identifier	ctx		6483591	0					
ANR	6483612	Identifier	cpu		6483591	1					
ANR	6483613	Identifier	cpu		6483591	1					
ANR	6483614	ReturnStatement	return true ;	97:1:1781:1792	6483591	2	True				
ANR	6483615	Identifier	true		6483591	0					
ANR	6483616	ReturnType	bool		6483591	1					
ANR	6483617	Identifier	windbg_set_cpu		6483591	2					
ANR	6483618	ParameterList	"WindCtx * ctx , int cpu"		6483591	3					
ANR	6483619	Parameter	WindCtx * ctx	92:20:1682:1693	6483591	0	True				
ANR	6483620	ParameterType	WindCtx *		6483591	0					
ANR	6483621	Identifier	ctx		6483591	1					
ANR	6483622	Parameter	int cpu	92:34:1696:1702	6483591	1	True				
ANR	6483623	ParameterType	int		6483591	0					
ANR	6483624	Identifier	cpu		6483591	1					
ANR	6483625	CFGEntryNode	ENTRY		6483591		True				
ANR	6483626	CFGExitNode	EXIT		6483591		True				
ANR	6483627	Symbol	ctx -> cpu		6483591						
ANR	6483628	Symbol	ctx		6483591						
ANR	6483629	Symbol	false		6483591						
ANR	6483630	Symbol	true		6483591						
ANR	6483631	Symbol	cpu		6483591						
ANR	6483632	Symbol	ctx -> cpu_count		6483591						
ANR	6483633	Symbol	* ctx		6483591						
ANR	6483634	Function	windbg_get_cpu	100:0:1797:1879							
ANR	6483635	FunctionDef	windbg_get_cpu (WindCtx * ctx)		6483634	0					
ANR	6483636	CompoundStatement		100:33:1830:1879	6483634	0					
ANR	6483637	IfStatement	if ( ! ctx )		6483634	0					
ANR	6483638	Condition	! ctx	101:5:1837:1840	6483634	0	True				
ANR	6483639	UnaryOperationExpression	! ctx		6483634	0					
ANR	6483640	UnaryOperator	!		6483634	0					
ANR	6483641	Identifier	ctx		6483634	1					
ANR	6483642	CompoundStatement		2:11:12:12	6483634	1					
ANR	6483643	ReturnStatement	return - 1 ;	102:2:1847:1856	6483634	0	True				
ANR	6483644	UnaryOperationExpression	- 1		6483634	0					
ANR	6483645	UnaryOperator	-		6483634	0					
ANR	6483646	PrimaryExpression	1		6483634	1					
ANR	6483647	ReturnStatement	return ctx -> cpu ;	104:1:1862:1877	6483634	1	True				
ANR	6483648	PtrMemberAccess	ctx -> cpu		6483634	0					
ANR	6483649	Identifier	ctx		6483634	0					
ANR	6483650	Identifier	cpu		6483634	1					
ANR	6483651	ReturnType	int		6483634	1					
ANR	6483652	Identifier	windbg_get_cpu		6483634	2					
ANR	6483653	ParameterList	WindCtx * ctx		6483634	3					
ANR	6483654	Parameter	WindCtx * ctx	100:19:1816:1827	6483634	0	True				
ANR	6483655	ParameterType	WindCtx *		6483634	0					
ANR	6483656	Identifier	ctx		6483634	1					
ANR	6483657	CFGEntryNode	ENTRY		6483634		True				
ANR	6483658	CFGExitNode	EXIT		6483634		True				
ANR	6483659	Symbol	ctx -> cpu		6483634						
ANR	6483660	Symbol	ctx		6483634						
ANR	6483661	Symbol	* ctx		6483634						
ANR	6483662	Function	windbg_set_target	107:0:1882:2177							
ANR	6483663	FunctionDef	"windbg_set_target (WindCtx * ctx , uint32_t pid)"		6483662	0					
ANR	6483664	CompoundStatement		107:51:1933:2177	6483662	0					
ANR	6483665	IdentifierDeclStatement	WindProc * p ;	108:1:1936:1947	6483662	0	True				
ANR	6483666	IdentifierDecl	* p		6483662	0					
ANR	6483667	IdentifierDeclType	WindProc *		6483662	0					
ANR	6483668	Identifier	p		6483662	1					
ANR	6483669	IdentifierDeclStatement	RListIter * it ;	109:1:1950:1963	6483662	1	True				
ANR	6483670	IdentifierDecl	* it		6483662	0					
ANR	6483671	IdentifierDeclType	RListIter *		6483662	0					
ANR	6483672	Identifier	it		6483662	1					
ANR	6483673	IfStatement	if ( pid )		6483662	2					
ANR	6483674	Condition	pid	110:5:1970:1972	6483662	0	True				
ANR	6483675	Identifier	pid		6483662	0					
ANR	6483676	CompoundStatement		5:2:45:81	6483662	1					
ANR	6483677	IdentifierDeclStatement	RList * l = windbg_list_process ( ctx ) ;	111:2:1979:2015	6483662	0	True				
ANR	6483678	IdentifierDecl	* l = windbg_list_process ( ctx )		6483662	0					
ANR	6483679	IdentifierDeclType	RList *		6483662	0					
ANR	6483680	Identifier	l		6483662	1					
ANR	6483681	AssignmentExpression	* l = windbg_list_process ( ctx )		6483662	2		=			
ANR	6483682	Identifier	l		6483662	0					
ANR	6483683	CallExpression	windbg_list_process ( ctx )		6483662	1					
ANR	6483684	Callee	windbg_list_process		6483662	0					
ANR	6483685	Identifier	windbg_list_process		6483662	0					
ANR	6483686	ArgumentList	ctx		6483662	1					
ANR	6483687	Argument	ctx		6483662	0					
ANR	6483688	Identifier	ctx		6483662	0					
ANR	6483689	Statement	r_list_foreach	112:2:2019:2032	6483662	1	True				
ANR	6483690	Statement	(	112:17:2034:2034	6483662	2	True				
ANR	6483691	Statement	l	112:18:2035:2035	6483662	3	True				
ANR	6483692	Statement	","	112:19:2036:2036	6483662	4	True				
ANR	6483693	Statement	it	112:21:2038:2039	6483662	5	True				
ANR	6483694	Statement	","	112:23:2040:2040	6483662	6	True				
ANR	6483695	Statement	p	112:25:2042:2042	6483662	7	True				
ANR	6483696	Statement	)	112:26:2043:2043	6483662	8	True				
ANR	6483697	CompoundStatement		6:28:111:111	6483662	9					
ANR	6483698	IfStatement	if ( p -> uniqueid == pid )		6483662	0					
ANR	6483699	Condition	p -> uniqueid == pid	113:7:2054:2071	6483662	0	True				
ANR	6483700	EqualityExpression	p -> uniqueid == pid		6483662	0		==			
ANR	6483701	PtrMemberAccess	p -> uniqueid		6483662	0					
ANR	6483702	Identifier	p		6483662	0					
ANR	6483703	Identifier	uniqueid		6483662	1					
ANR	6483704	Identifier	pid		6483662	1					
ANR	6483705	CompoundStatement		7:27:140:140	6483662	1					
ANR	6483706	ExpressionStatement	ctx -> target = p	114:4:2080:2095	6483662	0	True				
ANR	6483707	AssignmentExpression	ctx -> target = p		6483662	0		=			
ANR	6483708	PtrMemberAccess	ctx -> target		6483662	0					
ANR	6483709	Identifier	ctx		6483662	0					
ANR	6483710	Identifier	target		6483662	1					
ANR	6483711	Identifier	p		6483662	1					
ANR	6483712	ReturnStatement	return true ;	115:4:2101:2112	6483662	1	True				
ANR	6483713	Identifier	true		6483662	0					
ANR	6483714	ReturnStatement	return false ;	118:2:2125:2137	6483662	10	True				
ANR	6483715	Identifier	false		6483662	0					
ANR	6483716	ExpressionStatement	ctx -> target = NULL	120:1:2143:2161	6483662	3	True				
ANR	6483717	AssignmentExpression	ctx -> target = NULL		6483662	0		=			
ANR	6483718	PtrMemberAccess	ctx -> target		6483662	0					
ANR	6483719	Identifier	ctx		6483662	0					
ANR	6483720	Identifier	target		6483662	1					
ANR	6483721	Identifier	NULL		6483662	1					
ANR	6483722	ReturnStatement	return true ;	121:1:2164:2175	6483662	4	True				
ANR	6483723	Identifier	true		6483662	0					
ANR	6483724	ReturnType	bool		6483662	1					
ANR	6483725	Identifier	windbg_set_target		6483662	2					
ANR	6483726	ParameterList	"WindCtx * ctx , uint32_t pid"		6483662	3					
ANR	6483727	Parameter	WindCtx * ctx	107:23:1905:1916	6483662	0	True				
ANR	6483728	ParameterType	WindCtx *		6483662	0					
ANR	6483729	Identifier	ctx		6483662	1					
ANR	6483730	Parameter	uint32_t pid	107:37:1919:1930	6483662	1	True				
ANR	6483731	ParameterType	uint32_t		6483662	0					
ANR	6483732	Identifier	pid		6483662	1					
ANR	6483733	CFGEntryNode	ENTRY		6483662		True				
ANR	6483734	CFGExitNode	EXIT		6483662		True				
ANR	6483735	Symbol	NULL		6483662						
ANR	6483736	Symbol	ctx -> target		6483662						
ANR	6483737	Symbol	ctx		6483662						
ANR	6483738	Symbol	false		6483662						
ANR	6483739	Symbol	pid		6483662						
ANR	6483740	Symbol	it		6483662						
ANR	6483741	Symbol	l		6483662						
ANR	6483742	Symbol	p -> uniqueid		6483662						
ANR	6483743	Symbol	* ctx		6483662						
ANR	6483744	Symbol	p		6483662						
ANR	6483745	Symbol	windbg_list_process		6483662						
ANR	6483746	Symbol	true		6483662						
ANR	6483747	Symbol	* p		6483662						
ANR	6483748	Function	windbg_get_target	124:0:2180:2329							
ANR	6483749	FunctionDef	windbg_get_target (WindCtx * ctx)		6483748	0					
ANR	6483750	CompoundStatement		124:41:2221:2329	6483748	0					
ANR	6483751	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6483748	0					
ANR	6483752	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	125:5:2228:2262	6483748	0	True				
ANR	6483753	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6483748	0		||			
ANR	6483754	UnaryOperationExpression	! ctx		6483748	0					
ANR	6483755	UnaryOperator	!		6483748	0					
ANR	6483756	Identifier	ctx		6483748	1					
ANR	6483757	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6483748	1		||			
ANR	6483758	UnaryOperationExpression	! ctx -> io_ptr		6483748	0					
ANR	6483759	UnaryOperator	!		6483748	0					
ANR	6483760	PtrMemberAccess	ctx -> io_ptr		6483748	1					
ANR	6483761	Identifier	ctx		6483748	0					
ANR	6483762	Identifier	io_ptr		6483748	1					
ANR	6483763	UnaryOperationExpression	! ctx -> syncd		6483748	1					
ANR	6483764	UnaryOperator	!		6483748	0					
ANR	6483765	PtrMemberAccess	ctx -> syncd		6483748	1					
ANR	6483766	Identifier	ctx		6483748	0					
ANR	6483767	Identifier	syncd		6483748	1					
ANR	6483768	CompoundStatement		2:42:43:43	6483748	1					
ANR	6483769	ReturnStatement	return 0 ;	126:2:2269:2277	6483748	0	True				
ANR	6483770	PrimaryExpression	0		6483748	0					
ANR	6483771	ReturnStatement	return ctx -> target ? ctx -> target -> uniqueid : 0 ;	128:1:2283:2327	6483748	1	True				
ANR	6483772	ConditionalExpression	ctx -> target ? ctx -> target -> uniqueid : 0		6483748	0					
ANR	6483773	Condition	ctx -> target		6483748	0					
ANR	6483774	PtrMemberAccess	ctx -> target		6483748	0					
ANR	6483775	Identifier	ctx		6483748	0					
ANR	6483776	Identifier	target		6483748	1					
ANR	6483777	PtrMemberAccess	ctx -> target -> uniqueid		6483748	1					
ANR	6483778	PtrMemberAccess	ctx -> target		6483748	0					
ANR	6483779	Identifier	ctx		6483748	0					
ANR	6483780	Identifier	target		6483748	1					
ANR	6483781	Identifier	uniqueid		6483748	1					
ANR	6483782	PrimaryExpression	0		6483748	2					
ANR	6483783	ReturnType	uint32_t		6483748	1					
ANR	6483784	Identifier	windbg_get_target		6483748	2					
ANR	6483785	ParameterList	WindCtx * ctx		6483748	3					
ANR	6483786	Parameter	WindCtx * ctx	124:27:2207:2218	6483748	0	True				
ANR	6483787	ParameterType	WindCtx *		6483748	0					
ANR	6483788	Identifier	ctx		6483748	1					
ANR	6483789	CFGEntryNode	ENTRY		6483748		True				
ANR	6483790	CFGExitNode	EXIT		6483748		True				
ANR	6483791	Symbol	ctx -> io_ptr		6483748						
ANR	6483792	Symbol	ctx -> target -> uniqueid		6483748						
ANR	6483793	Symbol	ctx -> target		6483748						
ANR	6483794	Symbol	ctx		6483748						
ANR	6483795	Symbol	* ctx -> target		6483748						
ANR	6483796	Symbol	* * ctx		6483748						
ANR	6483797	Symbol	ctx -> syncd		6483748						
ANR	6483798	Symbol	* ctx		6483748						
ANR	6483799	Function	windbg_get_target_base	131:0:2332:2692							
ANR	6483800	FunctionDef	windbg_get_target_base (WindCtx * ctx)		6483799	0					
ANR	6483801	CompoundStatement		131:42:2374:2692	6483799	0					
ANR	6483802	IdentifierDeclStatement	ut64 ppeb ;	132:1:2377:2386	6483799	0	True				
ANR	6483803	IdentifierDecl	ppeb		6483799	0					
ANR	6483804	IdentifierDeclType	ut64		6483799	0					
ANR	6483805	Identifier	ppeb		6483799	1					
ANR	6483806	IdentifierDeclStatement	ut64 base = 0 ;	133:1:2389:2402	6483799	1	True				
ANR	6483807	IdentifierDecl	base = 0		6483799	0					
ANR	6483808	IdentifierDeclType	ut64		6483799	0					
ANR	6483809	Identifier	base		6483799	1					
ANR	6483810	AssignmentExpression	base = 0		6483799	2		=			
ANR	6483811	Identifier	base		6483799	0					
ANR	6483812	PrimaryExpression	0		6483799	1					
ANR	6483813	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd || ! ctx -> target )		6483799	2					
ANR	6483814	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd || ! ctx -> target	135:5:2410:2460	6483799	0	True				
ANR	6483815	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd || ! ctx -> target		6483799	0		||			
ANR	6483816	UnaryOperationExpression	! ctx		6483799	0					
ANR	6483817	UnaryOperator	!		6483799	0					
ANR	6483818	Identifier	ctx		6483799	1					
ANR	6483819	OrExpression	! ctx -> io_ptr || ! ctx -> syncd || ! ctx -> target		6483799	1		||			
ANR	6483820	UnaryOperationExpression	! ctx -> io_ptr		6483799	0					
ANR	6483821	UnaryOperator	!		6483799	0					
ANR	6483822	PtrMemberAccess	ctx -> io_ptr		6483799	1					
ANR	6483823	Identifier	ctx		6483799	0					
ANR	6483824	Identifier	io_ptr		6483799	1					
ANR	6483825	OrExpression	! ctx -> syncd || ! ctx -> target		6483799	1		||			
ANR	6483826	UnaryOperationExpression	! ctx -> syncd		6483799	0					
ANR	6483827	UnaryOperator	!		6483799	0					
ANR	6483828	PtrMemberAccess	ctx -> syncd		6483799	1					
ANR	6483829	Identifier	ctx		6483799	0					
ANR	6483830	Identifier	syncd		6483799	1					
ANR	6483831	UnaryOperationExpression	! ctx -> target		6483799	1					
ANR	6483832	UnaryOperator	!		6483799	0					
ANR	6483833	PtrMemberAccess	ctx -> target		6483799	1					
ANR	6483834	Identifier	ctx		6483799	0					
ANR	6483835	Identifier	target		6483799	1					
ANR	6483836	CompoundStatement		5:58:88:88	6483799	1					
ANR	6483837	ReturnStatement	return 0 ;	136:2:2467:2475	6483799	0	True				
ANR	6483838	PrimaryExpression	0		6483799	0					
ANR	6483839	IfStatement	"if ( ! windbg_va_to_pa ( ctx , ctx -> target -> peb , & ppeb ) )"		6483799	3					
ANR	6483840	Condition	"! windbg_va_to_pa ( ctx , ctx -> target -> peb , & ppeb )"	139:5:2486:2532	6483799	0	True				
ANR	6483841	UnaryOperationExpression	"! windbg_va_to_pa ( ctx , ctx -> target -> peb , & ppeb )"		6483799	0					
ANR	6483842	UnaryOperator	!		6483799	0					
ANR	6483843	CallExpression	"windbg_va_to_pa ( ctx , ctx -> target -> peb , & ppeb )"		6483799	1					
ANR	6483844	Callee	windbg_va_to_pa		6483799	0					
ANR	6483845	Identifier	windbg_va_to_pa		6483799	0					
ANR	6483846	ArgumentList	ctx		6483799	1					
ANR	6483847	Argument	ctx		6483799	0					
ANR	6483848	Identifier	ctx		6483799	0					
ANR	6483849	Argument	ctx -> target -> peb		6483799	1					
ANR	6483850	PtrMemberAccess	ctx -> target -> peb		6483799	0					
ANR	6483851	PtrMemberAccess	ctx -> target		6483799	0					
ANR	6483852	Identifier	ctx		6483799	0					
ANR	6483853	Identifier	target		6483799	1					
ANR	6483854	Identifier	peb		6483799	1					
ANR	6483855	Argument	& ppeb		6483799	2					
ANR	6483856	UnaryOperationExpression	& ppeb		6483799	0					
ANR	6483857	UnaryOperator	&		6483799	0					
ANR	6483858	Identifier	ppeb		6483799	1					
ANR	6483859	CompoundStatement		9:54:160:160	6483799	1					
ANR	6483860	ReturnStatement	return 0 ;	140:2:2539:2547	6483799	0	True				
ANR	6483861	PrimaryExpression	0		6483799	0					
ANR	6483862	IfStatement	"if ( ! windbg_read_at_phys ( ctx , ( uint8_t * ) & base , ppeb + O_ ( P_ImageBaseAddress ) , 4 << ctx -> is_x64 ) )"		6483799	4					
ANR	6483863	Condition	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & base , ppeb + O_ ( P_ImageBaseAddress ) , 4 << ctx -> is_x64 )"	143:5:2558:2657	6483799	0	True				
ANR	6483864	UnaryOperationExpression	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & base , ppeb + O_ ( P_ImageBaseAddress ) , 4 << ctx -> is_x64 )"		6483799	0					
ANR	6483865	UnaryOperator	!		6483799	0					
ANR	6483866	CallExpression	"windbg_read_at_phys ( ctx , ( uint8_t * ) & base , ppeb + O_ ( P_ImageBaseAddress ) , 4 << ctx -> is_x64 )"		6483799	1					
ANR	6483867	Callee	windbg_read_at_phys		6483799	0					
ANR	6483868	Identifier	windbg_read_at_phys		6483799	0					
ANR	6483869	ArgumentList	ctx		6483799	1					
ANR	6483870	Argument	ctx		6483799	0					
ANR	6483871	Identifier	ctx		6483799	0					
ANR	6483872	Argument	( uint8_t * ) & base		6483799	1					
ANR	6483873	CastExpression	( uint8_t * ) & base		6483799	0					
ANR	6483874	CastTarget	uint8_t *		6483799	0					
ANR	6483875	UnaryOperationExpression	& base		6483799	1					
ANR	6483876	UnaryOperator	&		6483799	0					
ANR	6483877	Identifier	base		6483799	1					
ANR	6483878	Argument	ppeb + O_ ( P_ImageBaseAddress )		6483799	2					
ANR	6483879	AdditiveExpression	ppeb + O_ ( P_ImageBaseAddress )		6483799	0		+			
ANR	6483880	Identifier	ppeb		6483799	0					
ANR	6483881	CallExpression	O_ ( P_ImageBaseAddress )		6483799	1					
ANR	6483882	Callee	O_		6483799	0					
ANR	6483883	Identifier	O_		6483799	0					
ANR	6483884	ArgumentList	P_ImageBaseAddress		6483799	1					
ANR	6483885	Argument	P_ImageBaseAddress		6483799	0					
ANR	6483886	Identifier	P_ImageBaseAddress		6483799	0					
ANR	6483887	Argument	4 << ctx -> is_x64		6483799	3					
ANR	6483888	ShiftExpression	4 << ctx -> is_x64		6483799	0		<<			
ANR	6483889	PrimaryExpression	4		6483799	0					
ANR	6483890	PtrMemberAccess	ctx -> is_x64		6483799	1					
ANR	6483891	Identifier	ctx		6483799	0					
ANR	6483892	Identifier	is_x64		6483799	1					
ANR	6483893	CompoundStatement		14:56:285:285	6483799	1					
ANR	6483894	ReturnStatement	return 0 ;	145:2:2664:2672	6483799	0	True				
ANR	6483895	PrimaryExpression	0		6483799	0					
ANR	6483896	ReturnStatement	return base ;	148:1:2679:2690	6483799	5	True				
ANR	6483897	Identifier	base		6483799	0					
ANR	6483898	ReturnType	ut64		6483799	1					
ANR	6483899	Identifier	windbg_get_target_base		6483799	2					
ANR	6483900	ParameterList	WindCtx * ctx		6483799	3					
ANR	6483901	Parameter	WindCtx * ctx	131:28:2360:2371	6483799	0	True				
ANR	6483902	ParameterType	WindCtx *		6483799	0					
ANR	6483903	Identifier	ctx		6483799	1					
ANR	6483904	CFGEntryNode	ENTRY		6483799		True				
ANR	6483905	CFGExitNode	EXIT		6483799		True				
ANR	6483906	Symbol	& base		6483799						
ANR	6483907	Symbol	ctx -> target		6483799						
ANR	6483908	Symbol	ctx -> is_x64		6483799						
ANR	6483909	Symbol	ctx		6483799						
ANR	6483910	Symbol	ppeb		6483799						
ANR	6483911	Symbol	windbg_read_at_phys		6483799						
ANR	6483912	Symbol	* ctx -> target		6483799						
ANR	6483913	Symbol	windbg_va_to_pa		6483799						
ANR	6483914	Symbol	* ctx		6483799						
ANR	6483915	Symbol	O_		6483799						
ANR	6483916	Symbol	ctx -> io_ptr		6483799						
ANR	6483917	Symbol	& ppeb		6483799						
ANR	6483918	Symbol	ctx -> target -> peb		6483799						
ANR	6483919	Symbol	* * ctx		6483799						
ANR	6483920	Symbol	ctx -> syncd		6483799						
ANR	6483921	Symbol	P_ImageBaseAddress		6483799						
ANR	6483922	Symbol	base		6483799						
ANR	6483923	Function	windbg_ctx_new	151:0:2695:2847							
ANR	6483924	FunctionDef	windbg_ctx_new (void * io_ptr)		6483923	0					
ANR	6483925	CompoundStatement		151:38:2733:2847	6483923	0					
ANR	6483926	IdentifierDeclStatement	"WindCtx * ctx = calloc ( 1 , sizeof ( WindCtx ) ) ;"	152:1:2736:2778	6483923	0	True				
ANR	6483927	IdentifierDecl	"* ctx = calloc ( 1 , sizeof ( WindCtx ) )"		6483923	0					
ANR	6483928	IdentifierDeclType	WindCtx *		6483923	0					
ANR	6483929	Identifier	ctx		6483923	1					
ANR	6483930	AssignmentExpression	"* ctx = calloc ( 1 , sizeof ( WindCtx ) )"		6483923	2		=			
ANR	6483931	Identifier	ctx		6483923	0					
ANR	6483932	CallExpression	"calloc ( 1 , sizeof ( WindCtx ) )"		6483923	1					
ANR	6483933	Callee	calloc		6483923	0					
ANR	6483934	Identifier	calloc		6483923	0					
ANR	6483935	ArgumentList	1		6483923	1					
ANR	6483936	Argument	1		6483923	0					
ANR	6483937	PrimaryExpression	1		6483923	0					
ANR	6483938	Argument	sizeof ( WindCtx )		6483923	1					
ANR	6483939	SizeofExpression	sizeof ( WindCtx )		6483923	0					
ANR	6483940	Sizeof	sizeof		6483923	0					
ANR	6483941	SizeofOperand	WindCtx		6483923	1					
ANR	6483942	IfStatement	if ( ! ctx )		6483923	1					
ANR	6483943	Condition	! ctx	153:5:2785:2788	6483923	0	True				
ANR	6483944	UnaryOperationExpression	! ctx		6483923	0					
ANR	6483945	UnaryOperator	!		6483923	0					
ANR	6483946	Identifier	ctx		6483923	1					
ANR	6483947	CompoundStatement		3:11:57:57	6483923	1					
ANR	6483948	ReturnStatement	return NULL ;	154:2:2795:2806	6483923	0	True				
ANR	6483949	Identifier	NULL		6483923	0					
ANR	6483950	ExpressionStatement	ctx -> io_ptr = io_ptr	156:1:2812:2832	6483923	2	True				
ANR	6483951	AssignmentExpression	ctx -> io_ptr = io_ptr		6483923	0		=			
ANR	6483952	PtrMemberAccess	ctx -> io_ptr		6483923	0					
ANR	6483953	Identifier	ctx		6483923	0					
ANR	6483954	Identifier	io_ptr		6483923	1					
ANR	6483955	Identifier	io_ptr		6483923	1					
ANR	6483956	ReturnStatement	return ctx ;	157:1:2835:2845	6483923	3	True				
ANR	6483957	Identifier	ctx		6483923	0					
ANR	6483958	ReturnType	WindCtx *		6483923	1					
ANR	6483959	Identifier	windbg_ctx_new		6483923	2					
ANR	6483960	ParameterList	void * io_ptr		6483923	3					
ANR	6483961	Parameter	void * io_ptr	151:24:2719:2730	6483923	0	True				
ANR	6483962	ParameterType	void *		6483923	0					
ANR	6483963	Identifier	io_ptr		6483923	1					
ANR	6483964	CFGEntryNode	ENTRY		6483923		True				
ANR	6483965	CFGExitNode	EXIT		6483923		True				
ANR	6483966	Symbol	io_ptr		6483923						
ANR	6483967	Symbol	ctx -> io_ptr		6483923						
ANR	6483968	Symbol	NULL		6483923						
ANR	6483969	Symbol	ctx		6483923						
ANR	6483970	Symbol	calloc		6483923						
ANR	6483971	Symbol	* ctx		6483923						
ANR	6483972	Function	windbg_ctx_free	160:0:2850:3040							
ANR	6483973	FunctionDef	windbg_ctx_free (WindCtx * * ctx)		6483972	0					
ANR	6483974	CompoundStatement		160:36:2886:3040	6483972	0					
ANR	6483975	IfStatement	if ( ! ctx || ! * ctx )		6483972	0					
ANR	6483976	Condition	! ctx || ! * ctx	161:5:2893:2905	6483972	0	True				
ANR	6483977	OrExpression	! ctx || ! * ctx		6483972	0		||			
ANR	6483978	UnaryOperationExpression	! ctx		6483972	0					
ANR	6483979	UnaryOperator	!		6483972	0					
ANR	6483980	Identifier	ctx		6483972	1					
ANR	6483981	UnaryOperationExpression	! * ctx		6483972	1					
ANR	6483982	UnaryOperator	!		6483972	0					
ANR	6483983	UnaryOperationExpression	* ctx		6483972	1					
ANR	6483984	UnaryOperator	*		6483972	0					
ANR	6483985	Identifier	ctx		6483972	1					
ANR	6483986	CompoundStatement		2:20:21:21	6483972	1					
ANR	6483987	ReturnStatement	return ;	162:2:2912:2918	6483972	0	True				
ANR	6483988	ExpressionStatement	r_list_free ( ( * ctx ) -> plist_cache )	164:1:2924:2957	6483972	1	True				
ANR	6483989	CallExpression	r_list_free ( ( * ctx ) -> plist_cache )		6483972	0					
ANR	6483990	Callee	r_list_free		6483972	0					
ANR	6483991	Identifier	r_list_free		6483972	0					
ANR	6483992	ArgumentList	( * ctx ) -> plist_cache		6483972	1					
ANR	6483993	Argument	( * ctx ) -> plist_cache		6483972	0					
ANR	6483994	PtrMemberAccess	( * ctx ) -> plist_cache		6483972	0					
ANR	6483995	UnaryOperationExpression	* ctx		6483972	0					
ANR	6483996	UnaryOperator	*		6483972	0					
ANR	6483997	Identifier	ctx		6483972	1					
ANR	6483998	Identifier	plist_cache		6483972	1					
ANR	6483999	ExpressionStatement	r_list_free ( ( * ctx ) -> tlist_cache )	165:1:2960:2993	6483972	2	True				
ANR	6484000	CallExpression	r_list_free ( ( * ctx ) -> tlist_cache )		6483972	0					
ANR	6484001	Callee	r_list_free		6483972	0					
ANR	6484002	Identifier	r_list_free		6483972	0					
ANR	6484003	ArgumentList	( * ctx ) -> tlist_cache		6483972	1					
ANR	6484004	Argument	( * ctx ) -> tlist_cache		6483972	0					
ANR	6484005	PtrMemberAccess	( * ctx ) -> tlist_cache		6483972	0					
ANR	6484006	UnaryOperationExpression	* ctx		6483972	0					
ANR	6484007	UnaryOperator	*		6483972	0					
ANR	6484008	Identifier	ctx		6483972	1					
ANR	6484009	Identifier	tlist_cache		6483972	1					
ANR	6484010	ExpressionStatement	iob_close ( ( * ctx ) -> io_ptr )	166:1:2996:3022	6483972	3	True				
ANR	6484011	CallExpression	iob_close ( ( * ctx ) -> io_ptr )		6483972	0					
ANR	6484012	Callee	iob_close		6483972	0					
ANR	6484013	Identifier	iob_close		6483972	0					
ANR	6484014	ArgumentList	( * ctx ) -> io_ptr		6483972	1					
ANR	6484015	Argument	( * ctx ) -> io_ptr		6483972	0					
ANR	6484016	PtrMemberAccess	( * ctx ) -> io_ptr		6483972	0					
ANR	6484017	UnaryOperationExpression	* ctx		6483972	0					
ANR	6484018	UnaryOperator	*		6483972	0					
ANR	6484019	Identifier	ctx		6483972	1					
ANR	6484020	Identifier	io_ptr		6483972	1					
ANR	6484021	ExpressionStatement	R_FREE ( * ctx )	167:1:3025:3038	6483972	4	True				
ANR	6484022	CallExpression	R_FREE ( * ctx )		6483972	0					
ANR	6484023	Callee	R_FREE		6483972	0					
ANR	6484024	Identifier	R_FREE		6483972	0					
ANR	6484025	ArgumentList	* ctx		6483972	1					
ANR	6484026	Argument	* ctx		6483972	0					
ANR	6484027	UnaryOperationExpression	* ctx		6483972	0					
ANR	6484028	UnaryOperator	*		6483972	0					
ANR	6484029	Identifier	ctx		6483972	1					
ANR	6484030	ReturnType	void		6483972	1					
ANR	6484031	Identifier	windbg_ctx_free		6483972	2					
ANR	6484032	ParameterList	WindCtx * * ctx		6483972	3					
ANR	6484033	Parameter	WindCtx * * ctx	160:21:2871:2883	6483972	0	True				
ANR	6484034	ParameterType	WindCtx * *		6483972	0					
ANR	6484035	Identifier	ctx		6483972	1					
ANR	6484036	CFGEntryNode	ENTRY		6483972		True				
ANR	6484037	CFGExitNode	EXIT		6483972		True				
ANR	6484038	Symbol	( * ctx ) -> tlist_cache		6483972						
ANR	6484039	Symbol	( * ctx ) -> plist_cache		6483972						
ANR	6484040	Symbol	ctx		6483972						
ANR	6484041	Symbol	* * ctx		6483972						
ANR	6484042	Symbol	( * ctx ) -> io_ptr		6483972						
ANR	6484043	Symbol	* ctx		6483972						
ANR	6484044	Function	dump_stc	174:0:3175:3786							
ANR	6484045	FunctionDef	dump_stc (kd_packet_t * p)		6484044	0					
ANR	6484046	CompoundStatement		174:37:3212:3786	6484044	0					
ANR	6484047	IdentifierDeclStatement	kd_stc_64 * stc = PKT_STC ( p ) ;	175:1:3215:3243	6484044	0	True				
ANR	6484048	IdentifierDecl	* stc = PKT_STC ( p )		6484044	0					
ANR	6484049	IdentifierDeclType	kd_stc_64 *		6484044	0					
ANR	6484050	Identifier	stc		6484044	1					
ANR	6484051	AssignmentExpression	* stc = PKT_STC ( p )		6484044	2		=			
ANR	6484052	Identifier	stc		6484044	0					
ANR	6484053	CallExpression	PKT_STC ( p )		6484044	1					
ANR	6484054	Callee	PKT_STC		6484044	0					
ANR	6484055	Identifier	PKT_STC		6484044	0					
ANR	6484056	ArgumentList	p		6484044	1					
ANR	6484057	Argument	p		6484044	0					
ANR	6484058	Identifier	p		6484044	0					
ANR	6484059	ExpressionStatement	"eprintf ( ""New state: %08x\\n"" , stc -> state )"	177:1:3247:3288	6484044	1	True				
ANR	6484060	CallExpression	"eprintf ( ""New state: %08x\\n"" , stc -> state )"		6484044	0					
ANR	6484061	Callee	eprintf		6484044	0					
ANR	6484062	Identifier	eprintf		6484044	0					
ANR	6484063	ArgumentList	"""New state: %08x\\n"""		6484044	1					
ANR	6484064	Argument	"""New state: %08x\\n"""		6484044	0					
ANR	6484065	PrimaryExpression	"""New state: %08x\\n"""		6484044	0					
ANR	6484066	Argument	stc -> state		6484044	1					
ANR	6484067	PtrMemberAccess	stc -> state		6484044	0					
ANR	6484068	Identifier	stc		6484044	0					
ANR	6484069	Identifier	state		6484044	1					
ANR	6484070	Statement	eprintf	178:1:3291:3297	6484044	2	True				
ANR	6484071	Statement	(	178:9:3299:3299	6484044	3	True				
ANR	6484072	Statement	"""EIP: 0x%016"""	178:10:3300:3312	6484044	4	True				
ANR	6484073	Statement	PFMT64x	178:23:3313:3319	6484044	5	True				
ANR	6484074	Statement	""" Kthread: 0x%016"""	178:31:3321:3338	6484044	6	True				
ANR	6484075	Statement	PFMT64x	178:49:3339:3345	6484044	7	True				
ANR	6484076	Statement	"""\\n"""	178:57:3347:3350	6484044	8	True				
ANR	6484077	Statement	","	178:61:3351:3351	6484044	9	True				
ANR	6484078	Statement	(	179:2:3355:3355	6484044	10	True				
ANR	6484079	Statement	ut64	179:3:3356:3359	6484044	11	True				
ANR	6484080	Statement	)	179:7:3360:3360	6484044	12	True				
ANR	6484081	Statement	stc	179:9:3362:3364	6484044	13	True				
ANR	6484082	Statement	->	179:12:3365:3366	6484044	14	True				
ANR	6484083	Statement	pc	179:14:3367:3368	6484044	15	True				
ANR	6484084	Statement	","	179:16:3369:3369	6484044	16	True				
ANR	6484085	Statement	(	179:18:3371:3371	6484044	17	True				
ANR	6484086	Statement	ut64	179:19:3372:3375	6484044	18	True				
ANR	6484087	Statement	)	179:23:3376:3376	6484044	19	True				
ANR	6484088	Statement	stc	179:25:3378:3380	6484044	20	True				
ANR	6484089	Statement	->	179:28:3381:3382	6484044	21	True				
ANR	6484090	Statement	kthread	179:30:3383:3389	6484044	22	True				
ANR	6484091	Statement	)	179:37:3390:3390	6484044	23	True				
ANR	6484092	ExpressionStatement		179:38:3391:3391	6484044	24	True				
ANR	6484093	ExpressionStatement	"eprintf ( ""On cpu %i/%i\\n"" , stc -> cpu + 1 , stc -> cpu_count )"	180:1:3394:3450	6484044	25	True				
ANR	6484094	CallExpression	"eprintf ( ""On cpu %i/%i\\n"" , stc -> cpu + 1 , stc -> cpu_count )"		6484044	0					
ANR	6484095	Callee	eprintf		6484044	0					
ANR	6484096	Identifier	eprintf		6484044	0					
ANR	6484097	ArgumentList	"""On cpu %i/%i\\n"""		6484044	1					
ANR	6484098	Argument	"""On cpu %i/%i\\n"""		6484044	0					
ANR	6484099	PrimaryExpression	"""On cpu %i/%i\\n"""		6484044	0					
ANR	6484100	Argument	stc -> cpu + 1		6484044	1					
ANR	6484101	AdditiveExpression	stc -> cpu + 1		6484044	0		+			
ANR	6484102	PtrMemberAccess	stc -> cpu		6484044	0					
ANR	6484103	Identifier	stc		6484044	0					
ANR	6484104	Identifier	cpu		6484044	1					
ANR	6484105	PrimaryExpression	1		6484044	1					
ANR	6484106	Argument	stc -> cpu_count		6484044	2					
ANR	6484107	PtrMemberAccess	stc -> cpu_count		6484044	0					
ANR	6484108	Identifier	stc		6484044	0					
ANR	6484109	Identifier	cpu_count		6484044	1					
ANR	6484110	IfStatement	if ( stc -> state == DbgKdExceptionStateChange )		6484044	26					
ANR	6484111	Condition	stc -> state == DbgKdExceptionStateChange	182:5:3458:3496	6484044	0	True				
ANR	6484112	EqualityExpression	stc -> state == DbgKdExceptionStateChange		6484044	0		==			
ANR	6484113	PtrMemberAccess	stc -> state		6484044	0					
ANR	6484114	Identifier	stc		6484044	0					
ANR	6484115	Identifier	state		6484044	1					
ANR	6484116	Identifier	DbgKdExceptionStateChange		6484044	1					
ANR	6484117	CompoundStatement		9:46:286:286	6484044	1					
ANR	6484118	ExpressionStatement	"eprintf ( ""Exception\\n"" )"	183:2:3503:3526	6484044	0	True				
ANR	6484119	CallExpression	"eprintf ( ""Exception\\n"" )"		6484044	0					
ANR	6484120	Callee	eprintf		6484044	0					
ANR	6484121	Identifier	eprintf		6484044	0					
ANR	6484122	ArgumentList	"""Exception\\n"""		6484044	1					
ANR	6484123	Argument	"""Exception\\n"""		6484044	0					
ANR	6484124	PrimaryExpression	"""Exception\\n"""		6484044	0					
ANR	6484125	ExpressionStatement	"eprintf ( "" Code   : %08x\\n"" , stc -> exception . code )"	184:2:3530:3579	6484044	1	True				
ANR	6484126	CallExpression	"eprintf ( "" Code   : %08x\\n"" , stc -> exception . code )"		6484044	0					
ANR	6484127	Callee	eprintf		6484044	0					
ANR	6484128	Identifier	eprintf		6484044	0					
ANR	6484129	ArgumentList	""" Code   : %08x\\n"""		6484044	1					
ANR	6484130	Argument	""" Code   : %08x\\n"""		6484044	0					
ANR	6484131	PrimaryExpression	""" Code   : %08x\\n"""		6484044	0					
ANR	6484132	Argument	stc -> exception . code		6484044	1					
ANR	6484133	MemberAccess	stc -> exception . code		6484044	0					
ANR	6484134	PtrMemberAccess	stc -> exception		6484044	0					
ANR	6484135	Identifier	stc		6484044	0					
ANR	6484136	Identifier	exception		6484044	1					
ANR	6484137	Identifier	code		6484044	1					
ANR	6484138	ExpressionStatement	"eprintf ( "" Flags  : %08x\\n"" , stc -> exception . flags )"	185:2:3583:3633	6484044	2	True				
ANR	6484139	CallExpression	"eprintf ( "" Flags  : %08x\\n"" , stc -> exception . flags )"		6484044	0					
ANR	6484140	Callee	eprintf		6484044	0					
ANR	6484141	Identifier	eprintf		6484044	0					
ANR	6484142	ArgumentList	""" Flags  : %08x\\n"""		6484044	1					
ANR	6484143	Argument	""" Flags  : %08x\\n"""		6484044	0					
ANR	6484144	PrimaryExpression	""" Flags  : %08x\\n"""		6484044	0					
ANR	6484145	Argument	stc -> exception . flags		6484044	1					
ANR	6484146	MemberAccess	stc -> exception . flags		6484044	0					
ANR	6484147	PtrMemberAccess	stc -> exception		6484044	0					
ANR	6484148	Identifier	stc		6484044	0					
ANR	6484149	Identifier	exception		6484044	1					
ANR	6484150	Identifier	flags		6484044	1					
ANR	6484151	Statement	eprintf	186:2:3637:3643	6484044	3	True				
ANR	6484152	Statement	(	186:10:3645:3645	6484044	4	True				
ANR	6484153	Statement	""" Record : %016"""	186:11:3646:3661	6484044	5	True				
ANR	6484154	Statement	PFMT64x	186:27:3662:3668	6484044	6	True				
ANR	6484155	Statement	"""\\n"""	186:35:3670:3673	6484044	7	True				
ANR	6484156	Statement	","	186:39:3674:3674	6484044	8	True				
ANR	6484157	Statement	(	186:41:3676:3676	6484044	9	True				
ANR	6484158	Statement	ut64	186:42:3677:3680	6484044	10	True				
ANR	6484159	Statement	)	186:46:3681:3681	6484044	11	True				
ANR	6484160	Statement	stc	186:48:3683:3685	6484044	12	True				
ANR	6484161	Statement	->	186:51:3686:3687	6484044	13	True				
ANR	6484162	Statement	exception	186:53:3688:3696	6484044	14	True				
ANR	6484163	Statement	.	186:62:3697:3697	6484044	15	True				
ANR	6484164	Statement	ex_record	186:63:3698:3706	6484044	16	True				
ANR	6484165	Statement	)	186:72:3707:3707	6484044	17	True				
ANR	6484166	ExpressionStatement		186:73:3708:3708	6484044	18	True				
ANR	6484167	Statement	eprintf	187:2:3712:3718	6484044	19	True				
ANR	6484168	Statement	(	187:10:3720:3720	6484044	20	True				
ANR	6484169	Statement	""" Addr   : %016"""	187:11:3721:3736	6484044	21	True				
ANR	6484170	Statement	PFMT64x	187:27:3737:3743	6484044	22	True				
ANR	6484171	Statement	"""\\n"""	187:35:3745:3748	6484044	23	True				
ANR	6484172	Statement	","	187:39:3749:3749	6484044	24	True				
ANR	6484173	Statement	(	187:41:3751:3751	6484044	25	True				
ANR	6484174	Statement	ut64	187:42:3752:3755	6484044	26	True				
ANR	6484175	Statement	)	187:46:3756:3756	6484044	27	True				
ANR	6484176	Statement	stc	187:48:3758:3760	6484044	28	True				
ANR	6484177	Statement	->	187:51:3761:3762	6484044	29	True				
ANR	6484178	Statement	exception	187:53:3763:3771	6484044	30	True				
ANR	6484179	Statement	.	187:62:3772:3772	6484044	31	True				
ANR	6484180	Statement	ex_addr	187:63:3773:3779	6484044	32	True				
ANR	6484181	Statement	)	187:70:3780:3780	6484044	33	True				
ANR	6484182	ExpressionStatement		187:71:3781:3781	6484044	34	True				
ANR	6484183	ReturnType	static void		6484044	1					
ANR	6484184	Identifier	dump_stc		6484044	2					
ANR	6484185	ParameterList	kd_packet_t * p		6484044	3					
ANR	6484186	Parameter	kd_packet_t * p	174:21:3196:3209	6484044	0	True				
ANR	6484187	ParameterType	kd_packet_t *		6484044	0					
ANR	6484188	Identifier	p		6484044	1					
ANR	6484189	CFGEntryNode	ENTRY		6484044		True				
ANR	6484190	CFGExitNode	EXIT		6484044		True				
ANR	6484191	Symbol	p		6484044						
ANR	6484192	Symbol	stc -> exception . code		6484044						
ANR	6484193	Symbol	stc -> exception . flags		6484044						
ANR	6484194	Symbol	stc		6484044						
ANR	6484195	Symbol	PKT_STC		6484044						
ANR	6484196	Symbol	stc -> cpu		6484044						
ANR	6484197	Symbol	* stc		6484044						
ANR	6484198	Symbol	stc -> cpu_count		6484044						
ANR	6484199	Symbol	DbgKdExceptionStateChange		6484044						
ANR	6484200	Symbol	stc -> exception		6484044						
ANR	6484201	Symbol	stc -> state		6484044						
ANR	6484202	Function	do_io_reply	192:0:3796:4336							
ANR	6484203	FunctionDef	"do_io_reply (WindCtx * ctx , kd_packet_t * pkt)"		6484202	0					
ANR	6484204	CompoundStatement		192:55:3851:4336	6484202	0					
ANR	6484205	IdentifierDeclStatement	kd_ioc_t ioc = { 0 } ;	193:1:3854:3877	6484202	0	True				
ANR	6484206	IdentifierDecl	ioc = { 0 }		6484202	0					
ANR	6484207	IdentifierDeclType	kd_ioc_t		6484202	0					
ANR	6484208	Identifier	ioc		6484202	1					
ANR	6484209	AssignmentExpression	ioc = { 0 }		6484202	2		=			
ANR	6484210	Identifier	ioc		6484202	0					
ANR	6484211	InitializerList	0		6484202	1					
ANR	6484212	PrimaryExpression	0		6484202	0					
ANR	6484213	IdentifierDeclStatement	int ret ;	196:1:3880:3887	6484202	1	True				
ANR	6484214	IdentifierDecl	ret		6484202	0					
ANR	6484215	IdentifierDeclType	int		6484202	0					
ANR	6484216	Identifier	ret		6484202	1					
ANR	6484217	ExpressionStatement	ioc . req = 0x3430	197:1:3890:3906	6484202	2	True				
ANR	6484218	AssignmentExpression	ioc . req = 0x3430		6484202	0		=			
ANR	6484219	MemberAccess	ioc . req		6484202	0					
ANR	6484220	Identifier	ioc		6484202	0					
ANR	6484221	Identifier	req		6484202	1					
ANR	6484222	PrimaryExpression	0x3430		6484202	1					
ANR	6484223	ExpressionStatement	ioc . ret = KD_RET_ENOENT	198:1:3909:3932	6484202	3	True				
ANR	6484224	AssignmentExpression	ioc . ret = KD_RET_ENOENT		6484202	0		=			
ANR	6484225	MemberAccess	ioc . ret		6484202	0					
ANR	6484226	Identifier	ioc		6484202	0					
ANR	6484227	Identifier	ret		6484202	1					
ANR	6484228	Identifier	KD_RET_ENOENT		6484202	1					
ANR	6484229	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_FILE_IO , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & ioc , sizeof ( kd_ioc_t ) , NULL , 0 )"	199:1:3935:4066	6484202	4	True				
ANR	6484230	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_FILE_IO , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & ioc , sizeof ( kd_ioc_t ) , NULL , 0 )"		6484202	0		=			
ANR	6484231	Identifier	ret		6484202	0					
ANR	6484232	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_FILE_IO , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & ioc , sizeof ( kd_ioc_t ) , NULL , 0 )"		6484202	1					
ANR	6484233	Callee	kd_send_data_packet		6484202	0					
ANR	6484234	Identifier	kd_send_data_packet		6484202	0					
ANR	6484235	ArgumentList	ctx -> io_ptr		6484202	1					
ANR	6484236	Argument	ctx -> io_ptr		6484202	0					
ANR	6484237	PtrMemberAccess	ctx -> io_ptr		6484202	0					
ANR	6484238	Identifier	ctx		6484202	0					
ANR	6484239	Identifier	io_ptr		6484202	1					
ANR	6484240	Argument	KD_PACKET_TYPE_FILE_IO		6484202	1					
ANR	6484241	Identifier	KD_PACKET_TYPE_FILE_IO		6484202	0					
ANR	6484242	Argument	ctx -> seq_id ^= 1		6484202	2					
ANR	6484243	AssignmentExpression	ctx -> seq_id ^= 1		6484202	0		^=			
ANR	6484244	PtrMemberAccess	ctx -> seq_id		6484202	0					
ANR	6484245	Identifier	ctx		6484202	0					
ANR	6484246	Identifier	seq_id		6484202	1					
ANR	6484247	PrimaryExpression	1		6484202	1					
ANR	6484248	Argument	( uint8_t * ) & ioc		6484202	3					
ANR	6484249	CastExpression	( uint8_t * ) & ioc		6484202	0					
ANR	6484250	CastTarget	uint8_t *		6484202	0					
ANR	6484251	UnaryOperationExpression	& ioc		6484202	1					
ANR	6484252	UnaryOperator	&		6484202	0					
ANR	6484253	Identifier	ioc		6484202	1					
ANR	6484254	Argument	sizeof ( kd_ioc_t )		6484202	4					
ANR	6484255	SizeofExpression	sizeof ( kd_ioc_t )		6484202	0					
ANR	6484256	Sizeof	sizeof		6484202	0					
ANR	6484257	SizeofOperand	kd_ioc_t		6484202	1					
ANR	6484258	Argument	NULL		6484202	5					
ANR	6484259	Identifier	NULL		6484202	0					
ANR	6484260	Argument	0		6484202	6					
ANR	6484261	PrimaryExpression	0		6484202	0					
ANR	6484262	IfStatement	if ( ret != KD_E_OK )		6484202	5					
ANR	6484263	Condition	ret != KD_E_OK	201:5:4073:4086	6484202	0	True				
ANR	6484264	EqualityExpression	ret != KD_E_OK		6484202	0		!=			
ANR	6484265	Identifier	ret		6484202	0					
ANR	6484266	Identifier	KD_E_OK		6484202	1					
ANR	6484267	CompoundStatement		10:21:237:237	6484202	1					
ANR	6484268	ReturnStatement	return false ;	202:2:4093:4105	6484202	0	True				
ANR	6484269	Identifier	false		6484202	0					
ANR	6484270	IdentifierDeclStatement	"WIND_DBG eprintf ( ""Waiting for io_reply ack...\\n"" ) ;"	204:1:4111:4160	6484202	6	True				
ANR	6484271	IdentifierDecl	"eprintf ( ""Waiting for io_reply ack...\\n"" )"		6484202	0					
ANR	6484272	IdentifierDeclType	WIND_DBG		6484202	0					
ANR	6484273	Identifier	eprintf		6484202	1					
ANR	6484274	PrimaryExpression	"""Waiting for io_reply ack...\\n"""		6484202	2					
ANR	6484275	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	205:1:4163:4227	6484202	7	True				
ANR	6484276	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6484202	0		=			
ANR	6484277	Identifier	ret		6484202	0					
ANR	6484278	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6484202	1					
ANR	6484279	Callee	windbg_wait_packet		6484202	0					
ANR	6484280	Identifier	windbg_wait_packet		6484202	0					
ANR	6484281	ArgumentList	ctx		6484202	1					
ANR	6484282	Argument	ctx		6484202	0					
ANR	6484283	Identifier	ctx		6484202	0					
ANR	6484284	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6484202	1					
ANR	6484285	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6484202	0					
ANR	6484286	Argument	NULL		6484202	2					
ANR	6484287	Identifier	NULL		6484202	0					
ANR	6484288	IfStatement	if ( ret != KD_E_OK )		6484202	8					
ANR	6484289	Condition	ret != KD_E_OK	206:5:4234:4247	6484202	0	True				
ANR	6484290	EqualityExpression	ret != KD_E_OK		6484202	0		!=			
ANR	6484291	Identifier	ret		6484202	0					
ANR	6484292	Identifier	KD_E_OK		6484202	1					
ANR	6484293	CompoundStatement		15:21:398:398	6484202	1					
ANR	6484294	ReturnStatement	return false ;	207:2:4254:4266	6484202	0	True				
ANR	6484295	Identifier	false		6484202	0					
ANR	6484296	IdentifierDeclStatement	"WIND_DBG eprintf ( ""Ack received, restore flow\\n"" ) ;"	209:1:4272:4320	6484202	9	True				
ANR	6484297	IdentifierDecl	"eprintf ( ""Ack received, restore flow\\n"" )"		6484202	0					
ANR	6484298	IdentifierDeclType	WIND_DBG		6484202	0					
ANR	6484299	Identifier	eprintf		6484202	1					
ANR	6484300	PrimaryExpression	"""Ack received, restore flow\\n"""		6484202	2					
ANR	6484301	ReturnStatement	return true ;	210:1:4323:4334	6484202	10	True				
ANR	6484302	Identifier	true		6484202	0					
ANR	6484303	ReturnType	static int		6484202	1					
ANR	6484304	Identifier	do_io_reply		6484202	2					
ANR	6484305	ParameterList	"WindCtx * ctx , kd_packet_t * pkt"		6484202	3					
ANR	6484306	Parameter	WindCtx * ctx	192:23:3819:3830	6484202	0	True				
ANR	6484307	ParameterType	WindCtx *		6484202	0					
ANR	6484308	Identifier	ctx		6484202	1					
ANR	6484309	Parameter	kd_packet_t * pkt	192:37:3833:3848	6484202	1	True				
ANR	6484310	ParameterType	kd_packet_t *		6484202	0					
ANR	6484311	Identifier	pkt		6484202	1					
ANR	6484312	CFGEntryNode	ENTRY		6484202		True				
ANR	6484313	CFGExitNode	EXIT		6484202		True				
ANR	6484314	Symbol	ret		6484202						
ANR	6484315	Symbol	kd_send_data_packet		6484202						
ANR	6484316	Symbol	KD_PACKET_TYPE_FILE_IO		6484202						
ANR	6484317	Symbol	KD_RET_ENOENT		6484202						
ANR	6484318	Symbol	NULL		6484202						
ANR	6484319	Symbol	& ioc		6484202						
ANR	6484320	Symbol	KD_E_OK		6484202						
ANR	6484321	Symbol	ctx		6484202						
ANR	6484322	Symbol	false		6484202						
ANR	6484323	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6484202						
ANR	6484324	Symbol	* ctx		6484202						
ANR	6484325	Symbol	ctx -> io_ptr		6484202						
ANR	6484326	Symbol	eprintf		6484202						
ANR	6484327	Symbol	ctx -> seq_id		6484202						
ANR	6484328	Symbol	pkt		6484202						
ANR	6484329	Symbol	true		6484202						
ANR	6484330	Symbol	ioc . req		6484202						
ANR	6484331	Symbol	windbg_wait_packet		6484202						
ANR	6484332	Symbol	ioc		6484202						
ANR	6484333	Symbol	ioc . ret		6484202						
ANR	6484334	Function	windbg_wait_packet	213:0:4339:5484							
ANR	6484335	FunctionDef	"windbg_wait_packet (WindCtx * ctx , const uint32_t type , kd_packet_t * * p)"		6484334	0					
ANR	6484336	CompoundStatement		213:75:4414:5484	6484334	0					
ANR	6484337	IdentifierDeclStatement	kd_packet_t * pkt = NULL ;	214:1:4417:4440	6484334	0	True				
ANR	6484338	IdentifierDecl	* pkt = NULL		6484334	0					
ANR	6484339	IdentifierDeclType	kd_packet_t *		6484334	0					
ANR	6484340	Identifier	pkt		6484334	1					
ANR	6484341	AssignmentExpression	* pkt = NULL		6484334	2		=			
ANR	6484342	Identifier	NULL		6484334	0					
ANR	6484343	Identifier	NULL		6484334	1					
ANR	6484344	IdentifierDeclStatement	int ret ;	215:1:4443:4450	6484334	1	True				
ANR	6484345	IdentifierDecl	ret		6484334	0					
ANR	6484346	IdentifierDeclType	int		6484334	0					
ANR	6484347	Identifier	ret		6484334	1					
ANR	6484348	IdentifierDeclStatement	int retries = 10 ;	216:1:4453:4469	6484334	2	True				
ANR	6484349	IdentifierDecl	retries = 10		6484334	0					
ANR	6484350	IdentifierDeclType	int		6484334	0					
ANR	6484351	Identifier	retries		6484334	1					
ANR	6484352	AssignmentExpression	retries = 10		6484334	2		=			
ANR	6484353	Identifier	retries		6484334	0					
ANR	6484354	PrimaryExpression	10		6484334	1					
ANR	6484355	DoStatement	do		6484334	3					
ANR	6484356	CompoundStatement		6:4:61:61	6484334	0					
ANR	6484357	IfStatement	if ( pkt )		6484334	0					
ANR	6484358	Condition	pkt	219:6:4484:4486	6484334	0	True				
ANR	6484359	Identifier	pkt		6484334	0					
ANR	6484360	CompoundStatement		7:11:74:74	6484334	1					
ANR	6484361	ExpressionStatement	R_FREE ( pkt )	220:3:4494:4506	6484334	0	True				
ANR	6484362	CallExpression	R_FREE ( pkt )		6484334	0					
ANR	6484363	Callee	R_FREE		6484334	0					
ANR	6484364	Identifier	R_FREE		6484334	0					
ANR	6484365	ArgumentList	pkt		6484334	1					
ANR	6484366	Argument	pkt		6484334	0					
ANR	6484367	Identifier	pkt		6484334	0					
ANR	6484368	ExpressionStatement	"ret = kd_read_packet ( ctx -> io_ptr , & pkt )"	223:2:4546:4586	6484334	1	True				
ANR	6484369	AssignmentExpression	"ret = kd_read_packet ( ctx -> io_ptr , & pkt )"		6484334	0		=			
ANR	6484370	Identifier	ret		6484334	0					
ANR	6484371	CallExpression	"kd_read_packet ( ctx -> io_ptr , & pkt )"		6484334	1					
ANR	6484372	Callee	kd_read_packet		6484334	0					
ANR	6484373	Identifier	kd_read_packet		6484334	0					
ANR	6484374	ArgumentList	ctx -> io_ptr		6484334	1					
ANR	6484375	Argument	ctx -> io_ptr		6484334	0					
ANR	6484376	PtrMemberAccess	ctx -> io_ptr		6484334	0					
ANR	6484377	Identifier	ctx		6484334	0					
ANR	6484378	Identifier	io_ptr		6484334	1					
ANR	6484379	Argument	& pkt		6484334	1					
ANR	6484380	UnaryOperationExpression	& pkt		6484334	0					
ANR	6484381	UnaryOperator	&		6484334	0					
ANR	6484382	Identifier	pkt		6484334	1					
ANR	6484383	IfStatement	if ( ret != KD_E_OK || ! pkt )		6484334	2					
ANR	6484384	Condition	ret != KD_E_OK || ! pkt	224:6:4594:4615	6484334	0	True				
ANR	6484385	OrExpression	ret != KD_E_OK || ! pkt		6484334	0		||			
ANR	6484386	EqualityExpression	ret != KD_E_OK		6484334	0		!=			
ANR	6484387	Identifier	ret		6484334	0					
ANR	6484388	Identifier	KD_E_OK		6484334	1					
ANR	6484389	UnaryOperationExpression	! pkt		6484334	1					
ANR	6484390	UnaryOperator	!		6484334	0					
ANR	6484391	Identifier	pkt		6484334	1					
ANR	6484392	CompoundStatement		12:30:203:203	6484334	1					
ANR	6484393	BreakStatement	break ;	225:3:4623:4628	6484334	0	True				
ANR	6484394	IfStatement	if ( pkt -> type != type )		6484334	3					
ANR	6484395	Condition	pkt -> type != type	229:6:4686:4702	6484334	0	True				
ANR	6484396	EqualityExpression	pkt -> type != type		6484334	0		!=			
ANR	6484397	PtrMemberAccess	pkt -> type		6484334	0					
ANR	6484398	Identifier	pkt		6484334	0					
ANR	6484399	Identifier	type		6484334	1					
ANR	6484400	Identifier	type		6484334	1					
ANR	6484401	CompoundStatement		17:25:290:290	6484334	1					
ANR	6484402	ExpressionStatement	"eprintf ( ""We were not waiting for this... %08x\\n"" , pkt -> type )"	230:3:4710:4771	6484334	0	True				
ANR	6484403	CallExpression	"eprintf ( ""We were not waiting for this... %08x\\n"" , pkt -> type )"		6484334	0					
ANR	6484404	Callee	eprintf		6484334	0					
ANR	6484405	Identifier	eprintf		6484334	0					
ANR	6484406	ArgumentList	"""We were not waiting for this... %08x\\n"""		6484334	1					
ANR	6484407	Argument	"""We were not waiting for this... %08x\\n"""		6484334	0					
ANR	6484408	PrimaryExpression	"""We were not waiting for this... %08x\\n"""		6484334	0					
ANR	6484409	Argument	pkt -> type		6484334	1					
ANR	6484410	PtrMemberAccess	pkt -> type		6484334	0					
ANR	6484411	Identifier	pkt		6484334	0					
ANR	6484412	Identifier	type		6484334	1					
ANR	6484413	IfStatement	if ( pkt -> leader == KD_PACKET_DATA && pkt -> type == KD_PACKET_TYPE_STATE_CHANGE64 )		6484334	4					
ANR	6484414	Condition	pkt -> leader == KD_PACKET_DATA && pkt -> type == KD_PACKET_TYPE_STATE_CHANGE64	232:6:4783:4857	6484334	0	True				
ANR	6484415	AndExpression	pkt -> leader == KD_PACKET_DATA && pkt -> type == KD_PACKET_TYPE_STATE_CHANGE64		6484334	0		&&			
ANR	6484416	EqualityExpression	pkt -> leader == KD_PACKET_DATA		6484334	0		==			
ANR	6484417	PtrMemberAccess	pkt -> leader		6484334	0					
ANR	6484418	Identifier	pkt		6484334	0					
ANR	6484419	Identifier	leader		6484334	1					
ANR	6484420	Identifier	KD_PACKET_DATA		6484334	1					
ANR	6484421	EqualityExpression	pkt -> type == KD_PACKET_TYPE_STATE_CHANGE64		6484334	1		==			
ANR	6484422	PtrMemberAccess	pkt -> type		6484334	0					
ANR	6484423	Identifier	pkt		6484334	0					
ANR	6484424	Identifier	type		6484334	1					
ANR	6484425	Identifier	KD_PACKET_TYPE_STATE_CHANGE64		6484334	1					
ANR	6484426	CompoundStatement		20:83:445:445	6484334	1					
ANR	6484427	ExpressionStatement	"eprintf ( ""State64\\n"" )"	234:3:4887:4908	6484334	0	True				
ANR	6484428	CallExpression	"eprintf ( ""State64\\n"" )"		6484334	0					
ANR	6484429	Callee	eprintf		6484334	0					
ANR	6484430	Identifier	eprintf		6484334	0					
ANR	6484431	ArgumentList	"""State64\\n"""		6484334	1					
ANR	6484432	Argument	"""State64\\n"""		6484334	0					
ANR	6484433	PrimaryExpression	"""State64\\n"""		6484334	0					
ANR	6484434	IfStatement	if ( pkt -> leader == KD_PACKET_DATA && pkt -> type == KD_PACKET_TYPE_FILE_IO )		6484334	5					
ANR	6484435	Condition	pkt -> leader == KD_PACKET_DATA && pkt -> type == KD_PACKET_TYPE_FILE_IO	236:6:4920:4987	6484334	0	True				
ANR	6484436	AndExpression	pkt -> leader == KD_PACKET_DATA && pkt -> type == KD_PACKET_TYPE_FILE_IO		6484334	0		&&			
ANR	6484437	EqualityExpression	pkt -> leader == KD_PACKET_DATA		6484334	0		==			
ANR	6484438	PtrMemberAccess	pkt -> leader		6484334	0					
ANR	6484439	Identifier	pkt		6484334	0					
ANR	6484440	Identifier	leader		6484334	1					
ANR	6484441	Identifier	KD_PACKET_DATA		6484334	1					
ANR	6484442	EqualityExpression	pkt -> type == KD_PACKET_TYPE_FILE_IO		6484334	1		==			
ANR	6484443	PtrMemberAccess	pkt -> type		6484334	0					
ANR	6484444	Identifier	pkt		6484334	0					
ANR	6484445	Identifier	type		6484334	1					
ANR	6484446	Identifier	KD_PACKET_TYPE_FILE_IO		6484334	1					
ANR	6484447	CompoundStatement		24:76:575:575	6484334	1					
ANR	6484448	ExpressionStatement	"eprintf ( ""Replying IO\\n"" )"	237:3:4995:5020	6484334	0	True				
ANR	6484449	CallExpression	"eprintf ( ""Replying IO\\n"" )"		6484334	0					
ANR	6484450	Callee	eprintf		6484334	0					
ANR	6484451	Identifier	eprintf		6484334	0					
ANR	6484452	ArgumentList	"""Replying IO\\n"""		6484334	1					
ANR	6484453	Argument	"""Replying IO\\n"""		6484334	0					
ANR	6484454	PrimaryExpression	"""Replying IO\\n"""		6484334	0					
ANR	6484455	ExpressionStatement	"do_io_reply ( ctx , pkt )"	238:3:5025:5047	6484334	1	True				
ANR	6484456	CallExpression	"do_io_reply ( ctx , pkt )"		6484334	0					
ANR	6484457	Callee	do_io_reply		6484334	0					
ANR	6484458	Identifier	do_io_reply		6484334	0					
ANR	6484459	ArgumentList	ctx		6484334	1					
ANR	6484460	Argument	ctx		6484334	0					
ANR	6484461	Identifier	ctx		6484334	0					
ANR	6484462	Argument	pkt		6484334	1					
ANR	6484463	Identifier	pkt		6484334	0					
ANR	6484464	IfStatement	if ( pkt -> leader == KD_PACKET_CTRL && pkt -> type == KD_PACKET_TYPE_RESEND )		6484334	6					
ANR	6484465	Condition	pkt -> leader == KD_PACKET_CTRL && pkt -> type == KD_PACKET_TYPE_RESEND	243:6:5120:5186	6484334	0	True				
ANR	6484466	AndExpression	pkt -> leader == KD_PACKET_CTRL && pkt -> type == KD_PACKET_TYPE_RESEND		6484334	0		&&			
ANR	6484467	EqualityExpression	pkt -> leader == KD_PACKET_CTRL		6484334	0		==			
ANR	6484468	PtrMemberAccess	pkt -> leader		6484334	0					
ANR	6484469	Identifier	pkt		6484334	0					
ANR	6484470	Identifier	leader		6484334	1					
ANR	6484471	Identifier	KD_PACKET_CTRL		6484334	1					
ANR	6484472	EqualityExpression	pkt -> type == KD_PACKET_TYPE_RESEND		6484334	1		==			
ANR	6484473	PtrMemberAccess	pkt -> type		6484334	0					
ANR	6484474	Identifier	pkt		6484334	0					
ANR	6484475	Identifier	type		6484334	1					
ANR	6484476	Identifier	KD_PACKET_TYPE_RESEND		6484334	1					
ANR	6484477	CompoundStatement		31:75:774:774	6484334	1					
ANR	6484478	ExpressionStatement	r_sys_backtrace ( )	244:3:5194:5212	6484334	0	True				
ANR	6484479	CallExpression	r_sys_backtrace ( )		6484334	0					
ANR	6484480	Callee	r_sys_backtrace		6484334	0					
ANR	6484481	Identifier	r_sys_backtrace		6484334	0					
ANR	6484482	ArgumentList			6484334	1					
ANR	6484483	ExpressionStatement	"eprintf ( ""Waoh. You probably sent a malformed packet !\\n"" )"	245:3:5217:5275	6484334	1	True				
ANR	6484484	CallExpression	"eprintf ( ""Waoh. You probably sent a malformed packet !\\n"" )"		6484334	0					
ANR	6484485	Callee	eprintf		6484334	0					
ANR	6484486	Identifier	eprintf		6484334	0					
ANR	6484487	ArgumentList	"""Waoh. You probably sent a malformed packet !\\n"""		6484334	1					
ANR	6484488	Argument	"""Waoh. You probably sent a malformed packet !\\n"""		6484334	0					
ANR	6484489	PrimaryExpression	"""Waoh. You probably sent a malformed packet !\\n"""		6484334	0					
ANR	6484490	ExpressionStatement	ret = KD_E_MALFORMED	246:3:5280:5300	6484334	2	True				
ANR	6484491	AssignmentExpression	ret = KD_E_MALFORMED		6484334	0		=			
ANR	6484492	Identifier	ret		6484334	0					
ANR	6484493	Identifier	KD_E_MALFORMED		6484334	1					
ANR	6484494	Condition	pkt -> type != type && retries --	249:10:5328:5357	6484334	1	True				
ANR	6484495	AndExpression	pkt -> type != type && retries --		6484334	0		&&			
ANR	6484496	EqualityExpression	pkt -> type != type		6484334	0		!=			
ANR	6484497	PtrMemberAccess	pkt -> type		6484334	0					
ANR	6484498	Identifier	pkt		6484334	0					
ANR	6484499	Identifier	type		6484334	1					
ANR	6484500	Identifier	type		6484334	1					
ANR	6484501	PostIncDecOperationExpression	retries --		6484334	1					
ANR	6484502	Identifier	retries		6484334	0					
ANR	6484503	IncDec	--		6484334	1					
ANR	6484504	IfStatement	if ( ret != KD_E_OK )		6484334	4					
ANR	6484505	Condition	ret != KD_E_OK	251:5:5367:5380	6484334	0	True				
ANR	6484506	EqualityExpression	ret != KD_E_OK		6484334	0		!=			
ANR	6484507	Identifier	ret		6484334	0					
ANR	6484508	Identifier	KD_E_OK		6484334	1					
ANR	6484509	CompoundStatement		39:21:968:968	6484334	1					
ANR	6484510	ExpressionStatement	free ( pkt )	252:2:5387:5397	6484334	0	True				
ANR	6484511	CallExpression	free ( pkt )		6484334	0					
ANR	6484512	Callee	free		6484334	0					
ANR	6484513	Identifier	free		6484334	0					
ANR	6484514	ArgumentList	pkt		6484334	1					
ANR	6484515	Argument	pkt		6484334	0					
ANR	6484516	Identifier	pkt		6484334	0					
ANR	6484517	ReturnStatement	return ret ;	253:2:5401:5411	6484334	1	True				
ANR	6484518	Identifier	ret		6484334	0					
ANR	6484519	IfStatement	if ( p )		6484334	5					
ANR	6484520	Condition	p	256:5:5422:5422	6484334	0	True				
ANR	6484521	Identifier	p		6484334	0					
ANR	6484522	CompoundStatement		44:8:1010:1010	6484334	1					
ANR	6484523	ExpressionStatement	* p = pkt	257:2:5429:5437	6484334	0	True				
ANR	6484524	AssignmentExpression	* p = pkt		6484334	0		=			
ANR	6484525	UnaryOperationExpression	* p		6484334	0					
ANR	6484526	UnaryOperator	*		6484334	0					
ANR	6484527	Identifier	p		6484334	1					
ANR	6484528	Identifier	pkt		6484334	1					
ANR	6484529	ElseStatement	else		6484334	0					
ANR	6484530	CompoundStatement		46:8:1032:1032	6484334	0					
ANR	6484531	ExpressionStatement	free ( pkt )	259:2:5451:5461	6484334	0	True				
ANR	6484532	CallExpression	free ( pkt )		6484334	0					
ANR	6484533	Callee	free		6484334	0					
ANR	6484534	Identifier	free		6484334	0					
ANR	6484535	ArgumentList	pkt		6484334	1					
ANR	6484536	Argument	pkt		6484334	0					
ANR	6484537	Identifier	pkt		6484334	0					
ANR	6484538	ReturnStatement	return KD_E_OK ;	262:1:5468:5482	6484334	6	True				
ANR	6484539	Identifier	KD_E_OK		6484334	0					
ANR	6484540	ReturnType	int		6484334	1					
ANR	6484541	Identifier	windbg_wait_packet		6484334	2					
ANR	6484542	ParameterList	"WindCtx * ctx , const uint32_t type , kd_packet_t * * p"		6484334	3					
ANR	6484543	Parameter	WindCtx * ctx	213:23:4362:4373	6484334	0	True				
ANR	6484544	ParameterType	WindCtx *		6484334	0					
ANR	6484545	Identifier	ctx		6484334	1					
ANR	6484546	Parameter	const uint32_t type	213:37:4376:4394	6484334	1	True				
ANR	6484547	ParameterType	const uint32_t		6484334	0					
ANR	6484548	Identifier	type		6484334	1					
ANR	6484549	Parameter	kd_packet_t * * p	213:58:4397:4411	6484334	2	True				
ANR	6484550	ParameterType	kd_packet_t * *		6484334	0					
ANR	6484551	Identifier	p		6484334	1					
ANR	6484552	CFGEntryNode	ENTRY		6484334		True				
ANR	6484553	CFGExitNode	EXIT		6484334		True				
ANR	6484554	Symbol	ret		6484334						
ANR	6484555	Symbol	KD_PACKET_TYPE_FILE_IO		6484334						
ANR	6484556	Symbol	NULL		6484334						
ANR	6484557	Symbol	* pkt		6484334						
ANR	6484558	Symbol	pkt -> type		6484334						
ANR	6484559	Symbol	KD_E_OK		6484334						
ANR	6484560	Symbol	ctx		6484334						
ANR	6484561	Symbol	KD_PACKET_DATA		6484334						
ANR	6484562	Symbol	type		6484334						
ANR	6484563	Symbol	* ctx		6484334						
ANR	6484564	Symbol	KD_PACKET_CTRL		6484334						
ANR	6484565	Symbol	p		6484334						
ANR	6484566	Symbol	retries		6484334						
ANR	6484567	Symbol	ctx -> io_ptr		6484334						
ANR	6484568	Symbol	KD_PACKET_TYPE_STATE_CHANGE64		6484334						
ANR	6484569	Symbol	KD_PACKET_TYPE_RESEND		6484334						
ANR	6484570	Symbol	pkt -> leader		6484334						
ANR	6484571	Symbol	pkt		6484334						
ANR	6484572	Symbol	& pkt		6484334						
ANR	6484573	Symbol	* p		6484334						
ANR	6484574	Symbol	kd_read_packet		6484334						
ANR	6484575	Symbol	KD_E_MALFORMED		6484334						
ANR	6484576	ClassDef	<unnamed>	267:9:5565:5696							
ANR	6484577	DeclStmt									
ANR	6484578	Decl							char	char [ 4 ]	tag
ANR	6484579	DeclStmt									
ANR	6484580	Decl							uint32_t	uint32_t	start_vpn
ANR	6484581	DeclStmt									
ANR	6484582	Decl							uint32_t	uint32_t	end_vpn
ANR	6484583	DeclStmt									
ANR	6484584	Decl							uint32_t	uint32_t	parent
ANR	6484585	DeclStmt									
ANR	6484586	Decl							uint32_t	uint32_t	left
ANR	6484587	DeclStmt									
ANR	6484588	Decl							uint32_t	uint32_t	right
ANR	6484589	DeclStmt									
ANR	6484590	Decl							uint32_t	uint32_t	flags
ANR	6484591	Function	windbg_walk_vadtree	277:0:5713:6529							
ANR	6484592	FunctionDef	"windbg_walk_vadtree (WindCtx * ctx , ut64 address , ut64 parent)"		6484591	0					
ANR	6484593	CompoundStatement		277:65:5778:6529	6484591	0					
ANR	6484594	IdentifierDeclStatement	mmvad_short entry = { { 0 } } ;	278:1:5781:5810	6484591	0	True				
ANR	6484595	IdentifierDecl	entry = { { 0 } }		6484591	0					
ANR	6484596	IdentifierDeclType	mmvad_short		6484591	0					
ANR	6484597	Identifier	entry		6484591	1					
ANR	6484598	AssignmentExpression	entry = { { 0 } }		6484591	2		=			
ANR	6484599	Identifier	entry		6484591	0					
ANR	6484600	InitializerList	0		6484591	1					
ANR	6484601	InitializerList	0		6484591	0					
ANR	6484602	PrimaryExpression	0		6484591	0					
ANR	6484603	IdentifierDeclStatement	"ut64 start , end ;"	279:1:5813:5828	6484591	1	True				
ANR	6484604	IdentifierDecl	start		6484591	0					
ANR	6484605	IdentifierDeclType	ut64		6484591	0					
ANR	6484606	Identifier	start		6484591	1					
ANR	6484607	IdentifierDecl	end		6484591	1					
ANR	6484608	IdentifierDeclType	ut64		6484591	0					
ANR	6484609	Identifier	end		6484591	1					
ANR	6484610	IdentifierDeclStatement	int prot ;	280:1:5831:5839	6484591	2	True				
ANR	6484611	IdentifierDecl	prot		6484591	0					
ANR	6484612	IdentifierDeclType	int		6484591	0					
ANR	6484613	Identifier	prot		6484591	1					
ANR	6484614	IfStatement	"if ( windbg_read_at ( ctx , ( uint8_t * ) & entry , address - 0x4 , sizeof ( mmvad_short ) ) != sizeof ( mmvad_short ) )"		6484591	3					
ANR	6484615	Condition	"windbg_read_at ( ctx , ( uint8_t * ) & entry , address - 0x4 , sizeof ( mmvad_short ) ) != sizeof ( mmvad_short )"	282:5:5847:5946	6484591	0	True				
ANR	6484616	EqualityExpression	"windbg_read_at ( ctx , ( uint8_t * ) & entry , address - 0x4 , sizeof ( mmvad_short ) ) != sizeof ( mmvad_short )"		6484591	0		!=			
ANR	6484617	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & entry , address - 0x4 , sizeof ( mmvad_short ) )"		6484591	0					
ANR	6484618	Callee	windbg_read_at		6484591	0					
ANR	6484619	Identifier	windbg_read_at		6484591	0					
ANR	6484620	ArgumentList	ctx		6484591	1					
ANR	6484621	Argument	ctx		6484591	0					
ANR	6484622	Identifier	ctx		6484591	0					
ANR	6484623	Argument	( uint8_t * ) & entry		6484591	1					
ANR	6484624	CastExpression	( uint8_t * ) & entry		6484591	0					
ANR	6484625	CastTarget	uint8_t *		6484591	0					
ANR	6484626	UnaryOperationExpression	& entry		6484591	1					
ANR	6484627	UnaryOperator	&		6484591	0					
ANR	6484628	Identifier	entry		6484591	1					
ANR	6484629	Argument	address - 0x4		6484591	2					
ANR	6484630	AdditiveExpression	address - 0x4		6484591	0		-			
ANR	6484631	Identifier	address		6484591	0					
ANR	6484632	PrimaryExpression	0x4		6484591	1					
ANR	6484633	Argument	sizeof ( mmvad_short )		6484591	3					
ANR	6484634	SizeofExpression	sizeof ( mmvad_short )		6484591	0					
ANR	6484635	Sizeof	sizeof		6484591	0					
ANR	6484636	SizeofOperand	mmvad_short		6484591	1					
ANR	6484637	SizeofExpression	sizeof ( mmvad_short )		6484591	1					
ANR	6484638	Sizeof	sizeof		6484591	0					
ANR	6484639	SizeofOperand	mmvad_short		6484591	1					
ANR	6484640	CompoundStatement		6:107:170:170	6484591	1					
ANR	6484641	Statement	eprintf	283:2:5953:5959	6484591	0	True				
ANR	6484642	Statement	(	283:10:5961:5961	6484591	1	True				
ANR	6484643	Statement	"""0x%"""	283:11:5962:5966	6484591	2	True				
ANR	6484644	Statement	PFMT64x	283:16:5967:5973	6484591	3	True				
ANR	6484645	Statement	""" Could not read the node!\\n"""	283:24:5975:6003	6484591	4	True				
ANR	6484646	Statement	","	283:53:6004:6004	6484591	5	True				
ANR	6484647	Statement	(	283:55:6006:6006	6484591	6	True				
ANR	6484648	Statement	ut64	283:56:6007:6010	6484591	7	True				
ANR	6484649	Statement	)	283:60:6011:6011	6484591	8	True				
ANR	6484650	Statement	address	283:62:6013:6019	6484591	9	True				
ANR	6484651	Statement	)	283:69:6020:6020	6484591	10	True				
ANR	6484652	ExpressionStatement		283:70:6021:6021	6484591	11	True				
ANR	6484653	ReturnStatement	return 0 ;	284:2:6025:6033	6484591	12	True				
ANR	6484654	PrimaryExpression	0		6484591	0					
ANR	6484655	IfStatement	if ( parent != UT64_MAX && entry . parent != parent )		6484591	4					
ANR	6484656	Condition	parent != UT64_MAX && entry . parent != parent	287:5:6044:6087	6484591	0	True				
ANR	6484657	AndExpression	parent != UT64_MAX && entry . parent != parent		6484591	0		&&			
ANR	6484658	EqualityExpression	parent != UT64_MAX		6484591	0		!=			
ANR	6484659	Identifier	parent		6484591	0					
ANR	6484660	Identifier	UT64_MAX		6484591	1					
ANR	6484661	EqualityExpression	entry . parent != parent		6484591	1		!=			
ANR	6484662	MemberAccess	entry . parent		6484591	0					
ANR	6484663	Identifier	entry		6484591	0					
ANR	6484664	Identifier	parent		6484591	1					
ANR	6484665	Identifier	parent		6484591	1					
ANR	6484666	CompoundStatement		11:51:311:311	6484591	1					
ANR	6484667	ExpressionStatement	"eprintf ( ""Wrong parent!\\n"" )"	288:2:6094:6121	6484591	0	True				
ANR	6484668	CallExpression	"eprintf ( ""Wrong parent!\\n"" )"		6484591	0					
ANR	6484669	Callee	eprintf		6484591	0					
ANR	6484670	Identifier	eprintf		6484591	0					
ANR	6484671	ArgumentList	"""Wrong parent!\\n"""		6484591	1					
ANR	6484672	Argument	"""Wrong parent!\\n"""		6484591	0					
ANR	6484673	PrimaryExpression	"""Wrong parent!\\n"""		6484591	0					
ANR	6484674	ReturnStatement	return 0 ;	289:2:6125:6133	6484591	1	True				
ANR	6484675	PrimaryExpression	0		6484591	0					
ANR	6484676	ExpressionStatement	start = entry . start_vpn << 12	292:1:6140:6169	6484591	5	True				
ANR	6484677	AssignmentExpression	start = entry . start_vpn << 12		6484591	0		=			
ANR	6484678	Identifier	start		6484591	0					
ANR	6484679	ShiftExpression	entry . start_vpn << 12		6484591	1		<<			
ANR	6484680	MemberAccess	entry . start_vpn		6484591	0					
ANR	6484681	Identifier	entry		6484591	0					
ANR	6484682	Identifier	start_vpn		6484591	1					
ANR	6484683	PrimaryExpression	12		6484591	1					
ANR	6484684	ExpressionStatement	end = ( ( entry . end_vpn + 1 ) << 12 ) - 1	293:1:6172:6209	6484591	6	True				
ANR	6484685	AssignmentExpression	end = ( ( entry . end_vpn + 1 ) << 12 ) - 1		6484591	0		=			
ANR	6484686	Identifier	end		6484591	0					
ANR	6484687	AdditiveExpression	( ( entry . end_vpn + 1 ) << 12 ) - 1		6484591	1		-			
ANR	6484688	ShiftExpression	( entry . end_vpn + 1 ) << 12		6484591	0		<<			
ANR	6484689	AdditiveExpression	entry . end_vpn + 1		6484591	0		+			
ANR	6484690	MemberAccess	entry . end_vpn		6484591	0					
ANR	6484691	Identifier	entry		6484591	0					
ANR	6484692	Identifier	end_vpn		6484591	1					
ANR	6484693	PrimaryExpression	1		6484591	1					
ANR	6484694	PrimaryExpression	12		6484591	1					
ANR	6484695	PrimaryExpression	1		6484591	1					
ANR	6484696	ExpressionStatement	prot = ( entry . flags >> 24 ) & 0x1F	294:1:6212:6245	6484591	7	True				
ANR	6484697	AssignmentExpression	prot = ( entry . flags >> 24 ) & 0x1F		6484591	0		=			
ANR	6484698	Identifier	prot		6484591	0					
ANR	6484699	BitAndExpression	( entry . flags >> 24 ) & 0x1F		6484591	1		&			
ANR	6484700	ShiftExpression	entry . flags >> 24		6484591	0		>>			
ANR	6484701	MemberAccess	entry . flags		6484591	0					
ANR	6484702	Identifier	entry		6484591	0					
ANR	6484703	Identifier	flags		6484591	1					
ANR	6484704	PrimaryExpression	24		6484591	1					
ANR	6484705	PrimaryExpression	0x1F		6484591	1					
ANR	6484706	Statement	eprintf	296:1:6249:6255	6484591	8	True				
ANR	6484707	Statement	(	296:9:6257:6257	6484591	9	True				
ANR	6484708	Statement	"""Start 0x%016"""	296:10:6258:6271	6484591	10	True				
ANR	6484709	Statement	PFMT64x	296:24:6272:6278	6484591	11	True				
ANR	6484710	Statement	""" End 0x%016"""	296:32:6280:6292	6484591	12	True				
ANR	6484711	Statement	PFMT64x	296:45:6293:6299	6484591	13	True				
ANR	6484712	Statement	""" Prot 0x%08"""	296:53:6301:6313	6484591	14	True				
ANR	6484713	Statement	PFMT64x	296:66:6314:6320	6484591	15	True				
ANR	6484714	Statement	"""\\n"""	296:74:6322:6325	6484591	16	True				
ANR	6484715	Statement	","	296:78:6326:6326	6484591	17	True				
ANR	6484716	Statement	(	297:2:6330:6330	6484591	18	True				
ANR	6484717	Statement	ut64	297:3:6331:6334	6484591	19	True				
ANR	6484718	Statement	)	297:7:6335:6335	6484591	20	True				
ANR	6484719	Statement	start	297:9:6337:6341	6484591	21	True				
ANR	6484720	Statement	","	297:14:6342:6342	6484591	22	True				
ANR	6484721	Statement	(	297:16:6344:6344	6484591	23	True				
ANR	6484722	Statement	ut64	297:17:6345:6348	6484591	24	True				
ANR	6484723	Statement	)	297:21:6349:6349	6484591	25	True				
ANR	6484724	Statement	end	297:23:6351:6353	6484591	26	True				
ANR	6484725	Statement	","	297:26:6354:6354	6484591	27	True				
ANR	6484726	Statement	(	297:28:6356:6356	6484591	28	True				
ANR	6484727	Statement	ut64	297:29:6357:6360	6484591	29	True				
ANR	6484728	Statement	)	297:33:6361:6361	6484591	30	True				
ANR	6484729	Statement	prot	297:35:6363:6366	6484591	31	True				
ANR	6484730	Statement	)	297:39:6367:6367	6484591	32	True				
ANR	6484731	ExpressionStatement		297:40:6368:6368	6484591	33	True				
ANR	6484732	IfStatement	if ( entry . left )		6484591	34					
ANR	6484733	Condition	entry . left	299:5:6376:6385	6484591	0	True				
ANR	6484734	MemberAccess	entry . left		6484591	0					
ANR	6484735	Identifier	entry		6484591	0					
ANR	6484736	Identifier	left		6484591	1					
ANR	6484737	CompoundStatement		23:17:609:609	6484591	1					
ANR	6484738	ExpressionStatement	"windbg_walk_vadtree ( ctx , entry . left , address )"	300:2:6392:6438	6484591	0	True				
ANR	6484739	CallExpression	"windbg_walk_vadtree ( ctx , entry . left , address )"		6484591	0					
ANR	6484740	Callee	windbg_walk_vadtree		6484591	0					
ANR	6484741	Identifier	windbg_walk_vadtree		6484591	0					
ANR	6484742	ArgumentList	ctx		6484591	1					
ANR	6484743	Argument	ctx		6484591	0					
ANR	6484744	Identifier	ctx		6484591	0					
ANR	6484745	Argument	entry . left		6484591	1					
ANR	6484746	MemberAccess	entry . left		6484591	0					
ANR	6484747	Identifier	entry		6484591	0					
ANR	6484748	Identifier	left		6484591	1					
ANR	6484749	Argument	address		6484591	2					
ANR	6484750	Identifier	address		6484591	0					
ANR	6484751	IfStatement	if ( entry . right )		6484591	35					
ANR	6484752	Condition	entry . right	302:5:6448:6458	6484591	0	True				
ANR	6484753	MemberAccess	entry . right		6484591	0					
ANR	6484754	Identifier	entry		6484591	0					
ANR	6484755	Identifier	right		6484591	1					
ANR	6484756	CompoundStatement		26:18:682:682	6484591	1					
ANR	6484757	ExpressionStatement	"windbg_walk_vadtree ( ctx , entry . right , address )"	303:2:6465:6512	6484591	0	True				
ANR	6484758	CallExpression	"windbg_walk_vadtree ( ctx , entry . right , address )"		6484591	0					
ANR	6484759	Callee	windbg_walk_vadtree		6484591	0					
ANR	6484760	Identifier	windbg_walk_vadtree		6484591	0					
ANR	6484761	ArgumentList	ctx		6484591	1					
ANR	6484762	Argument	ctx		6484591	0					
ANR	6484763	Identifier	ctx		6484591	0					
ANR	6484764	Argument	entry . right		6484591	1					
ANR	6484765	MemberAccess	entry . right		6484591	0					
ANR	6484766	Identifier	entry		6484591	0					
ANR	6484767	Identifier	right		6484591	1					
ANR	6484768	Argument	address		6484591	2					
ANR	6484769	Identifier	address		6484591	0					
ANR	6484770	ReturnStatement	return 1 ;	306:1:6519:6527	6484591	36	True				
ANR	6484771	PrimaryExpression	1		6484591	0					
ANR	6484772	ReturnType	int		6484591	1					
ANR	6484773	Identifier	windbg_walk_vadtree		6484591	2					
ANR	6484774	ParameterList	"WindCtx * ctx , ut64 address , ut64 parent"		6484591	3					
ANR	6484775	Parameter	WindCtx * ctx	277:24:5737:5748	6484591	0	True				
ANR	6484776	ParameterType	WindCtx *		6484591	0					
ANR	6484777	Identifier	ctx		6484591	1					
ANR	6484778	Parameter	ut64 address	277:38:5751:5762	6484591	1	True				
ANR	6484779	ParameterType	ut64		6484591	0					
ANR	6484780	Identifier	address		6484591	1					
ANR	6484781	Parameter	ut64 parent	277:52:5765:5775	6484591	2	True				
ANR	6484782	ParameterType	ut64		6484591	0					
ANR	6484783	Identifier	parent		6484591	1					
ANR	6484784	CFGEntryNode	ENTRY		6484591		True				
ANR	6484785	CFGExitNode	EXIT		6484591		True				
ANR	6484786	Symbol	parent		6484591						
ANR	6484787	Symbol	entry . left		6484591						
ANR	6484788	Symbol	address		6484591						
ANR	6484789	Symbol	entry . flags		6484591						
ANR	6484790	Symbol	ctx		6484591						
ANR	6484791	Symbol	start		6484591						
ANR	6484792	Symbol	entry		6484591						
ANR	6484793	Symbol	& entry		6484591						
ANR	6484794	Symbol	entry . start_vpn		6484591						
ANR	6484795	Symbol	prot		6484591						
ANR	6484796	Symbol	windbg_read_at		6484591						
ANR	6484797	Symbol	entry . right		6484591						
ANR	6484798	Symbol	entry . end_vpn		6484591						
ANR	6484799	Symbol	end		6484591						
ANR	6484800	Symbol	entry . parent		6484591						
ANR	6484801	Symbol	UT64_MAX		6484591						
ANR	6484802	Function	windbg_list_process	309:0:6532:8340							
ANR	6484803	FunctionDef	windbg_list_process (WindCtx * ctx)		6484802	0					
ANR	6484804	CompoundStatement		309:41:6573:8340	6484802	0					
ANR	6484805	IdentifierDeclStatement	RList * ret ;	310:1:6576:6586	6484802	0	True				
ANR	6484806	IdentifierDecl	* ret		6484802	0					
ANR	6484807	IdentifierDeclType	RList *		6484802	0					
ANR	6484808	Identifier	ret		6484802	1					
ANR	6484809	IdentifierDeclStatement	"ut64 ptr , base ;"	311:1:6589:6603	6484802	1	True				
ANR	6484810	IdentifierDecl	ptr		6484802	0					
ANR	6484811	IdentifierDeclType	ut64		6484802	0					
ANR	6484812	Identifier	ptr		6484802	1					
ANR	6484813	IdentifierDecl	base		6484802	1					
ANR	6484814	IdentifierDeclType	ut64		6484802	0					
ANR	6484815	Identifier	base		6484802	1					
ANR	6484816	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6484802	2					
ANR	6484817	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	313:5:6611:6645	6484802	0	True				
ANR	6484818	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6484802	0		||			
ANR	6484819	UnaryOperationExpression	! ctx		6484802	0					
ANR	6484820	UnaryOperator	!		6484802	0					
ANR	6484821	Identifier	ctx		6484802	1					
ANR	6484822	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6484802	1		||			
ANR	6484823	UnaryOperationExpression	! ctx -> io_ptr		6484802	0					
ANR	6484824	UnaryOperator	!		6484802	0					
ANR	6484825	PtrMemberAccess	ctx -> io_ptr		6484802	1					
ANR	6484826	Identifier	ctx		6484802	0					
ANR	6484827	Identifier	io_ptr		6484802	1					
ANR	6484828	UnaryOperationExpression	! ctx -> syncd		6484802	1					
ANR	6484829	UnaryOperator	!		6484802	0					
ANR	6484830	PtrMemberAccess	ctx -> syncd		6484802	1					
ANR	6484831	Identifier	ctx		6484802	0					
ANR	6484832	Identifier	syncd		6484802	1					
ANR	6484833	CompoundStatement		5:42:74:74	6484802	1					
ANR	6484834	ReturnStatement	return NULL ;	314:2:6652:6663	6484802	0	True				
ANR	6484835	Identifier	NULL		6484802	0					
ANR	6484836	IfStatement	if ( ctx -> plist_cache )		6484802	3					
ANR	6484837	Condition	ctx -> plist_cache	317:5:6674:6689	6484802	0	True				
ANR	6484838	PtrMemberAccess	ctx -> plist_cache		6484802	0					
ANR	6484839	Identifier	ctx		6484802	0					
ANR	6484840	Identifier	plist_cache		6484802	1					
ANR	6484841	CompoundStatement		9:23:118:118	6484802	1					
ANR	6484842	ReturnStatement	return ctx -> plist_cache ;	318:2:6696:6719	6484802	0	True				
ANR	6484843	PtrMemberAccess	ctx -> plist_cache		6484802	0					
ANR	6484844	Identifier	ctx		6484802	0					
ANR	6484845	Identifier	plist_cache		6484802	1					
ANR	6484846	ExpressionStatement	ptr = 0	321:1:6726:6733	6484802	4	True				
ANR	6484847	AssignmentExpression	ptr = 0		6484802	0		=			
ANR	6484848	Identifier	ptr		6484802	0					
ANR	6484849	PrimaryExpression	0		6484802	1					
ANR	6484850	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ctx -> dbg_addr + K_PsActiveProcessHead , 4 << ctx -> is_x64 )"	323:1:6793:6890	6484802	5	True				
ANR	6484851	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ctx -> dbg_addr + K_PsActiveProcessHead , 4 << ctx -> is_x64 )"		6484802	0					
ANR	6484852	Callee	windbg_read_at		6484802	0					
ANR	6484853	Identifier	windbg_read_at		6484802	0					
ANR	6484854	ArgumentList	ctx		6484802	1					
ANR	6484855	Argument	ctx		6484802	0					
ANR	6484856	Identifier	ctx		6484802	0					
ANR	6484857	Argument	( uint8_t * ) & ptr		6484802	1					
ANR	6484858	CastExpression	( uint8_t * ) & ptr		6484802	0					
ANR	6484859	CastTarget	uint8_t *		6484802	0					
ANR	6484860	UnaryOperationExpression	& ptr		6484802	1					
ANR	6484861	UnaryOperator	&		6484802	0					
ANR	6484862	Identifier	ptr		6484802	1					
ANR	6484863	Argument	ctx -> dbg_addr + K_PsActiveProcessHead		6484802	2					
ANR	6484864	AdditiveExpression	ctx -> dbg_addr + K_PsActiveProcessHead		6484802	0		+			
ANR	6484865	PtrMemberAccess	ctx -> dbg_addr		6484802	0					
ANR	6484866	Identifier	ctx		6484802	0					
ANR	6484867	Identifier	dbg_addr		6484802	1					
ANR	6484868	Identifier	K_PsActiveProcessHead		6484802	1					
ANR	6484869	Argument	4 << ctx -> is_x64		6484802	3					
ANR	6484870	ShiftExpression	4 << ctx -> is_x64		6484802	0		<<			
ANR	6484871	PrimaryExpression	4		6484802	0					
ANR	6484872	PtrMemberAccess	ctx -> is_x64		6484802	1					
ANR	6484873	Identifier	ctx		6484802	0					
ANR	6484874	Identifier	is_x64		6484802	1					
ANR	6484875	ExpressionStatement	base = ptr	326:1:6894:6904	6484802	6	True				
ANR	6484876	AssignmentExpression	base = ptr		6484802	0		=			
ANR	6484877	Identifier	base		6484802	0					
ANR	6484878	Identifier	ptr		6484802	1					
ANR	6484879	Statement	WIND_DBG	327:1:6907:6914	6484802	7	True				
ANR	6484880	Statement	eprintf	327:10:6916:6922	6484802	8	True				
ANR	6484881	Statement	(	327:17:6923:6923	6484802	9	True				
ANR	6484882	Statement	"""Process list head : 0x%016"""	327:18:6924:6951	6484802	10	True				
ANR	6484883	Statement	PFMT64x	327:46:6952:6958	6484802	11	True				
ANR	6484884	Statement	"""\\n"""	327:54:6960:6963	6484802	12	True				
ANR	6484885	Statement	","	327:58:6964:6964	6484802	13	True				
ANR	6484886	Statement	ptr	327:60:6966:6968	6484802	14	True				
ANR	6484887	Statement	)	327:63:6969:6969	6484802	15	True				
ANR	6484888	ExpressionStatement		327:64:6970:6970	6484802	16	True				
ANR	6484889	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ptr , 4 << ctx -> is_x64 )"	330:1:6998:7059	6484802	17	True				
ANR	6484890	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ptr , 4 << ctx -> is_x64 )"		6484802	0					
ANR	6484891	Callee	windbg_read_at		6484802	0					
ANR	6484892	Identifier	windbg_read_at		6484802	0					
ANR	6484893	ArgumentList	ctx		6484802	1					
ANR	6484894	Argument	ctx		6484802	0					
ANR	6484895	Identifier	ctx		6484802	0					
ANR	6484896	Argument	( uint8_t * ) & ptr		6484802	1					
ANR	6484897	CastExpression	( uint8_t * ) & ptr		6484802	0					
ANR	6484898	CastTarget	uint8_t *		6484802	0					
ANR	6484899	UnaryOperationExpression	& ptr		6484802	1					
ANR	6484900	UnaryOperator	&		6484802	0					
ANR	6484901	Identifier	ptr		6484802	1					
ANR	6484902	Argument	ptr		6484802	2					
ANR	6484903	Identifier	ptr		6484802	0					
ANR	6484904	Argument	4 << ctx -> is_x64		6484802	3					
ANR	6484905	ShiftExpression	4 << ctx -> is_x64		6484802	0		<<			
ANR	6484906	PrimaryExpression	4		6484802	0					
ANR	6484907	PtrMemberAccess	ctx -> is_x64		6484802	1					
ANR	6484908	Identifier	ctx		6484802	0					
ANR	6484909	Identifier	is_x64		6484802	1					
ANR	6484910	ExpressionStatement	ret = r_list_newf ( free )	332:1:7063:7087	6484802	18	True				
ANR	6484911	AssignmentExpression	ret = r_list_newf ( free )		6484802	0		=			
ANR	6484912	Identifier	ret		6484802	0					
ANR	6484913	CallExpression	r_list_newf ( free )		6484802	1					
ANR	6484914	Callee	r_list_newf		6484802	0					
ANR	6484915	Identifier	r_list_newf		6484802	0					
ANR	6484916	ArgumentList	free		6484802	1					
ANR	6484917	Argument	free		6484802	0					
ANR	6484918	Identifier	free		6484802	0					
ANR	6484919	DoStatement	do		6484802	19					
ANR	6484920	CompoundStatement		52:2:1382:1427	6484802	0					
ANR	6484921	IdentifierDeclStatement	uint8_t buf [ 17 ] ;	335:2:7098:7113	6484802	0	True				
ANR	6484922	IdentifierDecl	buf [ 17 ]		6484802	0					
ANR	6484923	IdentifierDeclType	uint8_t [ 17 ]		6484802	0					
ANR	6484924	Identifier	buf		6484802	1					
ANR	6484925	PrimaryExpression	17		6484802	2					
ANR	6484926	IdentifierDeclStatement	ut64 next ;	336:2:7117:7126	6484802	1	True				
ANR	6484927	IdentifierDecl	next		6484802	0					
ANR	6484928	IdentifierDeclType	ut64		6484802	0					
ANR	6484929	Identifier	next		6484802	1					
ANR	6484930	ExpressionStatement	next = 0	338:2:7131:7139	6484802	2	True				
ANR	6484931	AssignmentExpression	next = 0		6484802	0		=			
ANR	6484932	Identifier	next		6484802	0					
ANR	6484933	PrimaryExpression	0		6484802	1					
ANR	6484934	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & next , ptr , 4 << ctx -> is_x64 )"	340:2:7182:7244	6484802	3	True				
ANR	6484935	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & next , ptr , 4 << ctx -> is_x64 )"		6484802	0					
ANR	6484936	Callee	windbg_read_at		6484802	0					
ANR	6484937	Identifier	windbg_read_at		6484802	0					
ANR	6484938	ArgumentList	ctx		6484802	1					
ANR	6484939	Argument	ctx		6484802	0					
ANR	6484940	Identifier	ctx		6484802	0					
ANR	6484941	Argument	( uint8_t * ) & next		6484802	1					
ANR	6484942	CastExpression	( uint8_t * ) & next		6484802	0					
ANR	6484943	CastTarget	uint8_t *		6484802	0					
ANR	6484944	UnaryOperationExpression	& next		6484802	1					
ANR	6484945	UnaryOperator	&		6484802	0					
ANR	6484946	Identifier	next		6484802	1					
ANR	6484947	Argument	ptr		6484802	2					
ANR	6484948	Identifier	ptr		6484802	0					
ANR	6484949	Argument	4 << ctx -> is_x64		6484802	3					
ANR	6484950	ShiftExpression	4 << ctx -> is_x64		6484802	0		<<			
ANR	6484951	PrimaryExpression	4		6484802	0					
ANR	6484952	PtrMemberAccess	ctx -> is_x64		6484802	1					
ANR	6484953	Identifier	ctx		6484802	0					
ANR	6484954	Identifier	is_x64		6484802	1					
ANR	6484955	ExpressionStatement	ptr -= O_ ( E_ActiveProcessLinks )	344:2:7358:7389	6484802	4	True				
ANR	6484956	AssignmentExpression	ptr -= O_ ( E_ActiveProcessLinks )		6484802	0		-=			
ANR	6484957	Identifier	ptr		6484802	0					
ANR	6484958	CallExpression	O_ ( E_ActiveProcessLinks )		6484802	1					
ANR	6484959	Callee	O_		6484802	0					
ANR	6484960	Identifier	O_		6484802	0					
ANR	6484961	ArgumentList	E_ActiveProcessLinks		6484802	1					
ANR	6484962	Argument	E_ActiveProcessLinks		6484802	0					
ANR	6484963	Identifier	E_ActiveProcessLinks		6484802	0					
ANR	6484964	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & buf , ptr + O_ ( E_ImageFileName ) , 16 )"	347:2:7419:7488	6484802	5	True				
ANR	6484965	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & buf , ptr + O_ ( E_ImageFileName ) , 16 )"		6484802	0					
ANR	6484966	Callee	windbg_read_at		6484802	0					
ANR	6484967	Identifier	windbg_read_at		6484802	0					
ANR	6484968	ArgumentList	ctx		6484802	1					
ANR	6484969	Argument	ctx		6484802	0					
ANR	6484970	Identifier	ctx		6484802	0					
ANR	6484971	Argument	( uint8_t * ) & buf		6484802	1					
ANR	6484972	CastExpression	( uint8_t * ) & buf		6484802	0					
ANR	6484973	CastTarget	uint8_t *		6484802	0					
ANR	6484974	UnaryOperationExpression	& buf		6484802	1					
ANR	6484975	UnaryOperator	&		6484802	0					
ANR	6484976	Identifier	buf		6484802	1					
ANR	6484977	Argument	ptr + O_ ( E_ImageFileName )		6484802	2					
ANR	6484978	AdditiveExpression	ptr + O_ ( E_ImageFileName )		6484802	0		+			
ANR	6484979	Identifier	ptr		6484802	0					
ANR	6484980	CallExpression	O_ ( E_ImageFileName )		6484802	1					
ANR	6484981	Callee	O_		6484802	0					
ANR	6484982	Identifier	O_		6484802	0					
ANR	6484983	ArgumentList	E_ImageFileName		6484802	1					
ANR	6484984	Argument	E_ImageFileName		6484802	0					
ANR	6484985	Identifier	E_ImageFileName		6484802	0					
ANR	6484986	Argument	16		6484802	3					
ANR	6484987	PrimaryExpression	16		6484802	0					
ANR	6484988	ExpressionStatement	buf [ 16 ] = '\\0'	348:2:7492:7506	6484802	6	True				
ANR	6484989	AssignmentExpression	buf [ 16 ] = '\\0'		6484802	0		=			
ANR	6484990	ArrayIndexing	buf [ 16 ]		6484802	0					
ANR	6484991	Identifier	buf		6484802	0					
ANR	6484992	PrimaryExpression	16		6484802	1					
ANR	6484993	PrimaryExpression	'\\0'		6484802	1					
ANR	6484994	IdentifierDeclStatement	ut64 vadroot = 0 ;	350:2:7511:7527	6484802	7	True				
ANR	6484995	IdentifierDecl	vadroot = 0		6484802	0					
ANR	6484996	IdentifierDeclType	ut64		6484802	0					
ANR	6484997	Identifier	vadroot		6484802	1					
ANR	6484998	AssignmentExpression	vadroot = 0		6484802	2		=			
ANR	6484999	Identifier	vadroot		6484802	0					
ANR	6485000	PrimaryExpression	0		6484802	1					
ANR	6485001	IdentifierDeclStatement	ut64 uniqueid = 0 ;	351:2:7531:7548	6484802	8	True				
ANR	6485002	IdentifierDecl	uniqueid = 0		6484802	0					
ANR	6485003	IdentifierDeclType	ut64		6484802	0					
ANR	6485004	Identifier	uniqueid		6484802	1					
ANR	6485005	AssignmentExpression	uniqueid = 0		6484802	2		=			
ANR	6485006	Identifier	uniqueid		6484802	0					
ANR	6485007	PrimaryExpression	0		6484802	1					
ANR	6485008	IdentifierDeclStatement	ut64 peb = 0 ;	352:2:7552:7564	6484802	9	True				
ANR	6485009	IdentifierDecl	peb = 0		6484802	0					
ANR	6485010	IdentifierDeclType	ut64		6484802	0					
ANR	6485011	Identifier	peb		6484802	1					
ANR	6485012	AssignmentExpression	peb = 0		6484802	2		=			
ANR	6485013	Identifier	peb		6484802	0					
ANR	6485014	PrimaryExpression	0		6484802	1					
ANR	6485015	IdentifierDeclStatement	ut64 dir_base_table = 0 ;	353:2:7568:7591	6484802	10	True				
ANR	6485016	IdentifierDecl	dir_base_table = 0		6484802	0					
ANR	6485017	IdentifierDeclType	ut64		6484802	0					
ANR	6485018	Identifier	dir_base_table		6484802	1					
ANR	6485019	AssignmentExpression	dir_base_table = 0		6484802	2		=			
ANR	6485020	Identifier	dir_base_table		6484802	0					
ANR	6485021	PrimaryExpression	0		6484802	1					
ANR	6485022	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & vadroot , ptr + O_ ( E_VadRoot ) , 4 << ctx -> is_x64 )"	355:2:7596:7677	6484802	11	True				
ANR	6485023	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & vadroot , ptr + O_ ( E_VadRoot ) , 4 << ctx -> is_x64 )"		6484802	0					
ANR	6485024	Callee	windbg_read_at		6484802	0					
ANR	6485025	Identifier	windbg_read_at		6484802	0					
ANR	6485026	ArgumentList	ctx		6484802	1					
ANR	6485027	Argument	ctx		6484802	0					
ANR	6485028	Identifier	ctx		6484802	0					
ANR	6485029	Argument	( uint8_t * ) & vadroot		6484802	1					
ANR	6485030	CastExpression	( uint8_t * ) & vadroot		6484802	0					
ANR	6485031	CastTarget	uint8_t *		6484802	0					
ANR	6485032	UnaryOperationExpression	& vadroot		6484802	1					
ANR	6485033	UnaryOperator	&		6484802	0					
ANR	6485034	Identifier	vadroot		6484802	1					
ANR	6485035	Argument	ptr + O_ ( E_VadRoot )		6484802	2					
ANR	6485036	AdditiveExpression	ptr + O_ ( E_VadRoot )		6484802	0		+			
ANR	6485037	Identifier	ptr		6484802	0					
ANR	6485038	CallExpression	O_ ( E_VadRoot )		6484802	1					
ANR	6485039	Callee	O_		6484802	0					
ANR	6485040	Identifier	O_		6484802	0					
ANR	6485041	ArgumentList	E_VadRoot		6484802	1					
ANR	6485042	Argument	E_VadRoot		6484802	0					
ANR	6485043	Identifier	E_VadRoot		6484802	0					
ANR	6485044	Argument	4 << ctx -> is_x64		6484802	3					
ANR	6485045	ShiftExpression	4 << ctx -> is_x64		6484802	0		<<			
ANR	6485046	PrimaryExpression	4		6484802	0					
ANR	6485047	PtrMemberAccess	ctx -> is_x64		6484802	1					
ANR	6485048	Identifier	ctx		6484802	0					
ANR	6485049	Identifier	is_x64		6484802	1					
ANR	6485050	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & uniqueid , ptr + O_ ( E_UniqueProcessId ) , 4 << ctx -> is_x64 )"	356:2:7681:7771	6484802	12	True				
ANR	6485051	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & uniqueid , ptr + O_ ( E_UniqueProcessId ) , 4 << ctx -> is_x64 )"		6484802	0					
ANR	6485052	Callee	windbg_read_at		6484802	0					
ANR	6485053	Identifier	windbg_read_at		6484802	0					
ANR	6485054	ArgumentList	ctx		6484802	1					
ANR	6485055	Argument	ctx		6484802	0					
ANR	6485056	Identifier	ctx		6484802	0					
ANR	6485057	Argument	( uint8_t * ) & uniqueid		6484802	1					
ANR	6485058	CastExpression	( uint8_t * ) & uniqueid		6484802	0					
ANR	6485059	CastTarget	uint8_t *		6484802	0					
ANR	6485060	UnaryOperationExpression	& uniqueid		6484802	1					
ANR	6485061	UnaryOperator	&		6484802	0					
ANR	6485062	Identifier	uniqueid		6484802	1					
ANR	6485063	Argument	ptr + O_ ( E_UniqueProcessId )		6484802	2					
ANR	6485064	AdditiveExpression	ptr + O_ ( E_UniqueProcessId )		6484802	0		+			
ANR	6485065	Identifier	ptr		6484802	0					
ANR	6485066	CallExpression	O_ ( E_UniqueProcessId )		6484802	1					
ANR	6485067	Callee	O_		6484802	0					
ANR	6485068	Identifier	O_		6484802	0					
ANR	6485069	ArgumentList	E_UniqueProcessId		6484802	1					
ANR	6485070	Argument	E_UniqueProcessId		6484802	0					
ANR	6485071	Identifier	E_UniqueProcessId		6484802	0					
ANR	6485072	Argument	4 << ctx -> is_x64		6484802	3					
ANR	6485073	ShiftExpression	4 << ctx -> is_x64		6484802	0		<<			
ANR	6485074	PrimaryExpression	4		6484802	0					
ANR	6485075	PtrMemberAccess	ctx -> is_x64		6484802	1					
ANR	6485076	Identifier	ctx		6484802	0					
ANR	6485077	Identifier	is_x64		6484802	1					
ANR	6485078	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & peb , ptr + O_ ( E_Peb ) , 4 << ctx -> is_x64 )"	357:2:7775:7848	6484802	13	True				
ANR	6485079	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & peb , ptr + O_ ( E_Peb ) , 4 << ctx -> is_x64 )"		6484802	0					
ANR	6485080	Callee	windbg_read_at		6484802	0					
ANR	6485081	Identifier	windbg_read_at		6484802	0					
ANR	6485082	ArgumentList	ctx		6484802	1					
ANR	6485083	Argument	ctx		6484802	0					
ANR	6485084	Identifier	ctx		6484802	0					
ANR	6485085	Argument	( uint8_t * ) & peb		6484802	1					
ANR	6485086	CastExpression	( uint8_t * ) & peb		6484802	0					
ANR	6485087	CastTarget	uint8_t *		6484802	0					
ANR	6485088	UnaryOperationExpression	& peb		6484802	1					
ANR	6485089	UnaryOperator	&		6484802	0					
ANR	6485090	Identifier	peb		6484802	1					
ANR	6485091	Argument	ptr + O_ ( E_Peb )		6484802	2					
ANR	6485092	AdditiveExpression	ptr + O_ ( E_Peb )		6484802	0		+			
ANR	6485093	Identifier	ptr		6484802	0					
ANR	6485094	CallExpression	O_ ( E_Peb )		6484802	1					
ANR	6485095	Callee	O_		6484802	0					
ANR	6485096	Identifier	O_		6484802	0					
ANR	6485097	ArgumentList	E_Peb		6484802	1					
ANR	6485098	Argument	E_Peb		6484802	0					
ANR	6485099	Identifier	E_Peb		6484802	0					
ANR	6485100	Argument	4 << ctx -> is_x64		6484802	3					
ANR	6485101	ShiftExpression	4 << ctx -> is_x64		6484802	0		<<			
ANR	6485102	PrimaryExpression	4		6484802	0					
ANR	6485103	PtrMemberAccess	ctx -> is_x64		6484802	1					
ANR	6485104	Identifier	ctx		6484802	0					
ANR	6485105	Identifier	is_x64		6484802	1					
ANR	6485106	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & dir_base_table , ptr + O_ ( P_DirectoryTableBase ) , 4 << ctx -> is_x64 )"	358:2:7852:7951	6484802	14	True				
ANR	6485107	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & dir_base_table , ptr + O_ ( P_DirectoryTableBase ) , 4 << ctx -> is_x64 )"		6484802	0					
ANR	6485108	Callee	windbg_read_at		6484802	0					
ANR	6485109	Identifier	windbg_read_at		6484802	0					
ANR	6485110	ArgumentList	ctx		6484802	1					
ANR	6485111	Argument	ctx		6484802	0					
ANR	6485112	Identifier	ctx		6484802	0					
ANR	6485113	Argument	( uint8_t * ) & dir_base_table		6484802	1					
ANR	6485114	CastExpression	( uint8_t * ) & dir_base_table		6484802	0					
ANR	6485115	CastTarget	uint8_t *		6484802	0					
ANR	6485116	UnaryOperationExpression	& dir_base_table		6484802	1					
ANR	6485117	UnaryOperator	&		6484802	0					
ANR	6485118	Identifier	dir_base_table		6484802	1					
ANR	6485119	Argument	ptr + O_ ( P_DirectoryTableBase )		6484802	2					
ANR	6485120	AdditiveExpression	ptr + O_ ( P_DirectoryTableBase )		6484802	0		+			
ANR	6485121	Identifier	ptr		6484802	0					
ANR	6485122	CallExpression	O_ ( P_DirectoryTableBase )		6484802	1					
ANR	6485123	Callee	O_		6484802	0					
ANR	6485124	Identifier	O_		6484802	0					
ANR	6485125	ArgumentList	P_DirectoryTableBase		6484802	1					
ANR	6485126	Argument	P_DirectoryTableBase		6484802	0					
ANR	6485127	Identifier	P_DirectoryTableBase		6484802	0					
ANR	6485128	Argument	4 << ctx -> is_x64		6484802	3					
ANR	6485129	ShiftExpression	4 << ctx -> is_x64		6484802	0		<<			
ANR	6485130	PrimaryExpression	4		6484802	0					
ANR	6485131	PtrMemberAccess	ctx -> is_x64		6484802	1					
ANR	6485132	Identifier	ctx		6484802	0					
ANR	6485133	Identifier	is_x64		6484802	1					
ANR	6485134	IdentifierDeclStatement	"WindProc * proc = calloc ( 1 , sizeof ( WindProc ) ) ;"	360:2:7956:8001	6484802	15	True				
ANR	6485135	IdentifierDecl	"* proc = calloc ( 1 , sizeof ( WindProc ) )"		6484802	0					
ANR	6485136	IdentifierDeclType	WindProc *		6484802	0					
ANR	6485137	Identifier	proc		6484802	1					
ANR	6485138	AssignmentExpression	"* proc = calloc ( 1 , sizeof ( WindProc ) )"		6484802	2		=			
ANR	6485139	Identifier	proc		6484802	0					
ANR	6485140	CallExpression	"calloc ( 1 , sizeof ( WindProc ) )"		6484802	1					
ANR	6485141	Callee	calloc		6484802	0					
ANR	6485142	Identifier	calloc		6484802	0					
ANR	6485143	ArgumentList	1		6484802	1					
ANR	6485144	Argument	1		6484802	0					
ANR	6485145	PrimaryExpression	1		6484802	0					
ANR	6485146	Argument	sizeof ( WindProc )		6484802	1					
ANR	6485147	SizeofExpression	sizeof ( WindProc )		6484802	0					
ANR	6485148	Sizeof	sizeof		6484802	0					
ANR	6485149	SizeofOperand	WindProc		6484802	1					
ANR	6485150	ExpressionStatement	"strcpy ( proc -> name , ( const char * ) buf )"	362:2:8006:8045	6484802	16	True				
ANR	6485151	CallExpression	"strcpy ( proc -> name , ( const char * ) buf )"		6484802	0					
ANR	6485152	Callee	strcpy		6484802	0					
ANR	6485153	Identifier	strcpy		6484802	0					
ANR	6485154	ArgumentList	proc -> name		6484802	1					
ANR	6485155	Argument	proc -> name		6484802	0					
ANR	6485156	PtrMemberAccess	proc -> name		6484802	0					
ANR	6485157	Identifier	proc		6484802	0					
ANR	6485158	Identifier	name		6484802	1					
ANR	6485159	Argument	( const char * ) buf		6484802	1					
ANR	6485160	CastExpression	( const char * ) buf		6484802	0					
ANR	6485161	CastTarget	const char *		6484802	0					
ANR	6485162	Identifier	buf		6484802	1					
ANR	6485163	ExpressionStatement	proc -> eprocess = ptr	363:2:8049:8069	6484802	17	True				
ANR	6485164	AssignmentExpression	proc -> eprocess = ptr		6484802	0		=			
ANR	6485165	PtrMemberAccess	proc -> eprocess		6484802	0					
ANR	6485166	Identifier	proc		6484802	0					
ANR	6485167	Identifier	eprocess		6484802	1					
ANR	6485168	Identifier	ptr		6484802	1					
ANR	6485169	ExpressionStatement	proc -> vadroot = vadroot	364:2:8073:8096	6484802	18	True				
ANR	6485170	AssignmentExpression	proc -> vadroot = vadroot		6484802	0		=			
ANR	6485171	PtrMemberAccess	proc -> vadroot		6484802	0					
ANR	6485172	Identifier	proc		6484802	0					
ANR	6485173	Identifier	vadroot		6484802	1					
ANR	6485174	Identifier	vadroot		6484802	1					
ANR	6485175	ExpressionStatement	proc -> uniqueid = uniqueid	365:2:8100:8125	6484802	19	True				
ANR	6485176	AssignmentExpression	proc -> uniqueid = uniqueid		6484802	0		=			
ANR	6485177	PtrMemberAccess	proc -> uniqueid		6484802	0					
ANR	6485178	Identifier	proc		6484802	0					
ANR	6485179	Identifier	uniqueid		6484802	1					
ANR	6485180	Identifier	uniqueid		6484802	1					
ANR	6485181	ExpressionStatement	proc -> dir_base_table = dir_base_table	366:2:8129:8166	6484802	20	True				
ANR	6485182	AssignmentExpression	proc -> dir_base_table = dir_base_table		6484802	0		=			
ANR	6485183	PtrMemberAccess	proc -> dir_base_table		6484802	0					
ANR	6485184	Identifier	proc		6484802	0					
ANR	6485185	Identifier	dir_base_table		6484802	1					
ANR	6485186	Identifier	dir_base_table		6484802	1					
ANR	6485187	ExpressionStatement	proc -> peb = peb	367:2:8170:8185	6484802	21	True				
ANR	6485188	AssignmentExpression	proc -> peb = peb		6484802	0		=			
ANR	6485189	PtrMemberAccess	proc -> peb		6484802	0					
ANR	6485190	Identifier	proc		6484802	0					
ANR	6485191	Identifier	peb		6484802	1					
ANR	6485192	Identifier	peb		6484802	1					
ANR	6485193	ExpressionStatement	"r_list_append ( ret , proc )"	369:2:8190:8215	6484802	22	True				
ANR	6485194	CallExpression	"r_list_append ( ret , proc )"		6484802	0					
ANR	6485195	Callee	r_list_append		6484802	0					
ANR	6485196	Identifier	r_list_append		6484802	0					
ANR	6485197	ArgumentList	ret		6484802	1					
ANR	6485198	Argument	ret		6484802	0					
ANR	6485199	Identifier	ret		6484802	0					
ANR	6485200	Argument	proc		6484802	1					
ANR	6485201	Identifier	proc		6484802	0					
ANR	6485202	ExpressionStatement	ptr = next	372:2:8264:8274	6484802	23	True				
ANR	6485203	AssignmentExpression	ptr = next		6484802	0		=			
ANR	6485204	Identifier	ptr		6484802	0					
ANR	6485205	Identifier	next		6484802	1					
ANR	6485206	Condition	ptr != base	373:10:8286:8296	6484802	1	True				
ANR	6485207	EqualityExpression	ptr != base		6484802	0		!=			
ANR	6485208	Identifier	ptr		6484802	0					
ANR	6485209	Identifier	base		6484802	1					
ANR	6485210	ExpressionStatement	ctx -> plist_cache = ret	375:1:8302:8324	6484802	20	True				
ANR	6485211	AssignmentExpression	ctx -> plist_cache = ret		6484802	0		=			
ANR	6485212	PtrMemberAccess	ctx -> plist_cache		6484802	0					
ANR	6485213	Identifier	ctx		6484802	0					
ANR	6485214	Identifier	plist_cache		6484802	1					
ANR	6485215	Identifier	ret		6484802	1					
ANR	6485216	ReturnStatement	return ret ;	377:1:8328:8338	6484802	21	True				
ANR	6485217	Identifier	ret		6484802	0					
ANR	6485218	ReturnType	RList *		6484802	1					
ANR	6485219	Identifier	windbg_list_process		6484802	2					
ANR	6485220	ParameterList	WindCtx * ctx		6484802	3					
ANR	6485221	Parameter	WindCtx * ctx	309:27:6559:6570	6484802	0	True				
ANR	6485222	ParameterType	WindCtx *		6484802	0					
ANR	6485223	Identifier	ctx		6484802	1					
ANR	6485224	CFGEntryNode	ENTRY		6484802		True				
ANR	6485225	CFGExitNode	EXIT		6484802		True				
ANR	6485226	Symbol	next		6484802						
ANR	6485227	Symbol	& uniqueid		6484802						
ANR	6485228	Symbol	proc -> dir_base_table		6484802						
ANR	6485229	Symbol	E_VadRoot		6484802						
ANR	6485230	Symbol	E_Peb		6484802						
ANR	6485231	Symbol	calloc		6484802						
ANR	6485232	Symbol	peb		6484802						
ANR	6485233	Symbol	proc -> vadroot		6484802						
ANR	6485234	Symbol	proc -> eprocess		6484802						
ANR	6485235	Symbol	& ptr		6484802						
ANR	6485236	Symbol	ctx -> plist_cache		6484802						
ANR	6485237	Symbol	E_UniqueProcessId		6484802						
ANR	6485238	Symbol	ctx -> dbg_addr		6484802						
ANR	6485239	Symbol	P_DirectoryTableBase		6484802						
ANR	6485240	Symbol	free		6484802						
ANR	6485241	Symbol	dir_base_table		6484802						
ANR	6485242	Symbol	ctx -> syncd		6484802						
ANR	6485243	Symbol	& buf		6484802						
ANR	6485244	Symbol	uniqueid		6484802						
ANR	6485245	Symbol	ret		6484802						
ANR	6485246	Symbol	* buf		6484802						
ANR	6485247	Symbol	proc		6484802						
ANR	6485248	Symbol	NULL		6484802						
ANR	6485249	Symbol	& next		6484802						
ANR	6485250	Symbol	ctx -> is_x64		6484802						
ANR	6485251	Symbol	r_list_newf		6484802						
ANR	6485252	Symbol	ctx		6484802						
ANR	6485253	Symbol	proc -> peb		6484802						
ANR	6485254	Symbol	vadroot		6484802						
ANR	6485255	Symbol	E_ActiveProcessLinks		6484802						
ANR	6485256	Symbol	& vadroot		6484802						
ANR	6485257	Symbol	E_ImageFileName		6484802						
ANR	6485258	Symbol	* ctx		6484802						
ANR	6485259	Symbol	ptr		6484802						
ANR	6485260	Symbol	& dir_base_table		6484802						
ANR	6485261	Symbol	* proc		6484802						
ANR	6485262	Symbol	proc -> name		6484802						
ANR	6485263	Symbol	O_		6484802						
ANR	6485264	Symbol	ctx -> io_ptr		6484802						
ANR	6485265	Symbol	buf		6484802						
ANR	6485266	Symbol	& peb		6484802						
ANR	6485267	Symbol	K_PsActiveProcessHead		6484802						
ANR	6485268	Symbol	base		6484802						
ANR	6485269	Symbol	proc -> uniqueid		6484802						
ANR	6485270	Function	windbg_list_threads	380:0:8343:9803							
ANR	6485271	FunctionDef	windbg_list_threads (WindCtx * ctx)		6485270	0					
ANR	6485272	CompoundStatement		380:41:8384:9803	6485270	0					
ANR	6485273	IdentifierDeclStatement	RList * ret ;	381:1:8387:8397	6485270	0	True				
ANR	6485274	IdentifierDecl	* ret		6485270	0					
ANR	6485275	IdentifierDeclType	RList *		6485270	0					
ANR	6485276	Identifier	ret		6485270	1					
ANR	6485277	IdentifierDeclStatement	"ut64 ptr , base ;"	382:1:8400:8414	6485270	1	True				
ANR	6485278	IdentifierDecl	ptr		6485270	0					
ANR	6485279	IdentifierDeclType	ut64		6485270	0					
ANR	6485280	Identifier	ptr		6485270	1					
ANR	6485281	IdentifierDecl	base		6485270	1					
ANR	6485282	IdentifierDeclType	ut64		6485270	0					
ANR	6485283	Identifier	base		6485270	1					
ANR	6485284	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6485270	2					
ANR	6485285	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	384:5:8422:8456	6485270	0	True				
ANR	6485286	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6485270	0		||			
ANR	6485287	UnaryOperationExpression	! ctx		6485270	0					
ANR	6485288	UnaryOperator	!		6485270	0					
ANR	6485289	Identifier	ctx		6485270	1					
ANR	6485290	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6485270	1		||			
ANR	6485291	UnaryOperationExpression	! ctx -> io_ptr		6485270	0					
ANR	6485292	UnaryOperator	!		6485270	0					
ANR	6485293	PtrMemberAccess	ctx -> io_ptr		6485270	1					
ANR	6485294	Identifier	ctx		6485270	0					
ANR	6485295	Identifier	io_ptr		6485270	1					
ANR	6485296	UnaryOperationExpression	! ctx -> syncd		6485270	1					
ANR	6485297	UnaryOperator	!		6485270	0					
ANR	6485298	PtrMemberAccess	ctx -> syncd		6485270	1					
ANR	6485299	Identifier	ctx		6485270	0					
ANR	6485300	Identifier	syncd		6485270	1					
ANR	6485301	CompoundStatement		5:42:74:74	6485270	1					
ANR	6485302	ReturnStatement	return NULL ;	385:2:8463:8474	6485270	0	True				
ANR	6485303	Identifier	NULL		6485270	0					
ANR	6485304	IfStatement	if ( ctx -> tlist_cache )		6485270	3					
ANR	6485305	Condition	ctx -> tlist_cache	388:5:8485:8500	6485270	0	True				
ANR	6485306	PtrMemberAccess	ctx -> tlist_cache		6485270	0					
ANR	6485307	Identifier	ctx		6485270	0					
ANR	6485308	Identifier	tlist_cache		6485270	1					
ANR	6485309	CompoundStatement		9:23:118:118	6485270	1					
ANR	6485310	ReturnStatement	return ctx -> tlist_cache ;	389:2:8507:8530	6485270	0	True				
ANR	6485311	PtrMemberAccess	ctx -> tlist_cache		6485270	0					
ANR	6485312	Identifier	ctx		6485270	0					
ANR	6485313	Identifier	tlist_cache		6485270	1					
ANR	6485314	IfStatement	if ( ! ctx -> target )		6485270	4					
ANR	6485315	Condition	! ctx -> target	392:5:8541:8552	6485270	0	True				
ANR	6485316	UnaryOperationExpression	! ctx -> target		6485270	0					
ANR	6485317	UnaryOperator	!		6485270	0					
ANR	6485318	PtrMemberAccess	ctx -> target		6485270	1					
ANR	6485319	Identifier	ctx		6485270	0					
ANR	6485320	Identifier	target		6485270	1					
ANR	6485321	CompoundStatement		14:2:174:214	6485270	1					
ANR	6485322	IdentifierDeclStatement	"WIND_DBG eprintf ( ""No target process\\n"" ) ;"	393:2:8559:8599	6485270	0	True				
ANR	6485323	IdentifierDecl	"eprintf ( ""No target process\\n"" )"		6485270	0					
ANR	6485324	IdentifierDeclType	WIND_DBG		6485270	0					
ANR	6485325	Identifier	eprintf		6485270	1					
ANR	6485326	PrimaryExpression	"""No target process\\n"""		6485270	2					
ANR	6485327	ReturnStatement	return NULL ;	394:2:8603:8614	6485270	1	True				
ANR	6485328	Identifier	NULL		6485270	0					
ANR	6485329	ExpressionStatement	ptr = ctx -> target -> eprocess	397:1:8621:8648	6485270	5	True				
ANR	6485330	AssignmentExpression	ptr = ctx -> target -> eprocess		6485270	0		=			
ANR	6485331	Identifier	ptr		6485270	0					
ANR	6485332	PtrMemberAccess	ctx -> target -> eprocess		6485270	1					
ANR	6485333	PtrMemberAccess	ctx -> target		6485270	0					
ANR	6485334	Identifier	ctx		6485270	0					
ANR	6485335	Identifier	target		6485270	1					
ANR	6485336	Identifier	eprocess		6485270	1					
ANR	6485337	IfStatement	if ( ! ptr )		6485270	6					
ANR	6485338	Condition	! ptr	398:5:8655:8658	6485270	0	True				
ANR	6485339	UnaryOperationExpression	! ptr		6485270	0					
ANR	6485340	UnaryOperator	!		6485270	0					
ANR	6485341	Identifier	ptr		6485270	1					
ANR	6485342	CompoundStatement		20:2:280:315	6485270	1					
ANR	6485343	IdentifierDeclStatement	"WIND_DBG eprintf ( ""No _EPROCESS\\n"" ) ;"	399:2:8665:8700	6485270	0	True				
ANR	6485344	IdentifierDecl	"eprintf ( ""No _EPROCESS\\n"" )"		6485270	0					
ANR	6485345	IdentifierDeclType	WIND_DBG		6485270	0					
ANR	6485346	Identifier	eprintf		6485270	1					
ANR	6485347	PrimaryExpression	"""No _EPROCESS\\n"""		6485270	2					
ANR	6485348	ReturnStatement	return NULL ;	400:2:8704:8715	6485270	1	True				
ANR	6485349	Identifier	NULL		6485270	0					
ANR	6485350	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ptr + O_ ( E_ThreadListHead ) , 4 << ctx -> is_x64 )"	404:1:8765:8849	6485270	7	True				
ANR	6485351	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ptr + O_ ( E_ThreadListHead ) , 4 << ctx -> is_x64 )"		6485270	0					
ANR	6485352	Callee	windbg_read_at		6485270	0					
ANR	6485353	Identifier	windbg_read_at		6485270	0					
ANR	6485354	ArgumentList	ctx		6485270	1					
ANR	6485355	Argument	ctx		6485270	0					
ANR	6485356	Identifier	ctx		6485270	0					
ANR	6485357	Argument	( uint8_t * ) & ptr		6485270	1					
ANR	6485358	CastExpression	( uint8_t * ) & ptr		6485270	0					
ANR	6485359	CastTarget	uint8_t *		6485270	0					
ANR	6485360	UnaryOperationExpression	& ptr		6485270	1					
ANR	6485361	UnaryOperator	&		6485270	0					
ANR	6485362	Identifier	ptr		6485270	1					
ANR	6485363	Argument	ptr + O_ ( E_ThreadListHead )		6485270	2					
ANR	6485364	AdditiveExpression	ptr + O_ ( E_ThreadListHead )		6485270	0		+			
ANR	6485365	Identifier	ptr		6485270	0					
ANR	6485366	CallExpression	O_ ( E_ThreadListHead )		6485270	1					
ANR	6485367	Callee	O_		6485270	0					
ANR	6485368	Identifier	O_		6485270	0					
ANR	6485369	ArgumentList	E_ThreadListHead		6485270	1					
ANR	6485370	Argument	E_ThreadListHead		6485270	0					
ANR	6485371	Identifier	E_ThreadListHead		6485270	0					
ANR	6485372	Argument	4 << ctx -> is_x64		6485270	3					
ANR	6485373	ShiftExpression	4 << ctx -> is_x64		6485270	0		<<			
ANR	6485374	PrimaryExpression	4		6485270	0					
ANR	6485375	PtrMemberAccess	ctx -> is_x64		6485270	1					
ANR	6485376	Identifier	ctx		6485270	0					
ANR	6485377	Identifier	is_x64		6485270	1					
ANR	6485378	IfStatement	if ( ! ptr )		6485270	8					
ANR	6485379	Condition	! ptr	405:5:8856:8859	6485270	0	True				
ANR	6485380	UnaryOperationExpression	! ptr		6485270	0					
ANR	6485381	UnaryOperator	!		6485270	0					
ANR	6485382	Identifier	ptr		6485270	1					
ANR	6485383	CompoundStatement		26:11:477:477	6485270	1					
ANR	6485384	ReturnStatement	return NULL ;	406:2:8866:8877	6485270	0	True				
ANR	6485385	Identifier	NULL		6485270	0					
ANR	6485386	ExpressionStatement	base = ptr	409:1:8884:8894	6485270	9	True				
ANR	6485387	AssignmentExpression	base = ptr		6485270	0		=			
ANR	6485388	Identifier	base		6485270	0					
ANR	6485389	Identifier	ptr		6485270	1					
ANR	6485390	ExpressionStatement	ret = r_list_newf ( free )	411:1:8898:8922	6485270	10	True				
ANR	6485391	AssignmentExpression	ret = r_list_newf ( free )		6485270	0		=			
ANR	6485392	Identifier	ret		6485270	0					
ANR	6485393	CallExpression	r_list_newf ( free )		6485270	1					
ANR	6485394	Callee	r_list_newf		6485270	0					
ANR	6485395	Identifier	r_list_newf		6485270	0					
ANR	6485396	ArgumentList	free		6485270	1					
ANR	6485397	Argument	free		6485270	0					
ANR	6485398	Identifier	free		6485270	0					
ANR	6485399	DoStatement	do		6485270	11					
ANR	6485400	CompoundStatement		49:2:958:975	6485270	0					
ANR	6485401	IdentifierDeclStatement	ut64 next = 0 ;	414:2:8933:8946	6485270	0	True				
ANR	6485402	IdentifierDecl	next = 0		6485270	0					
ANR	6485403	IdentifierDeclType	ut64		6485270	0					
ANR	6485404	Identifier	next		6485270	1					
ANR	6485405	AssignmentExpression	next = 0		6485270	2		=			
ANR	6485406	Identifier	next		6485270	0					
ANR	6485407	PrimaryExpression	0		6485270	1					
ANR	6485408	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & next , ptr , 4 << ctx -> is_x64 )"	416:2:8951:9013	6485270	1	True				
ANR	6485409	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & next , ptr , 4 << ctx -> is_x64 )"		6485270	0					
ANR	6485410	Callee	windbg_read_at		6485270	0					
ANR	6485411	Identifier	windbg_read_at		6485270	0					
ANR	6485412	ArgumentList	ctx		6485270	1					
ANR	6485413	Argument	ctx		6485270	0					
ANR	6485414	Identifier	ctx		6485270	0					
ANR	6485415	Argument	( uint8_t * ) & next		6485270	1					
ANR	6485416	CastExpression	( uint8_t * ) & next		6485270	0					
ANR	6485417	CastTarget	uint8_t *		6485270	0					
ANR	6485418	UnaryOperationExpression	& next		6485270	1					
ANR	6485419	UnaryOperator	&		6485270	0					
ANR	6485420	Identifier	next		6485270	1					
ANR	6485421	Argument	ptr		6485270	2					
ANR	6485422	Identifier	ptr		6485270	0					
ANR	6485423	Argument	4 << ctx -> is_x64		6485270	3					
ANR	6485424	ShiftExpression	4 << ctx -> is_x64		6485270	0		<<			
ANR	6485425	PrimaryExpression	4		6485270	0					
ANR	6485426	PtrMemberAccess	ctx -> is_x64		6485270	1					
ANR	6485427	Identifier	ctx		6485270	0					
ANR	6485428	Identifier	is_x64		6485270	1					
ANR	6485429	IfStatement	if ( ! next )		6485270	2					
ANR	6485430	Condition	! next	417:6:9021:9025	6485270	0	True				
ANR	6485431	UnaryOperationExpression	! next		6485270	0					
ANR	6485432	UnaryOperator	!		6485270	0					
ANR	6485433	Identifier	next		6485270	1					
ANR	6485434	CompoundStatement		38:13:643:643	6485270	1					
ANR	6485435	Statement	WIND_DBG	418:3:9033:9040	6485270	0	True				
ANR	6485436	Statement	eprintf	418:12:9042:9048	6485270	1	True				
ANR	6485437	Statement	(	418:20:9050:9050	6485270	2	True				
ANR	6485438	Statement	"""Corrupted ThreadListEntry found at: 0x%"""	418:21:9051:9091	6485270	3	True				
ANR	6485439	Statement	PFMT64x	418:62:9092:9098	6485270	4	True				
ANR	6485440	Statement	"""\\n"""	418:69:9099:9102	6485270	5	True				
ANR	6485441	Statement	","	418:73:9103:9103	6485270	6	True				
ANR	6485442	Statement	ptr	418:75:9105:9107	6485270	7	True				
ANR	6485443	Statement	)	418:78:9108:9108	6485270	8	True				
ANR	6485444	ExpressionStatement		418:79:9109:9109	6485270	9	True				
ANR	6485445	BreakStatement	break ;	419:3:9114:9119	6485270	10	True				
ANR	6485446	ExpressionStatement	ptr -= O_ ( ET_ThreadListEntry )	423:2:9186:9215	6485270	3	True				
ANR	6485447	AssignmentExpression	ptr -= O_ ( ET_ThreadListEntry )		6485270	0		-=			
ANR	6485448	Identifier	ptr		6485270	0					
ANR	6485449	CallExpression	O_ ( ET_ThreadListEntry )		6485270	1					
ANR	6485450	Callee	O_		6485270	0					
ANR	6485451	Identifier	O_		6485270	0					
ANR	6485452	ArgumentList	ET_ThreadListEntry		6485270	1					
ANR	6485453	Argument	ET_ThreadListEntry		6485270	0					
ANR	6485454	Identifier	ET_ThreadListEntry		6485270	0					
ANR	6485455	IdentifierDeclStatement	ut64 entrypoint = 0 ;	425:2:9220:9239	6485270	4	True				
ANR	6485456	IdentifierDecl	entrypoint = 0		6485270	0					
ANR	6485457	IdentifierDeclType	ut64		6485270	0					
ANR	6485458	Identifier	entrypoint		6485270	1					
ANR	6485459	AssignmentExpression	entrypoint = 0		6485270	2		=			
ANR	6485460	Identifier	entrypoint		6485270	0					
ANR	6485461	PrimaryExpression	0		6485270	1					
ANR	6485462	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & entrypoint , ptr + O_ ( ET_Win32StartAddress ) , 4 << ctx -> is_x64 )"	426:2:9243:9338	6485270	5	True				
ANR	6485463	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & entrypoint , ptr + O_ ( ET_Win32StartAddress ) , 4 << ctx -> is_x64 )"		6485270	0					
ANR	6485464	Callee	windbg_read_at		6485270	0					
ANR	6485465	Identifier	windbg_read_at		6485270	0					
ANR	6485466	ArgumentList	ctx		6485270	1					
ANR	6485467	Argument	ctx		6485270	0					
ANR	6485468	Identifier	ctx		6485270	0					
ANR	6485469	Argument	( uint8_t * ) & entrypoint		6485270	1					
ANR	6485470	CastExpression	( uint8_t * ) & entrypoint		6485270	0					
ANR	6485471	CastTarget	uint8_t *		6485270	0					
ANR	6485472	UnaryOperationExpression	& entrypoint		6485270	1					
ANR	6485473	UnaryOperator	&		6485270	0					
ANR	6485474	Identifier	entrypoint		6485270	1					
ANR	6485475	Argument	ptr + O_ ( ET_Win32StartAddress )		6485270	2					
ANR	6485476	AdditiveExpression	ptr + O_ ( ET_Win32StartAddress )		6485270	0		+			
ANR	6485477	Identifier	ptr		6485270	0					
ANR	6485478	CallExpression	O_ ( ET_Win32StartAddress )		6485270	1					
ANR	6485479	Callee	O_		6485270	0					
ANR	6485480	Identifier	O_		6485270	0					
ANR	6485481	ArgumentList	ET_Win32StartAddress		6485270	1					
ANR	6485482	Argument	ET_Win32StartAddress		6485270	0					
ANR	6485483	Identifier	ET_Win32StartAddress		6485270	0					
ANR	6485484	Argument	4 << ctx -> is_x64		6485270	3					
ANR	6485485	ShiftExpression	4 << ctx -> is_x64		6485270	0		<<			
ANR	6485486	PrimaryExpression	4		6485270	0					
ANR	6485487	PtrMemberAccess	ctx -> is_x64		6485270	1					
ANR	6485488	Identifier	ctx		6485270	0					
ANR	6485489	Identifier	is_x64		6485270	1					
ANR	6485490	IdentifierDeclStatement	ut64 uniqueid = 0 ;	428:2:9343:9360	6485270	6	True				
ANR	6485491	IdentifierDecl	uniqueid = 0		6485270	0					
ANR	6485492	IdentifierDeclType	ut64		6485270	0					
ANR	6485493	Identifier	uniqueid		6485270	1					
ANR	6485494	AssignmentExpression	uniqueid = 0		6485270	2		=			
ANR	6485495	Identifier	uniqueid		6485270	0					
ANR	6485496	PrimaryExpression	0		6485270	1					
ANR	6485497	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & uniqueid , ptr + O_ ( ET_Cid ) + O_ ( C_UniqueThread ) , 4 << ctx -> is_x64 )"	429:2:9364:9464	6485270	7	True				
ANR	6485498	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & uniqueid , ptr + O_ ( ET_Cid ) + O_ ( C_UniqueThread ) , 4 << ctx -> is_x64 )"		6485270	0					
ANR	6485499	Callee	windbg_read_at		6485270	0					
ANR	6485500	Identifier	windbg_read_at		6485270	0					
ANR	6485501	ArgumentList	ctx		6485270	1					
ANR	6485502	Argument	ctx		6485270	0					
ANR	6485503	Identifier	ctx		6485270	0					
ANR	6485504	Argument	( uint8_t * ) & uniqueid		6485270	1					
ANR	6485505	CastExpression	( uint8_t * ) & uniqueid		6485270	0					
ANR	6485506	CastTarget	uint8_t *		6485270	0					
ANR	6485507	UnaryOperationExpression	& uniqueid		6485270	1					
ANR	6485508	UnaryOperator	&		6485270	0					
ANR	6485509	Identifier	uniqueid		6485270	1					
ANR	6485510	Argument	ptr + O_ ( ET_Cid ) + O_ ( C_UniqueThread )		6485270	2					
ANR	6485511	AdditiveExpression	ptr + O_ ( ET_Cid ) + O_ ( C_UniqueThread )		6485270	0		+			
ANR	6485512	Identifier	ptr		6485270	0					
ANR	6485513	AdditiveExpression	O_ ( ET_Cid ) + O_ ( C_UniqueThread )		6485270	1		+			
ANR	6485514	CallExpression	O_ ( ET_Cid )		6485270	0					
ANR	6485515	Callee	O_		6485270	0					
ANR	6485516	Identifier	O_		6485270	0					
ANR	6485517	ArgumentList	ET_Cid		6485270	1					
ANR	6485518	Argument	ET_Cid		6485270	0					
ANR	6485519	Identifier	ET_Cid		6485270	0					
ANR	6485520	CallExpression	O_ ( C_UniqueThread )		6485270	1					
ANR	6485521	Callee	O_		6485270	0					
ANR	6485522	Identifier	O_		6485270	0					
ANR	6485523	ArgumentList	C_UniqueThread		6485270	1					
ANR	6485524	Argument	C_UniqueThread		6485270	0					
ANR	6485525	Identifier	C_UniqueThread		6485270	0					
ANR	6485526	Argument	4 << ctx -> is_x64		6485270	3					
ANR	6485527	ShiftExpression	4 << ctx -> is_x64		6485270	0		<<			
ANR	6485528	PrimaryExpression	4		6485270	0					
ANR	6485529	PtrMemberAccess	ctx -> is_x64		6485270	1					
ANR	6485530	Identifier	ctx		6485270	0					
ANR	6485531	Identifier	is_x64		6485270	1					
ANR	6485532	IfStatement	if ( uniqueid )		6485270	8					
ANR	6485533	Condition	uniqueid	430:6:9472:9479	6485270	0	True				
ANR	6485534	Identifier	uniqueid		6485270	0					
ANR	6485535	CompoundStatement		52:3:1102:1153	6485270	1					
ANR	6485536	IdentifierDeclStatement	"WindThread * thread = calloc ( 1 , sizeof ( WindThread ) ) ;"	431:3:9487:9538	6485270	0	True				
ANR	6485537	IdentifierDecl	"* thread = calloc ( 1 , sizeof ( WindThread ) )"		6485270	0					
ANR	6485538	IdentifierDeclType	WindThread *		6485270	0					
ANR	6485539	Identifier	thread		6485270	1					
ANR	6485540	AssignmentExpression	"* thread = calloc ( 1 , sizeof ( WindThread ) )"		6485270	2		=			
ANR	6485541	Identifier	thread		6485270	0					
ANR	6485542	CallExpression	"calloc ( 1 , sizeof ( WindThread ) )"		6485270	1					
ANR	6485543	Callee	calloc		6485270	0					
ANR	6485544	Identifier	calloc		6485270	0					
ANR	6485545	ArgumentList	1		6485270	1					
ANR	6485546	Argument	1		6485270	0					
ANR	6485547	PrimaryExpression	1		6485270	0					
ANR	6485548	Argument	sizeof ( WindThread )		6485270	1					
ANR	6485549	SizeofExpression	sizeof ( WindThread )		6485270	0					
ANR	6485550	Sizeof	sizeof		6485270	0					
ANR	6485551	SizeofOperand	WindThread		6485270	1					
ANR	6485552	ExpressionStatement	thread -> uniqueid = uniqueid	432:3:9543:9570	6485270	1	True				
ANR	6485553	AssignmentExpression	thread -> uniqueid = uniqueid		6485270	0		=			
ANR	6485554	PtrMemberAccess	thread -> uniqueid		6485270	0					
ANR	6485555	Identifier	thread		6485270	0					
ANR	6485556	Identifier	uniqueid		6485270	1					
ANR	6485557	Identifier	uniqueid		6485270	1					
ANR	6485558	ExpressionStatement	thread -> status = 's'	433:3:9575:9595	6485270	2	True				
ANR	6485559	AssignmentExpression	thread -> status = 's'		6485270	0		=			
ANR	6485560	PtrMemberAccess	thread -> status		6485270	0					
ANR	6485561	Identifier	thread		6485270	0					
ANR	6485562	Identifier	status		6485270	1					
ANR	6485563	PrimaryExpression	's'		6485270	1					
ANR	6485564	ExpressionStatement	thread -> runnable = true	434:3:9600:9623	6485270	3	True				
ANR	6485565	AssignmentExpression	thread -> runnable = true		6485270	0		=			
ANR	6485566	PtrMemberAccess	thread -> runnable		6485270	0					
ANR	6485567	Identifier	thread		6485270	0					
ANR	6485568	Identifier	runnable		6485270	1					
ANR	6485569	Identifier	true		6485270	1					
ANR	6485570	ExpressionStatement	thread -> ethread = ptr	435:3:9628:9649	6485270	4	True				
ANR	6485571	AssignmentExpression	thread -> ethread = ptr		6485270	0		=			
ANR	6485572	PtrMemberAccess	thread -> ethread		6485270	0					
ANR	6485573	Identifier	thread		6485270	0					
ANR	6485574	Identifier	ethread		6485270	1					
ANR	6485575	Identifier	ptr		6485270	1					
ANR	6485576	ExpressionStatement	thread -> entrypoint = entrypoint	436:3:9654:9685	6485270	5	True				
ANR	6485577	AssignmentExpression	thread -> entrypoint = entrypoint		6485270	0		=			
ANR	6485578	PtrMemberAccess	thread -> entrypoint		6485270	0					
ANR	6485579	Identifier	thread		6485270	0					
ANR	6485580	Identifier	entrypoint		6485270	1					
ANR	6485581	Identifier	entrypoint		6485270	1					
ANR	6485582	ExpressionStatement	"r_list_append ( ret , thread )"	438:3:9691:9718	6485270	6	True				
ANR	6485583	CallExpression	"r_list_append ( ret , thread )"		6485270	0					
ANR	6485584	Callee	r_list_append		6485270	0					
ANR	6485585	Identifier	r_list_append		6485270	0					
ANR	6485586	ArgumentList	ret		6485270	1					
ANR	6485587	Argument	ret		6485270	0					
ANR	6485588	Identifier	ret		6485270	0					
ANR	6485589	Argument	thread		6485270	1					
ANR	6485590	Identifier	thread		6485270	0					
ANR	6485591	ExpressionStatement	ptr = next	441:2:9727:9737	6485270	9	True				
ANR	6485592	AssignmentExpression	ptr = next		6485270	0		=			
ANR	6485593	Identifier	ptr		6485270	0					
ANR	6485594	Identifier	next		6485270	1					
ANR	6485595	Condition	ptr != base	442:10:9749:9759	6485270	1	True				
ANR	6485596	EqualityExpression	ptr != base		6485270	0		!=			
ANR	6485597	Identifier	ptr		6485270	0					
ANR	6485598	Identifier	base		6485270	1					
ANR	6485599	ExpressionStatement	ctx -> tlist_cache = ret	444:1:9765:9787	6485270	12	True				
ANR	6485600	AssignmentExpression	ctx -> tlist_cache = ret		6485270	0		=			
ANR	6485601	PtrMemberAccess	ctx -> tlist_cache		6485270	0					
ANR	6485602	Identifier	ctx		6485270	0					
ANR	6485603	Identifier	tlist_cache		6485270	1					
ANR	6485604	Identifier	ret		6485270	1					
ANR	6485605	ReturnStatement	return ret ;	446:1:9791:9801	6485270	13	True				
ANR	6485606	Identifier	ret		6485270	0					
ANR	6485607	ReturnType	RList *		6485270	1					
ANR	6485608	Identifier	windbg_list_threads		6485270	2					
ANR	6485609	ParameterList	WindCtx * ctx		6485270	3					
ANR	6485610	Parameter	WindCtx * ctx	380:27:8370:8381	6485270	0	True				
ANR	6485611	ParameterType	WindCtx *		6485270	0					
ANR	6485612	Identifier	ctx		6485270	1					
ANR	6485613	CFGEntryNode	ENTRY		6485270		True				
ANR	6485614	CFGExitNode	EXIT		6485270		True				
ANR	6485615	Symbol	next		6485270						
ANR	6485616	Symbol	ET_ThreadListEntry		6485270						
ANR	6485617	Symbol	& uniqueid		6485270						
ANR	6485618	Symbol	thread -> status		6485270						
ANR	6485619	Symbol	ET_Cid		6485270						
ANR	6485620	Symbol	ctx -> target		6485270						
ANR	6485621	Symbol	calloc		6485270						
ANR	6485622	Symbol	E_ThreadListHead		6485270						
ANR	6485623	Symbol	eprintf		6485270						
ANR	6485624	Symbol	C_UniqueThread		6485270						
ANR	6485625	Symbol	& ptr		6485270						
ANR	6485626	Symbol	entrypoint		6485270						
ANR	6485627	Symbol	* thread		6485270						
ANR	6485628	Symbol	free		6485270						
ANR	6485629	Symbol	ctx -> syncd		6485270						
ANR	6485630	Symbol	uniqueid		6485270						
ANR	6485631	Symbol	thread -> runnable		6485270						
ANR	6485632	Symbol	ret		6485270						
ANR	6485633	Symbol	NULL		6485270						
ANR	6485634	Symbol	& next		6485270						
ANR	6485635	Symbol	ctx -> is_x64		6485270						
ANR	6485636	Symbol	r_list_newf		6485270						
ANR	6485637	Symbol	& entrypoint		6485270						
ANR	6485638	Symbol	ctx		6485270						
ANR	6485639	Symbol	thread -> uniqueid		6485270						
ANR	6485640	Symbol	* ctx -> target		6485270						
ANR	6485641	Symbol	thread		6485270						
ANR	6485642	Symbol	* ctx		6485270						
ANR	6485643	Symbol	ptr		6485270						
ANR	6485644	Symbol	O_		6485270						
ANR	6485645	Symbol	ctx -> io_ptr		6485270						
ANR	6485646	Symbol	ctx -> target -> eprocess		6485270						
ANR	6485647	Symbol	ET_Win32StartAddress		6485270						
ANR	6485648	Symbol	true		6485270						
ANR	6485649	Symbol	* * ctx		6485270						
ANR	6485650	Symbol	ctx -> tlist_cache		6485270						
ANR	6485651	Symbol	thread -> ethread		6485270						
ANR	6485652	Symbol	thread -> entrypoint		6485270						
ANR	6485653	Symbol	base		6485270						
ANR	6485654	Function	windbg_va_to_pa	456:0:10220:12403							
ANR	6485655	FunctionDef	"windbg_va_to_pa (WindCtx * ctx , ut64 va , ut64 * pa)"		6485654	0					
ANR	6485656	CompoundStatement		456:54:10274:12403	6485654	0					
ANR	6485657	IdentifierDeclStatement	"ut64 pml4i , pdpi , pdi , pti ;"	457:1:10277:10303	6485654	0	True				
ANR	6485658	IdentifierDecl	pml4i		6485654	0					
ANR	6485659	IdentifierDeclType	ut64		6485654	0					
ANR	6485660	Identifier	pml4i		6485654	1					
ANR	6485661	IdentifierDecl	pdpi		6485654	1					
ANR	6485662	IdentifierDeclType	ut64		6485654	0					
ANR	6485663	Identifier	pdpi		6485654	1					
ANR	6485664	IdentifierDecl	pdi		6485654	2					
ANR	6485665	IdentifierDeclType	ut64		6485654	0					
ANR	6485666	Identifier	pdi		6485654	1					
ANR	6485667	IdentifierDecl	pti		6485654	3					
ANR	6485668	IdentifierDeclType	ut64		6485654	0					
ANR	6485669	Identifier	pti		6485654	1					
ANR	6485670	IdentifierDeclStatement	"ut64 tmp , mask ;"	458:1:10306:10320	6485654	1	True				
ANR	6485671	IdentifierDecl	tmp		6485654	0					
ANR	6485672	IdentifierDeclType	ut64		6485654	0					
ANR	6485673	Identifier	tmp		6485654	1					
ANR	6485674	IdentifierDecl	mask		6485654	1					
ANR	6485675	IdentifierDeclType	ut64		6485654	0					
ANR	6485676	Identifier	mask		6485654	1					
ANR	6485677	IfStatement	if ( ! ctx -> target )		6485654	2					
ANR	6485678	Condition	! ctx -> target	461:5:10363:10374	6485654	0	True				
ANR	6485679	UnaryOperationExpression	! ctx -> target		6485654	0					
ANR	6485680	UnaryOperator	!		6485654	0					
ANR	6485681	PtrMemberAccess	ctx -> target		6485654	1					
ANR	6485682	Identifier	ctx		6485654	0					
ANR	6485683	Identifier	target		6485654	1					
ANR	6485684	CompoundStatement		6:19:102:102	6485654	1					
ANR	6485685	ReturnStatement	return 0 ;	462:2:10381:10389	6485654	0	True				
ANR	6485686	PrimaryExpression	0		6485654	0					
ANR	6485687	Statement	WIND_DBG	465:1:10396:10403	6485654	3	True				
ANR	6485688	Statement	eprintf	465:10:10405:10411	6485654	4	True				
ANR	6485689	Statement	(	465:17:10412:10412	6485654	5	True				
ANR	6485690	Statement	"""VA   : %016"""	465:18:10413:10425	6485654	6	True				
ANR	6485691	Statement	PFMT64x	465:31:10426:10432	6485654	7	True				
ANR	6485692	Statement	"""\\n"""	465:39:10434:10437	6485654	8	True				
ANR	6485693	Statement	","	465:43:10438:10438	6485654	9	True				
ANR	6485694	Statement	va	465:45:10440:10441	6485654	10	True				
ANR	6485695	Statement	)	465:47:10442:10442	6485654	11	True				
ANR	6485696	ExpressionStatement		465:48:10443:10443	6485654	12	True				
ANR	6485697	IfStatement	if ( ctx -> is_x64 )		6485654	13					
ANR	6485698	Condition	ctx -> is_x64	467:5:10451:10461	6485654	0	True				
ANR	6485699	PtrMemberAccess	ctx -> is_x64		6485654	0					
ANR	6485700	Identifier	ctx		6485654	0					
ANR	6485701	Identifier	is_x64		6485654	1					
ANR	6485702	CompoundStatement		12:18:189:189	6485654	1					
ANR	6485703	ExpressionStatement	pti = ( va >> 12 ) & 0x1ff	468:2:10468:10492	6485654	0	True				
ANR	6485704	AssignmentExpression	pti = ( va >> 12 ) & 0x1ff		6485654	0		=			
ANR	6485705	Identifier	pti		6485654	0					
ANR	6485706	BitAndExpression	( va >> 12 ) & 0x1ff		6485654	1		&			
ANR	6485707	ShiftExpression	va >> 12		6485654	0		>>			
ANR	6485708	Identifier	va		6485654	0					
ANR	6485709	PrimaryExpression	12		6485654	1					
ANR	6485710	PrimaryExpression	0x1ff		6485654	1					
ANR	6485711	ExpressionStatement	pdi = ( va >> 21 ) & 0x1ff	469:2:10496:10520	6485654	1	True				
ANR	6485712	AssignmentExpression	pdi = ( va >> 21 ) & 0x1ff		6485654	0		=			
ANR	6485713	Identifier	pdi		6485654	0					
ANR	6485714	BitAndExpression	( va >> 21 ) & 0x1ff		6485654	1		&			
ANR	6485715	ShiftExpression	va >> 21		6485654	0		>>			
ANR	6485716	Identifier	va		6485654	0					
ANR	6485717	PrimaryExpression	21		6485654	1					
ANR	6485718	PrimaryExpression	0x1ff		6485654	1					
ANR	6485719	ExpressionStatement	pdpi = ( va >> 30 ) & 0x1ff	470:2:10524:10549	6485654	2	True				
ANR	6485720	AssignmentExpression	pdpi = ( va >> 30 ) & 0x1ff		6485654	0		=			
ANR	6485721	Identifier	pdpi		6485654	0					
ANR	6485722	BitAndExpression	( va >> 30 ) & 0x1ff		6485654	1		&			
ANR	6485723	ShiftExpression	va >> 30		6485654	0		>>			
ANR	6485724	Identifier	va		6485654	0					
ANR	6485725	PrimaryExpression	30		6485654	1					
ANR	6485726	PrimaryExpression	0x1ff		6485654	1					
ANR	6485727	ExpressionStatement	pml4i = ( va >> 39 ) & 0x1ff	471:2:10553:10579	6485654	3	True				
ANR	6485728	AssignmentExpression	pml4i = ( va >> 39 ) & 0x1ff		6485654	0		=			
ANR	6485729	Identifier	pml4i		6485654	0					
ANR	6485730	BitAndExpression	( va >> 39 ) & 0x1ff		6485654	1		&			
ANR	6485731	ShiftExpression	va >> 39		6485654	0		>>			
ANR	6485732	Identifier	va		6485654	0					
ANR	6485733	PrimaryExpression	39		6485654	1					
ANR	6485734	PrimaryExpression	0x1ff		6485654	1					
ANR	6485735	ExpressionStatement	mask = 0x000000fffffff000	473:2:10647:10672	6485654	4	True				
ANR	6485736	AssignmentExpression	mask = 0x000000fffffff000		6485654	0		=			
ANR	6485737	Identifier	mask		6485654	0					
ANR	6485738	PrimaryExpression	0x000000fffffff000		6485654	1					
ANR	6485739	ElseStatement	else		6485654	0					
ANR	6485740	CompoundStatement		19:8:407:407	6485654	0					
ANR	6485741	IfStatement	if ( ctx -> pae )		6485654	0					
ANR	6485742	Condition	ctx -> pae	475:6:10690:10697	6485654	0	True				
ANR	6485743	PtrMemberAccess	ctx -> pae		6485654	0					
ANR	6485744	Identifier	ctx		6485654	0					
ANR	6485745	Identifier	pae		6485654	1					
ANR	6485746	CompoundStatement		20:16:425:425	6485654	1					
ANR	6485747	ExpressionStatement	pti = ( va >> 12 ) & 0x1ff	476:3:10705:10729	6485654	0	True				
ANR	6485748	AssignmentExpression	pti = ( va >> 12 ) & 0x1ff		6485654	0		=			
ANR	6485749	Identifier	pti		6485654	0					
ANR	6485750	BitAndExpression	( va >> 12 ) & 0x1ff		6485654	1		&			
ANR	6485751	ShiftExpression	va >> 12		6485654	0		>>			
ANR	6485752	Identifier	va		6485654	0					
ANR	6485753	PrimaryExpression	12		6485654	1					
ANR	6485754	PrimaryExpression	0x1ff		6485654	1					
ANR	6485755	ExpressionStatement	pdi = ( va >> 21 ) & 0x1ff	477:3:10734:10758	6485654	1	True				
ANR	6485756	AssignmentExpression	pdi = ( va >> 21 ) & 0x1ff		6485654	0		=			
ANR	6485757	Identifier	pdi		6485654	0					
ANR	6485758	BitAndExpression	( va >> 21 ) & 0x1ff		6485654	1		&			
ANR	6485759	ShiftExpression	va >> 21		6485654	0		>>			
ANR	6485760	Identifier	va		6485654	0					
ANR	6485761	PrimaryExpression	21		6485654	1					
ANR	6485762	PrimaryExpression	0x1ff		6485654	1					
ANR	6485763	ExpressionStatement	pdpi = ( va >> 30 ) & 0x3	478:3:10763:10786	6485654	2	True				
ANR	6485764	AssignmentExpression	pdpi = ( va >> 30 ) & 0x3		6485654	0		=			
ANR	6485765	Identifier	pdpi		6485654	0					
ANR	6485766	BitAndExpression	( va >> 30 ) & 0x3		6485654	1		&			
ANR	6485767	ShiftExpression	va >> 30		6485654	0		>>			
ANR	6485768	Identifier	va		6485654	0					
ANR	6485769	PrimaryExpression	30		6485654	1					
ANR	6485770	PrimaryExpression	0x3		6485654	1					
ANR	6485771	ExpressionStatement	pml4i = 0	479:3:10791:10800	6485654	3	True				
ANR	6485772	AssignmentExpression	pml4i = 0		6485654	0		=			
ANR	6485773	Identifier	pml4i		6485654	0					
ANR	6485774	PrimaryExpression	0		6485654	1					
ANR	6485775	ElseStatement	else		6485654	0					
ANR	6485776	CompoundStatement		25:9:536:536	6485654	0					
ANR	6485777	ExpressionStatement	pti = ( va >> 12 ) & 0x3ff	481:3:10816:10840	6485654	0	True				
ANR	6485778	AssignmentExpression	pti = ( va >> 12 ) & 0x3ff		6485654	0		=			
ANR	6485779	Identifier	pti		6485654	0					
ANR	6485780	BitAndExpression	( va >> 12 ) & 0x3ff		6485654	1		&			
ANR	6485781	ShiftExpression	va >> 12		6485654	0		>>			
ANR	6485782	Identifier	va		6485654	0					
ANR	6485783	PrimaryExpression	12		6485654	1					
ANR	6485784	PrimaryExpression	0x3ff		6485654	1					
ANR	6485785	ExpressionStatement	pdi = ( va >> 22 ) & 0x3ff	482:3:10845:10869	6485654	1	True				
ANR	6485786	AssignmentExpression	pdi = ( va >> 22 ) & 0x3ff		6485654	0		=			
ANR	6485787	Identifier	pdi		6485654	0					
ANR	6485788	BitAndExpression	( va >> 22 ) & 0x3ff		6485654	1		&			
ANR	6485789	ShiftExpression	va >> 22		6485654	0		>>			
ANR	6485790	Identifier	va		6485654	0					
ANR	6485791	PrimaryExpression	22		6485654	1					
ANR	6485792	PrimaryExpression	0x3ff		6485654	1					
ANR	6485793	ExpressionStatement	pdpi = 0	483:3:10874:10882	6485654	2	True				
ANR	6485794	AssignmentExpression	pdpi = 0		6485654	0		=			
ANR	6485795	Identifier	pdpi		6485654	0					
ANR	6485796	PrimaryExpression	0		6485654	1					
ANR	6485797	ExpressionStatement	pml4i = 0	484:3:10887:10896	6485654	3	True				
ANR	6485798	AssignmentExpression	pml4i = 0		6485654	0		=			
ANR	6485799	Identifier	pml4i		6485654	0					
ANR	6485800	PrimaryExpression	0		6485654	1					
ANR	6485801	ExpressionStatement	mask = 0xfffff000	487:2:10968:10985	6485654	1	True				
ANR	6485802	AssignmentExpression	mask = 0xfffff000		6485654	0		=			
ANR	6485803	Identifier	mask		6485654	0					
ANR	6485804	PrimaryExpression	0xfffff000		6485654	1					
ANR	6485805	ExpressionStatement	tmp = ctx -> target -> dir_base_table	490:1:10992:11025	6485654	14	True				
ANR	6485806	AssignmentExpression	tmp = ctx -> target -> dir_base_table		6485654	0		=			
ANR	6485807	Identifier	tmp		6485654	0					
ANR	6485808	PtrMemberAccess	ctx -> target -> dir_base_table		6485654	1					
ANR	6485809	PtrMemberAccess	ctx -> target		6485654	0					
ANR	6485810	Identifier	ctx		6485654	0					
ANR	6485811	Identifier	target		6485654	1					
ANR	6485812	Identifier	dir_base_table		6485654	1					
ANR	6485813	ExpressionStatement	tmp &= ~0x1f	491:1:11028:11040	6485654	15	True				
ANR	6485814	AssignmentExpression	tmp &= ~0x1f		6485654	0		&=			
ANR	6485815	Identifier	tmp		6485654	0					
ANR	6485816	Identifier	~0x1f		6485654	1					
ANR	6485817	Statement	WIND_DBG	493:1:11044:11051	6485654	16	True				
ANR	6485818	Statement	eprintf	493:10:11053:11059	6485654	17	True				
ANR	6485819	Statement	(	493:17:11060:11060	6485654	18	True				
ANR	6485820	Statement	"""CR3  : %016"""	493:18:11061:11073	6485654	19	True				
ANR	6485821	Statement	PFMT64x	493:31:11074:11080	6485654	20	True				
ANR	6485822	Statement	"""\\n"""	493:39:11082:11085	6485654	21	True				
ANR	6485823	Statement	","	493:43:11086:11086	6485654	22	True				
ANR	6485824	Statement	tmp	493:45:11088:11090	6485654	23	True				
ANR	6485825	Statement	)	493:48:11091:11091	6485654	24	True				
ANR	6485826	ExpressionStatement		493:49:11092:11092	6485654	25	True				
ANR	6485827	IfStatement	if ( ctx -> is_x64 )		6485654	26					
ANR	6485828	Condition	ctx -> is_x64	495:5:11100:11110	6485654	0	True				
ANR	6485829	PtrMemberAccess	ctx -> is_x64		6485654	0					
ANR	6485830	Identifier	ctx		6485654	0					
ANR	6485831	Identifier	is_x64		6485654	1					
ANR	6485832	CompoundStatement		40:18:838:838	6485654	1					
ANR	6485833	IfStatement	"if ( ! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pml4i * 8 , 8 ) )"		6485654	0					
ANR	6485834	Condition	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pml4i * 8 , 8 )"	497:6:11138:11201	6485654	0	True				
ANR	6485835	UnaryOperationExpression	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pml4i * 8 , 8 )"		6485654	0					
ANR	6485836	UnaryOperator	!		6485654	0					
ANR	6485837	CallExpression	"windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pml4i * 8 , 8 )"		6485654	1					
ANR	6485838	Callee	windbg_read_at_phys		6485654	0					
ANR	6485839	Identifier	windbg_read_at_phys		6485654	0					
ANR	6485840	ArgumentList	ctx		6485654	1					
ANR	6485841	Argument	ctx		6485654	0					
ANR	6485842	Identifier	ctx		6485654	0					
ANR	6485843	Argument	( uint8_t * ) & tmp		6485654	1					
ANR	6485844	CastExpression	( uint8_t * ) & tmp		6485654	0					
ANR	6485845	CastTarget	uint8_t *		6485654	0					
ANR	6485846	UnaryOperationExpression	& tmp		6485654	1					
ANR	6485847	UnaryOperator	&		6485654	0					
ANR	6485848	Identifier	tmp		6485654	1					
ANR	6485849	Argument	tmp + pml4i * 8		6485654	2					
ANR	6485850	AdditiveExpression	tmp + pml4i * 8		6485654	0		+			
ANR	6485851	Identifier	tmp		6485654	0					
ANR	6485852	MultiplicativeExpression	pml4i * 8		6485654	1		*			
ANR	6485853	Identifier	pml4i		6485654	0					
ANR	6485854	PrimaryExpression	8		6485654	1					
ANR	6485855	Argument	8		6485654	3					
ANR	6485856	PrimaryExpression	8		6485654	0					
ANR	6485857	CompoundStatement		42:72:929:929	6485654	1					
ANR	6485858	ReturnStatement	return false ;	498:3:11209:11221	6485654	0	True				
ANR	6485859	Identifier	false		6485654	0					
ANR	6485860	ExpressionStatement	tmp &= mask	500:2:11229:11240	6485654	1	True				
ANR	6485861	AssignmentExpression	tmp &= mask		6485654	0		&=			
ANR	6485862	Identifier	tmp		6485654	0					
ANR	6485863	Identifier	mask		6485654	1					
ANR	6485864	Statement	WIND_DBG	501:2:11244:11251	6485654	2	True				
ANR	6485865	Statement	eprintf	501:11:11253:11259	6485654	3	True				
ANR	6485866	Statement	(	501:18:11260:11260	6485654	4	True				
ANR	6485867	Statement	"""PML4 : %016"""	501:19:11261:11273	6485654	5	True				
ANR	6485868	Statement	PFMT64x	501:32:11274:11280	6485654	6	True				
ANR	6485869	Statement	"""\\n"""	501:40:11282:11285	6485654	7	True				
ANR	6485870	Statement	","	501:44:11286:11286	6485654	8	True				
ANR	6485871	Statement	tmp	501:46:11288:11290	6485654	9	True				
ANR	6485872	Statement	)	501:49:11291:11291	6485654	10	True				
ANR	6485873	ExpressionStatement		501:50:11292:11292	6485654	11	True				
ANR	6485874	IfStatement	if ( ctx -> pae )		6485654	27					
ANR	6485875	Condition	ctx -> pae	504:5:11303:11310	6485654	0	True				
ANR	6485876	PtrMemberAccess	ctx -> pae		6485654	0					
ANR	6485877	Identifier	ctx		6485654	0					
ANR	6485878	Identifier	pae		6485654	1					
ANR	6485879	CompoundStatement		49:15:1038:1038	6485654	1					
ANR	6485880	IfStatement	"if ( ! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdpi * 8 , 8 ) )"		6485654	0					
ANR	6485881	Condition	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdpi * 8 , 8 )"	506:6:11338:11400	6485654	0	True				
ANR	6485882	UnaryOperationExpression	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdpi * 8 , 8 )"		6485654	0					
ANR	6485883	UnaryOperator	!		6485654	0					
ANR	6485884	CallExpression	"windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdpi * 8 , 8 )"		6485654	1					
ANR	6485885	Callee	windbg_read_at_phys		6485654	0					
ANR	6485886	Identifier	windbg_read_at_phys		6485654	0					
ANR	6485887	ArgumentList	ctx		6485654	1					
ANR	6485888	Argument	ctx		6485654	0					
ANR	6485889	Identifier	ctx		6485654	0					
ANR	6485890	Argument	( uint8_t * ) & tmp		6485654	1					
ANR	6485891	CastExpression	( uint8_t * ) & tmp		6485654	0					
ANR	6485892	CastTarget	uint8_t *		6485654	0					
ANR	6485893	UnaryOperationExpression	& tmp		6485654	1					
ANR	6485894	UnaryOperator	&		6485654	0					
ANR	6485895	Identifier	tmp		6485654	1					
ANR	6485896	Argument	tmp + pdpi * 8		6485654	2					
ANR	6485897	AdditiveExpression	tmp + pdpi * 8		6485654	0		+			
ANR	6485898	Identifier	tmp		6485654	0					
ANR	6485899	MultiplicativeExpression	pdpi * 8		6485654	1		*			
ANR	6485900	Identifier	pdpi		6485654	0					
ANR	6485901	PrimaryExpression	8		6485654	1					
ANR	6485902	Argument	8		6485654	3					
ANR	6485903	PrimaryExpression	8		6485654	0					
ANR	6485904	CompoundStatement		51:71:1128:1128	6485654	1					
ANR	6485905	ReturnStatement	return false ;	507:3:11408:11420	6485654	0	True				
ANR	6485906	Identifier	false		6485654	0					
ANR	6485907	ExpressionStatement	tmp &= mask	509:2:11428:11439	6485654	1	True				
ANR	6485908	AssignmentExpression	tmp &= mask		6485654	0		&=			
ANR	6485909	Identifier	tmp		6485654	0					
ANR	6485910	Identifier	mask		6485654	1					
ANR	6485911	Statement	WIND_DBG	510:2:11443:11450	6485654	2	True				
ANR	6485912	Statement	eprintf	510:11:11452:11458	6485654	3	True				
ANR	6485913	Statement	(	510:18:11459:11459	6485654	4	True				
ANR	6485914	Statement	"""PDPE : %016"""	510:19:11460:11472	6485654	5	True				
ANR	6485915	Statement	PFMT64x	510:32:11473:11479	6485654	6	True				
ANR	6485916	Statement	"""\\n"""	510:40:11481:11484	6485654	7	True				
ANR	6485917	Statement	","	510:44:11485:11485	6485654	8	True				
ANR	6485918	Statement	tmp	510:46:11487:11489	6485654	9	True				
ANR	6485919	Statement	)	510:49:11490:11490	6485654	10	True				
ANR	6485920	ExpressionStatement		510:50:11491:11491	6485654	11	True				
ANR	6485921	IfStatement	"if ( ! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdi * ( 4 << ctx -> pae ) , 4 << ctx -> pae ) )"		6485654	28					
ANR	6485922	Condition	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdi * ( 4 << ctx -> pae ) , 4 << ctx -> pae )"	514:5:11517:11604	6485654	0	True				
ANR	6485923	UnaryOperationExpression	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdi * ( 4 << ctx -> pae ) , 4 << ctx -> pae )"		6485654	0					
ANR	6485924	UnaryOperator	!		6485654	0					
ANR	6485925	CallExpression	"windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , tmp + pdi * ( 4 << ctx -> pae ) , 4 << ctx -> pae )"		6485654	1					
ANR	6485926	Callee	windbg_read_at_phys		6485654	0					
ANR	6485927	Identifier	windbg_read_at_phys		6485654	0					
ANR	6485928	ArgumentList	ctx		6485654	1					
ANR	6485929	Argument	ctx		6485654	0					
ANR	6485930	Identifier	ctx		6485654	0					
ANR	6485931	Argument	( uint8_t * ) & tmp		6485654	1					
ANR	6485932	CastExpression	( uint8_t * ) & tmp		6485654	0					
ANR	6485933	CastTarget	uint8_t *		6485654	0					
ANR	6485934	UnaryOperationExpression	& tmp		6485654	1					
ANR	6485935	UnaryOperator	&		6485654	0					
ANR	6485936	Identifier	tmp		6485654	1					
ANR	6485937	Argument	tmp + pdi * ( 4 << ctx -> pae )		6485654	2					
ANR	6485938	AdditiveExpression	tmp + pdi * ( 4 << ctx -> pae )		6485654	0		+			
ANR	6485939	Identifier	tmp		6485654	0					
ANR	6485940	MultiplicativeExpression	pdi * ( 4 << ctx -> pae )		6485654	1		*			
ANR	6485941	Identifier	pdi		6485654	0					
ANR	6485942	ShiftExpression	4 << ctx -> pae		6485654	1		<<			
ANR	6485943	PrimaryExpression	4		6485654	0					
ANR	6485944	PtrMemberAccess	ctx -> pae		6485654	1					
ANR	6485945	Identifier	ctx		6485654	0					
ANR	6485946	Identifier	pae		6485654	1					
ANR	6485947	Argument	4 << ctx -> pae		6485654	3					
ANR	6485948	ShiftExpression	4 << ctx -> pae		6485654	0		<<			
ANR	6485949	PrimaryExpression	4		6485654	0					
ANR	6485950	PtrMemberAccess	ctx -> pae		6485654	1					
ANR	6485951	Identifier	ctx		6485654	0					
ANR	6485952	Identifier	pae		6485654	1					
ANR	6485953	CompoundStatement		59:95:1332:1332	6485654	1					
ANR	6485954	ReturnStatement	return false ;	515:2:11611:11623	6485654	0	True				
ANR	6485955	Identifier	false		6485654	0					
ANR	6485956	Statement	WIND_DBG	517:1:11629:11636	6485654	29	True				
ANR	6485957	Statement	eprintf	517:10:11638:11644	6485654	30	True				
ANR	6485958	Statement	(	517:17:11645:11645	6485654	31	True				
ANR	6485959	Statement	"""PDE  : %016"""	517:18:11646:11658	6485654	32	True				
ANR	6485960	Statement	PFMT64x	517:31:11659:11665	6485654	33	True				
ANR	6485961	Statement	"""\\n"""	517:39:11667:11670	6485654	34	True				
ANR	6485962	Statement	","	517:43:11671:11671	6485654	35	True				
ANR	6485963	Statement	tmp	517:45:11673:11675	6485654	36	True				
ANR	6485964	Statement	)	517:48:11676:11676	6485654	37	True				
ANR	6485965	ExpressionStatement		517:49:11677:11677	6485654	38	True				
ANR	6485966	IfStatement	if ( tmp & PTE_LARGEPAGE )		6485654	39					
ANR	6485967	Condition	tmp & PTE_LARGEPAGE	522:5:11837:11855	6485654	0	True				
ANR	6485968	BitAndExpression	tmp & PTE_LARGEPAGE		6485654	0		&			
ANR	6485969	Identifier	tmp		6485654	0					
ANR	6485970	Identifier	PTE_LARGEPAGE		6485654	1					
ANR	6485971	CompoundStatement		67:26:1583:1583	6485654	1					
ANR	6485972	ExpressionStatement	* pa = ctx -> pae ? ( tmp & ( ~0x1fffff ) ) | ( va & 0x1fffff ) : ( tmp & ( ~0x3fffff ) ) | ( va & 0x3fffff )	523:2:11862:11970	6485654	0	True				
ANR	6485973	AssignmentExpression	* pa = ctx -> pae ? ( tmp & ( ~0x1fffff ) ) | ( va & 0x1fffff ) : ( tmp & ( ~0x3fffff ) ) | ( va & 0x3fffff )		6485654	0		=			
ANR	6485974	UnaryOperationExpression	* pa		6485654	0					
ANR	6485975	UnaryOperator	*		6485654	0					
ANR	6485976	Identifier	pa		6485654	1					
ANR	6485977	ConditionalExpression	ctx -> pae ? ( tmp & ( ~0x1fffff ) ) | ( va & 0x1fffff ) : ( tmp & ( ~0x3fffff ) ) | ( va & 0x3fffff )		6485654	1					
ANR	6485978	Condition	ctx -> pae		6485654	0					
ANR	6485979	PtrMemberAccess	ctx -> pae		6485654	0					
ANR	6485980	Identifier	ctx		6485654	0					
ANR	6485981	Identifier	pae		6485654	1					
ANR	6485982	InclusiveOrExpression	( tmp & ( ~0x1fffff ) ) | ( va & 0x1fffff )		6485654	1		|			
ANR	6485983	BitAndExpression	tmp & ( ~0x1fffff )		6485654	0		&			
ANR	6485984	Identifier	tmp		6485654	0					
ANR	6485985	Identifier	~0x1fffff		6485654	1					
ANR	6485986	BitAndExpression	va & 0x1fffff		6485654	1		&			
ANR	6485987	Identifier	va		6485654	0					
ANR	6485988	PrimaryExpression	0x1fffff		6485654	1					
ANR	6485989	InclusiveOrExpression	( tmp & ( ~0x3fffff ) ) | ( va & 0x3fffff )		6485654	2		|			
ANR	6485990	BitAndExpression	tmp & ( ~0x3fffff )		6485654	0		&			
ANR	6485991	Identifier	tmp		6485654	0					
ANR	6485992	Identifier	~0x3fffff		6485654	1					
ANR	6485993	BitAndExpression	va & 0x3fffff		6485654	1		&			
ANR	6485994	Identifier	va		6485654	0					
ANR	6485995	PrimaryExpression	0x3fffff		6485654	1					
ANR	6485996	ReturnStatement	return true ;	526:2:11974:11985	6485654	1	True				
ANR	6485997	Identifier	true		6485654	0					
ANR	6485998	IfStatement	"if ( ! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , ( tmp & mask ) + pti * ( 4 << ctx -> pae ) , 4 << ctx -> pae ) )"		6485654	40					
ANR	6485999	Condition	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , ( tmp & mask ) + pti * ( 4 << ctx -> pae ) , 4 << ctx -> pae )"	530:5:12010:12106	6485654	0	True				
ANR	6486000	UnaryOperationExpression	"! windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , ( tmp & mask ) + pti * ( 4 << ctx -> pae ) , 4 << ctx -> pae )"		6485654	0					
ANR	6486001	UnaryOperator	!		6485654	0					
ANR	6486002	CallExpression	"windbg_read_at_phys ( ctx , ( uint8_t * ) & tmp , ( tmp & mask ) + pti * ( 4 << ctx -> pae ) , 4 << ctx -> pae )"		6485654	1					
ANR	6486003	Callee	windbg_read_at_phys		6485654	0					
ANR	6486004	Identifier	windbg_read_at_phys		6485654	0					
ANR	6486005	ArgumentList	ctx		6485654	1					
ANR	6486006	Argument	ctx		6485654	0					
ANR	6486007	Identifier	ctx		6485654	0					
ANR	6486008	Argument	( uint8_t * ) & tmp		6485654	1					
ANR	6486009	CastExpression	( uint8_t * ) & tmp		6485654	0					
ANR	6486010	CastTarget	uint8_t *		6485654	0					
ANR	6486011	UnaryOperationExpression	& tmp		6485654	1					
ANR	6486012	UnaryOperator	&		6485654	0					
ANR	6486013	Identifier	tmp		6485654	1					
ANR	6486014	Argument	( tmp & mask ) + pti * ( 4 << ctx -> pae )		6485654	2					
ANR	6486015	AdditiveExpression	( tmp & mask ) + pti * ( 4 << ctx -> pae )		6485654	0		+			
ANR	6486016	BitAndExpression	tmp & mask		6485654	0		&			
ANR	6486017	Identifier	tmp		6485654	0					
ANR	6486018	Identifier	mask		6485654	1					
ANR	6486019	MultiplicativeExpression	pti * ( 4 << ctx -> pae )		6485654	1		*			
ANR	6486020	Identifier	pti		6485654	0					
ANR	6486021	ShiftExpression	4 << ctx -> pae		6485654	1		<<			
ANR	6486022	PrimaryExpression	4		6485654	0					
ANR	6486023	PtrMemberAccess	ctx -> pae		6485654	1					
ANR	6486024	Identifier	ctx		6485654	0					
ANR	6486025	Identifier	pae		6485654	1					
ANR	6486026	Argument	4 << ctx -> pae		6485654	3					
ANR	6486027	ShiftExpression	4 << ctx -> pae		6485654	0		<<			
ANR	6486028	PrimaryExpression	4		6485654	0					
ANR	6486029	PtrMemberAccess	ctx -> pae		6485654	1					
ANR	6486030	Identifier	ctx		6485654	0					
ANR	6486031	Identifier	pae		6485654	1					
ANR	6486032	CompoundStatement		75:104:1834:1834	6485654	1					
ANR	6486033	ReturnStatement	return false ;	531:2:12113:12125	6485654	0	True				
ANR	6486034	Identifier	false		6485654	0					
ANR	6486035	Statement	WIND_DBG	533:1:12131:12138	6485654	41	True				
ANR	6486036	Statement	eprintf	533:10:12140:12146	6485654	42	True				
ANR	6486037	Statement	(	533:17:12147:12147	6485654	43	True				
ANR	6486038	Statement	"""PTE  : %016"""	533:18:12148:12160	6485654	44	True				
ANR	6486039	Statement	PFMT64x	533:31:12161:12167	6485654	45	True				
ANR	6486040	Statement	"""\\n"""	533:39:12169:12172	6485654	46	True				
ANR	6486041	Statement	","	533:43:12173:12173	6485654	47	True				
ANR	6486042	Statement	tmp	533:45:12175:12177	6485654	48	True				
ANR	6486043	Statement	)	533:48:12178:12178	6485654	49	True				
ANR	6486044	ExpressionStatement		533:49:12179:12179	6485654	50	True				
ANR	6486045	IfStatement	if ( tmp & PTE_VALID )		6485654	51					
ANR	6486046	Condition	tmp & PTE_VALID	535:5:12187:12201	6485654	0	True				
ANR	6486047	BitAndExpression	tmp & PTE_VALID		6485654	0		&			
ANR	6486048	Identifier	tmp		6485654	0					
ANR	6486049	Identifier	PTE_VALID		6485654	1					
ANR	6486050	CompoundStatement		80:22:1929:1929	6485654	1					
ANR	6486051	ExpressionStatement	* pa = ( tmp & mask ) | ( va & 0xfff )	536:2:12208:12241	6485654	0	True				
ANR	6486052	AssignmentExpression	* pa = ( tmp & mask ) | ( va & 0xfff )		6485654	0		=			
ANR	6486053	UnaryOperationExpression	* pa		6485654	0					
ANR	6486054	UnaryOperator	*		6485654	0					
ANR	6486055	Identifier	pa		6485654	1					
ANR	6486056	InclusiveOrExpression	( tmp & mask ) | ( va & 0xfff )		6485654	1		|			
ANR	6486057	BitAndExpression	tmp & mask		6485654	0		&			
ANR	6486058	Identifier	tmp		6485654	0					
ANR	6486059	Identifier	mask		6485654	1					
ANR	6486060	BitAndExpression	va & 0xfff		6485654	1		&			
ANR	6486061	Identifier	va		6485654	0					
ANR	6486062	PrimaryExpression	0xfff		6485654	1					
ANR	6486063	ReturnStatement	return true ;	537:2:12245:12256	6485654	1	True				
ANR	6486064	Identifier	true		6485654	0					
ANR	6486065	IfStatement	if ( tmp & PTE_PROTOTYPE )		6485654	52					
ANR	6486066	Condition	tmp & PTE_PROTOTYPE	540:5:12267:12285	6485654	0	True				
ANR	6486067	BitAndExpression	tmp & PTE_PROTOTYPE		6485654	0		&			
ANR	6486068	Identifier	tmp		6485654	0					
ANR	6486069	Identifier	PTE_PROTOTYPE		6485654	1					
ANR	6486070	CompoundStatement		85:26:2013:2013	6485654	1					
ANR	6486071	ExpressionStatement	"eprintf ( ""Prototype PTE lookup is currently missing!\\n"" )"	542:2:12326:12382	6485654	0	True				
ANR	6486072	CallExpression	"eprintf ( ""Prototype PTE lookup is currently missing!\\n"" )"		6485654	0					
ANR	6486073	Callee	eprintf		6485654	0					
ANR	6486074	Identifier	eprintf		6485654	0					
ANR	6486075	ArgumentList	"""Prototype PTE lookup is currently missing!\\n"""		6485654	1					
ANR	6486076	Argument	"""Prototype PTE lookup is currently missing!\\n"""		6485654	0					
ANR	6486077	PrimaryExpression	"""Prototype PTE lookup is currently missing!\\n"""		6485654	0					
ANR	6486078	ReturnStatement	return false ;	545:1:12389:12401	6485654	53	True				
ANR	6486079	Identifier	false		6485654	0					
ANR	6486080	ReturnType	bool		6485654	1					
ANR	6486081	Identifier	windbg_va_to_pa		6485654	2					
ANR	6486082	ParameterList	"WindCtx * ctx , ut64 va , ut64 * pa"		6485654	3					
ANR	6486083	Parameter	WindCtx * ctx	456:21:10241:10252	6485654	0	True				
ANR	6486084	ParameterType	WindCtx *		6485654	0					
ANR	6486085	Identifier	ctx		6485654	1					
ANR	6486086	Parameter	ut64 va	456:35:10255:10261	6485654	1	True				
ANR	6486087	ParameterType	ut64		6485654	0					
ANR	6486088	Identifier	va		6485654	1					
ANR	6486089	Parameter	ut64 * pa	456:44:10264:10271	6485654	2	True				
ANR	6486090	ParameterType	ut64 *		6485654	0					
ANR	6486091	Identifier	pa		6485654	1					
ANR	6486092	CFGEntryNode	ENTRY		6485654		True				
ANR	6486093	CFGExitNode	EXIT		6485654		True				
ANR	6486094	Symbol	ctx -> target		6485654						
ANR	6486095	Symbol	windbg_read_at_phys		6485654						
ANR	6486096	Symbol	PTE_PROTOTYPE		6485654						
ANR	6486097	Symbol	PTE_VALID		6485654						
ANR	6486098	Symbol	tmp		6485654						
ANR	6486099	Symbol	pdpi		6485654						
ANR	6486100	Symbol	pml4i		6485654						
ANR	6486101	Symbol	PTE_LARGEPAGE		6485654						
ANR	6486102	Symbol	~0x1f		6485654						
ANR	6486103	Symbol	mask		6485654						
ANR	6486104	Symbol	pti		6485654						
ANR	6486105	Symbol	ctx -> is_x64		6485654						
ANR	6486106	Symbol	ctx		6485654						
ANR	6486107	Symbol	~0x1fffff		6485654						
ANR	6486108	Symbol	false		6485654						
ANR	6486109	Symbol	* ctx -> target		6485654						
ANR	6486110	Symbol	va		6485654						
ANR	6486111	Symbol	* ctx		6485654						
ANR	6486112	Symbol	pa		6485654						
ANR	6486113	Symbol	pdi		6485654						
ANR	6486114	Symbol	* pa		6485654						
ANR	6486115	Symbol	ctx -> target -> dir_base_table		6485654						
ANR	6486116	Symbol	true		6485654						
ANR	6486117	Symbol	& tmp		6485654						
ANR	6486118	Symbol	* * ctx		6485654						
ANR	6486119	Symbol	~0x3fffff		6485654						
ANR	6486120	Symbol	ctx -> pae		6485654						
ANR	6486121	Function	windbg_read_ver	548:0:12406:14887							
ANR	6486122	FunctionDef	windbg_read_ver (WindCtx * ctx)		6486121	0					
ANR	6486123	CompoundStatement		548:35:12441:14887	6486121	0					
ANR	6486124	IdentifierDeclStatement	kd_req_t req = { 0 } ;	549:1:12444:12467	6486121	0	True				
ANR	6486125	IdentifierDecl	req = { 0 }		6486121	0					
ANR	6486126	IdentifierDeclType	kd_req_t		6486121	0					
ANR	6486127	Identifier	req		6486121	1					
ANR	6486128	AssignmentExpression	req = { 0 }		6486121	2		=			
ANR	6486129	Identifier	req		6486121	0					
ANR	6486130	InitializerList	0		6486121	1					
ANR	6486131	PrimaryExpression	0		6486121	0					
ANR	6486132	IdentifierDeclStatement	kd_packet_t * pkt ;	552:1:12470:12486	6486121	1	True				
ANR	6486133	IdentifierDecl	* pkt		6486121	0					
ANR	6486134	IdentifierDeclType	kd_packet_t *		6486121	0					
ANR	6486135	Identifier	pkt		6486121	1					
ANR	6486136	IdentifierDeclStatement	int ret ;	553:1:12489:12496	6486121	2	True				
ANR	6486137	IdentifierDecl	ret		6486121	0					
ANR	6486138	IdentifierDeclType	int		6486121	0					
ANR	6486139	Identifier	ret		6486121	1					
ANR	6486140	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6486121	3					
ANR	6486141	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	555:5:12504:12538	6486121	0	True				
ANR	6486142	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6486121	0		||			
ANR	6486143	UnaryOperationExpression	! ctx		6486121	0					
ANR	6486144	UnaryOperator	!		6486121	0					
ANR	6486145	Identifier	ctx		6486121	1					
ANR	6486146	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6486121	1		||			
ANR	6486147	UnaryOperationExpression	! ctx -> io_ptr		6486121	0					
ANR	6486148	UnaryOperator	!		6486121	0					
ANR	6486149	PtrMemberAccess	ctx -> io_ptr		6486121	1					
ANR	6486150	Identifier	ctx		6486121	0					
ANR	6486151	Identifier	io_ptr		6486121	1					
ANR	6486152	UnaryOperationExpression	! ctx -> syncd		6486121	1					
ANR	6486153	UnaryOperator	!		6486121	0					
ANR	6486154	PtrMemberAccess	ctx -> syncd		6486121	1					
ANR	6486155	Identifier	ctx		6486121	0					
ANR	6486156	Identifier	syncd		6486121	1					
ANR	6486157	CompoundStatement		8:42:99:99	6486121	1					
ANR	6486158	ReturnStatement	return false ;	556:2:12545:12557	6486121	0	True				
ANR	6486159	Identifier	false		6486121	0					
ANR	6486160	ExpressionStatement	req . req = 0x3146	559:1:12564:12580	6486121	4	True				
ANR	6486161	AssignmentExpression	req . req = 0x3146		6486121	0		=			
ANR	6486162	MemberAccess	req . req		6486121	0					
ANR	6486163	Identifier	req		6486121	0					
ANR	6486164	Identifier	req		6486121	1					
ANR	6486165	PrimaryExpression	0x3146		6486121	1					
ANR	6486166	ExpressionStatement	req . cpu = ctx -> cpu	560:1:12583:12601	6486121	5	True				
ANR	6486167	AssignmentExpression	req . cpu = ctx -> cpu		6486121	0		=			
ANR	6486168	MemberAccess	req . cpu		6486121	0					
ANR	6486169	Identifier	req		6486121	0					
ANR	6486170	Identifier	cpu		6486121	1					
ANR	6486171	PtrMemberAccess	ctx -> cpu		6486121	1					
ANR	6486172	Identifier	ctx		6486121	0					
ANR	6486173	Identifier	cpu		6486121	1					
ANR	6486174	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	562:1:12605:12744	6486121	6	True				
ANR	6486175	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6486121	0		=			
ANR	6486176	Identifier	ret		6486121	0					
ANR	6486177	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6486121	1					
ANR	6486178	Callee	kd_send_data_packet		6486121	0					
ANR	6486179	Identifier	kd_send_data_packet		6486121	0					
ANR	6486180	ArgumentList	ctx -> io_ptr		6486121	1					
ANR	6486181	Argument	ctx -> io_ptr		6486121	0					
ANR	6486182	PtrMemberAccess	ctx -> io_ptr		6486121	0					
ANR	6486183	Identifier	ctx		6486121	0					
ANR	6486184	Identifier	io_ptr		6486121	1					
ANR	6486185	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6486121	1					
ANR	6486186	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6486121	0					
ANR	6486187	Argument	ctx -> seq_id ^= 1		6486121	2					
ANR	6486188	AssignmentExpression	ctx -> seq_id ^= 1		6486121	0		^=			
ANR	6486189	PtrMemberAccess	ctx -> seq_id		6486121	0					
ANR	6486190	Identifier	ctx		6486121	0					
ANR	6486191	Identifier	seq_id		6486121	1					
ANR	6486192	PrimaryExpression	1		6486121	1					
ANR	6486193	Argument	( uint8_t * ) & req		6486121	3					
ANR	6486194	CastExpression	( uint8_t * ) & req		6486121	0					
ANR	6486195	CastTarget	uint8_t *		6486121	0					
ANR	6486196	UnaryOperationExpression	& req		6486121	1					
ANR	6486197	UnaryOperator	&		6486121	0					
ANR	6486198	Identifier	req		6486121	1					
ANR	6486199	Argument	sizeof ( kd_req_t )		6486121	4					
ANR	6486200	SizeofExpression	sizeof ( kd_req_t )		6486121	0					
ANR	6486201	Sizeof	sizeof		6486121	0					
ANR	6486202	SizeofOperand	kd_req_t		6486121	1					
ANR	6486203	Argument	NULL		6486121	5					
ANR	6486204	Identifier	NULL		6486121	0					
ANR	6486205	Argument	0		6486121	6					
ANR	6486206	PrimaryExpression	0		6486121	0					
ANR	6486207	IfStatement	if ( ret != KD_E_OK )		6486121	7					
ANR	6486208	Condition	ret != KD_E_OK	564:5:12751:12764	6486121	0	True				
ANR	6486209	EqualityExpression	ret != KD_E_OK		6486121	0		!=			
ANR	6486210	Identifier	ret		6486121	0					
ANR	6486211	Identifier	KD_E_OK		6486121	1					
ANR	6486212	CompoundStatement		17:21:325:325	6486121	1					
ANR	6486213	ReturnStatement	return 0 ;	565:2:12771:12779	6486121	0	True				
ANR	6486214	PrimaryExpression	0		6486121	0					
ANR	6486215	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	568:1:12786:12850	6486121	8	True				
ANR	6486216	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6486121	0		=			
ANR	6486217	Identifier	ret		6486121	0					
ANR	6486218	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6486121	1					
ANR	6486219	Callee	windbg_wait_packet		6486121	0					
ANR	6486220	Identifier	windbg_wait_packet		6486121	0					
ANR	6486221	ArgumentList	ctx		6486121	1					
ANR	6486222	Argument	ctx		6486121	0					
ANR	6486223	Identifier	ctx		6486121	0					
ANR	6486224	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6486121	1					
ANR	6486225	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6486121	0					
ANR	6486226	Argument	NULL		6486121	2					
ANR	6486227	Identifier	NULL		6486121	0					
ANR	6486228	IfStatement	if ( ret != KD_E_OK )		6486121	9					
ANR	6486229	Condition	ret != KD_E_OK	569:5:12857:12870	6486121	0	True				
ANR	6486230	EqualityExpression	ret != KD_E_OK		6486121	0		!=			
ANR	6486231	Identifier	ret		6486121	0					
ANR	6486232	Identifier	KD_E_OK		6486121	1					
ANR	6486233	CompoundStatement		22:21:431:431	6486121	1					
ANR	6486234	ReturnStatement	return 0 ;	570:2:12877:12885	6486121	0	True				
ANR	6486235	PrimaryExpression	0		6486121	0					
ANR	6486236	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	573:1:12892:12961	6486121	10	True				
ANR	6486237	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6486121	0		=			
ANR	6486238	Identifier	ret		6486121	0					
ANR	6486239	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6486121	1					
ANR	6486240	Callee	windbg_wait_packet		6486121	0					
ANR	6486241	Identifier	windbg_wait_packet		6486121	0					
ANR	6486242	ArgumentList	ctx		6486121	1					
ANR	6486243	Argument	ctx		6486121	0					
ANR	6486244	Identifier	ctx		6486121	0					
ANR	6486245	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6486121	1					
ANR	6486246	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6486121	0					
ANR	6486247	Argument	& pkt		6486121	2					
ANR	6486248	UnaryOperationExpression	& pkt		6486121	0					
ANR	6486249	UnaryOperator	&		6486121	0					
ANR	6486250	Identifier	pkt		6486121	1					
ANR	6486251	IfStatement	if ( ret != KD_E_OK )		6486121	11					
ANR	6486252	Condition	ret != KD_E_OK	574:5:12968:12981	6486121	0	True				
ANR	6486253	EqualityExpression	ret != KD_E_OK		6486121	0		!=			
ANR	6486254	Identifier	ret		6486121	0					
ANR	6486255	Identifier	KD_E_OK		6486121	1					
ANR	6486256	CompoundStatement		27:21:542:542	6486121	1					
ANR	6486257	ReturnStatement	return 0 ;	575:2:12988:12996	6486121	0	True				
ANR	6486258	PrimaryExpression	0		6486121	0					
ANR	6486259	IdentifierDeclStatement	kd_req_t * rr = PKT_REQ ( pkt ) ;	578:1:13003:13031	6486121	12	True				
ANR	6486260	IdentifierDecl	* rr = PKT_REQ ( pkt )		6486121	0					
ANR	6486261	IdentifierDeclType	kd_req_t *		6486121	0					
ANR	6486262	Identifier	rr		6486121	1					
ANR	6486263	AssignmentExpression	* rr = PKT_REQ ( pkt )		6486121	2		=			
ANR	6486264	Identifier	rr		6486121	0					
ANR	6486265	CallExpression	PKT_REQ ( pkt )		6486121	1					
ANR	6486266	Callee	PKT_REQ		6486121	0					
ANR	6486267	Identifier	PKT_REQ		6486121	0					
ANR	6486268	ArgumentList	pkt		6486121	1					
ANR	6486269	Argument	pkt		6486121	0					
ANR	6486270	Identifier	pkt		6486121	0					
ANR	6486271	IfStatement	if ( rr -> ret )		6486121	13					
ANR	6486272	Condition	rr -> ret	580:5:13039:13045	6486121	0	True				
ANR	6486273	PtrMemberAccess	rr -> ret		6486121	0					
ANR	6486274	Identifier	rr		6486121	0					
ANR	6486275	Identifier	ret		6486121	1					
ANR	6486276	CompoundStatement		34:2:610:677	6486121	1					
ANR	6486277	IdentifierDeclStatement	"WIND_DBG eprintf ( ""%s : req returned %08x\\n"" , __FUNCTION__ , rr -> ret ) ;"	581:2:13052:13119	6486121	0	True				
ANR	6486278	IdentifierDecl	"eprintf ( ""%s : req returned %08x\\n"" , __FUNCTION__ , rr -> ret )"		6486121	0					
ANR	6486279	IdentifierDeclType	WIND_DBG		6486121	0					
ANR	6486280	Identifier	eprintf		6486121	1					
ANR	6486281	Expression	"""%s : req returned %08x\\n"" , __FUNCTION__ , rr -> ret"		6486121	2					
ANR	6486282	PrimaryExpression	"""%s : req returned %08x\\n"""		6486121	0					
ANR	6486283	Expression	"__FUNCTION__ , rr -> ret"		6486121	1					
ANR	6486284	Identifier	__FUNCTION__		6486121	0					
ANR	6486285	PtrMemberAccess	rr -> ret		6486121	1					
ANR	6486286	Identifier	rr		6486121	0					
ANR	6486287	Identifier	ret		6486121	1					
ANR	6486288	ExpressionStatement	free ( pkt )	582:2:13123:13133	6486121	1	True				
ANR	6486289	CallExpression	free ( pkt )		6486121	0					
ANR	6486290	Callee	free		6486121	0					
ANR	6486291	Identifier	free		6486121	0					
ANR	6486292	ArgumentList	pkt		6486121	1					
ANR	6486293	Argument	pkt		6486121	0					
ANR	6486294	Identifier	pkt		6486121	0					
ANR	6486295	ReturnStatement	return 0 ;	583:2:13137:13145	6486121	2	True				
ANR	6486296	PrimaryExpression	0		6486121	0					
ANR	6486297	Statement	WIND_DBG	586:1:13152:13159	6486121	14	True				
ANR	6486298	CompoundStatement		39:10:719:719	6486121	15					
ANR	6486299	ExpressionStatement	"eprintf ( ""Major : %i Minor %i\\n"" , rr -> r_ver . major , rr -> r_ver . minor )"	587:2:13165:13232	6486121	0	True				
ANR	6486300	CallExpression	"eprintf ( ""Major : %i Minor %i\\n"" , rr -> r_ver . major , rr -> r_ver . minor )"		6486121	0					
ANR	6486301	Callee	eprintf		6486121	0					
ANR	6486302	Identifier	eprintf		6486121	0					
ANR	6486303	ArgumentList	"""Major : %i Minor %i\\n"""		6486121	1					
ANR	6486304	Argument	"""Major : %i Minor %i\\n"""		6486121	0					
ANR	6486305	PrimaryExpression	"""Major : %i Minor %i\\n"""		6486121	0					
ANR	6486306	Argument	rr -> r_ver . major		6486121	1					
ANR	6486307	MemberAccess	rr -> r_ver . major		6486121	0					
ANR	6486308	PtrMemberAccess	rr -> r_ver		6486121	0					
ANR	6486309	Identifier	rr		6486121	0					
ANR	6486310	Identifier	r_ver		6486121	1					
ANR	6486311	Identifier	major		6486121	1					
ANR	6486312	Argument	rr -> r_ver . minor		6486121	2					
ANR	6486313	MemberAccess	rr -> r_ver . minor		6486121	0					
ANR	6486314	PtrMemberAccess	rr -> r_ver		6486121	0					
ANR	6486315	Identifier	rr		6486121	0					
ANR	6486316	Identifier	r_ver		6486121	1					
ANR	6486317	Identifier	minor		6486121	1					
ANR	6486318	ExpressionStatement	"eprintf ( ""Protocol version : %i.%i\\n"" , rr -> r_ver . proto_major , rr -> r_ver . proto_minor )"	588:2:13236:13320	6486121	1	True				
ANR	6486319	CallExpression	"eprintf ( ""Protocol version : %i.%i\\n"" , rr -> r_ver . proto_major , rr -> r_ver . proto_minor )"		6486121	0					
ANR	6486320	Callee	eprintf		6486121	0					
ANR	6486321	Identifier	eprintf		6486121	0					
ANR	6486322	ArgumentList	"""Protocol version : %i.%i\\n"""		6486121	1					
ANR	6486323	Argument	"""Protocol version : %i.%i\\n"""		6486121	0					
ANR	6486324	PrimaryExpression	"""Protocol version : %i.%i\\n"""		6486121	0					
ANR	6486325	Argument	rr -> r_ver . proto_major		6486121	1					
ANR	6486326	MemberAccess	rr -> r_ver . proto_major		6486121	0					
ANR	6486327	PtrMemberAccess	rr -> r_ver		6486121	0					
ANR	6486328	Identifier	rr		6486121	0					
ANR	6486329	Identifier	r_ver		6486121	1					
ANR	6486330	Identifier	proto_major		6486121	1					
ANR	6486331	Argument	rr -> r_ver . proto_minor		6486121	2					
ANR	6486332	MemberAccess	rr -> r_ver . proto_minor		6486121	0					
ANR	6486333	PtrMemberAccess	rr -> r_ver		6486121	0					
ANR	6486334	Identifier	rr		6486121	0					
ANR	6486335	Identifier	r_ver		6486121	1					
ANR	6486336	Identifier	proto_minor		6486121	1					
ANR	6486337	ExpressionStatement	"eprintf ( ""Flags : %08x\\n"" , rr -> r_ver . flags )"	589:2:13324:13367	6486121	2	True				
ANR	6486338	CallExpression	"eprintf ( ""Flags : %08x\\n"" , rr -> r_ver . flags )"		6486121	0					
ANR	6486339	Callee	eprintf		6486121	0					
ANR	6486340	Identifier	eprintf		6486121	0					
ANR	6486341	ArgumentList	"""Flags : %08x\\n"""		6486121	1					
ANR	6486342	Argument	"""Flags : %08x\\n"""		6486121	0					
ANR	6486343	PrimaryExpression	"""Flags : %08x\\n"""		6486121	0					
ANR	6486344	Argument	rr -> r_ver . flags		6486121	1					
ANR	6486345	MemberAccess	rr -> r_ver . flags		6486121	0					
ANR	6486346	PtrMemberAccess	rr -> r_ver		6486121	0					
ANR	6486347	Identifier	rr		6486121	0					
ANR	6486348	Identifier	r_ver		6486121	1					
ANR	6486349	Identifier	flags		6486121	1					
ANR	6486350	ExpressionStatement	"eprintf ( ""Machine : %08x\\n"" , rr -> r_ver . machine )"	590:2:13371:13418	6486121	3	True				
ANR	6486351	CallExpression	"eprintf ( ""Machine : %08x\\n"" , rr -> r_ver . machine )"		6486121	0					
ANR	6486352	Callee	eprintf		6486121	0					
ANR	6486353	Identifier	eprintf		6486121	0					
ANR	6486354	ArgumentList	"""Machine : %08x\\n"""		6486121	1					
ANR	6486355	Argument	"""Machine : %08x\\n"""		6486121	0					
ANR	6486356	PrimaryExpression	"""Machine : %08x\\n"""		6486121	0					
ANR	6486357	Argument	rr -> r_ver . machine		6486121	1					
ANR	6486358	MemberAccess	rr -> r_ver . machine		6486121	0					
ANR	6486359	PtrMemberAccess	rr -> r_ver		6486121	0					
ANR	6486360	Identifier	rr		6486121	0					
ANR	6486361	Identifier	r_ver		6486121	1					
ANR	6486362	Identifier	machine		6486121	1					
ANR	6486363	Statement	eprintf	591:2:13422:13428	6486121	4	True				
ANR	6486364	Statement	(	591:10:13430:13430	6486121	5	True				
ANR	6486365	Statement	"""Module list : %016"""	591:11:13431:13450	6486121	6	True				
ANR	6486366	Statement	PFMT64x	591:31:13451:13457	6486121	7	True				
ANR	6486367	Statement	"""\\n"""	591:39:13459:13462	6486121	8	True				
ANR	6486368	Statement	","	591:43:13463:13463	6486121	9	True				
ANR	6486369	Statement	(	591:45:13465:13465	6486121	10	True				
ANR	6486370	Statement	ut64	591:46:13466:13469	6486121	11	True				
ANR	6486371	Statement	)	591:50:13470:13470	6486121	12	True				
ANR	6486372	Statement	rr	591:52:13472:13473	6486121	13	True				
ANR	6486373	Statement	->	591:54:13474:13475	6486121	14	True				
ANR	6486374	Statement	r_ver	591:56:13476:13480	6486121	15	True				
ANR	6486375	Statement	.	591:61:13481:13481	6486121	16	True				
ANR	6486376	Statement	mod_addr	591:62:13482:13489	6486121	17	True				
ANR	6486377	Statement	)	591:70:13490:13490	6486121	18	True				
ANR	6486378	ExpressionStatement		591:71:13491:13491	6486121	19	True				
ANR	6486379	Statement	eprintf	592:2:13495:13501	6486121	20	True				
ANR	6486380	Statement	(	592:10:13503:13503	6486121	21	True				
ANR	6486381	Statement	"""Debug block : %016"""	592:11:13504:13523	6486121	22	True				
ANR	6486382	Statement	PFMT64x	592:31:13524:13530	6486121	23	True				
ANR	6486383	Statement	"""\\n"""	592:39:13532:13535	6486121	24	True				
ANR	6486384	Statement	","	592:43:13536:13536	6486121	25	True				
ANR	6486385	Statement	(	592:45:13538:13538	6486121	26	True				
ANR	6486386	Statement	ut64	592:46:13539:13542	6486121	27	True				
ANR	6486387	Statement	)	592:50:13543:13543	6486121	28	True				
ANR	6486388	Statement	rr	592:52:13545:13546	6486121	29	True				
ANR	6486389	Statement	->	592:54:13547:13548	6486121	30	True				
ANR	6486390	Statement	r_ver	592:56:13549:13553	6486121	31	True				
ANR	6486391	Statement	.	592:61:13554:13554	6486121	32	True				
ANR	6486392	Statement	dbg_addr	592:62:13555:13562	6486121	33	True				
ANR	6486393	Statement	)	592:70:13563:13563	6486121	34	True				
ANR	6486394	ExpressionStatement		592:71:13564:13564	6486121	35	True				
ANR	6486395	IfStatement	if ( rr -> r_ver . machine != KD_MACH_I386 && rr -> r_ver . machine != KD_MACH_AMD64 )		6486121	16					
ANR	6486396	Condition	rr -> r_ver . machine != KD_MACH_I386 && rr -> r_ver . machine != KD_MACH_AMD64	595:5:13575:13645	6486121	0	True				
ANR	6486397	AndExpression	rr -> r_ver . machine != KD_MACH_I386 && rr -> r_ver . machine != KD_MACH_AMD64		6486121	0		&&			
ANR	6486398	EqualityExpression	rr -> r_ver . machine != KD_MACH_I386		6486121	0		!=			
ANR	6486399	MemberAccess	rr -> r_ver . machine		6486121	0					
ANR	6486400	PtrMemberAccess	rr -> r_ver		6486121	0					
ANR	6486401	Identifier	rr		6486121	0					
ANR	6486402	Identifier	r_ver		6486121	1					
ANR	6486403	Identifier	machine		6486121	1					
ANR	6486404	Identifier	KD_MACH_I386		6486121	1					
ANR	6486405	EqualityExpression	rr -> r_ver . machine != KD_MACH_AMD64		6486121	1		!=			
ANR	6486406	MemberAccess	rr -> r_ver . machine		6486121	0					
ANR	6486407	PtrMemberAccess	rr -> r_ver		6486121	0					
ANR	6486408	Identifier	rr		6486121	0					
ANR	6486409	Identifier	r_ver		6486121	1					
ANR	6486410	Identifier	machine		6486121	1					
ANR	6486411	Identifier	KD_MACH_AMD64		6486121	1					
ANR	6486412	CompoundStatement		48:78:1206:1206	6486121	1					
ANR	6486413	ExpressionStatement	"eprintf ( ""Unsupported target host\\n"" )"	596:2:13652:13689	6486121	0	True				
ANR	6486414	CallExpression	"eprintf ( ""Unsupported target host\\n"" )"		6486121	0					
ANR	6486415	Callee	eprintf		6486121	0					
ANR	6486416	Identifier	eprintf		6486121	0					
ANR	6486417	ArgumentList	"""Unsupported target host\\n"""		6486121	1					
ANR	6486418	Argument	"""Unsupported target host\\n"""		6486121	0					
ANR	6486419	PrimaryExpression	"""Unsupported target host\\n"""		6486121	0					
ANR	6486420	ExpressionStatement	free ( pkt )	597:2:13693:13703	6486121	1	True				
ANR	6486421	CallExpression	free ( pkt )		6486121	0					
ANR	6486422	Callee	free		6486121	0					
ANR	6486423	Identifier	free		6486121	0					
ANR	6486424	ArgumentList	pkt		6486121	1					
ANR	6486425	Argument	pkt		6486121	0					
ANR	6486426	Identifier	pkt		6486121	0					
ANR	6486427	ReturnStatement	return 0 ;	598:2:13707:13715	6486121	2	True				
ANR	6486428	PrimaryExpression	0		6486121	0					
ANR	6486429	IfStatement	if ( ! ( rr -> r_ver . flags & DBGKD_VERS_FLAG_DATA ) )		6486121	17					
ANR	6486430	Condition	! ( rr -> r_ver . flags & DBGKD_VERS_FLAG_DATA )	601:5:13726:13766	6486121	0	True				
ANR	6486431	UnaryOperationExpression	! ( rr -> r_ver . flags & DBGKD_VERS_FLAG_DATA )		6486121	0					
ANR	6486432	UnaryOperator	!		6486121	0					
ANR	6486433	BitAndExpression	rr -> r_ver . flags & DBGKD_VERS_FLAG_DATA		6486121	1		&			
ANR	6486434	MemberAccess	rr -> r_ver . flags		6486121	0					
ANR	6486435	PtrMemberAccess	rr -> r_ver		6486121	0					
ANR	6486436	Identifier	rr		6486121	0					
ANR	6486437	Identifier	r_ver		6486121	1					
ANR	6486438	Identifier	flags		6486121	1					
ANR	6486439	Identifier	DBGKD_VERS_FLAG_DATA		6486121	1					
ANR	6486440	CompoundStatement		54:48:1327:1327	6486121	1					
ANR	6486441	ExpressionStatement	"eprintf ( ""No _KDDEBUGGER_DATA64 pointer has been supplied by the debugee!\\n"" )"	602:2:13773:13850	6486121	0	True				
ANR	6486442	CallExpression	"eprintf ( ""No _KDDEBUGGER_DATA64 pointer has been supplied by the debugee!\\n"" )"		6486121	0					
ANR	6486443	Callee	eprintf		6486121	0					
ANR	6486444	Identifier	eprintf		6486121	0					
ANR	6486445	ArgumentList	"""No _KDDEBUGGER_DATA64 pointer has been supplied by the debugee!\\n"""		6486121	1					
ANR	6486446	Argument	"""No _KDDEBUGGER_DATA64 pointer has been supplied by the debugee!\\n"""		6486121	0					
ANR	6486447	PrimaryExpression	"""No _KDDEBUGGER_DATA64 pointer has been supplied by the debugee!\\n"""		6486121	0					
ANR	6486448	ExpressionStatement	free ( pkt )	603:2:13854:13864	6486121	1	True				
ANR	6486449	CallExpression	free ( pkt )		6486121	0					
ANR	6486450	Callee	free		6486121	0					
ANR	6486451	Identifier	free		6486121	0					
ANR	6486452	ArgumentList	pkt		6486121	1					
ANR	6486453	Argument	pkt		6486121	0					
ANR	6486454	Identifier	pkt		6486121	0					
ANR	6486455	ReturnStatement	return 0 ;	604:2:13868:13876	6486121	2	True				
ANR	6486456	PrimaryExpression	0		6486121	0					
ANR	6486457	ExpressionStatement	ctx -> is_x64 = ( rr -> r_ver . machine == KD_MACH_AMD64 )	607:1:13883:13933	6486121	18	True				
ANR	6486458	AssignmentExpression	ctx -> is_x64 = ( rr -> r_ver . machine == KD_MACH_AMD64 )		6486121	0		=			
ANR	6486459	PtrMemberAccess	ctx -> is_x64		6486121	0					
ANR	6486460	Identifier	ctx		6486121	0					
ANR	6486461	Identifier	is_x64		6486121	1					
ANR	6486462	EqualityExpression	rr -> r_ver . machine == KD_MACH_AMD64		6486121	1		==			
ANR	6486463	MemberAccess	rr -> r_ver . machine		6486121	0					
ANR	6486464	PtrMemberAccess	rr -> r_ver		6486121	0					
ANR	6486465	Identifier	rr		6486121	0					
ANR	6486466	Identifier	r_ver		6486121	1					
ANR	6486467	Identifier	machine		6486121	1					
ANR	6486468	Identifier	KD_MACH_AMD64		6486121	1					
ANR	6486469	IdentifierDeclStatement	ut64 ptr = 0 ;	609:1:13937:13949	6486121	19	True				
ANR	6486470	IdentifierDecl	ptr = 0		6486121	0					
ANR	6486471	IdentifierDeclType	ut64		6486121	0					
ANR	6486472	Identifier	ptr		6486121	1					
ANR	6486473	AssignmentExpression	ptr = 0		6486121	2		=			
ANR	6486474	Identifier	ptr		6486121	0					
ANR	6486475	PrimaryExpression	0		6486121	1					
ANR	6486476	IfStatement	"if ( ! windbg_read_at ( ctx , ( uint8_t * ) & ptr , rr -> r_ver . dbg_addr , 4 << ctx -> is_x64 ) )"		6486121	20					
ANR	6486477	Condition	"! windbg_read_at ( ctx , ( uint8_t * ) & ptr , rr -> r_ver . dbg_addr , 4 << ctx -> is_x64 )"	610:5:13956:14032	6486121	0	True				
ANR	6486478	UnaryOperationExpression	"! windbg_read_at ( ctx , ( uint8_t * ) & ptr , rr -> r_ver . dbg_addr , 4 << ctx -> is_x64 )"		6486121	0					
ANR	6486479	UnaryOperator	!		6486121	0					
ANR	6486480	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , rr -> r_ver . dbg_addr , 4 << ctx -> is_x64 )"		6486121	1					
ANR	6486481	Callee	windbg_read_at		6486121	0					
ANR	6486482	Identifier	windbg_read_at		6486121	0					
ANR	6486483	ArgumentList	ctx		6486121	1					
ANR	6486484	Argument	ctx		6486121	0					
ANR	6486485	Identifier	ctx		6486121	0					
ANR	6486486	Argument	( uint8_t * ) & ptr		6486121	1					
ANR	6486487	CastExpression	( uint8_t * ) & ptr		6486121	0					
ANR	6486488	CastTarget	uint8_t *		6486121	0					
ANR	6486489	UnaryOperationExpression	& ptr		6486121	1					
ANR	6486490	UnaryOperator	&		6486121	0					
ANR	6486491	Identifier	ptr		6486121	1					
ANR	6486492	Argument	rr -> r_ver . dbg_addr		6486121	2					
ANR	6486493	MemberAccess	rr -> r_ver . dbg_addr		6486121	0					
ANR	6486494	PtrMemberAccess	rr -> r_ver		6486121	0					
ANR	6486495	Identifier	rr		6486121	0					
ANR	6486496	Identifier	r_ver		6486121	1					
ANR	6486497	Identifier	dbg_addr		6486121	1					
ANR	6486498	Argument	4 << ctx -> is_x64		6486121	3					
ANR	6486499	ShiftExpression	4 << ctx -> is_x64		6486121	0		<<			
ANR	6486500	PrimaryExpression	4		6486121	0					
ANR	6486501	PtrMemberAccess	ctx -> is_x64		6486121	1					
ANR	6486502	Identifier	ctx		6486121	0					
ANR	6486503	Identifier	is_x64		6486121	1					
ANR	6486504	CompoundStatement		63:84:1593:1593	6486121	1					
ANR	6486505	ExpressionStatement	free ( pkt )	611:2:14039:14049	6486121	0	True				
ANR	6486506	CallExpression	free ( pkt )		6486121	0					
ANR	6486507	Callee	free		6486121	0					
ANR	6486508	Identifier	free		6486121	0					
ANR	6486509	ArgumentList	pkt		6486121	1					
ANR	6486510	Argument	pkt		6486121	0					
ANR	6486511	Identifier	pkt		6486121	0					
ANR	6486512	ReturnStatement	return false ;	612:2:14053:14065	6486121	1	True				
ANR	6486513	Identifier	false		6486121	0					
ANR	6486514	ExpressionStatement	ctx -> dbg_addr = ptr	615:1:14072:14091	6486121	21	True				
ANR	6486515	AssignmentExpression	ctx -> dbg_addr = ptr		6486121	0		=			
ANR	6486516	PtrMemberAccess	ctx -> dbg_addr		6486121	0					
ANR	6486517	Identifier	ctx		6486121	0					
ANR	6486518	Identifier	dbg_addr		6486121	1					
ANR	6486519	Identifier	ptr		6486121	1					
ANR	6486520	Statement	WIND_DBG	617:1:14095:14102	6486121	22	True				
ANR	6486521	Statement	eprintf	617:10:14104:14110	6486121	23	True				
ANR	6486522	Statement	(	617:17:14111:14111	6486121	24	True				
ANR	6486523	Statement	"""_KDDEBUGGER_DATA64 at 0x%016"""	617:18:14112:14141	6486121	25	True				
ANR	6486524	Statement	PFMT64x	617:48:14142:14148	6486121	26	True				
ANR	6486525	Statement	"""\\n"""	617:56:14150:14153	6486121	27	True				
ANR	6486526	Statement	","	617:60:14154:14154	6486121	28	True				
ANR	6486527	Statement	ctx	617:62:14156:14158	6486121	29	True				
ANR	6486528	Statement	->	617:65:14159:14160	6486121	30	True				
ANR	6486529	Statement	dbg_addr	617:67:14161:14168	6486121	31	True				
ANR	6486530	Statement	)	617:75:14169:14169	6486121	32	True				
ANR	6486531	ExpressionStatement		617:76:14170:14170	6486121	33	True				
ANR	6486532	IdentifierDeclStatement	uint16_t pae_enabled ;	620:1:14237:14257	6486121	34	True				
ANR	6486533	IdentifierDecl	pae_enabled		6486121	0					
ANR	6486534	IdentifierDeclType	uint16_t		6486121	0					
ANR	6486535	Identifier	pae_enabled		6486121	1					
ANR	6486536	IfStatement	"if ( ! windbg_read_at ( ctx , ( uint8_t * ) & pae_enabled , ctx -> dbg_addr + K_PaeEnabled , sizeof ( uint16_t ) ) )"		6486121	35					
ANR	6486537	Condition	"! windbg_read_at ( ctx , ( uint8_t * ) & pae_enabled , ctx -> dbg_addr + K_PaeEnabled , sizeof ( uint16_t ) )"	621:5:14264:14358	6486121	0	True				
ANR	6486538	UnaryOperationExpression	"! windbg_read_at ( ctx , ( uint8_t * ) & pae_enabled , ctx -> dbg_addr + K_PaeEnabled , sizeof ( uint16_t ) )"		6486121	0					
ANR	6486539	UnaryOperator	!		6486121	0					
ANR	6486540	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & pae_enabled , ctx -> dbg_addr + K_PaeEnabled , sizeof ( uint16_t ) )"		6486121	1					
ANR	6486541	Callee	windbg_read_at		6486121	0					
ANR	6486542	Identifier	windbg_read_at		6486121	0					
ANR	6486543	ArgumentList	ctx		6486121	1					
ANR	6486544	Argument	ctx		6486121	0					
ANR	6486545	Identifier	ctx		6486121	0					
ANR	6486546	Argument	( uint8_t * ) & pae_enabled		6486121	1					
ANR	6486547	CastExpression	( uint8_t * ) & pae_enabled		6486121	0					
ANR	6486548	CastTarget	uint8_t *		6486121	0					
ANR	6486549	UnaryOperationExpression	& pae_enabled		6486121	1					
ANR	6486550	UnaryOperator	&		6486121	0					
ANR	6486551	Identifier	pae_enabled		6486121	1					
ANR	6486552	Argument	ctx -> dbg_addr + K_PaeEnabled		6486121	2					
ANR	6486553	AdditiveExpression	ctx -> dbg_addr + K_PaeEnabled		6486121	0		+			
ANR	6486554	PtrMemberAccess	ctx -> dbg_addr		6486121	0					
ANR	6486555	Identifier	ctx		6486121	0					
ANR	6486556	Identifier	dbg_addr		6486121	1					
ANR	6486557	Identifier	K_PaeEnabled		6486121	1					
ANR	6486558	Argument	sizeof ( uint16_t )		6486121	3					
ANR	6486559	SizeofExpression	sizeof ( uint16_t )		6486121	0					
ANR	6486560	Sizeof	sizeof		6486121	0					
ANR	6486561	SizeofOperand	uint16_t		6486121	1					
ANR	6486562	CompoundStatement		74:102:1919:1919	6486121	1					
ANR	6486563	ExpressionStatement	free ( pkt )	622:2:14365:14375	6486121	0	True				
ANR	6486564	CallExpression	free ( pkt )		6486121	0					
ANR	6486565	Callee	free		6486121	0					
ANR	6486566	Identifier	free		6486121	0					
ANR	6486567	ArgumentList	pkt		6486121	1					
ANR	6486568	Argument	pkt		6486121	0					
ANR	6486569	Identifier	pkt		6486121	0					
ANR	6486570	ReturnStatement	return false ;	623:2:14379:14391	6486121	1	True				
ANR	6486571	Identifier	false		6486121	0					
ANR	6486572	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ctx -> dbg_addr + K_CmNtCSDVersion , 8 )"	627:1:14467:14542	6486121	36	True				
ANR	6486573	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ctx -> dbg_addr + K_CmNtCSDVersion , 8 )"		6486121	0					
ANR	6486574	Callee	windbg_read_at		6486121	0					
ANR	6486575	Identifier	windbg_read_at		6486121	0					
ANR	6486576	ArgumentList	ctx		6486121	1					
ANR	6486577	Argument	ctx		6486121	0					
ANR	6486578	Identifier	ctx		6486121	0					
ANR	6486579	Argument	( uint8_t * ) & ptr		6486121	1					
ANR	6486580	CastExpression	( uint8_t * ) & ptr		6486121	0					
ANR	6486581	CastTarget	uint8_t *		6486121	0					
ANR	6486582	UnaryOperationExpression	& ptr		6486121	1					
ANR	6486583	UnaryOperator	&		6486121	0					
ANR	6486584	Identifier	ptr		6486121	1					
ANR	6486585	Argument	ctx -> dbg_addr + K_CmNtCSDVersion		6486121	2					
ANR	6486586	AdditiveExpression	ctx -> dbg_addr + K_CmNtCSDVersion		6486121	0		+			
ANR	6486587	PtrMemberAccess	ctx -> dbg_addr		6486121	0					
ANR	6486588	Identifier	ctx		6486121	0					
ANR	6486589	Identifier	dbg_addr		6486121	1					
ANR	6486590	Identifier	K_CmNtCSDVersion		6486121	1					
ANR	6486591	Argument	8		6486121	3					
ANR	6486592	PrimaryExpression	8		6486121	0					
ANR	6486593	ExpressionStatement	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ptr , 4 << ctx -> is_x64 )"	628:1:14545:14606	6486121	37	True				
ANR	6486594	CallExpression	"windbg_read_at ( ctx , ( uint8_t * ) & ptr , ptr , 4 << ctx -> is_x64 )"		6486121	0					
ANR	6486595	Callee	windbg_read_at		6486121	0					
ANR	6486596	Identifier	windbg_read_at		6486121	0					
ANR	6486597	ArgumentList	ctx		6486121	1					
ANR	6486598	Argument	ctx		6486121	0					
ANR	6486599	Identifier	ctx		6486121	0					
ANR	6486600	Argument	( uint8_t * ) & ptr		6486121	1					
ANR	6486601	CastExpression	( uint8_t * ) & ptr		6486121	0					
ANR	6486602	CastTarget	uint8_t *		6486121	0					
ANR	6486603	UnaryOperationExpression	& ptr		6486121	1					
ANR	6486604	UnaryOperator	&		6486121	0					
ANR	6486605	Identifier	ptr		6486121	1					
ANR	6486606	Argument	ptr		6486121	2					
ANR	6486607	Identifier	ptr		6486121	0					
ANR	6486608	Argument	4 << ctx -> is_x64		6486121	3					
ANR	6486609	ShiftExpression	4 << ctx -> is_x64		6486121	0		<<			
ANR	6486610	PrimaryExpression	4		6486121	0					
ANR	6486611	PtrMemberAccess	ctx -> is_x64		6486121	1					
ANR	6486612	Identifier	ctx		6486121	0					
ANR	6486613	Identifier	is_x64		6486121	1					
ANR	6486614	ExpressionStatement	ctx -> pae = pae_enabled & 1	630:1:14610:14636	6486121	38	True				
ANR	6486615	AssignmentExpression	ctx -> pae = pae_enabled & 1		6486121	0		=			
ANR	6486616	PtrMemberAccess	ctx -> pae		6486121	0					
ANR	6486617	Identifier	ctx		6486121	0					
ANR	6486618	Identifier	pae		6486121	1					
ANR	6486619	BitAndExpression	pae_enabled & 1		6486121	1		&			
ANR	6486620	Identifier	pae_enabled		6486121	0					
ANR	6486621	PrimaryExpression	1		6486121	1					
ANR	6486622	ExpressionStatement	"ctx -> os_profile = windbg_get_profile ( 32 << ctx -> is_x64 , rr -> r_ver . minor , ( ptr >> 8 ) & 0xff )"	631:1:14639:14731	6486121	39	True				
ANR	6486623	AssignmentExpression	"ctx -> os_profile = windbg_get_profile ( 32 << ctx -> is_x64 , rr -> r_ver . minor , ( ptr >> 8 ) & 0xff )"		6486121	0		=			
ANR	6486624	PtrMemberAccess	ctx -> os_profile		6486121	0					
ANR	6486625	Identifier	ctx		6486121	0					
ANR	6486626	Identifier	os_profile		6486121	1					
ANR	6486627	CallExpression	"windbg_get_profile ( 32 << ctx -> is_x64 , rr -> r_ver . minor , ( ptr >> 8 ) & 0xff )"		6486121	1					
ANR	6486628	Callee	windbg_get_profile		6486121	0					
ANR	6486629	Identifier	windbg_get_profile		6486121	0					
ANR	6486630	ArgumentList	32 << ctx -> is_x64		6486121	1					
ANR	6486631	Argument	32 << ctx -> is_x64		6486121	0					
ANR	6486632	ShiftExpression	32 << ctx -> is_x64		6486121	0		<<			
ANR	6486633	PrimaryExpression	32		6486121	0					
ANR	6486634	PtrMemberAccess	ctx -> is_x64		6486121	1					
ANR	6486635	Identifier	ctx		6486121	0					
ANR	6486636	Identifier	is_x64		6486121	1					
ANR	6486637	Argument	rr -> r_ver . minor		6486121	1					
ANR	6486638	MemberAccess	rr -> r_ver . minor		6486121	0					
ANR	6486639	PtrMemberAccess	rr -> r_ver		6486121	0					
ANR	6486640	Identifier	rr		6486121	0					
ANR	6486641	Identifier	r_ver		6486121	1					
ANR	6486642	Identifier	minor		6486121	1					
ANR	6486643	Argument	( ptr >> 8 ) & 0xff		6486121	2					
ANR	6486644	BitAndExpression	( ptr >> 8 ) & 0xff		6486121	0		&			
ANR	6486645	ShiftExpression	ptr >> 8		6486121	0		>>			
ANR	6486646	Identifier	ptr		6486121	0					
ANR	6486647	PrimaryExpression	8		6486121	1					
ANR	6486648	PrimaryExpression	0xff		6486121	1					
ANR	6486649	IfStatement	if ( ! ctx -> os_profile )		6486121	40					
ANR	6486650	Condition	! ctx -> os_profile	632:5:14738:14753	6486121	0	True				
ANR	6486651	UnaryOperationExpression	! ctx -> os_profile		6486121	0					
ANR	6486652	UnaryOperator	!		6486121	0					
ANR	6486653	PtrMemberAccess	ctx -> os_profile		6486121	1					
ANR	6486654	Identifier	ctx		6486121	0					
ANR	6486655	Identifier	os_profile		6486121	1					
ANR	6486656	CompoundStatement		85:23:2314:2314	6486121	1					
ANR	6486657	ExpressionStatement	"eprintf ( ""Could not find a suitable profile for the target OS\\n"" )"	633:2:14760:14825	6486121	0	True				
ANR	6486658	CallExpression	"eprintf ( ""Could not find a suitable profile for the target OS\\n"" )"		6486121	0					
ANR	6486659	Callee	eprintf		6486121	0					
ANR	6486660	Identifier	eprintf		6486121	0					
ANR	6486661	ArgumentList	"""Could not find a suitable profile for the target OS\\n"""		6486121	1					
ANR	6486662	Argument	"""Could not find a suitable profile for the target OS\\n"""		6486121	0					
ANR	6486663	PrimaryExpression	"""Could not find a suitable profile for the target OS\\n"""		6486121	0					
ANR	6486664	ExpressionStatement	free ( pkt )	634:2:14829:14839	6486121	1	True				
ANR	6486665	CallExpression	free ( pkt )		6486121	0					
ANR	6486666	Callee	free		6486121	0					
ANR	6486667	Identifier	free		6486121	0					
ANR	6486668	ArgumentList	pkt		6486121	1					
ANR	6486669	Argument	pkt		6486121	0					
ANR	6486670	Identifier	pkt		6486121	0					
ANR	6486671	ReturnStatement	return false ;	635:2:14843:14855	6486121	2	True				
ANR	6486672	Identifier	false		6486121	0					
ANR	6486673	ExpressionStatement	free ( pkt )	637:1:14861:14871	6486121	41	True				
ANR	6486674	CallExpression	free ( pkt )		6486121	0					
ANR	6486675	Callee	free		6486121	0					
ANR	6486676	Identifier	free		6486121	0					
ANR	6486677	ArgumentList	pkt		6486121	1					
ANR	6486678	Argument	pkt		6486121	0					
ANR	6486679	Identifier	pkt		6486121	0					
ANR	6486680	ReturnStatement	return true ;	638:1:14874:14885	6486121	42	True				
ANR	6486681	Identifier	true		6486121	0					
ANR	6486682	ReturnType	bool		6486121	1					
ANR	6486683	Identifier	windbg_read_ver		6486121	2					
ANR	6486684	ParameterList	WindCtx * ctx		6486121	3					
ANR	6486685	Parameter	WindCtx * ctx	548:21:12427:12438	6486121	0	True				
ANR	6486686	ParameterType	WindCtx *		6486121	0					
ANR	6486687	Identifier	ctx		6486121	1					
ANR	6486688	CFGEntryNode	ENTRY		6486121		True				
ANR	6486689	CFGExitNode	EXIT		6486121		True				
ANR	6486690	Symbol	rr -> r_ver . proto_minor		6486121						
ANR	6486691	Symbol	& req		6486121						
ANR	6486692	Symbol	req . req		6486121						
ANR	6486693	Symbol	eprintf		6486121						
ANR	6486694	Symbol	windbg_read_at		6486121						
ANR	6486695	Symbol	req . cpu		6486121						
ANR	6486696	Symbol	pae_enabled		6486121						
ANR	6486697	Symbol	rr -> r_ver . proto_major		6486121						
ANR	6486698	Symbol	ctx -> dbg_addr		6486121						
ANR	6486699	Symbol	windbg_wait_packet		6486121						
ANR	6486700	Symbol	ctx -> syncd		6486121						
ANR	6486701	Symbol	req		6486121						
ANR	6486702	Symbol	ret		6486121						
ANR	6486703	Symbol	NULL		6486121						
ANR	6486704	Symbol	ctx -> is_x64		6486121						
ANR	6486705	Symbol	ctx		6486121						
ANR	6486706	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6486121						
ANR	6486707	Symbol	rr -> r_ver . minor		6486121						
ANR	6486708	Symbol	rr -> r_ver . major		6486121						
ANR	6486709	Symbol	ctx -> io_ptr		6486121						
ANR	6486710	Symbol	& pae_enabled		6486121						
ANR	6486711	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6486121						
ANR	6486712	Symbol	true		6486121						
ANR	6486713	Symbol	ctx -> pae		6486121						
ANR	6486714	Symbol	rr		6486121						
ANR	6486715	Symbol	PKT_REQ		6486121						
ANR	6486716	Symbol	windbg_get_profile		6486121						
ANR	6486717	Symbol	K_PaeEnabled		6486121						
ANR	6486718	Symbol	ctx -> os_profile		6486121						
ANR	6486719	Symbol	ctx -> cpu		6486121						
ANR	6486720	Symbol	& ptr		6486121						
ANR	6486721	Symbol	pkt		6486121						
ANR	6486722	Symbol	rr -> ret		6486121						
ANR	6486723	Symbol	rr -> r_ver . flags		6486121						
ANR	6486724	Symbol	rr -> r_ver . machine		6486121						
ANR	6486725	Symbol	KD_MACH_AMD64		6486121						
ANR	6486726	Symbol	rr -> r_ver . dbg_addr		6486121						
ANR	6486727	Symbol	KD_MACH_I386		6486121						
ANR	6486728	Symbol	kd_send_data_packet		6486121						
ANR	6486729	Symbol	KD_E_OK		6486121						
ANR	6486730	Symbol	* rr		6486121						
ANR	6486731	Symbol	false		6486121						
ANR	6486732	Symbol	K_CmNtCSDVersion		6486121						
ANR	6486733	Symbol	* ctx		6486121						
ANR	6486734	Symbol	ptr		6486121						
ANR	6486735	Symbol	ctx -> seq_id		6486121						
ANR	6486736	Symbol	& pkt		6486121						
ANR	6486737	Symbol	rr -> r_ver		6486121						
ANR	6486738	Symbol	DBGKD_VERS_FLAG_DATA		6486121						
ANR	6486739	Function	windbg_sync	641:0:14890:15948							
ANR	6486740	FunctionDef	windbg_sync (WindCtx * ctx)		6486739	0					
ANR	6486741	CompoundStatement		641:30:14920:15948	6486739	0					
ANR	6486742	IdentifierDeclStatement	int ret ;	642:1:14923:14930	6486739	0	True				
ANR	6486743	IdentifierDecl	ret		6486739	0					
ANR	6486744	IdentifierDeclType	int		6486739	0					
ANR	6486745	Identifier	ret		6486739	1					
ANR	6486746	IdentifierDeclStatement	kd_packet_t * s ;	643:1:14933:14947	6486739	1	True				
ANR	6486747	IdentifierDecl	* s		6486739	0					
ANR	6486748	IdentifierDeclType	kd_packet_t *		6486739	0					
ANR	6486749	Identifier	s		6486739	1					
ANR	6486750	IfStatement	if ( ! ctx || ! ctx -> io_ptr )		6486739	2					
ANR	6486751	Condition	! ctx || ! ctx -> io_ptr	645:5:14955:14974	6486739	0	True				
ANR	6486752	OrExpression	! ctx || ! ctx -> io_ptr		6486739	0		||			
ANR	6486753	UnaryOperationExpression	! ctx		6486739	0					
ANR	6486754	UnaryOperator	!		6486739	0					
ANR	6486755	Identifier	ctx		6486739	1					
ANR	6486756	UnaryOperationExpression	! ctx -> io_ptr		6486739	1					
ANR	6486757	UnaryOperator	!		6486739	0					
ANR	6486758	PtrMemberAccess	ctx -> io_ptr		6486739	1					
ANR	6486759	Identifier	ctx		6486739	0					
ANR	6486760	Identifier	io_ptr		6486739	1					
ANR	6486761	CompoundStatement		5:27:56:56	6486739	1					
ANR	6486762	ReturnStatement	return 0 ;	646:2:14981:14989	6486739	0	True				
ANR	6486763	PrimaryExpression	0		6486739	0					
ANR	6486764	IfStatement	if ( ctx -> syncd )		6486739	3					
ANR	6486765	Condition	ctx -> syncd	649:5:15000:15009	6486739	0	True				
ANR	6486766	PtrMemberAccess	ctx -> syncd		6486739	0					
ANR	6486767	Identifier	ctx		6486739	0					
ANR	6486768	Identifier	syncd		6486739	1					
ANR	6486769	CompoundStatement		9:17:91:91	6486739	1					
ANR	6486770	ReturnStatement	return 1 ;	650:2:15016:15024	6486739	0	True				
ANR	6486771	PrimaryExpression	1		6486739	0					
ANR	6486772	IfStatement	"if ( iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 ) != 1 )"		6486739	4					
ANR	6486773	Condition	"iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 ) != 1"	654:5:15063:15116	6486739	0	True				
ANR	6486774	EqualityExpression	"iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 ) != 1"		6486739	0		!=			
ANR	6486775	CallExpression	"iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 )"		6486739	0					
ANR	6486776	Callee	iob_write		6486739	0					
ANR	6486777	Identifier	iob_write		6486739	0					
ANR	6486778	ArgumentList	ctx -> io_ptr		6486739	1					
ANR	6486779	Argument	ctx -> io_ptr		6486739	0					
ANR	6486780	PtrMemberAccess	ctx -> io_ptr		6486739	0					
ANR	6486781	Identifier	ctx		6486739	0					
ANR	6486782	Identifier	io_ptr		6486739	1					
ANR	6486783	Argument	"( const uint8_t * ) ""b"""		6486739	1					
ANR	6486784	CastExpression	"( const uint8_t * ) ""b"""		6486739	0					
ANR	6486785	CastTarget	const uint8_t *		6486739	0					
ANR	6486786	PrimaryExpression	"""b"""		6486739	1					
ANR	6486787	Argument	1		6486739	2					
ANR	6486788	PrimaryExpression	1		6486739	0					
ANR	6486789	PrimaryExpression	1		6486739	1					
ANR	6486790	CompoundStatement		14:61:198:198	6486739	1					
ANR	6486791	ReturnStatement	return 0 ;	655:2:15123:15131	6486739	0	True				
ANR	6486792	PrimaryExpression	0		6486739	0					
ANR	6486793	ExpressionStatement	"ret = kd_send_ctrl_packet ( ctx -> io_ptr , KD_PACKET_TYPE_RESET , 0 )"	659:1:15157:15221	6486739	5	True				
ANR	6486794	AssignmentExpression	"ret = kd_send_ctrl_packet ( ctx -> io_ptr , KD_PACKET_TYPE_RESET , 0 )"		6486739	0		=			
ANR	6486795	Identifier	ret		6486739	0					
ANR	6486796	CallExpression	"kd_send_ctrl_packet ( ctx -> io_ptr , KD_PACKET_TYPE_RESET , 0 )"		6486739	1					
ANR	6486797	Callee	kd_send_ctrl_packet		6486739	0					
ANR	6486798	Identifier	kd_send_ctrl_packet		6486739	0					
ANR	6486799	ArgumentList	ctx -> io_ptr		6486739	1					
ANR	6486800	Argument	ctx -> io_ptr		6486739	0					
ANR	6486801	PtrMemberAccess	ctx -> io_ptr		6486739	0					
ANR	6486802	Identifier	ctx		6486739	0					
ANR	6486803	Identifier	io_ptr		6486739	1					
ANR	6486804	Argument	KD_PACKET_TYPE_RESET		6486739	1					
ANR	6486805	Identifier	KD_PACKET_TYPE_RESET		6486739	0					
ANR	6486806	Argument	0		6486739	2					
ANR	6486807	PrimaryExpression	0		6486739	0					
ANR	6486808	IfStatement	if ( ret != KD_E_OK )		6486739	6					
ANR	6486809	Condition	ret != KD_E_OK	660:5:15228:15241	6486739	0	True				
ANR	6486810	EqualityExpression	ret != KD_E_OK		6486739	0		!=			
ANR	6486811	Identifier	ret		6486739	0					
ANR	6486812	Identifier	KD_E_OK		6486739	1					
ANR	6486813	CompoundStatement		20:21:323:323	6486739	1					
ANR	6486814	ReturnStatement	return 0 ;	661:2:15248:15256	6486739	0	True				
ANR	6486815	PrimaryExpression	0		6486739	0					
ANR	6486816	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_RESET , NULL )"	665:1:15289:15347	6486739	7	True				
ANR	6486817	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_RESET , NULL )"		6486739	0		=			
ANR	6486818	Identifier	ret		6486739	0					
ANR	6486819	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_RESET , NULL )"		6486739	1					
ANR	6486820	Callee	windbg_wait_packet		6486739	0					
ANR	6486821	Identifier	windbg_wait_packet		6486739	0					
ANR	6486822	ArgumentList	ctx		6486739	1					
ANR	6486823	Argument	ctx		6486739	0					
ANR	6486824	Identifier	ctx		6486739	0					
ANR	6486825	Argument	KD_PACKET_TYPE_RESET		6486739	1					
ANR	6486826	Identifier	KD_PACKET_TYPE_RESET		6486739	0					
ANR	6486827	Argument	NULL		6486739	2					
ANR	6486828	Identifier	NULL		6486739	0					
ANR	6486829	IfStatement	if ( ret != KD_E_OK )		6486739	8					
ANR	6486830	Condition	ret != KD_E_OK	666:5:15354:15367	6486739	0	True				
ANR	6486831	EqualityExpression	ret != KD_E_OK		6486739	0		!=			
ANR	6486832	Identifier	ret		6486739	0					
ANR	6486833	Identifier	KD_E_OK		6486739	1					
ANR	6486834	CompoundStatement		26:21:449:449	6486739	1					
ANR	6486835	ReturnStatement	return 0 ;	667:2:15374:15382	6486739	0	True				
ANR	6486836	PrimaryExpression	0		6486739	0					
ANR	6486837	ExpressionStatement	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_CHANGE64 , & s )"	671:1:15456:15515	6486739	9	True				
ANR	6486838	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_CHANGE64 , & s )"		6486739	0					
ANR	6486839	Callee	windbg_wait_packet		6486739	0					
ANR	6486840	Identifier	windbg_wait_packet		6486739	0					
ANR	6486841	ArgumentList	ctx		6486739	1					
ANR	6486842	Argument	ctx		6486739	0					
ANR	6486843	Identifier	ctx		6486739	0					
ANR	6486844	Argument	KD_PACKET_TYPE_STATE_CHANGE64		6486739	1					
ANR	6486845	Identifier	KD_PACKET_TYPE_STATE_CHANGE64		6486739	0					
ANR	6486846	Argument	& s		6486739	2					
ANR	6486847	UnaryOperationExpression	& s		6486739	0					
ANR	6486848	UnaryOperator	&		6486739	0					
ANR	6486849	Identifier	s		6486739	1					
ANR	6486850	ExpressionStatement	ctx -> seq_id = 0x80800001	674:1:15545:15569	6486739	10	True				
ANR	6486851	AssignmentExpression	ctx -> seq_id = 0x80800001		6486739	0		=			
ANR	6486852	PtrMemberAccess	ctx -> seq_id		6486739	0					
ANR	6486853	Identifier	ctx		6486739	0					
ANR	6486854	Identifier	seq_id		6486739	1					
ANR	6486855	PrimaryExpression	0x80800001		6486739	1					
ANR	6486856	IdentifierDeclStatement	kd_stc_64 * stc64 = ( kd_stc_64 * ) s -> data ;	676:1:15573:15611	6486739	11	True				
ANR	6486857	IdentifierDecl	* stc64 = ( kd_stc_64 * ) s -> data		6486739	0					
ANR	6486858	IdentifierDeclType	kd_stc_64 *		6486739	0					
ANR	6486859	Identifier	stc64		6486739	1					
ANR	6486860	AssignmentExpression	* stc64 = ( kd_stc_64 * ) s -> data		6486739	2		=			
ANR	6486861	Identifier	stc64		6486739	0					
ANR	6486862	CastExpression	( kd_stc_64 * ) s -> data		6486739	1					
ANR	6486863	CastTarget	kd_stc_64 *		6486739	0					
ANR	6486864	PtrMemberAccess	s -> data		6486739	1					
ANR	6486865	Identifier	s		6486739	0					
ANR	6486866	Identifier	data		6486739	1					
ANR	6486867	ExpressionStatement	ctx -> cpu = stc64 -> cpu	677:1:15614:15635	6486739	12	True				
ANR	6486868	AssignmentExpression	ctx -> cpu = stc64 -> cpu		6486739	0		=			
ANR	6486869	PtrMemberAccess	ctx -> cpu		6486739	0					
ANR	6486870	Identifier	ctx		6486739	0					
ANR	6486871	Identifier	cpu		6486739	1					
ANR	6486872	PtrMemberAccess	stc64 -> cpu		6486739	1					
ANR	6486873	Identifier	stc64		6486739	0					
ANR	6486874	Identifier	cpu		6486739	1					
ANR	6486875	ExpressionStatement	ctx -> cpu_count = stc64 -> cpu_count	678:1:15638:15671	6486739	13	True				
ANR	6486876	AssignmentExpression	ctx -> cpu_count = stc64 -> cpu_count		6486739	0		=			
ANR	6486877	PtrMemberAccess	ctx -> cpu_count		6486739	0					
ANR	6486878	Identifier	ctx		6486739	0					
ANR	6486879	Identifier	cpu_count		6486739	1					
ANR	6486880	PtrMemberAccess	stc64 -> cpu_count		6486739	1					
ANR	6486881	Identifier	stc64		6486739	0					
ANR	6486882	Identifier	cpu_count		6486739	1					
ANR	6486883	ExpressionStatement	ctx -> target = NULL	679:1:15674:15692	6486739	14	True				
ANR	6486884	AssignmentExpression	ctx -> target = NULL		6486739	0		=			
ANR	6486885	PtrMemberAccess	ctx -> target		6486739	0					
ANR	6486886	Identifier	ctx		6486739	0					
ANR	6486887	Identifier	target		6486739	1					
ANR	6486888	Identifier	NULL		6486739	1					
ANR	6486889	ExpressionStatement	r_list_free ( ctx -> plist_cache )	680:1:15695:15725	6486739	15	True				
ANR	6486890	CallExpression	r_list_free ( ctx -> plist_cache )		6486739	0					
ANR	6486891	Callee	r_list_free		6486739	0					
ANR	6486892	Identifier	r_list_free		6486739	0					
ANR	6486893	ArgumentList	ctx -> plist_cache		6486739	1					
ANR	6486894	Argument	ctx -> plist_cache		6486739	0					
ANR	6486895	PtrMemberAccess	ctx -> plist_cache		6486739	0					
ANR	6486896	Identifier	ctx		6486739	0					
ANR	6486897	Identifier	plist_cache		6486739	1					
ANR	6486898	ExpressionStatement	ctx -> plist_cache = NULL	681:1:15728:15751	6486739	16	True				
ANR	6486899	AssignmentExpression	ctx -> plist_cache = NULL		6486739	0		=			
ANR	6486900	PtrMemberAccess	ctx -> plist_cache		6486739	0					
ANR	6486901	Identifier	ctx		6486739	0					
ANR	6486902	Identifier	plist_cache		6486739	1					
ANR	6486903	Identifier	NULL		6486739	1					
ANR	6486904	ExpressionStatement	r_list_free ( ctx -> tlist_cache )	682:1:15754:15784	6486739	17	True				
ANR	6486905	CallExpression	r_list_free ( ctx -> tlist_cache )		6486739	0					
ANR	6486906	Callee	r_list_free		6486739	0					
ANR	6486907	Identifier	r_list_free		6486739	0					
ANR	6486908	ArgumentList	ctx -> tlist_cache		6486739	1					
ANR	6486909	Argument	ctx -> tlist_cache		6486739	0					
ANR	6486910	PtrMemberAccess	ctx -> tlist_cache		6486739	0					
ANR	6486911	Identifier	ctx		6486739	0					
ANR	6486912	Identifier	tlist_cache		6486739	1					
ANR	6486913	ExpressionStatement	ctx -> tlist_cache = NULL	683:1:15787:15810	6486739	18	True				
ANR	6486914	AssignmentExpression	ctx -> tlist_cache = NULL		6486739	0		=			
ANR	6486915	PtrMemberAccess	ctx -> tlist_cache		6486739	0					
ANR	6486916	Identifier	ctx		6486739	0					
ANR	6486917	Identifier	tlist_cache		6486739	1					
ANR	6486918	Identifier	NULL		6486739	1					
ANR	6486919	ExpressionStatement	ctx -> pae = 0	684:1:15813:15825	6486739	19	True				
ANR	6486920	AssignmentExpression	ctx -> pae = 0		6486739	0		=			
ANR	6486921	PtrMemberAccess	ctx -> pae		6486739	0					
ANR	6486922	Identifier	ctx		6486739	0					
ANR	6486923	Identifier	pae		6486739	1					
ANR	6486924	PrimaryExpression	0		6486739	1					
ANR	6486925	ExpressionStatement	ctx -> syncd = 1	686:1:15850:15864	6486739	20	True				
ANR	6486926	AssignmentExpression	ctx -> syncd = 1		6486739	0		=			
ANR	6486927	PtrMemberAccess	ctx -> syncd		6486739	0					
ANR	6486928	Identifier	ctx		6486739	0					
ANR	6486929	Identifier	syncd		6486739	1					
ANR	6486930	PrimaryExpression	1		6486739	1					
ANR	6486931	ExpressionStatement	free ( s )	688:1:15868:15876	6486739	21	True				
ANR	6486932	CallExpression	free ( s )		6486739	0					
ANR	6486933	Callee	free		6486739	0					
ANR	6486934	Identifier	free		6486739	0					
ANR	6486935	ArgumentList	s		6486739	1					
ANR	6486936	Argument	s		6486739	0					
ANR	6486937	Identifier	s		6486739	0					
ANR	6486938	ExpressionStatement	"eprintf ( ""Sync done! (%i cpus found)\\n"" , ctx -> cpu_count )"	689:1:15879:15935	6486739	22	True				
ANR	6486939	CallExpression	"eprintf ( ""Sync done! (%i cpus found)\\n"" , ctx -> cpu_count )"		6486739	0					
ANR	6486940	Callee	eprintf		6486739	0					
ANR	6486941	Identifier	eprintf		6486739	0					
ANR	6486942	ArgumentList	"""Sync done! (%i cpus found)\\n"""		6486739	1					
ANR	6486943	Argument	"""Sync done! (%i cpus found)\\n"""		6486739	0					
ANR	6486944	PrimaryExpression	"""Sync done! (%i cpus found)\\n"""		6486739	0					
ANR	6486945	Argument	ctx -> cpu_count		6486739	1					
ANR	6486946	PtrMemberAccess	ctx -> cpu_count		6486739	0					
ANR	6486947	Identifier	ctx		6486739	0					
ANR	6486948	Identifier	cpu_count		6486739	1					
ANR	6486949	ReturnStatement	return 1 ;	690:1:15938:15946	6486739	23	True				
ANR	6486950	PrimaryExpression	1		6486739	0					
ANR	6486951	ReturnType	int		6486739	1					
ANR	6486952	Identifier	windbg_sync		6486739	2					
ANR	6486953	ParameterList	WindCtx * ctx		6486739	3					
ANR	6486954	Parameter	WindCtx * ctx	641:16:14906:14917	6486739	0	True				
ANR	6486955	ParameterType	WindCtx *		6486739	0					
ANR	6486956	Identifier	ctx		6486739	1					
ANR	6486957	CFGEntryNode	ENTRY		6486739		True				
ANR	6486958	CFGExitNode	EXIT		6486739		True				
ANR	6486959	Symbol	* stc64		6486739						
ANR	6486960	Symbol	ctx -> target		6486739						
ANR	6486961	Symbol	KD_PACKET_TYPE_RESET		6486739						
ANR	6486962	Symbol	kd_send_ctrl_packet		6486739						
ANR	6486963	Symbol	ctx -> cpu_count		6486739						
ANR	6486964	Symbol	ctx -> cpu		6486739						
ANR	6486965	Symbol	ctx -> plist_cache		6486739						
ANR	6486966	Symbol	s -> data		6486739						
ANR	6486967	Symbol	windbg_wait_packet		6486739						
ANR	6486968	Symbol	ctx -> syncd		6486739						
ANR	6486969	Symbol	ret		6486739						
ANR	6486970	Symbol	NULL		6486739						
ANR	6486971	Symbol	KD_E_OK		6486739						
ANR	6486972	Symbol	ctx		6486739						
ANR	6486973	Symbol	iob_write		6486739						
ANR	6486974	Symbol	stc64		6486739						
ANR	6486975	Symbol	stc64 -> cpu_count		6486739						
ANR	6486976	Symbol	* ctx		6486739						
ANR	6486977	Symbol	ctx -> io_ptr		6486739						
ANR	6486978	Symbol	KD_PACKET_TYPE_STATE_CHANGE64		6486739						
ANR	6486979	Symbol	s		6486739						
ANR	6486980	Symbol	ctx -> seq_id		6486739						
ANR	6486981	Symbol	stc64 -> cpu		6486739						
ANR	6486982	Symbol	& s		6486739						
ANR	6486983	Symbol	* s		6486739						
ANR	6486984	Symbol	ctx -> tlist_cache		6486739						
ANR	6486985	Symbol	ctx -> pae		6486739						
ANR	6486986	Function	windbg_continue	693:0:15951:16689							
ANR	6486987	FunctionDef	windbg_continue (WindCtx * ctx)		6486986	0					
ANR	6486988	CompoundStatement		693:34:15985:16689	6486986	0					
ANR	6486989	IdentifierDeclStatement	kd_req_t req = { 0 } ;	694:1:15988:16011	6486986	0	True				
ANR	6486990	IdentifierDecl	req = { 0 }		6486986	0					
ANR	6486991	IdentifierDeclType	kd_req_t		6486986	0					
ANR	6486992	Identifier	req		6486986	1					
ANR	6486993	AssignmentExpression	req = { 0 }		6486986	2		=			
ANR	6486994	Identifier	req		6486986	0					
ANR	6486995	InitializerList	0		6486986	1					
ANR	6486996	PrimaryExpression	0		6486986	0					
ANR	6486997	IdentifierDeclStatement	int ret ;	697:1:16014:16021	6486986	1	True				
ANR	6486998	IdentifierDecl	ret		6486986	0					
ANR	6486999	IdentifierDeclType	int		6486986	0					
ANR	6487000	Identifier	ret		6486986	1					
ANR	6487001	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6486986	2					
ANR	6487002	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	699:5:16029:16063	6486986	0	True				
ANR	6487003	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6486986	0		||			
ANR	6487004	UnaryOperationExpression	! ctx		6486986	0					
ANR	6487005	UnaryOperator	!		6486986	0					
ANR	6487006	Identifier	ctx		6486986	1					
ANR	6487007	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6486986	1		||			
ANR	6487008	UnaryOperationExpression	! ctx -> io_ptr		6486986	0					
ANR	6487009	UnaryOperator	!		6486986	0					
ANR	6487010	PtrMemberAccess	ctx -> io_ptr		6486986	1					
ANR	6487011	Identifier	ctx		6486986	0					
ANR	6487012	Identifier	io_ptr		6486986	1					
ANR	6487013	UnaryOperationExpression	! ctx -> syncd		6486986	1					
ANR	6487014	UnaryOperator	!		6486986	0					
ANR	6487015	PtrMemberAccess	ctx -> syncd		6486986	1					
ANR	6487016	Identifier	ctx		6486986	0					
ANR	6487017	Identifier	syncd		6486986	1					
ANR	6487018	CompoundStatement		7:42:80:80	6486986	1					
ANR	6487019	ReturnStatement	return 0 ;	700:2:16070:16078	6486986	0	True				
ANR	6487020	PrimaryExpression	0		6486986	0					
ANR	6487021	ExpressionStatement	req . req = DbgKdContinueApi2	702:1:16084:16111	6486986	3	True				
ANR	6487022	AssignmentExpression	req . req = DbgKdContinueApi2		6486986	0		=			
ANR	6487023	MemberAccess	req . req		6486986	0					
ANR	6487024	Identifier	req		6486986	0					
ANR	6487025	Identifier	req		6486986	1					
ANR	6487026	Identifier	DbgKdContinueApi2		6486986	1					
ANR	6487027	ExpressionStatement	req . cpu = ctx -> cpu	703:1:16114:16132	6486986	4	True				
ANR	6487028	AssignmentExpression	req . cpu = ctx -> cpu		6486986	0		=			
ANR	6487029	MemberAccess	req . cpu		6486986	0					
ANR	6487030	Identifier	req		6486986	0					
ANR	6487031	Identifier	cpu		6486986	1					
ANR	6487032	PtrMemberAccess	ctx -> cpu		6486986	1					
ANR	6487033	Identifier	ctx		6486986	0					
ANR	6487034	Identifier	cpu		6486986	1					
ANR	6487035	ExpressionStatement	req . r_cont . reason = 0x10001	704:1:16135:16162	6486986	5	True				
ANR	6487036	AssignmentExpression	req . r_cont . reason = 0x10001		6486986	0		=			
ANR	6487037	MemberAccess	req . r_cont . reason		6486986	0					
ANR	6487038	MemberAccess	req . r_cont		6486986	0					
ANR	6487039	Identifier	req		6486986	0					
ANR	6487040	Identifier	r_cont		6486986	1					
ANR	6487041	Identifier	reason		6486986	1					
ANR	6487042	PrimaryExpression	0x10001		6486986	1					
ANR	6487043	ExpressionStatement	req . r_cont . tf = 0x400	707:1:16266:16287	6486986	6	True				
ANR	6487044	AssignmentExpression	req . r_cont . tf = 0x400		6486986	0		=			
ANR	6487045	MemberAccess	req . r_cont . tf		6486986	0					
ANR	6487046	MemberAccess	req . r_cont		6486986	0					
ANR	6487047	Identifier	req		6486986	0					
ANR	6487048	Identifier	r_cont		6486986	1					
ANR	6487049	Identifier	tf		6486986	1					
ANR	6487050	PrimaryExpression	0x400		6486986	1					
ANR	6487051	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	709:1:16291:16431	6486986	7	True				
ANR	6487052	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6486986	0		=			
ANR	6487053	Identifier	ret		6486986	0					
ANR	6487054	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6486986	1					
ANR	6487055	Callee	kd_send_data_packet		6486986	0					
ANR	6487056	Identifier	kd_send_data_packet		6486986	0					
ANR	6487057	ArgumentList	ctx -> io_ptr		6486986	1					
ANR	6487058	Argument	ctx -> io_ptr		6486986	0					
ANR	6487059	PtrMemberAccess	ctx -> io_ptr		6486986	0					
ANR	6487060	Identifier	ctx		6486986	0					
ANR	6487061	Identifier	io_ptr		6486986	1					
ANR	6487062	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6486986	1					
ANR	6487063	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6486986	0					
ANR	6487064	Argument	ctx -> seq_id ^= 1		6486986	2					
ANR	6487065	AssignmentExpression	ctx -> seq_id ^= 1		6486986	0		^=			
ANR	6487066	PtrMemberAccess	ctx -> seq_id		6486986	0					
ANR	6487067	Identifier	ctx		6486986	0					
ANR	6487068	Identifier	seq_id		6486986	1					
ANR	6487069	PrimaryExpression	1		6486986	1					
ANR	6487070	Argument	( uint8_t * ) & req		6486986	3					
ANR	6487071	CastExpression	( uint8_t * ) & req		6486986	0					
ANR	6487072	CastTarget	uint8_t *		6486986	0					
ANR	6487073	UnaryOperationExpression	& req		6486986	1					
ANR	6487074	UnaryOperator	&		6486986	0					
ANR	6487075	Identifier	req		6486986	1					
ANR	6487076	Argument	sizeof ( kd_req_t )		6486986	4					
ANR	6487077	SizeofExpression	sizeof ( kd_req_t )		6486986	0					
ANR	6487078	Sizeof	sizeof		6486986	0					
ANR	6487079	SizeofOperand	kd_req_t		6486986	1					
ANR	6487080	Argument	NULL		6486986	5					
ANR	6487081	Identifier	NULL		6486986	0					
ANR	6487082	Argument	0		6486986	6					
ANR	6487083	PrimaryExpression	0		6486986	0					
ANR	6487084	IfStatement	if ( ret == KD_E_OK )		6486986	8					
ANR	6487085	Condition	ret == KD_E_OK	711:5:16438:16451	6486986	0	True				
ANR	6487086	EqualityExpression	ret == KD_E_OK		6486986	0		==			
ANR	6487087	Identifier	ret		6486986	0					
ANR	6487088	Identifier	KD_E_OK		6486986	1					
ANR	6487089	CompoundStatement		19:21:468:468	6486986	1					
ANR	6487090	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	712:2:16458:16522	6486986	0	True				
ANR	6487091	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6486986	0		=			
ANR	6487092	Identifier	ret		6486986	0					
ANR	6487093	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6486986	1					
ANR	6487094	Callee	windbg_wait_packet		6486986	0					
ANR	6487095	Identifier	windbg_wait_packet		6486986	0					
ANR	6487096	ArgumentList	ctx		6486986	1					
ANR	6487097	Argument	ctx		6486986	0					
ANR	6487098	Identifier	ctx		6486986	0					
ANR	6487099	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6486986	1					
ANR	6487100	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6486986	0					
ANR	6487101	Argument	NULL		6486986	2					
ANR	6487102	Identifier	NULL		6486986	0					
ANR	6487103	IfStatement	if ( ret == KD_E_OK )		6486986	1					
ANR	6487104	Condition	ret == KD_E_OK	713:6:16530:16543	6486986	0	True				
ANR	6487105	EqualityExpression	ret == KD_E_OK		6486986	0		==			
ANR	6487106	Identifier	ret		6486986	0					
ANR	6487107	Identifier	KD_E_OK		6486986	1					
ANR	6487108	CompoundStatement		21:22:560:560	6486986	1					
ANR	6487109	ExpressionStatement	r_list_free ( ctx -> plist_cache )	715:3:16591:16621	6486986	0	True				
ANR	6487110	CallExpression	r_list_free ( ctx -> plist_cache )		6486986	0					
ANR	6487111	Callee	r_list_free		6486986	0					
ANR	6487112	Identifier	r_list_free		6486986	0					
ANR	6487113	ArgumentList	ctx -> plist_cache		6486986	1					
ANR	6487114	Argument	ctx -> plist_cache		6486986	0					
ANR	6487115	PtrMemberAccess	ctx -> plist_cache		6486986	0					
ANR	6487116	Identifier	ctx		6486986	0					
ANR	6487117	Identifier	plist_cache		6486986	1					
ANR	6487118	ExpressionStatement	ctx -> plist_cache = NULL	716:3:16626:16649	6486986	1	True				
ANR	6487119	AssignmentExpression	ctx -> plist_cache = NULL		6486986	0		=			
ANR	6487120	PtrMemberAccess	ctx -> plist_cache		6486986	0					
ANR	6487121	Identifier	ctx		6486986	0					
ANR	6487122	Identifier	plist_cache		6486986	1					
ANR	6487123	Identifier	NULL		6486986	1					
ANR	6487124	ReturnStatement	return true ;	717:3:16654:16665	6486986	2	True				
ANR	6487125	Identifier	true		6486986	0					
ANR	6487126	ReturnStatement	return false ;	720:1:16675:16687	6486986	9	True				
ANR	6487127	Identifier	false		6486986	0					
ANR	6487128	ReturnType	int		6486986	1					
ANR	6487129	Identifier	windbg_continue		6486986	2					
ANR	6487130	ParameterList	WindCtx * ctx		6486986	3					
ANR	6487131	Parameter	WindCtx * ctx	693:20:15971:15982	6486986	0	True				
ANR	6487132	ParameterType	WindCtx *		6486986	0					
ANR	6487133	Identifier	ctx		6486986	1					
ANR	6487134	CFGEntryNode	ENTRY		6486986		True				
ANR	6487135	CFGExitNode	EXIT		6486986		True				
ANR	6487136	Symbol	ret		6486986						
ANR	6487137	Symbol	kd_send_data_packet		6486986						
ANR	6487138	Symbol	& req		6486986						
ANR	6487139	Symbol	NULL		6486986						
ANR	6487140	Symbol	KD_E_OK		6486986						
ANR	6487141	Symbol	ctx		6486986						
ANR	6487142	Symbol	false		6486986						
ANR	6487143	Symbol	req . req		6486986						
ANR	6487144	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6486986						
ANR	6487145	Symbol	req . r_cont		6486986						
ANR	6487146	Symbol	* ctx		6486986						
ANR	6487147	Symbol	ctx -> io_ptr		6486986						
ANR	6487148	Symbol	ctx -> cpu		6486986						
ANR	6487149	Symbol	ctx -> seq_id		6486986						
ANR	6487150	Symbol	ctx -> plist_cache		6486986						
ANR	6487151	Symbol	req . cpu		6486986						
ANR	6487152	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6486986						
ANR	6487153	Symbol	true		6486986						
ANR	6487154	Symbol	windbg_wait_packet		6486986						
ANR	6487155	Symbol	DbgKdContinueApi2		6486986						
ANR	6487156	Symbol	ctx -> syncd		6486986						
ANR	6487157	Symbol	req		6486986						
ANR	6487158	Symbol	req . r_cont . reason		6486986						
ANR	6487159	Symbol	req . r_cont . tf		6486986						
ANR	6487160	Function	windbg_write_reg	723:0:16692:17587							
ANR	6487161	FunctionDef	"windbg_write_reg (WindCtx * ctx , const uint8_t * buf , int size)"		6487160	0					
ANR	6487162	CompoundStatement		723:66:16758:17587	6487160	0					
ANR	6487163	IdentifierDeclStatement	kd_packet_t * pkt ;	724:1:16761:16777	6487160	0	True				
ANR	6487164	IdentifierDecl	* pkt		6487160	0					
ANR	6487165	IdentifierDeclType	kd_packet_t *		6487160	0					
ANR	6487166	Identifier	pkt		6487160	1					
ANR	6487167	IdentifierDeclStatement	kd_req_t req = { 0 } ;	725:1:16780:16803	6487160	1	True				
ANR	6487168	IdentifierDecl	req = { 0 }		6487160	0					
ANR	6487169	IdentifierDeclType	kd_req_t		6487160	0					
ANR	6487170	Identifier	req		6487160	1					
ANR	6487171	AssignmentExpression	req = { 0 }		6487160	2		=			
ANR	6487172	Identifier	req		6487160	0					
ANR	6487173	InitializerList	0		6487160	1					
ANR	6487174	PrimaryExpression	0		6487160	0					
ANR	6487175	IdentifierDeclStatement	int ret ;	728:1:16806:16813	6487160	2	True				
ANR	6487176	IdentifierDecl	ret		6487160	0					
ANR	6487177	IdentifierDeclType	int		6487160	0					
ANR	6487178	Identifier	ret		6487160	1					
ANR	6487179	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6487160	3					
ANR	6487180	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	730:5:16821:16855	6487160	0	True				
ANR	6487181	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6487160	0		||			
ANR	6487182	UnaryOperationExpression	! ctx		6487160	0					
ANR	6487183	UnaryOperator	!		6487160	0					
ANR	6487184	Identifier	ctx		6487160	1					
ANR	6487185	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6487160	1		||			
ANR	6487186	UnaryOperationExpression	! ctx -> io_ptr		6487160	0					
ANR	6487187	UnaryOperator	!		6487160	0					
ANR	6487188	PtrMemberAccess	ctx -> io_ptr		6487160	1					
ANR	6487189	Identifier	ctx		6487160	0					
ANR	6487190	Identifier	io_ptr		6487160	1					
ANR	6487191	UnaryOperationExpression	! ctx -> syncd		6487160	1					
ANR	6487192	UnaryOperator	!		6487160	0					
ANR	6487193	PtrMemberAccess	ctx -> syncd		6487160	1					
ANR	6487194	Identifier	ctx		6487160	0					
ANR	6487195	Identifier	syncd		6487160	1					
ANR	6487196	CompoundStatement		8:42:99:99	6487160	1					
ANR	6487197	ReturnStatement	return false ;	731:2:16862:16874	6487160	0	True				
ANR	6487198	Identifier	false		6487160	0					
ANR	6487199	ExpressionStatement	req . req = DbgKdSetContextApi	733:1:16880:16908	6487160	4	True				
ANR	6487200	AssignmentExpression	req . req = DbgKdSetContextApi		6487160	0		=			
ANR	6487201	MemberAccess	req . req		6487160	0					
ANR	6487202	Identifier	req		6487160	0					
ANR	6487203	Identifier	req		6487160	1					
ANR	6487204	Identifier	DbgKdSetContextApi		6487160	1					
ANR	6487205	ExpressionStatement	req . cpu = ctx -> cpu	734:1:16911:16929	6487160	5	True				
ANR	6487206	AssignmentExpression	req . cpu = ctx -> cpu		6487160	0		=			
ANR	6487207	MemberAccess	req . cpu		6487160	0					
ANR	6487208	Identifier	req		6487160	0					
ANR	6487209	Identifier	cpu		6487160	1					
ANR	6487210	PtrMemberAccess	ctx -> cpu		6487160	1					
ANR	6487211	Identifier	ctx		6487160	0					
ANR	6487212	Identifier	cpu		6487160	1					
ANR	6487213	ExpressionStatement	req . r_ctx . flags = 0x1003F	735:1:16932:16957	6487160	6	True				
ANR	6487214	AssignmentExpression	req . r_ctx . flags = 0x1003F		6487160	0		=			
ANR	6487215	MemberAccess	req . r_ctx . flags		6487160	0					
ANR	6487216	MemberAccess	req . r_ctx		6487160	0					
ANR	6487217	Identifier	req		6487160	0					
ANR	6487218	Identifier	r_ctx		6487160	1					
ANR	6487219	Identifier	flags		6487160	1					
ANR	6487220	PrimaryExpression	0x1003F		6487160	1					
ANR	6487221	IdentifierDeclStatement	"WIND_DBG eprintf ( ""Regwrite() size: %x\\n"" , size ) ;"	737:1:16961:17008	6487160	7	True				
ANR	6487222	IdentifierDecl	"eprintf ( ""Regwrite() size: %x\\n"" , size )"		6487160	0					
ANR	6487223	IdentifierDeclType	WIND_DBG		6487160	0					
ANR	6487224	Identifier	eprintf		6487160	1					
ANR	6487225	Expression	"""Regwrite() size: %x\\n"" , size"		6487160	2					
ANR	6487226	PrimaryExpression	"""Regwrite() size: %x\\n"""		6487160	0					
ANR	6487227	Identifier	size		6487160	1					
ANR	6487228	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , size )"	739:1:17012:17153	6487160	8	True				
ANR	6487229	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , size )"		6487160	0		=			
ANR	6487230	Identifier	ret		6487160	0					
ANR	6487231	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , size )"		6487160	1					
ANR	6487232	Callee	kd_send_data_packet		6487160	0					
ANR	6487233	Identifier	kd_send_data_packet		6487160	0					
ANR	6487234	ArgumentList	ctx -> io_ptr		6487160	1					
ANR	6487235	Argument	ctx -> io_ptr		6487160	0					
ANR	6487236	PtrMemberAccess	ctx -> io_ptr		6487160	0					
ANR	6487237	Identifier	ctx		6487160	0					
ANR	6487238	Identifier	io_ptr		6487160	1					
ANR	6487239	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6487160	1					
ANR	6487240	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6487160	0					
ANR	6487241	Argument	ctx -> seq_id ^= 1		6487160	2					
ANR	6487242	AssignmentExpression	ctx -> seq_id ^= 1		6487160	0		^=			
ANR	6487243	PtrMemberAccess	ctx -> seq_id		6487160	0					
ANR	6487244	Identifier	ctx		6487160	0					
ANR	6487245	Identifier	seq_id		6487160	1					
ANR	6487246	PrimaryExpression	1		6487160	1					
ANR	6487247	Argument	( uint8_t * ) & req		6487160	3					
ANR	6487248	CastExpression	( uint8_t * ) & req		6487160	0					
ANR	6487249	CastTarget	uint8_t *		6487160	0					
ANR	6487250	UnaryOperationExpression	& req		6487160	1					
ANR	6487251	UnaryOperator	&		6487160	0					
ANR	6487252	Identifier	req		6487160	1					
ANR	6487253	Argument	sizeof ( kd_req_t )		6487160	4					
ANR	6487254	SizeofExpression	sizeof ( kd_req_t )		6487160	0					
ANR	6487255	Sizeof	sizeof		6487160	0					
ANR	6487256	SizeofOperand	kd_req_t		6487160	1					
ANR	6487257	Argument	buf		6487160	5					
ANR	6487258	Identifier	buf		6487160	0					
ANR	6487259	Argument	size		6487160	6					
ANR	6487260	Identifier	size		6487160	0					
ANR	6487261	IfStatement	if ( ret != KD_E_OK )		6487160	9					
ANR	6487262	Condition	ret != KD_E_OK	741:5:17160:17173	6487160	0	True				
ANR	6487263	EqualityExpression	ret != KD_E_OK		6487160	0		!=			
ANR	6487264	Identifier	ret		6487160	0					
ANR	6487265	Identifier	KD_E_OK		6487160	1					
ANR	6487266	CompoundStatement		19:21:417:417	6487160	1					
ANR	6487267	ReturnStatement	return 0 ;	742:2:17180:17188	6487160	0	True				
ANR	6487268	PrimaryExpression	0		6487160	0					
ANR	6487269	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	745:1:17195:17259	6487160	10	True				
ANR	6487270	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6487160	0		=			
ANR	6487271	Identifier	ret		6487160	0					
ANR	6487272	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6487160	1					
ANR	6487273	Callee	windbg_wait_packet		6487160	0					
ANR	6487274	Identifier	windbg_wait_packet		6487160	0					
ANR	6487275	ArgumentList	ctx		6487160	1					
ANR	6487276	Argument	ctx		6487160	0					
ANR	6487277	Identifier	ctx		6487160	0					
ANR	6487278	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6487160	1					
ANR	6487279	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6487160	0					
ANR	6487280	Argument	NULL		6487160	2					
ANR	6487281	Identifier	NULL		6487160	0					
ANR	6487282	IfStatement	if ( ret != KD_E_OK )		6487160	11					
ANR	6487283	Condition	ret != KD_E_OK	746:5:17266:17279	6487160	0	True				
ANR	6487284	EqualityExpression	ret != KD_E_OK		6487160	0		!=			
ANR	6487285	Identifier	ret		6487160	0					
ANR	6487286	Identifier	KD_E_OK		6487160	1					
ANR	6487287	CompoundStatement		24:21:523:523	6487160	1					
ANR	6487288	ReturnStatement	return 0 ;	747:2:17286:17294	6487160	0	True				
ANR	6487289	PrimaryExpression	0		6487160	0					
ANR	6487290	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	750:1:17301:17370	6487160	12	True				
ANR	6487291	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6487160	0		=			
ANR	6487292	Identifier	ret		6487160	0					
ANR	6487293	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6487160	1					
ANR	6487294	Callee	windbg_wait_packet		6487160	0					
ANR	6487295	Identifier	windbg_wait_packet		6487160	0					
ANR	6487296	ArgumentList	ctx		6487160	1					
ANR	6487297	Argument	ctx		6487160	0					
ANR	6487298	Identifier	ctx		6487160	0					
ANR	6487299	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6487160	1					
ANR	6487300	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6487160	0					
ANR	6487301	Argument	& pkt		6487160	2					
ANR	6487302	UnaryOperationExpression	& pkt		6487160	0					
ANR	6487303	UnaryOperator	&		6487160	0					
ANR	6487304	Identifier	pkt		6487160	1					
ANR	6487305	IfStatement	if ( ret != KD_E_OK )		6487160	13					
ANR	6487306	Condition	ret != KD_E_OK	751:5:17377:17390	6487160	0	True				
ANR	6487307	EqualityExpression	ret != KD_E_OK		6487160	0		!=			
ANR	6487308	Identifier	ret		6487160	0					
ANR	6487309	Identifier	KD_E_OK		6487160	1					
ANR	6487310	CompoundStatement		29:21:634:634	6487160	1					
ANR	6487311	ReturnStatement	return 0 ;	752:2:17397:17405	6487160	0	True				
ANR	6487312	PrimaryExpression	0		6487160	0					
ANR	6487313	IdentifierDeclStatement	kd_req_t * rr = PKT_REQ ( pkt ) ;	755:1:17412:17440	6487160	14	True				
ANR	6487314	IdentifierDecl	* rr = PKT_REQ ( pkt )		6487160	0					
ANR	6487315	IdentifierDeclType	kd_req_t *		6487160	0					
ANR	6487316	Identifier	rr		6487160	1					
ANR	6487317	AssignmentExpression	* rr = PKT_REQ ( pkt )		6487160	2		=			
ANR	6487318	Identifier	rr		6487160	0					
ANR	6487319	CallExpression	PKT_REQ ( pkt )		6487160	1					
ANR	6487320	Callee	PKT_REQ		6487160	0					
ANR	6487321	Identifier	PKT_REQ		6487160	0					
ANR	6487322	ArgumentList	pkt		6487160	1					
ANR	6487323	Argument	pkt		6487160	0					
ANR	6487324	Identifier	pkt		6487160	0					
ANR	6487325	IfStatement	if ( rr -> ret )		6487160	15					
ANR	6487326	Condition	rr -> ret	757:5:17448:17454	6487160	0	True				
ANR	6487327	PtrMemberAccess	rr -> ret		6487160	0					
ANR	6487328	Identifier	rr		6487160	0					
ANR	6487329	Identifier	ret		6487160	1					
ANR	6487330	CompoundStatement		36:2:702:768	6487160	1					
ANR	6487331	IdentifierDeclStatement	"WIND_DBG eprintf ( ""%s: req returned %08x\\n"" , __FUNCTION__ , rr -> ret ) ;"	758:2:17461:17527	6487160	0	True				
ANR	6487332	IdentifierDecl	"eprintf ( ""%s: req returned %08x\\n"" , __FUNCTION__ , rr -> ret )"		6487160	0					
ANR	6487333	IdentifierDeclType	WIND_DBG		6487160	0					
ANR	6487334	Identifier	eprintf		6487160	1					
ANR	6487335	Expression	"""%s: req returned %08x\\n"" , __FUNCTION__ , rr -> ret"		6487160	2					
ANR	6487336	PrimaryExpression	"""%s: req returned %08x\\n"""		6487160	0					
ANR	6487337	Expression	"__FUNCTION__ , rr -> ret"		6487160	1					
ANR	6487338	Identifier	__FUNCTION__		6487160	0					
ANR	6487339	PtrMemberAccess	rr -> ret		6487160	1					
ANR	6487340	Identifier	rr		6487160	0					
ANR	6487341	Identifier	ret		6487160	1					
ANR	6487342	ExpressionStatement	free ( pkt )	759:2:17531:17541	6487160	1	True				
ANR	6487343	CallExpression	free ( pkt )		6487160	0					
ANR	6487344	Callee	free		6487160	0					
ANR	6487345	Identifier	free		6487160	0					
ANR	6487346	ArgumentList	pkt		6487160	1					
ANR	6487347	Argument	pkt		6487160	0					
ANR	6487348	Identifier	pkt		6487160	0					
ANR	6487349	ReturnStatement	return 0 ;	760:2:17545:17553	6487160	2	True				
ANR	6487350	PrimaryExpression	0		6487160	0					
ANR	6487351	ExpressionStatement	free ( pkt )	763:1:17560:17570	6487160	16	True				
ANR	6487352	CallExpression	free ( pkt )		6487160	0					
ANR	6487353	Callee	free		6487160	0					
ANR	6487354	Identifier	free		6487160	0					
ANR	6487355	ArgumentList	pkt		6487160	1					
ANR	6487356	Argument	pkt		6487160	0					
ANR	6487357	Identifier	pkt		6487160	0					
ANR	6487358	ReturnStatement	return size ;	765:1:17574:17585	6487160	17	True				
ANR	6487359	Identifier	size		6487160	0					
ANR	6487360	ReturnType	bool		6487160	1					
ANR	6487361	Identifier	windbg_write_reg		6487160	2					
ANR	6487362	ParameterList	"WindCtx * ctx , const uint8_t * buf , int size"		6487160	3					
ANR	6487363	Parameter	WindCtx * ctx	723:22:16714:16725	6487160	0	True				
ANR	6487364	ParameterType	WindCtx *		6487160	0					
ANR	6487365	Identifier	ctx		6487160	1					
ANR	6487366	Parameter	const uint8_t * buf	723:36:16728:16745	6487160	1	True				
ANR	6487367	ParameterType	const uint8_t *		6487160	0					
ANR	6487368	Identifier	buf		6487160	1					
ANR	6487369	Parameter	int size	723:56:16748:16755	6487160	2	True				
ANR	6487370	ParameterType	int		6487160	0					
ANR	6487371	Identifier	size		6487160	1					
ANR	6487372	CFGEntryNode	ENTRY		6487160		True				
ANR	6487373	CFGExitNode	EXIT		6487160		True				
ANR	6487374	Symbol	rr		6487160						
ANR	6487375	Symbol	PKT_REQ		6487160						
ANR	6487376	Symbol	& req		6487160						
ANR	6487377	Symbol	req . req		6487160						
ANR	6487378	Symbol	req . r_ctx . flags		6487160						
ANR	6487379	Symbol	eprintf		6487160						
ANR	6487380	Symbol	ctx -> cpu		6487160						
ANR	6487381	Symbol	req . cpu		6487160						
ANR	6487382	Symbol	pkt		6487160						
ANR	6487383	Symbol	rr -> ret		6487160						
ANR	6487384	Symbol	windbg_wait_packet		6487160						
ANR	6487385	Symbol	ctx -> syncd		6487160						
ANR	6487386	Symbol	req		6487160						
ANR	6487387	Symbol	ret		6487160						
ANR	6487388	Symbol	kd_send_data_packet		6487160						
ANR	6487389	Symbol	NULL		6487160						
ANR	6487390	Symbol	KD_E_OK		6487160						
ANR	6487391	Symbol	* rr		6487160						
ANR	6487392	Symbol	ctx		6487160						
ANR	6487393	Symbol	false		6487160						
ANR	6487394	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6487160						
ANR	6487395	Symbol	* ctx		6487160						
ANR	6487396	Symbol	ctx -> io_ptr		6487160						
ANR	6487397	Symbol	buf		6487160						
ANR	6487398	Symbol	size		6487160						
ANR	6487399	Symbol	ctx -> seq_id		6487160						
ANR	6487400	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6487160						
ANR	6487401	Symbol	& pkt		6487160						
ANR	6487402	Symbol	DbgKdSetContextApi		6487160						
ANR	6487403	Symbol	req . r_ctx		6487160						
ANR	6487404	Function	windbg_read_reg	768:0:17590:18488							
ANR	6487405	FunctionDef	"windbg_read_reg (WindCtx * ctx , uint8_t * buf , int size)"		6487404	0					
ANR	6487406	CompoundStatement		768:58:17648:18488	6487404	0					
ANR	6487407	IdentifierDeclStatement	kd_req_t req ;	769:1:17651:17663	6487404	0	True				
ANR	6487408	IdentifierDecl	req		6487404	0					
ANR	6487409	IdentifierDeclType	kd_req_t		6487404	0					
ANR	6487410	Identifier	req		6487404	1					
ANR	6487411	IdentifierDeclStatement	kd_packet_t * pkt = NULL ;	770:1:17666:17689	6487404	1	True				
ANR	6487412	IdentifierDecl	* pkt = NULL		6487404	0					
ANR	6487413	IdentifierDeclType	kd_packet_t *		6487404	0					
ANR	6487414	Identifier	pkt		6487404	1					
ANR	6487415	AssignmentExpression	* pkt = NULL		6487404	2		=			
ANR	6487416	Identifier	NULL		6487404	0					
ANR	6487417	Identifier	NULL		6487404	1					
ANR	6487418	IdentifierDeclStatement	int ret ;	771:1:17692:17699	6487404	2	True				
ANR	6487419	IdentifierDecl	ret		6487404	0					
ANR	6487420	IdentifierDeclType	int		6487404	0					
ANR	6487421	Identifier	ret		6487404	1					
ANR	6487422	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6487404	3					
ANR	6487423	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	773:5:17707:17741	6487404	0	True				
ANR	6487424	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6487404	0		||			
ANR	6487425	UnaryOperationExpression	! ctx		6487404	0					
ANR	6487426	UnaryOperator	!		6487404	0					
ANR	6487427	Identifier	ctx		6487404	1					
ANR	6487428	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6487404	1		||			
ANR	6487429	UnaryOperationExpression	! ctx -> io_ptr		6487404	0					
ANR	6487430	UnaryOperator	!		6487404	0					
ANR	6487431	PtrMemberAccess	ctx -> io_ptr		6487404	1					
ANR	6487432	Identifier	ctx		6487404	0					
ANR	6487433	Identifier	io_ptr		6487404	1					
ANR	6487434	UnaryOperationExpression	! ctx -> syncd		6487404	1					
ANR	6487435	UnaryOperator	!		6487404	0					
ANR	6487436	PtrMemberAccess	ctx -> syncd		6487404	1					
ANR	6487437	Identifier	ctx		6487404	0					
ANR	6487438	Identifier	syncd		6487404	1					
ANR	6487439	CompoundStatement		6:42:95:95	6487404	1					
ANR	6487440	ReturnStatement	return 0 ;	774:2:17748:17756	6487404	0	True				
ANR	6487441	PrimaryExpression	0		6487404	0					
ANR	6487442	ExpressionStatement	"memset ( & req , 0 , sizeof ( kd_req_t ) )"	777:1:17763:17797	6487404	4	True				
ANR	6487443	CallExpression	"memset ( & req , 0 , sizeof ( kd_req_t ) )"		6487404	0					
ANR	6487444	Callee	memset		6487404	0					
ANR	6487445	Identifier	memset		6487404	0					
ANR	6487446	ArgumentList	& req		6487404	1					
ANR	6487447	Argument	& req		6487404	0					
ANR	6487448	UnaryOperationExpression	& req		6487404	0					
ANR	6487449	UnaryOperator	&		6487404	0					
ANR	6487450	Identifier	req		6487404	1					
ANR	6487451	Argument	0		6487404	1					
ANR	6487452	PrimaryExpression	0		6487404	0					
ANR	6487453	Argument	sizeof ( kd_req_t )		6487404	2					
ANR	6487454	SizeofExpression	sizeof ( kd_req_t )		6487404	0					
ANR	6487455	Sizeof	sizeof		6487404	0					
ANR	6487456	SizeofOperand	kd_req_t		6487404	1					
ANR	6487457	ExpressionStatement	req . req = DbgKdGetContextApi	779:1:17801:17829	6487404	5	True				
ANR	6487458	AssignmentExpression	req . req = DbgKdGetContextApi		6487404	0		=			
ANR	6487459	MemberAccess	req . req		6487404	0					
ANR	6487460	Identifier	req		6487404	0					
ANR	6487461	Identifier	req		6487404	1					
ANR	6487462	Identifier	DbgKdGetContextApi		6487404	1					
ANR	6487463	ExpressionStatement	req . cpu = ctx -> cpu	780:1:17832:17850	6487404	6	True				
ANR	6487464	AssignmentExpression	req . cpu = ctx -> cpu		6487404	0		=			
ANR	6487465	MemberAccess	req . cpu		6487404	0					
ANR	6487466	Identifier	req		6487404	0					
ANR	6487467	Identifier	cpu		6487404	1					
ANR	6487468	PtrMemberAccess	ctx -> cpu		6487404	1					
ANR	6487469	Identifier	ctx		6487404	0					
ANR	6487470	Identifier	cpu		6487404	1					
ANR	6487471	ExpressionStatement	req . r_ctx . flags = 0x1003F	782:1:17854:17879	6487404	7	True				
ANR	6487472	AssignmentExpression	req . r_ctx . flags = 0x1003F		6487404	0		=			
ANR	6487473	MemberAccess	req . r_ctx . flags		6487404	0					
ANR	6487474	MemberAccess	req . r_ctx		6487404	0					
ANR	6487475	Identifier	req		6487404	0					
ANR	6487476	Identifier	r_ctx		6487404	1					
ANR	6487477	Identifier	flags		6487404	1					
ANR	6487478	PrimaryExpression	0x1003F		6487404	1					
ANR	6487479	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	784:1:17883:18022	6487404	8	True				
ANR	6487480	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6487404	0		=			
ANR	6487481	Identifier	ret		6487404	0					
ANR	6487482	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6487404	1					
ANR	6487483	Callee	kd_send_data_packet		6487404	0					
ANR	6487484	Identifier	kd_send_data_packet		6487404	0					
ANR	6487485	ArgumentList	ctx -> io_ptr		6487404	1					
ANR	6487486	Argument	ctx -> io_ptr		6487404	0					
ANR	6487487	PtrMemberAccess	ctx -> io_ptr		6487404	0					
ANR	6487488	Identifier	ctx		6487404	0					
ANR	6487489	Identifier	io_ptr		6487404	1					
ANR	6487490	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6487404	1					
ANR	6487491	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6487404	0					
ANR	6487492	Argument	ctx -> seq_id ^= 1		6487404	2					
ANR	6487493	AssignmentExpression	ctx -> seq_id ^= 1		6487404	0		^=			
ANR	6487494	PtrMemberAccess	ctx -> seq_id		6487404	0					
ANR	6487495	Identifier	ctx		6487404	0					
ANR	6487496	Identifier	seq_id		6487404	1					
ANR	6487497	PrimaryExpression	1		6487404	1					
ANR	6487498	Argument	( uint8_t * ) & req		6487404	3					
ANR	6487499	CastExpression	( uint8_t * ) & req		6487404	0					
ANR	6487500	CastTarget	uint8_t *		6487404	0					
ANR	6487501	UnaryOperationExpression	& req		6487404	1					
ANR	6487502	UnaryOperator	&		6487404	0					
ANR	6487503	Identifier	req		6487404	1					
ANR	6487504	Argument	sizeof ( kd_req_t )		6487404	4					
ANR	6487505	SizeofExpression	sizeof ( kd_req_t )		6487404	0					
ANR	6487506	Sizeof	sizeof		6487404	0					
ANR	6487507	SizeofOperand	kd_req_t		6487404	1					
ANR	6487508	Argument	NULL		6487404	5					
ANR	6487509	Identifier	NULL		6487404	0					
ANR	6487510	Argument	0		6487404	6					
ANR	6487511	PrimaryExpression	0		6487404	0					
ANR	6487512	IfStatement	if ( ret != KD_E_OK )		6487404	9					
ANR	6487513	Condition	ret != KD_E_OK	786:5:18029:18042	6487404	0	True				
ANR	6487514	EqualityExpression	ret != KD_E_OK		6487404	0		!=			
ANR	6487515	Identifier	ret		6487404	0					
ANR	6487516	Identifier	KD_E_OK		6487404	1					
ANR	6487517	CompoundStatement		19:21:396:396	6487404	1					
ANR	6487518	ReturnStatement	return 0 ;	787:2:18049:18057	6487404	0	True				
ANR	6487519	PrimaryExpression	0		6487404	0					
ANR	6487520	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	790:1:18064:18128	6487404	10	True				
ANR	6487521	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6487404	0		=			
ANR	6487522	Identifier	ret		6487404	0					
ANR	6487523	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6487404	1					
ANR	6487524	Callee	windbg_wait_packet		6487404	0					
ANR	6487525	Identifier	windbg_wait_packet		6487404	0					
ANR	6487526	ArgumentList	ctx		6487404	1					
ANR	6487527	Argument	ctx		6487404	0					
ANR	6487528	Identifier	ctx		6487404	0					
ANR	6487529	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6487404	1					
ANR	6487530	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6487404	0					
ANR	6487531	Argument	NULL		6487404	2					
ANR	6487532	Identifier	NULL		6487404	0					
ANR	6487533	IfStatement	if ( ret != KD_E_OK )		6487404	11					
ANR	6487534	Condition	ret != KD_E_OK	791:5:18135:18148	6487404	0	True				
ANR	6487535	EqualityExpression	ret != KD_E_OK		6487404	0		!=			
ANR	6487536	Identifier	ret		6487404	0					
ANR	6487537	Identifier	KD_E_OK		6487404	1					
ANR	6487538	CompoundStatement		24:21:502:502	6487404	1					
ANR	6487539	ReturnStatement	return 0 ;	792:2:18155:18163	6487404	0	True				
ANR	6487540	PrimaryExpression	0		6487404	0					
ANR	6487541	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	795:1:18170:18239	6487404	12	True				
ANR	6487542	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6487404	0		=			
ANR	6487543	Identifier	ret		6487404	0					
ANR	6487544	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6487404	1					
ANR	6487545	Callee	windbg_wait_packet		6487404	0					
ANR	6487546	Identifier	windbg_wait_packet		6487404	0					
ANR	6487547	ArgumentList	ctx		6487404	1					
ANR	6487548	Argument	ctx		6487404	0					
ANR	6487549	Identifier	ctx		6487404	0					
ANR	6487550	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6487404	1					
ANR	6487551	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6487404	0					
ANR	6487552	Argument	& pkt		6487404	2					
ANR	6487553	UnaryOperationExpression	& pkt		6487404	0					
ANR	6487554	UnaryOperator	&		6487404	0					
ANR	6487555	Identifier	pkt		6487404	1					
ANR	6487556	IfStatement	if ( ret != KD_E_OK )		6487404	13					
ANR	6487557	Condition	ret != KD_E_OK	796:5:18246:18259	6487404	0	True				
ANR	6487558	EqualityExpression	ret != KD_E_OK		6487404	0		!=			
ANR	6487559	Identifier	ret		6487404	0					
ANR	6487560	Identifier	KD_E_OK		6487404	1					
ANR	6487561	CompoundStatement		29:21:613:613	6487404	1					
ANR	6487562	ReturnStatement	return 0 ;	797:2:18266:18274	6487404	0	True				
ANR	6487563	PrimaryExpression	0		6487404	0					
ANR	6487564	IdentifierDeclStatement	kd_req_t * rr = PKT_REQ ( pkt ) ;	800:1:18281:18309	6487404	14	True				
ANR	6487565	IdentifierDecl	* rr = PKT_REQ ( pkt )		6487404	0					
ANR	6487566	IdentifierDeclType	kd_req_t *		6487404	0					
ANR	6487567	Identifier	rr		6487404	1					
ANR	6487568	AssignmentExpression	* rr = PKT_REQ ( pkt )		6487404	2		=			
ANR	6487569	Identifier	rr		6487404	0					
ANR	6487570	CallExpression	PKT_REQ ( pkt )		6487404	1					
ANR	6487571	Callee	PKT_REQ		6487404	0					
ANR	6487572	Identifier	PKT_REQ		6487404	0					
ANR	6487573	ArgumentList	pkt		6487404	1					
ANR	6487574	Argument	pkt		6487404	0					
ANR	6487575	Identifier	pkt		6487404	0					
ANR	6487576	IfStatement	if ( rr -> ret )		6487404	15					
ANR	6487577	Condition	rr -> ret	802:5:18317:18323	6487404	0	True				
ANR	6487578	PtrMemberAccess	rr -> ret		6487404	0					
ANR	6487579	Identifier	rr		6487404	0					
ANR	6487580	Identifier	ret		6487404	1					
ANR	6487581	CompoundStatement		36:2:681:747	6487404	1					
ANR	6487582	IdentifierDeclStatement	"WIND_DBG eprintf ( ""%s: req returned %08x\\n"" , __FUNCTION__ , rr -> ret ) ;"	803:2:18330:18396	6487404	0	True				
ANR	6487583	IdentifierDecl	"eprintf ( ""%s: req returned %08x\\n"" , __FUNCTION__ , rr -> ret )"		6487404	0					
ANR	6487584	IdentifierDeclType	WIND_DBG		6487404	0					
ANR	6487585	Identifier	eprintf		6487404	1					
ANR	6487586	Expression	"""%s: req returned %08x\\n"" , __FUNCTION__ , rr -> ret"		6487404	2					
ANR	6487587	PrimaryExpression	"""%s: req returned %08x\\n"""		6487404	0					
ANR	6487588	Expression	"__FUNCTION__ , rr -> ret"		6487404	1					
ANR	6487589	Identifier	__FUNCTION__		6487404	0					
ANR	6487590	PtrMemberAccess	rr -> ret		6487404	1					
ANR	6487591	Identifier	rr		6487404	0					
ANR	6487592	Identifier	ret		6487404	1					
ANR	6487593	ExpressionStatement	free ( pkt )	804:2:18400:18410	6487404	1	True				
ANR	6487594	CallExpression	free ( pkt )		6487404	0					
ANR	6487595	Callee	free		6487404	0					
ANR	6487596	Identifier	free		6487404	0					
ANR	6487597	ArgumentList	pkt		6487404	1					
ANR	6487598	Argument	pkt		6487404	0					
ANR	6487599	Identifier	pkt		6487404	0					
ANR	6487600	ReturnStatement	return 0 ;	805:2:18414:18422	6487404	2	True				
ANR	6487601	PrimaryExpression	0		6487404	0					
ANR	6487602	ExpressionStatement	"memcpy ( buf , rr -> data , size )"	808:1:18429:18457	6487404	16	True				
ANR	6487603	CallExpression	"memcpy ( buf , rr -> data , size )"		6487404	0					
ANR	6487604	Callee	memcpy		6487404	0					
ANR	6487605	Identifier	memcpy		6487404	0					
ANR	6487606	ArgumentList	buf		6487404	1					
ANR	6487607	Argument	buf		6487404	0					
ANR	6487608	Identifier	buf		6487404	0					
ANR	6487609	Argument	rr -> data		6487404	1					
ANR	6487610	PtrMemberAccess	rr -> data		6487404	0					
ANR	6487611	Identifier	rr		6487404	0					
ANR	6487612	Identifier	data		6487404	1					
ANR	6487613	Argument	size		6487404	2					
ANR	6487614	Identifier	size		6487404	0					
ANR	6487615	ExpressionStatement	free ( pkt )	810:1:18461:18471	6487404	17	True				
ANR	6487616	CallExpression	free ( pkt )		6487404	0					
ANR	6487617	Callee	free		6487404	0					
ANR	6487618	Identifier	free		6487404	0					
ANR	6487619	ArgumentList	pkt		6487404	1					
ANR	6487620	Argument	pkt		6487404	0					
ANR	6487621	Identifier	pkt		6487404	0					
ANR	6487622	ReturnStatement	return size ;	812:1:18475:18486	6487404	18	True				
ANR	6487623	Identifier	size		6487404	0					
ANR	6487624	ReturnType	int		6487404	1					
ANR	6487625	Identifier	windbg_read_reg		6487404	2					
ANR	6487626	ParameterList	"WindCtx * ctx , uint8_t * buf , int size"		6487404	3					
ANR	6487627	Parameter	WindCtx * ctx	768:20:17610:17621	6487404	0	True				
ANR	6487628	ParameterType	WindCtx *		6487404	0					
ANR	6487629	Identifier	ctx		6487404	1					
ANR	6487630	Parameter	uint8_t * buf	768:34:17624:17635	6487404	1	True				
ANR	6487631	ParameterType	uint8_t *		6487404	0					
ANR	6487632	Identifier	buf		6487404	1					
ANR	6487633	Parameter	int size	768:48:17638:17645	6487404	2	True				
ANR	6487634	ParameterType	int		6487404	0					
ANR	6487635	Identifier	size		6487404	1					
ANR	6487636	CFGEntryNode	ENTRY		6487404		True				
ANR	6487637	CFGExitNode	EXIT		6487404		True				
ANR	6487638	Symbol	rr		6487404						
ANR	6487639	Symbol	PKT_REQ		6487404						
ANR	6487640	Symbol	& req		6487404						
ANR	6487641	Symbol	req . req		6487404						
ANR	6487642	Symbol	req . r_ctx . flags		6487404						
ANR	6487643	Symbol	eprintf		6487404						
ANR	6487644	Symbol	ctx -> cpu		6487404						
ANR	6487645	Symbol	rr -> data		6487404						
ANR	6487646	Symbol	req . cpu		6487404						
ANR	6487647	Symbol	pkt		6487404						
ANR	6487648	Symbol	rr -> ret		6487404						
ANR	6487649	Symbol	windbg_wait_packet		6487404						
ANR	6487650	Symbol	ctx -> syncd		6487404						
ANR	6487651	Symbol	req		6487404						
ANR	6487652	Symbol	ret		6487404						
ANR	6487653	Symbol	kd_send_data_packet		6487404						
ANR	6487654	Symbol	NULL		6487404						
ANR	6487655	Symbol	KD_E_OK		6487404						
ANR	6487656	Symbol	* rr		6487404						
ANR	6487657	Symbol	ctx		6487404						
ANR	6487658	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6487404						
ANR	6487659	Symbol	DbgKdGetContextApi		6487404						
ANR	6487660	Symbol	* ctx		6487404						
ANR	6487661	Symbol	ctx -> io_ptr		6487404						
ANR	6487662	Symbol	buf		6487404						
ANR	6487663	Symbol	size		6487404						
ANR	6487664	Symbol	ctx -> seq_id		6487404						
ANR	6487665	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6487404						
ANR	6487666	Symbol	& pkt		6487404						
ANR	6487667	Symbol	req . r_ctx		6487404						
ANR	6487668	Function	windbg_query_mem	815:0:18491:19525							
ANR	6487669	FunctionDef	"windbg_query_mem (WindCtx * ctx , const ut64 addr , int * address_space , int * flags)"		6487668	0					
ANR	6487670	CompoundStatement		815:84:18575:19525	6487668	0					
ANR	6487671	IdentifierDeclStatement	kd_req_t req ;	816:1:18578:18590	6487668	0	True				
ANR	6487672	IdentifierDecl	req		6487668	0					
ANR	6487673	IdentifierDeclType	kd_req_t		6487668	0					
ANR	6487674	Identifier	req		6487668	1					
ANR	6487675	IdentifierDeclStatement	kd_packet_t * pkt ;	817:1:18593:18609	6487668	1	True				
ANR	6487676	IdentifierDecl	* pkt		6487668	0					
ANR	6487677	IdentifierDeclType	kd_packet_t *		6487668	0					
ANR	6487678	Identifier	pkt		6487668	1					
ANR	6487679	IdentifierDeclStatement	int ret ;	818:1:18612:18619	6487668	2	True				
ANR	6487680	IdentifierDecl	ret		6487668	0					
ANR	6487681	IdentifierDeclType	int		6487668	0					
ANR	6487682	Identifier	ret		6487668	1					
ANR	6487683	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6487668	3					
ANR	6487684	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	820:5:18627:18661	6487668	0	True				
ANR	6487685	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6487668	0		||			
ANR	6487686	UnaryOperationExpression	! ctx		6487668	0					
ANR	6487687	UnaryOperator	!		6487668	0					
ANR	6487688	Identifier	ctx		6487668	1					
ANR	6487689	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6487668	1		||			
ANR	6487690	UnaryOperationExpression	! ctx -> io_ptr		6487668	0					
ANR	6487691	UnaryOperator	!		6487668	0					
ANR	6487692	PtrMemberAccess	ctx -> io_ptr		6487668	1					
ANR	6487693	Identifier	ctx		6487668	0					
ANR	6487694	Identifier	io_ptr		6487668	1					
ANR	6487695	UnaryOperationExpression	! ctx -> syncd		6487668	1					
ANR	6487696	UnaryOperator	!		6487668	0					
ANR	6487697	PtrMemberAccess	ctx -> syncd		6487668	1					
ANR	6487698	Identifier	ctx		6487668	0					
ANR	6487699	Identifier	syncd		6487668	1					
ANR	6487700	CompoundStatement		6:42:88:88	6487668	1					
ANR	6487701	ReturnStatement	return 0 ;	821:2:18668:18676	6487668	0	True				
ANR	6487702	PrimaryExpression	0		6487668	0					
ANR	6487703	ExpressionStatement	"memset ( & req , 0 , sizeof ( kd_req_t ) )"	824:1:18683:18717	6487668	4	True				
ANR	6487704	CallExpression	"memset ( & req , 0 , sizeof ( kd_req_t ) )"		6487668	0					
ANR	6487705	Callee	memset		6487668	0					
ANR	6487706	Identifier	memset		6487668	0					
ANR	6487707	ArgumentList	& req		6487668	1					
ANR	6487708	Argument	& req		6487668	0					
ANR	6487709	UnaryOperationExpression	& req		6487668	0					
ANR	6487710	UnaryOperator	&		6487668	0					
ANR	6487711	Identifier	req		6487668	1					
ANR	6487712	Argument	0		6487668	1					
ANR	6487713	PrimaryExpression	0		6487668	0					
ANR	6487714	Argument	sizeof ( kd_req_t )		6487668	2					
ANR	6487715	SizeofExpression	sizeof ( kd_req_t )		6487668	0					
ANR	6487716	Sizeof	sizeof		6487668	0					
ANR	6487717	SizeofOperand	kd_req_t		6487668	1					
ANR	6487718	ExpressionStatement	req . req = DbgKdQueryMemoryApi	826:1:18721:18750	6487668	5	True				
ANR	6487719	AssignmentExpression	req . req = DbgKdQueryMemoryApi		6487668	0		=			
ANR	6487720	MemberAccess	req . req		6487668	0					
ANR	6487721	Identifier	req		6487668	0					
ANR	6487722	Identifier	req		6487668	1					
ANR	6487723	Identifier	DbgKdQueryMemoryApi		6487668	1					
ANR	6487724	ExpressionStatement	req . cpu = ctx -> cpu	827:1:18753:18771	6487668	6	True				
ANR	6487725	AssignmentExpression	req . cpu = ctx -> cpu		6487668	0		=			
ANR	6487726	MemberAccess	req . cpu		6487668	0					
ANR	6487727	Identifier	req		6487668	0					
ANR	6487728	Identifier	cpu		6487668	1					
ANR	6487729	PtrMemberAccess	ctx -> cpu		6487668	1					
ANR	6487730	Identifier	ctx		6487668	0					
ANR	6487731	Identifier	cpu		6487668	1					
ANR	6487732	ExpressionStatement	req . r_query_mem . addr = addr	829:1:18775:18802	6487668	7	True				
ANR	6487733	AssignmentExpression	req . r_query_mem . addr = addr		6487668	0		=			
ANR	6487734	MemberAccess	req . r_query_mem . addr		6487668	0					
ANR	6487735	MemberAccess	req . r_query_mem		6487668	0					
ANR	6487736	Identifier	req		6487668	0					
ANR	6487737	Identifier	r_query_mem		6487668	1					
ANR	6487738	Identifier	addr		6487668	1					
ANR	6487739	Identifier	addr		6487668	1					
ANR	6487740	ExpressionStatement	req . r_query_mem . address_space = 0	830:1:18805:18838	6487668	8	True				
ANR	6487741	AssignmentExpression	req . r_query_mem . address_space = 0		6487668	0		=			
ANR	6487742	MemberAccess	req . r_query_mem . address_space		6487668	0					
ANR	6487743	MemberAccess	req . r_query_mem		6487668	0					
ANR	6487744	Identifier	req		6487668	0					
ANR	6487745	Identifier	r_query_mem		6487668	1					
ANR	6487746	Identifier	address_space		6487668	1					
ANR	6487747	PrimaryExpression	0		6487668	1					
ANR	6487748	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	832:1:18895:19034	6487668	9	True				
ANR	6487749	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6487668	0		=			
ANR	6487750	Identifier	ret		6487668	0					
ANR	6487751	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6487668	1					
ANR	6487752	Callee	kd_send_data_packet		6487668	0					
ANR	6487753	Identifier	kd_send_data_packet		6487668	0					
ANR	6487754	ArgumentList	ctx -> io_ptr		6487668	1					
ANR	6487755	Argument	ctx -> io_ptr		6487668	0					
ANR	6487756	PtrMemberAccess	ctx -> io_ptr		6487668	0					
ANR	6487757	Identifier	ctx		6487668	0					
ANR	6487758	Identifier	io_ptr		6487668	1					
ANR	6487759	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6487668	1					
ANR	6487760	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6487668	0					
ANR	6487761	Argument	ctx -> seq_id ^= 1		6487668	2					
ANR	6487762	AssignmentExpression	ctx -> seq_id ^= 1		6487668	0		^=			
ANR	6487763	PtrMemberAccess	ctx -> seq_id		6487668	0					
ANR	6487764	Identifier	ctx		6487668	0					
ANR	6487765	Identifier	seq_id		6487668	1					
ANR	6487766	PrimaryExpression	1		6487668	1					
ANR	6487767	Argument	( uint8_t * ) & req		6487668	3					
ANR	6487768	CastExpression	( uint8_t * ) & req		6487668	0					
ANR	6487769	CastTarget	uint8_t *		6487668	0					
ANR	6487770	UnaryOperationExpression	& req		6487668	1					
ANR	6487771	UnaryOperator	&		6487668	0					
ANR	6487772	Identifier	req		6487668	1					
ANR	6487773	Argument	sizeof ( kd_req_t )		6487668	4					
ANR	6487774	SizeofExpression	sizeof ( kd_req_t )		6487668	0					
ANR	6487775	Sizeof	sizeof		6487668	0					
ANR	6487776	SizeofOperand	kd_req_t		6487668	1					
ANR	6487777	Argument	NULL		6487668	5					
ANR	6487778	Identifier	NULL		6487668	0					
ANR	6487779	Argument	0		6487668	6					
ANR	6487780	PrimaryExpression	0		6487668	0					
ANR	6487781	IfStatement	if ( ret != KD_E_OK )		6487668	10					
ANR	6487782	Condition	ret != KD_E_OK	834:5:19041:19054	6487668	0	True				
ANR	6487783	EqualityExpression	ret != KD_E_OK		6487668	0		!=			
ANR	6487784	Identifier	ret		6487668	0					
ANR	6487785	Identifier	KD_E_OK		6487668	1					
ANR	6487786	CompoundStatement		20:21:481:481	6487668	1					
ANR	6487787	ReturnStatement	return 0 ;	835:2:19061:19069	6487668	0	True				
ANR	6487788	PrimaryExpression	0		6487668	0					
ANR	6487789	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	838:1:19076:19140	6487668	11	True				
ANR	6487790	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6487668	0		=			
ANR	6487791	Identifier	ret		6487668	0					
ANR	6487792	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6487668	1					
ANR	6487793	Callee	windbg_wait_packet		6487668	0					
ANR	6487794	Identifier	windbg_wait_packet		6487668	0					
ANR	6487795	ArgumentList	ctx		6487668	1					
ANR	6487796	Argument	ctx		6487668	0					
ANR	6487797	Identifier	ctx		6487668	0					
ANR	6487798	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6487668	1					
ANR	6487799	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6487668	0					
ANR	6487800	Argument	NULL		6487668	2					
ANR	6487801	Identifier	NULL		6487668	0					
ANR	6487802	IfStatement	if ( ret != KD_E_OK )		6487668	12					
ANR	6487803	Condition	ret != KD_E_OK	839:5:19147:19160	6487668	0	True				
ANR	6487804	EqualityExpression	ret != KD_E_OK		6487668	0		!=			
ANR	6487805	Identifier	ret		6487668	0					
ANR	6487806	Identifier	KD_E_OK		6487668	1					
ANR	6487807	CompoundStatement		25:21:587:587	6487668	1					
ANR	6487808	ReturnStatement	return 0 ;	840:2:19167:19175	6487668	0	True				
ANR	6487809	PrimaryExpression	0		6487668	0					
ANR	6487810	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	843:1:19182:19251	6487668	13	True				
ANR	6487811	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6487668	0		=			
ANR	6487812	Identifier	ret		6487668	0					
ANR	6487813	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6487668	1					
ANR	6487814	Callee	windbg_wait_packet		6487668	0					
ANR	6487815	Identifier	windbg_wait_packet		6487668	0					
ANR	6487816	ArgumentList	ctx		6487668	1					
ANR	6487817	Argument	ctx		6487668	0					
ANR	6487818	Identifier	ctx		6487668	0					
ANR	6487819	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6487668	1					
ANR	6487820	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6487668	0					
ANR	6487821	Argument	& pkt		6487668	2					
ANR	6487822	UnaryOperationExpression	& pkt		6487668	0					
ANR	6487823	UnaryOperator	&		6487668	0					
ANR	6487824	Identifier	pkt		6487668	1					
ANR	6487825	IfStatement	if ( ret != KD_E_OK )		6487668	14					
ANR	6487826	Condition	ret != KD_E_OK	844:5:19258:19271	6487668	0	True				
ANR	6487827	EqualityExpression	ret != KD_E_OK		6487668	0		!=			
ANR	6487828	Identifier	ret		6487668	0					
ANR	6487829	Identifier	KD_E_OK		6487668	1					
ANR	6487830	CompoundStatement		30:21:698:698	6487668	1					
ANR	6487831	ReturnStatement	return 0 ;	845:2:19278:19286	6487668	0	True				
ANR	6487832	PrimaryExpression	0		6487668	0					
ANR	6487833	IdentifierDeclStatement	kd_req_t * rr = PKT_REQ ( pkt ) ;	848:1:19293:19321	6487668	15	True				
ANR	6487834	IdentifierDecl	* rr = PKT_REQ ( pkt )		6487668	0					
ANR	6487835	IdentifierDeclType	kd_req_t *		6487668	0					
ANR	6487836	Identifier	rr		6487668	1					
ANR	6487837	AssignmentExpression	* rr = PKT_REQ ( pkt )		6487668	2		=			
ANR	6487838	Identifier	rr		6487668	0					
ANR	6487839	CallExpression	PKT_REQ ( pkt )		6487668	1					
ANR	6487840	Callee	PKT_REQ		6487668	0					
ANR	6487841	Identifier	PKT_REQ		6487668	0					
ANR	6487842	ArgumentList	pkt		6487668	1					
ANR	6487843	Argument	pkt		6487668	0					
ANR	6487844	Identifier	pkt		6487668	0					
ANR	6487845	IfStatement	if ( rr -> ret )		6487668	16					
ANR	6487846	Condition	rr -> ret	850:5:19329:19335	6487668	0	True				
ANR	6487847	PtrMemberAccess	rr -> ret		6487668	0					
ANR	6487848	Identifier	rr		6487668	0					
ANR	6487849	Identifier	ret		6487668	1					
ANR	6487850	CompoundStatement		36:14:762:762	6487668	1					
ANR	6487851	ExpressionStatement	free ( pkt )	851:2:19342:19352	6487668	0	True				
ANR	6487852	CallExpression	free ( pkt )		6487668	0					
ANR	6487853	Callee	free		6487668	0					
ANR	6487854	Identifier	free		6487668	0					
ANR	6487855	ArgumentList	pkt		6487668	1					
ANR	6487856	Argument	pkt		6487668	0					
ANR	6487857	Identifier	pkt		6487668	0					
ANR	6487858	ReturnStatement	return 0 ;	852:2:19356:19364	6487668	1	True				
ANR	6487859	PrimaryExpression	0		6487668	0					
ANR	6487860	IfStatement	if ( address_space )		6487668	17					
ANR	6487861	Condition	address_space	855:5:19375:19387	6487668	0	True				
ANR	6487862	Identifier	address_space		6487668	0					
ANR	6487863	CompoundStatement		41:20:814:814	6487668	1					
ANR	6487864	ExpressionStatement	* address_space = rr -> r_query_mem . address_space	856:2:19394:19440	6487668	0	True				
ANR	6487865	AssignmentExpression	* address_space = rr -> r_query_mem . address_space		6487668	0		=			
ANR	6487866	UnaryOperationExpression	* address_space		6487668	0					
ANR	6487867	UnaryOperator	*		6487668	0					
ANR	6487868	Identifier	address_space		6487668	1					
ANR	6487869	MemberAccess	rr -> r_query_mem . address_space		6487668	1					
ANR	6487870	PtrMemberAccess	rr -> r_query_mem		6487668	0					
ANR	6487871	Identifier	rr		6487668	0					
ANR	6487872	Identifier	r_query_mem		6487668	1					
ANR	6487873	Identifier	address_space		6487668	1					
ANR	6487874	IfStatement	if ( flags )		6487668	18					
ANR	6487875	Condition	flags	858:5:19450:19454	6487668	0	True				
ANR	6487876	Identifier	flags		6487668	0					
ANR	6487877	CompoundStatement		44:12:881:881	6487668	1					
ANR	6487878	ExpressionStatement	* flags = rr -> r_query_mem . flags	859:2:19461:19491	6487668	0	True				
ANR	6487879	AssignmentExpression	* flags = rr -> r_query_mem . flags		6487668	0		=			
ANR	6487880	UnaryOperationExpression	* flags		6487668	0					
ANR	6487881	UnaryOperator	*		6487668	0					
ANR	6487882	Identifier	flags		6487668	1					
ANR	6487883	MemberAccess	rr -> r_query_mem . flags		6487668	1					
ANR	6487884	PtrMemberAccess	rr -> r_query_mem		6487668	0					
ANR	6487885	Identifier	rr		6487668	0					
ANR	6487886	Identifier	r_query_mem		6487668	1					
ANR	6487887	Identifier	flags		6487668	1					
ANR	6487888	ExpressionStatement	free ( pkt )	862:1:19498:19508	6487668	19	True				
ANR	6487889	CallExpression	free ( pkt )		6487668	0					
ANR	6487890	Callee	free		6487668	0					
ANR	6487891	Identifier	free		6487668	0					
ANR	6487892	ArgumentList	pkt		6487668	1					
ANR	6487893	Argument	pkt		6487668	0					
ANR	6487894	Identifier	pkt		6487668	0					
ANR	6487895	ReturnStatement	return ret ;	864:1:19512:19522	6487668	20	True				
ANR	6487896	Identifier	ret		6487668	0					
ANR	6487897	ReturnType	int		6487668	1					
ANR	6487898	Identifier	windbg_query_mem		6487668	2					
ANR	6487899	ParameterList	"WindCtx * ctx , const ut64 addr , int * address_space , int * flags"		6487668	3					
ANR	6487900	Parameter	WindCtx * ctx	815:21:18512:18523	6487668	0	True				
ANR	6487901	ParameterType	WindCtx *		6487668	0					
ANR	6487902	Identifier	ctx		6487668	1					
ANR	6487903	Parameter	const ut64 addr	815:35:18526:18540	6487668	1	True				
ANR	6487904	ParameterType	const ut64		6487668	0					
ANR	6487905	Identifier	addr		6487668	1					
ANR	6487906	Parameter	int * address_space	815:52:18543:18560	6487668	2	True				
ANR	6487907	ParameterType	int *		6487668	0					
ANR	6487908	Identifier	address_space		6487668	1					
ANR	6487909	Parameter	int * flags	815:72:18563:18572	6487668	3	True				
ANR	6487910	ParameterType	int *		6487668	0					
ANR	6487911	Identifier	flags		6487668	1					
ANR	6487912	CFGEntryNode	ENTRY		6487668		True				
ANR	6487913	CFGExitNode	EXIT		6487668		True				
ANR	6487914	Symbol	rr		6487668						
ANR	6487915	Symbol	* address_space		6487668						
ANR	6487916	Symbol	PKT_REQ		6487668						
ANR	6487917	Symbol	& req		6487668						
ANR	6487918	Symbol	rr -> r_query_mem . flags		6487668						
ANR	6487919	Symbol	flags		6487668						
ANR	6487920	Symbol	req . req		6487668						
ANR	6487921	Symbol	req . r_query_mem . address_space		6487668						
ANR	6487922	Symbol	ctx -> cpu		6487668						
ANR	6487923	Symbol	req . cpu		6487668						
ANR	6487924	Symbol	pkt		6487668						
ANR	6487925	Symbol	rr -> ret		6487668						
ANR	6487926	Symbol	windbg_wait_packet		6487668						
ANR	6487927	Symbol	addr		6487668						
ANR	6487928	Symbol	rr -> r_query_mem		6487668						
ANR	6487929	Symbol	ctx -> syncd		6487668						
ANR	6487930	Symbol	req		6487668						
ANR	6487931	Symbol	ret		6487668						
ANR	6487932	Symbol	DbgKdQueryMemoryApi		6487668						
ANR	6487933	Symbol	kd_send_data_packet		6487668						
ANR	6487934	Symbol	* flags		6487668						
ANR	6487935	Symbol	NULL		6487668						
ANR	6487936	Symbol	KD_E_OK		6487668						
ANR	6487937	Symbol	* rr		6487668						
ANR	6487938	Symbol	ctx		6487668						
ANR	6487939	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6487668						
ANR	6487940	Symbol	* ctx		6487668						
ANR	6487941	Symbol	ctx -> io_ptr		6487668						
ANR	6487942	Symbol	req . r_query_mem		6487668						
ANR	6487943	Symbol	rr -> r_query_mem . address_space		6487668						
ANR	6487944	Symbol	ctx -> seq_id		6487668						
ANR	6487945	Symbol	address_space		6487668						
ANR	6487946	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6487668						
ANR	6487947	Symbol	& pkt		6487668						
ANR	6487948	Symbol	req . r_query_mem . addr		6487668						
ANR	6487949	Function	windbg_bkpt	868:0:19528:20463							
ANR	6487950	FunctionDef	"windbg_bkpt (WindCtx * ctx , const ut64 addr , const int set , const int hw , int * handle)"		6487949	0					
ANR	6487951	CompoundStatement		868:89:19617:20463	6487949	0					
ANR	6487952	IdentifierDeclStatement	kd_req_t req = { 0 } ;	869:1:19620:19643	6487949	0	True				
ANR	6487953	IdentifierDecl	req = { 0 }		6487949	0					
ANR	6487954	IdentifierDeclType	kd_req_t		6487949	0					
ANR	6487955	Identifier	req		6487949	1					
ANR	6487956	AssignmentExpression	req = { 0 }		6487949	2		=			
ANR	6487957	Identifier	req		6487949	0					
ANR	6487958	InitializerList	0		6487949	1					
ANR	6487959	PrimaryExpression	0		6487949	0					
ANR	6487960	IdentifierDeclStatement	kd_packet_t * pkt ;	872:1:19646:19662	6487949	1	True				
ANR	6487961	IdentifierDecl	* pkt		6487949	0					
ANR	6487962	IdentifierDeclType	kd_packet_t *		6487949	0					
ANR	6487963	Identifier	pkt		6487949	1					
ANR	6487964	IdentifierDeclStatement	int ret ;	873:1:19665:19672	6487949	2	True				
ANR	6487965	IdentifierDecl	ret		6487949	0					
ANR	6487966	IdentifierDeclType	int		6487949	0					
ANR	6487967	Identifier	ret		6487949	1					
ANR	6487968	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6487949	3					
ANR	6487969	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	875:5:19680:19714	6487949	0	True				
ANR	6487970	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6487949	0		||			
ANR	6487971	UnaryOperationExpression	! ctx		6487949	0					
ANR	6487972	UnaryOperator	!		6487949	0					
ANR	6487973	Identifier	ctx		6487949	1					
ANR	6487974	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6487949	1		||			
ANR	6487975	UnaryOperationExpression	! ctx -> io_ptr		6487949	0					
ANR	6487976	UnaryOperator	!		6487949	0					
ANR	6487977	PtrMemberAccess	ctx -> io_ptr		6487949	1					
ANR	6487978	Identifier	ctx		6487949	0					
ANR	6487979	Identifier	io_ptr		6487949	1					
ANR	6487980	UnaryOperationExpression	! ctx -> syncd		6487949	1					
ANR	6487981	UnaryOperator	!		6487949	0					
ANR	6487982	PtrMemberAccess	ctx -> syncd		6487949	1					
ANR	6487983	Identifier	ctx		6487949	0					
ANR	6487984	Identifier	syncd		6487949	1					
ANR	6487985	CompoundStatement		8:42:99:99	6487949	1					
ANR	6487986	ReturnStatement	return 0 ;	876:2:19721:19729	6487949	0	True				
ANR	6487987	PrimaryExpression	0		6487949	0					
ANR	6487988	ExpressionStatement	req . req = set ? DbgKdWriteBreakPointApi : DbgKdRestoreBreakPointApi	879:1:19736:19801	6487949	4	True				
ANR	6487989	AssignmentExpression	req . req = set ? DbgKdWriteBreakPointApi : DbgKdRestoreBreakPointApi		6487949	0		=			
ANR	6487990	MemberAccess	req . req		6487949	0					
ANR	6487991	Identifier	req		6487949	0					
ANR	6487992	Identifier	req		6487949	1					
ANR	6487993	ConditionalExpression	set ? DbgKdWriteBreakPointApi : DbgKdRestoreBreakPointApi		6487949	1					
ANR	6487994	Condition	set		6487949	0					
ANR	6487995	Identifier	set		6487949	0					
ANR	6487996	Identifier	DbgKdWriteBreakPointApi		6487949	1					
ANR	6487997	Identifier	DbgKdRestoreBreakPointApi		6487949	2					
ANR	6487998	ExpressionStatement	req . cpu = ctx -> cpu	880:1:19804:19822	6487949	5	True				
ANR	6487999	AssignmentExpression	req . cpu = ctx -> cpu		6487949	0		=			
ANR	6488000	MemberAccess	req . cpu		6487949	0					
ANR	6488001	Identifier	req		6487949	0					
ANR	6488002	Identifier	cpu		6487949	1					
ANR	6488003	PtrMemberAccess	ctx -> cpu		6487949	1					
ANR	6488004	Identifier	ctx		6487949	0					
ANR	6488005	Identifier	cpu		6487949	1					
ANR	6488006	IfStatement	if ( set )		6487949	6					
ANR	6488007	Condition	set	882:5:19830:19832	6487949	0	True				
ANR	6488008	Identifier	set		6487949	0					
ANR	6488009	CompoundStatement		15:10:217:217	6487949	1					
ANR	6488010	ExpressionStatement	req . r_set_bp . addr = addr	883:2:19839:19863	6487949	0	True				
ANR	6488011	AssignmentExpression	req . r_set_bp . addr = addr		6487949	0		=			
ANR	6488012	MemberAccess	req . r_set_bp . addr		6487949	0					
ANR	6488013	MemberAccess	req . r_set_bp		6487949	0					
ANR	6488014	Identifier	req		6487949	0					
ANR	6488015	Identifier	r_set_bp		6487949	1					
ANR	6488016	Identifier	addr		6487949	1					
ANR	6488017	Identifier	addr		6487949	1					
ANR	6488018	ElseStatement	else		6487949	0					
ANR	6488019	CompoundStatement		17:8:255:255	6487949	0					
ANR	6488020	ExpressionStatement	req . r_del_bp . handle = * handle	885:2:19877:19906	6487949	0	True				
ANR	6488021	AssignmentExpression	req . r_del_bp . handle = * handle		6487949	0		=			
ANR	6488022	MemberAccess	req . r_del_bp . handle		6487949	0					
ANR	6488023	MemberAccess	req . r_del_bp		6487949	0					
ANR	6488024	Identifier	req		6487949	0					
ANR	6488025	Identifier	r_del_bp		6487949	1					
ANR	6488026	Identifier	handle		6487949	1					
ANR	6488027	UnaryOperationExpression	* handle		6487949	1					
ANR	6488028	UnaryOperator	*		6487949	0					
ANR	6488029	Identifier	handle		6487949	1					
ANR	6488030	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	888:1:19913:20052	6487949	7	True				
ANR	6488031	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6487949	0		=			
ANR	6488032	Identifier	ret		6487949	0					
ANR	6488033	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6487949	1					
ANR	6488034	Callee	kd_send_data_packet		6487949	0					
ANR	6488035	Identifier	kd_send_data_packet		6487949	0					
ANR	6488036	ArgumentList	ctx -> io_ptr		6487949	1					
ANR	6488037	Argument	ctx -> io_ptr		6487949	0					
ANR	6488038	PtrMemberAccess	ctx -> io_ptr		6487949	0					
ANR	6488039	Identifier	ctx		6487949	0					
ANR	6488040	Identifier	io_ptr		6487949	1					
ANR	6488041	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6487949	1					
ANR	6488042	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6487949	0					
ANR	6488043	Argument	ctx -> seq_id ^= 1		6487949	2					
ANR	6488044	AssignmentExpression	ctx -> seq_id ^= 1		6487949	0		^=			
ANR	6488045	PtrMemberAccess	ctx -> seq_id		6487949	0					
ANR	6488046	Identifier	ctx		6487949	0					
ANR	6488047	Identifier	seq_id		6487949	1					
ANR	6488048	PrimaryExpression	1		6487949	1					
ANR	6488049	Argument	( uint8_t * ) & req		6487949	3					
ANR	6488050	CastExpression	( uint8_t * ) & req		6487949	0					
ANR	6488051	CastTarget	uint8_t *		6487949	0					
ANR	6488052	UnaryOperationExpression	& req		6487949	1					
ANR	6488053	UnaryOperator	&		6487949	0					
ANR	6488054	Identifier	req		6487949	1					
ANR	6488055	Argument	sizeof ( kd_req_t )		6487949	4					
ANR	6488056	SizeofExpression	sizeof ( kd_req_t )		6487949	0					
ANR	6488057	Sizeof	sizeof		6487949	0					
ANR	6488058	SizeofOperand	kd_req_t		6487949	1					
ANR	6488059	Argument	NULL		6487949	5					
ANR	6488060	Identifier	NULL		6487949	0					
ANR	6488061	Argument	0		6487949	6					
ANR	6488062	PrimaryExpression	0		6487949	0					
ANR	6488063	IfStatement	if ( ret != KD_E_OK )		6487949	8					
ANR	6488064	Condition	ret != KD_E_OK	890:5:20059:20072	6487949	0	True				
ANR	6488065	EqualityExpression	ret != KD_E_OK		6487949	0		!=			
ANR	6488066	Identifier	ret		6487949	0					
ANR	6488067	Identifier	KD_E_OK		6487949	1					
ANR	6488068	CompoundStatement		23:21:457:457	6487949	1					
ANR	6488069	ReturnStatement	return 0 ;	891:2:20079:20087	6487949	0	True				
ANR	6488070	PrimaryExpression	0		6487949	0					
ANR	6488071	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	894:1:20094:20158	6487949	9	True				
ANR	6488072	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6487949	0		=			
ANR	6488073	Identifier	ret		6487949	0					
ANR	6488074	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6487949	1					
ANR	6488075	Callee	windbg_wait_packet		6487949	0					
ANR	6488076	Identifier	windbg_wait_packet		6487949	0					
ANR	6488077	ArgumentList	ctx		6487949	1					
ANR	6488078	Argument	ctx		6487949	0					
ANR	6488079	Identifier	ctx		6487949	0					
ANR	6488080	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6487949	1					
ANR	6488081	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6487949	0					
ANR	6488082	Argument	NULL		6487949	2					
ANR	6488083	Identifier	NULL		6487949	0					
ANR	6488084	IfStatement	if ( ret != KD_E_OK )		6487949	10					
ANR	6488085	Condition	ret != KD_E_OK	895:5:20165:20178	6487949	0	True				
ANR	6488086	EqualityExpression	ret != KD_E_OK		6487949	0		!=			
ANR	6488087	Identifier	ret		6487949	0					
ANR	6488088	Identifier	KD_E_OK		6487949	1					
ANR	6488089	CompoundStatement		28:21:563:563	6487949	1					
ANR	6488090	ReturnStatement	return 0 ;	896:2:20185:20193	6487949	0	True				
ANR	6488091	PrimaryExpression	0		6487949	0					
ANR	6488092	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	899:1:20200:20269	6487949	11	True				
ANR	6488093	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6487949	0		=			
ANR	6488094	Identifier	ret		6487949	0					
ANR	6488095	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6487949	1					
ANR	6488096	Callee	windbg_wait_packet		6487949	0					
ANR	6488097	Identifier	windbg_wait_packet		6487949	0					
ANR	6488098	ArgumentList	ctx		6487949	1					
ANR	6488099	Argument	ctx		6487949	0					
ANR	6488100	Identifier	ctx		6487949	0					
ANR	6488101	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6487949	1					
ANR	6488102	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6487949	0					
ANR	6488103	Argument	& pkt		6487949	2					
ANR	6488104	UnaryOperationExpression	& pkt		6487949	0					
ANR	6488105	UnaryOperator	&		6487949	0					
ANR	6488106	Identifier	pkt		6487949	1					
ANR	6488107	IfStatement	if ( ret != KD_E_OK )		6487949	12					
ANR	6488108	Condition	ret != KD_E_OK	900:5:20276:20289	6487949	0	True				
ANR	6488109	EqualityExpression	ret != KD_E_OK		6487949	0		!=			
ANR	6488110	Identifier	ret		6487949	0					
ANR	6488111	Identifier	KD_E_OK		6487949	1					
ANR	6488112	CompoundStatement		33:21:674:674	6487949	1					
ANR	6488113	ReturnStatement	return 0 ;	901:2:20296:20304	6487949	0	True				
ANR	6488114	PrimaryExpression	0		6487949	0					
ANR	6488115	IdentifierDeclStatement	kd_req_t * rr = PKT_REQ ( pkt ) ;	904:1:20311:20339	6487949	13	True				
ANR	6488116	IdentifierDecl	* rr = PKT_REQ ( pkt )		6487949	0					
ANR	6488117	IdentifierDeclType	kd_req_t *		6487949	0					
ANR	6488118	Identifier	rr		6487949	1					
ANR	6488119	AssignmentExpression	* rr = PKT_REQ ( pkt )		6487949	2		=			
ANR	6488120	Identifier	rr		6487949	0					
ANR	6488121	CallExpression	PKT_REQ ( pkt )		6487949	1					
ANR	6488122	Callee	PKT_REQ		6487949	0					
ANR	6488123	Identifier	PKT_REQ		6487949	0					
ANR	6488124	ArgumentList	pkt		6487949	1					
ANR	6488125	Argument	pkt		6487949	0					
ANR	6488126	Identifier	pkt		6487949	0					
ANR	6488127	IfStatement	if ( rr -> ret )		6487949	14					
ANR	6488128	Condition	rr -> ret	906:5:20347:20353	6487949	0	True				
ANR	6488129	PtrMemberAccess	rr -> ret		6487949	0					
ANR	6488130	Identifier	rr		6487949	0					
ANR	6488131	Identifier	ret		6487949	1					
ANR	6488132	CompoundStatement		39:14:738:738	6487949	1					
ANR	6488133	ExpressionStatement	free ( pkt )	907:2:20360:20370	6487949	0	True				
ANR	6488134	CallExpression	free ( pkt )		6487949	0					
ANR	6488135	Callee	free		6487949	0					
ANR	6488136	Identifier	free		6487949	0					
ANR	6488137	ArgumentList	pkt		6487949	1					
ANR	6488138	Argument	pkt		6487949	0					
ANR	6488139	Identifier	pkt		6487949	0					
ANR	6488140	ReturnStatement	return 0 ;	908:2:20374:20382	6487949	1	True				
ANR	6488141	PrimaryExpression	0		6487949	0					
ANR	6488142	ExpressionStatement	* handle = rr -> r_set_bp . handle	910:1:20388:20417	6487949	15	True				
ANR	6488143	AssignmentExpression	* handle = rr -> r_set_bp . handle		6487949	0		=			
ANR	6488144	UnaryOperationExpression	* handle		6487949	0					
ANR	6488145	UnaryOperator	*		6487949	0					
ANR	6488146	Identifier	handle		6487949	1					
ANR	6488147	MemberAccess	rr -> r_set_bp . handle		6487949	1					
ANR	6488148	PtrMemberAccess	rr -> r_set_bp		6487949	0					
ANR	6488149	Identifier	rr		6487949	0					
ANR	6488150	Identifier	r_set_bp		6487949	1					
ANR	6488151	Identifier	handle		6487949	1					
ANR	6488152	ExpressionStatement	ret = ! ! rr -> ret	911:1:20420:20435	6487949	16	True				
ANR	6488153	AssignmentExpression	ret = ! ! rr -> ret		6487949	0		=			
ANR	6488154	Identifier	ret		6487949	0					
ANR	6488155	UnaryOperationExpression	! ! rr -> ret		6487949	1					
ANR	6488156	UnaryOperator	!		6487949	0					
ANR	6488157	UnaryOperationExpression	! rr -> ret		6487949	1					
ANR	6488158	UnaryOperator	!		6487949	0					
ANR	6488159	PtrMemberAccess	rr -> ret		6487949	1					
ANR	6488160	Identifier	rr		6487949	0					
ANR	6488161	Identifier	ret		6487949	1					
ANR	6488162	ExpressionStatement	free ( pkt )	912:1:20438:20448	6487949	17	True				
ANR	6488163	CallExpression	free ( pkt )		6487949	0					
ANR	6488164	Callee	free		6487949	0					
ANR	6488165	Identifier	free		6487949	0					
ANR	6488166	ArgumentList	pkt		6487949	1					
ANR	6488167	Argument	pkt		6487949	0					
ANR	6488168	Identifier	pkt		6487949	0					
ANR	6488169	ReturnStatement	return ret ;	913:1:20451:20461	6487949	18	True				
ANR	6488170	Identifier	ret		6487949	0					
ANR	6488171	ReturnType	int		6487949	1					
ANR	6488172	Identifier	windbg_bkpt		6487949	2					
ANR	6488173	ParameterList	"WindCtx * ctx , const ut64 addr , const int set , const int hw , int * handle"		6487949	3					
ANR	6488174	Parameter	WindCtx * ctx	868:16:19544:19555	6487949	0	True				
ANR	6488175	ParameterType	WindCtx *		6487949	0					
ANR	6488176	Identifier	ctx		6487949	1					
ANR	6488177	Parameter	const ut64 addr	868:30:19558:19572	6487949	1	True				
ANR	6488178	ParameterType	const ut64		6487949	0					
ANR	6488179	Identifier	addr		6487949	1					
ANR	6488180	Parameter	const int set	868:47:19575:19587	6487949	2	True				
ANR	6488181	ParameterType	const int		6487949	0					
ANR	6488182	Identifier	set		6487949	1					
ANR	6488183	Parameter	const int hw	868:62:19590:19601	6487949	3	True				
ANR	6488184	ParameterType	const int		6487949	0					
ANR	6488185	Identifier	hw		6487949	1					
ANR	6488186	Parameter	int * handle	868:76:19604:19614	6487949	4	True				
ANR	6488187	ParameterType	int *		6487949	0					
ANR	6488188	Identifier	handle		6487949	1					
ANR	6488189	CFGEntryNode	ENTRY		6487949		True				
ANR	6488190	CFGExitNode	EXIT		6487949		True				
ANR	6488191	Symbol	rr		6487949						
ANR	6488192	Symbol	req . r_set_bp		6487949						
ANR	6488193	Symbol	PKT_REQ		6487949						
ANR	6488194	Symbol	& req		6487949						
ANR	6488195	Symbol	DbgKdWriteBreakPointApi		6487949						
ANR	6488196	Symbol	req . req		6487949						
ANR	6488197	Symbol	hw		6487949						
ANR	6488198	Symbol	ctx -> cpu		6487949						
ANR	6488199	Symbol	req . cpu		6487949						
ANR	6488200	Symbol	pkt		6487949						
ANR	6488201	Symbol	rr -> ret		6487949						
ANR	6488202	Symbol	windbg_wait_packet		6487949						
ANR	6488203	Symbol	addr		6487949						
ANR	6488204	Symbol	ctx -> syncd		6487949						
ANR	6488205	Symbol	req		6487949						
ANR	6488206	Symbol	ret		6487949						
ANR	6488207	Symbol	rr -> r_set_bp . handle		6487949						
ANR	6488208	Symbol	kd_send_data_packet		6487949						
ANR	6488209	Symbol	set		6487949						
ANR	6488210	Symbol	NULL		6487949						
ANR	6488211	Symbol	KD_E_OK		6487949						
ANR	6488212	Symbol	* handle		6487949						
ANR	6488213	Symbol	* rr		6487949						
ANR	6488214	Symbol	ctx		6487949						
ANR	6488215	Symbol	handle		6487949						
ANR	6488216	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6487949						
ANR	6488217	Symbol	req . r_del_bp . handle		6487949						
ANR	6488218	Symbol	* ctx		6487949						
ANR	6488219	Symbol	ctx -> io_ptr		6487949						
ANR	6488220	Symbol	req . r_del_bp		6487949						
ANR	6488221	Symbol	rr -> r_set_bp		6487949						
ANR	6488222	Symbol	ctx -> seq_id		6487949						
ANR	6488223	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6487949						
ANR	6488224	Symbol	& pkt		6487949						
ANR	6488225	Symbol	req . r_set_bp . addr		6487949						
ANR	6488226	Symbol	DbgKdRestoreBreakPointApi		6487949						
ANR	6488227	Function	windbg_read_at_phys	916:0:20466:21417							
ANR	6488228	FunctionDef	"windbg_read_at_phys (WindCtx * ctx , uint8_t * buf , const ut64 offset , const int count)"		6488227	0					
ANR	6488229	CompoundStatement		916:88:20554:21417	6488227	0					
ANR	6488230	IdentifierDeclStatement	"kd_req_t req = { 0 } , * rr ;"	917:1:20557:20585	6488227	0	True				
ANR	6488231	IdentifierDecl	req = { 0 }		6488227	0					
ANR	6488232	IdentifierDeclType	kd_req_t		6488227	0					
ANR	6488233	Identifier	req		6488227	1					
ANR	6488234	AssignmentExpression	req = { 0 }		6488227	2		=			
ANR	6488235	Identifier	req		6488227	0					
ANR	6488236	InitializerList	0		6488227	1					
ANR	6488237	PrimaryExpression	0		6488227	0					
ANR	6488238	IdentifierDecl	* rr		6488227	1					
ANR	6488239	IdentifierDeclType	kd_req_t *		6488227	0					
ANR	6488240	Identifier	rr		6488227	1					
ANR	6488241	IdentifierDeclStatement	kd_packet_t * pkt ;	920:1:20588:20604	6488227	1	True				
ANR	6488242	IdentifierDecl	* pkt		6488227	0					
ANR	6488243	IdentifierDeclType	kd_packet_t *		6488227	0					
ANR	6488244	Identifier	pkt		6488227	1					
ANR	6488245	IdentifierDeclStatement	int ret ;	921:1:20607:20614	6488227	2	True				
ANR	6488246	IdentifierDecl	ret		6488227	0					
ANR	6488247	IdentifierDeclType	int		6488227	0					
ANR	6488248	Identifier	ret		6488227	1					
ANR	6488249	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6488227	3					
ANR	6488250	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	923:5:20622:20656	6488227	0	True				
ANR	6488251	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6488227	0		||			
ANR	6488252	UnaryOperationExpression	! ctx		6488227	0					
ANR	6488253	UnaryOperator	!		6488227	0					
ANR	6488254	Identifier	ctx		6488227	1					
ANR	6488255	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6488227	1		||			
ANR	6488256	UnaryOperationExpression	! ctx -> io_ptr		6488227	0					
ANR	6488257	UnaryOperator	!		6488227	0					
ANR	6488258	PtrMemberAccess	ctx -> io_ptr		6488227	1					
ANR	6488259	Identifier	ctx		6488227	0					
ANR	6488260	Identifier	io_ptr		6488227	1					
ANR	6488261	UnaryOperationExpression	! ctx -> syncd		6488227	1					
ANR	6488262	UnaryOperator	!		6488227	0					
ANR	6488263	PtrMemberAccess	ctx -> syncd		6488227	1					
ANR	6488264	Identifier	ctx		6488227	0					
ANR	6488265	Identifier	syncd		6488227	1					
ANR	6488266	CompoundStatement		8:42:104:104	6488227	1					
ANR	6488267	ReturnStatement	return 0 ;	924:2:20663:20671	6488227	0	True				
ANR	6488268	PrimaryExpression	0		6488227	0					
ANR	6488269	ExpressionStatement	req . req = DbgKdReadPhysicalMemoryApi	926:1:20677:20713	6488227	4	True				
ANR	6488270	AssignmentExpression	req . req = DbgKdReadPhysicalMemoryApi		6488227	0		=			
ANR	6488271	MemberAccess	req . req		6488227	0					
ANR	6488272	Identifier	req		6488227	0					
ANR	6488273	Identifier	req		6488227	1					
ANR	6488274	Identifier	DbgKdReadPhysicalMemoryApi		6488227	1					
ANR	6488275	ExpressionStatement	req . cpu = ctx -> cpu	927:1:20716:20734	6488227	5	True				
ANR	6488276	AssignmentExpression	req . cpu = ctx -> cpu		6488227	0		=			
ANR	6488277	MemberAccess	req . cpu		6488227	0					
ANR	6488278	Identifier	req		6488227	0					
ANR	6488279	Identifier	cpu		6488227	1					
ANR	6488280	PtrMemberAccess	ctx -> cpu		6488227	1					
ANR	6488281	Identifier	ctx		6488227	0					
ANR	6488282	Identifier	cpu		6488227	1					
ANR	6488283	ExpressionStatement	req . r_mem . addr = offset	928:1:20737:20760	6488227	6	True				
ANR	6488284	AssignmentExpression	req . r_mem . addr = offset		6488227	0		=			
ANR	6488285	MemberAccess	req . r_mem . addr		6488227	0					
ANR	6488286	MemberAccess	req . r_mem		6488227	0					
ANR	6488287	Identifier	req		6488227	0					
ANR	6488288	Identifier	r_mem		6488227	1					
ANR	6488289	Identifier	addr		6488227	1					
ANR	6488290	Identifier	offset		6488227	1					
ANR	6488291	ExpressionStatement	"req . r_mem . length = R_MIN ( count , KD_MAX_PAYLOAD )"	929:1:20763:20811	6488227	7	True				
ANR	6488292	AssignmentExpression	"req . r_mem . length = R_MIN ( count , KD_MAX_PAYLOAD )"		6488227	0		=			
ANR	6488293	MemberAccess	req . r_mem . length		6488227	0					
ANR	6488294	MemberAccess	req . r_mem		6488227	0					
ANR	6488295	Identifier	req		6488227	0					
ANR	6488296	Identifier	r_mem		6488227	1					
ANR	6488297	Identifier	length		6488227	1					
ANR	6488298	CallExpression	"R_MIN ( count , KD_MAX_PAYLOAD )"		6488227	1					
ANR	6488299	Callee	R_MIN		6488227	0					
ANR	6488300	Identifier	R_MIN		6488227	0					
ANR	6488301	ArgumentList	count		6488227	1					
ANR	6488302	Argument	count		6488227	0					
ANR	6488303	Identifier	count		6488227	0					
ANR	6488304	Argument	KD_MAX_PAYLOAD		6488227	1					
ANR	6488305	Identifier	KD_MAX_PAYLOAD		6488227	0					
ANR	6488306	ExpressionStatement	req . r_mem . read = 0	930:1:20814:20832	6488227	8	True				
ANR	6488307	AssignmentExpression	req . r_mem . read = 0		6488227	0		=			
ANR	6488308	MemberAccess	req . r_mem . read		6488227	0					
ANR	6488309	MemberAccess	req . r_mem		6488227	0					
ANR	6488310	Identifier	req		6488227	0					
ANR	6488311	Identifier	r_mem		6488227	1					
ANR	6488312	Identifier	read		6488227	1					
ANR	6488313	PrimaryExpression	0		6488227	1					
ANR	6488314	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	932:1:20862:21001	6488227	9	True				
ANR	6488315	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6488227	0		=			
ANR	6488316	Identifier	ret		6488227	0					
ANR	6488317	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6488227	1					
ANR	6488318	Callee	kd_send_data_packet		6488227	0					
ANR	6488319	Identifier	kd_send_data_packet		6488227	0					
ANR	6488320	ArgumentList	ctx -> io_ptr		6488227	1					
ANR	6488321	Argument	ctx -> io_ptr		6488227	0					
ANR	6488322	PtrMemberAccess	ctx -> io_ptr		6488227	0					
ANR	6488323	Identifier	ctx		6488227	0					
ANR	6488324	Identifier	io_ptr		6488227	1					
ANR	6488325	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6488227	1					
ANR	6488326	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6488227	0					
ANR	6488327	Argument	ctx -> seq_id ^= 1		6488227	2					
ANR	6488328	AssignmentExpression	ctx -> seq_id ^= 1		6488227	0		^=			
ANR	6488329	PtrMemberAccess	ctx -> seq_id		6488227	0					
ANR	6488330	Identifier	ctx		6488227	0					
ANR	6488331	Identifier	seq_id		6488227	1					
ANR	6488332	PrimaryExpression	1		6488227	1					
ANR	6488333	Argument	( uint8_t * ) & req		6488227	3					
ANR	6488334	CastExpression	( uint8_t * ) & req		6488227	0					
ANR	6488335	CastTarget	uint8_t *		6488227	0					
ANR	6488336	UnaryOperationExpression	& req		6488227	1					
ANR	6488337	UnaryOperator	&		6488227	0					
ANR	6488338	Identifier	req		6488227	1					
ANR	6488339	Argument	sizeof ( kd_req_t )		6488227	4					
ANR	6488340	SizeofExpression	sizeof ( kd_req_t )		6488227	0					
ANR	6488341	Sizeof	sizeof		6488227	0					
ANR	6488342	SizeofOperand	kd_req_t		6488227	1					
ANR	6488343	Argument	NULL		6488227	5					
ANR	6488344	Identifier	NULL		6488227	0					
ANR	6488345	Argument	0		6488227	6					
ANR	6488346	PrimaryExpression	0		6488227	0					
ANR	6488347	IfStatement	if ( ret != KD_E_OK )		6488227	10					
ANR	6488348	Condition	ret != KD_E_OK	934:5:21008:21021	6488227	0	True				
ANR	6488349	EqualityExpression	ret != KD_E_OK		6488227	0		!=			
ANR	6488350	Identifier	ret		6488227	0					
ANR	6488351	Identifier	KD_E_OK		6488227	1					
ANR	6488352	CompoundStatement		19:21:469:469	6488227	1					
ANR	6488353	ReturnStatement	return 0 ;	935:2:21028:21036	6488227	0	True				
ANR	6488354	PrimaryExpression	0		6488227	0					
ANR	6488355	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	938:1:21043:21107	6488227	11	True				
ANR	6488356	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6488227	0		=			
ANR	6488357	Identifier	ret		6488227	0					
ANR	6488358	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6488227	1					
ANR	6488359	Callee	windbg_wait_packet		6488227	0					
ANR	6488360	Identifier	windbg_wait_packet		6488227	0					
ANR	6488361	ArgumentList	ctx		6488227	1					
ANR	6488362	Argument	ctx		6488227	0					
ANR	6488363	Identifier	ctx		6488227	0					
ANR	6488364	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6488227	1					
ANR	6488365	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6488227	0					
ANR	6488366	Argument	NULL		6488227	2					
ANR	6488367	Identifier	NULL		6488227	0					
ANR	6488368	IfStatement	if ( ret != KD_E_OK )		6488227	12					
ANR	6488369	Condition	ret != KD_E_OK	939:5:21114:21127	6488227	0	True				
ANR	6488370	EqualityExpression	ret != KD_E_OK		6488227	0		!=			
ANR	6488371	Identifier	ret		6488227	0					
ANR	6488372	Identifier	KD_E_OK		6488227	1					
ANR	6488373	CompoundStatement		24:21:575:575	6488227	1					
ANR	6488374	ReturnStatement	return 0 ;	940:2:21134:21142	6488227	0	True				
ANR	6488375	PrimaryExpression	0		6488227	0					
ANR	6488376	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	943:1:21149:21218	6488227	13	True				
ANR	6488377	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6488227	0		=			
ANR	6488378	Identifier	ret		6488227	0					
ANR	6488379	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6488227	1					
ANR	6488380	Callee	windbg_wait_packet		6488227	0					
ANR	6488381	Identifier	windbg_wait_packet		6488227	0					
ANR	6488382	ArgumentList	ctx		6488227	1					
ANR	6488383	Argument	ctx		6488227	0					
ANR	6488384	Identifier	ctx		6488227	0					
ANR	6488385	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6488227	1					
ANR	6488386	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6488227	0					
ANR	6488387	Argument	& pkt		6488227	2					
ANR	6488388	UnaryOperationExpression	& pkt		6488227	0					
ANR	6488389	UnaryOperator	&		6488227	0					
ANR	6488390	Identifier	pkt		6488227	1					
ANR	6488391	IfStatement	if ( ret != KD_E_OK )		6488227	14					
ANR	6488392	Condition	ret != KD_E_OK	944:5:21225:21238	6488227	0	True				
ANR	6488393	EqualityExpression	ret != KD_E_OK		6488227	0		!=			
ANR	6488394	Identifier	ret		6488227	0					
ANR	6488395	Identifier	KD_E_OK		6488227	1					
ANR	6488396	CompoundStatement		29:21:686:686	6488227	1					
ANR	6488397	ReturnStatement	return 0 ;	945:2:21245:21253	6488227	0	True				
ANR	6488398	PrimaryExpression	0		6488227	0					
ANR	6488399	ExpressionStatement	rr = PKT_REQ ( pkt )	948:1:21260:21278	6488227	15	True				
ANR	6488400	AssignmentExpression	rr = PKT_REQ ( pkt )		6488227	0		=			
ANR	6488401	Identifier	rr		6488227	0					
ANR	6488402	CallExpression	PKT_REQ ( pkt )		6488227	1					
ANR	6488403	Callee	PKT_REQ		6488227	0					
ANR	6488404	Identifier	PKT_REQ		6488227	0					
ANR	6488405	ArgumentList	pkt		6488227	1					
ANR	6488406	Argument	pkt		6488227	0					
ANR	6488407	Identifier	pkt		6488227	0					
ANR	6488408	IfStatement	if ( rr -> ret )		6488227	16					
ANR	6488409	Condition	rr -> ret	950:5:21286:21292	6488227	0	True				
ANR	6488410	PtrMemberAccess	rr -> ret		6488227	0					
ANR	6488411	Identifier	rr		6488227	0					
ANR	6488412	Identifier	ret		6488227	1					
ANR	6488413	CompoundStatement		35:14:740:740	6488227	1					
ANR	6488414	ExpressionStatement	free ( pkt )	951:2:21299:21309	6488227	0	True				
ANR	6488415	CallExpression	free ( pkt )		6488227	0					
ANR	6488416	Callee	free		6488227	0					
ANR	6488417	Identifier	free		6488227	0					
ANR	6488418	ArgumentList	pkt		6488227	1					
ANR	6488419	Argument	pkt		6488227	0					
ANR	6488420	Identifier	pkt		6488227	0					
ANR	6488421	ReturnStatement	return 0 ;	952:2:21313:21321	6488227	1	True				
ANR	6488422	PrimaryExpression	0		6488227	0					
ANR	6488423	ExpressionStatement	"memcpy ( buf , rr -> data , rr -> r_mem . read )"	955:1:21328:21366	6488227	17	True				
ANR	6488424	CallExpression	"memcpy ( buf , rr -> data , rr -> r_mem . read )"		6488227	0					
ANR	6488425	Callee	memcpy		6488227	0					
ANR	6488426	Identifier	memcpy		6488227	0					
ANR	6488427	ArgumentList	buf		6488227	1					
ANR	6488428	Argument	buf		6488227	0					
ANR	6488429	Identifier	buf		6488227	0					
ANR	6488430	Argument	rr -> data		6488227	1					
ANR	6488431	PtrMemberAccess	rr -> data		6488227	0					
ANR	6488432	Identifier	rr		6488227	0					
ANR	6488433	Identifier	data		6488227	1					
ANR	6488434	Argument	rr -> r_mem . read		6488227	2					
ANR	6488435	MemberAccess	rr -> r_mem . read		6488227	0					
ANR	6488436	PtrMemberAccess	rr -> r_mem		6488227	0					
ANR	6488437	Identifier	rr		6488227	0					
ANR	6488438	Identifier	r_mem		6488227	1					
ANR	6488439	Identifier	read		6488227	1					
ANR	6488440	ExpressionStatement	ret = rr -> r_mem . read	956:1:21369:21389	6488227	18	True				
ANR	6488441	AssignmentExpression	ret = rr -> r_mem . read		6488227	0		=			
ANR	6488442	Identifier	ret		6488227	0					
ANR	6488443	MemberAccess	rr -> r_mem . read		6488227	1					
ANR	6488444	PtrMemberAccess	rr -> r_mem		6488227	0					
ANR	6488445	Identifier	rr		6488227	0					
ANR	6488446	Identifier	r_mem		6488227	1					
ANR	6488447	Identifier	read		6488227	1					
ANR	6488448	ExpressionStatement	free ( pkt )	957:1:21392:21402	6488227	19	True				
ANR	6488449	CallExpression	free ( pkt )		6488227	0					
ANR	6488450	Callee	free		6488227	0					
ANR	6488451	Identifier	free		6488227	0					
ANR	6488452	ArgumentList	pkt		6488227	1					
ANR	6488453	Argument	pkt		6488227	0					
ANR	6488454	Identifier	pkt		6488227	0					
ANR	6488455	ReturnStatement	return ret ;	958:1:21405:21415	6488227	20	True				
ANR	6488456	Identifier	ret		6488227	0					
ANR	6488457	ReturnType	int		6488227	1					
ANR	6488458	Identifier	windbg_read_at_phys		6488227	2					
ANR	6488459	ParameterList	"WindCtx * ctx , uint8_t * buf , const ut64 offset , const int count"		6488227	3					
ANR	6488460	Parameter	WindCtx * ctx	916:24:20490:20501	6488227	0	True				
ANR	6488461	ParameterType	WindCtx *		6488227	0					
ANR	6488462	Identifier	ctx		6488227	1					
ANR	6488463	Parameter	uint8_t * buf	916:38:20504:20515	6488227	1	True				
ANR	6488464	ParameterType	uint8_t *		6488227	0					
ANR	6488465	Identifier	buf		6488227	1					
ANR	6488466	Parameter	const ut64 offset	916:52:20518:20534	6488227	2	True				
ANR	6488467	ParameterType	const ut64		6488227	0					
ANR	6488468	Identifier	offset		6488227	1					
ANR	6488469	Parameter	const int count	916:71:20537:20551	6488227	3	True				
ANR	6488470	ParameterType	const int		6488227	0					
ANR	6488471	Identifier	count		6488227	1					
ANR	6488472	CFGEntryNode	ENTRY		6488227		True				
ANR	6488473	CFGExitNode	EXIT		6488227		True				
ANR	6488474	Symbol	rr		6488227						
ANR	6488475	Symbol	PKT_REQ		6488227						
ANR	6488476	Symbol	& req		6488227						
ANR	6488477	Symbol	rr -> r_mem		6488227						
ANR	6488478	Symbol	req . req		6488227						
ANR	6488479	Symbol	req . r_mem . length		6488227						
ANR	6488480	Symbol	req . r_mem		6488227						
ANR	6488481	Symbol	rr -> r_mem . read		6488227						
ANR	6488482	Symbol	ctx -> cpu		6488227						
ANR	6488483	Symbol	rr -> data		6488227						
ANR	6488484	Symbol	req . cpu		6488227						
ANR	6488485	Symbol	pkt		6488227						
ANR	6488486	Symbol	rr -> ret		6488227						
ANR	6488487	Symbol	windbg_wait_packet		6488227						
ANR	6488488	Symbol	ctx -> syncd		6488227						
ANR	6488489	Symbol	req		6488227						
ANR	6488490	Symbol	ret		6488227						
ANR	6488491	Symbol	kd_send_data_packet		6488227						
ANR	6488492	Symbol	NULL		6488227						
ANR	6488493	Symbol	offset		6488227						
ANR	6488494	Symbol	KD_E_OK		6488227						
ANR	6488495	Symbol	* rr		6488227						
ANR	6488496	Symbol	ctx		6488227						
ANR	6488497	Symbol	count		6488227						
ANR	6488498	Symbol	R_MIN		6488227						
ANR	6488499	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6488227						
ANR	6488500	Symbol	KD_MAX_PAYLOAD		6488227						
ANR	6488501	Symbol	* ctx		6488227						
ANR	6488502	Symbol	req . r_mem . read		6488227						
ANR	6488503	Symbol	ctx -> io_ptr		6488227						
ANR	6488504	Symbol	buf		6488227						
ANR	6488505	Symbol	req . r_mem . addr		6488227						
ANR	6488506	Symbol	DbgKdReadPhysicalMemoryApi		6488227						
ANR	6488507	Symbol	ctx -> seq_id		6488227						
ANR	6488508	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6488227						
ANR	6488509	Symbol	& pkt		6488227						
ANR	6488510	Function	windbg_read_at	961:0:21420:22315							
ANR	6488511	FunctionDef	"windbg_read_at (WindCtx * ctx , uint8_t * buf , const ut64 offset , const int count)"		6488510	0					
ANR	6488512	CompoundStatement		961:83:21503:22315	6488510	0					
ANR	6488513	IdentifierDeclStatement	"kd_req_t * rr , req = { 0 } ;"	962:1:21506:21534	6488510	0	True				
ANR	6488514	IdentifierDecl	* rr		6488510	0					
ANR	6488515	IdentifierDeclType	kd_req_t *		6488510	0					
ANR	6488516	Identifier	rr		6488510	1					
ANR	6488517	IdentifierDecl	req = { 0 }		6488510	1					
ANR	6488518	IdentifierDeclType	kd_req_t		6488510	0					
ANR	6488519	Identifier	req		6488510	1					
ANR	6488520	AssignmentExpression	req = { 0 }		6488510	2		=			
ANR	6488521	Identifier	req		6488510	0					
ANR	6488522	InitializerList	0		6488510	1					
ANR	6488523	PrimaryExpression	0		6488510	0					
ANR	6488524	IdentifierDeclStatement	kd_packet_t * pkt ;	965:1:21537:21553	6488510	1	True				
ANR	6488525	IdentifierDecl	* pkt		6488510	0					
ANR	6488526	IdentifierDeclType	kd_packet_t *		6488510	0					
ANR	6488527	Identifier	pkt		6488510	1					
ANR	6488528	IdentifierDeclStatement	int ret ;	966:1:21556:21563	6488510	2	True				
ANR	6488529	IdentifierDecl	ret		6488510	0					
ANR	6488530	IdentifierDeclType	int		6488510	0					
ANR	6488531	Identifier	ret		6488510	1					
ANR	6488532	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6488510	3					
ANR	6488533	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	968:5:21571:21605	6488510	0	True				
ANR	6488534	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6488510	0		||			
ANR	6488535	UnaryOperationExpression	! ctx		6488510	0					
ANR	6488536	UnaryOperator	!		6488510	0					
ANR	6488537	Identifier	ctx		6488510	1					
ANR	6488538	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6488510	1		||			
ANR	6488539	UnaryOperationExpression	! ctx -> io_ptr		6488510	0					
ANR	6488540	UnaryOperator	!		6488510	0					
ANR	6488541	PtrMemberAccess	ctx -> io_ptr		6488510	1					
ANR	6488542	Identifier	ctx		6488510	0					
ANR	6488543	Identifier	io_ptr		6488510	1					
ANR	6488544	UnaryOperationExpression	! ctx -> syncd		6488510	1					
ANR	6488545	UnaryOperator	!		6488510	0					
ANR	6488546	PtrMemberAccess	ctx -> syncd		6488510	1					
ANR	6488547	Identifier	ctx		6488510	0					
ANR	6488548	Identifier	syncd		6488510	1					
ANR	6488549	CompoundStatement		8:42:104:104	6488510	1					
ANR	6488550	ReturnStatement	return 0 ;	969:2:21612:21620	6488510	0	True				
ANR	6488551	PrimaryExpression	0		6488510	0					
ANR	6488552	ExpressionStatement	req . req = DbgKdReadVirtualMemoryApi	971:1:21626:21661	6488510	4	True				
ANR	6488553	AssignmentExpression	req . req = DbgKdReadVirtualMemoryApi		6488510	0		=			
ANR	6488554	MemberAccess	req . req		6488510	0					
ANR	6488555	Identifier	req		6488510	0					
ANR	6488556	Identifier	req		6488510	1					
ANR	6488557	Identifier	DbgKdReadVirtualMemoryApi		6488510	1					
ANR	6488558	ExpressionStatement	req . cpu = ctx -> cpu	972:1:21664:21682	6488510	5	True				
ANR	6488559	AssignmentExpression	req . cpu = ctx -> cpu		6488510	0		=			
ANR	6488560	MemberAccess	req . cpu		6488510	0					
ANR	6488561	Identifier	req		6488510	0					
ANR	6488562	Identifier	cpu		6488510	1					
ANR	6488563	PtrMemberAccess	ctx -> cpu		6488510	1					
ANR	6488564	Identifier	ctx		6488510	0					
ANR	6488565	Identifier	cpu		6488510	1					
ANR	6488566	ExpressionStatement	req . r_mem . addr = offset	973:1:21685:21708	6488510	6	True				
ANR	6488567	AssignmentExpression	req . r_mem . addr = offset		6488510	0		=			
ANR	6488568	MemberAccess	req . r_mem . addr		6488510	0					
ANR	6488569	MemberAccess	req . r_mem		6488510	0					
ANR	6488570	Identifier	req		6488510	0					
ANR	6488571	Identifier	r_mem		6488510	1					
ANR	6488572	Identifier	addr		6488510	1					
ANR	6488573	Identifier	offset		6488510	1					
ANR	6488574	ExpressionStatement	"req . r_mem . length = R_MIN ( count , KD_MAX_PAYLOAD )"	974:1:21711:21759	6488510	7	True				
ANR	6488575	AssignmentExpression	"req . r_mem . length = R_MIN ( count , KD_MAX_PAYLOAD )"		6488510	0		=			
ANR	6488576	MemberAccess	req . r_mem . length		6488510	0					
ANR	6488577	MemberAccess	req . r_mem		6488510	0					
ANR	6488578	Identifier	req		6488510	0					
ANR	6488579	Identifier	r_mem		6488510	1					
ANR	6488580	Identifier	length		6488510	1					
ANR	6488581	CallExpression	"R_MIN ( count , KD_MAX_PAYLOAD )"		6488510	1					
ANR	6488582	Callee	R_MIN		6488510	0					
ANR	6488583	Identifier	R_MIN		6488510	0					
ANR	6488584	ArgumentList	count		6488510	1					
ANR	6488585	Argument	count		6488510	0					
ANR	6488586	Identifier	count		6488510	0					
ANR	6488587	Argument	KD_MAX_PAYLOAD		6488510	1					
ANR	6488588	Identifier	KD_MAX_PAYLOAD		6488510	0					
ANR	6488589	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"	975:1:21762:21901	6488510	8	True				
ANR	6488590	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6488510	0		=			
ANR	6488591	Identifier	ret		6488510	0					
ANR	6488592	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , NULL , 0 )"		6488510	1					
ANR	6488593	Callee	kd_send_data_packet		6488510	0					
ANR	6488594	Identifier	kd_send_data_packet		6488510	0					
ANR	6488595	ArgumentList	ctx -> io_ptr		6488510	1					
ANR	6488596	Argument	ctx -> io_ptr		6488510	0					
ANR	6488597	PtrMemberAccess	ctx -> io_ptr		6488510	0					
ANR	6488598	Identifier	ctx		6488510	0					
ANR	6488599	Identifier	io_ptr		6488510	1					
ANR	6488600	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6488510	1					
ANR	6488601	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6488510	0					
ANR	6488602	Argument	ctx -> seq_id ^= 1		6488510	2					
ANR	6488603	AssignmentExpression	ctx -> seq_id ^= 1		6488510	0		^=			
ANR	6488604	PtrMemberAccess	ctx -> seq_id		6488510	0					
ANR	6488605	Identifier	ctx		6488510	0					
ANR	6488606	Identifier	seq_id		6488510	1					
ANR	6488607	PrimaryExpression	1		6488510	1					
ANR	6488608	Argument	( uint8_t * ) & req		6488510	3					
ANR	6488609	CastExpression	( uint8_t * ) & req		6488510	0					
ANR	6488610	CastTarget	uint8_t *		6488510	0					
ANR	6488611	UnaryOperationExpression	& req		6488510	1					
ANR	6488612	UnaryOperator	&		6488510	0					
ANR	6488613	Identifier	req		6488510	1					
ANR	6488614	Argument	sizeof ( kd_req_t )		6488510	4					
ANR	6488615	SizeofExpression	sizeof ( kd_req_t )		6488510	0					
ANR	6488616	Sizeof	sizeof		6488510	0					
ANR	6488617	SizeofOperand	kd_req_t		6488510	1					
ANR	6488618	Argument	NULL		6488510	5					
ANR	6488619	Identifier	NULL		6488510	0					
ANR	6488620	Argument	0		6488510	6					
ANR	6488621	PrimaryExpression	0		6488510	0					
ANR	6488622	IfStatement	if ( ret != KD_E_OK )		6488510	9					
ANR	6488623	Condition	ret != KD_E_OK	977:5:21908:21921	6488510	0	True				
ANR	6488624	EqualityExpression	ret != KD_E_OK		6488510	0		!=			
ANR	6488625	Identifier	ret		6488510	0					
ANR	6488626	Identifier	KD_E_OK		6488510	1					
ANR	6488627	CompoundStatement		17:21:420:420	6488510	1					
ANR	6488628	ReturnStatement	return 0 ;	978:2:21928:21936	6488510	0	True				
ANR	6488629	PrimaryExpression	0		6488510	0					
ANR	6488630	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	981:1:21943:22007	6488510	10	True				
ANR	6488631	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6488510	0		=			
ANR	6488632	Identifier	ret		6488510	0					
ANR	6488633	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6488510	1					
ANR	6488634	Callee	windbg_wait_packet		6488510	0					
ANR	6488635	Identifier	windbg_wait_packet		6488510	0					
ANR	6488636	ArgumentList	ctx		6488510	1					
ANR	6488637	Argument	ctx		6488510	0					
ANR	6488638	Identifier	ctx		6488510	0					
ANR	6488639	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6488510	1					
ANR	6488640	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6488510	0					
ANR	6488641	Argument	NULL		6488510	2					
ANR	6488642	Identifier	NULL		6488510	0					
ANR	6488643	IfStatement	if ( ret != KD_E_OK )		6488510	11					
ANR	6488644	Condition	ret != KD_E_OK	982:5:22014:22027	6488510	0	True				
ANR	6488645	EqualityExpression	ret != KD_E_OK		6488510	0		!=			
ANR	6488646	Identifier	ret		6488510	0					
ANR	6488647	Identifier	KD_E_OK		6488510	1					
ANR	6488648	CompoundStatement		22:21:526:526	6488510	1					
ANR	6488649	ReturnStatement	return 0 ;	983:2:22034:22042	6488510	0	True				
ANR	6488650	PrimaryExpression	0		6488510	0					
ANR	6488651	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	985:1:22048:22117	6488510	12	True				
ANR	6488652	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6488510	0		=			
ANR	6488653	Identifier	ret		6488510	0					
ANR	6488654	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6488510	1					
ANR	6488655	Callee	windbg_wait_packet		6488510	0					
ANR	6488656	Identifier	windbg_wait_packet		6488510	0					
ANR	6488657	ArgumentList	ctx		6488510	1					
ANR	6488658	Argument	ctx		6488510	0					
ANR	6488659	Identifier	ctx		6488510	0					
ANR	6488660	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6488510	1					
ANR	6488661	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6488510	0					
ANR	6488662	Argument	& pkt		6488510	2					
ANR	6488663	UnaryOperationExpression	& pkt		6488510	0					
ANR	6488664	UnaryOperator	&		6488510	0					
ANR	6488665	Identifier	pkt		6488510	1					
ANR	6488666	IfStatement	if ( ret != KD_E_OK )		6488510	13					
ANR	6488667	Condition	ret != KD_E_OK	986:5:22124:22137	6488510	0	True				
ANR	6488668	EqualityExpression	ret != KD_E_OK		6488510	0		!=			
ANR	6488669	Identifier	ret		6488510	0					
ANR	6488670	Identifier	KD_E_OK		6488510	1					
ANR	6488671	CompoundStatement		26:21:636:636	6488510	1					
ANR	6488672	ReturnStatement	return 0 ;	987:2:22144:22152	6488510	0	True				
ANR	6488673	PrimaryExpression	0		6488510	0					
ANR	6488674	ExpressionStatement	rr = PKT_REQ ( pkt )	989:1:22158:22176	6488510	14	True				
ANR	6488675	AssignmentExpression	rr = PKT_REQ ( pkt )		6488510	0		=			
ANR	6488676	Identifier	rr		6488510	0					
ANR	6488677	CallExpression	PKT_REQ ( pkt )		6488510	1					
ANR	6488678	Callee	PKT_REQ		6488510	0					
ANR	6488679	Identifier	PKT_REQ		6488510	0					
ANR	6488680	ArgumentList	pkt		6488510	1					
ANR	6488681	Argument	pkt		6488510	0					
ANR	6488682	Identifier	pkt		6488510	0					
ANR	6488683	IfStatement	if ( rr -> ret )		6488510	15					
ANR	6488684	Condition	rr -> ret	991:5:22184:22190	6488510	0	True				
ANR	6488685	PtrMemberAccess	rr -> ret		6488510	0					
ANR	6488686	Identifier	rr		6488510	0					
ANR	6488687	Identifier	ret		6488510	1					
ANR	6488688	CompoundStatement		31:14:689:689	6488510	1					
ANR	6488689	ExpressionStatement	free ( pkt )	992:2:22197:22207	6488510	0	True				
ANR	6488690	CallExpression	free ( pkt )		6488510	0					
ANR	6488691	Callee	free		6488510	0					
ANR	6488692	Identifier	free		6488510	0					
ANR	6488693	ArgumentList	pkt		6488510	1					
ANR	6488694	Argument	pkt		6488510	0					
ANR	6488695	Identifier	pkt		6488510	0					
ANR	6488696	ReturnStatement	return 0 ;	993:2:22211:22219	6488510	1	True				
ANR	6488697	PrimaryExpression	0		6488510	0					
ANR	6488698	ExpressionStatement	"memcpy ( buf , rr -> data , rr -> r_mem . read )"	996:1:22226:22264	6488510	16	True				
ANR	6488699	CallExpression	"memcpy ( buf , rr -> data , rr -> r_mem . read )"		6488510	0					
ANR	6488700	Callee	memcpy		6488510	0					
ANR	6488701	Identifier	memcpy		6488510	0					
ANR	6488702	ArgumentList	buf		6488510	1					
ANR	6488703	Argument	buf		6488510	0					
ANR	6488704	Identifier	buf		6488510	0					
ANR	6488705	Argument	rr -> data		6488510	1					
ANR	6488706	PtrMemberAccess	rr -> data		6488510	0					
ANR	6488707	Identifier	rr		6488510	0					
ANR	6488708	Identifier	data		6488510	1					
ANR	6488709	Argument	rr -> r_mem . read		6488510	2					
ANR	6488710	MemberAccess	rr -> r_mem . read		6488510	0					
ANR	6488711	PtrMemberAccess	rr -> r_mem		6488510	0					
ANR	6488712	Identifier	rr		6488510	0					
ANR	6488713	Identifier	r_mem		6488510	1					
ANR	6488714	Identifier	read		6488510	1					
ANR	6488715	ExpressionStatement	ret = rr -> r_mem . read	997:1:22267:22287	6488510	17	True				
ANR	6488716	AssignmentExpression	ret = rr -> r_mem . read		6488510	0		=			
ANR	6488717	Identifier	ret		6488510	0					
ANR	6488718	MemberAccess	rr -> r_mem . read		6488510	1					
ANR	6488719	PtrMemberAccess	rr -> r_mem		6488510	0					
ANR	6488720	Identifier	rr		6488510	0					
ANR	6488721	Identifier	r_mem		6488510	1					
ANR	6488722	Identifier	read		6488510	1					
ANR	6488723	ExpressionStatement	free ( pkt )	998:1:22290:22300	6488510	18	True				
ANR	6488724	CallExpression	free ( pkt )		6488510	0					
ANR	6488725	Callee	free		6488510	0					
ANR	6488726	Identifier	free		6488510	0					
ANR	6488727	ArgumentList	pkt		6488510	1					
ANR	6488728	Argument	pkt		6488510	0					
ANR	6488729	Identifier	pkt		6488510	0					
ANR	6488730	ReturnStatement	return ret ;	999:1:22303:22313	6488510	19	True				
ANR	6488731	Identifier	ret		6488510	0					
ANR	6488732	ReturnType	int		6488510	1					
ANR	6488733	Identifier	windbg_read_at		6488510	2					
ANR	6488734	ParameterList	"WindCtx * ctx , uint8_t * buf , const ut64 offset , const int count"		6488510	3					
ANR	6488735	Parameter	WindCtx * ctx	961:19:21439:21450	6488510	0	True				
ANR	6488736	ParameterType	WindCtx *		6488510	0					
ANR	6488737	Identifier	ctx		6488510	1					
ANR	6488738	Parameter	uint8_t * buf	961:33:21453:21464	6488510	1	True				
ANR	6488739	ParameterType	uint8_t *		6488510	0					
ANR	6488740	Identifier	buf		6488510	1					
ANR	6488741	Parameter	const ut64 offset	961:47:21467:21483	6488510	2	True				
ANR	6488742	ParameterType	const ut64		6488510	0					
ANR	6488743	Identifier	offset		6488510	1					
ANR	6488744	Parameter	const int count	961:66:21486:21500	6488510	3	True				
ANR	6488745	ParameterType	const int		6488510	0					
ANR	6488746	Identifier	count		6488510	1					
ANR	6488747	CFGEntryNode	ENTRY		6488510		True				
ANR	6488748	CFGExitNode	EXIT		6488510		True				
ANR	6488749	Symbol	rr		6488510						
ANR	6488750	Symbol	PKT_REQ		6488510						
ANR	6488751	Symbol	& req		6488510						
ANR	6488752	Symbol	rr -> r_mem		6488510						
ANR	6488753	Symbol	req . req		6488510						
ANR	6488754	Symbol	req . r_mem . length		6488510						
ANR	6488755	Symbol	req . r_mem		6488510						
ANR	6488756	Symbol	rr -> r_mem . read		6488510						
ANR	6488757	Symbol	ctx -> cpu		6488510						
ANR	6488758	Symbol	rr -> data		6488510						
ANR	6488759	Symbol	req . cpu		6488510						
ANR	6488760	Symbol	pkt		6488510						
ANR	6488761	Symbol	rr -> ret		6488510						
ANR	6488762	Symbol	windbg_wait_packet		6488510						
ANR	6488763	Symbol	ctx -> syncd		6488510						
ANR	6488764	Symbol	req		6488510						
ANR	6488765	Symbol	ret		6488510						
ANR	6488766	Symbol	kd_send_data_packet		6488510						
ANR	6488767	Symbol	NULL		6488510						
ANR	6488768	Symbol	offset		6488510						
ANR	6488769	Symbol	KD_E_OK		6488510						
ANR	6488770	Symbol	* rr		6488510						
ANR	6488771	Symbol	ctx		6488510						
ANR	6488772	Symbol	count		6488510						
ANR	6488773	Symbol	R_MIN		6488510						
ANR	6488774	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6488510						
ANR	6488775	Symbol	KD_MAX_PAYLOAD		6488510						
ANR	6488776	Symbol	* ctx		6488510						
ANR	6488777	Symbol	ctx -> io_ptr		6488510						
ANR	6488778	Symbol	buf		6488510						
ANR	6488779	Symbol	req . r_mem . addr		6488510						
ANR	6488780	Symbol	ctx -> seq_id		6488510						
ANR	6488781	Symbol	DbgKdReadVirtualMemoryApi		6488510						
ANR	6488782	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6488510						
ANR	6488783	Symbol	& pkt		6488510						
ANR	6488784	Function	windbg_write_at	1002:0:22318:23239							
ANR	6488785	FunctionDef	"windbg_write_at (WindCtx * ctx , const uint8_t * buf , const ut64 offset , const int count)"		6488784	0					
ANR	6488786	CompoundStatement		1002:90:22408:23239	6488784	0					
ANR	6488787	IdentifierDeclStatement	kd_packet_t * pkt ;	1003:1:22411:22427	6488784	0	True				
ANR	6488788	IdentifierDecl	* pkt		6488784	0					
ANR	6488789	IdentifierDeclType	kd_packet_t *		6488784	0					
ANR	6488790	Identifier	pkt		6488784	1					
ANR	6488791	IdentifierDeclStatement	"kd_req_t req = { 0 } , * rr ;"	1004:1:22430:22458	6488784	1	True				
ANR	6488792	IdentifierDecl	req = { 0 }		6488784	0					
ANR	6488793	IdentifierDeclType	kd_req_t		6488784	0					
ANR	6488794	Identifier	req		6488784	1					
ANR	6488795	AssignmentExpression	req = { 0 }		6488784	2		=			
ANR	6488796	Identifier	req		6488784	0					
ANR	6488797	InitializerList	0		6488784	1					
ANR	6488798	PrimaryExpression	0		6488784	0					
ANR	6488799	IdentifierDecl	* rr		6488784	1					
ANR	6488800	IdentifierDeclType	kd_req_t *		6488784	0					
ANR	6488801	Identifier	rr		6488784	1					
ANR	6488802	IdentifierDeclStatement	"int payload , ret ;"	1007:1:22461:22477	6488784	2	True				
ANR	6488803	IdentifierDecl	payload		6488784	0					
ANR	6488804	IdentifierDeclType	int		6488784	0					
ANR	6488805	Identifier	payload		6488784	1					
ANR	6488806	IdentifierDecl	ret		6488784	1					
ANR	6488807	IdentifierDeclType	int		6488784	0					
ANR	6488808	Identifier	ret		6488784	1					
ANR	6488809	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6488784	3					
ANR	6488810	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	1009:5:22485:22519	6488784	0	True				
ANR	6488811	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6488784	0		||			
ANR	6488812	UnaryOperationExpression	! ctx		6488784	0					
ANR	6488813	UnaryOperator	!		6488784	0					
ANR	6488814	Identifier	ctx		6488784	1					
ANR	6488815	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6488784	1		||			
ANR	6488816	UnaryOperationExpression	! ctx -> io_ptr		6488784	0					
ANR	6488817	UnaryOperator	!		6488784	0					
ANR	6488818	PtrMemberAccess	ctx -> io_ptr		6488784	1					
ANR	6488819	Identifier	ctx		6488784	0					
ANR	6488820	Identifier	io_ptr		6488784	1					
ANR	6488821	UnaryOperationExpression	! ctx -> syncd		6488784	1					
ANR	6488822	UnaryOperator	!		6488784	0					
ANR	6488823	PtrMemberAccess	ctx -> syncd		6488784	1					
ANR	6488824	Identifier	ctx		6488784	0					
ANR	6488825	Identifier	syncd		6488784	1					
ANR	6488826	CompoundStatement		8:42:113:113	6488784	1					
ANR	6488827	ReturnStatement	return 0 ;	1010:2:22526:22534	6488784	0	True				
ANR	6488828	PrimaryExpression	0		6488784	0					
ANR	6488829	ExpressionStatement	"payload = R_MIN ( count , KD_MAX_PAYLOAD - sizeof ( kd_req_t ) )"	1013:1:22541:22599	6488784	4	True				
ANR	6488830	AssignmentExpression	"payload = R_MIN ( count , KD_MAX_PAYLOAD - sizeof ( kd_req_t ) )"		6488784	0		=			
ANR	6488831	Identifier	payload		6488784	0					
ANR	6488832	CallExpression	"R_MIN ( count , KD_MAX_PAYLOAD - sizeof ( kd_req_t ) )"		6488784	1					
ANR	6488833	Callee	R_MIN		6488784	0					
ANR	6488834	Identifier	R_MIN		6488784	0					
ANR	6488835	ArgumentList	count		6488784	1					
ANR	6488836	Argument	count		6488784	0					
ANR	6488837	Identifier	count		6488784	0					
ANR	6488838	Argument	KD_MAX_PAYLOAD - sizeof ( kd_req_t )		6488784	1					
ANR	6488839	AdditiveExpression	KD_MAX_PAYLOAD - sizeof ( kd_req_t )		6488784	0		-			
ANR	6488840	Identifier	KD_MAX_PAYLOAD		6488784	0					
ANR	6488841	SizeofExpression	sizeof ( kd_req_t )		6488784	1					
ANR	6488842	Sizeof	sizeof		6488784	0					
ANR	6488843	SizeofOperand	kd_req_t		6488784	1					
ANR	6488844	ExpressionStatement	req . req = DbgKdWriteVirtualMemoryApi	1014:1:22602:22638	6488784	5	True				
ANR	6488845	AssignmentExpression	req . req = DbgKdWriteVirtualMemoryApi		6488784	0		=			
ANR	6488846	MemberAccess	req . req		6488784	0					
ANR	6488847	Identifier	req		6488784	0					
ANR	6488848	Identifier	req		6488784	1					
ANR	6488849	Identifier	DbgKdWriteVirtualMemoryApi		6488784	1					
ANR	6488850	ExpressionStatement	req . cpu = ctx -> cpu	1015:1:22641:22659	6488784	6	True				
ANR	6488851	AssignmentExpression	req . cpu = ctx -> cpu		6488784	0		=			
ANR	6488852	MemberAccess	req . cpu		6488784	0					
ANR	6488853	Identifier	req		6488784	0					
ANR	6488854	Identifier	cpu		6488784	1					
ANR	6488855	PtrMemberAccess	ctx -> cpu		6488784	1					
ANR	6488856	Identifier	ctx		6488784	0					
ANR	6488857	Identifier	cpu		6488784	1					
ANR	6488858	ExpressionStatement	req . r_mem . addr = offset	1016:1:22662:22685	6488784	7	True				
ANR	6488859	AssignmentExpression	req . r_mem . addr = offset		6488784	0		=			
ANR	6488860	MemberAccess	req . r_mem . addr		6488784	0					
ANR	6488861	MemberAccess	req . r_mem		6488784	0					
ANR	6488862	Identifier	req		6488784	0					
ANR	6488863	Identifier	r_mem		6488784	1					
ANR	6488864	Identifier	addr		6488784	1					
ANR	6488865	Identifier	offset		6488784	1					
ANR	6488866	ExpressionStatement	req . r_mem . length = payload	1017:1:22688:22714	6488784	8	True				
ANR	6488867	AssignmentExpression	req . r_mem . length = payload		6488784	0		=			
ANR	6488868	MemberAccess	req . r_mem . length		6488784	0					
ANR	6488869	MemberAccess	req . r_mem		6488784	0					
ANR	6488870	Identifier	req		6488784	0					
ANR	6488871	Identifier	r_mem		6488784	1					
ANR	6488872	Identifier	length		6488784	1					
ANR	6488873	Identifier	payload		6488784	1					
ANR	6488874	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , payload )"	1019:1:22718:22864	6488784	9	True				
ANR	6488875	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , payload )"		6488784	0		=			
ANR	6488876	Identifier	ret		6488784	0					
ANR	6488877	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , payload )"		6488784	1					
ANR	6488878	Callee	kd_send_data_packet		6488784	0					
ANR	6488879	Identifier	kd_send_data_packet		6488784	0					
ANR	6488880	ArgumentList	ctx -> io_ptr		6488784	1					
ANR	6488881	Argument	ctx -> io_ptr		6488784	0					
ANR	6488882	PtrMemberAccess	ctx -> io_ptr		6488784	0					
ANR	6488883	Identifier	ctx		6488784	0					
ANR	6488884	Identifier	io_ptr		6488784	1					
ANR	6488885	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6488784	1					
ANR	6488886	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6488784	0					
ANR	6488887	Argument	ctx -> seq_id ^= 1		6488784	2					
ANR	6488888	AssignmentExpression	ctx -> seq_id ^= 1		6488784	0		^=			
ANR	6488889	PtrMemberAccess	ctx -> seq_id		6488784	0					
ANR	6488890	Identifier	ctx		6488784	0					
ANR	6488891	Identifier	seq_id		6488784	1					
ANR	6488892	PrimaryExpression	1		6488784	1					
ANR	6488893	Argument	( uint8_t * ) & req		6488784	3					
ANR	6488894	CastExpression	( uint8_t * ) & req		6488784	0					
ANR	6488895	CastTarget	uint8_t *		6488784	0					
ANR	6488896	UnaryOperationExpression	& req		6488784	1					
ANR	6488897	UnaryOperator	&		6488784	0					
ANR	6488898	Identifier	req		6488784	1					
ANR	6488899	Argument	sizeof ( kd_req_t )		6488784	4					
ANR	6488900	SizeofExpression	sizeof ( kd_req_t )		6488784	0					
ANR	6488901	Sizeof	sizeof		6488784	0					
ANR	6488902	SizeofOperand	kd_req_t		6488784	1					
ANR	6488903	Argument	buf		6488784	5					
ANR	6488904	Identifier	buf		6488784	0					
ANR	6488905	Argument	payload		6488784	6					
ANR	6488906	Identifier	payload		6488784	0					
ANR	6488907	IfStatement	if ( ret != KD_E_OK )		6488784	10					
ANR	6488908	Condition	ret != KD_E_OK	1022:5:22871:22884	6488784	0	True				
ANR	6488909	EqualityExpression	ret != KD_E_OK		6488784	0		!=			
ANR	6488910	Identifier	ret		6488784	0					
ANR	6488911	Identifier	KD_E_OK		6488784	1					
ANR	6488912	CompoundStatement		21:21:478:478	6488784	1					
ANR	6488913	ReturnStatement	return 0 ;	1023:2:22891:22899	6488784	0	True				
ANR	6488914	PrimaryExpression	0		6488784	0					
ANR	6488915	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	1026:1:22906:22970	6488784	11	True				
ANR	6488916	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6488784	0		=			
ANR	6488917	Identifier	ret		6488784	0					
ANR	6488918	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6488784	1					
ANR	6488919	Callee	windbg_wait_packet		6488784	0					
ANR	6488920	Identifier	windbg_wait_packet		6488784	0					
ANR	6488921	ArgumentList	ctx		6488784	1					
ANR	6488922	Argument	ctx		6488784	0					
ANR	6488923	Identifier	ctx		6488784	0					
ANR	6488924	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6488784	1					
ANR	6488925	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6488784	0					
ANR	6488926	Argument	NULL		6488784	2					
ANR	6488927	Identifier	NULL		6488784	0					
ANR	6488928	IfStatement	if ( ret != KD_E_OK )		6488784	12					
ANR	6488929	Condition	ret != KD_E_OK	1027:5:22977:22990	6488784	0	True				
ANR	6488930	EqualityExpression	ret != KD_E_OK		6488784	0		!=			
ANR	6488931	Identifier	ret		6488784	0					
ANR	6488932	Identifier	KD_E_OK		6488784	1					
ANR	6488933	CompoundStatement		26:21:584:584	6488784	1					
ANR	6488934	ReturnStatement	return 0 ;	1028:2:22997:23005	6488784	0	True				
ANR	6488935	PrimaryExpression	0		6488784	0					
ANR	6488936	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	1031:1:23012:23081	6488784	13	True				
ANR	6488937	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6488784	0		=			
ANR	6488938	Identifier	ret		6488784	0					
ANR	6488939	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6488784	1					
ANR	6488940	Callee	windbg_wait_packet		6488784	0					
ANR	6488941	Identifier	windbg_wait_packet		6488784	0					
ANR	6488942	ArgumentList	ctx		6488784	1					
ANR	6488943	Argument	ctx		6488784	0					
ANR	6488944	Identifier	ctx		6488784	0					
ANR	6488945	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6488784	1					
ANR	6488946	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6488784	0					
ANR	6488947	Argument	& pkt		6488784	2					
ANR	6488948	UnaryOperationExpression	& pkt		6488784	0					
ANR	6488949	UnaryOperator	&		6488784	0					
ANR	6488950	Identifier	pkt		6488784	1					
ANR	6488951	IfStatement	if ( ret != KD_E_OK )		6488784	14					
ANR	6488952	Condition	ret != KD_E_OK	1032:5:23088:23101	6488784	0	True				
ANR	6488953	EqualityExpression	ret != KD_E_OK		6488784	0		!=			
ANR	6488954	Identifier	ret		6488784	0					
ANR	6488955	Identifier	KD_E_OK		6488784	1					
ANR	6488956	CompoundStatement		31:21:695:695	6488784	1					
ANR	6488957	ReturnStatement	return 0 ;	1033:2:23108:23116	6488784	0	True				
ANR	6488958	PrimaryExpression	0		6488784	0					
ANR	6488959	ExpressionStatement	rr = PKT_REQ ( pkt )	1036:1:23123:23141	6488784	15	True				
ANR	6488960	AssignmentExpression	rr = PKT_REQ ( pkt )		6488784	0		=			
ANR	6488961	Identifier	rr		6488784	0					
ANR	6488962	CallExpression	PKT_REQ ( pkt )		6488784	1					
ANR	6488963	Callee	PKT_REQ		6488784	0					
ANR	6488964	Identifier	PKT_REQ		6488784	0					
ANR	6488965	ArgumentList	pkt		6488784	1					
ANR	6488966	Argument	pkt		6488784	0					
ANR	6488967	Identifier	pkt		6488784	0					
ANR	6488968	IfStatement	if ( rr -> ret )		6488784	16					
ANR	6488969	Condition	rr -> ret	1038:5:23149:23155	6488784	0	True				
ANR	6488970	PtrMemberAccess	rr -> ret		6488784	0					
ANR	6488971	Identifier	rr		6488784	0					
ANR	6488972	Identifier	ret		6488784	1					
ANR	6488973	CompoundStatement		37:14:749:749	6488784	1					
ANR	6488974	ExpressionStatement	free ( pkt )	1039:2:23162:23172	6488784	0	True				
ANR	6488975	CallExpression	free ( pkt )		6488784	0					
ANR	6488976	Callee	free		6488784	0					
ANR	6488977	Identifier	free		6488784	0					
ANR	6488978	ArgumentList	pkt		6488784	1					
ANR	6488979	Argument	pkt		6488784	0					
ANR	6488980	Identifier	pkt		6488784	0					
ANR	6488981	ReturnStatement	return 0 ;	1040:2:23176:23184	6488784	1	True				
ANR	6488982	PrimaryExpression	0		6488784	0					
ANR	6488983	ExpressionStatement	ret = rr -> r_mem . read	1043:1:23191:23211	6488784	17	True				
ANR	6488984	AssignmentExpression	ret = rr -> r_mem . read		6488784	0		=			
ANR	6488985	Identifier	ret		6488784	0					
ANR	6488986	MemberAccess	rr -> r_mem . read		6488784	1					
ANR	6488987	PtrMemberAccess	rr -> r_mem		6488784	0					
ANR	6488988	Identifier	rr		6488784	0					
ANR	6488989	Identifier	r_mem		6488784	1					
ANR	6488990	Identifier	read		6488784	1					
ANR	6488991	ExpressionStatement	free ( pkt )	1044:1:23214:23224	6488784	18	True				
ANR	6488992	CallExpression	free ( pkt )		6488784	0					
ANR	6488993	Callee	free		6488784	0					
ANR	6488994	Identifier	free		6488784	0					
ANR	6488995	ArgumentList	pkt		6488784	1					
ANR	6488996	Argument	pkt		6488784	0					
ANR	6488997	Identifier	pkt		6488784	0					
ANR	6488998	ReturnStatement	return ret ;	1045:1:23227:23237	6488784	19	True				
ANR	6488999	Identifier	ret		6488784	0					
ANR	6489000	ReturnType	int		6488784	1					
ANR	6489001	Identifier	windbg_write_at		6488784	2					
ANR	6489002	ParameterList	"WindCtx * ctx , const uint8_t * buf , const ut64 offset , const int count"		6488784	3					
ANR	6489003	Parameter	WindCtx * ctx	1002:20:22338:22349	6488784	0	True				
ANR	6489004	ParameterType	WindCtx *		6488784	0					
ANR	6489005	Identifier	ctx		6488784	1					
ANR	6489006	Parameter	const uint8_t * buf	1002:34:22352:22369	6488784	1	True				
ANR	6489007	ParameterType	const uint8_t *		6488784	0					
ANR	6489008	Identifier	buf		6488784	1					
ANR	6489009	Parameter	const ut64 offset	1002:54:22372:22388	6488784	2	True				
ANR	6489010	ParameterType	const ut64		6488784	0					
ANR	6489011	Identifier	offset		6488784	1					
ANR	6489012	Parameter	const int count	1002:73:22391:22405	6488784	3	True				
ANR	6489013	ParameterType	const int		6488784	0					
ANR	6489014	Identifier	count		6488784	1					
ANR	6489015	CFGEntryNode	ENTRY		6488784		True				
ANR	6489016	CFGExitNode	EXIT		6488784		True				
ANR	6489017	Symbol	rr		6488784						
ANR	6489018	Symbol	PKT_REQ		6488784						
ANR	6489019	Symbol	& req		6488784						
ANR	6489020	Symbol	rr -> r_mem		6488784						
ANR	6489021	Symbol	req . req		6488784						
ANR	6489022	Symbol	req . r_mem . length		6488784						
ANR	6489023	Symbol	req . r_mem		6488784						
ANR	6489024	Symbol	rr -> r_mem . read		6488784						
ANR	6489025	Symbol	ctx -> cpu		6488784						
ANR	6489026	Symbol	payload		6488784						
ANR	6489027	Symbol	DbgKdWriteVirtualMemoryApi		6488784						
ANR	6489028	Symbol	req . cpu		6488784						
ANR	6489029	Symbol	pkt		6488784						
ANR	6489030	Symbol	rr -> ret		6488784						
ANR	6489031	Symbol	windbg_wait_packet		6488784						
ANR	6489032	Symbol	ctx -> syncd		6488784						
ANR	6489033	Symbol	req		6488784						
ANR	6489034	Symbol	ret		6488784						
ANR	6489035	Symbol	kd_send_data_packet		6488784						
ANR	6489036	Symbol	NULL		6488784						
ANR	6489037	Symbol	offset		6488784						
ANR	6489038	Symbol	KD_E_OK		6488784						
ANR	6489039	Symbol	* rr		6488784						
ANR	6489040	Symbol	ctx		6488784						
ANR	6489041	Symbol	count		6488784						
ANR	6489042	Symbol	R_MIN		6488784						
ANR	6489043	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6488784						
ANR	6489044	Symbol	KD_MAX_PAYLOAD		6488784						
ANR	6489045	Symbol	* ctx		6488784						
ANR	6489046	Symbol	ctx -> io_ptr		6488784						
ANR	6489047	Symbol	buf		6488784						
ANR	6489048	Symbol	req . r_mem . addr		6488784						
ANR	6489049	Symbol	ctx -> seq_id		6488784						
ANR	6489050	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6488784						
ANR	6489051	Symbol	& pkt		6488784						
ANR	6489052	Function	windbg_write_at_phys	1048:0:23242:24252							
ANR	6489053	FunctionDef	"windbg_write_at_phys (WindCtx * ctx , const uint8_t * buf , const ut64 offset , const int count)"		6489052	0					
ANR	6489054	CompoundStatement		1048:95:23337:24252	6489052	0					
ANR	6489055	IdentifierDeclStatement	kd_packet_t * pkt ;	1049:1:23340:23356	6489052	0	True				
ANR	6489056	IdentifierDecl	* pkt		6489052	0					
ANR	6489057	IdentifierDeclType	kd_packet_t *		6489052	0					
ANR	6489058	Identifier	pkt		6489052	1					
ANR	6489059	IdentifierDeclStatement	kd_req_t req ;	1050:1:23359:23371	6489052	1	True				
ANR	6489060	IdentifierDecl	req		6489052	0					
ANR	6489061	IdentifierDeclType	kd_req_t		6489052	0					
ANR	6489062	Identifier	req		6489052	1					
ANR	6489063	IdentifierDeclStatement	int ret ;	1051:1:23374:23381	6489052	2	True				
ANR	6489064	IdentifierDecl	ret		6489052	0					
ANR	6489065	IdentifierDeclType	int		6489052	0					
ANR	6489066	Identifier	ret		6489052	1					
ANR	6489067	IdentifierDeclStatement	int payload ;	1052:1:23384:23395	6489052	3	True				
ANR	6489068	IdentifierDecl	payload		6489052	0					
ANR	6489069	IdentifierDeclType	int		6489052	0					
ANR	6489070	Identifier	payload		6489052	1					
ANR	6489071	IfStatement	if ( ! ctx || ! ctx -> io_ptr || ! ctx -> syncd )		6489052	4					
ANR	6489072	Condition	! ctx || ! ctx -> io_ptr || ! ctx -> syncd	1054:5:23403:23437	6489052	0	True				
ANR	6489073	OrExpression	! ctx || ! ctx -> io_ptr || ! ctx -> syncd		6489052	0		||			
ANR	6489074	UnaryOperationExpression	! ctx		6489052	0					
ANR	6489075	UnaryOperator	!		6489052	0					
ANR	6489076	Identifier	ctx		6489052	1					
ANR	6489077	OrExpression	! ctx -> io_ptr || ! ctx -> syncd		6489052	1		||			
ANR	6489078	UnaryOperationExpression	! ctx -> io_ptr		6489052	0					
ANR	6489079	UnaryOperator	!		6489052	0					
ANR	6489080	PtrMemberAccess	ctx -> io_ptr		6489052	1					
ANR	6489081	Identifier	ctx		6489052	0					
ANR	6489082	Identifier	io_ptr		6489052	1					
ANR	6489083	UnaryOperationExpression	! ctx -> syncd		6489052	1					
ANR	6489084	UnaryOperator	!		6489052	0					
ANR	6489085	PtrMemberAccess	ctx -> syncd		6489052	1					
ANR	6489086	Identifier	ctx		6489052	0					
ANR	6489087	Identifier	syncd		6489052	1					
ANR	6489088	CompoundStatement		7:42:102:102	6489052	1					
ANR	6489089	ReturnStatement	return 0 ;	1055:2:23444:23452	6489052	0	True				
ANR	6489090	PrimaryExpression	0		6489052	0					
ANR	6489091	ExpressionStatement	"payload = R_MIN ( count , KD_MAX_PAYLOAD - sizeof ( kd_req_t ) )"	1058:1:23459:23517	6489052	5	True				
ANR	6489092	AssignmentExpression	"payload = R_MIN ( count , KD_MAX_PAYLOAD - sizeof ( kd_req_t ) )"		6489052	0		=			
ANR	6489093	Identifier	payload		6489052	0					
ANR	6489094	CallExpression	"R_MIN ( count , KD_MAX_PAYLOAD - sizeof ( kd_req_t ) )"		6489052	1					
ANR	6489095	Callee	R_MIN		6489052	0					
ANR	6489096	Identifier	R_MIN		6489052	0					
ANR	6489097	ArgumentList	count		6489052	1					
ANR	6489098	Argument	count		6489052	0					
ANR	6489099	Identifier	count		6489052	0					
ANR	6489100	Argument	KD_MAX_PAYLOAD - sizeof ( kd_req_t )		6489052	1					
ANR	6489101	AdditiveExpression	KD_MAX_PAYLOAD - sizeof ( kd_req_t )		6489052	0		-			
ANR	6489102	Identifier	KD_MAX_PAYLOAD		6489052	0					
ANR	6489103	SizeofExpression	sizeof ( kd_req_t )		6489052	1					
ANR	6489104	Sizeof	sizeof		6489052	0					
ANR	6489105	SizeofOperand	kd_req_t		6489052	1					
ANR	6489106	ExpressionStatement	"memset ( & req , 0 , sizeof ( kd_req_t ) )"	1060:1:23521:23555	6489052	6	True				
ANR	6489107	CallExpression	"memset ( & req , 0 , sizeof ( kd_req_t ) )"		6489052	0					
ANR	6489108	Callee	memset		6489052	0					
ANR	6489109	Identifier	memset		6489052	0					
ANR	6489110	ArgumentList	& req		6489052	1					
ANR	6489111	Argument	& req		6489052	0					
ANR	6489112	UnaryOperationExpression	& req		6489052	0					
ANR	6489113	UnaryOperator	&		6489052	0					
ANR	6489114	Identifier	req		6489052	1					
ANR	6489115	Argument	0		6489052	1					
ANR	6489116	PrimaryExpression	0		6489052	0					
ANR	6489117	Argument	sizeof ( kd_req_t )		6489052	2					
ANR	6489118	SizeofExpression	sizeof ( kd_req_t )		6489052	0					
ANR	6489119	Sizeof	sizeof		6489052	0					
ANR	6489120	SizeofOperand	kd_req_t		6489052	1					
ANR	6489121	ExpressionStatement	req . req = DbgKdWritePhysicalMemoryApi	1062:1:23559:23596	6489052	7	True				
ANR	6489122	AssignmentExpression	req . req = DbgKdWritePhysicalMemoryApi		6489052	0		=			
ANR	6489123	MemberAccess	req . req		6489052	0					
ANR	6489124	Identifier	req		6489052	0					
ANR	6489125	Identifier	req		6489052	1					
ANR	6489126	Identifier	DbgKdWritePhysicalMemoryApi		6489052	1					
ANR	6489127	ExpressionStatement	req . cpu = ctx -> cpu	1063:1:23599:23617	6489052	8	True				
ANR	6489128	AssignmentExpression	req . cpu = ctx -> cpu		6489052	0		=			
ANR	6489129	MemberAccess	req . cpu		6489052	0					
ANR	6489130	Identifier	req		6489052	0					
ANR	6489131	Identifier	cpu		6489052	1					
ANR	6489132	PtrMemberAccess	ctx -> cpu		6489052	1					
ANR	6489133	Identifier	ctx		6489052	0					
ANR	6489134	Identifier	cpu		6489052	1					
ANR	6489135	ExpressionStatement	req . r_mem . addr = offset	1065:1:23621:23644	6489052	9	True				
ANR	6489136	AssignmentExpression	req . r_mem . addr = offset		6489052	0		=			
ANR	6489137	MemberAccess	req . r_mem . addr		6489052	0					
ANR	6489138	MemberAccess	req . r_mem		6489052	0					
ANR	6489139	Identifier	req		6489052	0					
ANR	6489140	Identifier	r_mem		6489052	1					
ANR	6489141	Identifier	addr		6489052	1					
ANR	6489142	Identifier	offset		6489052	1					
ANR	6489143	ExpressionStatement	req . r_mem . length = payload	1066:1:23647:23673	6489052	10	True				
ANR	6489144	AssignmentExpression	req . r_mem . length = payload		6489052	0		=			
ANR	6489145	MemberAccess	req . r_mem . length		6489052	0					
ANR	6489146	MemberAccess	req . r_mem		6489052	0					
ANR	6489147	Identifier	req		6489052	0					
ANR	6489148	Identifier	r_mem		6489052	1					
ANR	6489149	Identifier	length		6489052	1					
ANR	6489150	Identifier	payload		6489052	1					
ANR	6489151	ExpressionStatement	req . r_mem . read = 0	1067:1:23676:23694	6489052	11	True				
ANR	6489152	AssignmentExpression	req . r_mem . read = 0		6489052	0		=			
ANR	6489153	MemberAccess	req . r_mem . read		6489052	0					
ANR	6489154	MemberAccess	req . r_mem		6489052	0					
ANR	6489155	Identifier	req		6489052	0					
ANR	6489156	Identifier	r_mem		6489052	1					
ANR	6489157	Identifier	read		6489052	1					
ANR	6489158	PrimaryExpression	0		6489052	1					
ANR	6489159	ExpressionStatement	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , payload )"	1069:1:23724:23868	6489052	12	True				
ANR	6489160	AssignmentExpression	"ret = kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , payload )"		6489052	0		=			
ANR	6489161	Identifier	ret		6489052	0					
ANR	6489162	CallExpression	"kd_send_data_packet ( ctx -> io_ptr , KD_PACKET_TYPE_STATE_MANIPULATE , ( ctx -> seq_id ^= 1 ) , ( uint8_t * ) & req , sizeof ( kd_req_t ) , buf , payload )"		6489052	1					
ANR	6489163	Callee	kd_send_data_packet		6489052	0					
ANR	6489164	Identifier	kd_send_data_packet		6489052	0					
ANR	6489165	ArgumentList	ctx -> io_ptr		6489052	1					
ANR	6489166	Argument	ctx -> io_ptr		6489052	0					
ANR	6489167	PtrMemberAccess	ctx -> io_ptr		6489052	0					
ANR	6489168	Identifier	ctx		6489052	0					
ANR	6489169	Identifier	io_ptr		6489052	1					
ANR	6489170	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6489052	1					
ANR	6489171	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6489052	0					
ANR	6489172	Argument	ctx -> seq_id ^= 1		6489052	2					
ANR	6489173	AssignmentExpression	ctx -> seq_id ^= 1		6489052	0		^=			
ANR	6489174	PtrMemberAccess	ctx -> seq_id		6489052	0					
ANR	6489175	Identifier	ctx		6489052	0					
ANR	6489176	Identifier	seq_id		6489052	1					
ANR	6489177	PrimaryExpression	1		6489052	1					
ANR	6489178	Argument	( uint8_t * ) & req		6489052	3					
ANR	6489179	CastExpression	( uint8_t * ) & req		6489052	0					
ANR	6489180	CastTarget	uint8_t *		6489052	0					
ANR	6489181	UnaryOperationExpression	& req		6489052	1					
ANR	6489182	UnaryOperator	&		6489052	0					
ANR	6489183	Identifier	req		6489052	1					
ANR	6489184	Argument	sizeof ( kd_req_t )		6489052	4					
ANR	6489185	SizeofExpression	sizeof ( kd_req_t )		6489052	0					
ANR	6489186	Sizeof	sizeof		6489052	0					
ANR	6489187	SizeofOperand	kd_req_t		6489052	1					
ANR	6489188	Argument	buf		6489052	5					
ANR	6489189	Identifier	buf		6489052	0					
ANR	6489190	Argument	payload		6489052	6					
ANR	6489191	Identifier	payload		6489052	0					
ANR	6489192	IfStatement	if ( ret != KD_E_OK )		6489052	13					
ANR	6489193	Condition	ret != KD_E_OK	1071:5:23875:23888	6489052	0	True				
ANR	6489194	EqualityExpression	ret != KD_E_OK		6489052	0		!=			
ANR	6489195	Identifier	ret		6489052	0					
ANR	6489196	Identifier	KD_E_OK		6489052	1					
ANR	6489197	CompoundStatement		24:21:553:553	6489052	1					
ANR	6489198	ReturnStatement	return 0 ;	1072:2:23895:23903	6489052	0	True				
ANR	6489199	PrimaryExpression	0		6489052	0					
ANR	6489200	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"	1075:1:23910:23974	6489052	14	True				
ANR	6489201	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6489052	0		=			
ANR	6489202	Identifier	ret		6489052	0					
ANR	6489203	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_ACKNOWLEDGE , NULL )"		6489052	1					
ANR	6489204	Callee	windbg_wait_packet		6489052	0					
ANR	6489205	Identifier	windbg_wait_packet		6489052	0					
ANR	6489206	ArgumentList	ctx		6489052	1					
ANR	6489207	Argument	ctx		6489052	0					
ANR	6489208	Identifier	ctx		6489052	0					
ANR	6489209	Argument	KD_PACKET_TYPE_ACKNOWLEDGE		6489052	1					
ANR	6489210	Identifier	KD_PACKET_TYPE_ACKNOWLEDGE		6489052	0					
ANR	6489211	Argument	NULL		6489052	2					
ANR	6489212	Identifier	NULL		6489052	0					
ANR	6489213	IfStatement	if ( ret != KD_E_OK )		6489052	15					
ANR	6489214	Condition	ret != KD_E_OK	1076:5:23981:23994	6489052	0	True				
ANR	6489215	EqualityExpression	ret != KD_E_OK		6489052	0		!=			
ANR	6489216	Identifier	ret		6489052	0					
ANR	6489217	Identifier	KD_E_OK		6489052	1					
ANR	6489218	CompoundStatement		29:21:659:659	6489052	1					
ANR	6489219	ReturnStatement	return 0 ;	1077:2:24001:24009	6489052	0	True				
ANR	6489220	PrimaryExpression	0		6489052	0					
ANR	6489221	ExpressionStatement	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"	1080:1:24016:24085	6489052	16	True				
ANR	6489222	AssignmentExpression	"ret = windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6489052	0		=			
ANR	6489223	Identifier	ret		6489052	0					
ANR	6489224	CallExpression	"windbg_wait_packet ( ctx , KD_PACKET_TYPE_STATE_MANIPULATE , & pkt )"		6489052	1					
ANR	6489225	Callee	windbg_wait_packet		6489052	0					
ANR	6489226	Identifier	windbg_wait_packet		6489052	0					
ANR	6489227	ArgumentList	ctx		6489052	1					
ANR	6489228	Argument	ctx		6489052	0					
ANR	6489229	Identifier	ctx		6489052	0					
ANR	6489230	Argument	KD_PACKET_TYPE_STATE_MANIPULATE		6489052	1					
ANR	6489231	Identifier	KD_PACKET_TYPE_STATE_MANIPULATE		6489052	0					
ANR	6489232	Argument	& pkt		6489052	2					
ANR	6489233	UnaryOperationExpression	& pkt		6489052	0					
ANR	6489234	UnaryOperator	&		6489052	0					
ANR	6489235	Identifier	pkt		6489052	1					
ANR	6489236	IfStatement	if ( ret != KD_E_OK )		6489052	17					
ANR	6489237	Condition	ret != KD_E_OK	1081:5:24092:24105	6489052	0	True				
ANR	6489238	EqualityExpression	ret != KD_E_OK		6489052	0		!=			
ANR	6489239	Identifier	ret		6489052	0					
ANR	6489240	Identifier	KD_E_OK		6489052	1					
ANR	6489241	CompoundStatement		34:21:770:770	6489052	1					
ANR	6489242	ReturnStatement	return 0 ;	1082:2:24112:24120	6489052	0	True				
ANR	6489243	PrimaryExpression	0		6489052	0					
ANR	6489244	IdentifierDeclStatement	kd_req_t * rr = PKT_REQ ( pkt ) ;	1085:1:24127:24155	6489052	18	True				
ANR	6489245	IdentifierDecl	* rr = PKT_REQ ( pkt )		6489052	0					
ANR	6489246	IdentifierDeclType	kd_req_t *		6489052	0					
ANR	6489247	Identifier	rr		6489052	1					
ANR	6489248	AssignmentExpression	* rr = PKT_REQ ( pkt )		6489052	2		=			
ANR	6489249	Identifier	rr		6489052	0					
ANR	6489250	CallExpression	PKT_REQ ( pkt )		6489052	1					
ANR	6489251	Callee	PKT_REQ		6489052	0					
ANR	6489252	Identifier	PKT_REQ		6489052	0					
ANR	6489253	ArgumentList	pkt		6489052	1					
ANR	6489254	Argument	pkt		6489052	0					
ANR	6489255	Identifier	pkt		6489052	0					
ANR	6489256	IfStatement	if ( rr -> ret )		6489052	19					
ANR	6489257	Condition	rr -> ret	1087:5:24163:24169	6489052	0	True				
ANR	6489258	PtrMemberAccess	rr -> ret		6489052	0					
ANR	6489259	Identifier	rr		6489052	0					
ANR	6489260	Identifier	ret		6489052	1					
ANR	6489261	CompoundStatement		40:14:834:834	6489052	1					
ANR	6489262	ExpressionStatement	free ( pkt )	1088:2:24176:24186	6489052	0	True				
ANR	6489263	CallExpression	free ( pkt )		6489052	0					
ANR	6489264	Callee	free		6489052	0					
ANR	6489265	Identifier	free		6489052	0					
ANR	6489266	ArgumentList	pkt		6489052	1					
ANR	6489267	Argument	pkt		6489052	0					
ANR	6489268	Identifier	pkt		6489052	0					
ANR	6489269	ReturnStatement	return 0 ;	1089:2:24190:24198	6489052	1	True				
ANR	6489270	PrimaryExpression	0		6489052	0					
ANR	6489271	ExpressionStatement	ret = rr -> r_mem . read	1091:1:24204:24224	6489052	20	True				
ANR	6489272	AssignmentExpression	ret = rr -> r_mem . read		6489052	0		=			
ANR	6489273	Identifier	ret		6489052	0					
ANR	6489274	MemberAccess	rr -> r_mem . read		6489052	1					
ANR	6489275	PtrMemberAccess	rr -> r_mem		6489052	0					
ANR	6489276	Identifier	rr		6489052	0					
ANR	6489277	Identifier	r_mem		6489052	1					
ANR	6489278	Identifier	read		6489052	1					
ANR	6489279	ExpressionStatement	free ( pkt )	1092:1:24227:24237	6489052	21	True				
ANR	6489280	CallExpression	free ( pkt )		6489052	0					
ANR	6489281	Callee	free		6489052	0					
ANR	6489282	Identifier	free		6489052	0					
ANR	6489283	ArgumentList	pkt		6489052	1					
ANR	6489284	Argument	pkt		6489052	0					
ANR	6489285	Identifier	pkt		6489052	0					
ANR	6489286	ReturnStatement	return ret ;	1093:1:24240:24250	6489052	22	True				
ANR	6489287	Identifier	ret		6489052	0					
ANR	6489288	ReturnType	int		6489052	1					
ANR	6489289	Identifier	windbg_write_at_phys		6489052	2					
ANR	6489290	ParameterList	"WindCtx * ctx , const uint8_t * buf , const ut64 offset , const int count"		6489052	3					
ANR	6489291	Parameter	WindCtx * ctx	1048:25:23267:23278	6489052	0	True				
ANR	6489292	ParameterType	WindCtx *		6489052	0					
ANR	6489293	Identifier	ctx		6489052	1					
ANR	6489294	Parameter	const uint8_t * buf	1048:39:23281:23298	6489052	1	True				
ANR	6489295	ParameterType	const uint8_t *		6489052	0					
ANR	6489296	Identifier	buf		6489052	1					
ANR	6489297	Parameter	const ut64 offset	1048:59:23301:23317	6489052	2	True				
ANR	6489298	ParameterType	const ut64		6489052	0					
ANR	6489299	Identifier	offset		6489052	1					
ANR	6489300	Parameter	const int count	1048:78:23320:23334	6489052	3	True				
ANR	6489301	ParameterType	const int		6489052	0					
ANR	6489302	Identifier	count		6489052	1					
ANR	6489303	CFGEntryNode	ENTRY		6489052		True				
ANR	6489304	CFGExitNode	EXIT		6489052		True				
ANR	6489305	Symbol	rr		6489052						
ANR	6489306	Symbol	PKT_REQ		6489052						
ANR	6489307	Symbol	& req		6489052						
ANR	6489308	Symbol	rr -> r_mem		6489052						
ANR	6489309	Symbol	req . req		6489052						
ANR	6489310	Symbol	req . r_mem . length		6489052						
ANR	6489311	Symbol	DbgKdWritePhysicalMemoryApi		6489052						
ANR	6489312	Symbol	req . r_mem		6489052						
ANR	6489313	Symbol	rr -> r_mem . read		6489052						
ANR	6489314	Symbol	ctx -> cpu		6489052						
ANR	6489315	Symbol	payload		6489052						
ANR	6489316	Symbol	req . cpu		6489052						
ANR	6489317	Symbol	pkt		6489052						
ANR	6489318	Symbol	rr -> ret		6489052						
ANR	6489319	Symbol	windbg_wait_packet		6489052						
ANR	6489320	Symbol	ctx -> syncd		6489052						
ANR	6489321	Symbol	req		6489052						
ANR	6489322	Symbol	ret		6489052						
ANR	6489323	Symbol	kd_send_data_packet		6489052						
ANR	6489324	Symbol	NULL		6489052						
ANR	6489325	Symbol	offset		6489052						
ANR	6489326	Symbol	KD_E_OK		6489052						
ANR	6489327	Symbol	* rr		6489052						
ANR	6489328	Symbol	ctx		6489052						
ANR	6489329	Symbol	count		6489052						
ANR	6489330	Symbol	R_MIN		6489052						
ANR	6489331	Symbol	KD_PACKET_TYPE_ACKNOWLEDGE		6489052						
ANR	6489332	Symbol	KD_MAX_PAYLOAD		6489052						
ANR	6489333	Symbol	* ctx		6489052						
ANR	6489334	Symbol	req . r_mem . read		6489052						
ANR	6489335	Symbol	ctx -> io_ptr		6489052						
ANR	6489336	Symbol	buf		6489052						
ANR	6489337	Symbol	req . r_mem . addr		6489052						
ANR	6489338	Symbol	ctx -> seq_id		6489052						
ANR	6489339	Symbol	KD_PACKET_TYPE_STATE_MANIPULATE		6489052						
ANR	6489340	Symbol	& pkt		6489052						
ANR	6489341	Function	windbg_break	1096:0:24255:24353							
ANR	6489342	FunctionDef	windbg_break (WindCtx * ctx)		6489341	0					
ANR	6489343	CompoundStatement		1096:32:24287:24353	6489341	0					
ANR	6489344	ReturnStatement	"return iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 ) == 1 ;"	1097:1:24290:24351	6489341	0	True				
ANR	6489345	EqualityExpression	"iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 ) == 1"		6489341	0		==			
ANR	6489346	CallExpression	"iob_write ( ctx -> io_ptr , ( const uint8_t * ) ""b"" , 1 )"		6489341	0					
ANR	6489347	Callee	iob_write		6489341	0					
ANR	6489348	Identifier	iob_write		6489341	0					
ANR	6489349	ArgumentList	ctx -> io_ptr		6489341	1					
ANR	6489350	Argument	ctx -> io_ptr		6489341	0					
ANR	6489351	PtrMemberAccess	ctx -> io_ptr		6489341	0					
ANR	6489352	Identifier	ctx		6489341	0					
ANR	6489353	Identifier	io_ptr		6489341	1					
ANR	6489354	Argument	"( const uint8_t * ) ""b"""		6489341	1					
ANR	6489355	CastExpression	"( const uint8_t * ) ""b"""		6489341	0					
ANR	6489356	CastTarget	const uint8_t *		6489341	0					
ANR	6489357	PrimaryExpression	"""b"""		6489341	1					
ANR	6489358	Argument	1		6489341	2					
ANR	6489359	PrimaryExpression	1		6489341	0					
ANR	6489360	PrimaryExpression	1		6489341	1					
ANR	6489361	ReturnType	bool		6489341	1					
ANR	6489362	Identifier	windbg_break		6489341	2					
ANR	6489363	ParameterList	WindCtx * ctx		6489341	3					
ANR	6489364	Parameter	WindCtx * ctx	1096:18:24273:24284	6489341	0	True				
ANR	6489365	ParameterType	WindCtx *		6489341	0					
ANR	6489366	Identifier	ctx		6489341	1					
ANR	6489367	CFGEntryNode	ENTRY		6489341		True				
ANR	6489368	CFGExitNode	EXIT		6489341		True				
ANR	6489369	Symbol	ctx -> io_ptr		6489341						
ANR	6489370	Symbol	ctx		6489341						
ANR	6489371	Symbol	iob_write		6489341						
ANR	6489372	Symbol	* ctx		6489341						
ANR	6489373	Function	windbg_break_read	1100:0:24356:24744							
ANR	6489374	FunctionDef	windbg_break_read (WindCtx * ctx)		6489373	0					
ANR	6489375	CompoundStatement		1100:36:24392:24744	6489373	0					
ANR	6489376	Statement	static	1102:1:24433:24438	6489373	0	True				
ANR	6489377	IdentifierDeclStatement	"BOOL WINAPI ( * w32_CancelIoEx ) ( HANDLE , LPOVERLAPPED ) = NULL ;"	1102:8:24440:24498	6489373	1	True				
ANR	6489378	IdentifierDecl	"( * w32_CancelIoEx ) ( HANDLE , LPOVERLAPPED ) = NULL"		6489373	0					
ANR	6489379	IdentifierDeclType	"BOOL WINAPI ( * ) ( HANDLE , LPOVERLAPPED )"		6489373	0					
ANR	6489380	Identifier	w32_CancelIoEx		6489373	1					
ANR	6489381	AssignmentExpression	"( * w32_CancelIoEx ) ( HANDLE , LPOVERLAPPED ) = NULL"		6489373	2		=			
ANR	6489382	Identifier	NULL		6489373	0					
ANR	6489383	Identifier	NULL		6489373	1					
ANR	6489384	IfStatement	if ( ! w32_CancelIoEx )		6489373	2					
ANR	6489385	Condition	! w32_CancelIoEx	1103:5:24505:24519	6489373	0	True				
ANR	6489386	UnaryOperationExpression	! w32_CancelIoEx		6489373	0					
ANR	6489387	UnaryOperator	!		6489373	0					
ANR	6489388	Identifier	w32_CancelIoEx		6489373	1					
ANR	6489389	CompoundStatement		4:22:129:129	6489373	1					
ANR	6489390	Statement	w32_CancelIoEx	1104:2:24526:24539	6489373	0	True				
ANR	6489391	Statement	=	1104:17:24541:24541	6489373	1	True				
ANR	6489392	Statement	(	1104:19:24543:24543	6489373	2	True				
ANR	6489393	Statement	BOOL	1104:20:24544:24547	6489373	3	True				
ANR	6489394	Statement	WINAPI	1104:25:24549:24554	6489373	4	True				
ANR	6489395	Statement	(	1104:32:24556:24556	6489373	5	True				
ANR	6489396	Statement	*	1104:33:24557:24557	6489373	6	True				
ANR	6489397	Statement	)	1104:34:24558:24558	6489373	7	True				
ANR	6489398	Statement	(	1104:35:24559:24559	6489373	8	True				
ANR	6489399	Statement	HANDLE	1104:36:24560:24565	6489373	9	True				
ANR	6489400	Statement	","	1104:42:24566:24566	6489373	10	True				
ANR	6489401	Statement	LPOVERLAPPED	1104:44:24568:24579	6489373	11	True				
ANR	6489402	Statement	)	1104:56:24580:24580	6489373	12	True				
ANR	6489403	Statement	)	1104:57:24581:24581	6489373	13	True				
ANR	6489404	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""CancelIoEx"" )"	1105:5:24588:24657	6489373	14	True				
ANR	6489405	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""CancelIoEx"" )"		6489373	0					
ANR	6489406	Callee	GetProcAddress		6489373	0					
ANR	6489407	Identifier	GetProcAddress		6489373	0					
ANR	6489408	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6489373	1					
ANR	6489409	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6489373	0					
ANR	6489410	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6489373	0					
ANR	6489411	Callee	GetModuleHandle		6489373	0					
ANR	6489412	Identifier	GetModuleHandle		6489373	0					
ANR	6489413	ArgumentList	"TEXT ( ""kernel32"" )"		6489373	1					
ANR	6489414	Argument	"TEXT ( ""kernel32"" )"		6489373	0					
ANR	6489415	CallExpression	"TEXT ( ""kernel32"" )"		6489373	0					
ANR	6489416	Callee	TEXT		6489373	0					
ANR	6489417	Identifier	TEXT		6489373	0					
ANR	6489418	ArgumentList	"""kernel32"""		6489373	1					
ANR	6489419	Argument	"""kernel32"""		6489373	0					
ANR	6489420	PrimaryExpression	"""kernel32"""		6489373	0					
ANR	6489421	Argument	"""CancelIoEx"""		6489373	1					
ANR	6489422	PrimaryExpression	"""CancelIoEx"""		6489373	0					
ANR	6489423	IfStatement	if ( w32_CancelIoEx )		6489373	3					
ANR	6489424	Condition	w32_CancelIoEx	1108:5:24667:24680	6489373	0	True				
ANR	6489425	Identifier	w32_CancelIoEx		6489373	0					
ANR	6489426	CompoundStatement		9:21:290:290	6489373	1					
ANR	6489427	ExpressionStatement	"w32_CancelIoEx ( ctx -> io_ptr , NULL )"	1109:2:24687:24721	6489373	0	True				
ANR	6489428	CallExpression	"w32_CancelIoEx ( ctx -> io_ptr , NULL )"		6489373	0					
ANR	6489429	Callee	w32_CancelIoEx		6489373	0					
ANR	6489430	Identifier	w32_CancelIoEx		6489373	0					
ANR	6489431	ArgumentList	ctx -> io_ptr		6489373	1					
ANR	6489432	Argument	ctx -> io_ptr		6489373	0					
ANR	6489433	PtrMemberAccess	ctx -> io_ptr		6489373	0					
ANR	6489434	Identifier	ctx		6489373	0					
ANR	6489435	Identifier	io_ptr		6489373	1					
ANR	6489436	Argument	NULL		6489373	1					
ANR	6489437	Identifier	NULL		6489373	0					
ANR	6489438	ReturnStatement	return 1 ;	1112:1:24734:24742	6489373	4	True				
ANR	6489439	PrimaryExpression	1		6489373	0					
ANR	6489440	ReturnType	int		6489373	1					
ANR	6489441	Identifier	windbg_break_read		6489373	2					
ANR	6489442	ParameterList	WindCtx * ctx		6489373	3					
ANR	6489443	Parameter	WindCtx * ctx	1100:22:24378:24389	6489373	0	True				
ANR	6489444	ParameterType	WindCtx *		6489373	0					
ANR	6489445	Identifier	ctx		6489373	1					
ANR	6489446	CFGEntryNode	ENTRY		6489373		True				
ANR	6489447	CFGExitNode	EXIT		6489373		True				
ANR	6489448	Symbol	ctx -> io_ptr		6489373						
ANR	6489449	Symbol	NULL		6489373						
ANR	6489450	Symbol	ctx		6489373						
ANR	6489451	Symbol	TEXT		6489373						
ANR	6489452	Symbol	w32_CancelIoEx		6489373						
ANR	6489453	Symbol	GetModuleHandle		6489373						
ANR	6489454	Symbol	* ctx		6489373						
