command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5693398	File	data/converged/CVE-2019-16718~_radare2/rasm2.c								
ANR	5693399	ClassDef	<unnamed>	12:8:236:346							
ANR	5693400	DeclStmt									
ANR	5693401	Decl							RLib	RLib *	l
ANR	5693402	DeclStmt									
ANR	5693403	Decl							RAsm	RAsm *	a
ANR	5693404	DeclStmt									
ANR	5693405	Decl							RAnal	RAnal *	anal
ANR	5693406	DeclStmt									
ANR	5693407	Decl							bool	bool	oneliner
ANR	5693408	DeclStmt									
ANR	5693409	Decl							bool	bool	coutput
ANR	5693410	DeclStmt									
ANR	5693411	Decl							bool	bool	json
ANR	5693412	DeclStmt									
ANR	5693413	Decl							bool	bool	quiet
ANR	5693414	DeclStmt									
ANR	5693415	Decl									RAsmState
ANR	5693416	DeclStmt									
ANR	5693417	Decl							void	void ( RAsmState * as )	__load_plugins
ANR	5693418	Function	__as_set_archbits	24:0:393:634							
ANR	5693419	FunctionDef	__as_set_archbits (RAsmState * as)		5693418	0					
ANR	5693420	CompoundStatement		24:45:438:634	5693418	0					
ANR	5693421	ExpressionStatement	"r_asm_use ( as -> a , R_SYS_ARCH )"	25:1:441:470	5693418	0	True				
ANR	5693422	CallExpression	"r_asm_use ( as -> a , R_SYS_ARCH )"		5693418	0					
ANR	5693423	Callee	r_asm_use		5693418	0					
ANR	5693424	Identifier	r_asm_use		5693418	0					
ANR	5693425	ArgumentList	as -> a		5693418	1					
ANR	5693426	Argument	as -> a		5693418	0					
ANR	5693427	PtrMemberAccess	as -> a		5693418	0					
ANR	5693428	Identifier	as		5693418	0					
ANR	5693429	Identifier	a		5693418	1					
ANR	5693430	Argument	R_SYS_ARCH		5693418	1					
ANR	5693431	Identifier	R_SYS_ARCH		5693418	0					
ANR	5693432	ExpressionStatement	"r_anal_use ( as -> anal , R_SYS_ARCH )"	26:1:473:506	5693418	1	True				
ANR	5693433	CallExpression	"r_anal_use ( as -> anal , R_SYS_ARCH )"		5693418	0					
ANR	5693434	Callee	r_anal_use		5693418	0					
ANR	5693435	Identifier	r_anal_use		5693418	0					
ANR	5693436	ArgumentList	as -> anal		5693418	1					
ANR	5693437	Argument	as -> anal		5693418	0					
ANR	5693438	PtrMemberAccess	as -> anal		5693418	0					
ANR	5693439	Identifier	as		5693418	0					
ANR	5693440	Identifier	anal		5693418	1					
ANR	5693441	Argument	R_SYS_ARCH		5693418	1					
ANR	5693442	Identifier	R_SYS_ARCH		5693418	0					
ANR	5693443	IdentifierDeclStatement	int sysbits = ( R_SYS_BITS & R_SYS_BITS_64 ) ? 64 : 32 ;	28:1:510:560	5693418	2	True				
ANR	5693444	IdentifierDecl	sysbits = ( R_SYS_BITS & R_SYS_BITS_64 ) ? 64 : 32		5693418	0					
ANR	5693445	IdentifierDeclType	int		5693418	0					
ANR	5693446	Identifier	sysbits		5693418	1					
ANR	5693447	AssignmentExpression	sysbits = ( R_SYS_BITS & R_SYS_BITS_64 ) ? 64 : 32		5693418	2		=			
ANR	5693448	Identifier	sysbits		5693418	0					
ANR	5693449	ConditionalExpression	( R_SYS_BITS & R_SYS_BITS_64 ) ? 64 : 32		5693418	1					
ANR	5693450	Condition	R_SYS_BITS & R_SYS_BITS_64		5693418	0					
ANR	5693451	BitAndExpression	R_SYS_BITS & R_SYS_BITS_64		5693418	0		&			
ANR	5693452	Identifier	R_SYS_BITS		5693418	0					
ANR	5693453	Identifier	R_SYS_BITS_64		5693418	1					
ANR	5693454	PrimaryExpression	64		5693418	1					
ANR	5693455	PrimaryExpression	32		5693418	2					
ANR	5693456	ExpressionStatement	"r_asm_set_bits ( as -> a , sysbits )"	29:1:563:594	5693418	3	True				
ANR	5693457	CallExpression	"r_asm_set_bits ( as -> a , sysbits )"		5693418	0					
ANR	5693458	Callee	r_asm_set_bits		5693418	0					
ANR	5693459	Identifier	r_asm_set_bits		5693418	0					
ANR	5693460	ArgumentList	as -> a		5693418	1					
ANR	5693461	Argument	as -> a		5693418	0					
ANR	5693462	PtrMemberAccess	as -> a		5693418	0					
ANR	5693463	Identifier	as		5693418	0					
ANR	5693464	Identifier	a		5693418	1					
ANR	5693465	Argument	sysbits		5693418	1					
ANR	5693466	Identifier	sysbits		5693418	0					
ANR	5693467	ExpressionStatement	"r_anal_set_bits ( as -> anal , sysbits )"	30:1:597:632	5693418	4	True				
ANR	5693468	CallExpression	"r_anal_set_bits ( as -> anal , sysbits )"		5693418	0					
ANR	5693469	Callee	r_anal_set_bits		5693418	0					
ANR	5693470	Identifier	r_anal_set_bits		5693418	0					
ANR	5693471	ArgumentList	as -> anal		5693418	1					
ANR	5693472	Argument	as -> anal		5693418	0					
ANR	5693473	PtrMemberAccess	as -> anal		5693418	0					
ANR	5693474	Identifier	as		5693418	0					
ANR	5693475	Identifier	anal		5693418	1					
ANR	5693476	Argument	sysbits		5693418	1					
ANR	5693477	Identifier	sysbits		5693418	0					
ANR	5693478	ReturnType	static void		5693418	1					
ANR	5693479	Identifier	__as_set_archbits		5693418	2					
ANR	5693480	ParameterList	RAsmState * as		5693418	3					
ANR	5693481	Parameter	RAsmState * as	24:30:423:435	5693418	0	True				
ANR	5693482	ParameterType	RAsmState *		5693418	0					
ANR	5693483	Identifier	as		5693418	1					
ANR	5693484	CFGEntryNode	ENTRY		5693418		True				
ANR	5693485	CFGExitNode	EXIT		5693418		True				
ANR	5693486	Symbol	as		5693418						
ANR	5693487	Symbol	as -> a		5693418						
ANR	5693488	Symbol	as -> anal		5693418						
ANR	5693489	Symbol	R_SYS_ARCH		5693418						
ANR	5693490	Symbol	R_SYS_BITS		5693418						
ANR	5693491	Symbol	sysbits		5693418						
ANR	5693492	Symbol	* as		5693418						
ANR	5693493	Symbol	R_SYS_BITS_64		5693418						
ANR	5693494	Function	__as_new	33:0:637:882							
ANR	5693495	FunctionDef	__as_new ()		5693494	0					
ANR	5693496	CompoundStatement		33:29:666:882	5693494	0					
ANR	5693497	IdentifierDeclStatement	RAsmState * as = R_NEW0 ( RAsmState ) ;	34:1:669:703	5693494	0	True				
ANR	5693498	IdentifierDecl	* as = R_NEW0 ( RAsmState )		5693494	0					
ANR	5693499	IdentifierDeclType	RAsmState *		5693494	0					
ANR	5693500	Identifier	as		5693494	1					
ANR	5693501	AssignmentExpression	* as = R_NEW0 ( RAsmState )		5693494	2		=			
ANR	5693502	Identifier	as		5693494	0					
ANR	5693503	CallExpression	R_NEW0 ( RAsmState )		5693494	1					
ANR	5693504	Callee	R_NEW0		5693494	0					
ANR	5693505	Identifier	R_NEW0		5693494	0					
ANR	5693506	ArgumentList	RAsmState		5693494	1					
ANR	5693507	Argument	RAsmState		5693494	0					
ANR	5693508	Identifier	RAsmState		5693494	0					
ANR	5693509	IfStatement	if ( ! as )		5693494	1					
ANR	5693510	Condition	! as	35:5:710:712	5693494	0	True				
ANR	5693511	UnaryOperationExpression	! as		5693494	0					
ANR	5693512	UnaryOperator	!		5693494	0					
ANR	5693513	Identifier	as		5693494	1					
ANR	5693514	CompoundStatement		3:10:48:48	5693494	1					
ANR	5693515	ReturnStatement	return NULL ;	36:2:719:730	5693494	0	True				
ANR	5693516	Identifier	NULL		5693494	0					
ANR	5693517	ExpressionStatement	"as -> l = r_lib_new ( ""radare_plugin"" )"	38:1:736:771	5693494	2	True				
ANR	5693518	AssignmentExpression	"as -> l = r_lib_new ( ""radare_plugin"" )"		5693494	0		=			
ANR	5693519	PtrMemberAccess	as -> l		5693494	0					
ANR	5693520	Identifier	as		5693494	0					
ANR	5693521	Identifier	l		5693494	1					
ANR	5693522	CallExpression	"r_lib_new ( ""radare_plugin"" )"		5693494	1					
ANR	5693523	Callee	r_lib_new		5693494	0					
ANR	5693524	Identifier	r_lib_new		5693494	0					
ANR	5693525	ArgumentList	"""radare_plugin"""		5693494	1					
ANR	5693526	Argument	"""radare_plugin"""		5693494	0					
ANR	5693527	PrimaryExpression	"""radare_plugin"""		5693494	0					
ANR	5693528	ExpressionStatement	as -> a = r_asm_new ( )	39:1:774:794	5693494	3	True				
ANR	5693529	AssignmentExpression	as -> a = r_asm_new ( )		5693494	0		=			
ANR	5693530	PtrMemberAccess	as -> a		5693494	0					
ANR	5693531	Identifier	as		5693494	0					
ANR	5693532	Identifier	a		5693494	1					
ANR	5693533	CallExpression	r_asm_new ( )		5693494	1					
ANR	5693534	Callee	r_asm_new		5693494	0					
ANR	5693535	Identifier	r_asm_new		5693494	0					
ANR	5693536	ArgumentList			5693494	1					
ANR	5693537	ExpressionStatement	as -> anal = r_anal_new ( )	40:1:797:821	5693494	4	True				
ANR	5693538	AssignmentExpression	as -> anal = r_anal_new ( )		5693494	0		=			
ANR	5693539	PtrMemberAccess	as -> anal		5693494	0					
ANR	5693540	Identifier	as		5693494	0					
ANR	5693541	Identifier	anal		5693494	1					
ANR	5693542	CallExpression	r_anal_new ( )		5693494	1					
ANR	5693543	Callee	r_anal_new		5693494	0					
ANR	5693544	Identifier	r_anal_new		5693494	0					
ANR	5693545	ArgumentList			5693494	1					
ANR	5693546	ExpressionStatement	__load_plugins ( as )	41:1:824:843	5693494	5	True				
ANR	5693547	CallExpression	__load_plugins ( as )		5693494	0					
ANR	5693548	Callee	__load_plugins		5693494	0					
ANR	5693549	Identifier	__load_plugins		5693494	0					
ANR	5693550	ArgumentList	as		5693494	1					
ANR	5693551	Argument	as		5693494	0					
ANR	5693552	Identifier	as		5693494	0					
ANR	5693553	ExpressionStatement	__as_set_archbits ( as )	42:1:846:868	5693494	6	True				
ANR	5693554	CallExpression	__as_set_archbits ( as )		5693494	0					
ANR	5693555	Callee	__as_set_archbits		5693494	0					
ANR	5693556	Identifier	__as_set_archbits		5693494	0					
ANR	5693557	ArgumentList	as		5693494	1					
ANR	5693558	Argument	as		5693494	0					
ANR	5693559	Identifier	as		5693494	0					
ANR	5693560	ReturnStatement	return as ;	43:1:871:880	5693494	7	True				
ANR	5693561	Identifier	as		5693494	0					
ANR	5693562	ReturnType	static RAsmState *		5693494	1					
ANR	5693563	Identifier	__as_new		5693494	2					
ANR	5693564	ParameterList			5693494	3					
ANR	5693565	CFGEntryNode	ENTRY		5693494		True				
ANR	5693566	CFGExitNode	EXIT		5693494		True				
ANR	5693567	Symbol	r_asm_new		5693494						
ANR	5693568	Symbol	R_NEW0		5693494						
ANR	5693569	Symbol	r_lib_new		5693494						
ANR	5693570	Symbol	as		5693494						
ANR	5693571	Symbol	as -> a		5693494						
ANR	5693572	Symbol	NULL		5693494						
ANR	5693573	Symbol	RAsmState		5693494						
ANR	5693574	Symbol	as -> anal		5693494						
ANR	5693575	Symbol	as -> l		5693494						
ANR	5693576	Symbol	* as		5693494						
ANR	5693577	Symbol	r_anal_new		5693494						
ANR	5693578	Function	__as_free	46:0:885:991							
ANR	5693579	FunctionDef	__as_free (RAsmState * as)		5693578	0					
ANR	5693580	CompoundStatement		46:37:922:991	5693578	0					
ANR	5693581	ExpressionStatement	r_asm_free ( as -> a )	47:1:925:943	5693578	0	True				
ANR	5693582	CallExpression	r_asm_free ( as -> a )		5693578	0					
ANR	5693583	Callee	r_asm_free		5693578	0					
ANR	5693584	Identifier	r_asm_free		5693578	0					
ANR	5693585	ArgumentList	as -> a		5693578	1					
ANR	5693586	Argument	as -> a		5693578	0					
ANR	5693587	PtrMemberAccess	as -> a		5693578	0					
ANR	5693588	Identifier	as		5693578	0					
ANR	5693589	Identifier	a		5693578	1					
ANR	5693590	ExpressionStatement	r_anal_free ( as -> anal )	48:1:946:968	5693578	1	True				
ANR	5693591	CallExpression	r_anal_free ( as -> anal )		5693578	0					
ANR	5693592	Callee	r_anal_free		5693578	0					
ANR	5693593	Identifier	r_anal_free		5693578	0					
ANR	5693594	ArgumentList	as -> anal		5693578	1					
ANR	5693595	Argument	as -> anal		5693578	0					
ANR	5693596	PtrMemberAccess	as -> anal		5693578	0					
ANR	5693597	Identifier	as		5693578	0					
ANR	5693598	Identifier	anal		5693578	1					
ANR	5693599	ExpressionStatement	r_lib_free ( as -> l )	49:1:971:989	5693578	2	True				
ANR	5693600	CallExpression	r_lib_free ( as -> l )		5693578	0					
ANR	5693601	Callee	r_lib_free		5693578	0					
ANR	5693602	Identifier	r_lib_free		5693578	0					
ANR	5693603	ArgumentList	as -> l		5693578	1					
ANR	5693604	Argument	as -> l		5693578	0					
ANR	5693605	PtrMemberAccess	as -> l		5693578	0					
ANR	5693606	Identifier	as		5693578	0					
ANR	5693607	Identifier	l		5693578	1					
ANR	5693608	ReturnType	static void		5693578	1					
ANR	5693609	Identifier	__as_free		5693578	2					
ANR	5693610	ParameterList	RAsmState * as		5693578	3					
ANR	5693611	Parameter	RAsmState * as	46:22:907:919	5693578	0	True				
ANR	5693612	ParameterType	RAsmState *		5693578	0					
ANR	5693613	Identifier	as		5693578	1					
ANR	5693614	CFGEntryNode	ENTRY		5693578		True				
ANR	5693615	CFGExitNode	EXIT		5693578		True				
ANR	5693616	Symbol	as		5693578						
ANR	5693617	Symbol	as -> a		5693578						
ANR	5693618	Symbol	as -> anal		5693578						
ANR	5693619	Symbol	as -> l		5693578						
ANR	5693620	Symbol	* as		5693578						
ANR	5693621	Function	stackop2str	52:0:994:1328							
ANR	5693622	FunctionDef	stackop2str (int type)		5693621	0					
ANR	5693623	CompoundStatement		52:35:1029:1328	5693621	0					
ANR	5693624	SwitchStatement	switch ( type )		5693621	0					
ANR	5693625	Condition	type	53:9:1040:1043	5693621	0	True				
ANR	5693626	Identifier	type		5693621	0					
ANR	5693627	CompoundStatement		2:15:16:16	5693621	1					
ANR	5693628	Label	case R_ANAL_STACK_NULL :	54:1:1049:1071	5693621	0	True				
ANR	5693629	Identifier	R_ANAL_STACK_NULL		5693621	0					
ANR	5693630	ReturnStatement	"return strdup ( ""null"" ) ;"	54:25:1073:1095	5693621	1	True				
ANR	5693631	CallExpression	"strdup ( ""null"" )"		5693621	0					
ANR	5693632	Callee	strdup		5693621	0					
ANR	5693633	Identifier	strdup		5693621	0					
ANR	5693634	ArgumentList	"""null"""		5693621	1					
ANR	5693635	Argument	"""null"""		5693621	0					
ANR	5693636	PrimaryExpression	"""null"""		5693621	0					
ANR	5693637	Label	case R_ANAL_STACK_NOP :	55:1:1098:1119	5693621	2	True				
ANR	5693638	Identifier	R_ANAL_STACK_NOP		5693621	0					
ANR	5693639	ReturnStatement	"return strdup ( ""nop"" ) ;"	55:24:1121:1142	5693621	3	True				
ANR	5693640	CallExpression	"strdup ( ""nop"" )"		5693621	0					
ANR	5693641	Callee	strdup		5693621	0					
ANR	5693642	Identifier	strdup		5693621	0					
ANR	5693643	ArgumentList	"""nop"""		5693621	1					
ANR	5693644	Argument	"""nop"""		5693621	0					
ANR	5693645	PrimaryExpression	"""nop"""		5693621	0					
ANR	5693646	Label	case R_ANAL_STACK_GET :	57:1:1204:1225	5693621	4	True				
ANR	5693647	Identifier	R_ANAL_STACK_GET		5693621	0					
ANR	5693648	ReturnStatement	"return strdup ( ""get"" ) ;"	57:24:1227:1248	5693621	5	True				
ANR	5693649	CallExpression	"strdup ( ""get"" )"		5693621	0					
ANR	5693650	Callee	strdup		5693621	0					
ANR	5693651	Identifier	strdup		5693621	0					
ANR	5693652	ArgumentList	"""get"""		5693621	1					
ANR	5693653	Argument	"""get"""		5693621	0					
ANR	5693654	PrimaryExpression	"""get"""		5693621	0					
ANR	5693655	Label	case R_ANAL_STACK_SET :	58:1:1251:1272	5693621	6	True				
ANR	5693656	Identifier	R_ANAL_STACK_SET		5693621	0					
ANR	5693657	ReturnStatement	"return strdup ( ""set"" ) ;"	58:24:1274:1295	5693621	7	True				
ANR	5693658	CallExpression	"strdup ( ""set"" )"		5693621	0					
ANR	5693659	Callee	strdup		5693621	0					
ANR	5693660	Identifier	strdup		5693621	0					
ANR	5693661	ArgumentList	"""set"""		5693621	1					
ANR	5693662	Argument	"""set"""		5693621	0					
ANR	5693663	PrimaryExpression	"""set"""		5693621	0					
ANR	5693664	ReturnStatement	"return strdup ( ""unknown"" ) ;"	60:1:1301:1326	5693621	1	True				
ANR	5693665	CallExpression	"strdup ( ""unknown"" )"		5693621	0					
ANR	5693666	Callee	strdup		5693621	0					
ANR	5693667	Identifier	strdup		5693621	0					
ANR	5693668	ArgumentList	"""unknown"""		5693621	1					
ANR	5693669	Argument	"""unknown"""		5693621	0					
ANR	5693670	PrimaryExpression	"""unknown"""		5693621	0					
ANR	5693671	ReturnType	static char *		5693621	1					
ANR	5693672	Identifier	stackop2str		5693621	2					
ANR	5693673	ParameterList	int type		5693621	3					
ANR	5693674	Parameter	int type	52:25:1019:1026	5693621	0	True				
ANR	5693675	ParameterType	int		5693621	0					
ANR	5693676	Identifier	type		5693621	1					
ANR	5693677	CFGEntryNode	ENTRY		5693621		True				
ANR	5693678	CFGExitNode	EXIT		5693621		True				
ANR	5693679	Symbol	strdup		5693621						
ANR	5693680	Symbol	type		5693621						
ANR	5693681	Function	showanal	64:0:1347:2973							
ANR	5693682	FunctionDef	"showanal (RAsmState * as , RAnalOp * op , ut64 offset , ut8 * buf , int len , PJ * pj)"		5693681	0					
ANR	5693683	CompoundStatement		64:88:1435:2973	5693681	0					
ANR	5693684	IdentifierDeclStatement	"int ret = r_anal_op ( as -> anal , op , offset , buf , len , R_ANAL_OP_MASK_ESIL ) ;"	65:1:1438:1511	5693681	0	True				
ANR	5693685	IdentifierDecl	"ret = r_anal_op ( as -> anal , op , offset , buf , len , R_ANAL_OP_MASK_ESIL )"		5693681	0					
ANR	5693686	IdentifierDeclType	int		5693681	0					
ANR	5693687	Identifier	ret		5693681	1					
ANR	5693688	AssignmentExpression	"ret = r_anal_op ( as -> anal , op , offset , buf , len , R_ANAL_OP_MASK_ESIL )"		5693681	2		=			
ANR	5693689	Identifier	ret		5693681	0					
ANR	5693690	CallExpression	"r_anal_op ( as -> anal , op , offset , buf , len , R_ANAL_OP_MASK_ESIL )"		5693681	1					
ANR	5693691	Callee	r_anal_op		5693681	0					
ANR	5693692	Identifier	r_anal_op		5693681	0					
ANR	5693693	ArgumentList	as -> anal		5693681	1					
ANR	5693694	Argument	as -> anal		5693681	0					
ANR	5693695	PtrMemberAccess	as -> anal		5693681	0					
ANR	5693696	Identifier	as		5693681	0					
ANR	5693697	Identifier	anal		5693681	1					
ANR	5693698	Argument	op		5693681	1					
ANR	5693699	Identifier	op		5693681	0					
ANR	5693700	Argument	offset		5693681	2					
ANR	5693701	Identifier	offset		5693681	0					
ANR	5693702	Argument	buf		5693681	3					
ANR	5693703	Identifier	buf		5693681	0					
ANR	5693704	Argument	len		5693681	4					
ANR	5693705	Identifier	len		5693681	0					
ANR	5693706	Argument	R_ANAL_OP_MASK_ESIL		5693681	5					
ANR	5693707	Identifier	R_ANAL_OP_MASK_ESIL		5693681	0					
ANR	5693708	IfStatement	if ( ret < 1 )		5693681	1					
ANR	5693709	Condition	ret < 1	66:5:1518:1524	5693681	0	True				
ANR	5693710	RelationalExpression	ret < 1		5693681	0		<			
ANR	5693711	Identifier	ret		5693681	0					
ANR	5693712	PrimaryExpression	1		5693681	1					
ANR	5693713	CompoundStatement		3:14:91:91	5693681	1					
ANR	5693714	ReturnStatement	return ret ;	67:2:1531:1541	5693681	0	True				
ANR	5693715	Identifier	ret		5693681	0					
ANR	5693716	IdentifierDeclStatement	char * stackop = stackop2str ( op -> stackop ) ;	69:1:1547:1588	5693681	2	True				
ANR	5693717	IdentifierDecl	* stackop = stackop2str ( op -> stackop )		5693681	0					
ANR	5693718	IdentifierDeclType	char *		5693681	0					
ANR	5693719	Identifier	stackop		5693681	1					
ANR	5693720	AssignmentExpression	* stackop = stackop2str ( op -> stackop )		5693681	2		=			
ANR	5693721	Identifier	stackop		5693681	0					
ANR	5693722	CallExpression	stackop2str ( op -> stackop )		5693681	1					
ANR	5693723	Callee	stackop2str		5693681	0					
ANR	5693724	Identifier	stackop2str		5693681	0					
ANR	5693725	ArgumentList	op -> stackop		5693681	1					
ANR	5693726	Argument	op -> stackop		5693681	0					
ANR	5693727	PtrMemberAccess	op -> stackop		5693681	0					
ANR	5693728	Identifier	op		5693681	0					
ANR	5693729	Identifier	stackop		5693681	1					
ANR	5693730	IdentifierDeclStatement	const char * optype = r_anal_optype_to_string ( op -> type ) ;	70:1:1591:1646	5693681	3	True				
ANR	5693731	IdentifierDecl	* optype = r_anal_optype_to_string ( op -> type )		5693681	0					
ANR	5693732	IdentifierDeclType	const char *		5693681	0					
ANR	5693733	Identifier	optype		5693681	1					
ANR	5693734	AssignmentExpression	* optype = r_anal_optype_to_string ( op -> type )		5693681	2		=			
ANR	5693735	Identifier	optype		5693681	0					
ANR	5693736	CallExpression	r_anal_optype_to_string ( op -> type )		5693681	1					
ANR	5693737	Callee	r_anal_optype_to_string		5693681	0					
ANR	5693738	Identifier	r_anal_optype_to_string		5693681	0					
ANR	5693739	ArgumentList	op -> type		5693681	1					
ANR	5693740	Argument	op -> type		5693681	0					
ANR	5693741	PtrMemberAccess	op -> type		5693681	0					
ANR	5693742	Identifier	op		5693681	0					
ANR	5693743	Identifier	type		5693681	1					
ANR	5693744	IdentifierDeclStatement	"char * bytes = r_hex_bin2strdup ( buf , ret ) ;"	71:1:1649:1690	5693681	4	True				
ANR	5693745	IdentifierDecl	"* bytes = r_hex_bin2strdup ( buf , ret )"		5693681	0					
ANR	5693746	IdentifierDeclType	char *		5693681	0					
ANR	5693747	Identifier	bytes		5693681	1					
ANR	5693748	AssignmentExpression	"* bytes = r_hex_bin2strdup ( buf , ret )"		5693681	2		=			
ANR	5693749	Identifier	bytes		5693681	0					
ANR	5693750	CallExpression	"r_hex_bin2strdup ( buf , ret )"		5693681	1					
ANR	5693751	Callee	r_hex_bin2strdup		5693681	0					
ANR	5693752	Identifier	r_hex_bin2strdup		5693681	0					
ANR	5693753	ArgumentList	buf		5693681	1					
ANR	5693754	Argument	buf		5693681	0					
ANR	5693755	Identifier	buf		5693681	0					
ANR	5693756	Argument	ret		5693681	1					
ANR	5693757	Identifier	ret		5693681	0					
ANR	5693758	IfStatement	if ( as -> json )		5693681	5					
ANR	5693759	Condition	as -> json	72:5:1697:1704	5693681	0	True				
ANR	5693760	PtrMemberAccess	as -> json		5693681	0					
ANR	5693761	Identifier	as		5693681	0					
ANR	5693762	Identifier	json		5693681	1					
ANR	5693763	CompoundStatement		9:15:271:271	5693681	1					
ANR	5693764	ExpressionStatement	pj_o ( pj )	73:2:1711:1720	5693681	0	True				
ANR	5693765	CallExpression	pj_o ( pj )		5693681	0					
ANR	5693766	Callee	pj_o		5693681	0					
ANR	5693767	Identifier	pj_o		5693681	0					
ANR	5693768	ArgumentList	pj		5693681	1					
ANR	5693769	Argument	pj		5693681	0					
ANR	5693770	Identifier	pj		5693681	0					
ANR	5693771	ExpressionStatement	"pj_kn ( pj , ""opcode"" , offset )"	74:2:1724:1752	5693681	1	True				
ANR	5693772	CallExpression	"pj_kn ( pj , ""opcode"" , offset )"		5693681	0					
ANR	5693773	Callee	pj_kn		5693681	0					
ANR	5693774	Identifier	pj_kn		5693681	0					
ANR	5693775	ArgumentList	pj		5693681	1					
ANR	5693776	Argument	pj		5693681	0					
ANR	5693777	Identifier	pj		5693681	0					
ANR	5693778	Argument	"""opcode"""		5693681	1					
ANR	5693779	PrimaryExpression	"""opcode"""		5693681	0					
ANR	5693780	Argument	offset		5693681	2					
ANR	5693781	Identifier	offset		5693681	0					
ANR	5693782	ExpressionStatement	"pj_ks ( pj , ""bytes"" , bytes )"	75:2:1756:1782	5693681	2	True				
ANR	5693783	CallExpression	"pj_ks ( pj , ""bytes"" , bytes )"		5693681	0					
ANR	5693784	Callee	pj_ks		5693681	0					
ANR	5693785	Identifier	pj_ks		5693681	0					
ANR	5693786	ArgumentList	pj		5693681	1					
ANR	5693787	Argument	pj		5693681	0					
ANR	5693788	Identifier	pj		5693681	0					
ANR	5693789	Argument	"""bytes"""		5693681	1					
ANR	5693790	PrimaryExpression	"""bytes"""		5693681	0					
ANR	5693791	Argument	bytes		5693681	2					
ANR	5693792	Identifier	bytes		5693681	0					
ANR	5693793	ExpressionStatement	"pj_ks ( pj , ""type"" , optype )"	76:2:1786:1812	5693681	3	True				
ANR	5693794	CallExpression	"pj_ks ( pj , ""type"" , optype )"		5693681	0					
ANR	5693795	Callee	pj_ks		5693681	0					
ANR	5693796	Identifier	pj_ks		5693681	0					
ANR	5693797	ArgumentList	pj		5693681	1					
ANR	5693798	Argument	pj		5693681	0					
ANR	5693799	Identifier	pj		5693681	0					
ANR	5693800	Argument	"""type"""		5693681	1					
ANR	5693801	PrimaryExpression	"""type"""		5693681	0					
ANR	5693802	Argument	optype		5693681	2					
ANR	5693803	Identifier	optype		5693681	0					
ANR	5693804	IfStatement	if ( op -> jump != UT64_MAX )		5693681	4					
ANR	5693805	Condition	op -> jump != UT64_MAX	77:6:1820:1839	5693681	0	True				
ANR	5693806	EqualityExpression	op -> jump != UT64_MAX		5693681	0		!=			
ANR	5693807	PtrMemberAccess	op -> jump		5693681	0					
ANR	5693808	Identifier	op		5693681	0					
ANR	5693809	Identifier	jump		5693681	1					
ANR	5693810	Identifier	UT64_MAX		5693681	1					
ANR	5693811	CompoundStatement		14:28:406:406	5693681	1					
ANR	5693812	ExpressionStatement	"pj_kn ( pj , ""jump"" , op -> jump )"	78:3:1847:1875	5693681	0	True				
ANR	5693813	CallExpression	"pj_kn ( pj , ""jump"" , op -> jump )"		5693681	0					
ANR	5693814	Callee	pj_kn		5693681	0					
ANR	5693815	Identifier	pj_kn		5693681	0					
ANR	5693816	ArgumentList	pj		5693681	1					
ANR	5693817	Argument	pj		5693681	0					
ANR	5693818	Identifier	pj		5693681	0					
ANR	5693819	Argument	"""jump"""		5693681	1					
ANR	5693820	PrimaryExpression	"""jump"""		5693681	0					
ANR	5693821	Argument	op -> jump		5693681	2					
ANR	5693822	PtrMemberAccess	op -> jump		5693681	0					
ANR	5693823	Identifier	op		5693681	0					
ANR	5693824	Identifier	jump		5693681	1					
ANR	5693825	IfStatement	if ( op -> fail != UT64_MAX )		5693681	5					
ANR	5693826	Condition	op -> fail != UT64_MAX	80:6:1887:1906	5693681	0	True				
ANR	5693827	EqualityExpression	op -> fail != UT64_MAX		5693681	0		!=			
ANR	5693828	PtrMemberAccess	op -> fail		5693681	0					
ANR	5693829	Identifier	op		5693681	0					
ANR	5693830	Identifier	fail		5693681	1					
ANR	5693831	Identifier	UT64_MAX		5693681	1					
ANR	5693832	CompoundStatement		17:28:473:473	5693681	1					
ANR	5693833	ExpressionStatement	"pj_kn ( pj , ""fail"" , op -> fail )"	81:3:1914:1942	5693681	0	True				
ANR	5693834	CallExpression	"pj_kn ( pj , ""fail"" , op -> fail )"		5693681	0					
ANR	5693835	Callee	pj_kn		5693681	0					
ANR	5693836	Identifier	pj_kn		5693681	0					
ANR	5693837	ArgumentList	pj		5693681	1					
ANR	5693838	Argument	pj		5693681	0					
ANR	5693839	Identifier	pj		5693681	0					
ANR	5693840	Argument	"""fail"""		5693681	1					
ANR	5693841	PrimaryExpression	"""fail"""		5693681	0					
ANR	5693842	Argument	op -> fail		5693681	2					
ANR	5693843	PtrMemberAccess	op -> fail		5693681	0					
ANR	5693844	Identifier	op		5693681	0					
ANR	5693845	Identifier	fail		5693681	1					
ANR	5693846	IfStatement	if ( op -> val != UT64_MAX )		5693681	6					
ANR	5693847	Condition	op -> val != UT64_MAX	83:6:1954:1972	5693681	0	True				
ANR	5693848	EqualityExpression	op -> val != UT64_MAX		5693681	0		!=			
ANR	5693849	PtrMemberAccess	op -> val		5693681	0					
ANR	5693850	Identifier	op		5693681	0					
ANR	5693851	Identifier	val		5693681	1					
ANR	5693852	Identifier	UT64_MAX		5693681	1					
ANR	5693853	CompoundStatement		20:27:539:539	5693681	1					
ANR	5693854	ExpressionStatement	"pj_kn ( pj , ""val"" , op -> val )"	84:3:1980:2006	5693681	0	True				
ANR	5693855	CallExpression	"pj_kn ( pj , ""val"" , op -> val )"		5693681	0					
ANR	5693856	Callee	pj_kn		5693681	0					
ANR	5693857	Identifier	pj_kn		5693681	0					
ANR	5693858	ArgumentList	pj		5693681	1					
ANR	5693859	Argument	pj		5693681	0					
ANR	5693860	Identifier	pj		5693681	0					
ANR	5693861	Argument	"""val"""		5693681	1					
ANR	5693862	PrimaryExpression	"""val"""		5693681	0					
ANR	5693863	Argument	op -> val		5693681	2					
ANR	5693864	PtrMemberAccess	op -> val		5693681	0					
ANR	5693865	Identifier	op		5693681	0					
ANR	5693866	Identifier	val		5693681	1					
ANR	5693867	IfStatement	if ( op -> ptr != UT64_MAX )		5693681	7					
ANR	5693868	Condition	op -> ptr != UT64_MAX	86:6:2018:2036	5693681	0	True				
ANR	5693869	EqualityExpression	op -> ptr != UT64_MAX		5693681	0		!=			
ANR	5693870	PtrMemberAccess	op -> ptr		5693681	0					
ANR	5693871	Identifier	op		5693681	0					
ANR	5693872	Identifier	ptr		5693681	1					
ANR	5693873	Identifier	UT64_MAX		5693681	1					
ANR	5693874	CompoundStatement		23:27:603:603	5693681	1					
ANR	5693875	ExpressionStatement	"pj_kn ( pj , ""ptr"" , op -> ptr )"	87:3:2044:2070	5693681	0	True				
ANR	5693876	CallExpression	"pj_kn ( pj , ""ptr"" , op -> ptr )"		5693681	0					
ANR	5693877	Callee	pj_kn		5693681	0					
ANR	5693878	Identifier	pj_kn		5693681	0					
ANR	5693879	ArgumentList	pj		5693681	1					
ANR	5693880	Argument	pj		5693681	0					
ANR	5693881	Identifier	pj		5693681	0					
ANR	5693882	Argument	"""ptr"""		5693681	1					
ANR	5693883	PrimaryExpression	"""ptr"""		5693681	0					
ANR	5693884	Argument	op -> ptr		5693681	2					
ANR	5693885	PtrMemberAccess	op -> ptr		5693681	0					
ANR	5693886	Identifier	op		5693681	0					
ANR	5693887	Identifier	ptr		5693681	1					
ANR	5693888	ExpressionStatement	"pj_ks ( pj , ""stackop"" , stackop )"	89:2:2078:2108	5693681	8	True				
ANR	5693889	CallExpression	"pj_ks ( pj , ""stackop"" , stackop )"		5693681	0					
ANR	5693890	Callee	pj_ks		5693681	0					
ANR	5693891	Identifier	pj_ks		5693681	0					
ANR	5693892	ArgumentList	pj		5693681	1					
ANR	5693893	Argument	pj		5693681	0					
ANR	5693894	Identifier	pj		5693681	0					
ANR	5693895	Argument	"""stackop"""		5693681	1					
ANR	5693896	PrimaryExpression	"""stackop"""		5693681	0					
ANR	5693897	Argument	stackop		5693681	2					
ANR	5693898	Identifier	stackop		5693681	0					
ANR	5693899	ExpressionStatement	"pj_ks ( pj , ""esil"" , r_strbuf_get ( & op -> esil ) )"	90:2:2112:2156	5693681	9	True				
ANR	5693900	CallExpression	"pj_ks ( pj , ""esil"" , r_strbuf_get ( & op -> esil ) )"		5693681	0					
ANR	5693901	Callee	pj_ks		5693681	0					
ANR	5693902	Identifier	pj_ks		5693681	0					
ANR	5693903	ArgumentList	pj		5693681	1					
ANR	5693904	Argument	pj		5693681	0					
ANR	5693905	Identifier	pj		5693681	0					
ANR	5693906	Argument	"""esil"""		5693681	1					
ANR	5693907	PrimaryExpression	"""esil"""		5693681	0					
ANR	5693908	Argument	r_strbuf_get ( & op -> esil )		5693681	2					
ANR	5693909	CallExpression	r_strbuf_get ( & op -> esil )		5693681	0					
ANR	5693910	Callee	r_strbuf_get		5693681	0					
ANR	5693911	Identifier	r_strbuf_get		5693681	0					
ANR	5693912	ArgumentList	& op -> esil		5693681	1					
ANR	5693913	Argument	& op -> esil		5693681	0					
ANR	5693914	UnaryOperationExpression	& op -> esil		5693681	0					
ANR	5693915	UnaryOperator	&		5693681	0					
ANR	5693916	PtrMemberAccess	op -> esil		5693681	1					
ANR	5693917	Identifier	op		5693681	0					
ANR	5693918	Identifier	esil		5693681	1					
ANR	5693919	ExpressionStatement	"pj_kn ( pj , ""stackptr"" , op -> stackptr )"	91:2:2160:2196	5693681	10	True				
ANR	5693920	CallExpression	"pj_kn ( pj , ""stackptr"" , op -> stackptr )"		5693681	0					
ANR	5693921	Callee	pj_kn		5693681	0					
ANR	5693922	Identifier	pj_kn		5693681	0					
ANR	5693923	ArgumentList	pj		5693681	1					
ANR	5693924	Argument	pj		5693681	0					
ANR	5693925	Identifier	pj		5693681	0					
ANR	5693926	Argument	"""stackptr"""		5693681	1					
ANR	5693927	PrimaryExpression	"""stackptr"""		5693681	0					
ANR	5693928	Argument	op -> stackptr		5693681	2					
ANR	5693929	PtrMemberAccess	op -> stackptr		5693681	0					
ANR	5693930	Identifier	op		5693681	0					
ANR	5693931	Identifier	stackptr		5693681	1					
ANR	5693932	ExpressionStatement	pj_end ( pj )	92:2:2200:2211	5693681	11	True				
ANR	5693933	CallExpression	pj_end ( pj )		5693681	0					
ANR	5693934	Callee	pj_end		5693681	0					
ANR	5693935	Identifier	pj_end		5693681	0					
ANR	5693936	ArgumentList	pj		5693681	1					
ANR	5693937	Argument	pj		5693681	0					
ANR	5693938	Identifier	pj		5693681	0					
ANR	5693939	ElseStatement	else		5693681	0					
ANR	5693940	CompoundStatement		30:8:785:785	5693681	0					
ANR	5693941	Statement	printf	94:2:2225:2230	5693681	0	True				
ANR	5693942	Statement	(	94:9:2232:2232	5693681	1	True				
ANR	5693943	Statement	"""offset:   0x%08"""	94:10:2233:2249	5693681	2	True				
ANR	5693944	Statement	PFMT64x	94:28:2251:2257	5693681	3	True				
ANR	5693945	Statement	"""\\n"""	94:36:2259:2262	5693681	4	True				
ANR	5693946	Statement	","	94:40:2263:2263	5693681	5	True				
ANR	5693947	Statement	offset	94:42:2265:2270	5693681	6	True				
ANR	5693948	Statement	)	94:48:2271:2271	5693681	7	True				
ANR	5693949	ExpressionStatement		94:49:2272:2272	5693681	8	True				
ANR	5693950	ExpressionStatement	"printf ( ""bytes:    %s\\n"" , bytes )"	95:2:2276:2308	5693681	9	True				
ANR	5693951	CallExpression	"printf ( ""bytes:    %s\\n"" , bytes )"		5693681	0					
ANR	5693952	Callee	printf		5693681	0					
ANR	5693953	Identifier	printf		5693681	0					
ANR	5693954	ArgumentList	"""bytes:    %s\\n"""		5693681	1					
ANR	5693955	Argument	"""bytes:    %s\\n"""		5693681	0					
ANR	5693956	PrimaryExpression	"""bytes:    %s\\n"""		5693681	0					
ANR	5693957	Argument	bytes		5693681	1					
ANR	5693958	Identifier	bytes		5693681	0					
ANR	5693959	ExpressionStatement	"printf ( ""type:     %s\\n"" , optype )"	96:2:2312:2345	5693681	10	True				
ANR	5693960	CallExpression	"printf ( ""type:     %s\\n"" , optype )"		5693681	0					
ANR	5693961	Callee	printf		5693681	0					
ANR	5693962	Identifier	printf		5693681	0					
ANR	5693963	ArgumentList	"""type:     %s\\n"""		5693681	1					
ANR	5693964	Argument	"""type:     %s\\n"""		5693681	0					
ANR	5693965	PrimaryExpression	"""type:     %s\\n"""		5693681	0					
ANR	5693966	Argument	optype		5693681	1					
ANR	5693967	Identifier	optype		5693681	0					
ANR	5693968	Statement	if	97:2:2349:2350	5693681	11	True				
ANR	5693969	Statement	(	97:5:2352:2352	5693681	12	True				
ANR	5693970	Statement	op	97:6:2353:2354	5693681	13	True				
ANR	5693971	Statement	->	97:8:2355:2356	5693681	14	True				
ANR	5693972	Statement	jump	97:10:2357:2360	5693681	15	True				
ANR	5693973	Statement	!=	97:15:2362:2363	5693681	16	True				
ANR	5693974	Statement	-	97:18:2365:2365	5693681	17	True				
ANR	5693975	Statement	1L	97:19:2366:2367	5693681	18	True				
ANR	5693976	Statement	L	97:21:2368:2368	5693681	19	True				
ANR	5693977	Statement	)	97:22:2369:2369	5693681	20	True				
ANR	5693978	CompoundStatement		34:24:935:935	5693681	21					
ANR	5693979	Statement	printf	98:3:2376:2381	5693681	0	True				
ANR	5693980	Statement	(	98:10:2383:2383	5693681	1	True				
ANR	5693981	Statement	"""jump:     0x%08"""	98:11:2384:2400	5693681	2	True				
ANR	5693982	Statement	PFMT64x	98:29:2402:2408	5693681	3	True				
ANR	5693983	Statement	"""\\n"""	98:37:2410:2413	5693681	4	True				
ANR	5693984	Statement	","	98:41:2414:2414	5693681	5	True				
ANR	5693985	Statement	op	98:43:2416:2417	5693681	6	True				
ANR	5693986	Statement	->	98:45:2418:2419	5693681	7	True				
ANR	5693987	Statement	jump	98:47:2420:2423	5693681	8	True				
ANR	5693988	Statement	)	98:51:2424:2424	5693681	9	True				
ANR	5693989	ExpressionStatement		98:52:2425:2425	5693681	10	True				
ANR	5693990	Statement	if	100:2:2433:2434	5693681	22	True				
ANR	5693991	Statement	(	100:5:2436:2436	5693681	23	True				
ANR	5693992	Statement	op	100:6:2437:2438	5693681	24	True				
ANR	5693993	Statement	->	100:8:2439:2440	5693681	25	True				
ANR	5693994	Statement	fail	100:10:2441:2444	5693681	26	True				
ANR	5693995	Statement	!=	100:15:2446:2447	5693681	27	True				
ANR	5693996	Statement	-	100:18:2449:2449	5693681	28	True				
ANR	5693997	Statement	1L	100:19:2450:2451	5693681	29	True				
ANR	5693998	Statement	L	100:21:2452:2452	5693681	30	True				
ANR	5693999	Statement	)	100:22:2453:2453	5693681	31	True				
ANR	5694000	CompoundStatement		37:24:1019:1019	5693681	32					
ANR	5694001	Statement	printf	101:3:2460:2465	5693681	0	True				
ANR	5694002	Statement	(	101:10:2467:2467	5693681	1	True				
ANR	5694003	Statement	"""fail:     0x%08"""	101:11:2468:2484	5693681	2	True				
ANR	5694004	Statement	PFMT64x	101:29:2486:2492	5693681	3	True				
ANR	5694005	Statement	"""\\n"""	101:37:2494:2497	5693681	4	True				
ANR	5694006	Statement	","	101:41:2498:2498	5693681	5	True				
ANR	5694007	Statement	op	101:43:2500:2501	5693681	6	True				
ANR	5694008	Statement	->	101:45:2502:2503	5693681	7	True				
ANR	5694009	Statement	fail	101:47:2504:2507	5693681	8	True				
ANR	5694010	Statement	)	101:51:2508:2508	5693681	9	True				
ANR	5694011	ExpressionStatement		101:52:2509:2509	5693681	10	True				
ANR	5694012	Statement	if	105:2:2600:2601	5693681	33	True				
ANR	5694013	Statement	(	105:5:2603:2603	5693681	34	True				
ANR	5694014	Statement	op	105:6:2604:2605	5693681	35	True				
ANR	5694015	Statement	->	105:8:2606:2607	5693681	36	True				
ANR	5694016	Statement	val	105:10:2608:2610	5693681	37	True				
ANR	5694017	Statement	!=	105:14:2612:2613	5693681	38	True				
ANR	5694018	Statement	-	105:17:2615:2615	5693681	39	True				
ANR	5694019	Statement	1L	105:18:2616:2617	5693681	40	True				
ANR	5694020	Statement	L	105:20:2618:2618	5693681	41	True				
ANR	5694021	Statement	)	105:21:2619:2619	5693681	42	True				
ANR	5694022	CompoundStatement		42:23:1185:1185	5693681	43					
ANR	5694023	Statement	printf	106:3:2626:2631	5693681	0	True				
ANR	5694024	Statement	(	106:10:2633:2633	5693681	1	True				
ANR	5694025	Statement	"""value:    0x%08"""	106:11:2634:2650	5693681	2	True				
ANR	5694026	Statement	PFMT64x	106:29:2652:2658	5693681	3	True				
ANR	5694027	Statement	"""\\n"""	106:37:2660:2663	5693681	4	True				
ANR	5694028	Statement	","	106:41:2664:2664	5693681	5	True				
ANR	5694029	Statement	op	106:43:2666:2667	5693681	6	True				
ANR	5694030	Statement	->	106:45:2668:2669	5693681	7	True				
ANR	5694031	Statement	val	106:47:2670:2672	5693681	8	True				
ANR	5694032	Statement	)	106:50:2673:2673	5693681	9	True				
ANR	5694033	ExpressionStatement		106:51:2674:2674	5693681	10	True				
ANR	5694034	ExpressionStatement	"printf ( ""stackop:  %s\\n"" , stackop )"	108:2:2682:2716	5693681	44	True				
ANR	5694035	CallExpression	"printf ( ""stackop:  %s\\n"" , stackop )"		5693681	0					
ANR	5694036	Callee	printf		5693681	0					
ANR	5694037	Identifier	printf		5693681	0					
ANR	5694038	ArgumentList	"""stackop:  %s\\n"""		5693681	1					
ANR	5694039	Argument	"""stackop:  %s\\n"""		5693681	0					
ANR	5694040	PrimaryExpression	"""stackop:  %s\\n"""		5693681	0					
ANR	5694041	Argument	stackop		5693681	1					
ANR	5694042	Identifier	stackop		5693681	0					
ANR	5694043	ExpressionStatement	"printf ( ""esil:     %s\\n"" , r_strbuf_get ( & op -> esil ) )"	109:2:2720:2771	5693681	45	True				
ANR	5694044	CallExpression	"printf ( ""esil:     %s\\n"" , r_strbuf_get ( & op -> esil ) )"		5693681	0					
ANR	5694045	Callee	printf		5693681	0					
ANR	5694046	Identifier	printf		5693681	0					
ANR	5694047	ArgumentList	"""esil:     %s\\n"""		5693681	1					
ANR	5694048	Argument	"""esil:     %s\\n"""		5693681	0					
ANR	5694049	PrimaryExpression	"""esil:     %s\\n"""		5693681	0					
ANR	5694050	Argument	r_strbuf_get ( & op -> esil )		5693681	1					
ANR	5694051	CallExpression	r_strbuf_get ( & op -> esil )		5693681	0					
ANR	5694052	Callee	r_strbuf_get		5693681	0					
ANR	5694053	Identifier	r_strbuf_get		5693681	0					
ANR	5694054	ArgumentList	& op -> esil		5693681	1					
ANR	5694055	Argument	& op -> esil		5693681	0					
ANR	5694056	UnaryOperationExpression	& op -> esil		5693681	0					
ANR	5694057	UnaryOperator	&		5693681	0					
ANR	5694058	PtrMemberAccess	op -> esil		5693681	1					
ANR	5694059	Identifier	op		5693681	0					
ANR	5694060	Identifier	esil		5693681	1					
ANR	5694061	Statement	printf	110:2:2775:2780	5693681	46	True				
ANR	5694062	Statement	(	110:9:2782:2782	5693681	47	True				
ANR	5694063	Statement	"""stackptr: %"""	110:10:2783:2795	5693681	48	True				
ANR	5694064	Statement	PFMT64d	110:24:2797:2803	5693681	49	True				
ANR	5694065	Statement	"""\\n"""	110:32:2805:2808	5693681	50	True				
ANR	5694066	Statement	","	110:36:2809:2809	5693681	51	True				
ANR	5694067	Statement	op	110:38:2811:2812	5693681	52	True				
ANR	5694068	Statement	->	110:40:2813:2814	5693681	53	True				
ANR	5694069	Statement	stackptr	110:42:2815:2822	5693681	54	True				
ANR	5694070	Statement	)	110:50:2823:2823	5693681	55	True				
ANR	5694071	ExpressionStatement		110:51:2824:2824	5693681	56	True				
ANR	5694072	ExpressionStatement	"printf ( ""\\n"" )"	112:2:2910:2923	5693681	57	True				
ANR	5694073	CallExpression	"printf ( ""\\n"" )"		5693681	0					
ANR	5694074	Callee	printf		5693681	0					
ANR	5694075	Identifier	printf		5693681	0					
ANR	5694076	ArgumentList	"""\\n"""		5693681	1					
ANR	5694077	Argument	"""\\n"""		5693681	0					
ANR	5694078	PrimaryExpression	"""\\n"""		5693681	0					
ANR	5694079	ExpressionStatement	free ( stackop )	114:1:2929:2943	5693681	6	True				
ANR	5694080	CallExpression	free ( stackop )		5693681	0					
ANR	5694081	Callee	free		5693681	0					
ANR	5694082	Identifier	free		5693681	0					
ANR	5694083	ArgumentList	stackop		5693681	1					
ANR	5694084	Argument	stackop		5693681	0					
ANR	5694085	Identifier	stackop		5693681	0					
ANR	5694086	ExpressionStatement	free ( bytes )	115:1:2946:2958	5693681	7	True				
ANR	5694087	CallExpression	free ( bytes )		5693681	0					
ANR	5694088	Callee	free		5693681	0					
ANR	5694089	Identifier	free		5693681	0					
ANR	5694090	ArgumentList	bytes		5693681	1					
ANR	5694091	Argument	bytes		5693681	0					
ANR	5694092	Identifier	bytes		5693681	0					
ANR	5694093	ReturnStatement	return ret ;	116:1:2961:2971	5693681	8	True				
ANR	5694094	Identifier	ret		5693681	0					
ANR	5694095	ReturnType	static int		5693681	1					
ANR	5694096	Identifier	showanal		5693681	2					
ANR	5694097	ParameterList	"RAsmState * as , RAnalOp * op , ut64 offset , ut8 * buf , int len , PJ * pj"		5693681	3					
ANR	5694098	Parameter	RAsmState * as	64:20:1367:1379	5693681	0	True				
ANR	5694099	ParameterType	RAsmState *		5693681	0					
ANR	5694100	Identifier	as		5693681	1					
ANR	5694101	Parameter	RAnalOp * op	64:35:1382:1392	5693681	1	True				
ANR	5694102	ParameterType	RAnalOp *		5693681	0					
ANR	5694103	Identifier	op		5693681	1					
ANR	5694104	Parameter	ut64 offset	64:48:1395:1405	5693681	2	True				
ANR	5694105	ParameterType	ut64		5693681	0					
ANR	5694106	Identifier	offset		5693681	1					
ANR	5694107	Parameter	ut8 * buf	64:61:1408:1415	5693681	3	True				
ANR	5694108	ParameterType	ut8 *		5693681	0					
ANR	5694109	Identifier	buf		5693681	1					
ANR	5694110	Parameter	int len	64:71:1418:1424	5693681	4	True				
ANR	5694111	ParameterType	int		5693681	0					
ANR	5694112	Identifier	len		5693681	1					
ANR	5694113	Parameter	PJ * pj	64:80:1427:1432	5693681	5	True				
ANR	5694114	ParameterType	PJ *		5693681	0					
ANR	5694115	Identifier	pj		5693681	1					
ANR	5694116	CFGEntryNode	ENTRY		5693681		True				
ANR	5694117	CFGExitNode	EXIT		5693681		True				
ANR	5694118	Symbol	& op -> esil		5693681						
ANR	5694119	Symbol	* op		5693681						
ANR	5694120	Symbol	stackop2str		5693681						
ANR	5694121	Symbol	r_hex_bin2strdup		5693681						
ANR	5694122	Symbol	r_anal_optype_to_string		5693681						
ANR	5694123	Symbol	op -> fail		5693681						
ANR	5694124	Symbol	stackop		5693681						
ANR	5694125	Symbol	optype		5693681						
ANR	5694126	Symbol	len		5693681						
ANR	5694127	Symbol	op -> stackptr		5693681						
ANR	5694128	Symbol	as -> anal		5693681						
ANR	5694129	Symbol	op -> jump		5693681						
ANR	5694130	Symbol	UT64_MAX		5693681						
ANR	5694131	Symbol	r_anal_op		5693681						
ANR	5694132	Symbol	ret		5693681						
ANR	5694133	Symbol	op		5693681						
ANR	5694134	Symbol	offset		5693681						
ANR	5694135	Symbol	op -> ptr		5693681						
ANR	5694136	Symbol	op -> type		5693681						
ANR	5694137	Symbol	op -> val		5693681						
ANR	5694138	Symbol	as		5693681						
ANR	5694139	Symbol	buf		5693681						
ANR	5694140	Symbol	r_strbuf_get		5693681						
ANR	5694141	Symbol	bytes		5693681						
ANR	5694142	Symbol	as -> json		5693681						
ANR	5694143	Symbol	pj		5693681						
ANR	5694144	Symbol	* as		5693681						
ANR	5694145	Symbol	op -> stackop		5693681						
ANR	5694146	Symbol	R_ANAL_OP_MASK_ESIL		5693681						
ANR	5694147	Function	show_analinfo	120:0:2999:3950							
ANR	5694148	FunctionDef	"show_analinfo (RAsmState * as , const char * arg , ut64 offset)"		5694147	0					
ANR	5694149	CompoundStatement		120:70:3069:3950	5694147	0					
ANR	5694150	IdentifierDeclStatement	ut8 * buf = ( ut8 * ) strdup ( ( const char * ) arg ) ;	121:1:3072:3116	5694147	0	True				
ANR	5694151	IdentifierDecl	* buf = ( ut8 * ) strdup ( ( const char * ) arg )		5694147	0					
ANR	5694152	IdentifierDeclType	ut8 *		5694147	0					
ANR	5694153	Identifier	buf		5694147	1					
ANR	5694154	AssignmentExpression	* buf = ( ut8 * ) strdup ( ( const char * ) arg )		5694147	2		=			
ANR	5694155	Identifier	buf		5694147	0					
ANR	5694156	CastExpression	( ut8 * ) strdup ( ( const char * ) arg )		5694147	1					
ANR	5694157	CastTarget	ut8 *		5694147	0					
ANR	5694158	CallExpression	strdup ( ( const char * ) arg )		5694147	1					
ANR	5694159	Callee	strdup		5694147	0					
ANR	5694160	Identifier	strdup		5694147	0					
ANR	5694161	ArgumentList	( const char * ) arg		5694147	1					
ANR	5694162	Argument	( const char * ) arg		5694147	0					
ANR	5694163	CastExpression	( const char * ) arg		5694147	0					
ANR	5694164	CastTarget	const char *		5694147	0					
ANR	5694165	Identifier	arg		5694147	1					
ANR	5694166	IdentifierDeclStatement	"int ret , len = r_hex_str2bin ( ( char * ) buf , buf ) ;"	122:1:3119:3166	5694147	1	True				
ANR	5694167	IdentifierDecl	ret		5694147	0					
ANR	5694168	IdentifierDeclType	int		5694147	0					
ANR	5694169	Identifier	ret		5694147	1					
ANR	5694170	IdentifierDecl	"len = r_hex_str2bin ( ( char * ) buf , buf )"		5694147	1					
ANR	5694171	IdentifierDeclType	int		5694147	0					
ANR	5694172	Identifier	len		5694147	1					
ANR	5694173	AssignmentExpression	"len = r_hex_str2bin ( ( char * ) buf , buf )"		5694147	2		=			
ANR	5694174	Identifier	len		5694147	0					
ANR	5694175	CallExpression	"r_hex_str2bin ( ( char * ) buf , buf )"		5694147	1					
ANR	5694176	Callee	r_hex_str2bin		5694147	0					
ANR	5694177	Identifier	r_hex_str2bin		5694147	0					
ANR	5694178	ArgumentList	( char * ) buf		5694147	1					
ANR	5694179	Argument	( char * ) buf		5694147	0					
ANR	5694180	CastExpression	( char * ) buf		5694147	0					
ANR	5694181	CastTarget	char *		5694147	0					
ANR	5694182	Identifier	buf		5694147	1					
ANR	5694183	Argument	buf		5694147	1					
ANR	5694184	Identifier	buf		5694147	0					
ANR	5694185	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	123:1:3169:3187	5694147	2	True				
ANR	5694186	IdentifierDecl	* pj = pj_new ( )		5694147	0					
ANR	5694187	IdentifierDeclType	PJ *		5694147	0					
ANR	5694188	Identifier	pj		5694147	1					
ANR	5694189	AssignmentExpression	* pj = pj_new ( )		5694147	2		=			
ANR	5694190	Identifier	pj		5694147	0					
ANR	5694191	CallExpression	pj_new ( )		5694147	1					
ANR	5694192	Callee	pj_new		5694147	0					
ANR	5694193	Identifier	pj_new		5694147	0					
ANR	5694194	ArgumentList			5694147	1					
ANR	5694195	IfStatement	if ( ! pj )		5694147	3					
ANR	5694196	Condition	! pj	124:5:3194:3196	5694147	0	True				
ANR	5694197	UnaryOperationExpression	! pj		5694147	0					
ANR	5694198	UnaryOperator	!		5694147	0					
ANR	5694199	Identifier	pj		5694147	1					
ANR	5694200	CompoundStatement		5:10:129:129	5694147	1					
ANR	5694201	ExpressionStatement	free ( buf )	125:2:3203:3213	5694147	0	True				
ANR	5694202	CallExpression	free ( buf )		5694147	0					
ANR	5694203	Callee	free		5694147	0					
ANR	5694204	Identifier	free		5694147	0					
ANR	5694205	ArgumentList	buf		5694147	1					
ANR	5694206	Argument	buf		5694147	0					
ANR	5694207	Identifier	buf		5694147	0					
ANR	5694208	ReturnStatement	return 0 ;	126:2:3217:3225	5694147	1	True				
ANR	5694209	PrimaryExpression	0		5694147	0					
ANR	5694210	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	129:1:3233:3252	5694147	4	True				
ANR	5694211	IdentifierDecl	aop = { 0 }		5694147	0					
ANR	5694212	IdentifierDeclType	RAnalOp		5694147	0					
ANR	5694213	Identifier	aop		5694147	1					
ANR	5694214	AssignmentExpression	aop = { 0 }		5694147	2		=			
ANR	5694215	Identifier	aop		5694147	0					
ANR	5694216	InitializerList	0		5694147	1					
ANR	5694217	PrimaryExpression	0		5694147	0					
ANR	5694218	IfStatement	if ( as -> json )		5694147	5					
ANR	5694219	Condition	as -> json	131:5:3261:3268	5694147	0	True				
ANR	5694220	PtrMemberAccess	as -> json		5694147	0					
ANR	5694221	Identifier	as		5694147	0					
ANR	5694222	Identifier	json		5694147	1					
ANR	5694223	CompoundStatement		12:15:201:201	5694147	1					
ANR	5694224	ExpressionStatement	pj_a ( pj )	132:2:3275:3284	5694147	0	True				
ANR	5694225	CallExpression	pj_a ( pj )		5694147	0					
ANR	5694226	Callee	pj_a		5694147	0					
ANR	5694227	Identifier	pj_a		5694147	0					
ANR	5694228	ArgumentList	pj		5694147	1					
ANR	5694229	Argument	pj		5694147	0					
ANR	5694230	Identifier	pj		5694147	0					
ANR	5694231	ForStatement	for ( ret = 0 ; ret < len ; )		5694147	6					
ANR	5694232	ForInit	ret = 0 ;	134:6:3295:3302	5694147	0	True				
ANR	5694233	AssignmentExpression	ret = 0		5694147	0		=			
ANR	5694234	Identifier	ret		5694147	0					
ANR	5694235	PrimaryExpression	0		5694147	1					
ANR	5694236	Condition	ret < len	134:15:3304:3312	5694147	1	True				
ANR	5694237	RelationalExpression	ret < len		5694147	0		<			
ANR	5694238	Identifier	ret		5694147	0					
ANR	5694239	Identifier	len		5694147	1					
ANR	5694240	CompoundStatement		15:27:246:246	5694147	2					
ANR	5694241	ExpressionStatement	aop . size = 0	135:2:3320:3332	5694147	0	True				
ANR	5694242	AssignmentExpression	aop . size = 0		5694147	0		=			
ANR	5694243	MemberAccess	aop . size		5694147	0					
ANR	5694244	Identifier	aop		5694147	0					
ANR	5694245	Identifier	size		5694147	1					
ANR	5694246	PrimaryExpression	0		5694147	1					
ANR	5694247	IfStatement	"if ( r_anal_op ( as -> anal , & aop , offset , buf + ret , len - ret , R_ANAL_OP_MASK_BASIC ) < 1 )"		5694147	1					
ANR	5694248	Condition	"r_anal_op ( as -> anal , & aop , offset , buf + ret , len - ret , R_ANAL_OP_MASK_BASIC ) < 1"	136:6:3340:3421	5694147	0	True				
ANR	5694249	RelationalExpression	"r_anal_op ( as -> anal , & aop , offset , buf + ret , len - ret , R_ANAL_OP_MASK_BASIC ) < 1"		5694147	0		<			
ANR	5694250	CallExpression	"r_anal_op ( as -> anal , & aop , offset , buf + ret , len - ret , R_ANAL_OP_MASK_BASIC )"		5694147	0					
ANR	5694251	Callee	r_anal_op		5694147	0					
ANR	5694252	Identifier	r_anal_op		5694147	0					
ANR	5694253	ArgumentList	as -> anal		5694147	1					
ANR	5694254	Argument	as -> anal		5694147	0					
ANR	5694255	PtrMemberAccess	as -> anal		5694147	0					
ANR	5694256	Identifier	as		5694147	0					
ANR	5694257	Identifier	anal		5694147	1					
ANR	5694258	Argument	& aop		5694147	1					
ANR	5694259	UnaryOperationExpression	& aop		5694147	0					
ANR	5694260	UnaryOperator	&		5694147	0					
ANR	5694261	Identifier	aop		5694147	1					
ANR	5694262	Argument	offset		5694147	2					
ANR	5694263	Identifier	offset		5694147	0					
ANR	5694264	Argument	buf + ret		5694147	3					
ANR	5694265	AdditiveExpression	buf + ret		5694147	0		+			
ANR	5694266	Identifier	buf		5694147	0					
ANR	5694267	Identifier	ret		5694147	1					
ANR	5694268	Argument	len - ret		5694147	4					
ANR	5694269	AdditiveExpression	len - ret		5694147	0		-			
ANR	5694270	Identifier	len		5694147	0					
ANR	5694271	Identifier	ret		5694147	1					
ANR	5694272	Argument	R_ANAL_OP_MASK_BASIC		5694147	5					
ANR	5694273	Identifier	R_ANAL_OP_MASK_BASIC		5694147	0					
ANR	5694274	PrimaryExpression	1		5694147	1					
ANR	5694275	CompoundStatement		17:90:354:354	5694147	1					
ANR	5694276	Statement	eprintf	137:3:3429:3435	5694147	0	True				
ANR	5694277	Statement	(	137:11:3437:3437	5694147	1	True				
ANR	5694278	Statement	"""Error analyzing instruction at 0x%08"""	137:12:3438:3475	5694147	2	True				
ANR	5694279	Statement	PFMT64x	137:50:3476:3482	5694147	3	True				
ANR	5694280	Statement	"""\\n"""	137:57:3483:3486	5694147	4	True				
ANR	5694281	Statement	","	137:61:3487:3487	5694147	5	True				
ANR	5694282	Statement	offset	137:63:3489:3494	5694147	6	True				
ANR	5694283	Statement	)	137:69:3495:3495	5694147	7	True				
ANR	5694284	ExpressionStatement		137:70:3496:3496	5694147	8	True				
ANR	5694285	BreakStatement	break ;	138:3:3501:3506	5694147	9	True				
ANR	5694286	IfStatement	if ( aop . size < 1 )		5694147	2					
ANR	5694287	Condition	aop . size < 1	140:6:3518:3529	5694147	0	True				
ANR	5694288	RelationalExpression	aop . size < 1		5694147	0		<			
ANR	5694289	MemberAccess	aop . size		5694147	0					
ANR	5694290	Identifier	aop		5694147	0					
ANR	5694291	Identifier	size		5694147	1					
ANR	5694292	PrimaryExpression	1		5694147	1					
ANR	5694293	CompoundStatement		21:20:462:462	5694147	1					
ANR	5694294	IfStatement	if ( as -> json )		5694147	0					
ANR	5694295	Condition	as -> json	141:7:3541:3548	5694147	0	True				
ANR	5694296	PtrMemberAccess	as -> json		5694147	0					
ANR	5694297	Identifier	as		5694147	0					
ANR	5694298	Identifier	json		5694147	1					
ANR	5694299	CompoundStatement		22:17:481:481	5694147	1					
ANR	5694300	ExpressionStatement	pj_o ( pj )	142:4:3557:3566	5694147	0	True				
ANR	5694301	CallExpression	pj_o ( pj )		5694147	0					
ANR	5694302	Callee	pj_o		5694147	0					
ANR	5694303	Identifier	pj_o		5694147	0					
ANR	5694304	ArgumentList	pj		5694147	1					
ANR	5694305	Argument	pj		5694147	0					
ANR	5694306	Identifier	pj		5694147	0					
ANR	5694307	ExpressionStatement	"pj_ks ( pj , ""bytes"" , r_hex_bin2strdup ( buf , ret ) )"	143:4:3572:3621	5694147	1	True				
ANR	5694308	CallExpression	"pj_ks ( pj , ""bytes"" , r_hex_bin2strdup ( buf , ret ) )"		5694147	0					
ANR	5694309	Callee	pj_ks		5694147	0					
ANR	5694310	Identifier	pj_ks		5694147	0					
ANR	5694311	ArgumentList	pj		5694147	1					
ANR	5694312	Argument	pj		5694147	0					
ANR	5694313	Identifier	pj		5694147	0					
ANR	5694314	Argument	"""bytes"""		5694147	1					
ANR	5694315	PrimaryExpression	"""bytes"""		5694147	0					
ANR	5694316	Argument	"r_hex_bin2strdup ( buf , ret )"		5694147	2					
ANR	5694317	CallExpression	"r_hex_bin2strdup ( buf , ret )"		5694147	0					
ANR	5694318	Callee	r_hex_bin2strdup		5694147	0					
ANR	5694319	Identifier	r_hex_bin2strdup		5694147	0					
ANR	5694320	ArgumentList	buf		5694147	1					
ANR	5694321	Argument	buf		5694147	0					
ANR	5694322	Identifier	buf		5694147	0					
ANR	5694323	Argument	ret		5694147	1					
ANR	5694324	Identifier	ret		5694147	0					
ANR	5694325	ExpressionStatement	"pj_ks ( pj , ""type"" , ""Invalid"" )"	144:4:3627:3656	5694147	2	True				
ANR	5694326	CallExpression	"pj_ks ( pj , ""type"" , ""Invalid"" )"		5694147	0					
ANR	5694327	Callee	pj_ks		5694147	0					
ANR	5694328	Identifier	pj_ks		5694147	0					
ANR	5694329	ArgumentList	pj		5694147	1					
ANR	5694330	Argument	pj		5694147	0					
ANR	5694331	Identifier	pj		5694147	0					
ANR	5694332	Argument	"""type"""		5694147	1					
ANR	5694333	PrimaryExpression	"""type"""		5694147	0					
ANR	5694334	Argument	"""Invalid"""		5694147	2					
ANR	5694335	PrimaryExpression	"""Invalid"""		5694147	0					
ANR	5694336	ExpressionStatement	pj_end ( pj )	145:4:3662:3673	5694147	3	True				
ANR	5694337	CallExpression	pj_end ( pj )		5694147	0					
ANR	5694338	Callee	pj_end		5694147	0					
ANR	5694339	Identifier	pj_end		5694147	0					
ANR	5694340	ArgumentList	pj		5694147	1					
ANR	5694341	Argument	pj		5694147	0					
ANR	5694342	Identifier	pj		5694147	0					
ANR	5694343	ElseStatement	else		5694147	0					
ANR	5694344	CompoundStatement		27:10:615:615	5694147	0					
ANR	5694345	ExpressionStatement	"eprintf ( ""Invalid\\n"" )"	147:4:3691:3712	5694147	0	True				
ANR	5694346	CallExpression	"eprintf ( ""Invalid\\n"" )"		5694147	0					
ANR	5694347	Callee	eprintf		5694147	0					
ANR	5694348	Identifier	eprintf		5694147	0					
ANR	5694349	ArgumentList	"""Invalid\\n"""		5694147	1					
ANR	5694350	Argument	"""Invalid\\n"""		5694147	0					
ANR	5694351	PrimaryExpression	"""Invalid\\n"""		5694147	0					
ANR	5694352	BreakStatement	break ;	149:3:3722:3727	5694147	1	True				
ANR	5694353	ExpressionStatement	"showanal ( as , & aop , offset , buf + ret , len - ret , pj )"	151:2:3735:3788	5694147	3	True				
ANR	5694354	CallExpression	"showanal ( as , & aop , offset , buf + ret , len - ret , pj )"		5694147	0					
ANR	5694355	Callee	showanal		5694147	0					
ANR	5694356	Identifier	showanal		5694147	0					
ANR	5694357	ArgumentList	as		5694147	1					
ANR	5694358	Argument	as		5694147	0					
ANR	5694359	Identifier	as		5694147	0					
ANR	5694360	Argument	& aop		5694147	1					
ANR	5694361	UnaryOperationExpression	& aop		5694147	0					
ANR	5694362	UnaryOperator	&		5694147	0					
ANR	5694363	Identifier	aop		5694147	1					
ANR	5694364	Argument	offset		5694147	2					
ANR	5694365	Identifier	offset		5694147	0					
ANR	5694366	Argument	buf + ret		5694147	3					
ANR	5694367	AdditiveExpression	buf + ret		5694147	0		+			
ANR	5694368	Identifier	buf		5694147	0					
ANR	5694369	Identifier	ret		5694147	1					
ANR	5694370	Argument	len - ret		5694147	4					
ANR	5694371	AdditiveExpression	len - ret		5694147	0		-			
ANR	5694372	Identifier	len		5694147	0					
ANR	5694373	Identifier	ret		5694147	1					
ANR	5694374	Argument	pj		5694147	5					
ANR	5694375	Identifier	pj		5694147	0					
ANR	5694376	ExpressionStatement	ret += aop . size	152:2:3792:3807	5694147	4	True				
ANR	5694377	AssignmentExpression	ret += aop . size		5694147	0		+=			
ANR	5694378	Identifier	ret		5694147	0					
ANR	5694379	MemberAccess	aop . size		5694147	1					
ANR	5694380	Identifier	aop		5694147	0					
ANR	5694381	Identifier	size		5694147	1					
ANR	5694382	ExpressionStatement	r_anal_op_fini ( & aop )	153:2:3811:3832	5694147	5	True				
ANR	5694383	CallExpression	r_anal_op_fini ( & aop )		5694147	0					
ANR	5694384	Callee	r_anal_op_fini		5694147	0					
ANR	5694385	Identifier	r_anal_op_fini		5694147	0					
ANR	5694386	ArgumentList	& aop		5694147	1					
ANR	5694387	Argument	& aop		5694147	0					
ANR	5694388	UnaryOperationExpression	& aop		5694147	0					
ANR	5694389	UnaryOperator	&		5694147	0					
ANR	5694390	Identifier	aop		5694147	1					
ANR	5694391	IfStatement	if ( as -> json )		5694147	7					
ANR	5694392	Condition	as -> json	155:5:3842:3849	5694147	0	True				
ANR	5694393	PtrMemberAccess	as -> json		5694147	0					
ANR	5694394	Identifier	as		5694147	0					
ANR	5694395	Identifier	json		5694147	1					
ANR	5694396	CompoundStatement		36:15:782:782	5694147	1					
ANR	5694397	ExpressionStatement	pj_end ( pj )	156:2:3856:3867	5694147	0	True				
ANR	5694398	CallExpression	pj_end ( pj )		5694147	0					
ANR	5694399	Callee	pj_end		5694147	0					
ANR	5694400	Identifier	pj_end		5694147	0					
ANR	5694401	ArgumentList	pj		5694147	1					
ANR	5694402	Argument	pj		5694147	0					
ANR	5694403	Identifier	pj		5694147	0					
ANR	5694404	ExpressionStatement	"printf ( ""%s\\n"" , pj_string ( pj ) )"	157:2:3872:3903	5694147	1	True				
ANR	5694405	CallExpression	"printf ( ""%s\\n"" , pj_string ( pj ) )"		5694147	0					
ANR	5694406	Callee	printf		5694147	0					
ANR	5694407	Identifier	printf		5694147	0					
ANR	5694408	ArgumentList	"""%s\\n"""		5694147	1					
ANR	5694409	Argument	"""%s\\n"""		5694147	0					
ANR	5694410	PrimaryExpression	"""%s\\n"""		5694147	0					
ANR	5694411	Argument	pj_string ( pj )		5694147	1					
ANR	5694412	CallExpression	pj_string ( pj )		5694147	0					
ANR	5694413	Callee	pj_string		5694147	0					
ANR	5694414	Identifier	pj_string		5694147	0					
ANR	5694415	ArgumentList	pj		5694147	1					
ANR	5694416	Argument	pj		5694147	0					
ANR	5694417	Identifier	pj		5694147	0					
ANR	5694418	ExpressionStatement	pj_free ( pj )	158:2:3907:3919	5694147	2	True				
ANR	5694419	CallExpression	pj_free ( pj )		5694147	0					
ANR	5694420	Callee	pj_free		5694147	0					
ANR	5694421	Identifier	pj_free		5694147	0					
ANR	5694422	ArgumentList	pj		5694147	1					
ANR	5694423	Argument	pj		5694147	0					
ANR	5694424	Identifier	pj		5694147	0					
ANR	5694425	ExpressionStatement	free ( buf )	160:1:3925:3935	5694147	8	True				
ANR	5694426	CallExpression	free ( buf )		5694147	0					
ANR	5694427	Callee	free		5694147	0					
ANR	5694428	Identifier	free		5694147	0					
ANR	5694429	ArgumentList	buf		5694147	1					
ANR	5694430	Argument	buf		5694147	0					
ANR	5694431	Identifier	buf		5694147	0					
ANR	5694432	ReturnStatement	return ret ;	161:1:3938:3948	5694147	9	True				
ANR	5694433	Identifier	ret		5694147	0					
ANR	5694434	ReturnType	static int		5694147	1					
ANR	5694435	Identifier	show_analinfo		5694147	2					
ANR	5694436	ParameterList	"RAsmState * as , const char * arg , ut64 offset"		5694147	3					
ANR	5694437	Parameter	RAsmState * as	120:25:3024:3036	5694147	0	True				
ANR	5694438	ParameterType	RAsmState *		5694147	0					
ANR	5694439	Identifier	as		5694147	1					
ANR	5694440	Parameter	const char * arg	120:40:3039:3053	5694147	1	True				
ANR	5694441	ParameterType	const char *		5694147	0					
ANR	5694442	Identifier	arg		5694147	1					
ANR	5694443	Parameter	ut64 offset	120:57:3056:3066	5694147	2	True				
ANR	5694444	ParameterType	ut64		5694147	0					
ANR	5694445	Identifier	offset		5694147	1					
ANR	5694446	CFGEntryNode	ENTRY		5694147		True				
ANR	5694447	CFGExitNode	EXIT		5694147		True				
ANR	5694448	Symbol	ret		5694147						
ANR	5694449	Symbol	aop		5694147						
ANR	5694450	Symbol	offset		5694147						
ANR	5694451	Symbol	pj_string		5694147						
ANR	5694452	Symbol	r_hex_bin2strdup		5694147						
ANR	5694453	Symbol	R_ANAL_OP_MASK_BASIC		5694147						
ANR	5694454	Symbol	& aop		5694147						
ANR	5694455	Symbol	as		5694147						
ANR	5694456	Symbol	buf		5694147						
ANR	5694457	Symbol	aop . size		5694147						
ANR	5694458	Symbol	len		5694147						
ANR	5694459	Symbol	as -> anal		5694147						
ANR	5694460	Symbol	arg		5694147						
ANR	5694461	Symbol	as -> json		5694147						
ANR	5694462	Symbol	pj		5694147						
ANR	5694463	Symbol	pj_new		5694147						
ANR	5694464	Symbol	strdup		5694147						
ANR	5694465	Symbol	* as		5694147						
ANR	5694466	Symbol	r_hex_str2bin		5694147						
ANR	5694467	Symbol	r_anal_op		5694147						
ANR	5694468	Function	has_esil	164:0:3953:4194							
ANR	5694469	FunctionDef	"has_esil (RAsmState * as , const char * name)"		5694468	0					
ANR	5694470	CompoundStatement		164:61:4014:4194	5694468	0					
ANR	5694471	IdentifierDeclStatement	RListIter * iter ;	165:1:4017:4032	5694468	0	True				
ANR	5694472	IdentifierDecl	* iter		5694468	0					
ANR	5694473	IdentifierDeclType	RListIter *		5694468	0					
ANR	5694474	Identifier	iter		5694468	1					
ANR	5694475	IdentifierDeclStatement	RAnalPlugin * h ;	166:1:4035:4049	5694468	1	True				
ANR	5694476	IdentifierDecl	* h		5694468	0					
ANR	5694477	IdentifierDeclType	RAnalPlugin *		5694468	0					
ANR	5694478	Identifier	h		5694468	1					
ANR	5694479	Statement	r_list_foreach	167:1:4052:4065	5694468	2	True				
ANR	5694480	Statement	(	167:16:4067:4067	5694468	3	True				
ANR	5694481	Statement	as	167:17:4068:4069	5694468	4	True				
ANR	5694482	Statement	->	167:19:4070:4071	5694468	5	True				
ANR	5694483	Statement	anal	167:21:4072:4075	5694468	6	True				
ANR	5694484	Statement	->	167:25:4076:4077	5694468	7	True				
ANR	5694485	Statement	plugins	167:27:4078:4084	5694468	8	True				
ANR	5694486	Statement	","	167:34:4085:4085	5694468	9	True				
ANR	5694487	Statement	iter	167:36:4087:4090	5694468	10	True				
ANR	5694488	Statement	","	167:40:4091:4091	5694468	11	True				
ANR	5694489	Statement	h	167:42:4093:4093	5694468	12	True				
ANR	5694490	Statement	)	167:43:4094:4094	5694468	13	True				
ANR	5694491	CompoundStatement		4:45:81:81	5694468	14					
ANR	5694492	IfStatement	"if ( h -> name && ! strcmp ( name , h -> name ) )"		5694468	0					
ANR	5694493	Condition	"h -> name && ! strcmp ( name , h -> name )"	168:6:4104:4137	5694468	0	True				
ANR	5694494	AndExpression	"h -> name && ! strcmp ( name , h -> name )"		5694468	0		&&			
ANR	5694495	PtrMemberAccess	h -> name		5694468	0					
ANR	5694496	Identifier	h		5694468	0					
ANR	5694497	Identifier	name		5694468	1					
ANR	5694498	UnaryOperationExpression	"! strcmp ( name , h -> name )"		5694468	1					
ANR	5694499	UnaryOperator	!		5694468	0					
ANR	5694500	CallExpression	"strcmp ( name , h -> name )"		5694468	1					
ANR	5694501	Callee	strcmp		5694468	0					
ANR	5694502	Identifier	strcmp		5694468	0					
ANR	5694503	ArgumentList	name		5694468	1					
ANR	5694504	Argument	name		5694468	0					
ANR	5694505	Identifier	name		5694468	0					
ANR	5694506	Argument	h -> name		5694468	1					
ANR	5694507	PtrMemberAccess	h -> name		5694468	0					
ANR	5694508	Identifier	h		5694468	0					
ANR	5694509	Identifier	name		5694468	1					
ANR	5694510	CompoundStatement		5:42:125:125	5694468	1					
ANR	5694511	ReturnStatement	"return h -> esil ? ""Ae"" : ""A_"" ;"	169:3:4145:4171	5694468	0	True				
ANR	5694512	ConditionalExpression	"h -> esil ? ""Ae"" : ""A_"""		5694468	0					
ANR	5694513	Condition	h -> esil		5694468	0					
ANR	5694514	PtrMemberAccess	h -> esil		5694468	0					
ANR	5694515	Identifier	h		5694468	0					
ANR	5694516	Identifier	esil		5694468	1					
ANR	5694517	PrimaryExpression	"""Ae"""		5694468	1					
ANR	5694518	PrimaryExpression	"""A_"""		5694468	2					
ANR	5694519	ReturnStatement	"return ""__"" ;"	172:1:4181:4192	5694468	15	True				
ANR	5694520	PrimaryExpression	"""__"""		5694468	0					
ANR	5694521	ReturnType	static const char *		5694468	1					
ANR	5694522	Identifier	has_esil		5694468	2					
ANR	5694523	ParameterList	"RAsmState * as , const char * name"		5694468	3					
ANR	5694524	Parameter	RAsmState * as	164:28:3981:3993	5694468	0	True				
ANR	5694525	ParameterType	RAsmState *		5694468	0					
ANR	5694526	Identifier	as		5694468	1					
ANR	5694527	Parameter	const char * name	164:43:3996:4011	5694468	1	True				
ANR	5694528	ParameterType	const char *		5694468	0					
ANR	5694529	Identifier	name		5694468	1					
ANR	5694530	CFGEntryNode	ENTRY		5694468		True				
ANR	5694531	CFGExitNode	EXIT		5694468		True				
ANR	5694532	Symbol	strcmp		5694468						
ANR	5694533	Symbol	as		5694468						
ANR	5694534	Symbol	* h		5694468						
ANR	5694535	Symbol	h -> esil		5694468						
ANR	5694536	Symbol	name		5694468						
ANR	5694537	Symbol	h		5694468						
ANR	5694538	Symbol	iter		5694468						
ANR	5694539	Symbol	h -> name		5694468						
ANR	5694540	Function	rasm2_list	175:0:4197:5998							
ANR	5694541	FunctionDef	"rasm2_list (RAsmState * as , const char * arch)"		5694540	0					
ANR	5694542	CompoundStatement		175:56:4253:5998	5694540	0					
ANR	5694543	IdentifierDeclStatement	int i ;	176:1:4256:4261	5694540	0	True				
ANR	5694544	IdentifierDecl	i		5694540	0					
ANR	5694545	IdentifierDeclType	int		5694540	0					
ANR	5694546	Identifier	i		5694540	1					
ANR	5694547	IdentifierDeclStatement	char bits [ 32 ] ;	177:1:4264:4277	5694540	1	True				
ANR	5694548	IdentifierDecl	bits [ 32 ]		5694540	0					
ANR	5694549	IdentifierDeclType	char [ 32 ]		5694540	0					
ANR	5694550	Identifier	bits		5694540	1					
ANR	5694551	PrimaryExpression	32		5694540	2					
ANR	5694552	IdentifierDeclStatement	"const char * feat2 , * feat ;"	178:1:4280:4304	5694540	2	True				
ANR	5694553	IdentifierDecl	* feat2		5694540	0					
ANR	5694554	IdentifierDeclType	const char *		5694540	0					
ANR	5694555	Identifier	feat2		5694540	1					
ANR	5694556	IdentifierDecl	* feat		5694540	1					
ANR	5694557	IdentifierDeclType	const char *		5694540	0					
ANR	5694558	Identifier	feat		5694540	1					
ANR	5694559	IdentifierDeclStatement	RAsmPlugin * h ;	179:1:4307:4320	5694540	3	True				
ANR	5694560	IdentifierDecl	* h		5694540	0					
ANR	5694561	IdentifierDeclType	RAsmPlugin *		5694540	0					
ANR	5694562	Identifier	h		5694540	1					
ANR	5694563	IdentifierDeclStatement	RListIter * iter ;	180:1:4323:4338	5694540	4	True				
ANR	5694564	IdentifierDecl	* iter		5694540	0					
ANR	5694565	IdentifierDeclType	RListIter *		5694540	0					
ANR	5694566	Identifier	iter		5694540	1					
ANR	5694567	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	181:1:4341:4359	5694540	5	True				
ANR	5694568	IdentifierDecl	* pj = pj_new ( )		5694540	0					
ANR	5694569	IdentifierDeclType	PJ *		5694540	0					
ANR	5694570	Identifier	pj		5694540	1					
ANR	5694571	AssignmentExpression	* pj = pj_new ( )		5694540	2		=			
ANR	5694572	Identifier	pj		5694540	0					
ANR	5694573	CallExpression	pj_new ( )		5694540	1					
ANR	5694574	Callee	pj_new		5694540	0					
ANR	5694575	Identifier	pj_new		5694540	0					
ANR	5694576	ArgumentList			5694540	1					
ANR	5694577	IfStatement	if ( ! pj )		5694540	6					
ANR	5694578	Condition	! pj	182:5:4366:4368	5694540	0	True				
ANR	5694579	UnaryOperationExpression	! pj		5694540	0					
ANR	5694580	UnaryOperator	!		5694540	0					
ANR	5694581	Identifier	pj		5694540	1					
ANR	5694582	CompoundStatement		8:10:117:117	5694540	1					
ANR	5694583	ReturnStatement	return ;	183:2:4375:4381	5694540	0	True				
ANR	5694584	IfStatement	if ( as -> json )		5694540	7					
ANR	5694585	Condition	as -> json	185:5:4391:4398	5694540	0	True				
ANR	5694586	PtrMemberAccess	as -> json		5694540	0					
ANR	5694587	Identifier	as		5694540	0					
ANR	5694588	Identifier	json		5694540	1					
ANR	5694589	CompoundStatement		11:15:147:147	5694540	1					
ANR	5694590	ExpressionStatement	pj_o ( pj )	186:2:4405:4414	5694540	0	True				
ANR	5694591	CallExpression	pj_o ( pj )		5694540	0					
ANR	5694592	Callee	pj_o		5694540	0					
ANR	5694593	Identifier	pj_o		5694540	0					
ANR	5694594	ArgumentList	pj		5694540	1					
ANR	5694595	Argument	pj		5694540	0					
ANR	5694596	Identifier	pj		5694540	0					
ANR	5694597	Statement	r_list_foreach	188:1:4420:4433	5694540	8	True				
ANR	5694598	Statement	(	188:16:4435:4435	5694540	9	True				
ANR	5694599	Statement	as	188:17:4436:4437	5694540	10	True				
ANR	5694600	Statement	->	188:19:4438:4439	5694540	11	True				
ANR	5694601	Statement	a	188:21:4440:4440	5694540	12	True				
ANR	5694602	Statement	->	188:22:4441:4442	5694540	13	True				
ANR	5694603	Statement	plugins	188:24:4443:4449	5694540	14	True				
ANR	5694604	Statement	","	188:31:4450:4450	5694540	15	True				
ANR	5694605	Statement	iter	188:33:4452:4455	5694540	16	True				
ANR	5694606	Statement	","	188:37:4456:4456	5694540	17	True				
ANR	5694607	Statement	h	188:39:4458:4458	5694540	18	True				
ANR	5694608	Statement	)	188:40:4459:4459	5694540	19	True				
ANR	5694609	CompoundStatement		14:42:207:207	5694540	20					
ANR	5694610	IfStatement	if ( arch )		5694540	0					
ANR	5694611	Condition	arch	189:6:4469:4472	5694540	0	True				
ANR	5694612	Identifier	arch		5694540	0					
ANR	5694613	CompoundStatement		15:12:221:221	5694540	1					
ANR	5694614	IfStatement	"if ( h -> cpus && ! strcmp ( arch , h -> name ) )"		5694540	0					
ANR	5694615	Condition	"h -> cpus && ! strcmp ( arch , h -> name )"	190:7:4484:4517	5694540	0	True				
ANR	5694616	AndExpression	"h -> cpus && ! strcmp ( arch , h -> name )"		5694540	0		&&			
ANR	5694617	PtrMemberAccess	h -> cpus		5694540	0					
ANR	5694618	Identifier	h		5694540	0					
ANR	5694619	Identifier	cpus		5694540	1					
ANR	5694620	UnaryOperationExpression	"! strcmp ( arch , h -> name )"		5694540	1					
ANR	5694621	UnaryOperator	!		5694540	0					
ANR	5694622	CallExpression	"strcmp ( arch , h -> name )"		5694540	1					
ANR	5694623	Callee	strcmp		5694540	0					
ANR	5694624	Identifier	strcmp		5694540	0					
ANR	5694625	ArgumentList	arch		5694540	1					
ANR	5694626	Argument	arch		5694540	0					
ANR	5694627	Identifier	arch		5694540	0					
ANR	5694628	Argument	h -> name		5694540	1					
ANR	5694629	PtrMemberAccess	h -> name		5694540	0					
ANR	5694630	Identifier	h		5694540	0					
ANR	5694631	Identifier	name		5694540	1					
ANR	5694632	CompoundStatement		18:4:304:332	5694540	1					
ANR	5694633	IdentifierDeclStatement	char * c = strdup ( h -> cpus ) ;	191:4:4526:4552	5694540	0	True				
ANR	5694634	IdentifierDecl	* c = strdup ( h -> cpus )		5694540	0					
ANR	5694635	IdentifierDeclType	char *		5694540	0					
ANR	5694636	Identifier	c		5694540	1					
ANR	5694637	AssignmentExpression	* c = strdup ( h -> cpus )		5694540	2		=			
ANR	5694638	Identifier	c		5694540	0					
ANR	5694639	CallExpression	strdup ( h -> cpus )		5694540	1					
ANR	5694640	Callee	strdup		5694540	0					
ANR	5694641	Identifier	strdup		5694540	0					
ANR	5694642	ArgumentList	h -> cpus		5694540	1					
ANR	5694643	Argument	h -> cpus		5694540	0					
ANR	5694644	PtrMemberAccess	h -> cpus		5694540	0					
ANR	5694645	Identifier	h		5694540	0					
ANR	5694646	Identifier	cpus		5694540	1					
ANR	5694647	IdentifierDeclStatement	"int n = r_str_split ( c , ',' ) ;"	192:4:4558:4586	5694540	1	True				
ANR	5694648	IdentifierDecl	"n = r_str_split ( c , ',' )"		5694540	0					
ANR	5694649	IdentifierDeclType	int		5694540	0					
ANR	5694650	Identifier	n		5694540	1					
ANR	5694651	AssignmentExpression	"n = r_str_split ( c , ',' )"		5694540	2		=			
ANR	5694652	Identifier	n		5694540	0					
ANR	5694653	CallExpression	"r_str_split ( c , ',' )"		5694540	1					
ANR	5694654	Callee	r_str_split		5694540	0					
ANR	5694655	Identifier	r_str_split		5694540	0					
ANR	5694656	ArgumentList	c		5694540	1					
ANR	5694657	Argument	c		5694540	0					
ANR	5694658	Identifier	c		5694540	0					
ANR	5694659	Argument	"','"		5694540	1					
ANR	5694660	PrimaryExpression	"','"		5694540	0					
ANR	5694661	ForStatement	for ( i = 0 ; i < n ; i ++ )		5694540	2					
ANR	5694662	ForInit	i = 0 ;	193:9:4597:4602	5694540	0	True				
ANR	5694663	AssignmentExpression	i = 0		5694540	0		=			
ANR	5694664	Identifier	i		5694540	0					
ANR	5694665	PrimaryExpression	0		5694540	1					
ANR	5694666	Condition	i < n	193:16:4604:4608	5694540	1	True				
ANR	5694667	RelationalExpression	i < n		5694540	0		<			
ANR	5694668	Identifier	i		5694540	0					
ANR	5694669	Identifier	n		5694540	1					
ANR	5694670	PostIncDecOperationExpression	i ++	193:23:4611:4613	5694540	2	True				
ANR	5694671	Identifier	i		5694540	0					
ANR	5694672	IncDec	++		5694540	1					
ANR	5694673	CompoundStatement		19:28:362:362	5694540	3					
ANR	5694674	ExpressionStatement	"printf ( ""%s\\n"" , r_str_word_get0 ( c , i ) )"	194:5:4623:4662	5694540	0	True				
ANR	5694675	CallExpression	"printf ( ""%s\\n"" , r_str_word_get0 ( c , i ) )"		5694540	0					
ANR	5694676	Callee	printf		5694540	0					
ANR	5694677	Identifier	printf		5694540	0					
ANR	5694678	ArgumentList	"""%s\\n"""		5694540	1					
ANR	5694679	Argument	"""%s\\n"""		5694540	0					
ANR	5694680	PrimaryExpression	"""%s\\n"""		5694540	0					
ANR	5694681	Argument	"r_str_word_get0 ( c , i )"		5694540	1					
ANR	5694682	CallExpression	"r_str_word_get0 ( c , i )"		5694540	0					
ANR	5694683	Callee	r_str_word_get0		5694540	0					
ANR	5694684	Identifier	r_str_word_get0		5694540	0					
ANR	5694685	ArgumentList	c		5694540	1					
ANR	5694686	Argument	c		5694540	0					
ANR	5694687	Identifier	c		5694540	0					
ANR	5694688	Argument	i		5694540	1					
ANR	5694689	Identifier	i		5694540	0					
ANR	5694690	ExpressionStatement	free ( c )	196:4:4674:4682	5694540	3	True				
ANR	5694691	CallExpression	free ( c )		5694540	0					
ANR	5694692	Callee	free		5694540	0					
ANR	5694693	Identifier	free		5694540	0					
ANR	5694694	ArgumentList	c		5694540	1					
ANR	5694695	Argument	c		5694540	0					
ANR	5694696	Identifier	c		5694540	0					
ANR	5694697	BreakStatement	break ;	197:4:4688:4693	5694540	4	True				
ANR	5694698	ElseStatement	else		5694540	0					
ANR	5694699	CompoundStatement		25:9:455:455	5694540	0					
ANR	5694700	ExpressionStatement	bits [ 0 ] = 0	200:3:4714:4725	5694540	0	True				
ANR	5694701	AssignmentExpression	bits [ 0 ] = 0		5694540	0		=			
ANR	5694702	ArrayIndexing	bits [ 0 ]		5694540	0					
ANR	5694703	Identifier	bits		5694540	0					
ANR	5694704	PrimaryExpression	0		5694540	1					
ANR	5694705	PrimaryExpression	0		5694540	1					
ANR	5694706	IfStatement	if ( h -> bits == 27 )		5694540	1					
ANR	5694707	Condition	h -> bits == 27	201:7:4734:4746	5694540	0	True				
ANR	5694708	EqualityExpression	h -> bits == 27		5694540	0		==			
ANR	5694709	PtrMemberAccess	h -> bits		5694540	0					
ANR	5694710	Identifier	h		5694540	0					
ANR	5694711	Identifier	bits		5694540	1					
ANR	5694712	PrimaryExpression	27		5694540	1					
ANR	5694713	CompoundStatement		27:22:495:495	5694540	1					
ANR	5694714	ExpressionStatement	"strcat ( bits , ""27"" )"	202:4:4755:4774	5694540	0	True				
ANR	5694715	CallExpression	"strcat ( bits , ""27"" )"		5694540	0					
ANR	5694716	Callee	strcat		5694540	0					
ANR	5694717	Identifier	strcat		5694540	0					
ANR	5694718	ArgumentList	bits		5694540	1					
ANR	5694719	Argument	bits		5694540	0					
ANR	5694720	Identifier	bits		5694540	0					
ANR	5694721	Argument	"""27"""		5694540	1					
ANR	5694722	PrimaryExpression	"""27"""		5694540	0					
ANR	5694723	ElseStatement	else		5694540	0					
ANR	5694724	CompoundStatement		29:10:532:532	5694540	0					
ANR	5694725	IfStatement	if ( h -> bits & 8 )		5694540	0					
ANR	5694726	Condition	h -> bits & 8	204:8:4796:4806	5694540	0	True				
ANR	5694727	BitAndExpression	h -> bits & 8		5694540	0		&			
ANR	5694728	PtrMemberAccess	h -> bits		5694540	0					
ANR	5694729	Identifier	h		5694540	0					
ANR	5694730	Identifier	bits		5694540	1					
ANR	5694731	PrimaryExpression	8		5694540	1					
ANR	5694732	CompoundStatement		30:21:555:555	5694540	1					
ANR	5694733	ExpressionStatement	"strcat ( bits , ""8 "" )"	205:5:4816:4835	5694540	0	True				
ANR	5694734	CallExpression	"strcat ( bits , ""8 "" )"		5694540	0					
ANR	5694735	Callee	strcat		5694540	0					
ANR	5694736	Identifier	strcat		5694540	0					
ANR	5694737	ArgumentList	bits		5694540	1					
ANR	5694738	Argument	bits		5694540	0					
ANR	5694739	Identifier	bits		5694540	0					
ANR	5694740	Argument	"""8 """		5694540	1					
ANR	5694741	PrimaryExpression	"""8 """		5694540	0					
ANR	5694742	IfStatement	if ( h -> bits & 16 )		5694540	1					
ANR	5694743	Condition	h -> bits & 16	207:8:4851:4862	5694540	0	True				
ANR	5694744	BitAndExpression	h -> bits & 16		5694540	0		&			
ANR	5694745	PtrMemberAccess	h -> bits		5694540	0					
ANR	5694746	Identifier	h		5694540	0					
ANR	5694747	Identifier	bits		5694540	1					
ANR	5694748	PrimaryExpression	16		5694540	1					
ANR	5694749	CompoundStatement		33:22:611:611	5694540	1					
ANR	5694750	ExpressionStatement	"strcat ( bits , ""16 "" )"	208:5:4872:4892	5694540	0	True				
ANR	5694751	CallExpression	"strcat ( bits , ""16 "" )"		5694540	0					
ANR	5694752	Callee	strcat		5694540	0					
ANR	5694753	Identifier	strcat		5694540	0					
ANR	5694754	ArgumentList	bits		5694540	1					
ANR	5694755	Argument	bits		5694540	0					
ANR	5694756	Identifier	bits		5694540	0					
ANR	5694757	Argument	"""16 """		5694540	1					
ANR	5694758	PrimaryExpression	"""16 """		5694540	0					
ANR	5694759	IfStatement	if ( h -> bits & 32 )		5694540	2					
ANR	5694760	Condition	h -> bits & 32	210:8:4908:4919	5694540	0	True				
ANR	5694761	BitAndExpression	h -> bits & 32		5694540	0		&			
ANR	5694762	PtrMemberAccess	h -> bits		5694540	0					
ANR	5694763	Identifier	h		5694540	0					
ANR	5694764	Identifier	bits		5694540	1					
ANR	5694765	PrimaryExpression	32		5694540	1					
ANR	5694766	CompoundStatement		36:22:668:668	5694540	1					
ANR	5694767	ExpressionStatement	"strcat ( bits , ""32 "" )"	211:5:4929:4949	5694540	0	True				
ANR	5694768	CallExpression	"strcat ( bits , ""32 "" )"		5694540	0					
ANR	5694769	Callee	strcat		5694540	0					
ANR	5694770	Identifier	strcat		5694540	0					
ANR	5694771	ArgumentList	bits		5694540	1					
ANR	5694772	Argument	bits		5694540	0					
ANR	5694773	Identifier	bits		5694540	0					
ANR	5694774	Argument	"""32 """		5694540	1					
ANR	5694775	PrimaryExpression	"""32 """		5694540	0					
ANR	5694776	IfStatement	if ( h -> bits & 64 )		5694540	3					
ANR	5694777	Condition	h -> bits & 64	213:8:4965:4976	5694540	0	True				
ANR	5694778	BitAndExpression	h -> bits & 64		5694540	0		&			
ANR	5694779	PtrMemberAccess	h -> bits		5694540	0					
ANR	5694780	Identifier	h		5694540	0					
ANR	5694781	Identifier	bits		5694540	1					
ANR	5694782	PrimaryExpression	64		5694540	1					
ANR	5694783	CompoundStatement		39:22:725:725	5694540	1					
ANR	5694784	ExpressionStatement	"strcat ( bits , ""64 "" )"	214:5:4986:5006	5694540	0	True				
ANR	5694785	CallExpression	"strcat ( bits , ""64 "" )"		5694540	0					
ANR	5694786	Callee	strcat		5694540	0					
ANR	5694787	Identifier	strcat		5694540	0					
ANR	5694788	ArgumentList	bits		5694540	1					
ANR	5694789	Argument	bits		5694540	0					
ANR	5694790	Identifier	bits		5694540	0					
ANR	5694791	Argument	"""64 """		5694540	1					
ANR	5694792	PrimaryExpression	"""64 """		5694540	0					
ANR	5694793	ExpressionStatement	"feat = ""__"""	217:3:5022:5033	5694540	2	True				
ANR	5694794	AssignmentExpression	"feat = ""__"""		5694540	0		=			
ANR	5694795	Identifier	feat		5694540	0					
ANR	5694796	PrimaryExpression	"""__"""		5694540	1					
ANR	5694797	IfStatement	if ( h -> assemble && h -> disassemble )		5694540	3					
ANR	5694798	Condition	h -> assemble && h -> disassemble	218:7:5042:5070	5694540	0	True				
ANR	5694799	AndExpression	h -> assemble && h -> disassemble		5694540	0		&&			
ANR	5694800	PtrMemberAccess	h -> assemble		5694540	0					
ANR	5694801	Identifier	h		5694540	0					
ANR	5694802	Identifier	assemble		5694540	1					
ANR	5694803	PtrMemberAccess	h -> disassemble		5694540	1					
ANR	5694804	Identifier	h		5694540	0					
ANR	5694805	Identifier	disassemble		5694540	1					
ANR	5694806	CompoundStatement		44:38:819:819	5694540	1					
ANR	5694807	ExpressionStatement	"feat = ""ad"""	219:4:5079:5090	5694540	0	True				
ANR	5694808	AssignmentExpression	"feat = ""ad"""		5694540	0		=			
ANR	5694809	Identifier	feat		5694540	0					
ANR	5694810	PrimaryExpression	"""ad"""		5694540	1					
ANR	5694811	IfStatement	if ( h -> assemble && ! h -> disassemble )		5694540	4					
ANR	5694812	Condition	h -> assemble && ! h -> disassemble	221:7:5104:5133	5694540	0	True				
ANR	5694813	AndExpression	h -> assemble && ! h -> disassemble		5694540	0		&&			
ANR	5694814	PtrMemberAccess	h -> assemble		5694540	0					
ANR	5694815	Identifier	h		5694540	0					
ANR	5694816	Identifier	assemble		5694540	1					
ANR	5694817	UnaryOperationExpression	! h -> disassemble		5694540	1					
ANR	5694818	UnaryOperator	!		5694540	0					
ANR	5694819	PtrMemberAccess	h -> disassemble		5694540	1					
ANR	5694820	Identifier	h		5694540	0					
ANR	5694821	Identifier	disassemble		5694540	1					
ANR	5694822	CompoundStatement		47:39:882:882	5694540	1					
ANR	5694823	ExpressionStatement	"feat = ""a_"""	222:4:5142:5153	5694540	0	True				
ANR	5694824	AssignmentExpression	"feat = ""a_"""		5694540	0		=			
ANR	5694825	Identifier	feat		5694540	0					
ANR	5694826	PrimaryExpression	"""a_"""		5694540	1					
ANR	5694827	IfStatement	if ( ! h -> assemble && h -> disassemble )		5694540	5					
ANR	5694828	Condition	! h -> assemble && h -> disassemble	224:7:5167:5196	5694540	0	True				
ANR	5694829	AndExpression	! h -> assemble && h -> disassemble		5694540	0		&&			
ANR	5694830	UnaryOperationExpression	! h -> assemble		5694540	0					
ANR	5694831	UnaryOperator	!		5694540	0					
ANR	5694832	PtrMemberAccess	h -> assemble		5694540	1					
ANR	5694833	Identifier	h		5694540	0					
ANR	5694834	Identifier	assemble		5694540	1					
ANR	5694835	PtrMemberAccess	h -> disassemble		5694540	1					
ANR	5694836	Identifier	h		5694540	0					
ANR	5694837	Identifier	disassemble		5694540	1					
ANR	5694838	CompoundStatement		50:39:945:945	5694540	1					
ANR	5694839	ExpressionStatement	"feat = ""_d"""	225:4:5205:5216	5694540	0	True				
ANR	5694840	AssignmentExpression	"feat = ""_d"""		5694540	0		=			
ANR	5694841	Identifier	feat		5694540	0					
ANR	5694842	PrimaryExpression	"""_d"""		5694540	1					
ANR	5694843	ExpressionStatement	"feat2 = has_esil ( as , h -> name )"	227:3:5226:5256	5694540	6	True				
ANR	5694844	AssignmentExpression	"feat2 = has_esil ( as , h -> name )"		5694540	0		=			
ANR	5694845	Identifier	feat2		5694540	0					
ANR	5694846	CallExpression	"has_esil ( as , h -> name )"		5694540	1					
ANR	5694847	Callee	has_esil		5694540	0					
ANR	5694848	Identifier	has_esil		5694540	0					
ANR	5694849	ArgumentList	as		5694540	1					
ANR	5694850	Argument	as		5694540	0					
ANR	5694851	Identifier	as		5694540	0					
ANR	5694852	Argument	h -> name		5694540	1					
ANR	5694853	PtrMemberAccess	h -> name		5694540	0					
ANR	5694854	Identifier	h		5694540	0					
ANR	5694855	Identifier	name		5694540	1					
ANR	5694856	IfStatement	if ( as -> quiet )		5694540	7					
ANR	5694857	Condition	as -> quiet	228:7:5265:5273	5694540	0	True				
ANR	5694858	PtrMemberAccess	as -> quiet		5694540	0					
ANR	5694859	Identifier	as		5694540	0					
ANR	5694860	Identifier	quiet		5694540	1					
ANR	5694861	CompoundStatement		54:18:1022:1022	5694540	1					
ANR	5694862	ExpressionStatement	"printf ( ""%s\\n"" , h -> name )"	229:4:5282:5306	5694540	0	True				
ANR	5694863	CallExpression	"printf ( ""%s\\n"" , h -> name )"		5694540	0					
ANR	5694864	Callee	printf		5694540	0					
ANR	5694865	Identifier	printf		5694540	0					
ANR	5694866	ArgumentList	"""%s\\n"""		5694540	1					
ANR	5694867	Argument	"""%s\\n"""		5694540	0					
ANR	5694868	PrimaryExpression	"""%s\\n"""		5694540	0					
ANR	5694869	Argument	h -> name		5694540	1					
ANR	5694870	PtrMemberAccess	h -> name		5694540	0					
ANR	5694871	Identifier	h		5694540	0					
ANR	5694872	Identifier	name		5694540	1					
ANR	5694873	ElseStatement	else		5694540	0					
ANR	5694874	IfStatement	if ( as -> json )		5694540	0					
ANR	5694875	Condition	as -> json	230:14:5322:5329	5694540	0	True				
ANR	5694876	PtrMemberAccess	as -> json		5694540	0					
ANR	5694877	Identifier	as		5694540	0					
ANR	5694878	Identifier	json		5694540	1					
ANR	5694879	CompoundStatement		56:24:1078:1078	5694540	1					
ANR	5694880	ExpressionStatement	"pj_k ( pj , h -> name )"	231:4:5338:5356	5694540	0	True				
ANR	5694881	CallExpression	"pj_k ( pj , h -> name )"		5694540	0					
ANR	5694882	Callee	pj_k		5694540	0					
ANR	5694883	Identifier	pj_k		5694540	0					
ANR	5694884	ArgumentList	pj		5694540	1					
ANR	5694885	Argument	pj		5694540	0					
ANR	5694886	Identifier	pj		5694540	0					
ANR	5694887	Argument	h -> name		5694540	1					
ANR	5694888	PtrMemberAccess	h -> name		5694540	0					
ANR	5694889	Identifier	h		5694540	0					
ANR	5694890	Identifier	name		5694540	1					
ANR	5694891	ExpressionStatement	pj_o ( pj )	232:4:5362:5371	5694540	1	True				
ANR	5694892	CallExpression	pj_o ( pj )		5694540	0					
ANR	5694893	Callee	pj_o		5694540	0					
ANR	5694894	Identifier	pj_o		5694540	0					
ANR	5694895	ArgumentList	pj		5694540	1					
ANR	5694896	Argument	pj		5694540	0					
ANR	5694897	Identifier	pj		5694540	0					
ANR	5694898	ExpressionStatement	"pj_k ( pj , ""bits"" )"	233:4:5377:5394	5694540	2	True				
ANR	5694899	CallExpression	"pj_k ( pj , ""bits"" )"		5694540	0					
ANR	5694900	Callee	pj_k		5694540	0					
ANR	5694901	Identifier	pj_k		5694540	0					
ANR	5694902	ArgumentList	pj		5694540	1					
ANR	5694903	Argument	pj		5694540	0					
ANR	5694904	Identifier	pj		5694540	0					
ANR	5694905	Argument	"""bits"""		5694540	1					
ANR	5694906	PrimaryExpression	"""bits"""		5694540	0					
ANR	5694907	ExpressionStatement	pj_a ( pj )	234:4:5400:5409	5694540	3	True				
ANR	5694908	CallExpression	pj_a ( pj )		5694540	0					
ANR	5694909	Callee	pj_a		5694540	0					
ANR	5694910	Identifier	pj_a		5694540	0					
ANR	5694911	ArgumentList	pj		5694540	1					
ANR	5694912	Argument	pj		5694540	0					
ANR	5694913	Identifier	pj		5694540	0					
ANR	5694914	ExpressionStatement	"pj_i ( pj , 32 )"	235:4:5415:5428	5694540	4	True				
ANR	5694915	CallExpression	"pj_i ( pj , 32 )"		5694540	0					
ANR	5694916	Callee	pj_i		5694540	0					
ANR	5694917	Identifier	pj_i		5694540	0					
ANR	5694918	ArgumentList	pj		5694540	1					
ANR	5694919	Argument	pj		5694540	0					
ANR	5694920	Identifier	pj		5694540	0					
ANR	5694921	Argument	32		5694540	1					
ANR	5694922	PrimaryExpression	32		5694540	0					
ANR	5694923	ExpressionStatement	"pj_i ( pj , 64 )"	236:4:5434:5447	5694540	5	True				
ANR	5694924	CallExpression	"pj_i ( pj , 64 )"		5694540	0					
ANR	5694925	Callee	pj_i		5694540	0					
ANR	5694926	Identifier	pj_i		5694540	0					
ANR	5694927	ArgumentList	pj		5694540	1					
ANR	5694928	Argument	pj		5694540	0					
ANR	5694929	Identifier	pj		5694540	0					
ANR	5694930	Argument	64		5694540	1					
ANR	5694931	PrimaryExpression	64		5694540	0					
ANR	5694932	ExpressionStatement	pj_end ( pj )	237:4:5453:5464	5694540	6	True				
ANR	5694933	CallExpression	pj_end ( pj )		5694540	0					
ANR	5694934	Callee	pj_end		5694540	0					
ANR	5694935	Identifier	pj_end		5694540	0					
ANR	5694936	ArgumentList	pj		5694540	1					
ANR	5694937	Argument	pj		5694540	0					
ANR	5694938	Identifier	pj		5694540	0					
ANR	5694939	ExpressionStatement	"pj_ks ( pj , ""license"" , h -> license ? h -> license : ""unknown"" )"	238:4:5470:5526	5694540	7	True				
ANR	5694940	CallExpression	"pj_ks ( pj , ""license"" , h -> license ? h -> license : ""unknown"" )"		5694540	0					
ANR	5694941	Callee	pj_ks		5694540	0					
ANR	5694942	Identifier	pj_ks		5694540	0					
ANR	5694943	ArgumentList	pj		5694540	1					
ANR	5694944	Argument	pj		5694540	0					
ANR	5694945	Identifier	pj		5694540	0					
ANR	5694946	Argument	"""license"""		5694540	1					
ANR	5694947	PrimaryExpression	"""license"""		5694540	0					
ANR	5694948	Argument	"h -> license ? h -> license : ""unknown"""		5694540	2					
ANR	5694949	ConditionalExpression	"h -> license ? h -> license : ""unknown"""		5694540	0					
ANR	5694950	Condition	h -> license		5694540	0					
ANR	5694951	PtrMemberAccess	h -> license		5694540	0					
ANR	5694952	Identifier	h		5694540	0					
ANR	5694953	Identifier	license		5694540	1					
ANR	5694954	PtrMemberAccess	h -> license		5694540	1					
ANR	5694955	Identifier	h		5694540	0					
ANR	5694956	Identifier	license		5694540	1					
ANR	5694957	PrimaryExpression	"""unknown"""		5694540	2					
ANR	5694958	ExpressionStatement	"pj_ks ( pj , ""description"" , h -> desc )"	239:4:5532:5566	5694540	8	True				
ANR	5694959	CallExpression	"pj_ks ( pj , ""description"" , h -> desc )"		5694540	0					
ANR	5694960	Callee	pj_ks		5694540	0					
ANR	5694961	Identifier	pj_ks		5694540	0					
ANR	5694962	ArgumentList	pj		5694540	1					
ANR	5694963	Argument	pj		5694540	0					
ANR	5694964	Identifier	pj		5694540	0					
ANR	5694965	Argument	"""description"""		5694540	1					
ANR	5694966	PrimaryExpression	"""description"""		5694540	0					
ANR	5694967	Argument	h -> desc		5694540	2					
ANR	5694968	PtrMemberAccess	h -> desc		5694540	0					
ANR	5694969	Identifier	h		5694540	0					
ANR	5694970	Identifier	desc		5694540	1					
ANR	5694971	ExpressionStatement	"pj_ks ( pj , ""features"" , feat )"	240:4:5572:5600	5694540	9	True				
ANR	5694972	CallExpression	"pj_ks ( pj , ""features"" , feat )"		5694540	0					
ANR	5694973	Callee	pj_ks		5694540	0					
ANR	5694974	Identifier	pj_ks		5694540	0					
ANR	5694975	ArgumentList	pj		5694540	1					
ANR	5694976	Argument	pj		5694540	0					
ANR	5694977	Identifier	pj		5694540	0					
ANR	5694978	Argument	"""features"""		5694540	1					
ANR	5694979	PrimaryExpression	"""features"""		5694540	0					
ANR	5694980	Argument	feat		5694540	2					
ANR	5694981	Identifier	feat		5694540	0					
ANR	5694982	ExpressionStatement	pj_end ( pj )	241:4:5606:5617	5694540	10	True				
ANR	5694983	CallExpression	pj_end ( pj )		5694540	0					
ANR	5694984	Callee	pj_end		5694540	0					
ANR	5694985	Identifier	pj_end		5694540	0					
ANR	5694986	ArgumentList	pj		5694540	1					
ANR	5694987	Argument	pj		5694540	0					
ANR	5694988	Identifier	pj		5694540	0					
ANR	5694989	ElseStatement	else		5694540	0					
ANR	5694990	CompoundStatement		68:10:1375:1375	5694540	0					
ANR	5694991	ExpressionStatement	"printf ( ""%s%s  %-9s  %-11s %-7s %s"" , feat , feat2 , bits , h -> name , h -> license ? h -> license : ""unknown"" , h -> desc )"	243:4:5635:5753	5694540	0	True				
ANR	5694992	CallExpression	"printf ( ""%s%s  %-9s  %-11s %-7s %s"" , feat , feat2 , bits , h -> name , h -> license ? h -> license : ""unknown"" , h -> desc )"		5694540	0					
ANR	5694993	Callee	printf		5694540	0					
ANR	5694994	Identifier	printf		5694540	0					
ANR	5694995	ArgumentList	"""%s%s  %-9s  %-11s %-7s %s"""		5694540	1					
ANR	5694996	Argument	"""%s%s  %-9s  %-11s %-7s %s"""		5694540	0					
ANR	5694997	PrimaryExpression	"""%s%s  %-9s  %-11s %-7s %s"""		5694540	0					
ANR	5694998	Argument	feat		5694540	1					
ANR	5694999	Identifier	feat		5694540	0					
ANR	5695000	Argument	feat2		5694540	2					
ANR	5695001	Identifier	feat2		5694540	0					
ANR	5695002	Argument	bits		5694540	3					
ANR	5695003	Identifier	bits		5694540	0					
ANR	5695004	Argument	h -> name		5694540	4					
ANR	5695005	PtrMemberAccess	h -> name		5694540	0					
ANR	5695006	Identifier	h		5694540	0					
ANR	5695007	Identifier	name		5694540	1					
ANR	5695008	Argument	"h -> license ? h -> license : ""unknown"""		5694540	5					
ANR	5695009	ConditionalExpression	"h -> license ? h -> license : ""unknown"""		5694540	0					
ANR	5695010	Condition	h -> license		5694540	0					
ANR	5695011	PtrMemberAccess	h -> license		5694540	0					
ANR	5695012	Identifier	h		5694540	0					
ANR	5695013	Identifier	license		5694540	1					
ANR	5695014	PtrMemberAccess	h -> license		5694540	1					
ANR	5695015	Identifier	h		5694540	0					
ANR	5695016	Identifier	license		5694540	1					
ANR	5695017	PrimaryExpression	"""unknown"""		5694540	2					
ANR	5695018	Argument	h -> desc		5694540	6					
ANR	5695019	PtrMemberAccess	h -> desc		5694540	0					
ANR	5695020	Identifier	h		5694540	0					
ANR	5695021	Identifier	desc		5694540	1					
ANR	5695022	IfStatement	if ( h -> author )		5694540	1					
ANR	5695023	Condition	h -> author	246:8:5763:5771	5694540	0	True				
ANR	5695024	PtrMemberAccess	h -> author		5694540	0					
ANR	5695025	Identifier	h		5694540	0					
ANR	5695026	Identifier	author		5694540	1					
ANR	5695027	CompoundStatement		72:19:1520:1520	5694540	1					
ANR	5695028	ExpressionStatement	"printf ( "" (by %s)"" , h -> author )"	247:5:5781:5811	5694540	0	True				
ANR	5695029	CallExpression	"printf ( "" (by %s)"" , h -> author )"		5694540	0					
ANR	5695030	Callee	printf		5694540	0					
ANR	5695031	Identifier	printf		5694540	0					
ANR	5695032	ArgumentList	""" (by %s)"""		5694540	1					
ANR	5695033	Argument	""" (by %s)"""		5694540	0					
ANR	5695034	PrimaryExpression	""" (by %s)"""		5694540	0					
ANR	5695035	Argument	h -> author		5694540	1					
ANR	5695036	PtrMemberAccess	h -> author		5694540	0					
ANR	5695037	Identifier	h		5694540	0					
ANR	5695038	Identifier	author		5694540	1					
ANR	5695039	IfStatement	if ( h -> version )		5694540	2					
ANR	5695040	Condition	h -> version	249:8:5827:5836	5694540	0	True				
ANR	5695041	PtrMemberAccess	h -> version		5694540	0					
ANR	5695042	Identifier	h		5694540	0					
ANR	5695043	Identifier	version		5694540	1					
ANR	5695044	CompoundStatement		75:20:1585:1585	5694540	1					
ANR	5695045	ExpressionStatement	"printf ( "" v%s"" , h -> version )"	250:5:5846:5873	5694540	0	True				
ANR	5695046	CallExpression	"printf ( "" v%s"" , h -> version )"		5694540	0					
ANR	5695047	Callee	printf		5694540	0					
ANR	5695048	Identifier	printf		5694540	0					
ANR	5695049	ArgumentList	""" v%s"""		5694540	1					
ANR	5695050	Argument	""" v%s"""		5694540	0					
ANR	5695051	PrimaryExpression	""" v%s"""		5694540	0					
ANR	5695052	Argument	h -> version		5694540	1					
ANR	5695053	PtrMemberAccess	h -> version		5694540	0					
ANR	5695054	Identifier	h		5694540	0					
ANR	5695055	Identifier	version		5694540	1					
ANR	5695056	ExpressionStatement	"printf ( ""\\n"" )"	252:4:5885:5898	5694540	3	True				
ANR	5695057	CallExpression	"printf ( ""\\n"" )"		5694540	0					
ANR	5695058	Callee	printf		5694540	0					
ANR	5695059	Identifier	printf		5694540	0					
ANR	5695060	ArgumentList	"""\\n"""		5694540	1					
ANR	5695061	Argument	"""\\n"""		5694540	0					
ANR	5695062	PrimaryExpression	"""\\n"""		5694540	0					
ANR	5695063	IfStatement	if ( as -> json )		5694540	21					
ANR	5695064	Condition	as -> json	256:5:5917:5924	5694540	0	True				
ANR	5695065	PtrMemberAccess	as -> json		5694540	0					
ANR	5695066	Identifier	as		5694540	0					
ANR	5695067	Identifier	json		5694540	1					
ANR	5695068	CompoundStatement		82:15:1673:1673	5694540	1					
ANR	5695069	ExpressionStatement	pj_end ( pj )	257:2:5931:5942	5694540	0	True				
ANR	5695070	CallExpression	pj_end ( pj )		5694540	0					
ANR	5695071	Callee	pj_end		5694540	0					
ANR	5695072	Identifier	pj_end		5694540	0					
ANR	5695073	ArgumentList	pj		5694540	1					
ANR	5695074	Argument	pj		5694540	0					
ANR	5695075	Identifier	pj		5694540	0					
ANR	5695076	ExpressionStatement	"printf ( ""%s\\n"" , pj_string ( pj ) )"	258:2:5946:5977	5694540	1	True				
ANR	5695077	CallExpression	"printf ( ""%s\\n"" , pj_string ( pj ) )"		5694540	0					
ANR	5695078	Callee	printf		5694540	0					
ANR	5695079	Identifier	printf		5694540	0					
ANR	5695080	ArgumentList	"""%s\\n"""		5694540	1					
ANR	5695081	Argument	"""%s\\n"""		5694540	0					
ANR	5695082	PrimaryExpression	"""%s\\n"""		5694540	0					
ANR	5695083	Argument	pj_string ( pj )		5694540	1					
ANR	5695084	CallExpression	pj_string ( pj )		5694540	0					
ANR	5695085	Callee	pj_string		5694540	0					
ANR	5695086	Identifier	pj_string		5694540	0					
ANR	5695087	ArgumentList	pj		5694540	1					
ANR	5695088	Argument	pj		5694540	0					
ANR	5695089	Identifier	pj		5694540	0					
ANR	5695090	ExpressionStatement	pj_free ( pj )	259:2:5981:5993	5694540	2	True				
ANR	5695091	CallExpression	pj_free ( pj )		5694540	0					
ANR	5695092	Callee	pj_free		5694540	0					
ANR	5695093	Identifier	pj_free		5694540	0					
ANR	5695094	ArgumentList	pj		5694540	1					
ANR	5695095	Argument	pj		5694540	0					
ANR	5695096	Identifier	pj		5694540	0					
ANR	5695097	ReturnType	static void		5694540	1					
ANR	5695098	Identifier	rasm2_list		5694540	2					
ANR	5695099	ParameterList	"RAsmState * as , const char * arch"		5694540	3					
ANR	5695100	Parameter	RAsmState * as	175:23:4220:4232	5694540	0	True				
ANR	5695101	ParameterType	RAsmState *		5694540	0					
ANR	5695102	Identifier	as		5694540	1					
ANR	5695103	Parameter	const char * arch	175:38:4235:4250	5694540	1	True				
ANR	5695104	ParameterType	const char *		5694540	0					
ANR	5695105	Identifier	arch		5694540	1					
ANR	5695106	CFGEntryNode	ENTRY		5694540		True				
ANR	5695107	CFGExitNode	EXIT		5694540		True				
ANR	5695108	CFGErrorNode	ERROR		5694540		True				
ANR	5695109	Symbol	h -> desc		5694540						
ANR	5695110	Symbol	pj_string		5694540						
ANR	5695111	Symbol	has_esil		5694540						
ANR	5695112	Symbol	h -> cpus		5694540						
ANR	5695113	Symbol	feat2		5694540						
ANR	5695114	Symbol	h -> name		5694540						
ANR	5695115	Symbol	h -> assemble		5694540						
ANR	5695116	Symbol	h -> license		5694540						
ANR	5695117	Symbol	feat		5694540						
ANR	5695118	Symbol	strcmp		5694540						
ANR	5695119	Symbol	* bits		5694540						
ANR	5695120	Symbol	c		5694540						
ANR	5695121	Symbol	h -> disassemble		5694540						
ANR	5695122	Symbol	as -> quiet		5694540						
ANR	5695123	Symbol	bits		5694540						
ANR	5695124	Symbol	h		5694540						
ANR	5695125	Symbol	i		5694540						
ANR	5695126	Symbol	iter		5694540						
ANR	5695127	Symbol	r_str_word_get0		5694540						
ANR	5695128	Symbol	n		5694540						
ANR	5695129	Symbol	as		5694540						
ANR	5695130	Symbol	* h		5694540						
ANR	5695131	Symbol	r_str_split		5694540						
ANR	5695132	Symbol	h -> bits		5694540						
ANR	5695133	Symbol	as -> json		5694540						
ANR	5695134	Symbol	h -> author		5694540						
ANR	5695135	Symbol	h -> version		5694540						
ANR	5695136	Symbol	pj		5694540						
ANR	5695137	Symbol	pj_new		5694540						
ANR	5695138	Symbol	arch		5694540						
ANR	5695139	Symbol	* as		5694540						
ANR	5695140	Symbol	strdup		5694540						
ANR	5695141	Function	rasm_show_help	263:0:6001:8284							
ANR	5695142	FunctionDef	rasm_show_help (int v)		5695141	0					
ANR	5695143	CompoundStatement		263:33:6034:8284	5695141	0					
ANR	5695144	IfStatement	if ( v < 2 )		5695141	0					
ANR	5695145	Condition	v < 2	264:5:6041:6045	5695141	0	True				
ANR	5695146	RelationalExpression	v < 2		5695141	0		<			
ANR	5695147	Identifier	v		5695141	0					
ANR	5695148	PrimaryExpression	2		5695141	1					
ANR	5695149	CompoundStatement		2:12:13:13	5695141	1					
ANR	5695150	Statement	printf	265:2:6052:6057	5695141	0	True				
ANR	5695151	Statement	(	265:9:6059:6059	5695141	1	True				
ANR	5695152	Statement	"""Usage: rasm2 [-ACdDehLBvw] [-a arch] [-b bits] [-o addr] [-s syntax]\\n"""	265:10:6060:6131	5695141	2	True				
ANR	5695153	Statement	"""             [-f file] [-F fil:ter] [-i skip] [-l len] 'code'|hex|-\\n"""	266:3:6136:6206	5695141	3	True				
ANR	5695154	Statement	)	266:74:6207:6207	5695141	4	True				
ANR	5695155	ExpressionStatement		266:75:6208:6208	5695141	5	True				
ANR	5695156	IfStatement	if ( v != 1 )		5695141	1					
ANR	5695157	Condition	v != 1	268:5:6218:6223	5695141	0	True				
ANR	5695158	EqualityExpression	v != 1		5695141	0		!=			
ANR	5695159	Identifier	v		5695141	0					
ANR	5695160	PrimaryExpression	1		5695141	1					
ANR	5695161	CompoundStatement		6:13:191:191	5695141	1					
ANR	5695162	Statement	printf	269:2:6230:6235	5695141	0	True				
ANR	5695163	Statement	(	269:9:6237:6237	5695141	1	True				
ANR	5695164	Statement	""" -a [arch]    Set architecture to assemble/disassemble (see -L)\\n"""	269:10:6238:6304	5695141	2	True				
ANR	5695165	Statement	""" -A           Show Analysis information from given hexpairs\\n"""	270:3:6309:6371	5695141	3	True				
ANR	5695166	Statement	""" -b [bits]    Set cpu register size (8, 16, 32, 64) (RASM2_BITS)\\n"""	271:3:6376:6443	5695141	4	True				
ANR	5695167	Statement	""" -B           Binary input/output (-l is mandatory for binary input)\\n"""	272:3:6448:6519	5695141	5	True				
ANR	5695168	Statement	""" -c [cpu]     Select specific CPU (depends on arch)\\n"""	273:3:6524:6578	5695141	6	True				
ANR	5695169	Statement	""" -C           Output in C format\\n"""	274:3:6583:6618	5695141	7	True				
ANR	5695170	Statement	""" -d, -D       Disassemble from hexpair bytes (-D show hexpairs)\\n"""	275:3:6623:6689	5695141	8	True				
ANR	5695171	Statement	""" -e           Use big endian instead of little endian\\n"""	276:3:6694:6750	5695141	9	True				
ANR	5695172	Statement	""" -E           Display ESIL expression (same input as in -d)\\n"""	277:3:6755:6817	5695141	10	True				
ANR	5695173	Statement	""" -f [file]    Read data from file\\n"""	278:3:6822:6858	5695141	11	True				
ANR	5695174	Statement	""" -F [in:out]  Specify input and/or output filters (att2intel, x86.pseudo, ...)\\n"""	279:3:6863:6944	5695141	12	True				
ANR	5695175	Statement	""" -h, -hh      Show this help, -hh for long\\n"""	280:3:6949:6994	5695141	13	True				
ANR	5695176	Statement	""" -i [len]     ignore/skip N bytes of the input buffer\\n"""	281:3:6999:7055	5695141	14	True				
ANR	5695177	Statement	""" -j           output in json format\\n"""	282:3:7060:7098	5695141	15	True				
ANR	5695178	Statement	""" -k [kernel]  Select operating system (linux, windows, darwin, ..)\\n"""	283:3:7103:7172	5695141	16	True				
ANR	5695179	Statement	""" -l [len]     Input/Output length\\n"""	284:3:7177:7213	5695141	17	True				
ANR	5695180	Statement	""" -L           List Asm plugins: (a=asm, d=disasm, A=analyze, e=ESIL)\\n"""	285:3:7218:7289	5695141	18	True				
ANR	5695181	Statement	""" -o,-@ [addr] Set start address for code (default 0)\\n"""	286:3:7294:7349	5695141	19	True				
ANR	5695182	Statement	""" -O [file]    Output file name (rasm2 -Bf a.asm -O a)\\n"""	287:3:7354:7410	5695141	20	True				
ANR	5695183	Statement	""" -p           Run SPP over input for assembly\\n"""	288:3:7415:7463	5695141	21	True				
ANR	5695184	Statement	""" -q           quiet mode\\n"""	289:3:7468:7495	5695141	22	True				
ANR	5695185	Statement	""" -r           output in radare commands\\n"""	290:3:7500:7542	5695141	23	True				
ANR	5695186	Statement	""" -s [syntax]  Select syntax (intel, att)\\n"""	291:3:7547:7590	5695141	24	True				
ANR	5695187	Statement	""" -v           Show version information\\n"""	292:3:7595:7636	5695141	25	True				
ANR	5695188	Statement	""" -x           Use hex dwords instead of hex pairs when assembling.\\n"""	293:3:7641:7710	5695141	26	True				
ANR	5695189	Statement	""" -w           What's this instruction for? describe opcode\\n"""	294:3:7715:7776	5695141	27	True				
ANR	5695190	Statement	""" If '-l' value is greater than output length, output is padded with nops\\n"""	295:3:7781:7856	5695141	28	True				
ANR	5695191	Statement	""" If the last argument is '-' reads from stdin\\n"""	296:3:7861:7909	5695141	29	True				
ANR	5695192	Statement	)	296:52:7910:7910	5695141	30	True				
ANR	5695193	ExpressionStatement		296:53:7911:7911	5695141	31	True				
ANR	5695194	Statement	printf	297:2:7915:7920	5695141	32	True				
ANR	5695195	Statement	(	297:9:7922:7922	5695141	33	True				
ANR	5695196	Statement	"""Environment:\\n"""	297:10:7923:7938	5695141	34	True				
ANR	5695197	Statement	""" RASM2_NOPLUGINS  do not load shared plugins (speedup loading)\\n"""	298:3:7943:8008	5695141	35	True				
ANR	5695198	Statement	""" RASM2_ARCH       same as rasm2 -a\\n"""	299:3:8013:8050	5695141	36	True				
ANR	5695199	Statement	""" RASM2_BITS       same as rasm2 -b\\n"""	300:3:8055:8092	5695141	37	True				
ANR	5695200	Statement	""" R_DEBUG          if defined, show error messages and crash signal\\n"""	301:3:8097:8166	5695141	38	True				
ANR	5695201	Statement	""""""	302:3:8171:8172	5695141	39	True				
ANR	5695202	Statement	)	302:5:8173:8173	5695141	40	True				
ANR	5695203	ExpressionStatement		302:6:8174:8174	5695141	41	True				
ANR	5695204	IfStatement	if ( v == 2 )		5695141	2					
ANR	5695205	Condition	v == 2	304:5:8184:8189	5695141	0	True				
ANR	5695206	EqualityExpression	v == 2		5695141	0		==			
ANR	5695207	Identifier	v		5695141	0					
ANR	5695208	PrimaryExpression	2		5695141	1					
ANR	5695209	CompoundStatement		42:13:2157:2157	5695141	1					
ANR	5695210	ExpressionStatement	"printf ( ""Supported Assembler directives:\\n"" )"	305:2:8196:8240	5695141	0	True				
ANR	5695211	CallExpression	"printf ( ""Supported Assembler directives:\\n"" )"		5695141	0					
ANR	5695212	Callee	printf		5695141	0					
ANR	5695213	Identifier	printf		5695141	0					
ANR	5695214	ArgumentList	"""Supported Assembler directives:\\n"""		5695141	1					
ANR	5695215	Argument	"""Supported Assembler directives:\\n"""		5695141	0					
ANR	5695216	PrimaryExpression	"""Supported Assembler directives:\\n"""		5695141	0					
ANR	5695217	ExpressionStatement	r_asm_list_directives ( )	306:2:8244:8268	5695141	1	True				
ANR	5695218	CallExpression	r_asm_list_directives ( )		5695141	0					
ANR	5695219	Callee	r_asm_list_directives		5695141	0					
ANR	5695220	Identifier	r_asm_list_directives		5695141	0					
ANR	5695221	ArgumentList			5695141	1					
ANR	5695222	ReturnStatement	return 0 ;	308:1:8274:8282	5695141	3	True				
ANR	5695223	PrimaryExpression	0		5695141	0					
ANR	5695224	ReturnType	static int		5695141	1					
ANR	5695225	Identifier	rasm_show_help		5695141	2					
ANR	5695226	ParameterList	int v		5695141	3					
ANR	5695227	Parameter	int v	263:26:6027:6031	5695141	0	True				
ANR	5695228	ParameterType	int		5695141	0					
ANR	5695229	Identifier	v		5695141	1					
ANR	5695230	CFGEntryNode	ENTRY		5695141		True				
ANR	5695231	CFGExitNode	EXIT		5695141		True				
ANR	5695232	Symbol	v		5695141						
ANR	5695233	Function	rasm_disasm	311:0:8287:10095							
ANR	5695234	FunctionDef	"rasm_disasm (RAsmState * as , char * buf , ut64 offset , int len , int bits , int ascii , int bin , int hex)"		5695233	0					
ANR	5695235	CompoundStatement		311:110:8397:10095	5695233	0					
ANR	5695236	IdentifierDeclStatement	RAsmCode * acode ;	312:1:8400:8415	5695233	0	True				
ANR	5695237	IdentifierDecl	* acode		5695233	0					
ANR	5695238	IdentifierDeclType	RAsmCode *		5695233	0					
ANR	5695239	Identifier	acode		5695233	1					
ANR	5695240	IdentifierDeclStatement	ut8 * data = NULL ;	313:1:8418:8434	5695233	1	True				
ANR	5695241	IdentifierDecl	* data = NULL		5695233	0					
ANR	5695242	IdentifierDeclType	ut8 *		5695233	0					
ANR	5695243	Identifier	data		5695233	1					
ANR	5695244	AssignmentExpression	* data = NULL		5695233	2		=			
ANR	5695245	Identifier	NULL		5695233	0					
ANR	5695246	Identifier	NULL		5695233	1					
ANR	5695247	IdentifierDeclStatement	int ret = 0 ;	314:1:8437:8448	5695233	2	True				
ANR	5695248	IdentifierDecl	ret = 0		5695233	0					
ANR	5695249	IdentifierDeclType	int		5695233	0					
ANR	5695250	Identifier	ret		5695233	1					
ANR	5695251	AssignmentExpression	ret = 0		5695233	2		=			
ANR	5695252	Identifier	ret		5695233	0					
ANR	5695253	PrimaryExpression	0		5695233	1					
ANR	5695254	IdentifierDeclStatement	ut64 clen = 0 ;	315:1:8451:8464	5695233	3	True				
ANR	5695255	IdentifierDecl	clen = 0		5695233	0					
ANR	5695256	IdentifierDeclType	ut64		5695233	0					
ANR	5695257	Identifier	clen		5695233	1					
ANR	5695258	AssignmentExpression	clen = 0		5695233	2		=			
ANR	5695259	Identifier	clen		5695233	0					
ANR	5695260	PrimaryExpression	0		5695233	1					
ANR	5695261	IfStatement	if ( bits == 1 )		5695233	4					
ANR	5695262	Condition	bits == 1	316:5:8471:8479	5695233	0	True				
ANR	5695263	EqualityExpression	bits == 1		5695233	0		==			
ANR	5695264	Identifier	bits		5695233	0					
ANR	5695265	PrimaryExpression	1		5695233	1					
ANR	5695266	CompoundStatement		6:16:84:84	5695233	1					
ANR	5695267	ExpressionStatement	len /= 8	317:2:8486:8494	5695233	0	True				
ANR	5695268	AssignmentExpression	len /= 8		5695233	0		/=			
ANR	5695269	Identifier	len		5695233	0					
ANR	5695270	PrimaryExpression	8		5695233	1					
ANR	5695271	IfStatement	if ( bin )		5695233	5					
ANR	5695272	Condition	bin	319:5:8504:8506	5695233	0	True				
ANR	5695273	Identifier	bin		5695233	0					
ANR	5695274	CompoundStatement		9:10:111:111	5695233	1					
ANR	5695275	IfStatement	if ( len < 0 )		5695233	0					
ANR	5695276	Condition	len < 0	320:6:8517:8523	5695233	0	True				
ANR	5695277	RelationalExpression	len < 0		5695233	0		<			
ANR	5695278	Identifier	len		5695233	0					
ANR	5695279	PrimaryExpression	0		5695233	1					
ANR	5695280	CompoundStatement		10:15:128:128	5695233	1					
ANR	5695281	ReturnStatement	return false ;	321:3:8531:8543	5695233	0	True				
ANR	5695282	Identifier	false		5695233	0					
ANR	5695283	ExpressionStatement	clen = len	323:2:8551:8561	5695233	1	True				
ANR	5695284	AssignmentExpression	clen = len		5695233	0		=			
ANR	5695285	Identifier	clen		5695233	0					
ANR	5695286	Identifier	len		5695233	1					
ANR	5695287	ExpressionStatement	data = ( ut8 * ) buf	324:2:8572:8589	5695233	2	True				
ANR	5695288	AssignmentExpression	data = ( ut8 * ) buf		5695233	0		=			
ANR	5695289	Identifier	data		5695233	0					
ANR	5695290	CastExpression	( ut8 * ) buf		5695233	1					
ANR	5695291	CastTarget	ut8 *		5695233	0					
ANR	5695292	Identifier	buf		5695233	1					
ANR	5695293	ElseStatement	else		5695233	0					
ANR	5695294	IfStatement	if ( ascii )		5695233	0					
ANR	5695295	Condition	ascii	325:12:8603:8607	5695233	0	True				
ANR	5695296	Identifier	ascii		5695233	0					
ANR	5695297	CompoundStatement		15:19:212:212	5695233	1					
ANR	5695298	ExpressionStatement	clen = strlen ( buf )	326:2:8614:8633	5695233	0	True				
ANR	5695299	AssignmentExpression	clen = strlen ( buf )		5695233	0		=			
ANR	5695300	Identifier	clen		5695233	0					
ANR	5695301	CallExpression	strlen ( buf )		5695233	1					
ANR	5695302	Callee	strlen		5695233	0					
ANR	5695303	Identifier	strlen		5695233	0					
ANR	5695304	ArgumentList	buf		5695233	1					
ANR	5695305	Argument	buf		5695233	0					
ANR	5695306	Identifier	buf		5695233	0					
ANR	5695307	ExpressionStatement	data = ( ut8 * ) buf	327:2:8637:8654	5695233	1	True				
ANR	5695308	AssignmentExpression	data = ( ut8 * ) buf		5695233	0		=			
ANR	5695309	Identifier	data		5695233	0					
ANR	5695310	CastExpression	( ut8 * ) buf		5695233	1					
ANR	5695311	CastTarget	ut8 *		5695233	0					
ANR	5695312	Identifier	buf		5695233	1					
ANR	5695313	ElseStatement	else		5695233	0					
ANR	5695314	CompoundStatement		18:8:266:266	5695233	0					
ANR	5695315	ExpressionStatement	"clen = r_hex_str2bin ( buf , NULL )"	329:2:8668:8700	5695233	0	True				
ANR	5695316	AssignmentExpression	"clen = r_hex_str2bin ( buf , NULL )"		5695233	0		=			
ANR	5695317	Identifier	clen		5695233	0					
ANR	5695318	CallExpression	"r_hex_str2bin ( buf , NULL )"		5695233	1					
ANR	5695319	Callee	r_hex_str2bin		5695233	0					
ANR	5695320	Identifier	r_hex_str2bin		5695233	0					
ANR	5695321	ArgumentList	buf		5695233	1					
ANR	5695322	Argument	buf		5695233	0					
ANR	5695323	Identifier	buf		5695233	0					
ANR	5695324	Argument	NULL		5695233	1					
ANR	5695325	Identifier	NULL		5695233	0					
ANR	5695326	IfStatement	if ( ( int ) clen < 1 || ! ( data = malloc ( clen ) ) )		5695233	1					
ANR	5695327	Condition	( int ) clen < 1 || ! ( data = malloc ( clen ) )	330:6:8708:8747	5695233	0	True				
ANR	5695328	OrExpression	( int ) clen < 1 || ! ( data = malloc ( clen ) )		5695233	0		||			
ANR	5695329	RelationalExpression	( int ) clen < 1		5695233	0		<			
ANR	5695330	CastExpression	( int ) clen		5695233	0					
ANR	5695331	CastTarget	int		5695233	0					
ANR	5695332	Identifier	clen		5695233	1					
ANR	5695333	PrimaryExpression	1		5695233	1					
ANR	5695334	UnaryOperationExpression	! ( data = malloc ( clen ) )		5695233	1					
ANR	5695335	UnaryOperator	!		5695233	0					
ANR	5695336	AssignmentExpression	data = malloc ( clen )		5695233	1		=			
ANR	5695337	Identifier	data		5695233	0					
ANR	5695338	CallExpression	malloc ( clen )		5695233	1					
ANR	5695339	Callee	malloc		5695233	0					
ANR	5695340	Identifier	malloc		5695233	0					
ANR	5695341	ArgumentList	clen		5695233	1					
ANR	5695342	Argument	clen		5695233	0					
ANR	5695343	Identifier	clen		5695233	0					
ANR	5695344	CompoundStatement		20:48:352:352	5695233	1					
ANR	5695345	ExpressionStatement	ret = 0	331:3:8755:8762	5695233	0	True				
ANR	5695346	AssignmentExpression	ret = 0		5695233	0		=			
ANR	5695347	Identifier	ret		5695233	0					
ANR	5695348	PrimaryExpression	0		5695233	1					
ANR	5695349	GotoStatement	goto beach ;	332:3:8767:8777	5695233	1	True				
ANR	5695350	Identifier	beach		5695233	0					
ANR	5695351	ExpressionStatement	"r_hex_str2bin ( buf , data )"	334:2:8785:8810	5695233	2	True				
ANR	5695352	CallExpression	"r_hex_str2bin ( buf , data )"		5695233	0					
ANR	5695353	Callee	r_hex_str2bin		5695233	0					
ANR	5695354	Identifier	r_hex_str2bin		5695233	0					
ANR	5695355	ArgumentList	buf		5695233	1					
ANR	5695356	Argument	buf		5695233	0					
ANR	5695357	Identifier	buf		5695233	0					
ANR	5695358	Argument	data		5695233	1					
ANR	5695359	Identifier	data		5695233	0					
ANR	5695360	IfStatement	if ( ! len || clen <= len )		5695233	6					
ANR	5695361	Condition	! len || clen <= len	337:5:8821:8839	5695233	0	True				
ANR	5695362	OrExpression	! len || clen <= len		5695233	0		||			
ANR	5695363	UnaryOperationExpression	! len		5695233	0					
ANR	5695364	UnaryOperator	!		5695233	0					
ANR	5695365	Identifier	len		5695233	1					
ANR	5695366	RelationalExpression	clen <= len		5695233	1		<=			
ANR	5695367	Identifier	clen		5695233	0					
ANR	5695368	Identifier	len		5695233	1					
ANR	5695369	CompoundStatement		27:26:444:444	5695233	1					
ANR	5695370	ExpressionStatement	len = clen	338:2:8846:8856	5695233	0	True				
ANR	5695371	AssignmentExpression	len = clen		5695233	0		=			
ANR	5695372	Identifier	len		5695233	0					
ANR	5695373	Identifier	clen		5695233	1					
ANR	5695374	IfStatement	if ( hex == 2 )		5695233	7					
ANR	5695375	Condition	hex == 2	341:5:8867:8874	5695233	0	True				
ANR	5695376	EqualityExpression	hex == 2		5695233	0		==			
ANR	5695377	Identifier	hex		5695233	0					
ANR	5695378	PrimaryExpression	2		5695233	1					
ANR	5695379	CompoundStatement		32:2:483:502	5695233	1					
ANR	5695380	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	342:2:8881:8900	5695233	0	True				
ANR	5695381	IdentifierDecl	aop = { 0 }		5695233	0					
ANR	5695382	IdentifierDeclType	RAnalOp		5695233	0					
ANR	5695383	Identifier	aop		5695233	1					
ANR	5695384	AssignmentExpression	aop = { 0 }		5695233	2		=			
ANR	5695385	Identifier	aop		5695233	0					
ANR	5695386	InitializerList	0		5695233	1					
ANR	5695387	PrimaryExpression	0		5695233	0					
ANR	5695388	WhileStatement	while ( ret < len )		5695233	1					
ANR	5695389	Condition	ret < len	343:9:8911:8919	5695233	0	True				
ANR	5695390	RelationalExpression	ret < len		5695233	0		<			
ANR	5695391	Identifier	ret		5695233	0					
ANR	5695392	Identifier	len		5695233	1					
ANR	5695393	CompoundStatement		33:20:524:524	5695233	1					
ANR	5695394	ExpressionStatement	aop . size = 0	344:3:8927:8939	5695233	0	True				
ANR	5695395	AssignmentExpression	aop . size = 0		5695233	0		=			
ANR	5695396	MemberAccess	aop . size		5695233	0					
ANR	5695397	Identifier	aop		5695233	0					
ANR	5695398	Identifier	size		5695233	1					
ANR	5695399	PrimaryExpression	0		5695233	1					
ANR	5695400	IfStatement	"if ( r_anal_op ( as -> anal , & aop , offset , data + ret , len - ret , R_ANAL_OP_MASK_ESIL ) > 0 )"		5695233	1					
ANR	5695401	Condition	"r_anal_op ( as -> anal , & aop , offset , data + ret , len - ret , R_ANAL_OP_MASK_ESIL ) > 0"	345:7:8948:9029	5695233	0	True				
ANR	5695402	RelationalExpression	"r_anal_op ( as -> anal , & aop , offset , data + ret , len - ret , R_ANAL_OP_MASK_ESIL ) > 0"		5695233	0		>			
ANR	5695403	CallExpression	"r_anal_op ( as -> anal , & aop , offset , data + ret , len - ret , R_ANAL_OP_MASK_ESIL )"		5695233	0					
ANR	5695404	Callee	r_anal_op		5695233	0					
ANR	5695405	Identifier	r_anal_op		5695233	0					
ANR	5695406	ArgumentList	as -> anal		5695233	1					
ANR	5695407	Argument	as -> anal		5695233	0					
ANR	5695408	PtrMemberAccess	as -> anal		5695233	0					
ANR	5695409	Identifier	as		5695233	0					
ANR	5695410	Identifier	anal		5695233	1					
ANR	5695411	Argument	& aop		5695233	1					
ANR	5695412	UnaryOperationExpression	& aop		5695233	0					
ANR	5695413	UnaryOperator	&		5695233	0					
ANR	5695414	Identifier	aop		5695233	1					
ANR	5695415	Argument	offset		5695233	2					
ANR	5695416	Identifier	offset		5695233	0					
ANR	5695417	Argument	data + ret		5695233	3					
ANR	5695418	AdditiveExpression	data + ret		5695233	0		+			
ANR	5695419	Identifier	data		5695233	0					
ANR	5695420	Identifier	ret		5695233	1					
ANR	5695421	Argument	len - ret		5695233	4					
ANR	5695422	AdditiveExpression	len - ret		5695233	0		-			
ANR	5695423	Identifier	len		5695233	0					
ANR	5695424	Identifier	ret		5695233	1					
ANR	5695425	Argument	R_ANAL_OP_MASK_ESIL		5695233	5					
ANR	5695426	Identifier	R_ANAL_OP_MASK_ESIL		5695233	0					
ANR	5695427	PrimaryExpression	0		5695233	1					
ANR	5695428	CompoundStatement		35:91:634:634	5695233	1					
ANR	5695429	ExpressionStatement	"printf ( ""%s\\n"" , R_STRBUF_SAFEGET ( & aop . esil ) )"	346:4:9038:9083	5695233	0	True				
ANR	5695430	CallExpression	"printf ( ""%s\\n"" , R_STRBUF_SAFEGET ( & aop . esil ) )"		5695233	0					
ANR	5695431	Callee	printf		5695233	0					
ANR	5695432	Identifier	printf		5695233	0					
ANR	5695433	ArgumentList	"""%s\\n"""		5695233	1					
ANR	5695434	Argument	"""%s\\n"""		5695233	0					
ANR	5695435	PrimaryExpression	"""%s\\n"""		5695233	0					
ANR	5695436	Argument	R_STRBUF_SAFEGET ( & aop . esil )		5695233	1					
ANR	5695437	CallExpression	R_STRBUF_SAFEGET ( & aop . esil )		5695233	0					
ANR	5695438	Callee	R_STRBUF_SAFEGET		5695233	0					
ANR	5695439	Identifier	R_STRBUF_SAFEGET		5695233	0					
ANR	5695440	ArgumentList	& aop . esil		5695233	1					
ANR	5695441	Argument	& aop . esil		5695233	0					
ANR	5695442	UnaryOperationExpression	& aop . esil		5695233	0					
ANR	5695443	UnaryOperator	&		5695233	0					
ANR	5695444	MemberAccess	aop . esil		5695233	1					
ANR	5695445	Identifier	aop		5695233	0					
ANR	5695446	Identifier	esil		5695233	1					
ANR	5695447	IfStatement	if ( aop . size < 1 )		5695233	2					
ANR	5695448	Condition	aop . size < 1	348:7:9097:9108	5695233	0	True				
ANR	5695449	RelationalExpression	aop . size < 1		5695233	0		<			
ANR	5695450	MemberAccess	aop . size		5695233	0					
ANR	5695451	Identifier	aop		5695233	0					
ANR	5695452	Identifier	size		5695233	1					
ANR	5695453	PrimaryExpression	1		5695233	1					
ANR	5695454	CompoundStatement		38:21:713:713	5695233	1					
ANR	5695455	ExpressionStatement	"eprintf ( ""Invalid\\n"" )"	349:4:9117:9138	5695233	0	True				
ANR	5695456	CallExpression	"eprintf ( ""Invalid\\n"" )"		5695233	0					
ANR	5695457	Callee	eprintf		5695233	0					
ANR	5695458	Identifier	eprintf		5695233	0					
ANR	5695459	ArgumentList	"""Invalid\\n"""		5695233	1					
ANR	5695460	Argument	"""Invalid\\n"""		5695233	0					
ANR	5695461	PrimaryExpression	"""Invalid\\n"""		5695233	0					
ANR	5695462	BreakStatement	break ;	350:4:9144:9149	5695233	1	True				
ANR	5695463	ExpressionStatement	ret += aop . size	352:3:9159:9174	5695233	3	True				
ANR	5695464	AssignmentExpression	ret += aop . size		5695233	0		+=			
ANR	5695465	Identifier	ret		5695233	0					
ANR	5695466	MemberAccess	aop . size		5695233	1					
ANR	5695467	Identifier	aop		5695233	0					
ANR	5695468	Identifier	size		5695233	1					
ANR	5695469	ExpressionStatement	r_anal_op_fini ( & aop )	353:3:9179:9200	5695233	4	True				
ANR	5695470	CallExpression	r_anal_op_fini ( & aop )		5695233	0					
ANR	5695471	Callee	r_anal_op_fini		5695233	0					
ANR	5695472	Identifier	r_anal_op_fini		5695233	0					
ANR	5695473	ArgumentList	& aop		5695233	1					
ANR	5695474	Argument	& aop		5695233	0					
ANR	5695475	UnaryOperationExpression	& aop		5695233	0					
ANR	5695476	UnaryOperator	&		5695233	0					
ANR	5695477	Identifier	aop		5695233	1					
ANR	5695478	ElseStatement	else		5695233	0					
ANR	5695479	IfStatement	if ( hex )		5695233	0					
ANR	5695480	Condition	hex	355:12:9218:9220	5695233	0	True				
ANR	5695481	Identifier	hex		5695233	0					
ANR	5695482	CompoundStatement		46:2:829:838	5695233	1					
ANR	5695483	IdentifierDeclStatement	RAsmOp op ;	356:2:9227:9236	5695233	0	True				
ANR	5695484	IdentifierDecl	op		5695233	0					
ANR	5695485	IdentifierDeclType	RAsmOp		5695233	0					
ANR	5695486	Identifier	op		5695233	1					
ANR	5695487	ExpressionStatement	"r_asm_set_pc ( as -> a , offset )"	357:2:9240:9268	5695233	1	True				
ANR	5695488	CallExpression	"r_asm_set_pc ( as -> a , offset )"		5695233	0					
ANR	5695489	Callee	r_asm_set_pc		5695233	0					
ANR	5695490	Identifier	r_asm_set_pc		5695233	0					
ANR	5695491	ArgumentList	as -> a		5695233	1					
ANR	5695492	Argument	as -> a		5695233	0					
ANR	5695493	PtrMemberAccess	as -> a		5695233	0					
ANR	5695494	Identifier	as		5695233	0					
ANR	5695495	Identifier	a		5695233	1					
ANR	5695496	Argument	offset		5695233	1					
ANR	5695497	Identifier	offset		5695233	0					
ANR	5695498	WhileStatement	while ( ( len - ret ) > 0 )		5695233	2					
ANR	5695499	Condition	( len - ret ) > 0	358:9:9279:9293	5695233	0	True				
ANR	5695500	RelationalExpression	( len - ret ) > 0		5695233	0		>			
ANR	5695501	AdditiveExpression	len - ret		5695233	0		-			
ANR	5695502	Identifier	len		5695233	0					
ANR	5695503	Identifier	ret		5695233	1					
ANR	5695504	PrimaryExpression	0		5695233	1					
ANR	5695505	CompoundStatement		54:3:1065:1102	5695233	1					
ANR	5695506	IdentifierDeclStatement	"int dr = r_asm_disassemble ( as -> a , & op , data + ret , len - ret ) ;"	359:3:9301:9363	5695233	0	True				
ANR	5695507	IdentifierDecl	"dr = r_asm_disassemble ( as -> a , & op , data + ret , len - ret )"		5695233	0					
ANR	5695508	IdentifierDeclType	int		5695233	0					
ANR	5695509	Identifier	dr		5695233	1					
ANR	5695510	AssignmentExpression	"dr = r_asm_disassemble ( as -> a , & op , data + ret , len - ret )"		5695233	2		=			
ANR	5695511	Identifier	dr		5695233	0					
ANR	5695512	CallExpression	"r_asm_disassemble ( as -> a , & op , data + ret , len - ret )"		5695233	1					
ANR	5695513	Callee	r_asm_disassemble		5695233	0					
ANR	5695514	Identifier	r_asm_disassemble		5695233	0					
ANR	5695515	ArgumentList	as -> a		5695233	1					
ANR	5695516	Argument	as -> a		5695233	0					
ANR	5695517	PtrMemberAccess	as -> a		5695233	0					
ANR	5695518	Identifier	as		5695233	0					
ANR	5695519	Identifier	a		5695233	1					
ANR	5695520	Argument	& op		5695233	1					
ANR	5695521	UnaryOperationExpression	& op		5695233	0					
ANR	5695522	UnaryOperator	&		5695233	0					
ANR	5695523	Identifier	op		5695233	1					
ANR	5695524	Argument	data + ret		5695233	2					
ANR	5695525	AdditiveExpression	data + ret		5695233	0		+			
ANR	5695526	Identifier	data		5695233	0					
ANR	5695527	Identifier	ret		5695233	1					
ANR	5695528	Argument	len - ret		5695233	3					
ANR	5695529	AdditiveExpression	len - ret		5695233	0		-			
ANR	5695530	Identifier	len		5695233	0					
ANR	5695531	Identifier	ret		5695233	1					
ANR	5695532	IfStatement	if ( dr == - 1 || op . size < 1 )		5695233	1					
ANR	5695533	Condition	dr == - 1 || op . size < 1	360:7:9372:9394	5695233	0	True				
ANR	5695534	OrExpression	dr == - 1 || op . size < 1		5695233	0		||			
ANR	5695535	EqualityExpression	dr == - 1		5695233	0		==			
ANR	5695536	Identifier	dr		5695233	0					
ANR	5695537	UnaryOperationExpression	- 1		5695233	1					
ANR	5695538	UnaryOperator	-		5695233	0					
ANR	5695539	PrimaryExpression	1		5695233	1					
ANR	5695540	RelationalExpression	op . size < 1		5695233	1		<			
ANR	5695541	MemberAccess	op . size		5695233	0					
ANR	5695542	Identifier	op		5695233	0					
ANR	5695543	Identifier	size		5695233	1					
ANR	5695544	PrimaryExpression	1		5695233	1					
ANR	5695545	CompoundStatement		50:32:999:999	5695233	1					
ANR	5695546	ExpressionStatement	op . size = 1	361:4:9403:9414	5695233	0	True				
ANR	5695547	AssignmentExpression	op . size = 1		5695233	0		=			
ANR	5695548	MemberAccess	op . size		5695233	0					
ANR	5695549	Identifier	op		5695233	0					
ANR	5695550	Identifier	size		5695233	1					
ANR	5695551	PrimaryExpression	1		5695233	1					
ANR	5695552	ExpressionStatement	"r_asm_op_set_asm ( & op , ""invalid"" )"	362:4:9420:9453	5695233	1	True				
ANR	5695553	CallExpression	"r_asm_op_set_asm ( & op , ""invalid"" )"		5695233	0					
ANR	5695554	Callee	r_asm_op_set_asm		5695233	0					
ANR	5695555	Identifier	r_asm_op_set_asm		5695233	0					
ANR	5695556	ArgumentList	& op		5695233	1					
ANR	5695557	Argument	& op		5695233	0					
ANR	5695558	UnaryOperationExpression	& op		5695233	0					
ANR	5695559	UnaryOperator	&		5695233	0					
ANR	5695560	Identifier	op		5695233	1					
ANR	5695561	Argument	"""invalid"""		5695233	1					
ANR	5695562	PrimaryExpression	"""invalid"""		5695233	0					
ANR	5695563	IdentifierDeclStatement	char * op_hex = r_asm_op_get_hex ( & op ) ;	364:3:9463:9500	5695233	2	True				
ANR	5695564	IdentifierDecl	* op_hex = r_asm_op_get_hex ( & op )		5695233	0					
ANR	5695565	IdentifierDeclType	char *		5695233	0					
ANR	5695566	Identifier	op_hex		5695233	1					
ANR	5695567	AssignmentExpression	* op_hex = r_asm_op_get_hex ( & op )		5695233	2		=			
ANR	5695568	Identifier	op_hex		5695233	0					
ANR	5695569	CallExpression	r_asm_op_get_hex ( & op )		5695233	1					
ANR	5695570	Callee	r_asm_op_get_hex		5695233	0					
ANR	5695571	Identifier	r_asm_op_get_hex		5695233	0					
ANR	5695572	ArgumentList	& op		5695233	1					
ANR	5695573	Argument	& op		5695233	0					
ANR	5695574	UnaryOperationExpression	& op		5695233	0					
ANR	5695575	UnaryOperator	&		5695233	0					
ANR	5695576	Identifier	op		5695233	1					
ANR	5695577	Statement	printf	365:3:9505:9510	5695233	3	True				
ANR	5695578	Statement	(	365:10:9512:9512	5695233	4	True				
ANR	5695579	Statement	"""0x%08"""	365:11:9513:9519	5695233	5	True				
ANR	5695580	Statement	PFMT64x	365:19:9521:9527	5695233	6	True				
ANR	5695581	Statement	"""  %2d %24s  %s\\n"""	365:27:9529:9546	5695233	7	True				
ANR	5695582	Statement	","	365:45:9547:9547	5695233	8	True				
ANR	5695583	Statement	as	366:4:9553:9554	5695233	9	True				
ANR	5695584	Statement	->	366:6:9555:9556	5695233	10	True				
ANR	5695585	Statement	a	366:8:9557:9557	5695233	11	True				
ANR	5695586	Statement	->	366:9:9558:9559	5695233	12	True				
ANR	5695587	Statement	pc	366:11:9560:9561	5695233	13	True				
ANR	5695588	Statement	","	366:13:9562:9562	5695233	14	True				
ANR	5695589	Statement	op	366:15:9564:9565	5695233	15	True				
ANR	5695590	Statement	.	366:17:9566:9566	5695233	16	True				
ANR	5695591	Statement	size	366:18:9567:9570	5695233	17	True				
ANR	5695592	Statement	","	366:22:9571:9571	5695233	18	True				
ANR	5695593	Statement	op_hex	366:24:9573:9578	5695233	19	True				
ANR	5695594	Statement	","	366:30:9579:9579	5695233	20	True				
ANR	5695595	Statement	r_asm_op_get_asm	367:4:9585:9600	5695233	21	True				
ANR	5695596	Statement	(	367:21:9602:9602	5695233	22	True				
ANR	5695597	Statement	&	367:22:9603:9603	5695233	23	True				
ANR	5695598	Statement	op	367:23:9604:9605	5695233	24	True				
ANR	5695599	Statement	)	367:25:9606:9606	5695233	25	True				
ANR	5695600	Statement	)	367:26:9607:9607	5695233	26	True				
ANR	5695601	ExpressionStatement		367:27:9608:9608	5695233	27	True				
ANR	5695602	ExpressionStatement	free ( op_hex )	368:3:9613:9626	5695233	28	True				
ANR	5695603	CallExpression	free ( op_hex )		5695233	0					
ANR	5695604	Callee	free		5695233	0					
ANR	5695605	Identifier	free		5695233	0					
ANR	5695606	ArgumentList	op_hex		5695233	1					
ANR	5695607	Argument	op_hex		5695233	0					
ANR	5695608	Identifier	op_hex		5695233	0					
ANR	5695609	ExpressionStatement	ret += op . size	369:3:9631:9645	5695233	29	True				
ANR	5695610	AssignmentExpression	ret += op . size		5695233	0		+=			
ANR	5695611	Identifier	ret		5695233	0					
ANR	5695612	MemberAccess	op . size		5695233	1					
ANR	5695613	Identifier	op		5695233	0					
ANR	5695614	Identifier	size		5695233	1					
ANR	5695615	ExpressionStatement	"r_asm_set_pc ( as -> a , offset + ret )"	370:3:9650:9684	5695233	30	True				
ANR	5695616	CallExpression	"r_asm_set_pc ( as -> a , offset + ret )"		5695233	0					
ANR	5695617	Callee	r_asm_set_pc		5695233	0					
ANR	5695618	Identifier	r_asm_set_pc		5695233	0					
ANR	5695619	ArgumentList	as -> a		5695233	1					
ANR	5695620	Argument	as -> a		5695233	0					
ANR	5695621	PtrMemberAccess	as -> a		5695233	0					
ANR	5695622	Identifier	as		5695233	0					
ANR	5695623	Identifier	a		5695233	1					
ANR	5695624	Argument	offset + ret		5695233	1					
ANR	5695625	AdditiveExpression	offset + ret		5695233	0		+			
ANR	5695626	Identifier	offset		5695233	0					
ANR	5695627	Identifier	ret		5695233	1					
ANR	5695628	ElseStatement	else		5695233	0					
ANR	5695629	CompoundStatement		62:8:1300:1300	5695233	0					
ANR	5695630	ExpressionStatement	"r_asm_set_pc ( as -> a , offset )"	373:2:9702:9730	5695233	0	True				
ANR	5695631	CallExpression	"r_asm_set_pc ( as -> a , offset )"		5695233	0					
ANR	5695632	Callee	r_asm_set_pc		5695233	0					
ANR	5695633	Identifier	r_asm_set_pc		5695233	0					
ANR	5695634	ArgumentList	as -> a		5695233	1					
ANR	5695635	Argument	as -> a		5695233	0					
ANR	5695636	PtrMemberAccess	as -> a		5695233	0					
ANR	5695637	Identifier	as		5695233	0					
ANR	5695638	Identifier	a		5695233	1					
ANR	5695639	Argument	offset		5695233	1					
ANR	5695640	Identifier	offset		5695233	0					
ANR	5695641	IfStatement	"if ( ! ( acode = r_asm_mdisassemble ( as -> a , data , len ) ) )"		5695233	1					
ANR	5695642	Condition	"! ( acode = r_asm_mdisassemble ( as -> a , data , len ) )"	374:6:9738:9785	5695233	0	True				
ANR	5695643	UnaryOperationExpression	"! ( acode = r_asm_mdisassemble ( as -> a , data , len ) )"		5695233	0					
ANR	5695644	UnaryOperator	!		5695233	0					
ANR	5695645	AssignmentExpression	"acode = r_asm_mdisassemble ( as -> a , data , len )"		5695233	1		=			
ANR	5695646	Identifier	acode		5695233	0					
ANR	5695647	CallExpression	"r_asm_mdisassemble ( as -> a , data , len )"		5695233	1					
ANR	5695648	Callee	r_asm_mdisassemble		5695233	0					
ANR	5695649	Identifier	r_asm_mdisassemble		5695233	0					
ANR	5695650	ArgumentList	as -> a		5695233	1					
ANR	5695651	Argument	as -> a		5695233	0					
ANR	5695652	PtrMemberAccess	as -> a		5695233	0					
ANR	5695653	Identifier	as		5695233	0					
ANR	5695654	Identifier	a		5695233	1					
ANR	5695655	Argument	data		5695233	1					
ANR	5695656	Identifier	data		5695233	0					
ANR	5695657	Argument	len		5695233	2					
ANR	5695658	Identifier	len		5695233	0					
ANR	5695659	CompoundStatement		64:56:1390:1390	5695233	1					
ANR	5695660	GotoStatement	goto beach ;	375:3:9793:9803	5695233	0	True				
ANR	5695661	Identifier	beach		5695233	0					
ANR	5695662	IfStatement	if ( as -> oneliner )		5695233	2					
ANR	5695663	Condition	as -> oneliner	377:6:9815:9826	5695233	0	True				
ANR	5695664	PtrMemberAccess	as -> oneliner		5695233	0					
ANR	5695665	Identifier	as		5695233	0					
ANR	5695666	Identifier	oneliner		5695233	1					
ANR	5695667	CompoundStatement		67:20:1431:1431	5695233	1					
ANR	5695668	ExpressionStatement	"r_str_replace_char ( acode -> assembly , '\\n' , ';' )"	378:3:9834:9881	5695233	0	True				
ANR	5695669	CallExpression	"r_str_replace_char ( acode -> assembly , '\\n' , ';' )"		5695233	0					
ANR	5695670	Callee	r_str_replace_char		5695233	0					
ANR	5695671	Identifier	r_str_replace_char		5695233	0					
ANR	5695672	ArgumentList	acode -> assembly		5695233	1					
ANR	5695673	Argument	acode -> assembly		5695233	0					
ANR	5695674	PtrMemberAccess	acode -> assembly		5695233	0					
ANR	5695675	Identifier	acode		5695233	0					
ANR	5695676	Identifier	assembly		5695233	1					
ANR	5695677	Argument	'\\n'		5695233	1					
ANR	5695678	PrimaryExpression	'\\n'		5695233	0					
ANR	5695679	Argument	';'		5695233	2					
ANR	5695680	PrimaryExpression	';'		5695233	0					
ANR	5695681	ExpressionStatement	"printf ( ""%s\\""\\n"" , acode -> assembly )"	379:3:9886:9920	5695233	1	True				
ANR	5695682	CallExpression	"printf ( ""%s\\""\\n"" , acode -> assembly )"		5695233	0					
ANR	5695683	Callee	printf		5695233	0					
ANR	5695684	Identifier	printf		5695233	0					
ANR	5695685	ArgumentList	"""%s\\""\\n"""		5695233	1					
ANR	5695686	Argument	"""%s\\""\\n"""		5695233	0					
ANR	5695687	PrimaryExpression	"""%s\\""\\n"""		5695233	0					
ANR	5695688	Argument	acode -> assembly		5695233	1					
ANR	5695689	PtrMemberAccess	acode -> assembly		5695233	0					
ANR	5695690	Identifier	acode		5695233	0					
ANR	5695691	Identifier	assembly		5695233	1					
ANR	5695692	ElseStatement	else		5695233	0					
ANR	5695693	CompoundStatement		70:9:1533:1533	5695233	0					
ANR	5695694	ExpressionStatement	"printf ( ""%s"" , acode -> assembly )"	381:3:9936:9966	5695233	0	True				
ANR	5695695	CallExpression	"printf ( ""%s"" , acode -> assembly )"		5695233	0					
ANR	5695696	Callee	printf		5695233	0					
ANR	5695697	Identifier	printf		5695233	0					
ANR	5695698	ArgumentList	"""%s"""		5695233	1					
ANR	5695699	Argument	"""%s"""		5695233	0					
ANR	5695700	PrimaryExpression	"""%s"""		5695233	0					
ANR	5695701	Argument	acode -> assembly		5695233	1					
ANR	5695702	PtrMemberAccess	acode -> assembly		5695233	0					
ANR	5695703	Identifier	acode		5695233	0					
ANR	5695704	Identifier	assembly		5695233	1					
ANR	5695705	ExpressionStatement	ret = acode -> len	383:2:9974:9990	5695233	3	True				
ANR	5695706	AssignmentExpression	ret = acode -> len		5695233	0		=			
ANR	5695707	Identifier	ret		5695233	0					
ANR	5695708	PtrMemberAccess	acode -> len		5695233	1					
ANR	5695709	Identifier	acode		5695233	0					
ANR	5695710	Identifier	len		5695233	1					
ANR	5695711	ExpressionStatement	r_asm_code_free ( acode )	384:2:9994:10017	5695233	4	True				
ANR	5695712	CallExpression	r_asm_code_free ( acode )		5695233	0					
ANR	5695713	Callee	r_asm_code_free		5695233	0					
ANR	5695714	Identifier	r_asm_code_free		5695233	0					
ANR	5695715	ArgumentList	acode		5695233	1					
ANR	5695716	Argument	acode		5695233	0					
ANR	5695717	Identifier	acode		5695233	0					
ANR	5695718	Label	beach :	386:0:10022:10027	5695233	8	True				
ANR	5695719	Identifier	beach		5695233	0					
ANR	5695720	IfStatement	if ( data && data != ( ut8 * ) buf )		5695233	9					
ANR	5695721	Condition	data && data != ( ut8 * ) buf	387:5:10034:10059	5695233	0	True				
ANR	5695722	AndExpression	data && data != ( ut8 * ) buf		5695233	0		&&			
ANR	5695723	Identifier	data		5695233	0					
ANR	5695724	EqualityExpression	data != ( ut8 * ) buf		5695233	1		!=			
ANR	5695725	Identifier	data		5695233	0					
ANR	5695726	CastExpression	( ut8 * ) buf		5695233	1					
ANR	5695727	CastTarget	ut8 *		5695233	0					
ANR	5695728	Identifier	buf		5695233	1					
ANR	5695729	CompoundStatement		77:33:1664:1664	5695233	1					
ANR	5695730	ExpressionStatement	free ( data )	388:2:10066:10077	5695233	0	True				
ANR	5695731	CallExpression	free ( data )		5695233	0					
ANR	5695732	Callee	free		5695233	0					
ANR	5695733	Identifier	free		5695233	0					
ANR	5695734	ArgumentList	data		5695233	1					
ANR	5695735	Argument	data		5695233	0					
ANR	5695736	Identifier	data		5695233	0					
ANR	5695737	ReturnStatement	return ret ;	390:1:10083:10093	5695233	10	True				
ANR	5695738	Identifier	ret		5695233	0					
ANR	5695739	ReturnType	static int		5695233	1					
ANR	5695740	Identifier	rasm_disasm		5695233	2					
ANR	5695741	ParameterList	"RAsmState * as , char * buf , ut64 offset , int len , int bits , int ascii , int bin , int hex"		5695233	3					
ANR	5695742	Parameter	RAsmState * as	311:23:8310:8322	5695233	0	True				
ANR	5695743	ParameterType	RAsmState *		5695233	0					
ANR	5695744	Identifier	as		5695233	1					
ANR	5695745	Parameter	char * buf	311:38:8325:8333	5695233	1	True				
ANR	5695746	ParameterType	char *		5695233	0					
ANR	5695747	Identifier	buf		5695233	1					
ANR	5695748	Parameter	ut64 offset	311:49:8336:8346	5695233	2	True				
ANR	5695749	ParameterType	ut64		5695233	0					
ANR	5695750	Identifier	offset		5695233	1					
ANR	5695751	Parameter	int len	311:62:8349:8355	5695233	3	True				
ANR	5695752	ParameterType	int		5695233	0					
ANR	5695753	Identifier	len		5695233	1					
ANR	5695754	Parameter	int bits	311:71:8358:8365	5695233	4	True				
ANR	5695755	ParameterType	int		5695233	0					
ANR	5695756	Identifier	bits		5695233	1					
ANR	5695757	Parameter	int ascii	311:81:8368:8376	5695233	5	True				
ANR	5695758	ParameterType	int		5695233	0					
ANR	5695759	Identifier	ascii		5695233	1					
ANR	5695760	Parameter	int bin	311:92:8379:8385	5695233	6	True				
ANR	5695761	ParameterType	int		5695233	0					
ANR	5695762	Identifier	bin		5695233	1					
ANR	5695763	Parameter	int hex	311:101:8388:8394	5695233	7	True				
ANR	5695764	ParameterType	int		5695233	0					
ANR	5695765	Identifier	hex		5695233	1					
ANR	5695766	CFGEntryNode	ENTRY		5695233		True				
ANR	5695767	CFGExitNode	EXIT		5695233		True				
ANR	5695768	Symbol	aop		5695233						
ANR	5695769	Symbol	data		5695233						
ANR	5695770	Symbol	bin		5695233						
ANR	5695771	Symbol	as -> oneliner		5695233						
ANR	5695772	Symbol	& op		5695233						
ANR	5695773	Symbol	acode		5695233						
ANR	5695774	Symbol	dr		5695233						
ANR	5695775	Symbol	acode -> len		5695233						
ANR	5695776	Symbol	strlen		5695233						
ANR	5695777	Symbol	aop . size		5695233						
ANR	5695778	Symbol	len		5695233						
ANR	5695779	Symbol	as -> anal		5695233						
ANR	5695780	Symbol	acode -> assembly		5695233						
ANR	5695781	Symbol	hex		5695233						
ANR	5695782	Symbol	ascii		5695233						
ANR	5695783	Symbol	r_hex_str2bin		5695233						
ANR	5695784	Symbol	r_anal_op		5695233						
ANR	5695785	Symbol	ret		5695233						
ANR	5695786	Symbol	malloc		5695233						
ANR	5695787	Symbol	op		5695233						
ANR	5695788	Symbol	NULL		5695233						
ANR	5695789	Symbol	offset		5695233						
ANR	5695790	Symbol	R_STRBUF_SAFEGET		5695233						
ANR	5695791	Symbol	bits		5695233						
ANR	5695792	Symbol	false		5695233						
ANR	5695793	Symbol	& aop . esil		5695233						
ANR	5695794	Symbol	r_asm_op_get_hex		5695233						
ANR	5695795	Symbol	& aop		5695233						
ANR	5695796	Symbol	as		5695233						
ANR	5695797	Symbol	buf		5695233						
ANR	5695798	Symbol	as -> a		5695233						
ANR	5695799	Symbol	* as		5695233						
ANR	5695800	Symbol	clen		5695233						
ANR	5695801	Symbol	op . size		5695233						
ANR	5695802	Symbol	r_asm_mdisassemble		5695233						
ANR	5695803	Symbol	r_asm_disassemble		5695233						
ANR	5695804	Symbol	op_hex		5695233						
ANR	5695805	Symbol	* acode		5695233						
ANR	5695806	Symbol	R_ANAL_OP_MASK_ESIL		5695233						
ANR	5695807	Function	print_buf	393:0:10098:10392							
ANR	5695808	FunctionDef	"print_buf (RAsmState * as , char * str)"		5695807	0					
ANR	5695809	CompoundStatement		393:48:10146:10392	5695807	0					
ANR	5695810	IdentifierDeclStatement	int i ;	394:1:10149:10154	5695807	0	True				
ANR	5695811	IdentifierDecl	i		5695807	0					
ANR	5695812	IdentifierDeclType	int		5695807	0					
ANR	5695813	Identifier	i		5695807	1					
ANR	5695814	IfStatement	if ( as -> coutput )		5695807	1					
ANR	5695815	Condition	as -> coutput	395:5:10161:10171	5695807	0	True				
ANR	5695816	PtrMemberAccess	as -> coutput		5695807	0					
ANR	5695817	Identifier	as		5695807	0					
ANR	5695818	Identifier	coutput		5695807	1					
ANR	5695819	CompoundStatement		3:18:27:27	5695807	1					
ANR	5695820	ExpressionStatement	"printf ( ""\\"""" )"	396:2:10178:10191	5695807	0	True				
ANR	5695821	CallExpression	"printf ( ""\\"""" )"		5695807	0					
ANR	5695822	Callee	printf		5695807	0					
ANR	5695823	Identifier	printf		5695807	0					
ANR	5695824	ArgumentList	"""\\"""""		5695807	1					
ANR	5695825	Argument	"""\\"""""		5695807	0					
ANR	5695826	PrimaryExpression	"""\\"""""		5695807	0					
ANR	5695827	ForStatement	"for ( i = 1 ; * str ; str += 2 , i += 2 )"		5695807	1					
ANR	5695828	ForInit	i = 1 ;	397:7:10200:10205	5695807	0	True				
ANR	5695829	AssignmentExpression	i = 1		5695807	0		=			
ANR	5695830	Identifier	i		5695807	0					
ANR	5695831	PrimaryExpression	1		5695807	1					
ANR	5695832	Condition	* str	397:14:10207:10210	5695807	1	True				
ANR	5695833	UnaryOperationExpression	* str		5695807	0					
ANR	5695834	UnaryOperator	*		5695807	0					
ANR	5695835	Identifier	str		5695807	1					
ANR	5695836	Expression	"str += 2 , i += 2"	397:20:10213:10228	5695807	2	True				
ANR	5695837	AssignmentExpression	str += 2		5695807	0		+=			
ANR	5695838	Identifier	str		5695807	0					
ANR	5695839	PrimaryExpression	2		5695807	1					
ANR	5695840	AssignmentExpression	i += 2		5695807	1		+=			
ANR	5695841	Identifier	i		5695807	0					
ANR	5695842	PrimaryExpression	2		5695807	1					
ANR	5695843	CompoundStatement		5:38:84:84	5695807	3					
ANR	5695844	IfStatement	if ( ! ( i % 41 ) )		5695807	0					
ANR	5695845	Condition	! ( i % 41 )	398:7:10240:10248	5695807	0	True				
ANR	5695846	UnaryOperationExpression	! ( i % 41 )		5695807	0					
ANR	5695847	UnaryOperator	!		5695807	0					
ANR	5695848	MultiplicativeExpression	i % 41		5695807	1		%			
ANR	5695849	Identifier	i		5695807	0					
ANR	5695850	PrimaryExpression	41		5695807	1					
ANR	5695851	CompoundStatement		6:18:104:104	5695807	1					
ANR	5695852	ExpressionStatement	"printf ( ""\\"" \\\\\\n\\"""" )"	399:4:10257:10277	5695807	0	True				
ANR	5695853	CallExpression	"printf ( ""\\"" \\\\\\n\\"""" )"		5695807	0					
ANR	5695854	Callee	printf		5695807	0					
ANR	5695855	Identifier	printf		5695807	0					
ANR	5695856	ArgumentList	"""\\"" \\\\\\n\\"""""		5695807	1					
ANR	5695857	Argument	"""\\"" \\\\\\n\\"""""		5695807	0					
ANR	5695858	PrimaryExpression	"""\\"" \\\\\\n\\"""""		5695807	0					
ANR	5695859	ExpressionStatement	i = 1	400:4:10283:10288	5695807	1	True				
ANR	5695860	AssignmentExpression	i = 1		5695807	0		=			
ANR	5695861	Identifier	i		5695807	0					
ANR	5695862	PrimaryExpression	1		5695807	1					
ANR	5695863	ExpressionStatement	"printf ( ""\\\\x%c%c"" , * str , str [ 1 ] )"	402:3:10298:10330	5695807	1	True				
ANR	5695864	CallExpression	"printf ( ""\\\\x%c%c"" , * str , str [ 1 ] )"		5695807	0					
ANR	5695865	Callee	printf		5695807	0					
ANR	5695866	Identifier	printf		5695807	0					
ANR	5695867	ArgumentList	"""\\\\x%c%c"""		5695807	1					
ANR	5695868	Argument	"""\\\\x%c%c"""		5695807	0					
ANR	5695869	PrimaryExpression	"""\\\\x%c%c"""		5695807	0					
ANR	5695870	Argument	* str		5695807	1					
ANR	5695871	UnaryOperationExpression	* str		5695807	0					
ANR	5695872	UnaryOperator	*		5695807	0					
ANR	5695873	Identifier	str		5695807	1					
ANR	5695874	Argument	str [ 1 ]		5695807	2					
ANR	5695875	ArrayIndexing	str [ 1 ]		5695807	0					
ANR	5695876	Identifier	str		5695807	0					
ANR	5695877	PrimaryExpression	1		5695807	1					
ANR	5695878	ExpressionStatement	"printf ( ""\\""\\n"" )"	404:2:10338:10353	5695807	2	True				
ANR	5695879	CallExpression	"printf ( ""\\""\\n"" )"		5695807	0					
ANR	5695880	Callee	printf		5695807	0					
ANR	5695881	Identifier	printf		5695807	0					
ANR	5695882	ArgumentList	"""\\""\\n"""		5695807	1					
ANR	5695883	Argument	"""\\""\\n"""		5695807	0					
ANR	5695884	PrimaryExpression	"""\\""\\n"""		5695807	0					
ANR	5695885	ElseStatement	else		5695807	0					
ANR	5695886	CompoundStatement		13:8:216:216	5695807	0					
ANR	5695887	ExpressionStatement	"printf ( ""%s\\n"" , str )"	406:2:10367:10387	5695807	0	True				
ANR	5695888	CallExpression	"printf ( ""%s\\n"" , str )"		5695807	0					
ANR	5695889	Callee	printf		5695807	0					
ANR	5695890	Identifier	printf		5695807	0					
ANR	5695891	ArgumentList	"""%s\\n"""		5695807	1					
ANR	5695892	Argument	"""%s\\n"""		5695807	0					
ANR	5695893	PrimaryExpression	"""%s\\n"""		5695807	0					
ANR	5695894	Argument	str		5695807	1					
ANR	5695895	Identifier	str		5695807	0					
ANR	5695896	ReturnType	static void		5695807	1					
ANR	5695897	Identifier	print_buf		5695807	2					
ANR	5695898	ParameterList	"RAsmState * as , char * str"		5695807	3					
ANR	5695899	Parameter	RAsmState * as	393:22:10120:10132	5695807	0	True				
ANR	5695900	ParameterType	RAsmState *		5695807	0					
ANR	5695901	Identifier	as		5695807	1					
ANR	5695902	Parameter	char * str	393:37:10135:10143	5695807	1	True				
ANR	5695903	ParameterType	char *		5695807	0					
ANR	5695904	Identifier	str		5695807	1					
ANR	5695905	CFGEntryNode	ENTRY		5695807		True				
ANR	5695906	CFGExitNode	EXIT		5695807		True				
ANR	5695907	Symbol	str		5695807						
ANR	5695908	Symbol	as		5695807						
ANR	5695909	Symbol	as -> coutput		5695807						
ANR	5695910	Symbol	i		5695807						
ANR	5695911	Symbol	* as		5695807						
ANR	5695912	Symbol	* str		5695807						
ANR	5695913	Function	print_label	410:0:10395:10542							
ANR	5695914	FunctionDef	"print_label (void * user , const void * k , const void * v)"		5695913	0					
ANR	5695915	CompoundStatement		410:66:10461:10542	5695913	0					
ANR	5695916	ExpressionStatement	"printf ( ""f label.%s = %s\\n"" , ( const char * ) k , ( const char * ) v )"	411:1:10464:10526	5695913	0	True				
ANR	5695917	CallExpression	"printf ( ""f label.%s = %s\\n"" , ( const char * ) k , ( const char * ) v )"		5695913	0					
ANR	5695918	Callee	printf		5695913	0					
ANR	5695919	Identifier	printf		5695913	0					
ANR	5695920	ArgumentList	"""f label.%s = %s\\n"""		5695913	1					
ANR	5695921	Argument	"""f label.%s = %s\\n"""		5695913	0					
ANR	5695922	PrimaryExpression	"""f label.%s = %s\\n"""		5695913	0					
ANR	5695923	Argument	( const char * ) k		5695913	1					
ANR	5695924	CastExpression	( const char * ) k		5695913	0					
ANR	5695925	CastTarget	const char *		5695913	0					
ANR	5695926	Identifier	k		5695913	1					
ANR	5695927	Argument	( const char * ) v		5695913	2					
ANR	5695928	CastExpression	( const char * ) v		5695913	0					
ANR	5695929	CastTarget	const char *		5695913	0					
ANR	5695930	Identifier	v		5695913	1					
ANR	5695931	ReturnStatement	return true ;	412:1:10529:10540	5695913	1	True				
ANR	5695932	Identifier	true		5695913	0					
ANR	5695933	ReturnType	static bool		5695913	1					
ANR	5695934	Identifier	print_label		5695913	2					
ANR	5695935	ParameterList	"void * user , const void * k , const void * v"		5695913	3					
ANR	5695936	Parameter	void * user	410:24:10419:10428	5695913	0	True				
ANR	5695937	ParameterType	void *		5695913	0					
ANR	5695938	Identifier	user		5695913	1					
ANR	5695939	Parameter	const void * k	410:36:10431:10443	5695913	1	True				
ANR	5695940	ParameterType	const void *		5695913	0					
ANR	5695941	Identifier	k		5695913	1					
ANR	5695942	Parameter	const void * v	410:51:10446:10458	5695913	2	True				
ANR	5695943	ParameterType	const void *		5695913	0					
ANR	5695944	Identifier	v		5695913	1					
ANR	5695945	CFGEntryNode	ENTRY		5695913		True				
ANR	5695946	CFGExitNode	EXIT		5695913		True				
ANR	5695947	Symbol	v		5695913						
ANR	5695948	Symbol	true		5695913						
ANR	5695949	Symbol	k		5695913						
ANR	5695950	Symbol	user		5695913						
ANR	5695951	Function	rasm_asm	415:0:10545:11748							
ANR	5695952	FunctionDef	"rasm_asm (RAsmState * as , const char * buf , ut64 offset , ut64 len , int bits , int bin , bool use_spp , bool hexwords)"		5695951	0					
ANR	5695953	CompoundStatement		415:123:10668:11748	5695951	0					
ANR	5695954	IdentifierDeclStatement	RAsmCode * acode ;	416:1:10671:10686	5695951	0	True				
ANR	5695955	IdentifierDecl	* acode		5695951	0					
ANR	5695956	IdentifierDeclType	RAsmCode *		5695951	0					
ANR	5695957	Identifier	acode		5695951	1					
ANR	5695958	IdentifierDeclStatement	"int i , j , ret = 0 ;"	417:1:10689:10706	5695951	1	True				
ANR	5695959	IdentifierDecl	i		5695951	0					
ANR	5695960	IdentifierDeclType	int		5695951	0					
ANR	5695961	Identifier	i		5695951	1					
ANR	5695962	IdentifierDecl	j		5695951	1					
ANR	5695963	IdentifierDeclType	int		5695951	0					
ANR	5695964	Identifier	j		5695951	1					
ANR	5695965	IdentifierDecl	ret = 0		5695951	2					
ANR	5695966	IdentifierDeclType	int		5695951	0					
ANR	5695967	Identifier	ret		5695951	1					
ANR	5695968	AssignmentExpression	ret = 0		5695951	2		=			
ANR	5695969	Identifier	ret		5695951	0					
ANR	5695970	PrimaryExpression	0		5695951	1					
ANR	5695971	ExpressionStatement	"r_asm_set_pc ( as -> a , offset )"	418:1:10709:10737	5695951	2	True				
ANR	5695972	CallExpression	"r_asm_set_pc ( as -> a , offset )"		5695951	0					
ANR	5695973	Callee	r_asm_set_pc		5695951	0					
ANR	5695974	Identifier	r_asm_set_pc		5695951	0					
ANR	5695975	ArgumentList	as -> a		5695951	1					
ANR	5695976	Argument	as -> a		5695951	0					
ANR	5695977	PtrMemberAccess	as -> a		5695951	0					
ANR	5695978	Identifier	as		5695951	0					
ANR	5695979	Identifier	a		5695951	1					
ANR	5695980	Argument	offset		5695951	1					
ANR	5695981	Identifier	offset		5695951	0					
ANR	5695982	IfStatement	"if ( ! ( acode = r_asm_rasm_assemble ( as -> a , buf , use_spp ) ) )"		5695951	3					
ANR	5695983	Condition	"! ( acode = r_asm_rasm_assemble ( as -> a , buf , use_spp ) )"	419:5:10744:10795	5695951	0	True				
ANR	5695984	UnaryOperationExpression	"! ( acode = r_asm_rasm_assemble ( as -> a , buf , use_spp ) )"		5695951	0					
ANR	5695985	UnaryOperator	!		5695951	0					
ANR	5695986	AssignmentExpression	"acode = r_asm_rasm_assemble ( as -> a , buf , use_spp )"		5695951	1		=			
ANR	5695987	Identifier	acode		5695951	0					
ANR	5695988	CallExpression	"r_asm_rasm_assemble ( as -> a , buf , use_spp )"		5695951	1					
ANR	5695989	Callee	r_asm_rasm_assemble		5695951	0					
ANR	5695990	Identifier	r_asm_rasm_assemble		5695951	0					
ANR	5695991	ArgumentList	as -> a		5695951	1					
ANR	5695992	Argument	as -> a		5695951	0					
ANR	5695993	PtrMemberAccess	as -> a		5695951	0					
ANR	5695994	Identifier	as		5695951	0					
ANR	5695995	Identifier	a		5695951	1					
ANR	5695996	Argument	buf		5695951	1					
ANR	5695997	Identifier	buf		5695951	0					
ANR	5695998	Argument	use_spp		5695951	2					
ANR	5695999	Identifier	use_spp		5695951	0					
ANR	5696000	CompoundStatement		5:59:129:129	5695951	1					
ANR	5696001	ReturnStatement	return 0 ;	420:2:10802:10810	5695951	0	True				
ANR	5696002	PrimaryExpression	0		5695951	0					
ANR	5696003	IfStatement	if ( acode -> len )		5695951	4					
ANR	5696004	Condition	acode -> len	422:5:10820:10829	5695951	0	True				
ANR	5696005	PtrMemberAccess	acode -> len		5695951	0					
ANR	5696006	Identifier	acode		5695951	0					
ANR	5696007	Identifier	len		5695951	1					
ANR	5696008	CompoundStatement		8:17:163:163	5695951	1					
ANR	5696009	ExpressionStatement	ret = acode -> len	423:2:10836:10852	5695951	0	True				
ANR	5696010	AssignmentExpression	ret = acode -> len		5695951	0		=			
ANR	5696011	Identifier	ret		5695951	0					
ANR	5696012	PtrMemberAccess	acode -> len		5695951	1					
ANR	5696013	Identifier	acode		5695951	0					
ANR	5696014	Identifier	len		5695951	1					
ANR	5696015	IfStatement	if ( bin )		5695951	1					
ANR	5696016	Condition	bin	424:6:10860:10862	5695951	0	True				
ANR	5696017	Identifier	bin		5695951	0					
ANR	5696018	CompoundStatement		10:11:196:196	5695951	1					
ANR	5696019	IfStatement	"if ( ( ret = write ( 1 , acode -> bytes , acode -> len ) ) != acode -> len )"		5695951	0					
ANR	5696020	Condition	"( ret = write ( 1 , acode -> bytes , acode -> len ) ) != acode -> len"	425:7:10874:10930	5695951	0	True				
ANR	5696021	EqualityExpression	"( ret = write ( 1 , acode -> bytes , acode -> len ) ) != acode -> len"		5695951	0		!=			
ANR	5696022	AssignmentExpression	"ret = write ( 1 , acode -> bytes , acode -> len )"		5695951	0		=			
ANR	5696023	Identifier	ret		5695951	0					
ANR	5696024	CallExpression	"write ( 1 , acode -> bytes , acode -> len )"		5695951	1					
ANR	5696025	Callee	write		5695951	0					
ANR	5696026	Identifier	write		5695951	0					
ANR	5696027	ArgumentList	1		5695951	1					
ANR	5696028	Argument	1		5695951	0					
ANR	5696029	PrimaryExpression	1		5695951	0					
ANR	5696030	Argument	acode -> bytes		5695951	1					
ANR	5696031	PtrMemberAccess	acode -> bytes		5695951	0					
ANR	5696032	Identifier	acode		5695951	0					
ANR	5696033	Identifier	bytes		5695951	1					
ANR	5696034	Argument	acode -> len		5695951	2					
ANR	5696035	PtrMemberAccess	acode -> len		5695951	0					
ANR	5696036	Identifier	acode		5695951	0					
ANR	5696037	Identifier	len		5695951	1					
ANR	5696038	PtrMemberAccess	acode -> len		5695951	1					
ANR	5696039	Identifier	acode		5695951	0					
ANR	5696040	Identifier	len		5695951	1					
ANR	5696041	CompoundStatement		11:66:264:264	5695951	1					
ANR	5696042	ExpressionStatement	"eprintf ( ""Failed to write buffer\\n"" )"	426:4:10939:10975	5695951	0	True				
ANR	5696043	CallExpression	"eprintf ( ""Failed to write buffer\\n"" )"		5695951	0					
ANR	5696044	Callee	eprintf		5695951	0					
ANR	5696045	Identifier	eprintf		5695951	0					
ANR	5696046	ArgumentList	"""Failed to write buffer\\n"""		5695951	1					
ANR	5696047	Argument	"""Failed to write buffer\\n"""		5695951	0					
ANR	5696048	PrimaryExpression	"""Failed to write buffer\\n"""		5695951	0					
ANR	5696049	ExpressionStatement	r_asm_code_free ( acode )	427:4:10981:11004	5695951	1	True				
ANR	5696050	CallExpression	r_asm_code_free ( acode )		5695951	0					
ANR	5696051	Callee	r_asm_code_free		5695951	0					
ANR	5696052	Identifier	r_asm_code_free		5695951	0					
ANR	5696053	ArgumentList	acode		5695951	1					
ANR	5696054	Argument	acode		5695951	0					
ANR	5696055	Identifier	acode		5695951	0					
ANR	5696056	ReturnStatement	return 0 ;	428:4:11010:11018	5695951	2	True				
ANR	5696057	PrimaryExpression	0		5695951	0					
ANR	5696058	ElseStatement	else		5695951	0					
ANR	5696059	CompoundStatement		17:3:370:388	5695951	0					
ANR	5696060	IdentifierDeclStatement	int b = acode -> len ;	431:3:11039:11057	5695951	0	True				
ANR	5696061	IdentifierDecl	b = acode -> len		5695951	0					
ANR	5696062	IdentifierDeclType	int		5695951	0					
ANR	5696063	Identifier	b		5695951	1					
ANR	5696064	AssignmentExpression	b = acode -> len		5695951	2		=			
ANR	5696065	Identifier	b		5695951	0					
ANR	5696066	PtrMemberAccess	acode -> len		5695951	1					
ANR	5696067	Identifier	acode		5695951	0					
ANR	5696068	Identifier	len		5695951	1					
ANR	5696069	IfStatement	if ( bits == 1 )		5695951	1					
ANR	5696070	Condition	bits == 1	432:7:11066:11074	5695951	0	True				
ANR	5696071	EqualityExpression	bits == 1		5695951	0		==			
ANR	5696072	Identifier	bits		5695951	0					
ANR	5696073	PrimaryExpression	1		5695951	1					
ANR	5696074	CompoundStatement		19:4:414:437	5695951	1					
ANR	5696075	IdentifierDeclStatement	int bytes = ( b / 8 ) + 1 ;	433:4:11083:11106	5695951	0	True				
ANR	5696076	IdentifierDecl	bytes = ( b / 8 ) + 1		5695951	0					
ANR	5696077	IdentifierDeclType	int		5695951	0					
ANR	5696078	Identifier	bytes		5695951	1					
ANR	5696079	AssignmentExpression	bytes = ( b / 8 ) + 1		5695951	2		=			
ANR	5696080	Identifier	bytes		5695951	0					
ANR	5696081	AdditiveExpression	( b / 8 ) + 1		5695951	1		+			
ANR	5696082	MultiplicativeExpression	b / 8		5695951	0		/			
ANR	5696083	Identifier	b		5695951	0					
ANR	5696084	PrimaryExpression	8		5695951	1					
ANR	5696085	PrimaryExpression	1		5695951	1					
ANR	5696086	ForStatement	for ( i = 0 ; i < bytes ; i ++ )		5695951	1					
ANR	5696087	ForInit	i = 0 ;	434:9:11117:11122	5695951	0	True				
ANR	5696088	AssignmentExpression	i = 0		5695951	0		=			
ANR	5696089	Identifier	i		5695951	0					
ANR	5696090	PrimaryExpression	0		5695951	1					
ANR	5696091	Condition	i < bytes	434:16:11124:11132	5695951	1	True				
ANR	5696092	RelationalExpression	i < bytes		5695951	0		<			
ANR	5696093	Identifier	i		5695951	0					
ANR	5696094	Identifier	bytes		5695951	1					
ANR	5696095	PostIncDecOperationExpression	i ++	434:27:11135:11137	5695951	2	True				
ANR	5696096	Identifier	i		5695951	0					
ANR	5696097	IncDec	++		5695951	1					
ANR	5696098	CompoundStatement		20:32:471:471	5695951	3					
ANR	5696099	ForStatement	for ( j = 0 ; j < 8 && b -- ; j ++ )		5695951	0					
ANR	5696100	ForInit	j = 0 ;	435:10:11152:11157	5695951	0	True				
ANR	5696101	AssignmentExpression	j = 0		5695951	0		=			
ANR	5696102	Identifier	j		5695951	0					
ANR	5696103	PrimaryExpression	0		5695951	1					
ANR	5696104	Condition	j < 8 && b --	435:17:11159:11170	5695951	1	True				
ANR	5696105	AndExpression	j < 8 && b --		5695951	0		&&			
ANR	5696106	RelationalExpression	j < 8		5695951	0		<			
ANR	5696107	Identifier	j		5695951	0					
ANR	5696108	PrimaryExpression	8		5695951	1					
ANR	5696109	PostIncDecOperationExpression	b --		5695951	1					
ANR	5696110	Identifier	b		5695951	0					
ANR	5696111	IncDec	--		5695951	1					
ANR	5696112	PostIncDecOperationExpression	j ++	435:31:11173:11175	5695951	2	True				
ANR	5696113	Identifier	j		5695951	0					
ANR	5696114	IncDec	++		5695951	1					
ANR	5696115	CompoundStatement		21:36:509:509	5695951	3					
ANR	5696116	ExpressionStatement	"printf ( ""%c"" , ( acode -> bytes [ i ] & ( 1 << j ) ) ? '1' : '0' )"	436:6:11186:11239	5695951	0	True				
ANR	5696117	CallExpression	"printf ( ""%c"" , ( acode -> bytes [ i ] & ( 1 << j ) ) ? '1' : '0' )"		5695951	0					
ANR	5696118	Callee	printf		5695951	0					
ANR	5696119	Identifier	printf		5695951	0					
ANR	5696120	ArgumentList	"""%c"""		5695951	1					
ANR	5696121	Argument	"""%c"""		5695951	0					
ANR	5696122	PrimaryExpression	"""%c"""		5695951	0					
ANR	5696123	Argument	( acode -> bytes [ i ] & ( 1 << j ) ) ? '1' : '0'		5695951	1					
ANR	5696124	ConditionalExpression	( acode -> bytes [ i ] & ( 1 << j ) ) ? '1' : '0'		5695951	0					
ANR	5696125	Condition	acode -> bytes [ i ] & ( 1 << j )		5695951	0					
ANR	5696126	BitAndExpression	acode -> bytes [ i ] & ( 1 << j )		5695951	0		&			
ANR	5696127	ArrayIndexing	acode -> bytes [ i ]		5695951	0					
ANR	5696128	PtrMemberAccess	acode -> bytes		5695951	0					
ANR	5696129	Identifier	acode		5695951	0					
ANR	5696130	Identifier	bytes		5695951	1					
ANR	5696131	Identifier	i		5695951	1					
ANR	5696132	ShiftExpression	1 << j		5695951	1		<<			
ANR	5696133	PrimaryExpression	1		5695951	0					
ANR	5696134	Identifier	j		5695951	1					
ANR	5696135	PrimaryExpression	'1'		5695951	1					
ANR	5696136	PrimaryExpression	'0'		5695951	2					
ANR	5696137	ExpressionStatement	"printf ( ""\\n"" )"	439:4:11258:11271	5695951	2	True				
ANR	5696138	CallExpression	"printf ( ""\\n"" )"		5695951	0					
ANR	5696139	Callee	printf		5695951	0					
ANR	5696140	Identifier	printf		5695951	0					
ANR	5696141	ArgumentList	"""\\n"""		5695951	1					
ANR	5696142	Argument	"""\\n"""		5695951	0					
ANR	5696143	PrimaryExpression	"""\\n"""		5695951	0					
ANR	5696144	ElseStatement	else		5695951	0					
ANR	5696145	CompoundStatement		26:10:614:614	5695951	0					
ANR	5696146	IfStatement	if ( hexwords )		5695951	0					
ANR	5696147	Condition	hexwords	441:8:11293:11300	5695951	0	True				
ANR	5696148	Identifier	hexwords		5695951	0					
ANR	5696149	CompoundStatement		28:5:641:653	5695951	1					
ANR	5696150	IdentifierDeclStatement	size_t i = 0 ;	442:5:11310:11322	5695951	0	True				
ANR	5696151	IdentifierDecl	i = 0		5695951	0					
ANR	5696152	IdentifierDeclType	size_t		5695951	0					
ANR	5696153	Identifier	i		5695951	1					
ANR	5696154	AssignmentExpression	i = 0		5695951	2		=			
ANR	5696155	Identifier	i		5695951	0					
ANR	5696156	PrimaryExpression	0		5695951	1					
ANR	5696157	ForStatement	for ( i = 0 ; i < acode -> len ; i += sizeof ( ut32 ) )		5695951	1					
ANR	5696158	ForInit	i = 0 ;	443:10:11334:11339	5695951	0	True				
ANR	5696159	AssignmentExpression	i = 0		5695951	0		=			
ANR	5696160	Identifier	i		5695951	0					
ANR	5696161	PrimaryExpression	0		5695951	1					
ANR	5696162	Condition	i < acode -> len	443:17:11341:11354	5695951	1	True				
ANR	5696163	RelationalExpression	i < acode -> len		5695951	0		<			
ANR	5696164	Identifier	i		5695951	0					
ANR	5696165	PtrMemberAccess	acode -> len		5695951	1					
ANR	5696166	Identifier	acode		5695951	0					
ANR	5696167	Identifier	len		5695951	1					
ANR	5696168	AssignmentExpression	i += sizeof ( ut32 )	443:33:11357:11374	5695951	2	True	+=			
ANR	5696169	Identifier	i		5695951	0					
ANR	5696170	SizeofExpression	sizeof ( ut32 )		5695951	1					
ANR	5696171	Sizeof	sizeof		5695951	0					
ANR	5696172	SizeofOperand	ut32		5695951	1					
ANR	5696173	CompoundStatement		30:6:716:774	5695951	3					
ANR	5696174	IdentifierDeclStatement	"ut32 dword = r_read_ble32 ( acode -> bytes + i , R_SYS_ENDIAN ) ;"	444:6:11385:11443	5695951	0	True				
ANR	5696175	IdentifierDecl	"dword = r_read_ble32 ( acode -> bytes + i , R_SYS_ENDIAN )"		5695951	0					
ANR	5696176	IdentifierDeclType	ut32		5695951	0					
ANR	5696177	Identifier	dword		5695951	1					
ANR	5696178	AssignmentExpression	"dword = r_read_ble32 ( acode -> bytes + i , R_SYS_ENDIAN )"		5695951	2		=			
ANR	5696179	Identifier	dword		5695951	0					
ANR	5696180	CallExpression	"r_read_ble32 ( acode -> bytes + i , R_SYS_ENDIAN )"		5695951	1					
ANR	5696181	Callee	r_read_ble32		5695951	0					
ANR	5696182	Identifier	r_read_ble32		5695951	0					
ANR	5696183	ArgumentList	acode -> bytes + i		5695951	1					
ANR	5696184	Argument	acode -> bytes + i		5695951	0					
ANR	5696185	AdditiveExpression	acode -> bytes + i		5695951	0		+			
ANR	5696186	PtrMemberAccess	acode -> bytes		5695951	0					
ANR	5696187	Identifier	acode		5695951	0					
ANR	5696188	Identifier	bytes		5695951	1					
ANR	5696189	Identifier	i		5695951	1					
ANR	5696190	Argument	R_SYS_ENDIAN		5695951	1					
ANR	5696191	Identifier	R_SYS_ENDIAN		5695951	0					
ANR	5696192	ExpressionStatement	"printf ( ""0x%08x "" , dword )"	445:6:11451:11476	5695951	1	True				
ANR	5696193	CallExpression	"printf ( ""0x%08x "" , dword )"		5695951	0					
ANR	5696194	Callee	printf		5695951	0					
ANR	5696195	Identifier	printf		5695951	0					
ANR	5696196	ArgumentList	"""0x%08x """		5695951	1					
ANR	5696197	Argument	"""0x%08x """		5695951	0					
ANR	5696198	PrimaryExpression	"""0x%08x """		5695951	0					
ANR	5696199	Argument	dword		5695951	1					
ANR	5696200	Identifier	dword		5695951	0					
ANR	5696201	IfStatement	if ( ( i / 4 ) == 7 )		5695951	2					
ANR	5696202	Condition	( i / 4 ) == 7	446:10:11488:11497	5695951	0	True				
ANR	5696203	EqualityExpression	( i / 4 ) == 7		5695951	0		==			
ANR	5696204	MultiplicativeExpression	i / 4		5695951	0		/			
ANR	5696205	Identifier	i		5695951	0					
ANR	5696206	PrimaryExpression	4		5695951	1					
ANR	5696207	PrimaryExpression	7		5695951	1					
ANR	5696208	CompoundStatement		32:22:831:831	5695951	1					
ANR	5696209	ExpressionStatement	"printf ( ""\\n"" )"	447:7:11509:11522	5695951	0	True				
ANR	5696210	CallExpression	"printf ( ""\\n"" )"		5695951	0					
ANR	5696211	Callee	printf		5695951	0					
ANR	5696212	Identifier	printf		5695951	0					
ANR	5696213	ArgumentList	"""\\n"""		5695951	1					
ANR	5696214	Argument	"""\\n"""		5695951	0					
ANR	5696215	PrimaryExpression	"""\\n"""		5695951	0					
ANR	5696216	ExpressionStatement	"printf ( ""\\n"" )"	450:5:11544:11557	5695951	2	True				
ANR	5696217	CallExpression	"printf ( ""\\n"" )"		5695951	0					
ANR	5696218	Callee	printf		5695951	0					
ANR	5696219	Identifier	printf		5695951	0					
ANR	5696220	ArgumentList	"""\\n"""		5695951	1					
ANR	5696221	Argument	"""\\n"""		5695951	0					
ANR	5696222	PrimaryExpression	"""\\n"""		5695951	0					
ANR	5696223	ElseStatement	else		5695951	0					
ANR	5696224	CompoundStatement		38:5:908:946	5695951	0					
ANR	5696225	IdentifierDeclStatement	char * str = r_asm_code_get_hex ( acode ) ;	452:5:11577:11615	5695951	0	True				
ANR	5696226	IdentifierDecl	* str = r_asm_code_get_hex ( acode )		5695951	0					
ANR	5696227	IdentifierDeclType	char *		5695951	0					
ANR	5696228	Identifier	str		5695951	1					
ANR	5696229	AssignmentExpression	* str = r_asm_code_get_hex ( acode )		5695951	2		=			
ANR	5696230	Identifier	str		5695951	0					
ANR	5696231	CallExpression	r_asm_code_get_hex ( acode )		5695951	1					
ANR	5696232	Callee	r_asm_code_get_hex		5695951	0					
ANR	5696233	Identifier	r_asm_code_get_hex		5695951	0					
ANR	5696234	ArgumentList	acode		5695951	1					
ANR	5696235	Argument	acode		5695951	0					
ANR	5696236	Identifier	acode		5695951	0					
ANR	5696237	IfStatement	if ( str )		5695951	1					
ANR	5696238	Condition	str	453:9:11626:11628	5695951	0	True				
ANR	5696239	Identifier	str		5695951	0					
ANR	5696240	CompoundStatement		39:14:962:962	5695951	1					
ANR	5696241	ExpressionStatement	"print_buf ( as , str )"	454:6:11639:11658	5695951	0	True				
ANR	5696242	CallExpression	"print_buf ( as , str )"		5695951	0					
ANR	5696243	Callee	print_buf		5695951	0					
ANR	5696244	Identifier	print_buf		5695951	0					
ANR	5696245	ArgumentList	as		5695951	1					
ANR	5696246	Argument	as		5695951	0					
ANR	5696247	Identifier	as		5695951	0					
ANR	5696248	Argument	str		5695951	1					
ANR	5696249	Identifier	str		5695951	0					
ANR	5696250	ExpressionStatement	free ( str )	455:6:11666:11676	5695951	1	True				
ANR	5696251	CallExpression	free ( str )		5695951	0					
ANR	5696252	Callee	free		5695951	0					
ANR	5696253	Identifier	free		5695951	0					
ANR	5696254	ArgumentList	str		5695951	1					
ANR	5696255	Argument	str		5695951	0					
ANR	5696256	Identifier	str		5695951	0					
ANR	5696257	ExpressionStatement	r_asm_code_free ( acode )	461:1:11704:11727	5695951	5	True				
ANR	5696258	CallExpression	r_asm_code_free ( acode )		5695951	0					
ANR	5696259	Callee	r_asm_code_free		5695951	0					
ANR	5696260	Identifier	r_asm_code_free		5695951	0					
ANR	5696261	ArgumentList	acode		5695951	1					
ANR	5696262	Argument	acode		5695951	0					
ANR	5696263	Identifier	acode		5695951	0					
ANR	5696264	ReturnStatement	return ( ret > 0 ) ;	462:1:11730:11746	5695951	6	True				
ANR	5696265	RelationalExpression	ret > 0		5695951	0		>			
ANR	5696266	Identifier	ret		5695951	0					
ANR	5696267	PrimaryExpression	0		5695951	1					
ANR	5696268	ReturnType	static int		5695951	1					
ANR	5696269	Identifier	rasm_asm		5695951	2					
ANR	5696270	ParameterList	"RAsmState * as , const char * buf , ut64 offset , ut64 len , int bits , int bin , bool use_spp , bool hexwords"		5695951	3					
ANR	5696271	Parameter	RAsmState * as	415:20:10565:10577	5695951	0	True				
ANR	5696272	ParameterType	RAsmState *		5695951	0					
ANR	5696273	Identifier	as		5695951	1					
ANR	5696274	Parameter	const char * buf	415:35:10580:10594	5695951	1	True				
ANR	5696275	ParameterType	const char *		5695951	0					
ANR	5696276	Identifier	buf		5695951	1					
ANR	5696277	Parameter	ut64 offset	415:52:10597:10607	5695951	2	True				
ANR	5696278	ParameterType	ut64		5695951	0					
ANR	5696279	Identifier	offset		5695951	1					
ANR	5696280	Parameter	ut64 len	415:65:10610:10617	5695951	3	True				
ANR	5696281	ParameterType	ut64		5695951	0					
ANR	5696282	Identifier	len		5695951	1					
ANR	5696283	Parameter	int bits	415:75:10620:10627	5695951	4	True				
ANR	5696284	ParameterType	int		5695951	0					
ANR	5696285	Identifier	bits		5695951	1					
ANR	5696286	Parameter	int bin	415:85:10630:10636	5695951	5	True				
ANR	5696287	ParameterType	int		5695951	0					
ANR	5696288	Identifier	bin		5695951	1					
ANR	5696289	Parameter	bool use_spp	415:94:10639:10650	5695951	6	True				
ANR	5696290	ParameterType	bool		5695951	0					
ANR	5696291	Identifier	use_spp		5695951	1					
ANR	5696292	Parameter	bool hexwords	415:108:10653:10665	5695951	7	True				
ANR	5696293	ParameterType	bool		5695951	0					
ANR	5696294	Identifier	hexwords		5695951	1					
ANR	5696295	CFGEntryNode	ENTRY		5695951		True				
ANR	5696296	CFGExitNode	EXIT		5695951		True				
ANR	5696297	Symbol	* acode -> bytes		5695951						
ANR	5696298	Symbol	R_SYS_ENDIAN		5695951						
ANR	5696299	Symbol	bin		5695951						
ANR	5696300	Symbol	use_spp		5695951						
ANR	5696301	Symbol	acode		5695951						
ANR	5696302	Symbol	acode -> len		5695951						
ANR	5696303	Symbol	len		5695951						
ANR	5696304	Symbol	dword		5695951						
ANR	5696305	Symbol	r_asm_rasm_assemble		5695951						
ANR	5696306	Symbol	r_asm_code_get_hex		5695951						
ANR	5696307	Symbol	write		5695951						
ANR	5696308	Symbol	r_read_ble32		5695951						
ANR	5696309	Symbol	ret		5695951						
ANR	5696310	Symbol	b		5695951						
ANR	5696311	Symbol	offset		5695951						
ANR	5696312	Symbol	* * acode		5695951						
ANR	5696313	Symbol	acode -> bytes		5695951						
ANR	5696314	Symbol	bits		5695951						
ANR	5696315	Symbol	i		5695951						
ANR	5696316	Symbol	j		5695951						
ANR	5696317	Symbol	str		5695951						
ANR	5696318	Symbol	as		5695951						
ANR	5696319	Symbol	buf		5695951						
ANR	5696320	Symbol	as -> a		5695951						
ANR	5696321	Symbol	* i		5695951						
ANR	5696322	Symbol	bytes		5695951						
ANR	5696323	Symbol	hexwords		5695951						
ANR	5696324	Symbol	* as		5695951						
ANR	5696325	Symbol	* acode		5695951						
ANR	5696326	Function	__lib_asm_cb	466:0:11770:11952							
ANR	5696327	FunctionDef	"__lib_asm_cb (RLibPlugin * pl , void * user , void * data)"		5696326	0					
ANR	5696328	CompoundStatement		466:64:11834:11952	5696326	0					
ANR	5696329	IdentifierDeclStatement	RAsmPlugin * hand = ( RAsmPlugin * ) data ;	467:1:11837:11874	5696326	0	True				
ANR	5696330	IdentifierDecl	* hand = ( RAsmPlugin * ) data		5696326	0					
ANR	5696331	IdentifierDeclType	RAsmPlugin *		5696326	0					
ANR	5696332	Identifier	hand		5696326	1					
ANR	5696333	AssignmentExpression	* hand = ( RAsmPlugin * ) data		5696326	2		=			
ANR	5696334	Identifier	hand		5696326	0					
ANR	5696335	CastExpression	( RAsmPlugin * ) data		5696326	1					
ANR	5696336	CastTarget	RAsmPlugin *		5696326	0					
ANR	5696337	Identifier	data		5696326	1					
ANR	5696338	IdentifierDeclStatement	RAsmState * as = ( RAsmState * ) user ;	468:1:11877:11910	5696326	1	True				
ANR	5696339	IdentifierDecl	* as = ( RAsmState * ) user		5696326	0					
ANR	5696340	IdentifierDeclType	RAsmState *		5696326	0					
ANR	5696341	Identifier	as		5696326	1					
ANR	5696342	AssignmentExpression	* as = ( RAsmState * ) user		5696326	2		=			
ANR	5696343	Identifier	as		5696326	0					
ANR	5696344	CastExpression	( RAsmState * ) user		5696326	1					
ANR	5696345	CastTarget	RAsmState *		5696326	0					
ANR	5696346	Identifier	user		5696326	1					
ANR	5696347	ExpressionStatement	"r_asm_add ( as -> a , hand )"	469:1:11913:11936	5696326	2	True				
ANR	5696348	CallExpression	"r_asm_add ( as -> a , hand )"		5696326	0					
ANR	5696349	Callee	r_asm_add		5696326	0					
ANR	5696350	Identifier	r_asm_add		5696326	0					
ANR	5696351	ArgumentList	as -> a		5696326	1					
ANR	5696352	Argument	as -> a		5696326	0					
ANR	5696353	PtrMemberAccess	as -> a		5696326	0					
ANR	5696354	Identifier	as		5696326	0					
ANR	5696355	Identifier	a		5696326	1					
ANR	5696356	Argument	hand		5696326	1					
ANR	5696357	Identifier	hand		5696326	0					
ANR	5696358	ReturnStatement	return true ;	470:1:11939:11950	5696326	3	True				
ANR	5696359	Identifier	true		5696326	0					
ANR	5696360	ReturnType	static int		5696326	1					
ANR	5696361	Identifier	__lib_asm_cb		5696326	2					
ANR	5696362	ParameterList	"RLibPlugin * pl , void * user , void * data"		5696326	3					
ANR	5696363	Parameter	RLibPlugin * pl	466:24:11794:11807	5696326	0	True				
ANR	5696364	ParameterType	RLibPlugin *		5696326	0					
ANR	5696365	Identifier	pl		5696326	1					
ANR	5696366	Parameter	void * user	466:40:11810:11819	5696326	1	True				
ANR	5696367	ParameterType	void *		5696326	0					
ANR	5696368	Identifier	user		5696326	1					
ANR	5696369	Parameter	void * data	466:52:11822:11831	5696326	2	True				
ANR	5696370	ParameterType	void *		5696326	0					
ANR	5696371	Identifier	data		5696326	1					
ANR	5696372	CFGEntryNode	ENTRY		5696326		True				
ANR	5696373	CFGExitNode	EXIT		5696326		True				
ANR	5696374	Symbol	as		5696326						
ANR	5696375	Symbol	as -> a		5696326						
ANR	5696376	Symbol	data		5696326						
ANR	5696377	Symbol	true		5696326						
ANR	5696378	Symbol	* as		5696326						
ANR	5696379	Symbol	pl		5696326						
ANR	5696380	Symbol	user		5696326						
ANR	5696381	Symbol	hand		5696326						
ANR	5696382	Function	__lib_anal_cb	474:0:11975:12164							
ANR	5696383	FunctionDef	"__lib_anal_cb (RLibPlugin * pl , void * user , void * data)"		5696382	0					
ANR	5696384	CompoundStatement		474:65:12040:12164	5696382	0					
ANR	5696385	IdentifierDeclStatement	RAnalPlugin * hand = ( RAnalPlugin * ) data ;	475:1:12043:12082	5696382	0	True				
ANR	5696386	IdentifierDecl	* hand = ( RAnalPlugin * ) data		5696382	0					
ANR	5696387	IdentifierDeclType	RAnalPlugin *		5696382	0					
ANR	5696388	Identifier	hand		5696382	1					
ANR	5696389	AssignmentExpression	* hand = ( RAnalPlugin * ) data		5696382	2		=			
ANR	5696390	Identifier	hand		5696382	0					
ANR	5696391	CastExpression	( RAnalPlugin * ) data		5696382	1					
ANR	5696392	CastTarget	RAnalPlugin *		5696382	0					
ANR	5696393	Identifier	data		5696382	1					
ANR	5696394	IdentifierDeclStatement	RAsmState * as = ( RAsmState * ) user ;	476:1:12085:12118	5696382	1	True				
ANR	5696395	IdentifierDecl	* as = ( RAsmState * ) user		5696382	0					
ANR	5696396	IdentifierDeclType	RAsmState *		5696382	0					
ANR	5696397	Identifier	as		5696382	1					
ANR	5696398	AssignmentExpression	* as = ( RAsmState * ) user		5696382	2		=			
ANR	5696399	Identifier	as		5696382	0					
ANR	5696400	CastExpression	( RAsmState * ) user		5696382	1					
ANR	5696401	CastTarget	RAsmState *		5696382	0					
ANR	5696402	Identifier	user		5696382	1					
ANR	5696403	ExpressionStatement	"r_anal_add ( as -> anal , hand )"	477:1:12121:12148	5696382	2	True				
ANR	5696404	CallExpression	"r_anal_add ( as -> anal , hand )"		5696382	0					
ANR	5696405	Callee	r_anal_add		5696382	0					
ANR	5696406	Identifier	r_anal_add		5696382	0					
ANR	5696407	ArgumentList	as -> anal		5696382	1					
ANR	5696408	Argument	as -> anal		5696382	0					
ANR	5696409	PtrMemberAccess	as -> anal		5696382	0					
ANR	5696410	Identifier	as		5696382	0					
ANR	5696411	Identifier	anal		5696382	1					
ANR	5696412	Argument	hand		5696382	1					
ANR	5696413	Identifier	hand		5696382	0					
ANR	5696414	ReturnStatement	return true ;	478:1:12151:12162	5696382	3	True				
ANR	5696415	Identifier	true		5696382	0					
ANR	5696416	ReturnType	static int		5696382	1					
ANR	5696417	Identifier	__lib_anal_cb		5696382	2					
ANR	5696418	ParameterList	"RLibPlugin * pl , void * user , void * data"		5696382	3					
ANR	5696419	Parameter	RLibPlugin * pl	474:25:12000:12013	5696382	0	True				
ANR	5696420	ParameterType	RLibPlugin *		5696382	0					
ANR	5696421	Identifier	pl		5696382	1					
ANR	5696422	Parameter	void * user	474:41:12016:12025	5696382	1	True				
ANR	5696423	ParameterType	void *		5696382	0					
ANR	5696424	Identifier	user		5696382	1					
ANR	5696425	Parameter	void * data	474:53:12028:12037	5696382	2	True				
ANR	5696426	ParameterType	void *		5696382	0					
ANR	5696427	Identifier	data		5696382	1					
ANR	5696428	CFGEntryNode	ENTRY		5696382		True				
ANR	5696429	CFGExitNode	EXIT		5696382		True				
ANR	5696430	Symbol	as		5696382						
ANR	5696431	Symbol	data		5696382						
ANR	5696432	Symbol	as -> anal		5696382						
ANR	5696433	Symbol	true		5696382						
ANR	5696434	Symbol	* as		5696382						
ANR	5696435	Symbol	pl		5696382						
ANR	5696436	Symbol	user		5696382						
ANR	5696437	Symbol	hand		5696382						
ANR	5696438	Function	print_assembly_output	481:0:12167:12788							
ANR	5696439	FunctionDef	"print_assembly_output (RAsmState * as , const char * buf , ut64 offset , ut64 len , int bits , int bin , bool use_spp , bool rad , bool hexwords , char * arch)"		5696438	0					
ANR	5696440	CompoundStatement		482:93:12358:12788	5696438	0					
ANR	5696441	IdentifierDeclStatement	int ret = 0 ;	483:1:12361:12372	5696438	0	True				
ANR	5696442	IdentifierDecl	ret = 0		5696438	0					
ANR	5696443	IdentifierDeclType	int		5696438	0					
ANR	5696444	Identifier	ret		5696438	1					
ANR	5696445	AssignmentExpression	ret = 0		5696438	2		=			
ANR	5696446	Identifier	ret		5696438	0					
ANR	5696447	PrimaryExpression	0		5696438	1					
ANR	5696448	IfStatement	if ( rad )		5696438	1					
ANR	5696449	Condition	rad	484:5:12379:12381	5696438	0	True				
ANR	5696450	Identifier	rad		5696438	0					
ANR	5696451	CompoundStatement		3:10:25:25	5696438	1					
ANR	5696452	ExpressionStatement	"printf ( ""e asm.arch=%s\\n"" , arch ? arch : R_SYS_ARCH )"	485:2:12388:12438	5696438	0	True				
ANR	5696453	CallExpression	"printf ( ""e asm.arch=%s\\n"" , arch ? arch : R_SYS_ARCH )"		5696438	0					
ANR	5696454	Callee	printf		5696438	0					
ANR	5696455	Identifier	printf		5696438	0					
ANR	5696456	ArgumentList	"""e asm.arch=%s\\n"""		5696438	1					
ANR	5696457	Argument	"""e asm.arch=%s\\n"""		5696438	0					
ANR	5696458	PrimaryExpression	"""e asm.arch=%s\\n"""		5696438	0					
ANR	5696459	Argument	arch ? arch : R_SYS_ARCH		5696438	1					
ANR	5696460	ConditionalExpression	arch ? arch : R_SYS_ARCH		5696438	0					
ANR	5696461	Condition	arch		5696438	0					
ANR	5696462	Identifier	arch		5696438	0					
ANR	5696463	Identifier	arch		5696438	1					
ANR	5696464	Identifier	R_SYS_ARCH		5696438	2					
ANR	5696465	ExpressionStatement	"printf ( ""e asm.bits=%d\\n"" , bits )"	486:2:12442:12474	5696438	1	True				
ANR	5696466	CallExpression	"printf ( ""e asm.bits=%d\\n"" , bits )"		5696438	0					
ANR	5696467	Callee	printf		5696438	0					
ANR	5696468	Identifier	printf		5696438	0					
ANR	5696469	ArgumentList	"""e asm.bits=%d\\n"""		5696438	1					
ANR	5696470	Argument	"""e asm.bits=%d\\n"""		5696438	0					
ANR	5696471	PrimaryExpression	"""e asm.bits=%d\\n"""		5696438	0					
ANR	5696472	Argument	bits		5696438	1					
ANR	5696473	Identifier	bits		5696438	0					
ANR	5696474	IfStatement	if ( offset )		5696438	2					
ANR	5696475	Condition	offset	487:6:12482:12487	5696438	0	True				
ANR	5696476	Identifier	offset		5696438	0					
ANR	5696477	CompoundStatement		6:14:131:131	5696438	1					
ANR	5696478	Statement	printf	488:3:12495:12500	5696438	0	True				
ANR	5696479	Statement	(	488:10:12502:12502	5696438	1	True				
ANR	5696480	Statement	"""s 0x%"""	488:11:12503:12509	5696438	2	True				
ANR	5696481	Statement	PFMT64x	488:18:12510:12516	5696438	3	True				
ANR	5696482	Statement	"""\\n"""	488:25:12517:12520	5696438	4	True				
ANR	5696483	Statement	","	488:29:12521:12521	5696438	5	True				
ANR	5696484	Statement	offset	488:31:12523:12528	5696438	6	True				
ANR	5696485	Statement	)	488:37:12529:12529	5696438	7	True				
ANR	5696486	ExpressionStatement		488:38:12530:12530	5696438	8	True				
ANR	5696487	ExpressionStatement	"printf ( ""wx "" )"	490:2:12538:12552	5696438	3	True				
ANR	5696488	CallExpression	"printf ( ""wx "" )"		5696438	0					
ANR	5696489	Callee	printf		5696438	0					
ANR	5696490	Identifier	printf		5696438	0					
ANR	5696491	ArgumentList	"""wx """		5696438	1					
ANR	5696492	Argument	"""wx """		5696438	0					
ANR	5696493	PrimaryExpression	"""wx """		5696438	0					
ANR	5696494	ExpressionStatement	"ret = rasm_asm ( as , ( char * ) buf , offset , len , as -> a -> bits , bin , use_spp , hexwords )"	492:1:12558:12640	5696438	2	True				
ANR	5696495	AssignmentExpression	"ret = rasm_asm ( as , ( char * ) buf , offset , len , as -> a -> bits , bin , use_spp , hexwords )"		5696438	0		=			
ANR	5696496	Identifier	ret		5696438	0					
ANR	5696497	CallExpression	"rasm_asm ( as , ( char * ) buf , offset , len , as -> a -> bits , bin , use_spp , hexwords )"		5696438	1					
ANR	5696498	Callee	rasm_asm		5696438	0					
ANR	5696499	Identifier	rasm_asm		5696438	0					
ANR	5696500	ArgumentList	as		5696438	1					
ANR	5696501	Argument	as		5696438	0					
ANR	5696502	Identifier	as		5696438	0					
ANR	5696503	Argument	( char * ) buf		5696438	1					
ANR	5696504	CastExpression	( char * ) buf		5696438	0					
ANR	5696505	CastTarget	char *		5696438	0					
ANR	5696506	Identifier	buf		5696438	1					
ANR	5696507	Argument	offset		5696438	2					
ANR	5696508	Identifier	offset		5696438	0					
ANR	5696509	Argument	len		5696438	3					
ANR	5696510	Identifier	len		5696438	0					
ANR	5696511	Argument	as -> a -> bits		5696438	4					
ANR	5696512	PtrMemberAccess	as -> a -> bits		5696438	0					
ANR	5696513	PtrMemberAccess	as -> a		5696438	0					
ANR	5696514	Identifier	as		5696438	0					
ANR	5696515	Identifier	a		5696438	1					
ANR	5696516	Identifier	bits		5696438	1					
ANR	5696517	Argument	bin		5696438	5					
ANR	5696518	Identifier	bin		5696438	0					
ANR	5696519	Argument	use_spp		5696438	6					
ANR	5696520	Identifier	use_spp		5696438	0					
ANR	5696521	Argument	hexwords		5696438	7					
ANR	5696522	Identifier	hexwords		5696438	0					
ANR	5696523	IfStatement	if ( rad )		5696438	3					
ANR	5696524	Condition	rad	493:5:12647:12649	5696438	0	True				
ANR	5696525	Identifier	rad		5696438	0					
ANR	5696526	CompoundStatement		12:10:293:293	5696438	1					
ANR	5696527	ExpressionStatement	"printf ( ""f entry = $$\\n"" )"	494:2:12656:12681	5696438	0	True				
ANR	5696528	CallExpression	"printf ( ""f entry = $$\\n"" )"		5696438	0					
ANR	5696529	Callee	printf		5696438	0					
ANR	5696530	Identifier	printf		5696438	0					
ANR	5696531	ArgumentList	"""f entry = $$\\n"""		5696438	1					
ANR	5696532	Argument	"""f entry = $$\\n"""		5696438	0					
ANR	5696533	PrimaryExpression	"""f entry = $$\\n"""		5696438	0					
ANR	5696534	ExpressionStatement	"printf ( ""f label.main = $$ + 1\\n"" )"	495:2:12685:12719	5696438	1	True				
ANR	5696535	CallExpression	"printf ( ""f label.main = $$ + 1\\n"" )"		5696438	0					
ANR	5696536	Callee	printf		5696438	0					
ANR	5696537	Identifier	printf		5696438	0					
ANR	5696538	ArgumentList	"""f label.main = $$ + 1\\n"""		5696438	1					
ANR	5696539	Argument	"""f label.main = $$ + 1\\n"""		5696438	0					
ANR	5696540	PrimaryExpression	"""f label.main = $$ + 1\\n"""		5696438	0					
ANR	5696541	ExpressionStatement	"ht_pp_foreach ( as -> a -> flags , print_label , NULL )"	496:2:12723:12770	5696438	2	True				
ANR	5696542	CallExpression	"ht_pp_foreach ( as -> a -> flags , print_label , NULL )"		5696438	0					
ANR	5696543	Callee	ht_pp_foreach		5696438	0					
ANR	5696544	Identifier	ht_pp_foreach		5696438	0					
ANR	5696545	ArgumentList	as -> a -> flags		5696438	1					
ANR	5696546	Argument	as -> a -> flags		5696438	0					
ANR	5696547	PtrMemberAccess	as -> a -> flags		5696438	0					
ANR	5696548	PtrMemberAccess	as -> a		5696438	0					
ANR	5696549	Identifier	as		5696438	0					
ANR	5696550	Identifier	a		5696438	1					
ANR	5696551	Identifier	flags		5696438	1					
ANR	5696552	Argument	print_label		5696438	1					
ANR	5696553	Identifier	print_label		5696438	0					
ANR	5696554	Argument	NULL		5696438	2					
ANR	5696555	Identifier	NULL		5696438	0					
ANR	5696556	ReturnStatement	return ret ;	498:1:12776:12786	5696438	4	True				
ANR	5696557	Identifier	ret		5696438	0					
ANR	5696558	ReturnType	static int		5696438	1					
ANR	5696559	Identifier	print_assembly_output		5696438	2					
ANR	5696560	ParameterList	"RAsmState * as , const char * buf , ut64 offset , ut64 len , int bits , int bin , bool use_spp , bool rad , bool hexwords , char * arch"		5696438	3					
ANR	5696561	Parameter	RAsmState * as	481:33:12200:12212	5696438	0	True				
ANR	5696562	ParameterType	RAsmState *		5696438	0					
ANR	5696563	Identifier	as		5696438	1					
ANR	5696564	Parameter	const char * buf	481:48:12215:12229	5696438	1	True				
ANR	5696565	ParameterType	const char *		5696438	0					
ANR	5696566	Identifier	buf		5696438	1					
ANR	5696567	Parameter	ut64 offset	481:65:12232:12242	5696438	2	True				
ANR	5696568	ParameterType	ut64		5696438	0					
ANR	5696569	Identifier	offset		5696438	1					
ANR	5696570	Parameter	ut64 len	481:78:12245:12252	5696438	3	True				
ANR	5696571	ParameterType	ut64		5696438	0					
ANR	5696572	Identifier	len		5696438	1					
ANR	5696573	Parameter	int bits	481:88:12255:12262	5696438	4	True				
ANR	5696574	ParameterType	int		5696438	0					
ANR	5696575	Identifier	bits		5696438	1					
ANR	5696576	Parameter	int bin	482:33:12298:12304	5696438	5	True				
ANR	5696577	ParameterType	int		5696438	0					
ANR	5696578	Identifier	bin		5696438	1					
ANR	5696579	Parameter	bool use_spp	482:42:12307:12318	5696438	6	True				
ANR	5696580	ParameterType	bool		5696438	0					
ANR	5696581	Identifier	use_spp		5696438	1					
ANR	5696582	Parameter	bool rad	482:56:12321:12328	5696438	7	True				
ANR	5696583	ParameterType	bool		5696438	0					
ANR	5696584	Identifier	rad		5696438	1					
ANR	5696585	Parameter	bool hexwords	482:66:12331:12343	5696438	8	True				
ANR	5696586	ParameterType	bool		5696438	0					
ANR	5696587	Identifier	hexwords		5696438	1					
ANR	5696588	Parameter	char * arch	482:81:12346:12355	5696438	9	True				
ANR	5696589	ParameterType	char *		5696438	0					
ANR	5696590	Identifier	arch		5696438	1					
ANR	5696591	CFGEntryNode	ENTRY		5696438		True				
ANR	5696592	CFGExitNode	EXIT		5696438		True				
ANR	5696593	Symbol	ret		5696438						
ANR	5696594	Symbol	NULL		5696438						
ANR	5696595	Symbol	offset		5696438						
ANR	5696596	Symbol	bin		5696438						
ANR	5696597	Symbol	R_SYS_ARCH		5696438						
ANR	5696598	Symbol	print_label		5696438						
ANR	5696599	Symbol	bits		5696438						
ANR	5696600	Symbol	use_spp		5696438						
ANR	5696601	Symbol	rasm_asm		5696438						
ANR	5696602	Symbol	as -> a -> bits		5696438						
ANR	5696603	Symbol	as -> a -> flags		5696438						
ANR	5696604	Symbol	as		5696438						
ANR	5696605	Symbol	buf		5696438						
ANR	5696606	Symbol	as -> a		5696438						
ANR	5696607	Symbol	len		5696438						
ANR	5696608	Symbol	rad		5696438						
ANR	5696609	Symbol	hexwords		5696438						
ANR	5696610	Symbol	arch		5696438						
ANR	5696611	Symbol	* as		5696438						
ANR	5696612	Symbol	* as -> a		5696438						
ANR	5696613	Symbol	* * as		5696438						
ANR	5696614	Function	__load_plugins	501:0:12791:13757							
ANR	5696615	FunctionDef	__load_plugins (RAsmState * as)		5696614	0					
ANR	5696616	CompoundStatement		501:42:12833:13757	5696614	0					
ANR	5696617	IdentifierDeclStatement	"char * tmp = r_sys_getenv ( ""RASM2_NOPLUGINS"" ) ;"	502:1:12836:12880	5696614	0	True				
ANR	5696618	IdentifierDecl	"* tmp = r_sys_getenv ( ""RASM2_NOPLUGINS"" )"		5696614	0					
ANR	5696619	IdentifierDeclType	char *		5696614	0					
ANR	5696620	Identifier	tmp		5696614	1					
ANR	5696621	AssignmentExpression	"* tmp = r_sys_getenv ( ""RASM2_NOPLUGINS"" )"		5696614	2		=			
ANR	5696622	Identifier	tmp		5696614	0					
ANR	5696623	CallExpression	"r_sys_getenv ( ""RASM2_NOPLUGINS"" )"		5696614	1					
ANR	5696624	Callee	r_sys_getenv		5696614	0					
ANR	5696625	Identifier	r_sys_getenv		5696614	0					
ANR	5696626	ArgumentList	"""RASM2_NOPLUGINS"""		5696614	1					
ANR	5696627	Argument	"""RASM2_NOPLUGINS"""		5696614	0					
ANR	5696628	PrimaryExpression	"""RASM2_NOPLUGINS"""		5696614	0					
ANR	5696629	IfStatement	if ( tmp )		5696614	1					
ANR	5696630	Condition	tmp	503:5:12887:12889	5696614	0	True				
ANR	5696631	Identifier	tmp		5696614	0					
ANR	5696632	CompoundStatement		3:10:58:58	5696614	1					
ANR	5696633	ExpressionStatement	free ( tmp )	504:2:12896:12906	5696614	0	True				
ANR	5696634	CallExpression	free ( tmp )		5696614	0					
ANR	5696635	Callee	free		5696614	0					
ANR	5696636	Identifier	free		5696614	0					
ANR	5696637	ArgumentList	tmp		5696614	1					
ANR	5696638	Argument	tmp		5696614	0					
ANR	5696639	Identifier	tmp		5696614	0					
ANR	5696640	ReturnStatement	return ;	505:2:12910:12916	5696614	1	True				
ANR	5696641	ExpressionStatement	"r_lib_add_handler ( as -> l , R_LIB_TYPE_ASM , ""(dis)assembly plugins"" , & __lib_asm_cb , NULL , as )"	507:1:12922:13013	5696614	2	True				
ANR	5696642	CallExpression	"r_lib_add_handler ( as -> l , R_LIB_TYPE_ASM , ""(dis)assembly plugins"" , & __lib_asm_cb , NULL , as )"		5696614	0					
ANR	5696643	Callee	r_lib_add_handler		5696614	0					
ANR	5696644	Identifier	r_lib_add_handler		5696614	0					
ANR	5696645	ArgumentList	as -> l		5696614	1					
ANR	5696646	Argument	as -> l		5696614	0					
ANR	5696647	PtrMemberAccess	as -> l		5696614	0					
ANR	5696648	Identifier	as		5696614	0					
ANR	5696649	Identifier	l		5696614	1					
ANR	5696650	Argument	R_LIB_TYPE_ASM		5696614	1					
ANR	5696651	Identifier	R_LIB_TYPE_ASM		5696614	0					
ANR	5696652	Argument	"""(dis)assembly plugins"""		5696614	2					
ANR	5696653	PrimaryExpression	"""(dis)assembly plugins"""		5696614	0					
ANR	5696654	Argument	& __lib_asm_cb		5696614	3					
ANR	5696655	UnaryOperationExpression	& __lib_asm_cb		5696614	0					
ANR	5696656	UnaryOperator	&		5696614	0					
ANR	5696657	Identifier	__lib_asm_cb		5696614	1					
ANR	5696658	Argument	NULL		5696614	4					
ANR	5696659	Identifier	NULL		5696614	0					
ANR	5696660	Argument	as		5696614	5					
ANR	5696661	Identifier	as		5696614	0					
ANR	5696662	ExpressionStatement	"r_lib_add_handler ( as -> l , R_LIB_TYPE_ANAL , ""analysis/emulation plugins"" , & __lib_anal_cb , NULL , as )"	508:1:13016:13114	5696614	3	True				
ANR	5696663	CallExpression	"r_lib_add_handler ( as -> l , R_LIB_TYPE_ANAL , ""analysis/emulation plugins"" , & __lib_anal_cb , NULL , as )"		5696614	0					
ANR	5696664	Callee	r_lib_add_handler		5696614	0					
ANR	5696665	Identifier	r_lib_add_handler		5696614	0					
ANR	5696666	ArgumentList	as -> l		5696614	1					
ANR	5696667	Argument	as -> l		5696614	0					
ANR	5696668	PtrMemberAccess	as -> l		5696614	0					
ANR	5696669	Identifier	as		5696614	0					
ANR	5696670	Identifier	l		5696614	1					
ANR	5696671	Argument	R_LIB_TYPE_ANAL		5696614	1					
ANR	5696672	Identifier	R_LIB_TYPE_ANAL		5696614	0					
ANR	5696673	Argument	"""analysis/emulation plugins"""		5696614	2					
ANR	5696674	PrimaryExpression	"""analysis/emulation plugins"""		5696614	0					
ANR	5696675	Argument	& __lib_anal_cb		5696614	3					
ANR	5696676	UnaryOperationExpression	& __lib_anal_cb		5696614	0					
ANR	5696677	UnaryOperator	&		5696614	0					
ANR	5696678	Identifier	__lib_anal_cb		5696614	1					
ANR	5696679	Argument	NULL		5696614	4					
ANR	5696680	Identifier	NULL		5696614	0					
ANR	5696681	Argument	as		5696614	5					
ANR	5696682	Identifier	as		5696614	0					
ANR	5696683	IdentifierDeclStatement	char * path = r_sys_getenv ( R_LIB_ENV ) ;	510:1:13118:13155	5696614	4	True				
ANR	5696684	IdentifierDecl	* path = r_sys_getenv ( R_LIB_ENV )		5696614	0					
ANR	5696685	IdentifierDeclType	char *		5696614	0					
ANR	5696686	Identifier	path		5696614	1					
ANR	5696687	AssignmentExpression	* path = r_sys_getenv ( R_LIB_ENV )		5696614	2		=			
ANR	5696688	Identifier	path		5696614	0					
ANR	5696689	CallExpression	r_sys_getenv ( R_LIB_ENV )		5696614	1					
ANR	5696690	Callee	r_sys_getenv		5696614	0					
ANR	5696691	Identifier	r_sys_getenv		5696614	0					
ANR	5696692	ArgumentList	R_LIB_ENV		5696614	1					
ANR	5696693	Argument	R_LIB_ENV		5696614	0					
ANR	5696694	Identifier	R_LIB_ENV		5696614	0					
ANR	5696695	IfStatement	if ( path && * path )		5696614	5					
ANR	5696696	Condition	path && * path	511:5:13162:13174	5696614	0	True				
ANR	5696697	AndExpression	path && * path		5696614	0		&&			
ANR	5696698	Identifier	path		5696614	0					
ANR	5696699	UnaryOperationExpression	* path		5696614	1					
ANR	5696700	UnaryOperator	*		5696614	0					
ANR	5696701	Identifier	path		5696614	1					
ANR	5696702	CompoundStatement		11:20:343:343	5696614	1					
ANR	5696703	ExpressionStatement	"r_lib_opendir ( as -> l , path )"	512:2:13181:13208	5696614	0	True				
ANR	5696704	CallExpression	"r_lib_opendir ( as -> l , path )"		5696614	0					
ANR	5696705	Callee	r_lib_opendir		5696614	0					
ANR	5696706	Identifier	r_lib_opendir		5696614	0					
ANR	5696707	ArgumentList	as -> l		5696614	1					
ANR	5696708	Argument	as -> l		5696614	0					
ANR	5696709	PtrMemberAccess	as -> l		5696614	0					
ANR	5696710	Identifier	as		5696614	0					
ANR	5696711	Identifier	l		5696614	1					
ANR	5696712	Argument	path		5696614	1					
ANR	5696713	Identifier	path		5696614	0					
ANR	5696714	IdentifierDeclStatement	char * homeplugindir = r_str_home ( R2_HOME_PLUGINS ) ;	516:1:13256:13306	5696614	6	True				
ANR	5696715	IdentifierDecl	* homeplugindir = r_str_home ( R2_HOME_PLUGINS )		5696614	0					
ANR	5696716	IdentifierDeclType	char *		5696614	0					
ANR	5696717	Identifier	homeplugindir		5696614	1					
ANR	5696718	AssignmentExpression	* homeplugindir = r_str_home ( R2_HOME_PLUGINS )		5696614	2		=			
ANR	5696719	Identifier	homeplugindir		5696614	0					
ANR	5696720	CallExpression	r_str_home ( R2_HOME_PLUGINS )		5696614	1					
ANR	5696721	Callee	r_str_home		5696614	0					
ANR	5696722	Identifier	r_str_home		5696614	0					
ANR	5696723	ArgumentList	R2_HOME_PLUGINS		5696614	1					
ANR	5696724	Argument	R2_HOME_PLUGINS		5696614	0					
ANR	5696725	Identifier	R2_HOME_PLUGINS		5696614	0					
ANR	5696726	ExpressionStatement	"r_lib_opendir ( as -> l , homeplugindir )"	517:1:13309:13345	5696614	7	True				
ANR	5696727	CallExpression	"r_lib_opendir ( as -> l , homeplugindir )"		5696614	0					
ANR	5696728	Callee	r_lib_opendir		5696614	0					
ANR	5696729	Identifier	r_lib_opendir		5696614	0					
ANR	5696730	ArgumentList	as -> l		5696614	1					
ANR	5696731	Argument	as -> l		5696614	0					
ANR	5696732	PtrMemberAccess	as -> l		5696614	0					
ANR	5696733	Identifier	as		5696614	0					
ANR	5696734	Identifier	l		5696614	1					
ANR	5696735	Argument	homeplugindir		5696614	1					
ANR	5696736	Identifier	homeplugindir		5696614	0					
ANR	5696737	ExpressionStatement	free ( homeplugindir )	518:1:13348:13368	5696614	8	True				
ANR	5696738	CallExpression	free ( homeplugindir )		5696614	0					
ANR	5696739	Callee	free		5696614	0					
ANR	5696740	Identifier	free		5696614	0					
ANR	5696741	ArgumentList	homeplugindir		5696614	1					
ANR	5696742	Argument	homeplugindir		5696614	0					
ANR	5696743	Identifier	homeplugindir		5696614	0					
ANR	5696744	IdentifierDeclStatement	char * plugindir = r_str_r2_prefix ( R2_PLUGINS ) ;	521:1:13415:13461	5696614	9	True				
ANR	5696745	IdentifierDecl	* plugindir = r_str_r2_prefix ( R2_PLUGINS )		5696614	0					
ANR	5696746	IdentifierDeclType	char *		5696614	0					
ANR	5696747	Identifier	plugindir		5696614	1					
ANR	5696748	AssignmentExpression	* plugindir = r_str_r2_prefix ( R2_PLUGINS )		5696614	2		=			
ANR	5696749	Identifier	plugindir		5696614	0					
ANR	5696750	CallExpression	r_str_r2_prefix ( R2_PLUGINS )		5696614	1					
ANR	5696751	Callee	r_str_r2_prefix		5696614	0					
ANR	5696752	Identifier	r_str_r2_prefix		5696614	0					
ANR	5696753	ArgumentList	R2_PLUGINS		5696614	1					
ANR	5696754	Argument	R2_PLUGINS		5696614	0					
ANR	5696755	Identifier	R2_PLUGINS		5696614	0					
ANR	5696756	IdentifierDeclStatement	char * extrasdir = r_str_r2_prefix ( R2_EXTRAS ) ;	522:1:13464:13509	5696614	10	True				
ANR	5696757	IdentifierDecl	* extrasdir = r_str_r2_prefix ( R2_EXTRAS )		5696614	0					
ANR	5696758	IdentifierDeclType	char *		5696614	0					
ANR	5696759	Identifier	extrasdir		5696614	1					
ANR	5696760	AssignmentExpression	* extrasdir = r_str_r2_prefix ( R2_EXTRAS )		5696614	2		=			
ANR	5696761	Identifier	extrasdir		5696614	0					
ANR	5696762	CallExpression	r_str_r2_prefix ( R2_EXTRAS )		5696614	1					
ANR	5696763	Callee	r_str_r2_prefix		5696614	0					
ANR	5696764	Identifier	r_str_r2_prefix		5696614	0					
ANR	5696765	ArgumentList	R2_EXTRAS		5696614	1					
ANR	5696766	Argument	R2_EXTRAS		5696614	0					
ANR	5696767	Identifier	R2_EXTRAS		5696614	0					
ANR	5696768	IdentifierDeclStatement	char * bindingsdir = r_str_r2_prefix ( R2_BINDINGS ) ;	523:1:13512:13561	5696614	11	True				
ANR	5696769	IdentifierDecl	* bindingsdir = r_str_r2_prefix ( R2_BINDINGS )		5696614	0					
ANR	5696770	IdentifierDeclType	char *		5696614	0					
ANR	5696771	Identifier	bindingsdir		5696614	1					
ANR	5696772	AssignmentExpression	* bindingsdir = r_str_r2_prefix ( R2_BINDINGS )		5696614	2		=			
ANR	5696773	Identifier	bindingsdir		5696614	0					
ANR	5696774	CallExpression	r_str_r2_prefix ( R2_BINDINGS )		5696614	1					
ANR	5696775	Callee	r_str_r2_prefix		5696614	0					
ANR	5696776	Identifier	r_str_r2_prefix		5696614	0					
ANR	5696777	ArgumentList	R2_BINDINGS		5696614	1					
ANR	5696778	Argument	R2_BINDINGS		5696614	0					
ANR	5696779	Identifier	R2_BINDINGS		5696614	0					
ANR	5696780	ExpressionStatement	"r_lib_opendir ( as -> l , plugindir )"	524:1:13564:13596	5696614	12	True				
ANR	5696781	CallExpression	"r_lib_opendir ( as -> l , plugindir )"		5696614	0					
ANR	5696782	Callee	r_lib_opendir		5696614	0					
ANR	5696783	Identifier	r_lib_opendir		5696614	0					
ANR	5696784	ArgumentList	as -> l		5696614	1					
ANR	5696785	Argument	as -> l		5696614	0					
ANR	5696786	PtrMemberAccess	as -> l		5696614	0					
ANR	5696787	Identifier	as		5696614	0					
ANR	5696788	Identifier	l		5696614	1					
ANR	5696789	Argument	plugindir		5696614	1					
ANR	5696790	Identifier	plugindir		5696614	0					
ANR	5696791	ExpressionStatement	"r_lib_opendir ( as -> l , extrasdir )"	525:1:13599:13631	5696614	13	True				
ANR	5696792	CallExpression	"r_lib_opendir ( as -> l , extrasdir )"		5696614	0					
ANR	5696793	Callee	r_lib_opendir		5696614	0					
ANR	5696794	Identifier	r_lib_opendir		5696614	0					
ANR	5696795	ArgumentList	as -> l		5696614	1					
ANR	5696796	Argument	as -> l		5696614	0					
ANR	5696797	PtrMemberAccess	as -> l		5696614	0					
ANR	5696798	Identifier	as		5696614	0					
ANR	5696799	Identifier	l		5696614	1					
ANR	5696800	Argument	extrasdir		5696614	1					
ANR	5696801	Identifier	extrasdir		5696614	0					
ANR	5696802	ExpressionStatement	"r_lib_opendir ( as -> l , bindingsdir )"	526:1:13634:13668	5696614	14	True				
ANR	5696803	CallExpression	"r_lib_opendir ( as -> l , bindingsdir )"		5696614	0					
ANR	5696804	Callee	r_lib_opendir		5696614	0					
ANR	5696805	Identifier	r_lib_opendir		5696614	0					
ANR	5696806	ArgumentList	as -> l		5696614	1					
ANR	5696807	Argument	as -> l		5696614	0					
ANR	5696808	PtrMemberAccess	as -> l		5696614	0					
ANR	5696809	Identifier	as		5696614	0					
ANR	5696810	Identifier	l		5696614	1					
ANR	5696811	Argument	bindingsdir		5696614	1					
ANR	5696812	Identifier	bindingsdir		5696614	0					
ANR	5696813	ExpressionStatement	free ( plugindir )	527:1:13671:13687	5696614	15	True				
ANR	5696814	CallExpression	free ( plugindir )		5696614	0					
ANR	5696815	Callee	free		5696614	0					
ANR	5696816	Identifier	free		5696614	0					
ANR	5696817	ArgumentList	plugindir		5696614	1					
ANR	5696818	Argument	plugindir		5696614	0					
ANR	5696819	Identifier	plugindir		5696614	0					
ANR	5696820	ExpressionStatement	free ( extrasdir )	528:1:13690:13706	5696614	16	True				
ANR	5696821	CallExpression	free ( extrasdir )		5696614	0					
ANR	5696822	Callee	free		5696614	0					
ANR	5696823	Identifier	free		5696614	0					
ANR	5696824	ArgumentList	extrasdir		5696614	1					
ANR	5696825	Argument	extrasdir		5696614	0					
ANR	5696826	Identifier	extrasdir		5696614	0					
ANR	5696827	ExpressionStatement	free ( bindingsdir )	529:1:13709:13727	5696614	17	True				
ANR	5696828	CallExpression	free ( bindingsdir )		5696614	0					
ANR	5696829	Callee	free		5696614	0					
ANR	5696830	Identifier	free		5696614	0					
ANR	5696831	ArgumentList	bindingsdir		5696614	1					
ANR	5696832	Argument	bindingsdir		5696614	0					
ANR	5696833	Identifier	bindingsdir		5696614	0					
ANR	5696834	ExpressionStatement	free ( tmp )	531:1:13731:13741	5696614	18	True				
ANR	5696835	CallExpression	free ( tmp )		5696614	0					
ANR	5696836	Callee	free		5696614	0					
ANR	5696837	Identifier	free		5696614	0					
ANR	5696838	ArgumentList	tmp		5696614	1					
ANR	5696839	Argument	tmp		5696614	0					
ANR	5696840	Identifier	tmp		5696614	0					
ANR	5696841	ExpressionStatement	free ( path )	532:1:13744:13755	5696614	19	True				
ANR	5696842	CallExpression	free ( path )		5696614	0					
ANR	5696843	Callee	free		5696614	0					
ANR	5696844	Identifier	free		5696614	0					
ANR	5696845	ArgumentList	path		5696614	1					
ANR	5696846	Argument	path		5696614	0					
ANR	5696847	Identifier	path		5696614	0					
ANR	5696848	ReturnType	static void		5696614	1					
ANR	5696849	Identifier	__load_plugins		5696614	2					
ANR	5696850	ParameterList	RAsmState * as		5696614	3					
ANR	5696851	Parameter	RAsmState * as	501:27:12818:12830	5696614	0	True				
ANR	5696852	ParameterType	RAsmState *		5696614	0					
ANR	5696853	Identifier	as		5696614	1					
ANR	5696854	CFGEntryNode	ENTRY		5696614		True				
ANR	5696855	CFGExitNode	EXIT		5696614		True				
ANR	5696856	Symbol	R2_BINDINGS		5696614						
ANR	5696857	Symbol	& __lib_asm_cb		5696614						
ANR	5696858	Symbol	NULL		5696614						
ANR	5696859	Symbol	R2_PLUGINS		5696614						
ANR	5696860	Symbol	r_sys_getenv		5696614						
ANR	5696861	Symbol	R_LIB_TYPE_ASM		5696614						
ANR	5696862	Symbol	path		5696614						
ANR	5696863	Symbol	as		5696614						
ANR	5696864	Symbol	R_LIB_ENV		5696614						
ANR	5696865	Symbol	R2_HOME_PLUGINS		5696614						
ANR	5696866	Symbol	bindingsdir		5696614						
ANR	5696867	Symbol	R_LIB_TYPE_ANAL		5696614						
ANR	5696868	Symbol	tmp		5696614						
ANR	5696869	Symbol	R2_EXTRAS		5696614						
ANR	5696870	Symbol	as -> l		5696614						
ANR	5696871	Symbol	* path		5696614						
ANR	5696872	Symbol	r_str_r2_prefix		5696614						
ANR	5696873	Symbol	homeplugindir		5696614						
ANR	5696874	Symbol	* as		5696614						
ANR	5696875	Symbol	& __lib_anal_cb		5696614						
ANR	5696876	Symbol	plugindir		5696614						
ANR	5696877	Symbol	r_str_home		5696614						
ANR	5696878	Symbol	extrasdir		5696614						
ANR	5696879	Function	r_main_rasm2	535:0:13760:21434							
ANR	5696880	FunctionDef	"r_main_rasm2 (int argc , char * argv [ ])"		5696879	0					
ANR	5696881	CompoundStatement		535:47:13807:21434	5696879	0					
ANR	5696882	IdentifierDeclStatement	"const char * env_arch = r_sys_getenv ( ""RASM2_ARCH"" ) ;"	536:1:13810:13860	5696879	0	True				
ANR	5696883	IdentifierDecl	"* env_arch = r_sys_getenv ( ""RASM2_ARCH"" )"		5696879	0					
ANR	5696884	IdentifierDeclType	const char *		5696879	0					
ANR	5696885	Identifier	env_arch		5696879	1					
ANR	5696886	AssignmentExpression	"* env_arch = r_sys_getenv ( ""RASM2_ARCH"" )"		5696879	2		=			
ANR	5696887	Identifier	env_arch		5696879	0					
ANR	5696888	CallExpression	"r_sys_getenv ( ""RASM2_ARCH"" )"		5696879	1					
ANR	5696889	Callee	r_sys_getenv		5696879	0					
ANR	5696890	Identifier	r_sys_getenv		5696879	0					
ANR	5696891	ArgumentList	"""RASM2_ARCH"""		5696879	1					
ANR	5696892	Argument	"""RASM2_ARCH"""		5696879	0					
ANR	5696893	PrimaryExpression	"""RASM2_ARCH"""		5696879	0					
ANR	5696894	IdentifierDeclStatement	"const char * env_bits = r_sys_getenv ( ""RASM2_BITS"" ) ;"	537:1:13863:13913	5696879	1	True				
ANR	5696895	IdentifierDecl	"* env_bits = r_sys_getenv ( ""RASM2_BITS"" )"		5696879	0					
ANR	5696896	IdentifierDeclType	const char *		5696879	0					
ANR	5696897	Identifier	env_bits		5696879	1					
ANR	5696898	AssignmentExpression	"* env_bits = r_sys_getenv ( ""RASM2_BITS"" )"		5696879	2		=			
ANR	5696899	Identifier	env_bits		5696879	0					
ANR	5696900	CallExpression	"r_sys_getenv ( ""RASM2_BITS"" )"		5696879	1					
ANR	5696901	Callee	r_sys_getenv		5696879	0					
ANR	5696902	Identifier	r_sys_getenv		5696879	0					
ANR	5696903	ArgumentList	"""RASM2_BITS"""		5696879	1					
ANR	5696904	Argument	"""RASM2_BITS"""		5696879	0					
ANR	5696905	PrimaryExpression	"""RASM2_BITS"""		5696879	0					
ANR	5696906	IdentifierDeclStatement	"char * arch = NULL , * file = NULL , * filters = NULL , * kernel = NULL , * cpu = NULL ;"	538:1:13916:13993	5696879	2	True				
ANR	5696907	IdentifierDecl	* arch = NULL		5696879	0					
ANR	5696908	IdentifierDeclType	char *		5696879	0					
ANR	5696909	Identifier	arch		5696879	1					
ANR	5696910	AssignmentExpression	* arch = NULL		5696879	2		=			
ANR	5696911	Identifier	NULL		5696879	0					
ANR	5696912	Identifier	NULL		5696879	1					
ANR	5696913	IdentifierDecl	* file = NULL		5696879	1					
ANR	5696914	IdentifierDeclType	char *		5696879	0					
ANR	5696915	Identifier	file		5696879	1					
ANR	5696916	AssignmentExpression	* file = NULL		5696879	2		=			
ANR	5696917	Identifier	NULL		5696879	0					
ANR	5696918	Identifier	NULL		5696879	1					
ANR	5696919	IdentifierDecl	* filters = NULL		5696879	2					
ANR	5696920	IdentifierDeclType	char *		5696879	0					
ANR	5696921	Identifier	filters		5696879	1					
ANR	5696922	AssignmentExpression	* filters = NULL		5696879	2		=			
ANR	5696923	Identifier	NULL		5696879	0					
ANR	5696924	Identifier	NULL		5696879	1					
ANR	5696925	IdentifierDecl	* kernel = NULL		5696879	3					
ANR	5696926	IdentifierDeclType	char *		5696879	0					
ANR	5696927	Identifier	kernel		5696879	1					
ANR	5696928	AssignmentExpression	* kernel = NULL		5696879	2		=			
ANR	5696929	Identifier	NULL		5696879	0					
ANR	5696930	Identifier	NULL		5696879	1					
ANR	5696931	IdentifierDecl	* cpu = NULL		5696879	4					
ANR	5696932	IdentifierDeclType	char *		5696879	0					
ANR	5696933	Identifier	cpu		5696879	1					
ANR	5696934	AssignmentExpression	* cpu = NULL		5696879	2		=			
ANR	5696935	Identifier	NULL		5696879	0					
ANR	5696936	Identifier	NULL		5696879	1					
ANR	5696937	IdentifierDeclStatement	bool isbig = false ;	539:1:13996:14014	5696879	3	True				
ANR	5696938	IdentifierDecl	isbig = false		5696879	0					
ANR	5696939	IdentifierDeclType	bool		5696879	0					
ANR	5696940	Identifier	isbig		5696879	1					
ANR	5696941	AssignmentExpression	isbig = false		5696879	2		=			
ANR	5696942	Identifier	false		5696879	0					
ANR	5696943	Identifier	false		5696879	1					
ANR	5696944	IdentifierDeclStatement	bool rad = false ;	540:1:14017:14033	5696879	4	True				
ANR	5696945	IdentifierDecl	rad = false		5696879	0					
ANR	5696946	IdentifierDeclType	bool		5696879	0					
ANR	5696947	Identifier	rad		5696879	1					
ANR	5696948	AssignmentExpression	rad = false		5696879	2		=			
ANR	5696949	Identifier	false		5696879	0					
ANR	5696950	Identifier	false		5696879	1					
ANR	5696951	IdentifierDeclStatement	bool use_spp = false ;	541:1:14036:14056	5696879	5	True				
ANR	5696952	IdentifierDecl	use_spp = false		5696879	0					
ANR	5696953	IdentifierDeclType	bool		5696879	0					
ANR	5696954	Identifier	use_spp		5696879	1					
ANR	5696955	AssignmentExpression	use_spp = false		5696879	2		=			
ANR	5696956	Identifier	false		5696879	0					
ANR	5696957	Identifier	false		5696879	1					
ANR	5696958	IdentifierDeclStatement	bool hexwords = false ;	542:1:14059:14080	5696879	6	True				
ANR	5696959	IdentifierDecl	hexwords = false		5696879	0					
ANR	5696960	IdentifierDeclType	bool		5696879	0					
ANR	5696961	Identifier	hexwords		5696879	1					
ANR	5696962	AssignmentExpression	hexwords = false		5696879	2		=			
ANR	5696963	Identifier	false		5696879	0					
ANR	5696964	Identifier	false		5696879	1					
ANR	5696965	IdentifierDeclStatement	ut64 offset = 0 ;	543:1:14083:14098	5696879	7	True				
ANR	5696966	IdentifierDecl	offset = 0		5696879	0					
ANR	5696967	IdentifierDeclType	ut64		5696879	0					
ANR	5696968	Identifier	offset		5696879	1					
ANR	5696969	AssignmentExpression	offset = 0		5696879	2		=			
ANR	5696970	Identifier	offset		5696879	0					
ANR	5696971	PrimaryExpression	0		5696879	1					
ANR	5696972	IdentifierDeclStatement	"int fd = - 1 , dis = 0 , ascii = 0 , bin = 0 , ret = 0 , bits = 32 , c , whatsop = 0 ;"	544:1:14101:14177	5696879	8	True				
ANR	5696973	IdentifierDecl	fd = - 1		5696879	0					
ANR	5696974	IdentifierDeclType	int		5696879	0					
ANR	5696975	Identifier	fd		5696879	1					
ANR	5696976	AssignmentExpression	fd = - 1		5696879	2		=			
ANR	5696977	Identifier	fd		5696879	0					
ANR	5696978	UnaryOperationExpression	- 1		5696879	1					
ANR	5696979	UnaryOperator	-		5696879	0					
ANR	5696980	PrimaryExpression	1		5696879	1					
ANR	5696981	IdentifierDecl	dis = 0		5696879	1					
ANR	5696982	IdentifierDeclType	int		5696879	0					
ANR	5696983	Identifier	dis		5696879	1					
ANR	5696984	AssignmentExpression	dis = 0		5696879	2		=			
ANR	5696985	Identifier	dis		5696879	0					
ANR	5696986	PrimaryExpression	0		5696879	1					
ANR	5696987	IdentifierDecl	ascii = 0		5696879	2					
ANR	5696988	IdentifierDeclType	int		5696879	0					
ANR	5696989	Identifier	ascii		5696879	1					
ANR	5696990	AssignmentExpression	ascii = 0		5696879	2		=			
ANR	5696991	Identifier	ascii		5696879	0					
ANR	5696992	PrimaryExpression	0		5696879	1					
ANR	5696993	IdentifierDecl	bin = 0		5696879	3					
ANR	5696994	IdentifierDeclType	int		5696879	0					
ANR	5696995	Identifier	bin		5696879	1					
ANR	5696996	AssignmentExpression	bin = 0		5696879	2		=			
ANR	5696997	Identifier	bin		5696879	0					
ANR	5696998	PrimaryExpression	0		5696879	1					
ANR	5696999	IdentifierDecl	ret = 0		5696879	4					
ANR	5697000	IdentifierDeclType	int		5696879	0					
ANR	5697001	Identifier	ret		5696879	1					
ANR	5697002	AssignmentExpression	ret = 0		5696879	2		=			
ANR	5697003	Identifier	ret		5696879	0					
ANR	5697004	PrimaryExpression	0		5696879	1					
ANR	5697005	IdentifierDecl	bits = 32		5696879	5					
ANR	5697006	IdentifierDeclType	int		5696879	0					
ANR	5697007	Identifier	bits		5696879	1					
ANR	5697008	AssignmentExpression	bits = 32		5696879	2		=			
ANR	5697009	Identifier	bits		5696879	0					
ANR	5697010	PrimaryExpression	32		5696879	1					
ANR	5697011	IdentifierDecl	c		5696879	6					
ANR	5697012	IdentifierDeclType	int		5696879	0					
ANR	5697013	Identifier	c		5696879	1					
ANR	5697014	IdentifierDecl	whatsop = 0		5696879	7					
ANR	5697015	IdentifierDeclType	int		5696879	0					
ANR	5697016	Identifier	whatsop		5696879	1					
ANR	5697017	AssignmentExpression	whatsop = 0		5696879	2		=			
ANR	5697018	Identifier	whatsop		5696879	0					
ANR	5697019	PrimaryExpression	0		5696879	1					
ANR	5697020	IdentifierDeclStatement	int help = 0 ;	545:1:14180:14192	5696879	9	True				
ANR	5697021	IdentifierDecl	help = 0		5696879	0					
ANR	5697022	IdentifierDeclType	int		5696879	0					
ANR	5697023	Identifier	help		5696879	1					
ANR	5697024	AssignmentExpression	help = 0		5696879	2		=			
ANR	5697025	Identifier	help		5696879	0					
ANR	5697026	PrimaryExpression	0		5696879	1					
ANR	5697027	IdentifierDeclStatement	"ut64 len = 0 , idx = 0 , skip = 0 ;"	546:1:14195:14226	5696879	10	True				
ANR	5697028	IdentifierDecl	len = 0		5696879	0					
ANR	5697029	IdentifierDeclType	ut64		5696879	0					
ANR	5697030	Identifier	len		5696879	1					
ANR	5697031	AssignmentExpression	len = 0		5696879	2		=			
ANR	5697032	Identifier	len		5696879	0					
ANR	5697033	PrimaryExpression	0		5696879	1					
ANR	5697034	IdentifierDecl	idx = 0		5696879	1					
ANR	5697035	IdentifierDeclType	ut64		5696879	0					
ANR	5697036	Identifier	idx		5696879	1					
ANR	5697037	AssignmentExpression	idx = 0		5696879	2		=			
ANR	5697038	Identifier	idx		5696879	0					
ANR	5697039	PrimaryExpression	0		5696879	1					
ANR	5697040	IdentifierDecl	skip = 0		5696879	2					
ANR	5697041	IdentifierDeclType	ut64		5696879	0					
ANR	5697042	Identifier	skip		5696879	1					
ANR	5697043	AssignmentExpression	skip = 0		5696879	2		=			
ANR	5697044	Identifier	skip		5696879	0					
ANR	5697045	PrimaryExpression	0		5696879	1					
ANR	5697046	IdentifierDeclStatement	bool analinfo = false ;	547:1:14229:14250	5696879	11	True				
ANR	5697047	IdentifierDecl	analinfo = false		5696879	0					
ANR	5697048	IdentifierDeclType	bool		5696879	0					
ANR	5697049	Identifier	analinfo		5696879	1					
ANR	5697050	AssignmentExpression	analinfo = false		5696879	2		=			
ANR	5697051	Identifier	false		5696879	0					
ANR	5697052	Identifier	false		5696879	1					
ANR	5697053	IfStatement	if ( argc < 2 )		5696879	12					
ANR	5697054	Condition	argc < 2	549:5:14258:14265	5696879	0	True				
ANR	5697055	RelationalExpression	argc < 2		5696879	0		<			
ANR	5697056	Identifier	argc		5696879	0					
ANR	5697057	PrimaryExpression	2		5696879	1					
ANR	5697058	CompoundStatement		15:15:460:460	5696879	1					
ANR	5697059	ReturnStatement	return rasm_show_help ( 1 ) ;	550:2:14272:14297	5696879	0	True				
ANR	5697060	CallExpression	rasm_show_help ( 1 )		5696879	0					
ANR	5697061	Callee	rasm_show_help		5696879	0					
ANR	5697062	Identifier	rasm_show_help		5696879	0					
ANR	5697063	ArgumentList	1		5696879	1					
ANR	5697064	Argument	1		5696879	0					
ANR	5697065	PrimaryExpression	1		5696879	0					
ANR	5697066	IdentifierDeclStatement	RAsmState * as = __as_new ( ) ;	553:1:14304:14331	5696879	13	True				
ANR	5697067	IdentifierDecl	* as = __as_new ( )		5696879	0					
ANR	5697068	IdentifierDeclType	RAsmState *		5696879	0					
ANR	5697069	Identifier	as		5696879	1					
ANR	5697070	AssignmentExpression	* as = __as_new ( )		5696879	2		=			
ANR	5697071	Identifier	as		5696879	0					
ANR	5697072	CallExpression	__as_new ( )		5696879	1					
ANR	5697073	Callee	__as_new		5696879	0					
ANR	5697074	Identifier	__as_new		5696879	0					
ANR	5697075	ArgumentList			5696879	1					
ANR	5697076	IdentifierDeclStatement	"char * r2arch = r_sys_getenv ( ""R2_ARCH"" ) ;"	556:1:14358:14397	5696879	14	True				
ANR	5697077	IdentifierDecl	"* r2arch = r_sys_getenv ( ""R2_ARCH"" )"		5696879	0					
ANR	5697078	IdentifierDeclType	char *		5696879	0					
ANR	5697079	Identifier	r2arch		5696879	1					
ANR	5697080	AssignmentExpression	"* r2arch = r_sys_getenv ( ""R2_ARCH"" )"		5696879	2		=			
ANR	5697081	Identifier	r2arch		5696879	0					
ANR	5697082	CallExpression	"r_sys_getenv ( ""R2_ARCH"" )"		5696879	1					
ANR	5697083	Callee	r_sys_getenv		5696879	0					
ANR	5697084	Identifier	r_sys_getenv		5696879	0					
ANR	5697085	ArgumentList	"""R2_ARCH"""		5696879	1					
ANR	5697086	Argument	"""R2_ARCH"""		5696879	0					
ANR	5697087	PrimaryExpression	"""R2_ARCH"""		5696879	0					
ANR	5697088	IfStatement	if ( r2arch )		5696879	15					
ANR	5697089	Condition	r2arch	557:5:14404:14409	5696879	0	True				
ANR	5697090	Identifier	r2arch		5696879	0					
ANR	5697091	CompoundStatement		23:13:604:604	5696879	1					
ANR	5697092	ExpressionStatement	arch = r2arch	558:2:14416:14429	5696879	0	True				
ANR	5697093	AssignmentExpression	arch = r2arch		5696879	0		=			
ANR	5697094	Identifier	arch		5696879	0					
ANR	5697095	Identifier	r2arch		5696879	1					
ANR	5697096	IdentifierDeclStatement	"char * r2bits = r_sys_getenv ( ""R2_BITS"" ) ;"	561:1:14436:14475	5696879	16	True				
ANR	5697097	IdentifierDecl	"* r2bits = r_sys_getenv ( ""R2_BITS"" )"		5696879	0					
ANR	5697098	IdentifierDeclType	char *		5696879	0					
ANR	5697099	Identifier	r2bits		5696879	1					
ANR	5697100	AssignmentExpression	"* r2bits = r_sys_getenv ( ""R2_BITS"" )"		5696879	2		=			
ANR	5697101	Identifier	r2bits		5696879	0					
ANR	5697102	CallExpression	"r_sys_getenv ( ""R2_BITS"" )"		5696879	1					
ANR	5697103	Callee	r_sys_getenv		5696879	0					
ANR	5697104	Identifier	r_sys_getenv		5696879	0					
ANR	5697105	ArgumentList	"""R2_BITS"""		5696879	1					
ANR	5697106	Argument	"""R2_BITS"""		5696879	0					
ANR	5697107	PrimaryExpression	"""R2_BITS"""		5696879	0					
ANR	5697108	IfStatement	if ( r2bits )		5696879	17					
ANR	5697109	Condition	r2bits	562:5:14482:14487	5696879	0	True				
ANR	5697110	Identifier	r2bits		5696879	0					
ANR	5697111	CompoundStatement		28:13:682:682	5696879	1					
ANR	5697112	ExpressionStatement	"bits = r_num_math ( NULL , r2bits )"	563:2:14494:14526	5696879	0	True				
ANR	5697113	AssignmentExpression	"bits = r_num_math ( NULL , r2bits )"		5696879	0		=			
ANR	5697114	Identifier	bits		5696879	0					
ANR	5697115	CallExpression	"r_num_math ( NULL , r2bits )"		5696879	1					
ANR	5697116	Callee	r_num_math		5696879	0					
ANR	5697117	Identifier	r_num_math		5696879	0					
ANR	5697118	ArgumentList	NULL		5696879	1					
ANR	5697119	Argument	NULL		5696879	0					
ANR	5697120	Identifier	NULL		5696879	0					
ANR	5697121	Argument	r2bits		5696879	1					
ANR	5697122	Identifier	r2bits		5696879	0					
ANR	5697123	ExpressionStatement	free ( r2bits )	564:2:14530:14543	5696879	1	True				
ANR	5697124	CallExpression	free ( r2bits )		5696879	0					
ANR	5697125	Callee	free		5696879	0					
ANR	5697126	Identifier	free		5696879	0					
ANR	5697127	ArgumentList	r2bits		5696879	1					
ANR	5697128	Argument	r2bits		5696879	0					
ANR	5697129	Identifier	r2bits		5696879	0					
ANR	5697130	WhileStatement	"while ( ( c = r_getopt ( argc , argv , ""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"" ) ) != - 1 )"		5696879	18					
ANR	5697131	Condition	"( c = r_getopt ( argc , argv , ""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"" ) ) != - 1"	567:8:14557:14633	5696879	0	True				
ANR	5697132	EqualityExpression	"( c = r_getopt ( argc , argv , ""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"" ) ) != - 1"		5696879	0		!=			
ANR	5697133	AssignmentExpression	"c = r_getopt ( argc , argv , ""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"" )"		5696879	0		=			
ANR	5697134	Identifier	c		5696879	0					
ANR	5697135	CallExpression	"r_getopt ( argc , argv , ""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"" )"		5696879	1					
ANR	5697136	Callee	r_getopt		5696879	0					
ANR	5697137	Identifier	r_getopt		5696879	0					
ANR	5697138	ArgumentList	argc		5696879	1					
ANR	5697139	Argument	argc		5696879	0					
ANR	5697140	Identifier	argc		5696879	0					
ANR	5697141	Argument	argv		5696879	1					
ANR	5697142	Identifier	argv		5696879	0					
ANR	5697143	Argument	"""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"""		5696879	2					
ANR	5697144	PrimaryExpression	"""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"""		5696879	0					
ANR	5697145	UnaryOperationExpression	- 1		5696879	1					
ANR	5697146	UnaryOperator	-		5696879	0					
ANR	5697147	PrimaryExpression	1		5696879	1					
ANR	5697148	CompoundStatement		33:87:828:828	5696879	1					
ANR	5697149	SwitchStatement	switch ( c )		5696879	0					
ANR	5697150	Condition	c	568:10:14648:14648	5696879	0	True				
ANR	5697151	Identifier	c		5696879	0					
ANR	5697152	CompoundStatement		34:13:843:843	5696879	1					
ANR	5697153	Label	case 'a' :	569:2:14655:14663	5696879	0	True				
ANR	5697154	ExpressionStatement	arch = r_optarg	570:3:14668:14683	5696879	1	True				
ANR	5697155	AssignmentExpression	arch = r_optarg		5696879	0		=			
ANR	5697156	Identifier	arch		5696879	0					
ANR	5697157	Identifier	r_optarg		5696879	1					
ANR	5697158	BreakStatement	break ;	571:3:14688:14693	5696879	2	True				
ANR	5697159	Label	case 'A' :	572:2:14697:14705	5696879	3	True				
ANR	5697160	ExpressionStatement	analinfo = true	573:3:14710:14725	5696879	4	True				
ANR	5697161	AssignmentExpression	analinfo = true		5696879	0		=			
ANR	5697162	Identifier	analinfo		5696879	0					
ANR	5697163	Identifier	true		5696879	1					
ANR	5697164	BreakStatement	break ;	574:3:14730:14735	5696879	5	True				
ANR	5697165	Label	case 'b' :	575:2:14739:14747	5696879	6	True				
ANR	5697166	ExpressionStatement	"bits = r_num_math ( NULL , r_optarg )"	576:3:14752:14786	5696879	7	True				
ANR	5697167	AssignmentExpression	"bits = r_num_math ( NULL , r_optarg )"		5696879	0		=			
ANR	5697168	Identifier	bits		5696879	0					
ANR	5697169	CallExpression	"r_num_math ( NULL , r_optarg )"		5696879	1					
ANR	5697170	Callee	r_num_math		5696879	0					
ANR	5697171	Identifier	r_num_math		5696879	0					
ANR	5697172	ArgumentList	NULL		5696879	1					
ANR	5697173	Argument	NULL		5696879	0					
ANR	5697174	Identifier	NULL		5696879	0					
ANR	5697175	Argument	r_optarg		5696879	1					
ANR	5697176	Identifier	r_optarg		5696879	0					
ANR	5697177	BreakStatement	break ;	577:3:14791:14796	5696879	8	True				
ANR	5697178	Label	case 'B' :	578:2:14800:14808	5696879	9	True				
ANR	5697179	ExpressionStatement	bin = 1	579:3:14813:14820	5696879	10	True				
ANR	5697180	AssignmentExpression	bin = 1		5696879	0		=			
ANR	5697181	Identifier	bin		5696879	0					
ANR	5697182	PrimaryExpression	1		5696879	1					
ANR	5697183	BreakStatement	break ;	580:3:14825:14830	5696879	11	True				
ANR	5697184	Label	case 'c' :	581:2:14834:14842	5696879	12	True				
ANR	5697185	ExpressionStatement	cpu = r_optarg	582:3:14847:14861	5696879	13	True				
ANR	5697186	AssignmentExpression	cpu = r_optarg		5696879	0		=			
ANR	5697187	Identifier	cpu		5696879	0					
ANR	5697188	Identifier	r_optarg		5696879	1					
ANR	5697189	BreakStatement	break ;	583:3:14866:14871	5696879	14	True				
ANR	5697190	Label	case 'C' :	584:2:14875:14883	5696879	15	True				
ANR	5697191	ExpressionStatement	as -> coutput = true	585:3:14888:14906	5696879	16	True				
ANR	5697192	AssignmentExpression	as -> coutput = true		5696879	0		=			
ANR	5697193	PtrMemberAccess	as -> coutput		5696879	0					
ANR	5697194	Identifier	as		5696879	0					
ANR	5697195	Identifier	coutput		5696879	1					
ANR	5697196	Identifier	true		5696879	1					
ANR	5697197	BreakStatement	break ;	586:3:14911:14916	5696879	17	True				
ANR	5697198	Label	case 'd' :	587:2:14920:14928	5696879	18	True				
ANR	5697199	ExpressionStatement	dis = 1	588:3:14933:14940	5696879	19	True				
ANR	5697200	AssignmentExpression	dis = 1		5696879	0		=			
ANR	5697201	Identifier	dis		5696879	0					
ANR	5697202	PrimaryExpression	1		5696879	1					
ANR	5697203	BreakStatement	break ;	589:3:14945:14950	5696879	20	True				
ANR	5697204	Label	case 'D' :	590:2:14954:14962	5696879	21	True				
ANR	5697205	ExpressionStatement	dis = 2	591:3:14967:14974	5696879	22	True				
ANR	5697206	AssignmentExpression	dis = 2		5696879	0		=			
ANR	5697207	Identifier	dis		5696879	0					
ANR	5697208	PrimaryExpression	2		5696879	1					
ANR	5697209	BreakStatement	break ;	592:3:14979:14984	5696879	23	True				
ANR	5697210	Label	case 'e' :	593:2:14988:14996	5696879	24	True				
ANR	5697211	ExpressionStatement	isbig = true	594:3:15001:15013	5696879	25	True				
ANR	5697212	AssignmentExpression	isbig = true		5696879	0		=			
ANR	5697213	Identifier	isbig		5696879	0					
ANR	5697214	Identifier	true		5696879	1					
ANR	5697215	BreakStatement	break ;	595:3:15018:15023	5696879	26	True				
ANR	5697216	Label	case 'E' :	596:2:15027:15035	5696879	27	True				
ANR	5697217	ExpressionStatement	dis = 3	597:3:15040:15047	5696879	28	True				
ANR	5697218	AssignmentExpression	dis = 3		5696879	0		=			
ANR	5697219	Identifier	dis		5696879	0					
ANR	5697220	PrimaryExpression	3		5696879	1					
ANR	5697221	BreakStatement	break ;	598:3:15052:15057	5696879	29	True				
ANR	5697222	Label	case 'f' :	599:2:15061:15069	5696879	30	True				
ANR	5697223	ExpressionStatement	file = r_optarg	600:3:15074:15089	5696879	31	True				
ANR	5697224	AssignmentExpression	file = r_optarg		5696879	0		=			
ANR	5697225	Identifier	file		5696879	0					
ANR	5697226	Identifier	r_optarg		5696879	1					
ANR	5697227	BreakStatement	break ;	601:3:15094:15099	5696879	32	True				
ANR	5697228	Label	case 'F' :	602:2:15103:15111	5696879	33	True				
ANR	5697229	ExpressionStatement	filters = r_optarg	603:3:15116:15134	5696879	34	True				
ANR	5697230	AssignmentExpression	filters = r_optarg		5696879	0		=			
ANR	5697231	Identifier	filters		5696879	0					
ANR	5697232	Identifier	r_optarg		5696879	1					
ANR	5697233	BreakStatement	break ;	604:3:15139:15144	5696879	35	True				
ANR	5697234	Label	case 'h' :	605:2:15148:15156	5696879	36	True				
ANR	5697235	ExpressionStatement	help ++	606:3:15161:15167	5696879	37	True				
ANR	5697236	PostIncDecOperationExpression	help ++		5696879	0					
ANR	5697237	Identifier	help		5696879	0					
ANR	5697238	IncDec	++		5696879	1					
ANR	5697239	Label	case 'i' :	607:2:15171:15179	5696879	38	True				
ANR	5697240	ExpressionStatement	"skip = r_num_math ( NULL , r_optarg )"	608:3:15184:15218	5696879	39	True				
ANR	5697241	AssignmentExpression	"skip = r_num_math ( NULL , r_optarg )"		5696879	0		=			
ANR	5697242	Identifier	skip		5696879	0					
ANR	5697243	CallExpression	"r_num_math ( NULL , r_optarg )"		5696879	1					
ANR	5697244	Callee	r_num_math		5696879	0					
ANR	5697245	Identifier	r_num_math		5696879	0					
ANR	5697246	ArgumentList	NULL		5696879	1					
ANR	5697247	Argument	NULL		5696879	0					
ANR	5697248	Identifier	NULL		5696879	0					
ANR	5697249	Argument	r_optarg		5696879	1					
ANR	5697250	Identifier	r_optarg		5696879	0					
ANR	5697251	BreakStatement	break ;	609:3:15223:15228	5696879	40	True				
ANR	5697252	Label	case 'j' :	610:2:15232:15240	5696879	41	True				
ANR	5697253	ExpressionStatement	as -> json = true	611:3:15245:15260	5696879	42	True				
ANR	5697254	AssignmentExpression	as -> json = true		5696879	0		=			
ANR	5697255	PtrMemberAccess	as -> json		5696879	0					
ANR	5697256	Identifier	as		5696879	0					
ANR	5697257	Identifier	json		5696879	1					
ANR	5697258	Identifier	true		5696879	1					
ANR	5697259	BreakStatement	break ;	612:3:15265:15270	5696879	43	True				
ANR	5697260	Label	case 'k' :	613:2:15274:15282	5696879	44	True				
ANR	5697261	ExpressionStatement	kernel = r_optarg	614:3:15287:15304	5696879	45	True				
ANR	5697262	AssignmentExpression	kernel = r_optarg		5696879	0		=			
ANR	5697263	Identifier	kernel		5696879	0					
ANR	5697264	Identifier	r_optarg		5696879	1					
ANR	5697265	BreakStatement	break ;	615:3:15309:15314	5696879	46	True				
ANR	5697266	Label	case 'l' :	616:2:15318:15326	5696879	47	True				
ANR	5697267	ExpressionStatement	"len = r_num_math ( NULL , r_optarg )"	617:3:15331:15364	5696879	48	True				
ANR	5697268	AssignmentExpression	"len = r_num_math ( NULL , r_optarg )"		5696879	0		=			
ANR	5697269	Identifier	len		5696879	0					
ANR	5697270	CallExpression	"r_num_math ( NULL , r_optarg )"		5696879	1					
ANR	5697271	Callee	r_num_math		5696879	0					
ANR	5697272	Identifier	r_num_math		5696879	0					
ANR	5697273	ArgumentList	NULL		5696879	1					
ANR	5697274	Argument	NULL		5696879	0					
ANR	5697275	Identifier	NULL		5696879	0					
ANR	5697276	Argument	r_optarg		5696879	1					
ANR	5697277	Identifier	r_optarg		5696879	0					
ANR	5697278	BreakStatement	break ;	618:3:15369:15374	5696879	49	True				
ANR	5697279	Label	case 'L' :	619:2:15378:15386	5696879	50	True				
ANR	5697280	ExpressionStatement	"rasm2_list ( as , argv [ r_optind ] )"	620:3:15391:15422	5696879	51	True				
ANR	5697281	CallExpression	"rasm2_list ( as , argv [ r_optind ] )"		5696879	0					
ANR	5697282	Callee	rasm2_list		5696879	0					
ANR	5697283	Identifier	rasm2_list		5696879	0					
ANR	5697284	ArgumentList	as		5696879	1					
ANR	5697285	Argument	as		5696879	0					
ANR	5697286	Identifier	as		5696879	0					
ANR	5697287	Argument	argv [ r_optind ]		5696879	1					
ANR	5697288	ArrayIndexing	argv [ r_optind ]		5696879	0					
ANR	5697289	Identifier	argv		5696879	0					
ANR	5697290	Identifier	r_optind		5696879	1					
ANR	5697291	ExpressionStatement	ret = 1	621:3:15427:15434	5696879	52	True				
ANR	5697292	AssignmentExpression	ret = 1		5696879	0		=			
ANR	5697293	Identifier	ret		5696879	0					
ANR	5697294	PrimaryExpression	1		5696879	1					
ANR	5697295	GotoStatement	goto beach ;	622:3:15439:15449	5696879	53	True				
ANR	5697296	Identifier	beach		5696879	0					
ANR	5697297	Label	case '@' :	623:2:15453:15461	5696879	54	True				
ANR	5697298	Label	case 'o' :	624:2:15465:15473	5696879	55	True				
ANR	5697299	ExpressionStatement	"offset = r_num_math ( NULL , r_optarg )"	625:3:15478:15514	5696879	56	True				
ANR	5697300	AssignmentExpression	"offset = r_num_math ( NULL , r_optarg )"		5696879	0		=			
ANR	5697301	Identifier	offset		5696879	0					
ANR	5697302	CallExpression	"r_num_math ( NULL , r_optarg )"		5696879	1					
ANR	5697303	Callee	r_num_math		5696879	0					
ANR	5697304	Identifier	r_num_math		5696879	0					
ANR	5697305	ArgumentList	NULL		5696879	1					
ANR	5697306	Argument	NULL		5696879	0					
ANR	5697307	Identifier	NULL		5696879	0					
ANR	5697308	Argument	r_optarg		5696879	1					
ANR	5697309	Identifier	r_optarg		5696879	0					
ANR	5697310	BreakStatement	break ;	626:3:15519:15524	5696879	57	True				
ANR	5697311	Label	case 'O' :	627:2:15528:15536	5696879	58	True				
ANR	5697312	ExpressionStatement	"fd = open ( r_optarg , O_TRUNC | O_RDWR | O_CREAT , 0644 )"	628:3:15541:15595	5696879	59	True				
ANR	5697313	AssignmentExpression	"fd = open ( r_optarg , O_TRUNC | O_RDWR | O_CREAT , 0644 )"		5696879	0		=			
ANR	5697314	Identifier	fd		5696879	0					
ANR	5697315	CallExpression	"open ( r_optarg , O_TRUNC | O_RDWR | O_CREAT , 0644 )"		5696879	1					
ANR	5697316	Callee	open		5696879	0					
ANR	5697317	Identifier	open		5696879	0					
ANR	5697318	ArgumentList	r_optarg		5696879	1					
ANR	5697319	Argument	r_optarg		5696879	0					
ANR	5697320	Identifier	r_optarg		5696879	0					
ANR	5697321	Argument	O_TRUNC | O_RDWR | O_CREAT		5696879	1					
ANR	5697322	InclusiveOrExpression	O_TRUNC | O_RDWR | O_CREAT		5696879	0		|			
ANR	5697323	Identifier	O_TRUNC		5696879	0					
ANR	5697324	InclusiveOrExpression	O_RDWR | O_CREAT		5696879	1		|			
ANR	5697325	Identifier	O_RDWR		5696879	0					
ANR	5697326	Identifier	O_CREAT		5696879	1					
ANR	5697327	Argument	0644		5696879	2					
ANR	5697328	PrimaryExpression	0644		5696879	0					
ANR	5697329	IfStatement	if ( fd != - 1 )		5696879	60					
ANR	5697330	Condition	fd != - 1	629:7:15604:15611	5696879	0	True				
ANR	5697331	EqualityExpression	fd != - 1		5696879	0		!=			
ANR	5697332	Identifier	fd		5696879	0					
ANR	5697333	UnaryOperationExpression	- 1		5696879	1					
ANR	5697334	UnaryOperator	-		5696879	0					
ANR	5697335	PrimaryExpression	1		5696879	1					
ANR	5697336	CompoundStatement		95:17:1806:1806	5696879	1					
ANR	5697337	ExpressionStatement	"dup2 ( fd , 1 )"	630:4:15620:15632	5696879	0	True				
ANR	5697338	CallExpression	"dup2 ( fd , 1 )"		5696879	0					
ANR	5697339	Callee	dup2		5696879	0					
ANR	5697340	Identifier	dup2		5696879	0					
ANR	5697341	ArgumentList	fd		5696879	1					
ANR	5697342	Argument	fd		5696879	0					
ANR	5697343	Identifier	fd		5696879	0					
ANR	5697344	Argument	1		5696879	1					
ANR	5697345	PrimaryExpression	1		5696879	0					
ANR	5697346	BreakStatement	break ;	632:3:15642:15647	5696879	61	True				
ANR	5697347	Label	case 'p' :	633:2:15651:15659	5696879	62	True				
ANR	5697348	ExpressionStatement	use_spp = true	634:3:15664:15678	5696879	63	True				
ANR	5697349	AssignmentExpression	use_spp = true		5696879	0		=			
ANR	5697350	Identifier	use_spp		5696879	0					
ANR	5697351	Identifier	true		5696879	1					
ANR	5697352	BreakStatement	break ;	635:3:15683:15688	5696879	64	True				
ANR	5697353	Label	case 'q' :	636:2:15692:15700	5696879	65	True				
ANR	5697354	ExpressionStatement	as -> quiet = true	637:3:15705:15721	5696879	66	True				
ANR	5697355	AssignmentExpression	as -> quiet = true		5696879	0		=			
ANR	5697356	PtrMemberAccess	as -> quiet		5696879	0					
ANR	5697357	Identifier	as		5696879	0					
ANR	5697358	Identifier	quiet		5696879	1					
ANR	5697359	Identifier	true		5696879	1					
ANR	5697360	BreakStatement	break ;	638:3:15726:15731	5696879	67	True				
ANR	5697361	Label	case 'r' :	639:2:15735:15743	5696879	68	True				
ANR	5697362	ExpressionStatement	rad = true	640:3:15748:15758	5696879	69	True				
ANR	5697363	AssignmentExpression	rad = true		5696879	0		=			
ANR	5697364	Identifier	rad		5696879	0					
ANR	5697365	Identifier	true		5696879	1					
ANR	5697366	BreakStatement	break ;	641:3:15763:15768	5696879	70	True				
ANR	5697367	Label	case 's' :	642:2:15772:15780	5696879	71	True				
ANR	5697368	IfStatement	if ( * r_optarg == '?' )		5696879	72					
ANR	5697369	Condition	* r_optarg == '?'	643:7:15789:15804	5696879	0	True				
ANR	5697370	EqualityExpression	* r_optarg == '?'		5696879	0		==			
ANR	5697371	UnaryOperationExpression	* r_optarg		5696879	0					
ANR	5697372	UnaryOperator	*		5696879	0					
ANR	5697373	Identifier	r_optarg		5696879	1					
ANR	5697374	PrimaryExpression	'?'		5696879	1					
ANR	5697375	CompoundStatement		109:25:1999:1999	5696879	1					
ANR	5697376	ExpressionStatement	"printf ( ""att\\nintel\\nmasm\\njz\\nregnum\\n"" )"	644:4:15813:15854	5696879	0	True				
ANR	5697377	CallExpression	"printf ( ""att\\nintel\\nmasm\\njz\\nregnum\\n"" )"		5696879	0					
ANR	5697378	Callee	printf		5696879	0					
ANR	5697379	Identifier	printf		5696879	0					
ANR	5697380	ArgumentList	"""att\\nintel\\nmasm\\njz\\nregnum\\n"""		5696879	1					
ANR	5697381	Argument	"""att\\nintel\\nmasm\\njz\\nregnum\\n"""		5696879	0					
ANR	5697382	PrimaryExpression	"""att\\nintel\\nmasm\\njz\\nregnum\\n"""		5696879	0					
ANR	5697383	ExpressionStatement	__as_free ( as )	645:4:15860:15874	5696879	1	True				
ANR	5697384	CallExpression	__as_free ( as )		5696879	0					
ANR	5697385	Callee	__as_free		5696879	0					
ANR	5697386	Identifier	__as_free		5696879	0					
ANR	5697387	ArgumentList	as		5696879	1					
ANR	5697388	Argument	as		5696879	0					
ANR	5697389	Identifier	as		5696879	0					
ANR	5697390	ReturnStatement	return 0 ;	646:4:15880:15888	5696879	2	True				
ANR	5697391	PrimaryExpression	0		5696879	0					
ANR	5697392	ElseStatement	else		5696879	0					
ANR	5697393	CompoundStatement		114:4:2098:2146	5696879	0					
ANR	5697394	IdentifierDeclStatement	int syntax = r_asm_syntax_from_string ( r_optarg ) ;	648:4:15906:15954	5696879	0	True				
ANR	5697395	IdentifierDecl	syntax = r_asm_syntax_from_string ( r_optarg )		5696879	0					
ANR	5697396	IdentifierDeclType	int		5696879	0					
ANR	5697397	Identifier	syntax		5696879	1					
ANR	5697398	AssignmentExpression	syntax = r_asm_syntax_from_string ( r_optarg )		5696879	2		=			
ANR	5697399	Identifier	syntax		5696879	0					
ANR	5697400	CallExpression	r_asm_syntax_from_string ( r_optarg )		5696879	1					
ANR	5697401	Callee	r_asm_syntax_from_string		5696879	0					
ANR	5697402	Identifier	r_asm_syntax_from_string		5696879	0					
ANR	5697403	ArgumentList	r_optarg		5696879	1					
ANR	5697404	Argument	r_optarg		5696879	0					
ANR	5697405	Identifier	r_optarg		5696879	0					
ANR	5697406	IfStatement	if ( syntax == - 1 )		5696879	1					
ANR	5697407	Condition	syntax == - 1	649:8:15964:15975	5696879	0	True				
ANR	5697408	EqualityExpression	syntax == - 1		5696879	0		==			
ANR	5697409	Identifier	syntax		5696879	0					
ANR	5697410	UnaryOperationExpression	- 1		5696879	1					
ANR	5697411	UnaryOperator	-		5696879	0					
ANR	5697412	PrimaryExpression	1		5696879	1					
ANR	5697413	CompoundStatement		115:22:2170:2170	5696879	1					
ANR	5697414	ExpressionStatement	__as_free ( as )	650:5:15985:15999	5696879	0	True				
ANR	5697415	CallExpression	__as_free ( as )		5696879	0					
ANR	5697416	Callee	__as_free		5696879	0					
ANR	5697417	Identifier	__as_free		5696879	0					
ANR	5697418	ArgumentList	as		5696879	1					
ANR	5697419	Argument	as		5696879	0					
ANR	5697420	Identifier	as		5696879	0					
ANR	5697421	ReturnStatement	return 1 ;	651:5:16006:16014	5696879	1	True				
ANR	5697422	PrimaryExpression	1		5696879	0					
ANR	5697423	ExpressionStatement	"r_asm_set_syntax ( as -> a , syntax )"	653:4:16026:16058	5696879	2	True				
ANR	5697424	CallExpression	"r_asm_set_syntax ( as -> a , syntax )"		5696879	0					
ANR	5697425	Callee	r_asm_set_syntax		5696879	0					
ANR	5697426	Identifier	r_asm_set_syntax		5696879	0					
ANR	5697427	ArgumentList	as -> a		5696879	1					
ANR	5697428	Argument	as -> a		5696879	0					
ANR	5697429	PtrMemberAccess	as -> a		5696879	0					
ANR	5697430	Identifier	as		5696879	0					
ANR	5697431	Identifier	a		5696879	1					
ANR	5697432	Argument	syntax		5696879	1					
ANR	5697433	Identifier	syntax		5696879	0					
ANR	5697434	BreakStatement	break ;	655:3:16068:16073	5696879	73	True				
ANR	5697435	Label	case 'v' :	656:2:16077:16085	5696879	74	True				
ANR	5697436	IfStatement	if ( as -> quiet )		5696879	75					
ANR	5697437	Condition	as -> quiet	657:7:16094:16102	5696879	0	True				
ANR	5697438	PtrMemberAccess	as -> quiet		5696879	0					
ANR	5697439	Identifier	as		5696879	0					
ANR	5697440	Identifier	quiet		5696879	1					
ANR	5697441	CompoundStatement		123:18:2297:2297	5696879	1					
ANR	5697442	ExpressionStatement	"printf ( ""%s\\n"" , R2_VERSION )"	658:4:16111:16138	5696879	0	True				
ANR	5697443	CallExpression	"printf ( ""%s\\n"" , R2_VERSION )"		5696879	0					
ANR	5697444	Callee	printf		5696879	0					
ANR	5697445	Identifier	printf		5696879	0					
ANR	5697446	ArgumentList	"""%s\\n"""		5696879	1					
ANR	5697447	Argument	"""%s\\n"""		5696879	0					
ANR	5697448	PrimaryExpression	"""%s\\n"""		5696879	0					
ANR	5697449	Argument	R2_VERSION		5696879	1					
ANR	5697450	Identifier	R2_VERSION		5696879	0					
ANR	5697451	ElseStatement	else		5696879	0					
ANR	5697452	CompoundStatement		125:10:2342:2342	5696879	0					
ANR	5697453	ExpressionStatement	"ret = r_main_version_print ( ""rasm2"" )"	660:4:16156:16192	5696879	0	True				
ANR	5697454	AssignmentExpression	"ret = r_main_version_print ( ""rasm2"" )"		5696879	0		=			
ANR	5697455	Identifier	ret		5696879	0					
ANR	5697456	CallExpression	"r_main_version_print ( ""rasm2"" )"		5696879	1					
ANR	5697457	Callee	r_main_version_print		5696879	0					
ANR	5697458	Identifier	r_main_version_print		5696879	0					
ANR	5697459	ArgumentList	"""rasm2"""		5696879	1					
ANR	5697460	Argument	"""rasm2"""		5696879	0					
ANR	5697461	PrimaryExpression	"""rasm2"""		5696879	0					
ANR	5697462	GotoStatement	goto beach ;	662:3:16202:16212	5696879	76	True				
ANR	5697463	Identifier	beach		5696879	0					
ANR	5697464	Label	case 'w' :	663:2:16216:16224	5696879	77	True				
ANR	5697465	ExpressionStatement	whatsop = true	664:3:16229:16243	5696879	78	True				
ANR	5697466	AssignmentExpression	whatsop = true		5696879	0		=			
ANR	5697467	Identifier	whatsop		5696879	0					
ANR	5697468	Identifier	true		5696879	1					
ANR	5697469	BreakStatement	break ;	665:3:16248:16253	5696879	79	True				
ANR	5697470	Label	case 'x' :	666:2:16257:16265	5696879	80	True				
ANR	5697471	ExpressionStatement	hexwords = true	667:3:16270:16285	5696879	81	True				
ANR	5697472	AssignmentExpression	hexwords = true		5696879	0		=			
ANR	5697473	Identifier	hexwords		5696879	0					
ANR	5697474	Identifier	true		5696879	1					
ANR	5697475	BreakStatement	break ;	668:3:16290:16295	5696879	82	True				
ANR	5697476	Label	default :	669:2:16299:16306	5696879	83	True				
ANR	5697477	Identifier	default		5696879	0					
ANR	5697478	ExpressionStatement	ret = rasm_show_help ( 0 )	670:3:16311:16335	5696879	84	True				
ANR	5697479	AssignmentExpression	ret = rasm_show_help ( 0 )		5696879	0		=			
ANR	5697480	Identifier	ret		5696879	0					
ANR	5697481	CallExpression	rasm_show_help ( 0 )		5696879	1					
ANR	5697482	Callee	rasm_show_help		5696879	0					
ANR	5697483	Identifier	rasm_show_help		5696879	0					
ANR	5697484	ArgumentList	0		5696879	1					
ANR	5697485	Argument	0		5696879	0					
ANR	5697486	PrimaryExpression	0		5696879	0					
ANR	5697487	GotoStatement	goto beach ;	671:3:16340:16350	5696879	85	True				
ANR	5697488	Identifier	beach		5696879	0					
ANR	5697489	IfStatement	if ( help > 0 )		5696879	19					
ANR	5697490	Condition	help > 0	675:5:16365:16372	5696879	0	True				
ANR	5697491	RelationalExpression	help > 0		5696879	0		>			
ANR	5697492	Identifier	help		5696879	0					
ANR	5697493	PrimaryExpression	0		5696879	1					
ANR	5697494	CompoundStatement		141:15:2567:2567	5696879	1					
ANR	5697495	ExpressionStatement	ret = rasm_show_help ( help > 1 ? 2 : 0 )	676:2:16379:16416	5696879	0	True				
ANR	5697496	AssignmentExpression	ret = rasm_show_help ( help > 1 ? 2 : 0 )		5696879	0		=			
ANR	5697497	Identifier	ret		5696879	0					
ANR	5697498	CallExpression	rasm_show_help ( help > 1 ? 2 : 0 )		5696879	1					
ANR	5697499	Callee	rasm_show_help		5696879	0					
ANR	5697500	Identifier	rasm_show_help		5696879	0					
ANR	5697501	ArgumentList	help > 1 ? 2 : 0		5696879	1					
ANR	5697502	Argument	help > 1 ? 2 : 0		5696879	0					
ANR	5697503	ConditionalExpression	help > 1 ? 2 : 0		5696879	0					
ANR	5697504	Condition	help > 1		5696879	0					
ANR	5697505	RelationalExpression	help > 1		5696879	0		>			
ANR	5697506	Identifier	help		5696879	0					
ANR	5697507	PrimaryExpression	1		5696879	1					
ANR	5697508	PrimaryExpression	2		5696879	1					
ANR	5697509	PrimaryExpression	0		5696879	2					
ANR	5697510	GotoStatement	goto beach ;	677:2:16420:16430	5696879	1	True				
ANR	5697511	Identifier	beach		5696879	0					
ANR	5697512	IfStatement	if ( arch )		5696879	20					
ANR	5697513	Condition	arch	680:5:16441:16444	5696879	0	True				
ANR	5697514	Identifier	arch		5696879	0					
ANR	5697515	CompoundStatement		146:11:2639:2639	5696879	1					
ANR	5697516	IfStatement	"if ( ! r_asm_use ( as -> a , arch ) )"		5696879	0					
ANR	5697517	Condition	"! r_asm_use ( as -> a , arch )"	681:6:16455:16478	5696879	0	True				
ANR	5697518	UnaryOperationExpression	"! r_asm_use ( as -> a , arch )"		5696879	0					
ANR	5697519	UnaryOperator	!		5696879	0					
ANR	5697520	CallExpression	"r_asm_use ( as -> a , arch )"		5696879	1					
ANR	5697521	Callee	r_asm_use		5696879	0					
ANR	5697522	Identifier	r_asm_use		5696879	0					
ANR	5697523	ArgumentList	as -> a		5696879	1					
ANR	5697524	Argument	as -> a		5696879	0					
ANR	5697525	PtrMemberAccess	as -> a		5696879	0					
ANR	5697526	Identifier	as		5696879	0					
ANR	5697527	Identifier	a		5696879	1					
ANR	5697528	Argument	arch		5696879	1					
ANR	5697529	Identifier	arch		5696879	0					
ANR	5697530	CompoundStatement		147:32:2673:2673	5696879	1					
ANR	5697531	ExpressionStatement	"eprintf ( ""rasm2: Unknown asm plugin '%s'\\n"" , arch )"	682:3:16486:16536	5696879	0	True				
ANR	5697532	CallExpression	"eprintf ( ""rasm2: Unknown asm plugin '%s'\\n"" , arch )"		5696879	0					
ANR	5697533	Callee	eprintf		5696879	0					
ANR	5697534	Identifier	eprintf		5696879	0					
ANR	5697535	ArgumentList	"""rasm2: Unknown asm plugin '%s'\\n"""		5696879	1					
ANR	5697536	Argument	"""rasm2: Unknown asm plugin '%s'\\n"""		5696879	0					
ANR	5697537	PrimaryExpression	"""rasm2: Unknown asm plugin '%s'\\n"""		5696879	0					
ANR	5697538	Argument	arch		5696879	1					
ANR	5697539	Identifier	arch		5696879	0					
ANR	5697540	ExpressionStatement	ret = 0	683:3:16541:16548	5696879	1	True				
ANR	5697541	AssignmentExpression	ret = 0		5696879	0		=			
ANR	5697542	Identifier	ret		5696879	0					
ANR	5697543	PrimaryExpression	0		5696879	1					
ANR	5697544	GotoStatement	goto beach ;	684:3:16553:16563	5696879	2	True				
ANR	5697545	Identifier	beach		5696879	0					
ANR	5697546	ExpressionStatement	"r_anal_use ( as -> anal , arch )"	686:2:16571:16598	5696879	1	True				
ANR	5697547	CallExpression	"r_anal_use ( as -> anal , arch )"		5696879	0					
ANR	5697548	Callee	r_anal_use		5696879	0					
ANR	5697549	Identifier	r_anal_use		5696879	0					
ANR	5697550	ArgumentList	as -> anal		5696879	1					
ANR	5697551	Argument	as -> anal		5696879	0					
ANR	5697552	PtrMemberAccess	as -> anal		5696879	0					
ANR	5697553	Identifier	as		5696879	0					
ANR	5697554	Identifier	anal		5696879	1					
ANR	5697555	Argument	arch		5696879	1					
ANR	5697556	Identifier	arch		5696879	0					
ANR	5697557	IfStatement	"if ( ! strcmp ( arch , ""bf"" ) )"		5696879	2					
ANR	5697558	Condition	"! strcmp ( arch , ""bf"" )"	687:6:16606:16625	5696879	0	True				
ANR	5697559	UnaryOperationExpression	"! strcmp ( arch , ""bf"" )"		5696879	0					
ANR	5697560	UnaryOperator	!		5696879	0					
ANR	5697561	CallExpression	"strcmp ( arch , ""bf"" )"		5696879	1					
ANR	5697562	Callee	strcmp		5696879	0					
ANR	5697563	Identifier	strcmp		5696879	0					
ANR	5697564	ArgumentList	arch		5696879	1					
ANR	5697565	Argument	arch		5696879	0					
ANR	5697566	Identifier	arch		5696879	0					
ANR	5697567	Argument	"""bf"""		5696879	1					
ANR	5697568	PrimaryExpression	"""bf"""		5696879	0					
ANR	5697569	CompoundStatement		153:28:2820:2820	5696879	1					
ANR	5697570	ExpressionStatement	ascii = 1	688:3:16633:16642	5696879	0	True				
ANR	5697571	AssignmentExpression	ascii = 1		5696879	0		=			
ANR	5697572	Identifier	ascii		5696879	0					
ANR	5697573	PrimaryExpression	1		5696879	1					
ANR	5697574	ElseStatement	else		5696879	0					
ANR	5697575	IfStatement	if ( env_arch )		5696879	0					
ANR	5697576	Condition	env_arch	690:12:16660:16667	5696879	0	True				
ANR	5697577	Identifier	env_arch		5696879	0					
ANR	5697578	CompoundStatement		156:22:2862:2862	5696879	1					
ANR	5697579	IfStatement	"if ( ! r_asm_use ( as -> a , env_arch ) )"		5696879	0					
ANR	5697580	Condition	"! r_asm_use ( as -> a , env_arch )"	691:6:16678:16705	5696879	0	True				
ANR	5697581	UnaryOperationExpression	"! r_asm_use ( as -> a , env_arch )"		5696879	0					
ANR	5697582	UnaryOperator	!		5696879	0					
ANR	5697583	CallExpression	"r_asm_use ( as -> a , env_arch )"		5696879	1					
ANR	5697584	Callee	r_asm_use		5696879	0					
ANR	5697585	Identifier	r_asm_use		5696879	0					
ANR	5697586	ArgumentList	as -> a		5696879	1					
ANR	5697587	Argument	as -> a		5696879	0					
ANR	5697588	PtrMemberAccess	as -> a		5696879	0					
ANR	5697589	Identifier	as		5696879	0					
ANR	5697590	Identifier	a		5696879	1					
ANR	5697591	Argument	env_arch		5696879	1					
ANR	5697592	Identifier	env_arch		5696879	0					
ANR	5697593	CompoundStatement		157:36:2900:2900	5696879	1					
ANR	5697594	ExpressionStatement	"eprintf ( ""rasm2: Unknown asm plugin '%s'\\n"" , env_arch )"	692:3:16713:16767	5696879	0	True				
ANR	5697595	CallExpression	"eprintf ( ""rasm2: Unknown asm plugin '%s'\\n"" , env_arch )"		5696879	0					
ANR	5697596	Callee	eprintf		5696879	0					
ANR	5697597	Identifier	eprintf		5696879	0					
ANR	5697598	ArgumentList	"""rasm2: Unknown asm plugin '%s'\\n"""		5696879	1					
ANR	5697599	Argument	"""rasm2: Unknown asm plugin '%s'\\n"""		5696879	0					
ANR	5697600	PrimaryExpression	"""rasm2: Unknown asm plugin '%s'\\n"""		5696879	0					
ANR	5697601	Argument	env_arch		5696879	1					
ANR	5697602	Identifier	env_arch		5696879	0					
ANR	5697603	ExpressionStatement	ret = 0	693:3:16772:16779	5696879	1	True				
ANR	5697604	AssignmentExpression	ret = 0		5696879	0		=			
ANR	5697605	Identifier	ret		5696879	0					
ANR	5697606	PrimaryExpression	0		5696879	1					
ANR	5697607	GotoStatement	goto beach ;	694:3:16784:16794	5696879	2	True				
ANR	5697608	Identifier	beach		5696879	0					
ANR	5697609	ElseStatement	else		5696879	0					
ANR	5697610	IfStatement	"if ( ! r_asm_use ( as -> a , ""x86"" ) )"		5696879	0					
ANR	5697611	Condition	"! r_asm_use ( as -> a , ""x86"" )"	696:12:16812:16836	5696879	0	True				
ANR	5697612	UnaryOperationExpression	"! r_asm_use ( as -> a , ""x86"" )"		5696879	0					
ANR	5697613	UnaryOperator	!		5696879	0					
ANR	5697614	CallExpression	"r_asm_use ( as -> a , ""x86"" )"		5696879	1					
ANR	5697615	Callee	r_asm_use		5696879	0					
ANR	5697616	Identifier	r_asm_use		5696879	0					
ANR	5697617	ArgumentList	as -> a		5696879	1					
ANR	5697618	Argument	as -> a		5696879	0					
ANR	5697619	PtrMemberAccess	as -> a		5696879	0					
ANR	5697620	Identifier	as		5696879	0					
ANR	5697621	Identifier	a		5696879	1					
ANR	5697622	Argument	"""x86"""		5696879	1					
ANR	5697623	PrimaryExpression	"""x86"""		5696879	0					
ANR	5697624	CompoundStatement		162:39:3031:3031	5696879	1					
ANR	5697625	ExpressionStatement	"eprintf ( ""rasm2: Cannot find asm.x86 plugin\\n"" )"	697:2:16843:16890	5696879	0	True				
ANR	5697626	CallExpression	"eprintf ( ""rasm2: Cannot find asm.x86 plugin\\n"" )"		5696879	0					
ANR	5697627	Callee	eprintf		5696879	0					
ANR	5697628	Identifier	eprintf		5696879	0					
ANR	5697629	ArgumentList	"""rasm2: Cannot find asm.x86 plugin\\n"""		5696879	1					
ANR	5697630	Argument	"""rasm2: Cannot find asm.x86 plugin\\n"""		5696879	0					
ANR	5697631	PrimaryExpression	"""rasm2: Cannot find asm.x86 plugin\\n"""		5696879	0					
ANR	5697632	ExpressionStatement	ret = 0	698:2:16894:16901	5696879	1	True				
ANR	5697633	AssignmentExpression	ret = 0		5696879	0		=			
ANR	5697634	Identifier	ret		5696879	0					
ANR	5697635	PrimaryExpression	0		5696879	1					
ANR	5697636	GotoStatement	goto beach ;	699:2:16905:16915	5696879	2	True				
ANR	5697637	Identifier	beach		5696879	0					
ANR	5697638	ExpressionStatement	"r_asm_set_cpu ( as -> a , cpu )"	701:1:16921:16947	5696879	21	True				
ANR	5697639	CallExpression	"r_asm_set_cpu ( as -> a , cpu )"		5696879	0					
ANR	5697640	Callee	r_asm_set_cpu		5696879	0					
ANR	5697641	Identifier	r_asm_set_cpu		5696879	0					
ANR	5697642	ArgumentList	as -> a		5696879	1					
ANR	5697643	Argument	as -> a		5696879	0					
ANR	5697644	PtrMemberAccess	as -> a		5696879	0					
ANR	5697645	Identifier	as		5696879	0					
ANR	5697646	Identifier	a		5696879	1					
ANR	5697647	Argument	cpu		5696879	1					
ANR	5697648	Identifier	cpu		5696879	0					
ANR	5697649	ExpressionStatement	"r_asm_set_bits ( as -> a , ( env_bits && * env_bits ) ? atoi ( env_bits ) : bits )"	702:1:16950:17020	5696879	22	True				
ANR	5697650	CallExpression	"r_asm_set_bits ( as -> a , ( env_bits && * env_bits ) ? atoi ( env_bits ) : bits )"		5696879	0					
ANR	5697651	Callee	r_asm_set_bits		5696879	0					
ANR	5697652	Identifier	r_asm_set_bits		5696879	0					
ANR	5697653	ArgumentList	as -> a		5696879	1					
ANR	5697654	Argument	as -> a		5696879	0					
ANR	5697655	PtrMemberAccess	as -> a		5696879	0					
ANR	5697656	Identifier	as		5696879	0					
ANR	5697657	Identifier	a		5696879	1					
ANR	5697658	Argument	( env_bits && * env_bits ) ? atoi ( env_bits ) : bits		5696879	1					
ANR	5697659	ConditionalExpression	( env_bits && * env_bits ) ? atoi ( env_bits ) : bits		5696879	0					
ANR	5697660	Condition	env_bits && * env_bits		5696879	0					
ANR	5697661	AndExpression	env_bits && * env_bits		5696879	0		&&			
ANR	5697662	Identifier	env_bits		5696879	0					
ANR	5697663	UnaryOperationExpression	* env_bits		5696879	1					
ANR	5697664	UnaryOperator	*		5696879	0					
ANR	5697665	Identifier	env_bits		5696879	1					
ANR	5697666	CallExpression	atoi ( env_bits )		5696879	1					
ANR	5697667	Callee	atoi		5696879	0					
ANR	5697668	Identifier	atoi		5696879	0					
ANR	5697669	ArgumentList	env_bits		5696879	1					
ANR	5697670	Argument	env_bits		5696879	0					
ANR	5697671	Identifier	env_bits		5696879	0					
ANR	5697672	Identifier	bits		5696879	2					
ANR	5697673	ExpressionStatement	"r_anal_set_bits ( as -> anal , ( env_bits && * env_bits ) ? atoi ( env_bits ) : bits )"	703:1:17023:17097	5696879	23	True				
ANR	5697674	CallExpression	"r_anal_set_bits ( as -> anal , ( env_bits && * env_bits ) ? atoi ( env_bits ) : bits )"		5696879	0					
ANR	5697675	Callee	r_anal_set_bits		5696879	0					
ANR	5697676	Identifier	r_anal_set_bits		5696879	0					
ANR	5697677	ArgumentList	as -> anal		5696879	1					
ANR	5697678	Argument	as -> anal		5696879	0					
ANR	5697679	PtrMemberAccess	as -> anal		5696879	0					
ANR	5697680	Identifier	as		5696879	0					
ANR	5697681	Identifier	anal		5696879	1					
ANR	5697682	Argument	( env_bits && * env_bits ) ? atoi ( env_bits ) : bits		5696879	1					
ANR	5697683	ConditionalExpression	( env_bits && * env_bits ) ? atoi ( env_bits ) : bits		5696879	0					
ANR	5697684	Condition	env_bits && * env_bits		5696879	0					
ANR	5697685	AndExpression	env_bits && * env_bits		5696879	0		&&			
ANR	5697686	Identifier	env_bits		5696879	0					
ANR	5697687	UnaryOperationExpression	* env_bits		5696879	1					
ANR	5697688	UnaryOperator	*		5696879	0					
ANR	5697689	Identifier	env_bits		5696879	1					
ANR	5697690	CallExpression	atoi ( env_bits )		5696879	1					
ANR	5697691	Callee	atoi		5696879	0					
ANR	5697692	Identifier	atoi		5696879	0					
ANR	5697693	ArgumentList	env_bits		5696879	1					
ANR	5697694	Argument	env_bits		5696879	0					
ANR	5697695	Identifier	env_bits		5696879	0					
ANR	5697696	Identifier	bits		5696879	2					
ANR	5697697	ExpressionStatement	as -> a -> syscall = r_syscall_new ( )	704:1:17100:17133	5696879	24	True				
ANR	5697698	AssignmentExpression	as -> a -> syscall = r_syscall_new ( )		5696879	0		=			
ANR	5697699	PtrMemberAccess	as -> a -> syscall		5696879	0					
ANR	5697700	PtrMemberAccess	as -> a		5696879	0					
ANR	5697701	Identifier	as		5696879	0					
ANR	5697702	Identifier	a		5696879	1					
ANR	5697703	Identifier	syscall		5696879	1					
ANR	5697704	CallExpression	r_syscall_new ( )		5696879	1					
ANR	5697705	Callee	r_syscall_new		5696879	0					
ANR	5697706	Identifier	r_syscall_new		5696879	0					
ANR	5697707	ArgumentList			5696879	1					
ANR	5697708	ExpressionStatement	"r_syscall_setup ( as -> a -> syscall , arch , bits , cpu , kernel )"	705:1:17136:17193	5696879	25	True				
ANR	5697709	CallExpression	"r_syscall_setup ( as -> a -> syscall , arch , bits , cpu , kernel )"		5696879	0					
ANR	5697710	Callee	r_syscall_setup		5696879	0					
ANR	5697711	Identifier	r_syscall_setup		5696879	0					
ANR	5697712	ArgumentList	as -> a -> syscall		5696879	1					
ANR	5697713	Argument	as -> a -> syscall		5696879	0					
ANR	5697714	PtrMemberAccess	as -> a -> syscall		5696879	0					
ANR	5697715	PtrMemberAccess	as -> a		5696879	0					
ANR	5697716	Identifier	as		5696879	0					
ANR	5697717	Identifier	a		5696879	1					
ANR	5697718	Identifier	syscall		5696879	1					
ANR	5697719	Argument	arch		5696879	1					
ANR	5697720	Identifier	arch		5696879	0					
ANR	5697721	Argument	bits		5696879	2					
ANR	5697722	Identifier	bits		5696879	0					
ANR	5697723	Argument	cpu		5696879	3					
ANR	5697724	Identifier	cpu		5696879	0					
ANR	5697725	Argument	kernel		5696879	4					
ANR	5697726	Identifier	kernel		5696879	0					
ANR	5697727	CompoundStatement		173:2:3392:3443	5696879	26					
ANR	5697728	IdentifierDeclStatement	"bool canbebig = r_asm_set_big_endian ( as -> a , isbig ) ;"	707:2:17200:17251	5696879	0	True				
ANR	5697729	IdentifierDecl	"canbebig = r_asm_set_big_endian ( as -> a , isbig )"		5696879	0					
ANR	5697730	IdentifierDeclType	bool		5696879	0					
ANR	5697731	Identifier	canbebig		5696879	1					
ANR	5697732	AssignmentExpression	"canbebig = r_asm_set_big_endian ( as -> a , isbig )"		5696879	2		=			
ANR	5697733	Identifier	canbebig		5696879	0					
ANR	5697734	CallExpression	"r_asm_set_big_endian ( as -> a , isbig )"		5696879	1					
ANR	5697735	Callee	r_asm_set_big_endian		5696879	0					
ANR	5697736	Identifier	r_asm_set_big_endian		5696879	0					
ANR	5697737	ArgumentList	as -> a		5696879	1					
ANR	5697738	Argument	as -> a		5696879	0					
ANR	5697739	PtrMemberAccess	as -> a		5696879	0					
ANR	5697740	Identifier	as		5696879	0					
ANR	5697741	Identifier	a		5696879	1					
ANR	5697742	Argument	isbig		5696879	1					
ANR	5697743	Identifier	isbig		5696879	0					
ANR	5697744	IfStatement	if ( isbig && ! canbebig )		5696879	1					
ANR	5697745	Condition	isbig && ! canbebig	708:6:17259:17276	5696879	0	True				
ANR	5697746	AndExpression	isbig && ! canbebig		5696879	0		&&			
ANR	5697747	Identifier	isbig		5696879	0					
ANR	5697748	UnaryOperationExpression	! canbebig		5696879	1					
ANR	5697749	UnaryOperator	!		5696879	0					
ANR	5697750	Identifier	canbebig		5696879	1					
ANR	5697751	CompoundStatement		174:26:3471:3471	5696879	1					
ANR	5697752	ExpressionStatement	"eprintf ( ""Warning: This architecture can't swap to big endian.\\n"" )"	709:3:17284:17350	5696879	0	True				
ANR	5697753	CallExpression	"eprintf ( ""Warning: This architecture can't swap to big endian.\\n"" )"		5696879	0					
ANR	5697754	Callee	eprintf		5696879	0					
ANR	5697755	Identifier	eprintf		5696879	0					
ANR	5697756	ArgumentList	"""Warning: This architecture can't swap to big endian.\\n"""		5696879	1					
ANR	5697757	Argument	"""Warning: This architecture can't swap to big endian.\\n"""		5696879	0					
ANR	5697758	PrimaryExpression	"""Warning: This architecture can't swap to big endian.\\n"""		5696879	0					
ANR	5697759	ExpressionStatement	"r_anal_set_big_endian ( as -> anal , canbebig )"	711:2:17358:17400	5696879	2	True				
ANR	5697760	CallExpression	"r_anal_set_big_endian ( as -> anal , canbebig )"		5696879	0					
ANR	5697761	Callee	r_anal_set_big_endian		5696879	0					
ANR	5697762	Identifier	r_anal_set_big_endian		5696879	0					
ANR	5697763	ArgumentList	as -> anal		5696879	1					
ANR	5697764	Argument	as -> anal		5696879	0					
ANR	5697765	PtrMemberAccess	as -> anal		5696879	0					
ANR	5697766	Identifier	as		5696879	0					
ANR	5697767	Identifier	anal		5696879	1					
ANR	5697768	Argument	canbebig		5696879	1					
ANR	5697769	Identifier	canbebig		5696879	0					
ANR	5697770	IfStatement	if ( whatsop )		5696879	27					
ANR	5697771	Condition	whatsop	713:5:17410:17416	5696879	0	True				
ANR	5697772	Identifier	whatsop		5696879	0					
ANR	5697773	CompoundStatement		180:2:3615:3669	5696879	1					
ANR	5697774	IdentifierDeclStatement	"const char * s = r_asm_describe ( as -> a , argv [ r_optind ] ) ;"	714:2:17423:17477	5696879	0	True				
ANR	5697775	IdentifierDecl	"* s = r_asm_describe ( as -> a , argv [ r_optind ] )"		5696879	0					
ANR	5697776	IdentifierDeclType	const char *		5696879	0					
ANR	5697777	Identifier	s		5696879	1					
ANR	5697778	AssignmentExpression	"* s = r_asm_describe ( as -> a , argv [ r_optind ] )"		5696879	2		=			
ANR	5697779	Identifier	s		5696879	0					
ANR	5697780	CallExpression	"r_asm_describe ( as -> a , argv [ r_optind ] )"		5696879	1					
ANR	5697781	Callee	r_asm_describe		5696879	0					
ANR	5697782	Identifier	r_asm_describe		5696879	0					
ANR	5697783	ArgumentList	as -> a		5696879	1					
ANR	5697784	Argument	as -> a		5696879	0					
ANR	5697785	PtrMemberAccess	as -> a		5696879	0					
ANR	5697786	Identifier	as		5696879	0					
ANR	5697787	Identifier	a		5696879	1					
ANR	5697788	Argument	argv [ r_optind ]		5696879	1					
ANR	5697789	ArrayIndexing	argv [ r_optind ]		5696879	0					
ANR	5697790	Identifier	argv		5696879	0					
ANR	5697791	Identifier	r_optind		5696879	1					
ANR	5697792	ExpressionStatement	ret = 1	715:2:17481:17488	5696879	1	True				
ANR	5697793	AssignmentExpression	ret = 1		5696879	0		=			
ANR	5697794	Identifier	ret		5696879	0					
ANR	5697795	PrimaryExpression	1		5696879	1					
ANR	5697796	IfStatement	if ( s )		5696879	2					
ANR	5697797	Condition	s	716:6:17496:17496	5696879	0	True				
ANR	5697798	Identifier	s		5696879	0					
ANR	5697799	CompoundStatement		182:9:3691:3691	5696879	1					
ANR	5697800	ExpressionStatement	"printf ( ""%s\\n"" , s )"	717:3:17504:17522	5696879	0	True				
ANR	5697801	CallExpression	"printf ( ""%s\\n"" , s )"		5696879	0					
ANR	5697802	Callee	printf		5696879	0					
ANR	5697803	Identifier	printf		5696879	0					
ANR	5697804	ArgumentList	"""%s\\n"""		5696879	1					
ANR	5697805	Argument	"""%s\\n"""		5696879	0					
ANR	5697806	PrimaryExpression	"""%s\\n"""		5696879	0					
ANR	5697807	Argument	s		5696879	1					
ANR	5697808	Identifier	s		5696879	0					
ANR	5697809	ExpressionStatement	ret = 0	718:3:17527:17534	5696879	1	True				
ANR	5697810	AssignmentExpression	ret = 0		5696879	0		=			
ANR	5697811	Identifier	ret		5696879	0					
ANR	5697812	PrimaryExpression	0		5696879	1					
ANR	5697813	GotoStatement	goto beach ;	720:2:17542:17552	5696879	3	True				
ANR	5697814	Identifier	beach		5696879	0					
ANR	5697815	IfStatement	if ( filters )		5696879	28					
ANR	5697816	Condition	filters	722:5:17562:17568	5696879	0	True				
ANR	5697817	Identifier	filters		5696879	0					
ANR	5697818	CompoundStatement		189:2:3767:3798	5696879	1					
ANR	5697819	IdentifierDeclStatement	"char * p = strchr ( filters , ':' ) ;"	723:2:17575:17606	5696879	0	True				
ANR	5697820	IdentifierDecl	"* p = strchr ( filters , ':' )"		5696879	0					
ANR	5697821	IdentifierDeclType	char *		5696879	0					
ANR	5697822	Identifier	p		5696879	1					
ANR	5697823	AssignmentExpression	"* p = strchr ( filters , ':' )"		5696879	2		=			
ANR	5697824	Identifier	p		5696879	0					
ANR	5697825	CallExpression	"strchr ( filters , ':' )"		5696879	1					
ANR	5697826	Callee	strchr		5696879	0					
ANR	5697827	Identifier	strchr		5696879	0					
ANR	5697828	ArgumentList	filters		5696879	1					
ANR	5697829	Argument	filters		5696879	0					
ANR	5697830	Identifier	filters		5696879	0					
ANR	5697831	Argument	':'		5696879	1					
ANR	5697832	PrimaryExpression	':'		5696879	0					
ANR	5697833	IfStatement	if ( p )		5696879	1					
ANR	5697834	Condition	p	724:6:17614:17614	5696879	0	True				
ANR	5697835	Identifier	p		5696879	0					
ANR	5697836	CompoundStatement		190:9:3809:3809	5696879	1					
ANR	5697837	ExpressionStatement	* p = 0	725:3:17622:17628	5696879	0	True				
ANR	5697838	AssignmentExpression	* p = 0		5696879	0		=			
ANR	5697839	UnaryOperationExpression	* p		5696879	0					
ANR	5697840	UnaryOperator	*		5696879	0					
ANR	5697841	Identifier	p		5696879	1					
ANR	5697842	PrimaryExpression	0		5696879	1					
ANR	5697843	IfStatement	if ( * filters )		5696879	1					
ANR	5697844	Condition	* filters	726:7:17637:17644	5696879	0	True				
ANR	5697845	UnaryOperationExpression	* filters		5696879	0					
ANR	5697846	UnaryOperator	*		5696879	0					
ANR	5697847	Identifier	filters		5696879	1					
ANR	5697848	CompoundStatement		192:17:3839:3839	5696879	1					
ANR	5697849	ExpressionStatement	"r_asm_filter_input ( as -> a , filters )"	727:4:17653:17688	5696879	0	True				
ANR	5697850	CallExpression	"r_asm_filter_input ( as -> a , filters )"		5696879	0					
ANR	5697851	Callee	r_asm_filter_input		5696879	0					
ANR	5697852	Identifier	r_asm_filter_input		5696879	0					
ANR	5697853	ArgumentList	as -> a		5696879	1					
ANR	5697854	Argument	as -> a		5696879	0					
ANR	5697855	PtrMemberAccess	as -> a		5696879	0					
ANR	5697856	Identifier	as		5696879	0					
ANR	5697857	Identifier	a		5696879	1					
ANR	5697858	Argument	filters		5696879	1					
ANR	5697859	Identifier	filters		5696879	0					
ANR	5697860	IfStatement	if ( p [ 1 ] )		5696879	2					
ANR	5697861	Condition	p [ 1 ]	729:7:17702:17705	5696879	0	True				
ANR	5697862	ArrayIndexing	p [ 1 ]		5696879	0					
ANR	5697863	Identifier	p		5696879	0					
ANR	5697864	PrimaryExpression	1		5696879	1					
ANR	5697865	CompoundStatement		195:13:3900:3900	5696879	1					
ANR	5697866	ExpressionStatement	"r_asm_filter_output ( as -> a , p + 1 )"	730:4:17714:17748	5696879	0	True				
ANR	5697867	CallExpression	"r_asm_filter_output ( as -> a , p + 1 )"		5696879	0					
ANR	5697868	Callee	r_asm_filter_output		5696879	0					
ANR	5697869	Identifier	r_asm_filter_output		5696879	0					
ANR	5697870	ArgumentList	as -> a		5696879	1					
ANR	5697871	Argument	as -> a		5696879	0					
ANR	5697872	PtrMemberAccess	as -> a		5696879	0					
ANR	5697873	Identifier	as		5696879	0					
ANR	5697874	Identifier	a		5696879	1					
ANR	5697875	Argument	p + 1		5696879	1					
ANR	5697876	AdditiveExpression	p + 1		5696879	0		+			
ANR	5697877	Identifier	p		5696879	0					
ANR	5697878	PrimaryExpression	1		5696879	1					
ANR	5697879	ExpressionStatement	* p = ':'	732:3:17758:17766	5696879	3	True				
ANR	5697880	AssignmentExpression	* p = ':'		5696879	0		=			
ANR	5697881	UnaryOperationExpression	* p		5696879	0					
ANR	5697882	UnaryOperator	*		5696879	0					
ANR	5697883	Identifier	p		5696879	1					
ANR	5697884	PrimaryExpression	':'		5696879	1					
ANR	5697885	ElseStatement	else		5696879	0					
ANR	5697886	CompoundStatement		199:9:3969:3969	5696879	0					
ANR	5697887	IfStatement	if ( dis )		5696879	0					
ANR	5697888	Condition	dis	734:7:17786:17788	5696879	0	True				
ANR	5697889	Identifier	dis		5696879	0					
ANR	5697890	CompoundStatement		200:12:3983:3983	5696879	1					
ANR	5697891	ExpressionStatement	"r_asm_filter_output ( as -> a , filters )"	735:4:17797:17833	5696879	0	True				
ANR	5697892	CallExpression	"r_asm_filter_output ( as -> a , filters )"		5696879	0					
ANR	5697893	Callee	r_asm_filter_output		5696879	0					
ANR	5697894	Identifier	r_asm_filter_output		5696879	0					
ANR	5697895	ArgumentList	as -> a		5696879	1					
ANR	5697896	Argument	as -> a		5696879	0					
ANR	5697897	PtrMemberAccess	as -> a		5696879	0					
ANR	5697898	Identifier	as		5696879	0					
ANR	5697899	Identifier	a		5696879	1					
ANR	5697900	Argument	filters		5696879	1					
ANR	5697901	Identifier	filters		5696879	0					
ANR	5697902	ElseStatement	else		5696879	0					
ANR	5697903	CompoundStatement		202:10:4037:4037	5696879	0					
ANR	5697904	ExpressionStatement	"r_asm_filter_input ( as -> a , filters )"	737:4:17851:17886	5696879	0	True				
ANR	5697905	CallExpression	"r_asm_filter_input ( as -> a , filters )"		5696879	0					
ANR	5697906	Callee	r_asm_filter_input		5696879	0					
ANR	5697907	Identifier	r_asm_filter_input		5696879	0					
ANR	5697908	ArgumentList	as -> a		5696879	1					
ANR	5697909	Argument	as -> a		5696879	0					
ANR	5697910	PtrMemberAccess	as -> a		5696879	0					
ANR	5697911	Identifier	as		5696879	0					
ANR	5697912	Identifier	a		5696879	1					
ANR	5697913	Argument	filters		5696879	1					
ANR	5697914	Identifier	filters		5696879	0					
ANR	5697915	IfStatement	if ( file )		5696879	29					
ANR	5697916	Condition	file	742:5:17906:17909	5696879	0	True				
ANR	5697917	Identifier	file		5696879	0					
ANR	5697918	CompoundStatement		210:2:4125:4139	5696879	1					
ANR	5697919	IdentifierDeclStatement	char * content ;	743:2:17916:17929	5696879	0	True				
ANR	5697920	IdentifierDecl	* content		5696879	0					
ANR	5697921	IdentifierDeclType	char *		5696879	0					
ANR	5697922	Identifier	content		5696879	1					
ANR	5697923	IdentifierDeclStatement	int length = 0 ;	744:2:17933:17947	5696879	1	True				
ANR	5697924	IdentifierDecl	length = 0		5696879	0					
ANR	5697925	IdentifierDeclType	int		5696879	0					
ANR	5697926	Identifier	length		5696879	1					
ANR	5697927	AssignmentExpression	length = 0		5696879	2		=			
ANR	5697928	Identifier	length		5696879	0					
ANR	5697929	PrimaryExpression	0		5696879	1					
ANR	5697930	IfStatement	"if ( ! strcmp ( file , ""-"" ) )"		5696879	2					
ANR	5697931	Condition	"! strcmp ( file , ""-"" )"	745:6:17955:17973	5696879	0	True				
ANR	5697932	UnaryOperationExpression	"! strcmp ( file , ""-"" )"		5696879	0					
ANR	5697933	UnaryOperator	!		5696879	0					
ANR	5697934	CallExpression	"strcmp ( file , ""-"" )"		5696879	1					
ANR	5697935	Callee	strcmp		5696879	0					
ANR	5697936	Identifier	strcmp		5696879	0					
ANR	5697937	ArgumentList	file		5696879	1					
ANR	5697938	Argument	file		5696879	0					
ANR	5697939	Identifier	file		5696879	0					
ANR	5697940	Argument	"""-"""		5696879	1					
ANR	5697941	PrimaryExpression	"""-"""		5696879	0					
ANR	5697942	CompoundStatement		213:3:4188:4225	5696879	1					
ANR	5697943	IdentifierDeclStatement	int sz = 0 ;	746:3:17981:17991	5696879	0	True				
ANR	5697944	IdentifierDecl	sz = 0		5696879	0					
ANR	5697945	IdentifierDeclType	int		5696879	0					
ANR	5697946	Identifier	sz		5696879	1					
ANR	5697947	AssignmentExpression	sz = 0		5696879	2		=			
ANR	5697948	Identifier	sz		5696879	0					
ANR	5697949	PrimaryExpression	0		5696879	1					
ANR	5697950	IdentifierDeclStatement	ut8 * buf = ( ut8 * ) r_stdin_slurp ( & sz ) ;	747:3:17996:18033	5696879	1	True				
ANR	5697951	IdentifierDecl	* buf = ( ut8 * ) r_stdin_slurp ( & sz )		5696879	0					
ANR	5697952	IdentifierDeclType	ut8 *		5696879	0					
ANR	5697953	Identifier	buf		5696879	1					
ANR	5697954	AssignmentExpression	* buf = ( ut8 * ) r_stdin_slurp ( & sz )		5696879	2		=			
ANR	5697955	Identifier	buf		5696879	0					
ANR	5697956	CastExpression	( ut8 * ) r_stdin_slurp ( & sz )		5696879	1					
ANR	5697957	CastTarget	ut8 *		5696879	0					
ANR	5697958	CallExpression	r_stdin_slurp ( & sz )		5696879	1					
ANR	5697959	Callee	r_stdin_slurp		5696879	0					
ANR	5697960	Identifier	r_stdin_slurp		5696879	0					
ANR	5697961	ArgumentList	& sz		5696879	1					
ANR	5697962	Argument	& sz		5696879	0					
ANR	5697963	UnaryOperationExpression	& sz		5696879	0					
ANR	5697964	UnaryOperator	&		5696879	0					
ANR	5697965	Identifier	sz		5696879	1					
ANR	5697966	IfStatement	if ( ! buf || sz < 1 )		5696879	2					
ANR	5697967	Condition	! buf || sz < 1	748:7:18042:18055	5696879	0	True				
ANR	5697968	OrExpression	! buf || sz < 1		5696879	0		||			
ANR	5697969	UnaryOperationExpression	! buf		5696879	0					
ANR	5697970	UnaryOperator	!		5696879	0					
ANR	5697971	Identifier	buf		5696879	1					
ANR	5697972	RelationalExpression	sz < 1		5696879	1		<			
ANR	5697973	Identifier	sz		5696879	0					
ANR	5697974	PrimaryExpression	1		5696879	1					
ANR	5697975	CompoundStatement		214:23:4250:4250	5696879	1					
ANR	5697976	ExpressionStatement	"eprintf ( ""Nothing to do.\\n"" )"	749:4:18064:18092	5696879	0	True				
ANR	5697977	CallExpression	"eprintf ( ""Nothing to do.\\n"" )"		5696879	0					
ANR	5697978	Callee	eprintf		5696879	0					
ANR	5697979	Identifier	eprintf		5696879	0					
ANR	5697980	ArgumentList	"""Nothing to do.\\n"""		5696879	1					
ANR	5697981	Argument	"""Nothing to do.\\n"""		5696879	0					
ANR	5697982	PrimaryExpression	"""Nothing to do.\\n"""		5696879	0					
ANR	5697983	GotoStatement	goto beach ;	750:4:18098:18108	5696879	1	True				
ANR	5697984	Identifier	beach		5696879	0					
ANR	5697985	ExpressionStatement	len = ( ut64 ) sz	752:3:18118:18132	5696879	3	True				
ANR	5697986	AssignmentExpression	len = ( ut64 ) sz		5696879	0		=			
ANR	5697987	Identifier	len		5696879	0					
ANR	5697988	CastExpression	( ut64 ) sz		5696879	1					
ANR	5697989	CastTarget	ut64		5696879	0					
ANR	5697990	Identifier	sz		5696879	1					
ANR	5697991	IfStatement	if ( dis )		5696879	4					
ANR	5697992	Condition	dis	753:7:18141:18143	5696879	0	True				
ANR	5697993	Identifier	dis		5696879	0					
ANR	5697994	CompoundStatement		219:12:4338:4338	5696879	1					
ANR	5697995	IfStatement	if ( skip && length > skip )		5696879	0					
ANR	5697996	Condition	skip && length > skip	754:8:18156:18176	5696879	0	True				
ANR	5697997	AndExpression	skip && length > skip		5696879	0		&&			
ANR	5697998	Identifier	skip		5696879	0					
ANR	5697999	RelationalExpression	length > skip		5696879	1		>			
ANR	5698000	Identifier	length		5696879	0					
ANR	5698001	Identifier	skip		5696879	1					
ANR	5698002	CompoundStatement		220:31:4371:4371	5696879	1					
ANR	5698003	IfStatement	if ( bin )		5696879	0					
ANR	5698004	Condition	bin	755:9:18190:18192	5696879	0	True				
ANR	5698005	Identifier	bin		5696879	0					
ANR	5698006	CompoundStatement		221:14:4387:4387	5696879	1					
ANR	5698007	ExpressionStatement	"memmove ( buf , buf + skip , length - skip )"	756:6:18203:18243	5696879	0	True				
ANR	5698008	CallExpression	"memmove ( buf , buf + skip , length - skip )"		5696879	0					
ANR	5698009	Callee	memmove		5696879	0					
ANR	5698010	Identifier	memmove		5696879	0					
ANR	5698011	ArgumentList	buf		5696879	1					
ANR	5698012	Argument	buf		5696879	0					
ANR	5698013	Identifier	buf		5696879	0					
ANR	5698014	Argument	buf + skip		5696879	1					
ANR	5698015	AdditiveExpression	buf + skip		5696879	0		+			
ANR	5698016	Identifier	buf		5696879	0					
ANR	5698017	Identifier	skip		5696879	1					
ANR	5698018	Argument	length - skip		5696879	2					
ANR	5698019	AdditiveExpression	length - skip		5696879	0		-			
ANR	5698020	Identifier	length		5696879	0					
ANR	5698021	Identifier	skip		5696879	1					
ANR	5698022	ExpressionStatement	length -= skip	757:6:18251:18265	5696879	1	True				
ANR	5698023	AssignmentExpression	length -= skip		5696879	0		-=			
ANR	5698024	Identifier	length		5696879	0					
ANR	5698025	Identifier	skip		5696879	1					
ANR	5698026	ExpressionStatement	"ret = rasm_disasm ( as , ( char * ) buf , offset , len , as -> a -> bits , ascii , bin , dis - 1 )"	760:4:18284:18366	5696879	1	True				
ANR	5698027	AssignmentExpression	"ret = rasm_disasm ( as , ( char * ) buf , offset , len , as -> a -> bits , ascii , bin , dis - 1 )"		5696879	0		=			
ANR	5698028	Identifier	ret		5696879	0					
ANR	5698029	CallExpression	"rasm_disasm ( as , ( char * ) buf , offset , len , as -> a -> bits , ascii , bin , dis - 1 )"		5696879	1					
ANR	5698030	Callee	rasm_disasm		5696879	0					
ANR	5698031	Identifier	rasm_disasm		5696879	0					
ANR	5698032	ArgumentList	as		5696879	1					
ANR	5698033	Argument	as		5696879	0					
ANR	5698034	Identifier	as		5696879	0					
ANR	5698035	Argument	( char * ) buf		5696879	1					
ANR	5698036	CastExpression	( char * ) buf		5696879	0					
ANR	5698037	CastTarget	char *		5696879	0					
ANR	5698038	Identifier	buf		5696879	1					
ANR	5698039	Argument	offset		5696879	2					
ANR	5698040	Identifier	offset		5696879	0					
ANR	5698041	Argument	len		5696879	3					
ANR	5698042	Identifier	len		5696879	0					
ANR	5698043	Argument	as -> a -> bits		5696879	4					
ANR	5698044	PtrMemberAccess	as -> a -> bits		5696879	0					
ANR	5698045	PtrMemberAccess	as -> a		5696879	0					
ANR	5698046	Identifier	as		5696879	0					
ANR	5698047	Identifier	a		5696879	1					
ANR	5698048	Identifier	bits		5696879	1					
ANR	5698049	Argument	ascii		5696879	5					
ANR	5698050	Identifier	ascii		5696879	0					
ANR	5698051	Argument	bin		5696879	6					
ANR	5698052	Identifier	bin		5696879	0					
ANR	5698053	Argument	dis - 1		5696879	7					
ANR	5698054	AdditiveExpression	dis - 1		5696879	0		-			
ANR	5698055	Identifier	dis		5696879	0					
ANR	5698056	PrimaryExpression	1		5696879	1					
ANR	5698057	ElseStatement	else		5696879	0					
ANR	5698058	IfStatement	if ( analinfo )		5696879	0					
ANR	5698059	Condition	analinfo	761:14:18382:18389	5696879	0	True				
ANR	5698060	Identifier	analinfo		5696879	0					
ANR	5698061	CompoundStatement		227:24:4584:4584	5696879	1					
ANR	5698062	ExpressionStatement	"ret = show_analinfo ( as , ( const char * ) buf , offset )"	762:4:18398:18449	5696879	0	True				
ANR	5698063	AssignmentExpression	"ret = show_analinfo ( as , ( const char * ) buf , offset )"		5696879	0		=			
ANR	5698064	Identifier	ret		5696879	0					
ANR	5698065	CallExpression	"show_analinfo ( as , ( const char * ) buf , offset )"		5696879	1					
ANR	5698066	Callee	show_analinfo		5696879	0					
ANR	5698067	Identifier	show_analinfo		5696879	0					
ANR	5698068	ArgumentList	as		5696879	1					
ANR	5698069	Argument	as		5696879	0					
ANR	5698070	Identifier	as		5696879	0					
ANR	5698071	Argument	( const char * ) buf		5696879	1					
ANR	5698072	CastExpression	( const char * ) buf		5696879	0					
ANR	5698073	CastTarget	const char *		5696879	0					
ANR	5698074	Identifier	buf		5696879	1					
ANR	5698075	Argument	offset		5696879	2					
ANR	5698076	Identifier	offset		5696879	0					
ANR	5698077	ElseStatement	else		5696879	0					
ANR	5698078	CompoundStatement		229:10:4653:4653	5696879	0					
ANR	5698079	ExpressionStatement	"ret = print_assembly_output ( as , ( char * ) buf , offset , len , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"	764:4:18467:18578	5696879	0	True				
ANR	5698080	AssignmentExpression	"ret = print_assembly_output ( as , ( char * ) buf , offset , len , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"		5696879	0		=			
ANR	5698081	Identifier	ret		5696879	0					
ANR	5698082	CallExpression	"print_assembly_output ( as , ( char * ) buf , offset , len , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"		5696879	1					
ANR	5698083	Callee	print_assembly_output		5696879	0					
ANR	5698084	Identifier	print_assembly_output		5696879	0					
ANR	5698085	ArgumentList	as		5696879	1					
ANR	5698086	Argument	as		5696879	0					
ANR	5698087	Identifier	as		5696879	0					
ANR	5698088	Argument	( char * ) buf		5696879	1					
ANR	5698089	CastExpression	( char * ) buf		5696879	0					
ANR	5698090	CastTarget	char *		5696879	0					
ANR	5698091	Identifier	buf		5696879	1					
ANR	5698092	Argument	offset		5696879	2					
ANR	5698093	Identifier	offset		5696879	0					
ANR	5698094	Argument	len		5696879	3					
ANR	5698095	Identifier	len		5696879	0					
ANR	5698096	Argument	as -> a -> bits		5696879	4					
ANR	5698097	PtrMemberAccess	as -> a -> bits		5696879	0					
ANR	5698098	PtrMemberAccess	as -> a		5696879	0					
ANR	5698099	Identifier	as		5696879	0					
ANR	5698100	Identifier	a		5696879	1					
ANR	5698101	Identifier	bits		5696879	1					
ANR	5698102	Argument	bin		5696879	5					
ANR	5698103	Identifier	bin		5696879	0					
ANR	5698104	Argument	use_spp		5696879	6					
ANR	5698105	Identifier	use_spp		5696879	0					
ANR	5698106	Argument	rad		5696879	7					
ANR	5698107	Identifier	rad		5696879	0					
ANR	5698108	Argument	hexwords		5696879	8					
ANR	5698109	Identifier	hexwords		5696879	0					
ANR	5698110	Argument	arch		5696879	9					
ANR	5698111	Identifier	arch		5696879	0					
ANR	5698112	ExpressionStatement	free ( buf )	767:3:18588:18598	5696879	5	True				
ANR	5698113	CallExpression	free ( buf )		5696879	0					
ANR	5698114	Callee	free		5696879	0					
ANR	5698115	Identifier	free		5696879	0					
ANR	5698116	ArgumentList	buf		5696879	1					
ANR	5698117	Argument	buf		5696879	0					
ANR	5698118	Identifier	buf		5696879	0					
ANR	5698119	ElseStatement	else		5696879	0					
ANR	5698120	CompoundStatement		234:9:4801:4801	5696879	0					
ANR	5698121	ExpressionStatement	"content = r_file_slurp ( file , & length )"	769:3:18614:18652	5696879	0	True				
ANR	5698122	AssignmentExpression	"content = r_file_slurp ( file , & length )"		5696879	0		=			
ANR	5698123	Identifier	content		5696879	0					
ANR	5698124	CallExpression	"r_file_slurp ( file , & length )"		5696879	1					
ANR	5698125	Callee	r_file_slurp		5696879	0					
ANR	5698126	Identifier	r_file_slurp		5696879	0					
ANR	5698127	ArgumentList	file		5696879	1					
ANR	5698128	Argument	file		5696879	0					
ANR	5698129	Identifier	file		5696879	0					
ANR	5698130	Argument	& length		5696879	1					
ANR	5698131	UnaryOperationExpression	& length		5696879	0					
ANR	5698132	UnaryOperator	&		5696879	0					
ANR	5698133	Identifier	length		5696879	1					
ANR	5698134	IfStatement	if ( content )		5696879	1					
ANR	5698135	Condition	content	770:7:18661:18667	5696879	0	True				
ANR	5698136	Identifier	content		5696879	0					
ANR	5698137	CompoundStatement		236:16:4862:4862	5696879	1					
ANR	5698138	IfStatement	if ( len && len > 0 && len < length )		5696879	0					
ANR	5698139	Condition	len && len > 0 && len < length	771:8:18680:18709	5696879	0	True				
ANR	5698140	AndExpression	len && len > 0 && len < length		5696879	0		&&			
ANR	5698141	Identifier	len		5696879	0					
ANR	5698142	AndExpression	len > 0 && len < length		5696879	1		&&			
ANR	5698143	RelationalExpression	len > 0		5696879	0		>			
ANR	5698144	Identifier	len		5696879	0					
ANR	5698145	PrimaryExpression	0		5696879	1					
ANR	5698146	RelationalExpression	len < length		5696879	1		<			
ANR	5698147	Identifier	len		5696879	0					
ANR	5698148	Identifier	length		5696879	1					
ANR	5698149	CompoundStatement		237:40:4904:4904	5696879	1					
ANR	5698150	ExpressionStatement	length = len	772:5:18719:18731	5696879	0	True				
ANR	5698151	AssignmentExpression	length = len		5696879	0		=			
ANR	5698152	Identifier	length		5696879	0					
ANR	5698153	Identifier	len		5696879	1					
ANR	5698154	ExpressionStatement	content [ length ] = '\\0'	774:4:18743:18765	5696879	1	True				
ANR	5698155	AssignmentExpression	content [ length ] = '\\0'		5696879	0		=			
ANR	5698156	ArrayIndexing	content [ length ]		5696879	0					
ANR	5698157	Identifier	content		5696879	0					
ANR	5698158	Identifier	length		5696879	1					
ANR	5698159	PrimaryExpression	'\\0'		5696879	1					
ANR	5698160	IfStatement	if ( skip && length > skip )		5696879	2					
ANR	5698161	Condition	skip && length > skip	775:8:18775:18795	5696879	0	True				
ANR	5698162	AndExpression	skip && length > skip		5696879	0		&&			
ANR	5698163	Identifier	skip		5696879	0					
ANR	5698164	RelationalExpression	length > skip		5696879	1		>			
ANR	5698165	Identifier	length		5696879	0					
ANR	5698166	Identifier	skip		5696879	1					
ANR	5698167	CompoundStatement		241:31:4990:4990	5696879	1					
ANR	5698168	IfStatement	if ( bin )		5696879	0					
ANR	5698169	Condition	bin	776:9:18809:18811	5696879	0	True				
ANR	5698170	Identifier	bin		5696879	0					
ANR	5698171	CompoundStatement		242:14:5006:5006	5696879	1					
ANR	5698172	ExpressionStatement	"memmove ( content , content + skip , length - skip )"	777:6:18822:18870	5696879	0	True				
ANR	5698173	CallExpression	"memmove ( content , content + skip , length - skip )"		5696879	0					
ANR	5698174	Callee	memmove		5696879	0					
ANR	5698175	Identifier	memmove		5696879	0					
ANR	5698176	ArgumentList	content		5696879	1					
ANR	5698177	Argument	content		5696879	0					
ANR	5698178	Identifier	content		5696879	0					
ANR	5698179	Argument	content + skip		5696879	1					
ANR	5698180	AdditiveExpression	content + skip		5696879	0		+			
ANR	5698181	Identifier	content		5696879	0					
ANR	5698182	Identifier	skip		5696879	1					
ANR	5698183	Argument	length - skip		5696879	2					
ANR	5698184	AdditiveExpression	length - skip		5696879	0		-			
ANR	5698185	Identifier	length		5696879	0					
ANR	5698186	Identifier	skip		5696879	1					
ANR	5698187	ExpressionStatement	length -= skip	778:6:18878:18892	5696879	1	True				
ANR	5698188	AssignmentExpression	length -= skip		5696879	0		-=			
ANR	5698189	Identifier	length		5696879	0					
ANR	5698190	Identifier	skip		5696879	1					
ANR	5698191	IfStatement	if ( dis )		5696879	3					
ANR	5698192	Condition	dis	781:8:18915:18917	5696879	0	True				
ANR	5698193	Identifier	dis		5696879	0					
ANR	5698194	CompoundStatement		247:13:5112:5112	5696879	1					
ANR	5698195	ExpressionStatement	"ret = rasm_disasm ( as , content , offset , length , as -> a -> bits , ascii , bin , dis - 1 )"	782:5:18927:19015	5696879	0	True				
ANR	5698196	AssignmentExpression	"ret = rasm_disasm ( as , content , offset , length , as -> a -> bits , ascii , bin , dis - 1 )"		5696879	0		=			
ANR	5698197	Identifier	ret		5696879	0					
ANR	5698198	CallExpression	"rasm_disasm ( as , content , offset , length , as -> a -> bits , ascii , bin , dis - 1 )"		5696879	1					
ANR	5698199	Callee	rasm_disasm		5696879	0					
ANR	5698200	Identifier	rasm_disasm		5696879	0					
ANR	5698201	ArgumentList	as		5696879	1					
ANR	5698202	Argument	as		5696879	0					
ANR	5698203	Identifier	as		5696879	0					
ANR	5698204	Argument	content		5696879	1					
ANR	5698205	Identifier	content		5696879	0					
ANR	5698206	Argument	offset		5696879	2					
ANR	5698207	Identifier	offset		5696879	0					
ANR	5698208	Argument	length		5696879	3					
ANR	5698209	Identifier	length		5696879	0					
ANR	5698210	Argument	as -> a -> bits		5696879	4					
ANR	5698211	PtrMemberAccess	as -> a -> bits		5696879	0					
ANR	5698212	PtrMemberAccess	as -> a		5696879	0					
ANR	5698213	Identifier	as		5696879	0					
ANR	5698214	Identifier	a		5696879	1					
ANR	5698215	Identifier	bits		5696879	1					
ANR	5698216	Argument	ascii		5696879	5					
ANR	5698217	Identifier	ascii		5696879	0					
ANR	5698218	Argument	bin		5696879	6					
ANR	5698219	Identifier	bin		5696879	0					
ANR	5698220	Argument	dis - 1		5696879	7					
ANR	5698221	AdditiveExpression	dis - 1		5696879	0		-			
ANR	5698222	Identifier	dis		5696879	0					
ANR	5698223	PrimaryExpression	1		5696879	1					
ANR	5698224	ElseStatement	else		5696879	0					
ANR	5698225	IfStatement	if ( analinfo )		5696879	0					
ANR	5698226	Condition	analinfo	784:15:19032:19039	5696879	0	True				
ANR	5698227	Identifier	analinfo		5696879	0					
ANR	5698228	CompoundStatement		250:25:5234:5234	5696879	1					
ANR	5698229	ExpressionStatement	"ret = show_analinfo ( as , ( const char * ) content , offset )"	785:5:19049:19104	5696879	0	True				
ANR	5698230	AssignmentExpression	"ret = show_analinfo ( as , ( const char * ) content , offset )"		5696879	0		=			
ANR	5698231	Identifier	ret		5696879	0					
ANR	5698232	CallExpression	"show_analinfo ( as , ( const char * ) content , offset )"		5696879	1					
ANR	5698233	Callee	show_analinfo		5696879	0					
ANR	5698234	Identifier	show_analinfo		5696879	0					
ANR	5698235	ArgumentList	as		5696879	1					
ANR	5698236	Argument	as		5696879	0					
ANR	5698237	Identifier	as		5696879	0					
ANR	5698238	Argument	( const char * ) content		5696879	1					
ANR	5698239	CastExpression	( const char * ) content		5696879	0					
ANR	5698240	CastTarget	const char *		5696879	0					
ANR	5698241	Identifier	content		5696879	1					
ANR	5698242	Argument	offset		5696879	2					
ANR	5698243	Identifier	offset		5696879	0					
ANR	5698244	ElseStatement	else		5696879	0					
ANR	5698245	CompoundStatement		252:11:5309:5309	5696879	0					
ANR	5698246	ExpressionStatement	"ret = print_assembly_output ( as , content , offset , length , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"	787:5:19124:19236	5696879	0	True				
ANR	5698247	AssignmentExpression	"ret = print_assembly_output ( as , content , offset , length , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"		5696879	0		=			
ANR	5698248	Identifier	ret		5696879	0					
ANR	5698249	CallExpression	"print_assembly_output ( as , content , offset , length , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"		5696879	1					
ANR	5698250	Callee	print_assembly_output		5696879	0					
ANR	5698251	Identifier	print_assembly_output		5696879	0					
ANR	5698252	ArgumentList	as		5696879	1					
ANR	5698253	Argument	as		5696879	0					
ANR	5698254	Identifier	as		5696879	0					
ANR	5698255	Argument	content		5696879	1					
ANR	5698256	Identifier	content		5696879	0					
ANR	5698257	Argument	offset		5696879	2					
ANR	5698258	Identifier	offset		5696879	0					
ANR	5698259	Argument	length		5696879	3					
ANR	5698260	Identifier	length		5696879	0					
ANR	5698261	Argument	as -> a -> bits		5696879	4					
ANR	5698262	PtrMemberAccess	as -> a -> bits		5696879	0					
ANR	5698263	PtrMemberAccess	as -> a		5696879	0					
ANR	5698264	Identifier	as		5696879	0					
ANR	5698265	Identifier	a		5696879	1					
ANR	5698266	Identifier	bits		5696879	1					
ANR	5698267	Argument	bin		5696879	5					
ANR	5698268	Identifier	bin		5696879	0					
ANR	5698269	Argument	use_spp		5696879	6					
ANR	5698270	Identifier	use_spp		5696879	0					
ANR	5698271	Argument	rad		5696879	7					
ANR	5698272	Identifier	rad		5696879	0					
ANR	5698273	Argument	hexwords		5696879	8					
ANR	5698274	Identifier	hexwords		5696879	0					
ANR	5698275	Argument	arch		5696879	9					
ANR	5698276	Identifier	arch		5696879	0					
ANR	5698277	ExpressionStatement	ret = ! ret	790:4:19248:19258	5696879	4	True				
ANR	5698278	AssignmentExpression	ret = ! ret		5696879	0		=			
ANR	5698279	Identifier	ret		5696879	0					
ANR	5698280	UnaryOperationExpression	! ret		5696879	1					
ANR	5698281	UnaryOperator	!		5696879	0					
ANR	5698282	Identifier	ret		5696879	1					
ANR	5698283	ExpressionStatement	free ( content )	791:4:19264:19278	5696879	5	True				
ANR	5698284	CallExpression	free ( content )		5696879	0					
ANR	5698285	Callee	free		5696879	0					
ANR	5698286	Identifier	free		5696879	0					
ANR	5698287	ArgumentList	content		5696879	1					
ANR	5698288	Argument	content		5696879	0					
ANR	5698289	Identifier	content		5696879	0					
ANR	5698290	ElseStatement	else		5696879	0					
ANR	5698291	CompoundStatement		258:10:5482:5482	5696879	0					
ANR	5698292	ExpressionStatement	"eprintf ( ""rasm2: Cannot open file %s\\n"" , file )"	793:4:19296:19342	5696879	0	True				
ANR	5698293	CallExpression	"eprintf ( ""rasm2: Cannot open file %s\\n"" , file )"		5696879	0					
ANR	5698294	Callee	eprintf		5696879	0					
ANR	5698295	Identifier	eprintf		5696879	0					
ANR	5698296	ArgumentList	"""rasm2: Cannot open file %s\\n"""		5696879	1					
ANR	5698297	Argument	"""rasm2: Cannot open file %s\\n"""		5696879	0					
ANR	5698298	PrimaryExpression	"""rasm2: Cannot open file %s\\n"""		5696879	0					
ANR	5698299	Argument	file		5696879	1					
ANR	5698300	Identifier	file		5696879	0					
ANR	5698301	ExpressionStatement	ret = 1	794:4:19348:19355	5696879	1	True				
ANR	5698302	AssignmentExpression	ret = 1		5696879	0		=			
ANR	5698303	Identifier	ret		5696879	0					
ANR	5698304	PrimaryExpression	1		5696879	1					
ANR	5698305	ElseStatement	else		5696879	0					
ANR	5698306	IfStatement	if ( argv [ r_optind ] )		5696879	0					
ANR	5698307	Condition	argv [ r_optind ]	797:12:19378:19391	5696879	0	True				
ANR	5698308	ArrayIndexing	argv [ r_optind ]		5696879	0					
ANR	5698309	Identifier	argv		5696879	0					
ANR	5698310	Identifier	r_optind		5696879	1					
ANR	5698311	CompoundStatement		263:28:5586:5586	5696879	1					
ANR	5698312	IfStatement	"if ( ! strcmp ( argv [ r_optind ] , ""-"" ) )"		5696879	0					
ANR	5698313	Condition	"! strcmp ( argv [ r_optind ] , ""-"" )"	798:6:19402:19430	5696879	0	True				
ANR	5698314	UnaryOperationExpression	"! strcmp ( argv [ r_optind ] , ""-"" )"		5696879	0					
ANR	5698315	UnaryOperator	!		5696879	0					
ANR	5698316	CallExpression	"strcmp ( argv [ r_optind ] , ""-"" )"		5696879	1					
ANR	5698317	Callee	strcmp		5696879	0					
ANR	5698318	Identifier	strcmp		5696879	0					
ANR	5698319	ArgumentList	argv [ r_optind ]		5696879	1					
ANR	5698320	Argument	argv [ r_optind ]		5696879	0					
ANR	5698321	ArrayIndexing	argv [ r_optind ]		5696879	0					
ANR	5698322	Identifier	argv		5696879	0					
ANR	5698323	Identifier	r_optind		5696879	1					
ANR	5698324	Argument	"""-"""		5696879	1					
ANR	5698325	PrimaryExpression	"""-"""		5696879	0					
ANR	5698326	CompoundStatement		265:3:5630:5640	5696879	1					
ANR	5698327	IdentifierDeclStatement	int length ;	799:3:19438:19448	5696879	0	True				
ANR	5698328	IdentifierDecl	length		5696879	0					
ANR	5698329	IdentifierDeclType	int		5696879	0					
ANR	5698330	Identifier	length		5696879	1					
ANR	5698331	DoStatement	do		5696879	1					
ANR	5698332	CompoundStatement		267:4:5654:5668	5696879	0					
ANR	5698333	IdentifierDeclStatement	char buf [ 1024 ] ;	801:4:19462:19476	5696879	0	True				
ANR	5698334	IdentifierDecl	buf [ 1024 ]		5696879	0					
ANR	5698335	IdentifierDeclType	char [ 1024 ]		5696879	0					
ANR	5698336	Identifier	buf		5696879	1					
ANR	5698337	PrimaryExpression	1024		5696879	2					
ANR	5698338	ExpressionStatement	"length = read ( 0 , buf , sizeof ( buf ) - 1 )"	802:4:19527:19567	5696879	1	True				
ANR	5698339	AssignmentExpression	"length = read ( 0 , buf , sizeof ( buf ) - 1 )"		5696879	0		=			
ANR	5698340	Identifier	length		5696879	0					
ANR	5698341	CallExpression	"read ( 0 , buf , sizeof ( buf ) - 1 )"		5696879	1					
ANR	5698342	Callee	read		5696879	0					
ANR	5698343	Identifier	read		5696879	0					
ANR	5698344	ArgumentList	0		5696879	1					
ANR	5698345	Argument	0		5696879	0					
ANR	5698346	PrimaryExpression	0		5696879	0					
ANR	5698347	Argument	buf		5696879	1					
ANR	5698348	Identifier	buf		5696879	0					
ANR	5698349	Argument	sizeof ( buf ) - 1		5696879	2					
ANR	5698350	AdditiveExpression	sizeof ( buf ) - 1		5696879	0		-			
ANR	5698351	SizeofExpression	sizeof ( buf )		5696879	0					
ANR	5698352	Sizeof	sizeof		5696879	0					
ANR	5698353	SizeofOperand	buf		5696879	1					
ANR	5698354	PrimaryExpression	1		5696879	1					
ANR	5698355	IfStatement	if ( length < 1 )		5696879	2					
ANR	5698356	Condition	length < 1	803:8:19577:19586	5696879	0	True				
ANR	5698357	RelationalExpression	length < 1		5696879	0		<			
ANR	5698358	Identifier	length		5696879	0					
ANR	5698359	PrimaryExpression	1		5696879	1					
ANR	5698360	CompoundStatement		269:20:5781:5781	5696879	1					
ANR	5698361	BreakStatement	break ;	804:5:19596:19601	5696879	0	True				
ANR	5698362	IfStatement	if ( len > 0 && len < length )		5696879	3					
ANR	5698363	Condition	len > 0 && len < length	806:8:19617:19639	5696879	0	True				
ANR	5698364	AndExpression	len > 0 && len < length		5696879	0		&&			
ANR	5698365	RelationalExpression	len > 0		5696879	0		>			
ANR	5698366	Identifier	len		5696879	0					
ANR	5698367	PrimaryExpression	0		5696879	1					
ANR	5698368	RelationalExpression	len < length		5696879	1		<			
ANR	5698369	Identifier	len		5696879	0					
ANR	5698370	Identifier	length		5696879	1					
ANR	5698371	CompoundStatement		272:33:5834:5834	5696879	1					
ANR	5698372	ExpressionStatement	length = len	807:5:19649:19661	5696879	0	True				
ANR	5698373	AssignmentExpression	length = len		5696879	0		=			
ANR	5698374	Identifier	length		5696879	0					
ANR	5698375	Identifier	len		5696879	1					
ANR	5698376	ExpressionStatement	buf [ length ] = 0	809:4:19673:19688	5696879	4	True				
ANR	5698377	AssignmentExpression	buf [ length ] = 0		5696879	0		=			
ANR	5698378	ArrayIndexing	buf [ length ]		5696879	0					
ANR	5698379	Identifier	buf		5696879	0					
ANR	5698380	Identifier	length		5696879	1					
ANR	5698381	PrimaryExpression	0		5696879	1					
ANR	5698382	IfStatement	if ( ( ! bin || ! dis ) && feof ( stdin ) )		5696879	5					
ANR	5698383	Condition	( ! bin || ! dis ) && feof ( stdin )	810:8:19698:19727	5696879	0	True				
ANR	5698384	AndExpression	( ! bin || ! dis ) && feof ( stdin )		5696879	0		&&			
ANR	5698385	OrExpression	! bin || ! dis		5696879	0		||			
ANR	5698386	UnaryOperationExpression	! bin		5696879	0					
ANR	5698387	UnaryOperator	!		5696879	0					
ANR	5698388	Identifier	bin		5696879	1					
ANR	5698389	UnaryOperationExpression	! dis		5696879	1					
ANR	5698390	UnaryOperator	!		5696879	0					
ANR	5698391	Identifier	dis		5696879	1					
ANR	5698392	CallExpression	feof ( stdin )		5696879	1					
ANR	5698393	Callee	feof		5696879	0					
ANR	5698394	Identifier	feof		5696879	0					
ANR	5698395	ArgumentList	stdin		5696879	1					
ANR	5698396	Argument	stdin		5696879	0					
ANR	5698397	Identifier	stdin		5696879	0					
ANR	5698398	CompoundStatement		276:40:5922:5922	5696879	1					
ANR	5698399	BreakStatement	break ;	811:5:19737:19742	5696879	0	True				
ANR	5698400	IfStatement	if ( skip && length > skip )		5696879	6					
ANR	5698401	Condition	skip && length > skip	813:8:19758:19778	5696879	0	True				
ANR	5698402	AndExpression	skip && length > skip		5696879	0		&&			
ANR	5698403	Identifier	skip		5696879	0					
ANR	5698404	RelationalExpression	length > skip		5696879	1		>			
ANR	5698405	Identifier	length		5696879	0					
ANR	5698406	Identifier	skip		5696879	1					
ANR	5698407	CompoundStatement		279:31:5973:5973	5696879	1					
ANR	5698408	IfStatement	if ( bin )		5696879	0					
ANR	5698409	Condition	bin	814:9:19792:19794	5696879	0	True				
ANR	5698410	Identifier	bin		5696879	0					
ANR	5698411	CompoundStatement		280:14:5989:5989	5696879	1					
ANR	5698412	ExpressionStatement	"memmove ( buf , buf + skip , length - skip + 1 )"	815:6:19805:19849	5696879	0	True				
ANR	5698413	CallExpression	"memmove ( buf , buf + skip , length - skip + 1 )"		5696879	0					
ANR	5698414	Callee	memmove		5696879	0					
ANR	5698415	Identifier	memmove		5696879	0					
ANR	5698416	ArgumentList	buf		5696879	1					
ANR	5698417	Argument	buf		5696879	0					
ANR	5698418	Identifier	buf		5696879	0					
ANR	5698419	Argument	buf + skip		5696879	1					
ANR	5698420	AdditiveExpression	buf + skip		5696879	0		+			
ANR	5698421	Identifier	buf		5696879	0					
ANR	5698422	Identifier	skip		5696879	1					
ANR	5698423	Argument	length - skip + 1		5696879	2					
ANR	5698424	AdditiveExpression	length - skip + 1		5696879	0		-			
ANR	5698425	Identifier	length		5696879	0					
ANR	5698426	AdditiveExpression	skip + 1		5696879	1		+			
ANR	5698427	Identifier	skip		5696879	0					
ANR	5698428	PrimaryExpression	1		5696879	1					
ANR	5698429	ExpressionStatement	length -= skip	816:6:19857:19871	5696879	1	True				
ANR	5698430	AssignmentExpression	length -= skip		5696879	0		-=			
ANR	5698431	Identifier	length		5696879	0					
ANR	5698432	Identifier	skip		5696879	1					
ANR	5698433	IfStatement	if ( ! bin || ! dis )		5696879	7					
ANR	5698434	Condition	! bin || ! dis	819:8:19894:19905	5696879	0	True				
ANR	5698435	OrExpression	! bin || ! dis		5696879	0		||			
ANR	5698436	UnaryOperationExpression	! bin		5696879	0					
ANR	5698437	UnaryOperator	!		5696879	0					
ANR	5698438	Identifier	bin		5696879	1					
ANR	5698439	UnaryOperationExpression	! dis		5696879	1					
ANR	5698440	UnaryOperator	!		5696879	0					
ANR	5698441	Identifier	dis		5696879	1					
ANR	5698442	CompoundStatement		286:5:6107:6146	5696879	1					
ANR	5698443	IdentifierDeclStatement	int buflen = strlen ( ( const char * ) buf ) ;	820:5:19915:19954	5696879	0	True				
ANR	5698444	IdentifierDecl	buflen = strlen ( ( const char * ) buf )		5696879	0					
ANR	5698445	IdentifierDeclType	int		5696879	0					
ANR	5698446	Identifier	buflen		5696879	1					
ANR	5698447	AssignmentExpression	buflen = strlen ( ( const char * ) buf )		5696879	2		=			
ANR	5698448	Identifier	buflen		5696879	0					
ANR	5698449	CallExpression	strlen ( ( const char * ) buf )		5696879	1					
ANR	5698450	Callee	strlen		5696879	0					
ANR	5698451	Identifier	strlen		5696879	0					
ANR	5698452	ArgumentList	( const char * ) buf		5696879	1					
ANR	5698453	Argument	( const char * ) buf		5696879	0					
ANR	5698454	CastExpression	( const char * ) buf		5696879	0					
ANR	5698455	CastTarget	const char *		5696879	0					
ANR	5698456	Identifier	buf		5696879	1					
ANR	5698457	IfStatement	if ( buf [ buflen ] == '\\n' )		5696879	1					
ANR	5698458	Condition	buf [ buflen ] == '\\n'	821:9:19965:19983	5696879	0	True				
ANR	5698459	EqualityExpression	buf [ buflen ] == '\\n'		5696879	0		==			
ANR	5698460	ArrayIndexing	buf [ buflen ]		5696879	0					
ANR	5698461	Identifier	buf		5696879	0					
ANR	5698462	Identifier	buflen		5696879	1					
ANR	5698463	PrimaryExpression	'\\n'		5696879	1					
ANR	5698464	CompoundStatement		287:30:6178:6178	5696879	1					
ANR	5698465	ExpressionStatement	buf [ buflen - 1 ] = '\\0'	822:6:19994:20016	5696879	0	True				
ANR	5698466	AssignmentExpression	buf [ buflen - 1 ] = '\\0'		5696879	0		=			
ANR	5698467	ArrayIndexing	buf [ buflen - 1 ]		5696879	0					
ANR	5698468	Identifier	buf		5696879	0					
ANR	5698469	AdditiveExpression	buflen - 1		5696879	1		-			
ANR	5698470	Identifier	buflen		5696879	0					
ANR	5698471	PrimaryExpression	1		5696879	1					
ANR	5698472	PrimaryExpression	'\\0'		5696879	1					
ANR	5698473	IfStatement	if ( dis )		5696879	8					
ANR	5698474	Condition	dis	825:8:20039:20041	5696879	0	True				
ANR	5698475	Identifier	dis		5696879	0					
ANR	5698476	CompoundStatement		291:13:6236:6236	5696879	1					
ANR	5698477	ExpressionStatement	"ret = rasm_disasm ( as , ( char * ) buf , offset , length , as -> a -> bits , ascii , bin , dis - 1 )"	826:5:20051:20136	5696879	0	True				
ANR	5698478	AssignmentExpression	"ret = rasm_disasm ( as , ( char * ) buf , offset , length , as -> a -> bits , ascii , bin , dis - 1 )"		5696879	0		=			
ANR	5698479	Identifier	ret		5696879	0					
ANR	5698480	CallExpression	"rasm_disasm ( as , ( char * ) buf , offset , length , as -> a -> bits , ascii , bin , dis - 1 )"		5696879	1					
ANR	5698481	Callee	rasm_disasm		5696879	0					
ANR	5698482	Identifier	rasm_disasm		5696879	0					
ANR	5698483	ArgumentList	as		5696879	1					
ANR	5698484	Argument	as		5696879	0					
ANR	5698485	Identifier	as		5696879	0					
ANR	5698486	Argument	( char * ) buf		5696879	1					
ANR	5698487	CastExpression	( char * ) buf		5696879	0					
ANR	5698488	CastTarget	char *		5696879	0					
ANR	5698489	Identifier	buf		5696879	1					
ANR	5698490	Argument	offset		5696879	2					
ANR	5698491	Identifier	offset		5696879	0					
ANR	5698492	Argument	length		5696879	3					
ANR	5698493	Identifier	length		5696879	0					
ANR	5698494	Argument	as -> a -> bits		5696879	4					
ANR	5698495	PtrMemberAccess	as -> a -> bits		5696879	0					
ANR	5698496	PtrMemberAccess	as -> a		5696879	0					
ANR	5698497	Identifier	as		5696879	0					
ANR	5698498	Identifier	a		5696879	1					
ANR	5698499	Identifier	bits		5696879	1					
ANR	5698500	Argument	ascii		5696879	5					
ANR	5698501	Identifier	ascii		5696879	0					
ANR	5698502	Argument	bin		5696879	6					
ANR	5698503	Identifier	bin		5696879	0					
ANR	5698504	Argument	dis - 1		5696879	7					
ANR	5698505	AdditiveExpression	dis - 1		5696879	0		-			
ANR	5698506	Identifier	dis		5696879	0					
ANR	5698507	PrimaryExpression	1		5696879	1					
ANR	5698508	ElseStatement	else		5696879	0					
ANR	5698509	IfStatement	if ( analinfo )		5696879	0					
ANR	5698510	Condition	analinfo	827:15:20153:20160	5696879	0	True				
ANR	5698511	Identifier	analinfo		5696879	0					
ANR	5698512	CompoundStatement		293:25:6355:6355	5696879	1					
ANR	5698513	ExpressionStatement	"ret = show_analinfo ( as , ( const char * ) buf , offset )"	828:5:20170:20221	5696879	0	True				
ANR	5698514	AssignmentExpression	"ret = show_analinfo ( as , ( const char * ) buf , offset )"		5696879	0		=			
ANR	5698515	Identifier	ret		5696879	0					
ANR	5698516	CallExpression	"show_analinfo ( as , ( const char * ) buf , offset )"		5696879	1					
ANR	5698517	Callee	show_analinfo		5696879	0					
ANR	5698518	Identifier	show_analinfo		5696879	0					
ANR	5698519	ArgumentList	as		5696879	1					
ANR	5698520	Argument	as		5696879	0					
ANR	5698521	Identifier	as		5696879	0					
ANR	5698522	Argument	( const char * ) buf		5696879	1					
ANR	5698523	CastExpression	( const char * ) buf		5696879	0					
ANR	5698524	CastTarget	const char *		5696879	0					
ANR	5698525	Identifier	buf		5696879	1					
ANR	5698526	Argument	offset		5696879	2					
ANR	5698527	Identifier	offset		5696879	0					
ANR	5698528	ElseStatement	else		5696879	0					
ANR	5698529	CompoundStatement		295:11:6426:6426	5696879	0					
ANR	5698530	ExpressionStatement	"ret = rasm_asm ( as , ( const char * ) buf , offset , length , as -> a -> bits , bin , use_spp , hexwords )"	830:5:20241:20332	5696879	0	True				
ANR	5698531	AssignmentExpression	"ret = rasm_asm ( as , ( const char * ) buf , offset , length , as -> a -> bits , bin , use_spp , hexwords )"		5696879	0		=			
ANR	5698532	Identifier	ret		5696879	0					
ANR	5698533	CallExpression	"rasm_asm ( as , ( const char * ) buf , offset , length , as -> a -> bits , bin , use_spp , hexwords )"		5696879	1					
ANR	5698534	Callee	rasm_asm		5696879	0					
ANR	5698535	Identifier	rasm_asm		5696879	0					
ANR	5698536	ArgumentList	as		5696879	1					
ANR	5698537	Argument	as		5696879	0					
ANR	5698538	Identifier	as		5696879	0					
ANR	5698539	Argument	( const char * ) buf		5696879	1					
ANR	5698540	CastExpression	( const char * ) buf		5696879	0					
ANR	5698541	CastTarget	const char *		5696879	0					
ANR	5698542	Identifier	buf		5696879	1					
ANR	5698543	Argument	offset		5696879	2					
ANR	5698544	Identifier	offset		5696879	0					
ANR	5698545	Argument	length		5696879	3					
ANR	5698546	Identifier	length		5696879	0					
ANR	5698547	Argument	as -> a -> bits		5696879	4					
ANR	5698548	PtrMemberAccess	as -> a -> bits		5696879	0					
ANR	5698549	PtrMemberAccess	as -> a		5696879	0					
ANR	5698550	Identifier	as		5696879	0					
ANR	5698551	Identifier	a		5696879	1					
ANR	5698552	Identifier	bits		5696879	1					
ANR	5698553	Argument	bin		5696879	5					
ANR	5698554	Identifier	bin		5696879	0					
ANR	5698555	Argument	use_spp		5696879	6					
ANR	5698556	Identifier	use_spp		5696879	0					
ANR	5698557	Argument	hexwords		5696879	7					
ANR	5698558	Identifier	hexwords		5696879	0					
ANR	5698559	ExpressionStatement	idx += ret	832:4:20344:20354	5696879	9	True				
ANR	5698560	AssignmentExpression	idx += ret		5696879	0		+=			
ANR	5698561	Identifier	idx		5696879	0					
ANR	5698562	Identifier	ret		5696879	1					
ANR	5698563	ExpressionStatement	offset += ret	833:4:20360:20373	5696879	10	True				
ANR	5698564	AssignmentExpression	offset += ret		5696879	0		+=			
ANR	5698565	Identifier	offset		5696879	0					
ANR	5698566	Identifier	ret		5696879	1					
ANR	5698567	IfStatement	if ( ! ret )		5696879	11					
ANR	5698568	Condition	! ret	834:8:20383:20386	5696879	0	True				
ANR	5698569	UnaryOperationExpression	! ret		5696879	0					
ANR	5698570	UnaryOperator	!		5696879	0					
ANR	5698571	Identifier	ret		5696879	1					
ANR	5698572	CompoundStatement		300:14:6581:6581	5696879	1					
ANR	5698573	GotoStatement	goto beach ;	835:5:20396:20406	5696879	0	True				
ANR	5698574	Identifier	beach		5696879	0					
ANR	5698575	Condition	! len || idx < length	837:12:20426:20445	5696879	1	True				
ANR	5698576	OrExpression	! len || idx < length		5696879	0		||			
ANR	5698577	UnaryOperationExpression	! len		5696879	0					
ANR	5698578	UnaryOperator	!		5696879	0					
ANR	5698579	Identifier	len		5696879	1					
ANR	5698580	RelationalExpression	idx < length		5696879	1		<			
ANR	5698581	Identifier	idx		5696879	0					
ANR	5698582	Identifier	length		5696879	1					
ANR	5698583	ExpressionStatement	ret = idx	838:3:20452:20461	5696879	2	True				
ANR	5698584	AssignmentExpression	ret = idx		5696879	0		=			
ANR	5698585	Identifier	ret		5696879	0					
ANR	5698586	Identifier	idx		5696879	1					
ANR	5698587	GotoStatement	goto beach ;	839:3:20466:20476	5696879	3	True				
ANR	5698588	Identifier	beach		5696879	0					
ANR	5698589	IfStatement	if ( dis )		5696879	1					
ANR	5698590	Condition	dis	841:6:20488:20490	5696879	0	True				
ANR	5698591	Identifier	dis		5696879	0					
ANR	5698592	CompoundStatement		308:3:6690:6719	5696879	1					
ANR	5698593	IdentifierDeclStatement	char * usrstr = argv [ r_optind ] ;	842:3:20498:20527	5696879	0	True				
ANR	5698594	IdentifierDecl	* usrstr = argv [ r_optind ]		5696879	0					
ANR	5698595	IdentifierDeclType	char *		5696879	0					
ANR	5698596	Identifier	usrstr		5696879	1					
ANR	5698597	AssignmentExpression	* usrstr = argv [ r_optind ]		5696879	2		=			
ANR	5698598	Identifier	usrstr		5696879	0					
ANR	5698599	ArrayIndexing	argv [ r_optind ]		5696879	1					
ANR	5698600	Identifier	argv		5696879	0					
ANR	5698601	Identifier	r_optind		5696879	1					
ANR	5698602	ExpressionStatement	len = strlen ( usrstr )	843:3:20532:20553	5696879	1	True				
ANR	5698603	AssignmentExpression	len = strlen ( usrstr )		5696879	0		=			
ANR	5698604	Identifier	len		5696879	0					
ANR	5698605	CallExpression	strlen ( usrstr )		5696879	1					
ANR	5698606	Callee	strlen		5696879	0					
ANR	5698607	Identifier	strlen		5696879	0					
ANR	5698608	ArgumentList	usrstr		5696879	1					
ANR	5698609	Argument	usrstr		5696879	0					
ANR	5698610	Identifier	usrstr		5696879	0					
ANR	5698611	IfStatement	if ( skip && len > skip )		5696879	2					
ANR	5698612	Condition	skip && len > skip	844:7:20562:20579	5696879	0	True				
ANR	5698613	AndExpression	skip && len > skip		5696879	0		&&			
ANR	5698614	Identifier	skip		5696879	0					
ANR	5698615	RelationalExpression	len > skip		5696879	1		>			
ANR	5698616	Identifier	len		5696879	0					
ANR	5698617	Identifier	skip		5696879	1					
ANR	5698618	CompoundStatement		310:27:6774:6774	5696879	1					
ANR	5698619	ExpressionStatement	skip *= 2	845:4:20588:20597	5696879	0	True				
ANR	5698620	AssignmentExpression	skip *= 2		5696879	0		*=			
ANR	5698621	Identifier	skip		5696879	0					
ANR	5698622	PrimaryExpression	2		5696879	1					
ANR	5698623	ExpressionStatement	"memmove ( usrstr , usrstr + skip , len - skip )"	847:4:20655:20698	5696879	1	True				
ANR	5698624	CallExpression	"memmove ( usrstr , usrstr + skip , len - skip )"		5696879	0					
ANR	5698625	Callee	memmove		5696879	0					
ANR	5698626	Identifier	memmove		5696879	0					
ANR	5698627	ArgumentList	usrstr		5696879	1					
ANR	5698628	Argument	usrstr		5696879	0					
ANR	5698629	Identifier	usrstr		5696879	0					
ANR	5698630	Argument	usrstr + skip		5696879	1					
ANR	5698631	AdditiveExpression	usrstr + skip		5696879	0		+			
ANR	5698632	Identifier	usrstr		5696879	0					
ANR	5698633	Identifier	skip		5696879	1					
ANR	5698634	Argument	len - skip		5696879	2					
ANR	5698635	AdditiveExpression	len - skip		5696879	0		-			
ANR	5698636	Identifier	len		5696879	0					
ANR	5698637	Identifier	skip		5696879	1					
ANR	5698638	ExpressionStatement	len -= skip	848:4:20704:20715	5696879	2	True				
ANR	5698639	AssignmentExpression	len -= skip		5696879	0		-=			
ANR	5698640	Identifier	len		5696879	0					
ANR	5698641	Identifier	skip		5696879	1					
ANR	5698642	ExpressionStatement	usrstr [ len ] = 0	849:4:20721:20736	5696879	3	True				
ANR	5698643	AssignmentExpression	usrstr [ len ] = 0		5696879	0		=			
ANR	5698644	ArrayIndexing	usrstr [ len ]		5696879	0					
ANR	5698645	Identifier	usrstr		5696879	0					
ANR	5698646	Identifier	len		5696879	1					
ANR	5698647	PrimaryExpression	0		5696879	1					
ANR	5698648	IfStatement	"if ( ! strncmp ( usrstr , ""0x"" , 2 ) )"		5696879	3					
ANR	5698649	Condition	"! strncmp ( usrstr , ""0x"" , 2 )"	851:7:20750:20775	5696879	0	True				
ANR	5698650	UnaryOperationExpression	"! strncmp ( usrstr , ""0x"" , 2 )"		5696879	0					
ANR	5698651	UnaryOperator	!		5696879	0					
ANR	5698652	CallExpression	"strncmp ( usrstr , ""0x"" , 2 )"		5696879	1					
ANR	5698653	Callee	strncmp		5696879	0					
ANR	5698654	Identifier	strncmp		5696879	0					
ANR	5698655	ArgumentList	usrstr		5696879	1					
ANR	5698656	Argument	usrstr		5696879	0					
ANR	5698657	Identifier	usrstr		5696879	0					
ANR	5698658	Argument	"""0x"""		5696879	1					
ANR	5698659	PrimaryExpression	"""0x"""		5696879	0					
ANR	5698660	Argument	2		5696879	2					
ANR	5698661	PrimaryExpression	2		5696879	0					
ANR	5698662	CompoundStatement		317:35:6970:6970	5696879	1					
ANR	5698663	ExpressionStatement	usrstr += 2	852:4:20784:20795	5696879	0	True				
ANR	5698664	AssignmentExpression	usrstr += 2		5696879	0		+=			
ANR	5698665	Identifier	usrstr		5696879	0					
ANR	5698666	PrimaryExpression	2		5696879	1					
ANR	5698667	IfStatement	if ( rad )		5696879	4					
ANR	5698668	Condition	rad	854:7:20809:20811	5696879	0	True				
ANR	5698669	Identifier	rad		5696879	0					
ANR	5698670	CompoundStatement		320:12:7006:7006	5696879	1					
ANR	5698671	ExpressionStatement	as -> oneliner = true	855:4:20820:20839	5696879	0	True				
ANR	5698672	AssignmentExpression	as -> oneliner = true		5696879	0		=			
ANR	5698673	PtrMemberAccess	as -> oneliner		5696879	0					
ANR	5698674	Identifier	as		5696879	0					
ANR	5698675	Identifier	oneliner		5696879	1					
ANR	5698676	Identifier	true		5696879	1					
ANR	5698677	ExpressionStatement	"printf ( ""e asm.arch=%s\\n"" , arch ? arch : R_SYS_ARCH )"	856:4:20845:20895	5696879	1	True				
ANR	5698678	CallExpression	"printf ( ""e asm.arch=%s\\n"" , arch ? arch : R_SYS_ARCH )"		5696879	0					
ANR	5698679	Callee	printf		5696879	0					
ANR	5698680	Identifier	printf		5696879	0					
ANR	5698681	ArgumentList	"""e asm.arch=%s\\n"""		5696879	1					
ANR	5698682	Argument	"""e asm.arch=%s\\n"""		5696879	0					
ANR	5698683	PrimaryExpression	"""e asm.arch=%s\\n"""		5696879	0					
ANR	5698684	Argument	arch ? arch : R_SYS_ARCH		5696879	1					
ANR	5698685	ConditionalExpression	arch ? arch : R_SYS_ARCH		5696879	0					
ANR	5698686	Condition	arch		5696879	0					
ANR	5698687	Identifier	arch		5696879	0					
ANR	5698688	Identifier	arch		5696879	1					
ANR	5698689	Identifier	R_SYS_ARCH		5696879	2					
ANR	5698690	ExpressionStatement	"printf ( ""e asm.bits=%d\\n"" , bits )"	857:4:20901:20933	5696879	2	True				
ANR	5698691	CallExpression	"printf ( ""e asm.bits=%d\\n"" , bits )"		5696879	0					
ANR	5698692	Callee	printf		5696879	0					
ANR	5698693	Identifier	printf		5696879	0					
ANR	5698694	ArgumentList	"""e asm.bits=%d\\n"""		5696879	1					
ANR	5698695	Argument	"""e asm.bits=%d\\n"""		5696879	0					
ANR	5698696	PrimaryExpression	"""e asm.bits=%d\\n"""		5696879	0					
ANR	5698697	Argument	bits		5696879	1					
ANR	5698698	Identifier	bits		5696879	0					
ANR	5698699	ExpressionStatement	"printf ( ""\\""wa "" )"	858:4:20939:20955	5696879	3	True				
ANR	5698700	CallExpression	"printf ( ""\\""wa "" )"		5696879	0					
ANR	5698701	Callee	printf		5696879	0					
ANR	5698702	Identifier	printf		5696879	0					
ANR	5698703	ArgumentList	"""\\""wa """		5696879	1					
ANR	5698704	Argument	"""\\""wa """		5696879	0					
ANR	5698705	PrimaryExpression	"""\\""wa """		5696879	0					
ANR	5698706	ExpressionStatement	"ret = rasm_disasm ( as , ( char * ) usrstr , offset , len , as -> a -> bits , ascii , bin , dis - 1 )"	860:3:20965:21055	5696879	5	True				
ANR	5698707	AssignmentExpression	"ret = rasm_disasm ( as , ( char * ) usrstr , offset , len , as -> a -> bits , ascii , bin , dis - 1 )"		5696879	0		=			
ANR	5698708	Identifier	ret		5696879	0					
ANR	5698709	CallExpression	"rasm_disasm ( as , ( char * ) usrstr , offset , len , as -> a -> bits , ascii , bin , dis - 1 )"		5696879	1					
ANR	5698710	Callee	rasm_disasm		5696879	0					
ANR	5698711	Identifier	rasm_disasm		5696879	0					
ANR	5698712	ArgumentList	as		5696879	1					
ANR	5698713	Argument	as		5696879	0					
ANR	5698714	Identifier	as		5696879	0					
ANR	5698715	Argument	( char * ) usrstr		5696879	1					
ANR	5698716	CastExpression	( char * ) usrstr		5696879	0					
ANR	5698717	CastTarget	char *		5696879	0					
ANR	5698718	Identifier	usrstr		5696879	1					
ANR	5698719	Argument	offset		5696879	2					
ANR	5698720	Identifier	offset		5696879	0					
ANR	5698721	Argument	len		5696879	3					
ANR	5698722	Identifier	len		5696879	0					
ANR	5698723	Argument	as -> a -> bits		5696879	4					
ANR	5698724	PtrMemberAccess	as -> a -> bits		5696879	0					
ANR	5698725	PtrMemberAccess	as -> a		5696879	0					
ANR	5698726	Identifier	as		5696879	0					
ANR	5698727	Identifier	a		5696879	1					
ANR	5698728	Identifier	bits		5696879	1					
ANR	5698729	Argument	ascii		5696879	5					
ANR	5698730	Identifier	ascii		5696879	0					
ANR	5698731	Argument	bin		5696879	6					
ANR	5698732	Identifier	bin		5696879	0					
ANR	5698733	Argument	dis - 1		5696879	7					
ANR	5698734	AdditiveExpression	dis - 1		5696879	0		-			
ANR	5698735	Identifier	dis		5696879	0					
ANR	5698736	PrimaryExpression	1		5696879	1					
ANR	5698737	ElseStatement	else		5696879	0					
ANR	5698738	IfStatement	if ( analinfo )		5696879	0					
ANR	5698739	Condition	analinfo	862:13:21070:21077	5696879	0	True				
ANR	5698740	Identifier	analinfo		5696879	0					
ANR	5698741	CompoundStatement		328:23:7272:7272	5696879	1					
ANR	5698742	ExpressionStatement	"ret = show_analinfo ( as , ( const char * ) argv [ r_optind ] , offset )"	863:3:21085:21147	5696879	0	True				
ANR	5698743	AssignmentExpression	"ret = show_analinfo ( as , ( const char * ) argv [ r_optind ] , offset )"		5696879	0		=			
ANR	5698744	Identifier	ret		5696879	0					
ANR	5698745	CallExpression	"show_analinfo ( as , ( const char * ) argv [ r_optind ] , offset )"		5696879	1					
ANR	5698746	Callee	show_analinfo		5696879	0					
ANR	5698747	Identifier	show_analinfo		5696879	0					
ANR	5698748	ArgumentList	as		5696879	1					
ANR	5698749	Argument	as		5696879	0					
ANR	5698750	Identifier	as		5696879	0					
ANR	5698751	Argument	( const char * ) argv [ r_optind ]		5696879	1					
ANR	5698752	CastExpression	( const char * ) argv [ r_optind ]		5696879	0					
ANR	5698753	CastTarget	const char *		5696879	0					
ANR	5698754	ArrayIndexing	argv [ r_optind ]		5696879	1					
ANR	5698755	Identifier	argv		5696879	0					
ANR	5698756	Identifier	r_optind		5696879	1					
ANR	5698757	Argument	offset		5696879	2					
ANR	5698758	Identifier	offset		5696879	0					
ANR	5698759	ElseStatement	else		5696879	0					
ANR	5698760	CompoundStatement		330:9:7350:7350	5696879	0					
ANR	5698761	ExpressionStatement	"ret = print_assembly_output ( as , argv [ r_optind ] , offset , len , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"	865:3:21163:21279	5696879	0	True				
ANR	5698762	AssignmentExpression	"ret = print_assembly_output ( as , argv [ r_optind ] , offset , len , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"		5696879	0		=			
ANR	5698763	Identifier	ret		5696879	0					
ANR	5698764	CallExpression	"print_assembly_output ( as , argv [ r_optind ] , offset , len , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"		5696879	1					
ANR	5698765	Callee	print_assembly_output		5696879	0					
ANR	5698766	Identifier	print_assembly_output		5696879	0					
ANR	5698767	ArgumentList	as		5696879	1					
ANR	5698768	Argument	as		5696879	0					
ANR	5698769	Identifier	as		5696879	0					
ANR	5698770	Argument	argv [ r_optind ]		5696879	1					
ANR	5698771	ArrayIndexing	argv [ r_optind ]		5696879	0					
ANR	5698772	Identifier	argv		5696879	0					
ANR	5698773	Identifier	r_optind		5696879	1					
ANR	5698774	Argument	offset		5696879	2					
ANR	5698775	Identifier	offset		5696879	0					
ANR	5698776	Argument	len		5696879	3					
ANR	5698777	Identifier	len		5696879	0					
ANR	5698778	Argument	as -> a -> bits		5696879	4					
ANR	5698779	PtrMemberAccess	as -> a -> bits		5696879	0					
ANR	5698780	PtrMemberAccess	as -> a		5696879	0					
ANR	5698781	Identifier	as		5696879	0					
ANR	5698782	Identifier	a		5696879	1					
ANR	5698783	Identifier	bits		5696879	1					
ANR	5698784	Argument	bin		5696879	5					
ANR	5698785	Identifier	bin		5696879	0					
ANR	5698786	Argument	use_spp		5696879	6					
ANR	5698787	Identifier	use_spp		5696879	0					
ANR	5698788	Argument	rad		5696879	7					
ANR	5698789	Identifier	rad		5696879	0					
ANR	5698790	Argument	hexwords		5696879	8					
ANR	5698791	Identifier	hexwords		5696879	0					
ANR	5698792	Argument	arch		5696879	9					
ANR	5698793	Identifier	arch		5696879	0					
ANR	5698794	IfStatement	if ( ! ret )		5696879	2					
ANR	5698795	Condition	! ret	868:6:21291:21294	5696879	0	True				
ANR	5698796	UnaryOperationExpression	! ret		5696879	0					
ANR	5698797	UnaryOperator	!		5696879	0					
ANR	5698798	Identifier	ret		5696879	1					
ANR	5698799	CompoundStatement		334:12:7489:7489	5696879	1					
ANR	5698800	ExpressionStatement	"eprintf ( ""invalid\\n"" )"	869:3:21302:21323	5696879	0	True				
ANR	5698801	CallExpression	"eprintf ( ""invalid\\n"" )"		5696879	0					
ANR	5698802	Callee	eprintf		5696879	0					
ANR	5698803	Identifier	eprintf		5696879	0					
ANR	5698804	ArgumentList	"""invalid\\n"""		5696879	1					
ANR	5698805	Argument	"""invalid\\n"""		5696879	0					
ANR	5698806	PrimaryExpression	"""invalid\\n"""		5696879	0					
ANR	5698807	ExpressionStatement	ret = ! ret	871:2:21331:21341	5696879	3	True				
ANR	5698808	AssignmentExpression	ret = ! ret		5696879	0		=			
ANR	5698809	Identifier	ret		5696879	0					
ANR	5698810	UnaryOperationExpression	! ret		5696879	1					
ANR	5698811	UnaryOperator	!		5696879	0					
ANR	5698812	Identifier	ret		5696879	1					
ANR	5698813	Label	beach :	873:0:21346:21351	5696879	30	True				
ANR	5698814	Identifier	beach		5696879	0					
ANR	5698815	ExpressionStatement	__as_free ( as )	874:1:21354:21368	5696879	31	True				
ANR	5698816	CallExpression	__as_free ( as )		5696879	0					
ANR	5698817	Callee	__as_free		5696879	0					
ANR	5698818	Identifier	__as_free		5696879	0					
ANR	5698819	ArgumentList	as		5696879	1					
ANR	5698820	Argument	as		5696879	0					
ANR	5698821	Identifier	as		5696879	0					
ANR	5698822	ExpressionStatement	free ( r2arch )	876:1:21372:21385	5696879	32	True				
ANR	5698823	CallExpression	free ( r2arch )		5696879	0					
ANR	5698824	Callee	free		5696879	0					
ANR	5698825	Identifier	free		5696879	0					
ANR	5698826	ArgumentList	r2arch		5696879	1					
ANR	5698827	Argument	r2arch		5696879	0					
ANR	5698828	Identifier	r2arch		5696879	0					
ANR	5698829	IfStatement	if ( fd != - 1 )		5696879	33					
ANR	5698830	Condition	fd != - 1	877:5:21392:21399	5696879	0	True				
ANR	5698831	EqualityExpression	fd != - 1		5696879	0		!=			
ANR	5698832	Identifier	fd		5696879	0					
ANR	5698833	UnaryOperationExpression	- 1		5696879	1					
ANR	5698834	UnaryOperator	-		5696879	0					
ANR	5698835	PrimaryExpression	1		5696879	1					
ANR	5698836	CompoundStatement		343:15:7594:7594	5696879	1					
ANR	5698837	ExpressionStatement	close ( fd )	878:2:21406:21416	5696879	0	True				
ANR	5698838	CallExpression	close ( fd )		5696879	0					
ANR	5698839	Callee	close		5696879	0					
ANR	5698840	Identifier	close		5696879	0					
ANR	5698841	ArgumentList	fd		5696879	1					
ANR	5698842	Argument	fd		5696879	0					
ANR	5698843	Identifier	fd		5696879	0					
ANR	5698844	ReturnStatement	return ret ;	880:1:21422:21432	5696879	34	True				
ANR	5698845	Identifier	ret		5696879	0					
ANR	5698846	ReturnType	R_API int		5696879	1					
ANR	5698847	Identifier	r_main_rasm2		5696879	2					
ANR	5698848	ParameterList	"int argc , char * argv [ ]"		5696879	3					
ANR	5698849	Parameter	int argc	535:23:13783:13790	5696879	0	True				
ANR	5698850	ParameterType	int		5696879	0					
ANR	5698851	Identifier	argc		5696879	1					
ANR	5698852	Parameter	char * argv [ ]	535:33:13793:13804	5696879	1	True				
ANR	5698853	ParameterType	char * [ ]		5696879	0					
ANR	5698854	Identifier	argv		5696879	1					
ANR	5698855	CFGEntryNode	ENTRY		5696879		True				
ANR	5698856	CFGExitNode	EXIT		5696879		True				
ANR	5698857	Symbol	stdin		5696879						
ANR	5698858	Symbol	r_sys_getenv		5696879						
ANR	5698859	Symbol	bin		5696879						
ANR	5698860	Symbol	R_SYS_ARCH		5696879						
ANR	5698861	Symbol	strchr		5696879						
ANR	5698862	Symbol	r_asm_syntax_from_string		5696879						
ANR	5698863	Symbol	r_asm_set_big_endian		5696879						
ANR	5698864	Symbol	strncmp		5696879						
ANR	5698865	Symbol	rasm_show_help		5696879						
ANR	5698866	Symbol	rad		5696879						
ANR	5698867	Symbol	len		5696879						
ANR	5698868	Symbol	as -> a -> syscall		5696879						
ANR	5698869	Symbol	buflen		5696879						
ANR	5698870	Symbol	r2arch		5696879						
ANR	5698871	Symbol	r_file_slurp		5696879						
ANR	5698872	Symbol	* buf		5696879						
ANR	5698873	Symbol	bits		5696879						
ANR	5698874	Symbol	usrstr		5696879						
ANR	5698875	Symbol	analinfo		5696879						
ANR	5698876	Symbol	as		5696879						
ANR	5698877	Symbol	r_getopt		5696879						
ANR	5698878	Symbol	rasm_disasm		5696879						
ANR	5698879	Symbol	r_optind		5696879						
ANR	5698880	Symbol	* usrstr		5696879						
ANR	5698881	Symbol	print_assembly_output		5696879						
ANR	5698882	Symbol	r_stdin_slurp		5696879						
ANR	5698883	Symbol	as -> oneliner		5696879						
ANR	5698884	Symbol	skip		5696879						
ANR	5698885	Symbol	O_RDWR		5696879						
ANR	5698886	Symbol	file		5696879						
ANR	5698887	Symbol	r_asm_use		5696879						
ANR	5698888	Symbol	whatsop		5696879						
ANR	5698889	Symbol	* length		5696879						
ANR	5698890	Symbol	* as -> a		5696879						
ANR	5698891	Symbol	atoi		5696879						
ANR	5698892	Symbol	& length		5696879						
ANR	5698893	Symbol	c		5696879						
ANR	5698894	Symbol	kernel		5696879						
ANR	5698895	Symbol	sz		5696879						
ANR	5698896	Symbol	show_analinfo		5696879						
ANR	5698897	Symbol	isbig		5696879						
ANR	5698898	Symbol	* env_bits		5696879						
ANR	5698899	Symbol	p		5696879						
ANR	5698900	Symbol	help		5696879						
ANR	5698901	Symbol	r2bits		5696879						
ANR	5698902	Symbol	O_TRUNC		5696879						
ANR	5698903	Symbol	buf		5696879						
ANR	5698904	Symbol	s		5696879						
ANR	5698905	Symbol	* filters		5696879						
ANR	5698906	Symbol	r_asm_describe		5696879						
ANR	5698907	Symbol	arch		5696879						
ANR	5698908	Symbol	* r_optarg		5696879						
ANR	5698909	Symbol	open		5696879						
ANR	5698910	Symbol	* len		5696879						
ANR	5698911	Symbol	O_CREAT		5696879						
ANR	5698912	Symbol	* argv		5696879						
ANR	5698913	Symbol	dis		5696879						
ANR	5698914	Symbol	r_syscall_new		5696879						
ANR	5698915	Symbol	env_bits		5696879						
ANR	5698916	Symbol	strlen		5696879						
ANR	5698917	Symbol	* content		5696879						
ANR	5698918	Symbol	canbebig		5696879						
ANR	5698919	Symbol	* * as		5696879						
ANR	5698920	Symbol	ret		5696879						
ANR	5698921	Symbol	strcmp		5696879						
ANR	5698922	Symbol	NULL		5696879						
ANR	5698923	Symbol	read		5696879						
ANR	5698924	Symbol	offset		5696879						
ANR	5698925	Symbol	as -> coutput		5696879						
ANR	5698926	Symbol	as -> quiet		5696879						
ANR	5698927	Symbol	cpu		5696879						
ANR	5698928	Symbol	R2_VERSION		5696879						
ANR	5698929	Symbol	r_optarg		5696879						
ANR	5698930	Symbol	& sz		5696879						
ANR	5698931	Symbol	as -> a		5696879						
ANR	5698932	Symbol	hexwords		5696879						
ANR	5698933	Symbol	true		5696879						
ANR	5698934	Symbol	idx		5696879						
ANR	5698935	Symbol	fd		5696879						
ANR	5698936	Symbol	use_spp		5696879						
ANR	5698937	Symbol	argv		5696879						
ANR	5698938	Symbol	content		5696879						
ANR	5698939	Symbol	r_num_math		5696879						
ANR	5698940	Symbol	as -> anal		5696879						
ANR	5698941	Symbol	ascii		5696879						
ANR	5698942	Symbol	argc		5696879						
ANR	5698943	Symbol	env_arch		5696879						
ANR	5698944	Symbol	false		5696879						
ANR	5698945	Symbol	length		5696879						
ANR	5698946	Symbol	rasm_asm		5696879						
ANR	5698947	Symbol	filters		5696879						
ANR	5698948	Symbol	* buflen		5696879						
ANR	5698949	Symbol	as -> a -> bits		5696879						
ANR	5698950	Symbol	r_main_version_print		5696879						
ANR	5698951	Symbol	__as_new		5696879						
ANR	5698952	Symbol	* r_optind		5696879						
ANR	5698953	Symbol	as -> json		5696879						
ANR	5698954	Symbol	syntax		5696879						
ANR	5698955	Symbol	feof		5696879						
ANR	5698956	Symbol	* p		5696879						
ANR	5698957	Symbol	* as		5696879						
