command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2529359	File	data/converged/CVE-2019-16718~_radare2/libr_anal_var.c								
ANR	2529360	ClassDef	VarType	10:0:168:235							
ANR	2529361	DeclStmt									
ANR	2529362	Decl							bool	bool	isarg
ANR	2529363	DeclStmt									
ANR	2529364	Decl							char	char *	type
ANR	2529365	DeclStmt									
ANR	2529366	Decl							int	int	size
ANR	2529367	DeclStmt									
ANR	2529368	Decl							char	char *	name
ANR	2529369	Function	r_anal_var_display	23:0:598:1911							
ANR	2529370	FunctionDef	"r_anal_var_display (RAnal * anal , int delta , char kind , const char * type)"		2529369	0					
ANR	2529371	CompoundStatement		23:83:681:1911	2529369	0					
ANR	2529372	IdentifierDeclStatement	"char * fmt = r_type_format ( anal -> sdb_types , type ) ;"	24:1:684:733	2529369	0	True				
ANR	2529373	IdentifierDecl	"* fmt = r_type_format ( anal -> sdb_types , type )"		2529369	0					
ANR	2529374	IdentifierDeclType	char *		2529369	0					
ANR	2529375	Identifier	fmt		2529369	1					
ANR	2529376	AssignmentExpression	"* fmt = r_type_format ( anal -> sdb_types , type )"		2529369	2		=			
ANR	2529377	Identifier	fmt		2529369	0					
ANR	2529378	CallExpression	"r_type_format ( anal -> sdb_types , type )"		2529369	1					
ANR	2529379	Callee	r_type_format		2529369	0					
ANR	2529380	Identifier	r_type_format		2529369	0					
ANR	2529381	ArgumentList	anal -> sdb_types		2529369	1					
ANR	2529382	Argument	anal -> sdb_types		2529369	0					
ANR	2529383	PtrMemberAccess	anal -> sdb_types		2529369	0					
ANR	2529384	Identifier	anal		2529369	0					
ANR	2529385	Identifier	sdb_types		2529369	1					
ANR	2529386	Argument	type		2529369	1					
ANR	2529387	Identifier	type		2529369	0					
ANR	2529388	IdentifierDeclStatement	RRegItem * i ;	25:1:736:747	2529369	1	True				
ANR	2529389	IdentifierDecl	* i		2529369	0					
ANR	2529390	IdentifierDeclType	RRegItem *		2529369	0					
ANR	2529391	Identifier	i		2529369	1					
ANR	2529392	IfStatement	if ( ! fmt )		2529369	2					
ANR	2529393	Condition	! fmt	26:5:754:757	2529369	0	True				
ANR	2529394	UnaryOperationExpression	! fmt		2529369	0					
ANR	2529395	UnaryOperator	!		2529369	0					
ANR	2529396	Identifier	fmt		2529369	1					
ANR	2529397	CompoundStatement		4:11:78:78	2529369	1					
ANR	2529398	ExpressionStatement	"eprintf ( ""type:%s doesn't exist\\n"" , type )"	27:2:764:805	2529369	0	True				
ANR	2529399	CallExpression	"eprintf ( ""type:%s doesn't exist\\n"" , type )"		2529369	0					
ANR	2529400	Callee	eprintf		2529369	0					
ANR	2529401	Identifier	eprintf		2529369	0					
ANR	2529402	ArgumentList	"""type:%s doesn't exist\\n"""		2529369	1					
ANR	2529403	Argument	"""type:%s doesn't exist\\n"""		2529369	0					
ANR	2529404	PrimaryExpression	"""type:%s doesn't exist\\n"""		2529369	0					
ANR	2529405	Argument	type		2529369	1					
ANR	2529406	Identifier	type		2529369	0					
ANR	2529407	ReturnStatement	return false ;	28:2:809:821	2529369	1	True				
ANR	2529408	Identifier	false		2529369	0					
ANR	2529409	IdentifierDeclStatement	"bool usePxr = ! strcmp ( type , ""int"" ) ;"	30:1:827:862	2529369	3	True				
ANR	2529410	IdentifierDecl	"usePxr = ! strcmp ( type , ""int"" )"		2529369	0					
ANR	2529411	IdentifierDeclType	bool		2529369	0					
ANR	2529412	Identifier	usePxr		2529369	1					
ANR	2529413	AssignmentExpression	"usePxr = ! strcmp ( type , ""int"" )"		2529369	2		=			
ANR	2529414	Identifier	usePxr		2529369	0					
ANR	2529415	UnaryOperationExpression	"! strcmp ( type , ""int"" )"		2529369	1					
ANR	2529416	UnaryOperator	!		2529369	0					
ANR	2529417	CallExpression	"strcmp ( type , ""int"" )"		2529369	1					
ANR	2529418	Callee	strcmp		2529369	0					
ANR	2529419	Identifier	strcmp		2529369	0					
ANR	2529420	ArgumentList	type		2529369	1					
ANR	2529421	Argument	type		2529369	0					
ANR	2529422	Identifier	type		2529369	0					
ANR	2529423	Argument	"""int"""		2529369	1					
ANR	2529424	PrimaryExpression	"""int"""		2529369	0					
ANR	2529425	SwitchStatement	switch ( kind )		2529369	4					
ANR	2529426	Condition	kind	31:9:893:896	2529369	0	True				
ANR	2529427	Identifier	kind		2529369	0					
ANR	2529428	CompoundStatement		9:15:217:217	2529369	1					
ANR	2529429	Label	case R_ANAL_VAR_KIND_REG :	32:1:902:926	2529369	0	True				
ANR	2529430	Identifier	R_ANAL_VAR_KIND_REG		2529369	0					
ANR	2529431	ExpressionStatement	"i = r_reg_index_get ( anal -> reg , delta )"	33:2:930:968	2529369	1	True				
ANR	2529432	AssignmentExpression	"i = r_reg_index_get ( anal -> reg , delta )"		2529369	0		=			
ANR	2529433	Identifier	i		2529369	0					
ANR	2529434	CallExpression	"r_reg_index_get ( anal -> reg , delta )"		2529369	1					
ANR	2529435	Callee	r_reg_index_get		2529369	0					
ANR	2529436	Identifier	r_reg_index_get		2529369	0					
ANR	2529437	ArgumentList	anal -> reg		2529369	1					
ANR	2529438	Argument	anal -> reg		2529369	0					
ANR	2529439	PtrMemberAccess	anal -> reg		2529369	0					
ANR	2529440	Identifier	anal		2529369	0					
ANR	2529441	Identifier	reg		2529369	1					
ANR	2529442	Argument	delta		2529369	1					
ANR	2529443	Identifier	delta		2529369	0					
ANR	2529444	IfStatement	if ( i )		2529369	2					
ANR	2529445	Condition	i	34:6:976:976	2529369	0	True				
ANR	2529446	Identifier	i		2529369	0					
ANR	2529447	CompoundStatement		12:9:297:297	2529369	1					
ANR	2529448	IfStatement	if ( usePxr )		2529369	0					
ANR	2529449	Condition	usePxr	35:7:988:993	2529369	0	True				
ANR	2529450	Identifier	usePxr		2529369	0					
ANR	2529451	CompoundStatement		13:15:314:314	2529369	1					
ANR	2529452	ExpressionStatement	"anal -> cb_printf ( ""pxr $w @r:%s\\n"" , i -> name )"	36:4:1002:1045	2529369	0	True				
ANR	2529453	CallExpression	"anal -> cb_printf ( ""pxr $w @r:%s\\n"" , i -> name )"		2529369	0					
ANR	2529454	Callee	anal -> cb_printf		2529369	0					
ANR	2529455	PtrMemberAccess	anal -> cb_printf		2529369	0					
ANR	2529456	Identifier	anal		2529369	0					
ANR	2529457	Identifier	cb_printf		2529369	1					
ANR	2529458	ArgumentList	"""pxr $w @r:%s\\n"""		2529369	1					
ANR	2529459	Argument	"""pxr $w @r:%s\\n"""		2529369	0					
ANR	2529460	PrimaryExpression	"""pxr $w @r:%s\\n"""		2529369	0					
ANR	2529461	Argument	i -> name		2529369	1					
ANR	2529462	PtrMemberAccess	i -> name		2529369	0					
ANR	2529463	Identifier	i		2529369	0					
ANR	2529464	Identifier	name		2529369	1					
ANR	2529465	ElseStatement	else		2529369	0					
ANR	2529466	CompoundStatement		15:10:375:375	2529369	0					
ANR	2529467	ExpressionStatement	"anal -> cb_printf ( ""pf r (%s)\\n"" , i -> name )"	38:4:1063:1103	2529369	0	True				
ANR	2529468	CallExpression	"anal -> cb_printf ( ""pf r (%s)\\n"" , i -> name )"		2529369	0					
ANR	2529469	Callee	anal -> cb_printf		2529369	0					
ANR	2529470	PtrMemberAccess	anal -> cb_printf		2529369	0					
ANR	2529471	Identifier	anal		2529369	0					
ANR	2529472	Identifier	cb_printf		2529369	1					
ANR	2529473	ArgumentList	"""pf r (%s)\\n"""		2529369	1					
ANR	2529474	Argument	"""pf r (%s)\\n"""		2529369	0					
ANR	2529475	PrimaryExpression	"""pf r (%s)\\n"""		2529369	0					
ANR	2529476	Argument	i -> name		2529369	1					
ANR	2529477	PtrMemberAccess	i -> name		2529369	0					
ANR	2529478	Identifier	i		2529369	0					
ANR	2529479	Identifier	name		2529369	1					
ANR	2529480	ElseStatement	else		2529369	0					
ANR	2529481	CompoundStatement		18:9:437:437	2529369	0					
ANR	2529482	ExpressionStatement	"eprintf ( ""register not found\\n"" )"	41:3:1124:1156	2529369	0	True				
ANR	2529483	CallExpression	"eprintf ( ""register not found\\n"" )"		2529369	0					
ANR	2529484	Callee	eprintf		2529369	0					
ANR	2529485	Identifier	eprintf		2529369	0					
ANR	2529486	ArgumentList	"""register not found\\n"""		2529369	1					
ANR	2529487	Argument	"""register not found\\n"""		2529369	0					
ANR	2529488	PrimaryExpression	"""register not found\\n"""		2529369	0					
ANR	2529489	BreakStatement	break ;	43:2:1164:1169	2529369	3	True				
ANR	2529490	Label	case R_ANAL_VAR_KIND_BPV :	44:1:1172:1196	2529369	4	True				
ANR	2529491	Identifier	R_ANAL_VAR_KIND_BPV		2529369	0					
ANR	2529492	IfStatement	if ( delta > 0 )		2529369	5					
ANR	2529493	Condition	delta > 0	45:6:1204:1212	2529369	0	True				
ANR	2529494	RelationalExpression	delta > 0		2529369	0		>			
ANR	2529495	Identifier	delta		2529369	0					
ANR	2529496	PrimaryExpression	0		2529369	1					
ANR	2529497	CompoundStatement		23:17:533:533	2529369	1					
ANR	2529498	IfStatement	if ( usePxr )		2529369	0					
ANR	2529499	Condition	usePxr	46:7:1224:1229	2529369	0	True				
ANR	2529500	Identifier	usePxr		2529369	0					
ANR	2529501	CompoundStatement		24:15:550:550	2529369	1					
ANR	2529502	ExpressionStatement	"anal -> cb_printf ( ""pxr $w @%s+0x%x\\n"" , anal -> reg -> name [ R_REG_NAME_BP ] , delta )"	47:4:1238:1314	2529369	0	True				
ANR	2529503	CallExpression	"anal -> cb_printf ( ""pxr $w @%s+0x%x\\n"" , anal -> reg -> name [ R_REG_NAME_BP ] , delta )"		2529369	0					
ANR	2529504	Callee	anal -> cb_printf		2529369	0					
ANR	2529505	PtrMemberAccess	anal -> cb_printf		2529369	0					
ANR	2529506	Identifier	anal		2529369	0					
ANR	2529507	Identifier	cb_printf		2529369	1					
ANR	2529508	ArgumentList	"""pxr $w @%s+0x%x\\n"""		2529369	1					
ANR	2529509	Argument	"""pxr $w @%s+0x%x\\n"""		2529369	0					
ANR	2529510	PrimaryExpression	"""pxr $w @%s+0x%x\\n"""		2529369	0					
ANR	2529511	Argument	anal -> reg -> name [ R_REG_NAME_BP ]		2529369	1					
ANR	2529512	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_BP ]		2529369	0					
ANR	2529513	PtrMemberAccess	anal -> reg -> name		2529369	0					
ANR	2529514	PtrMemberAccess	anal -> reg		2529369	0					
ANR	2529515	Identifier	anal		2529369	0					
ANR	2529516	Identifier	reg		2529369	1					
ANR	2529517	Identifier	name		2529369	1					
ANR	2529518	Identifier	R_REG_NAME_BP		2529369	1					
ANR	2529519	Argument	delta		2529369	2					
ANR	2529520	Identifier	delta		2529369	0					
ANR	2529521	ElseStatement	else		2529369	0					
ANR	2529522	CompoundStatement		26:10:644:644	2529369	0					
ANR	2529523	ExpressionStatement	"anal -> cb_printf ( ""pf %s @%s+0x%x\\n"" , fmt , anal -> reg -> name [ R_REG_NAME_BP ] , delta )"	49:4:1332:1412	2529369	0	True				
ANR	2529524	CallExpression	"anal -> cb_printf ( ""pf %s @%s+0x%x\\n"" , fmt , anal -> reg -> name [ R_REG_NAME_BP ] , delta )"		2529369	0					
ANR	2529525	Callee	anal -> cb_printf		2529369	0					
ANR	2529526	PtrMemberAccess	anal -> cb_printf		2529369	0					
ANR	2529527	Identifier	anal		2529369	0					
ANR	2529528	Identifier	cb_printf		2529369	1					
ANR	2529529	ArgumentList	"""pf %s @%s+0x%x\\n"""		2529369	1					
ANR	2529530	Argument	"""pf %s @%s+0x%x\\n"""		2529369	0					
ANR	2529531	PrimaryExpression	"""pf %s @%s+0x%x\\n"""		2529369	0					
ANR	2529532	Argument	fmt		2529369	1					
ANR	2529533	Identifier	fmt		2529369	0					
ANR	2529534	Argument	anal -> reg -> name [ R_REG_NAME_BP ]		2529369	2					
ANR	2529535	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_BP ]		2529369	0					
ANR	2529536	PtrMemberAccess	anal -> reg -> name		2529369	0					
ANR	2529537	PtrMemberAccess	anal -> reg		2529369	0					
ANR	2529538	Identifier	anal		2529369	0					
ANR	2529539	Identifier	reg		2529369	1					
ANR	2529540	Identifier	name		2529369	1					
ANR	2529541	Identifier	R_REG_NAME_BP		2529369	1					
ANR	2529542	Argument	delta		2529369	3					
ANR	2529543	Identifier	delta		2529369	0					
ANR	2529544	ElseStatement	else		2529369	0					
ANR	2529545	CompoundStatement		29:9:746:746	2529369	0					
ANR	2529546	IfStatement	if ( usePxr )		2529369	0					
ANR	2529547	Condition	usePxr	52:7:1437:1442	2529369	0	True				
ANR	2529548	Identifier	usePxr		2529369	0					
ANR	2529549	CompoundStatement		30:15:763:763	2529369	1					
ANR	2529550	ExpressionStatement	"anal -> cb_printf ( ""pxr $w @%s-0x%x\\n"" , anal -> reg -> name [ R_REG_NAME_BP ] , - delta )"	53:4:1451:1528	2529369	0	True				
ANR	2529551	CallExpression	"anal -> cb_printf ( ""pxr $w @%s-0x%x\\n"" , anal -> reg -> name [ R_REG_NAME_BP ] , - delta )"		2529369	0					
ANR	2529552	Callee	anal -> cb_printf		2529369	0					
ANR	2529553	PtrMemberAccess	anal -> cb_printf		2529369	0					
ANR	2529554	Identifier	anal		2529369	0					
ANR	2529555	Identifier	cb_printf		2529369	1					
ANR	2529556	ArgumentList	"""pxr $w @%s-0x%x\\n"""		2529369	1					
ANR	2529557	Argument	"""pxr $w @%s-0x%x\\n"""		2529369	0					
ANR	2529558	PrimaryExpression	"""pxr $w @%s-0x%x\\n"""		2529369	0					
ANR	2529559	Argument	anal -> reg -> name [ R_REG_NAME_BP ]		2529369	1					
ANR	2529560	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_BP ]		2529369	0					
ANR	2529561	PtrMemberAccess	anal -> reg -> name		2529369	0					
ANR	2529562	PtrMemberAccess	anal -> reg		2529369	0					
ANR	2529563	Identifier	anal		2529369	0					
ANR	2529564	Identifier	reg		2529369	1					
ANR	2529565	Identifier	name		2529369	1					
ANR	2529566	Identifier	R_REG_NAME_BP		2529369	1					
ANR	2529567	Argument	- delta		2529369	2					
ANR	2529568	UnaryOperationExpression	- delta		2529369	0					
ANR	2529569	UnaryOperator	-		2529369	0					
ANR	2529570	Identifier	delta		2529369	1					
ANR	2529571	ElseStatement	else		2529369	0					
ANR	2529572	CompoundStatement		32:10:858:858	2529369	0					
ANR	2529573	ExpressionStatement	"anal -> cb_printf ( ""pf %s @%s-0x%x\\n"" , fmt , anal -> reg -> name [ R_REG_NAME_BP ] , - delta )"	55:4:1546:1627	2529369	0	True				
ANR	2529574	CallExpression	"anal -> cb_printf ( ""pf %s @%s-0x%x\\n"" , fmt , anal -> reg -> name [ R_REG_NAME_BP ] , - delta )"		2529369	0					
ANR	2529575	Callee	anal -> cb_printf		2529369	0					
ANR	2529576	PtrMemberAccess	anal -> cb_printf		2529369	0					
ANR	2529577	Identifier	anal		2529369	0					
ANR	2529578	Identifier	cb_printf		2529369	1					
ANR	2529579	ArgumentList	"""pf %s @%s-0x%x\\n"""		2529369	1					
ANR	2529580	Argument	"""pf %s @%s-0x%x\\n"""		2529369	0					
ANR	2529581	PrimaryExpression	"""pf %s @%s-0x%x\\n"""		2529369	0					
ANR	2529582	Argument	fmt		2529369	1					
ANR	2529583	Identifier	fmt		2529369	0					
ANR	2529584	Argument	anal -> reg -> name [ R_REG_NAME_BP ]		2529369	2					
ANR	2529585	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_BP ]		2529369	0					
ANR	2529586	PtrMemberAccess	anal -> reg -> name		2529369	0					
ANR	2529587	PtrMemberAccess	anal -> reg		2529369	0					
ANR	2529588	Identifier	anal		2529369	0					
ANR	2529589	Identifier	reg		2529369	1					
ANR	2529590	Identifier	name		2529369	1					
ANR	2529591	Identifier	R_REG_NAME_BP		2529369	1					
ANR	2529592	Argument	- delta		2529369	3					
ANR	2529593	UnaryOperationExpression	- delta		2529369	0					
ANR	2529594	UnaryOperator	-		2529369	0					
ANR	2529595	Identifier	delta		2529369	1					
ANR	2529596	BreakStatement	break ;	58:2:1640:1645	2529369	6	True				
ANR	2529597	Label	case R_ANAL_VAR_KIND_SPV :	59:1:1648:1672	2529369	7	True				
ANR	2529598	Identifier	R_ANAL_VAR_KIND_SPV		2529369	0					
ANR	2529599	IfStatement	if ( usePxr )		2529369	8					
ANR	2529600	Condition	usePxr	60:6:1680:1685	2529369	0	True				
ANR	2529601	Identifier	usePxr		2529369	0					
ANR	2529602	CompoundStatement		38:14:1006:1006	2529369	1					
ANR	2529603	ExpressionStatement	"anal -> cb_printf ( ""pxr $w @%s+0x%x\\n"" , anal -> reg -> name [ R_REG_NAME_SP ] , delta )"	61:3:1693:1769	2529369	0	True				
ANR	2529604	CallExpression	"anal -> cb_printf ( ""pxr $w @%s+0x%x\\n"" , anal -> reg -> name [ R_REG_NAME_SP ] , delta )"		2529369	0					
ANR	2529605	Callee	anal -> cb_printf		2529369	0					
ANR	2529606	PtrMemberAccess	anal -> cb_printf		2529369	0					
ANR	2529607	Identifier	anal		2529369	0					
ANR	2529608	Identifier	cb_printf		2529369	1					
ANR	2529609	ArgumentList	"""pxr $w @%s+0x%x\\n"""		2529369	1					
ANR	2529610	Argument	"""pxr $w @%s+0x%x\\n"""		2529369	0					
ANR	2529611	PrimaryExpression	"""pxr $w @%s+0x%x\\n"""		2529369	0					
ANR	2529612	Argument	anal -> reg -> name [ R_REG_NAME_SP ]		2529369	1					
ANR	2529613	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_SP ]		2529369	0					
ANR	2529614	PtrMemberAccess	anal -> reg -> name		2529369	0					
ANR	2529615	PtrMemberAccess	anal -> reg		2529369	0					
ANR	2529616	Identifier	anal		2529369	0					
ANR	2529617	Identifier	reg		2529369	1					
ANR	2529618	Identifier	name		2529369	1					
ANR	2529619	Identifier	R_REG_NAME_SP		2529369	1					
ANR	2529620	Argument	delta		2529369	2					
ANR	2529621	Identifier	delta		2529369	0					
ANR	2529622	ElseStatement	else		2529369	0					
ANR	2529623	CompoundStatement		40:9:1098:1098	2529369	0					
ANR	2529624	ExpressionStatement	"anal -> cb_printf ( ""pf %s @ %s+0x%x\\n"" , fmt , anal -> reg -> name [ R_REG_NAME_SP ] , delta )"	63:3:1785:1866	2529369	0	True				
ANR	2529625	CallExpression	"anal -> cb_printf ( ""pf %s @ %s+0x%x\\n"" , fmt , anal -> reg -> name [ R_REG_NAME_SP ] , delta )"		2529369	0					
ANR	2529626	Callee	anal -> cb_printf		2529369	0					
ANR	2529627	PtrMemberAccess	anal -> cb_printf		2529369	0					
ANR	2529628	Identifier	anal		2529369	0					
ANR	2529629	Identifier	cb_printf		2529369	1					
ANR	2529630	ArgumentList	"""pf %s @ %s+0x%x\\n"""		2529369	1					
ANR	2529631	Argument	"""pf %s @ %s+0x%x\\n"""		2529369	0					
ANR	2529632	PrimaryExpression	"""pf %s @ %s+0x%x\\n"""		2529369	0					
ANR	2529633	Argument	fmt		2529369	1					
ANR	2529634	Identifier	fmt		2529369	0					
ANR	2529635	Argument	anal -> reg -> name [ R_REG_NAME_SP ]		2529369	2					
ANR	2529636	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_SP ]		2529369	0					
ANR	2529637	PtrMemberAccess	anal -> reg -> name		2529369	0					
ANR	2529638	PtrMemberAccess	anal -> reg		2529369	0					
ANR	2529639	Identifier	anal		2529369	0					
ANR	2529640	Identifier	reg		2529369	1					
ANR	2529641	Identifier	name		2529369	1					
ANR	2529642	Identifier	R_REG_NAME_SP		2529369	1					
ANR	2529643	Argument	delta		2529369	3					
ANR	2529644	Identifier	delta		2529369	0					
ANR	2529645	BreakStatement	break ;	65:2:1874:1879	2529369	9	True				
ANR	2529646	ExpressionStatement	free ( fmt )	67:1:1885:1895	2529369	5	True				
ANR	2529647	CallExpression	free ( fmt )		2529369	0					
ANR	2529648	Callee	free		2529369	0					
ANR	2529649	Identifier	free		2529369	0					
ANR	2529650	ArgumentList	fmt		2529369	1					
ANR	2529651	Argument	fmt		2529369	0					
ANR	2529652	Identifier	fmt		2529369	0					
ANR	2529653	ReturnStatement	return true ;	68:1:1898:1909	2529369	6	True				
ANR	2529654	Identifier	true		2529369	0					
ANR	2529655	ReturnType	R_API bool		2529369	1					
ANR	2529656	Identifier	r_anal_var_display		2529369	2					
ANR	2529657	ParameterList	"RAnal * anal , int delta , char kind , const char * type"		2529369	3					
ANR	2529658	Parameter	RAnal * anal	23:30:628:638	2529369	0	True				
ANR	2529659	ParameterType	RAnal *		2529369	0					
ANR	2529660	Identifier	anal		2529369	1					
ANR	2529661	Parameter	int delta	23:43:641:649	2529369	1	True				
ANR	2529662	ParameterType	int		2529369	0					
ANR	2529663	Identifier	delta		2529369	1					
ANR	2529664	Parameter	char kind	23:54:652:660	2529369	2	True				
ANR	2529665	ParameterType	char		2529369	0					
ANR	2529666	Identifier	kind		2529369	1					
ANR	2529667	Parameter	const char * type	23:65:663:678	2529369	3	True				
ANR	2529668	ParameterType	const char *		2529369	0					
ANR	2529669	Identifier	type		2529369	1					
ANR	2529670	CFGEntryNode	ENTRY		2529369		True				
ANR	2529671	CFGExitNode	EXIT		2529369		True				
ANR	2529672	Symbol	* R_REG_NAME_SP		2529369						
ANR	2529673	Symbol	anal -> reg		2529369						
ANR	2529674	Symbol	delta		2529369						
ANR	2529675	Symbol	usePxr		2529369						
ANR	2529676	Symbol	type		2529369						
ANR	2529677	Symbol	fmt		2529369						
ANR	2529678	Symbol	i -> name		2529369						
ANR	2529679	Symbol	* * anal		2529369						
ANR	2529680	Symbol	* anal		2529369						
ANR	2529681	Symbol	* * * anal		2529369						
ANR	2529682	Symbol	* anal -> reg		2529369						
ANR	2529683	Symbol	* * anal -> reg		2529369						
ANR	2529684	Symbol	anal -> reg -> name		2529369						
ANR	2529685	Symbol	strcmp		2529369						
ANR	2529686	Symbol	R_REG_NAME_BP		2529369						
ANR	2529687	Symbol	kind		2529369						
ANR	2529688	Symbol	false		2529369						
ANR	2529689	Symbol	i		2529369						
ANR	2529690	Symbol	r_reg_index_get		2529369						
ANR	2529691	Symbol	* i		2529369						
ANR	2529692	Symbol	R_REG_NAME_SP		2529369						
ANR	2529693	Symbol	anal		2529369						
ANR	2529694	Symbol	* R_REG_NAME_BP		2529369						
ANR	2529695	Symbol	true		2529369						
ANR	2529696	Symbol	r_type_format		2529369						
ANR	2529697	Symbol	anal -> sdb_types		2529369						
ANR	2529698	Symbol	* anal -> reg -> name		2529369						
ANR	2529699	DeclStmt									
ANR	2529700	Decl							const char	const char *	var_def
ANR	2529701	DeclStmt									
ANR	2529702	Decl							const char	const char *	sign
ANR	2529703	DeclStmt									
ANR	2529704	Decl							const char	const char *	fcn_key
ANR	2529705	DeclStmt									
ANR	2529706	Decl							const char	const char *	var_key
ANR	2529707	DeclStmt									
ANR	2529708	Decl							const char	const char *	name_key
ANR	2529709	DeclStmt									
ANR	2529710	Decl							const char	const char *	shortvar
ANR	2529711	DeclStmt									
ANR	2529712	Decl							char	char *	name_val
ANR	2529713	DeclStmt									
ANR	2529714	Decl							const char	const char *	var_global
ANR	2529715	DeclStmt									
ANR	2529716	Decl							const char	const char *	var_def
ANR	2529717	Function	r_anal_var_retype	117:0:3436:5850							
ANR	2529718	FunctionDef	"r_anal_var_retype (RAnal * a , ut64 addr , int scope , int delta , char kind , const char * type , int size , bool isarg , const char * name)"		2529717	0					
ANR	2529719	CompoundStatement		118:32:3579:5850	2529717	0					
ANR	2529720	IfStatement	if ( ! a )		2529717	0					
ANR	2529721	Condition	! a	119:5:3586:3587	2529717	0	True				
ANR	2529722	UnaryOperationExpression	! a		2529717	0					
ANR	2529723	UnaryOperator	!		2529717	0					
ANR	2529724	Identifier	a		2529717	1					
ANR	2529725	CompoundStatement		2:9:10:10	2529717	1					
ANR	2529726	ReturnStatement	return false ;	120:2:3594:3606	2529717	0	True				
ANR	2529727	Identifier	false		2529717	0					
ANR	2529728	IfStatement	if ( kind < 1 )		2529717	1					
ANR	2529729	Condition	kind < 1	122:5:3616:3623	2529717	0	True				
ANR	2529730	RelationalExpression	kind < 1		2529717	0		<			
ANR	2529731	Identifier	kind		2529717	0					
ANR	2529732	PrimaryExpression	1		2529717	1					
ANR	2529733	CompoundStatement		5:15:46:46	2529717	1					
ANR	2529734	ExpressionStatement	kind = R_ANAL_VAR_KIND_BPV	123:2:3630:3656	2529717	0	True				
ANR	2529735	AssignmentExpression	kind = R_ANAL_VAR_KIND_BPV		2529717	0		=			
ANR	2529736	Identifier	kind		2529717	0					
ANR	2529737	Identifier	R_ANAL_VAR_KIND_BPV		2529717	1					
ANR	2529738	IfStatement	if ( ! type )		2529717	2					
ANR	2529739	Condition	! type	125:5:3666:3670	2529717	0	True				
ANR	2529740	UnaryOperationExpression	! type		2529717	0					
ANR	2529741	UnaryOperator	!		2529717	0					
ANR	2529742	Identifier	type		2529717	1					
ANR	2529743	CompoundStatement		8:12:93:93	2529717	1					
ANR	2529744	ExpressionStatement	"type = ""int"""	126:2:3677:3689	2529717	0	True				
ANR	2529745	AssignmentExpression	"type = ""int"""		2529717	0		=			
ANR	2529746	Identifier	type		2529717	0					
ANR	2529747	PrimaryExpression	"""int"""		2529717	1					
ANR	2529748	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( a , addr , 0 ) ;"	128:1:3695:3746	2529717	3	True				
ANR	2529749	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( a , addr , 0 )"		2529717	0					
ANR	2529750	IdentifierDeclType	RAnalFunction *		2529717	0					
ANR	2529751	Identifier	fcn		2529717	1					
ANR	2529752	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( a , addr , 0 )"		2529717	2		=			
ANR	2529753	Identifier	fcn		2529717	0					
ANR	2529754	CallExpression	"r_anal_get_fcn_in ( a , addr , 0 )"		2529717	1					
ANR	2529755	Callee	r_anal_get_fcn_in		2529717	0					
ANR	2529756	Identifier	r_anal_get_fcn_in		2529717	0					
ANR	2529757	ArgumentList	a		2529717	1					
ANR	2529758	Argument	a		2529717	0					
ANR	2529759	Identifier	a		2529717	0					
ANR	2529760	Argument	addr		2529717	1					
ANR	2529761	Identifier	addr		2529717	0					
ANR	2529762	Argument	0		2529717	2					
ANR	2529763	PrimaryExpression	0		2529717	0					
ANR	2529764	IfStatement	if ( ! fcn )		2529717	4					
ANR	2529765	Condition	! fcn	129:5:3753:3756	2529717	0	True				
ANR	2529766	UnaryOperationExpression	! fcn		2529717	0					
ANR	2529767	UnaryOperator	!		2529717	0					
ANR	2529768	Identifier	fcn		2529717	1					
ANR	2529769	CompoundStatement		12:11:179:179	2529717	1					
ANR	2529770	ReturnStatement	return false ;	130:2:3763:3775	2529717	0	True				
ANR	2529771	Identifier	false		2529717	0					
ANR	2529772	IfStatement	if ( ( size == - 1 ) && ( delta == - 1 ) )		2529717	5					
ANR	2529773	Condition	( size == - 1 ) && ( delta == - 1 )	132:5:3785:3813	2529717	0	True				
ANR	2529774	AndExpression	( size == - 1 ) && ( delta == - 1 )		2529717	0		&&			
ANR	2529775	EqualityExpression	size == - 1		2529717	0		==			
ANR	2529776	Identifier	size		2529717	0					
ANR	2529777	UnaryOperationExpression	- 1		2529717	1					
ANR	2529778	UnaryOperator	-		2529717	0					
ANR	2529779	PrimaryExpression	1		2529717	1					
ANR	2529780	EqualityExpression	delta == - 1		2529717	1		==			
ANR	2529781	Identifier	delta		2529717	0					
ANR	2529782	UnaryOperationExpression	- 1		2529717	1					
ANR	2529783	UnaryOperator	-		2529717	0					
ANR	2529784	PrimaryExpression	1		2529717	1					
ANR	2529785	CompoundStatement		18:2:308:321	2529717	1					
ANR	2529786	IdentifierDeclStatement	"RList * list = r_anal_var_list ( a , fcn , kind ) ;"	133:2:3821:3865	2529717	0	True				
ANR	2529787	IdentifierDecl	"* list = r_anal_var_list ( a , fcn , kind )"		2529717	0					
ANR	2529788	IdentifierDeclType	RList *		2529717	0					
ANR	2529789	Identifier	list		2529717	1					
ANR	2529790	AssignmentExpression	"* list = r_anal_var_list ( a , fcn , kind )"		2529717	2		=			
ANR	2529791	Identifier	list		2529717	0					
ANR	2529792	CallExpression	"r_anal_var_list ( a , fcn , kind )"		2529717	1					
ANR	2529793	Callee	r_anal_var_list		2529717	0					
ANR	2529794	Identifier	r_anal_var_list		2529717	0					
ANR	2529795	ArgumentList	a		2529717	1					
ANR	2529796	Argument	a		2529717	0					
ANR	2529797	Identifier	a		2529717	0					
ANR	2529798	Argument	fcn		2529717	1					
ANR	2529799	Identifier	fcn		2529717	0					
ANR	2529800	Argument	kind		2529717	2					
ANR	2529801	Identifier	kind		2529717	0					
ANR	2529802	IdentifierDeclStatement	RListIter * iter ;	134:2:3869:3884	2529717	1	True				
ANR	2529803	IdentifierDecl	* iter		2529717	0					
ANR	2529804	IdentifierDeclType	RListIter *		2529717	0					
ANR	2529805	Identifier	iter		2529717	1					
ANR	2529806	IdentifierDeclStatement	RAnalVar * var ;	135:2:3888:3901	2529717	2	True				
ANR	2529807	IdentifierDecl	* var		2529717	0					
ANR	2529808	IdentifierDeclType	RAnalVar *		2529717	0					
ANR	2529809	Identifier	var		2529717	1					
ANR	2529810	Statement	r_list_foreach	136:2:3905:3918	2529717	3	True				
ANR	2529811	Statement	(	136:17:3920:3920	2529717	4	True				
ANR	2529812	Statement	list	136:18:3921:3924	2529717	5	True				
ANR	2529813	Statement	","	136:22:3925:3925	2529717	6	True				
ANR	2529814	Statement	iter	136:24:3927:3930	2529717	7	True				
ANR	2529815	Statement	","	136:28:3931:3931	2529717	8	True				
ANR	2529816	Statement	var	136:30:3933:3935	2529717	9	True				
ANR	2529817	Statement	)	136:33:3936:3936	2529717	10	True				
ANR	2529818	CompoundStatement		19:35:358:358	2529717	11					
ANR	2529819	IfStatement	"if ( ! strcmp ( var -> name , name ) )"		2529717	0					
ANR	2529820	Condition	"! strcmp ( var -> name , name )"	137:7:3947:3971	2529717	0	True				
ANR	2529821	UnaryOperationExpression	"! strcmp ( var -> name , name )"		2529717	0					
ANR	2529822	UnaryOperator	!		2529717	0					
ANR	2529823	CallExpression	"strcmp ( var -> name , name )"		2529717	1					
ANR	2529824	Callee	strcmp		2529717	0					
ANR	2529825	Identifier	strcmp		2529717	0					
ANR	2529826	ArgumentList	var -> name		2529717	1					
ANR	2529827	Argument	var -> name		2529717	0					
ANR	2529828	PtrMemberAccess	var -> name		2529717	0					
ANR	2529829	Identifier	var		2529717	0					
ANR	2529830	Identifier	name		2529717	1					
ANR	2529831	Argument	name		2529717	1					
ANR	2529832	Identifier	name		2529717	0					
ANR	2529833	CompoundStatement		20:34:394:394	2529717	1					
ANR	2529834	ExpressionStatement	delta = var -> delta	138:4:3980:3998	2529717	0	True				
ANR	2529835	AssignmentExpression	delta = var -> delta		2529717	0		=			
ANR	2529836	Identifier	delta		2529717	0					
ANR	2529837	PtrMemberAccess	var -> delta		2529717	1					
ANR	2529838	Identifier	var		2529717	0					
ANR	2529839	Identifier	delta		2529717	1					
ANR	2529840	ExpressionStatement	size = var -> size	139:4:4004:4020	2529717	1	True				
ANR	2529841	AssignmentExpression	size = var -> size		2529717	0		=			
ANR	2529842	Identifier	size		2529717	0					
ANR	2529843	PtrMemberAccess	var -> size		2529717	1					
ANR	2529844	Identifier	var		2529717	0					
ANR	2529845	Identifier	size		2529717	1					
ANR	2529846	BreakStatement	break ;	140:4:4026:4031	2529717	2	True				
ANR	2529847	ExpressionStatement	r_list_free ( list )	143:2:4044:4062	2529717	12	True				
ANR	2529848	CallExpression	r_list_free ( list )		2529717	0					
ANR	2529849	Callee	r_list_free		2529717	0					
ANR	2529850	Identifier	r_list_free		2529717	0					
ANR	2529851	ArgumentList	list		2529717	1					
ANR	2529852	Argument	list		2529717	0					
ANR	2529853	Identifier	list		2529717	0					
ANR	2529854	SwitchStatement	switch ( kind )		2529717	6					
ANR	2529855	Condition	kind	145:9:4076:4079	2529717	0	True				
ANR	2529856	Identifier	kind		2529717	0					
ANR	2529857	CompoundStatement		28:15:502:502	2529717	1					
ANR	2529858	Label	case R_ANAL_VAR_KIND_REG :	146:1:4085:4109	2529717	0	True				
ANR	2529859	Identifier	R_ANAL_VAR_KIND_REG		2529717	0					
ANR	2529860	Label	case R_ANAL_VAR_KIND_BPV :	147:1:4112:4136	2529717	1	True				
ANR	2529861	Identifier	R_ANAL_VAR_KIND_BPV		2529717	0					
ANR	2529862	Label	case R_ANAL_VAR_KIND_SPV :	148:1:4139:4163	2529717	2	True				
ANR	2529863	Identifier	R_ANAL_VAR_KIND_SPV		2529717	0					
ANR	2529864	BreakStatement	break ;	149:2:4167:4172	2529717	3	True				
ANR	2529865	Label	default :	150:1:4175:4182	2529717	4	True				
ANR	2529866	Identifier	default		2529717	0					
ANR	2529867	ExpressionStatement	"eprintf ( ""Invalid var kind '%c'\\n"" , kind )"	151:2:4186:4227	2529717	5	True				
ANR	2529868	CallExpression	"eprintf ( ""Invalid var kind '%c'\\n"" , kind )"		2529717	0					
ANR	2529869	Callee	eprintf		2529717	0					
ANR	2529870	Identifier	eprintf		2529717	0					
ANR	2529871	ArgumentList	"""Invalid var kind '%c'\\n"""		2529717	1					
ANR	2529872	Argument	"""Invalid var kind '%c'\\n"""		2529717	0					
ANR	2529873	PrimaryExpression	"""Invalid var kind '%c'\\n"""		2529717	0					
ANR	2529874	Argument	kind		2529717	1					
ANR	2529875	Identifier	kind		2529717	0					
ANR	2529876	ReturnStatement	return false ;	152:2:4231:4243	2529717	6	True				
ANR	2529877	Identifier	false		2529717	0					
ANR	2529878	IdentifierDeclStatement	"const char * var_def = sdb_fmt ( ""%d,%s,%d,%s"" , isarg , type , size , name ) ;"	154:1:4249:4319	2529717	7	True				
ANR	2529879	IdentifierDecl	"* var_def = sdb_fmt ( ""%d,%s,%d,%s"" , isarg , type , size , name )"		2529717	0					
ANR	2529880	IdentifierDeclType	const char *		2529717	0					
ANR	2529881	Identifier	var_def		2529717	1					
ANR	2529882	AssignmentExpression	"* var_def = sdb_fmt ( ""%d,%s,%d,%s"" , isarg , type , size , name )"		2529717	2		=			
ANR	2529883	Identifier	var_def		2529717	0					
ANR	2529884	CallExpression	"sdb_fmt ( ""%d,%s,%d,%s"" , isarg , type , size , name )"		2529717	1					
ANR	2529885	Callee	sdb_fmt		2529717	0					
ANR	2529886	Identifier	sdb_fmt		2529717	0					
ANR	2529887	ArgumentList	"""%d,%s,%d,%s"""		2529717	1					
ANR	2529888	Argument	"""%d,%s,%d,%s"""		2529717	0					
ANR	2529889	PrimaryExpression	"""%d,%s,%d,%s"""		2529717	0					
ANR	2529890	Argument	isarg		2529717	1					
ANR	2529891	Identifier	isarg		2529717	0					
ANR	2529892	Argument	type		2529717	2					
ANR	2529893	Identifier	type		2529717	0					
ANR	2529894	Argument	size		2529717	3					
ANR	2529895	Identifier	size		2529717	0					
ANR	2529896	Argument	name		2529717	4					
ANR	2529897	Identifier	name		2529717	0					
ANR	2529898	IfStatement	if ( scope > 0 )		2529717	8					
ANR	2529899	Condition	scope > 0	155:5:4326:4334	2529717	0	True				
ANR	2529900	RelationalExpression	scope > 0		2529717	0		>			
ANR	2529901	Identifier	scope		2529717	0					
ANR	2529902	PrimaryExpression	0		2529717	1					
ANR	2529903	CompoundStatement		50:2:1369:1421	2529717	1					
ANR	2529904	IdentifierDeclStatement	"char * sign = delta >= 0 ? """" : ""_"" ;"	156:2:4341:4374	2529717	0	True				
ANR	2529905	IdentifierDecl	"* sign = delta >= 0 ? """" : ""_"""		2529717	0					
ANR	2529906	IdentifierDeclType	char *		2529717	0					
ANR	2529907	Identifier	sign		2529717	1					
ANR	2529908	AssignmentExpression	"* sign = delta >= 0 ? """" : ""_"""		2529717	2		=			
ANR	2529909	Identifier	sign		2529717	0					
ANR	2529910	ConditionalExpression	"delta >= 0 ? """" : ""_"""		2529717	1					
ANR	2529911	Condition	delta >= 0		2529717	0					
ANR	2529912	RelationalExpression	delta >= 0		2529717	0		>=			
ANR	2529913	Identifier	delta		2529717	0					
ANR	2529914	PrimaryExpression	0		2529717	1					
ANR	2529915	PrimaryExpression	""""""		2529717	1					
ANR	2529916	PrimaryExpression	"""_"""		2529717	2					
ANR	2529917	Statement	const	158:2:4401:4405	2529717	1	True				
ANR	2529918	Statement	char	158:8:4407:4410	2529717	2	True				
ANR	2529919	Statement	*	158:13:4412:4412	2529717	3	True				
ANR	2529920	Statement	fcn_key	158:14:4413:4419	2529717	4	True				
ANR	2529921	Statement	=	158:22:4421:4421	2529717	5	True				
ANR	2529922	Statement	sdb_fmt	158:24:4423:4429	2529717	6	True				
ANR	2529923	Statement	(	158:32:4431:4431	2529717	7	True				
ANR	2529924	Statement	"""fcn.0x%"""	158:33:4432:4440	2529717	8	True				
ANR	2529925	Statement	PFMT64x	158:42:4441:4447	2529717	9	True				
ANR	2529926	Statement	""".%c"""	158:50:4449:4453	2529717	10	True				
ANR	2529927	Statement	","	158:55:4454:4454	2529717	11	True				
ANR	2529928	Statement	fcn	158:57:4456:4458	2529717	12	True				
ANR	2529929	Statement	->	158:60:4459:4460	2529717	13	True				
ANR	2529930	Statement	addr	158:62:4461:4464	2529717	14	True				
ANR	2529931	Statement	","	158:66:4465:4465	2529717	15	True				
ANR	2529932	Statement	kind	158:68:4467:4470	2529717	16	True				
ANR	2529933	Statement	)	158:72:4471:4471	2529717	17	True				
ANR	2529934	ExpressionStatement		158:73:4472:4472	2529717	18	True				
ANR	2529935	Statement	const	159:2:4476:4480	2529717	19	True				
ANR	2529936	Statement	char	159:8:4482:4485	2529717	20	True				
ANR	2529937	Statement	*	159:13:4487:4487	2529717	21	True				
ANR	2529938	Statement	var_key	159:14:4488:4494	2529717	22	True				
ANR	2529939	Statement	=	159:22:4496:4496	2529717	23	True				
ANR	2529940	Statement	sdb_fmt	159:24:4498:4504	2529717	24	True				
ANR	2529941	Statement	(	159:32:4506:4506	2529717	25	True				
ANR	2529942	Statement	"""var.0x%"""	159:33:4507:4515	2529717	26	True				
ANR	2529943	Statement	PFMT64x	159:42:4516:4522	2529717	27	True				
ANR	2529944	Statement	""".%c.%d.%s%d"""	159:50:4524:4536	2529717	28	True				
ANR	2529945	Statement	","	159:63:4537:4537	2529717	29	True				
ANR	2529946	Statement	fcn	159:65:4539:4541	2529717	30	True				
ANR	2529947	Statement	->	159:68:4542:4543	2529717	31	True				
ANR	2529948	Statement	addr	159:70:4544:4547	2529717	32	True				
ANR	2529949	Statement	","	159:74:4548:4548	2529717	33	True				
ANR	2529950	Statement	kind	159:76:4550:4553	2529717	34	True				
ANR	2529951	Statement	","	159:80:4554:4554	2529717	35	True				
ANR	2529952	Statement	scope	159:82:4556:4560	2529717	36	True				
ANR	2529953	Statement	","	159:87:4561:4561	2529717	37	True				
ANR	2529954	Statement	sign	159:89:4563:4566	2529717	38	True				
ANR	2529955	Statement	","	159:93:4567:4567	2529717	39	True				
ANR	2529956	Statement	R_ABS	159:95:4569:4573	2529717	40	True				
ANR	2529957	Statement	(	159:100:4574:4574	2529717	41	True				
ANR	2529958	Statement	delta	159:101:4575:4579	2529717	42	True				
ANR	2529959	Statement	)	159:106:4580:4580	2529717	43	True				
ANR	2529960	Statement	)	159:107:4581:4581	2529717	44	True				
ANR	2529961	ExpressionStatement		159:108:4582:4582	2529717	45	True				
ANR	2529962	Statement	const	160:2:4586:4590	2529717	46	True				
ANR	2529963	Statement	char	160:8:4592:4595	2529717	47	True				
ANR	2529964	Statement	*	160:13:4597:4597	2529717	48	True				
ANR	2529965	Statement	name_key	160:14:4598:4605	2529717	49	True				
ANR	2529966	Statement	=	160:23:4607:4607	2529717	50	True				
ANR	2529967	Statement	sdb_fmt	160:25:4609:4615	2529717	51	True				
ANR	2529968	Statement	(	160:33:4617:4617	2529717	52	True				
ANR	2529969	Statement	"""var.0x%"""	160:34:4618:4626	2529717	53	True				
ANR	2529970	Statement	PFMT64x	160:43:4627:4633	2529717	54	True				
ANR	2529971	Statement	""".%d.%s"""	160:51:4635:4642	2529717	55	True				
ANR	2529972	Statement	","	160:59:4643:4643	2529717	56	True				
ANR	2529973	Statement	fcn	160:61:4645:4647	2529717	57	True				
ANR	2529974	Statement	->	160:64:4648:4649	2529717	58	True				
ANR	2529975	Statement	addr	160:66:4650:4653	2529717	59	True				
ANR	2529976	Statement	","	160:70:4654:4654	2529717	60	True				
ANR	2529977	Statement	scope	160:72:4656:4660	2529717	61	True				
ANR	2529978	Statement	","	160:77:4661:4661	2529717	62	True				
ANR	2529979	Statement	name	160:79:4663:4666	2529717	63	True				
ANR	2529980	Statement	)	160:83:4667:4667	2529717	64	True				
ANR	2529981	ExpressionStatement		160:84:4668:4668	2529717	65	True				
ANR	2529982	IdentifierDeclStatement	"const char * shortvar = sdb_fmt ( ""%d.%s%d"" , scope , sign , R_ABS ( delta ) ) ;"	161:2:4672:4741	2529717	66	True				
ANR	2529983	IdentifierDecl	"* shortvar = sdb_fmt ( ""%d.%s%d"" , scope , sign , R_ABS ( delta ) )"		2529717	0					
ANR	2529984	IdentifierDeclType	const char *		2529717	0					
ANR	2529985	Identifier	shortvar		2529717	1					
ANR	2529986	AssignmentExpression	"* shortvar = sdb_fmt ( ""%d.%s%d"" , scope , sign , R_ABS ( delta ) )"		2529717	2		=			
ANR	2529987	Identifier	shortvar		2529717	0					
ANR	2529988	CallExpression	"sdb_fmt ( ""%d.%s%d"" , scope , sign , R_ABS ( delta ) )"		2529717	1					
ANR	2529989	Callee	sdb_fmt		2529717	0					
ANR	2529990	Identifier	sdb_fmt		2529717	0					
ANR	2529991	ArgumentList	"""%d.%s%d"""		2529717	1					
ANR	2529992	Argument	"""%d.%s%d"""		2529717	0					
ANR	2529993	PrimaryExpression	"""%d.%s%d"""		2529717	0					
ANR	2529994	Argument	scope		2529717	1					
ANR	2529995	Identifier	scope		2529717	0					
ANR	2529996	Argument	sign		2529717	2					
ANR	2529997	Identifier	sign		2529717	0					
ANR	2529998	Argument	R_ABS ( delta )		2529717	3					
ANR	2529999	CallExpression	R_ABS ( delta )		2529717	0					
ANR	2530000	Callee	R_ABS		2529717	0					
ANR	2530001	Identifier	R_ABS		2529717	0					
ANR	2530002	ArgumentList	delta		2529717	1					
ANR	2530003	Argument	delta		2529717	0					
ANR	2530004	Identifier	delta		2529717	0					
ANR	2530005	IdentifierDeclStatement	"const char * name_val = sdb_fmt ( ""%c,%d"" , kind , delta ) ;"	162:2:4745:4798	2529717	67	True				
ANR	2530006	IdentifierDecl	"* name_val = sdb_fmt ( ""%c,%d"" , kind , delta )"		2529717	0					
ANR	2530007	IdentifierDeclType	const char *		2529717	0					
ANR	2530008	Identifier	name_val		2529717	1					
ANR	2530009	AssignmentExpression	"* name_val = sdb_fmt ( ""%c,%d"" , kind , delta )"		2529717	2		=			
ANR	2530010	Identifier	name_val		2529717	0					
ANR	2530011	CallExpression	"sdb_fmt ( ""%c,%d"" , kind , delta )"		2529717	1					
ANR	2530012	Callee	sdb_fmt		2529717	0					
ANR	2530013	Identifier	sdb_fmt		2529717	0					
ANR	2530014	ArgumentList	"""%c,%d"""		2529717	1					
ANR	2530015	Argument	"""%c,%d"""		2529717	0					
ANR	2530016	PrimaryExpression	"""%c,%d"""		2529717	0					
ANR	2530017	Argument	kind		2529717	1					
ANR	2530018	Identifier	kind		2529717	0					
ANR	2530019	Argument	delta		2529717	2					
ANR	2530020	Identifier	delta		2529717	0					
ANR	2530021	ExpressionStatement	"sdb_array_add ( DB , fcn_key , shortvar , 0 )"	163:2:4802:4842	2529717	68	True				
ANR	2530022	CallExpression	"sdb_array_add ( DB , fcn_key , shortvar , 0 )"		2529717	0					
ANR	2530023	Callee	sdb_array_add		2529717	0					
ANR	2530024	Identifier	sdb_array_add		2529717	0					
ANR	2530025	ArgumentList	DB		2529717	1					
ANR	2530026	Argument	DB		2529717	0					
ANR	2530027	Identifier	DB		2529717	0					
ANR	2530028	Argument	fcn_key		2529717	1					
ANR	2530029	Identifier	fcn_key		2529717	0					
ANR	2530030	Argument	shortvar		2529717	2					
ANR	2530031	Identifier	shortvar		2529717	0					
ANR	2530032	Argument	0		2529717	3					
ANR	2530033	PrimaryExpression	0		2529717	0					
ANR	2530034	ExpressionStatement	"sdb_set ( DB , var_key , var_def , 0 )"	164:2:4846:4879	2529717	69	True				
ANR	2530035	CallExpression	"sdb_set ( DB , var_key , var_def , 0 )"		2529717	0					
ANR	2530036	Callee	sdb_set		2529717	0					
ANR	2530037	Identifier	sdb_set		2529717	0					
ANR	2530038	ArgumentList	DB		2529717	1					
ANR	2530039	Argument	DB		2529717	0					
ANR	2530040	Identifier	DB		2529717	0					
ANR	2530041	Argument	var_key		2529717	1					
ANR	2530042	Identifier	var_key		2529717	0					
ANR	2530043	Argument	var_def		2529717	2					
ANR	2530044	Identifier	var_def		2529717	0					
ANR	2530045	Argument	0		2529717	3					
ANR	2530046	PrimaryExpression	0		2529717	0					
ANR	2530047	ExpressionStatement	"sdb_set ( DB , name_key , name_val , 0 )"	165:2:4883:4918	2529717	70	True				
ANR	2530048	CallExpression	"sdb_set ( DB , name_key , name_val , 0 )"		2529717	0					
ANR	2530049	Callee	sdb_set		2529717	0					
ANR	2530050	Identifier	sdb_set		2529717	0					
ANR	2530051	ArgumentList	DB		2529717	1					
ANR	2530052	Argument	DB		2529717	0					
ANR	2530053	Identifier	DB		2529717	0					
ANR	2530054	Argument	name_key		2529717	1					
ANR	2530055	Identifier	name_key		2529717	0					
ANR	2530056	Argument	name_val		2529717	2					
ANR	2530057	Identifier	name_val		2529717	0					
ANR	2530058	Argument	0		2529717	3					
ANR	2530059	PrimaryExpression	0		2529717	0					
ANR	2530060	IdentifierDeclStatement	Sdb * TDB = a -> sdb_types ;	166:2:4922:4945	2529717	71	True				
ANR	2530061	IdentifierDecl	* TDB = a -> sdb_types		2529717	0					
ANR	2530062	IdentifierDeclType	Sdb *		2529717	0					
ANR	2530063	Identifier	TDB		2529717	1					
ANR	2530064	AssignmentExpression	* TDB = a -> sdb_types		2529717	2		=			
ANR	2530065	Identifier	TDB		2529717	0					
ANR	2530066	PtrMemberAccess	a -> sdb_types		2529717	1					
ANR	2530067	Identifier	a		2529717	0					
ANR	2530068	Identifier	sdb_types		2529717	1					
ANR	2530069	IdentifierDeclStatement	"const char * type_kind = sdb_const_get ( TDB , type , 0 ) ;"	167:2:4949:5001	2529717	72	True				
ANR	2530070	IdentifierDecl	"* type_kind = sdb_const_get ( TDB , type , 0 )"		2529717	0					
ANR	2530071	IdentifierDeclType	const char *		2529717	0					
ANR	2530072	Identifier	type_kind		2529717	1					
ANR	2530073	AssignmentExpression	"* type_kind = sdb_const_get ( TDB , type , 0 )"		2529717	2		=			
ANR	2530074	Identifier	type_kind		2529717	0					
ANR	2530075	CallExpression	"sdb_const_get ( TDB , type , 0 )"		2529717	1					
ANR	2530076	Callee	sdb_const_get		2529717	0					
ANR	2530077	Identifier	sdb_const_get		2529717	0					
ANR	2530078	ArgumentList	TDB		2529717	1					
ANR	2530079	Argument	TDB		2529717	0					
ANR	2530080	Identifier	TDB		2529717	0					
ANR	2530081	Argument	type		2529717	1					
ANR	2530082	Identifier	type		2529717	0					
ANR	2530083	Argument	0		2529717	2					
ANR	2530084	PrimaryExpression	0		2529717	0					
ANR	2530085	IfStatement	"if ( type_kind && r_str_startswith ( type_kind , ""struct"" ) )"		2529717	73					
ANR	2530086	Condition	"type_kind && r_str_startswith ( type_kind , ""struct"" )"	168:6:5009:5059	2529717	0	True				
ANR	2530087	AndExpression	"type_kind && r_str_startswith ( type_kind , ""struct"" )"		2529717	0		&&			
ANR	2530088	Identifier	type_kind		2529717	0					
ANR	2530089	CallExpression	"r_str_startswith ( type_kind , ""struct"" )"		2529717	1					
ANR	2530090	Callee	r_str_startswith		2529717	0					
ANR	2530091	Identifier	r_str_startswith		2529717	0					
ANR	2530092	ArgumentList	type_kind		2529717	1					
ANR	2530093	Argument	type_kind		2529717	0					
ANR	2530094	Identifier	type_kind		2529717	0					
ANR	2530095	Argument	"""struct"""		2529717	1					
ANR	2530096	PrimaryExpression	"""struct"""		2529717	0					
ANR	2530097	CompoundStatement		54:3:1519:1573	2529717	1					
ANR	2530098	IdentifierDeclStatement	char * field ;	169:3:5067:5078	2529717	0	True				
ANR	2530099	IdentifierDecl	* field		2529717	0					
ANR	2530100	IdentifierDeclType	char *		2529717	0					
ANR	2530101	Identifier	field		2529717	1					
ANR	2530102	IdentifierDeclStatement	int field_n ;	170:3:5083:5094	2529717	1	True				
ANR	2530103	IdentifierDecl	field_n		2529717	0					
ANR	2530104	IdentifierDeclType	int		2529717	0					
ANR	2530105	Identifier	field_n		2529717	1					
ANR	2530106	IdentifierDeclStatement	"char * type_key = r_str_newf ( ""%s.%s"" , type_kind , type ) ;"	171:3:5099:5153	2529717	2	True				
ANR	2530107	IdentifierDecl	"* type_key = r_str_newf ( ""%s.%s"" , type_kind , type )"		2529717	0					
ANR	2530108	IdentifierDeclType	char *		2529717	0					
ANR	2530109	Identifier	type_key		2529717	1					
ANR	2530110	AssignmentExpression	"* type_key = r_str_newf ( ""%s.%s"" , type_kind , type )"		2529717	2		=			
ANR	2530111	Identifier	type_key		2529717	0					
ANR	2530112	CallExpression	"r_str_newf ( ""%s.%s"" , type_kind , type )"		2529717	1					
ANR	2530113	Callee	r_str_newf		2529717	0					
ANR	2530114	Identifier	r_str_newf		2529717	0					
ANR	2530115	ArgumentList	"""%s.%s"""		2529717	1					
ANR	2530116	Argument	"""%s.%s"""		2529717	0					
ANR	2530117	PrimaryExpression	"""%s.%s"""		2529717	0					
ANR	2530118	Argument	type_kind		2529717	1					
ANR	2530119	Identifier	type_kind		2529717	0					
ANR	2530120	Argument	type		2529717	2					
ANR	2530121	Identifier	type		2529717	0					
ANR	2530122	ForStatement	"for ( field_n = 0 ; ( field = sdb_array_get ( TDB , type_key , field_n , NULL ) ) ; field_n ++ )"		2529717	3					
ANR	2530123	ForInit	field_n = 0 ;	172:8:5163:5174	2529717	0	True				
ANR	2530124	AssignmentExpression	field_n = 0		2529717	0		=			
ANR	2530125	Identifier	field_n		2529717	0					
ANR	2530126	PrimaryExpression	0		2529717	1					
ANR	2530127	Condition	"field = sdb_array_get ( TDB , type_key , field_n , NULL )"	172:21:5176:5229	2529717	1	True				
ANR	2530128	AssignmentExpression	"field = sdb_array_get ( TDB , type_key , field_n , NULL )"		2529717	0		=			
ANR	2530129	Identifier	field		2529717	0					
ANR	2530130	CallExpression	"sdb_array_get ( TDB , type_key , field_n , NULL )"		2529717	1					
ANR	2530131	Callee	sdb_array_get		2529717	0					
ANR	2530132	Identifier	sdb_array_get		2529717	0					
ANR	2530133	ArgumentList	TDB		2529717	1					
ANR	2530134	Argument	TDB		2529717	0					
ANR	2530135	Identifier	TDB		2529717	0					
ANR	2530136	Argument	type_key		2529717	1					
ANR	2530137	Identifier	type_key		2529717	0					
ANR	2530138	Argument	field_n		2529717	2					
ANR	2530139	Identifier	field_n		2529717	0					
ANR	2530140	Argument	NULL		2529717	3					
ANR	2530141	Identifier	NULL		2529717	0					
ANR	2530142	PostIncDecOperationExpression	field_n ++	172:77:5232:5240	2529717	2	True				
ANR	2530143	Identifier	field_n		2529717	0					
ANR	2530144	IncDec	++		2529717	1					
ANR	2530145	CompoundStatement		58:4:1794:1857	2529717	3					
ANR	2530146	IdentifierDeclStatement	"char * field_key = r_str_newf ( ""%s.%s"" , type_key , field ) ;"	173:4:5249:5304	2529717	0	True				
ANR	2530147	IdentifierDecl	"* field_key = r_str_newf ( ""%s.%s"" , type_key , field )"		2529717	0					
ANR	2530148	IdentifierDeclType	char *		2529717	0					
ANR	2530149	Identifier	field_key		2529717	1					
ANR	2530150	AssignmentExpression	"* field_key = r_str_newf ( ""%s.%s"" , type_key , field )"		2529717	2		=			
ANR	2530151	Identifier	field_key		2529717	0					
ANR	2530152	CallExpression	"r_str_newf ( ""%s.%s"" , type_key , field )"		2529717	1					
ANR	2530153	Callee	r_str_newf		2529717	0					
ANR	2530154	Identifier	r_str_newf		2529717	0					
ANR	2530155	ArgumentList	"""%s.%s"""		2529717	1					
ANR	2530156	Argument	"""%s.%s"""		2529717	0					
ANR	2530157	PrimaryExpression	"""%s.%s"""		2529717	0					
ANR	2530158	Argument	type_key		2529717	1					
ANR	2530159	Identifier	type_key		2529717	0					
ANR	2530160	Argument	field		2529717	2					
ANR	2530161	Identifier	field		2529717	0					
ANR	2530162	IdentifierDeclStatement	"char * field_type = sdb_array_get ( TDB , field_key , 0 , NULL ) ;"	174:4:5310:5368	2529717	1	True				
ANR	2530163	IdentifierDecl	"* field_type = sdb_array_get ( TDB , field_key , 0 , NULL )"		2529717	0					
ANR	2530164	IdentifierDeclType	char *		2529717	0					
ANR	2530165	Identifier	field_type		2529717	1					
ANR	2530166	AssignmentExpression	"* field_type = sdb_array_get ( TDB , field_key , 0 , NULL )"		2529717	2		=			
ANR	2530167	Identifier	field_type		2529717	0					
ANR	2530168	CallExpression	"sdb_array_get ( TDB , field_key , 0 , NULL )"		2529717	1					
ANR	2530169	Callee	sdb_array_get		2529717	0					
ANR	2530170	Identifier	sdb_array_get		2529717	0					
ANR	2530171	ArgumentList	TDB		2529717	1					
ANR	2530172	Argument	TDB		2529717	0					
ANR	2530173	Identifier	TDB		2529717	0					
ANR	2530174	Argument	field_key		2529717	1					
ANR	2530175	Identifier	field_key		2529717	0					
ANR	2530176	Argument	0		2529717	2					
ANR	2530177	PrimaryExpression	0		2529717	0					
ANR	2530178	Argument	NULL		2529717	3					
ANR	2530179	Identifier	NULL		2529717	0					
ANR	2530180	IdentifierDeclStatement	"ut64 field_offset = sdb_array_get_num ( TDB , field_key , 1 , NULL ) ;"	175:4:5374:5437	2529717	2	True				
ANR	2530181	IdentifierDecl	"field_offset = sdb_array_get_num ( TDB , field_key , 1 , NULL )"		2529717	0					
ANR	2530182	IdentifierDeclType	ut64		2529717	0					
ANR	2530183	Identifier	field_offset		2529717	1					
ANR	2530184	AssignmentExpression	"field_offset = sdb_array_get_num ( TDB , field_key , 1 , NULL )"		2529717	2		=			
ANR	2530185	Identifier	field_offset		2529717	0					
ANR	2530186	CallExpression	"sdb_array_get_num ( TDB , field_key , 1 , NULL )"		2529717	1					
ANR	2530187	Callee	sdb_array_get_num		2529717	0					
ANR	2530188	Identifier	sdb_array_get_num		2529717	0					
ANR	2530189	ArgumentList	TDB		2529717	1					
ANR	2530190	Argument	TDB		2529717	0					
ANR	2530191	Identifier	TDB		2529717	0					
ANR	2530192	Argument	field_key		2529717	1					
ANR	2530193	Identifier	field_key		2529717	0					
ANR	2530194	Argument	1		2529717	2					
ANR	2530195	PrimaryExpression	1		2529717	0					
ANR	2530196	Argument	NULL		2529717	3					
ANR	2530197	Identifier	NULL		2529717	0					
ANR	2530198	IfStatement	if ( field_offset != 0 )		2529717	3					
ANR	2530199	Condition	field_offset != 0	176:8:5447:5463	2529717	0	True				
ANR	2530200	EqualityExpression	field_offset != 0		2529717	0		!=			
ANR	2530201	Identifier	field_offset		2529717	0					
ANR	2530202	PrimaryExpression	0		2529717	1					
ANR	2530203	CompoundStatement		59:27:1886:1886	2529717	1					
ANR	2530204	ExpressionStatement	"r_anal_var_delete ( a , addr , kind , scope , delta + field_offset )"	177:5:5525:5587	2529717	0	True				
ANR	2530205	CallExpression	"r_anal_var_delete ( a , addr , kind , scope , delta + field_offset )"		2529717	0					
ANR	2530206	Callee	r_anal_var_delete		2529717	0					
ANR	2530207	Identifier	r_anal_var_delete		2529717	0					
ANR	2530208	ArgumentList	a		2529717	1					
ANR	2530209	Argument	a		2529717	0					
ANR	2530210	Identifier	a		2529717	0					
ANR	2530211	Argument	addr		2529717	1					
ANR	2530212	Identifier	addr		2529717	0					
ANR	2530213	Argument	kind		2529717	2					
ANR	2530214	Identifier	kind		2529717	0					
ANR	2530215	Argument	scope		2529717	3					
ANR	2530216	Identifier	scope		2529717	0					
ANR	2530217	Argument	delta + field_offset		2529717	4					
ANR	2530218	AdditiveExpression	delta + field_offset		2529717	0		+			
ANR	2530219	Identifier	delta		2529717	0					
ANR	2530220	Identifier	field_offset		2529717	1					
ANR	2530221	ExpressionStatement	free ( field_type )	179:4:5599:5616	2529717	4	True				
ANR	2530222	CallExpression	free ( field_type )		2529717	0					
ANR	2530223	Callee	free		2529717	0					
ANR	2530224	Identifier	free		2529717	0					
ANR	2530225	ArgumentList	field_type		2529717	1					
ANR	2530226	Argument	field_type		2529717	0					
ANR	2530227	Identifier	field_type		2529717	0					
ANR	2530228	ExpressionStatement	free ( field_key )	180:4:5622:5638	2529717	5	True				
ANR	2530229	CallExpression	free ( field_key )		2529717	0					
ANR	2530230	Callee	free		2529717	0					
ANR	2530231	Identifier	free		2529717	0					
ANR	2530232	ArgumentList	field_key		2529717	1					
ANR	2530233	Argument	field_key		2529717	0					
ANR	2530234	Identifier	field_key		2529717	0					
ANR	2530235	ExpressionStatement	free ( field )	181:4:5644:5656	2529717	6	True				
ANR	2530236	CallExpression	free ( field )		2529717	0					
ANR	2530237	Callee	free		2529717	0					
ANR	2530238	Identifier	free		2529717	0					
ANR	2530239	ArgumentList	field		2529717	1					
ANR	2530240	Argument	field		2529717	0					
ANR	2530241	Identifier	field		2529717	0					
ANR	2530242	ExpressionStatement	free ( type_key )	183:3:5666:5681	2529717	4	True				
ANR	2530243	CallExpression	free ( type_key )		2529717	0					
ANR	2530244	Callee	free		2529717	0					
ANR	2530245	Identifier	free		2529717	0					
ANR	2530246	ArgumentList	type_key		2529717	1					
ANR	2530247	Argument	type_key		2529717	0					
ANR	2530248	Identifier	type_key		2529717	0					
ANR	2530249	ElseStatement	else		2529717	0					
ANR	2530250	CompoundStatement		68:8:2115:2115	2529717	0					
ANR	2530251	Statement	const	187:2:5723:5727	2529717	0	True				
ANR	2530252	Statement	char	187:8:5729:5732	2529717	1	True				
ANR	2530253	Statement	*	187:13:5734:5734	2529717	2	True				
ANR	2530254	Statement	var_global	187:14:5735:5744	2529717	3	True				
ANR	2530255	Statement	=	187:25:5746:5746	2529717	4	True				
ANR	2530256	Statement	sdb_fmt	187:27:5748:5754	2529717	5	True				
ANR	2530257	Statement	(	187:35:5756:5756	2529717	6	True				
ANR	2530258	Statement	"""var.0x%"""	187:36:5757:5765	2529717	7	True				
ANR	2530259	Statement	PFMT64x	187:45:5766:5772	2529717	8	True				
ANR	2530260	Statement	","	187:52:5773:5773	2529717	9	True				
ANR	2530261	Statement	fcn	187:54:5775:5777	2529717	10	True				
ANR	2530262	Statement	->	187:57:5778:5779	2529717	11	True				
ANR	2530263	Statement	addr	187:59:5780:5783	2529717	12	True				
ANR	2530264	Statement	)	187:63:5784:5784	2529717	13	True				
ANR	2530265	ExpressionStatement		187:64:5785:5785	2529717	14	True				
ANR	2530266	ExpressionStatement	"sdb_array_add ( DB , var_global , var_def , 0 )"	188:2:5789:5831	2529717	15	True				
ANR	2530267	CallExpression	"sdb_array_add ( DB , var_global , var_def , 0 )"		2529717	0					
ANR	2530268	Callee	sdb_array_add		2529717	0					
ANR	2530269	Identifier	sdb_array_add		2529717	0					
ANR	2530270	ArgumentList	DB		2529717	1					
ANR	2530271	Argument	DB		2529717	0					
ANR	2530272	Identifier	DB		2529717	0					
ANR	2530273	Argument	var_global		2529717	1					
ANR	2530274	Identifier	var_global		2529717	0					
ANR	2530275	Argument	var_def		2529717	2					
ANR	2530276	Identifier	var_def		2529717	0					
ANR	2530277	Argument	0		2529717	3					
ANR	2530278	PrimaryExpression	0		2529717	0					
ANR	2530279	ReturnStatement	return true ;	190:1:5837:5848	2529717	9	True				
ANR	2530280	Identifier	true		2529717	0					
ANR	2530281	ReturnType	R_API int		2529717	1					
ANR	2530282	Identifier	r_anal_var_retype		2529717	2					
ANR	2530283	ParameterList	"RAnal * a , ut64 addr , int scope , int delta , char kind , const char * type , int size , bool isarg , const char * name"		2529717	3					
ANR	2530284	Parameter	RAnal * a	117:28:3464:3471	2529717	0	True				
ANR	2530285	ParameterType	RAnal *		2529717	0					
ANR	2530286	Identifier	a		2529717	1					
ANR	2530287	Parameter	ut64 addr	117:38:3474:3482	2529717	1	True				
ANR	2530288	ParameterType	ut64		2529717	0					
ANR	2530289	Identifier	addr		2529717	1					
ANR	2530290	Parameter	int scope	117:49:3485:3493	2529717	2	True				
ANR	2530291	ParameterType	int		2529717	0					
ANR	2530292	Identifier	scope		2529717	1					
ANR	2530293	Parameter	int delta	117:60:3496:3504	2529717	3	True				
ANR	2530294	ParameterType	int		2529717	0					
ANR	2530295	Identifier	delta		2529717	1					
ANR	2530296	Parameter	char kind	117:71:3507:3515	2529717	4	True				
ANR	2530297	ParameterType	char		2529717	0					
ANR	2530298	Identifier	kind		2529717	1					
ANR	2530299	Parameter	const char * type	117:82:3518:3533	2529717	5	True				
ANR	2530300	ParameterType	const char *		2529717	0					
ANR	2530301	Identifier	type		2529717	1					
ANR	2530302	Parameter	int size	117:100:3536:3543	2529717	6	True				
ANR	2530303	ParameterType	int		2529717	0					
ANR	2530304	Identifier	size		2529717	1					
ANR	2530305	Parameter	bool isarg	118:2:3549:3558	2529717	7	True				
ANR	2530306	ParameterType	bool		2529717	0					
ANR	2530307	Identifier	isarg		2529717	1					
ANR	2530308	Parameter	const char * name	118:14:3561:3576	2529717	8	True				
ANR	2530309	ParameterType	const char *		2529717	0					
ANR	2530310	Identifier	name		2529717	1					
ANR	2530311	CFGEntryNode	ENTRY		2529717		True				
ANR	2530312	CFGExitNode	EXIT		2529717		True				
ANR	2530313	CFGErrorNode	ERROR		2529717		True				
ANR	2530314	Symbol	delta		2529717						
ANR	2530315	Symbol	sign		2529717						
ANR	2530316	Symbol	type_kind		2529717						
ANR	2530317	Symbol	type		2529717						
ANR	2530318	Symbol	var -> delta		2529717						
ANR	2530319	Symbol	var -> size		2529717						
ANR	2530320	Symbol	sdb_const_get		2529717						
ANR	2530321	Symbol	isarg		2529717						
ANR	2530322	Symbol	name_key		2529717						
ANR	2530323	Symbol	fcn_key		2529717						
ANR	2530324	Symbol	strcmp		2529717						
ANR	2530325	Symbol	NULL		2529717						
ANR	2530326	Symbol	kind		2529717						
ANR	2530327	Symbol	var		2529717						
ANR	2530328	Symbol	iter		2529717						
ANR	2530329	Symbol	R_ANAL_VAR_KIND_BPV		2529717						
ANR	2530330	Symbol	list		2529717						
ANR	2530331	Symbol	size		2529717						
ANR	2530332	Symbol	field		2529717						
ANR	2530333	Symbol	name		2529717						
ANR	2530334	Symbol	true		2529717						
ANR	2530335	Symbol	var -> name		2529717						
ANR	2530336	Symbol	shortvar		2529717						
ANR	2530337	Symbol	field_type		2529717						
ANR	2530338	Symbol	field_n		2529717						
ANR	2530339	Symbol	sdb_array_get		2529717						
ANR	2530340	Symbol	R_ABS		2529717						
ANR	2530341	Symbol	r_str_newf		2529717						
ANR	2530342	Symbol	fcn		2529717						
ANR	2530343	Symbol	* var		2529717						
ANR	2530344	Symbol	TDB		2529717						
ANR	2530345	Symbol	scope		2529717						
ANR	2530346	Symbol	name_val		2529717						
ANR	2530347	Symbol	a -> sdb_types		2529717						
ANR	2530348	Symbol	addr		2529717						
ANR	2530349	Symbol	sdb_array_get_num		2529717						
ANR	2530350	Symbol	var_global		2529717						
ANR	2530351	Symbol	sdb_fmt		2529717						
ANR	2530352	Symbol	var_key		2529717						
ANR	2530353	Symbol	r_str_startswith		2529717						
ANR	2530354	Symbol	a		2529717						
ANR	2530355	Symbol	false		2529717						
ANR	2530356	Symbol	* a		2529717						
ANR	2530357	Symbol	type_key		2529717						
ANR	2530358	Symbol	field_offset		2529717						
ANR	2530359	Symbol	r_anal_get_fcn_in		2529717						
ANR	2530360	Symbol	r_anal_var_list		2529717						
ANR	2530361	Symbol	field_key		2529717						
ANR	2530362	Symbol	var_def		2529717						
ANR	2530363	Symbol	DB		2529717						
ANR	2530364	Function	r_anal_var_delete_all	193:0:5853:6403							
ANR	2530365	FunctionDef	"r_anal_var_delete_all (RAnal * a , ut64 addr , const char kind)"		2530364	0					
ANR	2530366	CompoundStatement		193:70:5923:6403	2530364	0					
ANR	2530367	ExpressionStatement	"r_return_val_if_fail ( a , 0 )"	194:1:5926:5953	2530364	0	True				
ANR	2530368	CallExpression	"r_return_val_if_fail ( a , 0 )"		2530364	0					
ANR	2530369	Callee	r_return_val_if_fail		2530364	0					
ANR	2530370	Identifier	r_return_val_if_fail		2530364	0					
ANR	2530371	ArgumentList	a		2530364	1					
ANR	2530372	Argument	a		2530364	0					
ANR	2530373	Identifier	a		2530364	0					
ANR	2530374	Argument	0		2530364	1					
ANR	2530375	PrimaryExpression	0		2530364	0					
ANR	2530376	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( a , addr , 0 ) ;"	195:1:5956:6007	2530364	1	True				
ANR	2530377	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( a , addr , 0 )"		2530364	0					
ANR	2530378	IdentifierDeclType	RAnalFunction *		2530364	0					
ANR	2530379	Identifier	fcn		2530364	1					
ANR	2530380	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( a , addr , 0 )"		2530364	2		=			
ANR	2530381	Identifier	fcn		2530364	0					
ANR	2530382	CallExpression	"r_anal_get_fcn_in ( a , addr , 0 )"		2530364	1					
ANR	2530383	Callee	r_anal_get_fcn_in		2530364	0					
ANR	2530384	Identifier	r_anal_get_fcn_in		2530364	0					
ANR	2530385	ArgumentList	a		2530364	1					
ANR	2530386	Argument	a		2530364	0					
ANR	2530387	Identifier	a		2530364	0					
ANR	2530388	Argument	addr		2530364	1					
ANR	2530389	Identifier	addr		2530364	0					
ANR	2530390	Argument	0		2530364	2					
ANR	2530391	PrimaryExpression	0		2530364	0					
ANR	2530392	IfStatement	if ( fcn )		2530364	2					
ANR	2530393	Condition	fcn	196:5:6014:6016	2530364	0	True				
ANR	2530394	Identifier	fcn		2530364	0					
ANR	2530395	CompoundStatement		7:2:133:177	2530364	1					
ANR	2530396	IdentifierDeclStatement	RAnalVar * v ;	197:2:6023:6034	2530364	0	True				
ANR	2530397	IdentifierDecl	* v		2530364	0					
ANR	2530398	IdentifierDeclType	RAnalVar *		2530364	0					
ANR	2530399	Identifier	v		2530364	1					
ANR	2530400	IdentifierDeclStatement	RListIter * iter ;	198:2:6038:6053	2530364	1	True				
ANR	2530401	IdentifierDecl	* iter		2530364	0					
ANR	2530402	IdentifierDeclType	RListIter *		2530364	0					
ANR	2530403	Identifier	iter		2530364	1					
ANR	2530404	IdentifierDeclStatement	"RList * list = r_anal_var_list ( a , fcn , kind ) ;"	199:2:6057:6101	2530364	2	True				
ANR	2530405	IdentifierDecl	"* list = r_anal_var_list ( a , fcn , kind )"		2530364	0					
ANR	2530406	IdentifierDeclType	RList *		2530364	0					
ANR	2530407	Identifier	list		2530364	1					
ANR	2530408	AssignmentExpression	"* list = r_anal_var_list ( a , fcn , kind )"		2530364	2		=			
ANR	2530409	Identifier	list		2530364	0					
ANR	2530410	CallExpression	"r_anal_var_list ( a , fcn , kind )"		2530364	1					
ANR	2530411	Callee	r_anal_var_list		2530364	0					
ANR	2530412	Identifier	r_anal_var_list		2530364	0					
ANR	2530413	ArgumentList	a		2530364	1					
ANR	2530414	Argument	a		2530364	0					
ANR	2530415	Identifier	a		2530364	0					
ANR	2530416	Argument	fcn		2530364	1					
ANR	2530417	Identifier	fcn		2530364	0					
ANR	2530418	Argument	kind		2530364	2					
ANR	2530419	Identifier	kind		2530364	0					
ANR	2530420	Statement	r_list_foreach	200:2:6105:6118	2530364	3	True				
ANR	2530421	Statement	(	200:17:6120:6120	2530364	4	True				
ANR	2530422	Statement	list	200:18:6121:6124	2530364	5	True				
ANR	2530423	Statement	","	200:22:6125:6125	2530364	6	True				
ANR	2530424	Statement	iter	200:24:6127:6130	2530364	7	True				
ANR	2530425	Statement	","	200:28:6131:6131	2530364	8	True				
ANR	2530426	Statement	v	200:30:6133:6133	2530364	9	True				
ANR	2530427	Statement	)	200:31:6134:6134	2530364	10	True				
ANR	2530428	CompoundStatement		8:33:212:212	2530364	11					
ANR	2530429	ExpressionStatement	"r_anal_var_delete ( a , addr , kind , 1 , v -> delta )"	202:3:6202:6248	2530364	0	True				
ANR	2530430	CallExpression	"r_anal_var_delete ( a , addr , kind , 1 , v -> delta )"		2530364	0					
ANR	2530431	Callee	r_anal_var_delete		2530364	0					
ANR	2530432	Identifier	r_anal_var_delete		2530364	0					
ANR	2530433	ArgumentList	a		2530364	1					
ANR	2530434	Argument	a		2530364	0					
ANR	2530435	Identifier	a		2530364	0					
ANR	2530436	Argument	addr		2530364	1					
ANR	2530437	Identifier	addr		2530364	0					
ANR	2530438	Argument	kind		2530364	2					
ANR	2530439	Identifier	kind		2530364	0					
ANR	2530440	Argument	1		2530364	3					
ANR	2530441	PrimaryExpression	1		2530364	0					
ANR	2530442	Argument	v -> delta		2530364	4					
ANR	2530443	PtrMemberAccess	v -> delta		2530364	0					
ANR	2530444	Identifier	v		2530364	0					
ANR	2530445	Identifier	delta		2530364	1					
ANR	2530446	ExpressionStatement	r_list_free ( list )	205:2:6369:6387	2530364	12	True				
ANR	2530447	CallExpression	r_list_free ( list )		2530364	0					
ANR	2530448	Callee	r_list_free		2530364	0					
ANR	2530449	Identifier	r_list_free		2530364	0					
ANR	2530450	ArgumentList	list		2530364	1					
ANR	2530451	Argument	list		2530364	0					
ANR	2530452	Identifier	list		2530364	0					
ANR	2530453	ReturnStatement	return 0 ;	207:1:6393:6401	2530364	3	True				
ANR	2530454	PrimaryExpression	0		2530364	0					
ANR	2530455	ReturnType	R_API int		2530364	1					
ANR	2530456	Identifier	r_anal_var_delete_all		2530364	2					
ANR	2530457	ParameterList	"RAnal * a , ut64 addr , const char kind"		2530364	3					
ANR	2530458	Parameter	RAnal * a	193:32:5885:5892	2530364	0	True				
ANR	2530459	ParameterType	RAnal *		2530364	0					
ANR	2530460	Identifier	a		2530364	1					
ANR	2530461	Parameter	ut64 addr	193:42:5895:5903	2530364	1	True				
ANR	2530462	ParameterType	ut64		2530364	0					
ANR	2530463	Identifier	addr		2530364	1					
ANR	2530464	Parameter	const char kind	193:53:5906:5920	2530364	2	True				
ANR	2530465	ParameterType	const char		2530364	0					
ANR	2530466	Identifier	kind		2530364	1					
ANR	2530467	CFGEntryNode	ENTRY		2530364		True				
ANR	2530468	CFGExitNode	EXIT		2530364		True				
ANR	2530469	Symbol	fcn		2530364						
ANR	2530470	Symbol	* v		2530364						
ANR	2530471	Symbol	a		2530364						
ANR	2530472	Symbol	r_anal_get_fcn_in		2530364						
ANR	2530473	Symbol	r_anal_var_list		2530364						
ANR	2530474	Symbol	kind		2530364						
ANR	2530475	Symbol	v		2530364						
ANR	2530476	Symbol	v -> delta		2530364						
ANR	2530477	Symbol	iter		2530364						
ANR	2530478	Symbol	addr		2530364						
ANR	2530479	Symbol	list		2530364						
ANR	2530480	Function	r_anal_var_delete	210:0:6406:7419							
ANR	2530481	FunctionDef	"r_anal_var_delete (RAnal * a , ut64 addr , const char kind , int scope , int delta)"		2530480	0					
ANR	2530482	CompoundStatement		210:88:6494:7419	2530480	0					
ANR	2530483	IdentifierDeclStatement	"RAnalVar * av = r_anal_var_get ( a , addr , kind , scope , delta ) ;"	211:1:6497:6556	2530480	0	True				
ANR	2530484	IdentifierDecl	"* av = r_anal_var_get ( a , addr , kind , scope , delta )"		2530480	0					
ANR	2530485	IdentifierDeclType	RAnalVar *		2530480	0					
ANR	2530486	Identifier	av		2530480	1					
ANR	2530487	AssignmentExpression	"* av = r_anal_var_get ( a , addr , kind , scope , delta )"		2530480	2		=			
ANR	2530488	Identifier	av		2530480	0					
ANR	2530489	CallExpression	"r_anal_var_get ( a , addr , kind , scope , delta )"		2530480	1					
ANR	2530490	Callee	r_anal_var_get		2530480	0					
ANR	2530491	Identifier	r_anal_var_get		2530480	0					
ANR	2530492	ArgumentList	a		2530480	1					
ANR	2530493	Argument	a		2530480	0					
ANR	2530494	Identifier	a		2530480	0					
ANR	2530495	Argument	addr		2530480	1					
ANR	2530496	Identifier	addr		2530480	0					
ANR	2530497	Argument	kind		2530480	2					
ANR	2530498	Identifier	kind		2530480	0					
ANR	2530499	Argument	scope		2530480	3					
ANR	2530500	Identifier	scope		2530480	0					
ANR	2530501	Argument	delta		2530480	4					
ANR	2530502	Identifier	delta		2530480	0					
ANR	2530503	IfStatement	if ( ! av )		2530480	1					
ANR	2530504	Condition	! av	212:5:6563:6565	2530480	0	True				
ANR	2530505	UnaryOperationExpression	! av		2530480	0					
ANR	2530506	UnaryOperator	!		2530480	0					
ANR	2530507	Identifier	av		2530480	1					
ANR	2530508	CompoundStatement		3:10:73:73	2530480	1					
ANR	2530509	ReturnStatement	return false ;	213:2:6572:6584	2530480	0	True				
ANR	2530510	Identifier	false		2530480	0					
ANR	2530511	IfStatement	if ( scope > 0 )		2530480	2					
ANR	2530512	Condition	scope > 0	215:5:6594:6602	2530480	0	True				
ANR	2530513	RelationalExpression	scope > 0		2530480	0		>			
ANR	2530514	Identifier	scope		2530480	0					
ANR	2530515	PrimaryExpression	0		2530480	1					
ANR	2530516	CompoundStatement		15:2:425:481	2530480	1					
ANR	2530517	IdentifierDeclStatement	"char * sign = """" ;"	216:2:6609:6624	2530480	0	True				
ANR	2530518	IdentifierDecl	"* sign = """""		2530480	0					
ANR	2530519	IdentifierDeclType	char *		2530480	0					
ANR	2530520	Identifier	sign		2530480	1					
ANR	2530521	AssignmentExpression	"* sign = """""		2530480	2		=			
ANR	2530522	Identifier	sign		2530480	0					
ANR	2530523	PrimaryExpression	""""""		2530480	1					
ANR	2530524	IfStatement	if ( delta < 0 )		2530480	1					
ANR	2530525	Condition	delta < 0	217:6:6632:6640	2530480	0	True				
ANR	2530526	RelationalExpression	delta < 0		2530480	0		<			
ANR	2530527	Identifier	delta		2530480	0					
ANR	2530528	PrimaryExpression	0		2530480	1					
ANR	2530529	CompoundStatement		8:17:148:148	2530480	1					
ANR	2530530	ExpressionStatement	delta = - delta	218:3:6648:6662	2530480	0	True				
ANR	2530531	AssignmentExpression	delta = - delta		2530480	0		=			
ANR	2530532	Identifier	delta		2530480	0					
ANR	2530533	UnaryOperationExpression	- delta		2530480	1					
ANR	2530534	UnaryOperator	-		2530480	0					
ANR	2530535	Identifier	delta		2530480	1					
ANR	2530536	ExpressionStatement	"sign = ""_"""	219:3:6667:6677	2530480	1	True				
ANR	2530537	AssignmentExpression	"sign = ""_"""		2530480	0		=			
ANR	2530538	Identifier	sign		2530480	0					
ANR	2530539	PrimaryExpression	"""_"""		2530480	1					
ANR	2530540	Statement	char	221:2:6685:6688	2530480	2	True				
ANR	2530541	Statement	*	221:7:6690:6690	2530480	3	True				
ANR	2530542	Statement	fcn_key	221:8:6691:6697	2530480	4	True				
ANR	2530543	Statement	=	221:16:6699:6699	2530480	5	True				
ANR	2530544	Statement	sdb_fmt	221:18:6701:6707	2530480	6	True				
ANR	2530545	Statement	(	221:26:6709:6709	2530480	7	True				
ANR	2530546	Statement	"""fcn.0x%"""	221:27:6710:6718	2530480	8	True				
ANR	2530547	Statement	PFMT64x	221:36:6719:6725	2530480	9	True				
ANR	2530548	Statement	""".%c"""	221:44:6727:6731	2530480	10	True				
ANR	2530549	Statement	","	221:49:6732:6732	2530480	11	True				
ANR	2530550	Statement	addr	221:51:6734:6737	2530480	12	True				
ANR	2530551	Statement	","	221:55:6738:6738	2530480	13	True				
ANR	2530552	Statement	kind	221:57:6740:6743	2530480	14	True				
ANR	2530553	Statement	)	221:61:6744:6744	2530480	15	True				
ANR	2530554	ExpressionStatement		221:62:6745:6745	2530480	16	True				
ANR	2530555	Statement	char	222:2:6749:6752	2530480	17	True				
ANR	2530556	Statement	*	222:7:6754:6754	2530480	18	True				
ANR	2530557	Statement	var_key	222:8:6755:6761	2530480	19	True				
ANR	2530558	Statement	=	222:16:6763:6763	2530480	20	True				
ANR	2530559	Statement	sdb_fmt	222:18:6765:6771	2530480	21	True				
ANR	2530560	Statement	(	222:26:6773:6773	2530480	22	True				
ANR	2530561	Statement	"""var.0x%"""	222:27:6774:6782	2530480	23	True				
ANR	2530562	Statement	PFMT64x	222:36:6783:6789	2530480	24	True				
ANR	2530563	Statement	""".%c.%d.%s%d"""	222:44:6791:6803	2530480	25	True				
ANR	2530564	Statement	","	222:57:6804:6804	2530480	26	True				
ANR	2530565	Statement	addr	222:59:6806:6809	2530480	27	True				
ANR	2530566	Statement	","	222:63:6810:6810	2530480	28	True				
ANR	2530567	Statement	kind	222:65:6812:6815	2530480	29	True				
ANR	2530568	Statement	","	222:69:6816:6816	2530480	30	True				
ANR	2530569	Statement	scope	222:71:6818:6822	2530480	31	True				
ANR	2530570	Statement	","	222:76:6823:6823	2530480	32	True				
ANR	2530571	Statement	sign	222:78:6825:6828	2530480	33	True				
ANR	2530572	Statement	","	222:82:6829:6829	2530480	34	True				
ANR	2530573	Statement	delta	222:84:6831:6835	2530480	35	True				
ANR	2530574	Statement	)	222:89:6836:6836	2530480	36	True				
ANR	2530575	ExpressionStatement		222:90:6837:6837	2530480	37	True				
ANR	2530576	Statement	char	223:2:6841:6844	2530480	38	True				
ANR	2530577	Statement	*	223:7:6846:6846	2530480	39	True				
ANR	2530578	Statement	name_key	223:8:6847:6854	2530480	40	True				
ANR	2530579	Statement	=	223:17:6856:6856	2530480	41	True				
ANR	2530580	Statement	sdb_fmt	223:19:6858:6864	2530480	42	True				
ANR	2530581	Statement	(	223:27:6866:6866	2530480	43	True				
ANR	2530582	Statement	"""var.0x%"""	223:28:6867:6875	2530480	44	True				
ANR	2530583	Statement	PFMT64x	223:37:6876:6882	2530480	45	True				
ANR	2530584	Statement	""".%d.%s"""	223:45:6884:6891	2530480	46	True				
ANR	2530585	Statement	","	223:53:6892:6892	2530480	47	True				
ANR	2530586	Statement	addr	223:55:6894:6897	2530480	48	True				
ANR	2530587	Statement	","	223:59:6898:6898	2530480	49	True				
ANR	2530588	Statement	scope	223:61:6900:6904	2530480	50	True				
ANR	2530589	Statement	","	223:66:6905:6905	2530480	51	True				
ANR	2530590	Statement	av	223:68:6907:6908	2530480	52	True				
ANR	2530591	Statement	->	223:70:6909:6910	2530480	53	True				
ANR	2530592	Statement	name	223:72:6911:6914	2530480	54	True				
ANR	2530593	Statement	)	223:76:6915:6915	2530480	55	True				
ANR	2530594	ExpressionStatement		223:77:6916:6916	2530480	56	True				
ANR	2530595	IdentifierDeclStatement	"char * shortvar = sdb_fmt ( ""%d.%s%d"" , scope , sign , delta ) ;"	224:2:6920:6976	2530480	57	True				
ANR	2530596	IdentifierDecl	"* shortvar = sdb_fmt ( ""%d.%s%d"" , scope , sign , delta )"		2530480	0					
ANR	2530597	IdentifierDeclType	char *		2530480	0					
ANR	2530598	Identifier	shortvar		2530480	1					
ANR	2530599	AssignmentExpression	"* shortvar = sdb_fmt ( ""%d.%s%d"" , scope , sign , delta )"		2530480	2		=			
ANR	2530600	Identifier	shortvar		2530480	0					
ANR	2530601	CallExpression	"sdb_fmt ( ""%d.%s%d"" , scope , sign , delta )"		2530480	1					
ANR	2530602	Callee	sdb_fmt		2530480	0					
ANR	2530603	Identifier	sdb_fmt		2530480	0					
ANR	2530604	ArgumentList	"""%d.%s%d"""		2530480	1					
ANR	2530605	Argument	"""%d.%s%d"""		2530480	0					
ANR	2530606	PrimaryExpression	"""%d.%s%d"""		2530480	0					
ANR	2530607	Argument	scope		2530480	1					
ANR	2530608	Identifier	scope		2530480	0					
ANR	2530609	Argument	sign		2530480	2					
ANR	2530610	Identifier	sign		2530480	0					
ANR	2530611	Argument	delta		2530480	3					
ANR	2530612	Identifier	delta		2530480	0					
ANR	2530613	ExpressionStatement	"sdb_array_remove ( DB , fcn_key , shortvar , 0 )"	225:2:6980:7023	2530480	58	True				
ANR	2530614	CallExpression	"sdb_array_remove ( DB , fcn_key , shortvar , 0 )"		2530480	0					
ANR	2530615	Callee	sdb_array_remove		2530480	0					
ANR	2530616	Identifier	sdb_array_remove		2530480	0					
ANR	2530617	ArgumentList	DB		2530480	1					
ANR	2530618	Argument	DB		2530480	0					
ANR	2530619	Identifier	DB		2530480	0					
ANR	2530620	Argument	fcn_key		2530480	1					
ANR	2530621	Identifier	fcn_key		2530480	0					
ANR	2530622	Argument	shortvar		2530480	2					
ANR	2530623	Identifier	shortvar		2530480	0					
ANR	2530624	Argument	0		2530480	3					
ANR	2530625	PrimaryExpression	0		2530480	0					
ANR	2530626	ExpressionStatement	"sdb_unset ( DB , var_key , 0 )"	226:2:7027:7053	2530480	59	True				
ANR	2530627	CallExpression	"sdb_unset ( DB , var_key , 0 )"		2530480	0					
ANR	2530628	Callee	sdb_unset		2530480	0					
ANR	2530629	Identifier	sdb_unset		2530480	0					
ANR	2530630	ArgumentList	DB		2530480	1					
ANR	2530631	Argument	DB		2530480	0					
ANR	2530632	Identifier	DB		2530480	0					
ANR	2530633	Argument	var_key		2530480	1					
ANR	2530634	Identifier	var_key		2530480	0					
ANR	2530635	Argument	0		2530480	2					
ANR	2530636	PrimaryExpression	0		2530480	0					
ANR	2530637	ExpressionStatement	"sdb_unset ( DB , name_key , 0 )"	227:2:7057:7084	2530480	60	True				
ANR	2530638	CallExpression	"sdb_unset ( DB , name_key , 0 )"		2530480	0					
ANR	2530639	Callee	sdb_unset		2530480	0					
ANR	2530640	Identifier	sdb_unset		2530480	0					
ANR	2530641	ArgumentList	DB		2530480	1					
ANR	2530642	Argument	DB		2530480	0					
ANR	2530643	Identifier	DB		2530480	0					
ANR	2530644	Argument	name_key		2530480	1					
ANR	2530645	Identifier	name_key		2530480	0					
ANR	2530646	Argument	0		2530480	2					
ANR	2530647	PrimaryExpression	0		2530480	0					
ANR	2530648	IfStatement	if ( * sign )		2530480	61					
ANR	2530649	Condition	* sign	228:6:7092:7096	2530480	0	True				
ANR	2530650	UnaryOperationExpression	* sign		2530480	0					
ANR	2530651	UnaryOperator	*		2530480	0					
ANR	2530652	Identifier	sign		2530480	1					
ANR	2530653	CompoundStatement		19:13:604:604	2530480	1					
ANR	2530654	ExpressionStatement	delta = - delta	229:3:7104:7118	2530480	0	True				
ANR	2530655	AssignmentExpression	delta = - delta		2530480	0		=			
ANR	2530656	Identifier	delta		2530480	0					
ANR	2530657	UnaryOperationExpression	- delta		2530480	1					
ANR	2530658	UnaryOperator	-		2530480	0					
ANR	2530659	Identifier	delta		2530480	1					
ANR	2530660	ElseStatement	else		2530480	0					
ANR	2530661	CompoundStatement		24:2:702:783	2530480	0					
ANR	2530662	Statement	const	232:2:7136:7140	2530480	0	True				
ANR	2530663	Statement	char	232:8:7142:7145	2530480	1	True				
ANR	2530664	Statement	*	232:13:7147:7147	2530480	2	True				
ANR	2530665	Statement	var_global	232:14:7148:7157	2530480	3	True				
ANR	2530666	Statement	=	232:25:7159:7159	2530480	4	True				
ANR	2530667	Statement	sdb_fmt	232:27:7161:7167	2530480	5	True				
ANR	2530668	Statement	(	232:35:7169:7169	2530480	6	True				
ANR	2530669	Statement	"""var.0x%"""	232:36:7170:7178	2530480	7	True				
ANR	2530670	Statement	PFMT64x	232:45:7179:7185	2530480	8	True				
ANR	2530671	Statement	","	232:52:7186:7186	2530480	9	True				
ANR	2530672	Statement	addr	232:54:7188:7191	2530480	10	True				
ANR	2530673	Statement	)	232:58:7192:7192	2530480	11	True				
ANR	2530674	ExpressionStatement		232:59:7193:7193	2530480	12	True				
ANR	2530675	IdentifierDeclStatement	"const char * var_def = sdb_fmt ( ""%c.%s,%d,%s"" , kind , av -> type , av -> size , av -> name ) ;"	233:2:7197:7278	2530480	13	True				
ANR	2530676	IdentifierDecl	"* var_def = sdb_fmt ( ""%c.%s,%d,%s"" , kind , av -> type , av -> size , av -> name )"		2530480	0					
ANR	2530677	IdentifierDeclType	const char *		2530480	0					
ANR	2530678	Identifier	var_def		2530480	1					
ANR	2530679	AssignmentExpression	"* var_def = sdb_fmt ( ""%c.%s,%d,%s"" , kind , av -> type , av -> size , av -> name )"		2530480	2		=			
ANR	2530680	Identifier	var_def		2530480	0					
ANR	2530681	CallExpression	"sdb_fmt ( ""%c.%s,%d,%s"" , kind , av -> type , av -> size , av -> name )"		2530480	1					
ANR	2530682	Callee	sdb_fmt		2530480	0					
ANR	2530683	Identifier	sdb_fmt		2530480	0					
ANR	2530684	ArgumentList	"""%c.%s,%d,%s"""		2530480	1					
ANR	2530685	Argument	"""%c.%s,%d,%s"""		2530480	0					
ANR	2530686	PrimaryExpression	"""%c.%s,%d,%s"""		2530480	0					
ANR	2530687	Argument	kind		2530480	1					
ANR	2530688	Identifier	kind		2530480	0					
ANR	2530689	Argument	av -> type		2530480	2					
ANR	2530690	PtrMemberAccess	av -> type		2530480	0					
ANR	2530691	Identifier	av		2530480	0					
ANR	2530692	Identifier	type		2530480	1					
ANR	2530693	Argument	av -> size		2530480	3					
ANR	2530694	PtrMemberAccess	av -> size		2530480	0					
ANR	2530695	Identifier	av		2530480	0					
ANR	2530696	Identifier	size		2530480	1					
ANR	2530697	Argument	av -> name		2530480	4					
ANR	2530698	PtrMemberAccess	av -> name		2530480	0					
ANR	2530699	Identifier	av		2530480	0					
ANR	2530700	Identifier	name		2530480	1					
ANR	2530701	ExpressionStatement	"sdb_array_remove ( DB , var_global , var_def , 0 )"	234:2:7282:7327	2530480	14	True				
ANR	2530702	CallExpression	"sdb_array_remove ( DB , var_global , var_def , 0 )"		2530480	0					
ANR	2530703	Callee	sdb_array_remove		2530480	0					
ANR	2530704	Identifier	sdb_array_remove		2530480	0					
ANR	2530705	ArgumentList	DB		2530480	1					
ANR	2530706	Argument	DB		2530480	0					
ANR	2530707	Identifier	DB		2530480	0					
ANR	2530708	Argument	var_global		2530480	1					
ANR	2530709	Identifier	var_global		2530480	0					
ANR	2530710	Argument	var_def		2530480	2					
ANR	2530711	Identifier	var_def		2530480	0					
ANR	2530712	Argument	0		2530480	3					
ANR	2530713	PrimaryExpression	0		2530480	0					
ANR	2530714	ExpressionStatement	r_anal_var_free ( av )	236:1:7333:7353	2530480	3	True				
ANR	2530715	CallExpression	r_anal_var_free ( av )		2530480	0					
ANR	2530716	Callee	r_anal_var_free		2530480	0					
ANR	2530717	Identifier	r_anal_var_free		2530480	0					
ANR	2530718	ArgumentList	av		2530480	1					
ANR	2530719	Argument	av		2530480	0					
ANR	2530720	Identifier	av		2530480	0					
ANR	2530721	ExpressionStatement	"r_anal_var_access_clear ( a , addr , scope , delta )"	237:1:7356:7403	2530480	4	True				
ANR	2530722	CallExpression	"r_anal_var_access_clear ( a , addr , scope , delta )"		2530480	0					
ANR	2530723	Callee	r_anal_var_access_clear		2530480	0					
ANR	2530724	Identifier	r_anal_var_access_clear		2530480	0					
ANR	2530725	ArgumentList	a		2530480	1					
ANR	2530726	Argument	a		2530480	0					
ANR	2530727	Identifier	a		2530480	0					
ANR	2530728	Argument	addr		2530480	1					
ANR	2530729	Identifier	addr		2530480	0					
ANR	2530730	Argument	scope		2530480	2					
ANR	2530731	Identifier	scope		2530480	0					
ANR	2530732	Argument	delta		2530480	3					
ANR	2530733	Identifier	delta		2530480	0					
ANR	2530734	ReturnStatement	return true ;	238:1:7406:7417	2530480	5	True				
ANR	2530735	Identifier	true		2530480	0					
ANR	2530736	ReturnType	R_API int		2530480	1					
ANR	2530737	Identifier	r_anal_var_delete		2530480	2					
ANR	2530738	ParameterList	"RAnal * a , ut64 addr , const char kind , int scope , int delta"		2530480	3					
ANR	2530739	Parameter	RAnal * a	210:28:6434:6441	2530480	0	True				
ANR	2530740	ParameterType	RAnal *		2530480	0					
ANR	2530741	Identifier	a		2530480	1					
ANR	2530742	Parameter	ut64 addr	210:38:6444:6452	2530480	1	True				
ANR	2530743	ParameterType	ut64		2530480	0					
ANR	2530744	Identifier	addr		2530480	1					
ANR	2530745	Parameter	const char kind	210:49:6455:6469	2530480	2	True				
ANR	2530746	ParameterType	const char		2530480	0					
ANR	2530747	Identifier	kind		2530480	1					
ANR	2530748	Parameter	int scope	210:66:6472:6480	2530480	3	True				
ANR	2530749	ParameterType	int		2530480	0					
ANR	2530750	Identifier	scope		2530480	1					
ANR	2530751	Parameter	int delta	210:77:6483:6491	2530480	4	True				
ANR	2530752	ParameterType	int		2530480	0					
ANR	2530753	Identifier	delta		2530480	1					
ANR	2530754	CFGEntryNode	ENTRY		2530480		True				
ANR	2530755	CFGExitNode	EXIT		2530480		True				
ANR	2530756	Symbol	a		2530480						
ANR	2530757	Symbol	kind		2530480						
ANR	2530758	Symbol	av -> size		2530480						
ANR	2530759	Symbol	delta		2530480						
ANR	2530760	Symbol	false		2530480						
ANR	2530761	Symbol	sign		2530480						
ANR	2530762	Symbol	av -> name		2530480						
ANR	2530763	Symbol	name_key		2530480						
ANR	2530764	Symbol	av		2530480						
ANR	2530765	Symbol	var_def		2530480						
ANR	2530766	Symbol	r_anal_var_get		2530480						
ANR	2530767	Symbol	scope		2530480						
ANR	2530768	Symbol	fcn_key		2530480						
ANR	2530769	Symbol	* sign		2530480						
ANR	2530770	Symbol	* av		2530480						
ANR	2530771	Symbol	true		2530480						
ANR	2530772	Symbol	addr		2530480						
ANR	2530773	Symbol	var_global		2530480						
ANR	2530774	Symbol	sdb_fmt		2530480						
ANR	2530775	Symbol	shortvar		2530480						
ANR	2530776	Symbol	av -> type		2530480						
ANR	2530777	Symbol	DB		2530480						
ANR	2530778	Symbol	var_key		2530480						
ANR	2530779	Function	r_anal_var_delete_byname	241:0:7422:8510							
ANR	2530780	FunctionDef	"r_anal_var_delete_byname (RAnal * a , RAnalFunction * fcn , int kind , const char * name)"		2530779	0					
ANR	2530781	CompoundStatement		241:94:7516:8510	2530779	0					
ANR	2530782	IdentifierDeclStatement	char * varlist ;	242:1:7519:7532	2530779	0	True				
ANR	2530783	IdentifierDecl	* varlist		2530779	0					
ANR	2530784	IdentifierDeclType	char *		2530779	0					
ANR	2530785	Identifier	varlist		2530779	1					
ANR	2530786	IfStatement	if ( ! a || ! fcn )		2530779	1					
ANR	2530787	Condition	! a || ! fcn	243:5:7539:7548	2530779	0	True				
ANR	2530788	OrExpression	! a || ! fcn		2530779	0		||			
ANR	2530789	UnaryOperationExpression	! a		2530779	0					
ANR	2530790	UnaryOperator	!		2530779	0					
ANR	2530791	Identifier	a		2530779	1					
ANR	2530792	UnaryOperationExpression	! fcn		2530779	1					
ANR	2530793	UnaryOperator	!		2530779	0					
ANR	2530794	Identifier	fcn		2530779	1					
ANR	2530795	CompoundStatement		3:17:34:34	2530779	1					
ANR	2530796	ReturnStatement	return false ;	244:2:7555:7567	2530779	0	True				
ANR	2530797	Identifier	false		2530779	0					
ANR	2530798	Statement	varlist	246:1:7573:7579	2530779	2	True				
ANR	2530799	Statement	=	246:9:7581:7581	2530779	3	True				
ANR	2530800	Statement	sdb_get	246:11:7583:7589	2530779	4	True				
ANR	2530801	Statement	(	246:19:7591:7591	2530779	5	True				
ANR	2530802	Statement	DB	246:20:7592:7593	2530779	6	True				
ANR	2530803	Statement	","	246:22:7594:7594	2530779	7	True				
ANR	2530804	Statement	sdb_fmt	246:24:7596:7602	2530779	8	True				
ANR	2530805	Statement	(	246:32:7604:7604	2530779	9	True				
ANR	2530806	Statement	"""fcn.0x%"""	246:33:7605:7613	2530779	10	True				
ANR	2530807	Statement	PFMT64x	246:42:7614:7620	2530779	11	True				
ANR	2530808	Statement	""".%c"""	246:50:7622:7626	2530779	12	True				
ANR	2530809	Statement	","	246:55:7627:7627	2530779	13	True				
ANR	2530810	Statement	fcn	247:3:7632:7634	2530779	14	True				
ANR	2530811	Statement	->	247:6:7635:7636	2530779	15	True				
ANR	2530812	Statement	addr	247:8:7637:7640	2530779	16	True				
ANR	2530813	Statement	","	247:12:7641:7641	2530779	17	True				
ANR	2530814	Statement	kind	247:14:7643:7646	2530779	18	True				
ANR	2530815	Statement	)	247:18:7647:7647	2530779	19	True				
ANR	2530816	Statement	","	247:19:7648:7648	2530779	20	True				
ANR	2530817	Statement	0	247:21:7650:7650	2530779	21	True				
ANR	2530818	Statement	)	247:22:7651:7651	2530779	22	True				
ANR	2530819	ExpressionStatement		247:23:7652:7652	2530779	23	True				
ANR	2530820	IfStatement	if ( varlist )		2530779	24					
ANR	2530821	Condition	varlist	248:5:7659:7665	2530779	0	True				
ANR	2530822	Identifier	varlist		2530779	0					
ANR	2530823	CompoundStatement		9:2:155:181	2530779	1					
ANR	2530824	IdentifierDeclStatement	"char * next , * ptr = varlist ;"	249:2:7672:7698	2530779	0	True				
ANR	2530825	IdentifierDecl	* next		2530779	0					
ANR	2530826	IdentifierDeclType	char *		2530779	0					
ANR	2530827	Identifier	next		2530779	1					
ANR	2530828	IdentifierDecl	* ptr = varlist		2530779	1					
ANR	2530829	IdentifierDeclType	char *		2530779	0					
ANR	2530830	Identifier	ptr		2530779	1					
ANR	2530831	AssignmentExpression	* ptr = varlist		2530779	2		=			
ANR	2530832	Identifier	varlist		2530779	0					
ANR	2530833	Identifier	varlist		2530779	1					
ANR	2530834	IfStatement	if ( varlist && * varlist )		2530779	1					
ANR	2530835	Condition	varlist && * varlist	250:6:7706:7724	2530779	0	True				
ANR	2530836	AndExpression	varlist && * varlist		2530779	0		&&			
ANR	2530837	Identifier	varlist		2530779	0					
ANR	2530838	UnaryOperationExpression	* varlist		2530779	1					
ANR	2530839	UnaryOperator	*		2530779	0					
ANR	2530840	Identifier	varlist		2530779	1					
ANR	2530841	CompoundStatement		10:27:210:210	2530779	1					
ANR	2530842	DoStatement	do		2530779	0					
ANR	2530843	CompoundStatement		20:4:463:513	2530779	0					
ANR	2530844	IdentifierDeclStatement	"char * word = sdb_anext ( ptr , & next ) ;"	252:4:7741:7776	2530779	0	True				
ANR	2530845	IdentifierDecl	"* word = sdb_anext ( ptr , & next )"		2530779	0					
ANR	2530846	IdentifierDeclType	char *		2530779	0					
ANR	2530847	Identifier	word		2530779	1					
ANR	2530848	AssignmentExpression	"* word = sdb_anext ( ptr , & next )"		2530779	2		=			
ANR	2530849	Identifier	word		2530779	0					
ANR	2530850	CallExpression	"sdb_anext ( ptr , & next )"		2530779	1					
ANR	2530851	Callee	sdb_anext		2530779	0					
ANR	2530852	Identifier	sdb_anext		2530779	0					
ANR	2530853	ArgumentList	ptr		2530779	1					
ANR	2530854	Argument	ptr		2530779	0					
ANR	2530855	Identifier	ptr		2530779	0					
ANR	2530856	Argument	& next		2530779	1					
ANR	2530857	UnaryOperationExpression	& next		2530779	0					
ANR	2530858	UnaryOperator	&		2530779	0					
ANR	2530859	Identifier	next		2530779	1					
ANR	2530860	IdentifierDeclStatement	"char * sign = strstr ( word , ""_"" ) ;"	253:4:7782:7813	2530779	1	True				
ANR	2530861	IdentifierDecl	"* sign = strstr ( word , ""_"" )"		2530779	0					
ANR	2530862	IdentifierDeclType	char *		2530779	0					
ANR	2530863	Identifier	sign		2530779	1					
ANR	2530864	AssignmentExpression	"* sign = strstr ( word , ""_"" )"		2530779	2		=			
ANR	2530865	Identifier	sign		2530779	0					
ANR	2530866	CallExpression	"strstr ( word , ""_"" )"		2530779	1					
ANR	2530867	Callee	strstr		2530779	0					
ANR	2530868	Identifier	strstr		2530779	0					
ANR	2530869	ArgumentList	word		2530779	1					
ANR	2530870	Argument	word		2530779	0					
ANR	2530871	Identifier	word		2530779	0					
ANR	2530872	Argument	"""_"""		2530779	1					
ANR	2530873	PrimaryExpression	"""_"""		2530779	0					
ANR	2530874	Statement	const	254:4:7819:7823	2530779	2	True				
ANR	2530875	Statement	char	254:10:7825:7828	2530779	3	True				
ANR	2530876	Statement	*	254:15:7830:7830	2530779	4	True				
ANR	2530877	Statement	vardef	254:16:7831:7836	2530779	5	True				
ANR	2530878	Statement	=	254:23:7838:7838	2530779	6	True				
ANR	2530879	Statement	sdb_const_get	254:25:7840:7852	2530779	7	True				
ANR	2530880	Statement	(	254:39:7854:7854	2530779	8	True				
ANR	2530881	Statement	DB	254:40:7855:7856	2530779	9	True				
ANR	2530882	Statement	","	254:42:7857:7857	2530779	10	True				
ANR	2530883	Statement	sdb_fmt	254:44:7859:7865	2530779	11	True				
ANR	2530884	Statement	(	254:52:7867:7867	2530779	12	True				
ANR	2530885	Statement	"""var.0x%"""	255:6:7875:7883	2530779	13	True				
ANR	2530886	Statement	PFMT64x	255:15:7884:7890	2530779	14	True				
ANR	2530887	Statement	""".%c.%s"""	255:23:7892:7899	2530779	15	True				
ANR	2530888	Statement	","	255:31:7900:7900	2530779	16	True				
ANR	2530889	Statement	fcn	256:6:7908:7910	2530779	17	True				
ANR	2530890	Statement	->	256:9:7911:7912	2530779	18	True				
ANR	2530891	Statement	addr	256:11:7913:7916	2530779	19	True				
ANR	2530892	Statement	","	256:15:7917:7917	2530779	20	True				
ANR	2530893	Statement	kind	256:17:7919:7922	2530779	21	True				
ANR	2530894	Statement	","	256:21:7923:7923	2530779	22	True				
ANR	2530895	Statement	word	256:23:7925:7928	2530779	23	True				
ANR	2530896	Statement	)	256:27:7929:7929	2530779	24	True				
ANR	2530897	Statement	","	256:28:7930:7930	2530779	25	True				
ANR	2530898	Statement	0	256:30:7932:7932	2530779	26	True				
ANR	2530899	Statement	)	256:31:7933:7933	2530779	27	True				
ANR	2530900	ExpressionStatement		256:32:7934:7934	2530779	28	True				
ANR	2530901	IfStatement	if ( sign )		2530779	29					
ANR	2530902	Condition	sign	257:8:7944:7947	2530779	0	True				
ANR	2530903	Identifier	sign		2530779	0					
ANR	2530904	CompoundStatement		17:14:433:433	2530779	1					
ANR	2530905	ExpressionStatement	* sign = '-'	258:5:7957:7968	2530779	0	True				
ANR	2530906	AssignmentExpression	* sign = '-'		2530779	0		=			
ANR	2530907	UnaryOperationExpression	* sign		2530779	0					
ANR	2530908	UnaryOperator	*		2530779	0					
ANR	2530909	Identifier	sign		2530779	1					
ANR	2530910	PrimaryExpression	'-'		2530779	1					
ANR	2530911	IdentifierDeclStatement	int delta = strlen ( word ) < 3 ? - 1 : atoi ( word + 2 ) ;	260:4:7980:8030	2530779	30	True				
ANR	2530912	IdentifierDecl	delta = strlen ( word ) < 3 ? - 1 : atoi ( word + 2 )		2530779	0					
ANR	2530913	IdentifierDeclType	int		2530779	0					
ANR	2530914	Identifier	delta		2530779	1					
ANR	2530915	AssignmentExpression	delta = strlen ( word ) < 3 ? - 1 : atoi ( word + 2 )		2530779	2		=			
ANR	2530916	Identifier	delta		2530779	0					
ANR	2530917	ConditionalExpression	strlen ( word ) < 3 ? - 1 : atoi ( word + 2 )		2530779	1					
ANR	2530918	Condition	strlen ( word ) < 3		2530779	0					
ANR	2530919	RelationalExpression	strlen ( word ) < 3		2530779	0		<			
ANR	2530920	CallExpression	strlen ( word )		2530779	0					
ANR	2530921	Callee	strlen		2530779	0					
ANR	2530922	Identifier	strlen		2530779	0					
ANR	2530923	ArgumentList	word		2530779	1					
ANR	2530924	Argument	word		2530779	0					
ANR	2530925	Identifier	word		2530779	0					
ANR	2530926	PrimaryExpression	3		2530779	1					
ANR	2530927	UnaryOperationExpression	- 1		2530779	1					
ANR	2530928	UnaryOperator	-		2530779	0					
ANR	2530929	PrimaryExpression	1		2530779	1					
ANR	2530930	CallExpression	atoi ( word + 2 )		2530779	2					
ANR	2530931	Callee	atoi		2530779	0					
ANR	2530932	Identifier	atoi		2530779	0					
ANR	2530933	ArgumentList	word + 2		2530779	1					
ANR	2530934	Argument	word + 2		2530779	0					
ANR	2530935	AdditiveExpression	word + 2		2530779	0		+			
ANR	2530936	Identifier	word		2530779	0					
ANR	2530937	PrimaryExpression	2		2530779	1					
ANR	2530938	IfStatement	if ( vardef )		2530779	31					
ANR	2530939	Condition	vardef	261:8:8040:8045	2530779	0	True				
ANR	2530940	Identifier	vardef		2530779	0					
ANR	2530941	CompoundStatement		22:5:538:574	2530779	1					
ANR	2530942	IdentifierDeclStatement	"const char * p = strchr ( vardef , ',' ) ;"	262:5:8055:8091	2530779	0	True				
ANR	2530943	IdentifierDecl	"* p = strchr ( vardef , ',' )"		2530779	0					
ANR	2530944	IdentifierDeclType	const char *		2530779	0					
ANR	2530945	Identifier	p		2530779	1					
ANR	2530946	AssignmentExpression	"* p = strchr ( vardef , ',' )"		2530779	2		=			
ANR	2530947	Identifier	p		2530779	0					
ANR	2530948	CallExpression	"strchr ( vardef , ',' )"		2530779	1					
ANR	2530949	Callee	strchr		2530779	0					
ANR	2530950	Identifier	strchr		2530779	0					
ANR	2530951	ArgumentList	vardef		2530779	1					
ANR	2530952	Argument	vardef		2530779	0					
ANR	2530953	Identifier	vardef		2530779	0					
ANR	2530954	Argument	"','"		2530779	1					
ANR	2530955	PrimaryExpression	"','"		2530779	0					
ANR	2530956	IfStatement	if ( p )		2530779	1					
ANR	2530957	Condition	p	263:9:8102:8102	2530779	0	True				
ANR	2530958	Identifier	p		2530779	0					
ANR	2530959	CompoundStatement		23:12:588:588	2530779	1					
ANR	2530960	ExpressionStatement	"p = strchr ( p + 1 , ',' )"	264:6:8113:8136	2530779	0	True				
ANR	2530961	AssignmentExpression	"p = strchr ( p + 1 , ',' )"		2530779	0		=			
ANR	2530962	Identifier	p		2530779	0					
ANR	2530963	CallExpression	"strchr ( p + 1 , ',' )"		2530779	1					
ANR	2530964	Callee	strchr		2530779	0					
ANR	2530965	Identifier	strchr		2530779	0					
ANR	2530966	ArgumentList	p + 1		2530779	1					
ANR	2530967	Argument	p + 1		2530779	0					
ANR	2530968	AdditiveExpression	p + 1		2530779	0		+			
ANR	2530969	Identifier	p		2530779	0					
ANR	2530970	PrimaryExpression	1		2530779	1					
ANR	2530971	Argument	"','"		2530779	1					
ANR	2530972	PrimaryExpression	"','"		2530779	0					
ANR	2530973	IfStatement	if ( p )		2530779	1					
ANR	2530974	Condition	p	265:10:8148:8148	2530779	0	True				
ANR	2530975	Identifier	p		2530779	0					
ANR	2530976	CompoundStatement		25:13:634:634	2530779	1					
ANR	2530977	ExpressionStatement	"p = strchr ( p + 1 , ',' )"	266:7:8160:8183	2530779	0	True				
ANR	2530978	AssignmentExpression	"p = strchr ( p + 1 , ',' )"		2530779	0		=			
ANR	2530979	Identifier	p		2530779	0					
ANR	2530980	CallExpression	"strchr ( p + 1 , ',' )"		2530779	1					
ANR	2530981	Callee	strchr		2530779	0					
ANR	2530982	Identifier	strchr		2530779	0					
ANR	2530983	ArgumentList	p + 1		2530779	1					
ANR	2530984	Argument	p + 1		2530779	0					
ANR	2530985	AdditiveExpression	p + 1		2530779	0		+			
ANR	2530986	Identifier	p		2530779	0					
ANR	2530987	PrimaryExpression	1		2530779	1					
ANR	2530988	Argument	"','"		2530779	1					
ANR	2530989	PrimaryExpression	"','"		2530779	0					
ANR	2530990	IfStatement	if ( p )		2530779	1					
ANR	2530991	Condition	p	267:11:8196:8196	2530779	0	True				
ANR	2530992	Identifier	p		2530779	0					
ANR	2530993	CompoundStatement		27:14:682:682	2530779	1					
ANR	2530994	IfStatement	"if ( ! strcmp ( p + 1 , name ) )"		2530779	0					
ANR	2530995	Condition	"! strcmp ( p + 1 , name )"	268:12:8213:8233	2530779	0	True				
ANR	2530996	UnaryOperationExpression	"! strcmp ( p + 1 , name )"		2530779	0					
ANR	2530997	UnaryOperator	!		2530779	0					
ANR	2530998	CallExpression	"strcmp ( p + 1 , name )"		2530779	1					
ANR	2530999	Callee	strcmp		2530779	0					
ANR	2531000	Identifier	strcmp		2530779	0					
ANR	2531001	ArgumentList	p + 1		2530779	1					
ANR	2531002	Argument	p + 1		2530779	0					
ANR	2531003	AdditiveExpression	p + 1		2530779	0		+			
ANR	2531004	Identifier	p		2530779	0					
ANR	2531005	PrimaryExpression	1		2530779	1					
ANR	2531006	Argument	name		2530779	1					
ANR	2531007	Identifier	name		2530779	0					
ANR	2531008	CompoundStatement		28:35:719:719	2530779	1					
ANR	2531009	ReturnStatement	"return r_anal_var_delete ( a , fcn -> addr , kind , 1 , delta ) ;"	269:9:8247:8312	2530779	0	True				
ANR	2531010	CallExpression	"r_anal_var_delete ( a , fcn -> addr , kind , 1 , delta )"		2530779	0					
ANR	2531011	Callee	r_anal_var_delete		2530779	0					
ANR	2531012	Identifier	r_anal_var_delete		2530779	0					
ANR	2531013	ArgumentList	a		2530779	1					
ANR	2531014	Argument	a		2530779	0					
ANR	2531015	Identifier	a		2530779	0					
ANR	2531016	Argument	fcn -> addr		2530779	1					
ANR	2531017	PtrMemberAccess	fcn -> addr		2530779	0					
ANR	2531018	Identifier	fcn		2530779	0					
ANR	2531019	Identifier	addr		2530779	1					
ANR	2531020	Argument	kind		2530779	2					
ANR	2531021	Identifier	kind		2530779	0					
ANR	2531022	Argument	1		2530779	3					
ANR	2531023	PrimaryExpression	1		2530779	0					
ANR	2531024	Argument	delta		2530779	4					
ANR	2531025	Identifier	delta		2530779	0					
ANR	2531026	ElseStatement	else		2530779	0					
ANR	2531027	CompoundStatement		35:11:842:842	2530779	0					
ANR	2531028	ExpressionStatement	"eprintf ( ""Inconsistent Sdb storage, Cannot find '%s'\\n"" , word )"	276:5:8366:8428	2530779	0	True				
ANR	2531029	CallExpression	"eprintf ( ""Inconsistent Sdb storage, Cannot find '%s'\\n"" , word )"		2530779	0					
ANR	2531030	Callee	eprintf		2530779	0					
ANR	2531031	Identifier	eprintf		2530779	0					
ANR	2531032	ArgumentList	"""Inconsistent Sdb storage, Cannot find '%s'\\n"""		2530779	1					
ANR	2531033	Argument	"""Inconsistent Sdb storage, Cannot find '%s'\\n"""		2530779	0					
ANR	2531034	PrimaryExpression	"""Inconsistent Sdb storage, Cannot find '%s'\\n"""		2530779	0					
ANR	2531035	Argument	word		2530779	1					
ANR	2531036	Identifier	word		2530779	0					
ANR	2531037	ExpressionStatement	ptr = next	278:4:8440:8450	2530779	32	True				
ANR	2531038	AssignmentExpression	ptr = next		2530779	0		=			
ANR	2531039	Identifier	ptr		2530779	0					
ANR	2531040	Identifier	next		2530779	1					
ANR	2531041	Condition	next	279:12:8464:8467	2530779	1	True				
ANR	2531042	Identifier	next		2530779	0					
ANR	2531043	ExpressionStatement	free ( varlist )	282:1:8479:8493	2530779	25	True				
ANR	2531044	CallExpression	free ( varlist )		2530779	0					
ANR	2531045	Callee	free		2530779	0					
ANR	2531046	Identifier	free		2530779	0					
ANR	2531047	ArgumentList	varlist		2530779	1					
ANR	2531048	Argument	varlist		2530779	0					
ANR	2531049	Identifier	varlist		2530779	0					
ANR	2531050	ReturnStatement	return false ;	283:1:8496:8508	2530779	26	True				
ANR	2531051	Identifier	false		2530779	0					
ANR	2531052	ReturnType	R_API bool		2530779	1					
ANR	2531053	Identifier	r_anal_var_delete_byname		2530779	2					
ANR	2531054	ParameterList	"RAnal * a , RAnalFunction * fcn , int kind , const char * name"		2530779	3					
ANR	2531055	Parameter	RAnal * a	241:36:7458:7465	2530779	0	True				
ANR	2531056	ParameterType	RAnal *		2530779	0					
ANR	2531057	Identifier	a		2530779	1					
ANR	2531058	Parameter	RAnalFunction * fcn	241:46:7468:7485	2530779	1	True				
ANR	2531059	ParameterType	RAnalFunction *		2530779	0					
ANR	2531060	Identifier	fcn		2530779	1					
ANR	2531061	Parameter	int kind	241:66:7488:7495	2530779	2	True				
ANR	2531062	ParameterType	int		2530779	0					
ANR	2531063	Identifier	kind		2530779	1					
ANR	2531064	Parameter	const char * name	241:76:7498:7513	2530779	3	True				
ANR	2531065	ParameterType	const char *		2530779	0					
ANR	2531066	Identifier	name		2530779	1					
ANR	2531067	CFGEntryNode	ENTRY		2530779		True				
ANR	2531068	CFGExitNode	EXIT		2530779		True				
ANR	2531069	Symbol	next		2530779						
ANR	2531070	Symbol	* fcn		2530779						
ANR	2531071	Symbol	sign		2530779						
ANR	2531072	Symbol	delta		2530779						
ANR	2531073	Symbol	strchr		2530779						
ANR	2531074	Symbol	fcn		2530779						
ANR	2531075	Symbol	strlen		2530779						
ANR	2531076	Symbol	vardef		2530779						
ANR	2531077	Symbol	* sign		2530779						
ANR	2531078	Symbol	varlist		2530779						
ANR	2531079	Symbol	atoi		2530779						
ANR	2531080	Symbol	strcmp		2530779						
ANR	2531081	Symbol	a		2530779						
ANR	2531082	Symbol	& next		2530779						
ANR	2531083	Symbol	kind		2530779						
ANR	2531084	Symbol	false		2530779						
ANR	2531085	Symbol	r_anal_var_delete		2530779						
ANR	2531086	Symbol	ptr		2530779						
ANR	2531087	Symbol	p		2530779						
ANR	2531088	Symbol	* varlist		2530779						
ANR	2531089	Symbol	strstr		2530779						
ANR	2531090	Symbol	name		2530779						
ANR	2531091	Symbol	fcn -> addr		2530779						
ANR	2531092	Symbol	sdb_anext		2530779						
ANR	2531093	Symbol	word		2530779						
ANR	2531094	Function	r_anal_var_get_byname	286:0:8513:9124							
ANR	2531095	FunctionDef	"r_anal_var_get_byname (RAnal * a , ut64 addr , const char * name)"		2531094	0					
ANR	2531096	CompoundStatement		286:77:8590:9124	2531094	0					
ANR	2531097	IfStatement	if ( ! a || ! name )		2531094	0					
ANR	2531098	Condition	! a || ! name	287:5:8597:8607	2531094	0	True				
ANR	2531099	OrExpression	! a || ! name		2531094	0		||			
ANR	2531100	UnaryOperationExpression	! a		2531094	0					
ANR	2531101	UnaryOperator	!		2531094	0					
ANR	2531102	Identifier	a		2531094	1					
ANR	2531103	UnaryOperationExpression	! name		2531094	1					
ANR	2531104	UnaryOperator	!		2531094	0					
ANR	2531105	Identifier	name		2531094	1					
ANR	2531106	CompoundStatement		2:18:19:19	2531094	1					
ANR	2531107	ReturnStatement	return NULL ;	289:2:8647:8658	2531094	0	True				
ANR	2531108	Identifier	NULL		2531094	0					
ANR	2531109	Statement	char	291:1:8664:8667	2531094	1	True				
ANR	2531110	Statement	*	291:6:8669:8669	2531094	2	True				
ANR	2531111	Statement	name_key	291:7:8670:8677	2531094	3	True				
ANR	2531112	Statement	=	291:16:8679:8679	2531094	4	True				
ANR	2531113	Statement	sdb_fmt	291:18:8681:8687	2531094	5	True				
ANR	2531114	Statement	(	291:26:8689:8689	2531094	6	True				
ANR	2531115	Statement	"""var.0x%"""	291:27:8690:8698	2531094	7	True				
ANR	2531116	Statement	PFMT64x	291:36:8699:8705	2531094	8	True				
ANR	2531117	Statement	""".%d.%s"""	291:44:8707:8714	2531094	9	True				
ANR	2531118	Statement	","	291:52:8715:8715	2531094	10	True				
ANR	2531119	Statement	addr	291:54:8717:8720	2531094	11	True				
ANR	2531120	Statement	","	291:58:8721:8721	2531094	12	True				
ANR	2531121	Statement	1	291:60:8723:8723	2531094	13	True				
ANR	2531122	Statement	","	291:61:8724:8724	2531094	14	True				
ANR	2531123	Statement	name	291:63:8726:8729	2531094	15	True				
ANR	2531124	Statement	)	291:67:8730:8730	2531094	16	True				
ANR	2531125	ExpressionStatement		291:68:8731:8731	2531094	17	True				
ANR	2531126	IdentifierDeclStatement	"char * name_value = sdb_get ( DB , name_key , 0 ) ;"	292:1:8734:8778	2531094	18	True				
ANR	2531127	IdentifierDecl	"* name_value = sdb_get ( DB , name_key , 0 )"		2531094	0					
ANR	2531128	IdentifierDeclType	char *		2531094	0					
ANR	2531129	Identifier	name_value		2531094	1					
ANR	2531130	AssignmentExpression	"* name_value = sdb_get ( DB , name_key , 0 )"		2531094	2		=			
ANR	2531131	Identifier	name_value		2531094	0					
ANR	2531132	CallExpression	"sdb_get ( DB , name_key , 0 )"		2531094	1					
ANR	2531133	Callee	sdb_get		2531094	0					
ANR	2531134	Identifier	sdb_get		2531094	0					
ANR	2531135	ArgumentList	DB		2531094	1					
ANR	2531136	Argument	DB		2531094	0					
ANR	2531137	Identifier	DB		2531094	0					
ANR	2531138	Argument	name_key		2531094	1					
ANR	2531139	Identifier	name_key		2531094	0					
ANR	2531140	Argument	0		2531094	2					
ANR	2531141	PrimaryExpression	0		2531094	0					
ANR	2531142	IfStatement	if ( ! name_value )		2531094	19					
ANR	2531143	Condition	! name_value	293:5:8785:8795	2531094	0	True				
ANR	2531144	UnaryOperationExpression	! name_value		2531094	0					
ANR	2531145	UnaryOperator	!		2531094	0					
ANR	2531146	Identifier	name_value		2531094	1					
ANR	2531147	CompoundStatement		8:18:207:207	2531094	1					
ANR	2531148	ReturnStatement	return NULL ;	295:2:8854:8865	2531094	0	True				
ANR	2531149	Identifier	NULL		2531094	0					
ANR	2531150	IdentifierDeclStatement	"const char * comma = strchr ( name_value , ',' ) ;"	297:1:8871:8915	2531094	20	True				
ANR	2531151	IdentifierDecl	"* comma = strchr ( name_value , ',' )"		2531094	0					
ANR	2531152	IdentifierDeclType	const char *		2531094	0					
ANR	2531153	Identifier	comma		2531094	1					
ANR	2531154	AssignmentExpression	"* comma = strchr ( name_value , ',' )"		2531094	2		=			
ANR	2531155	Identifier	comma		2531094	0					
ANR	2531156	CallExpression	"strchr ( name_value , ',' )"		2531094	1					
ANR	2531157	Callee	strchr		2531094	0					
ANR	2531158	Identifier	strchr		2531094	0					
ANR	2531159	ArgumentList	name_value		2531094	1					
ANR	2531160	Argument	name_value		2531094	0					
ANR	2531161	Identifier	name_value		2531094	0					
ANR	2531162	Argument	"','"		2531094	1					
ANR	2531163	PrimaryExpression	"','"		2531094	0					
ANR	2531164	IfStatement	if ( comma && * comma )		2531094	21					
ANR	2531165	Condition	comma && * comma	298:5:8922:8936	2531094	0	True				
ANR	2531166	AndExpression	comma && * comma		2531094	0		&&			
ANR	2531167	Identifier	comma		2531094	0					
ANR	2531168	UnaryOperationExpression	* comma		2531094	1					
ANR	2531169	UnaryOperator	*		2531094	0					
ANR	2531170	Identifier	comma		2531094	1					
ANR	2531171	CompoundStatement		15:2:396:459	2531094	1					
ANR	2531172	IdentifierDeclStatement	"int delta = r_num_math ( NULL , comma + 1 ) ;"	299:2:8943:8983	2531094	0	True				
ANR	2531173	IdentifierDecl	"delta = r_num_math ( NULL , comma + 1 )"		2531094	0					
ANR	2531174	IdentifierDeclType	int		2531094	0					
ANR	2531175	Identifier	delta		2531094	1					
ANR	2531176	AssignmentExpression	"delta = r_num_math ( NULL , comma + 1 )"		2531094	2		=			
ANR	2531177	Identifier	delta		2531094	0					
ANR	2531178	CallExpression	"r_num_math ( NULL , comma + 1 )"		2531094	1					
ANR	2531179	Callee	r_num_math		2531094	0					
ANR	2531180	Identifier	r_num_math		2531094	0					
ANR	2531181	ArgumentList	NULL		2531094	1					
ANR	2531182	Argument	NULL		2531094	0					
ANR	2531183	Identifier	NULL		2531094	0					
ANR	2531184	Argument	comma + 1		2531094	1					
ANR	2531185	AdditiveExpression	comma + 1		2531094	0		+			
ANR	2531186	Identifier	comma		2531094	0					
ANR	2531187	PrimaryExpression	1		2531094	1					
ANR	2531188	IdentifierDeclStatement	"RAnalVar * res = r_anal_var_get ( a , addr , * name_value , 1 , delta ) ;"	300:2:8987:9050	2531094	1	True				
ANR	2531189	IdentifierDecl	"* res = r_anal_var_get ( a , addr , * name_value , 1 , delta )"		2531094	0					
ANR	2531190	IdentifierDeclType	RAnalVar *		2531094	0					
ANR	2531191	Identifier	res		2531094	1					
ANR	2531192	AssignmentExpression	"* res = r_anal_var_get ( a , addr , * name_value , 1 , delta )"		2531094	2		=			
ANR	2531193	Identifier	res		2531094	0					
ANR	2531194	CallExpression	"r_anal_var_get ( a , addr , * name_value , 1 , delta )"		2531094	1					
ANR	2531195	Callee	r_anal_var_get		2531094	0					
ANR	2531196	Identifier	r_anal_var_get		2531094	0					
ANR	2531197	ArgumentList	a		2531094	1					
ANR	2531198	Argument	a		2531094	0					
ANR	2531199	Identifier	a		2531094	0					
ANR	2531200	Argument	addr		2531094	1					
ANR	2531201	Identifier	addr		2531094	0					
ANR	2531202	Argument	* name_value		2531094	2					
ANR	2531203	UnaryOperationExpression	* name_value		2531094	0					
ANR	2531204	UnaryOperator	*		2531094	0					
ANR	2531205	Identifier	name_value		2531094	1					
ANR	2531206	Argument	1		2531094	3					
ANR	2531207	PrimaryExpression	1		2531094	0					
ANR	2531208	Argument	delta		2531094	4					
ANR	2531209	Identifier	delta		2531094	0					
ANR	2531210	ExpressionStatement	free ( name_value )	301:2:9054:9071	2531094	2	True				
ANR	2531211	CallExpression	free ( name_value )		2531094	0					
ANR	2531212	Callee	free		2531094	0					
ANR	2531213	Identifier	free		2531094	0					
ANR	2531214	ArgumentList	name_value		2531094	1					
ANR	2531215	Argument	name_value		2531094	0					
ANR	2531216	Identifier	name_value		2531094	0					
ANR	2531217	ReturnStatement	return res ;	302:2:9075:9085	2531094	3	True				
ANR	2531218	Identifier	res		2531094	0					
ANR	2531219	ExpressionStatement	free ( name_value )	304:1:9091:9108	2531094	22	True				
ANR	2531220	CallExpression	free ( name_value )		2531094	0					
ANR	2531221	Callee	free		2531094	0					
ANR	2531222	Identifier	free		2531094	0					
ANR	2531223	ArgumentList	name_value		2531094	1					
ANR	2531224	Argument	name_value		2531094	0					
ANR	2531225	Identifier	name_value		2531094	0					
ANR	2531226	ReturnStatement	return NULL ;	305:1:9111:9122	2531094	23	True				
ANR	2531227	Identifier	NULL		2531094	0					
ANR	2531228	ReturnType	R_API RAnalVar *		2531094	1					
ANR	2531229	Identifier	r_anal_var_get_byname		2531094	2					
ANR	2531230	ParameterList	"RAnal * a , ut64 addr , const char * name"		2531094	3					
ANR	2531231	Parameter	RAnal * a	286:38:8551:8558	2531094	0	True				
ANR	2531232	ParameterType	RAnal *		2531094	0					
ANR	2531233	Identifier	a		2531094	1					
ANR	2531234	Parameter	ut64 addr	286:48:8561:8569	2531094	1	True				
ANR	2531235	ParameterType	ut64		2531094	0					
ANR	2531236	Identifier	addr		2531094	1					
ANR	2531237	Parameter	const char * name	286:59:8572:8587	2531094	2	True				
ANR	2531238	ParameterType	const char *		2531094	0					
ANR	2531239	Identifier	name		2531094	1					
ANR	2531240	CFGEntryNode	ENTRY		2531094		True				
ANR	2531241	CFGExitNode	EXIT		2531094		True				
ANR	2531242	Symbol	a		2531094						
ANR	2531243	Symbol	res		2531094						
ANR	2531244	Symbol	NULL		2531094						
ANR	2531245	Symbol	* name_value		2531094						
ANR	2531246	Symbol	name_value		2531094						
ANR	2531247	Symbol	delta		2531094						
ANR	2531248	Symbol	strchr		2531094						
ANR	2531249	Symbol	sdb_get		2531094						
ANR	2531250	Symbol	r_num_math		2531094						
ANR	2531251	Symbol	name_key		2531094						
ANR	2531252	Symbol	comma		2531094						
ANR	2531253	Symbol	r_anal_var_get		2531094						
ANR	2531254	Symbol	name		2531094						
ANR	2531255	Symbol	* comma		2531094						
ANR	2531256	Symbol	addr		2531094						
ANR	2531257	Symbol	DB		2531094						
ANR	2531258	Function	r_anal_var_get	308:0:9127:10197							
ANR	2531259	FunctionDef	"r_anal_var_get (RAnal * a , ut64 addr , char kind , int scope , int delta)"		2531258	0					
ANR	2531260	CompoundStatement		308:85:9212:10197	2531258	0					
ANR	2531261	IdentifierDeclStatement	struct VarType vt = { 0 } ;	309:1:9215:9243	2531258	0	True				
ANR	2531262	IdentifierDecl	vt = { 0 }		2531258	0					
ANR	2531263	IdentifierDeclType	struct VarType		2531258	0					
ANR	2531264	Identifier	vt		2531258	1					
ANR	2531265	AssignmentExpression	vt = { 0 }		2531258	2		=			
ANR	2531266	Identifier	vt		2531258	0					
ANR	2531267	InitializerList	0		2531258	1					
ANR	2531268	PrimaryExpression	0		2531258	0					
ANR	2531269	IdentifierDeclStatement	"char * sign = """" ;"	312:1:9246:9261	2531258	1	True				
ANR	2531270	IdentifierDecl	"* sign = """""		2531258	0					
ANR	2531271	IdentifierDeclType	char *		2531258	0					
ANR	2531272	Identifier	sign		2531258	1					
ANR	2531273	AssignmentExpression	"* sign = """""		2531258	2		=			
ANR	2531274	Identifier	sign		2531258	0					
ANR	2531275	PrimaryExpression	""""""		2531258	1					
ANR	2531276	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( a , addr , 0 ) ;"	313:1:9264:9315	2531258	2	True				
ANR	2531277	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( a , addr , 0 )"		2531258	0					
ANR	2531278	IdentifierDeclType	RAnalFunction *		2531258	0					
ANR	2531279	Identifier	fcn		2531258	1					
ANR	2531280	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( a , addr , 0 )"		2531258	2		=			
ANR	2531281	Identifier	fcn		2531258	0					
ANR	2531282	CallExpression	"r_anal_get_fcn_in ( a , addr , 0 )"		2531258	1					
ANR	2531283	Callee	r_anal_get_fcn_in		2531258	0					
ANR	2531284	Identifier	r_anal_get_fcn_in		2531258	0					
ANR	2531285	ArgumentList	a		2531258	1					
ANR	2531286	Argument	a		2531258	0					
ANR	2531287	Identifier	a		2531258	0					
ANR	2531288	Argument	addr		2531258	1					
ANR	2531289	Identifier	addr		2531258	0					
ANR	2531290	Argument	0		2531258	2					
ANR	2531291	PrimaryExpression	0		2531258	0					
ANR	2531292	IfStatement	if ( ! fcn )		2531258	3					
ANR	2531293	Condition	! fcn	314:5:9322:9325	2531258	0	True				
ANR	2531294	UnaryOperationExpression	! fcn		2531258	0					
ANR	2531295	UnaryOperator	!		2531258	0					
ANR	2531296	Identifier	fcn		2531258	1					
ANR	2531297	CompoundStatement		7:11:115:115	2531258	1					
ANR	2531298	ReturnStatement	return NULL ;	315:2:9332:9343	2531258	0	True				
ANR	2531299	Identifier	NULL		2531258	0					
ANR	2531300	IfStatement	if ( delta < 0 )		2531258	4					
ANR	2531301	Condition	delta < 0	317:5:9353:9361	2531258	0	True				
ANR	2531302	RelationalExpression	delta < 0		2531258	0		<			
ANR	2531303	Identifier	delta		2531258	0					
ANR	2531304	PrimaryExpression	0		2531258	1					
ANR	2531305	CompoundStatement		10:16:151:151	2531258	1					
ANR	2531306	ExpressionStatement	delta = - delta	318:2:9368:9382	2531258	0	True				
ANR	2531307	AssignmentExpression	delta = - delta		2531258	0		=			
ANR	2531308	Identifier	delta		2531258	0					
ANR	2531309	UnaryOperationExpression	- delta		2531258	1					
ANR	2531310	UnaryOperator	-		2531258	0					
ANR	2531311	Identifier	delta		2531258	1					
ANR	2531312	ExpressionStatement	"sign = ""_"""	319:2:9386:9396	2531258	1	True				
ANR	2531313	AssignmentExpression	"sign = ""_"""		2531258	0		=			
ANR	2531314	Identifier	sign		2531258	0					
ANR	2531315	PrimaryExpression	"""_"""		2531258	1					
ANR	2531316	Statement	const	321:1:9402:9406	2531258	5	True				
ANR	2531317	Statement	char	321:7:9408:9411	2531258	6	True				
ANR	2531318	Statement	*	321:12:9413:9413	2531258	7	True				
ANR	2531319	Statement	varkey	321:13:9414:9419	2531258	8	True				
ANR	2531320	Statement	=	321:20:9421:9421	2531258	9	True				
ANR	2531321	Statement	sdb_fmt	321:22:9423:9429	2531258	10	True				
ANR	2531322	Statement	(	321:30:9431:9431	2531258	11	True				
ANR	2531323	Statement	"""var.0x%"""	321:31:9432:9440	2531258	12	True				
ANR	2531324	Statement	PFMT64x	321:40:9441:9447	2531258	13	True				
ANR	2531325	Statement	""".%c.%d.%s%d"""	321:48:9449:9461	2531258	14	True				
ANR	2531326	Statement	","	321:61:9462:9462	2531258	15	True				
ANR	2531327	Statement	fcn	322:3:9467:9469	2531258	16	True				
ANR	2531328	Statement	->	322:6:9470:9471	2531258	17	True				
ANR	2531329	Statement	addr	322:8:9472:9475	2531258	18	True				
ANR	2531330	Statement	","	322:12:9476:9476	2531258	19	True				
ANR	2531331	Statement	kind	322:14:9478:9481	2531258	20	True				
ANR	2531332	Statement	","	322:18:9482:9482	2531258	21	True				
ANR	2531333	Statement	scope	322:20:9484:9488	2531258	22	True				
ANR	2531334	Statement	","	322:25:9489:9489	2531258	23	True				
ANR	2531335	Statement	sign	322:27:9491:9494	2531258	24	True				
ANR	2531336	Statement	","	322:31:9495:9495	2531258	25	True				
ANR	2531337	Statement	delta	322:33:9497:9501	2531258	26	True				
ANR	2531338	Statement	)	322:38:9502:9502	2531258	27	True				
ANR	2531339	ExpressionStatement		322:39:9503:9503	2531258	28	True				
ANR	2531340	IdentifierDeclStatement	"char * vardef = sdb_get ( DB , varkey , 0 ) ;"	323:1:9506:9544	2531258	29	True				
ANR	2531341	IdentifierDecl	"* vardef = sdb_get ( DB , varkey , 0 )"		2531258	0					
ANR	2531342	IdentifierDeclType	char *		2531258	0					
ANR	2531343	Identifier	vardef		2531258	1					
ANR	2531344	AssignmentExpression	"* vardef = sdb_get ( DB , varkey , 0 )"		2531258	2		=			
ANR	2531345	Identifier	vardef		2531258	0					
ANR	2531346	CallExpression	"sdb_get ( DB , varkey , 0 )"		2531258	1					
ANR	2531347	Callee	sdb_get		2531258	0					
ANR	2531348	Identifier	sdb_get		2531258	0					
ANR	2531349	ArgumentList	DB		2531258	1					
ANR	2531350	Argument	DB		2531258	0					
ANR	2531351	Identifier	DB		2531258	0					
ANR	2531352	Argument	varkey		2531258	1					
ANR	2531353	Identifier	varkey		2531258	0					
ANR	2531354	Argument	0		2531258	2					
ANR	2531355	PrimaryExpression	0		2531258	0					
ANR	2531356	IfStatement	if ( ! vardef )		2531258	30					
ANR	2531357	Condition	! vardef	324:5:9551:9557	2531258	0	True				
ANR	2531358	UnaryOperationExpression	! vardef		2531258	0					
ANR	2531359	UnaryOperator	!		2531258	0					
ANR	2531360	Identifier	vardef		2531258	1					
ANR	2531361	CompoundStatement		17:14:347:347	2531258	1					
ANR	2531362	ReturnStatement	return NULL ;	325:2:9564:9575	2531258	0	True				
ANR	2531363	Identifier	NULL		2531258	0					
ANR	2531364	IfStatement	if ( * sign )		2531258	31					
ANR	2531365	Condition	* sign	327:5:9585:9589	2531258	0	True				
ANR	2531366	UnaryOperationExpression	* sign		2531258	0					
ANR	2531367	UnaryOperator	*		2531258	0					
ANR	2531368	Identifier	sign		2531258	1					
ANR	2531369	CompoundStatement		20:12:379:379	2531258	1					
ANR	2531370	ExpressionStatement	delta = - delta	328:2:9596:9610	2531258	0	True				
ANR	2531371	AssignmentExpression	delta = - delta		2531258	0		=			
ANR	2531372	Identifier	delta		2531258	0					
ANR	2531373	UnaryOperationExpression	- delta		2531258	1					
ANR	2531374	UnaryOperator	-		2531258	0					
ANR	2531375	Identifier	delta		2531258	1					
ANR	2531376	ExpressionStatement	"sdb_fmt_init ( & vt , SDB_VARTYPE_FMT )"	330:1:9616:9651	2531258	32	True				
ANR	2531377	CallExpression	"sdb_fmt_init ( & vt , SDB_VARTYPE_FMT )"		2531258	0					
ANR	2531378	Callee	sdb_fmt_init		2531258	0					
ANR	2531379	Identifier	sdb_fmt_init		2531258	0					
ANR	2531380	ArgumentList	& vt		2531258	1					
ANR	2531381	Argument	& vt		2531258	0					
ANR	2531382	UnaryOperationExpression	& vt		2531258	0					
ANR	2531383	UnaryOperator	&		2531258	0					
ANR	2531384	Identifier	vt		2531258	1					
ANR	2531385	Argument	SDB_VARTYPE_FMT		2531258	1					
ANR	2531386	Identifier	SDB_VARTYPE_FMT		2531258	0					
ANR	2531387	ExpressionStatement	"sdb_fmt_tobin ( vardef , SDB_VARTYPE_FMT , & vt )"	331:1:9654:9698	2531258	33	True				
ANR	2531388	CallExpression	"sdb_fmt_tobin ( vardef , SDB_VARTYPE_FMT , & vt )"		2531258	0					
ANR	2531389	Callee	sdb_fmt_tobin		2531258	0					
ANR	2531390	Identifier	sdb_fmt_tobin		2531258	0					
ANR	2531391	ArgumentList	vardef		2531258	1					
ANR	2531392	Argument	vardef		2531258	0					
ANR	2531393	Identifier	vardef		2531258	0					
ANR	2531394	Argument	SDB_VARTYPE_FMT		2531258	1					
ANR	2531395	Identifier	SDB_VARTYPE_FMT		2531258	0					
ANR	2531396	Argument	& vt		2531258	2					
ANR	2531397	UnaryOperationExpression	& vt		2531258	0					
ANR	2531398	UnaryOperator	&		2531258	0					
ANR	2531399	Identifier	vt		2531258	1					
ANR	2531400	ExpressionStatement	free ( vardef )	332:1:9701:9714	2531258	34	True				
ANR	2531401	CallExpression	free ( vardef )		2531258	0					
ANR	2531402	Callee	free		2531258	0					
ANR	2531403	Identifier	free		2531258	0					
ANR	2531404	ArgumentList	vardef		2531258	1					
ANR	2531405	Argument	vardef		2531258	0					
ANR	2531406	Identifier	vardef		2531258	0					
ANR	2531407	IdentifierDeclStatement	RAnalVar * av = R_NEW0 ( RAnalVar ) ;	334:1:9718:9750	2531258	35	True				
ANR	2531408	IdentifierDecl	* av = R_NEW0 ( RAnalVar )		2531258	0					
ANR	2531409	IdentifierDeclType	RAnalVar *		2531258	0					
ANR	2531410	Identifier	av		2531258	1					
ANR	2531411	AssignmentExpression	* av = R_NEW0 ( RAnalVar )		2531258	2		=			
ANR	2531412	Identifier	av		2531258	0					
ANR	2531413	CallExpression	R_NEW0 ( RAnalVar )		2531258	1					
ANR	2531414	Callee	R_NEW0		2531258	0					
ANR	2531415	Identifier	R_NEW0		2531258	0					
ANR	2531416	ArgumentList	RAnalVar		2531258	1					
ANR	2531417	Argument	RAnalVar		2531258	0					
ANR	2531418	Identifier	RAnalVar		2531258	0					
ANR	2531419	IfStatement	if ( ! av )		2531258	36					
ANR	2531420	Condition	! av	335:5:9757:9759	2531258	0	True				
ANR	2531421	UnaryOperationExpression	! av		2531258	0					
ANR	2531422	UnaryOperator	!		2531258	0					
ANR	2531423	Identifier	av		2531258	1					
ANR	2531424	CompoundStatement		28:10:549:549	2531258	1					
ANR	2531425	ExpressionStatement	"sdb_fmt_free ( & vt , SDB_VARTYPE_FMT )"	336:2:9766:9801	2531258	0	True				
ANR	2531426	CallExpression	"sdb_fmt_free ( & vt , SDB_VARTYPE_FMT )"		2531258	0					
ANR	2531427	Callee	sdb_fmt_free		2531258	0					
ANR	2531428	Identifier	sdb_fmt_free		2531258	0					
ANR	2531429	ArgumentList	& vt		2531258	1					
ANR	2531430	Argument	& vt		2531258	0					
ANR	2531431	UnaryOperationExpression	& vt		2531258	0					
ANR	2531432	UnaryOperator	&		2531258	0					
ANR	2531433	Identifier	vt		2531258	1					
ANR	2531434	Argument	SDB_VARTYPE_FMT		2531258	1					
ANR	2531435	Identifier	SDB_VARTYPE_FMT		2531258	0					
ANR	2531436	ReturnStatement	return NULL ;	337:2:9805:9816	2531258	1	True				
ANR	2531437	Identifier	NULL		2531258	0					
ANR	2531438	ExpressionStatement	av -> addr = fcn -> addr	339:1:9822:9842	2531258	37	True				
ANR	2531439	AssignmentExpression	av -> addr = fcn -> addr		2531258	0		=			
ANR	2531440	PtrMemberAccess	av -> addr		2531258	0					
ANR	2531441	Identifier	av		2531258	0					
ANR	2531442	Identifier	addr		2531258	1					
ANR	2531443	PtrMemberAccess	fcn -> addr		2531258	1					
ANR	2531444	Identifier	fcn		2531258	0					
ANR	2531445	Identifier	addr		2531258	1					
ANR	2531446	ExpressionStatement	av -> scope = scope	340:1:9845:9862	2531258	38	True				
ANR	2531447	AssignmentExpression	av -> scope = scope		2531258	0		=			
ANR	2531448	PtrMemberAccess	av -> scope		2531258	0					
ANR	2531449	Identifier	av		2531258	0					
ANR	2531450	Identifier	scope		2531258	1					
ANR	2531451	Identifier	scope		2531258	1					
ANR	2531452	ExpressionStatement	av -> delta = delta	341:1:9865:9882	2531258	39	True				
ANR	2531453	AssignmentExpression	av -> delta = delta		2531258	0		=			
ANR	2531454	PtrMemberAccess	av -> delta		2531258	0					
ANR	2531455	Identifier	av		2531258	0					
ANR	2531456	Identifier	delta		2531258	1					
ANR	2531457	Identifier	delta		2531258	1					
ANR	2531458	ExpressionStatement	av -> isarg = vt . isarg	342:1:9885:9905	2531258	40	True				
ANR	2531459	AssignmentExpression	av -> isarg = vt . isarg		2531258	0		=			
ANR	2531460	PtrMemberAccess	av -> isarg		2531258	0					
ANR	2531461	Identifier	av		2531258	0					
ANR	2531462	Identifier	isarg		2531258	1					
ANR	2531463	MemberAccess	vt . isarg		2531258	1					
ANR	2531464	Identifier	vt		2531258	0					
ANR	2531465	Identifier	isarg		2531258	1					
ANR	2531466	ExpressionStatement	"av -> name = vt . name ? strdup ( vt . name ) : strdup ( ""unkown_var"" )"	343:1:9908:9967	2531258	41	True				
ANR	2531467	AssignmentExpression	"av -> name = vt . name ? strdup ( vt . name ) : strdup ( ""unkown_var"" )"		2531258	0		=			
ANR	2531468	PtrMemberAccess	av -> name		2531258	0					
ANR	2531469	Identifier	av		2531258	0					
ANR	2531470	Identifier	name		2531258	1					
ANR	2531471	ConditionalExpression	"vt . name ? strdup ( vt . name ) : strdup ( ""unkown_var"" )"		2531258	1					
ANR	2531472	Condition	vt . name		2531258	0					
ANR	2531473	MemberAccess	vt . name		2531258	0					
ANR	2531474	Identifier	vt		2531258	0					
ANR	2531475	Identifier	name		2531258	1					
ANR	2531476	CallExpression	strdup ( vt . name )		2531258	1					
ANR	2531477	Callee	strdup		2531258	0					
ANR	2531478	Identifier	strdup		2531258	0					
ANR	2531479	ArgumentList	vt . name		2531258	1					
ANR	2531480	Argument	vt . name		2531258	0					
ANR	2531481	MemberAccess	vt . name		2531258	0					
ANR	2531482	Identifier	vt		2531258	0					
ANR	2531483	Identifier	name		2531258	1					
ANR	2531484	CallExpression	"strdup ( ""unkown_var"" )"		2531258	2					
ANR	2531485	Callee	strdup		2531258	0					
ANR	2531486	Identifier	strdup		2531258	0					
ANR	2531487	ArgumentList	"""unkown_var"""		2531258	1					
ANR	2531488	Argument	"""unkown_var"""		2531258	0					
ANR	2531489	PrimaryExpression	"""unkown_var"""		2531258	0					
ANR	2531490	ExpressionStatement	av -> size = vt . size	344:1:9970:9988	2531258	42	True				
ANR	2531491	AssignmentExpression	av -> size = vt . size		2531258	0		=			
ANR	2531492	PtrMemberAccess	av -> size		2531258	0					
ANR	2531493	Identifier	av		2531258	0					
ANR	2531494	Identifier	size		2531258	1					
ANR	2531495	MemberAccess	vt . size		2531258	1					
ANR	2531496	Identifier	vt		2531258	0					
ANR	2531497	Identifier	size		2531258	1					
ANR	2531498	ExpressionStatement	"av -> type = vt . type ? strdup ( vt . type ) : strdup ( ""unkown_type"" )"	345:1:9991:10051	2531258	43	True				
ANR	2531499	AssignmentExpression	"av -> type = vt . type ? strdup ( vt . type ) : strdup ( ""unkown_type"" )"		2531258	0		=			
ANR	2531500	PtrMemberAccess	av -> type		2531258	0					
ANR	2531501	Identifier	av		2531258	0					
ANR	2531502	Identifier	type		2531258	1					
ANR	2531503	ConditionalExpression	"vt . type ? strdup ( vt . type ) : strdup ( ""unkown_type"" )"		2531258	1					
ANR	2531504	Condition	vt . type		2531258	0					
ANR	2531505	MemberAccess	vt . type		2531258	0					
ANR	2531506	Identifier	vt		2531258	0					
ANR	2531507	Identifier	type		2531258	1					
ANR	2531508	CallExpression	strdup ( vt . type )		2531258	1					
ANR	2531509	Callee	strdup		2531258	0					
ANR	2531510	Identifier	strdup		2531258	0					
ANR	2531511	ArgumentList	vt . type		2531258	1					
ANR	2531512	Argument	vt . type		2531258	0					
ANR	2531513	MemberAccess	vt . type		2531258	0					
ANR	2531514	Identifier	vt		2531258	0					
ANR	2531515	Identifier	type		2531258	1					
ANR	2531516	CallExpression	"strdup ( ""unkown_type"" )"		2531258	2					
ANR	2531517	Callee	strdup		2531258	0					
ANR	2531518	Identifier	strdup		2531258	0					
ANR	2531519	ArgumentList	"""unkown_type"""		2531258	1					
ANR	2531520	Argument	"""unkown_type"""		2531258	0					
ANR	2531521	PrimaryExpression	"""unkown_type"""		2531258	0					
ANR	2531522	ExpressionStatement	av -> kind = kind	346:1:10054:10069	2531258	44	True				
ANR	2531523	AssignmentExpression	av -> kind = kind		2531258	0		=			
ANR	2531524	PtrMemberAccess	av -> kind		2531258	0					
ANR	2531525	Identifier	av		2531258	0					
ANR	2531526	Identifier	kind		2531258	1					
ANR	2531527	Identifier	kind		2531258	1					
ANR	2531528	ExpressionStatement	"sdb_fmt_free ( & vt , SDB_VARTYPE_FMT )"	347:1:10072:10107	2531258	45	True				
ANR	2531529	CallExpression	"sdb_fmt_free ( & vt , SDB_VARTYPE_FMT )"		2531258	0					
ANR	2531530	Callee	sdb_fmt_free		2531258	0					
ANR	2531531	Identifier	sdb_fmt_free		2531258	0					
ANR	2531532	ArgumentList	& vt		2531258	1					
ANR	2531533	Argument	& vt		2531258	0					
ANR	2531534	UnaryOperationExpression	& vt		2531258	0					
ANR	2531535	UnaryOperator	&		2531258	0					
ANR	2531536	Identifier	vt		2531258	1					
ANR	2531537	Argument	SDB_VARTYPE_FMT		2531258	1					
ANR	2531538	Identifier	SDB_VARTYPE_FMT		2531258	0					
ANR	2531539	ReturnStatement	return av ;	352:1:10186:10195	2531258	46	True				
ANR	2531540	Identifier	av		2531258	0					
ANR	2531541	ReturnType	R_API RAnalVar *		2531258	1					
ANR	2531542	Identifier	r_anal_var_get		2531258	2					
ANR	2531543	ParameterList	"RAnal * a , ut64 addr , char kind , int scope , int delta"		2531258	3					
ANR	2531544	Parameter	RAnal * a	308:31:9158:9165	2531258	0	True				
ANR	2531545	ParameterType	RAnal *		2531258	0					
ANR	2531546	Identifier	a		2531258	1					
ANR	2531547	Parameter	ut64 addr	308:41:9168:9176	2531258	1	True				
ANR	2531548	ParameterType	ut64		2531258	0					
ANR	2531549	Identifier	addr		2531258	1					
ANR	2531550	Parameter	char kind	308:52:9179:9187	2531258	2	True				
ANR	2531551	ParameterType	char		2531258	0					
ANR	2531552	Identifier	kind		2531258	1					
ANR	2531553	Parameter	int scope	308:63:9190:9198	2531258	3	True				
ANR	2531554	ParameterType	int		2531258	0					
ANR	2531555	Identifier	scope		2531258	1					
ANR	2531556	Parameter	int delta	308:74:9201:9209	2531258	4	True				
ANR	2531557	ParameterType	int		2531258	0					
ANR	2531558	Identifier	delta		2531258	1					
ANR	2531559	CFGEntryNode	ENTRY		2531258		True				
ANR	2531560	CFGExitNode	EXIT		2531258		True				
ANR	2531561	Symbol	* fcn		2531258						
ANR	2531562	Symbol	av -> kind		2531258						
ANR	2531563	Symbol	vt . size		2531258						
ANR	2531564	Symbol	delta		2531258						
ANR	2531565	Symbol	sign		2531258						
ANR	2531566	Symbol	SDB_VARTYPE_FMT		2531258						
ANR	2531567	Symbol	vt . name		2531258						
ANR	2531568	Symbol	fcn		2531258						
ANR	2531569	Symbol	av -> name		2531258						
ANR	2531570	Symbol	vardef		2531258						
ANR	2531571	Symbol	scope		2531258						
ANR	2531572	Symbol	* sign		2531258						
ANR	2531573	Symbol	addr		2531258						
ANR	2531574	Symbol	vt . type		2531258						
ANR	2531575	Symbol	av -> type		2531258						
ANR	2531576	Symbol	a		2531258						
ANR	2531577	Symbol	vt . isarg		2531258						
ANR	2531578	Symbol	NULL		2531258						
ANR	2531579	Symbol	kind		2531258						
ANR	2531580	Symbol	av -> delta		2531258						
ANR	2531581	Symbol	av -> size		2531258						
ANR	2531582	Symbol	& vt		2531258						
ANR	2531583	Symbol	sdb_get		2531258						
ANR	2531584	Symbol	RAnalVar		2531258						
ANR	2531585	Symbol	av -> addr		2531258						
ANR	2531586	Symbol	varkey		2531258						
ANR	2531587	Symbol	R_NEW0		2531258						
ANR	2531588	Symbol	r_anal_get_fcn_in		2531258						
ANR	2531589	Symbol	av		2531258						
ANR	2531590	Symbol	av -> scope		2531258						
ANR	2531591	Symbol	av -> isarg		2531258						
ANR	2531592	Symbol	* av		2531258						
ANR	2531593	Symbol	fcn -> addr		2531258						
ANR	2531594	Symbol	strdup		2531258						
ANR	2531595	Symbol	vt		2531258						
ANR	2531596	Symbol	DB		2531258						
ANR	2531597	Function	r_anal_var_free	355:0:10200:10310							
ANR	2531598	FunctionDef	r_anal_var_free (RAnalVar * av)		2531597	0					
ANR	2531599	CompoundStatement		355:41:10241:10310	2531597	0					
ANR	2531600	IfStatement	if ( av )		2531597	0					
ANR	2531601	Condition	av	356:5:10248:10249	2531597	0	True				
ANR	2531602	Identifier	av		2531597	0					
ANR	2531603	CompoundStatement		2:9:10:10	2531597	1					
ANR	2531604	ExpressionStatement	free ( av -> name )	357:2:10256:10271	2531597	0	True				
ANR	2531605	CallExpression	free ( av -> name )		2531597	0					
ANR	2531606	Callee	free		2531597	0					
ANR	2531607	Identifier	free		2531597	0					
ANR	2531608	ArgumentList	av -> name		2531597	1					
ANR	2531609	Argument	av -> name		2531597	0					
ANR	2531610	PtrMemberAccess	av -> name		2531597	0					
ANR	2531611	Identifier	av		2531597	0					
ANR	2531612	Identifier	name		2531597	1					
ANR	2531613	ExpressionStatement	free ( av -> type )	358:2:10275:10290	2531597	1	True				
ANR	2531614	CallExpression	free ( av -> type )		2531597	0					
ANR	2531615	Callee	free		2531597	0					
ANR	2531616	Identifier	free		2531597	0					
ANR	2531617	ArgumentList	av -> type		2531597	1					
ANR	2531618	Argument	av -> type		2531597	0					
ANR	2531619	PtrMemberAccess	av -> type		2531597	0					
ANR	2531620	Identifier	av		2531597	0					
ANR	2531621	Identifier	type		2531597	1					
ANR	2531622	ExpressionStatement	R_FREE ( av )	359:2:10294:10305	2531597	2	True				
ANR	2531623	CallExpression	R_FREE ( av )		2531597	0					
ANR	2531624	Callee	R_FREE		2531597	0					
ANR	2531625	Identifier	R_FREE		2531597	0					
ANR	2531626	ArgumentList	av		2531597	1					
ANR	2531627	Argument	av		2531597	0					
ANR	2531628	Identifier	av		2531597	0					
ANR	2531629	ReturnType	R_API void		2531597	1					
ANR	2531630	Identifier	r_anal_var_free		2531597	2					
ANR	2531631	ParameterList	RAnalVar * av		2531597	3					
ANR	2531632	Parameter	RAnalVar * av	355:27:10227:10238	2531597	0	True				
ANR	2531633	ParameterType	RAnalVar *		2531597	0					
ANR	2531634	Identifier	av		2531597	1					
ANR	2531635	CFGEntryNode	ENTRY		2531597		True				
ANR	2531636	CFGExitNode	EXIT		2531597		True				
ANR	2531637	Symbol	av -> name		2531597						
ANR	2531638	Symbol	av		2531597						
ANR	2531639	Symbol	* av		2531597						
ANR	2531640	Symbol	av -> type		2531597						
ANR	2531641	Function	r_anal_var_addr	363:0:10313:10836							
ANR	2531642	FunctionDef	"r_anal_var_addr (RAnal * a , RAnalFunction * fcn , const char * name)"		2531641	0					
ANR	2531643	CompoundStatement		363:75:10388:10836	2531641	0					
ANR	2531644	IdentifierDeclStatement	const char * regname = NULL ;	364:1:10391:10417	2531641	0	True				
ANR	2531645	IdentifierDecl	* regname = NULL		2531641	0					
ANR	2531646	IdentifierDeclType	const char *		2531641	0					
ANR	2531647	Identifier	regname		2531641	1					
ANR	2531648	AssignmentExpression	* regname = NULL		2531641	2		=			
ANR	2531649	Identifier	NULL		2531641	0					
ANR	2531650	Identifier	NULL		2531641	1					
ANR	2531651	IdentifierDeclStatement	ut64 ret = UT64_MAX ;	365:1:10420:10439	2531641	1	True				
ANR	2531652	IdentifierDecl	ret = UT64_MAX		2531641	0					
ANR	2531653	IdentifierDeclType	ut64		2531641	0					
ANR	2531654	Identifier	ret		2531641	1					
ANR	2531655	AssignmentExpression	ret = UT64_MAX		2531641	2		=			
ANR	2531656	Identifier	UT64_MAX		2531641	0					
ANR	2531657	Identifier	UT64_MAX		2531641	1					
ANR	2531658	IfStatement	if ( ! a || ! fcn )		2531641	2					
ANR	2531659	Condition	! a || ! fcn	366:5:10446:10455	2531641	0	True				
ANR	2531660	OrExpression	! a || ! fcn		2531641	0		||			
ANR	2531661	UnaryOperationExpression	! a		2531641	0					
ANR	2531662	UnaryOperator	!		2531641	0					
ANR	2531663	Identifier	a		2531641	1					
ANR	2531664	UnaryOperationExpression	! fcn		2531641	1					
ANR	2531665	UnaryOperator	!		2531641	0					
ANR	2531666	Identifier	fcn		2531641	1					
ANR	2531667	CompoundStatement		4:17:69:69	2531641	1					
ANR	2531668	ReturnStatement	return ret ;	367:2:10462:10472	2531641	0	True				
ANR	2531669	Identifier	ret		2531641	0					
ANR	2531670	IdentifierDeclStatement	"RAnalVar * v1 = r_anal_var_get_byname ( a , fcn -> addr , name ) ;"	369:1:10478:10535	2531641	3	True				
ANR	2531671	IdentifierDecl	"* v1 = r_anal_var_get_byname ( a , fcn -> addr , name )"		2531641	0					
ANR	2531672	IdentifierDeclType	RAnalVar *		2531641	0					
ANR	2531673	Identifier	v1		2531641	1					
ANR	2531674	AssignmentExpression	"* v1 = r_anal_var_get_byname ( a , fcn -> addr , name )"		2531641	2		=			
ANR	2531675	Identifier	v1		2531641	0					
ANR	2531676	CallExpression	"r_anal_var_get_byname ( a , fcn -> addr , name )"		2531641	1					
ANR	2531677	Callee	r_anal_var_get_byname		2531641	0					
ANR	2531678	Identifier	r_anal_var_get_byname		2531641	0					
ANR	2531679	ArgumentList	a		2531641	1					
ANR	2531680	Argument	a		2531641	0					
ANR	2531681	Identifier	a		2531641	0					
ANR	2531682	Argument	fcn -> addr		2531641	1					
ANR	2531683	PtrMemberAccess	fcn -> addr		2531641	0					
ANR	2531684	Identifier	fcn		2531641	0					
ANR	2531685	Identifier	addr		2531641	1					
ANR	2531686	Argument	name		2531641	2					
ANR	2531687	Identifier	name		2531641	0					
ANR	2531688	IfStatement	if ( v1 )		2531641	4					
ANR	2531689	Condition	v1	370:5:10542:10543	2531641	0	True				
ANR	2531690	Identifier	v1		2531641	0					
ANR	2531691	CompoundStatement		8:9:157:157	2531641	1					
ANR	2531692	IfStatement	if ( v1 -> kind == R_ANAL_VAR_KIND_BPV )		2531641	0					
ANR	2531693	Condition	v1 -> kind == R_ANAL_VAR_KIND_BPV	371:6:10554:10584	2531641	0	True				
ANR	2531694	EqualityExpression	v1 -> kind == R_ANAL_VAR_KIND_BPV		2531641	0		==			
ANR	2531695	PtrMemberAccess	v1 -> kind		2531641	0					
ANR	2531696	Identifier	v1		2531641	0					
ANR	2531697	Identifier	kind		2531641	1					
ANR	2531698	Identifier	R_ANAL_VAR_KIND_BPV		2531641	1					
ANR	2531699	CompoundStatement		9:39:198:198	2531641	1					
ANR	2531700	ExpressionStatement	"regname = r_reg_get_name ( a -> reg , R_REG_NAME_BP )"	372:3:10592:10640	2531641	0	True				
ANR	2531701	AssignmentExpression	"regname = r_reg_get_name ( a -> reg , R_REG_NAME_BP )"		2531641	0		=			
ANR	2531702	Identifier	regname		2531641	0					
ANR	2531703	CallExpression	"r_reg_get_name ( a -> reg , R_REG_NAME_BP )"		2531641	1					
ANR	2531704	Callee	r_reg_get_name		2531641	0					
ANR	2531705	Identifier	r_reg_get_name		2531641	0					
ANR	2531706	ArgumentList	a -> reg		2531641	1					
ANR	2531707	Argument	a -> reg		2531641	0					
ANR	2531708	PtrMemberAccess	a -> reg		2531641	0					
ANR	2531709	Identifier	a		2531641	0					
ANR	2531710	Identifier	reg		2531641	1					
ANR	2531711	Argument	R_REG_NAME_BP		2531641	1					
ANR	2531712	Identifier	R_REG_NAME_BP		2531641	0					
ANR	2531713	ElseStatement	else		2531641	0					
ANR	2531714	IfStatement	if ( v1 -> kind == R_ANAL_VAR_KIND_SPV )		2531641	0					
ANR	2531715	Condition	v1 -> kind == R_ANAL_VAR_KIND_SPV	373:13:10655:10685	2531641	0	True				
ANR	2531716	EqualityExpression	v1 -> kind == R_ANAL_VAR_KIND_SPV		2531641	0		==			
ANR	2531717	PtrMemberAccess	v1 -> kind		2531641	0					
ANR	2531718	Identifier	v1		2531641	0					
ANR	2531719	Identifier	kind		2531641	1					
ANR	2531720	Identifier	R_ANAL_VAR_KIND_SPV		2531641	1					
ANR	2531721	CompoundStatement		11:46:299:299	2531641	1					
ANR	2531722	ExpressionStatement	"regname = r_reg_get_name ( a -> reg , R_REG_NAME_SP )"	374:3:10693:10741	2531641	0	True				
ANR	2531723	AssignmentExpression	"regname = r_reg_get_name ( a -> reg , R_REG_NAME_SP )"		2531641	0		=			
ANR	2531724	Identifier	regname		2531641	0					
ANR	2531725	CallExpression	"r_reg_get_name ( a -> reg , R_REG_NAME_SP )"		2531641	1					
ANR	2531726	Callee	r_reg_get_name		2531641	0					
ANR	2531727	Identifier	r_reg_get_name		2531641	0					
ANR	2531728	ArgumentList	a -> reg		2531641	1					
ANR	2531729	Argument	a -> reg		2531641	0					
ANR	2531730	PtrMemberAccess	a -> reg		2531641	0					
ANR	2531731	Identifier	a		2531641	0					
ANR	2531732	Identifier	reg		2531641	1					
ANR	2531733	Argument	R_REG_NAME_SP		2531641	1					
ANR	2531734	Identifier	R_REG_NAME_SP		2531641	0					
ANR	2531735	ExpressionStatement	"ret = r_reg_getv ( a -> reg , regname ) + v1 -> delta"	376:2:10749:10795	2531641	1	True				
ANR	2531736	AssignmentExpression	"ret = r_reg_getv ( a -> reg , regname ) + v1 -> delta"		2531641	0		=			
ANR	2531737	Identifier	ret		2531641	0					
ANR	2531738	AdditiveExpression	"r_reg_getv ( a -> reg , regname ) + v1 -> delta"		2531641	1		+			
ANR	2531739	CallExpression	"r_reg_getv ( a -> reg , regname )"		2531641	0					
ANR	2531740	Callee	r_reg_getv		2531641	0					
ANR	2531741	Identifier	r_reg_getv		2531641	0					
ANR	2531742	ArgumentList	a -> reg		2531641	1					
ANR	2531743	Argument	a -> reg		2531641	0					
ANR	2531744	PtrMemberAccess	a -> reg		2531641	0					
ANR	2531745	Identifier	a		2531641	0					
ANR	2531746	Identifier	reg		2531641	1					
ANR	2531747	Argument	regname		2531641	1					
ANR	2531748	Identifier	regname		2531641	0					
ANR	2531749	PtrMemberAccess	v1 -> delta		2531641	1					
ANR	2531750	Identifier	v1		2531641	0					
ANR	2531751	Identifier	delta		2531641	1					
ANR	2531752	ExpressionStatement	r_anal_var_free ( v1 )	378:1:10801:10821	2531641	5	True				
ANR	2531753	CallExpression	r_anal_var_free ( v1 )		2531641	0					
ANR	2531754	Callee	r_anal_var_free		2531641	0					
ANR	2531755	Identifier	r_anal_var_free		2531641	0					
ANR	2531756	ArgumentList	v1		2531641	1					
ANR	2531757	Argument	v1		2531641	0					
ANR	2531758	Identifier	v1		2531641	0					
ANR	2531759	ReturnStatement	return ret ;	379:1:10824:10834	2531641	6	True				
ANR	2531760	Identifier	ret		2531641	0					
ANR	2531761	ReturnType	R_API ut64		2531641	1					
ANR	2531762	Identifier	r_anal_var_addr		2531641	2					
ANR	2531763	ParameterList	"RAnal * a , RAnalFunction * fcn , const char * name"		2531641	3					
ANR	2531764	Parameter	RAnal * a	363:27:10340:10347	2531641	0	True				
ANR	2531765	ParameterType	RAnal *		2531641	0					
ANR	2531766	Identifier	a		2531641	1					
ANR	2531767	Parameter	RAnalFunction * fcn	363:37:10350:10367	2531641	1	True				
ANR	2531768	ParameterType	RAnalFunction *		2531641	0					
ANR	2531769	Identifier	fcn		2531641	1					
ANR	2531770	Parameter	const char * name	363:57:10370:10385	2531641	2	True				
ANR	2531771	ParameterType	const char *		2531641	0					
ANR	2531772	Identifier	name		2531641	1					
ANR	2531773	CFGEntryNode	ENTRY		2531641		True				
ANR	2531774	CFGExitNode	EXIT		2531641		True				
ANR	2531775	Symbol	ret		2531641						
ANR	2531776	Symbol	R_REG_NAME_BP		2531641						
ANR	2531777	Symbol	a		2531641						
ANR	2531778	Symbol	regname		2531641						
ANR	2531779	Symbol	* v1		2531641						
ANR	2531780	Symbol	NULL		2531641						
ANR	2531781	Symbol	* fcn		2531641						
ANR	2531782	Symbol	R_ANAL_VAR_KIND_SPV		2531641						
ANR	2531783	Symbol	v1 -> delta		2531641						
ANR	2531784	Symbol	R_ANAL_VAR_KIND_BPV		2531641						
ANR	2531785	Symbol	* a		2531641						
ANR	2531786	Symbol	v1 -> kind		2531641						
ANR	2531787	Symbol	r_anal_var_get_byname		2531641						
ANR	2531788	Symbol	fcn		2531641						
ANR	2531789	Symbol	R_REG_NAME_SP		2531641						
ANR	2531790	Symbol	r_reg_get_name		2531641						
ANR	2531791	Symbol	name		2531641						
ANR	2531792	Symbol	fcn -> addr		2531641						
ANR	2531793	Symbol	a -> reg		2531641						
ANR	2531794	Symbol	v1		2531641						
ANR	2531795	Symbol	r_reg_getv		2531641						
ANR	2531796	Symbol	UT64_MAX		2531641						
ANR	2531797	Function	r_anal_var_check_name	388:0:11054:11160							
ANR	2531798	FunctionDef	r_anal_var_check_name (const char * name)		2531797	0					
ANR	2531799	CompoundStatement		388:51:11105:11160	2531797	0					
ANR	2531800	ReturnStatement	"return ! isdigit ( * name ) && strcspn ( name , ""., =/"" ) ;"	389:1:11108:11158	2531797	0	True				
ANR	2531801	AndExpression	"! isdigit ( * name ) && strcspn ( name , ""., =/"" )"		2531797	0		&&			
ANR	2531802	UnaryOperationExpression	! isdigit ( * name )		2531797	0					
ANR	2531803	UnaryOperator	!		2531797	0					
ANR	2531804	CallExpression	isdigit ( * name )		2531797	1					
ANR	2531805	Callee	isdigit		2531797	0					
ANR	2531806	Identifier	isdigit		2531797	0					
ANR	2531807	ArgumentList	* name		2531797	1					
ANR	2531808	Argument	* name		2531797	0					
ANR	2531809	UnaryOperationExpression	* name		2531797	0					
ANR	2531810	UnaryOperator	*		2531797	0					
ANR	2531811	Identifier	name		2531797	1					
ANR	2531812	CallExpression	"strcspn ( name , ""., =/"" )"		2531797	1					
ANR	2531813	Callee	strcspn		2531797	0					
ANR	2531814	Identifier	strcspn		2531797	0					
ANR	2531815	ArgumentList	name		2531797	1					
ANR	2531816	Argument	name		2531797	0					
ANR	2531817	Identifier	name		2531797	0					
ANR	2531818	Argument	"""., =/"""		2531797	1					
ANR	2531819	PrimaryExpression	"""., =/"""		2531797	0					
ANR	2531820	ReturnType	R_API bool		2531797	1					
ANR	2531821	Identifier	r_anal_var_check_name		2531797	2					
ANR	2531822	ParameterList	const char * name		2531797	3					
ANR	2531823	Parameter	const char * name	388:33:11087:11102	2531797	0	True				
ANR	2531824	ParameterType	const char *		2531797	0					
ANR	2531825	Identifier	name		2531797	1					
ANR	2531826	CFGEntryNode	ENTRY		2531797		True				
ANR	2531827	CFGExitNode	EXIT		2531797		True				
ANR	2531828	Symbol	* name		2531797						
ANR	2531829	Symbol	name		2531797						
ANR	2531830	Symbol	strcspn		2531797						
ANR	2531831	Symbol	isdigit		2531797						
ANR	2531832	Function	r_anal_var_rename	393:0:11188:12798							
ANR	2531833	FunctionDef	"r_anal_var_rename (RAnal * a , ut64 addr , int scope , char kind , const char * old_name , const char * new_name , bool verbose)"		2531832	0					
ANR	2531834	CompoundStatement		393:129:11317:12798	2531832	0					
ANR	2531835	IdentifierDeclStatement	char key [ 128 ] ;	394:1:11320:11333	2531832	0	True				
ANR	2531836	IdentifierDecl	key [ 128 ]		2531832	0					
ANR	2531837	IdentifierDeclType	char [ 128 ]		2531832	0					
ANR	2531838	Identifier	key		2531832	1					
ANR	2531839	PrimaryExpression	128		2531832	2					
ANR	2531840	IfStatement	if ( ! r_anal_var_check_name ( new_name ) )		2531832	1					
ANR	2531841	Condition	! r_anal_var_check_name ( new_name )	396:5:11341:11373	2531832	0	True				
ANR	2531842	UnaryOperationExpression	! r_anal_var_check_name ( new_name )		2531832	0					
ANR	2531843	UnaryOperator	!		2531832	0					
ANR	2531844	CallExpression	r_anal_var_check_name ( new_name )		2531832	1					
ANR	2531845	Callee	r_anal_var_check_name		2531832	0					
ANR	2531846	Identifier	r_anal_var_check_name		2531832	0					
ANR	2531847	ArgumentList	new_name		2531832	1					
ANR	2531848	Argument	new_name		2531832	0					
ANR	2531849	Identifier	new_name		2531832	0					
ANR	2531850	CompoundStatement		4:40:58:58	2531832	1					
ANR	2531851	ReturnStatement	return 0 ;	397:2:11380:11388	2531832	0	True				
ANR	2531852	PrimaryExpression	0		2531832	0					
ANR	2531853	IdentifierDeclStatement	"RAnalVar * v1 = r_anal_var_get_byname ( a , addr , new_name ) ;"	399:1:11394:11450	2531832	2	True				
ANR	2531854	IdentifierDecl	"* v1 = r_anal_var_get_byname ( a , addr , new_name )"		2531832	0					
ANR	2531855	IdentifierDeclType	RAnalVar *		2531832	0					
ANR	2531856	Identifier	v1		2531832	1					
ANR	2531857	AssignmentExpression	"* v1 = r_anal_var_get_byname ( a , addr , new_name )"		2531832	2		=			
ANR	2531858	Identifier	v1		2531832	0					
ANR	2531859	CallExpression	"r_anal_var_get_byname ( a , addr , new_name )"		2531832	1					
ANR	2531860	Callee	r_anal_var_get_byname		2531832	0					
ANR	2531861	Identifier	r_anal_var_get_byname		2531832	0					
ANR	2531862	ArgumentList	a		2531832	1					
ANR	2531863	Argument	a		2531832	0					
ANR	2531864	Identifier	a		2531832	0					
ANR	2531865	Argument	addr		2531832	1					
ANR	2531866	Identifier	addr		2531832	0					
ANR	2531867	Argument	new_name		2531832	2					
ANR	2531868	Identifier	new_name		2531832	0					
ANR	2531869	IfStatement	if ( v1 )		2531832	3					
ANR	2531870	Condition	v1	400:5:11457:11458	2531832	0	True				
ANR	2531871	Identifier	v1		2531832	0					
ANR	2531872	CompoundStatement		8:9:143:143	2531832	1					
ANR	2531873	ExpressionStatement	r_anal_var_free ( v1 )	401:2:11465:11485	2531832	0	True				
ANR	2531874	CallExpression	r_anal_var_free ( v1 )		2531832	0					
ANR	2531875	Callee	r_anal_var_free		2531832	0					
ANR	2531876	Identifier	r_anal_var_free		2531832	0					
ANR	2531877	ArgumentList	v1		2531832	1					
ANR	2531878	Argument	v1		2531832	0					
ANR	2531879	Identifier	v1		2531832	0					
ANR	2531880	IfStatement	if ( verbose )		2531832	1					
ANR	2531881	Condition	verbose	402:6:11493:11499	2531832	0	True				
ANR	2531882	Identifier	verbose		2531832	0					
ANR	2531883	CompoundStatement		10:15:184:184	2531832	1					
ANR	2531884	ExpressionStatement	"eprintf ( ""variable or arg with name `%s` already exist\\n"" , new_name )"	403:3:11507:11575	2531832	0	True				
ANR	2531885	CallExpression	"eprintf ( ""variable or arg with name `%s` already exist\\n"" , new_name )"		2531832	0					
ANR	2531886	Callee	eprintf		2531832	0					
ANR	2531887	Identifier	eprintf		2531832	0					
ANR	2531888	ArgumentList	"""variable or arg with name `%s` already exist\\n"""		2531832	1					
ANR	2531889	Argument	"""variable or arg with name `%s` already exist\\n"""		2531832	0					
ANR	2531890	PrimaryExpression	"""variable or arg with name `%s` already exist\\n"""		2531832	0					
ANR	2531891	Argument	new_name		2531832	1					
ANR	2531892	Identifier	new_name		2531832	0					
ANR	2531893	ReturnStatement	return false ;	405:2:11583:11595	2531832	2	True				
ANR	2531894	Identifier	false		2531832	0					
ANR	2531895	ExpressionStatement	scope = 1	408:1:11657:11666	2531832	4	True				
ANR	2531896	AssignmentExpression	scope = 1		2531832	0		=			
ANR	2531897	Identifier	scope		2531832	0					
ANR	2531898	PrimaryExpression	1		2531832	1					
ANR	2531899	IfStatement	if ( scope > 0 )		2531832	5					
ANR	2531900	Condition	scope > 0	410:5:11758:11766	2531832	0	True				
ANR	2531901	RelationalExpression	scope > 0		2531832	0		>			
ANR	2531902	Identifier	scope		2531832	0					
ANR	2531903	PrimaryExpression	0		2531832	1					
ANR	2531904	CompoundStatement		25:2:627:663	2531832	1					
ANR	2531905	IdentifierDeclStatement	"const char * sign = """" ;"	411:2:11782:11803	2531832	0	True				
ANR	2531906	IdentifierDecl	"* sign = """""		2531832	0					
ANR	2531907	IdentifierDeclType	const char *		2531832	0					
ANR	2531908	Identifier	sign		2531832	1					
ANR	2531909	AssignmentExpression	"* sign = """""		2531832	2		=			
ANR	2531910	Identifier	sign		2531832	0					
ANR	2531911	PrimaryExpression	""""""		2531832	1					
ANR	2531912	Statement	SETKEY	412:2:11807:11812	2531832	1	True				
ANR	2531913	Statement	(	412:9:11814:11814	2531832	2	True				
ANR	2531914	Statement	"""var.0x%"""	412:10:11815:11823	2531832	3	True				
ANR	2531915	Statement	PFMT64x	412:19:11824:11830	2531832	4	True				
ANR	2531916	Statement	""".%d.%s"""	412:27:11832:11839	2531832	5	True				
ANR	2531917	Statement	","	412:35:11840:11840	2531832	6	True				
ANR	2531918	Statement	addr	412:37:11842:11845	2531832	7	True				
ANR	2531919	Statement	","	412:41:11846:11846	2531832	8	True				
ANR	2531920	Statement	scope	412:43:11848:11852	2531832	9	True				
ANR	2531921	Statement	","	412:48:11853:11853	2531832	10	True				
ANR	2531922	Statement	old_name	412:50:11855:11862	2531832	11	True				
ANR	2531923	Statement	)	412:58:11863:11863	2531832	12	True				
ANR	2531924	ExpressionStatement		412:59:11864:11864	2531832	13	True				
ANR	2531925	IdentifierDeclStatement	"char * name_val = sdb_get ( DB , key , 0 ) ;"	413:2:11868:11905	2531832	14	True				
ANR	2531926	IdentifierDecl	"* name_val = sdb_get ( DB , key , 0 )"		2531832	0					
ANR	2531927	IdentifierDeclType	char *		2531832	0					
ANR	2531928	Identifier	name_val		2531832	1					
ANR	2531929	AssignmentExpression	"* name_val = sdb_get ( DB , key , 0 )"		2531832	2		=			
ANR	2531930	Identifier	name_val		2531832	0					
ANR	2531931	CallExpression	"sdb_get ( DB , key , 0 )"		2531832	1					
ANR	2531932	Callee	sdb_get		2531832	0					
ANR	2531933	Identifier	sdb_get		2531832	0					
ANR	2531934	ArgumentList	DB		2531832	1					
ANR	2531935	Argument	DB		2531832	0					
ANR	2531936	Identifier	DB		2531832	0					
ANR	2531937	Argument	key		2531832	1					
ANR	2531938	Identifier	key		2531832	0					
ANR	2531939	Argument	0		2531832	2					
ANR	2531940	PrimaryExpression	0		2531832	0					
ANR	2531941	IfStatement	if ( ! name_val )		2531832	15					
ANR	2531942	Condition	! name_val	414:6:11913:11921	2531832	0	True				
ANR	2531943	UnaryOperationExpression	! name_val		2531832	0					
ANR	2531944	UnaryOperator	!		2531832	0					
ANR	2531945	Identifier	name_val		2531832	1					
ANR	2531946	CompoundStatement		22:17:606:606	2531832	1					
ANR	2531947	ReturnStatement	return 0 ;	415:3:11929:11937	2531832	0	True				
ANR	2531948	PrimaryExpression	0		2531832	0					
ANR	2531949	IdentifierDeclStatement	"char * comma = strchr ( name_val , ',' ) ;"	417:2:11945:11981	2531832	16	True				
ANR	2531950	IdentifierDecl	"* comma = strchr ( name_val , ',' )"		2531832	0					
ANR	2531951	IdentifierDeclType	char *		2531832	0					
ANR	2531952	Identifier	comma		2531832	1					
ANR	2531953	AssignmentExpression	"* comma = strchr ( name_val , ',' )"		2531832	2		=			
ANR	2531954	Identifier	comma		2531832	0					
ANR	2531955	CallExpression	"strchr ( name_val , ',' )"		2531832	1					
ANR	2531956	Callee	strchr		2531832	0					
ANR	2531957	Identifier	strchr		2531832	0					
ANR	2531958	ArgumentList	name_val		2531832	1					
ANR	2531959	Argument	name_val		2531832	0					
ANR	2531960	Identifier	name_val		2531832	0					
ANR	2531961	Argument	"','"		2531832	1					
ANR	2531962	PrimaryExpression	"','"		2531832	0					
ANR	2531963	IfStatement	if ( comma )		2531832	17					
ANR	2531964	Condition	comma	418:6:11989:11993	2531832	0	True				
ANR	2531965	Identifier	comma		2531832	0					
ANR	2531966	CompoundStatement		27:3:683:723	2531832	1					
ANR	2531967	IdentifierDeclStatement	"int delta = r_num_math ( NULL , comma + 1 ) ;"	419:3:12001:12041	2531832	0	True				
ANR	2531968	IdentifierDecl	"delta = r_num_math ( NULL , comma + 1 )"		2531832	0					
ANR	2531969	IdentifierDeclType	int		2531832	0					
ANR	2531970	Identifier	delta		2531832	1					
ANR	2531971	AssignmentExpression	"delta = r_num_math ( NULL , comma + 1 )"		2531832	2		=			
ANR	2531972	Identifier	delta		2531832	0					
ANR	2531973	CallExpression	"r_num_math ( NULL , comma + 1 )"		2531832	1					
ANR	2531974	Callee	r_num_math		2531832	0					
ANR	2531975	Identifier	r_num_math		2531832	0					
ANR	2531976	ArgumentList	NULL		2531832	1					
ANR	2531977	Argument	NULL		2531832	0					
ANR	2531978	Identifier	NULL		2531832	0					
ANR	2531979	Argument	comma + 1		2531832	1					
ANR	2531980	AdditiveExpression	comma + 1		2531832	0		+			
ANR	2531981	Identifier	comma		2531832	0					
ANR	2531982	PrimaryExpression	1		2531832	1					
ANR	2531983	ExpressionStatement	"sdb_unset ( DB , key , 0 )"	420:3:12046:12068	2531832	1	True				
ANR	2531984	CallExpression	"sdb_unset ( DB , key , 0 )"		2531832	0					
ANR	2531985	Callee	sdb_unset		2531832	0					
ANR	2531986	Identifier	sdb_unset		2531832	0					
ANR	2531987	ArgumentList	DB		2531832	1					
ANR	2531988	Argument	DB		2531832	0					
ANR	2531989	Identifier	DB		2531832	0					
ANR	2531990	Argument	key		2531832	1					
ANR	2531991	Identifier	key		2531832	0					
ANR	2531992	Argument	0		2531832	2					
ANR	2531993	PrimaryExpression	0		2531832	0					
ANR	2531994	Statement	SETKEY	421:3:12073:12078	2531832	2	True				
ANR	2531995	Statement	(	421:10:12080:12080	2531832	3	True				
ANR	2531996	Statement	"""var.0x%"""	421:11:12081:12089	2531832	4	True				
ANR	2531997	Statement	PFMT64x	421:20:12090:12096	2531832	5	True				
ANR	2531998	Statement	""".%d.%s"""	421:28:12098:12105	2531832	6	True				
ANR	2531999	Statement	","	421:36:12106:12106	2531832	7	True				
ANR	2532000	Statement	addr	421:38:12108:12111	2531832	8	True				
ANR	2532001	Statement	","	421:42:12112:12112	2531832	9	True				
ANR	2532002	Statement	scope	421:44:12114:12118	2531832	10	True				
ANR	2532003	Statement	","	421:49:12119:12119	2531832	11	True				
ANR	2532004	Statement	new_name	421:51:12121:12128	2531832	12	True				
ANR	2532005	Statement	)	421:59:12129:12129	2531832	13	True				
ANR	2532006	ExpressionStatement		421:60:12130:12130	2531832	14	True				
ANR	2532007	ExpressionStatement	"sdb_set ( DB , key , name_val , 0 )"	422:3:12135:12165	2531832	15	True				
ANR	2532008	CallExpression	"sdb_set ( DB , key , name_val , 0 )"		2531832	0					
ANR	2532009	Callee	sdb_set		2531832	0					
ANR	2532010	Identifier	sdb_set		2531832	0					
ANR	2532011	ArgumentList	DB		2531832	1					
ANR	2532012	Argument	DB		2531832	0					
ANR	2532013	Identifier	DB		2531832	0					
ANR	2532014	Argument	key		2531832	1					
ANR	2532015	Identifier	key		2531832	0					
ANR	2532016	Argument	name_val		2531832	2					
ANR	2532017	Identifier	name_val		2531832	0					
ANR	2532018	Argument	0		2531832	3					
ANR	2532019	PrimaryExpression	0		2531832	0					
ANR	2532020	ExpressionStatement	free ( name_val )	423:3:12170:12185	2531832	16	True				
ANR	2532021	CallExpression	free ( name_val )		2531832	0					
ANR	2532022	Callee	free		2531832	0					
ANR	2532023	Identifier	free		2531832	0					
ANR	2532024	ArgumentList	name_val		2531832	1					
ANR	2532025	Argument	name_val		2531832	0					
ANR	2532026	Identifier	name_val		2531832	0					
ANR	2532027	IfStatement	if ( delta < 0 )		2531832	17					
ANR	2532028	Condition	delta < 0	424:7:12194:12202	2531832	0	True				
ANR	2532029	RelationalExpression	delta < 0		2531832	0		<			
ANR	2532030	Identifier	delta		2531832	0					
ANR	2532031	PrimaryExpression	0		2531832	1					
ANR	2532032	CompoundStatement		32:18:887:887	2531832	1					
ANR	2532033	ExpressionStatement	delta = - delta	425:4:12211:12225	2531832	0	True				
ANR	2532034	AssignmentExpression	delta = - delta		2531832	0		=			
ANR	2532035	Identifier	delta		2531832	0					
ANR	2532036	UnaryOperationExpression	- delta		2531832	1					
ANR	2532037	UnaryOperator	-		2531832	0					
ANR	2532038	Identifier	delta		2531832	1					
ANR	2532039	ExpressionStatement	"sign = ""_"""	426:4:12231:12241	2531832	1	True				
ANR	2532040	AssignmentExpression	"sign = ""_"""		2531832	0		=			
ANR	2532041	Identifier	sign		2531832	0					
ANR	2532042	PrimaryExpression	"""_"""		2531832	1					
ANR	2532043	Statement	SETKEY	428:3:12251:12256	2531832	18	True				
ANR	2532044	Statement	(	428:10:12258:12258	2531832	19	True				
ANR	2532045	Statement	"""var.0x%"""	428:11:12259:12267	2531832	20	True				
ANR	2532046	Statement	PFMT64x	428:20:12268:12274	2531832	21	True				
ANR	2532047	Statement	""".%c.%d.%s%d"""	428:28:12276:12288	2531832	22	True				
ANR	2532048	Statement	","	428:41:12289:12289	2531832	23	True				
ANR	2532049	Statement	addr	428:43:12291:12294	2531832	24	True				
ANR	2532050	Statement	","	428:47:12295:12295	2531832	25	True				
ANR	2532051	Statement	kind	428:49:12297:12300	2531832	26	True				
ANR	2532052	Statement	","	428:53:12301:12301	2531832	27	True				
ANR	2532053	Statement	scope	428:55:12303:12307	2531832	28	True				
ANR	2532054	Statement	","	428:60:12308:12308	2531832	29	True				
ANR	2532055	Statement	sign	428:62:12310:12313	2531832	30	True				
ANR	2532056	Statement	","	428:66:12314:12314	2531832	31	True				
ANR	2532057	Statement	delta	428:68:12316:12320	2531832	32	True				
ANR	2532058	Statement	)	428:73:12321:12321	2531832	33	True				
ANR	2532059	ExpressionStatement		428:74:12322:12322	2531832	34	True				
ANR	2532060	ExpressionStatement	"sdb_array_set ( DB , key , R_ANAL_VAR_SDB_NAME , new_name , 0 )"	429:3:12327:12384	2531832	35	True				
ANR	2532061	CallExpression	"sdb_array_set ( DB , key , R_ANAL_VAR_SDB_NAME , new_name , 0 )"		2531832	0					
ANR	2532062	Callee	sdb_array_set		2531832	0					
ANR	2532063	Identifier	sdb_array_set		2531832	0					
ANR	2532064	ArgumentList	DB		2531832	1					
ANR	2532065	Argument	DB		2531832	0					
ANR	2532066	Identifier	DB		2531832	0					
ANR	2532067	Argument	key		2531832	1					
ANR	2532068	Identifier	key		2531832	0					
ANR	2532069	Argument	R_ANAL_VAR_SDB_NAME		2531832	2					
ANR	2532070	Identifier	R_ANAL_VAR_SDB_NAME		2531832	0					
ANR	2532071	Argument	new_name		2531832	3					
ANR	2532072	Identifier	new_name		2531832	0					
ANR	2532073	Argument	0		2531832	4					
ANR	2532074	PrimaryExpression	0		2531832	0					
ANR	2532075	ElseStatement	else		2531832	0					
ANR	2532076	CompoundStatement		41:2:1129:1196	2531832	0					
ANR	2532077	Statement	SETKEY	432:2:12412:12417	2531832	0	True				
ANR	2532078	Statement	(	432:9:12419:12419	2531832	1	True				
ANR	2532079	Statement	"""var.0x%"""	432:10:12420:12428	2531832	2	True				
ANR	2532080	Statement	PFMT64x	432:19:12429:12435	2531832	3	True				
ANR	2532081	Statement	","	432:26:12436:12436	2531832	4	True				
ANR	2532082	Statement	addr	432:28:12438:12441	2531832	5	True				
ANR	2532083	Statement	)	432:32:12442:12442	2531832	6	True				
ANR	2532084	ExpressionStatement		432:33:12443:12443	2531832	7	True				
ANR	2532085	IdentifierDeclStatement	"char * stored_name = sdb_array_get ( DB , key , R_ANAL_VAR_SDB_NAME , 0 ) ;"	433:2:12447:12514	2531832	8	True				
ANR	2532086	IdentifierDecl	"* stored_name = sdb_array_get ( DB , key , R_ANAL_VAR_SDB_NAME , 0 )"		2531832	0					
ANR	2532087	IdentifierDeclType	char *		2531832	0					
ANR	2532088	Identifier	stored_name		2531832	1					
ANR	2532089	AssignmentExpression	"* stored_name = sdb_array_get ( DB , key , R_ANAL_VAR_SDB_NAME , 0 )"		2531832	2		=			
ANR	2532090	Identifier	stored_name		2531832	0					
ANR	2532091	CallExpression	"sdb_array_get ( DB , key , R_ANAL_VAR_SDB_NAME , 0 )"		2531832	1					
ANR	2532092	Callee	sdb_array_get		2531832	0					
ANR	2532093	Identifier	sdb_array_get		2531832	0					
ANR	2532094	ArgumentList	DB		2531832	1					
ANR	2532095	Argument	DB		2531832	0					
ANR	2532096	Identifier	DB		2531832	0					
ANR	2532097	Argument	key		2531832	1					
ANR	2532098	Identifier	key		2531832	0					
ANR	2532099	Argument	R_ANAL_VAR_SDB_NAME		2531832	2					
ANR	2532100	Identifier	R_ANAL_VAR_SDB_NAME		2531832	0					
ANR	2532101	Argument	0		2531832	3					
ANR	2532102	PrimaryExpression	0		2531832	0					
ANR	2532103	IfStatement	if ( ! stored_name )		2531832	9					
ANR	2532104	Condition	! stored_name	434:6:12522:12533	2531832	0	True				
ANR	2532105	UnaryOperationExpression	! stored_name		2531832	0					
ANR	2532106	UnaryOperator	!		2531832	0					
ANR	2532107	Identifier	stored_name		2531832	1					
ANR	2532108	CompoundStatement		42:20:1218:1218	2531832	1					
ANR	2532109	ReturnStatement	return 0 ;	435:3:12541:12549	2531832	0	True				
ANR	2532110	PrimaryExpression	0		2531832	0					
ANR	2532111	IfStatement	if ( ! old_name )		2531832	10					
ANR	2532112	Condition	! old_name	437:6:12561:12569	2531832	0	True				
ANR	2532113	UnaryOperationExpression	! old_name		2531832	0					
ANR	2532114	UnaryOperator	!		2531832	0					
ANR	2532115	Identifier	old_name		2531832	1					
ANR	2532116	CompoundStatement		45:17:1254:1254	2531832	1					
ANR	2532117	ExpressionStatement	old_name = stored_name	438:3:12577:12599	2531832	0	True				
ANR	2532118	AssignmentExpression	old_name = stored_name		2531832	0		=			
ANR	2532119	Identifier	old_name		2531832	0					
ANR	2532120	Identifier	stored_name		2531832	1					
ANR	2532121	IfStatement	"if ( strcmp ( stored_name , old_name ) )"		2531832	11					
ANR	2532122	Condition	"strcmp ( stored_name , old_name )"	440:6:12611:12640	2531832	0	True				
ANR	2532123	CallExpression	"strcmp ( stored_name , old_name )"		2531832	0					
ANR	2532124	Callee	strcmp		2531832	0					
ANR	2532125	Identifier	strcmp		2531832	0					
ANR	2532126	ArgumentList	stored_name		2531832	1					
ANR	2532127	Argument	stored_name		2531832	0					
ANR	2532128	Identifier	stored_name		2531832	0					
ANR	2532129	Argument	old_name		2531832	1					
ANR	2532130	Identifier	old_name		2531832	0					
ANR	2532131	CompoundStatement		48:38:1325:1325	2531832	1					
ANR	2532132	ReturnStatement	return 0 ;	441:3:12648:12656	2531832	0	True				
ANR	2532133	PrimaryExpression	0		2531832	0					
ANR	2532134	ExpressionStatement	"sdb_unset ( DB , key , 0 )"	443:2:12664:12686	2531832	12	True				
ANR	2532135	CallExpression	"sdb_unset ( DB , key , 0 )"		2531832	0					
ANR	2532136	Callee	sdb_unset		2531832	0					
ANR	2532137	Identifier	sdb_unset		2531832	0					
ANR	2532138	ArgumentList	DB		2531832	1					
ANR	2532139	Argument	DB		2531832	0					
ANR	2532140	Identifier	DB		2531832	0					
ANR	2532141	Argument	key		2531832	1					
ANR	2532142	Identifier	key		2531832	0					
ANR	2532143	Argument	0		2531832	2					
ANR	2532144	PrimaryExpression	0		2531832	0					
ANR	2532145	Statement	SETKEY	444:2:12690:12695	2531832	13	True				
ANR	2532146	Statement	(	444:9:12697:12697	2531832	14	True				
ANR	2532147	Statement	"""var.0x%"""	444:10:12698:12706	2531832	15	True				
ANR	2532148	Statement	PFMT64x	444:19:12707:12713	2531832	16	True				
ANR	2532149	Statement	","	444:26:12714:12714	2531832	17	True				
ANR	2532150	Statement	addr	444:28:12716:12719	2531832	18	True				
ANR	2532151	Statement	)	444:32:12720:12720	2531832	19	True				
ANR	2532152	ExpressionStatement		444:33:12721:12721	2531832	20	True				
ANR	2532153	ExpressionStatement	"sdb_array_set ( DB , key , R_ANAL_VAR_SDB_NAME , new_name , 0 )"	445:2:12725:12782	2531832	21	True				
ANR	2532154	CallExpression	"sdb_array_set ( DB , key , R_ANAL_VAR_SDB_NAME , new_name , 0 )"		2531832	0					
ANR	2532155	Callee	sdb_array_set		2531832	0					
ANR	2532156	Identifier	sdb_array_set		2531832	0					
ANR	2532157	ArgumentList	DB		2531832	1					
ANR	2532158	Argument	DB		2531832	0					
ANR	2532159	Identifier	DB		2531832	0					
ANR	2532160	Argument	key		2531832	1					
ANR	2532161	Identifier	key		2531832	0					
ANR	2532162	Argument	R_ANAL_VAR_SDB_NAME		2531832	2					
ANR	2532163	Identifier	R_ANAL_VAR_SDB_NAME		2531832	0					
ANR	2532164	Argument	new_name		2531832	3					
ANR	2532165	Identifier	new_name		2531832	0					
ANR	2532166	Argument	0		2531832	4					
ANR	2532167	PrimaryExpression	0		2531832	0					
ANR	2532168	ReturnStatement	return 1 ;	447:1:12788:12796	2531832	6	True				
ANR	2532169	PrimaryExpression	1		2531832	0					
ANR	2532170	ReturnType	R_API int		2531832	1					
ANR	2532171	Identifier	r_anal_var_rename		2531832	2					
ANR	2532172	ParameterList	"RAnal * a , ut64 addr , int scope , char kind , const char * old_name , const char * new_name , bool verbose"		2531832	3					
ANR	2532173	Parameter	RAnal * a	393:28:11216:11223	2531832	0	True				
ANR	2532174	ParameterType	RAnal *		2531832	0					
ANR	2532175	Identifier	a		2531832	1					
ANR	2532176	Parameter	ut64 addr	393:38:11226:11234	2531832	1	True				
ANR	2532177	ParameterType	ut64		2531832	0					
ANR	2532178	Identifier	addr		2531832	1					
ANR	2532179	Parameter	int scope	393:49:11237:11245	2531832	2	True				
ANR	2532180	ParameterType	int		2531832	0					
ANR	2532181	Identifier	scope		2531832	1					
ANR	2532182	Parameter	char kind	393:60:11248:11256	2531832	3	True				
ANR	2532183	ParameterType	char		2531832	0					
ANR	2532184	Identifier	kind		2531832	1					
ANR	2532185	Parameter	const char * old_name	393:71:11259:11278	2531832	4	True				
ANR	2532186	ParameterType	const char *		2531832	0					
ANR	2532187	Identifier	old_name		2531832	1					
ANR	2532188	Parameter	const char * new_name	393:93:11281:11300	2531832	5	True				
ANR	2532189	ParameterType	const char *		2531832	0					
ANR	2532190	Identifier	new_name		2531832	1					
ANR	2532191	Parameter	bool verbose	393:115:11303:11314	2531832	6	True				
ANR	2532192	ParameterType	bool		2531832	0					
ANR	2532193	Identifier	verbose		2531832	1					
ANR	2532194	CFGEntryNode	ENTRY		2531832		True				
ANR	2532195	CFGExitNode	EXIT		2531832		True				
ANR	2532196	Symbol	R_ANAL_VAR_SDB_NAME		2531832						
ANR	2532197	Symbol	sdb_array_get		2531832						
ANR	2532198	Symbol	sign		2531832						
ANR	2532199	Symbol	delta		2531832						
ANR	2532200	Symbol	strchr		2531832						
ANR	2532201	Symbol	r_anal_var_get_byname		2531832						
ANR	2532202	Symbol	r_num_math		2531832						
ANR	2532203	Symbol	scope		2531832						
ANR	2532204	Symbol	name_val		2531832						
ANR	2532205	Symbol	r_anal_var_check_name		2531832						
ANR	2532206	Symbol	addr		2531832						
ANR	2532207	Symbol	key		2531832						
ANR	2532208	Symbol	new_name		2531832						
ANR	2532209	Symbol	strcmp		2531832						
ANR	2532210	Symbol	a		2531832						
ANR	2532211	Symbol	NULL		2531832						
ANR	2532212	Symbol	kind		2531832						
ANR	2532213	Symbol	false		2531832						
ANR	2532214	Symbol	sdb_get		2531832						
ANR	2532215	Symbol	verbose		2531832						
ANR	2532216	Symbol	comma		2531832						
ANR	2532217	Symbol	old_name		2531832						
ANR	2532218	Symbol	stored_name		2531832						
ANR	2532219	Symbol	v1		2531832						
ANR	2532220	Symbol	DB		2531832						
ANR	2532221	Function	r_anal_var_link	451:0:12876:13159							
ANR	2532222	FunctionDef	"r_anal_var_link (RAnal * a , ut64 addr , RAnalVar * var)"		2532221	0					
ANR	2532223	CompoundStatement		451:64:12940:13159	2532221	0					
ANR	2532224	Statement	const	452:1:12943:12947	2532221	0	True				
ANR	2532225	Statement	char	452:7:12949:12952	2532221	1	True				
ANR	2532226	Statement	*	452:12:12954:12954	2532221	2	True				
ANR	2532227	Statement	inst_key	452:13:12955:12962	2532221	3	True				
ANR	2532228	Statement	=	452:22:12964:12964	2532221	4	True				
ANR	2532229	Statement	sdb_fmt	452:24:12966:12972	2532221	5	True				
ANR	2532230	Statement	(	452:32:12974:12974	2532221	6	True				
ANR	2532231	Statement	"""inst.0x%"""	452:33:12975:12984	2532221	7	True				
ANR	2532232	Statement	PFMT64x	452:44:12986:12992	2532221	8	True				
ANR	2532233	Statement	""".lvar"""	452:52:12994:13000	2532221	9	True				
ANR	2532234	Statement	","	452:59:13001:13001	2532221	10	True				
ANR	2532235	Statement	addr	452:61:13003:13006	2532221	11	True				
ANR	2532236	Statement	)	452:65:13007:13007	2532221	12	True				
ANR	2532237	ExpressionStatement		452:66:13008:13008	2532221	13	True				
ANR	2532238	Statement	const	453:1:13011:13015	2532221	14	True				
ANR	2532239	Statement	char	453:7:13017:13020	2532221	15	True				
ANR	2532240	Statement	*	453:12:13022:13022	2532221	16	True				
ANR	2532241	Statement	var_def	453:13:13023:13029	2532221	17	True				
ANR	2532242	Statement	=	453:21:13031:13031	2532221	18	True				
ANR	2532243	Statement	sdb_fmt	453:23:13033:13039	2532221	19	True				
ANR	2532244	Statement	(	453:31:13041:13041	2532221	20	True				
ANR	2532245	Statement	"""0x%"""	453:32:13042:13046	2532221	21	True				
ANR	2532246	Statement	PFMT64x	453:38:13048:13054	2532221	22	True				
ANR	2532247	Statement	""",%c,0x%x,0x%x"""	453:46:13056:13070	2532221	23	True				
ANR	2532248	Statement	","	453:61:13071:13071	2532221	24	True				
ANR	2532249	Statement	var	453:63:13073:13075	2532221	25	True				
ANR	2532250	Statement	->	453:66:13076:13077	2532221	26	True				
ANR	2532251	Statement	addr	453:68:13078:13081	2532221	27	True				
ANR	2532252	Statement	","	453:72:13082:13082	2532221	28	True				
ANR	2532253	Statement	var	454:2:13086:13088	2532221	29	True				
ANR	2532254	Statement	->	454:5:13089:13090	2532221	30	True				
ANR	2532255	Statement	kind	454:7:13091:13094	2532221	31	True				
ANR	2532256	Statement	","	454:11:13095:13095	2532221	32	True				
ANR	2532257	Statement	var	454:13:13097:13099	2532221	33	True				
ANR	2532258	Statement	->	454:16:13100:13101	2532221	34	True				
ANR	2532259	Statement	scope	454:18:13102:13106	2532221	35	True				
ANR	2532260	Statement	","	454:23:13107:13107	2532221	36	True				
ANR	2532261	Statement	var	454:25:13109:13111	2532221	37	True				
ANR	2532262	Statement	->	454:28:13112:13113	2532221	38	True				
ANR	2532263	Statement	delta	454:30:13114:13118	2532221	39	True				
ANR	2532264	Statement	)	454:35:13119:13119	2532221	40	True				
ANR	2532265	ExpressionStatement		454:36:13120:13120	2532221	41	True				
ANR	2532266	ExpressionStatement	"sdb_set ( DB , inst_key , var_def , 0 )"	455:1:13123:13157	2532221	42	True				
ANR	2532267	CallExpression	"sdb_set ( DB , inst_key , var_def , 0 )"		2532221	0					
ANR	2532268	Callee	sdb_set		2532221	0					
ANR	2532269	Identifier	sdb_set		2532221	0					
ANR	2532270	ArgumentList	DB		2532221	1					
ANR	2532271	Argument	DB		2532221	0					
ANR	2532272	Identifier	DB		2532221	0					
ANR	2532273	Argument	inst_key		2532221	1					
ANR	2532274	Identifier	inst_key		2532221	0					
ANR	2532275	Argument	var_def		2532221	2					
ANR	2532276	Identifier	var_def		2532221	0					
ANR	2532277	Argument	0		2532221	3					
ANR	2532278	PrimaryExpression	0		2532221	0					
ANR	2532279	ReturnType	static void		2532221	1					
ANR	2532280	Identifier	r_anal_var_link		2532221	2					
ANR	2532281	ParameterList	"RAnal * a , ut64 addr , RAnalVar * var"		2532221	3					
ANR	2532282	Parameter	RAnal * a	451:28:12904:12911	2532221	0	True				
ANR	2532283	ParameterType	RAnal *		2532221	0					
ANR	2532284	Identifier	a		2532221	1					
ANR	2532285	Parameter	ut64 addr	451:38:12914:12922	2532221	1	True				
ANR	2532286	ParameterType	ut64		2532221	0					
ANR	2532287	Identifier	addr		2532221	1					
ANR	2532288	Parameter	RAnalVar * var	451:49:12925:12937	2532221	2	True				
ANR	2532289	ParameterType	RAnalVar *		2532221	0					
ANR	2532290	Identifier	var		2532221	1					
ANR	2532291	CFGEntryNode	ENTRY		2532221		True				
ANR	2532292	CFGExitNode	EXIT		2532221		True				
ANR	2532293	Symbol	a		2532221						
ANR	2532294	Symbol	inst_key		2532221						
ANR	2532295	Symbol	var_def		2532221						
ANR	2532296	Symbol	var		2532221						
ANR	2532297	Symbol	addr		2532221						
ANR	2532298	Symbol	DB		2532221						
ANR	2532299	Function	r_anal_var_access	459:0:13169:13989							
ANR	2532300	FunctionDef	"r_anal_var_access (RAnal * a , ut64 var_addr , char kind , int scope , int delta , int xs_type , ut64 xs_addr)"		2532299	0					
ANR	2532301	CompoundStatement		459:113:13282:13989	2532299	0					
ANR	2532302	IdentifierDeclStatement	const char * var_global ;	460:1:13285:13307	2532299	0	True				
ANR	2532303	IdentifierDecl	* var_global		2532299	0					
ANR	2532304	IdentifierDeclType	const char *		2532299	0					
ANR	2532305	Identifier	var_global		2532299	1					
ANR	2532306	IdentifierDeclStatement	"const char * xs_type_str = xs_type ? ""writes"" : ""reads"" ;"	461:1:13310:13362	2532299	1	True				
ANR	2532307	IdentifierDecl	"* xs_type_str = xs_type ? ""writes"" : ""reads"""		2532299	0					
ANR	2532308	IdentifierDeclType	const char *		2532299	0					
ANR	2532309	Identifier	xs_type_str		2532299	1					
ANR	2532310	AssignmentExpression	"* xs_type_str = xs_type ? ""writes"" : ""reads"""		2532299	2		=			
ANR	2532311	Identifier	xs_type_str		2532299	0					
ANR	2532312	ConditionalExpression	"xs_type ? ""writes"" : ""reads"""		2532299	1					
ANR	2532313	Condition	xs_type		2532299	0					
ANR	2532314	Identifier	xs_type		2532299	0					
ANR	2532315	PrimaryExpression	"""writes"""		2532299	1					
ANR	2532316	PrimaryExpression	"""reads"""		2532299	2					
ANR	2532317	IfStatement	if ( scope > 0 )		2532299	2					
ANR	2532318	Condition	scope > 0	463:5:13396:13404	2532299	0	True				
ANR	2532319	RelationalExpression	scope > 0		2532299	0		>			
ANR	2532320	Identifier	scope		2532299	0					
ANR	2532321	PrimaryExpression	0		2532299	1					
ANR	2532322	CompoundStatement		5:16:124:124	2532299	1					
ANR	2532323	Statement	const	464:2:13420:13424	2532299	0	True				
ANR	2532324	Statement	char	464:8:13426:13429	2532299	1	True				
ANR	2532325	Statement	*	464:13:13431:13431	2532299	2	True				
ANR	2532326	Statement	var_local	464:14:13432:13440	2532299	3	True				
ANR	2532327	Statement	=	464:24:13442:13442	2532299	4	True				
ANR	2532328	Statement	sdb_fmt	464:26:13444:13450	2532299	5	True				
ANR	2532329	Statement	(	464:34:13452:13452	2532299	6	True				
ANR	2532330	Statement	"""var.0x%"""	464:35:13453:13461	2532299	7	True				
ANR	2532331	Statement	PFMT64x	464:44:13462:13468	2532299	8	True				
ANR	2532332	Statement	""".%d.%d.%s"""	464:52:13470:13480	2532299	9	True				
ANR	2532333	Statement	","	464:63:13481:13481	2532299	10	True				
ANR	2532334	Statement	var_addr	465:3:13486:13493	2532299	11	True				
ANR	2532335	Statement	","	465:11:13494:13494	2532299	12	True				
ANR	2532336	Statement	scope	465:13:13496:13500	2532299	13	True				
ANR	2532337	Statement	","	465:18:13501:13501	2532299	14	True				
ANR	2532338	Statement	delta	465:20:13503:13507	2532299	15	True				
ANR	2532339	Statement	","	465:25:13508:13508	2532299	16	True				
ANR	2532340	Statement	xs_type_str	465:27:13510:13520	2532299	17	True				
ANR	2532341	Statement	)	465:38:13521:13521	2532299	18	True				
ANR	2532342	ExpressionStatement		465:39:13522:13522	2532299	19	True				
ANR	2532343	Statement	const	466:2:13526:13530	2532299	20	True				
ANR	2532344	Statement	char	466:8:13532:13535	2532299	21	True				
ANR	2532345	Statement	*	466:13:13537:13537	2532299	22	True				
ANR	2532346	Statement	inst_key	466:14:13538:13545	2532299	23	True				
ANR	2532347	Statement	=	466:23:13547:13547	2532299	24	True				
ANR	2532348	Statement	sdb_fmt	466:25:13549:13555	2532299	25	True				
ANR	2532349	Statement	(	466:33:13557:13557	2532299	26	True				
ANR	2532350	Statement	"""inst.0x%"""	466:34:13558:13567	2532299	27	True				
ANR	2532351	Statement	PFMT64x	466:44:13568:13574	2532299	28	True				
ANR	2532352	Statement	""".vars"""	466:52:13576:13582	2532299	29	True				
ANR	2532353	Statement	","	466:59:13583:13583	2532299	30	True				
ANR	2532354	Statement	xs_addr	466:61:13585:13591	2532299	31	True				
ANR	2532355	Statement	)	466:68:13592:13592	2532299	32	True				
ANR	2532356	ExpressionStatement		466:69:13593:13593	2532299	33	True				
ANR	2532357	Statement	const	467:2:13597:13601	2532299	34	True				
ANR	2532358	Statement	char	467:8:13603:13606	2532299	35	True				
ANR	2532359	Statement	*	467:13:13608:13608	2532299	36	True				
ANR	2532360	Statement	var_def	467:14:13609:13615	2532299	37	True				
ANR	2532361	Statement	=	467:22:13617:13617	2532299	38	True				
ANR	2532362	Statement	sdb_fmt	467:24:13619:13625	2532299	39	True				
ANR	2532363	Statement	(	467:32:13627:13627	2532299	40	True				
ANR	2532364	Statement	"""0x%"""	467:33:13628:13632	2532299	41	True				
ANR	2532365	Statement	PFMT64x	467:38:13633:13639	2532299	42	True				
ANR	2532366	Statement	""",%c,0x%x,0x%x"""	467:46:13641:13655	2532299	43	True				
ANR	2532367	Statement	","	467:61:13656:13656	2532299	44	True				
ANR	2532368	Statement	var_addr	467:63:13658:13665	2532299	45	True				
ANR	2532369	Statement	","	467:71:13666:13666	2532299	46	True				
ANR	2532370	Statement	kind	468:3:13671:13674	2532299	47	True				
ANR	2532371	Statement	","	468:7:13675:13675	2532299	48	True				
ANR	2532372	Statement	scope	468:9:13677:13681	2532299	49	True				
ANR	2532373	Statement	","	468:14:13682:13682	2532299	50	True				
ANR	2532374	Statement	delta	468:16:13684:13688	2532299	51	True				
ANR	2532375	Statement	)	468:21:13689:13689	2532299	52	True				
ANR	2532376	ExpressionStatement		468:22:13690:13690	2532299	53	True				
ANR	2532377	ExpressionStatement	"sdb_set ( DB , inst_key , var_def , 0 )"	469:2:13694:13728	2532299	54	True				
ANR	2532378	CallExpression	"sdb_set ( DB , inst_key , var_def , 0 )"		2532299	0					
ANR	2532379	Callee	sdb_set		2532299	0					
ANR	2532380	Identifier	sdb_set		2532299	0					
ANR	2532381	ArgumentList	DB		2532299	1					
ANR	2532382	Argument	DB		2532299	0					
ANR	2532383	Identifier	DB		2532299	0					
ANR	2532384	Argument	inst_key		2532299	1					
ANR	2532385	Identifier	inst_key		2532299	0					
ANR	2532386	Argument	var_def		2532299	2					
ANR	2532387	Identifier	var_def		2532299	0					
ANR	2532388	Argument	0		2532299	3					
ANR	2532389	PrimaryExpression	0		2532299	0					
ANR	2532390	ReturnStatement	"return sdb_array_add_num ( DB , var_local , xs_addr , 0 ) ;"	470:2:13732:13784	2532299	55	True				
ANR	2532391	CallExpression	"sdb_array_add_num ( DB , var_local , xs_addr , 0 )"		2532299	0					
ANR	2532392	Callee	sdb_array_add_num		2532299	0					
ANR	2532393	Identifier	sdb_array_add_num		2532299	0					
ANR	2532394	ArgumentList	DB		2532299	1					
ANR	2532395	Argument	DB		2532299	0					
ANR	2532396	Identifier	DB		2532299	0					
ANR	2532397	Argument	var_local		2532299	1					
ANR	2532398	Identifier	var_local		2532299	0					
ANR	2532399	Argument	xs_addr		2532299	2					
ANR	2532400	Identifier	xs_addr		2532299	0					
ANR	2532401	Argument	0		2532299	3					
ANR	2532402	PrimaryExpression	0		2532299	0					
ANR	2532403	Statement	sdb_add	473:1:13801:13807	2532299	3	True				
ANR	2532404	Statement	(	473:9:13809:13809	2532299	4	True				
ANR	2532405	Statement	DB	473:10:13810:13811	2532299	5	True				
ANR	2532406	Statement	","	473:12:13812:13812	2532299	6	True				
ANR	2532407	Statement	sdb_fmt	473:14:13814:13820	2532299	7	True				
ANR	2532408	Statement	(	473:22:13822:13822	2532299	8	True				
ANR	2532409	Statement	"""var.0x%"""	473:23:13823:13831	2532299	9	True				
ANR	2532410	Statement	PFMT64x	473:32:13832:13838	2532299	10	True				
ANR	2532411	Statement	","	473:39:13839:13839	2532299	11	True				
ANR	2532412	Statement	var_addr	473:41:13841:13848	2532299	12	True				
ANR	2532413	Statement	)	473:49:13849:13849	2532299	13	True				
ANR	2532414	Statement	","	473:50:13850:13850	2532299	14	True				
ANR	2532415	Statement	"""a,"""	473:52:13852:13855	2532299	15	True				
ANR	2532416	Statement	","	473:56:13856:13856	2532299	16	True				
ANR	2532417	Statement	0	473:58:13858:13858	2532299	17	True				
ANR	2532418	Statement	)	473:59:13859:13859	2532299	18	True				
ANR	2532419	ExpressionStatement		473:60:13860:13860	2532299	19	True				
ANR	2532420	Statement	var_global	474:1:13863:13872	2532299	20	True				
ANR	2532421	Statement	=	474:12:13874:13874	2532299	21	True				
ANR	2532422	Statement	sdb_fmt	474:14:13876:13882	2532299	22	True				
ANR	2532423	Statement	(	474:22:13884:13884	2532299	23	True				
ANR	2532424	Statement	"""var.0x%"""	474:23:13885:13893	2532299	24	True				
ANR	2532425	Statement	PFMT64x	474:32:13894:13900	2532299	25	True				
ANR	2532426	Statement	""".%s"""	474:40:13902:13906	2532299	26	True				
ANR	2532427	Statement	","	474:45:13907:13907	2532299	27	True				
ANR	2532428	Statement	var_addr	474:47:13909:13916	2532299	28	True				
ANR	2532429	Statement	","	474:55:13917:13917	2532299	29	True				
ANR	2532430	Statement	xs_type_str	474:57:13919:13929	2532299	30	True				
ANR	2532431	Statement	)	474:68:13930:13930	2532299	31	True				
ANR	2532432	ExpressionStatement		474:69:13931:13931	2532299	32	True				
ANR	2532433	ReturnStatement	"return sdb_array_add_num ( DB , var_global , xs_addr , 0 ) ;"	475:1:13934:13987	2532299	33	True				
ANR	2532434	CallExpression	"sdb_array_add_num ( DB , var_global , xs_addr , 0 )"		2532299	0					
ANR	2532435	Callee	sdb_array_add_num		2532299	0					
ANR	2532436	Identifier	sdb_array_add_num		2532299	0					
ANR	2532437	ArgumentList	DB		2532299	1					
ANR	2532438	Argument	DB		2532299	0					
ANR	2532439	Identifier	DB		2532299	0					
ANR	2532440	Argument	var_global		2532299	1					
ANR	2532441	Identifier	var_global		2532299	0					
ANR	2532442	Argument	xs_addr		2532299	2					
ANR	2532443	Identifier	xs_addr		2532299	0					
ANR	2532444	Argument	0		2532299	3					
ANR	2532445	PrimaryExpression	0		2532299	0					
ANR	2532446	ReturnType	R_API int		2532299	1					
ANR	2532447	Identifier	r_anal_var_access		2532299	2					
ANR	2532448	ParameterList	"RAnal * a , ut64 var_addr , char kind , int scope , int delta , int xs_type , ut64 xs_addr"		2532299	3					
ANR	2532449	Parameter	RAnal * a	459:28:13197:13204	2532299	0	True				
ANR	2532450	ParameterType	RAnal *		2532299	0					
ANR	2532451	Identifier	a		2532299	1					
ANR	2532452	Parameter	ut64 var_addr	459:38:13207:13219	2532299	1	True				
ANR	2532453	ParameterType	ut64		2532299	0					
ANR	2532454	Identifier	var_addr		2532299	1					
ANR	2532455	Parameter	char kind	459:53:13222:13230	2532299	2	True				
ANR	2532456	ParameterType	char		2532299	0					
ANR	2532457	Identifier	kind		2532299	1					
ANR	2532458	Parameter	int scope	459:64:13233:13241	2532299	3	True				
ANR	2532459	ParameterType	int		2532299	0					
ANR	2532460	Identifier	scope		2532299	1					
ANR	2532461	Parameter	int delta	459:75:13244:13252	2532299	4	True				
ANR	2532462	ParameterType	int		2532299	0					
ANR	2532463	Identifier	delta		2532299	1					
ANR	2532464	Parameter	int xs_type	459:86:13255:13265	2532299	5	True				
ANR	2532465	ParameterType	int		2532299	0					
ANR	2532466	Identifier	xs_type		2532299	1					
ANR	2532467	Parameter	ut64 xs_addr	459:99:13268:13279	2532299	6	True				
ANR	2532468	ParameterType	ut64		2532299	0					
ANR	2532469	Identifier	xs_addr		2532299	1					
ANR	2532470	CFGEntryNode	ENTRY		2532299		True				
ANR	2532471	CFGExitNode	EXIT		2532299		True				
ANR	2532472	Symbol	a		2532299						
ANR	2532473	Symbol	xs_type		2532299						
ANR	2532474	Symbol	xs_addr		2532299						
ANR	2532475	Symbol	kind		2532299						
ANR	2532476	Symbol	delta		2532299						
ANR	2532477	Symbol	sdb_array_add_num		2532299						
ANR	2532478	Symbol	inst_key		2532299						
ANR	2532479	Symbol	var_def		2532299						
ANR	2532480	Symbol	var_local		2532299						
ANR	2532481	Symbol	scope		2532299						
ANR	2532482	Symbol	var_global		2532299						
ANR	2532483	Symbol	xs_type_str		2532299						
ANR	2532484	Symbol	var_addr		2532299						
ANR	2532485	Symbol	DB		2532299						
ANR	2532486	Function	r_anal_var_access_clear	478:0:13992:14475							
ANR	2532487	FunctionDef	"r_anal_var_access_clear (RAnal * a , ut64 var_addr , int scope , int delta)"		2532486	0					
ANR	2532488	CompoundStatement		478:82:14074:14475	2532486	0					
ANR	2532489	IdentifierDeclStatement	"char key [ 128 ] , key2 [ 128 ] ;"	479:1:14077:14101	2532486	0	True				
ANR	2532490	IdentifierDecl	key [ 128 ]		2532486	0					
ANR	2532491	IdentifierDeclType	char [ 128 ]		2532486	0					
ANR	2532492	Identifier	key		2532486	1					
ANR	2532493	PrimaryExpression	128		2532486	2					
ANR	2532494	IdentifierDecl	key2 [ 128 ]		2532486	1					
ANR	2532495	IdentifierDeclType	char [ 128 ]		2532486	0					
ANR	2532496	Identifier	key2		2532486	1					
ANR	2532497	PrimaryExpression	128		2532486	2					
ANR	2532498	IfStatement	if ( scope > 0 )		2532486	1					
ANR	2532499	Condition	scope > 0	480:5:14108:14116	2532486	0	True				
ANR	2532500	RelationalExpression	scope > 0		2532486	0		>			
ANR	2532501	Identifier	scope		2532486	0					
ANR	2532502	PrimaryExpression	0		2532486	1					
ANR	2532503	CompoundStatement		3:16:44:44	2532486	1					
ANR	2532504	Statement	SETKEY	481:2:14143:14148	2532486	0	True				
ANR	2532505	Statement	(	481:9:14150:14150	2532486	1	True				
ANR	2532506	Statement	"""var.0x%"""	481:10:14151:14159	2532486	2	True				
ANR	2532507	Statement	PFMT64x	481:19:14160:14166	2532486	3	True				
ANR	2532508	Statement	""".%d.%d.%s"""	481:27:14168:14178	2532486	4	True				
ANR	2532509	Statement	","	481:38:14179:14179	2532486	5	True				
ANR	2532510	Statement	var_addr	481:40:14181:14188	2532486	6	True				
ANR	2532511	Statement	","	481:48:14189:14189	2532486	7	True				
ANR	2532512	Statement	scope	481:50:14191:14195	2532486	8	True				
ANR	2532513	Statement	","	481:55:14196:14196	2532486	9	True				
ANR	2532514	Statement	delta	481:57:14198:14202	2532486	10	True				
ANR	2532515	Statement	","	481:62:14203:14203	2532486	11	True				
ANR	2532516	Statement	"""writes"""	481:64:14205:14212	2532486	12	True				
ANR	2532517	Statement	)	481:72:14213:14213	2532486	13	True				
ANR	2532518	ExpressionStatement		481:73:14214:14214	2532486	14	True				
ANR	2532519	Statement	SETKEY2	482:2:14218:14224	2532486	15	True				
ANR	2532520	Statement	(	482:10:14226:14226	2532486	16	True				
ANR	2532521	Statement	"""var.0x%"""	482:11:14227:14235	2532486	17	True				
ANR	2532522	Statement	PFMT64x	482:20:14236:14242	2532486	18	True				
ANR	2532523	Statement	""".%d.%d.%s"""	482:28:14244:14254	2532486	19	True				
ANR	2532524	Statement	","	482:39:14255:14255	2532486	20	True				
ANR	2532525	Statement	var_addr	482:41:14257:14264	2532486	21	True				
ANR	2532526	Statement	","	482:49:14265:14265	2532486	22	True				
ANR	2532527	Statement	scope	482:51:14267:14271	2532486	23	True				
ANR	2532528	Statement	","	482:56:14272:14272	2532486	24	True				
ANR	2532529	Statement	delta	482:58:14274:14278	2532486	25	True				
ANR	2532530	Statement	","	482:63:14279:14279	2532486	26	True				
ANR	2532531	Statement	"""reads"""	482:65:14281:14287	2532486	27	True				
ANR	2532532	Statement	)	482:72:14288:14288	2532486	28	True				
ANR	2532533	ExpressionStatement		482:73:14289:14289	2532486	29	True				
ANR	2532534	ElseStatement	else		2532486	0					
ANR	2532535	CompoundStatement		6:8:224:224	2532486	0					
ANR	2532536	Statement	SETKEY	484:2:14313:14318	2532486	0	True				
ANR	2532537	Statement	(	484:9:14320:14320	2532486	1	True				
ANR	2532538	Statement	"""var.0x%"""	484:10:14321:14329	2532486	2	True				
ANR	2532539	Statement	PFMT64x	484:19:14330:14336	2532486	3	True				
ANR	2532540	Statement	""".%s"""	484:27:14338:14342	2532486	4	True				
ANR	2532541	Statement	","	484:32:14343:14343	2532486	5	True				
ANR	2532542	Statement	var_addr	484:34:14345:14352	2532486	6	True				
ANR	2532543	Statement	","	484:42:14353:14353	2532486	7	True				
ANR	2532544	Statement	"""writes"""	484:44:14355:14362	2532486	8	True				
ANR	2532545	Statement	)	484:52:14363:14363	2532486	9	True				
ANR	2532546	ExpressionStatement		484:53:14364:14364	2532486	10	True				
ANR	2532547	Statement	SETKEY2	485:2:14368:14374	2532486	11	True				
ANR	2532548	Statement	(	485:10:14376:14376	2532486	12	True				
ANR	2532549	Statement	"""var.0x%"""	485:11:14377:14385	2532486	13	True				
ANR	2532550	Statement	PFMT64x	485:20:14386:14392	2532486	14	True				
ANR	2532551	Statement	""".%s"""	485:28:14394:14398	2532486	15	True				
ANR	2532552	Statement	","	485:33:14399:14399	2532486	16	True				
ANR	2532553	Statement	var_addr	485:35:14401:14408	2532486	17	True				
ANR	2532554	Statement	","	485:43:14409:14409	2532486	18	True				
ANR	2532555	Statement	"""reads"""	485:45:14411:14417	2532486	19	True				
ANR	2532556	Statement	)	485:52:14418:14418	2532486	20	True				
ANR	2532557	ExpressionStatement		485:53:14419:14419	2532486	21	True				
ANR	2532558	ExpressionStatement	"sdb_unset ( DB , key , 0 )"	487:1:14425:14447	2532486	2	True				
ANR	2532559	CallExpression	"sdb_unset ( DB , key , 0 )"		2532486	0					
ANR	2532560	Callee	sdb_unset		2532486	0					
ANR	2532561	Identifier	sdb_unset		2532486	0					
ANR	2532562	ArgumentList	DB		2532486	1					
ANR	2532563	Argument	DB		2532486	0					
ANR	2532564	Identifier	DB		2532486	0					
ANR	2532565	Argument	key		2532486	1					
ANR	2532566	Identifier	key		2532486	0					
ANR	2532567	Argument	0		2532486	2					
ANR	2532568	PrimaryExpression	0		2532486	0					
ANR	2532569	ExpressionStatement	"sdb_unset ( DB , key2 , 0 )"	488:1:14450:14473	2532486	3	True				
ANR	2532570	CallExpression	"sdb_unset ( DB , key2 , 0 )"		2532486	0					
ANR	2532571	Callee	sdb_unset		2532486	0					
ANR	2532572	Identifier	sdb_unset		2532486	0					
ANR	2532573	ArgumentList	DB		2532486	1					
ANR	2532574	Argument	DB		2532486	0					
ANR	2532575	Identifier	DB		2532486	0					
ANR	2532576	Argument	key2		2532486	1					
ANR	2532577	Identifier	key2		2532486	0					
ANR	2532578	Argument	0		2532486	2					
ANR	2532579	PrimaryExpression	0		2532486	0					
ANR	2532580	ReturnType	R_API void		2532486	1					
ANR	2532581	Identifier	r_anal_var_access_clear		2532486	2					
ANR	2532582	ParameterList	"RAnal * a , ut64 var_addr , int scope , int delta"		2532486	3					
ANR	2532583	Parameter	RAnal * a	478:35:14027:14034	2532486	0	True				
ANR	2532584	ParameterType	RAnal *		2532486	0					
ANR	2532585	Identifier	a		2532486	1					
ANR	2532586	Parameter	ut64 var_addr	478:45:14037:14049	2532486	1	True				
ANR	2532587	ParameterType	ut64		2532486	0					
ANR	2532588	Identifier	var_addr		2532486	1					
ANR	2532589	Parameter	int scope	478:60:14052:14060	2532486	2	True				
ANR	2532590	ParameterType	int		2532486	0					
ANR	2532591	Identifier	scope		2532486	1					
ANR	2532592	Parameter	int delta	478:71:14063:14071	2532486	3	True				
ANR	2532593	ParameterType	int		2532486	0					
ANR	2532594	Identifier	delta		2532486	1					
ANR	2532595	CFGEntryNode	ENTRY		2532486		True				
ANR	2532596	CFGExitNode	EXIT		2532486		True				
ANR	2532597	Symbol	a		2532486						
ANR	2532598	Symbol	key2		2532486						
ANR	2532599	Symbol	scope		2532486						
ANR	2532600	Symbol	delta		2532486						
ANR	2532601	Symbol	var_addr		2532486						
ANR	2532602	Symbol	key		2532486						
ANR	2532603	Symbol	DB		2532486						
ANR	2532604	Function	r_anal_fcn_var_del_bydelta	491:0:14478:14896							
ANR	2532605	FunctionDef	"r_anal_fcn_var_del_bydelta (RAnal * a , ut64 fna , const char kind , int scope , ut32 delta)"		2532604	0					
ANR	2532606	CompoundStatement		491:97:14575:14896	2532604	0					
ANR	2532607	IdentifierDeclStatement	int idx ;	492:1:14578:14585	2532604	0	True				
ANR	2532608	IdentifierDecl	idx		2532604	0					
ANR	2532609	IdentifierDeclType	int		2532604	0					
ANR	2532610	Identifier	idx		2532604	1					
ANR	2532611	IdentifierDeclStatement	"char key [ 128 ] , val [ 128 ] , * v ;"	493:1:14588:14615	2532604	1	True				
ANR	2532612	IdentifierDecl	key [ 128 ]		2532604	0					
ANR	2532613	IdentifierDeclType	char [ 128 ]		2532604	0					
ANR	2532614	Identifier	key		2532604	1					
ANR	2532615	PrimaryExpression	128		2532604	2					
ANR	2532616	IdentifierDecl	val [ 128 ]		2532604	1					
ANR	2532617	IdentifierDeclType	char [ 128 ]		2532604	0					
ANR	2532618	Identifier	val		2532604	1					
ANR	2532619	PrimaryExpression	128		2532604	2					
ANR	2532620	IdentifierDecl	* v		2532604	2					
ANR	2532621	IdentifierDeclType	char *		2532604	0					
ANR	2532622	Identifier	v		2532604	1					
ANR	2532623	Statement	SETKEY	494:1:14618:14623	2532604	2	True				
ANR	2532624	Statement	(	494:8:14625:14625	2532604	3	True				
ANR	2532625	Statement	"""fcn.0x%08"""	494:9:14626:14636	2532604	4	True				
ANR	2532626	Statement	PFMT64x	494:20:14637:14643	2532604	5	True				
ANR	2532627	Statement	""".%c"""	494:28:14645:14649	2532604	6	True				
ANR	2532628	Statement	","	494:33:14650:14650	2532604	7	True				
ANR	2532629	Statement	fna	494:35:14652:14654	2532604	8	True				
ANR	2532630	Statement	","	494:38:14655:14655	2532604	9	True				
ANR	2532631	Statement	kind	494:40:14657:14660	2532604	10	True				
ANR	2532632	Statement	)	494:44:14661:14661	2532604	11	True				
ANR	2532633	ExpressionStatement		494:45:14662:14662	2532604	12	True				
ANR	2532634	ExpressionStatement	"v = sdb_itoa ( delta , val , 10 )"	495:1:14665:14694	2532604	13	True				
ANR	2532635	AssignmentExpression	"v = sdb_itoa ( delta , val , 10 )"		2532604	0		=			
ANR	2532636	Identifier	v		2532604	0					
ANR	2532637	CallExpression	"sdb_itoa ( delta , val , 10 )"		2532604	1					
ANR	2532638	Callee	sdb_itoa		2532604	0					
ANR	2532639	Identifier	sdb_itoa		2532604	0					
ANR	2532640	ArgumentList	delta		2532604	1					
ANR	2532641	Argument	delta		2532604	0					
ANR	2532642	Identifier	delta		2532604	0					
ANR	2532643	Argument	val		2532604	1					
ANR	2532644	Identifier	val		2532604	0					
ANR	2532645	Argument	10		2532604	2					
ANR	2532646	PrimaryExpression	10		2532604	0					
ANR	2532647	ExpressionStatement	"idx = sdb_array_indexof ( DB , key , v , 0 )"	496:1:14697:14736	2532604	14	True				
ANR	2532648	AssignmentExpression	"idx = sdb_array_indexof ( DB , key , v , 0 )"		2532604	0		=			
ANR	2532649	Identifier	idx		2532604	0					
ANR	2532650	CallExpression	"sdb_array_indexof ( DB , key , v , 0 )"		2532604	1					
ANR	2532651	Callee	sdb_array_indexof		2532604	0					
ANR	2532652	Identifier	sdb_array_indexof		2532604	0					
ANR	2532653	ArgumentList	DB		2532604	1					
ANR	2532654	Argument	DB		2532604	0					
ANR	2532655	Identifier	DB		2532604	0					
ANR	2532656	Argument	key		2532604	1					
ANR	2532657	Identifier	key		2532604	0					
ANR	2532658	Argument	v		2532604	2					
ANR	2532659	Identifier	v		2532604	0					
ANR	2532660	Argument	0		2532604	3					
ANR	2532661	PrimaryExpression	0		2532604	0					
ANR	2532662	IfStatement	if ( idx != - 1 )		2532604	15					
ANR	2532663	Condition	idx != - 1	497:5:14743:14751	2532604	0	True				
ANR	2532664	EqualityExpression	idx != - 1		2532604	0		!=			
ANR	2532665	Identifier	idx		2532604	0					
ANR	2532666	UnaryOperationExpression	- 1		2532604	1					
ANR	2532667	UnaryOperator	-		2532604	0					
ANR	2532668	PrimaryExpression	1		2532604	1					
ANR	2532669	CompoundStatement		7:16:178:178	2532604	1					
ANR	2532670	ExpressionStatement	"sdb_array_delete ( DB , key , idx , 0 )"	498:2:14758:14792	2532604	0	True				
ANR	2532671	CallExpression	"sdb_array_delete ( DB , key , idx , 0 )"		2532604	0					
ANR	2532672	Callee	sdb_array_delete		2532604	0					
ANR	2532673	Identifier	sdb_array_delete		2532604	0					
ANR	2532674	ArgumentList	DB		2532604	1					
ANR	2532675	Argument	DB		2532604	0					
ANR	2532676	Identifier	DB		2532604	0					
ANR	2532677	Argument	key		2532604	1					
ANR	2532678	Identifier	key		2532604	0					
ANR	2532679	Argument	idx		2532604	2					
ANR	2532680	Identifier	idx		2532604	0					
ANR	2532681	Argument	0		2532604	3					
ANR	2532682	PrimaryExpression	0		2532604	0					
ANR	2532683	Statement	SETKEY	499:2:14796:14801	2532604	1	True				
ANR	2532684	Statement	(	499:9:14803:14803	2532604	2	True				
ANR	2532685	Statement	"""fcn.0x%08"""	499:10:14804:14814	2532604	3	True				
ANR	2532686	Statement	PFMT64x	499:21:14815:14821	2532604	4	True				
ANR	2532687	Statement	""".%c.%d"""	499:29:14823:14830	2532604	5	True				
ANR	2532688	Statement	","	499:37:14831:14831	2532604	6	True				
ANR	2532689	Statement	fna	499:39:14833:14835	2532604	7	True				
ANR	2532690	Statement	","	499:42:14836:14836	2532604	8	True				
ANR	2532691	Statement	kind	499:44:14838:14841	2532604	9	True				
ANR	2532692	Statement	","	499:48:14842:14842	2532604	10	True				
ANR	2532693	Statement	delta	499:50:14844:14848	2532604	11	True				
ANR	2532694	Statement	)	499:55:14849:14849	2532604	12	True				
ANR	2532695	ExpressionStatement		499:56:14850:14850	2532604	13	True				
ANR	2532696	ExpressionStatement	"sdb_unset ( DB , key , 0 )"	500:2:14854:14876	2532604	14	True				
ANR	2532697	CallExpression	"sdb_unset ( DB , key , 0 )"		2532604	0					
ANR	2532698	Callee	sdb_unset		2532604	0					
ANR	2532699	Identifier	sdb_unset		2532604	0					
ANR	2532700	ArgumentList	DB		2532604	1					
ANR	2532701	Argument	DB		2532604	0					
ANR	2532702	Identifier	DB		2532604	0					
ANR	2532703	Argument	key		2532604	1					
ANR	2532704	Identifier	key		2532604	0					
ANR	2532705	Argument	0		2532604	2					
ANR	2532706	PrimaryExpression	0		2532604	0					
ANR	2532707	ReturnStatement	return false ;	502:1:14882:14894	2532604	16	True				
ANR	2532708	Identifier	false		2532604	0					
ANR	2532709	ReturnType	R_API int		2532604	1					
ANR	2532710	Identifier	r_anal_fcn_var_del_bydelta		2532604	2					
ANR	2532711	ParameterList	"RAnal * a , ut64 fna , const char kind , int scope , ut32 delta"		2532604	3					
ANR	2532712	Parameter	RAnal * a	491:37:14515:14522	2532604	0	True				
ANR	2532713	ParameterType	RAnal *		2532604	0					
ANR	2532714	Identifier	a		2532604	1					
ANR	2532715	Parameter	ut64 fna	491:47:14525:14532	2532604	1	True				
ANR	2532716	ParameterType	ut64		2532604	0					
ANR	2532717	Identifier	fna		2532604	1					
ANR	2532718	Parameter	const char kind	491:57:14535:14549	2532604	2	True				
ANR	2532719	ParameterType	const char		2532604	0					
ANR	2532720	Identifier	kind		2532604	1					
ANR	2532721	Parameter	int scope	491:74:14552:14560	2532604	3	True				
ANR	2532722	ParameterType	int		2532604	0					
ANR	2532723	Identifier	scope		2532604	1					
ANR	2532724	Parameter	ut32 delta	491:85:14563:14572	2532604	4	True				
ANR	2532725	ParameterType	ut32		2532604	0					
ANR	2532726	Identifier	delta		2532604	1					
ANR	2532727	CFGEntryNode	ENTRY		2532604		True				
ANR	2532728	CFGExitNode	EXIT		2532604		True				
ANR	2532729	Symbol	val		2532604						
ANR	2532730	Symbol	a		2532604						
ANR	2532731	Symbol	kind		2532604						
ANR	2532732	Symbol	delta		2532604						
ANR	2532733	Symbol	false		2532604						
ANR	2532734	Symbol	sdb_array_indexof		2532604						
ANR	2532735	Symbol	v		2532604						
ANR	2532736	Symbol	sdb_itoa		2532604						
ANR	2532737	Symbol	scope		2532604						
ANR	2532738	Symbol	fna		2532604						
ANR	2532739	Symbol	idx		2532604						
ANR	2532740	Symbol	key		2532604						
ANR	2532741	Symbol	DB		2532604						
ANR	2532742	Function	r_anal_var_count	505:0:14899:15289							
ANR	2532743	FunctionDef	"r_anal_var_count (RAnal * a , RAnalFunction * fcn , int kind , int type)"		2532742	0					
ANR	2532744	CompoundStatement		505:77:14976:15289	2532742	0					
ANR	2532745	IdentifierDeclStatement	"RList * list = r_anal_var_list ( a , fcn , kind ) ;"	507:1:15010:15054	2532742	0	True				
ANR	2532746	IdentifierDecl	"* list = r_anal_var_list ( a , fcn , kind )"		2532742	0					
ANR	2532747	IdentifierDeclType	RList *		2532742	0					
ANR	2532748	Identifier	list		2532742	1					
ANR	2532749	AssignmentExpression	"* list = r_anal_var_list ( a , fcn , kind )"		2532742	2		=			
ANR	2532750	Identifier	list		2532742	0					
ANR	2532751	CallExpression	"r_anal_var_list ( a , fcn , kind )"		2532742	1					
ANR	2532752	Callee	r_anal_var_list		2532742	0					
ANR	2532753	Identifier	r_anal_var_list		2532742	0					
ANR	2532754	ArgumentList	a		2532742	1					
ANR	2532755	Argument	a		2532742	0					
ANR	2532756	Identifier	a		2532742	0					
ANR	2532757	Argument	fcn		2532742	1					
ANR	2532758	Identifier	fcn		2532742	0					
ANR	2532759	Argument	kind		2532742	2					
ANR	2532760	Identifier	kind		2532742	0					
ANR	2532761	IdentifierDeclStatement	RAnalVar * var ;	508:1:15057:15070	2532742	1	True				
ANR	2532762	IdentifierDecl	* var		2532742	0					
ANR	2532763	IdentifierDeclType	RAnalVar *		2532742	0					
ANR	2532764	Identifier	var		2532742	1					
ANR	2532765	IdentifierDeclStatement	RListIter * iter ;	509:1:15073:15088	2532742	2	True				
ANR	2532766	IdentifierDecl	* iter		2532742	0					
ANR	2532767	IdentifierDeclType	RListIter *		2532742	0					
ANR	2532768	Identifier	iter		2532742	1					
ANR	2532769	IdentifierDeclStatement	int count [ 2 ] = { 0 } ;	510:1:15091:15114	2532742	3	True				
ANR	2532770	IdentifierDecl	count [ 2 ] = { 0 }		2532742	0					
ANR	2532771	IdentifierDeclType	int [ 2 ]		2532742	0					
ANR	2532772	Identifier	count		2532742	1					
ANR	2532773	PrimaryExpression	2		2532742	2					
ANR	2532774	AssignmentExpression	count [ 2 ] = { 0 }		2532742	3		=			
ANR	2532775	Identifier	count		2532742	0					
ANR	2532776	InitializerList	0		2532742	1					
ANR	2532777	PrimaryExpression	0		2532742	0					
ANR	2532778	Statement	r_list_foreach	513:1:15117:15130	2532742	4	True				
ANR	2532779	Statement	(	513:16:15132:15132	2532742	5	True				
ANR	2532780	Statement	list	513:17:15133:15136	2532742	6	True				
ANR	2532781	Statement	","	513:21:15137:15137	2532742	7	True				
ANR	2532782	Statement	iter	513:23:15139:15142	2532742	8	True				
ANR	2532783	Statement	","	513:27:15143:15143	2532742	9	True				
ANR	2532784	Statement	var	513:29:15145:15147	2532742	10	True				
ANR	2532785	Statement	)	513:32:15148:15148	2532742	11	True				
ANR	2532786	CompoundStatement		9:34:173:173	2532742	12					
ANR	2532787	IfStatement	if ( kind == R_ANAL_VAR_KIND_REG )		2532742	0					
ANR	2532788	Condition	kind == R_ANAL_VAR_KIND_REG	514:6:15158:15184	2532742	0	True				
ANR	2532789	EqualityExpression	kind == R_ANAL_VAR_KIND_REG		2532742	0		==			
ANR	2532790	Identifier	kind		2532742	0					
ANR	2532791	Identifier	R_ANAL_VAR_KIND_REG		2532742	1					
ANR	2532792	CompoundStatement		10:35:210:210	2532742	1					
ANR	2532793	ExpressionStatement	count [ 1 ] ++	515:3:15192:15202	2532742	0	True				
ANR	2532794	PostIncDecOperationExpression	count [ 1 ] ++		2532742	0					
ANR	2532795	ArrayIndexing	count [ 1 ]		2532742	0					
ANR	2532796	Identifier	count		2532742	0					
ANR	2532797	PrimaryExpression	1		2532742	1					
ANR	2532798	IncDec	++		2532742	1					
ANR	2532799	ContinueStatement	continue ;	516:3:15207:15215	2532742	1	True				
ANR	2532800	ExpressionStatement	count [ var -> isarg ] ++	518:2:15223:15242	2532742	1	True				
ANR	2532801	PostIncDecOperationExpression	count [ var -> isarg ] ++		2532742	0					
ANR	2532802	ArrayIndexing	count [ var -> isarg ]		2532742	0					
ANR	2532803	Identifier	count		2532742	0					
ANR	2532804	PtrMemberAccess	var -> isarg		2532742	1					
ANR	2532805	Identifier	var		2532742	0					
ANR	2532806	Identifier	isarg		2532742	1					
ANR	2532807	IncDec	++		2532742	1					
ANR	2532808	ExpressionStatement	r_list_free ( list )	520:1:15248:15266	2532742	13	True				
ANR	2532809	CallExpression	r_list_free ( list )		2532742	0					
ANR	2532810	Callee	r_list_free		2532742	0					
ANR	2532811	Identifier	r_list_free		2532742	0					
ANR	2532812	ArgumentList	list		2532742	1					
ANR	2532813	Argument	list		2532742	0					
ANR	2532814	Identifier	list		2532742	0					
ANR	2532815	ReturnStatement	return count [ type ] ;	521:1:15269:15287	2532742	14	True				
ANR	2532816	ArrayIndexing	count [ type ]		2532742	0					
ANR	2532817	Identifier	count		2532742	0					
ANR	2532818	Identifier	type		2532742	1					
ANR	2532819	ReturnType	R_API int		2532742	1					
ANR	2532820	Identifier	r_anal_var_count		2532742	2					
ANR	2532821	ParameterList	"RAnal * a , RAnalFunction * fcn , int kind , int type"		2532742	3					
ANR	2532822	Parameter	RAnal * a	505:27:14926:14933	2532742	0	True				
ANR	2532823	ParameterType	RAnal *		2532742	0					
ANR	2532824	Identifier	a		2532742	1					
ANR	2532825	Parameter	RAnalFunction * fcn	505:37:14936:14953	2532742	1	True				
ANR	2532826	ParameterType	RAnalFunction *		2532742	0					
ANR	2532827	Identifier	fcn		2532742	1					
ANR	2532828	Parameter	int kind	505:57:14956:14963	2532742	2	True				
ANR	2532829	ParameterType	int		2532742	0					
ANR	2532830	Identifier	kind		2532742	1					
ANR	2532831	Parameter	int type	505:67:14966:14973	2532742	3	True				
ANR	2532832	ParameterType	int		2532742	0					
ANR	2532833	Identifier	type		2532742	1					
ANR	2532834	CFGEntryNode	ENTRY		2532742		True				
ANR	2532835	CFGExitNode	EXIT		2532742		True				
ANR	2532836	CFGErrorNode	ERROR		2532742		True				
ANR	2532837	Symbol	a		2532742						
ANR	2532838	Symbol	kind		2532742						
ANR	2532839	Symbol	var		2532742						
ANR	2532840	Symbol	count		2532742						
ANR	2532841	Symbol	iter		2532742						
ANR	2532842	Symbol	type		2532742						
ANR	2532843	Symbol	list		2532742						
ANR	2532844	Symbol	var -> isarg		2532742						
ANR	2532845	Symbol	fcn		2532742						
ANR	2532846	Symbol	* count		2532742						
ANR	2532847	Symbol	* var		2532742						
ANR	2532848	Symbol	r_anal_var_list		2532742						
ANR	2532849	Symbol	* var -> isarg		2532742						
ANR	2532850	Symbol	* type		2532742						
ANR	2532851	Symbol	* * var		2532742						
ANR	2532852	Symbol	R_ANAL_VAR_KIND_REG		2532742						
ANR	2532853	Function	var_add_structure_fields_to_list	524:0:15292:16716							
ANR	2532854	FunctionDef	"var_add_structure_fields_to_list (RAnal * a , RAnalVar * av , const char * base_name , int delta , RList * list)"		2532853	0					
ANR	2532855	CompoundStatement		524:116:15408:16716	2532853	0					
ANR	2532856	IdentifierDeclStatement	Sdb * TDB = a -> sdb_types ;	526:1:15468:15491	2532853	0	True				
ANR	2532857	IdentifierDecl	* TDB = a -> sdb_types		2532853	0					
ANR	2532858	IdentifierDeclType	Sdb *		2532853	0					
ANR	2532859	Identifier	TDB		2532853	1					
ANR	2532860	AssignmentExpression	* TDB = a -> sdb_types		2532853	2		=			
ANR	2532861	Identifier	TDB		2532853	0					
ANR	2532862	PtrMemberAccess	a -> sdb_types		2532853	1					
ANR	2532863	Identifier	a		2532853	0					
ANR	2532864	Identifier	sdb_types		2532853	1					
ANR	2532865	IdentifierDeclStatement	"const char * type_kind = sdb_const_get ( TDB , av -> type , 0 ) ;"	527:1:15494:15550	2532853	1	True				
ANR	2532866	IdentifierDecl	"* type_kind = sdb_const_get ( TDB , av -> type , 0 )"		2532853	0					
ANR	2532867	IdentifierDeclType	const char *		2532853	0					
ANR	2532868	Identifier	type_kind		2532853	1					
ANR	2532869	AssignmentExpression	"* type_kind = sdb_const_get ( TDB , av -> type , 0 )"		2532853	2		=			
ANR	2532870	Identifier	type_kind		2532853	0					
ANR	2532871	CallExpression	"sdb_const_get ( TDB , av -> type , 0 )"		2532853	1					
ANR	2532872	Callee	sdb_const_get		2532853	0					
ANR	2532873	Identifier	sdb_const_get		2532853	0					
ANR	2532874	ArgumentList	TDB		2532853	1					
ANR	2532875	Argument	TDB		2532853	0					
ANR	2532876	Identifier	TDB		2532853	0					
ANR	2532877	Argument	av -> type		2532853	1					
ANR	2532878	PtrMemberAccess	av -> type		2532853	0					
ANR	2532879	Identifier	av		2532853	0					
ANR	2532880	Identifier	type		2532853	1					
ANR	2532881	Argument	0		2532853	2					
ANR	2532882	PrimaryExpression	0		2532853	0					
ANR	2532883	IfStatement	"if ( type_kind && r_str_startswith ( type_kind , ""struct"" ) )"		2532853	2					
ANR	2532884	Condition	"type_kind && r_str_startswith ( type_kind , ""struct"" )"	528:5:15557:15607	2532853	0	True				
ANR	2532885	AndExpression	"type_kind && r_str_startswith ( type_kind , ""struct"" )"		2532853	0		&&			
ANR	2532886	Identifier	type_kind		2532853	0					
ANR	2532887	CallExpression	"r_str_startswith ( type_kind , ""struct"" )"		2532853	1					
ANR	2532888	Callee	r_str_startswith		2532853	0					
ANR	2532889	Identifier	r_str_startswith		2532853	0					
ANR	2532890	ArgumentList	type_kind		2532853	1					
ANR	2532891	Argument	type_kind		2532853	0					
ANR	2532892	Identifier	type_kind		2532853	0					
ANR	2532893	Argument	"""struct"""		2532853	1					
ANR	2532894	PrimaryExpression	"""struct"""		2532853	0					
ANR	2532895	CompoundStatement		8:2:251:309	2532853	1					
ANR	2532896	IdentifierDeclStatement	"char * field_name , * new_name ;"	529:2:15614:15641	2532853	0	True				
ANR	2532897	IdentifierDecl	* field_name		2532853	0					
ANR	2532898	IdentifierDeclType	char *		2532853	0					
ANR	2532899	Identifier	field_name		2532853	1					
ANR	2532900	IdentifierDecl	* new_name		2532853	1					
ANR	2532901	IdentifierDeclType	char *		2532853	0					
ANR	2532902	Identifier	new_name		2532853	1					
ANR	2532903	IdentifierDeclStatement	int field_n ;	530:2:15645:15656	2532853	1	True				
ANR	2532904	IdentifierDecl	field_n		2532853	0					
ANR	2532905	IdentifierDeclType	int		2532853	0					
ANR	2532906	Identifier	field_n		2532853	1					
ANR	2532907	IdentifierDeclStatement	"char * type_key = r_str_newf ( ""%s.%s"" , type_kind , av -> type ) ;"	531:2:15660:15718	2532853	2	True				
ANR	2532908	IdentifierDecl	"* type_key = r_str_newf ( ""%s.%s"" , type_kind , av -> type )"		2532853	0					
ANR	2532909	IdentifierDeclType	char *		2532853	0					
ANR	2532910	Identifier	type_key		2532853	1					
ANR	2532911	AssignmentExpression	"* type_key = r_str_newf ( ""%s.%s"" , type_kind , av -> type )"		2532853	2		=			
ANR	2532912	Identifier	type_key		2532853	0					
ANR	2532913	CallExpression	"r_str_newf ( ""%s.%s"" , type_kind , av -> type )"		2532853	1					
ANR	2532914	Callee	r_str_newf		2532853	0					
ANR	2532915	Identifier	r_str_newf		2532853	0					
ANR	2532916	ArgumentList	"""%s.%s"""		2532853	1					
ANR	2532917	Argument	"""%s.%s"""		2532853	0					
ANR	2532918	PrimaryExpression	"""%s.%s"""		2532853	0					
ANR	2532919	Argument	type_kind		2532853	1					
ANR	2532920	Identifier	type_kind		2532853	0					
ANR	2532921	Argument	av -> type		2532853	2					
ANR	2532922	PtrMemberAccess	av -> type		2532853	0					
ANR	2532923	Identifier	av		2532853	0					
ANR	2532924	Identifier	type		2532853	1					
ANR	2532925	ForStatement	"for ( field_n = 0 ; ( field_name = sdb_array_get ( TDB , type_key , field_n , NULL ) ) ; field_n ++ )"		2532853	3					
ANR	2532926	ForInit	field_n = 0 ;	532:7:15727:15738	2532853	0	True				
ANR	2532927	AssignmentExpression	field_n = 0		2532853	0		=			
ANR	2532928	Identifier	field_n		2532853	0					
ANR	2532929	PrimaryExpression	0		2532853	1					
ANR	2532930	Condition	"field_name = sdb_array_get ( TDB , type_key , field_n , NULL )"	532:20:15740:15798	2532853	1	True				
ANR	2532931	AssignmentExpression	"field_name = sdb_array_get ( TDB , type_key , field_n , NULL )"		2532853	0		=			
ANR	2532932	Identifier	field_name		2532853	0					
ANR	2532933	CallExpression	"sdb_array_get ( TDB , type_key , field_n , NULL )"		2532853	1					
ANR	2532934	Callee	sdb_array_get		2532853	0					
ANR	2532935	Identifier	sdb_array_get		2532853	0					
ANR	2532936	ArgumentList	TDB		2532853	1					
ANR	2532937	Argument	TDB		2532853	0					
ANR	2532938	Identifier	TDB		2532853	0					
ANR	2532939	Argument	type_key		2532853	1					
ANR	2532940	Identifier	type_key		2532853	0					
ANR	2532941	Argument	field_n		2532853	2					
ANR	2532942	Identifier	field_n		2532853	0					
ANR	2532943	Argument	NULL		2532853	3					
ANR	2532944	Identifier	NULL		2532853	0					
ANR	2532945	PostIncDecOperationExpression	field_n ++	532:81:15801:15809	2532853	2	True				
ANR	2532946	Identifier	field_n		2532853	0					
ANR	2532947	IncDec	++		2532853	1					
ANR	2532948	CompoundStatement		14:3:670:755	2532853	3					
ANR	2532949	IdentifierDeclStatement	"char * field_key = r_str_newf ( ""%s.%s"" , type_key , field_name ) ;"	533:3:15817:15877	2532853	0	True				
ANR	2532950	IdentifierDecl	"* field_key = r_str_newf ( ""%s.%s"" , type_key , field_name )"		2532853	0					
ANR	2532951	IdentifierDeclType	char *		2532853	0					
ANR	2532952	Identifier	field_key		2532853	1					
ANR	2532953	AssignmentExpression	"* field_key = r_str_newf ( ""%s.%s"" , type_key , field_name )"		2532853	2		=			
ANR	2532954	Identifier	field_key		2532853	0					
ANR	2532955	CallExpression	"r_str_newf ( ""%s.%s"" , type_key , field_name )"		2532853	1					
ANR	2532956	Callee	r_str_newf		2532853	0					
ANR	2532957	Identifier	r_str_newf		2532853	0					
ANR	2532958	ArgumentList	"""%s.%s"""		2532853	1					
ANR	2532959	Argument	"""%s.%s"""		2532853	0					
ANR	2532960	PrimaryExpression	"""%s.%s"""		2532853	0					
ANR	2532961	Argument	type_key		2532853	1					
ANR	2532962	Identifier	type_key		2532853	0					
ANR	2532963	Argument	field_name		2532853	2					
ANR	2532964	Identifier	field_name		2532853	0					
ANR	2532965	IdentifierDeclStatement	"char * field_type = sdb_array_get ( TDB , field_key , 0 , NULL ) ;"	534:3:15882:15940	2532853	1	True				
ANR	2532966	IdentifierDecl	"* field_type = sdb_array_get ( TDB , field_key , 0 , NULL )"		2532853	0					
ANR	2532967	IdentifierDeclType	char *		2532853	0					
ANR	2532968	Identifier	field_type		2532853	1					
ANR	2532969	AssignmentExpression	"* field_type = sdb_array_get ( TDB , field_key , 0 , NULL )"		2532853	2		=			
ANR	2532970	Identifier	field_type		2532853	0					
ANR	2532971	CallExpression	"sdb_array_get ( TDB , field_key , 0 , NULL )"		2532853	1					
ANR	2532972	Callee	sdb_array_get		2532853	0					
ANR	2532973	Identifier	sdb_array_get		2532853	0					
ANR	2532974	ArgumentList	TDB		2532853	1					
ANR	2532975	Argument	TDB		2532853	0					
ANR	2532976	Identifier	TDB		2532853	0					
ANR	2532977	Argument	field_key		2532853	1					
ANR	2532978	Identifier	field_key		2532853	0					
ANR	2532979	Argument	0		2532853	2					
ANR	2532980	PrimaryExpression	0		2532853	0					
ANR	2532981	Argument	NULL		2532853	3					
ANR	2532982	Identifier	NULL		2532853	0					
ANR	2532983	IdentifierDeclStatement	"ut64 field_offset = sdb_array_get_num ( TDB , field_key , 1 , NULL ) ;"	535:3:15945:16008	2532853	2	True				
ANR	2532984	IdentifierDecl	"field_offset = sdb_array_get_num ( TDB , field_key , 1 , NULL )"		2532853	0					
ANR	2532985	IdentifierDeclType	ut64		2532853	0					
ANR	2532986	Identifier	field_offset		2532853	1					
ANR	2532987	AssignmentExpression	"field_offset = sdb_array_get_num ( TDB , field_key , 1 , NULL )"		2532853	2		=			
ANR	2532988	Identifier	field_offset		2532853	0					
ANR	2532989	CallExpression	"sdb_array_get_num ( TDB , field_key , 1 , NULL )"		2532853	1					
ANR	2532990	Callee	sdb_array_get_num		2532853	0					
ANR	2532991	Identifier	sdb_array_get_num		2532853	0					
ANR	2532992	ArgumentList	TDB		2532853	1					
ANR	2532993	Argument	TDB		2532853	0					
ANR	2532994	Identifier	TDB		2532853	0					
ANR	2532995	Argument	field_key		2532853	1					
ANR	2532996	Identifier	field_key		2532853	0					
ANR	2532997	Argument	1		2532853	2					
ANR	2532998	PrimaryExpression	1		2532853	0					
ANR	2532999	Argument	NULL		2532853	3					
ANR	2533000	Identifier	NULL		2532853	0					
ANR	2533001	IdentifierDeclStatement	"int field_count = sdb_array_get_num ( TDB , field_key , 2 , NULL ) ;"	536:3:16013:16074	2532853	3	True				
ANR	2533002	IdentifierDecl	"field_count = sdb_array_get_num ( TDB , field_key , 2 , NULL )"		2532853	0					
ANR	2533003	IdentifierDeclType	int		2532853	0					
ANR	2533004	Identifier	field_count		2532853	1					
ANR	2533005	AssignmentExpression	"field_count = sdb_array_get_num ( TDB , field_key , 2 , NULL )"		2532853	2		=			
ANR	2533006	Identifier	field_count		2532853	0					
ANR	2533007	CallExpression	"sdb_array_get_num ( TDB , field_key , 2 , NULL )"		2532853	1					
ANR	2533008	Callee	sdb_array_get_num		2532853	0					
ANR	2533009	Identifier	sdb_array_get_num		2532853	0					
ANR	2533010	ArgumentList	TDB		2532853	1					
ANR	2533011	Argument	TDB		2532853	0					
ANR	2533012	Identifier	TDB		2532853	0					
ANR	2533013	Argument	field_key		2532853	1					
ANR	2533014	Identifier	field_key		2532853	0					
ANR	2533015	Argument	2		2532853	2					
ANR	2533016	PrimaryExpression	2		2532853	0					
ANR	2533017	Argument	NULL		2532853	3					
ANR	2533018	Identifier	NULL		2532853	0					
ANR	2533019	IdentifierDeclStatement	"int field_size = r_type_get_bitsize ( TDB , field_type ) * ( field_count ? field_count : 1 ) ;"	537:3:16079:16164	2532853	4	True				
ANR	2533020	IdentifierDecl	"field_size = r_type_get_bitsize ( TDB , field_type ) * ( field_count ? field_count : 1 )"		2532853	0					
ANR	2533021	IdentifierDeclType	int		2532853	0					
ANR	2533022	Identifier	field_size		2532853	1					
ANR	2533023	AssignmentExpression	"field_size = r_type_get_bitsize ( TDB , field_type ) * ( field_count ? field_count : 1 )"		2532853	2		=			
ANR	2533024	Identifier	field_size		2532853	0					
ANR	2533025	MultiplicativeExpression	"r_type_get_bitsize ( TDB , field_type ) * ( field_count ? field_count : 1 )"		2532853	1		*			
ANR	2533026	CallExpression	"r_type_get_bitsize ( TDB , field_type )"		2532853	0					
ANR	2533027	Callee	r_type_get_bitsize		2532853	0					
ANR	2533028	Identifier	r_type_get_bitsize		2532853	0					
ANR	2533029	ArgumentList	TDB		2532853	1					
ANR	2533030	Argument	TDB		2532853	0					
ANR	2533031	Identifier	TDB		2532853	0					
ANR	2533032	Argument	field_type		2532853	1					
ANR	2533033	Identifier	field_type		2532853	0					
ANR	2533034	ConditionalExpression	field_count ? field_count : 1		2532853	1					
ANR	2533035	Condition	field_count		2532853	0					
ANR	2533036	Identifier	field_count		2532853	0					
ANR	2533037	Identifier	field_count		2532853	1					
ANR	2533038	PrimaryExpression	1		2532853	2					
ANR	2533039	ExpressionStatement	"new_name = r_str_newf ( ""%s.%s"" , base_name , field_name )"	538:3:16169:16224	2532853	5	True				
ANR	2533040	AssignmentExpression	"new_name = r_str_newf ( ""%s.%s"" , base_name , field_name )"		2532853	0		=			
ANR	2533041	Identifier	new_name		2532853	0					
ANR	2533042	CallExpression	"r_str_newf ( ""%s.%s"" , base_name , field_name )"		2532853	1					
ANR	2533043	Callee	r_str_newf		2532853	0					
ANR	2533044	Identifier	r_str_newf		2532853	0					
ANR	2533045	ArgumentList	"""%s.%s"""		2532853	1					
ANR	2533046	Argument	"""%s.%s"""		2532853	0					
ANR	2533047	PrimaryExpression	"""%s.%s"""		2532853	0					
ANR	2533048	Argument	base_name		2532853	1					
ANR	2533049	Identifier	base_name		2532853	0					
ANR	2533050	Argument	field_name		2532853	2					
ANR	2533051	Identifier	field_name		2532853	0					
ANR	2533052	IfStatement	if ( field_offset == 0 )		2532853	6					
ANR	2533053	Condition	field_offset == 0	539:7:16233:16249	2532853	0	True				
ANR	2533054	EqualityExpression	field_offset == 0		2532853	0		==			
ANR	2533055	Identifier	field_offset		2532853	0					
ANR	2533056	PrimaryExpression	0		2532853	1					
ANR	2533057	CompoundStatement		16:26:843:843	2532853	1					
ANR	2533058	ExpressionStatement	free ( av -> name )	540:4:16258:16273	2532853	0	True				
ANR	2533059	CallExpression	free ( av -> name )		2532853	0					
ANR	2533060	Callee	free		2532853	0					
ANR	2533061	Identifier	free		2532853	0					
ANR	2533062	ArgumentList	av -> name		2532853	1					
ANR	2533063	Argument	av -> name		2532853	0					
ANR	2533064	PtrMemberAccess	av -> name		2532853	0					
ANR	2533065	Identifier	av		2532853	0					
ANR	2533066	Identifier	name		2532853	1					
ANR	2533067	ExpressionStatement	av -> name = new_name	541:4:16279:16298	2532853	1	True				
ANR	2533068	AssignmentExpression	av -> name = new_name		2532853	0		=			
ANR	2533069	PtrMemberAccess	av -> name		2532853	0					
ANR	2533070	Identifier	av		2532853	0					
ANR	2533071	Identifier	name		2532853	1					
ANR	2533072	Identifier	new_name		2532853	1					
ANR	2533073	ElseStatement	else		2532853	0					
ANR	2533074	CompoundStatement		20:4:907:940	2532853	0					
ANR	2533075	IdentifierDeclStatement	RAnalVar * fav = R_NEW0 ( RAnalVar ) ;	543:4:16316:16349	2532853	0	True				
ANR	2533076	IdentifierDecl	* fav = R_NEW0 ( RAnalVar )		2532853	0					
ANR	2533077	IdentifierDeclType	RAnalVar *		2532853	0					
ANR	2533078	Identifier	fav		2532853	1					
ANR	2533079	AssignmentExpression	* fav = R_NEW0 ( RAnalVar )		2532853	2		=			
ANR	2533080	Identifier	fav		2532853	0					
ANR	2533081	CallExpression	R_NEW0 ( RAnalVar )		2532853	1					
ANR	2533082	Callee	R_NEW0		2532853	0					
ANR	2533083	Identifier	R_NEW0		2532853	0					
ANR	2533084	ArgumentList	RAnalVar		2532853	1					
ANR	2533085	Argument	RAnalVar		2532853	0					
ANR	2533086	Identifier	RAnalVar		2532853	0					
ANR	2533087	IfStatement	if ( ! fav )		2532853	1					
ANR	2533088	Condition	! fav	544:8:16359:16362	2532853	0	True				
ANR	2533089	UnaryOperationExpression	! fav		2532853	0					
ANR	2533090	UnaryOperator	!		2532853	0					
ANR	2533091	Identifier	fav		2532853	1					
ANR	2533092	CompoundStatement		21:14:956:956	2532853	1					
ANR	2533093	ExpressionStatement	free ( field_key )	545:5:16372:16388	2532853	0	True				
ANR	2533094	CallExpression	free ( field_key )		2532853	0					
ANR	2533095	Callee	free		2532853	0					
ANR	2533096	Identifier	free		2532853	0					
ANR	2533097	ArgumentList	field_key		2532853	1					
ANR	2533098	Argument	field_key		2532853	0					
ANR	2533099	Identifier	field_key		2532853	0					
ANR	2533100	ExpressionStatement	free ( new_name )	546:5:16395:16410	2532853	1	True				
ANR	2533101	CallExpression	free ( new_name )		2532853	0					
ANR	2533102	Callee	free		2532853	0					
ANR	2533103	Identifier	free		2532853	0					
ANR	2533104	ArgumentList	new_name		2532853	1					
ANR	2533105	Argument	new_name		2532853	0					
ANR	2533106	Identifier	new_name		2532853	0					
ANR	2533107	ContinueStatement	continue ;	547:5:16417:16425	2532853	2	True				
ANR	2533108	ExpressionStatement	fav -> delta = delta + field_offset	549:4:16437:16470	2532853	2	True				
ANR	2533109	AssignmentExpression	fav -> delta = delta + field_offset		2532853	0		=			
ANR	2533110	PtrMemberAccess	fav -> delta		2532853	0					
ANR	2533111	Identifier	fav		2532853	0					
ANR	2533112	Identifier	delta		2532853	1					
ANR	2533113	AdditiveExpression	delta + field_offset		2532853	1		+			
ANR	2533114	Identifier	delta		2532853	0					
ANR	2533115	Identifier	field_offset		2532853	1					
ANR	2533116	ExpressionStatement	fav -> kind = av -> kind	550:4:16476:16496	2532853	3	True				
ANR	2533117	AssignmentExpression	fav -> kind = av -> kind		2532853	0		=			
ANR	2533118	PtrMemberAccess	fav -> kind		2532853	0					
ANR	2533119	Identifier	fav		2532853	0					
ANR	2533120	Identifier	kind		2532853	1					
ANR	2533121	PtrMemberAccess	av -> kind		2532853	1					
ANR	2533122	Identifier	av		2532853	0					
ANR	2533123	Identifier	kind		2532853	1					
ANR	2533124	ExpressionStatement	fav -> name = new_name	551:4:16502:16522	2532853	4	True				
ANR	2533125	AssignmentExpression	fav -> name = new_name		2532853	0		=			
ANR	2533126	PtrMemberAccess	fav -> name		2532853	0					
ANR	2533127	Identifier	fav		2532853	0					
ANR	2533128	Identifier	name		2532853	1					
ANR	2533129	Identifier	new_name		2532853	1					
ANR	2533130	ExpressionStatement	fav -> size = field_size	552:4:16528:16550	2532853	5	True				
ANR	2533131	AssignmentExpression	fav -> size = field_size		2532853	0		=			
ANR	2533132	PtrMemberAccess	fav -> size		2532853	0					
ANR	2533133	Identifier	fav		2532853	0					
ANR	2533134	Identifier	size		2532853	1					
ANR	2533135	Identifier	field_size		2532853	1					
ANR	2533136	ExpressionStatement	fav -> type = strdup ( field_type )	553:4:16556:16587	2532853	6	True				
ANR	2533137	AssignmentExpression	fav -> type = strdup ( field_type )		2532853	0		=			
ANR	2533138	PtrMemberAccess	fav -> type		2532853	0					
ANR	2533139	Identifier	fav		2532853	0					
ANR	2533140	Identifier	type		2532853	1					
ANR	2533141	CallExpression	strdup ( field_type )		2532853	1					
ANR	2533142	Callee	strdup		2532853	0					
ANR	2533143	Identifier	strdup		2532853	0					
ANR	2533144	ArgumentList	field_type		2532853	1					
ANR	2533145	Argument	field_type		2532853	0					
ANR	2533146	Identifier	field_type		2532853	0					
ANR	2533147	ExpressionStatement	"r_list_append ( list , fav )"	554:4:16593:16618	2532853	7	True				
ANR	2533148	CallExpression	"r_list_append ( list , fav )"		2532853	0					
ANR	2533149	Callee	r_list_append		2532853	0					
ANR	2533150	Identifier	r_list_append		2532853	0					
ANR	2533151	ArgumentList	list		2532853	1					
ANR	2533152	Argument	list		2532853	0					
ANR	2533153	Identifier	list		2532853	0					
ANR	2533154	Argument	fav		2532853	1					
ANR	2533155	Identifier	fav		2532853	0					
ANR	2533156	ExpressionStatement	free ( field_type )	556:3:16628:16645	2532853	7	True				
ANR	2533157	CallExpression	free ( field_type )		2532853	0					
ANR	2533158	Callee	free		2532853	0					
ANR	2533159	Identifier	free		2532853	0					
ANR	2533160	ArgumentList	field_type		2532853	1					
ANR	2533161	Argument	field_type		2532853	0					
ANR	2533162	Identifier	field_type		2532853	0					
ANR	2533163	ExpressionStatement	free ( field_key )	557:3:16650:16666	2532853	8	True				
ANR	2533164	CallExpression	free ( field_key )		2532853	0					
ANR	2533165	Callee	free		2532853	0					
ANR	2533166	Identifier	free		2532853	0					
ANR	2533167	ArgumentList	field_key		2532853	1					
ANR	2533168	Argument	field_key		2532853	0					
ANR	2533169	Identifier	field_key		2532853	0					
ANR	2533170	ExpressionStatement	free ( field_name )	558:3:16671:16688	2532853	9	True				
ANR	2533171	CallExpression	free ( field_name )		2532853	0					
ANR	2533172	Callee	free		2532853	0					
ANR	2533173	Identifier	free		2532853	0					
ANR	2533174	ArgumentList	field_name		2532853	1					
ANR	2533175	Argument	field_name		2532853	0					
ANR	2533176	Identifier	field_name		2532853	0					
ANR	2533177	ExpressionStatement	free ( type_key )	560:2:16696:16711	2532853	4	True				
ANR	2533178	CallExpression	free ( type_key )		2532853	0					
ANR	2533179	Callee	free		2532853	0					
ANR	2533180	Identifier	free		2532853	0					
ANR	2533181	ArgumentList	type_key		2532853	1					
ANR	2533182	Argument	type_key		2532853	0					
ANR	2533183	Identifier	type_key		2532853	0					
ANR	2533184	ReturnType	static void		2532853	1					
ANR	2533185	Identifier	var_add_structure_fields_to_list		2532853	2					
ANR	2533186	ParameterList	"RAnal * a , RAnalVar * av , const char * base_name , int delta , RList * list"		2532853	3					
ANR	2533187	Parameter	RAnal * a	524:45:15337:15344	2532853	0	True				
ANR	2533188	ParameterType	RAnal *		2532853	0					
ANR	2533189	Identifier	a		2532853	1					
ANR	2533190	Parameter	RAnalVar * av	524:55:15347:15358	2532853	1	True				
ANR	2533191	ParameterType	RAnalVar *		2532853	0					
ANR	2533192	Identifier	av		2532853	1					
ANR	2533193	Parameter	const char * base_name	524:69:15361:15381	2532853	2	True				
ANR	2533194	ParameterType	const char *		2532853	0					
ANR	2533195	Identifier	base_name		2532853	1					
ANR	2533196	Parameter	int delta	524:92:15384:15392	2532853	3	True				
ANR	2533197	ParameterType	int		2532853	0					
ANR	2533198	Identifier	delta		2532853	1					
ANR	2533199	Parameter	RList * list	524:103:15395:15405	2532853	4	True				
ANR	2533200	ParameterType	RList *		2532853	0					
ANR	2533201	Identifier	list		2532853	1					
ANR	2533202	CFGEntryNode	ENTRY		2532853		True				
ANR	2533203	CFGExitNode	EXIT		2532853		True				
ANR	2533204	Symbol	base_name		2532853						
ANR	2533205	Symbol	field_n		2532853						
ANR	2533206	Symbol	fav -> kind		2532853						
ANR	2533207	Symbol	sdb_array_get		2532853						
ANR	2533208	Symbol	av -> kind		2532853						
ANR	2533209	Symbol	field_size		2532853						
ANR	2533210	Symbol	delta		2532853						
ANR	2533211	Symbol	type_kind		2532853						
ANR	2533212	Symbol	fav -> name		2532853						
ANR	2533213	Symbol	r_str_newf		2532853						
ANR	2533214	Symbol	sdb_const_get		2532853						
ANR	2533215	Symbol	av -> name		2532853						
ANR	2533216	Symbol	TDB		2532853						
ANR	2533217	Symbol	fav -> delta		2532853						
ANR	2533218	Symbol	a -> sdb_types		2532853						
ANR	2533219	Symbol	fav		2532853						
ANR	2533220	Symbol	sdb_array_get_num		2532853						
ANR	2533221	Symbol	av -> type		2532853						
ANR	2533222	Symbol	new_name		2532853						
ANR	2533223	Symbol	r_str_startswith		2532853						
ANR	2533224	Symbol	a		2532853						
ANR	2533225	Symbol	NULL		2532853						
ANR	2533226	Symbol	r_type_get_bitsize		2532853						
ANR	2533227	Symbol	fav -> type		2532853						
ANR	2533228	Symbol	fav -> size		2532853						
ANR	2533229	Symbol	* a		2532853						
ANR	2533230	Symbol	list		2532853						
ANR	2533231	Symbol	RAnalVar		2532853						
ANR	2533232	Symbol	field_name		2532853						
ANR	2533233	Symbol	type_key		2532853						
ANR	2533234	Symbol	R_NEW0		2532853						
ANR	2533235	Symbol	field_offset		2532853						
ANR	2533236	Symbol	field_key		2532853						
ANR	2533237	Symbol	av		2532853						
ANR	2533238	Symbol	* av		2532853						
ANR	2533239	Symbol	field_count		2532853						
ANR	2533240	Symbol	* fav		2532853						
ANR	2533241	Symbol	strdup		2532853						
ANR	2533242	Symbol	field_type		2532853						
ANR	2533243	Function	get_varname	566:0:16750:17483							
ANR	2533244	FunctionDef	"get_varname (RAnal * a , RAnalFunction * fcn , char type , const char * pfx , int idx)"		2533243	0					
ANR	2533245	CompoundStatement		566:92:16842:17483	2533243	0					
ANR	2533246	IdentifierDeclStatement	"char * varname = r_str_newf ( ""%s_%xh"" , pfx , idx ) ;"	567:1:16845:16892	2533243	0	True				
ANR	2533247	IdentifierDecl	"* varname = r_str_newf ( ""%s_%xh"" , pfx , idx )"		2533243	0					
ANR	2533248	IdentifierDeclType	char *		2533243	0					
ANR	2533249	Identifier	varname		2533243	1					
ANR	2533250	AssignmentExpression	"* varname = r_str_newf ( ""%s_%xh"" , pfx , idx )"		2533243	2		=			
ANR	2533251	Identifier	varname		2533243	0					
ANR	2533252	CallExpression	"r_str_newf ( ""%s_%xh"" , pfx , idx )"		2533243	1					
ANR	2533253	Callee	r_str_newf		2533243	0					
ANR	2533254	Identifier	r_str_newf		2533243	0					
ANR	2533255	ArgumentList	"""%s_%xh"""		2533243	1					
ANR	2533256	Argument	"""%s_%xh"""		2533243	0					
ANR	2533257	PrimaryExpression	"""%s_%xh"""		2533243	0					
ANR	2533258	Argument	pfx		2533243	1					
ANR	2533259	Identifier	pfx		2533243	0					
ANR	2533260	Argument	idx		2533243	2					
ANR	2533261	Identifier	idx		2533243	0					
ANR	2533262	IdentifierDeclStatement	int i = 2 ;	568:1:16895:16904	2533243	1	True				
ANR	2533263	IdentifierDecl	i = 2		2533243	0					
ANR	2533264	IdentifierDeclType	int		2533243	0					
ANR	2533265	Identifier	i		2533243	1					
ANR	2533266	AssignmentExpression	i = 2		2533243	2		=			
ANR	2533267	Identifier	i		2533243	0					
ANR	2533268	PrimaryExpression	2		2533243	1					
ANR	2533269	IdentifierDeclStatement	char v_kind = 0 ;	569:1:16907:16922	2533243	2	True				
ANR	2533270	IdentifierDecl	v_kind = 0		2533243	0					
ANR	2533271	IdentifierDeclType	char		2533243	0					
ANR	2533272	Identifier	v_kind		2533243	1					
ANR	2533273	AssignmentExpression	v_kind = 0		2533243	2		=			
ANR	2533274	Identifier	v_kind		2533243	0					
ANR	2533275	PrimaryExpression	0		2533243	1					
ANR	2533276	IdentifierDeclStatement	int v_delta = 0 ;	570:1:16925:16940	2533243	3	True				
ANR	2533277	IdentifierDecl	v_delta = 0		2533243	0					
ANR	2533278	IdentifierDeclType	int		2533243	0					
ANR	2533279	Identifier	v_delta		2533243	1					
ANR	2533280	AssignmentExpression	v_delta = 0		2533243	2		=			
ANR	2533281	Identifier	v_delta		2533243	0					
ANR	2533282	PrimaryExpression	0		2533243	1					
ANR	2533283	WhileStatement	while ( 1 )		2533243	4					
ANR	2533284	Condition	1	571:8:16950:16950	2533243	0	True				
ANR	2533285	PrimaryExpression	1		2533243	0					
ANR	2533286	CompoundStatement		12:2:285:329	2533243	1					
ANR	2533287	Statement	char	572:2:16957:16960	2533243	0	True				
ANR	2533288	Statement	*	572:7:16962:16962	2533243	1	True				
ANR	2533289	Statement	name_key	572:8:16963:16970	2533243	2	True				
ANR	2533290	Statement	=	572:17:16972:16972	2533243	3	True				
ANR	2533291	Statement	sdb_fmt	572:19:16974:16980	2533243	4	True				
ANR	2533292	Statement	(	572:27:16982:16982	2533243	5	True				
ANR	2533293	Statement	"""var.0x%"""	572:28:16983:16991	2533243	6	True				
ANR	2533294	Statement	PFMT64x	572:37:16992:16998	2533243	7	True				
ANR	2533295	Statement	""".%d.%s"""	572:45:17000:17007	2533243	8	True				
ANR	2533296	Statement	","	572:53:17008:17008	2533243	9	True				
ANR	2533297	Statement	fcn	572:55:17010:17012	2533243	10	True				
ANR	2533298	Statement	->	572:58:17013:17014	2533243	11	True				
ANR	2533299	Statement	addr	572:60:17015:17018	2533243	12	True				
ANR	2533300	Statement	","	572:64:17019:17019	2533243	13	True				
ANR	2533301	Statement	1	572:66:17021:17021	2533243	14	True				
ANR	2533302	Statement	","	572:67:17022:17022	2533243	15	True				
ANR	2533303	Statement	varname	572:69:17024:17030	2533243	16	True				
ANR	2533304	Statement	)	572:76:17031:17031	2533243	17	True				
ANR	2533305	ExpressionStatement		572:77:17032:17032	2533243	18	True				
ANR	2533306	IdentifierDeclStatement	"char * name_value = sdb_get ( a -> sdb_fcns , name_key , 0 ) ;"	573:2:17036:17089	2533243	19	True				
ANR	2533307	IdentifierDecl	"* name_value = sdb_get ( a -> sdb_fcns , name_key , 0 )"		2533243	0					
ANR	2533308	IdentifierDeclType	char *		2533243	0					
ANR	2533309	Identifier	name_value		2533243	1					
ANR	2533310	AssignmentExpression	"* name_value = sdb_get ( a -> sdb_fcns , name_key , 0 )"		2533243	2		=			
ANR	2533311	Identifier	name_value		2533243	0					
ANR	2533312	CallExpression	"sdb_get ( a -> sdb_fcns , name_key , 0 )"		2533243	1					
ANR	2533313	Callee	sdb_get		2533243	0					
ANR	2533314	Identifier	sdb_get		2533243	0					
ANR	2533315	ArgumentList	a -> sdb_fcns		2533243	1					
ANR	2533316	Argument	a -> sdb_fcns		2533243	0					
ANR	2533317	PtrMemberAccess	a -> sdb_fcns		2533243	0					
ANR	2533318	Identifier	a		2533243	0					
ANR	2533319	Identifier	sdb_fcns		2533243	1					
ANR	2533320	Argument	name_key		2533243	1					
ANR	2533321	Identifier	name_key		2533243	0					
ANR	2533322	Argument	0		2533243	2					
ANR	2533323	PrimaryExpression	0		2533243	0					
ANR	2533324	IfStatement	if ( ! name_value )		2533243	20					
ANR	2533325	Condition	! name_value	574:6:17097:17107	2533243	0	True				
ANR	2533326	UnaryOperationExpression	! name_value		2533243	0					
ANR	2533327	UnaryOperator	!		2533243	0					
ANR	2533328	Identifier	name_value		2533243	1					
ANR	2533329	CompoundStatement		9:19:267:267	2533243	1					
ANR	2533330	BreakStatement	break ;	575:3:17115:17120	2533243	0	True				
ANR	2533331	IdentifierDeclStatement	"const char * comma = strchr ( name_value , ',' ) ;"	577:2:17128:17172	2533243	21	True				
ANR	2533332	IdentifierDecl	"* comma = strchr ( name_value , ',' )"		2533243	0					
ANR	2533333	IdentifierDeclType	const char *		2533243	0					
ANR	2533334	Identifier	comma		2533243	1					
ANR	2533335	AssignmentExpression	"* comma = strchr ( name_value , ',' )"		2533243	2		=			
ANR	2533336	Identifier	comma		2533243	0					
ANR	2533337	CallExpression	"strchr ( name_value , ',' )"		2533243	1					
ANR	2533338	Callee	strchr		2533243	0					
ANR	2533339	Identifier	strchr		2533243	0					
ANR	2533340	ArgumentList	name_value		2533243	1					
ANR	2533341	Argument	name_value		2533243	0					
ANR	2533342	Identifier	name_value		2533243	0					
ANR	2533343	Argument	"','"		2533243	1					
ANR	2533344	PrimaryExpression	"','"		2533243	0					
ANR	2533345	IfStatement	if ( comma && * comma )		2533243	22					
ANR	2533346	Condition	comma && * comma	578:6:17180:17194	2533243	0	True				
ANR	2533347	AndExpression	comma && * comma		2533243	0		&&			
ANR	2533348	Identifier	comma		2533243	0					
ANR	2533349	UnaryOperationExpression	* comma		2533243	1					
ANR	2533350	UnaryOperator	*		2533243	0					
ANR	2533351	Identifier	comma		2533243	1					
ANR	2533352	CompoundStatement		13:23:354:354	2533243	1					
ANR	2533353	ExpressionStatement	"v_delta = r_num_math ( NULL , comma + 1 )"	579:3:17202:17240	2533243	0	True				
ANR	2533354	AssignmentExpression	"v_delta = r_num_math ( NULL , comma + 1 )"		2533243	0		=			
ANR	2533355	Identifier	v_delta		2533243	0					
ANR	2533356	CallExpression	"r_num_math ( NULL , comma + 1 )"		2533243	1					
ANR	2533357	Callee	r_num_math		2533243	0					
ANR	2533358	Identifier	r_num_math		2533243	0					
ANR	2533359	ArgumentList	NULL		2533243	1					
ANR	2533360	Argument	NULL		2533243	0					
ANR	2533361	Identifier	NULL		2533243	0					
ANR	2533362	Argument	comma + 1		2533243	1					
ANR	2533363	AdditiveExpression	comma + 1		2533243	0		+			
ANR	2533364	Identifier	comma		2533243	0					
ANR	2533365	PrimaryExpression	1		2533243	1					
ANR	2533366	ExpressionStatement	v_kind = * name_value	580:3:17245:17265	2533243	1	True				
ANR	2533367	AssignmentExpression	v_kind = * name_value		2533243	0		=			
ANR	2533368	Identifier	v_kind		2533243	0					
ANR	2533369	UnaryOperationExpression	* name_value		2533243	1					
ANR	2533370	UnaryOperator	*		2533243	0					
ANR	2533371	Identifier	name_value		2533243	1					
ANR	2533372	IfStatement	if ( v_kind == type && R_ABS ( v_delta ) == idx )		2533243	23					
ANR	2533373	Condition	v_kind == type && R_ABS ( v_delta ) == idx	582:6:17277:17316	2533243	0	True				
ANR	2533374	AndExpression	v_kind == type && R_ABS ( v_delta ) == idx		2533243	0		&&			
ANR	2533375	EqualityExpression	v_kind == type		2533243	0		==			
ANR	2533376	Identifier	v_kind		2533243	0					
ANR	2533377	Identifier	type		2533243	1					
ANR	2533378	EqualityExpression	R_ABS ( v_delta ) == idx		2533243	1		==			
ANR	2533379	CallExpression	R_ABS ( v_delta )		2533243	0					
ANR	2533380	Callee	R_ABS		2533243	0					
ANR	2533381	Identifier	R_ABS		2533243	0					
ANR	2533382	ArgumentList	v_delta		2533243	1					
ANR	2533383	Argument	v_delta		2533243	0					
ANR	2533384	Identifier	v_delta		2533243	0					
ANR	2533385	Identifier	idx		2533243	1					
ANR	2533386	CompoundStatement		17:48:476:476	2533243	1					
ANR	2533387	ExpressionStatement	free ( name_value )	583:3:17324:17341	2533243	0	True				
ANR	2533388	CallExpression	free ( name_value )		2533243	0					
ANR	2533389	Callee	free		2533243	0					
ANR	2533390	Identifier	free		2533243	0					
ANR	2533391	ArgumentList	name_value		2533243	1					
ANR	2533392	Argument	name_value		2533243	0					
ANR	2533393	Identifier	name_value		2533243	0					
ANR	2533394	ReturnStatement	return varname ;	584:3:17346:17360	2533243	1	True				
ANR	2533395	Identifier	varname		2533243	0					
ANR	2533396	ExpressionStatement	free ( varname )	586:2:17368:17382	2533243	24	True				
ANR	2533397	CallExpression	free ( varname )		2533243	0					
ANR	2533398	Callee	free		2533243	0					
ANR	2533399	Identifier	free		2533243	0					
ANR	2533400	ArgumentList	varname		2533243	1					
ANR	2533401	Argument	varname		2533243	0					
ANR	2533402	Identifier	varname		2533243	0					
ANR	2533403	ExpressionStatement	free ( name_value )	587:2:17386:17403	2533243	25	True				
ANR	2533404	CallExpression	free ( name_value )		2533243	0					
ANR	2533405	Callee	free		2533243	0					
ANR	2533406	Identifier	free		2533243	0					
ANR	2533407	ArgumentList	name_value		2533243	1					
ANR	2533408	Argument	name_value		2533243	0					
ANR	2533409	Identifier	name_value		2533243	0					
ANR	2533410	ExpressionStatement	"varname = r_str_newf ( ""%s_%xh_%d"" , pfx , idx , i )"	588:2:17407:17454	2533243	26	True				
ANR	2533411	AssignmentExpression	"varname = r_str_newf ( ""%s_%xh_%d"" , pfx , idx , i )"		2533243	0		=			
ANR	2533412	Identifier	varname		2533243	0					
ANR	2533413	CallExpression	"r_str_newf ( ""%s_%xh_%d"" , pfx , idx , i )"		2533243	1					
ANR	2533414	Callee	r_str_newf		2533243	0					
ANR	2533415	Identifier	r_str_newf		2533243	0					
ANR	2533416	ArgumentList	"""%s_%xh_%d"""		2533243	1					
ANR	2533417	Argument	"""%s_%xh_%d"""		2533243	0					
ANR	2533418	PrimaryExpression	"""%s_%xh_%d"""		2533243	0					
ANR	2533419	Argument	pfx		2533243	1					
ANR	2533420	Identifier	pfx		2533243	0					
ANR	2533421	Argument	idx		2533243	2					
ANR	2533422	Identifier	idx		2533243	0					
ANR	2533423	Argument	i		2533243	3					
ANR	2533424	Identifier	i		2533243	0					
ANR	2533425	ExpressionStatement	i ++	589:2:17458:17461	2533243	27	True				
ANR	2533426	PostIncDecOperationExpression	i ++		2533243	0					
ANR	2533427	Identifier	i		2533243	0					
ANR	2533428	IncDec	++		2533243	1					
ANR	2533429	ReturnStatement	return varname ;	591:1:17467:17481	2533243	5	True				
ANR	2533430	Identifier	varname		2533243	0					
ANR	2533431	ReturnType	static char *		2533243	1					
ANR	2533432	Identifier	get_varname		2533243	2					
ANR	2533433	ParameterList	"RAnal * a , RAnalFunction * fcn , char type , const char * pfx , int idx"		2533243	3					
ANR	2533434	Parameter	RAnal * a	566:25:16775:16782	2533243	0	True				
ANR	2533435	ParameterType	RAnal *		2533243	0					
ANR	2533436	Identifier	a		2533243	1					
ANR	2533437	Parameter	RAnalFunction * fcn	566:35:16785:16802	2533243	1	True				
ANR	2533438	ParameterType	RAnalFunction *		2533243	0					
ANR	2533439	Identifier	fcn		2533243	1					
ANR	2533440	Parameter	char type	566:55:16805:16813	2533243	2	True				
ANR	2533441	ParameterType	char		2533243	0					
ANR	2533442	Identifier	type		2533243	1					
ANR	2533443	Parameter	const char * pfx	566:66:16816:16830	2533243	3	True				
ANR	2533444	ParameterType	const char *		2533243	0					
ANR	2533445	Identifier	pfx		2533243	1					
ANR	2533446	Parameter	int idx	566:83:16833:16839	2533243	4	True				
ANR	2533447	ParameterType	int		2533243	0					
ANR	2533448	Identifier	idx		2533243	1					
ANR	2533449	CFGEntryNode	ENTRY		2533243		True				
ANR	2533450	CFGExitNode	EXIT		2533243		True				
ANR	2533451	Symbol	a -> sdb_fcns		2533243						
ANR	2533452	Symbol	a		2533243						
ANR	2533453	Symbol	pfx		2533243						
ANR	2533454	Symbol	v_delta		2533243						
ANR	2533455	Symbol	NULL		2533243						
ANR	2533456	Symbol	* name_value		2533243						
ANR	2533457	Symbol	name_value		2533243						
ANR	2533458	Symbol	i		2533243						
ANR	2533459	Symbol	strchr		2533243						
ANR	2533460	Symbol	sdb_get		2533243						
ANR	2533461	Symbol	R_ABS		2533243						
ANR	2533462	Symbol	r_str_newf		2533243						
ANR	2533463	Symbol	* a		2533243						
ANR	2533464	Symbol	type		2533243						
ANR	2533465	Symbol	varname		2533243						
ANR	2533466	Symbol	r_num_math		2533243						
ANR	2533467	Symbol	fcn		2533243						
ANR	2533468	Symbol	name_key		2533243						
ANR	2533469	Symbol	comma		2533243						
ANR	2533470	Symbol	v_kind		2533243						
ANR	2533471	Symbol	* comma		2533243						
ANR	2533472	Symbol	idx		2533243						
ANR	2533473	Function	get_regname	594:0:17486:17845							
ANR	2533474	FunctionDef	"get_regname (RAnal * anal , RAnalValue * value)"		2533473	0					
ANR	2533475	CompoundStatement		594:63:17549:17845	2533473	0					
ANR	2533476	IdentifierDeclStatement	const char * name = NULL ;	595:1:17552:17575	2533473	0	True				
ANR	2533477	IdentifierDecl	* name = NULL		2533473	0					
ANR	2533478	IdentifierDeclType	const char *		2533473	0					
ANR	2533479	Identifier	name		2533473	1					
ANR	2533480	AssignmentExpression	* name = NULL		2533473	2		=			
ANR	2533481	Identifier	NULL		2533473	0					
ANR	2533482	Identifier	NULL		2533473	1					
ANR	2533483	IfStatement	if ( value && value -> reg && value -> reg -> name )		2533473	1					
ANR	2533484	Condition	value && value -> reg && value -> reg -> name	596:5:17582:17620	2533473	0	True				
ANR	2533485	AndExpression	value && value -> reg && value -> reg -> name		2533473	0		&&			
ANR	2533486	Identifier	value		2533473	0					
ANR	2533487	AndExpression	value -> reg && value -> reg -> name		2533473	1		&&			
ANR	2533488	PtrMemberAccess	value -> reg		2533473	0					
ANR	2533489	Identifier	value		2533473	0					
ANR	2533490	Identifier	reg		2533473	1					
ANR	2533491	PtrMemberAccess	value -> reg -> name		2533473	1					
ANR	2533492	PtrMemberAccess	value -> reg		2533473	0					
ANR	2533493	Identifier	value		2533473	0					
ANR	2533494	Identifier	reg		2533473	1					
ANR	2533495	Identifier	name		2533473	1					
ANR	2533496	CompoundStatement		5:2:104:162	2533473	1					
ANR	2533497	ExpressionStatement	name = value -> reg -> name	597:2:17627:17650	2533473	0	True				
ANR	2533498	AssignmentExpression	name = value -> reg -> name		2533473	0		=			
ANR	2533499	Identifier	name		2533473	0					
ANR	2533500	PtrMemberAccess	value -> reg -> name		2533473	1					
ANR	2533501	PtrMemberAccess	value -> reg		2533473	0					
ANR	2533502	Identifier	value		2533473	0					
ANR	2533503	Identifier	reg		2533473	1					
ANR	2533504	Identifier	name		2533473	1					
ANR	2533505	IdentifierDeclStatement	"RRegItem * ri = r_reg_get ( anal -> reg , value -> reg -> name , - 1 ) ;"	598:2:17654:17712	2533473	1	True				
ANR	2533506	IdentifierDecl	"* ri = r_reg_get ( anal -> reg , value -> reg -> name , - 1 )"		2533473	0					
ANR	2533507	IdentifierDeclType	RRegItem *		2533473	0					
ANR	2533508	Identifier	ri		2533473	1					
ANR	2533509	AssignmentExpression	"* ri = r_reg_get ( anal -> reg , value -> reg -> name , - 1 )"		2533473	2		=			
ANR	2533510	Identifier	ri		2533473	0					
ANR	2533511	CallExpression	"r_reg_get ( anal -> reg , value -> reg -> name , - 1 )"		2533473	1					
ANR	2533512	Callee	r_reg_get		2533473	0					
ANR	2533513	Identifier	r_reg_get		2533473	0					
ANR	2533514	ArgumentList	anal -> reg		2533473	1					
ANR	2533515	Argument	anal -> reg		2533473	0					
ANR	2533516	PtrMemberAccess	anal -> reg		2533473	0					
ANR	2533517	Identifier	anal		2533473	0					
ANR	2533518	Identifier	reg		2533473	1					
ANR	2533519	Argument	value -> reg -> name		2533473	1					
ANR	2533520	PtrMemberAccess	value -> reg -> name		2533473	0					
ANR	2533521	PtrMemberAccess	value -> reg		2533473	0					
ANR	2533522	Identifier	value		2533473	0					
ANR	2533523	Identifier	reg		2533473	1					
ANR	2533524	Identifier	name		2533473	1					
ANR	2533525	Argument	- 1		2533473	2					
ANR	2533526	UnaryOperationExpression	- 1		2533473	0					
ANR	2533527	UnaryOperator	-		2533473	0					
ANR	2533528	PrimaryExpression	1		2533473	1					
ANR	2533529	IfStatement	if ( ri && ( ri -> size == 32 ) && ( anal -> bits == 64 ) )		2533473	2					
ANR	2533530	Condition	ri && ( ri -> size == 32 ) && ( anal -> bits == 64 )	599:6:17720:17763	2533473	0	True				
ANR	2533531	AndExpression	ri && ( ri -> size == 32 ) && ( anal -> bits == 64 )		2533473	0		&&			
ANR	2533532	Identifier	ri		2533473	0					
ANR	2533533	AndExpression	( ri -> size == 32 ) && ( anal -> bits == 64 )		2533473	1		&&			
ANR	2533534	EqualityExpression	ri -> size == 32		2533473	0		==			
ANR	2533535	PtrMemberAccess	ri -> size		2533473	0					
ANR	2533536	Identifier	ri		2533473	0					
ANR	2533537	Identifier	size		2533473	1					
ANR	2533538	PrimaryExpression	32		2533473	1					
ANR	2533539	EqualityExpression	anal -> bits == 64		2533473	1		==			
ANR	2533540	PtrMemberAccess	anal -> bits		2533473	0					
ANR	2533541	Identifier	anal		2533473	0					
ANR	2533542	Identifier	bits		2533473	1					
ANR	2533543	PrimaryExpression	64		2533473	1					
ANR	2533544	CompoundStatement		6:52:216:216	2533473	1					
ANR	2533545	ExpressionStatement	"name = r_reg_32_to_64 ( anal -> reg , value -> reg -> name )"	600:3:17771:17822	2533473	0	True				
ANR	2533546	AssignmentExpression	"name = r_reg_32_to_64 ( anal -> reg , value -> reg -> name )"		2533473	0		=			
ANR	2533547	Identifier	name		2533473	0					
ANR	2533548	CallExpression	"r_reg_32_to_64 ( anal -> reg , value -> reg -> name )"		2533473	1					
ANR	2533549	Callee	r_reg_32_to_64		2533473	0					
ANR	2533550	Identifier	r_reg_32_to_64		2533473	0					
ANR	2533551	ArgumentList	anal -> reg		2533473	1					
ANR	2533552	Argument	anal -> reg		2533473	0					
ANR	2533553	PtrMemberAccess	anal -> reg		2533473	0					
ANR	2533554	Identifier	anal		2533473	0					
ANR	2533555	Identifier	reg		2533473	1					
ANR	2533556	Argument	value -> reg -> name		2533473	1					
ANR	2533557	PtrMemberAccess	value -> reg -> name		2533473	0					
ANR	2533558	PtrMemberAccess	value -> reg		2533473	0					
ANR	2533559	Identifier	value		2533473	0					
ANR	2533560	Identifier	reg		2533473	1					
ANR	2533561	Identifier	name		2533473	1					
ANR	2533562	ReturnStatement	return name ;	603:1:17832:17843	2533473	2	True				
ANR	2533563	Identifier	name		2533473	0					
ANR	2533564	ReturnType	static const char *		2533473	1					
ANR	2533565	Identifier	get_regname		2533473	2					
ANR	2533566	ParameterList	"RAnal * anal , RAnalValue * value"		2533473	3					
ANR	2533567	Parameter	RAnal * anal	594:31:17517:17527	2533473	0	True				
ANR	2533568	ParameterType	RAnal *		2533473	0					
ANR	2533569	Identifier	anal		2533473	1					
ANR	2533570	Parameter	RAnalValue * value	594:44:17530:17546	2533473	1	True				
ANR	2533571	ParameterType	RAnalValue *		2533473	0					
ANR	2533572	Identifier	value		2533473	1					
ANR	2533573	CFGEntryNode	ENTRY		2533473		True				
ANR	2533574	CFGExitNode	EXIT		2533473		True				
ANR	2533575	Symbol	NULL		2533473						
ANR	2533576	Symbol	anal -> reg		2533473						
ANR	2533577	Symbol	* * value		2533473						
ANR	2533578	Symbol	r_reg_32_to_64		2533473						
ANR	2533579	Symbol	ri -> size		2533473						
ANR	2533580	Symbol	anal -> bits		2533473						
ANR	2533581	Symbol	* anal		2533473						
ANR	2533582	Symbol	anal		2533473						
ANR	2533583	Symbol	* value		2533473						
ANR	2533584	Symbol	ri		2533473						
ANR	2533585	Symbol	name		2533473						
ANR	2533586	Symbol	* value -> reg		2533473						
ANR	2533587	Symbol	value -> reg -> name		2533473						
ANR	2533588	Symbol	value -> reg		2533473						
ANR	2533589	Symbol	value		2533473						
ANR	2533590	Symbol	* ri		2533473						
ANR	2533591	Symbol	r_reg_get		2533473						
ANR	2533592	Function	extract_arg	606:0:17848:19514							
ANR	2533593	FunctionDef	"extract_arg (RAnal * anal , RAnalFunction * fcn , RAnalOp * op , const char * reg , const char * sign , char type)"		2533592	0					
ANR	2533594	CompoundStatement		606:116:17964:19514	2533592	0					
ANR	2533595	IdentifierDeclStatement	st64 ptr ;	607:1:17967:17975	2533592	0	True				
ANR	2533596	IdentifierDecl	ptr		2533592	0					
ANR	2533597	IdentifierDeclType	st64		2533592	0					
ANR	2533598	Identifier	ptr		2533592	1					
ANR	2533599	IdentifierDeclStatement	char * addr ;	608:1:17978:17988	2533592	1	True				
ANR	2533600	IdentifierDecl	* addr		2533592	0					
ANR	2533601	IdentifierDeclType	char *		2533592	0					
ANR	2533602	Identifier	addr		2533592	1					
ANR	2533603	ExpressionStatement	r_return_if_fail ( anal && fcn && op )	610:1:17992:18028	2533592	2	True				
ANR	2533604	CallExpression	r_return_if_fail ( anal && fcn && op )		2533592	0					
ANR	2533605	Callee	r_return_if_fail		2533592	0					
ANR	2533606	Identifier	r_return_if_fail		2533592	0					
ANR	2533607	ArgumentList	anal && fcn && op		2533592	1					
ANR	2533608	Argument	anal && fcn && op		2533592	0					
ANR	2533609	AndExpression	anal && fcn && op		2533592	0		&&			
ANR	2533610	Identifier	anal		2533592	0					
ANR	2533611	AndExpression	fcn && op		2533592	1		&&			
ANR	2533612	Identifier	fcn		2533592	0					
ANR	2533613	Identifier	op		2533592	1					
ANR	2533614	IdentifierDeclStatement	const char * op_esil = r_strbuf_get ( & op -> esil ) ;	612:1:18032:18078	2533592	3	True				
ANR	2533615	IdentifierDecl	* op_esil = r_strbuf_get ( & op -> esil )		2533592	0					
ANR	2533616	IdentifierDeclType	const char *		2533592	0					
ANR	2533617	Identifier	op_esil		2533592	1					
ANR	2533618	AssignmentExpression	* op_esil = r_strbuf_get ( & op -> esil )		2533592	2		=			
ANR	2533619	Identifier	op_esil		2533592	0					
ANR	2533620	CallExpression	r_strbuf_get ( & op -> esil )		2533592	1					
ANR	2533621	Callee	r_strbuf_get		2533592	0					
ANR	2533622	Identifier	r_strbuf_get		2533592	0					
ANR	2533623	ArgumentList	& op -> esil		2533592	1					
ANR	2533624	Argument	& op -> esil		2533592	0					
ANR	2533625	UnaryOperationExpression	& op -> esil		2533592	0					
ANR	2533626	UnaryOperator	&		2533592	0					
ANR	2533627	PtrMemberAccess	op -> esil		2533592	1					
ANR	2533628	Identifier	op		2533592	0					
ANR	2533629	Identifier	esil		2533592	1					
ANR	2533630	IfStatement	if ( ! op_esil )		2533592	4					
ANR	2533631	Condition	! op_esil	613:5:18085:18092	2533592	0	True				
ANR	2533632	UnaryOperationExpression	! op_esil		2533592	0					
ANR	2533633	UnaryOperator	!		2533592	0					
ANR	2533634	Identifier	op_esil		2533592	1					
ANR	2533635	CompoundStatement		8:15:130:130	2533592	1					
ANR	2533636	ReturnStatement	return ;	614:2:18099:18105	2533592	0	True				
ANR	2533637	IdentifierDeclStatement	char * esil_buf = strdup ( op_esil ) ;	616:1:18111:18144	2533592	5	True				
ANR	2533638	IdentifierDecl	* esil_buf = strdup ( op_esil )		2533592	0					
ANR	2533639	IdentifierDeclType	char *		2533592	0					
ANR	2533640	Identifier	esil_buf		2533592	1					
ANR	2533641	AssignmentExpression	* esil_buf = strdup ( op_esil )		2533592	2		=			
ANR	2533642	Identifier	esil_buf		2533592	0					
ANR	2533643	CallExpression	strdup ( op_esil )		2533592	1					
ANR	2533644	Callee	strdup		2533592	0					
ANR	2533645	Identifier	strdup		2533592	0					
ANR	2533646	ArgumentList	op_esil		2533592	1					
ANR	2533647	Argument	op_esil		2533592	0					
ANR	2533648	Identifier	op_esil		2533592	0					
ANR	2533649	IfStatement	if ( ! esil_buf )		2533592	6					
ANR	2533650	Condition	! esil_buf	617:5:18151:18159	2533592	0	True				
ANR	2533651	UnaryOperationExpression	! esil_buf		2533592	0					
ANR	2533652	UnaryOperator	!		2533592	0					
ANR	2533653	Identifier	esil_buf		2533592	1					
ANR	2533654	CompoundStatement		12:16:197:197	2533592	1					
ANR	2533655	ReturnStatement	return ;	618:2:18166:18172	2533592	0	True				
ANR	2533656	IdentifierDeclStatement	"char * ptr_end = strstr ( esil_buf , sdb_fmt ( "",%s,%s"" , reg , sign ) ) ;"	620:1:18178:18242	2533592	7	True				
ANR	2533657	IdentifierDecl	"* ptr_end = strstr ( esil_buf , sdb_fmt ( "",%s,%s"" , reg , sign ) )"		2533592	0					
ANR	2533658	IdentifierDeclType	char *		2533592	0					
ANR	2533659	Identifier	ptr_end		2533592	1					
ANR	2533660	AssignmentExpression	"* ptr_end = strstr ( esil_buf , sdb_fmt ( "",%s,%s"" , reg , sign ) )"		2533592	2		=			
ANR	2533661	Identifier	ptr_end		2533592	0					
ANR	2533662	CallExpression	"strstr ( esil_buf , sdb_fmt ( "",%s,%s"" , reg , sign ) )"		2533592	1					
ANR	2533663	Callee	strstr		2533592	0					
ANR	2533664	Identifier	strstr		2533592	0					
ANR	2533665	ArgumentList	esil_buf		2533592	1					
ANR	2533666	Argument	esil_buf		2533592	0					
ANR	2533667	Identifier	esil_buf		2533592	0					
ANR	2533668	Argument	"sdb_fmt ( "",%s,%s"" , reg , sign )"		2533592	1					
ANR	2533669	CallExpression	"sdb_fmt ( "",%s,%s"" , reg , sign )"		2533592	0					
ANR	2533670	Callee	sdb_fmt		2533592	0					
ANR	2533671	Identifier	sdb_fmt		2533592	0					
ANR	2533672	ArgumentList	""",%s,%s"""		2533592	1					
ANR	2533673	Argument	""",%s,%s"""		2533592	0					
ANR	2533674	PrimaryExpression	""",%s,%s"""		2533592	0					
ANR	2533675	Argument	reg		2533592	1					
ANR	2533676	Identifier	reg		2533592	0					
ANR	2533677	Argument	sign		2533592	2					
ANR	2533678	Identifier	sign		2533592	0					
ANR	2533679	IfStatement	if ( ! ptr_end )		2533592	8					
ANR	2533680	Condition	! ptr_end	621:5:18249:18256	2533592	0	True				
ANR	2533681	UnaryOperationExpression	! ptr_end		2533592	0					
ANR	2533682	UnaryOperator	!		2533592	0					
ANR	2533683	Identifier	ptr_end		2533592	1					
ANR	2533684	CompoundStatement		16:15:294:294	2533592	1					
ANR	2533685	ExpressionStatement	free ( esil_buf )	622:2:18263:18278	2533592	0	True				
ANR	2533686	CallExpression	free ( esil_buf )		2533592	0					
ANR	2533687	Callee	free		2533592	0					
ANR	2533688	Identifier	free		2533592	0					
ANR	2533689	ArgumentList	esil_buf		2533592	1					
ANR	2533690	Argument	esil_buf		2533592	0					
ANR	2533691	Identifier	esil_buf		2533592	0					
ANR	2533692	ReturnStatement	return ;	623:2:18282:18288	2533592	1	True				
ANR	2533693	ExpressionStatement	* ptr_end = 0	625:1:18294:18306	2533592	9	True				
ANR	2533694	AssignmentExpression	* ptr_end = 0		2533592	0		=			
ANR	2533695	UnaryOperationExpression	* ptr_end		2533592	0					
ANR	2533696	UnaryOperator	*		2533592	0					
ANR	2533697	Identifier	ptr_end		2533592	1					
ANR	2533698	PrimaryExpression	0		2533592	1					
ANR	2533699	ExpressionStatement	addr = ptr_end	626:1:18309:18323	2533592	10	True				
ANR	2533700	AssignmentExpression	addr = ptr_end		2533592	0		=			
ANR	2533701	Identifier	addr		2533592	0					
ANR	2533702	Identifier	ptr_end		2533592	1					
ANR	2533703	WhileStatement	"while ( ( addr [ 0 ] != '0' || addr [ 1 ] != 'x' ) && addr >= esil_buf + 1 && * addr != ',' )"		2533592	11					
ANR	2533704	Condition	"( addr [ 0 ] != '0' || addr [ 1 ] != 'x' ) && addr >= esil_buf + 1 && * addr != ','"	627:8:18333:18406	2533592	0	True				
ANR	2533705	AndExpression	"( addr [ 0 ] != '0' || addr [ 1 ] != 'x' ) && addr >= esil_buf + 1 && * addr != ','"		2533592	0		&&			
ANR	2533706	OrExpression	addr [ 0 ] != '0' || addr [ 1 ] != 'x'		2533592	0		||			
ANR	2533707	EqualityExpression	addr [ 0 ] != '0'		2533592	0		!=			
ANR	2533708	ArrayIndexing	addr [ 0 ]		2533592	0					
ANR	2533709	Identifier	addr		2533592	0					
ANR	2533710	PrimaryExpression	0		2533592	1					
ANR	2533711	PrimaryExpression	'0'		2533592	1					
ANR	2533712	EqualityExpression	addr [ 1 ] != 'x'		2533592	1		!=			
ANR	2533713	ArrayIndexing	addr [ 1 ]		2533592	0					
ANR	2533714	Identifier	addr		2533592	0					
ANR	2533715	PrimaryExpression	1		2533592	1					
ANR	2533716	PrimaryExpression	'x'		2533592	1					
ANR	2533717	AndExpression	"addr >= esil_buf + 1 && * addr != ','"		2533592	1		&&			
ANR	2533718	RelationalExpression	addr >= esil_buf + 1		2533592	0		>=			
ANR	2533719	Identifier	addr		2533592	0					
ANR	2533720	AdditiveExpression	esil_buf + 1		2533592	1		+			
ANR	2533721	Identifier	esil_buf		2533592	0					
ANR	2533722	PrimaryExpression	1		2533592	1					
ANR	2533723	EqualityExpression	"* addr != ','"		2533592	1		!=			
ANR	2533724	UnaryOperationExpression	* addr		2533592	0					
ANR	2533725	UnaryOperator	*		2533592	0					
ANR	2533726	Identifier	addr		2533592	1					
ANR	2533727	PrimaryExpression	"','"		2533592	1					
ANR	2533728	CompoundStatement		22:84:444:444	2533592	1					
ANR	2533729	ExpressionStatement	addr --	628:2:18413:18419	2533592	0	True				
ANR	2533730	PostIncDecOperationExpression	addr --		2533592	0					
ANR	2533731	Identifier	addr		2533592	0					
ANR	2533732	IncDec	--		2533592	1					
ANR	2533733	IfStatement	"if ( strncmp ( addr , ""0x"" , 2 ) )"		2533592	12					
ANR	2533734	Condition	"strncmp ( addr , ""0x"" , 2 )"	630:5:18429:18451	2533592	0	True				
ANR	2533735	CallExpression	"strncmp ( addr , ""0x"" , 2 )"		2533592	0					
ANR	2533736	Callee	strncmp		2533592	0					
ANR	2533737	Identifier	strncmp		2533592	0					
ANR	2533738	ArgumentList	addr		2533592	1					
ANR	2533739	Argument	addr		2533592	0					
ANR	2533740	Identifier	addr		2533592	0					
ANR	2533741	Argument	"""0x"""		2533592	1					
ANR	2533742	PrimaryExpression	"""0x"""		2533592	0					
ANR	2533743	Argument	2		2533592	2					
ANR	2533744	PrimaryExpression	2		2533592	0					
ANR	2533745	CompoundStatement		25:30:489:489	2533592	1					
ANR	2533746	IfStatement	if ( ( op -> stackop == R_ANAL_STACK_SET ) || ( op -> stackop == R_ANAL_STACK_GET ) )		2533592	0					
ANR	2533747	Condition	( op -> stackop == R_ANAL_STACK_SET ) || ( op -> stackop == R_ANAL_STACK_GET )	632:6:18514:18583	2533592	0	True				
ANR	2533748	OrExpression	( op -> stackop == R_ANAL_STACK_SET ) || ( op -> stackop == R_ANAL_STACK_GET )		2533592	0		||			
ANR	2533749	EqualityExpression	op -> stackop == R_ANAL_STACK_SET		2533592	0		==			
ANR	2533750	PtrMemberAccess	op -> stackop		2533592	0					
ANR	2533751	Identifier	op		2533592	0					
ANR	2533752	Identifier	stackop		2533592	1					
ANR	2533753	Identifier	R_ANAL_STACK_SET		2533592	1					
ANR	2533754	EqualityExpression	op -> stackop == R_ANAL_STACK_GET		2533592	1		==			
ANR	2533755	PtrMemberAccess	op -> stackop		2533592	0					
ANR	2533756	Identifier	op		2533592	0					
ANR	2533757	Identifier	stackop		2533592	1					
ANR	2533758	Identifier	R_ANAL_STACK_GET		2533592	1					
ANR	2533759	CompoundStatement		27:78:621:621	2533592	1					
ANR	2533760	ExpressionStatement	ptr = R_ABS ( op -> ptr )	633:3:18591:18612	2533592	0	True				
ANR	2533761	AssignmentExpression	ptr = R_ABS ( op -> ptr )		2533592	0		=			
ANR	2533762	Identifier	ptr		2533592	0					
ANR	2533763	CallExpression	R_ABS ( op -> ptr )		2533592	1					
ANR	2533764	Callee	R_ABS		2533592	0					
ANR	2533765	Identifier	R_ABS		2533592	0					
ANR	2533766	ArgumentList	op -> ptr		2533592	1					
ANR	2533767	Argument	op -> ptr		2533592	0					
ANR	2533768	PtrMemberAccess	op -> ptr		2533592	0					
ANR	2533769	Identifier	op		2533592	0					
ANR	2533770	Identifier	ptr		2533592	1					
ANR	2533771	IfStatement	if ( ptr % 4 )		2533592	1					
ANR	2533772	Condition	ptr % 4	634:7:18621:18625	2533592	0	True				
ANR	2533773	MultiplicativeExpression	ptr % 4		2533592	0		%			
ANR	2533774	Identifier	ptr		2533592	0					
ANR	2533775	PrimaryExpression	4		2533592	1					
ANR	2533776	CompoundStatement		29:14:663:663	2533592	1					
ANR	2533777	GotoStatement	goto beach ;	635:4:18634:18644	2533592	0	True				
ANR	2533778	Identifier	beach		2533592	0					
ANR	2533779	ElseStatement	else		2533592	0					
ANR	2533780	CompoundStatement		32:9:695:695	2533592	0					
ANR	2533781	GotoStatement	goto beach ;	638:3:18665:18675	2533592	0	True				
ANR	2533782	Identifier	beach		2533592	0					
ANR	2533783	ElseStatement	else		2533592	0					
ANR	2533784	CompoundStatement		35:8:724:724	2533592	0					
ANR	2533785	ExpressionStatement	"ptr = ( st64 ) r_num_get ( NULL , addr )"	641:2:18693:18728	2533592	0	True				
ANR	2533786	AssignmentExpression	"ptr = ( st64 ) r_num_get ( NULL , addr )"		2533592	0		=			
ANR	2533787	Identifier	ptr		2533592	0					
ANR	2533788	CastExpression	"( st64 ) r_num_get ( NULL , addr )"		2533592	1					
ANR	2533789	CastTarget	st64		2533592	0					
ANR	2533790	CallExpression	"r_num_get ( NULL , addr )"		2533592	1					
ANR	2533791	Callee	r_num_get		2533592	0					
ANR	2533792	Identifier	r_num_get		2533592	0					
ANR	2533793	ArgumentList	NULL		2533592	1					
ANR	2533794	Argument	NULL		2533592	0					
ANR	2533795	Identifier	NULL		2533592	0					
ANR	2533796	Argument	addr		2533592	1					
ANR	2533797	Identifier	addr		2533592	0					
ANR	2533798	IdentifierDeclStatement	int rw = ( op -> direction == R_ANAL_OP_DIR_WRITE ) ? 1 : 0 ;	643:1:18734:18789	2533592	13	True				
ANR	2533799	IdentifierDecl	rw = ( op -> direction == R_ANAL_OP_DIR_WRITE ) ? 1 : 0		2533592	0					
ANR	2533800	IdentifierDeclType	int		2533592	0					
ANR	2533801	Identifier	rw		2533592	1					
ANR	2533802	AssignmentExpression	rw = ( op -> direction == R_ANAL_OP_DIR_WRITE ) ? 1 : 0		2533592	2		=			
ANR	2533803	Identifier	rw		2533592	0					
ANR	2533804	ConditionalExpression	( op -> direction == R_ANAL_OP_DIR_WRITE ) ? 1 : 0		2533592	1					
ANR	2533805	Condition	op -> direction == R_ANAL_OP_DIR_WRITE		2533592	0					
ANR	2533806	EqualityExpression	op -> direction == R_ANAL_OP_DIR_WRITE		2533592	0		==			
ANR	2533807	PtrMemberAccess	op -> direction		2533592	0					
ANR	2533808	Identifier	op		2533592	0					
ANR	2533809	Identifier	direction		2533592	1					
ANR	2533810	Identifier	R_ANAL_OP_DIR_WRITE		2533592	1					
ANR	2533811	PrimaryExpression	1		2533592	1					
ANR	2533812	PrimaryExpression	0		2533592	2					
ANR	2533813	IfStatement	if ( * sign == '+' )		2533592	14					
ANR	2533814	Condition	* sign == '+'	644:5:18796:18807	2533592	0	True				
ANR	2533815	EqualityExpression	* sign == '+'		2533592	0		==			
ANR	2533816	UnaryOperationExpression	* sign		2533592	0					
ANR	2533817	UnaryOperator	*		2533592	0					
ANR	2533818	Identifier	sign		2533592	1					
ANR	2533819	PrimaryExpression	'+'		2533592	1					
ANR	2533820	CompoundStatement		42:2:981:1044	2533592	1					
ANR	2533821	IdentifierDeclStatement	const bool isarg = fcn -> bp_frame && ( ( ptr >= fcn -> maxstack ) || ( type != 's' ) ) ;	645:2:18814:18891	2533592	0	True				
ANR	2533822	IdentifierDecl	isarg = fcn -> bp_frame && ( ( ptr >= fcn -> maxstack ) || ( type != 's' ) )		2533592	0					
ANR	2533823	IdentifierDeclType	const bool		2533592	0					
ANR	2533824	Identifier	isarg		2533592	1					
ANR	2533825	AssignmentExpression	isarg = fcn -> bp_frame && ( ( ptr >= fcn -> maxstack ) || ( type != 's' ) )		2533592	2		=			
ANR	2533826	Identifier	isarg		2533592	0					
ANR	2533827	AndExpression	fcn -> bp_frame && ( ( ptr >= fcn -> maxstack ) || ( type != 's' ) )		2533592	1		&&			
ANR	2533828	PtrMemberAccess	fcn -> bp_frame		2533592	0					
ANR	2533829	Identifier	fcn		2533592	0					
ANR	2533830	Identifier	bp_frame		2533592	1					
ANR	2533831	OrExpression	( ptr >= fcn -> maxstack ) || ( type != 's' )		2533592	1		||			
ANR	2533832	RelationalExpression	ptr >= fcn -> maxstack		2533592	0		>=			
ANR	2533833	Identifier	ptr		2533592	0					
ANR	2533834	PtrMemberAccess	fcn -> maxstack		2533592	1					
ANR	2533835	Identifier	fcn		2533592	0					
ANR	2533836	Identifier	maxstack		2533592	1					
ANR	2533837	EqualityExpression	type != 's'		2533592	1		!=			
ANR	2533838	Identifier	type		2533592	0					
ANR	2533839	PrimaryExpression	's'		2533592	1					
ANR	2533840	IdentifierDeclStatement	const char * pfx = isarg ? ARGPREFIX : VARPREFIX ;	646:2:18895:18942	2533592	1	True				
ANR	2533841	IdentifierDecl	* pfx = isarg ? ARGPREFIX : VARPREFIX		2533592	0					
ANR	2533842	IdentifierDeclType	const char *		2533592	0					
ANR	2533843	Identifier	pfx		2533592	1					
ANR	2533844	AssignmentExpression	* pfx = isarg ? ARGPREFIX : VARPREFIX		2533592	2		=			
ANR	2533845	Identifier	pfx		2533592	0					
ANR	2533846	ConditionalExpression	isarg ? ARGPREFIX : VARPREFIX		2533592	1					
ANR	2533847	Condition	isarg		2533592	0					
ANR	2533848	Identifier	isarg		2533592	0					
ANR	2533849	Identifier	ARGPREFIX		2533592	1					
ANR	2533850	Identifier	VARPREFIX		2533592	2					
ANR	2533851	IdentifierDeclStatement	"char * varname = get_varname ( anal , fcn , type , pfx , R_ABS ( ptr ) ) ;"	647:2:18946:19009	2533592	2	True				
ANR	2533852	IdentifierDecl	"* varname = get_varname ( anal , fcn , type , pfx , R_ABS ( ptr ) )"		2533592	0					
ANR	2533853	IdentifierDeclType	char *		2533592	0					
ANR	2533854	Identifier	varname		2533592	1					
ANR	2533855	AssignmentExpression	"* varname = get_varname ( anal , fcn , type , pfx , R_ABS ( ptr ) )"		2533592	2		=			
ANR	2533856	Identifier	varname		2533592	0					
ANR	2533857	CallExpression	"get_varname ( anal , fcn , type , pfx , R_ABS ( ptr ) )"		2533592	1					
ANR	2533858	Callee	get_varname		2533592	0					
ANR	2533859	Identifier	get_varname		2533592	0					
ANR	2533860	ArgumentList	anal		2533592	1					
ANR	2533861	Argument	anal		2533592	0					
ANR	2533862	Identifier	anal		2533592	0					
ANR	2533863	Argument	fcn		2533592	1					
ANR	2533864	Identifier	fcn		2533592	0					
ANR	2533865	Argument	type		2533592	2					
ANR	2533866	Identifier	type		2533592	0					
ANR	2533867	Argument	pfx		2533592	3					
ANR	2533868	Identifier	pfx		2533592	0					
ANR	2533869	Argument	R_ABS ( ptr )		2533592	4					
ANR	2533870	CallExpression	R_ABS ( ptr )		2533592	0					
ANR	2533871	Callee	R_ABS		2533592	0					
ANR	2533872	Identifier	R_ABS		2533592	0					
ANR	2533873	ArgumentList	ptr		2533592	1					
ANR	2533874	Argument	ptr		2533592	0					
ANR	2533875	Identifier	ptr		2533592	0					
ANR	2533876	IfStatement	if ( varname )		2533592	3					
ANR	2533877	Condition	varname	648:6:19017:19023	2533592	0	True				
ANR	2533878	Identifier	varname		2533592	0					
ANR	2533879	CompoundStatement		43:15:1061:1061	2533592	1					
ANR	2533880	ExpressionStatement	"r_anal_var_add ( anal , fcn -> addr , 1 , ptr , type , NULL , anal -> bits / 8 , isarg , varname )"	649:3:19031:19115	2533592	0	True				
ANR	2533881	CallExpression	"r_anal_var_add ( anal , fcn -> addr , 1 , ptr , type , NULL , anal -> bits / 8 , isarg , varname )"		2533592	0					
ANR	2533882	Callee	r_anal_var_add		2533592	0					
ANR	2533883	Identifier	r_anal_var_add		2533592	0					
ANR	2533884	ArgumentList	anal		2533592	1					
ANR	2533885	Argument	anal		2533592	0					
ANR	2533886	Identifier	anal		2533592	0					
ANR	2533887	Argument	fcn -> addr		2533592	1					
ANR	2533888	PtrMemberAccess	fcn -> addr		2533592	0					
ANR	2533889	Identifier	fcn		2533592	0					
ANR	2533890	Identifier	addr		2533592	1					
ANR	2533891	Argument	1		2533592	2					
ANR	2533892	PrimaryExpression	1		2533592	0					
ANR	2533893	Argument	ptr		2533592	3					
ANR	2533894	Identifier	ptr		2533592	0					
ANR	2533895	Argument	type		2533592	4					
ANR	2533896	Identifier	type		2533592	0					
ANR	2533897	Argument	NULL		2533592	5					
ANR	2533898	Identifier	NULL		2533592	0					
ANR	2533899	Argument	anal -> bits / 8		2533592	6					
ANR	2533900	MultiplicativeExpression	anal -> bits / 8		2533592	0		/			
ANR	2533901	PtrMemberAccess	anal -> bits		2533592	0					
ANR	2533902	Identifier	anal		2533592	0					
ANR	2533903	Identifier	bits		2533592	1					
ANR	2533904	PrimaryExpression	8		2533592	1					
ANR	2533905	Argument	isarg		2533592	7					
ANR	2533906	Identifier	isarg		2533592	0					
ANR	2533907	Argument	varname		2533592	8					
ANR	2533908	Identifier	varname		2533592	0					
ANR	2533909	ExpressionStatement	"r_anal_var_access ( anal , fcn -> addr , type , 1 , ptr , rw , op -> addr )"	650:3:19120:19183	2533592	1	True				
ANR	2533910	CallExpression	"r_anal_var_access ( anal , fcn -> addr , type , 1 , ptr , rw , op -> addr )"		2533592	0					
ANR	2533911	Callee	r_anal_var_access		2533592	0					
ANR	2533912	Identifier	r_anal_var_access		2533592	0					
ANR	2533913	ArgumentList	anal		2533592	1					
ANR	2533914	Argument	anal		2533592	0					
ANR	2533915	Identifier	anal		2533592	0					
ANR	2533916	Argument	fcn -> addr		2533592	1					
ANR	2533917	PtrMemberAccess	fcn -> addr		2533592	0					
ANR	2533918	Identifier	fcn		2533592	0					
ANR	2533919	Identifier	addr		2533592	1					
ANR	2533920	Argument	type		2533592	2					
ANR	2533921	Identifier	type		2533592	0					
ANR	2533922	Argument	1		2533592	3					
ANR	2533923	PrimaryExpression	1		2533592	0					
ANR	2533924	Argument	ptr		2533592	4					
ANR	2533925	Identifier	ptr		2533592	0					
ANR	2533926	Argument	rw		2533592	5					
ANR	2533927	Identifier	rw		2533592	0					
ANR	2533928	Argument	op -> addr		2533592	6					
ANR	2533929	PtrMemberAccess	op -> addr		2533592	0					
ANR	2533930	Identifier	op		2533592	0					
ANR	2533931	Identifier	addr		2533592	1					
ANR	2533932	ExpressionStatement	free ( varname )	651:3:19188:19202	2533592	2	True				
ANR	2533933	CallExpression	free ( varname )		2533592	0					
ANR	2533934	Callee	free		2533592	0					
ANR	2533935	Identifier	free		2533592	0					
ANR	2533936	ArgumentList	varname		2533592	1					
ANR	2533937	Argument	varname		2533592	0					
ANR	2533938	Identifier	varname		2533592	0					
ANR	2533939	ElseStatement	else		2533592	0					
ANR	2533940	CompoundStatement		49:2:1255:1324	2533592	0					
ANR	2533941	IdentifierDeclStatement	"char * varname = get_varname ( anal , fcn , type , VARPREFIX , R_ABS ( ptr ) ) ;"	654:2:19220:19289	2533592	0	True				
ANR	2533942	IdentifierDecl	"* varname = get_varname ( anal , fcn , type , VARPREFIX , R_ABS ( ptr ) )"		2533592	0					
ANR	2533943	IdentifierDeclType	char *		2533592	0					
ANR	2533944	Identifier	varname		2533592	1					
ANR	2533945	AssignmentExpression	"* varname = get_varname ( anal , fcn , type , VARPREFIX , R_ABS ( ptr ) )"		2533592	2		=			
ANR	2533946	Identifier	varname		2533592	0					
ANR	2533947	CallExpression	"get_varname ( anal , fcn , type , VARPREFIX , R_ABS ( ptr ) )"		2533592	1					
ANR	2533948	Callee	get_varname		2533592	0					
ANR	2533949	Identifier	get_varname		2533592	0					
ANR	2533950	ArgumentList	anal		2533592	1					
ANR	2533951	Argument	anal		2533592	0					
ANR	2533952	Identifier	anal		2533592	0					
ANR	2533953	Argument	fcn		2533592	1					
ANR	2533954	Identifier	fcn		2533592	0					
ANR	2533955	Argument	type		2533592	2					
ANR	2533956	Identifier	type		2533592	0					
ANR	2533957	Argument	VARPREFIX		2533592	3					
ANR	2533958	Identifier	VARPREFIX		2533592	0					
ANR	2533959	Argument	R_ABS ( ptr )		2533592	4					
ANR	2533960	CallExpression	R_ABS ( ptr )		2533592	0					
ANR	2533961	Callee	R_ABS		2533592	0					
ANR	2533962	Identifier	R_ABS		2533592	0					
ANR	2533963	ArgumentList	ptr		2533592	1					
ANR	2533964	Argument	ptr		2533592	0					
ANR	2533965	Identifier	ptr		2533592	0					
ANR	2533966	IfStatement	if ( varname )		2533592	1					
ANR	2533967	Condition	varname	655:6:19297:19303	2533592	0	True				
ANR	2533968	Identifier	varname		2533592	0					
ANR	2533969	CompoundStatement		50:15:1341:1341	2533592	1					
ANR	2533970	ExpressionStatement	"r_anal_var_add ( anal , fcn -> addr , 1 , - ptr , type , NULL , anal -> bits / 8 , 0 , varname )"	656:3:19311:19392	2533592	0	True				
ANR	2533971	CallExpression	"r_anal_var_add ( anal , fcn -> addr , 1 , - ptr , type , NULL , anal -> bits / 8 , 0 , varname )"		2533592	0					
ANR	2533972	Callee	r_anal_var_add		2533592	0					
ANR	2533973	Identifier	r_anal_var_add		2533592	0					
ANR	2533974	ArgumentList	anal		2533592	1					
ANR	2533975	Argument	anal		2533592	0					
ANR	2533976	Identifier	anal		2533592	0					
ANR	2533977	Argument	fcn -> addr		2533592	1					
ANR	2533978	PtrMemberAccess	fcn -> addr		2533592	0					
ANR	2533979	Identifier	fcn		2533592	0					
ANR	2533980	Identifier	addr		2533592	1					
ANR	2533981	Argument	1		2533592	2					
ANR	2533982	PrimaryExpression	1		2533592	0					
ANR	2533983	Argument	- ptr		2533592	3					
ANR	2533984	UnaryOperationExpression	- ptr		2533592	0					
ANR	2533985	UnaryOperator	-		2533592	0					
ANR	2533986	Identifier	ptr		2533592	1					
ANR	2533987	Argument	type		2533592	4					
ANR	2533988	Identifier	type		2533592	0					
ANR	2533989	Argument	NULL		2533592	5					
ANR	2533990	Identifier	NULL		2533592	0					
ANR	2533991	Argument	anal -> bits / 8		2533592	6					
ANR	2533992	MultiplicativeExpression	anal -> bits / 8		2533592	0		/			
ANR	2533993	PtrMemberAccess	anal -> bits		2533592	0					
ANR	2533994	Identifier	anal		2533592	0					
ANR	2533995	Identifier	bits		2533592	1					
ANR	2533996	PrimaryExpression	8		2533592	1					
ANR	2533997	Argument	0		2533592	7					
ANR	2533998	PrimaryExpression	0		2533592	0					
ANR	2533999	Argument	varname		2533592	8					
ANR	2534000	Identifier	varname		2533592	0					
ANR	2534001	ExpressionStatement	"r_anal_var_access ( anal , fcn -> addr , type , 1 , - ptr , rw , op -> addr )"	657:3:19397:19461	2533592	1	True				
ANR	2534002	CallExpression	"r_anal_var_access ( anal , fcn -> addr , type , 1 , - ptr , rw , op -> addr )"		2533592	0					
ANR	2534003	Callee	r_anal_var_access		2533592	0					
ANR	2534004	Identifier	r_anal_var_access		2533592	0					
ANR	2534005	ArgumentList	anal		2533592	1					
ANR	2534006	Argument	anal		2533592	0					
ANR	2534007	Identifier	anal		2533592	0					
ANR	2534008	Argument	fcn -> addr		2533592	1					
ANR	2534009	PtrMemberAccess	fcn -> addr		2533592	0					
ANR	2534010	Identifier	fcn		2533592	0					
ANR	2534011	Identifier	addr		2533592	1					
ANR	2534012	Argument	type		2533592	2					
ANR	2534013	Identifier	type		2533592	0					
ANR	2534014	Argument	1		2533592	3					
ANR	2534015	PrimaryExpression	1		2533592	0					
ANR	2534016	Argument	- ptr		2533592	4					
ANR	2534017	UnaryOperationExpression	- ptr		2533592	0					
ANR	2534018	UnaryOperator	-		2533592	0					
ANR	2534019	Identifier	ptr		2533592	1					
ANR	2534020	Argument	rw		2533592	5					
ANR	2534021	Identifier	rw		2533592	0					
ANR	2534022	Argument	op -> addr		2533592	6					
ANR	2534023	PtrMemberAccess	op -> addr		2533592	0					
ANR	2534024	Identifier	op		2533592	0					
ANR	2534025	Identifier	addr		2533592	1					
ANR	2534026	ExpressionStatement	free ( varname )	658:3:19466:19480	2533592	2	True				
ANR	2534027	CallExpression	free ( varname )		2533592	0					
ANR	2534028	Callee	free		2533592	0					
ANR	2534029	Identifier	free		2533592	0					
ANR	2534030	ArgumentList	varname		2533592	1					
ANR	2534031	Argument	varname		2533592	0					
ANR	2534032	Identifier	varname		2533592	0					
ANR	2534033	Label	beach :	661:0:19489:19494	2533592	15	True				
ANR	2534034	Identifier	beach		2533592	0					
ANR	2534035	ExpressionStatement	free ( esil_buf )	662:1:19497:19512	2533592	16	True				
ANR	2534036	CallExpression	free ( esil_buf )		2533592	0					
ANR	2534037	Callee	free		2533592	0					
ANR	2534038	Identifier	free		2533592	0					
ANR	2534039	ArgumentList	esil_buf		2533592	1					
ANR	2534040	Argument	esil_buf		2533592	0					
ANR	2534041	Identifier	esil_buf		2533592	0					
ANR	2534042	ReturnType	static void		2533592	1					
ANR	2534043	Identifier	extract_arg		2533592	2					
ANR	2534044	ParameterList	"RAnal * anal , RAnalFunction * fcn , RAnalOp * op , const char * reg , const char * sign , char type"		2533592	3					
ANR	2534045	Parameter	RAnal * anal	606:24:17872:17882	2533592	0	True				
ANR	2534046	ParameterType	RAnal *		2533592	0					
ANR	2534047	Identifier	anal		2533592	1					
ANR	2534048	Parameter	RAnalFunction * fcn	606:37:17885:17902	2533592	1	True				
ANR	2534049	ParameterType	RAnalFunction *		2533592	0					
ANR	2534050	Identifier	fcn		2533592	1					
ANR	2534051	Parameter	RAnalOp * op	606:57:17905:17915	2533592	2	True				
ANR	2534052	ParameterType	RAnalOp *		2533592	0					
ANR	2534053	Identifier	op		2533592	1					
ANR	2534054	Parameter	const char * reg	606:70:17918:17932	2533592	3	True				
ANR	2534055	ParameterType	const char *		2533592	0					
ANR	2534056	Identifier	reg		2533592	1					
ANR	2534057	Parameter	const char * sign	606:87:17935:17950	2533592	4	True				
ANR	2534058	ParameterType	const char *		2533592	0					
ANR	2534059	Identifier	sign		2533592	1					
ANR	2534060	Parameter	char type	606:105:17953:17961	2533592	5	True				
ANR	2534061	ParameterType	char		2533592	0					
ANR	2534062	Identifier	type		2533592	1					
ANR	2534063	CFGEntryNode	ENTRY		2533592		True				
ANR	2534064	CFGExitNode	EXIT		2533592		True				
ANR	2534065	Symbol	& op -> esil		2533592						
ANR	2534066	Symbol	pfx		2533592						
ANR	2534067	Symbol	* op		2533592						
ANR	2534068	Symbol	* fcn		2533592						
ANR	2534069	Symbol	rw		2533592						
ANR	2534070	Symbol	sign		2533592						
ANR	2534071	Symbol	R_ANAL_STACK_GET		2533592						
ANR	2534072	Symbol	VARPREFIX		2533592						
ANR	2534073	Symbol	R_ABS		2533592						
ANR	2534074	Symbol	ARGPREFIX		2533592						
ANR	2534075	Symbol	esil_buf		2533592						
ANR	2534076	Symbol	type		2533592						
ANR	2534077	Symbol	fcn -> maxstack		2533592						
ANR	2534078	Symbol	fcn		2533592						
ANR	2534079	Symbol	strncmp		2533592						
ANR	2534080	Symbol	isarg		2533592						
ANR	2534081	Symbol	* anal		2533592						
ANR	2534082	Symbol	reg		2533592						
ANR	2534083	Symbol	ptr_end		2533592						
ANR	2534084	Symbol	* sign		2533592						
ANR	2534085	Symbol	op -> direction		2533592						
ANR	2534086	Symbol	R_ANAL_OP_DIR_WRITE		2533592						
ANR	2534087	Symbol	r_num_get		2533592						
ANR	2534088	Symbol	addr		2533592						
ANR	2534089	Symbol	sdb_fmt		2533592						
ANR	2534090	Symbol	R_ANAL_STACK_SET		2533592						
ANR	2534091	Symbol	op		2533592						
ANR	2534092	Symbol	op -> addr		2533592						
ANR	2534093	Symbol	NULL		2533592						
ANR	2534094	Symbol	op -> ptr		2533592						
ANR	2534095	Symbol	fcn -> bp_frame		2533592						
ANR	2534096	Symbol	get_varname		2533592						
ANR	2534097	Symbol	* ptr_end		2533592						
ANR	2534098	Symbol	varname		2533592						
ANR	2534099	Symbol	ptr		2533592						
ANR	2534100	Symbol	anal -> bits		2533592						
ANR	2534101	Symbol	op_esil		2533592						
ANR	2534102	Symbol	anal		2533592						
ANR	2534103	Symbol	r_strbuf_get		2533592						
ANR	2534104	Symbol	strstr		2533592						
ANR	2534105	Symbol	fcn -> addr		2533592						
ANR	2534106	Symbol	strdup		2533592						
ANR	2534107	Symbol	* addr		2533592						
ANR	2534108	Symbol	op -> stackop		2533592						
ANR	2534109	DeclStmt									
ANR	2534110	Decl							bool	"bool ( const char * regname , RAnal * anal , RAnalOp * op )"	is_reg_in_src
ANR	2534111	Function	is_used_like_arg	667:0:19593:20837							
ANR	2534112	FunctionDef	"is_used_like_arg (const char * regname , const char * opsreg , const char * opdreg , RAnalOp * op , RAnal * anal)"		2534111	0					
ANR	2534113	CompoundStatement		667:116:19709:20837	2534111	0					
ANR	2534114	Statement	define	668:2:19713:19718	2534111	0	True				
ANR	2534115	Statement	STR_EQUAL	668:9:19720:19728	2534111	1	True				
ANR	2534116	Statement	(	668:18:19729:19729	2534111	2	True				
ANR	2534117	Statement	s1	668:19:19730:19731	2534111	3	True				
ANR	2534118	Statement	","	668:21:19732:19732	2534111	4	True				
ANR	2534119	Statement	s2	668:23:19734:19735	2534111	5	True				
ANR	2534120	Statement	)	668:25:19736:19736	2534111	6	True				
ANR	2534121	Statement	s1	668:27:19738:19739	2534111	7	True				
ANR	2534122	Statement	&&	668:30:19741:19742	2534111	8	True				
ANR	2534123	Statement	s2	668:33:19744:19745	2534111	9	True				
ANR	2534124	Statement	&&	668:36:19747:19748	2534111	10	True				
ANR	2534125	Statement	!	668:39:19750:19750	2534111	11	True				
ANR	2534126	Statement	strcmp	668:40:19751:19756	2534111	12	True				
ANR	2534127	Statement	(	668:47:19758:19758	2534111	13	True				
ANR	2534128	Statement	s1	668:48:19759:19760	2534111	14	True				
ANR	2534129	Statement	","	668:50:19761:19761	2534111	15	True				
ANR	2534130	Statement	s2	668:52:19763:19764	2534111	16	True				
ANR	2534131	Statement	)	668:54:19765:19765	2534111	17	True				
ANR	2534132	IdentifierDeclStatement	RAnalValue * dst = op -> dst ;	669:1:19768:19793	2534111	18	True				
ANR	2534133	IdentifierDecl	* dst = op -> dst		2534111	0					
ANR	2534134	IdentifierDeclType	RAnalValue *		2534111	0					
ANR	2534135	Identifier	dst		2534111	1					
ANR	2534136	AssignmentExpression	* dst = op -> dst		2534111	2		=			
ANR	2534137	Identifier	dst		2534111	0					
ANR	2534138	PtrMemberAccess	op -> dst		2534111	1					
ANR	2534139	Identifier	op		2534111	0					
ANR	2534140	Identifier	dst		2534111	1					
ANR	2534141	IdentifierDeclStatement	RAnalValue * src = op -> src [ 0 ] ;	670:1:19796:19824	2534111	19	True				
ANR	2534142	IdentifierDecl	* src = op -> src [ 0 ]		2534111	0					
ANR	2534143	IdentifierDeclType	RAnalValue *		2534111	0					
ANR	2534144	Identifier	src		2534111	1					
ANR	2534145	AssignmentExpression	* src = op -> src [ 0 ]		2534111	2		=			
ANR	2534146	Identifier	src		2534111	0					
ANR	2534147	ArrayIndexing	op -> src [ 0 ]		2534111	1					
ANR	2534148	PtrMemberAccess	op -> src		2534111	0					
ANR	2534149	Identifier	op		2534111	0					
ANR	2534150	Identifier	src		2534111	1					
ANR	2534151	PrimaryExpression	0		2534111	1					
ANR	2534152	SwitchStatement	switch ( op -> type )		2534111	20					
ANR	2534153	Condition	op -> type	671:9:19835:19842	2534111	0	True				
ANR	2534154	PtrMemberAccess	op -> type		2534111	0					
ANR	2534155	Identifier	op		2534111	0					
ANR	2534156	Identifier	type		2534111	1					
ANR	2534157	CompoundStatement		5:19:135:135	2534111	1					
ANR	2534158	Label	case R_ANAL_OP_TYPE_POP :	672:1:19848:19871	2534111	0	True				
ANR	2534159	Identifier	R_ANAL_OP_TYPE_POP		2534111	0					
ANR	2534160	ReturnStatement	return false ;	673:2:19875:19887	2534111	1	True				
ANR	2534161	Identifier	false		2534111	0					
ANR	2534162	Label	case R_ANAL_OP_TYPE_MOV :	674:1:19890:19913	2534111	2	True				
ANR	2534163	Identifier	R_ANAL_OP_TYPE_MOV		2534111	0					
ANR	2534164	ReturnStatement	"return ( is_reg_in_src ( regname , anal , op ) ) || ( STR_EQUAL ( opdreg , regname ) && dst -> memref ) ;"	675:2:19917:20007	2534111	3	True				
ANR	2534165	OrExpression	"( is_reg_in_src ( regname , anal , op ) ) || ( STR_EQUAL ( opdreg , regname ) && dst -> memref )"		2534111	0		||			
ANR	2534166	CallExpression	"is_reg_in_src ( regname , anal , op )"		2534111	0					
ANR	2534167	Callee	is_reg_in_src		2534111	0					
ANR	2534168	Identifier	is_reg_in_src		2534111	0					
ANR	2534169	ArgumentList	regname		2534111	1					
ANR	2534170	Argument	regname		2534111	0					
ANR	2534171	Identifier	regname		2534111	0					
ANR	2534172	Argument	anal		2534111	1					
ANR	2534173	Identifier	anal		2534111	0					
ANR	2534174	Argument	op		2534111	2					
ANR	2534175	Identifier	op		2534111	0					
ANR	2534176	AndExpression	"STR_EQUAL ( opdreg , regname ) && dst -> memref"		2534111	1		&&			
ANR	2534177	CallExpression	"STR_EQUAL ( opdreg , regname )"		2534111	0					
ANR	2534178	Callee	STR_EQUAL		2534111	0					
ANR	2534179	Identifier	STR_EQUAL		2534111	0					
ANR	2534180	ArgumentList	opdreg		2534111	1					
ANR	2534181	Argument	opdreg		2534111	0					
ANR	2534182	Identifier	opdreg		2534111	0					
ANR	2534183	Argument	regname		2534111	1					
ANR	2534184	Identifier	regname		2534111	0					
ANR	2534185	PtrMemberAccess	dst -> memref		2534111	1					
ANR	2534186	Identifier	dst		2534111	0					
ANR	2534187	Identifier	memref		2534111	1					
ANR	2534188	Label	case R_ANAL_OP_TYPE_CMOV :	676:1:20010:20034	2534111	4	True				
ANR	2534189	Identifier	R_ANAL_OP_TYPE_CMOV		2534111	0					
ANR	2534190	IfStatement	"if ( STR_EQUAL ( opdreg , regname ) )"		2534111	5					
ANR	2534191	Condition	"STR_EQUAL ( opdreg , regname )"	677:6:20042:20068	2534111	0	True				
ANR	2534192	CallExpression	"STR_EQUAL ( opdreg , regname )"		2534111	0					
ANR	2534193	Callee	STR_EQUAL		2534111	0					
ANR	2534194	Identifier	STR_EQUAL		2534111	0					
ANR	2534195	ArgumentList	opdreg		2534111	1					
ANR	2534196	Argument	opdreg		2534111	0					
ANR	2534197	Identifier	opdreg		2534111	0					
ANR	2534198	Argument	regname		2534111	1					
ANR	2534199	Identifier	regname		2534111	0					
ANR	2534200	CompoundStatement		11:35:361:361	2534111	1					
ANR	2534201	ReturnStatement	return false ;	678:3:20076:20088	2534111	0	True				
ANR	2534202	Identifier	false		2534111	0					
ANR	2534203	IfStatement	"if ( is_reg_in_src ( regname , anal , op ) )"		2534111	6					
ANR	2534204	Condition	"is_reg_in_src ( regname , anal , op )"	680:6:20100:20132	2534111	0	True				
ANR	2534205	CallExpression	"is_reg_in_src ( regname , anal , op )"		2534111	0					
ANR	2534206	Callee	is_reg_in_src		2534111	0					
ANR	2534207	Identifier	is_reg_in_src		2534111	0					
ANR	2534208	ArgumentList	regname		2534111	1					
ANR	2534209	Argument	regname		2534111	0					
ANR	2534210	Identifier	regname		2534111	0					
ANR	2534211	Argument	anal		2534111	1					
ANR	2534212	Identifier	anal		2534111	0					
ANR	2534213	Argument	op		2534111	2					
ANR	2534214	Identifier	op		2534111	0					
ANR	2534215	CompoundStatement		14:41:425:425	2534111	1					
ANR	2534216	ReturnStatement	return true ;	681:3:20140:20151	2534111	0	True				
ANR	2534217	Identifier	true		2534111	0					
ANR	2534218	ReturnStatement	return false ;	683:2:20159:20171	2534111	7	True				
ANR	2534219	Identifier	false		2534111	0					
ANR	2534220	Label	case R_ANAL_OP_TYPE_LEA :	684:1:20174:20197	2534111	8	True				
ANR	2534221	Identifier	R_ANAL_OP_TYPE_LEA		2534111	0					
ANR	2534222	Label	case R_ANAL_OP_TYPE_LOAD :	685:1:20200:20224	2534111	9	True				
ANR	2534223	Identifier	R_ANAL_OP_TYPE_LOAD		2534111	0					
ANR	2534224	IfStatement	"if ( is_reg_in_src ( regname , anal , op ) )"		2534111	10					
ANR	2534225	Condition	"is_reg_in_src ( regname , anal , op )"	686:6:20232:20264	2534111	0	True				
ANR	2534226	CallExpression	"is_reg_in_src ( regname , anal , op )"		2534111	0					
ANR	2534227	Callee	is_reg_in_src		2534111	0					
ANR	2534228	Identifier	is_reg_in_src		2534111	0					
ANR	2534229	ArgumentList	regname		2534111	1					
ANR	2534230	Argument	regname		2534111	0					
ANR	2534231	Identifier	regname		2534111	0					
ANR	2534232	Argument	anal		2534111	1					
ANR	2534233	Identifier	anal		2534111	0					
ANR	2534234	Argument	op		2534111	2					
ANR	2534235	Identifier	op		2534111	0					
ANR	2534236	CompoundStatement		20:41:557:557	2534111	1					
ANR	2534237	ReturnStatement	return true ;	687:3:20272:20283	2534111	0	True				
ANR	2534238	Identifier	true		2534111	0					
ANR	2534239	IfStatement	"if ( STR_EQUAL ( opdreg , regname ) )"		2534111	11					
ANR	2534240	Condition	"STR_EQUAL ( opdreg , regname )"	689:6:20295:20321	2534111	0	True				
ANR	2534241	CallExpression	"STR_EQUAL ( opdreg , regname )"		2534111	0					
ANR	2534242	Callee	STR_EQUAL		2534111	0					
ANR	2534243	Identifier	STR_EQUAL		2534111	0					
ANR	2534244	ArgumentList	opdreg		2534111	1					
ANR	2534245	Argument	opdreg		2534111	0					
ANR	2534246	Identifier	opdreg		2534111	0					
ANR	2534247	Argument	regname		2534111	1					
ANR	2534248	Identifier	regname		2534111	0					
ANR	2534249	CompoundStatement		23:35:614:614	2534111	1					
ANR	2534250	ReturnStatement	return false ;	690:3:20329:20341	2534111	0	True				
ANR	2534251	Identifier	false		2534111	0					
ANR	2534252	ReturnStatement	return false ;	692:6:20353:20365	2534111	12	True				
ANR	2534253	Identifier	false		2534111	0					
ANR	2534254	Label	case R_ANAL_OP_TYPE_XOR :	693:1:20368:20391	2534111	13	True				
ANR	2534255	Identifier	R_ANAL_OP_TYPE_XOR		2534111	0					
ANR	2534256	IfStatement	"if ( STR_EQUAL ( opsreg , opdreg ) && ! src -> memref && ! dst -> memref )"		2534111	14					
ANR	2534257	Condition	"STR_EQUAL ( opsreg , opdreg ) && ! src -> memref && ! dst -> memref"	694:6:20399:20456	2534111	0	True				
ANR	2534258	AndExpression	"STR_EQUAL ( opsreg , opdreg ) && ! src -> memref && ! dst -> memref"		2534111	0		&&			
ANR	2534259	CallExpression	"STR_EQUAL ( opsreg , opdreg )"		2534111	0					
ANR	2534260	Callee	STR_EQUAL		2534111	0					
ANR	2534261	Identifier	STR_EQUAL		2534111	0					
ANR	2534262	ArgumentList	opsreg		2534111	1					
ANR	2534263	Argument	opsreg		2534111	0					
ANR	2534264	Identifier	opsreg		2534111	0					
ANR	2534265	Argument	opdreg		2534111	1					
ANR	2534266	Identifier	opdreg		2534111	0					
ANR	2534267	AndExpression	! src -> memref && ! dst -> memref		2534111	1		&&			
ANR	2534268	UnaryOperationExpression	! src -> memref		2534111	0					
ANR	2534269	UnaryOperator	!		2534111	0					
ANR	2534270	PtrMemberAccess	src -> memref		2534111	1					
ANR	2534271	Identifier	src		2534111	0					
ANR	2534272	Identifier	memref		2534111	1					
ANR	2534273	UnaryOperationExpression	! dst -> memref		2534111	1					
ANR	2534274	UnaryOperator	!		2534111	0					
ANR	2534275	PtrMemberAccess	dst -> memref		2534111	1					
ANR	2534276	Identifier	dst		2534111	0					
ANR	2534277	Identifier	memref		2534111	1					
ANR	2534278	CompoundStatement		28:66:749:749	2534111	1					
ANR	2534279	ReturnStatement	return false ;	695:3:20464:20476	2534111	0	True				
ANR	2534280	Identifier	false		2534111	0					
ANR	2534281	Label	default :	698:1:20499:20506	2534111	15	True				
ANR	2534282	Identifier	default		2534111	0					
ANR	2534283	IfStatement	"if ( ( op -> type == R_ANAL_OP_TYPE_ADD || op -> type == R_ANAL_OP_TYPE_SUB ) && STR_EQUAL ( anal -> cur -> arch , ""arm"" ) )"		2534111	16					
ANR	2534284	Condition	"( op -> type == R_ANAL_OP_TYPE_ADD || op -> type == R_ANAL_OP_TYPE_SUB ) && STR_EQUAL ( anal -> cur -> arch , ""arm"" )"	699:6:20514:20617	2534111	0	True				
ANR	2534285	AndExpression	"( op -> type == R_ANAL_OP_TYPE_ADD || op -> type == R_ANAL_OP_TYPE_SUB ) && STR_EQUAL ( anal -> cur -> arch , ""arm"" )"		2534111	0		&&			
ANR	2534286	OrExpression	op -> type == R_ANAL_OP_TYPE_ADD || op -> type == R_ANAL_OP_TYPE_SUB		2534111	0		||			
ANR	2534287	EqualityExpression	op -> type == R_ANAL_OP_TYPE_ADD		2534111	0		==			
ANR	2534288	PtrMemberAccess	op -> type		2534111	0					
ANR	2534289	Identifier	op		2534111	0					
ANR	2534290	Identifier	type		2534111	1					
ANR	2534291	Identifier	R_ANAL_OP_TYPE_ADD		2534111	1					
ANR	2534292	EqualityExpression	op -> type == R_ANAL_OP_TYPE_SUB		2534111	1		==			
ANR	2534293	PtrMemberAccess	op -> type		2534111	0					
ANR	2534294	Identifier	op		2534111	0					
ANR	2534295	Identifier	type		2534111	1					
ANR	2534296	Identifier	R_ANAL_OP_TYPE_SUB		2534111	1					
ANR	2534297	CallExpression	"STR_EQUAL ( anal -> cur -> arch , ""arm"" )"		2534111	1					
ANR	2534298	Callee	STR_EQUAL		2534111	0					
ANR	2534299	Identifier	STR_EQUAL		2534111	0					
ANR	2534300	ArgumentList	anal -> cur -> arch		2534111	1					
ANR	2534301	Argument	anal -> cur -> arch		2534111	0					
ANR	2534302	PtrMemberAccess	anal -> cur -> arch		2534111	0					
ANR	2534303	PtrMemberAccess	anal -> cur		2534111	0					
ANR	2534304	Identifier	anal		2534111	0					
ANR	2534305	Identifier	cur		2534111	1					
ANR	2534306	Identifier	arch		2534111	1					
ANR	2534307	Argument	"""arm"""		2534111	1					
ANR	2534308	PrimaryExpression	"""arm"""		2534111	0					
ANR	2534309	CompoundStatement		33:112:910:910	2534111	1					
ANR	2534310	IfStatement	"if ( STR_EQUAL ( opdreg , regname ) )"		2534111	0					
ANR	2534311	Condition	"STR_EQUAL ( opdreg , regname )"	700:7:20629:20655	2534111	0	True				
ANR	2534312	CallExpression	"STR_EQUAL ( opdreg , regname )"		2534111	0					
ANR	2534313	Callee	STR_EQUAL		2534111	0					
ANR	2534314	Identifier	STR_EQUAL		2534111	0					
ANR	2534315	ArgumentList	opdreg		2534111	1					
ANR	2534316	Argument	opdreg		2534111	0					
ANR	2534317	Identifier	opdreg		2534111	0					
ANR	2534318	Argument	regname		2534111	1					
ANR	2534319	Identifier	regname		2534111	0					
ANR	2534320	CompoundStatement		34:36:948:948	2534111	1					
ANR	2534321	ReturnStatement	return false ;	701:4:20664:20676	2534111	0	True				
ANR	2534322	Identifier	false		2534111	0					
ANR	2534323	IfStatement	"if ( is_reg_in_src ( regname , anal , op ) )"		2534111	1					
ANR	2534324	Condition	"is_reg_in_src ( regname , anal , op )"	703:7:20690:20722	2534111	0	True				
ANR	2534325	CallExpression	"is_reg_in_src ( regname , anal , op )"		2534111	0					
ANR	2534326	Callee	is_reg_in_src		2534111	0					
ANR	2534327	Identifier	is_reg_in_src		2534111	0					
ANR	2534328	ArgumentList	regname		2534111	1					
ANR	2534329	Argument	regname		2534111	0					
ANR	2534330	Identifier	regname		2534111	0					
ANR	2534331	Argument	anal		2534111	1					
ANR	2534332	Identifier	anal		2534111	0					
ANR	2534333	Argument	op		2534111	2					
ANR	2534334	Identifier	op		2534111	0					
ANR	2534335	CompoundStatement		37:42:1015:1015	2534111	1					
ANR	2534336	ReturnStatement	return true ;	704:4:20731:20742	2534111	0	True				
ANR	2534337	Identifier	true		2534111	0					
ANR	2534338	ReturnStatement	"return ( ( STR_EQUAL ( opdreg , regname ) ) || ( is_reg_in_src ( regname , anal , op ) ) ) ;"	707:2:20755:20832	2534111	17	True				
ANR	2534339	OrExpression	"( STR_EQUAL ( opdreg , regname ) ) || ( is_reg_in_src ( regname , anal , op ) )"		2534111	0		||			
ANR	2534340	CallExpression	"STR_EQUAL ( opdreg , regname )"		2534111	0					
ANR	2534341	Callee	STR_EQUAL		2534111	0					
ANR	2534342	Identifier	STR_EQUAL		2534111	0					
ANR	2534343	ArgumentList	opdreg		2534111	1					
ANR	2534344	Argument	opdreg		2534111	0					
ANR	2534345	Identifier	opdreg		2534111	0					
ANR	2534346	Argument	regname		2534111	1					
ANR	2534347	Identifier	regname		2534111	0					
ANR	2534348	CallExpression	"is_reg_in_src ( regname , anal , op )"		2534111	1					
ANR	2534349	Callee	is_reg_in_src		2534111	0					
ANR	2534350	Identifier	is_reg_in_src		2534111	0					
ANR	2534351	ArgumentList	regname		2534111	1					
ANR	2534352	Argument	regname		2534111	0					
ANR	2534353	Identifier	regname		2534111	0					
ANR	2534354	Argument	anal		2534111	1					
ANR	2534355	Identifier	anal		2534111	0					
ANR	2534356	Argument	op		2534111	2					
ANR	2534357	Identifier	op		2534111	0					
ANR	2534358	ReturnType	static bool		2534111	1					
ANR	2534359	Identifier	is_used_like_arg		2534111	2					
ANR	2534360	ParameterList	"const char * regname , const char * opsreg , const char * opdreg , RAnalOp * op , RAnal * anal"		2534111	3					
ANR	2534361	Parameter	const char * regname	667:29:19622:19640	2534111	0	True				
ANR	2534362	ParameterType	const char *		2534111	0					
ANR	2534363	Identifier	regname		2534111	1					
ANR	2534364	Parameter	const char * opsreg	667:50:19643:19660	2534111	1	True				
ANR	2534365	ParameterType	const char *		2534111	0					
ANR	2534366	Identifier	opsreg		2534111	1					
ANR	2534367	Parameter	const char * opdreg	667:70:19663:19680	2534111	2	True				
ANR	2534368	ParameterType	const char *		2534111	0					
ANR	2534369	Identifier	opdreg		2534111	1					
ANR	2534370	Parameter	RAnalOp * op	667:90:19683:19693	2534111	3	True				
ANR	2534371	ParameterType	RAnalOp *		2534111	0					
ANR	2534372	Identifier	op		2534111	1					
ANR	2534373	Parameter	RAnal * anal	667:103:19696:19706	2534111	4	True				
ANR	2534374	ParameterType	RAnal *		2534111	0					
ANR	2534375	Identifier	anal		2534111	1					
ANR	2534376	CFGEntryNode	ENTRY		2534111		True				
ANR	2534377	CFGExitNode	EXIT		2534111		True				
ANR	2534378	Symbol	src -> memref		2534111						
ANR	2534379	Symbol	R_ANAL_OP_TYPE_SUB		2534111						
ANR	2534380	Symbol	* anal -> cur		2534111						
ANR	2534381	Symbol	dst		2534111						
ANR	2534382	Symbol	* op		2534111						
ANR	2534383	Symbol	is_reg_in_src		2534111						
ANR	2534384	Symbol	STR_EQUAL		2534111						
ANR	2534385	Symbol	anal -> cur -> arch		2534111						
ANR	2534386	Symbol	op -> dst		2534111						
ANR	2534387	Symbol	* src		2534111						
ANR	2534388	Symbol	* * op		2534111						
ANR	2534389	Symbol	* dst		2534111						
ANR	2534390	Symbol	* * anal		2534111						
ANR	2534391	Symbol	opdreg		2534111						
ANR	2534392	Symbol	* anal		2534111						
ANR	2534393	Symbol	R_ANAL_OP_TYPE_ADD		2534111						
ANR	2534394	Symbol	regname		2534111						
ANR	2534395	Symbol	op		2534111						
ANR	2534396	Symbol	src		2534111						
ANR	2534397	Symbol	op -> type		2534111						
ANR	2534398	Symbol	opsreg		2534111						
ANR	2534399	Symbol	false		2534111						
ANR	2534400	Symbol	op -> src		2534111						
ANR	2534401	Symbol	* op -> src		2534111						
ANR	2534402	Symbol	anal		2534111						
ANR	2534403	Symbol	dst -> memref		2534111						
ANR	2534404	Symbol	anal -> cur		2534111						
ANR	2534405	Symbol	true		2534111						
ANR	2534406	Function	is_reg_in_src	711:0:20840:21249							
ANR	2534407	FunctionDef	"is_reg_in_src (const char * regname , RAnal * anal , RAnalOp * op)"		2534406	0					
ANR	2534408	CompoundStatement		711:74:20914:21249	2534406	0					
ANR	2534409	IdentifierDeclStatement	"const char * opsreg0 = op -> src [ 0 ] ? get_regname ( anal , op -> src [ 0 ] ) : NULL ;"	712:1:20917:20989	2534406	0	True				
ANR	2534410	IdentifierDecl	"* opsreg0 = op -> src [ 0 ] ? get_regname ( anal , op -> src [ 0 ] ) : NULL"		2534406	0					
ANR	2534411	IdentifierDeclType	const char *		2534406	0					
ANR	2534412	Identifier	opsreg0		2534406	1					
ANR	2534413	AssignmentExpression	"* opsreg0 = op -> src [ 0 ] ? get_regname ( anal , op -> src [ 0 ] ) : NULL"		2534406	2		=			
ANR	2534414	Identifier	opsreg0		2534406	0					
ANR	2534415	ConditionalExpression	"op -> src [ 0 ] ? get_regname ( anal , op -> src [ 0 ] ) : NULL"		2534406	1					
ANR	2534416	Condition	op -> src [ 0 ]		2534406	0					
ANR	2534417	ArrayIndexing	op -> src [ 0 ]		2534406	0					
ANR	2534418	PtrMemberAccess	op -> src		2534406	0					
ANR	2534419	Identifier	op		2534406	0					
ANR	2534420	Identifier	src		2534406	1					
ANR	2534421	PrimaryExpression	0		2534406	1					
ANR	2534422	CallExpression	"get_regname ( anal , op -> src [ 0 ] )"		2534406	1					
ANR	2534423	Callee	get_regname		2534406	0					
ANR	2534424	Identifier	get_regname		2534406	0					
ANR	2534425	ArgumentList	anal		2534406	1					
ANR	2534426	Argument	anal		2534406	0					
ANR	2534427	Identifier	anal		2534406	0					
ANR	2534428	Argument	op -> src [ 0 ]		2534406	1					
ANR	2534429	ArrayIndexing	op -> src [ 0 ]		2534406	0					
ANR	2534430	PtrMemberAccess	op -> src		2534406	0					
ANR	2534431	Identifier	op		2534406	0					
ANR	2534432	Identifier	src		2534406	1					
ANR	2534433	PrimaryExpression	0		2534406	1					
ANR	2534434	Identifier	NULL		2534406	2					
ANR	2534435	IdentifierDeclStatement	"const char * opsreg1 = op -> src [ 1 ] ? get_regname ( anal , op -> src [ 1 ] ) : NULL ;"	713:1:20992:21064	2534406	1	True				
ANR	2534436	IdentifierDecl	"* opsreg1 = op -> src [ 1 ] ? get_regname ( anal , op -> src [ 1 ] ) : NULL"		2534406	0					
ANR	2534437	IdentifierDeclType	const char *		2534406	0					
ANR	2534438	Identifier	opsreg1		2534406	1					
ANR	2534439	AssignmentExpression	"* opsreg1 = op -> src [ 1 ] ? get_regname ( anal , op -> src [ 1 ] ) : NULL"		2534406	2		=			
ANR	2534440	Identifier	opsreg1		2534406	0					
ANR	2534441	ConditionalExpression	"op -> src [ 1 ] ? get_regname ( anal , op -> src [ 1 ] ) : NULL"		2534406	1					
ANR	2534442	Condition	op -> src [ 1 ]		2534406	0					
ANR	2534443	ArrayIndexing	op -> src [ 1 ]		2534406	0					
ANR	2534444	PtrMemberAccess	op -> src		2534406	0					
ANR	2534445	Identifier	op		2534406	0					
ANR	2534446	Identifier	src		2534406	1					
ANR	2534447	PrimaryExpression	1		2534406	1					
ANR	2534448	CallExpression	"get_regname ( anal , op -> src [ 1 ] )"		2534406	1					
ANR	2534449	Callee	get_regname		2534406	0					
ANR	2534450	Identifier	get_regname		2534406	0					
ANR	2534451	ArgumentList	anal		2534406	1					
ANR	2534452	Argument	anal		2534406	0					
ANR	2534453	Identifier	anal		2534406	0					
ANR	2534454	Argument	op -> src [ 1 ]		2534406	1					
ANR	2534455	ArrayIndexing	op -> src [ 1 ]		2534406	0					
ANR	2534456	PtrMemberAccess	op -> src		2534406	0					
ANR	2534457	Identifier	op		2534406	0					
ANR	2534458	Identifier	src		2534406	1					
ANR	2534459	PrimaryExpression	1		2534406	1					
ANR	2534460	Identifier	NULL		2534406	2					
ANR	2534461	IdentifierDeclStatement	"const char * opsreg2 = op -> src [ 2 ] ? get_regname ( anal , op -> src [ 2 ] ) : NULL ;"	714:1:21067:21139	2534406	2	True				
ANR	2534462	IdentifierDecl	"* opsreg2 = op -> src [ 2 ] ? get_regname ( anal , op -> src [ 2 ] ) : NULL"		2534406	0					
ANR	2534463	IdentifierDeclType	const char *		2534406	0					
ANR	2534464	Identifier	opsreg2		2534406	1					
ANR	2534465	AssignmentExpression	"* opsreg2 = op -> src [ 2 ] ? get_regname ( anal , op -> src [ 2 ] ) : NULL"		2534406	2		=			
ANR	2534466	Identifier	opsreg2		2534406	0					
ANR	2534467	ConditionalExpression	"op -> src [ 2 ] ? get_regname ( anal , op -> src [ 2 ] ) : NULL"		2534406	1					
ANR	2534468	Condition	op -> src [ 2 ]		2534406	0					
ANR	2534469	ArrayIndexing	op -> src [ 2 ]		2534406	0					
ANR	2534470	PtrMemberAccess	op -> src		2534406	0					
ANR	2534471	Identifier	op		2534406	0					
ANR	2534472	Identifier	src		2534406	1					
ANR	2534473	PrimaryExpression	2		2534406	1					
ANR	2534474	CallExpression	"get_regname ( anal , op -> src [ 2 ] )"		2534406	1					
ANR	2534475	Callee	get_regname		2534406	0					
ANR	2534476	Identifier	get_regname		2534406	0					
ANR	2534477	ArgumentList	anal		2534406	1					
ANR	2534478	Argument	anal		2534406	0					
ANR	2534479	Identifier	anal		2534406	0					
ANR	2534480	Argument	op -> src [ 2 ]		2534406	1					
ANR	2534481	ArrayIndexing	op -> src [ 2 ]		2534406	0					
ANR	2534482	PtrMemberAccess	op -> src		2534406	0					
ANR	2534483	Identifier	op		2534406	0					
ANR	2534484	Identifier	src		2534406	1					
ANR	2534485	PrimaryExpression	2		2534406	1					
ANR	2534486	Identifier	NULL		2534406	2					
ANR	2534487	ReturnStatement	"return ( STR_EQUAL ( regname , opsreg0 ) ) || ( STR_EQUAL ( regname , opsreg1 ) ) || ( STR_EQUAL ( regname , opsreg2 ) ) ;"	715:1:21142:21247	2534406	3	True				
ANR	2534488	OrExpression	"( STR_EQUAL ( regname , opsreg0 ) ) || ( STR_EQUAL ( regname , opsreg1 ) ) || ( STR_EQUAL ( regname , opsreg2 ) )"		2534406	0		||			
ANR	2534489	CallExpression	"STR_EQUAL ( regname , opsreg0 )"		2534406	0					
ANR	2534490	Callee	STR_EQUAL		2534406	0					
ANR	2534491	Identifier	STR_EQUAL		2534406	0					
ANR	2534492	ArgumentList	regname		2534406	1					
ANR	2534493	Argument	regname		2534406	0					
ANR	2534494	Identifier	regname		2534406	0					
ANR	2534495	Argument	opsreg0		2534406	1					
ANR	2534496	Identifier	opsreg0		2534406	0					
ANR	2534497	OrExpression	"( STR_EQUAL ( regname , opsreg1 ) ) || ( STR_EQUAL ( regname , opsreg2 ) )"		2534406	1		||			
ANR	2534498	CallExpression	"STR_EQUAL ( regname , opsreg1 )"		2534406	0					
ANR	2534499	Callee	STR_EQUAL		2534406	0					
ANR	2534500	Identifier	STR_EQUAL		2534406	0					
ANR	2534501	ArgumentList	regname		2534406	1					
ANR	2534502	Argument	regname		2534406	0					
ANR	2534503	Identifier	regname		2534406	0					
ANR	2534504	Argument	opsreg1		2534406	1					
ANR	2534505	Identifier	opsreg1		2534406	0					
ANR	2534506	CallExpression	"STR_EQUAL ( regname , opsreg2 )"		2534406	1					
ANR	2534507	Callee	STR_EQUAL		2534406	0					
ANR	2534508	Identifier	STR_EQUAL		2534406	0					
ANR	2534509	ArgumentList	regname		2534406	1					
ANR	2534510	Argument	regname		2534406	0					
ANR	2534511	Identifier	regname		2534406	0					
ANR	2534512	Argument	opsreg2		2534406	1					
ANR	2534513	Identifier	opsreg2		2534406	0					
ANR	2534514	ReturnType	static bool		2534406	1					
ANR	2534515	Identifier	is_reg_in_src		2534406	2					
ANR	2534516	ParameterList	"const char * regname , RAnal * anal , RAnalOp * op"		2534406	3					
ANR	2534517	Parameter	const char * regname	711:27:20867:20885	2534406	0	True				
ANR	2534518	ParameterType	const char *		2534406	0					
ANR	2534519	Identifier	regname		2534406	1					
ANR	2534520	Parameter	RAnal * anal	711:48:20888:20898	2534406	1	True				
ANR	2534521	ParameterType	RAnal *		2534406	0					
ANR	2534522	Identifier	anal		2534406	1					
ANR	2534523	Parameter	RAnalOp * op	711:61:20901:20911	2534406	2	True				
ANR	2534524	ParameterType	RAnalOp *		2534406	0					
ANR	2534525	Identifier	op		2534406	1					
ANR	2534526	CFGEntryNode	ENTRY		2534406		True				
ANR	2534527	CFGExitNode	EXIT		2534406		True				
ANR	2534528	Symbol	regname		2534406						
ANR	2534529	Symbol	op		2534406						
ANR	2534530	Symbol	NULL		2534406						
ANR	2534531	Symbol	* op		2534406						
ANR	2534532	Symbol	STR_EQUAL		2534406						
ANR	2534533	Symbol	opsreg2		2534406						
ANR	2534534	Symbol	* * op		2534406						
ANR	2534535	Symbol	op -> src		2534406						
ANR	2534536	Symbol	* op -> src		2534406						
ANR	2534537	Symbol	opsreg0		2534406						
ANR	2534538	Symbol	opsreg1		2534406						
ANR	2534539	Symbol	anal		2534406						
ANR	2534540	Symbol	get_regname		2534406						
ANR	2534541	Function	r_anal_extract_rarg	718:0:21252:23385							
ANR	2534542	FunctionDef	"r_anal_extract_rarg (RAnal * anal , RAnalOp * op , RAnalFunction * fcn , int * reg_set , int * count)"		2534541	0					
ANR	2534543	CompoundStatement		718:103:21355:23385	2534541	0					
ANR	2534544	IdentifierDeclStatement	"int i , argc = 0 ;"	719:1:21358:21373	2534541	0	True				
ANR	2534545	IdentifierDecl	i		2534541	0					
ANR	2534546	IdentifierDeclType	int		2534541	0					
ANR	2534547	Identifier	i		2534541	1					
ANR	2534548	IdentifierDecl	argc = 0		2534541	1					
ANR	2534549	IdentifierDeclType	int		2534541	0					
ANR	2534550	Identifier	argc		2534541	1					
ANR	2534551	AssignmentExpression	argc = 0		2534541	2		=			
ANR	2534552	Identifier	argc		2534541	0					
ANR	2534553	PrimaryExpression	0		2534541	1					
ANR	2534554	ExpressionStatement	r_return_if_fail ( anal && op && fcn )	720:1:21376:21412	2534541	1	True				
ANR	2534555	CallExpression	r_return_if_fail ( anal && op && fcn )		2534541	0					
ANR	2534556	Callee	r_return_if_fail		2534541	0					
ANR	2534557	Identifier	r_return_if_fail		2534541	0					
ANR	2534558	ArgumentList	anal && op && fcn		2534541	1					
ANR	2534559	Argument	anal && op && fcn		2534541	0					
ANR	2534560	AndExpression	anal && op && fcn		2534541	0		&&			
ANR	2534561	Identifier	anal		2534541	0					
ANR	2534562	AndExpression	op && fcn		2534541	1		&&			
ANR	2534563	Identifier	op		2534541	0					
ANR	2534564	Identifier	fcn		2534541	1					
ANR	2534565	IdentifierDeclStatement	"const char * opsreg = op -> src [ 0 ] ? get_regname ( anal , op -> src [ 0 ] ) : NULL ;"	721:1:21415:21486	2534541	2	True				
ANR	2534566	IdentifierDecl	"* opsreg = op -> src [ 0 ] ? get_regname ( anal , op -> src [ 0 ] ) : NULL"		2534541	0					
ANR	2534567	IdentifierDeclType	const char *		2534541	0					
ANR	2534568	Identifier	opsreg		2534541	1					
ANR	2534569	AssignmentExpression	"* opsreg = op -> src [ 0 ] ? get_regname ( anal , op -> src [ 0 ] ) : NULL"		2534541	2		=			
ANR	2534570	Identifier	opsreg		2534541	0					
ANR	2534571	ConditionalExpression	"op -> src [ 0 ] ? get_regname ( anal , op -> src [ 0 ] ) : NULL"		2534541	1					
ANR	2534572	Condition	op -> src [ 0 ]		2534541	0					
ANR	2534573	ArrayIndexing	op -> src [ 0 ]		2534541	0					
ANR	2534574	PtrMemberAccess	op -> src		2534541	0					
ANR	2534575	Identifier	op		2534541	0					
ANR	2534576	Identifier	src		2534541	1					
ANR	2534577	PrimaryExpression	0		2534541	1					
ANR	2534578	CallExpression	"get_regname ( anal , op -> src [ 0 ] )"		2534541	1					
ANR	2534579	Callee	get_regname		2534541	0					
ANR	2534580	Identifier	get_regname		2534541	0					
ANR	2534581	ArgumentList	anal		2534541	1					
ANR	2534582	Argument	anal		2534541	0					
ANR	2534583	Identifier	anal		2534541	0					
ANR	2534584	Argument	op -> src [ 0 ]		2534541	1					
ANR	2534585	ArrayIndexing	op -> src [ 0 ]		2534541	0					
ANR	2534586	PtrMemberAccess	op -> src		2534541	0					
ANR	2534587	Identifier	op		2534541	0					
ANR	2534588	Identifier	src		2534541	1					
ANR	2534589	PrimaryExpression	0		2534541	1					
ANR	2534590	Identifier	NULL		2534541	2					
ANR	2534591	IdentifierDeclStatement	"const char * opdreg = op -> dst ? get_regname ( anal , op -> dst ) : NULL ;"	722:1:21489:21554	2534541	3	True				
ANR	2534592	IdentifierDecl	"* opdreg = op -> dst ? get_regname ( anal , op -> dst ) : NULL"		2534541	0					
ANR	2534593	IdentifierDeclType	const char *		2534541	0					
ANR	2534594	Identifier	opdreg		2534541	1					
ANR	2534595	AssignmentExpression	"* opdreg = op -> dst ? get_regname ( anal , op -> dst ) : NULL"		2534541	2		=			
ANR	2534596	Identifier	opdreg		2534541	0					
ANR	2534597	ConditionalExpression	"op -> dst ? get_regname ( anal , op -> dst ) : NULL"		2534541	1					
ANR	2534598	Condition	op -> dst		2534541	0					
ANR	2534599	PtrMemberAccess	op -> dst		2534541	0					
ANR	2534600	Identifier	op		2534541	0					
ANR	2534601	Identifier	dst		2534541	1					
ANR	2534602	CallExpression	"get_regname ( anal , op -> dst )"		2534541	1					
ANR	2534603	Callee	get_regname		2534541	0					
ANR	2534604	Identifier	get_regname		2534541	0					
ANR	2534605	ArgumentList	anal		2534541	1					
ANR	2534606	Argument	anal		2534541	0					
ANR	2534607	Identifier	anal		2534541	0					
ANR	2534608	Argument	op -> dst		2534541	1					
ANR	2534609	PtrMemberAccess	op -> dst		2534541	0					
ANR	2534610	Identifier	op		2534541	0					
ANR	2534611	Identifier	dst		2534541	1					
ANR	2534612	Identifier	NULL		2534541	2					
ANR	2534613	IfStatement	if ( ! fcn -> cc )		2534541	4					
ANR	2534614	Condition	! fcn -> cc	723:5:21561:21568	2534541	0	True				
ANR	2534615	UnaryOperationExpression	! fcn -> cc		2534541	0					
ANR	2534616	UnaryOperator	!		2534541	0					
ANR	2534617	PtrMemberAccess	fcn -> cc		2534541	1					
ANR	2534618	Identifier	fcn		2534541	0					
ANR	2534619	Identifier	cc		2534541	1					
ANR	2534620	CompoundStatement		6:15:215:215	2534541	1					
ANR	2534621	ExpressionStatement	"R_LOG_DEBUG ( ""No calling convention for function '%s' to extract register arguments\\n"" , fcn -> name )"	724:2:21575:21673	2534541	0	True				
ANR	2534622	CallExpression	"R_LOG_DEBUG ( ""No calling convention for function '%s' to extract register arguments\\n"" , fcn -> name )"		2534541	0					
ANR	2534623	Callee	R_LOG_DEBUG		2534541	0					
ANR	2534624	Identifier	R_LOG_DEBUG		2534541	0					
ANR	2534625	ArgumentList	"""No calling convention for function '%s' to extract register arguments\\n"""		2534541	1					
ANR	2534626	Argument	"""No calling convention for function '%s' to extract register arguments\\n"""		2534541	0					
ANR	2534627	PrimaryExpression	"""No calling convention for function '%s' to extract register arguments\\n"""		2534541	0					
ANR	2534628	Argument	fcn -> name		2534541	1					
ANR	2534629	PtrMemberAccess	fcn -> name		2534541	0					
ANR	2534630	Identifier	fcn		2534541	0					
ANR	2534631	Identifier	name		2534541	1					
ANR	2534632	ReturnStatement	return ;	725:2:21677:21683	2534541	1	True				
ANR	2534633	IdentifierDeclStatement	char * fname = fcn -> name ;	727:1:21689:21712	2534541	5	True				
ANR	2534634	IdentifierDecl	* fname = fcn -> name		2534541	0					
ANR	2534635	IdentifierDeclType	char *		2534541	0					
ANR	2534636	Identifier	fname		2534541	1					
ANR	2534637	AssignmentExpression	* fname = fcn -> name		2534541	2		=			
ANR	2534638	Identifier	fname		2534541	0					
ANR	2534639	PtrMemberAccess	fcn -> name		2534541	1					
ANR	2534640	Identifier	fcn		2534541	0					
ANR	2534641	Identifier	name		2534541	1					
ANR	2534642	IdentifierDeclStatement	Sdb * TDB = anal -> sdb_types ;	728:1:21715:21741	2534541	6	True				
ANR	2534643	IdentifierDecl	* TDB = anal -> sdb_types		2534541	0					
ANR	2534644	IdentifierDeclType	Sdb *		2534541	0					
ANR	2534645	Identifier	TDB		2534541	1					
ANR	2534646	AssignmentExpression	* TDB = anal -> sdb_types		2534541	2		=			
ANR	2534647	Identifier	TDB		2534541	0					
ANR	2534648	PtrMemberAccess	anal -> sdb_types		2534541	1					
ANR	2534649	Identifier	anal		2534541	0					
ANR	2534650	Identifier	sdb_types		2534541	1					
ANR	2534651	IdentifierDeclStatement	"int max_count = r_anal_cc_max_arg ( anal , fcn -> cc ) ;"	729:1:21744:21793	2534541	7	True				
ANR	2534652	IdentifierDecl	"max_count = r_anal_cc_max_arg ( anal , fcn -> cc )"		2534541	0					
ANR	2534653	IdentifierDeclType	int		2534541	0					
ANR	2534654	Identifier	max_count		2534541	1					
ANR	2534655	AssignmentExpression	"max_count = r_anal_cc_max_arg ( anal , fcn -> cc )"		2534541	2		=			
ANR	2534656	Identifier	max_count		2534541	0					
ANR	2534657	CallExpression	"r_anal_cc_max_arg ( anal , fcn -> cc )"		2534541	1					
ANR	2534658	Callee	r_anal_cc_max_arg		2534541	0					
ANR	2534659	Identifier	r_anal_cc_max_arg		2534541	0					
ANR	2534660	ArgumentList	anal		2534541	1					
ANR	2534661	Argument	anal		2534541	0					
ANR	2534662	Identifier	anal		2534541	0					
ANR	2534663	Argument	fcn -> cc		2534541	1					
ANR	2534664	PtrMemberAccess	fcn -> cc		2534541	0					
ANR	2534665	Identifier	fcn		2534541	0					
ANR	2534666	Identifier	cc		2534541	1					
ANR	2534667	IfStatement	if ( ! max_count || ( * count >= max_count ) )		2534541	8					
ANR	2534668	Condition	! max_count || ( * count >= max_count )	730:5:21800:21834	2534541	0	True				
ANR	2534669	OrExpression	! max_count || ( * count >= max_count )		2534541	0		||			
ANR	2534670	UnaryOperationExpression	! max_count		2534541	0					
ANR	2534671	UnaryOperator	!		2534541	0					
ANR	2534672	Identifier	max_count		2534541	1					
ANR	2534673	RelationalExpression	* count >= max_count		2534541	1		>=			
ANR	2534674	UnaryOperationExpression	* count		2534541	0					
ANR	2534675	UnaryOperator	*		2534541	0					
ANR	2534676	Identifier	count		2534541	1					
ANR	2534677	Identifier	max_count		2534541	1					
ANR	2534678	CompoundStatement		13:42:481:481	2534541	1					
ANR	2534679	ReturnStatement	return ;	731:2:21841:21847	2534541	0	True				
ANR	2534680	IfStatement	if ( fname )		2534541	9					
ANR	2534681	Condition	fname	733:5:21857:21861	2534541	0	True				
ANR	2534682	Identifier	fname		2534541	0					
ANR	2534683	CompoundStatement		17:2:512:543	2534541	1					
ANR	2534684	IdentifierDeclStatement	"char * tmp = strchr ( fname , '.' ) ;"	734:2:21868:21899	2534541	0	True				
ANR	2534685	IdentifierDecl	"* tmp = strchr ( fname , '.' )"		2534541	0					
ANR	2534686	IdentifierDeclType	char *		2534541	0					
ANR	2534687	Identifier	tmp		2534541	1					
ANR	2534688	AssignmentExpression	"* tmp = strchr ( fname , '.' )"		2534541	2		=			
ANR	2534689	Identifier	tmp		2534541	0					
ANR	2534690	CallExpression	"strchr ( fname , '.' )"		2534541	1					
ANR	2534691	Callee	strchr		2534541	0					
ANR	2534692	Identifier	strchr		2534541	0					
ANR	2534693	ArgumentList	fname		2534541	1					
ANR	2534694	Argument	fname		2534541	0					
ANR	2534695	Identifier	fname		2534541	0					
ANR	2534696	Argument	'.'		2534541	1					
ANR	2534697	PrimaryExpression	'.'		2534541	0					
ANR	2534698	IfStatement	if ( tmp )		2534541	1					
ANR	2534699	Condition	tmp	735:6:21907:21909	2534541	0	True				
ANR	2534700	Identifier	tmp		2534541	0					
ANR	2534701	CompoundStatement		18:11:556:556	2534541	1					
ANR	2534702	ExpressionStatement	fname = tmp + 1	736:3:21917:21932	2534541	0	True				
ANR	2534703	AssignmentExpression	fname = tmp + 1		2534541	0		=			
ANR	2534704	Identifier	fname		2534541	0					
ANR	2534705	AdditiveExpression	tmp + 1		2534541	1		+			
ANR	2534706	Identifier	tmp		2534541	0					
ANR	2534707	PrimaryExpression	1		2534541	1					
ANR	2534708	ExpressionStatement	"argc = r_type_func_args_count ( TDB , fname )"	738:2:21940:21982	2534541	2	True				
ANR	2534709	AssignmentExpression	"argc = r_type_func_args_count ( TDB , fname )"		2534541	0		=			
ANR	2534710	Identifier	argc		2534541	0					
ANR	2534711	CallExpression	"r_type_func_args_count ( TDB , fname )"		2534541	1					
ANR	2534712	Callee	r_type_func_args_count		2534541	0					
ANR	2534713	Identifier	r_type_func_args_count		2534541	0					
ANR	2534714	ArgumentList	TDB		2534541	1					
ANR	2534715	Argument	TDB		2534541	0					
ANR	2534716	Identifier	TDB		2534541	0					
ANR	2534717	Argument	fname		2534541	1					
ANR	2534718	Identifier	fname		2534541	0					
ANR	2534719	ForStatement	for ( i = 0 ; i < max_count ; i ++ )		2534541	10					
ANR	2534720	ForInit	i = 0 ;	740:6:21993:21998	2534541	0	True				
ANR	2534721	AssignmentExpression	i = 0		2534541	0		=			
ANR	2534722	Identifier	i		2534541	0					
ANR	2534723	PrimaryExpression	0		2534541	1					
ANR	2534724	Condition	i < max_count	740:13:22000:22012	2534541	1	True				
ANR	2534725	RelationalExpression	i < max_count		2534541	0		<			
ANR	2534726	Identifier	i		2534541	0					
ANR	2534727	Identifier	max_count		2534541	1					
ANR	2534728	PostIncDecOperationExpression	i ++	740:28:22015:22017	2534541	2	True				
ANR	2534729	Identifier	i		2534541	0					
ANR	2534730	IncDec	++		2534541	1					
ANR	2534731	CompoundStatement		24:2:668:722	2534541	3					
ANR	2534732	IdentifierDeclStatement	"const char * regname = r_anal_cc_arg ( anal , fcn -> cc , i ) ;"	741:2:22024:22078	2534541	0	True				
ANR	2534733	IdentifierDecl	"* regname = r_anal_cc_arg ( anal , fcn -> cc , i )"		2534541	0					
ANR	2534734	IdentifierDeclType	const char *		2534541	0					
ANR	2534735	Identifier	regname		2534541	1					
ANR	2534736	AssignmentExpression	"* regname = r_anal_cc_arg ( anal , fcn -> cc , i )"		2534541	2		=			
ANR	2534737	Identifier	regname		2534541	0					
ANR	2534738	CallExpression	"r_anal_cc_arg ( anal , fcn -> cc , i )"		2534541	1					
ANR	2534739	Callee	r_anal_cc_arg		2534541	0					
ANR	2534740	Identifier	r_anal_cc_arg		2534541	0					
ANR	2534741	ArgumentList	anal		2534541	1					
ANR	2534742	Argument	anal		2534541	0					
ANR	2534743	Identifier	anal		2534541	0					
ANR	2534744	Argument	fcn -> cc		2534541	1					
ANR	2534745	PtrMemberAccess	fcn -> cc		2534541	0					
ANR	2534746	Identifier	fcn		2534541	0					
ANR	2534747	Identifier	cc		2534541	1					
ANR	2534748	Argument	i		2534541	2					
ANR	2534749	Identifier	i		2534541	0					
ANR	2534750	IfStatement	if ( regname )		2534541	1					
ANR	2534751	Condition	regname	742:6:22086:22092	2534541	0	True				
ANR	2534752	Identifier	regname		2534541	0					
ANR	2534753	CompoundStatement		26:3:744:823	2534541	1					
ANR	2534754	IdentifierDeclStatement	"bool is_used_like_an_arg = is_used_like_arg ( regname , opsreg , opdreg , op , anal ) ;"	743:3:22100:22179	2534541	0	True				
ANR	2534755	IdentifierDecl	"is_used_like_an_arg = is_used_like_arg ( regname , opsreg , opdreg , op , anal )"		2534541	0					
ANR	2534756	IdentifierDeclType	bool		2534541	0					
ANR	2534757	Identifier	is_used_like_an_arg		2534541	1					
ANR	2534758	AssignmentExpression	"is_used_like_an_arg = is_used_like_arg ( regname , opsreg , opdreg , op , anal )"		2534541	2		=			
ANR	2534759	Identifier	is_used_like_an_arg		2534541	0					
ANR	2534760	CallExpression	"is_used_like_arg ( regname , opsreg , opdreg , op , anal )"		2534541	1					
ANR	2534761	Callee	is_used_like_arg		2534541	0					
ANR	2534762	Identifier	is_used_like_arg		2534541	0					
ANR	2534763	ArgumentList	regname		2534541	1					
ANR	2534764	Argument	regname		2534541	0					
ANR	2534765	Identifier	regname		2534541	0					
ANR	2534766	Argument	opsreg		2534541	1					
ANR	2534767	Identifier	opsreg		2534541	0					
ANR	2534768	Argument	opdreg		2534541	2					
ANR	2534769	Identifier	opdreg		2534541	0					
ANR	2534770	Argument	op		2534541	3					
ANR	2534771	Identifier	op		2534541	0					
ANR	2534772	Argument	anal		2534541	4					
ANR	2534773	Identifier	anal		2534541	0					
ANR	2534774	IfStatement	if ( reg_set [ i ] != 2 && is_used_like_an_arg )		2534541	1					
ANR	2534775	Condition	reg_set [ i ] != 2 && is_used_like_an_arg	744:7:22188:22225	2534541	0	True				
ANR	2534776	AndExpression	reg_set [ i ] != 2 && is_used_like_an_arg		2534541	0		&&			
ANR	2534777	EqualityExpression	reg_set [ i ] != 2		2534541	0		!=			
ANR	2534778	ArrayIndexing	reg_set [ i ]		2534541	0					
ANR	2534779	Identifier	reg_set		2534541	0					
ANR	2534780	Identifier	i		2534541	1					
ANR	2534781	PrimaryExpression	2		2534541	1					
ANR	2534782	Identifier	is_used_like_an_arg		2534541	1					
ANR	2534783	CompoundStatement		32:4:973:1022	2534541	1					
ANR	2534784	IdentifierDeclStatement	const char * vname = NULL ;	745:4:22234:22258	2534541	0	True				
ANR	2534785	IdentifierDecl	* vname = NULL		2534541	0					
ANR	2534786	IdentifierDeclType	const char *		2534541	0					
ANR	2534787	Identifier	vname		2534541	1					
ANR	2534788	AssignmentExpression	* vname = NULL		2534541	2		=			
ANR	2534789	Identifier	NULL		2534541	0					
ANR	2534790	Identifier	NULL		2534541	1					
ANR	2534791	IdentifierDeclStatement	char * type = NULL ;	746:4:22264:22281	2534541	1	True				
ANR	2534792	IdentifierDecl	* type = NULL		2534541	0					
ANR	2534793	IdentifierDeclType	char *		2534541	0					
ANR	2534794	Identifier	type		2534541	1					
ANR	2534795	AssignmentExpression	* type = NULL		2534541	2		=			
ANR	2534796	Identifier	NULL		2534541	0					
ANR	2534797	Identifier	NULL		2534541	1					
ANR	2534798	IdentifierDeclStatement	char * name = NULL ;	747:4:22287:22304	2534541	2	True				
ANR	2534799	IdentifierDecl	* name = NULL		2534541	0					
ANR	2534800	IdentifierDeclType	char *		2534541	0					
ANR	2534801	Identifier	name		2534541	1					
ANR	2534802	AssignmentExpression	* name = NULL		2534541	2		=			
ANR	2534803	Identifier	NULL		2534541	0					
ANR	2534804	Identifier	NULL		2534541	1					
ANR	2534805	IdentifierDeclStatement	int delta = 0 ;	748:4:22310:22323	2534541	3	True				
ANR	2534806	IdentifierDecl	delta = 0		2534541	0					
ANR	2534807	IdentifierDeclType	int		2534541	0					
ANR	2534808	Identifier	delta		2534541	1					
ANR	2534809	AssignmentExpression	delta = 0		2534541	2		=			
ANR	2534810	Identifier	delta		2534541	0					
ANR	2534811	PrimaryExpression	0		2534541	1					
ANR	2534812	IdentifierDeclStatement	"RRegItem * ri = r_reg_get ( anal -> reg , regname , - 1 ) ;"	749:4:22329:22378	2534541	4	True				
ANR	2534813	IdentifierDecl	"* ri = r_reg_get ( anal -> reg , regname , - 1 )"		2534541	0					
ANR	2534814	IdentifierDeclType	RRegItem *		2534541	0					
ANR	2534815	Identifier	ri		2534541	1					
ANR	2534816	AssignmentExpression	"* ri = r_reg_get ( anal -> reg , regname , - 1 )"		2534541	2		=			
ANR	2534817	Identifier	ri		2534541	0					
ANR	2534818	CallExpression	"r_reg_get ( anal -> reg , regname , - 1 )"		2534541	1					
ANR	2534819	Callee	r_reg_get		2534541	0					
ANR	2534820	Identifier	r_reg_get		2534541	0					
ANR	2534821	ArgumentList	anal -> reg		2534541	1					
ANR	2534822	Argument	anal -> reg		2534541	0					
ANR	2534823	PtrMemberAccess	anal -> reg		2534541	0					
ANR	2534824	Identifier	anal		2534541	0					
ANR	2534825	Identifier	reg		2534541	1					
ANR	2534826	Argument	regname		2534541	1					
ANR	2534827	Identifier	regname		2534541	0					
ANR	2534828	Argument	- 1		2534541	2					
ANR	2534829	UnaryOperationExpression	- 1		2534541	0					
ANR	2534830	UnaryOperator	-		2534541	0					
ANR	2534831	PrimaryExpression	1		2534541	1					
ANR	2534832	IfStatement	if ( ri )		2534541	5					
ANR	2534833	Condition	ri	750:8:22388:22389	2534541	0	True				
ANR	2534834	Identifier	ri		2534541	0					
ANR	2534835	CompoundStatement		33:12:1036:1036	2534541	1					
ANR	2534836	ExpressionStatement	delta = ri -> index	751:5:22399:22416	2534541	0	True				
ANR	2534837	AssignmentExpression	delta = ri -> index		2534541	0		=			
ANR	2534838	Identifier	delta		2534541	0					
ANR	2534839	PtrMemberAccess	ri -> index		2534541	1					
ANR	2534840	Identifier	ri		2534541	0					
ANR	2534841	Identifier	index		2534541	1					
ANR	2534842	IfStatement	if ( ( i < argc ) && fname )		2534541	6					
ANR	2534843	Condition	( i < argc ) && fname	753:8:22432:22450	2534541	0	True				
ANR	2534844	AndExpression	( i < argc ) && fname		2534541	0		&&			
ANR	2534845	RelationalExpression	i < argc		2534541	0		<			
ANR	2534846	Identifier	i		2534541	0					
ANR	2534847	Identifier	argc		2534541	1					
ANR	2534848	Identifier	fname		2534541	1					
ANR	2534849	CompoundStatement		36:29:1097:1097	2534541	1					
ANR	2534850	ExpressionStatement	"type = r_type_func_args_type ( TDB , fname , i )"	754:5:22460:22504	2534541	0	True				
ANR	2534851	AssignmentExpression	"type = r_type_func_args_type ( TDB , fname , i )"		2534541	0		=			
ANR	2534852	Identifier	type		2534541	0					
ANR	2534853	CallExpression	"r_type_func_args_type ( TDB , fname , i )"		2534541	1					
ANR	2534854	Callee	r_type_func_args_type		2534541	0					
ANR	2534855	Identifier	r_type_func_args_type		2534541	0					
ANR	2534856	ArgumentList	TDB		2534541	1					
ANR	2534857	Argument	TDB		2534541	0					
ANR	2534858	Identifier	TDB		2534541	0					
ANR	2534859	Argument	fname		2534541	1					
ANR	2534860	Identifier	fname		2534541	0					
ANR	2534861	Argument	i		2534541	2					
ANR	2534862	Identifier	i		2534541	0					
ANR	2534863	ExpressionStatement	"vname = r_type_func_args_name ( TDB , fname , i )"	755:5:22511:22556	2534541	1	True				
ANR	2534864	AssignmentExpression	"vname = r_type_func_args_name ( TDB , fname , i )"		2534541	0		=			
ANR	2534865	Identifier	vname		2534541	0					
ANR	2534866	CallExpression	"r_type_func_args_name ( TDB , fname , i )"		2534541	1					
ANR	2534867	Callee	r_type_func_args_name		2534541	0					
ANR	2534868	Identifier	r_type_func_args_name		2534541	0					
ANR	2534869	ArgumentList	TDB		2534541	1					
ANR	2534870	Argument	TDB		2534541	0					
ANR	2534871	Identifier	TDB		2534541	0					
ANR	2534872	Argument	fname		2534541	1					
ANR	2534873	Identifier	fname		2534541	0					
ANR	2534874	Argument	i		2534541	2					
ANR	2534875	Identifier	i		2534541	0					
ANR	2534876	IfStatement	if ( ! vname )		2534541	7					
ANR	2534877	Condition	! vname	757:8:22572:22577	2534541	0	True				
ANR	2534878	UnaryOperationExpression	! vname		2534541	0					
ANR	2534879	UnaryOperator	!		2534541	0					
ANR	2534880	Identifier	vname		2534541	1					
ANR	2534881	CompoundStatement		40:16:1224:1224	2534541	1					
ANR	2534882	ExpressionStatement	"name = r_str_newf ( ""%s%d"" , ""arg"" , i + 1 )"	758:5:22587:22627	2534541	0	True				
ANR	2534883	AssignmentExpression	"name = r_str_newf ( ""%s%d"" , ""arg"" , i + 1 )"		2534541	0		=			
ANR	2534884	Identifier	name		2534541	0					
ANR	2534885	CallExpression	"r_str_newf ( ""%s%d"" , ""arg"" , i + 1 )"		2534541	1					
ANR	2534886	Callee	r_str_newf		2534541	0					
ANR	2534887	Identifier	r_str_newf		2534541	0					
ANR	2534888	ArgumentList	"""%s%d"""		2534541	1					
ANR	2534889	Argument	"""%s%d"""		2534541	0					
ANR	2534890	PrimaryExpression	"""%s%d"""		2534541	0					
ANR	2534891	Argument	"""arg"""		2534541	1					
ANR	2534892	PrimaryExpression	"""arg"""		2534541	0					
ANR	2534893	Argument	i + 1		2534541	2					
ANR	2534894	AdditiveExpression	i + 1		2534541	0		+			
ANR	2534895	Identifier	i		2534541	0					
ANR	2534896	PrimaryExpression	1		2534541	1					
ANR	2534897	ExpressionStatement	vname = name	759:5:22634:22646	2534541	1	True				
ANR	2534898	AssignmentExpression	vname = name		2534541	0		=			
ANR	2534899	Identifier	vname		2534541	0					
ANR	2534900	Identifier	name		2534541	1					
ANR	2534901	ExpressionStatement	"r_anal_var_add ( anal , fcn -> addr , 1 , delta , R_ANAL_VAR_KIND_REG , type , anal -> bits / 8 , 1 , vname )"	761:4:22658:22759	2534541	8	True				
ANR	2534902	CallExpression	"r_anal_var_add ( anal , fcn -> addr , 1 , delta , R_ANAL_VAR_KIND_REG , type , anal -> bits / 8 , 1 , vname )"		2534541	0					
ANR	2534903	Callee	r_anal_var_add		2534541	0					
ANR	2534904	Identifier	r_anal_var_add		2534541	0					
ANR	2534905	ArgumentList	anal		2534541	1					
ANR	2534906	Argument	anal		2534541	0					
ANR	2534907	Identifier	anal		2534541	0					
ANR	2534908	Argument	fcn -> addr		2534541	1					
ANR	2534909	PtrMemberAccess	fcn -> addr		2534541	0					
ANR	2534910	Identifier	fcn		2534541	0					
ANR	2534911	Identifier	addr		2534541	1					
ANR	2534912	Argument	1		2534541	2					
ANR	2534913	PrimaryExpression	1		2534541	0					
ANR	2534914	Argument	delta		2534541	3					
ANR	2534915	Identifier	delta		2534541	0					
ANR	2534916	Argument	R_ANAL_VAR_KIND_REG		2534541	4					
ANR	2534917	Identifier	R_ANAL_VAR_KIND_REG		2534541	0					
ANR	2534918	Argument	type		2534541	5					
ANR	2534919	Identifier	type		2534541	0					
ANR	2534920	Argument	anal -> bits / 8		2534541	6					
ANR	2534921	MultiplicativeExpression	anal -> bits / 8		2534541	0		/			
ANR	2534922	PtrMemberAccess	anal -> bits		2534541	0					
ANR	2534923	Identifier	anal		2534541	0					
ANR	2534924	Identifier	bits		2534541	1					
ANR	2534925	PrimaryExpression	8		2534541	1					
ANR	2534926	Argument	1		2534541	7					
ANR	2534927	PrimaryExpression	1		2534541	0					
ANR	2534928	Argument	vname		2534541	8					
ANR	2534929	Identifier	vname		2534541	0					
ANR	2534930	IfStatement	if ( op -> var && op -> var -> kind != R_ANAL_VAR_KIND_REG )		2534541	9					
ANR	2534931	Condition	op -> var && op -> var -> kind != R_ANAL_VAR_KIND_REG	763:8:22769:22815	2534541	0	True				
ANR	2534932	AndExpression	op -> var && op -> var -> kind != R_ANAL_VAR_KIND_REG		2534541	0		&&			
ANR	2534933	PtrMemberAccess	op -> var		2534541	0					
ANR	2534934	Identifier	op		2534541	0					
ANR	2534935	Identifier	var		2534541	1					
ANR	2534936	EqualityExpression	op -> var -> kind != R_ANAL_VAR_KIND_REG		2534541	1		!=			
ANR	2534937	PtrMemberAccess	op -> var -> kind		2534541	0					
ANR	2534938	PtrMemberAccess	op -> var		2534541	0					
ANR	2534939	Identifier	op		2534541	0					
ANR	2534940	Identifier	var		2534541	1					
ANR	2534941	Identifier	kind		2534541	1					
ANR	2534942	Identifier	R_ANAL_VAR_KIND_REG		2534541	1					
ANR	2534943	CompoundStatement		46:57:1462:1462	2534541	1					
ANR	2534944	ExpressionStatement	"r_anal_var_link ( anal , op -> addr , op -> var )"	764:5:22825:22866	2534541	0	True				
ANR	2534945	CallExpression	"r_anal_var_link ( anal , op -> addr , op -> var )"		2534541	0					
ANR	2534946	Callee	r_anal_var_link		2534541	0					
ANR	2534947	Identifier	r_anal_var_link		2534541	0					
ANR	2534948	ArgumentList	anal		2534541	1					
ANR	2534949	Argument	anal		2534541	0					
ANR	2534950	Identifier	anal		2534541	0					
ANR	2534951	Argument	op -> addr		2534541	1					
ANR	2534952	PtrMemberAccess	op -> addr		2534541	0					
ANR	2534953	Identifier	op		2534541	0					
ANR	2534954	Identifier	addr		2534541	1					
ANR	2534955	Argument	op -> var		2534541	2					
ANR	2534956	PtrMemberAccess	op -> var		2534541	0					
ANR	2534957	Identifier	op		2534541	0					
ANR	2534958	Identifier	var		2534541	1					
ANR	2534959	ExpressionStatement	"r_anal_var_access ( anal , fcn -> addr , R_ANAL_VAR_KIND_REG , 1 , delta , 0 , op -> addr )"	766:4:22878:22957	2534541	10	True				
ANR	2534960	CallExpression	"r_anal_var_access ( anal , fcn -> addr , R_ANAL_VAR_KIND_REG , 1 , delta , 0 , op -> addr )"		2534541	0					
ANR	2534961	Callee	r_anal_var_access		2534541	0					
ANR	2534962	Identifier	r_anal_var_access		2534541	0					
ANR	2534963	ArgumentList	anal		2534541	1					
ANR	2534964	Argument	anal		2534541	0					
ANR	2534965	Identifier	anal		2534541	0					
ANR	2534966	Argument	fcn -> addr		2534541	1					
ANR	2534967	PtrMemberAccess	fcn -> addr		2534541	0					
ANR	2534968	Identifier	fcn		2534541	0					
ANR	2534969	Identifier	addr		2534541	1					
ANR	2534970	Argument	R_ANAL_VAR_KIND_REG		2534541	2					
ANR	2534971	Identifier	R_ANAL_VAR_KIND_REG		2534541	0					
ANR	2534972	Argument	1		2534541	3					
ANR	2534973	PrimaryExpression	1		2534541	0					
ANR	2534974	Argument	delta		2534541	4					
ANR	2534975	Identifier	delta		2534541	0					
ANR	2534976	Argument	0		2534541	5					
ANR	2534977	PrimaryExpression	0		2534541	0					
ANR	2534978	Argument	op -> addr		2534541	6					
ANR	2534979	PtrMemberAccess	op -> addr		2534541	0					
ANR	2534980	Identifier	op		2534541	0					
ANR	2534981	Identifier	addr		2534541	1					
ANR	2534982	ExpressionStatement	"r_meta_set_string ( anal , R_META_TYPE_VARTYPE , op -> addr , vname )"	767:4:22963:23025	2534541	11	True				
ANR	2534983	CallExpression	"r_meta_set_string ( anal , R_META_TYPE_VARTYPE , op -> addr , vname )"		2534541	0					
ANR	2534984	Callee	r_meta_set_string		2534541	0					
ANR	2534985	Identifier	r_meta_set_string		2534541	0					
ANR	2534986	ArgumentList	anal		2534541	1					
ANR	2534987	Argument	anal		2534541	0					
ANR	2534988	Identifier	anal		2534541	0					
ANR	2534989	Argument	R_META_TYPE_VARTYPE		2534541	1					
ANR	2534990	Identifier	R_META_TYPE_VARTYPE		2534541	0					
ANR	2534991	Argument	op -> addr		2534541	2					
ANR	2534992	PtrMemberAccess	op -> addr		2534541	0					
ANR	2534993	Identifier	op		2534541	0					
ANR	2534994	Identifier	addr		2534541	1					
ANR	2534995	Argument	vname		2534541	3					
ANR	2534996	Identifier	vname		2534541	0					
ANR	2534997	ExpressionStatement	free ( name )	768:4:23031:23042	2534541	12	True				
ANR	2534998	CallExpression	free ( name )		2534541	0					
ANR	2534999	Callee	free		2534541	0					
ANR	2535000	Identifier	free		2534541	0					
ANR	2535001	ArgumentList	name		2534541	1					
ANR	2535002	Argument	name		2534541	0					
ANR	2535003	Identifier	name		2534541	0					
ANR	2535004	ExpressionStatement	free ( type )	769:4:23048:23059	2534541	13	True				
ANR	2535005	CallExpression	free ( type )		2534541	0					
ANR	2535006	Callee	free		2534541	0					
ANR	2535007	Identifier	free		2534541	0					
ANR	2535008	ArgumentList	type		2534541	1					
ANR	2535009	Argument	type		2534541	0					
ANR	2535010	Identifier	type		2534541	0					
ANR	2535011	ExpressionStatement	( * count ) ++	770:4:23065:23075	2534541	14	True				
ANR	2535012	PostIncDecOperationExpression	( * count ) ++		2534541	0					
ANR	2535013	UnaryOperationExpression	* count		2534541	0					
ANR	2535014	UnaryOperator	*		2534541	0					
ANR	2535015	Identifier	count		2534541	1					
ANR	2535016	IncDec	++		2534541	1					
ANR	2535017	ElseStatement	else		2534541	0					
ANR	2535018	CompoundStatement		54:10:1731:1731	2534541	0					
ANR	2535019	IfStatement	"if ( is_reg_in_src ( regname , anal , op ) )"		2534541	0					
ANR	2535020	Condition	"is_reg_in_src ( regname , anal , op )"	772:8:23097:23129	2534541	0	True				
ANR	2535021	CallExpression	"is_reg_in_src ( regname , anal , op )"		2534541	0					
ANR	2535022	Callee	is_reg_in_src		2534541	0					
ANR	2535023	Identifier	is_reg_in_src		2534541	0					
ANR	2535024	ArgumentList	regname		2534541	1					
ANR	2535025	Argument	regname		2534541	0					
ANR	2535026	Identifier	regname		2534541	0					
ANR	2535027	Argument	anal		2534541	1					
ANR	2535028	Identifier	anal		2534541	0					
ANR	2535029	Argument	op		2534541	2					
ANR	2535030	Identifier	op		2534541	0					
ANR	2535031	CompoundStatement		55:43:1776:1776	2534541	1					
ANR	2535032	ExpressionStatement	reg_set [ i ] = 2	773:5:23139:23153	2534541	0	True				
ANR	2535033	AssignmentExpression	reg_set [ i ] = 2		2534541	0		=			
ANR	2535034	ArrayIndexing	reg_set [ i ]		2534541	0					
ANR	2535035	Identifier	reg_set		2534541	0					
ANR	2535036	Identifier	i		2534541	1					
ANR	2535037	PrimaryExpression	2		2534541	1					
ANR	2535038	IfStatement	"if ( STR_EQUAL ( opdreg , regname ) )"		2534541	1					
ANR	2535039	Condition	"STR_EQUAL ( opdreg , regname )"	775:8:23169:23195	2534541	0	True				
ANR	2535040	CallExpression	"STR_EQUAL ( opdreg , regname )"		2534541	0					
ANR	2535041	Callee	STR_EQUAL		2534541	0					
ANR	2535042	Identifier	STR_EQUAL		2534541	0					
ANR	2535043	ArgumentList	opdreg		2534541	1					
ANR	2535044	Argument	opdreg		2534541	0					
ANR	2535045	Identifier	opdreg		2534541	0					
ANR	2535046	Argument	regname		2534541	1					
ANR	2535047	Identifier	regname		2534541	0					
ANR	2535048	CompoundStatement		58:37:1842:1842	2534541	1					
ANR	2535049	ExpressionStatement	reg_set [ i ] = 2	776:5:23205:23219	2534541	0	True				
ANR	2535050	AssignmentExpression	reg_set [ i ] = 2		2534541	0		=			
ANR	2535051	ArrayIndexing	reg_set [ i ]		2534541	0					
ANR	2535052	Identifier	reg_set		2534541	0					
ANR	2535053	Identifier	i		2534541	1					
ANR	2535054	PrimaryExpression	2		2534541	1					
ANR	2535055	ContinueStatement	continue ;	778:4:23231:23239	2534541	2	True				
ANR	2535056	IfStatement	"if ( is_reg_in_src ( regname , anal , op ) )"		2534541	2					
ANR	2535057	Condition	"is_reg_in_src ( regname , anal , op )"	780:7:23253:23285	2534541	0	True				
ANR	2535058	CallExpression	"is_reg_in_src ( regname , anal , op )"		2534541	0					
ANR	2535059	Callee	is_reg_in_src		2534541	0					
ANR	2535060	Identifier	is_reg_in_src		2534541	0					
ANR	2535061	ArgumentList	regname		2534541	1					
ANR	2535062	Argument	regname		2534541	0					
ANR	2535063	Identifier	regname		2534541	0					
ANR	2535064	Argument	anal		2534541	1					
ANR	2535065	Identifier	anal		2534541	0					
ANR	2535066	Argument	op		2534541	2					
ANR	2535067	Identifier	op		2534541	0					
ANR	2535068	CompoundStatement		63:42:1932:1932	2534541	1					
ANR	2535069	ExpressionStatement	reg_set [ i ] = 1	781:4:23294:23308	2534541	0	True				
ANR	2535070	AssignmentExpression	reg_set [ i ] = 1		2534541	0		=			
ANR	2535071	ArrayIndexing	reg_set [ i ]		2534541	0					
ANR	2535072	Identifier	reg_set		2534541	0					
ANR	2535073	Identifier	i		2534541	1					
ANR	2535074	PrimaryExpression	1		2534541	1					
ANR	2535075	IfStatement	"if ( STR_EQUAL ( regname , opdreg ) )"		2534541	3					
ANR	2535076	Condition	"STR_EQUAL ( regname , opdreg )"	783:7:23322:23348	2534541	0	True				
ANR	2535077	CallExpression	"STR_EQUAL ( regname , opdreg )"		2534541	0					
ANR	2535078	Callee	STR_EQUAL		2534541	0					
ANR	2535079	Identifier	STR_EQUAL		2534541	0					
ANR	2535080	ArgumentList	regname		2534541	1					
ANR	2535081	Argument	regname		2534541	0					
ANR	2535082	Identifier	regname		2534541	0					
ANR	2535083	Argument	opdreg		2534541	1					
ANR	2535084	Identifier	opdreg		2534541	0					
ANR	2535085	CompoundStatement		66:36:1995:1995	2534541	1					
ANR	2535086	ExpressionStatement	reg_set [ i ] = 1	784:4:23357:23371	2534541	0	True				
ANR	2535087	AssignmentExpression	reg_set [ i ] = 1		2534541	0		=			
ANR	2535088	ArrayIndexing	reg_set [ i ]		2534541	0					
ANR	2535089	Identifier	reg_set		2534541	0					
ANR	2535090	Identifier	i		2534541	1					
ANR	2535091	PrimaryExpression	1		2534541	1					
ANR	2535092	ReturnType	R_API void		2534541	1					
ANR	2535093	Identifier	r_anal_extract_rarg		2534541	2					
ANR	2535094	ParameterList	"RAnal * anal , RAnalOp * op , RAnalFunction * fcn , int * reg_set , int * count"		2534541	3					
ANR	2535095	Parameter	RAnal * anal	718:31:21283:21293	2534541	0	True				
ANR	2535096	ParameterType	RAnal *		2534541	0					
ANR	2535097	Identifier	anal		2534541	1					
ANR	2535098	Parameter	RAnalOp * op	718:44:21296:21306	2534541	1	True				
ANR	2535099	ParameterType	RAnalOp *		2534541	0					
ANR	2535100	Identifier	op		2534541	1					
ANR	2535101	Parameter	RAnalFunction * fcn	718:57:21309:21326	2534541	2	True				
ANR	2535102	ParameterType	RAnalFunction *		2534541	0					
ANR	2535103	Identifier	fcn		2534541	1					
ANR	2535104	Parameter	int * reg_set	718:77:21329:21340	2534541	3	True				
ANR	2535105	ParameterType	int *		2534541	0					
ANR	2535106	Identifier	reg_set		2534541	1					
ANR	2535107	Parameter	int * count	718:91:21343:21352	2534541	4	True				
ANR	2535108	ParameterType	int *		2534541	0					
ANR	2535109	Identifier	count		2534541	1					
ANR	2535110	CFGEntryNode	ENTRY		2534541		True				
ANR	2535111	CFGExitNode	EXIT		2534541		True				
ANR	2535112	Symbol	anal -> reg		2534541						
ANR	2535113	Symbol	* op		2534541						
ANR	2535114	Symbol	* fcn		2534541						
ANR	2535115	Symbol	is_reg_in_src		2534541						
ANR	2535116	Symbol	fcn -> name		2534541						
ANR	2535117	Symbol	STR_EQUAL		2534541						
ANR	2535118	Symbol	delta		2534541						
ANR	2535119	Symbol	strchr		2534541						
ANR	2535120	Symbol	type		2534541						
ANR	2535121	Symbol	reg_set		2534541						
ANR	2535122	Symbol	* op -> var		2534541						
ANR	2535123	Symbol	* count		2534541						
ANR	2535124	Symbol	r_type_func_args_type		2534541						
ANR	2535125	Symbol	tmp		2534541						
ANR	2535126	Symbol	ri -> index		2534541						
ANR	2535127	Symbol	r_reg_get		2534541						
ANR	2535128	Symbol	fname		2534541						
ANR	2535129	Symbol	regname		2534541						
ANR	2535130	Symbol	NULL		2534541						
ANR	2535131	Symbol	count		2534541						
ANR	2535132	Symbol	r_type_func_args_name		2534541						
ANR	2535133	Symbol	op -> src		2534541						
ANR	2535134	Symbol	anal -> bits		2534541						
ANR	2535135	Symbol	vname		2534541						
ANR	2535136	Symbol	op -> var -> kind		2534541						
ANR	2535137	Symbol	anal		2534541						
ANR	2535138	Symbol	R_META_TYPE_VARTYPE		2534541						
ANR	2535139	Symbol	ri		2534541						
ANR	2535140	Symbol	name		2534541						
ANR	2535141	Symbol	r_anal_cc_max_arg		2534541						
ANR	2535142	Symbol	anal -> sdb_types		2534541						
ANR	2535143	Symbol	r_str_newf		2534541						
ANR	2535144	Symbol	op -> dst		2534541						
ANR	2535145	Symbol	* * op		2534541						
ANR	2535146	Symbol	fcn		2534541						
ANR	2535147	Symbol	max_count		2534541						
ANR	2535148	Symbol	opdreg		2534541						
ANR	2535149	Symbol	* anal		2534541						
ANR	2535150	Symbol	TDB		2534541						
ANR	2535151	Symbol	r_type_func_args_count		2534541						
ANR	2535152	Symbol	fcn -> cc		2534541						
ANR	2535153	Symbol	is_used_like_an_arg		2534541						
ANR	2535154	Symbol	r_anal_cc_arg		2534541						
ANR	2535155	Symbol	* reg_set		2534541						
ANR	2535156	Symbol	R_ANAL_VAR_KIND_REG		2534541						
ANR	2535157	Symbol	argc		2534541						
ANR	2535158	Symbol	op		2534541						
ANR	2535159	Symbol	op -> addr		2534541						
ANR	2535160	Symbol	opsreg		2534541						
ANR	2535161	Symbol	i		2534541						
ANR	2535162	Symbol	is_used_like_arg		2534541						
ANR	2535163	Symbol	op -> var		2534541						
ANR	2535164	Symbol	* op -> src		2534541						
ANR	2535165	Symbol	* i		2534541						
ANR	2535166	Symbol	get_regname		2534541						
ANR	2535167	Symbol	fcn -> addr		2534541						
ANR	2535168	Symbol	* ri		2534541						
ANR	2535169	Function	r_anal_extract_vars	790:0:23388:23739							
ANR	2535170	FunctionDef	"r_anal_extract_vars (RAnal * anal , RAnalFunction * fcn , RAnalOp * op)"		2535169	0					
ANR	2535171	CompoundStatement		790:77:23465:23739	2535169	0					
ANR	2535172	ExpressionStatement	r_return_if_fail ( anal && fcn && op )	791:1:23468:23504	2535169	0	True				
ANR	2535173	CallExpression	r_return_if_fail ( anal && fcn && op )		2535169	0					
ANR	2535174	Callee	r_return_if_fail		2535169	0					
ANR	2535175	Identifier	r_return_if_fail		2535169	0					
ANR	2535176	ArgumentList	anal && fcn && op		2535169	1					
ANR	2535177	Argument	anal && fcn && op		2535169	0					
ANR	2535178	AndExpression	anal && fcn && op		2535169	0		&&			
ANR	2535179	Identifier	anal		2535169	0					
ANR	2535180	AndExpression	fcn && op		2535169	1		&&			
ANR	2535181	Identifier	fcn		2535169	0					
ANR	2535182	Identifier	op		2535169	1					
ANR	2535183	IdentifierDeclStatement	const char * BP = anal -> reg -> name [ R_REG_NAME_BP ] ;	793:1:23508:23555	2535169	1	True				
ANR	2535184	IdentifierDecl	* BP = anal -> reg -> name [ R_REG_NAME_BP ]		2535169	0					
ANR	2535185	IdentifierDeclType	const char *		2535169	0					
ANR	2535186	Identifier	BP		2535169	1					
ANR	2535187	AssignmentExpression	* BP = anal -> reg -> name [ R_REG_NAME_BP ]		2535169	2		=			
ANR	2535188	Identifier	BP		2535169	0					
ANR	2535189	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_BP ]		2535169	1					
ANR	2535190	PtrMemberAccess	anal -> reg -> name		2535169	0					
ANR	2535191	PtrMemberAccess	anal -> reg		2535169	0					
ANR	2535192	Identifier	anal		2535169	0					
ANR	2535193	Identifier	reg		2535169	1					
ANR	2535194	Identifier	name		2535169	1					
ANR	2535195	Identifier	R_REG_NAME_BP		2535169	1					
ANR	2535196	IdentifierDeclStatement	const char * SP = anal -> reg -> name [ R_REG_NAME_SP ] ;	794:1:23558:23605	2535169	2	True				
ANR	2535197	IdentifierDecl	* SP = anal -> reg -> name [ R_REG_NAME_SP ]		2535169	0					
ANR	2535198	IdentifierDeclType	const char *		2535169	0					
ANR	2535199	Identifier	SP		2535169	1					
ANR	2535200	AssignmentExpression	* SP = anal -> reg -> name [ R_REG_NAME_SP ]		2535169	2		=			
ANR	2535201	Identifier	SP		2535169	0					
ANR	2535202	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_SP ]		2535169	1					
ANR	2535203	PtrMemberAccess	anal -> reg -> name		2535169	0					
ANR	2535204	PtrMemberAccess	anal -> reg		2535169	0					
ANR	2535205	Identifier	anal		2535169	0					
ANR	2535206	Identifier	reg		2535169	1					
ANR	2535207	Identifier	name		2535169	1					
ANR	2535208	Identifier	R_REG_NAME_SP		2535169	1					
ANR	2535209	ExpressionStatement	"extract_arg ( anal , fcn , op , BP , ""+"" , 'b' )"	795:1:23608:23649	2535169	3	True				
ANR	2535210	CallExpression	"extract_arg ( anal , fcn , op , BP , ""+"" , 'b' )"		2535169	0					
ANR	2535211	Callee	extract_arg		2535169	0					
ANR	2535212	Identifier	extract_arg		2535169	0					
ANR	2535213	ArgumentList	anal		2535169	1					
ANR	2535214	Argument	anal		2535169	0					
ANR	2535215	Identifier	anal		2535169	0					
ANR	2535216	Argument	fcn		2535169	1					
ANR	2535217	Identifier	fcn		2535169	0					
ANR	2535218	Argument	op		2535169	2					
ANR	2535219	Identifier	op		2535169	0					
ANR	2535220	Argument	BP		2535169	3					
ANR	2535221	Identifier	BP		2535169	0					
ANR	2535222	Argument	"""+"""		2535169	4					
ANR	2535223	PrimaryExpression	"""+"""		2535169	0					
ANR	2535224	Argument	'b'		2535169	5					
ANR	2535225	PrimaryExpression	'b'		2535169	0					
ANR	2535226	ExpressionStatement	"extract_arg ( anal , fcn , op , BP , ""-"" , 'b' )"	796:1:23652:23693	2535169	4	True				
ANR	2535227	CallExpression	"extract_arg ( anal , fcn , op , BP , ""-"" , 'b' )"		2535169	0					
ANR	2535228	Callee	extract_arg		2535169	0					
ANR	2535229	Identifier	extract_arg		2535169	0					
ANR	2535230	ArgumentList	anal		2535169	1					
ANR	2535231	Argument	anal		2535169	0					
ANR	2535232	Identifier	anal		2535169	0					
ANR	2535233	Argument	fcn		2535169	1					
ANR	2535234	Identifier	fcn		2535169	0					
ANR	2535235	Argument	op		2535169	2					
ANR	2535236	Identifier	op		2535169	0					
ANR	2535237	Argument	BP		2535169	3					
ANR	2535238	Identifier	BP		2535169	0					
ANR	2535239	Argument	"""-"""		2535169	4					
ANR	2535240	PrimaryExpression	"""-"""		2535169	0					
ANR	2535241	Argument	'b'		2535169	5					
ANR	2535242	PrimaryExpression	'b'		2535169	0					
ANR	2535243	ExpressionStatement	"extract_arg ( anal , fcn , op , SP , ""+"" , 's' )"	797:1:23696:23737	2535169	5	True				
ANR	2535244	CallExpression	"extract_arg ( anal , fcn , op , SP , ""+"" , 's' )"		2535169	0					
ANR	2535245	Callee	extract_arg		2535169	0					
ANR	2535246	Identifier	extract_arg		2535169	0					
ANR	2535247	ArgumentList	anal		2535169	1					
ANR	2535248	Argument	anal		2535169	0					
ANR	2535249	Identifier	anal		2535169	0					
ANR	2535250	Argument	fcn		2535169	1					
ANR	2535251	Identifier	fcn		2535169	0					
ANR	2535252	Argument	op		2535169	2					
ANR	2535253	Identifier	op		2535169	0					
ANR	2535254	Argument	SP		2535169	3					
ANR	2535255	Identifier	SP		2535169	0					
ANR	2535256	Argument	"""+"""		2535169	4					
ANR	2535257	PrimaryExpression	"""+"""		2535169	0					
ANR	2535258	Argument	's'		2535169	5					
ANR	2535259	PrimaryExpression	's'		2535169	0					
ANR	2535260	ReturnType	R_API void		2535169	1					
ANR	2535261	Identifier	r_anal_extract_vars		2535169	2					
ANR	2535262	ParameterList	"RAnal * anal , RAnalFunction * fcn , RAnalOp * op"		2535169	3					
ANR	2535263	Parameter	RAnal * anal	790:31:23419:23429	2535169	0	True				
ANR	2535264	ParameterType	RAnal *		2535169	0					
ANR	2535265	Identifier	anal		2535169	1					
ANR	2535266	Parameter	RAnalFunction * fcn	790:44:23432:23449	2535169	1	True				
ANR	2535267	ParameterType	RAnalFunction *		2535169	0					
ANR	2535268	Identifier	fcn		2535169	1					
ANR	2535269	Parameter	RAnalOp * op	790:64:23452:23462	2535169	2	True				
ANR	2535270	ParameterType	RAnalOp *		2535169	0					
ANR	2535271	Identifier	op		2535169	1					
ANR	2535272	CFGEntryNode	ENTRY		2535169		True				
ANR	2535273	CFGExitNode	EXIT		2535169		True				
ANR	2535274	Symbol	R_REG_NAME_BP		2535169						
ANR	2535275	Symbol	* R_REG_NAME_SP		2535169						
ANR	2535276	Symbol	op		2535169						
ANR	2535277	Symbol	anal -> reg		2535169						
ANR	2535278	Symbol	BP		2535169						
ANR	2535279	Symbol	fcn		2535169						
ANR	2535280	Symbol	* * anal		2535169						
ANR	2535281	Symbol	* anal		2535169						
ANR	2535282	Symbol	R_REG_NAME_SP		2535169						
ANR	2535283	Symbol	anal		2535169						
ANR	2535284	Symbol	* anal -> reg		2535169						
ANR	2535285	Symbol	* * * anal		2535169						
ANR	2535286	Symbol	* R_REG_NAME_BP		2535169						
ANR	2535287	Symbol	* * anal -> reg		2535169						
ANR	2535288	Symbol	* anal -> reg -> name		2535169						
ANR	2535289	Symbol	SP		2535169						
ANR	2535290	Symbol	anal -> reg -> name		2535169						
ANR	2535291	Function	var_generate_list	800:0:23742:25457							
ANR	2535292	FunctionDef	"var_generate_list (RAnal * a , RAnalFunction * fcn , int kind , bool dynamicVars)"		2535291	0					
ANR	2535293	CompoundStatement		800:90:23832:25457	2535291	0					
ANR	2535294	IfStatement	if ( ! a || ! fcn )		2535291	0					
ANR	2535295	Condition	! a || ! fcn	801:5:23839:23848	2535291	0	True				
ANR	2535296	OrExpression	! a || ! fcn		2535291	0		||			
ANR	2535297	UnaryOperationExpression	! a		2535291	0					
ANR	2535298	UnaryOperator	!		2535291	0					
ANR	2535299	Identifier	a		2535291	1					
ANR	2535300	UnaryOperationExpression	! fcn		2535291	1					
ANR	2535301	UnaryOperator	!		2535291	0					
ANR	2535302	Identifier	fcn		2535291	1					
ANR	2535303	CompoundStatement		2:17:18:18	2535291	1					
ANR	2535304	ReturnStatement	return NULL ;	802:2:23855:23866	2535291	0	True				
ANR	2535305	Identifier	NULL		2535291	0					
ANR	2535306	IdentifierDeclStatement	RList * list = r_list_newf ( ( RListFree ) r_anal_var_free ) ;	804:1:23872:23927	2535291	1	True				
ANR	2535307	IdentifierDecl	* list = r_list_newf ( ( RListFree ) r_anal_var_free )		2535291	0					
ANR	2535308	IdentifierDeclType	RList *		2535291	0					
ANR	2535309	Identifier	list		2535291	1					
ANR	2535310	AssignmentExpression	* list = r_list_newf ( ( RListFree ) r_anal_var_free )		2535291	2		=			
ANR	2535311	Identifier	list		2535291	0					
ANR	2535312	CallExpression	r_list_newf ( ( RListFree ) r_anal_var_free )		2535291	1					
ANR	2535313	Callee	r_list_newf		2535291	0					
ANR	2535314	Identifier	r_list_newf		2535291	0					
ANR	2535315	ArgumentList	( RListFree ) r_anal_var_free		2535291	1					
ANR	2535316	Argument	( RListFree ) r_anal_var_free		2535291	0					
ANR	2535317	CastExpression	( RListFree ) r_anal_var_free		2535291	0					
ANR	2535318	CastTarget	RListFree		2535291	0					
ANR	2535319	Identifier	r_anal_var_free		2535291	1					
ANR	2535320	IfStatement	if ( kind < 1 )		2535291	2					
ANR	2535321	Condition	kind < 1	805:5:23934:23941	2535291	0	True				
ANR	2535322	RelationalExpression	kind < 1		2535291	0		<			
ANR	2535323	Identifier	kind		2535291	0					
ANR	2535324	PrimaryExpression	1		2535291	1					
ANR	2535325	CompoundStatement		6:15:111:111	2535291	1					
ANR	2535326	ExpressionStatement	kind = R_ANAL_VAR_KIND_BPV	806:2:23948:23974	2535291	0	True				
ANR	2535327	AssignmentExpression	kind = R_ANAL_VAR_KIND_BPV		2535291	0		=			
ANR	2535328	Identifier	kind		2535291	0					
ANR	2535329	Identifier	R_ANAL_VAR_KIND_BPV		2535291	1					
ANR	2535330	Statement	char	808:1:24004:24007	2535291	3	True				
ANR	2535331	Statement	*	808:6:24009:24009	2535291	4	True				
ANR	2535332	Statement	varlist	808:7:24010:24016	2535291	5	True				
ANR	2535333	Statement	=	808:15:24018:24018	2535291	6	True				
ANR	2535334	Statement	sdb_get	808:17:24020:24026	2535291	7	True				
ANR	2535335	Statement	(	808:25:24028:24028	2535291	8	True				
ANR	2535336	Statement	DB	808:26:24029:24030	2535291	9	True				
ANR	2535337	Statement	","	808:28:24031:24031	2535291	10	True				
ANR	2535338	Statement	sdb_fmt	808:30:24033:24039	2535291	11	True				
ANR	2535339	Statement	(	808:38:24041:24041	2535291	12	True				
ANR	2535340	Statement	"""fcn.0x%"""	808:39:24042:24050	2535291	13	True				
ANR	2535341	Statement	PFMT64x	808:48:24051:24057	2535291	14	True				
ANR	2535342	Statement	""".%c"""	808:56:24059:24063	2535291	15	True				
ANR	2535343	Statement	","	808:61:24064:24064	2535291	16	True				
ANR	2535344	Statement	fcn	808:63:24066:24068	2535291	17	True				
ANR	2535345	Statement	->	808:66:24069:24070	2535291	18	True				
ANR	2535346	Statement	addr	808:68:24071:24074	2535291	19	True				
ANR	2535347	Statement	","	808:72:24075:24075	2535291	20	True				
ANR	2535348	Statement	kind	808:74:24077:24080	2535291	21	True				
ANR	2535349	Statement	)	808:78:24081:24081	2535291	22	True				
ANR	2535350	Statement	","	808:79:24082:24082	2535291	23	True				
ANR	2535351	Statement	0	808:81:24084:24084	2535291	24	True				
ANR	2535352	Statement	)	808:82:24085:24085	2535291	25	True				
ANR	2535353	ExpressionStatement		808:83:24086:24086	2535291	26	True				
ANR	2535354	IfStatement	if ( varlist && * varlist )		2535291	27					
ANR	2535355	Condition	varlist && * varlist	809:5:24093:24111	2535291	0	True				
ANR	2535356	AndExpression	varlist && * varlist		2535291	0		&&			
ANR	2535357	Identifier	varlist		2535291	0					
ANR	2535358	UnaryOperationExpression	* varlist		2535291	1					
ANR	2535359	UnaryOperator	*		2535291	0					
ANR	2535360	Identifier	varlist		2535291	1					
ANR	2535361	CompoundStatement		11:2:285:311	2535291	1					
ANR	2535362	IdentifierDeclStatement	"char * next , * ptr = varlist ;"	810:2:24118:24144	2535291	0	True				
ANR	2535363	IdentifierDecl	* next		2535291	0					
ANR	2535364	IdentifierDeclType	char *		2535291	0					
ANR	2535365	Identifier	next		2535291	1					
ANR	2535366	IdentifierDecl	* ptr = varlist		2535291	1					
ANR	2535367	IdentifierDeclType	char *		2535291	0					
ANR	2535368	Identifier	ptr		2535291	1					
ANR	2535369	AssignmentExpression	* ptr = varlist		2535291	2		=			
ANR	2535370	Identifier	varlist		2535291	0					
ANR	2535371	Identifier	varlist		2535291	1					
ANR	2535372	DoStatement	do		2535291	1					
ANR	2535373	CompoundStatement		23:3:585:612	2535291	0					
ANR	2535374	IdentifierDeclStatement	"char * word = sdb_anext ( ptr , & next ) ;"	812:3:24156:24191	2535291	0	True				
ANR	2535375	IdentifierDecl	"* word = sdb_anext ( ptr , & next )"		2535291	0					
ANR	2535376	IdentifierDeclType	char *		2535291	0					
ANR	2535377	Identifier	word		2535291	1					
ANR	2535378	AssignmentExpression	"* word = sdb_anext ( ptr , & next )"		2535291	2		=			
ANR	2535379	Identifier	word		2535291	0					
ANR	2535380	CallExpression	"sdb_anext ( ptr , & next )"		2535291	1					
ANR	2535381	Callee	sdb_anext		2535291	0					
ANR	2535382	Identifier	sdb_anext		2535291	0					
ANR	2535383	ArgumentList	ptr		2535291	1					
ANR	2535384	Argument	ptr		2535291	0					
ANR	2535385	Identifier	ptr		2535291	0					
ANR	2535386	Argument	& next		2535291	1					
ANR	2535387	UnaryOperationExpression	& next		2535291	0					
ANR	2535388	UnaryOperator	&		2535291	0					
ANR	2535389	Identifier	next		2535291	1					
ANR	2535390	IfStatement	"if ( r_str_nlen ( word , 3 ) < 3 )"		2535291	1					
ANR	2535391	Condition	"r_str_nlen ( word , 3 ) < 3"	813:7:24200:24223	2535291	0	True				
ANR	2535392	RelationalExpression	"r_str_nlen ( word , 3 ) < 3"		2535291	0		<			
ANR	2535393	CallExpression	"r_str_nlen ( word , 3 )"		2535291	0					
ANR	2535394	Callee	r_str_nlen		2535291	0					
ANR	2535395	Identifier	r_str_nlen		2535291	0					
ANR	2535396	ArgumentList	word		2535291	1					
ANR	2535397	Argument	word		2535291	0					
ANR	2535398	Identifier	word		2535291	0					
ANR	2535399	Argument	3		2535291	1					
ANR	2535400	PrimaryExpression	3		2535291	0					
ANR	2535401	PrimaryExpression	3		2535291	1					
ANR	2535402	CompoundStatement		14:33:393:393	2535291	1					
ANR	2535403	ReturnStatement	return NULL ;	814:4:24232:24243	2535291	0	True				
ANR	2535404	Identifier	NULL		2535291	0					
ANR	2535405	Statement	const	816:3:24253:24257	2535291	2	True				
ANR	2535406	Statement	char	816:9:24259:24262	2535291	3	True				
ANR	2535407	Statement	*	816:14:24264:24264	2535291	4	True				
ANR	2535408	Statement	vardef	816:15:24265:24270	2535291	5	True				
ANR	2535409	Statement	=	816:22:24272:24272	2535291	6	True				
ANR	2535410	Statement	sdb_const_get	816:24:24274:24286	2535291	7	True				
ANR	2535411	Statement	(	816:38:24288:24288	2535291	8	True				
ANR	2535412	Statement	DB	816:39:24289:24290	2535291	9	True				
ANR	2535413	Statement	","	816:41:24291:24291	2535291	10	True				
ANR	2535414	Statement	sdb_fmt	816:43:24293:24299	2535291	11	True				
ANR	2535415	Statement	(	816:51:24301:24301	2535291	12	True				
ANR	2535416	Statement	"""var.0x%"""	817:4:24307:24315	2535291	13	True				
ANR	2535417	Statement	PFMT64x	817:13:24316:24322	2535291	14	True				
ANR	2535418	Statement	""".%c.%s"""	817:21:24324:24331	2535291	15	True				
ANR	2535419	Statement	","	817:29:24332:24332	2535291	16	True				
ANR	2535420	Statement	fcn	818:4:24338:24340	2535291	17	True				
ANR	2535421	Statement	->	818:7:24341:24342	2535291	18	True				
ANR	2535422	Statement	addr	818:9:24343:24346	2535291	19	True				
ANR	2535423	Statement	","	818:13:24347:24347	2535291	20	True				
ANR	2535424	Statement	kind	818:15:24349:24352	2535291	21	True				
ANR	2535425	Statement	","	818:19:24353:24353	2535291	22	True				
ANR	2535426	Statement	word	818:21:24355:24358	2535291	23	True				
ANR	2535427	Statement	)	818:25:24359:24359	2535291	24	True				
ANR	2535428	Statement	","	818:26:24360:24360	2535291	25	True				
ANR	2535429	Statement	0	818:28:24362:24362	2535291	26	True				
ANR	2535430	Statement	)	818:29:24363:24363	2535291	27	True				
ANR	2535431	ExpressionStatement		818:30:24364:24364	2535291	28	True				
ANR	2535432	IfStatement	if ( word [ 2 ] == '_' )		2535291	29					
ANR	2535433	Condition	word [ 2 ] == '_'	819:7:24373:24386	2535291	0	True				
ANR	2535434	EqualityExpression	word [ 2 ] == '_'		2535291	0		==			
ANR	2535435	ArrayIndexing	word [ 2 ]		2535291	0					
ANR	2535436	Identifier	word		2535291	0					
ANR	2535437	PrimaryExpression	2		2535291	1					
ANR	2535438	PrimaryExpression	'_'		2535291	1					
ANR	2535439	CompoundStatement		20:23:556:556	2535291	1					
ANR	2535440	ExpressionStatement	word [ 2 ] = '-'	820:4:24395:24408	2535291	0	True				
ANR	2535441	AssignmentExpression	word [ 2 ] = '-'		2535291	0		=			
ANR	2535442	ArrayIndexing	word [ 2 ]		2535291	0					
ANR	2535443	Identifier	word		2535291	0					
ANR	2535444	PrimaryExpression	2		2535291	1					
ANR	2535445	PrimaryExpression	'-'		2535291	1					
ANR	2535446	IdentifierDeclStatement	int delta = atoi ( word + 2 ) ;	822:3:24418:24445	2535291	30	True				
ANR	2535447	IdentifierDecl	delta = atoi ( word + 2 )		2535291	0					
ANR	2535448	IdentifierDeclType	int		2535291	0					
ANR	2535449	Identifier	delta		2535291	1					
ANR	2535450	AssignmentExpression	delta = atoi ( word + 2 )		2535291	2		=			
ANR	2535451	Identifier	delta		2535291	0					
ANR	2535452	CallExpression	atoi ( word + 2 )		2535291	1					
ANR	2535453	Callee	atoi		2535291	0					
ANR	2535454	Identifier	atoi		2535291	0					
ANR	2535455	ArgumentList	word + 2		2535291	1					
ANR	2535456	Argument	word + 2		2535291	0					
ANR	2535457	AdditiveExpression	word + 2		2535291	0		+			
ANR	2535458	Identifier	word		2535291	0					
ANR	2535459	PrimaryExpression	2		2535291	1					
ANR	2535460	IfStatement	if ( vardef )		2535291	31					
ANR	2535461	Condition	vardef	823:7:24454:24459	2535291	0	True				
ANR	2535462	Identifier	vardef		2535291	0					
ANR	2535463	CompoundStatement		28:4:757:789	2535291	1					
ANR	2535464	IdentifierDeclStatement	struct VarType vt = { 0 } ;	824:4:24468:24493	2535291	0	True				
ANR	2535465	IdentifierDecl	vt = { 0 }		2535291	0					
ANR	2535466	IdentifierDeclType	struct VarType		2535291	0					
ANR	2535467	Identifier	vt		2535291	1					
ANR	2535468	AssignmentExpression	vt = { 0 }		2535291	2		=			
ANR	2535469	Identifier	vt		2535291	0					
ANR	2535470	InitializerList	0		2535291	1					
ANR	2535471	PrimaryExpression	0		2535291	0					
ANR	2535472	ExpressionStatement	"sdb_fmt_init ( & vt , SDB_VARTYPE_FMT )"	825:4:24499:24534	2535291	1	True				
ANR	2535473	CallExpression	"sdb_fmt_init ( & vt , SDB_VARTYPE_FMT )"		2535291	0					
ANR	2535474	Callee	sdb_fmt_init		2535291	0					
ANR	2535475	Identifier	sdb_fmt_init		2535291	0					
ANR	2535476	ArgumentList	& vt		2535291	1					
ANR	2535477	Argument	& vt		2535291	0					
ANR	2535478	UnaryOperationExpression	& vt		2535291	0					
ANR	2535479	UnaryOperator	&		2535291	0					
ANR	2535480	Identifier	vt		2535291	1					
ANR	2535481	Argument	SDB_VARTYPE_FMT		2535291	1					
ANR	2535482	Identifier	SDB_VARTYPE_FMT		2535291	0					
ANR	2535483	ExpressionStatement	"sdb_fmt_tobin ( vardef , SDB_VARTYPE_FMT , & vt )"	826:4:24540:24584	2535291	2	True				
ANR	2535484	CallExpression	"sdb_fmt_tobin ( vardef , SDB_VARTYPE_FMT , & vt )"		2535291	0					
ANR	2535485	Callee	sdb_fmt_tobin		2535291	0					
ANR	2535486	Identifier	sdb_fmt_tobin		2535291	0					
ANR	2535487	ArgumentList	vardef		2535291	1					
ANR	2535488	Argument	vardef		2535291	0					
ANR	2535489	Identifier	vardef		2535291	0					
ANR	2535490	Argument	SDB_VARTYPE_FMT		2535291	1					
ANR	2535491	Identifier	SDB_VARTYPE_FMT		2535291	0					
ANR	2535492	Argument	& vt		2535291	2					
ANR	2535493	UnaryOperationExpression	& vt		2535291	0					
ANR	2535494	UnaryOperator	&		2535291	0					
ANR	2535495	Identifier	vt		2535291	1					
ANR	2535496	IdentifierDeclStatement	RAnalVar * av = R_NEW0 ( RAnalVar ) ;	827:4:24590:24622	2535291	3	True				
ANR	2535497	IdentifierDecl	* av = R_NEW0 ( RAnalVar )		2535291	0					
ANR	2535498	IdentifierDeclType	RAnalVar *		2535291	0					
ANR	2535499	Identifier	av		2535291	1					
ANR	2535500	AssignmentExpression	* av = R_NEW0 ( RAnalVar )		2535291	2		=			
ANR	2535501	Identifier	av		2535291	0					
ANR	2535502	CallExpression	R_NEW0 ( RAnalVar )		2535291	1					
ANR	2535503	Callee	R_NEW0		2535291	0					
ANR	2535504	Identifier	R_NEW0		2535291	0					
ANR	2535505	ArgumentList	RAnalVar		2535291	1					
ANR	2535506	Argument	RAnalVar		2535291	0					
ANR	2535507	Identifier	RAnalVar		2535291	0					
ANR	2535508	IfStatement	if ( ! av )		2535291	4					
ANR	2535509	Condition	! av	828:8:24632:24634	2535291	0	True				
ANR	2535510	UnaryOperationExpression	! av		2535291	0					
ANR	2535511	UnaryOperator	!		2535291	0					
ANR	2535512	Identifier	av		2535291	1					
ANR	2535513	CompoundStatement		29:13:804:804	2535291	1					
ANR	2535514	ExpressionStatement	free ( varlist )	829:5:24644:24658	2535291	0	True				
ANR	2535515	CallExpression	free ( varlist )		2535291	0					
ANR	2535516	Callee	free		2535291	0					
ANR	2535517	Identifier	free		2535291	0					
ANR	2535518	ArgumentList	varlist		2535291	1					
ANR	2535519	Argument	varlist		2535291	0					
ANR	2535520	Identifier	varlist		2535291	0					
ANR	2535521	ExpressionStatement	r_list_free ( list )	830:5:24665:24683	2535291	1	True				
ANR	2535522	CallExpression	r_list_free ( list )		2535291	0					
ANR	2535523	Callee	r_list_free		2535291	0					
ANR	2535524	Identifier	r_list_free		2535291	0					
ANR	2535525	ArgumentList	list		2535291	1					
ANR	2535526	Argument	list		2535291	0					
ANR	2535527	Identifier	list		2535291	0					
ANR	2535528	ReturnStatement	return NULL ;	831:5:24690:24701	2535291	2	True				
ANR	2535529	Identifier	NULL		2535291	0					
ANR	2535530	IfStatement	if ( ! vt . name || ! vt . type )		2535291	5					
ANR	2535531	Condition	! vt . name || ! vt . type	833:8:24717:24736	2535291	0	True				
ANR	2535532	OrExpression	! vt . name || ! vt . type		2535291	0		||			
ANR	2535533	UnaryOperationExpression	! vt . name		2535291	0					
ANR	2535534	UnaryOperator	!		2535291	0					
ANR	2535535	MemberAccess	vt . name		2535291	1					
ANR	2535536	Identifier	vt		2535291	0					
ANR	2535537	Identifier	name		2535291	1					
ANR	2535538	UnaryOperationExpression	! vt . type		2535291	1					
ANR	2535539	UnaryOperator	!		2535291	0					
ANR	2535540	MemberAccess	vt . type		2535291	1					
ANR	2535541	Identifier	vt		2535291	0					
ANR	2535542	Identifier	type		2535291	1					
ANR	2535543	CompoundStatement		34:30:906:906	2535291	1					
ANR	2535544	Statement	eprintf	835:5:24784:24790	2535291	0	True				
ANR	2535545	Statement	(	835:13:24792:24792	2535291	1	True				
ANR	2535546	Statement	"""Warning null var in fcn.0x%"""	835:14:24793:24821	2535291	2	True				
ANR	2535547	Statement	PFMT64x	835:43:24822:24828	2535291	3	True				
ANR	2535548	Statement	""".%c.%s\\n"""	835:51:24830:24839	2535291	4	True				
ANR	2535549	Statement	","	835:61:24840:24840	2535291	5	True				
ANR	2535550	Statement	fcn	836:6:24848:24850	2535291	6	True				
ANR	2535551	Statement	->	836:9:24851:24852	2535291	7	True				
ANR	2535552	Statement	addr	836:11:24853:24856	2535291	8	True				
ANR	2535553	Statement	","	836:15:24857:24857	2535291	9	True				
ANR	2535554	Statement	kind	836:17:24859:24862	2535291	10	True				
ANR	2535555	Statement	","	836:21:24863:24863	2535291	11	True				
ANR	2535556	Statement	word	836:23:24865:24868	2535291	12	True				
ANR	2535557	Statement	)	836:27:24869:24869	2535291	13	True				
ANR	2535558	ExpressionStatement		836:28:24870:24870	2535291	14	True				
ANR	2535559	ExpressionStatement	free ( av )	837:5:24877:24886	2535291	15	True				
ANR	2535560	CallExpression	free ( av )		2535291	0					
ANR	2535561	Callee	free		2535291	0					
ANR	2535562	Identifier	free		2535291	0					
ANR	2535563	ArgumentList	av		2535291	1					
ANR	2535564	Argument	av		2535291	0					
ANR	2535565	Identifier	av		2535291	0					
ANR	2535566	ContinueStatement	continue ;	838:5:24893:24901	2535291	16	True				
ANR	2535567	ExpressionStatement	av -> addr = fcn -> addr	840:4:24913:24933	2535291	6	True				
ANR	2535568	AssignmentExpression	av -> addr = fcn -> addr		2535291	0		=			
ANR	2535569	PtrMemberAccess	av -> addr		2535291	0					
ANR	2535570	Identifier	av		2535291	0					
ANR	2535571	Identifier	addr		2535291	1					
ANR	2535572	PtrMemberAccess	fcn -> addr		2535291	1					
ANR	2535573	Identifier	fcn		2535291	0					
ANR	2535574	Identifier	addr		2535291	1					
ANR	2535575	ExpressionStatement	av -> delta = delta	841:4:24939:24956	2535291	7	True				
ANR	2535576	AssignmentExpression	av -> delta = delta		2535291	0		=			
ANR	2535577	PtrMemberAccess	av -> delta		2535291	0					
ANR	2535578	Identifier	av		2535291	0					
ANR	2535579	Identifier	delta		2535291	1					
ANR	2535580	Identifier	delta		2535291	1					
ANR	2535581	ExpressionStatement	av -> kind = kind	842:4:24962:24977	2535291	8	True				
ANR	2535582	AssignmentExpression	av -> kind = kind		2535291	0		=			
ANR	2535583	PtrMemberAccess	av -> kind		2535291	0					
ANR	2535584	Identifier	av		2535291	0					
ANR	2535585	Identifier	kind		2535291	1					
ANR	2535586	Identifier	kind		2535291	1					
ANR	2535587	ExpressionStatement	av -> name = strdup ( vt . name )	843:4:24983:25010	2535291	9	True				
ANR	2535588	AssignmentExpression	av -> name = strdup ( vt . name )		2535291	0		=			
ANR	2535589	PtrMemberAccess	av -> name		2535291	0					
ANR	2535590	Identifier	av		2535291	0					
ANR	2535591	Identifier	name		2535291	1					
ANR	2535592	CallExpression	strdup ( vt . name )		2535291	1					
ANR	2535593	Callee	strdup		2535291	0					
ANR	2535594	Identifier	strdup		2535291	0					
ANR	2535595	ArgumentList	vt . name		2535291	1					
ANR	2535596	Argument	vt . name		2535291	0					
ANR	2535597	MemberAccess	vt . name		2535291	0					
ANR	2535598	Identifier	vt		2535291	0					
ANR	2535599	Identifier	name		2535291	1					
ANR	2535600	ExpressionStatement	av -> isarg = vt . isarg	844:4:25016:25036	2535291	10	True				
ANR	2535601	AssignmentExpression	av -> isarg = vt . isarg		2535291	0		=			
ANR	2535602	PtrMemberAccess	av -> isarg		2535291	0					
ANR	2535603	Identifier	av		2535291	0					
ANR	2535604	Identifier	isarg		2535291	1					
ANR	2535605	MemberAccess	vt . isarg		2535291	1					
ANR	2535606	Identifier	vt		2535291	0					
ANR	2535607	Identifier	isarg		2535291	1					
ANR	2535608	ExpressionStatement	av -> size = vt . size	845:4:25042:25060	2535291	11	True				
ANR	2535609	AssignmentExpression	av -> size = vt . size		2535291	0		=			
ANR	2535610	PtrMemberAccess	av -> size		2535291	0					
ANR	2535611	Identifier	av		2535291	0					
ANR	2535612	Identifier	size		2535291	1					
ANR	2535613	MemberAccess	vt . size		2535291	1					
ANR	2535614	Identifier	vt		2535291	0					
ANR	2535615	Identifier	size		2535291	1					
ANR	2535616	ExpressionStatement	av -> type = strdup ( vt . type )	846:4:25066:25093	2535291	12	True				
ANR	2535617	AssignmentExpression	av -> type = strdup ( vt . type )		2535291	0		=			
ANR	2535618	PtrMemberAccess	av -> type		2535291	0					
ANR	2535619	Identifier	av		2535291	0					
ANR	2535620	Identifier	type		2535291	1					
ANR	2535621	CallExpression	strdup ( vt . type )		2535291	1					
ANR	2535622	Callee	strdup		2535291	0					
ANR	2535623	Identifier	strdup		2535291	0					
ANR	2535624	ArgumentList	vt . type		2535291	1					
ANR	2535625	Argument	vt . type		2535291	0					
ANR	2535626	MemberAccess	vt . type		2535291	0					
ANR	2535627	Identifier	vt		2535291	0					
ANR	2535628	Identifier	type		2535291	1					
ANR	2535629	ExpressionStatement	"r_list_append ( list , av )"	847:4:25099:25123	2535291	13	True				
ANR	2535630	CallExpression	"r_list_append ( list , av )"		2535291	0					
ANR	2535631	Callee	r_list_append		2535291	0					
ANR	2535632	Identifier	r_list_append		2535291	0					
ANR	2535633	ArgumentList	list		2535291	1					
ANR	2535634	Argument	list		2535291	0					
ANR	2535635	Identifier	list		2535291	0					
ANR	2535636	Argument	av		2535291	1					
ANR	2535637	Identifier	av		2535291	0					
ANR	2535638	IfStatement	if ( dynamicVars )		2535291	14					
ANR	2535639	Condition	dynamicVars	848:8:25133:25143	2535291	0	True				
ANR	2535640	Identifier	dynamicVars		2535291	0					
ANR	2535641	CompoundStatement		49:21:1313:1313	2535291	1					
ANR	2535642	ExpressionStatement	"var_add_structure_fields_to_list ( a , av , vt . name , delta , list )"	849:5:25201:25263	2535291	0	True				
ANR	2535643	CallExpression	"var_add_structure_fields_to_list ( a , av , vt . name , delta , list )"		2535291	0					
ANR	2535644	Callee	var_add_structure_fields_to_list		2535291	0					
ANR	2535645	Identifier	var_add_structure_fields_to_list		2535291	0					
ANR	2535646	ArgumentList	a		2535291	1					
ANR	2535647	Argument	a		2535291	0					
ANR	2535648	Identifier	a		2535291	0					
ANR	2535649	Argument	av		2535291	1					
ANR	2535650	Identifier	av		2535291	0					
ANR	2535651	Argument	vt . name		2535291	2					
ANR	2535652	MemberAccess	vt . name		2535291	0					
ANR	2535653	Identifier	vt		2535291	0					
ANR	2535654	Identifier	name		2535291	1					
ANR	2535655	Argument	delta		2535291	3					
ANR	2535656	Identifier	delta		2535291	0					
ANR	2535657	Argument	list		2535291	4					
ANR	2535658	Identifier	list		2535291	0					
ANR	2535659	ExpressionStatement	"sdb_fmt_free ( & vt , SDB_VARTYPE_FMT )"	851:4:25275:25310	2535291	15	True				
ANR	2535660	CallExpression	"sdb_fmt_free ( & vt , SDB_VARTYPE_FMT )"		2535291	0					
ANR	2535661	Callee	sdb_fmt_free		2535291	0					
ANR	2535662	Identifier	sdb_fmt_free		2535291	0					
ANR	2535663	ArgumentList	& vt		2535291	1					
ANR	2535664	Argument	& vt		2535291	0					
ANR	2535665	UnaryOperationExpression	& vt		2535291	0					
ANR	2535666	UnaryOperator	&		2535291	0					
ANR	2535667	Identifier	vt		2535291	1					
ANR	2535668	Argument	SDB_VARTYPE_FMT		2535291	1					
ANR	2535669	Identifier	SDB_VARTYPE_FMT		2535291	0					
ANR	2535670	ElseStatement	else		2535291	0					
ANR	2535671	CompoundStatement		53:10:1489:1489	2535291	0					
ANR	2535672	ExpressionStatement	"eprintf ( ""Cannot find var definition for '%s'\\n"" , word )"	853:4:25328:25383	2535291	0	True				
ANR	2535673	CallExpression	"eprintf ( ""Cannot find var definition for '%s'\\n"" , word )"		2535291	0					
ANR	2535674	Callee	eprintf		2535291	0					
ANR	2535675	Identifier	eprintf		2535291	0					
ANR	2535676	ArgumentList	"""Cannot find var definition for '%s'\\n"""		2535291	1					
ANR	2535677	Argument	"""Cannot find var definition for '%s'\\n"""		2535291	0					
ANR	2535678	PrimaryExpression	"""Cannot find var definition for '%s'\\n"""		2535291	0					
ANR	2535679	Argument	word		2535291	1					
ANR	2535680	Identifier	word		2535291	0					
ANR	2535681	ExpressionStatement	ptr = next	855:3:25393:25403	2535291	32	True				
ANR	2535682	AssignmentExpression	ptr = next		2535291	0		=			
ANR	2535683	Identifier	ptr		2535291	0					
ANR	2535684	Identifier	next		2535291	1					
ANR	2535685	Condition	next	856:11:25416:25419	2535291	1	True				
ANR	2535686	Identifier	next		2535291	0					
ANR	2535687	ExpressionStatement	free ( varlist )	858:1:25427:25441	2535291	28	True				
ANR	2535688	CallExpression	free ( varlist )		2535291	0					
ANR	2535689	Callee	free		2535291	0					
ANR	2535690	Identifier	free		2535291	0					
ANR	2535691	ArgumentList	varlist		2535291	1					
ANR	2535692	Argument	varlist		2535291	0					
ANR	2535693	Identifier	varlist		2535291	0					
ANR	2535694	ReturnStatement	return list ;	859:1:25444:25455	2535291	29	True				
ANR	2535695	Identifier	list		2535291	0					
ANR	2535696	ReturnType	static RList *		2535291	1					
ANR	2535697	Identifier	var_generate_list		2535291	2					
ANR	2535698	ParameterList	"RAnal * a , RAnalFunction * fcn , int kind , bool dynamicVars"		2535291	3					
ANR	2535699	Parameter	RAnal * a	800:32:23774:23781	2535291	0	True				
ANR	2535700	ParameterType	RAnal *		2535291	0					
ANR	2535701	Identifier	a		2535291	1					
ANR	2535702	Parameter	RAnalFunction * fcn	800:42:23784:23801	2535291	1	True				
ANR	2535703	ParameterType	RAnalFunction *		2535291	0					
ANR	2535704	Identifier	fcn		2535291	1					
ANR	2535705	Parameter	int kind	800:62:23804:23811	2535291	2	True				
ANR	2535706	ParameterType	int		2535291	0					
ANR	2535707	Identifier	kind		2535291	1					
ANR	2535708	Parameter	bool dynamicVars	800:72:23814:23829	2535291	3	True				
ANR	2535709	ParameterType	bool		2535291	0					
ANR	2535710	Identifier	dynamicVars		2535291	1					
ANR	2535711	CFGEntryNode	ENTRY		2535291		True				
ANR	2535712	CFGExitNode	EXIT		2535291		True				
ANR	2535713	Symbol	next		2535291						
ANR	2535714	Symbol	* fcn		2535291						
ANR	2535715	Symbol	av -> kind		2535291						
ANR	2535716	Symbol	vt . size		2535291						
ANR	2535717	Symbol	delta		2535291						
ANR	2535718	Symbol	SDB_VARTYPE_FMT		2535291						
ANR	2535719	Symbol	vt . name		2535291						
ANR	2535720	Symbol	fcn		2535291						
ANR	2535721	Symbol	av -> name		2535291						
ANR	2535722	Symbol	vardef		2535291						
ANR	2535723	Symbol	varlist		2535291						
ANR	2535724	Symbol	vt . type		2535291						
ANR	2535725	Symbol	av -> type		2535291						
ANR	2535726	Symbol	dynamicVars		2535291						
ANR	2535727	Symbol	atoi		2535291						
ANR	2535728	Symbol	a		2535291						
ANR	2535729	Symbol	vt . isarg		2535291						
ANR	2535730	Symbol	NULL		2535291						
ANR	2535731	Symbol	& next		2535291						
ANR	2535732	Symbol	r_list_newf		2535291						
ANR	2535733	Symbol	kind		2535291						
ANR	2535734	Symbol	* word		2535291						
ANR	2535735	Symbol	av -> delta		2535291						
ANR	2535736	Symbol	av -> size		2535291						
ANR	2535737	Symbol	r_str_nlen		2535291						
ANR	2535738	Symbol	& vt		2535291						
ANR	2535739	Symbol	R_ANAL_VAR_KIND_BPV		2535291						
ANR	2535740	Symbol	list		2535291						
ANR	2535741	Symbol	RAnalVar		2535291						
ANR	2535742	Symbol	ptr		2535291						
ANR	2535743	Symbol	av -> addr		2535291						
ANR	2535744	Symbol	* varlist		2535291						
ANR	2535745	Symbol	R_NEW0		2535291						
ANR	2535746	Symbol	av		2535291						
ANR	2535747	Symbol	av -> isarg		2535291						
ANR	2535748	Symbol	* av		2535291						
ANR	2535749	Symbol	fcn -> addr		2535291						
ANR	2535750	Symbol	sdb_anext		2535291						
ANR	2535751	Symbol	strdup		2535291						
ANR	2535752	Symbol	word		2535291						
ANR	2535753	Symbol	r_anal_var_free		2535291						
ANR	2535754	Symbol	vt		2535291						
ANR	2535755	Function	r_anal_var_all_list	862:0:25460:26151							
ANR	2535756	FunctionDef	"r_anal_var_all_list (RAnal * anal , RAnalFunction * fcn)"		2535755	0					
ANR	2535757	CompoundStatement		862:66:25526:26151	2535755	0					
ANR	2535758	IdentifierDeclStatement	"RList * list = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_ARG ) ;"	865:1:25666:25728	2535755	0	True				
ANR	2535759	IdentifierDecl	"* list = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_ARG )"		2535755	0					
ANR	2535760	IdentifierDeclType	RList *		2535755	0					
ANR	2535761	Identifier	list		2535755	1					
ANR	2535762	AssignmentExpression	"* list = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_ARG )"		2535755	2		=			
ANR	2535763	Identifier	list		2535755	0					
ANR	2535764	CallExpression	"r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_ARG )"		2535755	1					
ANR	2535765	Callee	r_anal_var_list		2535755	0					
ANR	2535766	Identifier	r_anal_var_list		2535755	0					
ANR	2535767	ArgumentList	anal		2535755	1					
ANR	2535768	Argument	anal		2535755	0					
ANR	2535769	Identifier	anal		2535755	0					
ANR	2535770	Argument	fcn		2535755	1					
ANR	2535771	Identifier	fcn		2535755	0					
ANR	2535772	Argument	R_ANAL_VAR_KIND_ARG		2535755	2					
ANR	2535773	Identifier	R_ANAL_VAR_KIND_ARG		2535755	0					
ANR	2535774	IfStatement	if ( ! list )		2535755	1					
ANR	2535775	Condition	! list	866:5:25735:25739	2535755	0	True				
ANR	2535776	UnaryOperationExpression	! list		2535755	0					
ANR	2535777	UnaryOperator	!		2535755	0					
ANR	2535778	Identifier	list		2535755	1					
ANR	2535779	CompoundStatement		5:12:215:215	2535755	1					
ANR	2535780	ReturnStatement	return NULL ;	867:2:25746:25757	2535755	0	True				
ANR	2535781	Identifier	NULL		2535755	0					
ANR	2535782	IdentifierDeclStatement	"RList * reg_vars = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_REG ) ;"	869:1:25763:25829	2535755	2	True				
ANR	2535783	IdentifierDecl	"* reg_vars = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_REG )"		2535755	0					
ANR	2535784	IdentifierDeclType	RList *		2535755	0					
ANR	2535785	Identifier	reg_vars		2535755	1					
ANR	2535786	AssignmentExpression	"* reg_vars = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_REG )"		2535755	2		=			
ANR	2535787	Identifier	reg_vars		2535755	0					
ANR	2535788	CallExpression	"r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_REG )"		2535755	1					
ANR	2535789	Callee	r_anal_var_list		2535755	0					
ANR	2535790	Identifier	r_anal_var_list		2535755	0					
ANR	2535791	ArgumentList	anal		2535755	1					
ANR	2535792	Argument	anal		2535755	0					
ANR	2535793	Identifier	anal		2535755	0					
ANR	2535794	Argument	fcn		2535755	1					
ANR	2535795	Identifier	fcn		2535755	0					
ANR	2535796	Argument	R_ANAL_VAR_KIND_REG		2535755	2					
ANR	2535797	Identifier	R_ANAL_VAR_KIND_REG		2535755	0					
ANR	2535798	IdentifierDeclStatement	"RList * bpv_vars = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_BPV ) ;"	870:1:25832:25898	2535755	3	True				
ANR	2535799	IdentifierDecl	"* bpv_vars = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_BPV )"		2535755	0					
ANR	2535800	IdentifierDeclType	RList *		2535755	0					
ANR	2535801	Identifier	bpv_vars		2535755	1					
ANR	2535802	AssignmentExpression	"* bpv_vars = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_BPV )"		2535755	2		=			
ANR	2535803	Identifier	bpv_vars		2535755	0					
ANR	2535804	CallExpression	"r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_BPV )"		2535755	1					
ANR	2535805	Callee	r_anal_var_list		2535755	0					
ANR	2535806	Identifier	r_anal_var_list		2535755	0					
ANR	2535807	ArgumentList	anal		2535755	1					
ANR	2535808	Argument	anal		2535755	0					
ANR	2535809	Identifier	anal		2535755	0					
ANR	2535810	Argument	fcn		2535755	1					
ANR	2535811	Identifier	fcn		2535755	0					
ANR	2535812	Argument	R_ANAL_VAR_KIND_BPV		2535755	2					
ANR	2535813	Identifier	R_ANAL_VAR_KIND_BPV		2535755	0					
ANR	2535814	IdentifierDeclStatement	"RList * spv_vars = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_SPV ) ;"	871:1:25901:25967	2535755	4	True				
ANR	2535815	IdentifierDecl	"* spv_vars = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_SPV )"		2535755	0					
ANR	2535816	IdentifierDeclType	RList *		2535755	0					
ANR	2535817	Identifier	spv_vars		2535755	1					
ANR	2535818	AssignmentExpression	"* spv_vars = r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_SPV )"		2535755	2		=			
ANR	2535819	Identifier	spv_vars		2535755	0					
ANR	2535820	CallExpression	"r_anal_var_list ( anal , fcn , R_ANAL_VAR_KIND_SPV )"		2535755	1					
ANR	2535821	Callee	r_anal_var_list		2535755	0					
ANR	2535822	Identifier	r_anal_var_list		2535755	0					
ANR	2535823	ArgumentList	anal		2535755	1					
ANR	2535824	Argument	anal		2535755	0					
ANR	2535825	Identifier	anal		2535755	0					
ANR	2535826	Argument	fcn		2535755	1					
ANR	2535827	Identifier	fcn		2535755	0					
ANR	2535828	Argument	R_ANAL_VAR_KIND_SPV		2535755	2					
ANR	2535829	Identifier	R_ANAL_VAR_KIND_SPV		2535755	0					
ANR	2535830	ExpressionStatement	"r_list_join ( list , reg_vars )"	872:1:25970:25998	2535755	5	True				
ANR	2535831	CallExpression	"r_list_join ( list , reg_vars )"		2535755	0					
ANR	2535832	Callee	r_list_join		2535755	0					
ANR	2535833	Identifier	r_list_join		2535755	0					
ANR	2535834	ArgumentList	list		2535755	1					
ANR	2535835	Argument	list		2535755	0					
ANR	2535836	Identifier	list		2535755	0					
ANR	2535837	Argument	reg_vars		2535755	1					
ANR	2535838	Identifier	reg_vars		2535755	0					
ANR	2535839	ExpressionStatement	"r_list_join ( list , bpv_vars )"	873:1:26001:26029	2535755	6	True				
ANR	2535840	CallExpression	"r_list_join ( list , bpv_vars )"		2535755	0					
ANR	2535841	Callee	r_list_join		2535755	0					
ANR	2535842	Identifier	r_list_join		2535755	0					
ANR	2535843	ArgumentList	list		2535755	1					
ANR	2535844	Argument	list		2535755	0					
ANR	2535845	Identifier	list		2535755	0					
ANR	2535846	Argument	bpv_vars		2535755	1					
ANR	2535847	Identifier	bpv_vars		2535755	0					
ANR	2535848	ExpressionStatement	"r_list_join ( list , spv_vars )"	874:1:26032:26060	2535755	7	True				
ANR	2535849	CallExpression	"r_list_join ( list , spv_vars )"		2535755	0					
ANR	2535850	Callee	r_list_join		2535755	0					
ANR	2535851	Identifier	r_list_join		2535755	0					
ANR	2535852	ArgumentList	list		2535755	1					
ANR	2535853	Argument	list		2535755	0					
ANR	2535854	Identifier	list		2535755	0					
ANR	2535855	Argument	spv_vars		2535755	1					
ANR	2535856	Identifier	spv_vars		2535755	0					
ANR	2535857	ExpressionStatement	r_list_free ( reg_vars )	875:1:26063:26085	2535755	8	True				
ANR	2535858	CallExpression	r_list_free ( reg_vars )		2535755	0					
ANR	2535859	Callee	r_list_free		2535755	0					
ANR	2535860	Identifier	r_list_free		2535755	0					
ANR	2535861	ArgumentList	reg_vars		2535755	1					
ANR	2535862	Argument	reg_vars		2535755	0					
ANR	2535863	Identifier	reg_vars		2535755	0					
ANR	2535864	ExpressionStatement	r_list_free ( bpv_vars )	876:1:26088:26110	2535755	9	True				
ANR	2535865	CallExpression	r_list_free ( bpv_vars )		2535755	0					
ANR	2535866	Callee	r_list_free		2535755	0					
ANR	2535867	Identifier	r_list_free		2535755	0					
ANR	2535868	ArgumentList	bpv_vars		2535755	1					
ANR	2535869	Argument	bpv_vars		2535755	0					
ANR	2535870	Identifier	bpv_vars		2535755	0					
ANR	2535871	ExpressionStatement	r_list_free ( spv_vars )	877:1:26113:26135	2535755	10	True				
ANR	2535872	CallExpression	r_list_free ( spv_vars )		2535755	0					
ANR	2535873	Callee	r_list_free		2535755	0					
ANR	2535874	Identifier	r_list_free		2535755	0					
ANR	2535875	ArgumentList	spv_vars		2535755	1					
ANR	2535876	Argument	spv_vars		2535755	0					
ANR	2535877	Identifier	spv_vars		2535755	0					
ANR	2535878	ReturnStatement	return list ;	878:1:26138:26149	2535755	11	True				
ANR	2535879	Identifier	list		2535755	0					
ANR	2535880	ReturnType	R_API RList *		2535755	1					
ANR	2535881	Identifier	r_anal_var_all_list		2535755	2					
ANR	2535882	ParameterList	"RAnal * anal , RAnalFunction * fcn"		2535755	3					
ANR	2535883	Parameter	RAnal * anal	862:33:25493:25503	2535755	0	True				
ANR	2535884	ParameterType	RAnal *		2535755	0					
ANR	2535885	Identifier	anal		2535755	1					
ANR	2535886	Parameter	RAnalFunction * fcn	862:46:25506:25523	2535755	1	True				
ANR	2535887	ParameterType	RAnalFunction *		2535755	0					
ANR	2535888	Identifier	fcn		2535755	1					
ANR	2535889	CFGEntryNode	ENTRY		2535755		True				
ANR	2535890	CFGExitNode	EXIT		2535755		True				
ANR	2535891	Symbol	fcn		2535755						
ANR	2535892	Symbol	r_anal_var_list		2535755						
ANR	2535893	Symbol	NULL		2535755						
ANR	2535894	Symbol	R_ANAL_VAR_KIND_SPV		2535755						
ANR	2535895	Symbol	anal		2535755						
ANR	2535896	Symbol	reg_vars		2535755						
ANR	2535897	Symbol	R_ANAL_VAR_KIND_ARG		2535755						
ANR	2535898	Symbol	bpv_vars		2535755						
ANR	2535899	Symbol	R_ANAL_VAR_KIND_BPV		2535755						
ANR	2535900	Symbol	list		2535755						
ANR	2535901	Symbol	spv_vars		2535755						
ANR	2535902	Symbol	R_ANAL_VAR_KIND_REG		2535755						
ANR	2535903	Function	r_anal_var_list	881:0:26154:26274							
ANR	2535904	FunctionDef	"r_anal_var_list (RAnal * a , RAnalFunction * fcn , int kind)"		2535903	0					
ANR	2535905	CompoundStatement		881:69:26223:26274	2535903	0					
ANR	2535906	ReturnStatement	"return var_generate_list ( a , fcn , kind , false ) ;"	882:1:26226:26272	2535903	0	True				
ANR	2535907	CallExpression	"var_generate_list ( a , fcn , kind , false )"		2535903	0					
ANR	2535908	Callee	var_generate_list		2535903	0					
ANR	2535909	Identifier	var_generate_list		2535903	0					
ANR	2535910	ArgumentList	a		2535903	1					
ANR	2535911	Argument	a		2535903	0					
ANR	2535912	Identifier	a		2535903	0					
ANR	2535913	Argument	fcn		2535903	1					
ANR	2535914	Identifier	fcn		2535903	0					
ANR	2535915	Argument	kind		2535903	2					
ANR	2535916	Identifier	kind		2535903	0					
ANR	2535917	Argument	false		2535903	3					
ANR	2535918	Identifier	false		2535903	0					
ANR	2535919	ReturnType	R_API RList *		2535903	1					
ANR	2535920	Identifier	r_anal_var_list		2535903	2					
ANR	2535921	ParameterList	"RAnal * a , RAnalFunction * fcn , int kind"		2535903	3					
ANR	2535922	Parameter	RAnal * a	881:29:26183:26190	2535903	0	True				
ANR	2535923	ParameterType	RAnal *		2535903	0					
ANR	2535924	Identifier	a		2535903	1					
ANR	2535925	Parameter	RAnalFunction * fcn	881:39:26193:26210	2535903	1	True				
ANR	2535926	ParameterType	RAnalFunction *		2535903	0					
ANR	2535927	Identifier	fcn		2535903	1					
ANR	2535928	Parameter	int kind	881:59:26213:26220	2535903	2	True				
ANR	2535929	ParameterType	int		2535903	0					
ANR	2535930	Identifier	kind		2535903	1					
ANR	2535931	CFGEntryNode	ENTRY		2535903		True				
ANR	2535932	CFGExitNode	EXIT		2535903		True				
ANR	2535933	Symbol	fcn		2535903						
ANR	2535934	Symbol	a		2535903						
ANR	2535935	Symbol	var_generate_list		2535903						
ANR	2535936	Symbol	kind		2535903						
ANR	2535937	Symbol	false		2535903						
ANR	2535938	Function	r_anal_var_list_dynamic	885:0:26277:26404							
ANR	2535939	FunctionDef	"r_anal_var_list_dynamic (RAnal * a , RAnalFunction * fcn , int kind)"		2535938	0					
ANR	2535940	CompoundStatement		885:77:26354:26404	2535938	0					
ANR	2535941	ReturnStatement	"return var_generate_list ( a , fcn , kind , true ) ;"	886:1:26357:26402	2535938	0	True				
ANR	2535942	CallExpression	"var_generate_list ( a , fcn , kind , true )"		2535938	0					
ANR	2535943	Callee	var_generate_list		2535938	0					
ANR	2535944	Identifier	var_generate_list		2535938	0					
ANR	2535945	ArgumentList	a		2535938	1					
ANR	2535946	Argument	a		2535938	0					
ANR	2535947	Identifier	a		2535938	0					
ANR	2535948	Argument	fcn		2535938	1					
ANR	2535949	Identifier	fcn		2535938	0					
ANR	2535950	Argument	kind		2535938	2					
ANR	2535951	Identifier	kind		2535938	0					
ANR	2535952	Argument	true		2535938	3					
ANR	2535953	Identifier	true		2535938	0					
ANR	2535954	ReturnType	R_API RList *		2535938	1					
ANR	2535955	Identifier	r_anal_var_list_dynamic		2535938	2					
ANR	2535956	ParameterList	"RAnal * a , RAnalFunction * fcn , int kind"		2535938	3					
ANR	2535957	Parameter	RAnal * a	885:37:26314:26321	2535938	0	True				
ANR	2535958	ParameterType	RAnal *		2535938	0					
ANR	2535959	Identifier	a		2535938	1					
ANR	2535960	Parameter	RAnalFunction * fcn	885:47:26324:26341	2535938	1	True				
ANR	2535961	ParameterType	RAnalFunction *		2535938	0					
ANR	2535962	Identifier	fcn		2535938	1					
ANR	2535963	Parameter	int kind	885:67:26344:26351	2535938	2	True				
ANR	2535964	ParameterType	int		2535938	0					
ANR	2535965	Identifier	kind		2535938	1					
ANR	2535966	CFGEntryNode	ENTRY		2535938		True				
ANR	2535967	CFGExitNode	EXIT		2535938		True				
ANR	2535968	Symbol	fcn		2535938						
ANR	2535969	Symbol	a		2535938						
ANR	2535970	Symbol	var_generate_list		2535938						
ANR	2535971	Symbol	kind		2535938						
ANR	2535972	Symbol	true		2535938						
ANR	2535973	Function	var_comparator	889:0:26407:26545							
ANR	2535974	FunctionDef	"var_comparator (const RAnalVar * a , const RAnalVar * b)"		2535973	0					
ANR	2535975	CompoundStatement		889:63:26470:26545	2535973	0					
ANR	2535976	ReturnStatement	return ( a && b ) ? a -> delta > b -> delta : false ;	891:1:26500:26543	2535973	0	True				
ANR	2535977	ConditionalExpression	( a && b ) ? a -> delta > b -> delta : false		2535973	0					
ANR	2535978	Condition	a && b		2535973	0					
ANR	2535979	AndExpression	a && b		2535973	0		&&			
ANR	2535980	Identifier	a		2535973	0					
ANR	2535981	Identifier	b		2535973	1					
ANR	2535982	RelationalExpression	a -> delta > b -> delta		2535973	1		>			
ANR	2535983	PtrMemberAccess	a -> delta		2535973	0					
ANR	2535984	Identifier	a		2535973	0					
ANR	2535985	Identifier	delta		2535973	1					
ANR	2535986	PtrMemberAccess	b -> delta		2535973	1					
ANR	2535987	Identifier	b		2535973	0					
ANR	2535988	Identifier	delta		2535973	1					
ANR	2535989	Identifier	false		2535973	2					
ANR	2535990	ReturnType	static int		2535973	1					
ANR	2535991	Identifier	var_comparator		2535973	2					
ANR	2535992	ParameterList	"const RAnalVar * a , const RAnalVar * b"		2535973	3					
ANR	2535993	Parameter	const RAnalVar * a	889:26:26433:26449	2535973	0	True				
ANR	2535994	ParameterType	const RAnalVar *		2535973	0					
ANR	2535995	Identifier	a		2535973	1					
ANR	2535996	Parameter	const RAnalVar * b	889:45:26452:26468	2535973	1	True				
ANR	2535997	ParameterType	const RAnalVar *		2535973	0					
ANR	2535998	Identifier	b		2535973	1					
ANR	2535999	CFGEntryNode	ENTRY		2535973		True				
ANR	2536000	CFGExitNode	EXIT		2535973		True				
ANR	2536001	Symbol	a		2535973						
ANR	2536002	Symbol	b		2535973						
ANR	2536003	Symbol	false		2535973						
ANR	2536004	Symbol	b -> delta		2535973						
ANR	2536005	Symbol	* a		2535973						
ANR	2536006	Symbol	a -> delta		2535973						
ANR	2536007	Symbol	* b		2535973						
ANR	2536008	Function	r_anal_var_list_show	894:0:26548:30483							
ANR	2536009	FunctionDef	"r_anal_var_list_show (RAnal * anal , RAnalFunction * fcn , int kind , int mode , PJ * pj)"		2536008	0					
ANR	2536010	CompoundStatement		894:93:26641:30483	2536008	0					
ANR	2536011	IdentifierDeclStatement	"RList * list = r_anal_var_list ( anal , fcn , kind ) ;"	895:1:26644:26691	2536008	0	True				
ANR	2536012	IdentifierDecl	"* list = r_anal_var_list ( anal , fcn , kind )"		2536008	0					
ANR	2536013	IdentifierDeclType	RList *		2536008	0					
ANR	2536014	Identifier	list		2536008	1					
ANR	2536015	AssignmentExpression	"* list = r_anal_var_list ( anal , fcn , kind )"		2536008	2		=			
ANR	2536016	Identifier	list		2536008	0					
ANR	2536017	CallExpression	"r_anal_var_list ( anal , fcn , kind )"		2536008	1					
ANR	2536018	Callee	r_anal_var_list		2536008	0					
ANR	2536019	Identifier	r_anal_var_list		2536008	0					
ANR	2536020	ArgumentList	anal		2536008	1					
ANR	2536021	Argument	anal		2536008	0					
ANR	2536022	Identifier	anal		2536008	0					
ANR	2536023	Argument	fcn		2536008	1					
ANR	2536024	Identifier	fcn		2536008	0					
ANR	2536025	Argument	kind		2536008	2					
ANR	2536026	Identifier	kind		2536008	0					
ANR	2536027	IdentifierDeclStatement	RAnalVar * var ;	896:1:26694:26707	2536008	1	True				
ANR	2536028	IdentifierDecl	* var		2536008	0					
ANR	2536029	IdentifierDeclType	RAnalVar *		2536008	0					
ANR	2536030	Identifier	var		2536008	1					
ANR	2536031	IdentifierDeclStatement	RListIter * iter ;	897:1:26710:26725	2536008	2	True				
ANR	2536032	IdentifierDecl	* iter		2536008	0					
ANR	2536033	IdentifierDeclType	RListIter *		2536008	0					
ANR	2536034	Identifier	iter		2536008	1					
ANR	2536035	IfStatement	if ( ! pj && mode == 'j' )		2536008	3					
ANR	2536036	Condition	! pj && mode == 'j'	898:5:26732:26749	2536008	0	True				
ANR	2536037	AndExpression	! pj && mode == 'j'		2536008	0		&&			
ANR	2536038	UnaryOperationExpression	! pj		2536008	0					
ANR	2536039	UnaryOperator	!		2536008	0					
ANR	2536040	Identifier	pj		2536008	1					
ANR	2536041	EqualityExpression	mode == 'j'		2536008	1		==			
ANR	2536042	Identifier	mode		2536008	0					
ANR	2536043	PrimaryExpression	'j'		2536008	1					
ANR	2536044	CompoundStatement		5:25:110:110	2536008	1					
ANR	2536045	ReturnStatement	return ;	899:2:26756:26762	2536008	0	True				
ANR	2536046	IfStatement	if ( mode == 'j' )		2536008	4					
ANR	2536047	Condition	mode == 'j'	901:5:26772:26782	2536008	0	True				
ANR	2536048	EqualityExpression	mode == 'j'		2536008	0		==			
ANR	2536049	Identifier	mode		2536008	0					
ANR	2536050	PrimaryExpression	'j'		2536008	1					
ANR	2536051	CompoundStatement		8:18:143:143	2536008	1					
ANR	2536052	ExpressionStatement	pj_a ( pj )	902:2:26789:26798	2536008	0	True				
ANR	2536053	CallExpression	pj_a ( pj )		2536008	0					
ANR	2536054	Callee	pj_a		2536008	0					
ANR	2536055	Identifier	pj_a		2536008	0					
ANR	2536056	ArgumentList	pj		2536008	1					
ANR	2536057	Argument	pj		2536008	0					
ANR	2536058	Identifier	pj		2536008	0					
ANR	2536059	IfStatement	if ( ! list )		2536008	5					
ANR	2536060	Condition	! list	904:5:26808:26812	2536008	0	True				
ANR	2536061	UnaryOperationExpression	! list		2536008	0					
ANR	2536062	UnaryOperator	!		2536008	0					
ANR	2536063	Identifier	list		2536008	1					
ANR	2536064	CompoundStatement		11:12:173:173	2536008	1					
ANR	2536065	IfStatement	if ( mode == 'j' )		2536008	0					
ANR	2536066	Condition	mode == 'j'	905:6:26823:26833	2536008	0	True				
ANR	2536067	EqualityExpression	mode == 'j'		2536008	0		==			
ANR	2536068	Identifier	mode		2536008	0					
ANR	2536069	PrimaryExpression	'j'		2536008	1					
ANR	2536070	CompoundStatement		12:19:194:194	2536008	1					
ANR	2536071	ExpressionStatement	pj_end ( pj )	906:3:26841:26852	2536008	0	True				
ANR	2536072	CallExpression	pj_end ( pj )		2536008	0					
ANR	2536073	Callee	pj_end		2536008	0					
ANR	2536074	Identifier	pj_end		2536008	0					
ANR	2536075	ArgumentList	pj		2536008	1					
ANR	2536076	Argument	pj		2536008	0					
ANR	2536077	Identifier	pj		2536008	0					
ANR	2536078	ReturnStatement	return ;	908:2:26860:26866	2536008	1	True				
ANR	2536079	ExpressionStatement	"r_list_sort ( list , ( RListComparator ) var_comparator )"	910:1:26872:26924	2536008	6	True				
ANR	2536080	CallExpression	"r_list_sort ( list , ( RListComparator ) var_comparator )"		2536008	0					
ANR	2536081	Callee	r_list_sort		2536008	0					
ANR	2536082	Identifier	r_list_sort		2536008	0					
ANR	2536083	ArgumentList	list		2536008	1					
ANR	2536084	Argument	list		2536008	0					
ANR	2536085	Identifier	list		2536008	0					
ANR	2536086	Argument	( RListComparator ) var_comparator		2536008	1					
ANR	2536087	CastExpression	( RListComparator ) var_comparator		2536008	0					
ANR	2536088	CastTarget	RListComparator		2536008	0					
ANR	2536089	Identifier	var_comparator		2536008	1					
ANR	2536090	Statement	r_list_foreach	911:1:26927:26940	2536008	7	True				
ANR	2536091	Statement	(	911:16:26942:26942	2536008	8	True				
ANR	2536092	Statement	list	911:17:26943:26946	2536008	9	True				
ANR	2536093	Statement	","	911:21:26947:26947	2536008	10	True				
ANR	2536094	Statement	iter	911:23:26949:26952	2536008	11	True				
ANR	2536095	Statement	","	911:27:26953:26953	2536008	12	True				
ANR	2536096	Statement	var	911:29:26955:26957	2536008	13	True				
ANR	2536097	Statement	)	911:32:26958:26958	2536008	14	True				
ANR	2536098	CompoundStatement		18:34:318:318	2536008	15					
ANR	2536099	IfStatement	if ( var -> kind != kind )		2536008	0					
ANR	2536100	Condition	var -> kind != kind	912:6:26968:26984	2536008	0	True				
ANR	2536101	EqualityExpression	var -> kind != kind		2536008	0		!=			
ANR	2536102	PtrMemberAccess	var -> kind		2536008	0					
ANR	2536103	Identifier	var		2536008	0					
ANR	2536104	Identifier	kind		2536008	1					
ANR	2536105	Identifier	kind		2536008	1					
ANR	2536106	CompoundStatement		19:25:345:345	2536008	1					
ANR	2536107	ContinueStatement	continue ;	913:3:26992:27000	2536008	0	True				
ANR	2536108	SwitchStatement	switch ( mode )		2536008	1					
ANR	2536109	Condition	mode	915:10:27016:27019	2536008	0	True				
ANR	2536110	Identifier	mode		2536008	0					
ANR	2536111	CompoundStatement		22:16:380:380	2536008	1					
ANR	2536112	Label	case '*' :	916:2:27026:27034	2536008	0	True				
ANR	2536113	IfStatement	if ( kind == R_ANAL_VAR_KIND_REG )		2536008	1					
ANR	2536114	Condition	kind == R_ANAL_VAR_KIND_REG	918:7:27088:27114	2536008	0	True				
ANR	2536115	EqualityExpression	kind == R_ANAL_VAR_KIND_REG		2536008	0		==			
ANR	2536116	Identifier	kind		2536008	0					
ANR	2536117	Identifier	R_ANAL_VAR_KIND_REG		2536008	1					
ANR	2536118	CompoundStatement		26:4:494:547	2536008	1					
ANR	2536119	IdentifierDeclStatement	"RRegItem * i = r_reg_index_get ( anal -> reg , var -> delta ) ;"	919:4:27136:27189	2536008	0	True				
ANR	2536120	IdentifierDecl	"* i = r_reg_index_get ( anal -> reg , var -> delta )"		2536008	0					
ANR	2536121	IdentifierDeclType	RRegItem *		2536008	0					
ANR	2536122	Identifier	i		2536008	1					
ANR	2536123	AssignmentExpression	"* i = r_reg_index_get ( anal -> reg , var -> delta )"		2536008	2		=			
ANR	2536124	Identifier	i		2536008	0					
ANR	2536125	CallExpression	"r_reg_index_get ( anal -> reg , var -> delta )"		2536008	1					
ANR	2536126	Callee	r_reg_index_get		2536008	0					
ANR	2536127	Identifier	r_reg_index_get		2536008	0					
ANR	2536128	ArgumentList	anal -> reg		2536008	1					
ANR	2536129	Argument	anal -> reg		2536008	0					
ANR	2536130	PtrMemberAccess	anal -> reg		2536008	0					
ANR	2536131	Identifier	anal		2536008	0					
ANR	2536132	Identifier	reg		2536008	1					
ANR	2536133	Argument	var -> delta		2536008	1					
ANR	2536134	PtrMemberAccess	var -> delta		2536008	0					
ANR	2536135	Identifier	var		2536008	0					
ANR	2536136	Identifier	delta		2536008	1					
ANR	2536137	IfStatement	if ( ! i )		2536008	1					
ANR	2536138	Condition	! i	920:8:27199:27200	2536008	0	True				
ANR	2536139	UnaryOperationExpression	! i		2536008	0					
ANR	2536140	UnaryOperator	!		2536008	0					
ANR	2536141	Identifier	i		2536008	1					
ANR	2536142	CompoundStatement		27:12:561:561	2536008	1					
ANR	2536143	ExpressionStatement	"eprintf ( ""Register not found"" )"	921:5:27210:27240	2536008	0	True				
ANR	2536144	CallExpression	"eprintf ( ""Register not found"" )"		2536008	0					
ANR	2536145	Callee	eprintf		2536008	0					
ANR	2536146	Identifier	eprintf		2536008	0					
ANR	2536147	ArgumentList	"""Register not found"""		2536008	1					
ANR	2536148	Argument	"""Register not found"""		2536008	0					
ANR	2536149	PrimaryExpression	"""Register not found"""		2536008	0					
ANR	2536150	BreakStatement	break ;	922:5:27247:27252	2536008	1	True				
ANR	2536151	Statement	anal	924:4:27264:27267	2536008	2	True				
ANR	2536152	Statement	->	924:8:27268:27269	2536008	3	True				
ANR	2536153	Statement	cb_printf	924:10:27270:27278	2536008	4	True				
ANR	2536154	Statement	(	924:20:27280:27280	2536008	5	True				
ANR	2536155	Statement	"""afv%c %s %s %s @ 0x%"""	924:21:27281:27302	2536008	6	True				
ANR	2536156	Statement	PFMT64x	924:43:27303:27309	2536008	7	True				
ANR	2536157	Statement	"""\\n"""	924:51:27311:27314	2536008	8	True				
ANR	2536158	Statement	","	924:55:27315:27315	2536008	9	True				
ANR	2536159	Statement	kind	925:5:27322:27325	2536008	10	True				
ANR	2536160	Statement	","	925:9:27326:27326	2536008	11	True				
ANR	2536161	Statement	i	925:11:27328:27328	2536008	12	True				
ANR	2536162	Statement	->	925:12:27329:27330	2536008	13	True				
ANR	2536163	Statement	name	925:14:27331:27334	2536008	14	True				
ANR	2536164	Statement	","	925:18:27335:27335	2536008	15	True				
ANR	2536165	Statement	var	925:20:27337:27339	2536008	16	True				
ANR	2536166	Statement	->	925:23:27340:27341	2536008	17	True				
ANR	2536167	Statement	name	925:25:27342:27345	2536008	18	True				
ANR	2536168	Statement	","	925:29:27346:27346	2536008	19	True				
ANR	2536169	Statement	var	925:31:27348:27350	2536008	20	True				
ANR	2536170	Statement	->	925:34:27351:27352	2536008	21	True				
ANR	2536171	Statement	type	925:36:27353:27356	2536008	22	True				
ANR	2536172	Statement	","	925:40:27357:27357	2536008	23	True				
ANR	2536173	Statement	fcn	925:42:27359:27361	2536008	24	True				
ANR	2536174	Statement	->	925:45:27362:27363	2536008	25	True				
ANR	2536175	Statement	addr	925:47:27364:27367	2536008	26	True				
ANR	2536176	Statement	)	925:51:27368:27368	2536008	27	True				
ANR	2536177	ExpressionStatement		925:52:27369:27369	2536008	28	True				
ANR	2536178	ElseStatement	else		2536008	0					
ANR	2536179	CompoundStatement		33:10:739:739	2536008	0					
ANR	2536180	Statement	anal	927:4:27387:27390	2536008	0	True				
ANR	2536181	Statement	->	927:8:27391:27392	2536008	1	True				
ANR	2536182	Statement	cb_printf	927:10:27393:27401	2536008	2	True				
ANR	2536183	Statement	(	927:20:27403:27403	2536008	3	True				
ANR	2536184	Statement	"""afv%c %d %s %s @ 0x%"""	927:21:27404:27425	2536008	4	True				
ANR	2536185	Statement	PFMT64x	927:43:27426:27432	2536008	5	True				
ANR	2536186	Statement	"""\\n"""	927:51:27434:27437	2536008	6	True				
ANR	2536187	Statement	","	927:55:27438:27438	2536008	7	True				
ANR	2536188	Statement	kind	928:5:27445:27448	2536008	8	True				
ANR	2536189	Statement	","	928:9:27449:27449	2536008	9	True				
ANR	2536190	Statement	var	928:11:27451:27453	2536008	10	True				
ANR	2536191	Statement	->	928:14:27454:27455	2536008	11	True				
ANR	2536192	Statement	delta	928:16:27456:27460	2536008	12	True				
ANR	2536193	Statement	","	928:21:27461:27461	2536008	13	True				
ANR	2536194	Statement	var	928:23:27463:27465	2536008	14	True				
ANR	2536195	Statement	->	928:26:27466:27467	2536008	15	True				
ANR	2536196	Statement	name	928:28:27468:27471	2536008	16	True				
ANR	2536197	Statement	","	928:32:27472:27472	2536008	17	True				
ANR	2536198	Statement	var	928:34:27474:27476	2536008	18	True				
ANR	2536199	Statement	->	928:37:27477:27478	2536008	19	True				
ANR	2536200	Statement	type	928:39:27479:27482	2536008	20	True				
ANR	2536201	Statement	","	928:43:27483:27483	2536008	21	True				
ANR	2536202	Statement	fcn	929:5:27490:27492	2536008	22	True				
ANR	2536203	Statement	->	929:8:27493:27494	2536008	23	True				
ANR	2536204	Statement	addr	929:10:27495:27498	2536008	24	True				
ANR	2536205	Statement	)	929:14:27499:27499	2536008	25	True				
ANR	2536206	ExpressionStatement		929:15:27500:27500	2536008	26	True				
ANR	2536207	BreakStatement	break ;	931:3:27510:27515	2536008	2	True				
ANR	2536208	Label	case 'j' :	932:2:27519:27527	2536008	3	True				
ANR	2536209	SwitchStatement	switch ( var -> kind )		2536008	4					
ANR	2536210	Condition	var -> kind	933:11:27540:27548	2536008	0	True				
ANR	2536211	PtrMemberAccess	var -> kind		2536008	0					
ANR	2536212	Identifier	var		2536008	0					
ANR	2536213	Identifier	kind		2536008	1					
ANR	2536214	CompoundStatement		40:22:909:909	2536008	1					
ANR	2536215	Label	case R_ANAL_VAR_KIND_BPV :	934:3:27556:27580	2536008	0	True				
ANR	2536216	Identifier	R_ANAL_VAR_KIND_BPV		2536008	0					
ANR	2536217	IfStatement	if ( var -> delta > 0 )		2536008	1					
ANR	2536218	Condition	var -> delta > 0	935:8:27590:27603	2536008	0	True				
ANR	2536219	RelationalExpression	var -> delta > 0		2536008	0		>			
ANR	2536220	PtrMemberAccess	var -> delta		2536008	0					
ANR	2536221	Identifier	var		2536008	0					
ANR	2536222	Identifier	delta		2536008	1					
ANR	2536223	PrimaryExpression	0		2536008	1					
ANR	2536224	CompoundStatement		42:24:964:964	2536008	1					
ANR	2536225	ExpressionStatement	pj_o ( pj )	936:5:27613:27622	2536008	0	True				
ANR	2536226	CallExpression	pj_o ( pj )		2536008	0					
ANR	2536227	Callee	pj_o		2536008	0					
ANR	2536228	Identifier	pj_o		2536008	0					
ANR	2536229	ArgumentList	pj		2536008	1					
ANR	2536230	Argument	pj		2536008	0					
ANR	2536231	Identifier	pj		2536008	0					
ANR	2536232	ExpressionStatement	"pj_ks ( pj , ""name"" , var -> name )"	937:5:27629:27658	2536008	1	True				
ANR	2536233	CallExpression	"pj_ks ( pj , ""name"" , var -> name )"		2536008	0					
ANR	2536234	Callee	pj_ks		2536008	0					
ANR	2536235	Identifier	pj_ks		2536008	0					
ANR	2536236	ArgumentList	pj		2536008	1					
ANR	2536237	Argument	pj		2536008	0					
ANR	2536238	Identifier	pj		2536008	0					
ANR	2536239	Argument	"""name"""		2536008	1					
ANR	2536240	PrimaryExpression	"""name"""		2536008	0					
ANR	2536241	Argument	var -> name		2536008	2					
ANR	2536242	PtrMemberAccess	var -> name		2536008	0					
ANR	2536243	Identifier	var		2536008	0					
ANR	2536244	Identifier	name		2536008	1					
ANR	2536245	ExpressionStatement	"pj_ks ( pj , ""kind"" , ""arg"" )"	938:5:27665:27690	2536008	2	True				
ANR	2536246	CallExpression	"pj_ks ( pj , ""kind"" , ""arg"" )"		2536008	0					
ANR	2536247	Callee	pj_ks		2536008	0					
ANR	2536248	Identifier	pj_ks		2536008	0					
ANR	2536249	ArgumentList	pj		2536008	1					
ANR	2536250	Argument	pj		2536008	0					
ANR	2536251	Identifier	pj		2536008	0					
ANR	2536252	Argument	"""kind"""		2536008	1					
ANR	2536253	PrimaryExpression	"""kind"""		2536008	0					
ANR	2536254	Argument	"""arg"""		2536008	2					
ANR	2536255	PrimaryExpression	"""arg"""		2536008	0					
ANR	2536256	ExpressionStatement	"pj_ks ( pj , ""type"" , var -> type )"	939:5:27697:27726	2536008	3	True				
ANR	2536257	CallExpression	"pj_ks ( pj , ""type"" , var -> type )"		2536008	0					
ANR	2536258	Callee	pj_ks		2536008	0					
ANR	2536259	Identifier	pj_ks		2536008	0					
ANR	2536260	ArgumentList	pj		2536008	1					
ANR	2536261	Argument	pj		2536008	0					
ANR	2536262	Identifier	pj		2536008	0					
ANR	2536263	Argument	"""type"""		2536008	1					
ANR	2536264	PrimaryExpression	"""type"""		2536008	0					
ANR	2536265	Argument	var -> type		2536008	2					
ANR	2536266	PtrMemberAccess	var -> type		2536008	0					
ANR	2536267	Identifier	var		2536008	0					
ANR	2536268	Identifier	type		2536008	1					
ANR	2536269	ExpressionStatement	"pj_k ( pj , ""ref"" )"	940:5:27733:27749	2536008	4	True				
ANR	2536270	CallExpression	"pj_k ( pj , ""ref"" )"		2536008	0					
ANR	2536271	Callee	pj_k		2536008	0					
ANR	2536272	Identifier	pj_k		2536008	0					
ANR	2536273	ArgumentList	pj		2536008	1					
ANR	2536274	Argument	pj		2536008	0					
ANR	2536275	Identifier	pj		2536008	0					
ANR	2536276	Argument	"""ref"""		2536008	1					
ANR	2536277	PrimaryExpression	"""ref"""		2536008	0					
ANR	2536278	ExpressionStatement	pj_o ( pj )	941:5:27756:27765	2536008	5	True				
ANR	2536279	CallExpression	pj_o ( pj )		2536008	0					
ANR	2536280	Callee	pj_o		2536008	0					
ANR	2536281	Identifier	pj_o		2536008	0					
ANR	2536282	ArgumentList	pj		2536008	1					
ANR	2536283	Argument	pj		2536008	0					
ANR	2536284	Identifier	pj		2536008	0					
ANR	2536285	ExpressionStatement	"pj_ks ( pj , ""base"" , anal -> reg -> name [ R_REG_NAME_BP ] )"	942:5:27772:27822	2536008	6	True				
ANR	2536286	CallExpression	"pj_ks ( pj , ""base"" , anal -> reg -> name [ R_REG_NAME_BP ] )"		2536008	0					
ANR	2536287	Callee	pj_ks		2536008	0					
ANR	2536288	Identifier	pj_ks		2536008	0					
ANR	2536289	ArgumentList	pj		2536008	1					
ANR	2536290	Argument	pj		2536008	0					
ANR	2536291	Identifier	pj		2536008	0					
ANR	2536292	Argument	"""base"""		2536008	1					
ANR	2536293	PrimaryExpression	"""base"""		2536008	0					
ANR	2536294	Argument	anal -> reg -> name [ R_REG_NAME_BP ]		2536008	2					
ANR	2536295	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_BP ]		2536008	0					
ANR	2536296	PtrMemberAccess	anal -> reg -> name		2536008	0					
ANR	2536297	PtrMemberAccess	anal -> reg		2536008	0					
ANR	2536298	Identifier	anal		2536008	0					
ANR	2536299	Identifier	reg		2536008	1					
ANR	2536300	Identifier	name		2536008	1					
ANR	2536301	Identifier	R_REG_NAME_BP		2536008	1					
ANR	2536302	ExpressionStatement	"pj_kn ( pj , ""offset"" , ( st64 ) var -> delta )"	943:5:27829:27867	2536008	7	True				
ANR	2536303	CallExpression	"pj_kn ( pj , ""offset"" , ( st64 ) var -> delta )"		2536008	0					
ANR	2536304	Callee	pj_kn		2536008	0					
ANR	2536305	Identifier	pj_kn		2536008	0					
ANR	2536306	ArgumentList	pj		2536008	1					
ANR	2536307	Argument	pj		2536008	0					
ANR	2536308	Identifier	pj		2536008	0					
ANR	2536309	Argument	"""offset"""		2536008	1					
ANR	2536310	PrimaryExpression	"""offset"""		2536008	0					
ANR	2536311	Argument	( st64 ) var -> delta		2536008	2					
ANR	2536312	CastExpression	( st64 ) var -> delta		2536008	0					
ANR	2536313	CastTarget	st64		2536008	0					
ANR	2536314	PtrMemberAccess	var -> delta		2536008	1					
ANR	2536315	Identifier	var		2536008	0					
ANR	2536316	Identifier	delta		2536008	1					
ANR	2536317	ExpressionStatement	pj_end ( pj )	944:5:27874:27885	2536008	8	True				
ANR	2536318	CallExpression	pj_end ( pj )		2536008	0					
ANR	2536319	Callee	pj_end		2536008	0					
ANR	2536320	Identifier	pj_end		2536008	0					
ANR	2536321	ArgumentList	pj		2536008	1					
ANR	2536322	Argument	pj		2536008	0					
ANR	2536323	Identifier	pj		2536008	0					
ANR	2536324	ExpressionStatement	pj_end ( pj )	945:5:27892:27903	2536008	9	True				
ANR	2536325	CallExpression	pj_end ( pj )		2536008	0					
ANR	2536326	Callee	pj_end		2536008	0					
ANR	2536327	Identifier	pj_end		2536008	0					
ANR	2536328	ArgumentList	pj		2536008	1					
ANR	2536329	Argument	pj		2536008	0					
ANR	2536330	Identifier	pj		2536008	0					
ANR	2536331	ElseStatement	else		2536008	0					
ANR	2536332	CompoundStatement		53:11:1274:1274	2536008	0					
ANR	2536333	ExpressionStatement	pj_o ( pj )	947:5:27923:27932	2536008	0	True				
ANR	2536334	CallExpression	pj_o ( pj )		2536008	0					
ANR	2536335	Callee	pj_o		2536008	0					
ANR	2536336	Identifier	pj_o		2536008	0					
ANR	2536337	ArgumentList	pj		2536008	1					
ANR	2536338	Argument	pj		2536008	0					
ANR	2536339	Identifier	pj		2536008	0					
ANR	2536340	ExpressionStatement	"pj_ks ( pj , ""name"" , var -> name )"	948:5:27939:27968	2536008	1	True				
ANR	2536341	CallExpression	"pj_ks ( pj , ""name"" , var -> name )"		2536008	0					
ANR	2536342	Callee	pj_ks		2536008	0					
ANR	2536343	Identifier	pj_ks		2536008	0					
ANR	2536344	ArgumentList	pj		2536008	1					
ANR	2536345	Argument	pj		2536008	0					
ANR	2536346	Identifier	pj		2536008	0					
ANR	2536347	Argument	"""name"""		2536008	1					
ANR	2536348	PrimaryExpression	"""name"""		2536008	0					
ANR	2536349	Argument	var -> name		2536008	2					
ANR	2536350	PtrMemberAccess	var -> name		2536008	0					
ANR	2536351	Identifier	var		2536008	0					
ANR	2536352	Identifier	name		2536008	1					
ANR	2536353	ExpressionStatement	"pj_ks ( pj , ""kind"" , ""var"" )"	949:5:27975:28000	2536008	2	True				
ANR	2536354	CallExpression	"pj_ks ( pj , ""kind"" , ""var"" )"		2536008	0					
ANR	2536355	Callee	pj_ks		2536008	0					
ANR	2536356	Identifier	pj_ks		2536008	0					
ANR	2536357	ArgumentList	pj		2536008	1					
ANR	2536358	Argument	pj		2536008	0					
ANR	2536359	Identifier	pj		2536008	0					
ANR	2536360	Argument	"""kind"""		2536008	1					
ANR	2536361	PrimaryExpression	"""kind"""		2536008	0					
ANR	2536362	Argument	"""var"""		2536008	2					
ANR	2536363	PrimaryExpression	"""var"""		2536008	0					
ANR	2536364	ExpressionStatement	"pj_ks ( pj , ""type"" , var -> type )"	950:5:28007:28036	2536008	3	True				
ANR	2536365	CallExpression	"pj_ks ( pj , ""type"" , var -> type )"		2536008	0					
ANR	2536366	Callee	pj_ks		2536008	0					
ANR	2536367	Identifier	pj_ks		2536008	0					
ANR	2536368	ArgumentList	pj		2536008	1					
ANR	2536369	Argument	pj		2536008	0					
ANR	2536370	Identifier	pj		2536008	0					
ANR	2536371	Argument	"""type"""		2536008	1					
ANR	2536372	PrimaryExpression	"""type"""		2536008	0					
ANR	2536373	Argument	var -> type		2536008	2					
ANR	2536374	PtrMemberAccess	var -> type		2536008	0					
ANR	2536375	Identifier	var		2536008	0					
ANR	2536376	Identifier	type		2536008	1					
ANR	2536377	ExpressionStatement	"pj_k ( pj , ""ref"" )"	951:5:28043:28059	2536008	4	True				
ANR	2536378	CallExpression	"pj_k ( pj , ""ref"" )"		2536008	0					
ANR	2536379	Callee	pj_k		2536008	0					
ANR	2536380	Identifier	pj_k		2536008	0					
ANR	2536381	ArgumentList	pj		2536008	1					
ANR	2536382	Argument	pj		2536008	0					
ANR	2536383	Identifier	pj		2536008	0					
ANR	2536384	Argument	"""ref"""		2536008	1					
ANR	2536385	PrimaryExpression	"""ref"""		2536008	0					
ANR	2536386	ExpressionStatement	pj_o ( pj )	952:5:28066:28075	2536008	5	True				
ANR	2536387	CallExpression	pj_o ( pj )		2536008	0					
ANR	2536388	Callee	pj_o		2536008	0					
ANR	2536389	Identifier	pj_o		2536008	0					
ANR	2536390	ArgumentList	pj		2536008	1					
ANR	2536391	Argument	pj		2536008	0					
ANR	2536392	Identifier	pj		2536008	0					
ANR	2536393	ExpressionStatement	"pj_ks ( pj , ""base"" , anal -> reg -> name [ R_REG_NAME_BP ] )"	953:5:28082:28132	2536008	6	True				
ANR	2536394	CallExpression	"pj_ks ( pj , ""base"" , anal -> reg -> name [ R_REG_NAME_BP ] )"		2536008	0					
ANR	2536395	Callee	pj_ks		2536008	0					
ANR	2536396	Identifier	pj_ks		2536008	0					
ANR	2536397	ArgumentList	pj		2536008	1					
ANR	2536398	Argument	pj		2536008	0					
ANR	2536399	Identifier	pj		2536008	0					
ANR	2536400	Argument	"""base"""		2536008	1					
ANR	2536401	PrimaryExpression	"""base"""		2536008	0					
ANR	2536402	Argument	anal -> reg -> name [ R_REG_NAME_BP ]		2536008	2					
ANR	2536403	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_BP ]		2536008	0					
ANR	2536404	PtrMemberAccess	anal -> reg -> name		2536008	0					
ANR	2536405	PtrMemberAccess	anal -> reg		2536008	0					
ANR	2536406	Identifier	anal		2536008	0					
ANR	2536407	Identifier	reg		2536008	1					
ANR	2536408	Identifier	name		2536008	1					
ANR	2536409	Identifier	R_REG_NAME_BP		2536008	1					
ANR	2536410	ExpressionStatement	"pj_kn ( pj , ""offset"" , ( st64 ) - R_ABS ( var -> delta ) )"	954:5:28139:28186	2536008	7	True				
ANR	2536411	CallExpression	"pj_kn ( pj , ""offset"" , ( st64 ) - R_ABS ( var -> delta ) )"		2536008	0					
ANR	2536412	Callee	pj_kn		2536008	0					
ANR	2536413	Identifier	pj_kn		2536008	0					
ANR	2536414	ArgumentList	pj		2536008	1					
ANR	2536415	Argument	pj		2536008	0					
ANR	2536416	Identifier	pj		2536008	0					
ANR	2536417	Argument	"""offset"""		2536008	1					
ANR	2536418	PrimaryExpression	"""offset"""		2536008	0					
ANR	2536419	Argument	( st64 ) - R_ABS ( var -> delta )		2536008	2					
ANR	2536420	CastExpression	( st64 ) - R_ABS ( var -> delta )		2536008	0					
ANR	2536421	CastTarget	st64		2536008	0					
ANR	2536422	UnaryOperationExpression	- R_ABS ( var -> delta )		2536008	1					
ANR	2536423	UnaryOperator	-		2536008	0					
ANR	2536424	CallExpression	R_ABS ( var -> delta )		2536008	1					
ANR	2536425	Callee	R_ABS		2536008	0					
ANR	2536426	Identifier	R_ABS		2536008	0					
ANR	2536427	ArgumentList	var -> delta		2536008	1					
ANR	2536428	Argument	var -> delta		2536008	0					
ANR	2536429	PtrMemberAccess	var -> delta		2536008	0					
ANR	2536430	Identifier	var		2536008	0					
ANR	2536431	Identifier	delta		2536008	1					
ANR	2536432	ExpressionStatement	pj_end ( pj )	955:5:28193:28204	2536008	8	True				
ANR	2536433	CallExpression	pj_end ( pj )		2536008	0					
ANR	2536434	Callee	pj_end		2536008	0					
ANR	2536435	Identifier	pj_end		2536008	0					
ANR	2536436	ArgumentList	pj		2536008	1					
ANR	2536437	Argument	pj		2536008	0					
ANR	2536438	Identifier	pj		2536008	0					
ANR	2536439	ExpressionStatement	pj_end ( pj )	956:5:28211:28222	2536008	9	True				
ANR	2536440	CallExpression	pj_end ( pj )		2536008	0					
ANR	2536441	Callee	pj_end		2536008	0					
ANR	2536442	Identifier	pj_end		2536008	0					
ANR	2536443	ArgumentList	pj		2536008	1					
ANR	2536444	Argument	pj		2536008	0					
ANR	2536445	Identifier	pj		2536008	0					
ANR	2536446	BreakStatement	break ;	958:4:28234:28239	2536008	2	True				
ANR	2536447	Label	case R_ANAL_VAR_KIND_REG :	959:3:28244:28268	2536008	3	True				
ANR	2536448	Identifier	R_ANAL_VAR_KIND_REG		2536008	0					
ANR	2536449	CompoundStatement		67:4:1634:1687	2536008	4					
ANR	2536450	IdentifierDeclStatement	"RRegItem * i = r_reg_index_get ( anal -> reg , var -> delta ) ;"	960:4:28276:28329	2536008	0	True				
ANR	2536451	IdentifierDecl	"* i = r_reg_index_get ( anal -> reg , var -> delta )"		2536008	0					
ANR	2536452	IdentifierDeclType	RRegItem *		2536008	0					
ANR	2536453	Identifier	i		2536008	1					
ANR	2536454	AssignmentExpression	"* i = r_reg_index_get ( anal -> reg , var -> delta )"		2536008	2		=			
ANR	2536455	Identifier	i		2536008	0					
ANR	2536456	CallExpression	"r_reg_index_get ( anal -> reg , var -> delta )"		2536008	1					
ANR	2536457	Callee	r_reg_index_get		2536008	0					
ANR	2536458	Identifier	r_reg_index_get		2536008	0					
ANR	2536459	ArgumentList	anal -> reg		2536008	1					
ANR	2536460	Argument	anal -> reg		2536008	0					
ANR	2536461	PtrMemberAccess	anal -> reg		2536008	0					
ANR	2536462	Identifier	anal		2536008	0					
ANR	2536463	Identifier	reg		2536008	1					
ANR	2536464	Argument	var -> delta		2536008	1					
ANR	2536465	PtrMemberAccess	var -> delta		2536008	0					
ANR	2536466	Identifier	var		2536008	0					
ANR	2536467	Identifier	delta		2536008	1					
ANR	2536468	IfStatement	if ( ! i )		2536008	1					
ANR	2536469	Condition	! i	961:8:28339:28340	2536008	0	True				
ANR	2536470	UnaryOperationExpression	! i		2536008	0					
ANR	2536471	UnaryOperator	!		2536008	0					
ANR	2536472	Identifier	i		2536008	1					
ANR	2536473	CompoundStatement		68:12:1701:1701	2536008	1					
ANR	2536474	ExpressionStatement	"eprintf ( ""Register not found"" )"	962:5:28350:28380	2536008	0	True				
ANR	2536475	CallExpression	"eprintf ( ""Register not found"" )"		2536008	0					
ANR	2536476	Callee	eprintf		2536008	0					
ANR	2536477	Identifier	eprintf		2536008	0					
ANR	2536478	ArgumentList	"""Register not found"""		2536008	1					
ANR	2536479	Argument	"""Register not found"""		2536008	0					
ANR	2536480	PrimaryExpression	"""Register not found"""		2536008	0					
ANR	2536481	BreakStatement	break ;	963:5:28387:28392	2536008	1	True				
ANR	2536482	ExpressionStatement	pj_o ( pj )	965:4:28404:28413	2536008	2	True				
ANR	2536483	CallExpression	pj_o ( pj )		2536008	0					
ANR	2536484	Callee	pj_o		2536008	0					
ANR	2536485	Identifier	pj_o		2536008	0					
ANR	2536486	ArgumentList	pj		2536008	1					
ANR	2536487	Argument	pj		2536008	0					
ANR	2536488	Identifier	pj		2536008	0					
ANR	2536489	ExpressionStatement	"pj_ks ( pj , ""name"" , var -> name )"	966:4:28419:28448	2536008	3	True				
ANR	2536490	CallExpression	"pj_ks ( pj , ""name"" , var -> name )"		2536008	0					
ANR	2536491	Callee	pj_ks		2536008	0					
ANR	2536492	Identifier	pj_ks		2536008	0					
ANR	2536493	ArgumentList	pj		2536008	1					
ANR	2536494	Argument	pj		2536008	0					
ANR	2536495	Identifier	pj		2536008	0					
ANR	2536496	Argument	"""name"""		2536008	1					
ANR	2536497	PrimaryExpression	"""name"""		2536008	0					
ANR	2536498	Argument	var -> name		2536008	2					
ANR	2536499	PtrMemberAccess	var -> name		2536008	0					
ANR	2536500	Identifier	var		2536008	0					
ANR	2536501	Identifier	name		2536008	1					
ANR	2536502	ExpressionStatement	"pj_ks ( pj , ""kind"" , ""reg"" )"	967:4:28454:28479	2536008	4	True				
ANR	2536503	CallExpression	"pj_ks ( pj , ""kind"" , ""reg"" )"		2536008	0					
ANR	2536504	Callee	pj_ks		2536008	0					
ANR	2536505	Identifier	pj_ks		2536008	0					
ANR	2536506	ArgumentList	pj		2536008	1					
ANR	2536507	Argument	pj		2536008	0					
ANR	2536508	Identifier	pj		2536008	0					
ANR	2536509	Argument	"""kind"""		2536008	1					
ANR	2536510	PrimaryExpression	"""kind"""		2536008	0					
ANR	2536511	Argument	"""reg"""		2536008	2					
ANR	2536512	PrimaryExpression	"""reg"""		2536008	0					
ANR	2536513	ExpressionStatement	"pj_ks ( pj , ""type"" , var -> type )"	968:4:28485:28514	2536008	5	True				
ANR	2536514	CallExpression	"pj_ks ( pj , ""type"" , var -> type )"		2536008	0					
ANR	2536515	Callee	pj_ks		2536008	0					
ANR	2536516	Identifier	pj_ks		2536008	0					
ANR	2536517	ArgumentList	pj		2536008	1					
ANR	2536518	Argument	pj		2536008	0					
ANR	2536519	Identifier	pj		2536008	0					
ANR	2536520	Argument	"""type"""		2536008	1					
ANR	2536521	PrimaryExpression	"""type"""		2536008	0					
ANR	2536522	Argument	var -> type		2536008	2					
ANR	2536523	PtrMemberAccess	var -> type		2536008	0					
ANR	2536524	Identifier	var		2536008	0					
ANR	2536525	Identifier	type		2536008	1					
ANR	2536526	ExpressionStatement	"pj_ks ( pj , ""ref"" , i -> name )"	969:4:28520:28546	2536008	6	True				
ANR	2536527	CallExpression	"pj_ks ( pj , ""ref"" , i -> name )"		2536008	0					
ANR	2536528	Callee	pj_ks		2536008	0					
ANR	2536529	Identifier	pj_ks		2536008	0					
ANR	2536530	ArgumentList	pj		2536008	1					
ANR	2536531	Argument	pj		2536008	0					
ANR	2536532	Identifier	pj		2536008	0					
ANR	2536533	Argument	"""ref"""		2536008	1					
ANR	2536534	PrimaryExpression	"""ref"""		2536008	0					
ANR	2536535	Argument	i -> name		2536008	2					
ANR	2536536	PtrMemberAccess	i -> name		2536008	0					
ANR	2536537	Identifier	i		2536008	0					
ANR	2536538	Identifier	name		2536008	1					
ANR	2536539	ExpressionStatement	pj_end ( pj )	970:4:28552:28563	2536008	7	True				
ANR	2536540	CallExpression	pj_end ( pj )		2536008	0					
ANR	2536541	Callee	pj_end		2536008	0					
ANR	2536542	Identifier	pj_end		2536008	0					
ANR	2536543	ArgumentList	pj		2536008	1					
ANR	2536544	Argument	pj		2536008	0					
ANR	2536545	Identifier	pj		2536008	0					
ANR	2536546	BreakStatement	break ;	972:4:28574:28579	2536008	5	True				
ANR	2536547	Label	case R_ANAL_VAR_KIND_SPV :	973:3:28584:28608	2536008	6	True				
ANR	2536548	Identifier	R_ANAL_VAR_KIND_SPV		2536008	0					
ANR	2536549	IfStatement	if ( var -> isarg )		2536008	7					
ANR	2536550	Condition	var -> isarg	974:8:28618:28627	2536008	0	True				
ANR	2536551	PtrMemberAccess	var -> isarg		2536008	0					
ANR	2536552	Identifier	var		2536008	0					
ANR	2536553	Identifier	isarg		2536008	1					
ANR	2536554	CompoundStatement		81:20:1988:1988	2536008	1					
ANR	2536555	ExpressionStatement	pj_o ( pj )	975:5:28637:28646	2536008	0	True				
ANR	2536556	CallExpression	pj_o ( pj )		2536008	0					
ANR	2536557	Callee	pj_o		2536008	0					
ANR	2536558	Identifier	pj_o		2536008	0					
ANR	2536559	ArgumentList	pj		2536008	1					
ANR	2536560	Argument	pj		2536008	0					
ANR	2536561	Identifier	pj		2536008	0					
ANR	2536562	ExpressionStatement	"pj_ks ( pj , ""name"" , var -> name )"	976:5:28653:28682	2536008	1	True				
ANR	2536563	CallExpression	"pj_ks ( pj , ""name"" , var -> name )"		2536008	0					
ANR	2536564	Callee	pj_ks		2536008	0					
ANR	2536565	Identifier	pj_ks		2536008	0					
ANR	2536566	ArgumentList	pj		2536008	1					
ANR	2536567	Argument	pj		2536008	0					
ANR	2536568	Identifier	pj		2536008	0					
ANR	2536569	Argument	"""name"""		2536008	1					
ANR	2536570	PrimaryExpression	"""name"""		2536008	0					
ANR	2536571	Argument	var -> name		2536008	2					
ANR	2536572	PtrMemberAccess	var -> name		2536008	0					
ANR	2536573	Identifier	var		2536008	0					
ANR	2536574	Identifier	name		2536008	1					
ANR	2536575	ExpressionStatement	"pj_ks ( pj , ""kind"" , ""arg"" )"	977:5:28689:28714	2536008	2	True				
ANR	2536576	CallExpression	"pj_ks ( pj , ""kind"" , ""arg"" )"		2536008	0					
ANR	2536577	Callee	pj_ks		2536008	0					
ANR	2536578	Identifier	pj_ks		2536008	0					
ANR	2536579	ArgumentList	pj		2536008	1					
ANR	2536580	Argument	pj		2536008	0					
ANR	2536581	Identifier	pj		2536008	0					
ANR	2536582	Argument	"""kind"""		2536008	1					
ANR	2536583	PrimaryExpression	"""kind"""		2536008	0					
ANR	2536584	Argument	"""arg"""		2536008	2					
ANR	2536585	PrimaryExpression	"""arg"""		2536008	0					
ANR	2536586	ExpressionStatement	"pj_ks ( pj , ""type"" , var -> type )"	978:5:28721:28750	2536008	3	True				
ANR	2536587	CallExpression	"pj_ks ( pj , ""type"" , var -> type )"		2536008	0					
ANR	2536588	Callee	pj_ks		2536008	0					
ANR	2536589	Identifier	pj_ks		2536008	0					
ANR	2536590	ArgumentList	pj		2536008	1					
ANR	2536591	Argument	pj		2536008	0					
ANR	2536592	Identifier	pj		2536008	0					
ANR	2536593	Argument	"""type"""		2536008	1					
ANR	2536594	PrimaryExpression	"""type"""		2536008	0					
ANR	2536595	Argument	var -> type		2536008	2					
ANR	2536596	PtrMemberAccess	var -> type		2536008	0					
ANR	2536597	Identifier	var		2536008	0					
ANR	2536598	Identifier	type		2536008	1					
ANR	2536599	ExpressionStatement	"pj_k ( pj , ""ref"" )"	979:5:28757:28773	2536008	4	True				
ANR	2536600	CallExpression	"pj_k ( pj , ""ref"" )"		2536008	0					
ANR	2536601	Callee	pj_k		2536008	0					
ANR	2536602	Identifier	pj_k		2536008	0					
ANR	2536603	ArgumentList	pj		2536008	1					
ANR	2536604	Argument	pj		2536008	0					
ANR	2536605	Identifier	pj		2536008	0					
ANR	2536606	Argument	"""ref"""		2536008	1					
ANR	2536607	PrimaryExpression	"""ref"""		2536008	0					
ANR	2536608	ExpressionStatement	pj_o ( pj )	980:5:28780:28789	2536008	5	True				
ANR	2536609	CallExpression	pj_o ( pj )		2536008	0					
ANR	2536610	Callee	pj_o		2536008	0					
ANR	2536611	Identifier	pj_o		2536008	0					
ANR	2536612	ArgumentList	pj		2536008	1					
ANR	2536613	Argument	pj		2536008	0					
ANR	2536614	Identifier	pj		2536008	0					
ANR	2536615	ExpressionStatement	"pj_ks ( pj , ""base"" , anal -> reg -> name [ R_REG_NAME_SP ] )"	981:5:28796:28846	2536008	6	True				
ANR	2536616	CallExpression	"pj_ks ( pj , ""base"" , anal -> reg -> name [ R_REG_NAME_SP ] )"		2536008	0					
ANR	2536617	Callee	pj_ks		2536008	0					
ANR	2536618	Identifier	pj_ks		2536008	0					
ANR	2536619	ArgumentList	pj		2536008	1					
ANR	2536620	Argument	pj		2536008	0					
ANR	2536621	Identifier	pj		2536008	0					
ANR	2536622	Argument	"""base"""		2536008	1					
ANR	2536623	PrimaryExpression	"""base"""		2536008	0					
ANR	2536624	Argument	anal -> reg -> name [ R_REG_NAME_SP ]		2536008	2					
ANR	2536625	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_SP ]		2536008	0					
ANR	2536626	PtrMemberAccess	anal -> reg -> name		2536008	0					
ANR	2536627	PtrMemberAccess	anal -> reg		2536008	0					
ANR	2536628	Identifier	anal		2536008	0					
ANR	2536629	Identifier	reg		2536008	1					
ANR	2536630	Identifier	name		2536008	1					
ANR	2536631	Identifier	R_REG_NAME_SP		2536008	1					
ANR	2536632	ExpressionStatement	"pj_kn ( pj , ""offset"" , var -> delta )"	982:5:28853:28885	2536008	7	True				
ANR	2536633	CallExpression	"pj_kn ( pj , ""offset"" , var -> delta )"		2536008	0					
ANR	2536634	Callee	pj_kn		2536008	0					
ANR	2536635	Identifier	pj_kn		2536008	0					
ANR	2536636	ArgumentList	pj		2536008	1					
ANR	2536637	Argument	pj		2536008	0					
ANR	2536638	Identifier	pj		2536008	0					
ANR	2536639	Argument	"""offset"""		2536008	1					
ANR	2536640	PrimaryExpression	"""offset"""		2536008	0					
ANR	2536641	Argument	var -> delta		2536008	2					
ANR	2536642	PtrMemberAccess	var -> delta		2536008	0					
ANR	2536643	Identifier	var		2536008	0					
ANR	2536644	Identifier	delta		2536008	1					
ANR	2536645	ExpressionStatement	pj_end ( pj )	983:5:28892:28903	2536008	8	True				
ANR	2536646	CallExpression	pj_end ( pj )		2536008	0					
ANR	2536647	Callee	pj_end		2536008	0					
ANR	2536648	Identifier	pj_end		2536008	0					
ANR	2536649	ArgumentList	pj		2536008	1					
ANR	2536650	Argument	pj		2536008	0					
ANR	2536651	Identifier	pj		2536008	0					
ANR	2536652	ExpressionStatement	pj_end ( pj )	984:5:28910:28921	2536008	9	True				
ANR	2536653	CallExpression	pj_end ( pj )		2536008	0					
ANR	2536654	Callee	pj_end		2536008	0					
ANR	2536655	Identifier	pj_end		2536008	0					
ANR	2536656	ArgumentList	pj		2536008	1					
ANR	2536657	Argument	pj		2536008	0					
ANR	2536658	Identifier	pj		2536008	0					
ANR	2536659	ElseStatement	else		2536008	0					
ANR	2536660	CompoundStatement		102:5:2613:2654	2536008	0					
ANR	2536661	ExpressionStatement	pj_o ( pj )	986:5:28941:28950	2536008	0	True				
ANR	2536662	CallExpression	pj_o ( pj )		2536008	0					
ANR	2536663	Callee	pj_o		2536008	0					
ANR	2536664	Identifier	pj_o		2536008	0					
ANR	2536665	ArgumentList	pj		2536008	1					
ANR	2536666	Argument	pj		2536008	0					
ANR	2536667	Identifier	pj		2536008	0					
ANR	2536668	ExpressionStatement	"pj_ks ( pj , ""name"" , var -> name )"	987:5:28957:28986	2536008	1	True				
ANR	2536669	CallExpression	"pj_ks ( pj , ""name"" , var -> name )"		2536008	0					
ANR	2536670	Callee	pj_ks		2536008	0					
ANR	2536671	Identifier	pj_ks		2536008	0					
ANR	2536672	ArgumentList	pj		2536008	1					
ANR	2536673	Argument	pj		2536008	0					
ANR	2536674	Identifier	pj		2536008	0					
ANR	2536675	Argument	"""name"""		2536008	1					
ANR	2536676	PrimaryExpression	"""name"""		2536008	0					
ANR	2536677	Argument	var -> name		2536008	2					
ANR	2536678	PtrMemberAccess	var -> name		2536008	0					
ANR	2536679	Identifier	var		2536008	0					
ANR	2536680	Identifier	name		2536008	1					
ANR	2536681	ExpressionStatement	"pj_ks ( pj , ""kind"" , ""var"" )"	988:5:28993:29018	2536008	2	True				
ANR	2536682	CallExpression	"pj_ks ( pj , ""kind"" , ""var"" )"		2536008	0					
ANR	2536683	Callee	pj_ks		2536008	0					
ANR	2536684	Identifier	pj_ks		2536008	0					
ANR	2536685	ArgumentList	pj		2536008	1					
ANR	2536686	Argument	pj		2536008	0					
ANR	2536687	Identifier	pj		2536008	0					
ANR	2536688	Argument	"""kind"""		2536008	1					
ANR	2536689	PrimaryExpression	"""kind"""		2536008	0					
ANR	2536690	Argument	"""var"""		2536008	2					
ANR	2536691	PrimaryExpression	"""var"""		2536008	0					
ANR	2536692	ExpressionStatement	"pj_ks ( pj , ""type"" , var -> type )"	989:5:29025:29054	2536008	3	True				
ANR	2536693	CallExpression	"pj_ks ( pj , ""type"" , var -> type )"		2536008	0					
ANR	2536694	Callee	pj_ks		2536008	0					
ANR	2536695	Identifier	pj_ks		2536008	0					
ANR	2536696	ArgumentList	pj		2536008	1					
ANR	2536697	Argument	pj		2536008	0					
ANR	2536698	Identifier	pj		2536008	0					
ANR	2536699	Argument	"""type"""		2536008	1					
ANR	2536700	PrimaryExpression	"""type"""		2536008	0					
ANR	2536701	Argument	var -> type		2536008	2					
ANR	2536702	PtrMemberAccess	var -> type		2536008	0					
ANR	2536703	Identifier	var		2536008	0					
ANR	2536704	Identifier	type		2536008	1					
ANR	2536705	ExpressionStatement	"pj_k ( pj , ""ref"" )"	990:5:29061:29077	2536008	4	True				
ANR	2536706	CallExpression	"pj_k ( pj , ""ref"" )"		2536008	0					
ANR	2536707	Callee	pj_k		2536008	0					
ANR	2536708	Identifier	pj_k		2536008	0					
ANR	2536709	ArgumentList	pj		2536008	1					
ANR	2536710	Argument	pj		2536008	0					
ANR	2536711	Identifier	pj		2536008	0					
ANR	2536712	Argument	"""ref"""		2536008	1					
ANR	2536713	PrimaryExpression	"""ref"""		2536008	0					
ANR	2536714	ExpressionStatement	pj_o ( pj )	991:5:29084:29093	2536008	5	True				
ANR	2536715	CallExpression	pj_o ( pj )		2536008	0					
ANR	2536716	Callee	pj_o		2536008	0					
ANR	2536717	Identifier	pj_o		2536008	0					
ANR	2536718	ArgumentList	pj		2536008	1					
ANR	2536719	Argument	pj		2536008	0					
ANR	2536720	Identifier	pj		2536008	0					
ANR	2536721	ExpressionStatement	"pj_ks ( pj , ""base"" , anal -> reg -> name [ R_REG_NAME_SP ] )"	992:5:29100:29150	2536008	6	True				
ANR	2536722	CallExpression	"pj_ks ( pj , ""base"" , anal -> reg -> name [ R_REG_NAME_SP ] )"		2536008	0					
ANR	2536723	Callee	pj_ks		2536008	0					
ANR	2536724	Identifier	pj_ks		2536008	0					
ANR	2536725	ArgumentList	pj		2536008	1					
ANR	2536726	Argument	pj		2536008	0					
ANR	2536727	Identifier	pj		2536008	0					
ANR	2536728	Argument	"""base"""		2536008	1					
ANR	2536729	PrimaryExpression	"""base"""		2536008	0					
ANR	2536730	Argument	anal -> reg -> name [ R_REG_NAME_SP ]		2536008	2					
ANR	2536731	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_SP ]		2536008	0					
ANR	2536732	PtrMemberAccess	anal -> reg -> name		2536008	0					
ANR	2536733	PtrMemberAccess	anal -> reg		2536008	0					
ANR	2536734	Identifier	anal		2536008	0					
ANR	2536735	Identifier	reg		2536008	1					
ANR	2536736	Identifier	name		2536008	1					
ANR	2536737	Identifier	R_REG_NAME_SP		2536008	1					
ANR	2536738	IdentifierDeclStatement	char print_offset [ 32 ] ;	993:5:29157:29178	2536008	7	True				
ANR	2536739	IdentifierDecl	print_offset [ 32 ]		2536008	0					
ANR	2536740	IdentifierDeclType	char [ 32 ]		2536008	0					
ANR	2536741	Identifier	print_offset		2536008	1					
ANR	2536742	PrimaryExpression	32		2536008	2					
ANR	2536743	Statement	sprintf	994:5:29185:29191	2536008	8	True				
ANR	2536744	Statement	(	994:13:29193:29193	2536008	9	True				
ANR	2536745	Statement	print_offset	994:14:29194:29205	2536008	10	True				
ANR	2536746	Statement	","	994:26:29206:29206	2536008	11	True				
ANR	2536747	Statement	"""-%"""	994:28:29208:29211	2536008	12	True				
ANR	2536748	Statement	PFMT64d	994:32:29212:29218	2536008	13	True				
ANR	2536749	Statement	""""""	994:39:29219:29220	2536008	14	True				
ANR	2536750	Statement	","	994:41:29221:29221	2536008	15	True				
ANR	2536751	Statement	(	994:43:29223:29223	2536008	16	True				
ANR	2536752	Statement	st64	994:44:29224:29227	2536008	17	True				
ANR	2536753	Statement	)	994:48:29228:29228	2536008	18	True				
ANR	2536754	Statement	R_ABS	994:49:29229:29233	2536008	19	True				
ANR	2536755	Statement	(	994:54:29234:29234	2536008	20	True				
ANR	2536756	Statement	var	994:55:29235:29237	2536008	21	True				
ANR	2536757	Statement	->	994:58:29238:29239	2536008	22	True				
ANR	2536758	Statement	delta	994:60:29240:29244	2536008	23	True				
ANR	2536759	Statement	)	994:65:29245:29245	2536008	24	True				
ANR	2536760	Statement	)	994:66:29246:29246	2536008	25	True				
ANR	2536761	ExpressionStatement		994:67:29247:29247	2536008	26	True				
ANR	2536762	IdentifierDeclStatement	char * printoffset = strdup ( print_offset ) ;	995:5:29255:29296	2536008	27	True				
ANR	2536763	IdentifierDecl	* printoffset = strdup ( print_offset )		2536008	0					
ANR	2536764	IdentifierDeclType	char *		2536008	0					
ANR	2536765	Identifier	printoffset		2536008	1					
ANR	2536766	AssignmentExpression	* printoffset = strdup ( print_offset )		2536008	2		=			
ANR	2536767	Identifier	printoffset		2536008	0					
ANR	2536768	CallExpression	strdup ( print_offset )		2536008	1					
ANR	2536769	Callee	strdup		2536008	0					
ANR	2536770	Identifier	strdup		2536008	0					
ANR	2536771	ArgumentList	print_offset		2536008	1					
ANR	2536772	Argument	print_offset		2536008	0					
ANR	2536773	Identifier	print_offset		2536008	0					
ANR	2536774	ExpressionStatement	"pj_ks ( pj , ""offset"" , printoffset )"	996:5:29303:29336	2536008	28	True				
ANR	2536775	CallExpression	"pj_ks ( pj , ""offset"" , printoffset )"		2536008	0					
ANR	2536776	Callee	pj_ks		2536008	0					
ANR	2536777	Identifier	pj_ks		2536008	0					
ANR	2536778	ArgumentList	pj		2536008	1					
ANR	2536779	Argument	pj		2536008	0					
ANR	2536780	Identifier	pj		2536008	0					
ANR	2536781	Argument	"""offset"""		2536008	1					
ANR	2536782	PrimaryExpression	"""offset"""		2536008	0					
ANR	2536783	Argument	printoffset		2536008	2					
ANR	2536784	Identifier	printoffset		2536008	0					
ANR	2536785	ExpressionStatement	pj_end ( pj )	997:5:29343:29354	2536008	29	True				
ANR	2536786	CallExpression	pj_end ( pj )		2536008	0					
ANR	2536787	Callee	pj_end		2536008	0					
ANR	2536788	Identifier	pj_end		2536008	0					
ANR	2536789	ArgumentList	pj		2536008	1					
ANR	2536790	Argument	pj		2536008	0					
ANR	2536791	Identifier	pj		2536008	0					
ANR	2536792	ExpressionStatement	pj_end ( pj )	998:5:29361:29372	2536008	30	True				
ANR	2536793	CallExpression	pj_end ( pj )		2536008	0					
ANR	2536794	Callee	pj_end		2536008	0					
ANR	2536795	Identifier	pj_end		2536008	0					
ANR	2536796	ArgumentList	pj		2536008	1					
ANR	2536797	Argument	pj		2536008	0					
ANR	2536798	Identifier	pj		2536008	0					
ANR	2536799	ExpressionStatement	free ( printoffset )	999:5:29379:29397	2536008	31	True				
ANR	2536800	CallExpression	free ( printoffset )		2536008	0					
ANR	2536801	Callee	free		2536008	0					
ANR	2536802	Identifier	free		2536008	0					
ANR	2536803	ArgumentList	printoffset		2536008	1					
ANR	2536804	Argument	printoffset		2536008	0					
ANR	2536805	Identifier	printoffset		2536008	0					
ANR	2536806	BreakStatement	break ;	1001:4:29409:29414	2536008	8	True				
ANR	2536807	BreakStatement	break ;	1003:3:29424:29429	2536008	5	True				
ANR	2536808	Label	default :	1004:2:29433:29440	2536008	6	True				
ANR	2536809	Identifier	default		2536008	0					
ANR	2536810	SwitchStatement	switch ( kind )		2536008	7					
ANR	2536811	Condition	kind	1005:11:29453:29456	2536008	0	True				
ANR	2536812	Identifier	kind		2536008	0					
ANR	2536813	CompoundStatement		112:17:2817:2817	2536008	1					
ANR	2536814	Label	case R_ANAL_VAR_KIND_BPV :	1006:3:29464:29488	2536008	0	True				
ANR	2536815	Identifier	R_ANAL_VAR_KIND_BPV		2536008	0					
ANR	2536816	IfStatement	if ( var -> delta > 0 )		2536008	1					
ANR	2536817	Condition	var -> delta > 0	1007:8:29498:29511	2536008	0	True				
ANR	2536818	RelationalExpression	var -> delta > 0		2536008	0		>			
ANR	2536819	PtrMemberAccess	var -> delta		2536008	0					
ANR	2536820	Identifier	var		2536008	0					
ANR	2536821	Identifier	delta		2536008	1					
ANR	2536822	PrimaryExpression	0		2536008	1					
ANR	2536823	CompoundStatement		114:24:2872:2872	2536008	1					
ANR	2536824	ExpressionStatement	"anal -> cb_printf ( ""arg %s %s @ %s+0x%x\\n"" , var -> type , var -> name , anal -> reg -> name [ R_REG_NAME_BP ] , var -> delta )"	1008:5:29521:29646	2536008	0	True				
ANR	2536825	CallExpression	"anal -> cb_printf ( ""arg %s %s @ %s+0x%x\\n"" , var -> type , var -> name , anal -> reg -> name [ R_REG_NAME_BP ] , var -> delta )"		2536008	0					
ANR	2536826	Callee	anal -> cb_printf		2536008	0					
ANR	2536827	PtrMemberAccess	anal -> cb_printf		2536008	0					
ANR	2536828	Identifier	anal		2536008	0					
ANR	2536829	Identifier	cb_printf		2536008	1					
ANR	2536830	ArgumentList	"""arg %s %s @ %s+0x%x\\n"""		2536008	1					
ANR	2536831	Argument	"""arg %s %s @ %s+0x%x\\n"""		2536008	0					
ANR	2536832	PrimaryExpression	"""arg %s %s @ %s+0x%x\\n"""		2536008	0					
ANR	2536833	Argument	var -> type		2536008	1					
ANR	2536834	PtrMemberAccess	var -> type		2536008	0					
ANR	2536835	Identifier	var		2536008	0					
ANR	2536836	Identifier	type		2536008	1					
ANR	2536837	Argument	var -> name		2536008	2					
ANR	2536838	PtrMemberAccess	var -> name		2536008	0					
ANR	2536839	Identifier	var		2536008	0					
ANR	2536840	Identifier	name		2536008	1					
ANR	2536841	Argument	anal -> reg -> name [ R_REG_NAME_BP ]		2536008	3					
ANR	2536842	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_BP ]		2536008	0					
ANR	2536843	PtrMemberAccess	anal -> reg -> name		2536008	0					
ANR	2536844	PtrMemberAccess	anal -> reg		2536008	0					
ANR	2536845	Identifier	anal		2536008	0					
ANR	2536846	Identifier	reg		2536008	1					
ANR	2536847	Identifier	name		2536008	1					
ANR	2536848	Identifier	R_REG_NAME_BP		2536008	1					
ANR	2536849	Argument	var -> delta		2536008	4					
ANR	2536850	PtrMemberAccess	var -> delta		2536008	0					
ANR	2536851	Identifier	var		2536008	0					
ANR	2536852	Identifier	delta		2536008	1					
ANR	2536853	ElseStatement	else		2536008	0					
ANR	2536854	CompoundStatement		119:11:3017:3017	2536008	0					
ANR	2536855	ExpressionStatement	"anal -> cb_printf ( ""var %s %s @ %s-0x%x\\n"" , var -> type , var -> name , anal -> reg -> name [ R_REG_NAME_BP ] , - var -> delta )"	1013:5:29666:29792	2536008	0	True				
ANR	2536856	CallExpression	"anal -> cb_printf ( ""var %s %s @ %s-0x%x\\n"" , var -> type , var -> name , anal -> reg -> name [ R_REG_NAME_BP ] , - var -> delta )"		2536008	0					
ANR	2536857	Callee	anal -> cb_printf		2536008	0					
ANR	2536858	PtrMemberAccess	anal -> cb_printf		2536008	0					
ANR	2536859	Identifier	anal		2536008	0					
ANR	2536860	Identifier	cb_printf		2536008	1					
ANR	2536861	ArgumentList	"""var %s %s @ %s-0x%x\\n"""		2536008	1					
ANR	2536862	Argument	"""var %s %s @ %s-0x%x\\n"""		2536008	0					
ANR	2536863	PrimaryExpression	"""var %s %s @ %s-0x%x\\n"""		2536008	0					
ANR	2536864	Argument	var -> type		2536008	1					
ANR	2536865	PtrMemberAccess	var -> type		2536008	0					
ANR	2536866	Identifier	var		2536008	0					
ANR	2536867	Identifier	type		2536008	1					
ANR	2536868	Argument	var -> name		2536008	2					
ANR	2536869	PtrMemberAccess	var -> name		2536008	0					
ANR	2536870	Identifier	var		2536008	0					
ANR	2536871	Identifier	name		2536008	1					
ANR	2536872	Argument	anal -> reg -> name [ R_REG_NAME_BP ]		2536008	3					
ANR	2536873	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_BP ]		2536008	0					
ANR	2536874	PtrMemberAccess	anal -> reg -> name		2536008	0					
ANR	2536875	PtrMemberAccess	anal -> reg		2536008	0					
ANR	2536876	Identifier	anal		2536008	0					
ANR	2536877	Identifier	reg		2536008	1					
ANR	2536878	Identifier	name		2536008	1					
ANR	2536879	Identifier	R_REG_NAME_BP		2536008	1					
ANR	2536880	Argument	- var -> delta		2536008	4					
ANR	2536881	UnaryOperationExpression	- var -> delta		2536008	0					
ANR	2536882	UnaryOperator	-		2536008	0					
ANR	2536883	PtrMemberAccess	var -> delta		2536008	1					
ANR	2536884	Identifier	var		2536008	0					
ANR	2536885	Identifier	delta		2536008	1					
ANR	2536886	BreakStatement	break ;	1018:4:29804:29809	2536008	2	True				
ANR	2536887	Label	case R_ANAL_VAR_KIND_REG :	1019:3:29814:29838	2536008	3	True				
ANR	2536888	Identifier	R_ANAL_VAR_KIND_REG		2536008	0					
ANR	2536889	CompoundStatement		127:4:3204:3257	2536008	4					
ANR	2536890	IdentifierDeclStatement	"RRegItem * i = r_reg_index_get ( anal -> reg , var -> delta ) ;"	1020:4:29846:29899	2536008	0	True				
ANR	2536891	IdentifierDecl	"* i = r_reg_index_get ( anal -> reg , var -> delta )"		2536008	0					
ANR	2536892	IdentifierDeclType	RRegItem *		2536008	0					
ANR	2536893	Identifier	i		2536008	1					
ANR	2536894	AssignmentExpression	"* i = r_reg_index_get ( anal -> reg , var -> delta )"		2536008	2		=			
ANR	2536895	Identifier	i		2536008	0					
ANR	2536896	CallExpression	"r_reg_index_get ( anal -> reg , var -> delta )"		2536008	1					
ANR	2536897	Callee	r_reg_index_get		2536008	0					
ANR	2536898	Identifier	r_reg_index_get		2536008	0					
ANR	2536899	ArgumentList	anal -> reg		2536008	1					
ANR	2536900	Argument	anal -> reg		2536008	0					
ANR	2536901	PtrMemberAccess	anal -> reg		2536008	0					
ANR	2536902	Identifier	anal		2536008	0					
ANR	2536903	Identifier	reg		2536008	1					
ANR	2536904	Argument	var -> delta		2536008	1					
ANR	2536905	PtrMemberAccess	var -> delta		2536008	0					
ANR	2536906	Identifier	var		2536008	0					
ANR	2536907	Identifier	delta		2536008	1					
ANR	2536908	IfStatement	if ( ! i )		2536008	1					
ANR	2536909	Condition	! i	1021:8:29909:29910	2536008	0	True				
ANR	2536910	UnaryOperationExpression	! i		2536008	0					
ANR	2536911	UnaryOperator	!		2536008	0					
ANR	2536912	Identifier	i		2536008	1					
ANR	2536913	CompoundStatement		128:12:3271:3271	2536008	1					
ANR	2536914	ExpressionStatement	"eprintf ( ""Register not found"" )"	1022:5:29920:29950	2536008	0	True				
ANR	2536915	CallExpression	"eprintf ( ""Register not found"" )"		2536008	0					
ANR	2536916	Callee	eprintf		2536008	0					
ANR	2536917	Identifier	eprintf		2536008	0					
ANR	2536918	ArgumentList	"""Register not found"""		2536008	1					
ANR	2536919	Argument	"""Register not found"""		2536008	0					
ANR	2536920	PrimaryExpression	"""Register not found"""		2536008	0					
ANR	2536921	BreakStatement	break ;	1023:5:29957:29962	2536008	1	True				
ANR	2536922	ExpressionStatement	"anal -> cb_printf ( ""arg %s %s @ %s\\n"" , var -> type , var -> name , i -> name )"	1025:4:29974:30046	2536008	2	True				
ANR	2536923	CallExpression	"anal -> cb_printf ( ""arg %s %s @ %s\\n"" , var -> type , var -> name , i -> name )"		2536008	0					
ANR	2536924	Callee	anal -> cb_printf		2536008	0					
ANR	2536925	PtrMemberAccess	anal -> cb_printf		2536008	0					
ANR	2536926	Identifier	anal		2536008	0					
ANR	2536927	Identifier	cb_printf		2536008	1					
ANR	2536928	ArgumentList	"""arg %s %s @ %s\\n"""		2536008	1					
ANR	2536929	Argument	"""arg %s %s @ %s\\n"""		2536008	0					
ANR	2536930	PrimaryExpression	"""arg %s %s @ %s\\n"""		2536008	0					
ANR	2536931	Argument	var -> type		2536008	1					
ANR	2536932	PtrMemberAccess	var -> type		2536008	0					
ANR	2536933	Identifier	var		2536008	0					
ANR	2536934	Identifier	type		2536008	1					
ANR	2536935	Argument	var -> name		2536008	2					
ANR	2536936	PtrMemberAccess	var -> name		2536008	0					
ANR	2536937	Identifier	var		2536008	0					
ANR	2536938	Identifier	name		2536008	1					
ANR	2536939	Argument	i -> name		2536008	3					
ANR	2536940	PtrMemberAccess	i -> name		2536008	0					
ANR	2536941	Identifier	i		2536008	0					
ANR	2536942	Identifier	name		2536008	1					
ANR	2536943	BreakStatement	break ;	1028:4:30058:30063	2536008	5	True				
ANR	2536944	Label	case R_ANAL_VAR_KIND_SPV :	1029:3:30068:30092	2536008	6	True				
ANR	2536945	Identifier	R_ANAL_VAR_KIND_SPV		2536008	0					
ANR	2536946	IfStatement	if ( ! var -> isarg )		2536008	7					
ANR	2536947	Condition	! var -> isarg	1030:8:30102:30112	2536008	0	True				
ANR	2536948	UnaryOperationExpression	! var -> isarg		2536008	0					
ANR	2536949	UnaryOperator	!		2536008	0					
ANR	2536950	PtrMemberAccess	var -> isarg		2536008	1					
ANR	2536951	Identifier	var		2536008	0					
ANR	2536952	Identifier	isarg		2536008	1					
ANR	2536953	CompoundStatement		137:21:3473:3473	2536008	1					
ANR	2536954	ExpressionStatement	"anal -> cb_printf ( ""var %s %s @ %s+0x%x\\n"" , var -> type , var -> name , anal -> reg -> name [ R_REG_NAME_SP ] , var -> delta )"	1031:5:30122:30247	2536008	0	True				
ANR	2536955	CallExpression	"anal -> cb_printf ( ""var %s %s @ %s+0x%x\\n"" , var -> type , var -> name , anal -> reg -> name [ R_REG_NAME_SP ] , var -> delta )"		2536008	0					
ANR	2536956	Callee	anal -> cb_printf		2536008	0					
ANR	2536957	PtrMemberAccess	anal -> cb_printf		2536008	0					
ANR	2536958	Identifier	anal		2536008	0					
ANR	2536959	Identifier	cb_printf		2536008	1					
ANR	2536960	ArgumentList	"""var %s %s @ %s+0x%x\\n"""		2536008	1					
ANR	2536961	Argument	"""var %s %s @ %s+0x%x\\n"""		2536008	0					
ANR	2536962	PrimaryExpression	"""var %s %s @ %s+0x%x\\n"""		2536008	0					
ANR	2536963	Argument	var -> type		2536008	1					
ANR	2536964	PtrMemberAccess	var -> type		2536008	0					
ANR	2536965	Identifier	var		2536008	0					
ANR	2536966	Identifier	type		2536008	1					
ANR	2536967	Argument	var -> name		2536008	2					
ANR	2536968	PtrMemberAccess	var -> name		2536008	0					
ANR	2536969	Identifier	var		2536008	0					
ANR	2536970	Identifier	name		2536008	1					
ANR	2536971	Argument	anal -> reg -> name [ R_REG_NAME_SP ]		2536008	3					
ANR	2536972	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_SP ]		2536008	0					
ANR	2536973	PtrMemberAccess	anal -> reg -> name		2536008	0					
ANR	2536974	PtrMemberAccess	anal -> reg		2536008	0					
ANR	2536975	Identifier	anal		2536008	0					
ANR	2536976	Identifier	reg		2536008	1					
ANR	2536977	Identifier	name		2536008	1					
ANR	2536978	Identifier	R_REG_NAME_SP		2536008	1					
ANR	2536979	Argument	var -> delta		2536008	4					
ANR	2536980	PtrMemberAccess	var -> delta		2536008	0					
ANR	2536981	Identifier	var		2536008	0					
ANR	2536982	Identifier	delta		2536008	1					
ANR	2536983	ElseStatement	else		2536008	0					
ANR	2536984	CompoundStatement		142:11:3618:3618	2536008	0					
ANR	2536985	ExpressionStatement	"anal -> cb_printf ( ""arg %s %s @ %s+0x%x\\n"" , var -> type , var -> name , anal -> reg -> name [ R_REG_NAME_SP ] , var -> delta )"	1036:5:30267:30392	2536008	0	True				
ANR	2536986	CallExpression	"anal -> cb_printf ( ""arg %s %s @ %s+0x%x\\n"" , var -> type , var -> name , anal -> reg -> name [ R_REG_NAME_SP ] , var -> delta )"		2536008	0					
ANR	2536987	Callee	anal -> cb_printf		2536008	0					
ANR	2536988	PtrMemberAccess	anal -> cb_printf		2536008	0					
ANR	2536989	Identifier	anal		2536008	0					
ANR	2536990	Identifier	cb_printf		2536008	1					
ANR	2536991	ArgumentList	"""arg %s %s @ %s+0x%x\\n"""		2536008	1					
ANR	2536992	Argument	"""arg %s %s @ %s+0x%x\\n"""		2536008	0					
ANR	2536993	PrimaryExpression	"""arg %s %s @ %s+0x%x\\n"""		2536008	0					
ANR	2536994	Argument	var -> type		2536008	1					
ANR	2536995	PtrMemberAccess	var -> type		2536008	0					
ANR	2536996	Identifier	var		2536008	0					
ANR	2536997	Identifier	type		2536008	1					
ANR	2536998	Argument	var -> name		2536008	2					
ANR	2536999	PtrMemberAccess	var -> name		2536008	0					
ANR	2537000	Identifier	var		2536008	0					
ANR	2537001	Identifier	name		2536008	1					
ANR	2537002	Argument	anal -> reg -> name [ R_REG_NAME_SP ]		2536008	3					
ANR	2537003	ArrayIndexing	anal -> reg -> name [ R_REG_NAME_SP ]		2536008	0					
ANR	2537004	PtrMemberAccess	anal -> reg -> name		2536008	0					
ANR	2537005	PtrMemberAccess	anal -> reg		2536008	0					
ANR	2537006	Identifier	anal		2536008	0					
ANR	2537007	Identifier	reg		2536008	1					
ANR	2537008	Identifier	name		2536008	1					
ANR	2537009	Identifier	R_REG_NAME_SP		2536008	1					
ANR	2537010	Argument	var -> delta		2536008	4					
ANR	2537011	PtrMemberAccess	var -> delta		2536008	0					
ANR	2537012	Identifier	var		2536008	0					
ANR	2537013	Identifier	delta		2536008	1					
ANR	2537014	BreakStatement	break ;	1042:4:30405:30410	2536008	8	True				
ANR	2537015	IfStatement	if ( mode == 'j' )		2536008	16					
ANR	2537016	Condition	mode == 'j'	1046:5:30429:30439	2536008	0	True				
ANR	2537017	EqualityExpression	mode == 'j'		2536008	0		==			
ANR	2537018	Identifier	mode		2536008	0					
ANR	2537019	PrimaryExpression	'j'		2536008	1					
ANR	2537020	CompoundStatement		153:18:3800:3800	2536008	1					
ANR	2537021	ExpressionStatement	pj_end ( pj )	1047:2:30446:30457	2536008	0	True				
ANR	2537022	CallExpression	pj_end ( pj )		2536008	0					
ANR	2537023	Callee	pj_end		2536008	0					
ANR	2537024	Identifier	pj_end		2536008	0					
ANR	2537025	ArgumentList	pj		2536008	1					
ANR	2537026	Argument	pj		2536008	0					
ANR	2537027	Identifier	pj		2536008	0					
ANR	2537028	ExpressionStatement	r_list_free ( list )	1049:1:30463:30481	2536008	17	True				
ANR	2537029	CallExpression	r_list_free ( list )		2536008	0					
ANR	2537030	Callee	r_list_free		2536008	0					
ANR	2537031	Identifier	r_list_free		2536008	0					
ANR	2537032	ArgumentList	list		2536008	1					
ANR	2537033	Argument	list		2536008	0					
ANR	2537034	Identifier	list		2536008	0					
ANR	2537035	ReturnType	R_API void		2536008	1					
ANR	2537036	Identifier	r_anal_var_list_show		2536008	2					
ANR	2537037	ParameterList	"RAnal * anal , RAnalFunction * fcn , int kind , int mode , PJ * pj"		2536008	3					
ANR	2537038	Parameter	RAnal * anal	894:32:26580:26590	2536008	0	True				
ANR	2537039	ParameterType	RAnal *		2536008	0					
ANR	2537040	Identifier	anal		2536008	1					
ANR	2537041	Parameter	RAnalFunction * fcn	894:45:26593:26610	2536008	1	True				
ANR	2537042	ParameterType	RAnalFunction *		2536008	0					
ANR	2537043	Identifier	fcn		2536008	1					
ANR	2537044	Parameter	int kind	894:65:26613:26620	2536008	2	True				
ANR	2537045	ParameterType	int		2536008	0					
ANR	2537046	Identifier	kind		2536008	1					
ANR	2537047	Parameter	int mode	894:75:26623:26630	2536008	3	True				
ANR	2537048	ParameterType	int		2536008	0					
ANR	2537049	Identifier	mode		2536008	1					
ANR	2537050	Parameter	PJ * pj	894:85:26633:26638	2536008	4	True				
ANR	2537051	ParameterType	PJ *		2536008	0					
ANR	2537052	Identifier	pj		2536008	1					
ANR	2537053	CFGEntryNode	ENTRY		2536008		True				
ANR	2537054	CFGExitNode	EXIT		2536008		True				
ANR	2537055	CFGErrorNode	ERROR		2536008		True				
ANR	2537056	Symbol	* R_REG_NAME_SP		2536008						
ANR	2537057	Symbol	anal -> reg		2536008						
ANR	2537058	Symbol	R_ABS		2536008						
ANR	2537059	Symbol	var -> type		2536008						
ANR	2537060	Symbol	var -> delta		2536008						
ANR	2537061	Symbol	fcn		2536008						
ANR	2537062	Symbol	mode		2536008						
ANR	2537063	Symbol	* var		2536008						
ANR	2537064	Symbol	* * anal		2536008						
ANR	2537065	Symbol	i -> name		2536008						
ANR	2537066	Symbol	* anal		2536008						
ANR	2537067	Symbol	* * * anal		2536008						
ANR	2537068	Symbol	* anal -> reg		2536008						
ANR	2537069	Symbol	* * anal -> reg		2536008						
ANR	2537070	Symbol	anal -> reg -> name		2536008						
ANR	2537071	Symbol	R_ANAL_VAR_KIND_REG		2536008						
ANR	2537072	Symbol	printoffset		2536008						
ANR	2537073	Symbol	R_REG_NAME_BP		2536008						
ANR	2537074	Symbol	print_offset		2536008						
ANR	2537075	Symbol	kind		2536008						
ANR	2537076	Symbol	var		2536008						
ANR	2537077	Symbol	iter		2536008						
ANR	2537078	Symbol	i		2536008						
ANR	2537079	Symbol	r_reg_index_get		2536008						
ANR	2537080	Symbol	list		2536008						
ANR	2537081	Symbol	var -> isarg		2536008						
ANR	2537082	Symbol	var_comparator		2536008						
ANR	2537083	Symbol	r_anal_var_list		2536008						
ANR	2537084	Symbol	* i		2536008						
ANR	2537085	Symbol	R_REG_NAME_SP		2536008						
ANR	2537086	Symbol	anal		2536008						
ANR	2537087	Symbol	* R_REG_NAME_BP		2536008						
ANR	2537088	Symbol	var -> name		2536008						
ANR	2537089	Symbol	pj		2536008						
ANR	2537090	Symbol	strdup		2536008						
ANR	2537091	Symbol	var -> kind		2536008						
ANR	2537092	Symbol	* anal -> reg -> name		2536008						
ANR	2537093	Function	r_anal_fcn_vars_cache_init	1052:0:30486:30921							
ANR	2537094	FunctionDef	"r_anal_fcn_vars_cache_init (RAnal * anal , RAnalFcnVarsCache * cache , RAnalFunction * fcn)"		2537093	0					
ANR	2537095	CompoundStatement		1052:97:30583:30921	2537093	0					
ANR	2537096	ExpressionStatement	"cache -> bvars = r_anal_var_list ( anal , fcn , 'b' )"	1053:1:30586:30633	2537093	0	True				
ANR	2537097	AssignmentExpression	"cache -> bvars = r_anal_var_list ( anal , fcn , 'b' )"		2537093	0		=			
ANR	2537098	PtrMemberAccess	cache -> bvars		2537093	0					
ANR	2537099	Identifier	cache		2537093	0					
ANR	2537100	Identifier	bvars		2537093	1					
ANR	2537101	CallExpression	"r_anal_var_list ( anal , fcn , 'b' )"		2537093	1					
ANR	2537102	Callee	r_anal_var_list		2537093	0					
ANR	2537103	Identifier	r_anal_var_list		2537093	0					
ANR	2537104	ArgumentList	anal		2537093	1					
ANR	2537105	Argument	anal		2537093	0					
ANR	2537106	Identifier	anal		2537093	0					
ANR	2537107	Argument	fcn		2537093	1					
ANR	2537108	Identifier	fcn		2537093	0					
ANR	2537109	Argument	'b'		2537093	2					
ANR	2537110	PrimaryExpression	'b'		2537093	0					
ANR	2537111	ExpressionStatement	"cache -> rvars = r_anal_var_list ( anal , fcn , 'r' )"	1054:1:30636:30683	2537093	1	True				
ANR	2537112	AssignmentExpression	"cache -> rvars = r_anal_var_list ( anal , fcn , 'r' )"		2537093	0		=			
ANR	2537113	PtrMemberAccess	cache -> rvars		2537093	0					
ANR	2537114	Identifier	cache		2537093	0					
ANR	2537115	Identifier	rvars		2537093	1					
ANR	2537116	CallExpression	"r_anal_var_list ( anal , fcn , 'r' )"		2537093	1					
ANR	2537117	Callee	r_anal_var_list		2537093	0					
ANR	2537118	Identifier	r_anal_var_list		2537093	0					
ANR	2537119	ArgumentList	anal		2537093	1					
ANR	2537120	Argument	anal		2537093	0					
ANR	2537121	Identifier	anal		2537093	0					
ANR	2537122	Argument	fcn		2537093	1					
ANR	2537123	Identifier	fcn		2537093	0					
ANR	2537124	Argument	'r'		2537093	2					
ANR	2537125	PrimaryExpression	'r'		2537093	0					
ANR	2537126	ExpressionStatement	"cache -> svars = r_anal_var_list ( anal , fcn , 's' )"	1055:1:30686:30733	2537093	2	True				
ANR	2537127	AssignmentExpression	"cache -> svars = r_anal_var_list ( anal , fcn , 's' )"		2537093	0		=			
ANR	2537128	PtrMemberAccess	cache -> svars		2537093	0					
ANR	2537129	Identifier	cache		2537093	0					
ANR	2537130	Identifier	svars		2537093	1					
ANR	2537131	CallExpression	"r_anal_var_list ( anal , fcn , 's' )"		2537093	1					
ANR	2537132	Callee	r_anal_var_list		2537093	0					
ANR	2537133	Identifier	r_anal_var_list		2537093	0					
ANR	2537134	ArgumentList	anal		2537093	1					
ANR	2537135	Argument	anal		2537093	0					
ANR	2537136	Identifier	anal		2537093	0					
ANR	2537137	Argument	fcn		2537093	1					
ANR	2537138	Identifier	fcn		2537093	0					
ANR	2537139	Argument	's'		2537093	2					
ANR	2537140	PrimaryExpression	's'		2537093	0					
ANR	2537141	ExpressionStatement	"r_list_sort ( cache -> bvars , ( RListComparator ) var_comparator )"	1056:1:30736:30795	2537093	3	True				
ANR	2537142	CallExpression	"r_list_sort ( cache -> bvars , ( RListComparator ) var_comparator )"		2537093	0					
ANR	2537143	Callee	r_list_sort		2537093	0					
ANR	2537144	Identifier	r_list_sort		2537093	0					
ANR	2537145	ArgumentList	cache -> bvars		2537093	1					
ANR	2537146	Argument	cache -> bvars		2537093	0					
ANR	2537147	PtrMemberAccess	cache -> bvars		2537093	0					
ANR	2537148	Identifier	cache		2537093	0					
ANR	2537149	Identifier	bvars		2537093	1					
ANR	2537150	Argument	( RListComparator ) var_comparator		2537093	1					
ANR	2537151	CastExpression	( RListComparator ) var_comparator		2537093	0					
ANR	2537152	CastTarget	RListComparator		2537093	0					
ANR	2537153	Identifier	var_comparator		2537093	1					
ANR	2537154	ExpressionStatement	"r_list_sort ( cache -> rvars , ( RListComparator ) var_comparator )"	1057:1:30798:30857	2537093	4	True				
ANR	2537155	CallExpression	"r_list_sort ( cache -> rvars , ( RListComparator ) var_comparator )"		2537093	0					
ANR	2537156	Callee	r_list_sort		2537093	0					
ANR	2537157	Identifier	r_list_sort		2537093	0					
ANR	2537158	ArgumentList	cache -> rvars		2537093	1					
ANR	2537159	Argument	cache -> rvars		2537093	0					
ANR	2537160	PtrMemberAccess	cache -> rvars		2537093	0					
ANR	2537161	Identifier	cache		2537093	0					
ANR	2537162	Identifier	rvars		2537093	1					
ANR	2537163	Argument	( RListComparator ) var_comparator		2537093	1					
ANR	2537164	CastExpression	( RListComparator ) var_comparator		2537093	0					
ANR	2537165	CastTarget	RListComparator		2537093	0					
ANR	2537166	Identifier	var_comparator		2537093	1					
ANR	2537167	ExpressionStatement	"r_list_sort ( cache -> svars , ( RListComparator ) var_comparator )"	1058:1:30860:30919	2537093	5	True				
ANR	2537168	CallExpression	"r_list_sort ( cache -> svars , ( RListComparator ) var_comparator )"		2537093	0					
ANR	2537169	Callee	r_list_sort		2537093	0					
ANR	2537170	Identifier	r_list_sort		2537093	0					
ANR	2537171	ArgumentList	cache -> svars		2537093	1					
ANR	2537172	Argument	cache -> svars		2537093	0					
ANR	2537173	PtrMemberAccess	cache -> svars		2537093	0					
ANR	2537174	Identifier	cache		2537093	0					
ANR	2537175	Identifier	svars		2537093	1					
ANR	2537176	Argument	( RListComparator ) var_comparator		2537093	1					
ANR	2537177	CastExpression	( RListComparator ) var_comparator		2537093	0					
ANR	2537178	CastTarget	RListComparator		2537093	0					
ANR	2537179	Identifier	var_comparator		2537093	1					
ANR	2537180	ReturnType	R_API void		2537093	1					
ANR	2537181	Identifier	r_anal_fcn_vars_cache_init		2537093	2					
ANR	2537182	ParameterList	"RAnal * anal , RAnalFcnVarsCache * cache , RAnalFunction * fcn"		2537093	3					
ANR	2537183	Parameter	RAnal * anal	1052:38:30524:30534	2537093	0	True				
ANR	2537184	ParameterType	RAnal *		2537093	0					
ANR	2537185	Identifier	anal		2537093	1					
ANR	2537186	Parameter	RAnalFcnVarsCache * cache	1052:51:30537:30560	2537093	1	True				
ANR	2537187	ParameterType	RAnalFcnVarsCache *		2537093	0					
ANR	2537188	Identifier	cache		2537093	1					
ANR	2537189	Parameter	RAnalFunction * fcn	1052:77:30563:30580	2537093	2	True				
ANR	2537190	ParameterType	RAnalFunction *		2537093	0					
ANR	2537191	Identifier	fcn		2537093	1					
ANR	2537192	CFGEntryNode	ENTRY		2537093		True				
ANR	2537193	CFGExitNode	EXIT		2537093		True				
ANR	2537194	Symbol	fcn		2537093						
ANR	2537195	Symbol	cache -> rvars		2537093						
ANR	2537196	Symbol	cache		2537093						
ANR	2537197	Symbol	r_anal_var_list		2537093						
ANR	2537198	Symbol	anal		2537093						
ANR	2537199	Symbol	cache -> svars		2537093						
ANR	2537200	Symbol	cache -> bvars		2537093						
ANR	2537201	Symbol	* cache		2537093						
ANR	2537202	Symbol	var_comparator		2537093						
ANR	2537203	Function	r_anal_fcn_vars_cache_fini	1061:0:30924:31105							
ANR	2537204	FunctionDef	r_anal_fcn_vars_cache_fini (RAnalFcnVarsCache * cache)		2537203	0					
ANR	2537205	CompoundStatement		1061:64:30988:31105	2537203	0					
ANR	2537206	IfStatement	if ( ! cache )		2537203	0					
ANR	2537207	Condition	! cache	1062:5:30995:31000	2537203	0	True				
ANR	2537208	UnaryOperationExpression	! cache		2537203	0					
ANR	2537209	UnaryOperator	!		2537203	0					
ANR	2537210	Identifier	cache		2537203	1					
ANR	2537211	CompoundStatement		2:13:14:14	2537203	1					
ANR	2537212	ReturnStatement	return ;	1063:2:31007:31013	2537203	0	True				
ANR	2537213	ExpressionStatement	r_list_free ( cache -> bvars )	1065:1:31019:31045	2537203	1	True				
ANR	2537214	CallExpression	r_list_free ( cache -> bvars )		2537203	0					
ANR	2537215	Callee	r_list_free		2537203	0					
ANR	2537216	Identifier	r_list_free		2537203	0					
ANR	2537217	ArgumentList	cache -> bvars		2537203	1					
ANR	2537218	Argument	cache -> bvars		2537203	0					
ANR	2537219	PtrMemberAccess	cache -> bvars		2537203	0					
ANR	2537220	Identifier	cache		2537203	0					
ANR	2537221	Identifier	bvars		2537203	1					
ANR	2537222	ExpressionStatement	r_list_free ( cache -> rvars )	1066:1:31048:31074	2537203	2	True				
ANR	2537223	CallExpression	r_list_free ( cache -> rvars )		2537203	0					
ANR	2537224	Callee	r_list_free		2537203	0					
ANR	2537225	Identifier	r_list_free		2537203	0					
ANR	2537226	ArgumentList	cache -> rvars		2537203	1					
ANR	2537227	Argument	cache -> rvars		2537203	0					
ANR	2537228	PtrMemberAccess	cache -> rvars		2537203	0					
ANR	2537229	Identifier	cache		2537203	0					
ANR	2537230	Identifier	rvars		2537203	1					
ANR	2537231	ExpressionStatement	r_list_free ( cache -> svars )	1067:1:31077:31103	2537203	3	True				
ANR	2537232	CallExpression	r_list_free ( cache -> svars )		2537203	0					
ANR	2537233	Callee	r_list_free		2537203	0					
ANR	2537234	Identifier	r_list_free		2537203	0					
ANR	2537235	ArgumentList	cache -> svars		2537203	1					
ANR	2537236	Argument	cache -> svars		2537203	0					
ANR	2537237	PtrMemberAccess	cache -> svars		2537203	0					
ANR	2537238	Identifier	cache		2537203	0					
ANR	2537239	Identifier	svars		2537203	1					
ANR	2537240	ReturnType	R_API void		2537203	1					
ANR	2537241	Identifier	r_anal_fcn_vars_cache_fini		2537203	2					
ANR	2537242	ParameterList	RAnalFcnVarsCache * cache		2537203	3					
ANR	2537243	Parameter	RAnalFcnVarsCache * cache	1061:38:30962:30985	2537203	0	True				
ANR	2537244	ParameterType	RAnalFcnVarsCache *		2537203	0					
ANR	2537245	Identifier	cache		2537203	1					
ANR	2537246	CFGEntryNode	ENTRY		2537203		True				
ANR	2537247	CFGExitNode	EXIT		2537203		True				
ANR	2537248	Symbol	cache -> rvars		2537203						
ANR	2537249	Symbol	cache		2537203						
ANR	2537250	Symbol	cache -> svars		2537203						
ANR	2537251	Symbol	cache -> bvars		2537203						
ANR	2537252	Symbol	* cache		2537203						
ANR	2537253	DeclStmt									
ANR	2537254	Decl							RAnalFcnVarsCache	RAnalFcnVarsCache *	cache
ANR	2537255	DeclStmt									
ANR	2537256	Decl							RStrBuf	RStrBuf *	buf
ANR	2537257	DeclStmt									
ANR	2537258	Decl							Sdb	Sdb *	TDB
ANR	2537259	DeclStmt									
ANR	2537260	Decl							char	char *	type_fcn_name
ANR	2537261	DeclStmt									
ANR	2537262	Decl							const char	const char *	fcn_type
ANR	2537263	DeclStmt									
ANR	2537264	Decl							const char	const char *	sp
ANR	2537265	DeclStmt									
ANR	2537266	Decl							int	int	i
ANR	2537267	Decl							int	int	argc
ANR	2537268	DeclStmt									
ANR	2537269	Decl							bool	bool	comma
ANR	2537270	DeclStmt									
ANR	2537271	Decl							char	char *	type
ANR	2537272	DeclStmt									
ANR	2537273	Decl							const char	const char *	name
ANR	2537274	DeclStmt									
ANR	2537275	Decl							size_t	size_t	len
ANR	2537276	DeclStmt									
ANR	2537277	Decl							const char	const char *	tc
ANR	2537278	DeclStmt									
ANR	2537279	Decl							bool	bool	comma
ANR	2537280	DeclStmt									
ANR	2537281	Decl							bool	bool	arg_bp
ANR	2537282	DeclStmt									
ANR	2537283	Decl							size_t	size_t	tmp_len
ANR	2537284	DeclStmt									
ANR	2537285	Decl							RAnalVar	RAnalVar *	var
ANR	2537286	DeclStmt									
ANR	2537287	Decl							RListIter	RListIter *	iter
