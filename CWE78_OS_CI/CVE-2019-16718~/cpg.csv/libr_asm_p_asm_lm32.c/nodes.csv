command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3498360	File	data/converged/CVE-2019-16718~_radare2/libr_asm_p_asm_lm32.c								
ANR	3498361	Function	reg_number_to_string	14:0:262:623							
ANR	3498362	FunctionDef	"reg_number_to_string (ut8 reg , char * str)"		3498361	0					
ANR	3498363	CompoundStatement		14:52:314:623	3498361	0					
ANR	3498364	IdentifierDeclStatement	ut8 match_idx = 0xff ;	15:1:317:337	3498361	0	True				
ANR	3498365	IdentifierDecl	match_idx = 0xff		3498361	0					
ANR	3498366	IdentifierDeclType	ut8		3498361	0					
ANR	3498367	Identifier	match_idx		3498361	1					
ANR	3498368	AssignmentExpression	match_idx = 0xff		3498361	2		=			
ANR	3498369	Identifier	match_idx		3498361	0					
ANR	3498370	PrimaryExpression	0xff		3498361	1					
ANR	3498371	IdentifierDeclStatement	int i ;	16:1:340:345	3498361	1	True				
ANR	3498372	IdentifierDecl	i		3498361	0					
ANR	3498373	IdentifierDeclType	int		3498361	0					
ANR	3498374	Identifier	i		3498361	1					
ANR	3498375	ForStatement	for ( i = 0 ; i < RAsmLm32RegNumber ; i ++ )		3498361	2					
ANR	3498376	ForInit	i = 0 ;	17:6:353:358	3498361	0	True				
ANR	3498377	AssignmentExpression	i = 0		3498361	0		=			
ANR	3498378	Identifier	i		3498361	0					
ANR	3498379	PrimaryExpression	0		3498361	1					
ANR	3498380	Condition	i < RAsmLm32RegNumber	17:13:360:380	3498361	1	True				
ANR	3498381	RelationalExpression	i < RAsmLm32RegNumber		3498361	0		<			
ANR	3498382	Identifier	i		3498361	0					
ANR	3498383	Identifier	RAsmLm32RegNumber		3498361	1					
ANR	3498384	PostIncDecOperationExpression	i ++	17:36:383:385	3498361	2	True				
ANR	3498385	Identifier	i		3498361	0					
ANR	3498386	IncDec	++		3498361	1					
ANR	3498387	CompoundStatement		4:41:73:73	3498361	3					
ANR	3498388	IfStatement	if ( RAsmLm32Regs [ i ] . number == reg )		3498361	0					
ANR	3498389	Condition	RAsmLm32Regs [ i ] . number == reg	18:6:396:424	3498361	0	True				
ANR	3498390	EqualityExpression	RAsmLm32Regs [ i ] . number == reg		3498361	0		==			
ANR	3498391	MemberAccess	RAsmLm32Regs [ i ] . number		3498361	0					
ANR	3498392	ArrayIndexing	RAsmLm32Regs [ i ]		3498361	0					
ANR	3498393	Identifier	RAsmLm32Regs		3498361	0					
ANR	3498394	Identifier	i		3498361	1					
ANR	3498395	Identifier	number		3498361	1					
ANR	3498396	Identifier	reg		3498361	1					
ANR	3498397	CompoundStatement		5:37:112:112	3498361	1					
ANR	3498398	ExpressionStatement	match_idx = i	19:3:432:445	3498361	0	True				
ANR	3498399	AssignmentExpression	match_idx = i		3498361	0		=			
ANR	3498400	Identifier	match_idx		3498361	0					
ANR	3498401	Identifier	i		3498361	1					
ANR	3498402	BreakStatement	break ;	20:3:450:455	3498361	1	True				
ANR	3498403	IfStatement	if ( match_idx == 0xff )		3498361	3					
ANR	3498404	Condition	match_idx == 0xff	24:5:530:546	3498361	0	True				
ANR	3498405	EqualityExpression	match_idx == 0xff		3498361	0		==			
ANR	3498406	Identifier	match_idx		3498361	0					
ANR	3498407	PrimaryExpression	0xff		3498361	1					
ANR	3498408	CompoundStatement		11:24:234:234	3498361	1					
ANR	3498409	ReturnStatement	return - 1 ;	25:2:553:562	3498361	0	True				
ANR	3498410	UnaryOperationExpression	- 1		3498361	0					
ANR	3498411	UnaryOperator	-		3498361	0					
ANR	3498412	PrimaryExpression	1		3498361	1					
ANR	3498413	ExpressionStatement	"strcpy ( str , RAsmLm32Regs [ match_idx ] . name )"	27:1:568:610	3498361	4	True				
ANR	3498414	CallExpression	"strcpy ( str , RAsmLm32Regs [ match_idx ] . name )"		3498361	0					
ANR	3498415	Callee	strcpy		3498361	0					
ANR	3498416	Identifier	strcpy		3498361	0					
ANR	3498417	ArgumentList	str		3498361	1					
ANR	3498418	Argument	str		3498361	0					
ANR	3498419	Identifier	str		3498361	0					
ANR	3498420	Argument	RAsmLm32Regs [ match_idx ] . name		3498361	1					
ANR	3498421	MemberAccess	RAsmLm32Regs [ match_idx ] . name		3498361	0					
ANR	3498422	ArrayIndexing	RAsmLm32Regs [ match_idx ]		3498361	0					
ANR	3498423	Identifier	RAsmLm32Regs		3498361	0					
ANR	3498424	Identifier	match_idx		3498361	1					
ANR	3498425	Identifier	name		3498361	1					
ANR	3498426	ReturnStatement	return 0 ;	28:1:613:621	3498361	5	True				
ANR	3498427	PrimaryExpression	0		3498361	0					
ANR	3498428	ReturnType	static int		3498361	1					
ANR	3498429	Identifier	reg_number_to_string		3498361	2					
ANR	3498430	ParameterList	"ut8 reg , char * str"		3498361	3					
ANR	3498431	Parameter	ut8 reg	14:32:294:300	3498361	0	True				
ANR	3498432	ParameterType	ut8		3498361	0					
ANR	3498433	Identifier	reg		3498361	1					
ANR	3498434	Parameter	char * str	14:41:303:311	3498361	1	True				
ANR	3498435	ParameterType	char *		3498361	0					
ANR	3498436	Identifier	str		3498361	1					
ANR	3498437	CFGEntryNode	ENTRY		3498361		True				
ANR	3498438	CFGExitNode	EXIT		3498361		True				
ANR	3498439	Symbol	str		3498361						
ANR	3498440	Symbol	RAsmLm32RegNumber		3498361						
ANR	3498441	Symbol	RAsmLm32Regs		3498361						
ANR	3498442	Symbol	* RAsmLm32Regs		3498361						
ANR	3498443	Symbol	* i		3498361						
ANR	3498444	Symbol	reg		3498361						
ANR	3498445	Symbol	RAsmLm32Regs [ match_idx ] . name		3498361						
ANR	3498446	Symbol	i		3498361						
ANR	3498447	Symbol	RAsmLm32Regs [ i ] . number		3498361						
ANR	3498448	Symbol	* match_idx		3498361						
ANR	3498449	Symbol	match_idx		3498361						
ANR	3498450	Function	string_to_reg_number	32:0:642:986							
ANR	3498451	FunctionDef	"string_to_reg_number (const char * str , ut8 * num)"		3498450	0					
ANR	3498452	CompoundStatement		32:59:701:986	3498450	0					
ANR	3498453	IdentifierDeclStatement	ut8 match_idx = 0xff ;	33:1:704:724	3498450	0	True				
ANR	3498454	IdentifierDecl	match_idx = 0xff		3498450	0					
ANR	3498455	IdentifierDeclType	ut8		3498450	0					
ANR	3498456	Identifier	match_idx		3498450	1					
ANR	3498457	AssignmentExpression	match_idx = 0xff		3498450	2		=			
ANR	3498458	Identifier	match_idx		3498450	0					
ANR	3498459	PrimaryExpression	0xff		3498450	1					
ANR	3498460	IdentifierDeclStatement	int i ;	34:1:727:732	3498450	1	True				
ANR	3498461	IdentifierDecl	i		3498450	0					
ANR	3498462	IdentifierDeclType	int		3498450	0					
ANR	3498463	Identifier	i		3498450	1					
ANR	3498464	ForStatement	for ( i = 0 ; i < RAsmLm32RegNumber ; i ++ )		3498450	2					
ANR	3498465	ForInit	i = 0 ;	35:6:740:745	3498450	0	True				
ANR	3498466	AssignmentExpression	i = 0		3498450	0		=			
ANR	3498467	Identifier	i		3498450	0					
ANR	3498468	PrimaryExpression	0		3498450	1					
ANR	3498469	Condition	i < RAsmLm32RegNumber	35:13:747:767	3498450	1	True				
ANR	3498470	RelationalExpression	i < RAsmLm32RegNumber		3498450	0		<			
ANR	3498471	Identifier	i		3498450	0					
ANR	3498472	Identifier	RAsmLm32RegNumber		3498450	1					
ANR	3498473	PostIncDecOperationExpression	i ++	35:36:770:772	3498450	2	True				
ANR	3498474	Identifier	i		3498450	0					
ANR	3498475	IncDec	++		3498450	1					
ANR	3498476	CompoundStatement		4:41:73:73	3498450	3					
ANR	3498477	IfStatement	"if ( ! strcmp ( RAsmLm32Regs [ i ] . name , str ) )"		3498450	0					
ANR	3498478	Condition	"! strcmp ( RAsmLm32Regs [ i ] . name , str )"	36:6:783:817	3498450	0	True				
ANR	3498479	UnaryOperationExpression	"! strcmp ( RAsmLm32Regs [ i ] . name , str )"		3498450	0					
ANR	3498480	UnaryOperator	!		3498450	0					
ANR	3498481	CallExpression	"strcmp ( RAsmLm32Regs [ i ] . name , str )"		3498450	1					
ANR	3498482	Callee	strcmp		3498450	0					
ANR	3498483	Identifier	strcmp		3498450	0					
ANR	3498484	ArgumentList	RAsmLm32Regs [ i ] . name		3498450	1					
ANR	3498485	Argument	RAsmLm32Regs [ i ] . name		3498450	0					
ANR	3498486	MemberAccess	RAsmLm32Regs [ i ] . name		3498450	0					
ANR	3498487	ArrayIndexing	RAsmLm32Regs [ i ]		3498450	0					
ANR	3498488	Identifier	RAsmLm32Regs		3498450	0					
ANR	3498489	Identifier	i		3498450	1					
ANR	3498490	Identifier	name		3498450	1					
ANR	3498491	Argument	str		3498450	1					
ANR	3498492	Identifier	str		3498450	0					
ANR	3498493	CompoundStatement		5:43:118:118	3498450	1					
ANR	3498494	ExpressionStatement	match_idx = i	37:3:825:838	3498450	0	True				
ANR	3498495	AssignmentExpression	match_idx = i		3498450	0		=			
ANR	3498496	Identifier	match_idx		3498450	0					
ANR	3498497	Identifier	i		3498450	1					
ANR	3498498	BreakStatement	break ;	38:3:843:848	3498450	1	True				
ANR	3498499	IfStatement	if ( match_idx == 0xff )		3498450	3					
ANR	3498500	Condition	match_idx == 0xff	42:5:905:921	3498450	0	True				
ANR	3498501	EqualityExpression	match_idx == 0xff		3498450	0		==			
ANR	3498502	Identifier	match_idx		3498450	0					
ANR	3498503	PrimaryExpression	0xff		3498450	1					
ANR	3498504	ReturnStatement	return - 1 ;	42:24:924:933	3498450	1	True				
ANR	3498505	UnaryOperationExpression	- 1		3498450	0					
ANR	3498506	UnaryOperator	-		3498450	0					
ANR	3498507	PrimaryExpression	1		3498450	1					
ANR	3498508	ExpressionStatement	* num = RAsmLm32Regs [ match_idx ] . number	43:1:936:973	3498450	4	True				
ANR	3498509	AssignmentExpression	* num = RAsmLm32Regs [ match_idx ] . number		3498450	0		=			
ANR	3498510	UnaryOperationExpression	* num		3498450	0					
ANR	3498511	UnaryOperator	*		3498450	0					
ANR	3498512	Identifier	num		3498450	1					
ANR	3498513	MemberAccess	RAsmLm32Regs [ match_idx ] . number		3498450	1					
ANR	3498514	ArrayIndexing	RAsmLm32Regs [ match_idx ]		3498450	0					
ANR	3498515	Identifier	RAsmLm32Regs		3498450	0					
ANR	3498516	Identifier	match_idx		3498450	1					
ANR	3498517	Identifier	number		3498450	1					
ANR	3498518	ReturnStatement	return 0 ;	44:1:976:984	3498450	5	True				
ANR	3498519	PrimaryExpression	0		3498450	0					
ANR	3498520	ReturnType	static int		3498450	1					
ANR	3498521	Identifier	string_to_reg_number		3498450	2					
ANR	3498522	ParameterList	"const char * str , ut8 * num"		3498450	3					
ANR	3498523	Parameter	const char * str	32:32:674:688	3498450	0	True				
ANR	3498524	ParameterType	const char *		3498450	0					
ANR	3498525	Identifier	str		3498450	1					
ANR	3498526	Parameter	ut8 * num	32:49:691:698	3498450	1	True				
ANR	3498527	ParameterType	ut8 *		3498450	0					
ANR	3498528	Identifier	num		3498450	1					
ANR	3498529	CFGEntryNode	ENTRY		3498450		True				
ANR	3498530	CFGExitNode	EXIT		3498450		True				
ANR	3498531	Symbol	RAsmLm32Regs		3498450						
ANR	3498532	Symbol	strcmp		3498450						
ANR	3498533	Symbol	num		3498450						
ANR	3498534	Symbol	i		3498450						
ANR	3498535	Symbol	str		3498450						
ANR	3498536	Symbol	RAsmLm32RegNumber		3498450						
ANR	3498537	Symbol	* num		3498450						
ANR	3498538	Symbol	RAsmLm32Regs [ match_idx ] . number		3498450						
ANR	3498539	Symbol	* RAsmLm32Regs		3498450						
ANR	3498540	Symbol	* i		3498450						
ANR	3498541	Symbol	* match_idx		3498450						
ANR	3498542	Symbol	match_idx		3498450						
ANR	3498543	Symbol	RAsmLm32Regs [ i ] . name		3498450						
ANR	3498544	Function	string_to_csr_number	47:0:989:1328							
ANR	3498545	FunctionDef	"string_to_csr_number (const char * str , ut8 * num)"		3498544	0					
ANR	3498546	CompoundStatement		47:59:1048:1328	3498544	0					
ANR	3498547	IdentifierDeclStatement	ut8 match_idx = 0xff ;	48:1:1051:1071	3498544	0	True				
ANR	3498548	IdentifierDecl	match_idx = 0xff		3498544	0					
ANR	3498549	IdentifierDeclType	ut8		3498544	0					
ANR	3498550	Identifier	match_idx		3498544	1					
ANR	3498551	AssignmentExpression	match_idx = 0xff		3498544	2		=			
ANR	3498552	Identifier	match_idx		3498544	0					
ANR	3498553	PrimaryExpression	0xff		3498544	1					
ANR	3498554	IdentifierDeclStatement	int i ;	49:1:1074:1079	3498544	1	True				
ANR	3498555	IdentifierDecl	i		3498544	0					
ANR	3498556	IdentifierDeclType	int		3498544	0					
ANR	3498557	Identifier	i		3498544	1					
ANR	3498558	ForStatement	for ( i = 0 ; i < RAsmLm32CsrNumber ; i ++ )		3498544	2					
ANR	3498559	ForInit	i = 0 ;	50:6:1087:1092	3498544	0	True				
ANR	3498560	AssignmentExpression	i = 0		3498544	0		=			
ANR	3498561	Identifier	i		3498544	0					
ANR	3498562	PrimaryExpression	0		3498544	1					
ANR	3498563	Condition	i < RAsmLm32CsrNumber	50:13:1094:1114	3498544	1	True				
ANR	3498564	RelationalExpression	i < RAsmLm32CsrNumber		3498544	0		<			
ANR	3498565	Identifier	i		3498544	0					
ANR	3498566	Identifier	RAsmLm32CsrNumber		3498544	1					
ANR	3498567	PostIncDecOperationExpression	i ++	50:36:1117:1119	3498544	2	True				
ANR	3498568	Identifier	i		3498544	0					
ANR	3498569	IncDec	++		3498544	1					
ANR	3498570	CompoundStatement		4:41:73:73	3498544	3					
ANR	3498571	IfStatement	"if ( ! strcmp ( RAsmLm32Csrs [ i ] . name , str ) )"		3498544	0					
ANR	3498572	Condition	"! strcmp ( RAsmLm32Csrs [ i ] . name , str )"	51:6:1130:1164	3498544	0	True				
ANR	3498573	UnaryOperationExpression	"! strcmp ( RAsmLm32Csrs [ i ] . name , str )"		3498544	0					
ANR	3498574	UnaryOperator	!		3498544	0					
ANR	3498575	CallExpression	"strcmp ( RAsmLm32Csrs [ i ] . name , str )"		3498544	1					
ANR	3498576	Callee	strcmp		3498544	0					
ANR	3498577	Identifier	strcmp		3498544	0					
ANR	3498578	ArgumentList	RAsmLm32Csrs [ i ] . name		3498544	1					
ANR	3498579	Argument	RAsmLm32Csrs [ i ] . name		3498544	0					
ANR	3498580	MemberAccess	RAsmLm32Csrs [ i ] . name		3498544	0					
ANR	3498581	ArrayIndexing	RAsmLm32Csrs [ i ]		3498544	0					
ANR	3498582	Identifier	RAsmLm32Csrs		3498544	0					
ANR	3498583	Identifier	i		3498544	1					
ANR	3498584	Identifier	name		3498544	1					
ANR	3498585	Argument	str		3498544	1					
ANR	3498586	Identifier	str		3498544	0					
ANR	3498587	CompoundStatement		5:43:118:118	3498544	1					
ANR	3498588	ExpressionStatement	match_idx = i	52:3:1172:1185	3498544	0	True				
ANR	3498589	AssignmentExpression	match_idx = i		3498544	0		=			
ANR	3498590	Identifier	match_idx		3498544	0					
ANR	3498591	Identifier	i		3498544	1					
ANR	3498592	BreakStatement	break ;	53:3:1190:1195	3498544	1	True				
ANR	3498593	IfStatement	if ( match_idx == 0xff )		3498544	3					
ANR	3498594	Condition	match_idx == 0xff	57:5:1247:1263	3498544	0	True				
ANR	3498595	EqualityExpression	match_idx == 0xff		3498544	0		==			
ANR	3498596	Identifier	match_idx		3498544	0					
ANR	3498597	PrimaryExpression	0xff		3498544	1					
ANR	3498598	ReturnStatement	return - 1 ;	57:24:1266:1275	3498544	1	True				
ANR	3498599	UnaryOperationExpression	- 1		3498544	0					
ANR	3498600	UnaryOperator	-		3498544	0					
ANR	3498601	PrimaryExpression	1		3498544	1					
ANR	3498602	ExpressionStatement	* num = RAsmLm32Csrs [ match_idx ] . number	58:1:1278:1315	3498544	4	True				
ANR	3498603	AssignmentExpression	* num = RAsmLm32Csrs [ match_idx ] . number		3498544	0		=			
ANR	3498604	UnaryOperationExpression	* num		3498544	0					
ANR	3498605	UnaryOperator	*		3498544	0					
ANR	3498606	Identifier	num		3498544	1					
ANR	3498607	MemberAccess	RAsmLm32Csrs [ match_idx ] . number		3498544	1					
ANR	3498608	ArrayIndexing	RAsmLm32Csrs [ match_idx ]		3498544	0					
ANR	3498609	Identifier	RAsmLm32Csrs		3498544	0					
ANR	3498610	Identifier	match_idx		3498544	1					
ANR	3498611	Identifier	number		3498544	1					
ANR	3498612	ReturnStatement	return 0 ;	59:1:1318:1326	3498544	5	True				
ANR	3498613	PrimaryExpression	0		3498544	0					
ANR	3498614	ReturnType	static int		3498544	1					
ANR	3498615	Identifier	string_to_csr_number		3498544	2					
ANR	3498616	ParameterList	"const char * str , ut8 * num"		3498544	3					
ANR	3498617	Parameter	const char * str	47:32:1021:1035	3498544	0	True				
ANR	3498618	ParameterType	const char *		3498544	0					
ANR	3498619	Identifier	str		3498544	1					
ANR	3498620	Parameter	ut8 * num	47:49:1038:1045	3498544	1	True				
ANR	3498621	ParameterType	ut8 *		3498544	0					
ANR	3498622	Identifier	num		3498544	1					
ANR	3498623	CFGEntryNode	ENTRY		3498544		True				
ANR	3498624	CFGExitNode	EXIT		3498544		True				
ANR	3498625	Symbol	strcmp		3498544						
ANR	3498626	Symbol	num		3498544						
ANR	3498627	Symbol	i		3498544						
ANR	3498628	Symbol	str		3498544						
ANR	3498629	Symbol	* num		3498544						
ANR	3498630	Symbol	* i		3498544						
ANR	3498631	Symbol	RAsmLm32CsrNumber		3498544						
ANR	3498632	Symbol	* RAsmLm32Csrs		3498544						
ANR	3498633	Symbol	RAsmLm32Csrs [ match_idx ] . number		3498544						
ANR	3498634	Symbol	RAsmLm32Csrs		3498544						
ANR	3498635	Symbol	* match_idx		3498544						
ANR	3498636	Symbol	match_idx		3498544						
ANR	3498637	Symbol	RAsmLm32Csrs [ i ] . name		3498544						
ANR	3498638	Function	string_to_opcode	62:0:1331:1627							
ANR	3498639	FunctionDef	"string_to_opcode (const char * str , ut8 * num)"		3498638	0					
ANR	3498640	CompoundStatement		62:55:1386:1627	3498638	0					
ANR	3498641	IdentifierDeclStatement	ut8 tmp_num = 0xff ;	63:1:1389:1407	3498638	0	True				
ANR	3498642	IdentifierDecl	tmp_num = 0xff		3498638	0					
ANR	3498643	IdentifierDeclType	ut8		3498638	0					
ANR	3498644	Identifier	tmp_num		3498638	1					
ANR	3498645	AssignmentExpression	tmp_num = 0xff		3498638	2		=			
ANR	3498646	Identifier	tmp_num		3498638	0					
ANR	3498647	PrimaryExpression	0xff		3498638	1					
ANR	3498648	IdentifierDeclStatement	int i ;	64:1:1410:1415	3498638	1	True				
ANR	3498649	IdentifierDecl	i		3498638	0					
ANR	3498650	IdentifierDeclType	int		3498638	0					
ANR	3498651	Identifier	i		3498638	1					
ANR	3498652	ForStatement	for ( i = 0 ; i < RAsmLm32OpcodeNumber ; i ++ )		3498638	2					
ANR	3498653	ForInit	i = 0 ;	65:6:1423:1428	3498638	0	True				
ANR	3498654	AssignmentExpression	i = 0		3498638	0		=			
ANR	3498655	Identifier	i		3498638	0					
ANR	3498656	PrimaryExpression	0		3498638	1					
ANR	3498657	Condition	i < RAsmLm32OpcodeNumber	65:13:1430:1453	3498638	1	True				
ANR	3498658	RelationalExpression	i < RAsmLm32OpcodeNumber		3498638	0		<			
ANR	3498659	Identifier	i		3498638	0					
ANR	3498660	Identifier	RAsmLm32OpcodeNumber		3498638	1					
ANR	3498661	PostIncDecOperationExpression	i ++	65:39:1456:1458	3498638	2	True				
ANR	3498662	Identifier	i		3498638	0					
ANR	3498663	IncDec	++		3498638	1					
ANR	3498664	CompoundStatement		4:44:74:74	3498638	3					
ANR	3498665	IfStatement	"if ( ! strcmp ( RAsmLm32OpcodeList [ i ] . name , str ) )"		3498638	0					
ANR	3498666	Condition	"! strcmp ( RAsmLm32OpcodeList [ i ] . name , str )"	66:6:1469:1509	3498638	0	True				
ANR	3498667	UnaryOperationExpression	"! strcmp ( RAsmLm32OpcodeList [ i ] . name , str )"		3498638	0					
ANR	3498668	UnaryOperator	!		3498638	0					
ANR	3498669	CallExpression	"strcmp ( RAsmLm32OpcodeList [ i ] . name , str )"		3498638	1					
ANR	3498670	Callee	strcmp		3498638	0					
ANR	3498671	Identifier	strcmp		3498638	0					
ANR	3498672	ArgumentList	RAsmLm32OpcodeList [ i ] . name		3498638	1					
ANR	3498673	Argument	RAsmLm32OpcodeList [ i ] . name		3498638	0					
ANR	3498674	MemberAccess	RAsmLm32OpcodeList [ i ] . name		3498638	0					
ANR	3498675	ArrayIndexing	RAsmLm32OpcodeList [ i ]		3498638	0					
ANR	3498676	Identifier	RAsmLm32OpcodeList		3498638	0					
ANR	3498677	Identifier	i		3498638	1					
ANR	3498678	Identifier	name		3498638	1					
ANR	3498679	Argument	str		3498638	1					
ANR	3498680	Identifier	str		3498638	0					
ANR	3498681	CompoundStatement		5:49:125:125	3498638	1					
ANR	3498682	ExpressionStatement	tmp_num = i	67:3:1517:1528	3498638	0	True				
ANR	3498683	AssignmentExpression	tmp_num = i		3498638	0		=			
ANR	3498684	Identifier	tmp_num		3498638	0					
ANR	3498685	Identifier	i		3498638	1					
ANR	3498686	IfStatement	if ( tmp_num == 0xff )		3498638	3					
ANR	3498687	Condition	tmp_num == 0xff	71:5:1571:1585	3498638	0	True				
ANR	3498688	EqualityExpression	tmp_num == 0xff		3498638	0		==			
ANR	3498689	Identifier	tmp_num		3498638	0					
ANR	3498690	PrimaryExpression	0xff		3498638	1					
ANR	3498691	ReturnStatement	return - 1 ;	71:22:1588:1597	3498638	1	True				
ANR	3498692	UnaryOperationExpression	- 1		3498638	0					
ANR	3498693	UnaryOperator	-		3498638	0					
ANR	3498694	PrimaryExpression	1		3498638	1					
ANR	3498695	ExpressionStatement	* num = tmp_num	72:1:1600:1614	3498638	4	True				
ANR	3498696	AssignmentExpression	* num = tmp_num		3498638	0		=			
ANR	3498697	UnaryOperationExpression	* num		3498638	0					
ANR	3498698	UnaryOperator	*		3498638	0					
ANR	3498699	Identifier	num		3498638	1					
ANR	3498700	Identifier	tmp_num		3498638	1					
ANR	3498701	ReturnStatement	return 0 ;	73:1:1617:1625	3498638	5	True				
ANR	3498702	PrimaryExpression	0		3498638	0					
ANR	3498703	ReturnType	static int		3498638	1					
ANR	3498704	Identifier	string_to_opcode		3498638	2					
ANR	3498705	ParameterList	"const char * str , ut8 * num"		3498638	3					
ANR	3498706	Parameter	const char * str	62:28:1359:1373	3498638	0	True				
ANR	3498707	ParameterType	const char *		3498638	0					
ANR	3498708	Identifier	str		3498638	1					
ANR	3498709	Parameter	ut8 * num	62:45:1376:1383	3498638	1	True				
ANR	3498710	ParameterType	ut8 *		3498638	0					
ANR	3498711	Identifier	num		3498638	1					
ANR	3498712	CFGEntryNode	ENTRY		3498638		True				
ANR	3498713	CFGExitNode	EXIT		3498638		True				
ANR	3498714	Symbol	str		3498638						
ANR	3498715	Symbol	RAsmLm32OpcodeList [ i ] . name		3498638						
ANR	3498716	Symbol	strcmp		3498638						
ANR	3498717	Symbol	* num		3498638						
ANR	3498718	Symbol	RAsmLm32OpcodeNumber		3498638						
ANR	3498719	Symbol	* i		3498638						
ANR	3498720	Symbol	tmp_num		3498638						
ANR	3498721	Symbol	num		3498638						
ANR	3498722	Symbol	* RAsmLm32OpcodeList		3498638						
ANR	3498723	Symbol	i		3498638						
ANR	3498724	Symbol	RAsmLm32OpcodeList		3498638						
ANR	3498725	Function	csr_number_to_string	78:0:1684:2017							
ANR	3498726	FunctionDef	"csr_number_to_string (ut8 csr , char * str)"		3498725	0					
ANR	3498727	CompoundStatement		78:52:1736:2017	3498725	0					
ANR	3498728	IdentifierDeclStatement	ut8 match_idx = 0xff ;	79:1:1739:1759	3498725	0	True				
ANR	3498729	IdentifierDecl	match_idx = 0xff		3498725	0					
ANR	3498730	IdentifierDeclType	ut8		3498725	0					
ANR	3498731	Identifier	match_idx		3498725	1					
ANR	3498732	AssignmentExpression	match_idx = 0xff		3498725	2		=			
ANR	3498733	Identifier	match_idx		3498725	0					
ANR	3498734	PrimaryExpression	0xff		3498725	1					
ANR	3498735	IdentifierDeclStatement	int i ;	80:1:1762:1767	3498725	1	True				
ANR	3498736	IdentifierDecl	i		3498725	0					
ANR	3498737	IdentifierDeclType	int		3498725	0					
ANR	3498738	Identifier	i		3498725	1					
ANR	3498739	ForStatement	for ( i = 0 ; i < RAsmLm32CsrNumber ; i ++ )		3498725	2					
ANR	3498740	ForInit	i = 0 ;	81:6:1775:1780	3498725	0	True				
ANR	3498741	AssignmentExpression	i = 0		3498725	0		=			
ANR	3498742	Identifier	i		3498725	0					
ANR	3498743	PrimaryExpression	0		3498725	1					
ANR	3498744	Condition	i < RAsmLm32CsrNumber	81:13:1782:1802	3498725	1	True				
ANR	3498745	RelationalExpression	i < RAsmLm32CsrNumber		3498725	0		<			
ANR	3498746	Identifier	i		3498725	0					
ANR	3498747	Identifier	RAsmLm32CsrNumber		3498725	1					
ANR	3498748	PostIncDecOperationExpression	i ++	81:36:1805:1807	3498725	2	True				
ANR	3498749	Identifier	i		3498725	0					
ANR	3498750	IncDec	++		3498725	1					
ANR	3498751	CompoundStatement		4:41:73:73	3498725	3					
ANR	3498752	IfStatement	if ( RAsmLm32Csrs [ i ] . number == csr )		3498725	0					
ANR	3498753	Condition	RAsmLm32Csrs [ i ] . number == csr	82:6:1818:1846	3498725	0	True				
ANR	3498754	EqualityExpression	RAsmLm32Csrs [ i ] . number == csr		3498725	0		==			
ANR	3498755	MemberAccess	RAsmLm32Csrs [ i ] . number		3498725	0					
ANR	3498756	ArrayIndexing	RAsmLm32Csrs [ i ]		3498725	0					
ANR	3498757	Identifier	RAsmLm32Csrs		3498725	0					
ANR	3498758	Identifier	i		3498725	1					
ANR	3498759	Identifier	number		3498725	1					
ANR	3498760	Identifier	csr		3498725	1					
ANR	3498761	CompoundStatement		5:37:112:112	3498725	1					
ANR	3498762	ExpressionStatement	match_idx = i	83:3:1854:1867	3498725	0	True				
ANR	3498763	AssignmentExpression	match_idx = i		3498725	0		=			
ANR	3498764	Identifier	match_idx		3498725	0					
ANR	3498765	Identifier	i		3498725	1					
ANR	3498766	BreakStatement	break ;	84:3:1872:1877	3498725	1	True				
ANR	3498767	IfStatement	if ( match_idx == 0xff )		3498725	3					
ANR	3498768	Condition	match_idx == 0xff	88:5:1924:1940	3498725	0	True				
ANR	3498769	EqualityExpression	match_idx == 0xff		3498725	0		==			
ANR	3498770	Identifier	match_idx		3498725	0					
ANR	3498771	PrimaryExpression	0xff		3498725	1					
ANR	3498772	CompoundStatement		11:24:206:206	3498725	1					
ANR	3498773	ReturnStatement	return - 1 ;	89:2:1947:1956	3498725	0	True				
ANR	3498774	UnaryOperationExpression	- 1		3498725	0					
ANR	3498775	UnaryOperator	-		3498725	0					
ANR	3498776	PrimaryExpression	1		3498725	1					
ANR	3498777	ExpressionStatement	"strcpy ( str , RAsmLm32Csrs [ match_idx ] . name )"	91:1:1962:2004	3498725	4	True				
ANR	3498778	CallExpression	"strcpy ( str , RAsmLm32Csrs [ match_idx ] . name )"		3498725	0					
ANR	3498779	Callee	strcpy		3498725	0					
ANR	3498780	Identifier	strcpy		3498725	0					
ANR	3498781	ArgumentList	str		3498725	1					
ANR	3498782	Argument	str		3498725	0					
ANR	3498783	Identifier	str		3498725	0					
ANR	3498784	Argument	RAsmLm32Csrs [ match_idx ] . name		3498725	1					
ANR	3498785	MemberAccess	RAsmLm32Csrs [ match_idx ] . name		3498725	0					
ANR	3498786	ArrayIndexing	RAsmLm32Csrs [ match_idx ]		3498725	0					
ANR	3498787	Identifier	RAsmLm32Csrs		3498725	0					
ANR	3498788	Identifier	match_idx		3498725	1					
ANR	3498789	Identifier	name		3498725	1					
ANR	3498790	ReturnStatement	return 0 ;	92:1:2007:2015	3498725	5	True				
ANR	3498791	PrimaryExpression	0		3498725	0					
ANR	3498792	ReturnType	static int		3498725	1					
ANR	3498793	Identifier	csr_number_to_string		3498725	2					
ANR	3498794	ParameterList	"ut8 csr , char * str"		3498725	3					
ANR	3498795	Parameter	ut8 csr	78:32:1716:1722	3498725	0	True				
ANR	3498796	ParameterType	ut8		3498725	0					
ANR	3498797	Identifier	csr		3498725	1					
ANR	3498798	Parameter	char * str	78:41:1725:1733	3498725	1	True				
ANR	3498799	ParameterType	char *		3498725	0					
ANR	3498800	Identifier	str		3498725	1					
ANR	3498801	CFGEntryNode	ENTRY		3498725		True				
ANR	3498802	CFGExitNode	EXIT		3498725		True				
ANR	3498803	Symbol	str		3498725						
ANR	3498804	Symbol	csr		3498725						
ANR	3498805	Symbol	* i		3498725						
ANR	3498806	Symbol	RAsmLm32CsrNumber		3498725						
ANR	3498807	Symbol	* RAsmLm32Csrs		3498725						
ANR	3498808	Symbol	RAsmLm32Csrs [ i ] . number		3498725						
ANR	3498809	Symbol	i		3498725						
ANR	3498810	Symbol	RAsmLm32Csrs [ match_idx ] . name		3498725						
ANR	3498811	Symbol	RAsmLm32Csrs		3498725						
ANR	3498812	Symbol	* match_idx		3498725						
ANR	3498813	Symbol	match_idx		3498725						
ANR	3498814	Function	shift_and_signextend	96:0:2080:2279							
ANR	3498815	FunctionDef	"shift_and_signextend (ut8 shift , ut8 sign_loc , ut32 val)"		3498814	0					
ANR	3498816	CompoundStatement		96:68:2148:2279	3498814	0					
ANR	3498817	IdentifierDeclStatement	ut32 tmp = val << shift ;	97:1:2151:2174	3498814	0	True				
ANR	3498818	IdentifierDecl	tmp = val << shift		3498814	0					
ANR	3498819	IdentifierDeclType	ut32		3498814	0					
ANR	3498820	Identifier	tmp		3498814	1					
ANR	3498821	AssignmentExpression	tmp = val << shift		3498814	2		=			
ANR	3498822	Identifier	tmp		3498814	0					
ANR	3498823	ShiftExpression	val << shift		3498814	1		<<			
ANR	3498824	Identifier	val		3498814	0					
ANR	3498825	Identifier	shift		3498814	1					
ANR	3498826	IfStatement	if ( tmp & ( 1 << ( shift + sign_loc ) ) )		3498814	1					
ANR	3498827	Condition	tmp & ( 1 << ( shift + sign_loc ) )	98:5:2181:2211	3498814	0	True				
ANR	3498828	BitAndExpression	tmp & ( 1 << ( shift + sign_loc ) )		3498814	0		&			
ANR	3498829	Identifier	tmp		3498814	0					
ANR	3498830	ShiftExpression	1 << ( shift + sign_loc )		3498814	1		<<			
ANR	3498831	PrimaryExpression	1		3498814	0					
ANR	3498832	AdditiveExpression	shift + sign_loc		3498814	1		+			
ANR	3498833	Identifier	shift		3498814	0					
ANR	3498834	Identifier	sign_loc		3498814	1					
ANR	3498835	CompoundStatement		3:38:65:65	3498814	1					
ANR	3498836	ExpressionStatement	tmp |= ~ ( ( 1 << ( shift + sign_loc + 1 ) ) - 1 )	99:2:2218:2261	3498814	0	True				
ANR	3498837	AssignmentExpression	tmp |= ~ ( ( 1 << ( shift + sign_loc + 1 ) ) - 1 )		3498814	0		|=			
ANR	3498838	Identifier	tmp		3498814	0					
ANR	3498839	UnaryOperationExpression	~ ( ( 1 << ( shift + sign_loc + 1 ) ) - 1 )		3498814	1					
ANR	3498840	UnaryOperator	~		3498814	0					
ANR	3498841	AdditiveExpression	( 1 << ( shift + sign_loc + 1 ) ) - 1		3498814	1		-			
ANR	3498842	ShiftExpression	1 << ( shift + sign_loc + 1 )		3498814	0		<<			
ANR	3498843	PrimaryExpression	1		3498814	0					
ANR	3498844	AdditiveExpression	shift + sign_loc + 1		3498814	1		+			
ANR	3498845	Identifier	shift		3498814	0					
ANR	3498846	AdditiveExpression	sign_loc + 1		3498814	1		+			
ANR	3498847	Identifier	sign_loc		3498814	0					
ANR	3498848	PrimaryExpression	1		3498814	1					
ANR	3498849	PrimaryExpression	1		3498814	1					
ANR	3498850	ReturnStatement	return tmp ;	101:1:2267:2277	3498814	2	True				
ANR	3498851	Identifier	tmp		3498814	0					
ANR	3498852	ReturnType	static st32		3498814	1					
ANR	3498853	Identifier	shift_and_signextend		3498814	2					
ANR	3498854	ParameterList	"ut8 shift , ut8 sign_loc , ut32 val"		3498814	3					
ANR	3498855	Parameter	ut8 shift	96:33:2113:2121	3498814	0	True				
ANR	3498856	ParameterType	ut8		3498814	0					
ANR	3498857	Identifier	shift		3498814	1					
ANR	3498858	Parameter	ut8 sign_loc	96:44:2124:2135	3498814	1	True				
ANR	3498859	ParameterType	ut8		3498814	0					
ANR	3498860	Identifier	sign_loc		3498814	1					
ANR	3498861	Parameter	ut32 val	96:58:2138:2145	3498814	2	True				
ANR	3498862	ParameterType	ut32		3498814	0					
ANR	3498863	Identifier	val		3498814	1					
ANR	3498864	CFGEntryNode	ENTRY		3498814		True				
ANR	3498865	CFGExitNode	EXIT		3498814		True				
ANR	3498866	Symbol	val		3498814						
ANR	3498867	Symbol	tmp		3498814						
ANR	3498868	Symbol	shift		3498814						
ANR	3498869	Symbol	sign_loc		3498814						
ANR	3498870	Function	is_invalid_imm5_instr	105:0:2283:2404							
ANR	3498871	FunctionDef	is_invalid_imm5_instr (RAsmLm32Instruction * instr)		3498870	0					
ANR	3498872	CompoundStatement		105:62:2345:2404	3498870	0					
ANR	3498873	ReturnStatement	return instr -> value & RAsmLm32InstrImm5InvalidBitsMask ;	106:1:2348:2402	3498870	0	True				
ANR	3498874	BitAndExpression	instr -> value & RAsmLm32InstrImm5InvalidBitsMask		3498870	0		&			
ANR	3498875	PtrMemberAccess	instr -> value		3498870	0					
ANR	3498876	Identifier	instr		3498870	0					
ANR	3498877	Identifier	value		3498870	1					
ANR	3498878	Identifier	RAsmLm32InstrImm5InvalidBitsMask		3498870	1					
ANR	3498879	ReturnType	static bool		3498870	1					
ANR	3498880	Identifier	is_invalid_imm5_instr		3498870	2					
ANR	3498881	ParameterList	RAsmLm32Instruction * instr		3498870	3					
ANR	3498882	Parameter	RAsmLm32Instruction * instr	105:34:2317:2342	3498870	0	True				
ANR	3498883	ParameterType	RAsmLm32Instruction *		3498870	0					
ANR	3498884	Identifier	instr		3498870	1					
ANR	3498885	CFGEntryNode	ENTRY		3498870		True				
ANR	3498886	CFGExitNode	EXIT		3498870		True				
ANR	3498887	Symbol	instr -> value		3498870						
ANR	3498888	Symbol	instr		3498870						
ANR	3498889	Symbol	* instr		3498870						
ANR	3498890	Symbol	RAsmLm32InstrImm5InvalidBitsMask		3498870						
ANR	3498891	Function	is_invalid_one_reg_instr	109:0:2407:2533							
ANR	3498892	FunctionDef	is_invalid_one_reg_instr (RAsmLm32Instruction * instr)		3498891	0					
ANR	3498893	CompoundStatement		109:65:2472:2533	3498891	0					
ANR	3498894	ReturnStatement	return instr -> value & RAsmLm32InstrOneRegInvalidBitsMask ;	110:1:2475:2531	3498891	0	True				
ANR	3498895	BitAndExpression	instr -> value & RAsmLm32InstrOneRegInvalidBitsMask		3498891	0		&			
ANR	3498896	PtrMemberAccess	instr -> value		3498891	0					
ANR	3498897	Identifier	instr		3498891	0					
ANR	3498898	Identifier	value		3498891	1					
ANR	3498899	Identifier	RAsmLm32InstrOneRegInvalidBitsMask		3498891	1					
ANR	3498900	ReturnType	static bool		3498891	1					
ANR	3498901	Identifier	is_invalid_one_reg_instr		3498891	2					
ANR	3498902	ParameterList	RAsmLm32Instruction * instr		3498891	3					
ANR	3498903	Parameter	RAsmLm32Instruction * instr	109:37:2444:2469	3498891	0	True				
ANR	3498904	ParameterType	RAsmLm32Instruction *		3498891	0					
ANR	3498905	Identifier	instr		3498891	1					
ANR	3498906	CFGEntryNode	ENTRY		3498891		True				
ANR	3498907	CFGExitNode	EXIT		3498891		True				
ANR	3498908	Symbol	instr -> value		3498891						
ANR	3498909	Symbol	instr		3498891						
ANR	3498910	Symbol	* instr		3498891						
ANR	3498911	Symbol	RAsmLm32InstrOneRegInvalidBitsMask		3498891						
ANR	3498912	Function	is_invalid_two_reg_instr	113:0:2536:2663							
ANR	3498913	FunctionDef	is_invalid_two_reg_instr (RAsmLm32Instruction * instr)		3498912	0					
ANR	3498914	CompoundStatement		113:65:2601:2663	3498912	0					
ANR	3498915	ReturnStatement	return instr -> value & RAsmLm32InstrTwoRegsInvalidBitsMask ;	114:1:2604:2661	3498912	0	True				
ANR	3498916	BitAndExpression	instr -> value & RAsmLm32InstrTwoRegsInvalidBitsMask		3498912	0		&			
ANR	3498917	PtrMemberAccess	instr -> value		3498912	0					
ANR	3498918	Identifier	instr		3498912	0					
ANR	3498919	Identifier	value		3498912	1					
ANR	3498920	Identifier	RAsmLm32InstrTwoRegsInvalidBitsMask		3498912	1					
ANR	3498921	ReturnType	static bool		3498912	1					
ANR	3498922	Identifier	is_invalid_two_reg_instr		3498912	2					
ANR	3498923	ParameterList	RAsmLm32Instruction * instr		3498912	3					
ANR	3498924	Parameter	RAsmLm32Instruction * instr	113:37:2573:2598	3498912	0	True				
ANR	3498925	ParameterType	RAsmLm32Instruction *		3498912	0					
ANR	3498926	Identifier	instr		3498912	1					
ANR	3498927	CFGEntryNode	ENTRY		3498912		True				
ANR	3498928	CFGExitNode	EXIT		3498912		True				
ANR	3498929	Symbol	instr -> value		3498912						
ANR	3498930	Symbol	instr		3498912						
ANR	3498931	Symbol	RAsmLm32InstrTwoRegsInvalidBitsMask		3498912						
ANR	3498932	Symbol	* instr		3498912						
ANR	3498933	Function	is_invalid_wcsr_instr	117:0:2666:2787							
ANR	3498934	FunctionDef	is_invalid_wcsr_instr (RAsmLm32Instruction * instr)		3498933	0					
ANR	3498935	CompoundStatement		117:62:2728:2787	3498933	0					
ANR	3498936	ReturnStatement	return instr -> value & RAsmLm32InstrWcsrInvalidBitsMask ;	118:1:2731:2785	3498933	0	True				
ANR	3498937	BitAndExpression	instr -> value & RAsmLm32InstrWcsrInvalidBitsMask		3498933	0		&			
ANR	3498938	PtrMemberAccess	instr -> value		3498933	0					
ANR	3498939	Identifier	instr		3498933	0					
ANR	3498940	Identifier	value		3498933	1					
ANR	3498941	Identifier	RAsmLm32InstrWcsrInvalidBitsMask		3498933	1					
ANR	3498942	ReturnType	static bool		3498933	1					
ANR	3498943	Identifier	is_invalid_wcsr_instr		3498933	2					
ANR	3498944	ParameterList	RAsmLm32Instruction * instr		3498933	3					
ANR	3498945	Parameter	RAsmLm32Instruction * instr	117:34:2700:2725	3498933	0	True				
ANR	3498946	ParameterType	RAsmLm32Instruction *		3498933	0					
ANR	3498947	Identifier	instr		3498933	1					
ANR	3498948	CFGEntryNode	ENTRY		3498933		True				
ANR	3498949	CFGExitNode	EXIT		3498933		True				
ANR	3498950	Symbol	RAsmLm32InstrWcsrInvalidBitsMask		3498933						
ANR	3498951	Symbol	instr -> value		3498933						
ANR	3498952	Symbol	instr		3498933						
ANR	3498953	Symbol	* instr		3498933						
ANR	3498954	Function	is_pseudo_instr_ret	122:0:2804:2945							
ANR	3498955	FunctionDef	is_pseudo_instr_ret (RAsmLm32Instruction * instr)		3498954	0					
ANR	3498956	CompoundStatement		122:60:2864:2945	3498954	0					
ANR	3498957	ReturnStatement	return ( instr -> op == lm32_op_b ) && ( instr -> src0_reg == 0x1d ) ;	124:1:2883:2943	3498954	0	True				
ANR	3498958	AndExpression	( instr -> op == lm32_op_b ) && ( instr -> src0_reg == 0x1d )		3498954	0		&&			
ANR	3498959	EqualityExpression	instr -> op == lm32_op_b		3498954	0		==			
ANR	3498960	PtrMemberAccess	instr -> op		3498954	0					
ANR	3498961	Identifier	instr		3498954	0					
ANR	3498962	Identifier	op		3498954	1					
ANR	3498963	Identifier	lm32_op_b		3498954	1					
ANR	3498964	EqualityExpression	instr -> src0_reg == 0x1d		3498954	1		==			
ANR	3498965	PtrMemberAccess	instr -> src0_reg		3498954	0					
ANR	3498966	Identifier	instr		3498954	0					
ANR	3498967	Identifier	src0_reg		3498954	1					
ANR	3498968	PrimaryExpression	0x1d		3498954	1					
ANR	3498969	ReturnType	static bool		3498954	1					
ANR	3498970	Identifier	is_pseudo_instr_ret		3498954	2					
ANR	3498971	ParameterList	RAsmLm32Instruction * instr		3498954	3					
ANR	3498972	Parameter	RAsmLm32Instruction * instr	122:32:2836:2861	3498954	0	True				
ANR	3498973	ParameterType	RAsmLm32Instruction *		3498954	0					
ANR	3498974	Identifier	instr		3498954	1					
ANR	3498975	CFGEntryNode	ENTRY		3498954		True				
ANR	3498976	CFGExitNode	EXIT		3498954		True				
ANR	3498977	Symbol	instr -> op		3498954						
ANR	3498978	Symbol	instr		3498954						
ANR	3498979	Symbol	* instr		3498954						
ANR	3498980	Symbol	instr -> src0_reg		3498954						
ANR	3498981	Symbol	lm32_op_b		3498954						
ANR	3498982	Function	is_pseudo_instr_mv	128:0:2977:3093							
ANR	3498983	FunctionDef	is_pseudo_instr_mv (RAsmLm32Instruction * instr)		3498982	0					
ANR	3498984	CompoundStatement		128:59:3036:3093	3498982	0					
ANR	3498985	ReturnStatement	return ( instr -> op == lm32_op_or ) && ! instr -> src1_reg ;	129:1:3039:3091	3498982	0	True				
ANR	3498986	AndExpression	( instr -> op == lm32_op_or ) && ! instr -> src1_reg		3498982	0		&&			
ANR	3498987	EqualityExpression	instr -> op == lm32_op_or		3498982	0		==			
ANR	3498988	PtrMemberAccess	instr -> op		3498982	0					
ANR	3498989	Identifier	instr		3498982	0					
ANR	3498990	Identifier	op		3498982	1					
ANR	3498991	Identifier	lm32_op_or		3498982	1					
ANR	3498992	UnaryOperationExpression	! instr -> src1_reg		3498982	1					
ANR	3498993	UnaryOperator	!		3498982	0					
ANR	3498994	PtrMemberAccess	instr -> src1_reg		3498982	1					
ANR	3498995	Identifier	instr		3498982	0					
ANR	3498996	Identifier	src1_reg		3498982	1					
ANR	3498997	ReturnType	static bool		3498982	1					
ANR	3498998	Identifier	is_pseudo_instr_mv		3498982	2					
ANR	3498999	ParameterList	RAsmLm32Instruction * instr		3498982	3					
ANR	3499000	Parameter	RAsmLm32Instruction * instr	128:31:3008:3033	3498982	0	True				
ANR	3499001	ParameterType	RAsmLm32Instruction *		3498982	0					
ANR	3499002	Identifier	instr		3498982	1					
ANR	3499003	CFGEntryNode	ENTRY		3498982		True				
ANR	3499004	CFGExitNode	EXIT		3498982		True				
ANR	3499005	Symbol	instr -> src1_reg		3498982						
ANR	3499006	Symbol	instr -> op		3498982						
ANR	3499007	Symbol	instr		3498982						
ANR	3499008	Symbol	* instr		3498982						
ANR	3499009	Symbol	lm32_op_or		3498982						
ANR	3499010	Function	is_pseudo_instr_mvhi	133:0:3135:3255							
ANR	3499011	FunctionDef	is_pseudo_instr_mvhi (RAsmLm32Instruction * instr)		3499010	0					
ANR	3499012	CompoundStatement		133:61:3196:3255	3499010	0					
ANR	3499013	ReturnStatement	return ( instr -> op == lm32_op_orhi ) && ! instr -> src0_reg ;	134:1:3199:3253	3499010	0	True				
ANR	3499014	AndExpression	( instr -> op == lm32_op_orhi ) && ! instr -> src0_reg		3499010	0		&&			
ANR	3499015	EqualityExpression	instr -> op == lm32_op_orhi		3499010	0		==			
ANR	3499016	PtrMemberAccess	instr -> op		3499010	0					
ANR	3499017	Identifier	instr		3499010	0					
ANR	3499018	Identifier	op		3499010	1					
ANR	3499019	Identifier	lm32_op_orhi		3499010	1					
ANR	3499020	UnaryOperationExpression	! instr -> src0_reg		3499010	1					
ANR	3499021	UnaryOperator	!		3499010	0					
ANR	3499022	PtrMemberAccess	instr -> src0_reg		3499010	1					
ANR	3499023	Identifier	instr		3499010	0					
ANR	3499024	Identifier	src0_reg		3499010	1					
ANR	3499025	ReturnType	static bool		3499010	1					
ANR	3499026	Identifier	is_pseudo_instr_mvhi		3499010	2					
ANR	3499027	ParameterList	RAsmLm32Instruction * instr		3499010	3					
ANR	3499028	Parameter	RAsmLm32Instruction * instr	133:33:3168:3193	3499010	0	True				
ANR	3499029	ParameterType	RAsmLm32Instruction *		3499010	0					
ANR	3499030	Identifier	instr		3499010	1					
ANR	3499031	CFGEntryNode	ENTRY		3499010		True				
ANR	3499032	CFGExitNode	EXIT		3499010		True				
ANR	3499033	Symbol	lm32_op_orhi		3499010						
ANR	3499034	Symbol	instr -> op		3499010						
ANR	3499035	Symbol	instr		3499010						
ANR	3499036	Symbol	* instr		3499010						
ANR	3499037	Symbol	instr -> src0_reg		3499010						
ANR	3499038	Function	is_pseudo_instr_not	138:0:3290:3409							
ANR	3499039	FunctionDef	is_pseudo_instr_not (RAsmLm32Instruction * instr)		3499038	0					
ANR	3499040	CompoundStatement		138:60:3350:3409	3499038	0					
ANR	3499041	ReturnStatement	return ( instr -> op == lm32_op_xnor ) && ! instr -> src1_reg ;	139:1:3353:3407	3499038	0	True				
ANR	3499042	AndExpression	( instr -> op == lm32_op_xnor ) && ! instr -> src1_reg		3499038	0		&&			
ANR	3499043	EqualityExpression	instr -> op == lm32_op_xnor		3499038	0		==			
ANR	3499044	PtrMemberAccess	instr -> op		3499038	0					
ANR	3499045	Identifier	instr		3499038	0					
ANR	3499046	Identifier	op		3499038	1					
ANR	3499047	Identifier	lm32_op_xnor		3499038	1					
ANR	3499048	UnaryOperationExpression	! instr -> src1_reg		3499038	1					
ANR	3499049	UnaryOperator	!		3499038	0					
ANR	3499050	PtrMemberAccess	instr -> src1_reg		3499038	1					
ANR	3499051	Identifier	instr		3499038	0					
ANR	3499052	Identifier	src1_reg		3499038	1					
ANR	3499053	ReturnType	static bool		3499038	1					
ANR	3499054	Identifier	is_pseudo_instr_not		3499038	2					
ANR	3499055	ParameterList	RAsmLm32Instruction * instr		3499038	3					
ANR	3499056	Parameter	RAsmLm32Instruction * instr	138:32:3322:3347	3499038	0	True				
ANR	3499057	ParameterType	RAsmLm32Instruction *		3499038	0					
ANR	3499058	Identifier	instr		3499038	1					
ANR	3499059	CFGEntryNode	ENTRY		3499038		True				
ANR	3499060	CFGExitNode	EXIT		3499038		True				
ANR	3499061	Symbol	instr -> src1_reg		3499038						
ANR	3499062	Symbol	instr -> op		3499038						
ANR	3499063	Symbol	instr		3499038						
ANR	3499064	Symbol	* instr		3499038						
ANR	3499065	Symbol	lm32_op_xnor		3499038						
ANR	3499066	Function	is_pseudo_instr_mvi	143:0:3450:3569							
ANR	3499067	FunctionDef	is_pseudo_instr_mvi (RAsmLm32Instruction * instr)		3499066	0					
ANR	3499068	CompoundStatement		143:60:3510:3569	3499066	0					
ANR	3499069	ReturnStatement	return ( instr -> op == lm32_op_addi ) && ! instr -> src0_reg ;	144:1:3513:3567	3499066	0	True				
ANR	3499070	AndExpression	( instr -> op == lm32_op_addi ) && ! instr -> src0_reg		3499066	0		&&			
ANR	3499071	EqualityExpression	instr -> op == lm32_op_addi		3499066	0		==			
ANR	3499072	PtrMemberAccess	instr -> op		3499066	0					
ANR	3499073	Identifier	instr		3499066	0					
ANR	3499074	Identifier	op		3499066	1					
ANR	3499075	Identifier	lm32_op_addi		3499066	1					
ANR	3499076	UnaryOperationExpression	! instr -> src0_reg		3499066	1					
ANR	3499077	UnaryOperator	!		3499066	0					
ANR	3499078	PtrMemberAccess	instr -> src0_reg		3499066	1					
ANR	3499079	Identifier	instr		3499066	0					
ANR	3499080	Identifier	src0_reg		3499066	1					
ANR	3499081	ReturnType	static bool		3499066	1					
ANR	3499082	Identifier	is_pseudo_instr_mvi		3499066	2					
ANR	3499083	ParameterList	RAsmLm32Instruction * instr		3499066	3					
ANR	3499084	Parameter	RAsmLm32Instruction * instr	143:32:3482:3507	3499066	0	True				
ANR	3499085	ParameterType	RAsmLm32Instruction *		3499066	0					
ANR	3499086	Identifier	instr		3499066	1					
ANR	3499087	CFGEntryNode	ENTRY		3499066		True				
ANR	3499088	CFGExitNode	EXIT		3499066		True				
ANR	3499089	Symbol	instr -> op		3499066						
ANR	3499090	Symbol	instr		3499066						
ANR	3499091	Symbol	* instr		3499066						
ANR	3499092	Symbol	lm32_op_addi		3499066						
ANR	3499093	Symbol	instr -> src0_reg		3499066						
ANR	3499094	Function	is_pseudo_instr_nop	148:0:3596:3759							
ANR	3499095	FunctionDef	is_pseudo_instr_nop (RAsmLm32Instruction * instr)		3499094	0					
ANR	3499096	CompoundStatement		148:60:3656:3759	3499094	0					
ANR	3499097	ReturnStatement	return ( instr -> op == lm32_op_addi ) && ! instr -> dest_reg && ! instr -> src0_reg && ! instr -> immediate ;	149:1:3659:3757	3499094	0	True				
ANR	3499098	AndExpression	( instr -> op == lm32_op_addi ) && ! instr -> dest_reg && ! instr -> src0_reg && ! instr -> immediate		3499094	0		&&			
ANR	3499099	EqualityExpression	instr -> op == lm32_op_addi		3499094	0		==			
ANR	3499100	PtrMemberAccess	instr -> op		3499094	0					
ANR	3499101	Identifier	instr		3499094	0					
ANR	3499102	Identifier	op		3499094	1					
ANR	3499103	Identifier	lm32_op_addi		3499094	1					
ANR	3499104	AndExpression	! instr -> dest_reg && ! instr -> src0_reg && ! instr -> immediate		3499094	1		&&			
ANR	3499105	UnaryOperationExpression	! instr -> dest_reg		3499094	0					
ANR	3499106	UnaryOperator	!		3499094	0					
ANR	3499107	PtrMemberAccess	instr -> dest_reg		3499094	1					
ANR	3499108	Identifier	instr		3499094	0					
ANR	3499109	Identifier	dest_reg		3499094	1					
ANR	3499110	AndExpression	! instr -> src0_reg && ! instr -> immediate		3499094	1		&&			
ANR	3499111	UnaryOperationExpression	! instr -> src0_reg		3499094	0					
ANR	3499112	UnaryOperator	!		3499094	0					
ANR	3499113	PtrMemberAccess	instr -> src0_reg		3499094	1					
ANR	3499114	Identifier	instr		3499094	0					
ANR	3499115	Identifier	src0_reg		3499094	1					
ANR	3499116	UnaryOperationExpression	! instr -> immediate		3499094	1					
ANR	3499117	UnaryOperator	!		3499094	0					
ANR	3499118	PtrMemberAccess	instr -> immediate		3499094	1					
ANR	3499119	Identifier	instr		3499094	0					
ANR	3499120	Identifier	immediate		3499094	1					
ANR	3499121	ReturnType	static bool		3499094	1					
ANR	3499122	Identifier	is_pseudo_instr_nop		3499094	2					
ANR	3499123	ParameterList	RAsmLm32Instruction * instr		3499094	3					
ANR	3499124	Parameter	RAsmLm32Instruction * instr	148:32:3628:3653	3499094	0	True				
ANR	3499125	ParameterType	RAsmLm32Instruction *		3499094	0					
ANR	3499126	Identifier	instr		3499094	1					
ANR	3499127	CFGEntryNode	ENTRY		3499094		True				
ANR	3499128	CFGExitNode	EXIT		3499094		True				
ANR	3499129	Symbol	instr -> op		3499094						
ANR	3499130	Symbol	instr		3499094						
ANR	3499131	Symbol	* instr		3499094						
ANR	3499132	Symbol	instr -> dest_reg		3499094						
ANR	3499133	Symbol	lm32_op_addi		3499094						
ANR	3499134	Symbol	instr -> src0_reg		3499094						
ANR	3499135	Symbol	instr -> immediate		3499094						
ANR	3499136	Function	is_pseudo_instr_raise	154:0:3807:3905							
ANR	3499137	FunctionDef	is_pseudo_instr_raise (RAsmLm32Instruction * instr)		3499136	0					
ANR	3499138	CompoundStatement		154:62:3869:3905	3499136	0					
ANR	3499139	ReturnStatement	return instr -> op == raise_instr ;	155:1:3872:3903	3499136	0	True				
ANR	3499140	EqualityExpression	instr -> op == raise_instr		3499136	0		==			
ANR	3499141	PtrMemberAccess	instr -> op		3499136	0					
ANR	3499142	Identifier	instr		3499136	0					
ANR	3499143	Identifier	op		3499136	1					
ANR	3499144	Identifier	raise_instr		3499136	1					
ANR	3499145	ReturnType	static bool		3499136	1					
ANR	3499146	Identifier	is_pseudo_instr_raise		3499136	2					
ANR	3499147	ParameterList	RAsmLm32Instruction * instr		3499136	3					
ANR	3499148	Parameter	RAsmLm32Instruction * instr	154:34:3841:3866	3499136	0	True				
ANR	3499149	ParameterType	RAsmLm32Instruction *		3499136	0					
ANR	3499150	Identifier	instr		3499136	1					
ANR	3499151	CFGEntryNode	ENTRY		3499136		True				
ANR	3499152	CFGExitNode	EXIT		3499136		True				
ANR	3499153	Symbol	instr -> op		3499136						
ANR	3499154	Symbol	instr		3499136						
ANR	3499155	Symbol	raise_instr		3499136						
ANR	3499156	Symbol	* instr		3499136						
ANR	3499157	Function	r_asm_lm32_decode	158:0:3908:6734							
ANR	3499158	FunctionDef	r_asm_lm32_decode (RAsmLm32Instruction * instr)		3499157	0					
ANR	3499159	CompoundStatement		158:57:3965:6734	3499157	0					
ANR	3499160	ExpressionStatement	instr -> op = extract_opcode ( instr -> value )	159:1:3968:4009	3499157	0	True				
ANR	3499161	AssignmentExpression	instr -> op = extract_opcode ( instr -> value )		3499157	0		=			
ANR	3499162	PtrMemberAccess	instr -> op		3499157	0					
ANR	3499163	Identifier	instr		3499157	0					
ANR	3499164	Identifier	op		3499157	1					
ANR	3499165	CallExpression	extract_opcode ( instr -> value )		3499157	1					
ANR	3499166	Callee	extract_opcode		3499157	0					
ANR	3499167	Identifier	extract_opcode		3499157	0					
ANR	3499168	ArgumentList	instr -> value		3499157	1					
ANR	3499169	Argument	instr -> value		3499157	0					
ANR	3499170	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499171	Identifier	instr		3499157	0					
ANR	3499172	Identifier	value		3499157	1					
ANR	3499173	IfStatement	if ( instr -> op >= RAsmLm32OpcodeNumber )		3499157	1					
ANR	3499174	Condition	instr -> op >= RAsmLm32OpcodeNumber	160:5:4016:4048	3499157	0	True				
ANR	3499175	RelationalExpression	instr -> op >= RAsmLm32OpcodeNumber		3499157	0		>=			
ANR	3499176	PtrMemberAccess	instr -> op		3499157	0					
ANR	3499177	Identifier	instr		3499157	0					
ANR	3499178	Identifier	op		3499157	1					
ANR	3499179	Identifier	RAsmLm32OpcodeNumber		3499157	1					
ANR	3499180	CompoundStatement		3:40:85:85	3499157	1					
ANR	3499181	ReturnStatement	return - 1 ;	161:2:4055:4064	3499157	0	True				
ANR	3499182	UnaryOperationExpression	- 1		3499157	0					
ANR	3499183	UnaryOperator	-		3499157	0					
ANR	3499184	PrimaryExpression	1		3499157	1					
ANR	3499185	ExpressionStatement	instr -> op_decode = RAsmLm32OpcodeList [ instr -> op ]	163:1:4070:4118	3499157	2	True				
ANR	3499186	AssignmentExpression	instr -> op_decode = RAsmLm32OpcodeList [ instr -> op ]		3499157	0		=			
ANR	3499187	PtrMemberAccess	instr -> op_decode		3499157	0					
ANR	3499188	Identifier	instr		3499157	0					
ANR	3499189	Identifier	op_decode		3499157	1					
ANR	3499190	ArrayIndexing	RAsmLm32OpcodeList [ instr -> op ]		3499157	1					
ANR	3499191	Identifier	RAsmLm32OpcodeList		3499157	0					
ANR	3499192	PtrMemberAccess	instr -> op		3499157	1					
ANR	3499193	Identifier	instr		3499157	0					
ANR	3499194	Identifier	op		3499157	1					
ANR	3499195	SwitchStatement	switch ( instr -> op_decode . type )		3499157	3					
ANR	3499196	Condition	instr -> op_decode . type	165:9:4130:4150	3499157	0	True				
ANR	3499197	MemberAccess	instr -> op_decode . type		3499157	0					
ANR	3499198	PtrMemberAccess	instr -> op_decode		3499157	0					
ANR	3499199	Identifier	instr		3499157	0					
ANR	3499200	Identifier	op_decode		3499157	1					
ANR	3499201	Identifier	type		3499157	1					
ANR	3499202	CompoundStatement		8:32:187:187	3499157	1					
ANR	3499203	Label	case reg_imm16_signextend :	166:1:4156:4181	3499157	0	True				
ANR	3499204	Identifier	reg_imm16_signextend		3499157	0					
ANR	3499205	ExpressionStatement	instr -> dest_reg = extract_reg_v ( instr -> value )	167:2:4185:4231	3499157	1	True				
ANR	3499206	AssignmentExpression	instr -> dest_reg = extract_reg_v ( instr -> value )		3499157	0		=			
ANR	3499207	PtrMemberAccess	instr -> dest_reg		3499157	0					
ANR	3499208	Identifier	instr		3499157	0					
ANR	3499209	Identifier	dest_reg		3499157	1					
ANR	3499210	CallExpression	extract_reg_v ( instr -> value )		3499157	1					
ANR	3499211	Callee	extract_reg_v		3499157	0					
ANR	3499212	Identifier	extract_reg_v		3499157	0					
ANR	3499213	ArgumentList	instr -> value		3499157	1					
ANR	3499214	Argument	instr -> value		3499157	0					
ANR	3499215	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499216	Identifier	instr		3499157	0					
ANR	3499217	Identifier	value		3499157	1					
ANR	3499218	ExpressionStatement	instr -> src0_reg = extract_reg_u ( instr -> value )	168:2:4235:4281	3499157	2	True				
ANR	3499219	AssignmentExpression	instr -> src0_reg = extract_reg_u ( instr -> value )		3499157	0		=			
ANR	3499220	PtrMemberAccess	instr -> src0_reg		3499157	0					
ANR	3499221	Identifier	instr		3499157	0					
ANR	3499222	Identifier	src0_reg		3499157	1					
ANR	3499223	CallExpression	extract_reg_u ( instr -> value )		3499157	1					
ANR	3499224	Callee	extract_reg_u		3499157	0					
ANR	3499225	Identifier	extract_reg_u		3499157	0					
ANR	3499226	ArgumentList	instr -> value		3499157	1					
ANR	3499227	Argument	instr -> value		3499157	0					
ANR	3499228	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499229	Identifier	instr		3499157	0					
ANR	3499230	Identifier	value		3499157	1					
ANR	3499231	ExpressionStatement	"instr -> immediate = shift_and_signextend ( 0 , RAsmLm32Imm16SignBitPos , extract_imm16 ( instr -> value ) )"	169:2:4285:4387	3499157	3	True				
ANR	3499232	AssignmentExpression	"instr -> immediate = shift_and_signextend ( 0 , RAsmLm32Imm16SignBitPos , extract_imm16 ( instr -> value ) )"		3499157	0		=			
ANR	3499233	PtrMemberAccess	instr -> immediate		3499157	0					
ANR	3499234	Identifier	instr		3499157	0					
ANR	3499235	Identifier	immediate		3499157	1					
ANR	3499236	CallExpression	"shift_and_signextend ( 0 , RAsmLm32Imm16SignBitPos , extract_imm16 ( instr -> value ) )"		3499157	1					
ANR	3499237	Callee	shift_and_signextend		3499157	0					
ANR	3499238	Identifier	shift_and_signextend		3499157	0					
ANR	3499239	ArgumentList	0		3499157	1					
ANR	3499240	Argument	0		3499157	0					
ANR	3499241	PrimaryExpression	0		3499157	0					
ANR	3499242	Argument	RAsmLm32Imm16SignBitPos		3499157	1					
ANR	3499243	Identifier	RAsmLm32Imm16SignBitPos		3499157	0					
ANR	3499244	Argument	extract_imm16 ( instr -> value )		3499157	2					
ANR	3499245	CallExpression	extract_imm16 ( instr -> value )		3499157	0					
ANR	3499246	Callee	extract_imm16		3499157	0					
ANR	3499247	Identifier	extract_imm16		3499157	0					
ANR	3499248	ArgumentList	instr -> value		3499157	1					
ANR	3499249	Argument	instr -> value		3499157	0					
ANR	3499250	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499251	Identifier	instr		3499157	0					
ANR	3499252	Identifier	value		3499157	1					
ANR	3499253	BreakStatement	break ;	171:2:4391:4396	3499157	4	True				
ANR	3499254	Label	case reg_imm16_shift2_signextend :	172:1:4399:4431	3499157	5	True				
ANR	3499255	Identifier	reg_imm16_shift2_signextend		3499157	0					
ANR	3499256	ExpressionStatement	instr -> dest_reg = extract_reg_v ( instr -> value )	173:2:4435:4481	3499157	6	True				
ANR	3499257	AssignmentExpression	instr -> dest_reg = extract_reg_v ( instr -> value )		3499157	0		=			
ANR	3499258	PtrMemberAccess	instr -> dest_reg		3499157	0					
ANR	3499259	Identifier	instr		3499157	0					
ANR	3499260	Identifier	dest_reg		3499157	1					
ANR	3499261	CallExpression	extract_reg_v ( instr -> value )		3499157	1					
ANR	3499262	Callee	extract_reg_v		3499157	0					
ANR	3499263	Identifier	extract_reg_v		3499157	0					
ANR	3499264	ArgumentList	instr -> value		3499157	1					
ANR	3499265	Argument	instr -> value		3499157	0					
ANR	3499266	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499267	Identifier	instr		3499157	0					
ANR	3499268	Identifier	value		3499157	1					
ANR	3499269	ExpressionStatement	instr -> src0_reg = extract_reg_u ( instr -> value )	174:2:4485:4531	3499157	7	True				
ANR	3499270	AssignmentExpression	instr -> src0_reg = extract_reg_u ( instr -> value )		3499157	0		=			
ANR	3499271	PtrMemberAccess	instr -> src0_reg		3499157	0					
ANR	3499272	Identifier	instr		3499157	0					
ANR	3499273	Identifier	src0_reg		3499157	1					
ANR	3499274	CallExpression	extract_reg_u ( instr -> value )		3499157	1					
ANR	3499275	Callee	extract_reg_u		3499157	0					
ANR	3499276	Identifier	extract_reg_u		3499157	0					
ANR	3499277	ArgumentList	instr -> value		3499157	1					
ANR	3499278	Argument	instr -> value		3499157	0					
ANR	3499279	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499280	Identifier	instr		3499157	0					
ANR	3499281	Identifier	value		3499157	1					
ANR	3499282	ExpressionStatement	"instr -> immediate = shift_and_signextend ( 2 , RAsmLm32Imm16SignBitPos , extract_imm16 ( instr -> value ) )"	175:2:4535:4637	3499157	8	True				
ANR	3499283	AssignmentExpression	"instr -> immediate = shift_and_signextend ( 2 , RAsmLm32Imm16SignBitPos , extract_imm16 ( instr -> value ) )"		3499157	0		=			
ANR	3499284	PtrMemberAccess	instr -> immediate		3499157	0					
ANR	3499285	Identifier	instr		3499157	0					
ANR	3499286	Identifier	immediate		3499157	1					
ANR	3499287	CallExpression	"shift_and_signextend ( 2 , RAsmLm32Imm16SignBitPos , extract_imm16 ( instr -> value ) )"		3499157	1					
ANR	3499288	Callee	shift_and_signextend		3499157	0					
ANR	3499289	Identifier	shift_and_signextend		3499157	0					
ANR	3499290	ArgumentList	2		3499157	1					
ANR	3499291	Argument	2		3499157	0					
ANR	3499292	PrimaryExpression	2		3499157	0					
ANR	3499293	Argument	RAsmLm32Imm16SignBitPos		3499157	1					
ANR	3499294	Identifier	RAsmLm32Imm16SignBitPos		3499157	0					
ANR	3499295	Argument	extract_imm16 ( instr -> value )		3499157	2					
ANR	3499296	CallExpression	extract_imm16 ( instr -> value )		3499157	0					
ANR	3499297	Callee	extract_imm16		3499157	0					
ANR	3499298	Identifier	extract_imm16		3499157	0					
ANR	3499299	ArgumentList	instr -> value		3499157	1					
ANR	3499300	Argument	instr -> value		3499157	0					
ANR	3499301	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499302	Identifier	instr		3499157	0					
ANR	3499303	Identifier	value		3499157	1					
ANR	3499304	BreakStatement	break ;	177:2:4641:4646	3499157	9	True				
ANR	3499305	Label	case reg_imm16_zeroextend :	178:1:4649:4674	3499157	10	True				
ANR	3499306	Identifier	reg_imm16_zeroextend		3499157	0					
ANR	3499307	ExpressionStatement	instr -> dest_reg = extract_reg_v ( instr -> value )	179:2:4678:4724	3499157	11	True				
ANR	3499308	AssignmentExpression	instr -> dest_reg = extract_reg_v ( instr -> value )		3499157	0		=			
ANR	3499309	PtrMemberAccess	instr -> dest_reg		3499157	0					
ANR	3499310	Identifier	instr		3499157	0					
ANR	3499311	Identifier	dest_reg		3499157	1					
ANR	3499312	CallExpression	extract_reg_v ( instr -> value )		3499157	1					
ANR	3499313	Callee	extract_reg_v		3499157	0					
ANR	3499314	Identifier	extract_reg_v		3499157	0					
ANR	3499315	ArgumentList	instr -> value		3499157	1					
ANR	3499316	Argument	instr -> value		3499157	0					
ANR	3499317	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499318	Identifier	instr		3499157	0					
ANR	3499319	Identifier	value		3499157	1					
ANR	3499320	ExpressionStatement	instr -> src0_reg = extract_reg_u ( instr -> value )	180:2:4728:4774	3499157	12	True				
ANR	3499321	AssignmentExpression	instr -> src0_reg = extract_reg_u ( instr -> value )		3499157	0		=			
ANR	3499322	PtrMemberAccess	instr -> src0_reg		3499157	0					
ANR	3499323	Identifier	instr		3499157	0					
ANR	3499324	Identifier	src0_reg		3499157	1					
ANR	3499325	CallExpression	extract_reg_u ( instr -> value )		3499157	1					
ANR	3499326	Callee	extract_reg_u		3499157	0					
ANR	3499327	Identifier	extract_reg_u		3499157	0					
ANR	3499328	ArgumentList	instr -> value		3499157	1					
ANR	3499329	Argument	instr -> value		3499157	0					
ANR	3499330	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499331	Identifier	instr		3499157	0					
ANR	3499332	Identifier	value		3499157	1					
ANR	3499333	ExpressionStatement	instr -> immediate = extract_imm16 ( instr -> value )	181:2:4778:4825	3499157	13	True				
ANR	3499334	AssignmentExpression	instr -> immediate = extract_imm16 ( instr -> value )		3499157	0		=			
ANR	3499335	PtrMemberAccess	instr -> immediate		3499157	0					
ANR	3499336	Identifier	instr		3499157	0					
ANR	3499337	Identifier	immediate		3499157	1					
ANR	3499338	CallExpression	extract_imm16 ( instr -> value )		3499157	1					
ANR	3499339	Callee	extract_imm16		3499157	0					
ANR	3499340	Identifier	extract_imm16		3499157	0					
ANR	3499341	ArgumentList	instr -> value		3499157	1					
ANR	3499342	Argument	instr -> value		3499157	0					
ANR	3499343	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499344	Identifier	instr		3499157	0					
ANR	3499345	Identifier	value		3499157	1					
ANR	3499346	BreakStatement	break ;	182:2:4829:4834	3499157	14	True				
ANR	3499347	Label	case reg_imm5 :	183:1:4837:4850	3499157	15	True				
ANR	3499348	Identifier	reg_imm5		3499157	0					
ANR	3499349	IfStatement	if ( is_invalid_imm5_instr ( instr ) )		3499157	16					
ANR	3499350	Condition	is_invalid_imm5_instr ( instr )	184:6:4858:4886	3499157	0	True				
ANR	3499351	CallExpression	is_invalid_imm5_instr ( instr )		3499157	0					
ANR	3499352	Callee	is_invalid_imm5_instr		3499157	0					
ANR	3499353	Identifier	is_invalid_imm5_instr		3499157	0					
ANR	3499354	ArgumentList	instr		3499157	1					
ANR	3499355	Argument	instr		3499157	0					
ANR	3499356	Identifier	instr		3499157	0					
ANR	3499357	CompoundStatement		27:37:923:923	3499157	1					
ANR	3499358	ReturnStatement	return - 1 ;	185:3:4894:4903	3499157	0	True				
ANR	3499359	UnaryOperationExpression	- 1		3499157	0					
ANR	3499360	UnaryOperator	-		3499157	0					
ANR	3499361	PrimaryExpression	1		3499157	1					
ANR	3499362	ExpressionStatement	instr -> dest_reg = extract_reg_v ( instr -> value )	187:2:4911:4957	3499157	17	True				
ANR	3499363	AssignmentExpression	instr -> dest_reg = extract_reg_v ( instr -> value )		3499157	0		=			
ANR	3499364	PtrMemberAccess	instr -> dest_reg		3499157	0					
ANR	3499365	Identifier	instr		3499157	0					
ANR	3499366	Identifier	dest_reg		3499157	1					
ANR	3499367	CallExpression	extract_reg_v ( instr -> value )		3499157	1					
ANR	3499368	Callee	extract_reg_v		3499157	0					
ANR	3499369	Identifier	extract_reg_v		3499157	0					
ANR	3499370	ArgumentList	instr -> value		3499157	1					
ANR	3499371	Argument	instr -> value		3499157	0					
ANR	3499372	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499373	Identifier	instr		3499157	0					
ANR	3499374	Identifier	value		3499157	1					
ANR	3499375	ExpressionStatement	instr -> src0_reg = extract_reg_u ( instr -> value )	188:2:4961:5007	3499157	18	True				
ANR	3499376	AssignmentExpression	instr -> src0_reg = extract_reg_u ( instr -> value )		3499157	0		=			
ANR	3499377	PtrMemberAccess	instr -> src0_reg		3499157	0					
ANR	3499378	Identifier	instr		3499157	0					
ANR	3499379	Identifier	src0_reg		3499157	1					
ANR	3499380	CallExpression	extract_reg_u ( instr -> value )		3499157	1					
ANR	3499381	Callee	extract_reg_u		3499157	0					
ANR	3499382	Identifier	extract_reg_u		3499157	0					
ANR	3499383	ArgumentList	instr -> value		3499157	1					
ANR	3499384	Argument	instr -> value		3499157	0					
ANR	3499385	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499386	Identifier	instr		3499157	0					
ANR	3499387	Identifier	value		3499157	1					
ANR	3499388	ExpressionStatement	instr -> immediate = extract_imm5 ( instr -> value )	189:2:5011:5057	3499157	19	True				
ANR	3499389	AssignmentExpression	instr -> immediate = extract_imm5 ( instr -> value )		3499157	0		=			
ANR	3499390	PtrMemberAccess	instr -> immediate		3499157	0					
ANR	3499391	Identifier	instr		3499157	0					
ANR	3499392	Identifier	immediate		3499157	1					
ANR	3499393	CallExpression	extract_imm5 ( instr -> value )		3499157	1					
ANR	3499394	Callee	extract_imm5		3499157	0					
ANR	3499395	Identifier	extract_imm5		3499157	0					
ANR	3499396	ArgumentList	instr -> value		3499157	1					
ANR	3499397	Argument	instr -> value		3499157	0					
ANR	3499398	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499399	Identifier	instr		3499157	0					
ANR	3499400	Identifier	value		3499157	1					
ANR	3499401	BreakStatement	break ;	190:2:5061:5066	3499157	20	True				
ANR	3499402	Label	case raise_instr :	191:1:5069:5085	3499157	21	True				
ANR	3499403	Identifier	raise_instr		3499157	0					
ANR	3499404	IfStatement	if ( is_invalid_imm5_instr ( instr ) )		3499157	22					
ANR	3499405	Condition	is_invalid_imm5_instr ( instr )	192:6:5093:5121	3499157	0	True				
ANR	3499406	CallExpression	is_invalid_imm5_instr ( instr )		3499157	0					
ANR	3499407	Callee	is_invalid_imm5_instr		3499157	0					
ANR	3499408	Identifier	is_invalid_imm5_instr		3499157	0					
ANR	3499409	ArgumentList	instr		3499157	1					
ANR	3499410	Argument	instr		3499157	0					
ANR	3499411	Identifier	instr		3499157	0					
ANR	3499412	CompoundStatement		35:37:1158:1158	3499157	1					
ANR	3499413	ReturnStatement	return - 1 ;	193:3:5129:5138	3499157	0	True				
ANR	3499414	UnaryOperationExpression	- 1		3499157	0					
ANR	3499415	UnaryOperator	-		3499157	0					
ANR	3499416	PrimaryExpression	1		3499157	1					
ANR	3499417	ExpressionStatement	instr -> immediate = extract_imm5 ( instr -> value )	197:2:5268:5314	3499157	23	True				
ANR	3499418	AssignmentExpression	instr -> immediate = extract_imm5 ( instr -> value )		3499157	0		=			
ANR	3499419	PtrMemberAccess	instr -> immediate		3499157	0					
ANR	3499420	Identifier	instr		3499157	0					
ANR	3499421	Identifier	immediate		3499157	1					
ANR	3499422	CallExpression	extract_imm5 ( instr -> value )		3499157	1					
ANR	3499423	Callee	extract_imm5		3499157	0					
ANR	3499424	Identifier	extract_imm5		3499157	0					
ANR	3499425	ArgumentList	instr -> value		3499157	1					
ANR	3499426	Argument	instr -> value		3499157	0					
ANR	3499427	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499428	Identifier	instr		3499157	0					
ANR	3499429	Identifier	value		3499157	1					
ANR	3499430	BreakStatement	break ;	198:2:5318:5323	3499157	24	True				
ANR	3499431	Label	case one_reg :	199:1:5326:5338	3499157	25	True				
ANR	3499432	Identifier	one_reg		3499157	0					
ANR	3499433	IfStatement	if ( is_invalid_one_reg_instr ( instr ) )		3499157	26					
ANR	3499434	Condition	is_invalid_one_reg_instr ( instr )	200:6:5346:5377	3499157	0	True				
ANR	3499435	CallExpression	is_invalid_one_reg_instr ( instr )		3499157	0					
ANR	3499436	Callee	is_invalid_one_reg_instr		3499157	0					
ANR	3499437	Identifier	is_invalid_one_reg_instr		3499157	0					
ANR	3499438	ArgumentList	instr		3499157	1					
ANR	3499439	Argument	instr		3499157	0					
ANR	3499440	Identifier	instr		3499157	0					
ANR	3499441	CompoundStatement		43:40:1414:1414	3499157	1					
ANR	3499442	ReturnStatement	return - 1 ;	201:3:5385:5394	3499157	0	True				
ANR	3499443	UnaryOperationExpression	- 1		3499157	0					
ANR	3499444	UnaryOperator	-		3499157	0					
ANR	3499445	PrimaryExpression	1		3499157	1					
ANR	3499446	ExpressionStatement	instr -> src0_reg = extract_reg_u ( instr -> value )	203:2:5402:5448	3499157	27	True				
ANR	3499447	AssignmentExpression	instr -> src0_reg = extract_reg_u ( instr -> value )		3499157	0		=			
ANR	3499448	PtrMemberAccess	instr -> src0_reg		3499157	0					
ANR	3499449	Identifier	instr		3499157	0					
ANR	3499450	Identifier	src0_reg		3499157	1					
ANR	3499451	CallExpression	extract_reg_u ( instr -> value )		3499157	1					
ANR	3499452	Callee	extract_reg_u		3499157	0					
ANR	3499453	Identifier	extract_reg_u		3499157	0					
ANR	3499454	ArgumentList	instr -> value		3499157	1					
ANR	3499455	Argument	instr -> value		3499157	0					
ANR	3499456	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499457	Identifier	instr		3499157	0					
ANR	3499458	Identifier	value		3499157	1					
ANR	3499459	BreakStatement	break ;	204:2:5452:5457	3499157	28	True				
ANR	3499460	Label	case two_regs :	205:1:5460:5473	3499157	29	True				
ANR	3499461	Identifier	two_regs		3499157	0					
ANR	3499462	IfStatement	if ( is_invalid_two_reg_instr ( instr ) )		3499157	30					
ANR	3499463	Condition	is_invalid_two_reg_instr ( instr )	206:6:5481:5512	3499157	0	True				
ANR	3499464	CallExpression	is_invalid_two_reg_instr ( instr )		3499157	0					
ANR	3499465	Callee	is_invalid_two_reg_instr		3499157	0					
ANR	3499466	Identifier	is_invalid_two_reg_instr		3499157	0					
ANR	3499467	ArgumentList	instr		3499157	1					
ANR	3499468	Argument	instr		3499157	0					
ANR	3499469	Identifier	instr		3499157	0					
ANR	3499470	CompoundStatement		49:40:1549:1549	3499157	1					
ANR	3499471	ReturnStatement	return - 1 ;	207:3:5520:5529	3499157	0	True				
ANR	3499472	UnaryOperationExpression	- 1		3499157	0					
ANR	3499473	UnaryOperator	-		3499157	0					
ANR	3499474	PrimaryExpression	1		3499157	1					
ANR	3499475	ExpressionStatement	instr -> dest_reg = extract_reg_w ( instr -> value )	209:2:5537:5583	3499157	31	True				
ANR	3499476	AssignmentExpression	instr -> dest_reg = extract_reg_w ( instr -> value )		3499157	0		=			
ANR	3499477	PtrMemberAccess	instr -> dest_reg		3499157	0					
ANR	3499478	Identifier	instr		3499157	0					
ANR	3499479	Identifier	dest_reg		3499157	1					
ANR	3499480	CallExpression	extract_reg_w ( instr -> value )		3499157	1					
ANR	3499481	Callee	extract_reg_w		3499157	0					
ANR	3499482	Identifier	extract_reg_w		3499157	0					
ANR	3499483	ArgumentList	instr -> value		3499157	1					
ANR	3499484	Argument	instr -> value		3499157	0					
ANR	3499485	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499486	Identifier	instr		3499157	0					
ANR	3499487	Identifier	value		3499157	1					
ANR	3499488	ExpressionStatement	instr -> src0_reg = extract_reg_u ( instr -> value )	210:2:5587:5633	3499157	32	True				
ANR	3499489	AssignmentExpression	instr -> src0_reg = extract_reg_u ( instr -> value )		3499157	0		=			
ANR	3499490	PtrMemberAccess	instr -> src0_reg		3499157	0					
ANR	3499491	Identifier	instr		3499157	0					
ANR	3499492	Identifier	src0_reg		3499157	1					
ANR	3499493	CallExpression	extract_reg_u ( instr -> value )		3499157	1					
ANR	3499494	Callee	extract_reg_u		3499157	0					
ANR	3499495	Identifier	extract_reg_u		3499157	0					
ANR	3499496	ArgumentList	instr -> value		3499157	1					
ANR	3499497	Argument	instr -> value		3499157	0					
ANR	3499498	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499499	Identifier	instr		3499157	0					
ANR	3499500	Identifier	value		3499157	1					
ANR	3499501	BreakStatement	break ;	211:2:5637:5642	3499157	33	True				
ANR	3499502	Label	case three_regs :	212:1:5645:5660	3499157	34	True				
ANR	3499503	Identifier	three_regs		3499157	0					
ANR	3499504	ExpressionStatement	instr -> dest_reg = extract_reg_w ( instr -> value )	213:2:5664:5710	3499157	35	True				
ANR	3499505	AssignmentExpression	instr -> dest_reg = extract_reg_w ( instr -> value )		3499157	0		=			
ANR	3499506	PtrMemberAccess	instr -> dest_reg		3499157	0					
ANR	3499507	Identifier	instr		3499157	0					
ANR	3499508	Identifier	dest_reg		3499157	1					
ANR	3499509	CallExpression	extract_reg_w ( instr -> value )		3499157	1					
ANR	3499510	Callee	extract_reg_w		3499157	0					
ANR	3499511	Identifier	extract_reg_w		3499157	0					
ANR	3499512	ArgumentList	instr -> value		3499157	1					
ANR	3499513	Argument	instr -> value		3499157	0					
ANR	3499514	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499515	Identifier	instr		3499157	0					
ANR	3499516	Identifier	value		3499157	1					
ANR	3499517	ExpressionStatement	instr -> src0_reg = extract_reg_v ( instr -> value )	214:2:5714:5760	3499157	36	True				
ANR	3499518	AssignmentExpression	instr -> src0_reg = extract_reg_v ( instr -> value )		3499157	0		=			
ANR	3499519	PtrMemberAccess	instr -> src0_reg		3499157	0					
ANR	3499520	Identifier	instr		3499157	0					
ANR	3499521	Identifier	src0_reg		3499157	1					
ANR	3499522	CallExpression	extract_reg_v ( instr -> value )		3499157	1					
ANR	3499523	Callee	extract_reg_v		3499157	0					
ANR	3499524	Identifier	extract_reg_v		3499157	0					
ANR	3499525	ArgumentList	instr -> value		3499157	1					
ANR	3499526	Argument	instr -> value		3499157	0					
ANR	3499527	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499528	Identifier	instr		3499157	0					
ANR	3499529	Identifier	value		3499157	1					
ANR	3499530	ExpressionStatement	instr -> src1_reg = extract_reg_u ( instr -> value )	215:2:5764:5810	3499157	37	True				
ANR	3499531	AssignmentExpression	instr -> src1_reg = extract_reg_u ( instr -> value )		3499157	0		=			
ANR	3499532	PtrMemberAccess	instr -> src1_reg		3499157	0					
ANR	3499533	Identifier	instr		3499157	0					
ANR	3499534	Identifier	src1_reg		3499157	1					
ANR	3499535	CallExpression	extract_reg_u ( instr -> value )		3499157	1					
ANR	3499536	Callee	extract_reg_u		3499157	0					
ANR	3499537	Identifier	extract_reg_u		3499157	0					
ANR	3499538	ArgumentList	instr -> value		3499157	1					
ANR	3499539	Argument	instr -> value		3499157	0					
ANR	3499540	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499541	Identifier	instr		3499157	0					
ANR	3499542	Identifier	value		3499157	1					
ANR	3499543	BreakStatement	break ;	216:2:5814:5819	3499157	38	True				
ANR	3499544	Label	case reg_csr :	217:1:5822:5834	3499157	39	True				
ANR	3499545	Identifier	reg_csr		3499157	0					
ANR	3499546	IfStatement	if ( is_invalid_wcsr_instr ( instr ) )		3499157	40					
ANR	3499547	Condition	is_invalid_wcsr_instr ( instr )	218:6:5849:5877	3499157	0	True				
ANR	3499548	CallExpression	is_invalid_wcsr_instr ( instr )		3499157	0					
ANR	3499549	Callee	is_invalid_wcsr_instr		3499157	0					
ANR	3499550	Identifier	is_invalid_wcsr_instr		3499157	0					
ANR	3499551	ArgumentList	instr		3499157	1					
ANR	3499552	Argument	instr		3499157	0					
ANR	3499553	Identifier	instr		3499157	0					
ANR	3499554	CompoundStatement		61:37:1914:1914	3499157	1					
ANR	3499555	ReturnStatement	return - 1 ;	219:3:5885:5894	3499157	0	True				
ANR	3499556	UnaryOperationExpression	- 1		3499157	0					
ANR	3499557	UnaryOperator	-		3499157	0					
ANR	3499558	PrimaryExpression	1		3499157	1					
ANR	3499559	ExpressionStatement	instr -> src0_reg = extract_reg_v ( instr -> value )	221:2:5902:5948	3499157	41	True				
ANR	3499560	AssignmentExpression	instr -> src0_reg = extract_reg_v ( instr -> value )		3499157	0		=			
ANR	3499561	PtrMemberAccess	instr -> src0_reg		3499157	0					
ANR	3499562	Identifier	instr		3499157	0					
ANR	3499563	Identifier	src0_reg		3499157	1					
ANR	3499564	CallExpression	extract_reg_v ( instr -> value )		3499157	1					
ANR	3499565	Callee	extract_reg_v		3499157	0					
ANR	3499566	Identifier	extract_reg_v		3499157	0					
ANR	3499567	ArgumentList	instr -> value		3499157	1					
ANR	3499568	Argument	instr -> value		3499157	0					
ANR	3499569	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499570	Identifier	instr		3499157	0					
ANR	3499571	Identifier	value		3499157	1					
ANR	3499572	ExpressionStatement	instr -> csr = extract_reg_u ( instr -> value )	222:2:5952:5993	3499157	42	True				
ANR	3499573	AssignmentExpression	instr -> csr = extract_reg_u ( instr -> value )		3499157	0		=			
ANR	3499574	PtrMemberAccess	instr -> csr		3499157	0					
ANR	3499575	Identifier	instr		3499157	0					
ANR	3499576	Identifier	csr		3499157	1					
ANR	3499577	CallExpression	extract_reg_u ( instr -> value )		3499157	1					
ANR	3499578	Callee	extract_reg_u		3499157	0					
ANR	3499579	Identifier	extract_reg_u		3499157	0					
ANR	3499580	ArgumentList	instr -> value		3499157	1					
ANR	3499581	Argument	instr -> value		3499157	0					
ANR	3499582	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499583	Identifier	instr		3499157	0					
ANR	3499584	Identifier	value		3499157	1					
ANR	3499585	BreakStatement	break ;	223:2:5997:6002	3499157	43	True				
ANR	3499586	Label	case csr_reg :	224:1:6005:6017	3499157	44	True				
ANR	3499587	Identifier	csr_reg		3499157	0					
ANR	3499588	IfStatement	if ( is_invalid_two_reg_instr ( instr ) )		3499157	45					
ANR	3499589	Condition	is_invalid_two_reg_instr ( instr )	226:6:6080:6111	3499157	0	True				
ANR	3499590	CallExpression	is_invalid_two_reg_instr ( instr )		3499157	0					
ANR	3499591	Callee	is_invalid_two_reg_instr		3499157	0					
ANR	3499592	Identifier	is_invalid_two_reg_instr		3499157	0					
ANR	3499593	ArgumentList	instr		3499157	1					
ANR	3499594	Argument	instr		3499157	0					
ANR	3499595	Identifier	instr		3499157	0					
ANR	3499596	CompoundStatement		69:40:2148:2148	3499157	1					
ANR	3499597	ReturnStatement	return - 1 ;	227:3:6119:6128	3499157	0	True				
ANR	3499598	UnaryOperationExpression	- 1		3499157	0					
ANR	3499599	UnaryOperator	-		3499157	0					
ANR	3499600	PrimaryExpression	1		3499157	1					
ANR	3499601	ExpressionStatement	instr -> dest_reg = extract_reg_w ( instr -> value )	229:2:6136:6182	3499157	46	True				
ANR	3499602	AssignmentExpression	instr -> dest_reg = extract_reg_w ( instr -> value )		3499157	0		=			
ANR	3499603	PtrMemberAccess	instr -> dest_reg		3499157	0					
ANR	3499604	Identifier	instr		3499157	0					
ANR	3499605	Identifier	dest_reg		3499157	1					
ANR	3499606	CallExpression	extract_reg_w ( instr -> value )		3499157	1					
ANR	3499607	Callee	extract_reg_w		3499157	0					
ANR	3499608	Identifier	extract_reg_w		3499157	0					
ANR	3499609	ArgumentList	instr -> value		3499157	1					
ANR	3499610	Argument	instr -> value		3499157	0					
ANR	3499611	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499612	Identifier	instr		3499157	0					
ANR	3499613	Identifier	value		3499157	1					
ANR	3499614	ExpressionStatement	instr -> csr = extract_reg_u ( instr -> value )	230:2:6186:6227	3499157	47	True				
ANR	3499615	AssignmentExpression	instr -> csr = extract_reg_u ( instr -> value )		3499157	0		=			
ANR	3499616	PtrMemberAccess	instr -> csr		3499157	0					
ANR	3499617	Identifier	instr		3499157	0					
ANR	3499618	Identifier	csr		3499157	1					
ANR	3499619	CallExpression	extract_reg_u ( instr -> value )		3499157	1					
ANR	3499620	Callee	extract_reg_u		3499157	0					
ANR	3499621	Identifier	extract_reg_u		3499157	0					
ANR	3499622	ArgumentList	instr -> value		3499157	1					
ANR	3499623	Argument	instr -> value		3499157	0					
ANR	3499624	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499625	Identifier	instr		3499157	0					
ANR	3499626	Identifier	value		3499157	1					
ANR	3499627	BreakStatement	break ;	231:2:6231:6236	3499157	48	True				
ANR	3499628	Label	case imm26 :	232:1:6239:6249	3499157	49	True				
ANR	3499629	Identifier	imm26		3499157	0					
ANR	3499630	ExpressionStatement	"instr -> immediate = shift_and_signextend ( 2 , RAsmLm32Imm26SignBitPos , extract_imm26 ( instr -> value ) )"	233:2:6253:6355	3499157	50	True				
ANR	3499631	AssignmentExpression	"instr -> immediate = shift_and_signextend ( 2 , RAsmLm32Imm26SignBitPos , extract_imm26 ( instr -> value ) )"		3499157	0		=			
ANR	3499632	PtrMemberAccess	instr -> immediate		3499157	0					
ANR	3499633	Identifier	instr		3499157	0					
ANR	3499634	Identifier	immediate		3499157	1					
ANR	3499635	CallExpression	"shift_and_signextend ( 2 , RAsmLm32Imm26SignBitPos , extract_imm26 ( instr -> value ) )"		3499157	1					
ANR	3499636	Callee	shift_and_signextend		3499157	0					
ANR	3499637	Identifier	shift_and_signextend		3499157	0					
ANR	3499638	ArgumentList	2		3499157	1					
ANR	3499639	Argument	2		3499157	0					
ANR	3499640	PrimaryExpression	2		3499157	0					
ANR	3499641	Argument	RAsmLm32Imm26SignBitPos		3499157	1					
ANR	3499642	Identifier	RAsmLm32Imm26SignBitPos		3499157	0					
ANR	3499643	Argument	extract_imm26 ( instr -> value )		3499157	2					
ANR	3499644	CallExpression	extract_imm26 ( instr -> value )		3499157	0					
ANR	3499645	Callee	extract_imm26		3499157	0					
ANR	3499646	Identifier	extract_imm26		3499157	0					
ANR	3499647	ArgumentList	instr -> value		3499157	1					
ANR	3499648	Argument	instr -> value		3499157	0					
ANR	3499649	PtrMemberAccess	instr -> value		3499157	0					
ANR	3499650	Identifier	instr		3499157	0					
ANR	3499651	Identifier	value		3499157	1					
ANR	3499652	BreakStatement	break ;	235:2:6359:6364	3499157	51	True				
ANR	3499653	Label	case reserved :	236:1:6367:6380	3499157	52	True				
ANR	3499654	Identifier	reserved		3499157	0					
ANR	3499655	Label	default :	237:1:6383:6390	3499157	53	True				
ANR	3499656	Identifier	default		3499157	0					
ANR	3499657	ReturnStatement	return - 1 ;	238:2:6394:6403	3499157	54	True				
ANR	3499658	UnaryOperationExpression	- 1		3499157	0					
ANR	3499659	UnaryOperator	-		3499157	0					
ANR	3499660	PrimaryExpression	1		3499157	1					
ANR	3499661	ExpressionStatement	instr -> pseudoInstruction = is_pseudo_instr_ret ( instr ) || is_pseudo_instr_mv ( instr ) || is_pseudo_instr_mvhi ( instr ) || is_pseudo_instr_not ( instr ) || is_pseudo_instr_mvi ( instr ) || is_pseudo_instr_nop ( instr ) || is_pseudo_instr_raise ( instr )	242:1:6472:6720	3499157	4	True				
ANR	3499662	AssignmentExpression	instr -> pseudoInstruction = is_pseudo_instr_ret ( instr ) || is_pseudo_instr_mv ( instr ) || is_pseudo_instr_mvhi ( instr ) || is_pseudo_instr_not ( instr ) || is_pseudo_instr_mvi ( instr ) || is_pseudo_instr_nop ( instr ) || is_pseudo_instr_raise ( instr )		3499157	0		=			
ANR	3499663	PtrMemberAccess	instr -> pseudoInstruction		3499157	0					
ANR	3499664	Identifier	instr		3499157	0					
ANR	3499665	Identifier	pseudoInstruction		3499157	1					
ANR	3499666	OrExpression	is_pseudo_instr_ret ( instr ) || is_pseudo_instr_mv ( instr ) || is_pseudo_instr_mvhi ( instr ) || is_pseudo_instr_not ( instr ) || is_pseudo_instr_mvi ( instr ) || is_pseudo_instr_nop ( instr ) || is_pseudo_instr_raise ( instr )		3499157	1		||			
ANR	3499667	CallExpression	is_pseudo_instr_ret ( instr )		3499157	0					
ANR	3499668	Callee	is_pseudo_instr_ret		3499157	0					
ANR	3499669	Identifier	is_pseudo_instr_ret		3499157	0					
ANR	3499670	ArgumentList	instr		3499157	1					
ANR	3499671	Argument	instr		3499157	0					
ANR	3499672	Identifier	instr		3499157	0					
ANR	3499673	OrExpression	is_pseudo_instr_mv ( instr ) || is_pseudo_instr_mvhi ( instr ) || is_pseudo_instr_not ( instr ) || is_pseudo_instr_mvi ( instr ) || is_pseudo_instr_nop ( instr ) || is_pseudo_instr_raise ( instr )		3499157	1		||			
ANR	3499674	CallExpression	is_pseudo_instr_mv ( instr )		3499157	0					
ANR	3499675	Callee	is_pseudo_instr_mv		3499157	0					
ANR	3499676	Identifier	is_pseudo_instr_mv		3499157	0					
ANR	3499677	ArgumentList	instr		3499157	1					
ANR	3499678	Argument	instr		3499157	0					
ANR	3499679	Identifier	instr		3499157	0					
ANR	3499680	OrExpression	is_pseudo_instr_mvhi ( instr ) || is_pseudo_instr_not ( instr ) || is_pseudo_instr_mvi ( instr ) || is_pseudo_instr_nop ( instr ) || is_pseudo_instr_raise ( instr )		3499157	1		||			
ANR	3499681	CallExpression	is_pseudo_instr_mvhi ( instr )		3499157	0					
ANR	3499682	Callee	is_pseudo_instr_mvhi		3499157	0					
ANR	3499683	Identifier	is_pseudo_instr_mvhi		3499157	0					
ANR	3499684	ArgumentList	instr		3499157	1					
ANR	3499685	Argument	instr		3499157	0					
ANR	3499686	Identifier	instr		3499157	0					
ANR	3499687	OrExpression	is_pseudo_instr_not ( instr ) || is_pseudo_instr_mvi ( instr ) || is_pseudo_instr_nop ( instr ) || is_pseudo_instr_raise ( instr )		3499157	1		||			
ANR	3499688	CallExpression	is_pseudo_instr_not ( instr )		3499157	0					
ANR	3499689	Callee	is_pseudo_instr_not		3499157	0					
ANR	3499690	Identifier	is_pseudo_instr_not		3499157	0					
ANR	3499691	ArgumentList	instr		3499157	1					
ANR	3499692	Argument	instr		3499157	0					
ANR	3499693	Identifier	instr		3499157	0					
ANR	3499694	OrExpression	is_pseudo_instr_mvi ( instr ) || is_pseudo_instr_nop ( instr ) || is_pseudo_instr_raise ( instr )		3499157	1		||			
ANR	3499695	CallExpression	is_pseudo_instr_mvi ( instr )		3499157	0					
ANR	3499696	Callee	is_pseudo_instr_mvi		3499157	0					
ANR	3499697	Identifier	is_pseudo_instr_mvi		3499157	0					
ANR	3499698	ArgumentList	instr		3499157	1					
ANR	3499699	Argument	instr		3499157	0					
ANR	3499700	Identifier	instr		3499157	0					
ANR	3499701	OrExpression	is_pseudo_instr_nop ( instr ) || is_pseudo_instr_raise ( instr )		3499157	1		||			
ANR	3499702	CallExpression	is_pseudo_instr_nop ( instr )		3499157	0					
ANR	3499703	Callee	is_pseudo_instr_nop		3499157	0					
ANR	3499704	Identifier	is_pseudo_instr_nop		3499157	0					
ANR	3499705	ArgumentList	instr		3499157	1					
ANR	3499706	Argument	instr		3499157	0					
ANR	3499707	Identifier	instr		3499157	0					
ANR	3499708	CallExpression	is_pseudo_instr_raise ( instr )		3499157	1					
ANR	3499709	Callee	is_pseudo_instr_raise		3499157	0					
ANR	3499710	Identifier	is_pseudo_instr_raise		3499157	0					
ANR	3499711	ArgumentList	instr		3499157	1					
ANR	3499712	Argument	instr		3499157	0					
ANR	3499713	Identifier	instr		3499157	0					
ANR	3499714	ReturnStatement	return 0 ;	246:1:6724:6732	3499157	5	True				
ANR	3499715	PrimaryExpression	0		3499157	0					
ANR	3499716	ReturnType	static int		3499157	1					
ANR	3499717	Identifier	r_asm_lm32_decode		3499157	2					
ANR	3499718	ParameterList	RAsmLm32Instruction * instr		3499157	3					
ANR	3499719	Parameter	RAsmLm32Instruction * instr	158:29:3937:3962	3499157	0	True				
ANR	3499720	ParameterType	RAsmLm32Instruction *		3499157	0					
ANR	3499721	Identifier	instr		3499157	1					
ANR	3499722	CFGEntryNode	ENTRY		3499157		True				
ANR	3499723	CFGExitNode	EXIT		3499157		True				
ANR	3499724	Symbol	instr -> src1_reg		3499157						
ANR	3499725	Symbol	extract_opcode		3499157						
ANR	3499726	Symbol	is_invalid_one_reg_instr		3499157						
ANR	3499727	Symbol	* instr -> op		3499157						
ANR	3499728	Symbol	extract_imm16		3499157						
ANR	3499729	Symbol	extract_imm5		3499157						
ANR	3499730	Symbol	instr -> dest_reg		3499157						
ANR	3499731	Symbol	instr -> src0_reg		3499157						
ANR	3499732	Symbol	instr -> immediate		3499157						
ANR	3499733	Symbol	RAsmLm32OpcodeNumber		3499157						
ANR	3499734	Symbol	shift_and_signextend		3499157						
ANR	3499735	Symbol	is_pseudo_instr_mv		3499157						
ANR	3499736	Symbol	instr		3499157						
ANR	3499737	Symbol	* RAsmLm32OpcodeList		3499157						
ANR	3499738	Symbol	is_pseudo_instr_not		3499157						
ANR	3499739	Symbol	is_invalid_wcsr_instr		3499157						
ANR	3499740	Symbol	is_pseudo_instr_nop		3499157						
ANR	3499741	Symbol	RAsmLm32Imm16SignBitPos		3499157						
ANR	3499742	Symbol	instr -> value		3499157						
ANR	3499743	Symbol	is_invalid_imm5_instr		3499157						
ANR	3499744	Symbol	instr -> op		3499157						
ANR	3499745	Symbol	instr -> op_decode		3499157						
ANR	3499746	Symbol	* instr		3499157						
ANR	3499747	Symbol	RAsmLm32OpcodeList		3499157						
ANR	3499748	Symbol	is_pseudo_instr_mvi		3499157						
ANR	3499749	Symbol	is_pseudo_instr_ret		3499157						
ANR	3499750	Symbol	RAsmLm32Imm26SignBitPos		3499157						
ANR	3499751	Symbol	instr -> csr		3499157						
ANR	3499752	Symbol	is_pseudo_instr_raise		3499157						
ANR	3499753	Symbol	extract_imm26		3499157						
ANR	3499754	Symbol	is_pseudo_instr_mvhi		3499157						
ANR	3499755	Symbol	extract_reg_u		3499157						
ANR	3499756	Symbol	instr -> op_decode . type		3499157						
ANR	3499757	Symbol	extract_reg_v		3499157						
ANR	3499758	Symbol	instr -> pseudoInstruction		3499157						
ANR	3499759	Symbol	extract_reg_w		3499157						
ANR	3499760	Symbol	is_invalid_two_reg_instr		3499157						
ANR	3499761	Symbol	* * instr		3499157						
ANR	3499762	Function	write_reg_names_to_struct	249:0:6737:8005							
ANR	3499763	FunctionDef	write_reg_names_to_struct (RAsmLm32Instruction * instr)		3499762	0					
ANR	3499764	CompoundStatement		249:65:6802:8005	3499762	0					
ANR	3499765	SwitchStatement	switch ( instr -> op_decode . type )		3499762	0					
ANR	3499766	Condition	instr -> op_decode . type	250:9:6813:6833	3499762	0	True				
ANR	3499767	MemberAccess	instr -> op_decode . type		3499762	0					
ANR	3499768	PtrMemberAccess	instr -> op_decode		3499762	0					
ANR	3499769	Identifier	instr		3499762	0					
ANR	3499770	Identifier	op_decode		3499762	1					
ANR	3499771	Identifier	type		3499762	1					
ANR	3499772	CompoundStatement		2:32:33:33	3499762	1					
ANR	3499773	Label	case reg_imm16_signextend :	251:1:6839:6864	3499762	0	True				
ANR	3499774	Identifier	reg_imm16_signextend		3499762	0					
ANR	3499775	Label	case reg_imm16_shift2_signextend :	252:1:6867:6899	3499762	1	True				
ANR	3499776	Identifier	reg_imm16_shift2_signextend		3499762	0					
ANR	3499777	Label	case reg_imm16_zeroextend :	253:1:6902:6927	3499762	2	True				
ANR	3499778	Identifier	reg_imm16_zeroextend		3499762	0					
ANR	3499779	Label	case reg_imm5 :	254:1:6930:6943	3499762	3	True				
ANR	3499780	Identifier	reg_imm5		3499762	0					
ANR	3499781	Label	case two_regs :	255:1:6946:6959	3499762	4	True				
ANR	3499782	Identifier	two_regs		3499762	0					
ANR	3499783	IfStatement	"if ( reg_number_to_string ( instr -> dest_reg , instr -> dest_reg_str ) )"		3499762	5					
ANR	3499784	Condition	"reg_number_to_string ( instr -> dest_reg , instr -> dest_reg_str )"	256:6:6967:7025	3499762	0	True				
ANR	3499785	CallExpression	"reg_number_to_string ( instr -> dest_reg , instr -> dest_reg_str )"		3499762	0					
ANR	3499786	Callee	reg_number_to_string		3499762	0					
ANR	3499787	Identifier	reg_number_to_string		3499762	0					
ANR	3499788	ArgumentList	instr -> dest_reg		3499762	1					
ANR	3499789	Argument	instr -> dest_reg		3499762	0					
ANR	3499790	PtrMemberAccess	instr -> dest_reg		3499762	0					
ANR	3499791	Identifier	instr		3499762	0					
ANR	3499792	Identifier	dest_reg		3499762	1					
ANR	3499793	Argument	instr -> dest_reg_str		3499762	1					
ANR	3499794	PtrMemberAccess	instr -> dest_reg_str		3499762	0					
ANR	3499795	Identifier	instr		3499762	0					
ANR	3499796	Identifier	dest_reg_str		3499762	1					
ANR	3499797	CompoundStatement		8:67:225:225	3499762	1					
ANR	3499798	ReturnStatement	return - 1 ;	257:3:7033:7042	3499762	0	True				
ANR	3499799	UnaryOperationExpression	- 1		3499762	0					
ANR	3499800	UnaryOperator	-		3499762	0					
ANR	3499801	PrimaryExpression	1		3499762	1					
ANR	3499802	IfStatement	"if ( reg_number_to_string ( instr -> src0_reg , instr -> src0_reg_str ) )"		3499762	6					
ANR	3499803	Condition	"reg_number_to_string ( instr -> src0_reg , instr -> src0_reg_str )"	259:6:7054:7112	3499762	0	True				
ANR	3499804	CallExpression	"reg_number_to_string ( instr -> src0_reg , instr -> src0_reg_str )"		3499762	0					
ANR	3499805	Callee	reg_number_to_string		3499762	0					
ANR	3499806	Identifier	reg_number_to_string		3499762	0					
ANR	3499807	ArgumentList	instr -> src0_reg		3499762	1					
ANR	3499808	Argument	instr -> src0_reg		3499762	0					
ANR	3499809	PtrMemberAccess	instr -> src0_reg		3499762	0					
ANR	3499810	Identifier	instr		3499762	0					
ANR	3499811	Identifier	src0_reg		3499762	1					
ANR	3499812	Argument	instr -> src0_reg_str		3499762	1					
ANR	3499813	PtrMemberAccess	instr -> src0_reg_str		3499762	0					
ANR	3499814	Identifier	instr		3499762	0					
ANR	3499815	Identifier	src0_reg_str		3499762	1					
ANR	3499816	CompoundStatement		11:67:312:312	3499762	1					
ANR	3499817	ReturnStatement	return - 1 ;	260:3:7120:7129	3499762	0	True				
ANR	3499818	UnaryOperationExpression	- 1		3499762	0					
ANR	3499819	UnaryOperator	-		3499762	0					
ANR	3499820	PrimaryExpression	1		3499762	1					
ANR	3499821	BreakStatement	break ;	262:2:7137:7142	3499762	7	True				
ANR	3499822	Label	case one_reg :	263:1:7145:7157	3499762	8	True				
ANR	3499823	Identifier	one_reg		3499762	0					
ANR	3499824	IfStatement	"if ( reg_number_to_string ( instr -> src0_reg , instr -> src0_reg_str ) )"		3499762	9					
ANR	3499825	Condition	"reg_number_to_string ( instr -> src0_reg , instr -> src0_reg_str )"	264:6:7165:7223	3499762	0	True				
ANR	3499826	CallExpression	"reg_number_to_string ( instr -> src0_reg , instr -> src0_reg_str )"		3499762	0					
ANR	3499827	Callee	reg_number_to_string		3499762	0					
ANR	3499828	Identifier	reg_number_to_string		3499762	0					
ANR	3499829	ArgumentList	instr -> src0_reg		3499762	1					
ANR	3499830	Argument	instr -> src0_reg		3499762	0					
ANR	3499831	PtrMemberAccess	instr -> src0_reg		3499762	0					
ANR	3499832	Identifier	instr		3499762	0					
ANR	3499833	Identifier	src0_reg		3499762	1					
ANR	3499834	Argument	instr -> src0_reg_str		3499762	1					
ANR	3499835	PtrMemberAccess	instr -> src0_reg_str		3499762	0					
ANR	3499836	Identifier	instr		3499762	0					
ANR	3499837	Identifier	src0_reg_str		3499762	1					
ANR	3499838	CompoundStatement		16:67:423:423	3499762	1					
ANR	3499839	ReturnStatement	return - 1 ;	265:3:7231:7240	3499762	0	True				
ANR	3499840	UnaryOperationExpression	- 1		3499762	0					
ANR	3499841	UnaryOperator	-		3499762	0					
ANR	3499842	PrimaryExpression	1		3499762	1					
ANR	3499843	BreakStatement	break ;	267:2:7248:7253	3499762	10	True				
ANR	3499844	Label	case three_regs :	268:1:7256:7271	3499762	11	True				
ANR	3499845	Identifier	three_regs		3499762	0					
ANR	3499846	IfStatement	"if ( reg_number_to_string ( instr -> dest_reg , instr -> dest_reg_str ) )"		3499762	12					
ANR	3499847	Condition	"reg_number_to_string ( instr -> dest_reg , instr -> dest_reg_str )"	269:6:7279:7337	3499762	0	True				
ANR	3499848	CallExpression	"reg_number_to_string ( instr -> dest_reg , instr -> dest_reg_str )"		3499762	0					
ANR	3499849	Callee	reg_number_to_string		3499762	0					
ANR	3499850	Identifier	reg_number_to_string		3499762	0					
ANR	3499851	ArgumentList	instr -> dest_reg		3499762	1					
ANR	3499852	Argument	instr -> dest_reg		3499762	0					
ANR	3499853	PtrMemberAccess	instr -> dest_reg		3499762	0					
ANR	3499854	Identifier	instr		3499762	0					
ANR	3499855	Identifier	dest_reg		3499762	1					
ANR	3499856	Argument	instr -> dest_reg_str		3499762	1					
ANR	3499857	PtrMemberAccess	instr -> dest_reg_str		3499762	0					
ANR	3499858	Identifier	instr		3499762	0					
ANR	3499859	Identifier	dest_reg_str		3499762	1					
ANR	3499860	CompoundStatement		21:67:537:537	3499762	1					
ANR	3499861	ReturnStatement	return - 1 ;	270:3:7345:7354	3499762	0	True				
ANR	3499862	UnaryOperationExpression	- 1		3499762	0					
ANR	3499863	UnaryOperator	-		3499762	0					
ANR	3499864	PrimaryExpression	1		3499762	1					
ANR	3499865	IfStatement	"if ( reg_number_to_string ( instr -> src0_reg , instr -> src0_reg_str ) )"		3499762	13					
ANR	3499866	Condition	"reg_number_to_string ( instr -> src0_reg , instr -> src0_reg_str )"	272:6:7366:7424	3499762	0	True				
ANR	3499867	CallExpression	"reg_number_to_string ( instr -> src0_reg , instr -> src0_reg_str )"		3499762	0					
ANR	3499868	Callee	reg_number_to_string		3499762	0					
ANR	3499869	Identifier	reg_number_to_string		3499762	0					
ANR	3499870	ArgumentList	instr -> src0_reg		3499762	1					
ANR	3499871	Argument	instr -> src0_reg		3499762	0					
ANR	3499872	PtrMemberAccess	instr -> src0_reg		3499762	0					
ANR	3499873	Identifier	instr		3499762	0					
ANR	3499874	Identifier	src0_reg		3499762	1					
ANR	3499875	Argument	instr -> src0_reg_str		3499762	1					
ANR	3499876	PtrMemberAccess	instr -> src0_reg_str		3499762	0					
ANR	3499877	Identifier	instr		3499762	0					
ANR	3499878	Identifier	src0_reg_str		3499762	1					
ANR	3499879	CompoundStatement		24:67:624:624	3499762	1					
ANR	3499880	ReturnStatement	return - 1 ;	273:3:7432:7441	3499762	0	True				
ANR	3499881	UnaryOperationExpression	- 1		3499762	0					
ANR	3499882	UnaryOperator	-		3499762	0					
ANR	3499883	PrimaryExpression	1		3499762	1					
ANR	3499884	IfStatement	"if ( reg_number_to_string ( instr -> src1_reg , instr -> src1_reg_str ) )"		3499762	14					
ANR	3499885	Condition	"reg_number_to_string ( instr -> src1_reg , instr -> src1_reg_str )"	275:6:7453:7511	3499762	0	True				
ANR	3499886	CallExpression	"reg_number_to_string ( instr -> src1_reg , instr -> src1_reg_str )"		3499762	0					
ANR	3499887	Callee	reg_number_to_string		3499762	0					
ANR	3499888	Identifier	reg_number_to_string		3499762	0					
ANR	3499889	ArgumentList	instr -> src1_reg		3499762	1					
ANR	3499890	Argument	instr -> src1_reg		3499762	0					
ANR	3499891	PtrMemberAccess	instr -> src1_reg		3499762	0					
ANR	3499892	Identifier	instr		3499762	0					
ANR	3499893	Identifier	src1_reg		3499762	1					
ANR	3499894	Argument	instr -> src1_reg_str		3499762	1					
ANR	3499895	PtrMemberAccess	instr -> src1_reg_str		3499762	0					
ANR	3499896	Identifier	instr		3499762	0					
ANR	3499897	Identifier	src1_reg_str		3499762	1					
ANR	3499898	CompoundStatement		27:67:711:711	3499762	1					
ANR	3499899	ReturnStatement	return - 1 ;	276:3:7519:7528	3499762	0	True				
ANR	3499900	UnaryOperationExpression	- 1		3499762	0					
ANR	3499901	UnaryOperator	-		3499762	0					
ANR	3499902	PrimaryExpression	1		3499762	1					
ANR	3499903	BreakStatement	break ;	278:2:7536:7541	3499762	15	True				
ANR	3499904	Label	case reg_csr :	279:1:7544:7556	3499762	16	True				
ANR	3499905	Identifier	reg_csr		3499762	0					
ANR	3499906	IfStatement	"if ( reg_number_to_string ( instr -> src0_reg , instr -> src0_reg_str ) )"		3499762	17					
ANR	3499907	Condition	"reg_number_to_string ( instr -> src0_reg , instr -> src0_reg_str )"	280:6:7564:7622	3499762	0	True				
ANR	3499908	CallExpression	"reg_number_to_string ( instr -> src0_reg , instr -> src0_reg_str )"		3499762	0					
ANR	3499909	Callee	reg_number_to_string		3499762	0					
ANR	3499910	Identifier	reg_number_to_string		3499762	0					
ANR	3499911	ArgumentList	instr -> src0_reg		3499762	1					
ANR	3499912	Argument	instr -> src0_reg		3499762	0					
ANR	3499913	PtrMemberAccess	instr -> src0_reg		3499762	0					
ANR	3499914	Identifier	instr		3499762	0					
ANR	3499915	Identifier	src0_reg		3499762	1					
ANR	3499916	Argument	instr -> src0_reg_str		3499762	1					
ANR	3499917	PtrMemberAccess	instr -> src0_reg_str		3499762	0					
ANR	3499918	Identifier	instr		3499762	0					
ANR	3499919	Identifier	src0_reg_str		3499762	1					
ANR	3499920	CompoundStatement		32:67:822:822	3499762	1					
ANR	3499921	ReturnStatement	return - 1 ;	281:3:7630:7639	3499762	0	True				
ANR	3499922	UnaryOperationExpression	- 1		3499762	0					
ANR	3499923	UnaryOperator	-		3499762	0					
ANR	3499924	PrimaryExpression	1		3499762	1					
ANR	3499925	IfStatement	"if ( csr_number_to_string ( instr -> csr , instr -> csr_reg_str ) )"		3499762	18					
ANR	3499926	Condition	"csr_number_to_string ( instr -> csr , instr -> csr_reg_str )"	283:6:7651:7703	3499762	0	True				
ANR	3499927	CallExpression	"csr_number_to_string ( instr -> csr , instr -> csr_reg_str )"		3499762	0					
ANR	3499928	Callee	csr_number_to_string		3499762	0					
ANR	3499929	Identifier	csr_number_to_string		3499762	0					
ANR	3499930	ArgumentList	instr -> csr		3499762	1					
ANR	3499931	Argument	instr -> csr		3499762	0					
ANR	3499932	PtrMemberAccess	instr -> csr		3499762	0					
ANR	3499933	Identifier	instr		3499762	0					
ANR	3499934	Identifier	csr		3499762	1					
ANR	3499935	Argument	instr -> csr_reg_str		3499762	1					
ANR	3499936	PtrMemberAccess	instr -> csr_reg_str		3499762	0					
ANR	3499937	Identifier	instr		3499762	0					
ANR	3499938	Identifier	csr_reg_str		3499762	1					
ANR	3499939	CompoundStatement		35:61:903:903	3499762	1					
ANR	3499940	ReturnStatement	return - 1 ;	284:3:7711:7720	3499762	0	True				
ANR	3499941	UnaryOperationExpression	- 1		3499762	0					
ANR	3499942	UnaryOperator	-		3499762	0					
ANR	3499943	PrimaryExpression	1		3499762	1					
ANR	3499944	BreakStatement	break ;	286:2:7728:7733	3499762	19	True				
ANR	3499945	Label	case csr_reg :	287:1:7736:7748	3499762	20	True				
ANR	3499946	Identifier	csr_reg		3499762	0					
ANR	3499947	IfStatement	"if ( reg_number_to_string ( instr -> dest_reg , instr -> dest_reg_str ) )"		3499762	21					
ANR	3499948	Condition	"reg_number_to_string ( instr -> dest_reg , instr -> dest_reg_str )"	288:6:7756:7814	3499762	0	True				
ANR	3499949	CallExpression	"reg_number_to_string ( instr -> dest_reg , instr -> dest_reg_str )"		3499762	0					
ANR	3499950	Callee	reg_number_to_string		3499762	0					
ANR	3499951	Identifier	reg_number_to_string		3499762	0					
ANR	3499952	ArgumentList	instr -> dest_reg		3499762	1					
ANR	3499953	Argument	instr -> dest_reg		3499762	0					
ANR	3499954	PtrMemberAccess	instr -> dest_reg		3499762	0					
ANR	3499955	Identifier	instr		3499762	0					
ANR	3499956	Identifier	dest_reg		3499762	1					
ANR	3499957	Argument	instr -> dest_reg_str		3499762	1					
ANR	3499958	PtrMemberAccess	instr -> dest_reg_str		3499762	0					
ANR	3499959	Identifier	instr		3499762	0					
ANR	3499960	Identifier	dest_reg_str		3499762	1					
ANR	3499961	CompoundStatement		40:67:1014:1014	3499762	1					
ANR	3499962	ReturnStatement	return - 1 ;	289:3:7822:7831	3499762	0	True				
ANR	3499963	UnaryOperationExpression	- 1		3499762	0					
ANR	3499964	UnaryOperator	-		3499762	0					
ANR	3499965	PrimaryExpression	1		3499762	1					
ANR	3499966	IfStatement	"if ( csr_number_to_string ( instr -> csr , instr -> csr_reg_str ) )"		3499762	22					
ANR	3499967	Condition	"csr_number_to_string ( instr -> csr , instr -> csr_reg_str )"	291:6:7843:7895	3499762	0	True				
ANR	3499968	CallExpression	"csr_number_to_string ( instr -> csr , instr -> csr_reg_str )"		3499762	0					
ANR	3499969	Callee	csr_number_to_string		3499762	0					
ANR	3499970	Identifier	csr_number_to_string		3499762	0					
ANR	3499971	ArgumentList	instr -> csr		3499762	1					
ANR	3499972	Argument	instr -> csr		3499762	0					
ANR	3499973	PtrMemberAccess	instr -> csr		3499762	0					
ANR	3499974	Identifier	instr		3499762	0					
ANR	3499975	Identifier	csr		3499762	1					
ANR	3499976	Argument	instr -> csr_reg_str		3499762	1					
ANR	3499977	PtrMemberAccess	instr -> csr_reg_str		3499762	0					
ANR	3499978	Identifier	instr		3499762	0					
ANR	3499979	Identifier	csr_reg_str		3499762	1					
ANR	3499980	CompoundStatement		43:61:1095:1095	3499762	1					
ANR	3499981	ReturnStatement	return - 1 ;	292:3:7903:7912	3499762	0	True				
ANR	3499982	UnaryOperationExpression	- 1		3499762	0					
ANR	3499983	UnaryOperator	-		3499762	0					
ANR	3499984	PrimaryExpression	1		3499762	1					
ANR	3499985	BreakStatement	break ;	294:2:7920:7925	3499762	23	True				
ANR	3499986	Label	case raise_instr :	295:1:7928:7944	3499762	24	True				
ANR	3499987	Identifier	raise_instr		3499762	0					
ANR	3499988	Label	case imm26 :	296:1:7947:7957	3499762	25	True				
ANR	3499989	Identifier	imm26		3499762	0					
ANR	3499990	BreakStatement	break ;	297:2:7961:7966	3499762	26	True				
ANR	3499991	Label	default :	298:1:7969:7976	3499762	27	True				
ANR	3499992	Identifier	default		3499762	0					
ANR	3499993	ReturnStatement	return - 1 ;	299:2:7980:7989	3499762	28	True				
ANR	3499994	UnaryOperationExpression	- 1		3499762	0					
ANR	3499995	UnaryOperator	-		3499762	0					
ANR	3499996	PrimaryExpression	1		3499762	1					
ANR	3499997	ReturnStatement	return 0 ;	301:1:7995:8003	3499762	1	True				
ANR	3499998	PrimaryExpression	0		3499762	0					
ANR	3499999	ReturnType	static int		3499762	1					
ANR	3500000	Identifier	write_reg_names_to_struct		3499762	2					
ANR	3500001	ParameterList	RAsmLm32Instruction * instr		3499762	3					
ANR	3500002	Parameter	RAsmLm32Instruction * instr	249:37:6774:6799	3499762	0	True				
ANR	3500003	ParameterType	RAsmLm32Instruction *		3499762	0					
ANR	3500004	Identifier	instr		3499762	1					
ANR	3500005	CFGEntryNode	ENTRY		3499762		True				
ANR	3500006	CFGExitNode	EXIT		3499762		True				
ANR	3500007	Symbol	reg_number_to_string		3499762						
ANR	3500008	Symbol	instr -> src1_reg		3499762						
ANR	3500009	Symbol	instr -> op_decode		3499762						
ANR	3500010	Symbol	* instr		3499762						
ANR	3500011	Symbol	instr -> dest_reg		3499762						
ANR	3500012	Symbol	instr -> src0_reg		3499762						
ANR	3500013	Symbol	instr -> src1_reg_str		3499762						
ANR	3500014	Symbol	instr -> src0_reg_str		3499762						
ANR	3500015	Symbol	instr -> csr		3499762						
ANR	3500016	Symbol	instr		3499762						
ANR	3500017	Symbol	instr -> dest_reg_str		3499762						
ANR	3500018	Symbol	instr -> op_decode . type		3499762						
ANR	3500019	Symbol	csr_number_to_string		3499762						
ANR	3500020	Symbol	instr -> csr_reg_str		3499762						
ANR	3500021	Function	print_pseudo_instruction	304:0:8008:9135							
ANR	3500022	FunctionDef	"print_pseudo_instruction (RAsmLm32Instruction * instr , char * str)"		3500021	0					
ANR	3500023	CompoundStatement		304:75:8083:9135	3500021	0					
ANR	3500024	IfStatement	if ( ! instr -> pseudoInstruction )		3500021	0					
ANR	3500025	Condition	! instr -> pseudoInstruction	305:5:8090:8114	3500021	0	True				
ANR	3500026	UnaryOperationExpression	! instr -> pseudoInstruction		3500021	0					
ANR	3500027	UnaryOperator	!		3500021	0					
ANR	3500028	PtrMemberAccess	instr -> pseudoInstruction		3500021	1					
ANR	3500029	Identifier	instr		3500021	0					
ANR	3500030	Identifier	pseudoInstruction		3500021	1					
ANR	3500031	CompoundStatement		2:32:33:33	3500021	1					
ANR	3500032	ReturnStatement	return - 1 ;	306:2:8121:8130	3500021	0	True				
ANR	3500033	UnaryOperationExpression	- 1		3500021	0					
ANR	3500034	UnaryOperator	-		3500021	0					
ANR	3500035	PrimaryExpression	1		3500021	1					
ANR	3500036	SwitchStatement	switch ( instr -> op )		3500021	1					
ANR	3500037	Condition	instr -> op	308:9:8144:8152	3500021	0	True				
ANR	3500038	PtrMemberAccess	instr -> op		3500021	0					
ANR	3500039	Identifier	instr		3500021	0					
ANR	3500040	Identifier	op		3500021	1					
ANR	3500041	CompoundStatement		5:20:71:71	3500021	1					
ANR	3500042	Label	case lm32_op_b :	310:1:8173:8187	3500021	0	True				
ANR	3500043	Identifier	lm32_op_b		3500021	0					
ANR	3500044	ExpressionStatement	"strcpy ( str , ""ret"" )"	311:2:8191:8210	3500021	1	True				
ANR	3500045	CallExpression	"strcpy ( str , ""ret"" )"		3500021	0					
ANR	3500046	Callee	strcpy		3500021	0					
ANR	3500047	Identifier	strcpy		3500021	0					
ANR	3500048	ArgumentList	str		3500021	1					
ANR	3500049	Argument	str		3500021	0					
ANR	3500050	Identifier	str		3500021	0					
ANR	3500051	Argument	"""ret"""		3500021	1					
ANR	3500052	PrimaryExpression	"""ret"""		3500021	0					
ANR	3500053	BreakStatement	break ;	312:2:8214:8219	3500021	2	True				
ANR	3500054	Label	case lm32_op_or :	314:1:8252:8267	3500021	3	True				
ANR	3500055	Identifier	lm32_op_or		3500021	0					
ANR	3500056	ExpressionStatement	"sprintf ( str , ""mv %s, %s"" , instr -> dest_reg_str , instr -> src0_reg_str )"	315:2:8271:8339	3500021	4	True				
ANR	3500057	CallExpression	"sprintf ( str , ""mv %s, %s"" , instr -> dest_reg_str , instr -> src0_reg_str )"		3500021	0					
ANR	3500058	Callee	sprintf		3500021	0					
ANR	3500059	Identifier	sprintf		3500021	0					
ANR	3500060	ArgumentList	str		3500021	1					
ANR	3500061	Argument	str		3500021	0					
ANR	3500062	Identifier	str		3500021	0					
ANR	3500063	Argument	"""mv %s, %s"""		3500021	1					
ANR	3500064	PrimaryExpression	"""mv %s, %s"""		3500021	0					
ANR	3500065	Argument	instr -> dest_reg_str		3500021	2					
ANR	3500066	PtrMemberAccess	instr -> dest_reg_str		3500021	0					
ANR	3500067	Identifier	instr		3500021	0					
ANR	3500068	Identifier	dest_reg_str		3500021	1					
ANR	3500069	Argument	instr -> src0_reg_str		3500021	3					
ANR	3500070	PtrMemberAccess	instr -> src0_reg_str		3500021	0					
ANR	3500071	Identifier	instr		3500021	0					
ANR	3500072	Identifier	src0_reg_str		3500021	1					
ANR	3500073	BreakStatement	break ;	316:2:8343:8348	3500021	5	True				
ANR	3500074	Label	case lm32_op_orhi :	318:1:8391:8408	3500021	6	True				
ANR	3500075	Identifier	lm32_op_orhi		3500021	0					
ANR	3500076	ExpressionStatement	"sprintf ( str , ""mvhi %s, 0x%x"" , instr -> dest_reg_str , instr -> immediate )"	319:2:8412:8481	3500021	7	True				
ANR	3500077	CallExpression	"sprintf ( str , ""mvhi %s, 0x%x"" , instr -> dest_reg_str , instr -> immediate )"		3500021	0					
ANR	3500078	Callee	sprintf		3500021	0					
ANR	3500079	Identifier	sprintf		3500021	0					
ANR	3500080	ArgumentList	str		3500021	1					
ANR	3500081	Argument	str		3500021	0					
ANR	3500082	Identifier	str		3500021	0					
ANR	3500083	Argument	"""mvhi %s, 0x%x"""		3500021	1					
ANR	3500084	PrimaryExpression	"""mvhi %s, 0x%x"""		3500021	0					
ANR	3500085	Argument	instr -> dest_reg_str		3500021	2					
ANR	3500086	PtrMemberAccess	instr -> dest_reg_str		3500021	0					
ANR	3500087	Identifier	instr		3500021	0					
ANR	3500088	Identifier	dest_reg_str		3500021	1					
ANR	3500089	Argument	instr -> immediate		3500021	3					
ANR	3500090	PtrMemberAccess	instr -> immediate		3500021	0					
ANR	3500091	Identifier	instr		3500021	0					
ANR	3500092	Identifier	immediate		3500021	1					
ANR	3500093	BreakStatement	break ;	320:2:8485:8490	3500021	8	True				
ANR	3500094	Label	case lm32_op_xnor :	322:1:8526:8543	3500021	9	True				
ANR	3500095	Identifier	lm32_op_xnor		3500021	0					
ANR	3500096	ExpressionStatement	"sprintf ( str , ""not %s, %s"" , instr -> dest_reg_str , instr -> src0_reg_str )"	323:2:8547:8616	3500021	10	True				
ANR	3500097	CallExpression	"sprintf ( str , ""not %s, %s"" , instr -> dest_reg_str , instr -> src0_reg_str )"		3500021	0					
ANR	3500098	Callee	sprintf		3500021	0					
ANR	3500099	Identifier	sprintf		3500021	0					
ANR	3500100	ArgumentList	str		3500021	1					
ANR	3500101	Argument	str		3500021	0					
ANR	3500102	Identifier	str		3500021	0					
ANR	3500103	Argument	"""not %s, %s"""		3500021	1					
ANR	3500104	PrimaryExpression	"""not %s, %s"""		3500021	0					
ANR	3500105	Argument	instr -> dest_reg_str		3500021	2					
ANR	3500106	PtrMemberAccess	instr -> dest_reg_str		3500021	0					
ANR	3500107	Identifier	instr		3500021	0					
ANR	3500108	Identifier	dest_reg_str		3500021	1					
ANR	3500109	Argument	instr -> src0_reg_str		3500021	3					
ANR	3500110	PtrMemberAccess	instr -> src0_reg_str		3500021	0					
ANR	3500111	Identifier	instr		3500021	0					
ANR	3500112	Identifier	src0_reg_str		3500021	1					
ANR	3500113	BreakStatement	break ;	324:2:8620:8625	3500021	11	True				
ANR	3500114	Label	case lm32_op_addi :	327:1:8692:8709	3500021	12	True				
ANR	3500115	Identifier	lm32_op_addi		3500021	0					
ANR	3500116	IfStatement	if ( is_pseudo_instr_nop ( instr ) )		3500021	13					
ANR	3500117	Condition	is_pseudo_instr_nop ( instr )	328:6:8717:8743	3500021	0	True				
ANR	3500118	CallExpression	is_pseudo_instr_nop ( instr )		3500021	0					
ANR	3500119	Callee	is_pseudo_instr_nop		3500021	0					
ANR	3500120	Identifier	is_pseudo_instr_nop		3500021	0					
ANR	3500121	ArgumentList	instr		3500021	1					
ANR	3500122	Argument	instr		3500021	0					
ANR	3500123	Identifier	instr		3500021	0					
ANR	3500124	CompoundStatement		25:35:662:662	3500021	1					
ANR	3500125	ExpressionStatement	"strcpy ( str , ""nop"" )"	329:3:8757:8776	3500021	0	True				
ANR	3500126	CallExpression	"strcpy ( str , ""nop"" )"		3500021	0					
ANR	3500127	Callee	strcpy		3500021	0					
ANR	3500128	Identifier	strcpy		3500021	0					
ANR	3500129	ArgumentList	str		3500021	1					
ANR	3500130	Argument	str		3500021	0					
ANR	3500131	Identifier	str		3500021	0					
ANR	3500132	Argument	"""nop"""		3500021	1					
ANR	3500133	PrimaryExpression	"""nop"""		3500021	0					
ANR	3500134	ElseStatement	else		3500021	0					
ANR	3500135	CompoundStatement		27:9:703:703	3500021	0					
ANR	3500136	ExpressionStatement	"sprintf ( str , ""mvi %s, 0x%x"" , instr -> dest_reg_str , instr -> immediate )"	331:3:8798:8866	3500021	0	True				
ANR	3500137	CallExpression	"sprintf ( str , ""mvi %s, 0x%x"" , instr -> dest_reg_str , instr -> immediate )"		3500021	0					
ANR	3500138	Callee	sprintf		3500021	0					
ANR	3500139	Identifier	sprintf		3500021	0					
ANR	3500140	ArgumentList	str		3500021	1					
ANR	3500141	Argument	str		3500021	0					
ANR	3500142	Identifier	str		3500021	0					
ANR	3500143	Argument	"""mvi %s, 0x%x"""		3500021	1					
ANR	3500144	PrimaryExpression	"""mvi %s, 0x%x"""		3500021	0					
ANR	3500145	Argument	instr -> dest_reg_str		3500021	2					
ANR	3500146	PtrMemberAccess	instr -> dest_reg_str		3500021	0					
ANR	3500147	Identifier	instr		3500021	0					
ANR	3500148	Identifier	dest_reg_str		3500021	1					
ANR	3500149	Argument	instr -> immediate		3500021	3					
ANR	3500150	PtrMemberAccess	instr -> immediate		3500021	0					
ANR	3500151	Identifier	instr		3500021	0					
ANR	3500152	Identifier	immediate		3500021	1					
ANR	3500153	BreakStatement	break ;	333:2:8874:8879	3500021	14	True				
ANR	3500154	Label	case lm32_op_raise :	335:1:8898:8916	3500021	15	True				
ANR	3500155	Identifier	lm32_op_raise		3500021	0					
ANR	3500156	SwitchStatement	switch ( instr -> immediate )		3500021	16					
ANR	3500157	Condition	instr -> immediate	336:10:8928:8943	3500021	0	True				
ANR	3500158	PtrMemberAccess	instr -> immediate		3500021	0					
ANR	3500159	Identifier	instr		3500021	0					
ANR	3500160	Identifier	immediate		3500021	1					
ANR	3500161	CompoundStatement		33:28:862:862	3500021	1					
ANR	3500162	Label	case 0x2 :	337:2:8950:8958	3500021	0	True				
ANR	3500163	ExpressionStatement	"strcpy ( str , ""break"" )"	338:3:8971:8992	3500021	1	True				
ANR	3500164	CallExpression	"strcpy ( str , ""break"" )"		3500021	0					
ANR	3500165	Callee	strcpy		3500021	0					
ANR	3500166	Identifier	strcpy		3500021	0					
ANR	3500167	ArgumentList	str		3500021	1					
ANR	3500168	Argument	str		3500021	0					
ANR	3500169	Identifier	str		3500021	0					
ANR	3500170	Argument	"""break"""		3500021	1					
ANR	3500171	PrimaryExpression	"""break"""		3500021	0					
ANR	3500172	BreakStatement	break ;	339:3:8997:9002	3500021	2	True				
ANR	3500173	Label	case 0x7 :	340:2:9006:9014	3500021	3	True				
ANR	3500174	ExpressionStatement	"strcpy ( str , ""scall"" )"	341:3:9027:9048	3500021	4	True				
ANR	3500175	CallExpression	"strcpy ( str , ""scall"" )"		3500021	0					
ANR	3500176	Callee	strcpy		3500021	0					
ANR	3500177	Identifier	strcpy		3500021	0					
ANR	3500178	ArgumentList	str		3500021	1					
ANR	3500179	Argument	str		3500021	0					
ANR	3500180	Identifier	str		3500021	0					
ANR	3500181	Argument	"""scall"""		3500021	1					
ANR	3500182	PrimaryExpression	"""scall"""		3500021	0					
ANR	3500183	BreakStatement	break ;	342:3:9053:9058	3500021	5	True				
ANR	3500184	Label	default :	343:2:9062:9069	3500021	6	True				
ANR	3500185	Identifier	default		3500021	0					
ANR	3500186	ReturnStatement	return - 1 ;	344:3:9074:9083	3500021	7	True				
ANR	3500187	UnaryOperationExpression	- 1		3500021	0					
ANR	3500188	UnaryOperator	-		3500021	0					
ANR	3500189	PrimaryExpression	1		3500021	1					
ANR	3500190	BreakStatement	break ;	346:2:9091:9096	3500021	17	True				
ANR	3500191	Label	default :	347:1:9099:9106	3500021	18	True				
ANR	3500192	Identifier	default		3500021	0					
ANR	3500193	ReturnStatement	return - 1 ;	348:2:9110:9119	3500021	19	True				
ANR	3500194	UnaryOperationExpression	- 1		3500021	0					
ANR	3500195	UnaryOperator	-		3500021	0					
ANR	3500196	PrimaryExpression	1		3500021	1					
ANR	3500197	ReturnStatement	return 0 ;	350:1:9125:9133	3500021	2	True				
ANR	3500198	PrimaryExpression	0		3500021	0					
ANR	3500199	ReturnType	static int		3500021	1					
ANR	3500200	Identifier	print_pseudo_instruction		3500021	2					
ANR	3500201	ParameterList	"RAsmLm32Instruction * instr , char * str"		3500021	3					
ANR	3500202	Parameter	RAsmLm32Instruction * instr	304:36:8044:8069	3500021	0	True				
ANR	3500203	ParameterType	RAsmLm32Instruction *		3500021	0					
ANR	3500204	Identifier	instr		3500021	1					
ANR	3500205	Parameter	char * str	304:64:8072:8080	3500021	1	True				
ANR	3500206	ParameterType	char *		3500021	0					
ANR	3500207	Identifier	str		3500021	1					
ANR	3500208	CFGEntryNode	ENTRY		3500021		True				
ANR	3500209	CFGExitNode	EXIT		3500021		True				
ANR	3500210	Symbol	str		3500021						
ANR	3500211	Symbol	instr -> src0_reg_str		3500021						
ANR	3500212	Symbol	instr -> op		3500021						
ANR	3500213	Symbol	instr		3500021						
ANR	3500214	Symbol	instr -> dest_reg_str		3500021						
ANR	3500215	Symbol	instr -> pseudoInstruction		3500021						
ANR	3500216	Symbol	* instr		3500021						
ANR	3500217	Symbol	instr -> immediate		3500021						
ANR	3500218	Symbol	is_pseudo_instr_nop		3500021						
ANR	3500219	Function	r_asm_lm32_stringify	354:0:9139:11051							
ANR	3500220	FunctionDef	"r_asm_lm32_stringify (RAsmLm32Instruction * instr , char * str)"		3500219	0					
ANR	3500221	CompoundStatement		354:71:9210:11051	3500219	0					
ANR	3500222	IfStatement	if ( write_reg_names_to_struct ( instr ) )		3500219	0					
ANR	3500223	Condition	write_reg_names_to_struct ( instr )	355:5:9217:9249	3500219	0	True				
ANR	3500224	CallExpression	write_reg_names_to_struct ( instr )		3500219	0					
ANR	3500225	Callee	write_reg_names_to_struct		3500219	0					
ANR	3500226	Identifier	write_reg_names_to_struct		3500219	0					
ANR	3500227	ArgumentList	instr		3500219	1					
ANR	3500228	Argument	instr		3500219	0					
ANR	3500229	Identifier	instr		3500219	0					
ANR	3500230	CompoundStatement		2:40:41:41	3500219	1					
ANR	3500231	ReturnStatement	return - 1 ;	356:2:9256:9265	3500219	0	True				
ANR	3500232	UnaryOperationExpression	- 1		3500219	0					
ANR	3500233	UnaryOperator	-		3500219	0					
ANR	3500234	PrimaryExpression	1		3500219	1					
ANR	3500235	IfStatement	if ( instr -> pseudoInstruction )		3500219	1					
ANR	3500236	Condition	instr -> pseudoInstruction	360:5:9326:9349	3500219	0	True				
ANR	3500237	PtrMemberAccess	instr -> pseudoInstruction		3500219	0					
ANR	3500238	Identifier	instr		3500219	0					
ANR	3500239	Identifier	pseudoInstruction		3500219	1					
ANR	3500240	CompoundStatement		7:31:141:141	3500219	1					
ANR	3500241	ReturnStatement	"return print_pseudo_instruction ( instr , str ) ;"	362:2:9444:9488	3500219	0	True				
ANR	3500242	CallExpression	"print_pseudo_instruction ( instr , str )"		3500219	0					
ANR	3500243	Callee	print_pseudo_instruction		3500219	0					
ANR	3500244	Identifier	print_pseudo_instruction		3500219	0					
ANR	3500245	ArgumentList	instr		3500219	1					
ANR	3500246	Argument	instr		3500219	0					
ANR	3500247	Identifier	instr		3500219	0					
ANR	3500248	Argument	str		3500219	1					
ANR	3500249	Identifier	str		3500219	0					
ANR	3500250	ExpressionStatement	"strcpy ( str , instr -> op_decode . name )"	366:1:9516:9551	3500219	2	True				
ANR	3500251	CallExpression	"strcpy ( str , instr -> op_decode . name )"		3500219	0					
ANR	3500252	Callee	strcpy		3500219	0					
ANR	3500253	Identifier	strcpy		3500219	0					
ANR	3500254	ArgumentList	str		3500219	1					
ANR	3500255	Argument	str		3500219	0					
ANR	3500256	Identifier	str		3500219	0					
ANR	3500257	Argument	instr -> op_decode . name		3500219	1					
ANR	3500258	MemberAccess	instr -> op_decode . name		3500219	0					
ANR	3500259	PtrMemberAccess	instr -> op_decode		3500219	0					
ANR	3500260	Identifier	instr		3500219	0					
ANR	3500261	Identifier	op_decode		3500219	1					
ANR	3500262	Identifier	name		3500219	1					
ANR	3500263	SwitchStatement	switch ( instr -> op_decode . type )		3500219	3					
ANR	3500264	Condition	instr -> op_decode . type	369:9:9611:9631	3500219	0	True				
ANR	3500265	MemberAccess	instr -> op_decode . type		3500219	0					
ANR	3500266	PtrMemberAccess	instr -> op_decode		3500219	0					
ANR	3500267	Identifier	instr		3500219	0					
ANR	3500268	Identifier	op_decode		3500219	1					
ANR	3500269	Identifier	type		3500219	1					
ANR	3500270	CompoundStatement		16:32:423:423	3500219	1					
ANR	3500271	Label	case reg_imm16_signextend :	370:1:9637:9662	3500219	0	True				
ANR	3500272	Identifier	reg_imm16_signextend		3500219	0					
ANR	3500273	ExpressionStatement	"sprintf ( str , ""%s %s, %s, 0x%x"" , instr -> op_decode . name , instr -> dest_reg_str , instr -> src0_reg_str , instr -> immediate )"	371:2:9666:9785	3500219	1	True				
ANR	3500274	CallExpression	"sprintf ( str , ""%s %s, %s, 0x%x"" , instr -> op_decode . name , instr -> dest_reg_str , instr -> src0_reg_str , instr -> immediate )"		3500219	0					
ANR	3500275	Callee	sprintf		3500219	0					
ANR	3500276	Identifier	sprintf		3500219	0					
ANR	3500277	ArgumentList	str		3500219	1					
ANR	3500278	Argument	str		3500219	0					
ANR	3500279	Identifier	str		3500219	0					
ANR	3500280	Argument	"""%s %s, %s, 0x%x"""		3500219	1					
ANR	3500281	PrimaryExpression	"""%s %s, %s, 0x%x"""		3500219	0					
ANR	3500282	Argument	instr -> op_decode . name		3500219	2					
ANR	3500283	MemberAccess	instr -> op_decode . name		3500219	0					
ANR	3500284	PtrMemberAccess	instr -> op_decode		3500219	0					
ANR	3500285	Identifier	instr		3500219	0					
ANR	3500286	Identifier	op_decode		3500219	1					
ANR	3500287	Identifier	name		3500219	1					
ANR	3500288	Argument	instr -> dest_reg_str		3500219	3					
ANR	3500289	PtrMemberAccess	instr -> dest_reg_str		3500219	0					
ANR	3500290	Identifier	instr		3500219	0					
ANR	3500291	Identifier	dest_reg_str		3500219	1					
ANR	3500292	Argument	instr -> src0_reg_str		3500219	4					
ANR	3500293	PtrMemberAccess	instr -> src0_reg_str		3500219	0					
ANR	3500294	Identifier	instr		3500219	0					
ANR	3500295	Identifier	src0_reg_str		3500219	1					
ANR	3500296	Argument	instr -> immediate		3500219	5					
ANR	3500297	PtrMemberAccess	instr -> immediate		3500219	0					
ANR	3500298	Identifier	instr		3500219	0					
ANR	3500299	Identifier	immediate		3500219	1					
ANR	3500300	BreakStatement	break ;	373:2:9789:9794	3500219	2	True				
ANR	3500301	Label	case reg_imm16_zeroextend :	374:1:9797:9822	3500219	3	True				
ANR	3500302	Identifier	reg_imm16_zeroextend		3500219	0					
ANR	3500303	Label	case reg_imm5 :	375:1:9825:9838	3500219	4	True				
ANR	3500304	Identifier	reg_imm5		3500219	0					
ANR	3500305	ExpressionStatement	"sprintf ( str , ""%s %s, %s, 0x%x"" , instr -> op_decode . name , instr -> dest_reg_str , instr -> src0_reg_str , instr -> immediate )"	376:2:9842:9961	3500219	5	True				
ANR	3500306	CallExpression	"sprintf ( str , ""%s %s, %s, 0x%x"" , instr -> op_decode . name , instr -> dest_reg_str , instr -> src0_reg_str , instr -> immediate )"		3500219	0					
ANR	3500307	Callee	sprintf		3500219	0					
ANR	3500308	Identifier	sprintf		3500219	0					
ANR	3500309	ArgumentList	str		3500219	1					
ANR	3500310	Argument	str		3500219	0					
ANR	3500311	Identifier	str		3500219	0					
ANR	3500312	Argument	"""%s %s, %s, 0x%x"""		3500219	1					
ANR	3500313	PrimaryExpression	"""%s %s, %s, 0x%x"""		3500219	0					
ANR	3500314	Argument	instr -> op_decode . name		3500219	2					
ANR	3500315	MemberAccess	instr -> op_decode . name		3500219	0					
ANR	3500316	PtrMemberAccess	instr -> op_decode		3500219	0					
ANR	3500317	Identifier	instr		3500219	0					
ANR	3500318	Identifier	op_decode		3500219	1					
ANR	3500319	Identifier	name		3500219	1					
ANR	3500320	Argument	instr -> dest_reg_str		3500219	3					
ANR	3500321	PtrMemberAccess	instr -> dest_reg_str		3500219	0					
ANR	3500322	Identifier	instr		3500219	0					
ANR	3500323	Identifier	dest_reg_str		3500219	1					
ANR	3500324	Argument	instr -> src0_reg_str		3500219	4					
ANR	3500325	PtrMemberAccess	instr -> src0_reg_str		3500219	0					
ANR	3500326	Identifier	instr		3500219	0					
ANR	3500327	Identifier	src0_reg_str		3500219	1					
ANR	3500328	Argument	instr -> immediate		3500219	5					
ANR	3500329	PtrMemberAccess	instr -> immediate		3500219	0					
ANR	3500330	Identifier	instr		3500219	0					
ANR	3500331	Identifier	immediate		3500219	1					
ANR	3500332	BreakStatement	break ;	378:2:9965:9970	3500219	6	True				
ANR	3500333	Label	case reg_imm16_shift2_signextend :	379:1:9973:10005	3500219	7	True				
ANR	3500334	Identifier	reg_imm16_shift2_signextend		3500219	0					
ANR	3500335	ExpressionStatement	"sprintf ( str , ""%s %s, %s, 0x%x"" , instr -> op_decode . name , instr -> dest_reg_str , instr -> src0_reg_str , instr -> immediate + instr -> addr )"	381:2:10055:10188	3500219	8	True				
ANR	3500336	CallExpression	"sprintf ( str , ""%s %s, %s, 0x%x"" , instr -> op_decode . name , instr -> dest_reg_str , instr -> src0_reg_str , instr -> immediate + instr -> addr )"		3500219	0					
ANR	3500337	Callee	sprintf		3500219	0					
ANR	3500338	Identifier	sprintf		3500219	0					
ANR	3500339	ArgumentList	str		3500219	1					
ANR	3500340	Argument	str		3500219	0					
ANR	3500341	Identifier	str		3500219	0					
ANR	3500342	Argument	"""%s %s, %s, 0x%x"""		3500219	1					
ANR	3500343	PrimaryExpression	"""%s %s, %s, 0x%x"""		3500219	0					
ANR	3500344	Argument	instr -> op_decode . name		3500219	2					
ANR	3500345	MemberAccess	instr -> op_decode . name		3500219	0					
ANR	3500346	PtrMemberAccess	instr -> op_decode		3500219	0					
ANR	3500347	Identifier	instr		3500219	0					
ANR	3500348	Identifier	op_decode		3500219	1					
ANR	3500349	Identifier	name		3500219	1					
ANR	3500350	Argument	instr -> dest_reg_str		3500219	3					
ANR	3500351	PtrMemberAccess	instr -> dest_reg_str		3500219	0					
ANR	3500352	Identifier	instr		3500219	0					
ANR	3500353	Identifier	dest_reg_str		3500219	1					
ANR	3500354	Argument	instr -> src0_reg_str		3500219	4					
ANR	3500355	PtrMemberAccess	instr -> src0_reg_str		3500219	0					
ANR	3500356	Identifier	instr		3500219	0					
ANR	3500357	Identifier	src0_reg_str		3500219	1					
ANR	3500358	Argument	instr -> immediate + instr -> addr		3500219	5					
ANR	3500359	AdditiveExpression	instr -> immediate + instr -> addr		3500219	0		+			
ANR	3500360	PtrMemberAccess	instr -> immediate		3500219	0					
ANR	3500361	Identifier	instr		3500219	0					
ANR	3500362	Identifier	immediate		3500219	1					
ANR	3500363	PtrMemberAccess	instr -> addr		3500219	1					
ANR	3500364	Identifier	instr		3500219	0					
ANR	3500365	Identifier	addr		3500219	1					
ANR	3500366	BreakStatement	break ;	383:2:10192:10197	3500219	9	True				
ANR	3500367	Label	case one_reg :	384:1:10200:10212	3500219	10	True				
ANR	3500368	Identifier	one_reg		3500219	0					
ANR	3500369	ExpressionStatement	"sprintf ( str , ""%s %s"" , instr -> op_decode . name , instr -> src0_reg_str )"	385:2:10216:10282	3500219	11	True				
ANR	3500370	CallExpression	"sprintf ( str , ""%s %s"" , instr -> op_decode . name , instr -> src0_reg_str )"		3500219	0					
ANR	3500371	Callee	sprintf		3500219	0					
ANR	3500372	Identifier	sprintf		3500219	0					
ANR	3500373	ArgumentList	str		3500219	1					
ANR	3500374	Argument	str		3500219	0					
ANR	3500375	Identifier	str		3500219	0					
ANR	3500376	Argument	"""%s %s"""		3500219	1					
ANR	3500377	PrimaryExpression	"""%s %s"""		3500219	0					
ANR	3500378	Argument	instr -> op_decode . name		3500219	2					
ANR	3500379	MemberAccess	instr -> op_decode . name		3500219	0					
ANR	3500380	PtrMemberAccess	instr -> op_decode		3500219	0					
ANR	3500381	Identifier	instr		3500219	0					
ANR	3500382	Identifier	op_decode		3500219	1					
ANR	3500383	Identifier	name		3500219	1					
ANR	3500384	Argument	instr -> src0_reg_str		3500219	3					
ANR	3500385	PtrMemberAccess	instr -> src0_reg_str		3500219	0					
ANR	3500386	Identifier	instr		3500219	0					
ANR	3500387	Identifier	src0_reg_str		3500219	1					
ANR	3500388	BreakStatement	break ;	386:2:10286:10291	3500219	12	True				
ANR	3500389	Label	case two_regs :	387:1:10294:10307	3500219	13	True				
ANR	3500390	Identifier	two_regs		3500219	0					
ANR	3500391	ExpressionStatement	"sprintf ( str , ""%s %s, %s"" , instr -> op_decode . name , instr -> dest_reg_str , instr -> src0_reg_str )"	388:2:10311:10402	3500219	14	True				
ANR	3500392	CallExpression	"sprintf ( str , ""%s %s, %s"" , instr -> op_decode . name , instr -> dest_reg_str , instr -> src0_reg_str )"		3500219	0					
ANR	3500393	Callee	sprintf		3500219	0					
ANR	3500394	Identifier	sprintf		3500219	0					
ANR	3500395	ArgumentList	str		3500219	1					
ANR	3500396	Argument	str		3500219	0					
ANR	3500397	Identifier	str		3500219	0					
ANR	3500398	Argument	"""%s %s, %s"""		3500219	1					
ANR	3500399	PrimaryExpression	"""%s %s, %s"""		3500219	0					
ANR	3500400	Argument	instr -> op_decode . name		3500219	2					
ANR	3500401	MemberAccess	instr -> op_decode . name		3500219	0					
ANR	3500402	PtrMemberAccess	instr -> op_decode		3500219	0					
ANR	3500403	Identifier	instr		3500219	0					
ANR	3500404	Identifier	op_decode		3500219	1					
ANR	3500405	Identifier	name		3500219	1					
ANR	3500406	Argument	instr -> dest_reg_str		3500219	3					
ANR	3500407	PtrMemberAccess	instr -> dest_reg_str		3500219	0					
ANR	3500408	Identifier	instr		3500219	0					
ANR	3500409	Identifier	dest_reg_str		3500219	1					
ANR	3500410	Argument	instr -> src0_reg_str		3500219	4					
ANR	3500411	PtrMemberAccess	instr -> src0_reg_str		3500219	0					
ANR	3500412	Identifier	instr		3500219	0					
ANR	3500413	Identifier	src0_reg_str		3500219	1					
ANR	3500414	BreakStatement	break ;	389:2:10406:10411	3500219	15	True				
ANR	3500415	Label	case three_regs :	390:1:10414:10429	3500219	16	True				
ANR	3500416	Identifier	three_regs		3500219	0					
ANR	3500417	ExpressionStatement	"sprintf ( str , ""%s %s, %s, %s"" , instr -> op_decode . name , instr -> dest_reg_str , instr -> src0_reg_str , instr -> src1_reg_str )"	391:2:10433:10553	3500219	17	True				
ANR	3500418	CallExpression	"sprintf ( str , ""%s %s, %s, %s"" , instr -> op_decode . name , instr -> dest_reg_str , instr -> src0_reg_str , instr -> src1_reg_str )"		3500219	0					
ANR	3500419	Callee	sprintf		3500219	0					
ANR	3500420	Identifier	sprintf		3500219	0					
ANR	3500421	ArgumentList	str		3500219	1					
ANR	3500422	Argument	str		3500219	0					
ANR	3500423	Identifier	str		3500219	0					
ANR	3500424	Argument	"""%s %s, %s, %s"""		3500219	1					
ANR	3500425	PrimaryExpression	"""%s %s, %s, %s"""		3500219	0					
ANR	3500426	Argument	instr -> op_decode . name		3500219	2					
ANR	3500427	MemberAccess	instr -> op_decode . name		3500219	0					
ANR	3500428	PtrMemberAccess	instr -> op_decode		3500219	0					
ANR	3500429	Identifier	instr		3500219	0					
ANR	3500430	Identifier	op_decode		3500219	1					
ANR	3500431	Identifier	name		3500219	1					
ANR	3500432	Argument	instr -> dest_reg_str		3500219	3					
ANR	3500433	PtrMemberAccess	instr -> dest_reg_str		3500219	0					
ANR	3500434	Identifier	instr		3500219	0					
ANR	3500435	Identifier	dest_reg_str		3500219	1					
ANR	3500436	Argument	instr -> src0_reg_str		3500219	4					
ANR	3500437	PtrMemberAccess	instr -> src0_reg_str		3500219	0					
ANR	3500438	Identifier	instr		3500219	0					
ANR	3500439	Identifier	src0_reg_str		3500219	1					
ANR	3500440	Argument	instr -> src1_reg_str		3500219	5					
ANR	3500441	PtrMemberAccess	instr -> src1_reg_str		3500219	0					
ANR	3500442	Identifier	instr		3500219	0					
ANR	3500443	Identifier	src1_reg_str		3500219	1					
ANR	3500444	BreakStatement	break ;	393:2:10557:10562	3500219	18	True				
ANR	3500445	Label	case reg_csr :	394:1:10565:10577	3500219	19	True				
ANR	3500446	Identifier	reg_csr		3500219	0					
ANR	3500447	ExpressionStatement	"sprintf ( str , ""%s %s, %s"" , instr -> op_decode . name , instr -> csr_reg_str , instr -> src0_reg_str )"	395:2:10581:10671	3500219	20	True				
ANR	3500448	CallExpression	"sprintf ( str , ""%s %s, %s"" , instr -> op_decode . name , instr -> csr_reg_str , instr -> src0_reg_str )"		3500219	0					
ANR	3500449	Callee	sprintf		3500219	0					
ANR	3500450	Identifier	sprintf		3500219	0					
ANR	3500451	ArgumentList	str		3500219	1					
ANR	3500452	Argument	str		3500219	0					
ANR	3500453	Identifier	str		3500219	0					
ANR	3500454	Argument	"""%s %s, %s"""		3500219	1					
ANR	3500455	PrimaryExpression	"""%s %s, %s"""		3500219	0					
ANR	3500456	Argument	instr -> op_decode . name		3500219	2					
ANR	3500457	MemberAccess	instr -> op_decode . name		3500219	0					
ANR	3500458	PtrMemberAccess	instr -> op_decode		3500219	0					
ANR	3500459	Identifier	instr		3500219	0					
ANR	3500460	Identifier	op_decode		3500219	1					
ANR	3500461	Identifier	name		3500219	1					
ANR	3500462	Argument	instr -> csr_reg_str		3500219	3					
ANR	3500463	PtrMemberAccess	instr -> csr_reg_str		3500219	0					
ANR	3500464	Identifier	instr		3500219	0					
ANR	3500465	Identifier	csr_reg_str		3500219	1					
ANR	3500466	Argument	instr -> src0_reg_str		3500219	4					
ANR	3500467	PtrMemberAccess	instr -> src0_reg_str		3500219	0					
ANR	3500468	Identifier	instr		3500219	0					
ANR	3500469	Identifier	src0_reg_str		3500219	1					
ANR	3500470	BreakStatement	break ;	396:2:10675:10680	3500219	21	True				
ANR	3500471	Label	case csr_reg :	397:1:10683:10695	3500219	22	True				
ANR	3500472	Identifier	csr_reg		3500219	0					
ANR	3500473	ExpressionStatement	"sprintf ( str , ""%s %s, %s"" , instr -> op_decode . name , instr -> dest_reg_str , instr -> csr_reg_str )"	398:2:10699:10789	3500219	23	True				
ANR	3500474	CallExpression	"sprintf ( str , ""%s %s, %s"" , instr -> op_decode . name , instr -> dest_reg_str , instr -> csr_reg_str )"		3500219	0					
ANR	3500475	Callee	sprintf		3500219	0					
ANR	3500476	Identifier	sprintf		3500219	0					
ANR	3500477	ArgumentList	str		3500219	1					
ANR	3500478	Argument	str		3500219	0					
ANR	3500479	Identifier	str		3500219	0					
ANR	3500480	Argument	"""%s %s, %s"""		3500219	1					
ANR	3500481	PrimaryExpression	"""%s %s, %s"""		3500219	0					
ANR	3500482	Argument	instr -> op_decode . name		3500219	2					
ANR	3500483	MemberAccess	instr -> op_decode . name		3500219	0					
ANR	3500484	PtrMemberAccess	instr -> op_decode		3500219	0					
ANR	3500485	Identifier	instr		3500219	0					
ANR	3500486	Identifier	op_decode		3500219	1					
ANR	3500487	Identifier	name		3500219	1					
ANR	3500488	Argument	instr -> dest_reg_str		3500219	3					
ANR	3500489	PtrMemberAccess	instr -> dest_reg_str		3500219	0					
ANR	3500490	Identifier	instr		3500219	0					
ANR	3500491	Identifier	dest_reg_str		3500219	1					
ANR	3500492	Argument	instr -> csr_reg_str		3500219	4					
ANR	3500493	PtrMemberAccess	instr -> csr_reg_str		3500219	0					
ANR	3500494	Identifier	instr		3500219	0					
ANR	3500495	Identifier	csr_reg_str		3500219	1					
ANR	3500496	BreakStatement	break ;	399:2:10793:10798	3500219	24	True				
ANR	3500497	Label	case imm26 :	400:1:10801:10811	3500219	25	True				
ANR	3500498	Identifier	imm26		3500219	0					
ANR	3500499	ExpressionStatement	"sprintf ( str , ""%s 0x%x"" , instr -> op_decode . name , instr -> immediate + instr -> addr )"	402:2:10861:10940	3500219	26	True				
ANR	3500500	CallExpression	"sprintf ( str , ""%s 0x%x"" , instr -> op_decode . name , instr -> immediate + instr -> addr )"		3500219	0					
ANR	3500501	Callee	sprintf		3500219	0					
ANR	3500502	Identifier	sprintf		3500219	0					
ANR	3500503	ArgumentList	str		3500219	1					
ANR	3500504	Argument	str		3500219	0					
ANR	3500505	Identifier	str		3500219	0					
ANR	3500506	Argument	"""%s 0x%x"""		3500219	1					
ANR	3500507	PrimaryExpression	"""%s 0x%x"""		3500219	0					
ANR	3500508	Argument	instr -> op_decode . name		3500219	2					
ANR	3500509	MemberAccess	instr -> op_decode . name		3500219	0					
ANR	3500510	PtrMemberAccess	instr -> op_decode		3500219	0					
ANR	3500511	Identifier	instr		3500219	0					
ANR	3500512	Identifier	op_decode		3500219	1					
ANR	3500513	Identifier	name		3500219	1					
ANR	3500514	Argument	instr -> immediate + instr -> addr		3500219	3					
ANR	3500515	AdditiveExpression	instr -> immediate + instr -> addr		3500219	0		+			
ANR	3500516	PtrMemberAccess	instr -> immediate		3500219	0					
ANR	3500517	Identifier	instr		3500219	0					
ANR	3500518	Identifier	immediate		3500219	1					
ANR	3500519	PtrMemberAccess	instr -> addr		3500219	1					
ANR	3500520	Identifier	instr		3500219	0					
ANR	3500521	Identifier	addr		3500219	1					
ANR	3500522	BreakStatement	break ;	403:2:10944:10949	3500219	27	True				
ANR	3500523	Label	default :	405:1:11015:11022	3500219	28	True				
ANR	3500524	Identifier	default		3500219	0					
ANR	3500525	ReturnStatement	return - 1 ;	406:2:11026:11035	3500219	29	True				
ANR	3500526	UnaryOperationExpression	- 1		3500219	0					
ANR	3500527	UnaryOperator	-		3500219	0					
ANR	3500528	PrimaryExpression	1		3500219	1					
ANR	3500529	ReturnStatement	return 0 ;	408:1:11041:11049	3500219	4	True				
ANR	3500530	PrimaryExpression	0		3500219	0					
ANR	3500531	ReturnType	static int		3500219	1					
ANR	3500532	Identifier	r_asm_lm32_stringify		3500219	2					
ANR	3500533	ParameterList	"RAsmLm32Instruction * instr , char * str"		3500219	3					
ANR	3500534	Parameter	RAsmLm32Instruction * instr	354:32:9171:9196	3500219	0	True				
ANR	3500535	ParameterType	RAsmLm32Instruction *		3500219	0					
ANR	3500536	Identifier	instr		3500219	1					
ANR	3500537	Parameter	char * str	354:60:9199:9207	3500219	1	True				
ANR	3500538	ParameterType	char *		3500219	0					
ANR	3500539	Identifier	str		3500219	1					
ANR	3500540	CFGEntryNode	ENTRY		3500219		True				
ANR	3500541	CFGExitNode	EXIT		3500219		True				
ANR	3500542	Symbol	instr -> addr		3500219						
ANR	3500543	Symbol	instr -> op_decode		3500219						
ANR	3500544	Symbol	write_reg_names_to_struct		3500219						
ANR	3500545	Symbol	* instr		3500219						
ANR	3500546	Symbol	print_pseudo_instruction		3500219						
ANR	3500547	Symbol	instr -> immediate		3500219						
ANR	3500548	Symbol	instr -> src1_reg_str		3500219						
ANR	3500549	Symbol	str		3500219						
ANR	3500550	Symbol	instr -> op_decode . name		3500219						
ANR	3500551	Symbol	instr -> src0_reg_str		3500219						
ANR	3500552	Symbol	instr		3500219						
ANR	3500553	Symbol	instr -> dest_reg_str		3500219						
ANR	3500554	Symbol	instr -> pseudoInstruction		3500219						
ANR	3500555	Symbol	instr -> op_decode . type		3500219						
ANR	3500556	Symbol	instr -> csr_reg_str		3500219						
ANR	3500557	Function	r_asm_lm32_destringify	413:0:11061:11165							
ANR	3500558	FunctionDef	"r_asm_lm32_destringify (const char * string , RAsmLm32Instruction * instr)"		3500557	0					
ANR	3500559	CompoundStatement		413:82:11143:11165	3500557	0					
ANR	3500560	ReturnStatement	return - 1 ;	415:1:11154:11163	3500557	0	True				
ANR	3500561	UnaryOperationExpression	- 1		3500557	0					
ANR	3500562	UnaryOperator	-		3500557	0					
ANR	3500563	PrimaryExpression	1		3500557	1					
ANR	3500564	ReturnType	static int		3500557	1					
ANR	3500565	Identifier	r_asm_lm32_destringify		3500557	2					
ANR	3500566	ParameterList	"const char * string , RAsmLm32Instruction * instr"		3500557	3					
ANR	3500567	Parameter	const char * string	413:34:11095:11112	3500557	0	True				
ANR	3500568	ParameterType	const char *		3500557	0					
ANR	3500569	Identifier	string		3500557	1					
ANR	3500570	Parameter	RAsmLm32Instruction * instr	413:54:11115:11140	3500557	1	True				
ANR	3500571	ParameterType	RAsmLm32Instruction *		3500557	0					
ANR	3500572	Identifier	instr		3500557	1					
ANR	3500573	CFGEntryNode	ENTRY		3500557		True				
ANR	3500574	CFGExitNode	EXIT		3500557		True				
ANR	3500575	Symbol	string		3500557						
ANR	3500576	Symbol	instr		3500557						
ANR	3500577	Function	r_asm_lm32_encode	418:0:11168:11258							
ANR	3500578	FunctionDef	"r_asm_lm32_encode (RAsmLm32Instruction * instr , ut32 * val)"		3500577	0					
ANR	3500579	CompoundStatement		418:68:11236:11258	3500577	0					
ANR	3500580	ReturnStatement	return - 1 ;	420:1:11247:11256	3500577	0	True				
ANR	3500581	UnaryOperationExpression	- 1		3500577	0					
ANR	3500582	UnaryOperator	-		3500577	0					
ANR	3500583	PrimaryExpression	1		3500577	1					
ANR	3500584	ReturnType	static int		3500577	1					
ANR	3500585	Identifier	r_asm_lm32_encode		3500577	2					
ANR	3500586	ParameterList	"RAsmLm32Instruction * instr , ut32 * val"		3500577	3					
ANR	3500587	Parameter	RAsmLm32Instruction * instr	418:29:11197:11222	3500577	0	True				
ANR	3500588	ParameterType	RAsmLm32Instruction *		3500577	0					
ANR	3500589	Identifier	instr		3500577	1					
ANR	3500590	Parameter	ut32 * val	418:57:11225:11233	3500577	1	True				
ANR	3500591	ParameterType	ut32 *		3500577	0					
ANR	3500592	Identifier	val		3500577	1					
ANR	3500593	CFGEntryNode	ENTRY		3500577		True				
ANR	3500594	CFGExitNode	EXIT		3500577		True				
ANR	3500595	Symbol	val		3500577						
ANR	3500596	Symbol	instr		3500577						
ANR	3500597	Function	assemble	423:0:11261:11341							
ANR	3500598	FunctionDef	"assemble (RAsm * a , RAsmOp * ao , const char * str)"		3500597	0					
ANR	3500599	CompoundStatement		423:58:11319:11341	3500597	0					
ANR	3500600	ReturnStatement	return - 1 ;	425:1:11330:11339	3500597	0	True				
ANR	3500601	UnaryOperationExpression	- 1		3500597	0					
ANR	3500602	UnaryOperator	-		3500597	0					
ANR	3500603	PrimaryExpression	1		3500597	1					
ANR	3500604	ReturnType	static int		3500597	1					
ANR	3500605	Identifier	assemble		3500597	2					
ANR	3500606	ParameterList	"RAsm * a , RAsmOp * ao , const char * str"		3500597	3					
ANR	3500607	Parameter	RAsm * a	423:20:11281:11287	3500597	0	True				
ANR	3500608	ParameterType	RAsm *		3500597	0					
ANR	3500609	Identifier	a		3500597	1					
ANR	3500610	Parameter	RAsmOp * ao	423:29:11290:11299	3500597	1	True				
ANR	3500611	ParameterType	RAsmOp *		3500597	0					
ANR	3500612	Identifier	ao		3500597	1					
ANR	3500613	Parameter	const char * str	423:41:11302:11316	3500597	2	True				
ANR	3500614	ParameterType	const char *		3500597	0					
ANR	3500615	Identifier	str		3500597	1					
ANR	3500616	CFGEntryNode	ENTRY		3500597		True				
ANR	3500617	CFGExitNode	EXIT		3500597		True				
ANR	3500618	Symbol	str		3500597						
ANR	3500619	Symbol	a		3500597						
ANR	3500620	Symbol	ao		3500597						
ANR	3500621	Function	disassemble	429:0:11351:11871							
ANR	3500622	FunctionDef	"disassemble (RAsm * a , RAsmOp * op , const ut8 * buf , int len)"		3500621	0					
ANR	3500623	CompoundStatement		429:69:11420:11871	3500621	0					
ANR	3500624	IdentifierDeclStatement	RAsmLm32Instruction instr = { 0 } ;	430:1:11423:11454	3500621	0	True				
ANR	3500625	IdentifierDecl	instr = { 0 }		3500621	0					
ANR	3500626	IdentifierDeclType	RAsmLm32Instruction		3500621	0					
ANR	3500627	Identifier	instr		3500621	1					
ANR	3500628	AssignmentExpression	instr = { 0 }		3500621	2		=			
ANR	3500629	Identifier	instr		3500621	0					
ANR	3500630	InitializerList	0		3500621	1					
ANR	3500631	PrimaryExpression	0		3500621	0					
ANR	3500632	ExpressionStatement	instr . value = buf [ 0 ] << 24 | buf [ 1 ] << 16 | buf [ 2 ] << 8 | buf [ 3 ]	431:1:11457:11521	3500621	1	True				
ANR	3500633	AssignmentExpression	instr . value = buf [ 0 ] << 24 | buf [ 1 ] << 16 | buf [ 2 ] << 8 | buf [ 3 ]		3500621	0		=			
ANR	3500634	MemberAccess	instr . value		3500621	0					
ANR	3500635	Identifier	instr		3500621	0					
ANR	3500636	Identifier	value		3500621	1					
ANR	3500637	InclusiveOrExpression	buf [ 0 ] << 24 | buf [ 1 ] << 16 | buf [ 2 ] << 8 | buf [ 3 ]		3500621	1		|			
ANR	3500638	ShiftExpression	buf [ 0 ] << 24		3500621	0		<<			
ANR	3500639	ArrayIndexing	buf [ 0 ]		3500621	0					
ANR	3500640	Identifier	buf		3500621	0					
ANR	3500641	PrimaryExpression	0		3500621	1					
ANR	3500642	PrimaryExpression	24		3500621	1					
ANR	3500643	InclusiveOrExpression	buf [ 1 ] << 16 | buf [ 2 ] << 8 | buf [ 3 ]		3500621	1		|			
ANR	3500644	ShiftExpression	buf [ 1 ] << 16		3500621	0		<<			
ANR	3500645	ArrayIndexing	buf [ 1 ]		3500621	0					
ANR	3500646	Identifier	buf		3500621	0					
ANR	3500647	PrimaryExpression	1		3500621	1					
ANR	3500648	PrimaryExpression	16		3500621	1					
ANR	3500649	InclusiveOrExpression	buf [ 2 ] << 8 | buf [ 3 ]		3500621	1		|			
ANR	3500650	ShiftExpression	buf [ 2 ] << 8		3500621	0		<<			
ANR	3500651	ArrayIndexing	buf [ 2 ]		3500621	0					
ANR	3500652	Identifier	buf		3500621	0					
ANR	3500653	PrimaryExpression	2		3500621	1					
ANR	3500654	PrimaryExpression	8		3500621	1					
ANR	3500655	ArrayIndexing	buf [ 3 ]		3500621	1					
ANR	3500656	Identifier	buf		3500621	0					
ANR	3500657	PrimaryExpression	3		3500621	1					
ANR	3500658	ExpressionStatement	instr . addr = a -> pc	432:1:11524:11542	3500621	2	True				
ANR	3500659	AssignmentExpression	instr . addr = a -> pc		3500621	0		=			
ANR	3500660	MemberAccess	instr . addr		3500621	0					
ANR	3500661	Identifier	instr		3500621	0					
ANR	3500662	Identifier	addr		3500621	1					
ANR	3500663	PtrMemberAccess	a -> pc		3500621	1					
ANR	3500664	Identifier	a		3500621	0					
ANR	3500665	Identifier	pc		3500621	1					
ANR	3500666	IfStatement	if ( r_asm_lm32_decode ( & instr ) )		3500621	3					
ANR	3500667	Condition	r_asm_lm32_decode ( & instr )	433:5:11549:11574	3500621	0	True				
ANR	3500668	CallExpression	r_asm_lm32_decode ( & instr )		3500621	0					
ANR	3500669	Callee	r_asm_lm32_decode		3500621	0					
ANR	3500670	Identifier	r_asm_lm32_decode		3500621	0					
ANR	3500671	ArgumentList	& instr		3500621	1					
ANR	3500672	Argument	& instr		3500621	0					
ANR	3500673	UnaryOperationExpression	& instr		3500621	0					
ANR	3500674	UnaryOperator	&		3500621	0					
ANR	3500675	Identifier	instr		3500621	1					
ANR	3500676	CompoundStatement		5:33:156:156	3500621	1					
ANR	3500677	ExpressionStatement	"r_strbuf_set ( & op -> buf_asm , ""invalid"" )"	434:2:11581:11619	3500621	0	True				
ANR	3500678	CallExpression	"r_strbuf_set ( & op -> buf_asm , ""invalid"" )"		3500621	0					
ANR	3500679	Callee	r_strbuf_set		3500621	0					
ANR	3500680	Identifier	r_strbuf_set		3500621	0					
ANR	3500681	ArgumentList	& op -> buf_asm		3500621	1					
ANR	3500682	Argument	& op -> buf_asm		3500621	0					
ANR	3500683	UnaryOperationExpression	& op -> buf_asm		3500621	0					
ANR	3500684	UnaryOperator	&		3500621	0					
ANR	3500685	PtrMemberAccess	op -> buf_asm		3500621	1					
ANR	3500686	Identifier	op		3500621	0					
ANR	3500687	Identifier	buf_asm		3500621	1					
ANR	3500688	Argument	"""invalid"""		3500621	1					
ANR	3500689	PrimaryExpression	"""invalid"""		3500621	0					
ANR	3500690	ExpressionStatement	a -> invhex = 1	435:2:11623:11636	3500621	1	True				
ANR	3500691	AssignmentExpression	a -> invhex = 1		3500621	0		=			
ANR	3500692	PtrMemberAccess	a -> invhex		3500621	0					
ANR	3500693	Identifier	a		3500621	0					
ANR	3500694	Identifier	invhex		3500621	1					
ANR	3500695	PrimaryExpression	1		3500621	1					
ANR	3500696	ReturnStatement	return - 1 ;	436:2:11640:11649	3500621	2	True				
ANR	3500697	UnaryOperationExpression	- 1		3500621	0					
ANR	3500698	UnaryOperator	-		3500621	0					
ANR	3500699	PrimaryExpression	1		3500621	1					
ANR	3500700	IfStatement	"if ( r_asm_lm32_stringify ( & instr , r_strbuf_get ( & op -> buf_asm ) ) )"		3500621	4					
ANR	3500701	Condition	"r_asm_lm32_stringify ( & instr , r_strbuf_get ( & op -> buf_asm ) )"	439:5:11723:11780	3500621	0	True				
ANR	3500702	CallExpression	"r_asm_lm32_stringify ( & instr , r_strbuf_get ( & op -> buf_asm ) )"		3500621	0					
ANR	3500703	Callee	r_asm_lm32_stringify		3500621	0					
ANR	3500704	Identifier	r_asm_lm32_stringify		3500621	0					
ANR	3500705	ArgumentList	& instr		3500621	1					
ANR	3500706	Argument	& instr		3500621	0					
ANR	3500707	UnaryOperationExpression	& instr		3500621	0					
ANR	3500708	UnaryOperator	&		3500621	0					
ANR	3500709	Identifier	instr		3500621	1					
ANR	3500710	Argument	r_strbuf_get ( & op -> buf_asm )		3500621	1					
ANR	3500711	CallExpression	r_strbuf_get ( & op -> buf_asm )		3500621	0					
ANR	3500712	Callee	r_strbuf_get		3500621	0					
ANR	3500713	Identifier	r_strbuf_get		3500621	0					
ANR	3500714	ArgumentList	& op -> buf_asm		3500621	1					
ANR	3500715	Argument	& op -> buf_asm		3500621	0					
ANR	3500716	UnaryOperationExpression	& op -> buf_asm		3500621	0					
ANR	3500717	UnaryOperator	&		3500621	0					
ANR	3500718	PtrMemberAccess	op -> buf_asm		3500621	1					
ANR	3500719	Identifier	op		3500621	0					
ANR	3500720	Identifier	buf_asm		3500621	1					
ANR	3500721	CompoundStatement		11:65:362:362	3500621	1					
ANR	3500722	ExpressionStatement	"r_strbuf_set ( & op -> buf_asm , ""invalid"" )"	440:2:11787:11825	3500621	0	True				
ANR	3500723	CallExpression	"r_strbuf_set ( & op -> buf_asm , ""invalid"" )"		3500621	0					
ANR	3500724	Callee	r_strbuf_set		3500621	0					
ANR	3500725	Identifier	r_strbuf_set		3500621	0					
ANR	3500726	ArgumentList	& op -> buf_asm		3500621	1					
ANR	3500727	Argument	& op -> buf_asm		3500621	0					
ANR	3500728	UnaryOperationExpression	& op -> buf_asm		3500621	0					
ANR	3500729	UnaryOperator	&		3500621	0					
ANR	3500730	PtrMemberAccess	op -> buf_asm		3500621	1					
ANR	3500731	Identifier	op		3500621	0					
ANR	3500732	Identifier	buf_asm		3500621	1					
ANR	3500733	Argument	"""invalid"""		3500621	1					
ANR	3500734	PrimaryExpression	"""invalid"""		3500621	0					
ANR	3500735	ExpressionStatement	a -> invhex = 1	441:2:11829:11842	3500621	1	True				
ANR	3500736	AssignmentExpression	a -> invhex = 1		3500621	0		=			
ANR	3500737	PtrMemberAccess	a -> invhex		3500621	0					
ANR	3500738	Identifier	a		3500621	0					
ANR	3500739	Identifier	invhex		3500621	1					
ANR	3500740	PrimaryExpression	1		3500621	1					
ANR	3500741	ReturnStatement	return - 1 ;	442:2:11846:11855	3500621	2	True				
ANR	3500742	UnaryOperationExpression	- 1		3500621	0					
ANR	3500743	UnaryOperator	-		3500621	0					
ANR	3500744	PrimaryExpression	1		3500621	1					
ANR	3500745	ReturnStatement	return 4 ;	444:1:11861:11869	3500621	5	True				
ANR	3500746	PrimaryExpression	4		3500621	0					
ANR	3500747	ReturnType	static int		3500621	1					
ANR	3500748	Identifier	disassemble		3500621	2					
ANR	3500749	ParameterList	"RAsm * a , RAsmOp * op , const ut8 * buf , int len"		3500621	3					
ANR	3500750	Parameter	RAsm * a	429:23:11374:11380	3500621	0	True				
ANR	3500751	ParameterType	RAsm *		3500621	0					
ANR	3500752	Identifier	a		3500621	1					
ANR	3500753	Parameter	RAsmOp * op	429:32:11383:11392	3500621	1	True				
ANR	3500754	ParameterType	RAsmOp *		3500621	0					
ANR	3500755	Identifier	op		3500621	1					
ANR	3500756	Parameter	const ut8 * buf	429:44:11395:11408	3500621	2	True				
ANR	3500757	ParameterType	const ut8 *		3500621	0					
ANR	3500758	Identifier	buf		3500621	1					
ANR	3500759	Parameter	int len	429:60:11411:11417	3500621	3	True				
ANR	3500760	ParameterType	int		3500621	0					
ANR	3500761	Identifier	len		3500621	1					
ANR	3500762	CFGEntryNode	ENTRY		3500621		True				
ANR	3500763	CFGExitNode	EXIT		3500621		True				
ANR	3500764	Symbol	a		3500621						
ANR	3500765	Symbol	op		3500621						
ANR	3500766	Symbol	* buf		3500621						
ANR	3500767	Symbol	a -> invhex		3500621						
ANR	3500768	Symbol	instr . addr		3500621						
ANR	3500769	Symbol	* a		3500621						
ANR	3500770	Symbol	a -> pc		3500621						
ANR	3500771	Symbol	r_asm_lm32_decode		3500621						
ANR	3500772	Symbol	instr . value		3500621						
ANR	3500773	Symbol	& instr		3500621						
ANR	3500774	Symbol	buf		3500621						
ANR	3500775	Symbol	len		3500621						
ANR	3500776	Symbol	r_strbuf_get		3500621						
ANR	3500777	Symbol	r_asm_lm32_stringify		3500621						
ANR	3500778	Symbol	instr		3500621						
ANR	3500779	Symbol	& op -> buf_asm		3500621						
ANR	3500780	DeclStmt									
ANR	3500781	Decl							RAsmPlugin	RAsmPlugin	r_asm_plugin_lm32
ANR	3500782	DeclStmt									
ANR	3500783	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
